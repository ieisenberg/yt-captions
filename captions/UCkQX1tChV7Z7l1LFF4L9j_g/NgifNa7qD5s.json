[
  {
    "text": "[Music]",
    "start": "570",
    "end": "9269"
  },
  {
    "text": "so we're live uh welcome to the Android Services Black Magic Talk um I wasn't",
    "start": "13519",
    "end": "19480"
  },
  {
    "text": "responsible for the title um let me just give you a brief ideas to what we're",
    "start": "19480",
    "end": "24800"
  },
  {
    "text": "going to talk about um specifically this talk is geared for those of you that are interested in understanding how Android",
    "start": "24800",
    "end": "31880"
  },
  {
    "text": "Works underneath the hood so it's you know yes if you're Android developers",
    "start": "31880",
    "end": "37160"
  },
  {
    "text": "you can for the most part ignore a large section of this because you just tend to",
    "start": "37160",
    "end": "42239"
  },
  {
    "text": "you know consume the apis and things hopefully tend to work uh rather than not work but if you want to know how",
    "start": "42239",
    "end": "48280"
  },
  {
    "text": "they work what's under the hood and how are these Services put together essentially this is the talk for you um",
    "start": "48280",
    "end": "54800"
  },
  {
    "text": "my name is Alexander garganta I uh happen to um I'm actually local Liv in",
    "start": "54800",
    "end": "60199"
  },
  {
    "text": "live actually close to San Francisco I moved out of San Francisco recently I work for a company called Maracana we",
    "start": "60199",
    "end": "65400"
  },
  {
    "text": "provide training on open source Technologies Android in particular I deliver classes on Android right corser",
    "start": "65400",
    "end": "71200"
  },
  {
    "text": "on Android mostly internals security that sort of stuff I also happen to run the San Francisco Android User Group",
    "start": "71200",
    "end": "77520"
  },
  {
    "text": "also Java one and a couple other ones but uh that's kind of how I get my uh pulse on the Android community and by",
    "start": "77520",
    "end": "83640"
  },
  {
    "text": "you know coming to conferences like these and talking to you guys um so that's about me um um let's get started",
    "start": "83640",
    "end": "93399"
  },
  {
    "text": "and by the way for those of you that just walking late do want to re reiterate they will be recording while I'm recording this entire you know talk",
    "start": "93399",
    "end": "100159"
  },
  {
    "text": "and we'll be posting the video from this on our site and I'll show you again the URL at the end so let's just see by show",
    "start": "100159",
    "end": "107280"
  },
  {
    "text": "of hands how many of you have never seen a diagram like this prior to coming to this",
    "start": "107280",
    "end": "112600"
  },
  {
    "text": "conference oh yeah one two three okay awesome so most of you have and this is",
    "start": "112600",
    "end": "118719"
  },
  {
    "text": "not about this diagram it's not about how the layers you know are put together",
    "start": "118719",
    "end": "124920"
  },
  {
    "text": "it's more about you know understanding what happens when for example an application like a browser wants to talk",
    "start": "124920",
    "end": "131920"
  },
  {
    "text": "to you know grab your location ends up talking to some sort of a h ends of talking to some sort of a driver how",
    "start": "131920",
    "end": "138640"
  },
  {
    "text": "does that flow work how are these Services put together so it's really more about this part of the stack but",
    "start": "138640",
    "end": "147120"
  },
  {
    "text": "with an idea that we want to understand the total flow through the Android stack to understand",
    "start": "147120",
    "end": "152720"
  },
  {
    "text": "essentially how do these Services essentially give us you know or implement the apis we want to use as",
    "start": "152720",
    "end": "158720"
  },
  {
    "text": "developers so let's um let's get into this but before we do I actually added a slide recently on the Android startup I",
    "start": "158720",
    "end": "165760"
  },
  {
    "text": "think it's it's going to help explain some of the things we'll see later I'm assuming that most of you have some idea",
    "start": "165760",
    "end": "171400"
  },
  {
    "text": "as to how Android boots up but let me just go over this quickly um when you first turn on an Android device what",
    "start": "171400",
    "end": "178000"
  },
  {
    "text": "typically happens is your CPU execute some hardwired boot ROM code which tends",
    "start": "178000",
    "end": "183360"
  },
  {
    "text": "to load this first stage boot loader which tends to find then the second stage boot loader which then loads or",
    "start": "183360",
    "end": "189000"
  },
  {
    "text": "mounts your boot partition finds the kernel loads the kernel initi initializes the kernel or asks the",
    "start": "189000",
    "end": "195040"
  },
  {
    "text": "kernel to initialize Itself by passing it some parameters and so on and so on the Kernel does its thing and then the",
    "start": "195040",
    "end": "200760"
  },
  {
    "text": "kernel goes and initializes some some drivers like the binder driver which we'll see later on and then executes",
    "start": "200760",
    "end": "208319"
  },
  {
    "text": "this in it I don't know why this got cut off the init uh program which is",
    "start": "208319",
    "end": "213439"
  },
  {
    "text": "basically the very first user space um executable this in it in turn",
    "start": "213439",
    "end": "219400"
  },
  {
    "text": "essentially goes and launches a whole bunch of demons or demons and some of like some of us like to call them like",
    "start": "219400",
    "end": "225760"
  },
  {
    "text": "for example U have ND service manager VD ND instal D and so on and so on and",
    "start": "225760",
    "end": "231599"
  },
  {
    "text": "later on it gets to this zygote process zygote is basically the first dovic or I",
    "start": "231599",
    "end": "237519"
  },
  {
    "text": "should say Android runtime or the do virtual machine process that run that runs which then Forks itself and starts",
    "start": "237519",
    "end": "246239"
  },
  {
    "text": "this system server system server goes and executes some Java class called",
    "start": "246239",
    "end": "251680"
  },
  {
    "text": "system server interestingly enough loads a whole bunch of jni libraries as you will see and then goes and loads um",
    "start": "251680",
    "end": "260120"
  },
  {
    "text": "whole host of services like the activity manager service package manager service power manager service Wi-Fi manager",
    "start": "260120",
    "end": "266400"
  },
  {
    "text": "service and so on and so on and so on so our goal here here is to understand essentially this this part of the of",
    "start": "266400",
    "end": "273440"
  },
  {
    "text": "this picture there are other services that are not necessarily built in Java",
    "start": "273440",
    "end": "278600"
  },
  {
    "text": "and they're not even part of a system server like for example the surface flinger um the",
    "start": "278600",
    "end": "283960"
  },
  {
    "text": "the audio flinger I guess I should say media player media player service camera service and so on and so on they also",
    "start": "283960",
    "end": "290680"
  },
  {
    "text": "are part of the services they are just not inside of the system server so with",
    "start": "290680",
    "end": "296120"
  },
  {
    "text": "that said please go ahead no IM media server started from in it",
    "start": "296120",
    "end": "303680"
  },
  {
    "text": "zygote Forks itself to start the system server it used to be the system server was responsible for starting some of the",
    "start": "303680",
    "end": "310240"
  },
  {
    "text": "things like camera um and so on and so on Surface flinger but that's no longer inside of system server so all of this",
    "start": "310240",
    "end": "317400"
  },
  {
    "text": "by the way assumes Ice Cream Sandwich and some of the some of the lower levels",
    "start": "317400",
    "end": "323120"
  },
  {
    "text": "assume my particular phone the Galaxy Nexus which assume most of you have well a large portion of you have any other",
    "start": "323120",
    "end": "331280"
  },
  {
    "text": "questions cool so let's take a look at some of the services and so the goal",
    "start": "331280",
    "end": "336520"
  },
  {
    "text": "here is not not to go and and dissect every service because we don't have the time nor do I actually know how every",
    "start": "336520",
    "end": "343160"
  },
  {
    "text": "single service on Android works I've only you know been looking at this for years but I haven't really gone into",
    "start": "343160",
    "end": "349039"
  },
  {
    "text": "everything um but the goal is to understand how they they are similar in",
    "start": "349039",
    "end": "354240"
  },
  {
    "text": "terms of how they're put put together and also yet how they're different and we'll start start off with a simple",
    "start": "354240",
    "end": "360560"
  },
  {
    "text": "service and in fact you'll see that most of the rest of the this diagrams or or or the slide deck will be just diagrams",
    "start": "360560",
    "end": "366800"
  },
  {
    "text": "like these which B bunch of boxes and bunch of lines you know pointing from these from these boxes uh or between the",
    "start": "366800",
    "end": "373960"
  },
  {
    "text": "boxes I should say and my my job is to take you through essentially this flow",
    "start": "373960",
    "end": "379440"
  },
  {
    "text": "you know from say an application that wants to consume a service to then how the service actually does its job so",
    "start": "379440",
    "end": "385520"
  },
  {
    "text": "we're going to start with the vibrator because I find that's one of the simpl services in terms of How It's put",
    "start": "385520",
    "end": "391440"
  },
  {
    "text": "together yet it kind of has this full stack so it goes all the way from an application that can use it down to a",
    "start": "391440",
    "end": "397639"
  },
  {
    "text": "kernel driver they can actually do something and interact with some sort of a device so for example vibrator um say",
    "start": "397639",
    "end": "405520"
  },
  {
    "text": "you had an example activity that wants to vibrate device for some sort of heptic feedbacks um and you want to now",
    "start": "405520",
    "end": "413960"
  },
  {
    "text": "initiate that vibration the way you do this is you end up using something called a vibrator it's essentially right",
    "start": "413960",
    "end": "420560"
  },
  {
    "text": "here you you instantiate literally just do a new on it not all services are used",
    "start": "420560",
    "end": "425639"
  },
  {
    "text": "this way this one you essentially directly grab a vibrator now what happens when you actually say hey",
    "start": "425639",
    "end": "430680"
  },
  {
    "text": "vibrator you know I want to vibrate the device well before you can even do that something else needs to happen Okay so",
    "start": "430680",
    "end": "436960"
  },
  {
    "text": "we need to backtrack a little bit when Android booted just to remind you going back over here zygo started a system",
    "start": "436960",
    "end": "444000"
  },
  {
    "text": "server well one of the things a system server did which is now over here is that this system server Java class",
    "start": "444000",
    "end": "452280"
  },
  {
    "text": "instantiated a vibrator service essentially as a as another Java class",
    "start": "452280",
    "end": "458800"
  },
  {
    "text": "which binds to some jni shared libraries which we'll get to later on but that",
    "start": "458800",
    "end": "464840"
  },
  {
    "text": "that's not important just yet that vibrator service it basically ends up",
    "start": "464840",
    "end": "469960"
  },
  {
    "text": "being it it extends from something called a VI I vibrator service do stub",
    "start": "469960",
    "end": "475039"
  },
  {
    "text": "where does this come from what does this do well the communication between Android applications and these services",
    "start": "475039",
    "end": "481800"
  },
  {
    "text": "for the most part happens through this IPC framework in Android it's called binder so coming just to back check a",
    "start": "481800",
    "end": "488599"
  },
  {
    "text": "little bit more coming back over here most of the bridging from this part of the stack to this part of the stack is",
    "start": "488599",
    "end": "495199"
  },
  {
    "text": "through IPC and most of that is implemented through binder binder is basically a not a custom but well we we",
    "start": "495199",
    "end": "503400"
  },
  {
    "text": "should say a custom essentially IPC framework for Android but it doesn't come from Android it's actually something that used to exist back in the",
    "start": "503400",
    "end": "509919"
  },
  {
    "text": "BOS days if you some of you remember BOS we all we also see that the jump from",
    "start": "509919",
    "end": "515800"
  },
  {
    "text": "here to here essentially from the application framework to Native layer happens for the most part through jni",
    "start": "515800",
    "end": "522000"
  },
  {
    "text": "which essentially is the Java native interface that enables a dovic virtual machine to load you know shared",
    "start": "522000",
    "end": "527800"
  },
  {
    "text": "libraries written in CN C++ and then bind to the functions implemented by those and ex essentially map Java",
    "start": "527800",
    "end": "534680"
  },
  {
    "text": "methods onto these cc++ function uh um functions and execut at runtime and then",
    "start": "534680",
    "end": "540640"
  },
  {
    "text": "most of the essentially uh uh conversion if you will or jump from the Native layer or the user space to Kernel",
    "start": "540640",
    "end": "546519"
  },
  {
    "text": "happens through system calls a lot of which is implemented through simple I octal or simple IO wres reads and so on",
    "start": "546519",
    "end": "554040"
  },
  {
    "text": "and so on to the drivers so let's go back to the vibrator so when the system server basically loaded this vibrator",
    "start": "554040",
    "end": "561560"
  },
  {
    "text": "service well that vibrator service basically extended from this stub this stub is part of this I vibrator service",
    "start": "561560",
    "end": "568200"
  },
  {
    "text": "interface this interface is implemented in a language called aidl stands for Android interface definition",
    "start": "568200",
    "end": "574800"
  },
  {
    "text": "language which isped of bind there and it describes the capabilities of the service to the outside world namely you",
    "start": "574800",
    "end": "581240"
  },
  {
    "text": "guys the clients of this service assuming you are developers and now",
    "start": "581240",
    "end": "587480"
  },
  {
    "text": "we'll see how that what role that plays what's interesting is that this vibr service even though it's a service needs",
    "start": "587480",
    "end": "593760"
  },
  {
    "text": "to be somehow discovered at runtime and now we have to go and talk about this thing the service man manager what is",
    "start": "593760",
    "end": "599959"
  },
  {
    "text": "the purpose of this the service manager is one of these demons that get started",
    "start": "599959",
    "end": "605399"
  },
  {
    "text": "early on which is right here by in it and its job is to essentially serve as a",
    "start": "605399",
    "end": "611279"
  },
  {
    "text": "naming service for these services that you actually wish to use and so what",
    "start": "611279",
    "end": "616320"
  },
  {
    "text": "happens is the service manager goes to this kernel driver called binder and",
    "start": "616320",
    "end": "621600"
  },
  {
    "text": "registers with this driver as what's known as a context manager and there can only be one context manager and so the",
    "start": "621600",
    "end": "627760"
  },
  {
    "text": "idea is that if anyone wants to get a context manager from this point forward all they need to do is go to the binder",
    "start": "627760",
    "end": "633720"
  },
  {
    "text": "driver and say hey who's your context manager and they get essentially a pseudo pointer back at the service",
    "start": "633720",
    "end": "639240"
  },
  {
    "text": "manager so let's go back again to this diagram oops sorry vibrator so system",
    "start": "639240",
    "end": "645600"
  },
  {
    "text": "server builds the vibrator service then what it does it goes to the binder and",
    "start": "645600",
    "end": "652320"
  },
  {
    "text": "says hey binder where is your service manager it discovers that the service manager is right here because service",
    "start": "652320",
    "end": "659320"
  },
  {
    "text": "manager pre-registered then the system server goes and says hey service manager how about you remember where the",
    "start": "659320",
    "end": "666079"
  },
  {
    "text": "vibrator services and essentially what happens is that now after this call there's a pseudo pointer back to the",
    "start": "666079",
    "end": "672760"
  },
  {
    "text": "vibrator service from the service manager okay and how thises this P",
    "start": "672760",
    "end": "678440"
  },
  {
    "text": "pointer is remembered under this name vibrator it's literally just a string",
    "start": "678440",
    "end": "684399"
  },
  {
    "text": "text so let's go back to our client okay so now our client finally wants to the",
    "start": "684399",
    "end": "689680"
  },
  {
    "text": "device well what it does when it builds the vibrator the vibrator is essentially as you will see nothing more than a",
    "start": "689680",
    "end": "695839"
  },
  {
    "text": "little proxy vibrator actually goes first and foremost before the vibration happens over to binder and says hey",
    "start": "695839",
    "end": "702920"
  },
  {
    "text": "binder where's the service manager he gets it the same way the Ser the system server did then the vibrator goes after",
    "start": "702920",
    "end": "709680"
  },
  {
    "text": "he does that it goes to the service manager and says hey service manager I need the vibrate service or vibrator",
    "start": "709680",
    "end": "717040"
  },
  {
    "text": "service and essentially at that point the service manager gives it remember how the service manager had essentially",
    "start": "717040",
    "end": "723560"
  },
  {
    "text": "this Puda pointer well that pointer is now delivered back to the to the vibrator and now you can think of the",
    "start": "723560",
    "end": "728880"
  },
  {
    "text": "vibrator as knowing where this vibrator service is so they discover each other",
    "start": "728880",
    "end": "735360"
  },
  {
    "text": "or the client if you will discover the service at runtime now this discover is usually cach this information is cach so",
    "start": "735360",
    "end": "742120"
  },
  {
    "text": "it's not like you're repeatedly doing this over and over again okay okay so now we have the service we want to talk",
    "start": "742120",
    "end": "747600"
  },
  {
    "text": "to so what happens next now say okay go and vibrate the vibration actually or the request to vibrate doesn't happen",
    "start": "747600",
    "end": "754240"
  },
  {
    "text": "directly through this because we can't you know this lives in a different process alog together we can't talk it",
    "start": "754240",
    "end": "759800"
  },
  {
    "text": "this is where the binder comes into play binder is that IPC or interprocess communication framework so what happens",
    "start": "759800",
    "end": "766639"
  },
  {
    "text": "is that the vibrator actually goes to this proxy from proxy goes to the binder",
    "start": "766639",
    "end": "772360"
  },
  {
    "text": "driver the binder driver executes via something called lip binder and and",
    "start": "772360",
    "end": "778199"
  },
  {
    "text": "another binder thread through this stub a method on the vibrator service to",
    "start": "778199",
    "end": "783880"
  },
  {
    "text": "actually request the vibration so what is the role of the prox in a St well the",
    "start": "783880",
    "end": "789760"
  },
  {
    "text": "vibrator D or the binder driver which is over here is actually very simple in terms of it doesn't know anything about",
    "start": "789760",
    "end": "796040"
  },
  {
    "text": "these rich Java or C++ objects you'd like to pass as request from say a",
    "start": "796040",
    "end": "801480"
  },
  {
    "text": "client to to a service it just knows about simple essentially bytes if you will in fact it talks in terms of the",
    "start": "801480",
    "end": "808279"
  },
  {
    "text": "so-call parcels but that's even beside the point so the purpose of the proxy and the stub so specifically these two",
    "start": "808279",
    "end": "814480"
  },
  {
    "text": "components this proxy and whoops sorry it's kind of hard to draw when the",
    "start": "814480",
    "end": "819760"
  },
  {
    "text": "laptop is at an angle and the stub is to facilitate the marshalling of data from",
    "start": "819760",
    "end": "825440"
  },
  {
    "text": "the Java layer down into something that the binder can understand and from binder back into the essentially think",
    "start": "825440",
    "end": "831680"
  },
  {
    "text": "of it as the Java layer there's of course more than to that that happens behind the scenes but that's pretty much",
    "start": "831680",
    "end": "837720"
  },
  {
    "text": "all we need to understand for the at this time okay so without a prox the",
    "start": "837720",
    "end": "842800"
  },
  {
    "text": "stub it would we would essentially have to talk to the driver directly using I oals and when I say driver I mean binder",
    "start": "842800",
    "end": "850000"
  },
  {
    "text": "and that would be way too low level for our for our Le right so essentially we as developers never really see this",
    "start": "850000",
    "end": "856360"
  },
  {
    "text": "proxim and Stu but when we are talking to this vibrator we are inherently using it in order to get to the surface so",
    "start": "856360",
    "end": "863240"
  },
  {
    "text": "let's assume now we got to the service okay so now you know this the request came from from the vibrator via this",
    "start": "863240",
    "end": "871040"
  },
  {
    "text": "stub into this vibrator service right so you got here from this activity back",
    "start": "871040",
    "end": "876120"
  },
  {
    "text": "into the vi into the binder and then over this way what what happens well this request actually runs inside of a",
    "start": "876120",
    "end": "882959"
  },
  {
    "text": "system server on a thread called a binder thread so binder one of the things it does it maintains a pool of",
    "start": "882959",
    "end": "889160"
  },
  {
    "text": "threads that are used to essentially service these requests and so one of those threads is fetched and now that",
    "start": "889160",
    "end": "896000"
  },
  {
    "text": "thread essentially is responsible for driving that request West so what happens then vibrator in the case of",
    "start": "896000",
    "end": "902160"
  },
  {
    "text": "vibrator specifically what it does it goes and essentially packages that request into a local object that it",
    "start": "902160",
    "end": "909040"
  },
  {
    "text": "calls vibration I believe and it then passes it into a separate thread a",
    "start": "909040",
    "end": "914880"
  },
  {
    "text": "vibration threat that it internally manages and it then Returns the request",
    "start": "914880",
    "end": "919920"
  },
  {
    "text": "back to the client so at that point the client is no longer waiting for that request to complete think of it as an",
    "start": "919920",
    "end": "925800"
  },
  {
    "text": "asynchronous request or you know you set a request then you forget about it you don't have to worry about it right from",
    "start": "925800",
    "end": "932000"
  },
  {
    "text": "that point forward the vibration is supposed to happen through from the vibration service so this vibrator",
    "start": "932000",
    "end": "937240"
  },
  {
    "text": "service executes now its local thread which is which is essentially package or request which says how long should we",
    "start": "937240",
    "end": "943959"
  },
  {
    "text": "vibrate this device or what sort of pattern should we employ to to vibrate this device and at that point the",
    "start": "943959",
    "end": "950920"
  },
  {
    "text": "vibration service wants to execute that request so how does it do it it actually doesn't talk to the driver directly in",
    "start": "950920",
    "end": "956920"
  },
  {
    "text": "fact instead it jumps into this C code or C++ code basically that is the jni",
    "start": "956920",
    "end": "964279"
  },
  {
    "text": "layer and that is inside of something called Android servers shared Library the purpose of this is really nothing",
    "start": "964279",
    "end": "970920"
  },
  {
    "text": "more than to wrap something called H the hardware abstraction layer so what is the purpose of H well different devices",
    "start": "970920",
    "end": "978399"
  },
  {
    "text": "may have different essentially vibration capabilities so different Hardware right",
    "start": "978399",
    "end": "983600"
  },
  {
    "text": "some may have actuator some may have some specific motor some may have other sorts of ways of vibrating or they may",
    "start": "983600",
    "end": "989360"
  },
  {
    "text": "not at all support vibration so the because this can differ different",
    "start": "989360",
    "end": "994880"
  },
  {
    "text": "manufacturers will presumably provide different ways of initiating vibration they will presumably also have different",
    "start": "994880",
    "end": "1001639"
  },
  {
    "text": "uh essentially kernel drivers that know how to do the vibration and so in order",
    "start": "1001639",
    "end": "1007920"
  },
  {
    "text": "for Android porting to be as easy as possible Android essentially creates this abstraction of the vibration device",
    "start": "1007920",
    "end": "1015880"
  },
  {
    "text": "and that is the hardware abstraction layer and this that Hardware exraction layer essentially lives in the user",
    "start": "1015880",
    "end": "1021440"
  },
  {
    "text": "space so not I know there the drivers themselves are essentially are or make",
    "start": "1021440",
    "end": "1027120"
  },
  {
    "text": "up another hardw exraction layer but that's in the in the kernel and so this vibr in the case of Galaxy Nexus for",
    "start": "1027120",
    "end": "1034038"
  },
  {
    "text": "example this vibrator C is already provided by Android out of the box and what it tends to do it literally opens",
    "start": "1034039",
    "end": "1041120"
  },
  {
    "text": "up a uh this this kernel driver or the handle to the kernel driver and writes",
    "start": "1041120",
    "end": "1046480"
  },
  {
    "text": "to the kernel driver doing a simple iio the number of milliseconds for which to",
    "start": "1046480",
    "end": "1052320"
  },
  {
    "text": "vibrate the device in the driver what happens the driver now in the kernel",
    "start": "1052320",
    "end": "1057960"
  },
  {
    "text": "goes and grabs a we clock well first of all locks you know it's internal mutex grabs a weight clock and then changes",
    "start": "1057960",
    "end": "1065320"
  },
  {
    "text": "the pin on a you know on a gpio essentially device which then triggers",
    "start": "1065320",
    "end": "1070600"
  },
  {
    "text": "some motor actuator or something to actually go and do the vibration at that point later on essentially get that",
    "start": "1070600",
    "end": "1076120"
  },
  {
    "text": "expires the the the weight clock is released and essentially the vibration stops the interesting thing about the",
    "start": "1076120",
    "end": "1081880"
  },
  {
    "text": "vibration service is that it can actually implement the pattern right so it's not just about a single vibration",
    "start": "1081880",
    "end": "1088280"
  },
  {
    "text": "what if you want to vibrate for a little bit then stop then vibrate again then stop and so on and so on so that state",
    "start": "1088280",
    "end": "1093400"
  },
  {
    "text": "as to what to execute next what is my next vibration actually lives inside of the vibration service the vibrator",
    "start": "1093400",
    "end": "1100280"
  },
  {
    "text": "service CPP is extremely simple it actually just serves as a bridge it doesn't do any doesn't have any logic",
    "start": "1100280",
    "end": "1106799"
  },
  {
    "text": "inside of it the vibrator does see is again also in this case fairly simple the how tends to be in this case very",
    "start": "1106799",
    "end": "1113000"
  },
  {
    "text": "simple it just essentially causes the driver to to you know do the implement",
    "start": "1113000",
    "end": "1118840"
  },
  {
    "text": "the next vibration and then the this driver knows SC to talk to the actual Hardware okay so does this make sense",
    "start": "1118840",
    "end": "1126520"
  },
  {
    "text": "because as this is essentially we went into a little more detail on this one but this is and it gives you hopefully",
    "start": "1126520",
    "end": "1131760"
  },
  {
    "text": "an idea as to how the services work any questions so",
    "start": "1131760",
    "end": "1137039"
  },
  {
    "text": "far those",
    "start": "1137039",
    "end": "1140720"
  },
  {
    "text": "sorry this stuff so these are additional shared libraries this is basically like",
    "start": "1143559",
    "end": "1148960"
  },
  {
    "text": "Android runtime is part you know something that essentially Powers the dovic and so on and so on the lib binder",
    "start": "1148960",
    "end": "1154480"
  },
  {
    "text": "is what facilitates the communication with binder and there other sort of like Lipsy and what those are just additional",
    "start": "1154480",
    "end": "1159720"
  },
  {
    "text": "shared libraries that are part of this process that they they play a role but not in you know key role in",
    "start": "1159720",
    "end": "1165400"
  },
  {
    "text": "understanding how this works let me just actually make sure you you know just to explain the different components what",
    "start": "1165400",
    "end": "1170840"
  },
  {
    "text": "the responsibilities of different components is and then I'll I'll come back to your question so again the purpose of this the whoops sorry the",
    "start": "1170840",
    "end": "1178360"
  },
  {
    "text": "purpose of the vibrator is to essentially hide from the client you guys the fact that you're even using",
    "start": "1178360",
    "end": "1185120"
  },
  {
    "text": "binder this IPC framework because that tends to be not complicated but involves a little bit of you know additional L",
    "start": "1185120",
    "end": "1191720"
  },
  {
    "text": "handling lookups and whatnot you just using a simple you know Java object to you it looks like a pojo but essentially",
    "start": "1191720",
    "end": "1198080"
  },
  {
    "text": "does a lot of work underneath the hood the purpose of the proxy is to convert the Java request into a binder request",
    "start": "1198080",
    "end": "1205840"
  },
  {
    "text": "the purpose of service manager is to facilitate the lookup and registration of services the purpose of binder is to",
    "start": "1205840",
    "end": "1213600"
  },
  {
    "text": "facilitate the essentially calling one process calling another process through",
    "start": "1213600",
    "end": "1218799"
  },
  {
    "text": "you know essentially you know through this kernel driver so that is the heart of the IPC mechanism on Android the",
    "start": "1218799",
    "end": "1224320"
  },
  {
    "text": "purpose of the stub is to take the binder request and convert it back into a rich Java request the purpose of the",
    "start": "1224320",
    "end": "1231919"
  },
  {
    "text": "system server is to initiate and start our services and register them with the service manager the purpose with a",
    "start": "1231919",
    "end": "1238520"
  },
  {
    "text": "vibrator service is to actually Implement a number of things one is the",
    "start": "1238520",
    "end": "1243640"
  },
  {
    "text": "you know actually to add a little bit of extra logic like Implement a pattern it also by the way does Security checks it",
    "start": "1243640",
    "end": "1250600"
  },
  {
    "text": "checks whether the client is permitted to do the vibration I'll come back to how that works the purpose of this is",
    "start": "1250600",
    "end": "1258000"
  },
  {
    "text": "really just to to bridge from Java or dovic I guess into C the purpose of the",
    "start": "1258000",
    "end": "1263960"
  },
  {
    "text": "hull is to to essentially Bridge from the you know essentially Bridge into the",
    "start": "1263960",
    "end": "1269039"
  },
  {
    "text": "kernel driver using a standard API the reason why again we have H is because we want to allow the manufacturers to",
    "start": "1269039",
    "end": "1275360"
  },
  {
    "text": "essentially Implement alternative you know or provide alternative implementations of this and finally the driver knows how to talk to the hardware",
    "start": "1275360",
    "end": "1283480"
  },
  {
    "text": "now you had a question",
    "start": "1283480",
    "end": "1287000"
  },
  {
    "text": "so is it I didn't hear",
    "start": "1291760",
    "end": "1295279"
  },
  {
    "text": "it there's there's a thread pool inside a system server on which the different",
    "start": "1297559",
    "end": "1303000"
  },
  {
    "text": "requests are being serviced so no they're not cued now Individual Services one of the",
    "start": "1303000",
    "end": "1309279"
  },
  {
    "text": "interesting things they do for example the vibrator service it actually goes and locks the vibr vibrator device to",
    "start": "1309279",
    "end": "1316640"
  },
  {
    "text": "avoid concurrent vibration from multiple clients so it will that will essentially",
    "start": "1316640",
    "end": "1322200"
  },
  {
    "text": "behave like a queue but in terms of being able to use different Services",
    "start": "1322200",
    "end": "1327679"
  },
  {
    "text": "concurrently no the the you know the threads are essentially provided by from the binder binder",
    "start": "1327679",
    "end": "1335039"
  },
  {
    "text": "pool in terms of the IPC the actual parameters are copied from process to",
    "start": "1340400",
    "end": "1345840"
  },
  {
    "text": "process in term if if you have large you know sections of data that you want to avoid copying then you could use",
    "start": "1345840",
    "end": "1352320"
  },
  {
    "text": "something like asham which is essentially request a shared memory region then pass to the other process",
    "start": "1352320",
    "end": "1357480"
  },
  {
    "text": "the file descriptor to that region and now you can share memory okay so let me just mention one thing about security",
    "start": "1357480",
    "end": "1363720"
  },
  {
    "text": "which is actually the other real reason why we have these Services right in the case of a vior service what it does it",
    "start": "1363720",
    "end": "1370240"
  },
  {
    "text": "goes and checks for whether the client has the Android permission vibrate how",
    "start": "1370240",
    "end": "1375559"
  },
  {
    "text": "does it know that well what's interesting is when does client this example application submits the request",
    "start": "1375559",
    "end": "1381880"
  },
  {
    "text": "through binder into this right and down here whether he likes it or not it goes",
    "start": "1381880",
    "end": "1387159"
  },
  {
    "text": "and passes its identity into the system server how does it do that essentially",
    "start": "1387159",
    "end": "1392720"
  },
  {
    "text": "binder in addition to the call that it submits it passes the uid of the calling",
    "start": "1392720",
    "end": "1398600"
  },
  {
    "text": "process and in Android because every application runs under unique user identity in a separate process that's",
    "start": "1398600",
    "end": "1405679"
  },
  {
    "text": "the separate Point essentially that unique user identity can be translated back into which application that belongs",
    "start": "1405679",
    "end": "1412000"
  },
  {
    "text": "to and then from that we can go to the package manager service and say hey which actual permissions has this",
    "start": "1412000",
    "end": "1419440"
  },
  {
    "text": "application been granted by the user at install time and so and then we simply",
    "start": "1419440",
    "end": "1424760"
  },
  {
    "text": "check for whether our permission the one we want to enforce is on the list now all of this sounds complicated and",
    "start": "1424760",
    "end": "1430760"
  },
  {
    "text": "there's you know andreid does this essentially in a single line single API call single method execution where you",
    "start": "1430760",
    "end": "1436000"
  },
  {
    "text": "simply say enforce calling or self permission or check for whether the caller has the permission all and",
    "start": "1436000",
    "end": "1442360"
  },
  {
    "text": "essentially this is what happens we we get the uid converted into the application from application we figure",
    "start": "1442360",
    "end": "1447919"
  },
  {
    "text": "out which permissions it has and we simply check whether are permissions on that list okay so let's take a look at",
    "start": "1447919",
    "end": "1454840"
  },
  {
    "text": "some of the other ones you'll now hopefully see that there's you know there a lot of lot of this is you know the pattern is fairly similar so for",
    "start": "1454840",
    "end": "1460679"
  },
  {
    "text": "example power management if you want to grab a wake lock I'm assuming most of you have some idea as to what wake locks",
    "start": "1460679",
    "end": "1466120"
  },
  {
    "text": "are um it's Android's way over essentially helping applications control or influence the way poers managing",
    "start": "1466120",
    "end": "1472520"
  },
  {
    "text": "device so essentially whether the device will stay awake or not um so say you",
    "start": "1472520",
    "end": "1478039"
  },
  {
    "text": "wanted to write a music playing application you wanted to grab a w clock so that the you know when the device",
    "start": "1478039",
    "end": "1483080"
  },
  {
    "text": "essentially the music continues playing even even though the screen May power off or normally device would want to go to sleep so what you would do is you",
    "start": "1483080",
    "end": "1489440"
  },
  {
    "text": "would talk to the power manager power manager would actually go talk to the service manager and ask for a power",
    "start": "1489440",
    "end": "1496760"
  },
  {
    "text": "service this power service com from here and it was again created by System server and put into or registered with",
    "start": "1496760",
    "end": "1503120"
  },
  {
    "text": "the service manager on Startup so when you then go now that that happens power",
    "start": "1503120",
    "end": "1508480"
  },
  {
    "text": "manager when we use the power manager to say Wake lock we actually get a wake lock object and internally that wake",
    "start": "1508480",
    "end": "1515039"
  },
  {
    "text": "lock object retains the reference to the actual service so when we say acquire the wake clock that is when we initiate",
    "start": "1515039",
    "end": "1522000"
  },
  {
    "text": "the call Via this proxy into the binder through this stub into the power manager",
    "start": "1522000",
    "end": "1527799"
  },
  {
    "text": "service power manager service then maps that wake lock request into its own internal",
    "start": "1527799",
    "end": "1533039"
  },
  {
    "text": "representation of of the Wake loocks essentially multiplexes these wake loocks for multiple applications and then assuming that there isn't one power",
    "start": "1533039",
    "end": "1540399"
  },
  {
    "text": "manager service will then go and talk to something called power power is has a",
    "start": "1540399",
    "end": "1546120"
  },
  {
    "text": "bunch of jni methods which are implemented here by this you know uh shared Library Android runtime and from",
    "start": "1546120",
    "end": "1553840"
  },
  {
    "text": "there power goes and jumps into H right or hard abstraction layer for power from",
    "start": "1553840",
    "end": "1561240"
  },
  {
    "text": "there we simply Again by the default we go to this kernel driver and we ask for",
    "start": "1561240",
    "end": "1566279"
  },
  {
    "text": "a wake lock that's when we're actually talking to the wake lock driver and and then of course you know the call",
    "start": "1566279",
    "end": "1571320"
  },
  {
    "text": "continues back the other way and we we know that returns and we now know okay so we have a we clock the release pretty",
    "start": "1571320",
    "end": "1577240"
  },
  {
    "text": "much works the same way now it just so happens that like I said Power Manager service actually multiplexes multiple",
    "start": "1577240",
    "end": "1582640"
  },
  {
    "text": "wake user space or application requests for Wake locks into essentially its own",
    "start": "1582640",
    "end": "1587919"
  },
  {
    "text": "intern you know single W clog that it holds for the kernel and the reason for that is so that if an application were",
    "start": "1587919",
    "end": "1594159"
  },
  {
    "text": "to die or so on and so on so that you can basically go and and and have their applications wake lock pseudo wake lock",
    "start": "1594159",
    "end": "1600320"
  },
  {
    "text": "be automatically released but that's essentially how the part at least the the the interaction with the power",
    "start": "1600320",
    "end": "1606080"
  },
  {
    "text": "manager manager for the Wake loocks Works any questions okay alarms I usually like to",
    "start": "1606080",
    "end": "1614640"
  },
  {
    "text": "say this is how I got here this morning this is what happened this morning when you know and I was sleeping and I wasn't",
    "start": "1614640",
    "end": "1620080"
  },
  {
    "text": "really feeling like coming here but unfortunately uh you know my alarm thought otherwise so I basically uh well",
    "start": "1620080",
    "end": "1627840"
  },
  {
    "text": "even last night I I set this desk clock application on my phone to request an",
    "start": "1627840",
    "end": "1633480"
  },
  {
    "text": "alarm how does that work again I internally I mean you can look at the source code for this um that talks to",
    "start": "1633480",
    "end": "1640399"
  },
  {
    "text": "this alarm or this I I was interacting with this alarm clock activity which talks to something called alarms which",
    "start": "1640399",
    "end": "1646720"
  },
  {
    "text": "internally uses is a context implementation now what is this context implementation many of you who have",
    "start": "1646720",
    "end": "1653159"
  },
  {
    "text": "actually written Android applications you've probably at some point use that method called get system service right",
    "start": "1653159",
    "end": "1660080"
  },
  {
    "text": "that method exists on the context interface it's actually provided by this context implementation that's what your",
    "start": "1660080",
    "end": "1665399"
  },
  {
    "text": "activity extends from for example or services and whatnot a lot of them extend from this context implementation",
    "start": "1665399",
    "end": "1671399"
  },
  {
    "text": "now what the context implementation does in the case of a lot of services it will go and look up these remote objects I.E",
    "start": "1671399",
    "end": "1681159"
  },
  {
    "text": "these in this case alarm manager services and it will then go and store a",
    "start": "1681159",
    "end": "1687120"
  },
  {
    "text": "reference to that object into its own internal cache so by the time you go and",
    "start": "1687120",
    "end": "1692480"
  },
  {
    "text": "say give me the alarm manager service this might have already been looked up right so so you're not actually causing",
    "start": "1692480",
    "end": "1698240"
  },
  {
    "text": "that to happen that might have been happened as soon as your activity was for example first constructed it doesn't happen like this for all services but a",
    "start": "1698240",
    "end": "1704760"
  },
  {
    "text": "large number of services are preemptively fetched and ESS already there so by the time you need to use",
    "start": "1704760",
    "end": "1710120"
  },
  {
    "text": "them the cost of getting that service is is almost negligible so it's essentially",
    "start": "1710120",
    "end": "1715240"
  },
  {
    "text": "a map lookup so then what what happens you're given essentially an alarm",
    "start": "1715240",
    "end": "1720440"
  },
  {
    "text": "manager and again this is the part of the confusion when I started you know looking at Android I was confused as to",
    "start": "1720440",
    "end": "1725600"
  },
  {
    "text": "why do we have services and managers right why do I get a manager even though",
    "start": "1725600",
    "end": "1731320"
  },
  {
    "text": "I'm asking for a service so hopefully you're realizing the services is are what exists on the side of the system",
    "start": "1731320",
    "end": "1737240"
  },
  {
    "text": "server right services do the actual work the managers are really nothing more than clients to your services that hide",
    "start": "1737240",
    "end": "1744600"
  },
  {
    "text": "all this complexity of binder and in some cases threading from you so anyway",
    "start": "1744600",
    "end": "1751080"
  },
  {
    "text": "the alarm manager service wants to request an alarm right so what it does it creates a pending intent in this case",
    "start": "1751080",
    "end": "1758240"
  },
  {
    "text": "it basically goes and oops actually this application creates a pending intent goes to the larm manager Services hey I",
    "start": "1758240",
    "end": "1763760"
  },
  {
    "text": "want it you know here's a spending intent for that you're going to execute in the future to call me back then dep",
    "start": "1763760",
    "end": "1770159"
  },
  {
    "text": "pending that gets captured in this little parcel through this proxy via the binder back into the stub we're now in",
    "start": "1770159",
    "end": "1777399"
  },
  {
    "text": "you know on the other side of the uh I guess in another process the stub is extended by the alarm manager service",
    "start": "1777399",
    "end": "1783919"
  },
  {
    "text": "and now the alarm manager service gets the request to schedule this next essentially you know call back now what",
    "start": "1783919",
    "end": "1791320"
  },
  {
    "text": "happens next is that the alarm manager service then internally maintains a list of these pending intents and when",
    "start": "1791320",
    "end": "1797760"
  },
  {
    "text": "they're supposed to fire whether they're exact in exact whether they're repeating and so on and so on but it's let's",
    "start": "1797760",
    "end": "1802960"
  },
  {
    "text": "assume that it needs to schedule a wake up what it then does it talks or loads or initiates a local call to set the",
    "start": "1802960",
    "end": "1809840"
  },
  {
    "text": "alarm via this you know jni you know essentially class or file if you will",
    "start": "1809840",
    "end": "1815519"
  },
  {
    "text": "it's not really a class even though it's implemented in C++ and what that does it directly talks to the alarm driver in",
    "start": "1815519",
    "end": "1822640"
  },
  {
    "text": "this case there is no h because there's an expectation that pretty much all",
    "start": "1822640",
    "end": "1828240"
  },
  {
    "text": "Android devices are going to implement the alarm in the same way because the alarm driver is directly provided by the",
    "start": "1828240",
    "end": "1834799"
  },
  {
    "text": "AOSP or the Android Source three it's not something that you know oems are expected to essentially you know get too",
    "start": "1834799",
    "end": "1841600"
  },
  {
    "text": "creative with now some people ask me why do I use alarms why don't I just use local timers or something like that as a",
    "start": "1841600",
    "end": "1847880"
  },
  {
    "text": "as a you know why do I go through trouble of using alarm just to schedule a call back well the purpose of the alarms is that this is the way we get to",
    "start": "1847880",
    "end": "1855480"
  },
  {
    "text": "wake up right so if the device is sleeping right it's in a suspense state",
    "start": "1855480",
    "end": "1860519"
  },
  {
    "text": "if you have some runnable code or a timer that you set up yourself in your",
    "start": "1860519",
    "end": "1865679"
  },
  {
    "text": "application you want to fire that's not going to fire if this if the device is already sleeping you need something to",
    "start": "1865679",
    "end": "1871440"
  },
  {
    "text": "wake up the device well that something could be an incoming packet coming in over I don't know some connection over",
    "start": "1871440",
    "end": "1877159"
  },
  {
    "text": "like say c2dm or some sort of push notification into your device but what if that doesn't happen so then then your",
    "start": "1877159",
    "end": "1882960"
  },
  {
    "text": "device may never wake up and you're going to miss coming to you know this great conference so instead said this",
    "start": "1882960",
    "end": "1889000"
  },
  {
    "text": "alarm driver talks to the internal RTC essentially or the real-time clock in",
    "start": "1889000",
    "end": "1894159"
  },
  {
    "text": "the S so or the trip that we on and schedules it to raise an interrupt",
    "start": "1894159",
    "end": "1899200"
  },
  {
    "text": "sometimes in the future based on what is the next thing that we need to wake up and so what then happens is that this",
    "start": "1899200",
    "end": "1905399"
  },
  {
    "text": "alarm manager service this guy goes and has an internal thread that literally",
    "start": "1905399",
    "end": "1910440"
  },
  {
    "text": "just Waits blocks on this alarm to fire this alarm then essentially just waits",
    "start": "1910440",
    "end": "1915919"
  },
  {
    "text": "for the interrupt to fire so RTC fires interrupt interrupt you know wakes up the alarm driver if you will alarm",
    "start": "1915919",
    "end": "1922679"
  },
  {
    "text": "driver unblocks and essentially returns to the alarm manager service thread that thread now says oh what is what should I",
    "start": "1922679",
    "end": "1929600"
  },
  {
    "text": "execute at this time you know of the day and then it looks at inter internal list of things that essentially need to run",
    "start": "1929600",
    "end": "1935440"
  },
  {
    "text": "finds your pending intent in there it converts that into a real intent and that fires back and calls your",
    "start": "1935440",
    "end": "1941399"
  },
  {
    "text": "application and now application does its thing okay does this make sense Okay so that's alarms package",
    "start": "1941399",
    "end": "1949799"
  },
  {
    "text": "manager so let's say you wanted to install a new application and let's assume that your application is let's",
    "start": "1949799",
    "end": "1955120"
  },
  {
    "text": "say on the SD card so you're you're kind of installing it via like an local you",
    "start": "1955120",
    "end": "1960200"
  },
  {
    "text": "know one of those file managers or maybe you're installing it through by downloading it from a browser right so",
    "start": "1960200",
    "end": "1966559"
  },
  {
    "text": "not Market that's what I'm trying to say or Play Store so what happens is that you use you would use something called a",
    "start": "1966559",
    "end": "1972559"
  },
  {
    "text": "package manager or sorry package installer APK this is one of the system applications that ships with Android",
    "start": "1972559",
    "end": "1978519"
  },
  {
    "text": "so that fires in response to raising an intent to essentially install this APK",
    "start": "1978519",
    "end": "1985080"
  },
  {
    "text": "and what that does it calls this package installer activity package installer activity calls this you know install app",
    "start": "1985080",
    "end": "1990559"
  },
  {
    "text": "progress which then goes and gets a reference to a package manager how you",
    "start": "1990559",
    "end": "1996159"
  },
  {
    "text": "simply say context. getet package manager if you look at the source code for that again what it does it literally",
    "start": "1996159",
    "end": "2001799"
  },
  {
    "text": "goes over here the package this actually gets the application package manager that goes to the system or to the",
    "start": "2001799",
    "end": "2009080"
  },
  {
    "text": "service manager says hey who is registered under this package name",
    "start": "2009080",
    "end": "2015279"
  },
  {
    "text": "service manager knows about that because you know way back at the boot time system server took this package manager",
    "start": "2015279",
    "end": "2022279"
  },
  {
    "text": "service and registered it with the service manager so now the service manager answers that question so let's",
    "start": "2022279",
    "end": "2028720"
  },
  {
    "text": "say you now want to proceed with installation so again what happens is this this activity or dis install progress talks to the package",
    "start": "2028720",
    "end": "2034639"
  },
  {
    "text": "application package manager via this that talks via proxy to the binder from the binder into the stub from the stub",
    "start": "2034639",
    "end": "2042159"
  },
  {
    "text": "into the package manager service but here's a problem when assuming you accept your permissions and whatnot by",
    "start": "2042159",
    "end": "2048599"
  },
  {
    "text": "the way all the permission checks would have been done way back when but assuming you now want to actually",
    "start": "2048599",
    "end": "2053800"
  },
  {
    "text": "commence with installation the issue is that remember how I said every app runs with its own unique identity well for",
    "start": "2053800",
    "end": "2060760"
  },
  {
    "text": "that to work the directory that that app has and into which it will be installed",
    "start": "2060760",
    "end": "2065839"
  },
  {
    "text": "needs to be owned by that same user right so but what is the problem the problem is the system server runs as a",
    "start": "2065839",
    "end": "2073638"
  },
  {
    "text": "system user doesn't run as root so he doesn't have privileges to go and create this directory structure and change its",
    "start": "2073639",
    "end": "2080158"
  },
  {
    "text": "ownership to this newly created essentially user identi ID for this",
    "start": "2080159",
    "end": "2085919"
  },
  {
    "text": "application you're about to install it doesn't have that capability so what does it do well on Android we",
    "start": "2085919",
    "end": "2092398"
  },
  {
    "text": "essentially go and have a separate Damon called install D that does run his route",
    "start": "2092399",
    "end": "2098839"
  },
  {
    "text": "and does have that capability to essentially create a directory structure for this new new about to be installed",
    "start": "2098839",
    "end": "2104680"
  },
  {
    "text": "application and so what happens is this package manager service literally sends",
    "start": "2104680",
    "end": "2110160"
  },
  {
    "text": "a request via this installer down into this install D and how does it send this",
    "start": "2110160",
    "end": "2117200"
  },
  {
    "text": "request sends it as a Unix socket message so this is a yet another IPC",
    "start": "2117200",
    "end": "2122920"
  },
  {
    "text": "call but now we're not using binder we're using Unix sockets this install D",
    "start": "2122920",
    "end": "2128200"
  },
  {
    "text": "socket is being read by this instal D Damon this instal Damon gets that",
    "start": "2128200",
    "end": "2133760"
  },
  {
    "text": "message pares it says okay this is what me to do fine and he goes and essentially executes those commands or",
    "start": "2133760",
    "end": "2140200"
  },
  {
    "text": "creates that directory structure and changes the ownership now why didn't they just simply do all of this in",
    "start": "2140200",
    "end": "2145240"
  },
  {
    "text": "system server again if they wanted to they would have had to run the system server as root but running it as root",
    "start": "2145240",
    "end": "2150760"
  },
  {
    "text": "would have meant that you know it'd be extremely easy to find some of the you know a way of essentially compromising",
    "start": "2150760",
    "end": "2156520"
  },
  {
    "text": "an Android device and exploiting you know some sort of a uh weakness and essentially gaining root basically the",
    "start": "2156520",
    "end": "2162560"
  },
  {
    "text": "system server is way too big its surface area is way too large and so there would be many different ways of essentially",
    "start": "2162560",
    "end": "2168720"
  },
  {
    "text": "trying to exploit it so they wanted to isolate the privileged operation into separate demon so that they minimize the",
    "start": "2168720",
    "end": "2175800"
  },
  {
    "text": "risks of somebody essentially gaining root okay that's essentially how your",
    "start": "2175800",
    "end": "2181079"
  },
  {
    "text": "installation happens and by the way even if you're doing Market based installation the left side will be",
    "start": "2181079",
    "end": "2187280"
  },
  {
    "text": "different but the right side I what the market or the Play application does pretty much is exactly the same",
    "start": "2187280",
    "end": "2195560"
  },
  {
    "text": "please it could uh so s install D could use binder in this case binder binder is",
    "start": "2195800",
    "end": "2202359"
  },
  {
    "text": "basically assumes that your that the services are written in as objects so it",
    "start": "2202359",
    "end": "2208480"
  },
  {
    "text": "essentially assumes a more objectoriented you know infrastructure installed is extremely simple it's written in C for the most part if I",
    "start": "2208480",
    "end": "2215560"
  },
  {
    "text": "remember correctly um and you will see that in a lot of cases when it comes to communicating to the those Damons a lot",
    "start": "2215560",
    "end": "2222839"
  },
  {
    "text": "of that communication actually happens through uni sockets rather than binder there's not there wouldn't be nothing",
    "start": "2222839",
    "end": "2228079"
  },
  {
    "text": "wrong for them to use binder but in a lot of cases they you know the Unix sockets are kind of more simpler for for",
    "start": "2228079",
    "end": "2234920"
  },
  {
    "text": "this purpose uh for what they're trying to accomplish let's talk about Wi-Fi so",
    "start": "2234920",
    "end": "2242160"
  },
  {
    "text": "here I'm not talking about how the actual Wi-Fi itself Works meaning how do the packets go from your application",
    "start": "2242160",
    "end": "2249839"
  },
  {
    "text": "down into the Wi-Fi Hardware that essentially is the responsibility of the Wi-Fi driver that plugs directly into",
    "start": "2249839",
    "end": "2257000"
  },
  {
    "text": "the kernel and when we initiate a call to say you know your server.com",
    "start": "2257000",
    "end": "2262480"
  },
  {
    "text": "basically that that that routing and all of the the flow of data happens through",
    "start": "2262480",
    "end": "2267560"
  },
  {
    "text": "the kernel that there's no involvement from the point of view of the rest of the Android framework yes there's",
    "start": "2267560",
    "end": "2273040"
  },
  {
    "text": "involvement from the setting up the routes and whatnot but we don't really get into the business of you know",
    "start": "2273040",
    "end": "2279440"
  },
  {
    "text": "sending packets via say sockets or via binding that'd be extremely inefficient",
    "start": "2279440",
    "end": "2285480"
  },
  {
    "text": "so instead this is really about Wi-Fi management how do you control Wi-Fi how do you you know initiate a scan how do",
    "start": "2285480",
    "end": "2291319"
  },
  {
    "text": "you you know uh enable Wi-Fi disable change to Wi-Fi Direct that sort of",
    "start": "2291319",
    "end": "2296560"
  },
  {
    "text": "stuff so let's say you had an application like this example application again that wants to do this",
    "start": "2296560",
    "end": "2302760"
  },
  {
    "text": "inside of this example activity the first thing you would do is you would grab a system service called Wi-Fi",
    "start": "2302760",
    "end": "2308000"
  },
  {
    "text": "manager right Wi-Fi manager as soon as you would get it would essentially like we said before go to the you know binder",
    "start": "2308000",
    "end": "2316800"
  },
  {
    "text": "then the system the Serv service manager from the service manager it will learn that there is in fact a Wi-Fi service",
    "start": "2316800",
    "end": "2324079"
  },
  {
    "text": "that had been registered with the service manager by the system server upon startup so this part you can see",
    "start": "2324079",
    "end": "2331079"
  },
  {
    "text": "it's pretty much consistent we don't even have to talk about this part you're hopefully seeing this how the initial registration happens now what happens is",
    "start": "2331079",
    "end": "2338520"
  },
  {
    "text": "again we go to this proxy from the proxy into the binder from the binder we",
    "start": "2338520",
    "end": "2344079"
  },
  {
    "text": "execute an on transact method on the stub from the stub well the stub is extended by the service okay they",
    "start": "2344079",
    "end": "2351760"
  },
  {
    "text": "actually one in the same object at runtime but you can kind of think of them as the flow goes this way now the",
    "start": "2351760",
    "end": "2357240"
  },
  {
    "text": "service runs but here's the thing Wi-Fi is fairly fairly complicated meaning the",
    "start": "2357240",
    "end": "2362720"
  },
  {
    "text": "Wi-Fi Hardware can be in many different states and so what we need is a way of replicating those states that exist in",
    "start": "2362720",
    "end": "2368960"
  },
  {
    "text": "the hardware in essentially a model that we maintain in the software so we know what to you know tell our user as to",
    "start": "2368960",
    "end": "2374560"
  },
  {
    "text": "what you know essentially what is the state of the Wi-Fi hardware and so what Android does is then essentially uses",
    "start": "2374560",
    "end": "2380400"
  },
  {
    "text": "some sort of a Wi-Fi State machine which maintains that model essentially memory",
    "start": "2380400",
    "end": "2386520"
  },
  {
    "text": "okay so it replicates the the state of the hardware any given time that that",
    "start": "2386520",
    "end": "2391560"
  },
  {
    "text": "and the reason why we need that is you know the actual driver and the rest of the Wi-Fi stack May in fact be unloaded",
    "start": "2391560",
    "end": "2396960"
  },
  {
    "text": "as we will see in a moment now when you say you want to initiate a connection to some hotspot the Wi-Fi State machine",
    "start": "2396960",
    "end": "2403760"
  },
  {
    "text": "then initiates a call to the Wi-Fi native Wi-Fi native is really just a bridge to the Wi-Fi CPP which is",
    "start": "2403760",
    "end": "2411440"
  },
  {
    "text": "essentially just the jni bridge to the Wi-Fi Hub so just like we had for power and",
    "start": "2411440",
    "end": "2418400"
  },
  {
    "text": "vibrator we now have the Wi-Fi H Wii H is in fact is",
    "start": "2418400",
    "end": "2424880"
  },
  {
    "text": "can does different things on different phones like for example on a Galaxy Nexus it directly communicates to this",
    "start": "2424880",
    "end": "2432160"
  },
  {
    "text": "something else you'll see something called W pay supplicant on a Nexus S for example one of the things it does if",
    "start": "2432160",
    "end": "2437480"
  },
  {
    "text": "your Wi-Fi is not even on it will first load the Wi-Fi driver as a kernel module",
    "start": "2437480",
    "end": "2443520"
  },
  {
    "text": "to ins mod before it proceeds to try to talk to that kernel driver okay so",
    "start": "2443520",
    "end": "2449440"
  },
  {
    "text": "depending on the on the device there your driver may in fact be loaded at all times or it may be loaded and unloaded",
    "start": "2449440",
    "end": "2455119"
  },
  {
    "text": "On Demand by this h so what happens next well the actual communication with the",
    "start": "2455119",
    "end": "2462000"
  },
  {
    "text": "driver is fairly complicated and so why Andre did not want to reimplement the wheel especially because there is",
    "start": "2462000",
    "end": "2468440"
  },
  {
    "text": "already something in the L Linux community that we use in a lot of Unix distributions called WPA supplicant",
    "start": "2468440",
    "end": "2474440"
  },
  {
    "text": "which is responsible not only for the WPA authentication but also the you know communication with the Wi-Fi Hardware",
    "start": "2474440",
    "end": "2481280"
  },
  {
    "text": "assuming that this wi-fi Hardware implements or the driver for the Wi-Fi Hardware implements this NL",
    "start": "2481280",
    "end": "2488280"
  },
  {
    "text": "80211 framework driver framework if you will so essentially what what happens is",
    "start": "2488280",
    "end": "2493480"
  },
  {
    "text": "that this wi-fi H talks to this WPA client which wants to use the WPA",
    "start": "2493480",
    "end": "2501640"
  },
  {
    "text": "supplicant to do the actual configuration but the problem is the WPA supplicant is actually a GPL piece of",
    "start": "2501640",
    "end": "2508160"
  },
  {
    "text": "software and we don't want to link to GPL because of all the licensing issues with that once you link to GPL then your",
    "start": "2508160",
    "end": "2514640"
  },
  {
    "text": "code needs to be GPL and so on and so on instead of we do is we don't talk to directly we actually send a message to",
    "start": "2514640",
    "end": "2521960"
  },
  {
    "text": "the wp applicant via yet another socket and so then the wp applicant gets the",
    "start": "2521960",
    "end": "2528440"
  },
  {
    "text": "message and then communicates with the actual driver okay so this part is fairly",
    "start": "2528440",
    "end": "2535839"
  },
  {
    "text": "standard I mean this part whoops the part of the discommunication is fairly standard because both of these tend to",
    "start": "2535839",
    "end": "2542800"
  },
  {
    "text": "come from the Linux you know standard Linux Community if you will but the top of the stack of course is what's unique",
    "start": "2542800",
    "end": "2548079"
  },
  {
    "text": "to Android does this make sense can so location I actually talked",
    "start": "2548079",
    "end": "2556640"
  },
  {
    "text": "briefly about this uh yesterday during the keynote I don't know if any of you remember it but um let's just recap some",
    "start": "2556640",
    "end": "2562440"
  },
  {
    "text": "of the key points here location service so let's say you wanted to write an application that knows or gets the",
    "start": "2562440",
    "end": "2568839"
  },
  {
    "text": "current state of the device or the current location of device what do you do again you get a system service and",
    "start": "2568839",
    "end": "2574559"
  },
  {
    "text": "you say give me a system service called location and what you get that is location manager location manager again",
    "start": "2574559",
    "end": "2580880"
  },
  {
    "text": "just like we already know goes to service manager grabs a reference to this location manager service so when",
    "start": "2580880",
    "end": "2586920"
  },
  {
    "text": "you now say Okay I want to get the last known location again so this part is you'll see it's fairly consistent goes",
    "start": "2586920",
    "end": "2593800"
  },
  {
    "text": "via this proxy down into the binder back into this stub and down into this",
    "start": "2593800",
    "end": "2599200"
  },
  {
    "text": "location manager service the location manager service depending on the",
    "start": "2599200",
    "end": "2604800"
  },
  {
    "text": "provider you want to use say you want to I use GPS will fetch the correct provider assuming you have GPS say the",
    "start": "2604800",
    "end": "2611720"
  },
  {
    "text": "GPS location provider which actually doesn't do much work other than bridge to the C code which is essentially the",
    "start": "2611720",
    "end": "2619040"
  },
  {
    "text": "jni wrapper that jni wrapper also doesn't do a lot of work except that it Bridges to a special Hull Hardware",
    "start": "2619040",
    "end": "2626359"
  },
  {
    "text": "exraction layer for GPS right again why do we need these things well because there is no such thing as a standard way",
    "start": "2626359",
    "end": "2633119"
  },
  {
    "text": "to write GPS drivers right most GPS drivers are some sort of serial ports",
    "start": "2633119",
    "end": "2638160"
  },
  {
    "text": "but different GPS drivers may be implemented by different manufacturers differently and so they you know we we",
    "start": "2638160",
    "end": "2643920"
  },
  {
    "text": "don't want that we want a standard way of communicating through these things and so the only way for that to work is to provide a level of abstraction that",
    "start": "2643920",
    "end": "2650520"
  },
  {
    "text": "is the purpose of how so this GPS driver you know where it actually sorry how",
    "start": "2650520",
    "end": "2655720"
  },
  {
    "text": "that where it comes from depends on the device so on a Galaxy Nexus because it's based on omap you know 4460 it'll come",
    "start": "2655720",
    "end": "2663119"
  },
  {
    "text": "from this particular shared Library what's interesting is the H can be",
    "start": "2663119",
    "end": "2668359"
  },
  {
    "text": "licensed under any terms and on most of your Hardware most of your Android devices the one thing that's tends to be",
    "start": "2668359",
    "end": "2675760"
  },
  {
    "text": "close sourced is this Hardware exraction layer that's the one thing you don't have that's the one thing that's",
    "start": "2675760",
    "end": "2680880"
  },
  {
    "text": "actually making it hard for you to take standard you know Android aos3 compile it and just dump it onto",
    "start": "2680880",
    "end": "2687760"
  },
  {
    "text": "your device you can get 99% of it there except for the hyro abstraction layer",
    "start": "2687760",
    "end": "2693280"
  },
  {
    "text": "which needs to be needs to come from your manufacturer and be compatible for that particular version of Android okay",
    "start": "2693280",
    "end": "2699720"
  },
  {
    "text": "so anyway in the case of this Hull I don't actually know what it does because it is close sourced even on Galaxy Nexus",
    "start": "2699720",
    "end": "2706720"
  },
  {
    "text": "but what I do know is that it happens to talk to some sort of a serial device which is over here and then that talks",
    "start": "2706720",
    "end": "2713079"
  },
  {
    "text": "to some sort of a you know you know GPS chip which you know obviously you know",
    "start": "2713079",
    "end": "2718200"
  },
  {
    "text": "gets your data from the satellites so now like I said earlier um during my",
    "start": "2718200",
    "end": "2724359"
  },
  {
    "text": "keynote and and I wanted to go go a little bit more detail often times people ask well why do we have so much",
    "start": "2724359",
    "end": "2729640"
  },
  {
    "text": "complexity why so much you know or you know this how many so many layers of indire so many layers of abstraction",
    "start": "2729640",
    "end": "2736160"
  },
  {
    "text": "doesn't that add a lot of overhead latency you know waste memory and so on and so on that's true but for example",
    "start": "2736160",
    "end": "2742640"
  },
  {
    "text": "let's take a look at how you know how this helps you as a developer right you",
    "start": "2742640",
    "end": "2748400"
  },
  {
    "text": "could potentially try as a developer say to talk to the driver itself but if you",
    "start": "2748400",
    "end": "2753599"
  },
  {
    "text": "did that you'd have to know how to talk to proprietary essentially driver and at the same time you have to have that code",
    "start": "2753599",
    "end": "2761160"
  },
  {
    "text": "somehow available to you which a lot of the oems don't want to give it to you because a lot of their secret sauce is",
    "start": "2761160",
    "end": "2767559"
  },
  {
    "text": "in that code they actually would prefer you not to you have access to it okay and also most of the time you don't want",
    "start": "2767559",
    "end": "2773640"
  },
  {
    "text": "to code your application so you're specifically just asking for GPS you want to ask for fine location or you",
    "start": "2773640",
    "end": "2778720"
  },
  {
    "text": "want to ask for different sources of location right you don't want to actually communicate to GPS driver so",
    "start": "2778720",
    "end": "2784040"
  },
  {
    "text": "that tells you right off the bat that one of the things that the GP this location manager service does it enables you to essentially aggregate data from",
    "start": "2784040",
    "end": "2791880"
  },
  {
    "text": "different sources of of of information location information right so so that's what it does so now what is the purpose",
    "start": "2791880",
    "end": "2799200"
  },
  {
    "text": "of this location manager why why don't we just go to directly talk to this location manager service why do we need",
    "start": "2799200",
    "end": "2804880"
  },
  {
    "text": "this location manager well remember how hopefully some of you at least here have used the location manager service and",
    "start": "2804880",
    "end": "2811640"
  },
  {
    "text": "have actually you know written applications that use this one thing you probably would have done is you would have registered a listener with this",
    "start": "2811640",
    "end": "2819800"
  },
  {
    "text": "location service which is actually a manager to receive updates from the from",
    "start": "2819800",
    "end": "2825599"
  },
  {
    "text": "the sensor when a new GPS data becomes available how does that actually work",
    "start": "2825599",
    "end": "2831520"
  },
  {
    "text": "the way that actually is implemented is that this location manager service implements a thread that it will wait",
    "start": "2831520",
    "end": "2837760"
  },
  {
    "text": "for these updates to come from the driver via like again go over this way",
    "start": "2837760",
    "end": "2842880"
  },
  {
    "text": "then go this way then go this way then go this way right and it actually holds that state so it it it waits for that",
    "start": "2842880",
    "end": "2849720"
  },
  {
    "text": "data to become available what it then does when the data does become available it'll actually want to send the data",
    "start": "2849720",
    "end": "2855839"
  },
  {
    "text": "back to you right because you asked for it but you all all this all along you weren't waiting for it you weren't",
    "start": "2855839",
    "end": "2861599"
  },
  {
    "text": "wasting your UI thread waiting for this data to come back to you nevertheless the data does come back to you well if",
    "start": "2861599",
    "end": "2867559"
  },
  {
    "text": "the data were to come back directly to you right to execute directly your call back the problem is that that execution",
    "start": "2867559",
    "end": "2874880"
  },
  {
    "text": "would happen on a binder thread and now what you would have had to do in your application you would have to take that",
    "start": "2874880",
    "end": "2881520"
  },
  {
    "text": "D that data that piece of location data and essentially pass it via some sort of a Handler onto a UI thread if you wanted",
    "start": "2881520",
    "end": "2889440"
  },
  {
    "text": "that data to be somehow mapped onto the UI say to update some sort of a UI like",
    "start": "2889440",
    "end": "2894520"
  },
  {
    "text": "act on it in the context of the UI and that would complicate quite a bit the the the model right the API model that",
    "start": "2894520",
    "end": "2901520"
  },
  {
    "text": "you want to work with you don't want to know what handlers are for the most part of course there are reasons why you should but in this case you probably",
    "start": "2901520",
    "end": "2908119"
  },
  {
    "text": "don't want to instead you just expect that the call back will happen on the same thread that is from where it is",
    "start": "2908119",
    "end": "2913559"
  },
  {
    "text": "safe to update the UI and as we know in Android you cannot update UI from a non-ui thread and so instead what",
    "start": "2913559",
    "end": "2919599"
  },
  {
    "text": "happens is this callback actually comes back into a listener inside of the",
    "start": "2919599",
    "end": "2925079"
  },
  {
    "text": "location manager which acts as a bridge to actually call into your listener that",
    "start": "2925079",
    "end": "2931079"
  },
  {
    "text": "you provided sa from your activity and so by the time the data comes back to you it went through the binder into this",
    "start": "2931079",
    "end": "2938440"
  },
  {
    "text": "first stage listener then onto the Handler passed as a message to this to your listener and then your call back",
    "start": "2938440",
    "end": "2944640"
  },
  {
    "text": "got fired so the purpose again of this of these managers right in a lot of cases is to provide that EAS ofuse API",
    "start": "2944640",
    "end": "2953040"
  },
  {
    "text": "that essentially Shield you from all this knowledge of threading and the knowledge of IPC that you would otherwise have to worry about the",
    "start": "2953040",
    "end": "2959040"
  },
  {
    "text": "purpose of the service in the case specifically location manager service it enforces Security checks as to who can",
    "start": "2959040",
    "end": "2966400"
  },
  {
    "text": "access the location it Aggregates sources of information it provides this location updates right so you don't have",
    "start": "2966400",
    "end": "2972079"
  },
  {
    "text": "to even run because you can actually fire those updates via these pending intents so your application doesn't have",
    "start": "2972079",
    "end": "2977280"
  },
  {
    "text": "to waste memory running waiting for it if you don't want it and essentially can go and provide the you know the threads",
    "start": "2977280",
    "end": "2984760"
  },
  {
    "text": "needed to go to the driver and wait for the data to become available so there's quite a bit of you know value add in",
    "start": "2984760",
    "end": "2990839"
  },
  {
    "text": "these different layers along the way that seem like they're just you know adding latency and wasting memory but they actually you know do contribute to",
    "start": "2990839",
    "end": "2997240"
  },
  {
    "text": "the overall uh to the overall you know execution model any questions so far okay let's talk about uh the audio",
    "start": "2997240",
    "end": "3006200"
  },
  {
    "text": "policy you can see kind of how there's more lines here and and and the next slide I'll actually I just gave up on",
    "start": "3006200",
    "end": "3011839"
  },
  {
    "text": "lines because there's just too many things but but bear with me with this one let's say you wanted to you know",
    "start": "3011839",
    "end": "3017079"
  },
  {
    "text": "play some audio or you wanted to you know control the audio a playback on the device Android actually tries to uh uh",
    "start": "3017079",
    "end": "3024839"
  },
  {
    "text": "abstract these two things as two separate two separate concerns one is I want to you know essentially play audio",
    "start": "3024839",
    "end": "3031000"
  },
  {
    "text": "or play video whatever the other is I want to essentially request a focus in",
    "start": "3031000",
    "end": "3036799"
  },
  {
    "text": "you know with which I'm going to play back this audio or I want to change the volume of the device or I want to change",
    "start": "3036799",
    "end": "3042760"
  },
  {
    "text": "the ringt I want to change some policy audio policy of the device so in this case we're just going to look at the",
    "start": "3042760",
    "end": "3048240"
  },
  {
    "text": "audio policy not the actual audio playback so let's say you wanted to add on a muted device what happens is again",
    "start": "3048240",
    "end": "3053960"
  },
  {
    "text": "your application is going from this example activity to the audio manager",
    "start": "3053960",
    "end": "3059359"
  },
  {
    "text": "which grabs a audio Ser You Know audio service from the service manager and",
    "start": "3059359",
    "end": "3064799"
  },
  {
    "text": "then via the proxy again this part is the same via the proxy via this binder",
    "start": "3064799",
    "end": "3070599"
  },
  {
    "text": "talks to this stub from the stop he goes to this audio service but here's the thing most of the actual audio control",
    "start": "3070599",
    "end": "3077720"
  },
  {
    "text": "and the state of the audio system is not in the system server here we see a completely different Damon running",
    "start": "3077720",
    "end": "3084559"
  },
  {
    "text": "called the media server that's where audio and the audio flinger and whatnot live so what happens is this audio",
    "start": "3084559",
    "end": "3091359"
  },
  {
    "text": "service actually talks to something called audio system which actually just talks to this audio system CPP that's",
    "start": "3091359",
    "end": "3098480"
  },
  {
    "text": "the essentially the jni call which talks to yet another audio system which is now",
    "start": "3098480",
    "end": "3105040"
  },
  {
    "text": "implemented in C++ but this thing is called audio system which talks to something called audio policy service",
    "start": "3105040",
    "end": "3110599"
  },
  {
    "text": "and it comes from a completely different Library so what's going on here what's interesting here is that this",
    "start": "3110599",
    "end": "3117079"
  },
  {
    "text": "BP audio policy service is actually another binder proxy they will enable us",
    "start": "3117079",
    "end": "3123880"
  },
  {
    "text": "to jump from here into this other stub called BM and then from there jump into",
    "start": "3123880",
    "end": "3130680"
  },
  {
    "text": "this other audio policy service so there's actually two IPC calls here happening one is from oops",
    "start": "3130680",
    "end": "3139240"
  },
  {
    "text": "from here right from here to here to the audio service that's an IPC call and",
    "start": "3139240",
    "end": "3144359"
  },
  {
    "text": "essentially from here to here here that's another IPC call and so what then",
    "start": "3144359",
    "end": "3150599"
  },
  {
    "text": "happens is this audio policy service goes to the essentially a a this lives",
    "start": "3150599",
    "end": "3156000"
  },
  {
    "text": "inside of something called audio flinger which is responsible which is kind of like pulse audio on traditional Linux",
    "start": "3156000",
    "end": "3161599"
  },
  {
    "text": "which is which knows the state of the audio audio device and this goes and loads a hull component that H component",
    "start": "3161599",
    "end": "3169240"
  },
  {
    "text": "actually goes in depending on the device you're on on my device it loads this Library called tiny Elsa which",
    "start": "3169240",
    "end": "3176040"
  },
  {
    "text": "essentially knows how to communicate with the audio driver which is implemented using the Ala framework",
    "start": "3176040",
    "end": "3182440"
  },
  {
    "text": "which is the guess Advanced sound Linux architecture Linux architecture sound whatever Advanced Linux sound",
    "start": "3182440",
    "end": "3188559"
  },
  {
    "text": "architecture I think that's what it stands for um and essentially now we are say muting or changing the volume of the",
    "start": "3188559",
    "end": "3195280"
  },
  {
    "text": "device now let's talk about why we need this media server what's what's interesting about the media server that's kind of part of this audio",
    "start": "3195280",
    "end": "3201880"
  },
  {
    "text": "playback so let's say you and we we'll explain this media server in the context of playing back in say an MP3 file say",
    "start": "3201880",
    "end": "3209680"
  },
  {
    "text": "you want to write an application using a media player and you have read the documentation about the media player and",
    "start": "3209680",
    "end": "3215480"
  },
  {
    "text": "you now want to use the media player to play back an MP3 file what what do you do you usually call first of all",
    "start": "3215480",
    "end": "3221799"
  },
  {
    "text": "instantiate this media player object and then you have essentially a bunch of methods you're supposed to invoke on it",
    "start": "3221799",
    "end": "3228160"
  },
  {
    "text": "for proper playback first you need to set the data source of this of the data you want to play then you need to",
    "start": "3228160",
    "end": "3233559"
  },
  {
    "text": "prepare the media player to put it in this prepared State and then then you can fire the the start event where you",
    "start": "3233559",
    "end": "3239040"
  },
  {
    "text": "actually start play the playback so what what happens when you do all these things well in the case of the set data",
    "start": "3239040",
    "end": "3246400"
  },
  {
    "text": "source the way you're setting the data source is you're passing essentially a file descriptor into the media player",
    "start": "3246400",
    "end": "3252079"
  },
  {
    "text": "what the media player does it actually does the jump to the C++ version of itself via jni on the client side not on",
    "start": "3252079",
    "end": "3260640"
  },
  {
    "text": "the service side it then goes and it and it talks to something called the media player over here inside of the lid media",
    "start": "3260640",
    "end": "3267839"
  },
  {
    "text": "which actually uses a media player service this BP media player service to",
    "start": "3267839",
    "end": "3274520"
  },
  {
    "text": "talk to a BN media player service which is essentially a stub inside of the",
    "start": "3274520",
    "end": "3280440"
  },
  {
    "text": "media server that answers to that call but here's what's interesting that",
    "start": "3280440",
    "end": "3285720"
  },
  {
    "text": "original file descriptor that you gave to the media player gets transferred across the process boundaries through",
    "start": "3285720",
    "end": "3292799"
  },
  {
    "text": "binder gets duped essentially inside of the media server so that you avoid sending the data the raw data to Media",
    "start": "3292799",
    "end": "3299880"
  },
  {
    "text": "you instead send essentially a a reference to an OS resource which is essentially this file descriptor and now",
    "start": "3299880",
    "end": "3307480"
  },
  {
    "text": "you're essentially talking from this stub into the media player service which",
    "start": "3307480",
    "end": "3312559"
  },
  {
    "text": "then verifies what sort of media you're trying to play and then finds the appropriate player now why are there",
    "start": "3312559",
    "end": "3319920"
  },
  {
    "text": "different players well because your media doesn't have to be local you don't have to send a pilot scriptor your media could have been in fact say coming from",
    "start": "3319920",
    "end": "3326880"
  },
  {
    "text": "you know from the from the web maybe maybe you're streaming the media right in which case you're going to get a different player you now say okay now",
    "start": "3326880",
    "end": "3333720"
  },
  {
    "text": "that I I set the data source now I want to prepare the player in that case what happens you're still executing the media",
    "start": "3333720",
    "end": "3340440"
  },
  {
    "text": "player you're still going into this you're now going into the media player and that's going and talking to this",
    "start": "3340440",
    "end": "3345640"
  },
  {
    "text": "media player which is then talking to this stage fight player it's let's assume it's stage fight what happens",
    "start": "3345640",
    "end": "3351160"
  },
  {
    "text": "next well when you're preparing the media what that means is you want to set up this pipeline through which we can",
    "start": "3351160",
    "end": "3357880"
  },
  {
    "text": "play back this this this say audio let's let's say an MP3 file so how does Android handle this actually Android",
    "start": "3357880",
    "end": "3364920"
  },
  {
    "text": "tries to abstract this playback and split it into this this kind of",
    "start": "3364920",
    "end": "3371280"
  },
  {
    "text": "pipeline very similar to some of some of you may know uh that the G streamer does on standard Linux essentially it's a",
    "start": "3371280",
    "end": "3378240"
  },
  {
    "text": "pipeline of the different components that are involved in the playback at the end of the pipeline we have a component",
    "start": "3378240",
    "end": "3383680"
  },
  {
    "text": "that's responsible for reading a single block of data or buffer of data from the",
    "start": "3383680",
    "end": "3388760"
  },
  {
    "text": "file then we have another stage of the pipeline goes and decodes that or or extracts essentially the block of data",
    "start": "3388760",
    "end": "3394799"
  },
  {
    "text": "and extracts a particular stream from the block of data let's say it's an mp3 stream then another another component in",
    "start": "3394799",
    "end": "3400160"
  },
  {
    "text": "that pipeline goes and decodes That mp3 essentially block of data into a",
    "start": "3400160",
    "end": "3405799"
  },
  {
    "text": "unencoded waveform a PCM essentially wave wave data and now we have something",
    "start": "3405799",
    "end": "3412200"
  },
  {
    "text": "to play so during that preparation stage you're essentially setting up that pipeline the interesting part of that",
    "start": "3412200",
    "end": "3418119"
  },
  {
    "text": "pipeline is that this is this is the basically the interesting part is the stage fright stage fright is a framework",
    "start": "3418119",
    "end": "3423400"
  },
  {
    "text": "in Android that enables oems like intels and you know qualcom and Texas",
    "start": "3423400",
    "end": "3430119"
  },
  {
    "text": "Instruments and whatnot Samsungs of the world to go and Implement a hardware optimized decoders and also encoders for",
    "start": "3430119",
    "end": "3438920"
  },
  {
    "text": "the playback right the coding and encoding of the different media files right so they provide these plugins in",
    "start": "3438920",
    "end": "3446680"
  },
  {
    "text": "form something called Kronos ilil or open Max IL based you know apis and so",
    "start": "3446680",
    "end": "3452520"
  },
  {
    "text": "what stage FR does it wraps those plugins and essentially uses those plugins at the wrong time to decode this",
    "start": "3452520",
    "end": "3458920"
  },
  {
    "text": "this media playback this is why the media playback tends to be device specific and why something works well on",
    "start": "3458920",
    "end": "3464240"
  },
  {
    "text": "one device and not on the other and why the battery utilization on one device on playing back say your h64 encoded video",
    "start": "3464240",
    "end": "3471440"
  },
  {
    "text": "is going to be you know going to suck up a lot of battery or not suck up a lot of battery because there's different optimizations that a put in these",
    "start": "3471440",
    "end": "3478160"
  },
  {
    "text": "essentially plugins so finally you're now ready to play the media at that point what you're doing is you're again",
    "start": "3478160",
    "end": "3484559"
  },
  {
    "text": "going to this media player back into this back into this going into something called awesome player which is actually",
    "start": "3484559",
    "end": "3489960"
  },
  {
    "text": "responsible for the actual playback which holds a reference to this Pipeline and then you're going into something",
    "start": "3489960",
    "end": "3496160"
  },
  {
    "text": "called audio flinger audio flinger actually does the playback audio flinger has a thread or a bunch of threads that",
    "start": "3496160",
    "end": "3502559"
  },
  {
    "text": "essentially do the pull from this this pipeline and pull pockets of D of of",
    "start": "3502559",
    "end": "3508400"
  },
  {
    "text": "audio that they want to play back and as they're pulling it the packet gets read from this file gets you know decoded",
    "start": "3508400",
    "end": "3515520"
  },
  {
    "text": "gets you know uh converted into PCM stream and now",
    "start": "3515520",
    "end": "3520799"
  },
  {
    "text": "given to essentially the audio flinger at that point audio flinger essentially wants to play it what it does at least",
    "start": "3520799",
    "end": "3526559"
  },
  {
    "text": "in the my phone is that it goes to an audio Hull which is implemented in this you know driver or sorry I should say",
    "start": "3526559",
    "end": "3533240"
  },
  {
    "text": "this this Library which in my phone uses again the tiny Elsa essentially library",
    "start": "3533240",
    "end": "3539799"
  },
  {
    "text": "to talk to this PCM based Elsa driver that does the actual playback the audio",
    "start": "3539799",
    "end": "3546319"
  },
  {
    "text": "flinger can do the actual mixing of the different audio right inside of its own",
    "start": "3546319",
    "end": "3551520"
  },
  {
    "text": "thread of course it's all it's also possible for that to happen inside of the driver itself so you can see this is",
    "start": "3551520",
    "end": "3557799"
  },
  {
    "text": "rather complicated but the reason why they built it like this is because again they want the stage F to be this kind of",
    "start": "3557799",
    "end": "3564480"
  },
  {
    "text": "more open-ended framework that oems can add you know additional value into into",
    "start": "3564480",
    "end": "3570079"
  },
  {
    "text": "the this chain of course if you wanted to play this with low lower latency to avoid all these multiple stages you",
    "start": "3570079",
    "end": "3576440"
  },
  {
    "text": "could have just taken a bunch of you know raw data PCM data created an audio track and directly gone from there into",
    "start": "3576440",
    "end": "3584799"
  },
  {
    "text": "this the audio flinger and then down into this and you would avoid it having to essentially go through this",
    "start": "3584799",
    "end": "3590520"
  },
  {
    "text": "essentially this pipeline but then you you are passing the raw data from your application to this audio flinger and",
    "start": "3590520",
    "end": "3597720"
  },
  {
    "text": "yes you are copying this data essentially through the binder okay",
    "start": "3597720",
    "end": "3602839"
  },
  {
    "text": "audio flinger also gets used to to recording data so you know this goes both ways telefon let's mention a few more",
    "start": "3602839",
    "end": "3610000"
  },
  {
    "text": "and then we'll be wrapping up and give you guys chance ask some questions so what's interesting about the telepon in",
    "start": "3610000",
    "end": "3615480"
  },
  {
    "text": "in case let's say how the phone application works is that the actual the system Server doesn't play a key role",
    "start": "3615480",
    "end": "3622079"
  },
  {
    "text": "here instead when we actually want to send an SMS message or say dial a number which is a more common case is that we",
    "start": "3622079",
    "end": "3628039"
  },
  {
    "text": "actually talk to something called real D real D is a radio interface link Damon that loads a library called real",
    "start": "3628039",
    "end": "3636000"
  },
  {
    "text": "essentially or or this lipsc real which essentially is provided by your vendor in case of my phone I have an Intel",
    "start": "3636000",
    "end": "3642920"
  },
  {
    "text": "based you know modem uh so that's provided by by Intel even though it's you know Samsung phone and so what's",
    "start": "3642920",
    "end": "3649400"
  },
  {
    "text": "going on is that this basically when I initiate that call that goes through an internal I I want to spare the details",
    "start": "3649400",
    "end": "3655760"
  },
  {
    "text": "and essentially goes to an internal chain until it gets this real sender from the real sender we're actually",
    "start": "3655760",
    "end": "3661359"
  },
  {
    "text": "passing a message to a socket which is a Unix socket not a binder and from the",
    "start": "3661359",
    "end": "3667200"
  },
  {
    "text": "Unix socket we that message gets read by the real D real D then translates the",
    "start": "3667200",
    "end": "3672559"
  },
  {
    "text": "message into a call into essentially this Li rail which then goes into the",
    "start": "3672559",
    "end": "3678640"
  },
  {
    "text": "the particular library that my you know OEM provided to me and then so it goes",
    "start": "3678640",
    "end": "3683839"
  },
  {
    "text": "this way and then on my device it uses a particular serial device to initiate",
    "start": "3683839",
    "end": "3689000"
  },
  {
    "text": "that call what's interesting here is that this also works the other way around say a call comes in so it's an",
    "start": "3689000",
    "end": "3694880"
  },
  {
    "text": "unsolicited request then in that case that call gets read by real the message",
    "start": "3694880",
    "end": "3700480"
  },
  {
    "text": "gets deposited into the into the Unix socket in this case there's a real receiver that essentially initiates the",
    "start": "3700480",
    "end": "3707079"
  },
  {
    "text": "call all the way up to me and now I give it an opportunity to answer that call so it's it's a telepone is obviously a",
    "start": "3707079",
    "end": "3713119"
  },
  {
    "text": "little bit special it doesn't you know most of the most of the logic is essentially is in the phone application",
    "start": "3713119",
    "end": "3718559"
  },
  {
    "text": "which is persistent and that's why it can afford to to talk Unix sockets it doesn't have to worry about ever being",
    "start": "3718559",
    "end": "3724960"
  },
  {
    "text": "shut down by the system with the low memory killer because it's marked as persistent and essentially knows that",
    "start": "3724960",
    "end": "3730079"
  },
  {
    "text": "these unic sockets are going to remain open and it'll be ready to answer the call when it comes in let's talk about",
    "start": "3730079",
    "end": "3736039"
  },
  {
    "text": "just two more things and I'll be wrapping up one is the device policy on Android what's interesting here is is",
    "start": "3736039",
    "end": "3742839"
  },
  {
    "text": "essentially how let's actually backtrack a little bit how many of you have used a device policy or device admin apis",
    "start": "3742839",
    "end": "3749359"
  },
  {
    "text": "before no nobody wow so Android fryo",
    "start": "3749359",
    "end": "3755200"
  },
  {
    "text": "added support for this device admin apis that essentially Enterprise developers",
    "start": "3755200",
    "end": "3761000"
  },
  {
    "text": "like to use to get more control over the device itself in their Enterprise apps",
    "start": "3761000",
    "end": "3767559"
  },
  {
    "text": "what sort of control basically an Enterprise application that is granted",
    "start": "3767559",
    "end": "3772599"
  },
  {
    "text": "the vice admin capabilities could wipe your device lock your device change the",
    "start": "3772599",
    "end": "3778920"
  },
  {
    "text": "password in your device change the password rules in your device um a request that you encrypt your device",
    "start": "3778920",
    "end": "3785000"
  },
  {
    "text": "disable camera on your device uh and a few other things okay quite a bit of control why would a developer user in",
    "start": "3785000",
    "end": "3792279"
  },
  {
    "text": "their same mind Grant this permissions to to an application that wants to be able to say white a device well because",
    "start": "3792279",
    "end": "3799240"
  },
  {
    "text": "basically if they want to bring their own device to work and they want to get access to the Enterprise app that gets",
    "start": "3799240",
    "end": "3805839"
  },
  {
    "text": "access to Enterprise data the it administrator says you want to access this data on your personal device you",
    "start": "3805839",
    "end": "3811839"
  },
  {
    "text": "need to give us some control over your device and so that's essentially The Exchange I give you control over my",
    "start": "3811839",
    "end": "3817480"
  },
  {
    "text": "device I get to essentially continue to use my device as supposed to have to use say Blackberry or some other device that I may know like no offense to library",
    "start": "3817480",
    "end": "3825160"
  },
  {
    "text": "but basically that's you know that's the idea so but here's the one interesting thing why would an Enterprise",
    "start": "3825160",
    "end": "3831920"
  },
  {
    "text": "application need to wipe the entire device right that's seems a little kind of like an Overkill like you",
    "start": "3831920",
    "end": "3839599"
  },
  {
    "text": "sorry well right if it's stolen right and that's the idea I mean so so basically if the device gets reported as",
    "start": "3839599",
    "end": "3845440"
  },
  {
    "text": "lost or stolen or the develop or the user is found to somehow have breached the trust of the the of the Enterprise",
    "start": "3845440",
    "end": "3851480"
  },
  {
    "text": "you know they may want to issue a command that will wipe the device but the question is why would they wipe the",
    "start": "3851480",
    "end": "3857200"
  },
  {
    "text": "entire device after all it's a personal device why wouldn't they just wipe the Enterprise data and the issue is with",
    "start": "3857200",
    "end": "3864480"
  },
  {
    "text": "the flash file system or the the flash memory it's extremely hard to actually delete data on a flash partition what",
    "start": "3864480",
    "end": "3871599"
  },
  {
    "text": "you know you can try to delete it you unlink a file but all you did is you mark that data is unused anymore it",
    "start": "3871599",
    "end": "3877119"
  },
  {
    "text": "doesn't mean the data is not there it just means you freed up the I knowe to that data right well you can try to",
    "start": "3877119",
    "end": "3883400"
  },
  {
    "text": "overwrite the data but but because of the way flash works you can't actually overwrite data on a flash partition",
    "start": "3883400",
    "end": "3889400"
  },
  {
    "text": "because when you try to do that your rights may actually be directed to completely different memory cell on on",
    "start": "3889400",
    "end": "3895200"
  },
  {
    "text": "the flash medium why well because Flash Flash essentially memory comes with these controllers that do what's called",
    "start": "3895200",
    "end": "3902039"
  },
  {
    "text": "wear leveling they try to distribute the rights across the medium in order to wear it down evenly because these memory",
    "start": "3902039",
    "end": "3908799"
  },
  {
    "text": "cells have limited number of Rights they may be as low as you know 10,000 after",
    "start": "3908799",
    "end": "3914240"
  },
  {
    "text": "which they start to essentially lose data and so when you try to write over a",
    "start": "3914240",
    "end": "3919359"
  },
  {
    "text": "particular partition you may be Essen thinking you're overwriting a file you you may be overwriting something completely different so what we need is",
    "start": "3919359",
    "end": "3927359"
  },
  {
    "text": "we need essentially a full wipe so how does the full wipe work so let's say we",
    "start": "3927359",
    "end": "3932760"
  },
  {
    "text": "did initiate that full we our application wants to do exactly that so we talk to device policy manager device",
    "start": "3932760",
    "end": "3939200"
  },
  {
    "text": "policy manager we get as a system service again you know exactly the same way as we've seen already that talks to",
    "start": "3939200",
    "end": "3944839"
  },
  {
    "text": "this proxy proxy talks to the driver or the binder driver that goes over here",
    "start": "3944839",
    "end": "3950319"
  },
  {
    "text": "into sorry device policy stub which is actually extended by device viice policy",
    "start": "3950319",
    "end": "3956720"
  },
  {
    "text": "manager service this will first check for whether the application has the privilege to initiate the white assuming",
    "start": "3956720",
    "end": "3964200"
  },
  {
    "text": "that it does it will then essentially talk to the recovery system and from the",
    "start": "3964200",
    "end": "3969359"
  },
  {
    "text": "recovery system you will ask the recovery system hey I want you to initiate a wipe by rebooting the phone",
    "start": "3969359",
    "end": "3976000"
  },
  {
    "text": "in the in the recovery mode and adding a special command to wipe the device how does that happen the recovery system",
    "start": "3976000",
    "end": "3982920"
  },
  {
    "text": "actually goes and wres to a particular C you know file on the cach partition",
    "start": "3982920",
    "end": "3988599"
  },
  {
    "text": "this file called cach recovery command a command that says D- wipe then and also adds a little bit of",
    "start": "3988599",
    "end": "3996079"
  },
  {
    "text": "a little flag in the in the boot in the flash memory that the boot loader checks for to know whether to boot in a",
    "start": "3996079",
    "end": "4002119"
  },
  {
    "text": "standard Android ROM or into the recovery ROM assuming this is all works",
    "start": "4002119",
    "end": "4007480"
  },
  {
    "text": "as correct as as as as correctly as it's supposed to the recovery system then ends up talking to the power manager to",
    "start": "4007480",
    "end": "4013760"
  },
  {
    "text": "say hey I want to reboot the device the power manager ends up talking to this power manager service I keep forgetting",
    "start": "4013760",
    "end": "4021079"
  },
  {
    "text": "which way it is we can follow the errors which goes back I believe to the power and this power is implemented by this",
    "start": "4021079",
    "end": "4027160"
  },
  {
    "text": "you know jni code which initiates the actual you know reboot talks to the",
    "start": "4027160",
    "end": "4032200"
  },
  {
    "text": "colel says reboot so what's interesting now is that now the entire system reboots right there is no in it there is",
    "start": "4032200",
    "end": "4038839"
  },
  {
    "text": "no none of our services exist except for the kernel and now the kernel basically load gets loaded from the recovery",
    "start": "4038839",
    "end": "4046039"
  },
  {
    "text": "partition loads the recovery essentially binary the recovery binary goes and",
    "start": "4046039",
    "end": "4051440"
  },
  {
    "text": "essentially executes the the the command or finds that they supposed to wipe the device and then initiates a low-level",
    "start": "4051440",
    "end": "4058480"
  },
  {
    "text": "format of the entire data partition because it's the only way you can ensure you you know ensure is obvious a strong",
    "start": "4058480",
    "end": "4064680"
  },
  {
    "text": "word you can attempt to ensure that you actually deleted that data okay so what's interesting is that the service",
    "start": "4064680",
    "end": "4071039"
  },
  {
    "text": "persists after the the revice the device actually gets Rebooted",
    "start": "4071039",
    "end": "4076799"
  },
  {
    "text": "and let's see the last one NFC what's interesting here with this NFC how NFC",
    "start": "4076799",
    "end": "4082440"
  },
  {
    "text": "works and in fact there was a session I believe earlier today just actually before this one on how actually how to",
    "start": "4082440",
    "end": "4087920"
  },
  {
    "text": "use NFC but in terms of How It's implemented what's interesting is that",
    "start": "4087920",
    "end": "4093000"
  },
  {
    "text": "when you actually use this NFC adapter to say send an NFC message or subscribe to receive NFC messages and you want to",
    "start": "4093000",
    "end": "4100000"
  },
  {
    "text": "talk to the to the hardware the way you're actually talking to the hardware you're talking to a service that is over",
    "start": "4100000",
    "end": "4106080"
  },
  {
    "text": "here this NFC service which is actually this NFC adapter service I should say that's what that's what gets registered",
    "start": "4106080",
    "end": "4112120"
  },
  {
    "text": "and sorry this is wrong you should say policy service this NFC adapter service basically is looks kind of like what",
    "start": "4112120",
    "end": "4117920"
  },
  {
    "text": "we've seen before what's interesting is that this is not in a system server this is not in the media server this is in an",
    "start": "4117920",
    "end": "4124400"
  },
  {
    "text": "application the entire NFC stack is is an app the reason why this works is because",
    "start": "4124400",
    "end": "4131000"
  },
  {
    "text": "this NFC stack or sorry this NFC app has been signed with essentially a platform",
    "start": "4131000",
    "end": "4136880"
  },
  {
    "text": "key it runs with an NFC User it's a it's marked as a persistent app and it has",
    "start": "4136880",
    "end": "4142960"
  },
  {
    "text": "special privileges to register itself with the service manager other apps",
    "start": "4142960",
    "end": "4148040"
  },
  {
    "text": "cannot do this okay and so at that point",
    "start": "4148040",
    "end": "4153159"
  },
  {
    "text": "basically when you're talking to it you're still communicating over bind there the fact you're talking to something that's not into system in the",
    "start": "4153159",
    "end": "4159120"
  },
  {
    "text": "system server you don't really know nor do you care and at that point you know how the actual you know the writing of",
    "start": "4159120",
    "end": "4164920"
  },
  {
    "text": "the NF see data happens is you know you talked I mean this is a little bit convoluted you go this way you go into",
    "start": "4164920",
    "end": "4171359"
  },
  {
    "text": "the stub from the stop you go to the service then then it goes back into this into this into this it goes back into",
    "start": "4171359",
    "end": "4177838"
  },
  {
    "text": "the service then then essentially goes and loads an NFC H which is oh sorry an",
    "start": "4177839",
    "end": "4183480"
  },
  {
    "text": "NFC jni that goes to an NFC lib NFC which talks to the actual H which talks",
    "start": "4183480",
    "end": "4189880"
  },
  {
    "text": "to the actual driver okay it's not you know the super easy thing to follow but",
    "start": "4189880",
    "end": "4195360"
  },
  {
    "text": "it's not even important at this point I just want to kind of illustrate the fact that this actually exists as an",
    "start": "4195360",
    "end": "4201520"
  },
  {
    "text": "app so and in fact if any of you had a chance to see my brother's talk on",
    "start": "4201520",
    "end": "4206679"
  },
  {
    "text": "remixing Android this is how we advise you know those of you that are building",
    "start": "4206679",
    "end": "4211800"
  },
  {
    "text": "custom roms to add your own Services don't actually add anything to system server add your services essentially as",
    "start": "4211800",
    "end": "4219719"
  },
  {
    "text": "apps with these special privileges have them essentially run with special user",
    "start": "4219719",
    "end": "4224880"
  },
  {
    "text": "users make them persistent and essentially you'll get the best you know Best of Both Worlds you will not pollute",
    "start": "4224880",
    "end": "4230400"
  },
  {
    "text": "the existing applic you know Services yet you will get essentially the same behavior from the point of of users and",
    "start": "4230400",
    "end": "4237080"
  },
  {
    "text": "users as essentially system system Services enjoy does this make",
    "start": "4237080",
    "end": "4242239"
  },
  {
    "text": "sense um so that's basically it I know there's a lot of other services we could talk",
    "start": "4242239",
    "end": "4248560"
  },
  {
    "text": "about there's 60 60 more than 60 services on my Galaxy Nexus uh this may",
    "start": "4248560",
    "end": "4254440"
  },
  {
    "text": "vary uh from the device device to actually find out which Services you have and what's been registered with the",
    "start": "4254440",
    "end": "4259560"
  },
  {
    "text": "service manager you can just type ad shell and type service space list and you'll see a dump of the services in",
    "start": "4259560",
    "end": "4265480"
  },
  {
    "text": "what they're called and you kind of see what we're talking about here um this entire slide deck has already been",
    "start": "4265480",
    "end": "4271120"
  },
  {
    "text": "posted at this URL um it's slightly newer than the one that you might have downloaded from the endf conon site and",
    "start": "4271120",
    "end": "4277080"
  },
  {
    "text": "the video from this very talk I will upload and post to the same URL so that",
    "start": "4277080",
    "end": "4282360"
  },
  {
    "text": "said I think we have three minutes for questions by the way thank you guys if any of you",
    "start": "4282360",
    "end": "4287520"
  },
  {
    "text": "want to go thank you for coming I hope you enjoy [Applause]",
    "start": "4287520",
    "end": "4292670"
  },
  {
    "text": "this so any questions",
    "start": "4293560",
    "end": "4298120"
  },
  {
    "text": "please video phone how does the video phone work is",
    "start": "4301360",
    "end": "4308760"
  },
  {
    "text": "that what you're asking well I mean first of all there's no per se a video phone but there is a camera you know so",
    "start": "4308760",
    "end": "4314760"
  },
  {
    "text": "first of all there's a a camera service um one thing so so one thing I would recommend is um go to Google for uh",
    "start": "4314760",
    "end": "4324199"
  },
  {
    "text": "Android Builder Summit uh which was a uh conference that happened just close to",
    "start": "4324199",
    "end": "4331280"
  },
  {
    "text": "close to what was it B Redwood Shores in February of this year and uh folks from",
    "start": "4331280",
    "end": "4337159"
  },
  {
    "text": "a company called atina talked about the camera stack in Android um and so that",
    "start": "4337159",
    "end": "4342800"
  },
  {
    "text": "will give you an idea how the camera stack works now the playback of the video would essentially work in a similar way to how",
    "start": "4342800",
    "end": "4349960"
  },
  {
    "text": "the audio playback worked but you still need to capture the actual you know data so but it will be extremely important to",
    "start": "4349960",
    "end": "4355880"
  },
  {
    "text": "understand how the actual video capture Works",
    "start": "4355880",
    "end": "4363199"
  },
  {
    "text": "sorry platform",
    "start": "4364480",
    "end": "4368880"
  },
  {
    "text": "headphone I'm sorry I have trouble hearing you so you're saying a headphone manager yeah",
    "start": "4370320",
    "end": "4376719"
  },
  {
    "text": "oh telep manager so you're talking about",
    "start": "4376719",
    "end": "4381920"
  },
  {
    "text": "this how will it work with a camera unless there's an API that already makes it work with a camera then you know",
    "start": "4382960",
    "end": "4388639"
  },
  {
    "text": "unless you add it it won't work with a camera uh so you if you wanted to add your own essentially alternative to to",
    "start": "4388639",
    "end": "4394679"
  },
  {
    "text": "this I mean when we talk about so first of all this telep manager is about GSM",
    "start": "4394679",
    "end": "4399800"
  },
  {
    "text": "or CDMA like telep not IP based telephony right what you're talking about essentially would be an IP base",
    "start": "4399800",
    "end": "4406280"
  },
  {
    "text": "like a Skype call right that would go over IP now there is already another service specifically for Sip and for",
    "start": "4406280",
    "end": "4412880"
  },
  {
    "text": "void you know I don't know if there's something for video on top of that and I don't know to what degree that that is supported but essentially that that",
    "start": "4412880",
    "end": "4419520"
  },
  {
    "text": "would not be something you would bolt onto the telep manager you essentially would Implement a whole new",
    "start": "4419520",
    "end": "4424920"
  },
  {
    "text": "service okay this is specifically for audio based on the GSM or CDMA spec not",
    "start": "4424920",
    "end": "4431800"
  },
  {
    "text": "for any any sort of additional IP based communication whether it's voice or or",
    "start": "4431800",
    "end": "4436880"
  },
  {
    "text": "or video uh I think you who are next is it possible to restore",
    "start": "4436880",
    "end": "4442040"
  },
  {
    "text": "data dat is it possible to restore it well I mean the the actual way the the",
    "start": "4442040",
    "end": "4447120"
  },
  {
    "text": "rec the the the the recovery system wipes the data is not super it doesn't imply you know doesn't do multipass wipe",
    "start": "4447120",
    "end": "4454520"
  },
  {
    "text": "and so presumably yes it will be possible to restore the data you know you could there are actually books on Android forensics in fact there was a",
    "start": "4454520",
    "end": "4460400"
  },
  {
    "text": "talk on Android forensics uh at this conference that you could check out but I'm sure there is I'm sure it's possible",
    "start": "4460400",
    "end": "4466840"
  },
  {
    "text": "I don't know how easy it is it's not available to us morals but there are tools that you know forensics folks can",
    "start": "4466840",
    "end": "4473040"
  },
  {
    "text": "use by default now I'm sure that you know if you are using a DOD based device they will have implemented that so it",
    "start": "4473040",
    "end": "4479280"
  },
  {
    "text": "does like some multi you know maybe you explosive device and you know in fact",
    "start": "4479280",
    "end": "4485080"
  },
  {
    "text": "there is a a permission on Android called brick which is interesting to see how that's implemented anyways you had a",
    "start": "4485080",
    "end": "4491080"
  },
  {
    "text": "questionus I've",
    "start": "4491080",
    "end": "4496239"
  },
  {
    "text": "got whereas run Android",
    "start": "4496239",
    "end": "4501679"
  },
  {
    "text": "defitely and so some of these Services don't make any sense um now the very",
    "start": "4501679",
    "end": "4509239"
  },
  {
    "text": "first first day that Kim now he was",
    "start": "4509239",
    "end": "4518239"
  },
  {
    "text": "say you start taking things great from your discussion",
    "start": "4518239",
    "end": "4523960"
  },
  {
    "text": "here everything so separate I don't understand why pull one",
    "start": "4523960",
    "end": "4530440"
  },
  {
    "text": "out so the first of all okay so so so you're asking how can you get rid of services right pretty much um so",
    "start": "4530440",
    "end": "4537600"
  },
  {
    "text": "depending on the service some services are interdependent so there's definitely dependencies between certain Services um",
    "start": "4537600",
    "end": "4543920"
  },
  {
    "text": "like for example um you know the the assisted GPS may may use in underneath",
    "start": "4543920",
    "end": "4551239"
  },
  {
    "text": "the hood your network communication or like the battery service may be used by notification service and whatnot I mean",
    "start": "4551239",
    "end": "4557440"
  },
  {
    "text": "there are definitely some interdependencies um the reason why the Android is not first of all built so",
    "start": "4557440",
    "end": "4564120"
  },
  {
    "text": "Google's primary objective was not to make Android be this super flexible you",
    "start": "4564120",
    "end": "4570199"
  },
  {
    "text": "know run on any embedded device you want platform they specifically built it for you know the the the use cases they they",
    "start": "4570199",
    "end": "4576840"
  },
  {
    "text": "had in mind so it's not there are not a lot of easy to use hooks that allow you to disable these services that said you",
    "start": "4576840",
    "end": "4584159"
  },
  {
    "text": "know while you can what you can do is you can make these Services you can leave the services there but you can actually change their you know their",
    "start": "4584159",
    "end": "4591480"
  },
  {
    "text": "their operations invocations these methods to behave like noops or to return nulls in the cases of for example",
    "start": "4591480",
    "end": "4598159"
  },
  {
    "text": "for say Bluetooth if the Bluetooth adapter doesn't exist you simply return null doesn't mean that you yank out all",
    "start": "4598159",
    "end": "4604880"
  },
  {
    "text": "references to Bluetooth from the device because if you were to do that and somebody installs an app that expects those apis to be there they're they're",
    "start": "4604880",
    "end": "4611679"
  },
  {
    "text": "essentially their C their code will not run right so so you should then",
    "start": "4611679",
    "end": "4617719"
  },
  {
    "text": "advertise your devices as not supporting different Hardware using essentially what you know you can see from package",
    "start": "4617719",
    "end": "4623920"
  },
  {
    "text": "manager how you how you would do that but you doesn't mean that you simply yank out the the code because of the",
    "start": "4623920",
    "end": "4629199"
  },
  {
    "text": "fact that that's just not built that way so that's why it's harder to remove it it's easy to",
    "start": "4629199",
    "end": "4635520"
  },
  {
    "text": "add and you can see in fact for any of the optional services in Android if you take a look at the source code you will",
    "start": "4635520",
    "end": "4641600"
  },
  {
    "text": "see how they deal with a situation where the physical Hardware is not even present and so how do they make it into",
    "start": "4641600",
    "end": "4647760"
  },
  {
    "text": "a aop okay um any other question let's take one last question I think we're",
    "start": "4647760",
    "end": "4653239"
  },
  {
    "text": "done",
    "start": "4653239",
    "end": "4655719"
  },
  {
    "text": "please um so why is NFC done the way it is it's",
    "start": "4663000",
    "end": "4671320"
  },
  {
    "text": "so first of all the question of why is only something that I can guess I you know Google folks don't tend to actually",
    "start": "4671320",
    "end": "4676880"
  },
  {
    "text": "put a lot of information as to why things are built the way they they are in their in the documentation um I'm",
    "start": "4676880",
    "end": "4682800"
  },
  {
    "text": "assuming that this would actually be a a better way of of Building Services than than you know shoving everything into",
    "start": "4682800",
    "end": "4689000"
  },
  {
    "text": "into one giant thing especially because NFC is not something that's expected to be supported on most devices this way",
    "start": "4689000",
    "end": "4695600"
  },
  {
    "text": "you can very easily not start the NFC service at all and essentially doesn't",
    "start": "4695600",
    "end": "4701520"
  },
  {
    "text": "mean that you yank out this NFC adapter you just make it you know you make it beh like oh I can there's nothing I can",
    "start": "4701520",
    "end": "4706679"
  },
  {
    "text": "talk to it returns null when you try to actually talk to service um my assumption is that it probably has to do",
    "start": "4706679",
    "end": "4712400"
  },
  {
    "text": "with that so they just don't want to they don't want to have the the NFC service exist on the on the side of the",
    "start": "4712400",
    "end": "4718480"
  },
  {
    "text": "on the system server if most most devices aren't even going to support it um maybe there's some specific security",
    "start": "4718480",
    "end": "4724800"
  },
  {
    "text": "implications I know NFC runs with the NFC uh uh user identity um and and maybe",
    "start": "4724800",
    "end": "4730600"
  },
  {
    "text": "there's some specific reasons why it needs to do that I haven't dug deep enough to understand that but those are only my",
    "start": "4730600",
    "end": "4736880"
  },
  {
    "text": "suspicions um so let's here I said one got one last question so let's wrap up",
    "start": "4736880",
    "end": "4742080"
  },
  {
    "text": "if you do have additional questions be happy to talk to you as I'm as I'm leaving but thank you guys again hope you learn something",
    "start": "4742080",
    "end": "4750040"
  },
  {
    "text": "[Music]",
    "start": "4751050",
    "end": "4759510"
  }
]