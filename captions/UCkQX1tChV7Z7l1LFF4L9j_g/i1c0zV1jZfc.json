[
  {
    "start": "0",
    "end": "39000"
  },
  {
    "text": "yeah so I took the point of something",
    "start": "6890",
    "end": "9150"
  },
  {
    "text": "weird before I start the next speaker my",
    "start": "9150",
    "end": "11549"
  },
  {
    "text": "friend miles who saw doing interpretive",
    "start": "11549",
    "end": "12840"
  },
  {
    "text": "dance up here he's the organizer of",
    "start": "12840",
    "end": "14730"
  },
  {
    "text": "jQuery SF which took place like five",
    "start": "14730",
    "end": "16919"
  },
  {
    "text": "weeks ago here and I spoke in the same",
    "start": "16919",
    "end": "20040"
  },
  {
    "text": "spot and so it's kind of weird being",
    "start": "20040",
    "end": "21960"
  },
  {
    "text": "like here again yeah so I'm here to talk",
    "start": "21960",
    "end": "26759"
  },
  {
    "text": "to you about future so in a community",
    "start": "26759",
    "end": "30090"
  },
  {
    "text": "like ours which moves extremely fast and",
    "start": "30090",
    "end": "33239"
  },
  {
    "text": "you've heard a lot about that today it's",
    "start": "33239",
    "end": "35670"
  },
  {
    "text": "hard to say where things will be in just",
    "start": "35670",
    "end": "37530"
  },
  {
    "text": "a few years I think this is mostly",
    "start": "37530",
    "end": "40740"
  },
  {
    "text": "because people focus on making",
    "start": "40740",
    "end": "42060"
  },
  {
    "text": "predictions but if we take a tour",
    "start": "42060",
    "end": "44550"
  },
  {
    "text": "through history and look through some of",
    "start": "44550",
    "end": "46079"
  },
  {
    "text": "the most famous predictions people have",
    "start": "46079",
    "end": "47670"
  },
  {
    "text": "made we start to notice a pattern from",
    "start": "47670",
    "end": "51060"
  },
  {
    "text": "scientific American's saying the",
    "start": "51060",
    "end": "52470"
  },
  {
    "text": "automobile will be finished in 1909 to",
    "start": "52470",
    "end": "56070"
  },
  {
    "text": "New York Times saying that we will never",
    "start": "56070",
    "end": "57480"
  },
  {
    "text": "launched a rocket out of Earth's",
    "start": "57480",
    "end": "58860"
  },
  {
    "text": "atmosphere to my personal favorite Steve",
    "start": "58860",
    "end": "62160"
  },
  {
    "text": "Ballmer betting against the iphone the",
    "start": "62160",
    "end": "67860"
  },
  {
    "text": "predictions almost never go well",
    "start": "67860",
    "end": "70200"
  },
  {
    "text": "predictions focus on making very",
    "start": "70200",
    "end": "72420"
  },
  {
    "text": "specific assertions about the future and",
    "start": "72420",
    "end": "74939"
  },
  {
    "text": "in non-scientific context they border",
    "start": "74939",
    "end": "77789"
  },
  {
    "text": "beyond being almost universally wrong",
    "start": "77789",
    "end": "80840"
  },
  {
    "text": "but predictions are also very easy to",
    "start": "80840",
    "end": "83459"
  },
  {
    "text": "make I can say X amazing tool will be",
    "start": "83459",
    "end": "86369"
  },
  {
    "text": "popular in the future with very little",
    "start": "86369",
    "end": "88530"
  },
  {
    "text": "consequence if i'm wrong but if I'm",
    "start": "88530",
    "end": "90959"
  },
  {
    "text": "right I'm a genius and I don't want to",
    "start": "90959",
    "end": "94649"
  },
  {
    "text": "list off a bunch of tools I think are",
    "start": "94649",
    "end": "96479"
  },
  {
    "text": "cool and say the future will be it like",
    "start": "96479",
    "end": "98609"
  },
  {
    "text": "this is the future because that would be",
    "start": "98609",
    "end": "100770"
  },
  {
    "text": "the service to you so I'm going to avoid",
    "start": "100770",
    "end": "103889"
  },
  {
    "start": "102000",
    "end": "200000"
  },
  {
    "text": "making predictions in this talk instead",
    "start": "103889",
    "end": "106740"
  },
  {
    "text": "I'm going to celebrate good ideas that",
    "start": "106740",
    "end": "109079"
  },
  {
    "text": "people have today and we really hope",
    "start": "109079",
    "end": "111179"
  },
  {
    "text": "that those good ideas went out in the",
    "start": "111179",
    "end": "112829"
  },
  {
    "text": "future so I'm James Kyle I'm an engineer",
    "start": "112829",
    "end": "117029"
  },
  {
    "text": "at cloudflare I work on open source",
    "start": "117029",
    "end": "119069"
  },
  {
    "text": "projects such as Babel you can follow me",
    "start": "119069",
    "end": "121770"
  },
  {
    "text": "on the twitters at the James Kyle so I",
    "start": "121770",
    "end": "125189"
  },
  {
    "text": "want to tell you a story my friend April",
    "start": "125189",
    "end": "128250"
  },
  {
    "text": "recently watched my cat was away in",
    "start": "128250",
    "end": "130050"
  },
  {
    "text": "London after she saw my apartment she",
    "start": "130050",
    "end": "133110"
  },
  {
    "text": "said to me James you are living in",
    "start": "133110",
    "end": "135329"
  },
  {
    "text": "livable conditions I looked at her funny",
    "start": "135329",
    "end": "138480"
  },
  {
    "text": "and said what do you",
    "start": "138480",
    "end": "139670"
  },
  {
    "text": "April my apartment is nice she said no",
    "start": "139670",
    "end": "143630"
  },
  {
    "text": "it's not your mattress is on the floor",
    "start": "143630",
    "end": "147260"
  },
  {
    "text": "you have laundry just sitting out your",
    "start": "147260",
    "end": "150950"
  },
  {
    "text": "garbage disposals broken and James you",
    "start": "150950",
    "end": "154250"
  },
  {
    "text": "have three air conditioners in your 400",
    "start": "154250",
    "end": "156770"
  },
  {
    "text": "square foot San Francisco apartment none",
    "start": "156770",
    "end": "158569"
  },
  {
    "text": "of which are being used it's true I",
    "start": "158569",
    "end": "161170"
  },
  {
    "text": "stared at her for a long moment and said",
    "start": "161170",
    "end": "163510"
  },
  {
    "text": "Mike garbage disposals broken and she",
    "start": "163510",
    "end": "167480"
  },
  {
    "text": "said it's a problem that you don't know",
    "start": "167480",
    "end": "169910"
  },
  {
    "text": "that let me help you she did the most",
    "start": "169910",
    "end": "174590"
  },
  {
    "text": "amazing thing possible and offer to get",
    "start": "174590",
    "end": "177019"
  },
  {
    "text": "my apartment in livable conditions so I",
    "start": "177019",
    "end": "180410"
  },
  {
    "text": "felt inspired by April to show she",
    "start": "180410",
    "end": "183410"
  },
  {
    "text": "showed me how terrible I apartment was",
    "start": "183410",
    "end": "184760"
  },
  {
    "text": "and then she showed me how to fix it so",
    "start": "184760",
    "end": "187280"
  },
  {
    "text": "that is my lofty goal here I want to",
    "start": "187280",
    "end": "189080"
  },
  {
    "text": "show you how bad things are now and show",
    "start": "189080",
    "end": "191600"
  },
  {
    "text": "you how good things can be so let's talk",
    "start": "191600",
    "end": "194450"
  },
  {
    "text": "about tools the first thing you know",
    "start": "194450",
    "end": "201440"
  },
  {
    "start": "200000",
    "end": "264000"
  },
  {
    "text": "need to know about most of today's tools",
    "start": "201440",
    "end": "203600"
  },
  {
    "text": "is that they suck when I say tools I",
    "start": "203600",
    "end": "209630"
  },
  {
    "text": "mean a lot of different things from",
    "start": "209630",
    "end": "211730"
  },
  {
    "text": "linters to code coverage implementers",
    "start": "211730",
    "end": "213590"
  },
  {
    "text": "syntax highlighters and scaffolders",
    "start": "213590",
    "end": "215420"
  },
  {
    "text": "there's a lot of tools that you use",
    "start": "215420",
    "end": "217010"
  },
  {
    "text": "every day that you might not notice",
    "start": "217010",
    "end": "219260"
  },
  {
    "text": "until you really think about it these",
    "start": "219260",
    "end": "222380"
  },
  {
    "text": "tools all have amazing people who spend",
    "start": "222380",
    "end": "225200"
  },
  {
    "text": "tens if not hundreds of hours of their",
    "start": "225200",
    "end": "227390"
  },
  {
    "text": "time working on them and they all do",
    "start": "227390",
    "end": "229340"
  },
  {
    "text": "great work but many of these tools are",
    "start": "229340",
    "end": "232130"
  },
  {
    "text": "built up on hacks everything from",
    "start": "232130",
    "end": "238459"
  },
  {
    "text": "regular expressions that directly",
    "start": "238459",
    "end": "240230"
  },
  {
    "text": "manipulate strings of code to",
    "start": "240230",
    "end": "242170"
  },
  {
    "text": "specifically decide the vine that define",
    "start": "242170",
    "end": "245090"
  },
  {
    "text": "syntax that if you do not follow exactly",
    "start": "245090",
    "end": "247609"
  },
  {
    "text": "it will completely break your code and",
    "start": "247609",
    "end": "251350"
  },
  {
    "text": "finally everyone is implementing the",
    "start": "251350",
    "end": "254390"
  },
  {
    "text": "same thing over and over and over again",
    "start": "254390",
    "end": "256609"
  },
  {
    "text": "and every time we do we create a new set",
    "start": "256609",
    "end": "259400"
  },
  {
    "text": "of bugs and end up solving the same",
    "start": "259400",
    "end": "261590"
  },
  {
    "text": "issues in multiple places the good news",
    "start": "261590",
    "end": "265760"
  },
  {
    "start": "264000",
    "end": "352000"
  },
  {
    "text": "is that we're starting to see our tools",
    "start": "265760",
    "end": "267410"
  },
  {
    "text": "change for the better we're starting to",
    "start": "267410",
    "end": "270409"
  },
  {
    "text": "see them get smarter",
    "start": "270409",
    "end": "272080"
  },
  {
    "text": "and to explain how I need to explain",
    "start": "272080",
    "end": "274539"
  },
  {
    "text": "this thing called static analysis the",
    "start": "274539",
    "end": "278379"
  },
  {
    "text": "simple definition of static analysis is",
    "start": "278379",
    "end": "280509"
  },
  {
    "text": "to examine code without execution now",
    "start": "280509",
    "end": "283900"
  },
  {
    "text": "that's a bit abstract so let me explain",
    "start": "283900",
    "end": "285669"
  },
  {
    "text": "further here's a small piece of",
    "start": "285669",
    "end": "288699"
  },
  {
    "text": "JavaScript code as JavaScript developers",
    "start": "288699",
    "end": "291340"
  },
  {
    "text": "we can start to recognize some of the",
    "start": "291340",
    "end": "293050"
  },
  {
    "text": "things here the variable declaration a",
    "start": "293050",
    "end": "295659"
  },
  {
    "text": "string there's a function declaration",
    "start": "295659",
    "end": "298599"
  },
  {
    "text": "and inside the function there is an",
    "start": "298599",
    "end": "300069"
  },
  {
    "text": "assignment expression a computer can",
    "start": "300069",
    "end": "303129"
  },
  {
    "text": "tell all of this to just by looking at",
    "start": "303129",
    "end": "305379"
  },
  {
    "text": "the code it doesn't need to execute Baz",
    "start": "305379",
    "end": "308080"
  },
  {
    "text": "to know that there's an assignment",
    "start": "308080",
    "end": "309940"
  },
  {
    "text": "expression in it and through parsing it",
    "start": "309940",
    "end": "313629"
  },
  {
    "text": "can generate this giant nested object",
    "start": "313629",
    "end": "316419"
  },
  {
    "text": "called an AST and it's just a giant",
    "start": "316419",
    "end": "319240"
  },
  {
    "text": "object with a bunch of properties that",
    "start": "319240",
    "end": "321250"
  },
  {
    "text": "describe the syntax of code and if you",
    "start": "321250",
    "end": "323590"
  },
  {
    "text": "look closely you'll see that it has all",
    "start": "323590",
    "end": "325930"
  },
  {
    "text": "of the same syntax that we know as",
    "start": "325930",
    "end": "328449"
  },
  {
    "text": "developers so once you have this AST you",
    "start": "328449",
    "end": "332979"
  },
  {
    "text": "can work with it much easier than like",
    "start": "332979",
    "end": "335259"
  },
  {
    "text": "regex that matches directs like strings",
    "start": "335259",
    "end": "338319"
  },
  {
    "text": "of code it's just a giant object that",
    "start": "338319",
    "end": "341139"
  },
  {
    "text": "you can traverse to look for things or",
    "start": "341139",
    "end": "343240"
  },
  {
    "text": "manipulate code or do whatever you want",
    "start": "343240",
    "end": "345099"
  },
  {
    "text": "I can easily go through the ast and find",
    "start": "345099",
    "end": "348909"
  },
  {
    "text": "all the variables or find all the",
    "start": "348909",
    "end": "350440"
  },
  {
    "text": "functions in my code but all this",
    "start": "350440",
    "end": "353319"
  },
  {
    "start": "352000",
    "end": "429000"
  },
  {
    "text": "revolves around syntax syntax to find",
    "start": "353319",
    "end": "356889"
  },
  {
    "text": "certain things but if you want to drill",
    "start": "356889",
    "end": "358960"
  },
  {
    "text": "down deeper you start to lose the",
    "start": "358960",
    "end": "360849"
  },
  {
    "text": "ability to do so say you want to write a",
    "start": "360849",
    "end": "364599"
  },
  {
    "text": "tool that does something special with",
    "start": "364599",
    "end": "366129"
  },
  {
    "text": "all of your classes in es5 we expressed",
    "start": "366129",
    "end": "369069"
  },
  {
    "text": "classes as just functions these",
    "start": "369069",
    "end": "371589"
  },
  {
    "text": "functions didn't mean anything in",
    "start": "371589",
    "end": "373389"
  },
  {
    "text": "particular and without executing the",
    "start": "373389",
    "end": "375639"
  },
  {
    "text": "code it's difficult to tell what its",
    "start": "375639",
    "end": "377440"
  },
  {
    "text": "purpose is we could attempt to tell how",
    "start": "377440",
    "end": "380319"
  },
  {
    "text": "this particular function gets used by",
    "start": "380319",
    "end": "382599"
  },
  {
    "text": "manually checking the rest of the",
    "start": "382599",
    "end": "383860"
  },
  {
    "text": "program to see how it's called but then",
    "start": "383860",
    "end": "386889"
  },
  {
    "text": "you run into problems because it might",
    "start": "386889",
    "end": "388150"
  },
  {
    "text": "be called in different ways because",
    "start": "388150",
    "end": "389830"
  },
  {
    "text": "nothing says it can't it gets even worse",
    "start": "389830",
    "end": "393159"
  },
  {
    "text": "when you start to pass references around",
    "start": "393159",
    "end": "395020"
  },
  {
    "text": "here I'm passing our function into bar",
    "start": "395020",
    "end": "397389"
  },
  {
    "text": "but now who knows how bar is going to",
    "start": "397389",
    "end": "400899"
  },
  {
    "text": "call it that could be entirely separate",
    "start": "400899",
    "end": "403690"
  },
  {
    "text": "file and it could be called condition",
    "start": "403690",
    "end": "405639"
  },
  {
    "text": "and there's a ton of work we would need",
    "start": "405639",
    "end": "407319"
  },
  {
    "text": "to do in order to figure out if it's a",
    "start": "407319",
    "end": "409060"
  },
  {
    "text": "class so this sucks in es6 this has been",
    "start": "409060",
    "end": "414669"
  },
  {
    "text": "release for pet replaced with an actual",
    "start": "414669",
    "end": "416680"
  },
  {
    "text": "syntax for expressing classes now this",
    "start": "416680",
    "end": "418930"
  },
  {
    "text": "is a bit controversial especially with",
    "start": "418930",
    "end": "420639"
  },
  {
    "text": "some of the people in this very audience",
    "start": "420639",
    "end": "422340"
  },
  {
    "text": "but it means that within static analysis",
    "start": "422340",
    "end": "426430"
  },
  {
    "text": "we can immediately find all of our",
    "start": "426430",
    "end": "428020"
  },
  {
    "text": "classes effectively syntax and the",
    "start": "428020",
    "end": "432580"
  },
  {
    "start": "429000",
    "end": "474000"
  },
  {
    "text": "semantics they define are enforcing new",
    "start": "432580",
    "end": "435069"
  },
  {
    "text": "rules and we can start to operate on",
    "start": "435069",
    "end": "437349"
  },
  {
    "text": "these new rules in es5 we had common j/s",
    "start": "437349",
    "end": "441939"
  },
  {
    "text": "modules it was always a temporary",
    "start": "441939",
    "end": "444099"
  },
  {
    "text": "solution that worked inside of an",
    "start": "444099",
    "end": "445659"
  },
  {
    "text": "existing syntax tools like browser",
    "start": "445659",
    "end": "448180"
  },
  {
    "text": "firework by running static analysis and",
    "start": "448180",
    "end": "450520"
  },
  {
    "text": "the code looking for required calls but",
    "start": "450520",
    "end": "453310"
  },
  {
    "text": "this is easy to break just by putting a",
    "start": "453310",
    "end": "455800"
  },
  {
    "text": "string elsewhere it no longer works so",
    "start": "455800",
    "end": "459159"
  },
  {
    "text": "this also sells any is six we now have a",
    "start": "459159",
    "end": "463240"
  },
  {
    "text": "syntax for defining modules and we",
    "start": "463240",
    "end": "465460"
  },
  {
    "text": "enforce the rule that it can't have",
    "start": "465460",
    "end": "467020"
  },
  {
    "text": "dynamic strings for imports this means",
    "start": "467020",
    "end": "469539"
  },
  {
    "text": "that tools that use that static analysis",
    "start": "469539",
    "end": "471490"
  },
  {
    "text": "can operate safely on these rules well",
    "start": "471490",
    "end": "475659"
  },
  {
    "start": "474000",
    "end": "505000"
  },
  {
    "text": "this also means is that we can have",
    "start": "475659",
    "end": "477099"
  },
  {
    "text": "smarter linting to reuse my modules",
    "start": "477099",
    "end": "480339"
  },
  {
    "text": "example say we have module one that",
    "start": "480339",
    "end": "482469"
  },
  {
    "text": "imports module to it but only calls the",
    "start": "482469",
    "end": "485050"
  },
  {
    "text": "my method method a really smart linter",
    "start": "485050",
    "end": "488289"
  },
  {
    "text": "will be able to look at module to notice",
    "start": "488289",
    "end": "490270"
  },
  {
    "text": "that can just import the my method",
    "start": "490270",
    "end": "492069"
  },
  {
    "text": "directly because it doesn't care what",
    "start": "492069",
    "end": "494529"
  },
  {
    "text": "the context is so linter alerts you and",
    "start": "494529",
    "end": "497710"
  },
  {
    "text": "say hey you can just import the my",
    "start": "497710",
    "end": "499629"
  },
  {
    "text": "method method so you fix your imports",
    "start": "499629",
    "end": "502930"
  },
  {
    "text": "and you clean it up a bit the reason I",
    "start": "502930",
    "end": "506710"
  },
  {
    "text": "use that example is because it leads to",
    "start": "506710",
    "end": "508659"
  },
  {
    "text": "smarter bundling any is five we have",
    "start": "508659",
    "end": "512320"
  },
  {
    "text": "common js2 Express modules like this and",
    "start": "512320",
    "end": "514630"
  },
  {
    "text": "if you've ever seen a browser five",
    "start": "514630",
    "end": "516448"
  },
  {
    "text": "bundle you'll notice that the use of",
    "start": "516449",
    "end": "519969"
  },
  {
    "text": "this arbitrary syntax can cause or",
    "start": "519969",
    "end": "522518"
  },
  {
    "text": "causes bundles to look like this all of",
    "start": "522519",
    "end": "525699"
  },
  {
    "text": "our modules are in one file in a giant",
    "start": "525699",
    "end": "527589"
  },
  {
    "text": "array of anonymous functions that wrap",
    "start": "527589",
    "end": "529660"
  },
  {
    "text": "in math our dependencies but this is so",
    "start": "529660",
    "end": "532240"
  },
  {
    "text": "much extra code why can't it be smarter",
    "start": "532240",
    "end": "534810"
  },
  {
    "text": "well the new import export syntax we can",
    "start": "534810",
    "end": "538220"
  },
  {
    "text": "if you look at these two modules next to",
    "start": "538220",
    "end": "540560"
  },
  {
    "text": "each other we can easily see that",
    "start": "540560",
    "end": "542150"
  },
  {
    "text": "there's even more code than we really",
    "start": "542150",
    "end": "544130"
  },
  {
    "text": "need without the import & exports it",
    "start": "544130",
    "end": "546590"
  },
  {
    "text": "almost reads like a single file so why",
    "start": "546590",
    "end": "550250"
  },
  {
    "text": "not just do just that here we can see",
    "start": "550250",
    "end": "552890"
  },
  {
    "text": "the only only the code that we need to",
    "start": "552890",
    "end": "554660"
  },
  {
    "text": "execute the program properly now this",
    "start": "554660",
    "end": "559040"
  },
  {
    "start": "557000",
    "end": "599000"
  },
  {
    "text": "example can lead even further to smarter",
    "start": "559040",
    "end": "561200"
  },
  {
    "text": "minifying we can take a look at our",
    "start": "561200",
    "end": "564320"
  },
  {
    "text": "bundled module and since everything is",
    "start": "564320",
    "end": "566120"
  },
  {
    "text": "in one place we can track values to see",
    "start": "566120",
    "end": "568070"
  },
  {
    "text": "how to minify it better first we'll",
    "start": "568070",
    "end": "570260"
  },
  {
    "text": "notice that the my method always returns",
    "start": "570260",
    "end": "571790"
  },
  {
    "text": "the same value so we can turn it into a",
    "start": "571790",
    "end": "574400"
  },
  {
    "text": "constant and update all the references",
    "start": "574400",
    "end": "575750"
  },
  {
    "text": "and since it's a string we don't have to",
    "start": "575750",
    "end": "577940"
  },
  {
    "text": "worry at all about reference equality",
    "start": "577940",
    "end": "579730"
  },
  {
    "text": "but then will notice the reference is",
    "start": "579730",
    "end": "581990"
  },
  {
    "text": "only used in one place so why don't we",
    "start": "581990",
    "end": "584360"
  },
  {
    "text": "just in line it but then holy crap",
    "start": "584360",
    "end": "586430"
  },
  {
    "text": "special method is never getting called",
    "start": "586430",
    "end": "588650"
  },
  {
    "text": "so let's just remove that and",
    "start": "588650",
    "end": "590470"
  },
  {
    "text": "congratulations you've created the",
    "start": "590470",
    "end": "592340"
  },
  {
    "text": "fastest possible program now this isn't",
    "start": "592340",
    "end": "595820"
  },
  {
    "text": "the most practical example but it",
    "start": "595820",
    "end": "598010"
  },
  {
    "text": "demonstrates what I mean getting to",
    "start": "598010",
    "end": "600560"
  },
  {
    "start": "599000",
    "end": "657000"
  },
  {
    "text": "build stuff with static analysis is",
    "start": "600560",
    "end": "602960"
  },
  {
    "text": "really awesome so since I'm heavily",
    "start": "602960",
    "end": "606110"
  },
  {
    "text": "involved in Babel I want to talk to you",
    "start": "606110",
    "end": "607820"
  },
  {
    "text": "a little bit about it so quick poll how",
    "start": "607820",
    "end": "610190"
  },
  {
    "text": "many of you have heard of Babel a lot",
    "start": "610190",
    "end": "613310"
  },
  {
    "text": "how many of you have used it that's also",
    "start": "613310",
    "end": "616040"
  },
  {
    "text": "a lot so for those that don't know Babel",
    "start": "616040",
    "end": "620630"
  },
  {
    "text": "is a general-purpose JavaScript compiler",
    "start": "620630",
    "end": "622340"
  },
  {
    "text": "that you can hook into and do just about",
    "start": "622340",
    "end": "624620"
  },
  {
    "text": "anything its primary purpose today is to",
    "start": "624620",
    "end": "628400"
  },
  {
    "text": "compile future JavaScript syntax into a",
    "start": "628400",
    "end": "631220"
  },
  {
    "text": "version that works everywhere today it",
    "start": "631220",
    "end": "634100"
  },
  {
    "text": "can compile constants classes modules",
    "start": "634100",
    "end": "636350"
  },
  {
    "text": "arrow functions generator generators and",
    "start": "636350",
    "end": "638840"
  },
  {
    "text": "even cool language extensions like jsx",
    "start": "638840",
    "end": "641360"
  },
  {
    "text": "and flow so that's pretty cool but",
    "start": "641360",
    "end": "645770"
  },
  {
    "text": "what's even cooler is that while",
    "start": "645770",
    "end": "648500"
  },
  {
    "text": "building all of these cool 8h es2015",
    "start": "648500",
    "end": "651620"
  },
  {
    "text": "transforms babel became awesome at",
    "start": "651620",
    "end": "654410"
  },
  {
    "text": "building any kind of transform so we",
    "start": "654410",
    "end": "658250"
  },
  {
    "start": "657000",
    "end": "749000"
  },
  {
    "text": "open this up to the world via plugins",
    "start": "658250",
    "end": "660220"
  },
  {
    "text": "with plugins you have the full if you",
    "start": "660220",
    "end": "663410"
  },
  {
    "text": "have access to the full power of battle",
    "start": "663410",
    "end": "665530"
  },
  {
    "text": "let me give an example imagine you have",
    "start": "665530",
    "end": "669020"
  },
  {
    "text": "this code this is the es2015 you can",
    "start": "669020",
    "end": "672019"
  },
  {
    "text": "instructing sin track syntax for arrays",
    "start": "672019",
    "end": "674420"
  },
  {
    "text": "we are creating a new X in Y variables",
    "start": "674420",
    "end": "677569"
  },
  {
    "text": "and assigning them to the first and",
    "start": "677569",
    "end": "679189"
  },
  {
    "text": "second values in the array that",
    "start": "679189",
    "end": "680689"
  },
  {
    "text": "calculate coordinates returns now if we",
    "start": "680689",
    "end": "685550"
  },
  {
    "text": "want to compile this down to a version",
    "start": "685550",
    "end": "687319"
  },
  {
    "text": "that works today we create a temporary",
    "start": "687319",
    "end": "689839"
  },
  {
    "text": "variable named ref assign it to the",
    "start": "689839",
    "end": "692059"
  },
  {
    "text": "results of calculate coordinates and we",
    "start": "692059",
    "end": "694069"
  },
  {
    "text": "create two new variables at the first",
    "start": "694069",
    "end": "695449"
  },
  {
    "text": "and second values of breath now this is",
    "start": "695449",
    "end": "697879"
  },
  {
    "text": "a pretty cool transformer and I might",
    "start": "697879",
    "end": "700009"
  },
  {
    "text": "just walk away without realizing that",
    "start": "700009",
    "end": "701569"
  },
  {
    "text": "the syntax is more complex than that",
    "start": "701569",
    "end": "703959"
  },
  {
    "text": "because this type of assignment can also",
    "start": "703959",
    "end": "706249"
  },
  {
    "text": "be within expressions so if you run the",
    "start": "706249",
    "end": "708619"
  },
  {
    "text": "same transformer on this code you'll",
    "start": "708619",
    "end": "710869"
  },
  {
    "text": "discover that it creates invalid syntax",
    "start": "710869",
    "end": "712959"
  },
  {
    "text": "you can't have a statement inside of",
    "start": "712959",
    "end": "715459"
  },
  {
    "text": "expression like that as developers we",
    "start": "715459",
    "end": "717799"
  },
  {
    "text": "can immediately recognize that and we",
    "start": "717799",
    "end": "719540"
  },
  {
    "text": "know where to go from here but Babel",
    "start": "719540",
    "end": "722809"
  },
  {
    "text": "will look at this transfer made tea AST",
    "start": "722809",
    "end": "725119"
  },
  {
    "text": "realize it's incorrect understand what",
    "start": "725119",
    "end": "728299"
  },
  {
    "text": "you're attempting to do and fix the code",
    "start": "728299",
    "end": "730910"
  },
  {
    "text": "for you by turning the statement into an",
    "start": "730910",
    "end": "732799"
  },
  {
    "text": "expression and this is all made possible",
    "start": "732799",
    "end": "736309"
  },
  {
    "text": "by the fact that Babel fundamentally",
    "start": "736309",
    "end": "738740"
  },
  {
    "text": "understands JavaScript it is aware of",
    "start": "738740",
    "end": "741290"
  },
  {
    "text": "every single part of that language and",
    "start": "741290",
    "end": "743209"
  },
  {
    "text": "in being designed as a compiler it",
    "start": "743209",
    "end": "745369"
  },
  {
    "text": "understands how to transform JavaScript",
    "start": "745369",
    "end": "747649"
  },
  {
    "text": "really well Babel also recently",
    "start": "747649",
    "end": "751160"
  },
  {
    "start": "749000",
    "end": "859000"
  },
  {
    "text": "introduced type inference so if you",
    "start": "751160",
    "end": "753860"
  },
  {
    "text": "listen to Steve collab Nets talk about",
    "start": "753860",
    "end": "755600"
  },
  {
    "text": "rust and node you talked a little bit",
    "start": "755600",
    "end": "757009"
  },
  {
    "text": "about how r us doesn't require you to",
    "start": "757009",
    "end": "758689"
  },
  {
    "text": "type right types in many places just",
    "start": "758689",
    "end": "761209"
  },
  {
    "text": "because it confer them so bad well can",
    "start": "761209",
    "end": "764119"
  },
  {
    "text": "do many of the same things they won't",
    "start": "764119",
    "end": "765949"
  },
  {
    "text": "type check for you but it can but it can",
    "start": "765949",
    "end": "768740"
  },
  {
    "text": "provide tools built on top of Babel with",
    "start": "768740",
    "end": "771439"
  },
  {
    "text": "a lots of type information and people",
    "start": "771439",
    "end": "773809"
  },
  {
    "text": "have already gone and built type systems",
    "start": "773809",
    "end": "775730"
  },
  {
    "text": "on top of Babel so let's take a look at",
    "start": "775730",
    "end": "778549"
  },
  {
    "text": "that that one can take a piece of code",
    "start": "778549",
    "end": "781220"
  },
  {
    "text": "like this with a couple variables are",
    "start": "781220",
    "end": "783559"
  },
  {
    "text": "being set and manipulated and can add",
    "start": "783559",
    "end": "786559"
  },
  {
    "text": "type information to it and this is what",
    "start": "786559",
    "end": "788540"
  },
  {
    "text": "it looks like when printed back out with",
    "start": "788540",
    "end": "790339"
  },
  {
    "text": "slow type annotations but as a vela /",
    "start": "790339",
    "end": "794179"
  },
  {
    "text": "you don't need to write any of this it",
    "start": "794179",
    "end": "796579"
  },
  {
    "text": "knows that strings are strings it knows",
    "start": "796579",
    "end": "798290"
  },
  {
    "text": "that numbers are numbers and it knows",
    "start": "798290",
    "end": "799790"
  },
  {
    "text": "that strings added two numbers or",
    "start": "799790",
    "end": "801559"
  },
  {
    "text": "strings but let's talk about that last",
    "start": "801559",
    "end": "803629"
  },
  {
    "text": "one vowel can take a",
    "start": "803629",
    "end": "805850"
  },
  {
    "text": "that string and a number see that they",
    "start": "805850",
    "end": "808639"
  },
  {
    "text": "are being added together and know that",
    "start": "808639",
    "end": "810410"
  },
  {
    "text": "the result will be a string it's not",
    "start": "810410",
    "end": "812089"
  },
  {
    "text": "executing the code but has the same",
    "start": "812089",
    "end": "814130"
  },
  {
    "text": "knowledge is that we do as developers to",
    "start": "814130",
    "end": "815810"
  },
  {
    "text": "say that no matter what that's going to",
    "start": "815810",
    "end": "817579"
  },
  {
    "text": "be a strength so that's great that Babel",
    "start": "817579",
    "end": "821120"
  },
  {
    "text": "can statically evaluate these",
    "start": "821120",
    "end": "822410"
  },
  {
    "text": "expressions but if we look at the whole",
    "start": "822410",
    "end": "825560"
  },
  {
    "text": "code we can see that towards the bottom",
    "start": "825560",
    "end": "827209"
  },
  {
    "text": "that doesn't carry through with",
    "start": "827209",
    "end": "828649"
  },
  {
    "text": "statements at the end of that code",
    "start": "828649",
    "end": "830810"
  },
  {
    "text": "snippet Babel isn't sure if it's a",
    "start": "830810",
    "end": "832339"
  },
  {
    "text": "boolean a number a string a function or",
    "start": "832339",
    "end": "834319"
  },
  {
    "text": "an array but Babel gets even smarter",
    "start": "834319",
    "end": "837920"
  },
  {
    "text": "than that take this piece of code we",
    "start": "837920",
    "end": "839959"
  },
  {
    "text": "have one variable str that gets",
    "start": "839959",
    "end": "841880"
  },
  {
    "text": "reassigned to different values as the",
    "start": "841880",
    "end": "843440"
  },
  {
    "text": "code executes well Babel can start",
    "start": "843440",
    "end": "846139"
  },
  {
    "text": "traversing this code and be able tell",
    "start": "846139",
    "end": "847970"
  },
  {
    "text": "what that value will be over time it is",
    "start": "847970",
    "end": "850910"
  },
  {
    "text": "statically evaluating all of this code",
    "start": "850910",
    "end": "853430"
  },
  {
    "text": "adding tons of type information that",
    "start": "853430",
    "end": "855769"
  },
  {
    "text": "plugins to take advantage up to be",
    "start": "855769",
    "end": "857269"
  },
  {
    "text": "smarter so babbles a platform it's meant",
    "start": "857269",
    "end": "861350"
  },
  {
    "start": "859000",
    "end": "1217000"
  },
  {
    "text": "to be built upon and many already have I",
    "start": "861350",
    "end": "863810"
  },
  {
    "text": "mentioned some of the someone built a",
    "start": "863810",
    "end": "866269"
  },
  {
    "text": "type system on it but other people have",
    "start": "866269",
    "end": "868550"
  },
  {
    "text": "built like entire new languages on have",
    "start": "868550",
    "end": "870529"
  },
  {
    "text": "a Babel that's like more than one so I'm",
    "start": "870529",
    "end": "874220"
  },
  {
    "text": "not going to go into somehow that crazy",
    "start": "874220",
    "end": "875990"
  },
  {
    "text": "stuff is built but instead some of the",
    "start": "875990",
    "end": "879019"
  },
  {
    "text": "more common use cases amber was actually",
    "start": "879019",
    "end": "882139"
  },
  {
    "text": "one of the first major communities to",
    "start": "882139",
    "end": "883790"
  },
  {
    "text": "adopt Babel and today they use it in",
    "start": "883790",
    "end": "886339"
  },
  {
    "text": "some interesting ways amber has a bunch",
    "start": "886339",
    "end": "890089"
  },
  {
    "text": "of extra code that exists to make the",
    "start": "890089",
    "end": "891920"
  },
  {
    "text": "development experience nicer but they",
    "start": "891920",
    "end": "894410"
  },
  {
    "text": "will use Babel to find this extra code",
    "start": "894410",
    "end": "897439"
  },
  {
    "text": "and remove it leaving only the necessary",
    "start": "897439",
    "end": "900170"
  },
  {
    "text": "code in this case it's feature flags",
    "start": "900170",
    "end": "903350"
  },
  {
    "text": "that you have enabled or disabled reacts",
    "start": "903350",
    "end": "907610"
  },
  {
    "text": "has been another major adopter about two",
    "start": "907610",
    "end": "909769"
  },
  {
    "text": "three month ish ago it deprecated all of",
    "start": "909769",
    "end": "914089"
  },
  {
    "text": "their tools in favor of Babel so react",
    "start": "914089",
    "end": "918470"
  },
  {
    "text": "has a syntax called jsx which is also",
    "start": "918470",
    "end": "920660"
  },
  {
    "text": "built on babble babble can look through",
    "start": "920660",
    "end": "923000"
  },
  {
    "text": "all these jsx elements and find the ones",
    "start": "923000",
    "end": "925160"
  },
  {
    "text": "that are immutable if it finds any it",
    "start": "925160",
    "end": "928610"
  },
  {
    "text": "will hoist them to the highest possible",
    "start": "928610",
    "end": "930439"
  },
  {
    "text": "scope and they will only be created once",
    "start": "930439",
    "end": "933189"
  },
  {
    "text": "which makes the rendering of react much",
    "start": "933189",
    "end": "935990"
  },
  {
    "text": "much faster",
    "start": "935990",
    "end": "938709"
  },
  {
    "text": "I bring up ember and reacts because I",
    "start": "938870",
    "end": "940910"
  },
  {
    "text": "think they're really the communities to",
    "start": "940910",
    "end": "942320"
  },
  {
    "text": "be watching right now ember and react",
    "start": "942320",
    "end": "945380"
  },
  {
    "text": "are both highly influential in the",
    "start": "945380",
    "end": "947360"
  },
  {
    "text": "direction of the JavaScript community in",
    "start": "947360",
    "end": "949400"
  },
  {
    "text": "terms of its tooling frameworks and etc",
    "start": "949400",
    "end": "952420"
  },
  {
    "text": "unsurprisingly it's also where you can",
    "start": "952420",
    "end": "954260"
  },
  {
    "text": "see some of the bigger problems being",
    "start": "954260",
    "end": "956540"
  },
  {
    "text": "solved and existing problems being",
    "start": "956540",
    "end": "959000"
  },
  {
    "text": "solved in new ways ember in react have",
    "start": "959000",
    "end": "963230"
  },
  {
    "text": "very different approaches and ideals",
    "start": "963230",
    "end": "964960"
  },
  {
    "text": "ember is focused on making developers as",
    "start": "964960",
    "end": "967550"
  },
  {
    "text": "productive as possible they also follow",
    "start": "967550",
    "end": "970190"
  },
  {
    "text": "this principle of stability without",
    "start": "970190",
    "end": "971630"
  },
  {
    "text": "stagnation which I'll get to in a second",
    "start": "971630",
    "end": "973910"
  },
  {
    "text": "if you worked around the Java sir",
    "start": "973910",
    "end": "976460"
  },
  {
    "text": "community to the last few years you'll",
    "start": "976460",
    "end": "977779"
  },
  {
    "text": "know that react has really came out of",
    "start": "977779",
    "end": "979400"
  },
  {
    "text": "left field but the community it has",
    "start": "979400",
    "end": "981680"
  },
  {
    "text": "built up in the last two or so years is",
    "start": "981680",
    "end": "983950"
  },
  {
    "text": "really focused on experimenting with new",
    "start": "983950",
    "end": "986600"
  },
  {
    "text": "ideas it's really challenging the",
    "start": "986600",
    "end": "988940"
  },
  {
    "text": "assumptions people have about what best",
    "start": "988940",
    "end": "990830"
  },
  {
    "text": "practices really are to try and",
    "start": "990830",
    "end": "994850"
  },
  {
    "text": "summarize ember ecosystem is very much",
    "start": "994850",
    "end": "997250"
  },
  {
    "text": "innovation without rewrites they have a",
    "start": "997250",
    "end": "999589"
  },
  {
    "text": "very good low level set of abstractions",
    "start": "999589",
    "end": "1001870"
  },
  {
    "text": "that allow them to dramatically change",
    "start": "1001870",
    "end": "1004089"
  },
  {
    "text": "major pieces of the framework without",
    "start": "1004089",
    "end": "1007029"
  },
  {
    "text": "breaking anything from users they also",
    "start": "1007029",
    "end": "1009580"
  },
  {
    "text": "have this thing called ember CLI which",
    "start": "1009580",
    "end": "1011800"
  },
  {
    "text": "standardizes all the ways that ember",
    "start": "1011800",
    "end": "1013750"
  },
  {
    "text": "apps are built out of the box it comes",
    "start": "1013750",
    "end": "1016270"
  },
  {
    "text": "with all the tools you need to build a",
    "start": "1016270",
    "end": "1018130"
  },
  {
    "text": "massive application they're also able to",
    "start": "1018130",
    "end": "1020650"
  },
  {
    "text": "do some interesting things like turn on",
    "start": "1020650",
    "end": "1022870"
  },
  {
    "text": "CSP and s RI by default if you aren't",
    "start": "1022870",
    "end": "1025959"
  },
  {
    "text": "aware of CSP RS rye there are two newer",
    "start": "1025959",
    "end": "1028089"
  },
  {
    "text": "web standards that are designed to make",
    "start": "1028089",
    "end": "1029709"
  },
  {
    "text": "the web more secure these aren't sexy",
    "start": "1029709",
    "end": "1032050"
  },
  {
    "text": "features they get overlooked by many",
    "start": "1032050",
    "end": "1034240"
  },
  {
    "text": "people but they are incredibly important",
    "start": "1034240",
    "end": "1036760"
  },
  {
    "text": "so amber pushing this forward is a",
    "start": "1036760",
    "end": "1039339"
  },
  {
    "text": "really big deal and we should all",
    "start": "1039339",
    "end": "1041890"
  },
  {
    "text": "applaud them for it react on the other",
    "start": "1041890",
    "end": "1045280"
  },
  {
    "text": "hand is very much in flux that pun was",
    "start": "1045280",
    "end": "1048940"
  },
  {
    "text": "horrible I apologize for that one but",
    "start": "1048940",
    "end": "1052330"
  },
  {
    "text": "it's true the react community has not",
    "start": "1052330",
    "end": "1054250"
  },
  {
    "text": "figured everything up and they are",
    "start": "1054250",
    "end": "1056710"
  },
  {
    "text": "trying to find new and innovative ways",
    "start": "1056710",
    "end": "1059140"
  },
  {
    "text": "of solving problems and this is changing",
    "start": "1059140",
    "end": "1062260"
  },
  {
    "text": "the way the JavaScript community as a",
    "start": "1062260",
    "end": "1063610"
  },
  {
    "text": "whole works you're seeing ember angular",
    "start": "1063610",
    "end": "1066220"
  },
  {
    "text": "and others trying to steal some of the",
    "start": "1066220",
    "end": "1067600"
  },
  {
    "text": "ideas here when are the ember core team",
    "start": "1067600",
    "end": "1070540"
  },
  {
    "text": "members once told me that react is",
    "start": "1070540",
    "end": "1072670"
  },
  {
    "text": "members playground they are happy to",
    "start": "1072670",
    "end": "1074740"
  },
  {
    "text": "watch to react community to work out the",
    "start": "1074740",
    "end": "1076690"
  },
  {
    "text": "best solutions and then steal them for",
    "start": "1076690",
    "end": "1078250"
  },
  {
    "text": "their own can take that how you ever",
    "start": "1078250",
    "end": "1080380"
  },
  {
    "text": "however you want and this is awesome for",
    "start": "1080380",
    "end": "1083050"
  },
  {
    "text": "everyone the react community is creating",
    "start": "1083050",
    "end": "1084910"
  },
  {
    "text": "and popularizing new and better ideas",
    "start": "1084910",
    "end": "1086800"
  },
  {
    "text": "for everywhere in the JavaScript",
    "start": "1086800",
    "end": "1087850"
  },
  {
    "text": "community so I need to wrap up my talk",
    "start": "1087850",
    "end": "1091180"
  },
  {
    "text": "but I want to leave you with something",
    "start": "1091180",
    "end": "1092730"
  },
  {
    "text": "hold onto your butts because I'm about",
    "start": "1092730",
    "end": "1094750"
  },
  {
    "text": "to thought leader all of you this is a",
    "start": "1094750",
    "end": "1098050"
  },
  {
    "text": "bit inspired by my friend and personal",
    "start": "1098050",
    "end": "1100450"
  },
  {
    "text": "hero Jason Laster who has given a few",
    "start": "1100450",
    "end": "1102580"
  },
  {
    "text": "talks with a similar message are you",
    "start": "1102580",
    "end": "1105490"
  },
  {
    "text": "ready um I'm borrowing from emily's Rose",
    "start": "1105490",
    "end": "1109990"
  },
  {
    "text": "talks right now with the dramatic pause",
    "start": "1109990",
    "end": "1111430"
  },
  {
    "text": "thing so yeah when something frustrates",
    "start": "1111430",
    "end": "1114940"
  },
  {
    "text": "you it's probably frustrated others and",
    "start": "1114940",
    "end": "1118210"
  },
  {
    "text": "it will continue to frustrate people so",
    "start": "1118210",
    "end": "1121780"
  },
  {
    "text": "fix it for everyone tools can make your",
    "start": "1121780",
    "end": "1125380"
  },
  {
    "text": "life easier and we can all work on them",
    "start": "1125380",
    "end": "1128440"
  },
  {
    "text": "I don't want to turn this into a huge",
    "start": "1128440",
    "end": "1130720"
  },
  {
    "text": "battle plug but I think Babel might be a",
    "start": "1130720",
    "end": "1133180"
  },
  {
    "text": "cool place to start the plugins I",
    "start": "1133180",
    "end": "1135670"
  },
  {
    "text": "mentioned earlier are really easy to",
    "start": "1135670",
    "end": "1137290"
  },
  {
    "text": "write here are some examples of the",
    "start": "1137290",
    "end": "1138880"
  },
  {
    "text": "officially maintain ones in the Babel",
    "start": "1138880",
    "end": "1141160"
  },
  {
    "text": "plugins org here's one that turns object",
    "start": "1141160",
    "end": "1144010"
  },
  {
    "text": "consigned to the Babel extends helper",
    "start": "1144010",
    "end": "1145860"
  },
  {
    "text": "here's one that turns a string properly",
    "start": "1145860",
    "end": "1148240"
  },
  {
    "text": "literals and to identify our property",
    "start": "1148240",
    "end": "1149980"
  },
  {
    "text": "literals here's one that removes",
    "start": "1149980",
    "end": "1151780"
  },
  {
    "text": "debugger statements here's one that",
    "start": "1151780",
    "end": "1153520"
  },
  {
    "text": "turns evals into normal code and another",
    "start": "1153520",
    "end": "1157360"
  },
  {
    "text": "one will turn undefined into void 0 and",
    "start": "1157360",
    "end": "1160090"
  },
  {
    "text": "my personal favorite a plug-in that",
    "start": "1160090",
    "end": "1163240"
  },
  {
    "text": "turns all of your identifier Xin to",
    "start": "1163240",
    "end": "1165010"
  },
  {
    "text": "emojis this plug-in is mostly emojis but",
    "start": "1165010",
    "end": "1168640"
  },
  {
    "text": "if we scroll down we can see it works",
    "start": "1168640",
    "end": "1170830"
  },
  {
    "text": "just the same as all the other plugins",
    "start": "1170830",
    "end": "1174300"
  },
  {
    "text": "the point is even when you run into the",
    "start": "1174300",
    "end": "1177340"
  },
  {
    "text": "smallest can inconveniences fix them",
    "start": "1177340",
    "end": "1179680"
  },
  {
    "text": "yourself say you create a class you",
    "start": "1179680",
    "end": "1182290"
  },
  {
    "text": "override a constructor and you forget to",
    "start": "1182290",
    "end": "1183880"
  },
  {
    "text": "call super then you spend 20 minutes",
    "start": "1183880",
    "end": "1185380"
  },
  {
    "text": "trying to figure out what it is you've",
    "start": "1185380",
    "end": "1187180"
  },
  {
    "text": "probably done that a bunch of times too",
    "start": "1187180",
    "end": "1189010"
  },
  {
    "text": "but once you figure it out right a tool",
    "start": "1189010",
    "end": "1191770"
  },
  {
    "text": "that will correct you at compile time",
    "start": "1191770",
    "end": "1193480"
  },
  {
    "text": "and be done fixing that problem forever",
    "start": "1193480",
    "end": "1197340"
  },
  {
    "text": "that tool would be like 10 lines of code",
    "start": "1197340",
    "end": "1200380"
  },
  {
    "text": "you can easily do it that's my talk and",
    "start": "1200380",
    "end": "1204520"
  },
  {
    "text": "you can follow me on Twitter",
    "start": "1204520",
    "end": "1206639"
  },
  {
    "text": "cool",
    "start": "1206639",
    "end": "1209639"
  }
]