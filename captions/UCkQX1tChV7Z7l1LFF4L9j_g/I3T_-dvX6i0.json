[
  {
    "start": "0",
    "end": "200000"
  },
  {
    "text": "my name is Karl Quinn I'm gonna talk today about the Netflix open source",
    "start": "7069",
    "end": "12300"
  },
  {
    "text": "cloud what would you call it package of projects platform cloud platform yeah",
    "start": "12300",
    "end": "17970"
  },
  {
    "text": "that's what it's called I was up until a couple months ago a manager of the engineering cloud tools team and Netflix",
    "start": "17970",
    "end": "24150"
  },
  {
    "text": "we did a number of projects and tools and things that I will talk about today I've since moved on to a company called",
    "start": "24150",
    "end": "31529"
  },
  {
    "text": "Riot Games we have a game called League of Legends which is one of the most",
    "start": "31529",
    "end": "37410"
  },
  {
    "text": "popular games in the world right now all over the world distributed online real-time multiplayer game and we're",
    "start": "37410",
    "end": "44219"
  },
  {
    "text": "kind of in you know our growth is so big and we're kind of going through the same growth pains that Netflix went through",
    "start": "44219",
    "end": "50460"
  },
  {
    "text": "you know two or three years ago so we're also looking at the cloud as a solution",
    "start": "50460",
    "end": "55500"
  },
  {
    "text": "for a lot of our back-end stuff which is written in Java so a lot of the same tooling in the same solutions that",
    "start": "55500",
    "end": "61260"
  },
  {
    "text": "Netflix came across are very exciting it's better one of the reasons that they pulled me over is like can you do what",
    "start": "61260",
    "end": "67049"
  },
  {
    "text": "you did at Netflix for us all right so I'm doing that and in a lot of ways this will help I think prove how reusable",
    "start": "67049",
    "end": "74610"
  },
  {
    "text": "this Netflix code is if another company can build on top of it so I've broken",
    "start": "74610",
    "end": "80549"
  },
  {
    "text": "this talk up into some sections where I'll first give you an overview of of the project's sort of in how you can",
    "start": "80549",
    "end": "85590"
  },
  {
    "text": "find them and how they're organized and then break down into talk about tools and infrastructure parts and then sort",
    "start": "85590",
    "end": "92909"
  },
  {
    "text": "of the platform and libraries and in connection Java kind of related stuff so",
    "start": "92909",
    "end": "97979"
  },
  {
    "text": "the first bit all of the projects of an applicant source are on github and",
    "start": "97979",
    "end": "103710"
  },
  {
    "text": "they're under so you can just go to URL up there Netflix dot github calm and there's a",
    "start": "103710",
    "end": "109170"
  },
  {
    "text": "whole big pretty page full of different project names and they're currently just a big pile of names and they're all",
    "start": "109170",
    "end": "116310"
  },
  {
    "text": "mixed up so you have to kind of sit and read about each one and figure out what they do but that's it's kind of fun to explore some of them are tools some of",
    "start": "116310",
    "end": "123869"
  },
  {
    "text": "them are library some of them are apps services that you run some of them are samples like hello world kind of samples",
    "start": "123869",
    "end": "130050"
  },
  {
    "text": "other ones are like the cloud price so that's exciting if you're interested in contributing",
    "start": "130050",
    "end": "136099"
  },
  {
    "text": "something back to the open source project and earning $10,000 prize money per category that's one of those things",
    "start": "136099",
    "end": "144019"
  },
  {
    "text": "there but today I'm going to focus on a couple of different areas and so a bunch of these that are related to some things",
    "start": "144019",
    "end": "150469"
  },
  {
    "text": "like Cassandra and zookeeper are very interesting but they really are kind of an entire talk on their own so the ones",
    "start": "150469",
    "end": "157909"
  },
  {
    "text": "that are lit are the ones I'll be talking about today as you can see yeah they're all kind of over the place all",
    "start": "157909",
    "end": "166310"
  },
  {
    "text": "of them that result in libraries end up on maven central so if you're a Java",
    "start": "166310",
    "end": "172310"
  },
  {
    "text": "developer or you're building with maven or Gradle you can reference them from maven central and they'll be up there",
    "start": "172310",
    "end": "179200"
  },
  {
    "text": "other ones that end up as worse projects I think what do you guys are putting",
    "start": "179200",
    "end": "184969"
  },
  {
    "text": "them up on blocks no or no Ben Tre okay yeah so everything that's a binary",
    "start": "184969",
    "end": "191359"
  },
  {
    "text": "that's not really a library that would be maven oriented will be on Ben Tre as well but each of the projects will tell",
    "start": "191359",
    "end": "196639"
  },
  {
    "text": "you about how to go find the bits that you might want to get and play with so",
    "start": "196639",
    "end": "202849"
  },
  {
    "start": "200000",
    "end": "335000"
  },
  {
    "text": "the master plan which I sort of have inside our knowledge about the Netflix",
    "start": "202849",
    "end": "208879"
  },
  {
    "text": "master plan for this whole thing is they really do want to create an entire cloud platform that any company can use and",
    "start": "208879",
    "end": "216229"
  },
  {
    "text": "pick up these parts and mix and match and build a cloud infrastructure a complete cloud application on top of",
    "start": "216229",
    "end": "222229"
  },
  {
    "text": "this and they're already some of the examples that they have are kind of mini apps that are intend you know front end",
    "start": "222229",
    "end": "229040"
  },
  {
    "text": "middle tier data storage Cassandra or dynamodb to build an entire app",
    "start": "229040",
    "end": "234639"
  },
  {
    "text": "service-oriented you know SOA type application on top of this stack and all",
    "start": "234639",
    "end": "240590"
  },
  {
    "text": "this code came from code that Netflix built to run their own infrastructure a lot of it was too you know it's all",
    "start": "240590",
    "end": "247340"
  },
  {
    "text": "taken from stuff that was in production good quality lots of tests but there's still a lot of challenges to taking",
    "start": "247340",
    "end": "252500"
  },
  {
    "text": "something that's working fine in your enterprise and turning into something that's open source I mean a lot of times",
    "start": "252500",
    "end": "258590"
  },
  {
    "text": "you end up with code that is tangled with other code that's very specific to your own",
    "start": "258590",
    "end": "264620"
  },
  {
    "text": "case so that has to be disentangle a lot of times dependencies have to be flipped around and code has to be refactored any",
    "start": "264620",
    "end": "271970"
  },
  {
    "text": "assumptions that you've hard-coded stuff because you know our URLs are like this or we've got these service names like",
    "start": "271970",
    "end": "277910"
  },
  {
    "text": "this okay you have to make that pluggable or you know configurable something so all that work have to have",
    "start": "277910",
    "end": "283130"
  },
  {
    "text": "been done and in some cases they just looked at the way they did something that said well we wrote this it evolved",
    "start": "283130",
    "end": "288710"
  },
  {
    "text": "so much now it's really ugly and I'm embarrassed I don't want anybody to see my open-source code so I am going to",
    "start": "288710",
    "end": "294290"
  },
  {
    "text": "just rewrite it and so a number of the projects we're really rewrites to perform the same function but with the",
    "start": "294290",
    "end": "299900"
  },
  {
    "text": "cleaner code or maybe built on top of newer dependency injection frameworks or something where they could make it",
    "start": "299900",
    "end": "305180"
  },
  {
    "text": "starts from a cleaner base and one saying that I don't know who came up with it maybe it was Russell and the",
    "start": "305180",
    "end": "312050"
  },
  {
    "text": "whole bit or maybe it was Adrian Cockroft it says the code is good enough for production but not yet good enough",
    "start": "312050",
    "end": "318410"
  },
  {
    "text": "for github and so that's kind of one of the things you want to make sure that it's this is a lot of people kind of",
    "start": "318410",
    "end": "324350"
  },
  {
    "text": "your resume lives on github if you're an open source contributor that's really your portfolio so you want to make sure",
    "start": "324350",
    "end": "329360"
  },
  {
    "text": "and the people that Netflix anybody else contribute needs projects want to make sure it's good quality that's going to",
    "start": "329360",
    "end": "335330"
  },
  {
    "start": "335000",
    "end": "527000"
  },
  {
    "text": "reflect on them okay so the next section I'll talk about a little bit about the projects that are",
    "start": "335330",
    "end": "341570"
  },
  {
    "text": "related to kind of the structure or infrastructure of the clouds as you build it so one of the things that",
    "start": "341570",
    "end": "348860"
  },
  {
    "text": "Netflix does on top of AWS that's kind of unique is that they build and define",
    "start": "348860",
    "end": "356660"
  },
  {
    "text": "kind of this platform structure on top of auto scaling group so if we if you're",
    "start": "356660",
    "end": "363440"
  },
  {
    "text": "familiar with Amazon AWS have the notion of an auto scaling group they don't always get as much attention as I think",
    "start": "363440",
    "end": "369800"
  },
  {
    "text": "they should every you know a lot of people look at them and say I'm not gonna auto scale my my applications I",
    "start": "369800",
    "end": "374990"
  },
  {
    "text": "only need five machines maybe six but they also provide something that's",
    "start": "374990",
    "end": "380419"
  },
  {
    "text": "that's useful even if you're not gonna hide a scale you could you can create an auto scaling group and just say I want six done and you never change it but",
    "start": "380419",
    "end": "387650"
  },
  {
    "text": "what you've done is you've created an organizational unit that says these machines are all doing the same thing",
    "start": "387650",
    "end": "393880"
  },
  {
    "text": "they have a well-defined launch configuration that says that they're launched from the",
    "start": "393880",
    "end": "399680"
  },
  {
    "text": "same ami and they have the same user data and so they kind of get associated together and so netflix builds on top of",
    "start": "399680",
    "end": "406550"
  },
  {
    "text": "that by using auto scaling groups and pairs or triples of auto scaling groups",
    "start": "406550",
    "end": "412460"
  },
  {
    "text": "together as a logical cluster and in order to do that they apply so they want",
    "start": "412460",
    "end": "418070"
  },
  {
    "text": "to really get in and modify anything with AWS and they wanted the source of truth to be inside of AWS itself so they",
    "start": "418070",
    "end": "424610"
  },
  {
    "text": "created a very simple store the table and simple DB I think but moving to",
    "start": "424610",
    "end": "429770"
  },
  {
    "text": "dynamo that uses a very small library and naming conventions so you define an",
    "start": "429770",
    "end": "436100"
  },
  {
    "text": "application let's say that it really represents a service in your service oriented tiers that say I've got a",
    "start": "436100",
    "end": "441710"
  },
  {
    "text": "middle tier that is the search engine write or query engine and that would be",
    "start": "441710",
    "end": "446870"
  },
  {
    "text": "the name of the application and when I deploy clusters of that application I",
    "start": "446870",
    "end": "452060"
  },
  {
    "text": "can deploy those into different stacks but I can tell what the cluster is about",
    "start": "452060",
    "end": "458210"
  },
  {
    "text": "because it is associate with that application there's a naming pattern that it uses to kind of parse apart the",
    "start": "458210",
    "end": "464300"
  },
  {
    "text": "auto scaling groups and so that way you",
    "start": "464300",
    "end": "470800"
  },
  {
    "text": "that way you can have some additional structure and traceability throughout your machines and groups and clusters",
    "start": "471430",
    "end": "479030"
  },
  {
    "text": "and applications because more metadata can be included at the application level",
    "start": "479030",
    "end": "485230"
  },
  {
    "text": "now one of the things that's that's also unique about how Netflix builds at the",
    "start": "485230",
    "end": "491660"
  },
  {
    "text": "cloud is a lot of the assembly of the machines almost all of the assembly of",
    "start": "491660",
    "end": "497810"
  },
  {
    "text": "the machines in fact getting the binary bits on to a machine just done at Build time so if you really think about things",
    "start": "497810",
    "end": "503570"
  },
  {
    "text": "you might do when you bring up a machine in a data center and you've got it up and you do that you know apt-get or the",
    "start": "503570",
    "end": "509570"
  },
  {
    "text": "the yum install and you're putting stuff in there and then you're adding packages and configuring things a lot of that is",
    "start": "509570",
    "end": "514909"
  },
  {
    "text": "like that sounds like a build process to me just like you're building your java code and you're building your wor file",
    "start": "514910",
    "end": "520520"
  },
  {
    "text": "don't you just keep going and keep going all the way to the point where you've built your machine right and then that's a deployable artifact so that's exactly",
    "start": "520520",
    "end": "527990"
  },
  {
    "start": "527000",
    "end": "667000"
  },
  {
    "text": "what Netflix does and they released a couple months ago the tool called a manator which is",
    "start": "527990",
    "end": "534020"
  },
  {
    "text": "really a very clever but not even a huge amount of code but nicely done Python",
    "start": "534020",
    "end": "539210"
  },
  {
    "text": "tool kit that allows you to create a Mis and also these work with eucalyptus so",
    "start": "539210",
    "end": "546620"
  },
  {
    "text": "the same things you can use to create EMIs in the eucalyptus world and so what a manator does the idea is you can treat",
    "start": "546620",
    "end": "553730"
  },
  {
    "text": "this like a part of your build system so M Nader will run on any machine that's an e on ec2 itself so it could be on a",
    "start": "553730",
    "end": "561110"
  },
  {
    "text": "Jenkins slave it's a command line tool you know I just call it from you know a Jenkins build job if you want or you can",
    "start": "561110",
    "end": "567560"
  },
  {
    "text": "just shell in and run it just a Python command line tool but it'll take you identify to it a base image to start",
    "start": "567560",
    "end": "574880"
  },
  {
    "text": "with which could be okay public Ubuntu or public Amazon you know Linux I want",
    "start": "574880",
    "end": "581720"
  },
  {
    "text": "to take that ami you know mount that as a volume as an EBS volume on the machine",
    "start": "581720",
    "end": "587630"
  },
  {
    "text": "and then then maybe run yum install or run chef solo or one of these tools",
    "start": "587630",
    "end": "593000"
  },
  {
    "text": "let's say take a bunch of packages and put them on to that image right we haven't even launched the machine it's just a disk image at that point then",
    "start": "593000",
    "end": "601420"
  },
  {
    "text": "snapshot it register it as an ami give it a description that you've given on",
    "start": "601420",
    "end": "607070"
  },
  {
    "text": "the command line and boom now you have a whole new machine defined that's based upon you know a well-defined starting",
    "start": "607070",
    "end": "614450"
  },
  {
    "text": "point plus a description of what you wanted to put on it maybe packages from your build repo or cookbooks from chef",
    "start": "614450",
    "end": "622760"
  },
  {
    "text": "from your chef's repository that you've put on there so you have traceability from both you know the Machine the basic",
    "start": "622760",
    "end": "629690"
  },
  {
    "text": "foundational image plus everything else you put on to it and now you have an image that's identified it's immutable",
    "start": "629690",
    "end": "635990"
  },
  {
    "text": "and it's just like another build artifact where you can then test it and be sure that that image is exactly what",
    "start": "635990",
    "end": "641870"
  },
  {
    "text": "you want and it's reproducible whenever you launch things from that image you will get the same bits right the same",
    "start": "641870",
    "end": "646910"
  },
  {
    "text": "version and the cool thing about as a lot of people say well that just takes so long we can't bake a new image every",
    "start": "646910",
    "end": "653630"
  },
  {
    "text": "time we want to change the version of a library we put on our on our server but what's the only thing only takes three",
    "start": "653630",
    "end": "659270"
  },
  {
    "text": "or four minutes to bake an image it's just part of your continuous integration process that you just",
    "start": "659270",
    "end": "664370"
  },
  {
    "text": "make that one more step in there so I think that's really powerful and in this",
    "start": "664370",
    "end": "669829"
  },
  {
    "start": "667000",
    "end": "720000"
  },
  {
    "text": "flow here you can see we've just made a new version of an ami and back when I",
    "start": "669829",
    "end": "674959"
  },
  {
    "text": "mentioned clusters earlier let's see we were running our application and we had version 1 running it was running in one",
    "start": "674959",
    "end": "680720"
  },
  {
    "text": "auto scaling group we've just baked a new version we push it out when we run some tests on it of course in our",
    "start": "680720",
    "end": "687259"
  },
  {
    "text": "continuous integration system and now we've pushed out a new auto scaling group for that application or that",
    "start": "687259",
    "end": "694189"
  },
  {
    "text": "service in the cluster and with Asgard we'll be able to switch around and move",
    "start": "694189",
    "end": "699860"
  },
  {
    "text": "traffic to the new one or move traffic back to the old one the two can live in parallel for a little while until you're",
    "start": "699860",
    "end": "705319"
  },
  {
    "text": "ready to completely switch traffic over you have a lot of control this way about how you want to scale up or warm up",
    "start": "705319",
    "end": "713149"
  },
  {
    "text": "machines or scale down or manage that or having the old ones around this case for",
    "start": "713149",
    "end": "718430"
  },
  {
    "text": "failover a lot of flexibility there and",
    "start": "718430",
    "end": "723620"
  },
  {
    "text": "I'll talk a little bit about Asgard so a scart is the tool it's written in Grails and it's also open source very easy to",
    "start": "723620",
    "end": "730519"
  },
  {
    "text": "set up and install and run and play around with this is probably that one of the first things if you want to play with stuff and actually run something",
    "start": "730519",
    "end": "736160"
  },
  {
    "text": "this is fun to bring up in your cloud account and just start poking around with it because they'll let you see",
    "start": "736160",
    "end": "741860"
  },
  {
    "text": "stuff organized in ways that you wouldn't be able to see easily from the Amazon console so here's a sample page",
    "start": "741860",
    "end": "748249"
  },
  {
    "text": "from its we're just looking at auto-scaling groups the screenshots probably from somewhere and Netflix's",
    "start": "748249",
    "end": "754040"
  },
  {
    "text": "test account but it will also show you the associations that I mentioned",
    "start": "754040",
    "end": "759259"
  },
  {
    "text": "earlier between applications and clusters instances you can drill around everything that's a kind of a a name or",
    "start": "759259",
    "end": "766850"
  },
  {
    "text": "an identity of another object that you see on any of these pages in asgard like on the list page or a details page they",
    "start": "766850",
    "end": "774139"
  },
  {
    "text": "are all links so that you can really easily traverse and click around and figure out how things go together really",
    "start": "774139",
    "end": "780499"
  },
  {
    "text": "helps I think learnability of what are all these things and how they relate to each other in AWS it's really quite",
    "start": "780499",
    "end": "786800"
  },
  {
    "text": "powerful even even if you're not going to use this model it's it's a nice tool to bring up and use just as some",
    "start": "786800",
    "end": "792949"
  },
  {
    "text": "visibility into your cloud and also so as guard against women I should mention",
    "start": "792949",
    "end": "798830"
  },
  {
    "text": "also these tools do sort of rely on Amazon AWS api's in this structure",
    "start": "798830",
    "end": "804830"
  },
  {
    "text": "section of my talk but they also work with eucalyptus and especially so",
    "start": "804830",
    "end": "810020"
  },
  {
    "text": "eucalyptus 3/3 it's coming out in this quarter it's in I know which milestone it is now so if in beta right now and",
    "start": "810020",
    "end": "816170"
  },
  {
    "text": "eucalyptus guys will be shipping a set of the tools that are already",
    "start": "816170",
    "end": "821450"
  },
  {
    "text": "prepackaged with plugins necessary to make them work a little better and eucalyptus environment so they're using",
    "start": "821450",
    "end": "827270"
  },
  {
    "text": "a lot of these tools to sort of test their compatibility with AWS so that I",
    "start": "827270",
    "end": "832280"
  },
  {
    "text": "think is pretty exciting if you want to build your own hybrid cloud eucalyptus as a nice solution there so edits",
    "start": "832280",
    "end": "843230"
  },
  {
    "start": "840000",
    "end": "947000"
  },
  {
    "text": "another tool which is the service that runs this purely restful has no GUI at all its job is to just scan and look at",
    "start": "843230",
    "end": "851270"
  },
  {
    "text": "the cloud in your particular account or multiple accounts and kind of keep track",
    "start": "851270",
    "end": "856820"
  },
  {
    "text": "of what's going on so you can either run it just as an in-memory only where it will just provide you a query service to",
    "start": "856820",
    "end": "863870"
  },
  {
    "text": "tell you who's out there right now what objects are there and allows you to sort of reference things indirectly like you",
    "start": "863870",
    "end": "870380"
  },
  {
    "text": "can ask it what machine is at this IP address you know sort of can do then a reverse lookup and tell you what went on",
    "start": "870380",
    "end": "876710"
  },
  {
    "text": "you can also attach storage to it and it's currently using for its",
    "start": "876710",
    "end": "882140"
  },
  {
    "text": "back-end and then it records the history of things which is where it becomes really interesting so for example you",
    "start": "882140",
    "end": "888650"
  },
  {
    "text": "might have some event that you're trying to track down some problem that happened on your machine yesterday at 4 o'clock",
    "start": "888650",
    "end": "894770"
  },
  {
    "text": "for 20 minutes I had a boss you know a storm of requests that was crazy and I",
    "start": "894770",
    "end": "901700"
  },
  {
    "text": "don't know where they came from and you can go through here and figure out ok these five IP addresses were hammering my machine what are they oh they were",
    "start": "901700",
    "end": "908720"
  },
  {
    "text": "somebody brought up and do some queries figure out well that wasn't in five instances of somebody's test cluster",
    "start": "908720",
    "end": "914720"
  },
  {
    "text": "that they brought up with a bunch of bugs in it and they hammered my machine so you can kind of reverse look at you",
    "start": "914720",
    "end": "920000"
  },
  {
    "text": "know history of things that happened or like there's a guy at that right on my team now it was building a front-end for",
    "start": "920000",
    "end": "926480"
  },
  {
    "text": "it so that he can do security audit reports he wants to know the history of everything and changed and who made the changes or how",
    "start": "926480",
    "end": "933110"
  },
  {
    "text": "they got changed at what time what they were done for and just so that nothing funny happens and people start tooling",
    "start": "933110",
    "end": "939920"
  },
  {
    "text": "with things that he doesn't know about so it's a great tool for that that the query language that it supports is",
    "start": "939920",
    "end": "945470"
  },
  {
    "text": "really powerful the bunkies are great so back up here so",
    "start": "945470",
    "end": "954019"
  },
  {
    "start": "947000",
    "end": "1055000"
  },
  {
    "text": "the monkeys the simian army there's a number of the monkeys like the chaos monkey which is one of the most famous",
    "start": "954019",
    "end": "960680"
  },
  {
    "text": "monkeys the janitor monkey I think is probably the most useful one for people that are just getting started in Amazon",
    "start": "960680",
    "end": "966470"
  },
  {
    "text": "it can go through and track down objects that you've created that you may not be",
    "start": "966470",
    "end": "972050"
  },
  {
    "text": "using anymore and give you reports and optionally clean stuff up automatically you can give it rules about retention",
    "start": "972050",
    "end": "978589"
  },
  {
    "text": "and things like that so you know creating lots and lots of EBS snapshots that you're not using or am eyes with",
    "start": "978589",
    "end": "984350"
  },
  {
    "text": "the bakery you're making a lot of a.m. eyes in your continuous builds process in half of them or more you're not even",
    "start": "984350",
    "end": "990230"
  },
  {
    "text": "going to use but that's fine the monkey can clean him up when the chaos monkey as you might already know creates chaos",
    "start": "990230",
    "end": "997660"
  },
  {
    "text": "but the hardest part and the most useful part of the monkey itself is that he can",
    "start": "997660",
    "end": "1002949"
  },
  {
    "text": "be told how much chaos to create and where to create it and where not to create it you know leave these apps alone or leave these clusters alone",
    "start": "1002949",
    "end": "1009220"
  },
  {
    "text": "because well we're not ready for chaos yet over here but once you sort of embrace the chaos of the cloud that will",
    "start": "1009220",
    "end": "1017050"
  },
  {
    "text": "help ensure that your applications are tolerant to failure sent to hardware level like an instance can go down and",
    "start": "1017050",
    "end": "1023589"
  },
  {
    "text": "every year cluster keeps going that's that's a good thing to know and the conformity monkey is the newest monkey",
    "start": "1023589",
    "end": "1029079"
  },
  {
    "text": "that just came out and he's really about checking to make sure you're following certain rules sort of guidelines best",
    "start": "1029079",
    "end": "1035890"
  },
  {
    "text": "practices about how to organize your systems and those rules are extensible",
    "start": "1035890",
    "end": "1041530"
  },
  {
    "text": "so you can plug those in and he'll at the end generate reports and send mail to the owners of the applications so you",
    "start": "1041530",
    "end": "1047678"
  },
  {
    "text": "can look you know look for any kind of anomalies that come up and maybe how you've deployed you've done something funny and and he'll give you a report on",
    "start": "1047679",
    "end": "1054070"
  },
  {
    "text": "that there is a dashboard that Netflix has and I'm not sure what are the plans",
    "start": "1054070",
    "end": "1061690"
  },
  {
    "start": "1055000",
    "end": "1110000"
  },
  {
    "text": "I think there's plans on open sourcing this part I don't know what their schedule is so i won't i won't to quiz the netflix guys",
    "start": "1061690",
    "end": "1068500"
  },
  {
    "text": "here but they have a dashboard that looks like this that they use to look at sort of the state of of the monkeys",
    "start": "1068500",
    "end": "1074580"
  },
  {
    "text": "what's the what's at current thinking about what's going to be deleted in this case this is the the janitor monkeys",
    "start": "1074580",
    "end": "1080410"
  },
  {
    "text": "page that's sort of his dashboard of what he's going to clean up so hopefully that will get open source maybe",
    "start": "1080410",
    "end": "1086290"
  },
  {
    "text": "integrated into a scart joe snogging found his backlog somewhere yeah that's",
    "start": "1086290",
    "end": "1094510"
  },
  {
    "text": "the current plan but if somebody else wanted to contribute to that right it's really just a you know section of pages",
    "start": "1094510",
    "end": "1101320"
  },
  {
    "text": "in asgard that are gonna be talking to the monkeys which are our service so it's probably a cloud prize-worthy",
    "start": "1101320",
    "end": "1108060"
  },
  {
    "text": "chunk of code if somebody wants to do that there's another tool which is a",
    "start": "1108060",
    "end": "1114820"
  },
  {
    "start": "1110000",
    "end": "1204000"
  },
  {
    "text": "command-line tool this is in my slides it's also not yet out it's on github there's a lot of netflix specific bits",
    "start": "1114820",
    "end": "1122110"
  },
  {
    "text": "in it but it is kind of a cool client and I worked on it so I'm kind of proud of it but it's a command-line tool that",
    "start": "1122110",
    "end": "1128080"
  },
  {
    "text": "is really just a rest client all groovy sort of a DSL mostly but it just allows",
    "start": "1128080",
    "end": "1134530"
  },
  {
    "text": "you to rest fully or control any kind of the rest services which almost all the infrastructure for the Netflix cloud and",
    "start": "1134530",
    "end": "1141640"
  },
  {
    "text": "a number of other tools like Jenkins and JIRA some something you might want to do as part of a continuous delivery",
    "start": "1141640",
    "end": "1148810"
  },
  {
    "text": "deployment system this kind of allows you to orchestrate it from you know",
    "start": "1148810",
    "end": "1154030"
  },
  {
    "text": "either a workstation or from a Jenkins job in this case we're showing you how you can create a client to talk to",
    "start": "1154030",
    "end": "1160930"
  },
  {
    "text": "asgard find a cluster object with a given naming pattern and do another push so",
    "start": "1160930",
    "end": "1167170"
  },
  {
    "text": "we're gonna push a new auto scaling group with the new AMI and wait for it to complete so all the",
    "start": "1167170",
    "end": "1174520"
  },
  {
    "text": "work is being done on a scart in this case we're just talking to it and telling to start something you would",
    "start": "1174520",
    "end": "1179980"
  },
  {
    "text": "just sort of replacing you from going and clicking on the web pages and doing all that by hand so this kind of came",
    "start": "1179980",
    "end": "1186220"
  },
  {
    "text": "from code that release engineers were using at Netflix and they were doing in Python or shell or different things and",
    "start": "1186220",
    "end": "1192130"
  },
  {
    "text": "so we took all of their knowledge and put it into this so hopefully we'll be able to produce a version of this that's useful",
    "start": "1192130",
    "end": "1199860"
  },
  {
    "text": "to people outside of Netflix so should be coming in a while okay so back here",
    "start": "1199860",
    "end": "1208650"
  },
  {
    "start": "1204000",
    "end": "1336000"
  },
  {
    "text": "so now we'll move on over to the connection side of things so in this section I'll talk a bit about how you",
    "start": "1208650",
    "end": "1215310"
  },
  {
    "text": "would actually write your Java apps so that they work in this sort of cloud environment really a lot of it is about",
    "start": "1215310",
    "end": "1221810"
  },
  {
    "text": "breaking your application down into small sort of mini services micro services sometimes people call them but",
    "start": "1221810",
    "end": "1228180"
  },
  {
    "text": "really embracing the service-oriented architecture model and one of the first",
    "start": "1228180",
    "end": "1234150"
  },
  {
    "text": "things that is different in this model is that so amazon has load balancers so at the top",
    "start": "1234150",
    "end": "1241740"
  },
  {
    "text": "you see those little guys coming in from the edge that's an those arielle bees traffic comes in there so if you're on the if you have part of your services",
    "start": "1241740",
    "end": "1248220"
  },
  {
    "text": "just on the edge you're gonna get you can better leverage Amazon's load balancers for getting traffic from the",
    "start": "1248220",
    "end": "1253680"
  },
  {
    "text": "outside world but once you're inside you're you know service architecture and",
    "start": "1253680",
    "end": "1258750"
  },
  {
    "text": "you've got all these different pieces there really isn't a good solution from Amazon directly that's like a middle",
    "start": "1258750",
    "end": "1265140"
  },
  {
    "text": "tier load balancer they have a few now you can have private load balancers but",
    "start": "1265140",
    "end": "1270350"
  },
  {
    "text": "they weren't there initially when Netflix built discovery or Eureka and now that they have it and it's really",
    "start": "1270350",
    "end": "1277320"
  },
  {
    "text": "solid you kind of look at some of the other approaches and say well this is actually really very nice and so I don't",
    "start": "1277320",
    "end": "1283620"
  },
  {
    "text": "think there's any plans that I'm banning this this is a really nice way of doing things and so well you have is Eureka is",
    "start": "1283620",
    "end": "1288810"
  },
  {
    "text": "a service that is just in memory storage of other services that are registering",
    "start": "1288810",
    "end": "1296040"
  },
  {
    "text": "and saying I am here so it's it's it's a way to discover what other machines are there service providers register their",
    "start": "1296040",
    "end": "1302970"
  },
  {
    "text": "logical name where they live what another health check URLs and they heartbeat into this server and it's",
    "start": "1302970",
    "end": "1308670"
  },
  {
    "text": "storing all of its state in memory now then there's failover that could be a cross zone failover Zoar just backup",
    "start": "1308670",
    "end": "1315840"
  },
  {
    "text": "standby backups that are in memory sync synchronizing to each other so it is very stable and reliable but it's also",
    "start": "1315840",
    "end": "1322680"
  },
  {
    "text": "very fast and very simple if a node goes down that has track of everything it just we can auto scale and bring up a",
    "start": "1322680",
    "end": "1329100"
  },
  {
    "text": "new to replace it and it will sync itself up to the other note and be up and running",
    "start": "1329100",
    "end": "1334280"
  },
  {
    "text": "again in a couple minutes but coming",
    "start": "1334280",
    "end": "1339530"
  },
  {
    "start": "1336000",
    "end": "1497000"
  },
  {
    "text": "back first when you bring up your application so in the world where you baked an ami let's say and we've gotten",
    "start": "1339530",
    "end": "1346820"
  },
  {
    "text": "this application so I baked my ami application foo version X this is really",
    "start": "1346820",
    "end": "1354169"
  },
  {
    "text": "designed to be or intended to be launched in different places I can launch it in a stack over here I can",
    "start": "1354169",
    "end": "1360440"
  },
  {
    "text": "launch it in prod I can launch in a test I can launch it in a debug development cluster so when my mission when that",
    "start": "1360440",
    "end": "1367340"
  },
  {
    "text": "application comes up it kind of needs to know what it's intended for at this point in time you know what's my",
    "start": "1367340",
    "end": "1372830"
  },
  {
    "text": "environment what are my settings and maybe you do want to tweak things at runtime maybe I want to be able to turn",
    "start": "1372830",
    "end": "1378470"
  },
  {
    "text": "on experimental feature at runtime have live traffic go to it turn it off again",
    "start": "1378470",
    "end": "1383929"
  },
  {
    "text": "later on so what Netflix did instead of trying to do that sort of dynamically with a service like chef where you're",
    "start": "1383929",
    "end": "1389780"
  },
  {
    "text": "integrating that with building the machine configuring the applications",
    "start": "1389780",
    "end": "1395720"
  },
  {
    "text": "doing the discovery they say well let's build another service right so we're we're good at building services we've",
    "start": "1395720",
    "end": "1401450"
  },
  {
    "text": "built this whole service-oriented architecture we know how to do rest let's just do another one for this so our Caius is a project which provides",
    "start": "1401450",
    "end": "1409270"
  },
  {
    "text": "zombicide client library for dynamic properties so",
    "start": "1409270",
    "end": "1414740"
  },
  {
    "text": "it leverages annotations in Java which are really nice to use you can have property files which sit as part of your",
    "start": "1414740",
    "end": "1422390"
  },
  {
    "text": "build artifacts so they're in your ware' property files plus then it can layer in",
    "start": "1422390",
    "end": "1427820"
  },
  {
    "text": "dynamic settings changes overrides that come in from some kind of storage so the",
    "start": "1427820",
    "end": "1433340"
  },
  {
    "text": "version that of our caius that's on github right now the client talks directly to dynamo and does database",
    "start": "1433340",
    "end": "1440929"
  },
  {
    "text": "queries which is totally great for doing stuff and getting out of the box and running a small cluster but when you",
    "start": "1440929",
    "end": "1447500"
  },
  {
    "text": "start to scale up the traffic to dynamo is going to be really big and so what so",
    "start": "1447500",
    "end": "1452750"
  },
  {
    "text": "netflix internally has a service that sits in front of the database and serves the queries back to all the clients and",
    "start": "1452750",
    "end": "1460220"
  },
  {
    "text": "also we've done one at so we have that and I think so jerome at",
    "start": "1460220",
    "end": "1465480"
  },
  {
    "text": "riot who used to be at netflix wrote it and he's working with the netflix guys and they're gonna kind of converge those",
    "start": "1465480",
    "end": "1471270"
  },
  {
    "text": "and put that together so one way or the other there will be available this archive server that's there it access to",
    "start": "1471270",
    "end": "1478710"
  },
  {
    "text": "the front end so it only reads and writes to dynamo with the rest api and then all of the all of the dozens or",
    "start": "1478710",
    "end": "1485730"
  },
  {
    "text": "hundreds or thousands of machines that need to query about their dynamic properties will hit the service directly",
    "start": "1485730",
    "end": "1492450"
  },
  {
    "text": "instead of going to the to the database quite a bit more efficient and then i",
    "start": "1492450",
    "end": "1500419"
  },
  {
    "text": "mean double check my slide no okay wait that's it okay so back to eureka again",
    "start": "1500419",
    "end": "1505970"
  },
  {
    "text": "so now i mentioned that all the services have registered with eureka so we know",
    "start": "1505970",
    "end": "1512970"
  },
  {
    "text": "where they all are we know what their IP addresses are we know how healthy they are or if any of them have been taken",
    "start": "1512970",
    "end": "1518070"
  },
  {
    "text": "out of service if you have a client that needs to talk to a service there's a",
    "start": "1518070",
    "end": "1523890"
  },
  {
    "text": "eureka client library that you can integrate into your application and on",
    "start": "1523890",
    "end": "1528929"
  },
  {
    "text": "top of that there's another library called ribbon which can actually do the RPC for you and what eureka client does",
    "start": "1528929",
    "end": "1534539"
  },
  {
    "text": "is it will talk to eureka pull down the whole chunk of a basically table of all",
    "start": "1534539",
    "end": "1541409"
  },
  {
    "text": "the other guys that are out there and then serve that as a library internally for any are pcs that you want to do like",
    "start": "1541409",
    "end": "1547649"
  },
  {
    "text": "if i need to talk to you know application x that's down below me down stream below me i so i can even talk to",
    "start": "1547649",
    "end": "1553590"
  },
  {
    "text": "x in stack a and you'll get back out of",
    "start": "1553590",
    "end": "1558929"
  },
  {
    "text": "that query in a list of maybe okay there's 40 machines there how do we want to talk to them how do we want to load",
    "start": "1558929",
    "end": "1564480"
  },
  {
    "text": "balance through them do we want to round-robin through those or do we want it sticky or do we want some kind of weighted so ribbon and here we could",
    "start": "1564480",
    "end": "1571409"
  },
  {
    "text": "client together will provide you with that kind of service so you really can just use it right out of the box and",
    "start": "1571409",
    "end": "1577230"
  },
  {
    "text": "start talking to the downstream guys and you'll automatically connect to the correct set of them",
    "start": "1577230",
    "end": "1585080"
  },
  {
    "text": "a little bit hard to read we got there yeah okay there's a lot of different",
    "start": "1586370",
    "end": "1594140"
  },
  {
    "text": "libraries here on top of that as a client you might also have to deal with",
    "start": "1594140",
    "end": "1601820"
  },
  {
    "text": "issues of downstream services being not always reliable so if you're building",
    "start": "1601820",
    "end": "1607309"
  },
  {
    "text": "something that's close to the edge of your application in your architecture you may end up with a lot of downstream",
    "start": "1607309",
    "end": "1613280"
  },
  {
    "text": "dependencies some of those may be unstable or necessarily unstable but may",
    "start": "1613280",
    "end": "1620570"
  },
  {
    "text": "have may not be to always meet their SLA so things may get a little overloaded you need to be very dynamic and you want",
    "start": "1620570",
    "end": "1627380"
  },
  {
    "text": "your service to be very defensive about how it replies in response to its SLA s",
    "start": "1627380",
    "end": "1632540"
  },
  {
    "text": "right so if you need to be up 99.9 percent of the time and you rely on a",
    "start": "1632540",
    "end": "1637550"
  },
  {
    "text": "hundred services behind you that are also only up 99.9 percent of the time it's all going to add up and the",
    "start": "1637550",
    "end": "1644270"
  },
  {
    "text": "failures are going to accumulate right so you'll never be able to meet your SLA if you're always relying on those other",
    "start": "1644270",
    "end": "1649940"
  },
  {
    "text": "guys directly so what History X does is it allows you to have effectively a circuit breaker",
    "start": "1649940",
    "end": "1656510"
  },
  {
    "text": "type set up so that each point where you're talking to somebody downstream",
    "start": "1656510",
    "end": "1661580"
  },
  {
    "text": "you can say well if this guy doesn't meet the SLA that we've set and we've all agreed upon he's starting to",
    "start": "1661580",
    "end": "1667550"
  },
  {
    "text": "overload it will switch off for a brief period of time and go to a fallback so",
    "start": "1667550",
    "end": "1673220"
  },
  {
    "text": "if I need to find out personalized recommendations or personalized ratings for my movie page that's going to show",
    "start": "1673220",
    "end": "1680630"
  },
  {
    "text": "all the movies for this customer for this member and that service is hammered",
    "start": "1680630",
    "end": "1687110"
  },
  {
    "text": "and is not getting back to me then instead of me sitting there waiting for it I'm going to this circuit break over",
    "start": "1687110",
    "end": "1692750"
  },
  {
    "text": "and just start giving the user generic ratings that are global ratings from another much less loaded service or I'll",
    "start": "1692750",
    "end": "1700280"
  },
  {
    "text": "have some pre cached values which are reasonable for now so you get sort of",
    "start": "1700280",
    "end": "1706160"
  },
  {
    "text": "this degraded service that fallback and that's got handled by hystrix",
    "start": "1706160",
    "end": "1713440"
  },
  {
    "start": "1713000",
    "end": "1824000"
  },
  {
    "text": "but no a number of other libraries which are really handy blitz for Jay is a lock",
    "start": "1715450",
    "end": "1720919"
  },
  {
    "text": "free logging library which allows you to do standard it's a lock for Jay logging",
    "start": "1720919",
    "end": "1726230"
  },
  {
    "text": "that is really fast and doesn't have any lock-in in it so you can have that integrated into code that is doing high",
    "start": "1726230",
    "end": "1732559"
  },
  {
    "text": "performance stuff and the logging won't be creating heisenbugs for you and walking and slowing down things right",
    "start": "1732559",
    "end": "1738919"
  },
  {
    "text": "you're just pushing stuff out very efficiently very fast so that's handy to have if you're logging lots of things",
    "start": "1738919",
    "end": "1744259"
  },
  {
    "text": "and like Netflix does logging and log rotating out to s3 lots of data that you",
    "start": "1744259",
    "end": "1749389"
  },
  {
    "text": "can then look over later on and crunch over later on cerebro is a very useful",
    "start": "1749389",
    "end": "1755710"
  },
  {
    "text": "library which sort of works with Java annotations again lets you annotate",
    "start": "1755710",
    "end": "1761239"
  },
  {
    "text": "things that you want to be monitored so they're metrics and behavior of things that are going on in your application",
    "start": "1761239",
    "end": "1767830"
  },
  {
    "text": "you can annotate with servo it exposes all those values those metrics through",
    "start": "1767830",
    "end": "1772940"
  },
  {
    "text": "JMX and then they could be pushed out to other services so the version that's in",
    "start": "1772940",
    "end": "1778639"
  },
  {
    "text": "the open source a project can push all the metrics to cloud watch internally Netflix has a monitoring system called",
    "start": "1778639",
    "end": "1785570"
  },
  {
    "text": "Atlas which they probably open source at some point hopefully it it's a it's a",
    "start": "1785570",
    "end": "1790940"
  },
  {
    "text": "big project and I'm not sure that will come out right away but there's other it's pretty easy to take that and maybe",
    "start": "1790940",
    "end": "1797450"
  },
  {
    "text": "you want to write kind of an accumulator and a pusher that will push to nog Nagios or any of the other kind of",
    "start": "1797450",
    "end": "1803899"
  },
  {
    "text": "popular monitoring systems or alerting system so that's a nice way to get that",
    "start": "1803899",
    "end": "1810350"
  },
  {
    "text": "data out of your java application and then SD annex here I popped in here for an example that's that's the Cassandra",
    "start": "1810350",
    "end": "1817220"
  },
  {
    "text": "client library for Java very nice to use if you're writing talking to Cassandra",
    "start": "1817220",
    "end": "1825128"
  },
  {
    "start": "1824000",
    "end": "1860000"
  },
  {
    "text": "oh and that's the end of my talk this used to say Netflix jobs but now it says",
    "start": "1826530",
    "end": "1832020"
  },
  {
    "text": "Riot Games career so we are hiring too and I'm doing a bunch of cloud stuff a",
    "start": "1832020",
    "end": "1837330"
  },
  {
    "text": "number of teams that ride are doing cloud things so if you're interested moving to LA or telecommuting like me",
    "start": "1837330",
    "end": "1845630"
  },
  {
    "text": "give us a call well thank you",
    "start": "1845630",
    "end": "1850220"
  },
  {
    "text": "you",
    "start": "1859210",
    "end": "1861270"
  }
]