[
  {
    "text": "hello and welcome everyone it's a pleasure to be here with my first qcon eva so i'm very excited just moderately stressed",
    "start": "4560",
    "end": "12000"
  },
  {
    "text": "which you can read between the lines very very stressed but it's a pleasure to see you uh my name is andrei jasik but it's very hard to spell",
    "start": "12000",
    "end": "18560"
  },
  {
    "text": "it's very hard to say if you don't know how to say it so i go by axe so feel free to call me axe i'm an engineer at revolut which means i",
    "start": "18560",
    "end": "25119"
  },
  {
    "text": "write code on a daily basis and i get frustrated when things don't work but usually they work or that's what i'm trying to make",
    "start": "25119",
    "end": "31199"
  },
  {
    "text": "it do a few facts about me i'm very proud to be a java champion uh very very proud to be old enough to",
    "start": "31199",
    "end": "38079"
  },
  {
    "text": "have gone to java one in time to become a gentleman rockstar i also happen to run polish java user",
    "start": "38079",
    "end": "43120"
  },
  {
    "text": "group a conference called geekon to meetups geographically i'm from poland",
    "start": "43120",
    "end": "48559"
  },
  {
    "text": "we're in london but you know that's all my opinions are my own which means any",
    "start": "48559",
    "end": "54719"
  },
  {
    "text": "mistakes that i make are mine and my mind alone and all the good things are well i'm very happy if you benefit",
    "start": "54719",
    "end": "61120"
  },
  {
    "text": "from them if you have questions about the talk raise your hands uh there is a microphone that can probably float",
    "start": "61120",
    "end": "66479"
  },
  {
    "text": "towards you uh if you have them in the middle of the talk just",
    "start": "66479",
    "end": "71520"
  },
  {
    "text": "just wave because the question might escape you or take a note i know that we have an ama with uh me",
    "start": "71520",
    "end": "77840"
  },
  {
    "text": "ben and emily towards the end of the day in the schedule at 4 10 i think so if any questions come to",
    "start": "77840",
    "end": "85040"
  },
  {
    "text": "you later in the day there will be still time to talk to me if you would like to talk about revolut",
    "start": "85040",
    "end": "91200"
  },
  {
    "text": "and working there uh definitely not during the talk let's focus on java 11 and how that works in",
    "start": "91200",
    "end": "96960"
  },
  {
    "text": "production all the all the other things in the breaks over lunch later in the day so i like to",
    "start": "96960",
    "end": "104720"
  },
  {
    "text": "use pictures that make me laugh because it's a reminder that i should be drinking more water",
    "start": "104720",
    "end": "112159"
  },
  {
    "text": "of course uh and yes uh ben kind of beat me to it",
    "start": "112159",
    "end": "119759"
  },
  {
    "text": "already by asking which version of java are people on and i was going to ask you which versions of java you're on but",
    "start": "119759",
    "end": "125600"
  },
  {
    "text": "since this question already has been asked most of you are on the ltss editions",
    "start": "125600",
    "end": "130879"
  },
  {
    "text": "congrats to the brave people who are on the more modern versions but we are looking",
    "start": "130879",
    "end": "137200"
  },
  {
    "text": "at doing something similar later which version of java are you i think we don't have to repeat the exercise",
    "start": "137200",
    "end": "144080"
  },
  {
    "text": "that's obvious what we are going to talk about is how we went from java upgrade in the context of a",
    "start": "144080",
    "end": "151120"
  },
  {
    "text": "particular company because the context is always very important",
    "start": "151120",
    "end": "156160"
  },
  {
    "text": "uh what you probably know about revolut is that a financial company we have a product that's a credit card or",
    "start": "156160",
    "end": "162560"
  },
  {
    "text": "or a card and an accompanying mobile application but the important facts from a software",
    "start": "162560",
    "end": "168400"
  },
  {
    "text": "engineer's point of view is that the company is uh four years and a bit",
    "start": "168400",
    "end": "174400"
  },
  {
    "text": "old it has over 10 million users which means we are this is it's growing like crazy and the",
    "start": "174400",
    "end": "180640"
  },
  {
    "text": "usage on the systems is growing like crazy the number of developers is keeps on increasing so all the problems that",
    "start": "180640",
    "end": "185760"
  },
  {
    "text": "we can avoid having if there is anything that gives us that we're very happy because this allows",
    "start": "185760",
    "end": "191519"
  },
  {
    "text": "people to focus not on production issues but instead of building and improving the code base and building out new",
    "start": "191519",
    "end": "197200"
  },
  {
    "text": "features and scaling globally and expanding the the reach that's that's for us very important uh we obviously in",
    "start": "197200",
    "end": "204400"
  },
  {
    "text": "the code base the codebase is very opinionated and the code base is opinionated in a way in which for",
    "start": "204400",
    "end": "210480"
  },
  {
    "text": "example we don't use spring some people might have heard about it why because debugging annotation driven",
    "start": "210480",
    "end": "215920"
  },
  {
    "text": "problems is not fun ben already mentioned that as people spend more and more time with",
    "start": "215920",
    "end": "222480"
  },
  {
    "text": "computers they prefer less creative solutions to some problems i even describe my job that i keep doing",
    "start": "222480",
    "end": "228640"
  },
  {
    "text": "the same year and year ago year again year in year out and i put boredom in places i",
    "start": "228640",
    "end": "233840"
  },
  {
    "text": "don't want certain things to be exciting uh it might become intuitive but there",
    "start": "233840",
    "end": "239280"
  },
  {
    "text": "is a lot of fun to in building stuff in general but i don't want surprises and especially if i've had an amazing",
    "start": "239280",
    "end": "245360"
  },
  {
    "text": "evening somewhere i don't want to receive a phone call and then i have to look at squiggly lines",
    "start": "245360",
    "end": "250480"
  },
  {
    "text": "and i have no idea what happens if you've read some very esoteric looking languages or if you've seen",
    "start": "250480",
    "end": "256239"
  },
  {
    "text": "somebody who was trying to do a very smart version of scar our haskell code i find java much more readable in places",
    "start": "256239",
    "end": "263280"
  },
  {
    "text": "and this is the this is the the attitude that we have in revolution base everywhere so we prefer to use",
    "start": "263280",
    "end": "268880"
  },
  {
    "text": "code code driven everything not annotation driven we prefer to have compile time checks rather than",
    "start": "268880",
    "end": "275040"
  },
  {
    "text": "runtime explosions yeah also uh we don't",
    "start": "275040",
    "end": "283040"
  },
  {
    "text": "sadly or not sadly have 1500 microservices we have what i would call services much less of them it's more controlled",
    "start": "283040",
    "end": "290479"
  },
  {
    "text": "in terms of deployment what does deployment for a typical application look like we have core os which is coming to an",
    "start": "290479",
    "end": "297280"
  },
  {
    "text": "end of life so that will be a fun bit uh we run applications in docker there is uh one application in a container which",
    "start": "297280",
    "end": "304479"
  },
  {
    "text": "means uh that we don't share the instances between things there is fluency which represents also",
    "start": "304479",
    "end": "310320"
  },
  {
    "text": "all the other daemons that would sit on any of the instances we use a framework called java spark why because it's extremely simple and",
    "start": "310320",
    "end": "317919"
  },
  {
    "text": "very easy to debug very easy to reason about and if something goes wrong that means you don't have to worry too much",
    "start": "317919",
    "end": "324080"
  },
  {
    "text": "because it's all in there we also use juke i think that's how you how you say",
    "start": "324080",
    "end": "329199"
  },
  {
    "text": "it which is a database interaction layer we don't use hibernate because that gives us more control and",
    "start": "329199",
    "end": "336000"
  },
  {
    "text": "people that i work with like to have this explicit control of course that means that sometimes you have to write a bit",
    "start": "336000",
    "end": "341199"
  },
  {
    "text": "more but if you want to write well build distributed systems at least from my",
    "start": "341199",
    "end": "346400"
  },
  {
    "text": "experience being afraid of sql or whatever the actual language of the platform that you're running",
    "start": "346400",
    "end": "351680"
  },
  {
    "text": "with is well you'll have to get over your view and the question is then why should we",
    "start": "351680",
    "end": "357759"
  },
  {
    "text": "upgrade uh if we're moving fast if we stay to java 8 we're probably uh probably well it's it might be a",
    "start": "357759",
    "end": "364880"
  },
  {
    "text": "nuisance it might be useless while some corporate entities choose not to upgrade some corporate entities as has been already demonstrated are",
    "start": "364880",
    "end": "371280"
  },
  {
    "text": "still before uh java 8 that's of course their choice but then comes the aspect of culture the",
    "start": "371280",
    "end": "377840"
  },
  {
    "text": "aspect of culture that is visible by those letters that are shining",
    "start": "377840",
    "end": "383520"
  },
  {
    "text": "people in a startup have a mentality of building things so that they can get shipped which means",
    "start": "383520",
    "end": "390080"
  },
  {
    "text": "if there is something that can allow you to go faster you probably want to do it",
    "start": "390080",
    "end": "395199"
  },
  {
    "text": "we want to we are trying to move because we have to move fast otherwise well the product will not happen uh we",
    "start": "395199",
    "end": "401600"
  },
  {
    "text": "cannot obviously break any things uh because it's a financial company and we have we are put in there under a lot of",
    "start": "401600",
    "end": "408160"
  },
  {
    "text": "scrutiny because if you're dealing with people's money it would be very bad if we lost any of that so there is a lot of auditing and there is a lot of",
    "start": "408160",
    "end": "414720"
  },
  {
    "text": "processes that we have to follow because we're dealing with money that's obvious if something needs to be updated if it's",
    "start": "414720",
    "end": "422400"
  },
  {
    "text": "on the core path because people see it people are eager to make those changes because they",
    "start": "422400",
    "end": "428000"
  },
  {
    "text": "remove friction so why upgrade well to because to get it done also to so that we can move fast",
    "start": "428000",
    "end": "436319"
  },
  {
    "text": "because as i already mentioned java 11 is uh or hinted java 11 allows us to move faster",
    "start": "436319",
    "end": "441599"
  },
  {
    "text": "without worrying or with worrying less we also would have to upgrade anyway",
    "start": "441599",
    "end": "446800"
  },
  {
    "text": "uh it's a fact of life that software gets well towards the end of the life cycle new exciting features like",
    "start": "446800",
    "end": "453280"
  },
  {
    "text": "everything that ben described hopefully is coming in in newer java versions this is something that",
    "start": "453280",
    "end": "458720"
  },
  {
    "text": "everybody would like to benefit from there are changes in jdk 11 that we have benefited from and so i'll talk about them later but if",
    "start": "458720",
    "end": "466400"
  },
  {
    "text": "those features are out there and you're on the previous jdks it's a bit hard to use them so well we want to we want to upgrade",
    "start": "466400",
    "end": "474000"
  },
  {
    "text": "and there is this guy this guy represents uh the almighty json if",
    "start": "474000",
    "end": "479759"
  },
  {
    "text": "you're dealing with applications that talk json to themselves which most of us uh do probably",
    "start": "479759",
    "end": "487039"
  },
  {
    "text": "there is one feature that happened between java 8 and java 9 that we also really wanted to benefit",
    "start": "487039",
    "end": "492160"
  },
  {
    "text": "from which is java length string does not have a car array internally but they have a byte array which means",
    "start": "492160",
    "end": "498479"
  },
  {
    "text": "yes you do get half the size of the maximum length of a string that you can store",
    "start": "498479",
    "end": "503520"
  },
  {
    "text": "but the more important part is you are storing bytes which means it's half the size which means you",
    "start": "503520",
    "end": "510080"
  },
  {
    "text": "are if you're just if your strings are ascii basically uh you will use half the",
    "start": "510080",
    "end": "516159"
  },
  {
    "text": "memory which is an extremely important feature it's a very nice feature and if you're doing json manipulation",
    "start": "516159",
    "end": "523039"
  },
  {
    "text": "which many of us are because well this is how the web communicates because the internet still runs mostly in debug",
    "start": "523039",
    "end": "529040"
  },
  {
    "text": "modes plain text and so on we benefited from this uh",
    "start": "529040",
    "end": "536800"
  },
  {
    "text": "if you need to do something more uh with strings you can well string the duplication with g1 even",
    "start": "536800",
    "end": "542080"
  },
  {
    "text": "in jdk 8 might save you but string the duplication at some there is",
    "start": "542080",
    "end": "547279"
  },
  {
    "text": "a price to pay and this change you get for free just by switching from 8 to",
    "start": "547279",
    "end": "552480"
  },
  {
    "text": "a newer jdk so uh well you can admire my mad photoshop skills",
    "start": "552480",
    "end": "557760"
  },
  {
    "text": "here json is now happy because obviously it takes less time",
    "start": "557760",
    "end": "563120"
  },
  {
    "text": "endless memory and now the follow-up question is we're a financial company so how could",
    "start": "563120",
    "end": "568959"
  },
  {
    "text": "we do it what groups did we have to reach out to how did it actually happen well we do a lot of",
    "start": "568959",
    "end": "575920"
  },
  {
    "text": "automation a lot of automation and our context means a lot of yaml files uh",
    "start": "575920",
    "end": "581440"
  },
  {
    "text": "yes i know there are very strong fans of yaml files everywhere here inclusive",
    "start": "581440",
    "end": "587120"
  },
  {
    "text": "but we automate a lot so we have the infrastructure the the images how applications get built that is",
    "start": "587120",
    "end": "593360"
  },
  {
    "text": "expressed in code which means anybody who is capable in using a text editor can change that and can influence the process also",
    "start": "593360",
    "end": "600560"
  },
  {
    "text": "we are trying to well keep this startup mentality in which we want to push and build things",
    "start": "600560",
    "end": "606079"
  },
  {
    "text": "as quickly and as well with as little friction as possible which means developers take care of many",
    "start": "606079",
    "end": "613120"
  },
  {
    "text": "infrastructure tasks which also means if if you build a piece of software well you get to maintain it but if you get to",
    "start": "613120",
    "end": "618480"
  },
  {
    "text": "maintain it you should probably have a say in what environment it's running on because if for example your software",
    "start": "618480",
    "end": "624000"
  },
  {
    "text": "the usage for your software has outgrown the resources that have been dedicated and you know that you need to upgrade why should you require a separate team",
    "start": "624000",
    "end": "630399"
  },
  {
    "text": "to do something about it if you can do it yourself if you have this self-service culture",
    "start": "630399",
    "end": "635760"
  },
  {
    "text": "built into how infrastructure and many of the places of course where it's applicable because",
    "start": "635760",
    "end": "640880"
  },
  {
    "text": "i mentioned fintech and there are some limitations which don't allow us to do absolutely everything that we wanted",
    "start": "640880",
    "end": "646000"
  },
  {
    "text": "but if it's possible we want to automate it and we want to empower people that are people closest to the problem",
    "start": "646000",
    "end": "653120"
  },
  {
    "text": "there is a pr that will get a code review uh team city will hopefully run this a build that will",
    "start": "653120",
    "end": "660399"
  },
  {
    "text": "update whatever needs to be updated and yeah that's that's how things end up in production that's",
    "start": "660399",
    "end": "665519"
  },
  {
    "text": "automated and that happens by almost by itself people don't need to do it all the way",
    "start": "665519",
    "end": "671360"
  },
  {
    "text": "manually which also would probably raise the question further what do we have any ops people of course we",
    "start": "671360",
    "end": "677519"
  },
  {
    "text": "do but they work on more specialized tasks tasks that developers",
    "start": "677519",
    "end": "683760"
  },
  {
    "text": "people who write java code on a daily basis would probably take a bit more time to to learn and",
    "start": "683760",
    "end": "688959"
  },
  {
    "text": "figure out how to do correctly that's that's all so what did we do we upgraded to java 11 from jdk8",
    "start": "688959",
    "end": "696959"
  },
  {
    "text": "update 212 in that particular build not super important and we did it to all the apps",
    "start": "696959",
    "end": "703360"
  },
  {
    "text": "so all applications within revolut doing doing java uh and back ends run",
    "start": "703360",
    "end": "709839"
  },
  {
    "text": "jdk 11 now of course the team that runs android i have no idea what they do because i",
    "start": "709839",
    "end": "715920"
  },
  {
    "text": "don't do deal with android there might be some limitations there and why 11 well because 9 and 10 were no",
    "start": "715920",
    "end": "722480"
  },
  {
    "text": "longer maintained i assume you know about the release cycle if not",
    "start": "722480",
    "end": "727839"
  },
  {
    "text": "we can talk about that after the talk i don't want to show the same graph that",
    "start": "727839",
    "end": "733120"
  },
  {
    "text": "everybody has seen already so many times and discussed more than a few seconds uh and twelve uh white one twelve well",
    "start": "733120",
    "end": "739040"
  },
  {
    "text": "twelve wasn't available when when we got to it uh and the subject of well the title of the talk is",
    "start": "739040",
    "end": "745360"
  },
  {
    "text": "a year in production with jdk 11. uh this in case of revolut means revolute has",
    "start": "745360",
    "end": "750639"
  },
  {
    "text": "been running jdk 11 in production for over a year now and we are quite happy with what we have",
    "start": "750639",
    "end": "756480"
  },
  {
    "text": "seen it wasn't a journey without some hurdles there were some thorns on the way as well and",
    "start": "756480",
    "end": "764160"
  },
  {
    "text": "some mandatory slides why not oracle jdk so we went away from oracle jdk",
    "start": "764160",
    "end": "769600"
  },
  {
    "text": "a we are using docker so we make images and with oracle jdk there is a there is a license that is very",
    "start": "769600",
    "end": "775440"
  },
  {
    "text": "complicated and lawyers like to read that language i find it uh tiresome english is not my first",
    "start": "775440",
    "end": "781200"
  },
  {
    "text": "language lawyer english is like a special version of english what i how i understand this license is",
    "start": "781200",
    "end": "788000"
  },
  {
    "text": "i cannot build my own images i cannot give people a copy of the oracle jdk people should download it",
    "start": "788000",
    "end": "793760"
  },
  {
    "text": "from oracle always because oracle should be the distributor i can't and it also requires a license to run in",
    "start": "793760",
    "end": "798880"
  },
  {
    "text": "production and getting the license from oracle uh i don't know what the process is for 11",
    "start": "798880",
    "end": "804000"
  },
  {
    "text": "but we decided if there is another alternative we can use an alternative we probably",
    "start": "804000",
    "end": "809519"
  },
  {
    "text": "will use an alternative and is there anybody who is unfamiliar with",
    "start": "809519",
    "end": "814800"
  },
  {
    "text": "jdk release cadence don't be shy we can talk about it after the talk uh",
    "start": "814800",
    "end": "820399"
  },
  {
    "text": "this is those are the slides that we will use when talking about it but after not now so",
    "start": "820399",
    "end": "827279"
  },
  {
    "text": "if you want to go java 11 you have two choices you have a choice of let's do everything 11 we can compile",
    "start": "827279",
    "end": "832639"
  },
  {
    "text": "11 we can run on 11. if you can it's awesome absolutely uh you can also choose to compile on h",
    "start": "832639",
    "end": "840079"
  },
  {
    "text": "and run on 11. this is what i used to do before i joined to revolut to some very good results because there",
    "start": "840079",
    "end": "846560"
  },
  {
    "text": "are new features there are new fixes to the to the runtime happening uh continuously",
    "start": "846560",
    "end": "853360"
  },
  {
    "text": "so we are using uh this version java 11 is everywhere it's what it gets",
    "start": "853360",
    "end": "859199"
  },
  {
    "text": "compiled with it this is what it runs on uh people don't use jdk8",
    "start": "859199",
    "end": "865600"
  },
  {
    "text": "i don't think anywhere or mostly anywhere but also if you are not in that",
    "start": "865600",
    "end": "872800"
  },
  {
    "text": "situation it might be that you will have to use java 11 without a full java 11 tool",
    "start": "872800",
    "end": "878720"
  },
  {
    "text": "chain when would that be well if you have dependencies and there are some dependencies which are very nice uh",
    "start": "878720",
    "end": "885040"
  },
  {
    "text": "very useful but you might not have upgraded the version numbers i'm using are from the project's uh respective website so i",
    "start": "885040",
    "end": "891920"
  },
  {
    "text": "didn't verify that whether the numbers are actually correct i used their information so all the all the mistakes this is probably my",
    "start": "891920",
    "end": "897839"
  },
  {
    "text": "copy pasting went wrong but if you are running for example older cassandra older grails older",
    "start": "897839",
    "end": "903360"
  },
  {
    "text": "especially older hadoop planning an upgrade to a version that actually supports 11",
    "start": "903360",
    "end": "910480"
  },
  {
    "text": "might take time and it might be that you will be forced for some time to",
    "start": "910480",
    "end": "918320"
  },
  {
    "text": "uh run well compile with eight especially if you have a dependency that",
    "start": "918320",
    "end": "923440"
  },
  {
    "text": "uses older version of drift somewhere it can be finicky it can be very particular about the jdk version that",
    "start": "923440",
    "end": "931040"
  },
  {
    "text": "you run it on and that's the fact of life then what you get to do is compile that piece of code with 11",
    "start": "931040",
    "end": "937360"
  },
  {
    "text": "sorry with eight and until you manage to upgrade whatever you whatever",
    "start": "937360",
    "end": "943040"
  },
  {
    "text": "your environment is on the version numbers then well you're kind of stuck",
    "start": "943040",
    "end": "948399"
  },
  {
    "text": "and this is this is also possible this just happened to me before uh we were having a lot of spark related",
    "start": "948399",
    "end": "954240"
  },
  {
    "text": "codes so we were we would compile on eight and then we would run only 11. a bit convoluted a bit funny",
    "start": "954240",
    "end": "959759"
  },
  {
    "text": "some unusual situations might happen just purely because you switch from eight to nine which starts to do modules",
    "start": "959759",
    "end": "964800"
  },
  {
    "text": "and then removes a bunch of things but it is also an option it's absolutely a viable option it's absolutely okay it's",
    "start": "964800",
    "end": "970000"
  },
  {
    "text": "socially and morally acceptable to compile on 8 and run out 11. build tools if you choose to do so uh",
    "start": "970000",
    "end": "978320"
  },
  {
    "text": "there are two tools called jdeps and jdepper's gun jdeps shows module dependencies",
    "start": "978320",
    "end": "985920"
  },
  {
    "text": "it has this amazing command line especially the minus minus class path",
    "start": "985920",
    "end": "991040"
  },
  {
    "text": "thing is great for any enterprise project if you can imagine typing all the jars that you would have",
    "start": "991040",
    "end": "996079"
  },
  {
    "text": "to to type in the well i couldn't and nobody else can so there is a gradle plugin there is a maven plugin",
    "start": "996079",
    "end": "1002720"
  },
  {
    "text": "you can put that as part of your build there is also jdapper scan probably that's how you say it it also",
    "start": "1002720",
    "end": "1008639"
  },
  {
    "text": "has a class path option and it also comes with a gradle and a maven plugin",
    "start": "1008639",
    "end": "1013680"
  },
  {
    "text": "and the hidden fact of life is you also get the features that these",
    "start": "1013680",
    "end": "1020160"
  },
  {
    "text": "two good people deliver by using java c so we didn't use those i mentioned them",
    "start": "1020160",
    "end": "1025360"
  },
  {
    "text": "for the sake of completeness if you need to go through that process the tools are under the bin",
    "start": "1025360",
    "end": "1030959"
  },
  {
    "text": "uh directory of your jdk but you don't have to if you're using maven what you will have to do for sure is",
    "start": "1030959",
    "end": "1036720"
  },
  {
    "text": "upgrade compiler plug-in to 3.8.0 which is kind of dated now i think it's you can",
    "start": "1036720",
    "end": "1043360"
  },
  {
    "text": "go up a few versions on top of that but this will allow you to run with more modern jdks but also since i",
    "start": "1043360",
    "end": "1051440"
  },
  {
    "text": "mentioned maven uh maven users in in the room probably might have seen uh maven versions plugin",
    "start": "1051440",
    "end": "1058240"
  },
  {
    "text": "maven versions plugin has this awesome feature which is called display plugin updates which can tell you which plugins that",
    "start": "1058240",
    "end": "1064000"
  },
  {
    "text": "you have within your maven my ivanized view of the world can be upgraded and what requirements do",
    "start": "1064000",
    "end": "1069840"
  },
  {
    "text": "they come with obviously the list that this plug-in produced has been much longer and we're on the fifth floor so i would",
    "start": "1069840",
    "end": "1076559"
  },
  {
    "text": "probably end up with somewhere underground because it was a really long list but if you require maven 202 you can upgrade",
    "start": "1076559",
    "end": "1082960"
  },
  {
    "text": "maven java.plugin from 210 to 2.2 does it really make sense discussable but it will tell you a lot",
    "start": "1082960",
    "end": "1089280"
  },
  {
    "text": "of things that you can actually upgrade it i think it has an option that in which it can actually upgrade to whatever it thinks is the",
    "start": "1089280",
    "end": "1095919"
  },
  {
    "text": "correct choice but i don't trust me even that much i",
    "start": "1095919",
    "end": "1101200"
  },
  {
    "text": "prefer to change versions manually and verify that things work but at least it can give you an automated report about what's",
    "start": "1101200",
    "end": "1106799"
  },
  {
    "text": "what's possible what can happen another awesome thing that may even can do and can help your pains when upgrading",
    "start": "1106799",
    "end": "1112799"
  },
  {
    "text": "software or following what software updates are out there already is versions display dependency updates so",
    "start": "1112799",
    "end": "1119840"
  },
  {
    "text": "as for plugins it can do the same for your dependencies which is very very useful",
    "start": "1119840",
    "end": "1126000"
  },
  {
    "text": "gradle if you're using gradle like for example we are if you want to run java 11 v5 is",
    "start": "1126000",
    "end": "1133200"
  },
  {
    "text": "good v6 is good if you're on v4 my recommendation is would my",
    "start": "1133200",
    "end": "1138480"
  },
  {
    "text": "recommendation would be go to v5 first go to v6 second because if you try to upgrade bravely from v4 to v6",
    "start": "1138480",
    "end": "1147520"
  },
  {
    "text": "i will probably wait for you to say that we actually decided to go with five in between because it's just easier",
    "start": "1147520",
    "end": "1154000"
  },
  {
    "text": "v4 to v6 is a bit of a rocky ride directly do it with the inter interim",
    "start": "1154000",
    "end": "1160160"
  },
  {
    "text": "step people have tried people have well i think it's a popular opinion that",
    "start": "1160160",
    "end": "1165919"
  },
  {
    "text": "putting a v5 in between is a good step but you can stay on v5 and you don't have to go v6 immediately",
    "start": "1165919",
    "end": "1172559"
  },
  {
    "text": "and now we'll go through some libraries just to show you what happens uh so for for example mojito",
    "start": "1172559",
    "end": "1180480"
  },
  {
    "text": "an amazing library uh originating uh well back to an office i i used to work with",
    "start": "1180480",
    "end": "1186320"
  },
  {
    "text": "so that's that's a very personal story because i we worked with the authors in the same company at the time but",
    "start": "1186320",
    "end": "1192480"
  },
  {
    "text": "formally it supports jdk 11 since 220.1 if you looked at release notes in the",
    "start": "1192480",
    "end": "1199120"
  },
  {
    "text": "doc directory of mokito you will see releases that tag some sort of jdk supports",
    "start": "1199120",
    "end": "1204320"
  },
  {
    "text": "backfixes or changes in with a few numbers if you look at jdk 9 you will see also",
    "start": "1204320",
    "end": "1210880"
  },
  {
    "text": "official support happens and then there is some some other bug fixes that happen what i'm trying to say between the lines",
    "start": "1210880",
    "end": "1217039"
  },
  {
    "text": "here is the official support does not sometimes sadly equal that everything",
    "start": "1217039",
    "end": "1222799"
  },
  {
    "text": "will work as expected because those jdks change uh reflection they change",
    "start": "1222799",
    "end": "1228720"
  },
  {
    "text": "provide code generation quite significantly so if you have libraries that do that",
    "start": "1228720",
    "end": "1234559"
  },
  {
    "text": "within your environments you might get unexpected surprises sadly or it's it's it's a part of life",
    "start": "1234559",
    "end": "1241840"
  },
  {
    "text": "it happens it happens to mokito it happens to all the other libraries as well uh also it might be that",
    "start": "1241840",
    "end": "1248960"
  },
  {
    "text": "because we've done it a year ago if you take the latest versions you will not have to go and discover all the funny all the",
    "start": "1248960",
    "end": "1255520"
  },
  {
    "text": "fun problems that people have solved because the world keeps moving forward and people upgrade the libraries and so",
    "start": "1255520",
    "end": "1260720"
  },
  {
    "text": "now it's seen well most things seem to work on the 11 reasonably well with the expression",
    "start": "1260720",
    "end": "1266240"
  },
  {
    "text": "exception of modules because modules are not fully supported by some languages but we'll get that",
    "start": "1266240",
    "end": "1271600"
  },
  {
    "text": "we also use juke juke officially supports jdk 11 since three 12.0 we actually are still on 8.11",
    "start": "1271600",
    "end": "1280000"
  },
  {
    "text": "something we probably should have upgraded but it turns out we didn't have to because it still works",
    "start": "1280000",
    "end": "1286640"
  },
  {
    "text": "uh flyway uh if you don't if you do your database migrations",
    "start": "1286640",
    "end": "1291840"
  },
  {
    "text": "manually this is my personal well advertising banner for the authors of flywave framework it is something that",
    "start": "1291840",
    "end": "1299600"
  },
  {
    "text": "helps you manage database migrations super nice super easy runs really great gives you repeatable",
    "start": "1299600",
    "end": "1307120"
  },
  {
    "text": "testable databases and if you combine",
    "start": "1307120",
    "end": "1312320"
  },
  {
    "text": "combine it with test containers you can run database tests and all the other tests",
    "start": "1312320",
    "end": "1317919"
  },
  {
    "text": "within a container in a repeatable environment we use postgres so that works out of the box if you have to use oracle database i",
    "start": "1317919",
    "end": "1324640"
  },
  {
    "text": "have no idea what the case is there but well as i said this is a talk from our context",
    "start": "1324640",
    "end": "1330480"
  },
  {
    "text": "flyway supports jtk 11 since five to zero uh we actually encountered some issues",
    "start": "1330480",
    "end": "1336080"
  },
  {
    "text": "when we tried to upgrade flyway and we decided to stick back to four to zero and we are still there because it works",
    "start": "1336080",
    "end": "1343039"
  },
  {
    "text": "for us without any problems whatsoever and somebody once joked that if you want",
    "start": "1343039",
    "end": "1348640"
  },
  {
    "text": "to come across as a well an expert in the java land you should mention uh jabs by numbers i am not in that space i",
    "start": "1348640",
    "end": "1356640"
  },
  {
    "text": "i had to google it jab 320 is the one that removes some components of java ee from the",
    "start": "1356640",
    "end": "1363760"
  },
  {
    "text": "java well from the jdk so there have there has been jax b that was part of your jdk n8 it's no",
    "start": "1363760",
    "end": "1369919"
  },
  {
    "text": "longer there so if you have to use if you want to use jax b or if you want to generate some code based on whistles you will have to explicitly add",
    "start": "1369919",
    "end": "1377280"
  },
  {
    "text": "those tools to your builds that's all that's all this this uh jeb does that's all the modification that",
    "start": "1377280",
    "end": "1382960"
  },
  {
    "text": "this jab forces potentially on your on your uh",
    "start": "1382960",
    "end": "1388400"
  },
  {
    "text": "applications languages which languages do you use do we use i already said we primarily use java",
    "start": "1388400",
    "end": "1395200"
  },
  {
    "text": "everywhere we default to java we're quite happy with that but we also use groovy",
    "start": "1395200",
    "end": "1400320"
  },
  {
    "text": "in places why groovy because it has spock spock is awesome for writing tests that's uh my personal opinion",
    "start": "1400320",
    "end": "1408159"
  },
  {
    "text": "we have upgraded groovy to a version that supports jdk 11 and this just worked not much time to",
    "start": "1408159",
    "end": "1415600"
  },
  {
    "text": "spend here kotlin we also use kotlin in some places if you ask me personally i personally",
    "start": "1415600",
    "end": "1422000"
  },
  {
    "text": "prefer scala but there is a lot of people and a lot of opinions and i will not tell people",
    "start": "1422000",
    "end": "1427520"
  },
  {
    "text": "what to do because well everybody has their own and that's fine and colten supports jdk 9 to 12 since 1 3 30.",
    "start": "1427520",
    "end": "1434960"
  },
  {
    "text": "and again this just worked awesome scala beer 2 12 7. we just switched",
    "start": "1434960",
    "end": "1442159"
  },
  {
    "text": "versions of the underlying jdk and it just worked awesome if all features all changes happened like that",
    "start": "1442159",
    "end": "1448320"
  },
  {
    "text": "life would be beautiful and the small nodes jdk 11 compatibility or support in terms",
    "start": "1448320",
    "end": "1455679"
  },
  {
    "text": "of scala is not fully complete because it doesn't really it doesn't fully follow the java platform module system",
    "start": "1455679",
    "end": "1462400"
  },
  {
    "text": "and you will see this is a very popular thing that's not fully out there yet so if you want to heavily rely on modules",
    "start": "1462400",
    "end": "1468720"
  },
  {
    "text": "in java and tie it with the language support that might not be there",
    "start": "1468720",
    "end": "1473840"
  },
  {
    "text": "we are not doing that because our applications are isolated and they sit in their own containers we",
    "start": "1473840",
    "end": "1479760"
  },
  {
    "text": "don't need it but if this is a killer feature that you would like to",
    "start": "1479760",
    "end": "1485120"
  },
  {
    "text": "see from for example scala check the current state because they are still working on it or the last time i",
    "start": "1485120",
    "end": "1491840"
  },
  {
    "text": "checked they were still working on it and i mentioned postgres and i mentioned testing by fosgress so",
    "start": "1491840",
    "end": "1498240"
  },
  {
    "text": "historically a year ago we used to use something called postgresql embedded",
    "start": "1498240",
    "end": "1504240"
  },
  {
    "text": "and progress people embedded was a very nice project with the tiny caveat of a it stopped being",
    "start": "1504240",
    "end": "1510000"
  },
  {
    "text": "actively maintained and then somebody after that after they stopped maintaining it",
    "start": "1510000",
    "end": "1515760"
  },
  {
    "text": "upgraded it to make java 9 plus compatible but because both of those comments in",
    "start": "1515760",
    "end": "1522799"
  },
  {
    "text": "the red frames happened before well they happened after we migrated we actually",
    "start": "1522799",
    "end": "1528559"
  },
  {
    "text": "switched the test containers and we never looked back also this because this project is not really",
    "start": "1528559",
    "end": "1533760"
  },
  {
    "text": "developed anymore test containers we are very happy with my recommendation is use test containers",
    "start": "1533760",
    "end": "1539520"
  },
  {
    "text": "if you've never tried it if you have to mock a database bring up a database for integration testing absolutely do it",
    "start": "1539520",
    "end": "1545440"
  },
  {
    "text": "it's an awesome tool and the authors of frameworks are also frequent visitors to many conferences",
    "start": "1545440",
    "end": "1550880"
  },
  {
    "text": "they are very approachable on twitter and other mediums wholeheartedly recommend",
    "start": "1550880",
    "end": "1557840"
  },
  {
    "text": "dependencies so let's say you want to tackle the problem of upgrading sorry",
    "start": "1561760",
    "end": "1570080"
  },
  {
    "text": "no corona here uh and you want uh you have three components component a b and c a depends",
    "start": "1570080",
    "end": "1575440"
  },
  {
    "text": "on b b depends on c and uh well in the case of uh or of what i deal with on a daily basis",
    "start": "1575440",
    "end": "1582559"
  },
  {
    "text": "there is the the application that actually delivers the service that depends on an alpha framework alpha is",
    "start": "1582559",
    "end": "1587760"
  },
  {
    "text": "our own uh event sourcing cqrs framework and commons is as you guessed",
    "start": "1587760",
    "end": "1595679"
  },
  {
    "text": "a commons library everybody needs one everybody has one so what we started doing how the migration actually worked",
    "start": "1595679",
    "end": "1600799"
  },
  {
    "text": "is we took the outermost layer first making it compile without any problems on java 11.",
    "start": "1600799",
    "end": "1607520"
  },
  {
    "text": "that required some library changes that required some build file changes that required some gradle file modifications this took some time",
    "start": "1607520",
    "end": "1614799"
  },
  {
    "text": "wasn't particularly painful and after that we started testing using 11.",
    "start": "1614799",
    "end": "1620080"
  },
  {
    "text": "then we started running this using 11 previous components were being compiled and since everything was",
    "start": "1620080",
    "end": "1628320"
  },
  {
    "text": "there happening with jdk8 after we did with the outermost layer we went one level deeper",
    "start": "1628320",
    "end": "1634400"
  },
  {
    "text": "and so on and so on you get the pattern and now i should mention some of the",
    "start": "1634400",
    "end": "1639440"
  },
  {
    "text": "funny quirks that we encountered on the journey for example bouncy castle in jdk8 i know a lot of people that used",
    "start": "1639440",
    "end": "1646880"
  },
  {
    "text": "to install this into the jre lib text directory this directory is no longer present the",
    "start": "1646880",
    "end": "1652559"
  },
  {
    "text": "if you want to install it to the same uh effect in jdk 9 plus you have to do",
    "start": "1652559",
    "end": "1658720"
  },
  {
    "text": "this this thing also at the bottom of the slide there is a link you don't have to try to write it down",
    "start": "1658720",
    "end": "1668000"
  },
  {
    "text": "what we do with bouncy castle now is added to the dependencies normally and it just works",
    "start": "1668000",
    "end": "1673120"
  },
  {
    "text": "and we're happy no problem no magic required awesome there is also the case of vm",
    "start": "1673120",
    "end": "1678480"
  },
  {
    "text": "options you are at qcon which means you are amazing you probably heard about unified gc",
    "start": "1678480",
    "end": "1684399"
  },
  {
    "text": "logging the syntax of getting output from gce logs changed and",
    "start": "1684399",
    "end": "1692480"
  },
  {
    "text": "the formats changed as well what this means in practice in practice we replaced top with the bottom more or",
    "start": "1692480",
    "end": "1699360"
  },
  {
    "text": "less of course and bonus points if somebody spots something funny at the bottom well i'll drink",
    "start": "1699360",
    "end": "1706158"
  },
  {
    "text": "i i see some people notice that charge are roaming uh yes uh what happens is uh",
    "start": "1707840",
    "end": "1716080"
  },
  {
    "text": "the line that tells the jvm to lock everything from gc becomes simpler",
    "start": "1716080",
    "end": "1721360"
  },
  {
    "text": "that's that's it all change that there is if you have very big command lines if",
    "start": "1721360",
    "end": "1726960"
  },
  {
    "text": "you think it might be a problem in your environment somebody was very kind and developed this",
    "start": "1726960",
    "end": "1732480"
  },
  {
    "text": "tool called the jaco line which can tell you what's good in jdk8 and then if you switch to jdk 11",
    "start": "1732480",
    "end": "1739760"
  },
  {
    "text": "it can tell you what's no longer good super awesome super neat we didn't have to use it i found it",
    "start": "1739760",
    "end": "1746080"
  },
  {
    "text": "much later but it's only fair i mention it also whenever i mention anything to do",
    "start": "1746080",
    "end": "1752480"
  },
  {
    "text": "with command lines i always like to say huge thanks to crystal codes who",
    "start": "1752480",
    "end": "1757919"
  },
  {
    "text": "is the person behind this awesome website that takes all of the flags that different",
    "start": "1757919",
    "end": "1763120"
  },
  {
    "text": "versions of jdks contain and it gives you a human readable description it tells you what the default is which",
    "start": "1763120",
    "end": "1770159"
  },
  {
    "text": "component which architecture with which operating system is is that specific to when has that appeared when it has",
    "start": "1770159",
    "end": "1776799"
  },
  {
    "text": "disappeared so if you want to explore that area uh chris crystal codes and there is a",
    "start": "1776799",
    "end": "1782159"
  },
  {
    "text": "link somewhere on the slides another fact of life that we have discovered is",
    "start": "1782159",
    "end": "1787200"
  },
  {
    "text": "java 9 came with a new zip file implementation which means one file one flag we could kill minus the sunzip",
    "start": "1787200",
    "end": "1794240"
  },
  {
    "text": "disabled memory mapping it's gone and it's gone if you've seen soft park it's gone",
    "start": "1794240",
    "end": "1799760"
  },
  {
    "text": "time precision a bit of a problem or a bit of a source",
    "start": "1799760",
    "end": "1806480"
  },
  {
    "text": "of interesting things and phenomenons uh jdk 9 has increased the precision",
    "start": "1806480",
    "end": "1813440"
  },
  {
    "text": "of the java time clock depending on the precision of the",
    "start": "1813440",
    "end": "1819520"
  },
  {
    "text": "underlying operating system source that seems like a very innocuous change",
    "start": "1819520",
    "end": "1825360"
  },
  {
    "text": "and but in reality it's it's a very profound one because what it means if your operating system",
    "start": "1825360",
    "end": "1831360"
  },
  {
    "text": "can be more precise than milliseconds it can go it can give you actually microseconds in",
    "start": "1831360",
    "end": "1836399"
  },
  {
    "text": "that clock what that means in term in turn is uh well of course i mentioned",
    "start": "1836399",
    "end": "1842480"
  },
  {
    "text": "the printing on the operating system i don't know what the level of support is on windows on linux it works and it's more precise",
    "start": "1842480",
    "end": "1848559"
  },
  {
    "text": "that's what i can tell you windows i don't use so i just don't know since i'm mentioning time before i tell",
    "start": "1848559",
    "end": "1855200"
  },
  {
    "text": "you what the bug is i have to always recommend shipless excellence writing about",
    "start": "1855200",
    "end": "1860559"
  },
  {
    "text": "time and there is a lot of complexity with dealing and with time in computers the article is from 2014",
    "start": "1860559",
    "end": "1866960"
  },
  {
    "text": "but it's an awesome read if you're curious people like you are because you're here i do recommend reading that it's not a",
    "start": "1866960",
    "end": "1874480"
  },
  {
    "text": "very sleep inducing article i found it extremely exciting because there are things out there so",
    "start": "1874480",
    "end": "1881279"
  },
  {
    "text": "time what happens uh when you do instant.now and print it",
    "start": "1881279",
    "end": "1887120"
  },
  {
    "text": "instead of getting three digits after the dot you now get six and hmm yeah what's the meaning of this",
    "start": "1887120",
    "end": "1896480"
  },
  {
    "text": "well postgres for example stores timestamps with microsecond precision before that would be truncated to just",
    "start": "1896480",
    "end": "1903679"
  },
  {
    "text": "three which means all your tests will just work and now things start to slightly go out of sync",
    "start": "1903679",
    "end": "1910320"
  },
  {
    "text": "and some code assumes three digits some code assumes six digits the one the code that has three digits gets expanded and",
    "start": "1910320",
    "end": "1916399"
  },
  {
    "text": "doesn't really match the six which means you get a lot of strange exceptions or bugs or test failures in",
    "start": "1916399",
    "end": "1923840"
  },
  {
    "text": "your application this took us quite some to time to fix what we did and what i usually",
    "start": "1923840",
    "end": "1930480"
  },
  {
    "text": "recommend people do anyway is if you're dealing with time inject well insert the time through a piece of code",
    "start": "1930480",
    "end": "1937120"
  },
  {
    "text": "that you control if you rely on instant.now and things like that you don't have any control mocking becomes",
    "start": "1937120",
    "end": "1943679"
  },
  {
    "text": "tricky or convoluted and hard we do something like a time provider a",
    "start": "1943679",
    "end": "1951279"
  },
  {
    "text": "time provider is the entry point to how applications in revolut get time this has a similar api but not the same",
    "start": "1951279",
    "end": "1959440"
  },
  {
    "text": "as the java dot time package why so that an ide will not get surprised and it",
    "start": "1959440",
    "end": "1966399"
  },
  {
    "text": "will not give you uh suggestions of using the the wrong methods and the wrong static methods",
    "start": "1966399",
    "end": "1971760"
  },
  {
    "text": "uh we use the types we didn't do anything it's just the an entry point if somebody needs to acquire time they get it from through",
    "start": "1971760",
    "end": "1977840"
  },
  {
    "text": "the time provider time provider can uh say what precision uh is expected of a clock",
    "start": "1977840",
    "end": "1985840"
  },
  {
    "text": "for us in most cases millis is actually what we want because of all the provider integrations millis is what we",
    "start": "1985840",
    "end": "1991919"
  },
  {
    "text": "get on the entry mill this is what we also should provide on the output on the outbound",
    "start": "1991919",
    "end": "1997679"
  },
  {
    "text": "and another bug that we discovered not only us of course date time formatter when you were using",
    "start": "1997679",
    "end": "2004640"
  },
  {
    "text": "date time formatter with local uk and given one of the offices in the uk and we have a lot of customers in the uk",
    "start": "2004640",
    "end": "2010399"
  },
  {
    "text": "we got an old pointer strange but this happens what you have",
    "start": "2010399",
    "end": "2015840"
  },
  {
    "text": "to do is instead of doing that with local of uk you have to do local english",
    "start": "2015840",
    "end": "2021440"
  },
  {
    "text": "we replace everything with locale english because that's actually at least allows some consistency because not",
    "start": "2021440",
    "end": "2027919"
  },
  {
    "text": "using defaults in locales that's uh that's a source of joy as you probably know",
    "start": "2027919",
    "end": "2033120"
  },
  {
    "text": "compiler backs there have been compiler backs sadly the easy one uh",
    "start": "2033120",
    "end": "2039600"
  },
  {
    "text": "sometimes some builds i don't want to say at random but it almost seemed like at random would fail with",
    "start": "2039600",
    "end": "2046159"
  },
  {
    "text": "back saying that that message file broken so you don't even see what the what the problem is if you explore the",
    "start": "2046159",
    "end": "2051919"
  },
  {
    "text": "jdk back database you will see that that back is a duplicate of something",
    "start": "2051919",
    "end": "2057760"
  },
  {
    "text": "which sadly has only been fixed in version 12. and in here at the bottom you'll see",
    "start": "2057760",
    "end": "2062878"
  },
  {
    "text": "that there is a list of backboards and it's not complete because it's it's growing and this actually is",
    "start": "2062879",
    "end": "2070320"
  },
  {
    "text": "highlighting the why uh the support model and sub support well release discussion is",
    "start": "2071679",
    "end": "2076800"
  },
  {
    "text": "is an important thing to keep in mind because if there is a bug in jdk 11 and it's fixed in 12 9 and 10 will not",
    "start": "2076800",
    "end": "2085520"
  },
  {
    "text": "see this fix ever 11 will see it because it's an lts edition but the fix is in 11.0.4",
    "start": "2085520",
    "end": "2094240"
  },
  {
    "text": "which is not publicly available well it is publicly available but to use it in production you need to have a license",
    "start": "2094240",
    "end": "2099440"
  },
  {
    "text": "and so on and so on so using a supported lts goes a long way another funny bit",
    "start": "2099440",
    "end": "2105359"
  },
  {
    "text": "anonymous type class inference gives you a new pointer well what does",
    "start": "2105359",
    "end": "2110480"
  },
  {
    "text": "it mean that if you try to do something like that you'll get a new pointer our approach to the problem don't use",
    "start": "2110480",
    "end": "2118079"
  },
  {
    "text": "anonymous classes as frequently uh it was a bit of",
    "start": "2118079",
    "end": "2123839"
  },
  {
    "text": "a well we just did it and and the bug went away another not another actually the biggest",
    "start": "2123839",
    "end": "2132400"
  },
  {
    "text": "problem that we had with java c and generics is java c has a problem with",
    "start": "2132400",
    "end": "2139599"
  },
  {
    "text": "captures the problem is still sadly unresolved the problem manifests itself",
    "start": "2139599",
    "end": "2145359"
  },
  {
    "text": "in a runtime problem so compilation goes sometimes goes okay sometimes not",
    "start": "2145359",
    "end": "2152640"
  },
  {
    "text": "if you have a generic which extends something what we had to do was uh replace it with",
    "start": "2152720",
    "end": "2159200"
  },
  {
    "text": "just with a question mark uh that bug is still open that bug is still happening uh sadly one",
    "start": "2159200",
    "end": "2166400"
  },
  {
    "text": "of the real well some of the the results of this bug were run time",
    "start": "2166400",
    "end": "2172240"
  },
  {
    "text": "failure so your compilation went fine and then things exploded in at runtime",
    "start": "2172240",
    "end": "2177920"
  },
  {
    "text": "in production not what you want so i have to mention it what can you do if you actually care",
    "start": "2177920",
    "end": "2185520"
  },
  {
    "text": "about the type other languages come to the rescue uh i am a fan of scala's type system",
    "start": "2185520",
    "end": "2191599"
  },
  {
    "text": "because it allows to express a lot if you want to capture those types you can use scala",
    "start": "2191599",
    "end": "2196960"
  },
  {
    "text": "as a workaround and ask scala cause to give you hints and give you a lot of help if you don't want to use scala well if",
    "start": "2196960",
    "end": "2204000"
  },
  {
    "text": "you can live with just a question mark that's that's also an option and then people who are performance",
    "start": "2204000",
    "end": "2209200"
  },
  {
    "text": "oriented will probably say well g1 g1 there has been a lot of conversations about g1",
    "start": "2209200",
    "end": "2215200"
  },
  {
    "text": "in 11 the default gc is g1 and this g1 is very much it's a",
    "start": "2215200",
    "end": "2221440"
  },
  {
    "text": "different g1 than the one that done g1 that comes in jdk8 not the same",
    "start": "2221440",
    "end": "2227040"
  },
  {
    "text": "thing completely not the same thing uh we are happy uh with this uh what",
    "start": "2227040",
    "end": "2235200"
  },
  {
    "text": "we get to see because of ben so i had to kind of poke at him because we use new relic we see garbage",
    "start": "2235200",
    "end": "2241680"
  },
  {
    "text": "collection expressed as cpu time instead of pause time uh and i would like to see the post time",
    "start": "2241680",
    "end": "2247280"
  },
  {
    "text": "because it's kind of important kind of useful hopefully this will happen soon uh i'll keep my fingers crossed for you",
    "start": "2247280",
    "end": "2256000"
  },
  {
    "text": "in jdk11 full gcs with g1 are multi-threaded actually since jdk 10. we don't have to",
    "start": "2256000",
    "end": "2262800"
  },
  {
    "text": "do magic almost any fiddling with gc tuning to have",
    "start": "2262800",
    "end": "2270560"
  },
  {
    "text": "pose to achieve poseless on a human perception level for our services this is such an empowering life changer",
    "start": "2270560",
    "end": "2277119"
  },
  {
    "text": "compared to jdk8 that it's hard to describe our heaps and our application usage has kept",
    "start": "2277119",
    "end": "2283760"
  },
  {
    "text": "growing year by well month by month and what we do is just change the container size give it more memory",
    "start": "2283760",
    "end": "2290320"
  },
  {
    "text": "and that's it and it still works reliably we still don't have",
    "start": "2290320",
    "end": "2295920"
  },
  {
    "text": "don't have problems we don't have crazy crazy pauses and it works well enough that we don't have to pay too much attention",
    "start": "2295920",
    "end": "2302400"
  },
  {
    "text": "we with a caveat we don't run cassandra we don't run uh too much latency sensitive code",
    "start": "2302400",
    "end": "2308720"
  },
  {
    "text": "so this is as i said in context of what we do here but basically if you run web services or",
    "start": "2308720",
    "end": "2316000"
  },
  {
    "text": "microservices that have to reply within a few hundred millis from our point of view",
    "start": "2316000",
    "end": "2321920"
  },
  {
    "text": "we just kept increasing keep sizes and there were no issues another nice feature is we had",
    "start": "2321920",
    "end": "2329440"
  },
  {
    "text": "less problems that required gc docs to the point in which in most cases we actually don't need",
    "start": "2329440",
    "end": "2334640"
  },
  {
    "text": "them i would still recommend you do take gc locks because they are useful when they are needed and",
    "start": "2334640",
    "end": "2340400"
  },
  {
    "text": "another nice feature of g1 in 11 that we have observed is if an application is to do an out of",
    "start": "2340400",
    "end": "2346880"
  },
  {
    "text": "memory exception you will see it faster or we are seeing it much faster than what it used to be in night",
    "start": "2346880",
    "end": "2353520"
  },
  {
    "text": "and you in eight uh there was uh well that behavior is still present but",
    "start": "2353520",
    "end": "2359119"
  },
  {
    "text": "uh there is a case in which you can get out of memory exception gc overhead limit exceeded is there anybody who has",
    "start": "2359119",
    "end": "2365119"
  },
  {
    "text": "never seen a bug like this or sorry an exception like this no hands in the room uh",
    "start": "2365119",
    "end": "2371119"
  },
  {
    "text": "the problem is well what happens here uh gc will try to run it will try to reclaim memory and it will",
    "start": "2371119",
    "end": "2377520"
  },
  {
    "text": "say okay i give up after it passes a certain threshold the problem is by default and i know a lot of people don't know of",
    "start": "2377520",
    "end": "2384160"
  },
  {
    "text": "this flag that this flag even exists it's after gc spends well the",
    "start": "2384160",
    "end": "2389680"
  },
  {
    "text": "application spends 98 time in gc so 1998 percent time ngc",
    "start": "2389680",
    "end": "2395680"
  },
  {
    "text": "your all cores are burning your machine is steaming caught full speed and you're",
    "start": "2395680",
    "end": "2401359"
  },
  {
    "text": "waiting for an exception to happen our exceptions come much faster in 11. we're happy",
    "start": "2401359",
    "end": "2407119"
  },
  {
    "text": "caveats now to 11 we noticed that containers started dying at first",
    "start": "2407119",
    "end": "2412240"
  },
  {
    "text": "uh well i could do a demo here but i won't fade and i won't stamp the internet so",
    "start": "2412240",
    "end": "2417680"
  },
  {
    "text": "imagine i have logged into oracle cloud because it's the most blessed environment that i can and i'm comparing jdk8 at the bottom",
    "start": "2417680",
    "end": "2425040"
  },
  {
    "text": "with jdk 11 at the top what you can probably see or if not don't worry",
    "start": "2425040",
    "end": "2432800"
  },
  {
    "text": "that rss for a similar memory usage is slightly higher in 11. that's",
    "start": "2432800",
    "end": "2438720"
  },
  {
    "text": "basically what we have observed across the board that java 11 requires slightly more uh memory from",
    "start": "2438720",
    "end": "2445119"
  },
  {
    "text": "the operating system than eight which means we just changed the xmxs and xm x",
    "start": "2445119",
    "end": "2451280"
  },
  {
    "text": "the max and start heap size for containers so that everything fits into our precisely calculated container size and",
    "start": "2451280",
    "end": "2459839"
  },
  {
    "text": "oh it worked uh faster out of memories i already mentioned",
    "start": "2459839",
    "end": "2466240"
  },
  {
    "text": "and java 11 comes with new language features which you already know very well",
    "start": "2466240",
    "end": "2471599"
  },
  {
    "text": "some people on twitter claim that var is an absolutely useless thing and they don't want to use it some people hate it",
    "start": "2471599",
    "end": "2478160"
  },
  {
    "text": "they are absolutely entitled to their opinion what we have uh analyzed well i've analyzed our one of our projects",
    "start": "2478160",
    "end": "2484079"
  },
  {
    "text": "and i see that at first people were a bit cautious with using var but then the feature",
    "start": "2484079",
    "end": "2489599"
  },
  {
    "text": "quickly caught on and people actually like using that people like replacing final something with vars because it's just",
    "start": "2489599",
    "end": "2494880"
  },
  {
    "text": "less characters it's just less reading and usually the code that it replaces is quite obvious so we've seen great adoption with this",
    "start": "2494880",
    "end": "2502400"
  },
  {
    "text": "and you might see a dip the dip happens because we took a module out of the the main codebase also you probably know",
    "start": "2502400",
    "end": "2509520"
  },
  {
    "text": "that as of release 9 underscore is a keyword you cannot use this as an identifier",
    "start": "2509520",
    "end": "2514800"
  },
  {
    "text": "but don't worry people are creative well this is a this is what it's what i just said again",
    "start": "2514800",
    "end": "2521599"
  },
  {
    "text": "but you can use double underscore double underscore is still legal if you have used other languages if you",
    "start": "2521599",
    "end": "2528319"
  },
  {
    "text": "want to have underscore in java you can do double undiscover it works to the same effect and there is an awesome another awesome",
    "start": "2528319",
    "end": "2535599"
  },
  {
    "text": "thing that i think ben can speak about even more he even you even gave your talk on monday at lgc",
    "start": "2535599",
    "end": "2542960"
  },
  {
    "text": "java flight recorder and mission control are open source uh that means that you don't need to get a license to use them",
    "start": "2542960",
    "end": "2549040"
  },
  {
    "text": "you can just download it you can compile them yourself and you can analyze your running jvm 11 jdk 11",
    "start": "2549040",
    "end": "2554240"
  },
  {
    "text": "application uh with those excellent tools if you've never used it i would recommend give them a try because it's going it's",
    "start": "2554240",
    "end": "2560319"
  },
  {
    "text": "going to change your life for the better uh and with that the logical question is",
    "start": "2560319",
    "end": "2566319"
  },
  {
    "text": "what do we plan to do next uh one option is go java 13.",
    "start": "2566319",
    "end": "2572160"
  },
  {
    "text": "java 14 has a lot of improvements in g1 space much better behavior from from the",
    "start": "2572160",
    "end": "2578640"
  },
  {
    "text": "garbage collector for example much more controlled pulse times if you were to graph",
    "start": "2578640",
    "end": "2584800"
  },
  {
    "text": "11 it can be all over the place 13 can be following a trend less memory hunger",
    "start": "2584800",
    "end": "2592000"
  },
  {
    "text": "so smaller rss size compared to 11 however it's not",
    "start": "2592000",
    "end": "2597440"
  },
  {
    "text": "supported anymore because now it's going to be time for 14",
    "start": "2597440",
    "end": "2602800"
  },
  {
    "text": "which comes out very very soon so how about 14",
    "start": "2602800",
    "end": "2608880"
  },
  {
    "text": "14 has an amazing feature for observability flight recorder event streaming awesome",
    "start": "2608880",
    "end": "2614319"
  },
  {
    "text": "we want it we would like to have it now even however gradle does not work with java 14. gradle doesn't work with java 14",
    "start": "2614319",
    "end": "2620400"
  },
  {
    "text": "because groovy what we are planning to do is wait them out let them solve their",
    "start": "2620400",
    "end": "2626880"
  },
  {
    "text": "issues when it's available we will go there because we don't need that feature it's not a killer feature for us",
    "start": "2626880",
    "end": "2633359"
  },
  {
    "text": "we will probably get towards that stage or we can hope for some very kind people to backport those features",
    "start": "2633359",
    "end": "2639520"
  },
  {
    "text": "hopefully maybe to maybe other gtks maybe that would be awesome",
    "start": "2639520",
    "end": "2644880"
  },
  {
    "text": "another thing what we are going to try next is growl because especially with native image",
    "start": "2644880",
    "end": "2650240"
  },
  {
    "text": "it's a thing we want to test i am aware that there are some changes to how gc works in native images",
    "start": "2650240",
    "end": "2656079"
  },
  {
    "text": "but we want to give it a try and now the question is how should you uh go about upgrading",
    "start": "2656079",
    "end": "2662880"
  },
  {
    "text": "your apps to jdk 11 or later just try to compile them",
    "start": "2662880",
    "end": "2669680"
  },
  {
    "text": "try working with that and before i say thanks uh before i say thanks for for for good",
    "start": "2669680",
    "end": "2675680"
  },
  {
    "text": "uh i am ready for uh some questions because it's almost the time for questions if my",
    "start": "2675680",
    "end": "2681920"
  },
  {
    "text": "mods is correct uh this is the bottom line of the talk i want you to upgrade java if you're",
    "start": "2681920",
    "end": "2687599"
  },
  {
    "text": "before 11 it's probably a good idea it has worked us it has worked for us very well and",
    "start": "2687599",
    "end": "2695920"
  },
  {
    "text": "many of you can have a good experience even in a big organization this will require the",
    "start": "2695920",
    "end": "2701599"
  },
  {
    "text": "whole process will require some planning because it's not a it's the list of",
    "start": "2701599",
    "end": "2707119"
  },
  {
    "text": "changes and the list required to the application is not just changing the underlying jdk",
    "start": "2707119",
    "end": "2712480"
  },
  {
    "text": "in most cases so it will require some work it will will require some planning and scheduling and working with well",
    "start": "2712480",
    "end": "2718640"
  },
  {
    "text": "product owner or whoever organizes your work but this should",
    "start": "2718640",
    "end": "2724560"
  },
  {
    "text": "should be done and this will allow you this will put you on the path to greater newer newest features now",
    "start": "2724560",
    "end": "2732240"
  },
  {
    "text": "we will have question time uh the way questions work is so raise your hands and alex will",
    "start": "2732240",
    "end": "2737520"
  },
  {
    "text": "be super kind and walk up to you and there is a question in the back already uh this question is off but before we do",
    "start": "2737520",
    "end": "2743760"
  },
  {
    "text": "that can we just say thanks to aggs for the excellent presentation",
    "start": "2743760",
    "end": "2748560"
  },
  {
    "text": "thank you for the talk so you mentioned that one of the driving factors behind the",
    "start": "2755680",
    "end": "2761760"
  },
  {
    "text": "migration was that you wanted to move faster yes so you migrated are you moving faster now",
    "start": "2761760",
    "end": "2767359"
  },
  {
    "text": "uh yes we yes we are uh how how that exactly is happening we can",
    "start": "2767359",
    "end": "2772480"
  },
  {
    "text": "for example if we need to react to load increasing because our customer base is increasing uh we",
    "start": "2772480",
    "end": "2778560"
  },
  {
    "text": "just give containers more memory and it just works we don't have to do to and to do anything that",
    "start": "2778560",
    "end": "2784400"
  },
  {
    "text": "also another important thing is if hiring and and finding talented people who are inspired",
    "start": "2784400",
    "end": "2790400"
  },
  {
    "text": "to do to do good stuff those people are probably already uh curious about eleven so they want to",
    "start": "2790400",
    "end": "2796079"
  },
  {
    "text": "work with an organization that's already using new features it's a very important thing because the",
    "start": "2796079",
    "end": "2801119"
  },
  {
    "text": "talent is in tech is very hard to find because there is a lot of competition so yes",
    "start": "2801119",
    "end": "2808240"
  },
  {
    "text": "one question that you might have asked the performance we were happy about the performance no",
    "start": "2808319",
    "end": "2813359"
  },
  {
    "text": "problems there as i said it's a human person",
    "start": "2813359",
    "end": "2818400"
  },
  {
    "text": "perception uh latency that we are trying to optimize with most uh uh most services which means it's not",
    "start": "2818400",
    "end": "2824400"
  },
  {
    "text": "millisecond or or sub millisecond latencies that we have we're happy with uh having",
    "start": "2824400",
    "end": "2830720"
  },
  {
    "text": "replies with let's say 10 20 30 in that range",
    "start": "2830720",
    "end": "2836160"
  },
  {
    "text": "there is a question awesome i see you hey there um you mentioned that you moved away",
    "start": "2836640",
    "end": "2841760"
  },
  {
    "text": "from embedded postgres to test containers yes what's the reset time between",
    "start": "2841760",
    "end": "2847520"
  },
  {
    "text": "tests for test containers i don't know uh individual the individual time",
    "start": "2847520",
    "end": "2854880"
  },
  {
    "text": "for a reset i could maybe try to check it and we can talk about it later in the day",
    "start": "2854880",
    "end": "2861359"
  },
  {
    "text": "uh out of the blue i don't know the whole the whole test suite uh and there is a lot of tests takes uh",
    "start": "2861359",
    "end": "2868640"
  },
  {
    "text": "well takes almost an hour but the number of test cases and tests this is counted in tens of thousands so",
    "start": "2868640",
    "end": "2876079"
  },
  {
    "text": "uh it's it's an effort it takes time but we are at least happy well quite sure of",
    "start": "2876079",
    "end": "2882559"
  },
  {
    "text": "our applications i see you perfect hi thanks for the talk um just wondering with your docker",
    "start": "2882559",
    "end": "2889040"
  },
  {
    "text": "images did you find any particular um base image for java 11 that you",
    "start": "2889040",
    "end": "2894160"
  },
  {
    "text": "recommend uh we built our own the way application is assembled there is a there is a base",
    "start": "2894160",
    "end": "2899520"
  },
  {
    "text": "image that has uh java runtime in it and then we marry that image with a jar file",
    "start": "2899520",
    "end": "2906000"
  },
  {
    "text": "that contains the application and all the other all the other things that we have so i would say look at",
    "start": "2906000",
    "end": "2911359"
  },
  {
    "text": "what adopt open jdk people are doing that's probably a good source for inspiration at first i cannot recommend",
    "start": "2911359",
    "end": "2917839"
  },
  {
    "text": "anything in particular because we are running we're making our own okay i think we've got time for one last",
    "start": "2917839",
    "end": "2923119"
  },
  {
    "text": "question thank you i was just wondering i don't know how",
    "start": "2923119",
    "end": "2928559"
  },
  {
    "text": "how much independence the teams within your organization have but how did you coordinate it across the",
    "start": "2928559",
    "end": "2933920"
  },
  {
    "text": "firm did you kind of have one roll out for all the teams together or were there some pioneering",
    "start": "2933920",
    "end": "2940240"
  },
  {
    "text": "teams that drove it and the others followed so uh we did we did have to",
    "start": "2940240",
    "end": "2945520"
  },
  {
    "text": "coordinate so there is a bunch of applications that make revolut do whatever does uh we started",
    "start": "2945520",
    "end": "2952000"
  },
  {
    "text": "with one application and then we moved on uh we when we were quite certain of the image",
    "start": "2952000",
    "end": "2957440"
  },
  {
    "text": "that has been upgraded and that the outer layer of onion that i talked about uh already works",
    "start": "2957440",
    "end": "2962640"
  },
  {
    "text": "we started to switch individual applications verify that they run correctly because of course we",
    "start": "2962640",
    "end": "2968319"
  },
  {
    "text": "have tested we we were quite sure that is going to be fine but as i mentioned with the generic bug that was an unexpected one and that still still",
    "start": "2968319",
    "end": "2975040"
  },
  {
    "text": "happened because well it's still out there so we had to modify individual applications but one by one uh there was a blessing from",
    "start": "2975040",
    "end": "2982480"
  },
  {
    "text": "the cto and that was required but",
    "start": "2982480",
    "end": "2988319"
  },
  {
    "text": "more details i think we can take offline because i think we are running closely out of this",
    "start": "2988319",
    "end": "2995838"
  },
  {
    "text": "i wanted to show you one more uh thing uh which jdk because you probably wanted to ask we've obviously adopted open jdk",
    "start": "2996000",
    "end": "3003680"
  },
  {
    "text": "and uh i'll finish with this uh awesome show of my photoshop skills thank you so much",
    "start": "3003680",
    "end": "3013680"
  }
]