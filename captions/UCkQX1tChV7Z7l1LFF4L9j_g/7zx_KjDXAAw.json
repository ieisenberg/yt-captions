[
  {
    "start": "0",
    "end": "198000"
  },
  {
    "text": "[Music]",
    "start": "680",
    "end": "8549"
  },
  {
    "text": "hello and welcome to kotlin more than just android my name is justin lee and i'm a developer at red hat and i work on",
    "start": "15040",
    "end": "20720"
  },
  {
    "text": "the quarkus microservice microprofile based framework um",
    "start": "20720",
    "end": "26240"
  },
  {
    "text": "and i'm also a huge potent fan i've been a fan of kotlin for many many years now",
    "start": "26240",
    "end": "31679"
  },
  {
    "text": "and i'm really really excited to see how big it's growing and how it continues to evolve into some really amazing spaces",
    "start": "31679",
    "end": "38719"
  },
  {
    "text": "and kotlin was really the very first language that enticed me away from writing java i'm a java champion",
    "start": "38719",
    "end": "46000"
  },
  {
    "text": "i've been doing java since 1996 and for me cotton was the first language that felt really",
    "start": "46000",
    "end": "51440"
  },
  {
    "text": "kind of good enough to migrate all my stuff to and so i did that several years ago i started i moved",
    "start": "51440",
    "end": "58800"
  },
  {
    "text": "my first big project over to kotlin in 2015 and i've been trying to do as much as i",
    "start": "58800",
    "end": "65360"
  },
  {
    "text": "can with it uh ever since but many of the cotton devs i talked to",
    "start": "65360",
    "end": "70400"
  },
  {
    "text": "i'm one of the co-leaders at the mrc cotton meet up in new york city cotton meetup",
    "start": "70400",
    "end": "75520"
  },
  {
    "text": "many of them they only do android they've never really written any back-end applications and so the thought of writing",
    "start": "75520",
    "end": "81680"
  },
  {
    "text": "non-android applications in kotlin just hasn't occurred to one because why would they",
    "start": "81680",
    "end": "87360"
  },
  {
    "text": "and that's a little frustrating for me a little disappointing um because i personally love kotlin obviously and but",
    "start": "87360",
    "end": "94079"
  },
  {
    "text": "i've never written a single android app um and there's so much that color has to offer on the back end but never really",
    "start": "94079",
    "end": "100799"
  },
  {
    "text": "gets considered for a lot of people so what i want to do today is i want to showcase some of the",
    "start": "100799",
    "end": "107600"
  },
  {
    "text": "more prominent kind of non-android options for kotlin on the back end",
    "start": "107600",
    "end": "113119"
  },
  {
    "text": "and we don't have a whole lot of time together so i just want to kind of go through kind of a quick whirlwind tour of some of the bigger players and kind",
    "start": "113119",
    "end": "119680"
  },
  {
    "text": "of give you an idea of what's out there and we can talk some options there but",
    "start": "119680",
    "end": "124719"
  },
  {
    "text": "the beautiful thing about kotlin is it was designed to interoperate with java as seamlessly as possible so virtually",
    "start": "124719",
    "end": "131520"
  },
  {
    "text": "any java library out there was a framework or a library or whatever it might be you can use it in",
    "start": "131520",
    "end": "137120"
  },
  {
    "text": "kotlin with very little problems so you can pretty much use any framework you want",
    "start": "137120",
    "end": "143520"
  },
  {
    "text": "to write cotton on the back end but these options give like specific kotlin",
    "start": "143520",
    "end": "151439"
  },
  {
    "text": "goodness to the mix and make it a little bit simpler to use",
    "start": "151519",
    "end": "156720"
  },
  {
    "text": "on the back end so we'll look at some of that stuff so what i'm hoping to do today is to wet your appetite for cotton",
    "start": "156720",
    "end": "162879"
  },
  {
    "text": "on the back end if you haven't considered it yet because it is a great option and what i really hope to do is",
    "start": "162879",
    "end": "168080"
  },
  {
    "text": "to inspire you just to write comment everywhere you can because there's there's really no reason you shouldn't",
    "start": "168080",
    "end": "173519"
  },
  {
    "text": "no technical reason i should say um and it's a great choice for",
    "start": "173519",
    "end": "179280"
  },
  {
    "text": "kind of whatever your computing needs might happen to be and then once we're done with that if there's",
    "start": "179280",
    "end": "184560"
  },
  {
    "text": "anything that comes up in in the slides that we're gonna take out of the content we're gonna take a look at we",
    "start": "184560",
    "end": "190480"
  },
  {
    "text": "can answer hopefully any questions you might have in the q a and then we can just kind of follow where the discussion",
    "start": "190480",
    "end": "195519"
  },
  {
    "text": "takes us there okay so for our last",
    "start": "195519",
    "end": "201920"
  },
  {
    "start": "198000",
    "end": "303000"
  },
  {
    "text": "few minutes together i wanted to go through like a series of options you have for writing stuff on",
    "start": "201920",
    "end": "208159"
  },
  {
    "text": "the back end primarily we're going to look at kind of web microservice frameworks",
    "start": "208159",
    "end": "213599"
  },
  {
    "text": "because that's typically at least the entry point on the backend when you want to start talking about this or that so",
    "start": "213599",
    "end": "220159"
  },
  {
    "text": "that's what we're going to look at today and then we'll we'll look at some kind of some desktop stuff and then depending",
    "start": "220159",
    "end": "225760"
  },
  {
    "text": "how much time we have left uh maybe take a brief peek at some of the things um but time is short so we're",
    "start": "225760",
    "end": "231920"
  },
  {
    "text": "gonna try and get through this as quickly as possible and then anything we miss uh in this session we can perhaps",
    "start": "231920",
    "end": "238239"
  },
  {
    "text": "discuss during in the q a afterwards so with that let's start talking uh web",
    "start": "238239",
    "end": "244799"
  },
  {
    "text": "frameworks um and i would be remiss if i didn't start with like the most kotlin-y version uh",
    "start": "244799",
    "end": "251920"
  },
  {
    "text": "of that answer and that seems the definitive answer there",
    "start": "251920",
    "end": "257280"
  },
  {
    "text": "seems to be this library called ktor which started off as like an early dsl",
    "start": "257280",
    "end": "263440"
  },
  {
    "text": "experiment um for this or that and has kind of evolved into a super feature-rich",
    "start": "263440",
    "end": "270639"
  },
  {
    "text": "framework probably more features than i could process at this moment but",
    "start": "270639",
    "end": "275840"
  },
  {
    "text": "but if you want something like purely cotton and written for kotlin by kotlin people that ktor is where you",
    "start": "275840",
    "end": "283120"
  },
  {
    "text": "want to go and you can find it at ktor dot io",
    "start": "283120",
    "end": "288160"
  },
  {
    "text": "and it has a number of interesting uh because it's written in kotlin and for kotlin",
    "start": "288160",
    "end": "293680"
  },
  {
    "text": "and by kotlin people uh kind of all the rich kotlin goodness comes out and and",
    "start": "293680",
    "end": "299520"
  },
  {
    "text": "how the language plays into the library so for example",
    "start": "299520",
    "end": "305039"
  },
  {
    "start": "303000",
    "end": "473000"
  },
  {
    "text": "if you want to do as the website says the simplest paytor application so in this case we're going",
    "start": "305039",
    "end": "310400"
  },
  {
    "text": "to do fun main which is the equivalent of public static void main",
    "start": "310400",
    "end": "317039"
  },
  {
    "text": "from the java world but in kotlin you just need fun main you can take you know an array of string as arguments if you",
    "start": "317039",
    "end": "322800"
  },
  {
    "text": "want or not most people i think don't probably use those arguments overly much but",
    "start": "322800",
    "end": "329759"
  },
  {
    "text": "regardless this is the simplest way that you can start a k2 application so in this case they're gonna",
    "start": "329759",
    "end": "335919"
  },
  {
    "text": "they're defining an embedded server they're using neti running on port 8000",
    "start": "335919",
    "end": "341280"
  },
  {
    "text": "as you can see here they're passing a lambda to this embedded server and here what",
    "start": "341280",
    "end": "348240"
  },
  {
    "text": "they're defining is the routing so all of your route endpoints uh in if you're coming from the jax rs",
    "start": "348240",
    "end": "354960"
  },
  {
    "text": "uh world this would be you know like your at path um and then you have like at get at you know put at",
    "start": "354960",
    "end": "362160"
  },
  {
    "text": "post kind of whatever ktor defines a very handy dsl to do this",
    "start": "362160",
    "end": "368400"
  },
  {
    "text": "uh there's the starting point here we're gonna we're defining the routing for this embedded server and we're passing in uh",
    "start": "368400",
    "end": "375039"
  },
  {
    "text": "yet another lambda we're gonna define a get endpoint on the root and all it does",
    "start": "375039",
    "end": "381360"
  },
  {
    "text": "is it returns the response text of hello world uh and there's some internal stuff here",
    "start": "381360",
    "end": "388000"
  },
  {
    "text": "what you know where call comes from everything which we're not gonna get into now because it's a little",
    "start": "388000",
    "end": "393520"
  },
  {
    "text": "involved to get too much in into the weeds but this is what a very basic k-tour",
    "start": "393520",
    "end": "398800"
  },
  {
    "text": "application looks like you can get a little bit more complicated in your routing if you so choose",
    "start": "398800",
    "end": "404560"
  },
  {
    "text": "here for example there are multiple endpoints a get on slash customer with an id",
    "start": "404560",
    "end": "411919"
  },
  {
    "text": "as as a url parameters that can be used inside",
    "start": "411919",
    "end": "416960"
  },
  {
    "text": "the function body there there's a post on the slash customer endpoint and then i get again on order instead of id",
    "start": "416960",
    "end": "424880"
  },
  {
    "text": "so you can define them like this but you can also if you want to um you can group them together so we're going to define",
    "start": "424880",
    "end": "430160"
  },
  {
    "text": "our route on slash customer with the get endpoint and the post endpoint you can put your various handling logic and",
    "start": "430160",
    "end": "437039"
  },
  {
    "text": "those particular functions depending on uh you know what the incoming",
    "start": "437039",
    "end": "442560"
  },
  {
    "text": "http verb looks like and you can nest them of course",
    "start": "442560",
    "end": "447759"
  },
  {
    "text": "if you if you wanted to do so and then you can use uh extension functions if you want so you can define",
    "start": "447759",
    "end": "453919"
  },
  {
    "text": "your functions elsewhere so that you don't have them all you know in if you had everything defined in one",
    "start": "453919",
    "end": "459440"
  },
  {
    "text": "giant routing block your simple application suddenly becomes very large just to do the starting point",
    "start": "459440",
    "end": "465919"
  },
  {
    "text": "so you can kind of map all those out into separate functions and separate classes if you like",
    "start": "465919",
    "end": "471199"
  },
  {
    "text": "now if you've done java back in development then you've probably",
    "start": "471199",
    "end": "477520"
  },
  {
    "start": "473000",
    "end": "544000"
  },
  {
    "text": "used spring boot and if you haven't you know someone who has so",
    "start": "477520",
    "end": "483680"
  },
  {
    "text": "this is the obvious the second step because it is it is the biggest player probably in the java world uh at least",
    "start": "483680",
    "end": "489039"
  },
  {
    "text": "in the microservices universe so spring boot added",
    "start": "489039",
    "end": "496000"
  },
  {
    "text": "kotlin support two or three years now i guess and they have some rather robust",
    "start": "496000",
    "end": "502160"
  },
  {
    "text": "options for you if you if you've used spring boot this should all look very familiar to you they have",
    "start": "502160",
    "end": "508800"
  },
  {
    "text": "you know they have their spring initializer you can come in define whichever options you want you",
    "start": "508800",
    "end": "514399"
  },
  {
    "text": "gradle them even you can use kotlin you can use java but we're here to learn cotton so why wouldn't we and just like",
    "start": "514399",
    "end": "520640"
  },
  {
    "text": "every other spring boot application just choose which modules you want which extensions and then generate and it will generate a",
    "start": "520640",
    "end": "528000"
  },
  {
    "text": "whole new package for you and you load it up run it and suddenly",
    "start": "528000",
    "end": "534959"
  },
  {
    "text": "you're running kotlin on the web super handy and if you're familiar with spring boot it's definitely a great",
    "start": "534959",
    "end": "540640"
  },
  {
    "text": "place to start next is corcus which is uh near and dear",
    "start": "540640",
    "end": "548240"
  },
  {
    "start": "544000",
    "end": "631000"
  },
  {
    "text": "to my heart i happen to work on the corcus team but this is not going to be a corcus pitch as such",
    "start": "548240",
    "end": "554000"
  },
  {
    "text": "there are other venues for that but i do want to mention corcus because it is also",
    "start": "554000",
    "end": "561200"
  },
  {
    "text": "it also has kotlin support part of my job is to in is to enhance and round out the kotlin",
    "start": "561200",
    "end": "567120"
  },
  {
    "text": "sport inside uh corcus so if if you're not too keen on getting tied up into the",
    "start": "567120",
    "end": "572720"
  },
  {
    "text": "spring ecosystem which some people are for various reasons uh then",
    "start": "572720",
    "end": "578000"
  },
  {
    "text": "corcus is a great option uh it it uses you know rest easy and hibernate um",
    "start": "578000",
    "end": "585040"
  },
  {
    "text": "if you're familiar with cdi for microprofile it all uses kind of standard jakarta ee microprofile sorts",
    "start": "585040",
    "end": "592160"
  },
  {
    "text": "of libraries so it should all be very very familiar with to you and even though most of it is not",
    "start": "592160",
    "end": "598640"
  },
  {
    "text": "written in kotlin as is the case with spring boot as well because kotlin is designed to interrupt",
    "start": "598640",
    "end": "604880"
  },
  {
    "text": "with java it's very natural to use java libraries from kotlin for the most part",
    "start": "604880",
    "end": "611040"
  },
  {
    "text": "but each both spring boot and corcus do provide a number of",
    "start": "611040",
    "end": "616800"
  },
  {
    "text": "kotlin idiomatic ways to interact with the system and those of course will increase and",
    "start": "616800",
    "end": "621920"
  },
  {
    "text": "improve over time so corcus is a great choice um and we can talk about that uh some other time",
    "start": "621920",
    "end": "629440"
  },
  {
    "text": "without getting too sales pitchy on it another one is micron which is also",
    "start": "629440",
    "end": "635040"
  },
  {
    "start": "631000",
    "end": "739000"
  },
  {
    "text": "quite popular a lot of people like to use that if they're not on spring boot or quarkus",
    "start": "635040",
    "end": "641760"
  },
  {
    "text": "i'll have to confess i'm a little less familiar with this because i just haven't had a chance to play with it much",
    "start": "641760",
    "end": "646959"
  },
  {
    "text": "but they have rather robust kotlin supporting as well and as you can see here they also have",
    "start": "646959",
    "end": "652399"
  },
  {
    "text": "support for ktor so if you'd rather use ktor as the underlying",
    "start": "652399",
    "end": "657519"
  },
  {
    "text": "transport layer instead of i believe it uses neti by default you can actually use ktor and wire in",
    "start": "657519",
    "end": "662880"
  },
  {
    "text": "that way so if you're familiar with micronaut and all of its injections and annotations and life cycle",
    "start": "662880",
    "end": "669279"
  },
  {
    "text": "support and everything you can still use all that on top of ktor which has some interesting",
    "start": "669279",
    "end": "676640"
  },
  {
    "text": "multi-threaded concurrency capabilities that you don't necessarily",
    "start": "676640",
    "end": "682240"
  },
  {
    "text": "see as a developer but you will definitely experience them as on the op side",
    "start": "682240",
    "end": "687600"
  },
  {
    "text": "because it's quite nice so those are if i had to pick you know the top",
    "start": "687600",
    "end": "693200"
  },
  {
    "text": "three or four web frameworks that's what i would look to for for kotlin there are",
    "start": "693200",
    "end": "699600"
  },
  {
    "text": "dozens of more kind of niche or boutique frameworks um and i don't say that to",
    "start": "699600",
    "end": "707120"
  },
  {
    "text": "denigrate any of them there's some amazing work going on in terms of like pushing the boundaries",
    "start": "707120",
    "end": "712560"
  },
  {
    "text": "with kotlin and dsls and such um but they're just not as popular so",
    "start": "712560",
    "end": "717839"
  },
  {
    "text": "finding support or someone who knows also knows those libraries might be a little bit harder but it might be worth it um to try some of those smaller ones",
    "start": "717839",
    "end": "724959"
  },
  {
    "text": "as well because they might really scratch your particular edge so moving away from the desktop from the",
    "start": "724959",
    "end": "731600"
  },
  {
    "text": "from the web to the desktop because we have just a few more minutes left and i don't want to run over as much as i can",
    "start": "731600",
    "end": "740079"
  },
  {
    "start": "739000",
    "end": "831000"
  },
  {
    "text": "if you've ever talked about java desktop of course it was swing for a long long time but the",
    "start": "740079",
    "end": "745120"
  },
  {
    "text": "new hotness is javafx i've seen some amazing javafx",
    "start": "745120",
    "end": "750959"
  },
  {
    "text": "applications written doing some some pretty stellar work in",
    "start": "750959",
    "end": "756639"
  },
  {
    "text": "aerospace work for example putting things in orbit around jupiter",
    "start": "756639",
    "end": "762560"
  },
  {
    "text": "um and that's not an exaggeration it's it's pretty stellar however um",
    "start": "762560",
    "end": "768160"
  },
  {
    "text": "there is a library called tornado fx which",
    "start": "768160",
    "end": "773760"
  },
  {
    "text": "it provides a number of kotlin extension functions and dsls and",
    "start": "773760",
    "end": "780639"
  },
  {
    "text": "convenience methods for building your javafx applications in a much more idiomatic cotton way that helps reduce",
    "start": "780639",
    "end": "787040"
  },
  {
    "text": "kind of the boiler plate needed to build out such an application",
    "start": "787040",
    "end": "792079"
  },
  {
    "text": "the documentation is fairly extensive let me see",
    "start": "792079",
    "end": "797519"
  },
  {
    "text": "you have to build your layout for example it might look like this um",
    "start": "797519",
    "end": "804399"
  },
  {
    "text": "which is a nice little dsl creating a virtual box button you can find an action on it",
    "start": "804399",
    "end": "811200"
  },
  {
    "text": "and it you know pops out like this these are all basic examples of course um but it really leverages the power of",
    "start": "811200",
    "end": "817839"
  },
  {
    "text": "kotlin to reduce um the amount of code you have to write in order to build your javafx applications",
    "start": "817839",
    "end": "824959"
  },
  {
    "text": "one i wanted to mention even though i'm skirting dangerously close to android and i promised we",
    "start": "824959",
    "end": "830480"
  },
  {
    "text": "wouldn't do this here's this thing from jetbrains called uh jetpack compose it originally as i",
    "start": "830480",
    "end": "837040"
  },
  {
    "start": "831000",
    "end": "950000"
  },
  {
    "text": "understand it started off as a android kind of application framework for",
    "start": "837040",
    "end": "842320"
  },
  {
    "text": "building android applications for android devices but it has since expanded",
    "start": "842320",
    "end": "848320"
  },
  {
    "text": "uh to uh the desktop which is now uh in alpha according to the website i",
    "start": "848320",
    "end": "854240"
  },
  {
    "text": "thought it was beyond that but the website still says alpha at least but it provides um",
    "start": "854240",
    "end": "860079"
  },
  {
    "text": "faster active desktop uis for for kotlin um so it's based on some stuff from",
    "start": "860079",
    "end": "865120"
  },
  {
    "text": "google and jetbrains and as i understand that they're working together to build this framework for building applications",
    "start": "865120",
    "end": "871519"
  },
  {
    "text": "and what makes this really stellar and what makes what might make it interesting to those of you who write uh",
    "start": "871519",
    "end": "877120"
  },
  {
    "text": "desktop applications is that you can use much of the same code base for the",
    "start": "877120",
    "end": "882800"
  },
  {
    "text": "desktop version of the application and the mobile application version of it so you can share a whole lot of the code in",
    "start": "882800",
    "end": "888880"
  },
  {
    "text": "between each module and then there's also a third component of this which is",
    "start": "888880",
    "end": "894800"
  },
  {
    "text": "not as far along i believe as the mobile device and the",
    "start": "894800",
    "end": "900639"
  },
  {
    "text": "desktop is there's also i believe work being done for web so you can actually",
    "start": "900639",
    "end": "906079"
  },
  {
    "text": "build the same application for desktop for android and for the web and even though obviously some of the ui",
    "start": "906079",
    "end": "912399"
  },
  {
    "text": "components won't necessarily carry over much of the logic and the wiring uh behind the scenes can be reused and then",
    "start": "912399",
    "end": "919360"
  },
  {
    "text": "you just kind of have to swap out perhaps certain ui elements to make something a little bit more um",
    "start": "919360",
    "end": "926000"
  },
  {
    "text": "natural uh for whichever platform you're building on but then you can share all the rest of the code in between the",
    "start": "926000",
    "end": "931199"
  },
  {
    "text": "projects in one uh when one code base so that's uh jetpack compose",
    "start": "931199",
    "end": "937199"
  },
  {
    "text": "and hopefully you can see the url up in the url window here",
    "start": "937199",
    "end": "942399"
  },
  {
    "text": "um and then one last thing before we stop and move on to",
    "start": "942399",
    "end": "948160"
  },
  {
    "text": "q a because i think i'm running over now is here's a list um this website's",
    "start": "948160",
    "end": "953440"
  },
  {
    "start": "950000",
    "end": "1087000"
  },
  {
    "text": "called awesome kotlin and it has a number of links and resources off to kind of",
    "start": "953440",
    "end": "960079"
  },
  {
    "text": "everything so just the base awesome tab you know has courses and books you",
    "start": "960079",
    "end": "967440"
  },
  {
    "text": "scroll down you see all these libraries and frameworks there's ktor of course here's http 4k",
    "start": "967440",
    "end": "974000"
  },
  {
    "text": "you know which has 1700 stars on github which is nothing to laugh at there's a lot of",
    "start": "974000",
    "end": "981519"
  },
  {
    "text": "work is being done with cotman in data science which makes makes me happy so if you're not a huge fan of",
    "start": "981519",
    "end": "989279"
  },
  {
    "text": "python for example you can actually use kotlin with jupiter notebooks with kotlin jupiter there's all work being",
    "start": "989279",
    "end": "995120"
  },
  {
    "text": "done there there are some specific testing frameworks you can use to make it a",
    "start": "995120",
    "end": "1000560"
  },
  {
    "text": "little bit more uh kotlin friendly inside your test",
    "start": "1000560",
    "end": "1005759"
  },
  {
    "text": "there's some database specific this jet branch exposed is a kind of a nice type safe dsl over sql queries in kotlin",
    "start": "1005759",
    "end": "1014880"
  },
  {
    "text": "which is very interesting [Music] some kind of custom dependency injection",
    "start": "1014880",
    "end": "1021600"
  },
  {
    "text": "this and that and the list just goes on and on um [Music]",
    "start": "1021600",
    "end": "1026798"
  },
  {
    "text": "if you click under resources you can get like what's the what the latest hotness",
    "start": "1026799",
    "end": "1031839"
  },
  {
    "text": "uh depending on kind of what you're looking for in resources",
    "start": "1031839",
    "end": "1037038"
  },
  {
    "text": "and courses i also wanted to point out this last tab especially so wherever you happen to be",
    "start": "1037039",
    "end": "1043520"
  },
  {
    "text": "in the world um there are an unknown scrolling quickly but you're not intended to read all this",
    "start": "1043520",
    "end": "1050080"
  },
  {
    "text": "but i just want to show you like you know all the user groups around hopefully there's one near you wherever",
    "start": "1050080",
    "end": "1055520"
  },
  {
    "text": "you happen to live um but in the time of covid like most of them are online anyways or a lot of them",
    "start": "1055520",
    "end": "1061840"
  },
  {
    "text": "are online they have the resources to do that um so please do find a meetup user group",
    "start": "1061840",
    "end": "1068640"
  },
  {
    "text": "somewhere nearby and just kind of hang out and and see what the vibe is and learn what you like you don't have to",
    "start": "1068640",
    "end": "1073679"
  },
  {
    "text": "actually write kotlin code you have to commit to it to join a group you can just kind of",
    "start": "1073679",
    "end": "1079520"
  },
  {
    "text": "join one and see see what's happening",
    "start": "1079520",
    "end": "1085039"
  },
  {
    "text": "so with that i want to leave a couple of resources",
    "start": "1085520",
    "end": "1091000"
  },
  {
    "start": "1087000",
    "end": "1153000"
  },
  {
    "text": "continualname.org is the primary website um all the official documentation is there uh tutorials it's",
    "start": "1091000",
    "end": "1099200"
  },
  {
    "text": "all the all you'd ever want there's also play.kotlinlang.org where you can actually run code in your browser so you",
    "start": "1099200",
    "end": "1105120"
  },
  {
    "text": "can experiment with kotlin code without having to install anything if you like to use slack there is a",
    "start": "1105120",
    "end": "1110400"
  },
  {
    "text": "slack workspace for kotlin that has over 30 000 people in various channels",
    "start": "1110400",
    "end": "1117520"
  },
  {
    "text": "it is a great resource there's dozens of different topics you can follow and",
    "start": "1117520",
    "end": "1123360"
  },
  {
    "text": "create your own a1 if you're more of the irc type like myself um there is kotlin on free node",
    "start": "1123360",
    "end": "1130640"
  },
  {
    "text": "where you will find me hanging out most days and of course awesome kotlin which i just showed you with all those links",
    "start": "1130640",
    "end": "1136640"
  },
  {
    "text": "um yeah so there's there's a ton of information there i hope this was a little bit",
    "start": "1136640",
    "end": "1141679"
  },
  {
    "text": "helpful to get your appetite kind of wetted for what kotlin might mean for you on",
    "start": "1141679",
    "end": "1146960"
  },
  {
    "text": "the back end and of course if you have any questions we can discuss them in the q a",
    "start": "1146960",
    "end": "1152160"
  },
  {
    "text": "and again my name is justin lee and you can find me on twitter at evan truly that's",
    "start": "1152160",
    "end": "1159280"
  },
  {
    "start": "1153000",
    "end": "1175000"
  },
  {
    "text": "also my github handle you can find me either place there save your questions",
    "start": "1159280",
    "end": "1164640"
  },
  {
    "text": "please feel free to reach out and ask questions and i can at least try and point you in the in the right direction and be squared away",
    "start": "1164640",
    "end": "1170720"
  },
  {
    "text": "thank you so much",
    "start": "1170720",
    "end": "1173440"
  },
  {
    "text": "hi justine so happy to have you like hello there very very happy",
    "start": "1175919",
    "end": "1181760"
  },
  {
    "text": "um thank you for being here i actually like your talks as i told you you are one of",
    "start": "1181760",
    "end": "1187600"
  },
  {
    "text": "my favorite speakers so and this is the topic that you find",
    "start": "1187600",
    "end": "1192799"
  },
  {
    "text": "and you actually do like and i like what the speakers talked about what they really really like",
    "start": "1192799",
    "end": "1199360"
  },
  {
    "text": "and thank you very much for that it was really interesting and with a lot of",
    "start": "1199360",
    "end": "1204400"
  },
  {
    "text": "resources so you weren't yeah they were fast at answering the question so i don't have a",
    "start": "1204400",
    "end": "1210320"
  },
  {
    "text": "lot but i do i do have i tried to be i think i missed some yeah yeah for example well i do have one",
    "start": "1210320",
    "end": "1217760"
  },
  {
    "text": "for you is the kotlin 1.5 was just released",
    "start": "1217760",
    "end": "1222799"
  },
  {
    "text": "uh may 5. what what can you tell us about this new release what is exciting for you oh",
    "start": "1222799",
    "end": "1230640"
  },
  {
    "text": "um well one of the things honestly that i've been looking forward to is they actually like rewrote the entire",
    "start": "1230640",
    "end": "1235919"
  },
  {
    "text": "compiler and that doesn't really necessarily affect um developers as such um but i've been i've",
    "start": "1235919",
    "end": "1242799"
  },
  {
    "text": "been kind of eyeballing it because one of the things that i do on quarkus which is one of the reasons i brought up in the talk was um",
    "start": "1242799",
    "end": "1248960"
  },
  {
    "text": "i'm the guy adding support for cotton these sorts of things inside quarkus and we do a lot of bytecode",
    "start": "1248960",
    "end": "1254880"
  },
  {
    "text": "manipulations so i was a little worried that they would change how that bytecode gets generated and it would just completely mangle everything i worked on",
    "start": "1254880",
    "end": "1261039"
  },
  {
    "text": "but kind of so far so good i'm in the process of actually now trying to port it over and test your feeling weirdly so",
    "start": "1261039",
    "end": "1267679"
  },
  {
    "text": "who knows um but i haven't actually gone over the list of things to look at because",
    "start": "1267679",
    "end": "1273039"
  },
  {
    "text": "i don't get to write kotlin that much my day job just yet um but i do try to do it in my side",
    "start": "1273039",
    "end": "1279200"
  },
  {
    "text": "projects and i have some open source stuff that i'm going to migrate to that um actually about that what about morphe",
    "start": "1279200",
    "end": "1285679"
  },
  {
    "text": "and kotlin tell me morphe incumbent okay for those of you don't know and that's probably most of",
    "start": "1285679",
    "end": "1291360"
  },
  {
    "text": "you um i used to work for mongodb and there's this layer called morphia and i like to describe it as hibernate but for",
    "start": "1291360",
    "end": "1297360"
  },
  {
    "text": " so you annotate all your java objects and morpheus shuttles it back and forth just like hibernate would do",
    "start": "1297360",
    "end": "1302640"
  },
  {
    "text": "um there is support in morphe for kotlin actually in this upcoming release that hopefully will be out in the next week",
    "start": "1302640",
    "end": "1308240"
  },
  {
    "text": "or two um there's a specific module for like supporting data classes uh inside",
    "start": "1308240",
    "end": "1313600"
  },
  {
    "text": "um morphea because those are those are slightly different from a reflection standpoint",
    "start": "1313600",
    "end": "1319280"
  },
  {
    "text": "but i'm adding more and more support at some point i'm going to port all of morphe probably to kotlin because",
    "start": "1319280",
    "end": "1324480"
  },
  {
    "text": "i like writing in it um but i'm just i'm trying not to leave anyone behind and of course",
    "start": "1324480",
    "end": "1330240"
  },
  {
    "text": "i have to make sure that colin is really great it's designed to interrupt with java but if you're not careful you can",
    "start": "1330240",
    "end": "1336880"
  },
  {
    "text": "expose the fact that it's a kotlin library to your java developers because of a certain way that kotlin does some",
    "start": "1336880",
    "end": "1342159"
  },
  {
    "text": "magic um especially around like generics um that can sometimes leak out if you're",
    "start": "1342159",
    "end": "1347520"
  },
  {
    "text": "not careful scala is really really bad about that so one of the questions was why scala over kotlin",
    "start": "1347520",
    "end": "1353840"
  },
  {
    "text": "why kotlin over scholar scala is a fine language and i've tried",
    "start": "1353840",
    "end": "1358880"
  },
  {
    "text": "to use it and i've tried to like it but it's never been like a professional thing for me but if you've ever tried to use a scala library from java it's very",
    "start": "1358880",
    "end": "1366640"
  },
  {
    "text": "obvious that the library was not written in java and it's really hard to use whereas kotlin",
    "start": "1366640",
    "end": "1372559"
  },
  {
    "text": "that's not the case you can write it in in from java you'd see something like what is that um",
    "start": "1372559",
    "end": "1378880"
  },
  {
    "text": "but it's usually generally good about creating java friendly",
    "start": "1378880",
    "end": "1384000"
  },
  {
    "text": "apis even with uh one of the things that cotton has it i really like that i hope",
    "start": "1384000",
    "end": "1389039"
  },
  {
    "text": "java gets some day but probably won't is named parameters and default parameters so you can define when you define a",
    "start": "1389039",
    "end": "1395280"
  },
  {
    "text": "function you can find default values for a for a parameter and if you don't pass that argument for that when you call it",
    "start": "1395280",
    "end": "1400720"
  },
  {
    "text": "the compiler will inject it for you so you could default all your parameters away in your declaration and so when you",
    "start": "1400720",
    "end": "1406480"
  },
  {
    "text": "call it you can just call it with no parameters because the compiler will insert things for you when it builds",
    "start": "1406480",
    "end": "1412240"
  },
  {
    "text": "but there's an from java that gets weird because there's just the one method that takes all the parameters and so you",
    "start": "1412240",
    "end": "1418400"
  },
  {
    "text": "kind of lose some of that defaulted parameters um but there's an annotation you can use that kotlin will actually",
    "start": "1418400",
    "end": "1423760"
  },
  {
    "text": "generate multiple overloads so it'll start from the very right-hand side and start peeling off",
    "start": "1423760",
    "end": "1430400"
  },
  {
    "text": "the defaulted parameters so that if there are four four parameters with defaults you get",
    "start": "1430400",
    "end": "1436320"
  },
  {
    "text": "five methods four or five so one that takes all the parameters and then one that takes three and two then one and nothing so you get",
    "start": "1436320",
    "end": "1442880"
  },
  {
    "text": "that same feeling from java okay actually mark is telling us some",
    "start": "1442880",
    "end": "1448320"
  },
  {
    "start": "1446000",
    "end": "1470000"
  },
  {
    "text": "bytecode changing it they had to do some adjustment for jacob to support cutlery 1.5 so",
    "start": "1448320",
    "end": "1454640"
  },
  {
    "text": "there is something that changed he already heads yeah i have some tests that are failing",
    "start": "1454640",
    "end": "1460559"
  },
  {
    "text": "because the method that i should have overwritten as part of my bytecode stuff wasn't for whatever reason so i'm gonna",
    "start": "1460559",
    "end": "1465679"
  },
  {
    "text": "have to dig into that and just see what's going on okay we have another question from people",
    "start": "1465679",
    "end": "1472000"
  },
  {
    "start": "1470000",
    "end": "1594000"
  },
  {
    "text": "moving from java to kotlin any advice on how to avoid bad practices from the java",
    "start": "1472000",
    "end": "1477360"
  },
  {
    "text": "world example handling nulls",
    "start": "1477360",
    "end": "1481760"
  },
  {
    "text": "um how to avoid them well generally speaking okay so",
    "start": "1482799",
    "end": "1490559"
  },
  {
    "text": "i mentioned this project that i switched over in 2015 and it is it's a large-ish project it's an irc bot",
    "start": "1490559",
    "end": "1498080"
  },
  {
    "text": "so no money was writing on this particular conversion but one of the things i noticed like intellij idea has",
    "start": "1498080",
    "end": "1504240"
  },
  {
    "text": "an option you can go in and say convert this java class to kotlin and it'll just blast it out for you",
    "start": "1504240",
    "end": "1510720"
  },
  {
    "text": "automatically and it gets you like 98 of the way there but what i found was there's a whole lot of places in there",
    "start": "1510720",
    "end": "1516080"
  },
  {
    "text": "where i was exposed to a null pointer exception because i wasn't checking for it and so",
    "start": "1516080",
    "end": "1522159"
  },
  {
    "text": "i had to go back and fix all those um but i honestly i would start uh",
    "start": "1522159",
    "end": "1528880"
  },
  {
    "text": "i would start with no you put a question mark on a type that can be null or on a on a field",
    "start": "1528880",
    "end": "1535760"
  },
  {
    "text": "question mark on the type for a field that can be null um i would start without those honestly",
    "start": "1535760",
    "end": "1543520"
  },
  {
    "text": "so and that way you can you're essentially telling the compiler nothing in my application can be no",
    "start": "1543520",
    "end": "1549120"
  },
  {
    "text": "and your code will break it won't compile or whatever but you'll start to see those",
    "start": "1549120",
    "end": "1554240"
  },
  {
    "text": "places where a null may or may not creep in uh and but then you can evaluate those",
    "start": "1554240",
    "end": "1559760"
  },
  {
    "text": "situations you're like no actually i never i never want a null there so let's leave the question mark off but",
    "start": "1559760",
    "end": "1565360"
  },
  {
    "text": "then some places is perfectly valid so you can put a question mark in you can start to kind of back fill in some of",
    "start": "1565360",
    "end": "1570400"
  },
  {
    "text": "the nullability and that's probably simpler than just marking everything as nullable because then everywhere you use any of",
    "start": "1570400",
    "end": "1577120"
  },
  {
    "text": "those fields you'll have to there's certain things you have to do to there's a number of different ways you can check for null and it's more work to",
    "start": "1577120",
    "end": "1584320"
  },
  {
    "text": "go and add those everywhere than it is to just figure out where do we really want to allow nulls and then fix those",
    "start": "1584320",
    "end": "1589840"
  },
  {
    "text": "places because generally we don't want nulls right yes yes yes yes yes",
    "start": "1589840",
    "end": "1596880"
  },
  {
    "start": "1594000",
    "end": "1754000"
  },
  {
    "text": "another question that we have here well the bad practices we will ready to touch",
    "start": "1596880",
    "end": "1603279"
  },
  {
    "text": "um there's why kotlin and the leaves that you show will not be the new groovy plus",
    "start": "1603279",
    "end": "1609679"
  },
  {
    "text": "grails what's the big difference for you i don't see probably the person that asked this",
    "start": "1609679",
    "end": "1615440"
  },
  {
    "text": "question can expand it because i think i missed something in the question but i mean",
    "start": "1615440",
    "end": "1622480"
  },
  {
    "text": "okay but yeah i'm trying to find that question okay here it is",
    "start": "1622480",
    "end": "1629600"
  },
  {
    "text": "or why they will not be then like what's what's to stop kotlin from beginning grouping",
    "start": "1630720",
    "end": "1637759"
  },
  {
    "text": "something i mean is basically whales but with groovy",
    "start": "1637840",
    "end": "1643679"
  },
  {
    "text": "um so i think there's a couple differences groovy",
    "start": "1643679",
    "end": "1650080"
  },
  {
    "text": "um groovy never really had much backing corporately speaking i have a lot of",
    "start": "1650080",
    "end": "1655440"
  },
  {
    "text": "friends including her husband that are very into groovy so i have to be delicate in how i talk about it um",
    "start": "1655440",
    "end": "1661840"
  },
  {
    "text": "because i have stuck my foot in my mouth a few times um it never had much corporate backing and",
    "start": "1661840",
    "end": "1667840"
  },
  {
    "text": "never had a whole lot of developer buy-in um the people who did use it um were",
    "start": "1667840",
    "end": "1674480"
  },
  {
    "text": "very passionate about it and they loved it um but i think one of the things that turned me off about groovy",
    "start": "1674480",
    "end": "1679600"
  },
  {
    "text": "personally was it was a dynamically typed language which i've just never i've never liked",
    "start": "1679600",
    "end": "1684880"
  },
  {
    "text": "i've been doing java since 1996. since there was a java basically",
    "start": "1684880",
    "end": "1690080"
  },
  {
    "text": "and so being able to reason about types and validate things was like very important to me and gruey broke that",
    "start": "1690080",
    "end": "1696960"
  },
  {
    "text": "contract even though the other language had some nice features it was just it was harder to reason about um and kotlin",
    "start": "1696960",
    "end": "1703360"
  },
  {
    "text": "is not that it does a lot of type inference which i think is amazing um but also the types are fixed and they're",
    "start": "1703360",
    "end": "1710480"
  },
  {
    "text": "known um and so that's a big difference with between uh colleen and ruby and also",
    "start": "1710480",
    "end": "1717120"
  },
  {
    "text": "like google is all in on kotlin it's the preferred recommended language for",
    "start": "1717120",
    "end": "1722399"
  },
  {
    "text": "android for example um so i think it's going to be around",
    "start": "1722399",
    "end": "1727440"
  },
  {
    "text": "for a while um for that if no other reason but colin has a lot more i think corporate backing",
    "start": "1727440",
    "end": "1733919"
  },
  {
    "text": "than groovy did that's true intellij yes it was uh it is",
    "start": "1733919",
    "end": "1739760"
  },
  {
    "text": "investing a lot so there is another just curious if there is anything with a more idiomatic",
    "start": "1739760",
    "end": "1747520"
  },
  {
    "text": "kotlin api idiomatic for what",
    "start": "1747520",
    "end": "1753039"
  },
  {
    "text": "you know what context that was the entire question so maybe the other one that i have for you is",
    "start": "1753039",
    "end": "1761120"
  },
  {
    "start": "1754000",
    "end": "1961000"
  },
  {
    "text": "what's the use case for kotlin what are the pros and cons like probably",
    "start": "1761120",
    "end": "1767520"
  },
  {
    "text": "the person was asking like where does scotland shine where does it shine",
    "start": "1767520",
    "end": "1773840"
  },
  {
    "text": "for me one of the bigger things is um i think the content the syntax is a lot sleeker",
    "start": "1773840",
    "end": "1780080"
  },
  {
    "text": "java has come on quite a ways and i think the value add for kotlin is somewhat",
    "start": "1780080",
    "end": "1785360"
  },
  {
    "text": "less now than it used to be um certainly like in the java six days when kotlin was really starting to rise to",
    "start": "1785360",
    "end": "1790960"
  },
  {
    "text": "prominence you could do all these amazing kind of modern lambdas and type inferences and all this sort of thing on",
    "start": "1790960",
    "end": "1796720"
  },
  {
    "text": "the javascript jvm which was still what 40 years before java actually adopted",
    "start": "1796720",
    "end": "1801760"
  },
  {
    "text": "some of those features right and so then especially and that's i think why it took off on android it really gave",
    "start": "1801760",
    "end": "1807679"
  },
  {
    "text": "you kind of a modern language on an older jvm um that's changed a little bit i still think the syntax is sleeker i",
    "start": "1807679",
    "end": "1814880"
  },
  {
    "text": "think when you start doing like when you talk about java streams versus kotlin i don't think we even call",
    "start": "1814880",
    "end": "1820480"
  },
  {
    "text": "them streams but um you know kind of all the that sort of concepts i think the syntax is nicer in",
    "start": "1820480",
    "end": "1827039"
  },
  {
    "text": "kotlin for that there are certainly more um more functions available to you to kind",
    "start": "1827039",
    "end": "1833039"
  },
  {
    "text": "of process your your data stream um so there is that i think",
    "start": "1833039",
    "end": "1838799"
  },
  {
    "text": "we did not talk about it and i i kind of wanted to get a slide in on him but it was difficult um kotlin has co-routines",
    "start": "1838799",
    "end": "1846320"
  },
  {
    "text": "which is an implementation of what's called structured concurrency um which i only know because i've been",
    "start": "1846320",
    "end": "1852720"
  },
  {
    "text": "reading about kotlin co-routines um it doesn't mean a whole lot to me otherwise but for the cs nerds out there",
    "start": "1852720",
    "end": "1858880"
  },
  {
    "text": "um but it basically lets you write concurrent code like it's imperative you know like c",
    "start": "1858880",
    "end": "1864720"
  },
  {
    "text": "sharp has its uh async awaits there's like all these reactive apis where you subscribe to this and on call back this",
    "start": "1864720",
    "end": "1871760"
  },
  {
    "text": "and public you know you can get current concurrent code with",
    "start": "1871760",
    "end": "1877200"
  },
  {
    "text": "reactive messaging or asynchronous code with reactive whatever but it's a massive buy-in to a really awkward",
    "start": "1877200",
    "end": "1882720"
  },
  {
    "text": "terrible api but with cotton cartons for example you just you have to launch it in a certain way",
    "start": "1882720",
    "end": "1889279"
  },
  {
    "text": "because it needs a certain context but then you just write your code you know foo this bar that blah blah blah and the",
    "start": "1889279",
    "end": "1896080"
  },
  {
    "text": "continent compiler will actually build in all the stuff necessary to say fire off this request often a thread",
    "start": "1896080",
    "end": "1902880"
  },
  {
    "text": "somewhere you take care of that i'm going to go work on this and i will come back",
    "start": "1902880",
    "end": "1908000"
  },
  {
    "text": "ready so your code just looks like normal imperative code but it's actually like highly scalable like millions and",
    "start": "1908000",
    "end": "1914320"
  },
  {
    "text": "millions of co-routines running on a single machine as opposed to like java threads once you",
    "start": "1914320",
    "end": "1920080"
  },
  {
    "text": "get past ten thousand probably certainly a hundred thousand threads and you will",
    "start": "1920080",
    "end": "1925679"
  },
  {
    "text": "turn your laptop into slag yeah so co-reteats are great um i'll be interested project loom is",
    "start": "1925679",
    "end": "1932399"
  },
  {
    "text": "coming up and so that will be an interesting competitor to co-routines um",
    "start": "1932399",
    "end": "1937679"
  },
  {
    "text": "but yeah you know it's not going to be in java 17 it might be an 18 i don't",
    "start": "1937679",
    "end": "1942720"
  },
  {
    "text": "know when it's gonna land but it'll be years before that becomes a common thing in the java world unless it's so",
    "start": "1942720",
    "end": "1949039"
  },
  {
    "text": "compelling that everyone immediately says we should upgrade to java 19 today which would be amazing i'd love it",
    "start": "1949039",
    "end": "1954799"
  },
  {
    "text": "but java uptake typically has lagged quite a bit",
    "start": "1954799",
    "end": "1960398"
  },
  {
    "text": "actually there are two questions very linked like after java 17 is there",
    "start": "1960960",
    "end": "1966159"
  },
  {
    "start": "1961000",
    "end": "2067000"
  },
  {
    "text": "anything like let me quote that you answer a little bit after java 17 lts is",
    "start": "1966159",
    "end": "1971679"
  },
  {
    "text": "out what the features are still lacking that you like in kotlin and the second that is very close to it new features in",
    "start": "1971679",
    "end": "1979600"
  },
  {
    "text": "java like for instance project loom and virtual threads called this",
    "start": "1979600",
    "end": "1984640"
  },
  {
    "text": "close the gap in functionality between languages and heat cutling so they are thinking like",
    "start": "1984640",
    "end": "1990480"
  },
  {
    "text": "java is picking up so yeah",
    "start": "1990480",
    "end": "1995840"
  },
  {
    "text": "uh yeah i think once loom lands it gets really interesting um virtual threads will be",
    "start": "1995840",
    "end": "2003200"
  },
  {
    "text": "interesting i'm old enough to remember green threads back in the early jvm base i don't know if anyone remembers those",
    "start": "2003200",
    "end": "2009679"
  },
  {
    "text": "um but it feels like we're kind of veering back into that era again although it's i think it's slightly different than the original green",
    "start": "2009679",
    "end": "2015679"
  },
  {
    "text": "threads uh certainly that gap is closing i think um",
    "start": "2015679",
    "end": "2022559"
  },
  {
    "text": "the nice thing about still with kotlin is they've been able to push the boundaries for what you can do",
    "start": "2022559",
    "end": "2028240"
  },
  {
    "text": "on the jvm without requiring jvm updates",
    "start": "2028240",
    "end": "2033679"
  },
  {
    "text": "and some of the stuff that's coming in java necessitates updates to the vm itself which is fine",
    "start": "2033679",
    "end": "2041200"
  },
  {
    "text": "which is you know great it just it's a slower process so i think kotlin will probably still outpace java in that",
    "start": "2041200",
    "end": "2047039"
  },
  {
    "text": "respect but i think at some point as much as i love kotlin um",
    "start": "2047039",
    "end": "2052398"
  },
  {
    "text": "and i absolutely love java as well i think the value proposition for rewrite your entire application in kotlin",
    "start": "2052399",
    "end": "2058878"
  },
  {
    "text": "becomes less at some point because the gap will be smaller for",
    "start": "2058879",
    "end": "2065200"
  },
  {
    "text": "things that most people care about yes actually they were asking you about",
    "start": "2065200",
    "end": "2070638"
  },
  {
    "start": "2067000",
    "end": "2270000"
  },
  {
    "text": "advices for developers either in java on c plus",
    "start": "2070639",
    "end": "2076079"
  },
  {
    "text": "c sharp c sure sorry moving to kotlin so do you have any advice my advice um",
    "start": "2076079",
    "end": "2084079"
  },
  {
    "text": "it's some of it's just kind of stock advice but we'll see if something interesting comes out of it um one of the things",
    "start": "2084079",
    "end": "2089599"
  },
  {
    "text": "that i've always learned or heard for years now whenever because the jvm is so great because there's there's",
    "start": "2089599",
    "end": "2095440"
  },
  {
    "text": "literally hundreds of languages that run on the jvm and everyone's always like if you want to learn a new language write your test",
    "start": "2095440",
    "end": "2102240"
  },
  {
    "text": "in it first you know you're not necessarily betting the company on a test",
    "start": "2102240",
    "end": "2107920"
  },
  {
    "text": "you kind of are but it's a little bit more indirect right if your test doesn't work then suddenly you just",
    "start": "2107920",
    "end": "2113040"
  },
  {
    "text": "i don't know across the company but um you can start with writing small",
    "start": "2113040",
    "end": "2118720"
  },
  {
    "text": "tests for example um and just kind of get feel for the language and you know it's a it can be pretty",
    "start": "2118720",
    "end": "2124960"
  },
  {
    "text": "bite-sized i mentioned the comments setting up multi-language projects",
    "start": "2124960",
    "end": "2130560"
  },
  {
    "text": "uh is not difficult and if you go to the kotlin website there's instructions um for both maven and gradle depending",
    "start": "2130560",
    "end": "2137119"
  },
  {
    "text": "on what your preference is the column world seems to favor gradle but i think that's driven more by android than",
    "start": "2137119",
    "end": "2142320"
  },
  {
    "text": "anything else because android builds on gradle um and not maven i was unfortunately kind of amazing",
    "start": "2142320",
    "end": "2150480"
  },
  {
    "text": "but i would start there and just start writing some tests you could also if you really wanted to what i've actually done",
    "start": "2150560",
    "end": "2156720"
  },
  {
    "text": "because building corcus is uh can be complicated",
    "start": "2156720",
    "end": "2162880"
  },
  {
    "text": "there's almost nine hundred modules inside quarkus that have been involved so i think that i have a dynamic uh to",
    "start": "2162880",
    "end": "2169280"
  },
  {
    "text": "help aid in my development and i originally had bash scripts uh which was fine because i'm a linux",
    "start": "2169280",
    "end": "2175520"
  },
  {
    "text": "nerd for decades now but i actually went back and rewrote all those bash scripts using kotlin and corkus cli which you",
    "start": "2175520",
    "end": "2182640"
  },
  {
    "text": "know sounds like a sales pitch but it's what i work on so i'm going to try this out but i rewrote i wrote all these",
    "start": "2182640",
    "end": "2188560"
  },
  {
    "text": "dev scripts in kotlin um so they're all running on the jvm and they run so fast it's like running",
    "start": "2188560",
    "end": "2194560"
  },
  {
    "text": "running a bash script i never know i never noticed the difference um but you can write fairly complex",
    "start": "2194560",
    "end": "2200880"
  },
  {
    "text": "scripts that way in kotlin and then run them and then you really are kind of outside",
    "start": "2200880",
    "end": "2206560"
  },
  {
    "text": "risking the actual product you know whatever your whatever your development scripts might happen to be",
    "start": "2206560",
    "end": "2211839"
  },
  {
    "text": "rewrite them in kotlin and see how it feels you know some things are going to be more awkward because interacting with the os from the jvm",
    "start": "2211839",
    "end": "2218800"
  },
  {
    "text": "you know exacting things out is not so great but you can play with the language at least",
    "start": "2218800",
    "end": "2226160"
  },
  {
    "text": "in a way that doesn't threaten anything yeah it's true you're about to do something except yes we need to rob this",
    "start": "2226160",
    "end": "2232240"
  },
  {
    "text": "but we still have the hangout so we can meet there and we can still ask you questions over there so",
    "start": "2232240",
    "end": "2239280"
  },
  {
    "text": "let's move along yes i'll have to find that link but it's around here somewhere yes it's around here uh actually they",
    "start": "2239280",
    "end": "2245599"
  },
  {
    "text": "post it in the in the in the chat so here's the uh",
    "start": "2245599",
    "end": "2251119"
  },
  {
    "text": "there's the hangout okay i'll click that link and see how that goes okay perfect perfect perfect perfect then i will see",
    "start": "2251119",
    "end": "2257839"
  },
  {
    "text": "you there [Music]",
    "start": "2257839",
    "end": "2267940"
  },
  {
    "text": "you",
    "start": "2270160",
    "end": "2272240"
  }
]