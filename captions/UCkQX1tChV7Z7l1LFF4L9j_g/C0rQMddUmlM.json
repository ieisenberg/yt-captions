[
  {
    "text": "[Music]",
    "start": "760",
    "end": "6950"
  },
  {
    "text": "[Music]",
    "start": "9090",
    "end": "21439"
  },
  {
    "text": "so I'm Nick Nick Seager uh this is me um I work at engine yard I'm uh one",
    "start": "21439",
    "end": "28920"
  },
  {
    "text": "one of the members of the J rby team and I've been working at engineer for about two and a half years now we uh Charles",
    "start": "28920",
    "end": "36160"
  },
  {
    "text": "Tom and I we both came from Sun right before uh they got acquired by Oracle",
    "start": "36160",
    "end": "42200"
  },
  {
    "text": "and um we got hired on by engineer to work specifically on J Ruby make J Ruby",
    "start": "42200",
    "end": "47360"
  },
  {
    "text": "better as a ruby implementation and also to improve J Ruby and make it uh suitable for deploying to engineered",
    "start": "47360",
    "end": "53399"
  },
  {
    "text": "Cloud so what actually I have been doing uh most recently is working on Ruby in the",
    "start": "53399",
    "end": "60480"
  },
  {
    "text": "context of engine yards products and making sure that we have a j Ruby solution there uh so how many of you you",
    "start": "60480",
    "end": "65880"
  },
  {
    "text": "folks are actually using J Ruby today or considering using it looks like most yeah most of you okay",
    "start": "65880",
    "end": "72280"
  },
  {
    "text": "great um when I uh was asked to come out here to give this uh give this presentation I was it's been a little",
    "start": "72280",
    "end": "79360"
  },
  {
    "text": "bit while I was I was in San Francisco last October for Java 1 uh we had bit of a presence there of course we had our",
    "start": "79360",
    "end": "85040"
  },
  {
    "text": "typical Java 1 presentations and uh I've kind of been uh I won't say stuck I've",
    "start": "85040",
    "end": "91240"
  },
  {
    "text": "been kind of relaxing at home for the past few months since since then I haven't had any trips haven't had any conferences to go through it's been",
    "start": "91240",
    "end": "97040"
  },
  {
    "text": "pretty nice so when I was actually to come back out here I was like well what should I talk about and um because I felt like well I was just back out here",
    "start": "97040",
    "end": "103079"
  },
  {
    "text": "a while ago um and I just thought well I'll come out and just kind of give an update you know and tell you where",
    "start": "103079",
    "end": "109159"
  },
  {
    "text": "things are in J Ruby land um you know if some of you are new to J Ruby some of these things may or may not",
    "start": "109159",
    "end": "115920"
  },
  {
    "text": "um you might might not have heard of them they might they might you might be missing a little bit of context and I'll",
    "start": "115920",
    "end": "121560"
  },
  {
    "text": "just say feel free to stop me and you know if I I can fill in as many details as you want I'm going to kind of assume",
    "start": "121560",
    "end": "126600"
  },
  {
    "text": "that a lot of you lot of you have at least a little bit of knowledge of what's going on in the community and and um if you don't I'm happy to fill it in",
    "start": "126600",
    "end": "133239"
  },
  {
    "text": "either during the presentation or afterwards um so at engine nard actually",
    "start": "133239",
    "end": "138760"
  },
  {
    "text": "what I've been doing is like I said working on the cloud product one of the first things one of the things I've been working on most recently is a way of",
    "start": "138760",
    "end": "145319"
  },
  {
    "text": "using visual VM uh to connect to your J R processes",
    "start": "145319",
    "end": "150800"
  },
  {
    "text": "that are running in the cloud uh anybody familiar with J visual VM few of you yeah so visual VM is this",
    "start": "150800",
    "end": "158239"
  },
  {
    "text": "really neat tool that comes with every Java de development kit that gives you a nice uh really nice kind of",
    "start": "158239",
    "end": "164440"
  },
  {
    "text": "introspection into what's going on into the jvm and so I can start up a Java program on my locom machine and start up",
    "start": "164440",
    "end": "171080"
  },
  {
    "text": "visual VM alongside of it and visual VM will actually give me a listing of all the all the Java processes that are",
    "start": "171080",
    "end": "176280"
  },
  {
    "text": "running locally uh the problem comes is when you have a Java process running somewhere else uh and how do you connect",
    "start": "176280",
    "end": "182800"
  },
  {
    "text": "to that and there actually not there aren't any real straightforward tools for say connecting a visual VM program",
    "start": "182800",
    "end": "188760"
  },
  {
    "text": "on your computer with something off in the cloud so I went out went went off and worked on this for a while and I was",
    "start": "188760",
    "end": "195000"
  },
  {
    "text": "going to give you a little bit of a demo of it uh here but I won't be able to do quite a full-fledged one because I actually don't have internet access so",
    "start": "195000",
    "end": "201200"
  },
  {
    "text": "I'm going to kind of do a little simulation of it of an app and just kind of talk through what what is going on as",
    "start": "201200",
    "end": "206720"
  },
  {
    "text": "as I do it just to kind of give you an idea",
    "start": "206720",
    "end": "211280"
  },
  {
    "text": "so so the idea with this is that like I said you have a a an web application",
    "start": "212120",
    "end": "218959"
  },
  {
    "text": "running in the cloud and you want to just connect visual VM to it uh in a in a simple straightforward",
    "start": "218959",
    "end": "225439"
  },
  {
    "text": "way uh so I have this command line",
    "start": "225439",
    "end": "229879"
  },
  {
    "text": "tool and right now it's just a command line to let do it over",
    "start": "231120",
    "end": "237760"
  },
  {
    "text": "here right now it's just a command line tool we could look at making it uh you know more full-fledge maybe a plugin to",
    "start": "238560",
    "end": "244680"
  },
  {
    "text": "the V visual VM program itself later but for now it's just a command line tool um so you can run it at your command line",
    "start": "244680",
    "end": "250640"
  },
  {
    "text": "and it gives you a couple different options uh let's make this little",
    "start": "250640",
    "end": "256560"
  },
  {
    "text": "bigger so the main one is you just say ey visual VM",
    "start": "256560",
    "end": "261639"
  },
  {
    "text": "start and that's all you need to do and so uh in the case of an engineered application",
    "start": "261639",
    "end": "269400"
  },
  {
    "text": "I have a couple of extra convenience features built into the program specifically for engineer app since that's of course my employer and I want",
    "start": "273720",
    "end": "279600"
  },
  {
    "text": "to make things work well for our Cloud so when you start when you want to connect to an engineer application you",
    "start": "279600",
    "end": "285880"
  },
  {
    "text": "can actually specify the environment or account in your engineered Cloud um where your",
    "start": "285880",
    "end": "292800"
  },
  {
    "text": "engineered Cloud application is running and it will just go directly out to those you don't have to worry about what host it's what ec2 host that's running",
    "start": "292800",
    "end": "299240"
  },
  {
    "text": "on any of those things uh you can so in order to make this useful for all of you",
    "start": "299240",
    "end": "304880"
  },
  {
    "text": "even if you're working outside of engine yard Cloud you can also use it just in a way where you say well here's a host",
    "start": "304880",
    "end": "310759"
  },
  {
    "text": "that I want to connect to um and I'll specify a port if you want although you don't have to necessarily and you can",
    "start": "310759",
    "end": "316919"
  },
  {
    "text": "actually have ey visual VM just open up an SSH tunnel to your host uh and then",
    "start": "316919",
    "end": "323319"
  },
  {
    "text": "wire things up that way so what happens is you have a",
    "start": "323319",
    "end": "328240"
  },
  {
    "text": "uh you have a server process that needs to be started to listen on a certain Port that visual VM can talk to and the",
    "start": "328639",
    "end": "334680"
  },
  {
    "text": "way we do that is we actually uh you have to say you have to",
    "start": "334680",
    "end": "340440"
  },
  {
    "text": "run your server process with some specific uh arguments and the visual VM",
    "start": "340440",
    "end": "346919"
  },
  {
    "text": "tool will also tell you those so if you just run it like this uh with the jvm",
    "start": "346919",
    "end": "352000"
  },
  {
    "text": "args it will print out uh the the Java command line options that you need to to",
    "start": "352000",
    "end": "358120"
  },
  {
    "text": "use on your server program or your application",
    "start": "358120",
    "end": "362560"
  },
  {
    "text": "program and my system is kind of cold I'm not sure why it's taking so long here there we go all right",
    "start": "364120",
    "end": "371360"
  },
  {
    "text": "so",
    "start": "371360",
    "end": "374360"
  },
  {
    "text": "just so uh let me just run this one more",
    "start": "377360",
    "end": "383680"
  },
  {
    "text": "time this is somewhat unrehearsed I I prepared all this material just for this for for tonight so apologies if it's you",
    "start": "383680",
    "end": "390000"
  },
  {
    "text": "know there couple of um loose rough edges here",
    "start": "390000",
    "end": "395919"
  },
  {
    "text": "but trying to do this on the fly so we get these jvm arguments and",
    "start": "395919",
    "end": "402960"
  },
  {
    "text": "what we can do is simply um put those in an environment variable",
    "start": "402960",
    "end": "409520"
  },
  {
    "text": "environment variable called Java Ops which the J Ruby command line program recognizes and",
    "start": "409520",
    "end": "416319"
  },
  {
    "text": "it will pass those on to the jvm so we want to take those got to quote",
    "start": "416319",
    "end": "422759"
  },
  {
    "text": "them uh so like that and then uh what I have is um to simulate a a server application",
    "start": "422759",
    "end": "431039"
  },
  {
    "text": "I have this little program which is just runs in a loop just a little Ruby program runs in a loop and every so",
    "start": "431039",
    "end": "437680"
  },
  {
    "text": "often every 10 times to the loop I'm going to just generate an exception just to kind of simulate maybe a problem that",
    "start": "437680",
    "end": "444599"
  },
  {
    "text": "maybe happens periodically in an application that we're trying to troubleshoot for for example so I can start this program so I've got my Java",
    "start": "444599",
    "end": "452160"
  },
  {
    "text": "uh the options set for my server I can just start this program like",
    "start": "452160",
    "end": "460080"
  },
  {
    "text": "that and so that start that and doesn't do doesn't print anything out so I don't",
    "start": "464680",
    "end": "470080"
  },
  {
    "text": "know for sure that it started but it's it's running and so then if we go over here and just do uh ey visual VM start it knows to",
    "start": "470080",
    "end": "478280"
  },
  {
    "text": "look on uh default to looking for Local Host by by default and and it's has a specific Port that it starts at so I",
    "start": "478280",
    "end": "484120"
  },
  {
    "text": "don't need to specify those arguments and it should actually start uh a copy of java visual VM which is",
    "start": "484120",
    "end": "491319"
  },
  {
    "text": "coming up now so you see so this is visual VM if",
    "start": "491319",
    "end": "498960"
  },
  {
    "text": "you haven't seen it before uh one of the things again that I mentioned is when you're using visual VM on your on your",
    "start": "498960",
    "end": "505800"
  },
  {
    "text": "desktop machine or your your your notebook you have a a already have a",
    "start": "505800",
    "end": "511440"
  },
  {
    "text": "listing of all the Java processes that are running on your machine so in that case this this tool becomes Superfluous",
    "start": "511440",
    "end": "516680"
  },
  {
    "text": "really you don't really need it you can just connect to them directly by selecting them here um I I ran it this",
    "start": "516680",
    "end": "522279"
  },
  {
    "text": "way just to simulate well if this Pro if this program was running on a different server um the tool like I said",
    "start": "522279",
    "end": "530120"
  },
  {
    "text": "has that extra smarts to do an SSH tunnel and connect to the host and set the same thing up so this is what we're",
    "start": "530120",
    "end": "536320"
  },
  {
    "text": "simulating so now um some of the things you can see in visual VM if you haven't seen it before is you have these panels",
    "start": "536320",
    "end": "543959"
  },
  {
    "text": "that give you a real-time status of CPU usage uh memory usage the number of",
    "start": "543959",
    "end": "549240"
  },
  {
    "text": "classes loaded the number of threads loaded uh and there's a whole bunch of plugins you can uh install for this as",
    "start": "549240",
    "end": "555200"
  },
  {
    "text": "well one of the things that I've installed is this uh mban pane which lets you examine all the",
    "start": "555200",
    "end": "561720"
  },
  {
    "text": "jmx uh objects that are running inside your jvm and in particular J Ruby actually installs some of its own and",
    "start": "561720",
    "end": "569120"
  },
  {
    "text": "the this corresponds to the one J Ruby instance that's running in our VM and if",
    "start": "569120",
    "end": "574320"
  },
  {
    "text": "I go look at this runtime thing here you can see I have some some attributes here uh to specify the back trace or that",
    "start": "574320",
    "end": "581160"
  },
  {
    "text": "actually keep count of how many back traces have been generated uh we we've found over time that uh one of the",
    "start": "581160",
    "end": "588640"
  },
  {
    "text": "source of performance problems with lots of Ruby applications is that it's so easy to capture errors and ignore them",
    "start": "588640",
    "end": "594320"
  },
  {
    "text": "and and drop exceptions on the floor problem is when JB in particular and actually for most apps in general",
    "start": "594320",
    "end": "600320"
  },
  {
    "text": "generating exceptions in the back traces that go along with exceptions is rather expensive so we actually built this",
    "start": "600320",
    "end": "605760"
  },
  {
    "text": "statistic into the VM so you can go look at a ruby runtime and say oh well this thing seems to be generating uh quite a",
    "start": "605760",
    "end": "611000"
  },
  {
    "text": "few back traces maybe we should go uh go try to look into that and there are some other tools that can help you uh dig in",
    "start": "611000",
    "end": "616720"
  },
  {
    "text": "and actually get specific back traces and see well what what code is this that that is actually generating these but",
    "start": "616720",
    "end": "622000"
  },
  {
    "text": "this is at least a way to kind of get a quick look and say yeah maybe there's some problems here um so that's basically the the sort",
    "start": "622000",
    "end": "628920"
  },
  {
    "text": "of the visual VM overview uh I don't know if I can do a whole lot more with the this this brief demo I have here so",
    "start": "628920",
    "end": "634320"
  },
  {
    "text": "I think I'll just go back to uh my prepared slides and talk about those that's just one thing to look for",
    "start": "634320",
    "end": "641000"
  },
  {
    "text": "I um one thing I don't have on the slides here is you can get this code on GitHub",
    "start": "641000",
    "end": "646360"
  },
  {
    "text": "it's it's open source so you can take a look at it for yourself see see what I did see if you want to adapt it for your",
    "start": "646360",
    "end": "651760"
  },
  {
    "text": "own uses it's available under liberal license so you can certainly take it um out of the existing project or even just",
    "start": "651760",
    "end": "657720"
  },
  {
    "text": "use the tool as is um if you want the location of that it's under the engine yard organization on GitHub github.com",
    "start": "657720",
    "end": "664240"
  },
  {
    "text": "engard it will be in there um if you need to extra point or let me",
    "start": "664240",
    "end": "669279"
  },
  {
    "text": "know so another thing I wanted to think about well what's new in J Ruby is I really wanted to to kind of highlight",
    "start": "669279",
    "end": "674560"
  },
  {
    "text": "from the community persective perspective what I think is interesting and new going on and kind of share a couple of those examples with you U",
    "start": "674560",
    "end": "681959"
  },
  {
    "text": "because it's you know jrb is not all not only about what the core team is working on to to to make J better it's it's even",
    "start": "681959",
    "end": "688120"
  },
  {
    "text": "much more in my opinion and what the community is doing with jby uh one project that's come along in the past",
    "start": "688120",
    "end": "694040"
  },
  {
    "text": "few weeks that I find really interesting is this this project called sidekick um anybody familiar with",
    "start": "694040",
    "end": "701399"
  },
  {
    "text": "rescue uh rescue is is basically sort of a ruby messaging queue that the GitHub guys has developed and it uses redus as",
    "start": "701399",
    "end": "708839"
  },
  {
    "text": "the backend store for for storing the messages and so basically you have your front end app that post messages into uh",
    "start": "708839",
    "end": "715160"
  },
  {
    "text": "into into a I think an array or something in inside of a data structure inside of rescue uh redis and then",
    "start": "715160",
    "end": "721200"
  },
  {
    "text": "rescue is a separate process that pulls those messages out of redus and does your background processing um this guy",
    "start": "721200",
    "end": "727959"
  },
  {
    "text": "Mike puram who has developed sidekick was playing around with this and a while ago he actually he's trying to run red",
    "start": "727959",
    "end": "733360"
  },
  {
    "text": "Rescue with J Ruby and finding that it didn't really quite that model didn't fit and you think about it you have um",
    "start": "733360",
    "end": "740800"
  },
  {
    "text": "rescue running as a bunch of background processes you basically needed to run one rescue process for every worker that",
    "start": "740800",
    "end": "746959"
  },
  {
    "text": "you wanted to be able to have doing work and thought well you know why do we have to run all these processes why can't we",
    "start": "746959",
    "end": "752240"
  },
  {
    "text": "just want to run a single process and so he wor he played around with rescue as it was tried to change it but then he",
    "start": "752240",
    "end": "758519"
  },
  {
    "text": "ended up going off and doing this separate project that just came out and on the on the this URL that I just",
    "start": "758519",
    "end": "764040"
  },
  {
    "text": "posted he has this sort of this sort of uh tagline here um what if one sidekick process",
    "start": "764040",
    "end": "770560"
  },
  {
    "text": "could run do the same work as 20 rescue processes and so what he's done with Sidekick is basically implement the same",
    "start": "770560",
    "end": "776920"
  },
  {
    "text": "uh protocol as as you have with rescue so you can have your front end um talk to",
    "start": "776920",
    "end": "783240"
  },
  {
    "text": "redis as if it was a rescue uh thing and it post it post the exact same data in the rescue protocol inside of redus and",
    "start": "783240",
    "end": "790399"
  },
  {
    "text": "then sidekick will just read that out and you can have a single sidekick process that will just spawn up uh as",
    "start": "790399",
    "end": "795880"
  },
  {
    "text": "many threads as you need to process all your background workers so the idea is using concurrency and threading as a way",
    "start": "795880",
    "end": "802320"
  },
  {
    "text": "of of uh increasing the throughput of your of your background processes so um",
    "start": "802320",
    "end": "808000"
  },
  {
    "text": "I haven't had a chance to play around it yet but it looks really neat what I'd like to do and I've been trying to do for a while um a common question I have",
    "start": "808000",
    "end": "815519"
  },
  {
    "text": "from people who are using J Ruby to deploy applications is well what if I want to do background processing what if I want to do some sort of scheduling or",
    "start": "815519",
    "end": "822320"
  },
  {
    "text": "you know there are various tools you can uh Java tools and Ruby tools that can do that and they sometimes work well in a",
    "start": "822320",
    "end": "830399"
  },
  {
    "text": "in a j Ru environment sometimes not what i' really like to do is some Sidekick is T take it and make it possible to to",
    "start": "830399",
    "end": "836759"
  },
  {
    "text": "deploy sidekick alongside a rails application inside of a single uh single jvm uh and just have it all just working",
    "start": "836759",
    "end": "844279"
  },
  {
    "text": "another area I find particularly interesting I've been uh I you know being a j Ruby person and a Java person",
    "start": "844279",
    "end": "849720"
  },
  {
    "text": "i' I've tend to call myself a polyglot although I actually haven't really been keeping up much with all the language",
    "start": "849720",
    "end": "856399"
  },
  {
    "text": "advances on the jvm whether it be closure Scala groovy uh some of the",
    "start": "856399",
    "end": "861519"
  },
  {
    "text": "newer ones like cotlin or um you know all these different languages",
    "start": "861519",
    "end": "867240"
  },
  {
    "text": "um it's getting to the point where it's getting really hard to keep up with all of them and and I I generally like that",
    "start": "867240",
    "end": "873120"
  },
  {
    "text": "idea that the pragmatic programmers wrote about where you know take the time to actually learn something new learning a new language every year that whole",
    "start": "873120",
    "end": "879320"
  },
  {
    "text": "idea I'm like yeah great and then you know the years go by and you know I've I've been doing Java and Ruby for five",
    "start": "879320",
    "end": "885079"
  },
  {
    "text": "years and haven't really s sat down to do uh you know any new language stuff and but I I feel like um I have a",
    "start": "885079",
    "end": "891120"
  },
  {
    "text": "background with emex and uh list a little bit of background in the list world and I feel like closure is a",
    "start": "891120",
    "end": "897000"
  },
  {
    "text": "different of Thing by itself that taking two things like J Ruby or you know Ruby in this case and closure it feels like",
    "start": "897000",
    "end": "902920"
  },
  {
    "text": "there's potential for marrying them in a way where they you know they're different enough as languages and and",
    "start": "902920",
    "end": "908880"
  },
  {
    "text": "technologies that they you know there's not a lot of overlap they might actually fit together if you like to if you like to mix and match Tools in this kind of",
    "start": "908880",
    "end": "915240"
  },
  {
    "text": "way and and there's actually been a little bit of activity in the community recently around this too um so I just um",
    "start": "915240",
    "end": "922399"
  },
  {
    "text": "I actually don't really know much closure at all so I just cobbled together an extremely minimalist example of just creating a hashmap and then",
    "start": "922399",
    "end": "928079"
  },
  {
    "text": "accessing it um and that's just for the purposes of of translating it to the Ruby versions here so you can see here",
    "start": "928079",
    "end": "933440"
  },
  {
    "text": "I'm declaring a variable called hmap um creating a hashmap uh which underneath the covers for closure is",
    "start": "933440",
    "end": "939680"
  },
  {
    "text": "actually you know it's a persistent data structure which is a really nice feature of closure that you get that sharing sharing within the data structure",
    "start": "939680",
    "end": "946120"
  },
  {
    "text": "without without the concurrency uh aspects of it where you might overwrite um overwrite things so the data",
    "start": "946120",
    "end": "952560"
  },
  {
    "text": "structure stay immutable uh but they change and share uh share share the the state that uh has not changed between",
    "start": "952560",
    "end": "959440"
  },
  {
    "text": "different uh uh versions of the of the map uh so doing that and just getting a",
    "start": "959440",
    "end": "966240"
  },
  {
    "text": "key out of it and checking if it has a has has that key um so you have a",
    "start": "966240",
    "end": "972639"
  },
  {
    "text": "closure file one thing you could do from Ruby is just say oh let's just uh use J Ruby's Java integration to just call out",
    "start": "972639",
    "end": "978680"
  },
  {
    "text": "to the closure command line um that actually works it's you know obviously it's a little bit clunky you don't",
    "start": "978680",
    "end": "984160"
  },
  {
    "text": "really get any of that tight integration that you really like you've got your closure over here you've got your Ruby over here here but then then again maybe",
    "start": "984160",
    "end": "990720"
  },
  {
    "text": "that's that's the way you want to do you want to keep your closure in your closure and your Ruby Ruby but you know there might be some other things you can",
    "start": "990720",
    "end": "996279"
  },
  {
    "text": "do here to like to take a little bit more advantage of of closure's features without having to get deep into closure",
    "start": "996279",
    "end": "1002680"
  },
  {
    "text": "the language if if that's not your thing um so this guy Dave Ray who I guess is",
    "start": "1002680",
    "end": "1007959"
  },
  {
    "text": "more of a closure guy than he is a ruby guy uh came up with this Library he called familiar and the idea with familiar was",
    "start": "1007959",
    "end": "1014600"
  },
  {
    "text": "to basically take all the core closure functions and make them accessible from Ruby inside of J Ruby so with uh with",
    "start": "1014600",
    "end": "1021279"
  },
  {
    "text": "familiar you get some code like this well this is the basic idea you uh there's a familiar module in Ruby um",
    "start": "1021279",
    "end": "1028640"
  },
  {
    "text": "you're familiar with and then everything inside of this block uh gives you direct access to functions in closure core with",
    "start": "1028640",
    "end": "1036319"
  },
  {
    "text": "where you know if you have a dash and then in the closure name it would be an underscore in the Ruby version of that that",
    "start": "1036319",
    "end": "1042280"
  },
  {
    "text": "function uh so here's the here's our you know again our closure that creates the hashmap on the top um The Familiar",
    "start": "1042280",
    "end": "1049360"
  },
  {
    "text": "version is on the bottom so it's almost identical right except we're just using Ruby's variable declaration semantics",
    "start": "1049360",
    "end": "1054960"
  },
  {
    "text": "and we're calling into that exposed hashmap function which will create the closure structure you know and passing",
    "start": "1054960",
    "end": "1060840"
  },
  {
    "text": "the same collection as we you know in the same format",
    "start": "1060840",
    "end": "1066159"
  },
  {
    "text": "here and of course printing out these things those those uh you know we can do those from Ruby the exact same way we're",
    "start": "1067880",
    "end": "1075200"
  },
  {
    "text": "just using Ruby's uh printing uh method methods instead of closures here so we have that hmap",
    "start": "1075200",
    "end": "1082360"
  },
  {
    "text": "variable we just print it um the get method is the exact same closure get method except access from Ruby and",
    "start": "1082360",
    "end": "1089039"
  },
  {
    "text": "likewise with contains um hus is actually Charles the",
    "start": "1089039",
    "end": "1095679"
  },
  {
    "text": "one of the my fellow JB Corps members and he was working he's been kind of keeping his eye on closure for a little while too he he uh thinks there's also",
    "start": "1095679",
    "end": "1104320"
  },
  {
    "text": "maybe a lot to be be gotten from kind of mixing the two together and he he cobbled together Library um",
    "start": "1104320",
    "end": "1110799"
  },
  {
    "text": "recently uh that kind of takes another stab at this and it's still a little bit in its infancy but it's you know yet",
    "start": "1110799",
    "end": "1117200"
  },
  {
    "text": "another way to to do this I think is worth kind of contrasting a little bit so uh Charlie's approach was to instead",
    "start": "1117200",
    "end": "1123600"
  },
  {
    "text": "of like instead of um tying into closure core directly he wanted to just",
    "start": "1123600",
    "end": "1129720"
  },
  {
    "text": "basically expose the data structure so we created this uh closure library and all the all the different data",
    "start": "1129720",
    "end": "1136080"
  },
  {
    "text": "structures exposed through specific classes in the in the library and so you access them more in a much more Ruby",
    "start": "1136080",
    "end": "1142200"
  },
  {
    "text": "like way uh in this case if you want to create a hash there's a persistent map",
    "start": "1142200",
    "end": "1147520"
  },
  {
    "text": "class that has a hash method for constructing and in this case you're actually passing in a ruby hash and the",
    "start": "1147520",
    "end": "1153400"
  },
  {
    "text": "code underneath uh traverses the Ruby hash and and converts it into to the",
    "start": "1153400",
    "end": "1158880"
  },
  {
    "text": "corresponding closure hash one thing that's and so then you see here below you you get the same sort of closure",
    "start": "1158880",
    "end": "1164799"
  },
  {
    "text": "data structure out of it but you you can access the things in the data structure using the Ruby's uh operator you know",
    "start": "1164799",
    "end": "1171640"
  },
  {
    "text": "syntax sugar methods for for reference referencing into the hash or checking if there's a key um and what's interesting",
    "start": "1171640",
    "end": "1179200"
  },
  {
    "text": "about this is it actually is just an artifact of the fact that closure data structures Implement some of the same",
    "start": "1179200",
    "end": "1185039"
  },
  {
    "text": "top level Java interfaces so in you know in the case of these uh the closure persistent Maps Implement Java Ule map",
    "start": "1185039",
    "end": "1192559"
  },
  {
    "text": "and J Ru happens to have syntactic um not syntactic sugar but decoration",
    "start": "1192559",
    "end": "1197600"
  },
  {
    "text": "around J uh anything that implements Java Ule map in the in inside of J Ruby we automatically",
    "start": "1197600",
    "end": "1205039"
  },
  {
    "text": "make it possible to use Ruby uh hash uh semantics to to to do those things so",
    "start": "1205039",
    "end": "1210640"
  },
  {
    "text": "you pretty much get her for free what this actually means is you can go back and use the same kind of access method",
    "start": "1210640",
    "end": "1215679"
  },
  {
    "text": "for uh for the for the familiar version as well so what happens youy",
    "start": "1215679",
    "end": "1221200"
  },
  {
    "text": "toif uhop so like if you do hmap bar equals",
    "start": "1221200",
    "end": "1228280"
  },
  {
    "text": "something right uh yeah that's a good question should we try",
    "start": "1228280",
    "end": "1234399"
  },
  {
    "text": "it might as well I know",
    "start": "1234720",
    "end": "1238640"
  },
  {
    "text": "just right",
    "start": "1244480",
    "end": "1248480"
  },
  {
    "text": "okay so I do have this code here um I'll post I have a link in my slides if you",
    "start": "1279600",
    "end": "1284760"
  },
  {
    "text": "want to go look check out the way this is wired together so let's just go grab",
    "start": "1284760",
    "end": "1289880"
  },
  {
    "text": "our um let's just do",
    "start": "1289880",
    "end": "1295200"
  },
  {
    "text": "this familiar what's that",
    "start": "1296200",
    "end": "1303840"
  },
  {
    "text": "heus which one yeah that's",
    "start": "1311120",
    "end": "1319399"
  },
  {
    "text": "no no they're separate they're separate I'm just using the familiar version here",
    "start": "1320120",
    "end": "1325200"
  },
  {
    "text": "so hmap so you can see the the actual class",
    "start": "1325200",
    "end": "1332000"
  },
  {
    "text": "of hmap as a closure laying persistent hashmap and so your question was what if we",
    "start": "1332000",
    "end": "1337080"
  },
  {
    "text": "do uh hmap Fu",
    "start": "1337080",
    "end": "1344559"
  },
  {
    "text": "equals bar",
    "start": "1344600",
    "end": "1348600"
  },
  {
    "text": "explodes so it actually so it appears that closures prisent hashmap interface",
    "start": "1349679",
    "end": "1354799"
  },
  {
    "text": "throws unsupported Ops for right through that makes",
    "start": "1354799",
    "end": "1360039"
  },
  {
    "text": "sense you know yeah I think you can so",
    "start": "1362400",
    "end": "1367279"
  },
  {
    "text": "let's let's do this again so we still have that uh we can",
    "start": "1368200",
    "end": "1375200"
  },
  {
    "text": "actually do like uh oh so",
    "start": "1375200",
    "end": "1380440"
  },
  {
    "text": "familiar yeah I know what you're talking about uh it it actually doesn't quite",
    "start": "1381240",
    "end": "1386559"
  },
  {
    "text": "work the way you would want to so like you're saying take",
    "start": "1386559",
    "end": "1392159"
  },
  {
    "text": "this right oops we need to I need to bootstrap that code",
    "start": "1392159",
    "end": "1400039"
  },
  {
    "text": "yeah right so we have this H map which is an instance of the closure persistent map so the problem is you know can we do",
    "start": "1415320",
    "end": "1421440"
  },
  {
    "text": "it like yeah like",
    "start": "1421440",
    "end": "1429400"
  },
  {
    "text": "this yeah this is we're in one nine now so you can do that the um do you have",
    "start": "1431039",
    "end": "1440399"
  },
  {
    "text": "pitch ma",
    "start": "1441679",
    "end": "1444720"
  },
  {
    "text": "to yeah so his library is a little bit a little bit underdeveloped in this area and notice one thing that if I try to",
    "start": "1446720",
    "end": "1452400"
  },
  {
    "text": "actually access",
    "start": "1452400",
    "end": "1456320"
  },
  {
    "text": "um actually get an exception here because he's not expecting it to be he's expecting the keys to be something that",
    "start": "1458559",
    "end": "1464679"
  },
  {
    "text": "you know closure would know about and what's actually in there is a ruby symbol and there's no automatic conversion for symbols so still still",
    "start": "1464679",
    "end": "1471880"
  },
  {
    "text": "very much into its infancy but you know it's interesting to that comment you had about you know what happens and so that's kind of what I would have",
    "start": "1471880",
    "end": "1477360"
  },
  {
    "text": "expected first of all but I wasn't sure so it's kind of fun to see that that that's actually what happens um so again with closure you",
    "start": "1477360",
    "end": "1484399"
  },
  {
    "text": "know if you're familiar with closure and the way it does modifications you use a ref and then you have to you know it's",
    "start": "1484399",
    "end": "1489760"
  },
  {
    "text": "got a software transactional memory uh system where you have to open a transaction before you modify a",
    "start": "1489760",
    "end": "1496679"
  },
  {
    "text": "variable and in this case a um so if we try to do if we create a ref",
    "start": "1496679",
    "end": "1501760"
  },
  {
    "text": "and we try to set it do a ref set on it outside of a transaction we get an exception uh but if we use the do sync",
    "start": "1501760",
    "end": "1508360"
  },
  {
    "text": "method which is closer closure's way of saying please open a a a transaction do",
    "start": "1508360",
    "end": "1513600"
  },
  {
    "text": "the ref set in there then it works um and that you know pretty much the identical code for the uh the",
    "start": "1513600",
    "end": "1520600"
  },
  {
    "text": "closure this is really confusing now talking about closure to language and this this extension but uh you know",
    "start": "1520600",
    "end": "1527840"
  },
  {
    "text": "basically the same same thing here you can see there's a tiny bit of a difference here we're kind of using more of an object oriented approach here",
    "start": "1527840",
    "end": "1533159"
  },
  {
    "text": "calling set on The Ref rather than you know using a ref set function here yep definitely in fact um I was gonna you",
    "start": "1533159",
    "end": "1539960"
  },
  {
    "text": "you and I were talking about um Scala a little bit before that before we started here and uh we do have a little bit of",
    "start": "1539960",
    "end": "1547279"
  },
  {
    "text": "scholar support built into J Ruby so that if you're using scholar classes from J Ruby it knows about some of the special uh special class names for some",
    "start": "1547279",
    "end": "1554480"
  },
  {
    "text": "of the you know the ways that Scala generates classes under the hood it it I'm I'm worried that it's a little bit",
    "start": "1554480",
    "end": "1559640"
  },
  {
    "text": "brittle though because scala's compiler changes so frequently that the the output it generates may not be compatible with what J Ruby expects at",
    "start": "1559640",
    "end": "1566080"
  },
  {
    "text": "at the current time erlang yeah urang yeah use urang",
    "start": "1566080",
    "end": "1573360"
  },
  {
    "text": "for sure um yeah so this I have a little",
    "start": "1573360",
    "end": "1579360"
  },
  {
    "text": "short URL here which will take you to the gist that has this code",
    "start": "1579360",
    "end": "1585640"
  },
  {
    "text": "um which you know again just serves the purpose of showing you how the stuff fits together the the actual code that",
    "start": "1585640",
    "end": "1590840"
  },
  {
    "text": "it's doing is fairly trivial but at least you'll get an idea hopefully you'll be able to get that",
    "start": "1590840",
    "end": "1597000"
  },
  {
    "text": "running um so highlighted a couple of community things I'm sure there are tons of more out there and if you guys are",
    "start": "1597000",
    "end": "1603320"
  },
  {
    "text": "you know know of any that you're currently looking at or interested and I'd be I'd be glad to hear about those too I'll shift gears a little bit now",
    "start": "1603320",
    "end": "1610000"
  },
  {
    "text": "and talk about from J Ruby core's perspective you know kind of what's happening in the core of J Ruby and you",
    "start": "1610000",
    "end": "1615240"
  },
  {
    "text": "know the the the answer there really doesn't change quite as much over time",
    "start": "1615240",
    "end": "1620399"
  },
  {
    "text": "like it's for the past six months or so it's all been pretty much been about the same thing and and uh that happens to be",
    "start": "1620399",
    "end": "1627159"
  },
  {
    "text": "Java 7 anybody out out here using Java 7 in production",
    "start": "1627159",
    "end": "1632600"
  },
  {
    "text": "yet we've insted okay that's pretty close we're",
    "start": "1632600",
    "end": "1638520"
  },
  {
    "text": "almost there yeah yeah good um yeah it's only so Java 7 came out",
    "start": "1638520",
    "end": "1645600"
  },
  {
    "text": "last summer in end of July you know I haven't been in deep in the",
    "start": "1645600",
    "end": "1651679"
  },
  {
    "text": "Java world uh recently enough to know uh to remember you know kind of like what",
    "start": "1651679",
    "end": "1656960"
  },
  {
    "text": "the adoption cycle is for new jvm you know major jvm releases like this but seems like oracle's already burned",
    "start": "1656960",
    "end": "1663840"
  },
  {
    "text": "through four updates to Java 7 so it's the the latest is Java 7 u4 uh it seems",
    "start": "1663840",
    "end": "1669640"
  },
  {
    "text": "like before too long it seems like most you know it should be stable enough that people can start switching over to it",
    "start": "1669640",
    "end": "1675640"
  },
  {
    "text": "and and hope hopefully hopefully it will of course the big thing for for J Ruby",
    "start": "1675640",
    "end": "1681360"
  },
  {
    "text": "oh just a quick note um if any of you are Mac users you you've you probably aware that there's no ja Java 7 official",
    "start": "1681360",
    "end": "1688320"
  },
  {
    "text": "Java 7 release for the Mac yet but you can actually get a DMG of a of a preview of java 7 at this URL and they actually",
    "start": "1688320",
    "end": "1695159"
  },
  {
    "text": "do have an update 4 build available I'm not sure how you know how long it's going to take before they stop calling",
    "start": "1695159",
    "end": "1700480"
  },
  {
    "text": "it preview because as far as I've seen it just installs and it works so you know maybe it's not the production",
    "start": "1700480",
    "end": "1706080"
  },
  {
    "text": "quality thing that you're concerned about but most of the people I know are not actually deploying Java software to",
    "start": "1706080",
    "end": "1712480"
  },
  {
    "text": "Max in production it's usually deploying to Linux or or something else so should be good enough for development and",
    "start": "1712480",
    "end": "1718840"
  },
  {
    "text": "certainly good enough to try J Ruby with the with the Java 7 features so the big thing of course in",
    "start": "1718840",
    "end": "1725120"
  },
  {
    "text": "Java 7 the J Ruby gets J Ruby all excited is invoke Dynamic can anybody tell me what invoke Dynamic actually is",
    "start": "1725120",
    "end": "1732559"
  },
  {
    "text": "or what it does pretty much yeah in",
    "start": "1732559",
    "end": "1738320"
  },
  {
    "text": "well so it was functional in in the in the the initial release uh but there were some aspects of the implementation",
    "start": "1738320",
    "end": "1745320"
  },
  {
    "text": "that were suboptimal that made things really slow yeah it was like update two or",
    "start": "1745320",
    "end": "1750480"
  },
  {
    "text": "three something like that so yeah so I mean now we're definitely in the clear and um all the all the",
    "start": "1750480",
    "end": "1757320"
  },
  {
    "text": "testing that we've been doing based on the latest Java 7 is proving proving to",
    "start": "1757320",
    "end": "1764559"
  },
  {
    "text": "to to you know come true in that respect so um you know there's still a fair",
    "start": "1764559",
    "end": "1771279"
  },
  {
    "text": "amount of not misunderstanding but maybe not you know not not enough familiarity with what's really going on within book",
    "start": "1771279",
    "end": "1777440"
  },
  {
    "text": "diic that I thought I'd take another stab at giving you an idea of what's actually going on here why why it's important for J",
    "start": "1777440",
    "end": "1783720"
  },
  {
    "text": "Ruby and I'm going to take a little detour through this really cool blog post that I read uh in the past couple",
    "start": "1783720",
    "end": "1788760"
  },
  {
    "text": "months this guy named Tom Tom Stewart gave a talk at Ruby Manor uh I think",
    "start": "1788760",
    "end": "1794320"
  },
  {
    "text": "late last year was conferenc in the UK and he called this Talk programming with",
    "start": "1794320",
    "end": "1800080"
  },
  {
    "text": "nothing and hopefully as I talk through this a little bit you'll see why this is going to be relevant for invoke damic",
    "start": "1800080",
    "end": "1806320"
  },
  {
    "text": "but for now just kind of bear with me so the idea of this talk that he gave was what if you had a version of Ruby where",
    "start": "1806320",
    "end": "1812120"
  },
  {
    "text": "all you had in it were lambdas and the ability to call",
    "start": "1812120",
    "end": "1819640"
  },
  {
    "text": "lambdas you know you don't have any if statements you don't have any constants you don't have any literals don't have",
    "start": "1819640",
    "end": "1825000"
  },
  {
    "text": "any strings can you actually Implement anything and you know those of you who are familiar with Lambda calculus and T",
    "start": "1825000",
    "end": "1831519"
  },
  {
    "text": "in completeness yeah you know you can get there so but what's really cool if you go read the post is you know he he kind of breaks it down in step-by-step",
    "start": "1831519",
    "end": "1837840"
  },
  {
    "text": "detail and you know personally I actually didn't go to school for computer science that was a double e major so some of this stuff was a little",
    "start": "1837840",
    "end": "1845039"
  },
  {
    "text": "bit lost on me until recently but so it's fun for me to go catch up and kind of see you know what's happening under",
    "start": "1845039",
    "end": "1850320"
  },
  {
    "text": "the covers so sort of the Crux of the talk is he talks about fizzbuzz you guys familiar with the little fizzbuzz test",
    "start": "1850320",
    "end": "1857120"
  },
  {
    "text": "it's you know code like this right so here's some Ruby code that impl fizzbuzz if you you know you Loop through a bunch",
    "start": "1857120",
    "end": "1862480"
  },
  {
    "text": "of numbers and if you have multiples of five three five or 15 you print out different",
    "start": "1862480",
    "end": "1867960"
  },
  {
    "text": "things and so how would you go about implementing fizzbuzz with just a you know a simple language that only has",
    "start": "1867960",
    "end": "1873320"
  },
  {
    "text": "lambdas in the ability to call lambdas well he actually builds it up he builds up step by step he covers you know every",
    "start": "1873320",
    "end": "1878799"
  },
  {
    "text": "aspect of this from uh you know numbers to uh iteration to um to you know to the",
    "start": "1878799",
    "end": "1885639"
  },
  {
    "text": "modular operator the conditionals and when he adds it all up uh you",
    "start": "1885639",
    "end": "1891159"
  },
  {
    "text": "actually get a fizzbuzz program that looks like",
    "start": "1891159",
    "end": "1895200"
  },
  {
    "text": "this and this is all just you know lambdas and calls you can see that you got the arrows for the lambdas and",
    "start": "1897159",
    "end": "1902440"
  },
  {
    "text": "you've got the square brackets are some calling of that Lambda so go check out the blog post to see how that actually",
    "start": "1902440",
    "end": "1907760"
  },
  {
    "text": "matches up I thought that was pretty pretty funny though uh so the C this right is that you know you've got this",
    "start": "1907760",
    "end": "1912960"
  },
  {
    "text": "unit of this kind of low lowest common Den denominator unit uh of just being",
    "start": "1912960",
    "end": "1918039"
  },
  {
    "text": "having a chunk of codee and executing it and the the sort of the magic behind",
    "start": "1918039",
    "end": "1923440"
  },
  {
    "text": "invoke Dynamic is actually basically that same thing so in the in the jdk",
    "start": "1923440",
    "end": "1928600"
  },
  {
    "text": "these are called method handles and really a method handle is uh well it is",
    "start": "1928600",
    "end": "1933880"
  },
  {
    "text": "basically a Lambda in a in in a sort of way um what actually happens when you're",
    "start": "1933880",
    "end": "1939639"
  },
  {
    "text": "actually running code that uses inv Dynamic J Ruby will compile down to bite code in in when it detects that Java 7",
    "start": "1939639",
    "end": "1946919"
  },
  {
    "text": "or higher is available it will it will generate bite code that has the invoked Dynamic bite code in it and along with",
    "start": "1946919",
    "end": "1953720"
  },
  {
    "text": "that invoked Dynamic bite code there is a there's a little bit of information there's a we embed a knowledge of a",
    "start": "1953720",
    "end": "1959559"
  },
  {
    "text": "bootstrap method in the bite code so that in voke Dynamic can call over and figure out well how do I actually get a",
    "start": "1959559",
    "end": "1966360"
  },
  {
    "text": "method handle to begin with and so if you think about you know a list of bite code that corresponds with some Java",
    "start": "1966360",
    "end": "1972480"
  },
  {
    "text": "method you know inside that method there's one invoke Dynamic bite code that represents one instance of of",
    "start": "1972480",
    "end": "1979279"
  },
  {
    "text": "calling out to some piece of dynamic code so we have to get you know B able to and that that instance is what's",
    "start": "1979279",
    "end": "1985960"
  },
  {
    "text": "called a call site the call site has a Target which is the actual method handle itself so the whole process of",
    "start": "1985960",
    "end": "1992039"
  },
  {
    "text": "bootstrapping which only occurs the very first time that particular bite code is hit is just to say give me a call site",
    "start": "1992039",
    "end": "1997799"
  },
  {
    "text": "and the method handle construct that whole thing for me and I'll hold on to it so the call site will stay static after that point but the callsite can",
    "start": "1997799",
    "end": "2003960"
  },
  {
    "text": "actually have its have its method handle Target Chang dynamically as well and the the jvm is built to be able to handle",
    "start": "2003960",
    "end": "2010760"
  },
  {
    "text": "that um so the method that handles actually look like this this is um a a portion of the actual um description",
    "start": "2010760",
    "end": "2018080"
  },
  {
    "text": "abstract class and of course there's your invoke method so your your method handle is a Lambda and it's got your uh",
    "start": "2018080",
    "end": "2025399"
  },
  {
    "text": "ability to execute it um so whereas the fizzbuzz program",
    "start": "2025399",
    "end": "2031760"
  },
  {
    "text": "that we saw was extremely verbose because of the lack of uh you know additional utilities for building up the",
    "start": "2031760",
    "end": "2037399"
  },
  {
    "text": "logic method handles actually do come with a bunch of additional uh ways of sort of",
    "start": "2037399",
    "end": "2043240"
  },
  {
    "text": "composing method handles and decorating them so you can do things like mutate the argument lists as you as you call",
    "start": "2043240",
    "end": "2049440"
  },
  {
    "text": "through a method um you and there are really interesting ways of combining all",
    "start": "2049440",
    "end": "2054720"
  },
  {
    "text": "these different utilities to do to to implement things like Java Tri finally logic you can actually using these drop",
    "start": "2054720",
    "end": "2061520"
  },
  {
    "text": "arguments and folding and um guard with test and catch exception and all that sort of thing you can actually Implement",
    "start": "2061520",
    "end": "2066679"
  },
  {
    "text": "TR finally logic completely within method handles the other cool thing about method handles and the specifically these sort of you know",
    "start": "2066679",
    "end": "2072679"
  },
  {
    "text": "quote unquote Primitives if you will is that the the um the jdk team that have",
    "start": "2072679",
    "end": "2077720"
  },
  {
    "text": "been implementing this stuff have been specifically going down and optimizing the way that these uh Primitives get",
    "start": "2077720",
    "end": "2084878"
  },
  {
    "text": "implemented at the jvm level so that if you build up a call site specifically just by composing method handles with",
    "start": "2084879",
    "end": "2090560"
  },
  {
    "text": "these Primitives it will get compiled down to really fast code and that's really uh the the Crux of that",
    "start": "2090560",
    "end": "2096878"
  },
  {
    "text": "difference in the update was that the later updates there's more of this logic that's baked in and optimized in a way",
    "start": "2096879",
    "end": "2102119"
  },
  {
    "text": "that you can like boil it down to either you know machine code or something much much closer to to machine code than than",
    "start": "2102119",
    "end": "2109240"
  },
  {
    "text": "the high level stuff um so right now jby has several",
    "start": "2109240",
    "end": "2115200"
  },
  {
    "text": "different ways that it uses invoke Dynamic you even though you think of invoke Dynamic and Method handles as you",
    "start": "2115200",
    "end": "2120400"
  },
  {
    "text": "know you hear the word method and you think oh well it's just for method calls well we can actually use it to implement other things too like we can Implement a",
    "start": "2120400",
    "end": "2126320"
  },
  {
    "text": "ruby constant lookup by just calling through a method handle or a string literal or any other number literal or",
    "start": "2126320",
    "end": "2132760"
  },
  {
    "text": "like on the the last example math operations one of the things that slows J Ruby down a little bit and Ruby in",
    "start": "2132760",
    "end": "2138839"
  },
  {
    "text": "general when you're doing computational stuff is the fact that we have um we have fixed nums you know we have uh you",
    "start": "2138839",
    "end": "2145320"
  },
  {
    "text": "know a numeric tower that expands automatically without having without having to do overflow checking and it's",
    "start": "2145320",
    "end": "2151800"
  },
  {
    "text": "obviously harder to translate that to fast running uh machine code uh so what we can do is we can actually look look",
    "start": "2151800",
    "end": "2158079"
  },
  {
    "text": "at Ruby code and and look for things like uh you know plus operators and",
    "start": "2158079",
    "end": "2163760"
  },
  {
    "text": "things that might be numbers adjacent to them or we're going to we're we're going to make an assumption and say that that",
    "start": "2163760",
    "end": "2169000"
  },
  {
    "text": "is a plus operator for a numeric operation and we'll just build up that",
    "start": "2169000",
    "end": "2174359"
  },
  {
    "text": "code generate bite code for it as if it was a pure math operation if for some reason we actually call into it we can",
    "start": "2174359",
    "end": "2181119"
  },
  {
    "text": "have guards around that area that will escape out and drop back to you know the more Dynamic Ruby Logic for handing",
    "start": "2181119",
    "end": "2187599"
  },
  {
    "text": "handling the plus operator uh if it if in fact the the actual objects at runtime at that callay turn out to be",
    "start": "2187599",
    "end": "2193160"
  },
  {
    "text": "something other than than fixed nums or integers um so we can actually use the",
    "start": "2193160",
    "end": "2198200"
  },
  {
    "text": "invo invoke Dynamic um you know toolkit to do to do Faster",
    "start": "2198200",
    "end": "2205000"
  },
  {
    "text": "Math uh some benchmarks of course everybody likes benchmarks um caveat",
    "start": "2206000",
    "end": "2213079"
  },
  {
    "text": "mtor I actually got these slides from a fellow J Ruby um committer in pan who gave a talk just the other day about",
    "start": "2213079",
    "end": "2220200"
  },
  {
    "text": "this stuff and so I said oh great you just posted some slides I'll take your benchmarks and you know pretend that I I",
    "start": "2220200",
    "end": "2226440"
  },
  {
    "text": "you know spent all this time running them but you know that I think the numbers are still kind of telling so what you see here is uh that line across",
    "start": "2226440",
    "end": "2233000"
  },
  {
    "text": "the middle here is you know the 1.0 sort of the the the standard The Benchmark",
    "start": "2233000",
    "end": "2238200"
  },
  {
    "text": "and so that's that's uh that Benchmark is uh J Ruby running on Java 7",
    "start": "2238200",
    "end": "2245240"
  },
  {
    "text": "without invoke dynamic that's right yeah so so we have the we",
    "start": "2245240",
    "end": "2251359"
  },
  {
    "text": "can run on Java set without invoke dynamic or we can turn it on it will be on by default if you're run on Java 7 but you can turn it off with flags just",
    "start": "2251359",
    "end": "2257680"
  },
  {
    "text": "for comparison um and so you see that in a number of cases just by turning invoked",
    "start": "2257680",
    "end": "2263520"
  },
  {
    "text": "Dynamic on for things like string literals and math operations we get um",
    "start": "2263520",
    "end": "2269440"
  },
  {
    "text": "more than 50% uh performance benefit for those micro benchmarks now",
    "start": "2269440",
    "end": "2275839"
  },
  {
    "text": "um if you're interested the code that does these I can look it up for you I think it's in the JB code base these are",
    "start": "2275839",
    "end": "2282280"
  },
  {
    "text": "definitely micro benchmarks it's very low level just doing a bunch of small operations in a tight Loop so they're",
    "start": "2282280",
    "end": "2287960"
  },
  {
    "text": "not going to apply as much to a real world program these benchmarks might give you a little bit more idea of a",
    "start": "2287960",
    "end": "2293160"
  },
  {
    "text": "real world world program where you actually doing some non-trivial computations with these uh binary tree",
    "start": "2293160",
    "end": "2298920"
  },
  {
    "text": "algorithms and again we see the blue the blue bars is the invoked Dynamic um version of J Ruby where we get almost",
    "start": "2298920",
    "end": "2306800"
  },
  {
    "text": "50% improvement over without on this AVL tree",
    "start": "2306800",
    "end": "2311920"
  },
  {
    "text": "Benchmark so there's definitely performance benefits to be had and we get this for free just by using Java 7",
    "start": "2311920",
    "end": "2317359"
  },
  {
    "text": "just by using invoke Dynamic uh and nothing",
    "start": "2317359",
    "end": "2321960"
  },
  {
    "text": "else releases of course what would JB be without more updates uh we just had 167",
    "start": "2322960",
    "end": "2329520"
  },
  {
    "text": "released yesterday some of you probably saw that uh the the the idea with the one six releases has",
    "start": "2329520",
    "end": "2335920"
  },
  {
    "text": "been that it's been been a sort of our way of kind of keeping up to date with either problems that the community has",
    "start": "2335920",
    "end": "2341640"
  },
  {
    "text": "been having or you know compatibility bugs that are kind of preventing people from continuing to to deploy J Ruby",
    "start": "2341640",
    "end": "2348440"
  },
  {
    "text": "because the one the the the J Ruby master Branch the 1.7 version of J Ruby has been drown out for quite a while now",
    "start": "2348440",
    "end": "2354839"
  },
  {
    "text": "I think it's been it's probably going on nine months or so and it's still not quite ready um we've been using the six",
    "start": "2354839",
    "end": "2362160"
  },
  {
    "text": "Branch as a way to roll out additional bug fixes and so every every new bug fix release we say 167 is going to be the",
    "start": "2362160",
    "end": "2369240"
  },
  {
    "text": "last version of of J Ruby in the 16 series and then we find another bug so",
    "start": "2369240",
    "end": "2374760"
  },
  {
    "text": "um so for 17 we're actually looking at probably probably still a couple months",
    "start": "2374760",
    "end": "2379839"
  },
  {
    "text": "away I think there's a um the the master is has been pretty stable for a while but there's still some things who want",
    "start": "2379839",
    "end": "2385920"
  },
  {
    "text": "to clean up um so it's still a little bit off I've yes yeah exactly so",
    "start": "2385920",
    "end": "2393520"
  },
  {
    "text": "um we haven't actually talked together and agreed upon a date but I'm just going to stick my neck out and say that",
    "start": "2393520",
    "end": "2399079"
  },
  {
    "text": "maybe we'll have uh something approximating at least a 17 beta or you",
    "start": "2399079",
    "end": "2404800"
  },
  {
    "text": "know early access release in May or June sometime right exactly right in time for for jry be conf and so um if it gets to",
    "start": "2404800",
    "end": "2413119"
  },
  {
    "text": "be a it gets to be that time you know come come focus and make sure that we uh get going on it because it's it's really",
    "start": "2413119",
    "end": "2418480"
  },
  {
    "text": "easy for the core team to just kind of be heads down working on things and then uh sudden we our heads come up and it's",
    "start": "2418480",
    "end": "2424359"
  },
  {
    "text": "like oh wow it's been three months and we still haven't put out a a release of Master so it's really easy for that to get drawn out Christmas",
    "start": "2424359",
    "end": "2433280"
  },
  {
    "text": "forvm Christmas yeah right yeah um I want to just mention again",
    "start": "2433280",
    "end": "2439440"
  },
  {
    "text": "that if any of you guys are using J Ruby itself or some of the projects around J Ruby and you uh have you if you have any",
    "start": "2439440",
    "end": "2446200"
  },
  {
    "text": "interest in doing some sour stuff they're always always welcome contributions and I find lately that my",
    "start": "2446200",
    "end": "2452480"
  },
  {
    "text": "time has become more compressed and less available to do maintenance of the of the projects themselves so if you have",
    "start": "2452480",
    "end": "2459040"
  },
  {
    "text": "an inkling please please uh always you're always welcome to join us go to",
    "start": "2459040",
    "end": "2464319"
  },
  {
    "text": "just the the GitHub page for J Ruby and we have all the projects there uh and then of course um the",
    "start": "2464319",
    "end": "2471520"
  },
  {
    "text": "conference so um we're having our fourth annual J Ruby conf this year and it's happening in Minneapolis and um it might",
    "start": "2471520",
    "end": "2479240"
  },
  {
    "text": "seem like a little bit of hike for you guys out here uh sorry about that it's a little bit closer than DC last year in",
    "start": "2479240",
    "end": "2484599"
  },
  {
    "text": "Ohio the year before that um of course we're having it in Minneapolis that's where Char Charlie Tom and I are all",
    "start": "2484599",
    "end": "2491040"
  },
  {
    "text": "based and we kind of just had this idea that yeah we should have a conference for J Ruby and in our hometown so uh",
    "start": "2491040",
    "end": "2497480"
  },
  {
    "text": "we're looking forward to playing hosts so if any of you guys feel like joining us um we're having the conference at the",
    "start": "2497480",
    "end": "2503280"
  },
  {
    "text": "Guthrie Theater which is a sort of an internationally recognized piece of architecture right on the banks of the",
    "start": "2503280",
    "end": "2508440"
  },
  {
    "text": "Mississippi should be should be really nice a great venue um we're going to have whiskey and beer uh at a at a at a",
    "start": "2508440",
    "end": "2516040"
  },
  {
    "text": "conference party and hopefully lots of other good things planned we just started announcing speakers uh at the website you can go",
    "start": "2516040",
    "end": "2522440"
  },
  {
    "text": "there we're going to continue to announce more more content as we go forward um I'm having a lot of fun",
    "start": "2522440",
    "end": "2527520"
  },
  {
    "text": "actually putting on the conference planning hat myself and I've been the conference Web Master as well which has",
    "start": "2527520",
    "end": "2533480"
  },
  {
    "text": "also been kind of cramping my my you know availability in terms of things I can accomplish but you know it's another",
    "start": "2533480",
    "end": "2539640"
  },
  {
    "text": "way of of doing things so um as far as that's the end of my prepared material",
    "start": "2539640",
    "end": "2545400"
  },
  {
    "text": "um I just want to close the talk here by saying you know I I kind of started out thinking about what how how to present",
    "start": "2545400",
    "end": "2551640"
  },
  {
    "text": "this talk and you know answer the question well what's new in J Ruby and again I want to emphasize that really",
    "start": "2551640",
    "end": "2556960"
  },
  {
    "text": "what's new for me is just a tiny piece of it and I really want you guys to to fill in and you know tell me what's new",
    "start": "2556960",
    "end": "2562960"
  },
  {
    "text": "for you because it's more than likely something that I'm not familiar with or if it is maybe it's something that you know is a crucial piece of feedback that",
    "start": "2562960",
    "end": "2570319"
  },
  {
    "text": "could help help us make J better or help help the adoption increase increase and",
    "start": "2570319",
    "end": "2575920"
  },
  {
    "text": "uh I hope that as these meetups continue whether or not they continue every month I'm not sure but uh I'm hoping that",
    "start": "2575920",
    "end": "2582319"
  },
  {
    "text": "maybe some of you guys will step up and maybe present a quick quick story about your JB use down the road as these",
    "start": "2582319",
    "end": "2589319"
  },
  {
    "text": "continue forward so um I'm not sure how we're doing doing on time but um I'll",
    "start": "2589319",
    "end": "2594839"
  },
  {
    "text": "certainly be around for a while yet and and be happy to talk with you guys and and just talk Jer or talk whatever you",
    "start": "2594839",
    "end": "2600280"
  },
  {
    "text": "want so thanks [Applause]",
    "start": "2600280",
    "end": "2608510"
  },
  {
    "text": "[Music]",
    "start": "2608710",
    "end": "2616879"
  }
]