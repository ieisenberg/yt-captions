[
  {
    "start": "0",
    "end": "175000"
  },
  {
    "text": "welcome back to the micro-services patterns and practices track so we have",
    "start": "4049",
    "end": "9460"
  },
  {
    "text": "all of the speakers save one but that's cool to talk about yeah here you go yeah",
    "start": "9460",
    "end": "16720"
  },
  {
    "text": "come on up we have all the speakers this is great awesome all five of us yeah so very",
    "start": "16720",
    "end": "22419"
  },
  {
    "text": "informal like I didn't you know correctly this is you know what you want to hear from us so I think we're gonna",
    "start": "22419",
    "end": "30009"
  },
  {
    "text": "try to figure out a way to have a mic for you and a mic for us awesome we have to I can be a runner around or of things",
    "start": "30009",
    "end": "37270"
  },
  {
    "text": "and maybe I'll ask for another person to volunteer to help me with that actually I'll do I'll keep this one great cool",
    "start": "37270",
    "end": "43860"
  },
  {
    "text": "fire away",
    "start": "43860",
    "end": "47100"
  },
  {
    "text": "how do you manage your data when you when you're doing green flickering",
    "start": "51630",
    "end": "56680"
  },
  {
    "text": "deployment so for instance you might have a version that writes new records in that the old version doesn't",
    "start": "56680",
    "end": "61870"
  },
  {
    "text": "understand and how does the old version know it's not an error it's actually it's actual real data okay do you guys",
    "start": "61870",
    "end": "73509"
  },
  {
    "text": "have it I actually have an answer for that but why don't you guys take a stab at it first the red/black deployments at",
    "start": "73509",
    "end": "85119"
  },
  {
    "text": "Netflix whenever there are data changes like when you have microservice changes you can do the red/black deployment it's",
    "start": "85119",
    "end": "91060"
  },
  {
    "text": "stateless it's not a problem but when you have Micro data changes especially for Cassandra right Cassandra",
    "start": "91060",
    "end": "97329"
  },
  {
    "text": "is schema-less so even if you are adding a new column or changing schema you don't necessarily",
    "start": "97329",
    "end": "102850"
  },
  {
    "text": "need to do TDL to change the schema you can directly keep inserting into the new",
    "start": "102850",
    "end": "109149"
  },
  {
    "text": "data set with the new column family new new column so that's that's one way the",
    "start": "109149",
    "end": "115209"
  },
  {
    "text": "other way is also we help build like if they have to do migration from one column family to another we helped them",
    "start": "115209",
    "end": "122170"
  },
  {
    "text": "build tools like we own the client libraries so it's easy for our application users to do dual writes that",
    "start": "122170",
    "end": "128500"
  },
  {
    "text": "writing to the old as well as the new and we provide tools like fork lifter which can lift the data from one source",
    "start": "128500",
    "end": "134740"
  },
  {
    "text": "to the destination but not all red-black deploy need changes where we are moving data around at least that's what Netflix has",
    "start": "134740",
    "end": "142670"
  },
  {
    "text": "yeah I mean I would just add I mean I think sort of zero downtime deployments",
    "start": "142670",
    "end": "148340"
  },
  {
    "text": "constrain the types of changes that you can make at the database level so you",
    "start": "148340",
    "end": "153660"
  },
  {
    "text": "could add like a nullable column for instance but you can't just drop a",
    "start": "153660",
    "end": "158700"
  },
  {
    "text": "column so it's sort of yeah carefully make changes and and decoupled database",
    "start": "158700",
    "end": "167040"
  },
  {
    "text": "schema changes from from like your zero downtime deployments yeah so don't do",
    "start": "167040",
    "end": "173700"
  },
  {
    "text": "what you just said I mean I'm not even kidding what you did I mean I'm you know",
    "start": "173700",
    "end": "179610"
  },
  {
    "start": "175000",
    "end": "428000"
  },
  {
    "text": "what you did was you broke the interface you made it you made a data to you made a non backward-compatible data change",
    "start": "179610",
    "end": "187470"
  },
  {
    "text": "and you exposed it to other people so and you did it in a way in like",
    "start": "187470",
    "end": "193860"
  },
  {
    "text": "in-between a minor you know release so if people are familiar with semantic versioning what you just described was a",
    "start": "193860",
    "end": "200489"
  },
  {
    "text": "non backward-compatible major version change does it make sense what I'm saying we used to produce data in this",
    "start": "200489",
    "end": "206940"
  },
  {
    "text": "form now we produce it in this non backward-compatible other form so don't",
    "start": "206940",
    "end": "212880"
  },
  {
    "text": "do that what you can do is what Chris said which is depending and we can talk in detail about the particular change",
    "start": "212880",
    "end": "218549"
  },
  {
    "text": "you wanted to make there are lots of ways to make backward compatible changes again add a add an optional field I mean",
    "start": "218549",
    "end": "227489"
  },
  {
    "text": "we need to talk about it in a little bit more detail sadly but yeah so the idea is that you you know as a service owner",
    "start": "227489",
    "end": "234120"
  },
  {
    "text": "your primary job is never to break your the other people that use your service",
    "start": "234120",
    "end": "240510"
  },
  {
    "text": "so you're never allowed to break clients you're never allowed to pretend which clients are like consumers of your events I think that's a good I mean",
    "start": "240510",
    "end": "249090"
  },
  {
    "text": "there's lots of detail behind that answer but Italy conceptually does it make sense yeah cool",
    "start": "249090",
    "end": "255090"
  },
  {
    "text": "all right way in the back actually I'm gonna go here first I'm gonna get to you next so one of the things that we have",
    "start": "255090",
    "end": "262979"
  },
  {
    "text": "found hard is deciding boundary context from microservices it could be as easy",
    "start": "262979",
    "end": "268770"
  },
  {
    "text": "as like okay we are having orders but then could be five types of orders and now we know micro-service is a monolith after a",
    "start": "268770",
    "end": "275669"
  },
  {
    "text": "while how do you decide boundary context so that it's good enough after a couple",
    "start": "275669",
    "end": "281520"
  },
  {
    "text": "years I mean mostly is probably gonna be informed by your development practice",
    "start": "281520",
    "end": "287520"
  },
  {
    "text": "and your development divisions right rather than any strict semantic thing you try to guess from the get-go",
    "start": "287520",
    "end": "294210"
  },
  {
    "text": "right I mean I tend to think of microservices as emergent patterns that come out of the need for decoupling you",
    "start": "294210",
    "end": "301469"
  },
  {
    "text": "know I I don't have a micro service caliper on me it's so it's you know it",
    "start": "301469",
    "end": "308879"
  },
  {
    "text": "takes effort but usually you know the decoupling works at development team boundaries pretty well or or at",
    "start": "308879",
    "end": "315360"
  },
  {
    "text": "functional responsibilities within development teams and you know that's where I would start yeah I would sort of",
    "start": "315360",
    "end": "322139"
  },
  {
    "text": "say that this is one of the hardest problems bait I mean and it's really not specific to micro services you know this",
    "start": "322139",
    "end": "329400"
  },
  {
    "text": "is basically another way of rephrasing it it's like what what are the boundaries of my module right and I",
    "start": "329400",
    "end": "336270"
  },
  {
    "text": "think picking module boundaries is is difficult and and unfortunately there's",
    "start": "336270",
    "end": "344939"
  },
  {
    "text": "no sort of kind of mechanical process that if you apply it you will come up",
    "start": "344939",
    "end": "351360"
  },
  {
    "text": "with a perfect kind of set of module you know module boundaries so like in the",
    "start": "351360",
    "end": "357899"
  },
  {
    "text": "case of services it's like yeah most of them are organized around particular business objects right like order",
    "start": "357899",
    "end": "364020"
  },
  {
    "text": "management and customer management and so on but you I mean that's kind of your",
    "start": "364020",
    "end": "371729"
  },
  {
    "text": "first guess and you go with that and if later on you find out that some service has got too big then hopefully at that",
    "start": "371729",
    "end": "378810"
  },
  {
    "text": "point there is some clear enough boundary between the two internal parts",
    "start": "378810",
    "end": "383849"
  },
  {
    "text": "of that module so that you can split it in a meaningful way and then just to",
    "start": "383849",
    "end": "389099"
  },
  {
    "text": "sort of echo echo what Lewis said I mean basically to me ace you know the point of a service is to enable a small team",
    "start": "389099",
    "end": "396089"
  },
  {
    "text": "of developers to deliver rapidly and safely and",
    "start": "396089",
    "end": "402039"
  },
  {
    "text": "so it's like of a module you know the service gets too big that really means",
    "start": "402039",
    "end": "407530"
  },
  {
    "text": "the team that's developing it has got too big and they're weighed down by communication overhead and so you kind",
    "start": "407530",
    "end": "415180"
  },
  {
    "text": "of want to split the team and you want to split the code so they can go back to being a small nimble team again I have",
    "start": "415180",
    "end": "426129"
  },
  {
    "text": "one more thought and then I'm gonna go to the back to the guy who had that other question so one of the things that",
    "start": "426129",
    "end": "431440"
  },
  {
    "text": "I assert because I believe it is probably if you are you know the five",
    "start": "431440",
    "end": "437949"
  },
  {
    "text": "person startup you might not want to start with micro services part of the why is that it's still a little bit",
    "start": "437949",
    "end": "444400"
  },
  {
    "text": "complicated maybe a lot complicated to build a distributed system and there are a lot I mean everybody's questions here are around lots of different things that",
    "start": "444400",
    "end": "450819"
  },
  {
    "text": "are complicated and probably when you're small you want to think about doing something different but another part of",
    "start": "450819",
    "end": "455919"
  },
  {
    "text": "it is you really have to understand your domain and be able to decompose it in a reasonable way before you do micro",
    "start": "455919",
    "end": "463030"
  },
  {
    "text": "services does it make sense because like micro services are just a sort of physical manifestation of a you know",
    "start": "463030",
    "end": "468430"
  },
  {
    "text": "decomposition of your domain and so I have found because I have tried and failed to do this many times my first",
    "start": "468430",
    "end": "474759"
  },
  {
    "text": "cut at a new problem and you know defining what I think the decomposition of the domain is like I mess it up all",
    "start": "474759",
    "end": "480279"
  },
  {
    "text": "the time and I have like gray hair no hair like I've been doing this for a while so so yeah there so there are I",
    "start": "480279",
    "end": "487630"
  },
  {
    "text": "like to say there are two rare exceptions to the rule of maybe don't",
    "start": "487630",
    "end": "492879"
  },
  {
    "text": "start with micro services when you're a tiny the first is if you're if your MVP if you're like most our minimal valuable",
    "start": "492879",
    "end": "499900"
  },
  {
    "text": "product requires scale so if you're building the Heroku competitor for example like you're building Internet",
    "start": "499900",
    "end": "506500"
  },
  {
    "text": "infrastructure you better scale from the beginning like that is a requirement but the other is if you already know your",
    "start": "506500",
    "end": "513550"
  },
  {
    "text": "domain super well so the examples there and I can think of one great example is",
    "start": "513550",
    "end": "519010"
  },
  {
    "text": "like people building new banks right so new bank from Brazil who gave the first talk yesterday and the architectures",
    "start": "519010",
    "end": "525190"
  },
  {
    "text": "you've always wondered about track they are starting with micro services why because the decomposition of the banking",
    "start": "525190",
    "end": "530770"
  },
  {
    "text": "domain we have known for 50 years and there are a bunch of other similar people in London I always forget",
    "start": "530770",
    "end": "537150"
  },
  {
    "text": "the name of the company but they start with Microsoft's because the components that are involved in a bank are really",
    "start": "537150",
    "end": "542790"
  },
  {
    "text": "well understood but for the 99% case of the rest of us we don't know our domain well enough and that's why this is such",
    "start": "542790",
    "end": "548820"
  },
  {
    "text": "an important problem we know that we are",
    "start": "548820",
    "end": "562140"
  },
  {
    "text": "a monolithic application and we know that we want to get to business context types of services but where does that",
    "start": "562140",
    "end": "569730"
  },
  {
    "text": "line drawn is it a product level of API level micro service level where is that",
    "start": "569730",
    "end": "575010"
  },
  {
    "text": "line is it just what feels right so yeah",
    "start": "575010",
    "end": "587790"
  },
  {
    "text": "that's a that is a hard question but I think one of the ways to sort of help",
    "start": "587790",
    "end": "595290"
  },
  {
    "text": "think about it is actually something Randy said earlier right which is don't",
    "start": "595290",
    "end": "600810"
  },
  {
    "text": "think about the size of a micro service in terms of its lines of code think",
    "start": "600810",
    "end": "607589"
  },
  {
    "text": "about the scope and how do you define scope well you need to understand what it is you're trying to achieve at a high",
    "start": "607589",
    "end": "613770"
  },
  {
    "text": "level you know one or two sentences and so I always like to think about and you",
    "start": "613770",
    "end": "621450"
  },
  {
    "text": "know this actually goes the question before around how do you know if if an API is done right it's really a negotiation between the user of a",
    "start": "621450",
    "end": "628050"
  },
  {
    "text": "service and the team that delivers that service right you need to track the usage if if your users are happy then",
    "start": "628050",
    "end": "635250"
  },
  {
    "text": "you're done and and well yeah assuming",
    "start": "635250",
    "end": "641070"
  },
  {
    "text": "you don't have to change it every every five minutes right and so yeah and so it",
    "start": "641070",
    "end": "647339"
  },
  {
    "text": "it really helps to think in terms of that framing understanding who the user",
    "start": "647339",
    "end": "652860"
  },
  {
    "text": "of the service is and and and going from",
    "start": "652860",
    "end": "659040"
  },
  {
    "text": "there and from from that perspective you can like just try a lot of different",
    "start": "659040",
    "end": "664500"
  },
  {
    "text": "kinds of AP is that will that will sort of serve the same mission and figure out what you need and again",
    "start": "664500",
    "end": "670740"
  },
  {
    "text": "track use you know track how successful you're making your users in order to measure your progress as you sort of",
    "start": "670740",
    "end": "677970"
  },
  {
    "text": "iterate through the difficult design space so that's what I would say so this",
    "start": "677970",
    "end": "691710"
  },
  {
    "start": "690000",
    "end": "892000"
  },
  {
    "text": "is a little bit of a flip response but I don't mean in any aggressive way do you guys know in your you guys build one",
    "start": "691710",
    "end": "697470"
  },
  {
    "text": "class like one like language class in Java or whatever no right how do you",
    "start": "697470",
    "end": "703380"
  },
  {
    "text": "figure out how to build and what the scope of the individual classes are this is rhetorical because like like that's a",
    "start": "703380",
    "end": "709950"
  },
  {
    "text": "design thing like okay the class is a single responsibility you know we try to make the interface relatively minimal we try not to be too chatty so the reason",
    "start": "709950",
    "end": "717330"
  },
  {
    "text": "why I asked it in that way is not to put you on the spot in any way but I've had this Congress that people again that work for me are totally laughing right",
    "start": "717330",
    "end": "723180"
  },
  {
    "text": "now because this is a come this is a thing that I've done many times with my team where we I mean this is a legit",
    "start": "723180",
    "end": "729030"
  },
  {
    "text": "thing to say mam microservices like we've never built services before have you built classes have you built like",
    "start": "729030",
    "end": "734990"
  },
  {
    "text": "interfaces like within the particular you know language environment that you are oh yeah we've totally done that how",
    "start": "734990",
    "end": "741450"
  },
  {
    "text": "do you figure out what goes in and out they're like oh that's so two per simple like we've been able to do that and we refine it over time that is the answer",
    "start": "741450",
    "end": "747540"
  },
  {
    "text": "does it make sense like you know way more than you think about how to design services if you design if you know how",
    "start": "747540",
    "end": "753930"
  },
  {
    "text": "to design classes for the most part you know how to design services the only difference is recognizing that you can't",
    "start": "753930",
    "end": "760620"
  },
  {
    "text": "be as chatty with services as you can be with something that's in process in your",
    "start": "760620",
    "end": "766710"
  },
  {
    "text": "in your well in your process does that make sense but other than that you already know I mean you already know if",
    "start": "766710",
    "end": "772890"
  },
  {
    "text": "you know how to build applications which you totally do by who was on your on your badge you already know a lot more",
    "start": "772890",
    "end": "779130"
  },
  {
    "text": "than you think you do about building services yeah I mean sort of decomposition applies at many levels",
    "start": "779130",
    "end": "784890"
  },
  {
    "text": "right like you you know in a sense you decompose methods you decompose classes",
    "start": "784890",
    "end": "791030"
  },
  {
    "text": "packages modules and then and so sort of Micra services is just yet another level",
    "start": "791030",
    "end": "796890"
  },
  {
    "text": "in that kind of hierarchy um one comment I would add though is that I mean I think sort of microservices tie kind",
    "start": "796890",
    "end": "804310"
  },
  {
    "text": "of have this important relationship with team structure as well like for me I'm",
    "start": "804310",
    "end": "810370"
  },
  {
    "text": "you know the kind of well this I think there's two models for micro-services there's like the super fine-grained",
    "start": "810370",
    "end": "816220"
  },
  {
    "text": "model which seems to be like one service per developer which seems to be happening at some companies right well",
    "start": "816220",
    "end": "824830"
  },
  {
    "text": "when you have like thousands of services I mean that's sort of that order of magnitude whereas another way of",
    "start": "824830",
    "end": "831250"
  },
  {
    "text": "thinking about services is that a small enough quote application that a team can",
    "start": "831250",
    "end": "836920"
  },
  {
    "text": "remain nimble and agile right and that's sort of another that's kind of a much",
    "start": "836920",
    "end": "843210"
  },
  {
    "text": "kind of a coarser grain model of micro services and so that kind of impacts",
    "start": "843210",
    "end": "849240"
  },
  {
    "text": "decomposition so yeah I mean it I think",
    "start": "849240",
    "end": "855190"
  },
  {
    "text": "it's probably a common problem for a lot of people in the room that they have a a a monolith yak that they want to shave",
    "start": "855190",
    "end": "862380"
  },
  {
    "text": "you know that's totally fine like like start shaving where you think",
    "start": "862380",
    "end": "867790"
  },
  {
    "text": "shaving adds value right and stop shaving when you aren't getting any more value right it's okay to have a monolith",
    "start": "867790",
    "end": "875740"
  },
  {
    "text": "if it's doing what it's supposed to do I know that might be heresy here but right",
    "start": "875740",
    "end": "882220"
  },
  {
    "text": "I mean if it's doing what it's supposed to do if it's not shave it right and",
    "start": "882220",
    "end": "887410"
  },
  {
    "text": "there's you know iterate sorry cuz this was an excellent question at the break I",
    "start": "887410",
    "end": "893260"
  },
  {
    "start": "892000",
    "end": "1010000"
  },
  {
    "text": "will shut up after this the excellent question was more or less hey our micro",
    "start": "893260",
    "end": "900010"
  },
  {
    "text": "services worth it and answer for most of us maybe not right it's total I mean",
    "start": "900010",
    "end": "905920"
  },
  {
    "text": "again as I tried to say in my talk like it's the 0.1% 0.01% that get to really",
    "start": "905920",
    "end": "911710"
  },
  {
    "text": "large where you absolutely I think there's no way Google Amazon Netflix stitch fix works at you know works",
    "start": "911710",
    "end": "918850"
  },
  {
    "text": "without some flavor of thing we'll call micro services but much smaller organisations if you don't have a huge",
    "start": "918850",
    "end": "924880"
  },
  {
    "text": "team if you don't have a huge load like it's totally legitimate to stick with a monolith like there's nothing wrong with",
    "start": "924880",
    "end": "929950"
  },
  {
    "text": "that the question has to be like when should I move to micro services I don't know when should you like when",
    "start": "929950",
    "end": "935139"
  },
  {
    "text": "are you reaching the point when your development velocity slows down where you're unable to scale things",
    "start": "935139",
    "end": "940540"
  },
  {
    "text": "independently where you know you're unable to have different parts of the system of all the different rates like that's the time where you like that's",
    "start": "940540",
    "end": "946839"
  },
  {
    "text": "the wall that you have to like scale with micro-services but if you're I mean if you're happy I'm happy let's say it",
    "start": "946839",
    "end": "952869"
  },
  {
    "text": "that way and I want to add to that like",
    "start": "952869",
    "end": "958859"
  },
  {
    "text": "you know if your development velocity is not where it needs to be I would",
    "start": "958859",
    "end": "963910"
  },
  {
    "text": "actually start to review your development practices before switching the micro-services so for instance if",
    "start": "963910",
    "end": "970389"
  },
  {
    "text": "you're not doing automated testing thoroughly right and and I think",
    "start": "970389",
    "end": "975609"
  },
  {
    "text": "probably 70 plus percent of organizations according to I think it",
    "start": "975609",
    "end": "981459"
  },
  {
    "text": "was a source lab report and not have not like completely embraced automated",
    "start": "981459",
    "end": "986919"
  },
  {
    "text": "testing and and so if you're one of those work on that first and then you",
    "start": "986919",
    "end": "994660"
  },
  {
    "text": "know once you've got the hang of that and you you really are able to automate as much as possible then think about the",
    "start": "994660",
    "end": "1001379"
  },
  {
    "text": "micro service architecture you know it's kind of like try running or walking",
    "start": "1001379",
    "end": "1006480"
  },
  {
    "text": "before you before you run yeah that's a great point excuse me that's a great point and a great thing to do is just it",
    "start": "1006480",
    "end": "1015600"
  },
  {
    "start": "1010000",
    "end": "1040000"
  },
  {
    "text": "doesn't need to be super heavyweight who's just track where you spend your time right if you're doing if you're",
    "start": "1015600",
    "end": "1020639"
  },
  {
    "text": "doing lots of manual testing and that's slowing you down you don't necessarily sort of think about that on a day to day basis and you",
    "start": "1020639",
    "end": "1028860"
  },
  {
    "text": "know if you're if you're spending a lot of time wrestling with particular areas of your monolith you know maybe that's",
    "start": "1028860",
    "end": "1034678"
  },
  {
    "text": "the time you should start shaving that particular patch of yak",
    "start": "1034679",
    "end": "1039800"
  },
  {
    "text": "so I think you know Randy gave a couple examples of why you might want to do that scale being kind of one of the more",
    "start": "1039800",
    "end": "1045140"
  },
  {
    "start": "1040000",
    "end": "1076000"
  },
  {
    "text": "obvious ones that's quoted in the industry I think there are other reasons right security it's mainly a big reason",
    "start": "1045140",
    "end": "1051290"
  },
  {
    "text": "why you might want to shave your monolith because you have two things that shouldn't be stuck together into",
    "start": "1051290",
    "end": "1056840"
  },
  {
    "text": "the same trust domain that's a really big reason the development experience is is clearly one right I mean release",
    "start": "1056840",
    "end": "1063110"
  },
  {
    "text": "velocity is a big deal so there's a variety of reasons out there then you know you guys know your domain you know",
    "start": "1063110",
    "end": "1070310"
  },
  {
    "text": "what's going on in your domain you should be able to reason about those reasons to make these types of decisions",
    "start": "1070310",
    "end": "1075850"
  },
  {
    "text": "yeah it's interesting and from my perspective I think you know micro services are primarily a way to tackle",
    "start": "1075850",
    "end": "1082750"
  },
  {
    "start": "1076000",
    "end": "1135000"
  },
  {
    "text": "complexity rather than scale scaling I mean obviously it is a way to scale but",
    "start": "1082750",
    "end": "1089090"
  },
  {
    "text": "complexity is first yeah the question",
    "start": "1089090",
    "end": "1095060"
  },
  {
    "text": "are long the can you guys maybe comment on what some of the patterns are that teams are using to get to micro services",
    "start": "1095060",
    "end": "1101480"
  },
  {
    "text": "do I start in the middle where it's like you know it really matters and it's a it's an important object or to do it do",
    "start": "1101480",
    "end": "1106940"
  },
  {
    "text": "I do it on the side where it really doesn't make a big difference and can I just slap like you know a REST API on an",
    "start": "1106940",
    "end": "1112070"
  },
  {
    "text": "existing app and call it a micro service sure well you know if you if you're you",
    "start": "1112070",
    "end": "1120890"
  },
  {
    "text": "know yearly bonus depends on having a micro service",
    "start": "1120890",
    "end": "1126550"
  },
  {
    "text": "[Laughter] but oh I was just gonna make a joke but",
    "start": "1126610",
    "end": "1134940"
  },
  {
    "text": "no I mean might you know microserver you know this I I this term micro service really does get heavily abused right",
    "start": "1134940",
    "end": "1142410"
  },
  {
    "start": "1135000",
    "end": "1220000"
  },
  {
    "text": "like this notion can I can we use a micro service for that is sort of just",
    "start": "1142410",
    "end": "1147840"
  },
  {
    "text": "kind of the wrong notion I mean from my perspective you know that you know microservice or micro service is a",
    "start": "1147840",
    "end": "1154320"
  },
  {
    "text": "shorthand for the micro service architecture which is an architectural style for an application so it's all",
    "start": "1154320",
    "end": "1161430"
  },
  {
    "text": "about having a system but I mean one one one way that one thing to think about is",
    "start": "1161430",
    "end": "1167880"
  },
  {
    "text": "if Mac so you've got this massive monolith right and if there's one part of it that's like under very very active",
    "start": "1167880",
    "end": "1174210"
  },
  {
    "text": "development and in other parts that are like you never touch then if you want to",
    "start": "1174210",
    "end": "1180390"
  },
  {
    "text": "extract them out you know if you want to build a micro service or a service then",
    "start": "1180390",
    "end": "1186180"
  },
  {
    "text": "then you know extract out the parts of your application that are frequently",
    "start": "1186180",
    "end": "1191250"
  },
  {
    "text": "changing because that will give you the sort of biggest bang for the buck you know if you think about your monolith",
    "start": "1191250",
    "end": "1197370"
  },
  {
    "text": "that's on the slow track of development and then anything you've extracted out as a micro service is on the fast track",
    "start": "1197370",
    "end": "1203400"
  },
  {
    "text": "you know rapid deploys and and and all of that so you want to you know invest",
    "start": "1203400",
    "end": "1209970"
  },
  {
    "text": "the effort in those areas that really really make a difference so as always I",
    "start": "1209970",
    "end": "1222840"
  },
  {
    "start": "1220000",
    "end": "1497000"
  },
  {
    "text": "have thoughts so here are my thoughts the step so we're gonna make some",
    "start": "1222840",
    "end": "1229020"
  },
  {
    "text": "architectural change from a monolith to microservices so first we need to prove to ourselves that this fancy you know",
    "start": "1229020",
    "end": "1235290"
  },
  {
    "text": "millennial way of doing micro services is actually a thing actually going to work in our environment right so the",
    "start": "1235290",
    "end": "1241110"
  },
  {
    "text": "step zero is to do a pilot and the way I like to think about that is let's take a",
    "start": "1241110",
    "end": "1247230"
  },
  {
    "text": "vertical end-to-end like actual experience that matters to our business like I don't know what your business is",
    "start": "1247230",
    "end": "1253140"
  },
  {
    "text": "but like let's imagine you have users and you know something that actually matters to users and build that in the",
    "start": "1253140",
    "end": "1258450"
  },
  {
    "text": "new way so it could legitimately legitimately be some new thing that you're gonna build in a new way or you're gonna rebuild a",
    "start": "1258450",
    "end": "1265670"
  },
  {
    "text": "thing that already exists in the new way either way take something that is a vertical end-to-end thing and build it",
    "start": "1265670",
    "end": "1272210"
  },
  {
    "text": "in the new way why for several reasons first we're doing the pilot because we want to de-risk it and we want to learn",
    "start": "1272210",
    "end": "1278060"
  },
  {
    "text": "all the things we don't yet know about this new micro service thing right so we're doing it as a pilot rather than",
    "start": "1278060",
    "end": "1284060"
  },
  {
    "text": "starting with you know rebuilding the entire infrastructure we do a vertical end-to-end user experience because we",
    "start": "1284060",
    "end": "1290870"
  },
  {
    "text": "actually want to be able to be focused on some particular thing and that tells",
    "start": "1290870",
    "end": "1296780"
  },
  {
    "text": "us what we need to do and what we don't need to do does it make sense like if we choose something that doesn't matter like well we don't know what's in or out",
    "start": "1296780",
    "end": "1303440"
  },
  {
    "text": "does it make sense like if we choose something that's actually useful then that will help us to focus on what is",
    "start": "1303440",
    "end": "1309770"
  },
  {
    "text": "the minimal thing that we need to do to get our job done and the other reason why we choose something useful is if",
    "start": "1309770",
    "end": "1316550"
  },
  {
    "text": "this doesn't work at the loop at the worst we've provided some value to our customers does that make sense so that's",
    "start": "1316550",
    "end": "1323240"
  },
  {
    "text": "the step zero that pilot now that we now that that pilot is successful and we have learned all these things about how",
    "start": "1323240",
    "end": "1329750"
  },
  {
    "text": "to do things in a new way let's call it micro services now the steps one through n are take the take the things that are",
    "start": "1329750",
    "end": "1336800"
  },
  {
    "text": "actually that have the highest return on investment not the easiest things not necessarily the hardest things but the",
    "start": "1336800",
    "end": "1343580"
  },
  {
    "text": "things that have the highest return on investment and we convert those to the new way first so this is a bit I'm in",
    "start": "1343580",
    "end": "1349280"
  },
  {
    "text": "sort of a trending like over you know like consume or like over arch all the",
    "start": "1349280",
    "end": "1354860"
  },
  {
    "text": "things all the comments that people have been making so like think about the areas that are really fast changing maybe that's the area that has the",
    "start": "1354860",
    "end": "1360710"
  },
  {
    "text": "highest ROI or maybe it's the part of your site that that has the highest revenue for example like that might be",
    "start": "1360710",
    "end": "1366830"
  },
  {
    "text": "an area where it would be really valuable to have that be able to move faster because maybe we can make more revenue does that make sense",
    "start": "1366830",
    "end": "1372830"
  },
  {
    "text": "so you start it's you've done the pilot so you've de-risked it and now the step one is have the thing that has the",
    "start": "1372830",
    "end": "1378710"
  },
  {
    "text": "highest return on investment then you do the second highest then you do the third highest and you keep going until you run",
    "start": "1378710",
    "end": "1384590"
  },
  {
    "text": "out of patience or you run out of resources to put against this tree architecture and the reason why you've done it in that order is if you run out",
    "start": "1384590",
    "end": "1391580"
  },
  {
    "text": "before you're done that's cool because the rivers the residual monolith that still exists is",
    "start": "1391580",
    "end": "1396740"
  },
  {
    "text": "something that you don't care too much about does it make sense like it doesn't have there wasn't the ROI it didn't kind",
    "start": "1396740",
    "end": "1402500"
  },
  {
    "text": "of go above the bar of what it would take for us to you know get motivated to",
    "start": "1402500",
    "end": "1408050"
  },
  {
    "text": "convert it to micro services and that's exactly what they did so when eBay was can that people who",
    "start": "1408050",
    "end": "1415580"
  },
  {
    "text": "were here or have heard me talk before I talk about like eBay had this monster C++ monolith and then they broke it up",
    "start": "1415580",
    "end": "1421130"
  },
  {
    "text": "into mini applications written in Java and the way they approached that ryoga tech chure so it wasn't micro services",
    "start": "1421130",
    "end": "1427070"
  },
  {
    "text": "but the principle is the same they once they did a pilot and convince themselves that Java could work in the eBay",
    "start": "1427070",
    "end": "1434540"
  },
  {
    "text": "infrastructure and you know with eBay skillset and people and all that kind of stuff then they basically reverse sorted",
    "start": "1434540",
    "end": "1441710"
  },
  {
    "text": "the site by like which page it like the site they took the pages on the site and reversed sort of them by revenue",
    "start": "1441710",
    "end": "1448130"
  },
  {
    "text": "contribution so the top revenue contributing page they actually converted that first not because they",
    "start": "1448130",
    "end": "1453800"
  },
  {
    "text": "desperately wanted to like have the greatest risk but because if and when they ran out of like patience money",
    "start": "1453800",
    "end": "1459860"
  },
  {
    "text": "resources whatever they at least would have done that most valuable thing first does it make sense and by the time even",
    "start": "1459860",
    "end": "1466280"
  },
  {
    "text": "by the time I left there in 2011 they had started the Ryoka tech chure and",
    "start": "1466280",
    "end": "1472280"
  },
  {
    "text": "like I don't know 2000 or 2002 or something about a wit and they had mostly finished it by I want to say 2007",
    "start": "1472280",
    "end": "1478400"
  },
  {
    "text": "maybe 2006 took him a while but even at the time I left as far as I know in 2011",
    "start": "1478400",
    "end": "1483800"
  },
  {
    "text": "there were still things that were on that v2 like C++ monolith architecture",
    "start": "1483800",
    "end": "1488870"
  },
  {
    "text": "but there were things that like nobody used they were super simple they didn't change right so like there was no ROI to",
    "start": "1488870",
    "end": "1494480"
  },
  {
    "text": "convert it to the new way there you go my question is about the the inner",
    "start": "1494480",
    "end": "1500840"
  },
  {
    "start": "1497000",
    "end": "1608000"
  },
  {
    "text": "communication between micro services so we do talk about having events so",
    "start": "1500840",
    "end": "1506120"
  },
  {
    "text": "service a would talk to service B I'm here by doing so yeah so so what if for",
    "start": "1506120",
    "end": "1512870"
  },
  {
    "text": "say a business critical services like say a credit card processing right and",
    "start": "1512870",
    "end": "1518360"
  },
  {
    "text": "say we see a lot of patterns by say Kafka or other brokers that hey once I received",
    "start": "1518360",
    "end": "1524440"
  },
  {
    "text": "the once the message is in the broker then there are ways to you know recover or you know like retry but what's the",
    "start": "1524440",
    "end": "1531750"
  },
  {
    "text": "recommendation to ensure that hey the credit processing service does issue at",
    "start": "1531750",
    "end": "1537460"
  },
  {
    "text": "the event I see for example Kafka has now kefka connect which assume that hey",
    "start": "1537460",
    "end": "1543250"
  },
  {
    "text": "with every DB commit or every DB transaction it could publish straight to",
    "start": "1543250",
    "end": "1548919"
  },
  {
    "text": "Kafka but what if your business object is not the same as what you have in your DB so I just wanted to get your ideas",
    "start": "1548919",
    "end": "1555759"
  },
  {
    "text": "here services owning the source of truth",
    "start": "1555759",
    "end": "1568149"
  },
  {
    "text": "so each application service is the source of truth for the data it's serving right so for example for payment",
    "start": "1568149",
    "end": "1573970"
  },
  {
    "text": "processing in a Netflix's case I don't think they use Kafka for that event",
    "start": "1573970",
    "end": "1579220"
  },
  {
    "text": "think they have different data store especially primarily they are using transactional data store for that",
    "start": "1579220",
    "end": "1585100"
  },
  {
    "text": "payment processing but basically the idea is each service is owning the piece",
    "start": "1585100",
    "end": "1590529"
  },
  {
    "text": "of data it's it's responsible for and is the source of truth for that right so",
    "start": "1590529",
    "end": "1596019"
  },
  {
    "text": "and that's how the interactions happen like other services will ask the service instead of directly either copying the",
    "start": "1596019",
    "end": "1602559"
  },
  {
    "text": "data set or having multiple copies in in their back end I mean I think there's",
    "start": "1602559",
    "end": "1609820"
  },
  {
    "start": "1608000",
    "end": "1701000"
  },
  {
    "text": "several parts to it so one is atomically publishing a message when the data",
    "start": "1609820",
    "end": "1615250"
  },
  {
    "text": "changes so essentially kind of like the kind of conceptually there's a",
    "start": "1615250",
    "end": "1621100"
  },
  {
    "text": "transaction involving updating the database and publishing a message and so",
    "start": "1621100",
    "end": "1627940"
  },
  {
    "text": "one of the things I'm going to cover in my talk which is next though apparently",
    "start": "1627940",
    "end": "1633129"
  },
  {
    "text": "the track host is not going to be there because he's giving a different talk so",
    "start": "1633129",
    "end": "1642070"
  },
  {
    "text": "anyway yeah so there's this whole thing around transactional what I call transactional messaging which is a way",
    "start": "1642070",
    "end": "1648399"
  },
  {
    "text": "to which is kind of a super interesting topic and so it ends up reliably being published",
    "start": "1648399",
    "end": "1655970"
  },
  {
    "text": "to the message broker so that's you know step one and then step two your message broker obviously has to be reliable so",
    "start": "1655970",
    "end": "1662420"
  },
  {
    "text": "that's what Randi was talking about with at least once delivery and though then",
    "start": "1662420",
    "end": "1667490"
  },
  {
    "text": "yeah then that the risk consumer end you need item potent event or message",
    "start": "1667490",
    "end": "1674510"
  },
  {
    "text": "handling to ensure the correct semantics and that that might just involve keeping",
    "start": "1674510",
    "end": "1680810"
  },
  {
    "text": "literally keeping track of all of the message IDs that you've seen recently",
    "start": "1680810",
    "end": "1686290"
  },
  {
    "text": "yeah it's a whole complex topic which some of which I'm going to talk about later this afternoon some of which I",
    "start": "1686290",
    "end": "1693500"
  },
  {
    "text": "cover in my book microservice patterns shameless plug I just wanted add a",
    "start": "1693500",
    "end": "1702230"
  },
  {
    "start": "1701000",
    "end": "1749000"
  },
  {
    "text": "thought just to reference back to the you know it it's like designing classes I think this area of ownership is a",
    "start": "1702230",
    "end": "1710150"
  },
  {
    "text": "ownership and the whole area of communication right where this whole",
    "start": "1710150",
    "end": "1715820"
  },
  {
    "text": "event thing and that's where transfer you're transferring responsibility for ownership of some data and that's where",
    "start": "1715820",
    "end": "1721820"
  },
  {
    "text": "this where micro services get the most different from designing classes or one",
    "start": "1721820",
    "end": "1728480"
  },
  {
    "text": "of the areas where they get the most different from designing sort of traditional class api's because you don't have to worry about you don't have",
    "start": "1728480",
    "end": "1735320"
  },
  {
    "text": "this same sort of locality of data in the context of a you know a class",
    "start": "1735320",
    "end": "1742040"
  },
  {
    "text": "hierarchy so it's just something to keep an eye out for just a follow-up question",
    "start": "1742040",
    "end": "1750980"
  },
  {
    "start": "1749000",
    "end": "1772000"
  },
  {
    "text": "I guess a bit of a dovetail on the last one related to the event-driven",
    "start": "1750980",
    "end": "1756590"
  },
  {
    "text": "architecture can you share your thoughts from the panel on the use of either pass",
    "start": "1756590",
    "end": "1761660"
  },
  {
    "text": "by value pass by reference on those messages and how the consumers work with that message and maybe your thoughts on",
    "start": "1761660",
    "end": "1767570"
  },
  {
    "text": "how how to handle ordering of those Oh III can give my opinion which might",
    "start": "1767570",
    "end": "1776540"
  },
  {
    "text": "also be slightly heretical here but this might be influenced by Google's scale we mostly don't do it most service to",
    "start": "1776540",
    "end": "1785690"
  },
  {
    "text": "service communication is not reconciled through a broker right we we use things",
    "start": "1785690",
    "end": "1790760"
  },
  {
    "text": "like retries and network level things to get scale by not hitting storage you",
    "start": "1790760",
    "end": "1798530"
  },
  {
    "text": "know it so again this is one of those scale questions right if persistent queues and storage gives you reliability",
    "start": "1798530",
    "end": "1804020"
  },
  {
    "text": "that you need at your application level at scale then you should use it but I think at certain scales some of those",
    "start": "1804020",
    "end": "1809990"
  },
  {
    "text": "patterns might become a bit more limiting particularly depending on the amount of work waiting for that right so",
    "start": "1809990",
    "end": "1817550"
  },
  {
    "text": "that it's it's not that we're anti that pattern per se we do use that pattern and you know in particular we make sure",
    "start": "1817550",
    "end": "1824330"
  },
  {
    "text": "we use that pattern encapsulated behind an API with a known like a clear segmentation of responsibility but for",
    "start": "1824330",
    "end": "1831740"
  },
  {
    "text": "the most part we don't do it we don't do rendevouz we don't do that type of thing I can't believe you don't use Kafka we",
    "start": "1831740",
    "end": "1842390"
  },
  {
    "text": "have things that look like it yeah no I mean yeah no that was a joke but after",
    "start": "1842390",
    "end": "1848450"
  },
  {
    "text": "the Kafka seems fashionable so right here rightly or wrongly so for me like",
    "start": "1848450",
    "end": "1855970"
  },
  {
    "start": "1854000",
    "end": "1961000"
  },
  {
    "text": "so when you when we've been talking about event in my brain what I've translated that into is domain events",
    "start": "1855970",
    "end": "1863690"
  },
  {
    "text": "which are a concept from domain driven design so if you go read one of the DDD",
    "start": "1863690",
    "end": "1869930"
  },
  {
    "text": "books you know they they've you know like implementing DDD by Bourne Vernon",
    "start": "1869930",
    "end": "1876170"
  },
  {
    "text": "or Vernon born you know that actually has a whole chapter I think it is on",
    "start": "1876170",
    "end": "1881270"
  },
  {
    "text": "domain events and and so and you know and in terms of how much data you have",
    "start": "1881270",
    "end": "1886430"
  },
  {
    "text": "in you should include in an event you have a choice right like if an order is",
    "start": "1886430",
    "end": "1892010"
  },
  {
    "text": "created you could just Inc publish the order ID but that's not much used to a consumer because they would then have to",
    "start": "1892010",
    "end": "1898700"
  },
  {
    "text": "go get that order and so in general there's this concept of event enrichment",
    "start": "1898700",
    "end": "1903710"
  },
  {
    "text": "that says put useful data that will be typically useful to a",
    "start": "1903710",
    "end": "1909380"
  },
  {
    "text": "consumer in in the event and for me yeah",
    "start": "1909380",
    "end": "1915020"
  },
  {
    "text": "like when you publish in an order created event just stuff the order details in there and then of course if",
    "start": "1915020",
    "end": "1920390"
  },
  {
    "text": "you're using event sourcing where events are your storage mechanism for your",
    "start": "1920390",
    "end": "1926330"
  },
  {
    "text": "domain objects you have no choice except to put the necessary data in that and",
    "start": "1926330",
    "end": "1932300"
  },
  {
    "text": "then no your other point was ordering yes and I think ordered at least once",
    "start": "1932300",
    "end": "1938210"
  },
  {
    "text": "delivery of domain events is really really important because you know if",
    "start": "1938210",
    "end": "1944180"
  },
  {
    "text": "they arrive out of order then you're gonna have pretty weird behavior I mean",
    "start": "1944180",
    "end": "1950480"
  },
  {
    "text": "there might be other situations where you don't care about delivery and you can just pub/sub an event but or",
    "start": "1950480",
    "end": "1957230"
  },
  {
    "text": "ordering is usually quite important you",
    "start": "1957230",
    "end": "1962270"
  },
  {
    "start": "1961000",
    "end": "2138000"
  },
  {
    "text": "have you ask the question which is how do I deal with event delivery where I might get the thing multiple times and",
    "start": "1962270",
    "end": "1967850"
  },
  {
    "text": "how do I deal with event ordering so both of those problems obviously you don't have when you're in process and when you are you know doing messaging",
    "start": "1967850",
    "end": "1974630"
  },
  {
    "text": "across a distributed system like you have those problems and yeah I mean I think we've all given parts of the",
    "start": "1974630",
    "end": "1982250"
  },
  {
    "text": "answer I guess I would say I mean I keep threatening to do this event masterclass",
    "start": "1982250",
    "end": "1987290"
  },
  {
    "text": "because like these questions like every single time we give this you know I talk about this stuff you should do it at",
    "start": "1987290",
    "end": "1992870"
  },
  {
    "text": "least once there you go well played well played",
    "start": "1992870",
    "end": "1998170"
  },
  {
    "text": "so yeah let's see again so on delivery you can have at most once or at least",
    "start": "1998170",
    "end": "2004630"
  },
  {
    "text": "once if you care about your event you want at least once right so that is on failure I deliver it two times three",
    "start": "2004630",
    "end": "2010720"
  },
  {
    "text": "times n times most once is basically for logging data things that on fail you you",
    "start": "2010720",
    "end": "2015910"
  },
  {
    "text": "want to drop so that's like it happens either a one time or zero time so unfair you drop it again that's not that's not",
    "start": "2015910",
    "end": "2023650"
  },
  {
    "text": "domain events do not fall in that category typically but you know logging things are yeah so that's the first",
    "start": "2023650",
    "end": "2029020"
  },
  {
    "text": "thing and then obviously you get the same multiple times so now you have to be idempotent in other words the consumer has to be able to correctly",
    "start": "2029020",
    "end": "2035110"
  },
  {
    "text": "process the same event potentially multiple times lots of techniques there CRD T's or",
    "start": "2035110",
    "end": "2040390"
  },
  {
    "text": "thing you should look into if if you are kept up at night by these kinds of problems conflict conflict-free",
    "start": "2040390",
    "end": "2047440"
  },
  {
    "text": "replicated data types and then in terms of event ordering a one of several ways",
    "start": "2047440",
    "end": "2053500"
  },
  {
    "text": "to deal with it so you can either try to deal with event ordering in the bus yeah",
    "start": "2053500",
    "end": "2059139"
  },
  {
    "text": "that's not so great another way to deal with it is to have events be the",
    "start": "2059140",
    "end": "2066550"
  },
  {
    "text": "notification of a thing happening and then you go and read back to the service that produced the event for the current",
    "start": "2066550",
    "end": "2072580"
  },
  {
    "text": "state of things that these are all legit ways of handling the problem and think",
    "start": "2072580",
    "end": "2079210"
  },
  {
    "text": "about this these answers as less there's one there's like Randy's way to do it versus Chris's way to do it versus",
    "start": "2079210",
    "end": "2084220"
  },
  {
    "text": "Louis's there's like there is a space of possible solutions to this problem and what you really should take away from it",
    "start": "2084220",
    "end": "2089980"
  },
  {
    "text": "is don't try to solve this yourself by reasoning from first principles because I have tried that many times like oh",
    "start": "2089980",
    "end": "2096850"
  },
  {
    "text": "this looks easy like no it's super is not actually but lots of good people have done lots of thinking about this",
    "start": "2096850",
    "end": "2103240"
  },
  {
    "text": "for decades so I guess I would just suggest going into oh one more thing",
    "start": "2103240",
    "end": "2108340"
  },
  {
    "text": "Martin Fowler of refactoring Fame gave a wonderful keynote it's pretty shorts",
    "start": "2108340",
    "end": "2114970"
  },
  {
    "text": "like 18 minutes at go to Chicago this year it's on YouTube and it's some flavor of like all the different things",
    "start": "2114970",
    "end": "2121300"
  },
  {
    "text": "of event architecture it's about a venture of an architecture and he does in his wonderful way very clearly he",
    "start": "2121300",
    "end": "2128560"
  },
  {
    "text": "goes through the pros and cons of events as notification events that carry the data with it event sourcing etc so like",
    "start": "2128560",
    "end": "2135520"
  },
  {
    "text": "that's a that's well worth your 18 minutes to check out I want to throw in a cautionary tale or honestly you're",
    "start": "2135520",
    "end": "2143230"
  },
  {
    "start": "2138000",
    "end": "2186000"
  },
  {
    "text": "powerful but you know I gave a talk earlier and I talked about superpowers and beware of superpowers event brokers",
    "start": "2143230",
    "end": "2151330"
  },
  {
    "text": "or superpowers all right be very careful when you put things into queues if you don't know where they're gonna come out",
    "start": "2151330",
    "end": "2157270"
  },
  {
    "text": "or how they're gonna come out or who they're gonna come out to if you don't know the answers to those questions",
    "start": "2157270",
    "end": "2163300"
  },
  {
    "text": "you probably shouldn't put things in a queue until you can answer those questions right if you have data that",
    "start": "2163300",
    "end": "2168910"
  },
  {
    "text": "you care about or your users care about you need to be able to at least reason about those things to some",
    "start": "2168910",
    "end": "2174550"
  },
  {
    "text": "now I know event brokers have been pitched as a way to give operators control so that they can answer those",
    "start": "2174550",
    "end": "2180970"
  },
  {
    "text": "questions validate that okay hey",
    "start": "2180970",
    "end": "2187140"
  },
  {
    "start": "2186000",
    "end": "2240000"
  },
  {
    "text": "question from here again so let's look at some evolution all right so initially",
    "start": "2187140",
    "end": "2193720"
  },
  {
    "text": "when the web started everybody was writing interesting apps then came rails",
    "start": "2193720",
    "end": "2199690"
  },
  {
    "text": "and MVC and rest and people started writing that and we hit scale at large monolithic apps slowing us down today",
    "start": "2199690",
    "end": "2206920"
  },
  {
    "text": "the buzzword bang bandwagon is micro-services you go anywhere you cannot walk two feet into a company and",
    "start": "2206920",
    "end": "2212650"
  },
  {
    "text": "not hear micro-services so what if we just step back if we just step back and",
    "start": "2212650",
    "end": "2218260"
  },
  {
    "text": "say what are some things that you foresee will happen for the micro",
    "start": "2218260",
    "end": "2224140"
  },
  {
    "text": "service train saturates what's next micro functions did not",
    "start": "2224140",
    "end": "2229930"
  },
  {
    "text": "already happen so I just want just wanted to see what step back and see",
    "start": "2229930",
    "end": "2235420"
  },
  {
    "text": "from a different zoom out lens what's next what will happen what do you think will happen hypothetically I'll give the",
    "start": "2235420",
    "end": "2242260"
  },
  {
    "start": "2240000",
    "end": "2393000"
  },
  {
    "text": "meta answer and then I'll get you guys fill it in the meta answer is look at what Google is doing now Amazon is doing",
    "start": "2242260",
    "end": "2247990"
  },
  {
    "text": "now Netflix is doing now because but I mean meaning no shame like if you're ant",
    "start": "2247990",
    "end": "2253510"
  },
  {
    "text": "sick asking that question I mean I'm just gonna be flipped like if you're asking that question you're five years or ten years behind these people and",
    "start": "2253510",
    "end": "2259180"
  },
  {
    "text": "that's a good thing because you don't have to experience and like reason about those things from first principles you",
    "start": "2259180",
    "end": "2264490"
  },
  {
    "text": "can look at what you know what these larger architectures are sharing that's that's part of the answer yeah I mean",
    "start": "2264490",
    "end": "2273340"
  },
  {
    "text": "that's an interesting one I mean that there is at some level there is sort of a limit beyond which it doesn't",
    "start": "2273340",
    "end": "2281610"
  },
  {
    "text": "meaningfully make sense to decompose a module right so like if you go back to",
    "start": "2281610",
    "end": "2287290"
  },
  {
    "text": "you know some of the classic work in object-oriented design the common closure principle right it says that",
    "start": "2287290",
    "end": "2293200"
  },
  {
    "text": "things for the same the change for the same reason should be packaged together right and so if you and what that means",
    "start": "2293200",
    "end": "2300880"
  },
  {
    "text": "is that if you decompose a package into two two packages and really the",
    "start": "2300880",
    "end": "2307620"
  },
  {
    "text": "split this business concept across those two packages then whenever that business concept changes you're changing that",
    "start": "2307620",
    "end": "2313680"
  },
  {
    "text": "both of those packages so you're gonna see this lockstep and so that's kind of this certainly the tomaters it's like",
    "start": "2313680",
    "end": "2320310"
  },
  {
    "text": "pattern in an anti pattern in the micro service architecture distributed",
    "start": "2320310",
    "end": "2326700"
  },
  {
    "text": "monolith where you're really releasing large number of multiple services",
    "start": "2326700",
    "end": "2332420"
  },
  {
    "text": "simultaneously because of that so that's one part which is sort of from a logical",
    "start": "2332420",
    "end": "2337530"
  },
  {
    "text": "perspective and then you could but then you know from a just sort of nuts and bolts technical thing you can certainly",
    "start": "2337530",
    "end": "2343020"
  },
  {
    "text": "say that like when it comes to deployment right our unit of deployment has been getting you know it's a lot",
    "start": "2343020",
    "end": "2350280"
  },
  {
    "text": "more increasingly lighter weight and more ephemeral right so like ten years",
    "start": "2350280",
    "end": "2355410"
  },
  {
    "text": "ago if you wanted to deploy something you had to go get a physical machine or 15 years ago anyway",
    "start": "2355410",
    "end": "2360570"
  },
  {
    "text": "now you just deploy a lambda on AWS right and you know that's like you know",
    "start": "2360570",
    "end": "2368400"
  },
  {
    "text": "it's such a short amount of time that's like a radical transformation in how we deploy things and so that that to me is",
    "start": "2368400",
    "end": "2378480"
  },
  {
    "text": "one kind of huge trend though even from a design point of view there's some you",
    "start": "2378480",
    "end": "2384390"
  },
  {
    "text": "know there is this you kind of this common closure principle you kind of have to keep in mind though so there's",
    "start": "2384390",
    "end": "2395400"
  },
  {
    "start": "2393000",
    "end": "2473000"
  },
  {
    "text": "there's a way I like to think about this question that's I think very complementary with this but sort of a",
    "start": "2395400",
    "end": "2401580"
  },
  {
    "text": "little bit of a different perspective and that's thinking about it in terms of the trends of sort of how many people you need to accomplish something because",
    "start": "2401580",
    "end": "2408050"
  },
  {
    "text": "if you look at the transition from monolith to microservices sort of",
    "start": "2408050",
    "end": "2413880"
  },
  {
    "text": "through the organizational lens it's almost like a shift in the division of labor right you're you're taking the",
    "start": "2413880",
    "end": "2419940"
  },
  {
    "text": "output of you know a team and engineering team of thousands of people and you're fundamentally assembling the",
    "start": "2419940",
    "end": "2427020"
  },
  {
    "text": "output of that work in a different way into a single coherent whole and the trend has been like if you look at you",
    "start": "2427020",
    "end": "2432930"
  },
  {
    "text": "know what ten years ago the the size of a team it took to deliver a given",
    "start": "2432930",
    "end": "2439020"
  },
  {
    "text": "service right I mean today a teenager could do the same thing like out of his parents basement in a weekend",
    "start": "2439020",
    "end": "2444860"
  },
  {
    "text": "and so or at least close to that all",
    "start": "2444860",
    "end": "2450060"
  },
  {
    "text": "right and so I think that the limit of this really comes down to okay",
    "start": "2450060",
    "end": "2455250"
  },
  {
    "text": "right what's the point where that team size you know you can effectively stop",
    "start": "2455250",
    "end": "2462330"
  },
  {
    "text": "shrinking that it's it's how much sort of a single developer can can absorb and accomplish until you throw in something",
    "start": "2462330",
    "end": "2468270"
  },
  {
    "text": "like AI which you know I'm sure people are doing now well I mean oh wait can I",
    "start": "2468270",
    "end": "2476130"
  },
  {
    "start": "2473000",
    "end": "2536000"
  },
  {
    "text": "just respond I mean one thing that's interesting is I you know I don't know whether the the productivity of an",
    "start": "2476130",
    "end": "2483450"
  },
  {
    "text": "innovative individual developer writing code has improved right like like",
    "start": "2483450",
    "end": "2492120"
  },
  {
    "text": "writing creating brand new code because I think you know I look back and some",
    "start": "2492120",
    "end": "2497130"
  },
  {
    "text": "things have changed right like machines have got faster and bigger you know if",
    "start": "2497130",
    "end": "2502770"
  },
  {
    "text": "we get stuck there's Google or Stack Overflow and then there's all this open",
    "start": "2502770",
    "end": "2509220"
  },
  {
    "text": "source stuff so we can quickly get you know as assemble a bunch of libraries together and if we get stuck we Google",
    "start": "2509220",
    "end": "2516690"
  },
  {
    "text": "at Google the answer but in terms of writing code from scratch I feel like",
    "start": "2516690",
    "end": "2522780"
  },
  {
    "text": "it's still an individual developer muddling along somehow scratching their head and and and and if that hasn't",
    "start": "2522780",
    "end": "2530520"
  },
  {
    "text": "changed you know we don't we haven't had a Moore's law for software development in that regard so you know if we're in",
    "start": "2530520",
    "end": "2538710"
  },
  {
    "start": "2536000",
    "end": "2613000"
  },
  {
    "text": "the word realm of predictions you know I think some of the answer is sitting",
    "start": "2538710",
    "end": "2543930"
  },
  {
    "text": "outside there in the vendor booths right more and more of your code is running on the same network and I don't mean yours",
    "start": "2543930",
    "end": "2549600"
  },
  {
    "text": "I mean all of you at the same time right you're all putting your code into big",
    "start": "2549600",
    "end": "2554700"
  },
  {
    "text": "cloud vendors your code is much more local with everybody else in this room than it was before right so you have",
    "start": "2554700",
    "end": "2559890"
  },
  {
    "text": "this really interesting networking effect right micro services aren't just a way for you to build services it's",
    "start": "2559890",
    "end": "2567090"
  },
  {
    "text": "also a way for you to consume services that other people have built for you so I think you know when I look out there",
    "start": "2567090",
    "end": "2573420"
  },
  {
    "text": "and I see vendors certain certain types of services the thing that strikes me is that they're",
    "start": "2573420",
    "end": "2578519"
  },
  {
    "text": "smaller versions of things that bigger vendors used to sell right I'm pretty",
    "start": "2578519",
    "end": "2583740"
  },
  {
    "text": "sure I look at the APM space when I see that I think you'll probably see that trend continue where there will be more",
    "start": "2583740",
    "end": "2588930"
  },
  {
    "text": "micro vendors right there will be more market places around acquiring services that help you do interesting things",
    "start": "2588930",
    "end": "2595400"
  },
  {
    "text": "somebody asked me today about geolocation today right you can buy geolocation as a service right it's a",
    "start": "2595400",
    "end": "2602910"
  },
  {
    "text": "tiny little service it was very very little in terms of an API and a huge amount in terms of the backend I think",
    "start": "2602910",
    "end": "2609420"
  },
  {
    "text": "that's one thing that we may expect to see going forward I think those there's",
    "start": "2609420",
    "end": "2615240"
  },
  {
    "start": "2613000",
    "end": "2643000"
  },
  {
    "text": "two answers SPARC atha so those two responses Park I thought of me and that's yeah you're absolutely right I don't think an individual developer",
    "start": "2615240",
    "end": "2621990"
  },
  {
    "text": "writes more lines of code because I think they spend but there's still a way more productive and that's because they",
    "start": "2621990",
    "end": "2627210"
  },
  {
    "text": "spend a lot of time figuring out how to assemble other things and the other things that you just mentioned or what",
    "start": "2627210",
    "end": "2633660"
  },
  {
    "text": "you just mentioned is is an example of sort of that marketplace of other things to assemble so so when I log into an",
    "start": "2633660",
    "end": "2644809"
  },
  {
    "start": "2643000",
    "end": "2809000"
  },
  {
    "text": "application like Netflix it's a pretty frictionless user experience you know I",
    "start": "2644809",
    "end": "2650640"
  },
  {
    "text": "log in one time I don't get a sense I'm logging into the micro service for my user profile and then I don't log into",
    "start": "2650640",
    "end": "2657180"
  },
  {
    "text": "or re-experience the my customer history etc so how in micro services",
    "start": "2657180",
    "end": "2663960"
  },
  {
    "text": "architecture do you maintain this frictionless UI because most of us are writing applications that span multiple",
    "start": "2663960",
    "end": "2670910"
  },
  {
    "text": "multiple services but from a user standpoint it's really just one thing that they're trying to one application",
    "start": "2670910",
    "end": "2678119"
  },
  {
    "text": "they're trying to go to so how do I maintain the advantages of a share",
    "start": "2678119",
    "end": "2683880"
  },
  {
    "text": "nothing architecture where I can deploy independently I don't create all these dependencies between them but at the",
    "start": "2683880",
    "end": "2689940"
  },
  {
    "text": "same time I'm maintaining a user experience as frictionless that's unified that has the same consistent",
    "start": "2689940",
    "end": "2696539"
  },
  {
    "text": "look and feel so thanks sure",
    "start": "2696539",
    "end": "2701690"
  },
  {
    "text": "hello yeah so the way to look at that is like there are different tiers in the",
    "start": "2703300",
    "end": "2710150"
  },
  {
    "text": "micro service layer as well so there is front-end which is taking all the user traffic and then you have middle tier",
    "start": "2710150",
    "end": "2716300"
  },
  {
    "text": "and then back in tier which is basically your membership and all the core services which give that data set to you",
    "start": "2716300",
    "end": "2723170"
  },
  {
    "text": "so in terms of the UI integration there is a lot of interaction between these",
    "start": "2723170",
    "end": "2729350"
  },
  {
    "text": "services but at this at any given time the point of the source of truth is just",
    "start": "2729350",
    "end": "2735500"
  },
  {
    "text": "one service right so in in terms of interactions with the UI all our UI team",
    "start": "2735500",
    "end": "2740630"
  },
  {
    "text": "and I am NOT I don't have a lot of insights into the UI layer but they do a great job in",
    "start": "2740630",
    "end": "2747020"
  },
  {
    "text": "making sure all the interactions between these micro services and and the result",
    "start": "2747020",
    "end": "2752090"
  },
  {
    "text": "sets they are getting in the UI are seamless basically there's a lot of work which goes on behind the scenes but but",
    "start": "2752090",
    "end": "2759980"
  },
  {
    "text": "each micro service is not related to the other so that ways you know which service to call so though there is a lot",
    "start": "2759980",
    "end": "2766190"
  },
  {
    "text": "of interaction you have fallbacks as well so from the UI point of view you don't see that you are having a degraded",
    "start": "2766190",
    "end": "2772190"
  },
  {
    "text": "experience so for example if you're not able to hit we are not able to give you your personalized low Lumos list of",
    "start": "2772190",
    "end": "2779540"
  },
  {
    "text": "movies to watch for being that service if you are not able to go to that service we may fall you back to a",
    "start": "2779540",
    "end": "2785810"
  },
  {
    "text": "fallback page which is which is a generic low lumo so you may not experience degraded service you may not",
    "start": "2785810",
    "end": "2792080"
  },
  {
    "text": "think that you are seeing you're not seeing your active list of movies but within that service it's",
    "start": "2792080",
    "end": "2797420"
  },
  {
    "text": "basically giving you the fallback experience so great so we are out of",
    "start": "2797420",
    "end": "2803000"
  },
  {
    "text": "time that was an awesome set of questions thank you so much",
    "start": "2803000",
    "end": "2807790"
  },
  {
    "text": "you",
    "start": "2808140",
    "end": "2810200"
  }
]