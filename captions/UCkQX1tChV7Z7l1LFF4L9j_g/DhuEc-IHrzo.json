[
  {
    "start": "0",
    "end": "80000"
  },
  {
    "text": "cool so yeah I'm really excited about this track Devex and DevOps personally it's very exciting to me because at",
    "start": "3950",
    "end": "10700"
  },
  {
    "text": "least everyone be we did have this historical problem of people building Devex tooling and DevOps to link",
    "start": "10700",
    "end": "15950"
  },
  {
    "text": "separately but not really like unifying those two sets of toiling and that's like something I've really been",
    "start": "15950",
    "end": "21170"
  },
  {
    "text": "championing it everybody so yeah I'm just seeing this track like bringing these two worlds together for me is super exciting so yeah I'm gonna talk",
    "start": "21170",
    "end": "28160"
  },
  {
    "text": "about developing crazy sources at everybody scale and like what does that look like cool so raise our head if you",
    "start": "28160",
    "end": "34220"
  },
  {
    "text": "know what could be nice is you've heard of it okay okay keep your hands raised who here has used kubernetes okay who",
    "start": "34220",
    "end": "42650"
  },
  {
    "text": "here has used grace in production so for like their real services over 10",
    "start": "42650",
    "end": "47960"
  },
  {
    "text": "services 50 services 250 services",
    "start": "47960",
    "end": "53589"
  },
  {
    "text": "alright some people if your hands okay so up kind of the scale we're looking at right now is you know rapidly adopting",
    "start": "53589",
    "end": "61670"
  },
  {
    "text": "Cooper days for hundreds of services so more critical than others but all of them serving production traffic so I'm",
    "start": "61670",
    "end": "68689"
  },
  {
    "text": "Melanie I work on the service orchestration team at Airbnb and our team's goal is to empower the rest of",
    "start": "68689",
    "end": "74210"
  },
  {
    "text": "our engineering team to create build and operate their own services at our scale",
    "start": "74210",
    "end": "79689"
  },
  {
    "text": "so first I'm going to give a brief history of infrastructure urban beam so",
    "start": "79689",
    "end": "85789"
  },
  {
    "text": "we had our monolith and who you saw at Jessica's talk a few days ago yeah so",
    "start": "85789",
    "end": "91310"
  },
  {
    "text": "I'm not gonna spend too much time on this basically a monolith got kind of scary around 2015 we knew we had to do",
    "start": "91310",
    "end": "97729"
  },
  {
    "text": "micro sources our engineering team was over a thousand engineers last year and",
    "start": "97729",
    "end": "103039"
  },
  {
    "text": "that's also pretty scary and then I also saw Ben's talk yesterday talking about",
    "start": "103039",
    "end": "110329"
  },
  {
    "text": "you know why micro sources and he's totally spot-on about engineering velocity and trying to scale engineering",
    "start": "110329",
    "end": "116659"
  },
  {
    "text": "and shipping your orange or guitar and how do you orchestrate that so yeah",
    "start": "116659",
    "end": "122539"
  },
  {
    "text": "basically we need to scale or continuous delivery cycles so each of these is a service rather than like one big monolith and I really like this chart as",
    "start": "122539",
    "end": "131120"
  },
  {
    "text": "well on this is actual data and I can barely fit it on to our slide because of the exponential growth but this is the",
    "start": "131120",
    "end": "137390"
  },
  {
    "text": "sense all of our deploys per week for all of our projects and all of the environments they're in so the reason this is",
    "start": "137390",
    "end": "143360"
  },
  {
    "text": "exponential is both because we have exponentially more services and also because we have exponentially more",
    "start": "143360",
    "end": "148670"
  },
  {
    "text": "environments and that's actually very interesting to me because we don't want engineers to test in production just",
    "start": "148670",
    "end": "154670"
  },
  {
    "text": "develop locally in development we actually want them to test their changes on a suite of pre-development tiers so",
    "start": "154670",
    "end": "160430"
  },
  {
    "text": "we have like Canaries staging load testing environments Diffie type",
    "start": "160430",
    "end": "165620"
  },
  {
    "text": "environments etc the other thing you'll notice on this slide is there's like big dips around Christmas so we actually",
    "start": "165620",
    "end": "171890"
  },
  {
    "text": "take a holiday break every year because we don't want to ruin Christmas by shipping by code and I also really like",
    "start": "171890",
    "end": "179360"
  },
  {
    "text": "this slide because this shows that despite like when we were first working on services there was a bit of a",
    "start": "179360",
    "end": "185959"
  },
  {
    "text": "existential moment where monolith contributions we're still going up exponentially and we weren't sure if we",
    "start": "185959",
    "end": "191209"
  },
  {
    "text": "were doing enough to save us off but we actually have stayed off contributions to our mone always yeah we're looking at",
    "start": "191209",
    "end": "197810"
  },
  {
    "text": "125,000 production two plays per year which is both exciting and very scary so how do we make that a good experience",
    "start": "197810",
    "end": "204380"
  },
  {
    "text": "for our developers and also you know keep everything up and running so the",
    "start": "204380",
    "end": "211130"
  },
  {
    "text": "reason I split these slides into why micro sources and why kubernetes is our decisions for micro services predates",
    "start": "211130",
    "end": "217190"
  },
  {
    "text": "kubernetes or any mainstream adoption and you can actually think of these decisions separately so if you go back a",
    "start": "217190",
    "end": "224390"
  },
  {
    "text": "decade ago our infrastructure was not evolved in any way just like typical startup no configuration management to",
    "start": "224390",
    "end": "231019"
  },
  {
    "text": "speak of maybe five years ago we started polyol bit earlier than that we realized",
    "start": "231019",
    "end": "237769"
  },
  {
    "text": "we need some kind of configuration management and we standardized on chef so for us we needed to obviously manage",
    "start": "237769",
    "end": "244340"
  },
  {
    "text": "our different services decision we came to was basically this huge chef cookbook",
    "start": "244340",
    "end": "249670"
  },
  {
    "text": "like series of recipes and all that and like the interaction between all these",
    "start": "249670",
    "end": "255170"
  },
  {
    "text": "recipes and cookbooks were pretty non-standardized so it was pretty frequent where someone would like modify",
    "start": "255170",
    "end": "261200"
  },
  {
    "text": "one recipe and it would just have like take down another service when they converged and stuff like that so like",
    "start": "261200",
    "end": "267410"
  },
  {
    "text": "this very complex hierarchy of services inheriting configuration before each other was not working for us and",
    "start": "267410",
    "end": "273340"
  },
  {
    "text": "additionally one other feature because it was a mutable infrastructure someone",
    "start": "273340",
    "end": "278950"
  },
  {
    "text": "could SSH into a box and like apt-get install some package and that package was just hanging around you know it's",
    "start": "278950",
    "end": "285460"
  },
  {
    "text": "not declarative so things like things accumulate it's kind of scary and so we",
    "start": "285460",
    "end": "291490"
  },
  {
    "text": "kind of landed on this decision that we needed to rethink our configuration story and and get some additional",
    "start": "291490",
    "end": "298420"
  },
  {
    "text": "properties that communities gets us and so I'm just gonna break down those properties like what made communities in particular compelling to us compared to",
    "start": "298420",
    "end": "304570"
  },
  {
    "text": "other options so I talked about that declarative ideal state so something like you know we know we want ten",
    "start": "304570",
    "end": "311500"
  },
  {
    "text": "replicas and so we're declaring that we have timed out because so if you know one of your data centers is struck by",
    "start": "311500",
    "end": "320080"
  },
  {
    "text": "lightning and you lose five replicas from that data center then it knows what to do you know five you need ten",
    "start": "320080",
    "end": "325980"
  },
  {
    "text": "efficient scheduling just like saving lots of money because we spend a lot on our hardware cost and we needed",
    "start": "325980",
    "end": "331540"
  },
  {
    "text": "something that was extensible so a nice feature of kubernetes is it's Bill with excess extensibility in Minds you can",
    "start": "331540",
    "end": "337300"
  },
  {
    "text": "kind of make it work for your infrastructure and then obviously communities uses containers containers",
    "start": "337300",
    "end": "342460"
  },
  {
    "text": "have portability immutability and reproducibility so being able to so",
    "start": "342460",
    "end": "347590"
  },
  {
    "text": "having that immutable state where things don't change just being able to roll back and know that we're rolling back to",
    "start": "347590",
    "end": "352930"
  },
  {
    "text": "like this particular version of our code and then yeah Mille for all of its",
    "start": "352930",
    "end": "358419"
  },
  {
    "text": "defects it is human friendly and it's a standard format it was definitely better than a or B format which is what we were using",
    "start": "358419",
    "end": "364210"
  },
  {
    "text": "before so it's kind of how we landed on kubernetes and so as of a week ago 50%",
    "start": "364210",
    "end": "371710"
  },
  {
    "start": "365000",
    "end": "799000"
  },
  {
    "text": "of our services are now in Cabrini's and this is about the services we know so",
    "start": "371710",
    "end": "377680"
  },
  {
    "text": "several hundred services and about 250 of those are in the critical production",
    "start": "377680",
    "end": "383950"
  },
  {
    "text": "path and so some of these are more critical than others but for example when you go to Airbnb comm and you look",
    "start": "383950",
    "end": "390310"
  },
  {
    "text": "at that home page that's a granade service when you type into the search bar I'm looking for",
    "start": "390310",
    "end": "395800"
  },
  {
    "text": "homes in London this weekend to stay at that's also like a kubernetes service and similarly when you're booking that",
    "start": "395800",
    "end": "402700"
  },
  {
    "text": "Airbnb and making those payments that's also going through cuban any services cool",
    "start": "402700",
    "end": "408909"
  },
  {
    "text": "so yes the point of this talk hakuna is out of the box works for us",
    "start": "408909",
    "end": "415240"
  },
  {
    "text": "but now without a lot of investment there were a lot of issues that we noticed right away and we had to figure out how to solve them so number one the",
    "start": "415240",
    "end": "421419"
  },
  {
    "text": "configuration itself is actually quite complex the tooling you use to interact with your conveyance files and also what",
    "start": "421419",
    "end": "427330"
  },
  {
    "text": "the cluster is complex even though there's a way to integrate with your infrastructure it's not quite obvious",
    "start": "427330",
    "end": "434919"
  },
  {
    "text": "how to do it especially when you're looking at an infrastructure that's over a decade old at this point there's like a lot of interesting things that can",
    "start": "434919",
    "end": "440559"
  },
  {
    "text": "develop in that time grades itself has open issues you can look on the",
    "start": "440559",
    "end": "446319"
  },
  {
    "text": "kubernetes github issues page some of those issues are quite frightening and",
    "start": "446319",
    "end": "451779"
  },
  {
    "text": "then koopa days you know we knew that it would work at the scale that we were at when we started looking at it two years",
    "start": "451779",
    "end": "457869"
  },
  {
    "text": "ago but would it work for us you know right like today or like a year from now",
    "start": "457869",
    "end": "463179"
  },
  {
    "text": "or five years from now it wasn't quite clear if it would work at our scale because we were looking at other companies and trying to figure out if",
    "start": "463179",
    "end": "469539"
  },
  {
    "text": "they were using it at a scale similar or bigger than ours and more but when i",
    "start": "469539",
    "end": "475389"
  },
  {
    "text": "want to drive to you today is that you know if you have engineers working on these problems they are just problems at the end of the day and so they're",
    "start": "475389",
    "end": "481119"
  },
  {
    "text": "solvable and i just want everyone to know that you are not alone lots of",
    "start": "481119",
    "end": "488319"
  },
  {
    "text": "people are working on these problems just look at like the startups and the Kuban a space and the number of",
    "start": "488319",
    "end": "493509"
  },
  {
    "text": "companies working on open source projects and the community space is really exciting and we are showing to me and so this is a big bet that the",
    "start": "493509",
    "end": "499539"
  },
  {
    "text": "industry is making together so ya better work on it cool so what I'm focusing on",
    "start": "499539",
    "end": "505990"
  },
  {
    "text": "today are the solutions we have so far for developer tooling that's both like",
    "start": "505990",
    "end": "511329"
  },
  {
    "text": "developer experience locally as well as ops tooling in production so some of our",
    "start": "511329",
    "end": "516550"
  },
  {
    "text": "solutions is abstracting away the configuration generating service boilerplate versioning and refactoring",
    "start": "516550",
    "end": "522550"
  },
  {
    "text": "that configuration building opinionated tooling and then having customs the ICD",
    "start": "522550",
    "end": "528040"
  },
  {
    "text": "and validation to validate your configuration so problem number one",
    "start": "528040",
    "end": "533380"
  },
  {
    "text": "abstracting away configuration basically you take cabañas files so I",
    "start": "533380",
    "end": "540140"
  },
  {
    "text": "talked about how we have all these environments production canary development actually came and fit all of our environments on this slide so I",
    "start": "540140",
    "end": "546410"
  },
  {
    "text": "didn't try but you basically have this and by n grid of environments and the",
    "start": "546410",
    "end": "553279"
  },
  {
    "text": "files you need to apply and it's it's quite a lot and and these files have a lot in common with each other so yes",
    "start": "553279",
    "end": "562220"
  },
  {
    "text": "grass resources and environments lots of boilerplate repetitive by environment how do we solve that",
    "start": "562220",
    "end": "568720"
  },
  {
    "text": "so the problem is producing Kate's boilerplate for us we were using file an",
    "start": "568720",
    "end": "575209"
  },
  {
    "text": "inheritance with chef we decided we did not actually like file inheritance not much after all so maybe we should use",
    "start": "575209",
    "end": "580670"
  },
  {
    "text": "something like templating we wanted to basically tempeh llamó files and to",
    "start": "580670",
    "end": "587029"
  },
  {
    "text": "other decisions we had to optimize for that maybe you wouldn't have to if you're an average consumer but we're",
    "start": "587029",
    "end": "592339"
  },
  {
    "text": "looking at hundreds of services and over a thousand engineers at this point how do we actually make this configuration",
    "start": "592339",
    "end": "597500"
  },
  {
    "text": "work like like these cases so for us",
    "start": "597500",
    "end": "602930"
  },
  {
    "text": "we basically so in the middle is the kubernetes files and then on the left is our internal abstraction and there's a",
    "start": "602930",
    "end": "608990"
  },
  {
    "text": "lot of similarities here like files volumes containers that sounds to be familiar to you we also have like the",
    "start": "608990",
    "end": "614990"
  },
  {
    "text": "project which is sort of like where most of the information is stored about your service and then the apps which are kind of you can think of those as the",
    "start": "614990",
    "end": "621170"
  },
  {
    "text": "different workloads so we call it keep Jenna internally disclaimer I think this",
    "start": "621170",
    "end": "626720"
  },
  {
    "text": "term is used externally for an open source project this is not that this is something we just use internally so how",
    "start": "626720",
    "end": "634760"
  },
  {
    "text": "does keep done work so basically the project or the cube demo file sets the",
    "start": "634760",
    "end": "640310"
  },
  {
    "text": "prams per environment so on the top right here is the bunk service I've created there's a few things you'll",
    "start": "640310",
    "end": "647120"
  },
  {
    "text": "notice about this file it has a version and it has of the environments which I cut off and simplified to fit on the slide so we have the production",
    "start": "647120",
    "end": "653540"
  },
  {
    "text": "environment the staging environment production environment has ten replicas staging environment has one replicas and then all the other files can mmm access",
    "start": "653540",
    "end": "662209"
  },
  {
    "text": "these parameters so for example the workload stands a deployment replica is",
    "start": "662209",
    "end": "667779"
  },
  {
    "text": "it's actually the replica of this specified and they keep tender em oh",
    "start": "667779",
    "end": "674670"
  },
  {
    "text": "yeah sorry I'm finding a sore throat right now cool so basically we access those",
    "start": "674670",
    "end": "680410"
  },
  {
    "text": "parameters and then we generate them so when I run my generate command I get",
    "start": "680410",
    "end": "686499"
  },
  {
    "text": "banca karat canary bunk development production block staging cetera it generates all of these lovely kubernetes",
    "start": "686499",
    "end": "692860"
  },
  {
    "text": "files including like admin role binding files conflict map to the deployment etc piece and so these are what like when",
    "start": "692860",
    "end": "700480"
  },
  {
    "text": "you do em stop and start replicas the staging namespace uses one replicas and",
    "start": "700480",
    "end": "705699"
  },
  {
    "text": "the production namespace uses 10 up with this cool so we get Faraday's namespaces",
    "start": "705699",
    "end": "711309"
  },
  {
    "text": "based on environments so these are actually all of our namespaces that were gonna be working with with bonk cool one",
    "start": "711309",
    "end": "720220"
  },
  {
    "text": "other thing that we ran into was basically trying to reduce the amount of",
    "start": "720220",
    "end": "725829"
  },
  {
    "text": "enamel developers had to write so we call that components basically if you're",
    "start": "725829",
    "end": "732059"
  },
  {
    "text": "creating a bunch of services that use Ruby on Rails and they use nginx you're",
    "start": "732059",
    "end": "738189"
  },
  {
    "text": "gonna start noticing that you're creating an intern X config file and nginx container a lot and you can",
    "start": "738189",
    "end": "744399"
  },
  {
    "text": "actually just reuse these components so you define them in one place and use them in a bunch of other places",
    "start": "744399",
    "end": "751230"
  },
  {
    "text": "cool so the common pattern subtracting into a component and the component a I'm also merge into the particle generator",
    "start": "757440",
    "end": "764140"
  },
  {
    "text": "and the components can require a site default parameters so that's what we",
    "start": "764140",
    "end": "772600"
  },
  {
    "text": "came up with internally but there's a lot of things they've evolved in the open source space inside so it's home",
    "start": "772600",
    "end": "780190"
  },
  {
    "text": "customizing Kapitan and you can choose whichever one works for you our project is sort of predated",
    "start": "780190",
    "end": "786190"
  },
  {
    "text": "these open source options cool so takeaways reduce communities",
    "start": "786190",
    "end": "792220"
  },
  {
    "text": "boilerplate and serenades on environments in namespaces so we start",
    "start": "792220",
    "end": "805780"
  },
  {
    "text": "with the first problem which is too much kubernetes boilerplate but we always we",
    "start": "805780",
    "end": "811150"
  },
  {
    "text": "might end on a more powerful idea which is basically everything about service is",
    "start": "811150",
    "end": "816880"
  },
  {
    "text": "in one place and good and marriage with one process so to me this is a really",
    "start": "816880",
    "end": "826690"
  },
  {
    "text": "powerful idea because once you start storing things and get it done locks so many opportunities for you and once you",
    "start": "826690",
    "end": "833380"
  },
  {
    "text": "start to point everything with the same process you have a standardized way of storing storing and applying configuration so here's our bunk service",
    "start": "833380",
    "end": "844210"
  },
  {
    "text": "everything about services in one place and get so for us this is the underscore",
    "start": "844210",
    "end": "849850"
  },
  {
    "text": "in for directory and all configuration lives an underscore long side project code see you edit configuration with one",
    "start": "849850",
    "end": "856690"
  },
  {
    "text": "pull request it's easy to add new configuration it's sorry it's likely valid hated this part of CIT CD so basically support all of this",
    "start": "856690",
    "end": "866080"
  },
  {
    "text": "different configuration just by storing it and get so bunk is created with one",
    "start": "866080",
    "end": "874360"
  },
  {
    "text": "command it's a collection of conflict generators so for example documentation is markdown Storting it CI sorting it",
    "start": "874360",
    "end": "881620"
  },
  {
    "text": "and it's also a collection of framework specific generators so like rails and drop wizard and this is the point where",
    "start": "881620",
    "end": "888160"
  },
  {
    "text": "I say you can generate any service and any link with our framework but we only support a",
    "start": "888160",
    "end": "893649"
  },
  {
    "text": "paved road of different languages for the framework specific generators so",
    "start": "893649",
    "end": "899410"
  },
  {
    "text": "vales shop wizard and no tower paved road of languages so what's important",
    "start": "899410",
    "end": "907660"
  },
  {
    "text": "here is you can make the best practices that default so having a deploy pipeline having services use auto scaling having",
    "start": "907660",
    "end": "915069"
  },
  {
    "text": "documentation for your sources can we generate it out of the box and you can",
    "start": "915069",
    "end": "920319"
  },
  {
    "text": "run it generators individually or as a group so I run a group of them to create the service but I can run one that just adds documentation to bonk and finally we use",
    "start": "920319",
    "end": "928809"
  },
  {
    "text": "the thorah framework which size support for view update and commit so you can actually regenerate your project to update it so I think that's pretty neat",
    "start": "928809",
    "end": "936189"
  },
  {
    "text": "like this whole service was generated with one command so once I think about",
    "start": "936189",
    "end": "942370"
  },
  {
    "text": "services in one place and get you can mess you can make best practices the default by gender generated configuration cool so actually yeah one",
    "start": "942370",
    "end": "952569"
  },
  {
    "start": "950000",
    "end": "1151000"
  },
  {
    "text": "other thing I want to talk about is first thing configuration so storing it and get is one thing but you actually",
    "start": "952569",
    "end": "959290"
  },
  {
    "text": "should version the configuration itself so let me dive into that why do we version or cube configuration so on the",
    "start": "959290",
    "end": "966879"
  },
  {
    "text": "left here we have the qmo version 1 and qmo version 2 we want to add so yeah why",
    "start": "966879",
    "end": "974769"
  },
  {
    "text": "why do we version it if we want to add support for something like a new Cooper Nennius version if we want to change",
    "start": "974769",
    "end": "980110"
  },
  {
    "text": "something like our default deployment strategy like from rolling update something else if you want to drop",
    "start": "980110",
    "end": "986050"
  },
  {
    "text": "support for something like for example maybe we realized we're using something that's less secure we want to drop support for it now and then a little",
    "start": "986050",
    "end": "992709"
  },
  {
    "text": "embarrassingly if we know that we've been working on on our tooling and some",
    "start": "992709",
    "end": "998079"
  },
  {
    "text": "of our previous versions are bad we know which versions are bad and which services are using it and finally we can",
    "start": "998079",
    "end": "1004980"
  },
  {
    "text": "actually supportively cycle and cadence kind of similar to a bun too unlike we have a stable we have latest and we have",
    "start": "1004980",
    "end": "1011370"
  },
  {
    "text": "like a minimally supported version and so like every month we can sort of update our release and like have a new",
    "start": "1011370",
    "end": "1016559"
  },
  {
    "text": "stable that's actually super powerful for sort of keeping things going and",
    "start": "1016559",
    "end": "1021629"
  },
  {
    "text": "evolving and making sure services aren't just unlike v-0 of our project cool so how do",
    "start": "1021629",
    "end": "1028409"
  },
  {
    "text": "we version our acute configuration one the version feels this is out demo and then we publish binaries for",
    "start": "1028409",
    "end": "1035308"
  },
  {
    "text": "each version we have something called channels which point the binaries some example we have the stable channel and",
    "start": "1035309",
    "end": "1042029"
  },
  {
    "text": "we can generate and apply using the appropriate binary so cube 10 v29 point",
    "start": "1042029",
    "end": "1047159"
  },
  {
    "text": "14 would be used to deploy this project",
    "start": "1047159",
    "end": "1051830"
  },
  {
    "text": "cool so that's versioning or a cube configuration but we need version or generate ignition as well so what our",
    "start": "1052190",
    "end": "1061590"
  },
  {
    "text": "project generators generate changes over time that's practices change and then",
    "start": "1061590",
    "end": "1067110"
  },
  {
    "text": "also sometimes bugs are found in our generators and so for example this cube",
    "start": "1067110",
    "end": "1072960"
  },
  {
    "text": "dolly I'm all generated by our generator at shot wine it's different than the cubed IMO generated by our generator at",
    "start": "1072960",
    "end": "1078450"
  },
  {
    "text": "shot 2 and generator I draw 2 has a bug so we need to know which services were genuine generate that short ale in order",
    "start": "1078450",
    "end": "1086279"
  },
  {
    "text": "to find them and fix them and basically the way we just do that is with we just",
    "start": "1086279",
    "end": "1091679"
  },
  {
    "text": "tag the file with information about the generator the SHA of the timestamp etc and this is one way to solve this",
    "start": "1091679",
    "end": "1097679"
  },
  {
    "text": "problem but it was pointed out to us - another thing which is just we need to",
    "start": "1097679",
    "end": "1103140"
  },
  {
    "text": "make sure we test our generators and like the generate code and make sure that it's working across a wide variety",
    "start": "1103140",
    "end": "1108390"
  },
  {
    "text": "of services so we actually have like a whole what we call verifications like now which is basically extremely",
    "start": "1108390",
    "end": "1115799"
  },
  {
    "text": "automated integration tests the test every time we generate so you basically have CI that's just constantly",
    "start": "1115799",
    "end": "1121440"
  },
  {
    "text": "generating new services getting those services to build and deploy and talk to each other across a variety of our paved",
    "start": "1121440",
    "end": "1127350"
  },
  {
    "text": "road language framework so vales Java node and so actually one other thing I",
    "start": "1127350",
    "end": "1132990"
  },
  {
    "text": "would have added it's basically just when you build all this tooling you need to have really robust integration testing and a lot of people skip",
    "start": "1132990",
    "end": "1139649"
  },
  {
    "text": "building integration tests and that's kind of like just a bad practice and so if your ability developer tooling",
    "start": "1139649",
    "end": "1145409"
  },
  {
    "text": "you need to also like be a good developer and build good belfort wing for yourself cool that's versioning",
    "start": "1145409",
    "end": "1153870"
  },
  {
    "start": "1151000",
    "end": "1215000"
  },
  {
    "text": "configuration and one other thing we landed on is refactoring configuration so why would factor configuration",
    "start": "1153870",
    "end": "1159660"
  },
  {
    "text": "overtime basically we want services to be up to date up to date with the latest practice the best practices we know what",
    "start": "1159660",
    "end": "1166620"
  },
  {
    "text": "the best practices were before and what they are now so we could actually automate that transition so for example",
    "start": "1166620",
    "end": "1173280"
  },
  {
    "text": "if we bump stable we know that we want everyone to be using the stable version so we can actually try them in fact",
    "start": "1173280",
    "end": "1178650"
  },
  {
    "text": "everyone is stable security patches is huge you know we realize there's this",
    "start": "1178650",
    "end": "1183990"
  },
  {
    "text": "huge regression in our bun to base image we want everyone to bump to the latest spawn to base image and so like we",
    "start": "1183990",
    "end": "1190500"
  },
  {
    "text": "actually have a schedule we need to have everyone run running that patch or like a week and finally it's just something",
    "start": "1190500",
    "end": "1196890"
  },
  {
    "text": "you should be on that should be automated like like I was watching this study or I read this study from stripe",
    "start": "1196890",
    "end": "1203400"
  },
  {
    "text": "about some crazy percentage when developers time is spent on like we're factoring their own code and we're",
    "start": "1203400",
    "end": "1208530"
  },
  {
    "text": "factoring configuration and I just think it's a big waste of time if they can just be automate automate for them so",
    "start": "1208530",
    "end": "1214080"
  },
  {
    "text": "why not do it and then finally we don't want to manually refactor 250-plus critical services or 500 sources and",
    "start": "1214080",
    "end": "1221310"
  },
  {
    "start": "1215000",
    "end": "1464000"
  },
  {
    "text": "kubernetes so how do we how do you do it automatically so we basically have something called in fact trader which is",
    "start": "1221310",
    "end": "1227010"
  },
  {
    "text": "a collection of general-purpose scripts so you just look at the names here it's like get repos is list PR is a factor",
    "start": "1227010",
    "end": "1234210"
  },
  {
    "text": "update closed status they're all modular so they're meant to be combined in different ways so you can close all PR",
    "start": "1234210",
    "end": "1240540"
  },
  {
    "text": "as cradle PR is updated OPR is six head around hmm and then it covers the",
    "start": "1240540",
    "end": "1246300"
  },
  {
    "text": "lifecycle of every factor so what is the lifecycle for a factor looks like so",
    "start": "1246300",
    "end": "1251610"
  },
  {
    "text": "basically you run the factor itself which checks out a repo and this is one this is one point of view from one project we actually do this for all of",
    "start": "1251610",
    "end": "1257340"
  },
  {
    "text": "our projects so you check a clippo find the project in the repo because we also have mono repos here run the factor job",
    "start": "1257340",
    "end": "1263730"
  },
  {
    "text": "tag owners and then create the PR that's step one just create a PR that with factory is your project step two and",
    "start": "1263730",
    "end": "1271410"
  },
  {
    "text": "this is actually a cycle is update the PR so we actually have a github bot user",
    "start": "1271410",
    "end": "1276750"
  },
  {
    "text": "that could come out the PR write all of those owners to verify edit and merge the PR and then the owners are expected",
    "start": "1276750",
    "end": "1284550"
  },
  {
    "text": "to actually take do this step but finally most of our detractors have a life cycle guarantee which is like",
    "start": "1284550",
    "end": "1291280"
  },
  {
    "text": "after seven seven seven days it has been more show just more job on their behalf",
    "start": "1291280",
    "end": "1297510"
  },
  {
    "text": "and tiny owners is another thing because we store project Aoyama which has",
    "start": "1297780",
    "end": "1303370"
  },
  {
    "text": "ownership information we know how to find owners for a project that's really valuable here cool so how do we refactor",
    "start": "1303370",
    "end": "1311530"
  },
  {
    "text": "configuration so yeah we have a factoid or a collection of scripts but what actually does the vector and that's the",
    "start": "1311530",
    "end": "1318220"
  },
  {
    "text": "V factor job so if I Turner takes a refactor dog ah and it will run it for",
    "start": "1318220",
    "end": "1323560"
  },
  {
    "text": "all services I'd run that job and that job is responsible for updating files and underscoring infra for example",
    "start": "1323560",
    "end": "1331120"
  },
  {
    "text": "upgrading keep version disabled so let's example I'm gonna run through is bumping this version so basically we have a",
    "start": "1331120",
    "end": "1339010"
  },
  {
    "text": "channels file in our tooling docket and",
    "start": "1339010",
    "end": "1344220"
  },
  {
    "text": "that channels file has the channels like stable points to a virgin when we bump",
    "start": "1344220",
    "end": "1349870"
  },
  {
    "text": "that file like this whole process automated from there so as soon as we decided to bump stable we basically have",
    "start": "1349870",
    "end": "1356590"
  },
  {
    "text": "a cron job that runs daily on weekdays and it calls for fact creator with upgrade cube PI and most of the time",
    "start": "1356590",
    "end": "1363760"
  },
  {
    "text": "when it calls the factory with upgrade cube a PI all part is already aren't stable because of our previously factor",
    "start": "1363760",
    "end": "1369550"
  },
  {
    "text": "and so it doesn't do anything it doesn't create any PRS no changes nothing to do as soon as we bump stable it starts",
    "start": "1369550",
    "end": "1376570"
  },
  {
    "text": "running on projects and it knows that this project is behind stable so it runs a paid-up high which actually creates",
    "start": "1376570",
    "end": "1382750"
  },
  {
    "text": "the PR updating their version and like handling any breaking changes and then we finally have another cron job which",
    "start": "1382750",
    "end": "1388750"
  },
  {
    "text": "actually handles update emerging PRS so we have two corn dogs one that creates PR is one that does update and merge and",
    "start": "1388750",
    "end": "1394620"
  },
  {
    "text": "there's just other considerations here like if you are going to force merge a PR maybe don't have that car dog run on",
    "start": "1394620",
    "end": "1401110"
  },
  {
    "text": "Fridays or weekends it's not like it's another thing cool",
    "start": "1401110",
    "end": "1406720"
  },
  {
    "text": "so my takeaway here is that configuration should be version and be factored automatically this is the most",
    "start": "1406720",
    "end": "1412420"
  },
  {
    "text": "exciting thing to build but it actually like really unlock so much behavior that you want like repeatable deploys so if",
    "start": "1412420",
    "end": "1420850"
  },
  {
    "text": "we have this configuration and deploy it at sha1 every time they",
    "start": "1420850",
    "end": "1426410"
  },
  {
    "text": "deploy it at sha-1 it should have the behavior of being - played at sha-1 so we can't just change our deployment",
    "start": "1426410",
    "end": "1431720"
  },
  {
    "text": "tooling under sort of under the hood and then have it deployed differently um because then we lose that version guarantee and so when you make these",
    "start": "1431720",
    "end": "1440000"
  },
  {
    "text": "changes it's a little bit more disciplined where if we change or deploy a behavior people have to bump their",
    "start": "1440000",
    "end": "1445880"
  },
  {
    "text": "project to get that deployment behavior and then like similarly if our changes",
    "start": "1445880",
    "end": "1451670"
  },
  {
    "text": "of breaking change people have to update to a breaking version change to get that so it's kind of more communication via",
    "start": "1451670",
    "end": "1460040"
  },
  {
    "text": "configuration with our users and I think that's really powerful cool so I talked",
    "start": "1460040",
    "end": "1466580"
  },
  {
    "start": "1464000",
    "end": "1689000"
  },
  {
    "text": "about configuration a lot and I want to talk about the tool used to interact",
    "start": "1466580",
    "end": "1471740"
  },
  {
    "text": "with communities which is Kip's detail and we built something that's basically opinionated keeps ETL so we talked about",
    "start": "1471740",
    "end": "1477680"
  },
  {
    "text": "this problem but keeps detail is also kind of verbose and we're cutting it by namespace and we basically want to",
    "start": "1477680",
    "end": "1483050"
  },
  {
    "text": "introduce some duct tape to make this easier for people so yeah here's our duct tape so our Pollock's service and",
    "start": "1483050",
    "end": "1492440"
  },
  {
    "text": "so our tooling is gonna take some opinionated stances which just makes everything sort of more stringent I mean",
    "start": "1492440",
    "end": "1498320"
  },
  {
    "text": "this is stuff that concealed is not right out of the box so number one que tool assumes you're running in your product directory so you see the bunk it",
    "start": "1498320",
    "end": "1504890"
  },
  {
    "text": "takes variables as arguments s'okay size and eagles staging and it'll actually print what it does so what is K size and",
    "start": "1504890",
    "end": "1511610"
  },
  {
    "text": "you'll stay tuned do it actually calls get pods with namespace Punk staging cool so standardized names facing we're",
    "start": "1511610",
    "end": "1517610"
  },
  {
    "text": "in bunk we pass staging we know that our namespace is staging and so all of our",
    "start": "1517610",
    "end": "1522770"
  },
  {
    "text": "commands can basically drop knowing what namespace you're in ok dual does a few",
    "start": "1522770",
    "end": "1528470"
  },
  {
    "text": "other neat things and by the way the Cato started out is a make file that we use like on the kubernetes team just to",
    "start": "1528470",
    "end": "1535940"
  },
  {
    "text": "like iterate on our go project and I kind of dislike pull out from there and now we distribute it so Kay generate",
    "start": "1535940",
    "end": "1542450"
  },
  {
    "text": "generates our Cuvier's files kay build will actually build your projects do a docker build and a darker push and then",
    "start": "1542450",
    "end": "1550850"
  },
  {
    "text": "k deploy has some logic like crate namespace if it doesn't exist now that if the namespace exists or if it already",
    "start": "1550850",
    "end": "1556429"
  },
  {
    "text": "existed a PI or place criminais files and then sleep and check the deployment status and so all these",
    "start": "1556429",
    "end": "1561920"
  },
  {
    "text": "commands can also be changed with K all so if you're lazy like me you can just",
    "start": "1561920",
    "end": "1568190"
  },
  {
    "text": "type this too like literally just update your service and finally the K tool we",
    "start": "1568190",
    "end": "1574700"
  },
  {
    "text": "also use it as a debugging tool so it's both a development tool and a debugging tool one thing it does is it assumes",
    "start": "1574700",
    "end": "1581570"
  },
  {
    "text": "when you run commands that you don't care which pod you're running in it's any pod and it tries to find them in",
    "start": "1581570",
    "end": "1587090"
  },
  {
    "text": "container and then do stuff there so basically we had a lot developers ask us",
    "start": "1587090",
    "end": "1593720"
  },
  {
    "text": "how do I just SSH into my service and so you can actually type you can say chat",
    "start": "1593720",
    "end": "1598820"
  },
  {
    "text": "vehicle stating and it knows to go to the bunk container of any pod for bark",
    "start": "1598820",
    "end": "1604460"
  },
  {
    "text": "staging and finally you can specify a",
    "start": "1604460",
    "end": "1609650"
  },
  {
    "text": "particular product particular container so to get the logs for a container you",
    "start": "1609650",
    "end": "1615260"
  },
  {
    "text": "just try container equals bunk or your container equals that's T or whatever it is then you want your logs for and then you can automate",
    "start": "1615260",
    "end": "1622700"
  },
  {
    "text": "debugging with this k diagnose command which I'm gonna sort of dive into one thing I wanted to point out on the slide is we do differentiate a main container",
    "start": "1622700",
    "end": "1629210"
  },
  {
    "text": "versus sidecar containers and this is the part that other companies are using as well but there's no official support",
    "start": "1629210",
    "end": "1634340"
  },
  {
    "text": "for it and the kubernetes docking project but this is something that we've",
    "start": "1634340",
    "end": "1639350"
  },
  {
    "text": "sort of landed on that we needed having a difference between the main container and sidecar containers one example of",
    "start": "1639350",
    "end": "1645920"
  },
  {
    "text": "this is if you have a data dog sidecar container and you do a data operation",
    "start": "1645920",
    "end": "1651020"
  },
  {
    "text": "which brings down Dana dog you don't want all of those de dog's data dog sidecar containers to take down your",
    "start": "1651020",
    "end": "1656840"
  },
  {
    "text": "service because it's failing health checks so you basically you want to have a way",
    "start": "1656840",
    "end": "1662090"
  },
  {
    "text": "to say like this is the main container this is the important process if this process is unhealthy then my service is",
    "start": "1662090",
    "end": "1668000"
  },
  {
    "text": "unhealthy some of these other processes and other containers are less important we can have like graceful degradation",
    "start": "1668000",
    "end": "1673780"
  },
  {
    "text": "where maybe we're having a problem with logging that doesn't mean that your whole service needs to have a problem",
    "start": "1673780",
    "end": "1681700"
  },
  {
    "text": "cool and then yakoo seal dos is a plug-in I",
    "start": "1682600",
    "end": "1687740"
  },
  {
    "text": "wrote recently so it was a collection scripts before but I kind of learned",
    "start": "1687740",
    "end": "1693080"
  },
  {
    "text": "about this kid sale plugin thing who here has heard of could sale plugins okay not have any people that everyone's",
    "start": "1693080",
    "end": "1701270"
  },
  {
    "text": "falling asleep so this is actually it's funny new right so I was like so we have this collection",
    "start": "1701270",
    "end": "1708140"
  },
  {
    "text": "of bash scripts and I was like there must be a better way to do this like I feel kind of like it's cool it's like a neat tool but I'm like Cooper days is",
    "start": "1708140",
    "end": "1714980"
  },
  {
    "text": "all about extensibility it's like how do you extend the cutesy TL to run commands you want and that's what to do plugins",
    "start": "1714980",
    "end": "1720950"
  },
  {
    "text": "are is custom keep sale sub commands and I was like okay that's cool how do I build a conceal plug-in and like I read",
    "start": "1720950",
    "end": "1727220"
  },
  {
    "text": "this and I was like wow this is so easy so basically it's just the standalone executable file that starts with coop CL",
    "start": "1727220",
    "end": "1732770"
  },
  {
    "text": "- and it just needs to be in your path somewhere on your computer so basically you can build any executable like a bad",
    "start": "1732770",
    "end": "1739250"
  },
  {
    "text": "script and they call it conceal - whatever and then and then now you have keep still commands that's pretty cool",
    "start": "1739250",
    "end": "1745730"
  },
  {
    "text": "so here's the setup for caetano's basically I needed to intentionally",
    "start": "1745730",
    "end": "1751490"
  },
  {
    "text": "break my bunk service so yes my generator worked it created a valid hello world service and then I like you know I changed the",
    "start": "1751490",
    "end": "1758809"
  },
  {
    "text": "command to be hey-oh which means nothing and then I deploy it and now my pot is in cache look back off so when you have",
    "start": "1758809",
    "end": "1767750"
  },
  {
    "text": "a pod in couch the back off you might take a few of many steps to debug it so",
    "start": "1767750",
    "end": "1773600"
  },
  {
    "text": "for me I might do keep see I'll get pod same space funky you'll see Jing - OH",
    "start": "1773600",
    "end": "1779480"
  },
  {
    "text": "equals Z animal pipe fat - grow up look for red equals false kind of like search around like that or maybe I'll",
    "start": "1779480",
    "end": "1785690"
  },
  {
    "text": "just do cube Co logs you know name states for this pod for that container this is obviously before any of my",
    "start": "1785690",
    "end": "1792110"
  },
  {
    "text": "shortcuts and maybe there's something wrong with the cluster maybe that's why",
    "start": "1792110",
    "end": "1797690"
  },
  {
    "text": "it's a crash Nabokov I don't know so I might also get qu Bernays events related to this pod and filter them whether",
    "start": "1797690",
    "end": "1802910"
  },
  {
    "text": "they're normal or not so look for unnormal events yeah and if you look at",
    "start": "1802910",
    "end": "1809270"
  },
  {
    "text": "this command it's like off the screen I could barely capture it so that's cool I never want to tighten this command ever",
    "start": "1809270",
    "end": "1814610"
  },
  {
    "text": "again it's kind of painful so like I create goop seal pot events my very",
    "start": "1814610",
    "end": "1821300"
  },
  {
    "text": "quick plug-in that took me 30 seconds to write the basically calls keep sale events with my name space with my pod and looks for any information any",
    "start": "1821300",
    "end": "1830000"
  },
  {
    "text": "interesting information about it puts it out so that's pod events but I wanted to",
    "start": "1830000",
    "end": "1835280"
  },
  {
    "text": "build a diagnose keep sale plugin and [Music]",
    "start": "1835280",
    "end": "1841929"
  },
  {
    "text": "cool and basically it's a go program that you type keep steel diagnosed - -",
    "start": "1842350",
    "end": "1848450"
  },
  {
    "text": "name space ghouls my name space and a diagnosis your problem so basically takes the name space and",
    "start": "1848450",
    "end": "1853940"
  },
  {
    "text": "figures out the rest so yeah use the Cobra goes by it's pretty cool name space parameter and",
    "start": "1853940",
    "end": "1861380"
  },
  {
    "text": "then it basically just starts cycling through all of your containers and looking for ones that aren't ready you",
    "start": "1861380",
    "end": "1866660"
  },
  {
    "text": "also want to cycle through init containers because your pod can get stuck there as well and then yeah so",
    "start": "1866660",
    "end": "1872990"
  },
  {
    "text": "basically this prints out all the last messages all the last logs of unready containers and then it uses my pod",
    "start": "1872990",
    "end": "1878300"
  },
  {
    "text": "events plugin to get all of the events filters for normal ones I realized I",
    "start": "1878300",
    "end": "1883820"
  },
  {
    "text": "could have also implanted pod events in the go program but I was running out of time and like I'm actually just quicker with bash so but yes you can just call",
    "start": "1883820",
    "end": "1890690"
  },
  {
    "text": "keep sail pod events from your go program and then here it is so I'm calling coop steal diagnose - last name",
    "start": "1890690",
    "end": "1897710"
  },
  {
    "text": "chase punks dating and it gets all the unready container info it gets pod",
    "start": "1897710",
    "end": "1903050"
  },
  {
    "text": "events and it gets the pod logs for the unready containers and basically all three of these say something like",
    "start": "1903050",
    "end": "1909250"
  },
  {
    "text": "execute will not sound what you know what is hey Oh like what are you doing and so I finally know what's wrong with",
    "start": "1909250",
    "end": "1915410"
  },
  {
    "text": "my service and this is kind of a contrived example but there's lots of reasons wire service has gotten healthy",
    "start": "1915410",
    "end": "1920450"
  },
  {
    "text": "and so having having an engineer just type one command immediately tells you",
    "start": "1920450",
    "end": "1925490"
  },
  {
    "text": "there is something wrong with this service and this is what it is and then one of the thing I want to get into it's",
    "start": "1925490",
    "end": "1931670"
  },
  {
    "start": "1928000",
    "end": "2090000"
  },
  {
    "text": "just you being a opinionated CEO and he actually is a package manager for this",
    "start": "1931670",
    "end": "1938410"
  },
  {
    "text": "so basically if I want to find install and manage sale plug-ins or distribute plugins on like Linux and Mac or if I",
    "start": "1938410",
    "end": "1945320"
  },
  {
    "text": "want to share my plugins with others how do I do that so I found this open source project that it's called khru it's an",
    "start": "1945320",
    "end": "1953270"
  },
  {
    "text": "unofficial google open source project it sounds like brew no Bru dies so basically it's like brew",
    "start": "1953270",
    "end": "1960970"
  },
  {
    "text": "for plugins and itself is a plugin and so you can just install it and start and start using it and there's actually a",
    "start": "1960970",
    "end": "1968560"
  },
  {
    "text": "master list of plugins and so you can actually so once I installed it I",
    "start": "1968560",
    "end": "1973720"
  },
  {
    "text": "started running as a search plan so you can search for plugins one thing I wanted to look for was we kind of have",
    "start": "1973720",
    "end": "1980260"
  },
  {
    "text": "this hacky wave dip but like interactively debugging with a pod it's like a sidecar that kind of dislike",
    "start": "1980260",
    "end": "1986260"
  },
  {
    "text": "sticks around and tries to figure out like has an interactive shell and I realized someone else had already",
    "start": "1986260",
    "end": "1991270"
  },
  {
    "text": "created this so I didn't even need to do that one other thing I was trying to do is create a tool for our developers to",
    "start": "1991270",
    "end": "1997660"
  },
  {
    "text": "access a gene as a particular user because we want to over for the majority",
    "start": "1997660",
    "end": "2003270"
  },
  {
    "text": "we run our containers as a non privileged user for security reasons but",
    "start": "2003270",
    "end": "2008430"
  },
  {
    "text": "sometimes people want to debug their containers as like a user with some set of privileges so keeps it keep still",
    "start": "2008430",
    "end": "2016050"
  },
  {
    "text": "makes it really hard to SSH in as a user that is not the user running the program but in this case we actually do want to",
    "start": "2016050",
    "end": "2022170"
  },
  {
    "text": "run a safety this is a different user that actually also exists as a keeps a log and so I also don't have to write",
    "start": "2022170",
    "end": "2028170"
  },
  {
    "text": "that and I think that is super cool not having to write things cool so the takeaways in this section is I think you",
    "start": "2028170",
    "end": "2034680"
  },
  {
    "text": "should create opinionated tooling on top of kubernetes so you can think of kubernetes both like the configuration",
    "start": "2034680",
    "end": "2042300"
  },
  {
    "text": "and like the tooling the wrap you know the cube CTL I sort of like a base platform and you can build your own",
    "start": "2042300",
    "end": "2049080"
  },
  {
    "text": "platform on top of that which is actually what people including yourself they interact with so you can automate a",
    "start": "2049080",
    "end": "2054929"
  },
  {
    "text": "common case where flows with keep sale plugins or with this bash wrapper script and like the thing that I want people to",
    "start": "2054929",
    "end": "2061110"
  },
  {
    "text": "take away from this section is that this isn't just something that I built for other developers people who aren't",
    "start": "2061110",
    "end": "2066330"
  },
  {
    "text": "interested in like learning kubernetes is something I use myself it's something all of our infrastructure engineers use",
    "start": "2066330",
    "end": "2071490"
  },
  {
    "text": "like this is actually a useful tool for any engineer you know in curious curious",
    "start": "2071490",
    "end": "2076919"
  },
  {
    "text": "whatever like that Katie knows command I use it all the time now because like why would I do it manually and then finally",
    "start": "2076919",
    "end": "2083340"
  },
  {
    "text": "you need some way to distribute and discover this custom functionality you can build your own package manager or you can use one of these open source",
    "start": "2083340",
    "end": "2088888"
  },
  {
    "text": "options cool so now that we have a standardized tool I want to kind of get into what we",
    "start": "2088889",
    "end": "2095190"
  },
  {
    "start": "2090000",
    "end": "2461000"
  },
  {
    "text": "get with CIN CD cool so we basically run",
    "start": "2095190",
    "end": "2100320"
  },
  {
    "text": "validations build and dock bills and a few other things we use build chi to",
    "start": "2100320",
    "end": "2107070"
  },
  {
    "text": "dispatch our jobs but our actual CI is something we built in-house so basically each step in our CI c jobs or run steps",
    "start": "2107070",
    "end": "2113730"
  },
  {
    "text": "in a build docker file so yeah everything is a docker file so yeah we",
    "start": "2113730",
    "end": "2119730"
  },
  {
    "text": "use docker to build things it's like kind of confusing and the this this",
    "start": "2119730",
    "end": "2126810"
  },
  {
    "text": "docker file that builds your project with another docker file basically just",
    "start": "2126810",
    "end": "2132450"
  },
  {
    "text": "runs Kay commands so the commands that you run locally in development are the same commands that run in CI and are",
    "start": "2132450",
    "end": "2139830"
  },
  {
    "text": "also the same commands that are deployed tool uses so everything through development CI and production what uses",
    "start": "2139830",
    "end": "2145950"
  },
  {
    "text": "the same commands and what I think is really important about that is that people are using these commands every",
    "start": "2145950",
    "end": "2151290"
  },
  {
    "text": "day as part of their normal development if something breaks in CI they know how to customize that and even more",
    "start": "2151290",
    "end": "2157140"
  },
  {
    "text": "importantly if something breaks in production they already have their DevOps tool flow it's the cake apparent",
    "start": "2157140",
    "end": "2162480"
  },
  {
    "text": "again and so you know when they're kind of freaking out internally they already",
    "start": "2162480",
    "end": "2168000"
  },
  {
    "text": "have like they're already know what to do kssh K logs k diagnose in production",
    "start": "2168000",
    "end": "2174570"
  },
  {
    "text": "as well to debug their service cool one",
    "start": "2174570",
    "end": "2180720"
  },
  {
    "text": "other question I get a lot is how do you optimize your containers Java build so we have like this huge Java mono repo",
    "start": "2180720",
    "end": "2185940"
  },
  {
    "text": "with like millions of lines of code and it's just it's a lot so yeah without any",
    "start": "2185940",
    "end": "2192359"
  },
  {
    "text": "operations or builds would probably take like they probably would never finish actually and so we basically have a base",
    "start": "2192359",
    "end": "2198359"
  },
  {
    "text": "docker file it's updated on a schedule that installs everything it needs export some environment variables and does a dummy build that's the important parts",
    "start": "2198359",
    "end": "2204810"
  },
  {
    "text": "that caches our compiler stuff and then our build dr. Karl just inherits from",
    "start": "2204810",
    "end": "2210180"
  },
  {
    "text": "the space Stockton tiger file and I think there was another talk that kind of dived into this earlier today I didn't have the opportunity to attend it",
    "start": "2210180",
    "end": "2216420"
  },
  {
    "text": "but you could spend a whole talk talking about optimizing your Java build but definitely having taking advantage of",
    "start": "2216420",
    "end": "2223440"
  },
  {
    "text": "docker file lair caching would really help that's what we do cool",
    "start": "2223440",
    "end": "2229920"
  },
  {
    "text": "so that's built our deploy process basically it looks like something you'd expect and this is what's really",
    "start": "2229920",
    "end": "2236670"
  },
  {
    "text": "powerful about storing your configuration as code is the way you do configuration is the way you do code which is developed merging deploy and so",
    "start": "2236670",
    "end": "2244830"
  },
  {
    "text": "we actually have all this configuration on our left is the kubernetes configuration and in the middle is our custom configuration how do we apply the",
    "start": "2244830",
    "end": "2252210"
  },
  {
    "text": "Cooper nase configuration basically you apply all the files there's some like weird stuff in kubernetes I won't like",
    "start": "2252210",
    "end": "2259170"
  },
  {
    "text": "get into it but like basically sometimes you need to apply someone's need to replace so we have like an algorithm that kind of figures that out and then",
    "start": "2259170",
    "end": "2266370"
  },
  {
    "text": "we always restart pods on deploy to pick up changes I think this is really important the reason we do this is so",
    "start": "2266370",
    "end": "2272610"
  },
  {
    "text": "that if you change something like that change is reflected immediately on deploy so for example if you change",
    "start": "2272610",
    "end": "2278100"
  },
  {
    "text": "something and it's not you know it causes issues you know immediately that causes issues and then the other strong",
    "start": "2278100",
    "end": "2283200"
  },
  {
    "text": "opinion we make is returning an atomic success or failure state so for example if you're one of your containers we",
    "start": "2283200",
    "end": "2288420"
  },
  {
    "text": "starts for 30 seconds on the beginning of a deploy for us that's a deploy failure even if after 30 seconds your",
    "start": "2288420",
    "end": "2294180"
  },
  {
    "text": "service is up and totally fine I'm so it's another strong opinion we took is your service can't start off its life",
    "start": "2294180",
    "end": "2299970"
  },
  {
    "text": "crash looping one reason for that is if you have like 10 large services each",
    "start": "2299970",
    "end": "2308490"
  },
  {
    "text": "with 100 replicas that do that and they all deploy at the same time you're you're possibly looking at taking down",
    "start": "2308490",
    "end": "2313920"
  },
  {
    "text": "your cluster because you really don't want a thousand nodes and crash live back off at the same time so it's like",
    "start": "2313920",
    "end": "2321420"
  },
  {
    "text": "just a scaling problem and so one way we use Start pods on deploy is basically we just append a date label to the pod spec",
    "start": "2321420",
    "end": "2328260"
  },
  {
    "text": "which that always changes so it always convinces grenades can we start all of the pods and so that's the kubernetes",
    "start": "2328260",
    "end": "2338220"
  },
  {
    "text": "configuration but I talked about our custom configurations so how do we apply that we use something called custom controllers which basically lets you",
    "start": "2338220",
    "end": "2345450"
  },
  {
    "text": "define like your own configuration so one of our computation is a diversity mo so you basically just keep sale apply or",
    "start": "2345450",
    "end": "2352380"
  },
  {
    "text": "our K deploy command to apply it to the cluster and basically there's like three stop co-developer you",
    "start": "2352380",
    "end": "2358580"
  },
  {
    "text": "configuration developers need to use which is creating a custome source definition creating it and then this is",
    "start": "2358580",
    "end": "2365310"
  },
  {
    "text": "stuff we provide is a controller that it's like a generic controller that calls a web hook and so for all reckon",
    "start": "2365310",
    "end": "2371010"
  },
  {
    "text": "vacation it's the same kind of controller that calls a web hook and then the actual logic is basically you",
    "start": "2371010",
    "end": "2376260"
  },
  {
    "text": "need to build a service or function that exposes that web hook and then that services or function is in charge of",
    "start": "2376260",
    "end": "2381960"
  },
  {
    "text": "applying those changes so in this case our security team is in charge of I am",
    "start": "2381960",
    "end": "2387270"
  },
  {
    "text": "girls so they built an ABS lambda function that for service will like go",
    "start": "2387270",
    "end": "2392580"
  },
  {
    "text": "in and create and I enroll or attach certain policies to it and so they just need to expose a web hook that our",
    "start": "2392580",
    "end": "2398100"
  },
  {
    "text": "controller can call and by the way so I got here's a prep tool use case for a",
    "start": "2398100",
    "end": "2403230"
  },
  {
    "text": "service it does exist and yeah but it could also been a convenient service so",
    "start": "2403230",
    "end": "2409920"
  },
  {
    "text": "our controllers don't care just expose a web hook and then we'll know how to apply a beer so llamó part of the mo",
    "start": "2409920",
    "end": "2415860"
  },
  {
    "text": "documentation exciter etc cool so the takeaways here is that when",
    "start": "2415860",
    "end": "2422760"
  },
  {
    "text": "coding configuration is to play with the same process it kind of just all follows the same flow and that flow is the",
    "start": "2422760",
    "end": "2427920"
  },
  {
    "text": "developer flow that developers are familiar with and so it's it's important for deploying changes but it's also",
    "start": "2427920",
    "end": "2433740"
  },
  {
    "text": "important for rolling back so if you deploy and ATM will change and you've",
    "start": "2433740",
    "end": "2439860"
  },
  {
    "text": "messed up and taken away all the perms for your service you'll know that pretty quickly and then if you roll back you'll",
    "start": "2439860",
    "end": "2445320"
  },
  {
    "text": "get those arm permissions back again and then if you use custom resources and custom controllers that's sort of the",
    "start": "2445320",
    "end": "2451920"
  },
  {
    "text": "way that you get commands to apply all these custom files and so we're basically going through the process of",
    "start": "2451920",
    "end": "2457110"
  },
  {
    "text": "getting all of our configuration to be applied this way cool and I kind of want",
    "start": "2457110",
    "end": "2463680"
  },
  {
    "start": "2461000",
    "end": "2906000"
  },
  {
    "text": "to split this out into a separate section is validation so see ICD yeah building in and deploying your projects",
    "start": "2463680",
    "end": "2470010"
  },
  {
    "text": "you may have already figured out a way to do this but have you done this one neat trick of validating all of your",
    "start": "2470010",
    "end": "2475020"
  },
  {
    "text": "configuration so one other strong opinion we took is that configuration",
    "start": "2475020",
    "end": "2480180"
  },
  {
    "text": "should be validated if we can catch something wrong with your files we will and we can do that in two different ways",
    "start": "2480180",
    "end": "2485340"
  },
  {
    "text": "we want to enforce best practices at build time and at deploy time",
    "start": "2485340",
    "end": "2491300"
  },
  {
    "text": "so here's one example basically we enforce that all teams all",
    "start": "2494059",
    "end": "2500880"
  },
  {
    "text": "projects have a team associate with them and then that team is valid so if you look at the box service actually this is",
    "start": "2500880",
    "end": "2506849"
  },
  {
    "text": "kind of hard to read but the team that I've assigned to the pump service is my team which is infer a production",
    "start": "2506849",
    "end": "2513599"
  },
  {
    "text": "platform develop a Productivity service orchestration and that is a valid team name so when I validate bonk it passes",
    "start": "2513599",
    "end": "2519839"
  },
  {
    "text": "validation and all of our team names are stored in another repo and so that's where it's that's like the source of",
    "start": "2519839",
    "end": "2525569"
  },
  {
    "text": "traits for team names cool so how do we validate configuration at Build time well basically we just have a global",
    "start": "2525569",
    "end": "2531839"
  },
  {
    "text": "jobs repo and that's where we saw all of the global validation scripts so you just define your global job in the",
    "start": "2531839",
    "end": "2537029"
  },
  {
    "text": "global jobs repo and then our job display sure dispatcher always dispatches global jobs to every project",
    "start": "2537029",
    "end": "2542940"
  },
  {
    "text": "so from bunks perspective it configures some of its CI checks and that's like",
    "start": "2542940",
    "end": "2548430"
  },
  {
    "text": "the build and like maybe a few other things they're test Suites I hope they have tests maybe not bonk cuz I just",
    "start": "2548430",
    "end": "2555119"
  },
  {
    "text": "created it right now and then the all the global jobs also just run kind of automatically and so the other thing is",
    "start": "2555119",
    "end": "2561390"
  },
  {
    "text": "you can't opt out of these global validation jobs like they're they're required cool so what do we validate",
    "start": "2561390",
    "end": "2569269"
  },
  {
    "text": "well we have a Yama winter so if you have invalid yeah mo will catch that that's pretty helpful sometimes there's",
    "start": "2569269",
    "end": "2575999"
  },
  {
    "text": "scuba nays configuration that we know is wrong there's something wrong with that configuration it's caused an incident",
    "start": "2575999",
    "end": "2581400"
  },
  {
    "text": "before whatever we can validate on that well we have released a few bad versions of our own configuration in the past so",
    "start": "2581400",
    "end": "2588029"
  },
  {
    "text": "if you're running if we know that version 25.2 of cube gen is broken and you're running 25.2 we can catch that",
    "start": "2588029",
    "end": "2594859"
  },
  {
    "text": "and similarly with kubernetes versions that we know have problematic behavior we can prevent you deploying those just",
    "start": "2594859",
    "end": "2602400"
  },
  {
    "text": "other things namespace links and then obviously some more internal things are",
    "start": "2602400",
    "end": "2607980"
  },
  {
    "text": "specific to us we know what about project name looks like you can't use emojis as a project name so like will",
    "start": "2607980",
    "end": "2614970"
  },
  {
    "text": "validate that it will validate that you have a team owner cool what do we do for a deploy time and",
    "start": "2614970",
    "end": "2623069"
  },
  {
    "text": "actually community so has something ready built-in for this and that's admission controller so basically a",
    "start": "2623069",
    "end": "2629310"
  },
  {
    "text": "mission controller can just stop things from happening so like you actually",
    "start": "2629310",
    "end": "2636030"
  },
  {
    "text": "tried to persist your API changes and it'll be like nope not persisting it's",
    "start": "2636030",
    "end": "2641160"
  },
  {
    "text": "not going into that data store and so what we do is be basically a lot of metadata it's encoded as annotations and",
    "start": "2641160",
    "end": "2647760"
  },
  {
    "text": "then a mission controller just checks for where those annotations exist or checks if if it's missing so yeah ethics",
    "start": "2647760",
    "end": "2653700"
  },
  {
    "text": "missing required annotations and it also ejects specific conditions that can detect on so what do we validate with a",
    "start": "2653700",
    "end": "2659970"
  },
  {
    "text": "mission controller project ownership annotations whether it has a gate URL annotation so has to be stored in gate",
    "start": "2659970",
    "end": "2666420"
  },
  {
    "text": "it has to have a remote so you can't just deploy random things from your laptop its production we have a life",
    "start": "2666420",
    "end": "2673800"
  },
  {
    "text": "cycle for our configuration so if you're below or minimally supported version will not deploy your project and then",
    "start": "2673800",
    "end": "2681690"
  },
  {
    "text": "also some just some like these are more gotchas than like maybe things we have",
    "start": "2681690",
    "end": "2687660"
  },
  {
    "text": "strong opinions about but for example we want to make sure production images are uploaded to ECR which has certain",
    "start": "2687660",
    "end": "2693390"
  },
  {
    "text": "guarantees the other registries that we have don't prevent deployment of unsafe workloads prevent deployment of",
    "start": "2693390",
    "end": "2700530"
  },
  {
    "text": "development namespaces to production clusters cool so standardized I'm spacing help us out again by the way",
    "start": "2700530",
    "end": "2706440"
  },
  {
    "text": "this is just one of the ways we try to have a development and production like interfere with each other but it's just yet another way we can sort of enforce",
    "start": "2706440",
    "end": "2713040"
  },
  {
    "text": "that they're separate environments separate clusters so yeah see ICD should",
    "start": "2713040",
    "end": "2718170"
  },
  {
    "text": "run the same commands the engineer's run locally it should run in the container and then additionally you want to",
    "start": "2718170",
    "end": "2725130"
  },
  {
    "text": "validate configuration as part of CIO and CD so those validation scripts at Build time the addition control or",
    "start": "2725130",
    "end": "2730590"
  },
  {
    "text": "deploy time is really the way you enforce good practices cool so ten",
    "start": "2730590",
    "end": "2736830"
  },
  {
    "text": "takeaways I'm only this slide open because I know I click through really quickly but here it is the ten takeaways",
    "start": "2736830",
    "end": "2743220"
  },
  {
    "text": "that I wrote individually at different points in the talk so we started with",
    "start": "2743220",
    "end": "2749280"
  },
  {
    "text": "the configuration itself abstracting away that complex company's configuration and then one strong",
    "start": "2749280",
    "end": "2755100"
  },
  {
    "text": "opinion we took is serenading on namespaces on environment namespaces and I really helped us at different levels especially with our",
    "start": "2755100",
    "end": "2761460"
  },
  {
    "text": "tooling everything about service should be in one place to get once we store it and get we can get all these other",
    "start": "2761460",
    "end": "2767130"
  },
  {
    "text": "things for free so we can make best part is the default by generating configuration story nothing good",
    "start": "2767130",
    "end": "2772950"
  },
  {
    "text": "we can version it and we factor it automatically it's just like reduces developer toil and also gets like",
    "start": "2772950",
    "end": "2780030"
  },
  {
    "text": "important security fixes etc in on a schedule we can create an opinionated tool that",
    "start": "2780030",
    "end": "2785070"
  },
  {
    "text": "basically automates common workflows and we can also distribute this tool that's keeps the dell plugin so we can",
    "start": "2785070",
    "end": "2790950"
  },
  {
    "text": "integrate with kubernetes for the toy CIC should wear the same commands and here's run locally in a containerized",
    "start": "2790950",
    "end": "2796350"
  },
  {
    "text": "environment you can validate configuration as part of CIN CD coded the vacation should be deployed with the",
    "start": "2796350",
    "end": "2802170"
  },
  {
    "text": "same process so not case that's like our deploy process custom controllers to",
    "start": "2802170",
    "end": "2807230"
  },
  {
    "text": "deploy custom configuration and then you can just basically use custom resources",
    "start": "2807230",
    "end": "2812550"
  },
  {
    "text": "of custom controllers to integrate with your infrastructure cool so I don't want to make it sound like this is all solved",
    "start": "2812550",
    "end": "2818610"
  },
  {
    "text": "so today 50% of our services in kubernetes and our goal is by the end of h1 this year for the rest of our",
    "start": "2818610",
    "end": "2824970"
  },
  {
    "text": "services to be in kubernetes so we have a lot of work to do just the scale the operating with that many services you",
    "start": "2824970",
    "end": "2830610"
  },
  {
    "text": "know we have some services that would run with several hundred replicas so it's like a quite a bit of scale moving",
    "start": "2830610",
    "end": "2836610"
  },
  {
    "text": "all of our configuration to this get ops workflow so like some examples that aren't in this flow yet but we want to",
    "start": "2836610",
    "end": "2842100"
  },
  {
    "text": "be is like dashboards and alerting so if you could have your dashboards in your learning alongside your code and then",
    "start": "2842100",
    "end": "2847140"
  },
  {
    "text": "like we could also generate default alerts like that would be really neat so yeah i scaling the cluster we've got",
    "start": "2847140",
    "end": "2853110"
  },
  {
    "text": "some sed poms working on we're investigating multi class Turks where we're not gonna be able to support",
    "start": "2853110",
    "end": "2858420"
  },
  {
    "text": "everything with like one production cluster some of our sources of TVD on the migration list are just because",
    "start": "2858420",
    "end": "2864690"
  },
  {
    "text": "there's really high memory requirements so we've actually already saw this for machine learning jobs which have really",
    "start": "2864690",
    "end": "2870060"
  },
  {
    "text": "high GPU requirements so they also have their own cluster but what about scheduling services with different",
    "start": "2870060",
    "end": "2875490"
  },
  {
    "text": "memory requirements on the same cluster like do you want one heterogeneous cluster with multiple",
    "start": "2875490",
    "end": "2881220"
  },
  {
    "text": "instance types or do you want separate clusters with different needs so something we're kind of like figuring out Stanfill services tighter",
    "start": "2881220",
    "end": "2888600"
  },
  {
    "text": "integration was keep CTL because that's kind of anything and then yeah a bunch of other problems that I've been working on and I'm happy",
    "start": "2888600",
    "end": "2894790"
  },
  {
    "text": "to talk more about it so you could yeah me talk to me after the chat and everybody's hiring so if me.com slash",
    "start": "2894790",
    "end": "2901180"
  },
  {
    "text": "careers thanks [Applause]",
    "start": "2901180",
    "end": "2907800"
  }
]