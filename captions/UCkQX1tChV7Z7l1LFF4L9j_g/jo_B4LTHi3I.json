[
  {
    "text": "I'm going to play with no. JS you will watch me you will be amused and we will go on with our lives um it it will be",
    "start": "22640",
    "end": "29679"
  },
  {
    "text": "very fun um but basically I don't have so many slides I'm just going to open it up and type and like show you what sort",
    "start": "29679",
    "end": "36800"
  },
  {
    "text": "of things that you might be able to do with node and I kind of hope that this will be a bit interactive where you'll",
    "start": "36800",
    "end": "41879"
  },
  {
    "text": "say like no you forgot a semicolon I'll say no semicolons are optional and then we'll you know fight it out um no uh",
    "start": "41879",
    "end": "49399"
  },
  {
    "text": "just interrupt me as you desire okay um so first of",
    "start": "49399",
    "end": "55440"
  },
  {
    "text": "all uh I have to say node for Windows users although I saw that there as many",
    "start": "55440",
    "end": "61680"
  },
  {
    "text": "Macintosh users is not as good as it could be uh we're working on that soon",
    "start": "61680",
    "end": "67000"
  },
  {
    "text": "windows will be very supported at the moment it's a very Unix sort of thing uh",
    "start": "67000",
    "end": "72560"
  },
  {
    "text": "but this will be changing in the next six months or so uh so what's that don't waste your time oh",
    "start": "72560",
    "end": "79640"
  },
  {
    "text": "no windows windows is very important just like PHP",
    "start": "79640",
    "end": "85079"
  },
  {
    "text": "um we we don't have uh so",
    "start": "85079",
    "end": "91400"
  },
  {
    "text": "all right so uh let me just just for those of you who",
    "start": "91840",
    "end": "97399"
  },
  {
    "text": "are somewhat unfamiliar with downloading and compiling things yourself know it is",
    "start": "97399",
    "end": "102479"
  },
  {
    "text": "one of these things that is sufficiently underdevelopment that you want to compile it yourself from Source okay not",
    "start": "102479",
    "end": "109040"
  },
  {
    "text": "all things are that way if you install op SSL obviously you just install the Macintosh ports or you install the",
    "start": "109040",
    "end": "115159"
  },
  {
    "text": "Debian package or whatever but node is changing okay it's a living creature and",
    "start": "115159",
    "end": "122399"
  },
  {
    "text": "with that comes some blood some pain and your necessity uh to uh to compile it so",
    "start": "122399",
    "end": "130599"
  },
  {
    "text": "this is how you do it okay I'm not going to go through the whole procedure but hopefully this will work in a not",
    "start": "130599",
    "end": "136599"
  },
  {
    "text": "unreasonable amount of time um so you download it and you have to compile it",
    "start": "136599",
    "end": "144239"
  },
  {
    "text": "um I'm sorry I can't wait two minutes all right",
    "start": "144239",
    "end": "149879"
  },
  {
    "text": "I'm going to to not do compiling instructions configure make make install Okay and then you get node which is a",
    "start": "149879",
    "end": "157920"
  },
  {
    "text": "command line thing it's not a guey it's not uh IDE it's it's something it's it's",
    "start": "157920",
    "end": "163400"
  },
  {
    "text": "like python right you you type it in your command line um if you type it without arguments you kind of get this",
    "start": "163400",
    "end": "170319"
  },
  {
    "text": "weird prompt um and you can type JavaScript in there okay so so node is",
    "start": "170319",
    "end": "178120"
  },
  {
    "text": "uh a bunch of sugar on top of a very complex uh Virtual Machine written by",
    "start": "178120",
    "end": "184879"
  },
  {
    "text": "Google called V8 V8 is the JavaScript engine inside of chrome um it is a beast",
    "start": "184879",
    "end": "192000"
  },
  {
    "text": "okay it's a it's a huge very high performance virtual machine uh written",
    "start": "192000",
    "end": "198760"
  },
  {
    "text": "by very smart people um that is not what node is node is a set of libraries on",
    "start": "198760",
    "end": "204480"
  },
  {
    "text": "top of V8 okay that that takes uh uses its greatness to do networking things um",
    "start": "204480",
    "end": "212799"
  },
  {
    "text": "and the emphasis is on networking it's it's somehow a general purpose thing but",
    "start": "212799",
    "end": "218280"
  },
  {
    "text": "the the focus is on doing networking correctly and so it does it in a",
    "start": "218280",
    "end": "224920"
  },
  {
    "text": "slightly weird way that I hope to demonstrate with a couple of examples um but first let me just point out that yes",
    "start": "224920",
    "end": "232720"
  },
  {
    "text": "you do have a reple and you can type you know function add AB",
    "start": "232720",
    "end": "240079"
  },
  {
    "text": "return a plus b and add two numbers right so that works",
    "start": "241000",
    "end": "248480"
  },
  {
    "text": "um there's a global variable in node so in in browser JavaScript you have this",
    "start": "248480",
    "end": "254599"
  },
  {
    "text": "window variable that's like this Global thing that somehow ties you to your site",
    "start": "254599",
    "end": "260320"
  },
  {
    "text": "well that's because you're in a dawn you you have a window that you're playing with in node you don't have you're not",
    "start": "260320",
    "end": "267000"
  },
  {
    "text": "associated with a browser um so so you don't have this window object you have this process object okay and and so so",
    "start": "267000",
    "end": "274919"
  },
  {
    "text": "process is a global variable and it's it's kind of central to to to node so",
    "start": "274919",
    "end": "281919"
  },
  {
    "text": "for example process. pit is the pit uh we get bugs if we don't have semicolons",
    "start": "281919",
    "end": "288000"
  },
  {
    "text": "that's somewhat true yes uh but I'm just on I'm just kind of playing around so",
    "start": "288000",
    "end": "293039"
  },
  {
    "text": "hopefully we won't get any bugs um if you just type process you'll like see all the stuff in process which is",
    "start": "293039",
    "end": "299160"
  },
  {
    "text": "actually kind of a lot of stuff like processin which is the environment um",
    "start": "299160",
    "end": "307520"
  },
  {
    "text": "okay so so you have this this read ofal print Loop which is what you do when you",
    "start": "307520",
    "end": "313440"
  },
  {
    "text": "execute it but of course you can run scripts too which is the most useful thing um so let me write a little script",
    "start": "313440",
    "end": "321520"
  },
  {
    "text": "so I'm going to do this and hopefully it doesn't freak you out okay close your",
    "start": "321520",
    "end": "326560"
  },
  {
    "text": "eyes Okay um so what I'm going to do is uh write a a",
    "start": "326560",
    "end": "334840"
  },
  {
    "text": "program called helloworld.js yes uh thank you so",
    "start": "334840",
    "end": "340840"
  },
  {
    "text": "obviously you you open up your uh text editor the only one that you ever know in love",
    "start": "340840",
    "end": "348599"
  },
  {
    "text": "right and you start typing a little program so I'm going to indent it a little bit because it doesn't work on",
    "start": "348960",
    "end": "354639"
  },
  {
    "text": "the video but so do you all",
    "start": "354639",
    "end": "359919"
  },
  {
    "text": "from inside no no no I I'm just launching it from",
    "start": "359919",
    "end": "365800"
  },
  {
    "text": "bash same old plain stuff do you guys know what set timeout",
    "start": "365800",
    "end": "371759"
  },
  {
    "text": "does does every everybody's somehow familiar with browsers and stuff right",
    "start": "371759",
    "end": "377840"
  },
  {
    "text": "um and so you have set timeout in the browser and what set timeout does is it has two arguments the first argument is",
    "start": "377840",
    "end": "383400"
  },
  {
    "text": "a call back and the second argument is uh uh the number of milliseconds that",
    "start": "383400",
    "end": "389199"
  },
  {
    "text": "you want to wait okay so I'm going to type this program and I want somebody to tell me",
    "start": "389199",
    "end": "395400"
  },
  {
    "text": "what it does now you you hopefully well I guess",
    "start": "395400",
    "end": "403000"
  },
  {
    "text": "a lot of you raised your hand but um so so intuitively what what do you",
    "start": "403000",
    "end": "408960"
  },
  {
    "text": "think this does right okay so so hopefully as you",
    "start": "408960",
    "end": "414440"
  },
  {
    "text": "guys said uh it prints hello Waits 2 seconds and then prints world so let's let's try",
    "start": "414440",
    "end": "420160"
  },
  {
    "text": "that um node hello world hello Waits 2",
    "start": "420160",
    "end": "426520"
  },
  {
    "text": "seconds and then world then it exits okay that's good so so one of the points",
    "start": "426520",
    "end": "433280"
  },
  {
    "text": "I want to make here is that node should be somehow familiar to JavaScript people",
    "start": "433280",
    "end": "438800"
  },
  {
    "text": "who people who are familiar with browser side JavaScript should be should just",
    "start": "438800",
    "end": "443919"
  },
  {
    "text": "feel comfortable not because it's JavaScript necessarily but because we use the same word I mean we could have",
    "start": "443919",
    "end": "449879"
  },
  {
    "text": "said we could have called this sleep right we could have said sleep there and",
    "start": "449879",
    "end": "455479"
  },
  {
    "text": "yeah you you would probably get it too but we we try to we try to use the same terminology where possible um so there's",
    "start": "455479",
    "end": "464879"
  },
  {
    "text": "something weird about this which is different than how you might do this in",
    "start": "464879",
    "end": "470479"
  },
  {
    "text": "a different language um just I think in in PHP you might do something like this",
    "start": "470479",
    "end": "478560"
  },
  {
    "text": "uh do you say print in PHP so you print and then you sleep two",
    "start": "478560",
    "end": "487680"
  },
  {
    "text": "seconds and then you then you do world",
    "start": "487680",
    "end": "492840"
  },
  {
    "text": "right okay so right this is how you would do it in PHP so what what's the",
    "start": "496120",
    "end": "501599"
  },
  {
    "text": "difference between these two these these two program like there's something fundamentally different here",
    "start": "501599",
    "end": "508000"
  },
  {
    "text": "like I right okay so so notice in this one um",
    "start": "508000",
    "end": "514080"
  },
  {
    "text": "the hello happened immediately right we went right through that set timeout and",
    "start": "514080",
    "end": "519120"
  },
  {
    "text": "here we kind of stopped on the sleep right so that that is the fundamental",
    "start": "519120",
    "end": "525040"
  },
  {
    "text": "difference in note is that you never ever stop never do you sleep never do",
    "start": "525040",
    "end": "531240"
  },
  {
    "text": "you fetch a URL from a website and wait for it to come back like it it not only",
    "start": "531240",
    "end": "539640"
  },
  {
    "text": "are you discouraged from doing it you simply do not have the ability to do it",
    "start": "539640",
    "end": "544720"
  },
  {
    "text": "because it's sealed off from you you you cannot sleep in node you can set time",
    "start": "544720",
    "end": "549760"
  },
  {
    "text": "out there's no wait on states there there's no there's no wait on States there's no MW text locks there's there's",
    "start": "549760",
    "end": "556000"
  },
  {
    "text": "no sort of possibility of of just halting execution you can idle okay so so this",
    "start": "556000",
    "end": "563240"
  },
  {
    "text": "program when it's during those 2 seconds in between the hello and the world it's",
    "start": "563240",
    "end": "568320"
  },
  {
    "text": "not like spinning in a busy Loop right it just idles the CPU goes to zero the",
    "start": "568320",
    "end": "574079"
  },
  {
    "text": "the OS unsch schedules it does other things you know updates my clock or whatever and then schedules it back when",
    "start": "574079",
    "end": "581160"
  },
  {
    "text": "when when the timeout is done okay so so node is good at",
    "start": "581160",
    "end": "586440"
  },
  {
    "text": "idling it doesn't sleep though okay so so let me uh just kind of improve on",
    "start": "586440",
    "end": "593600"
  },
  {
    "text": "this example and maybe I'll go slightly faster now so let me CP hello world into",
    "start": "593600",
    "end": "599800"
  },
  {
    "text": "hello world 2 I'm doing it this way so that I can",
    "start": "599800",
    "end": "605000"
  },
  {
    "text": "give it to you later what if I change that set time out to set",
    "start": "605000",
    "end": "610200"
  },
  {
    "text": "interval hello yes hello world world world",
    "start": "610200",
    "end": "618000"
  },
  {
    "text": "um so let me do that hello world oh wait",
    "start": "618000",
    "end": "624320"
  },
  {
    "text": "that was the wrong one hello world world",
    "start": "624320",
    "end": "629880"
  },
  {
    "text": "World okay maybe we should have used something less than two seconds yes oh",
    "start": "629880",
    "end": "635399"
  },
  {
    "text": "excellent question so so why did the first script end and why is the second",
    "start": "635399",
    "end": "640639"
  },
  {
    "text": "so notice that that script exits right now I can type LS but if the on the",
    "start": "640639",
    "end": "646079"
  },
  {
    "text": "second script you know I can type LS as much as I want I'm not returned to the prompt the process continues onward uh",
    "start": "646079",
    "end": "653880"
  },
  {
    "text": "so the so this brings up an important property of node it exits when there's nothing left to do so it it has this",
    "start": "653880",
    "end": "661399"
  },
  {
    "text": "kind of natural ability to uh reference count the call backs that are pending for for it be it a",
    "start": "661399",
    "end": "669160"
  },
  {
    "text": "network connection a call back waiting for an HTP response or a Interval Timer",
    "start": "669160",
    "end": "676120"
  },
  {
    "text": "that's going to be uh executed every once in a while it it knows that there's",
    "start": "676120",
    "end": "681200"
  },
  {
    "text": "something to do and so it doesn't drop out but once all those things go away it drops out so it's a good way to design",
    "start": "681200",
    "end": "688320"
  },
  {
    "text": "your program such that you do the things that need to be done and then it exits naturally you don't proc you don't exit",
    "start": "688320",
    "end": "695200"
  },
  {
    "text": "the process forcefully um so this is all",
    "start": "695200",
    "end": "700360"
  },
  {
    "text": "fine and dandy like I'm sure you're like oh great okay so so JavaScript in the",
    "start": "700360",
    "end": "706519"
  },
  {
    "text": "console that's cool I guess but that's actually not so interesting um the",
    "start": "706519",
    "end": "713760"
  },
  {
    "text": "interesting part is is that this comes bundled with a bunch of kind of good librar",
    "start": "713760",
    "end": "720120"
  },
  {
    "text": "um and so let me um write you a web server okay um so it",
    "start": "720120",
    "end": "726720"
  },
  {
    "text": "has a pretty Advanced HTTP uh thing Library built in okay that",
    "start": "726720",
    "end": "734160"
  },
  {
    "text": "that can do both client and server side HTP and so let me demonstrate to you",
    "start": "734160",
    "end": "739199"
  },
  {
    "text": "what what the HTP client looks like so first of all you have to load the HTP module um and we'll put a VAR in front",
    "start": "739199",
    "end": "746320"
  },
  {
    "text": "of that so it's not Global and then you have to create an HTTP server which you",
    "start": "746320",
    "end": "751839"
  },
  {
    "text": "do with create server and that thing gets a call back",
    "start": "751839",
    "end": "757199"
  },
  {
    "text": "so looks something like that so that",
    "start": "757199",
    "end": "762440"
  },
  {
    "text": "call back is uh executed every time a request comes into the server does that",
    "start": "762440",
    "end": "769279"
  },
  {
    "text": "make sense um so which is slightly different than every time a connection",
    "start": "769279",
    "end": "774800"
  },
  {
    "text": "is made to the server so I'll just call the server s and we have to bind to a",
    "start": "774800",
    "end": "780279"
  },
  {
    "text": "port so I'm just going to choose Port 8,000 right because I'm not root so I can't bind to lower numbered ports um so",
    "start": "780279",
    "end": "789279"
  },
  {
    "text": "here's the hello world thing you you write a header which is 200 okay",
    "start": "789279",
    "end": "795720"
  },
  {
    "text": "content type text",
    "start": "795720",
    "end": "801040"
  },
  {
    "text": "plane okay looks good can you guys all see that by the way okay um and then you",
    "start": "801040",
    "end": "807279"
  },
  {
    "text": "end the response and we just say hello world so that's your body so headers and",
    "start": "807279",
    "end": "813839"
  },
  {
    "text": "body um so let's try that out so I'm going to run web",
    "start": "813839",
    "end": "819360"
  },
  {
    "text": "server okay not exiting there's stuff to be done right it's it's listening on a",
    "start": "819360",
    "end": "825000"
  },
  {
    "text": "port um so let me go back to my thing here and",
    "start": "825000",
    "end": "830120"
  },
  {
    "text": "now I'm going to curl uh HTP Local Host Port",
    "start": "830120",
    "end": "836000"
  },
  {
    "text": "8000 and I get Hello World okay excellent so we wrote a little web server um I think we can even do it",
    "start": "836000",
    "end": "845480"
  },
  {
    "text": "here you you can do it there too okay so so we can we can hit hello world",
    "start": "846079",
    "end": "851920"
  },
  {
    "text": "excellent um that's good let's inspect those headers that it's returning for a",
    "start": "851920",
    "end": "858680"
  },
  {
    "text": "second okay can you guys see that right here okay so the headers are content",
    "start": "858680",
    "end": "865800"
  },
  {
    "text": "type type text plane let me put up the uh server again um so content type text plane we told it",
    "start": "865800",
    "end": "873199"
  },
  {
    "text": "to send right and there's two other headers uh connection uh keep alive and",
    "start": "873199",
    "end": "879040"
  },
  {
    "text": "transfer en coding chunked okay so why why these",
    "start": "879040",
    "end": "886639"
  },
  {
    "text": "headers what okay wait so first of all let me also point out that it's HTP 1.1",
    "start": "886639",
    "end": "893279"
  },
  {
    "text": "which possibly you don't care about Until you realize that your server can't do HTP 1.1 and then you get really angry",
    "start": "893279",
    "end": "900000"
  },
  {
    "text": "um is it does HTP 1.01 the most modern version of HTP um why is it connection",
    "start": "900000",
    "end": "907279"
  },
  {
    "text": "keep alive what what does that",
    "start": "907279",
    "end": "911519"
  },
  {
    "text": "mean yeah you you have it it means there's persistent connections to the web server so when you go to make a",
    "start": "914360",
    "end": "920240"
  },
  {
    "text": "request to the web server in Old in the olden days you",
    "start": "920240",
    "end": "925519"
  },
  {
    "text": "would make the request get the response and then the TCP connection would be killed but in modern hgp this is a",
    "start": "925519",
    "end": "932040"
  },
  {
    "text": "persistent connection and so you can send a request and send another request and send another request all on the same",
    "start": "932040",
    "end": "938600"
  },
  {
    "text": "connection and get response response response without going through the effort of tearing down and building up",
    "start": "938600",
    "end": "944079"
  },
  {
    "text": "that TCP connection every time that's good you want that you want persistent connections um what about that what",
    "start": "944079",
    "end": "951440"
  },
  {
    "text": "about transfer encoding chunked are there any HTP nerds in the",
    "start": "951440",
    "end": "957920"
  },
  {
    "text": "audience send yes you people you're right okay",
    "start": "957920",
    "end": "964279"
  },
  {
    "text": "streaming that's that's right so it's not totally clear from this",
    "start": "964279",
    "end": "970079"
  },
  {
    "text": "example here uh we we wrote we said response.end and then we gave it some",
    "start": "970079",
    "end": "975319"
  },
  {
    "text": "body right um node doesn't force you to",
    "start": "975319",
    "end": "980360"
  },
  {
    "text": "give the entire body up front uh the API actually allows you to do other things",
    "start": "980360",
    "end": "986160"
  },
  {
    "text": "let me uh make this more explicit let's write part of the body first so let's",
    "start": "986160",
    "end": "991360"
  },
  {
    "text": "write hello and then do a set",
    "start": "991360",
    "end": "995360"
  },
  {
    "text": "timeout you want to change",
    "start": "996759",
    "end": "1003480"
  },
  {
    "text": "yes okay so can we guess what this will",
    "start": "1005399",
    "end": "1011680"
  },
  {
    "text": "do yeah so first it writes hello and then it writes world but it pauses in",
    "start": "1014160",
    "end": "1020120"
  },
  {
    "text": "between okay so so you're getting you're making one request to the server you get back hello one body one response right",
    "start": "1020120",
    "end": "1027640"
  },
  {
    "text": "hello 2 seconds pause and then world and then the response terminates okay so",
    "start": "1027640",
    "end": "1036400"
  },
  {
    "text": "so yeah and then it will transmit it because it's chunk and you don't you don't have a full line there have",
    "start": "1036640",
    "end": "1044160"
  },
  {
    "text": "Carriage returns in okay never mind the body is not terminated by Carriage returns in HTP uh but",
    "start": "1044160",
    "end": "1053160"
  },
  {
    "text": "let's yeah let's let's test it and see what happens okay so so if I curl it",
    "start": "1053160",
    "end": "1059280"
  },
  {
    "text": "oops I get cannot connect to host because we have to start it okay so we start the web server and we curl it",
    "start": "1059280",
    "end": "1066400"
  },
  {
    "text": "and we get hello and then World okay so that's cool that's cool and all um",
    "start": "1066400",
    "end": "1072720"
  },
  {
    "text": "that's why we needed the transfer en coding chunked because if we said content length 12",
    "start": "1072720",
    "end": "1079640"
  },
  {
    "text": "it wouldn't actually work because um you know we could have we could have",
    "start": "1079640",
    "end": "1085080"
  },
  {
    "text": "done other things no at at that point where we where we wrote the um the",
    "start": "1085080",
    "end": "1090520"
  },
  {
    "text": "response when we wrote this thing we when actually when we wrote the header here we don't we don't actually know",
    "start": "1090520",
    "end": "1096280"
  },
  {
    "text": "what's coming next right maybe we're making a request to a mySQL database and it's sending back you know between 50",
    "start": "1096280",
    "end": "1103200"
  },
  {
    "text": "and a thousand lines of responses we don't know how big that body is furthermore we don't want to buffer it",
    "start": "1103200",
    "end": "1110520"
  },
  {
    "text": "okay we don't want to go through the extra effort of inside the web server buffering up that entire MySQL response",
    "start": "1110520",
    "end": "1117720"
  },
  {
    "text": "before we send it out to the server what we would rather do is proxy it to the to the client and so when this MySQL server",
    "start": "1117720",
    "end": "1124919"
  },
  {
    "text": "starts sending us a huge uh response with like many thousands of rows instead",
    "start": "1124919",
    "end": "1129960"
  },
  {
    "text": "of using up our server memory we can just send it directly back to the client",
    "start": "1129960",
    "end": "1135840"
  },
  {
    "text": "so the browser so the question is how how does the browser know when the response is",
    "start": "1135840",
    "end": "1141400"
  },
  {
    "text": "completed that's part of HTTP um HTTP has a way of terminating each message so",
    "start": "1141400",
    "end": "1148960"
  },
  {
    "text": "there's different ways of encoding so right there in HP previous before 1.1",
    "start": "1148960",
    "end": "1157240"
  },
  {
    "text": "you actually didn't have persistent connections and so the way that you terminated the response was you just",
    "start": "1157240",
    "end": "1162799"
  },
  {
    "text": "shut down the connection so when the connection shut down you realize that it's done but now that we're in http 1.",
    "start": "1162799",
    "end": "1168720"
  },
  {
    "text": ".1 we can possibly have more than one response so we need a way to bound these messages we need a framing protocol yes",
    "start": "1168720",
    "end": "1176159"
  },
  {
    "text": "you need keep alive for for the persistent connections but you need transfer encoding chunk to send a variable length",
    "start": "1176159",
    "end": "1182679"
  },
  {
    "text": "response um whatever let's not talk about it so much um what I want to say here is is",
    "start": "1182679",
    "end": "1191000"
  },
  {
    "text": "that when this server is doing oops if I don't turn it off all the time okay so",
    "start": "1191000",
    "end": "1197120"
  },
  {
    "text": "if I start it and do that in between that hello and that world the server has not shut down okay it's it's",
    "start": "1197120",
    "end": "1203960"
  },
  {
    "text": "not like it's writing that response and nothing else can happen no no quite the",
    "start": "1203960",
    "end": "1209159"
  },
  {
    "text": "opposite that was not a sleep okay so we drop down and we're idle before that",
    "start": "1209159",
    "end": "1214679"
  },
  {
    "text": "that 2C timeout happens the server is Idle it can handle another connection uh",
    "start": "1214679",
    "end": "1220679"
  },
  {
    "text": "let's see if I can I'll try to curl it from two terminals at once see if this",
    "start": "1220679",
    "end": "1225919"
  },
  {
    "text": "this works um okay I do it I have to do be very fast Okay click there click",
    "start": "1225919",
    "end": "1232520"
  },
  {
    "text": "there oh wait okay one more time okay click there click there okay so you",
    "start": "1232520",
    "end": "1239480"
  },
  {
    "text": "see did you see that it got the other the other hello and in fact what if we Apachi bench it with 100",
    "start": "1239480",
    "end": "1246880"
  },
  {
    "text": "uh re connections to it and let's just see how long each each of those request",
    "start": "1246880",
    "end": "1252440"
  },
  {
    "text": "responses we're doing 100 in parallel but each one should it take exactly 2 seconds if the server is doing what it's",
    "start": "1252440",
    "end": "1259440"
  },
  {
    "text": "wanting if the server was stupid then the first the first request response should happen in 2 seconds but the next",
    "start": "1259440",
    "end": "1265679"
  },
  {
    "text": "one should happen in four seconds and the next one will happen in 6 seconds that would be if we did a sleep but what",
    "start": "1265679",
    "end": "1271960"
  },
  {
    "text": "I'm telling you is that the server does the right thing it goes to idle it can handle another connection so um let's",
    "start": "1271960",
    "end": "1279120"
  },
  {
    "text": "see if we can do this we shouldn't do 100 because oh wait yeah I think we can do",
    "start": "1279120",
    "end": "1285240"
  },
  {
    "text": "that okay so hopefully this will work does that look right",
    "start": "1285360",
    "end": "1290400"
  },
  {
    "text": "okay okay so one two okay so hopefully we've done 100 request responses and",
    "start": "1290400",
    "end": "1296880"
  },
  {
    "text": "let's see if we can somewhere in here I think it tells us okay so taken so concurrency level",
    "start": "1296880",
    "end": "1303880"
  },
  {
    "text": "100 completed requests 100 time taken for Test 2 seconds okay excellent that",
    "start": "1303880",
    "end": "1310279"
  },
  {
    "text": "is what you want right you do not want that test to take hundreds and hundreds",
    "start": "1310279",
    "end": "1315440"
  },
  {
    "text": "of seconds so I mean obviously this is a contrived example right um but the point that I",
    "start": "1315440",
    "end": "1322520"
  },
  {
    "text": "want to make is that node handles concurrency well because of this property that it never waits for",
    "start": "1322520",
    "end": "1328760"
  },
  {
    "text": "anything it's allowed to handle more and more connections it's never halted on on",
    "start": "1328760",
    "end": "1335559"
  },
  {
    "text": "sleeping or connecting to some database or or anything actually so it can always",
    "start": "1335559",
    "end": "1341360"
  },
  {
    "text": "handle another connection so it it it tends to perform",
    "start": "1341360",
    "end": "1348200"
  },
  {
    "text": "much better especially under high concurrency than your traditional web",
    "start": "1348200",
    "end": "1354840"
  },
  {
    "text": "server okay what happens when you add a zero what happens when I add a zero to",
    "start": "1356720",
    "end": "1364320"
  },
  {
    "text": "the aachi bench yeah to which one this",
    "start": "1364320",
    "end": "1369960"
  },
  {
    "text": "sure nothing because it's not running um I it should be it should be fine um so",
    "start": "1369960",
    "end": "1377520"
  },
  {
    "text": "that's that's 100 current connections but a thousand responses all right so so it's doing it",
    "start": "1377520",
    "end": "1384840"
  },
  {
    "text": "in 100 batches so I think it should take uh 10 * 2 which is 20 seconds or",
    "start": "1384840",
    "end": "1390400"
  },
  {
    "text": "something does that seem",
    "start": "1390400",
    "end": "1393559"
  },
  {
    "text": "reasonable okay yes so it took 20 seconds obviously if if we increase the concurrency my computer can't actually",
    "start": "1398400",
    "end": "1405480"
  },
  {
    "text": "handle a th000 concurrent requests from this laptop um because Macintosh is wait hold",
    "start": "1405480",
    "end": "1413360"
  },
  {
    "text": "on um fix Macintosh Port",
    "start": "1413360",
    "end": "1421600"
  },
  {
    "text": "range okay let's try that it should it should work okay so",
    "start": "1422320",
    "end": "1428200"
  },
  {
    "text": "this should be two seconds too many files I have to I have to increase my U limit operating system limits okay not",
    "start": "1428200",
    "end": "1435360"
  },
  {
    "text": "not necessarily the server limits um all right so web servers yes web servers it",
    "start": "1435360",
    "end": "1442440"
  },
  {
    "text": "can do web servers obviously nobody cares because you don't actually want to write a web server you want to use a web framework we have those okay but I don't",
    "start": "1442440",
    "end": "1449760"
  },
  {
    "text": "make them other people make them and they give talks too um this is the",
    "start": "1449760",
    "end": "1455360"
  },
  {
    "text": "foundation of what you want to be underneath your web stack okay other",
    "start": "1455360",
    "end": "1460919"
  },
  {
    "text": "things that make it more friendly are on top of it what the API that node provides is very simple but it's uh it's",
    "start": "1460919",
    "end": "1468720"
  },
  {
    "text": "good um okay so what I want to do now is write a",
    "start": "1468720",
    "end": "1475520"
  },
  {
    "text": "little so we can do web web that's cool I want to do now a little TCP server",
    "start": "1475520",
    "end": "1482000"
  },
  {
    "text": "okay so uh getting down you're you're saying you know HP that's too much that's like way",
    "start": "1482000",
    "end": "1490720"
  },
  {
    "text": "too much overhead for me I am cool I do raw TCP okay so so now",
    "start": "1490720",
    "end": "1500039"
  },
  {
    "text": "utcp server.js okay so here's how it",
    "start": "1500679",
    "end": "1508200"
  },
  {
    "text": "looks I have to type frantically now okay so require net that's where the TCP stuff",
    "start": "1508200",
    "end": "1516720"
  },
  {
    "text": "lives um and it looks a lot like the HTP server",
    "start": "1516720",
    "end": "1524000"
  },
  {
    "text": "you do create server but instead of giving a request response that's a that's an H HP thing in TCP you just",
    "start": "1524000",
    "end": "1530679"
  },
  {
    "text": "have sockets so you get a socket so every time somebody connects to the server you get that socket and then we",
    "start": "1530679",
    "end": "1537399"
  },
  {
    "text": "have to bind that server to a port so we'll we'll bind to Port 8,000 again look cool okay so what can we do with",
    "start": "1537399",
    "end": "1544200"
  },
  {
    "text": "these sockets well we can write stuff to them and we can terminate",
    "start": "1544200",
    "end": "1551159"
  },
  {
    "text": "them we can do more actually but let's start with that so",
    "start": "1551159",
    "end": "1556279"
  },
  {
    "text": "it'll write hello and then world and terminate the TCP connection so let's",
    "start": "1556279",
    "end": "1561480"
  },
  {
    "text": "see are you a netcat fan or a tnet fanat netcat",
    "start": "1561480",
    "end": "1570320"
  },
  {
    "text": "okay I mean as as sick it as it is I'm actually more of a tnet fan but",
    "start": "1570440",
    "end": "1576720"
  },
  {
    "text": "um okay so let's just use tnet everybody loves tnet",
    "start": "1576720",
    "end": "1582200"
  },
  {
    "text": "right okay so we're running the TCP server um if we tell net to Port 8,000",
    "start": "1582200",
    "end": "1587679"
  },
  {
    "text": "we get all this crap because it's tnet um but we do get Hello World in there",
    "start": "1587679",
    "end": "1594080"
  },
  {
    "text": "okay and of course you get connection closed by Foreign host let's just use tet netcat from now",
    "start": "1594080",
    "end": "1602159"
  },
  {
    "text": "on okay hello world excellent TCP server this was only sending data we can of",
    "start": "1602159",
    "end": "1608600"
  },
  {
    "text": "course receive data we are the we being the server so let's let's do that now um",
    "start": "1608600",
    "end": "1614559"
  },
  {
    "text": "so when somebody when we receive some data let's just Echo it back to them",
    "start": "1614559",
    "end": "1620360"
  },
  {
    "text": "okay so the way you do that is you do socket on",
    "start": "1620360",
    "end": "1626000"
  },
  {
    "text": "data and you give a call back okay so every time some data every",
    "start": "1626440",
    "end": "1632600"
  },
  {
    "text": "time a packet arrives on that socket we're going to do something okay um and",
    "start": "1632600",
    "end": "1638880"
  },
  {
    "text": "what we want to do is is just send it back to the person who sent it so what we can do is Socket WR",
    "start": "1638880",
    "end": "1646880"
  },
  {
    "text": "data okay so that's seem like an echo server to you so we'll get hello world",
    "start": "1647000",
    "end": "1652120"
  },
  {
    "text": "and then everything after that whatever we write to it will get sent back the server is never going to terminate the",
    "start": "1652120",
    "end": "1658200"
  },
  {
    "text": "connection okay so let's try",
    "start": "1658200",
    "end": "1662080"
  },
  {
    "text": "that oh wait",
    "start": "1664720",
    "end": "1670519"
  },
  {
    "text": "what oh thank you you guys are so observant yes there's an end right there",
    "start": "1670919",
    "end": "1676159"
  },
  {
    "text": "so let's let's change that to right um okay hello world okay netc is line",
    "start": "1676159",
    "end": "1684799"
  },
  {
    "text": "buffered so that's why I'm not getting it back as I type it",
    "start": "1684799",
    "end": "1690320"
  },
  {
    "text": "um so that's an echo server okay so let's do something slightly more",
    "start": "1690320",
    "end": "1697159"
  },
  {
    "text": "complicated which is I mean obviously the server can be handling many connections at once let's write a chat",
    "start": "1697159",
    "end": "1703880"
  },
  {
    "text": "server in in node so that everybody who connects to to it with with their",
    "start": "1703880",
    "end": "1709000"
  },
  {
    "text": "clients hopefully there's people in the room um can connect to it and then we'll be able to chat on tnet to each other",
    "start": "1709000",
    "end": "1716240"
  },
  {
    "text": "via this um and obviously you're not it's going to be like the crappiest chat server ever um yes exceptions uh yeah so",
    "start": "1716240",
    "end": "1727279"
  },
  {
    "text": "I'm kind of throwing that aside yes there there's a lot of holes in in these programs that you would need to plug in",
    "start": "1727279",
    "end": "1733760"
  },
  {
    "text": "a real life application um let's let's just see if if we can uh get started",
    "start": "1733760",
    "end": "1739919"
  },
  {
    "text": "with a very crappy very crappy chat server so chat JS okay so again require",
    "start": "1739919",
    "end": "1749759"
  },
  {
    "text": "net net create server actually you can just abbreviate This",
    "start": "1749840",
    "end": "1756399"
  },
  {
    "text": "Server socket I'll just abbreviate server with",
    "start": "1756399",
    "end": "1763480"
  },
  {
    "text": "s and then s has to listen on some Port okay so every time somebody connects",
    "start": "1763480",
    "end": "1769600"
  },
  {
    "text": "what we want to do is kind of keep a a pool of sockets so that we can broadcast later on so when data arrives we want to",
    "start": "1769600",
    "end": "1777120"
  },
  {
    "text": "kind of fire hose everybody in the connection pool okay so so what let's",
    "start": "1777120",
    "end": "1782960"
  },
  {
    "text": "keep an array obviously not the proper data structure for this sort of thing but whatever it's available and let's",
    "start": "1782960",
    "end": "1789240"
  },
  {
    "text": "just say sockets okay so we'll have like a little empty array where we're going to keep the people who connect to the",
    "start": "1789240",
    "end": "1795440"
  },
  {
    "text": "server in um so every time somebody connects to the server we want to put",
    "start": "1795440",
    "end": "1801080"
  },
  {
    "text": "them into the sockets so sockets push socket seem reasonable okay now we have",
    "start": "1801080",
    "end": "1806760"
  },
  {
    "text": "an array that that gets all of the sockets in it now what we want to do is",
    "start": "1806760",
    "end": "1812200"
  },
  {
    "text": "every time somebody says something in the server function",
    "start": "1812200",
    "end": "1818360"
  },
  {
    "text": "D we want to iterate over the sockets and write it out to them right we want to",
    "start": "1818360",
    "end": "1825398"
  },
  {
    "text": "broadcast what socket. on",
    "start": "1825840",
    "end": "1831200"
  },
  {
    "text": "yes is that right yeah okay bar I equal zero let's iterate over this thing",
    "start": "1831200",
    "end": "1838240"
  },
  {
    "text": "sockets do length",
    "start": "1838240",
    "end": "1841960"
  },
  {
    "text": "i++ um I forgot what we where am I what are we doing here oh yeah okay uh sockets I",
    "start": "1845039",
    "end": "1854480"
  },
  {
    "text": "write data that looks reasonable okay chat server bam okay so let's try this",
    "start": "1854480",
    "end": "1860039"
  },
  {
    "text": "puppy out um what's",
    "start": "1860039",
    "end": "1865559"
  },
  {
    "text": "that okay um let's try that see if that works probably",
    "start": "1866039",
    "end": "1873399"
  },
  {
    "text": "won't um so node chat JS if I tell net to Local Host at Port 8000 I get",
    "start": "1873399",
    "end": "1880679"
  },
  {
    "text": "something okay wait is somebody typing something I did this before and people",
    "start": "1880679",
    "end": "1886399"
  },
  {
    "text": "went to oh crap d it crash already man people Jesus hold your",
    "start": "1886399",
    "end": "1894399"
  },
  {
    "text": "horses you're ruining my demo all right we have to make it we have to improve it people are crashing it already um just",
    "start": "1894399",
    "end": "1901080"
  },
  {
    "text": "like real life just like real life okay clearly this was not good enough so",
    "start": "1901080",
    "end": "1906480"
  },
  {
    "text": "what's the problem here there's some problem which is that we're filling up this array with sockets and sometimes",
    "start": "1906480",
    "end": "1912639"
  },
  {
    "text": "people are disconnecting okay and I think that's what happened somebody connected and disconnected and now this array has dead socket in it it's still",
    "start": "1912639",
    "end": "1919480"
  },
  {
    "text": "in that array and so when we iterate over that and we try to write to it the server blows up and says like I can't",
    "start": "1919480",
    "end": "1924720"
  },
  {
    "text": "write to that because that socket is dead so what we have to do is remove those dead sockets from the array as",
    "start": "1924720",
    "end": "1931600"
  },
  {
    "text": "they disconnect from the server um so we can do that with um not on data but on",
    "start": "1931600",
    "end": "1939240"
  },
  {
    "text": "end or let's just do on close actually",
    "start": "1939240",
    "end": "1944760"
  },
  {
    "text": "um now let's do on end there there's two there's two termination events okay so",
    "start": "1944760",
    "end": "1951760"
  },
  {
    "text": "on end on the socket end we want to remove it from the array okay so um now",
    "start": "1951760",
    "end": "1959039"
  },
  {
    "text": "those of you who have uh good JavaScript skills okay I've done this like five times now so I think I can remember it",
    "start": "1959039",
    "end": "1965360"
  },
  {
    "text": "so I think I do sockets do index of socket so I find the index of",
    "start": "1965360",
    "end": "1971200"
  },
  {
    "text": "that guy and then I do sockets splice Maybe i1",
    "start": "1971200",
    "end": "1978760"
  },
  {
    "text": "anybody we we actually have to test this because I don't know maybe you",
    "start": "1978760",
    "end": "1984559"
  },
  {
    "text": "can",
    "start": "1985240",
    "end": "1988240"
  },
  {
    "text": "oops oh wait delete no okay so pretend we had an array like this and then we",
    "start": "1990600",
    "end": "1996159"
  },
  {
    "text": "wanted to do a splice that and then how does a look I think that's how you",
    "start": "1996159",
    "end": "2002919"
  },
  {
    "text": "remove an element from an array I I don't think delete delete",
    "start": "2002919",
    "end": "2009039"
  },
  {
    "text": "removes it from the array actually it doesn't change the length of the array so if we had a if we go",
    "start": "2009039",
    "end": "2018240"
  },
  {
    "text": "delete a z say oh oh that does work well well",
    "start": "2018840",
    "end": "2028960"
  },
  {
    "text": " okay I I've been doing it wrong my entire life",
    "start": "2029039",
    "end": "2035240"
  },
  {
    "text": "um it depends on the plat all right well whatever I know this",
    "start": "2035440",
    "end": "2040919"
  },
  {
    "text": "works okay yeah so let's let's try that again um so let me start the server node",
    "start": "2041559",
    "end": "2048960"
  },
  {
    "text": "chat JS and let me tnet to it so if I type hello I should get hello back let's",
    "start": "2048960",
    "end": "2054560"
  },
  {
    "text": "see if anybody else can type something on there oh poop very mature",
    "start": "2054560",
    "end": "2061040"
  },
  {
    "text": "guys what oh my IP address yes is uh",
    "start": "2061040",
    "end": "2066398"
  },
  {
    "text": "that port 8,000 all right",
    "start": "2066399",
    "end": "2072320"
  },
  {
    "text": "obviously the PHP people okay killing that",
    "start": "2072320",
    "end": "2080159"
  },
  {
    "text": "server okay so maybe if you noticed when I first joined",
    "start": "2080800",
    "end": "2088560"
  },
  {
    "text": "I typed hello and I got hello back so we're broadcasting to ourselves actually",
    "start": "2088560",
    "end": "2093839"
  },
  {
    "text": "which is a little bit unnecessary so let's just let's make it slightly it's still a piece of but we can make it",
    "start": "2093839",
    "end": "2100240"
  },
  {
    "text": "slightly better if we just skip one of these which is if sockets I equals",
    "start": "2100240",
    "end": "2107079"
  },
  {
    "text": "socket than continue or something right that should",
    "start": "2107079",
    "end": "2112400"
  },
  {
    "text": "work yeah or if they or whatever um so that should fix the um the echoing",
    "start": "2112400",
    "end": "2119240"
  },
  {
    "text": "problem uh run that tet to that hello okay so",
    "start": "2119240",
    "end": "2125920"
  },
  {
    "text": "so excellent um so let's just watch this for the rest",
    "start": "2125920",
    "end": "2132359"
  },
  {
    "text": "of the um yes so networking stuff HTP server",
    "start": "2132359",
    "end": "2141960"
  },
  {
    "text": "TCP server printing to standard out all of those things are not part of JavaScript um what is Javascript is like",
    "start": "2141960",
    "end": "2149920"
  },
  {
    "text": "functions and addition numbers strings arrays uh objects which are",
    "start": "2149920",
    "end": "2158200"
  },
  {
    "text": "hashes in in Java JavaScript um not not much more JavaScript is a very barebones",
    "start": "2158200",
    "end": "2165400"
  },
  {
    "text": "language so JavaScript has a couple of things",
    "start": "2165400",
    "end": "2170800"
  },
  {
    "text": "uh hopefully you won't hack my computer",
    "start": "2170800",
    "end": "2175880"
  },
  {
    "text": "um there there's a um there's like a math Library there's",
    "start": "2176040",
    "end": "2182960"
  },
  {
    "text": "there's there's a couple of things that are that are part of um JavaScript obviously this is too",
    "start": "2182960",
    "end": "2189079"
  },
  {
    "text": "distracting kill that um okay",
    "start": "2189079",
    "end": "2197400"
  },
  {
    "text": "so most of it is node um all all of this require stuff is node um yeah so what",
    "start": "2197560",
    "end": "2205079"
  },
  {
    "text": "what are the debugging options for node um so recently uh so like I said node",
    "start": "2205079",
    "end": "2210359"
  },
  {
    "text": "very bleeding edge right looks kind of Snappy and and cool here but wait till you get in production and right in the",
    "start": "2210359",
    "end": "2217119"
  },
  {
    "text": "gut so it's one of those things that's under development so debugging is is one of",
    "start": "2217119",
    "end": "2224040"
  },
  {
    "text": "the parts that is half done uh but I will show you what it looks like um so",
    "start": "2224040",
    "end": "2229200"
  },
  {
    "text": "let me write a little program here let let's open up our original hello world program",
    "start": "2229200",
    "end": "2236280"
  },
  {
    "text": "um so what if we wanted to debug this guy right uh let's put in a function",
    "start": "2236280",
    "end": "2243040"
  },
  {
    "text": "here",
    "start": "2243040",
    "end": "2246040"
  },
  {
    "text": "uh so there's this special debugger statement which is that um and so when",
    "start": "2256079",
    "end": "2262640"
  },
  {
    "text": "you run this normally you'll just I mean fu is not printing anything even so",
    "start": "2262640",
    "end": "2267839"
  },
  {
    "text": "we'll just get the original Behavior sorry so hello world exit because food",
    "start": "2267839",
    "end": "2275400"
  },
  {
    "text": "doesn't print anything but if you do node debug you get this little debugger",
    "start": "2275400",
    "end": "2281760"
  },
  {
    "text": "prompt it's like GDB everybody loves GDB right GDB no everybody loves GDB if you don't",
    "start": "2281760",
    "end": "2289240"
  },
  {
    "text": "love it you're wrong um so you type run and it will start a node process and we",
    "start": "2289240",
    "end": "2296240"
  },
  {
    "text": "hit a breakpoint in Fu on hello world line 9 okay and we can do like uh a back",
    "start": "2296240",
    "end": "2304160"
  },
  {
    "text": "trace and find out where we are and we can like list the code and see that",
    "start": "2304160",
    "end": "2309280"
  },
  {
    "text": "we're on that thing um so like I said V8 the engine on which node is built is an",
    "start": "2309280",
    "end": "2317480"
  },
  {
    "text": "incredibly professional and welld done VM and does include things like debugging this this interface is part of",
    "start": "2317480",
    "end": "2325200"
  },
  {
    "text": "node but the actual debugger the way that it can step and pause the VM is all",
    "start": "2325200",
    "end": "2331119"
  },
  {
    "text": "part of V8 itself and so in Chrome you might use the Chrome inspector thing",
    "start": "2331119",
    "end": "2336640"
  },
  {
    "text": "where you can open up a website like this and uh do control I maybe",
    "start": "2336640",
    "end": "2346240"
  },
  {
    "text": "no you guys know what I'm talking about right option",
    "start": "2346240",
    "end": "2352560"
  },
  {
    "text": "J okay so this thing right has like scripts and you can like set break",
    "start": "2354599",
    "end": "2360760"
  },
  {
    "text": "points and stuff um that is V8 V8 runs inside of chrome and the way that it",
    "start": "2360760",
    "end": "2366880"
  },
  {
    "text": "handles the break points is the same way is the same thing that we interface with okay uh so there's several options for",
    "start": "2366880",
    "end": "2374560"
  },
  {
    "text": "debugging in node there's different clients to this kind of internal",
    "start": "2374560",
    "end": "2380200"
  },
  {
    "text": "debugger um one is that thing that I just showed you the GDB like thing but",
    "start": "2380200",
    "end": "2385359"
  },
  {
    "text": "there's other ones like node",
    "start": "2385359",
    "end": "2391240"
  },
  {
    "text": "inspector um which uh are more graphical okay",
    "start": "2392240",
    "end": "2398359"
  },
  {
    "text": "there's an eclipse plugin for it um I'm trying to see if there's a",
    "start": "2398359",
    "end": "2404240"
  },
  {
    "text": "screenshot or something but maybe not um so anyway there's there's some debugging",
    "start": "2404240",
    "end": "2409960"
  },
  {
    "text": "options it looks like this it looks just like Chrome inspector",
    "start": "2409960",
    "end": "2416520"
  },
  {
    "text": "um yes um so that's the debugging question like I said this thing is total",
    "start": "2416520",
    "end": "2422920"
  },
  {
    "text": "crap actually I mean it's useful and I use it all the time but it's one of those parts that is not completely fully",
    "start": "2422920",
    "end": "2429040"
  },
  {
    "text": "baked this this client to the debugger the debugger itself is fine just the the",
    "start": "2429040",
    "end": "2434319"
  },
  {
    "text": "client here is do you know what I mean by client the V8 has uh is a separate",
    "start": "2434319",
    "end": "2440920"
  },
  {
    "text": "process and it presents its debugger it has a little protocol and so it opens a port and you can connect to that port",
    "start": "2440920",
    "end": "2447319"
  },
  {
    "text": "and issue commands to it it's a little Json protocol and in that way you can tell it to step and step into a function",
    "start": "2447319",
    "end": "2454119"
  },
  {
    "text": "and list the source code and break points and whatnot so yes there are some debugging options",
    "start": "2454119",
    "end": "2460280"
  },
  {
    "text": "but generally they're not as well fleshed out as one would hope in other",
    "start": "2460280",
    "end": "2466400"
  },
  {
    "text": "languages yeah I I mean basically this primitive thing is is basically what I'm",
    "start": "2466400",
    "end": "2471760"
  },
  {
    "text": "using a lot um okay so um I want to do one more demo at least",
    "start": "2471760",
    "end": "2480680"
  },
  {
    "text": "um so node can do a lot of things at once",
    "start": "2480680",
    "end": "2487400"
  },
  {
    "text": "right because it's not blocking okay so what I want to show you is how we can kind of mash together these examples",
    "start": "2487400",
    "end": "2493800"
  },
  {
    "text": "that we had into one process okay so so let me um let me copy that hello World",
    "start": "2493800",
    "end": "2500760"
  },
  {
    "text": "um example into helloworld server.js",
    "start": "2500760",
    "end": "2507520"
  },
  {
    "text": "um and what I want to show you is that so imagine you had a sleep Loop",
    "start": "2507520",
    "end": "2518599"
  },
  {
    "text": "in your program right and imagine you're programming in Python and you had",
    "start": "2518599",
    "end": "2524200"
  },
  {
    "text": "something that looks like while true you know",
    "start": "2524200",
    "end": "2531079"
  },
  {
    "text": "sleep five uh or whatever I don't know what people",
    "start": "2531079",
    "end": "2537400"
  },
  {
    "text": "do in Python something like that okay so imagine that was your program and now your boss comes to you",
    "start": "2537400",
    "end": "2544920"
  },
  {
    "text": "you know may that's some batch operation it's happening every once in a while it's it's doing some some some stuff you",
    "start": "2544920",
    "end": "2553160"
  },
  {
    "text": "know that programs do and now your boss comes and he says okay that guy over there that server we need him to now",
    "start": "2553160",
    "end": "2559880"
  },
  {
    "text": "connect to some website and like pullback data every second okay so now",
    "start": "2559880",
    "end": "2567559"
  },
  {
    "text": "now you're you're faced with the oper with the the task of refactoring that server into doing some new thing at some",
    "start": "2567559",
    "end": "2575040"
  },
  {
    "text": "different interval of time and so now you you get out your calculator and you're like all right so he wants me to",
    "start": "2575040",
    "end": "2580400"
  },
  {
    "text": "do it every two seconds but I've got this Loop that runs every 5 seconds so I",
    "start": "2580400",
    "end": "2585680"
  },
  {
    "text": "can like you know multiply the two numbers and find the common least common denominator and then I'm going to",
    "start": "2585680",
    "end": "2591359"
  },
  {
    "text": "activate every time and I'm going to see take the modulo of of the whatever okay you're going to do some work to make",
    "start": "2591359",
    "end": "2597760"
  },
  {
    "text": "that happen or or you're going to open another thread and have two threads doing things",
    "start": "2597760",
    "end": "2604119"
  },
  {
    "text": "right uh one doing the new operation and the other one doing the the the old",
    "start": "2604119",
    "end": "2611359"
  },
  {
    "text": "operation that's a that's a possibility let it just be said that",
    "start": "2611839",
    "end": "2618000"
  },
  {
    "text": "your thread that you create it's not it's not free okay it it comes it comes",
    "start": "2618000",
    "end": "2623160"
  },
  {
    "text": "at some cost okay it's it's a fine solution for some things but but it's not free um so let's in in node let's",
    "start": "2623160",
    "end": "2631880"
  },
  {
    "text": "add this thing okay so say this is happening every 5 Seconds going to delete that now now we have to do",
    "start": "2631880",
    "end": "2638839"
  },
  {
    "text": "something every two seconds we have to get google.com so so we're going to",
    "start": "2638839",
    "end": "2644480"
  },
  {
    "text": "require",
    "start": "2644480",
    "end": "2647480"
  },
  {
    "text": "HTP and every two seconds we're going to fetch",
    "start": "2650400",
    "end": "2656200"
  },
  {
    "text": "google.com and the way that we do that is we do HTP get and",
    "start": "2662440",
    "end": "2669040"
  },
  {
    "text": "and say just for revity we we're going to just print out the headers",
    "start": "2671839",
    "end": "2677880"
  },
  {
    "text": "okay so every two seconds we're going to print the headers from that",
    "start": "2677880",
    "end": "2684078"
  },
  {
    "text": "so uh console log response",
    "start": "2684200",
    "end": "2691839"
  },
  {
    "text": "headers okay so that's what an HTTP get looks like in node and we're going to do",
    "start": "2691839",
    "end": "2697640"
  },
  {
    "text": "that every two seconds so notice we've done this without changing our original program like not at all the still the",
    "start": "2697640",
    "end": "2705119"
  },
  {
    "text": "other thing still running right but we can enter this new thing running at a different Speed without changing what",
    "start": "2705119",
    "end": "2712000"
  },
  {
    "text": "has already happened and the we're not doing this in another thread we're not putting more weight on the OS Schuler",
    "start": "2712000",
    "end": "2719160"
  },
  {
    "text": "we're doing this in a very simple and kind of clean way so let me just run that and see if it actually works",
    "start": "2719160",
    "end": "2728280"
  },
  {
    "text": "why do I call that server okay excellent so so yeah",
    "start": "2728280",
    "end": "2738720"
  },
  {
    "text": "um what do you think about that do you think this is so boring I",
    "start": "2740800",
    "end": "2748280"
  },
  {
    "text": "cannot wait to go home and have a beer why do they not serve beers at these things because that's what I'm thinking",
    "start": "2748280",
    "end": "2755599"
  },
  {
    "text": "um what's something useful yeah okay so what can you do useful with this before",
    "start": "2755599",
    "end": "2763280"
  },
  {
    "text": "I go on let me just say now your boss comes to you and says okay now actually",
    "start": "2763280",
    "end": "2768640"
  },
  {
    "text": "I want a web server in there too as he always does um so so now you",
    "start": "2768640",
    "end": "2776480"
  },
  {
    "text": "go in and you just kind of add a couple lines here and you do HTTP server request response blah",
    "start": "2776480",
    "end": "2785558"
  },
  {
    "text": "response right head 200",
    "start": "2789359",
    "end": "2795318"
  },
  {
    "text": "and hello world let's even put like a little pause in there because maybe this",
    "start": "2795480",
    "end": "2802240"
  },
  {
    "text": "is like simulating a database request or",
    "start": "2802240",
    "end": "2806400"
  },
  {
    "text": "something okay so that's that's kind of our web server from before it takes one second to write hello world okay but all",
    "start": "2808480",
    "end": "2815920"
  },
  {
    "text": "these other things are happening I forgot to listen on on a",
    "start": "2815920",
    "end": "2821838"
  },
  {
    "text": "port s listen on Port 8,000 okay so now the server is doing a lot of things",
    "start": "2822400",
    "end": "2828640"
  },
  {
    "text": "right so so let me run that guy okay so so it's it's printing out hello it's",
    "start": "2828640",
    "end": "2835119"
  },
  {
    "text": "fetching google.com and now if I curl it uh it waits 2 seconds and and returns",
    "start": "2835119",
    "end": "2842119"
  },
  {
    "text": "hello world okay so so mashing things together is the idea",
    "start": "2842119",
    "end": "2847920"
  },
  {
    "text": "here you're just kind of taking different inputs and because we're non-blocking we can kind of smash them",
    "start": "2847920",
    "end": "2854000"
  },
  {
    "text": "all together into different things right okay so so the question is uh the small",
    "start": "2854000",
    "end": "2859240"
  },
  {
    "text": "examples they look cool that's a cool dude but you know what actually I'm not",
    "start": "2859240",
    "end": "2864359"
  },
  {
    "text": "totally convinced that your non-blocking style of writing code is is uh something",
    "start": "2864359",
    "end": "2870640"
  },
  {
    "text": "that is maintainable in the long run that is a very good question um and the",
    "start": "2870640",
    "end": "2876160"
  },
  {
    "text": "answer is uh we don't know because this is the first system that's done that",
    "start": "2876160",
    "end": "2882319"
  },
  {
    "text": "um obviously so a lot of people",
    "start": "2882319",
    "end": "2887079"
  },
  {
    "text": "complain that um what you're going to do is is go oh I",
    "start": "2890520",
    "end": "2896720"
  },
  {
    "text": "I have to hgp get something um I I'm I'm not going to put in real",
    "start": "2896720",
    "end": "2902440"
  },
  {
    "text": "code because it'll take too long so I I have to get something here um and you know after I get something I",
    "start": "2902440",
    "end": "2910079"
  },
  {
    "text": "actually have to like take that response and connect to the database so I have to DB query response headers",
    "start": "2910079",
    "end": "2920640"
  },
  {
    "text": "cookie uh and then I have like another function called because after when the data when you query the database you",
    "start": "2921359",
    "end": "2927640"
  },
  {
    "text": "that's also access that has to be non-blocking too so you have another call back and then when you finally get",
    "start": "2927640",
    "end": "2933799"
  },
  {
    "text": "that response from the database actually now you have to hit the M cach server or whatever right so now you now you have",
    "start": "2933799",
    "end": "2940319"
  },
  {
    "text": "to do something else so now you have to query database 2 actually and do this",
    "start": "2940319",
    "end": "2946359"
  },
  {
    "text": "with you know here's the DB response so now you",
    "start": "2946359",
    "end": "2951520"
  },
  {
    "text": "have to use you know DB this is such a contrived example DB",
    "start": "2951520",
    "end": "2957640"
  },
  {
    "text": "response Row one uh so db2 response and now you have this and you know it grows",
    "start": "2957640",
    "end": "2964400"
  },
  {
    "text": "infinitely Inward and and so the the the the extremely naive sort of",
    "start": "2964400",
    "end": "2971440"
  },
  {
    "text": "complaint uh is Jesus I mean you know how how big is your text editor I can't",
    "start": "2971440",
    "end": "2978040"
  },
  {
    "text": "indent forever okay like that that's not possible well obviously nobody's asking",
    "start": "2978040",
    "end": "2983760"
  },
  {
    "text": "you to indent forever you know you can you're not forced to use anonymous functions right so what you can do is",
    "start": "2983760",
    "end": "2990960"
  },
  {
    "text": "you can take this whole thing put it up here",
    "start": "2990960",
    "end": "2996760"
  },
  {
    "text": "and call this after after request okay so now we've",
    "start": "2996760",
    "end": "3005599"
  },
  {
    "text": "we've lost one indention level or maybe not but now we can take you know",
    "start": "3005599",
    "end": "3014559"
  },
  {
    "text": "uh the second one which is",
    "start": "3014559",
    "end": "3019880"
  },
  {
    "text": "uh this one and put it up here and say",
    "start": "3019880",
    "end": "3025119"
  },
  {
    "text": "oh well this is this is um after",
    "start": "3025119",
    "end": "3032400"
  },
  {
    "text": "DB1 obviously I should have like a better real example here but you can",
    "start": "3033000",
    "end": "3038920"
  },
  {
    "text": "imagine and then you can take this one and move it out here so do you have to indent forever the",
    "start": "3038920",
    "end": "3046640"
  },
  {
    "text": "answer is no that is that is patently false",
    "start": "3046640",
    "end": "3053559"
  },
  {
    "text": "um the people have lived with the ination forever yes you you can give your functions",
    "start": "3053559",
    "end": "3060960"
  },
  {
    "text": "names and pull them out of these Anonymous functions okay um I think the",
    "start": "3060960",
    "end": "3068440"
  },
  {
    "text": "more so so that would be the answer to the naive question the more complex",
    "start": "3068440",
    "end": "3073640"
  },
  {
    "text": "question is is you know is it possible to actually",
    "start": "3073640",
    "end": "3079280"
  },
  {
    "text": "like abstract multiple things here into something that you know I'm doing this",
    "start": "3079280",
    "end": "3085000"
  },
  {
    "text": "complex series of database calls you know one after another after another and I want to present my users with a nice",
    "start": "3085000",
    "end": "3092520"
  },
  {
    "text": "friendly interface to that and not expose them to The Madness of callbacks that are happening under under the table",
    "start": "3092520",
    "end": "3098720"
  },
  {
    "text": "and the answer is yes of course you can do that okay so what the way that you do",
    "start": "3098720",
    "end": "3104040"
  },
  {
    "text": "that is is um so my contrived example is is okay so",
    "start": "3104040",
    "end": "3111680"
  },
  {
    "text": "so let's imagine that you have this this HTP G is part of a module that you're",
    "start": "3111680",
    "end": "3119040"
  },
  {
    "text": "Distributing and you're saying oh maybe you work for joyant or whatever joyant",
    "start": "3119040",
    "end": "3125280"
  },
  {
    "text": "distributes a module that has a function called get uh just get okay which does a",
    "start": "3125280",
    "end": "3131799"
  },
  {
    "text": "bunch of stuff and so we are Distributing this module and the the",
    "start": "3131799",
    "end": "3137040"
  },
  {
    "text": "exposed function is is this guy here I'll I'll talk about in a second",
    "start": "3137040",
    "end": "3143599"
  },
  {
    "text": "how you actually structure modules and stuff the way that you actually allow that guy that guy to be presented to the",
    "start": "3143599",
    "end": "3151000"
  },
  {
    "text": "user is that you yourself give a call back so you give a call back as this",
    "start": "3151000",
    "end": "3156520"
  },
  {
    "text": "parameter and you keep passing it down so so you",
    "start": "3156520",
    "end": "3162839"
  },
  {
    "text": "do after so you you keep passing it it down",
    "start": "3162839",
    "end": "3170720"
  },
  {
    "text": "here so oops does that make sense so so you can",
    "start": "3170720",
    "end": "3176960"
  },
  {
    "text": "keep passing this this call back deeper and deeper into your layers of things",
    "start": "3176960",
    "end": "3183920"
  },
  {
    "text": "that you're",
    "start": "3183920",
    "end": "3186200"
  },
  {
    "text": "doing I I I'm I fear that I like this example is just wildly too uh",
    "start": "3196200",
    "end": "3204359"
  },
  {
    "text": "made up to uh be followed by anybody does that make sense so that you you're",
    "start": "3204359",
    "end": "3209640"
  },
  {
    "text": "always passing this this call back deeper and deeper DB to response I'm going to",
    "start": "3209640",
    "end": "3216280"
  },
  {
    "text": "distribute this uh this code",
    "start": "3216280",
    "end": "3220440"
  },
  {
    "text": "after and now you can call the call back okay so so I'm exposing the lower",
    "start": "3228240",
    "end": "3235079"
  },
  {
    "text": "level one so the users they just do one call back but internally we've abstracted all this IO that's happening",
    "start": "3235079",
    "end": "3241640"
  },
  {
    "text": "right into one call back you can't remove the call back though you can't",
    "start": "3241640",
    "end": "3247200"
  },
  {
    "text": "make IO happen and not have a call back a completion call back that is impossible um but that's good so so the",
    "start": "3247200",
    "end": "3255359"
  },
  {
    "text": "user is explicitly aware that this git function that joyant is Distributing",
    "start": "3255359",
    "end": "3260559"
  },
  {
    "text": "does something on the network like they don't know what it can be super complicated but it is not just adding",
    "start": "3260559",
    "end": "3267839"
  },
  {
    "text": "two numbers together um it is going out and doing stuff on the event Loop and",
    "start": "3267839",
    "end": "3273200"
  },
  {
    "text": "you know resolving DNS addresses and getting URLs and hitting a database and blah blah blah and when it's all done",
    "start": "3273200",
    "end": "3279559"
  },
  {
    "text": "with that it will call your call back um so that was a very poor answer but I",
    "start": "3279559",
    "end": "3286240"
  },
  {
    "text": "believe yes you can uh abstract and have maintenance and do these sort of things",
    "start": "3286240",
    "end": "3293280"
  },
  {
    "text": "it's a different style though to be sure um and it takes some getting used to but we write very complic I mean note itself",
    "start": "3293280",
    "end": "3300040"
  },
  {
    "text": "is a pretty complex program and so far we haven't said to ourselves oh it",
    "start": "3300040",
    "end": "3305599"
  },
  {
    "text": "you know we can't do it it's too complicated now um it it I I believe that the the complexity is not exploding",
    "start": "3305599",
    "end": "3313640"
  },
  {
    "text": "as we go forward but we'll have to see we'll have to see what what the landscape looks like a year from now",
    "start": "3313640",
    "end": "3320640"
  },
  {
    "text": "when there's real big websites written on it if that ever happens yes so the the question is what are the Achilles",
    "start": "3320640",
    "end": "3326760"
  },
  {
    "text": "Hills of of of node what are what are the problems here um so I would say the",
    "start": "3326760",
    "end": "3334359"
  },
  {
    "text": "number one problem is immaturity it's a young platform and it's a platform that's starting from scratch right this",
    "start": "3334359",
    "end": "3340520"
  },
  {
    "text": "is not sitting on top of python it's not on top of Ruby it's not on top of java it is literally from scratch so if you",
    "start": "3340520",
    "end": "3348240"
  },
  {
    "text": "don't have a driver to connect to Oracle you have to write one which is a",
    "start": "3348240",
    "end": "3354240"
  },
  {
    "text": "problem right for a lot of people if they can't connect to their database and it's not already there then that's it",
    "start": "3354240",
    "end": "3360880"
  },
  {
    "text": "they they can't use it so that is a major problem more likely there probably will be a driver but it's really crappy",
    "start": "3360880",
    "end": "3368640"
  },
  {
    "text": "and because some guy just did it and you know it hasn't had years of Maintenance",
    "start": "3368640",
    "end": "3374160"
  },
  {
    "text": "and Bug fixes and that sort of thing so I think the number one problem with the platform is that it's just young and and",
    "start": "3374160",
    "end": "3381280"
  },
  {
    "text": "that's something that hopefully will alleviate itself over the next couple months or year",
    "start": "3381280",
    "end": "3388839"
  },
  {
    "text": "um I think there's another problem which touches on the previous question of uh",
    "start": "3388839",
    "end": "3394920"
  },
  {
    "text": "code maint maintainability and debug ability um there's this problem with",
    "start": "3394920",
    "end": "3401319"
  },
  {
    "text": "event Loops um which is which is this um so you're",
    "start": "3401319",
    "end": "3408640"
  },
  {
    "text": "always killing your stack your Stacks are very short so so if you're if you have a threaded program you just call",
    "start": "3408640",
    "end": "3415000"
  },
  {
    "text": "function after function after function and then you block and then you call more function you have more functions",
    "start": "3415000",
    "end": "3420720"
  },
  {
    "text": "and then at some point you hit an exception and you've got this huge stack trace and you can say I was there I was",
    "start": "3420720",
    "end": "3426760"
  },
  {
    "text": "there I was there I was there I was there but notice in this one so let me",
    "start": "3426760",
    "end": "3432280"
  },
  {
    "text": "just uh edit this hello world again um",
    "start": "3432280",
    "end": "3437400"
  },
  {
    "text": "so taking out that let's say we hit an exception in this call",
    "start": "3437400",
    "end": "3443240"
  },
  {
    "text": "back or let let's make it more uh",
    "start": "3443240",
    "end": "3448160"
  },
  {
    "text": "so okay let's do this I'm trying to come up with a good example here so let's",
    "start": "3451960",
    "end": "3457400"
  },
  {
    "text": "let's put Fu let's do Fu as a function here not an anonymous function okay so",
    "start": "3457400",
    "end": "3463119"
  },
  {
    "text": "that's the same thing okay but in inside of Fu we do another set",
    "start": "3463119",
    "end": "3468838"
  },
  {
    "text": "timeout for another second and then inside of bar",
    "start": "3470359",
    "end": "3476920"
  },
  {
    "text": "we do uh we print World okay so that's going to wait 3 seconds okay so let's let's",
    "start": "3476920",
    "end": "3484400"
  },
  {
    "text": "throw an exception",
    "start": "3484400",
    "end": "3487599"
  },
  {
    "text": "here and let's let's look at what the stack Trace looks like so in a normal program you would see okay we're in the",
    "start": "3492799",
    "end": "3500599"
  },
  {
    "text": "like the main function and then we called you know sleep well and then that",
    "start": "3500599",
    "end": "3506280"
  },
  {
    "text": "dropped out and then we called bar we called Foo and then we called bar and you would kind of have that in your stack Trace but I think in this one",
    "start": "3506280",
    "end": "3512799"
  },
  {
    "text": "you'll see that",
    "start": "3512799",
    "end": "3516039"
  },
  {
    "text": "uh so that we hit a problem so here's our stack Trace no mention of Fu in",
    "start": "3521480",
    "end": "3527640"
  },
  {
    "text": "there at all okay so so kind of that middle ground that bar came from disappeared entirely because we dropped",
    "start": "3527640",
    "end": "3534680"
  },
  {
    "text": "back down to the event loop after that time out right um so you have these small stack traces",
    "start": "3534680",
    "end": "3542680"
  },
  {
    "text": "and well I it's it's a problem it's it's",
    "start": "3542799",
    "end": "3547920"
  },
  {
    "text": "something that we are thinking about ways of solving but it's basically the",
    "start": "3547920",
    "end": "3553119"
  },
  {
    "text": "same problem that you have in the web browser as well I mean if you also have the same the same single-threaded sort",
    "start": "3553119",
    "end": "3558599"
  },
  {
    "text": "of model um it's not impossible but it does get somewhat annoying to find out",
    "start": "3558599",
    "end": "3564839"
  },
  {
    "text": "where your coming from so one way of alleviating that is uh by every time",
    "start": "3564839",
    "end": "3570520"
  },
  {
    "text": "setting you could have a debug mode uh which we have kind of a tentative branch",
    "start": "3570520",
    "end": "3575799"
  },
  {
    "text": "of doing um where every time you set up a new event so say set a start a set",
    "start": "3575799",
    "end": "3581839"
  },
  {
    "text": "time out that you would record where you came from the the the guy who started",
    "start": "3581839",
    "end": "3587119"
  },
  {
    "text": "you and then you would go do stuff and a new event would come out and you would record where you came from then and so",
    "start": "3587119",
    "end": "3594079"
  },
  {
    "text": "when you hit the exception you would be able to walk walk back through history and kind of see where you are um and",
    "start": "3594079",
    "end": "3601359"
  },
  {
    "text": "instead of talking too much about that I'm going to point you to some slides that I have on that",
    "start": "3601359",
    "end": "3608519"
  },
  {
    "text": "um is that how you spell Illuminati oh crap",
    "start": "3614359",
    "end": "3622759"
  },
  {
    "text": "I'm a terrible speller",
    "start": "3627880",
    "end": "3631599"
  },
  {
    "text": "um that looks like PDF okay so so I'll point you to some",
    "start": "3636079",
    "end": "3641599"
  },
  {
    "text": "slides which talk more about this problem and the branch that we are trying to uh our our plans for solving",
    "start": "3641599",
    "end": "3650319"
  },
  {
    "text": "that but yeah it's a problem uh so so um in my opinion that would be the number",
    "start": "3650319",
    "end": "3656039"
  },
  {
    "text": "one Achilles Hill of of it there's a other people complain there there's one",
    "start": "3656039",
    "end": "3661839"
  },
  {
    "text": "more complaint which I think is not valid actually um uh which is that so so node is I have",
    "start": "3661839",
    "end": "3671039"
  },
  {
    "text": "to be careful I'm going a bit over on time um so so node is uh a single-threaded sort of system right you",
    "start": "3671039",
    "end": "3678440"
  },
  {
    "text": "you you're in one process you're in one thread in this",
    "start": "3678440",
    "end": "3684119"
  },
  {
    "text": "process and that means that if you're on a 32 core box those other cores are idle",
    "start": "3684119",
    "end": "3691960"
  },
  {
    "text": "with respect to this task that you're doing on this on this process",
    "start": "3691960",
    "end": "3698559"
  },
  {
    "text": "um so I I don't think that this is a problem",
    "start": "3698559",
    "end": "3704119"
  },
  {
    "text": "because you can you can start more of them okay there there is a kernel scheduler that can schedule processes to",
    "start": "3704119",
    "end": "3711319"
  },
  {
    "text": "these other threads what we are doing is saying one of these guys",
    "start": "3711319",
    "end": "3716760"
  },
  {
    "text": "shares nothing with the other threats it is a shared nothing model in fact it's so shared nothing that we are kind of",
    "start": "3716760",
    "end": "3724119"
  },
  {
    "text": "putting a boundary between it and the other guys at the process layer even at the OS process not only are you kind of",
    "start": "3724119",
    "end": "3731240"
  },
  {
    "text": "you know somehow uh gated off from from talking",
    "start": "3731240",
    "end": "3736520"
  },
  {
    "text": "to other processes you literally cannot look at their memory you are enforced by the operating system to not look at",
    "start": "3736520",
    "end": "3742920"
  },
  {
    "text": "their memory if you want to talk to them you have to literally open a socket and serialize data and send it to them",
    "start": "3742920",
    "end": "3751640"
  },
  {
    "text": "um I think that's a fine solution um why because programs these days very large",
    "start": "3751640",
    "end": "3759799"
  },
  {
    "text": "website sort of scale programs that are uh very",
    "start": "3759799",
    "end": "3766880"
  },
  {
    "text": "large tend to have to grow Beyond one box even like using the 32 cores on one",
    "start": "3766880",
    "end": "3773480"
  },
  {
    "text": "box that does not scale on at like Google scale right what you need to do is be able to distribute a program among",
    "start": "3773480",
    "end": "3781200"
  },
  {
    "text": "multiple machines and part of that is speaking in serialized message passing",
    "start": "3781200",
    "end": "3787559"
  },
  {
    "text": "sort of things and so forcing that to happen even at on the single Machine level kind of enforces this sort of",
    "start": "3787559",
    "end": "3794599"
  },
  {
    "text": "model of of growing as soon as you grow Beyond one process you have to grow to",
    "start": "3794599",
    "end": "3799799"
  },
  {
    "text": "multi machines doesn't make sense to use node.js to create a peer-to-peer network uh yes I I mean I think that is why it",
    "start": "3799799",
    "end": "3808359"
  },
  {
    "text": "is called node is that the idea is that you have this kind of simple building",
    "start": "3808359",
    "end": "3813480"
  },
  {
    "text": "block uh which is a good kind of thick process a good process in that but you",
    "start": "3813480",
    "end": "3819920"
  },
  {
    "text": "know to scale out these guys are going to have to talk to each other and nobody's saying that's an easy problem",
    "start": "3819920",
    "end": "3825319"
  },
  {
    "text": "to solve they're going to have to share State that's right they're going to have",
    "start": "3825319",
    "end": "3831000"
  },
  {
    "text": "to serialize it and use gossip or use redus or use something like that but once you get to that point like there's",
    "start": "3831000",
    "end": "3838359"
  },
  {
    "text": "different directions that can be taken and so node is not trying to solve that problem for you that's still a problem",
    "start": "3838359",
    "end": "3843920"
  },
  {
    "text": "to be solved yeah it's not it's not preventing you from solving that problem",
    "start": "3843920",
    "end": "3849799"
  },
  {
    "text": "I I want to very briefly if I have if you guys don't mind tell you just just a",
    "start": "3849799",
    "end": "3855359"
  },
  {
    "text": "second about uh the kind of larger landscape so node is you know in one",
    "start": "3855359",
    "end": "3861039"
  },
  {
    "text": "toone correspondence with Ruby there is a gems sort of thing it's called npm",
    "start": "3861039",
    "end": "3867359"
  },
  {
    "text": "node package manager um Isaac who writes this is uh works in",
    "start": "3867359",
    "end": "3874200"
  },
  {
    "text": "the office next to me um our internet is terrible here um but it has this nice",
    "start": "3874200",
    "end": "3880440"
  },
  {
    "text": "little command you copy that it deletes your hard drive and then you paste it in here",
    "start": "3880440",
    "end": "3887160"
  },
  {
    "text": "um and what this does is it installs npm for you I think I already have it",
    "start": "3887160",
    "end": "3892440"
  },
  {
    "text": "installed even um so I'll just kill that",
    "start": "3892440",
    "end": "3898319"
  },
  {
    "text": "npm okay so what you can do is install things like a popular Library called",
    "start": "3898319",
    "end": "3904880"
  },
  {
    "text": "socket IO and it does what you think it does it downloads stuff um so if you're",
    "start": "3904880",
    "end": "3912720"
  },
  {
    "text": "working with node having npm installed helps a lot because you kind of have access to this package repository um and",
    "start": "3912720",
    "end": "3920720"
  },
  {
    "text": "the popular uh web framework just so you",
    "start": "3920720",
    "end": "3926680"
  },
  {
    "text": "know and don't have to look around at all the thousands of other web Frameworks for node is",
    "start": "3926680",
    "end": "3932400"
  },
  {
    "text": "expressjs um which is written by a guy at learn boost um so yes it's a sinatr",
    "start": "3932400",
    "end": "3940200"
  },
  {
    "text": "like thing um and I think I'll leave it to you to",
    "start": "3940200",
    "end": "3945640"
  },
  {
    "text": "ask me about other things but there's a lot of modules for stuff that is",
    "start": "3945640",
    "end": "3951000"
  },
  {
    "text": "invisible how do you uh invert the uh colors",
    "start": "3951000",
    "end": "3956960"
  },
  {
    "text": "whatever okay so uh I'm going to end it there but I'm going to stick around for a minute until everybody disperses and",
    "start": "3957480",
    "end": "3964279"
  },
  {
    "text": "then if you want to ask me questions off camera or whatever feel free so thank",
    "start": "3964279",
    "end": "3969440"
  },
  {
    "text": "you",
    "start": "3969440",
    "end": "3972440"
  },
  {
    "text": "n",
    "start": "3987160",
    "end": "3990160"
  }
]