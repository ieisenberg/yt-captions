[
  {
    "start": "0",
    "end": "120000"
  },
  {
    "text": "[Music]",
    "start": "2330",
    "end": "7720"
  },
  {
    "text": "great thanks everyone for coming my name is Seth llad I'm a developer Advocate with the Google Chrome and dart team uh",
    "start": "7720",
    "end": "15080"
  },
  {
    "text": "I got into Dart because I have an background in structured programming so",
    "start": "15080",
    "end": "20640"
  },
  {
    "text": "my experience is actually a lot of java a ton of java Java and spring so it's really cool to come to kind of a home",
    "start": "20640",
    "end": "26439"
  },
  {
    "text": "crowd audience that that's nice um then I got into Ruby on r and then lucky enough to get this gig at",
    "start": "26439",
    "end": "32719"
  },
  {
    "text": "Google and Chrome but at that time I wasn't really a JavaScript ninja or anything and so programming the browser",
    "start": "32719",
    "end": "38680"
  },
  {
    "text": "for me was a huge learning experience come to find out that I really really enjoy it but at the same time I really",
    "start": "38680",
    "end": "44680"
  },
  {
    "text": "miss the programming experience that I came to grow up with and expect uh that",
    "start": "44680",
    "end": "50600"
  },
  {
    "text": "is really productive tools and refactoring and the ability to work with",
    "start": "50600",
    "end": "55800"
  },
  {
    "text": "classes and libraries and static types and all this stuff so I really missed that but I love work on the web and so",
    "start": "55800",
    "end": "61719"
  },
  {
    "text": "when the start project came along I got really excited because it allowed me to get that programming experience I think",
    "start": "61719",
    "end": "66840"
  },
  {
    "text": "most of us in this room uh really love and feel productive with and still Target what I would say is the most",
    "start": "66840",
    "end": "72680"
  },
  {
    "text": "exciting uh and ubiquitous platform out there the modern web so today this is",
    "start": "72680",
    "end": "78080"
  },
  {
    "text": "all about what's new in Dart your first class upgrade to web development I always like to just figure out how many",
    "start": "78080",
    "end": "84159"
  },
  {
    "text": "people are building mobile apps today so just iOS or Android okay how many people would say",
    "start": "84159",
    "end": "90920"
  },
  {
    "text": "you're a server side developer okay cool all right good and",
    "start": "90920",
    "end": "97880"
  },
  {
    "text": "my power is not running so hold on yeah there we go otherwise it's going",
    "start": "97880",
    "end": "104399"
  },
  {
    "text": "to go to sleep every five seconds here we go okay cool it's just interesting to see the demographics out there because",
    "start": "104399",
    "end": "111040"
  },
  {
    "text": "Dart has certainly been appealing to developers all across all these different platforms and so we get a",
    "start": "111040",
    "end": "116560"
  },
  {
    "text": "really good mix crowd so that's and that's good that's that's what we want to see okay so first what is Dart well Dart is",
    "start": "116560",
    "end": "123159"
  },
  {
    "start": "120000",
    "end": "148000"
  },
  {
    "text": "much more than a language it's also a set of Rich core libraries really productive tools uh great web",
    "start": "123159",
    "end": "129560"
  },
  {
    "text": "programming experience a very fast new virtual machine but probably most important to understand dark compiles",
    "start": "129560",
    "end": "136360"
  },
  {
    "text": "down to JavaScript and runs across modern mobile and desktop browsers so",
    "start": "136360",
    "end": "141959"
  },
  {
    "text": "almost everything maybe everything you're going to see here today compiles down so you can run it across the modern",
    "start": "141959",
    "end": "147360"
  },
  {
    "text": "web today",
    "start": "147360",
    "end": "150680"
  },
  {
    "start": "148000",
    "end": "307000"
  },
  {
    "text": "uh I might be talking about some serers side Dart code the question was why do I say almost Dart also runs on the server",
    "start": "152400",
    "end": "157680"
  },
  {
    "text": "you'll see some of that in a little bit uh that you'd obviously wouldn't make sense okay so I want to start off by",
    "start": "157680",
    "end": "163120"
  },
  {
    "text": "painting some pictures about what motivates us and some of the reception we've gotten from the dart project so I",
    "start": "163120",
    "end": "168560"
  },
  {
    "text": "like to talk this is a real life story something that that talked to us about their experience he was he works in a",
    "start": "168560",
    "end": "174360"
  },
  {
    "text": "bank uh he works he writes a lot of internal apps for his internal customers so he was telling us what's a typical",
    "start": "174360",
    "end": "180560"
  },
  {
    "text": "scenario here so his boss will come to him and say hey we need some reporting app can you start building a new new web",
    "start": "180560",
    "end": "186640"
  },
  {
    "text": "app all right so he's like no problem first thing I'm going to go get is require JS because I need some sort",
    "start": "186640",
    "end": "193280"
  },
  {
    "text": "of modularity next I need to go get backbone because I need some sort of client side",
    "start": "193280",
    "end": "199640"
  },
  {
    "text": "architecture then I need to go get backbone marionette because I need some sort of additional functionality",
    "start": "199640",
    "end": "205239"
  },
  {
    "text": "backbone doesn't have then I need to go get jQuery because every single web project needs J query and whether you",
    "start": "205239",
    "end": "210799"
  },
  {
    "text": "need it or not some some other dependency requires jQuery and then you need modernizer for feature",
    "start": "210799",
    "end": "217720"
  },
  {
    "text": "detection and then you need momentjs to be able to parse dates and deal with date formatting and then you need desk",
    "start": "217720",
    "end": "224239"
  },
  {
    "text": "templates because you need to do some sort of client side templating system and then you need to go get phantomjs",
    "start": "224239",
    "end": "229720"
  },
  {
    "text": "because you need to do automated browser testing and then you need to go get Jasmine because well you need some sort of architecture to write your unit test",
    "start": "229720",
    "end": "236400"
  },
  {
    "text": "in okay so now he's almost ready to get started then of course each one of these has a different set of docs with",
    "start": "236400",
    "end": "242799"
  },
  {
    "text": "different ways of writing docs hosted on different sites and different formats so all right you're going to go read all",
    "start": "242799",
    "end": "248040"
  },
  {
    "text": "about these and learn each one of these in a completely different way okay and now he needs to integrate",
    "start": "248040",
    "end": "254680"
  },
  {
    "text": "all this stuff and make it actually work together which um is worse than it probably sounds because there's some",
    "start": "254680",
    "end": "259759"
  },
  {
    "text": "duplicate functionality in here so not only does he have to wire in all the libraries together he needs that then decide do you want the collections",
    "start": "259759",
    "end": "266040"
  },
  {
    "text": "library from library a or collection library from library B all right well well after all of that literally says I",
    "start": "266040",
    "end": "272360"
  },
  {
    "text": "just want to write web apps so then he was happy to report to us that he found",
    "start": "272360",
    "end": "277520"
  },
  {
    "text": "the dart project and he could replace that teetering pile of different Technologies with simply the dart SDK",
    "start": "277520",
    "end": "284880"
  },
  {
    "text": "and three other packages you can get from our package management system and his quote is things are consistent and",
    "start": "284880",
    "end": "291440"
  },
  {
    "text": "clear and so that really made us happy because that's exactly the kind of programming experience we want to give you guys when you want to build your",
    "start": "291440",
    "end": "297680"
  },
  {
    "text": "totally awesome web app but that was is uh an external developer working with a small team needs to write a lot of apps",
    "start": "297680",
    "end": "303919"
  },
  {
    "text": "what's the word what's the report back from our internal customers well inside Google we write",
    "start": "303919",
    "end": "310199"
  },
  {
    "text": "big and complex apps things like Gmail Google Docs these things are huge um",
    "start": "310199",
    "end": "316479"
  },
  {
    "text": "hundreds uh Engineers working off across multiple time zones up to millions of",
    "start": "316479",
    "end": "321880"
  },
  {
    "text": "lines of code these are Big so we've built in Google lots and lots of layers to deal with this complexity like we",
    "start": "321880",
    "end": "328560"
  },
  {
    "text": "don't want to build things like Gmail with vanilla JavaScript and HTML so we needed to build things like GD or Google",
    "start": "328560",
    "end": "335080"
  },
  {
    "text": "web toolkit we needed to build things like closure and closure compiler and closure libraries we needed to build templating systems like soy this is all",
    "start": "335080",
    "end": "342759"
  },
  {
    "text": "you know it all basically works but what we found is that we don't have the productivity that we really desire um no",
    "start": "342759",
    "end": "349479"
  },
  {
    "text": "joke some of the edit refresh um times that some of our Engineers are experiencing are on order of 24 minutes",
    "start": "349479",
    "end": "357520"
  },
  {
    "text": "imagine 24 minutes from when you make a change to when you can actually see that in your browser that's less than",
    "start": "357520",
    "end": "362639"
  },
  {
    "text": "productive so we need to find a better way to build web apps this is Google",
    "start": "362639",
    "end": "367680"
  },
  {
    "text": "surely we can do better so this isn't the first time we've tried",
    "start": "367680",
    "end": "373280"
  },
  {
    "text": "to approach the problem and this isn't the first time others have tried to approach this problem things like coffee script might uh give you a better say",
    "start": "373280",
    "end": "380880"
  },
  {
    "text": "syntax on top of traditional web programming efforts like typescript might give you better structure over",
    "start": "380880",
    "end": "386319"
  },
  {
    "text": "traditional web programming things like git might improve a bunch of of things but they don't you know some people",
    "start": "386319",
    "end": "391479"
  },
  {
    "text": "might say it's a step back in syntax Dart in our opinion is the first effort",
    "start": "391479",
    "end": "396919"
  },
  {
    "text": "that actually addresses and improves all of these different dimensions structur",
    "start": "396919",
    "end": "402000"
  },
  {
    "text": "syntax semantics tools core libraries and very important to our ex internal",
    "start": "402000",
    "end": "407720"
  },
  {
    "text": "Engineers is the iteration Times web development is fantastic you can make a change and hit reload and then you see",
    "start": "407720",
    "end": "413880"
  },
  {
    "text": "that change we want to make sure we continue to give you that change even if you're dealing with a million lines of code and so in Dart you're not required",
    "start": "413880",
    "end": "421520"
  },
  {
    "text": "to compile anything to see these changes okay so before we get into all",
    "start": "421520",
    "end": "427960"
  },
  {
    "start": "424000",
    "end": "852000"
  },
  {
    "text": "what's new from over the past year in the dart project I want to give you guys a lightning tour of the syntax the",
    "start": "427960",
    "end": "433160"
  },
  {
    "text": "structure and semantics of the dart language and libraries to kind of put you in the heads space here what this project is",
    "start": "433160",
    "end": "438680"
  },
  {
    "text": "like so let's look at the syntax I like to say it's ceremony free uh first of",
    "start": "438680",
    "end": "444599"
  },
  {
    "text": "all this very familiar right class curly braces semicolons it looks like most of",
    "start": "444599",
    "end": "449800"
  },
  {
    "text": "the languages we're writing with every day it's also a tur language when you get to build a new language you get to",
    "start": "449800",
    "end": "455520"
  },
  {
    "text": "say what are some of the things that are maybe a little bit more ceremonial and fix that good example here is",
    "start": "455520",
    "end": "460680"
  },
  {
    "text": "Constructor parameters if the Constructor parameter name matches the name of your field name you can simply",
    "start": "460680",
    "end": "466879"
  },
  {
    "text": "say this. strength in this case this is a lot better than doing this.x equal x this. y equals y repeat repeat repeat",
    "start": "466879",
    "end": "473319"
  },
  {
    "text": "it's that kind of ceremony that I think we can do a little bit better on now this is one of my favorite feat",
    "start": "473319",
    "end": "479479"
  },
  {
    "text": "Fe and that with methods you can name a method pretty much anything you want which is great you can clearly convey",
    "start": "479479",
    "end": "485759"
  },
  {
    "text": "your intent but Constructors are traditionally always named the name of the class now in Dart we give you name",
    "start": "485759",
    "end": "492479"
  },
  {
    "text": "Constructors so in this case here you can create a new be hug and it will set up the state for that hug in this case",
    "start": "492479",
    "end": "498280"
  },
  {
    "text": "strength 100 big hug okay in Dart we have operator",
    "start": "498280",
    "end": "503360"
  },
  {
    "text": "overwriting so plus minus etc etc in this case here where we take a hug and we add it to our current hug and return",
    "start": "503360",
    "end": "508960"
  },
  {
    "text": "you a new hug in D we also have optional named parameters now a lot of great scripting",
    "start": "508960",
    "end": "515080"
  },
  {
    "text": "languages allow to have optional parameters or name parameters in Dart we also allow you to have default values",
    "start": "515080",
    "end": "521120"
  },
  {
    "text": "for those name parameters in this case here if you wrap the parameters in curly braces then it becomes optional named",
    "start": "521120",
    "end": "527600"
  },
  {
    "text": "and we've given a default value of one another really awesome feature of",
    "start": "527600",
    "end": "533040"
  },
  {
    "text": "the dart project is the oneline functions so in this case fat Arrow here",
    "start": "533040",
    "end": "538160"
  },
  {
    "text": "fat Arrow here says it's just just syntactic sugar for curly brace return expression curly brace uh this is really",
    "start": "538160",
    "end": "545000"
  },
  {
    "text": "fantastic because in Dart as you would in a lot of web programming deal with a lot of callbacks or oneline small little",
    "start": "545000",
    "end": "551959"
  },
  {
    "text": "functions in response to some actions so you want to be able to do these things uh very turly and finally string interpolation",
    "start": "551959",
    "end": "559279"
  },
  {
    "text": "as well in Dart the dollar sign here then variable or you can put an expression there and it's just a little",
    "start": "559279",
    "end": "565079"
  },
  {
    "text": "bit nicer than having to do string concatenation or string Builders you can certainly do those things if you want but we've got string interpolation built",
    "start": "565079",
    "end": "571160"
  },
  {
    "text": "right in so you see this kind of real sweet spot here between the heavily structured and I would say ceremonial",
    "start": "571160",
    "end": "577839"
  },
  {
    "text": "languages like Java or C and on the other end of the spectrum you have the highly Dynamic languages like JavaScript",
    "start": "577839",
    "end": "584240"
  },
  {
    "text": "or other Dynamic scripting languages like Ruby or python Dar somewhere kind of in the middle there pulling in features from both so that you get the",
    "start": "584240",
    "end": "590880"
  },
  {
    "text": "structure you need so you can start with tens of lines of code all the way up to million lines but also the tness and the",
    "start": "590880",
    "end": "597440"
  },
  {
    "text": "free from ceremony you get from the other uh scripting languages now Dart is its own language",
    "start": "597440",
    "end": "604519"
  },
  {
    "text": "it's not just a syn syntax pasted over traditional web programming Dart brings its own semantics as well and so we want",
    "start": "604519",
    "end": "611760"
  },
  {
    "text": "to turn more of the watt moments that you might encounter with traditional web programming turn those into at Atomic",
    "start": "611760",
    "end": "618720"
  },
  {
    "text": "dinosaur rock nuclear explosion moments so version on your left bad version on",
    "start": "618720",
    "end": "624640"
  },
  {
    "text": "your right good so here's some examples of what DART cleans up so so only true is truthy",
    "start": "624640",
    "end": "631440"
  },
  {
    "text": "everything else is false very simple very simple rule to understand in Dart there is no undefined there's only null",
    "start": "631440",
    "end": "638200"
  },
  {
    "text": "so it eliminates that whole confusing confusion there's no automatic type coersion in Dart uh like you might get",
    "start": "638200",
    "end": "644279"
  },
  {
    "text": "in traditional web programming with double equals or plus Etc so right there eliminate a bunch of those kind of questions the",
    "start": "644279",
    "end": "650760"
  },
  {
    "text": "unfamiliarity okay so this is the Pop Quiz part uh this is dark code now what",
    "start": "650760",
    "end": "655839"
  },
  {
    "text": "would you expect as a logical sane straightforward developer that you guys are I have a string I'm calling missing",
    "start": "655839",
    "end": "662200"
  },
  {
    "text": "there is no missing getter on string what would you expect right okay well you would get an",
    "start": "662200",
    "end": "669480"
  },
  {
    "text": "exception a logical error at that point at runtime saying uh string has no",
    "start": "669480",
    "end": "674639"
  },
  {
    "text": "instance method missing this is different than traditional web program which returns undefined and keeps on",
    "start": "674639",
    "end": "680160"
  },
  {
    "text": "trucking which leaves you to uh find bugs very far away from the original",
    "start": "680160",
    "end": "685279"
  },
  {
    "text": "cause of the problem like I want to know that I called a method that doesn't exist right at that",
    "start": "685279",
    "end": "690959"
  },
  {
    "text": "point here's another Pop Quiz what happens if you access an array out of bounds out of range of a of an of array",
    "start": "690959",
    "end": "699240"
  },
  {
    "text": "well as you might expect a logical error range error right there okay good uh I'm",
    "start": "699240",
    "end": "704360"
  },
  {
    "text": "sure we've all run into the problem in traditional web programming where you did something like this and you get back undefined did I put undefined in there I",
    "start": "704360",
    "end": "710639"
  },
  {
    "text": "pass undefined three three levels down where did it go right at the call site problem okay this is a little bit",
    "start": "710639",
    "end": "716920"
  },
  {
    "text": "trickier so let's see if we can walk through this variable scoping in Dart this is Dart code here so I've got a top",
    "start": "716920",
    "end": "722720"
  },
  {
    "text": "level variable called Fu and then inside my bar function I have an if and then a",
    "start": "722720",
    "end": "728399"
  },
  {
    "text": "new block here Fu uh is set to inside then I want to print Fu now what do you",
    "start": "728399",
    "end": "735000"
  },
  {
    "text": "think will happen when I run this program which what gets",
    "start": "735000",
    "end": "740000"
  },
  {
    "text": "printed top level top level gets printed because in Dart things are lexically",
    "start": "740079",
    "end": "745360"
  },
  {
    "text": "scoped logical sane easy for you to statically analyze easy for the tools to",
    "start": "745360",
    "end": "750480"
  },
  {
    "text": "statically analyze so hopefully you can see that you can give dark code to pretty much any developer out there and",
    "start": "750480",
    "end": "756040"
  },
  {
    "text": "they can look at it and learn it in under an hour very straightforward very logical uh so this is the kind of",
    "start": "756040",
    "end": "762360"
  },
  {
    "text": "trickier one right of the previous one we talked about lexical scoping in Dart also this is lexically scoped so a",
    "start": "762360",
    "end": "769399"
  },
  {
    "text": "common thing you have to do in traditional web programming is you always say this equals that so you can get a variable that's scoped just to",
    "start": "769399",
    "end": "774920"
  },
  {
    "text": "your function even if the call back that you're working on which in this case right here uh when a button is clicked",
    "start": "774920",
    "end": "781760"
  },
  {
    "text": "you're going to fire you're going to run this function here which we'll call this. Atomic dinosaur rock in Dart it",
    "start": "781760",
    "end": "788120"
  },
  {
    "text": "actually will call the atomic dinosaur rock on this the object that you would expect it or under or want it to call so",
    "start": "788120",
    "end": "795320"
  },
  {
    "text": "these are just examples of how things work a little bit more",
    "start": "795320",
    "end": "800519"
  },
  {
    "text": "logically okay so that was the syntax we talked about the semantics let's talk about the structure we talked about",
    "start": "800560",
    "end": "806600"
  },
  {
    "text": "functions and classes already and we'll look at some of the others in a little bit but I want to focus here on libraries a nice improvement over",
    "start": "806600",
    "end": "813199"
  },
  {
    "text": "traditional web programming today in D you get the concept of libraries but they're very they're much lighter weight",
    "start": "813199",
    "end": "818360"
  },
  {
    "text": "than the concept of packages in Java in Dart here you can just simply Define a file as a library you can import",
    "start": "818360",
    "end": "824279"
  },
  {
    "text": "libraries that come from the core SDK you can import your own files which themselves are Library so right there you've got the concept of modularity and",
    "start": "824279",
    "end": "830839"
  },
  {
    "text": "ability to name space but inside this file here you can Define as many top level constructs as you want you can",
    "start": "830839",
    "end": "837399"
  },
  {
    "text": "Define multiple classes in a single file you can define a top level function in your file giving you a very flexible way",
    "start": "837399",
    "end": "845360"
  },
  {
    "text": "to organize your code you no longer have to put one public class per file if you don't want to do",
    "start": "845360",
    "end": "852000"
  },
  {
    "start": "852000",
    "end": "1125000"
  },
  {
    "text": "that okay so that was the lightning tour we're going to look at a lot of the new features but uh make sure you guys if",
    "start": "852000",
    "end": "858480"
  },
  {
    "text": "you have any questions stop me and ask and I'll be happy to answer it interactive is always good um so with",
    "start": "858480",
    "end": "863720"
  },
  {
    "text": "that said let's look at what's new in the language okay so this is really common",
    "start": "863720",
    "end": "869519"
  },
  {
    "text": "in web programming today here we're creating a new button a and dart you have actual Constructors in classes so",
    "start": "869519",
    "end": "875040"
  },
  {
    "text": "we can give you a Constructor for button element that's kind of cool but then you're always setting up the ID you're setting up the text you're setting up",
    "start": "875040",
    "end": "880519"
  },
  {
    "text": "the classes you're adding onclick handlers and then you add it to a child well in this case here button the",
    "start": "880519",
    "end": "886040"
  },
  {
    "text": "variable name is repeated six times it's a little it's a little much on my eyes so I think we can do",
    "start": "886040",
    "end": "892199"
  },
  {
    "text": "better well since about this time last year we added the concept of method Cascades this comes to us from small",
    "start": "892199",
    "end": "898240"
  },
  {
    "text": "talk and and it allows you as developers to pretty much any API now becomes a",
    "start": "898240",
    "end": "903920"
  },
  {
    "text": "fluent style API this is an API uh design popularized by libraries like",
    "start": "903920",
    "end": "909680"
  },
  {
    "text": "jQuery where you want to just kind chain these guys together this is pretty close to chaining this is cascading and right",
    "start": "909680",
    "end": "915120"
  },
  {
    "text": "away you can see we've eliminated the need to repeat button over and over and over and over but we can do a little bit better than",
    "start": "915120",
    "end": "921079"
  },
  {
    "text": "this we can actually eliminate the need to create a new instance or sorry a new",
    "start": "921079",
    "end": "926920"
  },
  {
    "text": "variable thanks to Cascades even though we need to create a new object and then initialize it we can do this All In Line",
    "start": "926920",
    "end": "933440"
  },
  {
    "text": "this is kind of a convoluted example here but you can see where I can say new button element do do ID equals Fu right",
    "start": "933440",
    "end": "940880"
  },
  {
    "text": "where I want to use the object from the expression new button element this is great when you have to create a new",
    "start": "940880",
    "end": "947199"
  },
  {
    "text": "object initialize with a couple of parameters or values and then pass it to some function or or uh or",
    "start": "947199",
    "end": "954440"
  },
  {
    "text": "method okay moving on so one of these things is not like the other in that you have top level object you've got a class",
    "start": "954440",
    "end": "961040"
  },
  {
    "text": "in here called persistable and a class called hug I'm sure this is sort of familiar to a lot of us we've probably",
    "start": "961040",
    "end": "966600"
  },
  {
    "text": "had to extend from some utility class at some point well obviously hug is not",
    "start": "966600",
    "end": "971720"
  },
  {
    "text": "persistable right if you look at the ISA relationship hug is not persistable you just want hug to be persistable and you",
    "start": "971720",
    "end": "978600"
  },
  {
    "text": "don't want to pollute your inheritance tree well it turns out in Dart that you can do this thanks to the concept of",
    "start": "978600",
    "end": "985079"
  },
  {
    "text": "Mixon so when I take persistable make it a Mixon I don't pollute my tree I have",
    "start": "985079",
    "end": "990639"
  },
  {
    "text": "object I have hug extend directly from object and I can mix in the kind of functionality or behaviors that I want",
    "start": "990639",
    "end": "996319"
  },
  {
    "text": "in my class so here's how you would do this so almost any class itself can be a mix in",
    "start": "996319",
    "end": "1002639"
  },
  {
    "text": "uh you have to extend object and you can't have any Constructors then you can become a mix in so here's abstract class",
    "start": "1002639",
    "end": "1007720"
  },
  {
    "text": "persistable notice how it defines save and load but it leaves two Json up to",
    "start": "1007720",
    "end": "1012880"
  },
  {
    "text": "whoever is going to mix in this class then it's easy to apply the mix in here extends object with persistable",
    "start": "1012880",
    "end": "1020199"
  },
  {
    "text": "okay so now hug actually has the abilities of persistable and it becomes very easy to use the methods that come",
    "start": "1020199",
    "end": "1027438"
  },
  {
    "text": "from persistable so this is really cool I like this another new feature we've been",
    "start": "1027439",
    "end": "1033120"
  },
  {
    "text": "working on is metadata annotations a good example here is at deprecated this should be pretty familiar to a lot of",
    "start": "1033120",
    "end": "1038959"
  },
  {
    "text": "Java developers out there Dart now has this as well your tools can read at deprecated give you feedback right in",
    "start": "1038959",
    "end": "1044720"
  },
  {
    "text": "the tools again plays into the story of Dart is very toolable and productive language now this is cool but you",
    "start": "1044720",
    "end": "1050960"
  },
  {
    "text": "yourself it's very easy to find your own metadata annotations so I'm going to use this new the new feature we're working",
    "start": "1050960",
    "end": "1056720"
  },
  {
    "text": "on here lazy load libraries to illustrate how you yourselves can create your own annotations that the tools can",
    "start": "1056720",
    "end": "1061919"
  },
  {
    "text": "then consume and do interesting things with so here we're going to declare that",
    "start": "1061919",
    "end": "1067320"
  },
  {
    "text": "the library my lib is a deferred library and we're going to do that by assigning it to a const variable called",
    "start": "1067320",
    "end": "1074480"
  },
  {
    "text": "lazy then on my import of that Library I'm going to annotate that import with",
    "start": "1074480",
    "end": "1079559"
  },
  {
    "text": "the at Lazy metadata annotation now again this at Lazy is just a const object so you can create any const",
    "start": "1079559",
    "end": "1086799"
  },
  {
    "text": "object here and then we're going to use our lazy load Library here by saying lazy. load returns a future when the",
    "start": "1086799",
    "end": "1093679"
  },
  {
    "text": "library is loaded then execute a bunch of code now our tools like Dart tojs",
    "start": "1093679",
    "end": "1098799"
  },
  {
    "text": "which takes Dart code and compiles the JavaScript can read in this file look at these annotation say okay so you want",
    "start": "1098799",
    "end": "1104600"
  },
  {
    "text": "one Javascript file here but then you want the lazy load Library another JavaScript file so that you can send",
    "start": "1104600",
    "end": "1110400"
  },
  {
    "text": "down the initial small one and then when the user's ready go request the second Javascript file this is great for",
    "start": "1110400",
    "end": "1115640"
  },
  {
    "text": "deployment time it allows you to say okay maybe they don't need this functionality right at the initial load",
    "start": "1115640",
    "end": "1120760"
  },
  {
    "text": "so I'm going to mark that as lazy and they'll pull it in Pull It in later okay so what's new across the D",
    "start": "1120760",
    "end": "1127480"
  },
  {
    "start": "1125000",
    "end": "1255000"
  },
  {
    "text": "libraries well the question we got all the time especially when initially launch is this is very cool I love it",
    "start": "1127480",
    "end": "1133360"
  },
  {
    "text": "but can I access my JavaScript libraries the answer is resounding yes",
    "start": "1133360",
    "end": "1139440"
  },
  {
    "text": "now we had to build a system that allows Dart to interoperate with JavaScript in two different worlds one world is a",
    "start": "1139440",
    "end": "1147000"
  },
  {
    "text": "world where you're compiling all your Dart code to JavaScript so you've got one execution engine and you need to mix",
    "start": "1147000",
    "end": "1152039"
  },
  {
    "text": "these libraries together the other world is when you have two different virtual machines a dart VM and say V8 in Chrome",
    "start": "1152039",
    "end": "1158799"
  },
  {
    "text": "and you need to be able to have objects in one VM reference and talk to objects in another VM now this gets a little",
    "start": "1158799",
    "end": "1165880"
  },
  {
    "text": "tricky when you deal with garbage collection so we had to come up with a a way to do this uh in our world here via",
    "start": "1165880",
    "end": "1172000"
  },
  {
    "text": "proxies that allows you to interoperate with existing JavaScript libraries or used art functionality in your",
    "start": "1172000",
    "end": "1177720"
  },
  {
    "text": "JavaScript libraries and not have memory leaks that was really important to us so here's an example of dark code",
    "start": "1177720",
    "end": "1185159"
  },
  {
    "text": "that interoperates with JavaScript and then the bottom version is the kind of vanilla JavaScript and what I want to",
    "start": "1185159",
    "end": "1190240"
  },
  {
    "text": "illustrate here is how similar these two chunks of code are this is an API that's",
    "start": "1190240",
    "end": "1195520"
  },
  {
    "text": "sort of based on the Google visualization API so in the dart version on top you reach out into the JS context",
    "start": "1195520",
    "end": "1202280"
  },
  {
    "text": "and you go get one of those top level objects like charts API then uh you might have an array of",
    "start": "1202280",
    "end": "1208799"
  },
  {
    "text": "data well in the dart world you want to efficiently construct and pass around that array of data so you can wrap it in",
    "start": "1208799",
    "end": "1214320"
  },
  {
    "text": "a js. array then you'll create a proxy on top of the JavaScript object living in the",
    "start": "1214320",
    "end": "1221000"
  },
  {
    "text": "other world here this case bubble chart and then the really cool thing",
    "start": "1221000",
    "end": "1226039"
  },
  {
    "text": "here is chart. draw data looks the same in Dart as well as JavaScript and the",
    "start": "1226039",
    "end": "1232960"
  },
  {
    "text": "nice thing about this is uh the editor and the tools won't give you any warnings about types or anything I mean",
    "start": "1232960",
    "end": "1238400"
  },
  {
    "text": "you can see here that JS proxy is really what you're working on even though you're pretending that the proxy is a",
    "start": "1238400",
    "end": "1245240"
  },
  {
    "text": "chart and notice how you can call draw on that proxy no one's complaining this is the this is the tness the ceremony",
    "start": "1245240",
    "end": "1251640"
  },
  {
    "text": "freeness of the dart language okay this is also quite new and",
    "start": "1251640",
    "end": "1258679"
  },
  {
    "start": "1255000",
    "end": "1298000"
  },
  {
    "text": "very very useful to framework authors mirror-based reflection the neat thing about our reflection system we call",
    "start": "1258679",
    "end": "1265400"
  },
  {
    "text": "mirrors is that it can work on source code as well as during runtime so we use the mirror system for instance to",
    "start": "1265400",
    "end": "1271559"
  },
  {
    "text": "generate our Dart docs very similar to the concept of java docs we also use our mirrors at runtime to do things like",
    "start": "1271559",
    "end": "1277600"
  },
  {
    "text": "delegate methods or ask in runtime you know what Fields do a class does a class have So speaking about that you can",
    "start": "1277600",
    "end": "1283840"
  },
  {
    "text": "reflect on classes as well as instances at runtime and you can interest spe like",
    "start": "1283840",
    "end": "1289240"
  },
  {
    "text": "you might imagine what's the name of this thing what Fields does it have what parameters does this thing take as well as you can invoke dynamically other",
    "start": "1289240",
    "end": "1296480"
  },
  {
    "text": "functions or methods on those objects so as an example let's create a logging proxy that uses mirrors to",
    "start": "1296480",
    "end": "1303559"
  },
  {
    "start": "1298000",
    "end": "1672000"
  },
  {
    "text": "delegate down all calls to some delegate while logging every call to any possible method on that",
    "start": "1303559",
    "end": "1310440"
  },
  {
    "text": "delegate so Dart has Library so first off let's import Dart mirrors next we're going to get a mirror",
    "start": "1310440",
    "end": "1317640"
  },
  {
    "text": "from some delegate object using the top level reflect function and then no such method so Dart",
    "start": "1317640",
    "end": "1324760"
  },
  {
    "text": "has no such method in that if an object receives a call request a request for a method and he doesn't Implement that",
    "start": "1324760",
    "end": "1331880"
  },
  {
    "text": "method he will then delegate to No Such method Now the default implementation of No Such method is be like hey I don't",
    "start": "1331880",
    "end": "1337840"
  },
  {
    "text": "you know I don't have this method but you can override that and do anything interesting that you would like so we're",
    "start": "1337840",
    "end": "1343480"
  },
  {
    "text": "going to capture all calls to this proxy here we're going to log out Simply print out hey Fu was called and then via that",
    "start": "1343480",
    "end": "1351080"
  },
  {
    "text": "mirror object we're going to delegate the original call back down to the delegate so this works in the case of",
    "start": "1351080",
    "end": "1357520"
  },
  {
    "text": "creating a class greeter and in my main method I'm going to create a greeter",
    "start": "1357520",
    "end": "1362600"
  },
  {
    "text": "that's actually logging proxy that wraps the greeter and I'm going to call hello now remember he's going to hit the logging proxy first logging proxy is",
    "start": "1362600",
    "end": "1369159"
  },
  {
    "text": "saying I I don't Implement hello I'm going to call no such method no such method says great I'm going to log this out and then I'm going to delegate it",
    "start": "1369159",
    "end": "1375000"
  },
  {
    "text": "down to greeter and you get hello printed out so that's our reflection in meta programming and we expect to fill",
    "start": "1375000",
    "end": "1380679"
  },
  {
    "text": "this out even more and more over time okay this is really cool now we all",
    "start": "1380679",
    "end": "1387400"
  },
  {
    "text": "know that the web is an asynchronous world the web works on an event Loop and to keep your UI from blocking while",
    "start": "1387400",
    "end": "1393520"
  },
  {
    "text": "you're doing interesting things you have to deal in this kind of call back world or maybe you do with with web workers",
    "start": "1393520",
    "end": "1399200"
  },
  {
    "text": "well as you probably know the more and more callbacks you introduce the more deeply nested those callbacks get and it gets very confusing in fact it has its",
    "start": "1399200",
    "end": "1405960"
  },
  {
    "text": "own special name called callback hell well in Dart we think we can do better in fact we can think we can put you on a",
    "start": "1405960",
    "end": "1411640"
  },
  {
    "text": "beautiful beach out there when you're dealing with async programming so to illustrate here let's",
    "start": "1411640",
    "end": "1417240"
  },
  {
    "text": "look at it before and after this is Dart code and you can certainly write write Dart code like this and do stuff takes",
    "start": "1417240",
    "end": "1422400"
  },
  {
    "text": "some sort of function and then has if deal with errors I'm going to pass in another anonymous function here to this",
    "start": "1422400",
    "end": "1428360"
  },
  {
    "text": "name parameter here well we can definitely do better thanks to Futures the version on your left is just",
    "start": "1428360",
    "end": "1435279"
  },
  {
    "text": "straight up callbacks the version on your right is an objectoriented construct around expecting and receiving",
    "start": "1435279",
    "end": "1441720"
  },
  {
    "text": "a value in the future now once you have an instance of future that is an actual object that represents a call back or a",
    "start": "1441720",
    "end": "1448799"
  },
  {
    "text": "value later you can then work with this like many other objects and becomes an easy API to wrap your head around in",
    "start": "1448799",
    "end": "1454919"
  },
  {
    "text": "this case here when the future is done then run a call back and if the Future Has any error catch the error like this",
    "start": "1454919",
    "end": "1461120"
  },
  {
    "text": "is very close to the asynchronous version of TR catch well we can do even better because",
    "start": "1461120",
    "end": "1467120"
  },
  {
    "text": "Futures chain so the bottom right hand is the model that we use a lot in Dart",
    "start": "1467120",
    "end": "1472440"
  },
  {
    "text": "programming do stuff Returns the future chain then then chain catch eror this really looks like synchronous TR catch",
    "start": "1472440",
    "end": "1479320"
  },
  {
    "text": "code even though this is purely async all right let's look at this in action because that was kind of a",
    "start": "1479320",
    "end": "1485039"
  },
  {
    "text": "simplistic example but this is something that's not all too unfamiliar everyone knows the internet is all about getting",
    "start": "1485039",
    "end": "1490799"
  },
  {
    "text": "cat pictures so let's get some cat data but then we need to go turn that into cat picture and then we need to go rotate it and then we need to go draw it",
    "start": "1490799",
    "end": "1497760"
  },
  {
    "text": "and you want the that happen in that order but all these are asynchronous right so in traditional PR You' probably",
    "start": "1497760",
    "end": "1502840"
  },
  {
    "text": "have to Nest them down and now it's getting a little sore in my eyes and then God forbid you should add aor",
    "start": "1502840",
    "end": "1508000"
  },
  {
    "text": "handling in here so now he's got a lot of repetition this code is very hard to read well we can turn this into the",
    "start": "1508000",
    "end": "1514360"
  },
  {
    "text": "future version and things get a little bit more clear to understand each one of those functions or methods now returns a",
    "start": "1514360",
    "end": "1520799"
  },
  {
    "text": "future and due to chaining I can chain those Futures and this is really cool notice how I can put a catch error at",
    "start": "1520799",
    "end": "1526720"
  },
  {
    "text": "the end that handles any error or exception handled in any of the previous Futures so instead of duplicating a lot",
    "start": "1526720",
    "end": "1533520"
  },
  {
    "text": "of work you can uh go ahead and ride off of the chaining capabilities of",
    "start": "1533520",
    "end": "1539240"
  },
  {
    "text": "Futures Futures also compose a good example here is if I want to get two pictures I want to wait for both of them",
    "start": "1539240",
    "end": "1545039"
  },
  {
    "text": "to complete how would I do that callbacks well I've got to have some counter and then understand which call back was finished first and then check",
    "start": "1545039",
    "end": "1550240"
  },
  {
    "text": "am I done with all of them future has a nice static method Waits hand handed any number of Futures and when all those",
    "start": "1550240",
    "end": "1556720"
  },
  {
    "text": "Futures are done then then then catch eror so object-oriented constructs for",
    "start": "1556720",
    "end": "1562000"
  },
  {
    "text": "onetime events we built it right into the core library and then all of our asynchronous methods and objects across",
    "start": "1562000",
    "end": "1567919"
  },
  {
    "text": "the core libraries now use future of course as you know the more you bake into the platform the more all the other",
    "start": "1567919",
    "end": "1573080"
  },
  {
    "text": "thirdparty dependencies of libraries can work in the same way so now you don't have three or four different proposals",
    "start": "1573080",
    "end": "1578480"
  },
  {
    "text": "for how do we do future-based apis and dart comes out of the box okay and I explain that so Futures",
    "start": "1578480",
    "end": "1587320"
  },
  {
    "text": "are really cool for one-hot callbacks but we also have the concept of streams for repeating callbacks good example of",
    "start": "1587320",
    "end": "1594720"
  },
  {
    "text": "a future might be go calculate some Fibonacci number and get back to me when you're done streams will be hey I'm",
    "start": "1594720",
    "end": "1600520"
  },
  {
    "text": "reading bites off a socket so let me know every time there's some bites you know give me that give me that data or",
    "start": "1600520",
    "end": "1606200"
  },
  {
    "text": "every time there's a click give me a stream of clicks to come off so let's see this in action speaking",
    "start": "1606200",
    "end": "1613960"
  },
  {
    "text": "about clicks actually let's look at Onkey press so imagine I want to get notified every time someone presses a",
    "start": "1613960",
    "end": "1619840"
  },
  {
    "text": "key in some text area on my web page here so I'm going to query for that text area say okay on key press that returns",
    "start": "1619840",
    "end": "1626039"
  },
  {
    "text": "a stream well streams are great because you can chain them transform them filter",
    "start": "1626039",
    "end": "1631679"
  },
  {
    "text": "them in this case I want to filter all key presses I only care about the keys on the keyboard not the not the odd Keys",
    "start": "1631679",
    "end": "1638039"
  },
  {
    "text": "here but then for every one of those key codes I actually want to turn it into a string so map the incoming series of",
    "start": "1638039",
    "end": "1643760"
  },
  {
    "text": "events from key codes to Strings and again map is returning another stream",
    "start": "1643760",
    "end": "1649640"
  },
  {
    "text": "in this case I only care about the first one so here I'm turning the stream into a future which is neat so the very first",
    "start": "1649640",
    "end": "1655640"
  },
  {
    "text": "event now future wait for that then print it out this is my first character",
    "start": "1655640",
    "end": "1661519"
  },
  {
    "text": "so kind of like Futures and that if you bake it into the platform everyone else can use it and once everyone else is",
    "start": "1661519",
    "end": "1666840"
  },
  {
    "text": "using it we get this great ability to kind of transform and pass one stream to another and everyone's talking the same",
    "start": "1666840",
    "end": "1673039"
  },
  {
    "start": "1672000",
    "end": "1792000"
  },
  {
    "text": "language okay so what's new in HTML so a lot of this stuff has been in the core libraries but I want to show you how you",
    "start": "1673039",
    "end": "1678840"
  },
  {
    "text": "would actually use this stuff to build modern web apps with dart so I like this example here because",
    "start": "1678840",
    "end": "1685480"
  },
  {
    "text": "if you know what the JavaScript version of this looks like you'll know that it's a lot longer and harder to understand",
    "start": "1685480",
    "end": "1690919"
  },
  {
    "text": "but this shows you a bunch of Dart features that we've already talked about all in action right here audio col and true",
    "start": "1690919",
    "end": "1698279"
  },
  {
    "text": "video col and true these are named parameters now imagine if this was get user media true true no one in this room",
    "start": "1698279",
    "end": "1704279"
  },
  {
    "text": "would know what those true those special Flags mean so these name parameters here are fantastic it to give you guys the",
    "start": "1704279",
    "end": "1709440"
  },
  {
    "text": "ability to actually read this code and the fact that they're actual baked into the um the language the tools can give",
    "start": "1709440",
    "end": "1716279"
  },
  {
    "text": "you code completion on this so when get user media is complete then so that returns a future so now I've got some",
    "start": "1716279",
    "end": "1721760"
  },
  {
    "text": "media stream and I want to create a video element uh method Cascades in action go ahead and create the video element set it",
    "start": "1721760",
    "end": "1728799"
  },
  {
    "text": "up and then here's the usage of streams here unloaded metadata listen so listen to all events for onloaded metadata so",
    "start": "1728799",
    "end": "1736279"
  },
  {
    "text": "this is great and the neat thing about this is the Dom that is the API for the browser looks and acts like Dart code so",
    "start": "1736279",
    "end": "1743080"
  },
  {
    "text": "if you know how to use the core libraries in the language of Dart you know how to program the browser and that was really important to",
    "start": "1743080",
    "end": "1749919"
  },
  {
    "text": "us okay another good example here this is really cool so who's lately sent over",
    "start": "1749919",
    "end": "1755279"
  },
  {
    "text": "XML over XML HTTP HTTP request right almost no one so we",
    "start": "1755279",
    "end": "1761360"
  },
  {
    "text": "dropped XML it's cleaner uh but it also shows you how we've simplified Ajax",
    "start": "1761360",
    "end": "1766760"
  },
  {
    "text": "programming much like J quy did for JavaScript you just get it out of the box with dart so here HTP request.",
    "start": "1766760",
    "end": "1772760"
  },
  {
    "text": "request set up the method set up the request headers again future when that request is done then get the request",
    "start": "1772760",
    "end": "1780240"
  },
  {
    "text": "where I can print out the body or do whatever and then catch error for any errors that might have happened like a 500 from that from that Ajax request",
    "start": "1780240",
    "end": "1787919"
  },
  {
    "text": "another good example just making Dom programming feel like dark code okay so those are some of the",
    "start": "1787919",
    "end": "1795000"
  },
  {
    "start": "1792000",
    "end": "2012000"
  },
  {
    "text": "Primitives those are how we've improved the actual apis of the Dom but there's a new whole Suite of really awesome web",
    "start": "1795000",
    "end": "1802000"
  },
  {
    "text": "Technologies coming down the pipe collectively known as web components that are going to fundamentally change",
    "start": "1802000",
    "end": "1807519"
  },
  {
    "text": "the way we build web apps web components is a family of specs that helps give you actual",
    "start": "1807519",
    "end": "1814000"
  },
  {
    "text": "encapsulation something other platforms have had forever but on the web we don't have today imagine today if you want to",
    "start": "1814000",
    "end": "1819440"
  },
  {
    "text": "use some sort of framework it's going to give you some CSS you would put that CSS at the top of your file now that applies",
    "start": "1819440",
    "end": "1825679"
  },
  {
    "text": "to your entire page when really you just want the components from that framework and you don't want those components to",
    "start": "1825679",
    "end": "1831640"
  },
  {
    "text": "be mucking around in in your page you don't want those components styles to be overriding the Styles in your page you",
    "start": "1831640",
    "end": "1838120"
  },
  {
    "text": "also want the ability to set up real data binding between the models in your application and the fields and Dom",
    "start": "1838120",
    "end": "1845640"
  },
  {
    "text": "properties in your page again something that a lot of other platforms had forever this is all coming to the web",
    "start": "1845640",
    "end": "1852320"
  },
  {
    "text": "and it's on standards track and we have cross browser support for it but it's going to be a little while until it lands everywhere well the nice thing is",
    "start": "1852320",
    "end": "1859639"
  },
  {
    "text": "Dart provides you all the polyfills in the compilation required to write with this new awesome world of web components",
    "start": "1859639",
    "end": "1866960"
  },
  {
    "text": "and model driven views and still deliver it across modern browsers today since Dart has to compile the JavaScript",
    "start": "1866960",
    "end": "1872519"
  },
  {
    "text": "anyway we can go ahead and compile this code the way you want to write it down into JavaScript for you so let's look at",
    "start": "1872519",
    "end": "1879159"
  },
  {
    "text": "an example here data binding data binding here the top is the dark code well we can use those annotations again",
    "start": "1879159",
    "end": "1885360"
  },
  {
    "text": "and say ah class person he's observable so I want the system to watch for changes in and out of my class person or",
    "start": "1885360",
    "end": "1892760"
  },
  {
    "text": "all instances of person I'm also saying okay I have a list of people and I want that to be observable as well so give me event",
    "start": "1892760",
    "end": "1899600"
  },
  {
    "text": "notifications if my list gets added to or removed and then down here is the",
    "start": "1899600",
    "end": "1904760"
  },
  {
    "text": "little snippet of HTML that we care about here we have a button and we say if the button is pressed run this Dart",
    "start": "1904760",
    "end": "1910320"
  },
  {
    "text": "expression here add person uh which is the same ad person as right here and we have here the UL and we want to create a",
    "start": "1910320",
    "end": "1917120"
  },
  {
    "text": "template here same for every p and people and then double curly braces is a",
    "start": "1917120",
    "end": "1922639"
  },
  {
    "text": "way to do data binding inside text so data bind to whatever the value of a p.n",
    "start": "1922639",
    "end": "1928240"
  },
  {
    "text": "name is and also bind it to the text field here okay so let's see this in",
    "start": "1928240",
    "end": "1933279"
  },
  {
    "text": "operation here I'm going to pull up the dart editor now you'll get this uh with the",
    "start": "1933279",
    "end": "1938559"
  },
  {
    "text": "open source Dart SDK it's a completely rebuilt experience based on Eclipse but there's also uh we'll go into it but",
    "start": "1938559",
    "end": "1945039"
  },
  {
    "text": "there's plugins for a lot of other browsers as well uh let's see do I care about this no I",
    "start": "1945039",
    "end": "1952000"
  },
  {
    "text": "would like to show you people here we go okay so here's the here's the same code",
    "start": "1952000",
    "end": "1957600"
  },
  {
    "text": "and I want to show you this in action here so if I run this here you can run your Dart apps from Dart editor in both",
    "start": "1957600",
    "end": "1963320"
  },
  {
    "text": "darum which is a version of chromium with the dart VM installed or you can compile it JavaScript and pop it open in",
    "start": "1963320",
    "end": "1970000"
  },
  {
    "text": "your uh favorite browser okay so we're going to add a",
    "start": "1970000",
    "end": "1975320"
  },
  {
    "text": "message here and so so it added a person into that list and because the list is",
    "start": "1975320",
    "end": "1980880"
  },
  {
    "text": "observable he adds a new Li right here automatically I didn't have to write any of that code well it's all blank here",
    "start": "1980880",
    "end": "1986440"
  },
  {
    "text": "but remember I have two-way data binding between the form field here and what's up there so hello Jax that's all live",
    "start": "1986440",
    "end": "1993799"
  },
  {
    "text": "too again live two-way data binding I didn't have to write any of this code I didn't have to write any code for like onchange handler do this or I didn't",
    "start": "1993799",
    "end": "2000159"
  },
  {
    "text": "have to write any code like hey if something gets added to the list remove it or or tell my rest of the system the",
    "start": "2000159",
    "end": "2006240"
  },
  {
    "text": "dart webui project gives you all this stuff so that's pretty cool but we could do even",
    "start": "2006240",
    "end": "2011960"
  },
  {
    "text": "more I talked about encapsulation so that was just that was the basics of datab binding but I want to actually create reusable",
    "start": "2011960",
    "end": "2018840"
  },
  {
    "start": "2012000",
    "end": "2225000"
  },
  {
    "text": "components thanks to custom elements a member of the family the web component specs I can create a custom element",
    "start": "2018840",
    "end": "2025559"
  },
  {
    "text": "extend the actual lexicon of HTML and encapsulate the structure the behavior and the style of this custom element so",
    "start": "2025559",
    "end": "2033519"
  },
  {
    "text": "what does that mean well okay these are a little bit out OFW but I'll show them to inare okay so how do we use an actual",
    "start": "2033519",
    "end": "2039960"
  },
  {
    "text": "custom element well the version on the bottom here div is Click counter I'm actually subclassing div I'm saying this",
    "start": "2039960",
    "end": "2046559"
  },
  {
    "text": "is a div but it's also a type of of Click counter now where did that click counter come from well I can use The",
    "start": "2046559",
    "end": "2053520"
  },
  {
    "text": "Primitives built into HTML anyway link and I want to import this custom element here click counter into my",
    "start": "2053520",
    "end": "2059800"
  },
  {
    "text": "page well what does this look like okay I can define an custom element using the",
    "start": "2059800",
    "end": "2064839"
  },
  {
    "text": "element tag again HTML exists and I've got T tag so I can reuse that stuff remember I said that custom elements",
    "start": "2064839",
    "end": "2071280"
  },
  {
    "text": "encapsulate structure style and behavior the structure of this custom element here is defined in this template tag the",
    "start": "2071280",
    "end": "2078040"
  },
  {
    "text": "behavior of this custom element is defined in this Dart file because Dart is objectoriented I can say create a",
    "start": "2078040",
    "end": "2084280"
  },
  {
    "text": "class counter component extends web component and this is the behavior that's associated with The Click counter",
    "start": "2084280",
    "end": "2091079"
  },
  {
    "text": "and remember I use it here and I've got count starting count okay so let's see this in action as well",
    "start": "2091079",
    "end": "2098240"
  },
  {
    "text": "clicks HTML Run asium Okay so as I click this this this",
    "start": "2098240",
    "end": "2107400"
  },
  {
    "text": "whole thing right here is the custom element but remember all I used in my page was div is Click counter because",
    "start": "2107400",
    "end": "2115400"
  },
  {
    "text": "the custom element defines his own structure that you see in the page but the encapsulation boundary here is this",
    "start": "2115400",
    "end": "2121280"
  },
  {
    "text": "element here we call the host element this div here so all that's kind of going on under the covers now of this",
    "start": "2121280",
    "end": "2126520"
  },
  {
    "text": "div is hidden from your page which allows you to create these reusable components that no one else can kind of muck in or touch or these components",
    "start": "2126520",
    "end": "2133400"
  },
  {
    "text": "can't muck up with the rest of your page now they become reusable they become extendable you can package up these",
    "start": "2133400",
    "end": "2138800"
  },
  {
    "text": "custom elements in darts package manager and reuse them ah so now now web web development actually gets interesting",
    "start": "2138800",
    "end": "2145440"
  },
  {
    "text": "Okay cool so the question is this start",
    "start": "2145440",
    "end": "2152079"
  },
  {
    "text": "specific no again the web components data binding custom elements this is all",
    "start": "2152079",
    "end": "2157359"
  },
  {
    "text": "stuff on a standards track that is being worked on by multiple browser vendors we just happen to be able to give you all",
    "start": "2157359",
    "end": "2163760"
  },
  {
    "text": "this new shiny today even though browsers don't actually implement this stuff yet because we're going to compile",
    "start": "2163760",
    "end": "2168800"
  },
  {
    "text": "all this down into the actual vanilla constructs of JavaScript in HTML",
    "start": "2168800",
    "end": "2175200"
  },
  {
    "text": "for uh no everything here Works across the modern web today because we compile all this down into vanilla JavaScript",
    "start": "2175720",
    "end": "2183200"
  },
  {
    "text": "and HTML I'll give you an example of that",
    "start": "2183200",
    "end": "2187720"
  },
  {
    "text": "if you cut and paste this into a browser right you need to include the libraries that make that work here's a good",
    "start": "2189680",
    "end": "2195400"
  },
  {
    "text": "example I'm going to run this as JavaScript to just illustrate this point now this is regular stock stable Chrome",
    "start": "2195400",
    "end": "2202000"
  },
  {
    "text": "uh he doesn't know anything about the all the fancy new data binding stuff he doesn't know anything about Dart but you",
    "start": "2202000",
    "end": "2207760"
  },
  {
    "text": "can see it all works because I've compiled and give all the polyfills right I brought along the implementation",
    "start": "2207760",
    "end": "2214040"
  },
  {
    "text": "with me and as the browsers Implement more and more of this stuff I can drop some of the baggage that's",
    "start": "2214040",
    "end": "2220760"
  },
  {
    "text": "required okay go back okay cool okay so what's new in the",
    "start": "2220760",
    "end": "2226800"
  },
  {
    "start": "2225000",
    "end": "2256000"
  },
  {
    "text": "tools and ecosystem well we saw chromia we saw darium there and the feedback we get from our developers is that darium",
    "start": "2226800",
    "end": "2233240"
  },
  {
    "text": "is really fantastic in allowing developers to completely cut out the compilation step they have very fast",
    "start": "2233240",
    "end": "2239160"
  },
  {
    "text": "iteration Cycles through the vast majority of their development and that they stay in the editor they stay in Dum",
    "start": "2239160",
    "end": "2244880"
  },
  {
    "text": "thanks to the DVM just reads in that dark code and runs it at the very last say 20% of their development they then",
    "start": "2244880",
    "end": "2251079"
  },
  {
    "text": "start invoking Dart tojs compiling their app to JavaScript and testing across the wild now we saw the dart editor which is",
    "start": "2251079",
    "end": "2258800"
  },
  {
    "start": "2256000",
    "end": "2288000"
  },
  {
    "text": "one way in which you can write Dart code Dart editor is great because it allows you to do refactoring and code completion and jump to definition and",
    "start": "2258800",
    "end": "2266400"
  },
  {
    "text": "find in project and all that stuff that you would want to do with any sizable application but the good news is you",
    "start": "2266400",
    "end": "2272599"
  },
  {
    "text": "don't have to use our if you don't want to we've got plugins across a variety of different editors like Sublime",
    "start": "2272599",
    "end": "2278040"
  },
  {
    "text": "uh Eclipse as an actual plugin vim and then even intell and webstorm have a dart plugin as well so hopefully your",
    "start": "2278040",
    "end": "2283640"
  },
  {
    "text": "favorite editor has ability for you to write productive Dart code but if you don't want to go get an",
    "start": "2283640",
    "end": "2289839"
  },
  {
    "start": "2288000",
    "end": "2330000"
  },
  {
    "text": "editor and if you just want to try out Dart one of the latest things that we've launched is try. dartlang.org we've",
    "start": "2289839",
    "end": "2296160"
  },
  {
    "text": "actually taken so here's Firefox which of course doesn't know anything about Dart so this is all compiled to JavaScript we've actually compiled Dart",
    "start": "2296160",
    "end": "2303160"
  },
  {
    "text": "tojs that compiler with dart tojs so in here you've got the compiler run as JavaScript and live here you can edit",
    "start": "2303160",
    "end": "2310560"
  },
  {
    "text": "your code there we go and try out the",
    "start": "2310560",
    "end": "2315839"
  },
  {
    "text": "language try out the core libraries even try out HTML programming without ever leaving your browser this is really cool",
    "start": "2315839",
    "end": "2320960"
  },
  {
    "text": "it even works offline we have appcache installed so it's a really low barrier way for you to just see what DART is all",
    "start": "2320960",
    "end": "2329280"
  },
  {
    "start": "2330000",
    "end": "2376000"
  },
  {
    "text": "about okay moving on in the tools and ecosystem stuff we also have a full unit",
    "start": "2330040",
    "end": "2335200"
  },
  {
    "text": "test Library full mock Library this an example this a whole talk on on testing in MOX I wish I had time to give but it",
    "start": "2335200",
    "end": "2341480"
  },
  {
    "text": "gives you an example of just how tur and ceremony free the unit testing is we also ship a headless Chrome which allows",
    "start": "2341480",
    "end": "2347880"
  },
  {
    "text": "you to automate browser based testing off of say your continu continuous integration or testing environments a",
    "start": "2347880",
    "end": "2354720"
  },
  {
    "text": "good example of a partner we've been working with drone.io is a hosted continuous integration service that",
    "start": "2354720",
    "end": "2359760"
  },
  {
    "text": "knows about Dart has our headless chromium has the dart VM and it connects all up to bitbucket and GitHub so you",
    "start": "2359760",
    "end": "2366200"
  },
  {
    "text": "get this great cycle of writing in Dart deploying to Dart testing in Dart testing in your in your headless",
    "start": "2366200",
    "end": "2371520"
  },
  {
    "text": "browsers and it all just works more or less out of the box we've also been working hard on a",
    "start": "2371520",
    "end": "2378200"
  },
  {
    "start": "2376000",
    "end": "2409000"
  },
  {
    "text": "package management system it's a great way to get the ecosystem up and going we affectionally call ours Pub because you",
    "start": "2378200",
    "end": "2383400"
  },
  {
    "text": "play darts in a pub and with Pub you can download manage upgrade and install",
    "start": "2383400",
    "end": "2388480"
  },
  {
    "text": "thirdparty dependencies and packages on our Central hosting service pub.dartlang.org you'll find packages",
    "start": "2388480",
    "end": "2395400"
  },
  {
    "text": "for MVC Frameworks templating game engines physics engines you name it database drivers uh it's great to see",
    "start": "2395400",
    "end": "2402599"
  },
  {
    "text": "the community get so involved so early on in the dart ecosystem Evolution but there's already a ton there for you to",
    "start": "2402599",
    "end": "2408000"
  },
  {
    "text": "try out this is also really cool we've been working with Adobe to see what we can do",
    "start": "2408000",
    "end": "2414800"
  },
  {
    "start": "2409000",
    "end": "2462000"
  },
  {
    "text": "if we can take the great editing experience of say flash Pro which is great for animations and um timelines",
    "start": "2414800",
    "end": "2423359"
  },
  {
    "text": "and great for Creative folks but who want to Target the web so they Lov the tools want to Target the web they also",
    "start": "2423359",
    "end": "2429400"
  },
  {
    "text": "loved action script 3 but Dart is very familiar to action script 3 developers and dart is coming to Chrome and darkart",
    "start": "2429400",
    "end": "2435720"
  },
  {
    "text": "compiles the JavaScript so you can use tools like flash Pro authoring them actually write dark code and Export the",
    "start": "2435720",
    "end": "2442280"
  },
  {
    "text": "whole thing down to Dart which then of course compiles the JavaScript or runs right on the VM this is really really",
    "start": "2442280",
    "end": "2448599"
  },
  {
    "text": "cool we see a lot of interest from action script 3 developers who say hey man I want to know what to do next but I",
    "start": "2448599",
    "end": "2454359"
  },
  {
    "text": "love my tools and I love action script 3 what should I do Dart they're finding is a totally natural answer and so this is",
    "start": "2454359",
    "end": "2459640"
  },
  {
    "text": "going to be available I think by the end of the month okay cool so that's a little bit about what's new with the tools let's",
    "start": "2459640",
    "end": "2465880"
  },
  {
    "text": "look about something that's really near and dear to our uh Engineers Hearts size and speed uh the guys who co-founded the",
    "start": "2465880",
    "end": "2473000"
  },
  {
    "text": "dart project also co-founded and wrote V8 Chrome's fast JavaScript engine they also wrote and helped work on Hotspot",
    "start": "2473000",
    "end": "2480200"
  },
  {
    "text": "the thing that made Java fast so these guys know speed and these guys have speed like in their sites at all",
    "start": "2480200",
    "end": "2486240"
  },
  {
    "start": "2486000",
    "end": "2523000"
  },
  {
    "text": "times so you're probably asking yourself okay great but I thought the web was fast enough right aren't you telling me that Chrome is already fast well",
    "start": "2486240",
    "end": "2492760"
  },
  {
    "text": "certainly we saw a whole Renaissance of more interesting apps come about because",
    "start": "2492760",
    "end": "2498000"
  },
  {
    "text": "of v8's reintroduction of speed to the web once V8 was introduced you see a",
    "start": "2498000",
    "end": "2503440"
  },
  {
    "text": "bunch of other browsers get interested in speed and then enabled a whole slew of really amazing apps like Google Docs",
    "start": "2503440",
    "end": "2509160"
  },
  {
    "text": "and uh here's Google Maps uh the presentation software I'm using right now really cool multimedia experiences",
    "start": "2509160",
    "end": "2515400"
  },
  {
    "text": "here like Oz and the thing we did with cir to solay so we've completely pushed the boundaries of what's possible on the",
    "start": "2515400",
    "end": "2521599"
  },
  {
    "text": "web well it turns out that what if you could",
    "start": "2521599",
    "end": "2527240"
  },
  {
    "start": "2523000",
    "end": "2584000"
  },
  {
    "text": "double the speed again of your browser what kind of Renaissance would you be able to bring forth what kind of amazing",
    "start": "2527240",
    "end": "2533000"
  },
  {
    "text": "experiences would you be able to help your developers produce if you could double the performance so yes uh web is",
    "start": "2533000",
    "end": "2540720"
  },
  {
    "text": "fast but we can definitely make it faster but it's not just about oh uh making your multimedia apps run faster",
    "start": "2540720",
    "end": "2546920"
  },
  {
    "text": "we're of course is important but it's also about this everyone's got one of these in their pockets maybe even two",
    "start": "2546920",
    "end": "2552880"
  },
  {
    "text": "maybe two of these in a tablet and probably this time next year we'll be primarily developing for this now this",
    "start": "2552880",
    "end": "2559680"
  },
  {
    "text": "has a battery it doesn't have one of these I don't have the luxury of being able to keep this plugged in every CPU",
    "start": "2559680",
    "end": "2564960"
  },
  {
    "text": "cycle counts on this guy because you don't want your users to uninstall your app because it drains your battery and",
    "start": "2564960",
    "end": "2570920"
  },
  {
    "text": "this is really important as we move into a mobile world if you can get from what used to take four Cycles down to one",
    "start": "2570920",
    "end": "2576720"
  },
  {
    "text": "cycle that's a huge Improvement in battery alone not let alone of course actual felt",
    "start": "2576720",
    "end": "2583920"
  },
  {
    "start": "2584000",
    "end": "2621000"
  },
  {
    "text": "performance okay so let's look at what we've done to help make things faster and smaller well Dart tojs uh has been",
    "start": "2584440",
    "end": "2591119"
  },
  {
    "text": "doing a tremendous amount of work using the static and analyzable features of Dart to help produce small and fast",
    "start": "2591119",
    "end": "2597240"
  },
  {
    "text": "JavaScript here's an example you take your uh application you run it through Dart tojs it performs tree shaking",
    "start": "2597240",
    "end": "2603559"
  },
  {
    "text": "minification type inferencing and spits out not only the JavaScript code but also a source map file which allows you",
    "start": "2603559",
    "end": "2609640"
  },
  {
    "text": "to stick inside Chrome Dev tools and debug what the debug the original dark",
    "start": "2609640",
    "end": "2615480"
  },
  {
    "text": "code and map that dark code back to the JavaScript code that the browser is actually running which is really really",
    "start": "2615480",
    "end": "2621400"
  },
  {
    "text": "cool so I want to show you an example of the JavaScript code that we output when you compile Dart to",
    "start": "2621400",
    "end": "2627480"
  },
  {
    "text": "JavaScript it's almost a one to one it's it's really good these days here's an",
    "start": "2627480",
    "end": "2632880"
  },
  {
    "text": "example here we've got a class we're importing a library uh now this is I had to cut out some boiler plate that's we",
    "start": "2632880",
    "end": "2639200"
  },
  {
    "text": "don't we don't care about here but for the feature the code that you write here almost a one: one so the code you can",
    "start": "2639200",
    "end": "2645160"
  },
  {
    "text": "sort of read this and actually help debug it but of course you want to ship down as smallest code as possible well",
    "start": "2645160",
    "end": "2650920"
  },
  {
    "text": "DJs ships with minification out of the box so here's an example of the previous JavaScript code that you saw which is",
    "start": "2650920",
    "end": "2656359"
  },
  {
    "text": "generated by DJs and then minified here because DJs can do a whole program",
    "start": "2656359",
    "end": "2661760"
  },
  {
    "text": "analysis he really understands the structure of your Dart app more so than",
    "start": "2661760",
    "end": "2667200"
  },
  {
    "text": "A Min minifier for JavaScript so you can produce very small minified",
    "start": "2667200",
    "end": "2672720"
  },
  {
    "text": "code we also talked about this concept of tree shaking minification works great for the code that's produced how do you",
    "start": "2672720",
    "end": "2677880"
  },
  {
    "start": "2673000",
    "end": "2778000"
  },
  {
    "text": "make that smaller but what about when you have a very large application say an application that pulls in very large",
    "start": "2677880",
    "end": "2683960"
  },
  {
    "text": "libraries well if you look at any JavaScript library today the primary marketing material they have is how",
    "start": "2683960",
    "end": "2689400"
  },
  {
    "text": "small they are right you've got jqu comes in at 30k 30k gzipped minified and",
    "start": "2689400",
    "end": "2696119"
  },
  {
    "text": "you may only be using 10% of jQuery should you be paying for the other 90%",
    "start": "2696119",
    "end": "2702319"
  },
  {
    "text": "And then you've got you know whole competition zepto Nano fto and all these well I want to get in a world where I",
    "start": "2702319",
    "end": "2708000"
  },
  {
    "text": "only want to pick a library based on how good it is and what it does for me not how small it is because as you reduce",
    "start": "2708000",
    "end": "2713440"
  },
  {
    "text": "the size and now you've pushed out features and now I got to go to another library and go get that other feature well in Dart because you can statically",
    "start": "2713440",
    "end": "2719440"
  },
  {
    "text": "analyze the whole program you can say okay these are the actual functions and classes that your program requires I",
    "start": "2719440",
    "end": "2725359"
  },
  {
    "text": "will prune out everything else so here's an example here let's say you write the code in blue and it Imports a library in",
    "start": "2725359",
    "end": "2731200"
  },
  {
    "text": "yellow you only call one function from that library but notice how there's a blue function that you wrote you never call it there's a function in yellow",
    "start": "2731200",
    "end": "2737599"
  },
  {
    "text": "that's uh comes along with the import that you never call well Dart tojs understands tree shaking he can look",
    "start": "2737599",
    "end": "2744079"
  },
  {
    "text": "across all libraries you've imported all code that you've written all paths through the system and say well actually",
    "start": "2744079",
    "end": "2749160"
  },
  {
    "text": "you really only need main Funk 2 and Funk this is awesome now my tools are actually helping me okay so that's a",
    "start": "2749160",
    "end": "2755599"
  },
  {
    "text": "little bit Dr JS and what he's doing to make things smaller and faster let's talk about the DVM and what we're doing there to make things",
    "start": "2755599",
    "end": "2761559"
  },
  {
    "text": "faster so a good way to think about why you see like why a new VM and why much",
    "start": "2761559",
    "end": "2767960"
  },
  {
    "text": "better performance in D VM is to understand that the language designers are also VM Engineers so that helps that",
    "start": "2767960",
    "end": "2774800"
  },
  {
    "text": "designing a language in libraries that they can Implement very efficiently things like explicit and static",
    "start": "2774800",
    "end": "2780599"
  },
  {
    "start": "2778000",
    "end": "2835000"
  },
  {
    "text": "structure in Dart you scan through the code you parse it the program doesn't change after that in JavaScript the",
    "start": "2780599",
    "end": "2787839"
  },
  {
    "text": "program executes as you load it and potentially it changes as you go so it's",
    "start": "2787839",
    "end": "2793119"
  },
  {
    "text": "very hard to optimize that in D you have real arrays real classes it's the all the literature is all about how do you",
    "start": "2793119",
    "end": "2799880"
  },
  {
    "text": "optimize objectoriented VMS in D you have direct calls you don't have to walk a prototype chain to figure out uh who",
    "start": "2799880",
    "end": "2807240"
  },
  {
    "text": "might handle this and by the way did my prototype change at runtime out underneath me and do I have to deopt and",
    "start": "2807240",
    "end": "2813040"
  },
  {
    "text": "throw away all my optimized code Etc that can't happen in Dart in Dart you can globally track field types this list",
    "start": "2813040",
    "end": "2819559"
  },
  {
    "text": "goes on and on but the analogy here is the version on the left here is kind of traditional web program today we've got a lot of baggage just like 10 plus years",
    "start": "2819559",
    "end": "2827400"
  },
  {
    "text": "of of stuff going on here in JavaScript engines but in Dart you're kind of zooming along with the tiny little",
    "start": "2827400",
    "end": "2832599"
  },
  {
    "text": "suitcase with wheels on it so that's cool the other nice thing about introducing your own VM is not only can",
    "start": "2832599",
    "end": "2838720"
  },
  {
    "start": "2835000",
    "end": "2874000"
  },
  {
    "text": "you design a language but runs really fantastically on it but you can kind of give developers keys to unlock whole",
    "start": "2838720",
    "end": "2845240"
  },
  {
    "text": "swast of transistors that you cannot access and it's a real shame and this isn't just for super beefy you know CPUs",
    "start": "2845240",
    "end": "2852680"
  },
  {
    "text": "even cell phones today have whole swats of simd instruction sets that you cannot access today and we want to give",
    "start": "2852680",
    "end": "2858680"
  },
  {
    "text": "developers access to the whole CPU again it's not just about uh Pure Performance it's about battery too so here the dart",
    "start": "2858680",
    "end": "2866040"
  },
  {
    "text": "VM unlocks the simd instructions uh which is something like 25% of this whole of this arm CPU you can now access",
    "start": "2866040",
    "end": "2873240"
  },
  {
    "text": "in Dart so what does this mean in real life well here's some recent Benchmark numbers that we've been tracking blue is",
    "start": "2873240",
    "end": "2879359"
  },
  {
    "start": "2874000",
    "end": "2947000"
  },
  {
    "text": "Dart VM yellow the middle line is Dart code compiled to JavaScript I'm sorry the",
    "start": "2879359",
    "end": "2885800"
  },
  {
    "text": "yellow line is is handwritten JavaScript code and the green line is dark code compiled to JavaScript now you can see",
    "start": "2885800",
    "end": "2892480"
  },
  {
    "text": "the Blue Line significantly faster and sometimes 2x faster than the handwritten",
    "start": "2892480",
    "end": "2897559"
  },
  {
    "text": "JavaScript code and in some cases and still very early with these numbers the reason I'm showing these is to show you",
    "start": "2897559",
    "end": "2903400"
  },
  {
    "text": "the trajectory we're on we think we can do better than this but look at Delta blue that Benchmark here",
    "start": "2903400",
    "end": "2910319"
  },
  {
    "text": "the compiled to JavaScript version the green is slightly faster than the handwritten JavaScript code now this is",
    "start": "2910319",
    "end": "2917160"
  },
  {
    "text": "we're not going to expect this all the time this shows you sometimes what can happen when you do a whole program analysis look at the program rewrite the",
    "start": "2917160",
    "end": "2924160"
  },
  {
    "text": "code in a way that's friendly to JavaScript engines better and smarter than developers would actually lay out",
    "start": "2924160",
    "end": "2929799"
  },
  {
    "text": "their code it's a lot like what's what GCC is doing for your C code right you write code for humans gcc's job is to",
    "start": "2929799",
    "end": "2935559"
  },
  {
    "text": "make it work fantastic on CPUs Dart tojs code D tojs does something similar he looks at the dart",
    "start": "2935559",
    "end": "2941599"
  },
  {
    "text": "code and lays out JavaScript that's fantastic for JavaScript engin smarter than you probably would",
    "start": "2941599",
    "end": "2947240"
  },
  {
    "start": "2947000",
    "end": "2991000"
  },
  {
    "text": "yourself but that was all on this you know beefy MacBook Pro with 87 cores or whatever so but how does this translate",
    "start": "2947240",
    "end": "2953880"
  },
  {
    "text": "down to phones again sensing a theme here well happy to report that you see the same kind of performance",
    "start": "2953880",
    "end": "2959640"
  },
  {
    "text": "characteristics and gains when you deploy your apps on phones as well and this is an interesting Benchmark here",
    "start": "2959640",
    "end": "2965200"
  },
  {
    "text": "nbody because it's able to be accelerated by simd those instruction sets that we can now provide you in this",
    "start": "2965200",
    "end": "2970880"
  },
  {
    "text": "case we get a almost 2 and a half performance increase running on the dart VM thanks to both the design of the",
    "start": "2970880",
    "end": "2976480"
  },
  {
    "text": "language and the VM but also the simd instruction sets over the handwritten JS code and to see this two and a half",
    "start": "2976480",
    "end": "2982680"
  },
  {
    "text": "times performance Delta on mobile where every CPU cycle counts every battery you know cell counts it's pretty significant",
    "start": "2982680",
    "end": "2989400"
  },
  {
    "text": "to to our users but this is only a short talk and dart is a complete ecosystem there's",
    "start": "2989400",
    "end": "2996079"
  },
  {
    "start": "2991000",
    "end": "3027000"
  },
  {
    "text": "tons of stuff I wish I had time to chat with you guys about there's a whole server Side Story in Dart as well the",
    "start": "2996079",
    "end": "3001240"
  },
  {
    "text": "dart VM runs on the on the command line as well as inside browsers so much like node shows you how you can write",
    "start": "3001240",
    "end": "3006880"
  },
  {
    "text": "JavaScript that runs in both places or git runs in both places you can run Dart in both client and server again the",
    "start": "3006880",
    "end": "3013079"
  },
  {
    "text": "testing stuff is really really rich there's a whole uh mock expectation headless stuff there our whole",
    "start": "3013079",
    "end": "3018599"
  },
  {
    "text": "concurrency story we didn't go into at all it's an isolate based concurr concurrency system no shared State",
    "start": "3018599",
    "end": "3024040"
  },
  {
    "text": "threads so very much safer and ton more so how do you try Dart well Dart is",
    "start": "3024040",
    "end": "3030160"
  },
  {
    "start": "3027000",
    "end": "3063000"
  },
  {
    "text": "an open source project uh it's on Google code and GitHub you can download the SDK and the editor and our version of darum",
    "start": "3030160",
    "end": "3036920"
  },
  {
    "text": "all everything on dartlang.org we're active on again stack Overflow and GitHub Twitter Google Plus so we're",
    "start": "3036920",
    "end": "3044119"
  },
  {
    "text": "hopefully where you are it's very very easy to reach us and we love the feedback it's still um we're still not",
    "start": "3044119",
    "end": "3050799"
  },
  {
    "text": "yet at 1.0 we hope to hit 1.0 this year but it's still a lot of time for you guys to give us like what do you need",
    "start": "3050799",
    "end": "3056799"
  },
  {
    "text": "what other higher level libraries do do you want what kind of apis do you need to write those apps that users are demanding we really want to hear",
    "start": "3056799",
    "end": "3063400"
  },
  {
    "start": "3063000",
    "end": "3111000"
  },
  {
    "text": "that so if you take anything away from this talk I hope that you learned that",
    "start": "3063400",
    "end": "3068520"
  },
  {
    "text": "Dart good language it's a stable language now we don't expect to introduce any backwards breaking changes",
    "start": "3068520",
    "end": "3074040"
  },
  {
    "text": "good libraries and stable core libraries we don't expect to introduce any backwards breaking changes there either dark compiles to JavaScript which means",
    "start": "3074040",
    "end": "3080599"
  },
  {
    "text": "you can write a dart app today and get it to work across the modern web Dart is an evolved platform too we're no longer",
    "start": "3080599",
    "end": "3086720"
  },
  {
    "text": "kind of Technology preview anymore we're getting ready for a 1.0 we've also been out since October 2011 so we've gotten a",
    "start": "3086720",
    "end": "3092960"
  },
  {
    "text": "lot of feedback internal and external so what you see here is evolve from a lot of great feedback in real life usage and",
    "start": "3092960",
    "end": "3099799"
  },
  {
    "text": "also Google and Chrome are committed to Dart we've got important internal clients using Dart today we've got on",
    "start": "3099799",
    "end": "3107359"
  },
  {
    "text": "track to get Dart VM into Chrome which is another great signal of commitments and so this All Leads up to darts ready",
    "start": "3107359",
    "end": "3113920"
  },
  {
    "start": "3111000",
    "end": "3149000"
  },
  {
    "text": "for your app now's a good time to start using Dart try it out for an app you might be launching in about 6 months or so reach",
    "start": "3113920",
    "end": "3120280"
  },
  {
    "text": "out to community and let us know how how it's all going hopefully you saw that it's familiar it's productive and it's",
    "start": "3120280",
    "end": "3126839"
  },
  {
    "text": "ready for you guys to use and with that I'll say thank you very much for spending your time with me I'll hang out",
    "start": "3126839",
    "end": "3131880"
  },
  {
    "text": "for questions I think we have a little bit of time for questions here and if not I'll be around but thanks everyone for your time and I appreciate it thank",
    "start": "3131880",
    "end": "3138040"
  },
  {
    "text": "you",
    "start": "3138040",
    "end": "3141040"
  },
  {
    "text": "[Music]",
    "start": "3143310",
    "end": "3150909"
  }
]