[
  {
    "start": "0",
    "end": "168000"
  },
  {
    "text": "hi everybody I'm Steve sorry I'm getting started a minute late I was told that I would have an introduction and then that",
    "start": "280",
    "end": "5640"
  },
  {
    "text": "person disappeared and I didn't want to make you all sit here so I'm just going to do my own introduction um so pretend",
    "start": "5640",
    "end": "11320"
  },
  {
    "text": "I didn't say any of that and then we'll just do this hi everybody I'm Steve I'm uh so uh in other news for",
    "start": "11320",
    "end": "19920"
  },
  {
    "text": "technical difficulties I use free software almost exclusively on my computer and I like to say free software",
    "start": "19920",
    "end": "25400"
  },
  {
    "text": "I love it but it does not love me so this screen is actually blank and that",
    "start": "25400",
    "end": "30759"
  },
  {
    "text": "screen has stuff on it so I'll be turning to look at this every once in a while uh because Linux plus projectors I",
    "start": "30759",
    "end": "36520"
  },
  {
    "text": "mean it half works so that's better than not working at all right um I presented a Linux Meetup recently and they did not",
    "start": "36520",
    "end": "42640"
  },
  {
    "text": "take this joke with as good of humor as you all did uh I immediately got questions about like what Hardware are",
    "start": "42640",
    "end": "48239"
  },
  {
    "text": "you using what dis thr that's weird then AO always has a good yeah anyway um all",
    "start": "48239",
    "end": "54079"
  },
  {
    "text": "right so uh this talk is called rust plus node equals heart and and uh I know",
    "start": "54079",
    "end": "61160"
  },
  {
    "text": "that this conference is a little broader than a JavaScript conference but really this talk is more like rust plus insert",
    "start": "61160",
    "end": "67799"
  },
  {
    "text": "other language here equals heart um I've actually given a different version of this talk at a ruby conference where I",
    "start": "67799",
    "end": "73479"
  },
  {
    "text": "substituted in Ruby for this so if you're not a node person super hardcore please just substitute node with",
    "start": "73479",
    "end": "78600"
  },
  {
    "text": "programming language of your choice um although node Python and Java and Ruby",
    "start": "78600",
    "end": "83880"
  },
  {
    "text": "uh tend to work best um directly in this comparison um so yeah hi I'm St I",
    "start": "83880",
    "end": "90400"
  },
  {
    "text": "historically have done a lot of Ruby work um and I'm actually like relatively new to serers side JavaScript um so I've",
    "start": "90400",
    "end": "96759"
  },
  {
    "text": "been laughing that I only work in programming languages that start with Ru so I used to do Ruby and now I do Rust",
    "start": "96759",
    "end": "103560"
  },
  {
    "text": "um I'm not sure how many more we can come up with at stth areu but whatever um I work for Milla on Rust full-time I",
    "start": "103560",
    "end": "109880"
  },
  {
    "text": "do all the documentation so if you've tried to learn rust and you did not understand something I'm sorry it's my",
    "start": "109880",
    "end": "115399"
  },
  {
    "text": "fault um my primary like thing is the uh we call it the programming language or",
    "start": "115399",
    "end": "120960"
  },
  {
    "text": "the book it's about 250 Pages currently of just like introducing the language it turns out that programming languages are",
    "start": "120960",
    "end": "126520"
  },
  {
    "text": "big and there's lots of stuff to them um and so yeah so I'm full-time dedicated just to documentation um so um I'm here",
    "start": "126520",
    "end": "135080"
  },
  {
    "text": "to share with you a couple of things today uh this talk is primarily about three things the first one is this thing",
    "start": "135080",
    "end": "141440"
  },
  {
    "text": "called systems programming in general uh the second one is rust and then the",
    "start": "141440",
    "end": "147239"
  },
  {
    "text": "third one is rust and node together um one other fun thing about this font that I have let me actually Zoom this so that",
    "start": "147239",
    "end": "154720"
  },
  {
    "text": "emoji on the end there is my favorite emoji it's a it's short name is called sweat smile it's basically smiling with",
    "start": "154720",
    "end": "160959"
  },
  {
    "text": "a little anime sweat on it uh it's a little hard to see with the smaller font but um yeah all right let's Zoom this",
    "start": "160959",
    "end": "168000"
  },
  {
    "start": "168000",
    "end": "399000"
  },
  {
    "text": "out cool so I want to talk first about this this thing called systems",
    "start": "168000",
    "end": "173080"
  },
  {
    "text": "programming so this term has like all terms you know in computer science a lot",
    "start": "173080",
    "end": "178599"
  },
  {
    "text": "of them have very poor definition we're very very bad at agreeing what words mean like have you ever asked someone",
    "start": "178599",
    "end": "184200"
  },
  {
    "text": "what object-oriented programming means uh you know you get like five different answers based on you know three different developers will give you five",
    "start": "184200",
    "end": "190400"
  },
  {
    "text": "different answers about what object-oriented programming means and it's the same thing with systems programming as well and this is like",
    "start": "190400",
    "end": "195519"
  },
  {
    "text": "sort of a problem for me because rust has tended to historically advertise itself as a systems programming language",
    "start": "195519",
    "end": "201319"
  },
  {
    "text": "um but the problem is is that means people insert whatever they think systems means um so like all uh",
    "start": "201319",
    "end": "208920"
  },
  {
    "text": "definitional argu ments I'm going to solve this by introducing a new definition of my own and so when I say",
    "start": "208920",
    "end": "214360"
  },
  {
    "text": "systems programming this is what I mean by it um and sort of what we we think about it in the rest space um this was",
    "start": "214360",
    "end": "221080"
  },
  {
    "text": "not my own idea um I blatantly am stealing this from Yuda cats who you may know as a a heavy rails contributor back",
    "start": "221080",
    "end": "227799"
  },
  {
    "text": "in the day and most recently um emberjs he's also on the rails core team um with me as well and his definition of systems",
    "start": "227799",
    "end": "234480"
  },
  {
    "text": "programming is my favorite so that's systems programming is the kind of programming when it match matters um and",
    "start": "234480",
    "end": "241720"
  },
  {
    "text": "the problem with this definition uh is that it's making a reference to a thing it does not actually explain so for",
    "start": "241720",
    "end": "247200"
  },
  {
    "text": "example in the Ruby world we say Ruby is really slow but it doesn't actually matter because your database is going to",
    "start": "247200",
    "end": "253480"
  },
  {
    "text": "take up much more of the time than your actual web request or you know if you're writing in a language like python you",
    "start": "253480",
    "end": "259079"
  },
  {
    "text": "might say like it uses more memory than something lower level but that doesn't matter because I'm actually looking for",
    "start": "259079",
    "end": "264880"
  },
  {
    "text": "development speed time and so you know I'm using this language um for that reason so so programming and Engineering",
    "start": "264880",
    "end": "271400"
  },
  {
    "text": "in general is all about tradeoffs and choosing the appropriate trade-off for whatever your task is and so I like to",
    "start": "271400",
    "end": "276840"
  },
  {
    "text": "think about systems programming is being when those it matters trade-offs actually do matter so when you can't",
    "start": "276840",
    "end": "283000"
  },
  {
    "text": "afford to use uh a 300 megabytes of RAM for a rails process um when you can't",
    "start": "283000",
    "end": "288680"
  },
  {
    "text": "afford for your application to respond in a slower amount of time because a garbage collection pause um cause your",
    "start": "288680",
    "end": "295280"
  },
  {
    "text": "application to freeze um or you know when you need some sort of soft or hard real time requirements and so you can't",
    "start": "295280",
    "end": "301199"
  },
  {
    "text": "handle arbitrary pauses at all um or you know control in general so if you're",
    "start": "301199",
    "end": "307160"
  },
  {
    "text": "maybe working with some Hardware uh you need specifically to know the memory layout of the stuff that controls that",
    "start": "307160",
    "end": "313400"
  },
  {
    "text": "hardware and you can't just let your language decide the memory layout of your stuff uh you need to Define it",
    "start": "313400",
    "end": "318800"
  },
  {
    "text": "specifically so this is what I think of when I think of systems programming um it's like when you need to care about",
    "start": "318800",
    "end": "324199"
  },
  {
    "text": "the details and that doesn't mean that you have to care about every single detail all of the time but you have to",
    "start": "324199",
    "end": "329400"
  },
  {
    "text": "be able to care about the details that you want to care about um and so this is",
    "start": "329400",
    "end": "334960"
  },
  {
    "text": "sort of where rust has poised itself um is sort of uh amongst the lowest level of the programming stack um so you can",
    "start": "334960",
    "end": "342240"
  },
  {
    "text": "rewrite an operating system in Rust if you want to you can write a memory allocator in Rust if you want to um one",
    "start": "342240",
    "end": "348720"
  },
  {
    "text": "of the biggest names is using uh rust uh in semi- production they're not actually in production yet but they're hoping to",
    "start": "348720",
    "end": "354000"
  },
  {
    "text": "be soon is Dropbox so they're rewriting some of their stuff that controls how their files are stored on the hard",
    "start": "354000",
    "end": "360000"
  },
  {
    "text": "drives in Rust um and so that's a you know kind of the sort of broad spectrum",
    "start": "360000",
    "end": "366400"
  },
  {
    "text": "of what I'm talking about here um and now so the thing about talking about all",
    "start": "366400",
    "end": "372039"
  },
  {
    "text": "that super lowle stuff is when I start talking about things like where your files are stored on the file system or I need to care about the memory layout of",
    "start": "372039",
    "end": "378240"
  },
  {
    "text": "my stuff um the reaction of a lot of people in the web space where I've sort of been um in the last couple years",
    "start": "378240",
    "end": "383880"
  },
  {
    "text": "professionally speaking is they're like I don't want to have to care about all that stuff and that is a t super 100%",
    "start": "383880",
    "end": "390400"
  },
  {
    "text": "valid uh thing to do I I myself cannot care about everything all of the time um",
    "start": "390400",
    "end": "395720"
  },
  {
    "text": "it's just not possible right um because everything is a trade-off so one of the",
    "start": "395720",
    "end": "401680"
  },
  {
    "start": "399000",
    "end": "605000"
  },
  {
    "text": "other things um about systems programming is I think that a lot of people who are in the web space when",
    "start": "401680",
    "end": "407520"
  },
  {
    "text": "they when I when they see things like control the way your memory is allocated or laid out in memory they go oh my God",
    "start": "407520",
    "end": "413560"
  },
  {
    "text": "that is super hard I'm not very good at programming I don't know how to do this and so one of the major messages that I",
    "start": "413560",
    "end": "419319"
  },
  {
    "text": "want to tell you is that it is not actually that hard and you are in fact that smart and I believe in you and you",
    "start": "419319",
    "end": "425680"
  },
  {
    "text": "totally can do this stuff um I actually know people who think that web programming is harder than writing an",
    "start": "425680",
    "end": "432319"
  },
  {
    "text": "assembly code because to them assembly does exactly what it says in the Box there's only a couple of instructions",
    "start": "432319",
    "end": "438319"
  },
  {
    "text": "it's very simple and straightforward whereas to make a website you like have one programming language generate a",
    "start": "438319",
    "end": "445120"
  },
  {
    "text": "markup language and a scripting language and a template like uh like styling",
    "start": "445120",
    "end": "450919"
  },
  {
    "text": "language and then you bundle them up together and you ship them onto another computer the other side on the other side of the world and you expect that to",
    "start": "450919",
    "end": "457520"
  },
  {
    "text": "all like work um and so like web programming is actually very complicated",
    "start": "457520",
    "end": "462840"
  },
  {
    "text": "and there's a lot of moving parts and if you're a a web developer or if you work in these like higher levels of the stack",
    "start": "462840",
    "end": "469319"
  },
  {
    "text": "um you're actually doing really complicated stuff and it's hard and you should be proud of the work that you're doing um I I'm not really interested in",
    "start": "469319",
    "end": "476720"
  },
  {
    "text": "saying that like certain kinds of programming are like better or worse or harder or easier I think that we as",
    "start": "476720",
    "end": "482520"
  },
  {
    "text": "people are all very different and have different strengths and abilities and so it might actually turn out that you think that writing file systems is",
    "start": "482520",
    "end": "489080"
  },
  {
    "text": "easier than writing Ember um and that's totally like legit and so I think that",
    "start": "489080",
    "end": "495720"
  },
  {
    "text": "uh one of the great strengths um of rust is that we are explicitly interested in",
    "start": "495720",
    "end": "501199"
  },
  {
    "text": "helping you learn this kind of lower level programming language stuff if you are interested in it so um as an example",
    "start": "501199",
    "end": "507599"
  },
  {
    "text": "of this uh this some of the code in this talk is actually based on uh in my official documentation I actually have",
    "start": "507599",
    "end": "513560"
  },
  {
    "text": "an example of writing a library in Rust and then calling it from Ruby Python and JavaScript um there's actually a chapter",
    "start": "513560",
    "end": "519640"
  },
  {
    "text": "in the official documentation just about the stack and the Heap with regards to memory allocation and what that means so",
    "start": "519640",
    "end": "526440"
  },
  {
    "text": "we're very interested in helping you out uh if you have not done this kind of programming before and if you're",
    "start": "526440",
    "end": "531560"
  },
  {
    "text": "interested in it we will be happy to explain this stuff to you um and I also know that this is true because I myself",
    "start": "531560",
    "end": "537880"
  },
  {
    "text": "underwent that relatively recently so I uh learned c as my second programming",
    "start": "537880",
    "end": "543320"
  },
  {
    "text": "language a very long time ago and then basically when I found Ruby I was like cool I don't need to worry about any",
    "start": "543320",
    "end": "548560"
  },
  {
    "text": "that stuff anymore I'm never writing this ever again um and I so I went and did Ruby for a couple years and I forgot",
    "start": "548560",
    "end": "554120"
  },
  {
    "text": "all of that low-level system Z programming stuff and so when I first started working in Rust about two and a",
    "start": "554120",
    "end": "559560"
  },
  {
    "text": "half three years ago was like Christmas 2012 um yeah like three years ago two and a half I'm getting old um when I",
    "start": "559560",
    "end": "567040"
  },
  {
    "text": "started working in that I I went into the IR Channel and I was asking people like how does hello world work and they",
    "start": "567040",
    "end": "572760"
  },
  {
    "text": "all helped and were friendly and were willing to explain it to me and I was like I don't understand this memory allocation stuff uh can you help me out",
    "start": "572760",
    "end": "580200"
  },
  {
    "text": "and they were like absolutely and so we've kept that sort of community Spirit of being helpful and no question is too",
    "start": "580200",
    "end": "586519"
  },
  {
    "text": "like quote unquote easy or simple or stupid uh and so yeah this sort of an",
    "start": "586519",
    "end": "592240"
  },
  {
    "text": "explicit rust Community goal um as well which is really nice all right I have to zoom this slide out a little bit because",
    "start": "592240",
    "end": "597760"
  },
  {
    "text": "it's got more stuff on it yeah all right right there so uh enough talking about",
    "start": "597760",
    "end": "604320"
  },
  {
    "text": "how sweet everyone that uses rust is let's talk about the programming language itself um so rust as a language",
    "start": "604320",
    "end": "610000"
  },
  {
    "start": "605000",
    "end": "751000"
  },
  {
    "text": "is trying to accomplish three goals uh the first one is safety the second one is speed and the third one is",
    "start": "610000",
    "end": "616440"
  },
  {
    "text": "concurrency and so there's a there's many different ways of looking at programming languages and like aligning",
    "start": "616440",
    "end": "622480"
  },
  {
    "text": "them up against each other for way too involved internet arguments about who is like better or worse um but one of the",
    "start": "622480",
    "end": "628920"
  },
  {
    "text": "ways that you can sort of look at programming languages is this trade-off between speed and safety so some",
    "start": "628920",
    "end": "635560"
  },
  {
    "text": "programming languages uh and I actually like think speed and safety is only sort of half of it so it's like speed and",
    "start": "635560",
    "end": "641279"
  },
  {
    "text": "control versus safety and lack of control so on one hand you have programming languages like C and C++ uh",
    "start": "641279",
    "end": "648760"
  },
  {
    "text": "and those programming languages give you a high degree of control over what you're doing and therefore they have no",
    "start": "648760",
    "end": "655040"
  },
  {
    "text": "safety whatsoever right like programming in c is like driving without a seat belt or like riding a motorcycle without a",
    "start": "655040",
    "end": "660720"
  },
  {
    "text": "helmet like you can do it and it works most of the time but it's very dangerous um and languages like Ruby uh and",
    "start": "660720",
    "end": "668839"
  },
  {
    "text": "JavaScript to some degree and python um are sort of on the other end of the spectrum and they don't give you very",
    "start": "668839",
    "end": "674839"
  },
  {
    "text": "much control over how your code executes um they do to a certain degree but not nearly to the degree that something like",
    "start": "674839",
    "end": "680600"
  },
  {
    "text": "C or C++ does but the advantage that you get is that they have a significant amount of safety so for example if you",
    "start": "680600",
    "end": "687040"
  },
  {
    "text": "write some Ruby code that compile because well Ruby does technically compile whatever I don't get into those",
    "start": "687040",
    "end": "692519"
  },
  {
    "text": "definitions if you write some Ruby code and run it through the Ruby interpreter uh it will not segmentation faults your",
    "start": "692519",
    "end": "698760"
  },
  {
    "text": "app will not crash outright and that's sort of a guarantee that's provided by the language um whereas you know if you",
    "start": "698760",
    "end": "704360"
  },
  {
    "text": "write some bad C code it will just crash on you with a terrible error message and not give you any help in figuring out what went wrong right so historically",
    "start": "704360",
    "end": "711200"
  },
  {
    "text": "speaking this has been this trade-off and different languages are kind of in different places um I decided to randomly put Java here because it like",
    "start": "711200",
    "end": "717639"
  },
  {
    "text": "gives you a large amount of safety but but also does give you some degree of control but really you can like you know argue forever about where languages are",
    "start": "717639",
    "end": "724160"
  },
  {
    "text": "placed on this spectrum but um we and rust sort of want to give you the speed",
    "start": "724160",
    "end": "730720"
  },
  {
    "text": "of c and C++ with the safety of Ruby and Python and uh as I said earlier",
    "start": "730720",
    "end": "737600"
  },
  {
    "text": "engineering is all about trade-offs and so if someone tells you that this trade-off doesn't exist you can have",
    "start": "737600",
    "end": "743040"
  },
  {
    "text": "your cake and eat it too they're probably lying to you which means I just lied to you so where Where is the",
    "start": "743040",
    "end": "748800"
  },
  {
    "text": "tradeoff in this uh in the rust world and basically uh in Rust the way that we",
    "start": "748800",
    "end": "755760"
  },
  {
    "start": "751000",
    "end": "924000"
  },
  {
    "text": "provide this safety is through extensive compile time checking so um there's this",
    "start": "755760",
    "end": "761079"
  },
  {
    "text": "phrase that people use uh to describe their early days of programming and rust and they call that fighting with the",
    "start": "761079",
    "end": "766800"
  },
  {
    "text": "borrow Checker and the borrow Checker is the name for the like most unusual and unique aspect of rust's uh compile time",
    "start": "766800",
    "end": "773480"
  },
  {
    "text": "safety checks and so at first when you start programming in Rust you will make mistakes and unlike C C++ where it will",
    "start": "773480",
    "end": "781639"
  },
  {
    "text": "compile and then just crash on you uh the rust compiler will not actually compile your code and it will say hey",
    "start": "781639",
    "end": "788279"
  },
  {
    "text": "there's this problem here you need to address it uh sorry you don't actually get your program and so um I don't like",
    "start": "788279",
    "end": "794639"
  },
  {
    "text": "to think of this as fighting I like to think of it as having a friendly conversation uh like the compiler is",
    "start": "794639",
    "end": "800839"
  },
  {
    "text": "there to help you it's not trying to like positioning it as fighting means that like the compiler is out to get you",
    "start": "800839",
    "end": "806519"
  },
  {
    "text": "and it's like it's mean I don't really like that I like to think about compiling languages that have really",
    "start": "806519",
    "end": "811680"
  },
  {
    "text": "strong type systems like Russ does um as being your friend who is convincing you",
    "start": "811680",
    "end": "817120"
  },
  {
    "text": "that what you're doing is a stupid idea and stopping you from actually doing it before you hurt yourself like so I like",
    "start": "817120",
    "end": "822880"
  },
  {
    "text": "to think about this as more of like having a dialogue with the compiler where it like informs you of your mistakes because the good and bad thing",
    "start": "822880",
    "end": "830040"
  },
  {
    "text": "about machines is they're not like humans so they never sleep and they always do the exact same thing all the",
    "start": "830040",
    "end": "836560"
  },
  {
    "text": "time right so they in a certain sense I mean bugs are mistakes but like assuming that your code is reasonably bug free uh",
    "start": "836560",
    "end": "843399"
  },
  {
    "text": "you know they don't make mistakes they never forget they're always Vigilant against your programming errors uh and",
    "start": "843399",
    "end": "849000"
  },
  {
    "text": "you as a human uh you know will make tons of mistakes I know this is true now one of the funny side effects is that",
    "start": "849000",
    "end": "854480"
  },
  {
    "text": "when I go back into languages like Ruby um and to some degree JavaScript I'm so used to just like typing crap into the",
    "start": "854480",
    "end": "861440"
  },
  {
    "text": "computer and letting the compiler tell me what my problems are that I feel very very like nervous uh without that kind",
    "start": "861440",
    "end": "867839"
  },
  {
    "text": "of help now that I'm sort of used to doing this heavy static typing um so it's interesting when you switch between programming languages um when I Was",
    "start": "867839",
    "end": "874880"
  },
  {
    "text": "preparing an alternate version of this presentation uh and some well when I Was preparing this presentation um actually",
    "start": "874880",
    "end": "881440"
  },
  {
    "text": "I was switching between rust and c and C++ and JavaScript and like when you try",
    "start": "881440",
    "end": "887199"
  },
  {
    "text": "to switch between that many languages that quickly I started like mixing the syntaxes up and I was like defining a",
    "start": "887199",
    "end": "892399"
  },
  {
    "text": "function according to the rust syntax but then writing the function in like JavaScript syntax and like you know it gets it gets complicated but it's fun",
    "start": "892399",
    "end": "899160"
  },
  {
    "text": "that's why we're here um yeah so that's sort of how Russ provides this speed and safety and like breaks the dichotomy is",
    "start": "899160",
    "end": "905720"
  },
  {
    "text": "we have really strong checks at compile time and that means that your code can be very efficient at runtime because you",
    "start": "905720",
    "end": "911800"
  },
  {
    "text": "don't pay any runtime overhead for these safety features um they just compile down to the same code that your C and",
    "start": "911800",
    "end": "917920"
  },
  {
    "text": "C++ code would compile to we've just checked um beforehand that you're not doing anything terribly dangerous um so",
    "start": "917920",
    "end": "926880"
  },
  {
    "start": "924000",
    "end": "1258000"
  },
  {
    "text": "uh let's look at a little bit of r code um one cool thing that you can do uh",
    "start": "926880",
    "end": "933959"
  },
  {
    "text": "let's see if the internet is still working",
    "start": "933959",
    "end": "938279"
  },
  {
    "text": "uh yeah typing so play. wrestling.org is actually um an online uh version of the",
    "start": "940160",
    "end": "947519"
  },
  {
    "text": "rest compiler and it says that is loading yeah there we",
    "start": "947519",
    "end": "953040"
  },
  {
    "text": "go it took me a minute to even connect to the internet earlier so",
    "start": "953199",
    "end": "959560"
  },
  {
    "text": "all right oh there it goes awesome cool so um I'm going to like tilt a little",
    "start": "962839",
    "end": "968680"
  },
  {
    "text": "bit like this so I can do this but um let's see does this actually work too yeah there we go cool so rust as a",
    "start": "968680",
    "end": "977519"
  },
  {
    "text": "strongly statically typed language has a little bit of sort of ceremony and syntax uh to JavaScript programmers if",
    "start": "977519",
    "end": "983079"
  },
  {
    "text": "should feel a little bit familiar because it also uses lots of curly braces and semicolons although I know all JavaScript people don't use semic I",
    "start": "983079",
    "end": "989240"
  },
  {
    "text": "don't want to get into that whole argument um talking about that I use semicolons in my javascripts but yeah",
    "start": "989240",
    "end": "995720"
  },
  {
    "text": "whatever um so uh this is I think I'm like legally obligated as a uh person to",
    "start": "995720",
    "end": "1002120"
  },
  {
    "text": "show you hello world uh or you know bad things will happen to me so uh here is",
    "start": "1002120",
    "end": "1008199"
  },
  {
    "text": "here's hello world in Rust and the cool thing is then so you can actually like without installing the rust compiler uh",
    "start": "1008199",
    "end": "1014279"
  },
  {
    "text": "you can type rust into here and actually try it out and so this will print um hello work",
    "start": "1014279",
    "end": "1019399"
  },
  {
    "text": "so we sort of have this kind of thing um one sort of interesting aspect is that",
    "start": "1019399",
    "end": "1024400"
  },
  {
    "text": "even though we have really strong typing uh we also have really strong type",
    "start": "1024400",
    "end": "1031438"
  },
  {
    "text": "inference so for example uh these double mustaches or",
    "start": "1031439",
    "end": "1037160"
  },
  {
    "text": "lobster claws or whatever you want to call them uh they're they're sort of like where the uh value gets placed this",
    "start": "1037160",
    "end": "1043520"
  },
  {
    "text": "is like a pythonism we decided not to use the C style print F scan F Shenanigans and do the like you know",
    "start": "1043520",
    "end": "1049520"
  },
  {
    "text": "clamps um and so this is a strongly typed program but I didn't actually write down the type of I so rust will",
    "start": "1049520",
    "end": "1056640"
  },
  {
    "text": "automatically infer if you don't have a good reason to that your integers are a 32-bit integer value so you don't have",
    "start": "1056640",
    "end": "1063799"
  },
  {
    "text": "this sort of heavy burden of like writing out your types everywhere all the time there's none of that like type",
    "start": "1063799",
    "end": "1069320"
  },
  {
    "text": "name variable equals type name over again other stuff that you might have in some statically typed languages um we do",
    "start": "1069320",
    "end": "1077039"
  },
  {
    "text": "make you write types uh in function definitions though make this a little bit",
    "start": "1077039",
    "end": "1082799"
  },
  {
    "text": "smaller all right so",
    "start": "1082799",
    "end": "1087200"
  },
  {
    "text": "uh so for example uh this will actually fail to compile",
    "start": "1096919",
    "end": "1103559"
  },
  {
    "text": "I'm going to tell you that before it runs it's not a Live code mistake it just doesn't actually work um so here I",
    "start": "1103559",
    "end": "1109280"
  },
  {
    "text": "had to say uh fu is a function that takes one argument X that argument X has the type F32 which is a 32-bit floating",
    "start": "1109280",
    "end": "1116640"
  },
  {
    "text": "Point uh number and we print it out uh you know with the Hello World um and when I try to pass I in here I get this",
    "start": "1116640",
    "end": "1124120"
  },
  {
    "text": "compiler error mismatch types expected F32 found I don't know this underscore",
    "start": "1124120",
    "end": "1129440"
  },
  {
    "text": "is like a little placeholder so in this particular instance that's because I'm passing an integer to a a thing that has",
    "start": "1129440",
    "end": "1135120"
  },
  {
    "text": "a floating point value so Russ is complaining that um I don't have these things one cool thing that we've done is",
    "start": "1135120",
    "end": "1141360"
  },
  {
    "text": "we actually have these error codes um and this this to me feels like when we first implemented this feature I",
    "start": "1141360",
    "end": "1146679"
  },
  {
    "text": "remember back in my days of like learning Visual Basic as a kid and I had this huge thick manual that just had",
    "start": "1146679",
    "end": "1151840"
  },
  {
    "text": "like descriptions of error codes and so in some ways that was really awesome because now you have this",
    "start": "1151840",
    "end": "1158320"
  },
  {
    "text": "E38 let's see oh yeah it's actually working and so we actually have like extended compiler error messages that if",
    "start": "1158320",
    "end": "1164360"
  },
  {
    "text": "you want an expanded version we don't want to print this to your terminal but this actually like explains",
    "start": "1164360",
    "end": "1170000"
  },
  {
    "text": "uh this error occurs when the compiler was unable to infer the type of variable it can happen in several cases for",
    "start": "1170000",
    "end": "1175440"
  },
  {
    "text": "example X is an i32 is not a number so we like put a lot of work into this compiler diagnostic stuff um so that you",
    "start": "1175440",
    "end": "1182720"
  },
  {
    "text": "can like get an extreme amount of help this web page has all of them on it and it is very long uh and we're adding more",
    "start": "1182720",
    "end": "1190080"
  },
  {
    "text": "stuff all the time so um that's also another cool thing that I really enjoy we put a lot of work into trying to make",
    "start": "1190080",
    "end": "1195159"
  },
  {
    "text": "these error messages um understandable so in that instance um I can change uh",
    "start": "1195159",
    "end": "1200360"
  },
  {
    "text": "this to be 5.0 floating Point number and now rust will compile and print that out",
    "start": "1200360",
    "end": "1205400"
  },
  {
    "text": "so this is kind of what I mean in the sense that you know this seems like sort of a trivial thing for a person but",
    "start": "1205400",
    "end": "1210480"
  },
  {
    "text": "converting between number types that are wrong is a very good way to introduce subtle errors in your application so",
    "start": "1210480",
    "end": "1216600"
  },
  {
    "text": "rust will sort of complain about it and you know make you do the right thing um and this does lead to a little teeny bit",
    "start": "1216600",
    "end": "1222919"
  },
  {
    "text": "of like a difficulty of barrier to entry like I said Russ sort of make sure that you dot all your eyes and cross all your te's before your code works so um at",
    "start": "1222919",
    "end": "1230400"
  },
  {
    "text": "first you have to learn all of those things um which can take a little bit of effort but um after a relatively short",
    "start": "1230400",
    "end": "1235880"
  },
  {
    "text": "period of time um you sort of internalize the rules and a lot of people I've like helped on IRC and I've",
    "start": "1235880",
    "end": "1240960"
  },
  {
    "text": "watched them sort of feel like I'm having lots of problems and like the second week they're like I'm having less problems and the third week they're like",
    "start": "1240960",
    "end": "1247120"
  },
  {
    "text": "this finally clicked and now I have no problems whatsoever um so that's also an interesting aspect of this sort of",
    "start": "1247120",
    "end": "1252640"
  },
  {
    "text": "approach to uh correctness is there's a little bit of upfront uh pain but then it works out really well um um okay so",
    "start": "1252640",
    "end": "1259640"
  },
  {
    "start": "1258000",
    "end": "1282000"
  },
  {
    "text": "that's a little bit of an intro to some Rust code so it's not totally alien um",
    "start": "1259640",
    "end": "1264679"
  },
  {
    "text": "and so now I want to talk about uh rust and node and I did not actually Swip this out I put Ruby and node instead of",
    "start": "1264679",
    "end": "1269880"
  },
  {
    "text": "rust and node because like I said switching between languages all the time is super hard um so node is a really",
    "start": "1269880",
    "end": "1276720"
  },
  {
    "text": "cool technology um I will admit that I have occasionally hated a little bit on node on the past um but I I think that",
    "start": "1276720",
    "end": "1283440"
  },
  {
    "text": "node is actually really great for a number of different reasons um and so I",
    "start": "1283440",
    "end": "1288720"
  },
  {
    "text": "don't want to tell you like rust is really cool so stop writing in your favorite programming language drop everything and rewrite stuff in Rust I",
    "start": "1288720",
    "end": "1295480"
  },
  {
    "text": "don't actually think that that's like a good approach or a thing that you should do um I think that you know you can like",
    "start": "1295480",
    "end": "1301360"
  },
  {
    "text": "multiple programming languages I don't know if you've told people that like to argue on the internet all the time but you're like allowed to enjoy multiple",
    "start": "1301360",
    "end": "1307039"
  },
  {
    "text": "things at once you don't have to tie your entire identity into a single programming language um but uh instead",
    "start": "1307039",
    "end": "1313440"
  },
  {
    "text": "of like making this about like rust is cool and node is drools or like whatever",
    "start": "1313440",
    "end": "1319360"
  },
  {
    "text": "uh it's about how both Technologies are cool for different things and so you should use them together um because",
    "start": "1319360",
    "end": "1324840"
  },
  {
    "text": "playing together is way better than fighting um so one really cool aspect of rust um is",
    "start": "1324840",
    "end": "1333000"
  },
  {
    "text": "that rust can make libraries that pretend like they're C libraries and since C is sort of the Latin of",
    "start": "1333000",
    "end": "1339120"
  },
  {
    "text": "programming languages uh every programming language knows how to interface with code because you know we",
    "start": "1339120",
    "end": "1345360"
  },
  {
    "text": "buried ourselves under mountains and mountains of C code over the last like 40 or 50 years or whatever um and so",
    "start": "1345360",
    "end": "1350880"
  },
  {
    "text": "rust can sort of like masquerade a c and what's neat about that is that means that you can put rust inside of almost",
    "start": "1350880",
    "end": "1357720"
  },
  {
    "text": "any other programming language because those programming languages know how to talk to C um and so in this case I'm",
    "start": "1357720",
    "end": "1363480"
  },
  {
    "start": "1362000",
    "end": "1500000"
  },
  {
    "text": "going to show you how to do this um with node you can also do this with as I said before Ruby JavaScript python pretty",
    "start": "1363480",
    "end": "1369039"
  },
  {
    "text": "much whatever hcll um it doesn't matter um and so you don't actually have to",
    "start": "1369039",
    "end": "1374480"
  },
  {
    "text": "give up a language you already like when you need this sort of lower level control can rewrite portions of this um",
    "start": "1374480",
    "end": "1380559"
  },
  {
    "text": "in in a different language so um one example of this I'll use Yehuda again so um he his company till day makes this",
    "start": "1380559",
    "end": "1387159"
  },
  {
    "text": "product called Skylight it's a rails performance monitoring application um because I don't work for Skylight I can",
    "start": "1387159",
    "end": "1393200"
  },
  {
    "text": "tell you that my version of their pitch this is not their official marketing of course my version of their pitch is it's like New Relic but only for rails and",
    "start": "1393200",
    "end": "1399720"
  },
  {
    "text": "therefore way better because they focus on just rails um so they sort of like you install their Ruby Jam in your",
    "start": "1399720",
    "end": "1405480"
  },
  {
    "text": "application and uh then it monitors you know how uh slow or fast it is and why",
    "start": "1405480",
    "end": "1411240"
  },
  {
    "text": "and gives you feedback on what it is so um this ruby gem that you install was originally written in Ruby but since",
    "start": "1411240",
    "end": "1416919"
  },
  {
    "text": "they're monitoring performance um Ruby's garbage collector would sometimes pause in the middle of taking a measurement of",
    "start": "1416919",
    "end": "1422799"
  },
  {
    "text": "that performance and You' see weird spikes and it's like is that the app actually being slow or is that the the Ruby garbage collector decided to pause",
    "start": "1422799",
    "end": "1429120"
  },
  {
    "text": "in the middle of taking a measurement like I don't know so you can like work around the garbage collector and do all this other crap um but basically it",
    "start": "1429120",
    "end": "1434960"
  },
  {
    "text": "didn't it didn't work out very well so um they decided instead to rewrite this ruby gem in Rust and so uh that gives",
    "start": "1434960",
    "end": "1442840"
  },
  {
    "text": "you all of this lowle control as I've been mentioning and so um that enable them to write this collector in a way",
    "start": "1442840",
    "end": "1448440"
  },
  {
    "text": "that uh was much much better um but what's cool is it's still a ruby Jem so when you like gem install Skylight",
    "start": "1448440",
    "end": "1454600"
  },
  {
    "text": "you're secretly getting rust code pretending to be Ruby code um and so you can do this with your own application if",
    "start": "1454600",
    "end": "1460039"
  },
  {
    "text": "you find there's a part of it that is too slow or taking too long um you know you can like get the MVP back in Silicon",
    "start": "1460039",
    "end": "1467120"
  },
  {
    "text": "Valley so I have to switch in into your your language I live in New York these days um so you got to do your MVP uh to",
    "start": "1467120",
    "end": "1473799"
  },
  {
    "text": "find product Market fit so you do that in a slow language first and then you swap it out with uh you know a faster",
    "start": "1473799",
    "end": "1480039"
  },
  {
    "text": "one later I think I got that right uh I hopefully I won't lose too much Hacker News Karma um so uh so this is sort of",
    "start": "1480039",
    "end": "1487960"
  },
  {
    "text": "the thing that I'm saying is like you know build your app in a different thing and then replace chunks of it in Rust where it's appropriate um and so here uh",
    "start": "1487960",
    "end": "1495559"
  },
  {
    "text": "that's actually the end slide I want to show you I've actually done this I have a little sample application that is totally trivial uh but shows off how to",
    "start": "1495559",
    "end": "1503159"
  },
  {
    "start": "1500000",
    "end": "2003000"
  },
  {
    "text": "do this so um the these slides um are also in this repository but also all the",
    "start": "1503159",
    "end": "1510080"
  },
  {
    "text": "source code so if you go to my GitHub um Steve CL forward 2015 um the uh the",
    "start": "1510080",
    "end": "1516559"
  },
  {
    "text": "slides I was just showing you are actually generated by the rust documentation tool itself so we actually wrote a little bit of JavaScript that",
    "start": "1516559",
    "end": "1522559"
  },
  {
    "text": "you can include so it makes slideshows which is really neat because like I can if I had a bunch of rust code in the",
    "start": "1522559",
    "end": "1527679"
  },
  {
    "text": "slides I could could actually like have the rust compiler type check my slides which is neat um so all that crap is in",
    "start": "1527679",
    "end": "1533080"
  },
  {
    "text": "there but the real big thing are these three directories node um RSG x uh risx",
    "start": "1533080",
    "end": "1539159"
  },
  {
    "text": "I named it terribly because I knew I was going to be speaking it on stage and so I made it as hard to pronounce as possible um and then this rust directory",
    "start": "1539159",
    "end": "1546480"
  },
  {
    "text": "so the way that this sort of works is um inside the node directory let's see is this the first one yeah so inside the",
    "start": "1546480",
    "end": "1552679"
  },
  {
    "text": "node directory I have this little uh application that doesn't do anything of worth but it will show you uh the basic",
    "start": "1552679",
    "end": "1559159"
  },
  {
    "text": "idea so um in it I require this regular expression Library um for node you can",
    "start": "1559159",
    "end": "1564960"
  },
  {
    "text": "use the uh JavaScript native regular Expressions but I wanted to use another like extension um I actually will show",
    "start": "1564960",
    "end": "1571480"
  },
  {
    "text": "you a pull request in a minute that compares all three of them but then chai is just basically this assert Library um",
    "start": "1571480",
    "end": "1577000"
  },
  {
    "text": "and so the documentation for the regx package has this example of just um this",
    "start": "1577000",
    "end": "1582200"
  },
  {
    "text": "regular expression that is uh A or B um Aster ABB um I did Pearl before I did",
    "start": "1582200",
    "end": "1589760"
  },
  {
    "text": "Ruby so I like love regular Expressions but I know a lot of people really hate them um so this is just the example that",
    "start": "1589760",
    "end": "1595200"
  },
  {
    "text": "I went with um because I love them so sorry if you're not into regular Expressions um but this just checks a",
    "start": "1595200",
    "end": "1600679"
  },
  {
    "text": "bunch of very simple small strings uh and sees you know if it's true or false I I realized that assert equal to True",
    "start": "1600679",
    "end": "1607080"
  },
  {
    "text": "is like kind of bad form but I like the matching with like assert false and I don't know whatever let's do it this way",
    "start": "1607080",
    "end": "1613120"
  },
  {
    "text": "um and so then I print done and then I have this other thing that requires um in rust we use RS as our uh file",
    "start": "1613120",
    "end": "1621320"
  },
  {
    "text": "extension um which is also fun because it's the national TLD of Serbia so I'm",
    "start": "1621320",
    "end": "1628000"
  },
  {
    "text": "like I have like Brooklyn RS for this rust Meetup that I theoretically run in New York that I've done twice in last",
    "start": "1628000",
    "end": "1633520"
  },
  {
    "text": "year uh and so I have brooklyn. RS and I had to like give my credit card to this like Serbian DNS registar so uh that's",
    "start": "1633520",
    "end": "1641600"
  },
  {
    "text": "fun so I decided regex starts with an r as well so I would name the library RS",
    "start": "1641600",
    "end": "1646840"
  },
  {
    "text": "gex after the r extension um like I said you know I'm now have to say it on stage",
    "start": "1646840",
    "end": "1652080"
  },
  {
    "text": "so that's what happens sometimes you name things in a way you can't pronounce when you know you're going to have to pronounce them um so anyway the same",
    "start": "1652080",
    "end": "1658880"
  },
  {
    "text": "thing uh rust's regular expression library has slightly different syntax you can see there's like forward slashes",
    "start": "1658880",
    "end": "1664159"
  },
  {
    "text": "because you can actually do a regular expression literal in JavaScript we don't have regular expression literals in Rust so um we have the the carrot and",
    "start": "1664159",
    "end": "1672200"
  },
  {
    "text": "the dollar sign for the end anchors which is um more of like a pearl regular expression thing we run the exact same",
    "start": "1672200",
    "end": "1678519"
  },
  {
    "text": "tests and then print done so I actually have a uh I have the the code here uh",
    "start": "1678519",
    "end": "1684799"
  },
  {
    "text": "see4 word can't site all right this needs to be",
    "start": "1684799",
    "end": "1692240"
  },
  {
    "text": "bigger yeah uh let's get rid of that real",
    "start": "1692240",
    "end": "1699000"
  },
  {
    "text": "quick okay much better um so I have a make file uh that then actually compiles",
    "start": "1699919",
    "end": "1705960"
  },
  {
    "text": "all the stuff so first it compiles my slides uh and then it goes into the r directory and it builds the r library",
    "start": "1705960",
    "end": "1712760"
  },
  {
    "text": "and then it goes into the node directory and runs that script I just showed you you can see done done so we successfully",
    "start": "1712760",
    "end": "1719039"
  },
  {
    "text": "um executed both sets of regular expressions and all of those unit test passed everything uh everything worked",
    "start": "1719039",
    "end": "1724640"
  },
  {
    "text": "out just peachy so um that's my sort of live example of this running um you can run it yourself but I want to actually",
    "start": "1724640",
    "end": "1730360"
  },
  {
    "text": "show you now the code so in your application you can see how requiring I I use this local thing because um npms",
    "start": "1730360",
    "end": "1738440"
  },
  {
    "text": "npms file requirement thing was causing me problems so I just decided to use a relative path um you know you would",
    "start": "1738440",
    "end": "1744600"
  },
  {
    "text": "probably publish this as a package so you would you would not use the relative path you just say require RS GX but the point is that this from the user of your",
    "start": "1744600",
    "end": "1751320"
  },
  {
    "text": "library this looks exactly like JavaScript and it works just like JavaScript um but inside it's all",
    "start": "1751320",
    "end": "1756480"
  },
  {
    "text": "actually rust code so um let's take a look at that uh this is the RSG index.js",
    "start": "1756480",
    "end": "1762480"
  },
  {
    "text": "Library um and so basically um here I'm using the node ffi I um module and the",
    "start": "1762480",
    "end": "1770600"
  },
  {
    "text": "ref module to make this ffi wrapper um I have a fun story about that I'll share at the end um but basically what happens",
    "start": "1770600",
    "end": "1777559"
  },
  {
    "text": "is is I Define okay I need an RS GX type and I need a pointer to RS GX and then",
    "start": "1777559",
    "end": "1783039"
  },
  {
    "text": "um this this line seven loads up the library so uh inside the rust directory",
    "start": "1783039",
    "end": "1789080"
  },
  {
    "text": "I eventually make a.so which is a shared object um or if you're on a Mac it's a dib since I'm on Linux I just hardcoded",
    "start": "1789080",
    "end": "1795640"
  },
  {
    "text": "it because it's a presentation it's not like for General consumption but um the point is is that that shared",
    "start": "1795640",
    "end": "1801240"
  },
  {
    "text": "object is just like a c shared object so the example for ffi does this with a C library but you can do this with just",
    "start": "1801240",
    "end": "1807200"
  },
  {
    "text": "rust um and so there's two functions um new and match uh and these are sort of",
    "start": "1807200",
    "end": "1812640"
  },
  {
    "text": "the return types that you would expect so you sort of make those out of JavaScript types and then these two other types that is fine and then um in",
    "start": "1812640",
    "end": "1819480"
  },
  {
    "text": "the exports for this module I say that um I'm going to export two functions one is new which is just calling into the",
    "start": "1819480",
    "end": "1825480"
  },
  {
    "text": "libraries RS new and match which calls into liary is RS match and then we're good um fun multilanguage interop story",
    "start": "1825480",
    "end": "1833720"
  },
  {
    "text": "um I had to call this RS match because match is a keyword in Rust and so I couldn't actually name the function",
    "start": "1833720",
    "end": "1839039"
  },
  {
    "text": "match and so I was just like H whatever I'll just prefix it with RS um for rust but I originally just wanted to call it new and match um and so I do that sort",
    "start": "1839039",
    "end": "1845760"
  },
  {
    "text": "of mapping when I do the exports so this is all you need if you have the like Library written up you write this little tiny bit of javascripts um and then it",
    "start": "1845760",
    "end": "1852679"
  },
  {
    "text": "knows how to load all this stuff from what it thinks is a C library but it's actually um a rust Library and then here",
    "start": "1852679",
    "end": "1859080"
  },
  {
    "text": "this is some Rust code which uh frankly so the F ofi stuff is like the it's it's",
    "start": "1859080",
    "end": "1864880"
  },
  {
    "text": "as intense as rust gets I'll say because you have to shuffle from like the C types to the rust types so um so this is",
    "start": "1864880",
    "end": "1872880"
  },
  {
    "text": "sort of what this looks like so we make an actual um structure and then here's the implementation of RS new which",
    "start": "1872880",
    "end": "1879080"
  },
  {
    "text": "basically these first three lines are just converting a C string into a rust string so rust strings are utf8 enabled",
    "start": "1879080",
    "end": "1886919"
  },
  {
    "text": "by default C C strings are like whatever crap you put in there uh so there's a",
    "start": "1886919",
    "end": "1892159"
  },
  {
    "text": "bunch of like these lines to basically turn the C string stuff into the rust string stuff I literally like copied and",
    "start": "1892159",
    "end": "1898000"
  },
  {
    "text": "pasted this from some documentation that I wrote so you know it's relatively boilerplate and I'm working on some libraries to write the boiler plate for",
    "start": "1898000",
    "end": "1904240"
  },
  {
    "text": "you so you don't even need to think about that um but we basically like load up a regular expression and then um",
    "start": "1904240",
    "end": "1910639"
  },
  {
    "text": "because this is a demo I'm just like leaking memory everywhere so I have like an allocate but not a delete function so",
    "start": "1910639",
    "end": "1916039"
  },
  {
    "text": "every time you make a new regular expression I just alloc more and more memory so you know demos slides woohoo",
    "start": "1916039",
    "end": "1922200"
  },
  {
    "text": "um but you might Implement more and then this match function does literally the same lines of code which I probably should have extracted to a function but",
    "start": "1922200",
    "end": "1928360"
  },
  {
    "text": "you know we're all nobody's perfect um and I just call out to the rust regular expression Library um is match um last",
    "start": "1928360",
    "end": "1936000"
  },
  {
    "text": "thing I want to show you really briefly uh and I don't expect you to understand this code instantly I guess the point is I'm just telling you it's like",
    "start": "1936000",
    "end": "1941159"
  },
  {
    "text": "relatively easy or it's like a small number of lines of code to do this kind of thing um rust actually supports unit",
    "start": "1941159",
    "end": "1946919"
  },
  {
    "text": "testing uh in the language itself so I made this little subm module with a test and then checked out that if you I had a",
    "start": "1946919",
    "end": "1954559"
  },
  {
    "text": "particular reg expression and some text it would match against it so I was actually like checking the validity um",
    "start": "1954559",
    "end": "1959679"
  },
  {
    "text": "in the r code itself so anyway nobody understands piles of code on slides so I'm not going to explain more than that",
    "start": "1959679",
    "end": "1965159"
  },
  {
    "text": "you can check out the details Andor you know I'd be happy to explain it to you um when I'm not on a stage uh about",
    "start": "1965159",
    "end": "1971880"
  },
  {
    "text": "specifically how that all works um so yeah this is just like delegating so we now have uh B basically this is now node",
    "start": "1971880",
    "end": "1980679"
  },
  {
    "text": "calling out to the ffi library calling out to what it thinks is a C library which is actually a rust Library which",
    "start": "1980679",
    "end": "1986279"
  },
  {
    "text": "is calling into the rust regular expression library and then performing the match and then like moving that the",
    "start": "1986279",
    "end": "1991960"
  },
  {
    "text": "whole way back up the chain so what's fun about this is I was like yeah you know because like rust has really fast",
    "start": "1991960",
    "end": "1997840"
  },
  {
    "text": "regular expressions and so um my partner Ashley is used to calling me on my crap",
    "start": "1997840",
    "end": "2004200"
  },
  {
    "text": "as partners often do oh no the internet's down so on okay so I can't",
    "start": "2004200",
    "end": "2010679"
  },
  {
    "text": "actually show you this on this repository if you click on this pull requests button there's a pull request",
    "start": "2010679",
    "end": "2016960"
  },
  {
    "text": "with a benchmark that actually demonstrates the rust ends up being way slower than just using a freaking",
    "start": "2016960",
    "end": "2023000"
  },
  {
    "text": "JavaScript regular expression in the first place and so this is my message to you about performance is you need to",
    "start": "2023000",
    "end": "2029080"
  },
  {
    "text": "actually if you're doing this kind of stuff you need to actually be doing a significant amount of work in the rust side because basically all of that",
    "start": "2029080",
    "end": "2035639"
  },
  {
    "text": "translation from JavaScript to C to rust takes up so much time that you lose all",
    "start": "2035639",
    "end": "2040760"
  },
  {
    "text": "the speed benefits of just matching like a five character string against a three character string in the first place",
    "start": "2040760",
    "end": "2045880"
  },
  {
    "text": "right like JavaScript is plenty fast at doing that so I don't want to tell you that you can just like instantly reread",
    "start": "2045880",
    "end": "2051118"
  },
  {
    "text": "all your code and rust and it's automatically faster like any sort of claims about speed you have to actually Benchmark things and test them to make",
    "start": "2051119",
    "end": "2057280"
  },
  {
    "text": "sure that they're actually faster you can't just think about it um because compilers are magic and they do all",
    "start": "2057280",
    "end": "2062520"
  },
  {
    "text": "sorts of stuff you don't think about so JavaScript is actually plenty fast in most cases um so if I was doing a",
    "start": "2062520",
    "end": "2068720"
  },
  {
    "text": "substantial amount of work here uh I think I would Fair much better but uh you know yeah that's just what I want to tell you is like the point is it's not",
    "start": "2068720",
    "end": "2075118"
  },
  {
    "text": "always inherently faster um and also um as I mentioned before um I'm actually",
    "start": "2075119",
    "end": "2080200"
  },
  {
    "text": "running out of time so I'll just say this really briefly I'm actually working on some um libraries specifically for",
    "start": "2080200",
    "end": "2085919"
  },
  {
    "text": "node um and also then for Ruby and python that will actually eliminate the need for the ffi library in that chain",
    "start": "2085919",
    "end": "2091960"
  },
  {
    "text": "of things so um I can actually uh take the V8 internal object object that node",
    "start": "2091960",
    "end": "2098680"
  },
  {
    "text": "is using and then just access it directly in the rust and so I expect that library to uh make this kind of",
    "start": "2098680",
    "end": "2104320"
  },
  {
    "text": "process even faster than it is right now because the ffi library is very convenient but it also has a lot of overhead um so uh look out for that in",
    "start": "2104320",
    "end": "2112079"
  },
  {
    "text": "the future but um I guess what I'm saying is making languages play with each other is super fun um I plan on",
    "start": "2112079",
    "end": "2117920"
  },
  {
    "text": "doing it to help you be able to do it in the future um",
    "start": "2117920",
    "end": "2123320"
  },
  {
    "text": "and thank you very much for having me",
    "start": "2124079",
    "end": "2129000"
  }
]