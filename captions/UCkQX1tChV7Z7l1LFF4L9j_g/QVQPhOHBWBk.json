[
  {
    "text": "[Music]",
    "start": "3310",
    "end": "8860"
  },
  {
    "text": "first of all thank you everyone for being here and you know in person and all that I'm still getting used to",
    "start": "10160",
    "end": "16960"
  },
  {
    "text": "in-person conferences it's been an extremely long time since I did my last one H as an example I got my hair done",
    "start": "16960",
    "end": "25000"
  },
  {
    "text": "to look extra good here on stage and then last night it was pouring r",
    "start": "25000",
    "end": "30480"
  },
  {
    "text": "and the whole thing looks the way it do today um I had no idea it rains in",
    "start": "30480",
    "end": "37200"
  },
  {
    "text": "California it certainly does not rain and I it was very unexpected so getting",
    "start": "37200",
    "end": "42559"
  },
  {
    "text": "used to travel La in my previous life when I was",
    "start": "42559",
    "end": "48239"
  },
  {
    "text": "still traveling given talks I gave a talk in San Francis qorn San Francisco",
    "start": "48239",
    "end": "55079"
  },
  {
    "text": "in 2018 and I thought it was about the evolution of microservices and the last part was the future of microservices and",
    "start": "55079",
    "end": "62480"
  },
  {
    "text": "I said that hey serverless looks like an interesting step in evolution and you have all those functions which are very",
    "start": "62480",
    "end": "68880"
  },
  {
    "text": "small seress but it's not clear how all those functions can interact with",
    "start": "68880",
    "end": "74479"
  },
  {
    "text": "databases where do they store data how do they set their state things were extremely",
    "start": "74479",
    "end": "79920"
  },
  {
    "text": "unclear and when you looked around and like okay which were sever databases to match those serverless functions it was",
    "start": "79920",
    "end": "87799"
  },
  {
    "text": "like well we don't really have many of them there was basically Amazon Dynamo",
    "start": "87799",
    "end": "93399"
  },
  {
    "text": "DB and there was Amazon Dynamo DB snowflake was technically serverless in",
    "start": "93399",
    "end": "100640"
  },
  {
    "text": "some respects back then but nobody thought of it as serverless and then there weren't really a lot of other",
    "start": "100640",
    "end": "106600"
  },
  {
    "text": "options fast forward to today I only fit a partal list into this slide but",
    "start": "106600",
    "end": "113240"
  },
  {
    "text": "obviously there is a lot of systems that say hey we're serverless database we were built for serverless workloads were",
    "start": "113240",
    "end": "120119"
  },
  {
    "text": "database for the cloud all those things are now all over the place so obviously some in The Last 5 Years except other",
    "start": "120119",
    "end": "127280"
  },
  {
    "text": "than a pandemic other stuff has changed as well so why is that why did we go",
    "start": "127280",
    "end": "133760"
  },
  {
    "text": "from almost no serverless databases to now we have a lot of them well the",
    "start": "133760",
    "end": "139800"
  },
  {
    "text": "cynical answer is to say it's a buzz word anyone who can put serverless in",
    "start": "139800",
    "end": "146599"
  },
  {
    "text": "front of whatever they're doing goes and put serverless in front of whatever they are doing this is not",
    "start": "146599",
    "end": "154360"
  },
  {
    "text": "incorrect but I think there is a lot more to it than that and I would this",
    "start": "154360",
    "end": "161360"
  },
  {
    "text": "presentation will basically go through the reason that serverless is happening right now and we'll start with one",
    "start": "161360",
    "end": "170000"
  },
  {
    "text": "reason we have servus right now is because we can we are getting better at",
    "start": "170000",
    "end": "175200"
  },
  {
    "text": "distributed systems we have better guarantees better algorithms better",
    "start": "175200",
    "end": "181480"
  },
  {
    "text": "foundations we learned how to tame a lot of the issues that really made",
    "start": "181480",
    "end": "188120"
  },
  {
    "text": "distributed databases a serious challenge even just 5 years ago and we're going to talk about in",
    "start": "188120",
    "end": "195920"
  },
  {
    "text": "detail about those H different architectures that make serverless databases possible the other side is",
    "start": "195920",
    "end": "202760"
  },
  {
    "text": "because it's worth it because there is now a lot of workloads that actually benefit from running on a serverless",
    "start": "202760",
    "end": "208680"
  },
  {
    "text": "database as opposed to something a bit more traditional and I'm going to talk",
    "start": "208680",
    "end": "215239"
  },
  {
    "text": "about in what cases is it worth it and in what cases you should just stay exactly where you are nothing changed",
    "start": "215239",
    "end": "221760"
  },
  {
    "text": "for you and the last point is because sess in the form of function as a",
    "start": "221760",
    "end": "228000"
  },
  {
    "text": "service is a big deal those are new workloads they do have fundamentally",
    "start": "228000",
    "end": "233799"
  },
  {
    "text": "different requirements and they do need data somewhere so we'll talk about what",
    "start": "233799",
    "end": "240280"
  },
  {
    "text": "the force that function as service applied toward our data architectures and I'll give some examples of data",
    "start": "240280",
    "end": "246959"
  },
  {
    "text": "architectures that are I think are particularly good for serverless",
    "start": "246959",
    "end": "252280"
  },
  {
    "text": "functions okay so let's start talking a bit about you guys you look a bit like that um you're at cucon so I can assume",
    "start": "252280",
    "end": "261519"
  },
  {
    "text": "all of you are very senior engineers and Architects I do not assume that all of",
    "start": "261519",
    "end": "267759"
  },
  {
    "text": "you are building databases now why I'm going to spend about half",
    "start": "267759",
    "end": "274880"
  },
  {
    "text": "the talk talking about the internals of a bunch of serverless databases why am I going to tell you how to build a",
    "start": "274880",
    "end": "281160"
  },
  {
    "text": "serverless database when clearly the vast majority of you are not going to go back and tell your boss hey I'm building",
    "start": "281160",
    "end": "287520"
  },
  {
    "text": "a seress database now well I think you guys are in a position to choose the",
    "start": "287520",
    "end": "293320"
  },
  {
    "text": "Technologies for yourself for your teams for your companies this is what senior developers and Architects do",
    "start": "293320",
    "end": "300440"
  },
  {
    "text": "and I think I knowing and understanding the internals and the trade-offs that were involved in creating those systems",
    "start": "300440",
    "end": "307960"
  },
  {
    "text": "will allow you to to make really good choices so this is the goal to equip you",
    "start": "307960",
    "end": "315240"
  },
  {
    "text": "in making good choices if people here listening to my talk would say hm until",
    "start": "315240",
    "end": "321160"
  },
  {
    "text": "today I S that servus is marketing BS but now that I understand really the",
    "start": "321160",
    "end": "326440"
  },
  {
    "text": "what's going on and the tradeoffs and the benefits I I think I I may look a bit more into it if that's what you said",
    "start": "326440",
    "end": "333479"
  },
  {
    "text": "the end I done my job now about me until about a year and",
    "start": "333479",
    "end": "340639"
  },
  {
    "text": "a half ago I was leading Cloud native Kafka for confluent I led this team of",
    "start": "340639",
    "end": "346639"
  },
  {
    "text": "amazing engineers and our goal was to build well serverless Kafka experience",
    "start": "346639",
    "end": "355000"
  },
  {
    "text": "for confluent cloud and when we said that we want",
    "start": "355000",
    "end": "360520"
  },
  {
    "text": "severs Kafka experience and by the way Confluence marketing was very responsible they never said severs we",
    "start": "360520",
    "end": "365639"
  },
  {
    "text": "only said that internally but it was our vision that our users will only give us",
    "start": "365639",
    "end": "373080"
  },
  {
    "text": "their workload and the credit card and that's it we will take care of everything else you need more resources",
    "start": "373080",
    "end": "379880"
  },
  {
    "text": "you need something optimized you need to move partition around you need a different configuration don't worry",
    "start": "379880",
    "end": "385039"
  },
  {
    "text": "about it send us produce consume send us data we will figure out the",
    "start": "385039",
    "end": "390240"
  },
  {
    "text": "so when I say serverless this is my mental model now as a vendor it obviously meant",
    "start": "390240",
    "end": "396759"
  },
  {
    "text": "that there was a lot on for us the usual we have to be highly available we had to never lose anyone's data and then we had",
    "start": "396759",
    "end": "403880"
  },
  {
    "text": "to provide elasticity because they're giving us a workload we don't know how much of it will be and when it will show",
    "start": "403880",
    "end": "410440"
  },
  {
    "text": "up so we need to be able to scale clusters up and down but it's even more than just",
    "start": "410440",
    "end": "416599"
  },
  {
    "text": "autoscale elasticity for me means being able to resolve hotpots resolve noisy",
    "start": "416599",
    "end": "422840"
  },
  {
    "text": "neighbors being really making sure that every part of the workload always has",
    "start": "422840",
    "end": "428240"
  },
  {
    "text": "Optimal Performance at all times so it was a lot of smart people investing a lot in this now fast forward a year and",
    "start": "428240",
    "end": "435680"
  },
  {
    "text": "a half later I'm building a new database with a much smaller team of amazing",
    "start": "435680",
    "end": "441879"
  },
  {
    "text": "engineers and because we're building a new database I get to reink about a lot",
    "start": "441879",
    "end": "447479"
  },
  {
    "text": "those ideas about a lot of those architectures I'm not no need to take",
    "start": "447479",
    "end": "453680"
  },
  {
    "text": "photos in the sense that I'm database is not quite ready yet you cannot go to the website and start using it U so it also",
    "start": "453680",
    "end": "461599"
  },
  {
    "text": "means I'm not here to sell it to you because it does not quite exist yet",
    "start": "461599",
    "end": "466720"
  },
  {
    "text": "but the it does mean that I've spent the last year and a half rethinking about",
    "start": "466720",
    "end": "472680"
  },
  {
    "text": "how to build dat a modern database from first principles looking at every bit of",
    "start": "472680",
    "end": "477759"
  },
  {
    "text": "architecture what works what doesn't in what situation so without further Ado let's",
    "start": "477759",
    "end": "484680"
  },
  {
    "text": "talk about those architectures so as I mentioned before the big problem that we're trying to",
    "start": "484680",
    "end": "490400"
  },
  {
    "text": "solve when we talk about Serv databases is elasticity the fact that we want to",
    "start": "490400",
    "end": "497199"
  },
  {
    "text": "as the vendor it behooves us to accept every bit of workload and to make sure it works well",
    "start": "497199",
    "end": "503120"
  },
  {
    "text": "otherwise workload that we have to reject is workload we cannot charge someone for and and it means that we",
    "start": "503120",
    "end": "510560"
  },
  {
    "text": "need to take distributed systems and make them a lot more flexible than they were before typically elasticity means",
    "start": "510560",
    "end": "517518"
  },
  {
    "text": "that a things have to Auto scale that's interesting H from zero to basically",
    "start": "517519",
    "end": "526240"
  },
  {
    "text": "whatever people usually imagine that the cloud has no limits so it behooves you to have no limits you want to do it in",
    "start": "526240",
    "end": "532440"
  },
  {
    "text": "small increments because people prefer to pay at small increments then I have",
    "start": "532440",
    "end": "538079"
  },
  {
    "text": "one extra bite now I have to buy this big extra machine that's not exactly serverless you want the resources you",
    "start": "538079",
    "end": "544800"
  },
  {
    "text": "pay for to match what you're actually doing it has to be almost instantaneous it used to be that scaling I think or",
    "start": "544800",
    "end": "552079"
  },
  {
    "text": "surus used to take like 20 minutes until you get more resources this thing is no longer",
    "start": "552079",
    "end": "557800"
  },
  {
    "text": "acceptable and it has to be in respond to load in utilization as opposed to someone clicking I want more data",
    "start": "557800",
    "end": "566040"
  },
  {
    "text": "button so in order to build all that it's a lot of difficult decisions and a",
    "start": "566040",
    "end": "571399"
  },
  {
    "text": "lot of trade-offs and nobody does all those five elasticity requirements that I",
    "start": "571399",
    "end": "578360"
  },
  {
    "text": "mentioned and we are going to go over some of them those decisions and really",
    "start": "578360",
    "end": "583480"
  },
  {
    "text": "see how different decisions carry with them other different decisions if you",
    "start": "583480",
    "end": "589360"
  },
  {
    "text": "choose to be multitenant there is a bunch of things you have to do if you choose to have local storages a bunch of",
    "start": "589360",
    "end": "595120"
  },
  {
    "text": "things you have to do and those shape the system that you're looking at so if you're",
    "start": "595120",
    "end": "601399"
  },
  {
    "text": "looking at one type of database you will you will see something very different",
    "start": "601399",
    "end": "607160"
  },
  {
    "text": "because of the architecture so the things that makes let's say Amazon Aurora different from",
    "start": "607160",
    "end": "614519"
  },
  {
    "text": "cockroachdb different from Dynamo DB very different from Snowflake is for",
    "start": "614519",
    "end": "619959"
  },
  {
    "text": "many in many ways those deep architectural decisions so let's take",
    "start": "619959",
    "end": "625720"
  },
  {
    "text": "start with one big architecture decision the Shar ning architecture this should be at least slightly familiar for the",
    "start": "625720",
    "end": "633200"
  },
  {
    "text": "reason that this is the old school architecture many people would say Gwen",
    "start": "633200",
    "end": "638880"
  },
  {
    "text": "this is not Cloud native or yes some of the older Cloud systems do it it's not",
    "start": "638880",
    "end": "644399"
  },
  {
    "text": "really that well systems that do it would be Dynamo Deb Vitz yugabyte",
    "start": "644399",
    "end": "650839"
  },
  {
    "text": "sitting out there so there are Confluence C Confluence Cloud was one of those so there are successful systems",
    "start": "650839",
    "end": "659040"
  },
  {
    "text": "built in this architecture which is why I hate discounting it is not Cloud native I mean hey Dam did it who knows",
    "start": "659040",
    "end": "666440"
  },
  {
    "text": "if it's not Cloud native H the way the system is built is",
    "start": "666440",
    "end": "673760"
  },
  {
    "text": "um at the essence you have data nodes data nodes on compute and local storage",
    "start": "673760",
    "end": "680720"
  },
  {
    "text": "this is obviously great if you believe that local storage is actually faster and more reliable than the storage",
    "start": "680720",
    "end": "688519"
  },
  {
    "text": "cluster otherwise available and it's obviously good as long as all the",
    "start": "688519",
    "end": "695000"
  },
  {
    "text": "computation is local there is a query router usually routers whose job is to",
    "start": "695000",
    "end": "701519"
  },
  {
    "text": "distribute the queries and sometimes also consolidate the results H you try to minimize how much data is going in",
    "start": "701519",
    "end": "708800"
  },
  {
    "text": "between the nodes as far as as much as possible you try to keep every nodee independent this also means making data",
    "start": "708800",
    "end": "717000"
  },
  {
    "text": "modeling decisions so if you go and check with a look at the vest documentation they'll have a big section",
    "start": "717000",
    "end": "724040"
  },
  {
    "text": "on how to model data so it will work well in that model similarly for Dynamo",
    "start": "724040",
    "end": "729880"
  },
  {
    "text": "DB and other systems well you have this system how do you scale it that's kind of what eltis",
    "start": "729880",
    "end": "736519"
  },
  {
    "text": "means first of all you need to make move things in and out you all the data in",
    "start": "736519",
    "end": "741920"
  },
  {
    "text": "each of the data nodes is in the form of small partitions you move them around basically you add another node you move",
    "start": "741920",
    "end": "748600"
  },
  {
    "text": "partition around H some of the partitions become highly loaded you try to move them to a better place you",
    "start": "748600",
    "end": "756000"
  },
  {
    "text": "basically this the main solution is scale those data nodes out obviously you",
    "start": "756000",
    "end": "761639"
  },
  {
    "text": "can add query routers you can add more metadata nodes transaction coordinator",
    "start": "761639",
    "end": "766720"
  },
  {
    "text": "is the one that is actually much harder to scale out in general usually if when",
    "start": "766720",
    "end": "772120"
  },
  {
    "text": "those systems have scalability issues it's because you're bottlenecking on transaction coordination in some way",
    "start": "772120",
    "end": "780760"
  },
  {
    "text": "now note that the key thing here the whole the the ability to scale the whole",
    "start": "780760",
    "end": "786320"
  },
  {
    "text": "thing is built on the fact that partitions are very small and therefore you can move them around with fairly low",
    "start": "786320",
    "end": "792839"
  },
  {
    "text": "latency very little issues even while the system is qu can be quite loaded this is how you resolve",
    "start": "792839",
    "end": "799440"
  },
  {
    "text": "hotspots well in order to keep the partitions small enough remember people",
    "start": "799440",
    "end": "805519"
  },
  {
    "text": "are reading and writing data all the time how do you keep them small two main techniques one of them is that you split",
    "start": "805519",
    "end": "812000"
  },
  {
    "text": "them partition got above a certain size it now becomes two partitions and again",
    "start": "812000",
    "end": "818880"
  },
  {
    "text": "very old technique I'm not don't think I'm saying something new here but still used in Dynamo DB it's great if your",
    "start": "818880",
    "end": "825240"
  },
  {
    "text": "partitioning scheme is Harsh partitioned or wrench partitioned these kind of things work quite",
    "start": "825240",
    "end": "831320"
  },
  {
    "text": "well the other solution is what is also known as tearing this is what Kafka did",
    "start": "831320",
    "end": "836959"
  },
  {
    "text": "and the Insight here is that you look at at the partition and say well actually only this small chunk at the top is",
    "start": "836959",
    "end": "843399"
  },
  {
    "text": "valuable remember that Kafka is a log most of the reads and wres are on the",
    "start": "843399",
    "end": "848519"
  },
  {
    "text": "top of the log like the the top 10% get 90% of the log this means that in order",
    "start": "848519",
    "end": "853839"
  },
  {
    "text": "to keep it small you can take the tail of the log and shove it into slower",
    "start": "853839",
    "end": "859519"
  },
  {
    "text": "storage like S3 and this keeps the the main hot partition H much smaller and",
    "start": "859519",
    "end": "866639"
  },
  {
    "text": "allows you to move it around now the other key part of the system is",
    "start": "866639",
    "end": "873199"
  },
  {
    "text": "the rebalancing algorithms the idea is that you have a lot of metrics about the load on the",
    "start": "873199",
    "end": "879880"
  },
  {
    "text": "Node level the load at the partition level and you have a process that",
    "start": "879880",
    "end": "884920"
  },
  {
    "text": "continuously look at all those metrics and says oh this node is getting a bit loaded it doesn't have enough capacity",
    "start": "884920",
    "end": "892279"
  },
  {
    "text": "let's take some of the partitions and move them somewhere else where it makes sense or if there is no place where it",
    "start": "892279",
    "end": "898279"
  },
  {
    "text": "makes sense and things are getting loaded you need to actually add capacity and those algorithms have to be",
    "start": "898279",
    "end": "905120"
  },
  {
    "text": "those are really challenging waving my hand but we had a lot of smart people spend a lot of time trying to get it",
    "start": "905120",
    "end": "911040"
  },
  {
    "text": "right because you don't want to move data too much it takes resources and those resources could be better used for",
    "start": "911040",
    "end": "917680"
  },
  {
    "text": "something else on the other hand you do need sufficient spare capacity on every node to allow things to burst and to",
    "start": "917680",
    "end": "924560"
  },
  {
    "text": "give you head room to uh handle all kinds of situations",
    "start": "924560",
    "end": "929959"
  },
  {
    "text": "so one of the things we learned is that you really want to aim at a lot of local",
    "start": "929959",
    "end": "936040"
  },
  {
    "text": "decisions with some safeguards you don't want to come up with this amazing Global",
    "start": "936040",
    "end": "941279"
  },
  {
    "text": "plan for the entire cluster with the perfect placement for everything because it takes a lot of time to compute this",
    "start": "941279",
    "end": "947000"
  },
  {
    "text": "plan in a large cluster it can be hours and as a",
    "start": "947000",
    "end": "952279"
  },
  {
    "text": "result by the time you finished Computing and finished moving everything the situation changed Cloud mov moves",
    "start": "952279",
    "end": "958880"
  },
  {
    "text": "very fast workflows change all the time so don't do that look for signals that",
    "start": "958880",
    "end": "964399"
  },
  {
    "text": "things are getting highly loaded like at the you know 60% CPU and start moving",
    "start": "964399",
    "end": "970079"
  },
  {
    "text": "some things to a Le less loaded node it will keep things in more or less in",
    "start": "970079",
    "end": "975120"
  },
  {
    "text": "Balance over time H obviously if you find out that you move things between two nodes or the same partition a lot",
    "start": "975120",
    "end": "982560"
  },
  {
    "text": "then you need to flag that hey something is off here and uh maybe we're doing",
    "start": "982560",
    "end": "988720"
  },
  {
    "text": "useless work okay the other big algorithm compute storage",
    "start": "988720",
    "end": "994920"
  },
  {
    "text": "separation H this is the one that's considered more cloudlike the snowflake",
    "start": "994920",
    "end": "1000680"
  },
  {
    "text": "paper I think Circa 2011 says in the",
    "start": "1000680",
    "end": "1005720"
  },
  {
    "text": "cloud the architecture that takes the best advantage of the cloud system in",
    "start": "1005720",
    "end": "1011440"
  },
  {
    "text": "order to provide elasticity and flexibility for the users is the compute storage separation everyone looked and",
    "start": "1011440",
    "end": "1017720"
  },
  {
    "text": "said hm they that looks like a good idea and a lot of those architectures showed",
    "start": "1017720",
    "end": "1023360"
  },
  {
    "text": "up the main idea is that you you're now running two clusters you have a storage",
    "start": "1023360",
    "end": "1029319"
  },
  {
    "text": "cluster where the data is just think about it as dumb blocks S3 is a good",
    "start": "1029319",
    "end": "1034640"
  },
  {
    "text": "example or even EBS you just have chunks of data stored in there and any machine",
    "start": "1034640",
    "end": "1040558"
  },
  {
    "text": "can reach out to anywhere in the storage cluster to grab any set of blocks and",
    "start": "1040559",
    "end": "1046280"
  },
  {
    "text": "the responsibility of the storage cluster is basically don't lose blocks and be",
    "start": "1046280",
    "end": "1052320"
  },
  {
    "text": "available that's the main thing although you can push more down into it and ask it to do a bit more compute nodes are",
    "start": "1052320",
    "end": "1059919"
  },
  {
    "text": "the ones that do the majority of whatever you need your system to be a filters joints Aggregates whatever you",
    "start": "1059919",
    "end": "1068400"
  },
  {
    "text": "need from your compute layer this is where it's happening and the key to this systems",
    "start": "1068400",
    "end": "1075360"
  },
  {
    "text": "performance is that you want things in the computer node to be logically cohesive so you can take good advantage",
    "start": "1075360",
    "end": "1081919"
  },
  {
    "text": "of cashing because remember the storage node you have to reach out to another cluster and then joints require",
    "start": "1081919",
    "end": "1088080"
  },
  {
    "text": "obviously a lot of data locality so you are looking for ways to get everything",
    "start": "1088080",
    "end": "1093840"
  },
  {
    "text": "you need for specific workload on one computer node so if you go to say solake",
    "start": "1093840",
    "end": "1100080"
  },
  {
    "text": "they will ask you to Define multiple data warehouses those data warehouses",
    "start": "1100080",
    "end": "1105400"
  },
  {
    "text": "are essentially compute nodes and if you need more a compute you will buy",
    "start": "1105400",
    "end": "1111200"
  },
  {
    "text": "additional data warehouses now how do you scale",
    "start": "1111200",
    "end": "1117760"
  },
  {
    "text": "those there is basically two methods of scaling them and we'll start with the start with the Aurora snowflake uh type",
    "start": "1117760",
    "end": "1124799"
  },
  {
    "text": "of scaling storage cluster is easy it's again a cluster of bytes of data you add",
    "start": "1124799",
    "end": "1131960"
  },
  {
    "text": "additional nodes they will replicate things over stuff will move over H you",
    "start": "1131960",
    "end": "1137240"
  },
  {
    "text": "don't it basically Bally the in many ways the storage cluster still acts like",
    "start": "1137240",
    "end": "1142320"
  },
  {
    "text": "Shar ning cluster except it's a storage cluster the compute nodes on the other",
    "start": "1142320",
    "end": "1147720"
  },
  {
    "text": "hand in the Aurora model they don't scale out they scale up meaning that",
    "start": "1147720",
    "end": "1153400"
  },
  {
    "text": "every compute node is essentially a database and this has amazing advantages",
    "start": "1153400",
    "end": "1160559"
  },
  {
    "text": "because it means that you can look at it like it's a normal database it doesn't",
    "start": "1160559",
    "end": "1165640"
  },
  {
    "text": "you don't have to think hard about how do I partition data correctly you don't have to think about well some of my data",
    "start": "1165640",
    "end": "1172440"
  },
  {
    "text": "is not local and if I have transactions I have to do some logs and they take extra time you basically use it",
    "start": "1172440",
    "end": "1180919"
  },
  {
    "text": "normally if when things get loaded they have nice ways to take your the",
    "start": "1180919",
    "end": "1187480"
  },
  {
    "text": "container with the database with its entire state with all the connections with all of everything and either give",
    "start": "1187480",
    "end": "1194640"
  },
  {
    "text": "it more space on the spot which is I think fairly easy with modern containers",
    "start": "1194640",
    "end": "1200400"
  },
  {
    "text": "or if the entire H physical node is busy",
    "start": "1200400",
    "end": "1205679"
  },
  {
    "text": "they can move it with should be transparent in reality you will see a",
    "start": "1205679",
    "end": "1210960"
  },
  {
    "text": "performance like a blip in your latency graph when this happens it's not as transparent as many want it to",
    "start": "1210960",
    "end": "1218200"
  },
  {
    "text": "be now with h this model it has two interesting benefits on um what you get",
    "start": "1218200",
    "end": "1226240"
  },
  {
    "text": "from it one of them is that the compute storage separation means that you can do",
    "start": "1226240",
    "end": "1231280"
  },
  {
    "text": "nice things like spin up another compute node and point it to the same storage",
    "start": "1231280",
    "end": "1237559"
  },
  {
    "text": "and set up copy on right this essentially just created branch of your database now delix if",
    "start": "1237559",
    "end": "1245799"
  },
  {
    "text": "anyone remember did it ages ago this is obviously much easier because you just do a click and it's you don't have to",
    "start": "1245799",
    "end": "1252400"
  },
  {
    "text": "actually run the whole thing it's Aurora it runs in the cloud so this kind of um",
    "start": "1252400",
    "end": "1257720"
  },
  {
    "text": "situation is kind of nice and obviously it has limits on how much",
    "start": "1257720",
    "end": "1263679"
  },
  {
    "text": "it can scale up that are a bit harder to solve oh and the other thing is that I",
    "start": "1263679",
    "end": "1269720"
  },
  {
    "text": "don't know if you guys remember back in the day when we were all in data centers um there was the thing where",
    "start": "1269720",
    "end": "1276400"
  },
  {
    "text": "everyone used those big storage uh clusters like EMC and stuff and then",
    "start": "1276400",
    "end": "1282279"
  },
  {
    "text": "there was always this big Oracle database that whenever it took its weekly full backup you usually like on",
    "start": "1282279",
    "end": "1288720"
  },
  {
    "text": "Friday at 3:00 a.m. everything else would grind to a Hal h it doesn't happen quite that badly",
    "start": "1288720",
    "end": "1295720"
  },
  {
    "text": "on aora but you definitely sometimes notice that the storage cluster that you're on is a bit busier than normal",
    "start": "1295720",
    "end": "1302919"
  },
  {
    "text": "you you you see some noise from that as well now the other approach to compute",
    "start": "1302919",
    "end": "1310159"
  },
  {
    "text": "storage operation is the one that was started with the spanner paper and if",
    "start": "1310159",
    "end": "1316159"
  },
  {
    "text": "kokb has this kind of uh system which is that you separate computer storage but",
    "start": "1316159",
    "end": "1324760"
  },
  {
    "text": "you also scale out the compute nodes fantastic but how do you maintain things",
    "start": "1324760",
    "end": "1330960"
  },
  {
    "text": "like transactional Integrity when you have compute nodes every one of them handling their own workload and their",
    "start": "1330960",
    "end": "1336679"
  },
  {
    "text": "own transactions and this is where things get pretty complex and they use things",
    "start": "1336679",
    "end": "1343480"
  },
  {
    "text": "like raft and paxos to maintain transaction logs and maintain you have",
    "start": "1343480",
    "end": "1348600"
  },
  {
    "text": "to get consensus on transactions so all the compute nodes basically the storage cluster is not just right data it is",
    "start": "1348600",
    "end": "1356679"
  },
  {
    "text": "maintain transaction guarantees and it has to log all the transaction guarantees now both spanner and",
    "start": "1356679",
    "end": "1362720"
  },
  {
    "text": "Cockroach they're at global scale things like raft and paos are extremely",
    "start": "1362720",
    "end": "1368360"
  },
  {
    "text": "efficient in a data center the moment you start trying to make them Global they actually lose a lot of their",
    "start": "1368360",
    "end": "1374240"
  },
  {
    "text": "efficiencies they're a bit too chatty for a lot of back and Force H in those cases it's common to",
    "start": "1374240",
    "end": "1382400"
  },
  {
    "text": "have two-phase commit to the other other side of the",
    "start": "1382400",
    "end": "1387960"
  },
  {
    "text": "globe so you need to be aware that you cannot really stop doing transactions if",
    "start": "1387960",
    "end": "1393400"
  },
  {
    "text": "you're on spaner coach is there because you want transaction guarantees like most normal Engineers who discovered",
    "start": "1393400",
    "end": "1400640"
  },
  {
    "text": "that they actually want to know what their data is at the end of the day but you have to remember that in this",
    "start": "1400640",
    "end": "1406880"
  },
  {
    "text": "scenario you could scale out impressively and there will be slowdowns",
    "start": "1406880",
    "end": "1413679"
  },
  {
    "text": "related to transaction if they cross the globe so I summarized everything I said",
    "start": "1413679",
    "end": "1418720"
  },
  {
    "text": "here so I'm just going to skip it you can refer to it once you get back home but the Le the big lesson is there",
    "start": "1418720",
    "end": "1426039"
  },
  {
    "text": "is no free lunch you have to understand the trade-offs if I go with Aurora I",
    "start": "1426039",
    "end": "1431799"
  },
  {
    "text": "have to not think about some things I have to think about other things transactions are not an issue cold start",
    "start": "1431799",
    "end": "1437640"
  },
  {
    "text": "is an issue minimum payment may be an issue H if I go with something like",
    "start": "1437640",
    "end": "1443360"
  },
  {
    "text": "Dynamo DB then things are perfect but I have a key value store so all kind there's all kind of uh things to take",
    "start": "1443360",
    "end": "1450440"
  },
  {
    "text": "into consideration and make sure that you understand what each system is actually capable of",
    "start": "1450440",
    "end": "1456600"
  },
  {
    "text": "delivering the one thing to note is that while you'll have to make tradeoffs if you decide you want a very elastic",
    "start": "1456600",
    "end": "1462840"
  },
  {
    "text": "system and one of a look at the the situation but it does not require",
    "start": "1462840",
    "end": "1469039"
  },
  {
    "text": "changing the whole way you ever use the database meaning if you are if you like",
    "start": "1469039",
    "end": "1474480"
  },
  {
    "text": "key value stores there will be several for you to choose from if you like relational there will be a bunch if you",
    "start": "1474480",
    "end": "1480240"
  },
  {
    "text": "like specific type of relational and your a my SQL fun there will be if you",
    "start": "1480240",
    "end": "1485600"
  },
  {
    "text": "like postgress there are going to be you don't have to change a lot about your worldview H this is not the same case if",
    "start": "1485600",
    "end": "1492480"
  },
  {
    "text": "you try serverless functions which is learn a whole new way to write code and manage code and so on because it's I'm",
    "start": "1492480",
    "end": "1501200"
  },
  {
    "text": "still trying to wrap my head around how to build functionality from a lot of small independent",
    "start": "1501200",
    "end": "1507640"
  },
  {
    "text": "functions the other thing is that every rubric has different latency trade-offs",
    "start": "1507640",
    "end": "1514360"
  },
  {
    "text": "as I said like aora would have the spikes and a bit of noise if you have the systems that move stuff around you",
    "start": "1514360",
    "end": "1520640"
  },
  {
    "text": "may notice the changes in performance as stuff moves around the vendor may do",
    "start": "1520640",
    "end": "1526159"
  },
  {
    "text": "maintenance at times this will have a impact that you may notice in the graph",
    "start": "1526159",
    "end": "1531799"
  },
  {
    "text": "H so you need to understand what you're getting and",
    "start": "1531799",
    "end": "1538760"
  },
  {
    "text": "you need to also understand your Alternatives and this is the important thing like I've seen a lot of cases",
    "start": "1538760",
    "end": "1544799"
  },
  {
    "text": "where people are like looking and saying I can't use it because I cannot afford any performance spikes and I like but",
    "start": "1544799",
    "end": "1551279"
  },
  {
    "text": "those performance spikes happen when we scale up right which means that your the Machin that you already have is not big",
    "start": "1551279",
    "end": "1558159"
  },
  {
    "text": "enough what happens to you today when the machine you have is not big enough well you have bad performance anyway",
    "start": "1558159",
    "end": "1564440"
  },
  {
    "text": "right except this one goes away after a few seconds and the other one actually gets worse and worse and stuff queue up",
    "start": "1564440",
    "end": "1571399"
  },
  {
    "text": "H I've seen situations where the performance requirements were unrealistic even for a provision system",
    "start": "1571399",
    "end": "1579840"
  },
  {
    "text": "with the best engineers in the world trying to make it work or was extremely cost prohibitive and the customer was",
    "start": "1579840",
    "end": "1586640"
  },
  {
    "text": "very clear that the cost is not going to work for them so at the end of the day",
    "start": "1586640",
    "end": "1592640"
  },
  {
    "text": "you know the cloud is just someone else's computer a lot of people imagine that problems will be magically solved",
    "start": "1592640",
    "end": "1598440"
  },
  {
    "text": "if we move workloads to the cloud I think a lot of cloud vendors encouraged the magical thinking around it but at",
    "start": "1598440",
    "end": "1605720"
  },
  {
    "text": "the end of the day it's just it is computers and databases run",
    "start": "1605720",
    "end": "1610799"
  },
  {
    "text": "by the best experts in the world with a lot of time and money to make it happen and there are some things some",
    "start": "1610799",
    "end": "1617200"
  },
  {
    "text": "requirements that even the best in the world cannot really do so think longer hard about if I'm not using this what",
    "start": "1617200",
    "end": "1624360"
  },
  {
    "text": "will be the alternative and will I actually get what I need in other situations oh and the other thing about",
    "start": "1624360",
    "end": "1630720"
  },
  {
    "text": "low latency in general testing testing and more testing these things are dependent on the cloud vendor and the",
    "start": "1630720",
    "end": "1638520"
  },
  {
    "text": "region that you're in if you're on us East one the Chan of noise are a lot higher than if you are in a small",
    "start": "1638520",
    "end": "1646520"
  },
  {
    "text": "cluster in the southeast pacifics it's um you it obviously depends on your",
    "start": "1646520",
    "end": "1653399"
  },
  {
    "text": "workload if your connection heavy it will be very different than if you are doing huge computations and if you're",
    "start": "1653399",
    "end": "1660440"
  },
  {
    "text": "reading massive amounts of data throughput iops all those things you test test and test you don't even know",
    "start": "1660440",
    "end": "1666399"
  },
  {
    "text": "what is the low latency and what how inconsistent things are until you try them",
    "start": "1666399",
    "end": "1671799"
  },
  {
    "text": "out okay with that in mind all this does not matter if you don't actually need a",
    "start": "1671799",
    "end": "1678120"
  },
  {
    "text": "serverless database so let's talk about this and I'm going to talk about a bunch of scenarios so let's start with the",
    "start": "1678120",
    "end": "1684919"
  },
  {
    "text": "easy one you're a small company you have one workload and it's pretty stable",
    "start": "1684919",
    "end": "1692200"
  },
  {
    "text": "you're still not growing that much or that fast or maybe you're growing pretty fast but you can actually in a Sit",
    "start": "1692200",
    "end": "1698480"
  },
  {
    "text": "because it's one workload you can kind of plan a trajectory ahead this is great",
    "start": "1698480",
    "end": "1703960"
  },
  {
    "text": "fantastic life is good just figure out how much space you need for once per several workload and move on with your",
    "start": "1703960",
    "end": "1710159"
  },
  {
    "text": "life maybe one putting something in your calendar once every 3 months to take a",
    "start": "1710159",
    "end": "1715200"
  },
  {
    "text": "look to check if it's okay again yeah some things are not broken enjoy",
    "start": "1715200",
    "end": "1720559"
  },
  {
    "text": "them now as stuff get bigger usually you start having multiple workloads but",
    "start": "1720559",
    "end": "1725640"
  },
  {
    "text": "sometimes all of them are fine so this is harder this is you still have to understand how to interact with each",
    "start": "1725640",
    "end": "1731519"
  },
  {
    "text": "other you still have to worry about this having enough space for this one crazy guy who may do something you you still",
    "start": "1731519",
    "end": "1737960"
  },
  {
    "text": "have to really plan capacity with planning capacity is harder tuning can",
    "start": "1737960",
    "end": "1743399"
  },
  {
    "text": "be a lot harder because those workloads may actually conflict and require different things but because they're",
    "start": "1743399",
    "end": "1749799"
  },
  {
    "text": "fairly stable it's almost a onetime investment so you do it for every one of your workloads and they don't change",
    "start": "1749799",
    "end": "1756279"
  },
  {
    "text": "much and you can move on with your life this is still okay if you have enough people to do it your life is still",
    "start": "1756279",
    "end": "1763919"
  },
  {
    "text": "fine where things get hairy when they you have a lot of",
    "start": "1764159",
    "end": "1769440"
  },
  {
    "text": "variability and variability can be in a day it can be in a months it can be this",
    "start": "1769440",
    "end": "1777320"
  },
  {
    "text": "time of year when stuff start jumping all of those can be variability it can be more predictable variability it can",
    "start": "1777320",
    "end": "1783919"
  },
  {
    "text": "also be very unpredictable variability the fact is that if your workload is very variable you need a lot of spare",
    "start": "1783919",
    "end": "1790679"
  },
  {
    "text": "capacity otherwise when you hit the pick it will not be work flat and simple and",
    "start": "1790679",
    "end": "1796600"
  },
  {
    "text": "the problem with having a lot of spare capacity is that if you look at how",
    "start": "1796600",
    "end": "1801679"
  },
  {
    "text": "much the your company's customers pay how much value your company deres from",
    "start": "1801679",
    "end": "1807120"
  },
  {
    "text": "the database it's actually along the lines of the average your customers don't get value when there is no",
    "start": "1807120",
    "end": "1813679"
  },
  {
    "text": "workload essentially so there is a big gap and especially this day and age I've",
    "start": "1813679",
    "end": "1821760"
  },
  {
    "text": "been through the 2000 recession I've been through 2008 recession and here we are today executive ask a lot of",
    "start": "1821760",
    "end": "1828600"
  },
  {
    "text": "questions why are we need all those databases that are only at 20% capacity why can't we put them all together and",
    "start": "1828600",
    "end": "1835640"
  },
  {
    "text": "have something at 80% capacity and we",
    "start": "1835640",
    "end": "1840760"
  },
  {
    "text": "all know the answer but it's in general not a conversation that is amazingly Pleasant to have and even more annoying",
    "start": "1840760",
    "end": "1848000"
  },
  {
    "text": "if it's a relatively small system 70% spare capacity sounds like a lot but it",
    "start": "1848000",
    "end": "1853679"
  },
  {
    "text": "actually may not be that much in actual workload it may be maybe just a few",
    "start": "1853679",
    "end": "1858720"
  },
  {
    "text": "extra megabytes so in this situation that's where actually moving",
    "start": "1858720",
    "end": "1865399"
  },
  {
    "text": "to serverless Cluster from a cloud vendor is very reasonable why because",
    "start": "1865399",
    "end": "1873679"
  },
  {
    "text": "that's the whole point of the seress cost model is that you're paying for what you use so you'll the executives",
    "start": "1873679",
    "end": "1879760"
  },
  {
    "text": "will be happy because they're finally paying for the value delivered you will not have to think about how to capacity",
    "start": "1879760",
    "end": "1884919"
  },
  {
    "text": "plan for the peak of Demands who knows how high it will be and then get paged when you didn't plan enough you'll not",
    "start": "1884919",
    "end": "1891679"
  },
  {
    "text": "have to sit through meetings of am I provisioning too much or too little because honestly who knows how do you",
    "start": "1891679",
    "end": "1898240"
  },
  {
    "text": "even know right so this is exactly when it makes a",
    "start": "1898240",
    "end": "1903720"
  },
  {
    "text": "lot of sense to push the problem to someone else now there is an even more fun",
    "start": "1903720",
    "end": "1910760"
  },
  {
    "text": "situation if you work for a place that is especially crazy you may have a lot of workloads that are highly Val",
    "start": "1910760",
    "end": "1917679"
  },
  {
    "text": "variable this is true especially if you're working for a larger company and especially if one that does good",
    "start": "1917679",
    "end": "1924240"
  },
  {
    "text": "business across the globe and then you have the paks for the IPL in India",
    "start": "1924240",
    "end": "1930720"
  },
  {
    "text": "versus the Thanksgiving in the US and all those things have to kind of come",
    "start": "1930720",
    "end": "1936200"
  },
  {
    "text": "together this is a nightmare if you're trying to manage it I've been there a",
    "start": "1936200",
    "end": "1941760"
  },
  {
    "text": "few times it was always a gigantic headache but if you set up a serverless",
    "start": "1941760",
    "end": "1948399"
  },
  {
    "text": "system yourself it puts you in a position where you can be your own cloud provider in a way if instead of giving",
    "start": "1948399",
    "end": "1955440"
  },
  {
    "text": "every workload its own machine you can actually create a large cluster that those workloads can be elastic",
    "start": "1955440",
    "end": "1963360"
  },
  {
    "text": "inside it means that you can have a lot lower spare capacity but because it's",
    "start": "1963360",
    "end": "1970120"
  },
  {
    "text": "spread out across many machines it's actually a lot more capacity in practice",
    "start": "1970120",
    "end": "1975919"
  },
  {
    "text": "20% out spare capacity on a very large cluster can be 10 and more times bigger",
    "start": "1975919",
    "end": "1981720"
  },
  {
    "text": "than 70% spare capacity on a small cluster mathematics it does mean that",
    "start": "1981720",
    "end": "1987080"
  },
  {
    "text": "you need one of those Solutions moving stuff around or offloading things to a",
    "start": "1987080",
    "end": "1993279"
  },
  {
    "text": "S3 or all of the above but it really means that you can get the the benefits",
    "start": "1993279",
    "end": "1998720"
  },
  {
    "text": "of all those of this elasticity in your data center which is extremely",
    "start": "1998720",
    "end": "2004399"
  },
  {
    "text": "cool so to summary basically the more tenants you have and",
    "start": "2004399",
    "end": "2009960"
  },
  {
    "text": "the more variability you have in your workloads the more serverless would make sense for you from both economic",
    "start": "2009960",
    "end": "2017000"
  },
  {
    "text": "perspective and from lack of headache perspective you don't have to capacity plan for the unplannable is the main",
    "start": "2017000",
    "end": "2024039"
  },
  {
    "text": "point here so I know that many times people think",
    "start": "2024039",
    "end": "2029960"
  },
  {
    "text": "that server DB is may be like yeah maybe in some situations I think it may make",
    "start": "2029960",
    "end": "2035720"
  },
  {
    "text": "more sense than you believe and worthwhile checking if you could benefit",
    "start": "2035720",
    "end": "2041240"
  },
  {
    "text": "from cost savings and less time spent trying to predict the future now the last point is how does",
    "start": "2041240",
    "end": "2050040"
  },
  {
    "text": "function as service bring fit in and the force that it applies on a database so service databases are useful",
    "start": "2050040",
    "end": "2057599"
  },
  {
    "text": "even if you don't use function service but if you do use function service you absolutely need a serverless database",
    "start": "2057599",
    "end": "2064000"
  },
  {
    "text": "how many of you here use function service okay there's a guy in the back okay and",
    "start": "2064000",
    "end": "2071520"
  },
  {
    "text": "maybe you'll never need it and I can go through this a bit fast but the main point is that the more",
    "start": "2071520",
    "end": "2079760"
  },
  {
    "text": "your workload is variable the more risk it poses to your database and functional",
    "start": "2079760",
    "end": "2086358"
  },
  {
    "text": "service by definition is the most variable workload possible it can burst from zero to hundreds and thousands of",
    "start": "2086359",
    "end": "2095679"
  },
  {
    "text": "connections and requests per per second in an eye blink it's it can and has",
    "start": "2095679",
    "end": "2102240"
  },
  {
    "text": "killed very large clusters because it's essentially a tool for DD self DDOS is a",
    "start": "2102240",
    "end": "2108720"
  },
  {
    "text": "good way to put it it's impossible to capacity plan for something that can scale from zero to thousand without",
    "start": "2108720",
    "end": "2116680"
  },
  {
    "text": "blinking so this is obviously a big concern there is other concerns there is no local state it means that there is no",
    "start": "2116680",
    "end": "2123599"
  },
  {
    "text": "connection pool it will have to start connections it will means that you'll have to read all the data it needs from the database as fast as possible when it",
    "start": "2123599",
    "end": "2130320"
  },
  {
    "text": "starts and obviously people who are running it are paying for execution time so they will get extremely upset when it",
    "start": "2130320",
    "end": "2137800"
  },
  {
    "text": "takes a long time to get the data from database to do its thing two common architectures for this",
    "start": "2137800",
    "end": "2144480"
  },
  {
    "text": "situation the simple one and then the ones that actually works the simple one is basically have",
    "start": "2144480",
    "end": "2151160"
  },
  {
    "text": "all the functions connect directly to the database it works it works in some",
    "start": "2151160",
    "end": "2156400"
  },
  {
    "text": "situations s the database first of all has to make it extremely cheap to start",
    "start": "2156400",
    "end": "2161720"
  },
  {
    "text": "new connections this is true for every serverless database out there they add a",
    "start": "2161720",
    "end": "2166760"
  },
  {
    "text": "proxy or they make modifications to the protocol they make modifications to database itself they have to make it",
    "start": "2166760",
    "end": "2172119"
  },
  {
    "text": "cheap this is important not true for every database that was not built to be serverless especially if you have like",
    "start": "2172119",
    "end": "2179599"
  },
  {
    "text": "my SQL postgress you may know every connection is an entire process you have",
    "start": "2179599",
    "end": "2185400"
  },
  {
    "text": "to be very careful about things that show up start the connection run a single query and disappear the other",
    "start": "2185400",
    "end": "2192200"
  },
  {
    "text": "situation where it makes sense obviously the database have to be extremely elastic H that because you don't know if",
    "start": "2192200",
    "end": "2198079"
  },
  {
    "text": "it'll be one function right now in two seconds it will be a thousand of them and you want it to be very close",
    "start": "2198079",
    "end": "2206119"
  },
  {
    "text": "geographically to the functions again not bad in the cloud if you have",
    "start": "2206119",
    "end": "2211359"
  },
  {
    "text": "databases in a lot of places but it's important because when well again time is money in",
    "start": "2211359",
    "end": "2218280"
  },
  {
    "text": "serverless world and getting data over larger distances take longer than taking getting data over shorter distances and",
    "start": "2218280",
    "end": "2225119"
  },
  {
    "text": "remember that they have no state they're never going to cash anything so forget about oh the application will cash stuff",
    "start": "2225119",
    "end": "2230880"
  },
  {
    "text": "which we all kind of gotten used to over the last I don't know 30 years of doing databases and",
    "start": "2230880",
    "end": "2237480"
  },
  {
    "text": "buckets so the one that I think works in more situations even though it's a bit",
    "start": "2237480",
    "end": "2243480"
  },
  {
    "text": "more effort is to have something between Windows functions and the database and",
    "start": "2243480",
    "end": "2250000"
  },
  {
    "text": "this something can be a lot of things it can be a backend because as much as I love H Ser functions service I still",
    "start": "2250000",
    "end": "2257920"
  },
  {
    "text": "don't believe that our entire bu logic will ever be managed in tiny independent functions out there in the cloud I think",
    "start": "2257920",
    "end": "2264440"
  },
  {
    "text": "we will always do some stuff maybe in those functions but there will always be most of the Core Business logic will be",
    "start": "2264440",
    "end": "2270640"
  },
  {
    "text": "in an actual back end with actual Services functions can connect to the back end the back end can have stable",
    "start": "2270640",
    "end": "2276720"
  },
  {
    "text": "database connections that will bring some stability to the thing other option",
    "start": "2276720",
    "end": "2282520"
  },
  {
    "text": "is to have a proxy which will make connections again it will provide a stable connection pool and if you can",
    "start": "2282520",
    "end": "2289839"
  },
  {
    "text": "throw in a cache so much the better because if you it means that they don't",
    "start": "2289839",
    "end": "2295119"
  },
  {
    "text": "all functions don't have to wait for the database essentially now I'm putting it like as a three tier architecture here",
    "start": "2295119",
    "end": "2302000"
  },
  {
    "text": "partially for space and familiarity but not that you can have as many layers of this as you want and need so think about",
    "start": "2302000",
    "end": "2309440"
  },
  {
    "text": "it like a CPU L1 cach L2 cach L3 cach all those things have one cach very",
    "start": "2309440",
    "end": "2315480"
  },
  {
    "text": "close to the database have a one very close to the functions have some logic",
    "start": "2315480",
    "end": "2321880"
  },
  {
    "text": "in between I'm hand waving again it's actually not trivial to manage but again",
    "start": "2321880",
    "end": "2327839"
  },
  {
    "text": "at the very least having one layer that is business logic backend business logic",
    "start": "2327839",
    "end": "2333599"
  },
  {
    "text": "and caching and provides this permanent connection pool I think makes a lot of",
    "start": "2333599",
    "end": "2338880"
  },
  {
    "text": "sense in almost every situation so to",
    "start": "2338880",
    "end": "2344119"
  },
  {
    "text": "summarize if you're going to use serverless dig very deeply into the architecture and the tradeoffs because",
    "start": "2344119",
    "end": "2350599"
  },
  {
    "text": "not all serverless are made the same there is higher likelihood than you think that you are going to benefit from",
    "start": "2350599",
    "end": "2356760"
  },
  {
    "text": "a serverless database because they take off a lot of the capacity planning",
    "start": "2356760",
    "end": "2362079"
  },
  {
    "text": "picking machine tuning things and then scale in scale out as needed and they can save you some",
    "start": "2362079",
    "end": "2368079"
  },
  {
    "text": "money and if you use functional service for the guy out in the end H you need a",
    "start": "2368079",
    "end": "2375760"
  },
  {
    "text": "serverless database and you probably need a bunch of layers in between as",
    "start": "2375760",
    "end": "2382400"
  },
  {
    "text": "well oh questions I have time for questions oh okay I have to admit that",
    "start": "2382839",
    "end": "2389240"
  },
  {
    "text": "this one I actually I think there's a lot of challenges in Charing your database East Coast West Coast in",
    "start": "2389240",
    "end": "2395200"
  },
  {
    "text": "general but but this one is actually fairly reasonable you DNS does allow you",
    "start": "2395200",
    "end": "2401359"
  },
  {
    "text": "to have locality and AWS does have Ser services that tell you route connections",
    "start": "2401359",
    "end": "2407720"
  },
  {
    "text": "to the lower latency location that mean that I when I do shouting actually try to keep the cop on",
    "start": "2407720",
    "end": "2414040"
  },
  {
    "text": "both that's the expensive option usually you say we have some customers in the",
    "start": "2414040",
    "end": "2419480"
  },
  {
    "text": "east coast and they data is in the east coast especially important if you have customers in Europe they usually it's",
    "start": "2419480",
    "end": "2425599"
  },
  {
    "text": "really really important for them that the their data will be only in Europe H so you have to figure out look",
    "start": "2425599",
    "end": "2433079"
  },
  {
    "text": "data I nothing that I said solves data locality for you which is a lot more",
    "start": "2433079",
    "end": "2439000"
  },
  {
    "text": "complex than just performance right because you have regulations where is data allowed to live how long can you",
    "start": "2439000",
    "end": "2444520"
  },
  {
    "text": "keep it for in each location and so on does that help thank you thank",
    "start": "2444520",
    "end": "2451559"
  },
  {
    "text": "you so um I'll ask question um so you",
    "start": "2455319",
    "end": "2461480"
  },
  {
    "text": "mentioned the the two type of architectures mainly two types right one is uh storage confute separation the",
    "start": "2461480",
    "end": "2469119"
  },
  {
    "text": "other is shared nothing uh but I feel that maybe the uh the because both of",
    "start": "2469119",
    "end": "2475880"
  },
  {
    "text": "these have some kind of storage not right because in the in the share nothing architecture your your Computing",
    "start": "2475880",
    "end": "2482440"
  },
  {
    "text": "is is still a a storage node yes so so I think there still some similarities in",
    "start": "2482440",
    "end": "2487960"
  },
  {
    "text": "skating like the storage unit of the of the uh you know two type of architectures uh is that correct it's",
    "start": "2487960",
    "end": "2495440"
  },
  {
    "text": "absolutely correct and I think it depends like there's always a lot of Dev",
    "start": "2495440",
    "end": "2500520"
  },
  {
    "text": "in detail because for example if you take your compute nodes like the and the",
    "start": "2500520",
    "end": "2508560"
  },
  {
    "text": "storage is actually abbs well you already have a storage cluster it's a",
    "start": "2508560",
    "end": "2513960"
  },
  {
    "text": "bit too limited you can rarely use it as shared storage for it doesn't let you share it essentially so you can't use it",
    "start": "2513960",
    "end": "2519680"
  },
  {
    "text": "as shared storage for the entire um cluster but for the data cluster but it",
    "start": "2519680",
    "end": "2526040"
  },
  {
    "text": "is um it is a cluster on the other hand and this was true very true up to maybe",
    "start": "2526040",
    "end": "2533119"
  },
  {
    "text": "a year or two ago a lot of people when they look at the database they don't want to even think about even the",
    "start": "2533119",
    "end": "2539800"
  },
  {
    "text": "highest tier EBS is not the same performance as you get from local ssds with some NV is rolling in",
    "start": "2539800",
    "end": "2547200"
  },
  {
    "text": "and all that so in some cases you when we talk about the keeping computer",
    "start": "2547200",
    "end": "2555599"
  },
  {
    "text": "storage together I'm mostly talking about places where you really keep them physically together on the same box like",
    "start": "2555599",
    "end": "2562599"
  },
  {
    "text": "the way we used to sell Hadoop back in the day essentially where we you you",
    "start": "2562599",
    "end": "2568839"
  },
  {
    "text": "want to to maximize the there's lot of benefits for bringing computer storage together right like the reading from",
    "start": "2568839",
    "end": "2575200"
  },
  {
    "text": "storage for example is is way faster higher bandwidths and so and so on you have less bottlenecks in between which",
    "start": "2575200",
    "end": "2581760"
  },
  {
    "text": "are a lot of times a problem if you have the the separation so if you are going to put Compu storage",
    "start": "2581760",
    "end": "2590000"
  },
  {
    "text": "together put them really together otherwise you definitely don't get the full benefits of putting them together",
    "start": "2590000",
    "end": "2595480"
  },
  {
    "text": "and if you uh SE separate them out then H you need to separate them out to",
    "start": "2595480",
    "end": "2601559"
  },
  {
    "text": "storage that actually gives you the capabilities that you need and I Al I kind of hand wve but",
    "start": "2601559",
    "end": "2607440"
  },
  {
    "text": "it's also like there's lot of in between so so for example snowflake they use S3",
    "start": "2607440",
    "end": "2613960"
  },
  {
    "text": "as their offline storage that can be shared but the data nodes because they",
    "start": "2613960",
    "end": "2619280"
  },
  {
    "text": "are long lasting and they scale they don't scale out and so on they actually store a lot of data locally it's just",
    "start": "2619280",
    "end": "2626319"
  },
  {
    "text": "the local data they call it cash but it's cash sitting right there on ssds and has more space and the idea is that",
    "start": "2626319",
    "end": "2635000"
  },
  {
    "text": "they call it cash because if if you lose the entire machine they can rehydrate but uh it's so there I showed it as like",
    "start": "2635000",
    "end": "2642480"
  },
  {
    "text": "either this or that but there's actually a lot of variations in",
    "start": "2642480",
    "end": "2647680"
  },
  {
    "text": "between I have time for exactly one three minute",
    "start": "2654440",
    "end": "2659480"
  },
  {
    "text": "question okay I guess it was boring let's say uh maybe I can ask another",
    "start": "2663920",
    "end": "2671400"
  },
  {
    "text": "one so do you think actually there's a maybe a hybrid model of share nothing uh",
    "start": "2671400",
    "end": "2677960"
  },
  {
    "text": "and the uh uh storage and compute separate model because I think some of",
    "start": "2677960",
    "end": "2684839"
  },
  {
    "text": "the like um analytical databases now they claim that they can work with both",
    "start": "2684839",
    "end": "2689880"
  },
  {
    "text": "both models um you know I think maybe Starck is one of those they they claim",
    "start": "2689880",
    "end": "2695760"
  },
  {
    "text": "that if you want high performance you you need to import the data from cloud",
    "start": "2695760",
    "end": "2702680"
  },
  {
    "text": "storage to their own storage I think probably at that time they may need some you know uh cloud and U sorry computer",
    "start": "2702680",
    "end": "2709160"
  },
  {
    "text": "and uh uh storage you know bundle together uh but you can also just uh",
    "start": "2709160",
    "end": "2714720"
  },
  {
    "text": "read data remotely from a a cloud storage so you so what do you think about you know this kind of model no",
    "start": "2714720",
    "end": "2721000"
  },
  {
    "text": "it's fantastic I I I would go as far as I say that everything there is a",
    "start": "2721000",
    "end": "2726440"
  },
  {
    "text": "Continuum like I think there's very little in the pure BR CER computer",
    "start": "2726440",
    "end": "2733400"
  },
  {
    "text": "storage and there's very little in the fully decoupled and having more models that",
    "start": "2733400",
    "end": "2739800"
  },
  {
    "text": "allow you to place yourself in this continum because the whole goal is to optimize performance in certain",
    "start": "2739800",
    "end": "2745640"
  },
  {
    "text": "situations and to allow for scale out in other situations so the hybrid model",
    "start": "2745640",
    "end": "2751359"
  },
  {
    "text": "which say okay you have virtually unlimited storage because it's all on a",
    "start": "2751359",
    "end": "2756440"
  },
  {
    "text": "big storage cluster but you also get the performance for the the high performance",
    "start": "2756440",
    "end": "2762280"
  },
  {
    "text": "because we're reading you're loading things into a local machine I think this is what almost",
    "start": "2762280",
    "end": "2768680"
  },
  {
    "text": "everyone is doing behind the scenes so for me it's more do you want to have",
    "start": "2768680",
    "end": "2774200"
  },
  {
    "text": "this control over what you're building in or do you prefer your a vendor to more automatically do it based on what",
    "start": "2774200",
    "end": "2781000"
  },
  {
    "text": "they think they'll going to Le and they'll have their own cash policies so it's I it sounds like it may be more",
    "start": "2781000",
    "end": "2786640"
  },
  {
    "text": "about control and maybe this model gives you amazing performance for your situation and then some people would",
    "start": "2786640",
    "end": "2793480"
  },
  {
    "text": "prefer slightly less control and it may work for them okay I think we're at time thank",
    "start": "2793480",
    "end": "2800400"
  },
  {
    "text": "you so much [Applause]",
    "start": "2800400",
    "end": "2809039"
  },
  {
    "text": "[Music] everyone",
    "start": "2810530",
    "end": "2817800"
  }
]