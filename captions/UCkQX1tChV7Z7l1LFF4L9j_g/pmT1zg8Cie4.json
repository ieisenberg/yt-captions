[
  {
    "start": "0",
    "end": "89000"
  },
  {
    "text": "[Music]",
    "start": "2330",
    "end": "7680"
  },
  {
    "text": "good afternoon everyone um my name is Jeff Brown and I work for Pivotal pivotal is the organization behind uh",
    "start": "7680",
    "end": "14880"
  },
  {
    "text": "Groovy and Grails and a whole bunch of other technologies but uh I'm going to be talking uh uh pretty much about",
    "start": "14880",
    "end": "20800"
  },
  {
    "text": "Grails in particular today uh my email address is jgopivotal.com uh you can find me on",
    "start": "20800",
    "end": "26720"
  },
  {
    "text": "Twitter at jeffscott brown uh if you have any questions at all that uh that I can help you with um after we're done",
    "start": "26720",
    "end": "33200"
  },
  {
    "text": "today uh please let me know um and I'm uh I'll h I'm happy to help you with uh with anything that I",
    "start": "33200",
    "end": "39640"
  },
  {
    "text": "can um so just uh to to get started a quick show of hands how many of you have",
    "start": "39640",
    "end": "44960"
  },
  {
    "text": "done anything at all with Grails yeah a few very good so I'm going",
    "start": "44960",
    "end": "50559"
  },
  {
    "text": "to provide just a little bit of history about the framework and a little bit of overview and then we're going to jump uh quickly into uh uh into an application",
    "start": "50559",
    "end": "58079"
  },
  {
    "text": "and and play with uh play with some source code normally this is 90-minute session and the difference between 60",
    "start": "58079",
    "end": "64320"
  },
  {
    "text": "and 90 minutes is is maybe more than than you might think in a 90-minute session normally we can build build this",
    "start": "64320",
    "end": "69760"
  },
  {
    "text": "whole application that I'm going to talk about uh from scratch and it's really tough to do in 60 minutes so instead of",
    "start": "69760",
    "end": "75520"
  },
  {
    "text": "building the whole thing from scratch I've got a good bit of code written and we'll just pop that up and look at it and make some some small changes to it",
    "start": "75520",
    "end": "82320"
  },
  {
    "text": "um so I I think we should be in good shape to uh to get through all of this in 60 minutes so uh let's get started so",
    "start": "82320",
    "end": "89840"
  },
  {
    "start": "89000",
    "end": "215000"
  },
  {
    "text": "Grails is a a full stack uh framework for building web applications for the",
    "start": "89840",
    "end": "95520"
  },
  {
    "text": "JVM uh in particular for the JVM if you're targeting any other platform uh",
    "start": "95520",
    "end": "100799"
  },
  {
    "text": "Grails is uh Grails is not going to help you with that um Grails leverages uh a whole bunch of",
    "start": "100799",
    "end": "107119"
  },
  {
    "text": "existing technologies to to make up that that full stack so uh inside of Grails",
    "start": "107119",
    "end": "112799"
  },
  {
    "text": "is an OM tool and inside of Grails is a runtime environment a serlet container",
    "start": "112799",
    "end": "118159"
  },
  {
    "text": "for you to deploy your application um inside of Grails is a dependency injection container uh a logging",
    "start": "118159",
    "end": "124640"
  },
  {
    "text": "framework all that stuff that makes up a build tool all that stuff that makes up the full stack framework um most of that",
    "start": "124640",
    "end": "131039"
  },
  {
    "text": "or at least much of that is implemented uh by some other tool right we didn't write our own dependency injection",
    "start": "131039",
    "end": "136879"
  },
  {
    "text": "container for Grails we use Spring for doing dependency injection and uh we",
    "start": "136879",
    "end": "141920"
  },
  {
    "text": "didn't talk we didn't write uh really a full OM tool from the beginning we built a thing on top of Hibernate and we",
    "start": "141920",
    "end": "148640"
  },
  {
    "text": "didn't write our own build tool uh we took advantage of a technology called Gant so Grails is really made up it's",
    "start": "148640",
    "end": "154879"
  },
  {
    "text": "this full stack framework that is made up of a bunch of best of breed technologies for solving those kinds of",
    "start": "154879",
    "end": "161040"
  },
  {
    "text": "problems right the kinds of problems that show up in lots of web applications so we'll talk a little bit more about",
    "start": "161040",
    "end": "166800"
  },
  {
    "text": "some of those details in just a bit um Grails features uh a plug-in system",
    "start": "166800",
    "end": "172800"
  },
  {
    "text": "that's a really important part of the whole Grail story if you're going to do um Grails application development the",
    "start": "172800",
    "end": "179440"
  },
  {
    "text": "the plug-in system is an important part of that process you're going to want to take advantage of of a lot of plugins",
    "start": "179440",
    "end": "185120"
  },
  {
    "text": "that are out there you may end up writing some of your own plugins and a lot of the the cool stuff that we're going to look at today in this uh in",
    "start": "185120",
    "end": "190959"
  },
  {
    "text": "this little uh kind of simple Twitter clone that we're going to going to uh uh going to dig into uh a lot of this the",
    "start": "190959",
    "end": "197200"
  },
  {
    "text": "the cool stuff in that application has to do with behavior and functionality provided by plugins so uh just note for",
    "start": "197200",
    "end": "206159"
  },
  {
    "text": "now note that the plug-in system is a really important part of the Grails framework and I'm going to talk more",
    "start": "206159",
    "end": "212000"
  },
  {
    "text": "about that when we uh when we start looking at some code so this is a list of some of the",
    "start": "212000",
    "end": "218159"
  },
  {
    "start": "215000",
    "end": "474000"
  },
  {
    "text": "big players in that list of of best of breed technologies that I mentioned uh just a while ago right so Groovy is this",
    "start": "218159",
    "end": "225360"
  },
  {
    "text": "really powerful dynamic programming language for the JVM and Grails uses Groovy all over the place right we use",
    "start": "225360",
    "end": "231760"
  },
  {
    "text": "Groovy for for lots and lots of things uh of course Java is is part of the story here all of this is built on top",
    "start": "231760",
    "end": "238000"
  },
  {
    "text": "of the JVM uh we use Spring for dependency injection and transaction management and we use Spring for a lot",
    "start": "238000",
    "end": "244959"
  },
  {
    "text": "of things spring is really a core piece of of the Grails framework grails is built uh built on top of Spring we",
    "start": "244959",
    "end": "251760"
  },
  {
    "text": "bundle a version of Tomcat with uh with Grails so when you install Grails you've got a version of Tomcat there um you",
    "start": "251760",
    "end": "258959"
  },
  {
    "text": "wouldn't use that that particular copy to deploy your production applications but in your development environment you",
    "start": "258959",
    "end": "264320"
  },
  {
    "text": "there's a simple command you type grail space run app and what that does is it fires up an instance of Tomcat you don't",
    "start": "264320",
    "end": "270160"
  },
  {
    "text": "you don't have to know anything at all about Tomcat you don't even have to know that it is Tomcat but that's what's there you type Grails Run app and Tomcat",
    "start": "270160",
    "end": "277600"
  },
  {
    "text": "is started up your application is built and deployed to that Tomcat and you can start interacting with it in the browser",
    "start": "277600",
    "end": "282800"
  },
  {
    "text": "and we'll do some of that in just a bit um but uh that's bundled with a framework that's not something you have",
    "start": "282800",
    "end": "289120"
  },
  {
    "text": "to configure on your own before you can take advantage of that uh grills uh",
    "start": "289120",
    "end": "295280"
  },
  {
    "text": "includes this OM layer called Gorm Gorm uh OM is really a a tough problem to",
    "start": "295280",
    "end": "302560"
  },
  {
    "text": "solve um so the framework doesn't provide a full OM solution what the the",
    "start": "302560",
    "end": "307840"
  },
  {
    "text": "framework provides is a really really powerful and flexible and expressive layer called Gorm on top of some other",
    "start": "307840",
    "end": "314320"
  },
  {
    "text": "persistence engine and initially uh we built this on top of hibernate right hibernate is a a really powerful really",
    "start": "314320",
    "end": "320720"
  },
  {
    "text": "flexible and really popular OM tool for the JVM if you're writing Java applications that talk to a relational",
    "start": "320720",
    "end": "327919"
  },
  {
    "text": "database uh there's a there's a pretty good chance that you're using Hibernate to do that right hibernate is uh for a",
    "start": "327919",
    "end": "333520"
  },
  {
    "text": "long time has been kind of the deacto standard OM tool for the JVM so we built",
    "start": "333520",
    "end": "338720"
  },
  {
    "text": "Gorm on top of on top of Hibernate and then later on uh something that happened",
    "start": "338720",
    "end": "344240"
  },
  {
    "text": "is we really fully decoupled Gorm from from Hibernate and with recent versions",
    "start": "344240",
    "end": "349600"
  },
  {
    "text": "of Grails and it's been this way for uh for quite a while now you can pull Hibernate out and plug in some other",
    "start": "349600",
    "end": "356160"
  },
  {
    "text": "persistence engine so we've got uh there are a whole bunch of Gorm plugins there's the hibernate plugin that we",
    "start": "356160",
    "end": "361919"
  },
  {
    "text": "provide um there is there's a MongoDB plugin there's a Cassandra plugin and if",
    "start": "361919",
    "end": "367840"
  },
  {
    "text": "you invent a new data store uh this weekend and want to write a Gorm",
    "start": "367840",
    "end": "372960"
  },
  {
    "text": "implementation of that uh you could do that right so so we're set up now where we've got Gorm which is this OM",
    "start": "372960",
    "end": "378880"
  },
  {
    "text": "abstraction layer provided by the by the framework and uh it's pluggable so you can plug in lots of different persistent",
    "start": "378880",
    "end": "385280"
  },
  {
    "text": "persistence engines underneath the uh the Gorm layer generally when you're",
    "start": "385280",
    "end": "390400"
  },
  {
    "text": "writing uh persistence code in your Grails application you're not writing Hibernate for example hibernate is the",
    "start": "390400",
    "end": "396160"
  },
  {
    "text": "default persistence engine but you're not writing Hibernate code you're writing Gorm code and Grails the",
    "start": "396160",
    "end": "402080"
  },
  {
    "text": "Hibernate plugin that that you you would be using by default converts all that Gorm code into all the tedious Hibernate",
    "start": "402080",
    "end": "409039"
  },
  {
    "text": "bits so Hibernate is used to talk to the database but generally your application code is Gorm code not Hibernate code you",
    "start": "409039",
    "end": "416319"
  },
  {
    "text": "can poke down a layer below and get into the hibernate stuff directly if you like if you wanted to interact with a session",
    "start": "416319",
    "end": "422000"
  },
  {
    "text": "factory for example there's a really really simple way to do that but for the most part you don't have to do that you end up writing just gorm code and uh one",
    "start": "422000",
    "end": "429759"
  },
  {
    "text": "of the nice things about that is then you can pull hibernate out and replace it with MongoDB if that makes sense for",
    "start": "429759",
    "end": "435919"
  },
  {
    "text": "your application and for the most part your application code stays exactly the same because you weren't writing",
    "start": "435919",
    "end": "441440"
  },
  {
    "text": "hibernate code you were writing Gorm code and Gorm there there's an implementation for Gorm that knows how",
    "start": "441440",
    "end": "447120"
  },
  {
    "text": "to talk to MongoDB for example so we'll look at some of that when we uh when we dig into the the application source code",
    "start": "447120",
    "end": "454400"
  },
  {
    "text": "uh site mesh is another piece of technology here we use site mesh for uh page layout and page decoration the the",
    "start": "454400",
    "end": "461120"
  },
  {
    "text": "idea here is that Grails is this full stack framework and it leverages a whole bunch of other technologies um to make",
    "start": "461120",
    "end": "468400"
  },
  {
    "text": "uh that that address these common problems that that show up in lots and lots of web",
    "start": "468400",
    "end": "473560"
  },
  {
    "text": "applications uh so this is kind of a visual representation of how all of this is laid out all of this is uh is built",
    "start": "473560",
    "end": "480240"
  },
  {
    "start": "474000",
    "end": "528000"
  },
  {
    "text": "on top of the JVM right and that layer of technology there where you see site mesh and spring and hibernate there's a",
    "start": "480240",
    "end": "486639"
  },
  {
    "text": "bunch of other things there uh there are those three and log forj and the there are a whole bunch of technologies that",
    "start": "486639",
    "end": "492080"
  },
  {
    "text": "grails builds on top of uh so grails is built on top of all that stuff and groovy is kind of a thread that we use",
    "start": "492080",
    "end": "497919"
  },
  {
    "text": "to tie all of that together right so when you build a grails application uh",
    "start": "497919",
    "end": "503039"
  },
  {
    "text": "you're probably going to be taking advantage of spring and you're probably at least by default going to be taking advantage of hibernate but you never",
    "start": "503039",
    "end": "509360"
  },
  {
    "text": "have to write uh you never have to write any spring code and you never have to write any hibernate code you can when",
    "start": "509360",
    "end": "514719"
  },
  {
    "text": "that makes sense but there's you can get an awful long way down the road of taking advantage of those technologies",
    "start": "514719",
    "end": "520880"
  },
  {
    "text": "without having to interact with them uh directly grails kind of manages a lot of that for you right uh this is a a small",
    "start": "520880",
    "end": "529600"
  },
  {
    "start": "528000",
    "end": "547000"
  },
  {
    "text": "subset of a lot of the kind of bigname companies that have been using Grails for a long time netflix uh LinkedIn uh",
    "start": "529600",
    "end": "537120"
  },
  {
    "text": "you can see the list there so there are lots and lots of big enterprise serious enterprises out there that have been uh",
    "start": "537120",
    "end": "542720"
  },
  {
    "text": "have been using the framework for really for a long time now i mentioned before that the plug-in",
    "start": "542720",
    "end": "548800"
  },
  {
    "start": "547000",
    "end": "630000"
  },
  {
    "text": "system is a really important part of the hol grail story and uh this uh this graph is a couple years old uh but the",
    "start": "548800",
    "end": "555920"
  },
  {
    "text": "point is is correct so so in 2008 there were about 150 plugins in our public uh",
    "start": "555920",
    "end": "562320"
  },
  {
    "text": "plug-in portal and then in 2011 there were something like 600 and if we looked at the portal today we'd say there's",
    "start": "562320",
    "end": "568240"
  },
  {
    "text": "something like 900 right so there there are 900 and something plugins in our portal and there are plugins to do all",
    "start": "568240",
    "end": "574320"
  },
  {
    "text": "kinds of stuff stuff that shows up in in lots of web applications so for example if you're building a Grails application",
    "start": "574320",
    "end": "580959"
  },
  {
    "text": "and you want your Grails application to use captas uh there's no reason for you to have to write all that and solve that",
    "start": "580959",
    "end": "586560"
  },
  {
    "text": "problem yourself there are several capture plugins out in our repositories you can install one of those plugins and",
    "start": "586560",
    "end": "592880"
  },
  {
    "text": "then take advantage of it and and you you end up not having to solve the capture thing yourself right you're",
    "start": "592880",
    "end": "598160"
  },
  {
    "text": "using a plugin that solved that problem for you and now you get to spend more of your time and more of your effort",
    "start": "598160",
    "end": "603519"
  },
  {
    "text": "solving your business problem and not solving these these common web application problems so there are",
    "start": "603519",
    "end": "608640"
  },
  {
    "text": "capture plugins there are security plugins there are caching plug there are plugins for all of these problems that",
    "start": "608640",
    "end": "613839"
  },
  {
    "text": "that show up in lots of web applications and you want to take advantage of those like I said this this graph is out of",
    "start": "613839",
    "end": "620079"
  },
  {
    "text": "date if we extended this out to 2013 we'd see that the the trend has basically continued there there are uh",
    "start": "620079",
    "end": "626560"
  },
  {
    "text": "over 900 plugins in the portal right now so before we press on and get in",
    "start": "626560",
    "end": "631760"
  },
  {
    "text": "code any comments or questions about the framework at a high level at this point no thoughts all right very good",
    "start": "631760",
    "end": "640160"
  },
  {
    "text": "let's get to the fun bits so I'm going to jump into the IDE",
    "start": "640160",
    "end": "646079"
  },
  {
    "text": "here and like I said in instead of starting completely from scratch we've got some code in place that we're going",
    "start": "646079",
    "end": "652320"
  },
  {
    "text": "to use as a starting point the first thing I want to do is just start the application up and interact with it so",
    "start": "652320",
    "end": "658800"
  },
  {
    "text": "we can get a sense for what the application does right now and then we'll back away from that and look at some of the source code and get it get a",
    "start": "658800",
    "end": "664720"
  },
  {
    "text": "sense for what it takes to do some of these things um in a in a Grails application so what we've built is a a",
    "start": "664720",
    "end": "671600"
  },
  {
    "text": "really simple and trivial kind of Twitter clone so we'll see that I'm going to be able to once the container is up and running and it is up and",
    "start": "671600",
    "end": "677519"
  },
  {
    "text": "running right now so we can uh we can open a browser and send requests to this",
    "start": "677519",
    "end": "682680"
  },
  {
    "text": "URL and uh we have a a pretty lightweight simple Twitter clone here i",
    "start": "682680",
    "end": "688959"
  },
  {
    "text": "don't want to do this in the IDE i'm going to go open a real browser and do it out here all right",
    "start": "688959",
    "end": "695240"
  },
  {
    "text": "so we're interacting with the Grails application right now so like I said what we're going to do is is step through some functionality in the app",
    "start": "695240",
    "end": "701360"
  },
  {
    "text": "really quickly and then we'll back up and look at the technical details of how some of this happened all right so the",
    "start": "701360",
    "end": "707040"
  },
  {
    "text": "system supports authentication and it turns out it did that with very very little code we'll see what that what it took to make this the the security part",
    "start": "707040",
    "end": "713600"
  },
  {
    "text": "of this happen but there's very very little code in our application that relates to authentication so I'm going to log in as",
    "start": "713600",
    "end": "720360"
  },
  {
    "text": "Jeff like it says there my password is password if you try to log into my real",
    "start": "720360",
    "end": "725519"
  },
  {
    "text": "Twitter account my password is not password that will not work all right so",
    "start": "725519",
    "end": "730720"
  },
  {
    "text": "here is our Twitter interface uh it's the first time I've logged in so there's no data we don't we don't see anything",
    "start": "730720",
    "end": "736160"
  },
  {
    "text": "interesting so I'm going to update my Twitter status i'm going to say that I am at Jaxconf right and click update",
    "start": "736160",
    "end": "743920"
  },
  {
    "text": "status so here's my my first Twitter post is I'm at Jaxconf i'm still at Jaxconf right",
    "start": "743920",
    "end": "751920"
  },
  {
    "text": "there's another post on my Twitter timeline so I can I can keep posting messages and uh they'll show up in my",
    "start": "751920",
    "end": "759360"
  },
  {
    "text": "timeline here and I'm not going to go through the process of doing this but if we if we entered more than 10 we're only",
    "start": "759360",
    "end": "764880"
  },
  {
    "text": "going to see the most recent 10 there we'll look at the code the relevant code for that in just a bit all right so Jeff",
    "start": "764880",
    "end": "770639"
  },
  {
    "text": "is logged in he's posted some messages to his uh Twitter account and uh that that's the state that the system is in",
    "start": "770639",
    "end": "777120"
  },
  {
    "text": "so I'm going to log out and uh log back in as someone else i'll log in as",
    "start": "777120",
    "end": "783480"
  },
  {
    "text": "Graham and we see his timeline is empty there's nothing down at the bottom there i'll type uh Graham's first post right",
    "start": "783480",
    "end": "791920"
  },
  {
    "text": "so now his timeline is being populated he's got one thing in his timeline now we'll log back out and log back in as",
    "start": "791920",
    "end": "800720"
  },
  {
    "text": "me and my timeline is in the same state it was in before right we see I'm I'm at Jax comp i'm still at Jack Comp all",
    "start": "804040",
    "end": "810959"
  },
  {
    "text": "right so that that's all the interacting with the application we need to do for now um so let's just review what we can do so we can log in as a user i can post",
    "start": "810959",
    "end": "818639"
  },
  {
    "text": "some messages as that user i can log out and then I can repeat the process i can log in as a different user and post some",
    "start": "818639",
    "end": "824480"
  },
  {
    "text": "so all those those statuses are stored in a database right now one thing we",
    "start": "824480",
    "end": "829519"
  },
  {
    "text": "can't do is follow other people right there's nothing in the application to support that yet we're going to add that",
    "start": "829519",
    "end": "835440"
  },
  {
    "text": "it'll be really really simple but we can't do that so really all I can do with the application at this point is",
    "start": "835440",
    "end": "840720"
  },
  {
    "text": "post me post messages and view my own messages that's all I can do so it's not terribly interesting so far all right",
    "start": "840720",
    "end": "848000"
  },
  {
    "text": "notice uh down at the bottom that list of of status messages there you see several details you see Jeff",
    "start": "848000",
    "end": "854040"
  },
  {
    "text": "Brown said something and then you see a date right so so there's three pieces of",
    "start": "854040",
    "end": "859600"
  },
  {
    "text": "information there there's a person that's whoever posted the message there's the message and a date and time",
    "start": "859600",
    "end": "866000"
  },
  {
    "text": "that that message was posted let's go look at some source code and uh start",
    "start": "866000",
    "end": "871279"
  },
  {
    "text": "talking about some Grails features that relate to all of that so in my Grails application I've got a",
    "start": "871279",
    "end": "876399"
  },
  {
    "text": "domain class and a domain class is a special kind of artifact that uh Grails treats domain classes differently than",
    "start": "876399",
    "end": "882320"
  },
  {
    "text": "other classes one of the things that Grails does with all of your domain classes is it maps them to the database",
    "start": "882320",
    "end": "888160"
  },
  {
    "text": "right so this class has been mapped to the relational database that our that our application is using uh the class",
    "start": "888160",
    "end": "895120"
  },
  {
    "text": "this is the entire source code right here so I've defined a class called status a status has three properties it",
    "start": "895120",
    "end": "901440"
  },
  {
    "text": "has a message it has an author and it has a date created right when it was",
    "start": "901440",
    "end": "906480"
  },
  {
    "text": "created the message is just a string right it's whatever you typed in the user interface the author is of type",
    "start": "906480",
    "end": "913040"
  },
  {
    "text": "person we're going to look at that class in just a second so stand by on that and date created is uh",
    "start": "913040",
    "end": "920199"
  },
  {
    "text": "java.util.date all right so every status has three properties those three properties correspond to stuff that's",
    "start": "920199",
    "end": "926160"
  },
  {
    "text": "being displayed at the bottom of the page over there uh and this is the source code for that domain class so this is a Groovy class it's in a file",
    "start": "926160",
    "end": "932959"
  },
  {
    "text": "called status.groovy that's all valid Groovy code i don't need semicolons um all that code is is perfectly",
    "start": "932959",
    "end": "939639"
  },
  {
    "text": "valid let's look at the code that gets executed when I",
    "start": "939639",
    "end": "946079"
  },
  {
    "text": "type something in here that says this is my latest update and click update status",
    "start": "946079",
    "end": "952079"
  },
  {
    "text": "uh I want to look at the code behind that button what happens when I click update status so from the the user's",
    "start": "952079",
    "end": "957680"
  },
  {
    "text": "perspective what's happening is a new status message is being created and my timeline down at the bottom is",
    "start": "957680",
    "end": "962800"
  },
  {
    "text": "automatically updated with uh with that information uh so every time I fill out",
    "start": "962800",
    "end": "968399"
  },
  {
    "start": "966000",
    "end": "1169000"
  },
  {
    "text": "that form and click update status one of these things is being created and persisted to the database all right so",
    "start": "968399",
    "end": "974160"
  },
  {
    "text": "let's look at the code that that makes that happen so we've got a controller called status",
    "start": "974160",
    "end": "981000"
  },
  {
    "text": "controller and it's the only control it's the only relevant controller that we need to talk about right now and",
    "start": "981000",
    "end": "986800"
  },
  {
    "text": "inside of the status controller is this action right here called update status and that code is being executed so lines",
    "start": "986800",
    "end": "995040"
  },
  {
    "text": "20 through 24 there that code is being executed each time I fill out the form and click submit so this is the code",
    "start": "995040",
    "end": "1000560"
  },
  {
    "text": "that we want to evaluate really the interesting part of this at this point is line 20 so that says status",
    "start": "1000560",
    "end": "1007959"
  },
  {
    "text": "service.update status and we're passing a message as an argument the message uh",
    "start": "1007959",
    "end": "1014320"
  },
  {
    "text": "that's that's passed into our controller action here is whatever the user has typed into the form so if we go back to",
    "start": "1014320",
    "end": "1020800"
  },
  {
    "text": "the browser and view the source on this page what we'll see is that there is a",
    "start": "1020800",
    "end": "1028678"
  },
  {
    "text": "form an input field right here",
    "start": "1028679",
    "end": "1034640"
  },
  {
    "text": "uh that's not the right one this one down here there's a text area whose name is message right text area name equals",
    "start": "1034640",
    "end": "1041678"
  },
  {
    "text": "message ID equals message is what that says um so the name of that text area is",
    "start": "1041679",
    "end": "1046720"
  },
  {
    "text": "message when this form gets submitted Grails will do some interesting things with uh with the request parameters on",
    "start": "1046720",
    "end": "1053919"
  },
  {
    "text": "your behalf so the form is submitting to this controller action right here the update status controller action and",
    "start": "1053919",
    "end": "1061280"
  },
  {
    "text": "there's a parameter uh we've declared a parameter called message and what Grails",
    "start": "1061280",
    "end": "1066960"
  },
  {
    "text": "will do with that is it will look at the variable name message and when this controller action gets invoked Grails",
    "start": "1066960",
    "end": "1072880"
  },
  {
    "text": "will look to see if there's a request parameter with that name and if there is the value of that request parameter is",
    "start": "1072880",
    "end": "1079360"
  },
  {
    "text": "passed in here so so we don't see any code here that's dealing with request parameters or serlet stuff or any of",
    "start": "1079360",
    "end": "1085600"
  },
  {
    "text": "that gra is managing all of that for us all we had to do was to to declare a parameter called message and if I wanted",
    "start": "1085600",
    "end": "1092559"
  },
  {
    "text": "other pieces of data to be passed in here was it int number of something",
    "start": "1092559",
    "end": "1097760"
  },
  {
    "text": "right so with that if there was a request parameter called number of something Grails will automatically pass",
    "start": "1097760",
    "end": "1103679"
  },
  {
    "text": "the value of that request parameter into this controller action so you don't have to write any anything that interacts",
    "start": "1103679",
    "end": "1109280"
  },
  {
    "text": "with the request parameters directly you can but you don't have to right if all you if the only reason you're",
    "start": "1109280",
    "end": "1114880"
  },
  {
    "text": "interacting with the request parameters is to go grab particular values you can eliminate that and let the framework",
    "start": "1114880",
    "end": "1121600"
  },
  {
    "text": "pass the values into your controller action for you another way you could do this is you could say message equals",
    "start": "1121600",
    "end": "1127840"
  },
  {
    "text": "params uh message right we could get rid of",
    "start": "1127840",
    "end": "1134760"
  },
  {
    "text": "this now Grails is not going to pass anything in to our controller action the controller action doesn't accept any",
    "start": "1134760",
    "end": "1140960"
  },
  {
    "text": "arguments but now we've got this code that's uh explicitly or or directly interacting with the params object right",
    "start": "1140960",
    "end": "1147919"
  },
  {
    "text": "params is a map that includes all the request parameters so now I'm interacting with with that thing directly that's not terrible but we can",
    "start": "1147919",
    "end": "1154640"
  },
  {
    "text": "eliminate that by letting the framework know what pieces of information we need uh and we express that in the form of um",
    "start": "1154640",
    "end": "1162080"
  },
  {
    "text": "arguments to the controller action right questions about that is that good all right all right so",
    "start": "1162080",
    "end": "1170320"
  },
  {
    "start": "1169000",
    "end": "1358000"
  },
  {
    "text": "whatever the user typed into the form field is being passed into the update status action here and line 20 is really",
    "start": "1170320",
    "end": "1176400"
  },
  {
    "text": "the interesting bit that we're going to focus on and that is uh so it's invoking a method called update status on status",
    "start": "1176400",
    "end": "1183280"
  },
  {
    "text": "service so let's take a look at what status service is on line uh 10 there",
    "start": "1183280",
    "end": "1189120"
  },
  {
    "text": "we've got a property named status service declared in this controller and if we scrolled around all over this",
    "start": "1189120",
    "end": "1195039"
  },
  {
    "text": "controller you would see that there is no code any place that initializes status service so it looks like status",
    "start": "1195039",
    "end": "1201679"
  },
  {
    "text": "service should be null right but it turns out that that Grails is going to initialize that for us i I briefly",
    "start": "1201679",
    "end": "1209039"
  },
  {
    "text": "mentioned uh we talked a little bit about this status domain class earlier grails does special things with domain",
    "start": "1209039",
    "end": "1215520"
  },
  {
    "text": "classes right it maps them to the relational database and adds a bunch of special methods to them that we'll we'll talk about some of those in just a bit",
    "start": "1215520",
    "end": "1221760"
  },
  {
    "text": "but a domain class is a special kind of artifact to the framework uh there are other kinds of special artifacts that",
    "start": "1221760",
    "end": "1228080"
  },
  {
    "text": "mean different things to the framework and one of them is uh our service classes so if we look out here under",
    "start": "1228080",
    "end": "1234720"
  },
  {
    "text": "services in our application I've got a couple of services already created one of them is called status service that's",
    "start": "1234720",
    "end": "1241520"
  },
  {
    "text": "the source code we're looking at now we're going to talk about all this this top part in just a bit but inside of",
    "start": "1241520",
    "end": "1246799"
  },
  {
    "text": "this status service class is a method called update status",
    "start": "1246799",
    "end": "1252159"
  },
  {
    "text": "nowhere in our application is there any code that creates an instance of this class so as the application develop",
    "start": "1252159",
    "end": "1258640"
  },
  {
    "text": "developer we created this class called it status service and put it in a particular place in the directory",
    "start": "1258640",
    "end": "1264919"
  },
  {
    "text": "structure and that told the framework that this is a special class this is a service class so a service class means",
    "start": "1264919",
    "end": "1271600"
  },
  {
    "text": "something special to the framework one of the things that will happen to this class automatically without you having",
    "start": "1271600",
    "end": "1276720"
  },
  {
    "text": "to write any code is Grails will create an instance of this class and put it into the Spring application context and",
    "start": "1276720",
    "end": "1284000"
  },
  {
    "text": "the bean name in the Spring application context will be the class name lowercased right so the bean name is",
    "start": "1284000",
    "end": "1290400"
  },
  {
    "text": "going to be status service with a lowercase S up front so in the application in the spring application",
    "start": "1290400",
    "end": "1296159"
  },
  {
    "text": "context there will automatically be an instance of this class you don't do anything to make that happen grills will do that for you and then in addition to",
    "start": "1296159",
    "end": "1303360"
  },
  {
    "text": "that all Grails artifacts are automatically subjected to dependency injection uh dependency injection by",
    "start": "1303360",
    "end": "1310080"
  },
  {
    "text": "name one of the consequences of that is if I declare a property in a controller",
    "start": "1310080",
    "end": "1315280"
  },
  {
    "text": "for example called status service like we've got on line 10 there if there's a bean in the application context with",
    "start": "1315280",
    "end": "1321760"
  },
  {
    "text": "that name Grails will do the dependency injection for us so we don't have any code that creates a status service we",
    "start": "1321760",
    "end": "1328000"
  },
  {
    "text": "don't have any code that initializes this reference declared on line 10 but before our application code gets",
    "start": "1328000",
    "end": "1334960"
  },
  {
    "text": "executed all that stuff has happened right a status service object has been created it's been put in the context",
    "start": "1334960",
    "end": "1340400"
  },
  {
    "text": "it's been injected into this controller and the controller can directly interact with it right so down here on line 20",
    "start": "1340400",
    "end": "1346880"
  },
  {
    "text": "the controller is invoking this update status method on a thing that we never initialized but the framework",
    "start": "1346880",
    "end": "1352799"
  },
  {
    "text": "initialized it for us right does it make sense right all right so what we're doing",
    "start": "1352799",
    "end": "1359440"
  },
  {
    "start": "1358000",
    "end": "1536000"
  },
  {
    "text": "there on line 20 is invoking update status on that object and passing message as an argument remember that",
    "start": "1359440",
    "end": "1364960"
  },
  {
    "text": "message is the string that the user typed into the uh into the form there so let's look at that update status method",
    "start": "1364960",
    "end": "1371840"
  },
  {
    "text": "uh so line 26 is creating a new status object remember status is this thing we",
    "start": "1371840",
    "end": "1378240"
  },
  {
    "text": "looked at over here right a status has a message an author and a date created",
    "start": "1378240",
    "end": "1383280"
  },
  {
    "text": "message author and date created the service is creating one of those on line 26 and initializing the message property",
    "start": "1383280",
    "end": "1390960"
  },
  {
    "text": "only the message property is being initialized on line 26 so the other two properties are uninitialized so far and",
    "start": "1390960",
    "end": "1396880"
  },
  {
    "text": "that is the date created is not initialized and the author the person who posted this message has not been",
    "start": "1396880",
    "end": "1402919"
  },
  {
    "text": "initialized the author is initialized on the next line right 26 line 26 says",
    "start": "1402919",
    "end": "1408240"
  },
  {
    "text": "status.author author equals lookup current person and lookup current person is uh retrieving some information from",
    "start": "1408240",
    "end": "1414320"
  },
  {
    "text": "the security plugin to figure out who's logged in i don't want to get distracted with that pit right now what I want to",
    "start": "1414320",
    "end": "1420080"
  },
  {
    "text": "notice is that by the time the thing is saved to the database when line 28 executes status uh the message of the",
    "start": "1420080",
    "end": "1427760"
  },
  {
    "text": "status has been initialized and the author has been initialized but the date created has not been initialized right",
    "start": "1427760",
    "end": "1434080"
  },
  {
    "text": "no place we don't see any code here that's assigning a value to date created so we might want to do something like",
    "start": "1434080",
    "end": "1439120"
  },
  {
    "text": "this we might say status date created equals new date right we want it to be right now right that's what time the",
    "start": "1439120",
    "end": "1445679"
  },
  {
    "text": "message was posted but we don't need that we don't need that code it turns out that date created is a special",
    "start": "1445679",
    "end": "1452559"
  },
  {
    "text": "property name that means something to to Gorm so when Gorm objects are persisted",
    "start": "1452559",
    "end": "1457840"
  },
  {
    "text": "to the database if there's a property in the domain class called date created and",
    "start": "1457840",
    "end": "1462960"
  },
  {
    "text": "its type is a date uh Gorm automatically initializes that thing and that that's a common thing right often you have a a",
    "start": "1462960",
    "end": "1470880"
  },
  {
    "text": "timestamp or a date associated with an object and you want that to automatically be initialized with with a",
    "start": "1470880",
    "end": "1476480"
  },
  {
    "text": "value that represents whatever time that object was created so instead of every Grails application that wants that",
    "start": "1476480",
    "end": "1482640"
  },
  {
    "text": "behavior having to to repeat that logic over and over and over again the OM tool solves that for you right so if you",
    "start": "1482640",
    "end": "1488720"
  },
  {
    "text": "declare a property in a domain class called date created uh it will automatically be initialized you'll",
    "start": "1488720",
    "end": "1494080"
  },
  {
    "text": "never need to in fact you shouldn't ever initialize that property uh the or the OM tool will initialize that property",
    "start": "1494080",
    "end": "1500400"
  },
  {
    "text": "for you right so our status service update status method creates a status object",
    "start": "1500400",
    "end": "1506720"
  },
  {
    "text": "initializes the message initializes the author and saves the status object so",
    "start": "1506720",
    "end": "1512159"
  },
  {
    "text": "when line 28 executes that object is persisted to the database right uh so",
    "start": "1512159",
    "end": "1518080"
  },
  {
    "text": "we're invoking the save method on the status object the status object is an instance of the status class if we go",
    "start": "1518080",
    "end": "1524799"
  },
  {
    "text": "look at the status class there is no save method here right there there's no if there were a save method it might",
    "start": "1524799",
    "end": "1530720"
  },
  {
    "text": "look something like this right save and then some code in here to uh talk to the database uh but we didn't have to write",
    "start": "1530720",
    "end": "1537520"
  },
  {
    "start": "1536000",
    "end": "1860000"
  },
  {
    "text": "that code that that code exists but we didn't have to write it um one of the things that Grails does to all domain",
    "start": "1537520",
    "end": "1544880"
  },
  {
    "text": "classes is it adds a method to every one of them called save and the save method",
    "start": "1544880",
    "end": "1550080"
  },
  {
    "text": "does whatever it takes to persist that object to the database so if we're using Hibernate the save method will do one",
    "start": "1550080",
    "end": "1556720"
  },
  {
    "text": "thing and if we're using the save method will do another thing and if we're using Cassandra the same method will do a different thing but all this",
    "start": "1556720",
    "end": "1562640"
  },
  {
    "text": "code all of our application code stays exactly the same so we pull out the hibernate plugin and and push in the",
    "start": "1562640",
    "end": "1568080"
  },
  {
    "text": "MongoDB plugin and all this is still works right we don't have hibernate queries to address we don't uh the OM",
    "start": "1568080",
    "end": "1576080"
  },
  {
    "text": "abstraction layer is managing all that for us right make",
    "start": "1576080",
    "end": "1581720"
  },
  {
    "text": "sense questions or comments about any of that yes sir yeah so how do you express",
    "start": "1581720",
    "end": "1587360"
  },
  {
    "text": "that a class is a domain class as opposed to a service or some other artifact type uh it's a good question so",
    "start": "1587360",
    "end": "1593760"
  },
  {
    "text": "in your Grails application let's take a look at what the file system looks like for our Grails app right out here there",
    "start": "1593760",
    "end": "1602000"
  },
  {
    "text": "we go grails Twitter is the one we're after um on the on the file system is a",
    "start": "1602000",
    "end": "1608240"
  },
  {
    "text": "directory called Grails-app and below grails-app are some folders like controllers and domain and",
    "start": "1608240",
    "end": "1615679"
  },
  {
    "text": "services and taglib um those directories they they have to have those names those",
    "start": "1615679",
    "end": "1620720"
  },
  {
    "text": "are names that mean something to the framework they're automatically created when you create uh when you create a grails application and uh so all over",
    "start": "1620720",
    "end": "1629440"
  },
  {
    "text": "the place grails leverages this really powerful idea of convention over configuration convention over",
    "start": "1629440",
    "end": "1635120"
  },
  {
    "text": "configuration if you follow a convention that takes the place of what would otherwise be a configuration burden so",
    "start": "1635120",
    "end": "1642559"
  },
  {
    "text": "typically when you write a Java application say that's going to use Hibernate you've got to configure",
    "start": "1642559",
    "end": "1647600"
  },
  {
    "text": "Hibernate to know about your domain classes you have to tell it about all of your entities right it's what Hibernate",
    "start": "1647600",
    "end": "1652720"
  },
  {
    "text": "refers to them as so you don't want to map every class in the JVM to the database that that's crazy that would",
    "start": "1652720",
    "end": "1658559"
  },
  {
    "text": "wouldn't work you don't want to do that right you want to map a subset of your classes to the database and you have to tell Hibernate about that and one way to",
    "start": "1658559",
    "end": "1665200"
  },
  {
    "text": "do that is to write hibernate XML files and use their syntax and do all of that another way to do that is to annotate",
    "start": "1665200",
    "end": "1671919"
  },
  {
    "text": "your classes with that entity and and do that thing but somehow you have to tell hibernate about which of your classes",
    "start": "1671919",
    "end": "1678640"
  },
  {
    "text": "should be mapped to the database the same is true inside of Grails but the technique is different",
    "start": "1678640",
    "end": "1684159"
  },
  {
    "text": "right the the way you express that something is a domain class in Grails is you declare it under this domain",
    "start": "1684159",
    "end": "1690000"
  },
  {
    "text": "directory right so at the top of your project is a folder called grails-appdomain and if you declare a",
    "start": "1690000",
    "end": "1696799"
  },
  {
    "text": "class under that directory it's a domain class that's it there's no configuration file there's no annotations there's no",
    "start": "1696799",
    "end": "1703159"
  },
  {
    "text": "XML if you declare a class under the domain directory it's a domain class so",
    "start": "1703159",
    "end": "1708399"
  },
  {
    "text": "that class will have a save method added to it that class will um it'll",
    "start": "1708399",
    "end": "1714000"
  },
  {
    "text": "everything that Grails does to domain classes it will do to every single class under the domain directory so the way",
    "start": "1714000",
    "end": "1719039"
  },
  {
    "text": "that you express that a class is a domain class is you declare it under the domain directory and similar rules apply",
    "start": "1719039",
    "end": "1725520"
  },
  {
    "text": "to all the other artifact types right so our status service is declared under this Grails app services directory and",
    "start": "1725520",
    "end": "1732399"
  },
  {
    "text": "the class name ends in service so if you declare a class under Grail app services",
    "start": "1732399",
    "end": "1737760"
  },
  {
    "text": "and the class name ends in service it's a service and there's a whole bunch of special stuff that happens to",
    "start": "1737760",
    "end": "1744120"
  },
  {
    "text": "services right uh the question was is it possible to override the save is that is",
    "start": "1744120",
    "end": "1749440"
  },
  {
    "text": "that what you said it is possible so Groovy makes it Groovy is a dynamic programming language and there there's",
    "start": "1749440",
    "end": "1754960"
  },
  {
    "text": "uh that means a lot of things uh one of the things you can do with dynamic languages like Groovy that you cannot do",
    "start": "1754960",
    "end": "1760240"
  },
  {
    "text": "with statically typeyped languages like uh like Java is you can add methods to classes at runtime and you can change",
    "start": "1760240",
    "end": "1766720"
  },
  {
    "text": "the behavior of classes at runtime uh and it's really a pretty simple thing to do it turns out that you can replace the",
    "start": "1766720",
    "end": "1773520"
  },
  {
    "text": "save method if you want but there are good reasons not to do that for a method like save in particular um if your",
    "start": "1773520",
    "end": "1780240"
  },
  {
    "text": "application is using plugins that are relying on a certain behavior of that save method you might be uh complicating",
    "start": "1780240",
    "end": "1785360"
  },
  {
    "text": "things there uh so so the bottom line is if you wanted to replace the save method you could but you probably don't want to",
    "start": "1785360",
    "end": "1791120"
  },
  {
    "text": "do that whatever it is that you're going to do in your version of the save method you should probably call it something else like save fast or save slow or",
    "start": "1791120",
    "end": "1797840"
  },
  {
    "text": "whatever um you can add a new method that's not save it's called something else and your method does whatever you",
    "start": "1797840",
    "end": "1804000"
  },
  {
    "text": "like and then the the official or the original save method is there and you're just not using it um so you can replace",
    "start": "1804000",
    "end": "1811360"
  },
  {
    "text": "the save method but you probably don't want to do that all right so uh our service class",
    "start": "1811360",
    "end": "1817520"
  },
  {
    "text": "here creates an instance of the class populates its properties saves the thing to the database and uh um all of that",
    "start": "1817520",
    "end": "1824559"
  },
  {
    "text": "stuff that I just described happens right date created is automatically initialized with right now so when we",
    "start": "1824559",
    "end": "1830000"
  },
  {
    "text": "look back at my timeline we see that each of those things has a time stamp associated with them the first one was",
    "start": "1830000",
    "end": "1835440"
  },
  {
    "text": "created at 516 516 519 so forth all right uh let's uh let's add a",
    "start": "1835440",
    "end": "1844799"
  },
  {
    "text": "piece of functionality to our application so I am going",
    "start": "1844799",
    "end": "1851520"
  },
  {
    "text": "to Twitter what do we got here we want to yeah so let me look at let's take a",
    "start": "1851880",
    "end": "1859600"
  },
  {
    "text": "look at that person class remember that a status has a property of type person",
    "start": "1859600",
    "end": "1867840"
  },
  {
    "start": "1860000",
    "end": "2249000"
  },
  {
    "text": "right the the so every status has a message date created and an author the author is of type person here is our",
    "start": "1867840",
    "end": "1875360"
  },
  {
    "text": "person class and the person class has a number of properties in it has a real name like Jeff Brown has a username like",
    "start": "1875360",
    "end": "1881760"
  },
  {
    "text": "J Brown has a password that is whatever my password is and then some boolean attributes that uh control whether this",
    "start": "1881760",
    "end": "1888559"
  },
  {
    "text": "account is enabled or locked or expired or whatever all of that is uh uh this",
    "start": "1888559",
    "end": "1894720"
  },
  {
    "text": "was generated for us by a security plugin that I installed into the application before we started today um",
    "start": "1894720",
    "end": "1900720"
  },
  {
    "text": "so I don't want to get too far down the security path but uh this class represents a user that can authenticate",
    "start": "1900720",
    "end": "1907519"
  },
  {
    "text": "into the system so when I fill out the login form and I type in Jeff and put in my password the system is looking in the",
    "start": "1907519",
    "end": "1914080"
  },
  {
    "text": "database for an instance of this class that matches the username and password that that I entered all right so a",
    "start": "1914080",
    "end": "1920080"
  },
  {
    "text": "person has a real name a username a password and some other attributes line 12 is what I want to talk about right",
    "start": "1920080",
    "end": "1925600"
  },
  {
    "text": "now um so has many and the person class is a domain class right the users are",
    "start": "1925600",
    "end": "1931039"
  },
  {
    "text": "persisted in the database uh so line 12 declares a property called has many and",
    "start": "1931039",
    "end": "1937039"
  },
  {
    "text": "the value assigned to that has many is a map right so Groovy has a literal syntax for defining maps and the way that works",
    "start": "1937039",
    "end": "1944240"
  },
  {
    "text": "is you can say uh so like map some map equals name",
    "start": "1944240",
    "end": "1951320"
  },
  {
    "text": "JSB town I live in St louis zip is right so the the way the",
    "start": "1951320",
    "end": "1958480"
  },
  {
    "text": "the syntax for maps work in Groovy is inside of square brackets you can have these commaepparated list of key value",
    "start": "1958480",
    "end": "1964720"
  },
  {
    "text": "pairs so that's a key value pair right the key is name and the value is JSB uh",
    "start": "1964720",
    "end": "1970320"
  },
  {
    "text": "the key is town and the value is STL right so the the map that's declared on",
    "start": "1970320",
    "end": "1975600"
  },
  {
    "text": "line 12 has just one entry in it the key is the word followed that could be anything we just called it followed and",
    "start": "1975600",
    "end": "1982559"
  },
  {
    "text": "the value is a a type it's a class right so what we're expressing there really a",
    "start": "1982559",
    "end": "1988480"
  },
  {
    "text": "whole bunch of stuff happens because of line 12 right has many means something special to Gorm if you declare a has",
    "start": "1988480",
    "end": "1995279"
  },
  {
    "text": "many property in a domain class and initialize it with a map like this a bunch of special stuff's going to happen",
    "start": "1995279",
    "end": "2000799"
  },
  {
    "text": "one of the things that's going to happen is Gorm will add a property to this",
    "start": "2000799",
    "end": "2006679"
  },
  {
    "text": "class with this name right followed the key in the map and that property will be",
    "start": "2006679",
    "end": "2012799"
  },
  {
    "text": "a set and it will be a set of those things right the thing that's the value",
    "start": "2012799",
    "end": "2017840"
  },
  {
    "text": "in the map that's associated with followed so I could add another thing here i could say",
    "start": "2017840",
    "end": "2024600"
  },
  {
    "text": "um let's say we had a city domain class so I could add another entry to this map",
    "start": "2024600",
    "end": "2030080"
  },
  {
    "text": "and now a person has a followed collection and a person has a town's collection and the town's collection",
    "start": "2030080",
    "end": "2037039"
  },
  {
    "text": "would uh basically be this right all right so you can put as many entries in that map as you like um so we're going",
    "start": "2037039",
    "end": "2043039"
  },
  {
    "text": "to go back to what we started with which was just one entry in the map so what that entry is about is every person we",
    "start": "2043039",
    "end": "2050960"
  },
  {
    "text": "want people to be able to follow other people in Twitter right so in the database we somehow need need to model",
    "start": "2050960",
    "end": "2057280"
  },
  {
    "text": "all of that um so we've already got uh stuff in place to persist person objects and we want to associate them with each",
    "start": "2057280",
    "end": "2063839"
  },
  {
    "text": "other somehow and that's what this followed property is about so every person has a set called followed and we",
    "start": "2063839",
    "end": "2071520"
  },
  {
    "text": "can populate that with other person objects so when Jeff posts some messages and Graham posts some messages if Jeff",
    "start": "2071520",
    "end": "2078158"
  },
  {
    "text": "is following Graham I want to see Graham's messages in the timeline right does that make sense so",
    "start": "2078159",
    "end": "2085358"
  },
  {
    "text": "we don't need to declare line 14 that that happens line 14 happens because of line 12 so the has many causes that",
    "start": "2085359",
    "end": "2092720"
  },
  {
    "text": "property to be added to this uh to this class all right um in our",
    "start": "2092720",
    "end": "2098440"
  },
  {
    "text": "application there's a form for searching for other users up here at the top right",
    "start": "2098440",
    "end": "2104480"
  },
  {
    "text": "and if I type in Graham here and click search for you uh well I stopped the application um but what would happen if",
    "start": "2104480",
    "end": "2111119"
  },
  {
    "text": "I started the application back up when I fill out that form I should see a list of all the person objects that match the",
    "start": "2111119",
    "end": "2117760"
  },
  {
    "text": "the criteria that I entered and to make that happen I'm going to add just really just one line of code to the person",
    "start": "2117760",
    "end": "2125960"
  },
  {
    "text": "class and that is this line so I've added line 13 line 13 says static",
    "start": "2125960",
    "end": "2131599"
  },
  {
    "text": "searchable equals and then there's some data there that describes um provides",
    "start": "2131599",
    "end": "2137119"
  },
  {
    "text": "some details for what I how I want to be able to search for person objects uh so",
    "start": "2137119",
    "end": "2142400"
  },
  {
    "text": "I only want to be able to search for real name so if I send a request into the search engine that we'll we'll talk",
    "start": "2142400",
    "end": "2148160"
  },
  {
    "text": "a little bit about in more detail in just a second but if I send a request into the search engine that says find me",
    "start": "2148160",
    "end": "2153520"
  },
  {
    "text": "all the records that match Jeff what I'm expressing on line 13 there is I only",
    "start": "2153520",
    "end": "2158880"
  },
  {
    "text": "want to search um the real name property that's this property right now so if",
    "start": "2158880",
    "end": "2164000"
  },
  {
    "text": "someone's password is Jeff I don't want to match that and if their username happens to be Jeff we're not going to match that we only want to search for we",
    "start": "2164000",
    "end": "2172240"
  },
  {
    "text": "only want to search across the real name column in the database if you will so let's get our application back up and",
    "start": "2172240",
    "end": "2179880"
  },
  {
    "text": "running um and that's all the code in the whole application there's no other code related to searching that I had in",
    "start": "2179880",
    "end": "2186560"
  },
  {
    "text": "place before uh the only code that we're going to have to provide related to searching is line 13 and we get some",
    "start": "2186560",
    "end": "2193040"
  },
  {
    "text": "really sophisticated really powerful search capabilities and uh we'll talk about where that's coming from in just a",
    "start": "2193040",
    "end": "2199079"
  },
  {
    "text": "second all right so our application's back up and running we'll go here to our",
    "start": "2199079",
    "end": "2204400"
  },
  {
    "text": "status controller and I'll log in as Jeff",
    "start": "2204400",
    "end": "2209720"
  },
  {
    "text": "password jeff one jeff two right so I've got a couple",
    "start": "2209720",
    "end": "2217520"
  },
  {
    "text": "of statuses uh a couple of statuses posted there i've got Jeff one blank one i clicked",
    "start": "2217520",
    "end": "2223920"
  },
  {
    "text": "submit twice and then I've got Jeff 2 if I go up here in the search box and type",
    "start": "2223920",
    "end": "2229440"
  },
  {
    "text": "uh Graham and click enter we get it's a lame user interface right but I get a",
    "start": "2229440",
    "end": "2235599"
  },
  {
    "text": "list of all the people in the database that match that search criteria and there's only one right if so if there were a whole bunch of grams we'd see a",
    "start": "2235599",
    "end": "2242240"
  },
  {
    "text": "list that included included all of them this is a list of all the records in the database that match that that search",
    "start": "2242240",
    "end": "2247599"
  },
  {
    "text": "criteria um and whatever complexity is involved in executing that search um",
    "start": "2247599",
    "end": "2253119"
  },
  {
    "start": "2249000",
    "end": "2404000"
  },
  {
    "text": "there's complicated indexing and all kinds of crazy performance stuff going on i didn't have to write any of that um",
    "start": "2253119",
    "end": "2258480"
  },
  {
    "text": "all I had to do is express that the real name property of person objects are",
    "start": "2258480",
    "end": "2263839"
  },
  {
    "text": "searchable right and the way I did that with was with line 13 in my Grails application under the",
    "start": "2263839",
    "end": "2270400"
  },
  {
    "text": "the conf folder there'll be a file called build config and this is where you configure some of the things about",
    "start": "2270400",
    "end": "2276240"
  },
  {
    "text": "about your build one of the things that I've expressed in my build config is that this project has a compile time",
    "start": "2276240",
    "end": "2282960"
  },
  {
    "text": "dependency on version 0.6.3 of a plugin called searchable",
    "start": "2282960",
    "end": "2288240"
  },
  {
    "text": "right and we see there a number of other plugins that we're using there as well the searchable plugin is uh the plugin",
    "start": "2288240",
    "end": "2294640"
  },
  {
    "text": "that's providing all of the the search capability right the searchable plugin will look through all of your domain classes and try to find uh this",
    "start": "2294640",
    "end": "2302000"
  },
  {
    "text": "searchable property and if the searchable property is there the searchable plugin will uh take that",
    "start": "2302000",
    "end": "2307520"
  },
  {
    "text": "domain class and configure it in the with all the complicated search capability provided by the searchable",
    "start": "2307520",
    "end": "2313680"
  },
  {
    "text": "plugin so there's nothing in the core of grails that does search for you um there's nothing in our application code",
    "start": "2313680",
    "end": "2320400"
  },
  {
    "text": "here in the Twitter application code that does searching so what we did was installed the searchable plugin and",
    "start": "2320400",
    "end": "2325920"
  },
  {
    "text": "expressed some metadata about what I want to be indexed by the search engine and now I get search capabilities in my",
    "start": "2325920",
    "end": "2331599"
  },
  {
    "text": "application yes so I I think the question was is so",
    "start": "2331599",
    "end": "2336720"
  },
  {
    "text": "when I execute a search am I searching for all real name properties so right now the person class has a real name",
    "start": "2336720",
    "end": "2342880"
  },
  {
    "text": "property what if there was a real name property in some other class would we be searching those columns as well is that",
    "start": "2342880",
    "end": "2348400"
  },
  {
    "text": "the question yeah so let's take a look at that so when you execute a search how do how do we know what we're how would",
    "start": "2348400",
    "end": "2355040"
  },
  {
    "text": "you know what what is actually going to be searched if we look at the controller action",
    "start": "2355040",
    "end": "2362680"
  },
  {
    "text": "uh well let's take a look at the view that generates this page that'll help us uh that'll help us get there so let's go",
    "start": "2363880",
    "end": "2371359"
  },
  {
    "text": "look at Grails app views i'm not seeing",
    "start": "2371359",
    "end": "2377520"
  },
  {
    "text": "that here we go grails apps",
    "start": "2377880",
    "end": "2384000"
  },
  {
    "text": "slashstatus index All right back to the browser for just a",
    "start": "2384040",
    "end": "2390160"
  },
  {
    "text": "minute uh I want to go back and look at this page so the page that initiates the search is this is the page that",
    "start": "2390160",
    "end": "2395760"
  },
  {
    "text": "initiates the search and there are two forms on this page uh this form up top that allows you to execute searches and",
    "start": "2395760",
    "end": "2401440"
  },
  {
    "text": "there's another form down here that allows you to update your statuses right so we want to look at that top form and",
    "start": "2401440",
    "end": "2406800"
  },
  {
    "start": "2404000",
    "end": "2509000"
  },
  {
    "text": "this is that form um so this form if you look at line 10 there it says G colon",
    "start": "2406800",
    "end": "2413200"
  },
  {
    "text": "form controller equals searchable name equals user search form um this is when",
    "start": "2413200",
    "end": "2419440"
  },
  {
    "text": "this form is submitted the form is going to submit to a controller called searchable and we don't have a",
    "start": "2419440",
    "end": "2424960"
  },
  {
    "text": "searchable controller in our application the only controller in our application is the status controller um but the",
    "start": "2424960",
    "end": "2430560"
  },
  {
    "text": "searchable plugin provides a searchable controller so when we fill out this form and click click search we're executing",
    "start": "2430560",
    "end": "2437359"
  },
  {
    "text": "code provided by the plugin we didn't we don't have a searchable controller but there's a searchable controller provided",
    "start": "2437359",
    "end": "2442880"
  },
  {
    "text": "by the plugin and that controller allows you to specify information like uh what",
    "start": "2442880",
    "end": "2449040"
  },
  {
    "text": "are your query parameters and the way to specify your query parameters is to send in a request parameter called Q and it",
    "start": "2449040",
    "end": "2456400"
  },
  {
    "text": "turns out that our text field has a parameter called Q right so we're doing just the the simplest thing here but the",
    "start": "2456400",
    "end": "2462880"
  },
  {
    "text": "it turns out that the plug-in provides capability to allow you to specify things like um uh which classes do you",
    "start": "2462880",
    "end": "2469040"
  },
  {
    "text": "want to search across uh you get to express declaratively in your domain classes which properties in those",
    "start": "2469040",
    "end": "2474880"
  },
  {
    "text": "classes get searched the way this is written right now we're we're not specifying anything other than the",
    "start": "2474880",
    "end": "2480800"
  },
  {
    "text": "search criteria so when we execute a search everything that's indexed is going to be searched it turns out that",
    "start": "2480800",
    "end": "2487280"
  },
  {
    "text": "the only thing that's indexed in our application is the real name property of person objects but if we wanted to get",
    "start": "2487280",
    "end": "2493359"
  },
  {
    "text": "do more sophisticated searching stuff we could do that it just turns out that our application is using is doing only the",
    "start": "2493359",
    "end": "2499680"
  },
  {
    "text": "most simple thing yeah yeah so if in our status class if we had a property that",
    "start": "2499680",
    "end": "2506440"
  },
  {
    "text": "was searchable which we don't but if we did have so if message was searchable",
    "start": "2506440",
    "end": "2511680"
  },
  {
    "start": "2509000",
    "end": "2611000"
  },
  {
    "text": "here that the way that our our search form is written right now we'd be searching for persons that have a real name that match Jeff as well as statuses",
    "start": "2511680",
    "end": "2519440"
  },
  {
    "text": "that have a message that match match Jeff the way that it's written right now that's what would happen everything that's indexed is being searched it just",
    "start": "2519440",
    "end": "2525760"
  },
  {
    "text": "turns out the only thing we've indexed for this simple example is the real name property in person objects all right so back to our",
    "start": "2525760",
    "end": "2532640"
  },
  {
    "text": "application when I click search for users uh we get a list of all the people that uh matched our search criteria and",
    "start": "2532640",
    "end": "2539839"
  },
  {
    "text": "I want to click follow here to express that Jeff wants to follow Graham all right so Jeff has posted two things",
    "start": "2539839",
    "end": "2547520"
  },
  {
    "text": "jeff's going to post a third thing and Jeff is following Graham right now rather than log out I'm going to start",
    "start": "2547520",
    "end": "2553760"
  },
  {
    "text": "up a different browser so I can have Jeff and Graham logged in concurrently so this is Jeff back here",
    "start": "2553760",
    "end": "2562400"
  },
  {
    "text": "and over here I'm going to log in as Graham so in Firefox we are",
    "start": "2562400",
    "end": "2568440"
  },
  {
    "text": "Graham all right so Graham doesn't have any status messages posted right i'm",
    "start": "2568440",
    "end": "2574160"
  },
  {
    "text": "going to post uh Graham one and Graham",
    "start": "2574160",
    "end": "2580200"
  },
  {
    "text": "two right uh the only things that show up down here are Graham's messages not Jeff's messages only Graham's messages",
    "start": "2580200",
    "end": "2587280"
  },
  {
    "text": "and if I go back here to Jeff's messages and refresh this page we still don't see",
    "start": "2587280",
    "end": "2592319"
  },
  {
    "text": "any Graham messages even though I expressed that I wanted to uh that I wanted to follow Graham right so let's",
    "start": "2592319",
    "end": "2598319"
  },
  {
    "text": "look at the code look and see what it would take to to make that work what I want to happen is if Jeff is following",
    "start": "2598319",
    "end": "2603520"
  },
  {
    "text": "Graham then when Jeff's timeline will include Jeff's messages as well as Graham's messages so let's uh let's take",
    "start": "2603520",
    "end": "2609599"
  },
  {
    "text": "a look at that so we talked about the followed property on line 12 line 12 is",
    "start": "2609599",
    "end": "2615440"
  },
  {
    "start": "2611000",
    "end": "2669000"
  },
  {
    "text": "expressing that every person has a set of other person objects that they're following and if we go back to our",
    "start": "2615440",
    "end": "2621599"
  },
  {
    "text": "status controller and look uh right here this method right here the follow method is",
    "start": "2621599",
    "end": "2628319"
  },
  {
    "text": "what got invoked when I searched for Graham and then clicked the follow link this this happened and what that's doing",
    "start": "2628319",
    "end": "2633359"
  },
  {
    "text": "is populating that set i'm not going to uh go I don't want to get distracted with that code right now but what what's",
    "start": "2633359",
    "end": "2639599"
  },
  {
    "text": "happening uh when we invoke that follow method on line 28 is the Graham Graham's",
    "start": "2639599",
    "end": "2645359"
  },
  {
    "text": "person object is being added to the followed list for Jeff right so the two are uh Jeff now has uh another person",
    "start": "2645359",
    "end": "2652960"
  },
  {
    "text": "object in that that set called followed if we go look at the status service",
    "start": "2652960",
    "end": "2658960"
  },
  {
    "text": "we'll see that's I",
    "start": "2658960",
    "end": "2666040"
  },
  {
    "text": "want the timeline service not the status service the timeline service is what's",
    "start": "2666040",
    "end": "2671520"
  },
  {
    "start": "2669000",
    "end": "2941000"
  },
  {
    "text": "actually sending the query to the database to retrieve all the stuff that's going to be displayed at the",
    "start": "2671520",
    "end": "2677040"
  },
  {
    "text": "bottom of of that of the main page in the application so get timeline for user is is what's responsible for retrieving",
    "start": "2677040",
    "end": "2684319"
  },
  {
    "text": "all the messages that are displayed at the bottom of that page uh so what line 17 is doing there is retrieving a person",
    "start": "2684319",
    "end": "2691839"
  },
  {
    "text": "object from the database so username is going to be whoever the currently authenticated user is so if I'm logged",
    "start": "2691839",
    "end": "2698160"
  },
  {
    "text": "in as Jeff username is going to be J brown right that's going to retrieve the Jeff Brown object the J Brown object",
    "start": "2698160",
    "end": "2704160"
  },
  {
    "text": "from the database and then I want to send another query to the database to retrieve all the messages that I want to",
    "start": "2704160",
    "end": "2710640"
  },
  {
    "text": "display on on Jeff's page status is our domain class remember that status is the thing that has an",
    "start": "2710640",
    "end": "2717040"
  },
  {
    "text": "author and uh date created and a message we're invoking a method on the static uh",
    "start": "2717040",
    "end": "2723119"
  },
  {
    "text": "on the status class we're invoking a static method on the status class called wear any and there is no wear any method",
    "start": "2723119",
    "end": "2729359"
  },
  {
    "text": "in our class but somehow that'll work and that somehow is Gorm will add a method called wear any to all of your",
    "start": "2729359",
    "end": "2735599"
  },
  {
    "text": "domain classes and what you get to do with that method is you can invoke the method and pass a closure as an argument",
    "start": "2735599",
    "end": "2742240"
  },
  {
    "text": "the closure is just a a block of code here so that closure is being passed as an argument to where any and inside the",
    "start": "2742240",
    "end": "2749520"
  },
  {
    "text": "closure you can have uh almost arbitrary groovy code and the compiler the grails",
    "start": "2749520",
    "end": "2756880"
  },
  {
    "text": "compiler is going to evaluate all this code and turn that into database stuff right so you don't see anything there",
    "start": "2756880",
    "end": "2762960"
  },
  {
    "text": "that looks like a SQL statement or anything that looks like that has anything to do with a database but gra",
    "start": "2762960",
    "end": "2769200"
  },
  {
    "text": "is going to turn that into database stuff what this says so every status has an author and Every author has a",
    "start": "2769200",
    "end": "2775880"
  },
  {
    "text": "username so what this says is find all the status objects in the database that",
    "start": "2775880",
    "end": "2781440"
  },
  {
    "text": "have an author whose username is equal to this right so peer is going to be me",
    "start": "2781440",
    "end": "2787599"
  },
  {
    "text": "that's the currently authenticated user so peer do username is J brown what line",
    "start": "2787599",
    "end": "2793440"
  },
  {
    "text": "19 is saying is this query should return all of the status messages posted by me",
    "start": "2793440",
    "end": "2798640"
  },
  {
    "text": "right but that that's just Groovy code there there's no database code there's no SQL code there's no HQL code we're just writing Groovy code to express our",
    "start": "2798640",
    "end": "2805920"
  },
  {
    "text": "criteria for our query what line 20 says is if this person if the currently",
    "start": "2805920",
    "end": "2812400"
  },
  {
    "text": "authenticated user is following someone else then include in the in the search results any status object whose author",
    "start": "2812400",
    "end": "2820560"
  },
  {
    "text": "is in this list per.followed it's a set it's not a list um so what this query",
    "start": "2820560",
    "end": "2826800"
  },
  {
    "text": "should return is all of my messages and all the messages posted by folks that uh",
    "start": "2826800",
    "end": "2832240"
  },
  {
    "text": "folks that I follow right does that make sense um I want to order these results",
    "start": "2832240",
    "end": "2839119"
  },
  {
    "text": "by date created descending so I want the most recent yeah most recent at the top and",
    "start": "2839119",
    "end": "2845040"
  },
  {
    "text": "then they get older as you go down and as time goes on my my Twitter timeline might have thousands or millions of",
    "start": "2845040",
    "end": "2851440"
  },
  {
    "text": "status messages is I don't want to retrieve a million status messages from the database so when I execute actually",
    "start": "2851440",
    "end": "2857200"
  },
  {
    "text": "execute the query on line 22 there what the list method will do is it will return all the objects that match this",
    "start": "2857200",
    "end": "2863280"
  },
  {
    "text": "criteria but I don't really want all of them i want all of them uh with a max of",
    "start": "2863280",
    "end": "2868400"
  },
  {
    "text": "10 i don't want any more than 10 results uh to be returned from this query and that's what uh that's what line 22 is",
    "start": "2868400",
    "end": "2875040"
  },
  {
    "text": "expressing here i'm saying uh execute this query send the the SQL to the database and return no more than 10",
    "start": "2875040",
    "end": "2881839"
  },
  {
    "text": "objects so what this is going to return is a bunch of status objects and those",
    "start": "2881839",
    "end": "2886960"
  },
  {
    "text": "are going to be all of the status objects posted by me or by any of the people that I followed they'll be sorted",
    "start": "2886960",
    "end": "2893040"
  },
  {
    "text": "by date created in descending order and we're only going to get the most recent 10 right and that's what's showing up at",
    "start": "2893040",
    "end": "2899200"
  },
  {
    "text": "the bottom of the the main page in our application yeah uh so let's start up uh",
    "start": "2899200",
    "end": "2906480"
  },
  {
    "text": "start the application back up grails",
    "start": "2906480",
    "end": "2912400"
  },
  {
    "text": "Twitter right any questions or comments about that query",
    "start": "2915000",
    "end": "2920040"
  },
  {
    "text": "there yeah very good being able to express your query in",
    "start": "2920040",
    "end": "2925200"
  },
  {
    "text": "code instead of strings turns out to be a a powerful and flexible thing that you'll take advantage of i had two",
    "start": "2925200",
    "end": "2932319"
  },
  {
    "text": "versions of the application running there and I need to kill",
    "start": "2932319",
    "end": "2936640"
  },
  {
    "text": "them and by the way so I'm doing all of this inside of the IDE the IDE that I'm using is the Groovy and Grails tool",
    "start": "2940040",
    "end": "2946319"
  },
  {
    "start": "2941000",
    "end": "3096000"
  },
  {
    "text": "suite it's also called GGTS um that which is built on top of Eclipse uh so it's Eclipse with a whole bunch of",
    "start": "2946319",
    "end": "2952880"
  },
  {
    "text": "special spring and and Groovy tooling um installed into it uh GTTS is free if",
    "start": "2952880",
    "end": "2958160"
  },
  {
    "text": "you're going to do Grails development um ggts is a fantastic environment to do that",
    "start": "2958160",
    "end": "2964880"
  },
  {
    "text": "uh yeah so the server is doing the query right you can't execute the query in the browser the data is not in the browser",
    "start": "2964880",
    "end": "2970880"
  },
  {
    "text": "yeah so the question is is that closure executing for is the query being sent to",
    "start": "2970880",
    "end": "2976079"
  },
  {
    "text": "the database we get back all the objects and then filter them by executing this closure is that what you're asking and that's not what happened if that is what",
    "start": "2976079",
    "end": "2982400"
  },
  {
    "text": "happened that would be almost unusable that'd be bad uh a whole bunch of really sophisticated cool stuff is happening at",
    "start": "2982400",
    "end": "2988720"
  },
  {
    "text": "compile time to turn that into the necessary code to send a query to the database and that query includes a wear",
    "start": "2988720",
    "end": "2995920"
  },
  {
    "text": "clause that expresses all the stuff that's described in your code there so it would be really bad if what that did",
    "start": "2995920",
    "end": "3001760"
  },
  {
    "text": "was retrieved every status object from the database and then filtered them that there'd be no reason to have such a",
    "start": "3001760",
    "end": "3007359"
  },
  {
    "text": "feature but that's not what's happening yeah does that make sense yep all right uh Jeff one i'm going to",
    "start": "3007359",
    "end": "3014640"
  },
  {
    "text": "post uh post a couple of messages here jeff one and Jeff Two right so",
    "start": "3014640",
    "end": "3019680"
  },
  {
    "text": "there's my timeline jeff one and Jeff Two we'll go over here and log back in as uh as",
    "start": "3019680",
    "end": "3025400"
  },
  {
    "text": "Graham in a different browser so we'll have a different session and so forth",
    "start": "3025400",
    "end": "3032079"
  },
  {
    "text": "graham and uh we'll say Graham",
    "start": "3032520",
    "end": "3037760"
  },
  {
    "text": "one and Graham two all right right so now Jeff and Graham each have a couple of messages",
    "start": "3038520",
    "end": "3044800"
  },
  {
    "text": "posted on their timelines they're not seeing each other's messages but over here as Jeff I'm going to search for",
    "start": "3044800",
    "end": "3051119"
  },
  {
    "text": "Graham and I'm going to express that I want to follow him and uh now we're seeing Graham's messages on my timeline",
    "start": "3051119",
    "end": "3057599"
  },
  {
    "text": "which is what we wanted we'll say Jeff 3 and Jeff",
    "start": "3057599",
    "end": "3064520"
  },
  {
    "text": "4 uh and I'll introduce a problem now so So right now things look okay okay I'm",
    "start": "3064520",
    "end": "3070000"
  },
  {
    "text": "seeing all of my messages and I'm seeing all the messages of the people that I follow right graham's the only person that I follow right now we go over here",
    "start": "3070000",
    "end": "3076319"
  },
  {
    "text": "and Graham posts another message Graham 3 if I come back here and refresh this",
    "start": "3076319",
    "end": "3082680"
  },
  {
    "text": "page we don't I just refreshed that page um we don't see Graham 3 so let's figure",
    "start": "3082680",
    "end": "3088960"
  },
  {
    "text": "out what's going on there and that's going to allow us to add one more feature to our application which is what we've got time for is just one more",
    "start": "3088960",
    "end": "3095599"
  },
  {
    "text": "thing so the problem what's happening is this get timeline for user method is",
    "start": "3095599",
    "end": "3101520"
  },
  {
    "text": "being cached right we're using a cachable plugin the cachable plugin is really cool stuff we could spend uh a",
    "start": "3101520",
    "end": "3106720"
  },
  {
    "text": "long time talking about that we just don't have time to get into it just know that by putting this annotation on this",
    "start": "3106720",
    "end": "3112079"
  },
  {
    "text": "method I'm taking advantage of some really sophisticated caching stuff offered by uh the cachable plug-in so",
    "start": "3112079",
    "end": "3119040"
  },
  {
    "text": "now every time I retrieve my timeline we're not necessarily going to the database we might be retrieving that stuff from a cache which is good all",
    "start": "3119040",
    "end": "3125839"
  },
  {
    "text": "right so get timeline for user is cached so I retrieve all my messages and they're put in the cache and they're",
    "start": "3125839",
    "end": "3131920"
  },
  {
    "text": "rendered on the page when I update a message when I post a new message uh one",
    "start": "3131920",
    "end": "3137440"
  },
  {
    "text": "of the things that happens is if we look at our timeline",
    "start": "3137440",
    "end": "3143319"
  },
  {
    "text": "service where is our Oh it's the status service we want one of the things that happens each time I update a status this",
    "start": "3143319",
    "end": "3150960"
  },
  {
    "start": "3148000",
    "end": "3244000"
  },
  {
    "text": "is the code that creates the new status is line 29 is invoking a method called clear timeline cache for user and what",
    "start": "3150960",
    "end": "3158880"
  },
  {
    "text": "clear timeline cache for user is doing is emptying my timeline cache right so",
    "start": "3158880",
    "end": "3166240"
  },
  {
    "text": "I've got a bunch of statuses in the database i retrieve them they go in the cache they get rendered on the page the next time I retrieve them they're",
    "start": "3166240",
    "end": "3172480"
  },
  {
    "text": "already in the cache so we don't have to go back to the database but if I post a new message to the system I need to",
    "start": "3172480",
    "end": "3178640"
  },
  {
    "text": "clear that cache right i don't want to get the the cache doesn't have the new message so the code we just looked at",
    "start": "3178640",
    "end": "3183760"
  },
  {
    "text": "makes that happen we need something else that will do the same thing when one of",
    "start": "3183760",
    "end": "3189280"
  },
  {
    "text": "the people that I follow posts a message right the reason we're not seeing Graham's message on in the browser right",
    "start": "3189280",
    "end": "3194960"
  },
  {
    "text": "now is my cache is out of date i can refresh this all day and Graham's message will never show up notice we do",
    "start": "3194960",
    "end": "3201280"
  },
  {
    "text": "not see Graham 3 here but as soon as I post another message of my",
    "start": "3201280",
    "end": "3206440"
  },
  {
    "text": "own Graham 3 showed up right because when I posted my own message my clash",
    "start": "3206440",
    "end": "3212319"
  },
  {
    "text": "was cleared so the next time I retrieved the timeline we got not only my new message but we got the message that",
    "start": "3212319",
    "end": "3218319"
  },
  {
    "text": "Graham had posted so the problem is that when when I post a message my cache is",
    "start": "3218319",
    "end": "3223359"
  },
  {
    "text": "being cleared properly but when someone else posts a message that I follow my cache is now stale that that's no good",
    "start": "3223359",
    "end": "3229920"
  },
  {
    "text": "we can't uh so we need to clear the cache when one of the people that I follow posts a uh posts a message uh but",
    "start": "3229920",
    "end": "3238880"
  },
  {
    "text": "now we're starting to wander into stuff that could potentially take a",
    "start": "3238880",
    "end": "3244000"
  },
  {
    "start": "3244000",
    "end": "3365000"
  },
  {
    "text": "long time right if I if I'm if I'm following a thousand people when uh when",
    "start": "3244000",
    "end": "3249839"
  },
  {
    "text": "one of those people posts a request all of everyone that they follow needs to have their cashes cleared that that",
    "start": "3249839",
    "end": "3255359"
  },
  {
    "text": "could take a long time so now you don't want to do that in line as part of that request processing right when Graham",
    "start": "3255359",
    "end": "3260559"
  },
  {
    "text": "posts a message we want to get a response to him as quickly as possible what we don't want to happen is for",
    "start": "3260559",
    "end": "3266400"
  },
  {
    "text": "Graham to post a new message and then we're going to spend uh one and a half seconds clearing out everybody's cash",
    "start": "3266400",
    "end": "3272160"
  },
  {
    "text": "who follows Graham right that's not good we need to clear all their caches but we don't want to do that in line there we",
    "start": "3272160",
    "end": "3277680"
  },
  {
    "text": "want to get a response back to him right away so we can do that asynchronously right we can do the status clear uh the",
    "start": "3277680",
    "end": "3284240"
  },
  {
    "text": "cache clearing sort of out of band right so Graham posts a message we put his message in the database we send an",
    "start": "3284240",
    "end": "3290800"
  },
  {
    "text": "asynchronous message to go clear all those caches of people who follow Graham but then immediately get him a response",
    "start": "3290800",
    "end": "3296800"
  },
  {
    "text": "and then somehow process those clear the cache request later and the code to make",
    "start": "3296800",
    "end": "3302000"
  },
  {
    "text": "that happen can be as as little as uh something like this so in my status",
    "start": "3302000",
    "end": "3307599"
  },
  {
    "text": "class I've just added a couple of things i've declared a property called um JMS",
    "start": "3307599",
    "end": "3313400"
  },
  {
    "text": "service we've got a plugin installed into my application that is the JMS plugin and the JMS plugin provides a",
    "start": "3313400",
    "end": "3319599"
  },
  {
    "text": "service called JMS service and the JMS service does a bunch of stuff and we're going to look at just one thing that that service might be able to do for us",
    "start": "3319599",
    "end": "3326800"
  },
  {
    "text": "so that thing that reference that's declared on line 10 will automatically be initialized by Grails for the same",
    "start": "3326800",
    "end": "3332640"
  },
  {
    "text": "reason the other service we talked about earlier was initialized so this is going to be an instance of some class provided",
    "start": "3332640",
    "end": "3338240"
  },
  {
    "text": "by the JMS plugin and what line 12 here says is post a a me a JMS message to",
    "start": "3338240",
    "end": "3345280"
  },
  {
    "text": "this Q right grows twitter.st status and this is the value of the message so",
    "start": "3345280",
    "end": "3350799"
  },
  {
    "text": "we're putting a message on a JMS Q and the value of the message is simply my",
    "start": "3350799",
    "end": "3355839"
  },
  {
    "text": "username it's whoever just posted this message right and if we go look at our",
    "start": "3355839",
    "end": "3361280"
  },
  {
    "text": "status service we'll see that the status service expresses that it wants to",
    "start": "3361280",
    "end": "3367119"
  },
  {
    "start": "3365000",
    "end": "3480000"
  },
  {
    "text": "expose itself using JMS and that's what line 10 does it turns out that we don't",
    "start": "3367119",
    "end": "3372400"
  },
  {
    "text": "have to know very much at all about JMS to put all this together we're not there's really no JMS code here but",
    "start": "3372400",
    "end": "3377680"
  },
  {
    "text": "we're taking advantage of a lot of sophisticated powerful stuff that JMS has to offer but the JMS plugin is",
    "start": "3377680",
    "end": "3383440"
  },
  {
    "text": "taking care of all the complicated stuff what I have to do as an application developer is write a service and express",
    "start": "3383440",
    "end": "3389200"
  },
  {
    "text": "that I want to expose it using JMS which is what I'm doing on line 10 there and",
    "start": "3389200",
    "end": "3394559"
  },
  {
    "text": "there there's a way that you can configure the plugin so you can call this method whatever you like but by default the the method has to be called",
    "start": "3394559",
    "end": "3401440"
  },
  {
    "text": "on message and that's the way that the plugin will notify this JMS listener of",
    "start": "3401440",
    "end": "3407760"
  },
  {
    "text": "new messages so every time a message is posted to the status queue this thing",
    "start": "3407760",
    "end": "3414240"
  },
  {
    "text": "this listener is automatically going to be notified we don't have to we've we've seen all the JMSs code we have to write",
    "start": "3414240",
    "end": "3419680"
  },
  {
    "text": "to make that happen but we're taking advantage of a really powerful JMS engine so what this code is doing every",
    "start": "3419680",
    "end": "3425520"
  },
  {
    "text": "every time this method gets invoked what we're doing is we're sending a query to the database to retrieve all the people",
    "start": "3425520",
    "end": "3432720"
  },
  {
    "text": "that follow username right new message username is the name of whoever posted just posted a message we want to go find",
    "start": "3432720",
    "end": "3440000"
  },
  {
    "text": "everyone who follows that person and then clear all of their timelines which is what's happening on the next couple",
    "start": "3440000",
    "end": "3445760"
  },
  {
    "text": "of lines there um but this is happening out of band right this is not part of any request right a request came in with",
    "start": "3445760",
    "end": "3452480"
  },
  {
    "text": "a new message we created a new status object put it in the database put a request on a JMSQ to do some work and",
    "start": "3452480",
    "end": "3459599"
  },
  {
    "text": "then carried on and finished the request and then at some point the JMSSQ processing will happen this code gets",
    "start": "3459599",
    "end": "3465440"
  },
  {
    "text": "executed and now the the server is out there clearing all these these timelines that need to be all these caches that",
    "start": "3465440",
    "end": "3470799"
  },
  {
    "text": "need to be cleared but if this takes a second we're not tying up that request for a second right we're taking",
    "start": "3470799",
    "end": "3476319"
  },
  {
    "text": "advantage of the asynchronous messaging offered by JMS but we didn't have to write really any JMS code we wrote a",
    "start": "3476319",
    "end": "3482240"
  },
  {
    "start": "3480000",
    "end": "3599000"
  },
  {
    "text": "service and expressed on line 10 that I want this service to be exposed via JMS",
    "start": "3482240",
    "end": "3487280"
  },
  {
    "text": "and then over here uh from uh this is the end that uh produces the message i'm",
    "start": "3487280",
    "end": "3493119"
  },
  {
    "text": "taking advantage of this JMS service provided by the JMS plugin and you have to read the documentation to know how to",
    "start": "3493119",
    "end": "3498559"
  },
  {
    "text": "interact with that thing but what we're doing is we're calling send and passing two pieces of data the first is the Q",
    "start": "3498559",
    "end": "3503920"
  },
  {
    "text": "name the second is the message um so we really didn't write any JMS code but as",
    "start": "3503920",
    "end": "3509760"
  },
  {
    "text": "I've said several times we're taking advantage of what JMS has to offer there right so we've seen uh obviously I've",
    "start": "3509760",
    "end": "3517680"
  },
  {
    "text": "had to go through all this really really quickly but we're taking advantage of some pretty sophisticated stuff jm we're",
    "start": "3517680",
    "end": "3522720"
  },
  {
    "text": "taking advantage of JMS we're taking advantage of uh uh some really sophisticated stuff provided by the",
    "start": "3522720",
    "end": "3529119"
  },
  {
    "text": "searchable plugin um we've got uh the whole hibernate abstraction there's a lot of really really cool stuff going on",
    "start": "3529119",
    "end": "3535040"
  },
  {
    "text": "in our application a lot of powerful and and sometimes complicated stuff going on in our application but all that",
    "start": "3535040",
    "end": "3541359"
  },
  {
    "text": "complexity is being managed for us by the framework or uh plugins in different situations right so the the rails",
    "start": "3541359",
    "end": "3547599"
  },
  {
    "text": "application code stays uh stays very very simple right so as I said obviously",
    "start": "3547599",
    "end": "3552720"
  },
  {
    "text": "I know that I went through all that really really quickly the idea is just to provide a sense for the kinds of things that the framework um uh helps",
    "start": "3552720",
    "end": "3559440"
  },
  {
    "text": "make simple in your application so any questions or comments about uh any of that we've got about two minutes and",
    "start": "3559440",
    "end": "3565839"
  },
  {
    "text": "then uh I'm happy to talk to you as long as you like any questions right",
    "start": "3565839",
    "end": "3572240"
  },
  {
    "text": "now none all right very good thank you all very much if there's anything at all",
    "start": "3572440",
    "end": "3578480"
  },
  {
    "text": "that I can help you with uh let me know as I said my email address is jowngivotal.com twitter is Jeff Scott",
    "start": "3578480",
    "end": "3584640"
  },
  {
    "text": "Brown and uh thank you very much and enjoy the rest of the show",
    "start": "3584640",
    "end": "3589890"
  },
  {
    "text": "[Applause] [Music]",
    "start": "3589890",
    "end": "3602159"
  }
]