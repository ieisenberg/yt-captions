[
  {
    "text": "[Music]",
    "start": "3270",
    "end": "8730"
  },
  {
    "text": "[Applause] hi everyone H I am p and thanks for the",
    "start": "10000",
    "end": "15440"
  },
  {
    "text": "introduction um and I work at Spotify I lead developer experience at Spotify as",
    "start": "15440",
    "end": "21920"
  },
  {
    "text": "well as U uh leading backstage since its Inception in",
    "start": "21920",
    "end": "27679"
  },
  {
    "text": "2017 um and I'm just going to say one one little word about like who I am and",
    "start": "27679",
    "end": "33719"
  },
  {
    "text": "why I am on this stage uh I joined Spotify 2016 um having been an engineer for 14",
    "start": "33719",
    "end": "40280"
  },
  {
    "text": "years uh I joined as an engineering manager for one of the teams there in the platform",
    "start": "40280",
    "end": "46600"
  },
  {
    "text": "organization and I was so excited to join Spotify um I was uh very impressed",
    "start": "46600",
    "end": "52800"
  },
  {
    "text": "with the autonomous engineering culture thrilled to work in that sort of exciting uh world World leading audio",
    "start": "52800",
    "end": "61879"
  },
  {
    "text": "space that Spotify is in but I must say and this is sort of",
    "start": "61879",
    "end": "67360"
  },
  {
    "text": "the reason for being on this stage that I have never struggled so much in my entire life to add value quickly uh so",
    "start": "67360",
    "end": "77000"
  },
  {
    "text": "leading the backstage team back then which of course didn't exist uh when I joined was is sort of a healing Journey",
    "start": "77000",
    "end": "84439"
  },
  {
    "text": "for me uh as well uh because backstage is trying to solve um",
    "start": "84439",
    "end": "90439"
  },
  {
    "text": "many of the challenges that I personally uh struggled with in the",
    "start": "90439",
    "end": "96119"
  },
  {
    "text": "beginning and this is Mike hi folks uh my name's Mike Lewis as Pier said and I",
    "start": "96119",
    "end": "102320"
  },
  {
    "text": "am the tech lead for backstage at Spotify which means I get to work with the amazing team that we have at Spotify working on Backstage and I get to think",
    "start": "102320",
    "end": "109000"
  },
  {
    "text": "about backstage all day which is so fun um I've been at Spotify about five years five and a half years now and uh when I",
    "start": "109000",
    "end": "115479"
  },
  {
    "text": "joined Spotify I was working in the premium Mission working on things related to spotify.com and check out things like that so I was",
    "start": "115479",
    "end": "122200"
  },
  {
    "text": "using backstage every day and seeing the value that we get from backstage at Spotify so when the opportunities came",
    "start": "122200",
    "end": "127600"
  },
  {
    "text": "up to join the backstage team and start working on it myself I jumped at the chance and here I am and I'm going to",
    "start": "127600",
    "end": "132879"
  },
  {
    "text": "hand back to Pier to lead off the talk and I'll be back on stage in a little bit thanks cool Mike so we are here",
    "start": "132879",
    "end": "140400"
  },
  {
    "text": "today to speak to you about um how we used our uh developer portal backstage",
    "start": "140400",
    "end": "145720"
  },
  {
    "text": "plugin architecture to change the ways of working for our three ,000",
    "start": "145720",
    "end": "151280"
  },
  {
    "text": "Engineers uh and I think just that sentence is important at least to me it's not all about technology although",
    "start": "151280",
    "end": "158640"
  },
  {
    "text": "that's sort of the heart of it but it's it's technology in order to change the",
    "start": "158640",
    "end": "163840"
  },
  {
    "text": "ways of working in a meaningful way",
    "start": "163840",
    "end": "170000"
  },
  {
    "text": "um I think the before we get into the plug-in architecture and why it matters so much to us I think it's important for",
    "start": "170000",
    "end": "177319"
  },
  {
    "text": "you to know some little thing about uh what kind of challenges we were facing at Spotify back in 2017 when we were",
    "start": "177319",
    "end": "185840"
  },
  {
    "text": "really uh starting to talk about these problems so these are accurate clouds um",
    "start": "185840",
    "end": "191400"
  },
  {
    "text": "that I took um from our ecosystem last week so imagine them a little smaller",
    "start": "191400",
    "end": "197280"
  },
  {
    "text": "back in 2017 but you can sort of understand uh it was similar challenge",
    "start": "197280",
    "end": "202799"
  },
  {
    "text": "this is what was facing uh any engineer joining uh Spotify in uh in terms of scale so every",
    "start": "202799",
    "end": "210159"
  },
  {
    "text": "single dot here is a component you see the backend Services every single dot is an actual component every single line is",
    "start": "210159",
    "end": "216239"
  },
  {
    "text": "a is a component using another component so this is the scale that you",
    "start": "216239",
    "end": "222080"
  },
  {
    "text": "are meeting today at Spotify um and back in 2017 it starting",
    "start": "222080",
    "end": "228239"
  },
  {
    "text": "it was starting to uh sort of hurt our productivity quite a bit um we were seeing uh all of our",
    "start": "228239",
    "end": "238000"
  },
  {
    "text": "productivity productivity meth metrics were sort of going in the wrong uh turning in the wrong uh Direction uh one",
    "start": "238000",
    "end": "244879"
  },
  {
    "text": "of the metrics we were measuring is um number of days it takes for your 10th pull request if you are a newly",
    "start": "244879",
    "end": "251079"
  },
  {
    "text": "onboarded person that's one just one of the kind of crude um metrics we were using but nevertheless we were up to 60",
    "start": "251079",
    "end": "259040"
  },
  {
    "text": "days which absolutely wasn't our Target uh number and as I said also trending in",
    "start": "259040",
    "end": "266520"
  },
  {
    "text": "the wrong direction now adding to this complexity in scale U I'm",
    "start": "266520",
    "end": "273440"
  },
  {
    "text": "sure you many of you have heard about Conway's law so Conway's law is that the systems tend to look like the org chart",
    "start": "273440",
    "end": "280720"
  },
  {
    "text": "they were created in right so at Spotify we have this autonomous",
    "start": "280720",
    "end": "286560"
  },
  {
    "text": "engineering culture which is just beautiful it's just wonderful to work in people are very excited they are",
    "start": "286560",
    "end": "292120"
  },
  {
    "text": "passionate they own what they build it's lovely but the Hinds side the sort of",
    "start": "292120",
    "end": "297759"
  },
  {
    "text": "the backside of that is that people were also back in 2017 um expected to deploy",
    "start": "297759",
    "end": "303880"
  },
  {
    "text": "their code for example uh and uh do all kinds of infra for their code all by",
    "start": "303880",
    "end": "309400"
  },
  {
    "text": "themselves so all of these um many of these sort of end data end points and",
    "start": "309400",
    "end": "315160"
  },
  {
    "text": "backend Services uh they were all created um in some way that that",
    "start": "315160",
    "end": "321400"
  },
  {
    "text": "particular team felt was the right thing to do now entering into that scene as I was",
    "start": "321400",
    "end": "329120"
  },
  {
    "text": "doing uh that's what made me struggle so much uh I could never sort of",
    "start": "329120",
    "end": "334720"
  },
  {
    "text": "extrapolate a learning from one place to the next because it was entirely different uh documentation were in",
    "start": "334720",
    "end": "341360"
  },
  {
    "text": "different places um um Services were written in different languages of course",
    "start": "341360",
    "end": "346680"
  },
  {
    "text": "different libraries in all together it was like kind of the wild west but in a",
    "start": "346680",
    "end": "353120"
  },
  {
    "text": "very Lov loving way sort of um so we were sort of we we and when",
    "start": "353120",
    "end": "359440"
  },
  {
    "text": "I say we Mike and I we work for the platform organization so of course many of you",
    "start": "359440",
    "end": "364560"
  },
  {
    "text": "know platform organizations our job is to fix this uh ecosystem for the",
    "start": "364560",
    "end": "370880"
  },
  {
    "text": "engineers that are building the actual business value so that they can do it",
    "start": "370880",
    "end": "376199"
  },
  {
    "text": "much faster and with more happiness so that it becomes greater and and faster",
    "start": "376199",
    "end": "382199"
  },
  {
    "text": "for the company so we were thinking hard about this particular problem what are",
    "start": "382199",
    "end": "388440"
  },
  {
    "text": "we going to do to to help our Engineers um through this sort of wild west uh",
    "start": "388440",
    "end": "395400"
  },
  {
    "text": "place they are in and I happened to lead at that time this little team that owned",
    "start": "395400",
    "end": "401880"
  },
  {
    "text": "the backend component catalog was a tiny system only the backend Engineers cared",
    "start": "401880",
    "end": "408720"
  },
  {
    "text": "about it nobody else knew about it but they own this backend component uh",
    "start": "408720",
    "end": "415199"
  },
  {
    "text": "catalog and sort of having uh that reality and being faced with this",
    "start": "415199",
    "end": "422639"
  },
  {
    "text": "problem I believe very much is was the embryo to why we realized like okay",
    "start": "422639",
    "end": "428879"
  },
  {
    "text": "we're seeing this problem of course of scale and complexity for all engineering disciplines however the backend",
    "start": "428879",
    "end": "434720"
  },
  {
    "text": "Engineers they are just a slightly bit happier because they have this component Library component catalog at least what",
    "start": "434720",
    "end": "443360"
  },
  {
    "text": "if we actually create a catalog for everyone so that's the sort of the the",
    "start": "443360",
    "end": "448759"
  },
  {
    "text": "little embryo of starting what why we started sort of the backstage",
    "start": "448759",
    "end": "455879"
  },
  {
    "text": "idea uh and I think over the quarters we were doing all of these engineering surveys these the top two problems here",
    "start": "456639",
    "end": "465000"
  },
  {
    "text": "were being surfaced to us so Engineers were calling out top productivity",
    "start": "465000",
    "end": "470800"
  },
  {
    "text": "blockers difficult to find things and context switching these were sort of",
    "start": "470800",
    "end": "476440"
  },
  {
    "text": "people were very aware of these two problems and they are connected as probably many of you understand that if",
    "start": "476440",
    "end": "482560"
  },
  {
    "text": "you have problems finding things you got to pull people into a meeting you got to",
    "start": "482560",
    "end": "488039"
  },
  {
    "text": "slack them you got to tap them on the shoulder and then uh I will do that to",
    "start": "488039",
    "end": "493599"
  },
  {
    "text": "you and you will do that to me and all the other seven teams I'm integrating with so you can imagine the amount of",
    "start": "493599",
    "end": "500159"
  },
  {
    "text": "meetings that our Engineers were running around trying to be helpful all the time and that we sort of bundle into the",
    "start": "500159",
    "end": "507479"
  },
  {
    "text": "word of context switching that's what it means for our context so these were the top two problems according to the",
    "start": "507479",
    "end": "513120"
  },
  {
    "text": "engineering service we were running then the platform organization we we thought there is",
    "start": "513120",
    "end": "519039"
  },
  {
    "text": "actually a third problem as well if you remember these clouds we were so unable to help",
    "start": "519039",
    "end": "526200"
  },
  {
    "text": "Engineers we were seeing it we were seeing our metrics trending in the wrong way um we were seeing people couldn't",
    "start": "526200",
    "end": "532680"
  },
  {
    "text": "make like um be productive within 60 days of onboarding but we couldn't do that",
    "start": "532680",
    "end": "540000"
  },
  {
    "text": "much because of um all these dots were",
    "start": "540000",
    "end": "545839"
  },
  {
    "text": "uh there were no standards and naively Spotify had the",
    "start": "545839",
    "end": "552360"
  },
  {
    "text": "opinion that standards are boring and um",
    "start": "552360",
    "end": "557800"
  },
  {
    "text": "it's the opposite of Freedom so in in our little team since we were feeling this",
    "start": "557800",
    "end": "563560"
  },
  {
    "text": "pain uh we created this little slogan saying standards set you free and then",
    "start": "563560",
    "end": "569079"
  },
  {
    "text": "we rode around on horses at Spotify and like standard set you're free uh which",
    "start": "569079",
    "end": "575440"
  },
  {
    "text": "is like like a little bit of a joyous way of saying like no actually um if you",
    "start": "575440",
    "end": "581720"
  },
  {
    "text": "don't have standards for your software ecosystem you're totally tied down to",
    "start": "581720",
    "end": "587240"
  },
  {
    "text": "all the boring stuff because you are going to have to set up your cicd deployment systems uh and you're",
    "start": "587240",
    "end": "595640"
  },
  {
    "text": "going to build your build pipelines and there going to be no templates you're going to invent it over and over again",
    "start": "595640",
    "end": "602480"
  },
  {
    "text": "over our five 500 teams and of course that's what we were seeing a lot of duplication everywhere so that's the",
    "start": "602480",
    "end": "610000"
  },
  {
    "text": "third productivity blocker that we were discussing simply put this is what uh",
    "start": "610000",
    "end": "616839"
  },
  {
    "text": "Spotify was looking for a solution for uh also for you all of you who are",
    "start": "616839",
    "end": "622279"
  },
  {
    "text": "contemplating using a um developer portal this is what we use with our",
    "start": "622279",
    "end": "628279"
  },
  {
    "text": "upper management to help them understand what are you trying to solve well we are",
    "start": "628279",
    "end": "633360"
  },
  {
    "text": "trying to solve speed scale and Chaos Control and people can relate to that because they see sort of that it is a",
    "start": "633360",
    "end": "641279"
  },
  {
    "text": "little bit of chaos um and so here it is H this is",
    "start": "641279",
    "end": "647240"
  },
  {
    "text": "what backstage looks internally for us what it is single pane of glass for your infrastructure that's what it is it's",
    "start": "647240",
    "end": "654320"
  },
  {
    "text": "simply put a homepage and even simpler than that uh",
    "start": "654320",
    "end": "659959"
  },
  {
    "text": "it's a catalog for your infrastructure all of",
    "start": "659959",
    "end": "665639"
  },
  {
    "text": "it now all of you I'm sure know any system that some kind of platform",
    "start": "665639",
    "end": "671880"
  },
  {
    "text": "organization like what I'm representing puts together and offers to our Engineers",
    "start": "671880",
    "end": "677600"
  },
  {
    "text": "internally uh is only as useful as its adoption right if it's it can be as",
    "start": "677600",
    "end": "686399"
  },
  {
    "text": "beautiful as uh can be but if like three teams use it it's just very",
    "start": "686399",
    "end": "694760"
  },
  {
    "text": "expensive so how do we get how do we make sure that backstage was used that's where sort of infrastructure",
    "start": "694760",
    "end": "702519"
  },
  {
    "text": "as code uh comes into play so the catalog needs to be the metadata on each",
    "start": "702519",
    "end": "708760"
  },
  {
    "text": "component needs to be in the repositories hence the ownership of that",
    "start": "708760",
    "end": "714079"
  },
  {
    "text": "metadata needs to be transferred to the owning team of that component and I think that's a little small but",
    "start": "714079",
    "end": "720160"
  },
  {
    "text": "important engineering best practice that I'm sure all of you know about but sort of that is the basis for why I believe",
    "start": "720160",
    "end": "728120"
  },
  {
    "text": "our catalog happened to actually become stay relevant stay useful to our",
    "start": "728120",
    "end": "735240"
  },
  {
    "text": "engineering population and then of",
    "start": "735240",
    "end": "740320"
  },
  {
    "text": "course we want backstage to be more than only components we want to add",
    "start": "740320",
    "end": "745560"
  },
  {
    "text": "functionality more kinds of functionality such as uh um measuring standards across the",
    "start": "745560",
    "end": "752519"
  },
  {
    "text": "fleet uh or yeah there are so many monitoring in the cicd",
    "start": "752519",
    "end": "759199"
  },
  {
    "text": "ETC and in order to do that that's sort of where the plug-in ecosystem comes in",
    "start": "759199",
    "end": "765160"
  },
  {
    "text": "and Mike is going to talk way deeper about that but I wanted to say uh sort of",
    "start": "765160",
    "end": "772839"
  },
  {
    "text": "these to uh engineering best practices that I really think um if one",
    "start": "772839",
    "end": "779880"
  },
  {
    "text": "tries to figure out like why was backstage successful really for Spotify",
    "start": "779880",
    "end": "785320"
  },
  {
    "text": "of course we have been asking ourselves that question for very many years I think it's as simple as this",
    "start": "785320",
    "end": "792199"
  },
  {
    "text": "infrastructure as code and then for today's talk we're",
    "start": "792199",
    "end": "797680"
  },
  {
    "text": "going to focus on the second one which is the distributed code ownership of the plug-in architecture so ex extensibility",
    "start": "797680",
    "end": "805480"
  },
  {
    "text": "is the plug-in architecture that enables this distributed code",
    "start": "805480",
    "end": "811240"
  },
  {
    "text": "ownership and that is key to distribute it to decentralize the decision making",
    "start": "811240",
    "end": "817399"
  },
  {
    "text": "to the team actually owning the expertise instead of having a",
    "start": "817399",
    "end": "822959"
  },
  {
    "text": "little um little my little team in in our example my little team uh building",
    "start": "822959",
    "end": "830120"
  },
  {
    "text": "the backstage uh I developer portal trying to figure out how to build all of",
    "start": "830120",
    "end": "837680"
  },
  {
    "text": "these new functionalities in into the backstage portal so that it would become meaningful for all of the 3,000",
    "start": "837680",
    "end": "843320"
  },
  {
    "text": "Engineers goes without saying that that that can never happen that will never scale so it's like it's a must to have a",
    "start": "843320",
    "end": "852320"
  },
  {
    "text": "plugin architecture for",
    "start": "852320",
    "end": "855480"
  },
  {
    "text": "us cool and uh now we're going to Deep dive into the plugin architectures to",
    "start": "858079",
    "end": "863440"
  },
  {
    "text": "actually give you a a broad view of what it is Mike",
    "start": "863440",
    "end": "871040"
  },
  {
    "text": "thanks Pier I tell you what there is no higher Stakes game of climbing stairs than when",
    "start": "871079",
    "end": "877079"
  },
  {
    "text": "you're in front of a big audience like this but I've nailed it so we're we're good so far um so Pi explained to you",
    "start": "877079",
    "end": "883519"
  },
  {
    "text": "extensibility is just so important for backstage and it's important at Spotify and it's important elsewhere too because",
    "start": "883519",
    "end": "888800"
  },
  {
    "text": "backstage is open source it's used by thousands of companies around the world so it's important in both of those context and I want to tell you a little",
    "start": "888800",
    "end": "894720"
  },
  {
    "text": "bit about how extensively work Works in backstage and how it's changed over the years and what we've learned along the",
    "start": "894720",
    "end": "901399"
  },
  {
    "text": "way so first I think it's important that we cover the high level architecture of Backstage so just to kind of get a feel",
    "start": "901399",
    "end": "907720"
  },
  {
    "text": "for the room a little bit how many folks in this room are familiar with the kind of full stack web architecture of like building node.js react web apps just",
    "start": "907720",
    "end": "915240"
  },
  {
    "text": "JavaScript in the front end show of hands okay so like halfish of people so",
    "start": "915240",
    "end": "920720"
  },
  {
    "text": "I'll I'll try and keep it fairly generic so um at a high level backstage is a web",
    "start": "920720",
    "end": "926320"
  },
  {
    "text": "based react front end and there is a horizontally scalable back end written in nodejs that back end is talking to",
    "start": "926320",
    "end": "933759"
  },
  {
    "text": "some infrastructure a database potentially a cache and then the back end's also talking to some third party apis as well um those lines of",
    "start": "933759",
    "end": "941079"
  },
  {
    "text": "communication between those things are usually HTTP although other things can be supported at a plug-in level too um",
    "start": "941079",
    "end": "947440"
  },
  {
    "text": "so there's some logos there to represent this Tex stack so in that context what's",
    "start": "947440",
    "end": "952480"
  },
  {
    "text": "a plugin well a plugin is just a bundle of typescript code that's been compiled into JavaScript published to PM for",
    "start": "952480",
    "end": "959560"
  },
  {
    "text": "public packages or even private for adopters that don't want to share that package and it's just used for private you know internal use there's no need to",
    "start": "959560",
    "end": "966120"
  },
  {
    "text": "publish it um and it's generally for use in either the front end or the back end although sometimes there's isomorphic packages in the mix too uh that the",
    "start": "966120",
    "end": "972720"
  },
  {
    "text": "standard is front end or back end um so for those who are familiar",
    "start": "972720",
    "end": "979000"
  },
  {
    "text": "with you know full stack web development there's maybe an argument to be made that we've done it at that point right",
    "start": "979000",
    "end": "985680"
  },
  {
    "text": "so react in the front end and Express in the back end are already pretty extensible or at least composable right",
    "start": "985680",
    "end": "991440"
  },
  {
    "text": "you can render components from other places you can bring middlewares into your Express app and you've kind of done",
    "start": "991440",
    "end": "997720"
  },
  {
    "text": "it then you've extended your app with new backend functionality via the middle Wares and new front end functionality with your react components so we're done",
    "start": "997720",
    "end": "1004519"
  },
  {
    "text": "end of talk just kidding um so extensibility by",
    "start": "1004519",
    "end": "1009839"
  },
  {
    "text": "default is not enough for a couple of reasons sorry not enough for a couple of reasons the first is if you're building",
    "start": "1009839",
    "end": "1015000"
  },
  {
    "text": "an extension in a model where all you have is react in the front end and Express in the back end that's hard work there's no shared solutions for the",
    "start": "1015000",
    "end": "1021199"
  },
  {
    "text": "things that you need to kind of get started quickly and get working building on your plugin and there's also much",
    "start": "1021199",
    "end": "1026400"
  },
  {
    "text": "more decisions to make so every time you need to decide how you're going to manage your database connection or logging or any of those things you kind",
    "start": "1026400",
    "end": "1032280"
  },
  {
    "text": "of got to start from scratch make a decision it's more cognitive load it slows you down so you're less efficient",
    "start": "1032280",
    "end": "1037438"
  },
  {
    "text": "and also the results the the plugins that get built in that ecosystem are less consistent which is bad for people",
    "start": "1037439",
    "end": "1042880"
  },
  {
    "text": "using them so that's on the plugin side plug-in Builder side what about adopter people using backstage so in that world",
    "start": "1042880",
    "end": "1051000"
  },
  {
    "text": "backstage adopters have a lot of fiddly wiring to do they have to wire everything up themselves in the back end to render the to to run the middleware",
    "start": "1051000",
    "end": "1058280"
  },
  {
    "text": "in the express app and provide it with its dependencies by the same token in the front end they need to render the",
    "start": "1058280",
    "end": "1063600"
  },
  {
    "text": "react components at the right time and provide those with dependencies too so it's a lot of work and I kind of think it of it like um what we want in a",
    "start": "1063600",
    "end": "1070360"
  },
  {
    "text": "plugin system is we want like a power plug that you just plug in and it's done you finished but what that's like is",
    "start": "1070360",
    "end": "1076559"
  },
  {
    "text": "like having to wire a plug it's a lot more work and it just it's not efficient to work in that way so um and the the",
    "start": "1076559",
    "end": "1084280"
  },
  {
    "text": "last thing to mention here actually is that we want to encourage contributions right backstage is an open platform and",
    "start": "1084280",
    "end": "1089360"
  },
  {
    "text": "we want people to contribute plugins and plug-in modules to that platform and if it's hard to build plugins and hard to build plug-in modules then that's",
    "start": "1089360",
    "end": "1095480"
  },
  {
    "text": "discouraging people from doing that so how do we start encouraging them well",
    "start": "1095480",
    "end": "1100960"
  },
  {
    "text": "the first way is I think if it kind of like a tool Library so if you haven't encountered one of these in in the wild",
    "start": "1100960",
    "end": "1106200"
  },
  {
    "text": "outside the world of software a tool library is a place place where you can go and borrow the tools that you need to",
    "start": "1106200",
    "end": "1111360"
  },
  {
    "text": "do a task in the real world and so I'm not talking about software here I'm talking about actual like SS and drills and things this means you don't have to",
    "start": "1111360",
    "end": "1117000"
  },
  {
    "text": "own every single tool that you need to do diy things at home you can just go and borrow them and you don't have to",
    "start": "1117000",
    "end": "1122039"
  },
  {
    "text": "figure out which one's the best one you just take the one that they've got you use it when you're done with it you bring it back so this analogy that I'm",
    "start": "1122039",
    "end": "1128280"
  },
  {
    "text": "trying to draw here is between a tool library in in the physical world and the backstage tool Library which is",
    "start": "1128280",
    "end": "1133799"
  },
  {
    "text": "something we've built which is a collection of core services in the back end and the front end that provides you with a bunch of capabilities that you",
    "start": "1133799",
    "end": "1139640"
  },
  {
    "text": "can leverage to do things more efficiently to get stuff done to bake in some sensible decisions so you can just",
    "start": "1139640",
    "end": "1145679"
  },
  {
    "text": "get productive quickly building your plugin so I'm not going to go through this whole list but just to give an",
    "start": "1145679",
    "end": "1150960"
  },
  {
    "text": "example I think database management is a really cool system in backstage um as cool as a database management system can",
    "start": "1150960",
    "end": "1156000"
  },
  {
    "text": "be the way that it works is um the a plug-in owner gets a connection to a",
    "start": "1156000",
    "end": "1161159"
  },
  {
    "text": "database and they don't know anything about where that database has come from it's just been configured by the adopter of Backstage and um actually behind the",
    "start": "1161159",
    "end": "1169159"
  },
  {
    "text": "scenes adopters can configure a single database and share that connection with all different plugins and they all get",
    "start": "1169159",
    "end": "1174400"
  },
  {
    "text": "access to this a database within that single database instance or each plugin can have its own database and that",
    "start": "1174400",
    "end": "1180640"
  },
  {
    "text": "system of configuration and separation of databases is entirely abstracted away from plug-in own so all they have to do",
    "start": "1180640",
    "end": "1186440"
  },
  {
    "text": "is just get the database connection and use it and you know job done um so",
    "start": "1186440",
    "end": "1192080"
  },
  {
    "text": "that's the tool Library that's the first way that we are of making life easier for people building extensions and people using them the second way is more",
    "start": "1192080",
    "end": "1199000"
  },
  {
    "text": "focused on adopters so this screenshot is kind of showing to an extent the old",
    "start": "1199000",
    "end": "1204480"
  },
  {
    "text": "world of Backstage the way things used to be when you were adopting plugins as an adopter so you'll see a lot of",
    "start": "1204480",
    "end": "1209960"
  },
  {
    "text": "documentation Pages like this if you look on the backstage docs today and what you've got here is kind of like",
    "start": "1209960",
    "end": "1215679"
  },
  {
    "text": "that plug wiring analogy that I talked about a minute ago you have to pull in specific lines of code to your backend",
    "start": "1215679",
    "end": "1221039"
  },
  {
    "text": "instance and put them in in the right place to add the middleware and make everything work and when plugins do",
    "start": "1221039",
    "end": "1227600"
  },
  {
    "text": "different things you have to put subtly different lines of code in when things change you have to adapt your code to",
    "start": "1227600",
    "end": "1233240"
  },
  {
    "text": "address those changes so it's a lot of work it's like wiring a plug every time and uh so over the last year we've been",
    "start": "1233240",
    "end": "1239240"
  },
  {
    "text": "working towards a solution and particularly the maintainance have been working towards a solution called declarative integration which takes away",
    "start": "1239240",
    "end": "1244840"
  },
  {
    "text": "the need for this manual wiring and instead makes it uh possible to install a Plugin or a plug-in module just by",
    "start": "1244840",
    "end": "1250880"
  },
  {
    "text": "adding the package via yarn which is the standard package manager for JavaScript uh codebases this is a solution that's",
    "start": "1250880",
    "end": "1257360"
  },
  {
    "text": "in Alpha right now particularly immature in the front end but also in the back end it's still pretty new so we're not recommending folks Mig great to this yet",
    "start": "1257360",
    "end": "1263559"
  },
  {
    "text": "but it's uh you know underactive development and it's really adding a lot of value um in the ecosystem so want to",
    "start": "1263559",
    "end": "1269440"
  },
  {
    "text": "show you a little bit more about that today and I'll be doing a bit more of that during the demo so what's next well I want to talk",
    "start": "1269440",
    "end": "1277039"
  },
  {
    "text": "a bit about the mental model for backstage because it's not as simple as core Frameworks and then some plugins",
    "start": "1277039",
    "end": "1282080"
  },
  {
    "text": "that sit on top of the core Frameworks I think what's so powerful about this extensibility model and what I've thought was so cool since I started",
    "start": "1282080",
    "end": "1287880"
  },
  {
    "text": "working on back page is this idea of nested extensibility so we don't just have a core framework that plugins sit",
    "start": "1287880",
    "end": "1294000"
  },
  {
    "text": "on top of and can extend instead we've built a system that allows the plug-in owners individually to extend to allow",
    "start": "1294000",
    "end": "1300000"
  },
  {
    "text": "other people to extend their plugins with plug-in modules so an example of the way this is really powerful is if",
    "start": "1300000",
    "end": "1305159"
  },
  {
    "text": "you have a generic plugin which is providing some shared functionality in backstage you can have plug-in modules which offer the direct connections to",
    "start": "1305159",
    "end": "1311559"
  },
  {
    "text": "specific Upstream apis so for example you might have a system that pulls in org data to the backstage catalog that P",
    "start": "1311559",
    "end": "1318200"
  },
  {
    "text": "mentioned earlier and then a plugin module that knows how to fetch that org data specifically from an ldap server",
    "start": "1318200",
    "end": "1324159"
  },
  {
    "text": "adopter can write their own ones of those to pull org data from their own custom or data providers and we can provide additional ones in open source",
    "start": "1324159",
    "end": "1330600"
  },
  {
    "text": "to support whatever Integrations people need to use and then there's a picture of some",
    "start": "1330600",
    "end": "1335679"
  },
  {
    "text": "turtles sitting on top of each other which is kind of cute um so a key",
    "start": "1335679",
    "end": "1341039"
  },
  {
    "text": "concept with all of this is the notion of importable points of extension and I'll show some code for this on the next",
    "start": "1341039",
    "end": "1346080"
  },
  {
    "text": "slide particularly to cover the importable bit but I want to just cover this example to talk about how",
    "start": "1346080",
    "end": "1351960"
  },
  {
    "text": "extensibility Works in this nested model so you see on the left hand side we've got the core framework that foundational",
    "start": "1351960",
    "end": "1357400"
  },
  {
    "text": "bit from the previous diagram and just an example core service the HTTP router in the back end which is the thing that",
    "start": "1357400",
    "end": "1363080"
  },
  {
    "text": "routes requests coming from the front end to different parts of the um the back end different middlewares um so",
    "start": "1363080",
    "end": "1369200"
  },
  {
    "text": "we've got some arrows here that's pointing out the fact that the core framework is providing an HTTP router as a point of extensibility and the catalog",
    "start": "1369200",
    "end": "1376000"
  },
  {
    "text": "plugin is this in this case is extending that point of EXT sensibility with a specific middleware and all of this is",
    "start": "1376000",
    "end": "1381120"
  },
  {
    "text": "happening between the plugin and the framework without any interaction from an adopter so that's the bottom layer",
    "start": "1381120",
    "end": "1386720"
  },
  {
    "text": "going to the middle layer of plugins that same thing is replicated between plugins and plug-in modules so an",
    "start": "1386720",
    "end": "1391760"
  },
  {
    "text": "individual plug-in like the catalog can export an extension point in this case the example is the catalog processing",
    "start": "1391760",
    "end": "1397559"
  },
  {
    "text": "extension point which controls how entities are processed as they come in from sources of data and they can um add",
    "start": "1397559",
    "end": "1404360"
  },
  {
    "text": "and plug-in modules can add additional ones of those via that extension point so this extensibility is nested and",
    "start": "1404360",
    "end": "1409440"
  },
  {
    "text": "that's where I think the power really comes from uh so I said I'd show you some code that kind of corresponds to this so same",
    "start": "1409440",
    "end": "1416880"
  },
  {
    "text": "topic importable points of extension so you can see that here this is heavily abbreviated and sort of simplified code",
    "start": "1416880",
    "end": "1422559"
  },
  {
    "text": "but what's happening is we're importing the core Services extension points from the core framework in the top uh section",
    "start": "1422559",
    "end": "1429400"
  },
  {
    "text": "of code and we're grabbing the HTTP router and we're adding our plugins middleware to that router by the same",
    "start": "1429400",
    "end": "1435039"
  },
  {
    "text": "token in the bottom slice of code we're importing the catalog processing extension point from the catalog plugin",
    "start": "1435039",
    "end": "1441159"
  },
  {
    "text": "and then we're using that to add an entity provider which provides us with the The Entity data that we",
    "start": "1441159",
    "end": "1446880"
  },
  {
    "text": "need so um I'm going to cover just one example of extensibility in backstage",
    "start": "1447960",
    "end": "1453159"
  },
  {
    "text": "today this is a concrete example of how extensibility Works in one particular case the case I want to talk about is",
    "start": "1453159",
    "end": "1458400"
  },
  {
    "text": "access control which is a relatively new system in backstage so access control or",
    "start": "1458400",
    "end": "1464159"
  },
  {
    "text": "authorization you might have heard or seen this this notion before that access control is a concept is the product of",
    "start": "1464159",
    "end": "1469679"
  },
  {
    "text": "decision making and enforcement so decision- making is whether a given user can perform a given operation or access",
    "start": "1469679",
    "end": "1476039"
  },
  {
    "text": "a given resource and enforcement is ensuring that the system operates within that constraint the constraint represented by the decision so if you",
    "start": "1476039",
    "end": "1482600"
  },
  {
    "text": "have those two things you're done with access control that's the whole Access Control job done so when we think about",
    "start": "1482600",
    "end": "1487880"
  },
  {
    "text": "that model how can we find the right point to introduce extensibility well I think the first",
    "start": "1487880",
    "end": "1493240"
  },
  {
    "text": "thing to think about is who's responsible for each of those bits so in this case I'm asserting that the uh",
    "start": "1493240",
    "end": "1500039"
  },
  {
    "text": "plug-in uh individual plugins are responsible for enforcement because backstage is so extensible and so generic and we're not in any control of",
    "start": "1500039",
    "end": "1506799"
  },
  {
    "text": "how plugins manage their resources or operations that enforcement part has to rest with plugin owners they have to",
    "start": "1506799",
    "end": "1512399"
  },
  {
    "text": "decide how to enforce the access control restrictions that exist conversely the decision rests with adopters backstage",
    "start": "1512399",
    "end": "1519039"
  },
  {
    "text": "adopters who own backstage instances because they may have very different requirements from instance to instance about how access control is managed some",
    "start": "1519039",
    "end": "1525720"
  },
  {
    "text": "adopters might have strict regulatory requirements that limit uh which users can see which entities conversely other",
    "start": "1525720",
    "end": "1532799"
  },
  {
    "text": "adopters might have much more transparent cultures where they want everyone to see everything so um given",
    "start": "1532799",
    "end": "1538480"
  },
  {
    "text": "those two and then you know the framework there is just kind of making the point that the backstage framework is kind of stitching that all together",
    "start": "1538480",
    "end": "1544000"
  },
  {
    "text": "so given that model I think you can probably see what's coming where the extensibility lies is with the decision",
    "start": "1544000",
    "end": "1549840"
  },
  {
    "text": "so we want the enforcement to be the same every time every plug-in we want plug-in owners to implement that enforcement consistently and in a single",
    "start": "1549840",
    "end": "1556320"
  },
  {
    "text": "way inside their plugin but decision making we want to defer entirely to adopters so in the case of Access",
    "start": "1556320",
    "end": "1561640"
  },
  {
    "text": "Control we've introduced one point of extensibility where you can replace what we call the policy with arbitrary code",
    "start": "1561640",
    "end": "1567640"
  },
  {
    "text": "that decides what decision to make in any given circumstance or with a configurable solution that lets you",
    "start": "1567640",
    "end": "1573120"
  },
  {
    "text": "manage um the decisions that you want to make sort of uh Case by case in a UI",
    "start": "1573120",
    "end": "1580480"
  },
  {
    "text": "um so uh let's do a demo shall we um I'm",
    "start": "1580480",
    "end": "1585840"
  },
  {
    "text": "going to switch laptops now it's probably going to take me a second because we've got speaker view on here so stand by for a moment just going to",
    "start": "1585840",
    "end": "1591440"
  },
  {
    "text": "move this laptop down and I think I'll need to unplug it in order to do that sorry AV",
    "start": "1591440",
    "end": "1598880"
  },
  {
    "text": "friends switch to mine so what I want to show you is what the process looks like for adding and managing an or adding and",
    "start": "1598880",
    "end": "1605200"
  },
  {
    "text": "configuring an extension in both the backstage back end and front end so uh hopefully you'll be able to",
    "start": "1605200",
    "end": "1611919"
  },
  {
    "text": "see my screen in just a moment hey there it is um so uh what",
    "start": "1611919",
    "end": "1618039"
  },
  {
    "text": "I've we've got running here uh we'll ignore that one for now here we've got the backstage back end running doesn't",
    "start": "1618039",
    "end": "1623200"
  },
  {
    "text": "matter what's on the screen right now but the no JS back end is running in this terminal and in this terminal the backstage front end is running so I've",
    "start": "1623200",
    "end": "1628760"
  },
  {
    "text": "got the front end and back end running locally and you can see here this is the um the backstage instance that's running",
    "start": "1628760",
    "end": "1634240"
  },
  {
    "text": "with that front end and back end this is a generic uh instance of Backstage it's pretty close to what you'd get if you",
    "start": "1634240",
    "end": "1639679"
  },
  {
    "text": "scaffolded a brand new backstage app uh from scratch the only caveat is I have replaced the standard backend and front",
    "start": "1639679",
    "end": "1646480"
  },
  {
    "text": "end systems which require that manual wiring still with the new backend and front end systems which provide that",
    "start": "1646480",
    "end": "1651720"
  },
  {
    "text": "declarative integration solution so how do I add features and capabilities to",
    "start": "1651720",
    "end": "1656799"
  },
  {
    "text": "this backage instance in that model well you'll see we have a bunch of different kinds of resource available here um and",
    "start": "1656799",
    "end": "1664159"
  },
  {
    "text": "I can browse around and see the different ones there's a guest user and there's me uh and we can see some groups and all that you know and so on um we",
    "start": "1664159",
    "end": "1672480"
  },
  {
    "text": "haven't got any resources in the system let's say I want to add some of the resources that I have uh in my software",
    "start": "1672480",
    "end": "1678440"
  },
  {
    "text": "ecosystem so uh the resources that I want to add are Planet resources because",
    "start": "1678440",
    "end": "1683840"
  },
  {
    "text": "my company's somehow in charge of planets um well partly because I was sitting in a room with a planets poster",
    "start": "1683840",
    "end": "1689480"
  },
  {
    "text": "when I was working on this and got inspired I guess so um we've got an API running",
    "start": "1689480",
    "end": "1695240"
  },
  {
    "text": "here uh if I change tabs might have to do a bit of un",
    "start": "1695240",
    "end": "1701039"
  },
  {
    "text": "maximizing there we go that's what I want to show you so we've got an API running here which provides some information about the planets in the",
    "start": "1701039",
    "end": "1706720"
  },
  {
    "text": "solar system you can see we've got um planet names and we've got a planet image as well and we have this running",
    "start": "1706720",
    "end": "1712360"
  },
  {
    "text": "as a um an API too so that's available to query uh over here in this terminal",
    "start": "1712360",
    "end": "1718840"
  },
  {
    "text": "window so uh if I want to add uh those resources to my backstage catalog uh",
    "start": "1718840",
    "end": "1724880"
  },
  {
    "text": "there's actually only one step that I have to do because I already have a module written uh which provides an",
    "start": "1724880",
    "end": "1730360"
  },
  {
    "text": "entity provider in the right extension point to load those entities into the catalog so if I switch to the um backend",
    "start": "1730360",
    "end": "1737320"
  },
  {
    "text": "package in my backstage instance and I add",
    "start": "1737320",
    "end": "1743840"
  },
  {
    "text": "the um package name which I believe is catalog backend module Planet we'll see",
    "start": "1746320",
    "end": "1753279"
  },
  {
    "text": "how good my memory is just thinking about",
    "start": "1753279",
    "end": "1760919"
  },
  {
    "text": "it see if the demo gods are going to smile on me",
    "start": "1761760",
    "end": "1767200"
  },
  {
    "text": "this is dramatic I wonder what it's waiting for let's make sure that the package",
    "start": "1771760",
    "end": "1777679"
  },
  {
    "text": "name is is uh",
    "start": "1777679",
    "end": "1780679"
  },
  {
    "text": "correct yeah I think that's what I had but let's just double double check it and if this doesn't work the second time",
    "start": "1784679",
    "end": "1790240"
  },
  {
    "text": "we'll have to uh sadly skip the demo maybe there's internet issues",
    "start": "1790240",
    "end": "1797720"
  },
  {
    "text": "oh there we go what a relief um okay so we go back to the browser in fact let's",
    "start": "1800559",
    "end": "1806919"
  },
  {
    "text": "let's go stay in the terminal for now uh so you'll see that uh the backend's actually already restarted and you'll",
    "start": "1806919",
    "end": "1812519"
  },
  {
    "text": "see that since it restarted it's now discovered a new backend module and you'll see that it's now got this log line refreshing Planet resources and I'm",
    "start": "1812519",
    "end": "1819720"
  },
  {
    "text": "leveraging the uh scheduling system built into backstage in the core services to run this every 5 seconds so",
    "start": "1819720",
    "end": "1825600"
  },
  {
    "text": "now I'm refreshing the planet resources from that API every 5 seconds and positioning them into the catalog so when we go back to the",
    "start": "1825600",
    "end": "1833159"
  },
  {
    "text": "browser and maximization thing is not really helping me um have a look at this",
    "start": "1833159",
    "end": "1842360"
  },
  {
    "text": "tab if we refresh and look at the kind we'll now see there's a resource kind and we have all of the planets showing",
    "start": "1842360",
    "end": "1847960"
  },
  {
    "text": "up here and I can click into one of them and see the details so now let's say I want to add some front end functionality",
    "start": "1847960",
    "end": "1853440"
  },
  {
    "text": "to this too uh so I'm going to do the same thing and hopefully it's a little bit less slow this time",
    "start": "1853440",
    "end": "1859279"
  },
  {
    "text": "uh if I go over to my terminal again and switch to the app",
    "start": "1859279",
    "end": "1866240"
  },
  {
    "text": "package and add the front end planets module and we give it a bit more time",
    "start": "1869519",
    "end": "1876200"
  },
  {
    "text": "this time hopefully it'll there we go that was pretty quick and this time we're going to have to restart the front",
    "start": "1876200",
    "end": "1881360"
  },
  {
    "text": "end to cap those changes you see it's still refreshing those uh plugins for us in the back end",
    "start": "1881360",
    "end": "1888960"
  },
  {
    "text": "so once I restart this and add one piece of config this piece of config",
    "start": "1888960",
    "end": "1895360"
  },
  {
    "text": "here to control the order of the entity cards that appears on the screen once that's done we should be",
    "start": "1895360",
    "end": "1902919"
  },
  {
    "text": "able to browse to one of these planets maybe refresh to catch that config change you see the planet image appears as a new card and the thing that I want",
    "start": "1902919",
    "end": "1909639"
  },
  {
    "text": "to highlight here is that there's no code changes necessary apart from that configuration change to my backstage instance at all all I've done is ADD",
    "start": "1909639",
    "end": "1915519"
  },
  {
    "text": "modules and they've stitched in automatically proved their functionality to backstage with none of that wiring required I just plugged in the plug to",
    "start": "1915519",
    "end": "1921679"
  },
  {
    "text": "the socket um so we're hoping that's going to be stable in the next year or so and people are going to be able to benefit from that uh consistently when",
    "start": "1921679",
    "end": "1928480"
  },
  {
    "text": "they adopt backstage uh so that's it for the demo I'm going to switch back to uh the slides laptop now and hopefully it",
    "start": "1928480",
    "end": "1936880"
  },
  {
    "text": "hasn't locked itself we'll see what happens Pi this is Pier's laptop so there may need to be some Authentication",
    "start": "1936880",
    "end": "1945519"
  },
  {
    "text": "nice one thanks we should be able to switch over to the other laptop in a",
    "start": "1948880",
    "end": "1954480"
  },
  {
    "text": "second lovely okay thank you very much um so what's the effect of all this extensibility what benefits do we get",
    "start": "1956799",
    "end": "1963440"
  },
  {
    "text": "from extensibility well firstly focusing on Spotify um so because all the user",
    "start": "1963440",
    "end": "1970159"
  },
  {
    "text": "facing uh functionality in backstage and that's including core things like the catalog are built as plugins it's really",
    "start": "1970159",
    "end": "1976039"
  },
  {
    "text": "easy to parallelize work so teams can um work on features independently without",
    "start": "1976039",
    "end": "1982320"
  },
  {
    "text": "having to coordinate or collaborate to get things done they can just work on their features without having to talk to each other and they can also have",
    "start": "1982320",
    "end": "1988320"
  },
  {
    "text": "distributed ownership of those features so the catalog and team can work independently from the scaffolder team and folks building new functionality on",
    "start": "1988320",
    "end": "1994480"
  },
  {
    "text": "top of it can also work totally independently that distributed ownership model is really really powerful for allowing us to match our investments in",
    "start": "1994480",
    "end": "2001080"
  },
  {
    "text": "different areas to the level of importance of that um that part of the system um the other thing that we get",
    "start": "2001080",
    "end": "2007519"
  },
  {
    "text": "from this is also consistency so uh because everything's built on this backstage Foundation expertise is transferable between plugins so if a",
    "start": "2007519",
    "end": "2014200"
  },
  {
    "text": "person moves from Team to team they can easily contribute more quickly because it's a backstage plugin still what about outside Spotify well",
    "start": "2014200",
    "end": "2021639"
  },
  {
    "text": "firstly all that same stuff so these things are true both inside and outside of Spotify it's still easy to",
    "start": "2021639",
    "end": "2027240"
  },
  {
    "text": "parallelize both in open source and in other adopted instances of Backstage those benefits for minimizing",
    "start": "2027240",
    "end": "2032840"
  },
  {
    "text": "coordination and transferable expertise distribut ownership that's all still true the Bon that we get in the world",
    "start": "2032840",
    "end": "2039320"
  },
  {
    "text": "outside of Spotify is that the tech stack the standards the choices that we've made about how backstage fits",
    "start": "2039320",
    "end": "2045480"
  },
  {
    "text": "together at Spotify doesn't have to be mirrored at other organizations in order for backstage to be valuable they can",
    "start": "2045480",
    "end": "2051878"
  },
  {
    "text": "pick the plugins that they want to use or even build their own to compose the perfect developer platform for their own",
    "start": "2051879",
    "end": "2057398"
  },
  {
    "text": "needs so that's very different from a model where we built a fixed backstage at Spotify and then try to get everyone",
    "start": "2057399",
    "end": "2062599"
  },
  {
    "text": "to use it because in that situation you kind of have to convince everyone that they should work exactly like you work",
    "start": "2062599",
    "end": "2069720"
  },
  {
    "text": "um so I want to pick out some key takeaways from this and these are sort of technical takeaways that seem important to me when we're thinking",
    "start": "2069879",
    "end": "2074960"
  },
  {
    "text": "about how to build extensibility models into other software so the first is when we're reducing repetition in systems",
    "start": "2074960",
    "end": "2081320"
  },
  {
    "text": "like this we should be reducing it by Persona so thinking about who is writing what code so when I think about",
    "start": "2081320",
    "end": "2087280"
  },
  {
    "text": "backstage specifically I think about um moving code from adopter instances into",
    "start": "2087280",
    "end": "2093358"
  },
  {
    "text": "plugins and moving code from plugins into the framework because the framework you write once plugins get written",
    "start": "2093359",
    "end": "2099079"
  },
  {
    "text": "plugin by plugin and adopters have like the most instances so they they're the most numerous in that group so the more",
    "start": "2099079",
    "end": "2105359"
  },
  {
    "text": "we can push things up into plugins and then into the framework the more the overall repetition is",
    "start": "2105359",
    "end": "2110560"
  },
  {
    "text": "reduced the other thing is use the framework that you're building so an extensibility solution where you have",
    "start": "2110560",
    "end": "2117000"
  },
  {
    "text": "some core systems that aren't buil with the extensibility model and then you're trying to extend those things with a set",
    "start": "2117000",
    "end": "2122119"
  },
  {
    "text": "of extensions that have different capabilities it's much harder to get that extensibility model right because you're not leveraging it it's especially",
    "start": "2122119",
    "end": "2127960"
  },
  {
    "text": "in your core team it's just getting kind of used separately by this sort of separate group of people um conversely",
    "start": "2127960",
    "end": "2134079"
  },
  {
    "text": "if you build your core systems with that extensibility model you guarantee that extensibility model is powerful and fit",
    "start": "2134079",
    "end": "2139359"
  },
  {
    "text": "for purpose and the last thing is I can't resist the turtle picture again nested extensibility is just such a powerful",
    "start": "2139359",
    "end": "2145680"
  },
  {
    "text": "concept for us and I really think it can apply elsewhere too so making sure that you can have extensions that are",
    "start": "2145680",
    "end": "2151599"
  },
  {
    "text": "themselves extensible is so powerful for making sure that you're enabling the maximum amount of flexibility in your system",
    "start": "2151599",
    "end": "2158280"
  },
  {
    "text": "and now I'm going to head back to Pier to wrap us up",
    "start": "2158280",
    "end": "2164880"
  },
  {
    "text": "lovely so just some um finishing words",
    "start": "2164880",
    "end": "2169960"
  },
  {
    "text": "on um the ROI of Backstage we get uh this question uh a lot since uh 2020",
    "start": "2169960",
    "end": "2177440"
  },
  {
    "text": "when we decided to open source and it's a very important and good question um we",
    "start": "2177440",
    "end": "2183560"
  },
  {
    "text": "as I mentioned in the beginning we were measuring our own developer productivity through uh number of days it took until",
    "start": "2183560",
    "end": "2189280"
  },
  {
    "text": "the 10th pull request which is um not a fantastic",
    "start": "2189280",
    "end": "2195920"
  },
  {
    "text": "uh metric uh it lacks a lot of nuance but we stole it from meta and figured it",
    "start": "2195920",
    "end": "2202680"
  },
  {
    "text": "it will do now we have evolved a bit and these are some of the metrics we are measuring developer productivity um with",
    "start": "2202680",
    "end": "2210680"
  },
  {
    "text": "at Spotify so um one could read one should read these",
    "start": "2210680",
    "end": "2215800"
  },
  {
    "text": "numbers like this so at sptify we have a 100% adoption of of Backstage so we",
    "start": "2215800",
    "end": "2221520"
  },
  {
    "text": "divided uh this into 50% of the more frequent users and the other one were",
    "start": "2221520",
    "end": "2227960"
  },
  {
    "text": "less frequent and these numbers are for the more frequent users the 50% and some",
    "start": "2227960",
    "end": "2234520"
  },
  {
    "text": "of them of course aren't using back stitch all that much but they are still this uh cohort",
    "start": "2234520",
    "end": "2241800"
  },
  {
    "text": "is still 2.3 times more active in our GitHub repo um they have a",
    "start": "2241800",
    "end": "2248720"
  },
  {
    "text": "17% uh shorter cycle time uh I think they they create code twice as twice as",
    "start": "2248720",
    "end": "2255839"
  },
  {
    "text": "many changes uh and the list goes on and you can read more about it on our blog H we",
    "start": "2255839",
    "end": "2261319"
  },
  {
    "text": "published all of our U metrics there and they're also we want to believe a little",
    "start": "2261319",
    "end": "2266680"
  },
  {
    "text": "bit happier uh so the last one here they are 5% more likely to stay with us which",
    "start": "2266680",
    "end": "2273119"
  },
  {
    "text": "I believe like going back to the beginning here I was pretty un happy uh",
    "start": "2273119",
    "end": "2278800"
  },
  {
    "text": "when I joined Spotify and realized I had such a difficult time adding value and",
    "start": "2278800",
    "end": "2285839"
  },
  {
    "text": "so that makes me also sort of feel that we're doing something good for the",
    "start": "2285839",
    "end": "2292079"
  },
  {
    "text": "engineering community at Spotify and for the world uh that they actually want to",
    "start": "2292079",
    "end": "2297680"
  },
  {
    "text": "stick around a little longer if they use backstage and as you all know this is",
    "start": "2297680",
    "end": "2303240"
  },
  {
    "text": "open source so we are not just standing here talking about something that we happen to have and and sadly nobody else",
    "start": "2303240",
    "end": "2309560"
  },
  {
    "text": "but this is very accessible to all of you you can go and use it today",
    "start": "2309560",
    "end": "2314800"
  },
  {
    "text": "uh one thing I think that I want to leave you with is sort of if you want if",
    "start": "2314800",
    "end": "2320599"
  },
  {
    "text": "you do recognize these challenges that we were having uh with scale and speed",
    "start": "2320599",
    "end": "2326440"
  },
  {
    "text": "uh and scale slowing you down these are Universal problems let's",
    "start": "2326440",
    "end": "2332200"
  },
  {
    "text": "solve them globally uh why not why not join the open Community where where you",
    "start": "2332200",
    "end": "2340000"
  },
  {
    "text": "have thousands of other de adopters that have similar not maybe all all the same",
    "start": "2340000",
    "end": "2347280"
  },
  {
    "text": "but similar challenges that your organization may have uh I think that's",
    "start": "2347280",
    "end": "2352560"
  },
  {
    "text": "going to speed all of us up and uh last but not least I want to",
    "start": "2352560",
    "end": "2360200"
  },
  {
    "text": "say thank you um from Mike and I that um thanks for listening I hope this was",
    "start": "2360200",
    "end": "2366640"
  },
  {
    "text": "valuable to you um if you want to know more we have these webinars U by yearly",
    "start": "2366640",
    "end": "2372400"
  },
  {
    "text": "where we release a bunch of stuff new products Etc as we have a commercial commercial leg to Backstage as well uh",
    "start": "2372400",
    "end": "2380319"
  },
  {
    "text": "next to the open source of course so uh check it out if you're interested uh and also cuon will would",
    "start": "2380319",
    "end": "2389000"
  },
  {
    "text": "like your feedback about the talk so please take another picture of that QR code as well thank you",
    "start": "2389000",
    "end": "2397560"
  },
  {
    "text": "[Music]",
    "start": "2401640",
    "end": "2407089"
  }
]