[
  {
    "text": "right let's start right so uh I'm going to talk",
    "start": "760",
    "end": "6080"
  },
  {
    "text": "about a build tool and uh I so I originally I thought I'd just have a",
    "start": "6080",
    "end": "11920"
  },
  {
    "text": "vision of what I think how things should go but turns out I was kind of made faster progress than I than I thought so",
    "start": "11920",
    "end": "19000"
  },
  {
    "text": "I actually have a beta to show and to like yeah demo how I think would be nice",
    "start": "19000",
    "end": "25400"
  },
  {
    "text": "to to do builds and uh who am I I'm Bean Chris V I work at EX we magically",
    "start": "25400",
    "end": "30679"
  },
  {
    "text": "schedule meetings with artificial intelligence and uh you may know me from my work on slick and my years in",
    "start": "30679",
    "end": "35920"
  },
  {
    "text": "Martin's lab and the compos record stuff I did and my involvement in forklift and Maven search maybe um so what's the goal",
    "start": "35920",
    "end": "43239"
  },
  {
    "text": "here with the build tool um I develop open source libraries I'm",
    "start": "43239",
    "end": "49800"
  },
  {
    "text": "working on different projects at work and uh well builds are important for me",
    "start": "49800",
    "end": "56120"
  },
  {
    "text": "and it's kind of it feels like a hle often to just write those builds so I want something nice to replace this and",
    "start": "56120",
    "end": "61239"
  },
  {
    "text": "especially now at exod where we have 25 Engineers a lot of data scientists they they just experiment a lot they read a",
    "start": "61239",
    "end": "67000"
  },
  {
    "text": "lot of small projects that we want to break up our build into smaller things to make it more maintainable um and even",
    "start": "67000",
    "end": "73720"
  },
  {
    "text": "though this is like a side project in my free time eventually it would be nice to use it there as well and it's I'm not",
    "start": "73720",
    "end": "79360"
  },
  {
    "text": "like I'm first of all I would like to Target open source and smaller projects",
    "start": "79360",
    "end": "84640"
  },
  {
    "text": "and then see how where where things go with this um right right so here's what I think",
    "start": "84640",
    "end": "92880"
  },
  {
    "text": "CBT is which is it's made out of few and simple building blocks it's easy to use",
    "start": "92880",
    "end": "99000"
  },
  {
    "text": "it's fast it's audiomatic Scala because you write your builds in Scala it's",
    "start": "99000",
    "end": "104040"
  },
  {
    "text": "flexible so it's simple but at the same time not restrictive it's still flexible and a very important feature of it is",
    "start": "104040",
    "end": "110680"
  },
  {
    "text": "that builds are compositional um and I'll get into that again and also which was also very important to me the code",
    "start": "110680",
    "end": "117119"
  },
  {
    "text": "is actually easy and everybody who has very basic Scala understanding in this room will be able to understand the complete code base and will not take a",
    "start": "117119",
    "end": "123880"
  },
  {
    "text": "long time for this actually so it should be easy to contribute there are other reasons for this so what are the",
    "start": "123880",
    "end": "129440"
  },
  {
    "text": "building blocks the most important one is that you can compose builds you can write a small build have another build",
    "start": "129440",
    "end": "134840"
  },
  {
    "text": "depend on this and this is very fundamental concept which we will derive a lot of functionality from um then there is a Scala like a",
    "start": "134840",
    "end": "143480"
  },
  {
    "text": "library written in Scala that has all the basic features that you would need like putting stuff in a jar file and",
    "start": "143480",
    "end": "149160"
  },
  {
    "text": "Publishing it to it all that that's just a library and build scripts the build",
    "start": "149160",
    "end": "154840"
  },
  {
    "text": "scripts however are written first of all they're written in Scala Scala code and",
    "start": "154840",
    "end": "160000"
  },
  {
    "text": "uh the default way how CBT does it is they're classes so what what usually will call tasks in builds are the",
    "start": "160000",
    "end": "166200"
  },
  {
    "text": "members of this class the methods you can call them and that's how you run tasks and they can depend on each other",
    "start": "166200",
    "end": "171800"
  },
  {
    "text": "that's it and configuration happens through inheritance so you can inherit the class inherit from the class and",
    "start": "171800",
    "end": "176959"
  },
  {
    "text": "then override certain things to kind of hook in however this is a very shallow layer on top of this Library so you can",
    "start": "176959",
    "end": "182599"
  },
  {
    "text": "use all the functionality without this class stuff if you want to it's just a one way to configure your build or the",
    "start": "182599",
    "end": "188519"
  },
  {
    "text": "the kind of suggested way also I I made sure um at least as far as I got to it",
    "start": "188519",
    "end": "195239"
  },
  {
    "text": "that this that the interface of CBT actually works well with other command line tools so for example compile uh",
    "start": "195239",
    "end": "201959"
  },
  {
    "text": "would return the path to the class files or um class path would return actual",
    "start": "201959",
    "end": "208000"
  },
  {
    "text": "class path which you can pass on to Java something like that um Whoever has been around in the CBT",
    "start": "208000",
    "end": "216080"
  },
  {
    "text": "0.7 era May recognize the way to configure builds using classes so this",
    "start": "216080",
    "end": "222360"
  },
  {
    "text": "stuff is actually similar I I didn't realize that until a week ago when I kind of talked to Martin he was like Hey",
    "start": "222360",
    "end": "227400"
  },
  {
    "text": "look at that old stuff and um Turned out they made a lot of similar design decisions with this configuration",
    "start": "227400",
    "end": "234200"
  },
  {
    "text": "stuff um and different ones in other areas so how how do I get it fast so",
    "start": "234200",
    "end": "241239"
  },
  {
    "text": "I'll talk a little bit of theory first and then I'll just show the tool um it runs on the it keeps the jvm running VI",
    "start": "241239",
    "end": "248000"
  },
  {
    "text": "nail gun it uh caches dependencies first of all from downloading them it it comes with its own resolver for Maven um it",
    "start": "248000",
    "end": "256639"
  },
  {
    "text": "Cates them on dis and and doesn't resolve them again when it has them already and uh it does cat the class",
    "start": "256639",
    "end": "262960"
  },
  {
    "text": "loaders for those things in memory so when when you keep running it again the even the class the the jars for your own",
    "start": "262960",
    "end": "269440"
  },
  {
    "text": "project will be resent memory that makes a lot of difference in terms of runtime um there is zinc the incremental",
    "start": "269440",
    "end": "275360"
  },
  {
    "text": "compiler which also has a has an overhead so it kind of guards against running it too often uh it does support concurrency for",
    "start": "275360",
    "end": "282039"
  },
  {
    "text": "for speeding up things in parallel and um I used a different library for triggering automatic rebuilds like when",
    "start": "282039",
    "end": "288800"
  },
  {
    "text": "you Loop uh that's pretty fast on OSX um and why is it easy to understand first",
    "start": "288800",
    "end": "294320"
  },
  {
    "text": "of all because it's very focused like I really want to keep it down to the small parts that really make up a build too",
    "start": "294320",
    "end": "299720"
  },
  {
    "text": "and not kind of diverge from this path that could be done separately I mean it's libraries you can plug them together it's just scalar code right",
    "start": "299720",
    "end": "305360"
  },
  {
    "text": "it's tiny it has less than 1,500 lines of code with all the functionality it has and it's easy code that beginners",
    "start": "305360",
    "end": "311639"
  },
  {
    "text": "can understand and actually and that's it was this was more like the next point was more like a guilty pleasure first",
    "start": "311639",
    "end": "316720"
  },
  {
    "text": "but it turned out to be really useful it actually starts from source so you download you clone the GitHub repository",
    "start": "316720",
    "end": "323759"
  },
  {
    "text": "and then you run a bash script which the first download scolar jars uses those to compile the first part of CBT which",
    "start": "323759",
    "end": "330360"
  },
  {
    "text": "includes the maven resolver and all that uses then runs this to download additional dependencies then uses that",
    "start": "330360",
    "end": "336240"
  },
  {
    "text": "which includes zinc uh to compile the rest and then it's basically ready to go",
    "start": "336240",
    "end": "341639"
  },
  {
    "text": "and it also detects changes in its own source when you use it so you can just keep changing it and it will",
    "start": "341639",
    "end": "347120"
  },
  {
    "text": "automatically recompile itself before it recompiles your project um these are the features supported right now compiling running uh",
    "start": "347120",
    "end": "354960"
  },
  {
    "text": "having tests generating scalar dog pack packing jars uploading them to son type downloading jars from Maven uh repeating",
    "start": "354960",
    "end": "362639"
  },
  {
    "text": "compiling on file changes and composing builds and uh missing that there handful",
    "start": "362639",
    "end": "369720"
  },
  {
    "text": "of superficial things missing like uh configuring different resolvers and cross Scala versions and scal JS support",
    "start": "369720",
    "end": "376039"
  },
  {
    "text": "and and kind of jump into the rep well even that's not actually true there's a way to do that",
    "start": "376039",
    "end": "381280"
  },
  {
    "text": "um so there will probably be a couple of refinement needed even until a larger",
    "start": "381280",
    "end": "387240"
  },
  {
    "text": "audience even can use it for like the simple bills want these features but that should be simple to get in um there",
    "start": "387240",
    "end": "394080"
  },
  {
    "text": "are some rough edges because I mean I'm the only user right now so uh things and",
    "start": "394080",
    "end": "399160"
  },
  {
    "text": "and uh yeah it's only been tested on OS X by me like I know two guys tried it on Windows and and Linux and it did work",
    "start": "399160",
    "end": "405599"
  },
  {
    "text": "apparently but I don't know um and the the output the logging and stuff needs to be improved to kind of be nicer",
    "start": "405599",
    "end": "412639"
  },
  {
    "text": "visible and usability but it's it's okay um all right let's get to it so we're in",
    "start": "412639",
    "end": "419759"
  },
  {
    "text": "a directory with nothing in there um but I have a file prepared here so the very",
    "start": "419759",
    "end": "427280"
  },
  {
    "text": "the most simple CBT build you can have is you don't write any build files you just dump a Scala file so we save the",
    "start": "427280",
    "end": "432520"
  },
  {
    "text": "Scala file now which appears here and what we can do now is just",
    "start": "432520",
    "end": "438520"
  },
  {
    "text": "CBT compile and now um yeah apparently I",
    "start": "438520",
    "end": "444800"
  },
  {
    "text": "changed cbtu since last time so it recompiles itself it kind of stops and S restarts nail gun and compil this we return the",
    "start": "444800",
    "end": "452680"
  },
  {
    "text": "class path actually this um yeah and if you run it again will be very quick",
    "start": "452680",
    "end": "459000"
  },
  {
    "text": "that's like so it's really it's like about half a second and that's straight from the",
    "start": "459000",
    "end": "464199"
  },
  {
    "text": "from your own shell it doesn't need its own shell or something for that which which makes it nicely interoperable and",
    "start": "464199",
    "end": "469720"
  },
  {
    "text": "start time all that okay um",
    "start": "469720",
    "end": "475280"
  },
  {
    "text": "right so right oh there's a little bit of convention in the tool not a lot",
    "start": "475720",
    "end": "480919"
  },
  {
    "text": "because I think if there's a lot of convention you have to learn a lot of things and they can seem very magical in the beginning but a little bit of convention can help to make things",
    "start": "480919",
    "end": "487120"
  },
  {
    "text": "easier um one of the conventions was source files on the main directory and under SL Source in any kind of subfolder",
    "start": "487120",
    "end": "493400"
  },
  {
    "text": "there another convention is if there's a class called main this will be the main class if you do CBT run it will run this",
    "start": "493400",
    "end": "500759"
  },
  {
    "text": "class um okay yet another convention is if there's a folder test",
    "start": "500759",
    "end": "510120"
  },
  {
    "text": "and in this folder test let's cut this out and create a new main file",
    "start": "510120",
    "end": "517360"
  },
  {
    "text": "here there is a object Main in the tests if you",
    "start": "517360",
    "end": "523680"
  },
  {
    "text": "run test in your main project it will basically treat the test folder as a",
    "start": "523680",
    "end": "529839"
  },
  {
    "text": "build load it and run the run method in there which makes very quick even without a framework to just spit out",
    "start": "529839",
    "end": "535120"
  },
  {
    "text": "some tests in the main method and obviously this needs to include the",
    "start": "535120",
    "end": "540399"
  },
  {
    "text": "the main sources right um so you can do something",
    "start": "540399",
    "end": "547760"
  },
  {
    "text": "like right so this is the main source in the main build this is the test",
    "start": "550040",
    "end": "556279"
  },
  {
    "text": "build",
    "start": "556279",
    "end": "559279"
  },
  {
    "text": "so it it that that's how that works um right so okay this is like the",
    "start": "561399",
    "end": "569040"
  },
  {
    "text": "default builds that's not very interesting let's add an actual build to our project um one more convention there",
    "start": "569040",
    "end": "574720"
  },
  {
    "text": "if there's a folder build in which you put any kind of scalar files I I used to call them build. Scala",
    "start": "574720",
    "end": "582360"
  },
  {
    "text": "but um this will be treated as the Scala files for your build and in general it's",
    "start": "582360",
    "end": "587880"
  },
  {
    "text": "already compositional in the sense that the test folder the main folder and the build folder they are all three builds",
    "start": "587880",
    "end": "593079"
  },
  {
    "text": "with exactly the same rules each three of them the same rules uh yeah hope",
    "start": "593079",
    "end": "599880"
  },
  {
    "text": "which means you could actually write tests for your build script in your build folder or you could have a build",
    "start": "599880",
    "end": "605120"
  },
  {
    "text": "for your test file or you can have a build for your build file just because of this composition and it's it's easy",
    "start": "605120",
    "end": "610680"
  },
  {
    "text": "to do so um okay so now let's look at how an actual CBT build script looks",
    "start": "610680",
    "end": "616160"
  },
  {
    "text": "like um when you run CBT",
    "start": "616160",
    "end": "621680"
  },
  {
    "text": "compile um CBT will check if there's a build folder and then in there run a",
    "start": "621680",
    "end": "628680"
  },
  {
    "text": "default build but because it's going into the build folder it doesn't run the standard default build it runs slight",
    "start": "628680",
    "end": "634440"
  },
  {
    "text": "variant of it which is one it's called the build build which",
    "start": "634440",
    "end": "640120"
  },
  {
    "text": "uh well builds your build script basically so and and one of the things",
    "start": "640120",
    "end": "646279"
  },
  {
    "text": "that it does it gives it the dependency on CBT so you can access CBT internals within your build",
    "start": "646279",
    "end": "651399"
  },
  {
    "text": "script so I can do stuff like import CBT uncore and then which is what I",
    "start": "651399",
    "end": "658519"
  },
  {
    "text": "would normally do and then class build that's another convention so if there is",
    "start": "658519",
    "end": "665480"
  },
  {
    "text": "a folder build and there are class files in there it will check for a class called build and that's your script that",
    "start": "665480",
    "end": "671839"
  },
  {
    "text": "that's the one it will run and it expects a particular format which is it takes a value of type context and passes",
    "start": "671839",
    "end": "679399"
  },
  {
    "text": "it on to whatever build you extend from in this case I'll extend from the basic build there are",
    "start": "679399",
    "end": "686880"
  },
  {
    "text": "um a handful of different variants of the builds you can extend there is the the basic build",
    "start": "686880",
    "end": "693240"
  },
  {
    "text": "there is um which doesn't allow you to package or publish stuff there's a package build which requires to give",
    "start": "693240",
    "end": "699639"
  },
  {
    "text": "more information like the artifact name and a version and that and once it has that it allows you to package stuff into",
    "start": "699639",
    "end": "705720"
  },
  {
    "text": "a jar then there's another one which is the publish build which requires even more information for the pum file and",
    "start": "705720",
    "end": "710880"
  },
  {
    "text": "all that um and this basically allows you to publish stuff to sonot type but right now we don't need that so we just",
    "start": "710880",
    "end": "717360"
  },
  {
    "text": "let's say we just want some dependencies right dependencies equals super.",
    "start": "717360",
    "end": "725560"
  },
  {
    "text": "dependencies um right let's what do we do uh",
    "start": "727800",
    "end": "734399"
  },
  {
    "text": "who right to this uh let's do this",
    "start": "734399",
    "end": "740839"
  },
  {
    "text": "um yep",
    "start": "740839",
    "end": "746720"
  },
  {
    "text": "and so I I just adopted the same syntax here as SBT because a lot of people",
    "start": "746720",
    "end": "755199"
  },
  {
    "text": "publish their dependency descriptions this format in this format so you can have the same DSL here",
    "start": "755199",
    "end": "763880"
  },
  {
    "text": "so now I'm I'm depending on a library and in my main code I can now go ahead let's make a main thing again in our",
    "start": "763880",
    "end": "770360"
  },
  {
    "text": "main code I can go ahead again um yeah",
    "start": "770360",
    "end": "778120"
  },
  {
    "text": "actually and the main that's the main app I can now",
    "start": "778120",
    "end": "784240"
  },
  {
    "text": "import something from this Library uh in this case I'll import this",
    "start": "790560",
    "end": "796240"
  },
  {
    "text": "method which allows us to um",
    "start": "796240",
    "end": "802070"
  },
  {
    "text": "[Music] show basically what scal of things and expression is after typ checking it",
    "start": "802070",
    "end": "811120"
  },
  {
    "text": "um right override",
    "start": "811639",
    "end": "818199"
  },
  {
    "text": "dependencies um oh right",
    "start": "818199",
    "end": "823880"
  },
  {
    "text": "right right so that's the output that shows okay here's there's this famous can build from and all that stuff um but",
    "start": "828320",
    "end": "834680"
  },
  {
    "text": "basically we just added a dependency to our build and because this folder build",
    "start": "834680",
    "end": "839759"
  },
  {
    "text": "which is very small which you can see here um is a build itself you can do the same thing it's like spt has a similar",
    "start": "839759",
    "end": "845199"
  },
  {
    "text": "feature right where you can add a build file for a build and then you can have dependency which you pull into your build but it's just standard scalar code",
    "start": "845199",
    "end": "851440"
  },
  {
    "text": "so usually if you would create like something like plugins they would be they would be traits which you mix into",
    "start": "851440",
    "end": "857600"
  },
  {
    "text": "this build which you pull in as a just normal dependency and you just mix it in and in fact",
    "start": "857600",
    "end": "863600"
  },
  {
    "text": "um uh it comes with some traits already there's like one for Scala test where you just mix it in and then you build",
    "start": "863600",
    "end": "869399"
  },
  {
    "text": "becomes a scalar test build that is preconfigured to run scalar test",
    "start": "869399",
    "end": "874680"
  },
  {
    "text": "um right uh so what else would I want to show um right and you've seen how oh",
    "start": "874680",
    "end": "884160"
  },
  {
    "text": "okay let's let's actually give the test a build file as well so now in the test",
    "start": "884160",
    "end": "891000"
  },
  {
    "text": "folder we create a build folder and in the build folder we create a build",
    "start": "891000",
    "end": "897199"
  },
  {
    "text": "Scala um and I'll just copy this over and by default it would look like this",
    "start": "897199",
    "end": "903320"
  },
  {
    "text": "with test that's basically the default that that CBT uses itself but let let's",
    "start": "903320",
    "end": "909360"
  },
  {
    "text": "not do that let's basically write this by hand just to see how how this would look like because the way I mean the",
    "start": "909360",
    "end": "915880"
  },
  {
    "text": "test project it's an own project but it depends on the other one right it needs to compile the other one first and use",
    "start": "915880",
    "end": "922000"
  },
  {
    "text": "the class pass of the other one in order to run the test against it but you can just do this by hand and that's exactly",
    "start": "922000",
    "end": "927800"
  },
  {
    "text": "what this test trait does so you can have a so-called build",
    "start": "927800",
    "end": "932959"
  },
  {
    "text": "dependency then where you say well so project",
    "start": "932959",
    "end": "939360"
  },
  {
    "text": "directory is a uh member of this basic build which just gives you the directory",
    "start": "939360",
    "end": "945079"
  },
  {
    "text": "this Builder is responsible for so in this case it would be the directory test and from there we want to go One",
    "start": "945079",
    "end": "951160"
  },
  {
    "text": "Directory up which is the main stuff and so now we depend on the main stuff and",
    "start": "951160",
    "end": "956480"
  },
  {
    "text": "um in fact you can even do this",
    "start": "956480",
    "end": "962519"
  },
  {
    "text": "where where you get actually",
    "start": "962519",
    "end": "968639"
  },
  {
    "text": "um I think it's b. build this would give you an actual handle to the build object",
    "start": "968639",
    "end": "973839"
  },
  {
    "text": "so you can interface you can interoperate with it call methods on it if you want to do that but in this case we just depend on it which means it's",
    "start": "973839",
    "end": "979480"
  },
  {
    "text": "compiled first and we inherit the class path",
    "start": "979480",
    "end": "984639"
  },
  {
    "text": "um right so and this is a way how you can",
    "start": "984920",
    "end": "990040"
  },
  {
    "text": "basically assemble projects together right you can you have a handle to a different build and you can kind of",
    "start": "990040",
    "end": "995399"
  },
  {
    "text": "create structures how you want you can do multi projects built with it you can have uh destructure stuff into different",
    "start": "995399",
    "end": "1001079"
  },
  {
    "text": "projects and have one that's contained and then the other one depend on it",
    "start": "1001079",
    "end": "1006360"
  },
  {
    "text": "um right did we did we actually try that we didn't did we uh so in that we need to run test",
    "start": "1006360",
    "end": "1013360"
  },
  {
    "text": "so that it changes into the test folder and does run there then which oh we didn't configure it that to do anything",
    "start": "1013360",
    "end": "1019319"
  },
  {
    "text": "so it shouldn't do anything I think right so in we want to what do we",
    "start": "1019319",
    "end": "1026280"
  },
  {
    "text": "want to do um",
    "start": "1026280",
    "end": "1032798"
  },
  {
    "text": "yeah oh actually should do something right oh that's just",
    "start": "1032799",
    "end": "1039240"
  },
  {
    "text": "here yeah so it does um",
    "start": "1045319",
    "end": "1050840"
  },
  {
    "text": "right okay um few other things there CBT",
    "start": "1053679",
    "end": "1059360"
  },
  {
    "text": "admin which among other things has this so admin is like it doesn't call you",
    "start": "1059360",
    "end": "1064480"
  },
  {
    "text": "build it just does it's like additional functionality one of the things is resolve you can get just give it a dependency and it will resolve it and",
    "start": "1064480",
    "end": "1070799"
  },
  {
    "text": "return the class path which basically allows you to quickly Scala D CP I'm using fish shell so I have these round",
    "start": "1070799",
    "end": "1076880"
  },
  {
    "text": "parentheses to kind of execute this Comm command uh now I can import yeah do I have this yeah so you kind of have",
    "start": "1076880",
    "end": "1084320"
  },
  {
    "text": "access to the resolver to just resolve stuff and give you the class path um oh one thing I also didn't show um",
    "start": "1084320",
    "end": "1092639"
  },
  {
    "text": "custom custom tasks or I mean there are methods",
    "start": "1094080",
    "end": "1100480"
  },
  {
    "text": "right and basically what you what CBT allows you is to call to call methods on your build",
    "start": "1101039",
    "end": "1107400"
  },
  {
    "text": "object from the from the command line and it can also list them so the the default if you just type CBT you could",
    "start": "1107400",
    "end": "1113039"
  },
  {
    "text": "just get a help thing this is the method F which I just added to the build and uh these are just all the ones",
    "start": "1113039",
    "end": "1119159"
  },
  {
    "text": "that are kind of provided for example the provided ones are Scala version and I try to use similar terminology to spt",
    "start": "1119159",
    "end": "1126400"
  },
  {
    "text": "just because to keep it familiar where where it made sense but I can also just call",
    "start": "1126400",
    "end": "1132440"
  },
  {
    "text": "Fu and then it returns this so that's that um",
    "start": "1132440",
    "end": "1140480"
  },
  {
    "text": "right yeah and I can do stuff like CBT class",
    "start": "1140480",
    "end": "1145960"
  },
  {
    "text": "path where I do Java D",
    "start": "1145960",
    "end": "1151440"
  },
  {
    "text": "CP main uh",
    "start": "1151440",
    "end": "1158640"
  },
  {
    "text": "sorry no it's fish shell it's not bash uh did I remove this stuff oh yeah",
    "start": "1159360",
    "end": "1166760"
  },
  {
    "text": "this um",
    "start": "1166760",
    "end": "1170720"
  },
  {
    "text": "yeah so you kind of interop with it with the command line interface which is kind of nice",
    "start": "1176039",
    "end": "1181799"
  },
  {
    "text": "um I guess that's what I wanted to show let's get back to some slides so to get",
    "start": "1181799",
    "end": "1187880"
  },
  {
    "text": "started there's a read me file I mean it's it's it's a quick intro I wrote like a quick getting started it might",
    "start": "1187880",
    "end": "1192919"
  },
  {
    "text": "even be outdated by now after the changes I did in the last days but kind of should get you started um basically",
    "start": "1192919",
    "end": "1199200"
  },
  {
    "text": "one fundamental philosophy which drove CBT is builds aren't special they are",
    "start": "1199200",
    "end": "1206440"
  },
  {
    "text": "just code they're just another software problem you want to solve so just write software and do it the same way like you",
    "start": "1206440",
    "end": "1211760"
  },
  {
    "text": "always do it and I mean if you need particularly heavy configuration then inheritance is is a way is one thing",
    "start": "1211760",
    "end": "1219440"
  },
  {
    "text": "that allows you to do that so let's in this case use inheritance um the dependencies of CBT itself is zinc obviously Scala barbery",
    "start": "1219440",
    "end": "1226919"
  },
  {
    "text": "watch service which is the thing that allows oh I did show you that I do that now um I didn't there were two things I",
    "start": "1226919",
    "end": "1233679"
  },
  {
    "text": "didn't show you so CBT uh first of all Loop compile and this- dlog allows you",
    "start": "1233679",
    "end": "1242039"
  },
  {
    "text": "to give some output some logging so these are the so I'm I'm Loop",
    "start": "1242039",
    "end": "1247360"
  },
  {
    "text": "compiling now it's like the Tilted thing in in spt um and these are the path that CBT",
    "start": "1247360",
    "end": "1253440"
  },
  {
    "text": "watches and as you can see well it's the demo it's actually the the buil script",
    "start": "1253440",
    "end": "1258600"
  },
  {
    "text": "scripts of the demo so if you make changes in your build scripts it will also loop it's the sources of your project it's these three things which is",
    "start": "1258600",
    "end": "1265960"
  },
  {
    "text": "CBT itself so you can change the build tool itself and it keeps looping over it and improving so you can kind of keep",
    "start": "1265960",
    "end": "1272520"
  },
  {
    "text": "yeah so let's just change something let's change I don't know let's change",
    "start": "1272520",
    "end": "1277640"
  },
  {
    "text": "this to what did we Loop let's Loop run does that actually does actually",
    "start": "1277640",
    "end": "1283159"
  },
  {
    "text": "work um let's see so let's change this to uh",
    "start": "1283159",
    "end": "1289200"
  },
  {
    "text": "some random stuff and let's see what happens um where did it print",
    "start": "1289200",
    "end": "1298279"
  },
  {
    "text": "it sorry oh right but didn't I change it",
    "start": "1298279",
    "end": "1304600"
  },
  {
    "text": "to it changed oh I did a run test oh I have to run yeah of course I have to do",
    "start": "1304600",
    "end": "1311240"
  },
  {
    "text": "Fu right and let's do it something with s in the",
    "start": "1311240",
    "end": "1317520"
  },
  {
    "text": "start there we go actually runs it twice that's right I guess that's a",
    "start": "1317520",
    "end": "1324760"
  },
  {
    "text": "bug um right uh oh another thing just for",
    "start": "1324760",
    "end": "1332159"
  },
  {
    "text": "fun um uh so let's go into actually into CBT itself and now I'm going",
    "start": "1332159",
    "end": "1340760"
  },
  {
    "text": "to kill the maven cash so now um if I do anything like CBT",
    "start": "1340760",
    "end": "1348520"
  },
  {
    "text": "run it will need to redownload all the dependencies and let's log the",
    "start": "1348520",
    "end": "1355039"
  },
  {
    "text": "resolver so we can see how it just downloads all the stuff we'll get back to this in a",
    "start": "1355600",
    "end": "1360720"
  },
  {
    "text": "second um right it currently uh it currently depends on on emite Ops as",
    "start": "1360720",
    "end": "1367360"
  },
  {
    "text": "well even though it's very very little so I'm thinking about just getting rid of this dependency and inlining this or like doing something similar",
    "start": "1367360",
    "end": "1374120"
  },
  {
    "text": "um so I wrote a custom Maven resolver so uh",
    "start": "1374120",
    "end": "1380440"
  },
  {
    "text": "just because it turned out easier than I thought it was like 30 lines or something for something that doesn't",
    "start": "1380919",
    "end": "1387640"
  },
  {
    "text": "cover the complete Maven spec but I yet have to see it to fail I'm I'm sure there are things out there where it will",
    "start": "1387640",
    "end": "1393200"
  },
  {
    "text": "fail I heard from uh Alexander Who develops corser that even corsier which does a lot more still fails on I think",
    "start": "1393200",
    "end": "1399720"
  },
  {
    "text": "some Hadoop dependencies or something but I I do it's not implemented right now but I do I had it implemented but",
    "start": "1399720",
    "end": "1406360"
  },
  {
    "text": "then it kind of fell out to kind of support to swap in corsier which basically would mean you use the simple",
    "start": "1406360",
    "end": "1411440"
  },
  {
    "text": "dependency manager to download corsier which works I tried that and then you can use corsier to resolve whatever else",
    "start": "1411440",
    "end": "1417039"
  },
  {
    "text": "you need which didn't work with the simple one um",
    "start": "1417039",
    "end": "1424039"
  },
  {
    "text": "right oh by the way uh file watching so Java has its own Watcher to watch",
    "start": "1424039",
    "end": "1430279"
  },
  {
    "text": "files however on OSX for some reason they didn't Implement native support for the hooks in the operating system",
    "start": "1430279",
    "end": "1436080"
  },
  {
    "text": "instead they pull every like I think 4 seconds which which is kind of a bit slow so there's this other uh project",
    "start": "1436080",
    "end": "1442440"
  },
  {
    "text": "barbery watch service which basically just implemented that for OSX and I guess uses the native Javas thing on the",
    "start": "1442440",
    "end": "1447559"
  },
  {
    "text": "other systems um right you can parall execute tasks",
    "start": "1447559",
    "end": "1452799"
  },
  {
    "text": "it's like opt in there's a method which just you can give it the task and you can run it in parallel um of course that requires care from you because you do",
    "start": "1452799",
    "end": "1459039"
  },
  {
    "text": "like file system like IO or something if you like write in the same stuff then it will screw stuff up",
    "start": "1459039",
    "end": "1464960"
  },
  {
    "text": "um there is however a feature built in a tiny caching thing which allows you to wrap a",
    "start": "1464960",
    "end": "1472480"
  },
  {
    "text": "task into a caching like basically a caching wrapper which is thread safe and allows kind of if multip if you call two",
    "start": "1472480",
    "end": "1479799"
  },
  {
    "text": "task at once which both depend on the same task you can kind of guard them from from kind of screwing that up if",
    "start": "1479799",
    "end": "1486520"
  },
  {
    "text": "you know that this will be a problem and it will be cashed so it will only be run once also you can use it for expensive stuff build composition so really this",
    "start": "1486520",
    "end": "1493399"
  },
  {
    "text": "is like something like this is what builds look like right you have all these kind of little projects which depend on each other and it's not",
    "start": "1493399",
    "end": "1498880"
  },
  {
    "text": "uncommon that people write large build files for the whole thing and then at some point it kind of gets un uh unhandy and then then you kind of break it up",
    "start": "1498880",
    "end": "1505320"
  },
  {
    "text": "but then how people work is that they publish snapshots to like a local artifactory and then but that's kind of",
    "start": "1505320",
    "end": "1511360"
  },
  {
    "text": "cumbersome so I really want something where you can break it up and can publish everything independently if you want to but usually the way you work and",
    "start": "1511360",
    "end": "1518440"
  },
  {
    "text": "develop is that you have everything kind of together and build dependencies on each other and then I actually have an or for dependencies where you can say",
    "start": "1518440",
    "end": "1526320"
  },
  {
    "text": "either use the file system if it's there or else use a MAV dependency like a combinator on um on",
    "start": "1526320",
    "end": "1532600"
  },
  {
    "text": "builds right oh and this whole uh dependency",
    "start": "1532600",
    "end": "1538000"
  },
  {
    "text": "stuff like build composition M allows dependent build multi project builds having tests as nothing special just the",
    "start": "1538000",
    "end": "1543360"
  },
  {
    "text": "dependent projects having builds of builds and wherever you need like a before B and actually it's even unified",
    "start": "1543360",
    "end": "1549520"
  },
  {
    "text": "with dependencies so most of the code between that most of the code of a maven dependency and a build is actually",
    "start": "1549520",
    "end": "1555520"
  },
  {
    "text": "shared between the two um because it's kind of the same thing right provide something before you can do something",
    "start": "1555520",
    "end": "1561039"
  },
  {
    "text": "this is like the kind of concept that underlies all this stuff current limitations um concurrent builds so",
    "start": "1561039",
    "end": "1567640"
  },
  {
    "text": "basically what I do support is concurrent tasks within one build of the kind of lots of builds what I don't",
    "start": "1567640",
    "end": "1573000"
  },
  {
    "text": "support right now is um running several builds concurrently I do do parallel",
    "start": "1573000",
    "end": "1578679"
  },
  {
    "text": "downloads I don't do parallel builds um because with the parallel builds you",
    "start": "1578679",
    "end": "1584120"
  },
  {
    "text": "would kind of need to make sure that you kind of compile them in the right order um",
    "start": "1584120",
    "end": "1589240"
  },
  {
    "text": "which I just didn't Implement yet which you should be able to implement but you have to be more careful that you",
    "start": "1589240",
    "end": "1595960"
  },
  {
    "text": "actually cache correctly so every kind of build exists only once and you but so",
    "start": "1595960",
    "end": "1601240"
  },
  {
    "text": "but it shouldn't shouldn't be a conceptual problem with my model um right another problem with the model is",
    "start": "1601240",
    "end": "1607760"
  },
  {
    "text": "and there's I think we need some solution for that so I you CBT is",
    "start": "1607760",
    "end": "1613080"
  },
  {
    "text": "inheritance right inheritance is static so you wire it all together and then it is wired and let's say um yeah so how",
    "start": "1613080",
    "end": "1620480"
  },
  {
    "text": "would you do it if you want to provide the Scala version from the command line if it's wired into this object like the",
    "start": "1620480",
    "end": "1626240"
  },
  {
    "text": "build once it's running it's like instantiated how can it swap out its own version number um the other thing is something",
    "start": "1626240",
    "end": "1634000"
  },
  {
    "text": "like let's say you have one task publish and one task publish signed or one one",
    "start": "1634000",
    "end": "1640440"
  },
  {
    "text": "task publish snapshot and when you have a want to publish a snapshot you want to swap out the orend the snapshot to the",
    "start": "1640440",
    "end": "1646240"
  },
  {
    "text": "version number um but it's kind of already wired right so there are multiple ways one is",
    "start": "1646240",
    "end": "1653919"
  },
  {
    "text": "uh we could just make the classes mutable which like the members which is probably not a nice thing um if I'm not",
    "start": "1653919",
    "end": "1661519"
  },
  {
    "text": "mistaken it is roughly how CBT does it right isn't it sort of mutable like I",
    "start": "1661519",
    "end": "1667559"
  },
  {
    "text": "mean it's a state mon ad but it's it's it has effects on the rest right or maybe I'm I'm just mistaken",
    "start": "1667559",
    "end": "1675080"
  },
  {
    "text": "um the other thing is you could hardcode the use cases that are at hand differently for example take the version",
    "start": "1675080",
    "end": "1681000"
  },
  {
    "text": "number as an argument to the class or put it in the context rather than make it a member depends on how far we get",
    "start": "1681000",
    "end": "1686720"
  },
  {
    "text": "with this I'm not sure another thing is use code generation in some way to basically generate sub classes for the",
    "start": "1686720",
    "end": "1693000"
  },
  {
    "text": "property that you give uh by the command line CBT could do that it could generate a subass of this build thing which",
    "start": "1693000",
    "end": "1698399"
  },
  {
    "text": "overrides I mean it's a build tool after all it can it has access to a compiler it can generate code and compile it at build time right and another way would",
    "start": "1698399",
    "end": "1705360"
  },
  {
    "text": "be what what I would imagine would would be actually nice kind of gen create a something that's independent that's kind",
    "start": "1705360",
    "end": "1710760"
  },
  {
    "text": "of reusable independent of the build tool which is which would basically allow you at runtime to mix in stuff so",
    "start": "1710760",
    "end": "1717360"
  },
  {
    "text": "let's imagine this we are in the basic build which is the the base class and then we have published snapshot which needs a reconfigured build where the",
    "start": "1717360",
    "end": "1723640"
  },
  {
    "text": "version number is replaced and then I could say this do mixin and then give it something of the same type that I want",
    "start": "1723640",
    "end": "1730000"
  },
  {
    "text": "to mix in and it would generate the code for that so well that's that's still it's it",
    "start": "1730000",
    "end": "1736159"
  },
  {
    "text": "becomes it becomes inter with stuff like a pending snapshot automatically or or",
    "start": "1736159",
    "end": "1741440"
  },
  {
    "text": "managing version numbers so something we still uh there's room for for figuring",
    "start": "1741440",
    "end": "1747840"
  },
  {
    "text": "stuff out um oh and this even though it would require like code generation and and",
    "start": "1747840",
    "end": "1754760"
  },
  {
    "text": "reflection and all that it's all at build time right so if something breaks it breaks at build time not",
    "start": "1754760",
    "end": "1760440"
  },
  {
    "text": "at right how to contribute so it's distributed a source right when you use it you have the source right there and",
    "start": "1760440",
    "end": "1765840"
  },
  {
    "text": "when you change it even applies immediately so it's very easy to kind of change stuff there's a very quick developer guide which gives an overview",
    "start": "1765840",
    "end": "1771120"
  },
  {
    "text": "of the folders which I can actually do here as an nonconference session or or maybe even right after in the break or something and the the code is clean and",
    "start": "1771120",
    "end": "1778200"
  },
  {
    "text": "easy there there's some little superficial craft which just accumulated in the last two days while I was like fixing things but it's it doesn't like",
    "start": "1778200",
    "end": "1786360"
  },
  {
    "text": "I'm I'm actually very happy with the overall structure and architecture and all that um right it rebuilds",
    "start": "1786360",
    "end": "1792279"
  },
  {
    "text": "itself um extensions are just trades put them in libraries on Maven or something or put them in in builds you depend on",
    "start": "1792279",
    "end": "1798039"
  },
  {
    "text": "which your builds can depend on right the build project itself um source code later um it would be nice to right now",
    "start": "1798039",
    "end": "1806279"
  },
  {
    "text": "all builds need the same need to use the same CBT version you could imagine that if you want to drop in Scala test or",
    "start": "1806279",
    "end": "1811399"
  },
  {
    "text": "something as a dependency and Scala test would build with CBT probably it doesn't use exactly",
    "start": "1811399",
    "end": "1817120"
  },
  {
    "text": "the same CBT version like you do so you would need to kind of bridge but that shouldn't be too hard actually we would need to Define an interface which I",
    "start": "1817120",
    "end": "1823640"
  },
  {
    "text": "means like hey compile yourself before me that is actually that works across CBT versions they can talk to each other",
    "start": "1823640",
    "end": "1830240"
  },
  {
    "text": "yeah concurrent builds course the integration actually caching the dependency class loers I do now um which",
    "start": "1830240",
    "end": "1836080"
  },
  {
    "text": "gives a lot of speed up which actually if I wouldn't cach the dependencies the class loaders for the dependencies of",
    "start": "1836080",
    "end": "1841799"
  },
  {
    "text": "your own project I add minimum a second to the response time and a second versus",
    "start": "1841799",
    "end": "1846840"
  },
  {
    "text": "half a second is a big difference on like interactive use right oh I have some of a somewhat of a surprise feature",
    "start": "1846840",
    "end": "1853399"
  },
  {
    "text": "for scal 16 2016 which I have sort of implemented but not integrated which is",
    "start": "1853399",
    "end": "1859440"
  },
  {
    "text": "and GitHub dependen would be nice spt interupt would be nice so you could use a spt build as a build dependency in",
    "start": "1859440",
    "end": "1867159"
  },
  {
    "text": "your main thing which would really if we have that then it really enables this to kind of interoperate in the scal",
    "start": "1867159",
    "end": "1872600"
  },
  {
    "text": "ecosystem right with the existing stuff uh so there's here's a question that everybody asks what does it actually",
    "start": "1872600",
    "end": "1879120"
  },
  {
    "text": "mean um so I mean for me the C comes from compositional but there are some of",
    "start": "1879120",
    "end": "1884760"
  },
  {
    "text": "the some of the things that people suggested because usually people were like what what does it mean is it X and",
    "start": "1884760",
    "end": "1891159"
  },
  {
    "text": "uh well there's complex build tool there's cool build tool there's CBT",
    "start": "1891159",
    "end": "1896200"
  },
  {
    "text": "build tool because it's recursive this compossible build tool which is kind of funny because it's",
    "start": "1896200",
    "end": "1902240"
  },
  {
    "text": "compossible was like my little pun last year at scad days for composition possible when it pres present the",
    "start": "1902240",
    "end": "1907720"
  },
  {
    "text": "records what I actually got the most was Chris build tool which so I think I'll",
    "start": "1907720",
    "end": "1914519"
  },
  {
    "text": "actually go with that for now however here's here's an idea had so if we",
    "start": "1914519",
    "end": "1920120"
  },
  {
    "text": "manage like if this gets traction and we manage to kind of make it a community thing let's in one year at any Scala",
    "start": "1920120",
    "end": "1926519"
  },
  {
    "text": "rename it to community build tool how about that and uh oh special offer at any",
    "start": "1926519",
    "end": "1933679"
  },
  {
    "text": "Scala I'll make your CBT bills work",
    "start": "1933679",
    "end": "1937518"
  },
  {
    "text": "if and what's next well this is beta let's go bug hunting uh please report",
    "start": "1939799",
    "end": "1945200"
  },
  {
    "text": "lots of issues and submit PRS and let's get this stuff solid until scholar days",
    "start": "1945200",
    "end": "1950799"
  },
  {
    "text": "and what also is missing is",
    "start": "1950799",
    "end": "1956000"
  },
  {
    "text": "this so now it's on GitHub and that's",
    "start": "1956000",
    "end": "1962039"
  },
  {
    "text": "it miles",
    "start": "1967080",
    "end": "1973279"
  },
  {
    "text": "yes",
    "start": "1976840",
    "end": "1979840"
  },
  {
    "text": "sounds sounds great I'd love that yep I mean it should be like each",
    "start": "1997720",
    "end": "2003240"
  },
  {
    "text": "of the projects create an CBT build and we have some kind of Master project which just depends on them right and",
    "start": "2003240",
    "end": "2008679"
  },
  {
    "text": "that's it yeah that's it uh",
    "start": "2008679",
    "end": "2015480"
  },
  {
    "text": "problem oh sorry one so the question miles asked just for the camera uh type",
    "start": "2016960",
    "end": "2023039"
  },
  {
    "text": "level is kind of looking for some build tool that kind of compiles all of their projects together and one idea would to kind of potentially build it onb on CBT",
    "start": "2023039",
    "end": "2030279"
  },
  {
    "text": "sorry Rob yeah so the liation you mentioned",
    "start": "2030279",
    "end": "2036720"
  },
  {
    "text": "inheritance things that are kind of St you",
    "start": "2036720",
    "end": "2043200"
  },
  {
    "text": "mentioned so would it be possible just all the inheritance based",
    "start": "2043200",
    "end": "2048599"
  },
  {
    "text": "stuff your tasks",
    "start": "2048599",
    "end": "2052879"
  },
  {
    "text": "are right so so so the question was uh because of",
    "start": "2060639",
    "end": "2066240"
  },
  {
    "text": "the limitation with inheritance could you just basically use a state Monet instead and use that to compose the",
    "start": "2066240",
    "end": "2072599"
  },
  {
    "text": "different steps and and call out to the library I I mean you totally should be able to do that it's just a library",
    "start": "2072599",
    "end": "2078040"
  },
  {
    "text": "right it's you just need to build a a new layer on top of this library and I mean if you if we go into the source",
    "start": "2078040",
    "end": "2083720"
  },
  {
    "text": "code of uh no",
    "start": "2083720",
    "end": "2089560"
  },
  {
    "text": "wait CBT itself and we look into the def I think it's called default",
    "start": "2090079",
    "end": "2097240"
  },
  {
    "text": "build should be called basic build",
    "start": "2097240",
    "end": "2102320"
  },
  {
    "text": "um this is really how it looks like right you have test which called out to lip. test you have run which called out to run if main found and you have",
    "start": "2102720",
    "end": "2110520"
  },
  {
    "text": "compile which called out to lip. compile and just takes all the stuff that has been assembled in this class and uh",
    "start": "2110520",
    "end": "2116200"
  },
  {
    "text": "that's some heck I just did",
    "start": "2116200",
    "end": "2121480"
  },
  {
    "text": "uh right this is probably something that I should put in the library as well",
    "start": "2121480",
    "end": "2129320"
  },
  {
    "text": "yeah uh right more questions yes oh we need to be done one",
    "start": "2129320",
    "end": "2135839"
  },
  {
    "text": "more okay so this is more about the process of how you designed it you said that when you asked people who involved",
    "start": "2135839",
    "end": "2142359"
  },
  {
    "text": "they took a similar approach in the beginning are there any problems that they decided to aband that approach to",
    "start": "2142359",
    "end": "2147680"
  },
  {
    "text": "solve and if so how do you solve those same problems so",
    "start": "2147680",
    "end": "2154680"
  },
  {
    "text": "I I don't know the exact detail of their design decisions I suppose that one of",
    "start": "2154680",
    "end": "2160440"
  },
  {
    "text": "the reasons was this thing that inheritance is fixed and it's harder to reconfigure at runtime um even though I",
    "start": "2160440",
    "end": "2168119"
  },
  {
    "text": "think it's still fine if you provide a basic building block that's just used by the user where not where the user can't",
    "start": "2168119",
    "end": "2173599"
  },
  {
    "text": "do anything wrong um to basically extend that runtime at build time runtime right um I",
    "start": "2173599",
    "end": "2181400"
  },
  {
    "text": "suppose that's it but also I think spt even 0.7 had a handful of Concepts which",
    "start": "2181400",
    "end": "2187880"
  },
  {
    "text": "are all subsumed by the whole build dependency concept or the whole do this before this concept so maybe there was",
    "start": "2187880",
    "end": "2195440"
  },
  {
    "text": "some complication down this road which actually doesn't exist in CBD I'm not sure",
    "start": "2195440",
    "end": "2200599"
  },
  {
    "text": "yeah uh G nail gun so uh nail gun is a library",
    "start": "2200599",
    "end": "2209000"
  },
  {
    "text": "that just keeps the jvm running and you can connect to it over over a service and then start stuff in this okay I",
    "start": "2209000",
    "end": "2215160"
  },
  {
    "text": "think we're we're through I'm happy do we have a break now or if if people want to see the actual code of the tool in",
    "start": "2215160",
    "end": "2222160"
  },
  {
    "text": "the break or something I'm happy to show that it's not going to take long actually okay thank you",
    "start": "2222160",
    "end": "2228838"
  },
  {
    "text": "everyone",
    "start": "2237319",
    "end": "2240319"
  }
]