[
  {
    "start": "0",
    "end": "40000"
  },
  {
    "text": "thanks everyone for coming out hope everyone's having a good Q con learning",
    "start": "4030",
    "end": "9190"
  },
  {
    "text": "a lot really enjoying yourselves what I want to do today is do something kind of",
    "start": "9190",
    "end": "15459"
  },
  {
    "text": "fun we're gonna talk about two fairly new technologies in the space those obviously being service and graph QL",
    "start": "15459",
    "end": "22150"
  },
  {
    "text": "we're good so let's talk about them kind of separately one at a time kind of try to understand those and then talk about",
    "start": "22150",
    "end": "27700"
  },
  {
    "text": "putting them together because we all know nothing ever goes wrong when you take two interesting technologies and",
    "start": "27700",
    "end": "33520"
  },
  {
    "text": "putting them together microtransactions and triple a console games for instance nothing ever goes wrong there so Who am",
    "start": "33520",
    "end": "42100"
  },
  {
    "start": "40000",
    "end": "119000"
  },
  {
    "text": "I I'm Jared short I'm the director of innovation at Trek 10 Trek Ted is an AWS",
    "start": "42100",
    "end": "47829"
  },
  {
    "text": "advanced authorized consulting partner very much a start-up and a few years ago",
    "start": "47829",
    "end": "52899"
  },
  {
    "text": "AWS lamda came out and I sat down with a small group of people we're about six",
    "start": "52899",
    "end": "58059"
  },
  {
    "text": "people at that point in time and said guys I think I think we're gonna see more in this space this is a really",
    "start": "58059",
    "end": "64239"
  },
  {
    "text": "compelling way of approaching building architectures and software in a way that",
    "start": "64239",
    "end": "71049"
  },
  {
    "text": "I don't have to worry about the underlying infrastructure necessarily so",
    "start": "71049",
    "end": "77100"
  },
  {
    "text": "my job at Trek 10 is the director of innovation so what that means is really I get to play with all of the bleeding",
    "start": "77100",
    "end": "83619"
  },
  {
    "text": "edge stuff the new shiny knees out there and figure out more importantly how do I",
    "start": "83619",
    "end": "88630"
  },
  {
    "text": "take these these new shinies and tame them down and up and racialize and then",
    "start": "88630",
    "end": "93700"
  },
  {
    "text": "operationalize them and take them back to our clients so they can actually build value with those new tools",
    "start": "93700",
    "end": "99670"
  },
  {
    "text": "utilities approaches infrastructure etc so I've actually been working with serverless in production at production",
    "start": "99670",
    "end": "107289"
  },
  {
    "text": "loads across startups and enterprises for about two years at this point hundreds of millions of executions and",
    "start": "107289",
    "end": "115090"
  },
  {
    "text": "and we've seen some really some really interesting and compelling outcomes out of that so first I'd like to talk about",
    "start": "115090",
    "end": "121390"
  },
  {
    "text": "graph QL graph QL is a technology that comes out of Facebook they've been using",
    "start": "121390",
    "end": "126939"
  },
  {
    "text": "it internally since about 2012 and they released it publicly",
    "start": "126939",
    "end": "132159"
  },
  {
    "text": "both the spec and some example implementations in 2015",
    "start": "132159",
    "end": "138220"
  },
  {
    "text": "I don't know how many of you know about some of the Facebook technologies and the patents and licensing issues that",
    "start": "138220",
    "end": "143410"
  },
  {
    "text": "were around those they had an interesting clause that said if you ever sued Facebook you lost the rights to use any of their stuff and basically any of",
    "start": "143410",
    "end": "150099"
  },
  {
    "text": "your products some people are really scared of it but recently Facebook MIT",
    "start": "150099",
    "end": "156630"
  },
  {
    "text": "licensed graph QL and react Jas and other technologies that are kind of core",
    "start": "156630",
    "end": "162370"
  },
  {
    "text": "to this this ecosystem that they're building and so people have really appreciated that and they're listening",
    "start": "162370",
    "end": "167800"
  },
  {
    "text": "they're communicating community so what graph QL is it's actually a way of modeling your data and and your",
    "start": "167800",
    "end": "175090"
  },
  {
    "text": "business as somewhat of a graph and then giving you a standardized query and",
    "start": "175090",
    "end": "180670"
  },
  {
    "text": "mutation language and system that you can go and and work with this data and",
    "start": "180670",
    "end": "186040"
  },
  {
    "text": "and this and your business as a graph so",
    "start": "186040",
    "end": "191069"
  },
  {
    "start": "189000",
    "end": "266000"
  },
  {
    "text": "what it really gives you is essentially a one endpoint for your entire API",
    "start": "191069",
    "end": "196750"
  },
  {
    "text": "unlike a rest-based in system you have not path based but just the single end",
    "start": "196750",
    "end": "202450"
  },
  {
    "text": "points where you can issue your queries and and mutations in this standardized",
    "start": "202450",
    "end": "208180"
  },
  {
    "text": "pattern and it gives you back all of the data that you would expect right so what",
    "start": "208180",
    "end": "213670"
  },
  {
    "text": "this gives you is an easy-to-understand API layer a single endpoint all of your",
    "start": "213670",
    "end": "218739"
  },
  {
    "text": "aggregated resources can exist behind this endpoint your developers only get exactly the data that they're asking for",
    "start": "218739",
    "end": "225819"
  },
  {
    "text": "in the shape that they're asking for it we're gonna look at that a little bit later and understand what that really",
    "start": "225819",
    "end": "231489"
  },
  {
    "text": "means you get some streamlined API iteration and extensibility right there's really easy ways to keep",
    "start": "231489",
    "end": "238060"
  },
  {
    "text": "improving on your API without impacting existing clients or developers it",
    "start": "238060",
    "end": "243130"
  },
  {
    "text": "empowers your clients to easily build more efficient requests across the network and really you can abstract away",
    "start": "243130",
    "end": "251470"
  },
  {
    "text": "a lot of complexities that you would normally run into you when dealing with API and then more importantly the graph",
    "start": "251470",
    "end": "257859"
  },
  {
    "text": "QL community and tooling is is insane there's there's so much power behind this that it's it's hard to ignore",
    "start": "257859",
    "end": "266789"
  },
  {
    "start": "266000",
    "end": "373000"
  },
  {
    "text": "some technical details of graph QL obviously there's there's a schema and a spec but importantly it's a typed API",
    "start": "268980",
    "end": "276750"
  },
  {
    "text": "meaning that everything has to be well defined similar to a typed programming",
    "start": "276750",
    "end": "282270"
  },
  {
    "text": "language or something like that you have to define all of these things ahead of time which introduces some interesting",
    "start": "282270",
    "end": "289440"
  },
  {
    "text": "capabilities later on further in the stack so queries whatever I say query I essentially mean a read something that",
    "start": "289440",
    "end": "295650"
  },
  {
    "text": "is reading data from the system when I say mutation it's obviously something that is writing to the system causing a",
    "start": "295650",
    "end": "301350"
  },
  {
    "text": "data change of some kind so graphical is both the specification for issuing these",
    "start": "301350",
    "end": "307560"
  },
  {
    "text": "queries and these mutations this language this typed API and also it's an execution engine that knows how to",
    "start": "307560",
    "end": "315120"
  },
  {
    "text": "understand those and there's reference implementations for nodejs in many other languages but it's this execution engine",
    "start": "315120",
    "end": "322110"
  },
  {
    "text": "that can take these these queries in these mutations and figure out how to resolve them for you and provide a",
    "start": "322110",
    "end": "327390"
  },
  {
    "text": "pattern to to resolve across your data sources and things like that also one",
    "start": "327390",
    "end": "332550"
  },
  {
    "text": "really interesting thing is that it elegantly solves the one percent problem where typically if you were to list out",
    "start": "332550",
    "end": "340470"
  },
  {
    "text": "say for instance a list of speakers at Q Khan and then you also want to know about the talks right so I say give me",
    "start": "340470",
    "end": "346200"
  },
  {
    "text": "all of the speakers in the rest implementation and I get back to all the speakers and it might have a list of",
    "start": "346200",
    "end": "352080"
  },
  {
    "text": "talk IDs that are related those speakers and then I'd have to iterate through each of those speakers for instance and",
    "start": "352080",
    "end": "357960"
  },
  {
    "text": "say okay give me the information about this talk and this talk so at Q Khan there's something like a hundred and seventy nine speakers I would have to do",
    "start": "357960",
    "end": "364620"
  },
  {
    "text": "a hundred and seventy nine more requests for talks for instance with graph QL you",
    "start": "364620",
    "end": "370020"
  },
  {
    "text": "can elegantly solve that problem we're gonna look at that actually so I do have",
    "start": "370020",
    "end": "375710"
  },
  {
    "start": "373000",
    "end": "414000"
  },
  {
    "text": "some examples of the schema here so you can kind of understand it like I said",
    "start": "375710",
    "end": "380730"
  },
  {
    "text": "you have to explicitly define all of your types that are going to exist in your API we have a type of speaker a",
    "start": "380730",
    "end": "386400"
  },
  {
    "text": "speaker has a first name a last name has a list of talks so you can define lists of types obviously denoted by the",
    "start": "386400",
    "end": "394400"
  },
  {
    "text": "brackets there you can have no levels and non nullable meaning that the API is",
    "start": "394400",
    "end": "399870"
  },
  {
    "text": "guaranteed to return some data or doesn't have to guarantee that it will turn data back scalers unions and",
    "start": "399870",
    "end": "406950"
  },
  {
    "text": "we're both inputs there's all sorts of things you can define in these schemas that make it easier to understand and use later so if we want to understand",
    "start": "406950",
    "end": "418290"
  },
  {
    "text": "this concept of Route resolvers route resolvers are essentially something that",
    "start": "418290",
    "end": "423540"
  },
  {
    "text": "says at the very beginning of my graph there has to be an entry points to understand how to change or how to read",
    "start": "423540",
    "end": "431010"
  },
  {
    "text": "data from my API so for instance the kind of the standard approach to this is you have a query route so for instance",
    "start": "431010",
    "end": "437490"
  },
  {
    "text": "in this case we have a query route that has two possible things you can ask for you can either ask for a list of all",
    "start": "437490",
    "end": "443220"
  },
  {
    "text": "speakers or you can ask for a list of all talks you can pass in arguments or",
    "start": "443220",
    "end": "448860"
  },
  {
    "text": "things like that and define these inside of your schema saying hey four speakers you can pass this in a limit we might",
    "start": "448860",
    "end": "456150"
  },
  {
    "text": "default to some number like 10 or something like that and you could define that and say as an argument of when you",
    "start": "456150",
    "end": "463260"
  },
  {
    "text": "do these queries how many speakers you actually want or you can do things for instance sorts I want to say I want the",
    "start": "463260",
    "end": "470370"
  },
  {
    "text": "talks in ascending order or descending order based on some attribute or field",
    "start": "470370",
    "end": "476669"
  },
  {
    "text": "in those and then both of these are returning back for instance list of speakers or the talk type mutations are",
    "start": "476669",
    "end": "485010"
  },
  {
    "text": "another I have an instance here you have a mutation routes and you can take an input type which can define things like",
    "start": "485010",
    "end": "492210"
  },
  {
    "text": "the title of the talk or a list of speaker ID so that the back end could eventually resolve to the speaker type",
    "start": "492210",
    "end": "498229"
  },
  {
    "text": "and then we passion that input type so everything is well-defined which means",
    "start": "498229",
    "end": "504240"
  },
  {
    "text": "that we can do really interesting things and provide really interesting tooling for developers and clients using these",
    "start": "504240",
    "end": "509700"
  },
  {
    "text": "systems in graft well this is actually an example this is kind of like a",
    "start": "509700",
    "end": "515370"
  },
  {
    "start": "511000",
    "end": "590000"
  },
  {
    "text": "reference implementation we actually have systems in production that look pretty much exactly like this the top is",
    "start": "515370",
    "end": "521960"
  },
  {
    "text": "the query route in graph QL specification the schema language then",
    "start": "521960",
    "end": "529530"
  },
  {
    "text": "the bottom is actually a ripped out chunk of JavaScript that you can look at",
    "start": "529530",
    "end": "536400"
  },
  {
    "text": "and essentially what we do is here this is demonstrating how light I like to actually keep the graph QL the engines",
    "start": "536400",
    "end": "544410"
  },
  {
    "text": "themselves when they're actually doing the implementation so for instance we asked for at the query a list of",
    "start": "544410",
    "end": "550529"
  },
  {
    "text": "speakers and we have a route which is essentially looking at what is the the thing the node that potentially called",
    "start": "550529",
    "end": "557130"
  },
  {
    "text": "this resolver we have arguments we have context most of the the reference implementations of graph QL will have",
    "start": "557130",
    "end": "563820"
  },
  {
    "text": "some kind of format like this context could pass through things like authorization or your users in the",
    "start": "563820",
    "end": "571140"
  },
  {
    "text": "system and then you can propagate those down through the graph tree so this is a",
    "start": "571140",
    "end": "576330"
  },
  {
    "text": "really simple implementation we have a speaker service some kind of library or something in our code that is aware of",
    "start": "576330",
    "end": "583020"
  },
  {
    "text": "how to go fetch from our data sources these speakers or these talks or things",
    "start": "583020",
    "end": "588630"
  },
  {
    "text": "like that now what's more interesting",
    "start": "588630",
    "end": "593760"
  },
  {
    "start": "590000",
    "end": "643000"
  },
  {
    "text": "you'll notice back here we were at the query route if we want to navigate further down we have the speaker type",
    "start": "593760",
    "end": "601470"
  },
  {
    "text": "right so a speaker has a list of talks and how do we know how to resolve talks",
    "start": "601470",
    "end": "607560"
  },
  {
    "text": "for a particular speaker you can kind of do a very similar thing as we did on the",
    "start": "607560",
    "end": "613050"
  },
  {
    "text": "query route but more importantly if you look when we look at the route the route at this point essentially becomes the",
    "start": "613050",
    "end": "619770"
  },
  {
    "text": "actual speaker node that has returned back from our data our data sets our data resolvers and we have a list of",
    "start": "619770",
    "end": "626850"
  },
  {
    "text": "talk ids and so our speaker type says for talks this is how you resolve a talk field which we know is a list of talks",
    "start": "626850",
    "end": "632940"
  },
  {
    "text": "and we pass in those talk IDs and load by those so essentially you end up",
    "start": "632940",
    "end": "639029"
  },
  {
    "text": "modeling your entire graph QL execution and an engine in somewhat of this this pattern but the really important part is",
    "start": "639029",
    "end": "646740"
  },
  {
    "text": "that code that I showed is is very similar to what we actually do for graph QL wrappers in in production systems the",
    "start": "646740",
    "end": "655410"
  },
  {
    "text": "important part being that graph 0 is definitely not your business logic layer we're going to look at some interesting",
    "start": "655410",
    "end": "660660"
  },
  {
    "text": "approaches later on where you can wrap various data sources and things like that but your business logic should not",
    "start": "660660",
    "end": "667260"
  },
  {
    "text": "live in your graph QL Engineering lair should be as thin as possible on top of those other services or those",
    "start": "667260",
    "end": "674110"
  },
  {
    "text": "other fetchers of your data and your other business logic so another really",
    "start": "674110",
    "end": "683890"
  },
  {
    "start": "680000",
    "end": "776000"
  },
  {
    "text": "exciting part is that you get just by using graph dwell and that schema definition is the developer and client",
    "start": "683890",
    "end": "692350"
  },
  {
    "text": "experience is really quite elegant your developers for instance if they were",
    "start": "692350",
    "end": "697930"
  },
  {
    "text": "asking for the the speakers could simply say I just want a list of speakers and only their first name I don't want",
    "start": "697930",
    "end": "703720"
  },
  {
    "text": "anything else out about them and that is all that they will ever get back and it's an elegant way for providing an",
    "start": "703720",
    "end": "711190"
  },
  {
    "text": "efficient interface for making those network requests for traversing that tree down deeper also there's there's",
    "start": "711190",
    "end": "717880"
  },
  {
    "text": "this kind of limited API version and concerns where I can as a provider of a graphical endpoint add additional types",
    "start": "717880",
    "end": "724960"
  },
  {
    "text": "add additional nodes add additional fields for people to be able to query against as my product grows and the",
    "start": "724960",
    "end": "731260"
  },
  {
    "text": "demand grows and people have different expectations of the system I can keep adding on and extending without",
    "start": "731260",
    "end": "737350"
  },
  {
    "text": "impacting existing clients in any way their request phone change now obviously you have to be careful you can't just",
    "start": "737350",
    "end": "743110"
  },
  {
    "text": "completely remove a field you can't change how a field works but as long as you're being careful about that you can",
    "start": "743110",
    "end": "750010"
  },
  {
    "text": "easily add things without impacting anyone else or sending them a bunch of data that they're not expecting for instance if API introspection since this",
    "start": "750010",
    "end": "758950"
  },
  {
    "text": "is a completely typed API it's really easy to essentially introspect on the",
    "start": "758950",
    "end": "764890"
  },
  {
    "text": "API and learn about it just by playing with it and issuing essentially kind of like introspection queries against the",
    "start": "764890",
    "end": "771370"
  },
  {
    "text": "actual engine itself so what this actually looks like there's some tools out there once called graphical this is",
    "start": "771370",
    "end": "777310"
  },
  {
    "start": "776000",
    "end": "819000"
  },
  {
    "text": "what it looks like and any graph QL API that exposes the introspection",
    "start": "777310",
    "end": "782950"
  },
  {
    "text": "capabilities can do this right so you automatically get for instance a",
    "start": "782950",
    "end": "788380"
  },
  {
    "text": "documentation Explorer built in you can navigate through and quickly search this because you understand the queries that",
    "start": "788380",
    "end": "795190"
  },
  {
    "text": "are possible the mutations that are possible all of the types that are possible you can get autocomplete on the fields for free I can go point this to",
    "start": "795190",
    "end": "802540"
  },
  {
    "text": "prac any graph QL API and this stuff will just work it's actually really incredible and",
    "start": "802540",
    "end": "809000"
  },
  {
    "text": "really compelling to have people be able to just like point in this kind of",
    "start": "809000",
    "end": "814460"
  },
  {
    "text": "utility at your API and just explore it and learn by playing with it so that's",
    "start": "814460",
    "end": "822230"
  },
  {
    "text": "graphed Y well I wanna talk about service first of all I want to apologize for the name service I'm not personally",
    "start": "822230",
    "end": "828680"
  },
  {
    "text": "responsible for it but there's been a lot of complaints if you ever look on Hacker News it's hilarious like half of",
    "start": "828680",
    "end": "834830"
  },
  {
    "text": "it is complaining about how the server but I still have servers so sorry about",
    "start": "834830",
    "end": "840140"
  },
  {
    "text": "the name it's like this massively overloaded term to the point that is getting pretty useless it's kind of",
    "start": "840140",
    "end": "846800"
  },
  {
    "text": "become too mean anything that's a function that's using functions as a unit of deployment people I really enjoy",
    "start": "846800",
    "end": "854360"
  },
  {
    "text": "this this actually just happened like two days ago someone released a new server list platform and the first thing",
    "start": "854360",
    "end": "860000"
  },
  {
    "text": "they do is like go spin up a server put the thing on it you missed the whole point guys so more importantly what what",
    "start": "860000",
    "end": "870350"
  },
  {
    "start": "866000",
    "end": "980000"
  },
  {
    "text": "server list kind of means for myself for our company for our clients is that obviously you still run on servers",
    "start": "870350",
    "end": "876680"
  },
  {
    "text": "everything runs on servers you just don't care you don't have to worry about operating",
    "start": "876680",
    "end": "883160"
  },
  {
    "text": "system patching you don't have to worry about the server maintenance you don't have to worry if this server dies is my",
    "start": "883160",
    "end": "889160"
  },
  {
    "text": "auto scaling group going to to heal or self heal you you don't have to care about that you just simply care that",
    "start": "889160",
    "end": "895250"
  },
  {
    "text": "I've given my code to somebody I've told it what kind of offense it accepts or what kind of requests it accepts and",
    "start": "895250",
    "end": "901760"
  },
  {
    "text": "they'll handle all of the mapping and scaling and making sure that my code actually responds to those requests",
    "start": "901760",
    "end": "909730"
  },
  {
    "text": "right so my responsibility as a developer or even as an infrastructure",
    "start": "909730",
    "end": "915080"
  },
  {
    "text": "ops person really moves higher up this stack right can I spend more time",
    "start": "915080",
    "end": "920890"
  },
  {
    "text": "looking at our code and building better tracing in our code can I figure out what our data sources are doing better I",
    "start": "921040",
    "end": "927350"
  },
  {
    "text": "can do that instead of worrying about you know is Ubuntu up-to-date for instance kind of the second core tenant",
    "start": "927350",
    "end": "936020"
  },
  {
    "text": "of server is building at the the microsecond increments you never pay for IO right so",
    "start": "936020",
    "end": "942020"
  },
  {
    "text": "this is um for those game companies out there this is like micro payments and transactions done right I want to pay at",
    "start": "942020",
    "end": "948170"
  },
  {
    "text": "the hundred millisecond scale for instance not at the the minute scale even the hours to get or anything like",
    "start": "948170",
    "end": "953690"
  },
  {
    "text": "that so this pairs really really well with event-driven models as well we're not",
    "start": "953690",
    "end": "959540"
  },
  {
    "text": "going to talk a whole lot about that today but if you ever get a chance really try to dig in and understand how",
    "start": "959540",
    "end": "965899"
  },
  {
    "text": "do I stream events into something like service and why is it so powerful right it's it's this capability of having",
    "start": "965899",
    "end": "973190"
  },
  {
    "text": "these massively scalable systems and you really just don't have to worry about a whole lot of the scaling that you",
    "start": "973190",
    "end": "979430"
  },
  {
    "text": "normally would have to so right many of those complexities of scaling and availability are absolutely gone some",
    "start": "979430",
    "end": "987770"
  },
  {
    "start": "980000",
    "end": "1124000"
  },
  {
    "text": "other kind of hidden benefits that you start to realize as you build more with serverless infrastructures and start",
    "start": "987770",
    "end": "994880"
  },
  {
    "text": "really diving in is that you get these like massive total cost of ownership drops when you aren't worrying about the",
    "start": "994880",
    "end": "1002620"
  },
  {
    "text": "underlying servers or infrastructure or things like that when your systems scale",
    "start": "1002620",
    "end": "1007899"
  },
  {
    "text": "simply by what I like to say just like turning up a dial and saying I will input more dollars and get get out more",
    "start": "1007899",
    "end": "1014410"
  },
  {
    "text": "scale and without having to do anything else it really works quite elegantly we have one client that I can give you an idea",
    "start": "1014410",
    "end": "1021040"
  },
  {
    "text": "for scale that does millions and millions and millions and millions of requests a month and their compute bill",
    "start": "1021040",
    "end": "1028750"
  },
  {
    "text": "is like 50 bucks a month and we're storing hundreds of millions of images so their storage cost is like thousands",
    "start": "1028750",
    "end": "1035709"
  },
  {
    "text": "of dollars a month and their compute cost is like literally $50 like people just don't understand it if we were",
    "start": "1035709",
    "end": "1041558"
  },
  {
    "text": "trying to run servers to do all that it would be way more expensive so with all",
    "start": "1041559",
    "end": "1047110"
  },
  {
    "text": "these TCO games and economics you can really focus on the higher value targets",
    "start": "1047110",
    "end": "1053080"
  },
  {
    "text": "in your organization your ops teams can say you know what how can we take what this service is doing and operationalize",
    "start": "1053080",
    "end": "1059830"
  },
  {
    "text": "it in such a way that we're providing for instance a better event stream or data stream to other parts of our",
    "start": "1059830",
    "end": "1065950"
  },
  {
    "text": "business to other clients in our business you can focus on those higher value target",
    "start": "1065950",
    "end": "1071920"
  },
  {
    "text": "also an interesting thing is that you can fail fast and learn things really fast and we do that you can do it for",
    "start": "1071920",
    "end": "1078460"
  },
  {
    "text": "almost free you can go build a surveillance system a practice I like to do with some of our",
    "start": "1078460",
    "end": "1084310"
  },
  {
    "text": "clients is go and say hey what's like something that's really challenging that you have to solve like in the next week",
    "start": "1084310",
    "end": "1090130"
  },
  {
    "text": "that someone's ask you to solve right can we take the next 4 hours and do an MVP of that and launch it and have it",
    "start": "1090130",
    "end": "1096910"
  },
  {
    "text": "working inside of the next four hours and sometimes it works sometimes it",
    "start": "1096910",
    "end": "1103510"
  },
  {
    "text": "doesn't but the key is we found out inside if like one business day if we",
    "start": "1103510",
    "end": "1109090"
  },
  {
    "text": "have like a viable approach or if it's totally gonna fail so we fail fast through practically free and we learn",
    "start": "1109090",
    "end": "1115120"
  },
  {
    "text": "really fast so some developer hints as",
    "start": "1115120",
    "end": "1129010"
  },
  {
    "start": "1124000",
    "end": "1225000"
  },
  {
    "text": "you're starting to work on these systems and start looking at service your functions as a service provider whether",
    "start": "1129010",
    "end": "1135130"
  },
  {
    "text": "it's lamda or a juror or Google compute or anyone is really irrelevant something",
    "start": "1135130",
    "end": "1141250"
  },
  {
    "text": "I've seen recently is that people are starting to complain that don't use lamda it's vendor lock-in don't use",
    "start": "1141250",
    "end": "1146740"
  },
  {
    "text": "Azure its vendor locking you're gonna be as stuck in their event model that's not true right so you can abstract away",
    "start": "1146740",
    "end": "1153520"
  },
  {
    "text": "whatever they're doing in terms of how they're getting you the events fairly",
    "start": "1153520",
    "end": "1159100"
  },
  {
    "text": "easily there's actually utilities out there and people out there that kind of provide these wrappers and you can like",
    "start": "1159100",
    "end": "1165190"
  },
  {
    "text": "scale across these different clouds now what is true and is the case is that",
    "start": "1165190",
    "end": "1171810"
  },
  {
    "text": "people like AWS people like Microsoft people like Google are providing other really really compelling services that",
    "start": "1171810",
    "end": "1179170"
  },
  {
    "text": "tie really closely to their functions as a service whether it's lambda or whatever and once you start leveraging",
    "start": "1179170",
    "end": "1186460"
  },
  {
    "text": "those particular services now you have vendor lock-in that's their plan right",
    "start": "1186460",
    "end": "1191950"
  },
  {
    "text": "that's what they're gonna get you that said for us in our clients we're totally for it because Amazon obviously builds",
    "start": "1191950",
    "end": "1199030"
  },
  {
    "text": "really fantastic utilities sure is coming out with really cool stuff durable function",
    "start": "1199030",
    "end": "1204250"
  },
  {
    "text": "with affinity streams and things like that you can do really cool things and you just have to evaluate and say is",
    "start": "1204250",
    "end": "1210220"
  },
  {
    "text": "this platform going to provide more value than I can build myself if so you know tie yourself to it functions as a",
    "start": "1210220",
    "end": "1218110"
  },
  {
    "text": "service itself lambda things like that they're not a vendor lock-in risk really",
    "start": "1218110",
    "end": "1223710"
  },
  {
    "start": "1225000",
    "end": "1238000"
  },
  {
    "text": "all right so we've talked about service we've talked about graph qo what happens",
    "start": "1226140",
    "end": "1232900"
  },
  {
    "text": "when we put these two things together what does it actually look at so right",
    "start": "1232900",
    "end": "1239530"
  },
  {
    "start": "1238000",
    "end": "1294000"
  },
  {
    "text": "off the bat we can obviously assume that we're gonna get all the normal server",
    "start": "1239530",
    "end": "1245200"
  },
  {
    "text": "list wins right we're gonna scalability availability I don't have to worry about the operating system I don't have to",
    "start": "1245200",
    "end": "1250360"
  },
  {
    "text": "worry about patching all of those great great benefits now you also get all of",
    "start": "1250360",
    "end": "1256750"
  },
  {
    "text": "the benefits of graph QL for instance clients and the graphical and things",
    "start": "1256750",
    "end": "1264880"
  },
  {
    "text": "like that and all of that type API goodness and those systems you get all of that as well now what's really cool",
    "start": "1264880",
    "end": "1271929"
  },
  {
    "text": "is that this is very much a one plus one equals three scenario where I get something that's actually higher value",
    "start": "1271929",
    "end": "1277780"
  },
  {
    "text": "than just the two components separately because I can mitigate things like resource exhaustion attacks which we're",
    "start": "1277780",
    "end": "1283990"
  },
  {
    "text": "going to look at I can do really complex resolvers and do interesting things based on service giving me isolated",
    "start": "1283990",
    "end": "1290169"
  },
  {
    "text": "resources and execution environments so",
    "start": "1290169",
    "end": "1295230"
  },
  {
    "start": "1294000",
    "end": "1405000"
  },
  {
    "text": "resource exhaustion attacks is actually something that's that's that's fun that I didn't really think about or",
    "start": "1295230",
    "end": "1301120"
  },
  {
    "text": "understand it till one day I was like hey why is like our system not working like why are these requests hammering or",
    "start": "1301120",
    "end": "1308860"
  },
  {
    "text": "our Dynamo table so hard like I thought they were supposed to be serviced and dynamos like this magical thing why is",
    "start": "1308860",
    "end": "1315370"
  },
  {
    "text": "our system like coming to a crawl well resource exhaustion attacks you could",
    "start": "1315370",
    "end": "1321039"
  },
  {
    "text": "kind of think about them as a denial of service attack that's a really easy to",
    "start": "1321039",
    "end": "1326440"
  },
  {
    "text": "do against yourself in some circumstances not good be really really",
    "start": "1326440",
    "end": "1331480"
  },
  {
    "text": "easy for an attacker to hurt you really badly with",
    "start": "1331480",
    "end": "1337040"
  },
  {
    "text": "minimal input from their side so a resource exhaustion attack is essentially this idea of a really deeply",
    "start": "1337040",
    "end": "1343040"
  },
  {
    "text": "nested request you can use recursion or things like that pagination abuse we're gonna look at an",
    "start": "1343040",
    "end": "1348440"
  },
  {
    "text": "example in a little bit but we're also going to talk about some useful optimization and bike prevention",
    "start": "1348440",
    "end": "1354830"
  },
  {
    "text": "techniques so github I don't know if you've seen their graph QL API they actually approach this by enabling",
    "start": "1354830",
    "end": "1361720"
  },
  {
    "text": "pagination and enforcing pagination and limits on any kind of node request for",
    "start": "1361720",
    "end": "1366890"
  },
  {
    "text": "instance most types you have to say I want up to a hundred of this particular",
    "start": "1366890",
    "end": "1372050"
  },
  {
    "text": "node and they won't give you any more than that and then you also have to go through the pagination as well you can",
    "start": "1372050",
    "end": "1379550"
  },
  {
    "text": "do things like maximum death checking so if you think about a graph and like traversing that graph you could say for",
    "start": "1379550",
    "end": "1386600"
  },
  {
    "text": "instance that anything that has a nested graph of deeper than five nest we're",
    "start": "1386600",
    "end": "1393350"
  },
  {
    "text": "gonna throw it out obviously never run it and they were also going to look at another just huge performance win which",
    "start": "1393350",
    "end": "1401630"
  },
  {
    "text": "is request batching and caching so resource exhaustion attacks this is kind",
    "start": "1401630",
    "end": "1407810"
  },
  {
    "start": "1405000",
    "end": "1515000"
  },
  {
    "text": "of what it looks like so for instance there's a Star Wars API out there I",
    "start": "1407810",
    "end": "1412940"
  },
  {
    "text": "don't know if any of you are aware of it there's a graph QL wrapper for that Star Wars API but right here what we're",
    "start": "1412940",
    "end": "1421160"
  },
  {
    "text": "essentially modeling is the concept of films and characters and Star Wars so",
    "start": "1421160",
    "end": "1427880"
  },
  {
    "text": "say we want to list out all of the films and then we will know all of the characters in each film that's a pretty",
    "start": "1427880",
    "end": "1434270"
  },
  {
    "text": "simple graph QL requests this is actually using the relay specification",
    "start": "1434270",
    "end": "1439910"
  },
  {
    "text": "which you have to have edges in node in relay you can simplify some of this",
    "start": "1439910",
    "end": "1445010"
  },
  {
    "text": "stuff following the release back is not a terrible idea it helps make your request easier but you can kind of see",
    "start": "1445010",
    "end": "1452240"
  },
  {
    "text": "if you just look down a couple levels you see okay I have all the films and all of the characters right now say",
    "start": "1452240",
    "end": "1457250"
  },
  {
    "text": "someone at your job decides hey you know what I actually want I want to know all of the films that each character is",
    "start": "1457250",
    "end": "1463970"
  },
  {
    "text": "actually into and I don't know about maps introduces so I'm just gonna add it to my request here so I'm gonna",
    "start": "1463970",
    "end": "1470780"
  },
  {
    "text": "drove the films for every character well okay you can do that it's not great but eventually it'll still resolve it we're",
    "start": "1470780",
    "end": "1477470"
  },
  {
    "text": "three three levels deep now some enterprising individual or just",
    "start": "1477470",
    "end": "1483560"
  },
  {
    "text": "mean person decides hey you know what I actually want I want all of the characters of every film for every",
    "start": "1483560",
    "end": "1490730"
  },
  {
    "text": "character in each of the films of each of the characters and brought a memory right our memory can actually get blown",
    "start": "1490730",
    "end": "1497570"
  },
  {
    "text": "up in these requests especially in a server model someone making one of these",
    "start": "1497570",
    "end": "1503090"
  },
  {
    "text": "requests you can just eat an entire CPU core eat a ton of memory especially if you haven't put a lot of thought into",
    "start": "1503090",
    "end": "1509030"
  },
  {
    "text": "how do I protect against this particular attack so this is an interesting attack",
    "start": "1509030",
    "end": "1514430"
  },
  {
    "text": "model but when we apply this service model I tend to be somewhat lazy is",
    "start": "1514430",
    "end": "1521390"
  },
  {
    "start": "1515000",
    "end": "1899000"
  },
  {
    "text": "saying okay what's like the 80% solution I can get away with I don't know if this product was going to make it for instance I don't want to implement all",
    "start": "1521390",
    "end": "1528140"
  },
  {
    "text": "of these extra protections I don't want to have to enforce limits or paginations or artificially limit my clients in any",
    "start": "1528140",
    "end": "1534740"
  },
  {
    "text": "way before I need to so when I apply the service model the graphic well there's",
    "start": "1534740",
    "end": "1540620"
  },
  {
    "text": "there's some interesting things I can do right so if you look at service the idea",
    "start": "1540620",
    "end": "1545990"
  },
  {
    "text": "is each request is isolated in its own running container or lambda function or what have you and since each graph QL",
    "start": "1545990",
    "end": "1554060"
  },
  {
    "text": "execution each request goes to its own lambda function it gets its own resources it gets its own 128 megabytes",
    "start": "1554060",
    "end": "1560480"
  },
  {
    "text": "or gigabytes and CPU I instantly one",
    "start": "1560480",
    "end": "1565640"
  },
  {
    "text": "don't have to worry about someone attacking my endpoint and like completely destroying my one server",
    "start": "1565640",
    "end": "1572570"
  },
  {
    "text": "which now blocks everybody else they're just destroying one lambda function which was there's assigned to their",
    "start": "1572570",
    "end": "1577610"
  },
  {
    "text": "request so I don't have to worry about it and then also interestingly the other",
    "start": "1577610",
    "end": "1583040"
  },
  {
    "text": "thing you can do is the infrastructure on most of the the functions as a",
    "start": "1583040",
    "end": "1588890"
  },
  {
    "text": "service providers give you this idea of timeouts right so instead of even having to look at the maximum depth of a graph",
    "start": "1588890",
    "end": "1595160"
  },
  {
    "text": "because it might be valid use cases where I have a really deep graph what I",
    "start": "1595160",
    "end": "1600590"
  },
  {
    "text": "can do instead I say hey any request that should normally succeed in let's say five seconds or 10 seconds",
    "start": "1600590",
    "end": "1609580"
  },
  {
    "text": "all of my valid requests at the high end or 10 seconds right so let's just say",
    "start": "1609580",
    "end": "1614600"
  },
  {
    "text": "instead of that all of our requests that are coming into our system let's just",
    "start": "1614600",
    "end": "1619790"
  },
  {
    "text": "limit and say if this goes for 15 or 20 seconds whatever they're doing is probably bad and we're just gonna throw",
    "start": "1619790",
    "end": "1625520"
  },
  {
    "text": "them out of our system obviously what monitoring and alerting around that kind of thing if that starts becoming more",
    "start": "1625520",
    "end": "1630590"
  },
  {
    "text": "common but you get an 80% solution for basically one little configuration",
    "start": "1630590",
    "end": "1636440"
  },
  {
    "text": "change in your system obviously in the",
    "start": "1636440",
    "end": "1641840"
  },
  {
    "text": "server list model and people also like to call it server full or service service full I should say not server",
    "start": "1641840",
    "end": "1647240"
  },
  {
    "text": "full service full meaning that you should totally leverage other products",
    "start": "1647240",
    "end": "1653750"
  },
  {
    "text": "and services that are out there like web application firewalls right if you can have someone else just handle like a",
    "start": "1653750",
    "end": "1660410"
  },
  {
    "text": "normal Doss attack lots of IP lots of people coming and hitting you from a",
    "start": "1660410",
    "end": "1665900"
  },
  {
    "text": "single IP address certainly throttle it's like leverage those normal mitigations of those attack vectors",
    "start": "1665900",
    "end": "1673780"
  },
  {
    "text": "request batching and caching this is this is a little more complex and and",
    "start": "1673780",
    "end": "1680990"
  },
  {
    "text": "and takes some some reasoning about I do want to point out so there's this query that we have here where we're saying",
    "start": "1680990",
    "end": "1687350"
  },
  {
    "text": "give me all of the speakers and give me all of their first names and then give me all of their talks and the title of",
    "start": "1687350",
    "end": "1692450"
  },
  {
    "text": "their talk and then actually give me all of the speakers of each of the talks so this is totally not an optimal query",
    "start": "1692450",
    "end": "1698530"
  },
  {
    "text": "from the graph QL standpoint but it",
    "start": "1698530",
    "end": "1704450"
  },
  {
    "text": "helps us illustrate a couple interesting things if you start thinking about caching and batching so if we were to",
    "start": "1704450",
    "end": "1714620"
  },
  {
    "text": "just do naive implementation and for every time we try to run one of these resolvers thinking back to kind of the",
    "start": "1714620",
    "end": "1721700"
  },
  {
    "text": "beginning when I was talking about the resolvers in graph QL and kind of those services and resolving by IDs from our data stores if you had this just",
    "start": "1721700",
    "end": "1729200"
  },
  {
    "text": "strictly naive implementation and we ran this query where we said hey okay give me a list of all the speakers then give",
    "start": "1729200",
    "end": "1734780"
  },
  {
    "text": "me all the talks of the information for each talk for each of those speakers and then actually give me each of the speakers for each of",
    "start": "1734780",
    "end": "1741380"
  },
  {
    "text": "those talks that are resolving you end up with something like 359 metric requests if you just resolve each of",
    "start": "1741380",
    "end": "1746510"
  },
  {
    "text": "those singularly so right so from the front end the n plus one problem is gone from the back end you're absolutely",
    "start": "1746510",
    "end": "1753140"
  },
  {
    "text": "destroying any of your downstream systems if we implement cash-only",
    "start": "1753140",
    "end": "1760880"
  },
  {
    "text": "approach which essentially says all right I'm going to ask for all of the",
    "start": "1760880",
    "end": "1766850"
  },
  {
    "text": "speakers and then I'm still gonna have to resolve all of the talks as I haven't resolved those yet but now I'm gonna ask",
    "start": "1766850",
    "end": "1772730"
  },
  {
    "text": "for all of the speakers again if I store each of those speakers from the first time that I requested them and my system",
    "start": "1772730",
    "end": "1778640"
  },
  {
    "text": "is smart enough I really only have a hundred in 32 requests or something",
    "start": "1778640",
    "end": "1784100"
  },
  {
    "text": "something like that because I asked for all of the speakers and then all the talk so that's that's that's a hundred",
    "start": "1784100",
    "end": "1791510"
  },
  {
    "text": "and thirty-two actually has a hundred thirty-two I think and then when I asked me to the speakers again I've already",
    "start": "1791510",
    "end": "1797299"
  },
  {
    "text": "got them cached I don't have to do more Network requests batching is where you",
    "start": "1797299",
    "end": "1803419"
  },
  {
    "text": "essentially say instead of immediately firing every single one of my requests",
    "start": "1803419",
    "end": "1808539"
  },
  {
    "text": "whenever my system decides it needs to ask for the talk data or for speaker",
    "start": "1808539",
    "end": "1813679"
  },
  {
    "text": "data you essentially can do things like tap into the node event loop or in other languages there's other constructs and",
    "start": "1813679",
    "end": "1819529"
  },
  {
    "text": "batch up and say you know what instead of asking for them individually I'm gonna ask for them all at once at that",
    "start": "1819529",
    "end": "1825289"
  },
  {
    "text": "level so that actually gets you down to three here three requests because you asked for all the speakers and then we",
    "start": "1825289",
    "end": "1830330"
  },
  {
    "text": "batch up and ask for all the talks then we asked for all of the speakers again notice we're not cashing in this this is",
    "start": "1830330",
    "end": "1836330"
  },
  {
    "text": "bachelor only we batch up all of the speakers that we need requests so we have three requests now if you implement",
    "start": "1836330",
    "end": "1841640"
  },
  {
    "text": "cash and batching that's your optimal point right we asked for all of the speakers from our systems we get all of",
    "start": "1841640",
    "end": "1848510"
  },
  {
    "text": "those we batch and ask for all the talks in our systems we get all of those then we ask for all the speakers which are",
    "start": "1848510",
    "end": "1853730"
  },
  {
    "text": "batched again we actually have them all existing in cash so we're down to two requests the important part about this",
    "start": "1853730",
    "end": "1861080"
  },
  {
    "text": "is this is really really hard to do if you ask your developers to do it they're gonna make a mistake and make things",
    "start": "1861080",
    "end": "1866299"
  },
  {
    "text": "worse Facebook actually realized this as they were building out",
    "start": "1866299",
    "end": "1871850"
  },
  {
    "text": "craftwell and they released a project called data loader which is essentially a reference implementation for nodejs",
    "start": "1871850",
    "end": "1876890"
  },
  {
    "text": "and how to effectively do kind of this caching and batching technique in a way that still looks like a normal",
    "start": "1876890",
    "end": "1885049"
  },
  {
    "text": "implementation of just asking for something from your data source in a one-off like I want this ID I want this",
    "start": "1885049",
    "end": "1890750"
  },
  {
    "text": "ID but what it'll do on the back end is actually batch this up into a single",
    "start": "1890750",
    "end": "1895820"
  },
  {
    "text": "request with caching and things like that all right so once we start looking",
    "start": "1895820",
    "end": "1902929"
  },
  {
    "start": "1899000",
    "end": "2051000"
  },
  {
    "text": "deeper into server list we come and graft well we come inside ZF hey what if",
    "start": "1902929",
    "end": "1908120"
  },
  {
    "text": "our actual resolvers are doing different things right you can actually unify",
    "start": "1908120",
    "end": "1913309"
  },
  {
    "text": "different data sources for instance I have one graph QL endpoint and I'm gonna go say hey you know what I want to hit a",
    "start": "1913309",
    "end": "1920120"
  },
  {
    "text": "legacy API system I want to hit a relational database system and I want to",
    "start": "1920120",
    "end": "1925789"
  },
  {
    "text": "hit a no sequel system right you can actually do interesting things in your resolvers where for instance I had like",
    "start": "1925789",
    "end": "1931640"
  },
  {
    "text": "the talk service in the speaker service this could exist in two completely different endpoints one could be in our",
    "start": "1931640",
    "end": "1937880"
  },
  {
    "text": "user management system or user database in the relational database and our talks",
    "start": "1937880",
    "end": "1943070"
  },
  {
    "text": "for instance might actually be in a no sequel database your graph QL endpoint",
    "start": "1943070",
    "end": "1948710"
  },
  {
    "text": "itself that's running in a service function or things like that could actually talk to other smaller micro",
    "start": "1948710",
    "end": "1954620"
  },
  {
    "text": "services running in their own lambda functions and go have those actually fetch your data where this gets really",
    "start": "1954620",
    "end": "1960890"
  },
  {
    "text": "interesting is for systems that you might have more compute heavy operations",
    "start": "1960890",
    "end": "1966559"
  },
  {
    "text": "that have to happen and you want to spin those off into their own lambda functions and not have to worry about",
    "start": "1966559",
    "end": "1971659"
  },
  {
    "text": "blowing out all of the resources in your single lambda function or your single function execution but you want those",
    "start": "1971659",
    "end": "1977659"
  },
  {
    "text": "systems to still operate quickly and efficiently and have more resources than just the one so this is this is an",
    "start": "1977659",
    "end": "1985490"
  },
  {
    "text": "interesting approach it becomes more interesting with something else we're going to talk about in a little bit but",
    "start": "1985490",
    "end": "1991280"
  },
  {
    "text": "this is certainly a valid approach now one thing I do have to bring up so there's still these problems in the",
    "start": "1991280",
    "end": "1996650"
  },
  {
    "text": "service world that we're all trying to solve and that problem is traceability",
    "start": "1996650",
    "end": "2003460"
  },
  {
    "text": "and debug ability I don't know if any of you have worked it with the server life space or",
    "start": "2003460",
    "end": "2009010"
  },
  {
    "text": "anything like that but it's actually ridiculously hard to even just get like simple information out of these systems let alone do",
    "start": "2009010",
    "end": "2016210"
  },
  {
    "text": "something like this where my one request might blow out across three or five or ten or a dozen more executions and then",
    "start": "2016210",
    "end": "2023800"
  },
  {
    "text": "try to figure out okay someone executed a request asking for something and then I have no idea where it went",
    "start": "2023800",
    "end": "2029260"
  },
  {
    "text": "this is actively being worked on by all of the big providers this is a really hard problem but just know that you're",
    "start": "2029260",
    "end": "2037090"
  },
  {
    "text": "going to sacrifice what you're normally used to in in a server environment in terms of debug ability and traceability",
    "start": "2037090",
    "end": "2042190"
  },
  {
    "text": "to go for an approach like this it takes a lot of work and instrumentation it's like essentially distributed tracing on",
    "start": "2042190",
    "end": "2048429"
  },
  {
    "text": "a whole nother scale okay so I kind of",
    "start": "2048429",
    "end": "2053919"
  },
  {
    "start": "2051000",
    "end": "2255000"
  },
  {
    "text": "alluded to another approach with complex resolvers and multiple data sources but",
    "start": "2053919",
    "end": "2060398"
  },
  {
    "text": "there's this new and and opportunity in graph QL and kind of this growing movement for something called schema",
    "start": "2060399",
    "end": "2066970"
  },
  {
    "text": "stitching so the folks at Apollo who are",
    "start": "2066970",
    "end": "2072250"
  },
  {
    "text": "doing a lot for the graph QL community essentially developed this idea of you",
    "start": "2072250",
    "end": "2077350"
  },
  {
    "text": "know what I have all of these potential graph QL api's these graphical endpoints",
    "start": "2077350",
    "end": "2082750"
  },
  {
    "text": "why can't I do something to put them all behind one particular endpoint right so",
    "start": "2082750",
    "end": "2088540"
  },
  {
    "text": "in this case for instance we have two graph QL api's they're completely",
    "start": "2088540",
    "end": "2094330"
  },
  {
    "text": "distinct from one another we have essentially there's a universe API where you can actually ask for details about",
    "start": "2094330",
    "end": "2100300"
  },
  {
    "text": "particular events that are going on particular locations or things like that and we have a weather API right where I",
    "start": "2100300",
    "end": "2107380"
  },
  {
    "text": "can ask for at a particular location what is the weather look like or what will it look like at a certain point in time what's the what's the forecast so",
    "start": "2107380",
    "end": "2115440"
  },
  {
    "text": "obviously there's there's a connection between these two you know I would like to have the weather at the location of a",
    "start": "2115440",
    "end": "2122560"
  },
  {
    "text": "particular event so we can scheme a stitch these two api's together and we",
    "start": "2122560",
    "end": "2127840"
  },
  {
    "text": "might get something that looks like this now this is obviously kind of a naive implementation right because when I",
    "start": "2127840",
    "end": "2134620"
  },
  {
    "text": "asked for it I'm saying hey I want an event of some ID that I somehow found whether it's all off some other listing",
    "start": "2134620",
    "end": "2141049"
  },
  {
    "text": "or things like that is irrelevant but I'm asking for the events in this query now I'm also asking for hey somehow I",
    "start": "2141049",
    "end": "2149660"
  },
  {
    "text": "happen to know that the location for this event is in San Francisco so I actually want the weather for that",
    "start": "2149660",
    "end": "2155569"
  },
  {
    "text": "particular location as well right so this is ok great we get like one less",
    "start": "2155569",
    "end": "2160759"
  },
  {
    "text": "call we kind of have a unified API it's not optimal and it's you kind of need",
    "start": "2160759",
    "end": "2166849"
  },
  {
    "text": "knowledge ahead of time from the client side so we can obviously do better",
    "start": "2166849",
    "end": "2172119"
  },
  {
    "text": "so what schema stitching what we're working on and what people are working",
    "start": "2172119",
    "end": "2177170"
  },
  {
    "text": "on is this idea that I can create these systems independent of one another and",
    "start": "2177170",
    "end": "2182390"
  },
  {
    "text": "then create and name my resolvers in such a way that I can resolve from one",
    "start": "2182390",
    "end": "2187940"
  },
  {
    "text": "type in one schema of graph QL to another type in another schema in Agra",
    "start": "2187940",
    "end": "2193400"
  },
  {
    "text": "nother graph QL endpoint so essentially once I link these two things together and the engine understands how to",
    "start": "2193400",
    "end": "2199250"
  },
  {
    "text": "resolve across them with these remote executable schemas is what they're called I can do something that's way way",
    "start": "2199250",
    "end": "2205400"
  },
  {
    "text": "more compelling if we look at this now I have to do is say hey I want the",
    "start": "2205400",
    "end": "2210920"
  },
  {
    "text": "information for an event of a particular ID is irrelevant I want the title the",
    "start": "2210920",
    "end": "2216109"
  },
  {
    "text": "venue but more importantly at the location for this event I want the",
    "start": "2216109",
    "end": "2222200"
  },
  {
    "text": "weather that's going to be happening at this particular event right so suddenly",
    "start": "2222200",
    "end": "2227720"
  },
  {
    "text": "we've gone through something where you have to have kind of this preconceived information about where this events",
    "start": "2227720",
    "end": "2234019"
  },
  {
    "text": "gonna happen before I knew where the events gonna happen and so making that request was really hard in the first place now it's become this system where",
    "start": "2234019",
    "end": "2241789"
  },
  {
    "text": "your developer the person using your stitched schema doesn't even have to",
    "start": "2241789",
    "end": "2247279"
  },
  {
    "text": "know that there's two schemas they don't have to know that there's two endpoints behind this so this gets actually really",
    "start": "2247279",
    "end": "2253250"
  },
  {
    "text": "really interesting but what I'm really excited about this for is now I can kind",
    "start": "2253250",
    "end": "2259369"
  },
  {
    "start": "2255000",
    "end": "2333000"
  },
  {
    "text": "of take the typical practices and learnings for micro services and apply them to graph QL now I can have people",
    "start": "2259369",
    "end": "2267170"
  },
  {
    "text": "experiment really quickly and build new services really quickly in graph QL",
    "start": "2267170",
    "end": "2272920"
  },
  {
    "text": "and provide these small chunks of functionality and in doing so in using",
    "start": "2272920",
    "end": "2278620"
  },
  {
    "text": "graphical in in building the schemas I create these really essentially",
    "start": "2278620",
    "end": "2284320"
  },
  {
    "text": "standardized contracts for integrating together these various services through graphic UL what we're starting to do and",
    "start": "2284320",
    "end": "2291850"
  },
  {
    "text": "they're starting to work with folks on is how do we enable business units to produce things in graph QL in such a way",
    "start": "2291850",
    "end": "2298930"
  },
  {
    "text": "that it's valuable to them internally it's valuable for them to consume their own services but present them in such a",
    "start": "2298930",
    "end": "2305530"
  },
  {
    "text": "way that other part departments other business units can look at these things say hey you know what your your your",
    "start": "2305530",
    "end": "2311530"
  },
  {
    "text": "weather surface is great it would match really well with my boat rental service",
    "start": "2311530",
    "end": "2316840"
  },
  {
    "text": "right these distinct operations can start pulling and stitching these things together forming entirely new products",
    "start": "2316840",
    "end": "2323500"
  },
  {
    "text": "extending products in ways that would traditionally not be very easy and then",
    "start": "2323500",
    "end": "2328840"
  },
  {
    "text": "presenting them to end clients in these seamless patterns so that'll said it's",
    "start": "2328840",
    "end": "2336190"
  },
  {
    "start": "2333000",
    "end": "2767000"
  },
  {
    "text": "really exciting it's it's still a super new space we're still trying to figure",
    "start": "2336190",
    "end": "2341650"
  },
  {
    "text": "things out so there's there's some words of warning that I would like to give all of you before you go running back so my",
    "start": "2341650",
    "end": "2351310"
  },
  {
    "text": "first word of advice and I've learned this the hard way way is that don't be",
    "start": "2351310",
    "end": "2356650"
  },
  {
    "text": "this guy I've tried to go to companies and say hey you know what graph QL like",
    "start": "2356650",
    "end": "2362620"
  },
  {
    "text": "literally everything your life will be amazing and then they're like what do",
    "start": "2362620",
    "end": "2367810"
  },
  {
    "text": "you mean REST API is we're still using soap so yeah if you try to do this kind",
    "start": "2367810",
    "end": "2374020"
  },
  {
    "text": "of thing it's it ends up being a lot more difficult than you would expect it",
    "start": "2374020",
    "end": "2380710"
  },
  {
    "text": "gets really hard um so obviously don't don't force it where I would not suggest",
    "start": "2380710",
    "end": "2388390"
  },
  {
    "text": "doing this kind of thing and trying to implement this it's a lot of this is common knowledge right if you have like non-problem legacy systems that are",
    "start": "2388390",
    "end": "2395260"
  },
  {
    "text": "rarely used and you have no problems with them whatsoever don't don't try to",
    "start": "2395260",
    "end": "2401770"
  },
  {
    "text": "graph don't try to rewrite it in graphical I should say it's also not great for big data exports",
    "start": "2401770",
    "end": "2408609"
  },
  {
    "text": "like a REST API right you don't want to like send like gigs or even tons of Meg's of data through it now async",
    "start": "2408609",
    "end": "2414400"
  },
  {
    "text": "returns are fine right that's a common practice I want to get a report of something I get back a URL or something",
    "start": "2414400",
    "end": "2419829"
  },
  {
    "text": "that I can get a check and eventually get my data that's fine more importantly like any new technology",
    "start": "2419829",
    "end": "2425280"
  },
  {
    "text": "internal bayan is its key if you have inertia against you if people are building on rest and you actually have a",
    "start": "2425280",
    "end": "2432339"
  },
  {
    "text": "solid micro-service infrastructure on rest there with side cars or things like that yeah you're gonna have some",
    "start": "2432339",
    "end": "2438339"
  },
  {
    "text": "momentum against you there and so don't force it start small like start in your internal teams maybe get some of those",
    "start": "2438339",
    "end": "2444700"
  },
  {
    "text": "small wins internally and evangelize based on their successes now when it does come to non-problem and",
    "start": "2444700",
    "end": "2452260"
  },
  {
    "text": "rarely use legacy systems or you have other services that you depend on other",
    "start": "2452260",
    "end": "2458109"
  },
  {
    "text": "folks that you depend on and their services you can do some fun stuff where you can essentially wrap there rest api",
    "start": "2458109",
    "end": "2465790"
  },
  {
    "text": "are there soap API or their system with graph QL yourself internally and simply consume it with those graph your own",
    "start": "2465790",
    "end": "2473859"
  },
  {
    "text": "kind of graph QL wrapper around it and in that way you can kind of like",
    "start": "2473859",
    "end": "2479170"
  },
  {
    "text": "just be sneaky about it and they don't really have to know that you're doing that but then your actual developers on",
    "start": "2479170",
    "end": "2484180"
  },
  {
    "text": "your team can consume it in a more usable pattern you can kind of start sharing that out with other units like",
    "start": "2484180",
    "end": "2490150"
  },
  {
    "text": "hey I kind of made their service you know not not be terrible to work with you can be sneaky about it now if you do",
    "start": "2490150",
    "end": "2498130"
  },
  {
    "text": "do something like that or you have other downstream dependencies you have to be a good citizen of your business whether",
    "start": "2498130",
    "end": "2504640"
  },
  {
    "text": "it's it's service or graph QL or service graph QL you're really only as strong as",
    "start": "2504640",
    "end": "2510579"
  },
  {
    "text": "your weakest resource right so if you have a typical relational or sequel database behind your your service graph",
    "start": "2510579",
    "end": "2519819"
  },
  {
    "text": "QL engine your server list stuff can massively out scale any kind of",
    "start": "2519819",
    "end": "2525010"
  },
  {
    "text": "relational database you can we've we've had situations where we turned on a server service and we're getting 10,000",
    "start": "2525010",
    "end": "2531339"
  },
  {
    "text": "requests per second we don't flinch because the server list whatever it's fine now if we had had particular",
    "start": "2531339",
    "end": "2539349"
  },
  {
    "text": "relational databases behind it or things that don't scale as well obviously we're in trouble because we're only as strong",
    "start": "2539349",
    "end": "2545109"
  },
  {
    "text": "as that one weakest resource if you are playing with other folks play nice things like queues caching all of that",
    "start": "2545109",
    "end": "2552820"
  },
  {
    "text": "good stuff you might have to put a little bit more thought in a saying I need to be nice to folks I don't want to",
    "start": "2552820",
    "end": "2558070"
  },
  {
    "text": "overrun those downstream systems people won't appreciate it they won't be happy for you that you have this massively scalable system that",
    "start": "2558070",
    "end": "2563920"
  },
  {
    "text": "can take down there they tend to not appreciate that some things that I",
    "start": "2563920",
    "end": "2569950"
  },
  {
    "text": "didn't talk about a whole lot it's kind of some of that some of the basic stuff and this is stuff that actually while I",
    "start": "2569950",
    "end": "2576339"
  },
  {
    "text": "say it's basics becomes interesting to solve how do I actually pass authorization down through my various",
    "start": "2576339",
    "end": "2582520"
  },
  {
    "text": "graph QL endpoints right so there's like this idea of a context in graphic QL that I talked about and the",
    "start": "2582520",
    "end": "2588310"
  },
  {
    "text": "implementations are kind of different between the language and reference implementations and it differs between",
    "start": "2588310",
    "end": "2595540"
  },
  {
    "text": "even organizations whether you're using something a JWT or other token approaches or things like that it really",
    "start": "2595540",
    "end": "2601839"
  },
  {
    "text": "depends on kind of the organization and how you've decided to approach that so pagination is not a completely solved",
    "start": "2601839",
    "end": "2607359"
  },
  {
    "text": "problem there's the relay spec which is a Facebook spec for how they handle pagination through graph QL schemas and",
    "start": "2607359",
    "end": "2614560"
  },
  {
    "text": "gateways and then good documentation so this is actually really important when you start playing the the game of having",
    "start": "2614560",
    "end": "2622780"
  },
  {
    "text": "lots of like essentially micro-service graph QL endpoints yes you can have graph QL kind of spit out this nice like",
    "start": "2622780",
    "end": "2630430"
  },
  {
    "text": "auto complete documentation searchable documentation but it ends up being that people want better examples so like okay",
    "start": "2630430",
    "end": "2638920"
  },
  {
    "text": "so what's the actual right way to make this request for all of these speakers and talks right you want to provide ways",
    "start": "2638920",
    "end": "2644770"
  },
  {
    "text": "that people can just go and kind of browse I'd say best practices or best implementations so if you want to get",
    "start": "2644770",
    "end": "2653470"
  },
  {
    "text": "started all this stuff there's a few great resources and utilities out there dan Schafer someone that's worked very",
    "start": "2653470",
    "end": "2659680"
  },
  {
    "text": "hard on the graphic girl stuff he doesn't he's part of Facebook he",
    "start": "2659680",
    "end": "2665589"
  },
  {
    "text": "actually talks about pagination and auth and and some really interesting approaches you can look that up on",
    "start": "2665589",
    "end": "2670720"
  },
  {
    "text": "YouTube dan Schaefer the apollo stack they're a great group of guys doing some really interesting",
    "start": "2670720",
    "end": "2675900"
  },
  {
    "text": "stuff with graphic UL providing actually metrics on graph QL engines providing really awesome clients that have like",
    "start": "2675900",
    "end": "2682529"
  },
  {
    "text": "built-in client-side caching and schema stitching Graciela schema cheat sheet go look that",
    "start": "2682529",
    "end": "2688170"
  },
  {
    "text": "up if you really want to understand the api and and and the types and things like that quickly there's a service",
    "start": "2688170",
    "end": "2695999"
  },
  {
    "text": "framework so service comm graph QL boilerplate which essentially gives you",
    "start": "2695999",
    "end": "2701640"
  },
  {
    "text": "kind of a look at here's how to build a graph QL engine on AWS with things like DynamoDB and lambda things like that and",
    "start": "2701640",
    "end": "2707569"
  },
  {
    "text": "then graph cool is actually a cool",
    "start": "2707569",
    "end": "2713420"
  },
  {
    "text": "implementation of this kind of hybrid approach between functions as a service",
    "start": "2713420",
    "end": "2718710"
  },
  {
    "text": "and graph QL and I would say if you were to start anywhere go look at this what",
    "start": "2718710",
    "end": "2723960"
  },
  {
    "text": "they're doing is this idea that your resolvers and custom resolvers in in",
    "start": "2723960",
    "end": "2729660"
  },
  {
    "text": "graph QL should by default be kind of like this hybrid approach where you can directly map to a function execution",
    "start": "2729660",
    "end": "2737940"
  },
  {
    "text": "they kind of take the complexity out of there's multi targeted resolvers and things like that and say you know what",
    "start": "2737940",
    "end": "2743309"
  },
  {
    "text": "like your resolver if its customers gonna want to have a function behind it and so they provide kind of a DSL for",
    "start": "2743309",
    "end": "2749789"
  },
  {
    "text": "defining what a a server list graph QL implementation could look like so with",
    "start": "2749789",
    "end": "2756839"
  },
  {
    "text": "that said thank you I hope you learned something and it was certainly fun for me and go play with server lists and",
    "start": "2756839",
    "end": "2763259"
  },
  {
    "text": "graph QL [Applause]",
    "start": "2763259",
    "end": "2769500"
  }
]