[
  {
    "start": "0",
    "end": "76000"
  },
  {
    "text": "so title of the talk JWT authentication with angularjs but really this is going",
    "start": "2520",
    "end": "8080"
  },
  {
    "text": "to be applicable to pretty much any front-end framework that you're working with what we're really going to be",
    "start": "8080",
    "end": "13920"
  },
  {
    "text": "talking about in this talk is like what why JWT like how does it fit into the",
    "start": "13920",
    "end": "19560"
  },
  {
    "text": "whole like browser scheme so a little bit about me um I've",
    "start": "19560",
    "end": "24920"
  },
  {
    "text": "been doing full stack development for about 10 years I didn't know it was called that once upon a time I just it",
    "start": "24920",
    "end": "30199"
  },
  {
    "text": "meant like I'll do everything and not say no but apparently that has a title um been using JavaScript on the whole",
    "start": "30199",
    "end": "37680"
  },
  {
    "text": "stack since 2011 um in my last startup we decided to use node and angular",
    "start": "37680",
    "end": "43440"
  },
  {
    "text": "because we thought it would help us move quickly prototype fast which was true um",
    "start": "43440",
    "end": "48719"
  },
  {
    "text": "it was a language learning company and basically our whole product was a browser application so this combination",
    "start": "48719",
    "end": "54079"
  },
  {
    "text": "helped us move fast and that's how I've come to be where I am now and I'm leading the Javas team at stormpath um",
    "start": "54079",
    "end": "61840"
  },
  {
    "text": "you saw Randall give a little 3 minute talk early on we're basically a user identity application for a developers",
    "start": "61840",
    "end": "68560"
  },
  {
    "text": "it's a rest API so think of us not only as a cloud data store for user data but also an authentication Service so it's",
    "start": "68560",
    "end": "77200"
  },
  {
    "start": "76000",
    "end": "76000"
  },
  {
    "text": "really great because you basically don't have to worry about storing user password securely integrating with all",
    "start": "77200",
    "end": "82320"
  },
  {
    "text": "those crazy things like ldap active directory Google Facebook yada y y we like we basically encapsulate all that",
    "start": "82320",
    "end": "88600"
  },
  {
    "text": "for you in a service and it's free to get started um if you got like a little side project or something you're working",
    "start": "88600",
    "end": "94520"
  },
  {
    "text": "on it takes like five minutes to get started with it so check it out quick housekeeping if you guys want",
    "start": "94520",
    "end": "101360"
  },
  {
    "text": "to grab a picture of this this has actually been working pretty well for sharing the link so I give you guys a",
    "start": "101360",
    "end": "108320"
  },
  {
    "text": "second to grab this QR code",
    "start": "108320",
    "end": "115600"
  },
  {
    "text": "okay so we're going to cover a lot of ground in here um so just kind of want to give you an overview I think we've",
    "start": "115600",
    "end": "121960"
  },
  {
    "text": "got 40 minutes actually I need to get a timer going there's one on here actually okay um so we're going to recap the",
    "start": "121960",
    "end": "130840"
  },
  {
    "text": "scheme that we're all used to which is like session identifier stored in a cookie we're going to just briefly you",
    "start": "130840",
    "end": "136319"
  },
  {
    "start": "135000",
    "end": "135000"
  },
  {
    "text": "know revisit the thing that we're all used to and then kind of talk about why jts are happening we're going to",
    "start": "136319",
    "end": "141680"
  },
  {
    "text": "introduce them and then also talk about access tokens and refresh tokens it's um there there is some overlap between GWT",
    "start": "141680",
    "end": "148959"
  },
  {
    "text": "and ooth um so we're going to talk a bit about that and the thing that I'm sure you're all the most interested in is",
    "start": "148959",
    "end": "154959"
  },
  {
    "text": "like how do I store these things in the browser we're going to talk about some of the security tradeoffs that you need",
    "start": "154959",
    "end": "160879"
  },
  {
    "text": "to think about we'll get into some angular specifics and then if there's time I have some really deep dive stuff",
    "start": "160879",
    "end": "168760"
  },
  {
    "text": "on the right way to do cookies the point the point of that part of the talk is to like freak everybody out and like make",
    "start": "168760",
    "end": "174720"
  },
  {
    "text": "you run back to your office and like check your application um that part this is like",
    "start": "174720",
    "end": "181040"
  },
  {
    "text": "version four of this talk I've moved it to the end this time to make more room for other",
    "start": "181040",
    "end": "186200"
  },
  {
    "text": "stuff okay session identifiers this is the scheme that you know we're all used",
    "start": "186200",
    "end": "192239"
  },
  {
    "start": "192000",
    "end": "192000"
  },
  {
    "text": "to user submits a login form we verify the credentials create a session store",
    "start": "192239",
    "end": "198040"
  },
  {
    "text": "that ID in a cookie and in an old school looking",
    "start": "198040",
    "end": "203360"
  },
  {
    "text": "fashion here's what that looks like you know login form verify the stuff send",
    "start": "203360",
    "end": "209080"
  },
  {
    "text": "back a cookie great all future browser requests are authenticated with this",
    "start": "209080",
    "end": "214799"
  },
  {
    "text": "ID well you know that seems to be going out of fad especially when you look at",
    "start": "214799",
    "end": "220080"
  },
  {
    "text": "all the hype around JWT so like why is that well aside from it being the cool",
    "start": "220080",
    "end": "226439"
  },
  {
    "text": "new thing there are some legitimate problems with session IDs and the first",
    "start": "226439",
    "end": "232040"
  },
  {
    "start": "228000",
    "end": "228000"
  },
  {
    "text": "one that most people run into is that they're not really like web scill so to speak right like now you've got to",
    "start": "232040",
    "end": "239040"
  },
  {
    "text": "maintain this point between a session ID and the rest of the user data so now you're incurring like database load for every request that gets kind of annoying",
    "start": "239040",
    "end": "246280"
  },
  {
    "text": "it's pretty easy to solve that problem you know you just basically put that lookup table in an inmemory cache or",
    "start": "246280",
    "end": "252120"
  },
  {
    "text": "something that's super fast um you can work around it but you know it's a problem to be dealt with so people have",
    "start": "252120",
    "end": "258440"
  },
  {
    "text": "always kind of been looking for something different and there's a perception that cookies are inherently insecure which",
    "start": "258440",
    "end": "266280"
  },
  {
    "text": "there's truth to that like if you do cookies wrong it's a disaster but there's ways to do it right so I'm going",
    "start": "266280",
    "end": "272639"
  },
  {
    "text": "to work on that perception a little bit so I want to introduce DWTS pretty",
    "start": "272639",
    "end": "279320"
  },
  {
    "text": "early on here um basically it stands for Json web token because Json is the format of the",
    "start": "279320",
    "end": "285639"
  },
  {
    "text": "token but before moving on I just want to cover some words so authentication is",
    "start": "285639",
    "end": "292520"
  },
  {
    "text": "the part where you're proving who you are it's that step of asserting like okay some credentials are coming in and",
    "start": "292520",
    "end": "299440"
  },
  {
    "text": "I'm asserting that they're for the person who they've been issued to right most common form or used to is just",
    "start": "299440",
    "end": "305199"
  },
  {
    "text": "username and password you authenticate yourself with those things but now in like the API driven World machine to",
    "start": "305199",
    "end": "311199"
  },
  {
    "text": "machine communication we're seeing API Keys being used a lot um so that's the",
    "start": "311199",
    "end": "317400"
  },
  {
    "text": "authentication part it's like credentials give me back something that I can use so I don't have to present",
    "start": "317400",
    "end": "323520"
  },
  {
    "text": "those credentials every time that's what the token is for it's a way to persist that authorization I'm sorry that",
    "start": "323520",
    "end": "329880"
  },
  {
    "text": "authentication the authorization part is what happens after you've authenticated authorization is a way of saying okay",
    "start": "329880",
    "end": "336919"
  },
  {
    "text": "given that you've authenticated as so and so like what do you have access to you know so it's like who are you what",
    "start": "336919",
    "end": "342440"
  },
  {
    "text": "do you have access to jts are simply just a token format so if we're going to",
    "start": "342440",
    "end": "347960"
  },
  {
    "text": "take this idea of exchanging credentials for a token we have to make some decisions about what that token should",
    "start": "347960",
    "end": "353680"
  },
  {
    "text": "look like and JWT is winning as that format because it's Json and you know",
    "start": "353680",
    "end": "359639"
  },
  {
    "text": "everybody loves Json now for good reasons and the overlap with o 2 and JWT",
    "start": "359639",
    "end": "366880"
  },
  {
    "text": "is that o 2 actually calls itself an authorization framework and they",
    "start": "366880",
    "end": "373039"
  },
  {
    "text": "describe you know the process of exchanging credentials for tokens they don't explicitly say what the token",
    "start": "373039",
    "end": "378599"
  },
  {
    "text": "format should be but that's where JWT fills the whole as like okay you need a token here's a convenient format for",
    "start": "378599",
    "end": "385120"
  },
  {
    "text": "that token okay so I mean like long story short jts are fun so let's let's dig in",
    "start": "385120",
    "end": "393240"
  },
  {
    "text": "and see what they actually are before we talk about some of the other concerns around",
    "start": "393240",
    "end": "398319"
  },
  {
    "text": "them if you encounter them in the wild they look just like another ugly string you know like at first glance you might",
    "start": "398319",
    "end": "404680"
  },
  {
    "start": "399000",
    "end": "399000"
  },
  {
    "text": "be like how is this different from a session identifier it just looks like some random crap in a cookie but it is",
    "start": "404680",
    "end": "411479"
  },
  {
    "text": "actually structured so if you separated out by period it's basically three um B",
    "start": "411479",
    "end": "417759"
  },
  {
    "text": "64 URL and um strings the URL encoding is important",
    "start": "417759",
    "end": "423759"
  },
  {
    "text": "if you're if you're like racking your brain trying to figure out why you can't decode something make sure it's 64 URL",
    "start": "423759",
    "end": "429240"
  },
  {
    "text": "encoded um so each of these sections have a name we got a header Cally the",
    "start": "429240",
    "end": "436039"
  },
  {
    "text": "body really it's called the claims body and then a cryptographic signature so if",
    "start": "436039",
    "end": "441400"
  },
  {
    "text": "you decode the basic C4 en coding then you get down to your",
    "start": "441400",
    "end": "447199"
  },
  {
    "text": "Json so you know as a token that's asserting you know authentication it's",
    "start": "447199",
    "end": "454199"
  },
  {
    "text": "got to have some information to describe what has gone on so the body is where the meat of that is we're going to talk",
    "start": "454199",
    "end": "459599"
  },
  {
    "text": "about that in the next slide but the header is sort of like this envelope kind of like information thing that",
    "start": "459599",
    "end": "465759"
  },
  {
    "text": "describes the whole token so part of one of the features we're going to talk about about gwts is you",
    "start": "465759",
    "end": "472159"
  },
  {
    "text": "cryptographically sign them and the header is telling the system that's going to verify them what the algorithm",
    "start": "472159",
    "end": "479039"
  },
  {
    "text": "was that is used to um to do the signing so that you know and then if you've",
    "start": "479039",
    "end": "484400"
  },
  {
    "text": "encrypted it which is an option for JWT it tells you information about how to decrypt the body like what algorithms",
    "start": "484400",
    "end": "490159"
  },
  {
    "text": "need to be used so header is just sort of like the FYI about how to parse this",
    "start": "490159",
    "end": "497199"
  },
  {
    "text": "token but the body is actually the part that has the really juicy stuff in",
    "start": "497199",
    "end": "502520"
  },
  {
    "text": "it so this is where I'm going to spend a decent amount of time so they call these",
    "start": "502520",
    "end": "508319"
  },
  {
    "text": "claims because they're basically making a claim about the person or the system",
    "start": "508319",
    "end": "514200"
  },
  {
    "text": "even that authenticated and as as with all rfc's",
    "start": "514200",
    "end": "520599"
  },
  {
    "text": "these these common fields are recommended but not required in practice you're going to see these fields the",
    "start": "520599",
    "end": "526279"
  },
  {
    "text": "most so I'm going to cover them you have the issuer field which is describing who",
    "start": "526279",
    "end": "531959"
  },
  {
    "text": "issued this token so you know we're in this world now where a lot of the things",
    "start": "531959",
    "end": "537480"
  },
  {
    "text": "we make are like microservice or our product is actually like a multi-tenant application where multiple",
    "start": "537480",
    "end": "544560"
  },
  {
    "text": "customers are like hosting the applications on our on our uh platform so the issy field is a way of like",
    "start": "544560",
    "end": "551519"
  },
  {
    "text": "letting people who are going to look at this token know like you know which application essentially has issued this",
    "start": "551519",
    "end": "558279"
  },
  {
    "text": "token and then you also can see when it expires token expiration is a complex",
    "start": "558279",
    "end": "565440"
  },
  {
    "text": "thing that we're going to talk more about but just know that you're supposed to put the EXP time in the token because",
    "start": "565440",
    "end": "570560"
  },
  {
    "text": "it helps other people know like should they even consider this thing valid anymore and the subject is kind of like",
    "start": "570560",
    "end": "578800"
  },
  {
    "text": "Numero Uno it's telling you who this token represents like who authenticated",
    "start": "578800",
    "end": "584000"
  },
  {
    "text": "so this can be a pointer to your database system some user ID something like that and again we're now seeing",
    "start": "584000",
    "end": "591079"
  },
  {
    "text": "another ooth overlap here with scope so in O2 land it be an authorization",
    "start": "591079",
    "end": "598800"
  },
  {
    "text": "framework they describe a whole lot of ceremony around the idea of scope which is",
    "start": "598800",
    "end": "604440"
  },
  {
    "text": "basically just like saying like you know this person has authenticated and has access to these things and scope can",
    "start": "604440",
    "end": "612600"
  },
  {
    "text": "differ depending on the authentication attempt if you've ever integrated with like Google login or Facebook log and",
    "start": "612600",
    "end": "618839"
  },
  {
    "text": "you've seen this part of oath before where you ask for specific Scopes like I want the user's email address or I want",
    "start": "618839",
    "end": "626440"
  },
  {
    "text": "like everything um which is always always fun when you're presented with that option when you're Facebook logging",
    "start": "626440",
    "end": "632240"
  },
  {
    "text": "into something but this is there this is where the overlap is but again it's not prescribed by oath gwts are just like",
    "start": "632240",
    "end": "639519"
  },
  {
    "text": "hey we got this token format we need to P we need some way to persist information about that scope that was",
    "start": "639519",
    "end": "645639"
  },
  {
    "text": "requested so you'll end up putting it in the in the token so how do we create these things",
    "start": "645639",
    "end": "653040"
  },
  {
    "text": "and how do we verify them you know if we're going to use these things essentially for authentication like how",
    "start": "653040",
    "end": "659560"
  },
  {
    "text": "do we do that well as we've discussed to get a token you have to present some",
    "start": "659560",
    "end": "665440"
  },
  {
    "text": "credentials traditionally that's a username and a password more often these days we're also seeing API Keys being",
    "start": "665440",
    "end": "671760"
  },
  {
    "text": "used for like developer services and they're going to be issued by your server your authentication",
    "start": "671760",
    "end": "678279"
  },
  {
    "text": "Service whatever however however you architect your system like you are the one who's issuing these your application",
    "start": "678279",
    "end": "684560"
  },
  {
    "text": "is is granting these tokens it's giving them out and as we saw with those signatures before you're going to sign",
    "start": "684560",
    "end": "691040"
  },
  {
    "text": "it with a key like a strong key that's private to your server so the only",
    "start": "691040",
    "end": "696360"
  },
  {
    "text": "person who can verify that these tokens were sent out by the server is somebody has access to that same",
    "start": "696360",
    "end": "703079"
  },
  {
    "text": "key these tokens are given to the client that's why we got to talk about browser security and the client's going to hold",
    "start": "703079",
    "end": "710040"
  },
  {
    "text": "on to them and then for subsequent requests until the tokens expire they can use them to authenticate and be",
    "start": "710040",
    "end": "716880"
  },
  {
    "text": "authorized to resources and all those claims in the body or what or what helps",
    "start": "716880",
    "end": "721920"
  },
  {
    "text": "the verifying service know what the user can",
    "start": "721920",
    "end": "727200"
  },
  {
    "text": "do so on the verification side this is where it gets super fun and exciting and",
    "start": "727200",
    "end": "734120"
  },
  {
    "start": "728000",
    "end": "728000"
  },
  {
    "text": "feels very new because it's just a signature validation and an expiration",
    "start": "734120",
    "end": "739440"
  },
  {
    "text": "time check you've now got this stateless authentication mechanism so as long as your server wherever in your stack",
    "start": "739440",
    "end": "746680"
  },
  {
    "text": "you're verifying authentication tokens as as long as that component has access to that private key now it can just",
    "start": "746680",
    "end": "753519"
  },
  {
    "text": "verify signatures and look at expiration times and be like yeah you know I trust this user I created this token and oh",
    "start": "753519",
    "end": "760040"
  },
  {
    "text": "yeah by the way I put the scope in this token so I I trust this whole thing so you don't have to go running around to",
    "start": "760040",
    "end": "765560"
  },
  {
    "text": "like three different layers of databases to figure out like who the user is and what they can do it's all encoded in",
    "start": "765560",
    "end": "771639"
  },
  {
    "text": "this like cryptographically signed token so this",
    "start": "771639",
    "end": "776720"
  },
  {
    "text": "is um so backing up to",
    "start": "777839",
    "end": "783000"
  },
  {
    "text": "here oh I'm sorry yeah the question was what is the signature so when the tokens are created there's a a hash essentially",
    "start": "783000",
    "end": "789680"
  },
  {
    "text": "created of the signature so with the key you can you know verify that the hash was created by that same",
    "start": "789680",
    "end": "795079"
  },
  {
    "text": "input um just kind of like your straight straightforward um crypto hashing kind",
    "start": "795079",
    "end": "800639"
  },
  {
    "text": "of stuff there's there's tons of libraries out there for these kinds of things so this like I saying this is",
    "start": "800639",
    "end": "807959"
  },
  {
    "text": "this is where it feels new and exciting like oh my God stess off I don't need a database right like it feels super exciting cuz I can like you know make",
    "start": "807959",
    "end": "814880"
  },
  {
    "text": "decisions locally about who the user is what they can do y y and that feels",
    "start": "814880",
    "end": "820760"
  },
  {
    "text": "super great but immediately the question that comes up is like well how do I revoke this right like if it's really",
    "start": "820760",
    "end": "827600"
  },
  {
    "text": "stateless then this token is basically valid for as long as it exists like",
    "start": "827600",
    "end": "833360"
  },
  {
    "text": "that's kind of scary right so the all specification Des cribe",
    "start": "833360",
    "end": "839360"
  },
  {
    "text": "this idea of an access and refresh token and it's actually super useful um the",
    "start": "839360",
    "end": "845440"
  },
  {
    "text": "entire O2 spec is pretty large and covers a lot of concerns and it's a good",
    "start": "845440",
    "end": "851000"
  },
  {
    "text": "read if you want to go to sleep after lunch it'll take you like a week to get through it that way like one section per",
    "start": "851000",
    "end": "856720"
  },
  {
    "text": "day um but it is actually I I recommend reading it just because it kind of gives you like a high L overview of things",
    "start": "856720",
    "end": "864000"
  },
  {
    "text": "that of problems people are trying to solve and you can kind of pick and choose some abstractions that work",
    "start": "864000",
    "end": "869560"
  },
  {
    "text": "and I'm actually a really big fan of the access token and refresh token scheme so I want to talk about that one in detail",
    "start": "869560",
    "end": "876680"
  },
  {
    "start": "874000",
    "end": "874000"
  },
  {
    "text": "basically the way this works is you're going to create two tokens two jwt's",
    "start": "876680",
    "end": "882079"
  },
  {
    "text": "when the user logs in and you're going to give the client both of them and the idea here is that your access token is",
    "start": "882079",
    "end": "889240"
  },
  {
    "text": "going to have a short expiration time and the refresh token is going to exist for much longer once the access token",
    "start": "889240",
    "end": "897160"
  },
  {
    "text": "expires the client then presents the refresh token to get another access",
    "start": "897160",
    "end": "902519"
  },
  {
    "text": "token now the the whole point of this scheme is to kind of like give you a little bit of control over how often you",
    "start": "902519",
    "end": "910199"
  },
  {
    "text": "do a stateless check and just implicitly trust versus making some longer round",
    "start": "910199",
    "end": "915560"
  },
  {
    "text": "trip to assert that this authentication is still true so you know in some the Paradigm is",
    "start": "915560",
    "end": "923440"
  },
  {
    "text": "designed to give you control over the implicit trust trade-off with stateless tokens so you get you get to control",
    "start": "923440",
    "end": "929480"
  },
  {
    "text": "for how long you'll do explicit trust versus go round trip to a database because the idea with refresh token",
    "start": "929480",
    "end": "935759"
  },
  {
    "text": "reification is that's the thing you're going to revoke if you need to just if you need to kill this user session if",
    "start": "935759",
    "end": "941920"
  },
  {
    "text": "you need to like basically revoke access you're going to maintain refresh tokens in a database and remove those when you",
    "start": "941920",
    "end": "950079"
  },
  {
    "text": "want to remove access so in this Paradigm the refresh",
    "start": "950079",
    "end": "955959"
  },
  {
    "text": "token basically sets the maximum lifetime of the authentic at context you can you can sort of think of the refresh",
    "start": "955959",
    "end": "962240"
  },
  {
    "text": "token as like the maximum amount of time that this like you know authenticated session can exist whereas the",
    "start": "962240",
    "end": "969199"
  },
  {
    "text": "authentication token sets you know that that that little W little bit of wiggle room where if you need to revoke the",
    "start": "969199",
    "end": "975920"
  },
  {
    "text": "refresh token how long can this compromise token be used",
    "start": "975920",
    "end": "981920"
  },
  {
    "text": "for to put this in example I find it much easier to talk about this whole thing through example you know if you're",
    "start": "982560",
    "end": "988680"
  },
  {
    "text": "build building some like super secure banking application where often there's a requirement that the user gets like",
    "start": "988680",
    "end": "994279"
  },
  {
    "text": "actually forced out after some period of time you would set your refresh token to",
    "start": "994279",
    "end": "999639"
  },
  {
    "text": "that that Force logout time so if the user is only allowed to have a session for 30 minutes you would set the refresh",
    "start": "999639",
    "end": "1005480"
  },
  {
    "text": "token to 30 minutes and then set your access token to something small like",
    "start": "1005480",
    "end": "1010639"
  },
  {
    "text": "five minutes so basically like as the user using the application every five minutes you're going to check like as",
    "start": "1010639",
    "end": "1016639"
  },
  {
    "text": "this as this as the refresh token been red if so it's like game over we're done so you know that's the super secure",
    "start": "1016639",
    "end": "1024199"
  },
  {
    "text": "side but then the flip of that is like some mobile social app where once the user logs in they should be logged in",
    "start": "1024199",
    "end": "1030720"
  },
  {
    "text": "forever and security is probably like less of a concern in this case just you're going to set the refresh token to",
    "start": "1030720",
    "end": "1036839"
  },
  {
    "text": "something insanely large like four years like lifetime of the phone How likely",
    "start": "1036839",
    "end": "1041959"
  },
  {
    "text": "are you to uninstall chrome that kind of a thing um and then you know how you",
    "start": "1041959",
    "end": "1047678"
  },
  {
    "text": "want to set the access token again it varies Case by case but you can do something pretty long there as well",
    "start": "1047679",
    "end": "1055280"
  },
  {
    "text": "so but you know this all feels nice and exciting to have this stateless check",
    "start": "1055280",
    "end": "1060840"
  },
  {
    "text": "but what if I want the user to be logged out immediately when I roke that refresh token this is like something that we're",
    "start": "1060840",
    "end": "1067160"
  },
  {
    "text": "pretty used to being able to do with traditional applications that use a session",
    "start": "1067160",
    "end": "1073480"
  },
  {
    "text": "identifier and the answer to this one is you got to maintain a blacklist this",
    "start": "1074600",
    "end": "1081280"
  },
  {
    "text": "feels like introducing the database again to the authentication layer and there's truth to that but it's it's sort",
    "start": "1081280",
    "end": "1088280"
  },
  {
    "text": "of a different process because rather than maintaining every single session and having to look it up on every",
    "start": "1088280",
    "end": "1094640"
  },
  {
    "text": "request instead you can just do a really quick check like has something been revoked so if you do need the user to be",
    "start": "1094640",
    "end": "1102919"
  },
  {
    "text": "Force logged out in this scheme you're going to have to maintain a black list of access tokens",
    "start": "1102919",
    "end": "1109280"
  },
  {
    "text": "so when you're issuing access and refresh tokens you need to create a pointer between the two and there is",
    "start": "1109280",
    "end": "1114760"
  },
  {
    "text": "actually a field for that called the GTI field you just basically put a random ID in the tokens and then they basically",
    "start": "1114760",
    "end": "1121400"
  },
  {
    "text": "reference each other so you'll need to maintain those pointers in your",
    "start": "1121400",
    "end": "1126559"
  },
  {
    "text": "database is there a question I don't get happens",
    "start": "1126559",
    "end": "1131760"
  },
  {
    "text": "when when an access token uh it's a good question when an access token expires",
    "start": "1132080",
    "end": "1137720"
  },
  {
    "text": "your Authentication service should reject it just be like nope not valid",
    "start": "1137720",
    "end": "1143559"
  },
  {
    "text": "anymore you refresh to what what does that imply the refresh token implies",
    "start": "1143559",
    "end": "1151039"
  },
  {
    "text": "that you still have access to get more access",
    "start": "1151039",
    "end": "1156200"
  },
  {
    "text": "tokens does that help answer the question no okay",
    "start": "1156440",
    "end": "1163760"
  },
  {
    "text": "um how do I describe this it's",
    "start": "1163760",
    "end": "1169039"
  },
  {
    "text": "was there another question there refresh Tok uh when the refresh",
    "start": "1169120",
    "end": "1175440"
  },
  {
    "text": "token expires then you basically have to log in",
    "start": "1175440",
    "end": "1181120"
  },
  {
    "text": "again so it's the whole point of this access and refresh token thing is from",
    "start": "1181120",
    "end": "1186520"
  },
  {
    "text": "the client's perspective it's going to keep reupping its authentication using the refresh",
    "start": "1186520",
    "end": "1192200"
  },
  {
    "text": "token until that refresh token is over then it has to present the user with the",
    "start": "1192200",
    "end": "1197559"
  },
  {
    "text": "op they have to log in again basically um but the the needle you're",
    "start": "1197559",
    "end": "1203600"
  },
  {
    "text": "controlling between the lifetime of the two that's an optimization for your security concerns and your backend",
    "start": "1203600",
    "end": "1210559"
  },
  {
    "text": "performance how often you want to do database checks how often the client basically has to reauthenticate with you",
    "start": "1210559",
    "end": "1218120"
  },
  {
    "text": "I have a question if the access token expire and I have a refesh token so I",
    "start": "1218120",
    "end": "1223679"
  },
  {
    "text": "should I get the access token from the backend services in backround",
    "start": "1223679",
    "end": "1229799"
  },
  {
    "text": "notifying the user yeah so the question is like should the user be notified of this no this should be totally",
    "start": "1229799",
    "end": "1235360"
  },
  {
    "text": "transparent to the user um which is where cookies are actually going to be pretty useful when we get to that part",
    "start": "1235360",
    "end": "1241559"
  },
  {
    "text": "of the conversation the know when access shouldn't oh the the own mean the",
    "start": "1241559",
    "end": "1248520"
  },
  {
    "text": "client yes",
    "start": "1248520",
    "end": "1254120"
  },
  {
    "text": "yeah exactly on the CL are these that's what we're going to talk about",
    "start": "1254120",
    "end": "1260000"
  },
  {
    "text": "yeah okay so back to this whole Blacklist scheme um so yeah if you need the user to be",
    "start": "1260000",
    "end": "1267159"
  },
  {
    "text": "like force logged out um at that point that you're doing that when you're revoking a refresh token you need to",
    "start": "1267159",
    "end": "1272799"
  },
  {
    "start": "1269000",
    "end": "1269000"
  },
  {
    "text": "then stuff all the related access token in a black list so that all requests coming through just double check the",
    "start": "1272799",
    "end": "1278360"
  },
  {
    "text": "Black List to make sure that it's not in there but if you don't mind waiting",
    "start": "1278360",
    "end": "1284480"
  },
  {
    "text": "until yeah that's correct the question is like if you don't mind waiting you don't need the Blacklist and that's totally true like I mean the the whole",
    "start": "1286799",
    "end": "1294159"
  },
  {
    "text": "the O spec doesn't even talk anything about Blacklist because they just they assume that you're okay with waiting for",
    "start": "1294159",
    "end": "1300880"
  },
  {
    "text": "it to expire but I'm putting this in here because this question comes up a lot for us at storm path and um so the",
    "start": "1300880",
    "end": "1307039"
  },
  {
    "text": "answer is like this Blacklist scheme so if you're using reddis it's super simple",
    "start": "1307039",
    "end": "1312279"
  },
  {
    "text": "you just stuff the access token and the expiration of it in a list and then when",
    "start": "1312279",
    "end": "1317720"
  },
  {
    "text": "you're checking and coming request just do a get on that token if it exists in The Blacklist reject the request",
    "start": "1317720",
    "end": "1323960"
  },
  {
    "text": "otherwise everything's cool okay so that's a crazy driveby of",
    "start": "1323960",
    "end": "1330440"
  },
  {
    "text": "like the whole like access token scheme from kind of the client and server",
    "start": "1330440",
    "end": "1336679"
  },
  {
    "text": "perspective but now we're going to jump into browsers in particular which",
    "start": "1336679",
    "end": "1342120"
  },
  {
    "text": "present their own set of concerns question try yeah you have to when the",
    "start": "1342120",
    "end": "1347279"
  },
  {
    "text": "access toon expires you have to use the refresh token to get another one and if that fails it means the refresh token",
    "start": "1347279",
    "end": "1354559"
  },
  {
    "text": "has been revoked and your whole session's over you get another access token yes you get another access token",
    "start": "1354559",
    "end": "1361600"
  },
  {
    "text": "yeah there's an exchange going on there have question uh the question is like why even use the refresh token scheme if",
    "start": "1361600",
    "end": "1368640"
  },
  {
    "text": "you want to maintain a blacklist um again it's just like you're make you're making a a tradeoff with this whole",
    "start": "1368640",
    "end": "1376000"
  },
  {
    "text": "scheme of wanting to use stateless authentication but if you if you get",
    "start": "1376000",
    "end": "1382080"
  },
  {
    "text": "yourself into a situation where you want to use the scheme but then all of a sudden you're like well I want I need to maintain a Black List performance-wise",
    "start": "1382080",
    "end": "1388320"
  },
  {
    "text": "it's a lot easier to check a black list than maintain a list of session IDs for every single user",
    "start": "1388320",
    "end": "1396200"
  },
  {
    "text": "so um again it depends like on your your context but it's going to be somewhere",
    "start": "1396200",
    "end": "1402760"
  },
  {
    "text": "in between these two examples it's like how often do you want to check that that refresh token hasn't been red like how",
    "start": "1402760",
    "end": "1409679"
  },
  {
    "start": "1405000",
    "end": "1405000"
  },
  {
    "text": "big do you want the window to be in which a compromised access token can be used by an attacker so for super secure",
    "start": "1409679",
    "end": "1416360"
  },
  {
    "text": "applications you want to keep it short but applications where there's not like a whole lot of Need for security you can",
    "start": "1416360",
    "end": "1422919"
  },
  {
    "text": "make it super long so it it really depends on the the application like the",
    "start": "1422919",
    "end": "1428320"
  },
  {
    "text": "needs of the application also the how often you that",
    "start": "1428320",
    "end": "1436400"
  },
  {
    "text": "start um so when you put something in The Blacklist you should have it",
    "start": "1436400",
    "end": "1441840"
  },
  {
    "text": "automatically expire when that access token is no longer valid so because that",
    "start": "1441840",
    "end": "1447320"
  },
  {
    "text": "expiration time is contained in the token you can know when you're putting it in your cash layer just say hey",
    "start": "1447320",
    "end": "1452520"
  },
  {
    "text": "expire this when this thing expires",
    "start": "1452520",
    "end": "1457440"
  },
  {
    "text": "yeah all right so browser um lots of browser concerns about how to do this",
    "start": "1457720",
    "end": "1464120"
  },
  {
    "text": "securely it's this whole scheme is actually like way simpler on mobile cuz mobile sdks provide all these ways to",
    "start": "1464120",
    "end": "1470000"
  },
  {
    "text": "like store data in like sandboxes that are protected to just your application but that's not really the truth with",
    "start": "1470000",
    "end": "1477120"
  },
  {
    "text": "browsers there's a lot of trade-offs and concerns that we have to deal with um something you're going to see a",
    "start": "1477120",
    "end": "1484120"
  },
  {
    "start": "1478000",
    "end": "1478000"
  },
  {
    "text": "lot when you start looking at GWT stuff on the web is people are storing gwts in",
    "start": "1484120",
    "end": "1490000"
  },
  {
    "text": "local storage but I'm just going to straight up say don't do that because",
    "start": "1490000",
    "end": "1495559"
  },
  {
    "text": "the local storage area just by the simple virtue of the fact that",
    "start": "1495559",
    "end": "1501039"
  },
  {
    "text": "it's accessible by the JavaScript environment is makes you vulnerable to cross- site scripting attacks um we can",
    "start": "1501039",
    "end": "1508279"
  },
  {
    "text": "talk more about what those attacks are but basically like if somebody manages to get malicious code on your site they",
    "start": "1508279",
    "end": "1514440"
  },
  {
    "text": "can basically steal the authentication tokens and it's a big problem cookies are actually a really",
    "start": "1514440",
    "end": "1521919"
  },
  {
    "text": "secure place to store these tokens if you set the HTTP only and secure flags",
    "start": "1521919",
    "end": "1527520"
  },
  {
    "text": "on the cookie when you send them down to the browser what the HTTP only flag does is prevents",
    "start": "1527520",
    "end": "1535399"
  },
  {
    "text": "that cookie from being accessible from the JavaScript environment so by doing that boom like you've you've made it",
    "start": "1535399",
    "end": "1541760"
  },
  {
    "text": "like impossible for an access S attack to steal your cookies now that come",
    "start": "1541760",
    "end": "1546799"
  },
  {
    "text": "cookies do come with this other really annoying thing which is cross site request forgery as an attack Vector how",
    "start": "1546799",
    "end": "1554320"
  },
  {
    "text": "many people know about this one okay I'm going to I'm going to talk",
    "start": "1554320",
    "end": "1560080"
  },
  {
    "text": "on that one before I'm done because this is like a big problem that you have to pay attention if you're going to use",
    "start": "1560080",
    "end": "1565399"
  },
  {
    "text": "cookies for storage something else you're going to see out there is the authorization",
    "start": "1565399",
    "end": "1570919"
  },
  {
    "text": "header is being used to send the token back to the server so in the oo land",
    "start": "1570919",
    "end": "1576760"
  },
  {
    "text": "when you start looking at the spec they say okay great you've got an access token you're going to use that to authenticate a request to me awesome I",
    "start": "1576760",
    "end": "1583799"
  },
  {
    "text": "want you to send that to me in the authorization header on the request",
    "start": "1583799",
    "end": "1589120"
  },
  {
    "text": "so you know this is fun this is different we can use JavaScript to set headers and all that but it's really not",
    "start": "1589120",
    "end": "1595640"
  },
  {
    "text": "necessary and in fact it kind of like runs into a lot of cross origin issues when you start dealing with custom headers in JavaScript but if you're",
    "start": "1595640",
    "end": "1602880"
  },
  {
    "text": "going to go the Cookie route you don't even need to do this so it's kind of like why bother and cross domain requests are",
    "start": "1602880",
    "end": "1610360"
  },
  {
    "text": "always going to be hell no matter what authentication context or scheme you deal with I'm sure you've run into this",
    "start": "1610360",
    "end": "1616720"
  },
  {
    "text": "before so just know that whatever you can do to simplify cross domain situations is going to help you",
    "start": "1616720",
    "end": "1624120"
  },
  {
    "text": "out so given all those tradeoffs in my opinion your mileage may",
    "start": "1624120",
    "end": "1629679"
  },
  {
    "start": "1626000",
    "end": "1626000"
  },
  {
    "text": "vary this is what you should do this is what we do at storm path because you know if you're using one of our front",
    "start": "1629679",
    "end": "1635240"
  },
  {
    "text": "end libraries we want to make sure you're like as as secure as possible so these are the choices that we've made we",
    "start": "1635240",
    "end": "1641320"
  },
  {
    "text": "do do cookies with HTTP only insecure cuz csrf protection is easy to get right",
    "start": "1641320",
    "end": "1647640"
  },
  {
    "text": "but access s is easy to get wrong so we just have made the opinionated decision that we want to avoid xss at all costs",
    "start": "1647640",
    "end": "1654520"
  },
  {
    "text": "and just deal with implementing a csrf solution you don't want to use the",
    "start": "1654520",
    "end": "1659679"
  },
  {
    "text": "authorization header cuz once you're using cookies it's not really needed and",
    "start": "1659679",
    "end": "1664880"
  },
  {
    "text": "avoid cross domain or possible like you know I know sometimes that's not always possible because like your angular app",
    "start": "1664880",
    "end": "1672519"
  },
  {
    "text": "is hosted on some domain that's different from API service X developed by some team and some other place",
    "start": "1672519",
    "end": "1678799"
  },
  {
    "text": "but if you have a choice um try to keep things in the same domain it just makes things a lot simpler especially when you",
    "start": "1678799",
    "end": "1684440"
  },
  {
    "text": "start dealing with like browser compatibility below IE10 and it's just like",
    "start": "1684440",
    "end": "1690960"
  },
  {
    "text": "craziness so what does the authentication logic will look like if we're going to use these tokens in",
    "start": "1690960",
    "end": "1698159"
  },
  {
    "text": "cookies so the situation is the user's logged in we've sent down an access token and refresh token stored them in",
    "start": "1698159",
    "end": "1705720"
  },
  {
    "start": "1699000",
    "end": "1699000"
  },
  {
    "text": "cookies on the next request that my app makes they get some data the server is",
    "start": "1705720",
    "end": "1711080"
  },
  {
    "text": "going to go through these checks it's going to say is there an access to a con cookie if so is it valid like was it",
    "start": "1711080",
    "end": "1718159"
  },
  {
    "text": "signed by me is it expired if those checks are okay then great I can allow",
    "start": "1718159",
    "end": "1724240"
  },
  {
    "text": "this request if they're not I'm going to be like all right hold on do you have a refresh token okay cool I'm going to go",
    "start": "1724240",
    "end": "1731240"
  },
  {
    "text": "try getting a new access token using that refresh token if that works happy",
    "start": "1731240",
    "end": "1737039"
  },
  {
    "text": "path you know I authenticate the request on the response I ship down that new access token so this is this is that",
    "start": "1737039",
    "end": "1744159"
  },
  {
    "text": "transparent mechanism we're talking about where the the client basically doesn't even really have to deal with",
    "start": "1744159",
    "end": "1750919"
  },
  {
    "text": "you know managing any authentication stuff it's just letting the browser do its browser thing of sending cookies and",
    "start": "1750919",
    "end": "1757440"
  },
  {
    "text": "sing cookies if the refresh token request for",
    "start": "1757440",
    "end": "1762919"
  },
  {
    "text": "new access token fails just this is like game over like the user the users logged",
    "start": "1762919",
    "end": "1768360"
  },
  {
    "text": "out like force them to your log out view so the refresh toen also mhm so the",
    "start": "1768360",
    "end": "1775159"
  },
  {
    "text": "question is do you transmit the refresh token the answer is yeah on every request you're sending along both",
    "start": "1775159",
    "end": "1781240"
  },
  {
    "text": "so refresh",
    "start": "1781240",
    "end": "1784679"
  },
  {
    "text": "toest um no once refresh token if if that refresh token is wrong in any way",
    "start": "1787000",
    "end": "1792200"
  },
  {
    "text": "it's expired it's been revoked the signature doesn't check out like it's that's like done cuz that's sort of ort",
    "start": "1792200",
    "end": "1798159"
  },
  {
    "text": "of like those are the keys to the castle right really the refresh token is in a way replacing that session ID cookie",
    "start": "1798159",
    "end": "1805399"
  },
  {
    "text": "that we're used to using that's like that's like the point of failure so if there's something wrong with that no",
    "start": "1805399",
    "end": "1813039"
  },
  {
    "text": "more all right so we've been talking kind of generally about all these things so let's dive in a little bit into how",
    "start": "1813039",
    "end": "1820279"
  },
  {
    "text": "this stuff looks in angular and you know these are concerns you're going to run into with any single",
    "start": "1820279",
    "end": "1826679"
  },
  {
    "start": "1824000",
    "end": "1824000"
  },
  {
    "text": "page application which is how do I know if the user is logged in how do I know if they can access a particular View and",
    "start": "1826679",
    "end": "1834080"
  },
  {
    "text": "how do I know once all that a has been revoked going to go through each one of",
    "start": "1834080",
    "end": "1840039"
  },
  {
    "text": "these so is the user logged in well we've used that HTTP only flag so that",
    "start": "1840039",
    "end": "1847039"
  },
  {
    "start": "1843000",
    "end": "1843000"
  },
  {
    "text": "JavaScript can't touch it so I can't look at cookies to know if I'm logged in alas this is the one like valid",
    "start": "1847039",
    "end": "1855440"
  },
  {
    "text": "argument for putting your tokens in local storage is that your your angular",
    "start": "1855440",
    "end": "1860559"
  },
  {
    "text": "application can look at them and be like aha there's tokens and they're not expired yet so on and so forth but is it",
    "start": "1860559",
    "end": "1867000"
  },
  {
    "text": "worth the tradeoff of cross- site scripting possibilities my answer is no but I'm also like security dude so the",
    "start": "1867000",
    "end": "1875679"
  },
  {
    "text": "there there's a trade-off there if you're going to go the route of using cookies what this inevitably means",
    "start": "1875679",
    "end": "1882279"
  },
  {
    "text": "is you need to put some kind of route on your server that the application will hit to get information about the current",
    "start": "1882279",
    "end": "1887960"
  },
  {
    "text": "user we call it slashme um I think that came from Facebook once upon a time does",
    "start": "1887960",
    "end": "1894639"
  },
  {
    "text": "Facebook still use a slme thing isn't it but yeah um so you know you're going to",
    "start": "1894639",
    "end": "1899840"
  },
  {
    "text": "have this async operation which is annoying I guess but in my opinion it's way more secure so how do you how do you",
    "start": "1899840",
    "end": "1907799"
  },
  {
    "text": "deal with the fact that like I need to like do this Asing thing before knowing if I I can even like render the",
    "start": "1907799",
    "end": "1914320"
  },
  {
    "text": "application to the user well both NG route and UI router provide a super",
    "start": "1914320",
    "end": "1920120"
  },
  {
    "text": "convenient way to do this this is a UI router example but they have this idea of resolves which is basically like on",
    "start": "1920120",
    "end": "1927440"
  },
  {
    "text": "the definition of the view route you can define a few promises that must be resolved before um things go forward and",
    "start": "1927440",
    "end": "1935639"
  },
  {
    "text": "the actual view transition happens so this is actually pretty straightforward you know you'll have some kind of a of",
    "start": "1935639",
    "end": "1942480"
  },
  {
    "text": "an authentication Service that'll have a get user method that's actually returning a promise it'll do the work of",
    "start": "1942480",
    "end": "1948679"
  },
  {
    "text": "like going round trip to that Mi route and then bringing back the user data there's also some other really cool",
    "start": "1948679",
    "end": "1954919"
  },
  {
    "text": "things that you can do you'll see these if you look at our angular SDK for our",
    "start": "1954919",
    "end": "1960080"
  },
  {
    "text": "product but we also maintain a user object on the root scope which is just",
    "start": "1960080",
    "end": "1965559"
  },
  {
    "text": "you know yeah I guess you're not supposed to touch Ro root scope but whatever like it works",
    "start": "1965559",
    "end": "1972480"
  },
  {
    "text": "so we maintain a user property there if it's null we don't know who the user is",
    "start": "1972480",
    "end": "1978240"
  },
  {
    "text": "yet so like the off service if nobody's called it yet for to get the user context or if it's currently waiting on",
    "start": "1978240",
    "end": "1985320"
  },
  {
    "text": "that me oute uh that this property is null as soon as the first time that",
    "start": "1985320",
    "end": "1990960"
  },
  {
    "text": "promise is resolved then we set the context if the user's not logged in we hit it to false otherwise we populate it",
    "start": "1990960",
    "end": "1997360"
  },
  {
    "text": "with the user's object data we also broadcast an authenticated event when",
    "start": "1997360",
    "end": "2002440"
  },
  {
    "text": "the user is known so between these three things like a promise that gets the current user an awesome root scope hack",
    "start": "2002440",
    "end": "2009639"
  },
  {
    "text": "and an authenticated event like it kind of covers all the bases of like you know",
    "start": "2009639",
    "end": "2016080"
  },
  {
    "text": "helping all those crazy components you're going to inter integrate like know like hey am I logged in or",
    "start": "2016080",
    "end": "2023559"
  },
  {
    "text": "not and if you need to deal with the case where the user is not logged in",
    "start": "2023600",
    "end": "2028919"
  },
  {
    "text": "when those resolves fail on those view definitions both libraries will fire an",
    "start": "2028919",
    "end": "2034960"
  },
  {
    "text": "event an error event um telling you like why why the view State couldn't be",
    "start": "2034960",
    "end": "2040399"
  },
  {
    "text": "resolved so your off service needs to just like give back some information like not logged in or whatever as the",
    "start": "2040399",
    "end": "2047279"
  },
  {
    "text": "the error properties on these events um again if you if you look at",
    "start": "2047279",
    "end": "2052760"
  },
  {
    "text": "the storm path angular SDK you can see a lot of this stuff in play okay so the authorization concern",
    "start": "2052760",
    "end": "2062320"
  },
  {
    "start": "2059000",
    "end": "2059000"
  },
  {
    "text": "you know can the user access this view well again there's another cool argument here for storing the token in local",
    "start": "2062320",
    "end": "2068919"
  },
  {
    "text": "storage cuz then we could inspect the scope and see like you know do they have scope XYZ to access this view so on and",
    "start": "2068919",
    "end": "2076320"
  },
  {
    "text": "so forth pretty cool but again like you know that's a trade-off you're making security wise otherwise you know the",
    "start": "2076320",
    "end": "2083398"
  },
  {
    "text": "information can just exist off the SL me route like you just return that representation of the user that has that",
    "start": "2083399",
    "end": "2089158"
  },
  {
    "text": "information [Music] question oh yeah so the question is like",
    "start": "2089159",
    "end": "2096000"
  },
  {
    "text": "you know if it's in local store it can be modified but the server can",
    "start": "2096000",
    "end": "2101359"
  },
  {
    "text": "still like verify the hash of the thing to make sure it wasn't modified yeah I mean those things are all true but as",
    "start": "2101359",
    "end": "2108800"
  },
  {
    "text": "soon as you start introducing that round trip to the server to verify it it's sort of like this there's been no point",
    "start": "2108800",
    "end": "2113960"
  },
  {
    "text": "in putting it in local storage anyways so it hasn't actually saved you that round trip to get to get the information",
    "start": "2113960",
    "end": "2119520"
  },
  {
    "text": "you need okay so an authorization example",
    "start": "2119520",
    "end": "2125240"
  },
  {
    "text": "again we're going to just like Leverage resolves here so you could chain if you need to",
    "start": "2125240",
    "end": "2130280"
  },
  {
    "text": "basically assert something about the user before you show a certain view just chain a promise onto your user getter",
    "start": "2130280",
    "end": "2137240"
  },
  {
    "text": "promise and then make some decision you know about like does the user have XYZ",
    "start": "2137240",
    "end": "2143359"
  },
  {
    "text": "properties if so that's how I'm going to deal with resolving or rejecting this user promise for this",
    "start": "2143359",
    "end": "2150760"
  },
  {
    "text": "view that's a duplicate sign okay and so the last concern you",
    "start": "2152000",
    "end": "2157440"
  },
  {
    "text": "know how do I know when this authentication contact has ended you know either because the",
    "start": "2157440",
    "end": "2163760"
  },
  {
    "text": "refresh token expired or it got revoked so because we're like using apis or",
    "start": "2163760",
    "end": "2169599"
  },
  {
    "text": "making XR attempts as soon you'll as soon as you see a 401 response from your API service that means the tokens have",
    "start": "2169599",
    "end": "2177079"
  },
  {
    "text": "been rejected for some reason so in this case you can just fire an unauthenticated event and then people",
    "start": "2177079",
    "end": "2182520"
  },
  {
    "text": "who need to like do things in your application based on that can respond to that and do something like redirect to",
    "start": "2182520",
    "end": "2188200"
  },
  {
    "text": "the login view this would be achieved by using an HTTP Interceptor in angular",
    "start": "2188200",
    "end": "2194079"
  },
  {
    "text": "pretty pretty straightforward stuff um by the way I learned something super interesting about HTTP",
    "start": "2194079",
    "end": "2200160"
  },
  {
    "text": "interceptors the other day if you implement all the like response and",
    "start": "2200160",
    "end": "2205200"
  },
  {
    "text": "request interfaces but forgot to but forget to pass along the promise that",
    "start": "2205200",
    "end": "2210240"
  },
  {
    "text": "comes in you can totally muck with other people who file interceptors after you so be careful about that",
    "start": "2210240",
    "end": "2219520"
  },
  {
    "text": "how do it you um no I didn't cover that specifically but the idea is the",
    "start": "2225680",
    "end": "2232000"
  },
  {
    "text": "response from the me route will essentially have the scope in it okay",
    "start": "2232000",
    "end": "2237040"
  },
  {
    "text": "so however you want yeah I mean at that point you're like going out of bands and",
    "start": "2237040",
    "end": "2242079"
  },
  {
    "text": "not of the token and not really using the token to know but it's like it's trying to navigate this trade-off of like do I actually want this thing",
    "start": "2242079",
    "end": "2248079"
  },
  {
    "text": "accessible by JavaScript or not so um I'm at 38 minutes which gives me",
    "start": "2248079",
    "end": "2256240"
  },
  {
    "text": "two minutes left um this is like serious business time no",
    "start": "2256240",
    "end": "2262520"
  },
  {
    "start": "2262000",
    "end": "2262000"
  },
  {
    "text": "there's like flow diagrams and there's no capat pictures um I'm actually going to blow through this xss stuff because",
    "start": "2262520",
    "end": "2272200"
  },
  {
    "text": "all your cookies belong to me now um and talk about csrf in the last two minutes",
    "start": "2272200",
    "end": "2278359"
  },
  {
    "text": "because this is a super annoying one that's easy to like not know about um it's basically exploiting the",
    "start": "2278359",
    "end": "2285640"
  },
  {
    "start": "2284000",
    "end": "2284000"
  },
  {
    "text": "fact that HTML tags don't follow the same origin policy so what does that mean well by example what it means is if",
    "start": "2285640",
    "end": "2293200"
  },
  {
    "text": "like your user is on some other site and that site's malicious and it puts an",
    "start": "2293200",
    "end": "2299520"
  },
  {
    "text": "image tag in here like this that's making a request to your",
    "start": "2299520",
    "end": "2305240"
  },
  {
    "text": "application that purely relies on you just like looking at the information in the cookies to authenticate the request",
    "start": "2305240",
    "end": "2312280"
  },
  {
    "text": "it's going to do this thing if you've actually got an API inpoint that takes parameters like this and just says hey",
    "start": "2312280",
    "end": "2319160"
  },
  {
    "text": "you've got a session cookie like cool you can do that well you know the browser is going to comply in the",
    "start": "2319160",
    "end": "2325359"
  },
  {
    "text": "situation says the request is going to mya. Chrome so I'm going to send along the cookies for my app.com and so your",
    "start": "2325359",
    "end": "2332359"
  },
  {
    "text": "server just going to like not even know that this request actually came from some other our website which is super",
    "start": "2332359",
    "end": "2340079"
  },
  {
    "text": "scary so how do you do how do you deal with this well if you look at the oos",
    "start": "2340079",
    "end": "2345400"
  },
  {
    "text": "security guides they're going to describe all these crazy things um the synchronizer token pattern is not really",
    "start": "2345400",
    "end": "2353040"
  },
  {
    "text": "useful for single page apps but the double submit cookie one is",
    "start": "2353040",
    "end": "2359040"
  },
  {
    "start": "2359000",
    "end": "2359000"
  },
  {
    "text": "so let's just look at this flow diagram this is the serious business time part so if you want to combat csrf when",
    "start": "2359040",
    "end": "2367079"
  },
  {
    "text": "you're setting a session cookie on the way down or access tokens refesh tokens whatever if you need to if you're using",
    "start": "2367079",
    "end": "2374040"
  },
  {
    "text": "cookies to store authentication information you need to do this which is you're actually going to set another",
    "start": "2374040",
    "end": "2379200"
  },
  {
    "text": "cookie with some random value in it and then your client in this case JavaScript",
    "start": "2379200",
    "end": "2385359"
  },
  {
    "text": "needs to do The Annoying Thing of creating this custom header when it makes requests to your server and",
    "start": "2385359",
    "end": "2390800"
  },
  {
    "text": "sending that same token in the request because attackers on other websites",
    "start": "2390800",
    "end": "2397440"
  },
  {
    "text": "won't be able to make to forge an attack using JavaScript cuz when you try to set",
    "start": "2397440",
    "end": "2403599"
  },
  {
    "text": "a custom header like this in JavaScript cross domain it's not going to work it's going to blow up the browser is going to",
    "start": "2403599",
    "end": "2409880"
  },
  {
    "text": "say no I'm actually not allowed to do that because I'm not allowed to talk to that domain so this is one way you can",
    "start": "2409880",
    "end": "2417119"
  },
  {
    "text": "trigger the browser to enforce that check is by setting this in the header so on the server side it's super simple",
    "start": "2417119",
    "end": "2423680"
  },
  {
    "text": "you just say like did I get the same value in a cookie and a header if so clearly this is coming from JavaScript",
    "start": "2423680",
    "end": "2430079"
  },
  {
    "text": "running on my domain um this kind of just examples how this",
    "start": "2430079",
    "end": "2436800"
  },
  {
    "text": "looks from the attacker's Viewpoint so if they try to use the same image tag you know the cookie will be sent along",
    "start": "2436800",
    "end": "2443760"
  },
  {
    "text": "the exsr of token cookie will be sent but this check is going to fail because it's not coming in as a header and",
    "start": "2443760",
    "end": "2451520"
  },
  {
    "text": "similarly if they've put some malicious JavaScript in the page and they try to set the header to try to achieve this",
    "start": "2451520",
    "end": "2457800"
  },
  {
    "text": "work around the browser is going to straight up just say no don't do that um there's a few other things that",
    "start": "2457800",
    "end": "2466119"
  },
  {
    "start": "2466000",
    "end": "2466000"
  },
  {
    "text": "you can check but they're kind of just like fallbacks for all that so um if you",
    "start": "2466119",
    "end": "2472800"
  },
  {
    "text": "got the slid share URL you can look at the rest of this ask me questions after but that's a lot of stuff thank you",
    "start": "2472800",
    "end": "2480319"
  },
  {
    "text": "don't let him have your cookies and if you don't want to deal with any of this just use storm path because I did it all for you so thanks",
    "start": "2480319",
    "end": "2490559"
  }
]