[
  {
    "start": "0",
    "end": "67000"
  },
  {
    "text": "if you're trying to figure out how to actually integrate AI improve your platform or make the dev experience better for your team then InfoC",
    "start": "880",
    "end": "7120"
  },
  {
    "text": "DevSummit Boston 2025 might be worth checking out it's 2 days in June focused on the real world side of adopting these",
    "start": "7120",
    "end": "13200"
  },
  {
    "text": "technologies you'll hear from senior engineers who've already been through it what worked what didn't and what they do",
    "start": "13200",
    "end": "18320"
  },
  {
    "text": "differently it's built for teams who want to move past being inspired and start taking action now join us this",
    "start": "18320",
    "end": "23920"
  },
  {
    "text": "June 9th and 10th learn more at devsummit.infoq.com",
    "start": "23920",
    "end": "28840"
  },
  {
    "text": "hello and welcome to another episode of the InfoQ podcast today I'm joined by Vlad Konov vlad is a software engineer",
    "start": "33200",
    "end": "40079"
  },
  {
    "text": "with extensive industry experience working for companies large and small in roles ranging from web master to chief",
    "start": "40079",
    "end": "46200"
  },
  {
    "text": "architect his core areas of expertise include software architecture distributed systems and domain driven",
    "start": "46200",
    "end": "51520"
  },
  {
    "text": "design he is a consultant trainer speaker and the author of learning domain driven design but today we're going to be talking about uh the ideas",
    "start": "51520",
    "end": "58000"
  },
  {
    "text": "in Vlad's latest book Balancing Coupling in Software Design vlad welcome to the InfoQ podcast hey Thomas thank you so",
    "start": "58000",
    "end": "65600"
  },
  {
    "text": "much for having me so uh the title of your book Balancing Coupling and I think a lot of architects",
    "start": "65600",
    "end": "71920"
  },
  {
    "start": "67000",
    "end": "215000"
  },
  {
    "text": "and engineers are familiar with the idea of wanting low coupling we want to have our systems loosely coupled but as your",
    "start": "71920",
    "end": "78880"
  },
  {
    "text": "book points out that's really an oversimplification that we don't want to have no coupling we need to have a",
    "start": "78880",
    "end": "85600"
  },
  {
    "text": "balanced coupling so can you explain why that's an oversimplified idea to say we",
    "start": "85600",
    "end": "90720"
  },
  {
    "text": "just want loose coupling everywhere yeah so by the way loose coupling is okay what I'm really afraid",
    "start": "90720",
    "end": "97600"
  },
  {
    "text": "of is people saying let's decouple things let's have completely independent",
    "start": "97600",
    "end": "102880"
  },
  {
    "text": "components in our system which is problematic because if you ask yourself",
    "start": "102880",
    "end": "108079"
  },
  {
    "text": "what is a system what makes a system then the answer is a system is a set of",
    "start": "108079",
    "end": "113439"
  },
  {
    "text": "components working together to achieve some overarching goal now in order to",
    "start": "113439",
    "end": "118719"
  },
  {
    "text": "achieve that goal it's not enough to have those components they have to work together those interactions is what",
    "start": "118719",
    "end": "125520"
  },
  {
    "text": "makes the value of that whole system greater than the sum of its components",
    "start": "125520",
    "end": "130800"
  },
  {
    "text": "sum of its parts and those interactions is what we usually call",
    "start": "130800",
    "end": "136640"
  },
  {
    "text": "coupling if you look look that word up in the dictionary coupled means connected so to make the system work we",
    "start": "136640",
    "end": "145040"
  },
  {
    "text": "need coupling now of course too much of a good thing is is going to be bad like we",
    "start": "145040",
    "end": "152959"
  },
  {
    "text": "need water any living organism that we know of on this planet needs water to survive however if you're going to drink",
    "start": "152959",
    "end": "160319"
  },
  {
    "text": "too much water well guess what's going to happen nothing good is is going to happen same with coupling you know we",
    "start": "160319",
    "end": "167599"
  },
  {
    "text": "cannot eliminate it because just as in the case of water you're not going to survive a system is not going to survive",
    "start": "167599",
    "end": "175280"
  },
  {
    "text": "so we need to find that just right amount of coupling that will make the",
    "start": "175280",
    "end": "181519"
  },
  {
    "text": "system alive that will allow it to achieve that overarching goal i like the",
    "start": "181519",
    "end": "187440"
  },
  {
    "text": "idea if we're if we add too much water maybe that's how we get to the big ball of mud that we have everything is",
    "start": "187440",
    "end": "192720"
  },
  {
    "text": "completely connected and we can't see where there should be good separations",
    "start": "192720",
    "end": "198400"
  },
  {
    "text": "between those couples you can't see the modules that should be there that make the system um understandable and I know",
    "start": "198400",
    "end": "204640"
  },
  {
    "text": "that's part of it is uh we want to get to small enough modules that we can understand and work with and evolve over",
    "start": "204640",
    "end": "211040"
  },
  {
    "text": "time without having to handle the entire big mall of mud if you will so that",
    "start": "211040",
    "end": "216799"
  },
  {
    "start": "215000",
    "end": "443000"
  },
  {
    "text": "coupling itself that's not the problem the the problem really is the complexity",
    "start": "216799",
    "end": "222239"
  },
  {
    "text": "um and I think people sometimes correlate the two that if I have a highly coupled system that",
    "start": "222239",
    "end": "228480"
  },
  {
    "text": "everything's talking to each other that's that's causing the complexity can you can you distinguish where coupling",
    "start": "228480",
    "end": "235200"
  },
  {
    "text": "and complexity are not always the same thing one isn't always the bad yeah",
    "start": "235200",
    "end": "240959"
  },
  {
    "text": "that's a great point and the thing is when we when we are designing the",
    "start": "240959",
    "end": "247920"
  },
  {
    "text": "system we need to find that just right amount of coupling to make it work and if you go overboard as you said we'll",
    "start": "247920",
    "end": "254879"
  },
  {
    "text": "end up with that monster that we usually call big ball of mud and that pretty",
    "start": "254879",
    "end": "260479"
  },
  {
    "text": "much describes what we are afraid of complexity i guess anyone with few years",
    "start": "260479",
    "end": "268560"
  },
  {
    "text": "of experience in software engineering has that experience of working on a big wall of math project that maybe it works",
    "start": "268560",
    "end": "276560"
  },
  {
    "text": "but nobody has the courage to to modify it because you don't know what's going",
    "start": "276560",
    "end": "281759"
  },
  {
    "text": "to happen following that change whether it's going to break now or it's going to",
    "start": "281759",
    "end": "288199"
  },
  {
    "text": "break a week later after it was deployed to production and what is going to break",
    "start": "288199",
    "end": "294320"
  },
  {
    "text": "and That's that relationship between an action and its outcome is my preferred",
    "start": "294320",
    "end": "301919"
  },
  {
    "text": "way of describing complexity if you're working on a system and you want to do",
    "start": "301919",
    "end": "307280"
  },
  {
    "text": "something and you know exactly what's going to happen that's not complexity if you can ask someone and some other",
    "start": "307280",
    "end": "314720"
  },
  {
    "text": "external expert knows what's going to happen that's not complexity either however if the only way to find out an",
    "start": "314720",
    "end": "323600"
  },
  {
    "text": "the outcome of the thing you want to do is to do it and then observe what",
    "start": "323600",
    "end": "329800"
  },
  {
    "text": "happens then you're dealing with a system and the that is complex and that",
    "start": "329800",
    "end": "336880"
  },
  {
    "text": "means that the design of that system makes those interactions much harder than we as",
    "start": "336880",
    "end": "345360"
  },
  {
    "text": "people can fathom we have our cognitive limits our cognitive abilities if you",
    "start": "345360",
    "end": "350800"
  },
  {
    "text": "look at studies they are not looking good by the way",
    "start": "350800",
    "end": "356039"
  },
  {
    "text": "and it means that the design of that system exceeds our cognitive abilities",
    "start": "356039",
    "end": "362960"
  },
  {
    "text": "it's hard for us to understand what's going on there of course it has something to do with",
    "start": "362960",
    "end": "368360"
  },
  {
    "text": "coupling however it's not because of coupling but because of misdesigned",
    "start": "368360",
    "end": "374000"
  },
  {
    "text": "coupling yeah and then I think your book talks about the idea of sharing too much",
    "start": "374000",
    "end": "379440"
  },
  {
    "text": "knowledge that coupling is where knowledge is being transferred and so the idea of cognitive load being",
    "start": "379440",
    "end": "385199"
  },
  {
    "text": "exceeded the I have to under my the knowledge I have to have in order to troubleshoot this bug is I have to",
    "start": "385199",
    "end": "390800"
  },
  {
    "text": "understand everything well I can't understand everything and remember it all so I'm just going to try and",
    "start": "390800",
    "end": "396240"
  },
  {
    "text": "recreate it and in order for me to try and recreate it I have to have the full integration stack right i have to have",
    "start": "396240",
    "end": "402720"
  },
  {
    "text": "everything running be able to debug all the way through and the flip side of",
    "start": "402720",
    "end": "407840"
  },
  {
    "text": "that is somebody wants to be able to have that experience because they're they're used to having the big monolith",
    "start": "407840",
    "end": "413360"
  },
  {
    "text": "the big ball of mud they're like I don't understand it so I'm going to just see what happens once they're working in",
    "start": "413360",
    "end": "420000"
  },
  {
    "text": "microservices then they get to well I can't actually step through the code once I send the request to the other how",
    "start": "420000",
    "end": "425840"
  },
  {
    "text": "do I know what happens how do you help get people into that mindset of you're making it better but it's a it's a",
    "start": "425840",
    "end": "432960"
  },
  {
    "text": "different shift of the paradigm that you can't just run everything but the benefit is you don't have to know about",
    "start": "432960",
    "end": "438400"
  },
  {
    "text": "it once it you know goes past that boundary yeah and that's the thing about",
    "start": "438400",
    "end": "444720"
  },
  {
    "start": "443000",
    "end": "589000"
  },
  {
    "text": "coupling we we are way too used to oversimplify it as hey coupling is bad",
    "start": "444720",
    "end": "451759"
  },
  {
    "text": "let's eliminate all the coupling and that's how we get the modular software",
    "start": "451759",
    "end": "457080"
  },
  {
    "text": "systems however if you look what happens",
    "start": "457080",
    "end": "462319"
  },
  {
    "text": "when you connect any two components when you couple any two components in a",
    "start": "462319",
    "end": "467400"
  },
  {
    "text": "system what happens beneath the surf surface then you will see that coupling",
    "start": "467400",
    "end": "472880"
  },
  {
    "text": "is not that simple it's not unit dimension actually it manifests itself in three dimensions as you mentioned",
    "start": "472880",
    "end": "479840"
  },
  {
    "text": "first of all we have that knowledge sharing you have two components working together how are they going to work",
    "start": "479840",
    "end": "485720"
  },
  {
    "text": "together how are they going to communicate with each other how are they going to understand each other they need",
    "start": "485720",
    "end": "492000"
  },
  {
    "text": "to exchange to share that knowledge mhm then we have the dimension of distance",
    "start": "492000",
    "end": "500240"
  },
  {
    "text": "if you have two objects in the same file then the distance between the source code of the two objects is short however",
    "start": "500240",
    "end": "507759"
  },
  {
    "text": "if those two objects belong to different microservices then you have different code bases different projects different",
    "start": "507759",
    "end": "514320"
  },
  {
    "text": "repositories maybe even different teams suddenly the distance growth much bigger",
    "start": "514320",
    "end": "519680"
  },
  {
    "text": "why is that important well the longer the distance that is traveled by the",
    "start": "519680",
    "end": "524760"
  },
  {
    "text": "knowledge the sooner it will cause that cognitive overload and we'll say that",
    "start": "524760",
    "end": "532080"
  },
  {
    "text": "hey that's complexity we need to decouple things",
    "start": "532080",
    "end": "537600"
  },
  {
    "text": "so distance is a very important factor when designing coupling and the third",
    "start": "537600",
    "end": "544080"
  },
  {
    "text": "dimension is dimension of time of volatility because oh why do we care we",
    "start": "544080",
    "end": "550560"
  },
  {
    "text": "want to be able to change the system we wanted to change its components their",
    "start": "550560",
    "end": "555680"
  },
  {
    "text": "behavior maybe we will modify existing functionalities maybe we'll add new",
    "start": "555680",
    "end": "561240"
  },
  {
    "text": "ones for that we want to make sure that the coupling is just right however if",
    "start": "561240",
    "end": "567040"
  },
  {
    "text": "that is not going to happen maybe because the component is a part of a legacy system or maybe the business is",
    "start": "567040",
    "end": "574399"
  },
  {
    "text": "not interested in investing any effort in that specific area then the effect of",
    "start": "574399",
    "end": "581920"
  },
  {
    "text": "coupling is going to be much lower so we better prioritize our efforts on other",
    "start": "581920",
    "end": "587519"
  },
  {
    "text": "parts with higher volatilities so let's I want to talk about that that distance part uh first i think that's a um a new",
    "start": "587519",
    "end": "595040"
  },
  {
    "start": "589000",
    "end": "784000"
  },
  {
    "text": "way of thinking of stuff the problem because I think we can relate to I'm going to separate this into",
    "start": "595040",
    "end": "600720"
  },
  {
    "text": "microservices and that'll that'll solve my problem and um if you go back to the",
    "start": "600720",
    "end": "606480"
  },
  {
    "text": "combination of how much knowledge is being shared and how far away it is well",
    "start": "606480",
    "end": "611920"
  },
  {
    "text": "if I have all the code and my monolith then the distance between the code is",
    "start": "611920",
    "end": "617120"
  },
  {
    "text": "pretty low right like I can I can change all the code all at once but that also",
    "start": "617120",
    "end": "622959"
  },
  {
    "text": "leads to a lot of complexity because I might not be able to easily see what code I need to change because there's",
    "start": "622959",
    "end": "628320"
  },
  {
    "text": "too much of it now if I take it into the the microservices approach I can say I only need to change this there's only so",
    "start": "628320",
    "end": "635040"
  },
  {
    "text": "much code to look at i can understand it but if I say if I make a change here I",
    "start": "635040",
    "end": "641440"
  },
  {
    "text": "also need to make a change in this upstream or downstream service that they have to know that I'm making the change",
    "start": "641440",
    "end": "646800"
  },
  {
    "text": "then you're saying that that's where the knowledge comes in the knowledge being shared is tightly coupled is that a good",
    "start": "646800",
    "end": "654079"
  },
  {
    "text": "explanation of what you're trying to say yeah yeah that's where complexity gets",
    "start": "654079",
    "end": "659480"
  },
  {
    "text": "complex we have essentially we have two types of complexities when working on any system first let's say that you are",
    "start": "659480",
    "end": "667360"
  },
  {
    "text": "working on one of one of its components and it is a small big ball of mud let's",
    "start": "667360",
    "end": "674320"
  },
  {
    "text": "call it a small ball of mud then it would be we could say that the",
    "start": "674320",
    "end": "679920"
  },
  {
    "text": "local complexity of that component is high we don't understand how it works and if you want to change something we",
    "start": "679920",
    "end": "685760"
  },
  {
    "text": "don't know what's going to happen now there is another type of complexity and that's global complexity and this one is",
    "start": "685760",
    "end": "692720"
  },
  {
    "text": "about the interactions on a higher level of abstraction say we have our component and other",
    "start": "692720",
    "end": "699440"
  },
  {
    "text": "components on of that system and they're integrated in a way that makes it hard",
    "start": "699440",
    "end": "704880"
  },
  {
    "text": "to predict how change in one of the components is going to be whether it's going to require",
    "start": "704880",
    "end": "712800"
  },
  {
    "text": "simultaneous changes in other components so that's global",
    "start": "712800",
    "end": "718200"
  },
  {
    "text": "complexity the difference between the two as you mentioned is distance and way",
    "start": "718200",
    "end": "724320"
  },
  {
    "text": "back when the microservices hype just started people wanted to decouple things",
    "start": "724320",
    "end": "730519"
  },
  {
    "text": "by increasing the distance because previously we had all the knowledge",
    "start": "730519",
    "end": "735680"
  },
  {
    "text": "concentrated in a monolith let's call it the old school monolith everything in",
    "start": "735680",
    "end": "742079"
  },
  {
    "text": "one physical boundary now back then decoupling involve",
    "start": "742079",
    "end": "749360"
  },
  {
    "text": "extracting functionalities into microservices so we increased the distance",
    "start": "749360",
    "end": "755720"
  },
  {
    "text": "however way too many projects focused just on that on increasing the distance",
    "start": "755720",
    "end": "762560"
  },
  {
    "text": "not they were not focused enough on hey what is that knowledge that is going to",
    "start": "762560",
    "end": "768399"
  },
  {
    "text": "travel that increased distance and that's how many companies ended up",
    "start": "768399",
    "end": "774720"
  },
  {
    "text": "transforming their old school monolith in new shiny distributed monies so they",
    "start": "774720",
    "end": "780320"
  },
  {
    "text": "kind of traded local complexity into global complexity and that only becomes",
    "start": "780320",
    "end": "785519"
  },
  {
    "start": "784000",
    "end": "982000"
  },
  {
    "text": "a problem when that third element that third dimension of volatility re raises its head because as long as those two",
    "start": "785519",
    "end": "792240"
  },
  {
    "text": "things don't change the fact that they share knowledge over a long distance",
    "start": "792240",
    "end": "798160"
  },
  {
    "text": "shouldn't matter but if one of those has to make a change and it has to affect",
    "start": "798160",
    "end": "803360"
  },
  {
    "text": "the other one now you've got the distributed ball of mud problem that everything in two different services",
    "start": "803360",
    "end": "809760"
  },
  {
    "text": "have to change you actually made the problem worse by going to microservices so that's where all all",
    "start": "809760",
    "end": "815920"
  },
  {
    "text": "three factors have to be con considered correct yeah exactly and that's that's",
    "start": "815920",
    "end": "821279"
  },
  {
    "text": "funny because all those companies that tried doing that of course they didn't",
    "start": "821279",
    "end": "828399"
  },
  {
    "text": "decompose their whole systems on the first very first day of that microser endeavor now they start with a small",
    "start": "828399",
    "end": "835920"
  },
  {
    "text": "proof concept and that proof concept was successful so so they said \"Hey let's go",
    "start": "835920",
    "end": "842480"
  },
  {
    "text": "on let's proceed and apply the same um the the",
    "start": "842480",
    "end": "848839"
  },
  {
    "text": "same decomposition logic everywhere else now the difference is that",
    "start": "848839",
    "end": "855160"
  },
  {
    "text": "P is usually done on something that is not business critical its volatility is",
    "start": "855160",
    "end": "860959"
  },
  {
    "text": "low so you are kind of safe introducing",
    "start": "860959",
    "end": "866240"
  },
  {
    "text": "complexity there so the mistake was taking those less business critical",
    "start": "866240",
    "end": "874399"
  },
  {
    "text": "components extracting them and thinking that they will achieve the same result",
    "start": "874399",
    "end": "879760"
  },
  {
    "text": "with other components of the system and of course there once you stepped into that distributed big ball of mud area",
    "start": "879760",
    "end": "887800"
  },
  {
    "text": "well suddenly a microservices became evil and people started praising monish",
    "start": "887800",
    "end": "895600"
  },
  {
    "text": "right right it's the we didn't understand what we were doing we didn't understand why we were trying to accomplish it we thought the problem was",
    "start": "895600",
    "end": "902399"
  },
  {
    "text": "everything's too close we'll solve it by just moving it apart but if you don't factor in the you know how is the",
    "start": "902399",
    "end": "909680"
  },
  {
    "text": "knowledge changing how is the volatility affected because yeah that that first one might work because you have I can it",
    "start": "909680",
    "end": "917920"
  },
  {
    "text": "doesn't matter if they're close to close together in one monolith or separate if",
    "start": "917920",
    "end": "923360"
  },
  {
    "text": "there's no volatility things aren't changing doesn't matter where it lives but once you get to this is something",
    "start": "923360",
    "end": "929920"
  },
  {
    "text": "that we're going to be making changes to really quickly because that was the other thing that people said if we go to",
    "start": "929920",
    "end": "934959"
  },
  {
    "text": "microservices we can make changes really quickly yeah yeah and then they maybe make even more changes faster but they",
    "start": "934959",
    "end": "940720"
  },
  {
    "text": "run into all these issues that separate teams in separate modules and separate microservices are trying to change",
    "start": "940720",
    "end": "946639"
  },
  {
    "text": "things all at once and then they lead back to we have to still have all this communication or we have this major",
    "start": "946639",
    "end": "951920"
  },
  {
    "text": "integration step that just you weren't ready for it because you did the thing wrong when you make the move to",
    "start": "951920",
    "end": "958079"
  },
  {
    "text": "microservices you have to consider all three factors what is changing and if I",
    "start": "958079",
    "end": "963120"
  },
  {
    "text": "know it's going to change what do I do differently then how do I because",
    "start": "963120",
    "end": "968560"
  },
  {
    "text": "obviously we still want to break those things up but how do I say this is going to be a a volatile module it's going to",
    "start": "968560",
    "end": "975440"
  },
  {
    "text": "have you know core business it's going to be evolving what's the solution then because I want to be able to change it",
    "start": "975440",
    "end": "983639"
  },
  {
    "start": "982000",
    "end": "1150000"
  },
  {
    "text": "mhm yeah yep that dimension of space distance is very tricky and what makes",
    "start": "983639",
    "end": "991440"
  },
  {
    "text": "it even trickier is that it has let's call it subd dimensions so first we have that",
    "start": "991440",
    "end": "999120"
  },
  {
    "text": "physical distance between source codes the greater that distance gets the",
    "start": "999120",
    "end": "1007279"
  },
  {
    "text": "harder it is going to be to modify the two components simultaneously so that's one",
    "start": "1007279",
    "end": "1014839"
  },
  {
    "text": "thing we have another force that works in the opposing direction and that's",
    "start": "1014839",
    "end": "1020480"
  },
  {
    "text": "life cycle coupling the closer things are the more related there their life",
    "start": "1020480",
    "end": "1026400"
  },
  {
    "text": "cycles so they will be developed tested deployed together if you have components",
    "start": "1026400",
    "end": "1032558"
  },
  {
    "text": "implemented in the same physical boundary for example as you go toward the other end then you're reducing those",
    "start": "1032559",
    "end": "1040079"
  },
  {
    "text": "life cycle dependencies and then we have social technical factors",
    "start": "1040079",
    "end": "1048439"
  },
  {
    "text": "mhm like those two components are implemented by the same team or do we do",
    "start": "1048440",
    "end": "1054799"
  },
  {
    "text": "we have to coordinate the change with multiple teams and suddenly the distance",
    "start": "1054799",
    "end": "1059919"
  },
  {
    "text": "can go grow even larger and the life cycle life cycle coupling will be",
    "start": "1059919",
    "end": "1065919"
  },
  {
    "text": "reduced even further so distance is super important but as you mentioned",
    "start": "1065919",
    "end": "1072720"
  },
  {
    "text": "what makes it all let's call it painful is that",
    "start": "1072720",
    "end": "1077840"
  },
  {
    "text": "knowledge that is going to travel that distance right so if I know that this thing is",
    "start": "1077840",
    "end": "1084480"
  },
  {
    "text": "going to be changing in some ways those changes affect the knowledge that is",
    "start": "1084480",
    "end": "1089679"
  },
  {
    "text": "being shared right if I'm adding new features and functionality that means there's more knowledge in this module",
    "start": "1089679",
    "end": "1095760"
  },
  {
    "text": "and if I have to communicate those changes that's that's the challenge so",
    "start": "1095760",
    "end": "1101919"
  },
  {
    "text": "is the trade-off of I'm going to have more volatility in this module i have",
    "start": "1101919",
    "end": "1108520"
  },
  {
    "text": "to reduce the the knowledge that's being shared reduce that integration strength of how tightly those two things are",
    "start": "1108520",
    "end": "1114720"
  },
  {
    "text": "coupled um how do I is that a matter of defining good API boundaries for example",
    "start": "1114720",
    "end": "1121840"
  },
  {
    "text": "yeah so we have to manage that knowledge that we are sharing across the boundaries we",
    "start": "1121840",
    "end": "1128640"
  },
  {
    "text": "have to make it explicit now the thing about knowledge is as you said the more knowledge we are",
    "start": "1128640",
    "end": "1134720"
  },
  {
    "text": "sharing the more cascading changes will follow because the more knowledge we share the higher the chances that piece",
    "start": "1134720",
    "end": "1141919"
  },
  {
    "text": "of that shared knowledge will change and then we'll have to communicate that change to the other component to the",
    "start": "1141919",
    "end": "1147200"
  },
  {
    "text": "coupled component now how do we evaluate",
    "start": "1147200",
    "end": "1153640"
  },
  {
    "start": "1150000",
    "end": "1491000"
  },
  {
    "text": "knowledge what units should we use to measure knowledge that's tricky question it's",
    "start": "1153640",
    "end": "1162080"
  },
  {
    "text": "tricky and I'm not sure we have an answer for that however what we do have",
    "start": "1162080",
    "end": "1168919"
  },
  {
    "text": "is a methodology from 70s called structure design and in it there was a",
    "start": "1168919",
    "end": "1176320"
  },
  {
    "text": "model for measuring or for evaluating interdependencies between components of",
    "start": "1176320",
    "end": "1182160"
  },
  {
    "text": "a system called module couplet that model had six levels they were focused around the",
    "start": "1182160",
    "end": "1190559"
  },
  {
    "text": "needs of systems that were written in those days mhm",
    "start": "1190559",
    "end": "1196280"
  },
  {
    "text": "so but essentially these levels describe different types of knowledge that can be",
    "start": "1196280",
    "end": "1203440"
  },
  {
    "text": "exchanged across boundaries of components in my model in the balance coupling model I adapted module coupling",
    "start": "1203440",
    "end": "1212160"
  },
  {
    "text": "and change its name to integration strength i had to change its name because the levels of the model are",
    "start": "1212160",
    "end": "1220000"
  },
  {
    "text": "completely different because again they have to be accessible to people working on modern",
    "start": "1220000",
    "end": "1226919"
  },
  {
    "text": "systems i reduced the levels to four basic types of knowledge to make it",
    "start": "1226919",
    "end": "1233440"
  },
  {
    "text": "easier to remember them and if you need finer grain details then you can use a",
    "start": "1233440",
    "end": "1239440"
  },
  {
    "text": "different model from a different era called canence to measure the degrees of",
    "start": "1239440",
    "end": "1245280"
  },
  {
    "text": "those types of knowledge so the basic four types of knowledge are from highest to lowest first of all",
    "start": "1245280",
    "end": "1252480"
  },
  {
    "text": "is intrusive couple say you have a component with public",
    "start": "1252480",
    "end": "1257799"
  },
  {
    "text": "interface that should be used for integration however you say \"Okay that's fine i have",
    "start": "1257799",
    "end": "1265600"
  },
  {
    "text": "a better way i will go to your database directly pick whatever I need maybe modify it.\" In other words intrusive",
    "start": "1265600",
    "end": "1273280"
  },
  {
    "text": "coupling is all about using private interfaces for integration once you introduce that dependency on private",
    "start": "1273280",
    "end": "1280520"
  },
  {
    "text": "interfaces you're basically have a dependency on implementation details so any change can potentially break the",
    "start": "1280520",
    "end": "1287200"
  },
  {
    "text": "integration so with intrusive coupling you have to assume that all knowledge is shared right that's that's the classic",
    "start": "1287200",
    "end": "1293840"
  },
  {
    "text": "if you have a microser you own your own database and no one else is allowed to go there they have to go through this",
    "start": "1293840",
    "end": "1299280"
  },
  {
    "text": "boundary and I like that you're you're calling back to these are papers written in the you know 50 years ago and no one",
    "start": "1299280",
    "end": "1306320"
  },
  {
    "text": "was talking about microservices there no one was talking about having separate databases but it's still the same idea of I can structure this so that in order",
    "start": "1306320",
    "end": "1314559"
  },
  {
    "text": "for this to go through it has to go through this module That's why you know C++ evolved to have object-oriented",
    "start": "1314559",
    "end": "1320880"
  },
  {
    "text": "design to say I have you know this class and it has behavior and here's public and private data and that's what you're",
    "start": "1320880",
    "end": "1326640"
  },
  {
    "text": "talking about if if you can just get all the way through there's no point in having that public versus private",
    "start": "1326640",
    "end": "1332080"
  },
  {
    "text": "interface yeah yeah it's it's funny if you look",
    "start": "1332080",
    "end": "1337559"
  },
  {
    "text": "at one of the books from that period one that I particularly like it's",
    "start": "1337559",
    "end": "1342880"
  },
  {
    "text": "called composite structure design by Glenn for Myers and if you ignore the publishing",
    "start": "1342880",
    "end": "1350280"
  },
  {
    "text": "date it sounds like he is talking about the problems we're facing today right",
    "start": "1350280",
    "end": "1357600"
  },
  {
    "text": "it's crazy it's crazy yeah yeah so what was the what's the next level after that intrusive",
    "start": "1357600",
    "end": "1364640"
  },
  {
    "text": "coupling yeah so after intrusive coupling we have the functional coupling",
    "start": "1364640",
    "end": "1370159"
  },
  {
    "text": "and here we are sharing the knowledge of functional requirements we are shifting from how the component is implemented to",
    "start": "1370159",
    "end": "1378400"
  },
  {
    "text": "what that component implements what is that business functionality again that's quite high",
    "start": "1378400",
    "end": "1385679"
  },
  {
    "text": "amount of knowledge that is shared by this type because if you share that kind of",
    "start": "1385679",
    "end": "1391360"
  },
  {
    "text": "knowledge then probably any change in the business requirements is going to",
    "start": "1391360",
    "end": "1396880"
  },
  {
    "text": "affect both of the couple components so they will change together next we have",
    "start": "1396880",
    "end": "1402960"
  },
  {
    "text": "model coupling which means we have two components that are using the same model",
    "start": "1402960",
    "end": "1408159"
  },
  {
    "text": "of the business domain now DDD people will get it right",
    "start": "1408159",
    "end": "1415520"
  },
  {
    "text": "away but the idea is when we are developing a software system we cannot",
    "start": "1415799",
    "end": "1421679"
  },
  {
    "text": "encode all the knowledge about its business domain it's not possible if you are building a medical system you are",
    "start": "1421679",
    "end": "1427200"
  },
  {
    "text": "not going to become a doctor right instead what we are doing is we are building a model of that business domain",
    "start": "1427200",
    "end": "1434000"
  },
  {
    "text": "that focuses only on the areas that are relevant for this for that actual system",
    "start": "1434000",
    "end": "1440720"
  },
  {
    "text": "now once you have two components based on the same model then if you have an",
    "start": "1440720",
    "end": "1446559"
  },
  {
    "text": "insight into that business domain and you want to improve your model then guess what both of them will have to",
    "start": "1446559",
    "end": "1452880"
  },
  {
    "text": "change simultaneously so that's model coupling and the lowest level is contract",
    "start": "1452880",
    "end": "1460159"
  },
  {
    "text": "coupling here we have a integration contract you can think about it as a model of a model that",
    "start": "1460159",
    "end": "1468200"
  },
  {
    "text": "encapsulates all other types of knowledges it doesn't let any knowledge of the implementation model outside of",
    "start": "1468200",
    "end": "1475279"
  },
  {
    "text": "the boundary that means you can evolve it without affecting the integration",
    "start": "1475279",
    "end": "1480360"
  },
  {
    "text": "contract you're not letting any knowledge of functional requirements cross the boundaries and of course",
    "start": "1480360",
    "end": "1486480"
  },
  {
    "text": "you're you want to protect your implementation details",
    "start": "1486480",
    "end": "1491760"
  },
  {
    "start": "1491000",
    "end": "1681000"
  },
  {
    "text": "right so I just to echo that back if you're talking about I'm going to have um you said DDD people will get this",
    "start": "1491760",
    "end": "1498799"
  },
  {
    "text": "right away if I have uh an an invoice coming in that I want to pay maybe I have a you know you know expense",
    "start": "1498799",
    "end": "1506240"
  },
  {
    "text": "management system where somebody says \"Here's a new thing to pay i'm going to submit it to the expense management",
    "start": "1506240",
    "end": "1512000"
  },
  {
    "text": "system.\" And it has to go through an approval process to say \"Yes it's approved.\" Then all the way at the end we have our accounts",
    "start": "1512000",
    "end": "1518279"
  },
  {
    "text": "payable for person who's going to log in and say oh I need to go pay this invoice I have to pay the vendor right there's",
    "start": "1518279",
    "end": "1524559"
  },
  {
    "text": "there's an invoice that flows all the way through the system but if you say I need to know the how is it going to get",
    "start": "1524559",
    "end": "1530880"
  },
  {
    "text": "paid at the end all the accounting details up front it's tightly coupled if",
    "start": "1530880",
    "end": "1537039"
  },
  {
    "text": "you think about it from who's doing the work you might have an you know the invoice request that starts in expense",
    "start": "1537039",
    "end": "1543039"
  },
  {
    "text": "management and then the the paid invoice and those ideas of I have one model but",
    "start": "1543039",
    "end": "1548799"
  },
  {
    "text": "it can that the words sound the same but ubiquitous language says in this domain",
    "start": "1548799",
    "end": "1554960"
  },
  {
    "text": "that's what this means um and I I work on accounting systems so the invoice",
    "start": "1554960",
    "end": "1560400"
  },
  {
    "text": "whether you're an accounts payable or accounts receivable we both have invoices but they're exactly the opposite am I going to pay someone or is",
    "start": "1560400",
    "end": "1566720"
  },
  {
    "text": "someone going to pay me and so ubiquous language helps us reduce the cognitive",
    "start": "1566720",
    "end": "1572720"
  },
  {
    "text": "load because I know in this space I'm only talking about this part of the workflow because it's satisfying this",
    "start": "1572720",
    "end": "1578480"
  },
  {
    "text": "person this role they're doing their job and so that's going to the levels of",
    "start": "1578480",
    "end": "1583600"
  },
  {
    "text": "coupling you're talking about the contract coupling says I'm going to hand off from here to the next to the next",
    "start": "1583600",
    "end": "1589919"
  },
  {
    "text": "and I don't have to know what's going to happen a week from now with this because once it leaves my boundary I'm done with",
    "start": "1589919",
    "end": "1596400"
  },
  {
    "text": "it and the intrusive coupling is they're all editing the same database record and",
    "start": "1596400",
    "end": "1602000"
  },
  {
    "text": "everybody knows about all the details and somewhere above that is I have to know that there's this next workflow of",
    "start": "1602000",
    "end": "1608960"
  },
  {
    "text": "pay the invoice versus submit the invoice and everybody knows about those things is that a good example of how to",
    "start": "1608960",
    "end": "1615919"
  },
  {
    "text": "see those different layers in there yeah absolutely absolutely and there are so",
    "start": "1615919",
    "end": "1622080"
  },
  {
    "text": "many creative ways to introduce intrusive coupling there are such interesting death stunts",
    "start": "1622080",
    "end": "1630159"
  },
  {
    "text": "we can pull mhm for example maybe you're you introducing not a dependency",
    "start": "1630159",
    "end": "1637520"
  },
  {
    "text": "but you rely on some undocumented behavior right that's intrusive coupling",
    "start": "1637520",
    "end": "1644720"
  },
  {
    "text": "maybe you you're working in let's say an object- oriented codebase and a",
    "start": "1644720",
    "end": "1652240"
  },
  {
    "text": "component that you are interacting with returns you an array or a list of",
    "start": "1652240",
    "end": "1658679"
  },
  {
    "text": "objects and then you can go ahead and modify it and because it's reference type it's going to affect the internals",
    "start": "1658679",
    "end": "1665279"
  },
  {
    "text": "of that component so so that's another creative example of intrusive coupling",
    "start": "1665279",
    "end": "1671520"
  },
  {
    "text": "by the way a reader of the book sent it to me and I was like \"Oh why haven't I",
    "start": "1671520",
    "end": "1677520"
  },
  {
    "text": "thought about it when I was writing the book it's such great example.\" Yeah well I think what you're describing is the",
    "start": "1677520",
    "end": "1684320"
  },
  {
    "start": "1681000",
    "end": "1759000"
  },
  {
    "text": "that's the difference between the local and the global complexity right like I can we think about these as",
    "start": "1684320",
    "end": "1690799"
  },
  {
    "text": "microservices i'm going to separate big modules out but the same problems occur within our codebase because even if",
    "start": "1690799",
    "end": "1697279"
  },
  {
    "text": "you're working in a monolith you can structure this is where people talk about modular monolith you can set up",
    "start": "1697279",
    "end": "1702480"
  },
  {
    "text": "your code so even if it's stored in one repository you can make it easier to",
    "start": "1702480",
    "end": "1707520"
  },
  {
    "text": "understand and that gets to this class doesn't have to know about you know the 900 other classes that are in the",
    "start": "1707520",
    "end": "1713600"
  },
  {
    "text": "project i only know about the 10 that are close to me yeah exactly yeah and by",
    "start": "1713600",
    "end": "1720000"
  },
  {
    "text": "the way it brings us back to the topic of complexity or rather the opposite of",
    "start": "1720000",
    "end": "1725320"
  },
  {
    "text": "complexity so if complexity is if we're going to define it as the relationship",
    "start": "1725320",
    "end": "1731120"
  },
  {
    "text": "between an action and its outcome then modularity is the opposite it's very",
    "start": "1731120",
    "end": "1736640"
  },
  {
    "text": "strong relationship between an action and its outcome so if we want to design",
    "start": "1736640",
    "end": "1742320"
  },
  {
    "text": "a modular system we want to be able to know what we have to change that's one",
    "start": "1742320",
    "end": "1748880"
  },
  {
    "text": "thing and the second thing is once we make the change what's going to happen",
    "start": "1748880",
    "end": "1754240"
  },
  {
    "text": "that's that I would say is the idea of modularity now how can we",
    "start": "1754240",
    "end": "1760159"
  },
  {
    "start": "1759000",
    "end": "1905000"
  },
  {
    "text": "do it how can we achieve what you described let's say that you have a monolith that can be a big ball of mud",
    "start": "1760159",
    "end": "1767760"
  },
  {
    "text": "but it also can be a modular monolith the thing is ideas are the core",
    "start": "1767760",
    "end": "1773919"
  },
  {
    "text": "ideas are the same you can increase the distance you don't have to step away to",
    "start": "1773919",
    "end": "1779760"
  },
  {
    "text": "step across its physical bound you can introduce this distance in form of modules within that monolith you can put",
    "start": "1779760",
    "end": "1788159"
  },
  {
    "text": "related things together because if you let's say you have one boundary with",
    "start": "1788159",
    "end": "1794080"
  },
  {
    "text": "lots of unrelated things and how can we define unrelated",
    "start": "1794080",
    "end": "1799200"
  },
  {
    "text": "things things that are not sharing knowledge between them so if they are located close to",
    "start": "1799200",
    "end": "1805440"
  },
  {
    "text": "each other then it will increase the cognitive load to find what we have to change there right so we can reduce the",
    "start": "1805440",
    "end": "1814320"
  },
  {
    "text": "cognitive load by grouping related things those components that have to share a knowledge in logical groups",
    "start": "1814320",
    "end": "1822399"
  },
  {
    "text": "logical modules and that's how we can achieve modular monies which is by the",
    "start": "1822399",
    "end": "1828240"
  },
  {
    "text": "way in my opinion the first step towards decomposing the system into microservices because it's way easier to",
    "start": "1828240",
    "end": "1836320"
  },
  {
    "text": "fix a mistake once you are in the same physical boundary right you're you're keeping the distance a little bit closer",
    "start": "1836320",
    "end": "1843200"
  },
  {
    "text": "you're separating it logically into separate name spaces different directory structures but you're not making a",
    "start": "1843200",
    "end": "1850399"
  },
  {
    "text": "network call right that that's definitely increasing the distance you're not necessarily handing over to",
    "start": "1850399",
    "end": "1856240"
  },
  {
    "text": "another team you might be but maybe it is still the same team just saying \"Hey I want to be able to think about this part this problem right now and I want",
    "start": "1856240",
    "end": "1862559"
  },
  {
    "text": "to think about I don't want to have to think about these other problems and so let me just split the code.\" But that",
    "start": "1862559",
    "end": "1868880"
  },
  {
    "text": "causes you as an architect designing this to say \"What makes sense what do I",
    "start": "1868880",
    "end": "1874960"
  },
  {
    "text": "move around where am I having the problem understanding it?\" Because there's too much going on there's too much local complexity and let's look for",
    "start": "1874960",
    "end": "1882399"
  },
  {
    "text": "that and figure out how do I increase the distance a little bit so that the",
    "start": "1882399",
    "end": "1887840"
  },
  {
    "text": "knowledge that's being shared stays within the things that are close and you start looking for you know have I",
    "start": "1887840",
    "end": "1894679"
  },
  {
    "text": "introduced distance while not reducing the knowledge right that's what you're trying to do to is have the knowledge",
    "start": "1894679",
    "end": "1900720"
  },
  {
    "text": "transfer go down that integration strength when you're adding distance right yeah yeah absolutely we always",
    "start": "1900720",
    "end": "1907919"
  },
  {
    "start": "1905000",
    "end": "2015000"
  },
  {
    "text": "want to reduce integration strength want to always minimize the knowledge but if",
    "start": "1907919",
    "end": "1914720"
  },
  {
    "text": "you're familiar with the business domain you kind of know that hey here I need to use the same model of the business",
    "start": "1914720",
    "end": "1920640"
  },
  {
    "text": "domain Here we have closely related business functionalities so not it doesn't matter",
    "start": "1920640",
    "end": "1926720"
  },
  {
    "text": "if you want to reduce it to the minimum you can't you have to remain on that level of let's say for example",
    "start": "1926720",
    "end": "1932640"
  },
  {
    "text": "functional coupling once you observe that level of knowledge being shared",
    "start": "1932640",
    "end": "1938000"
  },
  {
    "text": "then you have to take it into consideration and balance it with another dimension which is distance",
    "start": "1938000",
    "end": "1945039"
  },
  {
    "text": "don't spread those things apart because otherwise that's going to be cognitive",
    "start": "1945039",
    "end": "1950960"
  },
  {
    "text": "load and as a result complexity right and and again this is where the",
    "start": "1950960",
    "end": "1956240"
  },
  {
    "text": "volatility comes into place so if I'm focused on let's go from our big ball of",
    "start": "1956240",
    "end": "1961440"
  },
  {
    "text": "mud to having a more organized modular monolith then I can look at oh where where are we",
    "start": "1961440",
    "end": "1968960"
  },
  {
    "text": "seeing lots of changes where's the the business evolving a lot and where is it not and so I can now focus on if we're",
    "start": "1968960",
    "end": "1976559"
  },
  {
    "text": "going to pull one service out because let's say we actually have scaling needs we need to make sure that this part of",
    "start": "1976559",
    "end": "1982799"
  },
  {
    "text": "the system can grow up to 10 times the size but the rest of it we don't need to scale up as",
    "start": "1982799",
    "end": "1988360"
  },
  {
    "text": "big those types of things you can look at well what's volatile and then if you pull it out of that",
    "start": "1988360",
    "end": "1994440"
  },
  {
    "text": "monolith you say I'm adding the distance have I reduced the knowledge to the you",
    "start": "1994440",
    "end": "2000960"
  },
  {
    "text": "know a safer coupling level i haven't like kept that high integration strength that you still know about my my private",
    "start": "2000960",
    "end": "2008080"
  },
  {
    "text": "methods and how to call my database even though I pulled you out because you haven't actually done anything to solve",
    "start": "2008080",
    "end": "2013760"
  },
  {
    "text": "the the volatility problem right yeah and volatility initially that it sounds like",
    "start": "2013760",
    "end": "2020000"
  },
  {
    "start": "2015000",
    "end": "2173000"
  },
  {
    "text": "something simple like the simplest dimension of the three oh my god it's not it's tricky because to truly predict",
    "start": "2020000",
    "end": "2030000"
  },
  {
    "text": "the rate of changes in a component it's not enough to look at maybe your",
    "start": "2030000",
    "end": "2035440"
  },
  {
    "text": "experience or at the source code because there are things like we can differentiate between",
    "start": "2035440",
    "end": "2042640"
  },
  {
    "text": "essential volatility and accidental volatility or accidental involatility",
    "start": "2042640",
    "end": "2048158"
  },
  {
    "text": "accidental volatility can be because of or design of the system things are changing just because that's the way the",
    "start": "2048159",
    "end": "2054720"
  },
  {
    "text": "system is designed and accidental in",
    "start": "2054720",
    "end": "2060440"
  },
  {
    "text": "volatility is can happen let's say that you have an area of the system that the",
    "start": "2060440",
    "end": "2066720"
  },
  {
    "text": "business wants to optimize but it it is designed in such a way that people are",
    "start": "2066720",
    "end": "2073760"
  },
  {
    "text": "afraid to touch it right and the business is afraid to touch it to modify",
    "start": "2073760",
    "end": "2079358"
  },
  {
    "text": "it as well as a result so to truly truly evaluate volatility you have to",
    "start": "2079359",
    "end": "2084960"
  },
  {
    "text": "understand the business domain you have to analyze the business strategy what differentiates that system from its",
    "start": "2084960",
    "end": "2091599"
  },
  {
    "text": "competitors again the people are thinking about core subdomains right now",
    "start": "2091599",
    "end": "2097320"
  },
  {
    "text": "and and once you identify those areas the based on their strategic value to",
    "start": "2097320",
    "end": "2103839"
  },
  {
    "text": "the company then you can really start thinking about the volatility levels",
    "start": "2103839",
    "end": "2110560"
  },
  {
    "text": "desired by the business and and that's where you mentioned things happen internal and external so",
    "start": "2110560",
    "end": "2117119"
  },
  {
    "text": "the business might have we want to pursue this new business venture or this was an MVP and we want to it's this MVP",
    "start": "2117119",
    "end": "2124880"
  },
  {
    "text": "has taken off we want to make sure it's a a product we can sell to more people but we need to make changes to it so",
    "start": "2124880",
    "end": "2130720"
  },
  {
    "text": "there are business drivers that can change the code but there's also internal things like I just need to make",
    "start": "2130720",
    "end": "2136160"
  },
  {
    "text": "sure my code is on the latest version of whatever so that it's not sitting there getting obsolete and has hasn't gotten",
    "start": "2136160",
    "end": "2141839"
  },
  {
    "text": "security patches or whatever so some of those you you know the system's just going to evolve over time because you",
    "start": "2141839",
    "end": "2148800"
  },
  {
    "text": "need to keep even legacy code you need to keep up to date to some standards and then there's the no we want to make big",
    "start": "2148800",
    "end": "2154800"
  },
  {
    "text": "changes because the business is asking us to right so the the architect has to",
    "start": "2154800",
    "end": "2160400"
  },
  {
    "text": "factor in all of those things as well as I think you mentioned the sociotechnical aspects right who is going to do the",
    "start": "2160400",
    "end": "2166079"
  },
  {
    "text": "work all of this comes into play it's not always just one simple solution like",
    "start": "2166079",
    "end": "2171200"
  },
  {
    "text": "you can't just go to loose coupling Right yeah and it's complicated i'm not going to",
    "start": "2171200",
    "end": "2178480"
  },
  {
    "start": "2173000",
    "end": "2457000"
  },
  {
    "text": "say that it's complex but it's complicated but the good news is",
    "start": "2178480",
    "end": "2183960"
  },
  {
    "text": "that once you truly understand the dynamics of system design doesn't really matter what level of abstraction you're",
    "start": "2183960",
    "end": "2190560"
  },
  {
    "text": "working on the underlying rules are going to be the same whether it's a",
    "start": "2190560",
    "end": "2196480"
  },
  {
    "text": "methods within an object or microservices in a distributed system the underlying ideas are the same if you",
    "start": "2196480",
    "end": "2204520"
  },
  {
    "text": "have a large amount of knowledge being shared balance it by minimizing the",
    "start": "2204520",
    "end": "2211000"
  },
  {
    "text": "distance if you're not sharing much knowledge you can increase the distance so it's one of the two either knowledge",
    "start": "2211000",
    "end": "2218160"
  },
  {
    "text": "is high and the distance is low or vice versa distance is high but knowledge is",
    "start": "2218160",
    "end": "2225400"
  },
  {
    "text": "low or or things are not going to change which",
    "start": "2225400",
    "end": "2231359"
  },
  {
    "text": "is volatility is low which can balance those two all together right right so",
    "start": "2231359",
    "end": "2237359"
  },
  {
    "text": "that if you just looked at strength and distance like how much knowledge is being shared over too long like that",
    "start": "2237359",
    "end": "2243520"
  },
  {
    "text": "looks bad but if it's never going to change you don't care if it does change",
    "start": "2243520",
    "end": "2248800"
  },
  {
    "text": "then it's not balanced on the flip side if it's going to change a lot then you",
    "start": "2248800",
    "end": "2253839"
  },
  {
    "text": "need to think about the relationship between the integration strength and the distance so if there if there's not much",
    "start": "2253839",
    "end": "2261119"
  },
  {
    "text": "knowledge being shared over a long distance that's okay or if there's a lot of knowledge shared over a small",
    "start": "2261119",
    "end": "2267040"
  },
  {
    "text": "distance that's okay so you can have one or one but not both if things are changing but if things aren't changing",
    "start": "2267040",
    "end": "2272480"
  },
  {
    "text": "you don't care yeah and of course things are not changing today maybe something",
    "start": "2272480",
    "end": "2278320"
  },
  {
    "text": "is going to change on the business side tomorrow and you as an architect you have to be aware of that change and its",
    "start": "2278320",
    "end": "2284560"
  },
  {
    "text": "implications on the design the classical example here is I am integrating a",
    "start": "2284560",
    "end": "2290320"
  },
  {
    "text": "legacy system nobody is going to change it and I can just go ahead and grab",
    "start": "2290320",
    "end": "2295680"
  },
  {
    "text": "whatever I need from its database that's fine another classic example",
    "start": "2295680",
    "end": "2301880"
  },
  {
    "text": "is again DDD influence a some a functionality that is not business",
    "start": "2301880",
    "end": "2308480"
  },
  {
    "text": "critical but you have to implement it which is usually in DDD where a lexicon",
    "start": "2308480",
    "end": "2313760"
  },
  {
    "text": "is called a supporting subdomain usually there are going to be much less water than core subdomains however business",
    "start": "2313760",
    "end": "2320480"
  },
  {
    "text": "strategy might change and suddenly that core subdomain will evolve into a core one",
    "start": "2320480",
    "end": "2326760"
  },
  {
    "text": "suddenly there is that big strategy change that should be reflected in the",
    "start": "2326760",
    "end": "2332560"
  },
  {
    "text": "design of the system so it's three dimensions working together and whether",
    "start": "2332560",
    "end": "2339760"
  },
  {
    "text": "you will end up with modularity or complexity depends on how you're balancing those forces right and I think",
    "start": "2339760",
    "end": "2346960"
  },
  {
    "text": "you you got to the last point I wanted to get to is we can design this for today based on what we know but six",
    "start": "2346960",
    "end": "2353680"
  },
  {
    "text": "months six years from now those things might shift not because of things we can",
    "start": "2353680",
    "end": "2359119"
  },
  {
    "text": "predict right now um and you know if you if you try and design for that future state you're always going to make some",
    "start": "2359119",
    "end": "2365359"
  },
  {
    "text": "mistakes but you want to set yourself up for success so do the small things first",
    "start": "2365359",
    "end": "2371119"
  },
  {
    "text": "like if it is reorganize your code so it's a little easier to understand that seems like a benefit but don't jump to I",
    "start": "2371119",
    "end": "2378079"
  },
  {
    "text": "have to have all microservices and I liked how you talked about how this can be applied at the you know the system",
    "start": "2378079",
    "end": "2384480"
  },
  {
    "text": "level or the component level or the code level I I think you described this as like the fractal approach of no matter",
    "start": "2384480",
    "end": "2391040"
  },
  {
    "text": "how much you keep looking at it the same problem exists at all these different layers of the system so that that",
    "start": "2391040",
    "end": "2397280"
  },
  {
    "text": "coupling and balance is something you have to look at at different part parts of your system either inside a micros",
    "start": "2397280",
    "end": "2403680"
  },
  {
    "text": "service at the entire system level and what are you trying to solve for at different times right",
    "start": "2403680",
    "end": "2410560"
  },
  {
    "text": "yeah yeah and that's by the way why I'm saying that if you pick up a book from",
    "start": "2410560",
    "end": "2415760"
  },
  {
    "text": "70s like that book I mentioned composite structure design it looks way too",
    "start": "2415760",
    "end": "2421119"
  },
  {
    "text": "familiar the problems that they're facing there problems they're describing the solutions they're",
    "start": "2421119",
    "end": "2427520"
  },
  {
    "text": "applying are also going to be quite familiar once you step over those terms",
    "start": "2427520",
    "end": "2434240"
  },
  {
    "text": "that are used there because they're used from those terms are based on language like for cobalt h yeah you need some",
    "start": "2434240",
    "end": "2442320"
  },
  {
    "text": "time some cognitive effort to understand what they mean but but yeah the underlying ideas are the same",
    "start": "2442320",
    "end": "2449400"
  },
  {
    "text": "it's just a different level of abstraction that was popular back then",
    "start": "2449400",
    "end": "2454480"
  },
  {
    "text": "popular that's all they had back then so uh if if you want to follow follow up with you or um have want to learn more",
    "start": "2454480",
    "end": "2462160"
  },
  {
    "start": "2457000",
    "end": "2531000"
  },
  {
    "text": "about your balance coupling model um any recommendations of where they can go",
    "start": "2462160",
    "end": "2467400"
  },
  {
    "text": "next yeah so on social media aspect I'm the most",
    "start": "2467400",
    "end": "2474560"
  },
  {
    "text": "active on LinkedIn at the moment i have accounts on other social networks like",
    "start": "2474560",
    "end": "2480480"
  },
  {
    "text": "Blue Sky Twitter etc right now LinkedIn is my preferred network",
    "start": "2480480",
    "end": "2485960"
  },
  {
    "text": "um at the moment I'm working on a website called coupling.dev so if you're",
    "start": "2485960",
    "end": "2492160"
  },
  {
    "text": "listening to this I hope that it is already live and you can go go there",
    "start": "2492160",
    "end": "2498280"
  },
  {
    "text": "and and learn some stuff about coupling well um Vlad Konov I want to thank you",
    "start": "2498280",
    "end": "2503599"
  },
  {
    "text": "again for being on the InfoQ podcast thank you so much Thomas it's an honor and a pleasure being here and listeners",
    "start": "2503599",
    "end": "2510800"
  },
  {
    "text": "we hope you'll join us again soon for a future episode [Music]",
    "start": "2510800",
    "end": "2532300"
  }
]