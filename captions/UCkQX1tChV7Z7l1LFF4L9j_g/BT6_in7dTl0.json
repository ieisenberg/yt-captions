[
  {
    "start": "0",
    "end": "24000"
  },
  {
    "text": "[Music]",
    "start": "0",
    "end": "9040"
  },
  {
    "text": "so welcome to my talk my name is jel Mo and I working for Google currently I'm",
    "start": "9040",
    "end": "15759"
  },
  {
    "text": "on the Chrome GPU team for the past two and a half years I'm spending my most",
    "start": "15759",
    "end": "21480"
  },
  {
    "text": "efforts implementing webgl for Chrome so before I start I want to show",
    "start": "21480",
    "end": "26880"
  },
  {
    "start": "24000",
    "end": "125000"
  },
  {
    "text": "you some magic of what web gel can do in just simply a few",
    "start": "26880",
    "end": "33399"
  },
  {
    "text": "lines so can you see this is a very shiny teot in a 3D this is uh in web gel",
    "start": "39160",
    "end": "48960"
  },
  {
    "text": "so I want to make it a cartoon style and it only takes you three lines",
    "start": "48960",
    "end": "56440"
  },
  {
    "text": "to do that so this is this is the source code I already added",
    "start": "56440",
    "end": "63000"
  },
  {
    "text": "lines now I just need to un uncomment those",
    "start": "63000",
    "end": "69799"
  },
  {
    "text": "lines and",
    "start": "70520",
    "end": "73798"
  },
  {
    "text": "save see so this is Kone style only five lines and with original fixed pipeline",
    "start": "76960",
    "end": "84320"
  },
  {
    "text": "it takes way more effort to achieve that but with shaders that's what you can do",
    "start": "84320",
    "end": "90400"
  },
  {
    "text": "this is processing is per pixel and with this you can easily have all kind of",
    "start": "90400",
    "end": "96600"
  },
  {
    "text": "very fun very exciting or even weird effects on on your screen and that's",
    "start": "96600",
    "end": "103000"
  },
  {
    "text": "what web gel can offer with the current pipeline current design so I'll explain to you later what",
    "start": "103000",
    "end": "110280"
  },
  {
    "text": "those a few lines do but now let's start from the beginning",
    "start": "110280",
    "end": "116640"
  },
  {
    "text": "so feel free to interrupt me uh if you don't understand",
    "start": "119960",
    "end": "125560"
  },
  {
    "start": "125000",
    "end": "188000"
  },
  {
    "text": "anything so first I want to explain what is webel in a few words webel is",
    "start": "127039",
    "end": "133440"
  },
  {
    "text": "graphics 3D Graphics library for the web so it it's based on open G es 2.0",
    "start": "133440",
    "end": "141000"
  },
  {
    "text": "standard why is that because then we can run the same uh provide the same API on",
    "start": "141000",
    "end": "149080"
  },
  {
    "text": "desktop on laptop and also on mobile devices because openg GES 2.0 is widely",
    "start": "149080",
    "end": "156040"
  },
  {
    "text": "implemented in most mobile devices and this is a little bit",
    "start": "156040",
    "end": "161599"
  },
  {
    "text": "different from any other JavaScript uh standards because it's two",
    "start": "161599",
    "end": "167280"
  },
  {
    "text": "language it's combining of JavaScript interface and also shading language",
    "start": "167280",
    "end": "173480"
  },
  {
    "text": "which is the language for GPU but it's not as scary as as it",
    "start": "173480",
    "end": "180159"
  },
  {
    "text": "sounds I'll show you how shaders can be very simple and easy to understand and easy to",
    "start": "180159",
    "end": "187480"
  },
  {
    "start": "188000",
    "end": "245000"
  },
  {
    "text": "write so web Joel right now it's implemented in Firefox Chrome Opera and",
    "start": "189120",
    "end": "195720"
  },
  {
    "text": "it's also because uh Chrome and Safari share the web kit so it's also implementing in web",
    "start": "195720",
    "end": "202480"
  },
  {
    "text": "kit so in Safari if you turn on the switch then you also have webkit but",
    "start": "202480",
    "end": "207720"
  },
  {
    "text": "it's not on by default the only main browser that's not implementing web J is",
    "start": "207720",
    "end": "212920"
  },
  {
    "text": "Microsoft IE but again we have a solution for that if you install Google",
    "start": "212920",
    "end": "218360"
  },
  {
    "text": "Chrome Google uh Chrome frame which is uh a plugin for IE then you then the",
    "start": "218360",
    "end": "226000"
  },
  {
    "text": "browser where looks like IE but all the rendering is done by Chrome so then you can have all the cool features Chrome",
    "start": "226000",
    "end": "232480"
  },
  {
    "text": "provide including webgl so that's our solution",
    "start": "232480",
    "end": "237519"
  },
  {
    "text": "basically with this chrome chrome frame in place then our main browsers should",
    "start": "237519",
    "end": "243280"
  },
  {
    "text": "have web gel available but again because it's a",
    "start": "243280",
    "end": "248599"
  },
  {
    "text": "graphics Library so it also depends on your graphics Hardware if you have a really old GPU have tons of bugs in your",
    "start": "248599",
    "end": "256120"
  },
  {
    "text": "drivers then it's not it's not only unpleasant to run some graphics content",
    "start": "256120",
    "end": "264400"
  },
  {
    "text": "on it because what you see is not what you expect it can be literally like dark",
    "start": "264400",
    "end": "270080"
  },
  {
    "text": "triangles suddenly popping out of the geometry those kind of weird things but also it can be unsafe because there",
    "start": "270080",
    "end": "276639"
  },
  {
    "text": "might be security bugs in the driver so uh we Tred to work around many of those",
    "start": "276639",
    "end": "283280"
  },
  {
    "text": "but the some of them just not possible so what our solution is we Blacklist some really bad drivers and gpus and for",
    "start": "283280",
    "end": "291280"
  },
  {
    "text": "right now I just get this data yesterday for for today's talk and this is purely",
    "start": "291280",
    "end": "297600"
  },
  {
    "text": "I get the data from chrome but I assume uh Firefox should have uh about the same",
    "start": "297600",
    "end": "304080"
  },
  {
    "text": "U percentage so on Windows right now we have 68% of users that have web gel and",
    "start": "304080",
    "end": "312919"
  },
  {
    "text": "the rest 30% mostly uh they are XP users they have really old Hardware really old",
    "start": "312919",
    "end": "319880"
  },
  {
    "text": "driver for example like my dad and my mom you cannot expect them to update their Graphics drivers it's way too",
    "start": "319880",
    "end": "326479"
  },
  {
    "text": "complic complicated for them so they they basically they cannot have web gel",
    "start": "326479",
    "end": "332240"
  },
  {
    "text": "but again we provide another solution we provide a software renderer which is",
    "start": "332240",
    "end": "337360"
  },
  {
    "text": "called s Swift Shader so if your Hardware GPU driver is pretty bad but",
    "start": "337360",
    "end": "343880"
  },
  {
    "text": "then you can download this optional Swift swift Shader then you can have web gel only that the frame rate may not be",
    "start": "343880",
    "end": "350800"
  },
  {
    "text": "that great but for many applications they don't require a 60 frames per second frame rate then then then you can",
    "start": "350800",
    "end": "358240"
  },
  {
    "text": "still enjoy webgl on a really old uh computer with old gpus and on Mac we almost have our Max",
    "start": "358240",
    "end": "368000"
  },
  {
    "text": "and recently we have some regressions on Mac and the the 10.",
    "start": "368000",
    "end": "373919"
  },
  {
    "text": "7.3 they have many bugs in their drivers but we are working with apple try to",
    "start": "373919",
    "end": "379560"
  },
  {
    "text": "solve that quickly and uh but before basically on Mac you can safely run web",
    "start": "379560",
    "end": "384720"
  },
  {
    "text": "J no problem and on Linux we currently only have 34%",
    "start": "384720",
    "end": "390280"
  },
  {
    "text": "but we are working hardly with Nvidia with Intel and with uh AMD so um I think",
    "start": "390280",
    "end": "399880"
  },
  {
    "text": "there good drivs are all in line they are going to be released pretty soon and if you grab those uh new drivers then",
    "start": "399880",
    "end": "407120"
  },
  {
    "text": "you can have web gel so basically the good news is in I think just in a few",
    "start": "407120",
    "end": "413639"
  },
  {
    "text": "months like you can have like maybe 90% of the users of the whole web will have",
    "start": "413639",
    "end": "420120"
  },
  {
    "text": "web gel that's the good part so now I want to explain a little",
    "start": "420120",
    "end": "427080"
  },
  {
    "start": "422000",
    "end": "554000"
  },
  {
    "text": "bit about what is how GPU Works mobile",
    "start": "427080",
    "end": "432400"
  },
  {
    "text": "areed uh this data don't count mobile users because currently very few",
    "start": "432400",
    "end": "439919"
  },
  {
    "text": "browsers provide webel or web Joel is good enough on the mobile but uh that's",
    "start": "439919",
    "end": "445280"
  },
  {
    "text": "I think basically it's the hardware needs to catch in up",
    "start": "445280",
    "end": "450759"
  },
  {
    "text": "yeah Chrome then support web J at the moment on",
    "start": "451160",
    "end": "456319"
  },
  {
    "text": "mobile so this is what the general uh a very rough illustration of how the GP uh",
    "start": "461560",
    "end": "469759"
  },
  {
    "text": "pipeline Works basically you input data streams to basically there are two parts",
    "start": "469759",
    "end": "477759"
  },
  {
    "text": "one is the vertex Shader which which is basically processing data on a per vertex basis then fragment shoter is",
    "start": "477759",
    "end": "486159"
  },
  {
    "text": "processing the data on the per pixel basis so you input data into the vertex",
    "start": "486159",
    "end": "493360"
  },
  {
    "text": "shter those data is like like vertex properties like they uh coordinates the",
    "start": "493360",
    "end": "500599"
  },
  {
    "text": "the their uh normals their texture coordinates or their",
    "start": "500599",
    "end": "505680"
  },
  {
    "text": "colors those vertex attributes you input to the verx Shader then do some",
    "start": "505680",
    "end": "511240"
  },
  {
    "text": "computation then output something output some data those output will be the input",
    "start": "511240",
    "end": "517959"
  },
  {
    "text": "of the fragment Shader then fragment Shader will again processing those data",
    "start": "517959",
    "end": "523599"
  },
  {
    "text": "and what they will out output is the color for each pixel then you that's what you'll see on the screen and that's",
    "start": "523599",
    "end": "531279"
  },
  {
    "text": "how the GPU works and uh the vertex Shader and fragment Shader the one good",
    "start": "531279",
    "end": "537440"
  },
  {
    "text": "thing about them is they can they can run u in parallel pretty fast",
    "start": "537440",
    "end": "543040"
  },
  {
    "text": "so it can process like hundreds thousands tens of thousands even millions of vertex of pixels same at the",
    "start": "543040",
    "end": "551760"
  },
  {
    "text": "same time so that give you a high",
    "start": "551760",
    "end": "556040"
  },
  {
    "start": "554000",
    "end": "641000"
  },
  {
    "text": "performance so shaders what are shaders shaders are programs running on GPU so",
    "start": "557320",
    "end": "564839"
  },
  {
    "text": "usually we write programs that's running on CPU but shaders are program for GPU",
    "start": "564839",
    "end": "570839"
  },
  {
    "text": "and they're pretty small and they're stateless that means they they they run",
    "start": "570839",
    "end": "576560"
  },
  {
    "text": "for each pixel independent independent of each other and they don't save state so each one is",
    "start": "576560",
    "end": "583079"
  },
  {
    "text": "independent and then they have high degree of parallelism that's what makes the GPU a great",
    "start": "583079",
    "end": "590360"
  },
  {
    "text": "processor and vertex as I said vertex Shader applies to each vertex and fragment Shader applies to each pixel",
    "start": "590360",
    "end": "598160"
  },
  {
    "text": "because we know the output of vertex Shader is applied is the input of",
    "start": "598160",
    "end": "604079"
  },
  {
    "text": "fragment Shader so output of vertex Shader is per vertex and then then the GPU will",
    "start": "604079",
    "end": "611120"
  },
  {
    "text": "automatically figure out like a for a given pixel if if a fra fragment Shader",
    "start": "611120",
    "end": "617600"
  },
  {
    "text": "is running for one pixel then basically it will automatically figure out what",
    "start": "617600",
    "end": "623800"
  },
  {
    "text": "which vertex which vertices will affect this pixel basically this pixel pixel is",
    "start": "623800",
    "end": "629760"
  },
  {
    "text": "belong to which triangle then it will automatically do blending of all the output of the corresponding Vertes then",
    "start": "629760",
    "end": "638480"
  },
  {
    "text": "get the data then do some computation then we'll output the color of that",
    "start": "638480",
    "end": "644120"
  },
  {
    "start": "641000",
    "end": "664000"
  },
  {
    "text": "pixel so now I'm going to work you through a concrete example of uh a very",
    "start": "644760",
    "end": "652000"
  },
  {
    "text": "simple web gel example which will basically draw a color triangle on the",
    "start": "652000",
    "end": "657160"
  },
  {
    "text": "screen using web gel and uh this is the link for the for the original",
    "start": "657160",
    "end": "666320"
  },
  {
    "start": "664000",
    "end": "770000"
  },
  {
    "text": "demo so this is a very simple vertex Shader looks",
    "start": "669399",
    "end": "675440"
  },
  {
    "text": "like it's only a few lines so first this you can see it",
    "start": "675440",
    "end": "681519"
  },
  {
    "text": "starts with attribute and that means the those are the input string so they",
    "start": "681519",
    "end": "686800"
  },
  {
    "text": "basically this give you the attribute attributes of each vertex they can be",
    "start": "686800",
    "end": "691839"
  },
  {
    "text": "color they can be uh position they can be normal they can be texture coordinates that's the that's the",
    "start": "691839",
    "end": "699120"
  },
  {
    "text": "attribute of each vertex and this you can see those",
    "start": "699120",
    "end": "705880"
  },
  {
    "text": "variables start with varying that means though are those will be the output of",
    "start": "705880",
    "end": "713120"
  },
  {
    "text": "the vertex Shader but then they will be the input of the fragment Shader they",
    "start": "713120",
    "end": "718200"
  },
  {
    "text": "will be the input of the next stage in the",
    "start": "718200",
    "end": "723199"
  },
  {
    "text": "pipeline and the code is very simple it's basically because this attribute",
    "start": "723480",
    "end": "730399"
  },
  {
    "text": "position is the input so each vertex we already know the position and here we don't apply any uh transformation so",
    "start": "730399",
    "end": "737600"
  },
  {
    "text": "there's no Matrix operation so we basically just take XYZ as it is and the W is just 1.0 so this give you the this",
    "start": "737600",
    "end": "745880"
  },
  {
    "text": "will be the final position of each vertex and this GL position is the reserved",
    "start": "745880",
    "end": "753240"
  },
  {
    "text": "keyword so basically when you assign value assign value to this property",
    "start": "753240",
    "end": "758519"
  },
  {
    "text": "that's the final value of final position of that vertex and then",
    "start": "758519",
    "end": "765160"
  },
  {
    "text": "we then we assign the color input the color directly to the V color which will",
    "start": "765160",
    "end": "770720"
  },
  {
    "start": "770000",
    "end": "903000"
  },
  {
    "text": "be passing down to the next stage so this is what a simple fragment",
    "start": "770720",
    "end": "778279"
  },
  {
    "text": "Shader looks like so first you need to declare the Precision of the operation of the",
    "start": "778279",
    "end": "785320"
  },
  {
    "text": "variable you want to operate on so basically here I say Precision medium P throat that means all throat will use",
    "start": "785320",
    "end": "793959"
  },
  {
    "text": "medium precis but that can vary from uh device to device but uh the spec will",
    "start": "793959",
    "end": "800519"
  },
  {
    "text": "specify what's the minimum requirement for medium of a high then at least you",
    "start": "800519",
    "end": "805760"
  },
  {
    "text": "can you can expect some of the you can have some guarantee of how precise the",
    "start": "805760",
    "end": "811199"
  },
  {
    "text": "data can be then you can see this again you see",
    "start": "811199",
    "end": "816800"
  },
  {
    "text": "this in the in the uh vertex Shader but now you see here again because the",
    "start": "816800",
    "end": "822920"
  },
  {
    "text": "output of the vertex Shader will be the input of the fragment Shader so you get the color from vertex Shader then",
    "start": "822920",
    "end": "829600"
  },
  {
    "text": "basically you just assign the color to the final as the final color of the of",
    "start": "829600",
    "end": "834759"
  },
  {
    "text": "the fragment Shader but here you you need to know that vertex Shader is per",
    "start": "834759",
    "end": "840800"
  },
  {
    "text": "vertex and here is per pixel so basically before you even enter here the",
    "start": "840800",
    "end": "847199"
  },
  {
    "text": "GP pipeline already automatically do the blending so if you have select a pixel",
    "start": "847199",
    "end": "852600"
  },
  {
    "text": "inside a triangle then it will then it will take into consideration the three",
    "start": "852600",
    "end": "858519"
  },
  {
    "text": "three vertices and their colors then depending on the position of the pixel",
    "start": "858519",
    "end": "863839"
  },
  {
    "text": "to the position of the three vertices it will do some uh linear combination then that's the input V color you get it's",
    "start": "863839",
    "end": "872040"
  },
  {
    "text": "not directly from from vertex Shader but a blending of related vertices then you",
    "start": "872040",
    "end": "879000"
  },
  {
    "text": "can directly assign the color to this fragment color and if you just want pure",
    "start": "879000",
    "end": "884399"
  },
  {
    "text": "red on your screen then you basically you can just say GL FR color is is is",
    "start": "884399",
    "end": "891040"
  },
  {
    "text": "red like one0 0 then you get the whole screen will just be red it's as simple",
    "start": "891040",
    "end": "896079"
  },
  {
    "text": "as that no magic here but you can you can do quite you can",
    "start": "896079",
    "end": "901839"
  },
  {
    "text": "also do some very complicated things here to get some very cool effects so",
    "start": "901839",
    "end": "907079"
  },
  {
    "text": "here are some difference between uh basically you can calculate the final",
    "start": "907079",
    "end": "912680"
  },
  {
    "text": "color like like in previous example we calculate the color in the vertex Shader",
    "start": "912680",
    "end": "918600"
  },
  {
    "text": "then the color just passing down to the fragment Shader but sometimes we can calculate the color on a",
    "start": "918600",
    "end": "925480"
  },
  {
    "text": "per uh per pixel basis so this give you more accurate color model as you can see",
    "start": "925480",
    "end": "932480"
  },
  {
    "text": "from the two example the left is rendered basically computed color on a per vertex basis then just do some",
    "start": "932480",
    "end": "939279"
  },
  {
    "text": "interpretation and the second is comput the color on the the right is comput the",
    "start": "939279",
    "end": "944639"
  },
  {
    "text": "color on up per uh pixel basis so you can see you you see one the left the",
    "start": "944639",
    "end": "953160"
  },
  {
    "text": "right side you don't have the highlights but the the right side you have because it's a finer model because per pixel in",
    "start": "953160",
    "end": "960560"
  },
  {
    "text": "most cases a triangle is more than one pixel so if you compu the color on a pixel basis it's more accurate so give",
    "start": "960560",
    "end": "967600"
  },
  {
    "text": "you more details and that's a choice sometimes you want to make whether how how good",
    "start": "967600",
    "end": "974440"
  },
  {
    "start": "973000",
    "end": "1026000"
  },
  {
    "text": "the rendering you want it to be so then this is this is just regular",
    "start": "974440",
    "end": "982560"
  },
  {
    "text": "JavaScript so you can you can you can put the the shoer source code AS a",
    "start": "982560",
    "end": "989160"
  },
  {
    "text": "script and then you can you can give it some type and type is basically as far",
    "start": "989160",
    "end": "996160"
  },
  {
    "text": "as it's different from text then that's fine you can you can just specify anything but you the one thing is you",
    "start": "996160",
    "end": "1003680"
  },
  {
    "text": "need to separate basically you need to let the the code know like uh give it ID",
    "start": "1003680",
    "end": "1009880"
  },
  {
    "text": "for example then then then you can know which this text is about for here we",
    "start": "1009880",
    "end": "1015720"
  },
  {
    "text": "only have we have only have two so we say one is VSS that's vertex Shader one",
    "start": "1015720",
    "end": "1021120"
  },
  {
    "text": "is FS so later you can use this ID or use the type then you can you basically",
    "start": "1021120",
    "end": "1027640"
  },
  {
    "start": "1026000",
    "end": "1106000"
  },
  {
    "text": "you can know which is which so now the first step to to build",
    "start": "1027640",
    "end": "1036000"
  },
  {
    "text": "a web jel program is to get a web jel context so that's very simple you have a",
    "start": "1036000",
    "end": "1042520"
  },
  {
    "text": "canvas object in your HTML uh file then",
    "start": "1042520",
    "end": "1047760"
  },
  {
    "text": "then you use this canvas to get a context and what kind of context then it's a string you pass down and here we",
    "start": "1047760",
    "end": "1054880"
  },
  {
    "text": "want web gel so we say experimental web gel because um we can only claim web gel",
    "start": "1054880",
    "end": "1061559"
  },
  {
    "text": "once it's fully passing the conformance test so right now we use the word experimental web gel but once we are",
    "start": "1061559",
    "end": "1068760"
  },
  {
    "text": "fully spe confirmant then you can just say get context web gel that's then you",
    "start": "1068760",
    "end": "1074200"
  },
  {
    "text": "will have uh web jel context to do all stuff web J allow ows you to do but here",
    "start": "1074200",
    "end": "1080679"
  },
  {
    "text": "you can also get a now that's basically uh if the card is driver is blacklisted",
    "start": "1080679",
    "end": "1086400"
  },
  {
    "text": "then you will get now then you can you basically you can pop up a Waring box to your user that up upgrade your driver",
    "start": "1086400",
    "end": "1093400"
  },
  {
    "text": "get a better GPU what whatever you want to do with that and uh for canvas you can also get",
    "start": "1093400",
    "end": "1100320"
  },
  {
    "text": "a 2d uh contacts so basically if you say get context 2D that will give you a 2d",
    "start": "1100320",
    "end": "1106320"
  },
  {
    "text": "context then you can do tons of like jaw line jaw Circle those kind of 2D",
    "start": "1106320",
    "end": "1112720"
  },
  {
    "text": "operation so now we have a GL context and we have the open G Source embedded",
    "start": "1114080",
    "end": "1122120"
  },
  {
    "text": "in the HTML file so now we need to load the Shader because basically we need to",
    "start": "1122120",
    "end": "1127400"
  },
  {
    "text": "let the GPU know what which program you're are supposed to run so for each",
    "start": "1127400",
    "end": "1132799"
  },
  {
    "start": "1132000",
    "end": "1219000"
  },
  {
    "text": "GP program they consist of one fragment Shader and one vertex Shader",
    "start": "1132799",
    "end": "1139600"
  },
  {
    "text": "so this is a code how you uh upload the Shader uh you get the",
    "start": "1139600",
    "end": "1145440"
  },
  {
    "text": "Shader so this is basically you get the element by ID the ID and uh here we",
    "start": "1145440",
    "end": "1153640"
  },
  {
    "text": "basically use the type to distinguish whether it's a Vertex Shader or a fragment Shader but uh for our example",
    "start": "1153640",
    "end": "1160320"
  },
  {
    "text": "you can actually you can also use the ID because one ID is VX vs another ID is uh",
    "start": "1160320",
    "end": "1167919"
  },
  {
    "text": "FS so basically they are good enough to tell you which one is which then you create a Shader based on",
    "start": "1167919",
    "end": "1175000"
  },
  {
    "text": "the type whether it's a Vertex Shader or a fragment",
    "start": "1175000",
    "end": "1179919"
  },
  {
    "text": "Shader then this Shader source is basically you upload the source code to",
    "start": "1180799",
    "end": "1186120"
  },
  {
    "text": "the GPU then you compile it's just like any",
    "start": "1186120",
    "end": "1193360"
  },
  {
    "text": "uh CPU uh program you you write some source",
    "start": "1193360",
    "end": "1198400"
  },
  {
    "text": "code then you compile then see if it succeed or not so so this is the stage",
    "start": "1198400",
    "end": "1206679"
  },
  {
    "text": "basically you check whether compile succeeded if not actually you can call another function then you can get some",
    "start": "1206679",
    "end": "1213240"
  },
  {
    "text": "information about why it fails compiling then it will indicate give you some",
    "start": "1213240",
    "end": "1218640"
  },
  {
    "text": "hints what's wrong with your program with your Shader source code then you can do some",
    "start": "1218640",
    "end": "1225039"
  },
  {
    "start": "1219000",
    "end": "1231000"
  },
  {
    "text": "modification so now we compile the Shader and uh then we need",
    "start": "1226880",
    "end": "1232600"
  },
  {
    "start": "1231000",
    "end": "1412000"
  },
  {
    "text": "to load the program to the GP so GP can run and can",
    "start": "1232600",
    "end": "1238240"
  },
  {
    "text": "render so this is the source code how to uh build the",
    "start": "1238240",
    "end": "1246200"
  },
  {
    "text": "program so first you need to create a program that's very",
    "start": "1247360",
    "end": "1252919"
  },
  {
    "text": "simple then we use the the function in the previous page the get Shader so we",
    "start": "1252919",
    "end": "1258679"
  },
  {
    "text": "we we we create Shader and compile the Shader then what we need to do is we",
    "start": "1258679",
    "end": "1264159"
  },
  {
    "text": "need to let the program know this is the vertex Shader you are supposed to use so we say attach Shader basically we attach",
    "start": "1264159",
    "end": "1271159"
  },
  {
    "text": "the vertex Shader to the program and then we do the same for the fragment Shader so now we have a program",
    "start": "1271159",
    "end": "1279400"
  },
  {
    "text": "with one vertex Shader one fragment Shader so the program is complete now we can compile we can link it's just like",
    "start": "1279400",
    "end": "1287120"
  },
  {
    "text": "the CPU program we compile then we link then after link we check whether link",
    "start": "1287120",
    "end": "1293440"
  },
  {
    "text": "succeeded or not and uh again here I didn't have this code but uh if the link",
    "start": "1293440",
    "end": "1298880"
  },
  {
    "text": "fails then you can get some log information will tell you why it fails",
    "start": "1298880",
    "end": "1304799"
  },
  {
    "text": "hopefully the information is good enough so you can you can immediately know",
    "start": "1304799",
    "end": "1310120"
  },
  {
    "text": "what's wrong with your program so now we link the program if it",
    "start": "1310120",
    "end": "1315400"
  },
  {
    "text": "succeeded we have a valid program to run on GPU but we need to tell the GPU this",
    "start": "1315400",
    "end": "1320480"
  },
  {
    "text": "is the program you you should use so that's that's the line of code just",
    "start": "1320480",
    "end": "1325760"
  },
  {
    "text": "doing that say use program so set this program as the current program for the",
    "start": "1325760",
    "end": "1332919"
  },
  {
    "text": "GPU then those those lines is basically prepared vertex attributes for later use",
    "start": "1334360",
    "end": "1341720"
  },
  {
    "text": "because we know as we see in the vertex uh Shader we have we have position we",
    "start": "1341720",
    "end": "1347960"
  },
  {
    "text": "have attribute position we have attribute color and uh the program is basically tell you how to what to do",
    "start": "1347960",
    "end": "1355039"
  },
  {
    "text": "with those attributes but again then you need to link some data to the program so",
    "start": "1355039",
    "end": "1360840"
  },
  {
    "text": "say this is where you put the where you give the data to the to the GP and so",
    "start": "1360840",
    "end": "1367919"
  },
  {
    "text": "those are the location you get the location of those attributes then later you can um bind data bind vertex data to",
    "start": "1367919",
    "end": "1376400"
  },
  {
    "text": "the vertex attribute location and B color data to the color uh vertex loc",
    "start": "1376400",
    "end": "1381799"
  },
  {
    "text": "location so that's what this is about give you the location later you can",
    "start": "1381799",
    "end": "1386919"
  },
  {
    "text": "binding data to them so now now we set up the GPU we set up a program set up",
    "start": "1386919",
    "end": "1392640"
  },
  {
    "text": "shaders and the next is we have the program now we need the data because",
    "start": "1392640",
    "end": "1399480"
  },
  {
    "text": "that there are two parts one is program what to do with the data now we need to get the data to the program so we can",
    "start": "1399480",
    "end": "1405679"
  },
  {
    "text": "draw renderer render uh that stuff on the",
    "start": "1405679",
    "end": "1412120"
  },
  {
    "start": "1412000",
    "end": "1442000"
  },
  {
    "text": "screen so the data here in in uh in web gel is what we call data buffer so first",
    "start": "1413520",
    "end": "1421600"
  },
  {
    "text": "we need to create a buffer and and say this is bind buffer is basically saying",
    "start": "1421600",
    "end": "1427360"
  },
  {
    "text": "this is the current buffer and all the all the uh future operations on the",
    "start": "1427360",
    "end": "1433799"
  },
  {
    "text": "buffers are are made to this buffer until I buy another buffer to as the",
    "start": "1433799",
    "end": "1442000"
  },
  {
    "start": "1442000",
    "end": "1483000"
  },
  {
    "text": "current so this is the buffer data for the triangle it's it's quite simple you",
    "start": "1442720",
    "end": "1447919"
  },
  {
    "text": "can see uh it's it's XYZ and",
    "start": "1447919",
    "end": "1453080"
  },
  {
    "text": "rgba it's seven seven froats for each",
    "start": "1453080",
    "end": "1458440"
  },
  {
    "text": "vertex then we have three vertices so we totally have seven by uh 21 froos that's",
    "start": "1458559",
    "end": "1465200"
  },
  {
    "text": "the data we have",
    "start": "1465200",
    "end": "1469000"
  },
  {
    "text": "then this buffer data is basically saying upload this data to the",
    "start": "1471640",
    "end": "1478080"
  },
  {
    "text": "GP so now we have the data we have the program we have the program on the GPU",
    "start": "1485120",
    "end": "1490919"
  },
  {
    "text": "we have the data on the GPU and then we need to only send a simple command to the through webgl say now draw something",
    "start": "1490919",
    "end": "1498919"
  },
  {
    "text": "for me that that's the last missing part of this simple",
    "start": "1498919",
    "end": "1505919"
  },
  {
    "start": "1499000",
    "end": "1535000"
  },
  {
    "text": "program so viewport clear is basically say this is the region on draw and",
    "start": "1505919",
    "end": "1512200"
  },
  {
    "text": "before I draw clear the region first of course you need you can you can set uh",
    "start": "1512200",
    "end": "1517600"
  },
  {
    "text": "here I didn't set the clear color so basically use the default color to clear",
    "start": "1517600",
    "end": "1522640"
  },
  {
    "text": "the scene but you can actually say what kind of background color you want then you can say clear color set up the color",
    "start": "1522640",
    "end": "1529279"
  },
  {
    "text": "then do the clear then you have a region with a given background",
    "start": "1529279",
    "end": "1534919"
  },
  {
    "start": "1535000",
    "end": "1670000"
  },
  {
    "text": "color so this is basically binding the data the data is already on the GPU and",
    "start": "1536760",
    "end": "1543159"
  },
  {
    "text": "the program is also on the GPU so now basically you need to connect the data",
    "start": "1543159",
    "end": "1548320"
  },
  {
    "text": "feed the data to the Shader programs so this is what exactly this is doing so in",
    "start": "1548320",
    "end": "1554640"
  },
  {
    "text": "the Shader vertex program we have two attribute one is tradition another is color here I also draw the surface noral",
    "start": "1554640",
    "end": "1562480"
  },
  {
    "text": "but uh in in our program we don't have normals so we have positions we have",
    "start": "1562480",
    "end": "1567919"
  },
  {
    "text": "colors and so those lines is basically just binding the data to the to the",
    "start": "1567919",
    "end": "1578960"
  },
  {
    "text": "location so you can see the program uh dot position attribute so say bind those",
    "start": "1578960",
    "end": "1585840"
  },
  {
    "text": "data to those position and three is saying uh for the this is for position",
    "start": "1585840",
    "end": "1592720"
  },
  {
    "text": "so we have three data XYZ and the type is float and force is basically",
    "start": "1592720",
    "end": "1598000"
  },
  {
    "text": "normalized or not you don't have to worry about that here this and uh uh Str",
    "start": "1598000",
    "end": "1604840"
  },
  {
    "text": "is basically because for each vertex we have we have seven we have seven throats",
    "start": "1604840",
    "end": "1610640"
  },
  {
    "text": "so we say basically for each vertex you you jump another seven uh throats to the",
    "start": "1610640",
    "end": "1617600"
  },
  {
    "text": "next vertex and zero is because for the position we put position first then color so the",
    "start": "1617600",
    "end": "1624720"
  },
  {
    "text": "last parameter is offset so we see Zero is in those seven froats we read from 0",
    "start": "1624720",
    "end": "1630240"
  },
  {
    "text": "one 2 as Xyz and so the second example the color you see the the uh the offset",
    "start": "1630240",
    "end": "1638159"
  },
  {
    "text": "is three so basically it's saying start from three 4 five six as",
    "start": "1638159",
    "end": "1644480"
  },
  {
    "text": "rgba that's the offset and the four because the uh there's four four is basically saying",
    "start": "1644480",
    "end": "1652000"
  },
  {
    "text": "the data is rgba it's four froos the top is froos and uh it's it's if you read",
    "start": "1652000",
    "end": "1659480"
  },
  {
    "text": "the the API the meaning of all those parameters will be very clear now we have the data we have the",
    "start": "1659480",
    "end": "1666840"
  },
  {
    "text": "program and we connect the data to the program program then the last thing we need to do is say draw so we draw a",
    "start": "1666840",
    "end": "1674200"
  },
  {
    "start": "1670000",
    "end": "1701000"
  },
  {
    "text": "triangle and start from zero zero is uh sometimes if we have a large data and we",
    "start": "1674200",
    "end": "1681600"
  },
  {
    "text": "only want to draw a part so we can can start from anywhere draw only partial part of the all the triangles but here",
    "start": "1681600",
    "end": "1688960"
  },
  {
    "text": "we only have three so we start start from beginning and three is saying we have three vertices so this is this is",
    "start": "1688960",
    "end": "1695679"
  },
  {
    "text": "only one triangle and that's all this is all the code you need to draw a triangle I mean",
    "start": "1695679",
    "end": "1702960"
  },
  {
    "text": "it's it's way more lines than just Hello World in C or Java but uh it's still",
    "start": "1702960",
    "end": "1709000"
  },
  {
    "text": "very simple stuff so any questions so",
    "start": "1709000",
    "end": "1715960"
  },
  {
    "text": "far do you feel confident now you you can call yourself a web Joel",
    "start": "1715960",
    "end": "1722799"
  },
  {
    "text": "expert I I when I started working for Google I I start from this example so",
    "start": "1723440",
    "end": "1729960"
  },
  {
    "start": "1729000",
    "end": "1748000"
  },
  {
    "text": "that's how I learned web gel and no matter how complicated the",
    "start": "1729960",
    "end": "1735080"
  },
  {
    "text": "scene looks like this is the foundation it it you can do like you can do some um",
    "start": "1735080",
    "end": "1742480"
  },
  {
    "text": "physical simulation all kind of stuff but that's not related to Graphics the part two Graphics is just this is the",
    "start": "1742480",
    "end": "1749679"
  },
  {
    "start": "1748000",
    "end": "1775000"
  },
  {
    "text": "cor this is everything you need to know oh actually the only thing missing is the texture how you deal with texture",
    "start": "1749679",
    "end": "1755320"
  },
  {
    "text": "but once you you set if you look if you learn how to assign the texture to the",
    "start": "1755320",
    "end": "1761880"
  },
  {
    "text": "triangle that's everything you need to know about how to draw uh 3D graphics",
    "start": "1761880",
    "end": "1769559"
  },
  {
    "text": "so this is not bad actually you can call yourself web J expert if you fully understand what this is",
    "start": "1769559",
    "end": "1777080"
  },
  {
    "start": "1775000",
    "end": "1974000"
  },
  {
    "text": "about so now I want to talk about uh after the basics I want to talk about a",
    "start": "1777320",
    "end": "1783559"
  },
  {
    "text": "little bit about how to make good web J uh",
    "start": "1783559",
    "end": "1788880"
  },
  {
    "text": "applications so here are some rules because web G is fundamentally Graphics",
    "start": "1788880",
    "end": "1794440"
  },
  {
    "text": "Library open G so so whatever rules for open gel to make it good it also",
    "start": "1794440",
    "end": "1801519"
  },
  {
    "text": "applies here so first basically we need to minimize a few things first try to",
    "start": "1801519",
    "end": "1808279"
  },
  {
    "text": "minimize the draw cost so for example if you want to draw a million triangles you",
    "start": "1808279",
    "end": "1814039"
  },
  {
    "text": "can combine all triangles say draw and draw a million triangle or instead you",
    "start": "1814039",
    "end": "1821159"
  },
  {
    "text": "can make a million draw CS each time you just draw one triangle and the L case is extremely bad so basically you try to",
    "start": "1821159",
    "end": "1827720"
  },
  {
    "text": "come B your geometry and try to make a single jaw call that's the best but if you cannot or if that's too complicated",
    "start": "1827720",
    "end": "1835200"
  },
  {
    "text": "to you for you to manage the data for example you have human a dog then you have to make two calls that's fine but",
    "start": "1835200",
    "end": "1841799"
  },
  {
    "text": "uh if you make a million call for a Milan triangle that's not good for web gel and then you also try to minimize",
    "start": "1841799",
    "end": "1849519"
  },
  {
    "text": "The Binding of buffers texture program so basically as as I showed before if",
    "start": "1849519",
    "end": "1855799"
  },
  {
    "text": "you say B buffer basically you set the buffer as the current then all the future operations is is applied to that",
    "start": "1855799",
    "end": "1864080"
  },
  {
    "text": "buffer until you say bind buffer again so basically you try to make as minimal",
    "start": "1864080",
    "end": "1870120"
  },
  {
    "text": "as possible the switch between buffers between textures so basically if you want to do something for one buffer you",
    "start": "1870120",
    "end": "1877000"
  },
  {
    "text": "you bind this buffer and do them all then you switch to the next buffer instead of you do something here switch",
    "start": "1877000",
    "end": "1883320"
  },
  {
    "text": "to another buffer then switch back this is will make the web gel uh performance better",
    "start": "1883320",
    "end": "1888720"
  },
  {
    "text": "add and the same is uniform variables uh which I didn't explain what it is here",
    "start": "1888720",
    "end": "1896360"
  },
  {
    "text": "and also there are State uh switches just like enabling for example depth",
    "start": "1896360",
    "end": "1902559"
  },
  {
    "text": "testing and enable vertex attributes those kind of things basically um",
    "start": "1902559",
    "end": "1909480"
  },
  {
    "text": "basically make sure you know what you want what do you want what do you have to do then basically make as minimal",
    "start": "1909480",
    "end": "1917480"
  },
  {
    "text": "state switch as possible that's will make your open gel uh web gel",
    "start": "1917480",
    "end": "1923159"
  },
  {
    "text": "performance pretty good and then for web gel because web gel is Javascript plus",
    "start": "1923159",
    "end": "1930120"
  },
  {
    "text": "shoter so JavaScript is running on CPU and the shter run runs on GPU so",
    "start": "1930120",
    "end": "1936320"
  },
  {
    "text": "basically for browsers you try to offload as much work to GPU as possible",
    "start": "1936320",
    "end": "1942360"
  },
  {
    "text": "so then on the CPU side it can be very fast very smooth because CPU will handle",
    "start": "1942360",
    "end": "1947399"
  },
  {
    "text": "all the user interaction like user wants to click play games interact with the",
    "start": "1947399",
    "end": "1953600"
  },
  {
    "text": "scene all those kind of things is happening on CPU so if you do tons of",
    "start": "1953600",
    "end": "1959159"
  },
  {
    "text": "webgl stuff on the CPU side that will be bad if but if you upload them to GPU",
    "start": "1959159",
    "end": "1965480"
  },
  {
    "text": "then the CPU site can be U Saved to do all the browser UI and browser stuff so",
    "start": "1965480",
    "end": "1972399"
  },
  {
    "text": "that's the web gel bigger rule",
    "start": "1972399",
    "end": "1976679"
  },
  {
    "start": "1974000",
    "end": "2091000"
  },
  {
    "text": "the second is because what I showed before is just example just draw something but uh many times to make",
    "start": "1979200",
    "end": "1985799"
  },
  {
    "text": "application interesting you have to interact with the scene so you have to for example you have to click pick pick",
    "start": "1985799",
    "end": "1993679"
  },
  {
    "text": "is um a common interact interaction uh between user and a game because uh for",
    "start": "1993679",
    "end": "2000240"
  },
  {
    "text": "example you you you click on the screen then basically this the the program needs to tell you did you click on the",
    "start": "2000240",
    "end": "2008240"
  },
  {
    "text": "object or did you click on the SC that's what that's that's picking so uh in the",
    "start": "2008240",
    "end": "2015840"
  },
  {
    "text": "early days we have Google body which is uh basically it has a a human body and",
    "start": "2015840",
    "end": "2022840"
  },
  {
    "text": "with different organs and different bones with names and with information and it's all building web gel and then",
    "start": "2022840",
    "end": "2030039"
  },
  {
    "text": "you can you can click on the on the part of the body then it will tell you some",
    "start": "2030039",
    "end": "2035080"
  },
  {
    "text": "information about it uh unfortunately this Google body is no longer available",
    "start": "2035080",
    "end": "2041760"
  },
  {
    "text": "uh from Google but uh the technique they they used in Google body is pretty still",
    "start": "2041760",
    "end": "2047399"
  },
  {
    "text": "pretty amazing so because Google one Google body has about 1 million",
    "start": "2047399",
    "end": "2053960"
  },
  {
    "text": "triangles and still you can achieve real time interaction you can rotate you can",
    "start": "2053960",
    "end": "2061000"
  },
  {
    "text": "you can pick in real time so this is how how web gel can do what the performance",
    "start": "2061000",
    "end": "2068638"
  },
  {
    "text": "can be like and the selection basically you click then the program needs to tell",
    "start": "2068639",
    "end": "2075079"
  },
  {
    "text": "which part you click because there's a a million Tri triangle on the scene so you",
    "start": "2075079",
    "end": "2080679"
  },
  {
    "text": "have to do something wise otherwise if you just try to compute whether this",
    "start": "2080679",
    "end": "2086679"
  },
  {
    "text": "click interact with a Milling triangle that's going to take forever to to",
    "start": "2086679",
    "end": "2092679"
  },
  {
    "start": "2091000",
    "end": "2232000"
  },
  {
    "text": "finish so one technique which is not used by Google body is is you can do ray",
    "start": "2092679",
    "end": "2099160"
  },
  {
    "text": "tracing basically your click is like you shoot array to the scene then you can",
    "start": "2099160",
    "end": "2104920"
  },
  {
    "text": "compute how this Ray is interact with other the triangles which triangle interact first which interact next then",
    "start": "2104920",
    "end": "2113079"
  },
  {
    "text": "then then the the triangle closest to you will be the triangle you hit that's",
    "start": "2113079",
    "end": "2118560"
  },
  {
    "text": "the general uh technique you can you use in graphics to decide which which thing",
    "start": "2118560",
    "end": "2125359"
  },
  {
    "text": "you hit through a click and and and of course you can do some",
    "start": "2125359",
    "end": "2131480"
  },
  {
    "text": "optimization like you can do bonding box so so detect whether the the ray hits",
    "start": "2131480",
    "end": "2139160"
  },
  {
    "text": "this part of the body can be fast because if it it's outside the box then you don't have to compare with each",
    "start": "2139160",
    "end": "2145160"
  },
  {
    "text": "triangle uh inside the box but still this is still a lot of uh mathematics",
    "start": "2145160",
    "end": "2151520"
  },
  {
    "text": "going on on the jav SCP side because like the body can be rotated so the",
    "start": "2151520",
    "end": "2156560"
  },
  {
    "text": "bonding box also you have have to also uh apply all the transformation to the geometry and everything and for each for",
    "start": "2156560",
    "end": "2164400"
  },
  {
    "text": "each click so those a lot of mess on the CPU side and uh so what we want to do is",
    "start": "2164400",
    "end": "2170920"
  },
  {
    "text": "we want to offload those kind of computation to GP side so the CPO site",
    "start": "2170920",
    "end": "2176119"
  },
  {
    "text": "can can save it for something else",
    "start": "2176119",
    "end": "2181599"
  },
  {
    "text": "yes uh yeah yeah you can you can do it on",
    "start": "2183040",
    "end": "2188920"
  },
  {
    "text": "the server side if you are willing to to provide a service service like that but",
    "start": "2188920",
    "end": "2196160"
  },
  {
    "text": "it will be pretty heavy GPU right most most currently most",
    "start": "2196160",
    "end": "2202280"
  },
  {
    "text": "servers are more CPU heavy and uh do",
    "start": "2202280",
    "end": "2207599"
  },
  {
    "text": "they even have GPU for for Yeah Yeah so basically you you are",
    "start": "2207599",
    "end": "2215440"
  },
  {
    "text": "doing GPU work on CPU the server which may not be very fast right now I see I",
    "start": "2215440",
    "end": "2221359"
  },
  {
    "text": "know some game companies they are using web- based gaming so they they provide",
    "start": "2221359",
    "end": "2227240"
  },
  {
    "text": "servers to do rendering but uh I don't know how well they",
    "start": "2227240",
    "end": "2232880"
  },
  {
    "start": "2232000",
    "end": "2278000"
  },
  {
    "text": "are but this is definitely could be a future",
    "start": "2232880",
    "end": "2238200"
  },
  {
    "text": "option so uh what we do is uh in Google body what we do is how we use GP you to",
    "start": "2239680",
    "end": "2248240"
  },
  {
    "text": "to decide which body part you you select is when we load the body load the model",
    "start": "2248240",
    "end": "2256000"
  },
  {
    "text": "we see this is the heart this is the kidney each each part we assign different color then we draw the body in",
    "start": "2256000",
    "end": "2265040"
  },
  {
    "text": "not on the screen but in an offscreen um frame buffer in an off screen canvas we",
    "start": "2265040",
    "end": "2271960"
  },
  {
    "text": "draw it with those color instead of with like lighting with little text",
    "start": "2271960",
    "end": "2278000"
  },
  {
    "start": "2278000",
    "end": "2363000"
  },
  {
    "text": "but we draw it with those assigned colors so then what you see is something",
    "start": "2278000",
    "end": "2283240"
  },
  {
    "text": "like this on the left side so basically it's basically this is",
    "start": "2283240",
    "end": "2288839"
  },
  {
    "text": "just a a 2d canvas with a bunch of pixels with different colors then then",
    "start": "2288839",
    "end": "2295640"
  },
  {
    "text": "when you Mouse click you basically you decide which pixel you click then this",
    "start": "2295640",
    "end": "2302480"
  },
  {
    "text": "pixel will be corresponding to which organ you click",
    "start": "2302480",
    "end": "2307599"
  },
  {
    "text": "and this is how you do uh picking through GPU you render different parts",
    "start": "2307599",
    "end": "2314480"
  },
  {
    "text": "on on with different color then based on which color you get then you can know",
    "start": "2314480",
    "end": "2319760"
  },
  {
    "text": "which body part you pick and of course you can do it on different scales for",
    "start": "2319760",
    "end": "2325520"
  },
  {
    "text": "example if you want to select a triangle instead of a a heart then basically you",
    "start": "2325520",
    "end": "2330560"
  },
  {
    "text": "assign different assign color to different triangles then based on the",
    "start": "2330560",
    "end": "2336359"
  },
  {
    "text": "based on the color then you can can know which triangle you",
    "start": "2336359",
    "end": "2341040"
  },
  {
    "text": "get so I think this is a very smart trick to do and which allows you to",
    "start": "2342880",
    "end": "2348960"
  },
  {
    "text": "interact with a million triangles in the real time and uh it Prov it it's proved to be",
    "start": "2348960",
    "end": "2358680"
  },
  {
    "text": "very effective because Google body is already launched before and uh people",
    "start": "2358680",
    "end": "2364520"
  },
  {
    "text": "can interact with it no problem so then I want to uh talk about a little",
    "start": "2364520",
    "end": "2372720"
  },
  {
    "start": "2370000",
    "end": "2447000"
  },
  {
    "text": "bit about particle system uh this is one demo of particle",
    "start": "2372720",
    "end": "2380280"
  },
  {
    "text": "system uh",
    "start": "2380280",
    "end": "2384280"
  },
  {
    "text": "so here's another example different kind of particles",
    "start": "2397640",
    "end": "2404200"
  },
  {
    "text": "so each particle will have uh is moving around according to time as",
    "start": "2404200",
    "end": "2410839"
  },
  {
    "text": "time pass by the each particle will be moving so what do we what we can do",
    "start": "2410839",
    "end": "2417520"
  },
  {
    "text": "there are two ways again one way is we can check the position of the particle at at in JavaScript basically at each",
    "start": "2417520",
    "end": "2424760"
  },
  {
    "text": "time frame we can compute the position of each particle then the GPU is only to",
    "start": "2424760",
    "end": "2430200"
  },
  {
    "text": "render is only to draw that particle in this in the given position but again uh",
    "start": "2430200",
    "end": "2436880"
  },
  {
    "text": "in this demo what we do is we we put all the computation uh the motion equation",
    "start": "2436880",
    "end": "2444520"
  },
  {
    "text": "everything evaluation to the GP side okay so this this uh the demo the the",
    "start": "2444520",
    "end": "2450880"
  },
  {
    "text": "second demo I show it animates about 2,000 particles at 60 frames per second",
    "start": "2450880",
    "end": "2457560"
  },
  {
    "text": "and uh the animation mathematics is done on GPU so here's how it's implemented so",
    "start": "2457560",
    "end": "2466400"
  },
  {
    "start": "2463000",
    "end": "2523000"
  },
  {
    "text": "each particle the motion the current position is defined by a set of parameters and those parameters",
    "start": "2466400",
    "end": "2472560"
  },
  {
    "text": "including initial position velocity acceleration and spin and those",
    "start": "2472560",
    "end": "2478720"
  },
  {
    "text": "parameters are set up uh in the initialization time so they they can be",
    "start": "2478720",
    "end": "2485319"
  },
  {
    "text": "um offloaded to the GP and then at each frame there's another",
    "start": "2485319",
    "end": "2491119"
  },
  {
    "text": "parameter we need to provide which is the time so on the on the vertex Sher",
    "start": "2491119",
    "end": "2496800"
  },
  {
    "text": "basically we can we can apply the mathematics for the for the motion",
    "start": "2496800",
    "end": "2502079"
  },
  {
    "text": "equation then we can based on the time given at each frame then we can we will",
    "start": "2502079",
    "end": "2508520"
  },
  {
    "text": "know what's the exact position of each vertex and that's that's how we can we",
    "start": "2508520",
    "end": "2516040"
  },
  {
    "text": "can uh we can get the particle system to work at 60 frames per second because the GPU",
    "start": "2516040",
    "end": "2522920"
  },
  {
    "text": "is doing most of the competition instead of",
    "start": "2522920",
    "end": "2527040"
  },
  {
    "text": "CPU so then uh then there's uh physical simulation",
    "start": "2528480",
    "end": "2537440"
  },
  {
    "start": "2533000",
    "end": "2623000"
  },
  {
    "text": "and here's one cool demo I like very much up bad because I switched again",
    "start": "2537440",
    "end": "2546440"
  },
  {
    "text": "this is the water tank you can see the the lighting and",
    "start": "2553599",
    "end": "2561359"
  },
  {
    "text": "everything I wish this is done by me but no it's someone else this is really cool",
    "start": "2567079",
    "end": "2573040"
  },
  {
    "text": "demo",
    "start": "2573040",
    "end": "2576040"
  },
  {
    "text": "oh yeah that's what you can do with web",
    "start": "2578559",
    "end": "2585559"
  },
  {
    "text": "gel yeah it's render",
    "start": "2585559",
    "end": "2589400"
  },
  {
    "text": "live uh how do I",
    "start": "2592040",
    "end": "2597760"
  },
  {
    "text": "how to make it chop oh I have to manually drop it okay",
    "start": "2617000",
    "end": "2622680"
  },
  {
    "text": "so yeah so that's the kind of stuff you can",
    "start": "2622680",
    "end": "2628160"
  },
  {
    "start": "2623000",
    "end": "2727000"
  },
  {
    "text": "do with I I'll just stick with this in instead of bring it up so I have to go",
    "start": "2628160",
    "end": "2634119"
  },
  {
    "text": "through all the slides again so uh physical simulation can also be done uh",
    "start": "2634119",
    "end": "2641200"
  },
  {
    "text": "on GPU and uh so basically we need to store the state of the the physical",
    "start": "2641200",
    "end": "2648520"
  },
  {
    "text": "simulation on the GPU then then the property whether we can do it on GPU or",
    "start": "2648520",
    "end": "2654480"
  },
  {
    "text": "not depends on uh if each step of computation relies on the nearby",
    "start": "2654480",
    "end": "2661400"
  },
  {
    "text": "neighbors because if if each simulation of each uh it's it's a Global thing then",
    "start": "2661400",
    "end": "2668559"
  },
  {
    "text": "because GP is supposed to be parallel computation so if it's very Global then",
    "start": "2668559",
    "end": "2674079"
  },
  {
    "text": "you cannot utilize the property the the the parallel parallelism of GPU then it",
    "start": "2674079",
    "end": "2681319"
  },
  {
    "text": "may not be fast so that's the one property it relies only on the nearby neighbors so if if you have a simulation",
    "start": "2681319",
    "end": "2689319"
  },
  {
    "text": "like this then maybe you can think of a way to to simulate the physics using GPU",
    "start": "2689319",
    "end": "2698160"
  },
  {
    "text": "and of course to do physical simulation you need to you need to you need accuracy so uh floating Point",
    "start": "2698160",
    "end": "2705800"
  },
  {
    "text": "textures uh which is very important in those physical simulation they are not the core part of webg but uh they are uh",
    "start": "2705800",
    "end": "2715359"
  },
  {
    "text": "provided through web J extensions and I think it's already implemented in both",
    "start": "2715359",
    "end": "2721000"
  },
  {
    "text": "Chrome and Firefox so there are several other examples and this is a L you can check",
    "start": "2721000",
    "end": "2728400"
  },
  {
    "start": "2727000",
    "end": "2919000"
  },
  {
    "text": "the a few other cool demos",
    "start": "2728400",
    "end": "2732400"
  },
  {
    "text": "out so here is the the the the part I show you in the beginning of the talk is",
    "start": "2735400",
    "end": "2742599"
  },
  {
    "text": "the non photo listic rendering so now let's let me explain what this three a",
    "start": "2742599",
    "end": "2749319"
  },
  {
    "text": "few lines of magic code do those lines basically change the",
    "start": "2749319",
    "end": "2755160"
  },
  {
    "text": "rendering from a shiny part to a Kon style as you can see the first line is",
    "start": "2755160",
    "end": "2761480"
  },
  {
    "text": "basically this is actually not exactly uh intensity of the",
    "start": "2761480",
    "end": "2767640"
  },
  {
    "text": "color because this basically I just take the the the N to of the the color but uh",
    "start": "2767640",
    "end": "2775000"
  },
  {
    "text": "basically this will give you a rough idea of how bright this color is then I",
    "start": "2775000",
    "end": "2780480"
  },
  {
    "text": "say compare this value with threshold if",
    "start": "2780480",
    "end": "2786480"
  },
  {
    "text": "it's larger than 0.95 that means this color is very bright so I use the",
    "start": "2786480",
    "end": "2792079"
  },
  {
    "text": "highlight color which is white which is close to White here then if it's in the",
    "start": "2792079",
    "end": "2797920"
  },
  {
    "text": "middle then I use the bright color but if it's really low this this brightness",
    "start": "2797920",
    "end": "2803000"
  },
  {
    "text": "is really low then I use the dark color so basically you are you are segment",
    "start": "2803000",
    "end": "2808559"
  },
  {
    "text": "segmenting the colors into three uh parts and then you transform those",
    "start": "2808559",
    "end": "2814800"
  },
  {
    "text": "continuous color um real into only three colors that's",
    "start": "2814800",
    "end": "2820960"
  },
  {
    "text": "that's what the first example I show you is about yeah basically if you comment",
    "start": "2820960",
    "end": "2827920"
  },
  {
    "text": "those lines then you'll see a sh shiny spot but if you add those lines that's that's processed on a per pixel basis",
    "start": "2827920",
    "end": "2834359"
  },
  {
    "text": "basically you already comput the pixel then you just do some uh post operation",
    "start": "2834359",
    "end": "2840720"
  },
  {
    "text": "on them then you get those kind of Caron style uh rendering results and here's",
    "start": "2840720",
    "end": "2847920"
  },
  {
    "text": "another example example so you can choose how many tones",
    "start": "2847920",
    "end": "2853839"
  },
  {
    "text": "you want two or three or even eight then you can uh pick pick colors and",
    "start": "2853839",
    "end": "2860920"
  },
  {
    "text": "everything and this is this is uh done by my colleague uh",
    "start": "2860920",
    "end": "2870800"
  },
  {
    "text": "Greg so this is another example of what kind of cool things you can do with",
    "start": "2870800",
    "end": "2875839"
  },
  {
    "text": "webgl",
    "start": "2875839",
    "end": "2878839"
  },
  {
    "text": "so here is some basically what I do is basically if regular rendering is",
    "start": "2882160",
    "end": "2888359"
  },
  {
    "text": "basically compute to the color of the um current pixel and then you just set it",
    "start": "2888359",
    "end": "2895000"
  },
  {
    "text": "and for the non photo listic rendering is you compute the color but before you",
    "start": "2895000",
    "end": "2900040"
  },
  {
    "text": "set it to send it to the to the uh G frag color then basically do some uh",
    "start": "2900040",
    "end": "2908680"
  },
  {
    "text": "conditioning if it's if it's bright then use a brighter color if it's dark then",
    "start": "2908680",
    "end": "2914000"
  },
  {
    "text": "using darker color that's how you segment the the the results into two",
    "start": "2914000",
    "end": "2921040"
  },
  {
    "start": "2919000",
    "end": "2991000"
  },
  {
    "text": "shades so uh last I want to show you some uh",
    "start": "2923559",
    "end": "2929079"
  },
  {
    "text": "resource resources you can find if you are going to explore more about webgl",
    "start": "2929079",
    "end": "2936079"
  },
  {
    "text": "and uh there there are many librar already exists and make it much easier",
    "start": "2936079",
    "end": "2941599"
  },
  {
    "text": "to build web jel applications and uh here are a few",
    "start": "2941599",
    "end": "2948760"
  },
  {
    "text": "uh",
    "start": "2948760",
    "end": "2951760"
  },
  {
    "text": "recommendations then uh then here are some talks and demos",
    "start": "2955599",
    "end": "2962480"
  },
  {
    "text": "you can find online which will give you uh so today what I talk is really the",
    "start": "2962480",
    "end": "2968960"
  },
  {
    "text": "basic basic of web gel and there are more advanced techniques that you can",
    "start": "2968960",
    "end": "2975040"
  },
  {
    "text": "use to build uh complicated web jel demos and you can check out gr's talk",
    "start": "2975040",
    "end": "2981040"
  },
  {
    "text": "and a few other talks and uh this chrome experiments uh provides tons of very",
    "start": "2981040",
    "end": "2988839"
  },
  {
    "text": "cool web J",
    "start": "2988839",
    "end": "2991920"
  },
  {
    "start": "2991000",
    "end": "3048000"
  },
  {
    "text": "demos then this is the web G official wiki page on the",
    "start": "2994240",
    "end": "2999880"
  },
  {
    "text": "Kronos and uh then there's public web gel mailing list which is basically",
    "start": "2999880",
    "end": "3005839"
  },
  {
    "text": "discussing uh about web Jael spec for example if you try to develop something",
    "start": "3005839",
    "end": "3011680"
  },
  {
    "text": "and you realize it's not possible or it's very inconvenient with the current spec then you if you have some idea then",
    "start": "3011680",
    "end": "3019839"
  },
  {
    "text": "you can propose the stuff on those list and the last list is the developers",
    "start": "3019839",
    "end": "3027559"
  },
  {
    "text": "list is you can advertise what you have done or if you new B to webgl you can",
    "start": "3027559",
    "end": "3034400"
  },
  {
    "text": "ask questions or if even if I some from time to time I see people just post a SE",
    "start": "3034400",
    "end": "3040880"
  },
  {
    "text": "a segment of code and ask what's wrong with my code and there's always very very nice people to help you out so",
    "start": "3040880",
    "end": "3048359"
  },
  {
    "start": "3048000",
    "end": "3104000"
  },
  {
    "text": "those are the very useful resources then of course this is web API",
    "start": "3048359",
    "end": "3056920"
  },
  {
    "text": "so the the the fundamental the ultimate resource of web gel is the web because",
    "start": "3056920",
    "end": "3064160"
  },
  {
    "text": "whatever whatever cool web J demo you see their source code is available to",
    "start": "3064160",
    "end": "3069599"
  },
  {
    "text": "you it's not like C++ or Java they they compile then you cannot see what's going",
    "start": "3069599",
    "end": "3075640"
  },
  {
    "text": "on in JavaScript the beauty of JavaScript is whatever they do it's",
    "start": "3075640",
    "end": "3081280"
  },
  {
    "text": "available you can just click tools and view Source then you can see everything of course some people will do some",
    "start": "3081280",
    "end": "3088280"
  },
  {
    "text": "postprocessing make the variable like weird names or make the lines or come",
    "start": "3088280",
    "end": "3093799"
  },
  {
    "text": "together make it very difficult to read but if you have patience you still can understand what they are doing and uh",
    "start": "3093799",
    "end": "3100520"
  },
  {
    "text": "that's the beauty of the web yeah so there's one last example I",
    "start": "3100520",
    "end": "3106640"
  },
  {
    "start": "3104000",
    "end": "3393000"
  },
  {
    "text": "want to show I think that's the trademark",
    "start": "3106640",
    "end": "3111920"
  },
  {
    "text": "example demo for webel in the very beginning that the fish",
    "start": "3111920",
    "end": "3118400"
  },
  {
    "text": "tank and uh you can select how many fishes you",
    "start": "3118400",
    "end": "3123680"
  },
  {
    "text": "want and then you can see the frame rate per second but uh for me this is a pretty uh",
    "start": "3124440",
    "end": "3132559"
  },
  {
    "text": "not a very good GPU it's only a uh lowend Intel but it's already uh",
    "start": "3132559",
    "end": "3139920"
  },
  {
    "text": "with with such a large thing it's it's it's still um pretty good frame rate",
    "start": "3139920",
    "end": "3148000"
  },
  {
    "text": "okay so basically the the the the idea of web is webg is supposed to make your",
    "start": "3148000",
    "end": "3155119"
  },
  {
    "text": "program wrong anywhere the same behavior so that's why we choose open G es 2.0 as",
    "start": "3155119",
    "end": "3163599"
  },
  {
    "text": "a foundation of web j instead of a more advanced open G or more like like more",
    "start": "3163599",
    "end": "3170400"
  },
  {
    "text": "uh open Jael with like more feature core features that's because we try to make",
    "start": "3170400",
    "end": "3175880"
  },
  {
    "text": "it the EXP the same so uh as for your",
    "start": "3175880",
    "end": "3181280"
  },
  {
    "text": "question uh right now we don't have uh Benchmark buil in with the browser so we",
    "start": "3181280",
    "end": "3188240"
  },
  {
    "text": "don't know how fast the rendering is we only know that uh hopefully if we allow",
    "start": "3188240",
    "end": "3196640"
  },
  {
    "text": "the web gel to run on a certain GPU on certain driver at least they render",
    "start": "3196640",
    "end": "3201760"
  },
  {
    "text": "correctly that's what we can guarantee but for the speed right now we don't have a mechanism to say this will be on",
    "start": "3201760",
    "end": "3208880"
  },
  {
    "text": "uh uh 30 frames per second guaranteed we don't have that what you can do is like",
    "start": "3208880",
    "end": "3215440"
  },
  {
    "text": "Maps gel before they start uh like the the the Google Map they have a version",
    "start": "3215440",
    "end": "3222559"
  },
  {
    "text": "of a web gel map called Maps gel what they do is before they launch Maps gel",
    "start": "3222559",
    "end": "3229760"
  },
  {
    "text": "they run a few uh small Benchmark to G",
    "start": "3229760",
    "end": "3234799"
  },
  {
    "text": "to together uh the speed a few features they a few measurements they want uh",
    "start": "3234799",
    "end": "3241400"
  },
  {
    "text": "from you and if it's really bad then maybe they will not even wrong so that's",
    "start": "3241400",
    "end": "3247720"
  },
  {
    "text": "currently uh how people do things but uh I think we are we are trying to do",
    "start": "3247720",
    "end": "3254119"
  },
  {
    "text": "something on the broad side so see if we can provide some",
    "start": "3254119",
    "end": "3259760"
  },
  {
    "text": "pre-computed uh evaluation of the GP performance so then maybe you don't have",
    "start": "3259760",
    "end": "3264799"
  },
  {
    "text": "to build benchmarks on your own and run before user launches it basically you",
    "start": "3264799",
    "end": "3269960"
  },
  {
    "text": "can just query the browser say how fast the GPU is and hopefully we already laun",
    "start": "3269960",
    "end": "3276119"
  },
  {
    "text": "it when the GPU when the browser is Idle we don't have to wait until you launch",
    "start": "3276119",
    "end": "3281480"
  },
  {
    "text": "the GPU but launch your application but beforehand when the user is not doing",
    "start": "3281480",
    "end": "3287119"
  },
  {
    "text": "anything we already run the uh Benchmark and collect the data so when you query it will be",
    "start": "3287119",
    "end": "3293760"
  },
  {
    "text": "immediately available telling you how well how your GPU is how good it is then",
    "start": "3293760",
    "end": "3299760"
  },
  {
    "text": "then you can decide what you want to do whether you want to run or not even launch or sometimes people have fall",
    "start": "3299760",
    "end": "3306720"
  },
  {
    "text": "back if the 3D Graphics is not good enough maybe they have a CPUs side",
    "start": "3306720",
    "end": "3313480"
  },
  {
    "text": "implementation so basically use the CPU or even for example like Angry Bird they",
    "start": "3313480",
    "end": "3319440"
  },
  {
    "text": "have a web gel version and they have a 2d canvas version because for the Angry",
    "start": "3319440",
    "end": "3324920"
  },
  {
    "text": "Bird it's basically not much 3D so they can also do it in Chas 2D so then maybe",
    "start": "3324920",
    "end": "3330839"
  },
  {
    "text": "those kind of fall back solution so but that's in the future not right now it's not",
    "start": "3330839",
    "end": "3336599"
  },
  {
    "text": "available okay that's a very good question so the question is uh do we have a standards to to uh send uh 3D",
    "start": "3336599",
    "end": "3345240"
  },
  {
    "text": "data uh uh for the for the web J application the answer is no currently",
    "start": "3345240",
    "end": "3350559"
  },
  {
    "text": "we don't have such a standards so it is up to the developers to Define their own standards but we do have like if you",
    "start": "3350559",
    "end": "3358760"
  },
  {
    "text": "want to use some standard uh if you want to use some standards like for example k",
    "start": "3358760",
    "end": "3364880"
  },
  {
    "text": "then if you search we you can find available tools for you to to send and to for you to interpret and unpack those",
    "start": "3364880",
    "end": "3373000"
  },
  {
    "text": "kind of data and make it more convenient for you to use okay thank you very much for your",
    "start": "3373000",
    "end": "3378960"
  },
  {
    "text": "time time and uh now let's enjoy lunch",
    "start": "3378960",
    "end": "3384970"
  },
  {
    "text": "[Applause] [Music]",
    "start": "3384970",
    "end": "3395630"
  }
]