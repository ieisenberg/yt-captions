[
  {
    "text": "foreign [Music]",
    "start": "1380",
    "end": "16160"
  },
  {
    "text": "thank you for coming I'm really happy to see that you found time to attend my",
    "start": "16160",
    "end": "21420"
  },
  {
    "text": "talk who am I my name is mikita and I work at Netflix",
    "start": "21420",
    "end": "26519"
  },
  {
    "text": "and my job is basically making sure that other developers don't have to State work late I call it a win",
    "start": "26519",
    "end": "33540"
  },
  {
    "text": "when they can leave at 5 pm and still be productive well but on a more serious",
    "start": "33540",
    "end": "39480"
  },
  {
    "text": "note I work in the platform organization namely in productivity engineering where",
    "start": "39480",
    "end": "45000"
  },
  {
    "text": "we try to abstract Trailway for the rest of Engineers where we try to make sure that the engineers can focus on solving",
    "start": "45000",
    "end": "52379"
  },
  {
    "text": "business problems instead of dealing with the same boring technical issues over and over again",
    "start": "52379",
    "end": "57960"
  },
  {
    "text": "now let me ask you a few questions how many of you work in companies that practice you build it you run it",
    "start": "57960",
    "end": "64619"
  },
  {
    "text": "philosophy good and how many of you are happy that you don't have any Gatekeepers between",
    "start": "64619",
    "end": "71159"
  },
  {
    "text": "you in production that you can deliver features and fixes faster okay",
    "start": "71159",
    "end": "77280"
  },
  {
    "text": "okay good and how many of you have ever faced a situation when you are dealing with a",
    "start": "77280",
    "end": "84540"
  },
  {
    "text": "production incident and your word lost what to do and you wish to put better be",
    "start": "84540",
    "end": "90600"
  },
  {
    "text": "somebody else's problem let's be honest because I've been there quite a few times myself",
    "start": "90600",
    "end": "96060"
  },
  {
    "text": "yet I don't want to go back to the times of having a big old wall between development and QA and operations where",
    "start": "96060",
    "end": "103380"
  },
  {
    "text": "you write the code and you throw it over the wall to QA who find bugs and then",
    "start": "103380",
    "end": "108960"
  },
  {
    "text": "they throw it back to you and so on until you both agree it's good enough and then you throw the quote over",
    "start": "108960",
    "end": "114299"
  },
  {
    "text": "another wall to our operations and then you expose it to users and then your",
    "start": "114299",
    "end": "119399"
  },
  {
    "text": "users find bugs and this whole process repeats again and again usually being really really painful it's not just my",
    "start": "119399",
    "end": "127140"
  },
  {
    "text": "opinion the state of devops survey highlights year after year that companies with a higher degree of devops",
    "start": "127140",
    "end": "133379"
  },
  {
    "text": "adoption they perform better they have a better change failure rate basically their deployments fail as often and that",
    "start": "133379",
    "end": "141180"
  },
  {
    "text": "happens even though they are doing much more deployments in general however this",
    "start": "141180",
    "end": "146400"
  },
  {
    "text": "achievement this win comes with the price because operating your own code in production means that you have to wear a",
    "start": "146400",
    "end": "153300"
  },
  {
    "text": "page you need to be ready to respond to incidents you may need to actually communicate",
    "start": "153300",
    "end": "158340"
  },
  {
    "text": "with real customers who may provide valuable feedback but they also require time and attention yes",
    "start": "158340",
    "end": "164819"
  },
  {
    "text": "as a result you can definitely ship cut faster your code quality improves but",
    "start": "164819",
    "end": "170400"
  },
  {
    "text": "the burden of operational duties well it's no negligible on top of that",
    "start": "170400",
    "end": "175739"
  },
  {
    "text": "as the shift and left movement is get interaction we see even more load being",
    "start": "175739",
    "end": "180780"
  },
  {
    "text": "added to the developers button how does it happen well let's review it on the example of",
    "start": "180780",
    "end": "187019"
  },
  {
    "text": "shift and left the testing the traditional software development lifecycle has testing activity is one of",
    "start": "187019",
    "end": "192959"
  },
  {
    "text": "the very last steps majority of the testing happens after the call is written but by using things",
    "start": "192959",
    "end": "200280"
  },
  {
    "text": "like test-driven development by automating our tests we can shift the majority activities of the majority of",
    "start": "200280",
    "end": "206760"
  },
  {
    "text": "testing activities to the earlier faces and that reduces the number and the",
    "start": "206760",
    "end": "212220"
  },
  {
    "text": "impact of the bugs because the earlier we can catch you back the less expensive it is a bug that is called the",
    "start": "212220",
    "end": "218280"
  },
  {
    "text": "development phase it means that new users have to suffer from it and the bug that is caught in",
    "start": "218280",
    "end": "224099"
  },
  {
    "text": "the planning phase well it means that we don't even have to waste time and resources right in a code that is faulty",
    "start": "224099",
    "end": "230459"
  },
  {
    "text": "defective by the very design well of course it's not free to achieve",
    "start": "230459",
    "end": "235560"
  },
  {
    "text": "that developers have to learn things like testing Frameworks testing methodologies things like junit test",
    "start": "235560",
    "end": "242819"
  },
  {
    "text": "driven development Jenkins pipeline DSL GitHub actions well the just a few",
    "start": "242819",
    "end": "248340"
  },
  {
    "text": "things that now become an everyday part of developers work yet shift and lab doesn't stop with",
    "start": "248340",
    "end": "254459"
  },
  {
    "text": "shift and left the testing the next step may be shift and left security because yes on one hand we need to care about",
    "start": "254459",
    "end": "260699"
  },
  {
    "text": "security especially as as we provide developers freedom to design deploy and",
    "start": "260699",
    "end": "266400"
  },
  {
    "text": "operate their own code in production but on the other hand it means that developers and security Specialists now",
    "start": "266400",
    "end": "272759"
  },
  {
    "text": "have to work together and developers have to learn and take care of security related things like static code analysis",
    "start": "272759",
    "end": "279540"
  },
  {
    "text": "vulnerability scanning and shift in left doesn't even stop there more and more",
    "start": "279540",
    "end": "284580"
  },
  {
    "text": "processes are being shifted left as we speak for example things like data governance we have a problem on one hand",
    "start": "284580",
    "end": "292440"
  },
  {
    "text": "develops as a concept including shifting left all these different practices it removes barriers it let us deliver code",
    "start": "292440",
    "end": "299160"
  },
  {
    "text": "faster with more confidence but on the other hand we got ourselves",
    "start": "299160",
    "end": "304380"
  },
  {
    "text": "a whole new set of headaches we need to navigate between two extremes now we",
    "start": "304380",
    "end": "309840"
  },
  {
    "text": "don't want to introduce a process so rigid that it gets in the way of developing and shipping code yet we",
    "start": "309840",
    "end": "316500"
  },
  {
    "text": "cannot avoid the price that we pay to ensure this content flow of changes",
    "start": "316500",
    "end": "321600"
  },
  {
    "text": "but we can and we should try to minimize this price make it more affordable so",
    "start": "321600",
    "end": "327419"
  },
  {
    "text": "let's talk about how we can do it what can we do to to make the complexity of devops complexity of shift and left more",
    "start": "327419",
    "end": "333900"
  },
  {
    "text": "manageable and what are the problems that we may face along the way first let's take a look at the history",
    "start": "333900",
    "end": "340740"
  },
  {
    "text": "of the problem to see if we can identify the patterns to see if we can",
    "start": "340740",
    "end": "346080"
  },
  {
    "text": "come up with Solutions and I'm going to pay attention at to several things when",
    "start": "346080",
    "end": "353039"
  },
  {
    "text": "I will be reviewing each step of our devops journey I'm going to take a look at communication basically how does the",
    "start": "353039",
    "end": "359639"
  },
  {
    "text": "problems that we Face affect the way we interact who's interacting with whom in the first place I'm going to take a look",
    "start": "359639",
    "end": "365460"
  },
  {
    "text": "at tooling now like what tools work best for each step of the journey how do we even set",
    "start": "365460",
    "end": "371520"
  },
  {
    "text": "up those tools and I'm going to think about look at cognitive loads that happens during bootstrapping during",
    "start": "371520",
    "end": "377520"
  },
  {
    "text": "creation of the new projects and during migration basically I'm going to see how",
    "start": "377520",
    "end": "382860"
  },
  {
    "text": "easy it is to set things up and how easy are the changes and also try to illustrate the journey with some",
    "start": "382860",
    "end": "389699"
  },
  {
    "text": "examples from my day-to-day work where I can well to make sure that the things",
    "start": "389699",
    "end": "394800"
  },
  {
    "text": "I'm talking about are not just hand wavy stuff so how does devops adoption start",
    "start": "394800",
    "end": "401340"
  },
  {
    "text": "you may have a small company a startup or maybe a separate team in a larger company where people realize they want",
    "start": "401340",
    "end": "408360"
  },
  {
    "text": "to ship things fast instead of building artificial bearers they want to identify automate and",
    "start": "408360",
    "end": "414240"
  },
  {
    "text": "eliminate repetitive work whatever this work is in their case so now we may have a cross-functional team that works",
    "start": "414240",
    "end": "421380"
  },
  {
    "text": "together on handful of the services the members of this team The Exchange information mostly in",
    "start": "421380",
    "end": "427979"
  },
  {
    "text": "informal conversations and even if they have documentation even if this documentation exists",
    "start": "427979",
    "end": "433500"
  },
  {
    "text": "it's usually pretty straightforward they may have a Google doc or a Confluence page that people can just state it as",
    "start": "433500",
    "end": "438600"
  },
  {
    "text": "needed at the end tooling at this point tooling the automation is also pretty much ad hoc here's a quick example",
    "start": "438600",
    "end": "446099"
  },
  {
    "text": "we may start with setting up a few GitHub repositories to store the code we can create an instance of exchanging",
    "start": "446099",
    "end": "451860"
  },
  {
    "text": "service to monitor the changes in those repositories and run the build jobs to create Docker images and publish them to",
    "start": "451860",
    "end": "457979"
  },
  {
    "text": "an artifactory and we may have another set of Jenkins jobs that we can set up to test the code",
    "start": "457979",
    "end": "464880"
  },
  {
    "text": "and another set to deploy them to our kubernetes cluster and at this stage we",
    "start": "464880",
    "end": "470520"
  },
  {
    "text": "can totally get away with managing those Jenkins jobs and kubernetes clusters manual or semi-manually because it's not",
    "start": "470520",
    "end": "476699"
  },
  {
    "text": "a big effort it's literally a matter of copy pasting a few lines of code or settings here and there",
    "start": "476699",
    "end": "482759"
  },
  {
    "text": "at this point the goal is more about finding the pain points and automating",
    "start": "482759",
    "end": "487979"
  },
  {
    "text": "the toil removing this manual work from the software development process those few scripts and jobs that you set up",
    "start": "487979",
    "end": "494280"
  },
  {
    "text": "they provide an obvious win you have an automated built-in deployment process which is so much better than deploying",
    "start": "494280",
    "end": "500340"
  },
  {
    "text": "things manually and moreover putting more effort into managing Jenkins and kubernetes",
    "start": "500340",
    "end": "506039"
  },
  {
    "text": "automatically may require more time compared to those small manual changes",
    "start": "506039",
    "end": "511379"
  },
  {
    "text": "after all at this point it's just a few projects and a few people working together something is deployed everybody knows",
    "start": "511379",
    "end": "518159"
  },
  {
    "text": "what happened it's not like you have hundreds of projects to watch in vesting a lot of time into automating",
    "start": "518159",
    "end": "524219"
  },
  {
    "text": "something experimental something that you're not even sure is going to work for you in the long run well it may not",
    "start": "524219",
    "end": "531000"
  },
  {
    "text": "be worth it at all so what about making changes about migration sure let's place things up",
    "start": "531000",
    "end": "539640"
  },
  {
    "text": "what if we decide that regular kubernetes deployments are not enough what if we want",
    "start": "539640",
    "end": "545300"
  },
  {
    "text": "Advanced scannery analysis and decide to use spinaker instead of Jenkins because",
    "start": "545300",
    "end": "550800"
  },
  {
    "text": "Spinnaker provides Canary support out of the box so let's go ahead and use it it's a great tool",
    "start": "550800",
    "end": "557339"
  },
  {
    "text": "well it's still pretty straightforward we can decide to do an experiment we can choose one of the projects and we can",
    "start": "557339",
    "end": "564240"
  },
  {
    "text": "keep tinkering until we get everything right then we can just proceed with the rest of the services",
    "start": "564240",
    "end": "569880"
  },
  {
    "text": "we can keep disabling Jenkins jobs and enabling Spinnaker pipelines project by project because the risk of something",
    "start": "569880",
    "end": "576899"
  },
  {
    "text": "going wrong the risk of something being left in a broken or incomplete status law because",
    "start": "576899",
    "end": "582600"
  },
  {
    "text": "you literally can't count the number of places where you need to make changes on one hand and you can do this change in",
    "start": "582600",
    "end": "590220"
  },
  {
    "text": "one sitting if you have five micro services in your carry and if you need to upgrade a pipeline for",
    "start": "590220",
    "end": "596640"
  },
  {
    "text": "each of them it's not too hard to find the owners maybe just a couple of people in your team or company as for the tooling it's",
    "start": "596640",
    "end": "604440"
  },
  {
    "text": "basically anything that works for you if it solves a problem it basically doesn't matter yet how you",
    "start": "604440",
    "end": "610620"
  },
  {
    "text": "set it up yes there is some additional work for all involved parties but",
    "start": "610620",
    "end": "615660"
  },
  {
    "text": "it's not overwhelming yet because the size of the effort itself is limited and there is an immediate noticeable win the",
    "start": "615660",
    "end": "622320"
  },
  {
    "text": "developers don't have to worry about manual steps about repetitive tasks they can concentrate on code in uh and that",
    "start": "622320",
    "end": "630180"
  },
  {
    "text": "approach produces cognitive load for Developers the stage where you just have a handful",
    "start": "630180",
    "end": "636180"
  },
  {
    "text": "of services so here is a real life example even in Netflix with all the best practices with all the automation",
    "start": "636180",
    "end": "643019"
  },
  {
    "text": "there is still room for solutions that are managed manually for example this particular application has some caches",
    "start": "643019",
    "end": "649800"
  },
  {
    "text": "and those caches have to be warmed up because application has to",
    "start": "649800",
    "end": "657300"
  },
  {
    "text": "um to make sure that it has warm caches before it can start accepting production",
    "start": "657300",
    "end": "663660"
  },
  {
    "text": "traffic if we don't do that it performance drops dramatically so this",
    "start": "663660",
    "end": "669600"
  },
  {
    "text": "pipeline was just created manually by the team holds this application and its mind feature is this custom delays",
    "start": "669600",
    "end": "675779"
  },
  {
    "text": "before starting to accept live traffic and since this is a single pipeline that",
    "start": "675779",
    "end": "681839"
  },
  {
    "text": "serves a single application maintenance and support is not a huge deal because updating our tuning this pipeline once a",
    "start": "681839",
    "end": "688140"
  },
  {
    "text": "quarter or less is not a huge deal and since the team that manages this pipeline is small it's not hard to find",
    "start": "688140",
    "end": "694019"
  },
  {
    "text": "the people who are responsible for maintaining it and updating it is also",
    "start": "694019",
    "end": "699660"
  },
  {
    "text": "pretty straightforward because the pipeline is pretty much self-contained it doesn't have any external",
    "start": "699660",
    "end": "705120"
  },
  {
    "text": "dependencies that people need to worry about they can just make whatever changes they need and this manual",
    "start": "705120",
    "end": "711779"
  },
  {
    "text": "pipeline manually maintaining pipeline provides an immediate benefit it solves the performance issues that are caused",
    "start": "711779",
    "end": "717240"
  },
  {
    "text": "by cold caches and it reduces removes the cognitive load created by shift and",
    "start": "717240",
    "end": "723600"
  },
  {
    "text": "left those operational duties however as the number of applications",
    "start": "723600",
    "end": "729180"
  },
  {
    "text": "keep growing as they become more complex we Face new challenges because it's now harder to keep track of what users want",
    "start": "729180",
    "end": "737160"
  },
  {
    "text": "we may have a few applications that are written in Ruby and the rest of Publications written in Java some of the",
    "start": "737160",
    "end": "743760"
  },
  {
    "text": "of the Java applications maybe on Java 11 some of those Java applications may be on Java 17 already and on top of that",
    "start": "743760",
    "end": "750480"
  },
  {
    "text": "you have more people managing those applications even with bootstrapping when you have",
    "start": "750480",
    "end": "755579"
  },
  {
    "text": "new developers who want to create a new service it's not easy for those new developers to find the right example whatever right means in their particular",
    "start": "755579",
    "end": "762180"
  },
  {
    "text": "context even finding the right person to talk to about this may be challenging the",
    "start": "762180",
    "end": "767940"
  },
  {
    "text": "maintenance of applications become more problematic as well because if I have an improvement that I need to share across",
    "start": "767940",
    "end": "774600"
  },
  {
    "text": "the whole Fleet I need to track down all their services all the owners and that's",
    "start": "774600",
    "end": "779940"
  },
  {
    "text": "not easy anymore for example if we take our migration scenario where we set up Spinnaker pipelines with Canary",
    "start": "779940",
    "end": "786720"
  },
  {
    "text": "deployments and we keep disabling all Jenkins jobs looks like a doable on the first glance",
    "start": "786720",
    "end": "792360"
  },
  {
    "text": "however when we start scaling this approach we quickly run into our next issue once you're trying to migrate",
    "start": "792360",
    "end": "798779"
  },
  {
    "text": "dozens or hundreds of applications you cannot just keep doing this manually because you have too many things to keep",
    "start": "798779",
    "end": "805380"
  },
  {
    "text": "in mind too many things that can just go wrong when you have hundreds of applications",
    "start": "805380",
    "end": "812120"
  },
  {
    "text": "somebody will forget to do something somebody will mess up this setting so",
    "start": "812120",
    "end": "818100"
  },
  {
    "text": "they will start the migrations get distracted we'll leave an incomplete broken State they will forget about that",
    "start": "818100",
    "end": "824820"
  },
  {
    "text": "imagine what if the production incident happens and you need to figure out what state your application infrastructure is",
    "start": "824820",
    "end": "831480"
  },
  {
    "text": "in people will be just overwhelmed with this amount of work just tracking all",
    "start": "831480",
    "end": "837000"
  },
  {
    "text": "the changes coordinating all the efforts is not an easy problem anymore and that's exactly",
    "start": "837000",
    "end": "842519"
  },
  {
    "text": "the problem we started with we have created more cognitive load for",
    "start": "842519",
    "end": "847800"
  },
  {
    "text": "the developers by shifting left those operational duties and that cognitive",
    "start": "847800",
    "end": "852959"
  },
  {
    "text": "load doesn't bring any immediate benefits so here we come to the concept of paved",
    "start": "852959",
    "end": "860519"
  },
  {
    "text": "path and it is known under different names it's called paste path in one company it's called Golden path in other",
    "start": "860519",
    "end": "867000"
  },
  {
    "text": "companies but result is the same the paved path is an attempt to find a balance between old school gatekeeping",
    "start": "867000",
    "end": "873660"
  },
  {
    "text": "and a free-for-all approach usually once it's clear that a free-for-all approach produces too much chaos creates too much",
    "start": "873660",
    "end": "880079"
  },
  {
    "text": "for cognitive load people start looking for alternative for guidance they start looking for a better",
    "start": "880079",
    "end": "886620"
  },
  {
    "text": "solution and I may say for more centralized Solutions people start to",
    "start": "886620",
    "end": "892079"
  },
  {
    "text": "feel a need for experts that can just solve problems for them those experts",
    "start": "892079",
    "end": "897540"
  },
  {
    "text": "may be just a few volunteers originally or they may compose a separate platform team and",
    "start": "897540",
    "end": "904440"
  },
  {
    "text": "that expert those experts can provide the rest of developments development with curated Solutions selecting those",
    "start": "904440",
    "end": "912060"
  },
  {
    "text": "Solutions like curator select art pieces for an exhibition so here we start to",
    "start": "912060",
    "end": "917519"
  },
  {
    "text": "see separation of responsibilities experts choose solutions that work out",
    "start": "917519",
    "end": "922740"
  },
  {
    "text": "of the box they guarantee a certain level of support and developers are free either",
    "start": "922740",
    "end": "928980"
  },
  {
    "text": "to use those Solutions Auto experiment with other tools was",
    "start": "928980",
    "end": "934199"
  },
  {
    "text": "known as they understand the consequence of those experiments as long as they take the responsibility for those",
    "start": "934199",
    "end": "941100"
  },
  {
    "text": "experiments for example if Cassandra's is provided as a curated",
    "start": "941100",
    "end": "946560"
  },
  {
    "text": "solution and if there's something wrong with your Cassandra clusters developers may just rely on Experts to",
    "start": "946560",
    "end": "953339"
  },
  {
    "text": "have a set of metrics set of alerts to warn about the problem developers May rely on Experts to",
    "start": "953339",
    "end": "959519"
  },
  {
    "text": "diagnose and fix those Cassandra specific problems basically developers don't have to worry about becoming",
    "start": "959519",
    "end": "964920"
  },
  {
    "text": "Cassandra Express themselves yet developers are still free to use any",
    "start": "964920",
    "end": "969959"
  },
  {
    "text": "non-standard solution if they feel like they need to use not 4G for their particular application they",
    "start": "969959",
    "end": "976560"
  },
  {
    "text": "can do it as long as they are willing to take care of it themselves basically we see the change in interaction this stage",
    "start": "976560",
    "end": "983579"
  },
  {
    "text": "introduces clear separation of responsibilities it doesn't matter yet if this separation",
    "start": "983579",
    "end": "989220"
  },
  {
    "text": "is formal as long as everybody has clear understanding clear expectations",
    "start": "989220",
    "end": "994860"
  },
  {
    "text": "um set up between those two different roles so what about the tooling at this stage",
    "start": "994860",
    "end": "1000259"
  },
  {
    "text": "well let's start with bootstrapping when it comes to bootstrapping creating a new service developers don't want to worry",
    "start": "1000259",
    "end": "1007519"
  },
  {
    "text": "about rediscovering how to bootstrap an application how to create a new infrastructure each time they create a",
    "start": "1007519",
    "end": "1014120"
  },
  {
    "text": "new service Heaven is single single point of entry helps here if you have a developer portal or a",
    "start": "1014120",
    "end": "1020300"
  },
  {
    "text": "command line tool that you just use every day to find the applications operate them and create them it makes that so much",
    "start": "1020300",
    "end": "1027558"
  },
  {
    "text": "easier to find this paved path you just use this tool or portal every day you built your muscle memory in",
    "start": "1027559",
    "end": "1034160"
  },
  {
    "text": "common sense it tells us that developers usually have less experience creating new Services than maintaining or",
    "start": "1034160",
    "end": "1040220"
  },
  {
    "text": "operating existing ones but if both creation and operating the",
    "start": "1040220",
    "end": "1046459"
  },
  {
    "text": "services uses the same entry point developers don't have to remember how to do this less frequent thing that is",
    "start": "1046459",
    "end": "1052760"
  },
  {
    "text": "creating a service setting up all the related infrastructure yes developers may not remember all the steps",
    "start": "1052760",
    "end": "1059660"
  },
  {
    "text": "but at least they remember that there is a big bot and called create a new service and they know where to find it",
    "start": "1059660",
    "end": "1065960"
  },
  {
    "text": "or if you have a command line tool developers can know how to run a health command and find the actual command they",
    "start": "1065960",
    "end": "1072440"
  },
  {
    "text": "need to run so let's talk about the next step we can use the single point of entry to create",
    "start": "1072440",
    "end": "1078260"
  },
  {
    "text": "whatever infrastructure whatever resources are needed for the project bootstrapping",
    "start": "1078260",
    "end": "1083539"
  },
  {
    "text": "but what is done exactly well to do it properly we need to treat our",
    "start": "1083539",
    "end": "1088640"
  },
  {
    "text": "infrastructure as gold and not just operational infrastructure like kubernetes clusters load balancers",
    "start": "1088640",
    "end": "1094940"
  },
  {
    "text": "databases we need to take care of all infrastructure including infrastructure that covers",
    "start": "1094940",
    "end": "1100880"
  },
  {
    "text": "different aspects of software development different things that are shifted left like build and deploy like",
    "start": "1100880",
    "end": "1106160"
  },
  {
    "text": "testing like security and all other aspects of your software development we can definitely do it now we have",
    "start": "1106160",
    "end": "1112340"
  },
  {
    "text": "multiple tools we have things like GitHub actions changing pipeline they sell other tools that we can just",
    "start": "1112340",
    "end": "1118480"
  },
  {
    "text": "configurus code and use those solutions to address our problems and why is it",
    "start": "1118480",
    "end": "1124340"
  },
  {
    "text": "important why do we want to have that code because this way we can reuse the same",
    "start": "1124340",
    "end": "1130460"
  },
  {
    "text": "code for different projects code can and should take inputs and we can abstract",
    "start": "1130460",
    "end": "1135559"
  },
  {
    "text": "implementation details away we can let developers answer high-level questions and the code can use those answers as",
    "start": "1135559",
    "end": "1143059"
  },
  {
    "text": "inputs to create the infrastructure we need eliminating the need to do these",
    "start": "1143059",
    "end": "1148220"
  },
  {
    "text": "repetitive tasks by hand again and again it removes the cognitive load that exists the hand infrastructure is",
    "start": "1148220",
    "end": "1154760"
  },
  {
    "text": "managed manually so what kind of code works best here",
    "start": "1154760",
    "end": "1160460"
  },
  {
    "text": "well in my experience imperative code may not be a good feed",
    "start": "1160460",
    "end": "1165679"
  },
  {
    "text": "because yes you can write a script to create a new deployment pipeline for example yet it",
    "start": "1165679",
    "end": "1172820"
  },
  {
    "text": "also means that in your imperative code you have to account for each and every",
    "start": "1172820",
    "end": "1178880"
  },
  {
    "text": "Edge case because basically you're saying please change the current state",
    "start": "1178880",
    "end": "1184340"
  },
  {
    "text": "of the world this particular way and if the current state is not",
    "start": "1184340",
    "end": "1189380"
  },
  {
    "text": "something that you expect you may face an error because what if the deployment pipeline you're trying to create what if",
    "start": "1189380",
    "end": "1194780"
  },
  {
    "text": "it already exists but if it exists but has a different configuration well they do then how do",
    "start": "1194780",
    "end": "1200660"
  },
  {
    "text": "you reconcile those States and you need to account for them I think that declarative approach works so much",
    "start": "1200660",
    "end": "1207740"
  },
  {
    "text": "better for infrastructure with the declarative approach you can describe infrastructures versus any",
    "start": "1207740",
    "end": "1213620"
  },
  {
    "text": "resources basically by saying I want the state of the world to be like that many",
    "start": "1213620",
    "end": "1220100"
  },
  {
    "text": "tools figure out whatever changes are necessary to achieve that particular goal",
    "start": "1220100",
    "end": "1225260"
  },
  {
    "text": "declarative tools they give you a benefit of item potency because no matter how many times you run them they",
    "start": "1225260",
    "end": "1232640"
  },
  {
    "text": "will leave your world in the same state each time you run them you don't have to create unique deployment Scripts you",
    "start": "1232640",
    "end": "1239960"
  },
  {
    "text": "don't need to adjust those scripts each time you change something if you need to make a change you change the Declaration",
    "start": "1239960",
    "end": "1245480"
  },
  {
    "text": "itself and the declarative tools will take care of whatever steps are needed to make it happen",
    "start": "1245480",
    "end": "1251960"
  },
  {
    "text": "if you need to provision a pipeline it doesn't exist well with declarative approach it will be created if it exists",
    "start": "1251960",
    "end": "1258080"
  },
  {
    "text": "already nothing will happen and if it exists but if there is a there is a configuration discrepancy it will be",
    "start": "1258080",
    "end": "1264620"
  },
  {
    "text": "reconciled and you don't have to do anything special the process is the same in all the cases",
    "start": "1264620",
    "end": "1270620"
  },
  {
    "text": "so let's Supply this approach to our pave path where we have a separation of responsibilities where we have experts",
    "start": "1270620",
    "end": "1277640"
  },
  {
    "text": "who work on solutions that developers can use and now developers can Define our paved path using declarative tools",
    "start": "1277640",
    "end": "1284600"
  },
  {
    "text": "they can Define Jenkins jobs using declarative pipeline DSL for example they can describe those jobs as code",
    "start": "1284600",
    "end": "1291020"
  },
  {
    "text": "they can set up automation that convince this code to the repositories they decide to use the pace path and",
    "start": "1291020",
    "end": "1296659"
  },
  {
    "text": "developers don't have to do anything about it it just works as for the migrations for migrations we",
    "start": "1296659",
    "end": "1303799"
  },
  {
    "text": "can go back to our examples when experts decide to introduce Canary deployments when they decide to migrate to Spinnaker",
    "start": "1303799",
    "end": "1310400"
  },
  {
    "text": "instead of Jenkins they can set up different declarative code that describes those speaker",
    "start": "1310400",
    "end": "1315860"
  },
  {
    "text": "pipelines they can keep using the same approach basically they can keep delivering zero",
    "start": "1315860",
    "end": "1321980"
  },
  {
    "text": "effort migrations to the developers they just change the Declaration and it modifies the infrastructure",
    "start": "1321980",
    "end": "1328159"
  },
  {
    "text": "transparently yes we added a bit of work that a handful of experts have to deal with to reduce a",
    "start": "1328159",
    "end": "1334880"
  },
  {
    "text": "lot of serious cognitive load that unstructured manual Solutions create on scale for everybody first and foremost",
    "start": "1334880",
    "end": "1341179"
  },
  {
    "text": "for the Developers let's try to make this example more",
    "start": "1341179",
    "end": "1346400"
  },
  {
    "text": "concrete if we go back to the concept of single point of entry in Netflix we use a command line tool",
    "start": "1346400",
    "end": "1353539"
  },
  {
    "text": "called Newt we use it for development because it provides Center points for most common actions for different kind",
    "start": "1353539",
    "end": "1359480"
  },
  {
    "text": "of projects projects like Java projects not JS projects you can still use new to",
    "start": "1359480",
    "end": "1365419"
  },
  {
    "text": "build them or to run and debug them locally so it's easy to find a command to",
    "start": "1365419",
    "end": "1372020"
  },
  {
    "text": "bootstrap to create a new project and even if you don't remember that you can always call need help and when a new",
    "start": "1372020",
    "end": "1377600"
  },
  {
    "text": "project is created new tasks a bunch of human friendly questions human readable",
    "start": "1377600",
    "end": "1382820"
  },
  {
    "text": "questions and then converts them into the infrastructure we talked about like Jenkins jobs for example",
    "start": "1382820",
    "end": "1389600"
  },
  {
    "text": "behind the scenes it integrates with another in-house declarative tool that in turn takes care of talking to Jade",
    "start": "1389600",
    "end": "1398120"
  },
  {
    "text": "can spinaker other Solutions and now experts can codify and templatize those",
    "start": "1398120",
    "end": "1404900"
  },
  {
    "text": "resources that they need to create like change his jobs and Spinnaker pipelines tooling can help developers configure",
    "start": "1404900",
    "end": "1412520"
  },
  {
    "text": "Jenkins jobs individually for each particular app some settings like application name or",
    "start": "1412520",
    "end": "1418460"
  },
  {
    "text": "git repository URL can just be set up automatically in the newly created jobs",
    "start": "1418460",
    "end": "1423559"
  },
  {
    "text": "and on top of that whole blocks steps of the process parts of the jobs can be",
    "start": "1423559",
    "end": "1429380"
  },
  {
    "text": "configured conditionally using the inputs provided by developers and just a small part of the templated engine then",
    "start": "1429380",
    "end": "1436220"
  },
  {
    "text": "those templates are rendered to provide whatever output is needed by the by the",
    "start": "1436220",
    "end": "1442520"
  },
  {
    "text": "system they talk to like Jenkins they can use XML to describe Jenkins jobs they can use Json to describe Spinnaker",
    "start": "1442520",
    "end": "1448580"
  },
  {
    "text": "pipelines and so on then that declarative tool can take care of creation or update in the resources as",
    "start": "1448580",
    "end": "1454760"
  },
  {
    "text": "needed so here we have a piece of templates XML that can take inputs and can produce a proper Jenkins job and",
    "start": "1454760",
    "end": "1461960"
  },
  {
    "text": "that just solves the problem of bootstrapping and on top of that it solves the problem of migration too",
    "start": "1461960",
    "end": "1468740"
  },
  {
    "text": "the factors need to make the change to infrastructure they can just make the change to this particular template it",
    "start": "1468740",
    "end": "1474740"
  },
  {
    "text": "can be something as serious as replace in a Jenkins job for the Spinnaker pipeline like in our theoretical example",
    "start": "1474740",
    "end": "1481159"
  },
  {
    "text": "or it can be something much more targeted like replacing a Jenkins plugin in a specific Jenkins jobs that we do",
    "start": "1481159",
    "end": "1488240"
  },
  {
    "text": "here or it can address security issues in AWS metadata service like in this",
    "start": "1488240",
    "end": "1494419"
  },
  {
    "text": "particular example when you manage fleets of applications you know that such changes are regular they happen",
    "start": "1494419",
    "end": "1501260"
  },
  {
    "text": "often they happen every week if not every day and if you have to do the manually they they just",
    "start": "1501260",
    "end": "1508220"
  },
  {
    "text": "turn into death by a Thousand Cuts but if you can automate this kind of change if you can just update the",
    "start": "1508220",
    "end": "1514580"
  },
  {
    "text": "Declaration and roll it out to the whole Fleet you can save yourself days or weeks of",
    "start": "1514580",
    "end": "1519980"
  },
  {
    "text": "hurting the cats of trying to pull away developers from their regular work from coding from solving business problem you",
    "start": "1519980",
    "end": "1526159"
  },
  {
    "text": "don't have to force them now to do infrastructure migrations that not in their duties anymore and when you have",
    "start": "1526159",
    "end": "1533299"
  },
  {
    "text": "dozens of applications that's already a significant win and when you have hundreds or more well this",
    "start": "1533299",
    "end": "1540679"
  },
  {
    "text": "approach is a lifesaver if you ask me however as the company grows one paved",
    "start": "1540679",
    "end": "1548059"
  },
  {
    "text": "path may not be enough because for more homogeneous companies for more homogeneous teams it may be okay if all",
    "start": "1548059",
    "end": "1554059"
  },
  {
    "text": "developers are working on the same set of problems it totally makes sense to stick to the same set of solutions yet if your",
    "start": "1554059",
    "end": "1560480"
  },
  {
    "text": "company is big enough it may no longer be the case for example in Netflix developers who",
    "start": "1560480",
    "end": "1566360"
  },
  {
    "text": "work on streaming projects they have to deal with high load High availability systems who with clear traffic Peaks",
    "start": "1566360",
    "end": "1574220"
  },
  {
    "text": "because a lot of people come home after work and start watching movies starting at 6 PM Eastern Time",
    "start": "1574220",
    "end": "1581659"
  },
  {
    "text": "on the other hand developers who work on Studio automation well those developers solve problems that are not less",
    "start": "1581659",
    "end": "1588440"
  },
  {
    "text": "important but those problems have totally different aspects different traffic patterns different availability",
    "start": "1588440",
    "end": "1594500"
  },
  {
    "text": "requirements different latency requirements and so on and what works for Studio may not work",
    "start": "1594500",
    "end": "1600440"
  },
  {
    "text": "for streaming and the other way around for example Cannery deployments where you're all out a new version of your",
    "start": "1600440",
    "end": "1605900"
  },
  {
    "text": "service to just a few percent of your user base well it works fine in streaming but it may not provide a good",
    "start": "1605900",
    "end": "1612200"
  },
  {
    "text": "reliable signal in studio just because the size of the user base",
    "start": "1612200",
    "end": "1617240"
  },
  {
    "text": "is so different it may be different by a few orders of magnitude to be honest",
    "start": "1617240",
    "end": "1622279"
  },
  {
    "text": "and a single shared path no longer works in this situation and to make this situation even more complicated the",
    "start": "1622279",
    "end": "1628880"
  },
  {
    "text": "parts of different pave paths my intersective was to the stream and prefer Java for their back end it makes",
    "start": "1628880",
    "end": "1635360"
  },
  {
    "text": "sense to implement that part of the paved path only once and then compose those parts that needed so what's the",
    "start": "1635360",
    "end": "1640460"
  },
  {
    "text": "best way to do it how do we approach composable bypass what what do we need to implement to enable it",
    "start": "1640460",
    "end": "1645919"
  },
  {
    "text": "well first of all a single set of neutral experts is not going to work anymore",
    "start": "1645919",
    "end": "1651200"
  },
  {
    "text": "because yes definitely some of these experts can and should work on the pieces that can be reused across the board",
    "start": "1651200",
    "end": "1658279"
  },
  {
    "text": "but multiple composable paste path they actually require specialized knowledge they require experts who are familiar",
    "start": "1658279",
    "end": "1665480"
  },
  {
    "text": "with particular domain area with the problems of a specific organization so",
    "start": "1665480",
    "end": "1671000"
  },
  {
    "text": "we're going to see an additional separation of duties here now we have organization level experts",
    "start": "1671000",
    "end": "1677120"
  },
  {
    "text": "that can work on solutions to be used in the particular team particular organization and in turn those experts",
    "start": "1677120",
    "end": "1683179"
  },
  {
    "text": "they can rely on common platform solutions that are provided by company level experts like a platform",
    "start": "1683179",
    "end": "1689000"
  },
  {
    "text": "organization if we go back to our example of stream Universal Studio we may have streaming experts who solve",
    "start": "1689000",
    "end": "1694820"
  },
  {
    "text": "problems that are specific to streaming like what does it take to save the redeploy a massive Fleet of service",
    "start": "1694820",
    "end": "1699860"
  },
  {
    "text": "while handling regular daily traffic spikes and platform experts can provide",
    "start": "1699860",
    "end": "1705500"
  },
  {
    "text": "building blocks that can be reused by both streaming and studio for example they can provide managed database Solutions or manage Security Solutions",
    "start": "1705500",
    "end": "1713000"
  },
  {
    "text": "second when it comes to actual implementation we are going to have parts that are identical according unit",
    "start": "1713000",
    "end": "1719120"
  },
  {
    "text": "tests and parts that are different like using Canary deployments which work",
    "start": "1719120",
    "end": "1724400"
  },
  {
    "text": "much better for high traffic applications and implementing each path separately means that we are creating a",
    "start": "1724400",
    "end": "1730340"
  },
  {
    "text": "risk of implemented identical things twice which increase the maintenance burden because things have to be",
    "start": "1730340",
    "end": "1735559"
  },
  {
    "text": "implemented twice at the very beginning and the change also has to be duplicated in the standard paste path approach",
    "start": "1735559",
    "end": "1742760"
  },
  {
    "text": "we can just codify the best practices using declarative tools however when we have multiple paved paths when they",
    "start": "1742760",
    "end": "1749059"
  },
  {
    "text": "share certain practices we need to split the code as well to separate those different practices to keep them apart",
    "start": "1749059",
    "end": "1755240"
  },
  {
    "text": "for example if we have paste path that has distinct step like built-in deploy then each step should be codified and",
    "start": "1755240",
    "end": "1761899"
  },
  {
    "text": "versioned separately if those steps depend on each other the dependencies should be set explicitly",
    "start": "1761899",
    "end": "1767120"
  },
  {
    "text": "like that because deploy depends on on the build not the other way around and by doing this we are going to get a",
    "start": "1767120",
    "end": "1774200"
  },
  {
    "text": "quick win because if we know uh which version of its infrastructure is used",
    "start": "1774200",
    "end": "1779659"
  },
  {
    "text": "for which app we can avoid the mass like I don't know what's happening with an app X",
    "start": "1779659",
    "end": "1786080"
  },
  {
    "text": "we can avoid strict gatekeeping like it has to be this way because it's written like that no other ways possible we can",
    "start": "1786080",
    "end": "1792559"
  },
  {
    "text": "separate different paths and provide different ways of doing things and",
    "start": "1792559",
    "end": "1798140"
  },
  {
    "text": "what's most important we can avoid big band migrations like let's migrate everything in first because this is the",
    "start": "1798140",
    "end": "1804200"
  },
  {
    "text": "way things should be done because we only have one pave path and we cannot do anything about it",
    "start": "1804200",
    "end": "1809600"
  },
  {
    "text": "instead we can try new Solutions we can try them with a few select app for us to",
    "start": "1809600",
    "end": "1814820"
  },
  {
    "text": "see if we see have any issues and if there are issues we can safely go to the previous good",
    "start": "1814820",
    "end": "1822380"
  },
  {
    "text": "version since we're using the declarative approach we're saying I want the state of the world to be like that",
    "start": "1822380",
    "end": "1827779"
  },
  {
    "text": "and we are not doing imperative migrations where we say do action Z with my existing resources to change their",
    "start": "1827779",
    "end": "1834860"
  },
  {
    "text": "state from X to Y because this imperative approach may require another imperative migration to go back to the",
    "start": "1834860",
    "end": "1841460"
  },
  {
    "text": "previous state in case something is wrong and that can be especially tricky",
    "start": "1841460",
    "end": "1846799"
  },
  {
    "text": "if the original rollout was just partially successful and the actual state is something between X and Y so",
    "start": "1846799",
    "end": "1853520"
  },
  {
    "text": "let's see how this approach plays out with our original migration example where we migrate deployment pipelines",
    "start": "1853520",
    "end": "1859340"
  },
  {
    "text": "from Jenkins to Spinnaker we can have two big infrastructure block like building deploy we can codify them",
    "start": "1859340",
    "end": "1865940"
  },
  {
    "text": "separately we can version them separately we can Define version requirements and since we're breaking making a breaking",
    "start": "1865940",
    "end": "1872120"
  },
  {
    "text": "change we can even increment a major version of our deploy step and roll it",
    "start": "1872120",
    "end": "1877340"
  },
  {
    "text": "out first to just a small subset of our applications and then when we make sure",
    "start": "1877340",
    "end": "1882380"
  },
  {
    "text": "that it doesn't break anything we can roll it out to the whole Fleet this way we can minimize the blast radius we can",
    "start": "1882380",
    "end": "1888860"
  },
  {
    "text": "maximize our confidence because versioning each part of our infrastructure code separately it gives",
    "start": "1888860",
    "end": "1895039"
  },
  {
    "text": "us better visibility better control and if we decide to keep splitting our page path into multiple into two or more we",
    "start": "1895039",
    "end": "1901820"
  },
  {
    "text": "can keep the duplicating the common parts and we can keep separate parts well separate",
    "start": "1901820",
    "end": "1907760"
  },
  {
    "text": "basically we apply the standard coding practices versioning code reuse control",
    "start": "1907760",
    "end": "1912919"
  },
  {
    "text": "rollouts with our paved paths being represented as code and this approach is not limited to",
    "start": "1912919",
    "end": "1918260"
  },
  {
    "text": "updating deployment Pipelines any solution that you can clarify declaratively can be managed this way",
    "start": "1918260",
    "end": "1924140"
  },
  {
    "text": "with security be testing be something else and the result is reduction of",
    "start": "1924140",
    "end": "1929360"
  },
  {
    "text": "cognitive law during migrations for both developers and the experts",
    "start": "1929360",
    "end": "1935000"
  },
  {
    "text": "organization level experts don't have to reinvent the wheel for each separate path",
    "start": "1935000",
    "end": "1941120"
  },
  {
    "text": "they can reuse common building blocks and they can focus on solving problems providing curated solutions that are",
    "start": "1941120",
    "end": "1948559"
  },
  {
    "text": "common to particular team particular part of their organization or company and one example I can mention from my",
    "start": "1948559",
    "end": "1956659"
  },
  {
    "text": "Netflix experience is splitting regular grpc applications that",
    "start": "1956659",
    "end": "1962720"
  },
  {
    "text": "are mostly used in streaming and graphql applications that are common in studio into two different paths",
    "start": "1962720",
    "end": "1968659"
  },
  {
    "text": "this way organization level experts are able to focus on solving their specific",
    "start": "1968659",
    "end": "1974779"
  },
  {
    "text": "tasks without worrying about the single paved path becoming too bloated too",
    "start": "1974779",
    "end": "1980480"
  },
  {
    "text": "complex to maintain and manage those parts have significant differences I'm only showing those significantly",
    "start": "1980480",
    "end": "1986240"
  },
  {
    "text": "different parts here so for example grpc applications publish the protobuf the",
    "start": "1986240",
    "end": "1992899"
  },
  {
    "text": "grpc scanner the grpc contract as a part of the client publishing and promotion",
    "start": "1992899",
    "end": "1998179"
  },
  {
    "text": "process it's actually included in the client's jar maybe a candidate jar or release jar and since those applications",
    "start": "1998179",
    "end": "2005200"
  },
  {
    "text": "usually have more predictable traffic they rely more on canneries on the other hand",
    "start": "2005200",
    "end": "2011260"
  },
  {
    "text": "graphql application deployment process is more simple but those applications they need to rely",
    "start": "2011260",
    "end": "2017380"
  },
  {
    "text": "on a special pipeline stage to publish their graphql schemas the graphql contact because they are not published",
    "start": "2017380",
    "end": "2024460"
  },
  {
    "text": "as jar they are published to a standalone graphql registry and if we",
    "start": "2024460",
    "end": "2029559"
  },
  {
    "text": "kept all the solutions as part of one spaghetti like paved path with tone of",
    "start": "2029559",
    "end": "2034899"
  },
  {
    "text": "configurations options well this approach would be next to Impossible but separating those parts teasing them",
    "start": "2034899",
    "end": "2041980"
  },
  {
    "text": "apart it allowed experts from different organizations to work independently without stepping on each other toes",
    "start": "2041980",
    "end": "2050618"
  },
  {
    "text": "well you may you might ask me it all sounds great but what are the downsides",
    "start": "2050619",
    "end": "2056080"
  },
  {
    "text": "what can possibly go wrong here and that's a great question that's a loaded question because any model looks great",
    "start": "2056080",
    "end": "2061960"
  },
  {
    "text": "in theory but in practice there is always that catches you off guard",
    "start": "2061960",
    "end": "2067179"
  },
  {
    "text": "one of the most common problems in software engineer is solving an interesting problem instead of solving a",
    "start": "2067179",
    "end": "2072280"
  },
  {
    "text": "problem you actually have because many people want to do things like Google does or like Netflix does and very often",
    "start": "2072280",
    "end": "2078398"
  },
  {
    "text": "it's the right thing to do but a lot of time other companies smaller World Companies maybe don't even",
    "start": "2078399",
    "end": "2085358"
  },
  {
    "text": "have these same kinds of problems that larger companies suffer from and when it comes to devops when it",
    "start": "2085359",
    "end": "2091839"
  },
  {
    "text": "comes to choosing the right tool and then the right approach same we have been talking about",
    "start": "2091839",
    "end": "2097720"
  },
  {
    "text": "different stages of devops Journey and the tools you're going to need are",
    "start": "2097720",
    "end": "2102940"
  },
  {
    "text": "different too definitely makes sense to first see where you are oh just starting",
    "start": "2102940",
    "end": "2109960"
  },
  {
    "text": "do you want to have a handful of services to manage maybe you already have hundreds of",
    "start": "2109960",
    "end": "2115359"
  },
  {
    "text": "services it also makes sense to check the Dynamics if you go into explosive growth and you",
    "start": "2115359",
    "end": "2121839"
  },
  {
    "text": "think it's very likely that 15 or free services will turn into 200 pretty soon",
    "start": "2121839",
    "end": "2127540"
  },
  {
    "text": "then it may make sense to start planning planning for the next step to make sure that you don't commit to the solution",
    "start": "2127540",
    "end": "2133480"
  },
  {
    "text": "that will hold you back in the near future also you want to have you want to find",
    "start": "2133480",
    "end": "2140020"
  },
  {
    "text": "the right level of obstruction because too much obstruction may not be a good thing",
    "start": "2140020",
    "end": "2145359"
  },
  {
    "text": "as we hide things away you may end up hiding things that may not be essential",
    "start": "2145359",
    "end": "2150760"
  },
  {
    "text": "for day-to-day operation and you think it's it's a great idea it's going to reduce cognitive thought but",
    "start": "2150760",
    "end": "2156760"
  },
  {
    "text": "those things may be critical when you're dealing with a production incident",
    "start": "2156760",
    "end": "2161920"
  },
  {
    "text": "when you're investigating it when you're looking at a broken service when you're trying to find out what is wrong is",
    "start": "2161920",
    "end": "2167560"
  },
  {
    "text": "my colleague Lauren once noted on Twitter it's impossible to find an obstruction that is going to work for",
    "start": "2167560",
    "end": "2173260"
  },
  {
    "text": "everybody if you can make it possible for people to navigate through layers of",
    "start": "2173260",
    "end": "2178359"
  },
  {
    "text": "obstruction to understand what actually happens how do you navigate abstractions",
    "start": "2178359",
    "end": "2185200"
  },
  {
    "text": "well two things are important there are first you need to understand the effects",
    "start": "2185200",
    "end": "2190240"
  },
  {
    "text": "of your change you need to understand what is going to happen if I make this change",
    "start": "2190240",
    "end": "2196000"
  },
  {
    "text": "which system are going to be affected second you need to understand the cause",
    "start": "2196000",
    "end": "2201880"
  },
  {
    "text": "of the change that has already happened I need to understand things like if I",
    "start": "2201880",
    "end": "2207220"
  },
  {
    "text": "see my system in this particular standard State what was the change to cause it and if your abstractions can",
    "start": "2207220",
    "end": "2213099"
  },
  {
    "text": "help you with that then you have the right level of obstructions however finding the right level is a topic that",
    "start": "2213099",
    "end": "2220359"
  },
  {
    "text": "may discern its own separate Docker I just wanted to highlight the insurance observability in your abstractions may",
    "start": "2220359",
    "end": "2227079"
  },
  {
    "text": "actually affect improved cognitive load in both day-to-day operations and during",
    "start": "2227079",
    "end": "2233260"
  },
  {
    "text": "production incidents during the investigation and you may ask where do you start and",
    "start": "2233260",
    "end": "2239680"
  },
  {
    "text": "that's another good question I want to say that I'm not going to advocate for any specific tools but I",
    "start": "2239680",
    "end": "2247119"
  },
  {
    "text": "give you I can give you a few examples that you can start with you can research them you can see if they or their",
    "start": "2247119",
    "end": "2253119"
  },
  {
    "text": "competitors are a good fit for you uh you can start with terraform it's a",
    "start": "2253119",
    "end": "2258640"
  },
  {
    "text": "well-known player when it comes to infrastructure it's called its plugin system is extensible if you need to add",
    "start": "2258640",
    "end": "2263740"
  },
  {
    "text": "custom Solutions it's it's easy to do with this plugin system it's modularization its versioning approach",
    "start": "2263740",
    "end": "2269920"
  },
  {
    "text": "is worth looking into they can provide can provide the way to",
    "start": "2269920",
    "end": "2275260"
  },
  {
    "text": "um version of infrastructure to manage your base path and another declarative",
    "start": "2275260",
    "end": "2280780"
  },
  {
    "text": "tool that I wanted to highlight is Spinnaker's manage delivery it focuses on continuous delivery and",
    "start": "2280780",
    "end": "2287740"
  },
  {
    "text": "related infrastructure yes I may be put in a bit of my own horn here but again I",
    "start": "2287740",
    "end": "2292960"
  },
  {
    "text": "believe that is certainly worth looking into worth looking into sorry and of course",
    "start": "2292960",
    "end": "2299500"
  },
  {
    "text": "there are things like GitHub actions or Jenkins pipeline DSL",
    "start": "2299500",
    "end": "2305040"
  },
  {
    "text": "those things are more generic they may require other tools to solve your particular problem but they also provide",
    "start": "2305040",
    "end": "2312040"
  },
  {
    "text": "a good degree of flexibility so you can start there you can research those tools you can research their competitors and",
    "start": "2312040",
    "end": "2318220"
  },
  {
    "text": "you can see what is the best fit for your particular situation and you also may ask okay I have started",
    "start": "2318220",
    "end": "2325359"
  },
  {
    "text": "working on my Solutions on my infrastructure build deploy testing security whatever problems you're trying",
    "start": "2325359",
    "end": "2331660"
  },
  {
    "text": "to solve uh you want to say I'm working on improving my developers experience and reducing cognitive load how can I",
    "start": "2331660",
    "end": "2339280"
  },
  {
    "text": "say if I'm going the right way how do I know if my efforts are actually useful and luckily there are metrics that you",
    "start": "2339280",
    "end": "2345160"
  },
  {
    "text": "can use to see if your efforts are producing the right results the most obvious set of metrics is they change",
    "start": "2345160",
    "end": "2350619"
  },
  {
    "text": "your head in the change failure rate basically you can check how fast you deploy changes how often do deployments",
    "start": "2350619",
    "end": "2356079"
  },
  {
    "text": "fail yes those are proxy metrics they are affected by other factors but they also measure a really important thing",
    "start": "2356079",
    "end": "2362260"
  },
  {
    "text": "like they measure your ability to deliver quality code another set of",
    "start": "2362260",
    "end": "2367480"
  },
  {
    "text": "metrics may be time to create to bootstrap a service and the time to reconfigure the service you may measure",
    "start": "2367480",
    "end": "2373240"
  },
  {
    "text": "the time it takes to update the infrastructure time to perform a migration and you may measure it across",
    "start": "2373240",
    "end": "2378640"
  },
  {
    "text": "a single service and across the whole Fleet of services if you choose the right obstructions if you actually",
    "start": "2378640",
    "end": "2384460"
  },
  {
    "text": "reduce the cognitive load you should see the reduction of all of these times as well and vice versa if it takes longer",
    "start": "2384460",
    "end": "2390640"
  },
  {
    "text": "to make a change then your abstractions may need some tuning this is a lot there",
    "start": "2390640",
    "end": "2395980"
  },
  {
    "text": "is so much more to review but we're already almost at the time limit I also understand that you may have questions",
    "start": "2395980",
    "end": "2401020"
  },
  {
    "text": "but before we start with q a I'd like to ask you if tomorrow you realize that you wanted to ask if you wanted to",
    "start": "2401020",
    "end": "2407440"
  },
  {
    "text": "share something and you didn't do it right now please feel free to message me on Twitter here's my Twitter handle",
    "start": "2407440",
    "end": "2412540"
  },
  {
    "text": "Nikita underscore P I'll be glad to hear from you even especially if you want to say mikita I don't agree with you you",
    "start": "2412540",
    "end": "2418420"
  },
  {
    "text": "got it here and here Ron I'd like to correct you so let's talk uh definitely ask your questions now reach them out",
    "start": "2418420",
    "end": "2425380"
  },
  {
    "text": "later because now we have several minutes for questions and answers um shoot away",
    "start": "2425380",
    "end": "2432240"
  },
  {
    "text": "good morning everybody thanks for joining",
    "start": "2435040",
    "end": "2440140"
  },
  {
    "text": "um to kick us off I think Eugene asked a great question in the chat um is there a path that Netflix from a",
    "start": "2440140",
    "end": "2446260"
  },
  {
    "text": "custom solution that used to be an experiment to becoming a curated solution like in other words is there a",
    "start": "2446260",
    "end": "2451839"
  },
  {
    "text": "concept of a Grassroots curated solution yes that's a great question because it",
    "start": "2451839",
    "end": "2457900"
  },
  {
    "text": "uh I believe there are like two sides to this problem and definitely I can I can",
    "start": "2457900",
    "end": "2463000"
  },
  {
    "text": "think of examples where developers in Netflix uh started working on some",
    "start": "2463000",
    "end": "2468339"
  },
  {
    "text": "solutions and there they realized it it works for their teams um and it was scaled uh but before we go",
    "start": "2468339",
    "end": "2476200"
  },
  {
    "text": "there I'd like to mention it in Netflix we actually have an Ocean's local Central teams of teams and developers",
    "start": "2476200",
    "end": "2483220"
  },
  {
    "text": "that are responsible for helping the developers in their particular organizations like local organizational",
    "start": "2483220",
    "end": "2489940"
  },
  {
    "text": "level experts that that are have the expertise uh like and that does can",
    "start": "2489940",
    "end": "2496720"
  },
  {
    "text": "relate to the uh grassroot problem um to scale in Grassroots Solutions uh",
    "start": "2496720",
    "end": "2503380"
  },
  {
    "text": "but uh one thing that like that that wasn't in the question that I'd like to",
    "start": "2503380",
    "end": "2508599"
  },
  {
    "text": "elaborate on uh yes like if you have the Tooling in",
    "start": "2508599",
    "end": "2514900"
  },
  {
    "text": "place if you can Define your infrastructure if you can scale it like basically like you may be free to scale",
    "start": "2514900",
    "end": "2521619"
  },
  {
    "text": "your Homebrew solution but there is a caveat it's not just about scaling a",
    "start": "2521619",
    "end": "2527260"
  },
  {
    "text": "particular technical solution and approach because um the these Solutions have to be",
    "start": "2527260",
    "end": "2534339"
  },
  {
    "text": "maintained uh the developer will have to wear experts hat expert hat uh and they",
    "start": "2534339",
    "end": "2541359"
  },
  {
    "text": "will have to be responsible for doing customer support performing",
    "start": "2541359",
    "end": "2546520"
  },
  {
    "text": "migrations and uh that can be a barrier uh and unfortunately there is no magic",
    "start": "2546520",
    "end": "2554980"
  },
  {
    "text": "way to get rid of the barrier like we can try to lower the threshold like when",
    "start": "2554980",
    "end": "2560680"
  },
  {
    "text": "especially when we're dealing with um uh supported scale when we have",
    "start": "2560680",
    "end": "2567400"
  },
  {
    "text": "um uh dedicated support teams helping helping those developers expert uh to",
    "start": "2567400",
    "end": "2575079"
  },
  {
    "text": "scale their approach but it's something that you have to be aware of before you go into this territory another thing uh",
    "start": "2575079",
    "end": "2583240"
  },
  {
    "text": "that can actually that like I saw I saw examples of it being used um",
    "start": "2583240",
    "end": "2588960"
  },
  {
    "text": "and being developed into um or may say being",
    "start": "2588960",
    "end": "2595260"
  },
  {
    "text": "encoded incorporated as a page pass solution is when you have an escape",
    "start": "2595260",
    "end": "2601180"
  },
  {
    "text": "hatch uh in your paved path like when when you paste path defines some custom",
    "start": "2601180",
    "end": "2607960"
  },
  {
    "text": "hooks some custom plugins that other people can can lean into and when",
    "start": "2607960",
    "end": "2613900"
  },
  {
    "text": "experts see um see like okay we see this Jenkins jobs being defined and called by other",
    "start": "2613900",
    "end": "2620319"
  },
  {
    "text": "customers doing this custom hook and like there is a lot of need for that maybe we should take the burden off and",
    "start": "2620319",
    "end": "2626500"
  },
  {
    "text": "incorporate and maintain themselves so it's less about the tooling it's more",
    "start": "2626500",
    "end": "2632319"
  },
  {
    "text": "about the communication and the support burden so that's that's the stuff I wanted to emphasize here",
    "start": "2632319",
    "end": "2639819"
  },
  {
    "text": "awesome thank you um can you share an example of a real world",
    "start": "2639819",
    "end": "2645700"
  },
  {
    "text": "migration that you've simplified or enabled using the building blocks you described and like how did that go what",
    "start": "2645700",
    "end": "2651520"
  },
  {
    "text": "was the impact of that so I already mentioned uh an example I",
    "start": "2651520",
    "end": "2656859"
  },
  {
    "text": "probably can elaborate on it more so um we've uh",
    "start": "2656859",
    "end": "2663579"
  },
  {
    "text": "AWS metadata service introducing uh a new security option",
    "start": "2663579",
    "end": "2670060"
  },
  {
    "text": "that had to be enabled across the whole Fleet just flipping this flag to True across across the hundreds and thousands",
    "start": "2670060",
    "end": "2677859"
  },
  {
    "text": "of application uh is a task that takes probably months to perform",
    "start": "2677859",
    "end": "2684220"
  },
  {
    "text": "manually but when those applications are codified just changing changing this",
    "start": "2684220",
    "end": "2689740"
  },
  {
    "text": "flag uh and switching it like things like introducing a pv6 for services or",
    "start": "2689740",
    "end": "2697599"
  },
  {
    "text": "um uh enabling uh specific types of canaries when you have",
    "start": "2697599",
    "end": "2703960"
  },
  {
    "text": "to replace a certain a certain stage at um inside inside a Spinnaker pipeline is",
    "start": "2703960",
    "end": "2712480"
  },
  {
    "text": "another good example like the change by itself is not hard like there is a new Canary type being rolled out canneries",
    "start": "2712480",
    "end": "2719619"
  },
  {
    "text": "are already Incorporated we're just doing the replacement but sending the email to the developers and asking them",
    "start": "2719619",
    "end": "2724960"
  },
  {
    "text": "to do it will leave in huge delays they they have other better stuff to do but when you have everything that is",
    "start": "2724960",
    "end": "2730839"
  },
  {
    "text": "codified we just make the change roll it out to a set of applications to make sure nothing is broken and then we",
    "start": "2730839",
    "end": "2737859"
  },
  {
    "text": "propagate the change to the to the rest of the applications using this live path yeah",
    "start": "2737859",
    "end": "2744339"
  },
  {
    "text": "it's hard for me to provide more concrete examples be uh",
    "start": "2744339",
    "end": "2750819"
  },
  {
    "text": "um without reviewing some in-house details but I",
    "start": "2750819",
    "end": "2755980"
  },
  {
    "text": "hope you got a generic idea sounds good so",
    "start": "2755980",
    "end": "2761319"
  },
  {
    "text": "um I think there was a question in the chat about do you think of your paid path as a product where a team is",
    "start": "2761319",
    "end": "2767560"
  },
  {
    "text": "accountable um so I want to elaborate on that a little bit like how does could you walk",
    "start": "2767560",
    "end": "2772960"
  },
  {
    "text": "us through for your use cases like the streaming and the studio use case like",
    "start": "2772960",
    "end": "2778240"
  },
  {
    "text": "who is responsible for curating that page path and like how did that go",
    "start": "2778240",
    "end": "2783819"
  },
  {
    "text": "so with uh so for example with uh with uh with both examples we have",
    "start": "2783819",
    "end": "2791740"
  },
  {
    "text": "separate separate teams responsible for maintaining uh their uh their respective",
    "start": "2791740",
    "end": "2798760"
  },
  {
    "text": "Pace Bus and uh",
    "start": "2798760",
    "end": "2806040"
  },
  {
    "text": "ah I I like I'd love like I'd like to focus on the product part because I",
    "start": "2806040",
    "end": "2812200"
  },
  {
    "text": "already mentioned it wearing a product manager hat we like I have to admit as a",
    "start": "2812200",
    "end": "2818920"
  },
  {
    "text": "part of the team that is actually responsible for curating uh streaming Solutions we don't always have an access",
    "start": "2818920",
    "end": "2825460"
  },
  {
    "text": "to a dedicated product manager so we did have to wear that that hat we went and",
    "start": "2825460",
    "end": "2832960"
  },
  {
    "text": "we interviewed the customers we actually created um a sort of the framework uh trying to",
    "start": "2832960",
    "end": "2840760"
  },
  {
    "text": "assess uh the importance of different problems and uh we used the dimension as",
    "start": "2840760",
    "end": "2848619"
  },
  {
    "text": "the impact so like how important a specific problem is and the blast radius",
    "start": "2848619",
    "end": "2856660"
  },
  {
    "text": "how many like the reach how many customers are affected by any specific",
    "start": "2856660",
    "end": "2861700"
  },
  {
    "text": "problems and looking through these Dimensions we just tried to sort word whatever the main pain points are trying",
    "start": "2861700",
    "end": "2870520"
  },
  {
    "text": "to because like there are there are more problems that we can solve at any given time and just sorting and prioritizing",
    "start": "2870520",
    "end": "2878440"
  },
  {
    "text": "them is important before you start actually incorporating them into the paved path so that uh that is the",
    "start": "2878440",
    "end": "2886960"
  },
  {
    "text": "biggest challenge when you approach bypass the product I would say awesome thank you Makita folks we're out of time",
    "start": "2886960",
    "end": "2893859"
  },
  {
    "text": "but feel free to join us in the slack Channel and we can answer more questions there I'll try to pull in anything that",
    "start": "2893859",
    "end": "2900040"
  },
  {
    "text": "we've missed thank you all okay thank you for being here thank you for attending have a great day",
    "start": "2900040",
    "end": "2908520"
  },
  {
    "text": "[Music]",
    "start": "2910730",
    "end": "2917020"
  }
]