[
  {
    "start": "0",
    "end": "30000"
  },
  {
    "text": "[Music]",
    "start": "3360",
    "end": "6550"
  },
  {
    "text": "hi",
    "start": "9840",
    "end": "10719"
  },
  {
    "text": "my name is sylvia and today i'm going to",
    "start": "10719",
    "end": "12880"
  },
  {
    "text": "share with you some pitfalls and",
    "start": "12880",
    "end": "14480"
  },
  {
    "text": "patterns",
    "start": "14480",
    "end": "15280"
  },
  {
    "text": "in micro service dependency management",
    "start": "15280",
    "end": "17440"
  },
  {
    "text": "that i bumped into",
    "start": "17440",
    "end": "18560"
  },
  {
    "text": "while working at google for over 10",
    "start": "18560",
    "end": "20240"
  },
  {
    "text": "years the content and examples in this",
    "start": "20240",
    "end": "22800"
  },
  {
    "text": "presentation are based on my own",
    "start": "22800",
    "end": "24400"
  },
  {
    "text": "experiences by a software engineer at",
    "start": "24400",
    "end": "26160"
  },
  {
    "text": "google",
    "start": "26160",
    "end": "26720"
  },
  {
    "text": "and are not focused on any particular",
    "start": "26720",
    "end": "28720"
  },
  {
    "text": "product or team",
    "start": "28720",
    "end": "30480"
  },
  {
    "start": "30000",
    "end": "54000"
  },
  {
    "text": "we're going to start by taking a quick",
    "start": "30480",
    "end": "32320"
  },
  {
    "text": "look on the transition",
    "start": "32320",
    "end": "33760"
  },
  {
    "text": "from service monoliths into",
    "start": "33760",
    "end": "35920"
  },
  {
    "text": "microservices",
    "start": "35920",
    "end": "37360"
  },
  {
    "text": "and then taking one last jump to include",
    "start": "37360",
    "end": "39920"
  },
  {
    "text": "services running in the cloud",
    "start": "39920",
    "end": "41840"
  },
  {
    "text": "we will continue our journey through",
    "start": "41840",
    "end": "43680"
  },
  {
    "text": "patterns and traffic growth",
    "start": "43680",
    "end": "45760"
  },
  {
    "text": "figure isolation and how we can plan",
    "start": "45760",
    "end": "48160"
  },
  {
    "text": "reasonable slos in the world",
    "start": "48160",
    "end": "50399"
  },
  {
    "text": "where every backend has a different",
    "start": "50399",
    "end": "52239"
  },
  {
    "text": "promise let's go",
    "start": "52239",
    "end": "54079"
  },
  {
    "text": "in the beginning we all wrote a single",
    "start": "54079",
    "end": "56000"
  },
  {
    "text": "binary often called hello world",
    "start": "56000",
    "end": "58320"
  },
  {
    "text": "which evolves to include more complex",
    "start": "58320",
    "end": "60559"
  },
  {
    "text": "functionalities like",
    "start": "60559",
    "end": "61920"
  },
  {
    "text": "database user authentication flow",
    "start": "61920",
    "end": "64799"
  },
  {
    "text": "control",
    "start": "64799",
    "end": "65760"
  },
  {
    "text": "operational monitoring and an http api",
    "start": "65760",
    "end": "68640"
  },
  {
    "text": "so our customers can find us online",
    "start": "68640",
    "end": "71280"
  },
  {
    "text": "this binary runs in a single machine but",
    "start": "71280",
    "end": "74320"
  },
  {
    "text": "could also have many replicas to allow",
    "start": "74320",
    "end": "77200"
  },
  {
    "text": "for traffic growth in different geo",
    "start": "77200",
    "end": "78960"
  },
  {
    "text": "locations several reasons pushed for our",
    "start": "78960",
    "end": "81759"
  },
  {
    "text": "monoliths should be decoupled into",
    "start": "81759",
    "end": "83680"
  },
  {
    "text": "separate binaries",
    "start": "83680",
    "end": "85119"
  },
  {
    "text": "a common reason is the complexity of the",
    "start": "85119",
    "end": "87439"
  },
  {
    "text": "binary that turn the code base almost",
    "start": "87439",
    "end": "89520"
  },
  {
    "text": "impossible to maintain",
    "start": "89520",
    "end": "90720"
  },
  {
    "text": "and add new features another common",
    "start": "90720",
    "end": "92880"
  },
  {
    "text": "reason is the requirement for",
    "start": "92880",
    "end": "94640"
  },
  {
    "text": "independent",
    "start": "94640",
    "end": "95360"
  },
  {
    "text": "logical components to grow",
    "start": "95360",
    "end": "98560"
  },
  {
    "text": "hardware resources without impacting the",
    "start": "98560",
    "end": "101200"
  },
  {
    "text": "performance of remaining components",
    "start": "101200",
    "end": "103520"
  },
  {
    "text": "these reasons motivated the birth of",
    "start": "103520",
    "end": "105280"
  },
  {
    "text": "microservices where different binaries",
    "start": "105280",
    "end": "107680"
  },
  {
    "text": "communicate",
    "start": "107680",
    "end": "108399"
  },
  {
    "text": "over a network but they all serve and",
    "start": "108399",
    "end": "111040"
  },
  {
    "text": "represent a single product",
    "start": "111040",
    "end": "113040"
  },
  {
    "text": "the network is an important part of the",
    "start": "113040",
    "end": "115520"
  },
  {
    "text": "product",
    "start": "115520",
    "end": "116079"
  },
  {
    "text": "and must always be kept in mind",
    "start": "116079",
    "end": "119759"
  },
  {
    "text": "each component can grow their hardware",
    "start": "119759",
    "end": "122159"
  },
  {
    "text": "resources",
    "start": "122159",
    "end": "122960"
  },
  {
    "text": "independently and it's much easier for",
    "start": "122960",
    "end": "125280"
  },
  {
    "text": "engineering teams to control the life",
    "start": "125280",
    "end": "127119"
  },
  {
    "text": "cycle of each binary",
    "start": "127119",
    "end": "129360"
  },
  {
    "text": "product owners may choose between",
    "start": "129360",
    "end": "131280"
  },
  {
    "text": "running their binaries",
    "start": "131280",
    "end": "132720"
  },
  {
    "text": "on their own machines or in the cloud a",
    "start": "132720",
    "end": "135840"
  },
  {
    "text": "product owner may even choose to run all",
    "start": "135840",
    "end": "137840"
  },
  {
    "text": "their binaries in the cloud",
    "start": "137840",
    "end": "139440"
  },
  {
    "text": "which is often associated with higher",
    "start": "139440",
    "end": "141200"
  },
  {
    "text": "availability at a lower cost",
    "start": "141200",
    "end": "143200"
  },
  {
    "text": "we will check back on this point later",
    "start": "143200",
    "end": "146480"
  },
  {
    "start": "145000",
    "end": "198000"
  },
  {
    "text": "so just to summarize running a product",
    "start": "146480",
    "end": "149920"
  },
  {
    "text": "in a microservice architecture provides",
    "start": "149920",
    "end": "152000"
  },
  {
    "text": "a series of benefits",
    "start": "152000",
    "end": "153519"
  },
  {
    "text": "like allowing for independent vertical",
    "start": "153519",
    "end": "156239"
  },
  {
    "text": "and or horizontal",
    "start": "156239",
    "end": "157360"
  },
  {
    "text": "scaling or growth of the hardware",
    "start": "157360",
    "end": "160640"
  },
  {
    "text": "resources for each component or",
    "start": "160640",
    "end": "163280"
  },
  {
    "text": "replicating the components",
    "start": "163280",
    "end": "165200"
  },
  {
    "text": "in different regions independently",
    "start": "165200",
    "end": "167519"
  },
  {
    "text": "better logical decoupling and",
    "start": "167519",
    "end": "169200"
  },
  {
    "text": "lower internal complexity which makes it",
    "start": "169200",
    "end": "172000"
  },
  {
    "text": "easier for developers to reason about",
    "start": "172000",
    "end": "174160"
  },
  {
    "text": "changes in the services",
    "start": "174160",
    "end": "175519"
  },
  {
    "text": "and guarantee that new features have a",
    "start": "175519",
    "end": "178159"
  },
  {
    "text": "predictable outcome",
    "start": "178159",
    "end": "180239"
  },
  {
    "text": "independent development of each",
    "start": "180239",
    "end": "182319"
  },
  {
    "text": "component allowing for localized changes",
    "start": "182319",
    "end": "184879"
  },
  {
    "text": "without",
    "start": "184879",
    "end": "185519"
  },
  {
    "text": "disturbing components that are unrelated",
    "start": "185519",
    "end": "188560"
  },
  {
    "text": "to a new feature",
    "start": "188560",
    "end": "190560"
  },
  {
    "text": "releases can be pushed forward or rolled",
    "start": "190560",
    "end": "192640"
  },
  {
    "text": "back independently promoting a faster",
    "start": "192640",
    "end": "194800"
  },
  {
    "text": "reaction to options and more focused",
    "start": "194800",
    "end": "196800"
  },
  {
    "text": "production changes",
    "start": "196800",
    "end": "199200"
  },
  {
    "text": "although having architecture based on",
    "start": "199200",
    "end": "202000"
  },
  {
    "text": "microservices",
    "start": "202000",
    "end": "202959"
  },
  {
    "text": "may also make some processes harder to",
    "start": "202959",
    "end": "206080"
  },
  {
    "text": "deal with",
    "start": "206080",
    "end": "207760"
  },
  {
    "text": "but we will see some useful tips",
    "start": "207760",
    "end": "210799"
  },
  {
    "text": "that hopefully will save you time and",
    "start": "210799",
    "end": "213120"
  },
  {
    "text": "some customer options",
    "start": "213120",
    "end": "215680"
  },
  {
    "text": "some memorable pains from my own",
    "start": "215680",
    "end": "217599"
  },
  {
    "text": "experience in managing",
    "start": "217599",
    "end": "219920"
  },
  {
    "text": "microservices include aligning traffic",
    "start": "219920",
    "end": "222879"
  },
  {
    "text": "and",
    "start": "222879",
    "end": "223120"
  },
  {
    "text": "resource growth between frontends and",
    "start": "223120",
    "end": "225040"
  },
  {
    "text": "backhands designing failure domains",
    "start": "225040",
    "end": "228720"
  },
  {
    "text": "and computing product slos based on the",
    "start": "228720",
    "end": "230720"
  },
  {
    "text": "combined slos of",
    "start": "230720",
    "end": "232159"
  },
  {
    "text": "all microservices let's start by",
    "start": "232159",
    "end": "235040"
  },
  {
    "start": "234000",
    "end": "468000"
  },
  {
    "text": "understanding our",
    "start": "235040",
    "end": "236080"
  },
  {
    "text": "example products petpick is a fictional",
    "start": "236080",
    "end": "238720"
  },
  {
    "text": "product",
    "start": "238720",
    "end": "239360"
  },
  {
    "text": "that we will use to exemplify these",
    "start": "239360",
    "end": "242000"
  },
  {
    "text": "challenges",
    "start": "242000",
    "end": "243360"
  },
  {
    "text": "platfix serves pictures of dogs for dog",
    "start": "243360",
    "end": "245920"
  },
  {
    "text": "lovers in two",
    "start": "245920",
    "end": "247040"
  },
  {
    "text": "regions happy tails and furlands",
    "start": "247040",
    "end": "250319"
  },
  {
    "text": "it currently has 100 customers in each",
    "start": "250319",
    "end": "253439"
  },
  {
    "text": "region",
    "start": "253439",
    "end": "254400"
  },
  {
    "text": "summing 200 customers total",
    "start": "254400",
    "end": "257519"
  },
  {
    "text": "the front-end api runs in independent",
    "start": "257519",
    "end": "260560"
  },
  {
    "text": "machines",
    "start": "260560",
    "end": "261199"
  },
  {
    "text": "and happy tailors and furland the",
    "start": "261199",
    "end": "263440"
  },
  {
    "text": "services",
    "start": "263440",
    "end": "264960"
  },
  {
    "text": "the service has several components but",
    "start": "264960",
    "end": "268400"
  },
  {
    "text": "for the purpose of this first example",
    "start": "268400",
    "end": "270400"
  },
  {
    "text": "let's consider",
    "start": "270400",
    "end": "271600"
  },
  {
    "text": "for now only the database backend",
    "start": "271600",
    "end": "274800"
  },
  {
    "text": "the database runs in the cloud in a",
    "start": "274800",
    "end": "277360"
  },
  {
    "text": "global region",
    "start": "277360",
    "end": "278560"
  },
  {
    "text": "and serves both regions happy tales and",
    "start": "278560",
    "end": "281199"
  },
  {
    "text": "purland",
    "start": "281199",
    "end": "283120"
  },
  {
    "text": "the database currently uses fifty",
    "start": "283120",
    "end": "285120"
  },
  {
    "text": "percent of all",
    "start": "285120",
    "end": "286160"
  },
  {
    "text": "its resources at peak pancake owner",
    "start": "286160",
    "end": "289600"
  },
  {
    "text": "decided to launch a new feature to also",
    "start": "289600",
    "end": "292400"
  },
  {
    "text": "serve pictures of cats to their",
    "start": "292400",
    "end": "295120"
  },
  {
    "text": "customers",
    "start": "295120",
    "end": "296320"
  },
  {
    "text": "fatpig engineers decided to launch the",
    "start": "296320",
    "end": "299120"
  },
  {
    "text": "new feature and have details first",
    "start": "299120",
    "end": "301600"
  },
  {
    "text": "so they could look for user behavior",
    "start": "301600",
    "end": "304080"
  },
  {
    "text": "traffic or resource usage change",
    "start": "304080",
    "end": "306560"
  },
  {
    "text": "before making the new feature available",
    "start": "306560",
    "end": "308560"
  },
  {
    "text": "to everybody this looks like a very",
    "start": "308560",
    "end": "310880"
  },
  {
    "text": "reasonable strategy",
    "start": "310880",
    "end": "312720"
  },
  {
    "text": "in preparation for the lounge engineers",
    "start": "312720",
    "end": "314960"
  },
  {
    "text": "double the processing",
    "start": "314960",
    "end": "316160"
  },
  {
    "text": "resources for the api service and happy",
    "start": "316160",
    "end": "318320"
  },
  {
    "text": "tails and increase the database",
    "start": "318320",
    "end": "320000"
  },
  {
    "text": "resources in 10",
    "start": "320000",
    "end": "323039"
  },
  {
    "text": "the launch was a success the engineers",
    "start": "323039",
    "end": "325759"
  },
  {
    "text": "observed a 10",
    "start": "325759",
    "end": "327120"
  },
  {
    "text": "growth in customers which might indicate",
    "start": "327120",
    "end": "330000"
  },
  {
    "text": "that some cat lovers have joined pet pig",
    "start": "330000",
    "end": "333120"
  },
  {
    "text": "the database research utilization is at",
    "start": "333120",
    "end": "335440"
  },
  {
    "text": "50",
    "start": "335440",
    "end": "336479"
  },
  {
    "text": "at peak again showing that the extra",
    "start": "336479",
    "end": "338880"
  },
  {
    "text": "resources",
    "start": "338880",
    "end": "339919"
  },
  {
    "text": "were indeed necessary all signals",
    "start": "339919",
    "end": "343360"
  },
  {
    "text": "indicate that 10",
    "start": "343360",
    "end": "344720"
  },
  {
    "text": "growth in users requires a 10 growth in",
    "start": "344720",
    "end": "347840"
  },
  {
    "text": "the database",
    "start": "347840",
    "end": "348960"
  },
  {
    "text": "so in preparation for the launch in",
    "start": "348960",
    "end": "350639"
  },
  {
    "text": "firland engineers added",
    "start": "350639",
    "end": "352400"
  },
  {
    "text": "10 percent more resources to the beta",
    "start": "352400",
    "end": "354639"
  },
  {
    "text": "database again",
    "start": "354639",
    "end": "356639"
  },
  {
    "text": "they also doubled the api resources in",
    "start": "356639",
    "end": "359120"
  },
  {
    "text": "firlin",
    "start": "359120",
    "end": "359680"
  },
  {
    "text": "to cope with the request for for the new",
    "start": "359680",
    "end": "362160"
  },
  {
    "text": "customers",
    "start": "362160",
    "end": "363680"
  },
  {
    "text": "they launched it on wednesday and waited",
    "start": "363680",
    "end": "367680"
  },
  {
    "text": "and waited we waited a little bit more",
    "start": "367680",
    "end": "371840"
  },
  {
    "text": "and in the middle of lunch time",
    "start": "371840",
    "end": "374880"
  },
  {
    "text": "pagers started bringing in alerts about",
    "start": "374880",
    "end": "377360"
  },
  {
    "text": "users seeing 500s",
    "start": "377360",
    "end": "379199"
  },
  {
    "text": "yes incredible five hundreds",
    "start": "379199",
    "end": "382479"
  },
  {
    "text": "what's happening the database team",
    "start": "382479",
    "end": "384639"
  },
  {
    "text": "reaches out and mentions that the",
    "start": "384639",
    "end": "386479"
  },
  {
    "text": "research utilization has just reached",
    "start": "386479",
    "end": "388960"
  },
  {
    "text": "eighty percent",
    "start": "388960",
    "end": "389759"
  },
  {
    "text": "two hours ago and they were trying to",
    "start": "389759",
    "end": "392319"
  },
  {
    "text": "allocate more cpu to handle",
    "start": "392319",
    "end": "394000"
  },
  {
    "text": "the extra traffic but that's unlikely to",
    "start": "394000",
    "end": "396240"
  },
  {
    "text": "happen today",
    "start": "396240",
    "end": "397680"
  },
  {
    "text": "the api team checks out user growth",
    "start": "397680",
    "end": "401360"
  },
  {
    "text": "graphs and there's no change still 220",
    "start": "401360",
    "end": "405120"
  },
  {
    "text": "customers",
    "start": "405120",
    "end": "406319"
  },
  {
    "text": "what's happening they decided to abort",
    "start": "406319",
    "end": "409120"
  },
  {
    "text": "the lounge",
    "start": "409120",
    "end": "409759"
  },
  {
    "text": "and wrote back the feature in ferdinand",
    "start": "409759",
    "end": "412080"
  },
  {
    "text": "several customer support tickets are",
    "start": "412080",
    "end": "414240"
  },
  {
    "text": "opened by",
    "start": "414240",
    "end": "414880"
  },
  {
    "text": "unhappy customers who are eager for some",
    "start": "414880",
    "end": "417520"
  },
  {
    "text": "catalog during",
    "start": "417520",
    "end": "418560"
  },
  {
    "text": "lunch break engineers scratch their head",
    "start": "418560",
    "end": "421360"
  },
  {
    "text": "and",
    "start": "421360",
    "end": "422240"
  },
  {
    "text": "look at the monitoring logs to",
    "start": "422240",
    "end": "424080"
  },
  {
    "text": "understand the outage",
    "start": "424080",
    "end": "427360"
  },
  {
    "text": "in the logs they can see that the",
    "start": "428160",
    "end": "430400"
  },
  {
    "text": "feature launch in happy tails",
    "start": "430400",
    "end": "431919"
  },
  {
    "text": "had a 10 customer growth aligned with a",
    "start": "431919",
    "end": "434720"
  },
  {
    "text": "10",
    "start": "434720",
    "end": "435440"
  },
  {
    "text": "traffic proof to the database but once",
    "start": "435440",
    "end": "438560"
  },
  {
    "text": "the feature was launched",
    "start": "438560",
    "end": "439759"
  },
  {
    "text": "in farland the traffic to the database",
    "start": "439759",
    "end": "442160"
  },
  {
    "text": "grew 60 percent",
    "start": "442160",
    "end": "444160"
  },
  {
    "text": "even without a single new user",
    "start": "444160",
    "end": "446400"
  },
  {
    "text": "registered in fairland",
    "start": "446400",
    "end": "448639"
  },
  {
    "text": "they learned that customers in firland",
    "start": "448639",
    "end": "450800"
  },
  {
    "text": "were actually cat lovers",
    "start": "450800",
    "end": "452479"
  },
  {
    "text": "and had never had much interest",
    "start": "452479",
    "end": "455599"
  },
  {
    "text": "in interacting with fat pig before the",
    "start": "455599",
    "end": "458400"
  },
  {
    "text": "cat picture",
    "start": "458400",
    "end": "459360"
  },
  {
    "text": "feature was a huge success in regaining",
    "start": "459360",
    "end": "462800"
  },
  {
    "text": "these customers",
    "start": "462800",
    "end": "464080"
  },
  {
    "text": "but the rollout strategy could never",
    "start": "464080",
    "end": "466240"
  },
  {
    "text": "have predicted",
    "start": "466240",
    "end": "467360"
  },
  {
    "text": "that so what can we do better next time",
    "start": "467360",
    "end": "472240"
  },
  {
    "start": "468000",
    "end": "516000"
  },
  {
    "text": "first keep in mind that every product",
    "start": "472240",
    "end": "474720"
  },
  {
    "text": "experiences different types of growth",
    "start": "474720",
    "end": "477360"
  },
  {
    "text": "growth in the number of customers is not",
    "start": "477360",
    "end": "479520"
  },
  {
    "text": "always associated with more engagement",
    "start": "479520",
    "end": "482560"
  },
  {
    "text": "from customers the amount of hardware",
    "start": "482560",
    "end": "485360"
  },
  {
    "text": "resources",
    "start": "485360",
    "end": "486080"
  },
  {
    "text": "to process user requests may vary",
    "start": "486080",
    "end": "488800"
  },
  {
    "text": "according to user behavior",
    "start": "488800",
    "end": "490960"
  },
  {
    "text": "when preparing for a launch run",
    "start": "490960",
    "end": "493360"
  },
  {
    "text": "experience across all different regions",
    "start": "493360",
    "end": "495520"
  },
  {
    "text": "so you can have a better view of how the",
    "start": "495520",
    "end": "498000"
  },
  {
    "text": "new feature will impact",
    "start": "498000",
    "end": "499520"
  },
  {
    "text": "user behavior and resource utilization",
    "start": "499520",
    "end": "502479"
  },
  {
    "text": "when requesting for extra hardware",
    "start": "502479",
    "end": "504319"
  },
  {
    "text": "resources",
    "start": "504319",
    "end": "505280"
  },
  {
    "text": "allow back-end owners extra time to",
    "start": "505280",
    "end": "507440"
  },
  {
    "text": "actually allocate them",
    "start": "507440",
    "end": "508879"
  },
  {
    "text": "allocating a new machine requires buying",
    "start": "508879",
    "end": "511120"
  },
  {
    "text": "orders transportation and physical",
    "start": "511120",
    "end": "513360"
  },
  {
    "text": "installation of the hardware",
    "start": "513360",
    "end": "517039"
  },
  {
    "start": "516000",
    "end": "769000"
  },
  {
    "text": "we just observed the scenario where a",
    "start": "517440",
    "end": "519440"
  },
  {
    "text": "global services",
    "start": "519440",
    "end": "520719"
  },
  {
    "text": "operated as a single point of failure",
    "start": "520719",
    "end": "523120"
  },
  {
    "text": "and caused an outage in two distinct",
    "start": "523120",
    "end": "525120"
  },
  {
    "text": "regions",
    "start": "525120",
    "end": "526320"
  },
  {
    "text": "in the world of monoliths isolating",
    "start": "526320",
    "end": "528560"
  },
  {
    "text": "failure across",
    "start": "528560",
    "end": "529519"
  },
  {
    "text": "components is quite difficult if not",
    "start": "529519",
    "end": "531519"
  },
  {
    "text": "impossible",
    "start": "531519",
    "end": "533600"
  },
  {
    "text": "the main reason is that all logical",
    "start": "533600",
    "end": "535760"
  },
  {
    "text": "components coexist in the same binary",
    "start": "535760",
    "end": "537920"
  },
  {
    "text": "and thus in the same execution",
    "start": "537920",
    "end": "540399"
  },
  {
    "text": "environment",
    "start": "540399",
    "end": "541839"
  },
  {
    "text": "a large benefit of working with",
    "start": "541839",
    "end": "543680"
  },
  {
    "text": "microservices is that",
    "start": "543680",
    "end": "545120"
  },
  {
    "text": "we can offer independent logical",
    "start": "545120",
    "end": "547279"
  },
  {
    "text": "components to fail in isolation",
    "start": "547279",
    "end": "549519"
  },
  {
    "text": "preventing fingers from widely spreading",
    "start": "549519",
    "end": "551920"
  },
  {
    "text": "and compromising performance of other",
    "start": "551920",
    "end": "553839"
  },
  {
    "text": "system components",
    "start": "553839",
    "end": "555760"
  },
  {
    "text": "this design process is often called",
    "start": "555760",
    "end": "558320"
  },
  {
    "text": "failure isolation",
    "start": "558320",
    "end": "559440"
  },
  {
    "text": "or the analysis of how services played",
    "start": "559440",
    "end": "561920"
  },
  {
    "text": "together",
    "start": "561920",
    "end": "564320"
  },
  {
    "text": "in our example pet peek is deployed",
    "start": "565040",
    "end": "567440"
  },
  {
    "text": "independently in two different regions",
    "start": "567440",
    "end": "569839"
  },
  {
    "text": "happy tails and furnace unfortunately",
    "start": "569839",
    "end": "572560"
  },
  {
    "text": "the performance of these regions is",
    "start": "572560",
    "end": "574640"
  },
  {
    "text": "strongly tied to the performance of the",
    "start": "574640",
    "end": "577040"
  },
  {
    "text": "global database",
    "start": "577040",
    "end": "578480"
  },
  {
    "text": "serving both regions as we observed so",
    "start": "578480",
    "end": "581760"
  },
  {
    "text": "far",
    "start": "581760",
    "end": "582080"
  },
  {
    "text": "customers in happy tales and portland",
    "start": "582080",
    "end": "584080"
  },
  {
    "text": "have quite distinct interests",
    "start": "584080",
    "end": "585839"
  },
  {
    "text": "making it hard to tune the database to",
    "start": "585839",
    "end": "588839"
  },
  {
    "text": "efficiency",
    "start": "588839",
    "end": "590000"
  },
  {
    "text": "serve both regions",
    "start": "590000",
    "end": "593279"
  },
  {
    "text": "changes in the way furland customers",
    "start": "593279",
    "end": "595120"
  },
  {
    "text": "access backpeak data",
    "start": "595120",
    "end": "596880"
  },
  {
    "text": "can resonate poorly on the user",
    "start": "596880",
    "end": "599040"
  },
  {
    "text": "experience of happy taiyo users",
    "start": "599040",
    "end": "601760"
  },
  {
    "text": "but there are ways to avoid that",
    "start": "601760",
    "end": "605200"
  },
  {
    "text": "a simple strategy is to use a bounded",
    "start": "605200",
    "end": "607760"
  },
  {
    "text": "local cache",
    "start": "607760",
    "end": "609040"
  },
  {
    "text": "the local cache can guarantee an",
    "start": "609040",
    "end": "611120"
  },
  {
    "text": "improved user experience",
    "start": "611120",
    "end": "612720"
  },
  {
    "text": "since it also reduces response latency",
    "start": "612720",
    "end": "616079"
  },
  {
    "text": "and database resource usage the cache",
    "start": "616079",
    "end": "618640"
  },
  {
    "text": "size can be adapted to the local traffic",
    "start": "618640",
    "end": "620880"
  },
  {
    "text": "rather than global utilization",
    "start": "620880",
    "end": "622959"
  },
  {
    "text": "it can also serve state of data in case",
    "start": "622959",
    "end": "625839"
  },
  {
    "text": "of an outpatient in the back end",
    "start": "625839",
    "end": "627279"
  },
  {
    "text": "allowing for a graceful degradation of",
    "start": "627279",
    "end": "629120"
  },
  {
    "text": "the data",
    "start": "629120",
    "end": "631040"
  },
  {
    "text": "what about other components in the",
    "start": "631040",
    "end": "632800"
  },
  {
    "text": "product architecture",
    "start": "632800",
    "end": "634079"
  },
  {
    "text": "is it reasonable to use caching for",
    "start": "634079",
    "end": "636320"
  },
  {
    "text": "everything",
    "start": "636320",
    "end": "637519"
  },
  {
    "text": "can i isolate services running in the",
    "start": "637519",
    "end": "639440"
  },
  {
    "text": "cloud to my regions",
    "start": "639440",
    "end": "641120"
  },
  {
    "text": "yes and you should running a service",
    "start": "641120",
    "end": "644240"
  },
  {
    "text": "in the cloud does not prevent it from",
    "start": "644240",
    "end": "646240"
  },
  {
    "text": "being the source of a global voltage",
    "start": "646240",
    "end": "648560"
  },
  {
    "text": "a service running in different cloud",
    "start": "648560",
    "end": "650720"
  },
  {
    "text": "regions can",
    "start": "650720",
    "end": "651839"
  },
  {
    "text": "still behave as a global service and a",
    "start": "651839",
    "end": "654560"
  },
  {
    "text": "single point of failure",
    "start": "654560",
    "end": "656640"
  },
  {
    "text": "isolating a service to a failure domain",
    "start": "656640",
    "end": "659120"
  },
  {
    "text": "is an architectural decision",
    "start": "659120",
    "end": "661040"
  },
  {
    "text": "and it's not guaranteed solely by the",
    "start": "661040",
    "end": "663120"
  },
  {
    "text": "infrastructure running the service",
    "start": "663120",
    "end": "666880"
  },
  {
    "text": "let's take a look into a practical",
    "start": "666880",
    "end": "668320"
  },
  {
    "text": "example the control component performs",
    "start": "668320",
    "end": "671120"
  },
  {
    "text": "a series of content quality verification",
    "start": "671120",
    "end": "674240"
  },
  {
    "text": "the developer team recently integrated",
    "start": "674240",
    "end": "676800"
  },
  {
    "text": "an automated abuse detection routine",
    "start": "676800",
    "end": "678959"
  },
  {
    "text": "to the control component which allows",
    "start": "678959",
    "end": "681519"
  },
  {
    "text": "validating content quality",
    "start": "681519",
    "end": "683360"
  },
  {
    "text": "by the time a new picture is uploaded a",
    "start": "683360",
    "end": "686399"
  },
  {
    "text": "new intended customer",
    "start": "686399",
    "end": "687760"
  },
  {
    "text": "starts uploading pictures of deviant",
    "start": "687760",
    "end": "690000"
  },
  {
    "text": "animals into pet pig",
    "start": "690000",
    "end": "691440"
  },
  {
    "text": "which is expected to serve only pictures",
    "start": "691440",
    "end": "694160"
  },
  {
    "text": "of dogs and cats",
    "start": "694160",
    "end": "696399"
  },
  {
    "text": "the stream of uploads activates the",
    "start": "696399",
    "end": "698720"
  },
  {
    "text": "automated abuse detection in our control",
    "start": "698720",
    "end": "701200"
  },
  {
    "text": "components",
    "start": "701200",
    "end": "702240"
  },
  {
    "text": "but the new ml routines cannot keep up",
    "start": "702240",
    "end": "704560"
  },
  {
    "text": "with the amount of requests",
    "start": "704560",
    "end": "706800"
  },
  {
    "text": "although control limits the number of",
    "start": "706800",
    "end": "708800"
  },
  {
    "text": "threads dedicated to process appeals to",
    "start": "708800",
    "end": "711360"
  },
  {
    "text": "50 percent",
    "start": "711360",
    "end": "713120"
  },
  {
    "text": "they end up consuming all processing",
    "start": "713120",
    "end": "715040"
  },
  {
    "text": "resources and customers in both regions",
    "start": "715040",
    "end": "717839"
  },
  {
    "text": "start experiencing high latency when",
    "start": "717839",
    "end": "720079"
  },
  {
    "text": "uploading images to practice",
    "start": "720079",
    "end": "723680"
  },
  {
    "text": "if we isolate the control component",
    "start": "723760",
    "end": "725600"
  },
  {
    "text": "operations to a single region",
    "start": "725600",
    "end": "727279"
  },
  {
    "text": "we can further restrict the impact of",
    "start": "727279",
    "end": "729360"
  },
  {
    "text": "abuse situations like this one",
    "start": "729360",
    "end": "732240"
  },
  {
    "text": "even if a service runs in the cloud",
    "start": "732240",
    "end": "734959"
  },
  {
    "text": "making sure that",
    "start": "734959",
    "end": "735920"
  },
  {
    "text": "each region has its own dedicated",
    "start": "735920",
    "end": "738240"
  },
  {
    "text": "instance of control",
    "start": "738240",
    "end": "739680"
  },
  {
    "text": "will guarantee that only customers and",
    "start": "739680",
    "end": "741680"
  },
  {
    "text": "happy tails would be affected by the",
    "start": "741680",
    "end": "743360"
  },
  {
    "text": "stream of",
    "start": "743360",
    "end": "744000"
  },
  {
    "text": "bad image uploads notice that",
    "start": "744000",
    "end": "747279"
  },
  {
    "text": "stateless service can easily be",
    "start": "747279",
    "end": "749360"
  },
  {
    "text": "restricted to a failure domain",
    "start": "749360",
    "end": "751920"
  },
  {
    "text": "isolating databases isn't always",
    "start": "751920",
    "end": "754320"
  },
  {
    "text": "possible",
    "start": "754320",
    "end": "755040"
  },
  {
    "text": "but you may consider implementing local",
    "start": "755040",
    "end": "757040"
  },
  {
    "text": "reads from the cache",
    "start": "757040",
    "end": "759120"
  },
  {
    "text": "and occasional cross region consistency",
    "start": "759120",
    "end": "761760"
  },
  {
    "text": "as a good compromise",
    "start": "761760",
    "end": "763920"
  },
  {
    "text": "the more you can keep the processing",
    "start": "763920",
    "end": "765680"
  },
  {
    "text": "stack regionally isolated",
    "start": "765680",
    "end": "767440"
  },
  {
    "text": "no matter let's review what we got so",
    "start": "767440",
    "end": "770839"
  },
  {
    "start": "769000",
    "end": "1141000"
  },
  {
    "text": "far",
    "start": "770839",
    "end": "772160"
  },
  {
    "text": "keeping all services in the serving",
    "start": "772160",
    "end": "774560"
  },
  {
    "text": "stack",
    "start": "774560",
    "end": "775279"
  },
  {
    "text": "collocated and restricted to the same",
    "start": "775279",
    "end": "777600"
  },
  {
    "text": "vehicle",
    "start": "777600",
    "end": "778560"
  },
  {
    "text": "can prevent widely spread global",
    "start": "778560",
    "end": "780399"
  },
  {
    "text": "voltages",
    "start": "780399",
    "end": "781680"
  },
  {
    "text": "isolating stateless services to a",
    "start": "781680",
    "end": "783760"
  },
  {
    "text": "failure domain is often",
    "start": "783760",
    "end": "785200"
  },
  {
    "text": "easier than stateful components",
    "start": "785200",
    "end": "788240"
  },
  {
    "text": "if cross-region communication cannot be",
    "start": "788240",
    "end": "790560"
  },
  {
    "text": "avoided",
    "start": "790560",
    "end": "791440"
  },
  {
    "text": "consider strategies for graceful",
    "start": "791440",
    "end": "793200"
  },
  {
    "text": "degradation and eventual consistency",
    "start": "793200",
    "end": "797200"
  },
  {
    "text": "on this last example we will review the",
    "start": "797440",
    "end": "800480"
  },
  {
    "text": "pet peek",
    "start": "800480",
    "end": "801040"
  },
  {
    "text": "slos and verify if they are feasible",
    "start": "801040",
    "end": "804880"
  },
  {
    "text": "even the slos provided by each packet",
    "start": "804880",
    "end": "808240"
  },
  {
    "text": "the slos are the contract we have with",
    "start": "808240",
    "end": "811440"
  },
  {
    "text": "our customers",
    "start": "811440",
    "end": "812800"
  },
  {
    "text": "this table presents the slos engineers",
    "start": "812800",
    "end": "815120"
  },
  {
    "text": "believe would",
    "start": "815120",
    "end": "816399"
  },
  {
    "text": "provide pet pick customers with a good",
    "start": "816399",
    "end": "819120"
  },
  {
    "text": "user experience",
    "start": "819120",
    "end": "822000"
  },
  {
    "text": "here we can also see the slos offered by",
    "start": "822079",
    "end": "825120"
  },
  {
    "text": "each internal component the api aspects",
    "start": "825120",
    "end": "828959"
  },
  {
    "text": "must be built based on the slos of api",
    "start": "828959",
    "end": "831600"
  },
  {
    "text": "brackets",
    "start": "831600",
    "end": "832880"
  },
  {
    "text": "if a better api slo is required but not",
    "start": "832880",
    "end": "835839"
  },
  {
    "text": "possible",
    "start": "835839",
    "end": "836800"
  },
  {
    "text": "we need to consider changing the product",
    "start": "836800",
    "end": "839040"
  },
  {
    "text": "design and working with the backend",
    "start": "839040",
    "end": "841040"
  },
  {
    "text": "owners to provide better performance and",
    "start": "841040",
    "end": "842720"
  },
  {
    "text": "availability",
    "start": "842720",
    "end": "844320"
  },
  {
    "text": "given our latest architecture for",
    "start": "844320",
    "end": "846160"
  },
  {
    "text": "practic let's see if the slos for the",
    "start": "846160",
    "end": "848560"
  },
  {
    "text": "api makes sense",
    "start": "848560",
    "end": "851279"
  },
  {
    "text": "let's start with our operational backend",
    "start": "851279",
    "end": "855360"
  },
  {
    "text": "that means the back-end that collects",
    "start": "855360",
    "end": "857360"
  },
  {
    "text": "health metrics about pepe kpi",
    "start": "857360",
    "end": "860240"
  },
  {
    "text": "api service only calls ops to inject",
    "start": "860240",
    "end": "863440"
  },
  {
    "text": "monitoring data about the requests",
    "start": "863440",
    "end": "865360"
  },
  {
    "text": "errors and processing time of the",
    "start": "865360",
    "end": "867040"
  },
  {
    "text": "operations all rights to apps",
    "start": "867040",
    "end": "869760"
  },
  {
    "text": "are done asynchronously and failures do",
    "start": "869760",
    "end": "872240"
  },
  {
    "text": "not impact the api service quality",
    "start": "872240",
    "end": "874720"
  },
  {
    "text": "with these considerations in mind we can",
    "start": "874720",
    "end": "877040"
  },
  {
    "text": "just consider the ops slo",
    "start": "877040",
    "end": "878959"
  },
  {
    "text": "when computing the external slo perfect",
    "start": "878959",
    "end": "882959"
  },
  {
    "text": "now let's take a look at the user",
    "start": "882959",
    "end": "885120"
  },
  {
    "text": "journey for reading a picture",
    "start": "885120",
    "end": "887199"
  },
  {
    "text": "from hectic content quality is only",
    "start": "887199",
    "end": "890320"
  },
  {
    "text": "verified when the new data is injected",
    "start": "890320",
    "end": "892720"
  },
  {
    "text": "into pet pic",
    "start": "892720",
    "end": "894240"
  },
  {
    "text": "so reads won't be affected by the",
    "start": "894240",
    "end": "896480"
  },
  {
    "text": "control service performance",
    "start": "896480",
    "end": "898639"
  },
  {
    "text": "besides retrieving the image information",
    "start": "898639",
    "end": "901360"
  },
  {
    "text": "api service needs to process",
    "start": "901360",
    "end": "904800"
  },
  {
    "text": "the request which our benchmarks",
    "start": "904800",
    "end": "907920"
  },
  {
    "text": "indicate takes about 30 milliseconds",
    "start": "907920",
    "end": "912560"
  },
  {
    "text": "once the image is ready to be sent the",
    "start": "912560",
    "end": "914880"
  },
  {
    "text": "api needs to build a response",
    "start": "914880",
    "end": "917360"
  },
  {
    "text": "which takes about 20 milliseconds in",
    "start": "917360",
    "end": "920639"
  },
  {
    "text": "average",
    "start": "920639",
    "end": "921680"
  },
  {
    "text": "this adds up to 50 milliseconds",
    "start": "921680",
    "end": "923760"
  },
  {
    "text": "processing time per request",
    "start": "923760",
    "end": "925440"
  },
  {
    "text": "in the api alone if we can guarantee",
    "start": "925440",
    "end": "928720"
  },
  {
    "text": "that at least half of the requests",
    "start": "928720",
    "end": "930959"
  },
  {
    "text": "will hit an entry in the local cache",
    "start": "930959",
    "end": "933759"
  },
  {
    "text": "then promising a 50 percentile",
    "start": "933759",
    "end": "936079"
  },
  {
    "text": "of 100 milliseconds it's quite",
    "start": "936079",
    "end": "938480"
  },
  {
    "text": "reasonable",
    "start": "938480",
    "end": "939360"
  },
  {
    "text": "notice that if we didn't have the local",
    "start": "939360",
    "end": "941600"
  },
  {
    "text": "cache the 50th percentile",
    "start": "941600",
    "end": "944079"
  },
  {
    "text": "latency would be at least 150",
    "start": "944079",
    "end": "947839"
  },
  {
    "text": "milliseconds",
    "start": "947839",
    "end": "948800"
  },
  {
    "text": "that means 50 higher",
    "start": "948800",
    "end": "952320"
  },
  {
    "text": "for all other requests the image will",
    "start": "952320",
    "end": "954480"
  },
  {
    "text": "need to be queried from the database",
    "start": "954480",
    "end": "956560"
  },
  {
    "text": "database takes from 100 to 240",
    "start": "956560",
    "end": "959600"
  },
  {
    "text": "milliseconds",
    "start": "959600",
    "end": "961120"
  },
  {
    "text": "to reply and it may not be co-located",
    "start": "961120",
    "end": "964399"
  },
  {
    "text": "with the api service",
    "start": "964399",
    "end": "966639"
  },
  {
    "text": "the natural latency is 100 milliseconds",
    "start": "966639",
    "end": "969199"
  },
  {
    "text": "in average",
    "start": "969199",
    "end": "970160"
  },
  {
    "text": "so the longest time a request could take",
    "start": "970160",
    "end": "973199"
  },
  {
    "text": "is 50 milliseconds plus",
    "start": "973199",
    "end": "976240"
  },
  {
    "text": "10 accounting for the cash miss plus 100",
    "start": "976240",
    "end": "980240"
  },
  {
    "text": "plus 240 milliseconds which is about 400",
    "start": "980240",
    "end": "984160"
  },
  {
    "text": "milliseconds",
    "start": "984160",
    "end": "985759"
  },
  {
    "text": "looks like the slo for reads are well",
    "start": "985759",
    "end": "988000"
  },
  {
    "text": "aligned with the apr packets",
    "start": "988000",
    "end": "989920"
  },
  {
    "text": "so let's proceed now let's check the slo",
    "start": "989920",
    "end": "993600"
  },
  {
    "text": "for",
    "start": "993600",
    "end": "993920"
  },
  {
    "text": "uploading a new image when a customer",
    "start": "993920",
    "end": "996320"
  },
  {
    "text": "requests",
    "start": "996320",
    "end": "997040"
  },
  {
    "text": "a new image load to petpick the api",
    "start": "997040",
    "end": "1000639"
  },
  {
    "text": "must request control to verify the",
    "start": "1000639",
    "end": "1002480"
  },
  {
    "text": "content which may take from",
    "start": "1002480",
    "end": "1004600"
  },
  {
    "text": "150 milliseconds to 800 milliseconds",
    "start": "1004600",
    "end": "1009199"
  },
  {
    "text": "besides checking for abusive content",
    "start": "1009199",
    "end": "1011440"
  },
  {
    "text": "control also verifies if the image is",
    "start": "1011440",
    "end": "1013440"
  },
  {
    "text": "already present in the database",
    "start": "1013440",
    "end": "1015680"
  },
  {
    "text": "images present in the database are",
    "start": "1015680",
    "end": "1017600"
  },
  {
    "text": "considered good",
    "start": "1017600",
    "end": "1018800"
  },
  {
    "text": "and don't need to be re-verified",
    "start": "1018800",
    "end": "1021279"
  },
  {
    "text": "historical data shows that customers in",
    "start": "1021279",
    "end": "1023279"
  },
  {
    "text": "firland and happy tails",
    "start": "1023279",
    "end": "1024959"
  },
  {
    "text": "tend to upload the same set of images in",
    "start": "1024959",
    "end": "1027438"
  },
  {
    "text": "both regions",
    "start": "1027439",
    "end": "1029120"
  },
  {
    "text": "when an image is already present in the",
    "start": "1029120",
    "end": "1030798"
  },
  {
    "text": "database control can create a new id for",
    "start": "1030799",
    "end": "1033120"
  },
  {
    "text": "it without duplicating the data",
    "start": "1033120",
    "end": "1035038"
  },
  {
    "text": "which takes about 15 milliseconds",
    "start": "1035039",
    "end": "1038400"
  },
  {
    "text": "this journey fits about half of the",
    "start": "1038400",
    "end": "1041600"
  },
  {
    "text": "right",
    "start": "1041600",
    "end": "1042240"
  },
  {
    "text": "requests leading the 50th percentile",
    "start": "1042240",
    "end": "1045199"
  },
  {
    "text": "latency",
    "start": "1045199",
    "end": "1046240"
  },
  {
    "text": "to be 50 plus 150 plus",
    "start": "1046240",
    "end": "1049760"
  },
  {
    "text": "15 summing up 250 milliseconds",
    "start": "1049760",
    "end": "1054720"
  },
  {
    "text": "as we discussed before images with abuse",
    "start": "1054720",
    "end": "1057360"
  },
  {
    "text": "content",
    "start": "1057360",
    "end": "1058880"
  },
  {
    "text": "usually take longer to be processed the",
    "start": "1058880",
    "end": "1061360"
  },
  {
    "text": "deadline for control to return a",
    "start": "1061360",
    "end": "1063120"
  },
  {
    "text": "response is 800 milliseconds",
    "start": "1063120",
    "end": "1065840"
  },
  {
    "text": "if the image is considered bad or a",
    "start": "1065840",
    "end": "1068640"
  },
  {
    "text": "verdict cannot be reached",
    "start": "1068640",
    "end": "1070720"
  },
  {
    "text": "the response usually takes 50 plus 800",
    "start": "1070720",
    "end": "1074480"
  },
  {
    "text": "milliseconds",
    "start": "1074480",
    "end": "1075360"
  },
  {
    "text": "that means 850 milliseconds to be",
    "start": "1075360",
    "end": "1077919"
  },
  {
    "text": "completed",
    "start": "1077919",
    "end": "1079440"
  },
  {
    "text": "if the image is a valid picture of a dog",
    "start": "1079440",
    "end": "1081679"
  },
  {
    "text": "or a cat",
    "start": "1081679",
    "end": "1082799"
  },
  {
    "text": "and it's not already present in the",
    "start": "1082799",
    "end": "1084720"
  },
  {
    "text": "database the database may take",
    "start": "1084720",
    "end": "1086720"
  },
  {
    "text": "up to a thousand milliseconds to save it",
    "start": "1086720",
    "end": "1090000"
  },
  {
    "text": "so for good images it may take up to",
    "start": "1090000",
    "end": "1093200"
  },
  {
    "text": "15 plus 100 plus 800",
    "start": "1093200",
    "end": "1097120"
  },
  {
    "text": "plus a thousand milliseconds or almost",
    "start": "1097120",
    "end": "1100240"
  },
  {
    "text": "2 000 milliseconds",
    "start": "1100240",
    "end": "1103440"
  },
  {
    "text": "to return the response this is way above",
    "start": "1103440",
    "end": "1106799"
  },
  {
    "text": "the current slo",
    "start": "1106799",
    "end": "1108080"
  },
  {
    "text": "engineers have predicted for rights",
    "start": "1108080",
    "end": "1111200"
  },
  {
    "text": "one could consider rebounding the 99th",
    "start": "1111200",
    "end": "1114480"
  },
  {
    "text": "percentile slo with a request deadline",
    "start": "1114480",
    "end": "1118080"
  },
  {
    "text": "but this may also generate wrong and",
    "start": "1118080",
    "end": "1120320"
  },
  {
    "text": "poor performance of the service",
    "start": "1120320",
    "end": "1122400"
  },
  {
    "text": "for instance the database may finish",
    "start": "1122400",
    "end": "1124720"
  },
  {
    "text": "writing the data",
    "start": "1124720",
    "end": "1125760"
  },
  {
    "text": "after the api reported a deadline",
    "start": "1125760",
    "end": "1128000"
  },
  {
    "text": "exceeded response to the clients",
    "start": "1128000",
    "end": "1130400"
  },
  {
    "text": "causing confusion on the customer side",
    "start": "1130400",
    "end": "1133200"
  },
  {
    "text": "it's better to work with the database",
    "start": "1133200",
    "end": "1135360"
  },
  {
    "text": "team on a strategy to improve the",
    "start": "1135360",
    "end": "1137120"
  },
  {
    "text": "performance",
    "start": "1137120",
    "end": "1138080"
  },
  {
    "text": "or adjust the right slo or ethic",
    "start": "1138080",
    "end": "1141760"
  },
  {
    "start": "1141000",
    "end": "1175000"
  },
  {
    "text": "to finalize let's review some tips to",
    "start": "1141760",
    "end": "1144880"
  },
  {
    "text": "make sure your distributed product",
    "start": "1144880",
    "end": "1146960"
  },
  {
    "text": "offers the correct slos to customers",
    "start": "1146960",
    "end": "1149679"
  },
  {
    "text": "when building an external slo",
    "start": "1149679",
    "end": "1152160"
  },
  {
    "text": "take into account the current slos of",
    "start": "1152160",
    "end": "1154240"
  },
  {
    "text": "all backends",
    "start": "1154240",
    "end": "1155520"
  },
  {
    "text": "consider all different user journeys and",
    "start": "1155520",
    "end": "1158080"
  },
  {
    "text": "the different paths",
    "start": "1158080",
    "end": "1159280"
  },
  {
    "text": "a request may take to generate a",
    "start": "1159280",
    "end": "1160880"
  },
  {
    "text": "response",
    "start": "1160880",
    "end": "1162320"
  },
  {
    "text": "if a better solo is required consider",
    "start": "1162320",
    "end": "1164640"
  },
  {
    "text": "changing the service architecture",
    "start": "1164640",
    "end": "1166640"
  },
  {
    "text": "or working with back-end owners to",
    "start": "1166640",
    "end": "1168480"
  },
  {
    "text": "improve the service",
    "start": "1168480",
    "end": "1170160"
  },
  {
    "text": "keeping service and back-ends co-located",
    "start": "1170160",
    "end": "1172559"
  },
  {
    "text": "make it easier to guarantee a slow",
    "start": "1172559",
    "end": "1174240"
  },
  {
    "text": "alignment",
    "start": "1174240",
    "end": "1175600"
  },
  {
    "start": "1175000",
    "end": "1226000"
  },
  {
    "text": "let's review what we learned today when",
    "start": "1175600",
    "end": "1177600"
  },
  {
    "text": "managing dependency for",
    "start": "1177600",
    "end": "1179039"
  },
  {
    "text": "distributed microservices consider",
    "start": "1179039",
    "end": "1181440"
  },
  {
    "text": "different types of growth",
    "start": "1181440",
    "end": "1182640"
  },
  {
    "text": "when evolving the product that means the",
    "start": "1182640",
    "end": "1184799"
  },
  {
    "text": "number of users user behavior and",
    "start": "1184799",
    "end": "1186880"
  },
  {
    "text": "services",
    "start": "1186880",
    "end": "1187440"
  },
  {
    "text": "relationships stateless services",
    "start": "1187440",
    "end": "1190640"
  },
  {
    "text": "are often easier to manage than stateful",
    "start": "1190640",
    "end": "1193120"
  },
  {
    "text": "ones",
    "start": "1193120",
    "end": "1194720"
  },
  {
    "text": "co-locate service components for better",
    "start": "1194720",
    "end": "1196720"
  },
  {
    "text": "performance easier failure isolation and",
    "start": "1196720",
    "end": "1199120"
  },
  {
    "text": "slo alignment",
    "start": "1199120",
    "end": "1200880"
  },
  {
    "text": "when building external slo take into",
    "start": "1200880",
    "end": "1203600"
  },
  {
    "text": "account the current slo of all back-ends",
    "start": "1203600",
    "end": "1206480"
  },
  {
    "text": "and the different user journeys work",
    "start": "1206480",
    "end": "1209280"
  },
  {
    "text": "with back-end owners",
    "start": "1209280",
    "end": "1210480"
  },
  {
    "text": "and allow extra time for research",
    "start": "1210480",
    "end": "1212480"
  },
  {
    "text": "allocation and architectural changes",
    "start": "1212480",
    "end": "1215200"
  },
  {
    "text": "i hope you have enjoyed these stories",
    "start": "1215200",
    "end": "1217120"
  },
  {
    "text": "and that you have and that i have",
    "start": "1217120",
    "end": "1218720"
  },
  {
    "text": "brought you some new ideas on how to",
    "start": "1218720",
    "end": "1220880"
  },
  {
    "text": "improve your services",
    "start": "1220880",
    "end": "1222960"
  },
  {
    "text": "talk to you later thank you so much",
    "start": "1222960",
    "end": "1228720"
  }
]