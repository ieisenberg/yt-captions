[
  {
    "text": "yeah thanks everyone hopefully I've got the three hours done enough because I know I stand between you and beer if I'm",
    "start": "3980",
    "end": "10219"
  },
  {
    "text": "literal google tell you about how they literally invented microservices and then you were meant to have like the actual CTO of CERN tell you about they",
    "start": "10219",
    "end": "16640"
  },
  {
    "text": "have how are they actually like what's the Sheldon Cooper quote like ripped the face off nature and the mask of nature and stare into",
    "start": "16640",
    "end": "22760"
  },
  {
    "text": "the face of God but you got me I think where's he's giving refunds by the door actually so Who am I I'm Matt",
    "start": "22760",
    "end": "29900"
  },
  {
    "text": "Turner I I've done a bunch of things I've done some Devon swaps I helped Skyscanner move to kubernetes",
    "start": "29900",
    "end": "36050"
  },
  {
    "text": "if anybody likes cheap flights I was a kubernetes consultant and I worked at a startup doing service mesh stuff focused",
    "start": "36050",
    "end": "42650"
  },
  {
    "text": "on Sto I'm now starting my own thing it's meant to be in stealth mode but the",
    "start": "42650",
    "end": "48470"
  },
  {
    "text": "t-shirts turned up on Sunday and they're really nice color so I guess it's out of stealth right now so I'm now doing a",
    "start": "48470",
    "end": "53809"
  },
  {
    "text": "cloud native consultancy I guess helping people use this kind of tech so if anybody's here to learn actually a bad",
    "start": "53809",
    "end": "60110"
  },
  {
    "text": "SEO because you saw it on the name I know it's a new cool thing that a lot of people are interested in I'll spend like five minutes on the on the pitch on",
    "start": "60110",
    "end": "66140"
  },
  {
    "text": "though what it does and why but what I'll then do is kind of diving fairly deep on how it works I will try to look",
    "start": "66140",
    "end": "73310"
  },
  {
    "text": "at the architecture of why it's built the way it is because I think that's really interesting which is I think why I was asked to give this talk so we'll",
    "start": "73310",
    "end": "80780"
  },
  {
    "text": "do a bit on kind of what containers and given a these pods actually are and how they work and then we'll look at that",
    "start": "80780",
    "end": "86630"
  },
  {
    "text": "architecture from the sort of kernel point of view and then we'll look at the wider architecture of how you build a big distribution system are more of that",
    "start": "86630",
    "end": "92600"
  },
  {
    "text": "kind of stuff um so if anybody's sort of completely unfamiliar with containers and kernels",
    "start": "92600",
    "end": "97939"
  },
  {
    "text": "and the networks and kubernetes this I'm going to be the right thing for you but hopefully hopefully it'll all make sense",
    "start": "97939",
    "end": "103850"
  },
  {
    "text": "as we go along right so the original objectives of this talk and as I say I'll try to look at in a slightly",
    "start": "103850",
    "end": "110420"
  },
  {
    "text": "different way today is to see how a packet goes from left to right traverses a an sto system which is you know",
    "start": "110420",
    "end": "115640"
  },
  {
    "text": "probably running on communities made of the amboy proxy that you've probably heard of and then we look at the control",
    "start": "115640",
    "end": "121100"
  },
  {
    "text": "plane calls that are made during that process to be to this history of control plane which is this sort of management",
    "start": "121100",
    "end": "126740"
  },
  {
    "text": "system and the original purpose of this is to build this useful mental model third sort of debugging is do should you",
    "start": "126740",
    "end": "133040"
  },
  {
    "text": "ever hit any of its very few very very few edge case bugs and reasoning about it which is maybe",
    "start": "133040",
    "end": "139480"
  },
  {
    "text": "what I'll focus on today yeah seems you should probably know a bit about networking in containers but I'll just",
    "start": "139480",
    "end": "144790"
  },
  {
    "text": "go straight into that this is three hours we don't we're not going to deal",
    "start": "144790",
    "end": "149920"
  },
  {
    "text": "with that so the astaire pitch why are we here your business wants about you right your",
    "start": "149920",
    "end": "156489"
  },
  {
    "text": "business wants business value which is basically new features because that's what customers pay for they want to get",
    "start": "156489",
    "end": "161560"
  },
  {
    "text": "them out fast they want quick experimentation time quick cycle time and you know low risk so we want this",
    "start": "161560",
    "end": "168640"
  },
  {
    "text": "fast feedback loop do we want this sort of scrum or the Lean Startup approach so what did we do we you know we broke the",
    "start": "168640",
    "end": "174190"
  },
  {
    "text": "monolith there's our monolith our single rock and we we cracked it in half did we",
    "start": "174190",
    "end": "179709"
  },
  {
    "text": "get micro services from that no we get a distributed monolith right which has got all the previous problems and now a",
    "start": "179709",
    "end": "184870"
  },
  {
    "text": "whole lot more because what was a function call that could never fail it's now going over a network that's probably on fire so you are left with you're left",
    "start": "184870",
    "end": "192010"
  },
  {
    "text": "with you know distributed monolith and this leads you to to do a bunch of things to mitigate that right so you",
    "start": "192010",
    "end": "197920"
  },
  {
    "text": "might have two services running in these two sort of anonymous grey boxes representing a compute environment you",
    "start": "197920",
    "end": "205180"
  },
  {
    "text": "know previously they would be namespaces in the same Java process the same JVM now they're different processes in",
    "start": "205180",
    "end": "211840"
  },
  {
    "text": "different containers that could be on different sides of the planet so we put",
    "start": "211840",
    "end": "217200"
  },
  {
    "text": "we started off by putting your in this tutorial like a library putting something like history sort of finical",
    "start": "217200",
    "end": "223389"
  },
  {
    "text": "in there to get the kind of back off and retry deadlines of rate-limiting in all",
    "start": "223389",
    "end": "229060"
  },
  {
    "text": "these services that we needed that we heard about and a lot of the earlier talks on this track the problem with",
    "start": "229060",
    "end": "234220"
  },
  {
    "text": "with these is that their libraries right they're in process so if the library changes you need to spin a new release",
    "start": "234220",
    "end": "239590"
  },
  {
    "text": "of your service as well so you better hope it builds like at that point in time and it's passing tests and these",
    "start": "239590",
    "end": "245470"
  },
  {
    "text": "two are specifically JVM only so that you know Java Kotlin Scala only it's no good if you want to start writing golang or rust you need another",
    "start": "245470",
    "end": "252040"
  },
  {
    "text": "implementation of the library that does all the same things and for anything that requires you know coordination like",
    "start": "252040",
    "end": "257889"
  },
  {
    "text": "global coordination or an on the wire consensus between two things they have to speak the same wire protocol so you",
    "start": "257889",
    "end": "263139"
  },
  {
    "text": "can't develop these things in isolation and it really became very hard so this",
    "start": "263139",
    "end": "268240"
  },
  {
    "text": "is where each do comes in you take those same two services and you put you basically admit that all",
    "start": "268240",
    "end": "275280"
  },
  {
    "text": "communication these days is HTTP ya be back G RPC which is HTTP to streaming or",
    "start": "275280",
    "end": "281880"
  },
  {
    "text": "be a good old-fashioned you know Jason rest over HTTP one so you put an HTTP with us proxy by every service this is",
    "start": "281880",
    "end": "288360"
  },
  {
    "text": "the logo for the Envoy proxy and then this thing can do all of those Network",
    "start": "288360",
    "end": "294720"
  },
  {
    "text": "with even C functions for you and what is Joe can do is put that in front of these services completely transparently",
    "start": "294720",
    "end": "301220"
  },
  {
    "text": "initio then has a control plane which is what we're going to look at it has these these three components that sort of",
    "start": "301220",
    "end": "306600"
  },
  {
    "text": "program these proxies up and tell them what to do so you want their writing manual config and injecting them into your containers and importantly this",
    "start": "306600",
    "end": "312630"
  },
  {
    "text": "thing has an API on the front so you can you can write the configuration and the control plane will sort of take care of",
    "start": "312630",
    "end": "318210"
  },
  {
    "text": "it and get it to the right place and sort of roll it out and this API is declarative it's a lot like the",
    "start": "318210",
    "end": "323729"
  },
  {
    "text": "kubernetes api it takes ya moral documents that describe the state of the world as you would like to see it so",
    "start": "323729",
    "end": "332070"
  },
  {
    "text": "this tier bills itself as as an open platform it's an open source project to connect so these services together to",
    "start": "332070",
    "end": "338940"
  },
  {
    "text": "secure them to control them as in manipulating that traffic and to observe them and this is pretty much what it",
    "start": "338940",
    "end": "346770"
  },
  {
    "text": "does this is the emergent behavior of all the low level features we're going to look at you know I think Sara said and I keynote that we should be using",
    "start": "346770",
    "end": "352800"
  },
  {
    "text": "service message to to get these distributed systems the network functions that they need for free might reach eyes and back off from deadlines",
    "start": "352800",
    "end": "360110"
  },
  {
    "text": "and then I think then we're saying that you know Google has does actually have this stuff in a library because they",
    "start": "360110",
    "end": "365789"
  },
  {
    "text": "have much more control over their source code but it's it's the same principle again you need that stuff and the dream is that your service is left being only",
    "start": "365789",
    "end": "372120"
  },
  {
    "text": "business logic so that was the super fast pitch super fast operating systems",
    "start": "372120",
    "end": "378300"
  },
  {
    "text": "201 I know we're starting we're starting already okay so this is our",
    "start": "378300",
    "end": "385680"
  },
  {
    "text": "left-to-right packet and then on the on count packet here coming across amidst your system the first thing it does is",
    "start": "385680",
    "end": "390990"
  },
  {
    "text": "in hits an ingress point right so this is a request from from a user are on the",
    "start": "390990",
    "end": "396270"
  },
  {
    "text": "internet with a now a website and they hit an ingress point this isn't actually two too interesting",
    "start": "396270",
    "end": "402029"
  },
  {
    "text": "you know just to say there's there's no magic here so this ingress is a bank of the Envoy proxy this does the same as your ingress",
    "start": "402029",
    "end": "408180"
  },
  {
    "text": "controller on kubernetes you know there's no magic it does the dance that everybody has to learn when they first",
    "start": "408180",
    "end": "414360"
  },
  {
    "text": "go get get hands-on with kubernetes is you point your wild card the dns record",
    "start": "414360",
    "end": "420210"
  },
  {
    "text": "in your god TLS you know it is sort of a low balance from the cloud it terminates things it reissues to a no port main to",
    "start": "420210",
    "end": "426330"
  },
  {
    "text": "a cluster IP gets to a proxy like the whole the whole dance we know how this works so let's take for the sake of 50",
    "start": "426330",
    "end": "431729"
  },
  {
    "text": "minutes and the your beer let's take ingress is a sort of fait accompli so our services as come through ingress",
    "start": "431729",
    "end": "437939"
  },
  {
    "text": "has been routed to the right service right so this is all layer 7 this is provided by so you get this in in any",
    "start": "437939",
    "end": "443399"
  },
  {
    "text": "kubernetes system right your ingress controller does layer 7 so these these requests would come in with an HTTP host",
    "start": "443399",
    "end": "449849"
  },
  {
    "text": "and a path and various headers and those could all be used to route to select the I mean in America too much to route the",
    "start": "449849",
    "end": "457289"
  },
  {
    "text": "request to the to the right service that you want in your Microsoft System in this case service a so the packet moves",
    "start": "457289",
    "end": "464189"
  },
  {
    "text": "cross and it gets there what does it find well it's no big secret right that we've gotten this Envoy proxy stuck in",
    "start": "464189",
    "end": "470039"
  },
  {
    "text": "front of the actual service the actual business logic but what is what is going",
    "start": "470039",
    "end": "475199"
  },
  {
    "text": "on here what is the it's the architecture of this so let's remember what a container is let's remember that",
    "start": "475199",
    "end": "481919"
  },
  {
    "text": "actually there's there's no such thing right in the Linux kernel you probably",
    "start": "481919",
    "end": "487080"
  },
  {
    "text": "won't find this word in the source code there's there's no first class concept of a container in Linux you know FreeBSD",
    "start": "487080",
    "end": "492539"
  },
  {
    "text": "had jails and Solaris and zones plan 9 is the best operating system it had four main spaces but we're not on the best",
    "start": "492539",
    "end": "499889"
  },
  {
    "text": "timeline we've got some students reimplementation of four point four bsd so what we've got in our Linux kernel is",
    "start": "499889",
    "end": "506149"
  },
  {
    "text": "containers with namespace native namespaces so we've got these six namespaces that are a software isolation",
    "start": "506149",
    "end": "512518"
  },
  {
    "text": "mechanism right so very briefly imagine we have a clear container and morally nginx you know called nginx it's running",
    "start": "512519",
    "end": "519599"
  },
  {
    "text": "nginx and then maybe it's running something else some other unix process like supervisor d to keep it up it's in",
    "start": "519599",
    "end": "525209"
  },
  {
    "text": "these six isolation points briefly there's this mount namespace isolates",
    "start": "525209",
    "end": "530279"
  },
  {
    "text": "them table it's like chroot on steroids so these processes see a different version",
    "start": "530279",
    "end": "535640"
  },
  {
    "text": "of the mound table a different virtual file system built up from the you know /the root path to things outside of this",
    "start": "535640",
    "end": "542210"
  },
  {
    "text": "namespace and this if you think about it this is necessary right containers run from an image so actually the very first",
    "start": "542210",
    "end": "548210"
  },
  {
    "text": "thing you need to do is make sure that /the root of the filesystem is is that image rather than you know that time",
    "start": "548210",
    "end": "554810"
  },
  {
    "text": "will rather than and the hosts disk and then you can you can mount volumes into",
    "start": "554810",
    "end": "560000"
  },
  {
    "text": "these containers and that's obviously just you know inserting mounts into the mountain table like would mount a USB",
    "start": "560000",
    "end": "565160"
  },
  {
    "text": "drive on your on your host operating system that's isolated the UTS namespace means that this container can have a",
    "start": "565160",
    "end": "572270"
  },
  {
    "text": "separate host name and dns domain to the stuff outside of it the PID namespace means that process IDs",
    "start": "572270",
    "end": "577970"
  },
  {
    "text": "can't be seen from you know on the outside from inside you shell into a container right run a run a shell you do",
    "start": "577970",
    "end": "583880"
  },
  {
    "text": "PS and you see like two things you see fashion PS you don't see any of the",
    "start": "583880",
    "end": "589310"
  },
  {
    "text": "stuff from the host system but user name space isolates the user IDs as well so they use a 1000 in here isn't the same",
    "start": "589310",
    "end": "595550"
  },
  {
    "text": "as using 1000 on the outside can't start mapping pages ish user namespaces we",
    "start": "595550",
    "end": "600560"
  },
  {
    "text": "won't go there the IPC namespace tops you sending signals the system v IPC",
    "start": "600560",
    "end": "605860"
  },
  {
    "text": "requests system v shared memory across this boundary and then as will become",
    "start": "605860",
    "end": "611630"
  },
  {
    "text": "interesting for us the network namespace isolates networking and we'll we'll see",
    "start": "611630",
    "end": "616640"
  },
  {
    "text": "what that means but it basically means that there's a different set of interfaces a different set of ID's",
    "start": "616640",
    "end": "622180"
  },
  {
    "text": "inside this namespace to outside so what is the kubernetes part because what this",
    "start": "622180",
    "end": "628520"
  },
  {
    "text": "packet hit was a kid Vanetta spot right containing two containers because that's",
    "start": "628520",
    "end": "635600"
  },
  {
    "text": "what given estes pods are they're they're several containers kind of stuck together so a kubernetes pod is quite",
    "start": "635600",
    "end": "644570"
  },
  {
    "text": "interesting so that the the architecture of a pod when we what we build to give us this dev experience from the kind of",
    "start": "644570",
    "end": "650720"
  },
  {
    "text": "primitives that we find in there in Colonel is kind of shown by this diagram here so it's two containers kind of",
    "start": "650720",
    "end": "657440"
  },
  {
    "text": "coupled together this is why you have to deploy a pod as an atomic unit as the",
    "start": "657440",
    "end": "662690"
  },
  {
    "text": "atomic unit if scheduling it has to go into one machine because they have to share a kernel because these two containers actually share some of these",
    "start": "662690",
    "end": "669260"
  },
  {
    "text": "namespaces so they both have a separate mount namespace as they have to because they run from separate images they",
    "start": "669260",
    "end": "674540"
  },
  {
    "text": "actually have got a tough separation UTS namespaces so they can have different host names but they share a PID namespace so the process is in one can",
    "start": "674540",
    "end": "682130"
  },
  {
    "text": "see the processes and the other can signal them can talk to them they show you use username space so that you know",
    "start": "682130",
    "end": "687320"
  },
  {
    "text": "farm for UNIX file permissions work because they agree on their on their set of users and groups they share an IPC",
    "start": "687320",
    "end": "692600"
  },
  {
    "text": "namespace if you want to use any of the system 5 mechanisms and importantly for us they share this network namespace",
    "start": "692600",
    "end": "697760"
  },
  {
    "text": "which means they have one view of the network what does that mean it means they've got one interface it's actually",
    "start": "697760",
    "end": "704810"
  },
  {
    "text": "a v1 end of a VE pair I think where's like to the long explanation of little",
    "start": "704810",
    "end": "710780"
  },
  {
    "text": "sort of death peasant virtual networking I gave in the 3-hour version it's it doesn't fit here but this is this is an",
    "start": "710780",
    "end": "715970"
  },
  {
    "text": "interface that we've renamed to either 0 so it looks like a sort of standard your",
    "start": "715970",
    "end": "721460"
  },
  {
    "text": "actual PCI card IO this thing kind of looks like a small virtual machine it's one end of a birth pair but anyway we have our one interface with one IP",
    "start": "721460",
    "end": "728000"
  },
  {
    "text": "address shared by all of these processes in these two containers we have a",
    "start": "728000",
    "end": "733040"
  },
  {
    "text": "loopback we also have one set of routes one route table we have one set of",
    "start": "733040",
    "end": "738440"
  },
  {
    "text": "sockets one one domain 4 units domain sockets and importantly we have one set of IP tables rules so I could ride the",
    "start": "738440",
    "end": "744500"
  },
  {
    "text": "night Peter this rule you know process it in here get set up an IP tables rule that say dropped or pack old traffic and",
    "start": "744500",
    "end": "751370"
  },
  {
    "text": "that would drop all the traffic coming in and out of this one as well because they're in this shared network namespace although they're allegedly two separate",
    "start": "751370",
    "end": "757490"
  },
  {
    "text": "containers so nginx can for example combine two 8080 TCP and then fluently",
    "start": "757490",
    "end": "763820"
  },
  {
    "text": "couldn't because one one socket dimension is one socket space addresses",
    "start": "763820",
    "end": "769160"
  },
  {
    "text": "in use so for our purposes for building this service mesh we can do more interesting things so imagine we replace",
    "start": "769160",
    "end": "776270"
  },
  {
    "text": "that fluent D there was a sort of sidecar log exporter with a proxy like Envoy and then we set up some IP tables",
    "start": "776270",
    "end": "783980"
  },
  {
    "text": "rules to say I want to intercept all traffic coming in and out of this port 8080 and",
    "start": "783980",
    "end": "789170"
  },
  {
    "text": "I first want it to come in to envoy and then envoy is gonna punt it back out to say loop back and then there's another",
    "start": "789170",
    "end": "794870"
  },
  {
    "text": "rule that says okay from the loop back you can finally go from nginx so this is how we we leverage this this shed IP",
    "start": "794870",
    "end": "803120"
  },
  {
    "text": "table system to do this transparent interception of network traffic okay so",
    "start": "803120",
    "end": "810290"
  },
  {
    "text": "this this is called the sidecar model we originally have lowered they I didn't point it out but this idea of taking you",
    "start": "810290",
    "end": "816770"
  },
  {
    "text": "know morally a container should normally a process should do one thing and you do it well that's the UNIX philosophy morally a container should do one thing",
    "start": "816770",
    "end": "823940"
  },
  {
    "text": "right they should have one primary process like an index if you're putting a database in here you could you're doing it wrong but it's okay to absurd",
    "start": "823940",
    "end": "830540"
  },
  {
    "text": "right axillary services same with a politician have one primary purpose this thing presumably serves HTML but it also",
    "start": "830540",
    "end": "837620"
  },
  {
    "text": "has this this sidecar giving the extra functionality that we might want so the",
    "start": "837620",
    "end": "845270"
  },
  {
    "text": "sidecar injection is again this is a big topic liz rice who works for aqua does",
    "start": "845270",
    "end": "851180"
  },
  {
    "text": "this amazing talk where she basically builds containers from scratch she's kind of live codes a couple of hundred",
    "start": "851180",
    "end": "856340"
  },
  {
    "text": "lines of go along and makes all the system calls to build these namespaces and to make these containers so watching this go through it's really interesting",
    "start": "856340",
    "end": "862390"
  },
  {
    "text": "but basically as the cubelet try it starts to build these pods off but it creates these namespaces then it goes",
    "start": "862390",
    "end": "869330"
  },
  {
    "text": "through its list of init containers which are more container images that just contain a one-shot process that",
    "start": "869330",
    "end": "874550"
  },
  {
    "text": "does something in quits but what's interesting is that they affect this namespace so they effects if",
    "start": "874550",
    "end": "882170"
  },
  {
    "text": "if something writes to IP tables rules or changes the round table you know just like running round on your on your",
    "start": "882170",
    "end": "888080"
  },
  {
    "text": "command line when that route user space command quits the route table is still changed right the kernel remembers that",
    "start": "888080",
    "end": "893870"
  },
  {
    "text": "it's it's a persistent thing and it then affects every other name every other process subsequently in that network",
    "start": "893870",
    "end": "899960"
  },
  {
    "text": "namespace so the first in a container just turns on core dumps you can draw",
    "start": "899960",
    "end": "905180"
  },
  {
    "text": "your own conclusions about perceptions of stability of the system from that I will not comment the next one is more",
    "start": "905180",
    "end": "911870"
  },
  {
    "text": "interesting and sets up the it runs a very long shell script that I won't go through that basically sets up all those",
    "start": "911870",
    "end": "918529"
  },
  {
    "text": "inspiring what sets up all those interception rules that I talked about and this is what makes it transparent",
    "start": "918529",
    "end": "923810"
  },
  {
    "text": "it's the fact that this comes along sets are these rules and then your primary container has to have no idea that it's in this intercepting environment but it",
    "start": "923810",
    "end": "930470"
  },
  {
    "text": "doesn't need to contain any of the sort of networking logic we've talked about that we have for the retries in the back",
    "start": "930470",
    "end": "935540"
  },
  {
    "text": "offs that we want it this is an inert container basically because it's a privileged operation to manipulate",
    "start": "935540",
    "end": "941839"
  },
  {
    "text": "iptables rules this thing runs with cap net admin capability and then obviously when it's gone that's dropped and then",
    "start": "941839",
    "end": "948499"
  },
  {
    "text": "we can start there the you know the actual two containers there's a bunch of details on void listens on 15,000 and",
    "start": "948499",
    "end": "954589"
  },
  {
    "text": "one the iptables rules have persisted from the manipulation by that init container and they reroute the the",
    "start": "954589",
    "end": "960680"
  },
  {
    "text": "packets through envoy so that's how the",
    "start": "960680",
    "end": "966620"
  },
  {
    "text": "the very early sort of interception works and that's how we build this off from from of those namespace primitives",
    "start": "966620",
    "end": "971660"
  },
  {
    "text": "in the kernel and see groups as well I did I didn't mention them but you've probably heard of C groups which is the kind of hardware side of that isolation",
    "start": "971660",
    "end": "979309"
  },
  {
    "text": "mechanism so our container or pod also existed in what your C groups which limits its visibility of hardware",
    "start": "979309",
    "end": "985309"
  },
  {
    "text": "devices and limits it's it's a rate of access so you can reach it you can limit",
    "start": "985309",
    "end": "990399"
  },
  {
    "text": "network bandwidth and steeper you and memory usage with the use of secrets so together they provide hardware and",
    "start": "990399",
    "end": "996050"
  },
  {
    "text": "software isolation so am i doing what",
    "start": "996050",
    "end": "1001059"
  },
  {
    "text": "happens next the next thing is that you know maybe our service the packet",
    "start": "1001059",
    "end": "1006519"
  },
  {
    "text": "bounces into your Envoy into service a back out again you know if service a has just crashed",
    "start": "1006519",
    "end": "1012250"
  },
  {
    "text": "they never responds to Envoy envoy world maybe wait a second and then just return a 503 on your behalf or whatever you've",
    "start": "1012250",
    "end": "1017620"
  },
  {
    "text": "got it configured to do but service a is going to issue another call on the back end to service B and it wants to talk to",
    "start": "1017620",
    "end": "1024610"
  },
  {
    "text": "service B so the first thing it's going to do is service discovery how does it know where that service B is so you're",
    "start": "1024610",
    "end": "1031120"
  },
  {
    "text": "probably in kubernetes and as I say I'm assuming a bit of kubernetes knowledge here you've probably got a kubernetes",
    "start": "1031120",
    "end": "1036188"
  },
  {
    "text": "service fronting all of the pods that maintain service but that sort of comprised service B so you will have a",
    "start": "1036189",
    "end": "1043418"
  },
  {
    "text": "cluster IP as it's called a virtual IP of it for that service so you could just bring packets of that",
    "start": "1043419",
    "end": "1049649"
  },
  {
    "text": "the problem with that is that it's it's then the sort of cabinet it's proxy that does the the backend selection the load",
    "start": "1049649",
    "end": "1056490"
  },
  {
    "text": "balancing and it really has no idea what's going on it got it can't do a great job other than to just round-robin",
    "start": "1056490",
    "end": "1061970"
  },
  {
    "text": "but we are we can do better than that right that's what part of what it's for",
    "start": "1061970",
    "end": "1067830"
  },
  {
    "text": "because like I said the ingress is is layer seven and does host and path based",
    "start": "1067830",
    "end": "1072840"
  },
  {
    "text": "routing and could look at headers and make much more intelligent decisions with an sto system that's not the only",
    "start": "1072840",
    "end": "1078179"
  },
  {
    "text": "thing that's HTTP aware all of these sidecars are so what this all they want to do is it wants the the full list of",
    "start": "1078179",
    "end": "1084870"
  },
  {
    "text": "potential backends and it wants to choose when itself rather than just throwing it at a round robin thing it",
    "start": "1084870",
    "end": "1090600"
  },
  {
    "text": "wants be able to talk to the other envoys you know doing sort of least least weighted or a geographically closest or something like that so it",
    "start": "1090600",
    "end": "1096899"
  },
  {
    "text": "needs to be able to find out where all of these things are in order to be able to do that so what do I do",
    "start": "1096899",
    "end": "1103580"
  },
  {
    "text": "yeah I'm probably on a kubernetes system I can ask given ethics right so we can",
    "start": "1103580",
    "end": "1108960"
  },
  {
    "text": "get this service for service B and we see that sure enough it's got one cluster IP this is a virtual IP and this",
    "start": "1108960",
    "end": "1114990"
  },
  {
    "text": "just gets round-robin between the real backends so that's not really good enough the way these things work though",
    "start": "1114990",
    "end": "1120659"
  },
  {
    "text": "the way cube knows where to find the backends is this label selector right so in this case we've got applicants to service B that's how the pods are",
    "start": "1120659",
    "end": "1127169"
  },
  {
    "text": "selected so can I do anything with that well let's have a look in DNS first right service B that's the kind of name",
    "start": "1127169",
    "end": "1133409"
  },
  {
    "text": "I've given this thing again one a record service IP range not a not a pod IP",
    "start": "1133409",
    "end": "1139940"
  },
  {
    "text": "indeed though I can go get all the pods and I know we're sort of looking for service B so maybe I'll get for that and",
    "start": "1139940",
    "end": "1146070"
  },
  {
    "text": "I find all these things other labels aren't shown but I find I now find that I look I do have three pods and they all",
    "start": "1146070",
    "end": "1151200"
  },
  {
    "text": "start with service B but this this just isn't sufficient why because services are based on these AB selectors that can",
    "start": "1151200",
    "end": "1157139"
  },
  {
    "text": "be arbitrarily complicated you can't just go fumbling around like this so this isn't sufficient either we need a",
    "start": "1157139",
    "end": "1162480"
  },
  {
    "text": "way to get always the right set of pods we need to say that label selector and we need to run it ourselves basically",
    "start": "1162480",
    "end": "1168409"
  },
  {
    "text": "kubernetes luckily gives you an API endpoint to do that so unsurprisingly it's called endpoints so I can ask to",
    "start": "1168409",
    "end": "1175409"
  },
  {
    "text": "get the endpoints for service B and now I get three IP addresses in this example and they are pod IP ranges not service",
    "start": "1175409",
    "end": "1181470"
  },
  {
    "text": "IP ranges so this is Anning this is an example right the execution environment I found myself in has a service discovery",
    "start": "1181470",
    "end": "1187950"
  },
  {
    "text": "mechanism it's actually got to in this case it's got a kind of naive one which is oh you want to get packets for",
    "start": "1187950",
    "end": "1193200"
  },
  {
    "text": "something that quacks like a service be great I can do that for you well for your a layer of abstraction and it's",
    "start": "1193200",
    "end": "1198450"
  },
  {
    "text": "also got a okay if you don't want to kind of lift the lid off if you know what you're doing if you want to be taking intelligent networking decisions",
    "start": "1198450",
    "end": "1204600"
  },
  {
    "text": "I can give you the actual like piece of the workloads if that would help so in cuba Nettie's we can hit that end",
    "start": "1204600",
    "end": "1209970"
  },
  {
    "text": "point and in other systems there are similar things you might imagine it war dns on vm so you just look for SRV",
    "start": "1209970",
    "end": "1215220"
  },
  {
    "text": "records or something oh yeah right and I can get a longer form of this and you",
    "start": "1215220",
    "end": "1221370"
  },
  {
    "text": "know I get for each entry I get the IP address I also get interesting things like one node it's on so I could go and",
    "start": "1221370",
    "end": "1227370"
  },
  {
    "text": "look up what region and what zone that see and work out how close it is to me I find out what kind of ports it's",
    "start": "1227370",
    "end": "1232440"
  },
  {
    "text": "expecting for this away all of that useful information is in this service discovery mechanism so I need to take",
    "start": "1232440",
    "end": "1239850"
  },
  {
    "text": "that service discovery information and I need my own voice to have it right so this is one of the first sort of talking",
    "start": "1239850",
    "end": "1246929"
  },
  {
    "text": "points maybe about the STR architecture is I want this envoy to kind of have this pre-programmed I don't want it to",
    "start": "1246929",
    "end": "1252630"
  },
  {
    "text": "have to reach out every time like it can't look in DNS that's not good enough I don't really want it calling",
    "start": "1252630",
    "end": "1257910"
  },
  {
    "text": "kubernetes to hear that endpoints API every time because that's going to really load the system it's gonna be a",
    "start": "1257910",
    "end": "1263490"
  },
  {
    "text": "long way down so what I really want is to have that service discovery information ready and available in our voice so we can start doing things so we",
    "start": "1263490",
    "end": "1271530"
  },
  {
    "text": "introduced our first kubernetes control plane component which is this thing called pilot that does exactly that pilots the thing that can figures these",
    "start": "1271530",
    "end": "1277860"
  },
  {
    "text": "on voice and pushes configuration to them supposed to say you don't have to because out of the box it could figures",
    "start": "1277860",
    "end": "1283950"
  },
  {
    "text": "them to do default we choice and timeouts and all these kind of things so that's the pilot component how does it",
    "start": "1283950",
    "end": "1289799"
  },
  {
    "text": "get its configuration well it's actually got a bunch of adapters so pilot is the sort of",
    "start": "1289799",
    "end": "1295200"
  },
  {
    "text": "interface to your environment it knows how to go talk to kubernetes service discovery to go and find out where your pods are if you're not running in queue",
    "start": "1295200",
    "end": "1302309"
  },
  {
    "text": "it will also talk to console it'll also talk to sue keeper it can actually talk to all of them at once so it can build a",
    "start": "1302309",
    "end": "1308309"
  },
  {
    "text": "sort of shared database of here are all the end points in kubernetes and then oh you also told me about a console system managing your",
    "start": "1308309",
    "end": "1314510"
  },
  {
    "text": "legacy PM's I've ingested those services as well and I've synthesized that information together it then kind of",
    "start": "1314510",
    "end": "1320960"
  },
  {
    "text": "turns that data and it pushes it to each of the Envoy proxies and another",
    "start": "1320960",
    "end": "1326899"
  },
  {
    "text": "interesting point is that that that API is is what envoy in my sort of mat climate lift is calling me the data",
    "start": "1326899",
    "end": "1333230"
  },
  {
    "text": "plane API so they've gone to links to standardized and open this API the idea being that in a system like this this is",
    "start": "1333230",
    "end": "1340850"
  },
  {
    "text": "open sourced where this is free software you are free to swap one way out for anything else that implements the data plane API and I think maybe a H a proxy",
    "start": "1340850",
    "end": "1348139"
  },
  {
    "text": "does now so that's also another sort of interesting part so this is as I say",
    "start": "1348139",
    "end": "1354260"
  },
  {
    "text": "it's a push model actually a pilot will do its best to establish established watches on these backends so it gets",
    "start": "1354260",
    "end": "1361039"
  },
  {
    "text": "kind of a kind of long poles when they get changed it doesn't have to spam them it'll spam though if it has to and then",
    "start": "1361039",
    "end": "1367190"
  },
  {
    "text": "pilot change that config information and when it's if and when it changed it pushes it to envoy maybe synchronously",
    "start": "1367190",
    "end": "1373309"
  },
  {
    "text": "so envoy has new configuration ready to go or you know envoy doesn't have to poll so that's how we do this sort of",
    "start": "1373309",
    "end": "1380110"
  },
  {
    "text": "remote asynchronous ingestion of service discovery and push it into our voice so",
    "start": "1380110",
    "end": "1386360"
  },
  {
    "text": "what component do well it's the thing that you know configures your sort of proxy in a in a static way so it can it",
    "start": "1386360",
    "end": "1392779"
  },
  {
    "text": "can affect the the routing of the ingress because then ingress controller is provided by SEO subject to the same",
    "start": "1392779",
    "end": "1398059"
  },
  {
    "text": "configuration it's the thing that'll do you you know traffic mirroring for testing prod and staging it'll to your a",
    "start": "1398059",
    "end": "1403880"
  },
  {
    "text": "be testing traffic shifting canary deployments it'll set up circuit breakers it'll set up fault injections",
    "start": "1403880",
    "end": "1409179"
  },
  {
    "text": "anything that that proxy can be told you know told to do one percent of the time I want you to return a 503 just because",
    "start": "1409179",
    "end": "1416320"
  },
  {
    "text": "and if if the back end takes more than no seconds then throw a circuit breaker",
    "start": "1416320",
    "end": "1421940"
  },
  {
    "text": "and return this default so can our",
    "start": "1421940",
    "end": "1427100"
  },
  {
    "text": "packet now if it we found service B here it is there's three instances of it three pods come in a morphix gray",
    "start": "1427100",
    "end": "1433549"
  },
  {
    "text": "compute blob right remember they may not be on top of each other can the packet now traverse well not necessarily right",
    "start": "1433549",
    "end": "1441049"
  },
  {
    "text": "there's a few more checks we need to make a few more things that pilot can't configure the proxy to do ahead of time so we need",
    "start": "1441049",
    "end": "1447559"
  },
  {
    "text": "to check that there's no security policy in place that says that a isn't allowed to talk to me we need to check there's",
    "start": "1447559",
    "end": "1454130"
  },
  {
    "text": "no rate limits that have been exceeded so this isn't the kind of stuff you could pre-program the proxy with it needs to kind of know right so so",
    "start": "1454130",
    "end": "1462409"
  },
  {
    "text": "unicast rate limiting is easy we could sell you know this this envoy that it's",
    "start": "1462409",
    "end": "1467720"
  },
  {
    "text": "got a thousand QPS over here well what that means is this one instance of service a gets a thousand QPS to what",
    "start": "1467720",
    "end": "1474649"
  },
  {
    "text": "each instance of service be or sort of all of them but then what if other instances of service are calling this",
    "start": "1474649",
    "end": "1479809"
  },
  {
    "text": "what if there's a service C that's calling this so to do global rate limiting to basically say you know I've load tested my new service sre are happy",
    "start": "1479809",
    "end": "1487580"
  },
  {
    "text": "to take it over you know we know it hockey sticks at five thousand PPS per pod I've got three so I want a global",
    "start": "1487580",
    "end": "1493279"
  },
  {
    "text": "rate limit of 15000 QPS that globe from from wherever oh and by the way service",
    "start": "1493279",
    "end": "1498919"
  },
  {
    "text": "a is a higher priority to service B that is that is a more difficult thing to do",
    "start": "1498919",
    "end": "1504049"
  },
  {
    "text": "and that requires a few extra components so introducing mixer the next control",
    "start": "1504049",
    "end": "1509240"
  },
  {
    "text": "plan component this thing does those policy checks of our security and rate limits and it's also the thing that",
    "start": "1509240",
    "end": "1515029"
  },
  {
    "text": "gathers telemetry so not only have we moved retries and rate limits and",
    "start": "1515029",
    "end": "1520730"
  },
  {
    "text": "whatever out of service by pushing in to employ also you know because because",
    "start": "1520730",
    "end": "1525980"
  },
  {
    "text": "this thing's on the wire because every packet goes through it and because it understands layer seven in HTTP it can",
    "start": "1525980",
    "end": "1531470"
  },
  {
    "text": "generate logs it can add trace headers and generate trace bands it can generate metrics for us so again something that",
    "start": "1531470",
    "end": "1537620"
  },
  {
    "text": "can be taken out of the service envoy implements that for us and then mixer is just an aggregation point for that again",
    "start": "1537620",
    "end": "1543440"
  },
  {
    "text": "you know to kind of plug it into the environment we now take a digression and",
    "start": "1543440",
    "end": "1549110"
  },
  {
    "text": "this is where we get into some architectures you probably haven't wondered about when we're doing I'm",
    "start": "1549110",
    "end": "1555230"
  },
  {
    "text": "sorry I'm talking about later seven right routing these things treating this thing is like a layer seven network routing this stuff based on HTTP",
    "start": "1555230",
    "end": "1560600"
  },
  {
    "text": "information when you're doing IP layer three layer four networks you have this thing called the IP five tuple and this",
    "start": "1560600",
    "end": "1567769"
  },
  {
    "text": "is the the set of five data points that are sufficient to identify and like an IP flow and IP",
    "start": "1567769",
    "end": "1573480"
  },
  {
    "text": "connection and they are the source address and the destination duress and the destination port and the protocol",
    "start": "1573480",
    "end": "1579990"
  },
  {
    "text": "that being you know UDP TCP that IP protocol so with these five you can",
    "start": "1579990",
    "end": "1586169"
  },
  {
    "text": "identify any tcp stream any UDP the sort of gear connection between connection",
    "start": "1586169",
    "end": "1591990"
  },
  {
    "text": "between endpoints so the way you build these these big IP routers the big",
    "start": "1591990",
    "end": "1600720"
  },
  {
    "text": "system seducible Internet backbone kind of stuff is they have this segregated architecture they have a control plane",
    "start": "1600720",
    "end": "1606450"
  },
  {
    "text": "and they have a data plane the control plane ingests all the information it needs to make routing decisions from you",
    "start": "1606450",
    "end": "1613200"
  },
  {
    "text": "know BGP and open shortest path first and then also you know local protocols like spanning tree and an ARP so all of",
    "start": "1613200",
    "end": "1620250"
  },
  {
    "text": "these different pieces of information that would come together to tell you know a big iron router where to send a packet all come into this control plane",
    "start": "1620250",
    "end": "1628080"
  },
  {
    "text": "which is a general-purpose computer and it builds this thing called the Rooter information base which is like a sequel database right there's a different data",
    "start": "1628080",
    "end": "1634380"
  },
  {
    "text": "schema for each one of these protocols they all get put into tables with that schema there's these big join statements",
    "start": "1634380",
    "end": "1639990"
  },
  {
    "text": "that kind of merge them all together no priorities and work out well like what decisions to make so you do that on",
    "start": "1639990",
    "end": "1647040"
  },
  {
    "text": "this general-purpose sort of asynchronous computer with no real hard deadlines you do that and every time one of these protocols gives you a new piece",
    "start": "1647040",
    "end": "1653250"
  },
  {
    "text": "of information about your topology or your your peers you you sort of put this",
    "start": "1653250",
    "end": "1658290"
  },
  {
    "text": "into your your rib and you kind of churn it and compile it and what you emit is entries for your forwarding information",
    "start": "1658290",
    "end": "1664440"
  },
  {
    "text": "base and this fib is much more like a no sequel database all right it's a bunch of denormalized tables that are heavily",
    "start": "1664440",
    "end": "1670830"
  },
  {
    "text": "indexed so they're all meant to be constant time lookup so as soon as I get a packet I can look at that IP five",
    "start": "1670830",
    "end": "1676500"
  },
  {
    "text": "tuple and say okay which TCP connection is this oh that's your your current YouTube stream because it's you know your IP your browser's IP and port",
    "start": "1676500",
    "end": "1683309"
  },
  {
    "text": "hitting YouTube with 80 TCP protocol TCP",
    "start": "1683309",
    "end": "1688500"
  },
  {
    "text": "and I can look that up in constant time because there's probably a cait table feed on that and I can make a really",
    "start": "1688500",
    "end": "1694140"
  },
  {
    "text": "fast decision about where to send it I don't have to do all of that crunching involving this business logic know that",
    "start": "1694140",
    "end": "1699270"
  },
  {
    "text": "understands all of these protocols and I don't have to call up it this database every time so this is kind of pushed into the fit which is part of",
    "start": "1699270",
    "end": "1705550"
  },
  {
    "text": "what's called the data plane and actually that data plane itself has and this is getting into implementation",
    "start": "1705550",
    "end": "1711010"
  },
  {
    "text": "details but it has what's good a sort of called slope Assam fled fast paths and slow paths so if this packet has very",
    "start": "1711010",
    "end": "1719170"
  },
  {
    "text": "recently been seen the actual interrupt handler for the network card can probably deal with it because it's got a small fixed piece of memory it's got a",
    "start": "1719170",
    "end": "1724990"
  },
  {
    "text": "small cache it can cache parts of the FIB it knows its donor you know access control let's check in the last hundred",
    "start": "1724990",
    "end": "1731290"
  },
  {
    "text": "milliseconds so it still considers that information good and the interrupt angle at the top of the inter attack that can",
    "start": "1731290",
    "end": "1736390"
  },
  {
    "text": "probably probably just pun that packet right without doing anything if that information isn't in that small cache or",
    "start": "1736390",
    "end": "1742690"
  },
  {
    "text": "if you need a little bit more decisions made taking from maybe look checking you know ACL information in a different",
    "start": "1742690",
    "end": "1749440"
  },
  {
    "text": "table in this fib or something you might actually have to to call the Conan what do I have to come out of interrupt into",
    "start": "1749440",
    "end": "1754600"
  },
  {
    "text": "the colonel proper you know somewhere you can allocate memory for example you might actually have to call into a kernel module and if that can't handle",
    "start": "1754600",
    "end": "1761410"
  },
  {
    "text": "it you know the architecture of these systems is you punt over a socket you're actually going to use a space where you really can kind of do anything you want",
    "start": "1761410",
    "end": "1767230"
  },
  {
    "text": "so this thing these things have slowed our pasts and faster paths based on the sort of the locality and the recent",
    "start": "1767230",
    "end": "1773590"
  },
  {
    "text": "validity of cache information but they all access smaller or bigger parts of this forwarding information base which",
    "start": "1773590",
    "end": "1779470"
  },
  {
    "text": "is this denormalized indexed store so why the aside into a into a IP router",
    "start": "1779470",
    "end": "1784990"
  },
  {
    "text": "why do we care about sort of big iron boxes I think this actually looks very similar to the ISTE of architecture so I",
    "start": "1784990",
    "end": "1792010"
  },
  {
    "text": "would say the pilot is your control plane it's your your rib that ingests all of these sort of service discovery",
    "start": "1792010",
    "end": "1797320"
  },
  {
    "text": "protocols and all the user configuration that tells it who's allowed to talk to what and then it compiles that that",
    "start": "1797320",
    "end": "1804940"
  },
  {
    "text": "configuration and it punts it off to to envoy which is you know the thing that",
    "start": "1804940",
    "end": "1810490"
  },
  {
    "text": "actually has though if I see this kind of set of headers I need to send it over there right if it's literally this path",
    "start": "1810490",
    "end": "1816040"
  },
  {
    "text": "that goes to service being kind of thing so envoy to me is is the data plane but it's the fast path of the data plane so",
    "start": "1816040",
    "end": "1821770"
  },
  {
    "text": "there are some decisions that envoy can't make on its own right for example applying a global rate limit can't be done you know in locality it can't be an",
    "start": "1821770",
    "end": "1828700"
  },
  {
    "text": "envoy little interrupt handler because we don't have all the info we need we need to coordinate with some other people so to me mixer is not",
    "start": "1828700",
    "end": "1835040"
  },
  {
    "text": "actually control plane even though whether it's drawn there in the diagram to me it's the sort of slow path of this",
    "start": "1835040",
    "end": "1841490"
  },
  {
    "text": "data plane because mixer is is online and it's part of that part of every packet flow as far as I'm concerned so",
    "start": "1841490",
    "end": "1847970"
  },
  {
    "text": "why you would really draw mixer I would take us out of this box and kind of put it down here so as I say there's kind of",
    "start": "1847970",
    "end": "1853940"
  },
  {
    "text": "two things it can do it can do the checking you know is this packet allowed to traverse based on security rules",
    "start": "1853940",
    "end": "1859880"
  },
  {
    "text": "modeled Azhar back based on sort of global rate limits and mixes the thing that holds that counter and then as I",
    "start": "1859880",
    "end": "1865730"
  },
  {
    "text": "say it also it sees all of this telemetry information so it can just it's an aggregation point and it's also",
    "start": "1865730",
    "end": "1871100"
  },
  {
    "text": "an adapter so if you want your metrics to go into Prometheus and then also into CloudWatch metrics and if you want your",
    "start": "1871100",
    "end": "1877490"
  },
  {
    "text": "logs to go into elastic search you just tell mixer where those things are and it gets everything for all the pilots and mix that will talk to them what's",
    "start": "1877490",
    "end": "1885620"
  },
  {
    "text": "interesting about this is this probably I said it's on the data plane I've said it's on the hot path that's not entirely",
    "start": "1885620",
    "end": "1891530"
  },
  {
    "text": "true because I mean does this it's an architecture diagram right you're a you're a senior engineer you're in a",
    "start": "1891530",
    "end": "1897440"
  },
  {
    "text": "design review that looks like a single point of failure maybe it's only good to me to start with but there's a whole",
    "start": "1897440",
    "end": "1904070"
  },
  {
    "text": "bunch of implementation details that mitigate that so envoys obstacles to",
    "start": "1904070",
    "end": "1910670"
  },
  {
    "text": "mixer but it uses what they call a fat client there's quite a lot of code in in",
    "start": "1910670",
    "end": "1916550"
  },
  {
    "text": "this envoy plugin that cost a mixer and basically what that means is that firstly the reporting stuff that the",
    "start": "1916550",
    "end": "1923420"
  },
  {
    "text": "telemetry information that's that sent up is patched sometimes aggregated it's",
    "start": "1923420",
    "end": "1928730"
  },
  {
    "text": "asynchronous so if it's not on the main thread it gets off the main on voice thread straightaway and then if you can't reach a mixer if it's being slow",
    "start": "1928730",
    "end": "1935180"
  },
  {
    "text": "you know it blocks a different thread and that thing times it out and that thing's asynchronous so you seem simple",
    "start": "1935180",
    "end": "1940910"
  },
  {
    "text": "batching and a synchronicity takes it off that off that hot path off the sort of main worker thread in Envoy the the",
    "start": "1940910",
    "end": "1948230"
  },
  {
    "text": "checking is even more interesting because when so a request will come in maybe I want you know service B and I'm",
    "start": "1948230",
    "end": "1955400"
  },
  {
    "text": "getting this path and I'm this user agent so we're blocking you know we're blocking some buggy version of",
    "start": "1955400",
    "end": "1961340"
  },
  {
    "text": "ie that's just sending us mouthful requests and a like a query of doom for our system so you're allowed to your",
    "start": "1961340",
    "end": "1967970"
  },
  {
    "text": "service a is allowed to access service beyond this part as long as it's not a e so first request its envoy and it the",
    "start": "1967970",
    "end": "1975260"
  },
  {
    "text": "fat makes a client talk to the mixer and says well I've got all these headers am I allowed yes or no a mixer says no",
    "start": "1975260",
    "end": "1980870"
  },
  {
    "text": "you're not drop that packet don't send it across and by the way the the you can cache",
    "start": "1980870",
    "end": "1988670"
  },
  {
    "text": "that and you can cache it for 500 milliseconds or 100 requests whichever",
    "start": "1988670",
    "end": "1994340"
  },
  {
    "text": "comes first and by the way the key for that cache is just the user agent so you sent me all the info you sent me the",
    "start": "1994340",
    "end": "2000490"
  },
  {
    "text": "user agent and all the other headers and the path and the host but I'm telling you that ie is just blanket band so",
    "start": "2000490",
    "end": "2005890"
  },
  {
    "text": "actually you know when I did all of my my imaginations I decided to ban it just based on that user agent header so you",
    "start": "2005890",
    "end": "2011680"
  },
  {
    "text": "can put hey Envoy fat client you can put that know in your own cache just under",
    "start": "2011680",
    "end": "2017650"
  },
  {
    "text": "the heading of user agent so if any user agent ie ever comes up it doesn't matter what host is going to what path is going to",
    "start": "2017650",
    "end": "2023230"
  },
  {
    "text": "just drop that packet so mixer gives gives an optimal cache key back to envoy",
    "start": "2023230",
    "end": "2028810"
  },
  {
    "text": "and it says then this is valid for you know 100 milliseconds 50 requests and if",
    "start": "2028810",
    "end": "2033940"
  },
  {
    "text": "you can't reach me to get another answer after they fat cache expires and you can't reach me this thing fails open or",
    "start": "2033940",
    "end": "2039640"
  },
  {
    "text": "fails closed right depending on how you've got it set up maybe whether it's a security mechanism or a sort of soft rate limit so all of those",
    "start": "2039640",
    "end": "2046270"
  },
  {
    "text": "implementation details go into making hopefully making this thing that looks like a single point of failure actually",
    "start": "2046270",
    "end": "2051790"
  },
  {
    "text": "a more resilient system because envoy is it's pre-programmed by pilot to do what it can and then in a way it's almost",
    "start": "2051790",
    "end": "2057370"
  },
  {
    "text": "pre-programmed by mixer right if you can get even one answer and a mixer you send it to envoy and then it's got this",
    "start": "2057370",
    "end": "2062590"
  },
  {
    "text": "pre-programming right which is you know yes for now but after that you've got to fail close if you can't reach me so it's",
    "start": "2062590",
    "end": "2068889"
  },
  {
    "text": "basically a no because this is the security thing so we're you know we're going to err on the side of caution and if you can reach me and if I can",
    "start": "2068890",
    "end": "2075490"
  },
  {
    "text": "validate that you know all the rules are in place and I might say yes I might open the gates for a hundred milliseconds so in that sense make sure",
    "start": "2075490",
    "end": "2081908"
  },
  {
    "text": "always sort of pre programs and actually makes the system more resilient even though it might look like a single board",
    "start": "2081909",
    "end": "2087128"
  },
  {
    "text": "failure so yeah mixer can do this checking of ACLs and authorization it",
    "start": "2087129",
    "end": "2093220"
  },
  {
    "text": "can do rate limiting and it can do reporting of logs and matrix and tracing so can we find each averse maybe not",
    "start": "2093220",
    "end": "2102160"
  },
  {
    "text": "this lady here is called Eve she's interested on in dropping in on our packets and hearing what they have to",
    "start": "2102160",
    "end": "2107829"
  },
  {
    "text": "say how do we mitigate this well we stick it in empty or less tunnel right well we encrypt it when your",
    "start": "2107829",
    "end": "2115299"
  },
  {
    "text": "browser talks to an origin web server you use simple TLS right the server presents a certificate you trust that",
    "start": "2115299",
    "end": "2121390"
  },
  {
    "text": "because it's signed by a root authority which whose keys whose search you've got installed that gives you encryption but",
    "start": "2121390",
    "end": "2128650"
  },
  {
    "text": "it gives your browser verification of the identity of the origin server it doesn't give the origin server",
    "start": "2128650",
    "end": "2134579"
  },
  {
    "text": "verification of the identity of your browser it doesn't let you know amazon.com know who you are you could be",
    "start": "2134579",
    "end": "2140349"
  },
  {
    "text": "anybody because you're not presenting a certificate that's where you have to login to Amazon right you have to use a different form of credentials a username",
    "start": "2140349",
    "end": "2146019"
  },
  {
    "text": "and a password because we've got control of all of this and because it's between two services that we control we can actually do mutual TLS so you not only",
    "start": "2146019",
    "end": "2152920"
  },
  {
    "text": "get that encryption on the wire but you get strong verification of the identity of both ends in order to do that they",
    "start": "2152920",
    "end": "2158769"
  },
  {
    "text": "need certificates mutually trusted certificates so this is the third control plan component a thing called Citadel which issues those certificates",
    "start": "2158769",
    "end": "2165730"
  },
  {
    "text": "to the envoys it pushes the certs out and they're quite short-lived in it it recitat renews them quite often there's",
    "start": "2165730",
    "end": "2173319"
  },
  {
    "text": "a whole bunch of stuff again that I don't have time to go into about how sit with me a non-void call Citadella says hey i'm service B can I have a can I",
    "start": "2173319",
    "end": "2179829"
  },
  {
    "text": "have a certificate to assert that Citadel has to trust that envoy right here your security chains only as strong",
    "start": "2179829",
    "end": "2185769"
  },
  {
    "text": "as its weakest link so actually there's a side channel through to an agent that runs on a node where Citadel can verify",
    "start": "2185769",
    "end": "2191410"
  },
  {
    "text": "that it doesn't do much today but there's there's a whole bunch of work going on to have that that side channel",
    "start": "2191410",
    "end": "2197200"
  },
  {
    "text": "agent check you know the the binary signature and the binary hash of the service binary the docker daemon the",
    "start": "2197200",
    "end": "2204039"
  },
  {
    "text": "kernel the talk to the TPM the BIOS you know all of the all of these security vectors will be verified that you know",
    "start": "2204039",
    "end": "2210880"
  },
  {
    "text": "those attestations go to Citadel Citadel says then says oh yeah I know your service B have a certificate to prove it",
    "start": "2210880",
    "end": "2215980"
  },
  {
    "text": "service a then the certain so that's kind of the third part of the architecture you know if you",
    "start": "2215980",
    "end": "2221860"
  },
  {
    "text": "see Pilate as a kind of reactive config compiler and pusher mixer as a sort of",
    "start": "2221860",
    "end": "2228700"
  },
  {
    "text": "data playing fast paths it today it's like a batch job I guess sitted are there something that that runs in the",
    "start": "2228700",
    "end": "2234430"
  },
  {
    "text": "background and just keeps this it's like you're really you know it's almost like you're let's encrypt the agent whenever",
    "start": "2234430",
    "end": "2239560"
  },
  {
    "text": "that's called it just keeps rotating your certs so that's the third part of the control plane and again it's got a",
    "start": "2239560",
    "end": "2244620"
  },
  {
    "text": "slightly different model so I'd say whether I say the packet can reach it's",
    "start": "2244620",
    "end": "2251740"
  },
  {
    "text": "gone left to right we've seen how when we've seen all of this sort of control playing components that it it hits along the way in and what they all do just a",
    "start": "2251740",
    "end": "2259480"
  },
  {
    "text": "few more things to say on that on this subject there's also an egress controller which is ingress in Reverse another bank of proxies controls your",
    "start": "2259480",
    "end": "2266830"
  },
  {
    "text": "access to the Internet this isn't normally done but actually if",
    "start": "2266830",
    "end": "2272560"
  },
  {
    "text": "you think about it your average set your average back-end microservice probably doesn't want to talk to the internet it",
    "start": "2272560",
    "end": "2277900"
  },
  {
    "text": "you're probably talking to other micro services it might might need to talk to databases and queues and stuff from your",
    "start": "2277900",
    "end": "2284590"
  },
  {
    "text": "cloud provider from your PA's almost certainly shouldn't be accessing you know Russian IP ranges so you might",
    "start": "2284590",
    "end": "2291220"
  },
  {
    "text": "wanna block that by default you also might just have you know you've used an Ubuntu base image because you were lazy and the damn thing is trying to like",
    "start": "2291220",
    "end": "2296590"
  },
  {
    "text": "update itself in the background you just just stop it from doing that so egress control is provided again under the you",
    "start": "2296590",
    "end": "2303430"
  },
  {
    "text": "know same avoid proxy under the control of the same control planes same set of documents you know config documents",
    "start": "2303430",
    "end": "2310030"
  },
  {
    "text": "apply to these are moisés apply to these is applied to these we actually need to",
    "start": "2310030",
    "end": "2317350"
  },
  {
    "text": "get configuration into this system ISO pilot takes the config so it takes the information from one of these service discovery mechanisms but it actually",
    "start": "2317350",
    "end": "2324100"
  },
  {
    "text": "needs to mix that in with what the user wants right so the users got to say well I actually I want this particular rate",
    "start": "2324100",
    "end": "2329500"
  },
  {
    "text": "limit and I want this fault injection but only between staging service a and staging service B so the user has to get",
    "start": "2329500",
    "end": "2336550"
  },
  {
    "text": "configuration into this as well sto is normally running kubernetes so it hijacks the kubernetes api server",
    "start": "2336550",
    "end": "2342640"
  },
  {
    "text": "currently to do that you use cube CTL you know you what these enamels they look like configs you punt them with the use QTL",
    "start": "2342640",
    "end": "2350329"
  },
  {
    "text": "to ponder the cube api server and through various hooks and hacks sto just",
    "start": "2350329",
    "end": "2356119"
  },
  {
    "text": "goes and reads those and then kubernetes uses its you know it's only the instance which is this this key value store",
    "start": "2356119",
    "end": "2362480"
  },
  {
    "text": "database to persist that data what isseo is doing soon this is in in development",
    "start": "2362480",
    "end": "2369530"
  },
  {
    "text": "at the moment and there was a small change to this slide was to rename this galle sto is writing its own component",
    "start": "2369530",
    "end": "2375920"
  },
  {
    "text": "to take user configuration and to store it and you know to validate it to",
    "start": "2375920",
    "end": "2381230"
  },
  {
    "text": "persist it to store it and to send it into pilot and that'll just be another stream of information like the service discovery is and this I think for me",
    "start": "2381230",
    "end": "2389359"
  },
  {
    "text": "completes the picture this this gives us the kind of the full three-tier architecture so I say three-tier",
    "start": "2389359",
    "end": "2396260"
  },
  {
    "text": "architecture as if it's the 90s I guess several he's thinking you know Oracle DB and PHP II and all that horribleness and sure that was a thing",
    "start": "2396260",
    "end": "2402589"
  },
  {
    "text": "right and it actually didn't service that badly in a lot of cases you know we ought we got ourselves RMS we got",
    "start": "2402589",
    "end": "2408740"
  },
  {
    "text": "ourselves schema migration tools you know we we applied science to it computer science at least but now we've",
    "start": "2408740",
    "end": "2415940"
  },
  {
    "text": "galley I think you've got that that same sort of three-tier model and it's you know it does fit almost you've got a a",
    "start": "2415940",
    "end": "2423140"
  },
  {
    "text": "management plane now and then you've got a control plane and then you've got a data plane much like you know this would",
    "start": "2423140",
    "end": "2428990"
  },
  {
    "text": "be the UI of your of your web app and this would be the execution tier and this would be the you know the database",
    "start": "2428990",
    "end": "2435430"
  },
  {
    "text": "this thing this management plane is optimized for user friendliness it doesn't need to be fast you know it can",
    "start": "2435430",
    "end": "2441770"
  },
  {
    "text": "operate on human time it doesn't need to be particularly highly available or just optimized for that user friendliness and",
    "start": "2441770",
    "end": "2447740"
  },
  {
    "text": "it's you know all it does is it it takes user input and it presents it in a nice way and it validates it and it stores it",
    "start": "2447740",
    "end": "2454369"
  },
  {
    "text": "in a very resilient way that you have a control plane which if you like actually",
    "start": "2454369",
    "end": "2460220"
  },
  {
    "text": "this kind of most of the work as in it implements most of your business logic most of your actual value is the",
    "start": "2460220",
    "end": "2467720"
  },
  {
    "text": "complicated business logic in this control plane as it would be in the execution tier if you're using your three tier web app and this thing is",
    "start": "2467720",
    "end": "2474260"
  },
  {
    "text": "optimized you know bees as it as a group all the replicas of them",
    "start": "2474260",
    "end": "2479690"
  },
  {
    "text": "are optimized for concurrency and for availability because that's that's what a control plane is doing in your system",
    "start": "2479690",
    "end": "2485630"
  },
  {
    "text": "and then a proced configuration to the data plane so this is maybe almost like even your database",
    "start": "2485630",
    "end": "2492319"
  },
  {
    "text": "right so this as we know envoy does does all the heavy lifting but it does it in",
    "start": "2492319",
    "end": "2497630"
  },
  {
    "text": "a very dumb your own pre-programmed way like it's dumb or possible away because we just wanted to work and these things",
    "start": "2497630",
    "end": "2503690"
  },
  {
    "text": "are optimized for latency and they're optimized for throughput and the way to do that is to make them dharm and to give them these pre indexed what",
    "start": "2503690",
    "end": "2509660"
  },
  {
    "text": "pre-chewed configurations so to me that's kind of the equivalent of putting you know some just views and indexes and",
    "start": "2509660",
    "end": "2518420"
  },
  {
    "text": "store procedures into your database right you actually we've all seen applications that are implemented entirely in store procedures and that's",
    "start": "2518420",
    "end": "2524930"
  },
  {
    "text": "a nightmare that's an anti-pattern but a little bit of a stored procedure to give you like a wrapper and some transactions around",
    "start": "2524930",
    "end": "2530210"
  },
  {
    "text": "like updates over several tables just views so you don't have to affect your bunch of tables and then do the joins",
    "start": "2530210",
    "end": "2535339"
  },
  {
    "text": "yourself in java code up here you know that that is a legitimate use of pushing",
    "start": "2535339",
    "end": "2541250"
  },
  {
    "text": "things to the data plane and I think you can see analogies for that now with cloud flow workers right and with the",
    "start": "2541250",
    "end": "2547280"
  },
  {
    "text": "BPF which is basically lambda for the Linux kernel all of these systems these little hook points where you can just a",
    "start": "2547280",
    "end": "2553339"
  },
  {
    "text": "little bits of code they need to get run all the time I need to be highly performant I need to you know scale with",
    "start": "2553339",
    "end": "2559640"
  },
  {
    "text": "the scale with the data plan we optimize both for latency and for throughput so",
    "start": "2559640",
    "end": "2565099"
  },
  {
    "text": "that's me trying to fit into the architecture track maybe that may be a bit of a squint but I actually think that what always quite well I think the",
    "start": "2565099",
    "end": "2571880"
  },
  {
    "text": "analogy to the router with the control plane and the data plane is there to me galley or currently what cube does is a",
    "start": "2571880",
    "end": "2577730"
  },
  {
    "text": "is a good approximation to a management plane range so that's the architecture of video that's how it works",
    "start": "2577730",
    "end": "2582950"
  },
  {
    "text": "it's its reason to exist it is a service mesh right it's it's those network",
    "start": "2582950",
    "end": "2588500"
  },
  {
    "text": "functions taken out of your service or it's a HTTP addressed overlay network",
    "start": "2588500",
    "end": "2594230"
  },
  {
    "text": "whatever you want to call it you know I heard the pitch for what it does this is the way to build I hope I've explained",
    "start": "2594230",
    "end": "2600349"
  },
  {
    "text": "why with you know some parts of the control plane being batch jobs some",
    "start": "2600349",
    "end": "2605720"
  },
  {
    "text": "being and your online thing something compilers so yeah I don't think I've got",
    "start": "2605720",
    "end": "2612170"
  },
  {
    "text": "Evo slides hopefully that was interesting I told you for the introduction we did a bit of for like",
    "start": "2612170",
    "end": "2617540"
  },
  {
    "text": "how do I use the Linux kernel primitives to build something a lot more emergent like a kubernetes pods you know which is",
    "start": "2617540",
    "end": "2623240"
  },
  {
    "text": "containers and then what are containers and then given given that given that ability to transparently intercept",
    "start": "2623240",
    "end": "2630880"
  },
  {
    "text": "traffic and do intelligent HTTP aware things with it how do we then build a",
    "start": "2630880",
    "end": "2636470"
  },
  {
    "text": "distributed system across an entire region or maybe the world and make that give that like a consistent",
    "start": "2636470",
    "end": "2642650"
  },
  {
    "text": "configuration and a consistent set of things that you wanted to do for you in and how do we keep you secure so that's",
    "start": "2642650",
    "end": "2647750"
  },
  {
    "text": "really I think all I wanted to say [Applause]",
    "start": "2647750",
    "end": "2656139"
  }
]