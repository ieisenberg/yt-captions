[
  {
    "start": "0",
    "end": "63000"
  },
  {
    "text": "hi I'm Seth Ladd and welcome to our",
    "start": "0",
    "end": "1920"
  },
  {
    "text": "first episode of dart tips throughout",
    "start": "1920",
    "end": "3720"
  },
  {
    "text": "this series I'll teach you all about the",
    "start": "3720",
    "end": "5430"
  },
  {
    "text": "dart language and libraries in short",
    "start": "5430",
    "end": "6960"
  },
  {
    "text": "easy to watch videos to kick things off",
    "start": "6960",
    "end": "9120"
  },
  {
    "text": "here's a quick orientation to a simple",
    "start": "9120",
    "end": "11309"
  },
  {
    "text": "dart script the designers of dart built",
    "start": "11309",
    "end": "18810"
  },
  {
    "text": "a scripting language that is generally",
    "start": "18810",
    "end": "20670"
  },
  {
    "text": "free of ceremony yet provides structure",
    "start": "20670",
    "end": "22680"
  },
  {
    "text": "for larger apps and is analyzable by",
    "start": "22680",
    "end": "24810"
  },
  {
    "text": "tools primarily a web development",
    "start": "24810",
    "end": "26849"
  },
  {
    "text": "language that must make it easy to write",
    "start": "26849",
    "end": "28439"
  },
  {
    "text": "a few lines of code and then simply hit",
    "start": "28439",
    "end": "30060"
  },
  {
    "text": "reload in your browser to see the",
    "start": "30060",
    "end": "31470"
  },
  {
    "text": "changes those scripts must then be able",
    "start": "31470",
    "end": "33600"
  },
  {
    "text": "to scale up to large full-featured apps",
    "start": "33600",
    "end": "35579"
  },
  {
    "text": "with potentially hundreds of thousands",
    "start": "35579",
    "end": "37320"
  },
  {
    "text": "of lines of code therefore dart has to",
    "start": "37320",
    "end": "39480"
  },
  {
    "text": "be terse easy to read and write",
    "start": "39480",
    "end": "40980"
  },
  {
    "text": "structured with classes and libraries",
    "start": "40980",
    "end": "42870"
  },
  {
    "text": "and not force you into rituals or",
    "start": "42870",
    "end": "44820"
  },
  {
    "text": "formalities this philosophy is evident",
    "start": "44820",
    "end": "47610"
  },
  {
    "text": "in this very simple dart program all",
    "start": "47610",
    "end": "50579"
  },
  {
    "text": "dart scripts start with main knowing",
    "start": "50579",
    "end": "52680"
  },
  {
    "text": "exactly where the program starts is the",
    "start": "52680",
    "end": "54329"
  },
  {
    "text": "first step to understanding the complete",
    "start": "54329",
    "end": "55980"
  },
  {
    "text": "program structure which in turn makes it",
    "start": "55980",
    "end": "58050"
  },
  {
    "text": "easy for minimizer's or other code size",
    "start": "58050",
    "end": "60210"
  },
  {
    "text": "reduction utilities to do a good job",
    "start": "60210",
    "end": "62120"
  },
  {
    "text": "dart is an optionally typed language",
    "start": "62120",
    "end": "64530"
  },
  {
    "text": "which means variables can be typed or",
    "start": "64530",
    "end": "66330"
  },
  {
    "text": "untyped here we use var to declare that",
    "start": "66330",
    "end": "68970"
  },
  {
    "text": "the answer is an untyped variable with",
    "start": "68970",
    "end": "71400"
  },
  {
    "text": "an initial value of 42 and integer",
    "start": "71400",
    "end": "73439"
  },
  {
    "text": "literal the object that answer points to",
    "start": "73439",
    "end": "75930"
  },
  {
    "text": "is an int but the variable itself is",
    "start": "75930",
    "end": "77460"
  },
  {
    "text": "dynamic or untyped tools like dart",
    "start": "77460",
    "end": "79770"
  },
  {
    "text": "editor can infer that the variable",
    "start": "79770",
    "end": "81240"
  },
  {
    "text": "answer is an integer but you can be even",
    "start": "81240",
    "end": "83909"
  },
  {
    "text": "more clear by using type annotations",
    "start": "83909",
    "end": "85740"
  },
  {
    "text": "here we have type the answer variable as",
    "start": "85740",
    "end": "88110"
  },
  {
    "text": "an INT sometimes developers want to be",
    "start": "88110",
    "end": "90270"
  },
  {
    "text": "more explicit which is especially",
    "start": "90270",
    "end": "91680"
  },
  {
    "text": "helpful when writing code that other",
    "start": "91680",
    "end": "93509"
  },
  {
    "text": "developers will use darts optional",
    "start": "93509",
    "end": "95729"
  },
  {
    "text": "static types are an important topic and",
    "start": "95729",
    "end": "97350"
  },
  {
    "text": "we will cover them in more detail in a",
    "start": "97350",
    "end": "99060"
  },
  {
    "text": "future episode for now just think of",
    "start": "99060",
    "end": "101250"
  },
  {
    "text": "static types as inline documentation or",
    "start": "101250",
    "end": "103380"
  },
  {
    "text": "type annotations that convey your",
    "start": "103380",
    "end": "105000"
  },
  {
    "text": "intention the tools and fellow",
    "start": "105000",
    "end": "106500"
  },
  {
    "text": "developers both versions of the script",
    "start": "106500",
    "end": "108689"
  },
  {
    "text": "have the same runtime semantics because",
    "start": "108689",
    "end": "110490"
  },
  {
    "text": "type annotations are optional and the",
    "start": "110490",
    "end": "112619"
  },
  {
    "text": "program runs as if you use a bar",
    "start": "112619",
    "end": "114149"
  },
  {
    "text": "everywhere everything in dart is an",
    "start": "114149",
    "end": "116820"
  },
  {
    "text": "object and every object is an instance",
    "start": "116820",
    "end": "118710"
  },
  {
    "text": "of a class even numbers and functions",
    "start": "118710",
    "end": "121020"
  },
  {
    "text": "are objects so yes",
    "start": "121020",
    "end": "122490"
  },
  {
    "text": "42 is an object and not a primitive",
    "start": "122490",
    "end": "124460"
  },
  {
    "text": "speaking of functions let's look at the",
    "start": "124460",
    "end": "126570"
  },
  {
    "text": "print number function dart supports",
    "start": "126570",
    "end": "129000"
  },
  {
    "text": "top-level functions because again",
    "start": "129000",
    "end": "130500"
  },
  {
    "text": "sometimes you don't need classes and it",
    "start": "130500",
    "end": "132120"
  },
  {
    "text": "should be easy to start",
    "start": "132120",
    "end": "133319"
  },
  {
    "text": "the most simple thing that works the",
    "start": "133319",
    "end": "135420"
  },
  {
    "text": "print number function takes one",
    "start": "135420",
    "end": "136590"
  },
  {
    "text": "parameter which is typed as a num and",
    "start": "136590",
    "end": "138689"
  },
  {
    "text": "named a number is good dart style to use",
    "start": "138689",
    "end": "141780"
  },
  {
    "text": "type annotations in the surface area of",
    "start": "141780",
    "end": "143609"
  },
  {
    "text": "your program such as function signatures",
    "start": "143609",
    "end": "145799"
  },
  {
    "text": "because it makes it very easy to declare",
    "start": "145799",
    "end": "147629"
  },
  {
    "text": "what the function expects inside a print",
    "start": "147629",
    "end": "150359"
  },
  {
    "text": "number we use a built-in print function",
    "start": "150359",
    "end": "152159"
  },
  {
    "text": "to display the number is 42 to the",
    "start": "152159",
    "end": "154109"
  },
  {
    "text": "console notice the dollar sign followed",
    "start": "154109",
    "end": "156480"
  },
  {
    "text": "by the name of a variable this syntax",
    "start": "156480",
    "end": "158670"
  },
  {
    "text": "called string interpolation includes a",
    "start": "158670",
    "end": "160859"
  },
  {
    "text": "variables value inside a string literal",
    "start": "160859",
    "end": "162569"
  },
  {
    "text": "this is a terse way to build strings",
    "start": "162569",
    "end": "165379"
  },
  {
    "text": "nothing new but dart uses a double",
    "start": "165379",
    "end": "167639"
  },
  {
    "text": "forward slash as a one-line common dart",
    "start": "167639",
    "end": "170159"
  },
  {
    "text": "also supports the multi-line comment",
    "start": "170159",
    "end": "171810"
  },
  {
    "text": "format made popular in other languages",
    "start": "171810",
    "end": "173519"
  },
  {
    "text": "as you can see dart is unsurprising and",
    "start": "173519",
    "end": "175769"
  },
  {
    "start": "174000",
    "end": "202000"
  },
  {
    "text": "familiar which is exactly the point",
    "start": "175769",
    "end": "177389"
  },
  {
    "text": "we built a language that most developers",
    "start": "177389",
    "end": "179310"
  },
  {
    "text": "can be productive in within just a few",
    "start": "179310",
    "end": "181019"
  },
  {
    "text": "hours or less if you have experience",
    "start": "181019",
    "end": "183000"
  },
  {
    "text": "with C C++ Java ActionScript c-sharp or",
    "start": "183000",
    "end": "186150"
  },
  {
    "text": "JavaScript you'll find dart easy to",
    "start": "186150",
    "end": "188099"
  },
  {
    "text": "learn but don't let this familiar syntax",
    "start": "188099",
    "end": "190169"
  },
  {
    "text": "fool you for now that you know how to",
    "start": "190169",
    "end": "192030"
  },
  {
    "text": "read dart code there are plenty of",
    "start": "192030",
    "end": "193739"
  },
  {
    "text": "improvements and cool features to show",
    "start": "193739",
    "end": "195510"
  },
  {
    "text": "off in future videos thanks for watching",
    "start": "195510",
    "end": "198000"
  },
  {
    "text": "my name is Seth Ladd and as we say here",
    "start": "198000",
    "end": "199949"
  },
  {
    "text": "on dart tips stay sharp click here to",
    "start": "199949",
    "end": "202769"
  },
  {
    "start": "202000",
    "end": "215000"
  },
  {
    "text": "subscribe to our channel for more",
    "start": "202769",
    "end": "204030"
  },
  {
    "text": "episodes of dart tips we appreciate any",
    "start": "204030",
    "end": "206009"
  },
  {
    "text": "thoughts you might have for the series",
    "start": "206009",
    "end": "207239"
  },
  {
    "text": "please leave them in the comments below",
    "start": "207239",
    "end": "208769"
  },
  {
    "text": "if you have any additional questions",
    "start": "208769",
    "end": "210389"
  },
  {
    "text": "about dart please drop by stackoverflow",
    "start": "210389",
    "end": "212639"
  },
  {
    "text": "where dart experts are standing by to",
    "start": "212639",
    "end": "213959"
  },
  {
    "text": "help you out see you next time",
    "start": "213959",
    "end": "217340"
  }
]