[
  {
    "text": "[Music]",
    "start": "3270",
    "end": "8719"
  },
  {
    "text": "hi everyone So today I'll be talking about the platform engineering journey from copy and paste deployments to full",
    "start": "16720",
    "end": "23439"
  },
  {
    "text": "githops So the goal of this session is to share some lessons I've learned during my",
    "start": "23439",
    "end": "28480"
  },
  {
    "text": "career and hopefully give you some solutions and well some solutions to the challenges you're already facing or may",
    "start": "28480",
    "end": "34719"
  },
  {
    "text": "face in the future So the key learnings I want you to take away are technology",
    "start": "34719",
    "end": "40079"
  },
  {
    "text": "moves quickly and it can be really difficult and timeconuming to keep up with the latest innovations So I'll",
    "start": "40079",
    "end": "45760"
  },
  {
    "text": "share some practical strategies that will hopefully help make things easier Secondly automation will almost always",
    "start": "45760",
    "end": "52320"
  },
  {
    "text": "save you time in the long run even if it takes a bit more time in the short term Thirdly planning short and long-term",
    "start": "52320",
    "end": "59440"
  },
  {
    "text": "responsibilities for a project as early as possible can save everyone a lot of headaches And finally a psychologically",
    "start": "59440",
    "end": "66560"
  },
  {
    "text": "safe working environment benefits everyone So I'll start with a bit about",
    "start": "66560",
    "end": "72080"
  },
  {
    "text": "me I've always loved technology My first home computer was an Amstrad one of those great big things that takes up the",
    "start": "72080",
    "end": "78640"
  },
  {
    "text": "whole desk We didn't have home internet connection at the time and games were on floppy discs that were actually still",
    "start": "78640",
    "end": "84560"
  },
  {
    "text": "floppy and took around 10 minutes to load if you were lucky When I was a bit older technology started to advance",
    "start": "84560",
    "end": "90560"
  },
  {
    "text": "quickly Um the YTK bug took over the headlines Dialup internet became mainstream and I bought my first mobile",
    "start": "90560",
    "end": "97520"
  },
  {
    "text": "phone which was pretty much indestructible Well certainly better than my one today which breaks all the",
    "start": "97520",
    "end": "102759"
  },
  {
    "text": "time So I followed my passion for technology I did a degree in software engineering and a few years into my",
    "start": "102759",
    "end": "109439"
  },
  {
    "text": "career a PGERTert in advanced information systems After I graduated I",
    "start": "109439",
    "end": "114560"
  },
  {
    "text": "started working as a web developer for a range of small media companies So I was a project manager and developer for an",
    "start": "114560",
    "end": "120399"
  },
  {
    "text": "EU funded automatic multilingual subtitling project which is pretty interesting first graduate job And then",
    "start": "120399",
    "end": "127280"
  },
  {
    "text": "as a web developer building websites for companies like Sony Ben & Jerry's Glen Livet and it involved a range of",
    "start": "127280",
    "end": "134319"
  },
  {
    "text": "responsibilities So Linux Windows server and database administration building HTML pages and Photoshop designs writing",
    "start": "134319",
    "end": "141520"
  },
  {
    "text": "both front and backend code and some project management thrown into my into the mix And yep as a junior",
    "start": "141520",
    "end": "149160"
  },
  {
    "text": "developer I did say at least a few times well it works for me so that must be a",
    "start": "149160",
    "end": "154319"
  },
  {
    "text": "problem with something that operations manage So I didn't care about it But now of course I know better After a few",
    "start": "154319",
    "end": "160560"
  },
  {
    "text": "years around the time DevOps became popular I started to work in larger enterprise companies as a DevOps",
    "start": "160560",
    "end": "166400"
  },
  {
    "text": "engineer as it was called then Sometimes it was focused on automation and sometimes on software development I",
    "start": "166400",
    "end": "173200"
  },
  {
    "text": "moved into a senior engineering role and then a technical lead Then I moved to infrastructure architecture for a bit",
    "start": "173200",
    "end": "178879"
  },
  {
    "text": "and then back to the tech lead again where I am now So after TKIDS and many different tools tech stacks and projects",
    "start": "178879",
    "end": "185760"
  },
  {
    "text": "later I support a centralized platform and product teams by developing self-service tooling and reusable",
    "start": "185760",
    "end": "194400"
  },
  {
    "text": "components So we're in 2024 It's a hyperconnected world These days we can",
    "start": "194920",
    "end": "200720"
  },
  {
    "text": "provision hundreds or even thousands of cloud resources anywhere in the world with the main barrier being cost Today",
    "start": "200720",
    "end": "207360"
  },
  {
    "text": "around 66% of the world has internet access We can contact anyone who's connected 24 hours a day seven days a",
    "start": "207360",
    "end": "213760"
  },
  {
    "text": "week We can contact family and friends at a tap of a button We can access work email anytime day or night which can be",
    "start": "213760",
    "end": "220720"
  },
  {
    "text": "a good or a bad thing depending on if you're on call We can get almost instant notifications about things happening",
    "start": "220720",
    "end": "226239"
  },
  {
    "text": "around the world and can live stream events For example the eclipse on Monday which unfortunately didn't make it to",
    "start": "226239",
    "end": "231840"
  },
  {
    "text": "South of England but we could watch it from the US We can ask a question and receive a huge range of answers based on",
    "start": "231840",
    "end": "238000"
  },
  {
    "text": "real-time information you really are in a hyperconnected world So let's take a",
    "start": "238000",
    "end": "243439"
  },
  {
    "text": "quick step back to the 1980s In 1984 the internet had around a thousand devices",
    "start": "243439",
    "end": "249360"
  },
  {
    "text": "that were mainly used by universities and large companies Those are the time before home computers were common place",
    "start": "249360",
    "end": "255519"
  },
  {
    "text": "and most people had to visit the bookshop or library if they wanted information for a school project or a particular topic So to set the context",
    "start": "255519",
    "end": "263199"
  },
  {
    "text": "here's a video from a Tomorrow's World episode in 1984 demonstrating how to send an email from home Yes Well it's",
    "start": "263199",
    "end": "269840"
  },
  {
    "text": "very simple really Um the telephone is connected to the telephone network with a British telecom plug and I simply",
    "start": "269840",
    "end": "276880"
  },
  {
    "text": "remove the telephone jack from the telecom socket and plug it into this box",
    "start": "276880",
    "end": "282560"
  },
  {
    "text": "here the modem I then take another wire from the modem and plug it in where the",
    "start": "282560",
    "end": "287600"
  },
  {
    "text": "telephone was I can then switch on the modem and we're ready to",
    "start": "287600",
    "end": "294400"
  },
  {
    "text": "go Um the computer's asking me if I want to log on and it's now telling me to",
    "start": "294520",
    "end": "300080"
  },
  {
    "text": "phone up the main Pressil computer which I will now do Um",
    "start": "300080",
    "end": "308320"
  },
  {
    "text": "so it's a very simple connection to make extremely simple Um and I can actually",
    "start": "308320",
    "end": "314240"
  },
  {
    "text": "leave the modem plug plugged in once it's done that without affecting the",
    "start": "314240",
    "end": "320280"
  },
  {
    "text": "telephone I'm now waiting for the computer to answer me Well I'm certainly glad it's a lot",
    "start": "320280",
    "end": "326400"
  },
  {
    "text": "easier to send an email nowadays By 1992 the internet had 1 million devices and",
    "start": "326400",
    "end": "331520"
  },
  {
    "text": "now in 2024 there are over 17 billion So that leads into the first key learning",
    "start": "331520",
    "end": "337280"
  },
  {
    "text": "Technology moves quickly So we all lead busy lives and we use technology both inside and outside of",
    "start": "337280",
    "end": "343440"
  },
  {
    "text": "work In a personal context technology can make our day-to-day lives a lot easier For example we saw a huge rise in",
    "start": "343440",
    "end": "349440"
  },
  {
    "text": "video conferencing for personal calls during the COVID lockdowns In a work context we need to know what the latest",
    "start": "349440",
    "end": "354960"
  },
  {
    "text": "advancements are and whether they're going to be relevant and useful to us and our employer Of course there are key",
    "start": "354960",
    "end": "360560"
  },
  {
    "text": "touch points like here at QCON They can hear some great talks about the latest innovations and discuss solutions to",
    "start": "360560",
    "end": "365600"
  },
  {
    "text": "everyday problems the more technology specific ones like AWS Summit Google IO",
    "start": "365600",
    "end": "370800"
  },
  {
    "text": "and one of the many Microsoft events And then there are lots of good blogs and other great online content At a company",
    "start": "370800",
    "end": "377520"
  },
  {
    "text": "level you've got general day-to-day knowledge sharing with colleagues and hackathons which can be really valuable",
    "start": "377520",
    "end": "383120"
  },
  {
    "text": "But with so much information how can we quickly and effectively find the details we need to do our jobs so one tool that",
    "start": "383120",
    "end": "389919"
  },
  {
    "text": "I found is really useful discussion point at work are tech radars They can",
    "start": "389919",
    "end": "394960"
  },
  {
    "text": "really help with keeping up with the popularity of different technologies So tech radar is an idea",
    "start": "394960",
    "end": "400240"
  },
  {
    "text": "first put forward by Dan Smith at Thoughtworks They're essentially a safe space overview of techniques tools",
    "start": "400240",
    "end": "406240"
  },
  {
    "text": "platforms frameworks and languages So there are four rings Adopt technologies that should be adopted because they can",
    "start": "406240",
    "end": "412240"
  },
  {
    "text": "provide significant benefits Trial technologies that should be tried out to assess their potential Assess",
    "start": "412240",
    "end": "418160"
  },
  {
    "text": "technologies that need evaluation before use and hold technology that should be avoided or decommissioned They thought",
    "start": "418160",
    "end": "424960"
  },
  {
    "text": "works release updated tech radars twice a year giving an overview of the latest technologies including details on",
    "start": "424960",
    "end": "430800"
  },
  {
    "text": "whether any existing technologist has moved to a different ring So I found these can also be really",
    "start": "430800",
    "end": "436240"
  },
  {
    "text": "useful at a company or department level to help developers choose the best tools for new development projects So I've",
    "start": "436240",
    "end": "443440"
  },
  {
    "text": "personally seen them work quite well in companies as they help to keep everyone moving in the same technical direction and using similar tooling I mean let's",
    "start": "443440",
    "end": "450160"
  },
  {
    "text": "face it no one wants to implement a new service only to find that it uses the tool that's due to be decommissioned It",
    "start": "450160",
    "end": "455520"
  },
  {
    "text": "will cost the business money funding the migration and all the work to integrate the legacy tool will be",
    "start": "455520",
    "end": "461400"
  },
  {
    "text": "lost Luckily creating a basic technical proof of concept for a tech radar is",
    "start": "461400",
    "end": "466720"
  },
  {
    "text": "quite easy and there's some existing tools you can use as a starting point For example Zando have an open source",
    "start": "466720",
    "end": "472560"
  },
  {
    "text": "GitHub repository you can use to get up and running or if you use a developer portal like backstage there's a techar",
    "start": "472560",
    "end": "478560"
  },
  {
    "text": "plugin for that as well So one of the key benefits about techraars is it's",
    "start": "478560",
    "end": "485080"
  },
  {
    "text": "codified So unlike a static diagram which can get old quite quickly things like automated processes user",
    "start": "485080",
    "end": "491120"
  },
  {
    "text": "contributions and suggestions for new items can be easily integrated and any approval mechanisms that are needed can",
    "start": "491120",
    "end": "497360"
  },
  {
    "text": "also be added quite easily So let's take a general example and of",
    "start": "497360",
    "end": "503039"
  },
  {
    "text": "course not endorsing any specific technology Um you're in a big company and you're selecting an infrastructure",
    "start": "503039",
    "end": "508720"
  },
  {
    "text": "as code tool for a new project to provision some AWS cloud infrastructure and your department normally uses",
    "start": "508720",
    "end": "514200"
  },
  {
    "text": "Terraform So Terraform is a solid choice There are plenty of examples in the company some inner source modules You",
    "start": "514200",
    "end": "520080"
  },
  {
    "text": "know you can write the code in a few days So looking at the other options chef is good but it's not really used",
    "start": "520080",
    "end": "526240"
  },
  {
    "text": "very much in the department at the moment And as the company tends to move towards more cloud agnostic technology",
    "start": "526240",
    "end": "531839"
  },
  {
    "text": "if they don't really use cloud formation lately you've heard that some teams have been trying out Palumi and",
    "start": "531839",
    "end": "537839"
  },
  {
    "text": "some have tried out the Terraform CDK So you look at the company tech radar and see that Terraform CDK is under trial",
    "start": "537839",
    "end": "545839"
  },
  {
    "text": "and Palumi is under site Palumi is under trial and Terraform is under",
    "start": "545839",
    "end": "552760"
  },
  {
    "text": "assess So as a project has tight timelines you know you need a tool that's well integrated with company",
    "start": "552760",
    "end": "558760"
  },
  {
    "text": "tooling So while it might be confirming that Palumi is still in the assess stage",
    "start": "558760",
    "end": "564000"
  },
  {
    "text": "There you go I've put them in the wrong place Never mind While it might be worth confirming that Palumi is still in the assess stage um after that you probably",
    "start": "564000",
    "end": "571040"
  },
  {
    "text": "want to focus any remaining investigation time on checking if there's any benefit to triing the Terraform CDK If you can't find any",
    "start": "571040",
    "end": "578640"
  },
  {
    "text": "benefits to that then you'd probably go with the standard Terraform because it's the easiest option You know it integrates with everything already even",
    "start": "578640",
    "end": "585120"
  },
  {
    "text": "if it's not particularly innovative Of course if the project didn't have those time constraints then",
    "start": "585120",
    "end": "591200"
  },
  {
    "text": "you can spend more time investigating whether there actually any benefits to using the newer tooling the Terraform CDK or Palumi and then putting a",
    "start": "591200",
    "end": "598320"
  },
  {
    "text": "business case forward to use those So another strategy that I found can be",
    "start": "598320",
    "end": "604320"
  },
  {
    "text": "quite useful in adopting new tools within an organization is inner source So it's something that's been gaining",
    "start": "604320",
    "end": "610480"
  },
  {
    "text": "popularity recently It's a term coined by Timothy O'Reilly the founder of O'Reilly Media Inner source is a concept",
    "start": "610480",
    "end": "617440"
  },
  {
    "text": "of using open source software development practices within an organization to improve software",
    "start": "617440",
    "end": "622720"
  },
  {
    "text": "development collaboration and communication So more practically inner source helps to share reusable",
    "start": "622720",
    "end": "628560"
  },
  {
    "text": "components and development effort within a company This is something that can be really well suited to larger enterprise",
    "start": "628560",
    "end": "634560"
  },
  {
    "text": "organizations or those with multiple departments So what are the benefits of",
    "start": "634560",
    "end": "640640"
  },
  {
    "text": "inner source well you don't need to start from scratch You can use existing components that have already been",
    "start": "640640",
    "end": "645680"
  },
  {
    "text": "developed internally for the company which means less work for you which is always a win Inner source components can",
    "start": "645680",
    "end": "652079"
  },
  {
    "text": "also be really useful if a company has specific logic For example if all resources of a certain type need to be",
    "start": "652079",
    "end": "657920"
  },
  {
    "text": "tagged with specific labels for reporting purposes It's an easy way of making sure all resources are compliant",
    "start": "657920",
    "end": "664000"
  },
  {
    "text": "and changes can be applied in a single place and then propagated to all areas that use the code",
    "start": "664000",
    "end": "670720"
  },
  {
    "text": "If you find suitable components that meet for example 80% requirements then you can spend your development time",
    "start": "670720",
    "end": "676640"
  },
  {
    "text": "building the extra 20% functionality and then contributing that back to the main component for other people to use in the",
    "start": "676640",
    "end": "682560"
  },
  {
    "text": "future and also yourself to use in the future So what are the challenges if",
    "start": "682560",
    "end": "687760"
  },
  {
    "text": "pull requests take a long time to be merged back to the main inner source code it can then mean that you need to",
    "start": "687760",
    "end": "694320"
  },
  {
    "text": "go you have copies multiple copies of the original inner source code in your VPO or in the branch So you then need to",
    "start": "694320",
    "end": "701279"
  },
  {
    "text": "go back and update your code to point to the main inner source branch once your PR has been merged In reality I've seen",
    "start": "701279",
    "end": "708000"
  },
  {
    "text": "that in a source code that's been copied across can end up staying around for quite a long time because people forget to go back and repoint to the main inner",
    "start": "708000",
    "end": "716240"
  },
  {
    "text": "source repo So also making sure that inner source projects have active maintainers",
    "start": "716240",
    "end": "722079"
  },
  {
    "text": "that can help to solve the issue One other problem is not having shared alignment on the architecture of",
    "start": "722079",
    "end": "728040"
  },
  {
    "text": "components So should the new functionality be added to the existing components or is it best to create a",
    "start": "728040",
    "end": "734240"
  },
  {
    "text": "whole new component for it so having alignment on things like this can make the whole process a lot",
    "start": "734240",
    "end": "740800"
  },
  {
    "text": "easier So moving on to another key learning automation will almost always",
    "start": "740920",
    "end": "746079"
  },
  {
    "text": "save you time and effort in the long run even if it takes a bit more effort initially So running through the three",
    "start": "746079",
    "end": "752880"
  },
  {
    "text": "key terms there's continuous integration the regular merging of code changes into a code repository triggering automated",
    "start": "752880",
    "end": "759200"
  },
  {
    "text": "builds and tests Continuous delivery the automated release of code that's passed the build and test phases of the CI step",
    "start": "759200",
    "end": "766320"
  },
  {
    "text": "And then continuous deployment the automated deployment of leaf code to a production environment with no manual",
    "start": "766320",
    "end": "772600"
  },
  {
    "text": "intervention So going back to the topic of copy and paste deployments Here's an example of a deployment pipeline in",
    "start": "772600",
    "end": "779360"
  },
  {
    "text": "somewhere I worked a few years ago So developers me included had a desktop",
    "start": "779360",
    "end": "785120"
  },
  {
    "text": "which had file shares for each of the different environments a dev test and pod which links the servers in the",
    "start": "785120",
    "end": "790800"
  },
  {
    "text": "different environments Changes were attracted to a normal project management tool Think something like Jira Um code",
    "start": "790800",
    "end": "796639"
  },
  {
    "text": "was committed to a local checkout subversion and unit tests were run locally but there was no status check to",
    "start": "796639",
    "end": "802000"
  },
  {
    "text": "make sure it actually been run So deployments involved copying code from the local desktop into the directory and",
    "start": "802000",
    "end": "809920"
  },
  {
    "text": "then it would go up to the server As I'm sure you can see there are a lot of downsides this deployment method So",
    "start": "809920",
    "end": "816000"
  },
  {
    "text": "sometimes there are problems with the file share and not all files were copied across at the same time meaning the",
    "start": "816000",
    "end": "821279"
  },
  {
    "text": "environment was out of sync and sometimes because of human error not all of the files were copied across to the",
    "start": "821279",
    "end": "826800"
  },
  {
    "text": "new environment and if tests are run locally and there were no status checks then changes could be deployed that",
    "start": "826800",
    "end": "832079"
  },
  {
    "text": "hadn't been fully tested So some another issue that we had",
    "start": "832079",
    "end": "837279"
  },
  {
    "text": "quite a few times was that code changes that needed to align with database changes Um I know it's still a problem",
    "start": "837279",
    "end": "843600"
  },
  {
    "text": "nowadays but especially with this method um the running code could be incompatible with the database schema So",
    "start": "843600",
    "end": "849519"
  },
  {
    "text": "trying to update both at the same time didn't work and you ended up with failed requests from the",
    "start": "849519",
    "end": "855959"
  },
  {
    "text": "user So given all these downsides and as automation was starting to become popular we decided to move to a more",
    "start": "855959",
    "end": "861360"
  },
  {
    "text": "automated development approach There are many CI/CD tools available you know git gitlab github actions god In this case",
    "start": "861360",
    "end": "868560"
  },
  {
    "text": "we use jenkins So even after automation we didn't have full continuous deployments as",
    "start": "868560",
    "end": "875360"
  },
  {
    "text": "production deployments still required manual click to trigger the Jenkins pipeline I've seen that quite a lot in",
    "start": "875360",
    "end": "881279"
  },
  {
    "text": "like larger companies and in services need high availability because they still need that human in the mix to",
    "start": "881279",
    "end": "888320"
  },
  {
    "text": "trigger the deployment So the main benefits of using automation as is probably quite clear Um deploying code",
    "start": "888320",
    "end": "894399"
  },
  {
    "text": "from version control instead of a developer local checkout reduce mistakes as the full deployment process was",
    "start": "894399",
    "end": "900160"
  },
  {
    "text": "triggered from a centralized place Jenkins at the click of a button any local you know desktop inconsistencies",
    "start": "900160",
    "end": "906720"
  },
  {
    "text": "were removed completely which made everyone's lives a lot easier So traceability of the",
    "start": "906720",
    "end": "912000"
  },
  {
    "text": "deployments as well was a lot easier Obviously you can see in Jenkins everything that's happened that is easier to identify the root cause of any",
    "start": "912000",
    "end": "918519"
  },
  {
    "text": "issues and obviously in case of Jenkins and also any other tool there are quite a few integrations you can use to",
    "start": "918519",
    "end": "924079"
  },
  {
    "text": "integrate with your other tooling so moving on to another automated approach let's look at githops",
    "start": "924079",
    "end": "930959"
  },
  {
    "text": "for infrastructure automation so this was first coined by Alex sorry Alexis",
    "start": "930959",
    "end": "937199"
  },
  {
    "text": "Richardson the we work CEO so githops is a set of principles for operating and",
    "start": "937199",
    "end": "942320"
  },
  {
    "text": "managing software systems The four principles are the desired system state must be defined declaratively The",
    "start": "942320",
    "end": "949360"
  },
  {
    "text": "desired system state must be stored in a way that's immutable and versioned and the desired system state is",
    "start": "949360",
    "end": "954959"
  },
  {
    "text": "automatically pulled from source without any manual intervention And then finally continuous reconciliation So system",
    "start": "954959",
    "end": "961120"
  },
  {
    "text": "state is continuously monitored and reconciled to whatever is stated in the code",
    "start": "961120",
    "end": "967759"
  },
  {
    "text": "So CI/CD is important for application deployments of course but something that can be overlooked as it tends to change",
    "start": "967759",
    "end": "974639"
  },
  {
    "text": "less often than application code are the underlying infrastructure deployments which can be pretty easy to automate So",
    "start": "974639",
    "end": "981440"
  },
  {
    "text": "it can be quite common obviously for legacy systems to actually not have that infrastructure automation in place Anyway um there are lots of",
    "start": "981440",
    "end": "987759"
  },
  {
    "text": "infrastructure with code tools already Um generic ones like Terraform Palumi Pocket Ansible or vendor specific ones",
    "start": "987759",
    "end": "994480"
  },
  {
    "text": "like Azure Resource Manager Google Cloud Resource Manager and AWS Cloud Formation",
    "start": "994480",
    "end": "999600"
  },
  {
    "text": "A tool that I've had some experience with is Terraform So I'm going to run through a very very basic it is very basic workflow to show how easy it is to",
    "start": "999600",
    "end": "1006639"
  },
  {
    "text": "set up So implements the GitHop strategy for provisioning infrastructure as code using Terraform cloud to provision the",
    "start": "1006639",
    "end": "1013839"
  },
  {
    "text": "AWS infrastructure from GitHub source code I'll show you the diagram It will make it clearer It's something that",
    "start": "1013839",
    "end": "1019279"
  },
  {
    "text": "could be used for new infrastructure or could be applied to existing infrastructure that isn't already",
    "start": "1019279",
    "end": "1024558"
  },
  {
    "text": "managed by code So let's go through an overview of the setup So it's separated",
    "start": "1024559",
    "end": "1029600"
  },
  {
    "text": "into two parts The green components show the identity provider authentication setup between GitHub and Terraform cloud",
    "start": "1029600",
    "end": "1036000"
  },
  {
    "text": "and AWS and Terraform cloud The purple components rely on the green components to provision the resources defined in",
    "start": "1036000",
    "end": "1042400"
  },
  {
    "text": "Terraform in the GitHub repository So I'll show you some of the Terraform that can be used to configure the setup as",
    "start": "1042400",
    "end": "1047678"
  },
  {
    "text": "well as screenshots from the console just to make it clearer So let's start by setting up the connection between Terraform Cloud and",
    "start": "1047679",
    "end": "1054280"
  },
  {
    "text": "GitHub This can be done using this Terraform resource there is a Terraform cloud provider as there is with many",
    "start": "1054280",
    "end": "1060480"
  },
  {
    "text": "other tools as well So unfortunately this resource does require a GitHub personal access token um but it is still",
    "start": "1060480",
    "end": "1067360"
  },
  {
    "text": "possible to automate which is the the point of this one So here are screenshots of the setup So this sets up",
    "start": "1067360",
    "end": "1075280"
  },
  {
    "text": "the BCS connection between GitHub and Terraform cloud So as you can see there are multiple different options GitHub",
    "start": "1075280",
    "end": "1081760"
  },
  {
    "text": "GitLab Bitbucket Azure DevOps and this is a permission step to authorize the connection between",
    "start": "1081760",
    "end": "1087360"
  },
  {
    "text": "Teresform cloud and your GitHub repository So this can be set at a repository level or at whole organizational level In terms of lease",
    "start": "1087360",
    "end": "1094640"
  },
  {
    "text": "privilege it's probably best to set it at the repository level if you can So this is an example of a Terform cloud",
    "start": "1094640",
    "end": "1100559"
  },
  {
    "text": "workspace configuration and then the link to the GitHub repo using the TF workspace resource There are lots and",
    "start": "1100559",
    "end": "1107520"
  },
  {
    "text": "lots of other configuration options and as always with instructurous code it's very powerful and easy to scale So you",
    "start": "1107520",
    "end": "1114400"
  },
  {
    "text": "can create multiple workspaces all with the same configuration So this is the repository selection step to link the new workspace",
    "start": "1114400",
    "end": "1121840"
  },
  {
    "text": "Um only the repositories that you've authorized will appear and once you've done that it's on to the",
    "start": "1121840",
    "end": "1127080"
  },
  {
    "text": "configuration So you've got the auto apply settings If you want to do fully continuous deployment you can configure",
    "start": "1127080",
    "end": "1132559"
  },
  {
    "text": "this to auto apply whenever there's a successful plan And then what about the run triggers so you can get it to",
    "start": "1132559",
    "end": "1139679"
  },
  {
    "text": "trigger a run whenever any changes are pushed to any file in the repo or constrain it slightly So restrict it to",
    "start": "1139679",
    "end": "1147360"
  },
  {
    "text": "particular file files or particular git tags So it's so flexible that there are like hundreds of different options that",
    "start": "1147360",
    "end": "1152559"
  },
  {
    "text": "you can use But yeah the point here is that it's easy to set up and configure to your use",
    "start": "1152559",
    "end": "1158520"
  },
  {
    "text": "case And then the PR configuration So ticking this option will automatically",
    "start": "1158520",
    "end": "1163760"
  },
  {
    "text": "trigger a Terraform plan every time a PR is created And then the link to the Terraform plan is also in the GitHub PR",
    "start": "1163760",
    "end": "1170480"
  },
  {
    "text": "So it's fully integrated So that's the Terapform cloud and GitHub connection set up Now moving",
    "start": "1170480",
    "end": "1177039"
  },
  {
    "text": "on to Terraform Cloud and AWS connection So first the identity provider authentication This is the Terraform to",
    "start": "1177039",
    "end": "1183600"
  },
  {
    "text": "get the Terraform cloud TLS certificate and then set up the connection",
    "start": "1183600",
    "end": "1189440"
  },
  {
    "text": "And this is a screenshot as well Then you've got the IDP setup um with the IM",
    "start": "1189440",
    "end": "1194799"
  },
  {
    "text": "role allowing it to assume that role and that's in here And then you've",
    "start": "1194799",
    "end": "1201200"
  },
  {
    "text": "got the Terraform cloud AWS authentication saying what permissions Terraform Cloud has Um in here it's S3",
    "start": "1201200",
    "end": "1208160"
  },
  {
    "text": "anything So it's probably quite overly permissive but it's just showing the example You can configure this to any",
    "start": "1208160",
    "end": "1213600"
  },
  {
    "text": "kind of AWS IM policy that you like And yeah and that's a screenshot So",
    "start": "1213600",
    "end": "1219600"
  },
  {
    "text": "now the AWS part has been configured You just add the environment variables to Terraform cloud to tell it which AWS",
    "start": "1219600",
    "end": "1225200"
  },
  {
    "text": "role to assume and which authentication mode to use And that's it So to recap the green",
    "start": "1225200",
    "end": "1233600"
  },
  {
    "text": "components that have just been set up are the authentication between Terraform Cloud and GitHub and the off between",
    "start": "1233600",
    "end": "1238880"
  },
  {
    "text": "Terraform Cloud and AWS So it only needs to be done once for each combination of Terraform cloud workspace GitHub",
    "start": "1238880",
    "end": "1245280"
  },
  {
    "text": "repository and AWS account configuration And as we saw to achieve",
    "start": "1245280",
    "end": "1250880"
  },
  {
    "text": "automation it can also be done using Terraform which means it's scalable However at some point during the initial",
    "start": "1250880",
    "end": "1256799"
  },
  {
    "text": "bootstrap you do need to manually create a workspace to hold the state for that initial",
    "start": "1256799",
    "end": "1261960"
  },
  {
    "text": "Terraform Let's move on to the purple components These are to provision the resources defined in Terraform So this",
    "start": "1261960",
    "end": "1269440"
  },
  {
    "text": "is a very basic demo repo to create an S3 bucket in AWS accounts In a real life",
    "start": "1269440",
    "end": "1274880"
  },
  {
    "text": "scenario it also has the test and any linting and validation too So the provider configuration is easy It's",
    "start": "1274880",
    "end": "1281039"
  },
  {
    "text": "already been set up Then define some variables and the values and then of course main Terraform",
    "start": "1281039",
    "end": "1288640"
  },
  {
    "text": "S3 bucket and two configuration options There are many So now that connection",
    "start": "1288640",
    "end": "1294320"
  },
  {
    "text": "has been set up what would we need to do to deploy so create a new branch commit",
    "start": "1294320",
    "end": "1300559"
  },
  {
    "text": "the code push to GitHub and create a PR and that will trigger a plan So you can see what it's going to provision in AWS",
    "start": "1300559",
    "end": "1308240"
  },
  {
    "text": "Once the PR has been approved and merged to the main branch it will then trigger another plan And if you set auto apply",
    "start": "1308240",
    "end": "1313919"
  },
  {
    "text": "then Terraform apply will run automatically So now it's been",
    "start": "1313919",
    "end": "1319679"
  },
  {
    "text": "configured Scaling this to manage a lot of resources is really easy So say you want 30 S3 buckets instead of one all",
    "start": "1319679",
    "end": "1326720"
  },
  {
    "text": "with the same configuration Write the code create a feature branch create a",
    "start": "1326720",
    "end": "1331799"
  },
  {
    "text": "PR and then the automatic plan will run and then merge it into main And there you go You've got 30 buckets Easy to",
    "start": "1331799",
    "end": "1338080"
  },
  {
    "text": "manage easy to configure Any changes in the future all you need to do is update the code And same with EKS cluster or",
    "start": "1338080",
    "end": "1345360"
  },
  {
    "text": "any other resource So why automate well as I guess most",
    "start": "1345360",
    "end": "1351120"
  },
  {
    "text": "people know you know it makes it easy to standardize and scale as we saw in that example It gives good visibility and",
    "start": "1351120",
    "end": "1356960"
  },
  {
    "text": "traceability over infrastructure deployments It means multiple people can work in the same repo and everyone can",
    "start": "1356960",
    "end": "1363840"
  },
  {
    "text": "see what's going on And if you have the proper git branch protection strategy in place it means there'll be no risk of a",
    "start": "1363840",
    "end": "1370080"
  },
  {
    "text": "terform apply running using any outdated code And there's also the option to import existing resources that have been",
    "start": "1370080",
    "end": "1376799"
  },
  {
    "text": "created manually into your Terraform state using Terraform imports because I've seen especially with some legacy",
    "start": "1376799",
    "end": "1383200"
  },
  {
    "text": "apps at the very beginning things were just created manually Um but now they need to be standardized and certain",
    "start": "1383200",
    "end": "1389360"
  },
  {
    "text": "options for example should it be public should it be private now need to be set So importing those into Terraform state",
    "start": "1389360",
    "end": "1395200"
  },
  {
    "text": "can help you align that Um so just one caveat in the Terraform Cloud version",
    "start": "1395200",
    "end": "1401760"
  },
  {
    "text": "well there's a paid for version of Terform Cloud and in that option it also has drift detection which is obviously",
    "start": "1401760",
    "end": "1406960"
  },
  {
    "text": "another point for the GitHop side of things but you do have to pay for",
    "start": "1406960",
    "end": "1413080"
  },
  {
    "text": "that So this example used Terraform Cloud GitHub and AWS Of course there are",
    "start": "1413080",
    "end": "1418400"
  },
  {
    "text": "many other tools out there with an equally rich set of integrations They also tend to have code examples and",
    "start": "1418400",
    "end": "1424480"
  },
  {
    "text": "step-by-step guides to make things easier So to recap continuous delivery or",
    "start": "1424480",
    "end": "1430480"
  },
  {
    "text": "continuous deployment might depend on your organizational policy or general ways of working especially for",
    "start": "1430480",
    "end": "1436200"
  },
  {
    "text": "production So it's also worth considering the different system components and which strategy is best for each For example it might be best to",
    "start": "1436200",
    "end": "1443440"
  },
  {
    "text": "use continuous delivery for database provisioning but full continuous deployment for application",
    "start": "1443440",
    "end": "1448520"
  },
  {
    "text": "code Are different strategies needed in different environments for example continuous deployment for dev but stage",
    "start": "1448520",
    "end": "1454320"
  },
  {
    "text": "in production actually need that manual step There are lots of tools available genkins circleci gitlab github actions",
    "start": "1454320",
    "end": "1461760"
  },
  {
    "text": "and many more So you need to choose the best one for your use case You know is one of them on your company tech radar",
    "start": "1461760",
    "end": "1467760"
  },
  {
    "text": "any of the others being used in other teams in your department So moving on to setting clear",
    "start": "1467760",
    "end": "1475039"
  },
  {
    "text": "responsibilities I'll tell you a story about a small operations department that supported a",
    "start": "1475039",
    "end": "1480640"
  },
  {
    "text": "number of product teams This is a true story On Monday afternoon a product team",
    "start": "1480640",
    "end": "1486480"
  },
  {
    "text": "deployed a change Everything looks good Everyone goes home 2 a.m on Tuesday the",
    "start": "1486480",
    "end": "1491600"
  },
  {
    "text": "operations team get an on call alert that clears after a few minutes 4 a.m they get another alert but doesn't clear",
    "start": "1491600",
    "end": "1498480"
  },
  {
    "text": "Unfortunately there's no runbook for this service to how to resolve the issue and the person on call isn't familiar",
    "start": "1498480",
    "end": "1504080"
  },
  {
    "text": "with the application they've got no way to fix the problem They have to wait until 5 hours later at 9:00 a.m when",
    "start": "1504080",
    "end": "1510000"
  },
  {
    "text": "they can contact the product team to get them to take a look Later that day another team deploy change Everything is",
    "start": "1510000",
    "end": "1516880"
  },
  {
    "text": "good They will go home However this time 11 p.m on call get guest and alerts This time the service does have a runbook but",
    "start": "1516880",
    "end": "1523760"
  },
  {
    "text": "unfortunately none of the steps in the runbook work So they request help on Slack but no one else is online They",
    "start": "1523760",
    "end": "1529919"
  },
  {
    "text": "call people whose phone numbers they have but there's no answer So they need to wait until people come online in the",
    "start": "1529919",
    "end": "1535600"
  },
  {
    "text": "morning around yeah a good few hours later to resolve it So not a good week",
    "start": "1535600",
    "end": "1540880"
  },
  {
    "text": "for call and definitely not a pattern that can be sustained long term So what are some reliability",
    "start": "1540880",
    "end": "1548120"
  },
  {
    "text": "solutions in the previous scenario out of sight reliability was responsibility of the operations team or working site",
    "start": "1548120",
    "end": "1555520"
  },
  {
    "text": "reliability sorry working hours site reliability responsibility of the product team The equal experts playbook",
    "start": "1555520",
    "end": "1562640"
  },
  {
    "text": "describes a few site reliability solutions So you build it you run it as you've heard quite a lot um over the",
    "start": "1562640",
    "end": "1568159"
  },
  {
    "text": "last few days The product team receives the alerts and is responsible for support Um the other option is operate",
    "start": "1568159",
    "end": "1573840"
  },
  {
    "text": "operational enablers which is a help desk that hands over issues to a cross functional operational team or ops run",
    "start": "1573840",
    "end": "1581200"
  },
  {
    "text": "it An operational bridge receives the alerts hands over to level two support You can then hand over to level three if",
    "start": "1581200",
    "end": "1588000"
  },
  {
    "text": "required So equal experts advocate for you build it you run it for digital systems and ox run it for foundational",
    "start": "1588000",
    "end": "1594799"
  },
  {
    "text": "services in a hybrid operating model And then how about delivery solutions in the previous scenario the",
    "start": "1594799",
    "end": "1602080"
  },
  {
    "text": "product team delivers the endto-end solution but they weren't responsible for instant response Of course different solutions",
    "start": "1602080",
    "end": "1608400"
  },
  {
    "text": "might work for different use cases A large company might have dedicated networking DBA and instant management",
    "start": "1608400",
    "end": "1613840"
  },
  {
    "text": "teams but smaller company some of these roles or teams might be combined So this",
    "start": "1613840",
    "end": "1619039"
  },
  {
    "text": "is a solution from the equal experts playbook So you've got you build it you",
    "start": "1619039",
    "end": "1624480"
  },
  {
    "text": "run it The product team is responsible for application build testing deployment and incident response or ops run it The",
    "start": "1624480",
    "end": "1631760"
  },
  {
    "text": "product team's responsible for application build and testing before handing over to an operations team for change management approval and release",
    "start": "1631760",
    "end": "1639760"
  },
  {
    "text": "So applying the you build it you run it model to the original example the product team would be the ones who' be",
    "start": "1639760",
    "end": "1645919"
  },
  {
    "text": "responsible for incident response which means they might not have deployed at 4 p.m um because they didn't want to be",
    "start": "1645919",
    "end": "1651760"
  },
  {
    "text": "woken up at night but also if they were on call they could probably have solved it a lot more quickly because they know their",
    "start": "1651760",
    "end": "1658600"
  },
  {
    "text": "application So just to recap so all services should have run books before",
    "start": "1658600",
    "end": "1663919"
  },
  {
    "text": "reaching production This means anyone with the required access can help support the application if needed One",
    "start": "1663919",
    "end": "1669520"
  },
  {
    "text": "book should be regularly reviewed and any changes to the application infrastructure or running environment should be updated in the one book If",
    "start": "1669520",
    "end": "1677039"
  },
  {
    "text": "possible it can be worth setting up multiple levels of support So level one support can look at the one book If they",
    "start": "1677039",
    "end": "1682960"
  },
  {
    "text": "can't deal with it they can then hand over to a subject matter expert who can hopefully resolve it more quickly",
    "start": "1682960",
    "end": "1688640"
  },
  {
    "text": "Monitoring alerting should be designed during the development process So alerts",
    "start": "1688640",
    "end": "1694399"
  },
  {
    "text": "can be tested in each environment So you test it in dev makes it a lot easier when you get to staging and means less",
    "start": "1694399",
    "end": "1699520"
  },
  {
    "text": "alerts in production And then if budget allows it can be worth using a good on call and",
    "start": "1699520",
    "end": "1706320"
  },
  {
    "text": "incident management tool For example page duty ops Genie Service Now there are many of them because they can give",
    "start": "1706320",
    "end": "1712240"
  },
  {
    "text": "you things like um real-time dashboards for observability easy on call scheduling and a lot of them have",
    "start": "1712240",
    "end": "1717520"
  },
  {
    "text": "automated configuration Use the Terraform example Again northern have terform providers or any other provider",
    "start": "1717520",
    "end": "1724080"
  },
  {
    "text": "They're quite easy to set up and configure So let's move on to",
    "start": "1724080",
    "end": "1731919"
  },
  {
    "text": "psychological safety I'm going to tell you a story Once upon a time there's an enthusiastic",
    "start": "1731919",
    "end": "1738960"
  },
  {
    "text": "junior developer Let's call them Joe He was given a task to clean up some old files from a file",
    "start": "1738960",
    "end": "1745240"
  },
  {
    "text": "system So Jay wrote a script They tested it out Everything look",
    "start": "1745240",
    "end": "1750600"
  },
  {
    "text": "good Jay then realized there are a ton of other similar files in other directories that could be cleaned up",
    "start": "1750600",
    "end": "1756240"
  },
  {
    "text": "They decided to go above and beyond and they refine the script to search for all directories of certain type They test it",
    "start": "1756240",
    "end": "1762399"
  },
  {
    "text": "locally Everything looked good to go So they ran the script against the internal file system and all of the expected",
    "start": "1762399",
    "end": "1769039"
  },
  {
    "text": "files were deleted They checked the file system and thought there was tons of space They gave themselves a pat on the",
    "start": "1769039",
    "end": "1774320"
  },
  {
    "text": "back for a job well done However suddenly other people in the office",
    "start": "1774320",
    "end": "1779600"
  },
  {
    "text": "started to mention their files missing from the file system So Jay decided to double check their script just in",
    "start": "1779600",
    "end": "1786760"
  },
  {
    "text": "case Jay realized that the command to find the directories on the file system to delete files was actually returning",
    "start": "1786760",
    "end": "1792399"
  },
  {
    "text": "an empty string We're basically running rm-rf star at the root directory level",
    "start": "1792399",
    "end": "1798559"
  },
  {
    "text": "and deleting everything So luckily for Joe they had a",
    "start": "1798559",
    "end": "1804000"
  },
  {
    "text": "supportive manager and they went to tell them what happened Their manager attempted to restore the files in the latest backup but unfortunately that",
    "start": "1804000",
    "end": "1811399"
  },
  {
    "text": "failed So the only remaining option was to stop all access to file system and try and salvage what was left and then",
    "start": "1811399",
    "end": "1818159"
  },
  {
    "text": "restore from a previous day's backup As at this time most people were using desktop computers and the internal file",
    "start": "1818159",
    "end": "1825120"
  },
  {
    "text": "system for document storage Not much work was done for the rest of the day So the impact was quite small in this case",
    "start": "1825120",
    "end": "1830640"
  },
  {
    "text": "but obviously in a different scenario it could have been a lot worse So what happened to Jay well Jay",
    "start": "1830640",
    "end": "1836960"
  },
  {
    "text": "certainly learned a lesson and luckily for Jay the team were quite proactive They ran an incident postmortem to learn",
    "start": "1836960",
    "end": "1842880"
  },
  {
    "text": "from the incident find the recourse of the problem and identify any solutions And what was the outcome well it was",
    "start": "1842880",
    "end": "1849039"
  },
  {
    "text": "quite good They put a plan in place to implement least privilege access and regular backup and restore testing was",
    "start": "1849039",
    "end": "1854960"
  },
  {
    "text": "also put in place And then Joe of course never ran a destructive untested development script in a live environment",
    "start": "1854960",
    "end": "1860799"
  },
  {
    "text": "again So least privilege access as I'm sure",
    "start": "1860799",
    "end": "1866000"
  },
  {
    "text": "most of you know is a cyber security best practice where users are given the minimum privileges needed to do a task",
    "start": "1866000",
    "end": "1872399"
  },
  {
    "text": "So what are the main benefits in general forcing users to assume a privileged role can be a good reminder to be more",
    "start": "1872399",
    "end": "1879559"
  },
  {
    "text": "cautious It also protects you as an employee in the absence of a sandbox You know you can test out new tools and",
    "start": "1879559",
    "end": "1885840"
  },
  {
    "text": "scripts without worrying about any destruction of key resources And it also protects the business as they know that",
    "start": "1885840",
    "end": "1892240"
  },
  {
    "text": "only certain people have those privileges to perform destructive tasks And then in larger companies well-",
    "start": "1892240",
    "end": "1898480"
  },
  {
    "text": "definfined permissions is good evidence for security auditing and provides peace of mind for cyber security teams and",
    "start": "1898480",
    "end": "1904240"
  },
  {
    "text": "more centralized functions So what is psychological",
    "start": "1904240",
    "end": "1909480"
  },
  {
    "text": "safety the belief you won't be punished for speaking up with ideas questions concerns or mistakes So Amy Edmonson",
    "start": "1909480",
    "end": "1917039"
  },
  {
    "text": "codified the concept in the book the fearless organization There have been many many studies done on psychological safety One",
    "start": "1917039",
    "end": "1924159"
  },
  {
    "text": "example is project Aristotle which was a two-year study by Google to identify the key elements of successful teams and",
    "start": "1924159",
    "end": "1931039"
  },
  {
    "text": "psychological safety was one of the five components found in high performing teams by that",
    "start": "1931039",
    "end": "1937640"
  },
  {
    "text": "study So there are lots of workshops and toolkits that can provide proper training and give you more information",
    "start": "1937640",
    "end": "1943679"
  },
  {
    "text": "But to give an example of some questions you might see in a questionnaire here are some of the questions from a questionnaire you can",
    "start": "1943679",
    "end": "1949440"
  },
  {
    "text": "take yourself on Amy Edmonson's website Fearless Organization Scan So if you make a mistake on this team it's often",
    "start": "1949440",
    "end": "1955600"
  },
  {
    "text": "held against you Members of this team can bring up problems and tough issues People on this team sometimes reject",
    "start": "1955600",
    "end": "1962399"
  },
  {
    "text": "others for being different It's safe to take a risk on this team It's difficult to ask other members of this team for",
    "start": "1962399",
    "end": "1968559"
  },
  {
    "text": "help Working with members of this team my unique skills and talents are valued",
    "start": "1968559",
    "end": "1973760"
  },
  {
    "text": "and utilized And then finally no one on this team would deliberately act in a way that undermines my",
    "start": "1973760",
    "end": "1980200"
  },
  {
    "text": "efforts So how did working in a team with good levels of psychological safety help",
    "start": "1980200",
    "end": "1985720"
  },
  {
    "text": "Joe so Joe acknowledged their involvement and shared the root cause of the problem so it could be dealt with as",
    "start": "1985720",
    "end": "1991600"
  },
  {
    "text": "quickly as possible If Jay hadn't spoken up it would probably have taken longer to actually find the root cause and fix",
    "start": "1991600",
    "end": "1997440"
  },
  {
    "text": "it Joe's direct manager was approachable and acknowledged there were key learnings and improvements that could be",
    "start": "1997440",
    "end": "2002720"
  },
  {
    "text": "made and they both actively engaged in that postmortem to find the solution So",
    "start": "2002720",
    "end": "2008080"
  },
  {
    "text": "it's always worth considering if Joe has seen other people being punished for admitting their mistakes would they have",
    "start": "2008080",
    "end": "2013120"
  },
  {
    "text": "spoken up at all so to recap on the key learnings",
    "start": "2013120",
    "end": "2020480"
  },
  {
    "text": "technology evolves quickly So here are some links um things we went through So we ran through general tech radars and",
    "start": "2020480",
    "end": "2026880"
  },
  {
    "text": "custom tech radars and how they can be useful We ran through the benefits and some pitfalls in a",
    "start": "2026880",
    "end": "2033080"
  },
  {
    "text": "source and then automation which will save you time and effort in the long run So we touched on CI/CD and",
    "start": "2033080",
    "end": "2039600"
  },
  {
    "text": "considerations for continuous delivery or continuous deployment should you use different strategies for different",
    "start": "2039600",
    "end": "2044960"
  },
  {
    "text": "environments and deployment types and then the advantages of GitOps and then the demo of the GitHub Terraform and AWS",
    "start": "2044960",
    "end": "2052079"
  },
  {
    "text": "set up Then setting clear responsibilities So we ran through the",
    "start": "2052079",
    "end": "2057520"
  },
  {
    "text": "equal expert delivery and site reliability solutions how all services should have run books before they go to",
    "start": "2057520",
    "end": "2063280"
  },
  {
    "text": "production and how it's important to design and implement monitoring and alerting during the development",
    "start": "2063280",
    "end": "2068919"
  },
  {
    "text": "process And then finally how psych how working a psychologically safe working environment benefits everyone So we ran",
    "start": "2068919",
    "end": "2076320"
  },
  {
    "text": "through some of the questions from that psychological safety questionnaire and also how blameless instant postmortems",
    "start": "2076320",
    "end": "2082320"
  },
  {
    "text": "can be helpful in maintaining psychological safety by helping everyone learn from the incident finding the root",
    "start": "2082320",
    "end": "2087440"
  },
  {
    "text": "cause of the problem and also identifying the solutions So yeah thank you Thanks for",
    "start": "2087440",
    "end": "2092638"
  },
  {
    "text": "your time",
    "start": "2092639",
    "end": "2095799"
  },
  {
    "text": "Thank you very much John Great stuff We've got time for questions folks Uh there is a mic traveling around the uh",
    "start": "2097839",
    "end": "2104800"
  },
  {
    "text": "room if you uh want to put your hands up",
    "start": "2104800",
    "end": "2110040"
  },
  {
    "text": "Thanks Thanks for sharing Um I'm curious with the move from uh the kind of copy",
    "start": "2111440",
    "end": "2117280"
  },
  {
    "text": "paste bit to the the GitOps bit what was how long did that take how did you manage that transition uh yeah over the",
    "start": "2117280",
    "end": "2125280"
  },
  {
    "text": "question So yeah that did take quite a few well I say a few months probably a few months to a year So we started with",
    "start": "2125280",
    "end": "2131760"
  },
  {
    "text": "you know development and then moving to production that was probably the the biggest step Obviously we had other work",
    "start": "2131760",
    "end": "2138079"
  },
  {
    "text": "priorities as well So it was kind of trying to balance it in between those but finally once it was done obviously",
    "start": "2138079",
    "end": "2143359"
  },
  {
    "text": "everyone realized the benefits but it was a slightly painful process Yeah Anyone else",
    "start": "2143359",
    "end": "2151920"
  },
  {
    "text": "folks no problem And like I said thank you once again Gemma Really appreciate the effort Thank you",
    "start": "2153320",
    "end": "2160519"
  },
  {
    "text": "[Music]",
    "start": "2163670",
    "end": "2169119"
  }
]