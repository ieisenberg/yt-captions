[
  {
    "start": "0",
    "end": "35000"
  },
  {
    "text": "so the subject that I was actually put asked to put together as a Java SC State",
    "start": "3929",
    "end": "10139"
  },
  {
    "text": "of the Union to open the Java track and it's an interesting thing because this is not the typical thing I'll speak",
    "start": "10139",
    "end": "15690"
  },
  {
    "text": "about most of my talks tend to go into technical detail and you know I'd like to make a lot of fun comments about",
    "start": "15690",
    "end": "22230"
  },
  {
    "text": "technical things this is sort of a State of the Union thing so I I tried to find",
    "start": "22230",
    "end": "27570"
  },
  {
    "text": "month to fight my tendencies to put in commentary about technical things but it'll still happen here looking at what",
    "start": "27570",
    "end": "36179"
  },
  {
    "start": "35000",
    "end": "69000"
  },
  {
    "text": "we're going to cover I'll do a brief introduction of Who I am and where I come from we'll talk a little about",
    "start": "36179",
    "end": "42899"
  },
  {
    "text": "history then we'll talk about some more history and futures we'll talk you know",
    "start": "42899",
    "end": "49379"
  },
  {
    "text": "about trends in Java State and then I'll do some of the political what is in Java",
    "start": "49379",
    "end": "55949"
  },
  {
    "text": "ninth the stuff but in a little different way and we'll go in I'm hoping",
    "start": "55949",
    "end": "61019"
  },
  {
    "text": "to have some time to chat to actually open it up to discussion so people can comment on what they think about the",
    "start": "61019",
    "end": "66420"
  },
  {
    "text": "State of the Union for Java about me I'm the CTO of Azul systems it has only made",
    "start": "66420",
    "end": "73350"
  },
  {
    "start": "69000",
    "end": "282000"
  },
  {
    "text": "Java Virtual Machines I've been playing in that game for about 14 years now one",
    "start": "73350",
    "end": "79560"
  },
  {
    "text": "of the things we're probably known for Edison is garbage collection we believe we've solved garbage collection it's a",
    "start": "79560",
    "end": "85890"
  },
  {
    "text": "done deal I've been working on that problem for a while and here's some evidence of me",
    "start": "85890",
    "end": "90900"
  },
  {
    "text": "actually doing work on the problem that is a physical garbage collector problem",
    "start": "90900",
    "end": "97020"
  },
  {
    "text": "it actually had a bug in it that machine is a trash compactor it's in my kitchen",
    "start": "97020",
    "end": "102380"
  },
  {
    "text": "because I'm a lazy software engineers what it actually does is it performs minor garbage collection compactions",
    "start": "102380",
    "end": "109200"
  },
  {
    "text": "during the week so I only have to do the full GC where i pause take the bag out go outside once a week and since we",
    "start": "109200",
    "end": "115770"
  },
  {
    "text": "don't like once a week you restart everything once a week and nobody knows that anything happened right but I had a",
    "start": "115770",
    "end": "121830"
  },
  {
    "text": "problem here the compaction function wasn't working you see the fragments coming out the back so it wasn't",
    "start": "121830",
    "end": "127560"
  },
  {
    "text": "defragmenting correctly I had to open it up and yank the fragments out and reset the compact",
    "start": "127560",
    "end": "133080"
  },
  {
    "text": "and I thought it would be funny to take a picture with the actual garbage collection theory book at the time but",
    "start": "133080",
    "end": "138540"
  },
  {
    "text": "the really useful piece of information here is that's the picture from 2004 and",
    "start": "138540",
    "end": "143670"
  },
  {
    "text": "I've been thinking this is funny for that long or more and really lazy I just don't read in my pictures if any of you",
    "start": "143670",
    "end": "150360"
  },
  {
    "text": "how many of you have seen if any my talks before so you've seen this picture right okay I really need a new one but I",
    "start": "150360",
    "end": "158640"
  },
  {
    "text": "look different now anyway I have a long history of building all",
    "start": "158640",
    "end": "165630"
  },
  {
    "text": "kinds of things before a job but before JVMs I built physical machines and",
    "start": "165630",
    "end": "170820"
  },
  {
    "text": "virtual machines and operating systems and and an interesting little hardware for all kinds of weird stuff I helped",
    "start": "170820",
    "end": "176700"
  },
  {
    "text": "design CPU instruction sets and choice kernels and firewalls and network",
    "start": "176700",
    "end": "182310"
  },
  {
    "text": "switches and subscriber management systems for millions of people and built an app server accidentally and did a lot",
    "start": "182310",
    "end": "189990"
  },
  {
    "text": "of weird things that ended up with a lot of mistakes and I learned from some of those mistakes one of my hobbies is",
    "start": "189990",
    "end": "195810"
  },
  {
    "text": "actually to go around depressing people about some of the mistakes I know everybody makes cuz I've made them and",
    "start": "195810",
    "end": "201420"
  },
  {
    "text": "myself you might have seen my latency and response and talks on the subject but in addition to that I'm a member of",
    "start": "201420",
    "end": "208800"
  },
  {
    "text": "the JCP Java community process Executive Committee I represent us all there and by the way",
    "start": "208800",
    "end": "214860"
  },
  {
    "text": "we have an election going on you know it's important to vote today not just for president but also for JCP EC",
    "start": "214860",
    "end": "221400"
  },
  {
    "text": "members you get I mean the election is ongoing right now so if you are a member",
    "start": "221400",
    "end": "227519"
  },
  {
    "text": "of the JCP please vote I I also",
    "start": "227519",
    "end": "233820"
  },
  {
    "text": "participated in obg decay contributed some stuff and you know actually mates did something that makes it into Java 9",
    "start": "233820",
    "end": "240510"
  },
  {
    "text": "which makes me pretty proud so that's me now why am I talking about the Java",
    "start": "240510",
    "end": "245790"
  },
  {
    "text": "State of the Union it's kind of weird for me to do that because I do think the Java State of the Union is something",
    "start": "245790",
    "end": "251580"
  },
  {
    "text": "that you know really the project leads are more equipped to talk about as a whole so think of what I'm gonna do is",
    "start": "251580",
    "end": "257310"
  },
  {
    "text": "Java State of the Union commentary right this is my view from some of the side",
    "start": "257310",
    "end": "262789"
  },
  {
    "text": "you know well involved side on what goes on there we ship a Java as si",
    "start": "262789",
    "end": "268110"
  },
  {
    "text": "platform it's the only thing we do so we care a lot and we track this a lot we think we know what's going on but think",
    "start": "268110",
    "end": "274919"
  },
  {
    "text": "of this as selective comment Ori writer then here's you know this is what's going on we're responsible for it so",
    "start": "274919",
    "end": "282930"
  },
  {
    "start": "282000",
    "end": "291000"
  },
  {
    "text": "with that let's look at a little bit of history rather than just where do we stand today where did we come from how",
    "start": "282930",
    "end": "289860"
  },
  {
    "text": "did we get here what does Java been doing and simple way to look at it is let's look at versions started with",
    "start": "289860",
    "end": "296340"
  },
  {
    "start": "291000",
    "end": "532000"
  },
  {
    "text": "version 100 and we are now in version 1 point 10 if you look technically inside",
    "start": "296340",
    "end": "301530"
  },
  {
    "text": "the JVM we're still in version 1 it's just been number anyone oh and two ones means that those are the actual numbers",
    "start": "301530",
    "end": "307590"
  },
  {
    "text": "in the JDK insight now those numbers have been switched over the years because marketing people don't like this",
    "start": "307590",
    "end": "314250"
  },
  {
    "text": "kind of stuff so around Java 5 it went from 1.5 to 5 at 6 & 7 so when",
    "start": "314250",
    "end": "321210"
  },
  {
    "text": "we talk about Java 9 I'm actually talking about Java 1.9 and not only did this kind of naming thing",
    "start": "321210",
    "end": "327389"
  },
  {
    "text": "happen if you actually look at what the platform was called it started off as",
    "start": "327389",
    "end": "332720"
  },
  {
    "text": "Java one point X 1.0 1.1 1.2 but around",
    "start": "332720",
    "end": "339090"
  },
  {
    "text": "1.2 they decided ok 1.2 is a good basis for Java so they called it the Java to",
    "start": "339090",
    "end": "346979"
  },
  {
    "text": "se platform and started counting from there and then we had 1.3 so J 2 is e",
    "start": "346979",
    "end": "353250"
  },
  {
    "text": "1.3 that's you know that's Pizza Hut making pizza and then j2se 1.4 and by",
    "start": "353250",
    "end": "360870"
  },
  {
    "text": "Java 5 they kind of figure out that contradiction makes no sense so they went with j2se 59.5 and see there's a 2",
    "start": "360870",
    "end": "370110"
  },
  {
    "text": "and a 5 and then finally we dropped the 2 and we're in the Java SE world which is how we name things today so these are",
    "start": "370110",
    "end": "377340"
  },
  {
    "text": "the historical versions going back to what actually went on in those and kind",
    "start": "377340",
    "end": "384630"
  },
  {
    "text": "of zooming in two versions in pine 1.0 was the first thing the Java did after",
    "start": "384630",
    "end": "389970"
  },
  {
    "text": "the alpha and beta it was this thing we thought would be used to build applets and in web browsers mostly nice language",
    "start": "389970",
    "end": "397530"
  },
  {
    "text": "some basic library capability interesting syntax but important things",
    "start": "397530",
    "end": "402750"
  },
  {
    "text": "were added in the first few releases that made it actually robust and useful on servers",
    "start": "402750",
    "end": "407840"
  },
  {
    "text": "reflection is one of the things I was added fairly early on swing which we",
    "start": "407840",
    "end": "414150"
  },
  {
    "text": "still use for some things like drawing on desktops was added around the same time the notion of a collection a",
    "start": "414150",
    "end": "422720"
  },
  {
    "text": "hashmap list a generic way of looking at generic",
    "start": "422720",
    "end": "428940"
  },
  {
    "text": "a way of looking at collections was added in one too and along with that came things like weak references soft",
    "start": "428940",
    "end": "435750"
  },
  {
    "text": "references phantom references all these are fundamental changes to the language",
    "start": "435750",
    "end": "440760"
  },
  {
    "text": "of the platform so every time you see one of these programming once that",
    "start": "440760",
    "end": "445770"
  },
  {
    "text": "happened was different than before you no longer program the same way anybody here still use vectors you know",
    "start": "445770",
    "end": "454320"
  },
  {
    "text": "uppercase vector that was a 1.0 data construct that has been eradicated and defunct and deprecated forever but it's",
    "start": "454320",
    "end": "462300"
  },
  {
    "text": "still there right it predated collections but you know so every time we went through one of these new",
    "start": "462300",
    "end": "468000"
  },
  {
    "text": "features that enable the dramatic new way of using the language and expanded the echo system quite a bit too so these",
    "start": "468000",
    "end": "475020"
  },
  {
    "text": "are big shifts 1.3 was more of an incremental add more libraries thing in 1.4 we had a huge shift in capability",
    "start": "475020",
    "end": "483270"
  },
  {
    "text": "around niño now and i/o these days is not the sexiest thing and people like to",
    "start": "483270",
    "end": "488910"
  },
  {
    "text": "hate it but then there was a fundamental change to Java in that that was the first time that in Java without some",
    "start": "488910",
    "end": "495990"
  },
  {
    "text": "native hacking of some C code we were able to talk to networks with more than",
    "start": "495990",
    "end": "501750"
  },
  {
    "text": "one connection per thread after that point we had a simple blocking API for Java but with 1.49 I know we had amok",
    "start": "501750",
    "end": "510479"
  },
  {
    "text": "sir we had the ability to wait for multiple things to be ready at the same time and act on whatever come ready and",
    "start": "510479",
    "end": "516479"
  },
  {
    "text": "that meant that we could actually build application servers and containers that directly in Java without any",
    "start": "516479",
    "end": "523349"
  },
  {
    "text": "the jvm were able to terminate thousands or hundreds of thousands of connections that was a huge shift because that",
    "start": "523350",
    "end": "528750"
  },
  {
    "text": "enables a sea change at house Java was used in servers rolling forward to Java",
    "start": "528750",
    "end": "535260"
  },
  {
    "start": "532000",
    "end": "639000"
  },
  {
    "text": "five generics a dramatic change to the",
    "start": "535260",
    "end": "541260"
  },
  {
    "text": "actual language and how we write things up to that point we did not have generic capability collections were simply",
    "start": "541260",
    "end": "547530"
  },
  {
    "text": "collections of objects so we're able to describe generics",
    "start": "547530",
    "end": "552630"
  },
  {
    "text": "type them you have the compiler sort of helps us will help us with the times",
    "start": "552630",
    "end": "557810"
  },
  {
    "text": "again things we like to look back in and hate because there are many things we wish interacts within different Nuits",
    "start": "557810",
    "end": "564210"
  },
  {
    "text": "but the kief ability came in there and it's still the same to this day and how it works and and that allowed us to",
    "start": "564210",
    "end": "570540"
  },
  {
    "text": "really leverage the notion of data structures being things we don't build",
    "start": "570540",
    "end": "576000"
  },
  {
    "text": "but things we get from other people good data structure has already come with the JDK or made by other people that know",
    "start": "576000",
    "end": "582840"
  },
  {
    "text": "how to make them and it's pretty rare that you have to build your own data structure you mostly do stuff like put things and data structures one of the",
    "start": "582840",
    "end": "590520"
  },
  {
    "text": "common very useful libraries that came up in Java 5 is the Java util concurrent",
    "start": "590520",
    "end": "596580"
  },
  {
    "text": "library which is made up of a lot of interesting things around concurrency and Atomics and locks and stuff but even",
    "start": "596580",
    "end": "603720"
  },
  {
    "text": "more importantly useful data structures well-written scalable concurrent data",
    "start": "603720",
    "end": "609240"
  },
  {
    "text": "structures that you don't have to build the debug in and make work yourself whether it's queues or or stamped locks",
    "start": "609240",
    "end": "616890"
  },
  {
    "text": "or or concurrent hash maps you don't have to build them they're just there",
    "start": "616890",
    "end": "621930"
  },
  {
    "text": "which if you compare it to other environments the ability to actually just have somebody else like Doug Lee",
    "start": "621930",
    "end": "628800"
  },
  {
    "text": "having written all that for you is great and have it be leverageable that happened a decade before C++ had",
    "start": "628800",
    "end": "636600"
  },
  {
    "text": "similar stability moving forward from Java 5 notice I kind of jumped over Java",
    "start": "636600",
    "end": "644250"
  },
  {
    "start": "639000",
    "end": "755000"
  },
  {
    "text": "6 Java 6 and mostly Java 7 were some incremental releases from a point of",
    "start": "644250",
    "end": "650280"
  },
  {
    "text": "view of how they affect what you when you program there were very there was a a bunch of very important",
    "start": "650280",
    "end": "656140"
  },
  {
    "text": "capabilities and new libraries and XML behaviors and things that were added to the platform but fundamentally the",
    "start": "656140",
    "end": "662110"
  },
  {
    "text": "language itself didn't really evolve or change in Java 7 the biggest changes to",
    "start": "662110",
    "end": "667149"
  },
  {
    "text": "language was that we didn't have to write things inside the brackets and it kind of automatically did it and we had",
    "start": "667149",
    "end": "672490"
  },
  {
    "text": "you know try with resources well yeah but you know not wow I programmed",
    "start": "672490",
    "end": "679240"
  },
  {
    "text": "different now that didn't happen with Java 6 or which other seven and then we get to Java 8",
    "start": "679240",
    "end": "685080"
  },
  {
    "text": "Java he did this you have lambdas we have lambda expressions we have",
    "start": "685080",
    "end": "692070"
  },
  {
    "text": "functional interfaces feels modern it's almost like Lisp right and and we also",
    "start": "692070",
    "end": "699940"
  },
  {
    "text": "had another pretty interesting big capability to came in in the stream API allow us to actually program 2 streams",
    "start": "699940",
    "end": "709209"
  },
  {
    "text": "and collections and ways that is more modern and useful to to model walking",
    "start": "709209",
    "end": "714279"
  },
  {
    "text": "data through them so these are two big capabilities that came in Java 8 that really changed how people program if you",
    "start": "714279",
    "end": "721810"
  },
  {
    "text": "look at it from the point of view of when developers want a new version of Java it's usually driven by one of these",
    "start": "721810",
    "end": "728080"
  },
  {
    "text": "capabilities like Java 6 did not drive strong developer let adoption these are",
    "start": "728080",
    "end": "733209"
  },
  {
    "text": "the Java 7 Java 8 did people want a program in this new stuff which means you push and you make it make sure that",
    "start": "733209",
    "end": "739660"
  },
  {
    "text": "you can actually use it in production so that's kind of where we are today Java 8",
    "start": "739660",
    "end": "745450"
  },
  {
    "text": "is the current thing the adoption of it has been very good it has been led by developers because we want to program to",
    "start": "745450",
    "end": "751450"
  },
  {
    "text": "these new features and we've pushed that way what does it look like going forward",
    "start": "751450",
    "end": "758320"
  },
  {
    "start": "755000",
    "end": "1075000"
  },
  {
    "text": "so Jeff and 9 is around the corner it's right around the corner the corner keeps",
    "start": "758320",
    "end": "763660"
  },
  {
    "text": "getting a little bit further but but it's not that far right and in the",
    "start": "763660",
    "end": "770980"
  },
  {
    "text": "feature set is pretty well known and and a lot of work has been put into it it's",
    "start": "770980",
    "end": "776020"
  },
  {
    "text": "not just the combination work since Java a Java 9 actually has things in it been worked on for two or three releases",
    "start": "776020",
    "end": "782449"
  },
  {
    "text": "and took that long or taking that long but Java nine is a fairly incremental",
    "start": "782449",
    "end": "790369"
  },
  {
    "text": "release from a point of view of language behavior I see it much like Java 7 what",
    "start": "790369",
    "end": "797269"
  },
  {
    "text": "happens to how you program in Java when Java 9 comes out I mean there's really",
    "start": "797269",
    "end": "803239"
  },
  {
    "text": "really cool stuff in there and all kinds of new capabilities and libraries and methods and things and streaming API is",
    "start": "803239",
    "end": "810049"
  },
  {
    "text": "getting better in but fundamentally there isn't something you'd say aha this has just changed everything and how I",
    "start": "810049",
    "end": "815599"
  },
  {
    "text": "write most of the features that we're actually getting excited about and",
    "start": "815599",
    "end": "821269"
  },
  {
    "text": "looking forward to our knowledge of 1/9 are happening in Java 10 and beyond now",
    "start": "821269",
    "end": "826579"
  },
  {
    "text": "yes obviously there's this jigsaw thing everybody knows about Java 9 I jigsaw and modularity and we can talk about",
    "start": "826579",
    "end": "834619"
  },
  {
    "text": "what it does but does it actually change how your program no I mean it doesn't",
    "start": "834619",
    "end": "839629"
  },
  {
    "text": "even change your code it changes the way declare other packages and the way you package your own stuff and it's good and",
    "start": "839629",
    "end": "846019"
  },
  {
    "text": "it's good housekeeping very much good housekeeping for the JDK but it's not fundamentally gonna change how you program the actual changes are probably",
    "start": "846019",
    "end": "853519"
  },
  {
    "text": "going to come in the future like with things like value types value types for",
    "start": "853519",
    "end": "859069"
  },
  {
    "text": "those of you don't know are the ability to take things that are not quite classes but code in like classes things",
    "start": "859069",
    "end": "865399"
  },
  {
    "text": "like XY z-- for points or small structures it's a struct like behavior",
    "start": "865399",
    "end": "870439"
  },
  {
    "text": "and ability to pass and move around tuples return tuples pass tuples without",
    "start": "870439",
    "end": "876470"
  },
  {
    "text": "the cost are full object overheads and arrays of them and such so really useful",
    "start": "876470",
    "end": "881689"
  },
  {
    "text": "capability we've been waiting this for this for a long time and it's looking good in development this is a real thing",
    "start": "881689",
    "end": "887329"
  },
  {
    "text": "that is really being built just not for Java 9 then we have things like arrays 2.0 arrays - that always a catch phrase",
    "start": "887329",
    "end": "894199"
  },
  {
    "text": "for all the things we want a race to do different than they do today but to give you a feel for what it means it's",
    "start": "894199",
    "end": "900139"
  },
  {
    "text": "everything from finally having a race that have more than incest indices because it is 2016 or 2018 by the time",
    "start": "900139",
    "end": "908119"
  },
  {
    "text": "it'll happen to the ability to have a raise of things that are not just primitives or references to the ability",
    "start": "908119",
    "end": "915169"
  },
  {
    "text": "of having a race that might be sparse might vary in length might have all kinds of interesting behaviors like coms",
    "start": "915169",
    "end": "922220"
  },
  {
    "text": "versus rose rose versus columns and layout all this there's a bag of all the things we want to see and if you",
    "start": "922220",
    "end": "928579"
  },
  {
    "text": "actually are interested in some of the detail there's a great online recording of John Rose talking about a race to go",
    "start": "928579",
    "end": "934579"
  },
  {
    "text": "at the Java language summit from I think three years ago I encourage you to look",
    "start": "934579",
    "end": "940129"
  },
  {
    "text": "it up and see what what that is oh I got ahead of myself with the race to go there so that a race to that L will come",
    "start": "940129",
    "end": "948249"
  },
  {
    "text": "we also have interesting work on what's called J&R FFI letters and letters this",
    "start": "948249",
    "end": "957019"
  },
  {
    "text": "is a foreign function interface which is fundamentally the ability to go and talk to native code without having to write",
    "start": "957019",
    "end": "964699"
  },
  {
    "text": "all the J nice stuff to do it think of it as here's an h-file for c stuff i",
    "start": "964699",
    "end": "971419"
  },
  {
    "text": "want to call that function and that function might have a struct that it takes as a parameter i want to be able",
    "start": "971419",
    "end": "976789"
  },
  {
    "text": "to talk about that struct as well and if i as it's gonna allow us hopefully to",
    "start": "976789",
    "end": "983059"
  },
  {
    "text": "make those kind of calls much more easily to kind of discover and include non Java interfaces and be able to",
    "start": "983059",
    "end": "989389"
  },
  {
    "text": "translate for Java to them without having to do a lot of the mechanics and code and stuff there's some very",
    "start": "989389",
    "end": "997069"
  },
  {
    "text": "promising work going on for that as well in addition to that we probably will see",
    "start": "997069",
    "end": "1002619"
  },
  {
    "text": "some changes to the language itself for example there's some interesting debate and talk going on about adding the",
    "start": "1002619",
    "end": "1008949"
  },
  {
    "text": "concept of vowels and bars to declarative to declaring you know variables in Java some people think this",
    "start": "1008949",
    "end": "1018129"
  },
  {
    "text": "is great some people think this is going to ruin the language I'm sort of on the fence but this is certainly in our",
    "start": "1018129",
    "end": "1024220"
  },
  {
    "text": "future for discussion and then a lot of we don't know yet that goes on and on beyond them so that's why we are from a",
    "start": "1024220",
    "end": "1031808"
  },
  {
    "text": "timeline perspective as a highlight I depict and and pick and choose a few things to focus on they mostly look at this as",
    "start": "1031809",
    "end": "1038959"
  },
  {
    "text": "things that affect how you program notice that adding a new XML parsing library or the fact that we don't yet",
    "start": "1038960",
    "end": "1045620"
  },
  {
    "text": "have a JSON parsing library in Java I'm not talking about there there's or you know you add them to the platform you",
    "start": "1045620",
    "end": "1051380"
  },
  {
    "text": "standardize them or you get them on maven from 17 other implementations the ecosystem we have is huge",
    "start": "1051380",
    "end": "1057110"
  },
  {
    "text": "what's pectin standard or not is not that much a concern but is the language as a platform actually evolving to",
    "start": "1057110",
    "end": "1063620"
  },
  {
    "text": "enable new things is what I focus on here now switching from looking at the",
    "start": "1063620",
    "end": "1069410"
  },
  {
    "text": "timeline usually when you want to think about the State of the Union you want to know how the Union is doing so how is",
    "start": "1069410",
    "end": "1075500"
  },
  {
    "text": "Java doing and and often when people ask that question these days they ask these",
    "start": "1075500",
    "end": "1081560"
  },
  {
    "start": "1080000",
    "end": "1167000"
  },
  {
    "text": "kind of questions as Java is still popular are there more cool things out",
    "start": "1081560",
    "end": "1087260"
  },
  {
    "text": "there that are displacing Java is it trending away is this COBOL and I like",
    "start": "1087260",
    "end": "1096170"
  },
  {
    "text": "to say Java is COBOL but it's COBOL in the 1960s it's the coolest thing to",
    "start": "1096170",
    "end": "1101900"
  },
  {
    "text": "program in still well are the most safe thing to programming now these are all",
    "start": "1101900",
    "end": "1107210"
  },
  {
    "text": "valid questions and they occur and they have occurred since Java started I've heard these questions come and go since",
    "start": "1107210",
    "end": "1112880"
  },
  {
    "text": "about 2000 you know there's this really cool new thing now that will displace",
    "start": "1112880",
    "end": "1118460"
  },
  {
    "text": "Java and people are writing in it's called Perl and PHP in the lamp stack",
    "start": "1118460",
    "end": "1123920"
  },
  {
    "text": "that's the sticking over the world to make Ruby and rails oh boy we build",
    "start": "1123920",
    "end": "1129200"
  },
  {
    "text": "everything in that there's just we build Twitter in that right and then there's",
    "start": "1129200",
    "end": "1135320"
  },
  {
    "text": "the next new thing of JavaScript and Python and go and these are very cool things that's what people program a lot",
    "start": "1135320",
    "end": "1141290"
  },
  {
    "text": "of cool things and today but when every one of these has come and gone they've come and gone and replaced each other so",
    "start": "1141290",
    "end": "1147500"
  },
  {
    "text": "far we haven't yet in my opinion seen the thing that is displacing Java we",
    "start": "1147500",
    "end": "1153920"
  },
  {
    "text": "will see it some day it will come when we see it will recognize it three years",
    "start": "1153920",
    "end": "1158960"
  },
  {
    "text": "after the fact when Java has actually started to wane and this other thing is taking over all of its functionality but",
    "start": "1158960",
    "end": "1164900"
  },
  {
    "text": "I don't believe it's happened yet now if you look at some examples of actual data these are current data -",
    "start": "1164900",
    "end": "1171390"
  },
  {
    "text": "2016 this is a language popularity and github chart and yes javascript is the",
    "start": "1171390",
    "end": "1179370"
  },
  {
    "text": "most popular language on github what's the number two language it's Java and what's the one with the high scoring",
    "start": "1179370",
    "end": "1186240"
  },
  {
    "text": "growing trend and a placement it's Java that's actually surprising given what we",
    "start": "1186240",
    "end": "1193440"
  },
  {
    "text": "hear about the other things right if you look at jobs job availability jobs that",
    "start": "1193440",
    "end": "1199650"
  },
  {
    "text": "contain requirements Java is pretty far up there I'm not sure what sequel is",
    "start": "1199650",
    "end": "1205020"
  },
  {
    "text": "doing there quite this that's a website I just looked at right but Java is a",
    "start": "1205020",
    "end": "1212010"
  },
  {
    "text": "very popular language and it's being hired for lots of people know it whether you believe we have eight or nine or ten",
    "start": "1212010",
    "end": "1217950"
  },
  {
    "text": "million developers running Java today it's the it's the easiest language to hire for if you want to build something",
    "start": "1217950",
    "end": "1224160"
  },
  {
    "text": "and you want to make sure you can find developers there's a lot of them not all of them are good just like any other",
    "start": "1224160",
    "end": "1229170"
  },
  {
    "text": "language but within that population there's a lot of really good developers and you could hire them it's one of the",
    "start": "1229170",
    "end": "1235020"
  },
  {
    "text": "safest place to go hire now you know if we go back to these really cool things",
    "start": "1235020",
    "end": "1240030"
  },
  {
    "text": "that keep displacing each other as anybody here tried to hire a ruby developer originally what about a perl",
    "start": "1240030",
    "end": "1246690"
  },
  {
    "text": "developer now there are people who know those things but they want to program and go today they want to program in",
    "start": "1246690",
    "end": "1252809"
  },
  {
    "text": "JavaScript they want to program in Python usually there's a trend away from trends that goes on and the thing that",
    "start": "1252809",
    "end": "1259440"
  },
  {
    "text": "Java has in it I believe is the true strength and a big differentiator is",
    "start": "1259440",
    "end": "1265470"
  },
  {
    "text": "that it's got this 20 years solid history of code that works code you can hire developers to work on you can go",
    "start": "1265470",
    "end": "1272910"
  },
  {
    "text": "back to 60 year old code and work on it and find people that you can hire today that will be able to work on that code",
    "start": "1272910",
    "end": "1278010"
  },
  {
    "text": "that's a huge huge ability another simple metric this comes I think from",
    "start": "1278010",
    "end": "1287900"
  },
  {
    "start": "1281000",
    "end": "1302000"
  },
  {
    "text": "New Relic but it's basically the number of job titles can contain that language in them",
    "start": "1287900",
    "end": "1296400"
  },
  {
    "text": "and it's Java is huge in the difference there but let's look at it a different",
    "start": "1296400",
    "end": "1303039"
  },
  {
    "start": "1302000",
    "end": "1349000"
  },
  {
    "text": "way I like to kind of take a look at the 20 year history we have behind us I have",
    "start": "1303039",
    "end": "1308650"
  },
  {
    "text": "been playing with Java since it was in alpha since it was this cool little",
    "start": "1308650",
    "end": "1313690"
  },
  {
    "text": "thing running inside a web browser mostly and in to me the big WOW point",
    "start": "1313690",
    "end": "1319330"
  },
  {
    "text": "was when Netscape went on a stage at a Sun developer conference and said we are putting Java in the browser that was a",
    "start": "1319330",
    "end": "1326820"
  },
  {
    "text": "that little cool toy I've been playing with that might actually become something that's popular and that was",
    "start": "1326820",
    "end": "1332230"
  },
  {
    "text": "1995 the next year there was no Sun developer conference there was Java one",
    "start": "1332230",
    "end": "1338470"
  },
  {
    "text": "and it had 4,000 people in it which was twice as much as the Sun developer conferences ever had and that was a year",
    "start": "1338470",
    "end": "1345340"
  },
  {
    "text": "after this and it's grown ever since if you look at how Java took over the world",
    "start": "1345340",
    "end": "1351850"
  },
  {
    "start": "1349000",
    "end": "1447000"
  },
  {
    "text": "and what the phases of that happened we really had these three phases in my opinion we went from introduction in 95",
    "start": "1351850",
    "end": "1359500"
  },
  {
    "text": "to completely taken over the world of servers by 2001 it took less than five",
    "start": "1359500",
    "end": "1365380"
  },
  {
    "text": "years to actually get there which is why I think that the thing that's the",
    "start": "1365380",
    "end": "1370450"
  },
  {
    "text": "slicing Java is not yet here we would have seen some indication and when I say",
    "start": "1370450",
    "end": "1376720"
  },
  {
    "text": "displace things in 1995-1996 the way to build applications for servers were it",
    "start": "1376720",
    "end": "1383320"
  },
  {
    "text": "was a C++ it might have been in thick Sedo it might have been write directly with sequel to databases and very",
    "start": "1383320",
    "end": "1390730"
  },
  {
    "text": "quickly Java this thing that was coming from clients and just had a few capabilities started taking over the",
    "start": "1390730",
    "end": "1396669"
  },
  {
    "text": "world with all kinds of things like servlets and JDBC connections for such we didn't have an era of applications",
    "start": "1396669",
    "end": "1404020"
  },
  {
    "text": "where applications were built in Java not in other things if you wanted to build a new HR application you didn't go",
    "start": "1404020",
    "end": "1410860"
  },
  {
    "text": "hire people to build an ANSI class +1 pythons or in Perl you would go and hire",
    "start": "1410860",
    "end": "1417880"
  },
  {
    "text": "people that world and Java and ran on one of these platforms you can eat and a lot of applications whether there",
    "start": "1417880",
    "end": "1424680"
  },
  {
    "text": "were business applications or web applications or built that way over about a decade but those was",
    "start": "1424680",
    "end": "1430140"
  },
  {
    "text": "applications that was what people build for their needs their function whether it was a huge web application or not and",
    "start": "1430140",
    "end": "1436080"
  },
  {
    "text": "in this decade we have a really interesting shift for Java Java is being used to build infrastructure pieces of",
    "start": "1436080",
    "end": "1443550"
  },
  {
    "text": "infrastructure that are fundamental to everything we run now if we look at what",
    "start": "1443550",
    "end": "1448590"
  },
  {
    "start": "1447000",
    "end": "1561000"
  },
  {
    "text": "I mean by those JB JDBC poles were a really interesting invention and",
    "start": "1448590",
    "end": "1454890"
  },
  {
    "text": "capability that started early on in Java the fact you could talk to databases with a connection it was a pool of",
    "start": "1454890",
    "end": "1460500"
  },
  {
    "text": "connections that managed it for you and you didn't have to basically start a process for every request you got from",
    "start": "1460500",
    "end": "1466590"
  },
  {
    "text": "the web the notion of servlets do you guys remember what we had before",
    "start": "1466590",
    "end": "1472650"
  },
  {
    "text": "servlets if you've got an HTTP request you forked a new process you have cgi",
    "start": "1472650",
    "end": "1481520"
  },
  {
    "text": "servlets made that the same process just handles things locally and can able to talk to different connections let them",
    "start": "1481520",
    "end": "1487500"
  },
  {
    "text": "go and the whole concept putting this together was the basis for what we think of as an app server or a container today",
    "start": "1487500",
    "end": "1493890"
  },
  {
    "text": "Java EE sort of evolved from that as a set of specs and standards when it was still thin and not kind of thick and",
    "start": "1493890",
    "end": "1500600"
  },
  {
    "text": "aging like we feel about it today and that led to things like web logic and WebSphere in jboss and Tomcat which we",
    "start": "1500600",
    "end": "1507930"
  },
  {
    "text": "build applications in rather than build when I said I accidentally built an application server that's because I used",
    "start": "1507930",
    "end": "1513630"
  },
  {
    "text": "Java 1/2 in 1998 to build an application there were no application servers I was",
    "start": "1513630",
    "end": "1519030"
  },
  {
    "text": "lucky there was a JDBC connection I could use so we had to build the application server but by 2001 you",
    "start": "1519030",
    "end": "1525360"
  },
  {
    "text": "didn't need to do that anymore you could buy one you didn't have to build that",
    "start": "1525360",
    "end": "1530460"
  },
  {
    "text": "infrastructure you just build your business logic and that was great we",
    "start": "1530460",
    "end": "1535500"
  },
  {
    "text": "evolved into things like portals and web services and so on data grids and all",
    "start": "1535500",
    "end": "1540720"
  },
  {
    "text": "kinds of things that really sounded sexy at the time and look old now and there were lots and lots of technologies in",
    "start": "1540720",
    "end": "1546690"
  },
  {
    "text": "there but really applications were dominated by this and that meant that if you built an application in Java you",
    "start": "1546690",
    "end": "1552480"
  },
  {
    "text": "just got there quicker and it was because the ecosystem was huge now",
    "start": "1552480",
    "end": "1558660"
  },
  {
    "text": "shifting into this decade we have things like Hadoop and Cassandra and variations",
    "start": "1558660",
    "end": "1565680"
  },
  {
    "text": "of Lusine and distributed systems like solar and elastic in Kafka and SPARC and",
    "start": "1565680",
    "end": "1571890"
  },
  {
    "text": "storm and zookeeper and many others what's common to all of these they're",
    "start": "1571890",
    "end": "1579210"
  },
  {
    "text": "built in Java they run on JVM even though you don't program them in Java",
    "start": "1579210",
    "end": "1584370"
  },
  {
    "text": "necessarily most of them are just pieces of infrastructure that serve some functionality it just happens that",
    "start": "1584370",
    "end": "1591450"
  },
  {
    "text": "building him in Java was the way to get there to scale to dominate the market the way it is so infrastructure pieces",
    "start": "1591450",
    "end": "1598680"
  },
  {
    "text": "today the largest data bases in the world this decade are in Java which to",
    "start": "1598680",
    "end": "1604890"
  },
  {
    "text": "me is a huge thing because I remember in 2005 looking around saying dammit why don't and do all the data bases are not",
    "start": "1604890",
    "end": "1610770"
  },
  {
    "text": "Java we only have applications so this is where we are today Java dominates infrastructure it's still",
    "start": "1610770",
    "end": "1617820"
  },
  {
    "text": "very much a back-end application building environment and yes there are many many new cool things that keep",
    "start": "1617820",
    "end": "1623550"
  },
  {
    "text": "evolving and replacing each other to how you build the front ends and how you can do things together and you know whether",
    "start": "1623550",
    "end": "1629850"
  },
  {
    "text": "we call the new things micro services or other types of services or all the way to RPC we reinvent the pool new way to",
    "start": "1629850",
    "end": "1636870"
  },
  {
    "text": "do stuff in Joe attends to fit into those but there are write better ways and lighter ways to do things for the",
    "start": "1636870",
    "end": "1642810"
  },
  {
    "text": "right things overall commentary in the State of the Union is it's good it's not going away",
    "start": "1642810",
    "end": "1650490"
  },
  {
    "start": "1644000",
    "end": "1675000"
  },
  {
    "text": "Java is in a really good shape it has fairly good stewardship it keeps getting",
    "start": "1650490",
    "end": "1655620"
  },
  {
    "text": "new features developed that are relevant and it is maintaining it's very powerful ability to actually run software over",
    "start": "1655620",
    "end": "1662670"
  },
  {
    "text": "five years ten years and still have relevance and the ability to develop it and maintain it so that's our look at",
    "start": "1662670",
    "end": "1672690"
  },
  {
    "text": "the state the history and where we are but whenever I talk about one of these",
    "start": "1672690",
    "end": "1677880"
  },
  {
    "start": "1675000",
    "end": "1701000"
  },
  {
    "text": "subjects everybody wants to talk about the now and what's so this cool thing is Java 9 what's in",
    "start": "1677880",
    "end": "1683340"
  },
  {
    "text": "it so what's in Java 9 welders modules modules are in Java 9 it's gonna be modular but since everybody talks about",
    "start": "1683340",
    "end": "1690779"
  },
  {
    "text": "that I won't talk about that it's got modules and some other stuff and and and I'm gonna talk about some of",
    "start": "1690779",
    "end": "1697409"
  },
  {
    "text": "that other stuff here in the rest of the time we have so here's the list of everything in Java night that's actually",
    "start": "1697409",
    "end": "1705389"
  },
  {
    "start": "1701000",
    "end": "1733000"
  },
  {
    "text": "from the Java 9 project that describes all the different jep's on open JDK that are going into the platform currently",
    "start": "1705389",
    "end": "1712039"
  },
  {
    "text": "that's a long list and I'm not gonna get into all of them so I hand-picked they had a few of them to sort of zoom into a",
    "start": "1712039",
    "end": "1718830"
  },
  {
    "text": "little and talk about and those samplings are just interesting selective ones I've picked so these are kind of",
    "start": "1718830",
    "end": "1725639"
  },
  {
    "text": "the for the J shell of our handles unified logging and spin whiteheads that's what I'm gonna cover here let's",
    "start": "1725639",
    "end": "1733559"
  },
  {
    "start": "1733000",
    "end": "1798000"
  },
  {
    "text": "look at the first one J shell Java has a",
    "start": "1733559",
    "end": "1738869"
  },
  {
    "text": "ripple a repple stands for read eval print loop this is a huge invention very",
    "start": "1738869",
    "end": "1746009"
  },
  {
    "text": "current in 2016 it's very important because practically every modern",
    "start": "1746009",
    "end": "1751710"
  },
  {
    "text": "environment we program in has a rep also Java really needs one too and modern starts with Lisp now the reality is when",
    "start": "1751710",
    "end": "1762389"
  },
  {
    "text": "you touch this repple your immediate reaction is how the hell did we not have this for the last 15 or 20 years you",
    "start": "1762389",
    "end": "1769889"
  },
  {
    "text": "know everything else has it it's how people play in a valued and poke at the language of the libraries why didn't we",
    "start": "1769889",
    "end": "1776009"
  },
  {
    "text": "have it and there's no good explanation for why that I mean really there's no good explanation it's it's one of these obvious simple things but this is a",
    "start": "1776009",
    "end": "1783330"
  },
  {
    "text": "great feature of Java 9 the platform doesn't change our your program but certainly makes you be able to poke",
    "start": "1783330",
    "end": "1788879"
  },
  {
    "text": "things interactively much nicer so you now have a direct link to talk Java to a",
    "start": "1788879",
    "end": "1794429"
  },
  {
    "text": "machine and look at what the code hasn't it in and play with it that's it Java",
    "start": "1794429",
    "end": "1802979"
  },
  {
    "start": "1798000",
    "end": "1856000"
  },
  {
    "text": "has a ripple like that's it you could you could look at a lot of details go look at online they're full talks and examples on how to use it but it is one",
    "start": "1802979",
    "end": "1809759"
  },
  {
    "text": "of the coolest actual you ability features in Gemini the next one is var handles now var handles are",
    "start": "1809759",
    "end": "1817760"
  },
  {
    "text": "actually these technically fairly complicated to code to and not necessarily the prettiest things out",
    "start": "1817760",
    "end": "1823550"
  },
  {
    "text": "there but they do add capabilities fundamental capabilities to the language that let us do things that we had to",
    "start": "1823550",
    "end": "1830930"
  },
  {
    "text": "kind of do hackish things around before and this is the actual purpose of what if our handles are for it to let us do",
    "start": "1830930",
    "end": "1837140"
  },
  {
    "text": "things that we might no need to actually use Atomics to do even though we don't",
    "start": "1837140",
    "end": "1842330"
  },
  {
    "text": "need the atomic functionality or we need to do unsafe things to do which is even",
    "start": "1842330",
    "end": "1847880"
  },
  {
    "text": "worse if our handles are really there to help us get rid of our habit of using",
    "start": "1847880",
    "end": "1853730"
  },
  {
    "text": "unsafe to bypass the java spec who here has used some misc unsafe you're aware",
    "start": "1853730",
    "end": "1862610"
  },
  {
    "text": "that that's not Java right it starts with Sun misc it is not in the spec",
    "start": "1862610",
    "end": "1868280"
  },
  {
    "text": "nobody's ever promised that the next version or even dot release of Java will actually have that method in it but",
    "start": "1868280",
    "end": "1875060"
  },
  {
    "text": "we've all learned and end up being so kind to that functionality for",
    "start": "1875060",
    "end": "1880460"
  },
  {
    "text": "fundamental things in it there are tens of open-source libraries that would not work if it didn't exist that it's a",
    "start": "1880460",
    "end": "1886550"
  },
  {
    "text": "fundamental part of any practical java implementation today that is not a good thing because unsafe right there tells",
    "start": "1886550",
    "end": "1893180"
  },
  {
    "text": "you something you know it was labeled correctly damn it now it's I mean what",
    "start": "1893180",
    "end": "1900380"
  },
  {
    "text": "what more than this can you say that don't use this stay away you know it's not safe right but it has functionality",
    "start": "1900380",
    "end": "1907400"
  },
  {
    "text": "people want or need now I like to break down unsafe into modes and those modes",
    "start": "1907400",
    "end": "1913820"
  },
  {
    "start": "1912000",
    "end": "1995000"
  },
  {
    "text": "are so that the runsvold isms of unsafe right there's a there's a safe way to",
    "start": "1913820",
    "end": "1919880"
  },
  {
    "text": "use unsafe then there's an unsafe way to use unsafe and unfortunately the fact",
    "start": "1919880",
    "end": "1925100"
  },
  {
    "text": "that there are unsafe ways to use unsafe makes the uses of safe sometimes unsafe and then we have to question whether",
    "start": "1925100",
    "end": "1932750"
  },
  {
    "text": "safe is actually safe anything you touch one thing with unsafe you put everything",
    "start": "1932750",
    "end": "1938870"
  },
  {
    "text": "in question we actually don't know what you have all verification now window all security is on the window but",
    "start": "1938870",
    "end": "1945250"
  },
  {
    "text": "more importantly bugs that couldn't exist without this are introduced this is not fundamentally about security or",
    "start": "1945250",
    "end": "1951160"
  },
  {
    "text": "safety it's about the fact that fundamental things like actual integrity",
    "start": "1951160",
    "end": "1956950"
  },
  {
    "text": "of the heap and non corruption that the GVM actually promises and maintains very well go away when you start using these",
    "start": "1956950",
    "end": "1962800"
  },
  {
    "text": "ideas so far handles actually are meant to a large degree to take the things",
    "start": "1962800",
    "end": "1968530"
  },
  {
    "text": "people are using and unsafe and give them a proper java way to achieve the same purpose so they don't have to use",
    "start": "1968530",
    "end": "1974680"
  },
  {
    "text": "this API and the proper Java way will be in the spec and you can rely on it being in future versions so you can convert",
    "start": "1974680",
    "end": "1981160"
  },
  {
    "text": "your unsafe code to use that so the purpose is to take unsafe away from you now some of you might have noticed in",
    "start": "1981160",
    "end": "1987970"
  },
  {
    "text": "the last year in some there is some pretty loud discussion about unsafe",
    "start": "1987970",
    "end": "1993340"
  },
  {
    "text": "going away in Java 9 and and you know is it going away in Java 9 no I actually",
    "start": "1993340",
    "end": "2000720"
  },
  {
    "start": "1995000",
    "end": "2066000"
  },
  {
    "text": "think it was a great way to get people scared I think there's I think it was planned I think they never meant to",
    "start": "2000720",
    "end": "2007080"
  },
  {
    "text": "really take it away they just threatened to take it away and then everybody told them about all those things you deal",
    "start": "2007080",
    "end": "2012780"
  },
  {
    "text": "with this you can't take it away now we have a catalogue of how people use things we can make sure we have the right functionality so four or five",
    "start": "2012780",
    "end": "2018810"
  },
  {
    "text": "years so now we can take it away and that is a good purpose unsafe should not have been there to start with the fact",
    "start": "2018810",
    "end": "2024990"
  },
  {
    "text": "people use it as bad we do want to eradicate it but it's not going to get it Radek ated in java night what it does",
    "start": "2024990",
    "end": "2031950"
  },
  {
    "text": "mean is if you today are using unsafe one of the things you should look at is how to get rid of all uses of unsafe by",
    "start": "2031950",
    "end": "2039930"
  },
  {
    "text": "using new features in java 9 and if there's something missing complain",
    "start": "2039930",
    "end": "2045260"
  },
  {
    "text": "be loud about it make sure that we add whatever it is needed in Java 10 or",
    "start": "2045260",
    "end": "2050760"
  },
  {
    "text": "maybe in 91 or 92 or something so that over time we will not need this API and",
    "start": "2050760",
    "end": "2057149"
  },
  {
    "text": "I do think this is very very doable and very achievable and it's a noble goal for maintaining integrity in Java now",
    "start": "2057150",
    "end": "2065070"
  },
  {
    "text": "there's some other cool things in var handles one of them not just about getting rid of unsafe car handles also",
    "start": "2065070",
    "end": "2070679"
  },
  {
    "start": "2066000",
    "end": "2133000"
  },
  {
    "text": "finally have a fence API we can actually talk about wanting to fence things and order things what",
    "start": "2070680",
    "end": "2076269"
  },
  {
    "text": "happening to do a vault alley door meltdown right or a lock or something like that so you can actually say I want",
    "start": "2076269",
    "end": "2082089"
  },
  {
    "text": "to fence things so that all those are not going to be reordered in the future and things like that those are very",
    "start": "2082089",
    "end": "2088059"
  },
  {
    "text": "useful for concurrent algorithms and to do those cheapest fence you need and one very important fence that I'm",
    "start": "2088059",
    "end": "2094358"
  },
  {
    "text": "highlighting here is their ability to add what's called a reachability fence that says this thing is actually still",
    "start": "2094359",
    "end": "2100150"
  },
  {
    "text": "reachable and still alive until I say otherwise the typical use will be in a try-catch like this or sorry try finally",
    "start": "2100150",
    "end": "2106479"
  },
  {
    "text": "block the purpose of this is to make sure that that object does not die",
    "start": "2106479",
    "end": "2111910"
  },
  {
    "text": "prematurely and cause interesting weird things to happen like freeing buffers",
    "start": "2111910",
    "end": "2117309"
  },
  {
    "text": "and then having access to free buffers after the fact and things there's several fundamental places",
    "start": "2117309",
    "end": "2122799"
  },
  {
    "text": "you'll find bugs around this either and commonly written java code or even than the jdk itself that this will help us",
    "start": "2122799",
    "end": "2128380"
  },
  {
    "text": "solve so that's var handles and there's a lot of stuff you can find about var handles",
    "start": "2128380",
    "end": "2134160"
  },
  {
    "start": "2133000",
    "end": "2196000"
  },
  {
    "text": "the next one I want to zoom in to is logging now here is a few of the flags",
    "start": "2134160",
    "end": "2139930"
  },
  {
    "text": "that you could do to control various types of logging in the JVM today and a first thing none of these have any",
    "start": "2139930",
    "end": "2145479"
  },
  {
    "text": "standards to them if you've ever tried to read a GC long you probably understand how complicated or weird that",
    "start": "2145479",
    "end": "2151930"
  },
  {
    "text": "is and how it changes between versions and by collector and how it might actually be corrupted but they're all",
    "start": "2151930",
    "end": "2157390"
  },
  {
    "text": "these other things that get logged then they all get logged with independent slowly evolving kind of things in Java 9",
    "start": "2157390",
    "end": "2163710"
  },
  {
    "text": "we have a common logging mechanism and a common logging regime and it's",
    "start": "2163710",
    "end": "2170410"
  },
  {
    "text": "controlled by - X log flag and it is specs and behavior and if you want to",
    "start": "2170410",
    "end": "2177099"
  },
  {
    "text": "look at the details and the examples of what that means and how you can filter on it and what the proper way for the",
    "start": "2177099",
    "end": "2182109"
  },
  {
    "text": "formats to look like it all does you can find a lot of that in this talk that I refer to here this is one of the",
    "start": "2182109",
    "end": "2188349"
  },
  {
    "text": "important features I believe of Java 9 again not so much affecting your programming style but really affecting",
    "start": "2188349",
    "end": "2194440"
  },
  {
    "text": "operations quite a bit now the last feature I want to zoom into is my",
    "start": "2194440",
    "end": "2201339"
  },
  {
    "start": "2196000",
    "end": "2249000"
  },
  {
    "text": "favorite feature it's called spin weight hints and why is",
    "start": "2201339",
    "end": "2207859"
  },
  {
    "text": "it my favorite is because I built it and in spin what hints is is an interesting",
    "start": "2207859",
    "end": "2215329"
  },
  {
    "text": "thing both in functionality and an exercise of getting something into the code so what does it do spin right hint",
    "start": "2215329",
    "end": "2221960"
  },
  {
    "text": "basically adds a single method to the GDK on the thread class and it's on spin",
    "start": "2221960",
    "end": "2229040"
  },
  {
    "text": "weight and that method that's absolutely nothing",
    "start": "2229040",
    "end": "2234460"
  },
  {
    "text": "it really does nothing there is no semantic meaning to the method whatsoever has no effect on state it",
    "start": "2234460",
    "end": "2240589"
  },
  {
    "text": "does absolutely nothing but it does that nothing very fast its purpose is to do",
    "start": "2240589",
    "end": "2246170"
  },
  {
    "text": "nothing quickly now why is that important we have this common pattern",
    "start": "2246170",
    "end": "2251390"
  },
  {
    "text": "that happens in various communication things written in Java whether there are",
    "start": "2251390",
    "end": "2258290"
  },
  {
    "text": "high performance or low latency or bypassers or whether it's variations of disrupters or other spinners where you",
    "start": "2258290",
    "end": "2265849"
  },
  {
    "text": "end up wanting to wait for something and not give up the cpu either indefinitely literally sit there spinning on a CP",
    "start": "2265849",
    "end": "2272390"
  },
  {
    "text": "until something arrives or temporarily for example you want to grab a lock but",
    "start": "2272390",
    "end": "2278780"
  },
  {
    "text": "somebody else is owning it you can go block in the OS but youyou ristic say let's spin a little while maybe it'll",
    "start": "2278780",
    "end": "2285500"
  },
  {
    "text": "get freed before I go block that spin well would look like this and it turns",
    "start": "2285500",
    "end": "2291530"
  },
  {
    "text": "out that that's a common pattern within the concurrency utility in the JDK it's a common pattern a lot of interesting",
    "start": "2291530",
    "end": "2296839"
  },
  {
    "text": "software people built on top of Java and the way to use on spin weight is simply",
    "start": "2296839",
    "end": "2303349"
  },
  {
    "text": "to put that method call inside your spin loop it does nothing except to tell the",
    "start": "2303349",
    "end": "2308390"
  },
  {
    "text": "JVM you're in a spin loop and the JVM can actually use that to do things",
    "start": "2308390",
    "end": "2313579"
  },
  {
    "text": "better hardware usually has capability x86 has capability for example to spin",
    "start": "2313579",
    "end": "2319430"
  },
  {
    "text": "better to spin faster with less power but more probably to react faster and this is a chart comparing the reaction",
    "start": "2319430",
    "end": "2326660"
  },
  {
    "start": "2324000",
    "end": "2471000"
  },
  {
    "text": "time to setting a variable on a spin wait when you have that in it or not the blue line is the reaction time when the",
    "start": "2326660",
    "end": "2334280"
  },
  {
    "text": "spin weight in is in the red line is the current reaction time without it so across a wide spectrum and percentiles we get an",
    "start": "2334280",
    "end": "2340900"
  },
  {
    "text": "improvement in reaction time over the loop that's the purpose of this thing so that's why we put it in a lot of people",
    "start": "2340900",
    "end": "2347420"
  },
  {
    "text": "have been asking for it for a while now the reason I actually went through this is not just because I wanted a",
    "start": "2347420",
    "end": "2352880"
  },
  {
    "text": "functionality because we have you know low latency customers that want it but also I wanted to go through the exercise",
    "start": "2352880",
    "end": "2358190"
  },
  {
    "text": "of putting a feature into Java 9 that did not originate with Oracle and did not get developed by Oracle to do the",
    "start": "2358190",
    "end": "2364850"
  },
  {
    "text": "actual community development thing let's see what it takes to do it the right way so we built the prototype then we had a",
    "start": "2364850",
    "end": "2373310"
  },
  {
    "text": "discussion and we open a gem in open JDK and documented it and then had proposed",
    "start": "2373310",
    "end": "2378770"
  },
  {
    "text": "code and had reviews on it and discussions and eventually it made it into Java 9 which I'm really proud of",
    "start": "2378770",
    "end": "2385420"
  },
  {
    "text": "but the cool thing about this is it was an opportunity to measure how long it takes to do the minimal possible thing",
    "start": "2385420",
    "end": "2392210"
  },
  {
    "text": "that you're going to adjudicate this is one method that does nothing you can't do less than this this took about eight",
    "start": "2392210",
    "end": "2401030"
  },
  {
    "text": "and a half months forth which was arguing without the name of the method",
    "start": "2401030",
    "end": "2407560"
  },
  {
    "text": "you can go look at the open to decay mailing list for the history of that and it's a really interesting thing to",
    "start": "2407560",
    "end": "2413030"
  },
  {
    "text": "realize there's a huge difference between complaining and saying you want something and actually doing it there's",
    "start": "2413030",
    "end": "2418310"
  },
  {
    "text": "real cost to this there's real work involved next time you talk about all those things those JDK people don't put",
    "start": "2418310",
    "end": "2424250"
  },
  {
    "text": "in remember that it is a lot of work to get it right to put it in thinking about the next 10 or 20 years of needing to",
    "start": "2424250",
    "end": "2430790"
  },
  {
    "text": "maintain it and not wanting to deprecated it in the future and and letting all that you know is this the",
    "start": "2430790",
    "end": "2437600"
  },
  {
    "text": "right name is that the right functionality is a future proof happen because it needs to happen it's not just",
    "start": "2437600",
    "end": "2443690"
  },
  {
    "text": "always a cool feature why don't they put it in we need that kind of thing I'm hoping that this is not the cost per",
    "start": "2443690",
    "end": "2449870"
  },
  {
    "text": "method that it's the cost more of a project the minimal entry level cost but",
    "start": "2449870",
    "end": "2455090"
  },
  {
    "text": "that's roughly what it does to go in and I do think in just asking all of you if you do have things you want in the",
    "start": "2455090",
    "end": "2461330"
  },
  {
    "text": "platform work they participate in it opens the key is an open project that",
    "start": "2461330",
    "end": "2466700"
  },
  {
    "text": "allows people to do this demonstration of it actually running to success okay so zooming out here's the",
    "start": "2466700",
    "end": "2473770"
  },
  {
    "start": "2471000",
    "end": "2479000"
  },
  {
    "text": "features i can assume them to and we can ask the question of okay which of all",
    "start": "2473770",
    "end": "2480460"
  },
  {
    "start": "2479000",
    "end": "2489000"
  },
  {
    "text": "these things are gonna make people actually move to Java 9 what's the cool thing that's gonna attract them to it and the reality is I don't really know",
    "start": "2480460",
    "end": "2487420"
  },
  {
    "text": "and I don't think a lot of other people know but this is where hopefully we have run for QA and some discussion and we",
    "start": "2487420",
    "end": "2494350"
  },
  {
    "start": "2489000",
    "end": "2627000"
  },
  {
    "text": "could talk about those questions or any of these cool projects up there that people might know stuff about I want to",
    "start": "2494350",
    "end": "2500290"
  },
  {
    "text": "know stuff about good more five minutes for Q&A and perfect time all right so we",
    "start": "2500290",
    "end": "2506109"
  },
  {
    "text": "have about seven minutes left for question there's a couple volunteers that'll be walking around with with a",
    "start": "2506109",
    "end": "2512080"
  },
  {
    "text": "mic so I've got a first question so 96 Java came out a lot of the complaints at",
    "start": "2512080",
    "end": "2519190"
  },
  {
    "text": "least one night o 90 six huh so a lot of complaints that I hear is there's a lot of boilerplate so people use other",
    "start": "2519190",
    "end": "2525130"
  },
  {
    "text": "languages this is cleaner what's the future look like for removing boilerplate so the boiler clean common",
    "start": "2525130",
    "end": "2532540"
  },
  {
    "text": "is an interesting point yes there's certainly a lot of point right in Java",
    "start": "2532540",
    "end": "2537670"
  },
  {
    "text": "and some of it actually a lambda expressions did a lot to remove but there's still a lot others left for",
    "start": "2537670",
    "end": "2544660"
  },
  {
    "text": "example that valve our thing is an example of trying to use inference instead of being explicit in discussion",
    "start": "2544660",
    "end": "2550230"
  },
  {
    "text": "I'm fairly opinionated about that I think boiler trade is really good I think that it's that readability of code",
    "start": "2550230",
    "end": "2557590"
  },
  {
    "text": "is more important than right ability to code because you've read it a lot more more often and I find it harder to read",
    "start": "2557590",
    "end": "2563680"
  },
  {
    "text": "inference based languages because my brain has to do inference yeah then when it actually tells me what it does but",
    "start": "2563680",
    "end": "2570040"
  },
  {
    "text": "that's a personal taste thing and you will find very good strong argument on the other side - as far as trends I",
    "start": "2570040",
    "end": "2577270"
  },
  {
    "text": "think the main thing that's working towards that direction is think like Val and far in the language and addition to",
    "start": "2577270",
    "end": "2583440"
  },
  {
    "text": "additional things that remove and add inference of various levels making inference for lambdas better and other",
    "start": "2583440",
    "end": "2589500"
  },
  {
    "text": "types the the move towards primitive",
    "start": "2589500",
    "end": "2594670"
  },
  {
    "text": "based collections which I put up there and I think I might have skipped talking about but",
    "start": "2594670",
    "end": "2599680"
  },
  {
    "text": "fact that you can have primitive keys and collections will probably work to help with that too because we have implicit boilerplate around the packing",
    "start": "2599680",
    "end": "2607540"
  },
  {
    "text": "and boxing of objects today and also performance losses great things you know",
    "start": "2607540",
    "end": "2613690"
  },
  {
    "text": "the questions",
    "start": "2613690",
    "end": "2616078"
  },
  {
    "text": "actually sort of a follow-up on that I had this epiphany when I was I write",
    "start": "2626640",
    "end": "2634210"
  },
  {
    "text": "some libraries that I put on maven and when I write code I write it to Java 6 so to Java 7 because I want a lot of",
    "start": "2634210",
    "end": "2640180"
  },
  {
    "text": "people to be able to use it which means I can't use the cool stuff so I wrote",
    "start": "2640180",
    "end": "2645700"
  },
  {
    "text": "some code and because Java it is that I wanted to accept function to expose functional api's but not force them I",
    "start": "2645700",
    "end": "2652600"
  },
  {
    "text": "wrote some stuff and built some tests for it and literally had to kind of comment out the Java 8 tests that",
    "start": "2652600",
    "end": "2658780"
  },
  {
    "text": "they'll run on Java 7 and 6 and and then you know I upgrade my IDE and I look at",
    "start": "2658780",
    "end": "2664540"
  },
  {
    "text": "my code and suddenly my code is full of lambda expressions and I'm looking and I said I don't remember writing these and",
    "start": "2664540",
    "end": "2671770"
  },
  {
    "text": "and I learn I have to go no it's still commented out I didn't put this in there and it took me about 10 minutes to",
    "start": "2671770",
    "end": "2677740"
  },
  {
    "text": "realize that IntelliJ added a feature that Auto recognized the boilerplate collapsed it down to lambda expression",
    "start": "2677740",
    "end": "2683590"
  },
  {
    "text": "on the screen and now I'm looking at lambda expressions in my D so the power",
    "start": "2683590",
    "end": "2689260"
  },
  {
    "text": "of that with IDs is pretty amazing and I had a panic attack but five minutes before I realized what it's going I just",
    "start": "2689260",
    "end": "2695560"
  },
  {
    "text": "did you know I don't remember doing this to the code yeah thanks for the talk",
    "start": "2695560",
    "end": "2700810"
  },
  {
    "text": "it's is great I love the the State of the Union I'm curious like you have you",
    "start": "2700810",
    "end": "2706600"
  },
  {
    "text": "know more than 20 years of experience what's the what's the next like revolutionary change you'd like to see",
    "start": "2706600",
    "end": "2712420"
  },
  {
    "text": "your what do you expect could be a difference maker like not the empty spaceship operator but something like",
    "start": "2712420",
    "end": "2718660"
  },
  {
    "text": "generics or lambdas like what what what what do you foresee coming next that could be the the next big thing",
    "start": "2718660",
    "end": "2727410"
  },
  {
    "text": "um that's a tough question um you know there's this natural inclination to talk",
    "start": "2727680",
    "end": "2733319"
  },
  {
    "text": "about how you want it to be lighter and micro-service friendly but I actually don't think that's fundamental I think",
    "start": "2733319",
    "end": "2738390"
  },
  {
    "text": "that's more of a job for implementations than for the specification on language you know whether you get a faster",
    "start": "2738390",
    "end": "2744359"
  },
  {
    "text": "compiler or not whether the garbage collector is better that's that's an implementation that you want to use or not but it doesn't change the what you",
    "start": "2744359",
    "end": "2751109"
  },
  {
    "text": "have a 9 or 10 or 11 is I think that the main trends today around value types and",
    "start": "2751109",
    "end": "2759990"
  },
  {
    "text": "arrays and and those are actually really important ones and honestly I think I would have preferred to have those",
    "start": "2759990",
    "end": "2766440"
  },
  {
    "text": "before some of the things that we put in already like invoke dynamics and jigsaws",
    "start": "2766440",
    "end": "2771530"
  },
  {
    "text": "but because I think those are more fundamental to using and performing in",
    "start": "2771530",
    "end": "2776940"
  },
  {
    "text": "the language more but again it's a matter of taste it is hard to kind of",
    "start": "2776940",
    "end": "2782369"
  },
  {
    "text": "look forward five years and talk about features that I think this will pop up",
    "start": "2782369",
    "end": "2787910"
  },
  {
    "text": "and and I I think that most of what we're going to see is more involved ways",
    "start": "2788180",
    "end": "2795119"
  },
  {
    "text": "of using api's and composing them together maybe even using external services and composing them together in",
    "start": "2795119",
    "end": "2801630"
  },
  {
    "text": "a way that crosses languages crosses you know it's not so much Java specific but",
    "start": "2801630",
    "end": "2807299"
  },
  {
    "text": "a good job a wrapper for the functionality and logic if you'd like",
    "start": "2807299",
    "end": "2813230"
  },
  {
    "text": "probably get hit for saying this but you know Jeff of the Java EE is sort of a",
    "start": "2813230",
    "end": "2818490"
  },
  {
    "text": "very slow stale fat elephant that's not moving fast enough and there are a lot",
    "start": "2818490",
    "end": "2823920"
  },
  {
    "text": "of efforts out there to do smaller to Java EE that's still very useful for programming as a platform small",
    "start": "2823920",
    "end": "2830730"
  },
  {
    "text": "containers micro profiles things like that I think there's a part of that that",
    "start": "2830730",
    "end": "2836069"
  },
  {
    "text": "needs to go into the SE platform for example we're sorely missing JA JSON",
    "start": "2836069",
    "end": "2841859"
  },
  {
    "text": "handling capabilities that are standard yeah there's 17 good implementations but I'd like one that works everyone I don't",
    "start": "2841859",
    "end": "2848040"
  },
  {
    "text": "have depending on in on top of that taking more of the features of people think of",
    "start": "2848040",
    "end": "2853640"
  },
  {
    "text": "as container features and making of sander parts of the platform it is what we find in environments like JavaScript",
    "start": "2853640",
    "end": "2859549"
  },
  {
    "text": "with node and Python and other things with that the basic platform already includes basic capability that we think",
    "start": "2859549",
    "end": "2865069"
  },
  {
    "text": "of as a container capability I'd like to see more of that but again it's hard to",
    "start": "2865069",
    "end": "2871069"
  },
  {
    "text": "develop an intuition for what the right thing is in five years slow and steady and keep it compatible and don't break",
    "start": "2871069",
    "end": "2877940"
  },
  {
    "text": "things it's more important I think for Java then sexy and cool and change every year up here in the front of it",
    "start": "2877940",
    "end": "2886720"
  },
  {
    "text": "so a little bit back to the boilerplate concept I'm a huge fan of project Lombok",
    "start": "2886720",
    "end": "2892849"
  },
  {
    "text": "I don't know if you're familiar with it or not it allows you to avoid a bunch of boilerplate in Java have you seen or are",
    "start": "2892849",
    "end": "2900710"
  },
  {
    "text": "you interested in seeing a lot of more development in annotation processors at",
    "start": "2900710",
    "end": "2906260"
  },
  {
    "text": "compile time that can help alleviate some of those pain points so annotation",
    "start": "2906260",
    "end": "2913250"
  },
  {
    "text": "processors are kind of an interesting two-edged sword I think annotation processors for project specific uses or",
    "start": "2913250",
    "end": "2919450"
  },
  {
    "text": "outside of the spec uses or interesting capabilities they kind of evolved on",
    "start": "2919450",
    "end": "2925099"
  },
  {
    "text": "their own into an ecosystem or not you can look at spring as a good example of that too",
    "start": "2925099",
    "end": "2930250"
  },
  {
    "text": "but I see things that were in the platform standard annotation so the",
    "start": "2930250",
    "end": "2935269"
  },
  {
    "text": "ability to rely on annotation processor always being there as something I'd like to do I've I've looked at various places",
    "start": "2935269",
    "end": "2942349"
  },
  {
    "text": "where I the only right way to do it would have been with annotations however it's since you don't have a built-in way",
    "start": "2942349",
    "end": "2950390"
  },
  {
    "text": "to force the annotation processor to run everywhere the libraries used it it's kind of clunky to put them in you know",
    "start": "2950390",
    "end": "2956630"
  },
  {
    "text": "yes it will work if you do these things but it's hard for the library to require",
    "start": "2956630",
    "end": "2961789"
  },
  {
    "text": "and enforce that those things will be done which means that there's some unknown instructions posted somewhere on",
    "start": "2961789",
    "end": "2967549"
  },
  {
    "text": "how to use it one that certainly has that going for it like or you can sit down whatever you want to call it so I",
    "start": "2967549",
    "end": "2973819"
  },
  {
    "text": "think things in the platform that will allow you to incorporate the requirements of annotation",
    "start": "2973819",
    "end": "2979720"
  },
  {
    "text": "processors for code to require the annotation processor to exist and pre process the code before it ever gets",
    "start": "2979720",
    "end": "2985540"
  },
  {
    "text": "loaded and for Africa verifiers to actually enforce those for example I think those would be useful so something",
    "start": "2985540",
    "end": "2992170"
  },
  {
    "text": "like Wambach could say that code in some way in the declarations of the packages",
    "start": "2992170",
    "end": "2997470"
  },
  {
    "text": "doesn't mean anything unless this processor ran on it because today the",
    "start": "2997470",
    "end": "3002700"
  },
  {
    "text": "annotations are actually optional and things break if you don't run them the right way okay last question go back",
    "start": "3002700",
    "end": "3008369"
  },
  {
    "text": "here nice talk I just heard a question",
    "start": "3008369",
    "end": "3015119"
  },
  {
    "text": "anything interesting coming with the Java secure socket extension in the future releases especially from an",
    "start": "3015119",
    "end": "3022670"
  },
  {
    "text": "interoperability standpoint so there's simple answers I don't know I really",
    "start": "3022670",
    "end": "3030630"
  },
  {
    "text": "don't know I have no idea so I hope the answer is yes okay but I really don't",
    "start": "3030630",
    "end": "3035640"
  },
  {
    "text": "know so git will be around for about 25 minutes before the next session thank you go great talk",
    "start": "3035640",
    "end": "3041370"
  },
  {
    "text": "[Music]",
    "start": "3041370",
    "end": "3044460"
  }
]