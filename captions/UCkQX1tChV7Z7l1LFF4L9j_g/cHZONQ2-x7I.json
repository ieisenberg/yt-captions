[
  {
    "start": "0",
    "end": "133000"
  },
  {
    "text": "[Music]",
    "start": "11140",
    "end": "16960"
  },
  {
    "text": "so my name is Jake vanderplas I'm a grad student in astronomy at um University of",
    "start": "16960",
    "end": "22119"
  },
  {
    "text": "Washington and um I'm going to talk about pyit learn which is uh got an",
    "start": "22119",
    "end": "29439"
  },
  {
    "text": "extension of some of the scipi and numpy utilities that's been developed in the last several years um to do machine",
    "start": "29439",
    "end": "37280"
  },
  {
    "text": "learning in Python um and so it's a it's a very cool tool I got involved because",
    "start": "37280",
    "end": "43760"
  },
  {
    "text": "I was doing some some machine learning and some data analysis for my astronomical research and there were",
    "start": "43760",
    "end": "50360"
  },
  {
    "text": "some tools that I need uh in particular neighbors uh or tree based neighbor searches things like that that I",
    "start": "50360",
    "end": "56800"
  },
  {
    "text": "couldn't find in the um in the tools that were available uh there's the KD",
    "start": "56800",
    "end": "62239"
  },
  {
    "text": "Tree in scipi but it I was looking at high dimensional stuff so the KD tree didn't scale so I I wrote a ball tree",
    "start": "62239",
    "end": "68840"
  },
  {
    "text": "code um that accomplished my problem and then I figured since I spent so much time on that I might as well make it",
    "start": "68840",
    "end": "75119"
  },
  {
    "text": "useful to other people so I um got in touch with the people who had just started scikit learn at that point and",
    "start": "75119",
    "end": "81880"
  },
  {
    "text": "um submitted my code and from that they uh they have drawn me in and now I spend",
    "start": "81880",
    "end": "89280"
  },
  {
    "text": "way too much time working on this package but it's great so if you go to uh I don't know if you can see the URL",
    "start": "89280",
    "end": "95479"
  },
  {
    "text": "up there but it's um scikit-learn dorg and you can um you can",
    "start": "95479",
    "end": "102240"
  },
  {
    "text": "see everything everything that's there I just want to real quick show you a few features of the website before we move",
    "start": "102240",
    "end": "108560"
  },
  {
    "text": "on into the other stuff if you click on the examples menu up top this is very similar to matplot lib we have a whole",
    "start": "108560",
    "end": "115360"
  },
  {
    "text": "gallery of machine learning examples so all of this is done on on um",
    "start": "115360",
    "end": "120920"
  },
  {
    "text": "various data sets various machine learning algorithms and if you if you want to learn about machine learning",
    "start": "120920",
    "end": "126479"
  },
  {
    "text": "this is a great place to just uh click around and and see what you can find",
    "start": "126479",
    "end": "132400"
  },
  {
    "text": "um for today's tutorial I I made a I made my own branch of this website with",
    "start": "132400",
    "end": "139200"
  },
  {
    "text": "some added tutorial stuff this will be um this will be merged into the main",
    "start": "139200",
    "end": "145000"
  },
  {
    "text": "documentation sometime in the next few weeks but the uh the web address is Jake V",
    "start": "145000",
    "end": "150360"
  },
  {
    "text": "dp. github.com I don't know maybe I can write that",
    "start": "150360",
    "end": "159280"
  },
  {
    "text": "in and can I make this bigger there we go so that's that's the web address",
    "start": "161760",
    "end": "167519"
  },
  {
    "text": "right there and if you if you have that you",
    "start": "167519",
    "end": "174760"
  },
  {
    "text": "can um you'll end up on this main page right here",
    "start": "174760",
    "end": "180400"
  },
  {
    "text": "scroll down to the second section and section 2.3 is pyit learn and astronomical data click on that and",
    "start": "180400",
    "end": "187400"
  },
  {
    "text": "you'll be on on this page right here so there's a lot of material in this tutorial um I don't think we'll have",
    "start": "187400",
    "end": "193280"
  },
  {
    "text": "time to get through all of it today um but I'm thinking we'll probably go through Section the the first section",
    "start": "193280",
    "end": "200599"
  },
  {
    "text": "here which well set up an inspiration I think you have all that um already if",
    "start": "200599",
    "end": "206799"
  },
  {
    "text": "you had your little if you had your USB key we'll go through the section on General machine learning",
    "start": "206799",
    "end": "212200"
  },
  {
    "text": "Concepts um and then skip through this practical advice thing you can look at",
    "start": "212200",
    "end": "217319"
  },
  {
    "text": "that yourself and then there are a few exercise exercises later that use astronomical data to uh display how to",
    "start": "217319",
    "end": "225080"
  },
  {
    "text": "use some of this machine learning technology so why don't we start if you click",
    "start": "225080",
    "end": "230720"
  },
  {
    "text": "on that says inspiration I think it is meant to say installation",
    "start": "230720",
    "end": "236319"
  },
  {
    "text": "but I still need to to spell check all this or read through it so if if you",
    "start": "236319",
    "end": "241599"
  },
  {
    "start": "240000",
    "end": "407000"
  },
  {
    "text": "don't have um scikit learn installed on your machine then um should probably do",
    "start": "241599",
    "end": "248360"
  },
  {
    "text": "that right now if you have easy install it's on there pip it's on there if you use the little um the little memory",
    "start": "248360",
    "end": "254959"
  },
  {
    "text": "stick you should have scikit learn so you can check this by opening an IPython",
    "start": "254959",
    "end": "262040"
  },
  {
    "text": "whoops IPython thing and click",
    "start": "262040",
    "end": "267479"
  },
  {
    "text": "um make this little smaller import [Music]",
    "start": "267520",
    "end": "272960"
  },
  {
    "text": "sklearn so that's the the head name space for pyit learn sklearn so we we'll",
    "start": "272960",
    "end": "278160"
  },
  {
    "text": "be using a lot of that sort of stuff so if does everybody have that installed we're going to be doing a lot",
    "start": "278160",
    "end": "284479"
  },
  {
    "text": "of really interactive things here everyone's good on that cool so the",
    "start": "284479",
    "end": "290759"
  },
  {
    "text": "other thing you need is the um is some data files from this tutorial",
    "start": "290759",
    "end": "296560"
  },
  {
    "text": "if you got your little um USB stick it's [Music]",
    "start": "296560",
    "end": "303480"
  },
  {
    "text": "in uh where I copied this to Pi data on my",
    "start": "304840",
    "end": "309880"
  },
  {
    "text": "desktop if you're in that in that uh folder from the USB stick just use CD",
    "start": "309880",
    "end": "315440"
  },
  {
    "text": "astronomy and you should have this uh file here with a few different",
    "start": "315440",
    "end": "322360"
  },
  {
    "text": "things so we have uh data it's kind of hard to read here isn't it let me see if I can make this",
    "start": "322720",
    "end": "331919"
  },
  {
    "text": "smaller yeah I'll I'll I can show you that if you don't have the USB stick you can um follow the example here just do",
    "start": "334960",
    "end": "342840"
  },
  {
    "text": "if you have git you can get clone this",
    "start": "342840",
    "end": "347080"
  },
  {
    "text": "repo yeah you can get clone that repo and if once you have the data there's uh",
    "start": "351080",
    "end": "357400"
  },
  {
    "text": "there's a file data which this has some of the astronomical data that we'll be working with there's a",
    "start": "357400",
    "end": "363919"
  },
  {
    "text": "file Solutions and this is the uh completed exercises the you know the the",
    "start": "363919",
    "end": "370120"
  },
  {
    "text": "uh the teachers answer key and then in skeletons there's some of there's some code that will be filling in along the",
    "start": "370120",
    "end": "376319"
  },
  {
    "text": "way to to do some of these examples so is everyone managing to find",
    "start": "376319",
    "end": "383199"
  },
  {
    "text": "that yeah okay",
    "start": "383199",
    "end": "388360"
  },
  {
    "text": "cool so this is uh this first page just has a",
    "start": "388400",
    "end": "394919"
  },
  {
    "text": "bunch about how to how to download the data sets and things like that if you got it off the USB key then you already",
    "start": "394919",
    "end": "402160"
  },
  {
    "text": "have the data sets there so let's go to the next section general concepts so the",
    "start": "402160",
    "end": "408000"
  },
  {
    "start": "407000",
    "end": "590000"
  },
  {
    "text": "idea with with machine learning and art artificial intelligence is what you're trying to",
    "start": "408000",
    "end": "413599"
  },
  {
    "text": "do is um write programs that have they",
    "start": "413599",
    "end": "418680"
  },
  {
    "text": "have tunable parameters um and that and that in these",
    "start": "418680",
    "end": "424960"
  },
  {
    "text": "programs these tunable parameters are adjusted to fit your data in the best way possible so uh a one way you can",
    "start": "424960",
    "end": "432319"
  },
  {
    "text": "think about this a common thing that you might want to do is if you have a collection of points that you know are",
    "start": "432319",
    "end": "438599"
  },
  {
    "text": "of two different categories you want to figure out a way to divide them so so",
    "start": "438599",
    "end": "444400"
  },
  {
    "text": "that if you have um so this this would be a training sample where you know this is all class one this is class two and",
    "start": "444400",
    "end": "451160"
  },
  {
    "text": "if you throw a new point at it a new observation and it lands somewhere in the space you want to be able to predict",
    "start": "451160",
    "end": "457120"
  },
  {
    "text": "whether that point is in class one or class two so this is a really simplistic example but um as the as the data sets",
    "start": "457120",
    "end": "465360"
  },
  {
    "text": "grow large the the kind of things this might be um you know maybe you're you're",
    "start": "465360",
    "end": "470639"
  },
  {
    "text": "looking at web pages and your attributes are the word counts on those web pages",
    "start": "470639",
    "end": "478199"
  },
  {
    "text": "and your classic is is you're trying to you're trying to classify this web page as a personal blog or a news source or",
    "start": "478199",
    "end": "486280"
  },
  {
    "text": "you know some other classification that you're interested in learning about there there are all sorts of situations",
    "start": "486280",
    "end": "491400"
  },
  {
    "text": "where this this General framework can be can be extended to some really interesting",
    "start": "491400",
    "end": "497400"
  },
  {
    "text": "problems so this is uh a lot of times for these examples we we'll work in really um Simple Spaces just 2D because",
    "start": "497400",
    "end": "505000"
  },
  {
    "text": "we can we can plot that up and show these bounding lines so in case you're you're wondering this is a um a support",
    "start": "505000",
    "end": "511639"
  },
  {
    "text": "Vector machine that did this classification and all these plots in here are linked to source code so if you",
    "start": "511639",
    "end": "517320"
  },
  {
    "text": "click on it um this page that it brings you to will actually show you the source",
    "start": "517320",
    "end": "522719"
  },
  {
    "text": "code that was used to to create that data to fit that data and then to plot it so that's a a useful thing in this",
    "start": "522719",
    "end": "530519"
  },
  {
    "text": "tutorial um actually throughout the IIT learn documentation website any plot",
    "start": "530519",
    "end": "535839"
  },
  {
    "text": "that you see you can click on and it'll tell you how it's made so it's it's pretty useful for for learning the",
    "start": "535839",
    "end": "543079"
  },
  {
    "text": "tools so the question is given if if you have this data how do you use pyit learn",
    "start": "543079",
    "end": "548839"
  },
  {
    "text": "to to learn some things to learn these parameters so we're gonna we're going to",
    "start": "548839",
    "end": "554959"
  },
  {
    "text": "talk about a few different things um we need to talk about how to turn raw data",
    "start": "554959",
    "end": "560600"
  },
  {
    "text": "into numerical arrays because if you have things like text Data where you you",
    "start": "560600",
    "end": "566160"
  },
  {
    "text": "can't you can't do any machine learning on it until you've turn that into into numbers that the algorithms can",
    "start": "566160",
    "end": "572440"
  },
  {
    "text": "understand we'll talk about um supervised learning we'll talk about unsupervised",
    "start": "572440",
    "end": "578200"
  },
  {
    "text": "learning and the difference between those two um and then we'll talk about some concepts of uh",
    "start": "578200",
    "end": "584600"
  },
  {
    "text": "overfitting and some some more detailed things so let's move on to this section right",
    "start": "584600",
    "end": "591959"
  },
  {
    "start": "590000",
    "end": "673000"
  },
  {
    "text": "here we have um features and feature extraction so in init learn the um data",
    "start": "591959",
    "end": "599120"
  },
  {
    "text": "data model is that you basically for for any data you have an array X so",
    "start": "599120",
    "end": "607120"
  },
  {
    "text": "um I'm going to do some random points",
    "start": "608320",
    "end": "613040"
  },
  {
    "text": "here uh let's make it 100 by4 so",
    "start": "613920",
    "end": "620920"
  },
  {
    "text": "oops so if we have an array that's 100 points by four point or 100 100 by4 what",
    "start": "623680",
    "end": "630120"
  },
  {
    "text": "we have in in pyit learn this represents 100 points in four dimensions so the the",
    "start": "630120",
    "end": "636079"
  },
  {
    "text": "First Dimension always tells you how many samples you have so it might be in our what we were talking about before it",
    "start": "636079",
    "end": "641839"
  },
  {
    "text": "might be how many web pages you have or how many stars you're looking at or how many different people's faces you're",
    "start": "641839",
    "end": "648320"
  },
  {
    "text": "looking at and the second dimension um indicates the number of features that you have so any any sort of observed",
    "start": "648320",
    "end": "655480"
  },
  {
    "text": "feature that you have so as you're using psyit learning keep that in mind that if you can if you can get a data set into",
    "start": "655480",
    "end": "662639"
  },
  {
    "text": "the form where it's nend features by end points sorry n samples by end features",
    "start": "662639",
    "end": "669279"
  },
  {
    "text": "then you can use these machine learning Al algorithms so as an example of this",
    "start": "669279",
    "end": "674800"
  },
  {
    "start": "673000",
    "end": "1040000"
  },
  {
    "text": "let's use the um one data set that's common for this sort of thing is the uh",
    "start": "674800",
    "end": "681440"
  },
  {
    "text": "Iris data set so essentially we've there's this data set that's out there that um some scientists took a look at",
    "start": "681440",
    "end": "688720"
  },
  {
    "text": "some irises wild irises out in the forest and measured some features of these irises so they have the the seil",
    "start": "688720",
    "end": "696079"
  },
  {
    "text": "length the seil width the pedal length and the pedal width so for each of these",
    "start": "696079",
    "end": "702320"
  },
  {
    "text": "um each of these four categories there's a real numbered value which is length and",
    "start": "702320",
    "end": "707600"
  },
  {
    "text": "centimeters and then the classes of these objects are um three different um",
    "start": "707600",
    "end": "712720"
  },
  {
    "text": "three different species basically so the the thing we want to ask is given a",
    "start": "712720",
    "end": "718560"
  },
  {
    "text": "measure M of these features of this flower can we classify the flower that",
    "start": "718560",
    "end": "725120"
  },
  {
    "text": "we're looking at into one of these three um into one of these three",
    "start": "725120",
    "end": "732519"
  },
  {
    "text": "species so we have some example code up here and uh guess this would have been better as",
    "start": "732519",
    "end": "738600"
  },
  {
    "text": "an IPython notebook huh I should have should have gotten on the ball on that oh",
    "start": "738600",
    "end": "746360"
  },
  {
    "text": "great okay so so what one useful thing we have",
    "start": "747880",
    "end": "753480"
  },
  {
    "text": "in scikit learn is a number of data set loaders so you always need data in order",
    "start": "753480",
    "end": "758720"
  },
  {
    "text": "to uh to do this sort of stuff but data is Big so we don't want to ship it with with the source code so instead we have",
    "start": "758720",
    "end": "766040"
  },
  {
    "text": "um we have data set loaders so if I import data sets and then do a",
    "start": "766040",
    "end": "774519"
  },
  {
    "text": "tab complete we can see all the data sets we have there's um all the ones",
    "start": "774519",
    "end": "779720"
  },
  {
    "text": "that start with fetch are data sets so let's do fetch toad complete 20 news",
    "start": "779720",
    "end": "785639"
  },
  {
    "text": "groups this is basically uh cat word data from different news groups with",
    "start": "785639",
    "end": "791279"
  },
  {
    "text": "classifications based on the word on the news groups um olivetti face faces is",
    "start": "791279",
    "end": "797680"
  },
  {
    "text": "the um is a a whole bunch of images of faces",
    "start": "797680",
    "end": "803639"
  },
  {
    "text": "that can be used for facial recognitions um yeah there's several other data sets",
    "start": "803639",
    "end": "810320"
  },
  {
    "text": "in there so you can explore that but we're going to do um data sets. load",
    "start": "810320",
    "end": "818240"
  },
  {
    "text": "Iris and um let's call this data oops I got to put an equals there",
    "start": "818240",
    "end": "824600"
  },
  {
    "text": "don't I so this loads the iris data sets and we can type data. shape and see oh shoot",
    "start": "824600",
    "end": "833079"
  },
  {
    "text": "it's a bunch object I forgot about that so we want to do x equals data dox oh",
    "start": "833079",
    "end": "841560"
  },
  {
    "text": "man I should just look at my uh look at my crib notes down here to make sure I have this right so um",
    "start": "841600",
    "end": "850839"
  },
  {
    "text": "data yeah so we want x equals data.",
    "start": "854880",
    "end": "860240"
  },
  {
    "text": "data and Y equals data.",
    "start": "860240",
    "end": "865240"
  },
  {
    "text": "targets doesn't have targets",
    "start": "866839",
    "end": "870680"
  },
  {
    "text": "sorry about this guys yeah there we",
    "start": "872079",
    "end": "877320"
  },
  {
    "text": "go okay so now we can look at um x. shape and we see that x. shape is 150",
    "start": "877320",
    "end": "884959"
  },
  {
    "text": "comma four so that means that we're looking at um 150 samples with four",
    "start": "884959",
    "end": "890639"
  },
  {
    "text": "different features each so those are those those four different measurements that we were looking at now when you're saying samples I'm picturing rows when I",
    "start": "890639",
    "end": "899240"
  },
  {
    "text": "think of a sample I think of a number of things do you mean really 150 rows yeah it's a it's 150 rows and each row is um",
    "start": "899240",
    "end": "908320"
  },
  {
    "text": "associated with a single object in this case a single flower okay yeah and let the sample is",
    "start": "908320",
    "end": "915880"
  },
  {
    "text": "that flower yeah that's right and the features are the four uh four dimensions",
    "start": "915880",
    "end": "921920"
  },
  {
    "text": "of of that have been measured for that flower and if we look at y. shape um we",
    "start": "921920",
    "end": "927920"
  },
  {
    "text": "see that that's 150 right there so we basically have one",
    "start": "927920",
    "end": "932959"
  },
  {
    "text": "number for each um for each each uh",
    "start": "932959",
    "end": "938160"
  },
  {
    "text": "sample and so these are the if we print who where did my where did my thing go",
    "start": "938160",
    "end": "943519"
  },
  {
    "text": "if we print y we see that these um these classifications are are basically a zero",
    "start": "943519",
    "end": "949759"
  },
  {
    "text": "a one or a two so this is the um this is showing us the uh the species",
    "start": "949759",
    "end": "957759"
  },
  {
    "text": "of the training set",
    "start": "957759",
    "end": "960600"
  },
  {
    "text": "yeah so we can do let's do it this way so Iris equals",
    "start": "963959",
    "end": "970440"
  },
  {
    "text": "data sets. load Iris x equals iris.",
    "start": "970440",
    "end": "976800"
  },
  {
    "text": "dat y equals iris.",
    "start": "976800",
    "end": "981720"
  },
  {
    "text": "Target so looking back at this yeah if we look at um x0 the first row of the array we",
    "start": "987519",
    "end": "995959"
  },
  {
    "text": "see that it's just an array of values so in this case the I guess the SEO length",
    "start": "995959",
    "end": "1001759"
  },
  {
    "text": "is 5 cm the SEO width is 3.5 CM",
    "start": "1001759",
    "end": "1008279"
  },
  {
    "text": "Etc the other thing we have here is target. names does that",
    "start": "1013800",
    "end": "1023160"
  },
  {
    "text": "work iris. Target names this shows us um",
    "start": "1023160",
    "end": "1029400"
  },
  {
    "text": "so for each of these Target values for each of these Target values",
    "start": "1029400",
    "end": "1035558"
  },
  {
    "text": "they are associated with a species so you have the species names there so let's think about how we can",
    "start": "1035559",
    "end": "1045199"
  },
  {
    "start": "1040000",
    "end": "1180000"
  },
  {
    "text": "um let's see okay so did everybody get that get",
    "start": "1047400",
    "end": "1054000"
  },
  {
    "text": "that Iris data set loaded up so if we want to we can um I'm just kind of going",
    "start": "1054000",
    "end": "1059320"
  },
  {
    "text": "on the on the Fly here but if we want to we can oh",
    "start": "1059320",
    "end": "1067279"
  },
  {
    "text": "yeah great excellent",
    "start": "1069679",
    "end": "1075440"
  },
  {
    "text": "Magic so if we um let's let's scatter two of",
    "start": "1077400",
    "end": "1082520"
  },
  {
    "text": "these just to just to see um what these look like",
    "start": "1082520",
    "end": "1090039"
  },
  {
    "text": "we're going to scatter the the First Column of the Matrix with the second column of the Matrix and let's make the",
    "start": "1090039",
    "end": "1095799"
  },
  {
    "text": "color equal to that y right there and we'll take a look at what the data looks",
    "start": "1095799",
    "end": "1102120"
  },
  {
    "text": "like so this is the kind of data we have this is two out of the four dimensions of what we're looking at",
    "start": "1102120",
    "end": "1110320"
  },
  {
    "text": "yeah so we can look at two of our four dimensions here and um we see are you",
    "start": "1116480",
    "end": "1123520"
  },
  {
    "text": "guys ready to look at the plot yeah move that over here and what we see is that the uh",
    "start": "1123520",
    "end": "1130960"
  },
  {
    "text": "they're definitely they're definitely the the features group together in a certain way right we these these Blue",
    "start": "1130960",
    "end": "1138080"
  },
  {
    "text": "Points points right here over in this part of the space the red and the green points are a little closer together but",
    "start": "1138080",
    "end": "1143159"
  },
  {
    "text": "you might see that those we might expect that the other measurements would help us separate these out a little more so",
    "start": "1143159",
    "end": "1149720"
  },
  {
    "text": "what what machine learning is trying to do is basically use those features and do this sort of thing in an automated",
    "start": "1149720",
    "end": "1155240"
  },
  {
    "text": "way if you were a person looking at this data you might draw a line right here and say everything north of theirs is a",
    "start": "1155240",
    "end": "1162520"
  },
  {
    "text": "blueo or uh I can't remember which species that that's part of right now um",
    "start": "1162520",
    "end": "1168559"
  },
  {
    "text": "but for machine learning we want we want the code to do that automatically we don't want to have to look at plots of",
    "start": "1168559",
    "end": "1174240"
  },
  {
    "text": "every single Dimension we want this to to happen",
    "start": "1174240",
    "end": "1179240"
  },
  {
    "start": "1180000",
    "end": "1293000"
  },
  {
    "text": "automatically so let's do a little aside here and um talk about in this case this was",
    "start": "1180679",
    "end": "1187240"
  },
  {
    "text": "these were categorial categorical features or these were um what I call it",
    "start": "1187240",
    "end": "1192760"
  },
  {
    "text": "these these were real numbered features so we have a measurement for each category for each feature and you might",
    "start": "1192760",
    "end": "1199120"
  },
  {
    "text": "also in some places have um categorical features so for example if you measure",
    "start": "1199120",
    "end": "1204880"
  },
  {
    "text": "that the color is purple blue or red you don't have a real number a continuous variable for that but you just have",
    "start": "1204880",
    "end": "1211159"
  },
  {
    "text": "categorical feature so in that case what you what you might do if you wanted to do a machine",
    "start": "1211159",
    "end": "1217960"
  },
  {
    "text": "learning algorithm on that data is you look at you'd have these first four um",
    "start": "1217960",
    "end": "1223440"
  },
  {
    "text": "measurements that we had before but you'd also add maybe a fourth dimension that",
    "start": "1223440",
    "end": "1228919"
  },
  {
    "text": "one if the color is purple and zero otherwise zoom in",
    "start": "1228919",
    "end": "1236159"
  },
  {
    "text": "here and you you could add a uh a Fifth Dimension that does the same thing for",
    "start": "1236159",
    "end": "1242039"
  },
  {
    "text": "blue or a sixth Dimension that does the same thing for red so for example if if you have these categorical features",
    "start": "1242039",
    "end": "1247760"
  },
  {
    "text": "that's one way you could divide it up another way you could divide it up is to",
    "start": "1247760",
    "end": "1253240"
  },
  {
    "text": "do have purple be zero red be one and blue be two or something like that in a",
    "start": "1253240",
    "end": "1259480"
  },
  {
    "text": "in a single Dimension and the the way you decide to do that kind of depends on the problem and what what you're",
    "start": "1259480",
    "end": "1264919"
  },
  {
    "text": "expecting to get out so it takes it's a little bit of art it's not just a completely a science doing machine",
    "start": "1264919",
    "end": "1272640"
  },
  {
    "text": "learning so there's also um sometimes you might want to extract features from",
    "start": "1275679",
    "end": "1281360"
  },
  {
    "text": "unstructured data so an example of that would be things like a text document so",
    "start": "1281360",
    "end": "1287240"
  },
  {
    "text": "how do you go from a text document to some number of vectors that you can plug into a machine learning algorithm there",
    "start": "1287240",
    "end": "1294240"
  },
  {
    "text": "are uh there are few ways you can do this if you you can um count the frequency of",
    "start": "1294240",
    "end": "1301039"
  },
  {
    "text": "each pair of words so um if you if you have a a text document",
    "start": "1301039",
    "end": "1307960"
  },
  {
    "text": "about the White House there might be the pair the president all over the place so",
    "start": "1307960",
    "end": "1313120"
  },
  {
    "text": "each time you see the the pair of words the president you make that a feature and count how many times that happens",
    "start": "1313120",
    "end": "1319159"
  },
  {
    "text": "um that's the called this it's a so-called bag of words way of doing it",
    "start": "1319159",
    "end": "1325640"
  },
  {
    "text": "um so there there are tools init learn for doing this sort of stuff the the documentation for the feature extraction",
    "start": "1325640",
    "end": "1332799"
  },
  {
    "text": "tools is not quite as good as the rest of the package but that's being um that's being worked on right now so if",
    "start": "1332799",
    "end": "1338919"
  },
  {
    "text": "you have text Data you can you can work with that there's actually some good tutorials online for how to work with",
    "start": "1338919",
    "end": "1344159"
  },
  {
    "text": "Text data so if you're working with image data um for example if you have a whole bunch",
    "start": "1344159",
    "end": "1351440"
  },
  {
    "text": "of pictures of people and you want to try a machine learning algorithm to identify those",
    "start": "1351440",
    "end": "1356799"
  },
  {
    "text": "faces um one way to do it is to rescale all the images to a fixed size so you",
    "start": "1356799",
    "end": "1362840"
  },
  {
    "text": "have basically a certain number of pixels per image and you can take all the raw pixel values as a vector so you",
    "start": "1362840",
    "end": "1370120"
  },
  {
    "text": "have a a 100 by 100 image and that becomes 10,000 pixels and then you have",
    "start": "1370120",
    "end": "1375200"
  },
  {
    "text": "a um a value for each of those pixels so in that case you would have 10,000 dimensional data and you're starting to",
    "start": "1375200",
    "end": "1381360"
  },
  {
    "text": "get very high high Dimensions um you can do more sophisticated things like take a",
    "start": "1381360",
    "end": "1386960"
  },
  {
    "text": "take a transform wavelet transform something like that",
    "start": "1386960",
    "end": "1393080"
  },
  {
    "text": "um you can there are other things on here I won't talk all the way through them but there there are several",
    "start": "1393080",
    "end": "1398440"
  },
  {
    "text": "different ways to um to do IM to data extraction on on",
    "start": "1398440",
    "end": "1404880"
  },
  {
    "text": "images um you can do a similar type of thing for sounds you can",
    "start": "1404880",
    "end": "1409960"
  },
  {
    "text": "um sounds you basically resample to a common grid and you have a a floating",
    "start": "1409960",
    "end": "1415679"
  },
  {
    "text": "point value for each of those each of those areas so anyway you can you can do",
    "start": "1415679",
    "end": "1421240"
  },
  {
    "text": "machine learning on on basically any type of data so that's what we're trying to say here and um pyit learn has tools",
    "start": "1421240",
    "end": "1428960"
  },
  {
    "text": "available that'll help you do all of that so once you have this data",
    "start": "1428960",
    "end": "1434120"
  },
  {
    "start": "1431000",
    "end": "1686000"
  },
  {
    "text": "essentially what what you're doing is you're taking your your input whether it's fig figures or text documents",
    "start": "1434120",
    "end": "1440679"
  },
  {
    "text": "images whatever you translate that in some way into feature vectors so for each for each sample for each object",
    "start": "1440679",
    "end": "1448400"
  },
  {
    "text": "that you're um interested in you have a set of numbers and you also have labels for",
    "start": "1448400",
    "end": "1454159"
  },
  {
    "text": "this training data and you use your machine learn learning algor algorithm put those together and you come up with",
    "start": "1454159",
    "end": "1460559"
  },
  {
    "text": "a predictive model so you can think of this model as like a a python object and",
    "start": "1460559",
    "end": "1466600"
  },
  {
    "text": "that's the way so I could learn imps it and then if you if you have a new",
    "start": "1466600",
    "end": "1472120"
  },
  {
    "text": "sample so you're looking you download a web page and you're ask you want your machine learning algorithm to tell you",
    "start": "1472120",
    "end": "1478720"
  },
  {
    "text": "what type of web page is it what is it talking about you apply the same transform to get the feature Vector out",
    "start": "1478720",
    "end": "1484760"
  },
  {
    "text": "of that you plug this feature Vector into the predictive model and the predictive model has um has a tool or",
    "start": "1484760",
    "end": "1492399"
  },
  {
    "text": "has a a method that'll get you your expected label so that's basically the",
    "start": "1492399",
    "end": "1497600"
  },
  {
    "text": "the the workflow of a supervised machine learning problem I'm going to skip some stuff here and show you that if you um",
    "start": "1497600",
    "end": "1506159"
  },
  {
    "text": "in pyit learn there's a certain syntax to do all this stuff so basically in",
    "start": "1506159",
    "end": "1512120"
  },
  {
    "text": "um in uh there's a there's a vectorizer method and I'll I'll show you a little",
    "start": "1512120",
    "end": "1518120"
  },
  {
    "text": "bit about that that'll translate training text into feature vectors you have a classifier and you call the fit",
    "start": "1518120",
    "end": "1525080"
  },
  {
    "text": "method on the the data and the labels and you get a predictive",
    "start": "1525080",
    "end": "1531360"
  },
  {
    "text": "model use the same vectorizer to get a feature Vector out of your um new",
    "start": "1531360",
    "end": "1536679"
  },
  {
    "text": "document and then you call the predict method to get the new label out so",
    "start": "1536679",
    "end": "1542000"
  },
  {
    "text": "that's kind of the the workflow of py could learn let me go back up",
    "start": "1542000",
    "end": "1547120"
  },
  {
    "text": "here so anyway the the nice thing about that is that there there are hundreds literally hundreds of these learning",
    "start": "1547120",
    "end": "1553240"
  },
  {
    "text": "algor algorithms available in the package and they all have pretty much that same inter interface so um I've",
    "start": "1553240",
    "end": "1560480"
  },
  {
    "text": "talked to people who said I don't know anything about machine learning what do I do and I my my main advice is usually",
    "start": "1560480",
    "end": "1566480"
  },
  {
    "text": "to uh find a data set and figure out this syntax and then just throw your data at a few of these classifiers and",
    "start": "1566480",
    "end": "1573159"
  },
  {
    "text": "see what they do and if one of them seems to work you know you plot something up and one of them seems to",
    "start": "1573159",
    "end": "1578559"
  },
  {
    "text": "work then you can go to the documentation and learn about what's going on there so it's a a kind of a backward approach you don't need to do",
    "start": "1578559",
    "end": "1585279"
  },
  {
    "text": "all the theory but the theory is good too so we have all that in the documentation um but we want this to be",
    "start": "1585279",
    "end": "1591880"
  },
  {
    "text": "a tool that people can just play around with and and learn machine learning so",
    "start": "1591880",
    "end": "1600360"
  },
  {
    "text": "um let's see where are we here oh yeah so this um one other thing",
    "start": "1600360",
    "end": "1608000"
  },
  {
    "text": "about these labels the labels can sometimes be categorical features so things like uh what species of Iris it",
    "start": "1608000",
    "end": "1615159"
  },
  {
    "text": "is things the labels can also be um be floating Point values so if we're",
    "start": "1615159",
    "end": "1621240"
  },
  {
    "text": "looking at categorical features we're talking about classification which is a a type of type of machine learning",
    "start": "1621240",
    "end": "1627440"
  },
  {
    "text": "problem if we're looking at continuous values we want to do something we want to do um it's called regression so for",
    "start": "1627440",
    "end": "1634720"
  },
  {
    "text": "example one of the exercises later on is uh regression applied to what we call",
    "start": "1634720",
    "end": "1640840"
  },
  {
    "text": "photometric Red shifts so in in astronomy we look at we look at galaxies and we want to know how far away they",
    "start": "1640840",
    "end": "1647640"
  },
  {
    "text": "are and that that distance to those galaxies is correlated with the the red",
    "start": "1647640",
    "end": "1652880"
  },
  {
    "text": "shift basically the amount that the universe is expanded while that light has been traveling to us so you can use",
    "start": "1652880",
    "end": "1659320"
  },
  {
    "text": "these observations of galaxies and try to ask what what is the red shift and this is a really common problem in",
    "start": "1659320",
    "end": "1665640"
  },
  {
    "text": "astronomy and we um it's it's something that's really really important for some of these upcoming surveys is finding how",
    "start": "1665640",
    "end": "1672640"
  },
  {
    "text": "far away these galaxies are so you can do cosmology learn about things like dark matter and dark energy so this is",
    "start": "1672640",
    "end": "1679279"
  },
  {
    "text": "this is stuff that that people are using in",
    "start": "1679279",
    "end": "1683440"
  },
  {
    "text": "practice so um let's do a a quick classification example so we have our um",
    "start": "1685360",
    "end": "1690960"
  },
  {
    "start": "1686000",
    "end": "2163000"
  },
  {
    "text": "our data here and I'm going to close that we loaded our Iris data we have uh",
    "start": "1690960",
    "end": "1699039"
  },
  {
    "text": "X which is uh 150 by4 we have Y",
    "start": "1699039",
    "end": "1705640"
  },
  {
    "text": "which which is length 100 50 and we're going to use something called the um the",
    "start": "1705640",
    "end": "1710799"
  },
  {
    "text": "linear SVC so this is a a linear support",
    "start": "1710799",
    "end": "1715840"
  },
  {
    "text": "Vector machine classifier so support Vector machines are are um a technique",
    "start": "1715840",
    "end": "1721360"
  },
  {
    "text": "that have been really really powerful in machine learning and um you can do you",
    "start": "1721360",
    "end": "1726720"
  },
  {
    "text": "can do basic linear models and you can get more complicated from that so the the way we do that is we do from",
    "start": "1726720",
    "end": "1735200"
  },
  {
    "text": "sklearn.svm import linear",
    "start": "1735279",
    "end": "1740399"
  },
  {
    "text": "SVC so linear SVC is our class that um",
    "start": "1740399",
    "end": "1745559"
  },
  {
    "text": "our class that that implements this method so",
    "start": "1745559",
    "end": "1751440"
  },
  {
    "text": "um oh yeah then we need to instantiate this so we clf for classifier equals",
    "start": "1751440",
    "end": "1759240"
  },
  {
    "text": "linear SVC open close parentheses so we instantiate this class and we have this",
    "start": "1759240",
    "end": "1766360"
  },
  {
    "text": "classifier instance right here so if you type clf you see what it is it's a linear support Vector classifier model",
    "start": "1766360",
    "end": "1774399"
  },
  {
    "text": "it has these certain parameters the C that constant is 1.0 that's kind of a",
    "start": "1774399",
    "end": "1780200"
  },
  {
    "text": "weight uh that you can adjust to to how how closely you fit points you have",
    "start": "1780200",
    "end": "1787880"
  },
  {
    "text": "um a tolerance in your in your convergence down at the bottom you you",
    "start": "1787880",
    "end": "1793399"
  },
  {
    "text": "have certain scalings you can choose different penalty terms ter you can",
    "start": "1793399",
    "end": "1798600"
  },
  {
    "text": "choose different parameters to fit so there's a whole host of things in there and if you're if you're curious about",
    "start": "1798600",
    "end": "1804120"
  },
  {
    "text": "what all these are you can in your IPython shell type linear SVC question mark and",
    "start": "1804120",
    "end": "1811679"
  },
  {
    "text": "the the dock strings are pretty good so this is a linear kernel SVC you have",
    "start": "1811679",
    "end": "1819559"
  },
  {
    "text": "all the parameters there um so in general that'll tell you",
    "start": "1819559",
    "end": "1825120"
  },
  {
    "text": "how to go on so we have our our classifier there but so",
    "start": "1825120",
    "end": "1831799"
  },
  {
    "text": "the classifier has not been trained yet we we have this nice classifier but we haven't thrown any data at it yet so the",
    "start": "1831799",
    "end": "1839200"
  },
  {
    "text": "way that we throw data at the classifier is do cf. fit X comma",
    "start": "1839200",
    "end": "1846320"
  },
  {
    "text": "y so X is our um X is our input data y",
    "start": "1846320",
    "end": "1851519"
  },
  {
    "text": "are the labels and we end up with a fit classif",
    "start": "1851519",
    "end": "1857679"
  },
  {
    "text": "so um if we type clf in this case Co look at the",
    "start": "1857679",
    "end": "1863559"
  },
  {
    "text": "coefficients I hate when I do that these are the uh this is basically",
    "start": "1863559",
    "end": "1870519"
  },
  {
    "text": "the internal data model that it is generated in that fit yeah it's a great question I think",
    "start": "1870519",
    "end": "1876360"
  },
  {
    "text": "the uh so underscore means private usually and begin end",
    "start": "1876360",
    "end": "1883440"
  },
  {
    "text": "yeah yeah so this is something that you that's a good good question maybe we we",
    "start": "1884919",
    "end": "1891440"
  },
  {
    "text": "need to think about the uh the implementation details there but I think the uh the underscore at the end usually",
    "start": "1891440",
    "end": "1898120"
  },
  {
    "text": "means something that was fit by the model and",
    "start": "1898120",
    "end": "1903600"
  },
  {
    "text": "um so it's not something that it's not something that you necessarily need to look at because um you're not going to",
    "start": "1903600",
    "end": "1911399"
  },
  {
    "text": "you're not going to take that array and do anything with it but sometimes it's just nice to look at so there they're",
    "start": "1911399",
    "end": "1917480"
  },
  {
    "text": "the parameters fit by the model that are used in the in the classification later",
    "start": "1917480",
    "end": "1924240"
  },
  {
    "text": "on so this is just to show you that these are the coefficients that we we put in those 150 data points and it",
    "start": "1924360",
    "end": "1931840"
  },
  {
    "text": "trained and and created this list of coefficients and these coefficients are what are used to do the um to do the the",
    "start": "1931840",
    "end": "1940159"
  },
  {
    "text": "classification later on so let's say we um have a new point",
    "start": "1940159",
    "end": "1946639"
  },
  {
    "text": "we don't know what the classification is so we'll just do a 2d array X new. shape",
    "start": "1946639",
    "end": "1955159"
  },
  {
    "text": "oops sorry X new equals numpy does array",
    "start": "1955159",
    "end": "1960799"
  },
  {
    "text": "X new so there it is there's our data",
    "start": "1960799",
    "end": "1969279"
  },
  {
    "text": "and we want it to be a two-dimensional array even though it's a single point because this this tells us that we have",
    "start": "1969279",
    "end": "1976240"
  },
  {
    "text": "one point in four dimensions so if we're if we're curious what the classification is of that new",
    "start": "1976240",
    "end": "1983120"
  },
  {
    "text": "Point based on this classifier um we do cf. predict X",
    "start": "1983120",
    "end": "1989039"
  },
  {
    "text": "new and then it tells us zero so the um this is a a point type zero so let's see",
    "start": "1989039",
    "end": "1998159"
  },
  {
    "text": "iris. Target names so that's uh the species",
    "start": "1998159",
    "end": "2005960"
  },
  {
    "text": "setosa so this is just a simple simple linear classifier that did did something very",
    "start": "2005960",
    "end": "2012559"
  },
  {
    "text": "similar to what I showed you before you know we plot up and we draw a little line and we say this fits there that",
    "start": "2012559",
    "end": "2018919"
  },
  {
    "text": "fits there this um internally that that's what happened with this learning",
    "start": "2018919",
    "end": "2024240"
  },
  {
    "text": "mechanism okay so here's another uh you might you might be interested um when",
    "start": "2024240",
    "end": "2031519"
  },
  {
    "text": "you're doing this sort of thing rather than just getting out a specific classification value you might might",
    "start": "2031519",
    "end": "2037120"
  },
  {
    "text": "want to get a um an idea of what the probability is of these certain",
    "start": "2037120",
    "end": "2042200"
  },
  {
    "text": "classifications and I'm not going to type this one out it's uh I'm just going to go through it but you can use some",
    "start": "2042200",
    "end": "2048520"
  },
  {
    "text": "another algorithm logistic regression um there's several other algorithms that behave this way as well",
    "start": "2048520",
    "end": "2055000"
  },
  {
    "text": "where when you do your you do your fit to the data and you get out your parameters and then you have a uh you",
    "start": "2055000",
    "end": "2061960"
  },
  {
    "text": "can predict the probability instead of just predicting the label you do predict Pro",
    "start": "2061960",
    "end": "2067760"
  },
  {
    "text": "and you um get out the for this value you get out basically that it's 90%",
    "start": "2067760",
    "end": "2074960"
  },
  {
    "text": "probable that it's the first one it's 9% the second one and one uh one part and",
    "start": "2074960",
    "end": "2081839"
  },
  {
    "text": "10 to the 5ifth the third one so you can get out you can get out a probab probabilistic classification as well",
    "start": "2081839",
    "end": "2089158"
  },
  {
    "text": "so so just uh in case you want to try some of these out here's a several",
    "start": "2089159",
    "end": "2094240"
  },
  {
    "text": "different classifiers that you can use there's logistic regression there's support Vector machines um several",
    "start": "2094240",
    "end": "2101160"
  },
  {
    "text": "different types there's the um stochastic gradient descent classifier",
    "start": "2101160",
    "end": "2106520"
  },
  {
    "text": "neighbors classifier um giian naive Bay so several things",
    "start": "2106520",
    "end": "2113520"
  },
  {
    "text": "like that and you can imagine um using classifiers in in email classification",
    "start": "2113520",
    "end": "2118920"
  },
  {
    "text": "language identification news articles categorize categorization",
    "start": "2118920",
    "end": "2125000"
  },
  {
    "text": "um yeah all these different things looking at at face verification in pictures like is this picture a face is",
    "start": "2125000",
    "end": "2131359"
  },
  {
    "text": "it not um and what we're going to talk about astronomical sources you can do",
    "start": "2131359",
    "end": "2136599"
  },
  {
    "text": "classification as well so we mentioned that um regression is uh is like classification except",
    "start": "2136599",
    "end": "2143839"
  },
  {
    "text": "instead of learning these categorical features you're learning um some sort of floating point value is something",
    "start": "2143839",
    "end": "2150480"
  },
  {
    "text": "between between zero and one inclusive perhaps and so there there's several uh",
    "start": "2150480",
    "end": "2156839"
  },
  {
    "text": "regression models listed here so you can you can try some of those out if you're if you're",
    "start": "2156839",
    "end": "2162960"
  },
  {
    "start": "2163000",
    "end": "2253000"
  },
  {
    "text": "interested um so let's talk real briefly about unsupervised learning now so you",
    "start": "2163319",
    "end": "2169680"
  },
  {
    "text": "notice that what we had before was we uh we took our we took our data we turned",
    "start": "2169680",
    "end": "2176280"
  },
  {
    "text": "them into vectors we use the machine learning algorithm with the labels to fit but in unsupervised learning we",
    "start": "2176280",
    "end": "2182400"
  },
  {
    "text": "don't have any labels so the idea here is that you have maybe you have a bunch",
    "start": "2182400",
    "end": "2187520"
  },
  {
    "text": "of observations but you don't know what they are and you just want to get a better idea of a better idea of what the",
    "start": "2187520",
    "end": "2194160"
  },
  {
    "text": "structure of the data is so for example with uh with astronomical Spectra we take we take images of maybe 100,00",
    "start": "2194160",
    "end": "2203760"
  },
  {
    "text": "points and we have we have a whole bunch of observations of each of those and we're curious what's what's the",
    "start": "2203760",
    "end": "2209119"
  },
  {
    "text": "relationship between all these we don't necessarily know if we don't if we don't use any physical intuition to know what",
    "start": "2209119",
    "end": "2216400"
  },
  {
    "text": "these points are how can we learn about the relationships and this is an unsupervised learning problem so you",
    "start": "2216400",
    "end": "2222839"
  },
  {
    "text": "have feature vectors you get the predictive model and with with the new",
    "start": "2222839",
    "end": "2228040"
  },
  {
    "text": "when you put a new um a new point in do the same thing feature vectors put it",
    "start": "2228040",
    "end": "2233400"
  },
  {
    "text": "through the predictive model and you get some sort of likelihood or clustering or better representation lower dimensional",
    "start": "2233400",
    "end": "2240760"
  },
  {
    "text": "representation something like that so this is this is unsupervised learning the other stuff we were doing was",
    "start": "2240760",
    "end": "2245880"
  },
  {
    "text": "supervised learning so it's just another uh another Paradigm of um of machine",
    "start": "2245880",
    "end": "2254359"
  },
  {
    "start": "2253000",
    "end": "2398000"
  },
  {
    "text": "learning so one uh one really common way of doing unsupervised learning is",
    "start": "2254359",
    "end": "2261040"
  },
  {
    "text": "principal component analysis so",
    "start": "2261040",
    "end": "2267960"
  },
  {
    "text": "um yeah why don't we do this so if we do from sklearn",
    "start": "2268359",
    "end": "2273720"
  },
  {
    "text": "import SK learn. PCA import",
    "start": "2273720",
    "end": "2279800"
  },
  {
    "text": "PCA what did I do wrong decomposition my",
    "start": "2279800",
    "end": "2285520"
  },
  {
    "text": "bad it's a the same data set yeah so again we have",
    "start": "2289520",
    "end": "2295920"
  },
  {
    "text": "our these are our this is our Iris data set so before we we plotted just",
    "start": "2295920",
    "end": "2301920"
  },
  {
    "text": "basically two dimensions of this and we didn't we didn't take into account the other two dimensions",
    "start": "2301920",
    "end": "2307319"
  },
  {
    "text": "um but with PCA we can we can project it down so that we can look at all the uh",
    "start": "2307319",
    "end": "2313200"
  },
  {
    "text": "all the information so PCA equals let's let's fit this with",
    "start": "2313200",
    "end": "2321720"
  },
  {
    "text": "uh two components and we'll whiten it which",
    "start": "2321720",
    "end": "2327640"
  },
  {
    "text": "means which means we're basically uh moving all the data to the same",
    "start": "2327640",
    "end": "2334200"
  },
  {
    "text": "scale and just as before we do pca.",
    "start": "2334400",
    "end": "2339400"
  },
  {
    "text": "fitx um but this time remember we don't put in the yvalue because this is unsupervised so we don't know what the",
    "start": "2340839",
    "end": "2346640"
  },
  {
    "text": "CATE categories are um and",
    "start": "2346640",
    "end": "2351880"
  },
  {
    "text": "PCA see X new equals PCA do sorry see y",
    "start": "2351880",
    "end": "2357160"
  },
  {
    "text": "equals pca. transform X so we're we're transforming",
    "start": "2357160",
    "end": "2364040"
  },
  {
    "text": "we we fit on the data X and we're transforming on the same data and I need to type",
    "start": "2364040",
    "end": "2370599"
  },
  {
    "text": "equals shoot there we",
    "start": "2370599",
    "end": "2375440"
  },
  {
    "text": "go oh sorry need our we need our we need our um",
    "start": "2378480",
    "end": "2386839"
  },
  {
    "text": "instantiated object which is lower case PCA so now if we look at y.",
    "start": "2386839",
    "end": "2393960"
  },
  {
    "text": "shape yeah so the this is um if we look at this model",
    "start": "2393960",
    "end": "2400720"
  },
  {
    "start": "2398000",
    "end": "2583000"
  },
  {
    "text": "right here basically the the fit is taking our data putting it through the algorithm and getting a predictive model",
    "start": "2400720",
    "end": "2408079"
  },
  {
    "text": "and the transform is taking our data and turning it into this new representation",
    "start": "2408079",
    "end": "2413160"
  },
  {
    "text": "right here so you can do that you can do that transform with um a new",
    "start": "2413160",
    "end": "2418640"
  },
  {
    "text": "feature into the new representation or a new a new set of data or you can do that",
    "start": "2418640",
    "end": "2424599"
  },
  {
    "text": "transform with the original data you trained on and you get this new",
    "start": "2424599",
    "end": "2429760"
  },
  {
    "text": "representation and in our case the uh does that make",
    "start": "2429760",
    "end": "2435400"
  },
  {
    "text": "sense yeah yeah so our our original data is as in four",
    "start": "2439319",
    "end": "2444440"
  },
  {
    "text": "dimensions and our next this data is in two Dimensions because we chose",
    "start": "2444440",
    "end": "2449640"
  },
  {
    "text": "um up here we chose and components is two",
    "start": "2449640",
    "end": "2454760"
  },
  {
    "text": "yeah so this is nice right because we we can't really do a four-dimensional scatter plot but we can do a",
    "start": "2454760",
    "end": "2460720"
  },
  {
    "text": "two-dimensional scatter plot so let's do um",
    "start": "2460720",
    "end": "2465800"
  },
  {
    "text": "scatter y colon z y colon one and our",
    "start": "2465800",
    "end": "2472920"
  },
  {
    "text": "color is the lowercase Y which is our our",
    "start": "2472920",
    "end": "2477560"
  },
  {
    "text": "classifications okay so we're we're good to go okay so if we do scatter y again",
    "start": "2482160",
    "end": "2488800"
  },
  {
    "text": "colon comma 0er y colon comma 1 and then our color is y right",
    "start": "2488800",
    "end": "2497119"
  },
  {
    "text": "here then we see that this is the two-dimensional projection of the data taking into account taking into account",
    "start": "2497119",
    "end": "2504319"
  },
  {
    "text": "all the dimensions and then asking for in an unsupervised manner what's the best projection so this is interesting",
    "start": "2504319",
    "end": "2511520"
  },
  {
    "text": "because we we clearly see that these blue points are are completely different than the other ones and unlike our other",
    "start": "2511520",
    "end": "2518160"
  },
  {
    "text": "our other plot of this it does a little better job of separating out the red and the green points right so this is useful",
    "start": "2518160",
    "end": "2524720"
  },
  {
    "text": "because you could imagine um you know going from four dimensions to two Dimensions is not the most useful thing",
    "start": "2524720",
    "end": "2531200"
  },
  {
    "text": "but imagine if you had a thousand dimensions and you wanted to visualize the relationships between the data",
    "start": "2531200",
    "end": "2536640"
  },
  {
    "text": "that'd be difficult but you can project down to two or three dimensions and see these sorts of",
    "start": "2536640",
    "end": "2542160"
  },
  {
    "text": "relationships the other way this is useful um sometimes people use it um to speed up routines so if you have",
    "start": "2542160",
    "end": "2548920"
  },
  {
    "text": "something like say a text document that you're you're breaking up and you end up with a million features um your machine",
    "start": "2548920",
    "end": "2556119"
  },
  {
    "text": "learning algorithm might not scale very well to a million features some of these scale as n s or n cubed so it's it's",
    "start": "2556119",
    "end": "2563680"
  },
  {
    "text": "difficult but if you can if you can reduce that dimensionality keeping the most interesting data then you end up",
    "start": "2563680",
    "end": "2570839"
  },
  {
    "text": "with something that'll run a lot faster so so that's how this can be useful",
    "start": "2570839",
    "end": "2578160"
  },
  {
    "text": "so that's unsupervised learning um we went through all that that's that",
    "start": "2578359",
    "end": "2586800"
  },
  {
    "text": "same plot I think yeah pretty close different colors but same yeah that's a",
    "start": "2586800",
    "end": "2592680"
  },
  {
    "text": "good question so maybe one way of thinking about it is um if if you're reading White House",
    "start": "2592680",
    "end": "2599680"
  },
  {
    "text": "documents then you know that",
    "start": "2599680",
    "end": "2604359"
  },
  {
    "text": "um you know that in in any sentence that the word president president shows up",
    "start": "2605079",
    "end": "2611760"
  },
  {
    "text": "then probably the name Obama is going to show up as well so if you if you if you're just looking for president and",
    "start": "2611760",
    "end": "2618079"
  },
  {
    "text": "Obama and those are your two features they'll probably be really correlated if you plot the occurrences of President",
    "start": "2618079",
    "end": "2624200"
  },
  {
    "text": "versus the occurrences of Obama it'll be this nice big line so what that's telling you is that the the second",
    "start": "2624200",
    "end": "2630119"
  },
  {
    "text": "feature doesn't tell you very much about that sentence so you have these two features you're your measuring and both",
    "start": "2630119",
    "end": "2637520"
  },
  {
    "text": "of them pretty much tell you if the sentence is talking about the president so what the dimensionality reduction",
    "start": "2637520",
    "end": "2643400"
  },
  {
    "text": "does is it um it can look for those sorts of correlations and remove the",
    "start": "2643400",
    "end": "2648760"
  },
  {
    "text": "unimportant points so in the case of PCA if you had uh if you plotted uh",
    "start": "2648760",
    "end": "2654359"
  },
  {
    "text": "president the occurrence of President and currence of Obama you'd have this nice straight line what PCA would do is",
    "start": "2654359",
    "end": "2660480"
  },
  {
    "text": "it would say um well it's not this direction that's most important or this direction it's this combination that's",
    "start": "2660480",
    "end": "2666720"
  },
  {
    "text": "most important so it take that that 1D thing and throw out everything else and then you reduce your data set size so",
    "start": "2666720",
    "end": "2673640"
  },
  {
    "text": "that's that's kind of the does that make sense yeah so they're you're essentially removing correlations that aren't adding",
    "start": "2673640",
    "end": "2680680"
  },
  {
    "text": "any information to your classification yeah this is actually in the this is in",
    "start": "2680680",
    "end": "2685760"
  },
  {
    "text": "the um pyit learn documentation so we have a a script here and this is",
    "start": "2685760",
    "end": "2692640"
  },
  {
    "text": "part of our example Gallery so I just just uh embedded that",
    "start": "2692640",
    "end": "2698000"
  },
  {
    "text": "in so it might be a little different in the notebook style so yeah I talked",
    "start": "2698000",
    "end": "2703400"
  },
  {
    "start": "2703000",
    "end": "3023000"
  },
  {
    "text": "about some of those stuff um another dimensionality that you",
    "start": "2703400",
    "end": "2708760"
  },
  {
    "text": "reduction thing that you can do is um or not not dimensionality reduction but another Su unsupervised learning method",
    "start": "2708760",
    "end": "2715720"
  },
  {
    "text": "that you can do is clustering so for example we know um looking at this",
    "start": "2715720",
    "end": "2721960"
  },
  {
    "text": "because because we've put our colors here telling us which one these is which",
    "start": "2721960",
    "end": "2727760"
  },
  {
    "text": "um we kind of know where the clusters of points are we know this is here this is here this is here but if we if this were",
    "start": "2727760",
    "end": "2735280"
  },
  {
    "text": "higher dimensional data if we weren't able to plot it like this you might wonder if you could automatically find",
    "start": "2735280",
    "end": "2741640"
  },
  {
    "text": "the fact that these points cluster together and they're separated from the rest so that's another unsupervised",
    "start": "2741640",
    "end": "2747880"
  },
  {
    "text": "learning technique and um one of the more common ways to do this is with um K",
    "start": "2747880",
    "end": "2753880"
  },
  {
    "text": "means so K means is an algorithm that does this sort of thing and I'm actually just going to",
    "start": "2753880",
    "end": "2759800"
  },
  {
    "text": "uh close this just for the sake of time I'm going to turn on um dock test mode",
    "start": "2759800",
    "end": "2766520"
  },
  {
    "text": "right",
    "start": "2766520",
    "end": "2768720"
  },
  {
    "text": "here oh I didn't uh yeah so X PCA up there I called",
    "start": "2773839",
    "end": "2781040"
  },
  {
    "text": "called that y so let's do that and then we can um paste all this",
    "start": "2781040",
    "end": "2787760"
  },
  {
    "text": "in again and so what we're doing here is we're calling a um just like before we",
    "start": "2787760",
    "end": "2794520"
  },
  {
    "text": "import something called K means this is our classifier object um we just initialize the random",
    "start": "2794520",
    "end": "2802040"
  },
  {
    "text": "State here because K means depends on uh it uses Randomness in its um in its",
    "start": "2802040",
    "end": "2809880"
  },
  {
    "text": "algorithm and then uh we Define our K means classifier object and then we",
    "start": "2809880",
    "end": "2817040"
  },
  {
    "text": "actually did the definition and the fit all at the same time right here so what I did was I actually um I trained this K",
    "start": "2817040",
    "end": "2824720"
  },
  {
    "text": "means classifier on the output of our last of our last unsupervised learning",
    "start": "2824720",
    "end": "2830520"
  },
  {
    "text": "thing so this was the the PCA projection the two-dimensional projection of our",
    "start": "2830520",
    "end": "2836640"
  },
  {
    "text": "data um and now if we want to oh where did I where does this plot 2D come",
    "start": "2836640",
    "end": "2844720"
  },
  {
    "text": "from so yeah let's just",
    "start": "2844720",
    "end": "2850839"
  },
  {
    "text": "uh let's scatter again",
    "start": "2850839",
    "end": "2855599"
  },
  {
    "text": "um oh yeah so here this is what I'm looking for k means. um",
    "start": "2857480",
    "end": "2863280"
  },
  {
    "text": "labels that's a that's a a length 150 Vector so that",
    "start": "2863280",
    "end": "2871040"
  },
  {
    "text": "this is the labels that were were given to us by this unsupervised k mean",
    "start": "2871040",
    "end": "2877000"
  },
  {
    "text": "um algorithm so just as before we can scatter our X",
    "start": "2877000",
    "end": "2883079"
  },
  {
    "text": "PCA colon Zer X PCA colon one C equals our K",
    "start": "2883079",
    "end": "2891800"
  },
  {
    "text": "means do labels and this is what we end up with",
    "start": "2891800",
    "end": "2897920"
  },
  {
    "text": "so let's see if I can what we saw before when when we look at the actual labels",
    "start": "2897920",
    "end": "2904720"
  },
  {
    "text": "was I",
    "start": "2904720",
    "end": "2907640"
  },
  {
    "text": "did I ruin that",
    "start": "2913839",
    "end": "2916880"
  },
  {
    "text": "yeah trying to get two different figures here I'll get it eventually there we go",
    "start": "2919640",
    "end": "2925760"
  },
  {
    "text": "so on one side we see our our C me's labels so this is what this is what C",
    "start": "2925760",
    "end": "2931359"
  },
  {
    "text": "thought our points were without without any indication without any training data",
    "start": "2931359",
    "end": "2936440"
  },
  {
    "text": "on what the categorizations were and then on this side was our actual categorizations that we know so you can",
    "start": "2936440",
    "end": "2943680"
  },
  {
    "text": "see that uh as you might expect caman does pretty well when things are very",
    "start": "2943680",
    "end": "2948920"
  },
  {
    "text": "well separated but when you have two different clumps that kind of mesh together you you don't necessarily get",
    "start": "2948920",
    "end": "2955040"
  },
  {
    "text": "that that's because this is a this was an unsupervised method just basically looking looking at this data it knew",
    "start": "2955040",
    "end": "2961760"
  },
  {
    "text": "nothing about the intrinsic classification so and I told it to look for three",
    "start": "2961760",
    "end": "2969799"
  },
  {
    "text": "too yeah yeah so that that's another thing you can you can tell it to look for however many you want so a lot of",
    "start": "2969799",
    "end": "2976240"
  },
  {
    "text": "these things have have tunable parameters that you have to decide how how you're going to set so it takes a",
    "start": "2976240",
    "end": "2983680"
  },
  {
    "text": "while but you can you can figure out how much",
    "start": "2983680",
    "end": "2991359"
  },
  {
    "text": "what yeah so second learn he was asking about hyper parameter selection and that's the term for choosing like for",
    "start": "2992119",
    "end": "2998799"
  },
  {
    "text": "for instance how many clusters you're looking for or uh how many dimensions you're projecting to um we're we're",
    "start": "2998799",
    "end": "3005880"
  },
  {
    "text": "working on that right now on getting some good hyperparameter selection tools but in pyit learn right now there's not",
    "start": "3005880",
    "end": "3012079"
  },
  {
    "text": "much built in there's there's a little bit of stuff",
    "start": "3012079",
    "end": "3018240"
  },
  {
    "text": "on Cross validation but it's not very mature yet so a lot of that you you end up having to do",
    "start": "3018240",
    "end": "3024440"
  },
  {
    "start": "3023000",
    "end": "3473000"
  },
  {
    "text": "yourself so this is just a a list of some of the",
    "start": "3024440",
    "end": "3029799"
  },
  {
    "text": "unsupervised learning methods that are available there as well so you can look",
    "start": "3029799",
    "end": "3035160"
  },
  {
    "text": "through that on your own time if you'd like and um so this one's fun this is",
    "start": "3035160",
    "end": "3042000"
  },
  {
    "text": "this is something that if you go to if you're on this page and you click this",
    "start": "3042000",
    "end": "3047040"
  },
  {
    "text": "link there's this little script it's a it's a little matplot lib guey that um",
    "start": "3047040",
    "end": "3052920"
  },
  {
    "text": "doesm classification so you can click if you go back back it's this",
    "start": "3052920",
    "end": "3060319"
  },
  {
    "text": "little link right here under 2324 click that and then um you can",
    "start": "3060319",
    "end": "3066480"
  },
  {
    "text": "download this file um yeah this is just a little python",
    "start": "3066480",
    "end": "3074040"
  },
  {
    "text": "script so if I save the file then I can",
    "start": "3074040",
    "end": "3079480"
  },
  {
    "text": "um let's open up a new terminal um put the file right here I think yeah so you",
    "start": "3079480",
    "end": "3086720"
  },
  {
    "text": "run this file this is a an interesting thing that helps you see how support Vector machines work so the right Mouse",
    "start": "3086720",
    "end": "3094319"
  },
  {
    "text": "button lets you put in one type of point the left Mouse button put lets you put",
    "start": "3094319",
    "end": "3099680"
  },
  {
    "text": "in another type of point and then we let's do a linear fit and click fit and you can see that",
    "start": "3099680",
    "end": "3107400"
  },
  {
    "text": "um that it separates them out this way and um in support Vector machines these",
    "start": "3107400",
    "end": "3113640"
  },
  {
    "text": "points that are circled right here these are the ones that are the so-called support vectors because um essentially",
    "start": "3113640",
    "end": "3121160"
  },
  {
    "text": "the reason they're support vectors is because oops I didn't mean to add that one let's",
    "start": "3121160",
    "end": "3127079"
  },
  {
    "text": "H do this one again click fit so the reason these are",
    "start": "3127079",
    "end": "3132359"
  },
  {
    "text": "called support vectors is because it really doesn't matter what's happening out here right I can add as many points as I want out here and it's not changing",
    "start": "3132359",
    "end": "3139400"
  },
  {
    "text": "the classification but um this one if this one is perturbed or if there's another",
    "start": "3139400",
    "end": "3145319"
  },
  {
    "text": "Point added near here then it does change the classification so that support Vector machines kind of work",
    "start": "3145319",
    "end": "3151079"
  },
  {
    "text": "that way they look for the nice separable space between these groups where they can fit a a big region like",
    "start": "3151079",
    "end": "3158319"
  },
  {
    "text": "that so so this is a this is a linear classifier and if you guys have this",
    "start": "3158319",
    "end": "3164160"
  },
  {
    "text": "open um yeah if we put one point over here um",
    "start": "3164160",
    "end": "3173079"
  },
  {
    "text": "that color then things get a get a little less um neat right so you can see",
    "start": "3173079",
    "end": "3178599"
  },
  {
    "text": "that it's it's kind of kind of tweaked the alignment and more more points end up mattering as support",
    "start": "3178599",
    "end": "3184720"
  },
  {
    "text": "vectors um but you can you can play around with this yourself and it's it's kind of interesting actually to see what",
    "start": "3184720",
    "end": "3191200"
  },
  {
    "text": "you can do so let me clear that out so we've we've been doing a nice uh linear fit",
    "start": "3191200",
    "end": "3197798"
  },
  {
    "text": "here so we can we can fit a linear model pretty well to that sort of data but you",
    "start": "3197880",
    "end": "3203599"
  },
  {
    "text": "might ask what happens when when um a linear model doesn't fit the data so",
    "start": "3203599",
    "end": "3209040"
  },
  {
    "text": "well so if we have something that looks like this so in that case",
    "start": "3209040",
    "end": "3217319"
  },
  {
    "text": "uh actually let me clear it because it was getting a little messy if we have a cluster here and then you know some",
    "start": "3217319",
    "end": "3223000"
  },
  {
    "text": "points there some points there some points there this is",
    "start": "3223000",
    "end": "3228480"
  },
  {
    "text": "something that clearly should be separable right we should be able to find a dividing line right here but it's",
    "start": "3228480",
    "end": "3234760"
  },
  {
    "text": "just that this is not a linear problem there's no single straight line that you can draw that will divide those points",
    "start": "3234760",
    "end": "3240839"
  },
  {
    "text": "out so in that case you can you can uh make the model a little more complicated instead of using a little linear model",
    "start": "3240839",
    "end": "3247200"
  },
  {
    "text": "you can use um a gaussian model so that's what this RBF is right here that",
    "start": "3247200",
    "end": "3252960"
  },
  {
    "text": "stands for radial basis function so it's basically a gaussian model to the data and if we click fit and see well",
    "start": "3252960",
    "end": "3261319"
  },
  {
    "text": "it's it did um it does pretty well right so but the the Gan model fits",
    "start": "3261319",
    "end": "3269839"
  },
  {
    "text": "some it's very very strange it's really sensitive to these parameters right here so we change some of these parameters we",
    "start": "3269839",
    "end": "3277040"
  },
  {
    "text": "can see what that does what if we do that a little",
    "start": "3277040",
    "end": "3282079"
  },
  {
    "text": "less yeah so you can play around with this and and see what these uh what",
    "start": "3282079",
    "end": "3287480"
  },
  {
    "text": "these support Vector machines do in this classification here so one thing if you",
    "start": "3287480",
    "end": "3292880"
  },
  {
    "text": "guys have this open right now um one thing that's interesting is",
    "start": "3292880",
    "end": "3298000"
  },
  {
    "text": "asking about how how can you fit an exor problem so an exor problem is basically",
    "start": "3298000",
    "end": "3304079"
  },
  {
    "text": "like this you have four points with uh similar similar points in opposite",
    "start": "3304079",
    "end": "3311559"
  },
  {
    "text": "corners and the question is can can this be can this be linearly",
    "start": "3311559",
    "end": "3317720"
  },
  {
    "text": "separated can you yeah we we can see that this is not linear linear linearly separable if",
    "start": "3324000",
    "end": "3331920"
  },
  {
    "text": "we do that let me go back to the hyperplanes so basically one one Lin one line doesn't",
    "start": "3331920",
    "end": "3339920"
  },
  {
    "text": "really doesn't really do much there but if we use a polinomial kernel for example it's easier to see these these",
    "start": "3339920",
    "end": "3347920"
  },
  {
    "text": "types of kernels with uh with the surface we can try to fit these things so if you have this open there's uh",
    "start": "3347920",
    "end": "3355960"
  },
  {
    "text": "kind of an exercise listed on",
    "start": "3355960",
    "end": "3361880"
  },
  {
    "text": "this sheet right here where it where is it so um should play around with this a",
    "start": "3361960",
    "end": "3369039"
  },
  {
    "text": "little bit and see if you can construct a problem here with less than 10 points",
    "start": "3369039",
    "end": "3374520"
  },
  {
    "text": "so you have fewer than 10 points total where the predictive accuracy is um 50%",
    "start": "3374520",
    "end": "3380720"
  },
  {
    "text": "and the accuracy is shown um in the in the terminal where you see if I can get these both open right",
    "start": "3380720",
    "end": "3388760"
  },
  {
    "text": "here in the terminal where you're uh where you opened this you can see the accuracy right there so if I fit you",
    "start": "3388760",
    "end": "3395960"
  },
  {
    "text": "know you have some there and that accuracy is",
    "start": "3395960",
    "end": "3404319"
  },
  {
    "text": "100% did so do you uh do you guys want to",
    "start": "3405079",
    "end": "3410799"
  },
  {
    "text": "play around with that or do you want to uh want to move on",
    "start": "3410799",
    "end": "3415880"
  },
  {
    "text": "play Fernando said play so yeah see if you can",
    "start": "3415880",
    "end": "3422359"
  },
  {
    "text": "um see if you can de Define a set with those 10 points where the best linear",
    "start": "3422359",
    "end": "3427640"
  },
  {
    "text": "model so you're you're clicking right here has an accuracy of",
    "start": "3427640",
    "end": "3433400"
  },
  {
    "text": "50% I know I might try it too that's",
    "start": "3434160",
    "end": "3439440"
  },
  {
    "text": "100% that's 80%",
    "start": "3439440",
    "end": "3446799"
  },
  {
    "text": "it starts to look really messy after a",
    "start": "3448640",
    "end": "3452558"
  },
  {
    "text": "while so anyway when you uh if your best if your best accuracy is 50% that means",
    "start": "3459200",
    "end": "3465559"
  },
  {
    "text": "that essentially your classifier is doing as well as you could just randomly guessing",
    "start": "3465559",
    "end": "3471880"
  },
  {
    "text": "right so if we click over to the next section here this this is a the this next section is kind of",
    "start": "3471880",
    "end": "3479039"
  },
  {
    "start": "3473000",
    "end": "3599000"
  },
  {
    "text": "practical advice and this this has some really useful stuff in it about um",
    "start": "3479039",
    "end": "3484680"
  },
  {
    "text": "basically overfitting underfitting and um and how you can use cross validation",
    "start": "3484680",
    "end": "3491240"
  },
  {
    "text": "and and tools like that in order to to understand what's going on I'm not going to go through the details of it if you",
    "start": "3491240",
    "end": "3497440"
  },
  {
    "text": "want to uh if you want to read about that you can you can check out this tutorial later but I I want to give you",
    "start": "3497440",
    "end": "3504839"
  },
  {
    "text": "essentially a a feeling of what it means to be overfit or underfit so this is an",
    "start": "3504839",
    "end": "3510799"
  },
  {
    "text": "example a simple example where you have house size versus price and the data",
    "start": "3510799",
    "end": "3516559"
  },
  {
    "text": "points the x's in all three of these figures are the same and we're basically fitting a polom to this data and we can",
    "start": "3516559",
    "end": "3523960"
  },
  {
    "text": "think about that polom as being our um our function that our function that's",
    "start": "3523960",
    "end": "3530079"
  },
  {
    "text": "that's learning the shape of the data right so the number of parameters you use in the PO polinomial is is really",
    "start": "3530079",
    "end": "3536839"
  },
  {
    "text": "really important if you use just a single parameter that means you're doing um you're basically fitting a line to",
    "start": "3536839",
    "end": "3542520"
  },
  {
    "text": "this data and you can see that this is this is underfit if you were to uh if",
    "start": "3542520",
    "end": "3547720"
  },
  {
    "text": "you were to start adding other points where this data looks like it it is you would have a lot of error right because",
    "start": "3547720",
    "end": "3554400"
  },
  {
    "text": "this line doesn't really fit the data very well D equals two is getting closer",
    "start": "3554400",
    "end": "3559799"
  },
  {
    "text": "if you if you added more points along here you'd expect they'd probably fall somewhere near that line right so this",
    "start": "3559799",
    "end": "3566920"
  },
  {
    "text": "is kind of the happy medium and then D equal 6 over here is overfit so what overfit means is that you have too many",
    "start": "3566920",
    "end": "3573920"
  },
  {
    "text": "parameters for your data and um for that reason it it can fit your training data",
    "start": "3573920",
    "end": "3580440"
  },
  {
    "text": "perfectly but for example if you added a point right here which would make sense in light of the the trend of the data",
    "start": "3580440",
    "end": "3587000"
  },
  {
    "text": "right you add a point right there that's going to be off by a factor of you know a thousand from what the fit says so um",
    "start": "3587000",
    "end": "3595000"
  },
  {
    "text": "it's really important when you're when you're doing this machine learning stuff to uh to get a handle on how well your",
    "start": "3595000",
    "end": "3602160"
  },
  {
    "text": "classifier is or regressor is fitting the data because um if you're",
    "start": "3602160",
    "end": "3607880"
  },
  {
    "text": "underfitting then you'll get you'll have a lot of error when you try to predict a new sample if you're overfitting you can",
    "start": "3607880",
    "end": "3614440"
  },
  {
    "text": "have even more error error when you predict a new sample and you want to be able to land somewhere in",
    "start": "3614440",
    "end": "3620839"
  },
  {
    "text": "between so um just to give you a preview of all this stuff there are ways to do this with um cross validation where",
    "start": "3620839",
    "end": "3627799"
  },
  {
    "text": "basically you're uh you're plotting the degree of Fit versus the error on uh on",
    "start": "3627799",
    "end": "3633599"
  },
  {
    "text": "the test set and the training set um you can use that to decide where where your",
    "start": "3633599",
    "end": "3639480"
  },
  {
    "text": "classifier is going wrong you can plot these sort of Curves with the training set size I'm just going through this",
    "start": "3639480",
    "end": "3645599"
  },
  {
    "text": "quickly but um you can look at it later if if you're interested in how to apply these machine learning algorithms in",
    "start": "3645599",
    "end": "3653400"
  },
  {
    "text": "practice you I'm on um 2.3.3 practical advice yeah practical",
    "start": "3653520",
    "end": "3661680"
  },
  {
    "text": "advice so um yeah if you're interested if you're interested in learning more about that that's a that's a good place",
    "start": "3661680",
    "end": "3667559"
  },
  {
    "text": "to look before you start applying these things to data because there's some important stuff in there um but I want to go to the the",
    "start": "3667559",
    "end": "3675559"
  },
  {
    "text": "stuff that I love which is in this next section 234 oh",
    "start": "3675559",
    "end": "3681119"
  },
  {
    "text": "no oh there it goes I thought my image wasn't loading this is",
    "start": "3681119",
    "end": "3687640"
  },
  {
    "text": "um this is an example so for the last uh do we have about half an hour or so left",
    "start": "3687640",
    "end": "3693280"
  },
  {
    "text": "15 minutes something like that for the last little bit I want to give you a chance to uh to actually try some of",
    "start": "3693280",
    "end": "3699039"
  },
  {
    "text": "this in practice and what we're going to do is use some astronomical data so what we're going to look at um let me scroll",
    "start": "3699039",
    "end": "3705160"
  },
  {
    "text": "down here in astronomy often we want to be able to distinguish um quickly",
    "start": "3705160",
    "end": "3711359"
  },
  {
    "text": "distinguish between different types of astronomical sources um in order to figure out if we want to",
    "start": "3711359",
    "end": "3717400"
  },
  {
    "text": "follow them up or not and you know send if we want to slew another telescope over there and get more detailed",
    "start": "3717400",
    "end": "3724279"
  },
  {
    "text": "information um and these are some examples of sources it it might look better on your own computer screen it's",
    "start": "3724279",
    "end": "3729799"
  },
  {
    "text": "a little the resolution is not so good here but we have on the left this is what a star looks like in a picture you",
    "start": "3729799",
    "end": "3736319"
  },
  {
    "text": "see that little dot at the center of the screen this is what a Galaxy looks like so you have this nice diffus thing and",
    "start": "3736319",
    "end": "3742160"
  },
  {
    "text": "over here this is what a quazar looks like and aazar is um it's essentially",
    "start": "3742160",
    "end": "3747400"
  },
  {
    "text": "the a super massive black hole at the center of a very very distant Galaxy and",
    "start": "3747400",
    "end": "3753359"
  },
  {
    "text": "because these black holes can weigh up to about 10 billion times the mass of the Sun they have this intense amount of",
    "start": "3753359",
    "end": "3760119"
  },
  {
    "text": "of mass intense amount of gravitational energy and they can outshine the the",
    "start": "3760119",
    "end": "3765359"
  },
  {
    "text": "entire galaxy that they live in so the net result is is that you get these very very distant objects that are way too",
    "start": "3765359",
    "end": "3771960"
  },
  {
    "text": "small to be resolved and we see light from them that's about as bright as the stars um in the far reaches of our",
    "start": "3771960",
    "end": "3779520"
  },
  {
    "text": "galaxy so in in a single image all you see is a little point source just like you do with a star so the question is",
    "start": "3779520",
    "end": "3786319"
  },
  {
    "text": "can we design a machine learning algorithm that will tell us whether we're looking at a star or at a",
    "start": "3786319",
    "end": "3793160"
  },
  {
    "text": "quazar this is important because you want um if you're if you're interested in studying quazars you want to be able",
    "start": "3793160",
    "end": "3799799"
  },
  {
    "text": "to look out in the sky and find these and then um use your your and expensive",
    "start": "3799799",
    "end": "3805319"
  },
  {
    "text": "telescopes like the the kek 10 met telescope things like that um and only",
    "start": "3805319",
    "end": "3810440"
  },
  {
    "text": "use that time on the objects that you know are already interesting or that you know are going to be interesting with a",
    "start": "3810440",
    "end": "3816480"
  },
  {
    "text": "high probability so that's what um this example is about and essentially what we're looking at the the data that we're",
    "start": "3816480",
    "end": "3823319"
  },
  {
    "text": "going to look at for each of these is the colors through um different filters",
    "start": "3823319",
    "end": "3828839"
  },
  {
    "text": "so what I have plotted up here is uh this is the exam an example of a spectrum so spectrum is is basically",
    "start": "3828839",
    "end": "3834880"
  },
  {
    "text": "this is the wavelength of light so the the color and very small deviations or",
    "start": "3834880",
    "end": "3840240"
  },
  {
    "text": "very small bins and this is the flux as a function of that that wavelength so",
    "start": "3840240",
    "end": "3845720"
  },
  {
    "text": "this is what a spectrum looks like and if we if we had a spectrum this for example is a is a bright blue star it's",
    "start": "3845720",
    "end": "3852680"
  },
  {
    "text": "actually the spectrum of the star Vega in um in the constellation",
    "start": "3852680",
    "end": "3857760"
  },
  {
    "text": "lra and if we have a spectrum of these objects we can tell that we can tell the difference between a star and a quazar",
    "start": "3857760",
    "end": "3864359"
  },
  {
    "text": "pretty easily but these Spectra especially for faint objects take a long long time to uh to observe so instead",
    "start": "3864359",
    "end": "3872319"
  },
  {
    "text": "what we do is we look in these filters in these pass bands so you can imagine that we we stick a filter on the",
    "start": "3872319",
    "end": "3879160"
  },
  {
    "text": "telescope that has this width in in spectral space so essentially what it",
    "start": "3879160",
    "end": "3884599"
  },
  {
    "text": "does is it integrates everything inside this filter and returns a s single value",
    "start": "3884599",
    "end": "3891359"
  },
  {
    "text": "so these are the filters from the Sloan digital Sky survey it measured in the the uand gband rband I band and zband so",
    "start": "3891359",
    "end": "3899440"
  },
  {
    "text": "for each um for each object we have um five different",
    "start": "3899440",
    "end": "3906279"
  },
  {
    "text": "numbers yeah all of the all of the photometric data yeah and then there",
    "start": "3906279",
    "end": "3911319"
  },
  {
    "text": "there are also um there's a component of sdss that also has Spectra as well but there there's something like how how",
    "start": "3911319",
    "end": "3919000"
  },
  {
    "text": "many do you know how many photometric objects there are there something like eight eight or n million photometric objects objects and um under 1 million",
    "start": "3919000",
    "end": "3927760"
  },
  {
    "text": "that's more than that it's it's in it's in the tens of millions of photometric objects and and about a million",
    "start": "3927760",
    "end": "3934039"
  },
  {
    "text": "spectroscopic objects so we have basically a a data set of a million points that are very well classified",
    "start": "3934039",
    "end": "3941000"
  },
  {
    "text": "very well observed with this sort of data and then we have a data set of tens of millions of points that have much",
    "start": "3941000",
    "end": "3947559"
  },
  {
    "text": "sparer data much much less data but we can so so we want to use we want to use",
    "start": "3947559",
    "end": "3953039"
  },
  {
    "text": "the well observed things as a training set so that we can classify the stuff that we don't have the good observations",
    "start": "3953039",
    "end": "3959039"
  },
  {
    "text": "of so it's a Well posed machine learning problem and if we look",
    "start": "3959039",
    "end": "3965838"
  },
  {
    "text": "um yeah let's let's take a look at the data right here so um if you",
    "start": "3967200",
    "end": "3973799"
  },
  {
    "text": "are in your where's my stuff Pi data astronomy",
    "start": "3973799",
    "end": "3982960"
  },
  {
    "text": "so you're in this directory um that was on the on the USB",
    "start": "3982960",
    "end": "3989000"
  },
  {
    "text": "stick and we have uh we have some files in um in the data",
    "start": "3989599",
    "end": "3997720"
  },
  {
    "text": "file in in the data directory there so let's let's import oops I need IPython",
    "start": "3997720",
    "end": "4005798"
  },
  {
    "text": "I it's not going to play nice with both screens so I'm just going to go ahead and copy copy this because it'll make it",
    "start": "4009319",
    "end": "4017920"
  },
  {
    "text": "make it easy and you can do the same thing so we we get our train data and test data so train",
    "start": "4017920",
    "end": "4024640"
  },
  {
    "text": "data. shape um this is a this is a record",
    "start": "4024640",
    "end": "4030039"
  },
  {
    "text": "array so we have 505,000 training objects and if we do train data. D type.",
    "start": "4030039",
    "end": "4036520"
  },
  {
    "text": "names we can see the different things that are that are in that",
    "start": "4036520",
    "end": "4042920"
  },
  {
    "text": "not they're not those of",
    "start": "4042920",
    "end": "4049640"
  },
  {
    "text": "us oh yeah if you if you yeah if you clone the repo then you",
    "start": "4049640",
    "end": "4056279"
  },
  {
    "text": "can go to um you have to have to fetch the data so if you go to to",
    "start": "4056279",
    "end": "4062119"
  },
  {
    "text": "data um sdss colors you can",
    "start": "4062119",
    "end": "4068240"
  },
  {
    "text": "uh python fetch data and that'll download it from my website",
    "start": "4068240",
    "end": "4075000"
  },
  {
    "text": "and I already have it so it's",
    "start": "4075000",
    "end": "4078240"
  },
  {
    "text": "there so um we're going to set up our training data and [Music]",
    "start": "4081920",
    "end": "4089459"
  },
  {
    "text": "for we can use this code right here I'm just gonna I'm just going to copy and paste it so we can get through",
    "start": "4090000",
    "end": "4097040"
  },
  {
    "text": "quickly our y train our X test and our y",
    "start": "4097040",
    "end": "4102838"
  },
  {
    "text": "test so we have the the training data that we're using which is a a",
    "start": "4102839",
    "end": "4108640"
  },
  {
    "text": "four four features um the test data which also has four features and then we have our",
    "start": "4108640",
    "end": "4115758"
  },
  {
    "text": "predicted or our true observed labels why and then these these y tests these",
    "start": "4115759",
    "end": "4121120"
  },
  {
    "text": "are um predicted labels from uh from the literature so we can compare our results",
    "start": "4121120",
    "end": "4126440"
  },
  {
    "text": "with what what people in the literature are getting with more sophisticated values so we're going to use um as a as",
    "start": "4126440",
    "end": "4132920"
  },
  {
    "text": "a first step we're going use the naive Bay algorithm so this basically takes",
    "start": "4132920",
    "end": "4138040"
  },
  {
    "text": "these clusters of data and says this looks like a gan that looks like a gan",
    "start": "4138040",
    "end": "4143318"
  },
  {
    "text": "and which G which Gan is the is the test Point closest",
    "start": "4143319",
    "end": "4148960"
  },
  {
    "text": "to I'm just gonna run through this too so",
    "start": "4148960",
    "end": "4154758"
  },
  {
    "text": "we we um import naive Bays we instantiate our object we do the fit as",
    "start": "4154759",
    "end": "4160758"
  },
  {
    "text": "before and we do the predict and now we have uh some predicted",
    "start": "4160759",
    "end": "4166560"
  },
  {
    "text": "values so",
    "start": "4166560",
    "end": "4170040"
  },
  {
    "text": "um so if we want to if we want to test the accuracy of this we can um print",
    "start": "4172440",
    "end": "4180359"
  },
  {
    "text": "something oops if we um if we want to type the accuracy we can ask um how many",
    "start": "4180359",
    "end": "4187359"
  },
  {
    "text": "of these points how many of the the the tested labels and the predicted labels are equal um um and divide that by the",
    "start": "4187359",
    "end": "4195199"
  },
  {
    "text": "total number of points and we get a percentage so the percentage is something like 60% so this is this is a pretty simple",
    "start": "4195199",
    "end": "4203280"
  },
  {
    "text": "algorithm it it seems not to have done very well but there's there's something that um you need to be careful about",
    "start": "4203280",
    "end": "4210040"
  },
  {
    "text": "here because the data is the data is very skewed it has the objects with Y test of",
    "start": "4210040",
    "end": "4218520"
  },
  {
    "text": "zero there's a 180,000 and with Y test of one there's",
    "start": "4218520",
    "end": "4224120"
  },
  {
    "text": "only 13,000 so basically what we're looking at is there are there are 186,000 quazars or sorry 186,000 stars",
    "start": "4224120",
    "end": "4233120"
  },
  {
    "text": "but only 13,000 quazars so um just looking at the",
    "start": "4233120",
    "end": "4238560"
  },
  {
    "text": "accuracy won't really tell us what's going on",
    "start": "4238560",
    "end": "4243719"
  },
  {
    "text": "um yeah in this case we're just asking how many of the points agree divided by the total number of",
    "start": "4244400",
    "end": "4250520"
  },
  {
    "text": "points how many of the how many of the class of ifications agree",
    "start": "4250520",
    "end": "4256199"
  },
  {
    "text": "um yeah they both say star or both say quar so that's just saying that the the",
    "start": "4256199",
    "end": "4262159"
  },
  {
    "text": "test equals the predicted so one one thing that's helpful here is to look at the",
    "start": "4262159",
    "end": "4269080"
  },
  {
    "text": "uh since we have this skewed data set we want to look at the true positives and the and the false positives and",
    "start": "4269080",
    "end": "4275560"
  },
  {
    "text": "essentially what it helps to to compute these things called precision and recall so Precision",
    "start": "4275560",
    "end": "4282440"
  },
  {
    "text": "says um of the things that we labeled quazars how many of those are actually",
    "start": "4282440",
    "end": "4289280"
  },
  {
    "text": "quazars and we can compute our Precision here and we find that that's only about 14% that we've of the things that we've",
    "start": "4289280",
    "end": "4296520"
  },
  {
    "text": "labeled quazars only about 14% of those are correct so basically our our algorithm is just trying to basically",
    "start": "4296520",
    "end": "4303520"
  },
  {
    "text": "labeling everything a quazar almost and um and it does really well on the recall",
    "start": "4303520",
    "end": "4309760"
  },
  {
    "text": "it correctly identifies 95% of those quazars but that's because is just calling everything a quazer right so",
    "start": "4309760",
    "end": "4316159"
  },
  {
    "text": "that's that's where um this precision and recall score come in you don't really just calculating that accuracy of",
    "start": "4316159",
    "end": "4322440"
  },
  {
    "text": "60% you don't really see that this is the problem that's going on so you can",
    "start": "4322440",
    "end": "4328880"
  },
  {
    "text": "um if you don't want to do all those functions yourself you can actually we have this thing in in ssit",
    "start": "4328880",
    "end": "4336679"
  },
  {
    "text": "learn called metric so you do um I'll just type it here from SK learn import",
    "start": "4336679",
    "end": "4345679"
  },
  {
    "text": "metrics and",
    "start": "4345679",
    "end": "4348920"
  },
  {
    "text": "then we print the classification report and it tells us this so for the",
    "start": "4352040",
    "end": "4360080"
  },
  {
    "text": "stars the stars were 99% precise but we only get 60% of them out so uh every we",
    "start": "4360639",
    "end": "4369600"
  },
  {
    "text": "40% of the stars were actually labeling quazars incorrectly quazars we're getting uh we're labeling",
    "start": "4369600",
    "end": "4377239"
  },
  {
    "text": "them most of them correctly but we're also labeling a lot of stars um incorrectly so this kind of",
    "start": "4377239",
    "end": "4384159"
  },
  {
    "text": "gives you gives you an idea of how your classifier is doing so um did you have your hand up or",
    "start": "4384159",
    "end": "4392840"
  },
  {
    "text": "no sorry about that so um basically we we can do better and um for the last",
    "start": "4392840",
    "end": "4399320"
  },
  {
    "text": "little bit what I want you guys to do is uh click on the exercise one right here",
    "start": "4399320",
    "end": "4406040"
  },
  {
    "text": "and this will walk you through um this will walk you through a better",
    "start": "4406040",
    "end": "4412560"
  },
  {
    "text": "classifier that's based on gaussian mixture models um so what we have here is in the",
    "start": "4412560",
    "end": "4420440"
  },
  {
    "text": "um skeletons directory let SK we're right here so in",
    "start": "4420440",
    "end": "4427600"
  },
  {
    "text": "the skeletons directory we have a couple exercises so if we um open skeleton SL",
    "start": "4427600",
    "end": "4434159"
  },
  {
    "text": "exercise one then there are a bunch of things in here that say to",
    "start": "4434159",
    "end": "4440080"
  },
  {
    "text": "do and this will basically walk this this will walk you through the process of creating a gaussian mixture model",
    "start": "4440080",
    "end": "4448400"
  },
  {
    "text": "classifier that um hopefully will be much more sophisticated than our gaussian naive bays and do a lot better",
    "start": "4448400",
    "end": "4454600"
  },
  {
    "text": "at the star and quazar classification so um I think we have",
    "start": "4454600",
    "end": "4460239"
  },
  {
    "text": "just a few minutes left uh 15 minutes left so if you if you'd like to do this if this sounds like something you want",
    "start": "4460239",
    "end": "4465679"
  },
  {
    "text": "to tackle um you should be able to uh to make some progress on it and uh I can",
    "start": "4465679",
    "end": "4472280"
  },
  {
    "text": "walk around and and help you if you're if you're working on that so the way at the top of this page it tells you how to",
    "start": "4472280",
    "end": "4478960"
  },
  {
    "text": "run this um you go in Python and run workspace exercise one py and then the",
    "start": "4478960",
    "end": "4485320"
  },
  {
    "text": "first argument there is just the location of the data that it needs and it'll it'll load all the data itself",
    "start": "4485320",
    "end": "4492560"
  },
  {
    "text": "it'll it'll split it into the training and cross validation sets that you need and it's only these little places down",
    "start": "4492560",
    "end": "4498840"
  },
  {
    "text": "here that say too that um you get to do these things so I'll leave it to you and and",
    "start": "4498840",
    "end": "4506199"
  },
  {
    "text": "feel free to grab me um if you have any questions about how to implement this",
    "start": "4506199",
    "end": "4513320"
  },
  {
    "text": "[Music] yeah",
    "start": "4514710",
    "end": "4522440"
  }
]