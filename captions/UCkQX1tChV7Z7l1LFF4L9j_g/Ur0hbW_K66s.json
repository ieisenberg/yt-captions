[
  {
    "start": "0",
    "end": "18000"
  },
  {
    "text": "thank you for coming um my name is Emma I'm a developer advocate for Google Cloud platform and today's topic is the",
    "start": "4520",
    "end": "13240"
  },
  {
    "text": "sandbox container runtime environment G visor so I think everybody uses",
    "start": "13240",
    "end": "20960"
  },
  {
    "start": "18000",
    "end": "18000"
  },
  {
    "text": "containers here right containers are great DOA was released in 2013 but",
    "start": "20960",
    "end": "27519"
  },
  {
    "text": "containers were uh used before that um even there was no Docker and but the",
    "start": "27519",
    "end": "34280"
  },
  {
    "text": "technology has really taken off uh since the release of Docker doco Inc reports",
    "start": "34280",
    "end": "40039"
  },
  {
    "text": "that there have been more than 19 uh sorry 29 billion downloads of containers",
    "start": "40039",
    "end": "46440"
  },
  {
    "text": "from their website and Google also has used containers to manage their",
    "start": "46440",
    "end": "51960"
  },
  {
    "text": "applications uh for more than decade so containers and Dockers are to separate",
    "start": "51960",
    "end": "57480"
  },
  {
    "text": "uh technology or terms containers been around for more than a decade while uh",
    "start": "57480",
    "end": "63160"
  },
  {
    "text": "doer is a fairly new technology Google uses uh containers and",
    "start": "63160",
    "end": "69840"
  },
  {
    "text": "it launches over 4 billion containers per week and people like containers",
    "start": "69840",
    "end": "76080"
  },
  {
    "text": "because it's really fast um and it provides better isolation than uh",
    "start": "76080",
    "end": "81400"
  },
  {
    "text": "regular processes and it provides consistent environments uh for multiple",
    "start": "81400",
    "end": "87439"
  },
  {
    "text": "uh multiple hosel and Hardware so if you package your application into a",
    "start": "87439",
    "end": "93479"
  },
  {
    "text": "container you can use it and deploy it to different environments and different um host operating system without worry",
    "start": "93479",
    "end": "100200"
  },
  {
    "text": "worry about uh compatibility of too",
    "start": "100200",
    "end": "105240"
  },
  {
    "start": "105000",
    "end": "105000"
  },
  {
    "text": "much but containers do not contain and there are security concerns around um",
    "start": "105240",
    "end": "112040"
  },
  {
    "text": "dwell wassh um our developer redart said containers do not contain in",
    "start": "112040",
    "end": "118079"
  },
  {
    "text": "2014 and there have been a lot of um efforts and",
    "start": "118079",
    "end": "124479"
  },
  {
    "text": "and mechanisms to contain try to isolate containers and applications from horse",
    "start": "124479",
    "end": "131080"
  },
  {
    "text": "operating systems and and other containers such as users name",
    "start": "131080",
    "end": "137440"
  },
  {
    "text": "spaces c groups capabilities C set comp L security modules I'll explain",
    "start": "137440",
    "end": "144480"
  },
  {
    "text": "individual mechanism later but despite these efforts U these concerns remain",
    "start": "144480",
    "end": "150319"
  },
  {
    "text": "true unfortunately so in order to better understand the current situation uh",
    "start": "150319",
    "end": "157760"
  },
  {
    "start": "153000",
    "end": "153000"
  },
  {
    "text": "let's uh take a little bit back in history and how we um invented different",
    "start": "157760",
    "end": "165360"
  },
  {
    "text": "mechanism to provide better isolation and security to Containers Once Upon a Time uh this is",
    "start": "165360",
    "end": "173040"
  },
  {
    "text": "uh roughly 20 30 years ago I think uh every service run",
    "start": "173040",
    "end": "180680"
  },
  {
    "text": "as root so uh instead of using separate unprivileged users such as FTP SS U HTTP",
    "start": "180680",
    "end": "189840"
  },
  {
    "text": "everything would run as root so of course these Services uh could access",
    "start": "189840",
    "end": "195200"
  },
  {
    "text": "all file all of the files and and resources as well as device devices and",
    "start": "195200",
    "end": "202120"
  },
  {
    "text": "of course uh as root it could um reconfigure network devices so that um",
    "start": "202120",
    "end": "207680"
  },
  {
    "text": "Network configurations are vulnerable from these Services a modifiable from the these",
    "start": "207680",
    "end": "215799"
  },
  {
    "text": "services and of course as root it can perform any kind of system calls and",
    "start": "215799",
    "end": "222400"
  },
  {
    "text": "kill or send any signals to any processes so in a perfect world where",
    "start": "222400",
    "end": "228599"
  },
  {
    "text": "everybody makes no mistakes it could be fine but uh the reality is different uh",
    "start": "228599",
    "end": "234879"
  },
  {
    "text": "anything uh anything could go wrong uh that could be a bug in software",
    "start": "234879",
    "end": "241000"
  },
  {
    "text": "like um a small era in script like RM RF undefined value Asis could mean like",
    "start": "241000",
    "end": "249480"
  },
  {
    "text": "rmrf asterisk like it could delete everything in the directory or some",
    "start": "249480",
    "end": "254519"
  },
  {
    "text": "malicious activities could be fatal and a single vulnerability could be uh could",
    "start": "254519",
    "end": "260359"
  },
  {
    "text": "mean total uh exploit on of the total like exposure",
    "start": "260359",
    "end": "266680"
  },
  {
    "text": "to the host so people decided to run Services as",
    "start": "266680",
    "end": "274440"
  },
  {
    "start": "271000",
    "end": "271000"
  },
  {
    "text": "unprivileged users or as we do these days for example uh you run FTP servers",
    "start": "274440",
    "end": "284199"
  },
  {
    "text": "we we don't use ftps as much as we did but uh we run these services in as",
    "start": "284199",
    "end": "290479"
  },
  {
    "text": "different users so that uh uh when permissions are properly set up they",
    "start": "290479",
    "end": "296639"
  },
  {
    "text": "have limited access to device and Network work configurations as well as",
    "start": "296639",
    "end": "302000"
  },
  {
    "text": "file file systems and these permissions were are checked by the conel before execution",
    "start": "302000",
    "end": "309120"
  },
  {
    "text": "and other system calls are also um checked by the conel and it also uh limits the ability",
    "start": "309120",
    "end": "318240"
  },
  {
    "text": "of processes to send signals to other uh users processes so that they can simply",
    "start": "318240",
    "end": "324960"
  },
  {
    "text": "kill or terminate processes of other services",
    "start": "324960",
    "end": "330600"
  },
  {
    "text": "but certainly this is not enough what if the process can set set your ID so that",
    "start": "330600",
    "end": "336840"
  },
  {
    "text": "it can pretend as other users or use rollets rollets uh is a tool to um",
    "start": "336840",
    "end": "344319"
  },
  {
    "text": "create any pocket they wish so it can generate any pocket that uh that not",
    "start": "344319",
    "end": "352199"
  },
  {
    "text": "necessarily um valid or um appropriate for the uh given process",
    "start": "352199",
    "end": "360319"
  },
  {
    "start": "359000",
    "end": "359000"
  },
  {
    "text": "so we take care of capabilities Docker for example drops a lot of capabilities",
    "start": "360319",
    "end": "367599"
  },
  {
    "text": "of containers like CIS admin C nice net admin CIS roio CIS module Etc like CIS",
    "start": "367599",
    "end": "375160"
  },
  {
    "text": "Adine or net admin they sound really privileged right um these capabilities",
    "start": "375160",
    "end": "381360"
  },
  {
    "text": "uh Define certain um methods and certain system calls that",
    "start": "381360",
    "end": "388240"
  },
  {
    "text": "a process can perform and fewer capabilities mean better isolation because um it limits what the",
    "start": "388240",
    "end": "397319"
  },
  {
    "text": "appr process can do uh under these capabilities so um Docker and other",
    "start": "397319",
    "end": "405120"
  },
  {
    "text": "container engines uh limit capabilities of container processes so they have",
    "start": "405120",
    "end": "410440"
  },
  {
    "text": "limited access to uh system operations but this is not enough yet uh",
    "start": "410440",
    "end": "418960"
  },
  {
    "text": "we haven't talked about resource",
    "start": "418960",
    "end": "423280"
  },
  {
    "start": "424000",
    "end": "424000"
  },
  {
    "text": "isolations for example even with limited capabilities and running as an",
    "start": "424400",
    "end": "431440"
  },
  {
    "text": "unprivileged user a process can consume a lot of memory or by forking it can",
    "start": "431440",
    "end": "437639"
  },
  {
    "text": "consume a lot of memory and these processes can also use a lot of CPU and",
    "start": "437639",
    "end": "443840"
  },
  {
    "text": "this is not exactly what we want usually so see groups uh came into the",
    "start": "443840",
    "end": "451240"
  },
  {
    "text": "reux conal to limit uh account and isolate resource groups so the idea of c",
    "start": "451240",
    "end": "457639"
  },
  {
    "text": "groups is to make a group of processes and control uh",
    "start": "457639",
    "end": "462680"
  },
  {
    "text": "resource uh the amount of resources that these groups can consume and these resources include CPU",
    "start": "462680",
    "end": "471240"
  },
  {
    "text": "U memory devices and and CP noes and memory noes for example you can set a",
    "start": "471240",
    "end": "477199"
  },
  {
    "text": "group of processes um consume up up to 50% of the entire processes of",
    "start": "477199",
    "end": "485639"
  },
  {
    "text": "memory so this is quite useful when you you want to make sure that different",
    "start": "485639",
    "end": "490720"
  },
  {
    "text": "group of processes uh share this exact same amount of system",
    "start": "490720",
    "end": "496840"
  },
  {
    "text": "resources but processes can still see all users processes network interfaces",
    "start": "496840",
    "end": "504000"
  },
  {
    "text": "Mount points U this means file systems and in the system for example",
    "start": "504000",
    "end": "510039"
  },
  {
    "text": "any any process in the systems can still get a list of all the processes running",
    "start": "510039",
    "end": "515080"
  },
  {
    "text": "in a system so we uh put name spaces for name",
    "start": "515080",
    "end": "521518"
  },
  {
    "start": "517000",
    "end": "517000"
  },
  {
    "text": "isolation and this name isolation is not really a good name for this uh feature",
    "start": "521519",
    "end": "527680"
  },
  {
    "text": "but naming is quite diff difficult in computer science um so this provides",
    "start": "527680",
    "end": "534160"
  },
  {
    "text": "isolation for name spaces uh there are currently seven types of name spaces n",
    "start": "534160",
    "end": "539440"
  },
  {
    "text": "network uh so network interfaces and addresses PID process ID Mount points",
    "start": "539440",
    "end": "546079"
  },
  {
    "text": "user IPC UTS UTS means unique time sharing but uh it really mean uh host",
    "start": "546079",
    "end": "554360"
  },
  {
    "text": "names so different name spaces can different Hosten names and c groups so",
    "start": "554360",
    "end": "559839"
  },
  {
    "text": "with these name spaces containers can have their own network interface or",
    "start": "559839",
    "end": "567200"
  },
  {
    "text": "process space for example pid1 or PID Z can mean different",
    "start": "567200",
    "end": "573760"
  },
  {
    "text": "processes in each of the containers or for example in in terms of file system",
    "start": "573760",
    "end": "580000"
  },
  {
    "text": "if you if you want to use slash app for your application you don't have to worry about other applications using the same",
    "start": "580000",
    "end": "587839"
  },
  {
    "text": "path this uh not only provides uh great isolation between containers but also",
    "start": "587839",
    "end": "594560"
  },
  {
    "text": "provide great flexibility these different containers don't uh conflict",
    "start": "594560",
    "end": "599800"
  },
  {
    "text": "which with each other so now a process is contained or",
    "start": "599800",
    "end": "606000"
  },
  {
    "text": "the containers contained still containers don't contain",
    "start": "606000",
    "end": "612760"
  },
  {
    "start": "608000",
    "end": "608000"
  },
  {
    "text": "unfortunately so this is a list of past vulnerabilities that caused uh these",
    "start": "612760",
    "end": "618399"
  },
  {
    "text": "isolations breaking uh for example D car is a",
    "start": "618399",
    "end": "624440"
  },
  {
    "text": "exploit uh that uses um RTE condition to to um break the",
    "start": "624440",
    "end": "632399"
  },
  {
    "text": "isolation and Spectrum Melton uh use ex um sorry speculative execution of",
    "start": "632399",
    "end": "642240"
  },
  {
    "text": "the CPU and try to uh get uh con memory and other protected",
    "start": "642240",
    "end": "647760"
  },
  {
    "text": "memory from the unprivileged process so with this mean uh with",
    "start": "647760",
    "end": "654560"
  },
  {
    "text": "this a single vulnerability in the caral on or any of the system components could",
    "start": "654560",
    "end": "660240"
  },
  {
    "text": "could lead to privilege escalations or uh unwanted information leaks and this",
    "start": "660240",
    "end": "666920"
  },
  {
    "text": "is not ideal and also Network stock is shared",
    "start": "666920",
    "end": "672160"
  },
  {
    "text": "across different containers so for example in in 2013 uh there was an vulnerability",
    "start": "672160",
    "end": "680519"
  },
  {
    "text": "uh that a single Mar pocket a remote pocket can crash a host canel so if any",
    "start": "680519",
    "end": "689399"
  },
  {
    "text": "of the applications receive a mform pocket that could terminate the entire U",
    "start": "689399",
    "end": "695920"
  },
  {
    "text": "host operating system but why despite all of the the",
    "start": "695920",
    "end": "702639"
  },
  {
    "text": "all of these efforts uh containers are still Pro prone to these U",
    "start": "702639",
    "end": "710519"
  },
  {
    "text": "vulnerabilities that is because regular or normal containers share the same host",
    "start": "710519",
    "end": "715959"
  },
  {
    "text": "operating system the same uh conal and device drivers so hardware and a lot of system",
    "start": "715959",
    "end": "723920"
  },
  {
    "text": "resources are exposed to the applications they share a large attack",
    "start": "723920",
    "end": "730120"
  },
  {
    "text": "surface between applications conel so any um vulnerability or any error uh",
    "start": "730120",
    "end": "738959"
  },
  {
    "text": "could mean a direct Expo exposure of the other conal um memory structure or",
    "start": "738959",
    "end": "744839"
  },
  {
    "text": "memory data or other application to a malitia process",
    "start": "744839",
    "end": "751160"
  },
  {
    "start": "753000",
    "end": "753000"
  },
  {
    "text": "so when thinking of making containers secure uh these are things we want to",
    "start": "753360",
    "end": "759760"
  },
  {
    "text": "keep in mind any programs in containers should not be able to exploit host so this is",
    "start": "759760",
    "end": "766399"
  },
  {
    "text": "the idea uh and container a container process can do anything inside a container but they shouldn't affect",
    "start": "766399",
    "end": "774079"
  },
  {
    "text": "other anything else but when security is complicated",
    "start": "774079",
    "end": "781040"
  },
  {
    "text": "and difficult nobody would use it so it should be as easy as normal containers",
    "start": "781040",
    "end": "788000"
  },
  {
    "text": "like no application modification is will be um required or you you don't have to",
    "start": "788000",
    "end": "795760"
  },
  {
    "text": "configure anything like policies or rules or complic complicated",
    "start": "795760",
    "end": "800800"
  },
  {
    "text": "configuration files to um use these secure security meth um",
    "start": "800800",
    "end": "807800"
  },
  {
    "text": "methods also so you want to keep the existing good aspects of containers and",
    "start": "807800",
    "end": "813839"
  },
  {
    "text": "the reasons uh why you like containers these include flexibility and",
    "start": "813839",
    "end": "819560"
  },
  {
    "text": "small foot print you use containers because they consume less memory and they are fast and they these processes",
    "start": "819560",
    "end": "826920"
  },
  {
    "text": "start fast so we don't want to uh slow them",
    "start": "826920",
    "end": "832199"
  },
  {
    "text": "down so gvisor was designed these limitations and these is issues in mind",
    "start": "833320",
    "end": "840959"
  },
  {
    "text": "and it is different from other methods of U privileged",
    "start": "840959",
    "end": "846839"
  },
  {
    "start": "841000",
    "end": "841000"
  },
  {
    "text": "separation separation sorry um one of the existing Technologies is viral",
    "start": "846839",
    "end": "854440"
  },
  {
    "text": "machines so viral machines provide a great is great level of isolation",
    "start": "854440",
    "end": "860240"
  },
  {
    "text": "between applications and host conal V machines are essentially an",
    "start": "860240",
    "end": "866600"
  },
  {
    "text": "emulation Hardware emulation to run a full operating system so instead of",
    "start": "866600",
    "end": "872120"
  },
  {
    "text": "running application directly on top of the host conel U virtual machines provide a virtual Hardware interface to",
    "start": "872120",
    "end": "880279"
  },
  {
    "text": "guest operating system and then an application runs on top of the guest",
    "start": "880279",
    "end": "885720"
  },
  {
    "text": "operating system so in order to reach reach to the host canel these applications must first",
    "start": "885720",
    "end": "894480"
  },
  {
    "text": "uh get to the gas conel and then break the uh isolation of the bmm or",
    "start": "894480",
    "end": "902320"
  },
  {
    "text": "hypervisor and then somehow find an exploit in the H and then uh get to the",
    "start": "902320",
    "end": "909160"
  },
  {
    "text": "hardware or other processes this is really really hard and you you need to",
    "start": "909160",
    "end": "914360"
  },
  {
    "text": "have exploitable variabilities in multiple points at the same time and cons are high overhead of",
    "start": "914360",
    "end": "923399"
  },
  {
    "text": "course uh you emulate Hardware uh Hardware interface so this is slower",
    "start": "923399",
    "end": "930240"
  },
  {
    "text": "than simply running a process and of course a FL operating system means more",
    "start": "930240",
    "end": "938399"
  },
  {
    "text": "memory and since this is this provides Hardware instead of",
    "start": "939040",
    "end": "945560"
  },
  {
    "text": "um um system like um instead of containers it's it's",
    "start": "945560",
    "end": "952160"
  },
  {
    "text": "really hard to change configurations of hardware on the Fly uh such as uh",
    "start": "952160",
    "end": "960920"
  },
  {
    "text": "increasing or decreasing number of cores or like adding or removing memory during",
    "start": "960920",
    "end": "967160"
  },
  {
    "text": "execution without rebooting or without changing uh uh causing disruptions",
    "start": "967160",
    "end": "974199"
  },
  {
    "start": "976000",
    "end": "976000"
  },
  {
    "text": "disruptions and another technique is Rule based Access Control uh such as set",
    "start": "976279",
    "end": "983160"
  },
  {
    "text": "comp Linux Appo Etc so these are",
    "start": "983160",
    "end": "989519"
  },
  {
    "text": "implemented implemented within the Linux conal and",
    "start": "989519",
    "end": "994600"
  },
  {
    "text": "so that they provide close to Native application performance so they are very",
    "start": "994600",
    "end": "1000399"
  },
  {
    "text": "transparent to Applications um these um so the performance is really fast there is uh",
    "start": "1000399",
    "end": "1008800"
  },
  {
    "text": "virtually no overhead um so this is really good when",
    "start": "1008800",
    "end": "1015319"
  },
  {
    "text": "it works it's really hard to Define policies and rules for these systems so",
    "start": "1015319",
    "end": "1023399"
  },
  {
    "text": "you need to know exactly what system calls and what system resources your",
    "start": "1023399",
    "end": "1029079"
  },
  {
    "text": "application would need during the entire life cycle of your U of the um",
    "start": "1029079",
    "end": "1035160"
  },
  {
    "text": "execution for example in the case of HTTP uh servers you need to know what",
    "start": "1035160",
    "end": "1041760"
  },
  {
    "text": "what kind of system CES they need and which files and which system ports and",
    "start": "1041760",
    "end": "1047400"
  },
  {
    "text": "other resources they need during their execution this is extremely hard so a",
    "start": "1047400",
    "end": "1056080"
  },
  {
    "text": "lot of documentations and manuals of software tools say disable S Linux",
    "start": "1056080",
    "end": "1062120"
  },
  {
    "text": "before installing actually so and and the",
    "start": "1062120",
    "end": "1069200"
  },
  {
    "text": "biggest problem biggest issue of these Solutions is you can't set a a Define a",
    "start": "1069200",
    "end": "1077799"
  },
  {
    "text": "policy for unknown binaries binaries that you don't know yet for uh such as",
    "start": "1077799",
    "end": "1084240"
  },
  {
    "text": "user uploaded binaries or new new kind of software because you you can't uh you",
    "start": "1084240",
    "end": "1092720"
  },
  {
    "text": "can't get a list of system resources of binaries or application that you",
    "start": "1092720",
    "end": "1099280"
  },
  {
    "text": "don't know you can't simply predict these uh",
    "start": "1099280",
    "end": "1105559"
  },
  {
    "text": "resources so in order to to make containers secure we want the best of both bars so the good thing with",
    "start": "1106880",
    "end": "1115080"
  },
  {
    "start": "1107000",
    "end": "1107000"
  },
  {
    "text": "virtualization is they all of the processes have independent Conners and",
    "start": "1115080",
    "end": "1121320"
  },
  {
    "text": "they have full guest operating systems so it's really hard to uh get to the uh",
    "start": "1121320",
    "end": "1128360"
  },
  {
    "text": "get to other uh operating systems or other processes and how do vir visual sorry",
    "start": "1128360",
    "end": "1136720"
  },
  {
    "text": "it's virualization virualization is is a good way to provide additional layers of",
    "start": "1136720",
    "end": "1142480"
  },
  {
    "text": "Defense it's hard to Simply hard to uh break these uh layers to get to the host",
    "start": "1142480",
    "end": "1151600"
  },
  {
    "text": "operating system and modern processes provide uh",
    "start": "1151600",
    "end": "1159559"
  },
  {
    "text": "hardware virtualization that U Prov that guarantees clear privilege separation",
    "start": "1159559",
    "end": "1165679"
  },
  {
    "text": "and encapsulation of different processes and uh like gas operating systems and",
    "start": "1165679",
    "end": "1171360"
  },
  {
    "text": "host operating systems so these are strong guarantees provided the hardware",
    "start": "1171360",
    "end": "1176720"
  },
  {
    "text": "so relying these mechanisms is really a good",
    "start": "1176720",
    "end": "1181880"
  },
  {
    "text": "idea but the bad things with this",
    "start": "1181880",
    "end": "1187240"
  },
  {
    "text": "is so again virtualized Hardware interface is very",
    "start": "1187240",
    "end": "1192440"
  },
  {
    "text": "inflexible um you can't change number of cor CPU CES or uh the amount of memory",
    "start": "1192440",
    "end": "1199000"
  },
  {
    "text": "during execution and running multiple copies of",
    "start": "1199000",
    "end": "1204679"
  },
  {
    "text": "Linux Kel is not a particularly good idea because they are too",
    "start": "1204679",
    "end": "1211039"
  },
  {
    "text": "big and not only the memory uh consumption but uh the software itself",
    "start": "1211039",
    "end": "1218159"
  },
  {
    "start": "1212000",
    "end": "1212000"
  },
  {
    "text": "is really big Linux uh the latest Linux",
    "start": "1218159",
    "end": "1223559"
  },
  {
    "text": "provides 319 system Calles for X6 x86 um",
    "start": "1223559",
    "end": "1231280"
  },
  {
    "text": "8664 architecture this is a lot of system calls and recently",
    "start": "1231280",
    "end": "1239000"
  },
  {
    "text": "Linux achieved a milestone of 20 million lines of code so this is a significant",
    "start": "1239000",
    "end": "1245440"
  },
  {
    "text": "amount of code it's extremely hard to make this gigantic software secure um",
    "start": "1245440",
    "end": "1254080"
  },
  {
    "text": "there could be a lot of security and non-security related issues",
    "start": "1254080",
    "end": "1260158"
  },
  {
    "text": "and yes uh since 1999 there have been more than 2,000 vulnerabilities found u",
    "start": "1260640",
    "end": "1266720"
  },
  {
    "text": "in Linux and 259 of them were actually",
    "start": "1266720",
    "end": "1271760"
  },
  {
    "text": "privilege escalations so any of these vulnerabilities could mean um",
    "start": "1271760",
    "end": "1278279"
  },
  {
    "text": "escalations from unprivileged users and to privileged users as well as",
    "start": "1278279",
    "end": "1284760"
  },
  {
    "text": "um Break um escalations",
    "start": "1284760",
    "end": "1290000"
  },
  {
    "text": "breaks of any of the um isolation mechanism that we discussed before in",
    "start": "1290000",
    "end": "1296320"
  },
  {
    "text": "this talk so instead of using virtualization",
    "start": "1296320",
    "end": "1304320"
  },
  {
    "start": "1299000",
    "end": "1299000"
  },
  {
    "text": "we think of we thought of different mechanism to provide better",
    "start": "1304320",
    "end": "1310240"
  },
  {
    "text": "isolation one of the techniques is sound boxing soundboxing is uh fairly uh",
    "start": "1310240",
    "end": "1319360"
  },
  {
    "text": "proven and and effective means to reduce attack surface it is used by uh jbm the Java virtual",
    "start": "1319360",
    "end": "1327600"
  },
  {
    "text": "machine or on web browsers so when you run a",
    "start": "1327600",
    "end": "1333159"
  },
  {
    "text": "JavaScript they don't have access to the host the host running the browser they",
    "start": "1333159",
    "end": "1339200"
  },
  {
    "text": "run in a soundbook environment so it has limited access to um predefined",
    "start": "1339200",
    "end": "1346880"
  },
  {
    "text": "resources so when you run a script it doesn't have access to your files on",
    "start": "1346880",
    "end": "1352760"
  },
  {
    "text": "your hard drive it instead have uh has access to a list of interface defined by",
    "start": "1352760",
    "end": "1359360"
  },
  {
    "text": "the JavaScript standard or browser standard so we could do the same for um",
    "start": "1359360",
    "end": "1365720"
  },
  {
    "text": "Linux processes we if we provided soundbox an attacker can't escape U need",
    "start": "1365720",
    "end": "1373840"
  },
  {
    "text": "first needs to escape this escape from the soundbox in order to uh get to other",
    "start": "1373840",
    "end": "1379279"
  },
  {
    "text": "processes of the Conner itself so GIS is exactly the soundbox",
    "start": "1379279",
    "end": "1389880"
  },
  {
    "text": "that uh works on top of host operating system it is a user mode mini conal so",
    "start": "1389880",
    "end": "1398200"
  },
  {
    "text": "it works independently from the host Linux conal and when application",
    "start": "1398200",
    "end": "1403919"
  },
  {
    "text": "performs system calls GIS traps these system calls and ex",
    "start": "1403919",
    "end": "1409440"
  },
  {
    "text": "execute them inside the conal inside the gvisor mini conal so from the host conal perspective",
    "start": "1409440",
    "end": "1417520"
  },
  {
    "text": "gvisor is just a normal process so thread uh thread and memory allocation",
    "start": "1417520",
    "end": "1424400"
  },
  {
    "text": "is as flexible as other regular proc",
    "start": "1424400",
    "end": "1429720"
  },
  {
    "text": "processes and giser doesn't Implement all of the system calls so it's",
    "start": "1429720",
    "end": "1437279"
  },
  {
    "text": "significantly smaller than the uh regular on the actual Linux caral",
    "start": "1437279",
    "end": "1443360"
  },
  {
    "text": "and instead of um providing the hardware virualization layer it provides a thin",
    "start": "1443360",
    "end": "1451200"
  },
  {
    "text": "layer of system cords so it's it has lower overhead compared to other uh",
    "start": "1451200",
    "end": "1457679"
  },
  {
    "text": "Hardware virualization uh",
    "start": "1457679",
    "end": "1461799"
  },
  {
    "text": "hypervisors so gvisor provides an environment to run untrusted",
    "start": "1465080",
    "end": "1470799"
  },
  {
    "text": "applications in a sandbox environment it currently implements",
    "start": "1470799",
    "end": "1477200"
  },
  {
    "text": "211 system calls so it's it's roughly two3 of the entire system calls of of",
    "start": "1477200",
    "end": "1483600"
  },
  {
    "text": "the current Linux provides it's not 100% but this is uh",
    "start": "1483600",
    "end": "1491240"
  },
  {
    "text": "usually enough for many of the applications this is not filtering it",
    "start": "1491240",
    "end": "1497720"
  },
  {
    "text": "executes um most of the this system called inside",
    "start": "1497720",
    "end": "1503520"
  },
  {
    "text": "giser and this is not a port of the Linux conal this is a",
    "start": "1503520",
    "end": "1509880"
  },
  {
    "text": "reimplementation in in a user mode so this is uh quite different from us mod",
    "start": "1509880",
    "end": "1517320"
  },
  {
    "text": "Linux and unlike knle and other soundbox",
    "start": "1517600",
    "end": "1523240"
  },
  {
    "text": "uh Technologies gvis is able to run unmodified Linux",
    "start": "1523240",
    "end": "1530000"
  },
  {
    "text": "binary so you can run your existing containers inside of gvisor as",
    "start": "1530000",
    "end": "1537240"
  },
  {
    "text": "there and gvisor is designed as secure by default um so you don't have to",
    "start": "1537240",
    "end": "1544279"
  },
  {
    "text": "configure filters or policies rules as you you'd have to with appon or AC",
    "start": "1544279",
    "end": "1551120"
  },
  {
    "text": "Linux and as we discuss in virtualization we U",
    "start": "1551120",
    "end": "1557919"
  },
  {
    "text": "div provides uh separate cornels separate mini cornels for each of the sandboxes",
    "start": "1557919",
    "end": "1565559"
  },
  {
    "text": "so even if uh someone compromises one of the cels they still has have to um get",
    "start": "1565559",
    "end": "1575480"
  },
  {
    "text": "get to other Kels to affect other processes",
    "start": "1575480",
    "end": "1581679"
  },
  {
    "text": "and it's written in goal for memory and type safety there are other languages that provide same kind of guarantee but",
    "start": "1581679",
    "end": "1589760"
  },
  {
    "text": "uh we chose go for performance memory and type",
    "start": "1589760",
    "end": "1595398"
  },
  {
    "start": "1595000",
    "end": "1595000"
  },
  {
    "text": "safety let's take a closer look inside G visor so G visor is actually two",
    "start": "1596960",
    "end": "1602919"
  },
  {
    "text": "separate processes inside the left side is centry and on",
    "start": "1602919",
    "end": "1608279"
  },
  {
    "text": "the right side is goer centry is the mini conal that is WR in go so centry",
    "start": "1608279",
    "end": "1615120"
  },
  {
    "text": "traps system calls from these applications and emulate these system CS so instead",
    "start": "1615120",
    "end": "1621080"
  },
  {
    "text": "of passing through to the caral it processes most of system CS inside and",
    "start": "1621080",
    "end": "1626559"
  },
  {
    "text": "when necessary it passes to the H caral and H between Sentry and H caral",
    "start": "1626559",
    "end": "1634480"
  },
  {
    "text": "uh we set comp to reduce uh the attack surface and it defines exactly uh what",
    "start": "1634480",
    "end": "1641600"
  },
  {
    "text": "system cause it needs to execute gvisor or",
    "start": "1641600",
    "end": "1646880"
  },
  {
    "text": "Sentry and goer on the right side um processes file accesses and they communicate on in IPC",
    "start": "1646880",
    "end": "1654520"
  },
  {
    "text": "so when whenever centry needs to access a file Sentry instead send a a request",
    "start": "1654520",
    "end": "1661559"
  },
  {
    "text": "to Goa and goar process this access request and return returns them to",
    "start": "1661559",
    "end": "1669200"
  },
  {
    "text": "Sentry and network is also 100 inside centy centry has a user mode Network",
    "start": "1669519",
    "end": "1677720"
  },
  {
    "text": "stock WR in goal so instead of using the shared conal network stock everything is",
    "start": "1677720",
    "end": "1684840"
  },
  {
    "text": "processed in centry so why do we have two processes",
    "start": "1684840",
    "end": "1692679"
  },
  {
    "start": "1688000",
    "end": "1688000"
  },
  {
    "text": "inste of one um that is because some of the",
    "start": "1692679",
    "end": "1698919"
  },
  {
    "text": "uh sensitive operations are socket and open so these are two most exploited",
    "start": "1698919",
    "end": "1705640"
  },
  {
    "text": "system system Calles in Linux these are really easy because the these",
    "start": "1705640",
    "end": "1710840"
  },
  {
    "text": "system CES are uh TR these system CES try to access to new resources so they",
    "start": "1710840",
    "end": "1717000"
  },
  {
    "text": "are um they provide large attack surfaces",
    "start": "1717000",
    "end": "1722440"
  },
  {
    "text": "to Applications so in order to Pro in order",
    "start": "1722440",
    "end": "1728640"
  },
  {
    "text": "to limit attack surface here Sentry is not allowed to perform these system calls these are controlled by uh setcom",
    "start": "1728640",
    "end": "1736600"
  },
  {
    "text": "um for six century so whenever Sentry needs to access",
    "start": "1736600",
    "end": "1742440"
  },
  {
    "text": "system resources sockets or files goer",
    "start": "1742440",
    "end": "1747480"
  },
  {
    "text": "instead performs these actions so even if Sentry gets compromised it can't open",
    "start": "1747480",
    "end": "1754720"
  },
  {
    "text": "a new file it can't try directly to other files in the system it then needs",
    "start": "1754720",
    "end": "1760799"
  },
  {
    "text": "to compromise other uh processes or goer in order to um write to or read to other",
    "start": "1760799",
    "end": "1769640"
  },
  {
    "text": "system files or system",
    "start": "1769640",
    "end": "1773120"
  },
  {
    "start": "1775000",
    "end": "1775000"
  },
  {
    "text": "resources and when trapping system call GIS uses two different mechanism",
    "start": "1776240",
    "end": "1782679"
  },
  {
    "text": "mechanisms independent uh independently implemented one is p race uh P race is a",
    "start": "1782679",
    "end": "1789480"
  },
  {
    "text": "debugging interface provided by Linux conel pet system emu is used to Trop",
    "start": "1789480",
    "end": "1795760"
  },
  {
    "text": "system Calles um so whenever the US application issues a",
    "start": "1795760",
    "end": "1802159"
  },
  {
    "text": "system code request U then the process U the execution is stopped and and Ja",
    "start": "1802159",
    "end": "1807880"
  },
  {
    "text": "centry resume the execution whenever uh the these system CES are handled inside",
    "start": "1807880",
    "end": "1815720"
  },
  {
    "text": "centry um P works with all of the Linux operating systems it doesn't require",
    "start": "1815720",
    "end": "1821360"
  },
  {
    "text": "special Hardware support and the other mechanism is KVM uh KVM is is originally",
    "start": "1821360",
    "end": "1829279"
  },
  {
    "text": "developed for virtualization but it can be used to provide separation between",
    "start": "1829279",
    "end": "1834840"
  },
  {
    "text": "host operating system and and containers so gvisor can use KVM and in this case gvisor serves as a",
    "start": "1834840",
    "end": "1842760"
  },
  {
    "text": "hypervisor and gesto so it's it's a mini conal and it also serves as vmm from the",
    "start": "1842760",
    "end": "1849720"
  },
  {
    "text": "KVM perspective but in the case of KVM",
    "start": "1849720",
    "end": "1854960"
  },
  {
    "text": "Hardware V virtualization is required so it doesn't run on any hardware but",
    "start": "1854960",
    "end": "1862399"
  },
  {
    "text": "when this support is provided KVM U guarantees certain um memory separation",
    "start": "1862399",
    "end": "1869480"
  },
  {
    "text": "and privilege uh encap",
    "start": "1869480",
    "end": "1873679"
  },
  {
    "start": "1875000",
    "end": "1875000"
  },
  {
    "text": "encapsulation and gvisor is a bit slower than uh noral noral",
    "start": "1875760",
    "end": "1882720"
  },
  {
    "text": "containers honestly I have to say but it's still small it consumes 15 MB B of",
    "start": "1882720",
    "end": "1888279"
  },
  {
    "text": "memory and when uh starting a new process with in G visor it takes roughly",
    "start": "1888279",
    "end": "1894000"
  },
  {
    "text": "150 milliseconds so it's slower but still",
    "start": "1894000",
    "end": "1899519"
  },
  {
    "text": "fast and significant overhead is incurs when system Calles",
    "start": "1899519",
    "end": "1905320"
  },
  {
    "text": "are uh executed so if you um processing inside",
    "start": "1905320",
    "end": "1912200"
  },
  {
    "text": "um process or doing work work inside the process it's usually fast but if your",
    "start": "1912200",
    "end": "1919840"
  },
  {
    "text": "application system C heavy gvisor might not perform",
    "start": "1919840",
    "end": "1926080"
  },
  {
    "start": "1926000",
    "end": "1926000"
  },
  {
    "text": "optimally so gisa is pretty lightweight and good but it's not perfect",
    "start": "1927039",
    "end": "1935360"
  },
  {
    "text": "either G is not designed to run different guest operating systems so you",
    "start": "1935360",
    "end": "1941240"
  },
  {
    "text": "can't run Windows on top of Linux for example by gvisor and",
    "start": "1941240",
    "end": "1948399"
  },
  {
    "text": "gvisor is not designed to run fully trusted binaries uh in other words",
    "start": "1948399",
    "end": "1953679"
  },
  {
    "text": "running your own applications so your own applications know you you when you write your own",
    "start": "1953679",
    "end": "1960519"
  },
  {
    "text": "application you know what they do they are not um supposed to do malicious",
    "start": "1960519",
    "end": "1967240"
  },
  {
    "text": "activities usually so uh in in these cases GIS U",
    "start": "1967240",
    "end": "1974120"
  },
  {
    "text": "simply incurs additional overhead on top of the containers so maybe you want to",
    "start": "1974120",
    "end": "1979519"
  },
  {
    "text": "use regular normal containers to achieve Optimal Performance and as as I said before",
    "start": "1979519",
    "end": "1986399"
  },
  {
    "text": "system cor heavy applications are not uh ideal for giser but this is not usually",
    "start": "1986399",
    "end": "1992159"
  },
  {
    "text": "the case for most of the applications and the goal of gvisor is",
    "start": "1992159",
    "end": "1998279"
  },
  {
    "text": "not to provide 100% of compatibility for applications so that would mean um we",
    "start": "1998279",
    "end": "2004559"
  },
  {
    "text": "implemented everything in the minial right so it needs to provide the exact",
    "start": "2004559",
    "end": "2010679"
  },
  {
    "text": "set of system Cs and and system resources inside centry that's not uh",
    "start": "2010679",
    "end": "2016360"
  },
  {
    "text": "the goal of course U the team is trying to provide better compatibility and better support for applications but the",
    "start": "2016360",
    "end": "2024039"
  },
  {
    "text": "goal is not not definitely provide 100% of the system",
    "start": "2024039",
    "end": "2030158"
  },
  {
    "start": "2030000",
    "end": "2030000"
  },
  {
    "text": "course these are the list of tested applications tested doesn't mean",
    "start": "2030480",
    "end": "2036200"
  },
  {
    "text": "guaranteed or or supported but um I think you can support",
    "start": "2036200",
    "end": "2041639"
  },
  {
    "text": "some programming or execution application environment such as java8",
    "start": "2041639",
    "end": "2047279"
  },
  {
    "text": "Goan or PHP node um P Python and others",
    "start": "2047279",
    "end": "2053158"
  },
  {
    "text": "so if you can run these um programming environments that that means you can run",
    "start": "2053159",
    "end": "2060520"
  },
  {
    "text": "any programs you write on these um in these programming languages and",
    "start": "2060520",
    "end": "2066919"
  },
  {
    "text": "there are other application like um mimd or MyQ Mongol and others",
    "start": "2066919",
    "end": "2073520"
  },
  {
    "text": "already tested on gvisor so it provides a pretty good compatibility but not",
    "start": "2073520",
    "end": "2081398"
  },
  {
    "text": "perfect and then what is GIS really for",
    "start": "2081919",
    "end": "2087240"
  },
  {
    "start": "2087000",
    "end": "2087000"
  },
  {
    "text": "um so this is one of the use cases um Google uses gvisor to provide Google app",
    "start": "2087240",
    "end": "2095118"
  },
  {
    "text": "engine so Google app engine is a part environment that you where you can uh",
    "start": "2095119",
    "end": "2100720"
  },
  {
    "text": "upload your source code and then Google takes care of the rest it scales",
    "start": "2100720",
    "end": "2107280"
  },
  {
    "text": "automatically uh out and in depending on the workload so they can't",
    "start": "2107280",
    "end": "2115240"
  },
  {
    "text": "use virtu virtualization or um to scale",
    "start": "2115240",
    "end": "2120960"
  },
  {
    "text": "long launch new application new instances of the software because it",
    "start": "2120960",
    "end": "2126079"
  },
  {
    "text": "takes too much time so gvisor was designed to provide faster startup and",
    "start": "2126079",
    "end": "2131800"
  },
  {
    "text": "lower head for these kind of services so in in this case as long as",
    "start": "2131800",
    "end": "2138760"
  },
  {
    "text": "nodejs works on gvisor you don't have to implement all",
    "start": "2138760",
    "end": "2144599"
  },
  {
    "text": "the system CES to make applications work so this was this is one of the uh ideal",
    "start": "2144599",
    "end": "2153599"
  },
  {
    "text": "use cases or valid use cases of gvisor",
    "start": "2153599",
    "end": "2159119"
  },
  {
    "start": "2159000",
    "end": "2159000"
  },
  {
    "text": "um so this use case is pretty limited to certain users not everybody runs cloud",
    "start": "2160480",
    "end": "2166800"
  },
  {
    "text": "services um but running I think running these Technologies especially when G",
    "start": "2166800",
    "end": "2172119"
  },
  {
    "text": "visor is a new way of running containers in a secure soundbox it's different from virtualizations it's different from um",
    "start": "2172119",
    "end": "2180800"
  },
  {
    "text": "Regular containers it's different from s Linux up armor so learning about these",
    "start": "2180800",
    "end": "2186000"
  },
  {
    "text": "new technologies is I think is important to make informed informed decisions when",
    "start": "2186000",
    "end": "2192800"
  },
  {
    "text": "choosing the right platform for your applications because different TCH talks",
    "start": "2192800",
    "end": "2199040"
  },
  {
    "text": "like virtualization or native Native bare meter Hardware containers have",
    "start": "2199040",
    "end": "2204280"
  },
  {
    "text": "different pros and cons so choosing the right platform is extremely important",
    "start": "2204280",
    "end": "2209880"
  },
  {
    "text": "for your applications lastly U running gvisor is",
    "start": "2209880",
    "end": "2218800"
  },
  {
    "text": "simple so when you use doer you you run doer run container and arguments um",
    "start": "2218800",
    "end": "2227119"
  },
  {
    "text": "using G visor is simply adding Das run time equal run St so this",
    "start": "2227119",
    "end": "2233839"
  },
  {
    "text": "us then this dcka uses G visor the secure run time instead of the regular D",
    "start": "2233839",
    "end": "2240000"
  },
  {
    "text": "run time and kuet this is all supported",
    "start": "2240000",
    "end": "2245599"
  },
  {
    "text": "though it is still exp experimental all you need to do is to edit the c.com",
    "start": "2245599",
    "end": "2252040"
  },
  {
    "text": "configuration file adding one line to make specify the container",
    "start": "2252040",
    "end": "2258359"
  },
  {
    "text": "runtime is um usually suff sufficient to change the uh container run time for the",
    "start": "2258359",
    "end": "2264319"
  },
  {
    "text": "regular Docker to gvisor currently single container parts",
    "start": "2264319",
    "end": "2270599"
  },
  {
    "text": "are supported and mul multiple container per p is planned but not implemented",
    "start": "2270599",
    "end": "2279079"
  },
  {
    "start": "2279000",
    "end": "2279000"
  },
  {
    "text": "so wrapping up gvisor is a new way of running containers in a soundbox and soundbox is",
    "start": "2280240",
    "end": "2286960"
  },
  {
    "text": "a separated isolated environment for applications and gvisor",
    "start": "2286960",
    "end": "2294359"
  },
  {
    "text": "is fast especially the start time is very fast compared to other um isolation",
    "start": "2294359",
    "end": "2302160"
  },
  {
    "text": "mechanisms it provides the same flexibility uh as",
    "start": "2302160",
    "end": "2308000"
  },
  {
    "text": "containers and regular processes in terms of thread thread and memory allocation it incurs minimal overhead uh",
    "start": "2308000",
    "end": "2315640"
  },
  {
    "text": "except system goals it's written in goal for memory safety and type safety so it's pretty",
    "start": "2315640",
    "end": "2322359"
  },
  {
    "text": "safe and secure and G is intended to provide",
    "start": "2322359",
    "end": "2327720"
  },
  {
    "text": "strict boundary between container and host operating systems so that it's",
    "start": "2327720",
    "end": "2332800"
  },
  {
    "text": "safer to run Anis binary in containers you need to have multiple",
    "start": "2332800",
    "end": "2338079"
  },
  {
    "text": "vulnerabilities in at the same time to get out of the containers and reach to",
    "start": "2338079",
    "end": "2343560"
  },
  {
    "text": "the host canel it's not still impossible to exploit the host con unfortunately but",
    "start": "2343560",
    "end": "2350480"
  },
  {
    "text": "it's much much safer than regular containers and again knowing about",
    "start": "2350480",
    "end": "2357319"
  },
  {
    "text": "underlying technology is important to make informed decisions when choosing platforms giser is available on GitHub",
    "start": "2357319",
    "end": "2364880"
  },
  {
    "text": "uh if and you go if you Google giser uh I think this comes on one the top on in",
    "start": "2364880",
    "end": "2370640"
  },
  {
    "text": "the search results if you have any questions uh feel free to reach out to me on Twitter or um my email address is",
    "start": "2370640",
    "end": "2378400"
  },
  {
    "text": "y y google.com um gvisor is really easy to",
    "start": "2378400",
    "end": "2384040"
  },
  {
    "text": "try it usually takes 15 to 20 minutes to build and try the first Hollow World example so",
    "start": "2384040",
    "end": "2391160"
  },
  {
    "text": "um yeah don't go to the URL and please try the software and that's it thank you",
    "start": "2391160",
    "end": "2398480"
  },
  {
    "text": "very much",
    "start": "2398480",
    "end": "2401680"
  }
]