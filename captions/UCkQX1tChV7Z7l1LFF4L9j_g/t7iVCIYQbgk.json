[
  {
    "start": "0",
    "end": "135000"
  },
  {
    "text": "when we got asked to give this presentation uh we had around about 1500 micro services",
    "start": "4640",
    "end": "10719"
  },
  {
    "text": "uh since since time has gone past we've now got nearly 1600 i checked this morning",
    "start": "10719",
    "end": "16320"
  },
  {
    "text": "so yeah our microservice ecosystem continues to grow",
    "start": "16320",
    "end": "21359"
  },
  {
    "text": "here's a connected call graph of every one of our services each edge represents a service actually",
    "start": "22640",
    "end": "28480"
  },
  {
    "text": "calling another service via the network the number of connections is really large and it's constantly changing as",
    "start": "28480",
    "end": "34880"
  },
  {
    "text": "new features are being developed uh hi my name is sahel and i am joined",
    "start": "34880",
    "end": "40239"
  },
  {
    "text": "by matt uh we're both engineers on the at monzo and we spend our time working on the",
    "start": "40239",
    "end": "46079"
  },
  {
    "text": "underlying platform powering the bank we think that all all of these complexities",
    "start": "46079",
    "end": "52079"
  },
  {
    "text": "about scaling our infrastructure and making sure that servers are provisioned and the databases are available",
    "start": "52079",
    "end": "58000"
  },
  {
    "text": "uh should be dealt by a specific team so that engineers who are working on the product can focus",
    "start": "58000",
    "end": "63520"
  },
  {
    "text": "on building a great bank and not have to worry about their infrastructure they can essentially focus at monza",
    "start": "63520",
    "end": "71680"
  },
  {
    "text": "our goal is to make money work for everyone we deal with the complexity uh to make",
    "start": "71680",
    "end": "76960"
  },
  {
    "text": "money management easy for all of you for those who haven't heard about monza",
    "start": "76960",
    "end": "82479"
  },
  {
    "text": "we are a fully licensed and regulated bank in the uk we have no physical branches we've had",
    "start": "82479",
    "end": "88159"
  },
  {
    "text": "this api ever since we began i think it is a legal requirement to have an api which lists all of your branches and",
    "start": "88159",
    "end": "94640"
  },
  {
    "text": "it's been our least changed service over time you can manage all of your money and",
    "start": "94640",
    "end": "100320"
  },
  {
    "text": "finances within the monzo app yesterday uh we hit a big milestone of 4",
    "start": "100320",
    "end": "106960"
  },
  {
    "text": "million customers in the uk uh that number actually makes us bigger than",
    "start": "106960",
    "end": "112000"
  },
  {
    "text": "some banks in the uk that have been that have been here for over 100 years banks that i used to walk past uh when i",
    "start": "112000",
    "end": "118079"
  },
  {
    "text": "was a kid that had physical branches we also have these really nice really",
    "start": "118079",
    "end": "123280"
  },
  {
    "text": "striking uh hot coral debit cards which you might have seen around uh and i have been told",
    "start": "123280",
    "end": "128560"
  },
  {
    "text": "that they do actually glow under uv light which is really nice and really good when you are in the dark",
    "start": "128560",
    "end": "135920"
  },
  {
    "start": "135000",
    "end": "315000"
  },
  {
    "text": "thanks um so yeah five years ago a group of people uh decided to build a bank from the",
    "start": "136480",
    "end": "141840"
  },
  {
    "text": "ground up there are a lot of reasons for that but we wanted to build something that was a",
    "start": "141840",
    "end": "146879"
  },
  {
    "text": "bit different help people manage their money easily simply but that means you're competing in a",
    "start": "146879",
    "end": "152000"
  },
  {
    "text": "space of uh honestly quite a large number of quite big uh very well established banks and so",
    "start": "152000",
    "end": "160560"
  },
  {
    "text": "when we were trying to work out how we would approach that problem we wanted to build something that was flexible and could",
    "start": "160560",
    "end": "166800"
  },
  {
    "text": "let our organization flex and scale as we grew",
    "start": "166800",
    "end": "171840"
  },
  {
    "text": "um so the real question is with that in mind where do you start uh kind of occasionally like suggest",
    "start": "172080",
    "end": "179040"
  },
  {
    "text": "this would be the approach you just open your text editor like i don't know start with like new bank file and then",
    "start": "179040",
    "end": "185760"
  },
  {
    "text": "like kind of go from there um but like five years ago i didn't know anything about banking",
    "start": "185760",
    "end": "191120"
  },
  {
    "text": "so uh it's kind of an interesting problem to start from something where you need to work out and understand the",
    "start": "191120",
    "end": "196159"
  },
  {
    "text": "the domain and also work out how you're going to provide the technology underneath that",
    "start": "196159",
    "end": "201440"
  },
  {
    "text": "um so in that world we we have an interesting kind of pressure",
    "start": "201440",
    "end": "207440"
  },
  {
    "text": "which is time getting a banking license takes quite a long time as you'd expect",
    "start": "207440",
    "end": "213680"
  },
  {
    "text": "it's important that companies that become banks are well regulated and have the",
    "start": "213680",
    "end": "218959"
  },
  {
    "text": "customer's best interest in mind and there are lots of things that you need to do to make sure that you're",
    "start": "218959",
    "end": "224239"
  },
  {
    "text": "looking after people's money the responsibility you have there is is",
    "start": "224239",
    "end": "229440"
  },
  {
    "text": "huge so at this point um you have an interesting dilemma as a product company",
    "start": "229440",
    "end": "235360"
  },
  {
    "text": "you you want to build a product that helps people manage their money as quickly as possible to do that you need feedback as quickly as possible",
    "start": "235360",
    "end": "241760"
  },
  {
    "text": "from customers but you can't get feedback because you don't have a product that you can give to people",
    "start": "241760",
    "end": "246799"
  },
  {
    "text": "because you can't take and hold deposits until you're a regulated bank and so in this world um right the",
    "start": "246799",
    "end": "253840"
  },
  {
    "text": "beginning we we weren't even planning on building a prepaid card um we did that a few months later",
    "start": "253840",
    "end": "259120"
  },
  {
    "text": "and that allowed us to partner with another company and go through the kind of product development process um",
    "start": "259120",
    "end": "266160"
  },
  {
    "text": "but at the beginning of that we needed to work out a way to build a technology platform that would be extensible so we could",
    "start": "266160",
    "end": "273199"
  },
  {
    "text": "quickly and easily adapt to the additional systems that we need to plug into um we wanted it to be scalable",
    "start": "273199",
    "end": "278880"
  },
  {
    "text": "um ideally we wouldn't have to do a large re-platforming uh effort four or five years in which is",
    "start": "278880",
    "end": "285040"
  },
  {
    "text": "a kind of common approach um and also only a problem that happens if you're successful",
    "start": "285040",
    "end": "291280"
  },
  {
    "text": "you only need to re-architect an entire system if you actually have scale that requires you to",
    "start": "291280",
    "end": "296400"
  },
  {
    "text": "to re-arch architect that um we needed to be resilient because we're a banker and we needed to",
    "start": "296400",
    "end": "301600"
  },
  {
    "text": "be secure again because we're holding people's money so with those kind of four main things in mind um",
    "start": "301600",
    "end": "307600"
  },
  {
    "text": "we wanted to work out how what are the choices the technology choices that we will make to kind of drive those things so we made",
    "start": "307600",
    "end": "315039"
  },
  {
    "start": "315000",
    "end": "757000"
  },
  {
    "text": "a few quite early on for anyone who hasn't heard we use go as our",
    "start": "315039",
    "end": "320479"
  },
  {
    "text": "primary programming language and there's lots of reasons for that um but ultimately as a language goes it's",
    "start": "320479",
    "end": "327120"
  },
  {
    "text": "it's quite simple it's statically typed and it it makes it quite easy for us to get",
    "start": "327120",
    "end": "334160"
  },
  {
    "text": "people on board so if you're using a language that not many people know you have to get people up to speed",
    "start": "334160",
    "end": "340479"
  },
  {
    "text": "on how to to do that but honestly if you're working in a company where you have quite a large framework you already have that problem you have",
    "start": "340479",
    "end": "347039"
  },
  {
    "text": "to get people to understand how your tool set works and how your framework works and how they can be effective within your",
    "start": "347039",
    "end": "352960"
  },
  {
    "text": "organization go also has some interesting things such as a backwards compatibility guarantee",
    "start": "352960",
    "end": "358720"
  },
  {
    "text": "so we've been using uh go from the very early versions of go one and every time a new version of",
    "start": "358720",
    "end": "366720"
  },
  {
    "text": "go comes out it has a guarantee that we can recompile our code and we basically get all of the improvements uh so what that means is",
    "start": "366720",
    "end": "372720"
  },
  {
    "text": "the garbage collector for example has improved several orders of magnitude over the time that we have had our our",
    "start": "372720",
    "end": "378479"
  },
  {
    "text": "infrastructure running and every time we recompile it test that it still works and then we just get those benefits for",
    "start": "378479",
    "end": "384880"
  },
  {
    "text": "free um the other things that we chose early on were kind of emphasizing distributed",
    "start": "384880",
    "end": "391280"
  },
  {
    "text": "technologies so we didn't want to be in a world where you have kind of one really really resilient system",
    "start": "391280",
    "end": "397360"
  },
  {
    "text": "and then a second backup system and like a big lever that you pull but you don't pull very often um because",
    "start": "397360",
    "end": "405120"
  },
  {
    "text": "if if you don't exercise those kind of failover modes how can you know that they work reliably",
    "start": "405120",
    "end": "410240"
  },
  {
    "text": "um so we wanted to pick distributed technologies from very early on um we used cassandra as",
    "start": "410240",
    "end": "416720"
  },
  {
    "text": "our database and back in 2015 kubernetes wasn't really an option so we actually used",
    "start": "416720",
    "end": "422319"
  },
  {
    "text": "mesos um but then a bit later in 2016 we kind of revised that looked around and it was",
    "start": "422319",
    "end": "428160"
  },
  {
    "text": "clear that kubernetes was the emerging market leader and before we kind of",
    "start": "428160",
    "end": "433840"
  },
  {
    "text": "expanded into our current account we switched over to kubernetes and the thing that we were taking from",
    "start": "433840",
    "end": "440000"
  },
  {
    "text": "that is providing an abstraction an abstraction from underlying infrastructure for our engineers who are",
    "start": "440000",
    "end": "445759"
  },
  {
    "text": "building banking systems on top of them yeah i think the the first version of",
    "start": "445759",
    "end": "450880"
  },
  {
    "text": "kubernetes we ran in production was version 1.2 so for anyone who has used those",
    "start": "450880",
    "end": "456080"
  },
  {
    "text": "versions of kubernetes that was an interesting time um and",
    "start": "456080",
    "end": "461120"
  },
  {
    "text": "there were many benefits to moving to kubernetes uh we actually saved loads of money quite quite quickly uh we had lots of um",
    "start": "461120",
    "end": "467840"
  },
  {
    "text": "machines that were running like jenkins worker pools um and loads of other things that we couldn't easily run",
    "start": "467840",
    "end": "473440"
  },
  {
    "text": "on our mesos cluster and by moving to kubernetes we could use the spare capacity on the cluster",
    "start": "473440",
    "end": "478800"
  },
  {
    "text": "to kind of do all of our build jobs and various other things so we could more tightly pack our",
    "start": "478800",
    "end": "484479"
  },
  {
    "text": "applications and that saved us a load of money we saved we shut down loads of other infrastructure",
    "start": "484479",
    "end": "490080"
  },
  {
    "text": "but it wasn't all played sailing um so one of our values at monzo is that we're very transparent",
    "start": "490080",
    "end": "495599"
  },
  {
    "text": "uh we believe that that is the the right thing to do and unfortunately sometimes that's quite painful",
    "start": "495599",
    "end": "500879"
  },
  {
    "text": "um so as an example in i think 2017 um we had quite a large outage because",
    "start": "500879",
    "end": "506800"
  },
  {
    "text": "of a combination of bugs between kubernetes how it interacted with uh xcd the",
    "start": "506800",
    "end": "511840"
  },
  {
    "text": "backing uh consistent storage layer and uh linkadee which we were using at the time in the key version one",
    "start": "511840",
    "end": "518320"
  },
  {
    "text": "as our service mesh and due to a combination of different bugs uh which honestly quite hard to test um",
    "start": "518320",
    "end": "525279"
  },
  {
    "text": "that resulted in a complete platform outage for us um and so those are things that we have",
    "start": "525279",
    "end": "530560"
  },
  {
    "text": "to like think about as we are developing and introducing new technologies and evolving how our platform works we have",
    "start": "530560",
    "end": "537680"
  },
  {
    "text": "to think about how can we test them how can we be confident that we're providing um the extensible scalable resilient and",
    "start": "537680",
    "end": "544560"
  },
  {
    "text": "secure platform that we want and providing like a really good product to our customers so they they can trust",
    "start": "544560",
    "end": "550160"
  },
  {
    "text": "us so hopefully all of you can trust us um so yeah uh we started off uh in the",
    "start": "550160",
    "end": "556320"
  },
  {
    "text": "early days with a really basic product uh we didn't even have debit cards to start with and then",
    "start": "556320",
    "end": "561600"
  },
  {
    "text": "slowly from that point we've kind of iterated and added more and more features um so we've added pots so that you can",
    "start": "561600",
    "end": "568080"
  },
  {
    "text": "like organize your money you can pay directly out of them um you can save money uh through those",
    "start": "568080",
    "end": "573440"
  },
  {
    "text": "and you can like pick how to do that in the app um or you can have your salary paid a day",
    "start": "573440",
    "end": "579519"
  },
  {
    "text": "early uh so we do have um you'll get like a prompt in the app if if you're eligible",
    "start": "579519",
    "end": "585600"
  },
  {
    "text": "um and then you can sort that into the pot so you can segregate all of your money for bills",
    "start": "585600",
    "end": "590720"
  },
  {
    "text": "just straight away you just never see it your bill money goes over here you pay your bills straight away",
    "start": "590720",
    "end": "595839"
  },
  {
    "text": "um and all of these are provided by an api so this part is like relatively straightforward we have many product",
    "start": "595839",
    "end": "601360"
  },
  {
    "text": "features we have many aspects of our api that we we need to build um and then i think the",
    "start": "601360",
    "end": "609120"
  },
  {
    "text": "the point that things uh maybe are less clear are where things get a bit more complicated so we have many product features but",
    "start": "609120",
    "end": "615920"
  },
  {
    "text": "those aren't the only things that monzo has to build for example we have to connect to lots and lots of different payment systems",
    "start": "615920",
    "end": "622240"
  },
  {
    "text": "so these are the some of the ones in the uk and they range from mastercard we both",
    "start": "622240",
    "end": "628880"
  },
  {
    "text": "are a card processor we process all of our own transactions but we're also a card issuer so we show",
    "start": "628880",
    "end": "634320"
  },
  {
    "text": "our own cards there's lots of different systems that go into that that's relatively complicated",
    "start": "634320",
    "end": "641200"
  },
  {
    "text": "and adding those kind of things as separate systems allows us to keep those things simpler",
    "start": "641200",
    "end": "647760"
  },
  {
    "text": "um some of those things we've in-house so we used to have an external card processor",
    "start": "647760",
    "end": "653440"
  },
  {
    "text": "and now we've brought that inside so we we have a mastercard processor written in go we had to add a load of ebcdic code",
    "start": "653440",
    "end": "660640"
  },
  {
    "text": "pages to the go programming language if anyone knows what ebcdic is it's a",
    "start": "660640",
    "end": "665839"
  },
  {
    "text": "whole interesting uh different type of thing um and by doing that in one section of",
    "start": "665839",
    "end": "672720"
  },
  {
    "text": "our infrastructure we can isolate that complexity and everything else doesn't have to be aware of it so many of these things",
    "start": "672720",
    "end": "678160"
  },
  {
    "text": "we've inhoused mastercard one of them faster payments more recently we now have our own direct",
    "start": "678160",
    "end": "683440"
  },
  {
    "text": "connection to faster payments that is built on our own infrastructure we bought our own gateway",
    "start": "683440",
    "end": "689040"
  },
  {
    "text": "and that's now in-house so all of those things we're doing because we want to build more resilient systems we want to have",
    "start": "689040",
    "end": "695760"
  },
  {
    "text": "more control over the the product experience but we also want to be able to own our own availability and um",
    "start": "695760",
    "end": "702000"
  },
  {
    "text": "some of the other examples for example are um our chat systems so when you chat to someone through",
    "start": "702000",
    "end": "707519"
  },
  {
    "text": "monzo 24 hours a day every day of the year um that goes through our own systems now so we've",
    "start": "707519",
    "end": "713360"
  },
  {
    "text": "in-house that as it's a critical function of the business and behind that there's a whole team of people who will",
    "start": "713360",
    "end": "720480"
  },
  {
    "text": "kind of chat to you and help you with your problems so we both have apis that do this in the",
    "start": "720480",
    "end": "726240"
  },
  {
    "text": "app but we also have bespoke systems behind that which are what our internal teams use to to like talk to",
    "start": "726240",
    "end": "733680"
  },
  {
    "text": "people manage a variety of tasks that kind of thing um over 50 of our staff use this on a daily",
    "start": "733680",
    "end": "739760"
  },
  {
    "text": "basis um one of our colleagues sophie gave a really interesting talk uh support at",
    "start": "739760",
    "end": "745519"
  },
  {
    "text": "the speed of thought um so it's a really good insight into how we build those internal facing products but again like",
    "start": "745519",
    "end": "753040"
  },
  {
    "text": "the examples we're giving here are the the problem space is quite large um and it gets even larger because we integrate",
    "start": "753040",
    "end": "758560"
  },
  {
    "start": "757000",
    "end": "900000"
  },
  {
    "text": "with loads of other companies so we provide uh we integrate with i have triple t so you can get real-time notifications of",
    "start": "758560",
    "end": "764480"
  },
  {
    "text": "your payments um flux so you get receipts in the app and all of these things again are",
    "start": "764480",
    "end": "771200"
  },
  {
    "text": "increasing the the scope of the domain uh and the the number of systems that we're having to",
    "start": "771200",
    "end": "776639"
  },
  {
    "text": "to build um and then behind that there's all the stuff that you don't see so things like um detecting and",
    "start": "776639",
    "end": "783200"
  },
  {
    "text": "preventing financial crime um security all of these things again are systems that we build in a kind of",
    "start": "783200",
    "end": "790079"
  },
  {
    "text": "consistent way on our platform um but they're not things that are visible really to the outside world",
    "start": "790079",
    "end": "796240"
  },
  {
    "text": "so over time clearly these things have the number of things that we're working on as a company has increased",
    "start": "796240",
    "end": "802560"
  },
  {
    "text": "uh and that means the number of systems that we've built has increased and over time that's meant that the",
    "start": "802560",
    "end": "808639"
  },
  {
    "text": "number of services we have has increased quite dramatically um so currently we have 1600 services in",
    "start": "808639",
    "end": "815279"
  },
  {
    "text": "production um all of them are very small they we use",
    "start": "815279",
    "end": "820560"
  },
  {
    "text": "abandoned context so they're very tightly scoped on the thing that they do that allows us to be flexible because",
    "start": "820560",
    "end": "827760"
  },
  {
    "text": "different groups can operate a small section of this code base and as our",
    "start": "827760",
    "end": "832959"
  },
  {
    "text": "organization grows and we have more teams they can specialize in progressively smaller areas",
    "start": "832959",
    "end": "839680"
  },
  {
    "text": "and these systems are responsible for everything that powers our bank yeah so from payment networks moving",
    "start": "839680",
    "end": "845440"
  },
  {
    "text": "money maintaining a ledger fighting fraud financial crime and providing world-class customer support",
    "start": "845440",
    "end": "852800"
  },
  {
    "text": "all of these things are our systems that we built as services within our infrastructure",
    "start": "852800",
    "end": "858480"
  },
  {
    "text": "um so yeah that's kind of how we get from essentially uh what started as a",
    "start": "858480",
    "end": "864079"
  },
  {
    "text": "relatively simple product through to a system that now at first glance looks really complicated",
    "start": "864079",
    "end": "870000"
  },
  {
    "text": "in this particular diagram we have color-coded areas based on teams that own and maintain",
    "start": "870000",
    "end": "875360"
  },
  {
    "text": "their systems so you can see there are like clusters owned by different teams within the company",
    "start": "875360",
    "end": "880880"
  },
  {
    "text": "this is clearly not a great way to like look at data right um and this isn't an internal tool",
    "start": "880880",
    "end": "887279"
  },
  {
    "text": "we use on a daily basis but it kind of shows that there are many of these services",
    "start": "887279",
    "end": "892399"
  },
  {
    "text": "and they are interlinked and the way that we interlink those things is the kind of interesting part",
    "start": "892399",
    "end": "899839"
  },
  {
    "start": "900000",
    "end": "1292000"
  },
  {
    "text": "so you want to add a microservice where do you get started so you start with a blank canvas",
    "start": "900639",
    "end": "907440"
  },
  {
    "text": "and this is the surface area that engineers are typically exposed to they put their business logic uh in a in",
    "start": "907440",
    "end": "914160"
  },
  {
    "text": "a well-defined box and the surrounding portion makes sure that it works and is production ready and provides all",
    "start": "914160",
    "end": "921040"
  },
  {
    "text": "the necessary like interfaces and integrations with the rest of our infrastructure one of our biggest decisions as an",
    "start": "921040",
    "end": "927600"
  },
  {
    "text": "organization was our approach to writing microservices for all of our business functions each of",
    "start": "927600",
    "end": "932959"
  },
  {
    "text": "these units or each of these microservices of business logic are built on a shared core our goal is",
    "start": "932959",
    "end": "940000"
  },
  {
    "text": "to reduce variance as much as we can of each additional micro service we add if a micro service gets really popular",
    "start": "940000",
    "end": "946560"
  },
  {
    "text": "we can scale it independently engineers are not rewriting core abstractions",
    "start": "946560",
    "end": "951839"
  },
  {
    "text": "like marshaling of data or http servers or integration with metric systems for every new service that they add they",
    "start": "951839",
    "end": "958880"
  },
  {
    "text": "can rely on a well-defined and well-tested and well-supported set of libraries and tooling and infrastructure that we",
    "start": "958880",
    "end": "966839"
  },
  {
    "text": "provide when we make an improvement or fix a bug in the shed library layer every service can benefit usually",
    "start": "966839",
    "end": "973759"
  },
  {
    "text": "without needing a single line of code change within the business logic here's an example where we made some",
    "start": "973759",
    "end": "979120"
  },
  {
    "text": "improvements uh to reduce the amount of cpu time uh of unmarshalling data between",
    "start": "979120",
    "end": "984160"
  },
  {
    "text": "cassandra our primary data store and go which is what we use to write all of our microservices",
    "start": "984160",
    "end": "989279"
  },
  {
    "text": "some of our services saw a significant cpu and a latency drop this kind of work has",
    "start": "989279",
    "end": "994800"
  },
  {
    "text": "cascading and global improvements across the platform it's like a free speed improvement for anyone who's working on business logic",
    "start": "994800",
    "end": "1001519"
  },
  {
    "text": "and everyone loves a free speed improvement so how can we compose services together",
    "start": "1001519",
    "end": "1007040"
  },
  {
    "text": "to form a cohesive product or offering or service we take a problem",
    "start": "1007040",
    "end": "1012079"
  },
  {
    "text": "and subdivide it into a set of bounded contexts the whole premise behind this is the single responsibility principle",
    "start": "1012079",
    "end": "1018639"
  },
  {
    "text": "do take one thing uh do it correctly and do it well each service provides a well-defined",
    "start": "1018639",
    "end": "1025438"
  },
  {
    "text": "interface ideally with safe operations consider that if you were going to",
    "start": "1025439",
    "end": "1030798"
  },
  {
    "text": "expose this interface publicly to the public world what tunable parameters would you want",
    "start": "1030799",
    "end": "1036640"
  },
  {
    "text": "to expose to the world you don't want to provide every every particular knob",
    "start": "1036640",
    "end": "1042000"
  },
  {
    "text": "because that means that you might have lots of different permutations that you need to support",
    "start": "1042000",
    "end": "1047520"
  },
  {
    "text": "so as a particular example here's a diagram of all the services that get involved when you tap your",
    "start": "1047520",
    "end": "1053679"
  },
  {
    "text": "monzo card at a payment terminal quite a few distinct components are involved in real time when you make a",
    "start": "1053679",
    "end": "1059200"
  },
  {
    "text": "transaction to contribute to the decision on whether a payment should be accepted or rejected or something in",
    "start": "1059200",
    "end": "1065760"
  },
  {
    "text": "between and all of this needs to work as one cohesive unit to provide that decision",
    "start": "1065760",
    "end": "1072559"
  },
  {
    "text": "part of that is calling key services like our account service which deals with the abstraction of",
    "start": "1072559",
    "end": "1078080"
  },
  {
    "text": "accounts all across monzo so it's not just providing bank accounts but accounts as a whole as a",
    "start": "1078080",
    "end": "1083679"
  },
  {
    "text": "singular abstraction at monzo and also the ledger service which is",
    "start": "1083679",
    "end": "1088720"
  },
  {
    "text": "responsible for tracking all money movements no matter in what currency or like what kind of environment",
    "start": "1088720",
    "end": "1094400"
  },
  {
    "text": "it's responsible it's a singular entity that's responsible for tracking all money movements all across monzo",
    "start": "1094400",
    "end": "1101520"
  },
  {
    "text": "now this diagram is actually the maximal set of services but in reality not every service gets",
    "start": "1101520",
    "end": "1108000"
  },
  {
    "text": "involved in every invocation on every transaction many of these are there to support the complexity of",
    "start": "1108000",
    "end": "1114240"
  },
  {
    "text": "receiving payments for example for uh there is different validation and work we need to do",
    "start": "1114240",
    "end": "1119679"
  },
  {
    "text": "to support chip and pin versus contactless versus if you swipe your card if you're if you're in the u.s or",
    "start": "1119679",
    "end": "1126000"
  },
  {
    "text": "like occasionally if you're in the in the uk and the card terminal is broken uh a service will only get caught if it",
    "start": "1126000",
    "end": "1132160"
  },
  {
    "text": "needs to get involved with a particular type of transaction but this sort of thing is still really really complex because accepted payments",
    "start": "1132160",
    "end": "1139039"
  },
  {
    "text": "is really really complex why do we have such granularity we want to break down the complexity",
    "start": "1139039",
    "end": "1144320"
  },
  {
    "text": "and minimize the risk of change for example if we want to change the way contactless payments work we're not",
    "start": "1144320",
    "end": "1150720"
  },
  {
    "text": "affecting uh the the chip and pen system or the max drive system so we can fall back to those if",
    "start": "1150720",
    "end": "1156559"
  },
  {
    "text": "we get it wrong so in september 2019 uh an eu legislation uh called strong",
    "start": "1156559",
    "end": "1163039"
  },
  {
    "text": "customer authentication came into effect which is intended to enhance the security of payments",
    "start": "1163039",
    "end": "1168640"
  },
  {
    "text": "and reduce the amount of fraud the regulation focused on adding essentially a two-factor authentication layer",
    "start": "1168640",
    "end": "1175440"
  },
  {
    "text": "when making payments for a payment to succeed a customer needed two out of the three elements we had to make",
    "start": "1175440",
    "end": "1181679"
  },
  {
    "text": "changes uh in our payments flow in order to be compliant just like most other banks so we had the option of baking in the",
    "start": "1181679",
    "end": "1188400"
  },
  {
    "text": "strong customer authentication logic into the existing services that we had that were a part of accepting and making",
    "start": "1188400",
    "end": "1194559"
  },
  {
    "text": "a decision on payments but we chose to add additional services with a strict api boundary for",
    "start": "1194559",
    "end": "1200240"
  },
  {
    "text": "validation that means when the legislation inevitably changes uh and a new new law comes into effect or we want to",
    "start": "1200240",
    "end": "1207440"
  },
  {
    "text": "iterate on our implementation of this uh particular legislation uh we can only",
    "start": "1207440",
    "end": "1212640"
  },
  {
    "text": "be concerned with that layer rather than tightly coupling the logic into our existing payments flow",
    "start": "1212640",
    "end": "1218799"
  },
  {
    "text": "it also means that other services uh which are not completely payments related like our customer support",
    "start": "1218799",
    "end": "1223919"
  },
  {
    "text": "services can uh call into the uh strong customer authentication set of services to get information about the specific",
    "start": "1223919",
    "end": "1230720"
  },
  {
    "text": "state that a customer might be in so if a customer writes in and they're getting all of their transactions rejected",
    "start": "1230720",
    "end": "1236400"
  },
  {
    "text": "uh then they can they can write in and our customer service can essentially help uh by seeing the information about the",
    "start": "1236400",
    "end": "1242960"
  },
  {
    "text": "state of the customer through these services so strong customer authentication is a great example of a feature that had",
    "start": "1242960",
    "end": "1249679"
  },
  {
    "text": "a lot of cross-collaboration between engineers working on payments product financial",
    "start": "1249679",
    "end": "1254799"
  },
  {
    "text": "crime and security at monzo different parts of the project were independently implemented and",
    "start": "1254799",
    "end": "1260240"
  },
  {
    "text": "deployed by engineers in the various teams each team was able to act locally on",
    "start": "1260240",
    "end": "1265520"
  },
  {
    "text": "their specific components that they were allocated but think globally to deliver the overall project",
    "start": "1265520",
    "end": "1271280"
  },
  {
    "text": "by having these api boundaries each team was focused on their specific mental model and",
    "start": "1271280",
    "end": "1277919"
  },
  {
    "text": "essentially this caused a natural breaking down of a complex problem of implementing this large amount of",
    "start": "1277919",
    "end": "1283120"
  },
  {
    "text": "legislation with a lot of moving parts into a set of single simpler composable",
    "start": "1283120",
    "end": "1289039"
  },
  {
    "text": "microservices so when we're building systems like this",
    "start": "1289039",
    "end": "1295760"
  },
  {
    "start": "1292000",
    "end": "1665000"
  },
  {
    "text": "we we talked about how we can either add systems or how we can change systems",
    "start": "1295760",
    "end": "1301200"
  },
  {
    "text": "and the way that we generally think about this is when we're building a system we want it to be extensible rather than flexible and that's like a",
    "start": "1301200",
    "end": "1308240"
  },
  {
    "text": "subtle distinction but rather than building a highly abstract",
    "start": "1308240",
    "end": "1313280"
  },
  {
    "text": "service that can foresee like the many different ways and we may need to approach a problem we we try not to do that we",
    "start": "1313280",
    "end": "1321120"
  },
  {
    "text": "try and add it in a relatively simple way and only abstract those things once we've actually done the thing a few",
    "start": "1321120",
    "end": "1326559"
  },
  {
    "text": "times and we know that abstraction is correct um there's been a couple of talks about the uh at uconn about the the costs of",
    "start": "1326559",
    "end": "1334320"
  },
  {
    "text": "abstraction and premature abstraction and i think this is like a a very specific point",
    "start": "1334320",
    "end": "1339760"
  },
  {
    "text": "we we can try and guess what our future requirements might be but most of the times we've done that at",
    "start": "1339760",
    "end": "1345520"
  },
  {
    "text": "monzo we've been wrong and every time we try and build a highly abstract system it turns out that even",
    "start": "1345520",
    "end": "1351440"
  },
  {
    "text": "if we're kind of in the right direction it's still not quite bang on um so instead we want to be able to",
    "start": "1351440",
    "end": "1358480"
  },
  {
    "text": "add new services that do the job very very well and just have those defined responsibilities and be able to",
    "start": "1358480",
    "end": "1364960"
  },
  {
    "text": "change other systems like small changes to allow them to use that functionality and be extended",
    "start": "1364960",
    "end": "1372480"
  },
  {
    "text": "so that's kind of the the difference we see where we want to usually add some functionality",
    "start": "1372480",
    "end": "1377760"
  },
  {
    "text": "rather than changing something to be super abstract but that's not always the case um if we",
    "start": "1377760",
    "end": "1384320"
  },
  {
    "text": "have a particular responsibility you can think about that providing an api that provides a service to someone else",
    "start": "1384320",
    "end": "1390240"
  },
  {
    "text": "in the company or some other group of services or people and sometimes the responsibility of that system",
    "start": "1390240",
    "end": "1397039"
  },
  {
    "text": "either remains the same and we just haven't implemented certain things and those things logically sit within that",
    "start": "1397039",
    "end": "1402720"
  },
  {
    "text": "boundary um or we change the responsibility and we kind of refactor these things over time",
    "start": "1402720",
    "end": "1408240"
  },
  {
    "text": "so in this particular example we might have a service and that has a quite a defined boundary and if we add additional code",
    "start": "1408240",
    "end": "1416159"
  },
  {
    "text": "to that then we're going to effectively extend that boundary um so the surface area is now larger",
    "start": "1416159",
    "end": "1422159"
  },
  {
    "text": "now sometimes that's the right decision if if we are still operating in the same area of responsibility but obviously this is now",
    "start": "1422159",
    "end": "1429679"
  },
  {
    "text": "a larger application it's now more complex um when uh an engineer is either moved",
    "start": "1429679",
    "end": "1435120"
  },
  {
    "text": "on to a team or joins the company they now need to read more code within that box to understand how the system works and",
    "start": "1435120",
    "end": "1442480"
  },
  {
    "text": "it also means that we if we just added code directly to the system without thinking about the the",
    "start": "1442480",
    "end": "1448640"
  },
  {
    "text": "larger overall problem we may not be thinking about how it was in originally kind of implemented",
    "start": "1448640",
    "end": "1455679"
  },
  {
    "text": "so when we're doing this we we tend to have a few patterns either we add additional services and update",
    "start": "1455679",
    "end": "1462240"
  },
  {
    "text": "callers to use these um or we'll add",
    "start": "1462240",
    "end": "1467600"
  },
  {
    "text": "we'll add additional functionality to these and they kind of grow or many times we'll remove code and",
    "start": "1467600",
    "end": "1473120"
  },
  {
    "text": "split them out and into a larger set of smaller services so i think this is the the thing to bear",
    "start": "1473120",
    "end": "1479279"
  },
  {
    "text": "in mind it our infrastructure is very much an evolving process",
    "start": "1479279",
    "end": "1484480"
  },
  {
    "text": "there are many services that won't change for a long time um we have a system that generates ids",
    "start": "1484480",
    "end": "1490000"
  },
  {
    "text": "uh we generate standardized format ids uh that has not changed in three or four years um we might add some functionality to",
    "start": "1490000",
    "end": "1497840"
  },
  {
    "text": "that but it's very stable um but there are other areas where we're still learning",
    "start": "1497840",
    "end": "1503200"
  },
  {
    "text": "more as as we grow and like those core abstractions clearly we've learned a lot more about",
    "start": "1503200",
    "end": "1508960"
  },
  {
    "text": "banking in the last five years than we knew five years ago so we need the ability to change those",
    "start": "1508960",
    "end": "1514159"
  },
  {
    "text": "things over time and refactor them um so while we may refactor individual services",
    "start": "1514159",
    "end": "1519440"
  },
  {
    "text": "generally we're we're doing this kind of like uh someone described this as gardening i think the other day where",
    "start": "1519440",
    "end": "1526320"
  },
  {
    "text": "we're evolving that system over time as we learn more about it uh yeah so we'll either potentially",
    "start": "1526320",
    "end": "1532559"
  },
  {
    "text": "expand services break them up into a smaller number um often uh sam talked about some of the",
    "start": "1532559",
    "end": "1538799"
  },
  {
    "text": "patterns for these kind of things with monolith decomposition all of those patterns still apply so if we're breaking functionality out",
    "start": "1538799",
    "end": "1546240"
  },
  {
    "text": "we may pull that into another service and the original service may temporarily proxy through to that new service while we update the",
    "start": "1546240",
    "end": "1553360"
  },
  {
    "text": "callers to switch over it's a bit of a migration process in many cases",
    "start": "1553360",
    "end": "1558400"
  },
  {
    "text": "well in a few cases we've found that we we've artificially split something",
    "start": "1558400",
    "end": "1563520"
  },
  {
    "text": "and after we've used that for a bit it didn't really make sense so in that point we can combine those things together",
    "start": "1563520",
    "end": "1569840"
  },
  {
    "text": "if you find that you're changing a couple of services together and even if you can deploy them",
    "start": "1569840",
    "end": "1575600"
  },
  {
    "text": "independently which all of the services of monzo can be um if you find you're kind of changing",
    "start": "1575600",
    "end": "1580640"
  },
  {
    "text": "two things a lot of the time then maybe that's a signal that those things were prematurely uh pulled apart um",
    "start": "1580640",
    "end": "1587919"
  },
  {
    "text": "and many times we've completely retired or replaced systems um as an example we used to have a prepaid",
    "start": "1587919",
    "end": "1592960"
  },
  {
    "text": "card uh we don't have a prepay card anymore so the way that we interacted with that",
    "start": "1592960",
    "end": "1598080"
  },
  {
    "text": "kind of model of payments is actually very different to the way that our uh direct card processor interacts so",
    "start": "1598080",
    "end": "1604720"
  },
  {
    "text": "we built the new system we've issued everybody new cards and then at some point once all those cards were out of rotation then we could",
    "start": "1604720",
    "end": "1611200"
  },
  {
    "text": "shut those systems down and retire quite a lot of them um and i think that that like iterative",
    "start": "1611200",
    "end": "1617279"
  },
  {
    "text": "process is the thing that generally we we take take to heart at monzo really",
    "start": "1617279",
    "end": "1622799"
  },
  {
    "text": "um both on an infrastructure perspective but also from a product perspective so a particular cartoon we love uh from",
    "start": "1622799",
    "end": "1630640"
  },
  {
    "text": "henrikh neibergs is about we're trying to iteratively build a better product now",
    "start": "1630640",
    "end": "1637600"
  },
  {
    "text": "even right back at the beginning if we tried to build a bank in isolation and not had like enough customer",
    "start": "1637600",
    "end": "1644399"
  },
  {
    "text": "feedback then we we might have ended up with something that didn't really satisfy our customers needs",
    "start": "1644399",
    "end": "1649679"
  },
  {
    "text": "and so by talking to people continuously and by making small changes but making them quite frequently we we",
    "start": "1649679",
    "end": "1656960"
  },
  {
    "text": "can hopefully make sure we're going in the right direction and that applies both for our individual services and also for",
    "start": "1656960",
    "end": "1662240"
  },
  {
    "text": "our product so there's been a few instrumental",
    "start": "1662240",
    "end": "1667360"
  },
  {
    "start": "1665000",
    "end": "1719000"
  },
  {
    "text": "components that have allowed this ecosystem to flourish at monzo so we've talked about how we compose microservices and",
    "start": "1667360",
    "end": "1674000"
  },
  {
    "text": "how we how we develop a set of robust libraries but the other key layer is our core platform",
    "start": "1674000",
    "end": "1679440"
  },
  {
    "text": "the team that we work on focuses on providing components like kubernetes and cassandra so that we",
    "start": "1679440",
    "end": "1686320"
  },
  {
    "text": "can host and deploy and develop containers uh cassandra for data storage uh lcd for",
    "start": "1686320",
    "end": "1691679"
  },
  {
    "text": "distributed locking and components like prometheus for instrumentation we provide these components as services",
    "start": "1691679",
    "end": "1698320"
  },
  {
    "text": "so that engineers can focus on building a bank rather than lots having lots of different teams",
    "start": "1698320",
    "end": "1703840"
  },
  {
    "text": "doing individual operational work with many different components even with these components that we've",
    "start": "1703840",
    "end": "1710240"
  },
  {
    "text": "we've specified we provide well-defined interfaces uh and abstractions rather than surfacing the full",
    "start": "1710240",
    "end": "1715679"
  },
  {
    "text": "implementation details about each of these components so one key superpower we've been able to",
    "start": "1715679",
    "end": "1721760"
  },
  {
    "start": "1719000",
    "end": "1782000"
  },
  {
    "text": "leverage is reducing the barrier of deployments engineers can ship to production from their very first week",
    "start": "1721760",
    "end": "1728240"
  },
  {
    "text": "just today by right about now we would have had hundreds of deployments of various services all across monzo once",
    "start": "1728240",
    "end": "1735520"
  },
  {
    "text": "code goes through automatic validation and gets peer reviewed and is approved and merged",
    "start": "1735520",
    "end": "1740640"
  },
  {
    "text": "into the main line it's ready to be deployed to production we've built a bespoke deployment tool",
    "start": "1740640",
    "end": "1746080"
  },
  {
    "text": "called shipper which handles all of the complexities like rolling deployments in kubernetes",
    "start": "1746080",
    "end": "1751120"
  },
  {
    "text": "and running migrations in cassandra it deals with the services that might",
    "start": "1751120",
    "end": "1756960"
  },
  {
    "text": "look unhappy so that it can roll them back and deployment's going bad all this",
    "start": "1756960",
    "end": "1762159"
  },
  {
    "text": "means is that we can build and roll out changes in minutes uh using a single command every engineer",
    "start": "1762159",
    "end": "1767360"
  },
  {
    "text": "is empowered to do this at monzo engineers shouldn't be expected to know complex things like kubernetes and",
    "start": "1767360",
    "end": "1772559"
  },
  {
    "text": "cassandra they don't have to write yaml uh or write cql commands uh like which are like hands-drawn to",
    "start": "1772559",
    "end": "1780559"
  },
  {
    "text": "to deploy their services code generation is another avenue uh where we optimize",
    "start": "1780559",
    "end": "1786960"
  },
  {
    "start": "1782000",
    "end": "1831000"
  },
  {
    "text": "for engineer productivity uh and it gives us a lot of standardization as you can imagine with",
    "start": "1786960",
    "end": "1792159"
  },
  {
    "text": "now 1600 microservices the number of endpoints that are exposed is really really big we",
    "start": "1792159",
    "end": "1797919"
  },
  {
    "text": "define our api semantics in protocol buffers format and then use code generation tools",
    "start": "1797919",
    "end": "1803520"
  },
  {
    "text": "uh with our own extensions so we've extended upon the existing tooling available to generate the majority of boilerplate",
    "start": "1803520",
    "end": "1810399"
  },
  {
    "text": "code you can achieve something like this with grpc what this means is that",
    "start": "1810399",
    "end": "1816240"
  },
  {
    "text": "each service is usually about 500 to 1000 lines of actual business logic",
    "start": "1816240",
    "end": "1821279"
  },
  {
    "text": "and this includes if you've worked with go or the if uh does not equal nil code as well that kind of size is really",
    "start": "1821279",
    "end": "1828399"
  },
  {
    "text": "understandable for a group of engineers even really simple things and core",
    "start": "1828399",
    "end": "1833679"
  },
  {
    "text": "things like standardizing service naming so you know nobody is deploying a service with like uh with innuendo names",
    "start": "1833679",
    "end": "1840000"
  },
  {
    "text": "uh you know each service is well described in its naming uh and service structure the way we we structure files you know where do you",
    "start": "1840000",
    "end": "1846559"
  },
  {
    "text": "put particular files uh within within your code is all standardized the vast majority of services use a",
    "start": "1846559",
    "end": "1853200"
  },
  {
    "text": "standardized service generator so all this code is generated up front and the service structure is generated up front no matter what",
    "start": "1853200",
    "end": "1860399"
  },
  {
    "text": "team i go into i know where i can find the database code it will be in the dial folder",
    "start": "1860399",
    "end": "1865519"
  },
  {
    "text": "or i know where i can find the routing logic it will be in the handler folder cue consumers will be in the consumer",
    "start": "1865519",
    "end": "1871279"
  },
  {
    "text": "folder this allows for much easier collaboration and onboarding for engineers onto different",
    "start": "1871279",
    "end": "1876640"
  },
  {
    "text": "teams at monza engineers move around teams really often we are really flexible and growing organization so",
    "start": "1876640",
    "end": "1883519"
  },
  {
    "text": "having this sort of standardization across all the teams is really really important once you get used to the",
    "start": "1883519",
    "end": "1888880"
  },
  {
    "text": "structure in one area you can be a power user across the entire repository across all of our",
    "start": "1888880",
    "end": "1894320"
  },
  {
    "text": "services now if you're working in a language like go you can build parsers and understand",
    "start": "1894320",
    "end": "1900480"
  },
  {
    "text": "your existing code and extract information from code go provide this to you right from the",
    "start": "1900480",
    "end": "1905919"
  },
  {
    "text": "standard library we've as we standardize our service uh structure we've been able to build",
    "start": "1905919",
    "end": "1911039"
  },
  {
    "text": "tooling uh and can operate across all of our services for example this tool on screen called",
    "start": "1911039",
    "end": "1916480"
  },
  {
    "text": "service query uh which can print out all of the api endpoints for a given service and parameters straight",
    "start": "1916480",
    "end": "1922000"
  },
  {
    "text": "from the code so even if it's not been well defined in the in the protocol buffers which is definitely an anti-pattern",
    "start": "1922000",
    "end": "1928080"
  },
  {
    "text": "it can extract that information directly from the code we can use the same tooling to do static",
    "start": "1928080",
    "end": "1933600"
  },
  {
    "text": "analysis and validation when you submit a pull request so that means a cognitive overhead for an engineer to peer review",
    "start": "1933600",
    "end": "1939440"
  },
  {
    "text": "and make sure that this change is safe and potentially backwards and forwards compatible is all delegated to automated tooling",
    "start": "1939440",
    "end": "1946320"
  },
  {
    "text": "we've reduced the risk of engineers making breaking changes when they are deploying their code",
    "start": "1946320",
    "end": "1952240"
  },
  {
    "text": "and violations are automatically detected and can be rectified during the pull request process using",
    "start": "1952240",
    "end": "1958080"
  },
  {
    "text": "automated tooling before they merge into the main line every single go service using our",
    "start": "1958080",
    "end": "1964480"
  },
  {
    "start": "1961000",
    "end": "2029000"
  },
  {
    "text": "libraries gets a wealth of metrics built for free engineers can go to a",
    "start": "1964480",
    "end": "1970080"
  },
  {
    "text": "common fully templated dashboard type in their service name and within the first minute of deploying a new service have",
    "start": "1970080",
    "end": "1976240"
  },
  {
    "text": "up-to-date visualizations and metrics about how many http calls they're making how many cassandra calls they might be",
    "start": "1976240",
    "end": "1982240"
  },
  {
    "text": "making how many locks they are taking cpu information a wealth of information this also feeds",
    "start": "1982240",
    "end": "1988240"
  },
  {
    "text": "into automated alerting so if a team has deployed a service and has not quite figured out the correct threshold they can rely on",
    "start": "1988240",
    "end": "1995360"
  },
  {
    "text": "they can fall back on automated alerting which we already have so if a service is really degrading and causing a potential impact the",
    "start": "1995360",
    "end": "2002399"
  },
  {
    "text": "automated alerting will catch that uh beforehand alerts are automatically",
    "start": "2002399",
    "end": "2007519"
  },
  {
    "text": "routed to the right team which owns the service so when a service is first built before it's even merged into the main line",
    "start": "2007519",
    "end": "2013360"
  },
  {
    "text": "each service has to have a team owner assigned to it and this is categorized uh specifically in a code owner's file",
    "start": "2013360",
    "end": "2019919"
  },
  {
    "text": "which is uh monitored and automated by github this means that we have good visibility",
    "start": "2019919",
    "end": "2025360"
  },
  {
    "text": "and ownership across our entire set of services similarly we've spent a lot of time uh",
    "start": "2025360",
    "end": "2033440"
  },
  {
    "start": "2029000",
    "end": "2078000"
  },
  {
    "text": "on our back end to unify our rpc layer so when a service calls another service",
    "start": "2033440",
    "end": "2038559"
  },
  {
    "text": "uh to communicate with each other this means that things like trace ids and context parameters are",
    "start": "2038559",
    "end": "2045440"
  },
  {
    "text": "passed across service boundaries from there we can use uh technologies like open tracing and open telemetry",
    "start": "2045440",
    "end": "2051760"
  },
  {
    "text": "uh and open source tools like jager to provide rich traces of each hop here you can narrow down how",
    "start": "2051760",
    "end": "2058398"
  },
  {
    "text": "long each hop took uh and and the dependencies on external services and systems",
    "start": "2058399",
    "end": "2063440"
  },
  {
    "text": "we've baked in cassandra integration and lcd integration right into the library so that we can",
    "start": "2063440",
    "end": "2068560"
  },
  {
    "text": "visualize all of that in jaeger so it's not just about rpcs you want to also want to trace your queries to the",
    "start": "2068560",
    "end": "2074560"
  },
  {
    "text": "database what actual query was made how long did it take",
    "start": "2074560",
    "end": "2079599"
  },
  {
    "start": "2078000",
    "end": "2100000"
  },
  {
    "text": "sometimes engineers want to follow a request path through service boundaries and see logs in a unified view by having",
    "start": "2079599",
    "end": "2086240"
  },
  {
    "text": "consistent trace ids which are propagated we can tag logs automatically on our back end which makes it really easy for",
    "start": "2086240",
    "end": "2092960"
  },
  {
    "text": "querying what happened between service boundaries and you can log information and see in detail what every single request went",
    "start": "2092960",
    "end": "2099440"
  },
  {
    "text": "through now there is nothing unique about our platform which makes this exclusive to",
    "start": "2099440",
    "end": "2104880"
  },
  {
    "start": "2100000",
    "end": "2117000"
  },
  {
    "text": "monzo we leverage the same open source tools like prometheus like grafana like the elastic stack",
    "start": "2104880",
    "end": "2110640"
  },
  {
    "text": "and open telemetry to collect aggregate and visualize this sort of data you can do the same on your platform",
    "start": "2110640",
    "end": "2118880"
  },
  {
    "text": "so all of this philosophy is around having effectively a paved road where it's just",
    "start": "2119920",
    "end": "2125520"
  },
  {
    "text": "the easiest option and if you go along with that and the tools that we provided satisfy the problem you have you just",
    "start": "2125520",
    "end": "2132960"
  },
  {
    "text": "get all of this stuff for free um so if that thing is so compelling",
    "start": "2132960",
    "end": "2138960"
  },
  {
    "text": "that there's just like there are other options but you have to do a lot of other work",
    "start": "2138960",
    "end": "2144720"
  },
  {
    "text": "then it means you end up with this a very consistent view across most of your platform it's not",
    "start": "2144720",
    "end": "2150560"
  },
  {
    "text": "mandatory uh there are certain cases where we need to use other tools but because we have a very very strong",
    "start": "2150560",
    "end": "2157040"
  },
  {
    "text": "default it means that 99 of our system uses the default",
    "start": "2157040",
    "end": "2162960"
  },
  {
    "start": "2163000",
    "end": "2223000"
  },
  {
    "text": "and this starts from day one as an engineer we go through the onboarding flow and we kind of talk about the the things",
    "start": "2164079",
    "end": "2171040"
  },
  {
    "text": "that we want people to think about um and have a documented way to like bring people up to speed",
    "start": "2171040",
    "end": "2177839"
  },
  {
    "text": "i think having that um that training and giving people an easy path to onboard",
    "start": "2177839",
    "end": "2184480"
  },
  {
    "text": "is is really important um and then you can rely on shared",
    "start": "2184480",
    "end": "2189599"
  },
  {
    "text": "expertise uh across the company so we have a lots of patterns for",
    "start": "2189599",
    "end": "2196480"
  },
  {
    "text": "solving problems across all these services and within many teams and as engineers",
    "start": "2196480",
    "end": "2201680"
  },
  {
    "text": "join the company as we grow we can leverage that uh repeatedly but crucially you don't need to know how",
    "start": "2201680",
    "end": "2207359"
  },
  {
    "text": "1600 different systems work different teams are working on a cluster",
    "start": "2207359",
    "end": "2212400"
  },
  {
    "text": "and those clusters operate very particular systems so generally a team",
    "start": "2212400",
    "end": "2218160"
  },
  {
    "text": "a person will join a team and they would be looking at a very particular thing",
    "start": "2218160",
    "end": "2223520"
  },
  {
    "start": "2223000",
    "end": "2262000"
  },
  {
    "text": "and that applies to lots of different things local development for example right now it's clearly impossible to",
    "start": "2223680",
    "end": "2230160"
  },
  {
    "text": "spend 1600 things up on your laptop um dockers containers with your database in don't really like that many things",
    "start": "2230160",
    "end": "2236160"
  },
  {
    "text": "connecting to you but building go binaries is really quick so we you",
    "start": "2236160",
    "end": "2242000"
  },
  {
    "text": "very rarely need to run many of these things you're running a subset and we have uh essentially an rpc filter that can",
    "start": "2242000",
    "end": "2247760"
  },
  {
    "text": "detect that you're trying to send a request to a downstream that isn't currently running and it can compile it and start",
    "start": "2247760",
    "end": "2253440"
  },
  {
    "text": "it and then send the request to it and that means that as you're using the the platform locally you just spin up the",
    "start": "2253440",
    "end": "2258640"
  },
  {
    "text": "things that you're needing um and we'll refine that progressively over time so yeah there are some times where we do",
    "start": "2258640",
    "end": "2264560"
  },
  {
    "start": "2262000",
    "end": "2289000"
  },
  {
    "text": "need to deviate from this pave road um for example we use machine learning",
    "start": "2264560",
    "end": "2270000"
  },
  {
    "text": "systems that are primarily in python but for most of our business logic our our approaching go satisfies those",
    "start": "2270000",
    "end": "2277119"
  },
  {
    "text": "requirements and that's really the the benefit of the microservice architecture we can use the right tool for the job",
    "start": "2277119",
    "end": "2282960"
  },
  {
    "text": "in our case go is generally that right tool but when we do need something else we can totally use that",
    "start": "2282960",
    "end": "2290240"
  },
  {
    "text": "so in summary we accept that we've traded off some computational efficiency",
    "start": "2290560",
    "end": "2296320"
  },
  {
    "text": "but as a result we've been able to leverage organizational flexibility by building services",
    "start": "2296320",
    "end": "2301599"
  },
  {
    "text": "which are granular enough to be easily understood ownership is really well defined but it",
    "start": "2301599",
    "end": "2307440"
  },
  {
    "text": "must and it must be well defined but can be more fluid as a response to market behavior and goals of the company",
    "start": "2307440",
    "end": "2315280"
  },
  {
    "text": "each service shares the same code structure and the same tooling this reduces cognitive",
    "start": "2315280",
    "end": "2320320"
  },
  {
    "text": "overhead for every engineer that is currently at monza and joins monzo it is allow us to gain a lot",
    "start": "2320320",
    "end": "2327280"
  },
  {
    "text": "of scalability by being able to independently deploy these microservices",
    "start": "2327280",
    "end": "2333119"
  },
  {
    "text": "and by standing on standardizing on that small set of technology choices we can as a group",
    "start": "2333359",
    "end": "2339680"
  },
  {
    "text": "collectively improve those tools so engineers can focus on the business problem at hand and our",
    "start": "2339680",
    "end": "2346079"
  },
  {
    "text": "overall underlying systems get progressively better over time uh and yeah that means we can focus on",
    "start": "2346079",
    "end": "2351839"
  },
  {
    "text": "the business problem we don't have to think about the underlying infrastructure all the time at the same time our platform teams can",
    "start": "2351839",
    "end": "2358960"
  },
  {
    "text": "continuously work on that and raise that bar of abstraction continuously so that",
    "start": "2358960",
    "end": "2364800"
  },
  {
    "text": "as we go things get easier and easier so breaking down the complexity into",
    "start": "2364800",
    "end": "2370880"
  },
  {
    "start": "2367000",
    "end": "2402000"
  },
  {
    "text": "bite-sized chunks means that each service is simpler and easy to understand the granularity and ownership of services",
    "start": "2370880",
    "end": "2377760"
  },
  {
    "text": "reduces the contention between teams while risk is reduced as we can make small isolated changes",
    "start": "2377760",
    "end": "2383920"
  },
  {
    "text": "to specific sections of our systems all of this is an aid of reducing the barriers to make changes",
    "start": "2383920",
    "end": "2390000"
  },
  {
    "text": "allows us to serve our customers better which is ultimately what we want to do as an organization we want engineers to feel empowered to",
    "start": "2390000",
    "end": "2396640"
  },
  {
    "text": "work on new and innovative functionality and deliver a better product to customers",
    "start": "2396640",
    "end": "2403040"
  },
  {
    "start": "2402000",
    "end": "2500000"
  },
  {
    "text": "thank you very much",
    "start": "2403280",
    "end": "2411839"
  },
  {
    "text": "thank you very much we do have time for questions and i'm sure we'll have a few are we here we go i'm gonna start the front",
    "start": "2412640",
    "end": "2418640"
  },
  {
    "text": "because it's easy hi thanks so much i just wondered about do you have strict guidelines on um",
    "start": "2418640",
    "end": "2425280"
  },
  {
    "text": "things like that the maximum size of a service and do you have strict coding guidelines",
    "start": "2425280",
    "end": "2430960"
  },
  {
    "text": "as well length of maximum number of lines of code in the method and things like that",
    "start": "2430960",
    "end": "2436640"
  },
  {
    "text": "um we don't prescribe any strict guidelines because there will always be exceptions uh to any sort of guidelines",
    "start": "2436640",
    "end": "2443280"
  },
  {
    "text": "that you you put in in terms of like code formatting and stuff like that goes really really good uh at enforcing that sort of stuff so",
    "start": "2443280",
    "end": "2450240"
  },
  {
    "text": "making sure that you have uh proper error handling make sure that you're not skipping of errors which is something that go allows you to do",
    "start": "2450240",
    "end": "2456079"
  },
  {
    "text": "uh you know we have static analysis uh as an uh advanced check on top of that to make sure that you are not papering over",
    "start": "2456079",
    "end": "2462640"
  },
  {
    "text": "errors even if you you have to make a really strong justification and add an explicit annotation a comment",
    "start": "2462640",
    "end": "2468160"
  },
  {
    "text": "in the code to explain why an error is being skipped why you think this will succeed 100 of",
    "start": "2468160",
    "end": "2473440"
  },
  {
    "text": "the time even though the interface doesn't allude to that we don't prescribe any strict guidelines in terms of the amount of code you can",
    "start": "2473440",
    "end": "2479760"
  },
  {
    "text": "have within a function ultimately code needs to be readable to other humans uh you know computers are really good at",
    "start": "2479760",
    "end": "2486000"
  },
  {
    "text": "optimizing code and squishing it down and like inlining it when necessary so optimize code for readability for",
    "start": "2486000",
    "end": "2491839"
  },
  {
    "text": "humans so one of our engineering principles is not to optimize unless it's a bottleneck and that sort",
    "start": "2491839",
    "end": "2498240"
  },
  {
    "text": "of stuff works really really well and we also have on our engineering principles which is something which",
    "start": "2498240",
    "end": "2504800"
  },
  {
    "start": "2500000",
    "end": "2528000"
  },
  {
    "text": "uh we kind of expect everybody to adhere to we want to optimize for code being read",
    "start": "2504800",
    "end": "2509839"
  },
  {
    "text": "and for code being debugged um so yeah optimizing introduces complexity",
    "start": "2509839",
    "end": "2515680"
  },
  {
    "text": "like every time and it's pretty rare that we actually need that complexity",
    "start": "2515680",
    "end": "2520960"
  },
  {
    "text": "so optimizing for legibility if that's the size of functions or whatever yeah",
    "start": "2520960",
    "end": "2526560"
  },
  {
    "text": "it's the best way do you ever find that you need to update",
    "start": "2526560",
    "end": "2533599"
  },
  {
    "start": "2528000",
    "end": "2646000"
  },
  {
    "text": "a whole bunch of services at once and how do you go about doing that so like a security vulnerability or",
    "start": "2533599",
    "end": "2539760"
  },
  {
    "text": "something like that yeah good question um i can't think of many times we've touched it for security reasons but yeah",
    "start": "2539760",
    "end": "2546480"
  },
  {
    "text": "we i can give you a very concrete example um we have an inter interface to send metrics for it goes to",
    "start": "2546480",
    "end": "2553040"
  },
  {
    "text": "a prometheus library but it's kind of wrapped we used to use influx db and we sub that out for prometheus without any code",
    "start": "2553040",
    "end": "2559920"
  },
  {
    "text": "changes because we have this like very simple interface but that interface does not have a context and we want to be able to",
    "start": "2559920",
    "end": "2566000"
  },
  {
    "text": "propagate contexts all the way through our stack so at this point we have 1500 services",
    "start": "2566000",
    "end": "2572240"
  },
  {
    "text": "which have many many many instrumentation calls and we need to add a context parameter",
    "start": "2572240",
    "end": "2577280"
  },
  {
    "text": "at the beginning of every single one because we want to update the shared library i think this is where having a mono repo",
    "start": "2577280",
    "end": "2582560"
  },
  {
    "text": "works really really well for us in that particular case we wanted to change the library to have a",
    "start": "2582560",
    "end": "2587760"
  },
  {
    "text": "change the interface so if we couldn't refactor everything in one go we would have had to add a new one",
    "start": "2587760",
    "end": "2592880"
  },
  {
    "text": "mark the old one as deprecated have some migration period and then like some enforcement mechanism",
    "start": "2592880",
    "end": "2598880"
  },
  {
    "text": "to get people to move over to the new thing because we have monorepo we could change that and use goes",
    "start": "2598880",
    "end": "2605040"
  },
  {
    "text": "reformatting tools to add a context to every single call across the entire custom",
    "start": "2605040",
    "end": "2610160"
  },
  {
    "text": "uh the entire code base in a single commit um and then yeah that was a pull request we",
    "start": "2610160",
    "end": "2615680"
  },
  {
    "text": "had to get approval from the teams because we changed their code but that meant that we could do that refactoring like in essentially one",
    "start": "2615680",
    "end": "2622000"
  },
  {
    "text": "atomic unit now we have to deploy 1500 services um so we have tools around that but but",
    "start": "2622000",
    "end": "2628800"
  },
  {
    "text": "again like we have lots of testing around these things and we have lots of tooling that allows",
    "start": "2628800",
    "end": "2633920"
  },
  {
    "text": "us to initiate roll out and if that's not working well we it will automatically roll back",
    "start": "2633920",
    "end": "2639200"
  },
  {
    "text": "um so like because we have those safety mechanisms in place we can do that with a quite high degree of confidence",
    "start": "2639200",
    "end": "2646720"
  },
  {
    "start": "2646000",
    "end": "2663000"
  },
  {
    "text": "so you're using uh cassandra as your main database which i'm sure surprises",
    "start": "2646800",
    "end": "2652400"
  },
  {
    "text": "some because it's not generally associated with like acid and all of these other things that you kind of",
    "start": "2652400",
    "end": "2657520"
  },
  {
    "text": "expect of banks but it does have tunable consistency could you comment on how you use it a little bit yes so um",
    "start": "2657520",
    "end": "2666160"
  },
  {
    "start": "2663000",
    "end": "2690000"
  },
  {
    "text": "i think there's a common misconception that uh banks must be acid compliant um eric brewer wrote a really",
    "start": "2666160",
    "end": "2672480"
  },
  {
    "text": "interesting post uh i think in like 2006 uh several years ago about how bank banks are uh basically",
    "start": "2672480",
    "end": "2680240"
  },
  {
    "text": "available with soft state and eventual consistency uh it's their base rather than acid um",
    "start": "2680240",
    "end": "2686160"
  },
  {
    "text": "which if you do chemistry is super entertaining joe and i think that that's the thing that",
    "start": "2686160",
    "end": "2692640"
  },
  {
    "start": "2690000",
    "end": "2801000"
  },
  {
    "text": "we really have to like think about here um in our case we use cassandra because it provides",
    "start": "2692640",
    "end": "2697839"
  },
  {
    "text": "a a masterless horizontally scalable database that gives us a lot of uh",
    "start": "2697839",
    "end": "2704960"
  },
  {
    "text": "controls over writing the data to multiple locations we don't have this like one server",
    "start": "2704960",
    "end": "2710240"
  },
  {
    "text": "a primary that fails over to a secondary and we can avoid those problems but we've traded off the ability to have",
    "start": "2710240",
    "end": "2716839"
  },
  {
    "text": "transactional consistency so that might sound insane for a bank",
    "start": "2716839",
    "end": "2722560"
  },
  {
    "text": "but we can provide those things and in many cases the financial networks already deal with this if you tap your card which has which",
    "start": "2722560",
    "end": "2729599"
  },
  {
    "text": "supports offline transactions in a store most cards will allow you to do three or",
    "start": "2729599",
    "end": "2735440"
  },
  {
    "text": "so transactions for up to 30 pounds and hypothetically your bank may only",
    "start": "2735440",
    "end": "2740880"
  },
  {
    "text": "find out about that two or three days later at which point we the bank is now told you spent 28 pounds on your card",
    "start": "2740880",
    "end": "2746960"
  },
  {
    "text": "if you don't have 28 pounds they're still going to remove 28 pounds from your account um so you have a series of like",
    "start": "2746960",
    "end": "2752560"
  },
  {
    "text": "commutative operations that are like debit 28 pounds credit lots of pounds debit some number of",
    "start": "2752560",
    "end": "2759359"
  },
  {
    "text": "pounds so when we talk about consistency and transactional isolation",
    "start": "2759359",
    "end": "2765520"
  },
  {
    "text": "you're trading off financial risk for consistency and sometimes that's okay and sometimes",
    "start": "2765520",
    "end": "2772240"
  },
  {
    "text": "that's not okay and we have a variety of different systems some things we won't allow transactions to happen unless we can",
    "start": "2772240",
    "end": "2778560"
  },
  {
    "text": "achieve a lock and successfully complete a transaction and then unlock but in many other cases we get",
    "start": "2778560",
    "end": "2784240"
  },
  {
    "text": "told about it two or three days later in which case we don't need a lock we we have a cube of things to apply to people's accounts",
    "start": "2784240",
    "end": "2790240"
  },
  {
    "text": "and at that point like we don't really rely on the eventual consistency that much",
    "start": "2790240",
    "end": "2795359"
  },
  {
    "text": "in that particular case but we don't need like transactional isolation",
    "start": "2795359",
    "end": "2802240"
  },
  {
    "text": "considering the volume of microservices how to maintain versioning and",
    "start": "2802240",
    "end": "2808800"
  },
  {
    "text": "integration testing and system integration testing um so for versioning and integration",
    "start": "2808800",
    "end": "2816000"
  },
  {
    "start": "2813000",
    "end": "2915000"
  },
  {
    "text": "testing i think this is where our like mono repository our single repository for all of our services uh",
    "start": "2816000",
    "end": "2821040"
  },
  {
    "text": "really really helps so for example uh every single service that is deployed runs through a",
    "start": "2821040",
    "end": "2827920"
  },
  {
    "text": "battery of unit tests but we could do uh automatic validation and and inference",
    "start": "2827920",
    "end": "2833520"
  },
  {
    "text": "to see uh go through the ast and figure out what services have changed so we we only need to run the tests for",
    "start": "2833520",
    "end": "2840079"
  },
  {
    "text": "services and their dependencies and their upstream dependencies so the service graph can get smaller and smaller so if",
    "start": "2840079",
    "end": "2845440"
  },
  {
    "text": "you've made a localized change to your particular service we can isolate the testing to that service obviously uh",
    "start": "2845440",
    "end": "2851839"
  },
  {
    "text": "we also have full integration testing on like offline boxes uh that we run uh periodically to make",
    "start": "2851839",
    "end": "2858400"
  },
  {
    "text": "sure that the full state of the system is in a consistent and like you know a nice green state",
    "start": "2858400",
    "end": "2863839"
  },
  {
    "text": "um so what was the last bit of your question system integration testing um so",
    "start": "2863839",
    "end": "2871119"
  },
  {
    "text": "naturally what we do is uh for our integration testing we spin up these real components in containers uh",
    "start": "2871119",
    "end": "2876720"
  },
  {
    "text": "and you know we're doing a bunch of work at the moment uh so that these these systems can call into our platform",
    "start": "2876720",
    "end": "2883200"
  },
  {
    "text": "so we do run integration testing into our staging platform uh ideally we'd be able to run these uh",
    "start": "2883200",
    "end": "2888480"
  },
  {
    "text": "integration tests in a isolated platform um like maybe in production maybe some variation of",
    "start": "2888480",
    "end": "2894160"
  },
  {
    "text": "production uh you know which is not a testing environment with test data uh you know to make sure that we are we",
    "start": "2894160",
    "end": "2900640"
  },
  {
    "text": "are like testing our assumptions properly we now have four million customers it's completely different order of magnitude than having",
    "start": "2900640",
    "end": "2906000"
  },
  {
    "text": "a few thousand uh test cases in a staging environment uh so to make sure that we are testing",
    "start": "2906000",
    "end": "2911119"
  },
  {
    "text": "our assumptions properly so that's a unit of work that we are undertaking right now and we've got time for two",
    "start": "2911119",
    "end": "2916720"
  },
  {
    "start": "2915000",
    "end": "2951000"
  },
  {
    "text": "more questions there's one over there and one over here cool um just a quick",
    "start": "2916720",
    "end": "2921839"
  },
  {
    "text": "question in terms of testing microservices in terms of environments you kind of get",
    "start": "2921839",
    "end": "2927440"
  },
  {
    "text": "your test pre-pro prod i'm more interested in terms of the data",
    "start": "2927440",
    "end": "2932559"
  },
  {
    "text": "side and how you test i guess around that and manage considering gdpr considering you're",
    "start": "2932559",
    "end": "2938800"
  },
  {
    "text": "working with a lot of customer data like how do you kind of manage or what guidelines",
    "start": "2938800",
    "end": "2944240"
  },
  {
    "text": "do you have or tips in terms of just i guess testing lower database environments if that makes",
    "start": "2944240",
    "end": "2950079"
  },
  {
    "text": "sense so in the case of testing in staging or pre-production",
    "start": "2950079",
    "end": "2955599"
  },
  {
    "start": "2951000",
    "end": "3059000"
  },
  {
    "text": "um we effectively have we want to create test cases that are realistic um but they don't need to be real people",
    "start": "2955599",
    "end": "2962800"
  },
  {
    "text": "uh so we have lots of like things that generate people's names and like randomized data",
    "start": "2962800",
    "end": "2968480"
  },
  {
    "text": "but then have you know relatively realistic test cases um that we can generate pre-fill into",
    "start": "2968480",
    "end": "2975200"
  },
  {
    "text": "the database and then we can test with those um so there's kind of that aspect as far",
    "start": "2975200",
    "end": "2980559"
  },
  {
    "text": "as as soon as you're in production i mean yes you have real people's data",
    "start": "2980559",
    "end": "2986559"
  },
  {
    "text": "um that is something that we take very very seriously so we we can't just like yeah run tests against people's accounts",
    "start": "2986559",
    "end": "2994960"
  },
  {
    "text": "we do use so one thing we did when we ran crowdfunding uh year and a half ago uh we ran that",
    "start": "2995040",
    "end": "3002000"
  },
  {
    "text": "through the same platform which again might sound a bit crazy um so in order to know that you can support",
    "start": "3002000",
    "end": "3007599"
  },
  {
    "text": "that you need to be able to test things very very uh accurately",
    "start": "3007599",
    "end": "3013040"
  },
  {
    "text": "and one of the techniques we used there was using shadow traffic so i think like facebook and a couple of",
    "start": "3013040",
    "end": "3018880"
  },
  {
    "text": "other companies have tried this essentially we updated our system to take a request that was an item potent",
    "start": "3018880",
    "end": "3024960"
  },
  {
    "text": "like let's say a read and we could pass that through and then give the response back to the customer and then this proxy could then",
    "start": "3024960",
    "end": "3032319"
  },
  {
    "text": "sit there and repeat that request a randomized number of times yeah uh",
    "start": "3032319",
    "end": "3039839"
  },
  {
    "text": "hi there uh i think i think we're being asked to stumble okay no no",
    "start": "3039839",
    "end": "3049040"
  },
  {
    "text": "that's a no sorry everyone uh sue hale and matt will be around for a little bit if you want to try and grab them",
    "start": "3049280",
    "end": "3055040"
  },
  {
    "text": "thank you very much thank you",
    "start": "3055040",
    "end": "3061040"
  }
]