[
  {
    "start": "0",
    "end": "35000"
  },
  {
    "text": "[Music]",
    "start": "3360",
    "end": "6550"
  },
  {
    "text": "hello",
    "start": "9760",
    "end": "10559"
  },
  {
    "text": "my name is shama and i'm the vp of",
    "start": "10559",
    "end": "12719"
  },
  {
    "text": "software engineering at github",
    "start": "12719",
    "end": "14719"
  },
  {
    "text": "responsible for core platform and",
    "start": "14719",
    "end": "16400"
  },
  {
    "text": "ecosystem products",
    "start": "16400",
    "end": "18560"
  },
  {
    "text": "prior to github i was vp of software",
    "start": "18560",
    "end": "20960"
  },
  {
    "text": "engineering at cengrid",
    "start": "20960",
    "end": "22320"
  },
  {
    "text": "and was part of the leadership team that",
    "start": "22320",
    "end": "24240"
  },
  {
    "text": "took the company public in 2017.",
    "start": "24240",
    "end": "27599"
  },
  {
    "text": "i'm excited to be at qcon today to talk",
    "start": "27599",
    "end": "29920"
  },
  {
    "text": "to you about github's recent journey",
    "start": "29920",
    "end": "31920"
  },
  {
    "text": "towards a microservices architecture",
    "start": "31920",
    "end": "35920"
  },
  {
    "start": "35000",
    "end": "65000"
  },
  {
    "text": "github was founded in 2008 as a way of",
    "start": "36399",
    "end": "39680"
  },
  {
    "text": "making it easier for developers to host",
    "start": "39680",
    "end": "42160"
  },
  {
    "text": "and share their code the founders of",
    "start": "42160",
    "end": "44800"
  },
  {
    "text": "github were open source contributors",
    "start": "44800",
    "end": "47039"
  },
  {
    "text": "and influencers in the ruby community",
    "start": "47039",
    "end": "50079"
  },
  {
    "text": "because of that github's architecture is",
    "start": "50079",
    "end": "52640"
  },
  {
    "text": "deeply rooted",
    "start": "52640",
    "end": "53680"
  },
  {
    "text": "in ruby on rails and over the course of",
    "start": "53680",
    "end": "56399"
  },
  {
    "text": "the company's history we have employed",
    "start": "56399",
    "end": "58719"
  },
  {
    "text": "some of the world's best",
    "start": "58719",
    "end": "60160"
  },
  {
    "text": "ruby developers to help us scale and",
    "start": "60160",
    "end": "62399"
  },
  {
    "text": "optimize our code base",
    "start": "62399",
    "end": "65600"
  },
  {
    "text": "today we have over 50 million developers",
    "start": "66000",
    "end": "69200"
  },
  {
    "text": "on our platform over 80 million pull",
    "start": "69200",
    "end": "72000"
  },
  {
    "text": "requests merged per year",
    "start": "72000",
    "end": "73439"
  },
  {
    "text": "and over a hundred million repositories",
    "start": "73439",
    "end": "76080"
  },
  {
    "text": "across",
    "start": "76080",
    "end": "76560"
  },
  {
    "text": "every continent of the world",
    "start": "76560",
    "end": "80159"
  },
  {
    "start": "80000",
    "end": "103000"
  },
  {
    "text": "as you can see a monolithic architecture",
    "start": "80720",
    "end": "83439"
  },
  {
    "text": "got us pretty far",
    "start": "83439",
    "end": "84799"
  },
  {
    "text": "a code base that's over 12 years old",
    "start": "84799",
    "end": "87360"
  },
  {
    "text": "coordinated deploy trains",
    "start": "87360",
    "end": "88960"
  },
  {
    "text": "that handle multiple deployments per day",
    "start": "88960",
    "end": "91680"
  },
  {
    "text": "a highly skilled platform",
    "start": "91680",
    "end": "93520"
  },
  {
    "text": "serving over a billion api calls on a",
    "start": "93520",
    "end": "96000"
  },
  {
    "text": "daily basis",
    "start": "96000",
    "end": "97119"
  },
  {
    "text": "and a fairly performant user interface",
    "start": "97119",
    "end": "99439"
  },
  {
    "text": "that focuses on getting the job done",
    "start": "99439",
    "end": "103280"
  },
  {
    "start": "103000",
    "end": "143000"
  },
  {
    "text": "internally github went through a",
    "start": "103920",
    "end": "105840"
  },
  {
    "text": "significant growth phase in the last 18",
    "start": "105840",
    "end": "108479"
  },
  {
    "text": "months",
    "start": "108479",
    "end": "109439"
  },
  {
    "text": "with over 2 000 employees we have more",
    "start": "109439",
    "end": "112240"
  },
  {
    "text": "than doubled",
    "start": "112240",
    "end": "113040"
  },
  {
    "text": "the number of engineers contributing to",
    "start": "113040",
    "end": "114880"
  },
  {
    "text": "our code base",
    "start": "114880",
    "end": "116479"
  },
  {
    "text": "we've grown both organically and through",
    "start": "116479",
    "end": "118960"
  },
  {
    "text": "acquisitions",
    "start": "118960",
    "end": "119840"
  },
  {
    "text": "such as summel npm dependable and pool",
    "start": "119840",
    "end": "123200"
  },
  {
    "text": "panda",
    "start": "123200",
    "end": "124799"
  },
  {
    "text": "additionally github is a highly",
    "start": "124799",
    "end": "126880"
  },
  {
    "text": "distributed team",
    "start": "126880",
    "end": "128000"
  },
  {
    "text": "with over 70 percent of our employees",
    "start": "128000",
    "end": "130239"
  },
  {
    "text": "working outside of our san francisco",
    "start": "130239",
    "end": "132239"
  },
  {
    "text": "headquarters",
    "start": "132239",
    "end": "133120"
  },
  {
    "text": "prior to the pandemic github employees",
    "start": "133120",
    "end": "136959"
  },
  {
    "text": "and contractors",
    "start": "136959",
    "end": "138080"
  },
  {
    "text": "collaborate across six continents",
    "start": "138080",
    "end": "140319"
  },
  {
    "text": "working in all time zones",
    "start": "140319",
    "end": "143760"
  },
  {
    "start": "143000",
    "end": "171000"
  },
  {
    "text": "with over a thousand internal developers",
    "start": "143760",
    "end": "146560"
  },
  {
    "text": "bringing a diverse set of skills",
    "start": "146560",
    "end": "148480"
  },
  {
    "text": "and operating in a wide range of",
    "start": "148480",
    "end": "150319"
  },
  {
    "text": "technologies it's become clear",
    "start": "150319",
    "end": "152560"
  },
  {
    "text": "that we need to fundamentally rethink",
    "start": "152560",
    "end": "155040"
  },
  {
    "text": "how we do software",
    "start": "155040",
    "end": "156000"
  },
  {
    "text": "development at github having everyone",
    "start": "156000",
    "end": "159280"
  },
  {
    "text": "learn ruby before they can be productive",
    "start": "159280",
    "end": "161519"
  },
  {
    "text": "and having everyone doing development in",
    "start": "161519",
    "end": "163840"
  },
  {
    "text": "the same monolithic code base",
    "start": "163840",
    "end": "165760"
  },
  {
    "text": "is no longer the most efficient and",
    "start": "165760",
    "end": "167920"
  },
  {
    "text": "optimal way to scale",
    "start": "167920",
    "end": "169440"
  },
  {
    "text": "github",
    "start": "169440",
    "end": "171840"
  },
  {
    "start": "171000",
    "end": "199000"
  },
  {
    "text": "according to conway's law which states",
    "start": "172480",
    "end": "175040"
  },
  {
    "text": "any organization that designs the system",
    "start": "175040",
    "end": "177760"
  },
  {
    "text": "will produce a design whose structure is",
    "start": "177760",
    "end": "180239"
  },
  {
    "text": "a copy of the organization's",
    "start": "180239",
    "end": "181840"
  },
  {
    "text": "communication structure",
    "start": "181840",
    "end": "184080"
  },
  {
    "text": "this also applies in reverse having a",
    "start": "184080",
    "end": "186720"
  },
  {
    "text": "monolithic environment",
    "start": "186720",
    "end": "188239"
  },
  {
    "text": "will lead to bigger stakeholder meetings",
    "start": "188239",
    "end": "190720"
  },
  {
    "text": "and more",
    "start": "190720",
    "end": "191280"
  },
  {
    "text": "complicated decision-making processes",
    "start": "191280",
    "end": "193680"
  },
  {
    "text": "because of interval and logic",
    "start": "193680",
    "end": "195440"
  },
  {
    "text": "and shared data that impact all the",
    "start": "195440",
    "end": "197440"
  },
  {
    "text": "teams",
    "start": "197440",
    "end": "199840"
  },
  {
    "text": "so this got us thinking is it finally",
    "start": "200480",
    "end": "202959"
  },
  {
    "text": "time to start migrating out of the ruby",
    "start": "202959",
    "end": "204879"
  },
  {
    "text": "on rails monolith",
    "start": "204879",
    "end": "206000"
  },
  {
    "text": "towards a microservices architecture if",
    "start": "206000",
    "end": "208720"
  },
  {
    "text": "so",
    "start": "208720",
    "end": "209280"
  },
  {
    "text": "how should we go about doing it",
    "start": "209280",
    "end": "213599"
  },
  {
    "start": "212000",
    "end": "314000"
  },
  {
    "text": "both monolithic and microservices",
    "start": "213599",
    "end": "215599"
  },
  {
    "text": "architectures have their advantages",
    "start": "215599",
    "end": "218000"
  },
  {
    "text": "in a monolithic environment it's easier",
    "start": "218000",
    "end": "220319"
  },
  {
    "text": "to get up and running faster",
    "start": "220319",
    "end": "222080"
  },
  {
    "text": "without having to worry about complex",
    "start": "222080",
    "end": "223840"
  },
  {
    "text": "dependencies and pulling in all the",
    "start": "223840",
    "end": "225680"
  },
  {
    "text": "right",
    "start": "225680",
    "end": "226000"
  },
  {
    "text": "pieces a new hover can get github",
    "start": "226000",
    "end": "229120"
  },
  {
    "text": "up and running on their local machine",
    "start": "229120",
    "end": "230799"
  },
  {
    "text": "within hours",
    "start": "230799",
    "end": "233280"
  },
  {
    "text": "there are some code level simplicities",
    "start": "233280",
    "end": "235200"
  },
  {
    "text": "in the monolith as well",
    "start": "235200",
    "end": "237120"
  },
  {
    "text": "for example you don't have to add extra",
    "start": "237120",
    "end": "239360"
  },
  {
    "text": "logic to deal with timeouts",
    "start": "239360",
    "end": "241280"
  },
  {
    "text": "or worry about failing gracefully due to",
    "start": "241280",
    "end": "243680"
  },
  {
    "text": "network latency and outages",
    "start": "243680",
    "end": "246480"
  },
  {
    "text": "additionally because everyone is working",
    "start": "246480",
    "end": "248480"
  },
  {
    "text": "in a shared tech stack",
    "start": "248480",
    "end": "249840"
  },
  {
    "text": "and has familiarity with the same code",
    "start": "249840",
    "end": "251840"
  },
  {
    "text": "base it's easier to move people and",
    "start": "251840",
    "end": "254080"
  },
  {
    "text": "teams around to work on different",
    "start": "254080",
    "end": "255439"
  },
  {
    "text": "features",
    "start": "255439",
    "end": "256160"
  },
  {
    "text": "within the monolith and push towards a",
    "start": "256160",
    "end": "258400"
  },
  {
    "text": "more global prioritization of features",
    "start": "258400",
    "end": "262240"
  },
  {
    "text": "but because of the way github has grown",
    "start": "262240",
    "end": "264320"
  },
  {
    "text": "in the last 18 months",
    "start": "264320",
    "end": "266240"
  },
  {
    "text": "some of the advantages of a",
    "start": "266240",
    "end": "267759"
  },
  {
    "text": "microservices environment",
    "start": "267759",
    "end": "269520"
  },
  {
    "text": "are starting to look really appealing to",
    "start": "269520",
    "end": "271440"
  },
  {
    "text": "us",
    "start": "271440",
    "end": "272639"
  },
  {
    "text": "for example setting up feature teams",
    "start": "272639",
    "end": "275440"
  },
  {
    "text": "with system level ownerships",
    "start": "275440",
    "end": "277360"
  },
  {
    "text": "and having functional boundaries through",
    "start": "277360",
    "end": "279520"
  },
  {
    "text": "clearly defined api contracts",
    "start": "279520",
    "end": "282160"
  },
  {
    "text": "the teams have a lot of freedom to",
    "start": "282160",
    "end": "284400"
  },
  {
    "text": "choose the tech stack that makes the",
    "start": "284400",
    "end": "285759"
  },
  {
    "text": "most sense for them",
    "start": "285759",
    "end": "287360"
  },
  {
    "text": "as long as the api contracts are",
    "start": "287360",
    "end": "288960"
  },
  {
    "text": "followed",
    "start": "288960",
    "end": "290800"
  },
  {
    "text": "smaller services also mean easier to",
    "start": "290800",
    "end": "293120"
  },
  {
    "text": "read code",
    "start": "293120",
    "end": "294080"
  },
  {
    "text": "quicker ramp up time and easier",
    "start": "294080",
    "end": "296000"
  },
  {
    "text": "troubleshooting within that code base",
    "start": "296000",
    "end": "298880"
  },
  {
    "text": "a developer no longer has to understand",
    "start": "298880",
    "end": "301280"
  },
  {
    "text": "all the inner workings of a large",
    "start": "301280",
    "end": "303199"
  },
  {
    "text": "monolithic code base",
    "start": "303199",
    "end": "304639"
  },
  {
    "text": "in order to be productive most",
    "start": "304639",
    "end": "307360"
  },
  {
    "text": "importantly",
    "start": "307360",
    "end": "308240"
  },
  {
    "text": "services can now be scaled separately",
    "start": "308240",
    "end": "310560"
  },
  {
    "text": "based on their individual needs",
    "start": "310560",
    "end": "314000"
  },
  {
    "start": "314000",
    "end": "379000"
  },
  {
    "text": "before we jumped into this transition at",
    "start": "315280",
    "end": "317280"
  },
  {
    "text": "github we spent some time thinking about",
    "start": "317280",
    "end": "319360"
  },
  {
    "text": "the why behind our decision",
    "start": "319360",
    "end": "321120"
  },
  {
    "text": "and our goals for making this change",
    "start": "321120",
    "end": "323520"
  },
  {
    "text": "it's a huge shift for us",
    "start": "323520",
    "end": "325199"
  },
  {
    "text": "from a cultural perspective and requires",
    "start": "325199",
    "end": "327759"
  },
  {
    "text": "a lot of work",
    "start": "327759",
    "end": "329120"
  },
  {
    "text": "so we need to be intentional and think",
    "start": "329120",
    "end": "331280"
  },
  {
    "text": "about what problems and pain points",
    "start": "331280",
    "end": "333520"
  },
  {
    "text": "we're actually trying to solve",
    "start": "333520",
    "end": "336720"
  },
  {
    "text": "at github we're doing this so we can",
    "start": "336720",
    "end": "339039"
  },
  {
    "text": "enable over",
    "start": "339039",
    "end": "339919"
  },
  {
    "text": "half of our developer base who joined us",
    "start": "339919",
    "end": "342320"
  },
  {
    "text": "in the last 18 months to be productive",
    "start": "342320",
    "end": "344560"
  },
  {
    "text": "outside of the monolith",
    "start": "344560",
    "end": "346639"
  },
  {
    "text": "the goal for us is enablement and not",
    "start": "346639",
    "end": "349440"
  },
  {
    "text": "replacement",
    "start": "349440",
    "end": "351120"
  },
  {
    "text": "and because of that we need to accept",
    "start": "351120",
    "end": "353039"
  },
  {
    "text": "the fact that at github",
    "start": "353039",
    "end": "354560"
  },
  {
    "text": "for the foreseeable future will be",
    "start": "354560",
    "end": "356960"
  },
  {
    "text": "hybrid monolith microservices",
    "start": "356960",
    "end": "358800"
  },
  {
    "text": "environment",
    "start": "358800",
    "end": "360160"
  },
  {
    "text": "which means it's still very important",
    "start": "360160",
    "end": "362319"
  },
  {
    "text": "for us to maintain",
    "start": "362319",
    "end": "363680"
  },
  {
    "text": "and improve the existing code base",
    "start": "363680",
    "end": "365520"
  },
  {
    "text": "inside the monolith",
    "start": "365520",
    "end": "368160"
  },
  {
    "text": "a good example of this is our recent",
    "start": "368160",
    "end": "370000"
  },
  {
    "text": "upgrade to ruby 2.7",
    "start": "370000",
    "end": "372479"
  },
  {
    "text": "you can read more about what we did and",
    "start": "372479",
    "end": "374240"
  },
  {
    "text": "how it made our overall systems better",
    "start": "374240",
    "end": "376319"
  },
  {
    "text": "on the github blog",
    "start": "376319",
    "end": "380080"
  },
  {
    "start": "379000",
    "end": "449000"
  },
  {
    "text": "good architecture starts with modularity",
    "start": "380080",
    "end": "382800"
  },
  {
    "text": "the first step",
    "start": "382800",
    "end": "383759"
  },
  {
    "text": "towards breaking up a monolith is to",
    "start": "383759",
    "end": "385680"
  },
  {
    "text": "think about the separation of code and",
    "start": "385680",
    "end": "387440"
  },
  {
    "text": "data",
    "start": "387440",
    "end": "388160"
  },
  {
    "text": "based on feature functionalities",
    "start": "388160",
    "end": "391520"
  },
  {
    "text": "this can be done within the monolith",
    "start": "391520",
    "end": "393440"
  },
  {
    "text": "before physically separating them in a",
    "start": "393440",
    "end": "395440"
  },
  {
    "text": "microservices environment",
    "start": "395440",
    "end": "397440"
  },
  {
    "text": "and it is generally a good architectural",
    "start": "397440",
    "end": "399680"
  },
  {
    "text": "practice",
    "start": "399680",
    "end": "400479"
  },
  {
    "text": "to make the codebase more manageable",
    "start": "400479",
    "end": "403919"
  },
  {
    "text": "start with the data and pay close",
    "start": "403919",
    "end": "405919"
  },
  {
    "text": "attention to how they are being accessed",
    "start": "405919",
    "end": "408880"
  },
  {
    "text": "make sure each service owns and controls",
    "start": "408880",
    "end": "411440"
  },
  {
    "text": "access",
    "start": "411440",
    "end": "412080"
  },
  {
    "text": "to its own data and that data access",
    "start": "412080",
    "end": "414560"
  },
  {
    "text": "only happens",
    "start": "414560",
    "end": "415680"
  },
  {
    "text": "through clearly defined api contracts",
    "start": "415680",
    "end": "418960"
  },
  {
    "text": "i've seen a lot of cases where people",
    "start": "418960",
    "end": "420720"
  },
  {
    "text": "start off by pulling out the code logic",
    "start": "420720",
    "end": "423280"
  },
  {
    "text": "but still rely on calls into a shared",
    "start": "423280",
    "end": "425599"
  },
  {
    "text": "database inside the monolith",
    "start": "425599",
    "end": "428479"
  },
  {
    "text": "this often leads to a distributed",
    "start": "428479",
    "end": "430639"
  },
  {
    "text": "monolith scenario",
    "start": "430639",
    "end": "432000"
  },
  {
    "text": "where it ends up being the worst of both",
    "start": "432000",
    "end": "434080"
  },
  {
    "text": "worlds",
    "start": "434080",
    "end": "435199"
  },
  {
    "text": "having to manage the complexities of",
    "start": "435199",
    "end": "437120"
  },
  {
    "text": "microservices",
    "start": "437120",
    "end": "438240"
  },
  {
    "text": "without any of the benefits benefits",
    "start": "438240",
    "end": "441440"
  },
  {
    "text": "such as being able to quickly and",
    "start": "441440",
    "end": "443440"
  },
  {
    "text": "independently deploy",
    "start": "443440",
    "end": "444880"
  },
  {
    "text": "a subset of features into production",
    "start": "444880",
    "end": "450240"
  },
  {
    "start": "449000",
    "end": "529000"
  },
  {
    "text": "getting data separation right is a",
    "start": "450240",
    "end": "452240"
  },
  {
    "text": "cornerstone in migrating from a",
    "start": "452240",
    "end": "453919"
  },
  {
    "text": "monolithic architecture",
    "start": "453919",
    "end": "455440"
  },
  {
    "text": "to microservices let's take a closer",
    "start": "455440",
    "end": "458400"
  },
  {
    "text": "look at how we approach this at github",
    "start": "458400",
    "end": "462400"
  },
  {
    "text": "first we identified the functional",
    "start": "462400",
    "end": "464479"
  },
  {
    "text": "boundaries within existing database",
    "start": "464479",
    "end": "466560"
  },
  {
    "text": "schemas",
    "start": "466560",
    "end": "467360"
  },
  {
    "text": "and group the actual database tables",
    "start": "467360",
    "end": "469280"
  },
  {
    "text": "along these boundaries",
    "start": "469280",
    "end": "471280"
  },
  {
    "text": "for example we grouped everything",
    "start": "471280",
    "end": "473120"
  },
  {
    "text": "related to repositories together",
    "start": "473120",
    "end": "475599"
  },
  {
    "text": "everything related to users together and",
    "start": "475599",
    "end": "478160"
  },
  {
    "text": "everything related to projects together",
    "start": "478160",
    "end": "481440"
  },
  {
    "text": "these resulting functional groups are",
    "start": "481440",
    "end": "483520"
  },
  {
    "text": "referred to as schema domains",
    "start": "483520",
    "end": "486319"
  },
  {
    "text": "and are captured in a yaml definitions",
    "start": "486319",
    "end": "488479"
  },
  {
    "text": "file",
    "start": "488479",
    "end": "489919"
  },
  {
    "text": "this is now our source of truth and it",
    "start": "489919",
    "end": "492479"
  },
  {
    "text": "is expected",
    "start": "492479",
    "end": "493440"
  },
  {
    "text": "to be updated whenever tables are added",
    "start": "493440",
    "end": "495680"
  },
  {
    "text": "or removed from our database schemas",
    "start": "495680",
    "end": "498879"
  },
  {
    "text": "we use a linter test to help remind",
    "start": "498879",
    "end": "501120"
  },
  {
    "text": "developers to keep this file updated as",
    "start": "501120",
    "end": "503360"
  },
  {
    "text": "they make those changes next",
    "start": "503360",
    "end": "506879"
  },
  {
    "text": "we identified a partition key for each",
    "start": "506879",
    "end": "509039"
  },
  {
    "text": "schema domain",
    "start": "509039",
    "end": "510319"
  },
  {
    "text": "this is a shared field that links all",
    "start": "510319",
    "end": "512479"
  },
  {
    "text": "the information together for a",
    "start": "512479",
    "end": "513919"
  },
  {
    "text": "functional group",
    "start": "513919",
    "end": "515599"
  },
  {
    "text": "for example the repository schema domain",
    "start": "515599",
    "end": "518640"
  },
  {
    "text": "which holds all the data related to",
    "start": "518640",
    "end": "520479"
  },
  {
    "text": "repos such as",
    "start": "520479",
    "end": "521680"
  },
  {
    "text": "issues pull request or review comments",
    "start": "521680",
    "end": "524720"
  },
  {
    "text": "uses repo id as the partition key",
    "start": "524720",
    "end": "528879"
  },
  {
    "start": "529000",
    "end": "574000"
  },
  {
    "text": "creating functional groups of database",
    "start": "530240",
    "end": "532240"
  },
  {
    "text": "schemas will eventually help us safely",
    "start": "532240",
    "end": "535040"
  },
  {
    "text": "split the data onto different servers",
    "start": "535040",
    "end": "537600"
  },
  {
    "text": "and clusters",
    "start": "537600",
    "end": "538640"
  },
  {
    "text": "needed for microservices architecture",
    "start": "538640",
    "end": "541760"
  },
  {
    "text": "but first we needed to fix current",
    "start": "541760",
    "end": "543920"
  },
  {
    "text": "queries that go",
    "start": "543920",
    "end": "545200"
  },
  {
    "text": "across domain boundaries so that we",
    "start": "545200",
    "end": "547519"
  },
  {
    "text": "don't end up breaking the product",
    "start": "547519",
    "end": "549200"
  },
  {
    "text": "when data separation happens at github",
    "start": "549200",
    "end": "552880"
  },
  {
    "text": "we",
    "start": "552880",
    "end": "553200"
  },
  {
    "text": "implemented a query watcher in the",
    "start": "553200",
    "end": "554800"
  },
  {
    "text": "monolith to help detect",
    "start": "554800",
    "end": "556480"
  },
  {
    "text": "and alert us anytime a query crosses",
    "start": "556480",
    "end": "558959"
  },
  {
    "text": "functional domains",
    "start": "558959",
    "end": "561360"
  },
  {
    "text": "we would then break up and rewrite these",
    "start": "561360",
    "end": "564080"
  },
  {
    "text": "queries into multiple queries",
    "start": "564080",
    "end": "566080"
  },
  {
    "text": "that respect the domain boundaries and",
    "start": "566080",
    "end": "568959"
  },
  {
    "text": "perform",
    "start": "568959",
    "end": "569519"
  },
  {
    "text": "any necessary joins at the application",
    "start": "569519",
    "end": "571839"
  },
  {
    "text": "layer",
    "start": "571839",
    "end": "574160"
  },
  {
    "text": "finally after all the functional groups",
    "start": "575600",
    "end": "577839"
  },
  {
    "text": "have been isolated",
    "start": "577839",
    "end": "578880"
  },
  {
    "text": "we can begin a similar process to",
    "start": "578880",
    "end": "580880"
  },
  {
    "text": "further shard our data",
    "start": "580880",
    "end": "582560"
  },
  {
    "text": "into tenant groups with over 50 million",
    "start": "582560",
    "end": "585839"
  },
  {
    "text": "users and 100 million repos",
    "start": "585839",
    "end": "588160"
  },
  {
    "text": "functional groups can grow pretty big at",
    "start": "588160",
    "end": "590320"
  },
  {
    "text": "github scale",
    "start": "590320",
    "end": "592160"
  },
  {
    "text": "this is where the partition keys we",
    "start": "592160",
    "end": "593680"
  },
  {
    "text": "talked about earlier come in handy",
    "start": "593680",
    "end": "596240"
  },
  {
    "text": "we can follow a similar process to",
    "start": "596240",
    "end": "598000"
  },
  {
    "text": "identify ranges of partition keys to",
    "start": "598000",
    "end": "600080"
  },
  {
    "text": "group together",
    "start": "600080",
    "end": "601519"
  },
  {
    "text": "for example an easy way is simply assign",
    "start": "601519",
    "end": "604399"
  },
  {
    "text": "different users to different data stores",
    "start": "604399",
    "end": "606560"
  },
  {
    "text": "based on numeric ranges but there's",
    "start": "606560",
    "end": "608959"
  },
  {
    "text": "probably more logical groupings",
    "start": "608959",
    "end": "610880"
  },
  {
    "text": "based on the characteristics of each",
    "start": "610880",
    "end": "612720"
  },
  {
    "text": "data set such as regions and size",
    "start": "612720",
    "end": "616240"
  },
  {
    "text": "tendentizing is a great way to limit the",
    "start": "616240",
    "end": "618880"
  },
  {
    "text": "blast radius",
    "start": "618880",
    "end": "620000"
  },
  {
    "text": "of data storage failures to only a",
    "start": "620000",
    "end": "622240"
  },
  {
    "text": "subset of your customers",
    "start": "622240",
    "end": "623680"
  },
  {
    "text": "versus impacting everyone all at once",
    "start": "623680",
    "end": "628079"
  },
  {
    "start": "627000",
    "end": "730000"
  },
  {
    "text": "all right we have spent quite a bit of",
    "start": "628720",
    "end": "630959"
  },
  {
    "text": "time talking about the importance of",
    "start": "630959",
    "end": "632880"
  },
  {
    "text": "data separation",
    "start": "632880",
    "end": "634880"
  },
  {
    "text": "now let's switch gears and talk about",
    "start": "634880",
    "end": "637040"
  },
  {
    "text": "how to lay the groundwork",
    "start": "637040",
    "end": "638640"
  },
  {
    "text": "for extracting services out of the",
    "start": "638640",
    "end": "640480"
  },
  {
    "text": "monolith",
    "start": "640480",
    "end": "642959"
  },
  {
    "text": "it's important to keep in mind that",
    "start": "642959",
    "end": "644959"
  },
  {
    "text": "dependency direction should always go",
    "start": "644959",
    "end": "646959"
  },
  {
    "text": "from inside of the monolith",
    "start": "646959",
    "end": "648560"
  },
  {
    "text": "to outside of the monolith and not the",
    "start": "648560",
    "end": "650560"
  },
  {
    "text": "other way around",
    "start": "650560",
    "end": "651920"
  },
  {
    "text": "so we don't end up in that distributed",
    "start": "651920",
    "end": "653920"
  },
  {
    "text": "monolith situation like we talked about",
    "start": "653920",
    "end": "655760"
  },
  {
    "text": "earlier",
    "start": "655760",
    "end": "657920"
  },
  {
    "text": "this means when extracting services out",
    "start": "657920",
    "end": "660160"
  },
  {
    "text": "of the monolith",
    "start": "660160",
    "end": "661200"
  },
  {
    "text": "start with the core services and work",
    "start": "661200",
    "end": "664000"
  },
  {
    "text": "your way out to the feature level",
    "start": "664000",
    "end": "667120"
  },
  {
    "text": "next look for gravitational pulls that",
    "start": "667120",
    "end": "669440"
  },
  {
    "text": "keep developers working in the monolith",
    "start": "669440",
    "end": "672079"
  },
  {
    "text": "it's common for shared tooling to be",
    "start": "672079",
    "end": "674320"
  },
  {
    "text": "built over time",
    "start": "674320",
    "end": "675519"
  },
  {
    "text": "that makes development inside the",
    "start": "675519",
    "end": "677120"
  },
  {
    "text": "monolith very convenient",
    "start": "677120",
    "end": "679440"
  },
  {
    "text": "for example feature flags at github",
    "start": "679440",
    "end": "682079"
  },
  {
    "text": "provide monolith developers peace of",
    "start": "682079",
    "end": "684079"
  },
  {
    "text": "mind",
    "start": "684079",
    "end": "684640"
  },
  {
    "text": "for having control over who sees a new",
    "start": "684640",
    "end": "686640"
  },
  {
    "text": "feature as it goes from",
    "start": "686640",
    "end": "688000"
  },
  {
    "text": "staff shift to beta to production make",
    "start": "688000",
    "end": "691279"
  },
  {
    "text": "these shared resources available to",
    "start": "691279",
    "end": "693120"
  },
  {
    "text": "developers outside of the monolith",
    "start": "693120",
    "end": "695040"
  },
  {
    "text": "and start shifting that gravitational",
    "start": "695040",
    "end": "696959"
  },
  {
    "text": "pull",
    "start": "696959",
    "end": "698640"
  },
  {
    "text": "finally make sure to remove old code",
    "start": "698640",
    "end": "701600"
  },
  {
    "text": "path",
    "start": "701600",
    "end": "702240"
  },
  {
    "text": "once new services are up and running use",
    "start": "702240",
    "end": "705040"
  },
  {
    "text": "a tool to understand who's calling this",
    "start": "705040",
    "end": "707040"
  },
  {
    "text": "service",
    "start": "707040",
    "end": "707760"
  },
  {
    "text": "and have a plan to move a hundred",
    "start": "707760",
    "end": "709360"
  },
  {
    "text": "percent of the traffic",
    "start": "709360",
    "end": "711200"
  },
  {
    "text": "over to the new service so you don't get",
    "start": "711200",
    "end": "713279"
  },
  {
    "text": "stuck supporting two sets of code",
    "start": "713279",
    "end": "714959"
  },
  {
    "text": "forever",
    "start": "714959",
    "end": "716880"
  },
  {
    "text": "at github we use an open source tool",
    "start": "716880",
    "end": "719120"
  },
  {
    "text": "called scientist",
    "start": "719120",
    "end": "720240"
  },
  {
    "text": "to help us with this type of rollout",
    "start": "720240",
    "end": "722399"
  },
  {
    "text": "where we can run and compare both the",
    "start": "722399",
    "end": "724320"
  },
  {
    "text": "old and the new code paths",
    "start": "724320",
    "end": "725760"
  },
  {
    "text": "side by side",
    "start": "725760",
    "end": "731519"
  },
  {
    "start": "730000",
    "end": "793000"
  },
  {
    "text": "the core services that we decided to",
    "start": "731519",
    "end": "733519"
  },
  {
    "text": "extract first at github are",
    "start": "733519",
    "end": "735360"
  },
  {
    "text": "authentication",
    "start": "735360",
    "end": "736320"
  },
  {
    "text": "and authorization authentication is",
    "start": "736320",
    "end": "738959"
  },
  {
    "text": "pretty complex",
    "start": "738959",
    "end": "740079"
  },
  {
    "text": "because everything needs it and there's",
    "start": "740079",
    "end": "742079"
  },
  {
    "text": "a ton of shared logic",
    "start": "742079",
    "end": "743600"
  },
  {
    "text": "between the website and git operations",
    "start": "743600",
    "end": "746720"
  },
  {
    "text": "this means that if github.com is down",
    "start": "746720",
    "end": "749120"
  },
  {
    "text": "then access to getsystems is also down",
    "start": "749120",
    "end": "751600"
  },
  {
    "text": "and get operations like pull and push",
    "start": "751600",
    "end": "754240"
  },
  {
    "text": "will no longer work",
    "start": "754240",
    "end": "755600"
  },
  {
    "text": "even through a command line interface",
    "start": "755600",
    "end": "758399"
  },
  {
    "text": "this is why it's so important for some",
    "start": "758399",
    "end": "760560"
  },
  {
    "text": "of these fundamental pieces to be",
    "start": "760560",
    "end": "762160"
  },
  {
    "text": "extracted",
    "start": "762160",
    "end": "763040"
  },
  {
    "text": "to allow primary functions to still",
    "start": "763040",
    "end": "765120"
  },
  {
    "text": "happen without having to be tied into",
    "start": "765120",
    "end": "767200"
  },
  {
    "text": "the monolith",
    "start": "767200",
    "end": "769680"
  },
  {
    "text": "authorization for us was much more",
    "start": "769680",
    "end": "771519"
  },
  {
    "text": "straightforward and has already been",
    "start": "771519",
    "end": "773519"
  },
  {
    "text": "rewritten as a ghost service outside of",
    "start": "773519",
    "end": "775440"
  },
  {
    "text": "the monolith",
    "start": "775440",
    "end": "776720"
  },
  {
    "text": "the current rails app aka our monolith",
    "start": "776720",
    "end": "779680"
  },
  {
    "text": "communicates to it using torp",
    "start": "779680",
    "end": "781680"
  },
  {
    "text": "which is a grpc-like service to service",
    "start": "781680",
    "end": "784480"
  },
  {
    "text": "communications framework",
    "start": "784480",
    "end": "786480"
  },
  {
    "text": "thus meeting the insight to outside",
    "start": "786480",
    "end": "788639"
  },
  {
    "text": "dependency direction we talked about",
    "start": "788639",
    "end": "790639"
  },
  {
    "text": "in the last slide",
    "start": "790639",
    "end": "793440"
  },
  {
    "start": "793000",
    "end": "855000"
  },
  {
    "text": "monitoring ci cd and containerization",
    "start": "794399",
    "end": "797440"
  },
  {
    "text": "are not new concepts",
    "start": "797440",
    "end": "799120"
  },
  {
    "text": "but making the necessary operational",
    "start": "799120",
    "end": "801040"
  },
  {
    "text": "changes to support the transformation",
    "start": "801040",
    "end": "803519"
  },
  {
    "text": "from monolith to microservices can yield",
    "start": "803519",
    "end": "806000"
  },
  {
    "text": "significant time savings",
    "start": "806000",
    "end": "807680"
  },
  {
    "text": "and help expedite the transition towards",
    "start": "807680",
    "end": "809920"
  },
  {
    "text": "microservices",
    "start": "809920",
    "end": "812399"
  },
  {
    "text": "keep the main characteristics of",
    "start": "812399",
    "end": "814079"
  },
  {
    "text": "microservices in mind when you make",
    "start": "814079",
    "end": "816079"
  },
  {
    "text": "these workflow changes",
    "start": "816079",
    "end": "818560"
  },
  {
    "text": "operationally supporting numerous small",
    "start": "818560",
    "end": "821839"
  },
  {
    "text": "independently running services with",
    "start": "821839",
    "end": "823839"
  },
  {
    "text": "diverse tech stacks",
    "start": "823839",
    "end": "825199"
  },
  {
    "text": "is very different from running a single",
    "start": "825199",
    "end": "828079"
  },
  {
    "text": "highly customized pipeline for a large",
    "start": "828079",
    "end": "830240"
  },
  {
    "text": "monolith",
    "start": "830240",
    "end": "832800"
  },
  {
    "text": "update monitoring from functional call",
    "start": "833279",
    "end": "835519"
  },
  {
    "text": "metrics to network metrics",
    "start": "835519",
    "end": "837680"
  },
  {
    "text": "and contract interfaces push towards a",
    "start": "837680",
    "end": "840720"
  },
  {
    "text": "more automated and reliable",
    "start": "840720",
    "end": "842480"
  },
  {
    "text": "ci cd pipeline that can be shared across",
    "start": "842480",
    "end": "844959"
  },
  {
    "text": "services",
    "start": "844959",
    "end": "846800"
  },
  {
    "text": "use containerization to support a",
    "start": "846800",
    "end": "848720"
  },
  {
    "text": "variety of languages and tech stacks",
    "start": "848720",
    "end": "851199"
  },
  {
    "text": "and create workflow templates to enable",
    "start": "851199",
    "end": "854839"
  },
  {
    "text": "reusability",
    "start": "854839",
    "end": "856720"
  },
  {
    "text": "for example at github we created a",
    "start": "856720",
    "end": "859360"
  },
  {
    "text": "self-service",
    "start": "859360",
    "end": "860560"
  },
  {
    "text": "runtime platform to deliver",
    "start": "860560",
    "end": "862160"
  },
  {
    "text": "microservices in a box",
    "start": "862160",
    "end": "864480"
  },
  {
    "text": "the goal is to drastically reduce each",
    "start": "864480",
    "end": "866959"
  },
  {
    "text": "team's operational overhead",
    "start": "866959",
    "end": "868639"
  },
  {
    "text": "for creating microservices it comes with",
    "start": "868639",
    "end": "871839"
  },
  {
    "text": "kubernetes ready templates",
    "start": "871839",
    "end": "873680"
  },
  {
    "text": "free ingress setup for load balancing",
    "start": "873680",
    "end": "876320"
  },
  {
    "text": "automatic piping of logs into splunk",
    "start": "876320",
    "end": "879040"
  },
  {
    "text": "and integration into our internal",
    "start": "879040",
    "end": "880959"
  },
  {
    "text": "deployment process",
    "start": "880959",
    "end": "882720"
  },
  {
    "text": "thus making it easier for any team that",
    "start": "882720",
    "end": "885040"
  },
  {
    "text": "wants to experiment with or set up a new",
    "start": "885040",
    "end": "887279"
  },
  {
    "text": "microservice",
    "start": "887279",
    "end": "888240"
  },
  {
    "text": "to get started",
    "start": "888240",
    "end": "891040"
  },
  {
    "start": "892000",
    "end": "1013000"
  },
  {
    "text": "so far we've covered a lot of ground on",
    "start": "893600",
    "end": "896160"
  },
  {
    "text": "the structural changes and shared",
    "start": "896160",
    "end": "897839"
  },
  {
    "text": "foundations needed",
    "start": "897839",
    "end": "899040"
  },
  {
    "text": "for successful translation from a",
    "start": "899040",
    "end": "901040"
  },
  {
    "text": "monolith to a microservices architecture",
    "start": "901040",
    "end": "904079"
  },
  {
    "text": "from this point on any new feature",
    "start": "904079",
    "end": "906160"
  },
  {
    "text": "should be created as a microservice",
    "start": "906160",
    "end": "907920"
  },
  {
    "text": "outside of the monolith",
    "start": "907920",
    "end": "910720"
  },
  {
    "text": "next look for a few simple minor",
    "start": "910720",
    "end": "913600"
  },
  {
    "text": "features to move out of the monolith",
    "start": "913600",
    "end": "916240"
  },
  {
    "text": "for example features that don't have a",
    "start": "916240",
    "end": "918240"
  },
  {
    "text": "lot of complicated dependencies in",
    "start": "918240",
    "end": "920079"
  },
  {
    "text": "shared logic",
    "start": "920079",
    "end": "922480"
  },
  {
    "text": "at github we started with webhook",
    "start": "922480",
    "end": "924240"
  },
  {
    "text": "deliveries and syntax highlighting",
    "start": "924240",
    "end": "927839"
  },
  {
    "text": "use this as an opportunity to look for",
    "start": "927920",
    "end": "929839"
  },
  {
    "text": "common patterns",
    "start": "929839",
    "end": "930959"
  },
  {
    "text": "and identify gaps before moving on to",
    "start": "930959",
    "end": "933519"
  },
  {
    "text": "moving on to bigger and harrier",
    "start": "933519",
    "end": "935360"
  },
  {
    "text": "functionalities in the monolith",
    "start": "935360",
    "end": "938800"
  },
  {
    "text": "use product and business values to help",
    "start": "939600",
    "end": "941600"
  },
  {
    "text": "determine the right size of",
    "start": "941600",
    "end": "943040"
  },
  {
    "text": "microservices",
    "start": "943040",
    "end": "945920"
  },
  {
    "text": "look for code and data that are often",
    "start": "947199",
    "end": "949519"
  },
  {
    "text": "changed and deployed together to",
    "start": "949519",
    "end": "951040"
  },
  {
    "text": "determine features",
    "start": "951040",
    "end": "952240"
  },
  {
    "text": "or functionalities that are more tightly",
    "start": "952240",
    "end": "954079"
  },
  {
    "text": "coupled",
    "start": "954079",
    "end": "955440"
  },
  {
    "text": "and use these as your natural groupings",
    "start": "955440",
    "end": "957519"
  },
  {
    "text": "for what can be iterated on and deployed",
    "start": "957519",
    "end": "959839"
  },
  {
    "text": "independently from other areas",
    "start": "959839",
    "end": "963199"
  },
  {
    "text": "focusing on product and business value",
    "start": "963199",
    "end": "965680"
  },
  {
    "text": "also helps with the organizational",
    "start": "965680",
    "end": "967360"
  },
  {
    "text": "alignment across",
    "start": "967360",
    "end": "968320"
  },
  {
    "text": "engineering product and design keep in",
    "start": "968320",
    "end": "971360"
  },
  {
    "text": "mind",
    "start": "971360",
    "end": "971920"
  },
  {
    "text": "breaking things up too small can often",
    "start": "971920",
    "end": "974399"
  },
  {
    "text": "add unnecessary complexity and overhead",
    "start": "974399",
    "end": "977519"
  },
  {
    "text": "for example maintaining separate deploy",
    "start": "977519",
    "end": "979920"
  },
  {
    "text": "cues",
    "start": "979920",
    "end": "980560"
  },
  {
    "text": "more on call responsibilities and single",
    "start": "980560",
    "end": "982959"
  },
  {
    "text": "points of failure due to the lack of",
    "start": "982959",
    "end": "984800"
  },
  {
    "text": "shared knowledge",
    "start": "984800",
    "end": "987519"
  },
  {
    "text": "going from monolith to microservices is",
    "start": "989040",
    "end": "991360"
  },
  {
    "text": "a major",
    "start": "991360",
    "end": "992160"
  },
  {
    "text": "paradigm shift both the software",
    "start": "992160",
    "end": "994720"
  },
  {
    "text": "development process and the actual code",
    "start": "994720",
    "end": "996880"
  },
  {
    "text": "base",
    "start": "996880",
    "end": "997360"
  },
  {
    "text": "will look significantly different going",
    "start": "997360",
    "end": "999279"
  },
  {
    "text": "through this transition",
    "start": "999279",
    "end": "1001519"
  },
  {
    "text": "to wrap up our talk we will quickly",
    "start": "1001519",
    "end": "1003600"
  },
  {
    "text": "cover service to service communications",
    "start": "1003600",
    "end": "1006079"
  },
  {
    "text": "and designing for failure both of which",
    "start": "1006079",
    "end": "1008399"
  },
  {
    "text": "are important concepts in microservices",
    "start": "1008399",
    "end": "1010720"
  },
  {
    "text": "development",
    "start": "1010720",
    "end": "1013279"
  },
  {
    "start": "1013000",
    "end": "1081000"
  },
  {
    "text": "there are two ways that services",
    "start": "1014880",
    "end": "1016560"
  },
  {
    "text": "communicate with one another",
    "start": "1016560",
    "end": "1018320"
  },
  {
    "text": "synchronously and asynchronously with",
    "start": "1018320",
    "end": "1021360"
  },
  {
    "text": "synchronous communications",
    "start": "1021360",
    "end": "1022959"
  },
  {
    "text": "the client sends a request and waits for",
    "start": "1022959",
    "end": "1025199"
  },
  {
    "text": "a response from the server",
    "start": "1025199",
    "end": "1027760"
  },
  {
    "text": "with asynchronous communications the",
    "start": "1027760",
    "end": "1029760"
  },
  {
    "text": "client sends a message without waiting",
    "start": "1029760",
    "end": "1031600"
  },
  {
    "text": "for a response",
    "start": "1031600",
    "end": "1033199"
  },
  {
    "text": "and each message can be processed by",
    "start": "1033199",
    "end": "1035280"
  },
  {
    "text": "multiple receivers as mentioned earlier",
    "start": "1035280",
    "end": "1039120"
  },
  {
    "text": "we use torp at github to enable",
    "start": "1039120",
    "end": "1041120"
  },
  {
    "text": "asynchronous communications",
    "start": "1041120",
    "end": "1042720"
  },
  {
    "text": "between the monolith and the core",
    "start": "1042720",
    "end": "1044480"
  },
  {
    "text": "services outside of the monolith like",
    "start": "1044480",
    "end": "1046319"
  },
  {
    "text": "azure",
    "start": "1046319",
    "end": "1046880"
  },
  {
    "text": "like authorization as more and more",
    "start": "1046880",
    "end": "1050240"
  },
  {
    "text": "services move outside of the monolith",
    "start": "1050240",
    "end": "1052160"
  },
  {
    "text": "however",
    "start": "1052160",
    "end": "1053120"
  },
  {
    "text": "synchronous communication starts to",
    "start": "1053120",
    "end": "1054880"
  },
  {
    "text": "become wildly inefficient",
    "start": "1054880",
    "end": "1057440"
  },
  {
    "text": "as the picture in the upper right",
    "start": "1057440",
    "end": "1058720"
  },
  {
    "text": "demonstrates it also creates tight",
    "start": "1058720",
    "end": "1061280"
  },
  {
    "text": "coupling between all the services",
    "start": "1061280",
    "end": "1063200"
  },
  {
    "text": "which ends up defeating the purpose of",
    "start": "1063200",
    "end": "1065360"
  },
  {
    "text": "moving to a microservices architecture",
    "start": "1065360",
    "end": "1068960"
  },
  {
    "text": "a better approach is to create a shared",
    "start": "1068960",
    "end": "1071600"
  },
  {
    "text": "events pipeline",
    "start": "1071600",
    "end": "1072720"
  },
  {
    "text": "that can broker messages across multiple",
    "start": "1072720",
    "end": "1075039"
  },
  {
    "text": "producers and consumers",
    "start": "1075039",
    "end": "1077039"
  },
  {
    "text": "this is the architecture we used at",
    "start": "1077039",
    "end": "1078840"
  },
  {
    "text": "cengrid",
    "start": "1078840",
    "end": "1081840"
  },
  {
    "start": "1081000",
    "end": "1160000"
  },
  {
    "text": "because services are no longer hosted on",
    "start": "1081840",
    "end": "1084080"
  },
  {
    "text": "a single server",
    "start": "1084080",
    "end": "1085360"
  },
  {
    "text": "it's important to account for latency",
    "start": "1085360",
    "end": "1087600"
  },
  {
    "text": "and failure scenarios when communicating",
    "start": "1087600",
    "end": "1089919"
  },
  {
    "text": "over the network",
    "start": "1089919",
    "end": "1091440"
  },
  {
    "text": "a simple retry logic with clearly",
    "start": "1091440",
    "end": "1093679"
  },
  {
    "text": "defined frequency of retries and a",
    "start": "1093679",
    "end": "1095440"
  },
  {
    "text": "maximum retry count",
    "start": "1095440",
    "end": "1097039"
  },
  {
    "text": "may be sufficient to handle most",
    "start": "1097039",
    "end": "1099360"
  },
  {
    "text": "temporary",
    "start": "1099360",
    "end": "1100080"
  },
  {
    "text": "network problems consider adding some",
    "start": "1100080",
    "end": "1103280"
  },
  {
    "text": "intelligence to the retry logic",
    "start": "1103280",
    "end": "1105200"
  },
  {
    "text": "using exponential back off instead of",
    "start": "1105200",
    "end": "1108080"
  },
  {
    "text": "retrying a request",
    "start": "1108080",
    "end": "1109760"
  },
  {
    "text": "or request at a constant interval",
    "start": "1109760",
    "end": "1112080"
  },
  {
    "text": "exponential back off will increase the",
    "start": "1112080",
    "end": "1113919"
  },
  {
    "text": "amount of wait time",
    "start": "1113919",
    "end": "1114799"
  },
  {
    "text": "in between retries and provide some",
    "start": "1114799",
    "end": "1117440"
  },
  {
    "text": "relief",
    "start": "1117440",
    "end": "1118160"
  },
  {
    "text": "to servers that are not responding",
    "start": "1118160",
    "end": "1119840"
  },
  {
    "text": "because of overloads",
    "start": "1119840",
    "end": "1122080"
  },
  {
    "text": "a circuit breaker can also be added as a",
    "start": "1122080",
    "end": "1124480"
  },
  {
    "text": "medium between services",
    "start": "1124480",
    "end": "1126400"
  },
  {
    "text": "as a self-protection and healing",
    "start": "1126400",
    "end": "1128400"
  },
  {
    "text": "mechanism",
    "start": "1128400",
    "end": "1129919"
  },
  {
    "text": "for example after a number of failed",
    "start": "1129919",
    "end": "1132080"
  },
  {
    "text": "attempts the circuit breaker will open",
    "start": "1132080",
    "end": "1134559"
  },
  {
    "text": "and not allow additional requests to",
    "start": "1134559",
    "end": "1136480"
  },
  {
    "text": "come through until the service is",
    "start": "1136480",
    "end": "1138160"
  },
  {
    "text": "recovered",
    "start": "1138160",
    "end": "1140640"
  },
  {
    "text": "set a timeout so your service doesn't",
    "start": "1140720",
    "end": "1142960"
  },
  {
    "text": "end up waiting forever for an external",
    "start": "1142960",
    "end": "1144799"
  },
  {
    "text": "service to respond",
    "start": "1144799",
    "end": "1147039"
  },
  {
    "text": "and try failing gracefully by presenting",
    "start": "1147039",
    "end": "1149200"
  },
  {
    "text": "user friendly messages",
    "start": "1149200",
    "end": "1150880"
  },
  {
    "text": "or falling back to a last known good",
    "start": "1150880",
    "end": "1152960"
  },
  {
    "text": "state in the cache",
    "start": "1152960",
    "end": "1154799"
  },
  {
    "text": "be mindful of the user experience and do",
    "start": "1154799",
    "end": "1156960"
  },
  {
    "text": "what makes sense for the business",
    "start": "1156960",
    "end": "1160240"
  },
  {
    "start": "1160000",
    "end": "1213000"
  },
  {
    "text": "with that let's quickly recap some of",
    "start": "1161679",
    "end": "1164000"
  },
  {
    "text": "our key takeaways from our talk today",
    "start": "1164000",
    "end": "1166960"
  },
  {
    "text": "the first four sections focus on the",
    "start": "1166960",
    "end": "1169280"
  },
  {
    "text": "foundational pieces",
    "start": "1169280",
    "end": "1170559"
  },
  {
    "text": "that should be in place before you start",
    "start": "1170559",
    "end": "1172480"
  },
  {
    "text": "down the journey of transitioning from",
    "start": "1172480",
    "end": "1174080"
  },
  {
    "text": "monolith to microservices",
    "start": "1174080",
    "end": "1176960"
  },
  {
    "text": "focus on the why think about modularity",
    "start": "1176960",
    "end": "1179679"
  },
  {
    "text": "and data separation",
    "start": "1179679",
    "end": "1182240"
  },
  {
    "text": "start with core services and shared",
    "start": "1182240",
    "end": "1184000"
  },
  {
    "text": "resources and make the necessary",
    "start": "1184000",
    "end": "1186400"
  },
  {
    "text": "operational changes",
    "start": "1186400",
    "end": "1188799"
  },
  {
    "text": "getting these right will make the",
    "start": "1188799",
    "end": "1190480"
  },
  {
    "text": "transition to microservices",
    "start": "1190480",
    "end": "1192320"
  },
  {
    "text": "a much more enjoyable experience for",
    "start": "1192320",
    "end": "1194160"
  },
  {
    "text": "your entire organization",
    "start": "1194160",
    "end": "1197360"
  },
  {
    "text": "then we talked about where to start and",
    "start": "1197360",
    "end": "1199520"
  },
  {
    "text": "how to tie microservices back to product",
    "start": "1199520",
    "end": "1201840"
  },
  {
    "text": "and business value",
    "start": "1201840",
    "end": "1204000"
  },
  {
    "text": "finally we cover two key concepts and",
    "start": "1204000",
    "end": "1206159"
  },
  {
    "text": "micro services around service to service",
    "start": "1206159",
    "end": "1208000"
  },
  {
    "text": "communications",
    "start": "1208000",
    "end": "1208960"
  },
  {
    "text": "and building resilient systems",
    "start": "1208960",
    "end": "1212559"
  },
  {
    "start": "1213000",
    "end": "1249000"
  },
  {
    "text": "here are some additional reference links",
    "start": "1214240",
    "end": "1216320"
  },
  {
    "text": "and resources",
    "start": "1216320",
    "end": "1217280"
  },
  {
    "text": "for things i've either referenced in",
    "start": "1217280",
    "end": "1218720"
  },
  {
    "text": "this talk or materials that i found",
    "start": "1218720",
    "end": "1220559"
  },
  {
    "text": "helpful when doing research for this",
    "start": "1220559",
    "end": "1222080"
  },
  {
    "text": "talk",
    "start": "1222080",
    "end": "1224320"
  },
  {
    "text": "thank you so much for attending this",
    "start": "1227520",
    "end": "1229600"
  },
  {
    "text": "session i hope you found the content",
    "start": "1229600",
    "end": "1231600"
  },
  {
    "text": "helpful",
    "start": "1231600",
    "end": "1232720"
  },
  {
    "text": "i want to also thank the qcon organizers",
    "start": "1232720",
    "end": "1235280"
  },
  {
    "text": "and the track leaders",
    "start": "1235280",
    "end": "1236559"
  },
  {
    "text": "for all their efforts in running this",
    "start": "1236559",
    "end": "1238159"
  },
  {
    "text": "event virtually and for",
    "start": "1238159",
    "end": "1239840"
  },
  {
    "text": "inviting me to join the operating",
    "start": "1239840",
    "end": "1241600"
  },
  {
    "text": "microservices track",
    "start": "1241600",
    "end": "1243520"
  },
  {
    "text": "i will happily take any questions from",
    "start": "1243520",
    "end": "1245280"
  },
  {
    "text": "the audience for the remainder of this",
    "start": "1245280",
    "end": "1247039"
  },
  {
    "text": "session",
    "start": "1247039",
    "end": "1249840"
  }
]