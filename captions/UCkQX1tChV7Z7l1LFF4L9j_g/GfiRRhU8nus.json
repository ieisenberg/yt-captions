[
  {
    "text": "hey everybody thanks uh thanks for coming I appreciate everybody coming to the after lunch uh slot it's always a",
    "start": "4480",
    "end": "9800"
  },
  {
    "text": "risky one uh because it's pretty full but everybody else is pretty full and ready to ready to nap you know uh but I",
    "start": "9800",
    "end": "16560"
  },
  {
    "text": "I hopefully we have a pretty fun presentation in store for you uh so today I'm going to be talking about",
    "start": "16560",
    "end": "21840"
  },
  {
    "text": "connecting managing observing and securing microservices and that's a big mouthful and obviously any single one of",
    "start": "21840",
    "end": "27679"
  },
  {
    "text": "those topics is more than enough for an hourong talk so we're going to be doing kind of a whirlwind tour of of some of",
    "start": "27679",
    "end": "34280"
  },
  {
    "text": "the problems space the shape of some of the solutions to help connect manage observe and secure services and then",
    "start": "34280",
    "end": "40280"
  },
  {
    "text": "we're going to do a deep dive into uh yio itself which is the particular",
    "start": "40280",
    "end": "45320"
  },
  {
    "text": "service mesh that that uh I work on uh so just a little bit about me uh as as",
    "start": "45320",
    "end": "51559"
  },
  {
    "text": "she said uh you know I'm one of the core contributors isio uh just left to help",
    "start": "51559",
    "end": "56760"
  },
  {
    "text": "start a company that's building on top of the project now uh and before that I I worked on the",
    "start": "56760",
    "end": "62480"
  },
  {
    "text": "project at at Google uh and like I said so our high level agenda what is the problem what's",
    "start": "62480",
    "end": "68600"
  },
  {
    "text": "the shape of the solution what are some service meshes that are around that you could use today and we'll talk a little",
    "start": "68600",
    "end": "75119"
  },
  {
    "text": "bit about maybe when one might be more appropriate than another and then we'll do the Deep dive into SEO itself and in",
    "start": "75119",
    "end": "81560"
  },
  {
    "text": "the end we'll we'll have a nice demo to to show some of the functionality that I'm talking about so this is kind of the the",
    "start": "81560",
    "end": "89119"
  },
  {
    "text": "motivating problem problem statement for a lot of service me for for service messages in general and for for a lot of",
    "start": "89119",
    "end": "94920"
  },
  {
    "text": "Technology that's Cloud native today uh our shift to a modern architecture",
    "start": "94920",
    "end": "100399"
  },
  {
    "text": "leaves us unable to connect monitor manage or secure that's the the fundamental problem and so what do I",
    "start": "100399",
    "end": "106399"
  },
  {
    "text": "mean by by this modern distributed architecture we mean that we're moving",
    "start": "106399",
    "end": "111719"
  },
  {
    "text": "away from monoliths and into services so there's a lot more points of of contact",
    "start": "111719",
    "end": "117680"
  },
  {
    "text": "uh whereas before with a monolith I might have one or two front doors to get into the system when I have a set of",
    "start": "117680",
    "end": "123079"
  },
  {
    "text": "services there's doors everywhere into into various things uh we are deploying them into",
    "start": "123079",
    "end": "130280"
  },
  {
    "text": "more Dynamic environments this is both a a really good thing and a very painful thing so these Dynamic you know fluid",
    "start": "130280",
    "end": "137080"
  },
  {
    "text": "scaling environments that that cloud providers can give us are incredible if you were at the talk that was in the",
    "start": "137080",
    "end": "142879"
  },
  {
    "text": "ballroom uh I guess two before mine that was a perfect intro he uh Andrew talked",
    "start": "142879",
    "end": "148000"
  },
  {
    "text": "about a lot of the challenges of building micros services at scale um and",
    "start": "148000",
    "end": "153160"
  },
  {
    "text": "these Dynamic environments are are a key piece of that things like kubernetes and maos and Nomad and and other",
    "start": "153160",
    "end": "160800"
  },
  {
    "text": "orchestrators let you take use of this this flexible capacity but the problem is you have to architect your entire",
    "start": "160800",
    "end": "166879"
  },
  {
    "text": "system around this change that's now introduced uh with old style architectures I could point I worked for",
    "start": "166879",
    "end": "172760"
  },
  {
    "text": "an oil Pipeline and we ran five Services we had a service oriented architecture but I could walk into our server room",
    "start": "172760",
    "end": "178800"
  },
  {
    "text": "and I could point to each of the servers that ran our services right uh and that",
    "start": "178800",
    "end": "184400"
  },
  {
    "text": "doesn't work when compute scales uh you can't go point to the box that runs it uh and then the the final piece of this",
    "start": "184400",
    "end": "191720"
  },
  {
    "text": "and and in my opinion this is actually the thing that causes the most developer pain is that our applications are now",
    "start": "191720",
    "end": "197560"
  },
  {
    "text": "composed uh with the network and the network is really the glue that sticks our applications together whereas before",
    "start": "197560",
    "end": "204640"
  },
  {
    "text": "in the world of microservices sorry in the world of of monoliths we maybe had",
    "start": "204640",
    "end": "209840"
  },
  {
    "text": "one process one one giant binary that we could debug through uh and really this is a failure of tooling uh and this is a",
    "start": "209840",
    "end": "217080"
  },
  {
    "text": "large part of the reason in my opinion that it's so hard to move to microservice-based architectures because",
    "start": "217080",
    "end": "223000"
  },
  {
    "text": "the tools that we're used to using to diagnose problems really don't apply in the same way because they don't know how",
    "start": "223000",
    "end": "229120"
  },
  {
    "text": "to navigate uh the network how do I trace a request across a set of 10 services that where you know that's hard",
    "start": "229120",
    "end": "236319"
  },
  {
    "text": "to do how do I trace a call through 10 processes on a sing machine is hard enough today with our tooling and now",
    "start": "236319",
    "end": "242400"
  },
  {
    "text": "you make them distributed and it's and it's an incredible amount of complexity to add but we need that comp but we we",
    "start": "242400",
    "end": "249480"
  },
  {
    "text": "have to take on that complexity so that we can increase our velocity move faster and actually ship features right so we",
    "start": "249480",
    "end": "255280"
  },
  {
    "text": "have to take on that pain to to achieve our business [Applause]",
    "start": "255280",
    "end": "260680"
  },
  {
    "text": "goals so what what exactly are the things that I'm talking about when I when I say connect manage Monitor and",
    "start": "260680",
    "end": "267919"
  },
  {
    "text": "secure uh when we talk about about Connections and and really we want to we",
    "start": "267919",
    "end": "273600"
  },
  {
    "text": "want to make an application developer not think about the network and that's really hard when now the network is the",
    "start": "273600",
    "end": "279160"
  },
  {
    "text": "thing that glues all of your your application together right and today if you go and look at at Services you'll",
    "start": "279160",
    "end": "286080"
  },
  {
    "text": "see a lot of patterns like who who has written a for Loop to do retries uh yeah so who has gotten it",
    "start": "286080",
    "end": "293320"
  },
  {
    "text": "wrong and then dos another service yeah uh and uh fixing that as a",
    "start": "293320",
    "end": "299840"
  },
  {
    "text": "pain right because you have to go redeploy your code and redeploying code is risky and and hard uh that's that's",
    "start": "299840",
    "end": "305080"
  },
  {
    "text": "never a good thing so we want things like resiliency things like retry circuit breaking uh timeouts I want to",
    "start": "305080",
    "end": "310759"
  },
  {
    "text": "do lame ducking I want to not talk to a backend that's giving me bad responses and really I shouldn't have to",
    "start": "310759",
    "end": "316400"
  },
  {
    "text": "build that into my application second big piece of connectivity is is service Discovery how",
    "start": "316400",
    "end": "322479"
  },
  {
    "text": "do I even know the things that I'm talking to and and where they live uh you know and today there's Solutions",
    "start": "322479",
    "end": "328199"
  },
  {
    "text": "like DNS that that are white used that come with a lot of problems like uh again because we have this Dynamic",
    "start": "328199",
    "end": "334479"
  },
  {
    "text": "environment uh DNS caches are are kind of our enemy right how many uh people",
    "start": "334479",
    "end": "339560"
  },
  {
    "text": "have had problems with DNS caching that results in in requests going to bad services that should be out of rotation",
    "start": "339560",
    "end": "344880"
  },
  {
    "text": "right uh and that and that could be hard to to fix and similarly we want load balancing uh everywhere because that's",
    "start": "344880",
    "end": "351639"
  },
  {
    "text": "really a key to building a robust and resilient system is being able to shift load easily uh and ideally we would like",
    "start": "351639",
    "end": "359720"
  },
  {
    "text": "our load bouncing to be client side I would like my clients to be smart enough to be able to pick the right destination",
    "start": "359720",
    "end": "364759"
  },
  {
    "text": "because that means that I can have more efficient Network topologies right if I have to run a middle proxy that that",
    "start": "364759",
    "end": "370000"
  },
  {
    "text": "does load balancing it means that it becomes a point in my network where all this traffic has to flow through and I",
    "start": "370000",
    "end": "375880"
  },
  {
    "text": "would really like to keep traffic point to point where I can keep nice simple uh efficient networks if I can uh and so",
    "start": "375880",
    "end": "383240"
  },
  {
    "text": "client side load bouncing is a really valuable tool to help with that next we want to do monitoring this",
    "start": "383240",
    "end": "390280"
  },
  {
    "text": "is just what's going on this gets really to the heart of of where I think most of our developer pain is today which is I",
    "start": "390280",
    "end": "396479"
  },
  {
    "text": "have this thing I have this system and it's got all these moving Parts what's it like what's it doing uh and and there",
    "start": "396479",
    "end": "403599"
  },
  {
    "text": "we need metrics and we need logs and ideally we want traces too so that we can actually look at the path of any",
    "start": "403599",
    "end": "410319"
  },
  {
    "text": "particular request through our system um and it's not enough just to have metrics and logging you really need consistent",
    "start": "410319",
    "end": "417759"
  },
  {
    "text": "metrics and logging with SAR Dimensions with the same semantics for those Dimensions everywhere because if when we",
    "start": "417759",
    "end": "424720"
  },
  {
    "text": "have metrics for example that are ad hoc per service it becomes impossible to build a higher level system on top of",
    "start": "424720",
    "end": "431000"
  },
  {
    "text": "those metrics if you use something like a service mesh that can give uniform metrics everywhere it becomes possible",
    "start": "431000",
    "end": "437120"
  },
  {
    "text": "to do things like build alerting on top of those predefined metrics that your",
    "start": "437120",
    "end": "442840"
  },
  {
    "text": "entire organization can use hey I need you know I'm spinning up a new service uh I need to wire up alerts for it you",
    "start": "442840",
    "end": "449360"
  },
  {
    "text": "go go oh cool here's the templates already you know here we already have our metrics you're ready to go and it really reduces uh the effort required to",
    "start": "449360",
    "end": "457800"
  },
  {
    "text": "spin up new Services the effort required to monitor existing ones uh this is one",
    "start": "457800",
    "end": "463080"
  },
  {
    "text": "of the key features of a of a service me that we'll come back to which is just this consistency uh because a different",
    "start": "463080",
    "end": "469000"
  },
  {
    "text": "system is handling these core uh requirements rather than every",
    "start": "469000",
    "end": "474240"
  },
  {
    "text": "individual application doing it",
    "start": "474240",
    "end": "478440"
  },
  {
    "text": "we want to be able to manage the traffic in our system uh and we want to manage just not just you know where it goes",
    "start": "480599",
    "end": "487919"
  },
  {
    "text": "where it gets routed to uh but how it does that and really we want to be able to apply policy to that traffic I want",
    "start": "487919",
    "end": "494599"
  },
  {
    "text": "to be able to look at at L7 attributes of a request and decide whether or not",
    "start": "494599",
    "end": "499720"
  },
  {
    "text": "my application is going to serve that request or not and there's a ton of different use cases there so you can think about uh maybe some API Gateway",
    "start": "499720",
    "end": "506440"
  },
  {
    "text": "use cases um around uh things like quoting uh rate limiting um off you can",
    "start": "506440",
    "end": "514919"
  },
  {
    "text": "even phrase o z you know is the service allowed to talk to another service is a perfect example of policy uh that",
    "start": "514919",
    "end": "523000"
  },
  {
    "text": "applies to an entire fleet that you can use a service mesh to help you implement uh and when I talk about",
    "start": "523000",
    "end": "530560"
  },
  {
    "text": "traffic control uh a lot of the the industry today is does L4 load bouncing",
    "start": "530560",
    "end": "536839"
  },
  {
    "text": "and and L4 traffic control right so we really want to move that up to be application aware I want to be able to",
    "start": "536839",
    "end": "542920"
  },
  {
    "text": "do make load balancing decisions based on application load on the health of my actual service not necessarily how much",
    "start": "542920",
    "end": "549959"
  },
  {
    "text": "CPU or Ram or or whatever it's using because those may or may not actually be correlated depending on what my use case",
    "start": "549959",
    "end": "557760"
  },
  {
    "text": "is and then a final big key uh piece that that we need now and this gets back",
    "start": "560959",
    "end": "566000"
  },
  {
    "text": "to some of this decomposing of the monolith into individual pieces is security becomes a lot harder right so",
    "start": "566000",
    "end": "572839"
  },
  {
    "text": "before I had kind of one typically I would have one entry point into my monolith and we can lock down and",
    "start": "572839",
    "end": "578720"
  },
  {
    "text": "firewall everything else and and network traffic is locked down and I can apply Network policies at at L3 and L4 to make",
    "start": "578720",
    "end": "586000"
  },
  {
    "text": "sure that things can't talk to each other that should the problem is all of that is focused on the network",
    "start": "586000",
    "end": "593920"
  },
  {
    "text": "identity of a workload right what is the the IP port pair what is the machine that's running it that's what all of our",
    "start": "593920",
    "end": "600279"
  },
  {
    "text": "network security is used to dealing with except that I just said hey we're in this new Dynamic environment where",
    "start": "600279",
    "end": "605760"
  },
  {
    "text": "things change all the time and that IP and Port that's that's hosting one application may not be hosting it the",
    "start": "605760",
    "end": "612160"
  },
  {
    "text": "next that's a lot for existing networking tooling to keep up with right if we look at some of the early cni",
    "start": "612160",
    "end": "618519"
  },
  {
    "text": "implementations in kubernetes as an example uh they suffered all kinds of problems uh with crashing kernels and",
    "start": "618519",
    "end": "625600"
  },
  {
    "text": "and that kind of thing because it was doing IP tables to update which uh hosts on the network were allowed to",
    "start": "625600",
    "end": "631720"
  },
  {
    "text": "talk to which other ones and it's really in a you know that was kind of an abuse of that system to provide a valuable uh",
    "start": "631720",
    "end": "638760"
  },
  {
    "text": "a valuable feature Set uh and since then a lot of cni plugins have moved away from from that",
    "start": "638760",
    "end": "645000"
  },
  {
    "text": "model but the fundamentally a lot of the network level tooling that we're used to",
    "start": "645000",
    "end": "650440"
  },
  {
    "text": "dealing with is not built to cope with the higher rate of change of applications",
    "start": "650440",
    "end": "656600"
  },
  {
    "text": "today so we want to be able to assign an identity that is tied to the application",
    "start": "656600",
    "end": "662120"
  },
  {
    "text": "not to the host the the thing that's running on the network I want my identity and I want the policy that I",
    "start": "662120",
    "end": "668079"
  },
  {
    "text": "write about what two services are allowed to talk to each other for example to be in terms of the services",
    "start": "668079",
    "end": "674519"
  },
  {
    "text": "and not in terms of the IP address that happens to host that service right",
    "start": "674519",
    "end": "680040"
  },
  {
    "text": "now uh and with the goal of moving away from that reachability authorization model right the there's the kind of",
    "start": "680040",
    "end": "685880"
  },
  {
    "text": "invogue today is the zero trust networks and and Google's Beyond Corp that that's kind of the stuff that I'm talking about",
    "start": "685880",
    "end": "691440"
  },
  {
    "text": "here where we can start to move identity out of the network and and into some higher level construct that's side to an",
    "start": "691440",
    "end": "699399"
  },
  {
    "text": "application so what is a Ser so the goal of a service mesh is to is to move those",
    "start": "699399",
    "end": "704720"
  },
  {
    "text": "four key areas out of your applications out of thick Frameworks and into",
    "start": "704720",
    "end": "710600"
  },
  {
    "text": "something else uh and that something else depends on which implementation you pick uh a common service message today",
    "start": "710600",
    "end": "718760"
  },
  {
    "text": "that that people people use is just Envoy proxies right so we write up some config for how Envoy is going to proxy",
    "start": "718760",
    "end": "725639"
  },
  {
    "text": "for my service and we put an Envoy beside every instance and you can get a lot of the traffic control you can get a",
    "start": "725639",
    "end": "732480"
  },
  {
    "text": "lot of the resiliency features that I talked about the Telemetry out of that system you could do something like",
    "start": "732480",
    "end": "739040"
  },
  {
    "text": "linkerd which is again another service mesh that works in the same uh similar",
    "start": "739040",
    "end": "745240"
  },
  {
    "text": "way to to what Envoy does now where you put a proxy beside every sing workload it intercepts all the network traffic",
    "start": "745240",
    "end": "752279"
  },
  {
    "text": "and allows you to to provide this feature set and we'll go into depth about how how that architecture works and and how those things happen um and",
    "start": "752279",
    "end": "760320"
  },
  {
    "text": "then isosa is a third uh service M that provides these features that I talked",
    "start": "760320",
    "end": "766320"
  },
  {
    "text": "about one of the other key goals that I didn't talk about in those four are the",
    "start": "766320",
    "end": "772240"
  },
  {
    "text": "consistency right I want metrics I want security I want policy all of those that",
    "start": "772240",
    "end": "777800"
  },
  {
    "text": "category uh each of those four categories I want to be consistent across all of my services I want retri",
    "start": "777800",
    "end": "783000"
  },
  {
    "text": "policy to be consistent uh all of that I would like to be able to control it in one place and this is a key enabler for",
    "start": "783000",
    "end": "791720"
  },
  {
    "text": "uh velocity when we add in a service mesh",
    "start": "791720",
    "end": "797120"
  },
  {
    "text": "we can delegate another team to handle a lot of these crosscutting concerns and move them out of the out of the realm of",
    "start": "797120",
    "end": "803680"
  },
  {
    "text": "concern of an application developer so a single Central team can do things like manage the traffic health",
    "start": "803680",
    "end": "810399"
  },
  {
    "text": "and the Network Health of your infrastructure and individual developers don't need to worry about that it's a",
    "start": "810399",
    "end": "816839"
  },
  {
    "text": "huge Force multiplier central control is a huge Force multiplier to let an organization do more by moving things",
    "start": "816839",
    "end": "823760"
  },
  {
    "text": "out of of the view of developers and then finally another key feature of all",
    "start": "823760",
    "end": "829120"
  },
  {
    "text": "of these systems are uh fast to change change on the order of config updates not binary pushes and that's a really",
    "start": "829120",
    "end": "835720"
  },
  {
    "text": "really key feature uh just for that Doss use case that I talked about right I I have on multiple occasions dossed",
    "start": "835720",
    "end": "842040"
  },
  {
    "text": "another service with a bad retry Loop uh it's really nice to be able to push config to change that and not have to go",
    "start": "842040",
    "end": "849000"
  },
  {
    "text": "get a release in and and uh cut a new binary right",
    "start": "849000",
    "end": "854880"
  },
  {
    "text": "so SEO is a platform that does that is a service mesh that that implements a lot",
    "start": "854880",
    "end": "860120"
  },
  {
    "text": "of this capability uh and so let's talk about kind of in detail how how it",
    "start": "860120",
    "end": "867160"
  },
  {
    "text": "works so this is going to be our mental model it's real it's about as simple as it can be a just wants to call B over",
    "start": "867160",
    "end": "873880"
  },
  {
    "text": "the network we don't really have to care what it can be an HTTP rest request it could be uh TCP bundle over TLS it",
    "start": "873880",
    "end": "881160"
  },
  {
    "text": "really doesn't matter uh it's just a network call the if it's a if it's a",
    "start": "881160",
    "end": "886480"
  },
  {
    "text": "protocol that we can understand like HTTP for example then we can get more interesting data about it to to show the",
    "start": "886480",
    "end": "892519"
  },
  {
    "text": "user and I'm going to demo a lot of the stuff uh I'm going to demo a lot of the uh Telemetry and that kind of thing in a",
    "start": "892519",
    "end": "898759"
  },
  {
    "text": "at the end of the talk and we'll get to see some of what I'm talking about",
    "start": "898759",
    "end": "906720"
  },
  {
    "text": "um but this is just our model so how do we start to build this kind of mesh to get these this functionality that I've",
    "start": "906880",
    "end": "913000"
  },
  {
    "text": "talked about the first thing that we're going to do is put a proxy beside every",
    "start": "913000",
    "end": "918160"
  },
  {
    "text": "single workload that's deployed in our system we call this a sidecar proxy ISO",
    "start": "918160",
    "end": "923199"
  },
  {
    "text": "uses Envoy as its proxy of choice Envoy was specifically built with this use",
    "start": "923199",
    "end": "929240"
  },
  {
    "text": "case in mind right so if we think about uh if we think about like a traditional engine X that we use for load balancing",
    "start": "929240",
    "end": "935839"
  },
  {
    "text": "in our system it has a very different set of requirements than a proxy that we're going to put beside every single",
    "start": "935839",
    "end": "942519"
  },
  {
    "text": "application it's a lot bigger the rate of change is a lot slower you're handling substantially more traffic",
    "start": "942519",
    "end": "948759"
  },
  {
    "text": "typically uh it's not you want to make a different set of tradeoffs when we're when we're building in this sidecar style model we",
    "start": "948759",
    "end": "955880"
  },
  {
    "text": "want a lighter weight proxy the the keeping the footprint small becomes very important we want it to be highly",
    "start": "955880",
    "end": "961440"
  },
  {
    "text": "dynamic because again that's one of the big requirements of uh our the system that we're deploying into is that things",
    "start": "961440",
    "end": "967360"
  },
  {
    "text": "change quickly we need to be able to update the configuration of our proxies very quickly as well and so Envoy was",
    "start": "967360",
    "end": "975040"
  },
  {
    "text": "was built by Mt CLE and the team at Lyft uh to to address these particular use",
    "start": "975040",
    "end": "981959"
  },
  {
    "text": "cases uh secondly then we need to start to get configuration into the system so ISO has this component called Galley",
    "start": "981959",
    "end": "987759"
  },
  {
    "text": "it's responsible for taking configuration validating it and then uh Distributing it to the other SEO",
    "start": "987759",
    "end": "996000"
  },
  {
    "text": "components so we have these side cars there they actually need some config to do something right uh in our system if",
    "start": "997680",
    "end": "1004000"
  },
  {
    "text": "we just have static side cars that sit there it doesn't give us a lot so we deploy this pilot component of iio which",
    "start": "1004000",
    "end": "1010160"
  },
  {
    "text": "is responsible for understanding the topology of our deployment what's the network look like and pushing that",
    "start": "1010160",
    "end": "1015959"
  },
  {
    "text": "information into the side car so they can actually do routing at runtime [Applause]",
    "start": "1015959",
    "end": "1023059"
  },
  {
    "text": "we want to perform policy at runtime like I mentioned we want to be able to do things like service to service authentication I want to do things like",
    "start": "1023880",
    "end": "1030360"
  },
  {
    "text": "rate limiting I ideally I might even want to do things like end user off in",
    "start": "1030360",
    "end": "1037079"
  },
  {
    "text": "mixer so that's one of those things that invariably in every organization winds up being a library that you include",
    "start": "1037079",
    "end": "1042760"
  },
  {
    "text": "right how do you how do you handle your end user credentials how do you authenticate them and how do you authorize them for Access hopefully all",
    "start": "1042760",
    "end": "1048640"
  },
  {
    "text": "of services do it the same way uh and they probably use a library to do that",
    "start": "1048640",
    "end": "1055039"
  },
  {
    "text": "this is another key location where hey that's logic that we can pull out and into our service mesh things that are horizontal that cut across our entire",
    "start": "1055039",
    "end": "1061480"
  },
  {
    "text": "fleet we can pull into our service mesh Implement at one time and if I have",
    "start": "1061480",
    "end": "1066600"
  },
  {
    "text": "mixer here in this case doing the the off policy on enduser request for example I don't need my application",
    "start": "1066600",
    "end": "1073559"
  },
  {
    "text": "developers to worry about it and this is one of the other kind of core features of a servic mesh as opposed to other",
    "start": "1073559",
    "end": "1080080"
  },
  {
    "text": "approaches to get this functionality right cuz service meshes are not necessarily new there's been things like fangle uh that have been around for",
    "start": "1080080",
    "end": "1087000"
  },
  {
    "text": "quite a while that Twitter uses uh there's Netflix and historic and and that family of things those are all very",
    "start": "1087000",
    "end": "1093320"
  },
  {
    "text": "service mesh like uh libraries and Frameworks the problem is they're all",
    "start": "1093320",
    "end": "1098840"
  },
  {
    "text": "language specific uh using a proxy to implement it it being the network to the",
    "start": "1098840",
    "end": "1104000"
  },
  {
    "text": "application lets you sidestep that language dependency and so you can provide all this functionality in a language agnostic",
    "start": "1104000",
    "end": "1110080"
  },
  {
    "text": "way uh and and again this is one of those things that helps uh boost product",
    "start": "1110080",
    "end": "1116080"
  },
  {
    "text": "uh developer productivity right it becomes one less hurdle to use a new language in your environment for example",
    "start": "1116080",
    "end": "1121240"
  },
  {
    "text": "because a lot of the core cross cutting functionality which is traditionally been implemented as libraries can move",
    "start": "1121240",
    "end": "1127440"
  },
  {
    "text": "out and into a language agnostic format huge benefit uh and then finally there's a",
    "start": "1127440",
    "end": "1134039"
  },
  {
    "text": "component of SEO called Citadel that's responsible for provisioning workload identity that L7 identity that's tied to",
    "start": "1134039",
    "end": "1139720"
  },
  {
    "text": "the application cadel is responsible for provisioning that at runtime uh and that looks like a certificate that's an x509",
    "start": "1139720",
    "end": "1146559"
  },
  {
    "text": "CT and rotating it frequently so how does how does our",
    "start": "1146559",
    "end": "1152760"
  },
  {
    "text": "request actually flow through the system right so if we go back to the very beginning a just wants to call B we've",
    "start": "1152760",
    "end": "1158159"
  },
  {
    "text": "set up all this Machinery this these Envoy side cars the control plane is running static and a issues a call to",
    "start": "1158159",
    "end": "1165919"
  },
  {
    "text": "B so the first thing that happens is thatal locally the client side side car",
    "start": "1165919",
    "end": "1171360"
  },
  {
    "text": "traps that request that can be done in a variety of ways buta uh so far uh isio typically",
    "start": "1171360",
    "end": "1178440"
  },
  {
    "text": "uses IP tables to to do this redirect and so it traps all the traffic in and out Envoy then inspects that request it",
    "start": "1178440",
    "end": "1185760"
  },
  {
    "text": "looks at the the metadata the L7 request if this is an HTTP call will look at like the the header uh the the host",
    "start": "1185760",
    "end": "1193360"
  },
  {
    "text": "header sorry uh to determine routing and Envoy then takes this op Unity to to",
    "start": "1193360",
    "end": "1199480"
  },
  {
    "text": "make a client side routing decision and picks the B instance that we're actually going to send the request to and pilot",
    "start": "1199480",
    "end": "1207080"
  },
  {
    "text": "ahead of time programmed all this data into the envoy so pilot actually so any",
    "start": "1207080",
    "end": "1212200"
  },
  {
    "text": "given Envoy in the context of request knows all the other endpoints and can",
    "start": "1212200",
    "end": "1217600"
  },
  {
    "text": "make an immediate decision in route we don't need to do DNS lookups we're not out of path you can you can immediately",
    "start": "1217600",
    "end": "1223400"
  },
  {
    "text": "R so we pick a b we forward our call to B",
    "start": "1223400",
    "end": "1229919"
  },
  {
    "text": "we don't necessarily know that there's a client side Envoy on the other or server side Envoy in this case we don't know",
    "start": "1229919",
    "end": "1234960"
  },
  {
    "text": "that there's a side car there or not part of the the goal of the system is to be transparent uh but in this case we do",
    "start": "1234960",
    "end": "1241880"
  },
  {
    "text": "have one that catches it on the other side now receiving this is where I want",
    "start": "1241880",
    "end": "1247120"
  },
  {
    "text": "to apply policy so this is actually in request path I'm going to block I'm going to go talk to mixer and I'm going to say hey here's this request that I",
    "start": "1247120",
    "end": "1253600"
  },
  {
    "text": "just got here's here's a bundle of the data about it do I let it through or not make it make a decision and this is the",
    "start": "1253600",
    "end": "1260240"
  },
  {
    "text": "point where you can do things like Implement your own auz right if you're doing things like a header based uh",
    "start": "1260240",
    "end": "1265880"
  },
  {
    "text": "token to for off it's easy enough to to pull that out of the request and and do authentication and authorization you can",
    "start": "1265880",
    "end": "1271919"
  },
  {
    "text": "do things like rate limiting here again that anything that might you might want",
    "start": "1271919",
    "end": "1277960"
  },
  {
    "text": "central control over uh is is a good fit for policy in in",
    "start": "1277960",
    "end": "1283400"
  },
  {
    "text": "isio and mixer makes a thumbs up thumbs down decision that's really at the end of the day uh envo says do I let it",
    "start": "1283400",
    "end": "1289120"
  },
  {
    "text": "through or not and mixer just replies with yes no and a cash key so obviously it would be prohibitively expensive to",
    "start": "1289120",
    "end": "1295240"
  },
  {
    "text": "call out to mixer for every single request that comes into the system uh because that doubles the traffic in your",
    "start": "1295240",
    "end": "1301360"
  },
  {
    "text": "system that's not that's not feasible uh and so instead it turns out that a lot of servico service communication uh and",
    "start": "1301360",
    "end": "1308760"
  },
  {
    "text": "even end user to service communication it has a lot of properties that make it very",
    "start": "1308760",
    "end": "1314159"
  },
  {
    "text": "cachable uh typically any given client has a very high temporal locality if you're going to access my API you're",
    "start": "1314159",
    "end": "1320600"
  },
  {
    "text": "probably going to access it a whole bunch in a short amount of time and then you're going to go away and not come back for a long time and then you're",
    "start": "1320600",
    "end": "1325760"
  },
  {
    "text": "going to come back and access it a whole bunch very imitable to caching and you can actually uh see cash hit rates you",
    "start": "1325760",
    "end": "1333159"
  },
  {
    "text": "know above 90% so rather than doubling the traffic in your system by making these policy calls instead you know",
    "start": "1333159",
    "end": "1339400"
  },
  {
    "text": "you're talking about a much smaller increase you know maybe 10% so mixer gives a thumbs up we say",
    "start": "1339400",
    "end": "1346799"
  },
  {
    "text": "yeah cool let the request through and so the sidecar there will will send the request back into the application that's",
    "start": "1346799",
    "end": "1353200"
  },
  {
    "text": "behind it uh the application will do whatever business logic it needs to to to build its response maybe that's",
    "start": "1353200",
    "end": "1358720"
  },
  {
    "text": "calling other services down the graph uh maybe it's going to a database uh maybe it just has the answer in",
    "start": "1358720",
    "end": "1365600"
  },
  {
    "text": "hand but it will send that response back and then asynchronously and out of",
    "start": "1365600",
    "end": "1371919"
  },
  {
    "text": "band both of the both the client and the server side sidecar will report back",
    "start": "1371919",
    "end": "1377320"
  },
  {
    "text": "Telemetry uh and that's awesome because it means that we get a complete picture of what happened from the client's",
    "start": "1377320",
    "end": "1383679"
  },
  {
    "text": "perspective and from the server's perspective which is massive for debugging it's so frustrating to we",
    "start": "1383679",
    "end": "1389360"
  },
  {
    "text": "typically only ever have the server side metric so somebody that's producing a service I worked on sorry uh you know I",
    "start": "1389360",
    "end": "1394640"
  },
  {
    "text": "I always worked on backend Services myself I always had my server side metrics and there's so many times where",
    "start": "1394640",
    "end": "1401200"
  },
  {
    "text": "the it's not the problem is either in the middle or on the client having a single system that gives us both sides",
    "start": "1401200",
    "end": "1406520"
  },
  {
    "text": "of that is massive for debugging it's it's so",
    "start": "1406520",
    "end": "1411080"
  },
  {
    "text": "awesome uh so here's a little bit nicer picture of the architecture that we just walked through uh with all of the uh",
    "start": "1413520",
    "end": "1420039"
  },
  {
    "text": "components labeled uh and again like I said you know pilot config to to the side cars",
    "start": "1420039",
    "end": "1428200"
  },
  {
    "text": "mixer is for tet Tre and for policy Citadel is for identity and G is for",
    "start": "1428200",
    "end": "1434360"
  },
  {
    "text": "configuring everything so with that we're actually going to dive into uh a demo and I'm",
    "start": "1434360",
    "end": "1440960"
  },
  {
    "text": "going to just kind of show you some of what I'm talking about with uh with the service mesh and we'll see some of the",
    "start": "1440960",
    "end": "1447799"
  },
  {
    "text": "Telemetry we'll see some of the traffic control uh so let me let me frame our demo this",
    "start": "1447799",
    "end": "1455880"
  },
  {
    "text": "is if anybody has played with yo before uh you've seen the book Info app it is",
    "start": "1455880",
    "end": "1461000"
  },
  {
    "text": "the canonical test application that we use for for isio um and this is what the",
    "start": "1461000",
    "end": "1466720"
  },
  {
    "text": "deployment looks like we have a page that's the UI that that renders a book it calls The Detail Service to get some",
    "start": "1466720",
    "end": "1473640"
  },
  {
    "text": "details about the book and it calls some version of the review service to to get",
    "start": "1473640",
    "end": "1479200"
  },
  {
    "text": "a review for that book finally two of the two of the",
    "start": "1479200",
    "end": "1485919"
  },
  {
    "text": "reviews calls the rating service so this is this is what we're just going to deploy uh I'll I'll just do a cou CLE apply in a second um where we're going",
    "start": "1485919",
    "end": "1494399"
  },
  {
    "text": "with it is we're going to use iio to to split it up and deploy it across clusters so this is is a use case that",
    "start": "1494399",
    "end": "1499600"
  },
  {
    "text": "I've had uh quite a few different users talk about which is we need to we need",
    "start": "1499600",
    "end": "1505679"
  },
  {
    "text": "to deploy across availability zones uh as an ha requirement for example that's",
    "start": "1505679",
    "end": "1511279"
  },
  {
    "text": "a pretty frequent one I need to run into availability zones as an ha uh setup and",
    "start": "1511279",
    "end": "1517159"
  },
  {
    "text": "that's a blocker for my merger and acquisition for example so what we're going to do is go",
    "start": "1517159",
    "end": "1522840"
  },
  {
    "text": "from this setup to that setup uh with no no errors we should see 100%",
    "start": "1522840",
    "end": "1530520"
  },
  {
    "text": "200s the entire time uh and it should be seamless to the application we're not going to touch the applications that are deployed uh at",
    "start": "1530520",
    "end": "1537760"
  },
  {
    "text": "all so with luck uh it'll go",
    "start": "1537760",
    "end": "1543039"
  },
  {
    "text": "smoothly uh Hey folks in the back can you uh can you read",
    "start": "1543039",
    "end": "1548760"
  },
  {
    "text": "that so I'm I'm not seeing anybody vigorously shaking no so I'm going to I'm going to hope yes uh if not it's",
    "start": "1549559",
    "end": "1556039"
  },
  {
    "text": "going to be a little bit yeah no how is that better not good enough",
    "start": "1556039",
    "end": "1564279"
  },
  {
    "text": "yet sorry where as I'm resizing it we're uh scrolling through close your eyes you're going to miss the you're going to",
    "start": "1564279",
    "end": "1570279"
  },
  {
    "text": "spoil the demo uh okay so hopefully hopefully large enough to read if not just yell",
    "start": "1570279",
    "end": "1576799"
  },
  {
    "text": "again right wave at me uh and then let me go to my cheat sheet real quick and make sure that I'm",
    "start": "1576799",
    "end": "1583960"
  },
  {
    "text": "set up correctly uh so just real quick uh so that everybody can see what I'm doing uh I'm just going to Alias",
    "start": "1583960",
    "end": "1590559"
  },
  {
    "text": "throughout this presentation I'm going to use Ka and KB uh because I'm going to be typing and and to type CBE control in",
    "start": "1590559",
    "end": "1597480"
  },
  {
    "text": "the context is ridiculous so k a goes goes to Cluster a KB goes to Cluster",
    "start": "1597480",
    "end": "1606919"
  },
  {
    "text": "B uh and then let's go ahead and get yio uh isio I've already installed actually",
    "start": "1608799",
    "end": "1614039"
  },
  {
    "text": "so let me",
    "start": "1614039",
    "end": "1617320"
  },
  {
    "text": "sorry let me you can never type when when you're on stage uh and so just to prove that I've",
    "start": "1619480",
    "end": "1626200"
  },
  {
    "text": "installed this ahead of time already so we've this is just a stock isio install",
    "start": "1626200",
    "end": "1631360"
  },
  {
    "text": "this is actually the the isio demo script uh one small change that I'll touch on later is I do have a core DNS",
    "start": "1631360",
    "end": "1637559"
  },
  {
    "text": "deployed and and we'll get into that uh and KB is is the same uh so if",
    "start": "1637559",
    "end": "1643600"
  },
  {
    "text": "I grab this we can see",
    "start": "1643600",
    "end": "1648799"
  },
  {
    "text": "the same and notice we have just this one external IP address that's our Ingress into the into the remote cluster",
    "start": "1648799",
    "end": "1654799"
  },
  {
    "text": "right so that's just our that's our proxy that's running Ingress so let's go ahead and deploy the",
    "start": "1654799",
    "end": "1661320"
  },
  {
    "text": "uh book info into cluster",
    "start": "1661320",
    "end": "1664600"
  },
  {
    "text": "a all",
    "start": "1670640",
    "end": "1673760"
  },
  {
    "text": "right uh and so this is again this is just the standard stock yio booko",
    "start": "1676919",
    "end": "1682760"
  },
  {
    "text": "deployment uh and",
    "start": "1682760",
    "end": "1687200"
  },
  {
    "text": "similarly oh sorry wouldn't be this is see proof that",
    "start": "1689559",
    "end": "1695480"
  },
  {
    "text": "you know the demo is live is that something breaks ah that sorry one second I uh",
    "start": "1695480",
    "end": "1704120"
  },
  {
    "text": "tried to bypass my some of my my",
    "start": "1704120",
    "end": "1710320"
  },
  {
    "text": "setup uh so all I did was just run a little script that uh went and pulled the IP addresses that were going to need",
    "start": "1711960",
    "end": "1718240"
  },
  {
    "text": "later for me and wrote them into into some files",
    "start": "1718240",
    "end": "1723600"
  },
  {
    "text": "including oh I'm sorry I meant to do this ahead of time",
    "start": "1723600",
    "end": "1731000"
  },
  {
    "text": "so I apologize guys but uh so it goes",
    "start": "1731000",
    "end": "1737960"
  },
  {
    "text": "okay perfect sorry about that so now let's verify that our our product page was actually deployed",
    "start": "1748000",
    "end": "1755120"
  },
  {
    "text": "successfully oh no [Laughter]",
    "start": "1760240",
    "end": "1766580"
  },
  {
    "text": "[Applause]",
    "start": "1766710",
    "end": "1769890"
  },
  {
    "text": "[Applause]",
    "start": "1778780",
    "end": "1781950"
  },
  {
    "text": "all right so we're deployed we're",
    "start": "1784200",
    "end": "1789600"
  },
  {
    "text": "there we have our Ingress",
    "start": "1789600",
    "end": "1796360"
  },
  {
    "text": "sorry about this guys I uh fun fun debugging let me uh pull up the Ingress",
    "start": "1821440",
    "end": "1829519"
  },
  {
    "text": "I did actually it did work before I",
    "start": "1829519",
    "end": "1833519"
  },
  {
    "text": "promise all righty so we're just going to do this by hand to",
    "start": "1841360",
    "end": "1846679"
  },
  {
    "text": "verify all righty and then we can do the nuclear option which is just blow up the Pod and and",
    "start": "1856360",
    "end": "1863480"
  },
  {
    "text": "[Applause]",
    "start": "1868550",
    "end": "1871809"
  },
  {
    "text": "uh yay [Applause] fun oh fun fun fun so sorry about that",
    "start": "1875960",
    "end": "1884679"
  },
  {
    "text": "uh and then there's one more little bit of setup that we're going to to do which is if I find my",
    "start": "1884679",
    "end": "1892399"
  },
  {
    "text": "script uh well and I'll dive into",
    "start": "1892399",
    "end": "1899399"
  },
  {
    "text": "uh sorry this is all because I didn't correctly uh tear down my cluster last",
    "start": "1899399",
    "end": "1906519"
  },
  {
    "text": "time uh I'll go into detail about what this is in in a second but I'm just doing this to to set up things",
    "start": "1908039",
    "end": "1916639"
  },
  {
    "text": "uh we're using uh this this CW tool that we're using is a small little tool that produces ISO config uh for",
    "start": "1921720",
    "end": "1931080"
  },
  {
    "text": "us and we'll dive into in detail what it does but this now gets everything",
    "start": "1932399",
    "end": "1940000"
  },
  {
    "text": "working all right so we have book info with reviews all right awesome we're at the start of the demo now",
    "start": "1940880",
    "end": "1947919"
  },
  {
    "text": "oh man so let's go ahead and start driving some traffic to the the deployment I'm going to show you some",
    "start": "1949120",
    "end": "1955639"
  },
  {
    "text": "stats in a second so all I'm going to do is just s a a loop that's just curling the website so we get some traffic in",
    "start": "1955639",
    "end": "1960840"
  },
  {
    "text": "the background and then I'm also going to go ahead and set up grafana to run so uh in",
    "start": "1960840",
    "end": "1968799"
  },
  {
    "text": "the iio demo deployment IO ships with uh a grafana",
    "start": "1968799",
    "end": "1974679"
  },
  {
    "text": "dashboard uh that that lets us see all the the these consistent metrics that I talked about right",
    "start": "1974679",
    "end": "1982470"
  },
  {
    "text": "[Applause] um sorry one more command you can tell",
    "start": "1982470",
    "end": "1989960"
  },
  {
    "text": "that this is a fresh demo this is the first time giving this particular",
    "start": "1989960",
    "end": "1995000"
  },
  {
    "text": "demo okay awesome this one's not on me this is the",
    "start": "1995120",
    "end": "2001360"
  },
  {
    "text": "port forward",
    "start": "2001360",
    "end": "2004559"
  },
  {
    "text": "[Applause] okay",
    "start": "2007430",
    "end": "2013000"
  },
  {
    "text": "bit okay now we get our grafana dashboards woo all righty so these are",
    "start": "2013760",
    "end": "2018880"
  },
  {
    "text": "the this is the stock SEO dashboard so if you've looked at SEO before you you would see it uh and here we can clearly",
    "start": "2018880",
    "end": "2025159"
  },
  {
    "text": "see the the set of services that we've deployed uh we can see the small amount of traffic that we're sending to to it",
    "start": "2025159",
    "end": "2031120"
  },
  {
    "text": "right now about 10 uh and then we can go and look at any individual service that",
    "start": "2031120",
    "end": "2037120"
  },
  {
    "text": "that we have deployed again this is the advantage of having these these pre-canned metrics that are",
    "start": "2037120",
    "end": "2042159"
  },
  {
    "text": "homogeneous everywhere uh I can do things like Define One dashboard that plugs into those metrics that provides",
    "start": "2042159",
    "end": "2048919"
  },
  {
    "text": "useful and interesting data like total total request volume the success rate",
    "start": "2048919",
    "end": "2054480"
  },
  {
    "text": "our latencies the these critical metrics for actually diagnosing the health of a service out of the box without having to",
    "start": "2054480",
    "end": "2061839"
  },
  {
    "text": "add them to the application itself uh and we can see both the client side and the server side we we don't",
    "start": "2061839",
    "end": "2067960"
  },
  {
    "text": "have any uh we don't I guess we do in this case so these dashboards awesome free",
    "start": "2067960",
    "end": "2075960"
  },
  {
    "text": "out of the box we're now in this state so let's go",
    "start": "2075960",
    "end": "2081480"
  },
  {
    "text": "ahead and start to migrate things over so if we're moving to to this end destination step one is going to be just",
    "start": "2081480",
    "end": "2088040"
  },
  {
    "text": "to migrate details over first so we'll go incrementally one service at a time we'll Shi them over and the big thing",
    "start": "2088040",
    "end": "2095320"
  },
  {
    "text": "that we want to watch we can actually see our GL success rate this is aggregate any 500 across the entire",
    "start": "2095320",
    "end": "2101640"
  },
  {
    "text": "system will will trigger something there uh so we we expect that to stay at 100 as we do our traffic",
    "start": "2101640",
    "end": "2108680"
  },
  {
    "text": "shifting uh and then let's go ahead and start doing that so the first thing that we're going to do is deploy The Detail",
    "start": "2108920",
    "end": "2115160"
  },
  {
    "text": "Service into our second cluster uh",
    "start": "2115160",
    "end": "2121760"
  },
  {
    "text": "all righty and if we get the service we see it's",
    "start": "2128599",
    "end": "2134440"
  },
  {
    "text": "deployed awesome now let's talk about that uh CW",
    "start": "2134440",
    "end": "2139640"
  },
  {
    "text": "tool that I that I was going to demot so SEO gives us the tools in hand to to",
    "start": "2139640",
    "end": "2146560"
  },
  {
    "text": "shift this stuff around basically playing some showell games with how names",
    "start": "2146560",
    "end": "2151880"
  },
  {
    "text": "resolve the problem is it's the the config to write this to to do these",
    "start": "2151880",
    "end": "2156960"
  },
  {
    "text": "kinds of traffic shifts and ISO is super tedious to write it's exactly the same every single time but it's multiple",
    "start": "2156960",
    "end": "2163079"
  },
  {
    "text": "config documents that you need to to to produce together so this CW tool that",
    "start": "2163079",
    "end": "2168359"
  },
  {
    "text": "we're going to be using it's called cotty wle is something that uh my team built uh and all it does is just",
    "start": "2168359",
    "end": "2175280"
  },
  {
    "text": "generate Theo config for for a couple different use cases the reason I'm talking about it",
    "start": "2175280",
    "end": "2181040"
  },
  {
    "text": "now is because to in order to generate this config uh we need a little bit of",
    "start": "2181040",
    "end": "2186319"
  },
  {
    "text": "auxiliary data so the first thing that we need is a representation of our clusters so I mentioned before that we",
    "start": "2186319",
    "end": "2192240"
  },
  {
    "text": "have a and b uh here is our A and B clusters and in particular these addresses are those those IP addresses",
    "start": "2192240",
    "end": "2199400"
  },
  {
    "text": "of the ingresses that I talked about earlier right so we're going to communicate with between our clusters",
    "start": "2199400",
    "end": "2205280"
  },
  {
    "text": "over the Internet uh via their Ingress and we can rely on on otls to keep that",
    "start": "2205280",
    "end": "2211560"
  },
  {
    "text": "secure right so Citadel Provisions identities those identities are used to do Mutual TLS between workloads so we",
    "start": "2211560",
    "end": "2219160"
  },
  {
    "text": "can over the Internet just go in through the Ingress and hey that's fine we set at the same rout of trust ahead of time",
    "start": "2219160",
    "end": "2225160"
  },
  {
    "text": "and so the workloads trust each other and we can just do TLS all the way through not need to worry about setting up a VPN or or any other kind of",
    "start": "2225160",
    "end": "2232200"
  },
  {
    "text": "complicated setup that we might have to do otherwise the second thing that we need is a is a small representation of the",
    "start": "2232200",
    "end": "2239800"
  },
  {
    "text": "service enough to be able to generate uh some configuration to talk to it and the",
    "start": "2239800",
    "end": "2245040"
  },
  {
    "text": "one thing that we really care about so this is just you know here's the name the product page service how we call",
    "start": "2245040",
    "end": "2251440"
  },
  {
    "text": "it uh the portal listens one and then this backends bit here uh lines up with",
    "start": "2251440",
    "end": "2256640"
  },
  {
    "text": "the Clusters in a right so if I had product page deployed in B for example",
    "start": "2256640",
    "end": "2262599"
  },
  {
    "text": "or I just deployed product p i just deployed details into B uh I can go ahead and add this as a",
    "start": "2262599",
    "end": "2270880"
  },
  {
    "text": "backend so what I just said is whoops wrong one so all this is all I'm doing is",
    "start": "2270880",
    "end": "2277520"
  },
  {
    "text": "updating this little model of our Detail Service and I'm saying hey it's deployed both into uh cluster a and it's deployed",
    "start": "2277520",
    "end": "2284599"
  },
  {
    "text": "into cluster B and it's the details. default the that",
    "start": "2284599",
    "end": "2289839"
  },
  {
    "text": "default kubernetes service name that's the that's the actual address of the service in the cluster and so now we can go and",
    "start": "2289839",
    "end": "2296760"
  },
  {
    "text": "generate some some of that tedious config to wire up our cluster so that",
    "start": "2296760",
    "end": "2302960"
  },
  {
    "text": "this Ingress Works details us here and then we'll wire up some config on on A's",
    "start": "2302960",
    "end": "2308760"
  },
  {
    "text": "side to to let it know that cluster B",
    "start": "2308760",
    "end": "2313240"
  },
  {
    "text": "exists uh so as we saw before so this time we'll say hey generate config uh K",
    "start": "2316040",
    "end": "2323160"
  },
  {
    "text": "wle generate config for cluster B and we I care about the details",
    "start": "2323160",
    "end": "2328640"
  },
  {
    "text": "service cool so this just spit out a bunch of Amo let me uh pull it over somewhere where we can actually look and",
    "start": "2330599",
    "end": "2335760"
  },
  {
    "text": "see what it does",
    "start": "2335760",
    "end": "2339240"
  },
  {
    "text": "so there's three key pieces of config that we have here the first is our Gateway how do we actually get into this",
    "start": "2341960",
    "end": "2348520"
  },
  {
    "text": "details Service uh and this just says Hey run on the normal SEO Gateway and use the",
    "start": "2348520",
    "end": "2354839"
  },
  {
    "text": "details. global name this is going to be the name I expect a client to to call with this Global name to to",
    "start": "2354839",
    "end": "2363160"
  },
  {
    "text": "ingress i define routing for that I say hey by the way at that at that Gateway that we",
    "start": "2363280",
    "end": "2369319"
  },
  {
    "text": "created if you see these two hosts go ahead and just send it to the uh to the",
    "start": "2369319",
    "end": "2374640"
  },
  {
    "text": "details service let me sorry we uh I had a typo here in my",
    "start": "2374640",
    "end": "2381440"
  },
  {
    "text": "services I thought I got it",
    "start": "2381440",
    "end": "2386599"
  },
  {
    "text": "okay and then finally uh we have a service entry that just says hey by the way see I didn't",
    "start": "2388599",
    "end": "2395359"
  },
  {
    "text": "save the there we go",
    "start": "2395359",
    "end": "2399318"
  },
  {
    "text": "uh by the way this service entry I'm going to Define this name these two names and just resolve",
    "start": "2400400",
    "end": "2408480"
  },
  {
    "text": "them with uh to the kubernetes service really so this just is basically playing a show game creating a new name for our",
    "start": "2408480",
    "end": "2414880"
  },
  {
    "text": "kubernetes service and our application already talks to this name and this and the reason that we want to do this that",
    "start": "2414880",
    "end": "2420560"
  },
  {
    "text": "we want to decouple naming from the kubernetes names is it allows us to do things like shift traffic between clusters the problem is that kubernetes",
    "start": "2420560",
    "end": "2427359"
  },
  {
    "text": "names are scoped to a cluster right and so if I immediately want to begin to do things across clusters I need some",
    "start": "2427359",
    "end": "2433680"
  },
  {
    "text": "different naming domain where I can't get conflicts uh and so that's why we're playing a little bit of a shell game",
    "start": "2433680",
    "end": "2439800"
  },
  {
    "text": "with with some of the names here and we're using this global Service rather than the full kubernetes service name",
    "start": "2439800",
    "end": "2446200"
  },
  {
    "text": "and that's also why we're running cord DNS in our clusters uh so that we can resolve these new names that we're",
    "start": "2446200",
    "end": "2451280"
  },
  {
    "text": "creating right so let's go ahead and do that",
    "start": "2451280",
    "end": "2457240"
  },
  {
    "text": "and sorry let me verify that I actually saved this correctly so we don't wind up with reviews in there like last time all",
    "start": "2473079",
    "end": "2479200"
  },
  {
    "text": "righty details details details everywhere ratings ratings ratings reviews okay",
    "start": "2479200",
    "end": "2486720"
  },
  {
    "text": "great so same config that I just walked through we're just going to coule apply it we didn't create our",
    "start": "2488599",
    "end": "2495599"
  },
  {
    "text": "namespace excellent so now I can take this we can I can prove",
    "start": "2497079",
    "end": "2503680"
  },
  {
    "text": "to you that our Ingress Works real quick uh so I'm going to curl The Detail",
    "start": "2503680",
    "end": "2509800"
  },
  {
    "text": "Service and I'm going to set that host header so critically we told uh",
    "start": "2509800",
    "end": "2517200"
  },
  {
    "text": "oh good grief we have the same problem that we had in the other one so let's just kill the Pod real [Applause]",
    "start": "2519000",
    "end": "2527150"
  },
  {
    "text": "[Applause]",
    "start": "2530220",
    "end": "2533450"
  },
  {
    "text": "quick oh sorry and again this is just a little",
    "start": "2537119",
    "end": "2544200"
  },
  {
    "text": "bit of setup it's not typical that you have to go delete your Ingress pod to get config to",
    "start": "2544200",
    "end": "2549960"
  },
  {
    "text": "apply all righty great so we got a 404 which we",
    "start": "2551240",
    "end": "2557920"
  },
  {
    "text": "would expect uh because we didn't set our host header",
    "start": "2557920",
    "end": "2563240"
  },
  {
    "text": "but as soon as we set our host Setter suddenly we can do routing normally and we can get our details great",
    "start": "2563240",
    "end": "2570240"
  },
  {
    "text": "so we have set up this now we want to add our key link",
    "start": "2570240",
    "end": "2578359"
  },
  {
    "text": "and the way that we're going to do that is go update our representation so I want to move details",
    "start": "2580680",
    "end": "2587440"
  },
  {
    "text": "I really don't want to model details being in a I want to shift it over to Cluster B so I'm going to go back to my model of my services I just deleted it",
    "start": "2587440",
    "end": "2594480"
  },
  {
    "text": "out and now we're only in cluster B and we can look at the",
    "start": "2594480",
    "end": "2602040"
  },
  {
    "text": "uh and we can see that we actually generate now a different set of config for cluster a",
    "start": "2602160",
    "end": "2607640"
  },
  {
    "text": "right so I said hey details moved the config to talk to details is now a little different it",
    "start": "2607640",
    "end": "2615040"
  },
  {
    "text": "actually points to this IP address for the remote cluster right so we say hey if you want to resolve that details name",
    "start": "2615040",
    "end": "2620760"
  },
  {
    "text": "go over to the remote cluster uh so we can just go ahead and",
    "start": "2620760",
    "end": "2627240"
  },
  {
    "text": "apply that",
    "start": "2627240",
    "end": "2630520"
  },
  {
    "text": "great and then the last thing we have to do is you remember that virtual service that I showed you",
    "start": "2639280",
    "end": "2645520"
  },
  {
    "text": "here this is currently in our cluster and it says hey when you see details send it to the local",
    "start": "2647040",
    "end": "2653559"
  },
  {
    "text": "Service uh clearly I don't want that anymore right because I just said hey no I want to move it over to the remote so let's go ahead and delete this virtual",
    "start": "2653559",
    "end": "2660400"
  },
  {
    "text": "service and this is just some iio config and what we'll see here is if we come",
    "start": "2660400",
    "end": "2666319"
  },
  {
    "text": "and look at our cluster a we see that there's traffic going in if we look at cluster B we see that the only traffic",
    "start": "2666319",
    "end": "2671839"
  },
  {
    "text": "that was my couple curls what we should see is when I remove this rule our traffic flop over because right now that",
    "start": "2671839",
    "end": "2678880"
  },
  {
    "text": "rule says keep the traffic [Applause]",
    "start": "2678880",
    "end": "2685119"
  },
  {
    "text": "local and then let's delete it in the right name space cool so we just removed that config from cluster a so now what",
    "start": "2685119",
    "end": "2691680"
  },
  {
    "text": "we should see is traffic start is a still 100% % success this should still",
    "start": "2691680",
    "end": "2699240"
  },
  {
    "text": "load we're still loading and we're seeing reviews and we see that traffic is",
    "start": "2699240",
    "end": "2704440"
  },
  {
    "text": "actually starting to pick up so we're on a 5 minute delayed uh window for our metrics so we can see the traffic picked",
    "start": "2704440",
    "end": "2710599"
  },
  {
    "text": "up uh but our Ops per second is still low and if we go we can dig into a little bit more detail here and we can",
    "start": "2710599",
    "end": "2717079"
  },
  {
    "text": "see that that in fact traffic is picking up so we just actually and and we can go",
    "start": "2717079",
    "end": "2724079"
  },
  {
    "text": "back to our uh side that's actually serving our UI and see that we did it with actually no",
    "start": "2724079",
    "end": "2729559"
  },
  {
    "text": "errors anywhere so we didn't drop any connections to anybody we didn't uh lose",
    "start": "2729559",
    "end": "2734640"
  },
  {
    "text": "one of the user requests during that flop over uh everything just kind of flowed through the",
    "start": "2734640",
    "end": "2740640"
  },
  {
    "text": "system uh so we're running short on time now because uh you know it turns out that the demo is a little bit more",
    "start": "2740640",
    "end": "2745839"
  },
  {
    "text": "efficient when it works uh so I want to I want to save some time for questions so I apologize we didn't get to dig in",
    "start": "2745839",
    "end": "2751599"
  },
  {
    "text": "it quite as much as I wanted to uh but hopefully we got to see a little bit of the the Telemetry out of the box that's",
    "start": "2751599",
    "end": "2757200"
  },
  {
    "text": "pretty useful and we can see how we can apply uh pretty cool traffic shifts and",
    "start": "2757200",
    "end": "2762880"
  },
  {
    "text": "and make interesting things happen with just changing configuration right I didn't have to touch any of those applications we didn't have to touch any",
    "start": "2762880",
    "end": "2769079"
  },
  {
    "text": "of the code it was all deployed and running the entire time and we were able to change it really without the",
    "start": "2769079",
    "end": "2774480"
  },
  {
    "text": "applications noticing and that's a key feature for that for that velocity right I want my Ops Team to be able to manage",
    "start": "2774480",
    "end": "2780760"
  },
  {
    "text": "the cluster and my Dev team not to have to care uh so questions we got uh 4",
    "start": "2780760",
    "end": "2789079"
  },
  {
    "text": "minutes so in in your example you were referring that um server a called mixer",
    "start": "2791079",
    "end": "2797319"
  },
  {
    "text": "to apply policies and you said that that was no a penalty you paid per request",
    "start": "2797319",
    "end": "2803319"
  },
  {
    "text": "but then when in invoke service B there isn't again and void so down stream",
    "start": "2803319",
    "end": "2810480"
  },
  {
    "text": "service they are not always calling mixer to to check enforcement so the",
    "start": "2810480",
    "end": "2815920"
  },
  {
    "text": "server side Envoy will always call you want policy to be enforced on the server",
    "start": "2815920",
    "end": "2820960"
  },
  {
    "text": "side because you can't trust the client applied policy right um so we always do it on the server side it get logically",
    "start": "2820960",
    "end": "2828800"
  },
  {
    "text": "mixer is called on every single request to a server but we cash does that answer",
    "start": "2828800",
    "end": "2834280"
  },
  {
    "text": "the question perfect can you hear me yeah um in the",
    "start": "2834280",
    "end": "2839440"
  },
  {
    "text": "instance you showed um is the same instance of stto actually managing across two distinct kubernetes",
    "start": "2839440",
    "end": "2847359"
  },
  {
    "text": "that's a great question so uh and this gets into some of the SEO multicluster work uh the answer is today what I",
    "start": "2847359",
    "end": "2854359"
  },
  {
    "text": "demoed you do not actually so these are two separate control plane instances with two separate config domains uh in",
    "start": "2854359",
    "end": "2860839"
  },
  {
    "text": "my opinion that's actually how you want to run SEO across clusters right so it",
    "start": "2860839",
    "end": "2866920"
  },
  {
    "text": "really gets out what you mean by what's a service mesh the the real answer is identity these workloads can communicate",
    "start": "2866920",
    "end": "2873000"
  },
  {
    "text": "with each other because they share a common identity domain uh because they have that common identity domain we can",
    "start": "2873000",
    "end": "2878880"
  },
  {
    "text": "establish connections it doesn't really matter who's configuring that right the",
    "start": "2878880",
    "end": "2884040"
  },
  {
    "text": "fundamental pieces is that there's communication and so we can have separate administrative domains it's still one mesh because we still have one",
    "start": "2884040",
    "end": "2890280"
  },
  {
    "text": "set of",
    "start": "2890280",
    "end": "2892559"
  },
  {
    "text": "identities we have one last question for time for one",
    "start": "2896040",
    "end": "2902160"
  },
  {
    "text": "question sorry so every time every time I make a call",
    "start": "2904640",
    "end": "2912280"
  },
  {
    "text": "that mixer is invoked what keeps it from being the single point of failure yeah that's a great question uh so again that",
    "start": "2912280",
    "end": "2918359"
  },
  {
    "text": "caching so there there's a couple different things so a envoys are doing caching right so you can think of mixer",
    "start": "2918359",
    "end": "2923599"
  },
  {
    "text": "in some senses as a centralized cache and then the envoy is as kind of leaf cache nodes",
    "start": "2923599",
    "end": "2930559"
  },
  {
    "text": "so the second piece is that uh mixer itself can be horizontally scaled right",
    "start": "2930559",
    "end": "2935720"
  },
  {
    "text": "so there's not any one particular instance of it there are many instances",
    "start": "2935720",
    "end": "2942680"
  },
  {
    "text": "uh I guess the the short answer is mixer can be a single point of failure if you",
    "start": "2942680",
    "end": "2947960"
  },
  {
    "text": "uh configure things incorrectly but in terms of actual scaling it's horizontally scaled so one instance going down is not going to kill anything",
    "start": "2947960",
    "end": "2954280"
  },
  {
    "text": "you can push bad policy that might cause a global outage and be a single point of failure uh but outside of that it's it",
    "start": "2954280",
    "end": "2961000"
  },
  {
    "text": "tends to not be and in fact what we've seen uh and this is so this AR",
    "start": "2961000",
    "end": "2966720"
  },
  {
    "text": "architecture actually came out of of Google Google has had a a system of identical architecture for about the",
    "start": "2966720",
    "end": "2972680"
  },
  {
    "text": "last four and a half years now um and actually what we've observed is that not",
    "start": "2972680",
    "end": "2978559"
  },
  {
    "text": "only is it not a single point of failure but it actually boosts the client perceived availability of the backends",
    "start": "2978559",
    "end": "2984400"
  },
  {
    "text": "that it's in front of because it acts as a distributed cash and it turns out that it's really really really easy to run a",
    "start": "2984400",
    "end": "2990839"
  },
  {
    "text": "distributed cash at high availability and it's really really really hard to run systems that make policy decisions",
    "start": "2990839",
    "end": "2996160"
  },
  {
    "text": "at high a uh so there are definitely failure modes in which it can be a single point of",
    "start": "2996160",
    "end": "3001920"
  },
  {
    "text": "failure but in practice we've actually observed it doing just the opposite and increasing the the client perceived",
    "start": "3001920",
    "end": "3008400"
  },
  {
    "text": "availability of a backend and O is a perfect example right so today your o call probably goes every single service",
    "start": "3008400",
    "end": "3015400"
  },
  {
    "text": "should be calling your o service for every single request uh and instead you can reduce that by a faor of about 10x",
    "start": "3015400",
    "end": "3022720"
  },
  {
    "text": "by having mixer cach that and have that result reused used and that just works natively with",
    "start": "3022720",
    "end": "3030000"
  },
  {
    "text": "with how mixer functions it automatically does these caching of decisions great thanks a lot so we are",
    "start": "3030000",
    "end": "3037079"
  },
  {
    "text": "running out of time thanks a lot be for your great talk",
    "start": "3037079",
    "end": "3042319"
  }
]