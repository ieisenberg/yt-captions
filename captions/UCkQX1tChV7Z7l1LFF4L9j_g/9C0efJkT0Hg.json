[
  {
    "text": "thank you and what a great conference it's got to be the best tech conference in the world right now it's amazing you",
    "start": "3939",
    "end": "9519"
  },
  {
    "text": "see so many great people here so let's get started testing in production but really what are we talking about it's",
    "start": "9519",
    "end": "14800"
  },
  {
    "text": "how we make quality software faster at the end of the day that's what we're talking about and it turns out that",
    "start": "14800",
    "end": "20890"
  },
  {
    "text": "testing and production gives us a great tool to be able to accelerate our software development and actually",
    "start": "20890",
    "end": "26560"
  },
  {
    "text": "produce higher quality software faster so let's get started I want you to think",
    "start": "26560",
    "end": "36040"
  },
  {
    "text": "about the last feature that you've worked on and deploy to production maybe a small feature a big feature a bug fix",
    "start": "36040",
    "end": "43810"
  },
  {
    "text": "but imagine the last thing that you worked on we went through your software",
    "start": "43810",
    "end": "48820"
  },
  {
    "text": "development process code reviewed it felt great came home told your family",
    "start": "48820",
    "end": "53980"
  },
  {
    "text": "how great this feature is that you're about to deploy at work answered all the questions from your nine-year-old we",
    "start": "53980",
    "end": "59890"
  },
  {
    "text": "knew you're gonna save the world of this feature is that feature working is it",
    "start": "59890",
    "end": "65890"
  },
  {
    "text": "working thinking about that feature I mean is it working right now in",
    "start": "65890",
    "end": "71259"
  },
  {
    "text": "production as you said here is that feature working right",
    "start": "71259",
    "end": "76920"
  },
  {
    "text": "two people nodding a few people thinking how do you know that it's working",
    "start": "76920",
    "end": "84119"
  },
  {
    "text": "your phone's not ringing who would call you how do you know they're working",
    "start": "84119",
    "end": "93030"
  },
  {
    "text": "how do you know alright maybe your battery's not dying because your inbox isn't getting spammed with all the",
    "start": "93320",
    "end": "100320"
  },
  {
    "text": "alerts from Nagios or graphite but how do you really know and ultimately if",
    "start": "100320",
    "end": "106800"
  },
  {
    "text": "you're feeling a little bit anxious it's really that feeling of anxiety that we're trying to solve like how can we",
    "start": "106800",
    "end": "112110"
  },
  {
    "text": "really really be sure that the work that we've done is actually working not just at the moment that we deployed it when",
    "start": "112110",
    "end": "118140"
  },
  {
    "text": "we verified it but a week later a month later a year later and ultimately if we",
    "start": "118140",
    "end": "123240"
  },
  {
    "text": "could know that our work was in fact done and the truth I think the broader",
    "start": "123240",
    "end": "128670"
  },
  {
    "text": "meaning of the word done it's working it's working as expected it continues to work as expected and we would know if it",
    "start": "128670",
    "end": "135540"
  },
  {
    "text": "changed if we can do all of that then we can reduce some of our anxiety and then focus our energy full-time into whatever",
    "start": "135540",
    "end": "142680"
  },
  {
    "text": "it is that we're building next and I don't know about you but when something's not done and I don't know if it's working like I'm not hundred",
    "start": "142680",
    "end": "148739"
  },
  {
    "text": "percent working on the next thing I'm just not there's something in the back of my mind constantly worried I may flip",
    "start": "148739",
    "end": "153959"
  },
  {
    "text": "over I may be looking at a chart and they be looking at monitors I'm not 100% focused on the next thing I'm working",
    "start": "153959",
    "end": "159810"
  },
  {
    "text": "out because I'm worried about that thing that I built because it may or may not be working and if it's not working I may",
    "start": "159810",
    "end": "166440"
  },
  {
    "text": "or may not know and the dreaded outcome of that is that ultimately we hear from",
    "start": "166440",
    "end": "171930"
  },
  {
    "text": "customer service we hear from our friends we hear from customers who have our direct phone number to tell us when",
    "start": "171930",
    "end": "178170"
  },
  {
    "text": "we make mistakes and the phone rings and we realize that we missed something and it's not a great feeling and ultimately",
    "start": "178170",
    "end": "184019"
  },
  {
    "text": "this is about how can what can we do to fix that to get rid of the anxiety and know that the software that we've built",
    "start": "184019",
    "end": "189330"
  },
  {
    "text": "is working so let's remove that anxiety quickly about me so in 2007 the",
    "start": "189330",
    "end": "196230"
  },
  {
    "text": "co-founder and CTO of gilt groupe gilt comm company grew to over a thousand people I was approaching a billion",
    "start": "196230",
    "end": "203220"
  },
  {
    "text": "dollars in revenue I think a hundred and hundred fifty engineers working in the company a few years ago sold to Hudson's",
    "start": "203220",
    "end": "209010"
  },
  {
    "text": "Bay started off as a Ruby on Rails monolith broke out into a large distributed monolith 400 plus individual",
    "start": "209010",
    "end": "215250"
  },
  {
    "text": "applications over 1,500 unique code bases and lots of lessons learned in",
    "start": "215250",
    "end": "220320"
  },
  {
    "text": "terms of what it means to operate a distributed model with or a marker service architecture at scale",
    "start": "220320",
    "end": "225970"
  },
  {
    "text": "and then a couple years ago Coco founded a company called floo floo is a enterprise software company that we",
    "start": "225970",
    "end": "232810"
  },
  {
    "text": "build software that helps brand sell internationally so just like as guilt when guilt expanded internationally creating great experiences to sell a",
    "start": "232810",
    "end": "239620"
  },
  {
    "text": "product into Canada China Australia etc what was really really interesting about the journey is you take everything we",
    "start": "239620",
    "end": "245110"
  },
  {
    "text": "had the opportunity to take what we learned about building guilt about going to a very distributed micro-service",
    "start": "245110",
    "end": "250540"
  },
  {
    "text": "architecture the lessons learned what worked what didn't the five attempts at building a staging environment which",
    "start": "250540",
    "end": "255970"
  },
  {
    "text": "we'll talk about later and five failures building a successful productive staging environment and then rethinking the",
    "start": "255970",
    "end": "260980"
  },
  {
    "text": "things that we wanted to do with the fortune of starting with a clean slate and ultimately what we learned and where",
    "start": "260980",
    "end": "267820"
  },
  {
    "text": "this talk comes from is some of our software practices at flow are quite different but first let's talk a little",
    "start": "267820",
    "end": "274690"
  },
  {
    "text": "bit about just software in general so software call it's hard to build quality software he's a really really hard thing",
    "start": "274690",
    "end": "281940"
  },
  {
    "text": "a few examples of the highest quality software in the world one was the space shuttle a few years ago an article was",
    "start": "281940",
    "end": "288160"
  },
  {
    "text": "published about how they write software for the space shuttle and it's amazing people work 9:00 to 5:00 they're steady",
    "start": "288160",
    "end": "295260"
  },
  {
    "text": "when they find a bug they review they fix the bug it would be why it happened",
    "start": "295260",
    "end": "300430"
  },
  {
    "text": "but then they look at where else in our entire code base could this conditions these same conditions exist for this",
    "start": "300430",
    "end": "306669"
  },
  {
    "text": "same type of bug to happen and then they go find all those places and fix all those things when they're preparing for",
    "start": "306669",
    "end": "312430"
  },
  {
    "text": "a software release they say well how many bugs have we found we found 50 bugs well our data says that on average every",
    "start": "312430",
    "end": "317800"
  },
  {
    "text": "new release has a hundred and twenty bugs that means we still have to find seventy more bugs on average before we",
    "start": "317800",
    "end": "323410"
  },
  {
    "text": "can release our software so we can't release everybody go find bugs because we can't release the software until we",
    "start": "323410",
    "end": "328450"
  },
  {
    "text": "find the unknowns that's their process and they produce some of the highest quality software in the world it's also",
    "start": "328450",
    "end": "334210"
  },
  {
    "text": "the most expensive software ever produced in the world so there's a trade-off there other companies here in",
    "start": "334210",
    "end": "340630"
  },
  {
    "text": "the valley a few years ago salesforce.com made a huge investment into testing their cloud software and",
    "start": "340630",
    "end": "347169"
  },
  {
    "text": "really scaling all of their integration tests across the AP eyes and everything else I think that at that time they had",
    "start": "347169",
    "end": "352600"
  },
  {
    "text": "50,000 tests and if you ran them serially you'd run them for a decade or something like that so a massive massive investment into tooling and technology",
    "start": "352600",
    "end": "359110"
  },
  {
    "text": "to scale and we see that same sort of investment happening at a lot of the other companies you look at Facebook I think today thousands of Engineers work just",
    "start": "359110",
    "end": "365289"
  },
  {
    "text": "on software to detect changes in the code review process automatically before they become issues for for customers and",
    "start": "365289",
    "end": "373240"
  },
  {
    "text": "all this is just a signal that it's hard and then we fast forward to where most most of us operate and of course there's",
    "start": "373240",
    "end": "379090"
  },
  {
    "text": "a trade-off between the amount of resources we spend in testing and deploying and really navigating that balance is tricky when we think about",
    "start": "379090",
    "end": "386590"
  },
  {
    "text": "software quality a lot of times we think about the software development process up until the point that we push code to production and here really we just want",
    "start": "386590",
    "end": "393310"
  },
  {
    "text": "to make the case that if we really think about the end-to-end lifecycle of code so everything from when a feature and",
    "start": "393310",
    "end": "398919"
  },
  {
    "text": "idea is conceived all the way through decades later for successful software when it might that software may find",
    "start": "398919",
    "end": "404289"
  },
  {
    "text": "maybe sunset that's the life cycle that we're working with and we want quality throughout that entire lifecycle and",
    "start": "404289",
    "end": "409750"
  },
  {
    "text": "that's important because if we think about it that way then we can think about what production is and just be",
    "start": "409750",
    "end": "414909"
  },
  {
    "text": "honest that production is a really important part of our lives as developers and as engineers and that",
    "start": "414909",
    "end": "420759"
  },
  {
    "text": "testing and production which I think has always gotten a bad name but it's an incredibly powerful technique to help us",
    "start": "420759",
    "end": "428409"
  },
  {
    "text": "build quality software if we could test our software in production we could prove to ourselves that our software",
    "start": "428409",
    "end": "434050"
  },
  {
    "text": "works and interestingly it helps us test software in a number of different ways that previously was difficult let's talk",
    "start": "434050",
    "end": "441370"
  },
  {
    "text": "quickly about software development at flow so at flow we have true continuous delivery and by that what it means is",
    "start": "441370",
    "end": "448569"
  },
  {
    "text": "that when you merge a pool request that code is going to production there's",
    "start": "448569",
    "end": "453879"
  },
  {
    "text": "nothing else standing in the way you don't merge your code and then have a continuous delivery continuous",
    "start": "453879",
    "end": "459069"
  },
  {
    "text": "integration test run that doesn't happen continuous integration happens before the commit is merged and it's important",
    "start": "459069",
    "end": "465939"
  },
  {
    "text": "distinction because we wanted to make sure that the process by which we move code to production is the same in standard times when there's no stress",
    "start": "465939",
    "end": "472000"
  },
  {
    "text": "and in urgent times and a bug needs to be fixed quickly the pipeline is exactly the same typical process is a developer",
    "start": "472000",
    "end": "478210"
  },
  {
    "text": "open to pool requests CI runs we use Travis when CI passes the developer has",
    "start": "478210",
    "end": "484029"
  },
  {
    "text": "a choice to make do I push the green button to merge my code or not and if",
    "start": "484029",
    "end": "490240"
  },
  {
    "text": "they push that button that codes going to production we don't have any staging environments we don't have any developer environments we",
    "start": "490240",
    "end": "496569"
  },
  {
    "text": "don't have any QA environments we don't have any pre-production environments or any environments like that by any other",
    "start": "496569",
    "end": "501879"
  },
  {
    "text": "name they don't exist in the very first few months of flow it was interesting that we were actually running code in",
    "start": "501879",
    "end": "507819"
  },
  {
    "text": "developer environments and then about six months in we realized that the majority of the engineers we're no",
    "start": "507819",
    "end": "513399"
  },
  {
    "text": "longer doing that those engineers are writing integration tests and when there's integration test we're",
    "start": "513399",
    "end": "519219"
  },
  {
    "text": "successful they feel confident that they could deploy their code and so it became interesting we started asking people",
    "start": "519219",
    "end": "524440"
  },
  {
    "text": "what is it about the development environment that's interesting oh I want to inspect my code that it's correct well if you inspect your code that it's",
    "start": "524440",
    "end": "530889"
  },
  {
    "text": "correct who's going to be there to inspect your code three months later six months later three years later when we still need to know that it's correct and",
    "start": "530889",
    "end": "537339"
  },
  {
    "text": "so what we did is we removed all of those things we remove the staging environments the test environments that the separate people verify in the",
    "start": "537339",
    "end": "544269"
  },
  {
    "text": "quality of the code is on the developer to make that choice and now if you're the developer what do you want to do you",
    "start": "544269",
    "end": "550089"
  },
  {
    "text": "want your code to be in production but do you really what you want is you don't want to cause an issue great if you're",
    "start": "550089",
    "end": "556329"
  },
  {
    "text": "uncomfortable pushing the button write some tests you're still uncomfortable write some more tests and eventually you'll write enough tests that you feel",
    "start": "556329",
    "end": "563019"
  },
  {
    "text": "comfortable that your code can go to production and by the way all those tests are automated you push the button your code goes to production and now if",
    "start": "563019",
    "end": "569769"
  },
  {
    "text": "you've done a good job we'll come to talk on testing in production now we can talk about which portion of those tests are safe to continue to run in",
    "start": "569769",
    "end": "575740"
  },
  {
    "text": "production and let's talk about how we can do that and so ultimately you found that we don't run code locally and that",
    "start": "575740",
    "end": "581800"
  },
  {
    "text": "was that's a really groundbreaking thing right we just don't run the code locally and this primarily in the API is the UI we",
    "start": "581800",
    "end": "588010"
  },
  {
    "text": "write we still run locally to visually inspect but everything else is the same if there's something that you want to",
    "start": "588010",
    "end": "595360"
  },
  {
    "text": "verify that we want to verify I've write the test if the test is hard is gonna be hard for my colleague figure out how to",
    "start": "595360",
    "end": "602079"
  },
  {
    "text": "make that test easy invest in that tooling so that we can get in comfort and then we can deploy software to",
    "start": "602079",
    "end": "607269"
  },
  {
    "text": "production let's talk a little bit about true continuous delivery so last two",
    "start": "607269",
    "end": "613720"
  },
  {
    "text": "years of the first part of my career I started writing software in I guess professionally in 96 so it took almost",
    "start": "613720",
    "end": "621310"
  },
  {
    "text": "20 years to get to a point to experience continuous delivery and it's amazing it's better than anything anybody",
    "start": "621310",
    "end": "627200"
  },
  {
    "text": "or tells you if you haven't lived this way to actually know that when you merge something that's going to production all the time safely repeatedly is a",
    "start": "627200",
    "end": "634030"
  },
  {
    "text": "fantastic way to operate because when you're deploys are that real are really that simple and reliable it opens you up",
    "start": "634030",
    "end": "640370"
  },
  {
    "text": "to lots of different ways to produce in code one is what does it do so as if we",
    "start": "640370",
    "end": "648770"
  },
  {
    "text": "think about developers and we're all people when we think about the psychology of people right if we want all of ours include myself if we want",
    "start": "648770",
    "end": "655940"
  },
  {
    "text": "our engineering groups if we want ourselves to really invest the time to write good automated tests what do we",
    "start": "655940",
    "end": "661400"
  },
  {
    "text": "need to do well one technique is you remove the safeguards right and you depend on people wanting to do the right thing and that's really works if really",
    "start": "661400",
    "end": "670730"
  },
  {
    "text": "the only way that you know that your software is going to work in production is if you write the automated test guess what your incentive you're motivated to",
    "start": "670730",
    "end": "676220"
  },
  {
    "text": "write a good automated test because you want to know that your stuff works assuming continuous delivery in the",
    "start": "676220",
    "end": "681740"
  },
  {
    "text": "design process so this is also pretty interesting but if you know that it's very very simple to release software then at the end of the day you can",
    "start": "681740",
    "end": "687770"
  },
  {
    "text": "release software all the time and we talked about small releases been talking about that for a long time and lots of",
    "start": "687770",
    "end": "693170"
  },
  {
    "text": "organizations are doing it but now we can talk about things like configuration is if you can release software just by",
    "start": "693170",
    "end": "699350"
  },
  {
    "text": "pushing a button can a configuration change be the same as a software deploy as a code change why do they need to be",
    "start": "699350",
    "end": "705800"
  },
  {
    "text": "different and if you can actually manage your configuration changes in the same way as you man as your software changes",
    "start": "705800",
    "end": "711170"
  },
  {
    "text": "guess what it's the same visibility you make a configuration change all of your tests run you click the button to merge",
    "start": "711170",
    "end": "718070"
  },
  {
    "text": "the pr it goes into this delivery pipeline and a ghost of production all of the notifications you probably have",
    "start": "718070",
    "end": "724310"
  },
  {
    "text": "for changes in production continue to work all of those neat monitoring systems that tell you that a deploy happened continue to work if you want to",
    "start": "724310",
    "end": "730670"
  },
  {
    "text": "see what happened in a deploy you can see that a configuration stay changed and all of a sudden we're managing change in our environment exactly the",
    "start": "730670",
    "end": "736940"
  },
  {
    "text": "same way and that notion of seeing things exactly the same way is also critical to operating I think operating",
    "start": "736940",
    "end": "744440"
  },
  {
    "text": "this way or maybe just generally operating in an excellent way where we really really know what's happening the",
    "start": "744440",
    "end": "750800"
  },
  {
    "text": "screenshot at the bottom so head flow we wrote a small tool called Delta it's open source github.com flow Commerce",
    "start": "750800",
    "end": "757610"
  },
  {
    "text": "Delta and it is our continuous delivery engine what it does is it listens to web hooks",
    "start": "757610",
    "end": "762649"
  },
  {
    "text": "from github it knows how to build docker images on Travis and it knows how to scale clusters and inspect this the",
    "start": "762649",
    "end": "769369"
  },
  {
    "text": "health of clusters and we use AWS CCS and then it just gives you this dashboard that says okay",
    "start": "769369",
    "end": "775369"
  },
  {
    "text": "I saw something new on master I'm going to go ahead and create a new tag for you and get it safely into production very",
    "start": "775369",
    "end": "782929"
  },
  {
    "text": "very lightweight tool it took about I think it was a week and a half a development effort by one of",
    "start": "782929",
    "end": "788419"
  },
  {
    "text": "the developers at flow to get this up and running but the key thing was to really have the process in place that we",
    "start": "788419",
    "end": "793969"
  },
  {
    "text": "can have continuous delivery in place to support the other deploys up flow so",
    "start": "793969",
    "end": "801889"
  },
  {
    "text": "let's talk about staging I love my staging environment said nobody ever",
    "start": "801889",
    "end": "807739"
  },
  {
    "text": "ever but let's do a quick pull hands in",
    "start": "807739",
    "end": "812869"
  },
  {
    "text": "the room if you love your staging environment prove me wrong pretty good pretty good I'm going to call that at 1%",
    "start": "812869",
    "end": "818149"
  },
  {
    "text": "so that's probably eight people when we",
    "start": "818149",
    "end": "823369"
  },
  {
    "text": "think about staging environments what is this staging environments feel great right like we have a place we can deploy all of the changes or just our change",
    "start": "823369",
    "end": "829939"
  },
  {
    "text": "and then we can visually inspect it or we can have another team run through scenarios to test and verify what's",
    "start": "829939",
    "end": "835789"
  },
  {
    "text": "going on there as we move into a particularly as I think we move into these micro service architectures a few",
    "start": "835789",
    "end": "842839"
  },
  {
    "text": "things start to happen one is that the staging environment changes during the testing otherwise if it takes 12 hours",
    "start": "842839",
    "end": "850309"
  },
  {
    "text": "or 24 hours to verify something you're doing one thing at a time one thing a day and it feels slow and inefficient",
    "start": "850309",
    "end": "856659"
  },
  {
    "text": "second is that actually it's very difficult to treat a staging environment",
    "start": "856659",
    "end": "862699"
  },
  {
    "text": "as a production environment and what that means is that if some service that you depend on for your test that's run",
    "start": "862699",
    "end": "868819"
  },
  {
    "text": "by another team becomes unavailable or unresponsive or doesn't have the appropriate data or hasn't been updated",
    "start": "868819",
    "end": "874219"
  },
  {
    "text": "or is out of memory maybe an alert goes off it probably not and that person won't respond in the middle of the night",
    "start": "874219",
    "end": "880159"
  },
  {
    "text": "because it's staging it's not a production issue and it's not treated as such and without that what that means is",
    "start": "880159",
    "end": "885529"
  },
  {
    "text": "that staging becomes unreliable and more than that it becomes unreliable in a way that we don't know how to fix it because",
    "start": "885529",
    "end": "892819"
  },
  {
    "text": "it's someone else's stuff that's running there and broken as an analogy when I remember when we were",
    "start": "892819",
    "end": "898760"
  },
  {
    "text": "doing in the early days Facebook introduced this pretty cool feature where you could login with Facebook and",
    "start": "898760",
    "end": "904210"
  },
  {
    "text": "it was early days of the feature and we integrated against it so that you can",
    "start": "904210",
    "end": "909230"
  },
  {
    "text": "log into gilt through Facebook and at the time we didn't go to Facebook and say we need a copy of all your code to",
    "start": "909230",
    "end": "916490"
  },
  {
    "text": "run on our sandbox environment so that we can test the feature we didn't do that yet when we're testing log in",
    "start": "916490",
    "end": "924050"
  },
  {
    "text": "against our own internal services against our authentication service or user service as it was called at gilt we",
    "start": "924050",
    "end": "930290"
  },
  {
    "text": "go to that team and we say please give me all your code because I'm going to run it on my staging server to prove that I can log in and so there's a",
    "start": "930290",
    "end": "937310"
  },
  {
    "text": "difference right and that difference is interesting and worth worth exploring why we're treating our internally",
    "start": "937310",
    "end": "943610"
  },
  {
    "text": "developed software different from the software that we're using out in the ecosystem let's talk a little bit more",
    "start": "943610",
    "end": "952250"
  },
  {
    "text": "about staging environments so they're bottlenecks many organizations start off with one and then you get into a distributed architecture and you say ok",
    "start": "952250",
    "end": "958820"
  },
  {
    "text": "payments team you have your own staging environment check out team you have your other one login team you have another",
    "start": "958820",
    "end": "964460"
  },
  {
    "text": "one front-end team you have your another one and now you have lots of staging environments and then what ends up happening is they have disparate",
    "start": "964460",
    "end": "970400"
  },
  {
    "text": "failures and sometimes they work sometimes they don't but teams are under pressure to get their features released and so they start hacking them to get to",
    "start": "970400",
    "end": "976580"
  },
  {
    "text": "the point that the staging environment is consistent enough that they can test the one feature that they need to get out to prove to themselves with some",
    "start": "976580",
    "end": "982580"
  },
  {
    "text": "reasonable certainty that if that feature goes to production is going to work and even if they do that the",
    "start": "982580",
    "end": "988370"
  },
  {
    "text": "feature goes to production does it work sometimes most of the time but there's",
    "start": "988370",
    "end": "993590"
  },
  {
    "text": "still bugs it's not a hundred percent staging environments are fragile when",
    "start": "993590",
    "end": "998960"
  },
  {
    "text": "they failed they're difficult recently I was debugging a staging environment during an integration at the client and the staging environment",
    "start": "998960",
    "end": "1004930"
  },
  {
    "text": "wasn't working the way that ID bug the staging environment is I wrote a small Ruby script that went and found all the",
    "start": "1004930",
    "end": "1011440"
  },
  {
    "text": "log files on the system and every three seconds showed me the top five that changed the most because I knew nobody",
    "start": "1011440",
    "end": "1018730"
  },
  {
    "text": "was using the staging environment and I knew that those log files that were growing were probably errors and sure",
    "start": "1018730",
    "end": "1024400"
  },
  {
    "text": "enough I went one by one and killed the servers because they were not able to stop and they were hogging all of the CPU in",
    "start": "1024400",
    "end": "1030519"
  },
  {
    "text": "the staging environment that's insane can you imagine doing that in a production system the key point is that",
    "start": "1030519",
    "end": "1036788"
  },
  {
    "text": "those services weren't required and it required other teams who weren't involved on our work to participate to",
    "start": "1036789",
    "end": "1042428"
  },
  {
    "text": "make the system stable and that is a very very expensive proposition and I think this is at the heart of it the",
    "start": "1042429",
    "end": "1047788"
  },
  {
    "text": "organizations that I've personally seen there haven't been many we're staging works commonly invest over half their",
    "start": "1047789",
    "end": "1053679"
  },
  {
    "text": "budget in staging most organizations I see invests 20 to 40 percent of the",
    "start": "1053679",
    "end": "1059230"
  },
  {
    "text": "budget 30 to 40 percents pretty common but those are the organizations that have I'd say dysfunctional staging",
    "start": "1059230",
    "end": "1064330"
  },
  {
    "text": "environments it requires a huge huge investment across the organization to",
    "start": "1064330",
    "end": "1069760"
  },
  {
    "text": "make it work and then arguably I would say in today's day and age of a lot of automation perhaps station creates the wrong",
    "start": "1069760",
    "end": "1076210"
  },
  {
    "text": "incentives where staging is asking people to spend time to do things over",
    "start": "1076210",
    "end": "1081639"
  },
  {
    "text": "and over again without automation in most cases right because you don't need it if you have a staging environment you",
    "start": "1081639",
    "end": "1087580"
  },
  {
    "text": "can inspect and you can release and so our incentive to write the automation goes down it's hard to write good",
    "start": "1087580",
    "end": "1093190"
  },
  {
    "text": "automated tests it's hard to write automated tests they're repeatable and by the way if we have this failsafe to",
    "start": "1093190",
    "end": "1099010"
  },
  {
    "text": "just say deploy to staging I have a few people look at it we'll take advantage of it we touched on this a little bit",
    "start": "1099010",
    "end": "1107350"
  },
  {
    "text": "but if you remove staging and you still want to have good production quality code go out then the question really",
    "start": "1107350",
    "end": "1112630"
  },
  {
    "text": "goes down to your tests and at the end of the day this is super super powerful right if you're not comfortable that",
    "start": "1112630",
    "end": "1119350"
  },
  {
    "text": "your codes gonna work right some tests you're still not comfortable right some test you're still not comfortable right more tests still not comfortable right",
    "start": "1119350",
    "end": "1125649"
  },
  {
    "text": "some more tests and eventually if we do that what we find is that we start to",
    "start": "1125649",
    "end": "1130779"
  },
  {
    "text": "trust our tests that we can trust that if our tests tell us that our code is good that we can deploy to production",
    "start": "1130779",
    "end": "1137590"
  },
  {
    "text": "and by the way if we do this lots of other things start to come into play one of the practices that we have at flow we",
    "start": "1137590",
    "end": "1144100"
  },
  {
    "text": "call dependence they depend on today and dependence day is that we just decided",
    "start": "1144100",
    "end": "1149500"
  },
  {
    "text": "that all of our stuff is going to be on the latest versions of everything our own code our own libraries the open source libraries that we use we upgrade",
    "start": "1149500",
    "end": "1155799"
  },
  {
    "text": "AWS every week because they're constantly published like new versions twice a week we're always on latest versions and we do it",
    "start": "1155799",
    "end": "1161890"
  },
  {
    "text": "depending what dependents they does is it finds all the versions of everything that we use and it submits pull requests",
    "start": "1161890",
    "end": "1166960"
  },
  {
    "text": "automatically to all the services and the bill that says green you merge and you deploy that change to production and",
    "start": "1166960",
    "end": "1173350"
  },
  {
    "text": "we can do that and now all of our services are current all of them across the board without exception are on the",
    "start": "1173350",
    "end": "1179830"
  },
  {
    "text": "latest versions and the same versions observed of all of those libraries that we use and if you think about it's amazing because now if you need to do",
    "start": "1179830",
    "end": "1186100"
  },
  {
    "text": "something else you can because you don't have to worry about version mismatch or upgrades for services that have been six",
    "start": "1186100",
    "end": "1192160"
  },
  {
    "text": "months old I wouldn't touch briefly on architecture so quality through architecture I think it's super super",
    "start": "1192160",
    "end": "1198370"
  },
  {
    "text": "important and there's a few elements here but one is just this idea of extreme isolation so as a developer if",
    "start": "1198370",
    "end": "1205930"
  },
  {
    "text": "you deploy something and you break something you probably know what it is and you could write pretty quickly and you fix it and probably the impact on",
    "start": "1205930",
    "end": "1211090"
  },
  {
    "text": "the business in most cases is small because you've moved so quickly if you receive a page and your service is not",
    "start": "1211090",
    "end": "1217690"
  },
  {
    "text": "functioning because something else broke your service that's hard right and it's",
    "start": "1217690",
    "end": "1222790"
  },
  {
    "text": "powerless you're powerless like how can I run a reliable service if anything out there can break my service and one of",
    "start": "1222790",
    "end": "1229600"
  },
  {
    "text": "the approaches to fix this is what we call extreme isolation extremely isolate your service from everything else services that flow have their own DNS",
    "start": "1229600",
    "end": "1236290"
  },
  {
    "text": "they have their own load balancers if they have a database that database is private nobody else is allowed to talk to it there is no shared state there's",
    "start": "1236290",
    "end": "1242830"
  },
  {
    "text": "no consul there's no zookeeper there's nothing there's no shared state and we really focus on this stopping cascading",
    "start": "1242830",
    "end": "1249640"
  },
  {
    "text": "failures and preventing the chance of somebody else to cause an issue in your service the services are extremely",
    "start": "1249640",
    "end": "1256270"
  },
  {
    "text": "isolated and initially as an engineer you come into this it's not or will be efficient we can just have one load balancer do this for everybody the cost",
    "start": "1256270",
    "end": "1263440"
  },
  {
    "text": "is not in how the extra incremental dollar is running the load balancers it's really an understanding failure and",
    "start": "1263440",
    "end": "1269640"
  },
  {
    "text": "understanding that failure is not caused by other people so that we can again trust our services and drive quality one",
    "start": "1269640",
    "end": "1276490"
  },
  {
    "text": "other small detail in the there's a lot of talk about event streaming and what",
    "start": "1276490",
    "end": "1282760"
  },
  {
    "text": "we found interestingly ad flow is we have built in a pretty sophisticated data architecture that's really based on",
    "start": "1282760",
    "end": "1289450"
  },
  {
    "text": "event streaming so every micro service publishes events and other micro",
    "start": "1289450",
    "end": "1294610"
  },
  {
    "text": "services consume and what ends up happening on the network is our micro services don't talk to each other the network is very very",
    "start": "1294610",
    "end": "1302080"
  },
  {
    "text": "quiet instead they consume data through the event stream and there's only a handful and it turns out it's quite rare of use",
    "start": "1302080",
    "end": "1308919"
  },
  {
    "text": "cases that really require the services to be synchronous and yeah those guys will go talk to each other and it's in e-commerce if you submit an order you",
    "start": "1308919",
    "end": "1315460"
  },
  {
    "text": "want to make sure that you have payment for the order is an example of a synchronous transaction but it turns out those are the minority everything else",
    "start": "1315460",
    "end": "1322690"
  },
  {
    "text": "is asynchronous right so there's micro service architecture but there's no traffic between the services and the",
    "start": "1322690",
    "end": "1329679"
  },
  {
    "text": "reason we did that is again a cascading failure if I'm a service and I depend on you and you have a hiccup I don't want",
    "start": "1329679",
    "end": "1335049"
  },
  {
    "text": "it to affect me and event streams really give us that I can listen to the event stream and if you have an issue the the",
    "start": "1335049",
    "end": "1342450"
  },
  {
    "text": "problem in our business is a slight delay in receiving the data through the event streams and that ends up being a",
    "start": "1342450",
    "end": "1348490"
  },
  {
    "text": "much easier thing to manage but I think the main thing to really focus in on here is this notion of extreme isolation",
    "start": "1348490",
    "end": "1354159"
  },
  {
    "text": "as we architect and build our systems to reduce the dependencies that can cause issues on us in terms of quality or",
    "start": "1354159",
    "end": "1361419"
  },
  {
    "text": "uptime is an incredibly powerful tool so let's look at a few real examples of",
    "start": "1361419",
    "end": "1367330"
  },
  {
    "text": "successfully testing at production one that we did a gilt ecommerce system you",
    "start": "1367330",
    "end": "1374169"
  },
  {
    "text": "want to know that the submit button works right can customers buy stuff and said being a pretty important KPI and",
    "start": "1374169",
    "end": "1381789"
  },
  {
    "text": "but how do you do that you place an order you're probably decrementing inventory you may be charging a credit card there",
    "start": "1381789",
    "end": "1388720"
  },
  {
    "text": "are a lot of bad things that happen and so it turns out that in I think the common use case would be you testing",
    "start": "1388720",
    "end": "1394929"
  },
  {
    "text": "sandbox and then you deploy to production and maybe you set up an alert that says if I haven't seen an order in",
    "start": "1394929",
    "end": "1400480"
  },
  {
    "text": "five minutes or ten minutes maybe something's wrong it's kind of status quo but what if we thought this and said",
    "start": "1400480",
    "end": "1407350"
  },
  {
    "text": "you know what let's just go submit an order every minute every five minutes ourselves actively let's actively submit an order so that we know it's there what",
    "start": "1407350",
    "end": "1414190"
  },
  {
    "text": "would have to happen for that to take place so what we did a gilt and actually this was driven by our mobile apps",
    "start": "1414190",
    "end": "1419620"
  },
  {
    "text": "because initially our mobile apps as we built the iPhone app it couldn't communicate to our VPN environment which",
    "start": "1419620",
    "end": "1425649"
  },
  {
    "text": "is where staging was talk about friction for developers you want to test the change you got to make your staging environment",
    "start": "1425649",
    "end": "1430929"
  },
  {
    "text": "work you got a debug it you have to use this VPN crazy thing and then now you have an iPhone app and now you have to",
    "start": "1430929",
    "end": "1436330"
  },
  {
    "text": "configure iPhone app onto a VPN and that's what our developers are spending time on instead of building automation",
    "start": "1436330",
    "end": "1441669"
  },
  {
    "text": "and building features so what do we do we said okay let's think about this why don't we identify find a way to",
    "start": "1441669",
    "end": "1448029"
  },
  {
    "text": "identify a test user this is great we can even know that registration is working right register a test user you",
    "start": "1448029",
    "end": "1454750"
  },
  {
    "text": "can even log in now we have a test user oh great now registration is working log in is working we can browse the site we can put something in our cart we get to",
    "start": "1454750",
    "end": "1460419"
  },
  {
    "text": "check out we can submit an order and interestingly all we have to do is agree",
    "start": "1460419",
    "end": "1466029"
  },
  {
    "text": "we identify test users buy a domain name I think was guilt test com any user of",
    "start": "1466029",
    "end": "1471279"
  },
  {
    "text": "guilt test com if you place an order and guilt com your order will get cancelled three line change in order processing",
    "start": "1471279",
    "end": "1477340"
  },
  {
    "text": "three lines if user dot email domain equals guilt test com order cancel bang",
    "start": "1477340",
    "end": "1483669"
  },
  {
    "text": "it's a ruby app that's it and now we can run automation every few minutes go",
    "start": "1483669",
    "end": "1488890"
  },
  {
    "text": "through the final place an order safely yes we've claimed inventory but we've claimed inventory for five minutes right",
    "start": "1488890",
    "end": "1495220"
  },
  {
    "text": "and we can now start dissecting those problems Oh claiming inventory that seems like such a bad thing well great well why don't we shop for an item that",
    "start": "1495220",
    "end": "1501610"
  },
  {
    "text": "has a lot of inventory cool so we'll add a little web service that says tell me the item currently in the catalogue that",
    "start": "1501610",
    "end": "1507429"
  },
  {
    "text": "has over a thousand units of inventory available and let's go buy one of those so that there's plenty left for customers this is a really simple thing",
    "start": "1507429",
    "end": "1514090"
  },
  {
    "text": "and now we can write an alert that says if we don't see an order every three minutes from our test user or if that",
    "start": "1514090",
    "end": "1520299"
  },
  {
    "text": "test user gets an error of any kind submitting the order that's a very high fidelity alert that we have a problem in",
    "start": "1520299",
    "end": "1525370"
  },
  {
    "text": "production right and now we can take the learnings from that we can investigate faster we'll start faster and nothing",
    "start": "1525370",
    "end": "1532539"
  },
  {
    "text": "else changes about our process that's understand what happened let's understand how to learn from it and now let's get better at what we're doing",
    "start": "1532539",
    "end": "1538950"
  },
  {
    "text": "interestingly when we look in in e-commerce there's a lot of subtlety about inventory and locations and things like that",
    "start": "1538950",
    "end": "1544390"
  },
  {
    "text": "what's super interesting about this technique is let's say that we found that it worked for all orders shipping",
    "start": "1544390",
    "end": "1549640"
  },
  {
    "text": "to the US but there's a problem of shipping orders to France great now we write two tests let the user go through",
    "start": "1549640",
    "end": "1556480"
  },
  {
    "text": "production ship something to the US great now have the user go through and ship something to France now we're running both tests and we can verify",
    "start": "1556480",
    "end": "1562059"
  },
  {
    "text": "forever that this is working and know that the instant there's a problem we're going to be notified so this is a hugely hugely",
    "start": "1562059",
    "end": "1569050"
  },
  {
    "text": "powerful thing one other small thing that we did a guilt so and it was load testing we was talking to somebody",
    "start": "1569050",
    "end": "1575020"
  },
  {
    "text": "before this talk about load testing and actually the good folks as a Lando load",
    "start": "1575020",
    "end": "1580510"
  },
  {
    "text": "testing and production is amazing it's amazing not saying that you shouldn't do load testing in other places but load",
    "start": "1580510",
    "end": "1587980"
  },
  {
    "text": "testing and production is amazing add guilt if you think about guilt use case so really Gil Gil told business",
    "start": "1587980",
    "end": "1594100"
  },
  {
    "text": "model was every day at noon Eastern a new selection of inventory went on sale at great prices and everything sold out",
    "start": "1594100",
    "end": "1599770"
  },
  {
    "text": "and we saw a 50x traffic increase between 859 a.m. PST and 9:00 a.m. PST",
    "start": "1599770",
    "end": "1605710"
  },
  {
    "text": "50/50 times traffic and in the early days of guilt eighty percent of our revenue happened between 9:00 a.m. and",
    "start": "1605710",
    "end": "1611260"
  },
  {
    "text": "10:00 a.m. Pacific time what do you think the cost of an error is between 9:00 a.m. and 10:00 a.m. Pacific times",
    "start": "1611260",
    "end": "1617200"
  },
  {
    "text": "high what if we do a load test at 1:00 a.m. Pacific time when traffic is super",
    "start": "1617200",
    "end": "1622840"
  },
  {
    "text": "quiet and if we identify a problem at 1:00 a.m. we've got a what is that eight hours to fix it before it really matters",
    "start": "1622840",
    "end": "1629710"
  },
  {
    "text": "and it was super super revealing and it feels scary but the first time you do it you do a load test and probably things",
    "start": "1629710",
    "end": "1635140"
  },
  {
    "text": "fail in production and they probably passed in staging by the way or in your pre-production environment that's what we learned and then we fix them and then",
    "start": "1635140",
    "end": "1642820"
  },
  {
    "text": "we run the load test again and then we fix it and then we run the load test again and then we fix it and then every single day that load test runs and the",
    "start": "1642820",
    "end": "1648880"
  },
  {
    "text": "day it breaks we find out 12 hours before it matters and we have a chance at protecting the revenue for the",
    "start": "1648880",
    "end": "1654700"
  },
  {
    "text": "business overall from a system perspective the overall system is much much higher quality when we're doing",
    "start": "1654700",
    "end": "1660910"
  },
  {
    "text": "this with respect to flow so flow is a software-as-a-service business what this",
    "start": "1660910",
    "end": "1668230"
  },
  {
    "text": "really means is it's a multi-tenant data architecture if you sign up with flow we'll give you a unique organization ID",
    "start": "1668230",
    "end": "1674830"
  },
  {
    "text": "and that organization idea is for your production data and then if you want to write tests you can create as many",
    "start": "1674830",
    "end": "1681430"
  },
  {
    "text": "sandbox organizations as you want the only difference in the sandbox organization is that they have an",
    "start": "1681430",
    "end": "1687400"
  },
  {
    "text": "attribute named environment and environment is sandbox instead of production that's it and now you can do",
    "start": "1687400",
    "end": "1693550"
  },
  {
    "text": "whatever you want to do with your sandbox organization in fact we appliance that when they wrote their integration test with with flow step one of their",
    "start": "1693550",
    "end": "1701289"
  },
  {
    "text": "integration tests create a new sandbox organization add flow now run their series of tests through the API and",
    "start": "1701289",
    "end": "1707559"
  },
  {
    "text": "their integration and when they're done delete the sandbox organization from flow and there's an incredibly powerful",
    "start": "1707559",
    "end": "1714070"
  },
  {
    "text": "technique because by doing that when they create the initial sandbox organization at flow it's an empty shell",
    "start": "1714070",
    "end": "1720270"
  },
  {
    "text": "no human or bot or API came in and created data or change data it's empty",
    "start": "1720270",
    "end": "1726520"
  },
  {
    "text": "and because it's empty its reliable right so they can create this organization they can create their",
    "start": "1726520",
    "end": "1732010"
  },
  {
    "text": "product catalog they can do all the things that they need to do they can place some test orders and they can delete it now what makes it safe so at",
    "start": "1732010",
    "end": "1739360"
  },
  {
    "text": "flow we said we wanted to offer sandbox accounts so now add flow we have to think about what are the things that are",
    "start": "1739360",
    "end": "1744580"
  },
  {
    "text": "dangerous and they in dangerous in our world really is has an effect in the real world we do payment processing so",
    "start": "1744580",
    "end": "1751330"
  },
  {
    "text": "charging a credit card on a sandbox and just an Box account probably not the greatest thing and so we have a in our",
    "start": "1751330",
    "end": "1758140"
  },
  {
    "text": "payment system there is a branch of code that says if this organization is sandbox then use the sandbox processor",
    "start": "1758140",
    "end": "1764470"
  },
  {
    "text": "and the sandbox processors are no op it does nothing it happens in fulfillment and we do things and logistics printing shipping",
    "start": "1764470",
    "end": "1770530"
  },
  {
    "text": "labels we want to make sure that you don't get charged for those if you print a shipping label for an Oregon for a sandbox organization but that's it there",
    "start": "1770530",
    "end": "1777880"
  },
  {
    "text": "were maybe two or three maybe four examples in an Entente commerce system where things actually had a negative",
    "start": "1777880",
    "end": "1785200"
  },
  {
    "text": "real-world effect so what did we do we made sure that those systems understood",
    "start": "1785200",
    "end": "1791470"
  },
  {
    "text": "what the sandbox account meant turns out that's really really easy to unit test create an organization make sure that",
    "start": "1791470",
    "end": "1797650"
  },
  {
    "text": "payment works create a sandbox organization make sure that payment doesn't go to a third party bulletproof unit tests we can deploy to",
    "start": "1797650",
    "end": "1803770"
  },
  {
    "text": "production and now every single client of ours can use sandbox accounts there's a detail here about one API key for all",
    "start": "1803770",
    "end": "1810070"
  },
  {
    "text": "sandbox accounts and this is something that we just learned at flow where when our clients were integrating and they",
    "start": "1810070",
    "end": "1815350"
  },
  {
    "text": "want to create a new organization one way to do that is you create a new organization and then you have to get a new API key we just made sure that their",
    "start": "1815350",
    "end": "1822309"
  },
  {
    "text": "same API key would work for all of the sandbox organizations that they're running so every hour when they run their integration tests themselves they",
    "start": "1822309",
    "end": "1829419"
  },
  {
    "text": "don't have to change their environment variables for talking to flow there's a small detail but one API key to run these integration tests",
    "start": "1829419",
    "end": "1835950"
  },
  {
    "text": "the learning here is to treat every service as a third party whether its",
    "start": "1835950",
    "end": "1841060"
  },
  {
    "text": "internal or external and it's a really really powerful cost of so back to Facebook and Facebook login we don't",
    "start": "1841060",
    "end": "1846520"
  },
  {
    "text": "have facebook to host their code to run it we just test using Facebook's api's and they have test the api's or sandbox",
    "start": "1846520",
    "end": "1852430"
  },
  {
    "text": "accounts payment processors like stripe give you a test account in a production account and we use that we don't ask stripe that we're going to run all your",
    "start": "1852430",
    "end": "1858460"
  },
  {
    "text": "code or our infrastructure to test and this same concept turns out to be relatively straightforward to apply to",
    "start": "1858460",
    "end": "1863620"
  },
  {
    "text": "the own software that we're writing internally if our teams develop a contract and provide for it",
    "start": "1863620",
    "end": "1870539"
  },
  {
    "text": "here's a live example of an integration test that we run regularly this now runs",
    "start": "1874800",
    "end": "1880630"
  },
  {
    "text": "once a day travis has a cron feature I think the most frequent in Travis is once a day so this runs once a day this",
    "start": "1880630",
    "end": "1886690"
  },
  {
    "text": "is a little Ruby script using the flow api to go and create orders and this basically says order equals create order",
    "start": "1886690",
    "end": "1892570"
  },
  {
    "text": "or some parameters different countries then go create a payment authorization using a credit card token and then go",
    "start": "1892570",
    "end": "1898960"
  },
  {
    "text": "ahead and capture funds against that credit card authorization and you can see the history it runs about once a day",
    "start": "1898960",
    "end": "1904590"
  },
  {
    "text": "so this is a really nice test it runs once a day if this fails we know immediately that there's a problem and",
    "start": "1904590",
    "end": "1910750"
  },
  {
    "text": "we've invested the time to make this test reliable which is worth saying first time this went to production I'd",
    "start": "1910750",
    "end": "1915880"
  },
  {
    "text": "say it took us about three weeks until it was green every day because we uncovered issues along the way right we",
    "start": "1915880",
    "end": "1921820"
  },
  {
    "text": "ran out of inventory or whatever normal validation is just took us about three weeks not three weeks full time but",
    "start": "1921820",
    "end": "1927100"
  },
  {
    "text": "every few days there's a new issue uncovered and then we fixed it until the point that this thing runs every single day and I think now we have about a year",
    "start": "1927100",
    "end": "1933100"
  },
  {
    "text": "that it's just stayed green we know every single day we can accept orders and process payment super super powerful",
    "start": "1933100",
    "end": "1939910"
  },
  {
    "text": "we know that when we deploy changes to our payment system we can trigger this build and make sure that these tests",
    "start": "1939910",
    "end": "1945580"
  },
  {
    "text": "continue to work against the payment system we know when we deploy our API proxies and change API routes we can run",
    "start": "1945580",
    "end": "1951310"
  },
  {
    "text": "this integration test and know that the heart of the system continues to work is incredibly calming I think is the word",
    "start": "1951310",
    "end": "1958900"
  },
  {
    "text": "to know that things are working as expected",
    "start": "1958900",
    "end": "1962610"
  },
  {
    "text": "here's another example so at flow we wrote our own reverse proxy which is API",
    "start": "1965260",
    "end": "1971690"
  },
  {
    "text": "dot flow at i/o and it makes all of our micro-service api's feel like one handles authentication handles weird",
    "start": "1971690",
    "end": "1978200"
  },
  {
    "text": "things like JSON PE and requesting envelopes a whole bunch of other stuff this is a critical piece of infrastructure for us if there is an",
    "start": "1978200",
    "end": "1984830"
  },
  {
    "text": "error in our API proxy all of the API is become unavailable right so this is a central point of service earlier we",
    "start": "1984830",
    "end": "1990530"
  },
  {
    "text": "talked about extreme isolation in our services the API proxy in our case ends",
    "start": "1990530",
    "end": "1996470"
  },
  {
    "text": "up being the thing that has no isolation like this thing goes wrong it is a cascading failure across flow it's an",
    "start": "1996470",
    "end": "2003610"
  },
  {
    "text": "emergency but by virtue of knowing that this works in two relatively small piece of code then we can really drive extreme",
    "start": "2003610",
    "end": "2010270"
  },
  {
    "text": "isolation for all the other services so now when we make changes to the proxies dangerous how do we test those services",
    "start": "2010270",
    "end": "2015909"
  },
  {
    "text": "proxy has its own tests mind you but how do we really know that a configuration change or new feature continues to work",
    "start": "2015909",
    "end": "2021940"
  },
  {
    "text": "so here's an example of what we do this is running its AWS profile go grab our",
    "start": "2021940",
    "end": "2028260"
  },
  {
    "text": "configuration for the AWS account flow vault which is where our PCI environment dev is a go script that our developers",
    "start": "2028260",
    "end": "2035289"
  },
  {
    "text": "use that handles everything for developers at Flo Scala app so SBT and production so go get the production",
    "start": "2035289",
    "end": "2043059"
  },
  {
    "text": "environment for the reverse proxy but run it locally so now I have on my",
    "start": "2043059",
    "end": "2049148"
  },
  {
    "text": "laptop running our reverse API proxy talking to all our production services and then I can run tests locally and",
    "start": "2049149",
    "end": "2057060"
  },
  {
    "text": "instead of hitting API fluid out i/o I'm hitting localhost 7000 and then capture the output that the tests pass and these",
    "start": "2057060",
    "end": "2064210"
  },
  {
    "text": "tests do all sorts of things they're basically for all the features that we add into the reverse proxy we had a little test to verify that it works if",
    "start": "2064210",
    "end": "2070210"
  },
  {
    "text": "you mistype something is the error message good if you I don't know if",
    "start": "2070210",
    "end": "2076450"
  },
  {
    "text": "you're doing JSON PE with a complicated URL string does it get parsed correctly into JSON body and forwarded to the",
    "start": "2076450",
    "end": "2082210"
  },
  {
    "text": "right service or the right response codes all those things and then we can run it and verify it here we do this all",
    "start": "2082210",
    "end": "2087608"
  },
  {
    "text": "the time right because now even before we touch production we can have the latest version the software running we",
    "start": "2087609",
    "end": "2093580"
  },
  {
    "text": "can run all the tests and now we can do everything else that we do great all the tests pass let's deploy to",
    "start": "2093580",
    "end": "2099040"
  },
  {
    "text": "production in fact let's deploy to one node in production of canary great now that the canary is running let's run the",
    "start": "2099040",
    "end": "2104440"
  },
  {
    "text": "test against the canary great let's monitor the canary is everything working on the canary yes let's roll out to the",
    "start": "2104440",
    "end": "2109600"
  },
  {
    "text": "rest of the cluster let's run these tests again and by the way we can schedule these tests and run them every single day as well and know that the",
    "start": "2109600",
    "end": "2115300"
  },
  {
    "text": "proxy server is working one of their side benefit reverse proxies have a lot",
    "start": "2115300",
    "end": "2120610"
  },
  {
    "text": "of features in them and it's interesting to think about the complexity of our test code some tests are hard to write",
    "start": "2120610",
    "end": "2125980"
  },
  {
    "text": "when you're inside the code base and much much easier to write when you're inspecting externally an API proxies end",
    "start": "2125980",
    "end": "2131950"
  },
  {
    "text": "up being one of these things it's very easy to just talk HTTP to a server and check what the HTTP response is so",
    "start": "2131950",
    "end": "2138280"
  },
  {
    "text": "actually by introducing this way of testing we were able to simplify the tests that run against the proxy and",
    "start": "2138280",
    "end": "2144270"
  },
  {
    "text": "ultimately this is what we're after that everything is operating as expected and if it's not that we would know right",
    "start": "2144270",
    "end": "2153119"
  },
  {
    "text": "alas sometimes things go wrong even to the best of teams he hasn't quite yet mastered the art of the diving",
    "start": "2153300",
    "end": "2159880"
  },
  {
    "text": "header this one says and so let's talk a little bit about how we handle that and",
    "start": "2159880",
    "end": "2166060"
  },
  {
    "text": "what some of the considerations should be so what is that we make production access to explicit not the default right",
    "start": "2166060",
    "end": "2173020"
  },
  {
    "text": "so we really think about this and we think about this from the beginning from the design phases we're building the next feature like let's think about from",
    "start": "2173020",
    "end": "2179470"
  },
  {
    "text": "the start how are we going to write tests that run in production which this feature is live or said another way if",
    "start": "2179470",
    "end": "2185350"
  },
  {
    "text": "you imagine you're about to deploy a change once that change is deployed great engineers will go verify in",
    "start": "2185350",
    "end": "2192970"
  },
  {
    "text": "production that it does the right thing right they'll go look at it well now",
    "start": "2192970",
    "end": "2198760"
  },
  {
    "text": "think about how can i aughtta mate what I would verify can I do that can I write a script that's gonna automate and if I",
    "start": "2198760",
    "end": "2204730"
  },
  {
    "text": "can great because now I can deploy my software I can run my verification script and if it succeeds great I can",
    "start": "2204730",
    "end": "2210460"
  },
  {
    "text": "think about scheduling it and if it doesn't I can quickly roll back probably faster than I could before because I've already thought about from the beginning",
    "start": "2210460",
    "end": "2216340"
  },
  {
    "text": "how I'm going to verify that my software is working second is to use defined paths if you have an API use API calls",
    "start": "2216340",
    "end": "2223300"
  },
  {
    "text": "and this is opposed to just reaching into a database in production and changing some data to enable some use",
    "start": "2223300",
    "end": "2229030"
  },
  {
    "text": "case the idea here is to use the defined paths however your software works in production use that don't invent a new way use that there's",
    "start": "2229030",
    "end": "2237970"
  },
  {
    "text": "a classic in classic case I'll call it a case is a would call production event a friend of",
    "start": "2237970",
    "end": "2244839"
  },
  {
    "text": "mine was describing and they were approaching their peak season and said we got to have more servers and we should deploy less frequently and maybe",
    "start": "2244839",
    "end": "2251109"
  },
  {
    "text": "do a code freeze or something like that and so a week goes by everything is fine and week two things start crashing and",
    "start": "2251109",
    "end": "2257309"
  },
  {
    "text": "it turned out they had a memory leak for years but because they're continuously",
    "start": "2257309",
    "end": "2263829"
  },
  {
    "text": "delivering their software it didn't matter and they changed their mind they changed how they were managing",
    "start": "2263829",
    "end": "2269589"
  },
  {
    "text": "production and new issues surfaced and that can happen here and so I think the solution to that has to really not",
    "start": "2269589",
    "end": "2275410"
  },
  {
    "text": "change the way we work with production we work with production a very certain way as we conscious of that not change it working that way and then iterate",
    "start": "2275410",
    "end": "2283089"
  },
  {
    "text": "slowly and deliberately sensitive data comes up quite a bit HIPAA PCI PII there's new regulations in",
    "start": "2283089",
    "end": "2290650"
  },
  {
    "text": "Europe and I think just thinking about these things up front is just important here we show you an example of a",
    "start": "2290650",
    "end": "2296710"
  },
  {
    "text": "production test that was actually very creating credit cards verifying credit cards authorizing capturing funds you",
    "start": "2296710",
    "end": "2302680"
  },
  {
    "text": "could do it it absolutely works in our case the solution here is just to use a test credit card and make sure that that",
    "start": "2302680",
    "end": "2308739"
  },
  {
    "text": "test credit card was threaded through but it's just worth some flagging and thinking about from the beginning and",
    "start": "2308739",
    "end": "2315400"
  },
  {
    "text": "designing for side effects there are lots of side effects there side effects all the time the common ones that people",
    "start": "2315400",
    "end": "2320950"
  },
  {
    "text": "run into are things like I'm running an a/b test and now all of a sudden I have all these test orders which has happened",
    "start": "2320950",
    "end": "2326589"
  },
  {
    "text": "or my a/b test results valid things like that will happen and just good to think about those upfront the two broad",
    "start": "2326589",
    "end": "2332440"
  },
  {
    "text": "solutions are either cleansing data right you've created the data you know what it is you can cleanse it or to",
    "start": "2332440",
    "end": "2338079"
  },
  {
    "text": "making sure that your own data that you're injecting is random and normal and if it's random and normal then in",
    "start": "2338079",
    "end": "2343569"
  },
  {
    "text": "general the impact for those sorts of things is factored in it's negligible in terms of an impact on the business I",
    "start": "2343569",
    "end": "2351390"
  },
  {
    "text": "want to touch on a few unexpected benefits of testing in production one is what we call perfect perfect",
    "start": "2351390",
    "end": "2357279"
  },
  {
    "text": "documentation really perfect so I hate as a developer going to a doc side cutting and pasting the example then",
    "start": "2357279",
    "end": "2363369"
  },
  {
    "text": "having it not work is infuriating so the way that we solve that problem at flow is we actually just",
    "start": "2363369",
    "end": "2368590"
  },
  {
    "text": "capture the request in the response as part of our production testing right we're testing this stuff all the time so why don't we just add a log to our",
    "start": "2368590",
    "end": "2376870"
  },
  {
    "text": "tests that captures the request that's being sent captures the response at the end of the regression test if it's",
    "start": "2376870",
    "end": "2382420"
  },
  {
    "text": "successful it uploads that to s3 and we have a tarball with all of our examples when when you release our documentation",
    "start": "2382420",
    "end": "2389410"
  },
  {
    "text": "site it downloads the latest tar ball and pulls the examples from that right so we know that the examples are real",
    "start": "2389410",
    "end": "2394720"
  },
  {
    "text": "cures are real and this is just an example of that so quick curl command on",
    "start": "2394720",
    "end": "2402010"
  },
  {
    "text": "the Left we captured the request that was coming in on the right you can see the output we have a very organized file",
    "start": "2402010",
    "end": "2407710"
  },
  {
    "text": "system it's a RESTful API and so resource / method / path and then",
    "start": "2407710",
    "end": "2414010"
  },
  {
    "text": "response that JSON requests out JSON this is actually the contract for a documentation site we produce a",
    "start": "2414010",
    "end": "2420130"
  },
  {
    "text": "directory we tar it we throw it in s3 and it has a standard format so that it can get merged into our documentation",
    "start": "2420130",
    "end": "2425790"
  },
  {
    "text": "it's amazing second I think great demos",
    "start": "2425790",
    "end": "2430930"
  },
  {
    "text": "so we are an enterprise software company we do demos one of the things we'd like to demo is our analytics page a long",
    "start": "2430930",
    "end": "2438160"
  },
  {
    "text": "time ago our analytics page had no data because nobody was using our demo store to buy stuff so what do we do the",
    "start": "2438160",
    "end": "2445540"
  },
  {
    "text": "earlier automated test that you saw that runs and creates a few orders it's",
    "start": "2445540",
    "end": "2450670"
  },
  {
    "text": "actually using our demo account and that straight line that you see everyday places 10 orders and so it's been 10",
    "start": "2450670",
    "end": "2457480"
  },
  {
    "text": "orders the spike that you see that's me just getting some more data for this talk over the last few days right it",
    "start": "2457480",
    "end": "2464080"
  },
  {
    "text": "went up to 30 because I must have run it a couple extra times in November 11th and a November 12th I read an extra-time",
    "start": "2464080",
    "end": "2469170"
  },
  {
    "text": "real data and now we're done every single day we're producing data and that we get to use it for a demo",
    "start": "2469170",
    "end": "2475780"
  },
  {
    "text": "it's great it's real I want to touch a little bit on tooling we depend a lot on",
    "start": "2475780",
    "end": "2483430"
  },
  {
    "text": "something called API builder IO if you're familiar with G RPC and swagger",
    "start": "2483430",
    "end": "2488650"
  },
  {
    "text": "and things like that think of and github best to describe it think about API builder as like G RPC",
    "start": "2488650",
    "end": "2495280"
  },
  {
    "text": "for JSON or JSON is truly truly first-class some people have said API builders like github for your api's where it gives you",
    "start": "2495280",
    "end": "2502810"
  },
  {
    "text": "incredible visibility into your changes what's breaking what's not incredibly",
    "start": "2502810",
    "end": "2507880"
  },
  {
    "text": "high-quality mocks and clients and so what's actually happening and this is",
    "start": "2507880",
    "end": "2513250"
  },
  {
    "text": "really really important because ultimately to make some of this stuff work you have to really trust the contract if you're if you have a micro",
    "start": "2513250",
    "end": "2519099"
  },
  {
    "text": "service architecture with a lot of api's you really need to make sure that",
    "start": "2519099",
    "end": "2524380"
  },
  {
    "text": "develop different teams trust the contracts that the other teams are publishing if using GRP see in your binary lend you",
    "start": "2524380",
    "end": "2531040"
  },
  {
    "text": "probably this probably already the case if you're in JSON and using some of the other tools that probably is not the case that the publish documentation or",
    "start": "2531040",
    "end": "2538000"
  },
  {
    "text": "specification of an API matches what's actually in production but it's really",
    "start": "2538000",
    "end": "2543040"
  },
  {
    "text": "really important to have that and so maybe API builder is something we started a guild for five years ago it",
    "start": "2543040",
    "end": "2549130"
  },
  {
    "text": "interrupts with swagger and Avro and some of the other things but provide some really really nice tooling we do a",
    "start": "2549130",
    "end": "2555910"
  },
  {
    "text": "lot of mocking at flow in our integration tests and also actually have so a gilt and here's an example of what",
    "start": "2555910",
    "end": "2561940"
  },
  {
    "text": "API builder provides so what you can download from API builder is a mock of an interface of any one of the services",
    "start": "2561940",
    "end": "2568270"
  },
  {
    "text": "or the event streams that are flowing and that mock we scholar that mock compiles and it knows how to generate",
    "start": "2568270",
    "end": "2575170"
  },
  {
    "text": "valid data and then what you can do is very easily just override the parts that you want and so an integration test as",
    "start": "2575170",
    "end": "2580480"
  },
  {
    "text": "an example that this is a geolocation test that basically says for this IP address return and/or the address that I",
    "start": "2580480",
    "end": "2585940"
  },
  {
    "text": "want the code on the right is all we had to do in terms of the mock to know that it works and because the contracts are",
    "start": "2585940",
    "end": "2592300"
  },
  {
    "text": "guaranteed to be correct we know that if the mock passes it's going to work in production and actually our experience",
    "start": "2592300",
    "end": "2599140"
  },
  {
    "text": "over the last few years is that this has been the case we don't have situations where things work with the mocks and",
    "start": "2599140",
    "end": "2604750"
  },
  {
    "text": "then fail in production and the only caveat to that is authentication but it",
    "start": "2604750",
    "end": "2609820"
  },
  {
    "text": "has never been the case so we can trust our mocks to that point because they're generated in the same way that our clients are generated that if our tests",
    "start": "2609820",
    "end": "2616720"
  },
  {
    "text": "are automated tests working into the mock they will work in production so",
    "start": "2616720",
    "end": "2622300"
  },
  {
    "text": "that's API builder we use this tool called vivid cortex on the database side incredible real-time feedback on what's",
    "start": "2622300",
    "end": "2629290"
  },
  {
    "text": "happening in your databases and in this particular case it's just highlighting an index was created very quickly you can see that a",
    "start": "2629290",
    "end": "2636170"
  },
  {
    "text": "query did not improve and then queries four six seven you see the variability in response time those queries got",
    "start": "2636170",
    "end": "2643220"
  },
  {
    "text": "slower but the important thing here is on the data side to also have responsive real-time feedback in terms of what's",
    "start": "2643220",
    "end": "2649670"
  },
  {
    "text": "actually happening so that if something does happen that's unexpected we know",
    "start": "2649670",
    "end": "2654920"
  },
  {
    "text": "right away Vivid was a tool was introduced to about a year ago and has it's proven to be fantastic as made it",
    "start": "2654920",
    "end": "2661400"
  },
  {
    "text": "into the I'd say daily developer tool chest at flow earlier today the talked",
    "start": "2661400",
    "end": "2669410"
  },
  {
    "text": "prior Sara mentioned the importance of consolidating logging we also was one of the early things we did couldn't agree",
    "start": "2669410",
    "end": "2675530"
  },
  {
    "text": "more she uses spunk we use sumo logic by the end of the day every single log file",
    "start": "2675530",
    "end": "2681080"
  },
  {
    "text": "from every single service goes into a consolidated view that is fully searchable and then within here they",
    "start": "2681080",
    "end": "2687170"
  },
  {
    "text": "have kind of a nice tool chat to the tool set to define alerts so in real time anything matching this query",
    "start": "2687170",
    "end": "2693740"
  },
  {
    "text": "deliver it to pager duty or deliver it to an email and what this means from a developer perspective is that all the",
    "start": "2693740",
    "end": "2700250"
  },
  {
    "text": "developers as we as developers have to do is just log things in our applications and somebody else is",
    "start": "2700250",
    "end": "2706460"
  },
  {
    "text": "responsible for getting those things to us so a few key takeaways one trust your",
    "start": "2706460",
    "end": "2715910"
  },
  {
    "text": "tests and run them in production maybe not all of them but run a subset in production all the time and then to come",
    "start": "2715910",
    "end": "2722360"
  },
  {
    "text": "back to the beginning will know that the software that we deployed is working not just when we deployed it but today continuous delivery invest in it",
    "start": "2722360",
    "end": "2729200"
  },
  {
    "text": "leverage it fantastic for all the reasons of we we know small changes easy",
    "start": "2729200",
    "end": "2736160"
  },
  {
    "text": "easier to know what's happening with something's not happening is expected fast rollback but also it just changes",
    "start": "2736160",
    "end": "2741350"
  },
  {
    "text": "the way that we design our systems in a fundamental way there are plenty of it techniques to invest in so we talked",
    "start": "2741350",
    "end": "2746570"
  },
  {
    "text": "today about sandbox accounts mocks but there's lots of techniques that we can use to improve the quality of our",
    "start": "2746570",
    "end": "2751790"
  },
  {
    "text": "automated tests so that when we reach production things work as expected and finally just instrumenting",
    "start": "2751790",
    "end": "2757880"
  },
  {
    "text": "production for real-time feedback for the cases where things don't go as expected and with that i think we have",
    "start": "2757880",
    "end": "2763790"
  },
  {
    "text": "just a few minutes for a few questions if you have them and thank you so thanks",
    "start": "2763790",
    "end": "2779630"
  },
  {
    "text": "for such an inspiring presentation and my question is how do you test your data",
    "start": "2779630",
    "end": "2785359"
  },
  {
    "text": "migrations do tested in production so the questions how do we test our data",
    "start": "2785359",
    "end": "2791119"
  },
  {
    "text": "migrations interestingly on data what we found well first of all how many people write rollback scripts for their data",
    "start": "2791119",
    "end": "2797599"
  },
  {
    "text": "migrations is that like a practice you guys are all wasting your time stop doing that it doesn't work and if",
    "start": "2797599",
    "end": "2805700"
  },
  {
    "text": "you don't trust me think about the last time your rollback failed probably because the data in production had a",
    "start": "2805700",
    "end": "2812000"
  },
  {
    "text": "different network latency or the data size was bigger than what you tested it on and you've just created a crisis and",
    "start": "2812000",
    "end": "2818690"
  },
  {
    "text": "the crisis is amplified because you thought it would work and you're not prepared to deal with the consequences",
    "start": "2818690",
    "end": "2823820"
  },
  {
    "text": "of it not working so frankly my suggestion on data migration on that side if you're really going to go with a",
    "start": "2823820",
    "end": "2829250"
  },
  {
    "text": "rollback strategy you have to have a cluster of data separate that you can practice on that has the same size and",
    "start": "2829250",
    "end": "2835300"
  },
  {
    "text": "characteristics and same load as you have in production and if you figure out how to do that I want to come to your",
    "start": "2835300",
    "end": "2841730"
  },
  {
    "text": "talk because I don't know what we've done at flow and a guilt is we decided",
    "start": "2841730",
    "end": "2847160"
  },
  {
    "text": "that you cannot have a breaking schema change at the data layer and also in the event layer flow you cannot do that you just cannot that's cultural we just",
    "start": "2847160",
    "end": "2853700"
  },
  {
    "text": "decided you don't do that so what you have to do is make small incremental changes and we have no automation around",
    "start": "2853700",
    "end": "2859460"
  },
  {
    "text": "it when you deploy your database change you're actually logging in to a production server and you're applying",
    "start": "2859460",
    "end": "2864470"
  },
  {
    "text": "that change and we try to do that you've gone through all your testing and everything else you're obviously in a position where you think this is going to work you've run",
    "start": "2864470",
    "end": "2871280"
  },
  {
    "text": "your tests ideally against both versions of the schema but when it comes time to applying it that process is fraught with",
    "start": "2871280",
    "end": "2877220"
  },
  {
    "text": "peril and so we actually remove safeguards it's a human process you're doing something that is dangerous let's",
    "start": "2877220",
    "end": "2883880"
  },
  {
    "text": "put ourselves in that mindset and then be as careful as we can and be as a responsibility can to come back that's",
    "start": "2883880",
    "end": "2889550"
  },
  {
    "text": "what we do I think it works in practice I wish there was a better answer but at",
    "start": "2889550",
    "end": "2894920"
  },
  {
    "text": "the end of the day that's what we found for for data anything yes sir my question is that many times you run",
    "start": "2894920",
    "end": "2902070"
  },
  {
    "text": "into problems with the data which is coming in the production service from the users so and it's it's sometimes",
    "start": "2902070",
    "end": "2908790"
  },
  {
    "text": "hard or you are not expecting to write tests for those kind of data it's something unique about a user or",
    "start": "2908790",
    "end": "2914640"
  },
  {
    "text": "environment something so have you have you think thought about anything using",
    "start": "2914640",
    "end": "2920490"
  },
  {
    "text": "real production data and using your tests with the data or something similar yeah it's a great question so we do a",
    "start": "2920490",
    "end": "2927150"
  },
  {
    "text": "couple things with production data number one actually this is really this is great this is amazing it just went",
    "start": "2927150",
    "end": "2933150"
  },
  {
    "text": "into production so I'm super excited our API proxy receives a request for is it",
    "start": "2933150",
    "end": "2939000"
  },
  {
    "text": "to the back-end receives the response and checks the status code the HTTP status code and then looks up the",
    "start": "2939000",
    "end": "2945930"
  },
  {
    "text": "expected status codes against the API builder specification for that API and if the returned response code is not",
    "start": "2945930",
    "end": "2953460"
  },
  {
    "text": "expected it logs a very verbose warning actually it's an error now it triggers",
    "start": "2953460",
    "end": "2958560"
  },
  {
    "text": "pagers it says I got this risk I got this request and the service returned at",
    "start": "2958560",
    "end": "2964530"
  },
  {
    "text": "202 I was expecting a 201 and it logs it and we have a library that does very",
    "start": "2964530",
    "end": "2971460"
  },
  {
    "text": "good sanitization of data again based on the API builder specifications so now what",
    "start": "2971460",
    "end": "2976710"
  },
  {
    "text": "happens is when that happens a pager goes off and we've captured the request data from the client and the response data from the server in a secure way so",
    "start": "2976710",
    "end": "2984120"
  },
  {
    "text": "we can we can actually usually diagnose the issue immediately now step two is now we have to decide what to do for",
    "start": "2984120",
    "end": "2990510"
  },
  {
    "text": "sure we're gonna put that into a test we have a practice that when something happens in production we write a test somewhere right it might be a test that",
    "start": "2990510",
    "end": "2997950"
  },
  {
    "text": "runs in production it might be unit test might be an integration test don't care but write the test and then second in",
    "start": "2997950",
    "end": "3002960"
  },
  {
    "text": "some cases we've built tooling to say go back out and get sample data that was interesting and then run regression",
    "start": "3002960",
    "end": "3009080"
  },
  {
    "text": "tests over that and that ends up being a pretty interesting way to to converge pretty quickly great right sorry where",
    "start": "3009080",
    "end": "3019910"
  },
  {
    "text": "we go here Justin you mentioned that you starting with a clean slate from gilt to",
    "start": "3019910",
    "end": "3026600"
  },
  {
    "text": "flow do you see any kind of restrictions if you're not starting with the clean slates on thank you that infrastructure",
    "start": "3026600",
    "end": "3032690"
  },
  {
    "text": "so it's a great question I'm gonna rephrase that as have you learned anything with",
    "start": "3032690",
    "end": "3037759"
  },
  {
    "text": "the flow experience where that could have helped in the guilt experience of migrating to this sort of development",
    "start": "3037759",
    "end": "3042859"
  },
  {
    "text": "given the parameters of a very successful company with everything that comes with that right so there's a few",
    "start": "3042859",
    "end": "3049640"
  },
  {
    "text": "things one continuous delivery like really really nailing continuous delivery to actually having one way to",
    "start": "3049640",
    "end": "3055249"
  },
  {
    "text": "do things so I didn't talk about this here but at flow we've decided we have one way to do things we have an event processing pipeline somebody came up",
    "start": "3055249",
    "end": "3062329"
  },
  {
    "text": "with a better idea and improve something somebody else has yet another idea that person has to wait we've got one idea in",
    "start": "3062329",
    "end": "3069259"
  },
  {
    "text": "queue either we move everything to new idea or we discard a new idea and go back to the way that we were we have one",
    "start": "3069259",
    "end": "3076069"
  },
  {
    "text": "way of doing things we only adopt one of the way one of the mistakes now you can see I think mistakes in hindsight one of",
    "start": "3076069",
    "end": "3082789"
  },
  {
    "text": "the I think mistakes we made is we had multiple ways to deploy code we had multiple ways to provision code we and",
    "start": "3082789",
    "end": "3089779"
  },
  {
    "text": "those things start to pile up and today in a world where we have containerization and docker and all the",
    "start": "3089779",
    "end": "3095509"
  },
  {
    "text": "tools available in the clouds there's no reason for that there should be one pipeline to production that handles all of the variety almost all the variety of",
    "start": "3095509",
    "end": "3102109"
  },
  {
    "text": "the services that we're writing it's a huge huge point of leverage and then finishing it like really finishing it",
    "start": "3102109",
    "end": "3107719"
  },
  {
    "text": "and being disciplined to finish it and not getting distracted by whatever it is the you know we have a huge opportunity",
    "start": "3107719",
    "end": "3113660"
  },
  {
    "text": "a new partnership all the shiny things that drive revenue for a business just have the discipline that somebody stays focused and drives us think to",
    "start": "3113660",
    "end": "3120469"
  },
  {
    "text": "conclusion so again we have one way of doing things and really understand how the business works I think have been",
    "start": "3120469",
    "end": "3126319"
  },
  {
    "text": "huge things and with that we're out of time I'm happy to take a few questions after but I just want to thank you for",
    "start": "3126319",
    "end": "3132109"
  },
  {
    "text": "joining us today [Applause]",
    "start": "3132109",
    "end": "3137578"
  }
]