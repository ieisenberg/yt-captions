[
  {
    "text": "this podcast is sponsored by click playground this free programming environment lets you explore and test",
    "start": "199",
    "end": "6509"
  },
  {
    "text": "your data-driven app ideas using clicks engine and api's the goal less query",
    "start": "6509",
    "end": "11670"
  },
  {
    "text": "writing and more efficiency with associative indexing visit playground click comm to learn more and see it for",
    "start": "11670",
    "end": "17609"
  },
  {
    "text": "yourself welcome to the info cue podcast my name",
    "start": "17609",
    "end": "24480"
  },
  {
    "text": "is Wes rice and along with the committee of Architects senior developers and engineering thought leaders from places like Netflix stitch fix reddit and a",
    "start": "24480",
    "end": "31260"
  },
  {
    "text": "variety of other places doing amazing engineering I chair and plan the content for the english-speaking Yukon software",
    "start": "31260",
    "end": "37170"
  },
  {
    "text": "conferences published by info cube the next one by the way is skew con New York in Manhattan June 26 to 28 the info cube",
    "start": "37170",
    "end": "44309"
  },
  {
    "text": "podcast is an architecture learning podcast that chats with some of the engineers you typically find speaking at",
    "start": "44309",
    "end": "49860"
  },
  {
    "text": "Q con or writing for info q in today's podcast we talk with Richard Feldman and",
    "start": "49860",
    "end": "55590"
  },
  {
    "text": "it's all about Elm Elm is a front-end focused functional programming language that compiles to JavaScript in this very densely packed",
    "start": "55590",
    "end": "62309"
  },
  {
    "text": "podcast richard talks a lot about things like being an early adopter of elm the architecture of elm Elms immutability",
    "start": "62309",
    "end": "69180"
  },
  {
    "text": "timeline debugging semantic versioning package management and more he talks about community ecosystem I really hope",
    "start": "69180",
    "end": "75840"
  },
  {
    "text": "you enjoy this podcast it was a lot of fun Richard welcome to the info cube podcast I went to your talk at Q con London I",
    "start": "75840",
    "end": "82890"
  },
  {
    "text": "was super impressed I guess my second real exposure to elm and there were a lot of things in that particular talk",
    "start": "82890",
    "end": "88890"
  },
  {
    "text": "that got me excited like the debugging experience for it for example okay so I'm really excited to learn more about",
    "start": "88890",
    "end": "94409"
  },
  {
    "text": "elm and ask you some specific questions from that talk and from some other things but before we do let's kind of",
    "start": "94409",
    "end": "99750"
  },
  {
    "text": "set the stage tell us a bit about what the work you're doing today is and about the company so we can kind of learn",
    "start": "99750",
    "end": "105600"
  },
  {
    "text": "about the problem space you're solving with Elm today yeah so I work for no red ink and we make grammar and writing",
    "start": "105600",
    "end": "111689"
  },
  {
    "text": "software for English teachers so basically the founder was an English teacher for eight years and he kept running into these problems where he was",
    "start": "111689",
    "end": "117930"
  },
  {
    "text": "like I can't solve these with pen and paper I really need software to do a really good job teaching these concepts",
    "start": "117930",
    "end": "123090"
  },
  {
    "text": "so he hired a guy on Craigslist to build the software for him to use in his own classroom and then other teachers",
    "start": "123090",
    "end": "128910"
  },
  {
    "text": "started asking him about it grew it grew and sort of eventually he decided you know this what I want to do is I want to you know",
    "start": "128910",
    "end": "134460"
  },
  {
    "text": "build this out and turn into a company and down five years later here we are okay so we're now yeah over two billion",
    "start": "134460",
    "end": "142230"
  },
  {
    "text": "questions answered millions more being answered every day got seen about 20 engineers we're hiring by the way trying",
    "start": "142230",
    "end": "148530"
  },
  {
    "text": "to grow that team and make it money and it's going really well so I just imagined from just the context of this",
    "start": "148530",
    "end": "154530"
  },
  {
    "text": "being Elm and being a front-end that it's a very front-end heavy heavy app it's running mostly in the browser yeah",
    "start": "154530",
    "end": "160830"
  },
  {
    "text": "definitely about a quarter of our users or iPad but we don't have a separate app it's all just in the browser and we sort",
    "start": "160830",
    "end": "166950"
  },
  {
    "text": "of pride ourselves on taking a really customized approach to each different concept that we're teaching we kind of",
    "start": "166950",
    "end": "172830"
  },
  {
    "text": "view like multiple choices the last resort we always try to do something more interactive more tailored to the",
    "start": "172830",
    "end": "179160"
  },
  {
    "text": "individual curriculum and so that means lots of custom UIs for all the different concepts for teaching cool so you have",
    "start": "179160",
    "end": "184890"
  },
  {
    "text": "Elm on the front end I would imagine among some other things probably still but what about the rest of the",
    "start": "184890",
    "end": "190530"
  },
  {
    "text": "architecture what's that look the back end is almost exclusively Ruby on Rails we just started introducing similar",
    "start": "190530",
    "end": "196920"
  },
  {
    "text": "services we've got one in production we're working out another two and basically as we've sort of scaled up and",
    "start": "196920",
    "end": "202860"
  },
  {
    "text": "up we've started to run into certain limits and the old approach of just a big rails model is it's really scaling",
    "start": "202860",
    "end": "208290"
  },
  {
    "text": "anymore so we're pretty excited about elixir 2 on the back end and there's been a lot of talk about the Elwood",
    "start": "208290",
    "end": "213810"
  },
  {
    "text": "Lakes repairing going on so happy to get on board that train yeah I was gonna",
    "start": "213810",
    "end": "218880"
  },
  {
    "text": "assume that you it was Elm elixir that's why that's why I asked him yep so you",
    "start": "218880",
    "end": "224340"
  },
  {
    "text": "mentioned just before we started recording that it's been about two years since you started this journey to Elm what did it look like before Elm and",
    "start": "224340",
    "end": "231360"
  },
  {
    "text": "then I guess what kind of triggered you into picking up Elmen and taking it into",
    "start": "231360",
    "end": "236640"
  },
  {
    "text": "production yeah so before that it was you used the term earlier JavaScript jungle which I think it's pretty",
    "start": "236640",
    "end": "242370"
  },
  {
    "text": "accurate we had just jQuery and it's a backbone it's a little bit angular and",
    "start": "242370",
    "end": "247680"
  },
  {
    "text": "just a big mess of things and then react came out in in 2013 and I",
    "start": "247680",
    "end": "253549"
  },
  {
    "text": "found out about it now I've been sort of into the functional programming idea I hadn't really done much with actual",
    "start": "253549",
    "end": "260190"
  },
  {
    "text": "functional languages but conceptually I was like this is a pretty cool way to write programs and I heard about react I",
    "start": "260190",
    "end": "265560"
  },
  {
    "text": "was like oh wow this sounds really great so we were actually really early adopters of react I actually co-opted a",
    "start": "265560",
    "end": "270850"
  },
  {
    "text": "book on react like one of the really early books on react and basically we had a really good experience with that and that sort of became our dominant",
    "start": "270850",
    "end": "278050"
  },
  {
    "text": "paradigm and sort of led us out of the jungle of all these different technologies and into the like okay react as is what we're doing but",
    "start": "278050",
    "end": "284440"
  },
  {
    "text": "separately I'd been kind of wanting to actually try a you know a first class",
    "start": "284440",
    "end": "289720"
  },
  {
    "text": "functional language that was designed from the ground up to be functional so I ended up for a variety of reasons",
    "start": "289720",
    "end": "295509"
  },
  {
    "text": "settling on Elm as the the one I wanted to try so I was using it for a side project and basically there came a point",
    "start": "295509",
    "end": "301810"
  },
  {
    "text": "where we did a really big feature it react at work and at the end of that feature I was like wow this would have",
    "start": "301810",
    "end": "308229"
  },
  {
    "text": "gone so much better if I used Elm with it that I actually think based on my experiences with Elm it was kind of a",
    "start": "308229",
    "end": "315039"
  },
  {
    "text": "mistake not to try doing it an elm and I regretted that and I said you know I kind of I knew better I knew that you",
    "start": "315039",
    "end": "320800"
  },
  {
    "text": "know this this technology was there and that it was good but I I didn't use it because it was kind of a new thing I",
    "start": "320800",
    "end": "326050"
  },
  {
    "text": "didn't really want to take a risk on it and I thought okay well you know fool me twice shame on me I'm not gonna do that",
    "start": "326050",
    "end": "331570"
  },
  {
    "text": "next time I'm just gonna just go to try introducing it and see what happens so we just tried it out on a really small",
    "start": "331570",
    "end": "337780"
  },
  {
    "text": "feature and it worked it went well so we did a little bit more a little bit more and then before we knew it that became",
    "start": "337780",
    "end": "343630"
  },
  {
    "text": "our new dominant paradigm it was like yeah this is what we want to do it yeah that's what it's been ever since you used a phrase in the talk or a comment",
    "start": "343630",
    "end": "350469"
  },
  {
    "text": "in the talk where you said we could have taught everybody to use Elm and still delivered it faster than than we had",
    "start": "350469",
    "end": "356949"
  },
  {
    "text": "with react that kind of stood out to me yeah as a really telling state yeah for sure and I mean a lot of that had to do",
    "start": "356949",
    "end": "363580"
  },
  {
    "text": "with the the feedback loop where you know this is a project where we needed to do a lot of heavy revision like we we",
    "start": "363580",
    "end": "369159"
  },
  {
    "text": "would try out a design we took it out to a classroom tried it out and it just didn't work it wasn't effective and so",
    "start": "369159",
    "end": "375219"
  },
  {
    "text": "we went back to the drawing board and when you have to make a lot of big changes like that L was really conducive",
    "start": "375219",
    "end": "380830"
  },
  {
    "text": "to refactor z' too rewriting stuff because basically the the typical experience is you make a bunch of",
    "start": "380830",
    "end": "387250"
  },
  {
    "text": "changes and then you work through the compiler errors the compiler has these really friendly error messages that help",
    "start": "387250",
    "end": "392860"
  },
  {
    "text": "you figure out you know all the different corner cases you missed and then once it recompiles it typically just works with no regressions that's",
    "start": "392860",
    "end": "399370"
  },
  {
    "text": "like a pretty normal experience and it sounds kind of hard to believe would you yeah you certainly was",
    "start": "399370",
    "end": "405070"
  },
  {
    "text": "to be but now I'm just you know I take it for granted but basically I kind of",
    "start": "405070",
    "end": "411100"
  },
  {
    "text": "you know had a very different experience with react with you know I make these changes and I run it and I get a runtime",
    "start": "411100",
    "end": "417550"
  },
  {
    "text": "exception and go Tracy sat down and figure out what went wrong and there was just a lot of you know crashing into",
    "start": "417550",
    "end": "422590"
  },
  {
    "text": "things until finally I hammered it all out and got another version working that we could take out to a classroom and try",
    "start": "422590",
    "end": "428350"
  },
  {
    "text": "out again and we had to go through several of these iterations and yeah by the end of it I was like this took so",
    "start": "428350",
    "end": "434350"
  },
  {
    "text": "much time to revise that even counting the amount of time it would have taken to introduce l2 ram people up on it like",
    "start": "434350",
    "end": "441970"
  },
  {
    "text": "by the end of the project it would have ended up being in net time savings and the results would have been more maintainable so that was how I knew it",
    "start": "441970",
    "end": "448270"
  },
  {
    "text": "was a mistake not to use L well that's crazy so tell me something how did you sell that to your leadership to be able",
    "start": "448270",
    "end": "456430"
  },
  {
    "text": "to introduce Elm I mean this was two years ago I just read maybe I'm a late adopter to it but I just found out about",
    "start": "456430",
    "end": "462160"
  },
  {
    "text": "L last year sometime so two years ago that had to be even more of a challenge",
    "start": "462160",
    "end": "467560"
  },
  {
    "text": "to try to sell it to your leadership so you know the interesting thing is it's it really comes down to risk and the key",
    "start": "467560",
    "end": "473500"
  },
  {
    "text": "for us was just you know we talked about it and we were kind of like okay so this is a new technology you know it's it's",
    "start": "473500",
    "end": "480190"
  },
  {
    "text": "not mainstream the key was just saying well look we're just gonna do it on a really small project right like this is",
    "start": "480190",
    "end": "485950"
  },
  {
    "text": "just gonna be one part of one page if it doesn't go well we can always back out and if it does go well we can say okay",
    "start": "485950",
    "end": "492070"
  },
  {
    "text": "well then we'll just do a little bit more and see where that takes us so it's you know a big difference doing it on a",
    "start": "492070",
    "end": "498460"
  },
  {
    "text": "small piece of one page versus saying our next project is going to be an L",
    "start": "498460",
    "end": "503560"
  },
  {
    "text": "right then you're really betting the farm on it that's a big risk and so if you can minimize the risk of introducing it then",
    "start": "503560",
    "end": "510820"
  },
  {
    "text": "it's not such a hard sell it's not saying like you know we're not committing to this this is not a commitment this is an experiment we're",
    "start": "510820",
    "end": "516640"
  },
  {
    "text": "just gonna try it out and see where it takes us and so this incremental adoption strategy is by far what I hear",
    "start": "516640",
    "end": "522580"
  },
  {
    "text": "as being the most common way that other people adopt Elm I mean we we didn't nobody told us to do that we just happen",
    "start": "522580",
    "end": "528160"
  },
  {
    "text": "to do it that way and thankfully it worked out that was what we did with react too so it kind of had a little bit of experience with that approach",
    "start": "528160",
    "end": "534460"
  },
  {
    "text": "but basically mancine to be a pattern where when I talk to people who are",
    "start": "534460",
    "end": "540190"
  },
  {
    "text": "using Elvin productions today that's by far the most common way that they got there was just starting with something",
    "start": "540190",
    "end": "545200"
  },
  {
    "text": "low-risk makes no sense sounds like a lot like lean lean UX to be able to start with something small test it out",
    "start": "545200",
    "end": "550990"
  },
  {
    "text": "minimize the risk and then kind of iterate doesn't work you cut your risk and then iterate from there absolutely exactly what's up what is a really good",
    "start": "550990",
    "end": "558790"
  },
  {
    "text": "use case to start with that someone who may be coming from the react community or from from the angular community for",
    "start": "558790",
    "end": "564730"
  },
  {
    "text": "ember for community for that for that what's like a really good use case that can show maybe the power of Elm for",
    "start": "564730",
    "end": "570880"
  },
  {
    "text": "someone to start off with I'd say anything that you're sort of afraid to maintain and now that's a that is a bit",
    "start": "570880",
    "end": "576100"
  },
  {
    "text": "of a double-edged sword right because on the one hand if you're afraid to maintain it then maybe you're afraid to change it to something else but I would",
    "start": "576100",
    "end": "582970"
  },
  {
    "text": "say if the reason you're afraid to maintain it is that it's changing often like you you often have to find yourself",
    "start": "582970",
    "end": "589060"
  },
  {
    "text": "having to go in and tweak the business logic something like that rewriting that chunk of the code in L and and you know of course using Elm has",
    "start": "589060",
    "end": "596170"
  },
  {
    "text": "JavaScript Interop so that would be the way that you incremental e introduce something and put it in there then have",
    "start": "596170",
    "end": "601240"
  },
  {
    "text": "JavaScript talk to it sort of elm as a service and then once you've got that in there then you can just sort of use that",
    "start": "601240",
    "end": "608290"
  },
  {
    "text": "as a way to get an experience with what happens when I need to maintain this chunk of the codebase now and my",
    "start": "608290",
    "end": "615550"
  },
  {
    "text": "expectation would be that you'd find a way yeah this actually isn't scary anymore we recently had one of our newest team members and she's been",
    "start": "615550",
    "end": "622030"
  },
  {
    "text": "working here I want to say two months maybe and she just like earlier this week she made a series of reef actors",
    "start": "622030",
    "end": "628150"
  },
  {
    "text": "that touched something like a hundred and fifteen files and she just made a full request and she's like wow I'm just",
    "start": "628150",
    "end": "633700"
  },
  {
    "text": "not at all afraid that this is gonna break anything because it all compiles I'm like I I you know again the",
    "start": "633700",
    "end": "639850"
  },
  {
    "text": "experience is just like typically if it compiles it just works again and like we have a QA guy so we're not you know just",
    "start": "639850",
    "end": "644890"
  },
  {
    "text": "gonna like shoot it straight into production of course sure but you know just that level of confidence is just a",
    "start": "644890",
    "end": "651400"
  },
  {
    "text": "real game changer when it comes to developer productivity yeah I was gonna ask you I think you just answered it by",
    "start": "651400",
    "end": "657040"
  },
  {
    "text": "saying that but what the ramp-up period was I'm imagining when you typically hire people and I I know this for a fact",
    "start": "657040",
    "end": "663070"
  },
  {
    "text": "because you're talk but you're not hiring people that have this tons amount of Elm experience you're right you're",
    "start": "663070",
    "end": "668410"
  },
  {
    "text": "marrying them that may be from the JavaScript community or so and then bringing them into elm and so the ramp",
    "start": "668410",
    "end": "673779"
  },
  {
    "text": "up period within two months you've got someone who's refactoring across the entire code base pretty confidently",
    "start": "673779",
    "end": "679149"
  },
  {
    "text": "that's something that sounds like a pretty good ROI there yeah I mean so we",
    "start": "679149",
    "end": "684990"
  },
  {
    "text": "we don't expect any experience on day one like we does just not even part of our job requirements and yeah so we have",
    "start": "684990",
    "end": "691959"
  },
  {
    "text": "people writing Elm in their first week I mean usually not making such a big invasive change at the code base but honestly that's less about ailment more",
    "start": "691959",
    "end": "698740"
  },
  {
    "text": "just about I mean how many companies hire somebody and then on their first week they're like I'm gonna make a huge",
    "start": "698740",
    "end": "704259"
  },
  {
    "text": "refactor you know you just don't know the codebase well enough yet but I will say that you know it's been surprisingly",
    "start": "704259",
    "end": "709930"
  },
  {
    "text": "easy to get people ramped up on Elm and the key for us has just been pair programming it's you know sort of saying",
    "start": "709930",
    "end": "716230"
  },
  {
    "text": "okay we're gonna get you up to speed by just pairing with someone and they'll just explain concepts as you go and you can you can build up a lot of good",
    "start": "716230",
    "end": "722709"
  },
  {
    "text": "intuitions from that and then once you do get on your own the compiler helps you out a lot like if there's something",
    "start": "722709",
    "end": "728379"
  },
  {
    "text": "that you know once you've got some of the basics down and you know you don't know about this edge case you don't know",
    "start": "728379",
    "end": "733509"
  },
  {
    "text": "about this technique in a lot of cases you can just be like well there's sort of a guardrail around you know what can",
    "start": "733509",
    "end": "740949"
  },
  {
    "text": "go wrong because the compilers gonna help me out like if I try to do something crazy the compilers gonna give",
    "start": "740949",
    "end": "745990"
  },
  {
    "text": "me an error and then it'll usually explain to me you know here's why this is a problem here's where you can go for",
    "start": "745990",
    "end": "751060"
  },
  {
    "text": "more information on it and so it that gives beginner is a way to sort of build stuff be productive ship stuff get stuff",
    "start": "751060",
    "end": "757990"
  },
  {
    "text": "done you know maybe in a pull request somebody says oh actually you didn't know about this other way you could have done this here's a cleaner way to do",
    "start": "757990",
    "end": "764380"
  },
  {
    "text": "that but the risk that they're gonna actually break something or cause a problem is a way way lower than what it",
    "start": "764380",
    "end": "769689"
  },
  {
    "text": "is in JavaScript or typescript for that matter yeah that makes sense okay so let's back up for a second so we",
    "start": "769689",
    "end": "774880"
  },
  {
    "text": "can't just jump right in but let's start off with what is elm because you know when I when I think of em I think of it",
    "start": "774880",
    "end": "780730"
  },
  {
    "text": "as a trans compiler and I don't think that's accurate so what is Elam yeah so Elms a functional programming language",
    "start": "780730",
    "end": "786850"
  },
  {
    "text": "that as it happens right now compiles to JavaScript but there's absolutely no reason it can't compile to other things",
    "start": "786850",
    "end": "792370"
  },
  {
    "text": "but it's it's primarily focused right now on compiling to JavaScript and letting you use it to build reliable",
    "start": "792370",
    "end": "798490"
  },
  {
    "text": "delightful web applications so it's of two-pronged focus is developer delight and maintainable applications",
    "start": "798490",
    "end": "805630"
  },
  {
    "text": "like really reliable stuff and the key to both of those is basically the design of the language and the compiler that",
    "start": "805630",
    "end": "811510"
  },
  {
    "text": "backs up that design so the friendly error message is the idea of getting all",
    "start": "811510",
    "end": "817029"
  },
  {
    "text": "of your checks done at compile time rather than at run time you know we talked earlier about we've we've had",
    "start": "817029",
    "end": "822100"
  },
  {
    "text": "element production for two years now we're over a hundred thousand lines of elm code and we still have gotten in",
    "start": "822100",
    "end": "828339"
  },
  {
    "text": "production a total of zero runtime exceptions in that entire two years you mean so I mean undefined it's not an",
    "start": "828339",
    "end": "835330"
  },
  {
    "text": "object nothing you don't get those anymore yeah not at all I mean so so we used roll bar to do an error tracking",
    "start": "835330",
    "end": "841690"
  },
  {
    "text": "and so whenever something throws an exception roll bar tracks it and so we have still a lot of legacy JavaScript",
    "start": "841690",
    "end": "847270"
  },
  {
    "text": "code like it's a minority of our code base now but obviously you know historically we wrote a lot of JavaScript before we started writing so",
    "start": "847270",
    "end": "853630"
  },
  {
    "text": "much element and so we still see runtime exceptions from our legacy JavaScript code all the time so we know that they",
    "start": "853630",
    "end": "858880"
  },
  {
    "text": "still can't happen we didn't all just become you know magically amazing programmers yeah and it's also not that",
    "start": "858880",
    "end": "865150"
  },
  {
    "text": "Elms design encourages swallowing errors it's actually the opposite where Elms design really encourages handling errors",
    "start": "865150",
    "end": "871030"
  },
  {
    "text": "and so the key is basically that Elms design is such that the compiler can",
    "start": "871030",
    "end": "876520"
  },
  {
    "text": "catch all of these things for you at compile time this is like an overt goal of the language to be really explicit",
    "start": "876520",
    "end": "882820"
  },
  {
    "text": "about here are all your edge cases don't leave anything up to just oh well we'll figure it out and if it turns out",
    "start": "882820",
    "end": "888580"
  },
  {
    "text": "something's wrong we'll just crash that's always considered you know not the right thing to do and because the",
    "start": "888580",
    "end": "893890"
  },
  {
    "text": "whole language like all the primitives are built around this concept other programs you know libraries that are",
    "start": "893890",
    "end": "899860"
  },
  {
    "text": "built on this sort of solid foundation also inherit that same characteristic sort of by default and a really good",
    "start": "899860",
    "end": "905980"
  },
  {
    "text": "example of this is null so you have you know Java you have null pointer exceptions and JavaScript you have undefined is not a function or you know",
    "start": "905980",
    "end": "912430"
  },
  {
    "text": "null equivalents of that in Ruby you have nil el doesn't have any of them it doesn't have a concept of null so I said",
    "start": "912430",
    "end": "919990"
  },
  {
    "text": "this is the talk like sir Tony Hoare has this great quote you know he introduced the concept of null and he considers it",
    "start": "919990",
    "end": "926410"
  },
  {
    "text": "his billion dollar mistake because he thinks it's caused over a billion dollars in economic damage absolutely",
    "start": "926410",
    "end": "932710"
  },
  {
    "text": "and it just doesn't have it instead if you want to represent the idea of you know there's a potential absence of a",
    "start": "932710",
    "end": "939070"
  },
  {
    "text": "value here which is conceptually what null does elem has a way to do that in a way where the compiler is capable of",
    "start": "939070",
    "end": "945610"
  },
  {
    "text": "checking for that and explicitly saying oh you need to handle that here like you can't forget to handle it when you use",
    "start": "945610",
    "end": "952330"
  },
  {
    "text": "it it's been kind of an astonishing experience but what's even more astonishing is that we're not the only ones who've had this like whenever I",
    "start": "952330",
    "end": "959080"
  },
  {
    "text": "meet somebody who's used tell Z they're using elven production that's always the first question I ask is you know how",
    "start": "959080",
    "end": "965560"
  },
  {
    "text": "many runtime exceptions have you gotten and so far it's been zero from everybody I've asked this is you know no that's",
    "start": "965560",
    "end": "970899"
  },
  {
    "text": "cool I mean honestly that can't go on forever I am aware of this because it like you can still run out of memory and",
    "start": "970899",
    "end": "976930"
  },
  {
    "text": "cause a stack overflow right there's there's just ways you can crash programs like no matter what your design is so",
    "start": "976930",
    "end": "984010"
  },
  {
    "text": "I'm sure it's got to have it sooner or later but just the fact that it's gone this long without happening to me or anybody I talk to you is pretty",
    "start": "984010",
    "end": "990399"
  },
  {
    "text": "impressive I mean so you've mentioned a few times that the compiler really helps you out I'd like to dive a bit more into that I",
    "start": "990399",
    "end": "996820"
  },
  {
    "text": "mean we've had statically typed languages forever compilers always helps us but but how does that compiler really helping you",
    "start": "996820",
    "end": "1002550"
  },
  {
    "text": "out to make this experience such an amazing awesome thing I'd say two things one is the design of the language and",
    "start": "1002550",
    "end": "1008730"
  },
  {
    "text": "two is just that Elvis one of the first languages that's really focused on the idea of compiler as assistant not just",
    "start": "1008730",
    "end": "1016230"
  },
  {
    "text": "compiler as you know something that generates the byte coder generates the JavaScript okay so actually evan chip",
    "start": "1016230",
    "end": "1022380"
  },
  {
    "text": "flicky the the creator of element he's done such a good job on this and has spent so much time thinking about how to",
    "start": "1022380",
    "end": "1028558"
  },
  {
    "text": "give a good compiler experience that Elm is I'm gonna say easily the most cited",
    "start": "1028559",
    "end": "1033720"
  },
  {
    "text": "language for like when I whenever another language says we want to try and make our compiler error messages better",
    "start": "1033720",
    "end": "1039300"
  },
  {
    "text": "I see this all the time now they cite elements like we want to be more like L and it's not like you know nobody could",
    "start": "1039300",
    "end": "1046470"
  },
  {
    "text": "be doing this I think it's just that Evans the first person to say I'm actually gonna devote a lot of time and energy to trying to get this right he",
    "start": "1046470",
    "end": "1053010"
  },
  {
    "text": "actually gave a talk at UCLA like a year or two ago to a roomful of programming",
    "start": "1053010",
    "end": "1058620"
  },
  {
    "text": "language authors about how to get nice high quality error messages and like you know Martin odorous kievskaya famous in",
    "start": "1058620",
    "end": "1065429"
  },
  {
    "text": "the audience taken notes you know this is you know it's it's really kind of like on the frontier of how to get a good user experience from",
    "start": "1065429",
    "end": "1073110"
  },
  {
    "text": "your compiler so that's one aspect of it and the other is just that the language is very design is around like how can we",
    "start": "1073110",
    "end": "1080550"
  },
  {
    "text": "have a really nice user experience where things don't crash so some good examples of this are so we talked earlier about",
    "start": "1080550",
    "end": "1086340"
  },
  {
    "text": "null the idea of having the sort of opt in way of representing the absence of",
    "start": "1086340",
    "end": "1091380"
  },
  {
    "text": "something where you sort of have to go out of your way to say this can potentially be missing so you think about array access right you have an",
    "start": "1091380",
    "end": "1097620"
  },
  {
    "text": "array of things in JavaScript you can just say you know bracket 5 bracket 7 whatever and what it'll give you back is",
    "start": "1097620",
    "end": "1103680"
  },
  {
    "text": "potentially undefined if something's not at that position so an L when you have the equivalent you've got an array and",
    "start": "1103680",
    "end": "1109350"
  },
  {
    "text": "you want to get something out of there that's explicitly where it says ok this is this is one of those opt-in moments",
    "start": "1109350",
    "end": "1115140"
  },
  {
    "text": "this is where we can potentially have the absence of a value and what that means is that you can't forget to check",
    "start": "1115140",
    "end": "1120630"
  },
  {
    "text": "for what happens if the index is out of bounds what happens if there's nothing at that oh cool right and this is",
    "start": "1120630",
    "end": "1126600"
  },
  {
    "text": "something we're in in JavaScript it's just very easy to end up with it undefined there and just have that you know filter through your program so when",
    "start": "1126600",
    "end": "1133050"
  },
  {
    "text": "you say you can't forget to check that to make sure that there's a value there what does that mean is that in the",
    "start": "1133050",
    "end": "1138990"
  },
  {
    "text": "language or it the the compiler enforces you is the developer to handle that condition both so basically what comes",
    "start": "1138990",
    "end": "1146010"
  },
  {
    "text": "back when you do like an array get like at a certain position is it's basically a container around the value you want so",
    "start": "1146010",
    "end": "1152490"
  },
  {
    "text": "let's say you've got an array full of strings what you get back is not a string it's a container wrapped around a",
    "start": "1152490",
    "end": "1158940"
  },
  {
    "text": "string and that container says I've either got a string inside me or I do not and so you actually have to do a",
    "start": "1158940",
    "end": "1164010"
  },
  {
    "text": "second check once you get that value to pull something out of that container and",
    "start": "1164010",
    "end": "1169200"
  },
  {
    "text": "there's basically a conditional that will let you say ok here's what I want to do in the case that there is a string",
    "start": "1169200",
    "end": "1174540"
  },
  {
    "text": "in there and then you can actually get the string into scope and work with it or here's what I want to do in the case where there is no string in there and",
    "start": "1174540",
    "end": "1180810"
  },
  {
    "text": "then this there is no string in scope you can't work with it so the compiler then checks all of that and says ok like you have to have both",
    "start": "1180810",
    "end": "1186840"
  },
  {
    "text": "of these branches and you can't leave it out and nice yeah so I know that there's",
    "start": "1186840",
    "end": "1192930"
  },
  {
    "text": "been some work in like typescript and flow to do this with null checks right where it's got this notion of",
    "start": "1192930",
    "end": "1199789"
  },
  {
    "text": "you have to have an if statement that checks the conditional to see if Noah's",
    "start": "1199789",
    "end": "1204859"
  },
  {
    "text": "being handled or not but an important difference is that with elm that's actually baked into not only the",
    "start": "1204859",
    "end": "1210559"
  },
  {
    "text": "language but also all of the libraries and all the AP is you know across the board it's not just for null is for",
    "start": "1210559",
    "end": "1216259"
  },
  {
    "text": "basically everything so all of these corner cases where something might be missing or something might be one of two",
    "start": "1216259",
    "end": "1222379"
  },
  {
    "text": "different options or one of three different options and they all work a little bit differently this notion of you can't forget to handle it is just",
    "start": "1222379",
    "end": "1229070"
  },
  {
    "text": "pervasive across the language it's not special case to null it's just everything works that way and so that's",
    "start": "1229070",
    "end": "1234109"
  },
  {
    "text": "how you can get from you know things are better to things just don't crash that's",
    "start": "1234109",
    "end": "1239389"
  },
  {
    "text": "pretty awesome I want to take a second and kind of go up a little bit higher level and talk a bit about the architecture of Elm itself and how it",
    "start": "1239389",
    "end": "1245840"
  },
  {
    "text": "how it all works so I'm gonna test your ability to describe things without a whiteboard so how how does Elm work how",
    "start": "1245840",
    "end": "1254359"
  },
  {
    "text": "does this all get packaged up well first off what do I need in my environment before you go into it do I need to go",
    "start": "1254359",
    "end": "1261379"
  },
  {
    "text": "set up you know grunt and gulp and do I need NPM do I do I need to set up you",
    "start": "1261379",
    "end": "1266479"
  },
  {
    "text": "know 15 other JavaScript packages started what do I need and then once I have all that kind of tell me walk me",
    "start": "1266479",
    "end": "1273349"
  },
  {
    "text": "through what it looks like to compile a program how does all that work yeah sure just do NPM install - GL and then",
    "start": "1273349",
    "end": "1281389"
  },
  {
    "text": "that'll just install everything for you so Elm is very self-contained if you want it to be so the compiler is just",
    "start": "1281389",
    "end": "1286970"
  },
  {
    "text": "called I'll make and you just say L make you give it the name of your main file and then it'll just spit out the the",
    "start": "1286970",
    "end": "1292970"
  },
  {
    "text": "compiled JavaScript actually if you want it'll even give you an HTML file that'll that imports that JavaScript so you can",
    "start": "1292970",
    "end": "1298970"
  },
  {
    "text": "just have it all right there that's not quite what people use for production typically when people are using it in",
    "start": "1298970",
    "end": "1304970"
  },
  {
    "text": "production they in practice are still doing some amount of JavaScript Interop which means that they end up wanting to",
    "start": "1304970",
    "end": "1310970"
  },
  {
    "text": "use stuff like web pack or grunt or gulp to manage the JSI to that so if you're doing a pure elm project and it's got no",
    "start": "1310970",
    "end": "1318349"
  },
  {
    "text": "JavaScript dependencies that you care about you don't need any that stuff you can really just get by it with just I'll make just the whole way through so like",
    "start": "1318349",
    "end": "1324440"
  },
  {
    "text": "I said in practice people tend to want to access you know the JavaScript library ecosystem is much bigger than the Elm library ecosystem so people end",
    "start": "1324440",
    "end": "1331639"
  },
  {
    "text": "up wanting to do that in fact but if you're just trying to get started yeah you don't need any of that you can just start with you know NPM install -",
    "start": "1331639",
    "end": "1337710"
  },
  {
    "text": "GL and then go from there without installing anything else yeah as far as how elm programs are put together",
    "start": "1337710",
    "end": "1343769"
  },
  {
    "text": "the basic interaction paradigm centers around three sort of central concepts",
    "start": "1343769",
    "end": "1349109"
  },
  {
    "text": "which is model update and view so at your basic level you have your model and your model represents your entire",
    "start": "1349109",
    "end": "1354960"
  },
  {
    "text": "application state it's immutable it's just one immutable value and it represents everything that's going on",
    "start": "1354960",
    "end": "1360029"
  },
  {
    "text": "your application and I really do mean everything this is sort of distinct from you know react or redux or flux or",
    "start": "1360029",
    "end": "1366769"
  },
  {
    "text": "angular ember where you have sort of your application state is distributed amongst lots of different places you",
    "start": "1366769",
    "end": "1373109"
  },
  {
    "text": "have you know the flux stores or you have stateful components yeah well does not have a component system on purpose",
    "start": "1373109",
    "end": "1379619"
  },
  {
    "text": "there's no way to store State anywhere other than the model and this has some really interesting implications and",
    "start": "1379619",
    "end": "1385139"
  },
  {
    "text": "particularly for debugging but basically you take that model this immutable value represents your entire app state and the",
    "start": "1385139",
    "end": "1392460"
  },
  {
    "text": "L runtime which is sort of the JavaScript that gets generated to make all the the engine run will just take",
    "start": "1392460",
    "end": "1398309"
  },
  {
    "text": "that model and pass it to a view function that you define so you write this view function and all it does is it",
    "start": "1398309",
    "end": "1403950"
  },
  {
    "text": "takes the model and then it returns some virtual Dom that is a description of how",
    "start": "1403950",
    "end": "1409109"
  },
  {
    "text": "you want the page to look so the argument is the entire application state and the return value is here's how I",
    "start": "1409109",
    "end": "1415049"
  },
  {
    "text": "want the page to look then you have user interaction people click on the page and then based on that user interaction it",
    "start": "1415049",
    "end": "1420629"
  },
  {
    "text": "calls this update function that you write and update functions job is to take the old model the previous application state and a message",
    "start": "1420629",
    "end": "1427409"
  },
  {
    "text": "describing what the user did and then use that to generate a to return a new application state and again this is just",
    "start": "1427409",
    "end": "1434100"
  },
  {
    "text": "one immutable value it's just like here's everything here's the entire state of the world yeah and then it gets that new one calls the view function on",
    "start": "1434100",
    "end": "1440249"
  },
  {
    "text": "the new one and then that gets a new description of how the page should look and then from there you're sort of off to the races that's a you know I'm sort",
    "start": "1440249",
    "end": "1446879"
  },
  {
    "text": "of breezing through this but that's that's the high-level idea sure sure so it's basically events flow into the",
    "start": "1446879",
    "end": "1452489"
  },
  {
    "text": "system it's very reactive it's just taking it binding that new event to the model and are taking that model rather",
    "start": "1452489",
    "end": "1458609"
  },
  {
    "text": "and binding it to the view and that's how things yeah that's all there is to it it's it's very consistent",
    "start": "1458609",
    "end": "1464549"
  },
  {
    "text": "yeah nice so a couple questions come it's all there is to it so a couple",
    "start": "1464549",
    "end": "1469740"
  },
  {
    "text": "things come to mind so so you have this elm code and it gets compiled to this runtime what's that",
    "start": "1469740",
    "end": "1475590"
  },
  {
    "text": "sighs look like is that is that pretty heavy yes great question um I would say it's currently pretty medium and it's",
    "start": "1475590",
    "end": "1482310"
  },
  {
    "text": "about to get pretty light so right now it's if you do to do MVC like LM to do",
    "start": "1482310",
    "end": "1487350"
  },
  {
    "text": "MVC it's smaller than react to do MVC after like minification in gzip that's",
    "start": "1487350",
    "end": "1492720"
  },
  {
    "text": "even though it's including basically immutability library like persistent data structures are built in and also state management is built in so in",
    "start": "1492720",
    "end": "1499230"
  },
  {
    "text": "practice you know react to MVC doesn't have state management like redux or flux and it also doesn't have an immutability",
    "start": "1499230",
    "end": "1505050"
  },
  {
    "text": "library built in but most people who are using in production tend to want one or both of those as they scale and get",
    "start": "1505050",
    "end": "1510630"
  },
  {
    "text": "bigger that's actually going to change in the next release of elements it's most likely I mean you know the release",
    "start": "1510630",
    "end": "1515850"
  },
  {
    "text": "isn't out yet so obviously anything still subject to change but that's been actually a big focus right now is on asset management and on things like dead",
    "start": "1515850",
    "end": "1523140"
  },
  {
    "text": "code elimination so the idea of here are these functions you know like the HTML library has helper functions for you",
    "start": "1523140",
    "end": "1530160"
  },
  {
    "text": "know button form input all these different things but in practice you don't end up using every single one of",
    "start": "1530160",
    "end": "1535200"
  },
  {
    "text": "those so dead code elimination is basically saying oh you're not using all these functions let's just throw them",
    "start": "1535200",
    "end": "1540450"
  },
  {
    "text": "out let's not even keep them sure and so I don't know what the exact numbers are but what I've heard is that preliminary",
    "start": "1540450",
    "end": "1545820"
  },
  {
    "text": "numbers suggest that it's like really small especially considering that you're getting in a beautiful new library and a",
    "start": "1545820",
    "end": "1551310"
  },
  {
    "text": "state management library it's I expect to be a pretty exciting release for people who are really constrained on",
    "start": "1551310",
    "end": "1557400"
  },
  {
    "text": "bandwidth ok so the next question that comes up for me with what you described is if you're keeping the entire state",
    "start": "1557400",
    "end": "1563130"
  },
  {
    "text": "for application and it's completely immutable with every state changing event you have you have to completely",
    "start": "1563130",
    "end": "1569010"
  },
  {
    "text": "recreate the immutable state that that seems like a huge performance hit to me what's the performance like using M yeah",
    "start": "1569010",
    "end": "1576150"
  },
  {
    "text": "so the key there is that these are using Elms built-in persistent data structures so they're actually you know you're not",
    "start": "1576150",
    "end": "1581970"
  },
  {
    "text": "cloning the entire thing every time it's just you know syntactically you're expressing it as like here build this",
    "start": "1581970",
    "end": "1587880"
  },
  {
    "text": "whole new thing from scratch but actually under the hood what it's doing is it's just you know it's doing lots of node sharing and it's like only actually",
    "start": "1587880",
    "end": "1594180"
  },
  {
    "text": "changing the stuff that needs to change ok performance-wise LM actually benchmarks better than react angular and ember so there's a blog post",
    "start": "1594180",
    "end": "1602629"
  },
  {
    "text": "on the website that's basically going through like here are the methodologies we used and like you know a lot of details about like here's how we",
    "start": "1602629",
    "end": "1608330"
  },
  {
    "text": "compared apples to apples on rendering performance there's also some pretty cool tricks that Elm can do because the",
    "start": "1608330",
    "end": "1615649"
  },
  {
    "text": "entire language is built out of immutable values and pure functions like there's no you can't write an elm function that has a side-effect so it",
    "start": "1615649",
    "end": "1622580"
  },
  {
    "text": "unlocks these really cool performance optimizations that are safe to do an elm that are not safe to do in the general",
    "start": "1622580",
    "end": "1627799"
  },
  {
    "text": "case for you know react and other libraries for example batching your view",
    "start": "1627799",
    "end": "1632809"
  },
  {
    "text": "functions so you can actually and not you can but it actually just does this for you Elm will call",
    "start": "1632809",
    "end": "1638629"
  },
  {
    "text": "requestanimationframe and only call your view function basically like right before it's time to render 60 frames per",
    "start": "1638629",
    "end": "1644509"
  },
  {
    "text": "second it doesn't actually get you anything to call that view function on every single time the model updates it",
    "start": "1644509",
    "end": "1651440"
  },
  {
    "text": "only gets you something to call the view function on the current model whatever it's about ready for the browser to",
    "start": "1651440",
    "end": "1656720"
  },
  {
    "text": "render okay and so that's what L does it just says okay well we'll just only call the view function that happens react you",
    "start": "1656720",
    "end": "1662899"
  },
  {
    "text": "could do that but since view might have a side effect you know that could actually cause some pretty nasty bugs",
    "start": "1662899",
    "end": "1668539"
  },
  {
    "text": "but an elm at compile time it's guaranteed that there are no side effects so it's definitely safe to skip",
    "start": "1668539",
    "end": "1673730"
  },
  {
    "text": "that oh whatever in it yeah whenever you want to that's really cool there's another thing I wanted to ask you about",
    "start": "1673730",
    "end": "1679009"
  },
  {
    "text": "and that was I think I mentioned at the very beginning the debugging experience with Elm I was kind of blown away about",
    "start": "1679009",
    "end": "1684919"
  },
  {
    "text": "but this whole idea of a mutable state and then just having this model flow through the system and then be able to",
    "start": "1684919",
    "end": "1690049"
  },
  {
    "text": "do these updates gives you some really interesting capabilities with debugging could you walk through what the",
    "start": "1690049",
    "end": "1695409"
  },
  {
    "text": "developer experience is like debugging an open project yeah it's totally so one",
    "start": "1695409",
    "end": "1700580"
  },
  {
    "text": "thing I didn't mention earlier is that when the user does interactions like clicking or typing in a text field or",
    "start": "1700580",
    "end": "1706279"
  },
  {
    "text": "something like that what happens is that you specify this in terms of messages and a message is a piece of data that",
    "start": "1706279",
    "end": "1712639"
  },
  {
    "text": "says here's what the user did and here's whatever information is necessary to perform the update so let's say you",
    "start": "1712639",
    "end": "1718460"
  },
  {
    "text": "click on a button it might just be hey the user clicked on the submit button if the user is typing it might say hey the user typed in this text field and by the",
    "start": "1718460",
    "end": "1725059"
  },
  {
    "text": "way here's what they type and so since your update function is written in terms of these messages what the debugger can",
    "start": "1725059",
    "end": "1730279"
  },
  {
    "text": "do is it can actually just display and it does display just a list of all the messages that are flowing through your system and",
    "start": "1730279",
    "end": "1735710"
  },
  {
    "text": "you can just step back in time and time travel and say okay when this message came in where what was the state of the",
    "start": "1735710",
    "end": "1741590"
  },
  {
    "text": "world how about well this one came in how about when this one came in now you can look at that and also you can look at the model which again is your entire",
    "start": "1741590",
    "end": "1747620"
  },
  {
    "text": "application state so you can just kind of expand out the tree and just look at okay what were all the values and my",
    "start": "1747620",
    "end": "1752990"
  },
  {
    "text": "system at that point it's like you have a watch on everything and again you can you can approximate this thing by you",
    "start": "1752990",
    "end": "1758390"
  },
  {
    "text": "know like Redux which is actually based on the Elm architecture as Dan Abramoff was looking for a way to implement time",
    "start": "1758390",
    "end": "1764539"
  },
  {
    "text": "travel debugging for a conference talk that he had submitted and he was looking around he's like this is really hard to",
    "start": "1764539",
    "end": "1770059"
  },
  {
    "text": "do and react any and he found Elvin was like oh they're doing it how are they doing it and so he sort of based Redux",
    "start": "1770059",
    "end": "1775130"
  },
  {
    "text": "on that but there is this really important difference between having it on an opt-in basis versus having",
    "start": "1775130",
    "end": "1780799"
  },
  {
    "text": "everything built around it right so like if you're time-traveling in redox all of your redox state comes with you but",
    "start": "1780799",
    "end": "1787190"
  },
  {
    "text": "everything else that's you know like your staple components and stuff like that it's just not aware of those it can't you know those are not part of the",
    "start": "1787190",
    "end": "1792679"
  },
  {
    "text": "picture whereas four elements really the whole application you know the fact that not only all the stuff you write but the",
    "start": "1792679",
    "end": "1798080"
  },
  {
    "text": "entire Elm ecosystem is built around this means that you get this whole different level of like well I'm going",
    "start": "1798080",
    "end": "1803720"
  },
  {
    "text": "back through time it's really going back through time yeah you do they in in the presentation I saw you do you exported",
    "start": "1803720",
    "end": "1809659"
  },
  {
    "text": "the entire event order and then brought it into another browser and kind of recreated that entire state and gave you",
    "start": "1809659",
    "end": "1816110"
  },
  {
    "text": "some really interesting things if I'm working on some kind of feature branch that has a bug in it I can export bring",
    "start": "1816110",
    "end": "1821659"
  },
  {
    "text": "in that state and give it to another developer who can then check out my branch and be able to recreate it that was that was a really cool experience",
    "start": "1821659",
    "end": "1827659"
  },
  {
    "text": "for a developer to be able to get to that exact condition that raised that bug exactly yeah I mean it's it's it's",
    "start": "1827659",
    "end": "1833330"
  },
  {
    "text": "like reproducing bugs is a surprisingly time-consuming experience when the bug is hard to track down just being able to",
    "start": "1833330",
    "end": "1840620"
  },
  {
    "text": "say look here's the file just import it yeah definitely and a difference so I'm",
    "start": "1840620",
    "end": "1846590"
  },
  {
    "text": "gonna throw you for a loop a little bit here maybe throw you for a loop but what um so so where the sticky parts of them",
    "start": "1846590",
    "end": "1852530"
  },
  {
    "text": "if I it sounds like a great story and it sounds like you know it's gonna be an amazing experience for me to bring",
    "start": "1852530",
    "end": "1858230"
  },
  {
    "text": "it into my project but where's the but there's got to be something in there that's the sticky parts the tricky parts",
    "start": "1858230",
    "end": "1864620"
  },
  {
    "text": "the parts that I need to over and learn about what are those with them I'd say a couple things so the biggest",
    "start": "1864620",
    "end": "1870710"
  },
  {
    "text": "one is that basically elves approach is to say okay we're gonna make a really clear bright line distinction between",
    "start": "1870710",
    "end": "1876740"
  },
  {
    "text": "Elm land and JavaScript land and so Elm is saying like okay we have these primitives that we're building on top of",
    "start": "1876740",
    "end": "1882860"
  },
  {
    "text": "these primitives and that lets us and foresees guarantees that give us this really good experience the trouble is L",
    "start": "1882860",
    "end": "1888350"
  },
  {
    "text": "doesn't have a complete wrapper around like every single thing you can do in the browser that's like done in this",
    "start": "1888350",
    "end": "1893720"
  },
  {
    "text": "nice way yet so that means that you end up doing JavaScript Interop for something you know maybe surprising",
    "start": "1893720",
    "end": "1899810"
  },
  {
    "text": "things so there's you know the part of your application that's written in elm and then sometimes you'll come across",
    "start": "1899810",
    "end": "1905210"
  },
  {
    "text": "something we were like where's the elm library for this oh it doesn't exist yet and actually no is it not exist yet but",
    "start": "1905210",
    "end": "1910250"
  },
  {
    "text": "this is just not something you can express in elm at this point so I know in particular some people who have been",
    "start": "1910250",
    "end": "1915770"
  },
  {
    "text": "doing things around content editable like people who are making WYSIWYG editors like text editors and stuff like that death tends to be some pretty Dom",
    "start": "1915770",
    "end": "1922490"
  },
  {
    "text": "mutation heavy stuff right and at this point element just doesn't have a lot of libraries you know a lot of support for",
    "start": "1922490",
    "end": "1929000"
  },
  {
    "text": "like really digging into the Dom and doing the manual manipulation and so when you get to that point you know you",
    "start": "1929000",
    "end": "1934100"
  },
  {
    "text": "just end up going straight to JavaScript Interop and you know obviously that's not as good at the experience as you",
    "start": "1934100",
    "end": "1939920"
  },
  {
    "text": "know when you're building a more general-purpose application you can kind of stick more to just you know elm for",
    "start": "1939920",
    "end": "1945050"
  },
  {
    "text": "ninety five hundred percent of the thing you said a second one I want to ask you a quick question about that and let you come back to the second one so what does",
    "start": "1945050",
    "end": "1951230"
  },
  {
    "text": "that JavaScript Interop look like I mean you're in your L map location how are you wiring in you know I think you used",
    "start": "1951230",
    "end": "1957500"
  },
  {
    "text": "a calendar example for for example in your talk how do you wire in that javascript call into another library yes",
    "start": "1957500",
    "end": "1964160"
  },
  {
    "text": "so the way LM talks to javascript is basically the same way that it talks to servers which is to say all you do is",
    "start": "1964160",
    "end": "1970280"
  },
  {
    "text": "you send immutable data out to JavaScript and then JavaScript can send some data back to you just like call on",
    "start": "1970280",
    "end": "1976280"
  },
  {
    "text": "a function well different from calling a function in in one important way which is that you're only allowed to do it at",
    "start": "1976280",
    "end": "1983090"
  },
  {
    "text": "certain points in your update function like at the end of your update function so again LM programs are built out of",
    "start": "1983090",
    "end": "1990410"
  },
  {
    "text": "functions that don't have side-effects and since JavaScript functions and just have side-effects so another way in",
    "start": "1990410",
    "end": "1996860"
  },
  {
    "text": "which it's similar to kind of talking to servers is that basically the way that you do a sync the way that you do effects in general and elements that you return a",
    "start": "1996860",
    "end": "2003279"
  },
  {
    "text": "value from your update function so update returns here's my new model and that can also return here are some",
    "start": "2003279",
    "end": "2008559"
  },
  {
    "text": "effects that I want the runtime to execute and like what I wanted to do when they're done and so you do",
    "start": "2008559",
    "end": "2013840"
  },
  {
    "text": "JavaScript Interop the same way where you you would either say at the end of update okay I want you to do this HTTP",
    "start": "2013840",
    "end": "2018970"
  },
  {
    "text": "request and when it's done send me back a message to update you know with what came back same thing so in that way you",
    "start": "2018970",
    "end": "2024520"
  },
  {
    "text": "have the same error handling characteristics as you do with servers you don't have to worry about the JavaScript code sort of like sneaking in",
    "start": "2024520",
    "end": "2030610"
  },
  {
    "text": "and breaking your guarantees gotcha but it is more work so you said one of the second way that you thought that there",
    "start": "2030610",
    "end": "2037419"
  },
  {
    "text": "could be a tricky part without and so that would basically be the the server-side story so if you're writing",
    "start": "2037419",
    "end": "2042880"
  },
  {
    "text": "JavaScript you can do the same language on the clients and on the server in Elm you can't get so like theoretically in",
    "start": "2042880",
    "end": "2048878"
  },
  {
    "text": "the sense that Elm compiles to JavaScript yes you can run elm code on node on your server but there is no",
    "start": "2048879",
    "end": "2055240"
  },
  {
    "text": "ecosystem for it right you there's no like HTTP web server library there's no database access there's just nothing and",
    "start": "2055240",
    "end": "2061358"
  },
  {
    "text": "this is by design because basically the choice was sort of should we split focus and and you know go down the browser",
    "start": "2061359",
    "end": "2068530"
  },
  {
    "text": "path and on the server path or try to do a really good job on the browser and really get that solid and then move on",
    "start": "2068530",
    "end": "2074200"
  },
  {
    "text": "to the much bigger project that is the server and that road seemed to make the more sense yeah it makes sense well that",
    "start": "2074200",
    "end": "2079839"
  },
  {
    "text": "does mean that for right now if you want to have the same language on the client the server you just can't do that without okay so one other question",
    "start": "2079839",
    "end": "2085628"
  },
  {
    "text": "whenever you're exploring another language you kind of want to know about the community in the ecosystem what's",
    "start": "2085629",
    "end": "2090940"
  },
  {
    "text": "the ecosystem look like with elm what's the community look like yeah great question so communities it's my favorite",
    "start": "2090940",
    "end": "2098890"
  },
  {
    "text": "parts I mean so we had elm conf last year at st. Louis is gonna be coming back again next year it's the day before",
    "start": "2098890",
    "end": "2105070"
  },
  {
    "text": "a strange that they sort of attached a strange loop we're about to have elm Europe in Paris in June I think actually",
    "start": "2105070",
    "end": "2110380"
  },
  {
    "text": "there are still tickets left for that but very excited about that but I I just like I love meeting community members in",
    "start": "2110380",
    "end": "2116470"
  },
  {
    "text": "person because they're just like really nice really smart people and there's just a great culture of like kind",
    "start": "2116470",
    "end": "2122050"
  },
  {
    "text": "helpful thoughtful friendly people I always think about programming language communities and what's it like if you're",
    "start": "2122050",
    "end": "2127720"
  },
  {
    "text": "a beginner walking into this community is this going to be people who are just like beginners so annoying they don't",
    "start": "2127720",
    "end": "2133070"
  },
  {
    "text": "know anything or is it like oh hey welcome let me help you out let me answer your questions and L was definitely the second kind that's cool",
    "start": "2133070",
    "end": "2138860"
  },
  {
    "text": "as far as ecosystem goes I would say that it is much smaller than JavaScript ecosystem but also much higher quality",
    "start": "2138860",
    "end": "2145130"
  },
  {
    "text": "like much more reliable that's for a few reasons the the biggest one is that elm package so Elm has its own package",
    "start": "2145130",
    "end": "2151580"
  },
  {
    "text": "manager' completely separate from NPM is really strict about a couple things one",
    "start": "2151580",
    "end": "2156830"
  },
  {
    "text": "is that you can only publish elm code to it so if I make a new project and I'm like here's some Elm code great I have",
    "start": "2156830",
    "end": "2163310"
  },
  {
    "text": "published it's like great thanks your your package is now published people can use it as soon as I do JavaScript",
    "start": "2163310",
    "end": "2168650"
  },
  {
    "text": "Interop in that package I can no longer publish it it says no sorry can't do it so what that means is that now the",
    "start": "2168650",
    "end": "2174830"
  },
  {
    "text": "entire ecosystem is all pure elm stuff it's got all the guarantees there's no asterisk there's no you know this this",
    "start": "2174830",
    "end": "2181130"
  },
  {
    "text": "might break at runtime you know on the JavaScript side it just you know it's it's all else but it does of course mean",
    "start": "2181130",
    "end": "2186650"
  },
  {
    "text": "that you know it's going to be smaller right a good example of this is like people wanted a hashing function right",
    "start": "2186650",
    "end": "2191750"
  },
  {
    "text": "like an md5 or a murmur three or you know and somebody's like oh hey can I",
    "start": "2191750",
    "end": "2197690"
  },
  {
    "text": "just like rap you know the JavaScript implementation it's like no you gotta write that actually function in element and so you know and at first people were",
    "start": "2197690",
    "end": "2204860"
  },
  {
    "text": "like oh that's too much work I'll just I'll just do JavaScript Interop but then eventually somebody was like okay I'm just gonna do an L and so now you have",
    "start": "2204860",
    "end": "2210950"
  },
  {
    "text": "hashing functions written in elm on the package very cool so that's one reason another cool benefit of that by the way",
    "start": "2210950",
    "end": "2216080"
  },
  {
    "text": "is that the package manager enforces semantic versioning automatically so if I publish that package then I wrote an",
    "start": "2216080",
    "end": "2222890"
  },
  {
    "text": "elm and then I am like oh I'm gonna delete this function or I'm gonna change the arguments around and then I try to",
    "start": "2222890",
    "end": "2228140"
  },
  {
    "text": "publish that as 1.1 it'll say nope that's a breaking change I saw what you did there I can tell that you changed",
    "start": "2228140",
    "end": "2235100"
  },
  {
    "text": "the API you have to bump the major version number you have to publish that as 2.0 so it makes upgrading like a lot",
    "start": "2235100",
    "end": "2241790"
  },
  {
    "text": "nicer doesn't the experience we've had with NPM I heard a great quote from somebody actually in London after cuke",
    "start": "2241790",
    "end": "2247760"
  },
  {
    "text": "on which they said I didn't switch to Elm because I was unhappy with react I switched to Elm because I was unhappy",
    "start": "2247760",
    "end": "2253820"
  },
  {
    "text": "with NPM Wow yeah I can totally appreciate that you know it's it's a very different experience when that's",
    "start": "2253820",
    "end": "2259700"
  },
  {
    "text": "your whole package ecosystem and and the other thing is just that culturally Elm has this the packaged community how",
    "start": "2259700",
    "end": "2265760"
  },
  {
    "text": "this value that turns out to be really good which is that it's the way things are named so there's this cultural thing",
    "start": "2265760",
    "end": "2272930"
  },
  {
    "text": "where you're really supposed to name packages after what they do so like you have LM CSS which is the CSS",
    "start": "2272930",
    "end": "2279320"
  },
  {
    "text": "preprocessor you have LM tests which is the testing library and pretty much like you know 95 plus percent of people use",
    "start": "2279320",
    "end": "2286310"
  },
  {
    "text": "that one thing what's interesting about this is that what that means is when somebody goes to create a new library",
    "start": "2286310",
    "end": "2292310"
  },
  {
    "text": "the first thing they do is they're like oh I want to name it the obvious thing what's the obvious name so they'll go and look and see if that already exists",
    "start": "2292310",
    "end": "2298580"
  },
  {
    "text": "and so they're more likely to just be like oh this already exists I'll contribute to it and so it's actually kind of weird for you to say oh I'm just",
    "start": "2298580",
    "end": "2305420"
  },
  {
    "text": "gonna make another version just because I want to do things a little bit different that's great yeah and so it",
    "start": "2305420",
    "end": "2311240"
  },
  {
    "text": "ends up having this effect where this sort of people use the term JavaScript fatigue where you just have a million",
    "start": "2311240",
    "end": "2316340"
  },
  {
    "text": "different options to choose from and you don't know which one yeah part of that is that the Elm community is smaller granted but the other part is",
    "start": "2316340",
    "end": "2321980"
  },
  {
    "text": "that you know when people make something new they're sort of culturally drawn to trying to contribute to the existing",
    "start": "2321980",
    "end": "2328280"
  },
  {
    "text": "thing rather than splitting off and making an alternative and so as a newcomer coming in you're more likely to",
    "start": "2328280",
    "end": "2333290"
  },
  {
    "text": "just be like oh there's just one obvious popular way to do this and there aren't just a bunch of different things that I",
    "start": "2333290",
    "end": "2339020"
  },
  {
    "text": "have to you know spend even more time deciding between yeah that's very cool that's really cool actually thank you",
    "start": "2339020",
    "end": "2344270"
  },
  {
    "text": "for the time Richard for chatting with us if you enjoyed some of the stuff you've heard and you want to learn more about Elm make sure to check out",
    "start": "2344270",
    "end": "2350060"
  },
  {
    "text": "Richard's book I think you've got a meet bow that's got three or four chapters out is that right five right now I'm almost done with chapter six very cool",
    "start": "2350060",
    "end": "2357350"
  },
  {
    "text": "so check out his Elm in action you can catch his video for Q con London I'm not sure when it's gonna be published but",
    "start": "2357350",
    "end": "2363320"
  },
  {
    "text": "it'll be out in the next at least three or four months because cuz everything's published within three months and also",
    "start": "2363320",
    "end": "2368570"
  },
  {
    "text": "check out Elm comp in Europe or in the u.s. in st. Louis if you want to learn more in to some deeper conversations so",
    "start": "2368570",
    "end": "2375320"
  },
  {
    "text": "Richard thanks for chatting with us thanks for having me",
    "start": "2375320",
    "end": "2379750"
  },
  {
    "text": "you [Music]",
    "start": "2391840",
    "end": "2398800"
  }
]