[
  {
    "start": "0",
    "end": "186000"
  },
  {
    "text": "thank you very much for attending I know uh your time is very valuable and I always value when people decide to take",
    "start": "4520",
    "end": "11759"
  },
  {
    "text": "their time and listen to me uh present so uh The Talk today is yes reactive DDD",
    "start": "11759",
    "end": "20720"
  },
  {
    "text": "or domain driven design um and so where do the two ideas",
    "start": "20720",
    "end": "26840"
  },
  {
    "text": "the two concepts approaches to software development overlap",
    "start": "26840",
    "end": "32238"
  },
  {
    "text": "um I think that today we're in a bit of a crisis in terms of the way that",
    "start": "32239",
    "end": "38440"
  },
  {
    "text": "software is designed the way it's implemented and uh in my experience over",
    "start": "38440",
    "end": "45039"
  },
  {
    "text": "you know many years of software development I found that it really doesn't have to be uh the way that",
    "start": "45039",
    "end": "52520"
  },
  {
    "text": "things are done today and uh so you know I want to encourage you to to take uh",
    "start": "52520",
    "end": "60840"
  },
  {
    "text": "carefully and and consider uh the information that I'm going to share with you and give it a try it's not um it's",
    "start": "60840",
    "end": "68840"
  },
  {
    "text": "not difficult you can um it is it is emphasizing Simplicity and sometimes",
    "start": "68840",
    "end": "76439"
  },
  {
    "text": "simplistic or simple doesn't mean easy but I don't think that it's overly complex to try to um use these",
    "start": "76439",
    "end": "85280"
  },
  {
    "text": "approaches so",
    "start": "85280",
    "end": "89280"
  },
  {
    "text": "okay well so I think where most of us are or have been for a long time is in",
    "start": "98280",
    "end": "106240"
  },
  {
    "text": "this mode this is a a uh blocking mode where as you see there's a client and a",
    "start": "106240",
    "end": "113479"
  },
  {
    "text": "server now when I when I'm discussing these two concepts I'm not talking about",
    "start": "113479",
    "end": "118600"
  },
  {
    "text": "a remote client a remote server I'm talking about two objects okay and uh as",
    "start": "118600",
    "end": "125680"
  },
  {
    "text": "Rebecca wors Brock has pointed out and in her writings about um responsibility driven design or development um you know",
    "start": "125680",
    "end": "133959"
  },
  {
    "text": "we talk about an object that provides a service as uh a server object and a client that",
    "start": "133959",
    "end": "142519"
  },
  {
    "text": "uses that service or consumes that service as a client object and so what",
    "start": "142519",
    "end": "148879"
  },
  {
    "text": "happens when this client requests a service of the server typically it blocks okay this is",
    "start": "148879",
    "end": "157400"
  },
  {
    "text": "no doubt what you learned uh whenever you started programming uh in whatever phase of your",
    "start": "157400",
    "end": "163680"
  },
  {
    "text": "career you probably have always been working with",
    "start": "163680",
    "end": "168920"
  },
  {
    "text": "blocking and this generally speaking is not well suited on the large scale for",
    "start": "168920",
    "end": "177720"
  },
  {
    "text": "the kinds of systems and the kind kinds of uh infrastructures that we work on",
    "start": "177720",
    "end": "183120"
  },
  {
    "text": "these days um also um this",
    "start": "183120",
    "end": "190000"
  },
  {
    "start": "186000",
    "end": "186000"
  },
  {
    "text": "happens during when we request a behavior of an",
    "start": "190000",
    "end": "195599"
  },
  {
    "text": "object and sometimes even requesting behavior is uh something that's rarely",
    "start": "195599",
    "end": "203120"
  },
  {
    "text": "done these days and I'll show you why I say that in a moment but um the the HTTP",
    "start": "203120",
    "end": "209120"
  },
  {
    "text": "request re response is often a blocking operation where a",
    "start": "209120",
    "end": "215439"
  },
  {
    "text": "remote client will make a rest requests to a remote server service and",
    "start": "215439",
    "end": "222599"
  },
  {
    "text": "essentially the request will block until a response is received but sometimes that's quite a um",
    "start": "222599",
    "end": "230799"
  },
  {
    "text": "a delayed or latent process and then of course when we write something to the database or read something from the",
    "start": "230799",
    "end": "237319"
  },
  {
    "text": "database very often our connections to the database are",
    "start": "237319",
    "end": "243680"
  },
  {
    "text": "synchronous and you might add more to that now there is a um an improvement",
    "start": "243680",
    "end": "250519"
  },
  {
    "text": "today in that some of the uh Frameworks or or web servers or",
    "start": "250519",
    "end": "256680"
  },
  {
    "text": "so forth that that are available are providing some asynchronicity or",
    "start": "256680",
    "end": "262960"
  },
  {
    "text": "asynchrony to their request response um behavior and and also you can get",
    "start": "262960",
    "end": "269880"
  },
  {
    "text": "asynchronous database connection so it's not you know entirely a a loss um today",
    "start": "269880",
    "end": "277440"
  },
  {
    "text": "but it's still not a widespread situation the other problem that we have today is",
    "start": "277440",
    "end": "285840"
  },
  {
    "text": "largely software is implemented using an anemic domain model this is where uh",
    "start": "285840",
    "end": "294680"
  },
  {
    "text": "essentially a domain object or what people liberally call domain object",
    "start": "294680",
    "end": "300320"
  },
  {
    "text": "really has no Behavior it just has data settings on it so you can in Java for",
    "start": "300320",
    "end": "306360"
  },
  {
    "text": "example call set something set something else and and that's sort of seen as the",
    "start": "306360",
    "end": "312759"
  },
  {
    "text": "the way that um a service communicates with the domain object this is",
    "start": "312759",
    "end": "318520"
  },
  {
    "text": "problematic and hopefully I can show you that you know when you",
    "start": "318520",
    "end": "324360"
  },
  {
    "text": "consider a behavior Rich domain object there's actually much less code overall",
    "start": "324360",
    "end": "332199"
  },
  {
    "text": "in a behavior Rich domain object than there is in an anemic object and you can",
    "start": "332199",
    "end": "337600"
  },
  {
    "text": "test the behavior Rich object whereas testing an anemic object is quite",
    "start": "337600",
    "end": "343479"
  },
  {
    "start": "343000",
    "end": "343000"
  },
  {
    "text": "difficult imagine that um you know there aren't just these what seven attributes",
    "start": "343479",
    "end": "349360"
  },
  {
    "text": "on this Java object that's marked as an entity it's annotated as an entity and",
    "start": "349360",
    "end": "355120"
  },
  {
    "text": "it has an ID column and and uh other columns so so essentially what we're",
    "start": "355120",
    "end": "360520"
  },
  {
    "text": "doing with this object is we're just using it to map data into a relational",
    "start": "360520",
    "end": "367000"
  },
  {
    "text": "database table into a row and that is very often how software",
    "start": "367000",
    "end": "373759"
  },
  {
    "text": "is being designed these days I would say you know almost you not 100% but uh it's",
    "start": "373759",
    "end": "381080"
  },
  {
    "text": "a very probably high number in in the 90s uh percent of of times software is",
    "start": "381080",
    "end": "387720"
  },
  {
    "text": "being developed this way now imagine that this object has 25 string attributes on it think of",
    "start": "387720",
    "end": "395479"
  },
  {
    "text": "all the possibil possible ways that a client could set data on this object",
    "start": "395479",
    "end": "402199"
  },
  {
    "text": "incorrectly how do you test that the client is not only perhaps setting the",
    "start": "402199",
    "end": "409960"
  },
  {
    "text": "correct attributes but not setting the incorrect attributes you could probably",
    "start": "409960",
    "end": "415440"
  },
  {
    "text": "write a hundred different tests and not be confident that you've covered all the cases nor is it really necessary if",
    "start": "415440",
    "end": "423120"
  },
  {
    "text": "you're using a rich Behavior I think that where we are",
    "start": "423120",
    "end": "429160"
  },
  {
    "start": "426000",
    "end": "426000"
  },
  {
    "text": "headed today is a message driven uh architecture a message driven",
    "start": "429160",
    "end": "436000"
  },
  {
    "text": "systems message driven domain models even and I think that this is um highly",
    "start": "436000",
    "end": "444280"
  },
  {
    "text": "necessary because most of the software that we see see in you know in",
    "start": "444280",
    "end": "452080"
  },
  {
    "text": "the open today and in the wild is blocking it's not using",
    "start": "452080",
    "end": "459560"
  },
  {
    "text": "processors to uh the extent that they can be used and message driven even at",
    "start": "459560",
    "end": "465720"
  },
  {
    "text": "the object level can help to uh improve",
    "start": "465720",
    "end": "470879"
  },
  {
    "text": "the overall throughput of the system because all cores on a given server can",
    "start": "470879",
    "end": "476199"
  },
  {
    "text": "be used uh to a very high percentage of of their",
    "start": "476199",
    "end": "481639"
  },
  {
    "text": "capacity and this even includes event- driven so any kind of event can also",
    "start": "481639",
    "end": "488280"
  },
  {
    "start": "482000",
    "end": "482000"
  },
  {
    "text": "serve as a message but this is where we actually create a concept in our domain",
    "start": "488280",
    "end": "495000"
  },
  {
    "text": "model that represents a happening that we care about and that happening is",
    "start": "495000",
    "end": "500759"
  },
  {
    "text": "recorded as a fact and that fact can be saved into a data source and that fact",
    "start": "500759",
    "end": "509199"
  },
  {
    "text": "can then be um basically published out or relayed to or broadcast to other uh",
    "start": "509199",
    "end": "516320"
  },
  {
    "text": "subsystems because they have some interest in it and what you see here is not just an",
    "start": "516320",
    "end": "524200"
  },
  {
    "text": "event-driven um architecture but it's also a reactive",
    "start": "524200",
    "end": "529959"
  },
  {
    "text": "architecture because as you can see the the um controller on the left hand side",
    "start": "529959",
    "end": "538040"
  },
  {
    "text": "is sending a commandment message to what in domain driven design we might call an aggregate it's basically an entity that",
    "start": "538040",
    "end": "545000"
  },
  {
    "text": "has a very certain transactional boundary and that command can then be",
    "start": "545000",
    "end": "551040"
  },
  {
    "text": "processed and if accepted an event is emitted that event can be persisted and",
    "start": "551040",
    "end": "556519"
  },
  {
    "text": "even represent the uh help to represent the entire state of the aggregate or",
    "start": "556519",
    "end": "561959"
  },
  {
    "text": "entity and then notice how the commands are actually being cued at the bottom so",
    "start": "561959",
    "end": "567440"
  },
  {
    "text": "this is introducing the idea of an actor this is uh using the actor model so this is where command 1 2 3 and four are",
    "start": "567440",
    "end": "575560"
  },
  {
    "text": "being sequentially um processed by the actor or this aggregate this entity but",
    "start": "575560",
    "end": "582000"
  },
  {
    "text": "they're only being processed uh one at a time in the order in which they occurred which means there's a",
    "start": "582000",
    "end": "587760"
  },
  {
    "text": "non-blocking um and and non-locking kind of environment where the actor doesn't",
    "start": "587760",
    "end": "593800"
  },
  {
    "text": "have to wor worry about concurrency um violations",
    "start": "593800",
    "end": "599880"
  },
  {
    "text": "now I want to tell you a story um is it is this sort of an odd-looking",
    "start": "600880",
    "end": "606000"
  },
  {
    "text": "coffee mug to you yeah so in I think it was early 1987 I was asked to co-author",
    "start": "606000",
    "end": "614519"
  },
  {
    "text": "a book called uh entitled the advanced C programmers guide to",
    "start": "614519",
    "end": "620160"
  },
  {
    "text": "os2 and Microsoft press was the publisher if you know anything about os2",
    "start": "620160",
    "end": "626519"
  },
  {
    "text": "well that explains a lot but um how many here have ever wanted to scare Bill",
    "start": "626519",
    "end": "634079"
  },
  {
    "text": "Gates oh come on yeah I mean I'm not saying I'm you know here's what happened",
    "start": "634079",
    "end": "640519"
  },
  {
    "text": "right I'm writing this book and I came up with this library a message-based library that was using the os2 um IPC",
    "start": "640519",
    "end": "650680"
  },
  {
    "text": "facilities and um what I did is I created a character mode desktop um API",
    "start": "650680",
    "end": "657000"
  },
  {
    "text": "basically that sat on top of the uh Microsoft or or you know the os2",
    "start": "657000",
    "end": "663800"
  },
  {
    "text": "API and it handled full window windowing with a synchronous um control and all",
    "start": "663800",
    "end": "670519"
  },
  {
    "text": "the windows actually you know weren't going through a processing Loop but actually reactive to um the fact that",
    "start": "670519",
    "end": "677600"
  },
  {
    "text": "you know a clock updated or reacting to anything and without dragging this out",
    "start": "677600",
    "end": "682720"
  },
  {
    "text": "further um basically when Bill Gates found out about what I did he said shut",
    "start": "682720",
    "end": "688560"
  },
  {
    "text": "it down it uh it might compete with presentation",
    "start": "688560",
    "end": "694639"
  },
  {
    "text": "manager so my days with reactive and messaging and so forth goes quite a way",
    "start": "694639",
    "end": "701200"
  },
  {
    "text": "ways back and it proves that um you can scare people when you do the things that",
    "start": "701200",
    "end": "706240"
  },
  {
    "text": "you want to do so",
    "start": "706240",
    "end": "711959"
  },
  {
    "text": "um okay so one of the maybe problems that we face with re",
    "start": "711959",
    "end": "719240"
  },
  {
    "text": "reactive today is that sometimes the reactive platform itself requires us to",
    "start": "719240",
    "end": "727320"
  },
  {
    "text": "if you're optimally using the reactive platform to even switch languages that",
    "start": "727320",
    "end": "732880"
  },
  {
    "text": "you're using um can you model with fluency in that",
    "start": "732880",
    "end": "740440"
  },
  {
    "text": "reactive system or platform uh do you have type safety in that platform is it testable",
    "start": "740440",
    "end": "749320"
  },
  {
    "text": "type safety is it testable model fluency and so what I suggest is don't give up",
    "start": "749320",
    "end": "756959"
  },
  {
    "text": "the the languages for example if you're working in Java on a regular basis you don't have to give up Java to get uh",
    "start": "756959",
    "end": "764560"
  },
  {
    "text": "reactive benefits so when I talk about reactive DDD this is what I'm referring to and",
    "start": "764560",
    "end": "772079"
  },
  {
    "text": "you probably you know could recognize these green uh blobs as as uh no say",
    "start": "772079",
    "end": "780240"
  },
  {
    "text": "microservices you might immediately kind of question that and say well there are too many entities in that for it to be a",
    "start": "780240",
    "end": "786160"
  },
  {
    "text": "microservice well it depends on your definition of microservice what I'm talking about here",
    "start": "786160",
    "end": "792839"
  },
  {
    "text": "is um a microservice as a domain driven design bounded context which is not a",
    "start": "792839",
    "end": "799160"
  },
  {
    "text": "monolith but it's also generally speaking not a single entity type okay",
    "start": "799160",
    "end": "804959"
  },
  {
    "text": "so a relatively small model that is um bounded away from other models",
    "start": "804959",
    "end": "812880"
  },
  {
    "text": "because it has a specific set of of language drivers okay uh as in human",
    "start": "812880",
    "end": "818839"
  },
  {
    "text": "language drivers business language drivers that say okay the the bounded",
    "start": "818839",
    "end": "824639"
  },
  {
    "text": "context on the far right and the bounded context on the far left speak different languages and even if they use the same",
    "start": "824639",
    "end": "831759"
  },
  {
    "text": "words um they can have subtle or entirely different meanings for those",
    "start": "831759",
    "end": "838360"
  },
  {
    "text": "words so um and behaviors for that matter so this is what I'm referring to with",
    "start": "838360",
    "end": "844959"
  },
  {
    "text": "reactive DDD and you see how I have a command model and a query model that are",
    "start": "844959",
    "end": "851240"
  },
  {
    "text": "what we would say segregated from each other this is talking about the the cqrs",
    "start": "851240",
    "end": "857600"
  },
  {
    "text": "pattern it doesn't mean though that to have a reactive DDD um uh ecosystem with",
    "start": "857600",
    "end": "865759"
  },
  {
    "text": "microservices that you must use the cqrs pattern but uh we'll find in a few",
    "start": "865759",
    "end": "870839"
  },
  {
    "text": "moments that this can be very handy to use so what is fluent you know I I don't",
    "start": "870839",
    "end": "879320"
  },
  {
    "start": "874000",
    "end": "874000"
  },
  {
    "text": "know how well you can see this definition from the back but um fluent is a way of articulately expressing",
    "start": "879320",
    "end": "887440"
  },
  {
    "text": "yourself and I really have to reiterate that by setting data on entities you are",
    "start": "887440",
    "end": "894519"
  },
  {
    "text": "not conveying the intention of why you are doing that",
    "start": "894519",
    "end": "899680"
  },
  {
    "text": "okay so just think about having an an anemic entity that has um you know",
    "start": "899680",
    "end": "907560"
  },
  {
    "text": "whatever 25 different Setter methods on it maybe not so many but in any case you",
    "start": "907560",
    "end": "917440"
  },
  {
    "text": "set five of those attributes through a Setter method what does that",
    "start": "917440",
    "end": "923440"
  },
  {
    "text": "mean do you require your client to understand what that means in essence",
    "start": "923440",
    "end": "928759"
  },
  {
    "text": "what you're doing is you're putting the burden of uh the client in conforming to",
    "start": "928759",
    "end": "935000"
  },
  {
    "text": "your data model rather than the client understanding what the business language is so when I talk about fluent I'm",
    "start": "935000",
    "end": "943839"
  },
  {
    "start": "942000",
    "end": "942000"
  },
  {
    "text": "talking about potentially creating a protocol such as this one a progress",
    "start": "943839",
    "end": "950560"
  },
  {
    "text": "protocol and uh um actually that's a mistake that should say proposal in case",
    "start": "950560",
    "end": "957880"
  },
  {
    "text": "you're editing my slide um and the proposal has the protocol of you can",
    "start": "957880",
    "end": "968040"
  },
  {
    "text": "submit um a proposal for a client with some expectations um you also have in the",
    "start": "968120",
    "end": "976079"
  },
  {
    "text": "protocol that the pricing set by the expectations of the",
    "start": "976079",
    "end": "981399"
  },
  {
    "text": "client or defined by that in the proposal is deny pricing or it could be",
    "start": "981399",
    "end": "988680"
  },
  {
    "text": "very verify pricing so the pricing is accepted if it's deny pricing then we're going to provide a suggested price as a",
    "start": "988680",
    "end": "997079"
  },
  {
    "text": "money so notice how this is actually a fluent model you are expressing the",
    "start": "997079",
    "end": "1004240"
  },
  {
    "text": "intent of the operations that are being performed on uh this domain",
    "start": "1004240",
    "end": "1012680"
  },
  {
    "text": "object okay so it's fluent we can say proposal. submit for client expectations",
    "start": "1012680",
    "end": "1020000"
  },
  {
    "text": "do don't you just like how that rolls off my tongue may maybe if you just said it under your breath you go wow that",
    "start": "1020000",
    "end": "1026880"
  },
  {
    "text": "just that says it all doesn't it it's it's a proposal submitted for client",
    "start": "1026880",
    "end": "1031959"
  },
  {
    "text": "expectations yeah everybody knows exactly what we're doing right so that's fluent and notice you know I I tweeted",
    "start": "1031959",
    "end": "1039918"
  },
  {
    "text": "about this last night um there's no semicolon in this language ah it's a",
    "start": "1039919",
    "end": "1045839"
  },
  {
    "text": "trick there is it's Java but I've put the semicolon on column 192",
    "start": "1045839",
    "end": "1052720"
  },
  {
    "text": "so yeah I'm emulating a semicolon lless language um now what's interesting too",
    "start": "1052720",
    "end": "1060320"
  },
  {
    "text": "is not only can I have fluency in the domain model itself but what if I",
    "start": "1060320",
    "end": "1068080"
  },
  {
    "text": "could have fluency in the library or the tool set that I'm",
    "start": "1068080",
    "end": "1073160"
  },
  {
    "text": "using for example if I have a stage where actors are playing if I could say",
    "start": "1073160",
    "end": "1078880"
  },
  {
    "text": "stage actor of um a user from a user",
    "start": "1078880",
    "end": "1084200"
  },
  {
    "text": "ID and then into so I'm going to take that user and I'm going to now use",
    "start": "1084200",
    "end": "1091240"
  },
  {
    "text": "another actor the user actor that I just looked up but I didn't just look it up it was looked up",
    "start": "1091240",
    "end": "1097159"
  },
  {
    "text": "asynchronously and therefore I don't know when that user may or may not be found but when it is then I can ask the",
    "start": "1097159",
    "end": "1104400"
  },
  {
    "text": "user to in essence convey a new cont contct onto the user um new contact information",
    "start": "1104400",
    "end": "1112559"
  },
  {
    "text": "for that user and when that is finally done I will and then consume so I can",
    "start": "1112559",
    "end": "1119320"
  },
  {
    "text": "use a restful response to um respond an okay with the serialized",
    "start": "1119320",
    "end": "1126120"
  },
  {
    "text": "user all right so there's an idea of of fluency in the library",
    "start": "1126120",
    "end": "1133120"
  },
  {
    "text": "itself now imagine this um",
    "start": "1133120",
    "end": "1139280"
  },
  {
    "text": "oh and I forgot to mention why why is the otherwise consume there well this is in case the",
    "start": "1139280",
    "end": "1147039"
  },
  {
    "text": "user wasn't found what do you want to do in that case otherwise",
    "start": "1147039",
    "end": "1152120"
  },
  {
    "text": "consume and we then answer a response of not found in our rest response okay so",
    "start": "1152120",
    "end": "1161960"
  },
  {
    "text": "imagine being able to have fluency both in your API and in your domain model it",
    "start": "1161960",
    "end": "1168200"
  },
  {
    "text": "just sounds the way things work the question is is this",
    "start": "1168200",
    "end": "1176240"
  },
  {
    "start": "1172000",
    "end": "1172000"
  },
  {
    "text": "reactive um yes it is reactive because there's you know this sort of invisible",
    "start": "1176240",
    "end": "1184880"
  },
  {
    "text": "thing happening behind the scenes when I as we would say in in Java normally",
    "start": "1184880",
    "end": "1190320"
  },
  {
    "text": "invoke this method when I invoke this method this submit for method is not",
    "start": "1190320",
    "end": "1197880"
  },
  {
    "text": "just an invoke ation on the proposal actor itself instead that submit for",
    "start": "1197880",
    "end": "1204760"
  },
  {
    "text": "invocation is reified into a message that is then delivered asynchronously to",
    "start": "1204760",
    "end": "1212440"
  },
  {
    "text": "um The Proposal which is an actor that is receiving uh messages asynchronously and",
    "start": "1212440",
    "end": "1219640"
  },
  {
    "text": "so this is a command kind of message we're saying it's an imperative we're saying do this all right so in fact it",
    "start": "1219640",
    "end": "1227240"
  },
  {
    "text": "is reactive and yet you don't have to know intuitively as the as the client",
    "start": "1227240",
    "end": "1234919"
  },
  {
    "text": "that you are working in a reactive environment other than the fact that as",
    "start": "1234919",
    "end": "1240440"
  },
  {
    "text": "soon as you submit for you get control back and it means that that actor will",
    "start": "1240440",
    "end": "1247600"
  },
  {
    "text": "not um have an immediate response for you so what does that what does that mean well that's why we have this um and",
    "start": "1247600",
    "end": "1256240"
  },
  {
    "text": "then consume kind of uh uh um",
    "start": "1256240",
    "end": "1261799"
  },
  {
    "text": "method where we can consume the result if there is a result",
    "start": "1261799",
    "end": "1267200"
  },
  {
    "text": "afterwards or we get a completes essentially another name for a future um",
    "start": "1267200",
    "end": "1273120"
  },
  {
    "text": "that that causes this reactive response to be asynchronous and you can deal with",
    "start": "1273120",
    "end": "1279360"
  },
  {
    "text": "it asynchronously type safe well I think",
    "start": "1279360",
    "end": "1284880"
  },
  {
    "start": "1282000",
    "end": "1282000"
  },
  {
    "text": "this is type safe so we're going to uh use this proposal to submit for a client",
    "start": "1284880",
    "end": "1292960"
  },
  {
    "text": "from a client ID and it has the expectations of summary description",
    "start": "1292960",
    "end": "1301320"
  },
  {
    "text": "keywords completed by steps and a",
    "start": "1301320",
    "end": "1306760"
  },
  {
    "text": "price so not only is this fluent and expressive but it's types safe and what",
    "start": "1306760",
    "end": "1312039"
  },
  {
    "text": "we're leveraging here are what what are called value objects to express our",
    "start": "1312039",
    "end": "1317279"
  },
  {
    "text": "ubiquitous language of domain driven design um but but also even at the",
    "start": "1317279",
    "end": "1324400"
  },
  {
    "text": "creational uh point of view we're doing that very fluently and it's typed safe",
    "start": "1324400",
    "end": "1329840"
  },
  {
    "text": "at every single attribute so a summary has a specific type and you know if",
    "start": "1329840",
    "end": "1335919"
  },
  {
    "text": "you've ever seen one of these apis that has that where in into a service method",
    "start": "1335919",
    "end": "1341240"
  },
  {
    "text": "you have to pass um maybe five to 25 string",
    "start": "1341240",
    "end": "1346760"
  },
  {
    "text": "parameters you know in one one single method invocation how do you get the order of those parameters correct I you",
    "start": "1346760",
    "end": "1354440"
  },
  {
    "text": "know I mean I think it takes a genius to remember you know just the order that",
    "start": "1354440",
    "end": "1359760"
  },
  {
    "text": "those parameters are are in or a very tired set of eyes you know how do you",
    "start": "1359760",
    "end": "1365039"
  },
  {
    "text": "actually accomplish that so type safety is an important",
    "start": "1365039",
    "end": "1370279"
  },
  {
    "start": "1368000",
    "end": "1368000"
  },
  {
    "text": "thing however because actors work in a",
    "start": "1370279",
    "end": "1375760"
  },
  {
    "text": "very um you know re reactive or asynchronous",
    "start": "1375760",
    "end": "1381640"
  },
  {
    "text": "way how do we know when the command will",
    "start": "1381640",
    "end": "1386760"
  },
  {
    "text": "be fulfilled was it fulfilled when does the event get",
    "start": "1386760",
    "end": "1392200"
  },
  {
    "text": "emitted has it been permanently persisted to a data",
    "start": "1392200",
    "end": "1398840"
  },
  {
    "text": "source so when we go asynchronous concurrent parallel we are",
    "start": "1398840",
    "end": "1405799"
  },
  {
    "text": "introducing uncertainty and the uncertainty is even introduced um at the",
    "start": "1405799",
    "end": "1412840"
  },
  {
    "text": "entire system level so I was talking about the uncertainty that occurs inside",
    "start": "1412840",
    "end": "1418880"
  },
  {
    "text": "a single bounded context or a microservice with that example of an",
    "start": "1418880",
    "end": "1424240"
  },
  {
    "text": "actor but externally too how are these",
    "start": "1424240",
    "end": "1429279"
  },
  {
    "text": "events for example consumed around the entire system for a a full system",
    "start": "1429279",
    "end": "1436279"
  },
  {
    "text": "solution there's uncertainty here here how do we deal with that how do we model it well I'm going to uh talk about",
    "start": "1436279",
    "end": "1443880"
  },
  {
    "text": "that so here we have a proposal and notice that this proposal implements The",
    "start": "1443880",
    "end": "1452919"
  },
  {
    "text": "Proposal protocol okay so this is the protocol that this proposal understands",
    "start": "1452919",
    "end": "1458520"
  },
  {
    "text": "and I showed you a few slides ago what that protocol is and uh we happen to be",
    "start": "1458520",
    "end": "1465640"
  },
  {
    "text": "an event sourced kind of entity so we're using event sourcing and if if",
    "start": "1465640",
    "end": "1471799"
  },
  {
    "text": "you don't know about that I I won't go into it a lot here but you can look it up it's basically where um the the",
    "start": "1471799",
    "end": "1479480"
  },
  {
    "text": "events that get emitted from this proposal collectively and in order",
    "start": "1479480",
    "end": "1486039"
  },
  {
    "text": "represent the entire state of this proposal entity that that has been built up over time so notice that we have uh",
    "start": "1486039",
    "end": "1494279"
  },
  {
    "text": "two attributes client and expectations these are the ones that have been um put into our proposal through the",
    "start": "1494279",
    "end": "1501840"
  },
  {
    "text": "submit for uh fluent method but how is it that we deal with the uncertainty in",
    "start": "1501840",
    "end": "1509159"
  },
  {
    "text": "this proposal well we can use a progress",
    "start": "1509159",
    "end": "1514640"
  },
  {
    "text": "what is a progress this was not passed in by the client but rather it's an",
    "start": "1514640",
    "end": "1520520"
  },
  {
    "text": "internal um object that we're going to to transition as we know more as we",
    "start": "1520520",
    "end": "1527200"
  },
  {
    "text": "learn more about what has happened to this entity so for example if we hate to",
    "start": "1527200",
    "end": "1533520"
  },
  {
    "text": "roll back but just to just to make a point when the proposal is submitted",
    "start": "1533520",
    "end": "1538960"
  },
  {
    "text": "eventually we will get for example a um a deny pricing or verified pricing",
    "start": "1538960",
    "end": "1546200"
  },
  {
    "text": "because this proposal has some pricing information in it and that will be",
    "start": "1546200",
    "end": "1551279"
  },
  {
    "text": "verified by another bounded context because this is uh a pricing service and",
    "start": "1551279",
    "end": "1558520"
  },
  {
    "text": "that verification is then later communicated and when it is finally",
    "start": "1558520",
    "end": "1564600"
  },
  {
    "start": "1564000",
    "end": "1564000"
  },
  {
    "text": "communicated um we're going to to transition this progress step by step",
    "start": "1564600",
    "end": "1571919"
  },
  {
    "text": "okay so focus in on the progress and if we look in at the progress this is actually a value object and what we're",
    "start": "1571919",
    "end": "1579080"
  },
  {
    "text": "going to do when uh the progress is verified for pricing this is um a side",
    "start": "1579080",
    "end": "1587480"
  },
  {
    "text": "effect free beh Behavior which means it it's using roughly a a functional approach which says we're not going to",
    "start": "1587480",
    "end": "1594640"
  },
  {
    "text": "modify the progress in place what we're actually going to do is return a new progress that is created with the",
    "start": "1594640",
    "end": "1601399"
  },
  {
    "text": "current state of this progress and in addition to it uh specification of",
    "start": "1601399",
    "end": "1607039"
  },
  {
    "text": "pricing verified now this proposal entity can know its current progress it",
    "start": "1607039",
    "end": "1613559"
  },
  {
    "text": "knows uh when it has completed a certain set of steps or when some are incomplete",
    "start": "1613559",
    "end": "1619520"
  },
  {
    "text": "and therefore this modeling um technique helps us to deal with or model the",
    "start": "1619520",
    "end": "1625120"
  },
  {
    "text": "uncertainty so you notice what we're actually doing is we are not trying to model the uncertainty out at the",
    "start": "1625120",
    "end": "1631520"
  },
  {
    "text": "infrastructure level and try to make everything look synchronous and everything look ordered and everything",
    "start": "1631520",
    "end": "1637039"
  },
  {
    "text": "look you know um um non non duplicated and duplicated and so forth what what",
    "start": "1637039",
    "end": "1643799"
  },
  {
    "text": "we're actually doing is we're saying okay we work in a distributed environment we are going to model this",
    "start": "1643799",
    "end": "1651520"
  },
  {
    "text": "for the distributed nature of our service and as we do we're going to name",
    "start": "1651520",
    "end": "1658279"
  },
  {
    "text": "something that is not necessarily you know part of the original idea of a of a",
    "start": "1658279",
    "end": "1664200"
  },
  {
    "text": "proposal and yet we need to and so it's not necessarily the natural model or the",
    "start": "1664200",
    "end": "1670679"
  },
  {
    "text": "real world model but it is a useful model right and that is the goal of a",
    "start": "1670679",
    "end": "1676080"
  },
  {
    "text": "model as we know you know it's been said uh time and again that all models are",
    "start": "1676080",
    "end": "1681640"
  },
  {
    "text": "wrong some are useful and that's what we're trying to accomplish here okay so",
    "start": "1681640",
    "end": "1687679"
  },
  {
    "text": "I've been touching a little bit on microservices and everybody wants to go microservices but what is a micr service",
    "start": "1687679",
    "end": "1694600"
  },
  {
    "text": "anyway and I have a certain definition that I promote and I don't stand alone",
    "start": "1694600",
    "end": "1700000"
  },
  {
    "text": "on this idea although you know you're free to examine the other approaches and and determine um you know what what you",
    "start": "1700000",
    "end": "1708159"
  },
  {
    "text": "you like so defining though the size of a microservice can be a pretty important",
    "start": "1708159",
    "end": "1714440"
  },
  {
    "text": "thing so if everybody else wants to go microservices that means we want to go",
    "start": "1714440",
    "end": "1719559"
  },
  {
    "text": "microservices and just for what it's worth this is what the business wants",
    "start": "1719559",
    "end": "1725799"
  },
  {
    "start": "1721000",
    "end": "1721000"
  },
  {
    "text": "right and it's not a joke I mean you know if you're working for a profitable",
    "start": "1725799",
    "end": "1732519"
  },
  {
    "text": "organization and even nonprofit organizations have to be profitable to exist um um they want this but you know",
    "start": "1732519",
    "end": "1740159"
  },
  {
    "text": "what your job is your job is to convince them that this is what they",
    "start": "1740159",
    "end": "1746200"
  },
  {
    "text": "want okay a come on you didn't get that I worked hard for",
    "start": "1746200",
    "end": "1752960"
  },
  {
    "text": "that okay these are microservices right the other is what a big ball of",
    "start": "1752960",
    "end": "1758679"
  },
  {
    "text": "mud okay so what we're going to do is Define get some definitions here what is",
    "start": "1758679",
    "end": "1765120"
  },
  {
    "text": "a microservice legacy this is legacy why do I say this is Legacy because it makes",
    "start": "1765120",
    "end": "1771000"
  },
  {
    "text": "money if it didn't make money it would be unplugged hopefully right the",
    "start": "1771000",
    "end": "1776360"
  },
  {
    "text": "business would know better oh man we're just dragging this thing around wherever we go now we need to go to the cloud",
    "start": "1776360",
    "end": "1781559"
  },
  {
    "text": "it's not making any money oh but let's Port it anyway you know let's let's lift and shift anyway right um no so that's",
    "start": "1781559",
    "end": "1790240"
  },
  {
    "text": "what Legacy means oh but this is Legacy too",
    "start": "1790240",
    "end": "1800039"
  },
  {
    "start": "1793000",
    "end": "1793000"
  },
  {
    "text": "what's the difference monolith you know I I hear people say monolith and I just wish that",
    "start": "1800279",
    "end": "1807080"
  },
  {
    "text": "they would sort of clarify because I think monoliths is used generally in a",
    "start": "1807080",
    "end": "1812480"
  },
  {
    "text": "very negative connotation not always but generally what they're talking about",
    "start": "1812480",
    "end": "1819440"
  },
  {
    "text": "when they say monolith is a big ball of mud this is something that you know you",
    "start": "1819440",
    "end": "1824760"
  },
  {
    "text": "touch something over here and something way over here breaks and you no explanation until maybe lots of research",
    "start": "1824760",
    "end": "1832200"
  },
  {
    "text": "is done and you have no idea but this is actually a well modularized monolith and",
    "start": "1832200",
    "end": "1837880"
  },
  {
    "text": "so you could do a lot worse than a monolith this may not scale or perform the way that you want it to um or need",
    "start": "1837880",
    "end": "1845399"
  },
  {
    "text": "it to I should say but you know it's a lot easier to to reason about this kind",
    "start": "1845399",
    "end": "1852600"
  },
  {
    "text": "of monolith and so you can imagine where you are using packages or name spaces or",
    "start": "1852600",
    "end": "1858120"
  },
  {
    "text": "whatever uh sort of language that you're using to separate out within a within a",
    "start": "1858120",
    "end": "1863480"
  },
  {
    "text": "single um you know jar file the different modules and as I'll show you in a moment",
    "start": "1863480",
    "end": "1870760"
  },
  {
    "text": "there's a good hint to what these modules might be but I think that this is probably what most people are",
    "start": "1870760",
    "end": "1877039"
  },
  {
    "start": "1873000",
    "end": "1873000"
  },
  {
    "text": "referring to when they talk about a legacy monolith I think they really mean",
    "start": "1877039",
    "end": "1882600"
  },
  {
    "text": "the big ball of mud and again this is where things are so tangled um so",
    "start": "1882600",
    "end": "1889039"
  },
  {
    "text": "ridiculous I I have a colleague here and friend uh you know I I uh we we've",
    "start": "1889039",
    "end": "1894840"
  },
  {
    "text": "worked together from time to time and I remember I tell this story often and and we roll out a uh or that his team of",
    "start": "1894840",
    "end": "1903320"
  },
  {
    "text": "Architects roll out this uml diagram that I'm pretty sure Tom that thatl",
    "start": "1903320",
    "end": "1908639"
  },
  {
    "text": "diagram was um 20 feet long maybe I don't know but you know you could touch",
    "start": "1908639",
    "end": "1916519"
  },
  {
    "text": "something over here in that you know logically shown on the uml diagram that's real code running that could",
    "start": "1916519",
    "end": "1922799"
  },
  {
    "text": "break something over here and you had no idea why and I'm not saying that that was Tom's fault it",
    "start": "1922799",
    "end": "1929840"
  },
  {
    "text": "wasn't um but that's I think you know what what we're talking about when we say monolith often a microservice what",
    "start": "1929840",
    "end": "1936960"
  },
  {
    "text": "is a microservice okay some people say it's a 100 lines of",
    "start": "1936960",
    "end": "1943360"
  },
  {
    "text": "code and you know I",
    "start": "1943360",
    "end": "1948799"
  },
  {
    "text": "frankly I think the person who takes credit for the term microservice um a and the",
    "start": "1948799",
    "end": "1955159"
  },
  {
    "text": "conceptualizing of microservice refers to a microservice as basically 100 lines",
    "start": "1955159",
    "end": "1961159"
  },
  {
    "text": "of code but should it be 400 instead would that be good um maybe a thousand",
    "start": "1961159",
    "end": "1966519"
  },
  {
    "text": "lines of code is that a good microservice I mean if you say 400 and it's 450 lines does that make it a bad",
    "start": "1966519",
    "end": "1973720"
  },
  {
    "text": "microservice I you know I don't know but um here's what happen happens with that 100 line microservice is you start out",
    "start": "1973720",
    "end": "1981519"
  },
  {
    "text": "off with you know and basically these are just entities right so each",
    "start": "1981519",
    "end": "1987320"
  },
  {
    "text": "microservice has a single entity type in it and or at at most a single entity",
    "start": "1987320",
    "end": "1995919"
  },
  {
    "text": "type and all of these entities when something happens to them they they publish a message of some kind to a",
    "start": "1995919",
    "end": "2003200"
  },
  {
    "text": "topic let's say that's Kafka and then any other microservice that is dependent",
    "start": "2003200",
    "end": "2009480"
  },
  {
    "text": "on that message being po um sent through Kafka is consuming that and now that you",
    "start": "2009480",
    "end": "2017720"
  },
  {
    "text": "know we have a microservices architecture the problem with this is",
    "start": "2017720",
    "end": "2024519"
  },
  {
    "text": "not so much right now today as I see this the problem happens over time and",
    "start": "2024519",
    "end": "2031240"
  },
  {
    "start": "2030000",
    "end": "2030000"
  },
  {
    "text": "this is what happens we start thinking about okay now that service a and",
    "start": "2031240",
    "end": "2037039"
  },
  {
    "text": "service Z did this for it does service a still depend on service Z or maybe",
    "start": "2037039",
    "end": "2043919"
  },
  {
    "text": "service Z isn't even relevant anymore could we unplug it oh man this is hard",
    "start": "2043919",
    "end": "2050079"
  },
  {
    "text": "you know now I know that things are improving with with uh service meshes",
    "start": "2050079",
    "end": "2055118"
  },
  {
    "text": "and the kind of uh logging that's going on but just ask yourself how long you",
    "start": "2055119",
    "end": "2060919"
  },
  {
    "text": "could survive that kind of situation um I know I I wouldn't want to",
    "start": "2060919",
    "end": "2067000"
  },
  {
    "text": "okay that's all that I'll say I can't speak for you and so what what some have done is they've said hey I got the",
    "start": "2067000",
    "end": "2072839"
  },
  {
    "text": "solution right um it only costs $400 a month to keep one of those microservices",
    "start": "2072839",
    "end": "2079158"
  },
  {
    "text": "running let's just keep it running we'll never unplug it that way we don't need to know um what depends on it or if it",
    "start": "2079159",
    "end": "2086560"
  },
  {
    "text": "still does anything relevant and so this is what we end up with over time right and and you know and and so you might",
    "start": "2086560",
    "end": "2094679"
  },
  {
    "text": "say well that that was unfair to draw all of those little microservices as a",
    "start": "2094679",
    "end": "2099760"
  },
  {
    "text": "big ball of mud but I think by my definition this is just a distributed big ball of mud because you don't",
    "start": "2099760",
    "end": "2107440"
  },
  {
    "text": "understand it in the same way that you don't understand the monolithic big ball of mud and when you're afraid to unplug",
    "start": "2107440",
    "end": "2115160"
  },
  {
    "text": "something because you don't have any idea if it's still relevant I don't know",
    "start": "2115160",
    "end": "2121400"
  },
  {
    "text": "but I think I'd be worried about that okay whether it's $400 a month or",
    "start": "2121400",
    "end": "2128280"
  },
  {
    "text": "not because this is what it amounts to right $400 a month and it keeps growing",
    "start": "2128280",
    "end": "2133599"
  },
  {
    "text": "and so what is a complex system now I'm not saying you would necessarily create",
    "start": "2133599",
    "end": "2139000"
  },
  {
    "text": "2 million or 5 million lines of code purely through microservices but if you",
    "start": "2139000",
    "end": "2144160"
  },
  {
    "text": "did just think about it from this aspect right two million lines of Code",
    "start": "2144160",
    "end": "2150880"
  },
  {
    "text": "system that's 20,000 microservices at $400 a month that's 8 8 million a",
    "start": "2150880",
    "end": "2159400"
  },
  {
    "text": "month $96 million a year or let's say",
    "start": "2159400",
    "end": "2164480"
  },
  {
    "text": "we're up to5 million lines of code that's 50,000",
    "start": "2164480",
    "end": "2172760"
  },
  {
    "text": "microservices so all that I'm saying here is before you jump down that path",
    "start": "2172760",
    "end": "2178319"
  },
  {
    "text": "think about it okay and then consider that a bounded context as a",
    "start": "2178319",
    "end": "2185800"
  },
  {
    "start": "2183000",
    "end": "2183000"
  },
  {
    "text": "microservice may be the first best step for you this is again not a monolith but",
    "start": "2185800",
    "end": "2191960"
  },
  {
    "text": "it's not as small as a single entity type either and can we still talk to",
    "start": "2191960",
    "end": "2197280"
  },
  {
    "text": "kofka topics or through kofka topics sure why not but now with roughly the",
    "start": "2197280",
    "end": "2203119"
  },
  {
    "text": "same number of entities involved that we had in in the first rendition of that distributed big ball of mud you know",
    "start": "2203119",
    "end": "2210680"
  },
  {
    "text": "what we're talking about is seven um uh bounded contexts or microservices",
    "start": "2210680",
    "end": "2217640"
  },
  {
    "text": "rather than dozens of them and growing so one of our uh things that we",
    "start": "2217640",
    "end": "2225359"
  },
  {
    "text": "need to accomplish is that we have to try to achieve strategic business",
    "start": "2225359",
    "end": "2231920"
  },
  {
    "text": "advantage and that is really the big job that DDD tries tries to solve or is",
    "start": "2231920",
    "end": "2238400"
  },
  {
    "text": "intended to solve um and if you look here and you",
    "start": "2238400",
    "end": "2244960"
  },
  {
    "text": "you go back to in your mind to that anemic client model right that anemic client model could be replaced with just",
    "start": "2244960",
    "end": "2252319"
  },
  {
    "text": "a few methods which is I can set a new address on that anemic model I can set a",
    "start": "2252319",
    "end": "2258560"
  },
  {
    "text": "new telephone number on that anemic model it's fluent it's explicit the",
    "start": "2258560",
    "end": "2264040"
  },
  {
    "text": "intention is revealed through the interface itself but then notice this additional method relocate to this is",
    "start": "2264040",
    "end": "2271800"
  },
  {
    "text": "also changing the address but it has a different use case and the use case is that if this client has just purchased",
    "start": "2271800",
    "end": "2279480"
  },
  {
    "text": "something on our e-commerce system or proposed a a job",
    "start": "2279480",
    "end": "2285119"
  },
  {
    "text": "request that some worker is going to consume and they said oh I just moved",
    "start": "2285119",
    "end": "2291480"
  },
  {
    "text": "house right I need to change my address and they changed the address now all",
    "start": "2291480",
    "end": "2297440"
  },
  {
    "text": "Downstream concerns can be aware that this client's address has changed",
    "start": "2297440",
    "end": "2302960"
  },
  {
    "text": "because this domain event is being sent out through",
    "start": "2302960",
    "end": "2308240"
  },
  {
    "text": "um uh to to other microservices or bounded contexts who need to know this",
    "start": "2308240",
    "end": "2313319"
  },
  {
    "text": "who need to consume that nugget of factual knowledge that says we need to",
    "start": "2313319",
    "end": "2319240"
  },
  {
    "text": "react to this this is a reactive system okay and notice that this client is now",
    "start": "2319240",
    "end": "2325040"
  },
  {
    "text": "testable okay and look just a couple lines of code uh relocate to yes indeed is",
    "start": "2325040",
    "end": "2331960"
  },
  {
    "text": "setting an address value object but it's also emitting an event client relocated",
    "start": "2331960",
    "end": "2339400"
  },
  {
    "text": "this is how the downstream knows and you can imagine that just in one or two tests here test that client relocates",
    "start": "2339400",
    "end": "2346920"
  },
  {
    "text": "right we can assert that the client relocates in the way that",
    "start": "2346920",
    "end": "2352280"
  },
  {
    "text": "we expect it to and we can even assert that the me that the uh domain event was",
    "start": "2352280",
    "end": "2359400"
  },
  {
    "text": "emitted as part of the test acceptance so now if you go back in your mind to",
    "start": "2359400",
    "end": "2364520"
  },
  {
    "text": "that that U monolith that was a well structured modularized monolith what if each of those were a bounded context I",
    "start": "2364520",
    "end": "2371520"
  },
  {
    "text": "just want to make that point because we're going into a more complicated or complex part of the story and that's how",
    "start": "2371520",
    "end": "2378560"
  },
  {
    "start": "2376000",
    "end": "2376000"
  },
  {
    "text": "do we get from there to there well if you have a monolith that is well",
    "start": "2378560",
    "end": "2385599"
  },
  {
    "text": "modularized as bounded context getting to microservices can be a matter of",
    "start": "2385599",
    "end": "2391359"
  },
  {
    "text": "breaking those apart they should already be very Loosely coupled as you see from the interfaces between those bounded",
    "start": "2391359",
    "end": "2398720"
  },
  {
    "text": "contexts or those modules it's already Loosely coupled and so what we're going to do is incur some Network overhead L",
    "start": "2398720",
    "end": "2406720"
  },
  {
    "text": "latency and the uncertainty of you know Network partitions and and whatever it",
    "start": "2406720",
    "end": "2412560"
  },
  {
    "text": "happens to be and um so but but think about how much easier that is than this",
    "start": "2412560",
    "end": "2420560"
  },
  {
    "text": "right now how do you get from the big ball of mud to one of these very very",
    "start": "2420560",
    "end": "2426920"
  },
  {
    "text": "carefully okay sometimes there are",
    "start": "2426920",
    "end": "2434160"
  },
  {
    "text": "um you know these unavoidable situations like Cobalt Cobalt happens you know and",
    "start": "2434160",
    "end": "2440960"
  },
  {
    "text": "it and man it happened in a big way but the one of the big problems with Cobalt",
    "start": "2440960",
    "end": "2447560"
  },
  {
    "text": "is you can no longer hire Cobalt programmers they and and companies are trying to hire them back as cons you",
    "start": "2447560",
    "end": "2454160"
  },
  {
    "text": "know contractors out of retirement to maintain their systems okay so when you",
    "start": "2454160",
    "end": "2460319"
  },
  {
    "text": "get when you're in that situation or another sort of you know very languishing technology or product that",
    "start": "2460319",
    "end": "2467839"
  },
  {
    "text": "that you're leveraging for your applications and services you got to get out of there right but if you're say",
    "start": "2467839",
    "end": "2475720"
  },
  {
    "start": "2473000",
    "end": "2473000"
  },
  {
    "text": "using Java for the big ball of mud or another um currently supported and well",
    "start": "2475720",
    "end": "2482440"
  },
  {
    "text": "supported language and and platform you know you you kind of have to tackle this",
    "start": "2482440",
    "end": "2489640"
  },
  {
    "text": "like um you know one bite at a time and and the one bite at a time means that",
    "start": "2489640",
    "end": "2495720"
  },
  {
    "text": "it's change driven value driven test driven so you don't just dive in and say",
    "start": "2495720",
    "end": "2501200"
  },
  {
    "text": "hey manager you know I you know our team needs like three months to turn this uh monolith into microservices now",
    "start": "2501200",
    "end": "2510760"
  },
  {
    "text": "I Andrew just said it took them 18 months to do that at Hulu right so be",
    "start": "2510760",
    "end": "2515800"
  },
  {
    "text": "careful about saying something like three months but whatever number of months it",
    "start": "2515800",
    "end": "2522400"
  },
  {
    "text": "takes you're probably better off trying to turn the big ball of mud first into a",
    "start": "2522400",
    "end": "2528280"
  },
  {
    "text": "modularized monolith and then taking the steps over here because you can get away",
    "start": "2528280",
    "end": "2534880"
  },
  {
    "text": "with it when the company when the business says this needs to be done",
    "start": "2534880",
    "end": "2540440"
  },
  {
    "text": "okay um but another solution to this",
    "start": "2540440",
    "end": "2545800"
  },
  {
    "text": "when you really have to take the big step of let's get out of here now right",
    "start": "2545800",
    "end": "2551960"
  },
  {
    "text": "is an event-driven approach and this is where you can strangle the big ball of",
    "start": "2551960",
    "end": "2557599"
  },
  {
    "start": "2553000",
    "end": "2553000"
  },
  {
    "text": "mud one microservice at a time and this is where basically you know there are a",
    "start": "2557599",
    "end": "2562960"
  },
  {
    "text": "few approaches to this one approach is use triggers put triggers in your database that whenever a a row is",
    "start": "2562960",
    "end": "2571520"
  },
  {
    "text": "written into a table uh whether that's created or updated you can cause a",
    "start": "2571520",
    "end": "2577839"
  },
  {
    "text": "trigger to raise an event and this is not the most explicit",
    "start": "2577839",
    "end": "2583040"
  },
  {
    "text": "event because it's sort of a little bit hidden but where that happens but it's an event and the",
    "start": "2583040",
    "end": "2590079"
  },
  {
    "text": "microservice uh strangulation can now start to consume those events but notice",
    "start": "2590079",
    "end": "2596359"
  },
  {
    "text": "that this microservice has to um talk",
    "start": "2596359",
    "end": "2601559"
  },
  {
    "text": "back with events to the big ball of mud because if the user is using it directly",
    "start": "2601559",
    "end": "2606960"
  },
  {
    "text": "the the big ball of mud needs to know what happened over there because you can't entirely cut off every single",
    "start": "2606960",
    "end": "2613400"
  },
  {
    "text": "client all at once it just doesn't work that way right so it's strangling but",
    "start": "2613400",
    "end": "2619079"
  },
  {
    "text": "it's you know like one microservice at a time another way to accomplish this is",
    "start": "2619079",
    "end": "2624400"
  },
  {
    "text": "through um a product called deum it's an open- Source uh product that works with",
    "start": "2624400",
    "end": "2630520"
  },
  {
    "text": "my SQL postgress and and maybe a few other databases and uh it doesn't currently",
    "start": "2630520",
    "end": "2636680"
  },
  {
    "text": "support Oracle so you can use oracle's Golden Gate but this is basically a database commit log tailor that that",
    "start": "2636680",
    "end": "2644119"
  },
  {
    "text": "allows you to in essence pick off um you know commits and turn those into events",
    "start": "2644119",
    "end": "2651720"
  },
  {
    "text": "and you accomplish the same thing but without triggers and and that's a lot nicer approach to to do if you can but I",
    "start": "2651720",
    "end": "2659400"
  },
  {
    "text": "just want to to re to make a statement here that I don't think that publishing",
    "start": "2659400",
    "end": "2666160"
  },
  {
    "text": "events to the outside world long term through this kind of solution is the",
    "start": "2666160",
    "end": "2672040"
  },
  {
    "text": "right way to go but it's a tool for the job that probably works or or would work",
    "start": "2672040",
    "end": "2678440"
  },
  {
    "text": "well with a Strangler approach but I don't think that you want to design your new bounded context to publish events",
    "start": "2678440",
    "end": "2686720"
  },
  {
    "text": "out to a you know a topic or something by using an event log like",
    "start": "2686720",
    "end": "2692920"
  },
  {
    "text": "this restructuring this is a different approach it's not really Str wrangling it is in a way but what you're going to",
    "start": "2692920",
    "end": "2700480"
  },
  {
    "start": "2693000",
    "end": "2693000"
  },
  {
    "text": "uh attempt to do is potentially find as many entities as you can that can just",
    "start": "2700480",
    "end": "2707160"
  },
  {
    "text": "represent the things that happen in the domain model break those away",
    "start": "2707160",
    "end": "2713480"
  },
  {
    "text": "restructure them and now use that database commit log to project into a",
    "start": "2713480",
    "end": "2721599"
  },
  {
    "text": "query model which is used for your user interface problem yes well at least",
    "start": "2721599",
    "end": "2728079"
  },
  {
    "text": "Challenge and that is that the command model and the query model are eventually",
    "start": "2728079",
    "end": "2733520"
  },
  {
    "text": "consistent but it could be that you'll take more of the hit in the UI than in",
    "start": "2733520",
    "end": "2739160"
  },
  {
    "text": "the application so that's another consideration um and then as you sort of",
    "start": "2739160",
    "end": "2747280"
  },
  {
    "text": "you know deconstruct that monolith little by little you can um talk to the",
    "start": "2747280",
    "end": "2753280"
  },
  {
    "text": "big ball of mud primarily through the command model and the query model and um",
    "start": "2753280",
    "end": "2759599"
  },
  {
    "text": "you know uh scale out your microservices a lot better than they",
    "start": "2759599",
    "end": "2765960"
  },
  {
    "text": "were and ultimately this is sort of where we want to end up right we want to have the microservices as bounded",
    "start": "2765960",
    "end": "2772800"
  },
  {
    "text": "context but I just have to say this is hard okay you you really can't just um",
    "start": "2772800",
    "end": "2780200"
  },
  {
    "text": "jump into this and say ah you know again we're going to be done in in a few months it's hard work",
    "start": "2780200",
    "end": "2788280"
  },
  {
    "text": "but I think as somebody said sticking with the other way is even harder right so um and this you know I just",
    "start": "2788280",
    "end": "2796920"
  },
  {
    "text": "wanted to kind of wrap up with a few thoughts about why reactive from maybe a",
    "start": "2796920",
    "end": "2801960"
  },
  {
    "text": "completely different Viewpoint how many here are you know okay almost nobody",
    "start": "2801960",
    "end": "2807760"
  },
  {
    "text": "wanted to scare Bill Gates but who who here is is concerned about the ecology",
    "start": "2807760",
    "end": "2814400"
  },
  {
    "text": "you know our environment anybody yeah could I just",
    "start": "2814400",
    "end": "2820000"
  },
  {
    "text": "mention cryptocurrency more hands now so Dave Farley recently tweeted that",
    "start": "2820000",
    "end": "2828040"
  },
  {
    "text": "you know most Industries would never tolerate a 50% you know loss of",
    "start": "2828040",
    "end": "2834800"
  },
  {
    "text": "efficiency for ease of use and yet software developers do this all the time and he said anyone who does that is",
    "start": "2834800",
    "end": "2842079"
  },
  {
    "text": "developing weird software and then our vingo platform tweeted uh you know",
    "start": "2842079",
    "end": "2847800"
  },
  {
    "text": "Donald canth saying yeah that's right in fact if you don't know anything or enough about your",
    "start": "2847800",
    "end": "2854160"
  },
  {
    "text": "Hardware any software that you create for it is going to be pretty weird right",
    "start": "2854160",
    "end": "2859400"
  },
  {
    "text": "so have in mind what we're doing to the to the ecosystem of our Earth by all of",
    "start": "2859400",
    "end": "2867000"
  },
  {
    "text": "these latent L latent you know and and blocking and inefficient pieces of",
    "start": "2867000",
    "end": "2873480"
  },
  {
    "text": "software that we're writing and realize that we're producing",
    "start": "2873480",
    "end": "2878680"
  },
  {
    "text": "1,000x carbon dioxide overhead and now I I'm not just here",
    "start": "2878680",
    "end": "2885760"
  },
  {
    "text": "totally to appeal to this side but there are other factors than just performance",
    "start": "2885760",
    "end": "2890839"
  },
  {
    "text": "and scalability to be aware of okay and",
    "start": "2890839",
    "end": "2896880"
  },
  {
    "text": "um so ultimately we want to rework into",
    "start": "2896920",
    "end": "2902040"
  },
  {
    "start": "2897000",
    "end": "2897000"
  },
  {
    "text": "a reactive system this is what I think makes a lot of sense",
    "start": "2902040",
    "end": "2908000"
  },
  {
    "text": "um and I'm just going to tell you briefly about the the platform the open source",
    "start": "2908000",
    "end": "2914680"
  },
  {
    "text": "platform that I'm developing and and we're building a team around this effort it's called vingo you can say vingo if",
    "start": "2914680",
    "end": "2921720"
  },
  {
    "text": "you want to but I say vingo um seems to I don't know sound better but but we do",
    "start": "2921720",
    "end": "2928160"
  },
  {
    "text": "support these actors as as Aggregates we do support um a reactive HTTP server",
    "start": "2928160",
    "end": "2935680"
  },
  {
    "text": "very lightweight all this stuff is under a megabyte of code or right about a me megabyte of code right now um in terms",
    "start": "2935680",
    "end": "2942119"
  },
  {
    "text": "of you know um Java B code and um uh a",
    "start": "2942119",
    "end": "2947200"
  },
  {
    "text": "lattice which is basically a a grid or you know a compute grid that runs on top",
    "start": "2947200",
    "end": "2952680"
  },
  {
    "text": "of of clustering within the platform which is also all reactive and uh streams is being developed and should be",
    "start": "2952680",
    "end": "2960280"
  },
  {
    "text": "released shortly so I you know kick the tires take a spin it's at github.com",
    "start": "2960280",
    "end": "2966839"
  },
  {
    "start": "2961000",
    "end": "2961000"
  },
  {
    "text": "vingo v l i n Go o and um well I'm I'm just about 50 seconds",
    "start": "2966839",
    "end": "2975680"
  },
  {
    "text": "from end of time uh I do have actually some books and t-shirts and stuff to",
    "start": "2975680",
    "end": "2981200"
  },
  {
    "text": "give away but so if you come to my AMA um this afternoon at is it",
    "start": "2981200",
    "end": "2987359"
  },
  {
    "text": "2:55 yeah I think something like that so I I can I can meet with you at 255 yeah",
    "start": "2987359",
    "end": "2995160"
  },
  {
    "text": "okay thanks a lot for your talk more okay",
    "start": "2995160",
    "end": "3000280"
  }
]