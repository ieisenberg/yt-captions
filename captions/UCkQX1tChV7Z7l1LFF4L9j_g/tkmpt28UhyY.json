[
  {
    "start": "0",
    "end": "90000"
  },
  {
    "text": "[Music]",
    "start": "3320",
    "end": "14289"
  },
  {
    "text": "hi i'm chris juan thanks for joining me for this qcon plus languages track talk on full stack dart",
    "start": "15040",
    "end": "22960"
  },
  {
    "text": "i'll start with a quick introduction so i'm an engineer at the at company where we're building a platform that",
    "start": "23119",
    "end": "28480"
  },
  {
    "text": "puts people in control of their data and we're using dart to do that i'm also a cloud editor at info queue",
    "start": "28480",
    "end": "35200"
  },
  {
    "text": "and this will be my 16th qcon i co-host the tech debt burn down podcast and i'm a blogger at",
    "start": "35200",
    "end": "42840"
  },
  {
    "text": "thestateofme.com you can find links to socials etc at chris.swans.net",
    "start": "42840",
    "end": "48920"
  },
  {
    "text": "so i'll start off talking about why dart where the language came from and why it's been recently surging in",
    "start": "50239",
    "end": "56800"
  },
  {
    "text": "popularity i'll then explore a few of the language features what makes dart different from",
    "start": "56800",
    "end": "62800"
  },
  {
    "text": "some of the other languages out there in particular i'm going to look closely at the differences between just in time",
    "start": "62800",
    "end": "68799"
  },
  {
    "text": "compilation and ahead of time compilation and take a look at dart on docker as a way of deploying dart into",
    "start": "68799",
    "end": "76000"
  },
  {
    "text": "server-side environments there's some great debugging profiling and performance management tools built",
    "start": "76000",
    "end": "82320"
  },
  {
    "text": "into dart and i'll finish with a call to action with some easy ways that you can try out",
    "start": "82320",
    "end": "87759"
  },
  {
    "text": "dart and flutter so why dart",
    "start": "87759",
    "end": "94560"
  },
  {
    "start": "90000",
    "end": "198000"
  },
  {
    "text": "dart emerged from google a little after go and was aimed at the client side",
    "start": "95280",
    "end": "100479"
  },
  {
    "text": "development so they describe dart as a client optimized language for fast apps on any",
    "start": "100479",
    "end": "106240"
  },
  {
    "text": "platform and you can find out more about it at dot dot dev originally there was an idea that dot",
    "start": "106240",
    "end": "113759"
  },
  {
    "text": "vm would go into chrome and people would be able to write faster web pages",
    "start": "113759",
    "end": "120479"
  },
  {
    "text": "using dart as a vm based language a bit like java with applets in the early days of the web",
    "start": "120479",
    "end": "126719"
  },
  {
    "text": "that's not what came to pass what's happened instead is flutter",
    "start": "126719",
    "end": "132480"
  },
  {
    "text": "and flutter is described as google's ui toolkit for building beautiful natively compiled applications for mobile web",
    "start": "132480",
    "end": "140319"
  },
  {
    "text": "desktop and embedded devices from a single code base and you can find out more about flutter",
    "start": "140319",
    "end": "145440"
  },
  {
    "text": "at flutter.dev flutter has surged in popularity recently",
    "start": "145440",
    "end": "150879"
  },
  {
    "text": "firstly as a framework where people could write applications that ran across ios and android and more recently is a",
    "start": "150879",
    "end": "158480"
  },
  {
    "text": "framework that people can use to build web and desktop applications and maybe",
    "start": "158480",
    "end": "163680"
  },
  {
    "text": "even apps that cross over mobile web and desktop from a single code base",
    "start": "163680",
    "end": "171040"
  },
  {
    "text": "flood has really pulled dart up into the red monk rankings and it's now in the",
    "start": "171040",
    "end": "176080"
  },
  {
    "text": "top 20. so the most recent redmonk research on language popularity",
    "start": "176080",
    "end": "182560"
  },
  {
    "text": "which they base upon data that they get out of stack overflow and data that they get out of github repos",
    "start": "182560",
    "end": "189120"
  },
  {
    "text": "found dart being in the top 20 position edging out uh",
    "start": "189120",
    "end": "195519"
  },
  {
    "text": "perl which had previously been there so let's take a look at the language",
    "start": "195519",
    "end": "201920"
  },
  {
    "start": "198000",
    "end": "478000"
  },
  {
    "text": "features of dart hello world is going to look similar to",
    "start": "201920",
    "end": "207760"
  },
  {
    "text": "many other languages that people will be familiar with such as java c-sharp or really anything that's a c derived",
    "start": "207760",
    "end": "215680"
  },
  {
    "text": "language syntax so we've got a void main function here and that's simply invoking print",
    "start": "215680",
    "end": "222480"
  },
  {
    "text": "for hello world being a virtual machine language similar",
    "start": "222480",
    "end": "229360"
  },
  {
    "text": "to java and c-sharp we can make some of the same garbage collection mistakes as we can with java and c-sharp so here's",
    "start": "229360",
    "end": "236799"
  },
  {
    "text": "an example of an anti-pattern where we're creating some arguments",
    "start": "236799",
    "end": "242000"
  },
  {
    "text": "and then passing those arguments into a value object and then doing some null",
    "start": "242000",
    "end": "247200"
  },
  {
    "text": "checking on that object and returning it and this creates lots of temporary objects lots of garbage and gives the",
    "start": "247200",
    "end": "253920"
  },
  {
    "text": "garbage collector lots of work to do later on dart has an async await construct a bit",
    "start": "253920",
    "end": "262720"
  },
  {
    "text": "like javascript so in this example the main section of code is calling the",
    "start": "262720",
    "end": "269040"
  },
  {
    "text": "create order message function that in turn is awaiting an asynchronous",
    "start": "269040",
    "end": "274880"
  },
  {
    "text": "invocation of the fetch user order function and inside of that fetch user order function there's a two second",
    "start": "274880",
    "end": "281680"
  },
  {
    "text": "delay before it's returning a large latte so in this case",
    "start": "281680",
    "end": "287440"
  },
  {
    "text": "the codes firing off asynchronous function invocations and then awaiting the return of those",
    "start": "287440",
    "end": "293120"
  },
  {
    "text": "and uh it gives a really tidy way of programming asynchronously",
    "start": "293120",
    "end": "299840"
  },
  {
    "text": "for concurrency dart has an isolates construct and if you've not already come",
    "start": "300479",
    "end": "305680"
  },
  {
    "text": "across isolates they're described as being independent workers that are similar to threads but don't share",
    "start": "305680",
    "end": "311600"
  },
  {
    "text": "memory communicating only through messages so this will be very familiar to people that have come across languages such as",
    "start": "311600",
    "end": "318080"
  },
  {
    "text": "erlang and with dart it's pretty straightforward to create an actor model",
    "start": "318080",
    "end": "323360"
  },
  {
    "text": "in the language because of this isolate based concurrency",
    "start": "323360",
    "end": "328479"
  },
  {
    "text": "a recent addition to dart is sound null safety and that arrived in march this year",
    "start": "329840",
    "end": "336400"
  },
  {
    "text": "and prevents variables from being nulls and so in these top examples",
    "start": "336400",
    "end": "343199"
  },
  {
    "text": "uh a number of different variables are being defined uh we can see an example",
    "start": "343199",
    "end": "348960"
  },
  {
    "text": "of duct typing where there's an inference of the variable i uh being set to 42 becoming an integer",
    "start": "348960",
    "end": "356800"
  },
  {
    "text": "uh and in each of these cases those variables can't be set to null",
    "start": "356800",
    "end": "362720"
  },
  {
    "text": "that would create a compiler error at compile time",
    "start": "362720",
    "end": "367840"
  },
  {
    "text": "in order to have backwards compatibility uh dart still has nullable variables and",
    "start": "367840",
    "end": "374000"
  },
  {
    "text": "they're indicated by adding a question mark to the end of the type declaration so in this case we can define an int",
    "start": "374000",
    "end": "381680"
  },
  {
    "text": "question mark a nullable int and set that to null",
    "start": "381680",
    "end": "387039"
  },
  {
    "text": "dart and most of the dart ecosystem around the core language are licensed using the bsd three clause license and",
    "start": "388479",
    "end": "396160"
  },
  {
    "text": "that's an osi approved license this is one of the things that i think gives the community some confidence",
    "start": "396160",
    "end": "402720"
  },
  {
    "text": "that it's not just a google thing and that there's a",
    "start": "402720",
    "end": "408400"
  },
  {
    "text": "healthy community building up around the language and that the language would be able to have a",
    "start": "408400",
    "end": "415120"
  },
  {
    "text": "future uh even if for whatever reasons google chose uh to de-emphasize its own use of dart",
    "start": "415120",
    "end": "421759"
  },
  {
    "text": "and flutter though i'd also point out that google are using dart and flutter for a great many of",
    "start": "421759",
    "end": "428319"
  },
  {
    "text": "their own things right now which is helping the language and its ecosystem to become more vibrant",
    "start": "428319",
    "end": "436400"
  },
  {
    "text": "the package manager for dart is called pub.dev and that can be found at pub.dev",
    "start": "436400",
    "end": "442800"
  },
  {
    "text": "uh within an application a set of dependencies are defined using",
    "start": "442800",
    "end": "448720"
  },
  {
    "text": "a yaml file called pubspec and there's quite a sophisticated solver",
    "start": "448720",
    "end": "454080"
  },
  {
    "text": "on the back end which will take the declarations from that pub spec and find the",
    "start": "454080",
    "end": "460560"
  },
  {
    "text": "point versions that will match uh the the demands that the application",
    "start": "460560",
    "end": "465680"
  },
  {
    "text": "is asking for when it comes to actually building apps uh then dart pub get or flutter pub get",
    "start": "465680",
    "end": "473599"
  },
  {
    "text": "are used to fetch the dependencies from pub.dev",
    "start": "473599",
    "end": "479240"
  },
  {
    "text": "so taking a look at the various performance trade-offs between just in time compilation and ahead of",
    "start": "480800",
    "end": "487120"
  },
  {
    "text": "time compilation this is one of the areas where dart is a little different from",
    "start": "487120",
    "end": "493280"
  },
  {
    "text": "most other languages because in most cases languages support either just in time compilation or ahead of time",
    "start": "493280",
    "end": "500160"
  },
  {
    "text": "compilation but da offers both",
    "start": "500160",
    "end": "504639"
  },
  {
    "text": "so to illustrate what's going on here i'm going to use a trivial application and this is really just",
    "start": "505199",
    "end": "511199"
  },
  {
    "text": "a more useful version of hello world so in this case it's printing out platform version information",
    "start": "511199",
    "end": "517919"
  },
  {
    "text": "which gives an output very similar to what we get from running dart minus minus version",
    "start": "517919",
    "end": "524159"
  },
  {
    "text": "and that's done by importing the platform function and then invoking",
    "start": "524159",
    "end": "529440"
  },
  {
    "text": "that with version so for just in time",
    "start": "529440",
    "end": "536320"
  },
  {
    "text": "compilation i can just dart run the source code in the virtual machine",
    "start": "536320",
    "end": "542080"
  },
  {
    "text": "and if i time that then i can see that it takes a little over six seconds",
    "start": "542080",
    "end": "547440"
  },
  {
    "text": "to get an output in this case it's showing me that i'm using uh the stable version 214.4 of the",
    "start": "547440",
    "end": "554480"
  },
  {
    "text": "sdk and that i'm running it on a linux box on arm 64 hardware",
    "start": "554480",
    "end": "561279"
  },
  {
    "text": "so that's quite a bit of time and uh that's because time is being spent spinning up the virtual machine",
    "start": "561279",
    "end": "568959"
  },
  {
    "text": "passing the source code into it turning that source codes into bytecode and then running that bytecode",
    "start": "568959",
    "end": "576920"
  },
  {
    "text": "it's a different story with ahead of time compilation so here we're taking the source code and compiling it into",
    "start": "578800",
    "end": "586000"
  },
  {
    "text": "a platform native binary and i'm taking the time that it takes to",
    "start": "586000",
    "end": "591200"
  },
  {
    "text": "run that platform native binary which is only a bit less than 0.03 of a second so",
    "start": "591200",
    "end": "596800"
  },
  {
    "text": "much much faster than spinning up the same code in a vm",
    "start": "596800",
    "end": "602720"
  },
  {
    "text": "of course there's a trade-off here the compilation process to produce that native binary",
    "start": "603519",
    "end": "609040"
  },
  {
    "text": "is longer than running the source code through the virtual machine on its own and in fact",
    "start": "609040",
    "end": "614640"
  },
  {
    "text": "there's a trade-off in many different dimensions here because although the ahead of time",
    "start": "614640",
    "end": "620480"
  },
  {
    "text": "compiled code is fast and uh has no cold start overhead making it very suitable for functions as a service",
    "start": "620480",
    "end": "627360"
  },
  {
    "text": "types of environments it doesn't benefit from the just-in-time",
    "start": "627360",
    "end": "632399"
  },
  {
    "text": "compiler being able to see the actual running code in its running environment",
    "start": "632399",
    "end": "639360"
  },
  {
    "text": "and thus able to make optimizations over time so some of the things that we've become",
    "start": "639360",
    "end": "644480"
  },
  {
    "text": "used to in terms of the long-running performance optimization of java say those can be",
    "start": "644480",
    "end": "651200"
  },
  {
    "text": "done with dart running in a vm but that's traded off against the the",
    "start": "651200",
    "end": "657120"
  },
  {
    "text": "overhead of starting up the vm",
    "start": "657120",
    "end": "661240"
  },
  {
    "start": "660000",
    "end": "871000"
  },
  {
    "text": "looking briefly at dart on docker this is the way that most dart codes going to get deployed",
    "start": "662640",
    "end": "669519"
  },
  {
    "text": "onto the server side because docker containers provide a really convenient way of packaging up",
    "start": "669519",
    "end": "676480"
  },
  {
    "text": "the dart code whether it's being turned into a native binary or whether we're running it",
    "start": "676480",
    "end": "682320"
  },
  {
    "text": "inside of the vm so here's a typical docker file for an",
    "start": "682320",
    "end": "687839"
  },
  {
    "text": "ahead of time compiled dart binary and it's a two-stage docker build",
    "start": "687839",
    "end": "693680"
  },
  {
    "text": "so in the first stage we're taking some source code and turning it into the binary and in the second stage we're",
    "start": "693680",
    "end": "700800"
  },
  {
    "text": "taking that binary and adding it to a minimal layer of libraries and defining an entry point",
    "start": "700800",
    "end": "707519"
  },
  {
    "text": "so going through line by line from dart as build is making use of the official dart image",
    "start": "707519",
    "end": "715600"
  },
  {
    "text": "which packages up the sdk and all the tools that are needed to build dart applications",
    "start": "715600",
    "end": "722639"
  },
  {
    "text": "we're defining a working directory and copying some source code into that working directory",
    "start": "722639",
    "end": "728639"
  },
  {
    "text": "dart pubget then goes off and gets any dependencies from pub.dev",
    "start": "728639",
    "end": "734560"
  },
  {
    "text": "and then dark compile xe is taking the source code and turning that into a",
    "start": "734560",
    "end": "739680"
  },
  {
    "text": "native binary in the second stage of the build we're starting from scratch and this will be a",
    "start": "739680",
    "end": "746320"
  },
  {
    "text": "pattern that will be particularly familiar to the go community where it's uh fairly",
    "start": "746320",
    "end": "751680"
  },
  {
    "text": "typical to deploy a statically linked go binary into a scratch container",
    "start": "751680",
    "end": "758800"
  },
  {
    "text": "dart though can't have statically linked binaries one of the design philosophy",
    "start": "758800",
    "end": "764399"
  },
  {
    "text": "decisions early on in the languages development is to have it dynamically linked and so we need a layer of runtime",
    "start": "764399",
    "end": "772160"
  },
  {
    "text": "libraries in order to sustain that dynamic linking they can be taken from the runtime",
    "start": "772160",
    "end": "777920"
  },
  {
    "text": "directory inside of the official image and they're pretty small only a couple of meg so it doesn't blow out the",
    "start": "777920",
    "end": "785839"
  },
  {
    "text": "resulting container we then copy in the binary that's going to make use of those libraries and the",
    "start": "785839",
    "end": "792480"
  },
  {
    "text": "entry point is defined at the end looking at the image sizes built",
    "start": "792480",
    "end": "798720"
  },
  {
    "text": "from that docker file for a trivial application like dart show platform then",
    "start": "798720",
    "end": "804399"
  },
  {
    "text": "we can see that the images are only three to a little over four megs depending upon",
    "start": "804399",
    "end": "810800"
  },
  {
    "text": "the underlying platform so 32-bit arm results in their smallest images",
    "start": "810800",
    "end": "816959"
  },
  {
    "text": "up to 64-bit x86 with the heftier images but not a huge",
    "start": "816959",
    "end": "822240"
  },
  {
    "text": "amount of difference and it's still a pretty good story for a non-trivial application",
    "start": "822240",
    "end": "828959"
  },
  {
    "text": "so these are the images for the secondary server in our privacy preserving platform",
    "start": "828959",
    "end": "836560"
  },
  {
    "text": "and this is a private data store where people can store their data and",
    "start": "836560",
    "end": "844399"
  },
  {
    "text": "give fine gain control over who has access to it and the docker image for that is still",
    "start": "844399",
    "end": "850639"
  },
  {
    "text": "beneath 6meg on x8664 and is a little bit smaller for the arm",
    "start": "850639",
    "end": "857279"
  },
  {
    "text": "variants but that gives us a variety of different places that we can run it",
    "start": "857279",
    "end": "863120"
  },
  {
    "text": "so it's possible to have a very lightweight quick starting uh container image",
    "start": "863120",
    "end": "869360"
  },
  {
    "text": "containing dart code turning now to",
    "start": "869360",
    "end": "875120"
  },
  {
    "start": "871000",
    "end": "1003000"
  },
  {
    "text": "debugging profiling and performance management",
    "start": "875120",
    "end": "879680"
  },
  {
    "text": "dart and flutter come with a comprehensive suite of developer tools known as devtools and this matrix",
    "start": "880399",
    "end": "887600"
  },
  {
    "text": "illustrates which of the dev tools are available for which of the target",
    "start": "887600",
    "end": "892880"
  },
  {
    "text": "environments so web is a little bit lacking in tooling because the tooling is",
    "start": "892880",
    "end": "898639"
  },
  {
    "text": "instead really in the browser for that but for flutter mobile and desktop applications there's a full suite of",
    "start": "898639",
    "end": "906079"
  },
  {
    "text": "tooling with debugger logging view app size cpu profiling memory and",
    "start": "906079",
    "end": "911760"
  },
  {
    "text": "network views performance and the flutter inspector and pretty much all of that is also",
    "start": "911760",
    "end": "917920"
  },
  {
    "text": "available for command line applications that we might run server-side so the only missing piece there is flutter",
    "start": "917920",
    "end": "924480"
  },
  {
    "text": "inspector which of course is dedicated to flutter apps",
    "start": "924480",
    "end": "929360"
  },
  {
    "text": "so having a look at some of the prettier charts that can be generated from devtools the memory view is",
    "start": "930320",
    "end": "937600"
  },
  {
    "text": "excellent for figuring out how often an application is growing its memory",
    "start": "937600",
    "end": "945279"
  },
  {
    "text": "utilization where garbage collection is taking place and how snapshots",
    "start": "945279",
    "end": "951680"
  },
  {
    "text": "are happening with that and flame charts",
    "start": "951680",
    "end": "956720"
  },
  {
    "text": "for cpu utilization are really helpful for finding hotspots in code",
    "start": "956720",
    "end": "962399"
  },
  {
    "text": "and being able to deal with those",
    "start": "962399",
    "end": "966639"
  },
  {
    "text": "i wouldn't know however that devtools needs profiling support",
    "start": "967519",
    "end": "972560"
  },
  {
    "text": "and so that profiling is built into the virtual machine so on the server side if running in just in time on the virtual",
    "start": "972560",
    "end": "979680"
  },
  {
    "text": "machine all of that's there whereas on server side with an ahead of",
    "start": "979680",
    "end": "985279"
  },
  {
    "text": "time compiled binary the profiling isn't there unlike the snapshots that are provided",
    "start": "985279",
    "end": "991600"
  },
  {
    "text": "for the various mobile application and desktop application",
    "start": "991600",
    "end": "996880"
  },
  {
    "text": "environments which can still provide profiling information",
    "start": "996880",
    "end": "1002399"
  },
  {
    "start": "1003000",
    "end": "1176000"
  },
  {
    "text": "so coming to a call for action here's some easy ways that you can try out dart and flutter",
    "start": "1005199",
    "end": "1012160"
  },
  {
    "text": "so dart has an online application called dart pad that allows dart applications to be run",
    "start": "1013519",
    "end": "1021040"
  },
  {
    "text": "in the browser and in this particular case a google code lab is illustrating",
    "start": "1021040",
    "end": "1028640"
  },
  {
    "text": "the building of a flutter application so on the left hand side is the source code in the dart pad environment so it can be",
    "start": "1028640",
    "end": "1035038"
  },
  {
    "text": "run live and on the right hand side is a form that's been built using the flutter framework so there's a",
    "start": "1035039",
    "end": "1042000"
  },
  {
    "text": "link at the bottom left there that will take you to that codepad example where you can try that out",
    "start": "1042000",
    "end": "1050000"
  },
  {
    "text": "for server side i'd really recommend giving quick labs a try and particularly this lab",
    "start": "1050880",
    "end": "1056640"
  },
  {
    "text": "dedicated to the dart functions framework which runs through building a full stack application so flutter at the",
    "start": "1056640",
    "end": "1063520"
  },
  {
    "text": "front end through to some dart functions at the back end",
    "start": "1063520",
    "end": "1068640"
  },
  {
    "text": "running in cloud run on google cloud platform and with quick labs that will give",
    "start": "1068640",
    "end": "1075280"
  },
  {
    "text": "not just the the training setup but also burner gtp accounts",
    "start": "1075280",
    "end": "1081679"
  },
  {
    "text": "in order to run that lab and try it out and google almost continuously",
    "start": "1081679",
    "end": "1087600"
  },
  {
    "text": "have training promotions going on related to quick labs that allow",
    "start": "1087600",
    "end": "1093120"
  },
  {
    "text": "free 30-day subscriptions to be set up so that you can try out this quick lab",
    "start": "1093120",
    "end": "1099360"
  },
  {
    "text": "and some of the other ones so a quick review before we move on to",
    "start": "1099360",
    "end": "1106480"
  },
  {
    "text": "questions and answers i started off talking about why dart",
    "start": "1106480",
    "end": "1111919"
  },
  {
    "text": "what's different about dart from other languages and why is it surging in popularity and that mainly comes down to",
    "start": "1111919",
    "end": "1118960"
  },
  {
    "text": "flutter and the adoption of that as a cross-platform front-end development framework",
    "start": "1118960",
    "end": "1126320"
  },
  {
    "text": "i've looked at some of the language features of dart which make it distinctive from the other languages out there and particularly the",
    "start": "1126320",
    "end": "1133520"
  },
  {
    "text": "ability to have both just in time and ahead of time compilation from the same code base",
    "start": "1133520",
    "end": "1141440"
  },
  {
    "text": "for doing full stack dart it's really handy to be able to deploy dart on docker and having official image support",
    "start": "1141520",
    "end": "1149120"
  },
  {
    "text": "for those two stage builds is very helpful and also very helpful of dev tools",
    "start": "1149120",
    "end": "1156480"
  },
  {
    "text": "which provide really rich views onto debugging profiling and performance management",
    "start": "1156480",
    "end": "1163679"
  },
  {
    "text": "getting started with dart and flutter is very easy you can do it with just a browser and so my call to action would",
    "start": "1163760",
    "end": "1170400"
  },
  {
    "text": "be if you're not familiar with da give it a try it's very easy",
    "start": "1170400",
    "end": "1176399"
  },
  {
    "start": "1176000",
    "end": "1187000"
  },
  {
    "text": "thanks very much for your attention on this session and i look forward to answering questions",
    "start": "1177120",
    "end": "1183600"
  },
  {
    "text": "hello chris hey billy hey excellent talk um really interesting to see uh what's been",
    "start": "1186799",
    "end": "1193360"
  },
  {
    "start": "1187000",
    "end": "1363000"
  },
  {
    "text": "happening with dart over the last 10 years or so um and i see a puppy in the background",
    "start": "1193360",
    "end": "1198960"
  },
  {
    "text": "that's always good um yeah i think they're about to kick off",
    "start": "1198960",
    "end": "1204720"
  },
  {
    "text": "that's that's fine um let's go straight to the the questions",
    "start": "1204720",
    "end": "1210240"
  },
  {
    "text": "in the chat see what you can do here um dart versus go what are the typical use",
    "start": "1210240",
    "end": "1216480"
  },
  {
    "text": "cases i guess for dart and forgo i think it's yeah first of all",
    "start": "1216480",
    "end": "1222480"
  },
  {
    "text": "interesting that both of these languages have emerged out of google and that you know google's developing stuff um",
    "start": "1222480",
    "end": "1229039"
  },
  {
    "text": "internally using them both and if i look at what google are actually doing with that",
    "start": "1229039",
    "end": "1234640"
  },
  {
    "text": "then you know they're using go for developing sort of infrastructure software",
    "start": "1234640",
    "end": "1240400"
  },
  {
    "text": "and kubernetes would be a perfect example so really a sort of redo of google's borg",
    "start": "1240400",
    "end": "1247840"
  },
  {
    "text": "um in in a manner that they've been able to you know open source and turn into",
    "start": "1247840",
    "end": "1254000"
  },
  {
    "text": "a very successful community project and and kind of then built a",
    "start": "1254000",
    "end": "1259200"
  },
  {
    "text": "whole bunch of services around it so yeah i really feel like google's trying to make google cloud",
    "start": "1259200",
    "end": "1265200"
  },
  {
    "text": "the go-to place for running kubernetes and of course they've got competition from uh from aws and and from azure and",
    "start": "1265200",
    "end": "1271679"
  },
  {
    "text": "others on that whereas dart and flutter are being used to",
    "start": "1271679",
    "end": "1277679"
  },
  {
    "text": "develop front ends for things uh so flutter in particular is uh you",
    "start": "1277679",
    "end": "1283280"
  },
  {
    "text": "know giving the ability to develop the same application that's going to run",
    "start": "1283280",
    "end": "1288320"
  },
  {
    "text": "on you know firstly android and ios but then later android ios and web",
    "start": "1288320",
    "end": "1294000"
  },
  {
    "text": "um and and then now uh android ios and desktop and one of the things that",
    "start": "1294000",
    "end": "1299679"
  },
  {
    "text": "caught my attention under that was canonical choosing flutter as the",
    "start": "1299679",
    "end": "1306400"
  },
  {
    "text": "new uh desktop ui uh framework that they're using for the",
    "start": "1306400",
    "end": "1311760"
  },
  {
    "text": "ubuntu one installer um and so yeah i think that's a place that uh many",
    "start": "1311760",
    "end": "1317679"
  },
  {
    "text": "people will be having an encounter with a flood or desktop application and probably not even realizing it because",
    "start": "1317679",
    "end": "1323120"
  },
  {
    "text": "we often don't ask you know which frameworks have been used to develop desktop apps",
    "start": "1323120",
    "end": "1328880"
  },
  {
    "text": "interesting um so i think you answered the one about",
    "start": "1328880",
    "end": "1335039"
  },
  {
    "text": "open telemetry i guess there isn't much to say there's not it's not much movement yeah and i think there's people",
    "start": "1335039",
    "end": "1342400"
  },
  {
    "text": "asking for it um and you know it looks like not very much progress",
    "start": "1342400",
    "end": "1347840"
  },
  {
    "text": "is being made on that okay but the next question is",
    "start": "1347840",
    "end": "1353760"
  },
  {
    "text": "is start mostly applicable for mobile dev um how about creating microservices",
    "start": "1353760",
    "end": "1359120"
  },
  {
    "text": "or serverless i think you brought up quick labs um so",
    "start": "1359120",
    "end": "1365600"
  },
  {
    "start": "1363000",
    "end": "1497000"
  },
  {
    "text": "yeah the whole point of the conversation of full stack dart is yeah if if dot adoption has been driven",
    "start": "1365600",
    "end": "1372559"
  },
  {
    "text": "by people using flutter to develop you know mobile apps web apps desktop apps",
    "start": "1372559",
    "end": "1378159"
  },
  {
    "text": "then in most cases those apps are going to have some kind of back end and so are you going to go and learn a",
    "start": "1378159",
    "end": "1383600"
  },
  {
    "text": "different programming language to write that back end or are you going to use dart to to write the back end",
    "start": "1383600",
    "end": "1389760"
  },
  {
    "text": "and so you know darts always had the ability to write command line applications",
    "start": "1389760",
    "end": "1395520"
  },
  {
    "text": "and so you know if you can structure your back end as basically just a command line application then yeah",
    "start": "1395520",
    "end": "1400559"
  },
  {
    "text": "that's immediately going to be a good fit but things like the uh the functions framework are then providing easy ways",
    "start": "1400559",
    "end": "1408880"
  },
  {
    "text": "to write serverless functions in in dart now there's not yet any functions as a",
    "start": "1408880",
    "end": "1414320"
  },
  {
    "text": "service platform that's got native dart support in it but if we sort of look at the",
    "start": "1414320",
    "end": "1420960"
  },
  {
    "text": "direction google's been taking with this then you know they've got cloud run which is basically",
    "start": "1420960",
    "end": "1426880"
  },
  {
    "text": "serverless platform running containers and so they're just making it easy for you to",
    "start": "1426880",
    "end": "1433120"
  },
  {
    "text": "put dart into a container uh and then you know you can throw that container onto onto cloud run or",
    "start": "1433120",
    "end": "1440159"
  },
  {
    "text": "anywhere else that you can run containers in a kind of event driven uh environment",
    "start": "1440159",
    "end": "1446799"
  },
  {
    "text": "and you know another piece to that as well has been recently the uh the multi-platform support for um",
    "start": "1446799",
    "end": "1453840"
  },
  {
    "text": "for on docker so yeah i think actually",
    "start": "1453840",
    "end": "1459760"
  },
  {
    "text": "recently when i was recording that video um i i was still maintaining a fork of the",
    "start": "1459760",
    "end": "1466159"
  },
  {
    "text": "official uh dart image for docker in order to have on v7 and arm 64",
    "start": "1466159",
    "end": "1471919"
  },
  {
    "text": "support and that's now being put into the official image",
    "start": "1471919",
    "end": "1477360"
  },
  {
    "text": "um and so you know just you you can do from dart and expect that to work on x86 arm64 on v7",
    "start": "1477360",
    "end": "1486799"
  },
  {
    "text": "which which obviously means that we can keep the the raspberry pi's and the aws gravitons happy with all of that stuff",
    "start": "1486799",
    "end": "1493679"
  },
  {
    "text": "that's what we all want to do of course um wasn't there i seem to recall that",
    "start": "1493679",
    "end": "1498840"
  },
  {
    "start": "1497000",
    "end": "1566000"
  },
  {
    "text": "google uh app engine used to have dart support is that not here anymore",
    "start": "1498840",
    "end": "1505440"
  },
  {
    "text": "in the old old days like five six years ago yeah so they so so app engine is still talked about",
    "start": "1505440",
    "end": "1512240"
  },
  {
    "text": "as a target for um for dart from a full stack dart perspective",
    "start": "1512240",
    "end": "1518159"
  },
  {
    "text": "but that's using app engine to run containers rather than using using app engine with native language support",
    "start": "1518159",
    "end": "1526400"
  },
  {
    "text": "oh okay okay okay and yeah way back in the early early days there was even talk",
    "start": "1526400",
    "end": "1532000"
  },
  {
    "text": "about putting a dart vm into chrome and you know the",
    "start": "1532000",
    "end": "1537840"
  },
  {
    "text": "the reality is things went in a different direction and so um you know what was previously dart to native which",
    "start": "1537840",
    "end": "1545039"
  },
  {
    "text": "became dark compile um is is all about taking dart and",
    "start": "1545039",
    "end": "1550159"
  },
  {
    "text": "turning it into platform native binaries whether that's in ios or whatever else",
    "start": "1550159",
    "end": "1557799"
  },
  {
    "text": "of course i'm seeing you answered a bunch of questions",
    "start": "1557840",
    "end": "1563120"
  },
  {
    "text": "i hope i'm not missing one um yeah the last one here is how does it how does it start compared to kotlin i",
    "start": "1563120",
    "end": "1570320"
  },
  {
    "start": "1566000",
    "end": "1783000"
  },
  {
    "text": "don't know if you have experience with kotlin so i've not had direct experience of kotlin so",
    "start": "1570320",
    "end": "1576320"
  },
  {
    "text": "that's one what i'm going to to struggle with um",
    "start": "1576320",
    "end": "1581520"
  },
  {
    "text": "the the nearest comparison i could make is with swift",
    "start": "1581520",
    "end": "1586320"
  },
  {
    "text": "so you know if if we think about essentially kotlin and swift has come along",
    "start": "1586640",
    "end": "1592720"
  },
  {
    "text": "as the the next revs for native development on ios and android respectively",
    "start": "1592720",
    "end": "1600799"
  },
  {
    "text": "so yeah swift is kind of catching up on a couple of decades of language",
    "start": "1600799",
    "end": "1607919"
  },
  {
    "text": "development in order to you know get us out of doing",
    "start": "1607919",
    "end": "1613600"
  },
  {
    "text": "things with objective c and and into doing things with a more modern approach",
    "start": "1613600",
    "end": "1618960"
  },
  {
    "text": "and you know my very limited understanding of kotlin is that you know it's it's essentially trying to do",
    "start": "1618960",
    "end": "1625600"
  },
  {
    "text": "the same thing for android so you know move on from from java",
    "start": "1625600",
    "end": "1631120"
  },
  {
    "text": "i expect that some of the motivation for kotlin may also have come from um",
    "start": "1631120",
    "end": "1636400"
  },
  {
    "text": "you know the difficulties that google was having uh in the lawsuit with oracle over",
    "start": "1636400",
    "end": "1642080"
  },
  {
    "text": "uh the java apis so i think i saw as well as a hedge against",
    "start": "1642080",
    "end": "1647679"
  },
  {
    "text": "losing badly in that arena and thankfully you know that that didn't come to pass",
    "start": "1647679",
    "end": "1654559"
  },
  {
    "text": "and yeah i think java now has actually quite a pluralistic future you know we've seen microsoft in the",
    "start": "1654559",
    "end": "1661039"
  },
  {
    "text": "in the past week step up into the java community process and i was talking to some microsoft people just earlier today",
    "start": "1661039",
    "end": "1667279"
  },
  {
    "text": "and it's kind of who would have ever expected that outcome uh",
    "start": "1667279",
    "end": "1673039"
  },
  {
    "text": "you know back in the days of visual j plus plus but yeah the strange strange things happen over time",
    "start": "1673039",
    "end": "1679279"
  },
  {
    "text": "um so in terms of the the modernity of",
    "start": "1679279",
    "end": "1685600"
  },
  {
    "text": "of the language um there's lots of things in in dart",
    "start": "1685600",
    "end": "1691120"
  },
  {
    "text": "which have kind of become a pick and mix from good things that have been going on in the general land language",
    "start": "1691120",
    "end": "1697520"
  },
  {
    "text": "landscape and yeah things like unicode support",
    "start": "1697520",
    "end": "1703679"
  },
  {
    "text": "are really really good and",
    "start": "1703679",
    "end": "1708320"
  },
  {
    "text": "so so i think in in that case it's yeah it's clearly a",
    "start": "1708720",
    "end": "1714159"
  },
  {
    "text": "modern language that's in in very active development um and",
    "start": "1714159",
    "end": "1720159"
  },
  {
    "text": "you know kind of keeping up with what people want and and",
    "start": "1720159",
    "end": "1726480"
  },
  {
    "text": "what's becoming possible but also it's a language that's that's not embroiled in some of the",
    "start": "1726480",
    "end": "1732640"
  },
  {
    "text": "the issues that we see with go at the moment um over yeah are we gonna have generics or are",
    "start": "1732640",
    "end": "1738480"
  },
  {
    "text": "we not gonna have generics it's yeah those things are already settled um",
    "start": "1738480",
    "end": "1744799"
  },
  {
    "text": "and so yeah i'm sorry i can't make a a more precise comparison to to kotlin but i would kind of say",
    "start": "1744799",
    "end": "1752399"
  },
  {
    "text": "it it feels modern in the same way that swift feels",
    "start": "1752399",
    "end": "1757440"
  },
  {
    "text": "modern in that there's you know definitely a couple of decades of stuff",
    "start": "1757440",
    "end": "1763600"
  },
  {
    "text": "that are there as you know language features from birth um or all",
    "start": "1763600",
    "end": "1770320"
  },
  {
    "text": "that have that have been added in elegantly rather than other other languages feel",
    "start": "1770320",
    "end": "1775600"
  },
  {
    "text": "like they've had stuff bolted on but it doesn't fit properly because it was never conceived when the language first",
    "start": "1775600",
    "end": "1781360"
  },
  {
    "text": "came out the door well dart was designed with integers which is still science fiction for javascript right or sorry",
    "start": "1781360",
    "end": "1788159"
  },
  {
    "start": "1783000",
    "end": "1854000"
  },
  {
    "text": "they just added big integers but only 30 years after the conception of javascript um but one interesting thing",
    "start": "1788159",
    "end": "1795360"
  },
  {
    "text": "is dart still optionally typed right types are still optional",
    "start": "1795360",
    "end": "1801120"
  },
  {
    "text": "so it it's it's really a strongly typed language",
    "start": "1801120",
    "end": "1806960"
  },
  {
    "text": "but in in terms of declaring variables it will do duct typing",
    "start": "1806960",
    "end": "1813279"
  },
  {
    "text": "and and so you know you can i think there was an example in one of my slides uh illustrating null safety",
    "start": "1813279",
    "end": "1820159"
  },
  {
    "text": "so you you can basically say you know variable equals integer and it'll kind",
    "start": "1820159",
    "end": "1825200"
  },
  {
    "text": "of go oh that looks like an integer to me so you know using duct typing that that's an integer but",
    "start": "1825200",
    "end": "1832159"
  },
  {
    "text": "within the compilation and then subsequent byte codes interpretation or native",
    "start": "1832159",
    "end": "1838960"
  },
  {
    "text": "compilation process that's going to be treated as as an int it's not like it's",
    "start": "1838960",
    "end": "1844960"
  },
  {
    "text": "later on functional to kind of go oh well yeah it looked like an initially but now i'm going to throw a string in",
    "start": "1844960",
    "end": "1850480"
  },
  {
    "text": "there that will definitely give you a type error right but it's interesting because when it i think when it started it was sort",
    "start": "1850480",
    "end": "1856640"
  },
  {
    "start": "1854000",
    "end": "1960000"
  },
  {
    "text": "of pitched as kind of a cleaned up java minus the static typing so you have the",
    "start": "1856640",
    "end": "1862399"
  },
  {
    "text": "flexibility of you know you type when you need to when you need the documentation but you can be as flexible as javascript with just type your code",
    "start": "1862399",
    "end": "1869840"
  },
  {
    "text": "and deal with the dynamic consequences in a way well and i think we're we're often seeing sort of industry oscillations",
    "start": "1869840",
    "end": "1877519"
  },
  {
    "text": "between you know do people want strongly typed or do do people want",
    "start": "1877519",
    "end": "1883760"
  },
  {
    "text": "um duck typing or or no typing and yeah i think what we've seen",
    "start": "1883760",
    "end": "1889679"
  },
  {
    "text": "in in the adoption of typescript is you know people want to access the",
    "start": "1889679",
    "end": "1895039"
  },
  {
    "text": "javascript ecosystem but they want the additional safety that they get from having a strongly typed",
    "start": "1895039",
    "end": "1901600"
  },
  {
    "text": "set of tools around the language and i think for similar reasons",
    "start": "1901600",
    "end": "1906880"
  },
  {
    "text": "actually dart has become kind of more typed as as time has",
    "start": "1906880",
    "end": "1912640"
  },
  {
    "text": "gone by and the the null safety stuff that came along in march which is very rapidly",
    "start": "1912640",
    "end": "1918960"
  },
  {
    "text": "actually propagated through the the pub dev package ecosystem",
    "start": "1918960",
    "end": "1924159"
  },
  {
    "text": "so just about all of the packages that are in typical use are now updated to support null safety",
    "start": "1924159",
    "end": "1930559"
  },
  {
    "text": "um yeah is is essentially putting stronger typing",
    "start": "1930559",
    "end": "1936080"
  },
  {
    "text": "over an already strongly typed um approach in the language",
    "start": "1936080",
    "end": "1942320"
  },
  {
    "text": "so yeah i think there's some very limited duct typing going on there as just a",
    "start": "1942320",
    "end": "1950159"
  },
  {
    "text": "sort of readability and programming convenience but you know treat it as a strongly typed",
    "start": "1950159",
    "end": "1955840"
  },
  {
    "text": "language in terms of how it's working under the hood what's the value type situation can i",
    "start": "1955840",
    "end": "1961919"
  },
  {
    "start": "1960000",
    "end": "1997000"
  },
  {
    "text": "define my own value types like in go or is it just primitive like numerical types that are value types",
    "start": "1961919",
    "end": "1968960"
  },
  {
    "text": "um i don't know that i can actually answer that because it's not something that",
    "start": "1968960",
    "end": "1974799"
  },
  {
    "text": "that's come up in my day-to-day interactions uh with the language so i just don't",
    "start": "1974799",
    "end": "1980399"
  },
  {
    "text": "know okay um",
    "start": "1980399",
    "end": "1985440"
  },
  {
    "text": "so it seems like the ahead of time compilation is i think",
    "start": "1985840",
    "end": "1991120"
  },
  {
    "text": "one of the exciting things just so you don't pay for the startup time all the time",
    "start": "1991120",
    "end": "1996559"
  },
  {
    "text": "but what other what other things would you say are advantages always something like",
    "start": "1996559",
    "end": "2002000"
  },
  {
    "start": "1997000",
    "end": "2159000"
  },
  {
    "text": "typescript because if i look at typescript it seems it's a larger codebase or like a user base",
    "start": "2002000",
    "end": "2007679"
  },
  {
    "text": "looks sort of like a little bit of squints so what's the what do you how do you sell dart over",
    "start": "2007679",
    "end": "2013360"
  },
  {
    "text": "typescript so i where i see this going is actually",
    "start": "2013360",
    "end": "2019360"
  },
  {
    "text": "i think even more exciting because what if you could",
    "start": "2019360",
    "end": "2024960"
  },
  {
    "text": "ahead of time compile to basically give the vm a really you know fast startup",
    "start": "2024960",
    "end": "2033600"
  },
  {
    "text": "but then slide in actually using the vm and jit so that you got long term",
    "start": "2033600",
    "end": "2039519"
  },
  {
    "text": "uh optimization from how you're actually using the application and what's going on there and",
    "start": "2039519",
    "end": "2047200"
  },
  {
    "text": "yeah if if you look at again a little bit under the hood what what",
    "start": "2047200",
    "end": "2052878"
  },
  {
    "text": "the compiler is doing there is generating things that they call snapshots",
    "start": "2052879",
    "end": "2058320"
  },
  {
    "text": "and when we do an aot binary we're basically taking a snapshot and we're putting it in a very thin wrapper",
    "start": "2058879",
    "end": "2066000"
  },
  {
    "text": "so that it'll it'll run on a given platform but one of the possibilities there is we",
    "start": "2066000",
    "end": "2072320"
  },
  {
    "text": "could take a snapshot and actually pour it into the vm along with the",
    "start": "2072320",
    "end": "2079040"
  },
  {
    "text": "the source code or the the byte code that we're generating from the source code and kind of get a best of both worlds",
    "start": "2079040",
    "end": "2085040"
  },
  {
    "text": "between aot and um you know just running in in j in the",
    "start": "2085040",
    "end": "2090158"
  },
  {
    "text": "vm so i think i think that's something distinctive that",
    "start": "2090159",
    "end": "2096158"
  },
  {
    "text": "dart kind of has the promise to accomplish which would stand it apart from",
    "start": "2096159",
    "end": "2101599"
  },
  {
    "text": "you know most of the other languages that we're used to where you're making a language level choice of whether you're",
    "start": "2101599",
    "end": "2107359"
  },
  {
    "text": "interpreted or jitted or or compiled um and then i think this also relates to",
    "start": "2107359",
    "end": "2114480"
  },
  {
    "text": "what's going on with with webassembly um because you know a lot of the time",
    "start": "2114480",
    "end": "2120800"
  },
  {
    "text": "if you're kind of hitting limitations with javascript or typescript and kind of saying what would i rather do",
    "start": "2120800",
    "end": "2126480"
  },
  {
    "text": "the answer might be you know add a binary was a module in instead to um to",
    "start": "2126480",
    "end": "2132079"
  },
  {
    "text": "solve that problem yeah just just be optimized for image manipulation or whatever the",
    "start": "2132079",
    "end": "2137119"
  },
  {
    "text": "specific thing is um and so i i think dot is also going to be able",
    "start": "2137119",
    "end": "2143280"
  },
  {
    "text": "to offer the best of every world there in that you've got aot and jit and maybe aot and",
    "start": "2143280",
    "end": "2150400"
  },
  {
    "text": "jit together but also the ability to be a was a module",
    "start": "2150400",
    "end": "2155440"
  },
  {
    "text": "and to incorporate wasm modules yeah the aot stuff is that's really",
    "start": "2155440",
    "end": "2160480"
  },
  {
    "text": "exciting and what's the story what's the weisman story for dart is there how is it today sorry i couldn't quite",
    "start": "2160480",
    "end": "2166960"
  },
  {
    "text": "hear you there uh what's the wasm story for dart nowadays so um",
    "start": "2166960",
    "end": "2173520"
  },
  {
    "text": "there's two [Music] still kind of experimental things going on with with wasm so one is the ability",
    "start": "2173520",
    "end": "2180880"
  },
  {
    "text": "to uh use wasm modules and the other is the ability to create wasn't modules or compile into",
    "start": "2180880",
    "end": "2188079"
  },
  {
    "text": "wasn't modules so i i think the the team at google are looking at those and basically seeing",
    "start": "2188079",
    "end": "2194560"
  },
  {
    "text": "you know how useful they they become and and how much support people need for those",
    "start": "2194560",
    "end": "2200400"
  },
  {
    "text": "i definitely the the ability to use weather modules",
    "start": "2200400",
    "end": "2205440"
  },
  {
    "text": "really kind of blows wide open the possibilities of well yeah if i can't get that in in the",
    "start": "2205440",
    "end": "2211119"
  },
  {
    "text": "language and the framework and the pub dev modules from what's just kind of you know there for",
    "start": "2211119",
    "end": "2216240"
  },
  {
    "text": "taking then actually i can i can open up",
    "start": "2216240",
    "end": "2221280"
  },
  {
    "text": "that from other languages and get things from you know go or rust or c plus plus or cobalt or wherever else i might find",
    "start": "2221280",
    "end": "2228079"
  },
  {
    "text": "it um whereas you're making waza modules sort of then",
    "start": "2228079",
    "end": "2235280"
  },
  {
    "text": "opens opens up the possibility of can i run my stuff in cloudflare workers",
    "start": "2235280",
    "end": "2243040"
  },
  {
    "text": "as as opposed to you know some of the other um you know container-based platforms",
    "start": "2243040",
    "end": "2248800"
  },
  {
    "text": "that that i might be looking at cool so",
    "start": "2248800",
    "end": "2256599"
  },
  {
    "text": "i think we are running out of time can you a few just a quick question have you looked at fuchsia",
    "start": "2256720",
    "end": "2262480"
  },
  {
    "start": "2257000",
    "end": "2333000"
  },
  {
    "text": "google's future project in any way i think flutter is quite important for that",
    "start": "2262480",
    "end": "2267680"
  },
  {
    "text": "yes so yeah i i think myself and many of my colleagues are",
    "start": "2267680",
    "end": "2272880"
  },
  {
    "text": "kind of keeping half an eye on what's happening with fuchsia and the and really the",
    "start": "2272880",
    "end": "2278480"
  },
  {
    "text": "opportunity there to have a yeah a clean slate os um it's it's obviously",
    "start": "2278480",
    "end": "2285839"
  },
  {
    "text": "got potential for handsets and it's it's also got potential for iot which is something",
    "start": "2285839",
    "end": "2291119"
  },
  {
    "text": "that we're quite focused on um yeah i think the nice thing from our perspective there is if if we're doing",
    "start": "2291119",
    "end": "2298079"
  },
  {
    "text": "stuff with dart and flutter and and fuchsia is relying on flutter as kind of the one of the main",
    "start": "2298079",
    "end": "2304000"
  },
  {
    "text": "ways into it we'll probably be able to use fuchsia without having to change anything",
    "start": "2304000",
    "end": "2309040"
  },
  {
    "text": "cool we're out of time i hope you can join us in the hangout uh chris if you have any",
    "start": "2309040",
    "end": "2314960"
  },
  {
    "text": "more questions to the audience and before we leave can you show us your puppy all right thanks i'll i'll catch",
    "start": "2314960",
    "end": "2320720"
  },
  {
    "text": "you over there [Music]",
    "start": "2320720",
    "end": "2331699"
  },
  {
    "text": "you",
    "start": "2332880",
    "end": "2334960"
  }
]