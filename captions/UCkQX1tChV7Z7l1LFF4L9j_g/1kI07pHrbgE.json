[
  {
    "start": "0",
    "end": "195000"
  },
  {
    "text": "[Music]",
    "start": "1990",
    "end": "14320"
  },
  {
    "text": "all right so um my name is Matt and so",
    "start": "14320",
    "end": "16680"
  },
  {
    "text": "there's my Twitter handle and I am a",
    "start": "16680",
    "end": "18199"
  },
  {
    "text": "co-founder of the website thinkster .io",
    "start": "18199",
    "end": "20640"
  },
  {
    "text": "uh where we can go and learn about",
    "start": "20640",
    "end": "21720"
  },
  {
    "text": "angular or meanstack or whatever um",
    "start": "21720",
    "end": "24960"
  },
  {
    "text": "rather than plug that though I'm",
    "start": "24960",
    "end": "26240"
  },
  {
    "text": "actually going to to shamelessly plug",
    "start": "26240",
    "end": "27640"
  },
  {
    "text": "two of my friends book Diego and wrote a",
    "start": "27640",
    "end": "30400"
  },
  {
    "text": "book and it's coming out sometime soon",
    "start": "30400",
    "end": "33120"
  },
  {
    "text": "so buy it they tell they tell me it's",
    "start": "33120",
    "end": "36040"
  },
  {
    "text": "good I haven't seen",
    "start": "36040",
    "end": "38040"
  },
  {
    "text": "it um all right so what is",
    "start": "38040",
    "end": "43520"
  },
  {
    "text": "is a nosql database um it is open source",
    "start": "43520",
    "end": "46120"
  },
  {
    "text": "and is developed by a company called",
    "start": "46120",
    "end": "47360"
  },
  {
    "text": "mongod DB uh formally 10 genen um it is",
    "start": "47360",
    "end": "50199"
  },
  {
    "text": "a document store database which",
    "start": "50199",
    "end": "52199"
  },
  {
    "text": "essentially as Ward mentioned is very",
    "start": "52199",
    "end": "54000"
  },
  {
    "text": "similar to Json objects um and it",
    "start": "54000",
    "end": "56840"
  },
  {
    "text": "doesn't have a set schema which really",
    "start": "56840",
    "end": "58320"
  },
  {
    "text": "makes it like just incredibly easy to",
    "start": "58320",
    "end": "60280"
  },
  {
    "text": "manage and",
    "start": "60280",
    "end": "61559"
  },
  {
    "text": "maintain um why would you use and",
    "start": "61559",
    "end": "65280"
  },
  {
    "text": "why does it work with the mean stack",
    "start": "65280",
    "end": "66799"
  },
  {
    "text": "well it offers a substantial amount of",
    "start": "66799",
    "end": "68520"
  },
  {
    "text": "flexibility especially over your typical",
    "start": "68520",
    "end": "70159"
  },
  {
    "text": "relational database style um so it's",
    "start": "70159",
    "end": "72439"
  },
  {
    "text": "really good for unstructured data uh it",
    "start": "72439",
    "end": "74759"
  },
  {
    "text": "does compl node's goal of a a JavaScript",
    "start": "74759",
    "end": "77600"
  },
  {
    "text": "stack through and through especially",
    "start": "77600",
    "end": "78880"
  },
  {
    "text": "with the mean stack since storing data",
    "start": "78880",
    "end": "80479"
  },
  {
    "text": "is very much like storing uh Json",
    "start": "80479",
    "end": "82600"
  },
  {
    "text": "objects um and it also has a lot of",
    "start": "82600",
    "end": "84960"
  },
  {
    "text": "really cool Advanced querying features",
    "start": "84960",
    "end": "86479"
  },
  {
    "text": "uh like map ruce and uh Geo querying",
    "start": "86479",
    "end": "91600"
  },
  {
    "text": "um so there are two big Concepts to know",
    "start": "91600",
    "end": "93720"
  },
  {
    "text": "about um mongodb one are there are",
    "start": "93720",
    "end": "95720"
  },
  {
    "text": "Collections and collections are akin to",
    "start": "95720",
    "end": "97439"
  },
  {
    "text": "tables and SQL traditional SQL um they",
    "start": "97439",
    "end": "100720"
  },
  {
    "text": "contain documents and you run queries on",
    "start": "100720",
    "end": "104079"
  },
  {
    "text": "collections now we have documents uh",
    "start": "104079",
    "end": "106399"
  },
  {
    "text": "documents are very similar to rows in",
    "start": "106399",
    "end": "107880"
  },
  {
    "text": "SQL um they're queriable and they can be",
    "start": "107880",
    "end": "110240"
  },
  {
    "text": "nested as word demonstrated well I guess",
    "start": "110240",
    "end": "112799"
  },
  {
    "text": "close to it um updates on documents are",
    "start": "112799",
    "end": "115439"
  },
  {
    "text": "Atomic and they have a set limit of",
    "start": "115439",
    "end": "117759"
  },
  {
    "text": "about 16 megabytes",
    "start": "117759",
    "end": "121520"
  },
  {
    "text": "um so uh to begin with we'll go ahead",
    "start": "121520",
    "end": "124360"
  },
  {
    "text": "and and install in quotes our mongod DB",
    "start": "124360",
    "end": "126759"
  },
  {
    "text": "driver in node so um we'll do an npm",
    "start": "126759",
    "end": "129080"
  },
  {
    "text": "install ddave and what this will do is R",
    "start": "129080",
    "end": "131000"
  },
  {
    "text": "to the package.json file so in the",
    "start": "131000",
    "end": "133200"
  },
  {
    "text": "future we'll be able to do an npm",
    "start": "133200",
    "end": "134560"
  },
  {
    "text": "install and then have our driver",
    "start": "134560",
    "end": "136120"
  },
  {
    "text": "just pop up be really great uh here's",
    "start": "136120",
    "end": "138920"
  },
  {
    "text": "some code that looks like for connecting",
    "start": "138920",
    "end": "140400"
  },
  {
    "text": "to the mongod DB from within our node uh",
    "start": "140400",
    "end": "143080"
  },
  {
    "text": "server um pretty simple pretty",
    "start": "143080",
    "end": "145360"
  },
  {
    "text": "self-explanatory you get a uh you call a",
    "start": "145360",
    "end": "147120"
  },
  {
    "text": "connect function and you get a call back",
    "start": "147120",
    "end": "148680"
  },
  {
    "text": "that has the database object",
    "start": "148680",
    "end": "150760"
  },
  {
    "text": "uh now typically what you want to do is",
    "start": "150760",
    "end": "152400"
  },
  {
    "text": "you want to reuse the same connection",
    "start": "152400",
    "end": "153840"
  },
  {
    "text": "for your entire node application um and",
    "start": "153840",
    "end": "156599"
  },
  {
    "text": "then they do also you can also do",
    "start": "156599",
    "end": "157800"
  },
  {
    "text": "connection pooling with it and",
    "start": "157800",
    "end": "159560"
  },
  {
    "text": "unfortunately uh requiring the DB object",
    "start": "159560",
    "end": "161640"
  },
  {
    "text": "with a native driver is actually",
    "start": "161640",
    "end": "163280"
  },
  {
    "text": "fairly difficult um since it needs to be",
    "start": "163280",
    "end": "165480"
  },
  {
    "text": "initialized synchronously with the",
    "start": "165480",
    "end": "166519"
  },
  {
    "text": "express app uh we do have an example on",
    "start": "166519",
    "end": "169000"
  },
  {
    "text": "the express or on the GitHub repository",
    "start": "169000",
    "end": "170959"
  },
  {
    "text": "so you can go ahead and check that out",
    "start": "170959",
    "end": "171879"
  },
  {
    "text": "if you're interested in doing it there's",
    "start": "171879",
    "end": "173159"
  },
  {
    "text": "also substantial number of uh third",
    "start": "173159",
    "end": "174840"
  },
  {
    "text": "party manga libraries that will take",
    "start": "174840",
    "end": "176959"
  },
  {
    "text": "care of this for you uh for this",
    "start": "176959",
    "end": "178519"
  },
  {
    "text": "presentation though we'll be using the",
    "start": "178519",
    "end": "179920"
  },
  {
    "start": "179920",
    "end": "182080"
  },
  {
    "text": "driver um and now on to the live uh",
    "start": "182080",
    "end": "185480"
  },
  {
    "text": "coding portion of this so and that's not",
    "start": "185480",
    "end": "190000"
  },
  {
    "text": "what I wanted to show all",
    "start": "190000",
    "end": "193760"
  },
  {
    "start": "195000",
    "end": "405000"
  },
  {
    "text": "right so you can make this bigger okay",
    "start": "197200",
    "end": "200239"
  },
  {
    "text": "you guys all see this try to make this",
    "start": "200239",
    "end": "202280"
  },
  {
    "text": "work out all right so uh picking up",
    "start": "202280",
    "end": "204519"
  },
  {
    "text": "where word left off we have a a uh um a",
    "start": "204519",
    "end": "207480"
  },
  {
    "text": "file that has all our functions and",
    "start": "207480",
    "end": "209040"
  },
  {
    "text": "these are exported and then they are",
    "start": "209040",
    "end": "210439"
  },
  {
    "text": "hooked into rout so this is hooked into",
    "start": "210439",
    "end": "212159"
  },
  {
    "text": "our / API route and we're going to fill",
    "start": "212159",
    "end": "214159"
  },
  {
    "text": "out these functions now um so to begin",
    "start": "214159",
    "end": "217599"
  },
  {
    "text": "with the first thing that you typically",
    "start": "217599",
    "end": "219000"
  },
  {
    "text": "want to do is you're going to want to",
    "start": "219000",
    "end": "219840"
  },
  {
    "text": "create like an index route um and the",
    "start": "219840",
    "end": "222680"
  },
  {
    "text": "first thing you want to do is return a",
    "start": "222680",
    "end": "223720"
  },
  {
    "text": "list of all questions that might be in",
    "start": "223720",
    "end": "224840"
  },
  {
    "text": "the database so to do this we create",
    "start": "224840",
    "end": "227519"
  },
  {
    "text": "start by creating a query object and um",
    "start": "227519",
    "end": "230239"
  },
  {
    "text": "I should note that we have this object",
    "start": "230239",
    "end": "231840"
  },
  {
    "text": "called questions which is essentially is",
    "start": "231840",
    "end": "233000"
  },
  {
    "text": "a collection object as I mentioned about",
    "start": "233000",
    "end": "234560"
  },
  {
    "text": "collections there a series of documents",
    "start": "234560",
    "end": "235920"
  },
  {
    "text": "and we're going to call a find query on",
    "start": "235920",
    "end": "237360"
  },
  {
    "text": "the collection object like this",
    "start": "237360",
    "end": "240200"
  },
  {
    "text": "now what this does is this actually",
    "start": "240200",
    "end": "241439"
  },
  {
    "text": "doesn't go out to the database just yet",
    "start": "241439",
    "end": "243599"
  },
  {
    "text": "and we can modify this query in several",
    "start": "243599",
    "end": "245519"
  },
  {
    "text": "different ways and um hopefully we'll",
    "start": "245519",
    "end": "246959"
  },
  {
    "text": "get to to to being able to do that later",
    "start": "246959",
    "end": "248680"
  },
  {
    "text": "on The Talk um for now though we're just",
    "start": "248680",
    "end": "250680"
  },
  {
    "text": "going to call query. toarray",
    "start": "250680",
    "end": "253319"
  },
  {
    "text": "here and what this does is this actually",
    "start": "253319",
    "end": "256040"
  },
  {
    "text": "instructs the",
    "start": "256040",
    "end": "258560"
  },
  {
    "text": "um uh uh uh the node program to go out",
    "start": "258560",
    "end": "261440"
  },
  {
    "text": "to the database and query for the",
    "start": "261440",
    "end": "264120"
  },
  {
    "text": "questions um now as Ward mentioned we",
    "start": "264120",
    "end": "266400"
  },
  {
    "text": "want to have our error handle so if we",
    "start": "266400",
    "end": "268120"
  },
  {
    "text": "have an error we go ahead and throw it",
    "start": "268120",
    "end": "269479"
  },
  {
    "text": "now next otherwise we're just going to",
    "start": "269479",
    "end": "272080"
  },
  {
    "text": "send back the questions to um the user",
    "start": "272080",
    "end": "276080"
  },
  {
    "text": "uh where I already explained to you guys",
    "start": "276080",
    "end": "277320"
  },
  {
    "text": "Postman so I will be using that in this",
    "start": "277320",
    "end": "279280"
  },
  {
    "text": "demonstration here we have a route I",
    "start": "279280",
    "end": "281120"
  },
  {
    "text": "don't know if you guys can see this",
    "start": "281120",
    "end": "282360"
  },
  {
    "text": "hopefully you can because I can't make",
    "start": "282360",
    "end": "283520"
  },
  {
    "text": "it bigger um so anyways we're going to",
    "start": "283520",
    "end": "286360"
  },
  {
    "text": "go ah and send that and you'll see that",
    "start": "286360",
    "end": "287800"
  },
  {
    "text": "we're now getting three questions back",
    "start": "287800",
    "end": "289080"
  },
  {
    "text": "which have been pre-populated in our",
    "start": "289080",
    "end": "291280"
  },
  {
    "text": "database and this is all working",
    "start": "291280",
    "end": "294080"
  },
  {
    "text": "awesome um next up we're going to have",
    "start": "294080",
    "end": "297560"
  },
  {
    "text": "uh our get singular question by now for",
    "start": "297560",
    "end": "300479"
  },
  {
    "text": "using this function we're going to go",
    "start": "300479",
    "end": "301639"
  },
  {
    "text": "ahead and do it by uh using a method on",
    "start": "301639",
    "end": "303520"
  },
  {
    "text": "the driver called find one uh",
    "start": "303520",
    "end": "305560"
  },
  {
    "text": "pretty simple and it operates on",
    "start": "305560",
    "end": "307280"
  },
  {
    "text": "collections as we mentioned um by the",
    "start": "307280",
    "end": "309479"
  },
  {
    "text": "way uh the uh Syntax for creating a new",
    "start": "309479",
    "end": "312320"
  },
  {
    "text": "collection is just like",
    "start": "312320",
    "end": "314320"
  },
  {
    "text": "this so what this does is this creates a",
    "start": "314320",
    "end": "316759"
  },
  {
    "text": "new DB collection on the questions uh um",
    "start": "316759",
    "end": "320160"
  },
  {
    "text": "uh collection so call find one here and",
    "start": "320160",
    "end": "325240"
  },
  {
    "text": "uh what we'll do now is we're going to",
    "start": "325240",
    "end": "327319"
  },
  {
    "text": "pass in an object ID now as Ward",
    "start": "327319",
    "end": "329120"
  },
  {
    "text": "mentioned",
    "start": "329120",
    "end": "330199"
  },
  {
    "text": "uh talk a little bit more about object",
    "start": "330199",
    "end": "332120"
  },
  {
    "text": "IDs here uh the object ID uh is a 12 by",
    "start": "332120",
    "end": "335639"
  },
  {
    "text": "based uh bison type and bison is the",
    "start": "335639",
    "end": "338080"
  },
  {
    "text": "Json format essentially that mongod DB",
    "start": "338080",
    "end": "339919"
  },
  {
    "text": "uses natively uh the object ID",
    "start": "339919",
    "end": "342360"
  },
  {
    "text": "specifically is guaranteed pretty much",
    "start": "342360",
    "end": "343800"
  },
  {
    "text": "to be unique um the first four bytes are",
    "start": "343800",
    "end": "345960"
  },
  {
    "text": "a time stamp that represent uh",
    "start": "345960",
    "end": "347520"
  },
  {
    "text": "milliseconds since Epoch or seconds s",
    "start": "347520",
    "end": "349160"
  },
  {
    "text": "Epoch and then there's a three by",
    "start": "349160",
    "end": "350360"
  },
  {
    "text": "Machine identifier a two byte process ID",
    "start": "350360",
    "end": "352479"
  },
  {
    "text": "and then just a three byte random counts",
    "start": "352479",
    "end": "355080"
  },
  {
    "text": "um the underscore ID field is very",
    "start": "355080",
    "end": "356800"
  },
  {
    "text": "similar to the ID field that's typically",
    "start": "356800",
    "end": "358280"
  },
  {
    "text": "created in SQL databases so it's very",
    "start": "358280",
    "end": "360880"
  },
  {
    "text": "good to query",
    "start": "360880",
    "end": "362120"
  },
  {
    "text": "on so going back to this go back here",
    "start": "362120",
    "end": "364560"
  },
  {
    "text": "and do the same",
    "start": "364560",
    "end": "367160"
  },
  {
    "text": "function with our call back and with oh",
    "start": "367240",
    "end": "371120"
  },
  {
    "text": "about that one",
    "start": "371120",
    "end": "373479"
  },
  {
    "text": "error there and then we can also do",
    "start": "373479",
    "end": "377400"
  },
  {
    "text": "uh again not that one uh res. Json and",
    "start": "377400",
    "end": "381199"
  },
  {
    "text": "send a question",
    "start": "381199",
    "end": "382960"
  },
  {
    "text": "back now if we go back to our Postman we",
    "start": "382960",
    "end": "386400"
  },
  {
    "text": "can now have this uh get question by ID",
    "start": "386400",
    "end": "388080"
  },
  {
    "text": "route and this uh is a string formation",
    "start": "388080",
    "end": "390880"
  },
  {
    "text": "of the Bison object or I'm sorry the ID",
    "start": "390880",
    "end": "393400"
  },
  {
    "text": "object and we can go ahead and search",
    "start": "393400",
    "end": "394720"
  },
  {
    "text": "for this guy here and now we have this",
    "start": "394720",
    "end": "395960"
  },
  {
    "text": "question that's returned you can see we",
    "start": "395960",
    "end": "397160"
  },
  {
    "text": "have a four votes associated with it a",
    "start": "397160",
    "end": "399599"
  },
  {
    "text": "name associated with it and then some",
    "start": "399599",
    "end": "403319"
  },
  {
    "start": "405000",
    "end": "778000"
  },
  {
    "text": "text all right so now we can retrieve",
    "start": "405280",
    "end": "408000"
  },
  {
    "text": "some questions so let's go ahead and",
    "start": "408000",
    "end": "409000"
  },
  {
    "text": "figure out what it looks like to create",
    "start": "409000",
    "end": "409960"
  },
  {
    "text": "a question um we already have some code",
    "start": "409960",
    "end": "411919"
  },
  {
    "text": "here and what this is going to do is",
    "start": "411919",
    "end": "413120"
  },
  {
    "text": "it's going to take the uh information",
    "start": "413120",
    "end": "415080"
  },
  {
    "text": "from the post request and uh parse it",
    "start": "415080",
    "end": "417680"
  },
  {
    "text": "out into a text field that we're going",
    "start": "417680",
    "end": "419080"
  },
  {
    "text": "to use to go ahead and insert",
    "start": "419080",
    "end": "420560"
  },
  {
    "text": "information so the first thing to do is",
    "start": "420560",
    "end": "422479"
  },
  {
    "text": "to create a JavaScript hash that has our",
    "start": "422479",
    "end": "425000"
  },
  {
    "text": "question so you'll see here we're",
    "start": "425000",
    "end": "427039"
  },
  {
    "text": "creating a new date time or a new date",
    "start": "427039",
    "end": "429080"
  },
  {
    "text": "to uh um for now and then the text",
    "start": "429080",
    "end": "430879"
  },
  {
    "text": "obviously and then the name of the",
    "start": "430879",
    "end": "432319"
  },
  {
    "text": "person who ass or who asked the question",
    "start": "432319",
    "end": "435160"
  },
  {
    "text": "and then we'll also have a vote count",
    "start": "435160",
    "end": "436520"
  },
  {
    "text": "and we're going to start off with zero",
    "start": "436520",
    "end": "438800"
  },
  {
    "text": "now what we're going to call is we're",
    "start": "438800",
    "end": "439639"
  },
  {
    "text": "going to call the insert method on the",
    "start": "439639",
    "end": "441240"
  },
  {
    "text": "questions collection",
    "start": "441240",
    "end": "443080"
  },
  {
    "text": "again and we'll just pass in the",
    "start": "443080",
    "end": "445199"
  },
  {
    "text": "question variable and call our call back",
    "start": "445199",
    "end": "448319"
  },
  {
    "text": "function",
    "start": "448319",
    "end": "451319"
  },
  {
    "text": "all right so now if we go back to the",
    "start": "454120",
    "end": "455800"
  },
  {
    "text": "postman",
    "start": "455800",
    "end": "457319"
  },
  {
    "text": "route um we have a sample question that",
    "start": "457319",
    "end": "461160"
  },
  {
    "text": "we're going to create um what are this",
    "start": "461160",
    "end": "465159"
  },
  {
    "text": "we go ahead and click the send button",
    "start": "465159",
    "end": "466520"
  },
  {
    "text": "and as you can see this thing has been",
    "start": "466520",
    "end": "467800"
  },
  {
    "text": "returned back and what this means is",
    "start": "467800",
    "end": "469919"
  },
  {
    "text": "that this has been successfully saved to",
    "start": "469919",
    "end": "471000"
  },
  {
    "text": "the database now mongodb also has a very",
    "start": "471000",
    "end": "473800"
  },
  {
    "text": "nice repple um make this",
    "start": "473800",
    "end": "476840"
  },
  {
    "text": "bigger and this is kind of what the",
    "start": "476840",
    "end": "478800"
  },
  {
    "text": "console looks like so if we query for",
    "start": "478800",
    "end": "480720"
  },
  {
    "text": "the collection we can call db.",
    "start": "480720",
    "end": "483680"
  },
  {
    "text": "questions and then call the find method",
    "start": "483680",
    "end": "485879"
  },
  {
    "text": "here uh and then pass in um um a blank",
    "start": "485879",
    "end": "489400"
  },
  {
    "text": "query so we get all them back and we'll",
    "start": "489400",
    "end": "491479"
  },
  {
    "text": "uh we'll actually do a pretty method",
    "start": "491479",
    "end": "492879"
  },
  {
    "text": "which will make this nice we can see now",
    "start": "492879",
    "end": "494800"
  },
  {
    "text": "that the question we just created has",
    "start": "494800",
    "end": "496960"
  },
  {
    "text": "been actually successfully added if you",
    "start": "496960",
    "end": "498360"
  },
  {
    "text": "guys can see",
    "start": "498360",
    "end": "500879"
  },
  {
    "text": "that there you guys go top um so we know",
    "start": "501720",
    "end": "505680"
  },
  {
    "text": "it's been actually accessed and entered",
    "start": "505680",
    "end": "507080"
  },
  {
    "text": "in the database and we can also again",
    "start": "507080",
    "end": "508360"
  },
  {
    "text": "confirm this by calling our index method",
    "start": "508360",
    "end": "511120"
  },
  {
    "text": "which returns all four questions that we",
    "start": "511120",
    "end": "513000"
  },
  {
    "text": "have",
    "start": "513000",
    "end": "515680"
  },
  {
    "text": "sweet all",
    "start": "516399",
    "end": "518120"
  },
  {
    "text": "right now for the fun part so this is",
    "start": "518120",
    "end": "520760"
  },
  {
    "text": "where we do uh an upvote or uh we we",
    "start": "520760",
    "end": "524039"
  },
  {
    "text": "initiate the upvote route for our",
    "start": "524039",
    "end": "525519"
  },
  {
    "text": "questions so this allows people to be",
    "start": "525519",
    "end": "527120"
  },
  {
    "text": "able to vote a question up or down um",
    "start": "527120",
    "end": "529120"
  },
  {
    "text": "we're not going to restrain them",
    "start": "529120",
    "end": "530160"
  },
  {
    "text": "necessarily by the number of votes they",
    "start": "530160",
    "end": "531640"
  },
  {
    "text": "could have though our web interface will",
    "start": "531640",
    "end": "533440"
  },
  {
    "text": "probably stop them from doing it um",
    "start": "533440",
    "end": "535360"
  },
  {
    "text": "right now as you can see we're just",
    "start": "535360",
    "end": "536279"
  },
  {
    "text": "parsing out the vote from the query",
    "start": "536279",
    "end": "538560"
  },
  {
    "text": "parameters and then we're going to call",
    "start": "538560",
    "end": "540600"
  },
  {
    "text": "this function called find and modify and",
    "start": "540600",
    "end": "543519"
  },
  {
    "text": "I want to talk a littleit about this",
    "start": "543519",
    "end": "544399"
  },
  {
    "text": "this is a little different from a",
    "start": "544399",
    "end": "545480"
  },
  {
    "text": "typical mongod DB call which would be",
    "start": "545480",
    "end": "547079"
  },
  {
    "text": "the uh update commands the update",
    "start": "547079",
    "end": "548839"
  },
  {
    "text": "command we could use however it does not",
    "start": "548839",
    "end": "550600"
  },
  {
    "text": "return the question itself back it's",
    "start": "550600",
    "end": "552120"
  },
  {
    "text": "kind of a fire and release so we won't",
    "start": "552120",
    "end": "553959"
  },
  {
    "text": "be able to get the question back and we",
    "start": "553959",
    "end": "555040"
  },
  {
    "text": "won't be able to return it back to our",
    "start": "555040",
    "end": "556240"
  },
  {
    "text": "front end which is a requirement of the",
    "start": "556240",
    "end": "558040"
  },
  {
    "text": "front ends so to begin with we will",
    "start": "558040",
    "end": "561560"
  },
  {
    "text": "search for the",
    "start": "561560",
    "end": "563079"
  },
  {
    "text": "ID",
    "start": "563079",
    "end": "566079"
  },
  {
    "text": "um",
    "start": "568120",
    "end": "570399"
  },
  {
    "text": "all right now the second parameter of",
    "start": "570399",
    "end": "572000"
  },
  {
    "text": "this thing is actually interesting it's",
    "start": "572000",
    "end": "572959"
  },
  {
    "text": "a sorting parameter and this allows us",
    "start": "572959",
    "end": "574760"
  },
  {
    "text": "uh to sort the objects so because",
    "start": "574760",
    "end": "577160"
  },
  {
    "text": "we're querying by unique ID right now",
    "start": "577160",
    "end": "578640"
  },
  {
    "text": "this is not too important but if we were",
    "start": "578640",
    "end": "580120"
  },
  {
    "text": "say to query by an author we could sort",
    "start": "580120",
    "end": "582279"
  },
  {
    "text": "them uh according to a different field",
    "start": "582279",
    "end": "584079"
  },
  {
    "text": "and then only update the first one",
    "start": "584079",
    "end": "585399"
  },
  {
    "text": "that's been that are in the",
    "start": "585399",
    "end": "587160"
  },
  {
    "text": "list now the second part is actually",
    "start": "587160",
    "end": "589040"
  },
  {
    "text": "going to be our update parameter and",
    "start": "589040",
    "end": "590760"
  },
  {
    "text": " has this function called increment",
    "start": "590760",
    "end": "592760"
  },
  {
    "text": "which allows us to automically increment",
    "start": "592760",
    "end": "594880"
  },
  {
    "text": "any variable inside of the document so",
    "start": "594880",
    "end": "597519"
  },
  {
    "text": "the syntax for this is going to look",
    "start": "597519",
    "end": "598720"
  },
  {
    "text": "something like this so we have our vote",
    "start": "598720",
    "end": "600320"
  },
  {
    "text": "count variable or our vote count excuse",
    "start": "600320",
    "end": "602040"
  },
  {
    "text": "me field inside of the document and we",
    "start": "602040",
    "end": "604079"
  },
  {
    "text": "can upd up uh update it by the vote",
    "start": "604079",
    "end": "607399"
  },
  {
    "text": "amount finally we have an options field",
    "start": "607399",
    "end": "611240"
  },
  {
    "text": "and uh the only option we care about for",
    "start": "611240",
    "end": "613000"
  },
  {
    "text": "this particular example is new True by",
    "start": "613000",
    "end": "615200"
  },
  {
    "text": "default what manga is going to do is",
    "start": "615200",
    "end": "616519"
  },
  {
    "text": "it's actually going to send off the",
    "start": "616519",
    "end": "617959"
  },
  {
    "text": "question the update question and then",
    "start": "617959",
    "end": "619640"
  },
  {
    "text": "return back the a question before it was",
    "start": "619640",
    "end": "621519"
  },
  {
    "text": "updated by specifying the new equals",
    "start": "621519",
    "end": "623360"
  },
  {
    "text": "true we're actually going to be able to",
    "start": "623360",
    "end": "624320"
  },
  {
    "text": "get the updated document",
    "start": "624320",
    "end": "627399"
  },
  {
    "text": "back",
    "start": "628040",
    "end": "630279"
  },
  {
    "text": "and then finally of course as always the",
    "start": "630279",
    "end": "632480"
  },
  {
    "text": "call",
    "start": "632480",
    "end": "634720"
  },
  {
    "text": "back all right so now if we go to our",
    "start": "635200",
    "end": "638200"
  },
  {
    "text": "Postman client again I hope you guys can",
    "start": "638200",
    "end": "640880"
  },
  {
    "text": "see that um we can upload a question",
    "start": "640880",
    "end": "647320"
  },
  {
    "text": "theoretically y syntax",
    "start": "649560",
    "end": "653639"
  },
  {
    "text": "errors all right let try this",
    "start": "653800",
    "end": "656760"
  },
  {
    "text": "again there we go all right so now we",
    "start": "656760",
    "end": "659200"
  },
  {
    "text": "have a vote count of five if we press",
    "start": "659200",
    "end": "660600"
  },
  {
    "text": "this again it's just going to constantly",
    "start": "660600",
    "end": "662720"
  },
  {
    "text": "increment 7 8 9 Etc we can even go over",
    "start": "662720",
    "end": "667800"
  },
  {
    "text": "here and we can up vote it by three so",
    "start": "667800",
    "end": "669959"
  },
  {
    "text": "if we send this now 12 it's going to go",
    "start": "669959",
    "end": "671639"
  },
  {
    "text": "to 15 afterwards and this is all again",
    "start": "671639",
    "end": "673279"
  },
  {
    "text": "saved back to the database if we'd like",
    "start": "673279",
    "end": "675079"
  },
  {
    "text": "we can also decrement it by",
    "start": "675079",
    "end": "677040"
  },
  {
    "text": "one fantastic 13 12 so that's all",
    "start": "677040",
    "end": "682000"
  },
  {
    "text": "working all right and then the final",
    "start": "682839",
    "end": "685079"
  },
  {
    "text": "portion of a typical Crow application is",
    "start": "685079",
    "end": "686760"
  },
  {
    "text": "you want to make sure you can delete",
    "start": "686760",
    "end": "687760"
  },
  {
    "text": "comments so to do this we're going to",
    "start": "687760",
    "end": "689279"
  },
  {
    "text": "use the find and remove uh function of",
    "start": "689279",
    "end": "691320"
  },
  {
    "text": "mongodb and uh again what this looks",
    "start": "691320",
    "end": "693440"
  },
  {
    "text": "like is just do find and",
    "start": "693440",
    "end": "698760"
  },
  {
    "text": "remove search by the ID and then pass",
    "start": "699279",
    "end": "702519"
  },
  {
    "text": "the function that'll take the question",
    "start": "702519",
    "end": "703920"
  },
  {
    "text": "back so if we'd like to we can not",
    "start": "703920",
    "end": "707320"
  },
  {
    "text": "return the function or I'm sorry not",
    "start": "707320",
    "end": "708880"
  },
  {
    "text": "return the question um however uh and",
    "start": "708880",
    "end": "711399"
  },
  {
    "text": "and that would be the remove command in",
    "start": "711399",
    "end": "712680"
  },
  {
    "text": " the find and remove command will",
    "start": "712680",
    "end": "714360"
  },
  {
    "text": "actually go search for the document and",
    "start": "714360",
    "end": "715839"
  },
  {
    "text": "then remove the document and return it",
    "start": "715839",
    "end": "717600"
  },
  {
    "text": "back to our client so we can check to",
    "start": "717600",
    "end": "718760"
  },
  {
    "text": "see if it was successfully removed so as",
    "start": "718760",
    "end": "721480"
  },
  {
    "text": "always have the error function now",
    "start": "721480",
    "end": "723360"
  },
  {
    "text": "because of this the only way that we",
    "start": "723360",
    "end": "724920"
  },
  {
    "text": "know that the function has been or that",
    "start": "724920",
    "end": "726360"
  },
  {
    "text": "the question is actually been removed is",
    "start": "726360",
    "end": "727600"
  },
  {
    "text": "if the question has been returned if no",
    "start": "727600",
    "end": "728880"
  },
  {
    "text": "question is returned and there's no",
    "start": "728880",
    "end": "730079"
  },
  {
    "text": "error then we know that there wasn't",
    "start": "730079",
    "end": "731320"
  },
  {
    "text": "actually a question so we're going to",
    "start": "731320",
    "end": "732800"
  },
  {
    "text": "check to see if the question exists and",
    "start": "732800",
    "end": "734480"
  },
  {
    "text": "if it does exist we're going to go ahead",
    "start": "734480",
    "end": "736120"
  },
  {
    "text": "and do a res. um status of a 204 which",
    "start": "736120",
    "end": "738720"
  },
  {
    "text": "is going to be defined in our API spec",
    "start": "738720",
    "end": "741000"
  },
  {
    "text": "and then just. end which will send a",
    "start": "741000",
    "end": "742800"
  },
  {
    "text": "blank body back now",
    "start": "742800",
    "end": "745240"
  },
  {
    "text": "if there was no question then we have",
    "start": "745240",
    "end": "748120"
  },
  {
    "text": "this function here",
    "start": "748120",
    "end": "751720"
  },
  {
    "text": "that will throw an error automatically",
    "start": "751720",
    "end": "754920"
  },
  {
    "text": "and let the user",
    "start": "754920",
    "end": "756560"
  },
  {
    "text": "know now in the postman we'll go here",
    "start": "756560",
    "end": "759079"
  },
  {
    "text": "and test out our delete route so if we",
    "start": "759079",
    "end": "760920"
  },
  {
    "text": "click the delete button on this question",
    "start": "760920",
    "end": "762880"
  },
  {
    "text": "we see that no content was returned but",
    "start": "762880",
    "end": "764760"
  },
  {
    "text": "there's a 204 status which means that",
    "start": "764760",
    "end": "766279"
  },
  {
    "text": "our function completed successfully if",
    "start": "766279",
    "end": "767880"
  },
  {
    "text": "we try and press this button again we're",
    "start": "767880",
    "end": "769199"
  },
  {
    "text": "going to get the error message question",
    "start": "769199",
    "end": "770480"
  },
  {
    "text": "not found which means that again",
    "start": "770480",
    "end": "771880"
  },
  {
    "text": "everything is working perfectly",
    "start": "771880",
    "end": "776040"
  },
  {
    "text": "fine",
    "start": "777839",
    "end": "779480"
  },
  {
    "start": "778000",
    "end": "888000"
  },
  {
    "text": "all right so this is typically the point",
    "start": "779480",
    "end": "781920"
  },
  {
    "text": "when you might be able to have like a",
    "start": "781920",
    "end": "783160"
  },
  {
    "text": "prototype you have a demo you deploy it",
    "start": "783160",
    "end": "784920"
  },
  {
    "text": "you have some people uploading it and",
    "start": "784920",
    "end": "786519"
  },
  {
    "text": "it's great everything's going fine",
    "start": "786519",
    "end": "787720"
  },
  {
    "text": "you've got a live system",
    "start": "787720",
    "end": "790040"
  },
  {
    "text": "however we've all probably been here",
    "start": "790040",
    "end": "792480"
  },
  {
    "text": "when a new requirement has appeared",
    "start": "792480",
    "end": "795399"
  },
  {
    "text": "right and your boss is going to come to",
    "start": "795399",
    "end": "797440"
  },
  {
    "text": "you and he's going to go ahead and say",
    "start": "797440",
    "end": "798440"
  },
  {
    "text": "like hey you know what would be awesome",
    "start": "798440",
    "end": "800000"
  },
  {
    "text": "is like we would really like you to just",
    "start": "800000",
    "end": "802360"
  },
  {
    "text": "be able to classify these sing by",
    "start": "802360",
    "end": "804480"
  },
  {
    "text": "categories also it would be just super",
    "start": "804480",
    "end": "807079"
  },
  {
    "text": "swell if you could keep track the",
    "start": "807079",
    "end": "809120"
  },
  {
    "text": "individual votes and when they were",
    "start": "809120",
    "end": "810480"
  },
  {
    "text": "actually submitted and you're like man I",
    "start": "810480",
    "end": "812000"
  },
  {
    "text": "already got this production I don't",
    "start": "812000",
    "end": "813519"
  },
  {
    "text": "necessarily want to do any sort of",
    "start": "813519",
    "end": "814639"
  },
  {
    "text": "database migration or marck with that",
    "start": "814639",
    "end": "816320"
  },
  {
    "text": "fortunately with mongod DB you don't",
    "start": "816320",
    "end": "818079"
  },
  {
    "text": "have",
    "start": "818079",
    "end": "819160"
  },
  {
    "text": "to so we're going to go back up to our",
    "start": "819160",
    "end": "821519"
  },
  {
    "text": "vote for question or actually we're",
    "start": "821519",
    "end": "822760"
  },
  {
    "text": "going to go back up to our create",
    "start": "822760",
    "end": "823760"
  },
  {
    "text": "question first and we're going to go",
    "start": "823760",
    "end": "824959"
  },
  {
    "text": "ahead and uh when you create a new",
    "start": "824959",
    "end": "826279"
  },
  {
    "text": "question we're going to add two new",
    "start": "826279",
    "end": "827240"
  },
  {
    "text": "Fields here the first one is going to be",
    "start": "827240",
    "end": "829680"
  },
  {
    "text": "a category um if you guys can see",
    "start": "829680",
    "end": "833880"
  },
  {
    "text": "this all right first one's going to be a",
    "start": "836199",
    "end": "838480"
  },
  {
    "text": "category and then the second one is",
    "start": "838480",
    "end": "839639"
  },
  {
    "text": "going to be the array of votes that Ward",
    "start": "839639",
    "end": "841399"
  },
  {
    "text": "was talking about previously and what",
    "start": "841399",
    "end": "843279"
  },
  {
    "text": "this vote uh the array of votes does is",
    "start": "843279",
    "end": "844920"
  },
  {
    "text": "it actually creates a bunch of",
    "start": "844920",
    "end": "845920"
  },
  {
    "text": "subdocuments that are going to be",
    "start": "845920",
    "end": "847040"
  },
  {
    "text": "Associated and nested inside of the",
    "start": "847040",
    "end": "848920"
  },
  {
    "text": "original database document um this",
    "start": "848920",
    "end": "851440"
  },
  {
    "text": "also allows for things like Atomic",
    "start": "851440",
    "end": "852920"
  },
  {
    "text": "operations inside of the sub",
    "start": "852920",
    "end": "854560"
  },
  {
    "text": "subdocuments which is really really",
    "start": "854560",
    "end": "855880"
  },
  {
    "text": "powerful now if we go back and we check",
    "start": "855880",
    "end": "858199"
  },
  {
    "text": "our rest or our uh our create uh post",
    "start": "858199",
    "end": "860880"
  },
  {
    "text": "route and we try ends add a new",
    "start": "860880",
    "end": "865600"
  },
  {
    "text": "question hit the send",
    "start": "867680",
    "end": "871240"
  },
  {
    "text": "button and like Ward we forget to",
    "start": "873000",
    "end": "875800"
  },
  {
    "text": "save all right try this again and now we",
    "start": "875800",
    "end": "878000"
  },
  {
    "text": "have a returned with a category of",
    "start": "878000",
    "end": "879519"
  },
  {
    "text": "Express and we have an empty array that",
    "start": "879519",
    "end": "882160"
  },
  {
    "text": "represents the empty subdocuments that",
    "start": "882160",
    "end": "884320"
  },
  {
    "text": "have been nested inside of our",
    "start": "884320",
    "end": "887279"
  },
  {
    "text": "document all right now we go to our",
    "start": "887279",
    "end": "890600"
  },
  {
    "start": "888000",
    "end": "973000"
  },
  {
    "text": "update Vote or our vote um uh upvote",
    "start": "890600",
    "end": "894519"
  },
  {
    "text": "method uh function and what this one is",
    "start": "894519",
    "end": "896839"
  },
  {
    "text": "actually going to look like is now we",
    "start": "896839",
    "end": "898279"
  },
  {
    "text": "use this a function that's built inongo",
    "start": "898279",
    "end": "900959"
  },
  {
    "text": "called the push which as you can",
    "start": "900959",
    "end": "903199"
  },
  {
    "text": "probably guess pushes a sub doent onto a",
    "start": "903199",
    "end": "905360"
  },
  {
    "text": "document array so the document field is",
    "start": "905360",
    "end": "908800"
  },
  {
    "text": "votes and we'll push a subdocument call",
    "start": "908800",
    "end": "911639"
  },
  {
    "text": "um called votes onto this function or",
    "start": "911639",
    "end": "913639"
  },
  {
    "text": "the array and it'll just be very very",
    "start": "913639",
    "end": "916160"
  },
  {
    "text": "simple we include a vote count which",
    "start": "916160",
    "end": "918079"
  },
  {
    "text": "will be like a you know 1 3 negative 1",
    "start": "918079",
    "end": "919720"
  },
  {
    "text": "whatever you want and then also a time",
    "start": "919720",
    "end": "924600"
  },
  {
    "text": "um a time of when the vote was actually",
    "start": "926040",
    "end": "929920"
  },
  {
    "text": "so now if we go back to post man and we",
    "start": "929920",
    "end": "932519"
  },
  {
    "text": "want to update the",
    "start": "932519",
    "end": "934880"
  },
  {
    "text": "vote by three we now have this function",
    "start": "934880",
    "end": "937560"
  },
  {
    "text": "that returns and we now have our votes",
    "start": "937560",
    "end": "939600"
  },
  {
    "text": "sub uh we now have our votes associated",
    "start": "939600",
    "end": "941560"
  },
  {
    "text": "in the subdocument we can of course",
    "start": "941560",
    "end": "943160"
  },
  {
    "text": "change this make it like a",
    "start": "943160",
    "end": "946360"
  },
  {
    "text": "100 and we now have three 100 and then",
    "start": "946759",
    "end": "949880"
  },
  {
    "text": "the vote count has been incremented",
    "start": "949880",
    "end": "951759"
  },
  {
    "text": "accordingly and what's really really",
    "start": "951759",
    "end": "953199"
  },
  {
    "text": "powerful is again we did not have to do",
    "start": "953199",
    "end": "954920"
  },
  {
    "text": "anything at the database level we did",
    "start": "954920",
    "end": "956199"
  },
  {
    "text": "not have to migrate any tables or create",
    "start": "956199",
    "end": "958079"
  },
  {
    "text": "any tables we did not have to add any",
    "start": "958079",
    "end": "959759"
  },
  {
    "text": "rows to it right all we did was just",
    "start": "959759",
    "end": "961680"
  },
  {
    "text": "tell manga we wanted to insert these",
    "start": "961680",
    "end": "963279"
  },
  {
    "text": "fields and then it let us do",
    "start": "963279",
    "end": "967079"
  },
  {
    "text": "that all right",
    "start": "968319",
    "end": "972279"
  },
  {
    "start": "973000",
    "end": "1072000"
  },
  {
    "text": "so we're going to go back up now to our",
    "start": "973440",
    "end": "975480"
  },
  {
    "text": "index method and um we're going to add",
    "start": "975480",
    "end": "978040"
  },
  {
    "text": "uh paging and paging is is obviously",
    "start": "978040",
    "end": "980240"
  },
  {
    "text": "something that's that's pretty cool and",
    "start": "980240",
    "end": "981399"
  },
  {
    "text": "it typically requires two sorts of",
    "start": "981399",
    "end": "983480"
  },
  {
    "text": "functions you need to be able to limit",
    "start": "983480",
    "end": "985079"
  },
  {
    "text": "the amount of questions that are returns",
    "start": "985079",
    "end": "986680"
  },
  {
    "text": "and you need to be able to skip a",
    "start": "986680",
    "end": "987720"
  },
  {
    "text": "certain number of questions so that you",
    "start": "987720",
    "end": "988920"
  },
  {
    "text": "can load the first 10 the second 10 the",
    "start": "988920",
    "end": "990480"
  },
  {
    "text": "third 10 Etc so to do",
    "start": "990480",
    "end": "994079"
  },
  {
    "text": "this we are going to",
    "start": "994079",
    "end": "998480"
  },
  {
    "text": "uh use a function that was previously",
    "start": "1005959",
    "end": "1009079"
  },
  {
    "text": "written uh called get query",
    "start": "1009079",
    "end": "1013040"
  },
  {
    "text": "options all",
    "start": "1013839",
    "end": "1016800"
  },
  {
    "text": "right and what this function is is going",
    "start": "1016800",
    "end": "1018639"
  },
  {
    "text": "to do is it's just pretty simple it'll",
    "start": "1018639",
    "end": "1019800"
  },
  {
    "text": "just parse out what the limit is and",
    "start": "1019800",
    "end": "1021160"
  },
  {
    "text": "what the skip is if it exists now one of",
    "start": "1021160",
    "end": "1023160"
  },
  {
    "text": "the really cool things about is",
    "start": "1023160",
    "end": "1024558"
  },
  {
    "text": "that you can assemble queries on the go",
    "start": "1024559",
    "end": "1026678"
  },
  {
    "text": "so you create this query object and as I",
    "start": "1026679",
    "end": "1028520"
  },
  {
    "text": "mentioned it does not actually go back",
    "start": "1028520",
    "end": "1030199"
  },
  {
    "text": "and it does not actually create the",
    "start": "1030199",
    "end": "1031120"
  },
  {
    "text": "query until we call the two array",
    "start": "1031120",
    "end": "1032360"
  },
  {
    "text": "function so now that we have this object",
    "start": "1032360",
    "end": "1034199"
  },
  {
    "text": "we can continue to limit it skip it and",
    "start": "1034199",
    "end": "1036918"
  },
  {
    "text": "uh later on we'll show how to sort it as",
    "start": "1036919",
    "end": "1038520"
  },
  {
    "text": "well so now if we go back and we add a",
    "start": "1038520",
    "end": "1042038"
  },
  {
    "text": "query parameter to our get all questions",
    "start": "1042039",
    "end": "1044400"
  },
  {
    "text": "we can now limit it to two questions",
    "start": "1044400",
    "end": "1045918"
  },
  {
    "text": "that we want to return and you'll see",
    "start": "1045919",
    "end": "1047520"
  },
  {
    "text": "here that only two questions have been",
    "start": "1047520",
    "end": "1048880"
  },
  {
    "text": "returned if we want to skip or offset by",
    "start": "1048880",
    "end": "1052440"
  },
  {
    "text": "two we can do that as well and we now",
    "start": "1052440",
    "end": "1054400"
  },
  {
    "text": "have two questions but both of these are",
    "start": "1054400",
    "end": "1055799"
  },
  {
    "text": "going to be completely different than",
    "start": "1055799",
    "end": "1056880"
  },
  {
    "text": "the previous",
    "start": "1056880",
    "end": "1058280"
  },
  {
    "text": "two um by default sorts by the uh",
    "start": "1058280",
    "end": "1061559"
  },
  {
    "text": "the ID um so and so which typically is a",
    "start": "1061559",
    "end": "1064720"
  },
  {
    "text": "Time inserted um because of the time",
    "start": "1064720",
    "end": "1067720"
  },
  {
    "text": "stamp built into the underscore ID field",
    "start": "1067720",
    "end": "1070520"
  },
  {
    "text": "all",
    "start": "1070520",
    "end": "1072480"
  },
  {
    "start": "1072000",
    "end": "1126000"
  },
  {
    "text": "right and then finally we can also add",
    "start": "1072480",
    "end": "1075559"
  },
  {
    "text": "sorting and um what what the Sorting",
    "start": "1075559",
    "end": "1078440"
  },
  {
    "text": "looks like is it actually looks like",
    "start": "1078440",
    "end": "1079640"
  },
  {
    "text": "this object right",
    "start": "1079640",
    "end": "1082120"
  },
  {
    "text": "here right and uh what we essentially",
    "start": "1082120",
    "end": "1084640"
  },
  {
    "text": "have is we can sort by vote count and",
    "start": "1084640",
    "end": "1086000"
  },
  {
    "text": "negative one is decreasing and pretty",
    "start": "1086000",
    "end": "1087600"
  },
  {
    "text": "much what that means is obviously the",
    "start": "1087600",
    "end": "1089600"
  },
  {
    "text": "top Vote or the most upvoted question",
    "start": "1089600",
    "end": "1091360"
  },
  {
    "text": "will be appear first we can also sort by",
    "start": "1091360",
    "end": "1094240"
  },
  {
    "text": "Time created so this will be the um uh",
    "start": "1094240",
    "end": "1097200"
  },
  {
    "text": "most recent or least recent question uh",
    "start": "1097200",
    "end": "1100520"
  },
  {
    "text": "first and we can go back to our postand",
    "start": "1100520",
    "end": "1102600"
  },
  {
    "text": "route and we can test this as well so",
    "start": "1102600",
    "end": "1105000"
  },
  {
    "text": "now if we go here and we specify um",
    "start": "1105000",
    "end": "1110320"
  },
  {
    "text": "votes or",
    "start": "1111919",
    "end": "1113400"
  },
  {
    "text": "vote these thing are going to appear in",
    "start": "1113400",
    "end": "1116360"
  },
  {
    "text": "descending order of vote count so 115",
    "start": "1116360",
    "end": "1118400"
  },
  {
    "text": "there we've got two here and then zero",
    "start": "1118400",
    "end": "1121640"
  },
  {
    "text": "and",
    "start": "1121640",
    "end": "1123840"
  },
  {
    "text": "zero all right now finally one last",
    "start": "1125960",
    "end": "1128480"
  },
  {
    "start": "1126000",
    "end": "1260000"
  },
  {
    "text": "feature of mongod DB that I want to show",
    "start": "1128480",
    "end": "1129919"
  },
  {
    "text": "you guys is something called um um",
    "start": "1129919",
    "end": "1132840"
  },
  {
    "text": "projections now something that's pretty",
    "start": "1132840",
    "end": "1135039"
  },
  {
    "text": "a typical situation is that documents",
    "start": "1135039",
    "end": "1136559"
  },
  {
    "text": "can get very very big and they can they",
    "start": "1136559",
    "end": "1138120"
  },
  {
    "text": "can a lot of fields and for certain",
    "start": "1138120",
    "end": "1139679"
  },
  {
    "text": "queries you might only want to retrieve",
    "start": "1139679",
    "end": "1142080"
  },
  {
    "text": "certain uh Fields you might only care",
    "start": "1142080",
    "end": "1143880"
  },
  {
    "text": "about for example the name or the text",
    "start": "1143880",
    "end": "1145960"
  },
  {
    "text": "you might not care about the nested",
    "start": "1145960",
    "end": "1147600"
  },
  {
    "text": "array of of votes but maybe just the",
    "start": "1147600",
    "end": "1149440"
  },
  {
    "text": "vote number so what we can use is we can",
    "start": "1149440",
    "end": "1151159"
  },
  {
    "text": "use a database projection in order",
    "start": "1151159",
    "end": "1153360"
  },
  {
    "text": "to only retrieve the fields that we",
    "start": "1153360",
    "end": "1154919"
  },
  {
    "text": "actually care about so what we'll do is",
    "start": "1154919",
    "end": "1157039"
  },
  {
    "text": "we'll have this very uh this uh object",
    "start": "1157039",
    "end": "1159120"
  },
  {
    "text": "called fields and what we're specifying",
    "start": "1159120",
    "end": "1160880"
  },
  {
    "text": "is is one next to the the uh fields that",
    "start": "1160880",
    "end": "1163240"
  },
  {
    "text": "we want retrieved you'll note that the",
    "start": "1163240",
    "end": "1165000"
  },
  {
    "text": "votes array is not specified there so",
    "start": "1165000",
    "end": "1167200"
  },
  {
    "text": "when we complete this query it will not",
    "start": "1167200",
    "end": "1168880"
  },
  {
    "text": "actually be returned now this thing this",
    "start": "1168880",
    "end": "1171640"
  },
  {
    "text": "Fields array can be added to multiple",
    "start": "1171640",
    "end": "1173240"
  },
  {
    "text": "different queries um we will just be",
    "start": "1173240",
    "end": "1175760"
  },
  {
    "text": "doing it with the find",
    "start": "1175760",
    "end": "1179480"
  },
  {
    "text": "one and then as always call",
    "start": "1179799",
    "end": "1184120"
  },
  {
    "text": "the to array function on it",
    "start": "1185440",
    "end": "1190158"
  },
  {
    "text": "right all",
    "start": "1192799",
    "end": "1194520"
  },
  {
    "text": "right and now if we go back to the",
    "start": "1194520",
    "end": "1198200"
  },
  {
    "text": "Postman",
    "start": "1198200",
    "end": "1199440"
  },
  {
    "text": "client and we call with the the",
    "start": "1199440",
    "end": "1201720"
  },
  {
    "text": "projection operator you'll note that",
    "start": "1201720",
    "end": "1203840"
  },
  {
    "text": "we're returning a list of arrays but or",
    "start": "1203840",
    "end": "1205640"
  },
  {
    "text": "a list of uh uh questions but none of",
    "start": "1205640",
    "end": "1208400"
  },
  {
    "text": "the subdocuments have been returned",
    "start": "1208400",
    "end": "1209960"
  },
  {
    "text": "because we did not specify that in our",
    "start": "1209960",
    "end": "1213399"
  },
  {
    "text": "projection all right uh that about",
    "start": "1215520",
    "end": "1218880"
  },
  {
    "text": "actually wraps up the mongod DB portion",
    "start": "1218880",
    "end": "1220360"
  },
  {
    "text": "of this um I was instructed by mongodb",
    "start": "1220360",
    "end": "1223480"
  },
  {
    "text": "if you guys want to learn more about",
    "start": "1223480",
    "end": "1224600"
  },
  {
    "text": "them they have another event that's",
    "start": "1224600",
    "end": "1225799"
  },
  {
    "text": "happening December 3rd it's a meet up in",
    "start": "1225799",
    "end": "1227760"
  },
  {
    "text": "San Francisco go come learn about it um",
    "start": "1227760",
    "end": "1230840"
  },
  {
    "text": "and then finally we have uh right now we",
    "start": "1230840",
    "end": "1233120"
  },
  {
    "text": "have the live demo that's up um There's",
    "start": "1233120",
    "end": "1235200"
  },
  {
    "text": "the link to it we're about to take a",
    "start": "1235200",
    "end": "1236880"
  },
  {
    "text": "break so feel free to go here up vote",
    "start": "1236880",
    "end": "1239440"
  },
  {
    "text": "vote on questions up vote questions um",
    "start": "1239440",
    "end": "1241559"
  },
  {
    "text": "and then Alicia will be up after the",
    "start": "1241559",
    "end": "1242880"
  },
  {
    "text": "break to explain what the front end",
    "start": "1242880",
    "end": "1244159"
  },
  {
    "text": "looks like and how we built it so thank",
    "start": "1244159",
    "end": "1246360"
  },
  {
    "text": "you guys very",
    "start": "1246360",
    "end": "1247410"
  },
  {
    "text": "[Applause]",
    "start": "1247410",
    "end": "1254219"
  },
  {
    "text": "much",
    "start": "1257120",
    "end": "1260120"
  }
]