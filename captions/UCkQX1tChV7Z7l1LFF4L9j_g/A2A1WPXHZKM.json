[
  {
    "text": "want to ensure your app developers can create secure and smooth login experiences for your customers with curity you can protect user identities",
    "start": "719",
    "end": "7600"
  },
  {
    "text": "secure apps and websites and manage API access find out more at",
    "start": "7600",
    "end": "13360"
  },
  {
    "text": "city.io hi everyone my name is shini penala I am the lead editor for AIML and",
    "start": "16720",
    "end": "24000"
  },
  {
    "text": "data engineering community at infoq and also a podcast host",
    "start": "24000",
    "end": "30560"
  },
  {
    "text": "in today's podcast I will be speaking with dpti sigi technical lead for vtus a",
    "start": "30560",
    "end": "37600"
  },
  {
    "text": "cloud native Computing Foundation uh graduated open source project we will discuss the topic of distributed",
    "start": "37600",
    "end": "43960"
  },
  {
    "text": "databases architecture especially in the cloud native era where it's uh critical for",
    "start": "43960",
    "end": "50719"
  },
  {
    "text": "the database solutions to provide capabilities like performance availability scalability and",
    "start": "50719",
    "end": "58440"
  },
  {
    "text": "resilience Hi D thank you for joining me in this podcast uh first question uh can",
    "start": "58440",
    "end": "63480"
  },
  {
    "text": "you introduce yourself and tell our listeners about your career and what",
    "start": "63480",
    "end": "69040"
  },
  {
    "text": "areas have you been focusing on recently hi shreni thank you for inviting me to speak with you today I am",
    "start": "69040",
    "end": "77159"
  },
  {
    "text": "currently the technical lead for Vitus open source project and also the vitus",
    "start": "77159",
    "end": "82520"
  },
  {
    "text": "engineering lead at Planet scale which is a database as a service company that",
    "start": "82520",
    "end": "87600"
  },
  {
    "text": "database as a service is actually built on vs my career started a long time ago and",
    "start": "87600",
    "end": "95079"
  },
  {
    "text": "almost from the beginning I have worked on databases but to start with as an application developer so there is a",
    "start": "95079",
    "end": "103079"
  },
  {
    "text": "database backend Oracle db2 inic and you are writing things that will run against",
    "start": "103079",
    "end": "109159"
  },
  {
    "text": "that uh data stored in the tables and applications will fetch the data do",
    "start": "109159",
    "end": "114280"
  },
  {
    "text": "something with them right but what happened very early on uh starting in the year 20 is that I was working on",
    "start": "114280",
    "end": "121640"
  },
  {
    "text": "doing supply chain planning solutions for the retail industry and the retail industry has massive amounts of data so",
    "start": "121640",
    "end": "128239"
  },
  {
    "text": "we had to actually start thinking about how do you run anything on these",
    "start": "128239",
    "end": "134640"
  },
  {
    "text": "massive amounts of data because the hardware that was available to us at that time it was actually not possible",
    "start": "134640",
    "end": "141040"
  },
  {
    "text": "to load everything into memory and process it and then uh write out the results so we had to come up with",
    "start": "141040",
    "end": "148000"
  },
  {
    "text": "parallelizable essentially paral Computing solutions to work with these monolithic databases uh where people",
    "start": "148000",
    "end": "155560"
  },
  {
    "text": "kept their data I did that for about 10 years and then I moved on to uh working on cloud",
    "start": "155560",
    "end": "163680"
  },
  {
    "text": "security at a startup that was eventually acquired by IBM and this was",
    "start": "163680",
    "end": "168720"
  },
  {
    "text": "mobile device management so mobile security and even there you have a lot of data and it was",
    "start": "168720",
    "end": "175680"
  },
  {
    "text": "being stored in Oracle and uh we were actually doing what is now called custom",
    "start": "175680",
    "end": "182280"
  },
  {
    "text": "sharding because we would store different users data in different schemas in the same Oracle database so",
    "start": "182280",
    "end": "189440"
  },
  {
    "text": "it was essentially a multi-tenant system uh fast forward a few more years and then I joined Planet scale and",
    "start": "189440",
    "end": "196280"
  },
  {
    "text": "started working on vits which uh is a massively scalable distributed database",
    "start": "196280",
    "end": "202239"
  },
  {
    "text": "system built around my SQL my SQL is the foundation but my SQL is monolithic and",
    "start": "202239",
    "end": "209120"
  },
  {
    "text": "cannot actually scale beyond the limits of one server and uh what Wiest does is that it",
    "start": "209120",
    "end": "215560"
  },
  {
    "text": "actually solves many of those limitations for the largest users of myql yes uh MySQL is a popular open",
    "start": "215560",
    "end": "222879"
  },
  {
    "text": "source database and it's been around for a long time so vits is built on top of that so uh as you said Vitus is a",
    "start": "222879",
    "end": "229560"
  },
  {
    "text": "distributed database can you discuss the like a high level architecture of how the database Works uh you know how it",
    "start": "229560",
    "end": "237120"
  },
  {
    "text": "brings this distributed uh data management cap to my SQL so let me give",
    "start": "237120",
    "end": "242480"
  },
  {
    "text": "a little bit of history of vtas first which will set the context for all the things that vtus is capable of doing",
    "start": "242480",
    "end": "249120"
  },
  {
    "text": "witus was created at YouTube in 2010 and the reason it was created is because",
    "start": "249120",
    "end": "255079"
  },
  {
    "text": "YouTube at that time was having a lot of difficulty dealing with the amount of traffic they were receiving and all of",
    "start": "255079",
    "end": "261120"
  },
  {
    "text": "the video metadata was stored in my SQL and the site would basically go down",
    "start": "261120",
    "end": "267600"
  },
  {
    "text": "every day because it was was just exploding and my SQL was not able to keep up so by that time YouTube was",
    "start": "267600",
    "end": "276080"
  },
  {
    "text": "already part of Google but they were running their own infrastructure and some of the engineers decided that this",
    "start": "276080",
    "end": "283240"
  },
  {
    "text": "was not a situation that you could live with it was uh simply not tenable to",
    "start": "283240",
    "end": "289680"
  },
  {
    "text": "continue uh the way they were going and they decided that they had to solve this problem uh in some fundamental way and",
    "start": "289680",
    "end": "297440"
  },
  {
    "text": "that's how witus was born and it grew in phases so they basically uh to start",
    "start": "297440",
    "end": "302639"
  },
  {
    "text": "with identified what was the biggest pain Point like my SQL runs out of",
    "start": "302639",
    "end": "308120"
  },
  {
    "text": "connections stuff like that so let's do some connection pooling let's put a management layer in front of my SQL so",
    "start": "308120",
    "end": "315280"
  },
  {
    "text": "that we can reduce the load on my SQL type of things right but eventually it has grown to where we",
    "start": "315280",
    "end": "322520"
  },
  {
    "text": "are so with with wits you can take your data and Shard it vertically meaning you",
    "start": "322520",
    "end": "328479"
  },
  {
    "text": "take your set of tables and put a subset on a different MySQL server and bits can",
    "start": "328479",
    "end": "336039"
  },
  {
    "text": "make it transparently look as if there is only one database behind the scenes",
    "start": "336039",
    "end": "341360"
  },
  {
    "text": "even though there are multiple MySQL servers and different tables live on different servers or you can do",
    "start": "341360",
    "end": "346600"
  },
  {
    "text": "horizontal sharing where a single table is actually distributed across multiple servers but still looks like a single",
    "start": "346600",
    "end": "353479"
  },
  {
    "text": "table to the application so that's a little bit of history and features in",
    "start": "353479",
    "end": "358639"
  },
  {
    "text": "terms of architecture picture what vtest does is that as part of the vtest system",
    "start": "358639",
    "end": "364840"
  },
  {
    "text": "every MySQL that is being managed has a sidecar um process which we call VT",
    "start": "364840",
    "end": "372280"
  },
  {
    "text": "tablet which manages that MySQL and then the process that applications interact",
    "start": "372280",
    "end": "378759"
  },
  {
    "text": "with is called BT gate it's a Gateway that accepts requests for data and that",
    "start": "378759",
    "end": "384639"
  },
  {
    "text": "can be MySQL protocol or it can be grpc calls and it will decide how to route",
    "start": "384639",
    "end": "391479"
  },
  {
    "text": "those queries to the backing VT tablets which will then send the queries to the",
    "start": "391479",
    "end": "397039"
  },
  {
    "text": "underlying my SQL and then return the results to vgate which will aggregate them if necessary and then send them",
    "start": "397039",
    "end": "403840"
  },
  {
    "text": "back to the client application so at a very high level you have the client",
    "start": "403840",
    "end": "409199"
  },
  {
    "text": "talks to vgate vgate figures out uh how to par plan execute that query sends it",
    "start": "409199",
    "end": "416319"
  },
  {
    "text": "down to VT tablets which will send it down to my SQL and and the whole path travels back in Reverse with the results",
    "start": "416319",
    "end": "425560"
  },
  {
    "text": "yeah I'm interested in getting into specifics of a distributed database but before we do that I would like to uh ask",
    "start": "425560",
    "end": "432800"
  },
  {
    "text": "a couple of high level questions so what should the database developers consider",
    "start": "432800",
    "end": "438120"
  },
  {
    "text": "when looking for a cloud native database if they have a database need and they",
    "start": "438120",
    "end": "443720"
  },
  {
    "text": "would like to leverage a cloud database what should they look for you know what kind of high level architecture and design consideration",
    "start": "443720",
    "end": "450639"
  },
  {
    "text": "at this point in time almost every uh commercially available database has a",
    "start": "450639",
    "end": "456120"
  },
  {
    "text": "cloud offering and they are capable of running in the cloud right that was not",
    "start": "456120",
    "end": "461520"
  },
  {
    "text": "always the case so really the things that you want to look for when you are",
    "start": "461520",
    "end": "467240"
  },
  {
    "text": "looking for a cloud database are usability because it's important you have very little control over how the",
    "start": "467240",
    "end": "473800"
  },
  {
    "text": "database is being run behind the scenes so you have to be able to see what the",
    "start": "473800",
    "end": "479879"
  },
  {
    "text": "configuration is whether it works for you and T and be able to tune it to some extent there'll be some things that any",
    "start": "479879",
    "end": "486599"
  },
  {
    "text": "service provider will not allow you to to tune but it needs to be usable for your application needs compatibility",
    "start": "486599",
    "end": "494440"
  },
  {
    "text": "whatever it is that you doing needs to be supported by the database you're looking at because there are many many",
    "start": "494440",
    "end": "500120"
  },
  {
    "text": "uh Cloud databases there's Amazon RS Google Cloud SQL has a cloud",
    "start": "500120",
    "end": "505960"
  },
  {
    "text": "offering there are so you have SQL databases no databases Oracle has Cloud",
    "start": "505960",
    "end": "511360"
  },
  {
    "text": "database offerings so there are many options so that compatibility is very important and then up time you have no",
    "start": "511360",
    "end": "520240"
  },
  {
    "text": "control over how uh well the database is staying up and many times the database",
    "start": "520240",
    "end": "526560"
  },
  {
    "text": "is critical to operations so you have to look at the Historical uptime and the SLA that the cloud provider provider is",
    "start": "526560",
    "end": "533399"
  },
  {
    "text": "providing you what you should not need to worry about are things like will my",
    "start": "533399",
    "end": "539440"
  },
  {
    "text": "data be safe will my database be available will I lose my data can I uh",
    "start": "539440",
    "end": "545440"
  },
  {
    "text": "get my data out all those are Baseline things that the cloud providers need to",
    "start": "545440",
    "end": "550880"
  },
  {
    "text": "make sure happen and you shouldn't have to worry about them but you need to check those boxes when you are choosing",
    "start": "550880",
    "end": "557120"
  },
  {
    "text": "an option and kind of a more of a follow followup question to that like I know like not every application requires a",
    "start": "557120",
    "end": "564600"
  },
  {
    "text": "massively parallel distrib database so what are the uh things that database do velers and application developers should",
    "start": "564600",
    "end": "570600"
  },
  {
    "text": "look for when you know they could use a database that's not a like Cloud na",
    "start": "570600",
    "end": "576680"
  },
  {
    "text": "database uh that's a good question I don't know that at this point",
    "start": "576680",
    "end": "583640"
  },
  {
    "text": "of Software System Evolution there are very many situations",
    "start": "583640",
    "end": "590200"
  },
  {
    "text": "where you can't use a cloud database usually it is because you have highly",
    "start": "590200",
    "end": "595440"
  },
  {
    "text": "sensitive data that legally you are not allowed to store in a third party right",
    "start": "595440",
    "end": "602160"
  },
  {
    "text": "because otherwise in terms of encryption in terms of network security uh things",
    "start": "602160",
    "end": "608560"
  },
  {
    "text": "have come a long way and in general it is safe to uh do things in the cloud so",
    "start": "608560",
    "end": "615040"
  },
  {
    "text": "the only thing I can really think of is legal reasons that you would not use something in the cloud also I I kind of",
    "start": "615040",
    "end": "622040"
  },
  {
    "text": "Mis phrase my question you know so um I think cloud datase are always good choices for pretty much most of the",
    "start": "622040",
    "end": "627880"
  },
  {
    "text": "applications but Al like the distributed database may not be needed for some of the apps so you can use a standalone",
    "start": "627880",
    "end": "633800"
  },
  {
    "text": "database in the cloud correct not everyone not everyone needs uh an",
    "start": "633800",
    "end": "639000"
  },
  {
    "text": "infinitely scalable database that is actually perfectly right and that is why",
    "start": "639000",
    "end": "644040"
  },
  {
    "text": "when you are starting off you want to choose your database based on usability based on compatibility with whatever",
    "start": "644040",
    "end": "650120"
  },
  {
    "text": "applications and Frameworks you're already using whatever tooling you are already using and just choose something",
    "start": "650120",
    "end": "656560"
  },
  {
    "text": "that you can rely on that will stay up so that goes back to my uh previous",
    "start": "656560",
    "end": "663560"
  },
  {
    "text": "explanation of how uh people should make these decisions so assuming that you know distributed database is the right",
    "start": "663560",
    "end": "670079"
  },
  {
    "text": "choice so one of the architectural highlights of vtus uh is sharding how it manages the",
    "start": "670079",
    "end": "676920"
  },
  {
    "text": "database across different shards so can you tell us how data sharding or partitioning works as well as data",
    "start": "676920",
    "end": "683839"
  },
  {
    "text": "replication Works in vest database okay sharding was Des designed to",
    "start": "683839",
    "end": "689800"
  },
  {
    "text": "provide scalability right so we'll talk about that first and then replication is being used to provide High availability",
    "start": "689800",
    "end": "696360"
  },
  {
    "text": "so we'll talk about that next in witus sharding is customizable meaning you",
    "start": "696360",
    "end": "702440"
  },
  {
    "text": "choose which column in your table you want to use as the sharding key it is not hardcoded it is not fixed and you",
    "start": "702440",
    "end": "708720"
  },
  {
    "text": "can also choose the function based on which you are sharding so we have several functions available and we also",
    "start": "708720",
    "end": "714560"
  },
  {
    "text": "have a public interface using which people can build custom sharding functions as well",
    "start": "714560",
    "end": "720360"
  },
  {
    "text": "and essentially what it means is that whenever you are inserting a row into a",
    "start": "720360",
    "end": "725920"
  },
  {
    "text": "sharded table we V withs VT gate will compute",
    "start": "725920",
    "end": "731000"
  },
  {
    "text": "which Shard it needs to go into and it will write it into that Shard and then whenever you are trying to read a row",
    "start": "731000",
    "end": "737920"
  },
  {
    "text": "vgate will compute which Shard that row lives in and fetch it from that Shard",
    "start": "737920",
    "end": "744279"
  },
  {
    "text": "sometimes there are queries where you cannot compute specifically one Shard for for example if you say uh get me all",
    "start": "744279",
    "end": "752639"
  },
  {
    "text": "the items in my store which cost more than a million dollars right for a query",
    "start": "752639",
    "end": "759519"
  },
  {
    "text": "like that you don't know which Shard the data is living in in fact it can live in multiple shards so what vgate will do is",
    "start": "759519",
    "end": "766839"
  },
  {
    "text": "called a scatter query it will actually send that query to all the shards and gather the results and bring them back",
    "start": "766839",
    "end": "774560"
  },
  {
    "text": "uh so this is basically how sharding works from the user point of view",
    "start": "774560",
    "end": "779720"
  },
  {
    "text": "behind the scenes we have a lot of tooling that helps people to move from their currently unshaded databases so",
    "start": "779720",
    "end": "787240"
  },
  {
    "text": "people get into like terabytes of data and then everything starts slowing down and managing things becomes very",
    "start": "787240",
    "end": "793639"
  },
  {
    "text": "difficult at that point they decide okay we need to Shard and either we need to do vertical sharding which is Separate",
    "start": "793639",
    "end": "799519"
  },
  {
    "text": "Tables into multiple instances or horizontal sharding we'll focus on horizontal sharding so we have the tools",
    "start": "799519",
    "end": "807199"
  },
  {
    "text": "using which you can define what your sharding scheme is how you want to Shard each table based on which column you",
    "start": "807199",
    "end": "814360"
  },
  {
    "text": "choose the tables that you want to keep together and first you may do a vertical sharding to move them onto their own",
    "start": "814360",
    "end": "820120"
  },
  {
    "text": "servers and then you do a horizontal sharding to split them up across servers and the tooling will basically copy all",
    "start": "820120",
    "end": "828079"
  },
  {
    "text": "the data onto the new shards and it will keep it up to date with your current",
    "start": "828079",
    "end": "833320"
  },
  {
    "text": "database to which you can keep writing your system is up and running you can copy everything in the background around",
    "start": "833320",
    "end": "839920"
  },
  {
    "text": "and then when you're ready to switch to your sharded configuration and you issue",
    "start": "839920",
    "end": "845240"
  },
  {
    "text": "that command we will stop all accepting All rights for uh like very small period",
    "start": "845240",
    "end": "852040"
  },
  {
    "text": "of time this should take less than 30 seconds maybe 10 or 15 seconds we'll",
    "start": "852040",
    "end": "858480"
  },
  {
    "text": "stop accepting All rights on the original uh database or datab basis and",
    "start": "858480",
    "end": "865000"
  },
  {
    "text": "switch everything over to the new shards and then we'll open it up up again for",
    "start": "865000",
    "end": "870399"
  },
  {
    "text": "rights so that the new data will flow to the new shards and in this process you",
    "start": "870399",
    "end": "875800"
  },
  {
    "text": "can optionally also set up what we call a reverse replication so that the old databases are kept in sync with new uh",
    "start": "875800",
    "end": "883040"
  },
  {
    "text": "data and changes that are happening on your new shards just in case you need to roll back so we have the facility to do",
    "start": "883040",
    "end": "891320"
  },
  {
    "text": "a cut over and then reverse it if something goes wrong because things can",
    "start": "891320",
    "end": "896360"
  },
  {
    "text": "always go wrong so we have a lot of tooling around uh how you do the sharding how you make it safe how you do",
    "start": "896360",
    "end": "903120"
  },
  {
    "text": "the cut overs roll backs all of those things okay that's for the sharding uh",
    "start": "903120",
    "end": "908639"
  },
  {
    "text": "is replication how does the replication work so in our like modern software",
    "start": "908639",
    "end": "914680"
  },
  {
    "text": "World applications Services they have to stay up all the time downtime is not acceptable right uh downtime is tracked",
    "start": "914680",
    "end": "922120"
  },
  {
    "text": "for every popular service and Beyond a certain point users will just leave if your service is not up they will go",
    "start": "922120",
    "end": "928440"
  },
  {
    "text": "somewhere else they have options so uh given that witus",
    "start": "928440",
    "end": "933480"
  },
  {
    "text": "is backing many originally it backed YouTube YouTube had to be up 24 by7",
    "start": "933480",
    "end": "939160"
  },
  {
    "text": "people all over the world are uh using it and then over time uh other places like slack GitHub um square cash you",
    "start": "939160",
    "end": "948639"
  },
  {
    "text": "want to make a money transaction you don't want the database to be down right you don't want the service to be done so",
    "start": "948639",
    "end": "953800"
  },
  {
    "text": "the service needs the database to be up at all times because you have this stack",
    "start": "953800",
    "end": "959519"
  },
  {
    "text": "where you have the user who's interacting with a a web app from a browser and then you have all these",
    "start": "959519",
    "end": "965839"
  },
  {
    "text": "other components and your uptime is only as high as the weakest of those components it's like the weakest link",
    "start": "965839",
    "end": "972360"
  },
  {
    "text": "concept right so everything has to be highly available and the way",
    "start": "972360",
    "end": "977920"
  },
  {
    "text": "traditionally everybody has achieved High availability with my SQL is through replication because my SQL comes with",
    "start": "977920",
    "end": "984720"
  },
  {
    "text": "replication as a feature so you can have a primary which is actually being written to and then you can have",
    "start": "984720",
    "end": "990759"
  },
  {
    "text": "replicas which are like followers and they are just getting all the changes from the primary and applying the",
    "start": "990759",
    "end": "996160"
  },
  {
    "text": "changes to their local database and it's like a always available copy of the data",
    "start": "996160",
    "end": "1004880"
  },
  {
    "text": "so in vas also we use replication to provide High availability and we have tooling around how to",
    "start": "1004880",
    "end": "1011880"
  },
  {
    "text": "guarantee very high availability so let's say you want to do plan maintenance and you have a primary and",
    "start": "1011880",
    "end": "1018000"
  },
  {
    "text": "you have one or more replicas in the old days if you have one MySQL server you have to take it down",
    "start": "1018000",
    "end": "1024798"
  },
  {
    "text": "for maintenance and then it's unavailable what we can do is we can actually transition the",
    "start": "1024799",
    "end": "1031199"
  },
  {
    "text": "leadership from the current primary to a replica that is following and we'll uh",
    "start": "1031199",
    "end": "1037600"
  },
  {
    "text": "basically say okay let's find the one that is most caught up if they are",
    "start": "1037600",
    "end": "1042880"
  },
  {
    "text": "lagging let's get them to catch up and then switch over so that you have a new",
    "start": "1042880",
    "end": "1047918"
  },
  {
    "text": "primary and during that period whatever requests we are getting from applications we'll hold them up to some",
    "start": "1047919",
    "end": "1054559"
  },
  {
    "text": "like limit right let's say uh a th requests we can buffer we can do uh",
    "start": "1054559",
    "end": "1059960"
  },
  {
    "text": "buffering so that requests don't error out and it'll take five or 10 seconds for this transition to happen and after",
    "start": "1059960",
    "end": "1066160"
  },
  {
    "text": "that we can start serving requests again so we use replication for higher availability and around that replication",
    "start": "1066160",
    "end": "1073240"
  },
  {
    "text": "we have built uh features to do plan maintenance but we also handle unplanned",
    "start": "1073240",
    "end": "1078880"
  },
  {
    "text": "and uh failures so let's say the primary went down for some reason it's out of",
    "start": "1078880",
    "end": "1084240"
  },
  {
    "text": "memory there's a dis error there's a network issue something or the other the primary MySQL is not",
    "start": "1084240",
    "end": "1090440"
  },
  {
    "text": "reachable in Vitus we have a monitoring component called vtor stands for vtus",
    "start": "1090440",
    "end": "1095919"
  },
  {
    "text": "orchestrator and there's a history behind that name as well VTR monitors",
    "start": "1095919",
    "end": "1101320"
  },
  {
    "text": "the cluster and it will say if the primary is unreachable I'll elect a new one and I'll elect whichever one is most",
    "start": "1101320",
    "end": "1108799"
  },
  {
    "text": "ahead right so that we don't lose data it will monitor replication on the",
    "start": "1108799",
    "end": "1115120"
  },
  {
    "text": "replicas and make sure that they are always replicating correctly from the",
    "start": "1115120",
    "end": "1120159"
  },
  {
    "text": "cluster primary and it can monitor for some other error conditions as well and",
    "start": "1120159",
    "end": "1125520"
  },
  {
    "text": "fix them so that's how witus handles high availability by having all of this",
    "start": "1125520",
    "end": "1131520"
  },
  {
    "text": "stoling to uh handle both plann maintenance and unplanned",
    "start": "1131520",
    "end": "1136600"
  },
  {
    "text": "failures so let's going quickly follow on that D is uh like you mentioned if",
    "start": "1136600",
    "end": "1141840"
  },
  {
    "text": "one of the nodes in the cluster is not available or needs to be down for maintenance and the second node a",
    "start": "1141840",
    "end": "1148640"
  },
  {
    "text": "replica node will take over the leadership uh so again the data needs to be properly",
    "start": "1148640",
    "end": "1153880"
  },
  {
    "text": "sharded partitioned and replicated right so and then the primary comes back up so now we want to go back to the previous",
    "start": "1153880",
    "end": "1160799"
  },
  {
    "text": "primary node so how much of this process is automated using the tools you mentioned the VT orchestrator and how",
    "start": "1160799",
    "end": "1168840"
  },
  {
    "text": "much of this is manual and also what is the like like maximum delay in kind of",
    "start": "1168840",
    "end": "1174679"
  },
  {
    "text": "switching between the nodes for plan maintenance because it has to be initiated by someone it's not",
    "start": "1174679",
    "end": "1181799"
  },
  {
    "text": "automated by vus but vus users automate them in some fashion because typically",
    "start": "1181799",
    "end": "1189000"
  },
  {
    "text": "what will happen is that they are doing a rolling upgrade of the cluster whether it's a vus version upgrade or it's some",
    "start": "1189000",
    "end": "1196120"
  },
  {
    "text": "underlying Hardware upgrade you B basically want to apply it to all the nodes so uh it has to be triggered from",
    "start": "1196120",
    "end": "1203200"
  },
  {
    "text": "outside so they will call a witus command because we have a command line interface they will call a Wiest command",
    "start": "1203200",
    "end": "1209240"
  },
  {
    "text": "you can call an RPC also but most people use the command line which will trigger",
    "start": "1209240",
    "end": "1214760"
  },
  {
    "text": "that failover now the other part of it the unplanned",
    "start": "1214760",
    "end": "1220120"
  },
  {
    "text": "failures as long as VTR orc is running it does the monitoring and the failover",
    "start": "1220120",
    "end": "1225640"
  },
  {
    "text": "so no human intervention is needed actually for that and that's the whole idea of it in terms of",
    "start": "1225640",
    "end": "1232640"
  },
  {
    "text": "timing we've seen things happen as quickly as like 5 to 10 seconds and",
    "start": "1232640",
    "end": "1238039"
  },
  {
    "text": "especially during the planned failures because we buffer the requests applications don't even see it or even",
    "start": "1238039",
    "end": "1244440"
  },
  {
    "text": "if they see it it is seen as a slight delay in slight response delay versus",
    "start": "1244440",
    "end": "1250880"
  },
  {
    "text": "errors when you have an unplanned failure then yes applications are going",
    "start": "1250880",
    "end": "1256080"
  },
  {
    "text": "to see errors but typically it is under 30 seconds because we can detect the",
    "start": "1256080",
    "end": "1262679"
  },
  {
    "text": "failure in less than 15 seconds and then repair it immediately for most of the",
    "start": "1262679",
    "end": "1268600"
  },
  {
    "text": "use cases I think that is tolerable right so that I think 30 seconds when you have an unplanned failure like a",
    "start": "1268600",
    "end": "1274919"
  },
  {
    "text": "node failure in a cloud or something like that or an outof memory error is",
    "start": "1274919",
    "end": "1280559"
  },
  {
    "text": "actually really good because what used to happen is that somebody would have to be paged and they would have to go and",
    "start": "1280559",
    "end": "1287159"
  },
  {
    "text": "do something manually which would always take at least 30 minutes absolutely and it's planned you",
    "start": "1287159",
    "end": "1292679"
  },
  {
    "text": "know so usually the users are aware of the change and they are expecting some outage right",
    "start": "1292679",
    "end": "1298559"
  },
  {
    "text": "so we cannot have a database discussion without getting into the transactions right so I know they've been the topic",
    "start": "1298559",
    "end": "1306919"
  },
  {
    "text": "of the talk for a long time you know some people love them some people hate them depending on how we use them so",
    "start": "1306919",
    "end": "1312600"
  },
  {
    "text": "distributed databases come with a distributed transaction kind kind of thing right so so how does V has balance",
    "start": "1312600",
    "end": "1320240"
  },
  {
    "text": "the perceiving conflicting capabilities of data consistency and data availability right so if you want one",
    "start": "1320240",
    "end": "1326880"
  },
  {
    "text": "you can't have the other the old the good old cap theorem so how do the transactions work in V database so I",
    "start": "1326880",
    "end": "1334720"
  },
  {
    "text": "think consistency and availability applies even if you're not using transactions so I'll talk about like my",
    "start": "1334720",
    "end": "1341159"
  },
  {
    "text": "view of how things happen in BS regarding consistency and availability first and then we'll talk about",
    "start": "1341159",
    "end": "1347520"
  },
  {
    "text": "transactions so if people are always reading from the primary instance of A",
    "start": "1347520",
    "end": "1354240"
  },
  {
    "text": "Shard then there is actually no consistency problem in btis because that's always the most upto-date view of",
    "start": "1354240",
    "end": "1360840"
  },
  {
    "text": "the data that is the like authoritative view of the data when we get into consistency issues is that in order to",
    "start": "1360840",
    "end": "1368720"
  },
  {
    "text": "scale read workloads people will run many replicas and they will actually",
    "start": "1368720",
    "end": "1374440"
  },
  {
    "text": "start reading data from the replicas so then we get into consistency issues",
    "start": "1374440",
    "end": "1379799"
  },
  {
    "text": "because replicas may be caught up to different extents it may just be one or two seconds so you have a which is the",
    "start": "1379799",
    "end": "1386080"
  },
  {
    "text": "primary you have B and C and maybe B is just one second behind a and C is two",
    "start": "1386080",
    "end": "1392679"
  },
  {
    "text": "seconds behind B and if you fetch some data from B and some from C you may end up with an inconsistent view of the data",
    "start": "1392679",
    "end": "1401120"
  },
  {
    "text": "right the way historically vtus has dealt with it is if consistency is",
    "start": "1401120",
    "end": "1407440"
  },
  {
    "text": "important you always read from the primary if it's not important you read",
    "start": "1407440",
    "end": "1412520"
  },
  {
    "text": "from the replicas now people have used tricks like if in one user session they",
    "start": "1412520",
    "end": "1420159"
  },
  {
    "text": "are actually writing anything then they always read from the primary if it's a readon session then they read from",
    "start": "1420159",
    "end": "1427640"
  },
  {
    "text": "replicas or uh they will write something in a transaction and before they read",
    "start": "1427640",
    "end": "1434880"
  },
  {
    "text": "something they'll set a timer like 60 seconds so for the next next 60 seconds read just read from the primary so that",
    "start": "1434880",
    "end": "1441480"
  },
  {
    "text": "you get the upto-date data after that you can go back to reading from replicas so people use these kinds of Tricks what",
    "start": "1441480",
    "end": "1448159"
  },
  {
    "text": "we would really like to do and this gets a little bit into the road map is to provide a feature in Vitus where you can",
    "start": "1448159",
    "end": "1456159"
  },
  {
    "text": "specify that I want the read after right type of consistency and vus can",
    "start": "1456159",
    "end": "1461720"
  },
  {
    "text": "guarantee it whether you are going to a primary or to a replica that's a feature that we don't have yet cuz you always",
    "start": "1461720",
    "end": "1467960"
  },
  {
    "text": "have to have something more to do no software is 100% done it's never perfect",
    "start": "1467960",
    "end": "1473640"
  },
  {
    "text": "so this is one of the things we would like to do now coming to transactions in",
    "start": "1473640",
    "end": "1478720"
  },
  {
    "text": "a distributed system there is always a possibility of something ending up being",
    "start": "1478720",
    "end": "1483799"
  },
  {
    "text": "a distributed transaction ideally most right most right transactions go to one",
    "start": "1483799",
    "end": "1489559"
  },
  {
    "text": "shard in which case there's actually no uh distributed transaction problem",
    "start": "1489559",
    "end": "1495760"
  },
  {
    "text": "because my SQL itself will provide the trans transactional guarantees but maybe",
    "start": "1495760",
    "end": "1500880"
  },
  {
    "text": "in one transaction you're updating two rows and they live in different shards like it's a bank transaction and you",
    "start": "1500880",
    "end": "1507840"
  },
  {
    "text": "have a sender and you have a recipient and you want to subtract $10 from the sender's balance and add $10 to the",
    "start": "1507840",
    "end": "1515640"
  },
  {
    "text": "recipient's balance and either both need to happen or neither of them should happen right so that you have you",
    "start": "1515640",
    "end": "1523080"
  },
  {
    "text": "actually have the consistency of the data you don't want money to disappear or get created from thin",
    "start": "1523080",
    "end": "1530360"
  },
  {
    "text": "air so Square cache actually solved this problem and they came up with a with a",
    "start": "1530360",
    "end": "1536520"
  },
  {
    "text": "very creative solution without actually having the true distributed transaction",
    "start": "1536520",
    "end": "1541679"
  },
  {
    "text": "support in bits and the way they did it was that they write this in a ledger and",
    "start": "1541679",
    "end": "1548480"
  },
  {
    "text": "they use that to reconcile things after the fact so that even if something fail they are always able to repair",
    "start": "1548480",
    "end": "1555880"
  },
  {
    "text": "it the other thing we do in Vitus which gets us out of some failure modes is",
    "start": "1555880",
    "end": "1563039"
  },
  {
    "text": "that when there is a distributed transaction and suppose it involves four",
    "start": "1563039",
    "end": "1568480"
  },
  {
    "text": "shards right we don't execute all of the rights in parallel right so we say okay",
    "start": "1568480",
    "end": "1576840"
  },
  {
    "text": "let's write to Shard one if it fails we roll it back let's write to Shard two if",
    "start": "1576840",
    "end": "1582799"
  },
  {
    "text": "that fails we can roll back both two and one so we have open transactions to all four chards and we'll do one at a time",
    "start": "1582799",
    "end": "1589880"
  },
  {
    "text": "and if at any point there is a failure we roll back all of them once we have",
    "start": "1589880",
    "end": "1595399"
  },
  {
    "text": "done the right when we have to commit the transaction that is when we issue all",
    "start": "1595399",
    "end": "1601320"
  },
  {
    "text": "the four commits in parallel once my SQL has accepted a right the probability of",
    "start": "1601320",
    "end": "1608039"
  },
  {
    "text": "it rejecting a commit is actually very low and it will only happen if you have a network problem and you're not able to",
    "start": "1608039",
    "end": "1614039"
  },
  {
    "text": "reach the server or if the server goes down so we've reduced the universe of possible failures when you're doing this",
    "start": "1614039",
    "end": "1620760"
  },
  {
    "text": "type of a best effort distributed transaction so that's what we call it inits we are doing best effort",
    "start": "1620760",
    "end": "1626559"
  },
  {
    "text": "distributed transactions these are not truly Atomic distributed transactions",
    "start": "1626559",
    "end": "1631600"
  },
  {
    "text": "but truly Atomic distributed transactions is another thing we have on the road map that we would like to get",
    "start": "1631600",
    "end": "1637320"
  },
  {
    "text": "to in the next one or two years kind of Switching gears a little bit you know so did schema management and data contracts",
    "start": "1637320",
    "end": "1644480"
  },
  {
    "text": "are getting lot of attention lately for a good reason one of the interesting features uh is the VT admin that's used",
    "start": "1644480",
    "end": "1652600"
  },
  {
    "text": "for schema schema management apis uh can you discuss about this little bit and also share what you are seeing as best",
    "start": "1652600",
    "end": "1659840"
  },
  {
    "text": "practices on creating managing and versioning uh schemas for the data",
    "start": "1659840",
    "end": "1665399"
  },
  {
    "text": "models okay uh so VT admin is a part of vtus that was built a couple of years",
    "start": "1665399",
    "end": "1672799"
  },
  {
    "text": "ago previously we had a very simple web UI which you would use to see the state",
    "start": "1672799",
    "end": "1678640"
  },
  {
    "text": "of the cluster and get some uh it was mostly readon you could take some",
    "start": "1678640",
    "end": "1684000"
  },
  {
    "text": "actions on uh the vest components and so on so VT admin is like the Next",
    "start": "1684000",
    "end": "1689919"
  },
  {
    "text": "Generation New Generation Administration component for vs and it",
    "start": "1689919",
    "end": "1696120"
  },
  {
    "text": "has an API and a UI and all the apis are well structured the problem with the",
    "start": "1696120",
    "end": "1701760"
  },
  {
    "text": "previous uh thing we had was that we had HTTP apis we did not have grpc apis and",
    "start": "1701760",
    "end": "1707799"
  },
  {
    "text": "the response is not well structured so no one could rely on a contract for the",
    "start": "1707799",
    "end": "1714919"
  },
  {
    "text": "response this time around the API responses are well structured they are protobuf responses and you can build",
    "start": "1714919",
    "end": "1722080"
  },
  {
    "text": "things relying on them so we have a structured grpc API and a VT admin API",
    "start": "1722080",
    "end": "1730200"
  },
  {
    "text": "and the UI actually talks to the API and gets the data and then renders it on the",
    "start": "1730200",
    "end": "1736120"
  },
  {
    "text": "browser there are many things we show in the VT admin UI and one of the things is",
    "start": "1736120",
    "end": "1741559"
  },
  {
    "text": "schemas and right now you can view the schemas but you can't really manage them",
    "start": "1741559",
    "end": "1747480"
  },
  {
    "text": "from the UI even though we have the apis behind the scenes we haven't built out the UI flows for uh doing the schema",
    "start": "1747480",
    "end": "1754519"
  },
  {
    "text": "management so that's something that will also be uh in the future it's in the road",
    "start": "1754519",
    "end": "1760600"
  },
  {
    "text": "map in terms of best practices for managing schemas and schema versions I",
    "start": "1760600",
    "end": "1766559"
  },
  {
    "text": "know there are lots of tools out there which people use to manage schema versions every framework comes with its",
    "start": "1766559",
    "end": "1772200"
  },
  {
    "text": "own internal table which versions uh the schemas and so on in my personal opinion",
    "start": "1772200",
    "end": "1778640"
  },
  {
    "text": "store your schema in git store it in a version control system and schema",
    "start": "1778640",
    "end": "1786200"
  },
  {
    "text": "changes are actually a very Frau topic for the MySQL Community because for at",
    "start": "1786200",
    "end": "1791880"
  },
  {
    "text": "least 10 years or maybe even more there have been multiple iterations of online schema change tools built for my SQL",
    "start": "1791880",
    "end": "1799200"
  },
  {
    "text": "because historically my SQL performed very poorly when you tried to do a",
    "start": "1799200",
    "end": "1805000"
  },
  {
    "text": "schema change on a large table which is underload right so there would be locks",
    "start": "1805000",
    "end": "1810440"
  },
  {
    "text": "taken which would block access to the table completely you couldn't write anything to it things would become",
    "start": "1810440",
    "end": "1817039"
  },
  {
    "text": "unusable MySQL itself the MySQL team at Oracle has been improving this and they",
    "start": "1817039",
    "end": "1823080"
  },
  {
    "text": "have actually made a certain category of schema changes instant so that things",
    "start": "1823080",
    "end": "1828320"
  },
  {
    "text": "don't get locked or blocked or whatever so they've been improving it but of course the community needed this many",
    "start": "1828320",
    "end": "1835200"
  },
  {
    "text": "years before anything was done in Oracle product so there have been many",
    "start": "1835200",
    "end": "1841640"
  },
  {
    "text": "iterations of these schema change tools our stance is that schema changes should",
    "start": "1841640",
    "end": "1846799"
  },
  {
    "text": "be non-blocking they should happen in the background and ideally you need to be able to revert them without losing",
    "start": "1846799",
    "end": "1853600"
  },
  {
    "text": "any data so those are the principles on which witness's online schema change system is built so vus has an online",
    "start": "1853600",
    "end": "1860399"
  },
  {
    "text": "schema change system and you can say that hey this is the schema change I want to do start",
    "start": "1860399",
    "end": "1866720"
  },
  {
    "text": "it just cut it over when it's done or wait for me to tell you and I'll",
    "start": "1866720",
    "end": "1872039"
  },
  {
    "text": "initiate a cut over so all those things are possible with vs online schema changes and the biggest thing is they're",
    "start": "1872039",
    "end": "1877760"
  },
  {
    "text": "non-blocking your system will keep running obviously there'll be a little additional load because you have to copy",
    "start": "1877760",
    "end": "1885279"
  },
  {
    "text": "everything in the background while the system system is still running and you",
    "start": "1885279",
    "end": "1890320"
  },
  {
    "text": "have to allow for that but you shouldn't be running the system at 100% CPU and memory all the time anyway so you should",
    "start": "1890320",
    "end": "1896000"
  },
  {
    "text": "have room for these kinds of things so that's basically what we do in vtes for non-blocking schema changes so what are",
    "start": "1896000",
    "end": "1903760"
  },
  {
    "text": "the some of the like a new features coming up in uh on the road map of vtas",
    "start": "1903760",
    "end": "1908960"
  },
  {
    "text": "project any interesting features that you can share with our listeners so compatibility and performance are things",
    "start": "1908960",
    "end": "1916000"
  },
  {
    "text": "that we continuously work on so MySQL compatibility MySQL keeps",
    "start": "1916000",
    "end": "1921120"
  },
  {
    "text": "adding syntax and features and it's not like even historically at any point we",
    "start": "1921120",
    "end": "1926240"
  },
  {
    "text": "supported 100% of my sqls uh syntax it has been an ongoing effort so there is",
    "start": "1926240",
    "end": "1933360"
  },
  {
    "text": "work happening on that pretty much continuously a couple of things were added very recently one is Common Table",
    "start": "1933360",
    "end": "1941120"
  },
  {
    "text": "expressions and the other one is window functions the support for them is pretty basic but we'll be working on expanding",
    "start": "1941120",
    "end": "1948320"
  },
  {
    "text": "the support for that so that we can cover all of the forms in which uh those",
    "start": "1948320",
    "end": "1954200"
  },
  {
    "text": "things can be used performance is another area so one of the ways in which",
    "start": "1954200",
    "end": "1960440"
  },
  {
    "text": "witus removes stress from the backing MySQL instances is by using connection",
    "start": "1960440",
    "end": "1966080"
  },
  {
    "text": "pooling everybody doesn't get a dedicated connection because MySQL connections are very heavy they get a",
    "start": "1966080",
    "end": "1973600"
  },
  {
    "text": "lightweight session to vgate which multiplexes everything over a single",
    "start": "1973600",
    "end": "1978679"
  },
  {
    "text": "grpc connection to a VT tablet and the VT tablet maintains a pool of connections to my SQL so we recently uh",
    "start": "1978679",
    "end": "1988399"
  },
  {
    "text": "shipped a new connection pooling implementation which makes the",
    "start": "1988399",
    "end": "1994080"
  },
  {
    "text": "performance of the connection pool much better in terms of like weight times or",
    "start": "1994080",
    "end": "1999360"
  },
  {
    "text": "uh even memory utilization because we would tend to cycle through the whole pool and then go back whereas if you uh",
    "start": "1999360",
    "end": "2007519"
  },
  {
    "text": "if your queries per second is not very high you may not even need to use the whole pool you may not even need to keep",
    "start": "2007519",
    "end": "2014480"
  },
  {
    "text": "100 or 150 open connections to my SE so it's just a much more efficient",
    "start": "2014480",
    "end": "2020200"
  },
  {
    "text": "connection pooling and we have ongoing work to improve our benchmarks we",
    "start": "2020200",
    "end": "2026320"
  },
  {
    "text": "Benchmark query performance on bits every night and we publish those results on uh a dedicated website called",
    "start": "2026320",
    "end": "2034080"
  },
  {
    "text": "benchmark.us doio and we have an ongoing effort basically continuous Improvement",
    "start": "2034080",
    "end": "2040360"
  },
  {
    "text": "of the benchmarks beyond that in terms of functionality we uh recently shipped",
    "start": "2040360",
    "end": "2047760"
  },
  {
    "text": "point in time recovery like the second iteration of point in time recovery in Vitus there had been a previous",
    "start": "2047760",
    "end": "2053440"
  },
  {
    "text": "iteration four years ago uh and we'll be making improvements to that and to online ddl based on user",
    "start": "2053440",
    "end": "2060599"
  },
  {
    "text": "feedback okay uh thank you DPI uh do you have any recommendations on what online",
    "start": "2060599",
    "end": "2066480"
  },
  {
    "text": "resources our listeners can check out to learn more about uh distributed database",
    "start": "2066480",
    "end": "2071638"
  },
  {
    "text": "in general or VT database in particular vtas is part of the cloud native",
    "start": "2071639",
    "end": "2076720"
  },
  {
    "text": "Computing Foundation Google donated witas to cncf in 2018 and witus",
    "start": "2076720",
    "end": "2082919"
  },
  {
    "text": "graduated from cncf in 2019 uh we have a website v. where we",
    "start": "2082919",
    "end": "2089118"
  },
  {
    "text": "have documentation uh we have examples we have like quick start guides to",
    "start": "2089119",
    "end": "2094878"
  },
  {
    "text": "downloading and running withus on your laptop you can run the examples on laptop on a",
    "start": "2094879",
    "end": "2100079"
  },
  {
    "text": "laptop you can run it within kubernetes V has always run within kubernetes so",
    "start": "2100079",
    "end": "2105400"
  },
  {
    "text": "all of those are available on our website and we also have links to videos because myself and some of our other",
    "start": "2105400",
    "end": "2112440"
  },
  {
    "text": "maintainers and also community members people who have uh who are using vs in",
    "start": "2112440",
    "end": "2117960"
  },
  {
    "text": "their own companies they go and talk about what they are doing so we have links to those videos on our website but",
    "start": "2117960",
    "end": "2126599"
  },
  {
    "text": "you can also just go to YouTube and search for vtus and there are plenty of talks and some of those talks are",
    "start": "2126599",
    "end": "2133680"
  },
  {
    "text": "actually very good in terms of providing an introduction a much more detailed introduction than what I just did to",
    "start": "2133680",
    "end": "2140359"
  },
  {
    "text": "vest features and architecture and they have some nice diagrams which we are",
    "start": "2140359",
    "end": "2145680"
  },
  {
    "text": "easier to consume sometimes than words in terms of how the architecture Works",
    "start": "2145680",
    "end": "2151040"
  },
  {
    "text": "before we wrap up today's discussion do you have any additional comments or any remarks I just want to say that working",
    "start": "2151040",
    "end": "2157280"
  },
  {
    "text": "on with and open source has been a really positive experience for me and I",
    "start": "2157280",
    "end": "2163480"
  },
  {
    "text": "encourage people to get involved in something that's bigger than just",
    "start": "2163480",
    "end": "2168800"
  },
  {
    "text": "whatever company or team you're working in because it it opens you up to new interactions with people new experiences",
    "start": "2168800",
    "end": "2176280"
  },
  {
    "text": "it just enriches life as a software developer sounds good uh thank you dipti",
    "start": "2176280",
    "end": "2181359"
  },
  {
    "text": "thank you very much for joining this podcast it's been great to discuss one of the very important topics in the",
    "start": "2181359",
    "end": "2187240"
  },
  {
    "text": "cloud hosted database Solutions the distributed databases topic and also",
    "start": "2187240",
    "end": "2192920"
  },
  {
    "text": "it's great to talk to a practitioner like you who brings a lot of practical knowledge and experience to these",
    "start": "2192920",
    "end": "2198880"
  },
  {
    "text": "discussions to our listeners uh thank you for listening to this podcast if you would like to learn more about data",
    "start": "2198880",
    "end": "2204839"
  },
  {
    "text": "engineering topics check out the AIML and data engineering community web pages",
    "start": "2204839",
    "end": "2210000"
  },
  {
    "text": "on info.com website I encourage you to listen to the recent podcast and check",
    "start": "2210000",
    "end": "2215359"
  },
  {
    "text": "out the Articles and news items infoq team has been posting on the website thank you dpti thanks for your time",
    "start": "2215359",
    "end": "2222000"
  },
  {
    "text": "thank you shr this was great [Music]",
    "start": "2222000",
    "end": "2244350"
  }
]