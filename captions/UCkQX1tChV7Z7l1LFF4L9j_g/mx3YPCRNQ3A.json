[
  {
    "text": "[Music]",
    "start": "1990",
    "end": "17439"
  },
  {
    "text": "hi my name is Rob Dodson a freelance front-end developer consultant e type person here in San Francisco we're going",
    "start": "17439",
    "end": "24599"
  },
  {
    "text": "to talk about tons of stuff this evening so uh if there's not a lot of time for Q",
    "start": "24599",
    "end": "30080"
  },
  {
    "text": "and a at the end you can always hit me up at my blog on robd doson me or on",
    "start": "30080",
    "end": "35320"
  },
  {
    "text": "Twitter or on the githubschool",
    "start": "35320",
    "end": "40079"
  },
  {
    "text": "is super new super bleeding edge crazy  all right what are we going to",
    "start": "60160",
    "end": "66439"
  },
  {
    "text": "cover uh if you guys saw the announcement we're talking about web components this evening and some of you",
    "start": "66439",
    "end": "72840"
  },
  {
    "text": "are probably most of you are probably like what is web components I don't know what that means so we're going to cover what the actual term means and what the",
    "start": "72840",
    "end": "79159"
  },
  {
    "text": "whole component model for the web is we're going to talk about all the new specs and standards that collectively",
    "start": "79159",
    "end": "85240"
  },
  {
    "text": "make up web components there is no one web component technology we're actually going to be talking about four different",
    "start": "85240",
    "end": "90560"
  },
  {
    "text": "Technologies which kind of interlock like Voltron and become this amazing awesome thing and the last thing we're",
    "start": "90560",
    "end": "96320"
  },
  {
    "text": "going to talk about is how you can actually use some of these things today in all modern browsers like I always hate it when I go to a presentation and",
    "start": "96320",
    "end": "102840"
  },
  {
    "text": "people are like look at this amazing stuff you can use it in six years so everything that we're going to be showing today is stuff that you can use",
    "start": "102840",
    "end": "108799"
  },
  {
    "text": "uh right now fair warning there's going to be a lot of code in this talk I've given it",
    "start": "108799",
    "end": "115000"
  },
  {
    "text": "to designers before and they've kind of just like glazed over halfway through but I think if you hang in there you're",
    "start": "115000",
    "end": "120560"
  },
  {
    "text": "going to be really stoked about uh everything that we talk about today and everything that you learn my hope is that you guys are going to leave tonight",
    "start": "120560",
    "end": "126479"
  },
  {
    "text": "feeling like this you're going to be really pumped by where the whole web platform is headed where web components",
    "start": "126479",
    "end": "132640"
  },
  {
    "text": "are headed and everything that we're talking about so I want to start things off by asking kind of a rhetorical",
    "start": "132640",
    "end": "139239"
  },
  {
    "text": "question of the audience because I think it really helps to set the tone and the context for everything that we're going",
    "start": "139239",
    "end": "144640"
  },
  {
    "text": "to be discussing and I want to know for those of you who do use Twitter bootstrap how do you use",
    "start": "144640",
    "end": "151560"
  },
  {
    "text": "Twitter bootstrap in your app I want you to think about how you get Twitter bootstrap into your app and it's okay if you don't use Twitter bootstrap it's",
    "start": "151560",
    "end": "157280"
  },
  {
    "text": "okay if you have no idea what I'm talking about it could be how do you use Foundation how do you use kindo UI how",
    "start": "157280",
    "end": "163200"
  },
  {
    "text": "do you use jQuery UI how do you use jQuery plugins really what I'm asking is",
    "start": "163200",
    "end": "168920"
  },
  {
    "text": "how do you use all of the thirdparty code and widgets that you bring into",
    "start": "168920",
    "end": "174280"
  },
  {
    "text": "your app how do you go about that so I want to go through this sort of narrative and perhaps will feel familiar",
    "start": "174280",
    "end": "180640"
  },
  {
    "text": "to you and and perhaps this will help us illustrate some of the problems that we're dealing with today on the web so if I want to use some thirdparty code in",
    "start": "180640",
    "end": "188480"
  },
  {
    "text": "my application typically what I do is I go find the documentation for that that",
    "start": "188480",
    "end": "193959"
  },
  {
    "text": "widget or that library or whatever these are the docs for uh",
    "start": "193959",
    "end": "199280"
  },
  {
    "text": "Twitter bootstrap so I find the thing that I want and then I just copy a whole bunch",
    "start": "199280",
    "end": "205159"
  },
  {
    "text": "of code and I throw it into my app because they're like oh yeah you want to use the nap bar sweet grab all HTML",
    "start": "205159",
    "end": "210319"
  },
  {
    "text": "throw it in your app include our CSS voila you get an app bar you know you get this sweet little",
    "start": "210319",
    "end": "216200"
  },
  {
    "text": "widget but you usually don't want one widget you usually want a bunch of them you want a bunch of these like cool new",
    "start": "216200",
    "end": "222319"
  },
  {
    "text": "widgets so you go back to the documentation and you find something else that you really like in there maybe like a carousel maybe pagination",
    "start": "222319",
    "end": "228720"
  },
  {
    "text": "something like that and you grab all the code for that and you throw that into your app and you do this over and over and over again so you've kind of built",
    "start": "228720",
    "end": "235400"
  },
  {
    "text": "this application it's just full of boilerplate code that looks like this it's all this sort of UI code that you",
    "start": "235400",
    "end": "242680"
  },
  {
    "text": "yourself did not write and so if you perhaps leave a line out then the whole thing breaks and you're wondering why it",
    "start": "242680",
    "end": "249439"
  },
  {
    "text": "broke and it also means that your app becomes sort of harder to maintain and harder to change because you've just got",
    "start": "249439",
    "end": "255000"
  },
  {
    "text": "all this stuff floating around everywhere I think we can do a lot better than this I think this is right",
    "start": "255000",
    "end": "261840"
  },
  {
    "text": "now this is like the current best and breed way to build front end applications is just go grab bootstrap",
    "start": "261840",
    "end": "267759"
  },
  {
    "text": "and throw it in there I think that's a problem I think it what we're doing today is kind of the Ikea approach to",
    "start": "267759",
    "end": "273000"
  },
  {
    "text": "building web apps we're just taking a bunch of bits and pieces and cobbling it together and sometimes there's things",
    "start": "273000",
    "end": "278280"
  },
  {
    "text": "left over and we're like well I hope I didn't need that but we're we're just kind of gluing all this stuff together DIY like I think that this this step",
    "start": "278280",
    "end": "286400"
  },
  {
    "text": "right here is is our main issue instead of copying all the things I think it should look like this",
    "start": "286400",
    "end": "293960"
  },
  {
    "text": "I think it should just be use the thing if I want a nav bar from Twitter bootstrap I should just be able to use",
    "start": "293960",
    "end": "299720"
  },
  {
    "text": "use like a Twitter bootstrap nabar tag and then the only code that I'm going to",
    "start": "299720",
    "end": "304800"
  },
  {
    "text": "write is going to be the code that actually pertains to my application the only links that are going into that nav",
    "start": "304800",
    "end": "310520"
  },
  {
    "text": "bar are the ones that I care about and all that other UI code I don't need to know about it I don't need to know how",
    "start": "310520",
    "end": "316000"
  },
  {
    "text": "the nabar got created I don't care so so this is the problem that web components",
    "start": "316000",
    "end": "321400"
  },
  {
    "text": "are trying to solve this is what we're going to be talking about tonight okay so the term itself web",
    "start": "321400",
    "end": "329039"
  },
  {
    "text": "components it's it's kind of an umbrella term it's actually a bunch of different Technologies which collectively let us",
    "start": "329039",
    "end": "334319"
  },
  {
    "text": "do some really awesome stuff so first among those is it gives us the ability to create our own HTML elements",
    "start": "334319",
    "end": "341199"
  },
  {
    "text": "we've shown that previously with that bootstrap tag but that's not all it does it also gives us the ability to",
    "start": "341199",
    "end": "346880"
  },
  {
    "text": "encapsulate our CSS Styles so if we write some CSS and we put it into a",
    "start": "346880",
    "end": "352720"
  },
  {
    "text": "component that CSS is protected from the parent document and it means that our",
    "start": "352720",
    "end": "357759"
  },
  {
    "text": "component is going to render EX exactly as we intend it to we don't have to worry about you know the parent document",
    "start": "357759",
    "end": "363840"
  },
  {
    "text": "having more specific CSS or important tags or anything like that it's not going to affect the rendering of our",
    "start": "363840",
    "end": "369000"
  },
  {
    "text": "component which is huge if you write a lot of CSS web components also give us the",
    "start": "369000",
    "end": "374919"
  },
  {
    "text": "ability to react to changes in our component with life cycle callbacks so when someone adds one of our components",
    "start": "374919",
    "end": "381160"
  },
  {
    "text": "to the page when they take it out of the document when they change an attribute on it we have all of these JavaScript",
    "start": "381160",
    "end": "386280"
  },
  {
    "text": "callbacks that we can run to react to those changes render component differently fir an event load some more",
    "start": "386280",
    "end": "392639"
  },
  {
    "text": "data whatever you want so these are sort of the sexy highle overview kind of like",
    "start": "392639",
    "end": "398080"
  },
  {
    "text": "selling points of web components but the most important thing about web components is that when we're working",
    "start": "398080",
    "end": "404840"
  },
  {
    "text": "with them when we're defining these new tags everything that we're doing all the all the syntax that we use all the apis",
    "start": "404840",
    "end": "410800"
  },
  {
    "text": "that we use are the exact same ones that the browser makers use when they Implement their own tags so when the",
    "start": "410800",
    "end": "417080"
  },
  {
    "text": "team at Mozilla or the team at Chrome when they are implementing the video tag when they're implementing the text area",
    "start": "417080",
    "end": "423720"
  },
  {
    "text": "tag all of that all of the apis and syntaxes that they use to do that are now being exposed to us the developer",
    "start": "423720",
    "end": "429840"
  },
  {
    "text": "community so these are first class tags that we're building and that's pretty wild and pretty insane it also means",
    "start": "429840",
    "end": "435560"
  },
  {
    "text": "that it's a very short hop to go from successful web component to New Standard",
    "start": "435560",
    "end": "441039"
  },
  {
    "text": "in the browser right and today we're dealing with huge problems where to add anything new to the browser takes years",
    "start": "441039",
    "end": "446720"
  },
  {
    "text": "it takes us like six years to add something new to the browser the the video tag was proposed in 2007 it's 2013",
    "start": "446720",
    "end": "452639"
  },
  {
    "text": "and I think there's probably some of you in the audience who still consider that like future technology you know like I'll use the video tag someday when like",
    "start": "452639",
    "end": "458759"
  },
  {
    "text": "everybody's on board with the video tag but but not today um that's a problem if we're trying to compete with IOS and",
    "start": "458759",
    "end": "464639"
  },
  {
    "text": "Android in the sort of mobile space and those libraries can evolve really quickly we've got to be able to evolve",
    "start": "464639",
    "end": "470159"
  },
  {
    "text": "quickly as well so what are some cool things that we can build with web",
    "start": "470159",
    "end": "475479"
  },
  {
    "text": "components let's imagine you're trying to build a databas library okay and the",
    "start": "475479",
    "end": "480879"
  },
  {
    "text": "way that you do that today is you write a whole bunch of JavaScript the user needs to bring that into their application they need to instantiate it",
    "start": "480879",
    "end": "487879"
  },
  {
    "text": "configure it they need to pass it some data they need to call some methods on it they need to find a place in the document where your chart's going to",
    "start": "487879",
    "end": "493520"
  },
  {
    "text": "show up uh it's a lot of back and forth between your HTML and your JavaScript",
    "start": "493520",
    "end": "498919"
  },
  {
    "text": "when you think about it it would be cool if we could just have a pie chart tag and in your page you could say hey right",
    "start": "498919",
    "end": "505400"
  },
  {
    "text": "here I would like to have a pie chart and voila you would get a pie chart you know and maybe you can figure it with",
    "start": "505400",
    "end": "510720"
  },
  {
    "text": "some attributes but that's really like the extent of your interaction with the pie chart you don't really care how the",
    "start": "510720",
    "end": "516839"
  },
  {
    "text": "pie chart got made you don't care about the library that made the pie chart you just asked for a pie chart and you got",
    "start": "516839",
    "end": "523719"
  },
  {
    "text": "it uh show fans how many of you have worked with or know what markdown",
    "start": "523720",
    "end": "530240"
  },
  {
    "text": "is most of you okay so markdown is it's a it's a language for sort of pre- formatting your text and if you've used",
    "start": "530399",
    "end": "538120"
  },
  {
    "text": "stack Overflow or GitHub they use it for their comments it's really handy and it",
    "start": "538120",
    "end": "543320"
  },
  {
    "text": "would be awesome if you could just have a markdown tag and just start like writing your whole website in markdown",
    "start": "543320",
    "end": "549279"
  },
  {
    "text": "right like wouldn't that be awesome and that's entirely possible like this is an actual tag that I've made using web",
    "start": "549279",
    "end": "554519"
  },
  {
    "text": "components that just renders markdown and imagine the cognitive like",
    "start": "554519",
    "end": "559920"
  },
  {
    "text": "weight that that would take off of your mind if if you were building the same sort of like comment system that that stack Overflow or GitHub has and instead",
    "start": "559920",
    "end": "566399"
  },
  {
    "text": "of having to like grab all the users comments turn them into markdown render it put them back into the document you",
    "start": "566399",
    "end": "572480"
  },
  {
    "text": "could just say hey so long as the user right's marked down over here it's going to render and I don't care how it happens I just know it's going to it's a",
    "start": "572480",
    "end": "580079"
  },
  {
    "text": "lot less work for you to deal with so that's kind of the the why of web",
    "start": "580079",
    "end": "586160"
  },
  {
    "text": "components hopefully I've sold you on the why of web components let's talk about the how and as I mentioned before",
    "start": "586160",
    "end": "593160"
  },
  {
    "text": "web components are an umbrella there's no one thing that makes up web components it's four different things and you sort of use them all",
    "start": "593160",
    "end": "600440"
  },
  {
    "text": "together the first of the those things is templates templates are how you scaffold out your component it's the uh",
    "start": "600440",
    "end": "607560"
  },
  {
    "text": "the reusable bits that you're going to stamp out over and over again in the page next is Shadow Dawn uh show of",
    "start": "607560",
    "end": "614920"
  },
  {
    "text": "hands how many of you have heard the term Shadow Dom not necessarily know what it is but you've just like heard someone say it yeah and it sounds really",
    "start": "614920",
    "end": "621480"
  },
  {
    "text": "cool when they say it right like you're like oh Shadow Dom yeah um so Shadow Dom",
    "start": "621480",
    "end": "627040"
  },
  {
    "text": "is how you encapsulate your component it's how you guarantee that your CSS styles are protected it's how you",
    "start": "627040",
    "end": "632839"
  },
  {
    "text": "guarantee that external Javascript is not mucking around inside of your",
    "start": "632839",
    "end": "639040"
  },
  {
    "text": "HTML next we have custom elements so custom elements are how you extend the",
    "start": "639920",
    "end": "645079"
  },
  {
    "text": "browser it's how you extend the HTML language really and the uh the the",
    "start": "645079",
    "end": "650720"
  },
  {
    "text": "custom elements are custom HTML elements so the pie chart tag that I showed before the markdown tag that I showed",
    "start": "650720",
    "end": "657560"
  },
  {
    "text": "before the Twitter bootstrap tag those are all custom HTML elements and lastly there's Imports so",
    "start": "657560",
    "end": "664800"
  },
  {
    "text": "Imports is just how we take all of this stuff package it together and load it into our document the same way that you",
    "start": "664800",
    "end": "670399"
  },
  {
    "text": "import CSS or you import JavaScript you can import custom",
    "start": "670399",
    "end": "675800"
  },
  {
    "text": "elements so here's the equation for web components that'll sort of give context to everything and help it all make sense",
    "start": "675800",
    "end": "682160"
  },
  {
    "text": "keep this in your head as as we talk about the different specs you've got templates plus Shadow Dom equals custom",
    "start": "682160",
    "end": "688200"
  },
  {
    "text": "elements you take a little bit of scaffolding you put it in a little bubble where it's nice and protected you give it its own tag name and then you",
    "start": "688200",
    "end": "694839"
  },
  {
    "text": "just import it into the page so we're going to talk about each",
    "start": "694839",
    "end": "700839"
  },
  {
    "text": "of these so you kind of know how they work by the end of this you guys will be able to write your own web components which should be a lot of fun um starting",
    "start": "700839",
    "end": "707720"
  },
  {
    "text": "with templates templates are inner chunks of Dom that can be reused throughout the page basically means it's",
    "start": "707720",
    "end": "713959"
  },
  {
    "text": "little Blobs of HTML that you can just like clone and Stamp Out Elsewhere on the page if you've worked with libraries",
    "start": "713959",
    "end": "720360"
  },
  {
    "text": "like mustache or handlebars before basically the exact same thing but now it has its own tag this template tag",
    "start": "720360",
    "end": "727399"
  },
  {
    "text": "that you can use in the browser so when you're working with a template you can put any kind of like valid markup you",
    "start": "727399",
    "end": "733279"
  },
  {
    "text": "want into it you can put paragraphs you can put SVG you put canvas whatever is like valid markup on the",
    "start": "733279",
    "end": "740079"
  },
  {
    "text": "page you can put image tags inside of it and when you put an image tag in it or anything that requires an external",
    "start": "740079",
    "end": "745760"
  },
  {
    "text": "Source like a video tag or an audio tag you can actually leave the source defined while it's in the template",
    "start": "745760",
    "end": "751519"
  },
  {
    "text": "because while it's in the template it's aert the browser doesn't really care about it and the nice thing about that is you can then Define that Source at",
    "start": "751519",
    "end": "757600"
  },
  {
    "text": "runtime when you like grab the guts of the template and stamp it out on the page you can put Javascript inside of a",
    "start": "757600",
    "end": "764320"
  },
  {
    "text": "template and that javascripts inert it's just like sitting there it's not going to do anything until your template goes live in the",
    "start": "764320",
    "end": "771360"
  },
  {
    "text": "document when you're working with a template you just query selector the the template tag itself and then you ask for",
    "start": "771440",
    "end": "777639"
  },
  {
    "text": "its content so there's this new content keyword and that's going to give you all the guts of the template and then you can actually throw that onto the page so",
    "start": "777639",
    "end": "784720"
  },
  {
    "text": "using a template looks like this up here at the top we've got the same template that I was showing a couple slides ago",
    "start": "784720",
    "end": "790839"
  },
  {
    "text": "it's got an image tag in it that doesn't have a source paragraph some JavaScript that's not doing anything right",
    "start": "790839",
    "end": "796000"
  },
  {
    "text": "now and then down here in this little script block we're going to query selector the template if you've used",
    "start": "796000",
    "end": "801399"
  },
  {
    "text": "jQuery before and you're more comfortable with jQuery document query selector is basically the same as just",
    "start": "801399",
    "end": "806440"
  },
  {
    "text": "writing dollar sign um so we're going to query select the template and then using that content keyword we can actually go",
    "start": "806440",
    "end": "813360"
  },
  {
    "text": "inside the template and give that image tag a source at run time and then we can",
    "start": "813360",
    "end": "818600"
  },
  {
    "text": "just append the content of the template to the document body so when we run this some things",
    "start": "818600",
    "end": "825880"
  },
  {
    "text": "should happen let's see if I can run this guy so our script block is going to go",
    "start": "825880",
    "end": "831880"
  },
  {
    "text": "live because now it's been added to the page the HTTP request for our image goes",
    "start": "831880",
    "end": "837040"
  },
  {
    "text": "out and comes back so our image loads and then we see the rest of the content of our template down there so it's just",
    "start": "837040",
    "end": "843000"
  },
  {
    "text": "like stamping out a template using any other library that you've worked with",
    "start": "843000",
    "end": "847839"
  },
  {
    "text": "before there's a few gotas when you're working with templates first there's no built-in data",
    "start": "848160",
    "end": "855000"
  },
  {
    "text": "interpolation which means if you're used to libraries like mustache and handlebars you know that in those",
    "start": "855000",
    "end": "860240"
  },
  {
    "text": "libraries you can have like a a JavaScript or a Json object on the page and you can just use little curly brace",
    "start": "860240",
    "end": "865680"
  },
  {
    "text": "tags to like pipe the data from that object into your template native templates don't do that the",
    "start": "865680",
    "end": "871560"
  },
  {
    "text": "browser makers wanted to leave that process up to us but I say it doesn't like work yet there's already libraries",
    "start": "871560",
    "end": "877680"
  },
  {
    "text": "which have added this this functionality so it's there it's just not there natively the other thing to know about",
    "start": "877680",
    "end": "884240"
  },
  {
    "text": "templates is that nested templates do not automatically activate so if you got a parent template child template inside",
    "start": "884240",
    "end": "889800"
  },
  {
    "text": "of it you take that parent you like stamp it out on the page the child template does not suddenly start working",
    "start": "889800",
    "end": "895279"
  },
  {
    "text": "you've got to actually query each of them separately and append them to the document separately",
    "start": "895279",
    "end": "901040"
  },
  {
    "text": "okay so that's templates that's that's the first part that's how we scaffold out our new components now let's talk about Shadow",
    "start": "902320",
    "end": "910240"
  },
  {
    "text": "Dom Shadow Dom is a beast like there's no way we can even cover a fraction of",
    "start": "910240",
    "end": "917120"
  },
  {
    "text": "what it actually does in this talk you could have an entire conference about Shadow Dom and there will be conferences",
    "start": "917120",
    "end": "922360"
  },
  {
    "text": "just about Shadow in the the next few years but what we're going to do is we're going to talk about the high level",
    "start": "922360",
    "end": "927920"
  },
  {
    "text": "stuff so you can at least start being productive with it and you can start like poking around with it and understanding generally how it",
    "start": "927920",
    "end": "933319"
  },
  {
    "text": "works you might feel like that at the end in a nutshell Shadow daon provides",
    "start": "933319",
    "end": "938680"
  },
  {
    "text": "style and markup encapsulation you take some HTML you take some CSS and you put it inside this little bubble and you",
    "start": "938680",
    "end": "944680"
  },
  {
    "text": "decide which bits are going to be public to the user and which bits are going to be private which bits like people aren't going to be able to",
    "start": "944680",
    "end": "952000"
  },
  {
    "text": "access and as I mentioned before the really cool thing about shadom is that's the same technology that browser makers use today when they imp",
    "start": "952160",
    "end": "959560"
  },
  {
    "text": "their own tags like video and like text area so let me give you an example of how that",
    "start": "959560",
    "end": "966279"
  },
  {
    "text": "works and we got a video tag up there and when you when you use a video tag",
    "start": "967680",
    "end": "973199"
  },
  {
    "text": "you just need like one line of HTML to make it show up you're like yeah I want a video here's the source for the video",
    "start": "973199",
    "end": "979519"
  },
  {
    "text": "I want it to have controls so I'll use this controls attribute but if you if you think about it you're getting a lot for just that",
    "start": "979519",
    "end": "986600"
  },
  {
    "text": "one tag not only do you get the video player but you get a play button and a scrubber and a Time code and a volume",
    "start": "986600",
    "end": "992680"
  },
  {
    "text": "slider all this stuff right and you didn't write any markup for that it just kind of showed up and you're like oh",
    "start": "992680",
    "end": "999000"
  },
  {
    "text": "sweet well that's awesome I'm glad that I get that for free um what's actually happening if we open the dev tools if",
    "start": "999000",
    "end": "1005399"
  },
  {
    "text": "you open the Chrome Dev tools and I'm going to uh Igan these so you guys in the back can",
    "start": "1005399",
    "end": "1011560"
  },
  {
    "text": "see so I'm trying to make them huge so you click on this little gear here and",
    "start": "1011560",
    "end": "1017800"
  },
  {
    "text": "inside the dev tools you scroll down you'll find this thing that says show Shadow Dom right",
    "start": "1017800",
    "end": "1023959"
  },
  {
    "text": "there turn that guy on and then you can go and inspect your video element so",
    "start": "1023959",
    "end": "1030160"
  },
  {
    "text": "here's our video it's kind of squished in there but that's our video tag and we can actually open it up and",
    "start": "1030160",
    "end": "1038600"
  },
  {
    "text": "there's this grade out document fragment in here and it's like what's that thing and there's this div in here and as you",
    "start": "1038600",
    "end": "1045000"
  },
  {
    "text": "sort of work your way deeper into the video element eventually you'll see oh hey like here's the play button and like",
    "start": "1045000",
    "end": "1051679"
  },
  {
    "text": "here's the scrubber here's all the internals of my video player and the",
    "start": "1051679",
    "end": "1057000"
  },
  {
    "text": "browser makers have just implemented them with HTML and CSS but they've hidden it from us",
    "start": "1057000",
    "end": "1063200"
  },
  {
    "text": "they've like put it inside of this weird gray document fragment thing and I don't I don't normally have access to that I usually don't see that",
    "start": "1063200",
    "end": "1069440"
  },
  {
    "text": "thing so this is the shadow Dom this is this secret place that the browser",
    "start": "1069440",
    "end": "1074600"
  },
  {
    "text": "makers previously have only had access to where they could hide markup and hide CSS and the reason why they created it was",
    "start": "1074600",
    "end": "1081240"
  },
  {
    "text": "because they needed a way to guarantee that every time you used a video tag that it would look the exact same",
    "start": "1081240",
    "end": "1087440"
  },
  {
    "text": "regardless of what you already had on the page so they needed a place where they could hide all these things and they've actually been using it for a",
    "start": "1087440",
    "end": "1092720"
  },
  {
    "text": "really long time like inputs text area you know how they also have kind of like a little bit of like styling to them",
    "start": "1092720",
    "end": "1097880"
  },
  {
    "text": "it's also because they're built using the shadow Dom so when you're working with the shadow Dom there's like a few",
    "start": "1097880",
    "end": "1103679"
  },
  {
    "text": "terms that are sort of important to know the first is that the element that's hosting all the shadow Dom is known as a",
    "start": "1103679",
    "end": "1109480"
  },
  {
    "text": "shadow host uh this first little document",
    "start": "1109480",
    "end": "1114520"
  },
  {
    "text": "fragment in here it's called The Shadow root that's the first descendant of the",
    "start": "1114520",
    "end": "1119559"
  },
  {
    "text": "Shadow host inside of the Shadow root you've got all these dibs those are all called Shadow nodes and the whole thing",
    "start": "1119559",
    "end": "1126400"
  },
  {
    "text": "is protected by this little barrier called The Shadow boundary and the shadow boundary is what prevents CSS",
    "start": "1126400",
    "end": "1133000"
  },
  {
    "text": "from like bleeding across it's what prevents JavaScript like external Javascript from traversing around inside",
    "start": "1133000",
    "end": "1138480"
  },
  {
    "text": "of here if someone's using jQuery to look for like every div on the page they probably don't want the divs inside of",
    "start": "1138480",
    "end": "1145039"
  },
  {
    "text": "here cuz we've like explicitly said that you you shouldn't touch those so the shadow boundary is what ensures that",
    "start": "1145039",
    "end": "1151159"
  },
  {
    "text": "that separation um so just to like reinforce this",
    "start": "1151159",
    "end": "1156880"
  },
  {
    "text": "visually the shadow host is the element like holding all the shadow Dom in the previous example it was the video tag or",
    "start": "1156880",
    "end": "1163240"
  },
  {
    "text": "it could be like a text area tag input tag or a tag that you define the shadow root is is the first",
    "start": "1163240",
    "end": "1169679"
  },
  {
    "text": "node in the shadow Dom it's that grade out document fragment and the whole thing is",
    "start": "1169679",
    "end": "1175200"
  },
  {
    "text": "protected by this Shadow boundary and that's what's keeping external CSS out and it's keeping external Javascript out",
    "start": "1175200",
    "end": "1181280"
  },
  {
    "text": "so conceptually these are the main things that you need to keep in your head when we're talking about Shadow Dom creating your own shadow Dom is",
    "start": "1181280",
    "end": "1188760"
  },
  {
    "text": "actually really easy you just every like HTML element now has this new method create Shadow root so you just call that",
    "start": "1188760",
    "end": "1195480"
  },
  {
    "text": "on your element after You' selected it and I'll show you how to do that so to",
    "start": "1195480",
    "end": "1202080"
  },
  {
    "text": "start off we've got a little div here we're going to give it a class of widget and put some text inside of it so that's",
    "start": "1202080",
    "end": "1207799"
  },
  {
    "text": "this guy down here at the bottom that says hello world and then in the JavaScript we just",
    "start": "1207799",
    "end": "1213799"
  },
  {
    "text": "query selector that div we ask it to create a shadow rout and then we set the",
    "start": "1213799",
    "end": "1219080"
  },
  {
    "text": "inner HTML of that shadow route to a string of HTML we're going to have like an emphasis tag that says like I'm",
    "start": "1219080",
    "end": "1225280"
  },
  {
    "text": "inside your div so if we run this you'll actually see hello world it's going to change to",
    "start": "1225280",
    "end": "1231200"
  },
  {
    "text": "say I'm inside your div and if we actually inspect it we can open it up",
    "start": "1231200",
    "end": "1236679"
  },
  {
    "text": "and just like the video element now we have this grade out document fragment and inside of there we have that little",
    "start": "1236679",
    "end": "1241799"
  },
  {
    "text": "tag that we wrote this I'm inside your div tag so we've we've taken some content and we've like hidden it in the",
    "start": "1241799",
    "end": "1247039"
  },
  {
    "text": "shadow Dom can you guys see that okay now here's something that's",
    "start": "1247039",
    "end": "1252640"
  },
  {
    "text": "important to note hello world the original text content that we had in there it did not go away we did not like",
    "start": "1252640",
    "end": "1259799"
  },
  {
    "text": "destroy it or obliterate it or anything it's still there it's just not being rendered by the document or Sorry by the",
    "start": "1259799",
    "end": "1265720"
  },
  {
    "text": "browser and that's a really important distinction to keep in your mind um that only descendants of the Shadow route",
    "start": "1265720",
    "end": "1272640"
  },
  {
    "text": "only the stuff in the shadow Dom actually ends up being rendered by the browser and so we're going to talk later",
    "start": "1272640",
    "end": "1278960"
  },
  {
    "text": "about how you can actually like pull things out of the Shadow host and into the shadow route because you would you definitely want that but for now keep",
    "start": "1278960",
    "end": "1285320"
  },
  {
    "text": "this in mind because it's a really important distinction to know all",
    "start": "1285320",
    "end": "1291399"
  },
  {
    "text": "right so I mentioned that when you're working with CSS in the shadow Dom that",
    "start": "1292400",
    "end": "1298120"
  },
  {
    "text": "the styles that you use are protected this is crazy to me this is like the coolest thing about Shadow and if you've",
    "start": "1298120",
    "end": "1305440"
  },
  {
    "text": "ever written a lot of CSS and you've been frustrated by like CSS specificity and all these other things um this",
    "start": "1305440",
    "end": "1311559"
  },
  {
    "text": "should make you feel better about the future of your job um so here we got a template because we're going to we're",
    "start": "1311559",
    "end": "1318120"
  },
  {
    "text": "going to put a template into the shadow Dom that's totally cool that's actually very good thing to do inside of the",
    "start": "1318120",
    "end": "1323840"
  },
  {
    "text": "template we got a style tag in the style tag we're going to say hey I think all h3s should be white with a background of",
    "start": "1323840",
    "end": "1330919"
  },
  {
    "text": "tomato okay and tomato is like a built-in CSS color it's not something fancy that I did um and then we've got",
    "start": "1330919",
    "end": "1337360"
  },
  {
    "text": "an H3 inside of our template that has a shadow H3 header so we're going to take all of that and we're going to put it in",
    "start": "1337360",
    "end": "1342559"
  },
  {
    "text": "the shadow Dom do that we query selector the template we query selector our little",
    "start": "1342559",
    "end": "1348559"
  },
  {
    "text": "widget down there we ask the widget to create some Shadow route and then we clone the guts of the template and we throw it into that shadow route okay so",
    "start": "1348559",
    "end": "1355520"
  },
  {
    "text": "what we get is this thing at the bottom that says a shadow H3 header and you'll notice that the text is white the",
    "start": "1355520",
    "end": "1362120"
  },
  {
    "text": "background's tomato and the other thing you notice is that right above it is an H3 header that just is like from my",
    "start": "1362120",
    "end": "1369840"
  },
  {
    "text": "presentation and the two look nothing alike the two are not affecting one another even though I have a style tag",
    "start": "1369840",
    "end": "1376080"
  },
  {
    "text": "and I've throw it into the document that guy right there did not suddenly like turn white and get a background color and likewise this guy down here is not",
    "start": "1376080",
    "end": "1382760"
  },
  {
    "text": "using that type face so they're completely separate and that's thanks to our friend the shadow",
    "start": "1382760",
    "end": "1390039"
  },
  {
    "text": "boundry now when you are working with Styles in the shadow Dom there's a few",
    "start": "1390799",
    "end": "1396400"
  },
  {
    "text": "really like highle flags that you can use to affect how you think style should be interpreted and inherited and",
    "start": "1396400",
    "end": "1402480"
  },
  {
    "text": "whatnot the first is called apply auor Styles this is a this is like a Boolean value that you set on your shadow",
    "start": "1402480",
    "end": "1409480"
  },
  {
    "text": "root by default it's set to false and it means that it's not going like like",
    "start": "1409480",
    "end": "1414919"
  },
  {
    "text": "author Styles any sort of styles in the parent document are not going to be um implemented in the shadow Dom they're",
    "start": "1414919",
    "end": "1421159"
  },
  {
    "text": "not going to render if we set this to true if we like toggle this to",
    "start": "1421159",
    "end": "1426919"
  },
  {
    "text": "true then it's going to allow those styles to come into the shadow Dom it's going to allow the the styles from the",
    "start": "1426919",
    "end": "1433679"
  },
  {
    "text": "page to start affecting our elements in the shadow Dom so my H3 header started starts to use the same type face as my",
    "start": "1433679",
    "end": "1441320"
  },
  {
    "text": "other H3 header it starts to use the same margining as my other H3 header my style tag where I where I said it's uh",
    "start": "1441320",
    "end": "1447679"
  },
  {
    "text": "colored to White and it's background of tomato that is also being applied but I'm now inheriting author Styles as well",
    "start": "1447679",
    "end": "1454559"
  },
  {
    "text": "so that's app ply author Styles it can be true or false by default It Is by default it is",
    "start": "1454559",
    "end": "1460559"
  },
  {
    "text": "false the other one is reset style inheritance so again you set this on your Shadow route uh this is also false",
    "start": "1460559",
    "end": "1468200"
  },
  {
    "text": "by default if you set reset style inheritance to true it's kind of like",
    "start": "1468200",
    "end": "1473520"
  },
  {
    "text": "turning on the ultimate CSS reset have you guys use CSS resets before like in your apps right",
    "start": "1473520",
    "end": "1480240"
  },
  {
    "text": "so while my H3 header is not using any of the Styles my sorry my shadow H3",
    "start": "1480240",
    "end": "1485760"
  },
  {
    "text": "header this guy down here is not using any of the styles from the H3 up there",
    "start": "1485760",
    "end": "1491080"
  },
  {
    "text": "it is still styled right like it is Centered for instance and it's not using",
    "start": "1491080",
    "end": "1498039"
  },
  {
    "text": "that type face but it is using the same type face as all my body text so it has inherited some Styles but if you set",
    "start": "1498039",
    "end": "1504559"
  },
  {
    "text": "reset style inheritance to true it's going to like reset everything right at",
    "start": "1504559",
    "end": "1509840"
  },
  {
    "text": "the style boundary so now it goes back to being left Al line and it starts using times bold and it's like 18 point",
    "start": "1509840",
    "end": "1515880"
  },
  {
    "text": "or whatever this is like the browser default my style tag is still being",
    "start": "1515880",
    "end": "1521080"
  },
  {
    "text": "applied but everything else has been reset so that's reset style inheritance pretty cool",
    "start": "1521080",
    "end": "1529080"
  },
  {
    "text": "other interesting things that you can do uh remember how I said that the element hosting all of our shadow Dom is",
    "start": "1529159",
    "end": "1534279"
  },
  {
    "text": "referred to as the shadow host so we can actually style the shadow host from within the shadow Dom this is good if",
    "start": "1534279",
    "end": "1540720"
  },
  {
    "text": "you want to add like rollover behavior and stuff like that to whichever element is holding all of your content so there's a new CSS selector it's this",
    "start": "1540720",
    "end": "1547880"
  },
  {
    "text": "like colon host selector and you can use that to actually style the element holding all of your Shadow",
    "start": "1547880",
    "end": "1555679"
  },
  {
    "text": "down the host selector is a like functional selector it takes arguments",
    "start": "1555679",
    "end": "1560960"
  },
  {
    "text": "so you can say hey if my shadow host has a class of skinny or if it is inside of",
    "start": "1560960",
    "end": "1569559"
  },
  {
    "text": "an element with a class of skinny I want you to apply certain Styles so you can use this to like theme your component",
    "start": "1569559",
    "end": "1575880"
  },
  {
    "text": "depending on the context in which it is being used whatever an ele element is sort of nested inside of it can change",
    "start": "1575880",
    "end": "1581080"
  },
  {
    "text": "its appearance which is pretty",
    "start": "1581080",
    "end": "1585600"
  },
  {
    "text": "interesting you can also use what are know is custom properties so inside of your uh Shadow",
    "start": "1586279",
    "end": "1593080"
  },
  {
    "text": "style tags you can say hey I think H2S should use a font family and I'm going to set it to this variable this is like",
    "start": "1593080",
    "end": "1599559"
  },
  {
    "text": "css3 variable syntax so I think my H2 should use a font family of variable header font I'm not actually like",
    "start": "1599559",
    "end": "1606600"
  },
  {
    "text": "specifying what the font family is I'm just exposing a variable and in the parent document someone can Implement",
    "start": "1606600",
    "end": "1613520"
  },
  {
    "text": "that variable and say oh cool I think bar header font should be Courier and that way they can actually reach into",
    "start": "1613520",
    "end": "1618919"
  },
  {
    "text": "the shadow Dom and style something that I've exposed to them but they don't have to know the particulars they don't have",
    "start": "1618919",
    "end": "1624399"
  },
  {
    "text": "to know the inner workings of of my uh my shadow Dom which is really handy because it means that you can expose",
    "start": "1624399",
    "end": "1629600"
  },
  {
    "text": "like sort of a a limited set of variables for people to mess around with but then you can change the internal",
    "start": "1629600",
    "end": "1636279"
  },
  {
    "text": "structure of your Shadow Dom all you want you can mess around with the HTML all you want and the user you know the",
    "start": "1636279",
    "end": "1641679"
  },
  {
    "text": "user end it's never going to break okay so that was styling let's",
    "start": "1641679",
    "end": "1647279"
  },
  {
    "text": "talk a little bit about content so I mentioned before that you can pull content from the shadow host into the",
    "start": "1647279",
    "end": "1652799"
  },
  {
    "text": "shadow Dom and you might want to do that for instance if you're building a button",
    "start": "1652799",
    "end": "1657840"
  },
  {
    "text": "and you might have a button with like really elaborate markup in the shadow Dom but you still need the label for that button to come from the user so to",
    "start": "1657840",
    "end": "1665480"
  },
  {
    "text": "do that you can create an insertion point using the new content tag insertion points look like this inside",
    "start": "1665480",
    "end": "1672440"
  },
  {
    "text": "of your template you can say okay I've got an H2 and inside of my H2 I want a wild content to",
    "start": "1672440",
    "end": "1679360"
  },
  {
    "text": "appear and whoever is actually using our element can then just pass in some text they can say oh yeah uh widget should",
    "start": "1679360",
    "end": "1685679"
  },
  {
    "text": "have jiggly puff inside of it so when the browser composes these two you end",
    "start": "1685679",
    "end": "1690799"
  },
  {
    "text": "up with a wild Jigglypuff appeared for the Pokemon",
    "start": "1690799",
    "end": "1696679"
  },
  {
    "text": "fans the content tag by itself it's kind of like a catchall it's basically saying hey any content that you have inside of",
    "start": "1697880",
    "end": "1705200"
  },
  {
    "text": "the Shadow host I would like for you to try to render that inside of the shadow that means you could have like a",
    "start": "1705200",
    "end": "1710960"
  },
  {
    "text": "thousand lines of HTML inside of this widget div and it would try to render all of those you probably don't want",
    "start": "1710960",
    "end": "1717480"
  },
  {
    "text": "that you probably want more granular control over how content appears inside of the Shadow Dom so you can actually",
    "start": "1717480",
    "end": "1724240"
  },
  {
    "text": "give your content tag a select attribute and with the select attribute you can use CSS selectors to pick and choose",
    "start": "1724240",
    "end": "1730559"
  },
  {
    "text": "which things you want from the shadow host and where they should appear inside of the Shadow Dom so that looks like this up there at",
    "start": "1730559",
    "end": "1738519"
  },
  {
    "text": "the top we've got a few h3s it says like last name content select anything with",
    "start": "1738519",
    "end": "1743720"
  },
  {
    "text": "the class last name and render it right here select you know first name content select anything with a class first name",
    "start": "1743720",
    "end": "1749760"
  },
  {
    "text": "and then here I've got a Content tag that's selecting with mty quotes which is sort of like a wild card it just means any other content that was not",
    "start": "1749760",
    "end": "1756519"
  },
  {
    "text": "selected try to render that right here when the user is using our shadow Dom",
    "start": "1756519",
    "end": "1762480"
  },
  {
    "text": "they can say okay here's my here's my widget div uh I'd like it to say hello world I've got a space here of class",
    "start": "1762480",
    "end": "1768960"
  },
  {
    "text": "first name Rob I got a span here class last name Dodson throw that into the Shadow do the interesting thing is that",
    "start": "1768960",
    "end": "1775840"
  },
  {
    "text": "when it renders it renders according to everything that we listed in the shadow Dom and it since we used content",
    "start": "1775840",
    "end": "1782880"
  },
  {
    "text": "selection and insertion points we can actually totally rearrange the way the source actually appears so",
    "start": "1782880",
    "end": "1790679"
  },
  {
    "text": "we've we've basically like flipped the order that everything is rendering out of the host into the shadow Dom this is",
    "start": "1790679",
    "end": "1797840"
  },
  {
    "text": "really really crazy and it's really powerful because it means that the user doesn't have to put things in the right",
    "start": "1797840",
    "end": "1803840"
  },
  {
    "text": "order it means that so long as they use the right class names or like IDs we can just choose how things will render for",
    "start": "1803840",
    "end": "1810440"
  },
  {
    "text": "them and that's really powerful because it means that the user could swap out one Shadow Dom for another you know and",
    "start": "1810440",
    "end": "1817559"
  },
  {
    "text": "so long as you know it's by the same author or whatever it could completely change the appearance and they never",
    "start": "1817559",
    "end": "1823760"
  },
  {
    "text": "have to touch their Source okay conceptually I know everything that I just said over the",
    "start": "1823760",
    "end": "1828880"
  },
  {
    "text": "past like three minutes was a total mind  um so Eric bman from Google put",
    "start": "1828880",
    "end": "1834640"
  },
  {
    "text": "together a wonderful tool this Shadow Dom visualizer which will actually let you write Shadow Dom and write like host",
    "start": "1834640",
    "end": "1841760"
  },
  {
    "text": "node HTML and it will just show you where everything ends up which is really useful when you're first getting into",
    "start": "1841760",
    "end": "1848320"
  },
  {
    "text": "this and you're like okay uh I think I understand how this works but I have no idea actually how this works so this is",
    "start": "1848320",
    "end": "1854120"
  },
  {
    "text": "a really handy tool when you're first getting started after you've done this a few times though you'll you'll learn to",
    "start": "1854120",
    "end": "1859279"
  },
  {
    "text": "just like Intuit it this and it it it as it is not as confusing um once you've worked with it for a little while and",
    "start": "1859279",
    "end": "1865799"
  },
  {
    "text": "one last thing that I want to show this is like brand new so this just landed you can actually style into the",
    "start": "1865799",
    "end": "1874120"
  },
  {
    "text": "shadow Dom from the outside using two new CSS selectors one called the hat and",
    "start": "1874120",
    "end": "1879960"
  },
  {
    "text": "one called the cat the cat and the hat selectors so I know I said that you know the",
    "start": "1879960",
    "end": "1887919"
  },
  {
    "text": "Shadow boundary make sure that the user can't like accidentally like get in there and start styling your element and",
    "start": "1887919",
    "end": "1893200"
  },
  {
    "text": "that's true they can't accidentally get in there and start styling your element but you do want to allow them the",
    "start": "1893200",
    "end": "1898559"
  },
  {
    "text": "ability to reach in if they absolutely need to so that's where the cat and the hat selector come in so the cat selector",
    "start": "1898559",
    "end": "1906360"
  },
  {
    "text": "or sorry the Hat selector this guy this like single carrot guy right here will go one level deep into the shadow Dom",
    "start": "1906360",
    "end": "1913240"
  },
  {
    "text": "and allow you to apply a style there and if you remember our content",
    "start": "1913240",
    "end": "1918639"
  },
  {
    "text": "tag from before right like you can take content Out of The Shadow host and and render it in the shadow Dom so that",
    "start": "1918639",
    "end": "1924080"
  },
  {
    "text": "means you can have Shadow Dom inside of Shadow Dom you can have like a shadow Dom Inception going on and that's where",
    "start": "1924080",
    "end": "1930559"
  },
  {
    "text": "the cat comes in the cat will let you pierce through every layer of the Shadow Dom and style all the H2S inside of it",
    "start": "1930559",
    "end": "1938679"
  },
  {
    "text": "so Cat in the Hat that just landed in like Chrome 33 brand new so um you guys",
    "start": "1938679",
    "end": "1944200"
  },
  {
    "text": "are the first to know okay so that was Shadow Dom that was a lot I know thank you for hanging in there let's talk about custom",
    "start": "1944200",
    "end": "1951880"
  },
  {
    "text": "elements okay custom elements are new tags that",
    "start": "1951880",
    "end": "1957320"
  },
  {
    "text": "we create that extend what the browser can currently do if you remember the equation from earlier templates plus",
    "start": "1957320",
    "end": "1963080"
  },
  {
    "text": "Shadow Dom equals custom elements so this is the part that we're getting to you got a template you're hiding all the stuff in the shadow Dum just like the",
    "start": "1963080",
    "end": "1969000"
  },
  {
    "text": "video tag right you you you've turn you've got this like cool one liner of HTML that people can use now let's just",
    "start": "1969000",
    "end": "1974559"
  },
  {
    "text": "take it a step further let's just Define our own tag for it so to do that we use the register method",
    "start": "1974559",
    "end": "1982480"
  },
  {
    "text": "which is a brand new method that's been added to the document object and you call document register you pass in a tag",
    "start": "1982480",
    "end": "1988440"
  },
  {
    "text": "name for whatever your new tag is and you need to pass in a prototype like a JavaScript prototype for it there's two",
    "start": "1988440",
    "end": "1994519"
  },
  {
    "text": "requirements one the tag name must have a dash in it so it's got to be tag- name",
    "start": "1994519",
    "end": "2000120"
  },
  {
    "text": "or you know x- Fu or my- widget that tells the browser hey this is a custom",
    "start": "2000120",
    "end": "2005320"
  },
  {
    "text": "element this is not like a native a native element and that's to prevent someone from accidentally like naming",
    "start": "2005320",
    "end": "2010559"
  },
  {
    "text": "something that you know later on the browser makers is want to use that name as well so that's kind of how you Nam space your element of",
    "start": "2010559",
    "end": "2017000"
  },
  {
    "text": "sorts the other thing is that your prototype must inherit from HTML element",
    "start": "2017000",
    "end": "2022519"
  },
  {
    "text": "and I'll show you how to do that that sounds complicated it's not okay so to create our custom element",
    "start": "2022519",
    "end": "2028159"
  },
  {
    "text": "the first thing you want to do you want to have a template you want to have a template full of cool stuff uh in this case we're just showing that you would",
    "start": "2028159",
    "end": "2033399"
  },
  {
    "text": "like query selector some template somewhere full of markup and then you need a prototype that",
    "start": "2033399",
    "end": "2040000"
  },
  {
    "text": "extends HTML element so you can do that using object create you can say hey I want a new prototype and using object",
    "start": "2040000",
    "end": "2046360"
  },
  {
    "text": "create I can just extend HTML elements prototype I that's that's really the extent of it you don't have to worry about like complex JavaScript",
    "start": "2046360",
    "end": "2052200"
  },
  {
    "text": "inheritance I know that's a confusing topic this is all you got to do this one line right",
    "start": "2052200",
    "end": "2057720"
  },
  {
    "text": "here on this new prototype that you're creating you need to have this one call back this created call back this is like",
    "start": "2057720",
    "end": "2065358"
  },
  {
    "text": "when the parser is working its way through the document and it's sees our tag it's going to check to see if it has",
    "start": "2065359",
    "end": "2070960"
  },
  {
    "text": "this created callback defined on it and if it does it's going to run it like as soon as it sees it so this is where you",
    "start": "2070960",
    "end": "2076158"
  },
  {
    "text": "kind of do all the setup work for your tag and what we're going to do here is we're going to create our shadow route and we're going to pin the contents of",
    "start": "2076159",
    "end": "2082079"
  },
  {
    "text": "our template to the shadow rout okay we're just going to like make sure something displays the last thing we do is we call",
    "start": "2082079",
    "end": "2088960"
  },
  {
    "text": "document register we pass in our new tag name we pass in the Prototype that we've just defined and we have like a new tag",
    "start": "2088960",
    "end": "2095720"
  },
  {
    "text": "now so using it really straightforward we can just use our new tag name because",
    "start": "2095720",
    "end": "2101200"
  },
  {
    "text": "we've registered it we could also do uh document create element and pass in our tag name the same way that you do",
    "start": "2101200",
    "end": "2107240"
  },
  {
    "text": "document create Element image or div and we could also call new widget so when we",
    "start": "2107240",
    "end": "2113720"
  },
  {
    "text": "call a document register it actually returns a Constructor to us if we choose to expose that to people they can just",
    "start": "2113720",
    "end": "2119280"
  },
  {
    "text": "call new widget and add the uh the element to the browser that",
    "start": "2119280",
    "end": "2124319"
  },
  {
    "text": "way all right we talked about the created callback",
    "start": "2126280",
    "end": "2131320"
  },
  {
    "text": "which the uh the browser runs as soon as it sees our tag there's other really cool handy life cycle callbacks that we",
    "start": "2131320",
    "end": "2136560"
  },
  {
    "text": "can use to build up deconstruct manipulate our component there's the ined view callback",
    "start": "2136560",
    "end": "2143839"
  },
  {
    "text": "which gets run whenever one of our elements is actually added to the page there's the left view call back",
    "start": "2143839",
    "end": "2150960"
  },
  {
    "text": "which is run whenever one of our elements is removed from the page and both ined View and left view were",
    "start": "2150960",
    "end": "2156119"
  },
  {
    "text": "previously called ined document and left document you'll actually see a lot of tutorials out there that use that nomenclature don't use that nomenclature",
    "start": "2156119",
    "end": "2162960"
  },
  {
    "text": "it's being removed uh the last thing is the attribute change call back and this is",
    "start": "2162960",
    "end": "2168319"
  },
  {
    "text": "really handy so anytime someone manipulates an attribute on one of our tags it's going to run this call back",
    "start": "2168319",
    "end": "2175160"
  },
  {
    "text": "and we're going to get the name of the attribute that changed we'll also get the old value and the new value so we",
    "start": "2175160",
    "end": "2181280"
  },
  {
    "text": "can react to someone like manipulating one of our components you can also extend",
    "start": "2181280",
    "end": "2187960"
  },
  {
    "text": "pre-existing tags you don't always have to just create a new tag from scratch you can extend a pre-ex existing tag and",
    "start": "2187960",
    "end": "2193599"
  },
  {
    "text": "when you do that it's called a type extension element so if you want to extend the button tag you could still",
    "start": "2193599",
    "end": "2200560"
  },
  {
    "text": "just call document register you still got to give it a tag name then you pass in this extends option so you're like uh",
    "start": "2200560",
    "end": "2206400"
  },
  {
    "text": "it extends the button tag and the Prototype that you pass in needs to be the prototype for that element so HTML",
    "start": "2206400",
    "end": "2212920"
  },
  {
    "text": "button element instead of HTML element and then using your type",
    "start": "2212920",
    "end": "2217960"
  },
  {
    "text": "extension element you can say button is my button or document create element",
    "start": "2217960",
    "end": "2223280"
  },
  {
    "text": "button my button it really depends on how you prefer to work with these elements if you if you want to inherit",
    "start": "2223280",
    "end": "2231079"
  },
  {
    "text": "all of the things that like anchor tags give you already then maybe do a type extension element if you want to create",
    "start": "2231079",
    "end": "2237680"
  },
  {
    "text": "your own tag from scratch that works as well yes question",
    "start": "2237680",
    "end": "2244599"
  },
  {
    "text": "yeah that's a good point actually yeah like when you say extends button um well I guess it's because you could also",
    "start": "2251200",
    "end": "2257760"
  },
  {
    "text": "extend a like a custom element that you've already created this might just be uh laziness",
    "start": "2257760",
    "end": "2264520"
  },
  {
    "text": "on the case of the browser makers that's a good question",
    "start": "2264520",
    "end": "2270240"
  },
  {
    "text": "yeah oh uh I don't know CU yeah it seems like",
    "start": "2272520",
    "end": "2278440"
  },
  {
    "text": "you should be able to just say my button but again that might just be something that the browser makers put in because they preferred that syntax I's about",
    "start": "2278440",
    "end": "2285079"
  },
  {
    "text": "this to",
    "start": "2285079",
    "end": "2287280"
  },
  {
    "text": "me uh so in terms of like okay so why would you extend something so you can inherit all the things that it has like",
    "start": "2292160",
    "end": "2298480"
  },
  {
    "text": "hre and things I'm asking yeah is it not the same right as",
    "start": "2298480",
    "end": "2304400"
  },
  {
    "text": "element I don't know you'd have to ask Google yeah okay so um one thing that",
    "start": "2304400",
    "end": "2311240"
  },
  {
    "text": "you will see in a lot of examples is people creating custom elements like this where they do it declaratively they",
    "start": "2311240",
    "end": "2318200"
  },
  {
    "text": "use an element tag this is something that was briefly added to the browser where you could just have an element tag and you could have like templates inside",
    "start": "2318200",
    "end": "2323640"
  },
  {
    "text": "of it and do a bunch of other stuff this has been removed like every tutorial I see creates custom elements like this",
    "start": "2323640",
    "end": "2330280"
  },
  {
    "text": "and this has been removed so if you guys are like researching this afterwards and you're like oh hey this looks like the",
    "start": "2330280",
    "end": "2335920"
  },
  {
    "text": "much more straightforward way of doing it it totally is the more straightforward way of doing it but it was taken out just because they were having problems sorting out the",
    "start": "2335920",
    "end": "2342400"
  },
  {
    "text": "execution of when all the JavaScript would happen or the order in which all the javascrip execute okay let's take a break okay",
    "start": "2342400",
    "end": "2350240"
  },
  {
    "text": "we're we are past all the painful code for a little while okay let's look at let's look at some cool stuff what could",
    "start": "2350240",
    "end": "2355480"
  },
  {
    "text": "we build with custom elements what could we build now that we have access to you",
    "start": "2355480",
    "end": "2360599"
  },
  {
    "text": "know the ability to find our own tags in the browser so I use MailChimp on my blog for people to like sign up for my",
    "start": "2360599",
    "end": "2366680"
  },
  {
    "text": "newsletter these things look very distorted on here normally it doesn't look so crazy like that but if you Ed MailChimp if you use woo",
    "start": "2366680",
    "end": "2374599"
  },
  {
    "text": "or some other service like that they give you a whole big blob of HTML that you need to add to your page they give",
    "start": "2374599",
    "end": "2380119"
  },
  {
    "text": "you a whole bunch of CSS a bunch of JavaScript that you need to add to your page and you just got to like Chuck that into the bottom of every page right that",
    "start": "2380119",
    "end": "2386160"
  },
  {
    "text": "kind of sucks especially if it doesn't look like the rest of your code maybe they use underscores instead of dashes or something you know stylistically you",
    "start": "2386160",
    "end": "2391720"
  },
  {
    "text": "don't like it so I created a MailChimp tag and all it does is it takes all the MailChimp stuff and it just squishes it",
    "start": "2391720",
    "end": "2397160"
  },
  {
    "text": "down into one tag and it's it's close to a oneliner it's much less code than than what I normally have to work with when",
    "start": "2397160",
    "end": "2403160"
  },
  {
    "text": "I'm using Mach if you do data visualization there's a lot of back and",
    "start": "2403160",
    "end": "2409680"
  },
  {
    "text": "forth between JavaScript and your markup on the front end it would be cool to",
    "start": "2409680",
    "end": "2414839"
  },
  {
    "text": "just have tags like this where you could just specify hey I want a pie chart",
    "start": "2414839",
    "end": "2420040"
  },
  {
    "text": "donut chart bar graph and you just configure them with values attributes so you can pass in an array of attributes",
    "start": "2420040",
    "end": "2425720"
  },
  {
    "text": "and that will just like set the way those tags",
    "start": "2425720",
    "end": "2430078"
  },
  {
    "text": "look and what if it wasn't like UI at all that you were working with what if you wanted to work with more Behavior",
    "start": "2430960",
    "end": "2436119"
  },
  {
    "text": "type stuff so there's a library out there called momentjs and it's really cool it basically takes",
    "start": "2436119",
    "end": "2443160"
  },
  {
    "text": "a string of text and converts it into a date object for you so you could pass in October 31st 1983 or something and it",
    "start": "2443160",
    "end": "2449960"
  },
  {
    "text": "would just turn that into a JavaScript dat object right so I was thinking okay cool let's make a moment now tag let's",
    "start": "2449960",
    "end": "2456560"
  },
  {
    "text": "just like encapsulate that behavior into a moment now tag so we can use the data",
    "start": "2456560",
    "end": "2462400"
  },
  {
    "text": "object like in a paragraph and we don't have to write any JavaScript for that and then I was thinking okay cool",
    "start": "2462400",
    "end": "2468160"
  },
  {
    "text": "let's let's take the moment now tag and let's just Nest it inside of a moment format tag so the moment format tag the",
    "start": "2468160",
    "end": "2473319"
  },
  {
    "text": "only thing it cares about is that its first child exposes a date of some kind and then it can configure that date",
    "start": "2473319",
    "end": "2478920"
  },
  {
    "text": "using these tokens and since moment format has a",
    "start": "2478920",
    "end": "2484920"
  },
  {
    "text": "consistent API the only thing it cares about is that it's first child suppos as a date you're going to have a moment parse tag and the moment parse tag",
    "start": "2484920",
    "end": "2490839"
  },
  {
    "text": "someone can actually pass in text and it will turn that into a date object and you can actually combine like",
    "start": "2490839",
    "end": "2496920"
  },
  {
    "text": "all of these into a moment from tag so the moment from TAG just wants to see",
    "start": "2496920",
    "end": "2502760"
  },
  {
    "text": "whatever whatever two children it has inside of it so long as they produce dates of some kind it's just going to find the difference between those two",
    "start": "2502760",
    "end": "2508560"
  },
  {
    "text": "dates so the cool thing about this is it doesn't even have to be like the moment library that you're using so long as you expose a date in the same way that the",
    "start": "2508560",
    "end": "2515280"
  },
  {
    "text": "moment from TAG like knows to consume them you could have different tags inside of there but this is kind of like",
    "start": "2515280",
    "end": "2521319"
  },
  {
    "text": "some of the weird crazy stuff that you can start to do when you're not even thinking about UI anymore you're just like what if I just started putting",
    "start": "2521319",
    "end": "2527319"
  },
  {
    "text": "JavaScript inside of here like what happens so pretty interesting so everything that you see on the screen no JavaScript was written to make any of",
    "start": "2527319",
    "end": "2533319"
  },
  {
    "text": "that happened that's that's all just like paragraph tags and those tags down",
    "start": "2533319",
    "end": "2538160"
  },
  {
    "text": "there okay last thing we're going to talk about its Imports and this will be really quick",
    "start": "2538520",
    "end": "2545680"
  },
  {
    "text": "Imports load external documents into your page it's basically how you pull in custom elements right now working with",
    "start": "2545680",
    "end": "2552960"
  },
  {
    "text": "an import super straightforward use a link tag the same way that you use a link tag when you're working with CSS",
    "start": "2552960",
    "end": "2558440"
  },
  {
    "text": "there's just a new relation type so normally you say link Rel equals stylesheet now you say link Rel equals",
    "start": "2558440",
    "end": "2564839"
  },
  {
    "text": "import and you point it to some HTML file that you would like to pull into your",
    "start": "2564839",
    "end": "2569960"
  },
  {
    "text": "document using Imports very easy uh in your head you",
    "start": "2570160",
    "end": "2575440"
  },
  {
    "text": "just link to whatever HL file you're pulling in that's the actual like import that I use to pull in all of those",
    "start": "2575440",
    "end": "2580920"
  },
  {
    "text": "charts that you saw and then you just use your tags there's no waiting to see if they've loaded there's no like async",
    "start": "2580920",
    "end": "2587520"
  },
  {
    "text": "checking that needs to go on you just use your tag you can assume it's there the same way that you can assume CSS is",
    "start": "2587520",
    "end": "2593599"
  },
  {
    "text": "there which is really handy so that's it collectively these",
    "start": "2593599",
    "end": "2600680"
  },
  {
    "text": "are the technologies that make up web components now the support is spotty",
    "start": "2600680",
    "end": "2607760"
  },
  {
    "text": "for sure um Google Chrome has everything that you need Firefox is working on a lot of this",
    "start": "2607760",
    "end": "2615520"
  },
  {
    "text": "stuff they've actually got an open ticket to implement Shadow Dom and it seems like they're like halfway through",
    "start": "2615520",
    "end": "2621760"
  },
  {
    "text": "that IE is iie um and then",
    "start": "2621760",
    "end": "2628079"
  },
  {
    "text": "Safari has some of the stuff in it because it was originally in webkit before blink and webkit forked so it's",
    "start": "2628079",
    "end": "2634960"
  },
  {
    "text": "like in Safari and and I know that recently they've been participating on the mailing list and they've been like",
    "start": "2634960",
    "end": "2640520"
  },
  {
    "text": "all right let's let's talk about these custom elements and everything so it sounds like apple is interested in this as",
    "start": "2640520",
    "end": "2645960"
  },
  {
    "text": "well if you want to play with this stuff now though I'd recommend using Chrome Canary you need to go into about flags",
    "start": "2645960",
    "end": "2652000"
  },
  {
    "text": "and need to turn on uh all these different like experimental features and make sure to turn on show",
    "start": "2652000",
    "end": "2658160"
  },
  {
    "text": "Shadow Dom and the developer tools like I did that earlier if you recall and that's if you want to do",
    "start": "2658160",
    "end": "2663559"
  },
  {
    "text": "Native web components which is awesome and I highly recommend it but I don't want you guys to like come",
    "start": "2663559",
    "end": "2669480"
  },
  {
    "text": "into this talk and be like well great like I guess I'll use this in 10 years um I wanted to show you how you can use",
    "start": "2669480",
    "end": "2675359"
  },
  {
    "text": "them today in all modern browsers so to do that there's this really cool library",
    "start": "2675359",
    "end": "2681200"
  },
  {
    "text": "from Google called polymer and polymer is a collection of polyfills which let us use all of these",
    "start": "2681200",
    "end": "2688400"
  },
  {
    "text": "web components everything that we've talked about today uh in all browsers all modern browsers that includes I 10",
    "start": "2688400",
    "end": "2695440"
  },
  {
    "text": "and above Safari six and above Mozilla has a variant of this Library called",
    "start": "2695440",
    "end": "2701040"
  },
  {
    "text": "xtags and that works all the way down to ie9 but it doesn't have all of the like additional features of polymer if you",
    "start": "2701040",
    "end": "2707559"
  },
  {
    "text": "don't know what a polyfill is a polyfill is just a collection it's it's like a sorry it's a JavaScript library that sneaks support for a cool feature into a",
    "start": "2707559",
    "end": "2714839"
  },
  {
    "text": "browser that does not support it so I.E",
    "start": "2714839",
    "end": "2720240"
  },
  {
    "text": "basically now if that was all polymer did that'd be really cool but polymer is also a framework for building web",
    "start": "2720240",
    "end": "2726559"
  },
  {
    "text": "applications so it adds all the cool web component stuff but it also adds all of",
    "start": "2726559",
    "end": "2731720"
  },
  {
    "text": "these new technologies all the stuff which is some of it is being like standards that are being debated right",
    "start": "2731720",
    "end": "2737559"
  },
  {
    "text": "now some of these are just like total like future things they're not even drafts yet we get web animations pointer",
    "start": "2737559",
    "end": "2742880"
  },
  {
    "text": "events template binding node binding and model driven views a lot of really cool really powerful stuff packed into this",
    "start": "2742880",
    "end": "2748680"
  },
  {
    "text": "framework including all the web component stuff and using polymer to declare your",
    "start": "2748680",
    "end": "2753960"
  },
  {
    "text": "own custom elements is really easy it's a lot easier than doing it the native way you just include",
    "start": "2753960",
    "end": "2760240"
  },
  {
    "text": "polymer and then you have a new uh a new element that you can use polymer element",
    "start": "2760240",
    "end": "2765680"
  },
  {
    "text": "you can give it a tag name whatever name you want so up there it's like my",
    "start": "2765680",
    "end": "2772160"
  },
  {
    "text": "element uh I don't know is that me maybe it's my",
    "start": "2772520",
    "end": "2777839"
  },
  {
    "text": "head uh you can put a template inside a polymer element and polymer is smart",
    "start": "2777839",
    "end": "2783480"
  },
  {
    "text": "enough to know oh if there's a template inside of this tag I should just turn it into Shadow Dom so it'll just like do",
    "start": "2783480",
    "end": "2788720"
  },
  {
    "text": "that for you and you don't have to write any JavaScript to make that happen and you can just use your element",
    "start": "2788720",
    "end": "2795880"
  },
  {
    "text": "you're like Off to the Races so this element down here hello I'm a polymer element that is using this polymer",
    "start": "2795880",
    "end": "2804318"
  },
  {
    "text": "tag when you are using the polymer element tag you can create attributes and you can expose these to the user and",
    "start": "2805800",
    "end": "2812839"
  },
  {
    "text": "these become like automatic bindings within your tag which is really neat so here it says like I've got a tag",
    "start": "2812839",
    "end": "2820440"
  },
  {
    "text": "called fave color and I'm exposing an attribute of just color inside of my template I can say",
    "start": "2820440",
    "end": "2828440"
  },
  {
    "text": "okay hey I want an H2 and I want I wanted to say my favorite color is and I'm going to use curly braces to",
    "start": "2828440",
    "end": "2834040"
  },
  {
    "text": "actually bind to the value of that attribute and then in this script tag",
    "start": "2834040",
    "end": "2839800"
  },
  {
    "text": "I'm going to call the polymer Constructor I'm going to pass it the name of my tag and then I'm going to",
    "start": "2839800",
    "end": "2844920"
  },
  {
    "text": "pass it a prototype object that's going to have a default value for that color attribute so when the user actually uses",
    "start": "2844920",
    "end": "2852000"
  },
  {
    "text": "our tag it's going to say okay cool I want this fave color tag I want to set color to purple and that just shows up",
    "start": "2852000",
    "end": "2859839"
  },
  {
    "text": "and we don't have to write any glue code to make that happen the bindings just work which is really",
    "start": "2859839",
    "end": "2867079"
  },
  {
    "text": "cool what's also really interesting about these bindings is that they're like live toway bindings so as they change the element changes and again you",
    "start": "2867079",
    "end": "2874319"
  },
  {
    "text": "don't have to write any code to make that happen it just happens so here it says polymer element the name",
    "start": "2874319",
    "end": "2880839"
  },
  {
    "text": "is Color Picker the attribute that I'm exposing is again that same color attribute inside of the template I've",
    "start": "2880839",
    "end": "2887480"
  },
  {
    "text": "got this little span down here and I've got this input down here I'm going to bind the background color for the span",
    "start": "2887480",
    "end": "2894559"
  },
  {
    "text": "the text value for the span and the text value for the input all to that color",
    "start": "2894559",
    "end": "2900359"
  },
  {
    "text": "attribute so if I like go over and start typing in here I can change it from",
    "start": "2900359",
    "end": "2907160"
  },
  {
    "text": "tomato to like sky blue and like as I'm typing it's just like updating inside of",
    "start": "2907160",
    "end": "2912240"
  },
  {
    "text": "my element um or I think burlywood is a",
    "start": "2912240",
    "end": "2918000"
  },
  {
    "text": "really cool built-in color or papaya whip so you don't have to actually like",
    "start": "2918000",
    "end": "2924720"
  },
  {
    "text": "do anything to make these bindings update they just update for you and if you've seen demos of like Angular JS",
    "start": "2924720",
    "end": "2931119"
  },
  {
    "text": "maybe this starts to feel very familiar and look a lot like their demos and in fact there is a lot of overlap between",
    "start": "2931119",
    "end": "2936960"
  },
  {
    "text": "angularjs directives and web components and there's a lot of talk between those two teams about having the projects kind",
    "start": "2936960",
    "end": "2944000"
  },
  {
    "text": "of like maybe can join in some fashion okay where's my cursor here we",
    "start": "2944000",
    "end": "2950640"
  },
  {
    "text": "go so the last thing you need to know is that when you're working with polymer you still have the same life cycle callbacks which you can use to react to",
    "start": "2950640",
    "end": "2956960"
  },
  {
    "text": "changes the polymer team shortened the name of them so instead of created callback it's just created instead of",
    "start": "2956960",
    "end": "2963680"
  },
  {
    "text": "entered view callback it's entered view left View attribute",
    "start": "2963680",
    "end": "2968760"
  },
  {
    "text": "changed okay there is way more on this topic than what we're going to have time",
    "start": "2968760",
    "end": "2975520"
  },
  {
    "text": "to cover tonight so to continue your further education if you're like really",
    "start": "2975520",
    "end": "2980559"
  },
  {
    "text": "interested in this stuff I would recommend that you I'm going to post these slides up for you all to to go see",
    "start": "2980559",
    "end": "2986559"
  },
  {
    "text": "definitely check out web components resources that is kind of like the One-Stop shop right now to you know",
    "start": "2986559",
    "end": "2992680"
  },
  {
    "text": "learn all about web components it's it's Eric bidelman from Google collected all the resources into one page which is",
    "start": "2992680",
    "end": "2997880"
  },
  {
    "text": "very handy HTML 5 rocks has awesome articles on web components check out the",
    "start": "2997880",
    "end": "3003440"
  },
  {
    "text": "polymer Project Check out xtags from Mozilla it's similar but different from",
    "start": "3003440",
    "end": "3009040"
  },
  {
    "text": "polymer brick is a whole bunch of UI elements that the team at Mozilla has",
    "start": "3009040",
    "end": "3014160"
  },
  {
    "text": "already created that you can actually start playing around with which is really fun custom elements IO is like a",
    "start": "3014160",
    "end": "3019280"
  },
  {
    "text": "registry that people have put together of of polymer elements brick elements native custom elements so you can go",
    "start": "3019280",
    "end": "3024359"
  },
  {
    "text": "there and you can browse what people are already making and lastly check out the chromium dashboard because it has the status of",
    "start": "3024359",
    "end": "3031280"
  },
  {
    "text": "all of these different specs not just in Chrome but also in Firefox iie Safari",
    "start": "3031280",
    "end": "3036960"
  },
  {
    "text": "Etc um if you're interested in like any of the components that I showed in this talk they're all up on GitHub Fork them",
    "start": "3036960",
    "end": "3043400"
  },
  {
    "text": "break them do whatever you want go crazy just like don't launch them into production unless you're a crazy person",
    "start": "3043400",
    "end": "3049920"
  },
  {
    "text": "um and yeah thank you guys uh yeah thanks I hope I hope you're leaving here",
    "start": "3049920",
    "end": "3055000"
  },
  {
    "text": "excited by where we're headed with web components and by where the web platform is going to be in a few years so thanks",
    "start": "3055000",
    "end": "3064078"
  }
]