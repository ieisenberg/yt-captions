[
  {
    "text": "[Music]",
    "start": "3350",
    "end": "14249"
  },
  {
    "text": "one trillion is 1 million million one trillion is over 60 times the amount of UK currency currently in circulation and",
    "start": "15519",
    "end": "23039"
  },
  {
    "text": "if you were to start counting to 1 trillion now it would take you over 31,000 years to",
    "start": "23039",
    "end": "28439"
  },
  {
    "text": "finish however it took less than six years to emit one trillion messages to Kafka and that's only inter service",
    "start": "28439",
    "end": "35399"
  },
  {
    "text": "communication messages if we were to consider other message types as well we would have done this in less than a",
    "start": "35399",
    "end": "42079"
  },
  {
    "text": "year today we're going to tell you the story about how as cloudflow grew as a company and also as the engineering",
    "start": "42559",
    "end": "48360"
  },
  {
    "text": "function grew we had to build and adapt our tooling to enable us to continue to deliver fast we're going to do this by",
    "start": "48360",
    "end": "55280"
  },
  {
    "text": "firstly timelining from the early days of working in distributed domain based teams and and how we built abstractions",
    "start": "55280",
    "end": "60920"
  },
  {
    "text": "on top of Kafka that helped us reach that magic one trillion message Mark but then I'm going to share with",
    "start": "60920",
    "end": "66119"
  },
  {
    "text": "you some real incidents we faced in recent years as our tooling began to hit scalability limitations as well",
    "start": "66119",
    "end": "71479"
  },
  {
    "text": "describing the steps and patterns we've applied to ensure we can deal with Cloud Flare's ever increasing demand we'll",
    "start": "71479",
    "end": "76880"
  },
  {
    "text": "then wrap up the talk by sharing some of the next steps we're thinking about as well as sharing some of our key",
    "start": "76880",
    "end": "82079"
  },
  {
    "text": "lessons hi I'm Matt Bo and I'm joined by Andrea meta today we're both um in the",
    "start": "82079",
    "end": "87520"
  },
  {
    "text": "application Services team at Clare and we'll talk a little bit more about what the application Services team at Cloud flare does shortly but today we're going",
    "start": "87520",
    "end": "93720"
  },
  {
    "text": "to share with you the tales of cfra at Cloud flare before we get too deep into",
    "start": "93720",
    "end": "99759"
  },
  {
    "text": "explaining the uh the things we've learned along the way we just want to do some uh some baselining so we all ensure",
    "start": "99759",
    "end": "106240"
  },
  {
    "text": "we have the same context so we're going to start at the beginning which is what is cloudflow cloudflow has a vision of",
    "start": "106240",
    "end": "112119"
  },
  {
    "text": "building a better internet and so this we provide a Global Network to our customers it enables them to secure websites apis and internet traffics",
    "start": "112119",
    "end": "119000"
  },
  {
    "text": "protect their corporate net networks and also to write and deploy entire applications that run on the edge we do",
    "start": "119000",
    "end": "124200"
  },
  {
    "text": "this through products such as CDN zrust Cloud flow workers and it's very simpl as it looks like this diagram here uh",
    "start": "124200",
    "end": "131800"
  },
  {
    "text": "bad people can't get to your website good people can and Cloud does all the stuff to figure out what determines good and what determines",
    "start": "131800",
    "end": "138440"
  },
  {
    "text": "bad if we dig a tiny bit deeper into this um from an engineering perspective",
    "start": "138440",
    "end": "144120"
  },
  {
    "text": "we have two main components to the cloud flare Network we have the global Edge Network um a surprising amount of cloud",
    "start": "144120",
    "end": "150800"
  },
  {
    "text": "flow is built using Cloud flow's own products so we actually do build and deploy cloudflow workers that on our Global Edge the same way as our",
    "start": "150800",
    "end": "156879"
  },
  {
    "text": "customers do the other place we can deploy is cloud flow control plane this is a collection of data centers where we",
    "start": "156879",
    "end": "163720"
  },
  {
    "text": "run kubernetes we run Kafka and we run databases we actually run the kafa and the databases on bare metal and we run",
    "start": "163720",
    "end": "170440"
  },
  {
    "text": "kubernetes on bare metal but all our CFA consumers and producers are deployed typically into",
    "start": "170440",
    "end": "176080"
  },
  {
    "text": "kubernetes where we deploy depends on the workload and what we're trying to achieve for the purpose of this talk we're going",
    "start": "176080",
    "end": "181480"
  },
  {
    "text": "to be really focusing on the control plane and how we scal into service communication and en and enablement",
    "start": "181480",
    "end": "186560"
  },
  {
    "text": "tools there and then the final thing I just want to cover off before we get into the meat of this talk is this is going to be",
    "start": "186560",
    "end": "192959"
  },
  {
    "text": "a talk about Kafka and so I just wanted to do some level setting in terms of language and Concepts that we're going to use um most of you are probably",
    "start": "192959",
    "end": "199200"
  },
  {
    "text": "familiar with these already but I just wanted to make sure that everyone kind of had the same understanding going into the",
    "start": "199200",
    "end": "204560"
  },
  {
    "text": "talk so Kafka is made up of clusters a Kafka cluster is made up of many brokers",
    "start": "204560",
    "end": "210200"
  },
  {
    "text": "one of these Brokers is going to be the leader and it's responsible for coordinating in our image broker 2 is the leader messages that are admitted to",
    "start": "210200",
    "end": "217519"
  },
  {
    "text": "CFA are organizing topics for example you may have a topic called user events um and you may emit messages to this",
    "start": "217519",
    "end": "223720"
  },
  {
    "text": "such as user created and user info updated things like that topics are further split into",
    "start": "223720",
    "end": "229840"
  },
  {
    "text": "partitions partitions are how we allow Kafka to scale horizontally for example in the above image you can see that we",
    "start": "229840",
    "end": "236280"
  },
  {
    "text": "have partitions for topic a on both brokers partitions have leaders too these are used to determine who's the",
    "start": "236280",
    "end": "242519"
  },
  {
    "text": "source of Truth for that partition and partitions are replicated by a predetermined replication factor for",
    "start": "242519",
    "end": "248519"
  },
  {
    "text": "resilience at Cloud flare we tend to use three as the minimum replication Factor although there can be good reasons to",
    "start": "248519",
    "end": "254439"
  },
  {
    "text": "pick a much higher number or usually a much lower number the much lower number is usually for Speed services that put push messages to",
    "start": "254439",
    "end": "261440"
  },
  {
    "text": "CF call Producers Services that REM messages from cafro called consumers technically a service could be both a",
    "start": "261440",
    "end": "266960"
  },
  {
    "text": "producer and a consumer so let's get into the talk a little bit more now so Cloud FL",
    "start": "266960",
    "end": "273880"
  },
  {
    "text": "engineering culture is kind of critical to a lot of the things we're going to describe here today cloudflare doesn't really believe",
    "start": "273880",
    "end": "279320"
  },
  {
    "text": "in having a dictat for specific tools or even programming languages teams are encouraged to build run and own their",
    "start": "279320",
    "end": "285199"
  },
  {
    "text": "own Services we therefore encourage experimentation and advocacy for good tools and",
    "start": "285199",
    "end": "290759"
  },
  {
    "text": "methods this is where application Services comes in application Services is a team that exists within our",
    "start": "290759",
    "end": "295840"
  },
  {
    "text": "engineering productivity organization we're a pretty young team in our current format but our mission is simple we want",
    "start": "295840",
    "end": "301680"
  },
  {
    "text": "to make it easy for other teams to do the right thing this means providing batteries included tooling that enables them to move fast with best practices",
    "start": "301680",
    "end": "309000"
  },
  {
    "text": "and also to automate the automatable allow uh allow teams to reduce toil and ensure other teams can focus on",
    "start": "309000",
    "end": "314600"
  },
  {
    "text": "delivering value it hasn't always been like this though CL cfla started Life as a",
    "start": "314600",
    "end": "320360"
  },
  {
    "text": "monolithic PHP application much of which is still used in production today with many teams contributing to it cloudflow",
    "start": "320360",
    "end": "327319"
  },
  {
    "text": "as a company does many things and the monolithic approach was really starting to impact our ability to deliver and deliver safely this talk isn't about",
    "start": "327319",
    "end": "334560"
  },
  {
    "text": "monolith versus microservices though there's plenty of talks about things like that so I'm going to really Zone in",
    "start": "334560",
    "end": "339720"
  },
  {
    "text": "onto the one problem we identified and we set out to solve which is tight",
    "start": "339720",
    "end": "345880"
  },
  {
    "text": "coupling as our engineering team and product offering grew we need to start exploring better ways of allowing teams",
    "start": "345880",
    "end": "351039"
  },
  {
    "text": "to deliver at their own pace decouple from their peers we also need to give Engineers the ability to retry our back",
    "start": "351039",
    "end": "356240"
  },
  {
    "text": "off requests and to have more guarantees about work being completed",
    "start": "356240",
    "end": "361479"
  },
  {
    "text": "at this point cloudflow is already already running Kafka clusters though handling huge volumes of data we seemed a great place to invest",
    "start": "361600",
    "end": "368120"
  },
  {
    "text": "time so we created the message bus cluster the message bus cluster is the most general purpose cluster we run and",
    "start": "368120",
    "end": "374080"
  },
  {
    "text": "is available to all our application teams at Cloud flare on boarding to it is really simple it's a case of creating",
    "start": "374080",
    "end": "379240"
  },
  {
    "text": "a p request into a repository we have which we call salt and once merch and apply you're going to get a new topic",
    "start": "379240",
    "end": "384560"
  },
  {
    "text": "it's going to have your chosen replication strategy a retention period acl's and alert source set up and ready",
    "start": "384560",
    "end": "389960"
  },
  {
    "text": "to go so we're already if you look at this diagram you can see some of the decoupling starting to appear we have",
    "start": "389960",
    "end": "396560"
  },
  {
    "text": "three teams emitting messages that our audit log system is interested in and it can listen to all of those uh without",
    "start": "396560",
    "end": "403240"
  },
  {
    "text": "even being aware particularly those Services exist if you wanted to ask add another service that also needed to emit",
    "start": "403240",
    "end": "408800"
  },
  {
    "text": "some audit logs it would just need to produce to the right topic and we could pick that up immediately so we're already starting to see this looser",
    "start": "408800",
    "end": "414319"
  },
  {
    "text": "coupling in effect one problem that we did see with",
    "start": "414319",
    "end": "419520"
  },
  {
    "text": "this particular approach is unstructured communication so the challenge with having uh systems that aren't aware of",
    "start": "419520",
    "end": "425840"
  },
  {
    "text": "each other is if they don't have a strong contract about how to discuss things with each other you can lead to situations where messages become",
    "start": "425840",
    "end": "432800"
  },
  {
    "text": "unprocessable in fact if you're building an event system event driven system correctly you actually don't want your",
    "start": "432800",
    "end": "438400"
  },
  {
    "text": "systems to necessarily be aware of each other so you don't want them to have that coupling so initially we didn't enforce",
    "start": "438400",
    "end": "444360"
  },
  {
    "text": "any sort of message format and we left it up to the producer teams to decide how to structure their messages",
    "start": "444360",
    "end": "450240"
  },
  {
    "text": "excuse me this was a mistake it led to strong coup coupling and lots of unprocessable messages for example maybe",
    "start": "450240",
    "end": "457520"
  },
  {
    "text": "a producer sent a Jason blob but certain keys were missing and the consumer team expected them to be",
    "start": "457520",
    "end": "464080"
  },
  {
    "text": "there to fix this we started to look around in the Kafka world there's only two really good options available here",
    "start": "464080",
    "end": "471120"
  },
  {
    "text": "there's Apache AO or there's protuff we decided to use Pro protuff and we've been really happy with that",
    "start": "471120",
    "end": "477400"
  },
  {
    "text": "decision we've been using Json previously as I mentioned but we found it harder to enforce forward and",
    "start": "477400",
    "end": "482479"
  },
  {
    "text": "backwards compatibility as well as message being substantially larger than the Proto buff",
    "start": "482479",
    "end": "488680"
  },
  {
    "text": "equivalent Proto provides strict message types and it gives us that forwards and backwards compatibility at the box that",
    "start": "488680",
    "end": "494960"
  },
  {
    "text": "we would desire the ability to generate code in multiple languages is a huge plus as",
    "start": "494960",
    "end": "500479"
  },
  {
    "text": "well we encourage heavy commentary um on our Pro messages but once we emerge we",
    "start": "500479",
    "end": "505639"
  },
  {
    "text": "also use a tool called protot tool which was open sourced by Uber which doing can change detection enforces some stylistic",
    "start": "505639",
    "end": "511839"
  },
  {
    "text": "rules is able to generate code for various languages so on the board here you can see that we have like email",
    "start": "511839",
    "end": "518039"
  },
  {
    "text": "message V1 this is one of the probu Kafka messages that we actually use here at CLA as you can see it's very readable",
    "start": "518039",
    "end": "523760"
  },
  {
    "text": "So Pro really is self-documenting as well which is makes it really nice to work",
    "start": "523760",
    "end": "529399"
  },
  {
    "text": "with we then took this solution one step",
    "start": "531040",
    "end": "535959"
  },
  {
    "text": "further um because even though we were using protuff though we felt like there was more we could do to make this even",
    "start": "536839",
    "end": "542240"
  },
  {
    "text": "easier for teams and there were still some issues we were seeing so in the example you can see on the board here",
    "start": "542240",
    "end": "548560"
  },
  {
    "text": "um uh teams could emit messages different messages to the same topic um and maybe the audit log consumer wasn't",
    "start": "548560",
    "end": "555000"
  },
  {
    "text": "expecting that and it wasn't able to process the firewall message because uh it wasn't in the format that",
    "start": "555000",
    "end": "561720"
  },
  {
    "text": "expected um there's also some things around configuration like configuring CFA consumers and producers isn't the",
    "start": "561720",
    "end": "568079"
  },
  {
    "text": "easiest thing to do like there's a lot of sort of intricacy that goes into making sure you've got the right settings for your",
    "start": "568079",
    "end": "573880"
  },
  {
    "text": "workload so because nearly every team at Cloud flare was using go and we were starting to get a pretty good",
    "start": "573880",
    "end": "579279"
  },
  {
    "text": "understanding about what good looked like we decided to build what we call the message bus client Library which",
    "start": "579279",
    "end": "584640"
  },
  {
    "text": "kind of baked in a bunch of best practices into it and allows teams to move much faster than they had been able to",
    "start": "584640",
    "end": "591680"
  },
  {
    "text": "previously one controversial decision we did make was to enforce one protu message type per topic to avoid exactly",
    "start": "593240",
    "end": "599760"
  },
  {
    "text": "this problem you can see here this is only configured client side and it's enforced by the client this was a really",
    "start": "599760",
    "end": "606120"
  },
  {
    "text": "good decision to enable easy adoption but it has led to numerous topics existing when you consider that for each",
    "start": "606120",
    "end": "612600"
  },
  {
    "text": "topic we create we had numerous partitions and replicate them with a replication factor of at least three",
    "start": "612600",
    "end": "617680"
  },
  {
    "text": "there's lots of potential to optimize for compute here so this works really well for us but it's not necessarily something I would advise every company",
    "start": "617680",
    "end": "625920"
  },
  {
    "text": "does so things looking pretty good um we have a bunch of tooling and",
    "start": "627760",
    "end": "633560"
  },
  {
    "text": "abstractions available over Kafka now which makes it pretty easy for teams to get started and we probably could have left things here and moved on but as we",
    "start": "633560",
    "end": "640600"
  },
  {
    "text": "spoke to more and more Engineers we discovered that there was some common use cases and passons emerging this",
    "start": "640600",
    "end": "646560"
  },
  {
    "text": "isn't a huge problem um but we did see an opportunity for our team to add more value and to make it even easier for",
    "start": "646560",
    "end": "652279"
  },
  {
    "text": "teams to follow best practices and um and do the right",
    "start": "652279",
    "end": "657440"
  },
  {
    "text": "thing so to do the so to fix this we came up with something that we call the connector framework uh the connector framework is",
    "start": "657440",
    "end": "664399"
  },
  {
    "text": "based on CFA connectors and it allows our Engineers to spin up services that can read from one system of record and push it to someone else somewhere else",
    "start": "664399",
    "end": "671519"
  },
  {
    "text": "such as cfer itself or even Cloud flows on Quicksilver which is an edge database that we wrote to make this as easy as",
    "start": "671519",
    "end": "678240"
  },
  {
    "text": "possible we use cooky cutter to template and it allows Engineers to enter just a few par parameters into a CLI and in",
    "start": "678240",
    "end": "684040"
  },
  {
    "text": "return they get ready to go service so you can see a rough example of how this might work here you have a a connector",
    "start": "684040",
    "end": "690839"
  },
  {
    "text": "um some sort of transformation and you have a consumer service but I have a more concrete example of something we've built in a couple of",
    "start": "690839",
    "end": "698560"
  },
  {
    "text": "slides so configuring the connector is really really simple um and we allow",
    "start": "699920",
    "end": "705560"
  },
  {
    "text": "this to happen with simply with environment variables you don't even need to make any code changes so you can see an example here",
    "start": "705560",
    "end": "711800"
  },
  {
    "text": "in which we have a reader which is Kafka and the writer is Quicksilver which is our Edge database then we have a couple of",
    "start": "711800",
    "end": "718240"
  },
  {
    "text": "transformations we're going to apply we're going to read from topic one and topic two and we're going to apply a function called PF Edge this is it this",
    "start": "718240",
    "end": "725560"
  },
  {
    "text": "is all the configuration you need and it comes with metrics alerts um and and everything you need to kind of get this right into",
    "start": "725560",
    "end": "732880"
  },
  {
    "text": "production this makes it really really easy for teams to start to do the right thing and if they want to they can",
    "start": "732880",
    "end": "738440"
  },
  {
    "text": "register custom Transformations which is the only pieces of code they would need to write here here's an example of how our team",
    "start": "738440",
    "end": "745440"
  },
  {
    "text": "has used connectors so we have we this service called communication preferences",
    "start": "745440",
    "end": "751760"
  },
  {
    "text": "service if you want to opt out of Marketing information in the cloud flare dashboard this is the service you would",
    "start": "751760",
    "end": "757040"
  },
  {
    "text": "be communicating with to do that it stores in its own database your communication preference upgrade but",
    "start": "757040",
    "end": "763639"
  },
  {
    "text": "then it also emits a message to CFA we then have three different uh connectors which are used to sync that",
    "start": "763639",
    "end": "770839"
  },
  {
    "text": "change in communication preference to three different Source systems so one is a transactional email service one is a",
    "start": "770839",
    "end": "777279"
  },
  {
    "text": "customer management system and one is the Market email system this mean this makes this an",
    "start": "777279",
    "end": "782959"
  },
  {
    "text": "eventually consistent system but for this particular workload this is acceptable and we can use some of the guarantees Kafka provides to make sure",
    "start": "782959",
    "end": "788839"
  },
  {
    "text": "that that happens so at this point in our story We",
    "start": "788839",
    "end": "796079"
  },
  {
    "text": "Built tons of abstractions over Kafka in an attempt to make it as easy as possible to deliver value this is",
    "start": "796079",
    "end": "801959"
  },
  {
    "text": "actually working really really well for us until it didn't as we enter the",
    "start": "801959",
    "end": "807000"
  },
  {
    "text": "pandemic the amount of internet use and cloudflow customers increased rapidly we saw a huge increase in throughput",
    "start": "807000",
    "end": "813160"
  },
  {
    "text": "through a lot of our systems and we started toidentify scalability issues in some of the abstractions we created I'm",
    "start": "813160",
    "end": "818920"
  },
  {
    "text": "going to hand over to Andrea now who's going to talk you through about some of the specific issues we faced in our tools that we've talked about here and",
    "start": "818920",
    "end": "824920"
  },
  {
    "text": "also explain the tools the steps we took to fix them and make sure that they were scalable going",
    "start": "824920",
    "end": "830759"
  },
  {
    "text": "forward thank you m thank you for everyone for tuning in today um as Matt mentioned we're going to approach a",
    "start": "830759",
    "end": "836959"
  },
  {
    "text": "bunch of issues that we see um we can call them War Stories and how we approach them and we fix them by hening",
    "start": "836959",
    "end": "844480"
  },
  {
    "text": "our cluster as well as our SDK to start with uh we can give an example for Audi logs so um if you're a c CL for customer",
    "start": "844480",
    "end": "852560"
  },
  {
    "text": "you might already know this but we uh and also audio logs and specifically our teams uh buil a system to manage them we",
    "start": "852560",
    "end": "859920"
  },
  {
    "text": "allow producer teams to produce these events and we listen for them and we just record them in our own database we",
    "start": "859920",
    "end": "865839"
  },
  {
    "text": "usually surface this information to our customers VI API and also with this new integration which is called lock push",
    "start": "865839",
    "end": "871720"
  },
  {
    "text": "which enables us to push this information into Data buckets such as R2 or S3 or anything as you",
    "start": "871720",
    "end": "878160"
  },
  {
    "text": "like just for context and a logs usually represents an event of a change over",
    "start": "878160",
    "end": "883600"
  },
  {
    "text": "certain resource in your system for example if someone goes and that it's a Zone on cloudfare or a website uh this",
    "start": "883600",
    "end": "891720"
  },
  {
    "text": "will um emit an event uh which will contain information such as the ID of the Zone the name the actors saw the",
    "start": "891720",
    "end": "899000"
  },
  {
    "text": "email of did this the IP what time this happened and so on and so forth so let's we have many customers we",
    "start": "899000",
    "end": "908040"
  },
  {
    "text": "as we mentioned we had like Spike also in uh traffic due to the pandemic so we started registering many more of logs",
    "start": "908040",
    "end": "915600"
  },
  {
    "text": "most of our customer care de play about the logs and so they started pull pulling our apis to get fresh data but",
    "start": "915600",
    "end": "922000"
  },
  {
    "text": "unfortunately it wasn't really scalable and that's why we decided to invest into this pipeline so we created a very tiny",
    "start": "922000",
    "end": "927440"
  },
  {
    "text": "service that uh just listens for these events transforms these events into the correct format to be pushed directly",
    "start": "927440",
    "end": "933680"
  },
  {
    "text": "into a bucket and this is great so we will avoid customer",
    "start": "933680",
    "end": "939120"
  },
  {
    "text": "polling unfortunately when we release this in production we have seen like massive issues because we started our",
    "start": "939120",
    "end": "945360"
  },
  {
    "text": "cing L and we were not really able to uh clear it up very fast we were breaching our slos so with L wi 10 the amount of",
    "start": "945360",
    "end": "953560"
  },
  {
    "text": "time that and the delay that there is between a message being produced on a partition until it's consumed and of",
    "start": "953560",
    "end": "959040"
  },
  {
    "text": "course we set also U the slas on this we were not really sure why this",
    "start": "959040",
    "end": "965000"
  },
  {
    "text": "was taking so long because we didn't have any instruments or any tooling at our disposal in baked in the SDK to",
    "start": "965000",
    "end": "970839"
  },
  {
    "text": "understand so we're not really sure if it was a matter of reading from Kafka plan this transformation or just even",
    "start": "970839",
    "end": "976519"
  },
  {
    "text": "saving this data to the database we decided to invest some time and enrich our SDK with basic Prometheus",
    "start": "976519",
    "end": "983440"
  },
  {
    "text": "metrics and specifically in this case we relied on histograms and histograms allows us to to measure how much the",
    "start": "983440",
    "end": "990120"
  },
  {
    "text": "whole flow for each message is taken as well as each different step is taken this helped us a lot already to",
    "start": "990120",
    "end": "997360"
  },
  {
    "text": "understand that some bits were slower than another one but there is some lack of correlation so we can't really tell",
    "start": "997360",
    "end": "1003360"
  },
  {
    "text": "if a determined bit is taking longer um for each like for a certain message compared also to the other bit for",
    "start": "1003360",
    "end": "1009920"
  },
  {
    "text": "example if consuming from Kafka is taking long one time we can't really relate it with taking long for L pushing",
    "start": "1009920",
    "end": "1015519"
  },
  {
    "text": "on the same message so at this point we decided to invest into something else and we",
    "start": "1015519",
    "end": "1020759"
  },
  {
    "text": "decided to explore open Telemetry uh open Telemetry is a collection of sdks and apis that allows to collect metrics",
    "start": "1020759",
    "end": "1027480"
  },
  {
    "text": "in a standardized ways from different uh Services even in written in different programming languages is pretty great",
    "start": "1027480",
    "end": "1034079"
  },
  {
    "text": "and we specifically decided to invest our efforts into uh open tracing though",
    "start": "1034079",
    "end": "1040360"
  },
  {
    "text": "this wasn't really easy um it's there are not many good integration for open",
    "start": "1040360",
    "end": "1045400"
  },
  {
    "text": "tracing on Kafka specifically and also it's very easy to get this wrong and not to get your traces being propagated",
    "start": "1045400",
    "end": "1051120"
  },
  {
    "text": "across different services in this instance so course it was pretty tricky to do this while we had a production",
    "start": "1051120",
    "end": "1056720"
  },
  {
    "text": "incident but just to give you an overview we were able to wrap our SDK and en reach it with this uh open",
    "start": "1056720",
    "end": "1063280"
  },
  {
    "text": "tracing and with that we were able to have spans uh which track the total",
    "start": "1063280",
    "end": "1068480"
  },
  {
    "text": "duration of this workflow in this example you can see 7.91 seconds and then correlate it actually with each",
    "start": "1068480",
    "end": "1074600"
  },
  {
    "text": "different B that composes it which is called span and here we can see that the",
    "start": "1074600",
    "end": "1080039"
  },
  {
    "text": "longest part was definitely pushing to the data bucket but as well as reading from Kafka they were both slow in this",
    "start": "1080039",
    "end": "1085520"
  },
  {
    "text": "case we were just able to uh decide on prioritizing what needed to be fixed and",
    "start": "1085520",
    "end": "1091159"
  },
  {
    "text": "we actually were able to do so and actually be able to clear the L and up",
    "start": "1091159",
    "end": "1096200"
  },
  {
    "text": "to today we still do this and just for context here we see an average of",
    "start": "1096200",
    "end": "1101280"
  },
  {
    "text": "250 uh messages per second so which is great and sometimes we have spikes so even 500 messages per second",
    "start": "1101280",
    "end": "1110320"
  },
  {
    "text": "this led to something interesting because we started to add metrics into our SDK and of course we were actually",
    "start": "1111320",
    "end": "1118320"
  },
  {
    "text": "in a good spot to have a generic overview on the health of the cluster as well as the health of the services that leverage our SDK and cluster so we were",
    "start": "1118320",
    "end": "1125080"
  },
  {
    "text": "able to see like how many messages are being produced how many messages are being consumed per topic uh and we",
    "start": "1125080",
    "end": "1131159"
  },
  {
    "text": "started also to set up alerts on those even standardized ones such as standardized L um alerts for uh p 50 P90",
    "start": "1131159",
    "end": "1139240"
  },
  {
    "text": "and so on this is great but of course we have a lot of metrics uh we are just trying and therefore we actually got",
    "start": "1139240",
    "end": "1145559"
  },
  {
    "text": "into this issue the following issue which is very nois on call um we started having a lot of alerts to do with",
    "start": "1145559",
    "end": "1152120"
  },
  {
    "text": "unhealthy applications so they were not able to actually reach the broker we started to see many more lag alerts just",
    "start": "1152120",
    "end": "1158640"
  },
  {
    "text": "because maybe the lag was already there but now we were actually aware of it or just issues to do with the health of the",
    "start": "1158640",
    "end": "1164400"
  },
  {
    "text": "kka cluster we have a very basic alerting pipeline so we registered these metrics",
    "start": "1164400",
    "end": "1170440"
  },
  {
    "text": "on Prometheus we have alert manager deployed to just watch this continuously and just page us on pager Duty pretty",
    "start": "1170440",
    "end": "1176880"
  },
  {
    "text": "much unfortunately the usual solution to these issues with the uh Services they",
    "start": "1176880",
    "end": "1181960"
  },
  {
    "text": "do with CFA was to literally restart the service because most of the time there was a deteriorated condition for the",
    "start": "1181960",
    "end": "1187480"
  },
  {
    "text": "network U and this was leading us to just like get page even during the night and having to restart manually uh these",
    "start": "1187480",
    "end": "1193400"
  },
  {
    "text": "services or sometimes um we will have to just like scaling up scale scale um scale down which is not really ideal so",
    "start": "1193400",
    "end": "1201159"
  },
  {
    "text": "we just started to think like well how can we leverage kubernetes and what we know to actually keep things running",
    "start": "1201159",
    "end": "1206760"
  },
  {
    "text": "smoothly and we decided to invest into health checks and this concept apply even to other type of orchestrators or",
    "start": "1206760",
    "end": "1214039"
  },
  {
    "text": "wherever as you deploy you might deploy your application so the implementation of Hell checks which tell essentially if",
    "start": "1214039",
    "end": "1219840"
  },
  {
    "text": "your application is uh ready to operate or not in kubernetes we have three types of Els so we have the livess ones the",
    "start": "1219840",
    "end": "1227400"
  },
  {
    "text": "Readiness ones and the startup Pro ones so lightess TS kubernetes whether or not your service is ready to run actually",
    "start": "1227400",
    "end": "1234640"
  },
  {
    "text": "and the Readiness prop T kubernetes whether your service is ready or not to receive HTTP traffic and the start probe",
    "start": "1234640",
    "end": "1240240"
  },
  {
    "text": "you can imagine it as a glorified liveness probe for very slow starting",
    "start": "1240240",
    "end": "1245480"
  },
  {
    "text": "services in brief it works like this kubernetes at recurring intervals pins",
    "start": "1245480",
    "end": "1250919"
  },
  {
    "text": "your service at aain Point you specify for example here uncore live Z and your service has to understand whether it's",
    "start": "1250919",
    "end": "1257080"
  },
  {
    "text": "healthy or not and it has to reply with a successful status code or a successful code it depends on how you implement",
    "start": "1257080",
    "end": "1262240"
  },
  {
    "text": "this or an unsuccessful one if he successful kubernetes says well okay your service is fine otherwise it's not",
    "start": "1262240",
    "end": "1268320"
  },
  {
    "text": "and there are some uh policies that tell kubernetes how often your service should",
    "start": "1268320",
    "end": "1273840"
  },
  {
    "text": "fail to be restarted and so on and so forth just to give you a rough idea for kfka specifically it doesn't make much",
    "start": "1273840",
    "end": "1280760"
  },
  {
    "text": "sense to implement the Readiness probe because it we don't really usually expose an HTTP server there we just tend",
    "start": "1280760",
    "end": "1286799"
  },
  {
    "text": "to keep things simple and just Implement a Kafka consumer with his business logic nothing else we don't expose anything",
    "start": "1286799",
    "end": "1292279"
  },
  {
    "text": "else so we as oursel well if we usually have these issues how we can actually detect them very simply well when we get",
    "start": "1292279",
    "end": "1299279"
  },
  {
    "text": "the request for um the less check we can just go and try to perform a very basic operation with the broker for example",
    "start": "1299279",
    "end": "1305640"
  },
  {
    "text": "list the topics when we get the response if we can actually get it and it's erroring it probably means that there is",
    "start": "1305640",
    "end": "1311440"
  },
  {
    "text": "this uh issue that I talked about earlier and so we can just fail the check otherwise we can just pass it and",
    "start": "1311440",
    "end": "1317200"
  },
  {
    "text": "this is a really great so in some instances this actually uh improve things a lot but unfortunately there are",
    "start": "1317200",
    "end": "1322640"
  },
  {
    "text": "cases where our application is still healthy still able to talk with the broker but in case it's a producer or a",
    "start": "1322640",
    "end": "1328200"
  },
  {
    "text": "consumer is stuck and it can't produce or consume messages which is very unfortunate so we have this situation",
    "start": "1328200",
    "end": "1333360"
  },
  {
    "text": "where the application says well I'm healthy but actually can't really operate and um just deal with the",
    "start": "1333360",
    "end": "1339760"
  },
  {
    "text": "traffic let's say so we decided to invest some time into implementing a bit smarter he checks for the consumers",
    "start": "1339760",
    "end": "1345919"
  },
  {
    "text": "because for the producers we just handle it different by restarting application where receive a certain error from the",
    "start": "1345919",
    "end": "1351960"
  },
  {
    "text": "broker in regards to Consumers it's important to keep in mind two concepts uh for the current offset and the",
    "start": "1351960",
    "end": "1357880"
  },
  {
    "text": "committed offset so the current offset of a partition is the last available offset on the partition this means that",
    "start": "1357880",
    "end": "1364679"
  },
  {
    "text": "if we have 10 messages on the partition the current offset is number nine which is Lally the last one and the committed",
    "start": "1364679",
    "end": "1371320"
  },
  {
    "text": "offset instead is the last committed offset by the certain consumer for the",
    "start": "1371320",
    "end": "1376520"
  },
  {
    "text": "partition so if we consume successfully uh nine messages then the last committed officer would be the number eight so by",
    "start": "1376520",
    "end": "1383760"
  },
  {
    "text": "having this concept in mind when every time we receive an L check what we do we retrieve these two offsets if for some",
    "start": "1383760",
    "end": "1389000"
  },
  {
    "text": "reason we can't do it there are probably some underlying issues and therefore we report unhealthy if we can do so we",
    "start": "1389000",
    "end": "1395279"
  },
  {
    "text": "compare the last commited offset with the current offset if they are the same it means that no new messages have been",
    "start": "1395279",
    "end": "1401320"
  },
  {
    "text": "really appended to the partition and therefore we can consider ourselves fine otherwise we can just check the very",
    "start": "1401320",
    "end": "1408200"
  },
  {
    "text": "last committed offset compared to what we had before and if this isn't change it means that probably our application",
    "start": "1408200",
    "end": "1414400"
  },
  {
    "text": "is stuck and it needs to probably be restarted uh it might be because of different reason might be for rebalances",
    "start": "1414400",
    "end": "1420480"
  },
  {
    "text": "or other issues so it's just better like this this led to massive improvements for us and we started to have like much",
    "start": "1420480",
    "end": "1427039"
  },
  {
    "text": "better on call life as well as also making our customers happy but of course now we have like a way of keeping our",
    "start": "1427039",
    "end": "1433840"
  },
  {
    "text": "applications healthy as well as like understanding what are the lower bits but we are not accounting for another",
    "start": "1433840",
    "end": "1438919"
  },
  {
    "text": "bit that we started to experience during the pandemic which is load so we have another story for this cfer we also",
    "start": "1438919",
    "end": "1445200"
  },
  {
    "text": "managed the email system so uh it's a very simple system where we actually",
    "start": "1445200",
    "end": "1450559"
  },
  {
    "text": "allow teams to produce events on capka these events contain a template which might be for example your under attack",
    "start": "1450559",
    "end": "1457520"
  },
  {
    "text": "template for your email uh which contains information about your website under attack identity of the tack and so",
    "start": "1457520",
    "end": "1462799"
  },
  {
    "text": "on and so forth and this comes with some metadata usually we listen for the this event and then we retrieve the template",
    "start": "1462799",
    "end": "1470480"
  },
  {
    "text": "from for that specific email from our template registry we enr it we template it and we actually dispatch it to the uh",
    "start": "1470480",
    "end": "1476279"
  },
  {
    "text": "our customers uh and that's it this is fine until actually it wasn't because",
    "start": "1476279",
    "end": "1482120"
  },
  {
    "text": "often uh we've seen spikes into production rate even 40 requests per second which is not even amazing to be",
    "start": "1482120",
    "end": "1488240"
  },
  {
    "text": "honest but we were like making very expensive operations here and unfortunately we were not really able to",
    "start": "1488240",
    "end": "1493760"
  },
  {
    "text": "cope up with the consumption rate always lagging behind as you can see from here here and we had multiple cases where",
    "start": "1493760",
    "end": "1499720"
  },
  {
    "text": "really people were not really happy with us on social media or even on Hacker News like Jimmy here not so happy about",
    "start": "1499720",
    "end": "1505039"
  },
  {
    "text": "it for sure and so we really needed to look into this because we also same send like really important OTP email such as",
    "start": "1505039",
    "end": "1512520"
  },
  {
    "text": "ones that expire after 10 minutes so we don't really want to brid uh those slos so we started exploring a bunch of",
    "start": "1512520",
    "end": "1519600"
  },
  {
    "text": "solutions for this and the first one that we thought was like to just like just scale the number of partition and scale the number of consumers and see",
    "start": "1519600",
    "end": "1525960"
  },
  {
    "text": "what we can do par we did see many improvements with that we actually decided to just take a step back and see",
    "start": "1525960",
    "end": "1532679"
  },
  {
    "text": "look at a easier concept which is actually B consuming so it's literally like consuming and messages at the time",
    "start": "1532679",
    "end": "1539399"
  },
  {
    "text": "applying a transformation on and messages at the time and dispatching them and messages at the time and this can be applied to many other workflows",
    "start": "1539399",
    "end": "1545399"
  },
  {
    "text": "because we implemented it somewhere else than to this we were actually able to uh",
    "start": "1545399",
    "end": "1550760"
  },
  {
    "text": "C up very very well with the high production rates and actually there was",
    "start": "1550760",
    "end": "1555880"
  },
  {
    "text": "a case where we were able to uh chew through a l of 10,000 messages really in",
    "start": "1555880",
    "end": "1561200"
  },
  {
    "text": "a matter of seconds making everyone happy even our favorite Jimmy",
    "start": "1561200",
    "end": "1567440"
  },
  {
    "text": "here of course now we also are able to do so and people are really liking our",
    "start": "1567480",
    "end": "1573360"
  },
  {
    "text": "SDK and we start to see many people using it and many problems with it so bugs or just people not being really",
    "start": "1573360",
    "end": "1580000"
  },
  {
    "text": "sure on how to implement checks for example on how to interpret sentain errors how to use the SDK capabilities",
    "start": "1580000",
    "end": "1586559"
  },
  {
    "text": "and so and so on the solution to this is quite um quite simple there is actually a human side to",
    "start": "1586559",
    "end": "1593880"
  },
  {
    "text": "all of this uh which is not surprising and consist into chat operations and documentation so we decided to set up uh",
    "start": "1593880",
    "end": "1601600"
  },
  {
    "text": "channels on our uh Google Chat to allow people to come and ask us questions about this and we had one person on call",
    "start": "1601600",
    "end": "1608399"
  },
  {
    "text": "to deal with these questions and go and answer to these questions as fast as they can and also trying to spend time",
    "start": "1608399",
    "end": "1614720"
  },
  {
    "text": "documenting all the findings and put putting them uh into uh our Wiki as well as like also uh getting",
    "start": "1614720",
    "end": "1622960"
  },
  {
    "text": "the answers and putting them in the in the wiki and this help us a lot of",
    "start": "1622960",
    "end": "1628480"
  },
  {
    "text": "course and just to to conclude we can just see some key lessons from this uh",
    "start": "1629039",
    "end": "1634279"
  },
  {
    "text": "all the story the first one is about configurability versus Simplicity this is like a very tricky uh very tricky um",
    "start": "1634279",
    "end": "1642600"
  },
  {
    "text": "comparison to do and it depends from organization to organization because of course like even for us before we were",
    "start": "1642600",
    "end": "1649120"
  },
  {
    "text": "more on a configurable setup where each team or even different people have different they they can really",
    "start": "1649120",
    "end": "1654559"
  },
  {
    "text": "experiment and do different changes very fast for example add in tracing or add in metrics and so on and so forth but",
    "start": "1654559",
    "end": "1660360"
  },
  {
    "text": "instead having Simplicity here enables you to actually standardize things so in the case of U tracing for example having",
    "start": "1660360",
    "end": "1667880"
  },
  {
    "text": "this like standardizing the library allows us to actually get spans and traces working across even different",
    "start": "1667880",
    "end": "1672919"
  },
  {
    "text": "pipelines which is great um and so what we really do in our cases like keep it",
    "start": "1672919",
    "end": "1678720"
  },
  {
    "text": "simple have a very simple API for our SDK we don't expose much functionality and we tend to add things on top only",
    "start": "1678720",
    "end": "1684559"
  },
  {
    "text": "when it's actually needed even though we might have to scratch our head during incidents the second one is about",
    "start": "1684559",
    "end": "1690799"
  },
  {
    "text": "visibility try to think about adding metrics especially to your sdks uh as soon as you can this will give you uh",
    "start": "1690799",
    "end": "1697559"
  },
  {
    "text": "you make you make you accelerate and take better decisions especially when incidents are there and you'll be able",
    "start": "1697559",
    "end": "1703200"
  },
  {
    "text": "to just understand like how your system is behaving and take the next steps to keep it up and running all the",
    "start": "1703200",
    "end": "1709640"
  },
  {
    "text": "time other one is about contracts here we took like a very um very interesting",
    "start": "1709640",
    "end": "1715159"
  },
  {
    "text": "choice which is like to force people to have one contract very strong contact very strict uh on a certain topic but",
    "start": "1715159",
    "end": "1721760"
  },
  {
    "text": "this gives us very good visibility on actually what is going on inside the topic who's writing to it who's reading",
    "start": "1721760",
    "end": "1727200"
  },
  {
    "text": "from it what's actually there what's the version so you might want to consider this if you can afford of course the",
    "start": "1727200",
    "end": "1732519"
  },
  {
    "text": "scaling problem for this and the last one is about documentation um this is very very",
    "start": "1732519",
    "end": "1738200"
  },
  {
    "text": "obvious but of course like make sure to also document the good work that you do so that you don't have to spend too much",
    "start": "1738200",
    "end": "1743399"
  },
  {
    "text": "time uh replying to people or happy and thebug their production issues I thank you very much for listening to me and",
    "start": "1743399",
    "end": "1749799"
  },
  {
    "text": "I'll hand it over to Matt to tell you what about what is coming soon thanks Andrea so we're just going",
    "start": "1749799",
    "end": "1756279"
  },
  {
    "text": "to finish off this presentation by just talking through the next iterations of all the things that we've talked about",
    "start": "1756279",
    "end": "1761760"
  },
  {
    "text": "here today so we're in a pretty good spot now we've got highly scalable uh libraries and and and configuration",
    "start": "1761760",
    "end": "1768120"
  },
  {
    "text": "available to our teams but we we want to do that a little bit more um so one thing that we've been working on at the",
    "start": "1768120",
    "end": "1773480"
  },
  {
    "text": "moment is a tool called guia guia was the mother of creation and",
    "start": "1773480",
    "end": "1778960"
  },
  {
    "text": "that's exactly what we want to build like we have um a very simple UI where you enter a few details like project",
    "start": "1778960",
    "end": "1784480"
  },
  {
    "text": "name name space maybe the topic you want to consume from or produced to and we're going to do all the other things um that",
    "start": "1784480",
    "end": "1791960"
  },
  {
    "text": "are necessary to get service into production right that aren't code we are going to do we are going to bootstrap the code too but there may be other",
    "start": "1791960",
    "end": "1797399"
  },
  {
    "text": "tickets we need to create we need to make kubernetes configuration we need to generate you a cicd pipeline we want to",
    "start": "1797399",
    "end": "1802840"
  },
  {
    "text": "generate you a certificate for connecting to CFA we're going to wait for all these things to be complete and",
    "start": "1802840",
    "end": "1808240"
  },
  {
    "text": "just send you some um instructions about what you need to do next this is really powerful because it means that Engineers",
    "start": "1808240",
    "end": "1815799"
  },
  {
    "text": "who are new to Claver or perhaps people who haven't made a service in a while can just come along and guarantee",
    "start": "1815799",
    "end": "1821320"
  },
  {
    "text": "they're going to get the best practices when they're starting from scratch rather than cloning an old repole where they might get out date configuration",
    "start": "1821320",
    "end": "1827799"
  },
  {
    "text": "also for teams at Clare that maybe don't uh always use that language so for",
    "start": "1827799",
    "end": "1833039"
  },
  {
    "text": "example I spend a lot of time writing go but not a lot of time writing typescript so let's say I need to generate a cloudflow worker I don't know too much",
    "start": "1833039",
    "end": "1839440"
  },
  {
    "text": "about that space so being able to go to a tool like guia and generate a cloud FL worker that's production ready and got",
    "start": "1839440",
    "end": "1845880"
  },
  {
    "text": "all the best practices from all the other Cloud FL teams that use cloud flow workers is a really powerful Paradigm",
    "start": "1845880",
    "end": "1851039"
  },
  {
    "text": "and this is something that we've currently built it's in uh like an open Beta with our teams but we're going to continue to invest in this product for",
    "start": "1851039",
    "end": "1858679"
  },
  {
    "text": "sure the next thing is you probably notice at the very top of this talk I spent a lot of time talking about how we",
    "start": "1858679",
    "end": "1864120"
  },
  {
    "text": "don't constrain engineering teams to use a specific language we don't on purpose",
    "start": "1864120",
    "end": "1869880"
  },
  {
    "text": "but we have kind of done that by accident in our team we as you've seen throughout this talk we've spent a lot",
    "start": "1869880",
    "end": "1875120"
  },
  {
    "text": "of time talking about how we've made it very easy for teams that use go to get all the best practices around using",
    "start": "1875120",
    "end": "1880760"
  },
  {
    "text": "Kafka but we haven't really done that for other languages um so say a team",
    "start": "1880760",
    "end": "1885960"
  },
  {
    "text": "mainly use Python but wanted to use CF you wanted to produce to Kafka it's probably in their best interest to write",
    "start": "1885960",
    "end": "1891440"
  },
  {
    "text": "it and go because they're going to get all of our support um which we don't want to be the case so something else we",
    "start": "1891440",
    "end": "1896639"
  },
  {
    "text": "would like to be able to do as well is generate client code for any language basically um with these so you know",
    "start": "1896639",
    "end": "1903840"
  },
  {
    "text": "Python and Russ are two very popular languages here at CLA we'd love to be able to have like a base protu contract",
    "start": "1903840",
    "end": "1909000"
  },
  {
    "text": "and generate all of the client configuration from that so that's something I imagine we're going to be doing in the not so distant",
    "start": "1909000",
    "end": "1915799"
  },
  {
    "text": "future and that's all we have for you here today so thank you so much for listening to our talk uh I'm Matt and",
    "start": "1915840",
    "end": "1921200"
  },
  {
    "text": "this has been Andrea our social media information is here and if you've got any questions or comments in our talk I just want to say hey we' both love to",
    "start": "1921200",
    "end": "1927480"
  },
  {
    "text": "hear from you thanks again for",
    "start": "1927480",
    "end": "1931158"
  },
  {
    "text": "[Music]",
    "start": "1934110",
    "end": "1939569"
  },
  {
    "text": "listening",
    "start": "1940720",
    "end": "1943720"
  }
]