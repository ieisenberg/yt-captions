[
  {
    "text": "[Music]",
    "start": "80",
    "end": "25279"
  },
  {
    "text": "all right well thank you very much for having me back um I have uh 50 to 60 minutes of things that I want to share",
    "start": "25279",
    "end": "31199"
  },
  {
    "text": "with you and this is slightly different format um than some of my typical presentations because it's it's very",
    "start": "31199",
    "end": "38000"
  },
  {
    "text": "command line driven but what I want to show you is actually kind of an abstract concept so I have a real dissonance",
    "start": "38000",
    "end": "44520"
  },
  {
    "text": "that's playing here and uh the reason that I want to bring this to the Java users group there's actually little in",
    "start": "44520",
    "end": "50039"
  },
  {
    "text": "terms of java syntax is that the git tooling has become even in the last couple of months ever ever ever more",
    "start": "50039",
    "end": "57160"
  },
  {
    "text": "important to to Java people it is in fact we ran some statistics the other day my colleagues are with me here from",
    "start": "57160",
    "end": "62239"
  },
  {
    "text": "GitHub we read some stats the other day and Java is just off the charts in all of our repos we ran some sitewide",
    "start": "62239",
    "end": "67960"
  },
  {
    "text": "statistics and the other piece that goes along with this is Eclipse is now 60% moved over as a foundation over to get",
    "start": "67960",
    "end": "74600"
  },
  {
    "text": "as a repository so in fact this tool is everywhere in the Java ecosystem what",
    "start": "74600",
    "end": "80520"
  },
  {
    "text": "I'd like to do is actually take an opportunity to kind of step back to computer science kind of all the way",
    "start": "80520",
    "end": "86320"
  },
  {
    "text": "back to dare I even say your University or kind of deep technical level training and tell you a little bit about how this",
    "start": "86320",
    "end": "92200"
  },
  {
    "text": "system is constructed so as to make the day-to-day usage far less intimidating I",
    "start": "92200",
    "end": "97520"
  },
  {
    "text": "have very little that I want to say about myself I like to keep this as lowkey as possible I'm Matthew McCulla I work for GitHub which I certainly",
    "start": "97520",
    "end": "104079"
  },
  {
    "text": "believe is the best job on the planet and the thing that I am here to talk to you about involves both the GitHub",
    "start": "104079",
    "end": "110159"
  },
  {
    "text": "system but more this evening focused on the git tooling when you bring get into",
    "start": "110159",
    "end": "115479"
  },
  {
    "text": "a into an organization you'll often bring up the readme at some point at which point if it's not utterly rejected",
    "start": "115479",
    "end": "121880"
  },
  {
    "text": "by the mere fact that someone would put this kind of thing into the readme for a product you then win because you get to",
    "start": "121880",
    "end": "128239"
  },
  {
    "text": "use the best version control system that I've ever used in my career I've only worked for GitHub here in this calendar",
    "start": "128239",
    "end": "135000"
  },
  {
    "text": "year but yet I've taught G for five years and for much of my 15 years of doing Java software development that is",
    "start": "135000",
    "end": "141239"
  },
  {
    "text": "who I am at the core I've really struggled with Version Control because it's been one of those things that's",
    "start": "141239",
    "end": "146840"
  },
  {
    "text": "supposed to enable you to do more stuff but it's often been the thing that's held us back that changed when I started",
    "start": "146840",
    "end": "153120"
  },
  {
    "text": "to use git and one of the things that it enabled is a massive amount of collaboration this is a graph that I",
    "start": "153120",
    "end": "160200"
  },
  {
    "text": "actually don't believe has been shown publicly before this is a contribution graph from last week and this is",
    "start": "160200",
    "end": "166239"
  },
  {
    "text": "github.com being built and these are the simultaneous actions of the people on our team this graph has been partly",
    "start": "166239",
    "end": "173640"
  },
  {
    "text": "public for a week or two now and this is the number of deploys and commits that we do and you say what does this have to",
    "start": "173640",
    "end": "180120"
  },
  {
    "text": "do with the technology that you're actually showing us but this is really the product of what using git gives you",
    "start": "180120",
    "end": "187200"
  },
  {
    "text": "collaboration ease of deployment all these flexible build and kind of work models but I want to go to the opposite",
    "start": "187200",
    "end": "194080"
  },
  {
    "text": "end of the spectrum because it's rare that you actually get the opportunity to do so we often treat programming as this",
    "start": "194080",
    "end": "200360"
  },
  {
    "text": "ultimately simplistic kind of activity that simply is just sitting in front and making sure you type the right sequence",
    "start": "200360",
    "end": "206480"
  },
  {
    "text": "of characters but there's an awful lot of math and science to this and that's the hat that begins right now so here's",
    "start": "206480",
    "end": "214799"
  },
  {
    "text": "the beginning of all of this we use a centralized version control system and in that we get the Simplicity of a",
    "start": "214799",
    "end": "221000"
  },
  {
    "text": "database giving us a monotonically increasing revision number R1 2 3 4 You may have even heard me use that line",
    "start": "221000",
    "end": "227480"
  },
  {
    "text": "before but when we switch to get we use a hash of the content itself I often say",
    "start": "227480",
    "end": "234000"
  },
  {
    "text": "to people who are new to this domain that it's an easy way to think about it is that it's a fingerprint it's an identifier for the content inside the",
    "start": "234000",
    "end": "241120"
  },
  {
    "text": "file inside the folders inside the commit and also for tags four primary",
    "start": "241120",
    "end": "247840"
  },
  {
    "text": "things that are hashed here now these 40 hex characters are on the surface if you",
    "start": "247840",
    "end": "252959"
  },
  {
    "text": "were to just treat them as this thing that you have to refer to in reference",
    "start": "252959",
    "end": "258359"
  },
  {
    "text": "terrible horrible to actually cope with if you were talking to colleagues and trying to use this as the means of how",
    "start": "258359",
    "end": "265160"
  },
  {
    "text": "are you coming on 9 a b223 it's practical to say the least now",
    "start": "265160",
    "end": "272039"
  },
  {
    "text": "what they represent is extremely useful and what I need to give you is a bridge between this unwieldy number space and",
    "start": "272039",
    "end": "279960"
  },
  {
    "text": "something that's manageable to hand from person to person now this digest on the content is globally unique for all",
    "start": "279960",
    "end": "287440"
  },
  {
    "text": "intents and purposes physicists would even agree that 2 to the 160th power which is our number space for this is a",
    "start": "287440",
    "end": "294440"
  },
  {
    "text": "globally unique identifier so we'll treat it as such for the rest of the talk now you see that thing and you can",
    "start": "294440",
    "end": "300960"
  },
  {
    "text": "imagine with me teaching introductory classes to get that after you show this slide half the class leaves and the ones",
    "start": "300960",
    "end": "307400"
  },
  {
    "text": "who stay cannot believe that this is the new way that we identify individual",
    "start": "307400",
    "end": "312800"
  },
  {
    "text": "commits neither can I neither could I until I saw the science behind it we are",
    "start": "312800",
    "end": "319319"
  },
  {
    "text": "going to create a git repository without ever using get commands and I believe",
    "start": "319319",
    "end": "326120"
  },
  {
    "text": "this will give you a newfound understanding for the system we are going to head over to our terminal",
    "start": "326120",
    "end": "331880"
  },
  {
    "text": "window where we're going to do our bit of coding tonight and I'm going to get in it project one now you say wait a",
    "start": "331880",
    "end": "338639"
  },
  {
    "text": "minute you claimed you were not going to use git to actually initialize this but hold on I'll be truthful about this I'm",
    "start": "338639",
    "end": "345360"
  },
  {
    "text": "going to show you what's in this doget directory so that this little setup of a set of folders and directories will have",
    "start": "345360",
    "end": "351880"
  },
  {
    "text": "no real impact on what we create for our commits and our content the piece that I'm most interested in this is the doget",
    "start": "351880",
    "end": "358759"
  },
  {
    "text": "directory that I'm showing showing you the thing that contains the version controlled objects that we're going to",
    "start": "358759",
    "end": "364240"
  },
  {
    "text": "write at the moment it has this objects directory that is empty info and pack",
    "start": "364240",
    "end": "370120"
  },
  {
    "text": "two small file two small directories beneath there but no files whatsoever",
    "start": "370120",
    "end": "375360"
  },
  {
    "text": "and I'm going to continue to repeat to run this tree command and we're going to look what appears in that objects",
    "start": "375360",
    "end": "380520"
  },
  {
    "text": "directory and make sense of it so our next step is where I actually get to aew",
    "start": "380520",
    "end": "386520"
  },
  {
    "text": "using anything about get it all we are going to write some content to a file so",
    "start": "386520",
    "end": "392440"
  },
  {
    "text": "I'm going to do just a simple Echo and we're going to wrap it in quotes and we're going to very carefully make sure",
    "start": "392440",
    "end": "397479"
  },
  {
    "text": "that our capitalization and everything is is just as it should be and we're going to write it to a specially named",
    "start": "397479",
    "end": "403199"
  },
  {
    "text": "file over here that we call hello. text now having written that file to disk git",
    "start": "403199",
    "end": "408800"
  },
  {
    "text": "does not yet know anything about it and what I need to do is simply use the get",
    "start": "408800",
    "end": "414240"
  },
  {
    "text": "ad command which causes that to be digested we're taking kind of a layered approach here using get a little bit and",
    "start": "414240",
    "end": "420759"
  },
  {
    "text": "soon enough not using get at all to add that to Version Control but what does",
    "start": "420759",
    "end": "426000"
  },
  {
    "text": "that really mean that means that if I show you the doget directory once again that we have taken the content of that",
    "start": "426000",
    "end": "433120"
  },
  {
    "text": "file and run it through the Sha one digest function and determined that the individual fingerprint for that file's",
    "start": "433120",
    "end": "440039"
  },
  {
    "text": "content is 557 db03 de",
    "start": "440039",
    "end": "445360"
  },
  {
    "text": "997 okay all right what is this folder what does this thing actually repres represent over here what's written out",
    "start": "445360",
    "end": "451000"
  },
  {
    "text": "to the directory well I can show you I can list that file that's now preserved",
    "start": "451000",
    "end": "457479"
  },
  {
    "text": "but I can also manually recreate the same set of structure now I'm going to",
    "start": "457479",
    "end": "462759"
  },
  {
    "text": "go one more level further with a get commit so we'll have two more objects created in this directory that one",
    "start": "462759",
    "end": "469000"
  },
  {
    "text": "represents the files content next we need to represent the directory and then",
    "start": "469000",
    "end": "474919"
  },
  {
    "text": "also the commit the action the transaction the wrapper the shell that sits around side the folders and the",
    "start": "474919",
    "end": "481800"
  },
  {
    "text": "files beneath it we're going to supply a commit message over here and we're going to carefully type it as first hello",
    "start": "481800",
    "end": "488919"
  },
  {
    "text": "exactly like so and this commit that we've now made has saved a couple more",
    "start": "488919",
    "end": "493960"
  },
  {
    "text": "files that you'll see with the tree. directory we now have three of them one",
    "start": "493960",
    "end": "499599"
  },
  {
    "text": "for the file one for the folder and one for the commit that represents the transaction that encompasses both of",
    "start": "499599",
    "end": "506520"
  },
  {
    "text": "those previous two steps now we've written this to dis and the next step",
    "start": "506520",
    "end": "511800"
  },
  {
    "text": "that I think is a lot of fun to show off is to actually take and run the contents",
    "start": "511800",
    "end": "517959"
  },
  {
    "text": "of a of a little string over here a specially formatted string over through",
    "start": "517959",
    "end": "523039"
  },
  {
    "text": "a command line tool that produces that same hash code now on this line of code",
    "start": "523039",
    "end": "528320"
  },
  {
    "text": "I'm not running a git function anymore and yet if you do a little bit of comparison over here for just a second",
    "start": "528320",
    "end": "535320"
  },
  {
    "text": "and look at the content I see 7f and I see 04 or Echo Delta Charlie so on I see",
    "start": "535320",
    "end": "542480"
  },
  {
    "text": "the same kind of identifier that I saw when we actually wrote this out to disk",
    "start": "542480",
    "end": "547560"
  },
  {
    "text": "now this print this print F that we just did here this blob this 12-digit hello world with a a character at the very end",
    "start": "547560",
    "end": "555560"
  },
  {
    "text": "is actually giving us a few bit of few bits of information that are also in those encapsulated pieces in the objects",
    "start": "555560",
    "end": "562000"
  },
  {
    "text": "directory this is the type of thing that was written to disk a blob means a singular file git doesn't actually have",
    "start": "562000",
    "end": "569440"
  },
  {
    "text": "a mode for binary versus text everything it writes is simply just a blob the next",
    "start": "569440",
    "end": "575720"
  },
  {
    "text": "is the number of bytes and you say well we could read that by actually looking at the contents of the file but it's an",
    "start": "575720",
    "end": "581079"
  },
  {
    "text": "optimization that it actually stores the length at the time that it writes it it's kind of a cheat a shortcut if you",
    "start": "581079",
    "end": "586120"
  },
  {
    "text": "will and then we actually have our our null bite over here our actual characters and a null Terminator on the",
    "start": "586120",
    "end": "592279"
  },
  {
    "text": "same and running it through this function running it through this digest over here has provided us a means of",
    "start": "592279",
    "end": "598360"
  },
  {
    "text": "without git calculating sha one hash codes now given that we've run that through we have a question of matching",
    "start": "598360",
    "end": "605720"
  },
  {
    "text": "that up with the exact content the hello world and the file and directory structure that we had created before",
    "start": "605720",
    "end": "612640"
  },
  {
    "text": "well I'll do this I'm going to actually route some content in from standard in",
    "start": "612640",
    "end": "618560"
  },
  {
    "text": "kind of cheating halfway between this git lless and the git form that I used",
    "start": "618560",
    "end": "623640"
  },
  {
    "text": "from before I'm actually just going to take an echo statement in this case and I'm going to put uh hello world over",
    "start": "623640",
    "end": "629760"
  },
  {
    "text": "here with a little Improvement to the quotes my shelle could be slightly unhappy with that particular choice of quotes and we're going to get hash",
    "start": "629760",
    "end": "636639"
  },
  {
    "text": "object - W and we're going to say that we're going to get the content from standard in now some of these modes you",
    "start": "636639",
    "end": "643120"
  },
  {
    "text": "wonder why would git actually provide this low-level function which it appropriately by strata by layer calls",
    "start": "643120",
    "end": "650279"
  },
  {
    "text": "the plumbing there's the porcelain on the top the user facing functions and the plumbing the ones that function",
    "start": "650279",
    "end": "655800"
  },
  {
    "text": "beneath it well this Plumbing piece over here allows us to actually write the",
    "start": "655800",
    "end": "661079"
  },
  {
    "text": "object to disk and dash standard in in this case says get the content from what",
    "start": "661079",
    "end": "666360"
  },
  {
    "text": "I'm piping from that first shell function there so when I run this uh instruction over here when I've got let",
    "start": "666360",
    "end": "673360"
  },
  {
    "text": "me make sure I've got my standard in and all of my quotes appropriately as they",
    "start": "673360",
    "end": "678800"
  },
  {
    "text": "should be we're writing this out to uh writing this out to dis running this but",
    "start": "678800",
    "end": "685279"
  },
  {
    "text": "wait a minute wait a minute wait a minute I am clearly missing something and I'm missing a dash over here at the",
    "start": "685279",
    "end": "691639"
  },
  {
    "text": "very end D- standard n much better than our M Dash that appeared there we go so",
    "start": "691639",
    "end": "698000"
  },
  {
    "text": "finally we've produced from an echo stream the ability to write one of these same files this five5 that we're getting",
    "start": "698000",
    "end": "705160"
  },
  {
    "text": "here on our dis now what did this do to our tree of dogit so far we're just kind",
    "start": "705160",
    "end": "712160"
  },
  {
    "text": "of feeling our way around we're feeling the walls kind of seeing what we can see but wait a minute wait a minute wait a",
    "start": "712160",
    "end": "718320"
  },
  {
    "text": "minute that 557 Delta Baker was already there and",
    "start": "718320",
    "end": "724519"
  },
  {
    "text": "you saw that this produced exactly the same output when I wrote it so what we've now done is show that git actually",
    "start": "724519",
    "end": "731680"
  },
  {
    "text": "doesn't have any magical recipe it's not a specific flavor or an incantation that",
    "start": "731680",
    "end": "737040"
  },
  {
    "text": "the tool itself came up with what we've discovered the first little layer that we've peeled back is that you can",
    "start": "737040",
    "end": "742680"
  },
  {
    "text": "actually just use standard commands like echo or even build your own kind of conglomerate function with Shaw and you",
    "start": "742680",
    "end": "749560"
  },
  {
    "text": "can digest the contents of these strings and end up with these unique fingerprints that's the thing that we",
    "start": "749560",
    "end": "755959"
  },
  {
    "text": "want to kind of recognize at this point you can produce these fingerprints just from the contents of strings or the",
    "start": "755959",
    "end": "762839"
  },
  {
    "text": "contents of bytes now given that we've gone all the way into that and we now said it's written to disk and we've kind",
    "start": "762839",
    "end": "769199"
  },
  {
    "text": "of seen even where it is in the file and folder structure could we just read this back from disk I mean could I take the",
    "start": "769199",
    "end": "775279"
  },
  {
    "text": "cat function and just read back into the 557 Delta a baker directory file over",
    "start": "775279",
    "end": "781000"
  },
  {
    "text": "here could I read that back to screen well that does not look quite like what",
    "start": "781000",
    "end": "786639"
  },
  {
    "text": "I expected it's not as naked or as exposed as the other layers that I've shown so what happened here well what we",
    "start": "786639",
    "end": "794360"
  },
  {
    "text": "actually got in this case was some Z de uh compression of the file that was in",
    "start": "794360",
    "end": "800120"
  },
  {
    "text": "that directory but you know what we can actually set up our own little Pearl Alias and get the same kind of thing to",
    "start": "800120",
    "end": "806959"
  },
  {
    "text": "be able to decompress in the absence of git I can set up an alias over here with",
    "start": "806959",
    "end": "812560"
  },
  {
    "text": "a pearl M compress Z what well a little Pearl function that I'm defining the",
    "start": "812560",
    "end": "818800"
  },
  {
    "text": "second will actually be a little bit clearer what I'd like to do as the second step to this is to have it",
    "start": "818800",
    "end": "824440"
  },
  {
    "text": "deflate that's the little program that I just set up here before you're using Pearl well I wanted to be polyglot this",
    "start": "824440",
    "end": "830680"
  },
  {
    "text": "evening so I now am able to deflate the object that's hanging in this directory",
    "start": "830680",
    "end": "837040"
  },
  {
    "text": "I hope ever so slowly it's becoming just a little bit and a little bit and a little bit clearer how these are put",
    "start": "837040",
    "end": "843600"
  },
  {
    "text": "together just a little bit at a time it's starting to sharpen that these things are just",
    "start": "843600",
    "end": "849920"
  },
  {
    "text": "decompressed or compressed strings that we can deflate that have and look at",
    "start": "849920",
    "end": "855120"
  },
  {
    "text": "that pattern you recognize that from a few minutes ago blob 12 hello world do",
    "start": "855120",
    "end": "860920"
  },
  {
    "text": "you remember that you're starting to be able to put the threads of these pieces together you thought they were kind of scattered all over and you're starting",
    "start": "860920",
    "end": "867120"
  },
  {
    "text": "to see the same thing show up and show up oh so it's just a what is it with the",
    "start": "867120",
    "end": "874240"
  },
  {
    "text": "bite count and the content in the file correct and the file name itself is the",
    "start": "874240",
    "end": "880120"
  },
  {
    "text": "fingerprint of the unique content correct and the first two characters of",
    "start": "880120",
    "end": "885519"
  },
  {
    "text": "those 40 characters are the directory name and the remaining 38 characters are",
    "start": "885519",
    "end": "891279"
  },
  {
    "text": "just the file name itself done I've literally explained how every git commit",
    "start": "891279",
    "end": "898000"
  },
  {
    "text": "works and the only only thing that I've left opaque at all in all of this is actually just the compression Library",
    "start": "898000",
    "end": "904120"
  },
  {
    "text": "itself you could even install your own Zab commandline utilities you could use this from Ruby there's Java equivalents",
    "start": "904120",
    "end": "910639"
  },
  {
    "text": "to the same but that's even the only small piece that I've left and it simply looks like Zip compression as you're",
    "start": "910639",
    "end": "916800"
  },
  {
    "text": "putting it into the in out of that file for a little bit of efficiency as you write it to disk now that we've seen",
    "start": "916800",
    "end": "923680"
  },
  {
    "text": "that piece I actually want to go one step a little bit further and say well then how would get actually right out",
    "start": "923680",
    "end": "929279"
  },
  {
    "text": "the tree the next most important piece here well that would be done through another Plumbing command called update",
    "start": "929279",
    "end": "936600"
  },
  {
    "text": "index we can say update the index add cache info ah a Unix file permission",
    "start": "936600",
    "end": "942920"
  },
  {
    "text": "over here 644 we recognize that 100 a normal file in git and then we have over",
    "start": "942920",
    "end": "949759"
  },
  {
    "text": "here the hash of the file that was already calculated and the file name now",
    "start": "949759",
    "end": "954920"
  },
  {
    "text": "why does it matter that we write it in this form and why does it matter that when we're writing the directory the",
    "start": "954920",
    "end": "960959"
  },
  {
    "text": "tree the folder that our source code is contained in why do we Supply the file",
    "start": "960959",
    "end": "966160"
  },
  {
    "text": "name in the hash then well this takes us for our first time actually back over to",
    "start": "966160",
    "end": "971399"
  },
  {
    "text": "slides for just a minute because everything that we've done so far can be turned back into what I believe is a",
    "start": "971399",
    "end": "978160"
  },
  {
    "text": "very very helpful picture of the data structure itself as we're building these things from top to bottom and some of",
    "start": "978160",
    "end": "984639"
  },
  {
    "text": "you may have already seen a graph or a picture like this that I use often in my talks we calculated a digest of the",
    "start": "984639",
    "end": "991480"
  },
  {
    "text": "files contents but what you saw at the lowest level possible is that the file",
    "start": "991480",
    "end": "997319"
  },
  {
    "text": "name actually didn't matter at all at the time that the file's content was",
    "start": "997319",
    "end": "1003000"
  },
  {
    "text": "written to disk this is one portion of GS efficiency and that if you copied and",
    "start": "1003000",
    "end": "1008920"
  },
  {
    "text": "pasted the exact contents of a file it really only gets written to disk once",
    "start": "1008920",
    "end": "1014319"
  },
  {
    "text": "but then gets pointed to by any number of directories that happen to use that content you saw that firsthand because",
    "start": "1014319",
    "end": "1020959"
  },
  {
    "text": "there was no remnant of the file name itself in the first little object that we wrote it was in wait a minute let's",
    "start": "1020959",
    "end": "1028798"
  },
  {
    "text": "go back to it to be doubly sure it was over when we were writing the directory names that we actually assigned content",
    "start": "1028799",
    "end": "1036319"
  },
  {
    "text": "to be paired up with a file name it was at this level that those two things were finally glued together back to the",
    "start": "1036319",
    "end": "1043558"
  },
  {
    "text": "picture again as we start to build this up the picture has exactly the same Concepts up here we have the type and",
    "start": "1043559",
    "end": "1050880"
  },
  {
    "text": "the hash and the file name stored at the tree level which we commonly say is the same as a directory and these things of",
    "start": "1050880",
    "end": "1057760"
  },
  {
    "text": "course can be nested one beneath another all the way until we get up to the level of a",
    "start": "1057760",
    "end": "1063280"
  },
  {
    "text": "Commit This is not a VAR args field at the top it is a singular field for the",
    "start": "1063280",
    "end": "1069280"
  },
  {
    "text": "top level tree that it points to the parents are a VAR field you can have more than one parent that's a merge but",
    "start": "1069280",
    "end": "1077039"
  },
  {
    "text": "in this case the tree the file in the folder system is a singular field it can",
    "start": "1077039",
    "end": "1082240"
  },
  {
    "text": "only point to one and this is why theget directory lives in the top of your",
    "start": "1082240",
    "end": "1087840"
  },
  {
    "text": "project structure that is the singular directory that captures everything else beneath it it has to be one at the top",
    "start": "1087840",
    "end": "1095120"
  },
  {
    "text": "of the pyramid that's pointed to by each and every commit but the commits hash",
    "start": "1095120",
    "end": "1100480"
  },
  {
    "text": "itself is what since we've been looking at the constituent Parts the composition",
    "start": "1100480",
    "end": "1106080"
  },
  {
    "text": "of the commit is a pointer to the tree so knows what content what files what file names belong in there but also a",
    "start": "1106080",
    "end": "1113159"
  },
  {
    "text": "pointer to parents also encapsulating the content of the author and the committer is separate fields and the",
    "start": "1113159",
    "end": "1120240"
  },
  {
    "text": "commit message itself it's all of these pieces glommed into the final little bit",
    "start": "1120240",
    "end": "1126360"
  },
  {
    "text": "at the top of the tree if we look at our tree of dogit again does g actually give",
    "start": "1126360",
    "end": "1131520"
  },
  {
    "text": "you any useful commands that you can go at and kind of act on those things without worry whipping up Ruby or Pearl",
    "start": "1131520",
    "end": "1138919"
  },
  {
    "text": "javascripts to actually touch those of course it does and I actually think that you'll find a reasonable use case for",
    "start": "1138919",
    "end": "1145039"
  },
  {
    "text": "these in your day-to-day use of git git provides a function called cat file so",
    "start": "1145039",
    "end": "1150559"
  },
  {
    "text": "now we're getting back to kind of On The Fringe of a useful utility back out of the land of computer science back to a",
    "start": "1150559",
    "end": "1157360"
  },
  {
    "text": "practical sense and Cat file can actually serve you reasonably well if somebody gave you a hash of the last",
    "start": "1157360",
    "end": "1163559"
  },
  {
    "text": "deployment to the site and let's say that we happen to know that we could get a a list get",
    "start": "1163559",
    "end": "1170320"
  },
  {
    "text": "log-1 oh 4f delta10 that's our most recent commits ID that we can get cat",
    "start": "1170320",
    "end": "1177799"
  },
  {
    "text": "file and ask it what type is 4 F Delta 1 in this case and it says why Matthew",
    "start": "1177799",
    "end": "1184480"
  },
  {
    "text": "that is a commit and I say okay I'm going to repeat the same instruction in this time cat file I'd like you to give",
    "start": "1184480",
    "end": "1190600"
  },
  {
    "text": "me the contents of that particular file that I'm reading from the objects directory and the result is oh it's",
    "start": "1190600",
    "end": "1197880"
  },
  {
    "text": "funny how that matches is up exactly with the diagram a pointer to the tree the author the committer and the commit",
    "start": "1197880",
    "end": "1204080"
  },
  {
    "text": "message You're Now viewing the composition of these individual parts that are calculated as that hashed sum",
    "start": "1204080",
    "end": "1210919"
  },
  {
    "text": "for the commit now that we have a pointer to the tree do remember tree.",
    "start": "1210919",
    "end": "1216120"
  },
  {
    "text": "getet do you remember that 97 Baker 4 we just saw that as a result of running",
    "start": "1216120",
    "end": "1221960"
  },
  {
    "text": "that instruction 97 Baker 4 let's try to repeat the same thing let's ask it what",
    "start": "1221960",
    "end": "1227159"
  },
  {
    "text": "the type is uh of 97 Baker 4 that should be should be",
    "start": "1227159",
    "end": "1234240"
  },
  {
    "text": "sufficient oh that's a tree well no surprise there you already knew that before running the instruction but we",
    "start": "1234240",
    "end": "1239600"
  },
  {
    "text": "are interested in what the content of it is and here is where that information",
    "start": "1239600",
    "end": "1244880"
  },
  {
    "text": "was captured when we did the right tree it's got the mode over there the 100",
    "start": "1244880",
    "end": "1250280"
  },
  {
    "text": "representing a standard file 644 being the the user right and other read",
    "start": "1250280",
    "end": "1255559"
  },
  {
    "text": "privileges on the file blob being that it's a file it doesn't care if it's text or image it's a blob not a tree or a",
    "start": "1255559",
    "end": "1262720"
  },
  {
    "text": "commit there's the identifier of the content itself and there's the representation of the file name at the",
    "start": "1262720",
    "end": "1268600"
  },
  {
    "text": "end of the line there's all your pieces put together in a way that you might",
    "start": "1268600",
    "end": "1273880"
  },
  {
    "text": "never have gone down to the bottom of this kind of Stack but it really seems kind of simple in hindsight it's just",
    "start": "1273880",
    "end": "1279799"
  },
  {
    "text": "composition of files folders and commits each with their unique identifiers at each level of this data structure now",
    "start": "1279799",
    "end": "1287360"
  },
  {
    "text": "that we've kind of built this out piece by piece there's an interesting take on this of well what do I do with it though",
    "start": "1287360",
    "end": "1293679"
  },
  {
    "text": "I have this knowledge and maybe it's kind of computer science but what what basis does this give me for using it for",
    "start": "1293679",
    "end": "1300840"
  },
  {
    "text": "using it better for trusting it more for perhaps even switching to it well now that you've seen these three pieces I",
    "start": "1300840",
    "end": "1307320"
  },
  {
    "text": "think this example that I often use of damaging a repository becomes a lot more meaningful I'm going to copy recursively",
    "start": "1307320",
    "end": "1314159"
  },
  {
    "text": "here for just a second the project one that we were just working on and I'm going to call it project one damaged I'm",
    "start": "1314159",
    "end": "1320960"
  },
  {
    "text": "going to go into this damaged repository it's not damaged yet but we're going to soon do our work on it and we're going",
    "start": "1320960",
    "end": "1327720"
  },
  {
    "text": "to once again for the sake of reminding you look at that most recent hash uh 4f",
    "start": "1327720",
    "end": "1334039"
  },
  {
    "text": "delta10 get status is very happy get log is very happy it's showing me the commits over here but I'm going to take",
    "start": "1334039",
    "end": "1340679"
  },
  {
    "text": "VI and go into the doget directory and over into the objects folder and over into 4f and complete the file name and",
    "start": "1340679",
    "end": "1347520"
  },
  {
    "text": "at the very front of this insert a character that effectively makes it in congruent incomplete unhappy and so I'm",
    "start": "1347520",
    "end": "1355400"
  },
  {
    "text": "going to write that out to dis and then I'm going to drop back to the command prompt having written a new character",
    "start": "1355400",
    "end": "1361120"
  },
  {
    "text": "into that file and I will run get status at which point it says no you don't this",
    "start": "1361120",
    "end": "1366440"
  },
  {
    "text": "repository is no longer valid now I did that on an extremely small one with just one commit it's very shallow but that",
    "start": "1366440",
    "end": "1372880"
  },
  {
    "text": "made the example nice and and simple and clear but the same thing has value on a",
    "start": "1372880",
    "end": "1378039"
  },
  {
    "text": "large repository with a great deal of History you can run get fsck to actually",
    "start": "1378039",
    "end": "1383440"
  },
  {
    "text": "do a file system check on that repository and with a few option switches you can actually have it recalculate everything both with the",
    "start": "1383440",
    "end": "1390080"
  },
  {
    "text": "full and if you want to change the rule set so that it doesn't allow some of the older um misbehavior that was present in",
    "start": "1390080",
    "end": "1397360"
  },
  {
    "text": "some ancient editions of git you can also have it be strict about the things that it finds you could even set this up",
    "start": "1397360",
    "end": "1404120"
  },
  {
    "text": "on a KRON job if you like we have this as part of some of the backend infrastructure GitHub but this is the",
    "start": "1404120",
    "end": "1410200"
  },
  {
    "text": "kind of thing that you could run on your own repositories you could set up your own job to health check them and this is",
    "start": "1410200",
    "end": "1415600"
  },
  {
    "text": "giving you a guarantee I think it's almost hard to to Value to figure out",
    "start": "1415600",
    "end": "1421159"
  },
  {
    "text": "how much value this is this is giving you a guarantee that every bit of every commit ever written to the repository",
    "start": "1421159",
    "end": "1428200"
  },
  {
    "text": "from the beginning of time until now is in its proper place without any bit rot",
    "start": "1428200",
    "end": "1433919"
  },
  {
    "text": "or malicious manipulation this is making sure that all those check sums recalc calculated back from from oldest to",
    "start": "1433919",
    "end": "1440720"
  },
  {
    "text": "newest still all match up and you know how that happens because they're simply",
    "start": "1440720",
    "end": "1446480"
  },
  {
    "text": "just linked one to another you saw that top to bottom picture of a single commit",
    "start": "1446480",
    "end": "1451640"
  },
  {
    "text": "but then how would a commit be linked to its neighbor the answer is incredibly simple the next commit the very first",
    "start": "1451640",
    "end": "1458320"
  },
  {
    "text": "one has a special marker in the parent field called nil but all the subsequent ones pass that Inception original commit",
    "start": "1458320",
    "end": "1466360"
  },
  {
    "text": "point to their neighbor and this linkage from one to the next to the next would be damaged would be broken and in a way",
    "start": "1466360",
    "end": "1474000"
  },
  {
    "text": "that you can't really trick it to match back up if you write content you say well wait a minute I'll take one of the",
    "start": "1474000",
    "end": "1480159"
  },
  {
    "text": "dot Java files and I'll put some sort of back door into it but remember when it runs the shaw function you're not",
    "start": "1480159",
    "end": "1486480"
  },
  {
    "text": "controlling the output that's a fingerprint of the content so drats you can't control what the fingerprint will",
    "start": "1486480",
    "end": "1492120"
  },
  {
    "text": "be there and the fingerprint gets written into the tree directory and into the tree data structure that represents",
    "start": "1492120",
    "end": "1497960"
  },
  {
    "text": "the direct and when that is Shaw summed it's a listing of all the content beneath it so that will then turn out to",
    "start": "1497960",
    "end": "1504120"
  },
  {
    "text": "be a different hash if you made even the slightest change to the file and that will propagate all the way up until it",
    "start": "1504120",
    "end": "1509720"
  },
  {
    "text": "breaks the linkages between these because the hash of the commit is based on the hash of the tree is based on the",
    "start": "1509720",
    "end": "1515240"
  },
  {
    "text": "hash of the files and you simply cannot maliciously craft in a reasonable amount of time a file that would be a",
    "start": "1515240",
    "end": "1522000"
  },
  {
    "text": "replacement for the existing one with say a back door placed in that is a very",
    "start": "1522000",
    "end": "1527200"
  },
  {
    "text": "fascinating thing that it get gives you but this is kind of what you get for free what do you actually get as far as",
    "start": "1527200",
    "end": "1532960"
  },
  {
    "text": "workflow and behavior from all of this manipulation of commits and trees and",
    "start": "1532960",
    "end": "1538320"
  },
  {
    "text": "the merges that we often do as part of a software development process well some things that were increasingly hard as",
    "start": "1538320",
    "end": "1546240"
  },
  {
    "text": "the team scale grew and grew in a verion control system are incredibly easy here because they're baked into the data",
    "start": "1546240",
    "end": "1552720"
  },
  {
    "text": "structure which is why I I feel completely comfortable saying there's value in knowing how it works",
    "start": "1552720",
    "end": "1558840"
  },
  {
    "text": "when you have Divergent branches you're working on a feature and the main branch at the same time the master branch and",
    "start": "1558840",
    "end": "1564840"
  },
  {
    "text": "you go to merge those back together you often don't stop to think how is it finding what actually needs to be merged",
    "start": "1564840",
    "end": "1570840"
  },
  {
    "text": "but the answer here is baked into the data structure simply to the point that we say it is finding where these two",
    "start": "1570840",
    "end": "1578720"
  },
  {
    "text": "commits have this commit and this one the same parent in fact I can genericize",
    "start": "1578720",
    "end": "1584799"
  },
  {
    "text": "that statement to say the merge base is is where two commits have the same",
    "start": "1584799",
    "end": "1591640"
  },
  {
    "text": "parent hash the same identifier that was where they both had the same common ancestor and that's where they started",
    "start": "1591640",
    "end": "1597679"
  },
  {
    "text": "to diverge two different directions in fact if we try this from the command line you say is that visible I mean is",
    "start": "1597679",
    "end": "1603960"
  },
  {
    "text": "that just something that you're showing us or is that something that you can actually see from the command line you can see it quite well if I do a get",
    "start": "1603960",
    "end": "1611080"
  },
  {
    "text": "Branch over here and I go back into the healthy repository instead that will be",
    "start": "1611080",
    "end": "1616679"
  },
  {
    "text": "a wise choice on my part I will clear off the screen and start a get branch that I'll call feature number",
    "start": "1616679",
    "end": "1624600"
  },
  {
    "text": "one over here to the side and having created that Branch so I've got a feature one branch that's hanging off to",
    "start": "1624600",
    "end": "1630399"
  },
  {
    "text": "the side let me show you the list of those branch names there like so and now that I've got the split I'll make some",
    "start": "1630399",
    "end": "1637440"
  },
  {
    "text": "random changes on each of these two I'll do two random Master Branch changes like",
    "start": "1637440",
    "end": "1642640"
  },
  {
    "text": "so and I'll get checkout over to the feature one branch and I'll do two more",
    "start": "1642640",
    "end": "1648679"
  },
  {
    "text": "feature. txt changes now I'll visualize what's going on here with those two we've now got two arms splitting in",
    "start": "1648679",
    "end": "1655640"
  },
  {
    "text": "different directions now I am on currently the feature one branch and I",
    "start": "1655640",
    "end": "1660760"
  },
  {
    "text": "could ask it in very simple form get please give me the and yes merge base is",
    "start": "1660760",
    "end": "1666679"
  },
  {
    "text": "a top level command give me the merge base of this and say master I guess and",
    "start": "1666679",
    "end": "1674159"
  },
  {
    "text": "what what are we trying to actually do here wait a minute that's insufficient I need to give it two arms for it to",
    "start": "1674159",
    "end": "1681080"
  },
  {
    "text": "consider what is the merge base between aha master and let's say feature one",
    "start": "1681080",
    "end": "1687200"
  },
  {
    "text": "we're actually giving it two inputs and I'll relate this to how you type the merge command in just a second but look",
    "start": "1687200",
    "end": "1693240"
  },
  {
    "text": "at that there's the common that simple simple algorithm being run race",
    "start": "1693240",
    "end": "1698320"
  },
  {
    "text": "backwards from these two points until you find a commit where both on these",
    "start": "1698320",
    "end": "1703720"
  },
  {
    "text": "two racetracks are pointing at the same common ancestor end of algorithm end of loop",
    "start": "1703720",
    "end": "1708760"
  },
  {
    "text": "that now gives us a really clean graph as to what could potentially be merged together and is a basis for why git is",
    "start": "1708760",
    "end": "1715320"
  },
  {
    "text": "easier at merg time you're not supplying a long list of revision numbers and in fact you never really for people who are",
    "start": "1715320",
    "end": "1721720"
  },
  {
    "text": "using get at their jobs have to type this this is happening for you at the time that you perhaps get checkout",
    "start": "1721720",
    "end": "1728880"
  },
  {
    "text": "Master branch and get merge in something like feature one people often think well",
    "start": "1728880",
    "end": "1735559"
  },
  {
    "text": "it always has kind of a context sensitivity when I type A get merge command and you're right in fact it's",
    "start": "1735559",
    "end": "1741360"
  },
  {
    "text": "kind of like that merge base where I ended up having to supply two parameters instead of one this is saying well I'm",
    "start": "1741360",
    "end": "1747919"
  },
  {
    "text": "going to assume the one you're on because I need a current working directory in case there's conflicts or",
    "start": "1747919",
    "end": "1753120"
  },
  {
    "text": "things you have to resolve so I'll simply for an optimization reason just have you supply the other branch that",
    "start": "1753120",
    "end": "1759120"
  },
  {
    "text": "you need to merge in but what is less commonly known is that you can supply as",
    "start": "1759120",
    "end": "1764679"
  },
  {
    "text": "many branches as you like here wait a minute wait a minute that's the seems to complicate things but no it doesn't",
    "start": "1764679",
    "end": "1770840"
  },
  {
    "text": "because the algorithm that I just described scales perfectly well walk back the paths on all the branches given",
    "start": "1770840",
    "end": "1777480"
  },
  {
    "text": "until we find a common ancestor for all of them it simply is four more a couple more checks two more checks in this case",
    "start": "1777480",
    "end": "1784640"
  },
  {
    "text": "but the algorithm remains absolutely consistent it's just how many arms that we're checking at each point in time and",
    "start": "1784640",
    "end": "1790760"
  },
  {
    "text": "I think there's almost a a comfort level and knowing that it's not quite as fancy or as black box that you might have",
    "start": "1790760",
    "end": "1796880"
  },
  {
    "text": "assumed it's a pretty pretty simple algorithm that produces a pretty simple outcome which means a lot more automatic",
    "start": "1796880",
    "end": "1803600"
  },
  {
    "text": "merges that we don't have to deal with in terms of conflicts if we can describe these",
    "start": "1803600",
    "end": "1809279"
  },
  {
    "text": "things in terms of these kind of soft reference names these pointers to branches to tags what more could you",
    "start": "1809279",
    "end": "1816320"
  },
  {
    "text": "possibly derive from this well in fact I'll show you something that I've actually never seen in a presentation",
    "start": "1816320",
    "end": "1821679"
  },
  {
    "text": "before in terms of get syntax but it's been present for quite some time you all may know the very basics of commit is",
    "start": "1821679",
    "end": "1828600"
  },
  {
    "text": "and Trish but now rather than laughing at these names you'll actually know where they derive from because the two",
    "start": "1828600",
    "end": "1833760"
  },
  {
    "text": "things that I showed you we wrote The Three actually are the blobs the trees and the commits so you see that these",
    "start": "1833760",
    "end": "1840919"
  },
  {
    "text": "are just reference and notations for pointing at these long remember annoyingly long 40 hex character",
    "start": "1840919",
    "end": "1848120"
  },
  {
    "text": "identifiers so why was I able to get away with his using as little as four in these cases well in fact this causes me",
    "start": "1848120",
    "end": "1856000"
  },
  {
    "text": "to introduce one more command to your vocabulary inside almost every git",
    "start": "1856000",
    "end": "1863120"
  },
  {
    "text": "command is a first run at rev parse before it runs what you asked it to do",
    "start": "1863120",
    "end": "1870679"
  },
  {
    "text": "rev parse takes any kind of short hash let's say like the four Frank Delta 1",
    "start": "1870679",
    "end": "1878360"
  },
  {
    "text": "that we had from before and turns it into its nice Global unique identifier",
    "start": "1878360",
    "end": "1883519"
  },
  {
    "text": "most programs kind of in the same way that we might reference uh variable names and those being translated to",
    "start": "1883519",
    "end": "1889200"
  },
  {
    "text": "memory addresses that was a human convenience that we could give it a friendly name or some small part of the",
    "start": "1889200",
    "end": "1894919"
  },
  {
    "text": "identifier this is ultimately what the system the code actually wants for",
    "start": "1894919",
    "end": "1900279"
  },
  {
    "text": "referring to Any Given commit so in fact whether you're running merge whether you're running cherry pick whether",
    "start": "1900279",
    "end": "1906519"
  },
  {
    "text": "you're running show or log or even rebase it is turning your short hashes",
    "start": "1906519",
    "end": "1912799"
  },
  {
    "text": "your friendly names for branches and tags and small little bits of kites like this into their long counterpart as the",
    "start": "1912799",
    "end": "1919919"
  },
  {
    "text": "very first step now there's got to be some sort of compromise it seems like",
    "start": "1919919",
    "end": "1925080"
  },
  {
    "text": "between this shorthand form and the long hand form especially if you're going to start kind of describing and passing it",
    "start": "1925080",
    "end": "1931799"
  },
  {
    "text": "around and also giving some relative position because you don't want to be pedantic about having to apply a tag of",
    "start": "1931799",
    "end": "1940159"
  },
  {
    "text": "I just left my computer for coffee uh",
    "start": "1940159",
    "end": "1945399"
  },
  {
    "text": "you know number 21 for the time of the day that's just unreasonable to expect you to put a tag every time that you",
    "start": "1945399",
    "end": "1951279"
  },
  {
    "text": "walk away so there's a git instruction that actually helps out a lot with this I'm going to generate a few more commits",
    "start": "1951279",
    "end": "1958120"
  },
  {
    "text": "generate some random changes of two more from More Sample to txt files like so",
    "start": "1958120",
    "end": "1964399"
  },
  {
    "text": "and I'm going to ask get to please describe the most recent Commit This",
    "start": "1964399",
    "end": "1969639"
  },
  {
    "text": "describe command is actually really pretty helpful because what it actually",
    "start": "1969639",
    "end": "1974880"
  },
  {
    "text": "does is walks back on the graph and finds the near nearest annotated tag that points to this and then gives you a",
    "start": "1974880",
    "end": "1982039"
  },
  {
    "text": "relative position to that tag but what I seem to get is a complaint about this",
    "start": "1982039",
    "end": "1987639"
  },
  {
    "text": "that didn't seem to give me anything helpful at all there are three modes for tags and one of the benefits that I'd",
    "start": "1987639",
    "end": "1993679"
  },
  {
    "text": "like to see you walk out of with here tonight is that that tag that I ran just a moment ago is probably something that",
    "start": "1993679",
    "end": "2000120"
  },
  {
    "text": "you start using a lot less after tonight's presentation there is an equivalent tag command with the dash",
    "start": "2000120",
    "end": "2006600"
  },
  {
    "text": "little a that I would assum should become your default this is an annotated tag and to be honest it's really more a",
    "start": "2006600",
    "end": "2014279"
  },
  {
    "text": "real tag than the one without the flag is an annotated tag is a first class",
    "start": "2014279",
    "end": "2019519"
  },
  {
    "text": "Citizen and in fact it would be helpful if I'm going to control C and not write",
    "start": "2019519",
    "end": "2025039"
  },
  {
    "text": "that output and I'm going to get GC to garbage collect my objects directory I'm",
    "start": "2025039",
    "end": "2031840"
  },
  {
    "text": "going to tree my doget objects folder to show you what I have hang hanging in there for the moment I want to show you",
    "start": "2031840",
    "end": "2038559"
  },
  {
    "text": "a before and an after I want to run a normal tag so we'll just say normal tag",
    "start": "2038559",
    "end": "2045440"
  },
  {
    "text": "right here and I'll run that tree of.get objects directory again and there's no change before and after I wrote a tag",
    "start": "2045440",
    "end": "2053599"
  },
  {
    "text": "but nothing got written into the object's directory why because the form of tag that the default writes is just a",
    "start": "2053599",
    "end": "2061158"
  },
  {
    "text": "pointer to an existing hash but it doesn't have any of the Integrity the contents the who the what the when the",
    "start": "2061159",
    "end": "2068040"
  },
  {
    "text": "wear of a normal commit an annotated tag the one that I was trying to run prior",
    "start": "2068040",
    "end": "2073919"
  },
  {
    "text": "to that get tag- a stands for annotated",
    "start": "2073919",
    "end": "2078960"
  },
  {
    "text": "is actually writing an object so we'll say in this case uh sample with",
    "start": "2078960",
    "end": "2085520"
  },
  {
    "text": "annotated like so and having done that one what you'll find is that up Pops my",
    "start": "2085520",
    "end": "2091800"
  },
  {
    "text": "commit message editor this is my place to be able to type this is a tag to show",
    "start": "2091800",
    "end": "2098200"
  },
  {
    "text": "to my SFO jug friends and save and close",
    "start": "2098200",
    "end": "2103440"
  },
  {
    "text": "and the before and after is what you're supposed to take note of in this case now you see that an object was actually",
    "start": "2103440",
    "end": "2109320"
  },
  {
    "text": "written to that object's directory this is what I consider to be my go-to tag",
    "start": "2109320",
    "end": "2116160"
  },
  {
    "text": "command because inside here wait a minute are you telling me this would actually work remember that thing that",
    "start": "2116160",
    "end": "2122040"
  },
  {
    "text": "we used before Dash type T could I ask it what 0188",
    "start": "2122040",
    "end": "2127760"
  },
  {
    "text": "happens to be yes I can and it tells me it's a tag well then could I ask it what",
    "start": "2127760",
    "end": "2132960"
  },
  {
    "text": "the contents of that tag is why absolutely you could there's an object a",
    "start": "2132960",
    "end": "2138320"
  },
  {
    "text": "type a tag a tagger who did it and then lastly the commit message and now that",
    "start": "2138320",
    "end": "2145280"
  },
  {
    "text": "looks an awful lot like the commit that you saw from a while ago it is in fact",
    "start": "2145280",
    "end": "2152040"
  },
  {
    "text": "about the same as the commit writing code but the only thing that is missing",
    "start": "2152040",
    "end": "2157319"
  },
  {
    "text": "over here here is it doesn't point to a tree why not because the tree is already",
    "start": "2157319",
    "end": "2163160"
  },
  {
    "text": "preserved in this commit we have the state already saved we want to point at",
    "start": "2163160",
    "end": "2169560"
  },
  {
    "text": "an existing state and describe why we got to that state we cut a release we",
    "start": "2169560",
    "end": "2174920"
  },
  {
    "text": "were rolling back that was a a trial run that we pushed out to production that's",
    "start": "2174920",
    "end": "2180240"
  },
  {
    "text": "what a Tag's purpose serves so it is an indirection to point over at an existing",
    "start": "2180240",
    "end": "2186000"
  },
  {
    "text": "commit when we ask G rev parse we're starting to glue these commands back",
    "start": "2186000",
    "end": "2191680"
  },
  {
    "text": "together if it would be able to tell us anything about sample with annotated it",
    "start": "2191680",
    "end": "2196839"
  },
  {
    "text": "of course converts it over into the first class citizen like so but if I",
    "start": "2196839",
    "end": "2203400"
  },
  {
    "text": "were talking about one of those other tags from before so let's see what other",
    "start": "2203400",
    "end": "2208720"
  },
  {
    "text": "one I just like this tag like that that actually points at the commit itself let",
    "start": "2208720",
    "end": "2214680"
  },
  {
    "text": "me say that once again the Rev parse of the annotated tag says here is your",
    "start": "2214680",
    "end": "2221400"
  },
  {
    "text": "actual tag object because there is such a thing in theget objects directory the",
    "start": "2221400",
    "end": "2227200"
  },
  {
    "text": "Rev pars of this other lighter weight dare I even say of minimal use Tag form",
    "start": "2227200",
    "end": "2233400"
  },
  {
    "text": "is actually pointing over at the actual commit wait a minute can you prove that to us of course by going right back over",
    "start": "2233400",
    "end": "2240480"
  },
  {
    "text": "to cat file again please show me the type of Delta 22 Charlie you're seeing",
    "start": "2240480",
    "end": "2246640"
  },
  {
    "text": "that number come from the the bottom little element there ah indeed that's a commit whereas if I tried to do the same",
    "start": "2246640",
    "end": "2252480"
  },
  {
    "text": "thing on the 0188 but you already knew that that's actually pointing at a tag",
    "start": "2252480",
    "end": "2257680"
  },
  {
    "text": "so what I think this helps you do is take all of the stuff that's happening beneath I find that people use git far",
    "start": "2257680",
    "end": "2264520"
  },
  {
    "text": "more effectively when there's a sense even if it's not your daily knowledge even if you have to flip back to the",
    "start": "2264520",
    "end": "2269640"
  },
  {
    "text": "slide deck it seems a lot less special or amazing as to what's happening",
    "start": "2269640",
    "end": "2274720"
  },
  {
    "text": "beneath it's simple file manipulation and you can in fact with the file system see exactly where it's writing these",
    "start": "2274720",
    "end": "2281040"
  },
  {
    "text": "things now you say well that's one small tangible bit to this but I think it",
    "start": "2281040",
    "end": "2287280"
  },
  {
    "text": "really really gives you a grounding in the language of this Trish and commit",
    "start": "2287280",
    "end": "2292319"
  },
  {
    "text": "that you can use to navigate this graph the carrot is the most common navigation",
    "start": "2292319",
    "end": "2297839"
  },
  {
    "text": "character that we teach in early classes on this kind of thing with Git because that's one commit back so you now",
    "start": "2297839",
    "end": "2304839"
  },
  {
    "text": "remember that the data structure is a linked list so we just start at the end or whatever Place we've identified and",
    "start": "2304839",
    "end": "2310119"
  },
  {
    "text": "go one step prior or two steps prior but that's pretty tedious so we could go",
    "start": "2310119",
    "end": "2315839"
  },
  {
    "text": "five steps prior changing that symbol over to a till rather than repeating that carrot symbol we can also use the",
    "start": "2315839",
    "end": "2323040"
  },
  {
    "text": "same thing to constrain two elements in the graph so you could say I'm interested from here to here and you",
    "start": "2323040",
    "end": "2329200"
  },
  {
    "text": "could certainly Supply these unique identifiers and they're going to be rev parsed into their full piece but you",
    "start": "2329200",
    "end": "2334560"
  },
  {
    "text": "could also use a tag and a tag or uh you could even use a branch and a branch as",
    "start": "2334560",
    "end": "2340160"
  },
  {
    "text": "any of these two places because ultimately they're all the same thing they're just pointers to nodes in a",
    "start": "2340160",
    "end": "2347319"
  },
  {
    "text": "graph and you're talking about walking each of the steps between these two points in fact that's what a lot of G",
    "start": "2347319",
    "end": "2353119"
  },
  {
    "text": "operations are is here's a starting point here's an ending find the shortest path between the two walk done end of",
    "start": "2353119",
    "end": "2360040"
  },
  {
    "text": "algorithm in many of those cases we also have some nice symbolic words things like head that also can be combined with",
    "start": "2360040",
    "end": "2367520"
  },
  {
    "text": "carrot operators til operators and then can be mixed and matched even to the point that you have the prior prior",
    "start": "2367520",
    "end": "2373720"
  },
  {
    "text": "prior as part of a range we have the branch names we can merge we can also use those symbols with the branch names",
    "start": "2373720",
    "end": "2379920"
  },
  {
    "text": "and we can do it lonand or shorthand we can use lonand like that but get doesn't make us write that it'll allow us to use",
    "start": "2379920",
    "end": "2386680"
  },
  {
    "text": "the shorthand of things like this why can we be sure that it's pointing at the same thing well in fact if I have a",
    "start": "2386680",
    "end": "2394560"
  },
  {
    "text": "remote repository this can turn out to be quite use ful if I do something like",
    "start": "2394560",
    "end": "2399839"
  },
  {
    "text": "a git clone of G github.com uh colon",
    "start": "2399839",
    "end": "2405560"
  },
  {
    "text": "GitHub training hellogitworld like so and clone",
    "start": "2405560",
    "end": "2410720"
  },
  {
    "text": "this down to my local dis so there we go we just retrieved a whole repository I can ask it to get uh LS files and see",
    "start": "2410720",
    "end": "2419040"
  },
  {
    "text": "what I have here locally and see a listing of those and for any of those files I could get the hash of those I",
    "start": "2419040",
    "end": "2425119"
  },
  {
    "text": "could also get a listing of my Branch names and if I turn on things like verbose I start to see these identifiers",
    "start": "2425119",
    "end": "2431119"
  },
  {
    "text": "and start to think oh so maybe rather than being annoyed by the Precision of",
    "start": "2431119",
    "end": "2436359"
  },
  {
    "text": "these 40 hex character codes I can say that it's a little less ambiguous than the human friendly names like Master get",
    "start": "2436359",
    "end": "2443720"
  },
  {
    "text": "LS remote which will show me all of the remote heads pointed to by this repository all these poll requests all",
    "start": "2443720",
    "end": "2450800"
  },
  {
    "text": "these branches that were created let's try that again piped through more this time and do a little contrast and",
    "start": "2450800",
    "end": "2456520"
  },
  {
    "text": "comparison with the master branch that we were on before I see bisect feature",
    "start": "2456520",
    "end": "2461640"
  },
  {
    "text": "Master GH pages eight dog8 Zer in this case and you see this is LS remote",
    "start": "2461640",
    "end": "2468599"
  },
  {
    "text": "command is asking the the GitHub upside Upstream side of the repository what",
    "start": "2468599",
    "end": "2473800"
  },
  {
    "text": "that identifier happens to be and I could ask that same simple question of my local repository over here get what",
    "start": "2473800",
    "end": "2480560"
  },
  {
    "text": "is the most recent commit we'll do a branch DV or G could you tell me what the Rev parse is of head and every",
    "start": "2480560",
    "end": "2489079"
  },
  {
    "text": "single thing is telling me exactly the same sequence of characters and what I",
    "start": "2489079",
    "end": "2494800"
  },
  {
    "text": "now get the confidence of this of is when I see it on a remote identification on a web page at GitHub as a list of the",
    "start": "2494800",
    "end": "2502040"
  },
  {
    "text": "branches as a list of rev pars well this is all telling me that I have a globally",
    "start": "2502040",
    "end": "2508359"
  },
  {
    "text": "unique number I said I was going to literally treat it as such from a physics perspective that says the state",
    "start": "2508359",
    "end": "2514359"
  },
  {
    "text": "of the entire repository on that branch and local on this branch and the most recent commit from the current Branch",
    "start": "2514359",
    "end": "2520000"
  },
  {
    "text": "are all pointing at exactly the same thing now there's got to be a little bit of a way to kind of mix and match and to",
    "start": "2520000",
    "end": "2528160"
  },
  {
    "text": "kind of blend these two things together for some identification and some ability to to navigate this here's some of that",
    "start": "2528160",
    "end": "2535640"
  },
  {
    "text": "syntax that I said you're unlikely to have seen before and now suddenly makes",
    "start": "2535640",
    "end": "2540839"
  },
  {
    "text": "sense from a user perspective this is legal to literally type out like that I was typing cat file",
    "start": "2540839",
    "end": "2549960"
  },
  {
    "text": "and then I was looking at the most recent hash then I copied and pasted to get the hash of the tree the directory",
    "start": "2549960",
    "end": "2556520"
  },
  {
    "text": "structure and files that lived beneath it but that's a common enough operation that we can do that just like so let's",
    "start": "2556520",
    "end": "2563720"
  },
  {
    "text": "give it a try the Master's Tree in this case and let's do a comparison get cat",
    "start": "2563720",
    "end": "2569839"
  },
  {
    "text": "file of- type for head what did that provide oh it's a commit let's look at-",
    "start": "2569839",
    "end": "2575960"
  },
  {
    "text": "P it says the tree is Charlie 72466 so let's try our alternative",
    "start": "2575960",
    "end": "2582000"
  },
  {
    "text": "approach to this let's do a uh get rev parse let's wrap it in a nice set of",
    "start": "2582000",
    "end": "2587160"
  },
  {
    "text": "double uh or single quotes over here and let's do a u master and a carrot with",
    "start": "2587160",
    "end": "2594280"
  },
  {
    "text": "the wrapped brace of tree like so and a single tick at the end just contrast and",
    "start": "2594280",
    "end": "2599359"
  },
  {
    "text": "compare that's finding this commits tree I wanted to make that exceedingly clear before I press enter and with now",
    "start": "2599359",
    "end": "2607280"
  },
  {
    "text": "suddenly all the surprise of the evening is diminishing towards the end and maybe I should have turned the whole presentation on its head but all of",
    "start": "2607280",
    "end": "2613960"
  },
  {
    "text": "these things are seeming pedestrian now maybe even 45 minutes ago they would have seemed crazy confusing and the more",
    "start": "2613960",
    "end": "2620119"
  },
  {
    "text": "I repeat these and the more ways that I show you to come at the same thing you're like so they're all just 40 hex character identifiers of a state of the",
    "start": "2620119",
    "end": "2627160"
  },
  {
    "text": "files or a state of the whole repo and you've suddenly demystified almost",
    "start": "2627160",
    "end": "2632960"
  },
  {
    "text": "everything about git that has the potential to confuse you down the road it's just states of the whole repo or states of",
    "start": "2632960",
    "end": "2640400"
  },
  {
    "text": "the file system themselves in fact we can go even further with this we can say",
    "start": "2640400",
    "end": "2646040"
  },
  {
    "text": "now that we've wrote a written a properly annotated tag is there a way that we can refer to the most recent tag",
    "start": "2646040",
    "end": "2652760"
  },
  {
    "text": "but then some distance or position from that well of course we can let's go back",
    "start": "2652760",
    "end": "2657800"
  },
  {
    "text": "and try again and say get please describe as we tried before the current",
    "start": "2657800",
    "end": "2663480"
  },
  {
    "text": "head and it says no annotated tags can describe this as of yet ah you're right",
    "start": "2663480",
    "end": "2670359"
  },
  {
    "text": "now can I describe let's say the master Branch what's the same outcome for this you're right that is true I've got that",
    "start": "2670359",
    "end": "2678079"
  },
  {
    "text": "same problem the same difficulty but what if I actually allowed it to use one of those non-annotated tags that's what",
    "start": "2678079",
    "end": "2686160"
  },
  {
    "text": "this option switch will do here I'm actually going to place it more appropriately in the front right before the branch name itself and in this case",
    "start": "2686160",
    "end": "2692839"
  },
  {
    "text": "it says oh I'm now allowed to use these non-annotated",
    "start": "2692839",
    "end": "2698359"
  },
  {
    "text": "tags and I can create this hybrid syntax that's what we've got is hybrid syntax",
    "start": "2698359",
    "end": "2705160"
  },
  {
    "text": "in which it takes an existing tag and melds it with a hash let me show you the",
    "start": "2705160",
    "end": "2710319"
  },
  {
    "text": "list of tags that we have at our disposal now let me add another tag to this let me do a get tag- A- little a of",
    "start": "2710319",
    "end": "2721160"
  },
  {
    "text": "an annotated one like so and I'm gonna apply this to one commit AO is where I'm",
    "start": "2721160",
    "end": "2727319"
  },
  {
    "text": "going to put it in the graph a good tag to be sure save and close and then try a",
    "start": "2727319",
    "end": "2733760"
  },
  {
    "text": "g describe we're going to try this again of head ah and of Master a and there we",
    "start": "2733760",
    "end": "2742160"
  },
  {
    "text": "have in both cases a hybrid identifier that's a little bit more human friendly",
    "start": "2742160",
    "end": "2749200"
  },
  {
    "text": "but is still blended with that globally unique identifier and I've actually",
    "start": "2749200",
    "end": "2754440"
  },
  {
    "text": "found this to be a very reasonable thing to perhaps embed inside an about dialogue if you like it's a little bit",
    "start": "2754440",
    "end": "2760880"
  },
  {
    "text": "of both it's kind of a human friendly portion as well as a machine identifi",
    "start": "2760880",
    "end": "2766440"
  },
  {
    "text": "pile uh machine identifiable piece uh when you did that tag you did head till day one why back one so is to give a",
    "start": "2766440",
    "end": "2775359"
  },
  {
    "text": "little bit of a distance because the git describe of the current Branch if I didn't put the tag farther back would",
    "start": "2775359",
    "end": "2780760"
  },
  {
    "text": "have nicely simplified just to the tag itself almost in a kind of way of smack smack Matthew you dummy you're on the",
    "start": "2780760",
    "end": "2787400"
  },
  {
    "text": "tag so there's no need to actually have any of the the marker alongside it what",
    "start": "2787400",
    "end": "2792599"
  },
  {
    "text": "this provides you is so that I don't have to be pedantic about applying tags I can have one kind of drifting farther",
    "start": "2792599",
    "end": "2799119"
  },
  {
    "text": "back in history that I applied let's say yesterday or the morning before and it still will use that as a basis for me",
    "start": "2799119",
    "end": "2806000"
  },
  {
    "text": "making more commits ahead so kind of last last street sign scene plus",
    "start": "2806000",
    "end": "2812319"
  },
  {
    "text": "distance from street sign would be a very nice little way to kind of map that to an analogy",
    "start": "2812319",
    "end": "2817760"
  },
  {
    "text": "sweet so this is a very useful bit to embed inside as I said before you're about dialogues it's highly scriptable",
    "start": "2817760",
    "end": "2824520"
  },
  {
    "text": "you could just take the output of this and um write something that captures and writes it over into a properties file",
    "start": "2824520",
    "end": "2830079"
  },
  {
    "text": "I've done exactly that on a Java project and it worked really well but what then",
    "start": "2830079",
    "end": "2835880"
  },
  {
    "text": "you should be almost comfortable with as soon as we ran it once is this syntax",
    "start": "2835880",
    "end": "2841079"
  },
  {
    "text": "this should become part of your daily routine as well you remember that recently somebody made a commit that",
    "start": "2841079",
    "end": "2847640"
  },
  {
    "text": "said something about a variable name or a person or a particular type of change",
    "start": "2847640",
    "end": "2854079"
  },
  {
    "text": "there's a shorthand some text for that you can simply say get find me log revp",
    "start": "2854079",
    "end": "2860200"
  },
  {
    "text": "parse cat file any of those instructions and using this commit notation that we've been talking about say find me a",
    "start": "2860200",
    "end": "2868559"
  },
  {
    "text": "commit that has those words embedded in them you can even go further and say",
    "start": "2868559",
    "end": "2873640"
  },
  {
    "text": "that you want it to refer to a specific file so they can be more articulate this is kind of generic of course right could",
    "start": "2873640",
    "end": "2880319"
  },
  {
    "text": "hit multiple things so it finds the first one from the current Point working backwards because it's a linked list",
    "start": "2880319",
    "end": "2886359"
  },
  {
    "text": "that points at the parents but this is a little bit more precise this allows us rather than saying on a particular",
    "start": "2886359",
    "end": "2892720"
  },
  {
    "text": "commit rather than a generic commit to say you know what on one particular commit I'd like to read all the way down",
    "start": "2892720",
    "end": "2899359"
  },
  {
    "text": "to the level of a file where does this become useful I've seen people struggle or use graphical user interfaces to try",
    "start": "2899359",
    "end": "2906040"
  },
  {
    "text": "to get an old copy of the file into the current directory or even lighter weight than that get an old copy of the file",
    "start": "2906040",
    "end": "2912800"
  },
  {
    "text": "and just see it on screen they'll use a guey to go over to the right commit and then somehow display it in there but",
    "start": "2912800",
    "end": "2918559"
  },
  {
    "text": "that's accessible from here as well let's go back and look at our history with a get log d-stat to see where we've",
    "start": "2918559",
    "end": "2924880"
  },
  {
    "text": "recently been there's a travis. file there's a build.gradle file that I recently did so what I could do is take",
    "start": "2924880",
    "end": "2931960"
  },
  {
    "text": "a little bit of this hash identifier right here copy that to my clipboard and have embedded in my head the file",
    "start": "2931960",
    "end": "2938280"
  },
  {
    "text": "structure G could you show me the contents of that commit hash well of",
    "start": "2938280",
    "end": "2943799"
  },
  {
    "text": "course it can but that's not what I want to see I want to see one specific file in there so I can simply just say at the",
    "start": "2943799",
    "end": "2949760"
  },
  {
    "text": "end of that build.gradle and it dutifully outputs just that single one",
    "start": "2949760",
    "end": "2955240"
  },
  {
    "text": "this again is boring because it's demystified because you now know that it's navigating through the graph to",
    "start": "2955240",
    "end": "2961760"
  },
  {
    "text": "that certain point and it's opening the tree and it's looking for a file with that path and it's doing a get cat file-",
    "start": "2961760",
    "end": "2970079"
  },
  {
    "text": "P of that file's hash identifiers contents look back look in end of",
    "start": "2970079",
    "end": "2978280"
  },
  {
    "text": "process so many of these things that seemed like they might have been or could have been complicated are in fact",
    "start": "2978280",
    "end": "2984200"
  },
  {
    "text": "very very simple and straightforward as long as someone's actually stated what that recipe and process happens to be",
    "start": "2984200",
    "end": "2991280"
  },
  {
    "text": "now for one that uses numbers where If I Were King I perhaps would not have put",
    "start": "2991280",
    "end": "2996480"
  },
  {
    "text": "them in quite the syntax form but here they are anyway let's say you're in a merge scenario you're in the middle of a",
    "start": "2996480",
    "end": "3003839"
  },
  {
    "text": "merge the merge has not gone well perhaps you have a conflict it says conflicted file and you think oh I I",
    "start": "3003839",
    "end": "3011079"
  },
  {
    "text": "wanted to see the way it was and the merge and I used the tool and it's wrong and I'm like half baked but I don't want to roll it back with a merge abort I",
    "start": "3011079",
    "end": "3017880"
  },
  {
    "text": "just want to see the way the file used to be in the current staged area or in",
    "start": "3017880",
    "end": "3024319"
  },
  {
    "text": "the common ancestor that was achieved by merge base or the one that is the Target",
    "start": "3024319",
    "end": "3030480"
  },
  {
    "text": "on the current branch that you're on or the one that you're bringing in the source branch that you're folding over",
    "start": "3030480",
    "end": "3037440"
  },
  {
    "text": "this syntax within the file name at the end of it in the context of a merge is allowing you to see with like",
    "start": "3037440",
    "end": "3045079"
  },
  {
    "text": "the G show command the contents of each of these by state let me repeat that again from the first one you're in a",
    "start": "3045079",
    "end": "3051559"
  },
  {
    "text": "merge you have let's say a conflict you're not yet complete with the merge",
    "start": "3051559",
    "end": "3056839"
  },
  {
    "text": "so there's a sense of what is the current staged files contents maybe it's partly resolved what is the one that was",
    "start": "3056839",
    "end": "3064040"
  },
  {
    "text": "the common ancestor found by merge base the place where the file had its Inception it split apart or the one on",
    "start": "3064040",
    "end": "3070760"
  },
  {
    "text": "you could even call it right and left as many people do for the thought of a merge each of those has their own Syntax",
    "start": "3070760",
    "end": "3077720"
  },
  {
    "text": "for being uniquely identified so now all of this dialect this dialogue this",
    "start": "3077720",
    "end": "3084000"
  },
  {
    "text": "ability to get at the files and the contents is is really simply just a navigation language like anything else",
    "start": "3084000",
    "end": "3089920"
  },
  {
    "text": "that we'd use in SQL or even lat long coordinates it just has some funny manipulators at this point but does all",
    "start": "3089920",
    "end": "3097319"
  },
  {
    "text": "of this actually help you be a better git user absolutely I've seen people",
    "start": "3097319",
    "end": "3102680"
  },
  {
    "text": "even with just a few of these things like accessing the merge base or the right or left piece you know go from",
    "start": "3102680",
    "end": "3108359"
  },
  {
    "text": "well I've got to fire up a tool and get down to the right commit and make sure that I dig in and somehow copy and paste",
    "start": "3108359",
    "end": "3113720"
  },
  {
    "text": "it and put in another text editor to Simply being able to navigate back over here like we did with the build.gradle",
    "start": "3113720",
    "end": "3119720"
  },
  {
    "text": "file and perhaps even just pipe that over to their favorite editor and pop it up like so the time from typing that and",
    "start": "3119720",
    "end": "3126200"
  },
  {
    "text": "getting it there versus watching anybody use a mouse to scroll is a real timesaver especially when you consider",
    "start": "3126200",
    "end": "3132680"
  },
  {
    "text": "that that is repeated over and over and over again and I think that that with",
    "start": "3132680",
    "end": "3138319"
  },
  {
    "text": "the difficult statement means that we actually can return to our comfort zone of thinking of programming once again of",
    "start": "3138319",
    "end": "3143920"
  },
  {
    "text": "something like this I hope you enjoyed the demonst ation I hope that it was something different that was the intent",
    "start": "3143920",
    "end": "3149559"
  },
  {
    "text": "and I thank you for your time thanks",
    "start": "3149559",
    "end": "3153160"
  },
  {
    "text": "again I know it was kind of a nice little string of of content so my intent now is actually to take and repeat or",
    "start": "3158520",
    "end": "3165680"
  },
  {
    "text": "clarify anything in this nice long string of stuff that uh that you'd like me to do I'll take questions and I'll",
    "start": "3165680",
    "end": "3170720"
  },
  {
    "text": "repeat them and and show off any demo that goes with this the question was as you're building up a git graph of",
    "start": "3170720",
    "end": "3178079"
  },
  {
    "text": "commits like this we've got some commits and we have branches off to the side and",
    "start": "3178079",
    "end": "3183319"
  },
  {
    "text": "then we decide at some point to perhaps rebase these well those of us kind of in",
    "start": "3183319",
    "end": "3188880"
  },
  {
    "text": "the know of how git manipulates these things would say not that rebasing and these other activities are moving things",
    "start": "3188880",
    "end": "3195000"
  },
  {
    "text": "around but rather that it's making a copy of them and putting the new flavor",
    "start": "3195000",
    "end": "3201920"
  },
  {
    "text": "of the branch the arm the series of commits somewhere else now when it does",
    "start": "3201920",
    "end": "3207240"
  },
  {
    "text": "this manipulation the key the thing that you care about is that the label let's",
    "start": "3207240",
    "end": "3212640"
  },
  {
    "text": "call this over here feature one for this Branch name over here it is the label",
    "start": "3212640",
    "end": "3218200"
  },
  {
    "text": "that's actually being moved around when you let's say rebase that's happening",
    "start": "3218200",
    "end": "3223599"
  },
  {
    "text": "and the garbage collection algorithm is simply looking for heads that have no",
    "start": "3223599",
    "end": "3232079"
  },
  {
    "text": "human readable form of either a tag or a branch name those are the the two qualifiers that make them eligible for",
    "start": "3232079",
    "end": "3239839"
  },
  {
    "text": "living it then proceeds to walk back the series of commits that that's useless",
    "start": "3239839",
    "end": "3245040"
  },
  {
    "text": "that has no human readable name that's useless that has no human readable name until it gets to a path that's kind of",
    "start": "3245040",
    "end": "3251200"
  },
  {
    "text": "electrified if you will that is reachable to use the the more articulate term that's reachable by some Branch",
    "start": "3251200",
    "end": "3257599"
  },
  {
    "text": "name that we do still know about so it's actually really simple it's walk commits",
    "start": "3257599",
    "end": "3263359"
  },
  {
    "text": "that are no longer reachable by a human uh reference name tag or Branch name end",
    "start": "3263359",
    "end": "3269839"
  },
  {
    "text": "of story and I love that many of these things are simpler than than maybe you thought they were in a good way other",
    "start": "3269839",
    "end": "3276520"
  },
  {
    "text": "hands other questions yes sir let me jump back there yeah could you could you explain just briefly like a a forward",
    "start": "3276520",
    "end": "3282799"
  },
  {
    "text": "merge because we talked about a like a merge base but not really a forward",
    "start": "3282799",
    "end": "3288000"
  },
  {
    "text": "merge so let me try but uh let me see if I'm getting it right so at any point",
    "start": "3288000",
    "end": "3293480"
  },
  {
    "text": "that I'm off the rails about what you're asking um have me start over or clarify so I'm",
    "start": "3293480",
    "end": "3299040"
  },
  {
    "text": "going to repeat and I'm going to see if I understood it correctly so here's uh two branches and we're going to put some",
    "start": "3299040",
    "end": "3305319"
  },
  {
    "text": "labels on these we're going to talk about uh a feature Branch Feature Future",
    "start": "3305319",
    "end": "3310799"
  },
  {
    "text": "feature spelled funny there we go and a master Branch up top and we're going to talk about uh merging this back together",
    "start": "3310799",
    "end": "3318280"
  },
  {
    "text": "in the traditional sense that's our normal merge pattern so when that occurs",
    "start": "3318280",
    "end": "3323400"
  },
  {
    "text": "what's actually happening the question was what is happening here is that those two pieces are writing a new commit at",
    "start": "3323400",
    "end": "3330839"
  },
  {
    "text": "the end of the graph this is the default behavior for the recursively evaluated set of branches and that commit simply",
    "start": "3330839",
    "end": "3338720"
  },
  {
    "text": "stores two pointers uh one is the identifier of the the parent commit",
    "start": "3338720",
    "end": "3344880"
  },
  {
    "text": "that's kind of the primary branch and then let's change the numbers up to kind of signify something that came over from",
    "start": "3344880",
    "end": "3350359"
  },
  {
    "text": "the feature Branch so it's simply a node that points at the two ancestors that it brought together",
    "start": "3350359",
    "end": "3356960"
  },
  {
    "text": "plus any rectifying commit activity to resolve conflicts the the code that you",
    "start": "3356960",
    "end": "3363039"
  },
  {
    "text": "help glue back together that didn't quite fit well so let me stop there is that yeah okay sorry ask question so and",
    "start": "3363039",
    "end": "3374200"
  },
  {
    "text": "I'm coming from the sub verion universe so if you're doing a merge like that you could either be merging to the branch or",
    "start": "3374200",
    "end": "3380640"
  },
  {
    "text": "merging back to the front so what's differentiates like whether you're merging to the bran",
    "start": "3380640",
    "end": "3388200"
  },
  {
    "text": "all right so let me repeat this by starting with code uh to do this so I'm going to clear off the screen here for a",
    "start": "3388200",
    "end": "3393760"
  },
  {
    "text": "second I'm on the master Branch I'm going to start a branch off to the side that I'm going to call feature two I'm",
    "start": "3393760",
    "end": "3399520"
  },
  {
    "text": "going to generate a few uh random changes to uh",
    "start": "3399520",
    "end": "3404960"
  },
  {
    "text": "Master generate two random changes on Master I'll show you what the difference is here txt and I'll get check out uh",
    "start": "3404960",
    "end": "3414119"
  },
  {
    "text": "feature two and I'll likewise generate two random changes over here to the side",
    "start": "3414119",
    "end": "3419200"
  },
  {
    "text": "so this is uh feature txt and if I get",
    "start": "3419200",
    "end": "3424799"
  },
  {
    "text": "merge Master into this branch which happily goes save close it's all happy",
    "start": "3424799",
    "end": "3431119"
  },
  {
    "text": "and all the way back down to there we go oops",
    "start": "3431119",
    "end": "3436880"
  },
  {
    "text": "projectors okay let's come back over here so now that we're back at our",
    "start": "3436880",
    "end": "3442039"
  },
  {
    "text": "scratch window something a little funny going on with the project there but let's go back",
    "start": "3442039",
    "end": "3447240"
  },
  {
    "text": "into our project that we were in and we're on our feature 2 branch and I just merged that so I'm going to get show the",
    "start": "3447240",
    "end": "3453559"
  },
  {
    "text": "most recent commit and what you'll see is that there is an order sensitivity so",
    "start": "3453559",
    "end": "3459240"
  },
  {
    "text": "I'm answering the question by doing an example there is an order sensitivity to",
    "start": "3459240",
    "end": "3464319"
  },
  {
    "text": "the branch um parents that are listed on a merge commit the first one is the",
    "start": "3464319",
    "end": "3471079"
  },
  {
    "text": "branch that we were currently on kind of the destination in that case and the second one is the that was brought in so",
    "start": "3471079",
    "end": "3477559"
  },
  {
    "text": "the additive piece so the order is what controls what from and what to if we had",
    "start": "3477559",
    "end": "3484599"
  },
  {
    "text": "merged the feature Branch into the master Branch what you would have seen is the order of those two flipped on the",
    "start": "3484599",
    "end": "3491000"
  },
  {
    "text": "master Branch would be a commit that listed itself its own predecessor first",
    "start": "3491000",
    "end": "3496559"
  },
  {
    "text": "and then the incoming feature one as the second node so order sensitive sequence",
    "start": "3496559",
    "end": "3503160"
  },
  {
    "text": "sensitive why was that not fast forward because I changed uh there were",
    "start": "3503160",
    "end": "3509440"
  },
  {
    "text": "simultaneous changes on both of the branches um just to do a little bit of a quick little history history run over",
    "start": "3509440",
    "end": "3516799"
  },
  {
    "text": "here history of the most recent uh tale minus most recent five commands over",
    "start": "3516799",
    "end": "3522839"
  },
  {
    "text": "here wait a minute go like that um you'll see that what I did is I created",
    "start": "3522839",
    "end": "3528240"
  },
  {
    "text": "the branch and then I generated changes on Master then I toggled to the",
    "start": "3528240",
    "end": "3533839"
  },
  {
    "text": "previously created branch and generated more changes on the feature so I was creating commits that caused them to",
    "start": "3533839",
    "end": "3540359"
  },
  {
    "text": "diverge and then brought them back together if Master had been quiet let's say for example you might have gotten",
    "start": "3540359",
    "end": "3546280"
  },
  {
    "text": "the fast forward very very good that you called that out would you be able to publish that history that you've got",
    "start": "3546280",
    "end": "3551480"
  },
  {
    "text": "right there as part of the presentation note already done it will end up in a just less than an hour after this so yes",
    "start": "3551480",
    "end": "3557720"
  },
  {
    "text": "I will publish the history for everything that I've typed this evening I even have a cheat sheet that goes with this so every little example that I did",
    "start": "3557720",
    "end": "3563680"
  },
  {
    "text": "in Ruby and Pearl and python you can copy and paste so yep yes sir so can you",
    "start": "3563680",
    "end": "3569200"
  },
  {
    "text": "uh draw a picture of like what the commit graph looks like for annotated",
    "start": "3569200",
    "end": "3575160"
  },
  {
    "text": "versus a nonannotated yes yes so let me repeat that by by doing a picture over here we have a",
    "start": "3575160",
    "end": "3581680"
  },
  {
    "text": "commit graph this is what we're starting off to answer the question and we have some branches over on the side so the",
    "start": "3581680",
    "end": "3587280"
  },
  {
    "text": "same pattern that I've been setting up before but what we effectively have is a box over here in which we can place tags",
    "start": "3587280",
    "end": "3593799"
  },
  {
    "text": "the question was around tags now now in this box over to the side uh if I write",
    "start": "3593799",
    "end": "3600039"
  },
  {
    "text": "a traditional tag a nonannotated tag",
    "start": "3600039",
    "end": "3605079"
  },
  {
    "text": "what I have is a file not a commit so it would be inaccurate for me since I'm",
    "start": "3605079",
    "end": "3610920"
  },
  {
    "text": "using arrows as my commit thing here to actually use this what I'm going to do instead is say that it is a a pointer",
    "start": "3610920",
    "end": "3619640"
  },
  {
    "text": "back to some commit in the graph it's a indirection that has a name that point",
    "start": "3619640",
    "end": "3625960"
  },
  {
    "text": "points at the already written thing now this to put a label on this box we'll",
    "start": "3625960",
    "end": "3631359"
  },
  {
    "text": "call this our uh non it's actually called a reference tag so we'll just",
    "start": "3631359",
    "end": "3636680"
  },
  {
    "text": "call it a reference tag in that case what would an annotated tag look like",
    "start": "3636680",
    "end": "3642640"
  },
  {
    "text": "differently though it would be an actual commit in that box or honest to goodness",
    "start": "3642640",
    "end": "3648160"
  },
  {
    "text": "object sitting there that in the inside of that commit has a reference to a",
    "start": "3648160",
    "end": "3655440"
  },
  {
    "text": "particular commit the other one was merely the indirection the second one",
    "start": "3655440",
    "end": "3660799"
  },
  {
    "text": "was who what when where message plus the indirection back to the other",
    "start": "3660799",
    "end": "3668520"
  },
  {
    "text": "piece so let me start with a uh a little text document over here to kind of",
    "start": "3668520",
    "end": "3674119"
  },
  {
    "text": "outline both the question and the answer um basically I'm going to summarize as",
    "start": "3674119",
    "end": "3679520"
  },
  {
    "text": "how does the pack file work uh I don't like that it captures all all the",
    "start": "3679520",
    "end": "3687359"
  },
  {
    "text": "hashed objects and please permit any type of let me do this objects and also",
    "start": "3687359",
    "end": "3695920"
  },
  {
    "text": "how would I get at something that is in a pack file well to the latter piece I",
    "start": "3695920",
    "end": "3703920"
  },
  {
    "text": "can answer that I it is just that same z uh compression that we used on the",
    "start": "3703920",
    "end": "3710839"
  },
  {
    "text": "individual file so you could use that same decompress function that we used during class",
    "start": "3710839",
    "end": "3716599"
  },
  {
    "text": "on a pack file and what you'd get is an output of directories and files that",
    "start": "3716599",
    "end": "3721880"
  },
  {
    "text": "were the original constituents in the folder and file system end nothing else unique no more decomposition or digging",
    "start": "3721880",
    "end": "3729279"
  },
  {
    "text": "into them now each of those individual files just as we did at the beginning of class is still in turn individually",
    "start": "3729279",
    "end": "3736799"
  },
  {
    "text": "compressed so you might have one more step to go but it is just a two- layer",
    "start": "3736799",
    "end": "3742119"
  },
  {
    "text": "shell the outer shell encompassing all the files and folders and the inner ones exactly as we showed them in class so uh",
    "start": "3742119",
    "end": "3750039"
  },
  {
    "text": "using a pearl or python or Ruby Library would be the way to crack them open but I want to not answer your question or",
    "start": "3750039",
    "end": "3757640"
  },
  {
    "text": "answer it in a different direction with one other instruction over here as I clear the screen for this history",
    "start": "3757640",
    "end": "3763480"
  },
  {
    "text": "repository that we have over here let me show you here's all of our history and if I then get GC which then garbage",
    "start": "3763480",
    "end": "3769480"
  },
  {
    "text": "collects and all of those things are now in a and now in a pack file having run the garbage collection I still can use",
    "start": "3769480",
    "end": "3777319"
  },
  {
    "text": "any of these Plumbing commands that we use tonight I think this is very helpful",
    "start": "3777319",
    "end": "3782720"
  },
  {
    "text": "to be able to see this uh I can use any of the git cat file that we were using",
    "start": "3782720",
    "end": "3788720"
  },
  {
    "text": "before any of the git show against any particular hash all of the fact that the",
    "start": "3788720",
    "end": "3795440"
  },
  {
    "text": "files are now in the pack file the compressed archive or not in it is",
    "start": "3795440",
    "end": "3800520"
  },
  {
    "text": "completely hidden from you so that all the vocabulary that I used this evening that are get coming will function",
    "start": "3800520",
    "end": "3807079"
  },
  {
    "text": "whether or not it's inside or outside of a pack file so what it provides you is",
    "start": "3807079",
    "end": "3812599"
  },
  {
    "text": "this this nice thin abstraction as to whether or not they're in there and that",
    "start": "3812599",
    "end": "3817799"
  },
  {
    "text": "would be your interface by which you programmed to to getting stuff out of it it'd be more consistent than writing",
    "start": "3817799",
    "end": "3823960"
  },
  {
    "text": "your own compressed archives yes sir um basically how do you get the confidence uh of of getting kind",
    "start": "3823960",
    "end": "3831359"
  },
  {
    "text": "of the golden copy that you had back in subversion knowing that the the flavor that's up there is the same that",
    "start": "3831359",
    "end": "3836640"
  },
  {
    "text": "everybody else has and I think that answer is really really easy it is uh as",
    "start": "3836640",
    "end": "3841839"
  },
  {
    "text": "ugly as the sounds at first surface it is compare hashes because that is",
    "start": "3841839",
    "end": "3847200"
  },
  {
    "text": "actually a stronger statement than you could have ever made in subversion you",
    "start": "3847200",
    "end": "3852240"
  },
  {
    "text": "can mathematically dare I even say physics identify the state of everything",
    "start": "3852240",
    "end": "3858400"
  },
  {
    "text": "that led up to there and say that someone else has every bit in exactly the same place and exactly the same",
    "start": "3858400",
    "end": "3864720"
  },
  {
    "text": "state so it's actually a stronger level of guarantee for the golden copy so it",
    "start": "3864720",
    "end": "3871119"
  },
  {
    "text": "is very reasonable in a build process and even in a deploy process to ask what",
    "start": "3871119",
    "end": "3876680"
  },
  {
    "text": "the production hash is of the copy that's out there for a customer and uh",
    "start": "3876680",
    "end": "3881720"
  },
  {
    "text": "CI servers like Jenkins for example very popular in the Java space will do an archive and we'll do a md5 or sha one",
    "start": "3881720",
    "end": "3888520"
  },
  {
    "text": "some and you can do an archive command where will keep track of those on the per build basis and what's crazy is you",
    "start": "3888520",
    "end": "3894680"
  },
  {
    "text": "can actually even put that in the manifest.mf if you like when it's writing the jars and you can ask a",
    "start": "3894680",
    "end": "3900079"
  },
  {
    "text": "production customer without any identifying information in the jar names you can ask them this little tidbit of",
    "start": "3900079",
    "end": "3907079"
  },
  {
    "text": "information and tell you when and who caused the build to be published by do",
    "start": "3907079",
    "end": "3912920"
  },
  {
    "text": "using the search function in Jenkins I mean I can tell you it was a button press by Jen on Friday at 5:00 pm by",
    "start": "3912920",
    "end": "3920640"
  },
  {
    "text": "just that mere little tidbit of unique signature and we all know we've all done tech support at some part of our Lives",
    "start": "3920640",
    "end": "3926640"
  },
  {
    "text": "even if it's for family and friends the person on the other end will lie to you about what they're it's on revision six",
    "start": "3926640",
    "end": "3932920"
  },
  {
    "text": "okay check this file it's on revision 6 I'm reading it right now yes no you're not you're reading Delbert but it but",
    "start": "3932920",
    "end": "3938440"
  },
  {
    "text": "when they give you these unique identifiers it kind of destroys that because they can't tell you a hash code",
    "start": "3938440",
    "end": "3944680"
  },
  {
    "text": "that doesn't map to a build that you produced or at least you can easily smell it out it doesn't map to any build that you've ever seen come out of your",
    "start": "3944680",
    "end": "3951039"
  },
  {
    "text": "system what I was thinking is more like inio setup uh is it probably the right",
    "start": "3951039",
    "end": "3956559"
  },
  {
    "text": "idea is you to get it in right and then and then after that um you you don't do",
    "start": "3956559",
    "end": "3961799"
  },
  {
    "text": "any get or checking or whatever from that machine you use something else oh",
    "start": "3961799",
    "end": "3966960"
  },
  {
    "text": "as a hosting solution to have like the clean server copy of of it uh that's",
    "start": "3966960",
    "end": "3972119"
  },
  {
    "text": "about the right idea that's in fact what clicking the new button on GitHub does is is a get a knit of an empty",
    "start": "3972119",
    "end": "3977680"
  },
  {
    "text": "repository with a D- bear on the server side what I don't like is when I was in that machine and I get status like I",
    "start": "3977680",
    "end": "3983680"
  },
  {
    "text": "always say everything is deleted you what I mean right uh but you can uh Das Das bear is the option switch you're",
    "start": "3983680",
    "end": "3990359"
  },
  {
    "text": "looking for it means without a working directory and so you can never actually make any changes there it just becomes",
    "start": "3990359",
    "end": "3995960"
  },
  {
    "text": "the recipient in the yep that's the right vector and uh and I get free I",
    "start": "3995960",
    "end": "4001119"
  },
  {
    "text": "give free office hours every two weeks so if you have any trouble just come and I'll help you set it up too and maybe",
    "start": "4001119",
    "end": "4006400"
  },
  {
    "text": "one more uh this is a lowlevel question but we were looking at the get objects directory and I noticed that all the",
    "start": "4006400",
    "end": "4012520"
  },
  {
    "text": "directories were just uh a bite and then like the longer part of the hash y why one by",
    "start": "4012520",
    "end": "4018559"
  },
  {
    "text": "when not for is can it be deep and recursive why is it flat like that so uh the balancing was kind of through a a",
    "start": "4018559",
    "end": "4025920"
  },
  {
    "text": "semi-scientific process of trying to figure out what file systems kind of liked it's a compromise to be sure but",
    "start": "4025920",
    "end": "4033119"
  },
  {
    "text": "of the 40 hex characters that are the the shaw one digest 40 hex characters the first two are made as the as the",
    "start": "4033119",
    "end": "4040440"
  },
  {
    "text": "folder name and the remaining 38 or the file and it turned out to be happy on most file systems for creating balance",
    "start": "4040440",
    "end": "4047200"
  },
  {
    "text": "there are some file systems that do not like a million files in a single directory and this was a very",
    "start": "4047200",
    "end": "4053640"
  },
  {
    "text": "inexpensive way to to not yeah it's it's still true depending on depending on what kind of sand storage you're putting",
    "start": "4053640",
    "end": "4059960"
  },
  {
    "text": "it on and so on the performance characteristics are pretty varied there's some really anomalous performance curves of millions in a",
    "start": "4059960",
    "end": "4068039"
  },
  {
    "text": "single directory I thought you no longer have to worry about that it's it's still a concern on on some platforms and",
    "start": "4068039",
    "end": "4073799"
  },
  {
    "text": "remember not everybody has the advantage of moving all the way up the sliding scale let's say we solve it tomorrow let's let's say that that's truth",
    "start": "4073799",
    "end": "4080119"
  },
  {
    "text": "everything that ships is that way we have longtail customers still using and I say customers not even GitHub",
    "start": "4080119",
    "end": "4085599"
  },
  {
    "text": "customers get server implementations in places that have systems that are required to be four years old for",
    "start": "4085599",
    "end": "4090960"
  },
  {
    "text": "airline requirements and so on so just because it's solved you know even if we do solve it it doesn't mean that it's",
    "start": "4090960",
    "end": "4097560"
  },
  {
    "text": "solved for the long taale of everybody using the system so it's a durable solution it's a good solution so",
    "start": "4097560",
    "end": "4104000"
  },
  {
    "text": "effectively a compromise of balancing for file systems to give to make them a",
    "start": "4104000",
    "end": "4109199"
  },
  {
    "text": "little bit happier by giving them a blend of files that are nicely balanced and F and folders as opposed to a",
    "start": "4109199",
    "end": "4115318"
  },
  {
    "text": "million in a single in a single directory I'll stay for more questions but I think it's great to actually call",
    "start": "4115319",
    "end": "4120838"
  },
  {
    "text": "that formally concluded there's some prizes to give away so I don't want to stand in the way of that thanks once again you can ask me anything in the",
    "start": "4120839",
    "end": "4127359"
  },
  {
    "text": "hallway thank you [Music]",
    "start": "4127359",
    "end": "4141159"
  }
]