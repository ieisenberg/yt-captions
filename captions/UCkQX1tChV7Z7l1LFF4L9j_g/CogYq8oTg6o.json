[
  {
    "text": "[Music]",
    "start": "3270",
    "end": "8730"
  },
  {
    "text": "so just as a show of hands how many of you know anything about gpus okay so a few of you okay well",
    "start": "10920",
    "end": "18039"
  },
  {
    "text": "before we get into that I'd like to start with a tangent now this beautiful red vehicle here is an mg MGB GT it was",
    "start": "18039",
    "end": "26199"
  },
  {
    "text": "produced roughly in the late 60s and I tell you the truth I've always really wanted to buy one because apart from the",
    "start": "26199",
    "end": "32520"
  },
  {
    "text": "fact that British cars are kind of rare these days it also has this particular benefit in that if it broke down I could",
    "start": "32520",
    "end": "38719"
  },
  {
    "text": "probably fix it right I could probably if you know I was on the side of the Moto and the Very ancient engine inside",
    "start": "38719",
    "end": "44480"
  },
  {
    "text": "passed out I could probably Wrangle myself together and fix it and that's",
    "start": "44480",
    "end": "50120"
  },
  {
    "text": "something I can't really say for a car like this so this is a very modern Volvo and I'll be honest with you I don't have",
    "start": "50120",
    "end": "55879"
  },
  {
    "text": "a clue how this works in any way right this could die and I would be stuck there and I would need a mechanic to",
    "start": "55879",
    "end": "61840"
  },
  {
    "text": "come and fix it and Chan are they would just tow it somewhere else and the reason why I bring this up is because",
    "start": "61840",
    "end": "67479"
  },
  {
    "text": "actually if you look at these two vehicles the ways in which we interact with them really haven't changed that",
    "start": "67479",
    "end": "73119"
  },
  {
    "text": "much so this car of course has lots of clever internals so it will have saav",
    "start": "73119",
    "end": "78320"
  },
  {
    "text": "and radio and things like that but actually from the perspective of driving it's just you know you're just changing",
    "start": "78320",
    "end": "84119"
  },
  {
    "text": "gears you're moving your foot pedals you're steering not much has really changed and I really want you to keep that idea in your head because that's",
    "start": "84119",
    "end": "90000"
  },
  {
    "text": "going to be something that comes up again and again throughout this talk now I'm going to embarrass myself a",
    "start": "90000",
    "end": "96200"
  },
  {
    "text": "little bit here which is I recently started a new job around about 6 months ago and you can imagine right first day",
    "start": "96200",
    "end": "103040"
  },
  {
    "text": "kind of a little bit nervous join a first call and they say to me Joe we need you to make this program faster and",
    "start": "103040",
    "end": "110560"
  },
  {
    "text": "these words for me are simultaneously very exciting and also terrifying",
    "start": "110560",
    "end": "115640"
  },
  {
    "text": "because you think you've joined a company where you care about the people who work there you think they're good",
    "start": "115640",
    "end": "120680"
  },
  {
    "text": "and you've joined and they've said to you we have no idea why this is slow and we hope you might be able to help us and what made this even more scary is I knew",
    "start": "120680",
    "end": "127880"
  },
  {
    "text": "nothing about gpus when I started this job in fact for me the idea of Cuda",
    "start": "127880",
    "end": "133000"
  },
  {
    "text": "reminded me of this Barracuda and I was petrified equally at both right because",
    "start": "133000",
    "end": "138040"
  },
  {
    "text": "I knew nothing I didn't know anything about how this works I had KN no idea much like Thomas said on how to make this thing faster than it already was",
    "start": "138040",
    "end": "145200"
  },
  {
    "text": "and so much like any good person I go on YouTube I try to find a tutorial and I",
    "start": "145200",
    "end": "150280"
  },
  {
    "text": "end up writing a program that looks something like this so this is essentially a variant of C called cudas",
    "start": "150280",
    "end": "156040"
  },
  {
    "text": "C and you can see that we've just got essentially a regular function here that is essentially M set right so we take a",
    "start": "156040",
    "end": "162959"
  },
  {
    "text": "pointer and we just overwrite it with this value valve and so down here when the first time I tried to run it I just",
    "start": "162959",
    "end": "169640"
  },
  {
    "text": "allocated 100 in passed them to the GPU and expected it to do something and",
    "start": "169640",
    "end": "175720"
  },
  {
    "text": "something really weird about this program is it sometimes works and and sometimes doesn't and whether it works",
    "start": "175720",
    "end": "182120"
  },
  {
    "text": "or not depends on both your hardware and your software and I found this absolutely astounding this was so weird",
    "start": "182120",
    "end": "188519"
  },
  {
    "text": "the fact that this seemingly very innocuous program would sometimes work and other times just not and so the",
    "start": "188519",
    "end": "194680"
  },
  {
    "text": "question for our talk today are two things is one why does this sometimes work and two why was our otherwise",
    "start": "194680",
    "end": "201519"
  },
  {
    "text": "performant program slow now this these two programs are not really the same but they have enough similarities to",
    "start": "201519",
    "end": "208360"
  },
  {
    "text": "overlap so with that I just very briefly want to dive into the differences between a CPU and a GPU so when you're",
    "start": "208360",
    "end": "215799"
  },
  {
    "text": "writing code for a CPU you normally have many threads that run and you have to make them concurrent in an explicit",
    "start": "215799",
    "end": "221879"
  },
  {
    "text": "fashion so if you're writing say p threads or you're using the C+ plus standard Library you have to explicitly",
    "start": "221879",
    "end": "228720"
  },
  {
    "text": "say I want this thing to be parallel with GPS it's kind of similar but actually a lot of the concurrency that",
    "start": "228720",
    "end": "234159"
  },
  {
    "text": "you have is implicit So you you're very declarative when you write your code and you say actually when this actually",
    "start": "234159",
    "end": "240360"
  },
  {
    "text": "eventually runs I want to take this portion of the thing and do some work on it and really by form of analogy I want",
    "start": "240360",
    "end": "247360"
  },
  {
    "text": "to talk to you about the differences a CPU is kind of like an office right you have lots of people who are working",
    "start": "247360",
    "end": "253720"
  },
  {
    "text": "there they're all doing kind of relatively independent tasks they have their own space they're doing their own",
    "start": "253720",
    "end": "259120"
  },
  {
    "text": "things but actually it you know they're kind of doing roughly kind of General stuff whereas a GPU is a little bit more",
    "start": "259120",
    "end": "265880"
  },
  {
    "text": "like a factory so in a factory you have really special specialized equipment for particular things you can you know make",
    "start": "265880",
    "end": "272360"
  },
  {
    "text": "tables or cars or whatever but normally factories don't make many different things they just make one thing very",
    "start": "272360",
    "end": "278479"
  },
  {
    "text": "well and you can see here that we have all of this storage space I actually don't know what this Factory is for but",
    "start": "278479",
    "end": "283759"
  },
  {
    "text": "this storage space down here contains all of the raw materials and for the purpose of an analogy you can think",
    "start": "283759",
    "end": "289560"
  },
  {
    "text": "about that as being our memory right we've got things here that have Arisen from somewhere and we're going to use",
    "start": "289560",
    "end": "294840"
  },
  {
    "text": "that somehow to do some work this analogy does stretch further so if you think about an you have sort of",
    "start": "294840",
    "end": "301039"
  },
  {
    "text": "dedicated space for each person here you might have multiple different teams that do certain things that all share the",
    "start": "301039",
    "end": "307160"
  },
  {
    "text": "same workpace and you schedule these teams in and out based on essentially what needs to be done on that particular",
    "start": "307160",
    "end": "313199"
  },
  {
    "text": "day so just to capture this in some I",
    "start": "313199",
    "end": "318240"
  },
  {
    "text": "guess a more programmatic way this is what I mean by the implicit concurrency so here we've got the same function as",
    "start": "318240",
    "end": "324639"
  },
  {
    "text": "before which is essentially memet but what we're doing now is we're saying that each thread that runs is going to",
    "start": "324639",
    "end": "329880"
  },
  {
    "text": "process 32 elements most 32 elements and then we're going to split this range from the pointer into essentially the",
    "start": "329880",
    "end": "336440"
  },
  {
    "text": "sub ranges that are indexed by low and high and then with this check here make sure that we don't overwrite anything",
    "start": "336440",
    "end": "341919"
  },
  {
    "text": "but fundamentally this is how we get our concurrency right we specify a very small program that just divides up our",
    "start": "341919",
    "end": "348560"
  },
  {
    "text": "range and we expect that this will run in",
    "start": "348560",
    "end": "353000"
  },
  {
    "text": "parallel now you'll forgive me for going off on so many tangents but I think this one is important does anyone know what",
    "start": "354600",
    "end": "360520"
  },
  {
    "text": "this car is okay I don't expect you to it's utterly unimportant in its own way so",
    "start": "360520",
    "end": "366880"
  },
  {
    "text": "this is the Ford Model N and I know nothing about this car other than the fact that it came before the Model T and",
    "start": "366880",
    "end": "374039"
  },
  {
    "text": "the Model T was the first car that was built using a moving assembly line so before the moving assembly line was",
    "start": "374039",
    "end": "380479"
  },
  {
    "text": "invented the way that you would build a car is you would have a fixed position and workers would move around and work",
    "start": "380479",
    "end": "386680"
  },
  {
    "text": "on it iteratively and Henry Ford one day had a dream where he was like what if the pieces move and the worker stayed fix",
    "start": "386680",
    "end": "393840"
  },
  {
    "text": "rather than the work the pieces staying fixed and the work is moving and this was really a massive Revolution at the",
    "start": "393840",
    "end": "399440"
  },
  {
    "text": "time and it led to this thing here which is called the moving assembly line so where the people are fixed and the",
    "start": "399440",
    "end": "405400"
  },
  {
    "text": "things keep moving and the thing I want you to take away from this is that we're",
    "start": "405400",
    "end": "410599"
  },
  {
    "text": "really going to prefer the moving assembly line when we can really we're going to prefer setting where we can get",
    "start": "410599",
    "end": "417240"
  },
  {
    "text": "the hardware to do very particular tasks in a way that there's no dependency between each other right each bit only",
    "start": "417240",
    "end": "423360"
  },
  {
    "text": "has one particular thing that it must do and one of the ways that we're going to encapsulate that is via this notion",
    "start": "423360",
    "end": "429800"
  },
  {
    "text": "of a stream so a stream is an ordered sequence of events you can push tasks into it and you can expect and guarantee",
    "start": "429800",
    "end": "436879"
  },
  {
    "text": "that they will run in some sort of consistent way and the reason why we do",
    "start": "436879",
    "end": "441919"
  },
  {
    "text": "this by the way is because sometimes there are tasks that will be waiting for",
    "start": "441919",
    "end": "447440"
  },
  {
    "text": "certain things so for example on a GPU you might have a task that spends most of its time reading and writing from memory and that's a really inefficient",
    "start": "447440",
    "end": "454560"
  },
  {
    "text": "use of the hardware a lot of the time because that's kind of slow and your computation will be very fast and so you",
    "start": "454560",
    "end": "460319"
  },
  {
    "text": "want a way of telling the computer oh hey you can do something else here that's fine and you do this via the notion of a stream and this will come up",
    "start": "460319",
    "end": "467960"
  },
  {
    "text": "later so you can see here this is again another code example this Cuda stream T",
    "start": "467960",
    "end": "473560"
  },
  {
    "text": "type is just this type in Cuda that says this is a logically consistent set of operations please",
    "start": "473560",
    "end": "480039"
  },
  {
    "text": "execute these particular tasks on that stream and you can see that with this these angle brackets",
    "start": "480039",
    "end": "486960"
  },
  {
    "text": "here this is a sweeping generalization I'll make several of these in this talk",
    "start": "486960",
    "end": "492199"
  },
  {
    "text": "the idea here is that gpus thrive in settings where the computation to data ratio is really high so if we go back to",
    "start": "492199",
    "end": "498879"
  },
  {
    "text": "our Factory analogy from before you can imagine a world in which the workers of the factory really are just waiting for",
    "start": "498879",
    "end": "504599"
  },
  {
    "text": "raw resources all the time they're very quick they're very good at doing their job but they're waiting a lot for the",
    "start": "504599",
    "end": "509639"
  },
  {
    "text": "resources to arrive from somewhere else and if that shipping time is too long then maybe they will spend most of their",
    "start": "509639",
    "end": "515399"
  },
  {
    "text": "time idle and to give you sort of the conical example of this is matrix multiplication so matrix multiplication",
    "start": "515399",
    "end": "522399"
  },
  {
    "text": "you typically if you have an M byn Matrix it takes o to the N uh sorry o to",
    "start": "522399",
    "end": "528640"
  },
  {
    "text": "the N cubed time and O to the n s data and this is one of these situations in which we get a real speed up by using",
    "start": "528640",
    "end": "535000"
  },
  {
    "text": "gpus now you'll hear this a lot in performance tracks I really don't like the Big O notation here because it kind",
    "start": "535000",
    "end": "541519"
  },
  {
    "text": "of Lies so there are asymptotically better algorithms for Matrix mplications that are not faster on",
    "start": "541519",
    "end": "548800"
  },
  {
    "text": "gpus and that is in part because actually your constants really do matter in these",
    "start": "548800",
    "end": "554760"
  },
  {
    "text": "settings and with all that said we're going to write something we're going to write a mem copy function that can",
    "start": "554760",
    "end": "561160"
  },
  {
    "text": "handle any type of copy efficiently and by this I mean if I pass it memory that is in CPU I wanted to be able to",
    "start": "561160",
    "end": "568200"
  },
  {
    "text": "transfer that memory quickly if I pass a memory that's on a GPU I want it to be able to copy that quickly I I don't care I just want it to be able to do it",
    "start": "568200",
    "end": "574560"
  },
  {
    "text": "efficiently now conveniently anyone who's written any code will know M Copy",
    "start": "574560",
    "end": "579800"
  },
  {
    "text": "exists Cuda in fact has functions for this so really it might just seem that all we've got to do is pick in each case",
    "start": "579800",
    "end": "587079"
  },
  {
    "text": "what it is we're going to do so just to conceptualize that slightly there's three different types",
    "start": "587079",
    "end": "593480"
  },
  {
    "text": "of memory that we need to worry about on a GPU for the purpose of this talk the first one is stuff that comes out of",
    "start": "593480",
    "end": "598760"
  },
  {
    "text": "Cuda malop now this is as the name suggests it takes your memory on your graphics card",
    "start": "598760",
    "end": "604040"
  },
  {
    "text": "and it outputs some it gives you some buffer that you can store things in right it's like a regular Malo",
    "start": "604040",
    "end": "609680"
  },
  {
    "text": "replacement but just on the GPU now this memory is really special because it's",
    "start": "609680",
    "end": "615640"
  },
  {
    "text": "entirely it's constantly prioritized so it will never migrate it will always be",
    "start": "615640",
    "end": "621440"
  },
  {
    "text": "in that memory it will stick there forever and you can't change that behavior you would have to manually decide that you wanted to move it",
    "start": "621440",
    "end": "627000"
  },
  {
    "text": "somewhere else this is obviously different from a regular allocator like Malo which can move the memory around as",
    "start": "627000",
    "end": "633399"
  },
  {
    "text": "it sees fit the second one of these here which we also won't worry about for the purpose of this talk is Cuda maloc where",
    "start": "633399",
    "end": "640800"
  },
  {
    "text": "you essentially allocate memory in system RAM and then you make that accessible to the devices via memory",
    "start": "640800",
    "end": "647279"
  },
  {
    "text": "mapping the reason why you'd want to do this is because it means that your graphics card can access system memory",
    "start": "647279",
    "end": "652320"
  },
  {
    "text": "directly which is super cool and by the way if I just used this the first bug that we had wouldn't have been a bug but",
    "start": "652320",
    "end": "658680"
  },
  {
    "text": "for the sake of this again we're going to ignore that and I just really want to focus on this last one here today which",
    "start": "658680",
    "end": "664600"
  },
  {
    "text": "is managed memory or unified memory now in this case what happens is you're",
    "start": "664600",
    "end": "670040"
  },
  {
    "text": "allocating memory where the physical storage may be either on a hardware device so a GPU or in system memory and",
    "start": "670040",
    "end": "678680"
  },
  {
    "text": "what's funny about this is It's kind of ethereal to an extent because it's not always in one or the other in fact you",
    "start": "678680",
    "end": "685000"
  },
  {
    "text": "can end up with a situation where much like the stars in the sky it's somehow in somehow in The Ether right it moves",
    "start": "685000",
    "end": "691680"
  },
  {
    "text": "between the two depending on what it is that you want or the pattern that you're expressing to the",
    "start": "691680",
    "end": "698519"
  },
  {
    "text": "program I just want to very quickly go over how they achieve this lovely magic",
    "start": "698959",
    "end": "704880"
  },
  {
    "text": "so you'll hear lots of performance tricks from all of us today but one of them is if you don't know what's going on use estrace because it really can",
    "start": "704880",
    "end": "712560"
  },
  {
    "text": "tell you things that are going on that you otherwise didn't know so in this case here I wrote a simple program that",
    "start": "712560",
    "end": "717760"
  },
  {
    "text": "just used Cuda M uh Cuda malog managed to give us some memory and I ran it through estrace now the very first thing",
    "start": "717760",
    "end": "725120"
  },
  {
    "text": "that it does is it opens a file descriptor for this special device here",
    "start": "725120",
    "end": "731279"
  },
  {
    "text": "which is something that Nvidia provide that essentially is an interface between your system memory and the device memory",
    "start": "731279",
    "end": "738279"
  },
  {
    "text": "and then here we're just going to allocate a large slab of memory via mmap",
    "start": "738279",
    "end": "743440"
  },
  {
    "text": "those of you who are very familiar with binary will know that that number there is 64 megabytes exactly so you can't",
    "start": "743440",
    "end": "750279"
  },
  {
    "text": "customize this it will just immediately say please give me 64 megabytes straight away and then after that it deallocates",
    "start": "750279",
    "end": "758600"
  },
  {
    "text": "some memory like it it deallocates 32",
    "start": "758600",
    "end": "763760"
  },
  {
    "text": "megabytes I don't know why I've not been able to find anything written down that says why it would deallocate these 32",
    "start": "763760",
    "end": "769600"
  },
  {
    "text": "megabytes it just does it but then finally after that it takes",
    "start": "769600",
    "end": "775600"
  },
  {
    "text": "the memory that it gave you before adjust it to your alignment and then gives you back the size that you wanted",
    "start": "775600",
    "end": "782240"
  },
  {
    "text": "and that's what this result value here is now you'll notice that the M map is different between this line here and",
    "start": "782240",
    "end": "788079"
  },
  {
    "text": "this line here and the reason why is because here we're specifying where the memory should exist and the important",
    "start": "788079",
    "end": "794240"
  },
  {
    "text": "part of this is that actually this is how we ensure that the pointers are the same across both the system and the",
    "start": "794240",
    "end": "800120"
  },
  {
    "text": "device right we're specifying and saying oh this thing should absolutely be at this address and we should use that file",
    "start": "800120",
    "end": "806399"
  },
  {
    "text": "descriptor that we open up here for that address so really we're specifying and saying this is where this should",
    "start": "806399",
    "end": "814800"
  },
  {
    "text": "live and then when you deallocate it's very very simple we just remap the",
    "start": "815800",
    "end": "820920"
  },
  {
    "text": "memory that we had before and then free what's left over and this is really what's going on under the hood is every",
    "start": "820920",
    "end": "827120"
  },
  {
    "text": "time you do this you're making a series of system calls you're mapping your memory into different places and then it's eventually getting rid of",
    "start": "827120",
    "end": "834560"
  },
  {
    "text": "it okay so now we know all of this I just want to show you what happens in",
    "start": "834560",
    "end": "840519"
  },
  {
    "text": "the profiler when you do this now this is NVIDIA system profiler by the way it's a super useful tool they're not",
    "start": "840519",
    "end": "847160"
  },
  {
    "text": "paying me to say this but I would PR it if they did it it's really really very useful so here you can see essentially",
    "start": "847160",
    "end": "854680"
  },
  {
    "text": "the program that I wrote which we previously ran through estrace so down here on the left you can see that we've",
    "start": "854680",
    "end": "860560"
  },
  {
    "text": "got that maloc managed call which essentially says we're going to allocate this memory fill is the m set function that",
    "start": "860560",
    "end": "867519"
  },
  {
    "text": "we had before and you see that when that actually runs which is that blue line at the top there we immediately have a page",
    "start": "867519",
    "end": "874759"
  },
  {
    "text": "F the reason why this happens is because the way that the driver actually",
    "start": "874759",
    "end": "879959"
  },
  {
    "text": "enforces this etherealness is when you allocate the memory to begin with it doesn't assign it physical storage it",
    "start": "879959",
    "end": "886720"
  },
  {
    "text": "just gives you an opaque page and then when you actually run this the very first time that it faults it's going to",
    "start": "886720",
    "end": "892160"
  },
  {
    "text": "go oh I need to allocate some physical storage for this I've had a page fa and so this long bar here is it actually",
    "start": "892160",
    "end": "898680"
  },
  {
    "text": "allocated in that memory on the device and handling the page and you can see from this bar maybe it's not so clear a",
    "start": "898680",
    "end": "904920"
  },
  {
    "text": "distance that actually most of the time of this very small function running is just handling the page fa in some",
    "start": "904920",
    "end": "912240"
  },
  {
    "text": "settings this won't be true but you can certainly imagine a world in which this ends up taking a great deal of your",
    "start": "912240",
    "end": "917920"
  },
  {
    "text": "time and in fact if you allocate even more memory you actually get a very",
    "start": "917920",
    "end": "923680"
  },
  {
    "text": "similar pattern that has some nice quirks so first of all you'll see that we do get this repeated page on rights",
    "start": "923680",
    "end": "930319"
  },
  {
    "text": "but actually the spacing between them is kind of irregular and the reason why is because",
    "start": "930319",
    "end": "935560"
  },
  {
    "text": "each time you have a page Vault like this the hardware tries to help you and it tries to allocate more memory each",
    "start": "935560",
    "end": "941199"
  },
  {
    "text": "time and that's why you get this very somewhat regular pattern where the first time we don't help much then the second",
    "start": "941199",
    "end": "947560"
  },
  {
    "text": "time the hardware helps more third time it helps even more and so on and this is",
    "start": "947560",
    "end": "953199"
  },
  {
    "text": "interestingly if you expended this line the whole way out you would see that this entire pattern actually repeats",
    "start": "953199",
    "end": "959040"
  },
  {
    "text": "and the reason why is because after this last one here we have an even larger gap",
    "start": "959040",
    "end": "964319"
  },
  {
    "text": "between faults and I don't quite know why this happens but once this does happen the hardware seems to forget that",
    "start": "964319",
    "end": "971920"
  },
  {
    "text": "this is a problem that you're running into and so it stops helping you as much so you'll actually see that this pattern",
    "start": "971920",
    "end": "977000"
  },
  {
    "text": "that repeats will eventually continue to tile itself the entire way",
    "start": "977000",
    "end": "983040"
  },
  {
    "text": "along I think the programming guide for Cuda says it best which is that the physical location of the data is",
    "start": "984440",
    "end": "991079"
  },
  {
    "text": "invisible to a program and may be changed at any time even if that's obvious to you or",
    "start": "991079",
    "end": "996519"
  },
  {
    "text": "not so at any point no matter what you're doing the underlying physical storage of that memory that you're",
    "start": "996519",
    "end": "1002920"
  },
  {
    "text": "accessing by that shared pointer can change and I think this is a really it's",
    "start": "1002920",
    "end": "1008079"
  },
  {
    "text": "worth thinking about this for a second because it's not very often that this happens right it happens a lot with",
    "start": "1008079",
    "end": "1013720"
  },
  {
    "text": "programs right we saw Julie's talk earlier where processes can move but it's actually very rare that memory",
    "start": "1013720",
    "end": "1019040"
  },
  {
    "text": "moves like this in a way that is entirely opaque and in a way that matters this much right it happens",
    "start": "1019040",
    "end": "1024880"
  },
  {
    "text": "sometimes with caches sure but that's kind of different to this because the difference there is that actually you're",
    "start": "1024880",
    "end": "1031480"
  },
  {
    "text": "just making a copy of something right you're just storing something and then you're dealing with it but here your entire program's data can just move if",
    "start": "1031480",
    "end": "1038160"
  },
  {
    "text": "you do it via this pointer this is the second half of this",
    "start": "1038160",
    "end": "1043678"
  },
  {
    "text": "quote which is the access to the data virtual address will remain valid and coherent from any processor regardless",
    "start": "1043679",
    "end": "1049559"
  },
  {
    "text": "of the locality and actually I think this is actually the only way they",
    "start": "1049559",
    "end": "1055000"
  },
  {
    "text": "would be able to do this because you've got so much going on you've got so many processes that are running but I think",
    "start": "1055000",
    "end": "1061360"
  },
  {
    "text": "that this is actually the really very interesting part of this talk is that the accesses must remain valid and",
    "start": "1061360",
    "end": "1067799"
  },
  {
    "text": "that's going to have a lot of very interesting implications for the performance of our program",
    "start": "1067799",
    "end": "1074799"
  },
  {
    "text": "so I've told you all of this and I have told you that functions already exist for Cuda copying so all we need to do",
    "start": "1074799",
    "end": "1081760"
  },
  {
    "text": "right is all we need to use M Copy I mean if we've got a manage pointer on the left and a manage pointer on the right this should be super fast right",
    "start": "1081760",
    "end": "1088440"
  },
  {
    "text": "and it should work because this will run on the CPU the pointers are accessible via the CPU it's going to work great",
    "start": "1088440",
    "end": "1095039"
  },
  {
    "text": "everything's going to run fast right no we are fallen into the pit this",
    "start": "1095039",
    "end": "1101640"
  },
  {
    "text": "is our anonomous Pitfall and you can really see this from this graph here",
    "start": "1101640",
    "end": "1109480"
  },
  {
    "text": "so you'll see that as we increase the size in gigabytes which is the x-axis",
    "start": "1109480",
    "end": "1114919"
  },
  {
    "text": "and the time in oh sorry the gigabytes per second on the y axis you'll see that we're jumping around a lot right a huge",
    "start": "1114919",
    "end": "1121960"
  },
  {
    "text": "amount in fact to begin with when we're copying a gigabyte we're getting just over 600 megabytes per second of",
    "start": "1121960",
    "end": "1128000"
  },
  {
    "text": "throughput and by the time we've gotten the wholeway up to 70 gbt per second we're only getting what",
    "start": "1128000",
    "end": "1135159"
  },
  {
    "text": "085 now I don't know how often you Benchmark your memory bandwidth but that's Dreadful that's really really bad",
    "start": "1135159",
    "end": "1141880"
  },
  {
    "text": "I could write two and from an SSD and get faster than this and the reason why this happens is",
    "start": "1141880",
    "end": "1148760"
  },
  {
    "text": "because of some clever stuff so I'm now going to break out the profile there for a second again this is the Nvidia system",
    "start": "1148760",
    "end": "1156679"
  },
  {
    "text": "profiler and if I open this",
    "start": "1156679",
    "end": "1161919"
  },
  {
    "text": "no ah here we go so if I zoom into this B me a second",
    "start": "1161919",
    "end": "1169720"
  },
  {
    "text": "the keyboard shortcuts don't work on Mac OS this the first time I'm trying it okay so you'll see here that we end",
    "start": "1176520",
    "end": "1184960"
  },
  {
    "text": "up getting CPU page fults so I just want to recap so",
    "start": "1184960",
    "end": "1191559"
  },
  {
    "text": "previously we had the memory on the GPU we've just done something and now we're trying to do a M Copy on the CPU and",
    "start": "1191559",
    "end": "1198760"
  },
  {
    "text": "you'll see here that we have a page fault and this page fault is where the GPU or CPU tries to do a copy and it",
    "start": "1198760",
    "end": "1205000"
  },
  {
    "text": "realizes that it can't access the page and in fact as we Zoom the entire way along although maybe I need to zoom out",
    "start": "1205000",
    "end": "1211320"
  },
  {
    "text": "with it you'll see that we get loads of these we get all of them the entire way",
    "start": "1211320",
    "end": "1217600"
  },
  {
    "text": "along here over and over and over and over and over again in fact in this particular Trace there's something like",
    "start": "1217600",
    "end": "1225120"
  },
  {
    "text": "37,000 or so it's it's tremendously awful quite how much of our time is just",
    "start": "1225120",
    "end": "1232280"
  },
  {
    "text": "spent with these page fs and there's an interesting interaction here between the",
    "start": "1232280",
    "end": "1237840"
  },
  {
    "text": "device the graphics card and the CPU which is that actually the we're limited",
    "start": "1237840",
    "end": "1244360"
  },
  {
    "text": "here by the page size of our CPU so if we think about the anatomy of a page F what happens the first thing is",
    "start": "1244360",
    "end": "1252440"
  },
  {
    "text": "that we the CPU is going through memory and it goes oh I haven't got this I'm",
    "start": "1252440",
    "end": "1257760"
  },
  {
    "text": "going to need to request it so it allocates some space it contacts the GPU",
    "start": "1257760",
    "end": "1262799"
  },
  {
    "text": "and it says hey I need this much memory and the GPU gives it back and that amount of memory by definition can only",
    "start": "1262799",
    "end": "1269000"
  },
  {
    "text": "be the page size of your system and here all of these lines that we see although admittedly here they're so contiguous",
    "start": "1269000",
    "end": "1275400"
  },
  {
    "text": "that you can't really see them they're all 4 kilobyte page fs and something I",
    "start": "1275400",
    "end": "1281720"
  },
  {
    "text": "didn't do which I probably should have done is I didn't check how this changes if you increase the page size I would",
    "start": "1281720",
    "end": "1288840"
  },
  {
    "text": "guess that you would still get the same result as this but it would be less horrendous it would probably be slightly",
    "start": "1288840",
    "end": "1293960"
  },
  {
    "text": "better and that's because each time we have one of these problems we end up with a CIS call because we have to deal",
    "start": "1293960",
    "end": "1299320"
  },
  {
    "text": "with the page file and it's just it's very very expensive to go through this and to get an answer out that is",
    "start": "1299320",
    "end": "1305880"
  },
  {
    "text": "actually useful so this is it captured again here",
    "start": "1305880",
    "end": "1311679"
  },
  {
    "text": "you can see that we end up with all of these page faults over this span which is really you it's not great for our",
    "start": "1311679",
    "end": "1317360"
  },
  {
    "text": "performance this is the same thing but zoomed in because I just want to show some",
    "start": "1317360",
    "end": "1323080"
  },
  {
    "text": "causality to you so as we Zoom really really far in here you can see that we end up with this regular repeating",
    "start": "1323080",
    "end": "1329080"
  },
  {
    "text": "pattern of page fs and once again something that's interesting is these patterns repeat and",
    "start": "1329080",
    "end": "1337000"
  },
  {
    "text": "they're equally spaced oh sorry they're unequally spaced you can see for these two here we have a very small Gap and",
    "start": "1337000",
    "end": "1342720"
  },
  {
    "text": "there sight a large gap and there sight a large gap and there sight a large gap and that this pattern repeats and the",
    "start": "1342720",
    "end": "1348080"
  },
  {
    "text": "reason for this I'm not sure if you can see but you have these purple blocks here followed by the Red Blocks and this",
    "start": "1348080",
    "end": "1355240"
  },
  {
    "text": "is the hardware trying to help you this is the hardware trying to give you more than you've asked for so each of these",
    "start": "1355240",
    "end": "1361520"
  },
  {
    "text": "red lines are a page Vault for 4K and then the purple lines are a speculative",
    "start": "1361520",
    "end": "1367120"
  },
  {
    "text": "prefetch so it realizes oh I've had this page fault that's really bad I'm going to transfer over more memory and as",
    "start": "1367120",
    "end": "1373840"
  },
  {
    "text": "before you can see that the width of each of these blocks grows the more times you find",
    "start": "1373840",
    "end": "1379400"
  },
  {
    "text": "so by the time you get here I think it's something like 2 GB it transfers back over say but",
    "start": "1379400",
    "end": "1386240"
  },
  {
    "text": "if right at the bottom it's only I think 64 kilobytes so each time you make this",
    "start": "1386240",
    "end": "1391919"
  },
  {
    "text": "mistake it tries to give you more memory to make things faster this is all handled in the",
    "start": "1391919",
    "end": "1398760"
  },
  {
    "text": "hardware by the way you don't need to do anything it's just done by the device",
    "start": "1398760",
    "end": "1403919"
  },
  {
    "text": "directly but Jo I hear you say you've already told me this functions exist",
    "start": "1403960",
    "end": "1409559"
  },
  {
    "text": "right we have Cuda M Copy to copy between things why are you writing your own M Copy and sure enough actually it",
    "start": "1409559",
    "end": "1416840"
  },
  {
    "text": "does give you some better results if you use it so this purple line down here is if we use manag memory but we specify it",
    "start": "1416840",
    "end": "1425080"
  },
  {
    "text": "that we're copying from the device back to the CPU and this is just only everod",
    "start": "1425080",
    "end": "1430320"
  },
  {
    "text": "slightly faster than what we had before and you'll see that we still end up with this sort of relatively stepwise",
    "start": "1430320",
    "end": "1436559"
  },
  {
    "text": "curve and this is just because it can handle the prefetches more efficiently meanwhile if we go the other",
    "start": "1436559",
    "end": "1442559"
  },
  {
    "text": "way around so we go from the device back to the host you can see that we end up with this very fast line",
    "start": "1442559",
    "end": "1451120"
  },
  {
    "text": "right we get up to about 10 gabes per second coming back and this is just because of the pages again so it turns",
    "start": "1451120",
    "end": "1458880"
  },
  {
    "text": "out that the GPU actually has more capacity for dealing with larger Pages up to 2 megabytes and that's really what",
    "start": "1458880",
    "end": "1465120"
  },
  {
    "text": "you see here you end up with this nice curve that gives you something that is slightly better but it's still not great",
    "start": "1465120",
    "end": "1473000"
  },
  {
    "text": "right 10 GB per second of transfer is still not incredible and so just to summarize this",
    "start": "1473000",
    "end": "1480559"
  },
  {
    "text": "if you're writing code that needs to deal with this generically I highly recommend that you don't use standard",
    "start": "1480559",
    "end": "1485600"
  },
  {
    "text": "functions and you just prefer the Cuda functions so here you can see that even in the slowest case which is this purple",
    "start": "1485600",
    "end": "1492120"
  },
  {
    "text": "line here we're roughly twice as fast as on this slide here",
    "start": "1492120",
    "end": "1498440"
  },
  {
    "text": "and that is just a oneline change I didn't do anything else the the operation that's happening under the",
    "start": "1498440",
    "end": "1503480"
  },
  {
    "text": "hood is still the same and in situations where you can get more of a speed up like this green line here you'll see",
    "start": "1503480",
    "end": "1509880"
  },
  {
    "text": "that actually it's kind of it's still worth it right just to do this",
    "start": "1509880",
    "end": "1515398"
  },
  {
    "text": "generically but of course all of this begs a question which is that all of",
    "start": "1516360",
    "end": "1521679"
  },
  {
    "text": "this cost has come from the fact that we're handling page holds we're handling the fact that our physical memory isn't",
    "start": "1521679",
    "end": "1527880"
  },
  {
    "text": "mapped to the place where we're doing the work and so a question that you might have is well what if we just move",
    "start": "1527880",
    "end": "1534600"
  },
  {
    "text": "them to the same place to begin with right what if as opposed to doing the copy between GPU and CPU we just moved",
    "start": "1534600",
    "end": "1540279"
  },
  {
    "text": "the memory to the right location and we did the copy there and so conveniently Cuda lets you do this I'm",
    "start": "1540279",
    "end": "1547679"
  },
  {
    "text": "really not a fan of this prefetch term because it's not really a prefetch it's a migration but all this does is it says",
    "start": "1547679",
    "end": "1554799"
  },
  {
    "text": "I'm going to ask you please to move the memory that is backed under this pointer",
    "start": "1554799",
    "end": "1560520"
  },
  {
    "text": "to the destination device and you can put it on a stream if you want force it to take some to be consistent with some",
    "start": "1560520",
    "end": "1567760"
  },
  {
    "text": "previous operations or to wait until some previous operations are finished but I do just want to point out",
    "start": "1567760",
    "end": "1573120"
  },
  {
    "text": "that you do need to specify the size and this actually gives you a really clever trick which is that you",
    "start": "1573120",
    "end": "1580399"
  },
  {
    "text": "can if you want to only Force some of the pages to be in any one given place",
    "start": "1580399",
    "end": "1586240"
  },
  {
    "text": "so with this you can actually end up with an array it's split across multiple devices across the CPU and the GPU you",
    "start": "1586240",
    "end": "1592399"
  },
  {
    "text": "can split it however you want and that actually gives you a different sort of parallelism in a way because if if for",
    "start": "1592399",
    "end": "1598520"
  },
  {
    "text": "whatever reason you wanted to you could do an update on an array on the GPU and on the CPU at the same time and it would",
    "start": "1598520",
    "end": "1605120"
  },
  {
    "text": "all work fine because of the guarantees that they give you so if we do this and we do the",
    "start": "1605120",
    "end": "1611960"
  },
  {
    "text": "prefetch just on the source so if we're copying from one vector to sorry from",
    "start": "1611960",
    "end": "1617399"
  },
  {
    "text": "one pointer to another and we just move the source pointer to the device you can see that we get a much nicer curve",
    "start": "1617399",
    "end": "1624360"
  },
  {
    "text": "still right you can see the increases here it flat lines about 16 GB per second which is kind of okay and then it",
    "start": "1624360",
    "end": "1631840"
  },
  {
    "text": "drops right like a stone now the reason for this is actually depends on your device so all",
    "start": "1631840",
    "end": "1637960"
  },
  {
    "text": "of the numbers in this talk were gathered on a h100 and a h100 has 80 GB of memory and so you can see that whilst",
    "start": "1637960",
    "end": "1647000"
  },
  {
    "text": "both are prefetched and our destination array can fit in memory everything goes fine and then right at the point here",
    "start": "1647000",
    "end": "1654159"
  },
  {
    "text": "when they can no longer both fit our performance tanks and this again just happens because we're now in the realm",
    "start": "1654159",
    "end": "1661519"
  },
  {
    "text": "of getting many many page vots again right we're encountering these page fults we're going to end up with a situation where we're trying to write to",
    "start": "1661519",
    "end": "1667399"
  },
  {
    "text": "something or trying to read something that we don't already have and so our memory just completely flat",
    "start": "1667399",
    "end": "1673159"
  },
  {
    "text": "lines and this is even more pronounced if we try to prefetch them both",
    "start": "1673159",
    "end": "1678919"
  },
  {
    "text": "so if we try to prefetch both of the pointers ahead of time which is what you can see here you'll see that we get a",
    "start": "1678919",
    "end": "1686159"
  },
  {
    "text": "huge amount of performance right this is 1300 gabyt per second it's huge it's so",
    "start": "1686159",
    "end": "1692640"
  },
  {
    "text": "fast because we're doing a copy between the memory on the GPU and the memory that is also on the GPU and this works",
    "start": "1692640",
    "end": "1698880"
  },
  {
    "text": "really really well right up until we get to the point where neither or both pointers don't fit in memory anymore and",
    "start": "1698880",
    "end": "1704799"
  },
  {
    "text": "then our memory bandwidth just completely crashes right I think this is something like 600 times slower this",
    "start": "1704799",
    "end": "1712159"
  },
  {
    "text": "line here because what we've done here is we've actually given up the ability to be able to proactively manage this",
    "start": "1712159",
    "end": "1719799"
  },
  {
    "text": "right we've essentially said we're just going to let you deal with it and then we're going to get the poor performance we had",
    "start": "1719799",
    "end": "1725240"
  },
  {
    "text": "before and this is a very visual representation of what that looks like so you can see here that we have all of",
    "start": "1725240",
    "end": "1731679"
  },
  {
    "text": "these red blocks of Doom as it were and you can see that they're mostly surrounding read requests so we're",
    "start": "1731679",
    "end": "1738440"
  },
  {
    "text": "trying to read some memory and we don't have it and so we transfer it from the",
    "start": "1738440",
    "end": "1744600"
  },
  {
    "text": "host to the device and then this second line here is US saying oh no we're out of memory we have to get rid of",
    "start": "1744600",
    "end": "1750640"
  },
  {
    "text": "something back into system memory so that we can read more stuff in and you'll see that this continuously",
    "start": "1750640",
    "end": "1756519"
  },
  {
    "text": "happens and I'll be honest with you the system's not that clever at deciding",
    "start": "1756519",
    "end": "1761600"
  },
  {
    "text": "what it should get rid of and what it shouldn't I've seen this before where it's really really screwed up and really",
    "start": "1761600",
    "end": "1767760"
  },
  {
    "text": "really given us very poor performance because it's evicted things that we haven't even used yet and so we're",
    "start": "1767760",
    "end": "1773519"
  },
  {
    "text": "constantly reading things from memory that actually we really would rather not have to keep rereading and you can see that here with",
    "start": "1773519",
    "end": "1780720"
  },
  {
    "text": "these continued page faults for reads and for writes so our second conclusion is that",
    "start": "1780720",
    "end": "1788240"
  },
  {
    "text": "we need to manage these copies more carefully right we can't let the hardware deal with it for us we've got to somehow do better by",
    "start": "1788240",
    "end": "1795000"
  },
  {
    "text": "ourselves and so the solution to this is we're going to end up with we're",
    "start": "1795000",
    "end": "1800039"
  },
  {
    "text": "going to want to end up with a profile that looks something a little bit more like this now this is actually a trace",
    "start": "1800039",
    "end": "1805760"
  },
  {
    "text": "from a running program that we had Inn the a pool side this was actually the problem that I was sent to diagnose and",
    "start": "1805760",
    "end": "1811519"
  },
  {
    "text": "you can see here that we've got kind of these memory accesses here but by the time we get to this bit it just",
    "start": "1811519",
    "end": "1816679"
  },
  {
    "text": "completely crashes right our bandwidth goes horrendously we're constantly just",
    "start": "1816679",
    "end": "1822039"
  },
  {
    "text": "faulting and you can see that with the spikes on the PCI Express bandwidth numbers up here you can see that we just",
    "start": "1822039",
    "end": "1828240"
  },
  {
    "text": "Spike we just end up consuming more and more by the way so I know that on this chart here we had it sort of went down",
    "start": "1828240",
    "end": "1836120"
  },
  {
    "text": "at 40 GB but actually you can see this graph under any circumstances if your",
    "start": "1836120",
    "end": "1842399"
  },
  {
    "text": "device memory is full so if you use the Cuda maloc API from before and your device memory is really full remember it",
    "start": "1842399",
    "end": "1849200"
  },
  {
    "text": "will never get evicted and so you can arbitrarily move where this graph sits to the left by just allocating more card",
    "start": "1849200",
    "end": "1856799"
  },
  {
    "text": "memory so I think think in our case it was something like we were moving 512 megabytes repeatedly and it was causing",
    "start": "1856799",
    "end": "1863440"
  },
  {
    "text": "this unbelievably slow bandwidth because it was constantly trying to evict things it needed to work on it's actually very",
    "start": "1863440",
    "end": "1870120"
  },
  {
    "text": "easy to trigger this Behavior so what we need to do here is we need to manage these copies more",
    "start": "1870120",
    "end": "1877080"
  },
  {
    "text": "carefully and I'm very quickly going to show you how to do that so the first thing we're going to do is we're going",
    "start": "1877080",
    "end": "1883639"
  },
  {
    "text": "to Define this prefet size here now this corresponds roughly 2 megabytes of data",
    "start": "1883639",
    "end": "1890159"
  },
  {
    "text": "that we're reading and I'm going to make two streams which are S1 and",
    "start": "1890159",
    "end": "1895600"
  },
  {
    "text": "S2 now these streams are important because it's going to enable us to cue our operations",
    "start": "1895600",
    "end": "1901799"
  },
  {
    "text": "properly and then of course here I'm just going to calculate the number of prefetches that we need and this is this is the magic of",
    "start": "1901799",
    "end": "1909399"
  },
  {
    "text": "the loop so what we're going to do is we're going to start doing this copy and",
    "start": "1909399",
    "end": "1915399"
  },
  {
    "text": "the very first time we're going to prefetch the previous thing that we had and we're going to send it back to the",
    "start": "1915399",
    "end": "1921600"
  },
  {
    "text": "CPU so that's what this CPU device ID thing means here so we've done some operation we've taken some data and",
    "start": "1921600",
    "end": "1927840"
  },
  {
    "text": "we're going to send the bit that we had before and we're going to push that back to CPU memory and again we have to do",
    "start": "1927840",
    "end": "1933679"
  },
  {
    "text": "this explicitly because otherwise our performance is just going to tank but also because the CPU needs to be",
    "start": "1933679",
    "end": "1940799"
  },
  {
    "text": "involved with remapping things back into its own memory right you can't just unilaterally do it you need to give it",
    "start": "1940799",
    "end": "1947519"
  },
  {
    "text": "that back and it needs to be involved in that and so the way that we say this is we go okay well we're going to cue those",
    "start": "1947519",
    "end": "1953799"
  },
  {
    "text": "on a particular stream and we're going to explicitly send them back to the",
    "start": "1953799",
    "end": "1959120"
  },
  {
    "text": "CPU the next thing we're going to do is we're going to prefetch the blocks that",
    "start": "1959240",
    "end": "1964639"
  },
  {
    "text": "we need from system memory back onto the card so this device ID thing here is",
    "start": "1964639",
    "end": "1969919"
  },
  {
    "text": "just a placeholder that says this is the idea of the device that we're sending the stuff to and you'll notice that we",
    "start": "1969919",
    "end": "1976159"
  },
  {
    "text": "use a different stream here now you could do this on the same stream you could use S1 for this as well but",
    "start": "1976159",
    "end": "1983159"
  },
  {
    "text": "actually in practice it doesn't really make it much better it it it it's better to do it like this because your GPU is",
    "start": "1983159",
    "end": "1990279"
  },
  {
    "text": "already doing things like it's kind of useful to have it know that it's got things that it's got to do stuff",
    "start": "1990279",
    "end": "1996440"
  },
  {
    "text": "on I think I'm missing a slide but anyway if you do this and you unroll the",
    "start": "1996440",
    "end": "2002120"
  },
  {
    "text": "entire thing you end up with this line at the bottom here so you can see that",
    "start": "2002120",
    "end": "2008279"
  },
  {
    "text": "unlike our previous graph which we had back here where we had lots and lots",
    "start": "2008279",
    "end": "2013639"
  },
  {
    "text": "of these not very nice Red Lines by the time we get to here the red",
    "start": "2013639",
    "end": "2019720"
  },
  {
    "text": "lines have all but disappeared in fact there's this tiny tiny one here but that's a bug that I still not worked out",
    "start": "2019720",
    "end": "2025799"
  },
  {
    "text": "what it is so we're going to ignore that for the sake of this and you can see that just by combining these variously",
    "start": "2025799",
    "end": "2032120"
  },
  {
    "text": "clever prefetches and sending things back to where they were before and managing them everything gets much",
    "start": "2032120",
    "end": "2038799"
  },
  {
    "text": "better in fact I don't have the hard numbers in the slides but at least from",
    "start": "2038799",
    "end": "2044519"
  },
  {
    "text": "what I've done impromptu this actually beats most of the standard Kuda functions for doing this if you write",
    "start": "2044519",
    "end": "2050800"
  },
  {
    "text": "your own custom code and you're careful about dealing with this and you can track how much memory you've allocated",
    "start": "2050800",
    "end": "2056040"
  },
  {
    "text": "this will be all of the standard Library qua functions at least on the hardware that I have access to under the drivers I have access to you know all the usual",
    "start": "2056040",
    "end": "2062800"
  },
  {
    "text": "caveats right now with all of that said I want",
    "start": "2062800",
    "end": "2068320"
  },
  {
    "text": "to return to this MGB here you'll notice we've blitzed through",
    "start": "2068320",
    "end": "2074679"
  },
  {
    "text": "a lot of stuff right we've gone through a lot of Hardware stuff and I find it so",
    "start": "2074679",
    "end": "2079960"
  },
  {
    "text": "astounding that originally when we were talking about this we were like oh this single pointer is going to make our lives so much simpler right just having",
    "start": "2079960",
    "end": "2086480"
  },
  {
    "text": "one one pointer that we can use across both devices and across system memory it's going to make our lives great right",
    "start": "2086480",
    "end": "2092040"
  },
  {
    "text": "everything's going be so much easier and in a way it kind of reminds me of the upgrade from this car to the Volvo",
    "start": "2092040",
    "end": "2098520"
  },
  {
    "text": "right we've designed stuff and we've put stuff into the world under the the Mantra of it being simple but actually I",
    "start": "2098520",
    "end": "2106000"
  },
  {
    "text": "don't think that's really true right I mean we're on slide 51 and I spent all of this time",
    "start": "2106000",
    "end": "2112240"
  },
  {
    "text": "explaining this stuff to you around something that should have been simple and it's it's just not it's actually",
    "start": "2112240",
    "end": "2118160"
  },
  {
    "text": "very complicated at this point I think I'd rather just manage the copies myself and I think it's it really comes down to",
    "start": "2118160",
    "end": "2124640"
  },
  {
    "text": "the fact that much like this car we're programming for a computer that was designed 50 years ago right we're",
    "start": "2124640",
    "end": "2131880"
  },
  {
    "text": "programming for pdp1 we're using the same stuff that we've always done and actually we've actively resisted",
    "start": "2131880",
    "end": "2139480"
  },
  {
    "text": "change because if for those of you who are at least in some retro Computing we",
    "start": "2139480",
    "end": "2144640"
  },
  {
    "text": "had this discussion with near and far pointers in the '90s right we had this idea of changing the language so that we",
    "start": "2144640",
    "end": "2149960"
  },
  {
    "text": "could express the hardware more explicitly and we just haven't we've",
    "start": "2149960",
    "end": "2155640"
  },
  {
    "text": "we've actively tried to stop ourselves from from changing the tools that we use to meet the hardware that we're running",
    "start": "2155640",
    "end": "2161079"
  },
  {
    "text": "on and I really I want to highlight this point home it is impossible to",
    "start": "2161079",
    "end": "2167240"
  },
  {
    "text": "statically determine if this function works or if this code works right the",
    "start": "2167240",
    "end": "2172640"
  },
  {
    "text": "compiler can't tell you assuming that these functions are public you you can't know because you",
    "start": "2172640",
    "end": "2179280"
  },
  {
    "text": "have no way of expressing succinctly but this pointer here that is passed in is something on which you can",
    "start": "2179280",
    "end": "2185599"
  },
  {
    "text": "operate and trust me this will not blow up your computer or anything like everything will work fine there's no",
    "start": "2185599",
    "end": "2190800"
  },
  {
    "text": "memory violations here the hardware is clever enough but it strikes me as so weird that you can't just say by the way",
    "start": "2190800",
    "end": "2197560"
  },
  {
    "text": "this thing needs to be this and expect it to work safely in any meaningful",
    "start": "2197560",
    "end": "2203359"
  },
  {
    "text": "sense we've resisted all of this change and it's really not been that good so I",
    "start": "2203359",
    "end": "2209560"
  },
  {
    "text": "want to give you some takeaways before the end here so the very first thing I want you to do is I want you to profile",
    "start": "2209560",
    "end": "2215040"
  },
  {
    "text": "your code and in particular I want you to profile your code right I want you to",
    "start": "2215040",
    "end": "2220440"
  },
  {
    "text": "use different tools I want you to try clever and Innovative things like estrace I want you to really try to",
    "start": "2220440",
    "end": "2226119"
  },
  {
    "text": "understand why things are happening the way they're happening because although computers are confusing There is almost",
    "start": "2226119",
    "end": "2231680"
  },
  {
    "text": "always a reason it might be a cosmic ray it might be something crazy it might be something that none of us understand but",
    "start": "2231680",
    "end": "2237720"
  },
  {
    "text": "fundamentally there is always a reason for this I want you to consider where you",
    "start": "2237720",
    "end": "2243800"
  },
  {
    "text": "can simplify things and I don't mean this in the sense of simplify like I've WR in this Loop or something like that I",
    "start": "2243800",
    "end": "2249079"
  },
  {
    "text": "mean when someone reads your code for the first time do you have to give them an hour presentation before they know",
    "start": "2249079",
    "end": "2254280"
  },
  {
    "text": "why it's doing what it's doing that's probably not that simple even if it looks it but above all I really want you to",
    "start": "2254280",
    "end": "2262359"
  },
  {
    "text": "choose performance and by that I mean if in doubt performance is good with all",
    "start": "2262359",
    "end": "2267640"
  },
  {
    "text": "that said I'd like to say thank you very much and make sure you vote and leave feedback thank you",
    "start": "2267640",
    "end": "2275160"
  },
  {
    "text": "yeah sure question I mean um so where does that um mechanism of",
    "start": "2282160",
    "end": "2290960"
  },
  {
    "text": "that um shared memory or of the architecture comes from if in the end",
    "start": "2290960",
    "end": "2296079"
  },
  {
    "text": "you tell us it's it's easier or it makes more sense to to do it ourselves so",
    "start": "2296079",
    "end": "2302400"
  },
  {
    "text": "Nvidia and AMD both sell it as an easier way to get your program started so if",
    "start": "2302400",
    "end": "2307760"
  },
  {
    "text": "you've got an old Legacy CPU application and you want to Port it to a GPU and you want to start early in a way that you",
    "start": "2307760",
    "end": "2314240"
  },
  {
    "text": "can sort of be aware when things are breaking you should use unified memory and actually it does make your life",
    "start": "2314240",
    "end": "2319760"
  },
  {
    "text": "easier in some ways it's just if you're trying to use it in an environment where performance really matters I don't think",
    "start": "2319760",
    "end": "2325839"
  },
  {
    "text": "it's worth it so it's for migration reasons or compatibility exactly but you will see some people using it for other",
    "start": "2325839",
    "end": "2332400"
  },
  {
    "text": "reasons so for example if you need more memory then you can fit in your your GPU",
    "start": "2332400",
    "end": "2338079"
  },
  {
    "text": "so let's say your working set is 100 gigs and your device memory is 80 it is useful to sometimes have this but",
    "start": "2338079",
    "end": "2344160"
  },
  {
    "text": "actually I don't ever think it's better than just doing it by yourself and in fact in the end that was exactly what we ended up doing right we ended up doing",
    "start": "2344160",
    "end": "2350000"
  },
  {
    "text": "the copies by hand because it just just wasn't performant enough for us and it was too hard to predict as well okay",
    "start": "2350000",
    "end": "2356240"
  },
  {
    "text": "thanks",
    "start": "2356240",
    "end": "2359240"
  },
  {
    "text": "uh was the overhead that you saw in your your M copies always pageold related like if if you were copying twice from",
    "start": "2368839",
    "end": "2376560"
  },
  {
    "text": "device to host would the second copy be fast actually it wasn't so I will open",
    "start": "2376560",
    "end": "2382319"
  },
  {
    "text": "this profile for you here and you'll see here that the our",
    "start": "2382319",
    "end": "2388760"
  },
  {
    "text": "occupancy so the amount that our device is being used is actually really very high what happens here is it goes back",
    "start": "2388760",
    "end": "2395880"
  },
  {
    "text": "to the coherency thing that I said before so when you're dealing with memory in any way the actual device Hardware needs",
    "start": "2395880",
    "end": "2402920"
  },
  {
    "text": "to make sure that it's the it's view of the memory is consistent everywhere so even if you're just requesting that same",
    "start": "2402920",
    "end": "2409880"
  },
  {
    "text": "page across multiple places on the same device it will store so actually just counting number of page FS is not enough",
    "start": "2409880",
    "end": "2416720"
  },
  {
    "text": "that there's certain tricks you can do when you're writing your code to make sure that actually each page that you're reading is only needed in one place but",
    "start": "2416720",
    "end": "2423839"
  },
  {
    "text": "it doesn't really overcome the issues",
    "start": "2423839",
    "end": "2428119"
  },
  {
    "text": "[Music]",
    "start": "2429370",
    "end": "2434820"
  }
]