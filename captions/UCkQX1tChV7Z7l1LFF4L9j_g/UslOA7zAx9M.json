[
  {
    "start": "0",
    "end": "177000"
  },
  {
    "text": "can i get a quick show of hands like who is more just oh no who is more on the",
    "start": "4400",
    "end": "9840"
  },
  {
    "text": "architecture side of the house architects here hands up it's kind of hard to see a",
    "start": "9840",
    "end": "15759"
  },
  {
    "text": "fair amount who is who is on the development side and okay like actual coding right",
    "start": "15759",
    "end": "21840"
  },
  {
    "text": "and any operators here devops sre whatever the title is ah the smallest amount of people right",
    "start": "21840",
    "end": "29279"
  },
  {
    "text": "so a little disappointment i'm not going to talk about coding right i'm going to talk about like what",
    "start": "29279",
    "end": "35200"
  },
  {
    "text": "happens actually not really talking about microservices that much per se i'm going to talk about",
    "start": "35200",
    "end": "41520"
  },
  {
    "text": "like what happens when your micro service applications continue to evolve and get connected",
    "start": "41520",
    "end": "48719"
  },
  {
    "text": "with other systems right once you start composing things right you work in many teams",
    "start": "48719",
    "end": "54160"
  },
  {
    "text": "everybody deploys to production all the time you get what we call a service landscape and",
    "start": "54160",
    "end": "60960"
  },
  {
    "text": "that's really driven by organic federated growth right organic federated growth really means",
    "start": "60960",
    "end": "67600"
  },
  {
    "text": "you are each team has the business objectives and you deploy new systems fairly organically if you",
    "start": "67600",
    "end": "74400"
  },
  {
    "text": "need something you deploy it eighty percent of whatever you need is already in the enterprise",
    "start": "74400",
    "end": "79759"
  },
  {
    "text": "right you're just talking to it right there isn't so much um a blueprint or a full-on architecture",
    "start": "79759",
    "end": "87280"
  },
  {
    "text": "but it has a really interesting couple characteristics that i'm going to get into so",
    "start": "87280",
    "end": "93920"
  },
  {
    "text": "now i want to really point out upfront that organic federated growth is super important it's a good thing",
    "start": "93920",
    "end": "100159"
  },
  {
    "text": "right that's what gives you speed to build on top of existing things and but it also requires a totally",
    "start": "100159",
    "end": "106880"
  },
  {
    "text": "different way of runtime control in operations right and to illustrate that i want to start",
    "start": "106880",
    "end": "113280"
  },
  {
    "text": "off with an illuminating like um story from old school operations and this is one of these airlines things",
    "start": "113280",
    "end": "119439"
  },
  {
    "text": "right um july 2016 uh southwest melted down um what happened is with one router out",
    "start": "119439",
    "end": "126560"
  },
  {
    "text": "of two thousand in a dallas knock just failed right and it failed in a",
    "start": "126560",
    "end": "131680"
  },
  {
    "text": "weird way because it was of course it was monitored up the zoo with um agents and monitors and all the",
    "start": "131680",
    "end": "136959"
  },
  {
    "text": "lights were green except syrup you know zero packets out billions of packets in nothing coming",
    "start": "136959",
    "end": "142720"
  },
  {
    "text": "out right um so what happened is operations crammed of course and it took them 30",
    "start": "142720",
    "end": "149120"
  },
  {
    "text": "minutes to discover what's going on 12 further hours of rebooting rebooting",
    "start": "149120",
    "end": "154239"
  },
  {
    "text": "adjacent systems that had gone out of sync couldn't catch up with you know what happened had stale data these kind of",
    "start": "154239",
    "end": "160720"
  },
  {
    "text": "things meanwhile all other systems that relied on those systems were",
    "start": "160720",
    "end": "165840"
  },
  {
    "text": "down right now flight crews couldn't get bored because the data how long they were in the air were not available right and stuff like that",
    "start": "165840",
    "end": "172400"
  },
  {
    "text": "it's a really interesting remarkable chain of events um and a",
    "start": "172400",
    "end": "178720"
  },
  {
    "start": "177000",
    "end": "240000"
  },
  {
    "text": "pretty spectacular outcome right one route of five days of downtime 80 million dollars of losses directly",
    "start": "178720",
    "end": "184159"
  },
  {
    "text": "like canceled flights and all that hotels and um um almost three and a half billion dollars wiped off the market cap",
    "start": "184159",
    "end": "190800"
  },
  {
    "text": "right and they're two important learnings here at least two at least two so number one",
    "start": "190800",
    "end": "196959"
  },
  {
    "text": "is monitoring at the wrong level visibility at the wrong level right all these green lights didn't mean",
    "start": "196959",
    "end": "202159"
  },
  {
    "text": "anything right um and the second learning is that",
    "start": "202159",
    "end": "208000"
  },
  {
    "text": "you need to have control over system interactions right if they could have pushed back against",
    "start": "208000",
    "end": "214319"
  },
  {
    "text": "these systems if they could have you know with right the you know the correct visibility",
    "start": "214319",
    "end": "220239"
  },
  {
    "text": "seeing the incident earlier seeing all these packets coming into nothing coming out",
    "start": "220239",
    "end": "225280"
  },
  {
    "text": "and then push back on the requesting systems until that was resolved none of that",
    "start": "225280",
    "end": "231519"
  },
  {
    "text": "would have happened right so both things important see detecting um really quickly and then",
    "start": "231519",
    "end": "238959"
  },
  {
    "text": "also um having an ability to push back and that's what i'm going to talk about the criticality of",
    "start": "238959",
    "end": "244720"
  },
  {
    "start": "240000",
    "end": "377000"
  },
  {
    "text": "mission control in complex uh service landscapes complex architectures",
    "start": "244720",
    "end": "251120"
  },
  {
    "text": "that compose it architectures right and there are three key terms service",
    "start": "251120",
    "end": "257440"
  },
  {
    "text": "landscape you're going to hear all over and over in this talk right and then characteristics of these service",
    "start": "257440",
    "end": "262960"
  },
  {
    "text": "landscapes which is really about stability and security um",
    "start": "262960",
    "end": "268639"
  },
  {
    "text": "that are different from normal applications and i'm going to talk about this why is this a new reality that we're",
    "start": "268639",
    "end": "274320"
  },
  {
    "text": "facing here and then how what can you do about it operational patterns right",
    "start": "274320",
    "end": "279440"
  },
  {
    "text": "that's going to come up i'm also going to talk about common strategies to cope with complexity and service",
    "start": "279440",
    "end": "284880"
  },
  {
    "text": "architectures and why they don't really work for these composite architectures and then bring examples about like how",
    "start": "284880",
    "end": "291360"
  },
  {
    "text": "you can remediate reactively with patterns and how you can proactively create new um new use cases and",
    "start": "291360",
    "end": "299600"
  },
  {
    "text": "you know help yourself forward in the industry a little bit about myself",
    "start": "299600",
    "end": "304720"
  },
  {
    "text": "as um colin said ceo co-founder of glasgnostic my previous company was at platform as a",
    "start": "304720",
    "end": "311199"
  },
  {
    "text": "service and um became a redhead open shift so i spent a couple years at redhead",
    "start": "311199",
    "end": "317440"
  },
  {
    "text": "fully focused of course and like how do we build applications how can we ideally support building applications right",
    "start": "317440",
    "end": "322960"
  },
  {
    "text": "and the two interesting things that are to me interesting things that i learned right that from a technical perspective all these",
    "start": "322960",
    "end": "330240"
  },
  {
    "text": "applications that we've seen that were meaningful were not applications at all right they were all systems of",
    "start": "330240",
    "end": "336840"
  },
  {
    "text": "applications there's a tremendous amount of complexity going on and the second was that",
    "start": "336840",
    "end": "342000"
  },
  {
    "text": "the successful again from a technical perspective successful systems of these applications were not",
    "start": "342000",
    "end": "350000"
  },
  {
    "text": "successful because they were you know well-engineered were successful because we were operated",
    "start": "350000",
    "end": "355280"
  },
  {
    "text": "well there was a great operations team behind it that right levels the high the right knobs so",
    "start": "355280",
    "end": "361039"
  },
  {
    "text": "that's what i'm going to talk about and that's why our vision is really to bring runtime",
    "start": "361039",
    "end": "366319"
  },
  {
    "text": "control to enterprises to large service landscapes and enterprises",
    "start": "366319",
    "end": "373759"
  },
  {
    "text": "all right so i want to zoom out why is this a new reality how do these",
    "start": "376479",
    "end": "382800"
  },
  {
    "start": "377000",
    "end": "509000"
  },
  {
    "text": "things come about right a service landscape and i'm going to start with the new agile operating model that we",
    "start": "382800",
    "end": "389600"
  },
  {
    "text": "all live in now right and it starts with like we are all working in small teams self-managing autonomous teams we",
    "start": "389600",
    "end": "396400"
  },
  {
    "text": "have rapid decision learning cycles right and then at the same time we can really",
    "start": "396400",
    "end": "402880"
  },
  {
    "text": "pro you know benefit from a fast cloud ecosystem with hundreds of lego blocks that we can",
    "start": "402880",
    "end": "409599"
  },
  {
    "text": "readily use and then there's cloud native technology we can put this all together right and of course all these two pizza",
    "start": "409599",
    "end": "415759"
  },
  {
    "text": "teams that we have now can deploy in parallel right so a lot of things a lot of forward movement is happening",
    "start": "415759",
    "end": "422160"
  },
  {
    "text": "in the space and that has a profound effect on the architecture side of things right",
    "start": "422160",
    "end": "427919"
  },
  {
    "text": "that has already evolved from microservices don't take pictures now the slide is going to build later",
    "start": "427919",
    "end": "434960"
  },
  {
    "text": "microservices and then you know to shared services many microservice",
    "start": "434960",
    "end": "440000"
  },
  {
    "text": "applications based on shared services and then what are we talking about here organic federal growth finally",
    "start": "440000",
    "end": "445599"
  },
  {
    "text": "service landscape and there's this this has all the changes effect exchanges on like the",
    "start": "445599",
    "end": "452160"
  },
  {
    "text": "um the control layer that governs how we connect those systems how we connect",
    "start": "452160",
    "end": "457280"
  },
  {
    "text": "these things and that's evolved from enterprise old-school enterprise integration to",
    "start": "457280",
    "end": "462400"
  },
  {
    "text": "free-flowing apis extra middleware like gateways and most recently um service mesh right and also of course on",
    "start": "462400",
    "end": "469280"
  },
  {
    "text": "the operations side um where we have evolved from old-school uh",
    "start": "469280",
    "end": "474639"
  },
  {
    "text": "pushing of boxes to devops and then sre right and then what we call mission",
    "start": "474639",
    "end": "480160"
  },
  {
    "text": "control operations so this is not just a set of individual",
    "start": "480160",
    "end": "488639"
  },
  {
    "text": "evolutions it is truly a new operating model where all these layers work together to",
    "start": "488639",
    "end": "494800"
  },
  {
    "text": "support the agility of the enterprise and that's what we're seeing more and more that these architectures compound",
    "start": "494800",
    "end": "502960"
  },
  {
    "text": "they get composited they grow organically relentlessly right so i want to like",
    "start": "502960",
    "end": "509360"
  },
  {
    "start": "509000",
    "end": "561000"
  },
  {
    "text": "double click a little bit on now what is the service landscape and here's an illustration it may start",
    "start": "509360",
    "end": "516080"
  },
  {
    "text": "it's really just any architecture that evolves through organic federative growth",
    "start": "516080",
    "end": "521839"
  },
  {
    "text": "and here's an example if you take the the first panel right it's a microservice application that becomes",
    "start": "521839",
    "end": "528000"
  },
  {
    "text": "useful to other teams so it gets other things bolted on there may be a mobile gateway another partner",
    "start": "528000",
    "end": "534320"
  },
  {
    "text": "integration other like applications use services of that so more and more applications are built on top of this",
    "start": "534320",
    "end": "540399"
  },
  {
    "text": "application right and also new services because now each service has a number of dependencies",
    "start": "540399",
    "end": "546399"
  },
  {
    "text": "right or is the dependencies your number other services now you start building out services",
    "start": "546399",
    "end": "551839"
  },
  {
    "text": "different versions of services next to each other right so that is really what organic federated growth is",
    "start": "551839",
    "end": "558160"
  },
  {
    "text": "and that has three really interesting characteristics number one of course on the security side",
    "start": "558160",
    "end": "563680"
  },
  {
    "text": "as we can all imagine right there there's a total loss of parameters",
    "start": "563680",
    "end": "569200"
  },
  {
    "text": "sorry perimeter and the architecture changes all the time right",
    "start": "569200",
    "end": "574399"
  },
  {
    "text": "so there's a loss of blueprint i can't base my security policies on you know",
    "start": "574399",
    "end": "581440"
  },
  {
    "text": "what i know about the architecture necessarily because it may not work tomorrow or next week right there's a fundamentally new",
    "start": "581440",
    "end": "587200"
  },
  {
    "text": "challenge right and then of course these",
    "start": "587200",
    "end": "592240"
  },
  {
    "start": "588000",
    "end": "636000"
  },
  {
    "text": "architectures have complex and very disruptive emergent behaviors",
    "start": "592240",
    "end": "597920"
  },
  {
    "text": "right um we know those as grave failures and so forth but what they all have in common that",
    "start": "597920",
    "end": "603360"
  },
  {
    "text": "they're large-scale there's a lot of systems involved and coming together right they're complex",
    "start": "603360",
    "end": "609519"
  },
  {
    "text": "just the number of system is staggering and each system behaves a little bit differently so the chain of events",
    "start": "609519",
    "end": "616000"
  },
  {
    "text": "once you trace it once you narrate it really it's very non-linear right you get an effect that's blue on one side and on",
    "start": "616000",
    "end": "622959"
  },
  {
    "text": "the other side it's green and then that makes it very un very unpredictable",
    "start": "622959",
    "end": "630800"
  },
  {
    "text": "um again fundamentally new challenge right the question is how they stabilize it",
    "start": "630800",
    "end": "636160"
  },
  {
    "start": "636000",
    "end": "707000"
  },
  {
    "text": "and almost the most important characteristic is that you",
    "start": "636160",
    "end": "641279"
  },
  {
    "text": "can't engineer your way out of it right we can't put um",
    "start": "641279",
    "end": "648240"
  },
  {
    "text": "parameters that are important for runtime configuration in a yaml file because",
    "start": "648399",
    "end": "655120"
  },
  {
    "text": "tomorrow some other teams deploying something else no this is wrong right so anything by the way of resource",
    "start": "655120",
    "end": "661120"
  },
  {
    "text": "limits or like scaling behaviors right i want to have like four copies of that right i want to you know scaling request",
    "start": "661120",
    "end": "668560"
  },
  {
    "text": "behaviors that many retrays retries and that's how i back you know i'm going to back off",
    "start": "668560",
    "end": "673760"
  },
  {
    "text": "or even like connection pool sizing becomes stale very quickly and typically there's no",
    "start": "673760",
    "end": "678800"
  },
  {
    "text": "zero process around updating these things right besides you don't even know you're coding a service right and next",
    "start": "678800",
    "end": "686320"
  },
  {
    "text": "week some other business unit talks to you right um so very difficult we can't engineer",
    "start": "686320",
    "end": "692399"
  },
  {
    "text": "ourselves out of this we can't simply in these rapidly evolving service landscapes",
    "start": "692399",
    "end": "698800"
  },
  {
    "text": "we can't simply define structure and set policies in in configuration files",
    "start": "698800",
    "end": "704560"
  },
  {
    "text": "and set and forget about them right so now the key is really i forgot about the clicker",
    "start": "704560",
    "end": "711200"
  },
  {
    "start": "707000",
    "end": "733000"
  },
  {
    "text": "the key is really that ironically the agility that the",
    "start": "711200",
    "end": "717760"
  },
  {
    "text": "enterprises craves right um ends up with an architecture that we can't control right",
    "start": "717760",
    "end": "726240"
  },
  {
    "text": "and if we can't control this of course we can't operate it and if we can't operate it then",
    "start": "726240",
    "end": "733440"
  },
  {
    "start": "733000",
    "end": "784000"
  },
  {
    "text": "innovation dies so this is the this operational crisis is the defining problem in the industry",
    "start": "733440",
    "end": "739680"
  },
  {
    "text": "today and it's the defining problem because service landscapes",
    "start": "739680",
    "end": "745360"
  },
  {
    "text": "and their behaviors are the new reality that we're all facing",
    "start": "745360",
    "end": "751279"
  },
  {
    "text": "and the new reality is that in all these environments failure",
    "start": "751279",
    "end": "756880"
  },
  {
    "text": "happens overwhelmingly due to environmental factors not to code effects and individual",
    "start": "756880",
    "end": "763279"
  },
  {
    "text": "threats of execution right um so the code is subject to factors now that is",
    "start": "763279",
    "end": "770399"
  },
  {
    "text": "entirely unrelated to it those may be mentioned great failures any other kind of ripple effects",
    "start": "770399",
    "end": "776399"
  },
  {
    "text": "resource contention right all these things um very important that affect your code",
    "start": "776399",
    "end": "782880"
  },
  {
    "text": "and this is the new reality and because of that we need to step back and change",
    "start": "782880",
    "end": "789279"
  },
  {
    "text": "operations we need to be able to like create structure",
    "start": "789279",
    "end": "795120"
  },
  {
    "text": "and govern and detect and react at runtime so we can",
    "start": "795120",
    "end": "801920"
  },
  {
    "text": "give the service landscape the way it's supposed to run the systemic resilience that it needs",
    "start": "801920",
    "end": "808320"
  },
  {
    "text": "right we need to be able to control disruptive behaviors prevent",
    "start": "808320",
    "end": "814480"
  },
  {
    "text": "systemic failures and we need to be able to avert security breaches right so in other words like an air",
    "start": "814480",
    "end": "821519"
  },
  {
    "text": "traffic controller we need to operate with a mission control mindset",
    "start": "821519",
    "end": "827360"
  },
  {
    "text": "we need to care about the stability and security of the entire airspace not about some ground operations",
    "start": "827360",
    "end": "834639"
  },
  {
    "text": "um and in order to do that we need to be able to detect and react in runtime in almost near real time",
    "start": "834639",
    "end": "843360"
  },
  {
    "text": "and that means we need to base our detection and reaction on golden signals on key signals on",
    "start": "843360",
    "end": "851680"
  },
  {
    "text": "on metrics that apply to every single flight so we need mission control operations",
    "start": "851680",
    "end": "858079"
  },
  {
    "text": "this is what i mean when i say that all successful system systems are actually run",
    "start": "858079",
    "end": "863600"
  },
  {
    "start": "860000",
    "end": "902000"
  },
  {
    "text": "not so much coded they're operated because the environment is what determines stability and security and",
    "start": "863600",
    "end": "869279"
  },
  {
    "text": "because the environmental factors are very unpredictable we need to have this mission control",
    "start": "869279",
    "end": "876800"
  },
  {
    "text": "operation system that allows us to remediate in real time",
    "start": "876800",
    "end": "882079"
  },
  {
    "text": "again i'm saying remediate i'm not saying diagnose and fix that's an entirely",
    "start": "882079",
    "end": "888399"
  },
  {
    "text": "different process this is all about real-time remediation right fixing something so what a triage",
    "start": "888399",
    "end": "896560"
  },
  {
    "text": "nurse would doing an emergency room right now let's i want to look at some of the",
    "start": "896560",
    "end": "902560"
  },
  {
    "start": "902000",
    "end": "981000"
  },
  {
    "text": "strategies that we typically bring to cope with complexity right and one of",
    "start": "902560",
    "end": "908079"
  },
  {
    "text": "them is of course let's just continue as we did before and that's typically like",
    "start": "908079",
    "end": "913199"
  },
  {
    "text": "you hear a developer say well i want to do this like you know netflix does this this way and that's how we should do it too",
    "start": "913199",
    "end": "918880"
  },
  {
    "text": "or you know vp engineering comes in and says well i'm going to get my team not to write any bugs anymore",
    "start": "918880",
    "end": "924240"
  },
  {
    "text": "right um and clearly upshot is like netflix is",
    "start": "924240",
    "end": "930800"
  },
  {
    "text": "at the architectural you know offense at the architectural level a fairly simple",
    "start": "930800",
    "end": "936000"
  },
  {
    "text": "application their problem with scale right everybody here for everybody else the problem is the other way around",
    "start": "936000",
    "end": "942639"
  },
  {
    "text": "we have generations of complexity and scale is probably not a top five concern",
    "start": "942639",
    "end": "948800"
  },
  {
    "text": "and it's much more about stability and how can we how can we combine all these systems so",
    "start": "948800",
    "end": "954639"
  },
  {
    "text": "it it works to do nothing to build distributed applications works nicely",
    "start": "954639",
    "end": "960880"
  },
  {
    "text": "if we have single standalone applications",
    "start": "960880",
    "end": "966160"
  },
  {
    "text": "like a twitter again simple application conceptually simple application right",
    "start": "966160",
    "end": "971600"
  },
  {
    "text": "single blueprint um but it does not really work for decentralized service landscapes",
    "start": "971600",
    "end": "979120"
  },
  {
    "text": "um the other problem uh the other strategy is oh i got",
    "start": "979120",
    "end": "985040"
  },
  {
    "start": "981000",
    "end": "1060000"
  },
  {
    "text": "datadog right i got excellent monitoring right and that's true if you work at the lower",
    "start": "985040",
    "end": "991279"
  },
  {
    "text": "levels of the stack then a lot of these host metrics node metrics whatever",
    "start": "991279",
    "end": "996560"
  },
  {
    "text": "you know is part of that package is important but again it doesn't really",
    "start": "996560",
    "end": "1002880"
  },
  {
    "text": "work for the for a decentralized service landscape which really operates on a much much",
    "start": "1002880",
    "end": "1010320"
  },
  {
    "text": "higher level where i need to look at the interactions between services so it doesn't help me to know what the",
    "start": "1010320",
    "end": "1016160"
  },
  {
    "text": "heap size and jvm is if really i have a large scale grave failure going on",
    "start": "1016160",
    "end": "1021199"
  },
  {
    "text": "right um the third one is and that's a more",
    "start": "1021199",
    "end": "1026480"
  },
  {
    "text": "you know newer one um how about you know i trace into things i get you know it's promise of like",
    "start": "1026480",
    "end": "1033120"
  },
  {
    "text": "perfect visibility plus all the context that i need around it right and yes it's true as long as i own these",
    "start": "1033120",
    "end": "1040400"
  },
  {
    "text": "services tracing makes a lot of sense but if i have like 20 other dependencies",
    "start": "1040400",
    "end": "1045760"
  },
  {
    "text": "that i don't even know who've coded them i don't really care about it's just a service that i consume",
    "start": "1045760",
    "end": "1052640"
  },
  {
    "text": "tracing stops it outside you know at that end so tracing is a very local solution right and then of course",
    "start": "1052640",
    "end": "1060720"
  },
  {
    "start": "1060000",
    "end": "1141000"
  },
  {
    "text": "there's service lines there's service mesh right and i love this image because to me it",
    "start": "1060720",
    "end": "1066240"
  },
  {
    "text": "really um shows how service mesh",
    "start": "1066240",
    "end": "1071600"
  },
  {
    "text": "relates to into you know a service landscape so service mesh is really promising to",
    "start": "1071600",
    "end": "1078840"
  },
  {
    "text": "deliver intelligent routing metrics policies",
    "start": "1078840",
    "end": "1083919"
  },
  {
    "text": "and encryption security and it is an odd solution",
    "start": "1083919",
    "end": "1091600"
  },
  {
    "text": "because it is very yes it gets you to the other side so like this baroque garden here it gets you to the other side but it's a very",
    "start": "1091600",
    "end": "1098160"
  },
  {
    "text": "heavy solution right it requires a very stable environment and then it is very",
    "start": "1098160",
    "end": "1106640"
  },
  {
    "text": "complex it tends to be slow and it's very invasive so once you have it in place it's unless",
    "start": "1106640",
    "end": "1114559"
  },
  {
    "text": "somebody else manages for it for you it becomes very difficult to",
    "start": "1114559",
    "end": "1119600"
  },
  {
    "text": "change in particular if you have many teams trying to like inject jam yammer in the",
    "start": "1119600",
    "end": "1126799"
  },
  {
    "text": "different envoys because a natural service landscape evolves much faster",
    "start": "1126799",
    "end": "1132880"
  },
  {
    "text": "than that barack right so how should we operate these service",
    "start": "1132880",
    "end": "1140559"
  },
  {
    "text": "landscapes and it has this answer has like two parts to it number one is",
    "start": "1140559",
    "end": "1146559"
  },
  {
    "text": "we really because environmental factors are the determining factors today and",
    "start": "1146559",
    "end": "1152400"
  },
  {
    "text": "because they're so unpredictable it's all about it hinges about real time",
    "start": "1152400",
    "end": "1157679"
  },
  {
    "text": "remediation and that means we need to be able to quickly see",
    "start": "1157679",
    "end": "1164559"
  },
  {
    "text": "and very quickly react so the quickly seeing part needs to rely on metrics that are very",
    "start": "1164559",
    "end": "1171520"
  },
  {
    "text": "easy to understand again like the triage nerves if you come in with a pulse of like 160",
    "start": "1171520",
    "end": "1178640"
  },
  {
    "text": "and a temperature of like 80 right the nurse is going to put you down you",
    "start": "1178640",
    "end": "1183840"
  },
  {
    "text": "know into some other room right um the nurse is going to give you some medication",
    "start": "1183840",
    "end": "1189039"
  },
  {
    "text": "right there so that is exactly what we need to do and like in air traffic control those those metrics need to be",
    "start": "1189039",
    "end": "1196240"
  },
  {
    "text": "universally applicable they need to be very holistic right an air traffic control is very click",
    "start": "1196240",
    "end": "1201360"
  },
  {
    "text": "need to need to be need to be applied to any aircraft right so that's",
    "start": "1201360",
    "end": "1207360"
  },
  {
    "text": "typically position it's altitude it's direction it's speed that kind of sort of thing right for",
    "start": "1207360",
    "end": "1212960"
  },
  {
    "text": "cloud traffic we need to apply it to [Music] any interaction and that includes number",
    "start": "1212960",
    "end": "1220720"
  },
  {
    "text": "of requests how many requests are on the line right on the interaction the latency of it how",
    "start": "1220720",
    "end": "1226159"
  },
  {
    "text": "long does it take right to be fulfilled concurrency how many are in flight at any given time",
    "start": "1226159",
    "end": "1232080"
  },
  {
    "text": "and of course bandwidth and by correlating these things and examining them you can find",
    "start": "1232080",
    "end": "1238000"
  },
  {
    "text": "anomalies and those allow you to react very quickly right and the reaction part is",
    "start": "1238000",
    "end": "1246960"
  },
  {
    "start": "1243000",
    "end": "1381000"
  },
  {
    "text": "relying on operational patterns operational patterns are really encapsulations of best",
    "start": "1246960",
    "end": "1253600"
  },
  {
    "text": "practice um remediations right and some of them here examples a bulkhead",
    "start": "1253600",
    "end": "1259760"
  },
  {
    "text": "right i have several availability zones and i want to make sure as an operator that whatever",
    "start": "1259760",
    "end": "1265600"
  },
  {
    "text": "happens on this side shouldn't like slosh over over here but maybe at the same time like you know critical service",
    "start": "1265600",
    "end": "1271360"
  },
  {
    "text": "should be able to fail over right and we all know that happens all the time because misconfigurations happen",
    "start": "1271360",
    "end": "1277200"
  },
  {
    "text": "and then something talks from the stone or region to the other region and nobody knows you know for another like month so",
    "start": "1277200",
    "end": "1284960"
  },
  {
    "text": "very important pattern to be able to do this right another one is back pressure if you have very spiky workloads or just",
    "start": "1284960",
    "end": "1290799"
  },
  {
    "text": "too much demand at a given time the ability to be able to push back against it for a certain amount of time",
    "start": "1290799",
    "end": "1297600"
  },
  {
    "text": "relieves stress from these attacked systems right whether it's malicious or not it doesn't",
    "start": "1297600",
    "end": "1303200"
  },
  {
    "text": "matter at this point right it's just a very quick remediation very important pattern segmentation of",
    "start": "1303200",
    "end": "1309600"
  },
  {
    "text": "course we think of segmentation as a security tool right yeah these services can't talk to these",
    "start": "1309600",
    "end": "1315440"
  },
  {
    "text": "services and that's true but it's also a pattern that's eminently",
    "start": "1315440",
    "end": "1321840"
  },
  {
    "text": "useful to petition request clients right um and so forth",
    "start": "1321840",
    "end": "1327600"
  },
  {
    "text": "circuit breaker interesting pattern because we think of a circuit breaker typically as a developer pattern right",
    "start": "1327600",
    "end": "1334240"
  },
  {
    "text": "i'm running an e-commerce site there's a you know there's a recommendation engine if that's gone i don't care that much i",
    "start": "1334240",
    "end": "1340400"
  },
  {
    "text": "can just circuit break around it right and that's true but from an operational perspective it's a slightly different use case where",
    "start": "1340400",
    "end": "1347200"
  },
  {
    "text": "i may have a hadoop cluster going on and i just realized it's going a little slower than it used to",
    "start": "1347200",
    "end": "1352559"
  },
  {
    "text": "so i'm now going to circuit break all the tier 3 services that are not",
    "start": "1352559",
    "end": "1358240"
  },
  {
    "text": "that important and only the you know long-running queries of those that's an operation concern",
    "start": "1358240",
    "end": "1364000"
  },
  {
    "text": "and so forth a couple more of these another interesting one is of course the quarantine because it's such a risk mitigation",
    "start": "1364000",
    "end": "1370880"
  },
  {
    "text": "mitigator when it comes to deploying new code and so forth i'm not going to run through all of those",
    "start": "1370880",
    "end": "1376960"
  },
  {
    "text": "um let me turn to example so how does this actually look like in real life",
    "start": "1376960",
    "end": "1382480"
  },
  {
    "start": "1381000",
    "end": "1454000"
  },
  {
    "text": "and going back to the example from earlier the story here that actually happened is",
    "start": "1382480",
    "end": "1387600"
  },
  {
    "text": "a new deployment a new piece of you know organic federated growth was added and that affected",
    "start": "1387600",
    "end": "1395280"
  },
  {
    "text": "the upstream dependency in fact what it did is the developers just swapped two calls",
    "start": "1395280",
    "end": "1402159"
  },
  {
    "text": "right because one took longer so it would be sent off earlier and that changed the fan uh the fanout pattern of",
    "start": "1402159",
    "end": "1408000"
  },
  {
    "text": "this upstream server to ins in such a way",
    "start": "1408000",
    "end": "1413280"
  },
  {
    "text": "that the cache behind it a shared centralized cash started thrashing not immediately but",
    "start": "1413280",
    "end": "1420320"
  },
  {
    "text": "significantly higher right and that caused widespread very unspecific slowness on",
    "start": "1420320",
    "end": "1426799"
  },
  {
    "text": "the other side of the landscape um how does the remediation look like here",
    "start": "1426799",
    "end": "1432159"
  },
  {
    "text": "first we need to be able to see very quickly um that islam is we need to see this and",
    "start": "1432159",
    "end": "1438400"
  },
  {
    "text": "then we need to identify the downstream bottlenecks where might it come from correlate with a deployment history and",
    "start": "1438400",
    "end": "1445679"
  },
  {
    "text": "then of course quarantine that deployment until the issue is",
    "start": "1445679",
    "end": "1451520"
  },
  {
    "text": "then diagnosed and then fixed another really interesting example",
    "start": "1451520",
    "end": "1456640"
  },
  {
    "start": "1454000",
    "end": "1587000"
  },
  {
    "text": "loveit was published like about a year ago um happened to target a cascading failure target anybody here from target",
    "start": "1456640",
    "end": "1463919"
  },
  {
    "text": "good so um really good it's eminently important that these things get published",
    "start": "1463919",
    "end": "1470640"
  },
  {
    "text": "so what happened and i'm simplifying it's a long blog post the url is on the slide two environments one vm based running an",
    "start": "1470640",
    "end": "1478640"
  },
  {
    "text": "openstack and a in massive amount of kubernetes clusters historically a couple of these clusters were really",
    "start": "1478640",
    "end": "1485279"
  },
  {
    "text": "big typically all the other ones were very small so now each",
    "start": "1485279",
    "end": "1490960"
  },
  {
    "text": "workload on kubernetes had a sidecar injected that did logging to kafka systems kafka",
    "start": "1490960",
    "end": "1496799"
  },
  {
    "text": "systems running on obviously so now the openstack guys came",
    "start": "1496799",
    "end": "1504080"
  },
  {
    "text": "and said oh we need to do some neutron upgrade right um it's going to be like 30 seconds or a minute or",
    "start": "1504080",
    "end": "1509760"
  },
  {
    "text": "whatever downtime of course that'll lasted more than a couple hours",
    "start": "1509760",
    "end": "1514799"
  },
  {
    "text": "in various ways very detailed apparently and that caused the kafka systems to be",
    "start": "1514799",
    "end": "1521279"
  },
  {
    "text": "intermittently available now of course all these workloads and kubernetes tried to continue the lock",
    "start": "1521279",
    "end": "1528159"
  },
  {
    "text": "right and um they couldn't lock so they would wait till kafka came back when kafka came back intermittently",
    "start": "1528159",
    "end": "1535120"
  },
  {
    "text": "everybody would log at the same time right because of of course the side cars do the right",
    "start": "1535120",
    "end": "1540240"
  },
  {
    "text": "thing right they log at the same time and that didn't overwhelm the network",
    "start": "1540240",
    "end": "1545840"
  },
  {
    "text": "it caused a cpu spike on those nodes and that cpu spike",
    "start": "1545840",
    "end": "1553200"
  },
  {
    "text": "squeezed the docker daemon and now of course kubernetes does the right thing and says well this note is unhealthy i'm gonna",
    "start": "1553200",
    "end": "1560559"
  },
  {
    "text": "have to migrate this off to another node and of course the migration patterns are",
    "start": "1560559",
    "end": "1565919"
  },
  {
    "text": "not uniform so some nodes now have the same thing happen again now",
    "start": "1565919",
    "end": "1571120"
  },
  {
    "text": "these parts had had to be moved somewhere else so the outward behavior is kubernetes why",
    "start": "1571120",
    "end": "1576880"
  },
  {
    "text": "is my kubernetes flip-flopping and the remediation should have been",
    "start": "1576880",
    "end": "1582320"
  },
  {
    "text": "to very quickly identify logging spikes and then exert back pressure against",
    "start": "1582320",
    "end": "1589039"
  },
  {
    "start": "1587000",
    "end": "1604000"
  },
  {
    "text": "those loggers which really means just smooth it out don't let them all log at the same time",
    "start": "1589039",
    "end": "1594240"
  },
  {
    "text": "right delay individual things like over a second or so and maybe even like if you have a long",
    "start": "1594240",
    "end": "1600400"
  },
  {
    "text": "running hanging request circuit break some of those third example of remediation is like and",
    "start": "1600400",
    "end": "1608000"
  },
  {
    "start": "1604000",
    "end": "1687000"
  },
  {
    "text": "this is something we did for a high security video conferencing environment um the architecture is",
    "start": "1608000",
    "end": "1614240"
  },
  {
    "text": "roughly like it's on the left side you know many organizations on the same umbrella um each organization their own video",
    "start": "1614240",
    "end": "1621520"
  },
  {
    "text": "conferencing rooms and typically participants would come in going through a gateway hit a bunch of relays for each media",
    "start": "1621520",
    "end": "1628559"
  },
  {
    "text": "type of different relay and then it would be relayed out right and you see a node diagram on the right side how it looked like so typically",
    "start": "1628559",
    "end": "1635919"
  },
  {
    "text": "very important that participants would only talk to one video conferencing room at the same time",
    "start": "1635919",
    "end": "1642159"
  },
  {
    "text": "so now looking at golden signals you can see that they're in the middle there's like a bunch of clients",
    "start": "1642159",
    "end": "1649039"
  },
  {
    "text": "participants with red lines that reach all over the place and so clearly two things going on here",
    "start": "1649039",
    "end": "1656480"
  },
  {
    "text": "one is there's a deal that's happening some sort of dos and the other thing is that there's",
    "start": "1656480",
    "end": "1662000"
  },
  {
    "text": "segmentation violation they shouldn't be able to talk across these things could be a misconfiguration could be anything could",
    "start": "1662000",
    "end": "1667760"
  },
  {
    "text": "be a you know vulnerability exploit whatever right so remediation is identify the sources",
    "start": "1667760",
    "end": "1676080"
  },
  {
    "text": "very quickly based on golden signals and then apply an operational pattern like segmentation",
    "start": "1676080",
    "end": "1682240"
  },
  {
    "text": "to to prohibit these clients from continuing",
    "start": "1682240",
    "end": "1687760"
  },
  {
    "start": "1687000",
    "end": "1761000"
  },
  {
    "text": "um so those are all operations that you can do to stop the bleeding",
    "start": "1687919",
    "end": "1694640"
  },
  {
    "text": "right but being able to operate and controlling runtime is also",
    "start": "1694640",
    "end": "1700559"
  },
  {
    "text": "very useful if you want to move forward and you know accelerate the development",
    "start": "1700559",
    "end": "1707840"
  },
  {
    "text": "and one of these ways how you can do that is by deploying the production the reason most people",
    "start": "1707840",
    "end": "1713200"
  },
  {
    "text": "cannot deploy to production and need to stage services is because once it's deployed there's",
    "start": "1713200",
    "end": "1718399"
  },
  {
    "text": "nothing i can do right i don't even know what's running so we built these staging environments",
    "start": "1718399",
    "end": "1725200"
  },
  {
    "text": "that are very difficult to build and actually make meaningful so then there's systems around where",
    "start": "1725200",
    "end": "1730799"
  },
  {
    "text": "okay i'm storing real user traffic and play it back in staging the other day right and i resort to tricks like that",
    "start": "1730799",
    "end": "1737600"
  },
  {
    "text": "but then it's too expensive so my staging environment is only like a third of the size right so it's it's very quickly",
    "start": "1737600",
    "end": "1744240"
  },
  {
    "text": "becomes meaningless so but because real-time",
    "start": "1744240",
    "end": "1749360"
  },
  {
    "text": "runtime control is such a massive risk mitigator",
    "start": "1749360",
    "end": "1754559"
  },
  {
    "text": "we helped a online travel company to completely eliminate their staging",
    "start": "1754559",
    "end": "1759600"
  },
  {
    "text": "environments another use case that's my favorite and really interesting is",
    "start": "1759600",
    "end": "1765600"
  },
  {
    "start": "1761000",
    "end": "1776000"
  },
  {
    "text": "you can architect in real time right and we did this for a connected car company actually car manufactured a connected",
    "start": "1765600",
    "end": "1771440"
  },
  {
    "text": "car of a car manufacturer and what their problem was",
    "start": "1771440",
    "end": "1776880"
  },
  {
    "start": "1776000",
    "end": "1903000"
  },
  {
    "text": "i want to double click on that is hundreds of applications on the left side here trying to call into millions of cars or",
    "start": "1776880",
    "end": "1785039"
  },
  {
    "text": "like data from the cars depending on the functionality right and this is an over simplif",
    "start": "1785039",
    "end": "1790399"
  },
  {
    "text": "simplification of the situation right um this number of applications is growing",
    "start": "1790399",
    "end": "1796080"
  },
  {
    "text": "about 200 a year and it affects everything from managing the breaks to",
    "start": "1796080",
    "end": "1801919"
  },
  {
    "text": "entertainment to autonomous driving right to to all kinds of like monitoring systems on",
    "start": "1801919",
    "end": "1807760"
  },
  {
    "text": "the car there's like way more systems than um than most of you probably think so",
    "start": "1807760",
    "end": "1813440"
  },
  {
    "text": "their problem was of course we can't let these applications talk to the car right security reasons you know all",
    "start": "1813440",
    "end": "1819200"
  },
  {
    "text": "kinds of reasons so we need to intermediate it but whatever whatever we put in the middle whatever",
    "start": "1819200",
    "end": "1824240"
  },
  {
    "text": "you architect here is going to be wrong next week right so now i'm putting a system in the",
    "start": "1824240",
    "end": "1830240"
  },
  {
    "text": "middle that the next application comes in it's super important to support this application and",
    "start": "1830240",
    "end": "1836240"
  },
  {
    "text": "now we need to touch all these services now we need to re-certify all this stuff because it's talking to cars right",
    "start": "1836240",
    "end": "1842559"
  },
  {
    "text": "so they took the plunge and decided we need to entirely avoid architecture",
    "start": "1842559",
    "end": "1849360"
  },
  {
    "text": "so and that's kind of hard to do if you look at this diagram i mean a lot of concerns that need to be taken",
    "start": "1849360",
    "end": "1854799"
  },
  {
    "text": "care of but they took the plunge and all these boxes here represent about like 200",
    "start": "1854799",
    "end": "1860559"
  },
  {
    "text": "services and again growing over time and said like every new requirement that comes in",
    "start": "1860559",
    "end": "1866799"
  },
  {
    "text": "we're just going to deploy a new service next to the other ones right so there's an api gateway in the middle that",
    "start": "1866799",
    "end": "1872960"
  },
  {
    "text": "then routes this application to this new version of that service right and really interesting because it",
    "start": "1872960",
    "end": "1879919"
  },
  {
    "text": "allowed the manufacturer to massively accelerate the deployments of of course end-user applications right",
    "start": "1879919",
    "end": "1887120"
  },
  {
    "text": "um in which would have not been possible if they if they had like designed this up front",
    "start": "1887120",
    "end": "1893679"
  },
  {
    "text": "very expensive design architecture up front and most of the time you don't know at that point",
    "start": "1893679",
    "end": "1900399"
  },
  {
    "text": "what it needs to do afterwards in runtime so another case um that's interesting",
    "start": "1900399",
    "end": "1906559"
  },
  {
    "start": "1903000",
    "end": "1957000"
  },
  {
    "text": "that was a cloud provider who where the ability",
    "start": "1906559",
    "end": "1911760"
  },
  {
    "text": "to define structure was important because all these architectures are you know growing sprawling more and",
    "start": "1911760",
    "end": "1918880"
  },
  {
    "text": "more so it reached into different cloud services now there's serverless attached to it right um so it's what used to be a vm is now",
    "start": "1918880",
    "end": "1926480"
  },
  {
    "text": "kubernetes containers and our serverless attached and then all these applications come together how they",
    "start": "1926480",
    "end": "1932559"
  },
  {
    "text": "could define and segment their individual clients become very it became very very difficult",
    "start": "1932559",
    "end": "1938880"
  },
  {
    "text": "and they used to do this with just plain sdn and of course at some point you configure the sdn into",
    "start": "1938880",
    "end": "1945360"
  },
  {
    "text": "into a corner so you reach multi-data center uh issues using you know uh different service issues and",
    "start": "1945360",
    "end": "1950880"
  },
  {
    "text": "so forth right so they used segmentation to do quite a bit in that area",
    "start": "1950880",
    "end": "1956240"
  },
  {
    "text": "very important again um so in summary um what they talked about is like how we",
    "start": "1956240",
    "end": "1962320"
  },
  {
    "start": "1957000",
    "end": "2133000"
  },
  {
    "text": "now live in a completely new agile operating model we work in small teams it's like fast",
    "start": "1962320",
    "end": "1969840"
  },
  {
    "text": "cycles we have these immense amount of like cloud service um at our fingertips and everything happens",
    "start": "1969840",
    "end": "1977200"
  },
  {
    "text": "in parallel that is really the key driver right and that creates organic federated growth",
    "start": "1977200",
    "end": "1985440"
  },
  {
    "text": "the result of which is this new reality of a service landscape",
    "start": "1985440",
    "end": "1991600"
  },
  {
    "text": "and the new reality is that in service landscapes",
    "start": "1991600",
    "end": "1996720"
  },
  {
    "text": "everything depends on the environment it's very easy to fix a code somewhere",
    "start": "1996720",
    "end": "2003679"
  },
  {
    "text": "right but the individual thread of execution and whatever service you're looking at is not that important anymore because",
    "start": "2003679",
    "end": "2010320"
  },
  {
    "text": "all your failures really are determined by the health and how many grey failures you have",
    "start": "2010320",
    "end": "2015919"
  },
  {
    "text": "and how many discontinuities you have in the um in the environment right then",
    "start": "2015919",
    "end": "2023279"
  },
  {
    "text": "i talked about some solutions that would typically apply to complexity and that's of course like",
    "start": "2023279",
    "end": "2030480"
  },
  {
    "text": "where's this going to wing it uh then there's the monitoring like invest heavily in monitoring",
    "start": "2030480",
    "end": "2036159"
  },
  {
    "text": "and that really only works um in the lower levels of the stack the winging it really only works for",
    "start": "2036159",
    "end": "2042159"
  },
  {
    "text": "simple applications right then tracing was another solution that",
    "start": "2042159",
    "end": "2048720"
  },
  {
    "text": "is popular but really only works at the local context for the services that you personally own",
    "start": "2048720",
    "end": "2055520"
  },
  {
    "text": "are responsible for for the services that are in your repo right it doesn't work for any other",
    "start": "2055520",
    "end": "2062158"
  },
  {
    "text": "dependencies um and then service mesh which turns out to be very complex very slow",
    "start": "2062159",
    "end": "2069679"
  },
  {
    "text": "and um also you know leads to brittle architecture the way it's that's you know how it's invasive and",
    "start": "2069679",
    "end": "2077358"
  },
  {
    "text": "the real solution is to really aggressively invest into rapid mtdr rapid remediation",
    "start": "2077359",
    "end": "2085040"
  },
  {
    "text": "being able to detect quickly if something happens before it becomes a real failure looking",
    "start": "2085040",
    "end": "2090878"
  },
  {
    "text": "at grave failures and then being able to um and basing that on golden signals and",
    "start": "2090879",
    "end": "2098720"
  },
  {
    "text": "then applying operational patterns to quickly remediate it",
    "start": "2098720",
    "end": "2104160"
  },
  {
    "text": "again remediation is not a root cause fix remediation is remediating the",
    "start": "2104160",
    "end": "2110560"
  },
  {
    "text": "situation get it back to some form of normality and then about a couple like examples",
    "start": "2110560",
    "end": "2118640"
  },
  {
    "text": "retroactively how to apply patterns how can we remediate existing issues and then proactively",
    "start": "2118640",
    "end": "2124800"
  },
  {
    "text": "what else can we do with um with runtime control and applying operational patterns",
    "start": "2124800",
    "end": "2131280"
  },
  {
    "text": "so takeaways for those of you who are developers and",
    "start": "2131280",
    "end": "2137920"
  },
  {
    "start": "2133000",
    "end": "2473000"
  },
  {
    "text": "may not you know face this new reality yet is",
    "start": "2137920",
    "end": "2143680"
  },
  {
    "text": "that um absolutely everybody should avoid building distributed",
    "start": "2143680",
    "end": "2149359"
  },
  {
    "text": "systems we're solving distributed systems issues they're very difficult to solve most of",
    "start": "2149359",
    "end": "2154480"
  },
  {
    "text": "them are solved in some kind of infrastructure already and become very expensive and most",
    "start": "2154480",
    "end": "2160880"
  },
  {
    "text": "most importantly they kind of force a new waterfall thinking on you right those things need",
    "start": "2160880",
    "end": "2167119"
  },
  {
    "text": "to be designed as a long ramp before you can deploy that right it slows everything down it's almost",
    "start": "2167119",
    "end": "2174079"
  },
  {
    "text": "like serialization in a multi-processor system um instead build resilient",
    "start": "2174079",
    "end": "2180800"
  },
  {
    "text": "federations based on standard domain-driven design federations of services of course and",
    "start": "2180800",
    "end": "2187200"
  },
  {
    "text": "then anything that might happen build compensation strategy heavily invested in compensation strategies",
    "start": "2187200",
    "end": "2193760"
  },
  {
    "text": "in code that's the best thing you can do something doesn't work quite right make",
    "start": "2193760",
    "end": "2200400"
  },
  {
    "text": "it so that the service degrades instead of instead of failing a typical",
    "start": "2200400",
    "end": "2206240"
  },
  {
    "text": "thing a typical issue that comes up here is if shops that have really great infrastructure related to",
    "start": "2206240",
    "end": "2214160"
  },
  {
    "text": "using marks like stubbing out dependencies typically has have the worst",
    "start": "2214160",
    "end": "2219839"
  },
  {
    "text": "compensation strategies in the code because it's so easy to mark them up so everything is always there",
    "start": "2219839",
    "end": "2226880"
  },
  {
    "text": "if you actually need um if you actually need",
    "start": "2227359",
    "end": "2233839"
  },
  {
    "text": "five nines of like um um certainty that a certain result comes back",
    "start": "2233839",
    "end": "2239280"
  },
  {
    "text": "needs to be done in uh with uh redundancy and plausibility checks are in checking",
    "start": "2239280",
    "end": "2245680"
  },
  {
    "text": "several return return values like kind of like airplanes do right any important",
    "start": "2245680",
    "end": "2251200"
  },
  {
    "text": "decision is done by three systems at the same time um debugging and tracing",
    "start": "2251200",
    "end": "2258000"
  },
  {
    "text": "ideally should be totally kept to the unit level right it's very easy to debug code at",
    "start": "2258000",
    "end": "2265280"
  },
  {
    "text": "the unit level it's very cheap to do so it becomes very hard and it becomes very expensive later on",
    "start": "2265280",
    "end": "2271280"
  },
  {
    "text": "in production and most important of all is like by all means",
    "start": "2271280",
    "end": "2276480"
  },
  {
    "text": "defer design decisions to run time right don't try to you know solve runtime",
    "start": "2276480",
    "end": "2283599"
  },
  {
    "text": "concerns of code and services um in in your in your own code",
    "start": "2283599",
    "end": "2291280"
  },
  {
    "text": "now now for operators the most thing most important thing to remember is like",
    "start": "2291280",
    "end": "2296880"
  },
  {
    "text": "focus on the environment stop like debugging individual nodes right",
    "start": "2296880",
    "end": "2302240"
  },
  {
    "text": "focus on gray failures what can you see how can you rapidly detect and react to",
    "start": "2302240",
    "end": "2308720"
  },
  {
    "text": "things right investing in that capability is has massive returns um and also like",
    "start": "2308720",
    "end": "2316079"
  },
  {
    "text": "decide which signals do you want to look at what is the set of signals that maybe for your company is the most",
    "start": "2316079",
    "end": "2323359"
  },
  {
    "text": "important one i'm not talking kpis that are customer facing kpis but from a stability and security",
    "start": "2323359",
    "end": "2330240"
  },
  {
    "text": "perspective and what kind of patterns do you want to apply and how fast how quickly do you",
    "start": "2330240",
    "end": "2335920"
  },
  {
    "text": "want to do it and again again the quicker you can apply a pattern a remediation the easier it is",
    "start": "2335920",
    "end": "2343599"
  },
  {
    "text": "to deploy something the easier it is for your company to make forward movement",
    "start": "2343599",
    "end": "2349599"
  },
  {
    "text": "um and then this is one of my favorite ones everybody talks about root causes",
    "start": "2349599",
    "end": "2357280"
  },
  {
    "text": "stop they don't exist there's no root cause if there's a root cause it's a trivial bug in like with families that are",
    "start": "2357280",
    "end": "2364079"
  },
  {
    "text": "dysfunctional there's not a single person at fault right your unit test all your stuff it all works you put it together it doesn't",
    "start": "2364079",
    "end": "2370000"
  },
  {
    "text": "work so forget about root causes it's always a confluence of factors it's intellectual laziness frankly i",
    "start": "2370000",
    "end": "2375760"
  },
  {
    "text": "think it's just really lazy um and it's we as engineers we're trying",
    "start": "2375760",
    "end": "2381200"
  },
  {
    "text": "to jump on the first thing we see right so typically it's a rabbit hole we love to jump into and then spend days chasing a bug that",
    "start": "2381200",
    "end": "2388480"
  },
  {
    "text": "is not even like that important instead focus on remediation because in",
    "start": "2388480",
    "end": "2395680"
  },
  {
    "text": "these systems these systems are so complex that you can't chase everything anyways",
    "start": "2395680",
    "end": "2401760"
  },
  {
    "text": "right things happen and most of the things if you think your system runs clear",
    "start": "2401760",
    "end": "2407359"
  },
  {
    "text": "you're not seeing the gray failures you're not seeing the discontinuities that happen all the time",
    "start": "2407359",
    "end": "2413760"
  },
  {
    "text": "and last no almost last don't do any process",
    "start": "2413760",
    "end": "2420000"
  },
  {
    "text": "debugging if there's a suspected bug in some code",
    "start": "2420000",
    "end": "2425119"
  },
  {
    "text": "some file handle is not being closed it's not your job on the it's the you know it's a developer's job",
    "start": "2425119",
    "end": "2432400"
  },
  {
    "text": "that all these together allow you to truly architect at one time make",
    "start": "2434000",
    "end": "2440480"
  },
  {
    "text": "expensive design decisions resolve them at runtime",
    "start": "2440480",
    "end": "2446079"
  },
  {
    "text": "when you have the data when you see how it's behaving and this of course applies to all",
    "start": "2446079",
    "end": "2452880"
  },
  {
    "text": "decentralized architectures not just microservices so any combination of serverless any combination of like vms or my",
    "start": "2452880",
    "end": "2460079"
  },
  {
    "text": "mainframes or like metal systems in different data centers in different regions",
    "start": "2460079",
    "end": "2465760"
  },
  {
    "text": "the fact that these systems all tend to come together now is really what the new reality is all",
    "start": "2465760",
    "end": "2472000"
  },
  {
    "text": "about so just to drive this home",
    "start": "2472000",
    "end": "2478319"
  },
  {
    "text": "apollo 13 didn't make it back to earth because it was well engineered right it came back to earth because it",
    "start": "2478319",
    "end": "2484560"
  },
  {
    "text": "was run it was mission controlled properly operations is the key driver",
    "start": "2484560",
    "end": "2490160"
  },
  {
    "text": "here and the southwest airlines could have completely avoided this disaster this",
    "start": "2490160",
    "end": "2495599"
  },
  {
    "text": "meltdown if they had the same type of mission control operations if they had had a",
    "start": "2495599",
    "end": "2503119"
  },
  {
    "text": "way to quickly see at the right level what was going on not deep observability high cardinality",
    "start": "2503119",
    "end": "2510079"
  },
  {
    "text": "high scalability high uh high dimensional high dimensionability whatever",
    "start": "2510079",
    "end": "2516319"
  },
  {
    "text": "high dimensionality um at the right level at the right level granule level then",
    "start": "2516319",
    "end": "2522480"
  },
  {
    "text": "they could have seen billions of packets in zero packets coming out and",
    "start": "2522480",
    "end": "2527920"
  },
  {
    "text": "then if they also had had the ability to push back on traffic to just slow everything",
    "start": "2527920",
    "end": "2534240"
  },
  {
    "text": "everybody down until the system has been exchanged right this route in this case",
    "start": "2534240",
    "end": "2539760"
  },
  {
    "text": "none of that would have happened right these five days of outage would not have happened",
    "start": "2539760",
    "end": "2545680"
  },
  {
    "text": "perfect so but they didn't have runtime control but you can right if you are",
    "start": "2545920",
    "end": "2553280"
  },
  {
    "text": "an architect or developer who wants to like move some of those decisions to runtime or if you are an operator",
    "start": "2553280",
    "end": "2560560"
  },
  {
    "text": "who suffers from being completely ill-equipped to deal with runtime issues and want to get a new semblance",
    "start": "2560560",
    "end": "2568400"
  },
  {
    "text": "of control talk to me anytime i'm here we're going to be at the",
    "start": "2568400",
    "end": "2575280"
  },
  {
    "text": "open microservices space later on i think in the last slot of the talk here and of course",
    "start": "2575280",
    "end": "2583040"
  },
  {
    "text": "contact data email me or dm me my dmz open excellent thank you",
    "start": "2583040",
    "end": "2593838"
  }
]