[
  {
    "start": "0",
    "end": "0"
  },
  {
    "text": "[Music]",
    "start": "1020",
    "end": "13990"
  },
  {
    "text": "[Music]",
    "start": "17470",
    "end": "25599"
  },
  {
    "text": "hi I'm belinder core and um he's my cooworker uh Joe rickon both of us work",
    "start": "26800",
    "end": "32558"
  },
  {
    "text": "at Tina Imaging so we've we've divided our uh talk today we will cover right",
    "start": "32559",
    "end": "37680"
  },
  {
    "text": "from the camera apis to the Android framework uh and the camera service",
    "start": "37680",
    "end": "43440"
  },
  {
    "text": "going down to the camera H device drivers and even hardware and the top layers I will be covering and uh Midway",
    "start": "43440",
    "end": "51520"
  },
  {
    "text": "through we will uh switch all these wires and Joe will take over to talk",
    "start": "51520",
    "end": "57199"
  },
  {
    "text": "about the camera H device drivers and uh the",
    "start": "57199",
    "end": "62440"
  },
  {
    "text": "hardware so basically there are six classes and eight callback interfac uh",
    "start": "62600",
    "end": "69119"
  },
  {
    "text": "the classes the main class of course is camera and then the next most interesting and most complicated is",
    "start": "69119",
    "end": "75400"
  },
  {
    "text": "camera parameters we have camera info camera size camera face and Camera area",
    "start": "75400",
    "end": "82240"
  },
  {
    "text": "um info is really very simple it just tells you whether your camera is a front-facing or rear facing camera it",
    "start": "82240",
    "end": "89400"
  },
  {
    "text": "also tells you the orientation of the image that you're going to get back from that",
    "start": "89400",
    "end": "94600"
  },
  {
    "text": "camera size like the name says is quite simple it's just height and width of the image coming back um area is a little",
    "start": "94600",
    "end": "103000"
  },
  {
    "text": "complex more because of the way it gets used rather than the um C uh API itself",
    "start": "103000",
    "end": "109360"
  },
  {
    "text": "it basically defines a rectangular area and it has a weight and it's you have to",
    "start": "109360",
    "end": "114560"
  },
  {
    "text": "be more of a um a professional camera person to understand the metering",
    "start": "114560",
    "end": "120600"
  },
  {
    "text": "regions and auto white balance and things like that cameraface is very",
    "start": "120600",
    "end": "126320"
  },
  {
    "text": "interesting personally to me because it is the uh class uh in Ice Cream Sandwich",
    "start": "126320",
    "end": "131680"
  },
  {
    "text": "Android introduced face detection apis and this is the a class that helps uh",
    "start": "131680",
    "end": "137560"
  },
  {
    "text": "with giving back face data and so most of the camera apis are you take a",
    "start": "137560",
    "end": "143120"
  },
  {
    "text": "picture and take a good picture and how do you do so basically it's a camera application is one of the use cases but",
    "start": "143120",
    "end": "149120"
  },
  {
    "text": "the more interesting ones it's to yeah it's it's behaving",
    "start": "149120",
    "end": "156400"
  },
  {
    "text": "differently yeah um the camera face is it it's what other things you can do and",
    "start": "156400",
    "end": "161959"
  },
  {
    "text": "with that we'll get into more of the computer vision kind of applications um face detection what and things like that",
    "start": "161959",
    "end": "169720"
  },
  {
    "text": "personally that um I find that very interesting and I think there's going to be a huge SLE of applications around",
    "start": "169720",
    "end": "175800"
  },
  {
    "text": "that then we have callback interfaces um face detect section error call back",
    "start": "175800",
    "end": "181840"
  },
  {
    "text": "we'll talk about the picture preview and shter call backs when we go over the API for how to take a",
    "start": "181840",
    "end": "188000"
  },
  {
    "text": "picture the one that is in Orange on the screen is the one new API that was",
    "start": "188000",
    "end": "193360"
  },
  {
    "text": "introduced with Jelly Bean it's the autofocus move call back and I'll talk about that in a little",
    "start": "193360",
    "end": "200120"
  },
  {
    "start": "200000",
    "end": "200000"
  },
  {
    "text": "bit camera class so basically think of it all the actions you would actually do",
    "start": "201120",
    "end": "206400"
  },
  {
    "text": "with a physical camera you have to open the camera you have to shut it down at some point uh you should be able to",
    "start": "206400",
    "end": "213000"
  },
  {
    "text": "access all the controls if you what is the scene mode all those different controls and I'll talk about that in the",
    "start": "213000",
    "end": "219400"
  },
  {
    "text": "camera. parameters class so what is one of the first things one does with a camera is preview basically you see in",
    "start": "219400",
    "end": "226319"
  },
  {
    "text": "your little uh viewfinder what is the scene that you're trying to take a picture of",
    "start": "226319",
    "end": "232439"
  },
  {
    "text": "and preview is pretty complicated um so I really never worked",
    "start": "232439",
    "end": "238640"
  },
  {
    "text": "with cameras and all this before I joined up Tina and to me it used to be a tiny little thing at the back of a cell",
    "start": "238640",
    "end": "243760"
  },
  {
    "text": "phone but after a year working there I am just amazed at how much goes into that tiny little thing so preview it's",
    "start": "243760",
    "end": "251239"
  },
  {
    "text": "such a big deal once they bring new hardware up it's like if you get preview working it's a major achievement so now",
    "start": "251239",
    "end": "257560"
  },
  {
    "text": "I've I've started treating preview with a lot of respect more than I did a year back um how do you get live previews uh",
    "start": "257560",
    "end": "265479"
  },
  {
    "text": "in the call back and then there are other things that I find quite interesting is um how can you not you",
    "start": "265479",
    "end": "272520"
  },
  {
    "text": "suppose you don't want to display anything let's say you're writing an app where you're using the camera for gesture recognition all you want to see",
    "start": "272520",
    "end": "279440"
  },
  {
    "text": "is the gesture you don't really want to show that on your preview so can you actually grab the preview frame but not",
    "start": "279440",
    "end": "286400"
  },
  {
    "text": "displayed so we'll talk about that a little bit then of course it's capture at the end of the day for most",
    "start": "286400",
    "end": "292000"
  },
  {
    "text": "applications you do want to take that picture of your pet your dog your wife",
    "start": "292000",
    "end": "297240"
  },
  {
    "text": "whoever um want to unlock it lock the camera that's when we hand over access",
    "start": "297240",
    "end": "303479"
  },
  {
    "text": "to the camera Hardware to another uh process and that is basically when you",
    "start": "303479",
    "end": "309000"
  },
  {
    "text": "go from still mode to video mode and then the media recorder comes into play",
    "start": "309000",
    "end": "314639"
  },
  {
    "text": "I'll show a little bit of the code for that as well there are three basic actions that the camera class provides",
    "start": "314639",
    "end": "321600"
  },
  {
    "text": "start autofocus so before you actually take a picture you want to kick up the",
    "start": "321600",
    "end": "326880"
  },
  {
    "text": "autofocus to make sure that your um object the picture of what you're taking",
    "start": "326880",
    "end": "332000"
  },
  {
    "text": "is focused smooth Zoom is used where uh you can smoothly zoom in and out of the",
    "start": "332000",
    "end": "339960"
  },
  {
    "text": "picture and the one that was introduced with Ice Cream Sandwich is start face",
    "start": "339960",
    "end": "347759"
  },
  {
    "start": "349000",
    "end": "349000"
  },
  {
    "text": "detection okay camera. parameter so if you open up the uh developer page uh and",
    "start": "349280",
    "end": "357080"
  },
  {
    "text": "the Java DOC for this class it runs into my miles but if you look at it there are three patterns and that's what I've",
    "start": "357080",
    "end": "363759"
  },
  {
    "text": "broken up here of the way the methods are named there are some that are mandatory feature sets that any um",
    "start": "363759",
    "end": "371680"
  },
  {
    "text": "Android uh uh phone or device I would say certified right I mean you could really do nothing if you want to but um",
    "start": "371680",
    "end": "378720"
  },
  {
    "text": "is expected to provide those start with the get supported and then there will be",
    "start": "378720",
    "end": "384919"
  },
  {
    "text": "something behind it it could be preview sizes picture formats picture",
    "start": "384919",
    "end": "391080"
  },
  {
    "text": "sizes um uh all kinds of things so you can get a list of what uh scenes modes",
    "start": "391080",
    "end": "399759"
  },
  {
    "text": "um Auto white balance you can get a list of what is it that this particular device supports and then you can do your",
    "start": "399759",
    "end": "406440"
  },
  {
    "text": "gets and sets on it the second is a list of optional feature set because uh I even Google",
    "start": "406440",
    "end": "413800"
  },
  {
    "text": "recognizes that the hardware the capabilities of the hardware is going to",
    "start": "413800",
    "end": "419199"
  },
  {
    "text": "differ from device to device and so there's the optional feature set so some things like is video stabilization",
    "start": "419199",
    "end": "426599"
  },
  {
    "text": "supported right now that's a feature of the hardware and all platforms don't have to support it so for them the",
    "start": "426599",
    "end": "432720"
  },
  {
    "text": "pattern of the method is is video stabilization supported is video snapshot supported and then it has its",
    "start": "432720",
    "end": "439479"
  },
  {
    "text": "corresponding get in set the third is custom feature sets so we have certain",
    "start": "439479",
    "end": "445720"
  },
  {
    "text": "features like atina is a hardware manufacturer so we have certain features which which are not part of the regular",
    "start": "445720",
    "end": "451160"
  },
  {
    "text": "ones and for that we use uh we call the custom feature sets or um extensions and",
    "start": "451160",
    "end": "457000"
  },
  {
    "text": "we use the dump pipe that the architecture provides we it's just name value pairs with strings and you can use",
    "start": "457000",
    "end": "463120"
  },
  {
    "text": "the gets and sets for that and then at the bottom I have a",
    "start": "463120",
    "end": "469680"
  },
  {
    "text": "whole list of what are the different things um uh list of methods that and",
    "start": "469680",
    "end": "474879"
  },
  {
    "text": "features that uh a camera can provide",
    "start": "474879",
    "end": "480520"
  },
  {
    "text": "I briefly covered most of this the camera face is coordinates for the left",
    "start": "481440",
    "end": "487960"
  },
  {
    "text": "eye right eye mouth outer bounds of the face is what is covered by cameraface",
    "start": "487960",
    "end": "493720"
  },
  {
    "text": "right now however you will find that a lot of the newer Hardware U can support",
    "start": "493720",
    "end": "499599"
  },
  {
    "text": "a much uh bigger set of uh um coordinates related to face data",
    "start": "499599",
    "end": "508479"
  },
  {
    "start": "510000",
    "end": "510000"
  },
  {
    "text": "okay so what's new in Jelly Bean the when ice cream sandwich came out it came out with a huge set of uh apis for U",
    "start": "510520",
    "end": "519599"
  },
  {
    "text": "camera but Jelly Bean there was one camera API which is the autofocus move",
    "start": "519599",
    "end": "525240"
  },
  {
    "text": "callback uh basically there are different kinds of uh Focus modes that you can put your camera into if it is a",
    "start": "525240",
    "end": "532959"
  },
  {
    "text": "continuous Focus mode either for still or we you really the application at",
    "start": "532959",
    "end": "538760"
  },
  {
    "text": "times needs to to know whether the focus has started or it has stopped and so this is what that call back",
    "start": "538760",
    "end": "545200"
  },
  {
    "text": "provides the other thing they provided was in the media package and uh it's a",
    "start": "545200",
    "end": "551000"
  },
  {
    "text": "set of sounds that if your application wants to use uh to mimic the shutter or",
    "start": "551000",
    "end": "556519"
  },
  {
    "text": "the take picture call back that the system provides you would use this it's just convenience functions to use in",
    "start": "556519",
    "end": "562920"
  },
  {
    "text": "your application the most interesting in uh",
    "start": "562920",
    "end": "570200"
  },
  {
    "text": "part for Jelly Bean was that there was there is a new uh system camera application so now if you look at the",
    "start": "570200",
    "end": "576920"
  },
  {
    "text": "Jelly Bean source code under packages apps it has the Legacy camera and it has",
    "start": "576920",
    "end": "582120"
  },
  {
    "text": "the uh new camera app and the major difference is the support for gestures",
    "start": "582120",
    "end": "587600"
  },
  {
    "text": "which even the iOS 5 um are talking about is how you can once you take a",
    "start": "587600",
    "end": "593600"
  },
  {
    "text": "picture normally you had to click on the thumbnail and bring up the gallery application to see what picture you take",
    "start": "593600",
    "end": "599680"
  },
  {
    "text": "but they've now provided support for gestures so you can just flick right and see what the latest picture you took or",
    "start": "599680",
    "end": "607160"
  },
  {
    "text": "others and then the other gesture they have support for is the flick up for to",
    "start": "607160",
    "end": "612279"
  },
  {
    "text": "delete and undelete but I think the bigger thing is I I haven't had a chance to dig very",
    "start": "612279",
    "end": "618839"
  },
  {
    "text": "deep into what the differences are but the other thing is it's more this whole Jelly Bean buttery feel so it's more",
    "start": "618839",
    "end": "625360"
  },
  {
    "text": "about providing uh a smoother interface for the uh camera application so one of",
    "start": "625360",
    "end": "630839"
  },
  {
    "text": "the biggest things When developing a camera application is the time it takes",
    "start": "630839",
    "end": "636240"
  },
  {
    "text": "to start up the camera the time it takes to display the preview in and it could",
    "start": "636240",
    "end": "642480"
  },
  {
    "text": "become a very jerky app so a lot of optimizations are around how to create a",
    "start": "642480",
    "end": "647680"
  },
  {
    "text": "smooth user interface because uh what we're moving back and forth is um a lot",
    "start": "647680",
    "end": "653600"
  },
  {
    "text": "of data and a lot of time consuming tasks",
    "start": "653600",
    "end": "658920"
  },
  {
    "start": "659000",
    "end": "659000"
  },
  {
    "text": "this is just a table that I had put together when we evaluated the Ice Cream Sandwich features and at that time um a",
    "start": "660279",
    "end": "667720"
  },
  {
    "text": "lot of people got very confused uh even internally as to what was an API and",
    "start": "667720",
    "end": "673760"
  },
  {
    "text": "what is part of the system app and people were searching about why can't I do face recognition so we put a little",
    "start": "673760",
    "end": "679560"
  },
  {
    "text": "table together to see what what is part of the apis what's just in the system app and what is actually close sourced",
    "start": "679560",
    "end": "686560"
  },
  {
    "text": "and proprietary solution so this table uh just reflects to",
    "start": "686560",
    "end": "693079"
  },
  {
    "start": "694000",
    "end": "694000"
  },
  {
    "text": "that okay so some of the prominent use cases when dealing with uh API with the",
    "start": "695560",
    "end": "701399"
  },
  {
    "text": "camera apis is of course is the first to get your preview right uh second is to",
    "start": "701399",
    "end": "707320"
  },
  {
    "text": "take a picture um third is to save your picture and then the fourth is to uh",
    "start": "707320",
    "end": "713839"
  },
  {
    "text": "smoothly move from uh the still mode of a camera to a video mode",
    "start": "713839",
    "end": "720320"
  },
  {
    "text": "some of the secondary use cases is to create is to configure your uh camera the way you want it you want a certain",
    "start": "720320",
    "end": "726600"
  },
  {
    "text": "Auto wide balance a scene mode um things like that so this is more for what I",
    "start": "726600",
    "end": "732800"
  },
  {
    "text": "would call a power user of the camera rather than a general user who just click and shoot uh you would use that um",
    "start": "732800",
    "end": "740199"
  },
  {
    "text": "then we talked about it is how do you process the metadata the face data it could be Frame data histogram all the",
    "start": "740199",
    "end": "747560"
  },
  {
    "text": "metadata uh around um an image uh we have video snapshot uh",
    "start": "747560",
    "end": "754240"
  },
  {
    "text": "which was also introduced in ice cream sandwich as an API but the uh it's the",
    "start": "754240",
    "end": "759360"
  },
  {
    "text": "hardware that actually needs to be able to support it and in that case what happens is you need to uh you have uh",
    "start": "759360",
    "end": "765959"
  },
  {
    "text": "the camera uh uh uh in video recording mode you should also be able to just",
    "start": "765959",
    "end": "772399"
  },
  {
    "text": "maybe touch the screen or click a button and be able to get a full high resolution JPEG image",
    "start": "772399",
    "end": "781120"
  },
  {
    "text": "so one of the things is as an application developer if all you really want to do is um you just want to take a",
    "start": "782440",
    "end": "789720"
  },
  {
    "text": "picture or take a recording you can use system intents for that you don't really need the camera apis uh for that the",
    "start": "789720",
    "end": "797040"
  },
  {
    "text": "camera apis are if you really want to develop your own custom experience with",
    "start": "797040",
    "end": "802360"
  },
  {
    "text": "getting a picture or taking a picture and things like that so I would highly recommend to uh that the uh",
    "start": "802360",
    "end": "809680"
  },
  {
    "text": "on the Android page there's there's the link on the slide which is a very good tutorial on how to do different things",
    "start": "809680",
    "end": "816399"
  },
  {
    "text": "that you would want to do with the camera so do check it out and a lot of your at least beginner level questions",
    "start": "816399",
    "end": "821839"
  },
  {
    "text": "will definitely get answered from there okay at this point I'm going to",
    "start": "821839",
    "end": "827760"
  },
  {
    "text": "bring up Eclipse so it's it's a simple activity and I'll just describe the",
    "start": "827760",
    "end": "832800"
  },
  {
    "text": "layout to you or maybe we can take a look at this",
    "start": "832800",
    "end": "839000"
  },
  {
    "text": "so it's just in landscape mode there's a shutter button on top there's a little button where we switch between the two",
    "start": "847560",
    "end": "853199"
  },
  {
    "text": "modes and this will uh display the thumbnail once we have something to show",
    "start": "853199",
    "end": "858880"
  },
  {
    "text": "so very simple basic uh uh app camera",
    "start": "858880",
    "end": "864680"
  },
  {
    "text": "app okay so this is just some of our",
    "start": "864680",
    "end": "870399"
  },
  {
    "text": "uh fields and we can go straight to the oncreate I'm sure you're pretty familiar",
    "start": "870399",
    "end": "876040"
  },
  {
    "text": "with the uh inflating items and getting handles to them so the first one is uh",
    "start": "876040",
    "end": "884680"
  },
  {
    "text": "the shutter button where once it gets clicked on the first thing you do is uh",
    "start": "884680",
    "end": "891000"
  },
  {
    "text": "call the autofocus the next one is just a share",
    "start": "891000",
    "end": "896160"
  },
  {
    "text": "button so that which right now is not is invisible so you couldn't see it but uh",
    "start": "896160",
    "end": "901639"
  },
  {
    "text": "all this does is that it gives you the capability to share with any of the apps that can uh filter the send",
    "start": "901639",
    "end": "911040"
  },
  {
    "text": "intent switch button this one will toggle between the two modes and I'll go over the code for that in a",
    "start": "912560",
    "end": "920079"
  },
  {
    "text": "minute so so let's go and see how the preview",
    "start": "927040",
    "end": "934160"
  },
  {
    "text": "works so we need the custom surface callback which uh so in this case this",
    "start": "936160",
    "end": "942160"
  },
  {
    "text": "implements a surface holder callback which has three uh methods to implement",
    "start": "942160",
    "end": "947480"
  },
  {
    "text": "the surface destroyed created and changed and once we have a surface is",
    "start": "947480",
    "end": "953000"
  },
  {
    "text": "when we will actually open the camera and set the preview display to the",
    "start": "953000",
    "end": "958360"
  },
  {
    "text": "holder so there are two methods for preview one is set preview dis display",
    "start": "958360",
    "end": "965360"
  },
  {
    "text": "and the other is set preview texture and I will talk about that a little later on",
    "start": "965360",
    "end": "971399"
  },
  {
    "text": "this one helps the live preview stream is not returned back to the application",
    "start": "971399",
    "end": "977560"
  },
  {
    "text": "the preview frames go straight to the display now there are three there are",
    "start": "977560",
    "end": "982639"
  },
  {
    "text": "two other methods with preview if you want a copy of the frame uh back in the",
    "start": "982639",
    "end": "990639"
  },
  {
    "text": "application yes please do you have a question there back",
    "start": "990639",
    "end": "996560"
  },
  {
    "text": "there okay um one is the oneshot preview call back and another is the call back",
    "start": "996560",
    "end": "1002319"
  },
  {
    "text": "where every single frame that gets sent to the display subsystem a copy of that",
    "start": "1002319",
    "end": "1008560"
  },
  {
    "text": "is made from the Native memory into the um uh memory space of the application",
    "start": "1008560",
    "end": "1015519"
  },
  {
    "text": "and is returned back to the app in the one shot preview call back only one time",
    "start": "1015519",
    "end": "1022160"
  },
  {
    "text": "whenever that call is set the next preview next preview frame a copy of",
    "start": "1022160",
    "end": "1027240"
  },
  {
    "text": "that is sent to the application so under normal circumstances if you don't want to do anything with the preview frame",
    "start": "1027240",
    "end": "1034079"
  },
  {
    "text": "you don't need to set the preview call back it's only if you're trying to do something extra and we'll show I'll I'll",
    "start": "1034079",
    "end": "1040400"
  },
  {
    "text": "talk about an open- source project which is a barcode reader where they use the",
    "start": "1040400",
    "end": "1045438"
  },
  {
    "text": "oneshot preview call back to get a uh frame a copy of the preview frame and",
    "start": "1045439",
    "end": "1051280"
  },
  {
    "text": "then they process it to recognize what kind of barcode it",
    "start": "1051280",
    "end": "1056720"
  },
  {
    "text": "is so this one goes straight to the display the set preview texture on the",
    "start": "1056760",
    "end": "1062360"
  },
  {
    "text": "other hand is able to send the previews it bypasses the display Al together and",
    "start": "1062360",
    "end": "1067840"
  },
  {
    "text": "you can send it either to the GPU or to the CPU and we'll I'll talk about that in a later slide",
    "start": "1067840",
    "end": "1075720"
  },
  {
    "text": "so once you have set the uh the the surface here you can go ahead and start",
    "start": "1080880",
    "end": "1086960"
  },
  {
    "text": "preview once you're in preview this one just is just a Boolean to say that okay we're now in preview",
    "start": "1086960",
    "end": "1093200"
  },
  {
    "text": "mode now the other interesting thing uh the next use case is the ability to take",
    "start": "1093200",
    "end": "1098840"
  },
  {
    "text": "a picture so if we go back to our shutter",
    "start": "1098840",
    "end": "1104360"
  },
  {
    "text": "here we started an autofocus with a autofocus call back once the call back",
    "start": "1109280",
    "end": "1114720"
  },
  {
    "text": "returns meaning that the um the image is now focused it's when we will fire off",
    "start": "1114720",
    "end": "1120679"
  },
  {
    "text": "the take uh picture call S this",
    "start": "1120679",
    "end": "1128080"
  },
  {
    "text": "changed right so we have take picture there are two uh take picture calls that",
    "start": "1128080",
    "end": "1133480"
  },
  {
    "text": "are available in the apis one of them takes three parameters the other one takes four",
    "start": "1133480",
    "end": "1139240"
  },
  {
    "text": "the first one in both cases the shutter call back so as soon as the shutter is clicked you can you'll get a call back",
    "start": "1139240",
    "end": "1145080"
  },
  {
    "text": "so if you want to do anything with it I don't know maybe display stars or a",
    "start": "1145080",
    "end": "1150400"
  },
  {
    "text": "sound normally people just do a sound so if you want to do a custom sound or something you would uh put that in the",
    "start": "1150400",
    "end": "1155520"
  },
  {
    "text": "shutter call back the next one is the raw callback so if you um are looking",
    "start": "1155520",
    "end": "1162320"
  },
  {
    "text": "for to get back raw data and now um but the hardware has to support the",
    "start": "1162320",
    "end": "1168000"
  },
  {
    "text": "capability to provide unencoded data back and if you want to know what more",
    "start": "1168000",
    "end": "1173240"
  },
  {
    "text": "is raw you'll have to ask that question to Joe he's our expert on different formats",
    "start": "1173240",
    "end": "1179200"
  },
  {
    "text": "um the third one in this case is the jpeg callback so far I've never really seen the rock callback being used",
    "start": "1179200",
    "end": "1186240"
  },
  {
    "text": "anywhere um or Hardware that supports it but it could be my limited uh knowledge",
    "start": "1186240",
    "end": "1193000"
  },
  {
    "text": "uh jpeg callback of course returns uh the jpeg image so the picture which was",
    "start": "1193000",
    "end": "1198320"
  },
  {
    "text": "taken so so the preview could is typically at a lower resolution it could be a wga or something and then the jpeg",
    "start": "1198320",
    "end": "1205159"
  },
  {
    "text": "you'll get a uh full resolution image so if you have a three mag camera it'll be probably 3 mag F mag 8 mag whatever your",
    "start": "1205159",
    "end": "1212720"
  },
  {
    "text": "camera supports you can of course use the camera parameters to explicitly set the sizes of what kind of a size you",
    "start": "1212720",
    "end": "1220200"
  },
  {
    "text": "want it but by default it's typically the highest resolution that the hardware",
    "start": "1220200",
    "end": "1226000"
  },
  {
    "text": "supports so once you do take picture um at this",
    "start": "1226000",
    "end": "1232919"
  },
  {
    "text": "point you get a call back which has the data and on picture taken and so you",
    "start": "1232919",
    "end": "1238760"
  },
  {
    "text": "have to restart preview so yes please I just want to ask about the post okay so",
    "start": "1238760",
    "end": "1245720"
  },
  {
    "text": "the the post view is some of the cameras Hardware have a post View mode and um I",
    "start": "1245720",
    "end": "1251679"
  },
  {
    "text": "wouldn't know the industry definition of post view but I can tell you what post what the Oba",
    "start": "1251679",
    "end": "1257760"
  },
  {
    "text": "sensors do for post view it's a high power mode and there instead of the preview being at a lower resolution we",
    "start": "1257760",
    "end": "1264559"
  },
  {
    "text": "have things that go at um a full resolution it's constantly streamed at Full Resolution so at 8 megapixel sensor",
    "start": "1264559",
    "end": "1272679"
  },
  {
    "text": "is constantly capturing in a circular buffer it will capture images at 8 Meg and then we have a smaller resolution",
    "start": "1272679",
    "end": "1279679"
  },
  {
    "text": "that gets piped as the preview and when we come to the hardware section Joe will go over the circular buffers and show",
    "start": "1279679",
    "end": "1285679"
  },
  {
    "text": "you how it works so in this case the verion yes it depends it depends on",
    "start": "1285679",
    "end": "1292840"
  },
  {
    "text": "the hardware what they return in the post viw call back your interpretation",
    "start": "1292840",
    "end": "1298840"
  },
  {
    "text": "that so so this is one of the things I have as missing things in the Android",
    "start": "1298840",
    "end": "1304960"
  },
  {
    "text": "apis is what exactly does the Post viw mode mean and we typically find that the",
    "start": "1304960",
    "end": "1311960"
  },
  {
    "text": "supported sizes uh for preview and picture taken and postview don't always match the ones in regular",
    "start": "1311960",
    "end": "1320120"
  },
  {
    "text": "right so we don't have that so that API is also missing right and the way we worked around it internally is by using",
    "start": "1320120",
    "end": "1327120"
  },
  {
    "text": "the camera. parameters and having specific modes so we work around that we actually explicitly set it into post",
    "start": "1327120",
    "end": "1333200"
  },
  {
    "text": "View and then we have a strings that return all the supported size so that's how we worked around it but I think",
    "start": "1333200",
    "end": "1339000"
  },
  {
    "text": "there is the need for this uh uh camera API which talks about the post viw mode and uh the functionality there I mean",
    "start": "1339000",
    "end": "1346720"
  },
  {
    "text": "what are the capabilities in post viw mode",
    "start": "1346720",
    "end": "1350519"
  },
  {
    "text": "no it",
    "start": "1353919",
    "end": "1356158"
  },
  {
    "text": "doesn't yes it's not defined at all and I believe it is it's not standardized it's not defined it's Hardware dependent",
    "start": "1360720",
    "end": "1367360"
  },
  {
    "text": "so it's subject to interpretation I think it's probably mostly used by oems",
    "start": "1367360",
    "end": "1373360"
  },
  {
    "text": "because they know what their system capabilities is where is a third party developer being able actually being able",
    "start": "1373360",
    "end": "1378919"
  },
  {
    "text": "to use the post view call back reliably so that's that's my take on",
    "start": "1378919",
    "end": "1384760"
  },
  {
    "text": "it okay so save picture is just an async task and um we'll just save it to the",
    "start": "1386480",
    "end": "1392679"
  },
  {
    "text": "file system and that's pretty much it so with",
    "start": "1392679",
    "end": "1398400"
  },
  {
    "text": "this I'll just talk about how do we go from uh a still mode to the video mode",
    "start": "1398400",
    "end": "1409158"
  },
  {
    "text": "switch video on right there",
    "start": "1409279",
    "end": "1415159"
  },
  {
    "text": "up so one of the first things you have to do is you have to unlock the camera",
    "start": "1422440",
    "end": "1427559"
  },
  {
    "text": "so that right now the application has a handle to the camera but when we need to",
    "start": "1427559",
    "end": "1432640"
  },
  {
    "text": "go when we get into video recording we need the media recorder process to also be able to access the camera and so the",
    "start": "1432640",
    "end": "1440039"
  },
  {
    "text": "first thing you need to do is unlock create a new media recorder these are just call backs for errors and infos you",
    "start": "1440039",
    "end": "1448720"
  },
  {
    "text": "set the camera you have to tell the camera okay this is the camera instance that I I was using you hand it over to",
    "start": "1448720",
    "end": "1455440"
  },
  {
    "text": "uh the media recorder set your profile set your video source",
    "start": "1455440",
    "end": "1460600"
  },
  {
    "text": "[Music] and set output file how what's the uh",
    "start": "1460600",
    "end": "1466880"
  },
  {
    "text": "file name duration file Max file size and then you also",
    "start": "1466880",
    "end": "1472360"
  },
  {
    "text": "have to again provide the set preview display holder for that the one that you had already created and you start no you",
    "start": "1472360",
    "end": "1479440"
  },
  {
    "text": "I think you put prepare and then start and the media recorder State diagram for those of you are familiar with the API",
    "start": "1479440",
    "end": "1485399"
  },
  {
    "text": "is pretty well documented and if you miss even one of the um calls somewhere",
    "start": "1485399",
    "end": "1491200"
  },
  {
    "text": "in there it will fail and you will go into one of those catches there",
    "start": "1491200",
    "end": "1498399"
  },
  {
    "start": "1498000",
    "end": "1498000"
  },
  {
    "text": "face detection so face detection um you basically you have to the way to detect",
    "start": "1498600",
    "end": "1506000"
  },
  {
    "text": "there's no is face detection um a method",
    "start": "1506000",
    "end": "1511039"
  },
  {
    "text": "to see whether face detection is supported or not Instead This one is get Max number detect faces greater than",
    "start": "1511039",
    "end": "1518279"
  },
  {
    "text": "zero I'm not sure why the is face detected supported call is not there but",
    "start": "1518279",
    "end": "1523720"
  },
  {
    "text": "that's how it is and if it is then you can start face detection",
    "start": "1523720",
    "end": "1528760"
  },
  {
    "text": "so the way the API works is and the way some of the uh camera Stacks work is",
    "start": "1528760",
    "end": "1534080"
  },
  {
    "text": "that then you will get a call but you'll have a listener for the face detection listener and then you have to do a lot",
    "start": "1534080",
    "end": "1540080"
  },
  {
    "text": "of complicated math to figure out what the coordinates are and accordingly put",
    "start": "1540080",
    "end": "1545440"
  },
  {
    "text": "overlays on your preview screen some of the newer isps will actually just put it",
    "start": "1545440",
    "end": "1551159"
  },
  {
    "text": "on for you but um so we we typically I really haven't",
    "start": "1551159",
    "end": "1558039"
  },
  {
    "text": "worked work that much with the onface detection callback because we just get ours uh overlaid on",
    "start": "1558039",
    "end": "1566360"
  },
  {
    "text": "top okay other application so this was where it's a non- camera application um so one of the things is I",
    "start": "1566559",
    "end": "1574840"
  },
  {
    "start": "1568000",
    "end": "1568000"
  },
  {
    "text": "already talked about is is the it's an opsource library for 1D 2D pictures and",
    "start": "1574840",
    "end": "1579960"
  },
  {
    "text": "they use the oneshot preview callback which I mentioned briefly and I'll show you that application also app demo at",
    "start": "1579960",
    "end": "1587279"
  },
  {
    "text": "the end of The Talk live preview without a display and so this only started as recently as",
    "start": "1587279",
    "end": "1593880"
  },
  {
    "text": "honeycomb and basically went mainstream with Ice Cream Sandwich so there is now support for GPU processing and CPU",
    "start": "1593880",
    "end": "1600880"
  },
  {
    "text": "processing so you can and the way that works is which I mentioned earlier too is the Set uh preview texture so for for",
    "start": "1600880",
    "end": "1609880"
  },
  {
    "text": "you to work with GPU processing you do need to know opengl and you need to provide a context and then there the",
    "start": "1609880",
    "end": "1616520"
  },
  {
    "text": "call is surface texture. update text image whenever you make that call the",
    "start": "1616520",
    "end": "1621600"
  },
  {
    "text": "texture will actually get updated with the latest preview frame that is available if you want to do uh if you",
    "start": "1621600",
    "end": "1627799"
  },
  {
    "text": "don't want to work with openg GL code uh you can still have a surface texture uh",
    "start": "1627799",
    "end": "1633600"
  },
  {
    "text": "and and but use just a dummy ID instead in this case it gets piped to the CPU",
    "start": "1633600",
    "end": "1639159"
  },
  {
    "text": "not the GPU and it's um not as efficient of course as sending things to the GPU",
    "start": "1639159",
    "end": "1645399"
  },
  {
    "text": "but then you don't need to know open GL and what I I saw was that the open CV",
    "start": "1645399",
    "end": "1651000"
  },
  {
    "text": "sample codes for those of you who are may be new to this open CV is the open source computer vision Library um they",
    "start": "1651000",
    "end": "1658279"
  },
  {
    "text": "in all of their sample code for Android they use this option number two and I have a few demos that I can show at the",
    "start": "1658279",
    "end": "1664480"
  },
  {
    "text": "end apps just they're just sample apps straight from open CV um that show but",
    "start": "1664480",
    "end": "1669880"
  },
  {
    "text": "the real interesting ones use cases for this is the Google IO 2011 talk and",
    "start": "1669880",
    "end": "1677039"
  },
  {
    "text": "there's a link here I'm sure that slides will be available right there must be a way to make them available okay so that",
    "start": "1677039",
    "end": "1684080"
  },
  {
    "text": "is really interesting and they have a lot of use cases of how actually um uh",
    "start": "1684080",
    "end": "1689919"
  },
  {
    "text": "you would use the preview and do a lot of fun things so I would recommend that",
    "start": "1689919",
    "end": "1694960"
  },
  {
    "text": "you take a look at that afterwards Android media",
    "start": "1694960",
    "end": "1700519"
  },
  {
    "start": "1700000",
    "end": "1700000"
  },
  {
    "text": "framework okay so most of you have seen this um four colored Google colored",
    "start": "1700519",
    "end": "1706799"
  },
  {
    "text": "diagram and and that is the camera",
    "start": "1706799",
    "end": "1712480"
  },
  {
    "start": "1710000",
    "end": "1710000"
  },
  {
    "text": "H the piece that we work on mostly okay so it's basically um if",
    "start": "1712480",
    "end": "1721760"
  },
  {
    "start": "1719000",
    "end": "1719000"
  },
  {
    "text": "you're familiar with the architecture there's the hardware independent piece and the hardware dependent piece the",
    "start": "1721760",
    "end": "1727120"
  },
  {
    "text": "hardware independent piece is the application application framework which mostly written in um Java and then we",
    "start": "1727120",
    "end": "1733960"
  },
  {
    "text": "have the camera Service uh which is uh native code and everything below that",
    "start": "1733960",
    "end": "1739360"
  },
  {
    "text": "yellow line is all Hardware dependent and the hardware uh the oems or the",
    "start": "1739360",
    "end": "1744799"
  },
  {
    "text": "hardware manufacturers typically are the ones who Implement uh those",
    "start": "1744799",
    "end": "1751200"
  },
  {
    "start": "1751000",
    "end": "1751000"
  },
  {
    "text": "pieces so how does it work we have an application and so the camera service lives within the media server process",
    "start": "1751200",
    "end": "1758919"
  },
  {
    "text": "and once an application makes a request for um the the M camera. openen call uh",
    "start": "1758919",
    "end": "1766240"
  },
  {
    "text": "it will make a call to camera service is over the binder interface and a camera",
    "start": "1766240",
    "end": "1772559"
  },
  {
    "text": "uh object is requested from the hardware it also creates um a uh",
    "start": "1772559",
    "end": "1779360"
  },
  {
    "text": "connection to the surface flinger so that the uh preview can uh preview frames can be",
    "start": "1779360",
    "end": "1785960"
  },
  {
    "text": "displayed if there's another application and it makes a request to the front-facing camera that one will also",
    "start": "1785960",
    "end": "1792640"
  },
  {
    "text": "get serviced but if there is already uh an application has has a um handle open",
    "start": "1792640",
    "end": "1800480"
  },
  {
    "text": "to an ex to one of the cameras then the other applications get refused so as a",
    "start": "1800480",
    "end": "1805799"
  },
  {
    "text": "good uh Android citizen if you're an app developer in your on resume and on pause",
    "start": "1805799",
    "end": "1811279"
  },
  {
    "text": "you need to release and connect your camera otherwise other people will not",
    "start": "1811279",
    "end": "1816880"
  },
  {
    "text": "other applications will not be able to use it so inside the camera app that's what",
    "start": "1816880",
    "end": "1823519"
  },
  {
    "start": "1820000",
    "end": "1820000"
  },
  {
    "text": "it looks like there's a jni layer um the camera server which is Hardware",
    "start": "1823519",
    "end": "1830000"
  },
  {
    "text": "independent uh resides in the lib cameras service. so shared",
    "start": "1830000",
    "end": "1836919"
  },
  {
    "start": "1836000",
    "end": "1836000"
  },
  {
    "text": "Library so what does the what does the code in the jni layer the Android Hardware camera do it basically creates",
    "start": "1839000",
    "end": "1845760"
  },
  {
    "text": "a persistent context for all the callbacks that come from the Native layer uh it holds references to the Java",
    "start": "1845760",
    "end": "1853159"
  },
  {
    "text": "camera object face object and area object so one thing to remember is that a um copy of the uh jpeg or the preview",
    "start": "1853159",
    "end": "1862519"
  },
  {
    "text": "frame is made here in this layer so it is expensive uh if you're thinking of",
    "start": "1862519",
    "end": "1868120"
  },
  {
    "text": "doing the preview call BS just remember that you're actually copies of frames are happening so it is",
    "start": "1868120",
    "end": "1875240"
  },
  {
    "text": "expensive it's basically a resource manager for the uh camera Hardware it",
    "start": "1876679",
    "end": "1882960"
  },
  {
    "text": "this is the one that checks for permission so you do have to declare your Hardware permissions in your app application for you be able to use this",
    "start": "1882960",
    "end": "1889799"
  },
  {
    "text": "one uh it keeps information about how many cameras are available their orientation and things like",
    "start": "1889799",
    "end": "1897159"
  },
  {
    "text": "this so this is the uh open source folder structure and uh it's probably",
    "start": "1897159",
    "end": "1902600"
  },
  {
    "start": "1899000",
    "end": "1899000"
  },
  {
    "text": "too small to see but uh where different pieces of the code live and interestingly this got changed in Jelly",
    "start": "1902600",
    "end": "1909399"
  },
  {
    "text": "Bean and things moved from Frameworks based to Frameworks AV but um when I",
    "start": "1909399",
    "end": "1915279"
  },
  {
    "text": "looked do did a diff of all the folders I didn't find too much of a difference in the code it's more like bug fixes or",
    "start": "1915279",
    "end": "1922240"
  },
  {
    "text": "support for uh the new API called the autofocus move call back so there was",
    "start": "1922240",
    "end": "1927559"
  },
  {
    "text": "there's I didn't see any major difference in the code base they just moved it",
    "start": "1927559",
    "end": "1933559"
  },
  {
    "text": "around and with that it's going to be all about Joe so uh hi my name is Joe",
    "start": "1933639",
    "end": "1940880"
  },
  {
    "text": "rickon and I'm a software engineer for aptina uh similar to balwinder I work in",
    "start": "1940880",
    "end": "1945960"
  },
  {
    "text": "uh in the driver group we do device drivers and also low-l",
    "start": "1945960",
    "end": "1951679"
  },
  {
    "text": "software and so the next section we're going to talk about is the hardware dependent section we'll start out with",
    "start": "1951679",
    "end": "1957159"
  },
  {
    "text": "the camera how and I'll be talking about the three",
    "start": "1957159",
    "end": "1963080"
  },
  {
    "start": "1962000",
    "end": "1962000"
  },
  {
    "text": "areas here camera Hal followed by a kernel device driver and then uh a little bit on sensor",
    "start": "1963080",
    "end": "1970200"
  },
  {
    "start": "1971000",
    "end": "1971000"
  },
  {
    "text": "Hardware so the camera Hardware or I'm sorry the camera H is a library that's specific to the hardware W and this is",
    "start": "1971880",
    "end": "1978760"
  },
  {
    "text": "usually written by the hardware vendors TI Qualcomm or others uh camera how interfaces with the",
    "start": "1978760",
    "end": "1986360"
  },
  {
    "text": "camera Services uh stack that's right above it and it does so through uh for",
    "start": "1986360",
    "end": "1992240"
  },
  {
    "text": "Froyo it used a camera Hardware interface and for Ice Cream Sandwich it uses camera. H and Camera how interfaces",
    "start": "1992240",
    "end": "1999120"
  },
  {
    "text": "with the lower level driver in this case uh I'm talking about video for Linux but there is also other uh interfaces that",
    "start": "1999120",
    "end": "2005559"
  },
  {
    "text": "it could uh talk to it could be open Max or even others and when it's",
    "start": "2005559",
    "end": "2011080"
  },
  {
    "text": "talking with video for Linux it uses file IO",
    "start": "2011080",
    "end": "2015759"
  },
  {
    "text": "operations this gives a block diagram of the camera how and this is based on uh TI omap 4 open source code that uh that",
    "start": "2016960",
    "end": "2025240"
  },
  {
    "start": "2018000",
    "end": "2018000"
  },
  {
    "text": "we use and so in this block diagram camera how block is sort of the quarterback for",
    "start": "2025240",
    "end": "2031080"
  },
  {
    "text": "all the other uh blocks memory manager uh display surface manager event",
    "start": "2031080",
    "end": "2036760"
  },
  {
    "text": "notification and the lowest level one is a camera",
    "start": "2036760",
    "end": "2041398"
  },
  {
    "text": "manager each of the blocks are specific to the hardware that's running and so",
    "start": "2043080",
    "end": "2048599"
  },
  {
    "start": "2044000",
    "end": "2044000"
  },
  {
    "text": "depending on the hardware platform qualcom might have a little bit different than TI uh some of the um functions of the",
    "start": "2048599",
    "end": "2056638"
  },
  {
    "text": "camera how block are initialization so this will initialize everything from the camera how on down uh it'll initialize a",
    "start": "2056639",
    "end": "2064040"
  },
  {
    "text": "device driver and it'll also initialize a hardware and get it ready for uh preview viewing or whatever uh camera",
    "start": "2064040",
    "end": "2069839"
  },
  {
    "text": "Services interface everything that's sent from the top layers is handled by this block also dispatching it either",
    "start": "2069839",
    "end": "2076358"
  },
  {
    "text": "internally or to the drivers and then the uh camera State machine is also maintained here too and",
    "start": "2076359",
    "end": "2083320"
  },
  {
    "text": "this is uh the camera is a state machine it uh moves from standby to preview from preview to capture from preview to video",
    "start": "2083320",
    "end": "2090720"
  },
  {
    "text": "It Doesn't just sort of Jump Around into different things you don't move from standby into capture for example and so",
    "start": "2090720",
    "end": "2095800"
  },
  {
    "text": "a state machine has to be maintained by the camera uh memory manager cameras as you",
    "start": "2095800",
    "end": "2101880"
  },
  {
    "text": "probably are aware are very memory intensive so so you want to have a good memory manager to allocate buffers",
    "start": "2101880",
    "end": "2108960"
  },
  {
    "text": "properly and free them when when they're not in use any longer the display surface manager uh controls preview",
    "start": "2108960",
    "end": "2116760"
  },
  {
    "text": "activity between camera how and the uh display device and so it coordinates",
    "start": "2116760",
    "end": "2123240"
  },
  {
    "text": "back and forth of the display uh display process",
    "start": "2123240",
    "end": "2128640"
  },
  {
    "text": "uh it sends frames to the uh display when they're ready for preview and then also signals to the lower level uh uh",
    "start": "2128680",
    "end": "2136000"
  },
  {
    "text": "driver uh when buffers can be queued or uncued uh event notification there's",
    "start": "2136000",
    "end": "2142599"
  },
  {
    "text": "several events that get called back up into application space that I'm sure you're aware of uh those are broken down",
    "start": "2142599",
    "end": "2148359"
  },
  {
    "text": "into three broad events at this level there's notify which uh you get called",
    "start": "2148359",
    "end": "2153480"
  },
  {
    "text": "on when there's an error or a zoom event or a a shut event or things of that sort",
    "start": "2153480",
    "end": "2159839"
  },
  {
    "text": "there's a time stamp which is used for video uh frame stamping and then a data",
    "start": "2159839",
    "end": "2165200"
  },
  {
    "text": "call back when preview if there's a preview call back uh compressed images or postview",
    "start": "2165200",
    "end": "2171440"
  },
  {
    "text": "images and the lowest level is the one called camera manager or camera adapter and this talks directly to the",
    "start": "2171440",
    "end": "2177880"
  },
  {
    "text": "underlying uh device driver or rendering uh",
    "start": "2177880",
    "end": "2184440"
  },
  {
    "text": "software uh for a use case for this what I did did is I chose a preview so we'll",
    "start": "2184960",
    "end": "2190160"
  },
  {
    "text": "take a look at what camera how does for preview then what the driver does for preview and then underneath of what",
    "start": "2190160",
    "end": "2196480"
  },
  {
    "text": "happens in Hardware when preview uh preview is executed preview is displaying the camera EV engine real",
    "start": "2196480",
    "end": "2202440"
  },
  {
    "text": "time as I'm sure you're aware and so the camera passes that image straight over to the display",
    "start": "2202440",
    "end": "2208440"
  },
  {
    "text": "device uh from the application view that's a single call but from uh",
    "start": "2208440",
    "end": "2214480"
  },
  {
    "text": "everything down below that that's many calls and many different things",
    "start": "2214480",
    "end": "2219520"
  },
  {
    "text": "this uh sequence diagram here gives an overview of all the different calls that sort of go on so single call from the",
    "start": "2220760",
    "end": "2226560"
  },
  {
    "start": "2221000",
    "end": "2221000"
  },
  {
    "text": "application down to camera server then from camera how down there was a number of different calls very what we call I",
    "start": "2226560",
    "end": "2233440"
  },
  {
    "text": "oals in between the camera how and the device driver so the first one would be to set the format of the camera image it",
    "start": "2233440",
    "end": "2240560"
  },
  {
    "text": "would be uh set the resolution which is a size and then the image format maybe yuv or RGB or whatever the next next one",
    "start": "2240560",
    "end": "2248079"
  },
  {
    "text": "is uh requesting buffers the video for Linux organizes uh",
    "start": "2248079",
    "end": "2254680"
  },
  {
    "text": "camera uh screenshots in buffers it will take a whole slew of buffers and do that in a circular list and this is important",
    "start": "2254680",
    "end": "2262400"
  },
  {
    "text": "for keeping the camera moving and not dropping frames and things like that so requesting the buffers is an important",
    "start": "2262400",
    "end": "2268640"
  },
  {
    "text": "part uh if buffers are allocated in kernel Space versus user space we want to query the buffers find out things",
    "start": "2268640",
    "end": "2275680"
  },
  {
    "text": "about them and then map them into the memory space for uh user",
    "start": "2275680",
    "end": "2281040"
  },
  {
    "text": "space uh last two things we queue up the buffers into our internal queue and then uh stream on turns on preview and that",
    "start": "2281040",
    "end": "2288240"
  },
  {
    "text": "starts the camera pipeline uh",
    "start": "2288240",
    "end": "2292640"
  },
  {
    "text": "flowing the next slide here shows what happens uh during preview operation uh the hardware receives a",
    "start": "2295480",
    "end": "2302119"
  },
  {
    "start": "2296000",
    "end": "2296000"
  },
  {
    "text": "preview image it signals to the driver that a preview is ready the driver and",
    "start": "2302119",
    "end": "2307800"
  },
  {
    "text": "turn signals to camera how that preview image is ready camera how will take that",
    "start": "2307800",
    "end": "2313240"
  },
  {
    "text": "image or a pointer to that image dcq it out of the CUA buffers and then pass",
    "start": "2313240",
    "end": "2318319"
  },
  {
    "text": "that off to uh the display device uh which will either copy it into the display memory or pass it off as a",
    "start": "2318319",
    "end": "2324960"
  },
  {
    "text": "memory mapped object into display and if a call preview call back is enabled then",
    "start": "2324960",
    "end": "2330200"
  },
  {
    "text": "that'll be copied uh for user",
    "start": "2330200",
    "end": "2333960"
  },
  {
    "text": "space uh next section we're going to go we go down one more level and we'll talk about the cam driver at kernel",
    "start": "2335240",
    "end": "2341880"
  },
  {
    "start": "2336000",
    "end": "2336000"
  },
  {
    "text": "level the from the previous uh previously for a camera how everything",
    "start": "2341880",
    "end": "2348200"
  },
  {
    "text": "above that is in terms of streams and parameters and uh things of this nature",
    "start": "2348200",
    "end": "2353760"
  },
  {
    "text": "things that you're familiar with from the application Level at this level down below everything is in terms of uh",
    "start": "2353760",
    "end": "2360280"
  },
  {
    "text": "register rights uh data being transferred uh over parallel and Rippy",
    "start": "2360280",
    "end": "2365760"
  },
  {
    "text": "lines uh things of that sort so the kernel driver represents a",
    "start": "2365760",
    "end": "2372160"
  },
  {
    "start": "2369000",
    "end": "2369000"
  },
  {
    "text": "standard interface for different types of camera Hardware so what this means is that uh you may have various different",
    "start": "2372160",
    "end": "2379280"
  },
  {
    "text": "types of camera Hardware below this but at that level of the video for Linux or open Max or whatever it's a standardized",
    "start": "2379280",
    "end": "2384760"
  },
  {
    "text": "level and that's what camera how will Connect into uh it can support different",
    "start": "2384760",
    "end": "2389920"
  },
  {
    "text": "types of Hardware topologies such as a image sensor processor which I'll talk about in a little bit versus a smart",
    "start": "2389920",
    "end": "2396640"
  },
  {
    "text": "sensor are handled at this level and video for L does a pretty good job of",
    "start": "2396640",
    "end": "2402160"
  },
  {
    "text": "handling uh these things this block diagram just gives an",
    "start": "2402160",
    "end": "2407200"
  },
  {
    "start": "2405000",
    "end": "2405000"
  },
  {
    "text": "overview of a typical video for Linux driver the top layer contains all the",
    "start": "2407200",
    "end": "2412440"
  },
  {
    "text": "file IO calls that are used between cameral and uh and the driver also the",
    "start": "2412440",
    "end": "2419480"
  },
  {
    "text": "driver infrastructure is routed here the C controlling interface uh controls uh",
    "start": "2419480",
    "end": "2425359"
  },
  {
    "text": "data flow and uh um control flow on the lower right hand side uh",
    "start": "2425359",
    "end": "2432480"
  },
  {
    "text": "each camera will have its own uh file that'll have all its Hardware dependent uh Parts in it how to detect the camera",
    "start": "2432480",
    "end": "2439319"
  },
  {
    "text": "how to initialize it uh power management uh things of that sort and of course uh",
    "start": "2439319",
    "end": "2445640"
  },
  {
    "text": "the driver has buffer and memory uh management uh things inside of",
    "start": "2445640",
    "end": "2452000"
  },
  {
    "start": "2452000",
    "end": "2452000"
  },
  {
    "text": "it the if you take a look at video for Linux driver it's just a huge directory there's like uh you know 100 different",
    "start": "2453720",
    "end": "2460200"
  },
  {
    "text": "cameras supported and what happens is is that those top layers on our previous diagram there are all the same but",
    "start": "2460200",
    "end": "2465880"
  },
  {
    "text": "underneath each camera can have its own file and you can use that with the top",
    "start": "2465880",
    "end": "2471400"
  },
  {
    "text": "uh the top layer so you can support multiple or many different types of cameras or different types of",
    "start": "2471400",
    "end": "2476720"
  },
  {
    "text": "topologies usually you these are all done at compile time so you pick out your cameras that you're going to use",
    "start": "2476720",
    "end": "2482079"
  },
  {
    "text": "one or two front facing back facing compile them in uh you want to sort of keep these to a minimum you don't want",
    "start": "2482079",
    "end": "2487480"
  },
  {
    "text": "to compile them all in because it takes a long time to initialize uh initialize cameras and video for Linux exposes",
    "start": "2487480",
    "end": "2495000"
  },
  {
    "text": "these cameras has uh devices in the dev directory video Zero video One",
    "start": "2495000",
    "end": "2502000"
  },
  {
    "start": "2503000",
    "end": "2503000"
  },
  {
    "text": "Etc uh some of the kernel resources um memory is very important as I said",
    "start": "2503319",
    "end": "2508520"
  },
  {
    "text": "before you can either allocate buffers in kernel space or you can do it in user space and have those passed",
    "start": "2508520",
    "end": "2514079"
  },
  {
    "text": "down um when you talk about a camera you're always think thinking that the hardware transfers the image out of the",
    "start": "2514079",
    "end": "2519440"
  },
  {
    "text": "camera into memory you never hear of anybody pulling the camera for data that's very old and also most modern",
    "start": "2519440",
    "end": "2527800"
  },
  {
    "text": "chips have mmu associated with the camera uh Hardware what this means is uh",
    "start": "2527800",
    "end": "2533960"
  },
  {
    "text": "rather than having one contiguous block of memory for each image which is very difficult to allocate in a real-time",
    "start": "2533960",
    "end": "2539960"
  },
  {
    "text": "operating system or just any operating system you can have a scatter gather memory can be used so blocks can be",
    "start": "2539960",
    "end": "2546760"
  },
  {
    "text": "placed anywhere in memory and it can uh dmate any of those interrupts of course are important for the camera you don't",
    "start": "2546760",
    "end": "2552960"
  },
  {
    "text": "want to pull it so interrupts they have different capabilities for interrupting when the frames finished or starts",
    "start": "2552960",
    "end": "2559200"
  },
  {
    "text": "things like that uh there's the control and the data path of a camera control",
    "start": "2559200",
    "end": "2566119"
  },
  {
    "text": "refers to how you're controlling the camera how those parameters you send down get set data is how the image it",
    "start": "2566119",
    "end": "2571319"
  },
  {
    "text": "comes out of the camera uh iqu C has been used for controlling uh camera",
    "start": "2571319",
    "end": "2576640"
  },
  {
    "text": "register reads and writes for years uh iqu C is a little bit of a slower interface uh 100 khz or 400 khz are the",
    "start": "2576640",
    "end": "2585160"
  },
  {
    "text": "standards or even a mega a meab bit right now uh alternative to that is a",
    "start": "2585160",
    "end": "2590440"
  },
  {
    "text": "spy which is in use by some camera camera vendors uh control signals there's",
    "start": "2590440",
    "end": "2596400"
  },
  {
    "text": "things like uh reset and standby you guys are all software people you don't care about that stuff so um and then",
    "start": "2596400",
    "end": "2603200"
  },
  {
    "text": "power uh Power uh things power management for cameras is very important you don't want to number one have the",
    "start": "2603200",
    "end": "2609720"
  },
  {
    "text": "camera on all the times it tends to use a lot of power number two you want to turn it off but you don't want to lose",
    "start": "2609720",
    "end": "2615599"
  },
  {
    "text": "all your data you want to be able to come up and preview quickly if that comes up so you want to be able to suspend the camera and put it in a",
    "start": "2615599",
    "end": "2621920"
  },
  {
    "text": "standby State uh we talked about the buffering",
    "start": "2621920",
    "end": "2627319"
  },
  {
    "text": "system used uh for um video for Linux uh this is just a drawing of how it works",
    "start": "2627319",
    "end": "2634280"
  },
  {
    "text": "uh depending on the size of the buffers number of buffers will be uh implemented",
    "start": "2634280",
    "end": "2639720"
  },
  {
    "text": "the uh camera Hal and the video for Linux have a handshake between them",
    "start": "2639720",
    "end": "2644800"
  },
  {
    "text": "camera the kernel fills up the buffers the Hal empties the buffers or chooses",
    "start": "2644800",
    "end": "2650319"
  },
  {
    "text": "the buffers so it's sort of a back and forth uh relationship buffer filling starts when",
    "start": "2650319",
    "end": "2656800"
  },
  {
    "text": "video for Linux uh stream on command is executed and then uh stops when stream off is executed and it doesn't matter",
    "start": "2656800",
    "end": "2663440"
  },
  {
    "text": "what size of image you're uh capturing uh it's it uses the same format the",
    "start": "2663440",
    "end": "2669160"
  },
  {
    "text": "whole time what this very uh busy table does",
    "start": "2669160",
    "end": "2674640"
  },
  {
    "start": "2670000",
    "end": "2670000"
  },
  {
    "text": "is sort of outline what happens during preview uh for the camera so camera Hal",
    "start": "2674640",
    "end": "2681240"
  },
  {
    "text": "will send down all of the calls in the uh on the left column there and these will be converted either into Hardware",
    "start": "2681240",
    "end": "2687559"
  },
  {
    "text": "calls or into driver",
    "start": "2687559",
    "end": "2690680"
  },
  {
    "text": "calls and uh the last entry on the first table there Imaging is starting by the",
    "start": "2694440",
    "end": "2700760"
  },
  {
    "text": "image enable or preview start U my last slide on the driver um",
    "start": "2700760",
    "end": "2708760"
  },
  {
    "start": "2705000",
    "end": "2705000"
  },
  {
    "text": "video for Linux driver has been uh progressing to the point where um",
    "start": "2708760",
    "end": "2714280"
  },
  {
    "text": "there's something called the media controller architecture and this is uh fairly new over the last year or two and",
    "start": "2714280",
    "end": "2720480"
  },
  {
    "text": "this is allows the application programmer to control the pipeline the actual pipelines so for uh certain types",
    "start": "2720480",
    "end": "2728359"
  },
  {
    "text": "of camera architecture you can go in and tell how you want the data flowing through it through a resizer do you want",
    "start": "2728359",
    "end": "2734280"
  },
  {
    "text": "it to have yuv conversion things like this um this works really well for an",
    "start": "2734280",
    "end": "2740480"
  },
  {
    "text": "open source architecture many isps and cameras are closed architecture um it's",
    "start": "2740480",
    "end": "2748119"
  },
  {
    "text": "actually a very nice where it's used one example of that is a TI's omap 3",
    "start": "2748119",
    "end": "2753440"
  },
  {
    "text": "processor that's an open architecture you can download documents on the um web and it's uh and use this AR uh driver uh",
    "start": "2753440",
    "end": "2761920"
  },
  {
    "text": "controller for it the other end of that is proprietary isps move their software",
    "start": "2761920",
    "end": "2767200"
  },
  {
    "text": "out of the driver and this is to avoid open source issues what they'll do is move the code up into kernel",
    "start": "2767200",
    "end": "2775520"
  },
  {
    "text": "space uh camera Hardware overview uh this is the lowest level of uh the stack",
    "start": "2776319",
    "end": "2782760"
  },
  {
    "start": "2778000",
    "end": "2778000"
  },
  {
    "text": "that uh we be presenting basically from aa's point of",
    "start": "2782760",
    "end": "2788520"
  },
  {
    "start": "2787000",
    "end": "2787000"
  },
  {
    "text": "view there are two types of cameras one is a just an sensor what we call a bar",
    "start": "2788520",
    "end": "2793839"
  },
  {
    "text": "or raw sensor it outputs something called a bear or buyer image it has no",
    "start": "2793839",
    "end": "2799680"
  },
  {
    "text": "or very limited image processing and it requires image sensor",
    "start": "2799680",
    "end": "2804760"
  },
  {
    "text": "processor something to do the image processing in Hardware either on the host or on another",
    "start": "2804760",
    "end": "2810319"
  },
  {
    "text": "chip and it has very simple controls the other uh uh type of sensor",
    "start": "2810319",
    "end": "2817480"
  },
  {
    "text": "is what we call a smart sensor or a system on a chip sensor and this uh outputs a processed image so this is",
    "start": "2817480",
    "end": "2824160"
  },
  {
    "text": "sort of an all-in-one package uh no host ISP is required and it supports complex more complicated",
    "start": "2824160",
    "end": "2831880"
  },
  {
    "text": "controls so uh bare sensor discussion uh there was a be pattern on the upper left",
    "start": "2831880",
    "end": "2837559"
  },
  {
    "start": "2833000",
    "end": "2833000"
  },
  {
    "text": "there this is repeated throughout the array uh used with an internal ISP so uh",
    "start": "2837559",
    "end": "2844760"
  },
  {
    "text": "most of the cell phones nowadays from Qualcomm RTI those chips have internal isps so you'll just attach the sensor to",
    "start": "2844760",
    "end": "2852160"
  },
  {
    "text": "it uh for chips that don't have a host ISP they can use something called in a companion chip which is just a",
    "start": "2852160",
    "end": "2858760"
  },
  {
    "text": "processing uh image processing chip the uh sensor controls uh exposure",
    "start": "2858760",
    "end": "2866760"
  },
  {
    "text": "uh exposure and gains are the two types of controls for a raw sensor uh ISP has",
    "start": "2866760",
    "end": "2872280"
  },
  {
    "text": "much higher level controls such as Auto white balance or uh exposure things of this sort",
    "start": "2872280",
    "end": "2878838"
  },
  {
    "start": "2879000",
    "end": "2879000"
  },
  {
    "text": "and here's a block diagram of a a simple bare sensor um down in the lower left hand",
    "start": "2880319",
    "end": "2888680"
  },
  {
    "text": "corner is the pixel array it's not drawn to scale it takes up the whole picture usually um that is read out one line at",
    "start": "2888680",
    "end": "2895960"
  },
  {
    "text": "a time uh that's goes through whether we call an a TOD converter converts it to",
    "start": "2895960",
    "end": "2901480"
  },
  {
    "text": "digital and then the pixels are read out U either an 8 bit 10 bit uh 12-bit or",
    "start": "2901480",
    "end": "2907599"
  },
  {
    "text": "14bit most pipelines right now support 10bit um accuracy they're going to",
    "start": "2907599",
    "end": "2913040"
  },
  {
    "text": "12-bit uh uh in future uh processes",
    "start": "2913040",
    "end": "2919119"
  },
  {
    "text": "isps um second type of sensor is called an S SOC type sensor this one will output yuv RGB or even",
    "start": "2919119",
    "end": "2927880"
  },
  {
    "text": "jpeg and it's hooks up much simpler uh you just hook it up the host processor",
    "start": "2927880",
    "end": "2933119"
  },
  {
    "text": "with or without an ISP built in these types of ships were real common uh in",
    "start": "2933119",
    "end": "2938640"
  },
  {
    "text": "previous years so um earlier days four or five years ago we would sell quite a",
    "start": "2938640",
    "end": "2944559"
  },
  {
    "text": "few these types of chips now that uh TI Qualcomm everyone has a built-in ISP we don't sell very many of these lower",
    "start": "2944559",
    "end": "2951079"
  },
  {
    "text": "profit margin for us I guess but um here's a block diagram of a Soc type",
    "start": "2951079",
    "end": "2958440"
  },
  {
    "start": "2954000",
    "end": "2954000"
  },
  {
    "text": "sensor at the upper right hand I'm sorry upper leftand corner is everything that was in the previous sensors located in",
    "start": "2958440",
    "end": "2965000"
  },
  {
    "text": "that uh block there the uh in the lower right hand corner is",
    "start": "2965000",
    "end": "2970960"
  },
  {
    "text": "where most of the image processing takes place uh things like lens shading Direction uh changing the color format",
    "start": "2970960",
    "end": "2978240"
  },
  {
    "text": "uh things of that sort and the right hand control is where the auto functions are measurement engines and changes",
    "start": "2978240",
    "end": "2984440"
  },
  {
    "text": "these sorts of things uh also uses electronic rolling shutter for readout",
    "start": "2984440",
    "end": "2989760"
  },
  {
    "text": "uh when you're taking a picture and it's moving very fast and you see sort of a tearing that's a function of the",
    "start": "2989760",
    "end": "2994799"
  },
  {
    "text": "electronic rolling shutter because it's reading one line out at a time and you're moving faster than that's able to do so so you get the sort of tearing",
    "start": "2994799",
    "end": "3001920"
  },
  {
    "text": "effect Global shutter it takes it all at once we have sensors that do that that",
    "start": "3001920",
    "end": "3007119"
  },
  {
    "text": "are more common for things like Automotive uh uh",
    "start": "3007119",
    "end": "3012839"
  },
  {
    "text": "applications um to talk about preview at the camera level um this is my last",
    "start": "3012839",
    "end": "3018880"
  },
  {
    "text": "slide uh really a preview is just outputting of an image uh it's just uh",
    "start": "3018880",
    "end": "3026000"
  },
  {
    "text": "but there's several things about preview you want to keep the power consumption low if possible you want to keep it uh",
    "start": "3026000",
    "end": "3031599"
  },
  {
    "text": "the bandwidth low if possible so three ma three ways of doing this uh in previous years they used something",
    "start": "3031599",
    "end": "3037680"
  },
  {
    "text": "called skipping which is just skipping every other pixel so you take every odd row an odd column or skip three or four",
    "start": "3037680",
    "end": "3046359"
  },
  {
    "text": "problem with this is it uh well the good thing is it saves power it's very good for that um the problem with it is you",
    "start": "3046359",
    "end": "3054079"
  },
  {
    "text": "tend to miss things so if you have fine granularity you might miss uh items in your",
    "start": "3054079",
    "end": "3059640"
  },
  {
    "text": "preview uh a better way of doing is something called binning that's where you combine pixels so rather than skipping those two or three or every",
    "start": "3059640",
    "end": "3066400"
  },
  {
    "text": "other one you combine them into one pixel and that's good it's a nice averaging method it gives you a much",
    "start": "3066400",
    "end": "3071440"
  },
  {
    "text": "brighter pixel at average as all three or actually it combines it does an average um so then but then you need to",
    "start": "3071440",
    "end": "3077559"
  },
  {
    "text": "process that down to its uh image also what newer sensors are doing is they",
    "start": "3077559",
    "end": "3082799"
  },
  {
    "text": "have actual built-in Hardware scaler so they actually have an Hardware algorithm that will uh shrink down the picture",
    "start": "3082799",
    "end": "3089640"
  },
  {
    "text": "more questions for thank you guys appreciate it",
    "start": "3089640",
    "end": "3094440"
  },
  {
    "text": "[Music]",
    "start": "3097810",
    "end": "3105429"
  }
]