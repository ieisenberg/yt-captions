[
  {
    "start": "0",
    "end": "23000"
  },
  {
    "text": "this session was advertised as a java in containers but i changed the title to gvm in containers because at",
    "start": "4640",
    "end": "9920"
  },
  {
    "text": "the end of the day what really matters is the java virtual machine that runs in the container the gvm only",
    "start": "9920",
    "end": "15280"
  },
  {
    "text": "understand bytecode most of the time that bytecode comes from the javascript compiler but if it",
    "start": "15280",
    "end": "20400"
  },
  {
    "text": "comes from something else it doesn't matter so my name is david delabassi",
    "start": "20400",
    "end": "27279"
  },
  {
    "start": "23000",
    "end": "72000"
  },
  {
    "text": "despite my french accent i'm not french i live on the french in the french-speaking side of belgium where i",
    "start": "27279",
    "end": "32480"
  },
  {
    "text": "work for oracle in the java platform group so i'm remote you can find me on twitter at the sea",
    "start": "32480",
    "end": "39840"
  },
  {
    "text": "the java platform group is basically the organization with an oracle that is responsible for the java platform and for opengdk so this is a java track",
    "start": "39840",
    "end": "48480"
  },
  {
    "text": "so there is a pattern you need two things the first one is a duke",
    "start": "48480",
    "end": "54960"
  },
  {
    "text": "and the second one anybody can guess what is the second thing that you need in the java track",
    "start": "55520",
    "end": "61359"
  },
  {
    "text": "a cfr burst statement slide so this is the oracle one i may be jealous because ben has a very",
    "start": "62000",
    "end": "68400"
  },
  {
    "text": "long one so we only have a short one so sorry for that this is my personal disclaimer so if you",
    "start": "68400",
    "end": "74640"
  },
  {
    "start": "72000",
    "end": "81000"
  },
  {
    "text": "have been following the news apple has released a few months ago a new macbook pro with a keyboard that works",
    "start": "74640",
    "end": "82479"
  },
  {
    "start": "81000",
    "end": "104000"
  },
  {
    "text": "well unfortunately i still have the old one so if today any of my demo fails it's not my fault it's the keyboard",
    "start": "82799",
    "end": "89680"
  },
  {
    "text": "not only that this is also a subtle message for my manager okay let's discuss gvm and java",
    "start": "89680",
    "end": "97119"
  },
  {
    "text": "so this year is an important year for java because we're about to celebrate the 25 years anniversary of java",
    "start": "97119",
    "end": "104720"
  },
  {
    "start": "104000",
    "end": "228000"
  },
  {
    "text": "so since 25 years java has been developed and has evolved and that evolution is basically based on",
    "start": "104720",
    "end": "110560"
  },
  {
    "text": "two core principles the first one is develop developer productivity so it has to be easy to write code but",
    "start": "110560",
    "end": "115600"
  },
  {
    "text": "writing code is only one part of the story maintainability is also very important so that's why it's also very important",
    "start": "115600",
    "end": "121680"
  },
  {
    "text": "to be able to easily write and read the code that has been produced so that's one of the pillars of the",
    "start": "121680",
    "end": "127439"
  },
  {
    "text": "evolution of java the second one is application performance so over the years we have enhanced the platform to",
    "start": "127439",
    "end": "133120"
  },
  {
    "text": "make sure that your code runs in a very efficient manner so we have improved the gc that that were",
    "start": "133120",
    "end": "140000"
  },
  {
    "text": "present in the holidays of the platform we have had a new one such as d1 zgc we have a jit compiler that allows",
    "start": "140000",
    "end": "147200"
  },
  {
    "text": "us to well that allows the java virtual machine to do on-the-fly optimization and so on and so on so that evolution",
    "start": "147200",
    "end": "153280"
  },
  {
    "text": "over the last 25 years have been done based on those two pillars keeping in keeping in keeping in mind that the world around is",
    "start": "153280",
    "end": "161280"
  },
  {
    "text": "also evolving there are new programming paradigms that are appearing or",
    "start": "161280",
    "end": "167280"
  },
  {
    "text": "that are getting more popular so java has to make sure to cope with the right ones",
    "start": "167280",
    "end": "172400"
  },
  {
    "text": "lambda expression introducing 8 are a good example of that application style 20 years ago we were",
    "start": "172400",
    "end": "178800"
  },
  {
    "text": "mainly writing monoliths those days it's all about microservices and function as a services",
    "start": "178800",
    "end": "184720"
  },
  {
    "text": "obviously the platform is able to cope with that as well the hardware that we run our code on is also evolving a lot",
    "start": "184720",
    "end": "191280"
  },
  {
    "text": "we have more cpus more cores in the http you have a multi-level cache um",
    "start": "191280",
    "end": "198319"
  },
  {
    "text": "and so on and so on so the platform the gvm has also been be able to cope with that and last but",
    "start": "198319",
    "end": "203840"
  },
  {
    "text": "not least deployment styles are also evolving 20 15 years ago we're deploying",
    "start": "203840",
    "end": "211040"
  },
  {
    "text": "monoliths if we are agile we are deploying once or twice a year into our own data centers",
    "start": "211040",
    "end": "216480"
  },
  {
    "text": "data centers those day with ci cd we are basically doing multiple deployments a day into",
    "start": "216480",
    "end": "222879"
  },
  {
    "text": "containers that are deployed in a kubernetes cluster in the cloud right",
    "start": "222879",
    "end": "228640"
  },
  {
    "start": "228000",
    "end": "412000"
  },
  {
    "text": "so containers how many of you are using containers two days okay that's what i",
    "start": "228640",
    "end": "234560"
  },
  {
    "text": "guess so i don't have to spend too much time on containers so basically a container is a standard way of packaging a",
    "start": "234560",
    "end": "240560"
  },
  {
    "text": "software with its dependency there are multiple runtimes docker cryo alexey and so on and so on",
    "start": "240560",
    "end": "247120"
  },
  {
    "text": "at the end of the day what i'm going to discuss today apply to any oci compliant containers that is based",
    "start": "247120",
    "end": "253040"
  },
  {
    "text": "on namespace and c groups so namespace nc groups are linux kernels technology that basically",
    "start": "253040",
    "end": "258720"
  },
  {
    "text": "give us the ability to create containers um i'm going to use docker but just because i'm used to that",
    "start": "258720",
    "end": "266560"
  },
  {
    "text": "it would also work on podman or any other runtime",
    "start": "266560",
    "end": "271440"
  },
  {
    "text": "so containers shouldn't be confused with virtual machine on one hand we have containers that are",
    "start": "271840",
    "end": "277440"
  },
  {
    "text": "super lightweight starting a container takes a few milliseconds well depending on the case but",
    "start": "277440",
    "end": "282720"
  },
  {
    "text": "start the startup time of the containers can be uh pretty fast the thing with container is that they're",
    "start": "282720",
    "end": "288320"
  },
  {
    "text": "relying on some facilities of the underlying linux kernel name space c group union file",
    "start": "288320",
    "end": "293919"
  },
  {
    "text": "systems to basically give us this idea that we our code runs isolated but it's not really isolated",
    "start": "293919",
    "end": "301120"
  },
  {
    "text": "because at the end of the day our containers rely on the underlying kernel host to run the code so that basically means",
    "start": "301120",
    "end": "307840"
  },
  {
    "text": "that we are running on the same operating system that we have on the host",
    "start": "307840",
    "end": "313039"
  },
  {
    "text": "on the other hand we have a virtual machine that provides us real isolation the the thing with vm",
    "start": "313039",
    "end": "319520"
  },
  {
    "text": "is that they are very expensive starting a vm is a costly operation so you don't want to do that too many times on the other hand",
    "start": "319520",
    "end": "325680"
  },
  {
    "text": "starting on container and killing on a container is almost instantaneously so you can do that",
    "start": "325680",
    "end": "332000"
  },
  {
    "text": "you can do that as many times as you want container can become ephemeral if you want",
    "start": "332000",
    "end": "339600"
  },
  {
    "text": "so with vm we have a strong isolation but it come at a cost with container we don't have that cost",
    "start": "339600",
    "end": "346000"
  },
  {
    "text": "but we don't have a very good isolation so in between we have what now kata containers which basically rely",
    "start": "346000",
    "end": "351680"
  },
  {
    "text": "on a lightweight vm to basically provide both of the benefit of both worlds so we have",
    "start": "351680",
    "end": "358639"
  },
  {
    "text": "the isolation of vm with basically the cost and the startup time that we can reach on the container",
    "start": "358639",
    "end": "364840"
  },
  {
    "text": "side so java and the gvm um if we look at the",
    "start": "364840",
    "end": "371440"
  },
  {
    "text": "container the gvm container landscape i think that we're pretty lucky because it's hard those day to uh find a",
    "start": "371440",
    "end": "378080"
  },
  {
    "text": "frameworks a modern framework that doesn't support out of the box containers so if you are using a led on micro node",
    "start": "378080",
    "end": "384479"
  },
  {
    "text": "gypsus and so on you can directly create a containerized version of your application",
    "start": "384479",
    "end": "390479"
  },
  {
    "text": "on the tooling side we have a maven plugin we have the ability to use jib so to create containers using jeep",
    "start": "390479",
    "end": "396639"
  },
  {
    "text": "directly from maven the id if you're taking intellij for example it's supported out",
    "start": "396639",
    "end": "402479"
  },
  {
    "text": "of the box the ability to directly create container image and so on and so on so if we look on the",
    "start": "402479",
    "end": "408080"
  },
  {
    "text": "gvm container landscape well it's pretty solid now the first thing that i would like to discuss",
    "start": "408080",
    "end": "414479"
  },
  {
    "start": "412000",
    "end": "432000"
  },
  {
    "text": "is gvm container awareness so since java 8 we have invested in the gvm",
    "start": "414479",
    "end": "421759"
  },
  {
    "text": "to make sure that it runs nicely whenever that gvm run within the containers",
    "start": "421759",
    "end": "427599"
  },
  {
    "text": "there are multiple reasons for that such as a good resource usage but one important reason is what we call",
    "start": "427599",
    "end": "433360"
  },
  {
    "start": "432000",
    "end": "474000"
  },
  {
    "text": "the gvm ergonomics so gvm ergonomics is basically something that has been added in java 8 i believe and it's the ability",
    "start": "433360",
    "end": "440479"
  },
  {
    "text": "for the gvm when it runs so it's the ability for the gvm to basically",
    "start": "440479",
    "end": "445840"
  },
  {
    "text": "provide a default behavior that works so the gvm if you don't tune the gvm",
    "start": "445840",
    "end": "451280"
  },
  {
    "text": "will provide you a decent behavior the gvm will look at few metrics like the number of cpus how much memory",
    "start": "451280",
    "end": "458800"
  },
  {
    "text": "does it have and based on that it will infer some configurations such as",
    "start": "458800",
    "end": "464000"
  },
  {
    "text": "what site should i use and so on and so on so to illustrate that i have a demo",
    "start": "464000",
    "end": "472560"
  },
  {
    "start": "474000",
    "end": "550000"
  },
  {
    "text": "so let's see uh first i'm gonna ssh to a vm in the cloud",
    "start": "476240",
    "end": "484160"
  },
  {
    "text": "so let's see let's see so what i have here i have a simple um",
    "start": "484160",
    "end": "493840"
  },
  {
    "text": "a simple hello world application that basically look at how many cpu it has how many what is the memory",
    "start": "494879",
    "end": "501360"
  },
  {
    "text": "and so on and so on so some basic metrics what is the gvm vendors and so on so we can",
    "start": "501360",
    "end": "506400"
  },
  {
    "text": "run that so java hello world dot java",
    "start": "506400",
    "end": "513440"
  },
  {
    "text": "so i'm not compiling the class i'm directly around it against java so it's a gdk 1302 the vendor is oracle",
    "start": "513440",
    "end": "521839"
  },
  {
    "text": "it has four cpu and so on and so on right so the the three that you see there is the command for join pull",
    "start": "521839",
    "end": "528080"
  },
  {
    "text": "thread which are configured based on the number cpu so given that we have four cpu we have three",
    "start": "528080",
    "end": "533200"
  },
  {
    "text": "threads for the command for drawing pool right so next i'm gonna dockerize that code so for that i have",
    "start": "533200",
    "end": "540959"
  },
  {
    "text": "i have a super slow laptop let's pretend it's the keyboard",
    "start": "543519",
    "end": "550399"
  },
  {
    "start": "550000",
    "end": "767000"
  },
  {
    "text": "so this is my docker file so it's pretty basic i take a java base image i create a directory i copy",
    "start": "550800",
    "end": "557360"
  },
  {
    "text": "the source i java c so i compile that source and then and i run that so docker build",
    "start": "557360",
    "end": "566560"
  },
  {
    "text": "minus t qcon and this is the context",
    "start": "570800",
    "end": "577839"
  },
  {
    "text": "okay so let's run that so the image is qcon",
    "start": "579600",
    "end": "585680"
  },
  {
    "text": "so you see this code is running within my container so the gvm the java version is different it's an older",
    "start": "587519",
    "end": "592800"
  },
  {
    "text": "one uh it runs inside a container yes it has four cores uh so the common four drawing pool is",
    "start": "592800",
    "end": "599440"
  },
  {
    "text": "set to three if i look at the number of cpu that my vm has it has four",
    "start": "599440",
    "end": "605519"
  },
  {
    "text": "cpu so that match now what i'm gonna do next i'm gonna run the same code but i'm gonna limit",
    "start": "605519",
    "end": "612560"
  },
  {
    "text": "the resources that my um my container can use",
    "start": "612560",
    "end": "618480"
  },
  {
    "text": "now this time instead of four cpu my container will only be able to use",
    "start": "618480",
    "end": "624560"
  },
  {
    "text": "two and well you see that this time the code inside the gvm inside still see",
    "start": "624560",
    "end": "630240"
  },
  {
    "text": "four cores so all the ergonomics will be based on that false assumption you see that in terms of memory it has",
    "start": "630240",
    "end": "636320"
  },
  {
    "text": "like three gigabytes so what i can do i can limit that memory let's say to 256",
    "start": "636320",
    "end": "644639"
  },
  {
    "text": "megabytes",
    "start": "644839",
    "end": "647839"
  },
  {
    "text": "yeah this is you're not on stage so don't complain",
    "start": "652320",
    "end": "660240"
  },
  {
    "text": "um maybe it's the network",
    "start": "660240",
    "end": "663760"
  },
  {
    "text": "so 266 megabytes and you see that my gvm still see more than that and you still see the",
    "start": "666160",
    "end": "672399"
  },
  {
    "text": "four cpu so something is wrong why well simply because of that so if i look at the docker file",
    "start": "672399",
    "end": "679519"
  },
  {
    "text": "i'm using this java latest image which is completely outdated so i need to fix",
    "start": "680240",
    "end": "686839"
  },
  {
    "text": "that so i'm i'm gonna simply switch to",
    "start": "686839",
    "end": "694320"
  },
  {
    "text": "opengdk",
    "start": "694320",
    "end": "697120"
  },
  {
    "text": "latest so let's build the image again",
    "start": "700839",
    "end": "706240"
  },
  {
    "text": "and let's run the image again with the limitation that we set like 3 cpu and 266 megabyte",
    "start": "708640",
    "end": "715440"
  },
  {
    "text": "and you see that this time the gvm c3 cpu so the command for jump pool will be configured",
    "start": "715440",
    "end": "720560"
  },
  {
    "text": "with two threads which makes sense and the runtime memory is uh below what we what what the gvm sees i",
    "start": "720560",
    "end": "726639"
  },
  {
    "text": "mean there is a formula that calculates that but this time we can be sure that our code running in that container",
    "start": "726639",
    "end": "732399"
  },
  {
    "text": "will not be killed by the container engine in the previous case we can be sure that given that",
    "start": "732399",
    "end": "738639"
  },
  {
    "text": "our java code was well the dvm was seeing for cpu and was also seeing more memory that it",
    "start": "738639",
    "end": "745519"
  },
  {
    "text": "has access to that pretty rapidly the gvm will be killed by the docker the container engine",
    "start": "745519",
    "end": "752000"
  },
  {
    "text": "because it was it will basically try to over consume the resources that are available so that's why",
    "start": "752000",
    "end": "758480"
  },
  {
    "text": "using gvm that is container aware is important",
    "start": "758480",
    "end": "763920"
  },
  {
    "start": "767000",
    "end": "806000"
  },
  {
    "text": "okay let's talk about performance so something i didn't show you in the",
    "start": "768079",
    "end": "774320"
  },
  {
    "text": "previous example is that the generated image so the docker image generated was pretty heavy",
    "start": "774320",
    "end": "779760"
  },
  {
    "text": "in the range of multiple hundreds of megabytes for a simple hello world that's an issue",
    "start": "779760",
    "end": "785279"
  },
  {
    "text": "because each time you need to run that container the container engine needs to fetch",
    "start": "785279",
    "end": "790399"
  },
  {
    "text": "that container image from a registry that is hopefully collocated on the same network but still",
    "start": "790399",
    "end": "796000"
  },
  {
    "text": "to run some very basic application you still need to fetch multiple hundreds of megabytes so that's",
    "start": "796000",
    "end": "802480"
  },
  {
    "text": "an issue so we need to to work on that so when it comes to containers",
    "start": "802480",
    "end": "808079"
  },
  {
    "start": "806000",
    "end": "830000"
  },
  {
    "text": "uh we tend to talk about latency latency is basically the time it takes to um to send the result to the users",
    "start": "808079",
    "end": "815120"
  },
  {
    "text": "and we can uh split that in two so there is the time it takes to start up the containers and then there's the time it",
    "start": "815120",
    "end": "820399"
  },
  {
    "text": "takes to start your application in this case the java virtual machine within the containers",
    "start": "820399",
    "end": "825920"
  },
  {
    "text": "so if we look at the first layer the container startup um we need to keep in mind that the container is basically made of layers",
    "start": "825920",
    "end": "832480"
  },
  {
    "start": "830000",
    "end": "916000"
  },
  {
    "text": "so we have multiple layers on top of each top of each other that compose our container image the idea here is to",
    "start": "832480",
    "end": "839760"
  },
  {
    "text": "have as small as possible layers when it comes to",
    "start": "839760",
    "end": "844800"
  },
  {
    "text": "gvm uh container image we have three types of layers top to bottom so at the top we have the",
    "start": "844800",
    "end": "851920"
  },
  {
    "text": "java code or the byte code anyway with all its dependency then we have under that the java runtime",
    "start": "851920",
    "end": "859760"
  },
  {
    "text": "layer that's the java virtual machine and something else and then under that we have the operating system layer and the basic id",
    "start": "859760",
    "end": "866880"
  },
  {
    "text": "is basically to shrink those layers as much as we can",
    "start": "866880",
    "end": "871839"
  },
  {
    "text": "on the java application layer there's not much that we can do i mean there's not much that the gvm can do uh we can only give you advice like",
    "start": "872160",
    "end": "879920"
  },
  {
    "text": "watch out for the dependency that you're using don't make sure that you're not not putting embedding the whole world with",
    "start": "879920",
    "end": "886480"
  },
  {
    "text": "transitive dependency in your code so it's really just the best practices",
    "start": "886480",
    "end": "892079"
  },
  {
    "text": "the thing that you you need to do is try to leverage the cash mechanism that we have with",
    "start": "892079",
    "end": "897360"
  },
  {
    "text": "containers uh that's why it's a good idea to keep everything which is relatively static in different layers and that's why maybe",
    "start": "897360",
    "end": "904399"
  },
  {
    "text": "jar are not a good idea when it comes to containers but that's up for discussion for another session the thing that the gvm provide",
    "start": "904399",
    "end": "910160"
  },
  {
    "text": "is cbs that's something that you want to leverage and we're going to discuss cds later on so moving",
    "start": "910160",
    "end": "918160"
  },
  {
    "start": "916000",
    "end": "945000"
  },
  {
    "text": "down at the java runtime layer there's something that we can use to shrink the size of that layer and that",
    "start": "918160",
    "end": "924959"
  },
  {
    "text": "is j-link so j-link is a tool that has been added in java 9 and basically jailing gives you",
    "start": "924959",
    "end": "930720"
  },
  {
    "text": "the ability to create your own custom runtime and your code doesn't have to be modular modular for that you can take an",
    "start": "930720",
    "end": "937199"
  },
  {
    "text": "existing java application and run it on top of a custom runtime created by genning to give you an idea of the benefit that",
    "start": "937199",
    "end": "942959"
  },
  {
    "text": "we can get using j-link i took gdk-13 open jdk i started with a",
    "start": "942959",
    "end": "948079"
  },
  {
    "start": "945000",
    "end": "1064000"
  },
  {
    "text": "full gdk that weighed over 300 megabytes",
    "start": "948079",
    "end": "953680"
  },
  {
    "text": "then you want to create just a runtime that's also a good idea within the container space",
    "start": "953680",
    "end": "958720"
  },
  {
    "text": "from a security standpoint it's a good idea to reduce the potential surface attack of your containers",
    "start": "958720",
    "end": "963839"
  },
  {
    "text": "so that's why when you are running your code you don't need for example to have java c or j map all those tools",
    "start": "963839",
    "end": "971040"
  },
  {
    "text": "in your containers they are not needed at runtime so just get rid of them so we want to use a java runtime instead",
    "start": "971040",
    "end": "977680"
  },
  {
    "text": "of a full gdk so with the gelling we have the ability to create that runtime that customer and",
    "start": "977680",
    "end": "982959"
  },
  {
    "text": "time so all the modules so that's basically a java runtime that includes all the modules 168 megabytes",
    "start": "982959",
    "end": "989440"
  },
  {
    "text": "now this is very stupid to create such a runtime because there is no way any sensible application can make use of",
    "start": "989440",
    "end": "994639"
  },
  {
    "text": "all the modules of the platform that's what i'm doing next i'm creating a java runtime",
    "start": "994639",
    "end": "1000399"
  },
  {
    "text": "with just the modules that are needed by my code in this case this is a serverless java function from 168 i go down to 50 megabytes",
    "start": "1000399",
    "end": "1007920"
  },
  {
    "text": "and then jlinks comes with a few additional flags that we can use like we have the ability to remove the header",
    "start": "1007920",
    "end": "1013040"
  },
  {
    "text": "file demand page and so on and so on if we do that we go from 50 to 44 megabytes",
    "start": "1013040",
    "end": "1018880"
  },
  {
    "text": "and j-links also provide two level of compression compression two uh being zip deflate so if we do that we go",
    "start": "1018880",
    "end": "1025280"
  },
  {
    "text": "from 44 megabytes to 34 megabytes so basically 24 megabytes i have a custom java runtime that includes all",
    "start": "1025280",
    "end": "1031199"
  },
  {
    "text": "the modules and just the modules that are needed by my code so uh",
    "start": "1031199",
    "end": "1036880"
  },
  {
    "text": "that will greatly reduce the size of that layers the thing that we have to",
    "start": "1036880",
    "end": "1042160"
  },
  {
    "text": "keep in mind is that if you look at the bottom i've used compression just reduce the size of that layers",
    "start": "1042160",
    "end": "1047360"
  },
  {
    "text": "now compression means decompression so maybe it's not a good idea to use compression if we want to save some",
    "start": "1047360",
    "end": "1052960"
  },
  {
    "text": "time because at runtime that would imply some decompression cost maybe i should have stopped at 44",
    "start": "1052960",
    "end": "1059280"
  },
  {
    "text": "megabytes that's something that ideally you should you should measure",
    "start": "1059280",
    "end": "1064320"
  },
  {
    "start": "1064000",
    "end": "1102000"
  },
  {
    "text": "moving on at the operating system layer um the gvm can do much can cannot do much",
    "start": "1065120",
    "end": "1070880"
  },
  {
    "text": "uh you should use uh optimize distribution so slim distro for example um now it's",
    "start": "1070880",
    "end": "1078160"
  },
  {
    "text": "not because they're slim in the title of the distribution that it's uh really slim uh check that um there's",
    "start": "1078160",
    "end": "1084000"
  },
  {
    "text": "the this little digital sdistro from google it weight um almost 200",
    "start": "1084000",
    "end": "1089360"
  },
  {
    "text": "megabytes it's a bit heavy but it has a java the thing is that it's java 11 only so it has some limitation and then there",
    "start": "1089360",
    "end": "1096160"
  },
  {
    "text": "are tools such as docker slim that in my case doesn't work so i will not comment about that one",
    "start": "1096160",
    "end": "1102640"
  },
  {
    "start": "1102000",
    "end": "1159000"
  },
  {
    "text": "we can go um further than that we can use super optimize linux distribution",
    "start": "1102640",
    "end": "1109200"
  },
  {
    "text": "such as alpine so alpine is the optimized distribution that weight between five and six megabytes depending",
    "start": "1109200",
    "end": "1116000"
  },
  {
    "text": "on on the version and it's basically a complete linux distribution to run your code obviously",
    "start": "1116000",
    "end": "1122240"
  },
  {
    "text": "with that size you don't have all the well and whistle that you have in any typical linux distribution but again from a container standpoint we",
    "start": "1122240",
    "end": "1129280"
  },
  {
    "text": "want to reduce as much as we can the potential surface attacks so it's good to remove all those bell and whistles that are not needed anyway",
    "start": "1129280",
    "end": "1137520"
  },
  {
    "text": "the thing is that alpine rely on muscles muscle being the c library that the c c plus plus code is",
    "start": "1137520",
    "end": "1144160"
  },
  {
    "text": "using to talk to the kernel to the linux kernel opengdk is using lipsy so you open up open jdk",
    "start": "1144160",
    "end": "1151200"
  },
  {
    "text": "is using a different lipsy to talk to the underlying kernel so you have two options to basically run on punjignik on top of",
    "start": "1151200",
    "end": "1158880"
  },
  {
    "text": "alpine either you rely on alpine package gillipsie which is basically an intermediation layer that will",
    "start": "1158880",
    "end": "1165919"
  },
  {
    "start": "1159000",
    "end": "1210000"
  },
  {
    "text": "whenever there is a lipsicle it will turn that into a muscle call",
    "start": "1165919",
    "end": "1171760"
  },
  {
    "text": "i'm not sure it's the right approach or you can use project portola so",
    "start": "1171760",
    "end": "1177360"
  },
  {
    "text": "project portola basically compiles open jdk on top of muscle so you can use opengdk on top",
    "start": "1177360",
    "end": "1183360"
  },
  {
    "text": "of alpine the thing with portola is that so today the current release of java is java 13",
    "start": "1183360",
    "end": "1189039"
  },
  {
    "text": "so we already released portola builds 414 why because portland doesn't go through all the testing that we usually do",
    "start": "1189039",
    "end": "1196080"
  },
  {
    "text": "on opengdk so you can use it but well pay so i meant some attention",
    "start": "1196080",
    "end": "1201919"
  },
  {
    "text": "having said that we are always looking for helps to help us maintain that build so if you're willing to help us",
    "start": "1201919",
    "end": "1208080"
  },
  {
    "text": "you're more than welcome so i'm gonna demo that so i'm not sure",
    "start": "1208080",
    "end": "1214000"
  },
  {
    "start": "1210000",
    "end": "1266000"
  },
  {
    "text": "anybody got that joke it's demo no so it's demo basically a retail chain in japan",
    "start": "1214000",
    "end": "1220400"
  },
  {
    "text": "i'm pretty sure it wouldn't work here so the what i'm going to show you now is",
    "start": "1220400",
    "end": "1225600"
  },
  {
    "text": "basically jailing with alpines for that i'm using a server",
    "start": "1225600",
    "end": "1231520"
  },
  {
    "text": "i'm using the minecraft server because it was open source so what i'm going to do",
    "start": "1231520",
    "end": "1239679"
  },
  {
    "text": "so let's see",
    "start": "1243440",
    "end": "1249840"
  },
  {
    "text": "so what i have here server.jar is the minecraft server from microsoft and some",
    "start": "1249840",
    "end": "1255280"
  },
  {
    "text": "of the files that are needed that that are needed by that uh server like the ult",
    "start": "1255280",
    "end": "1260720"
  },
  {
    "text": "the text if it's not there it won't start the server properties and so on and so on",
    "start": "1260720",
    "end": "1265840"
  },
  {
    "text": "i have a docker file to containerize that guy so it's a multi-stage build so the first build basically i'm taking 14 alpine and then",
    "start": "1265840",
    "end": "1273919"
  },
  {
    "start": "1266000",
    "end": "1295000"
  },
  {
    "text": "i'm using jailing here to create a custom runtime",
    "start": "1273919",
    "end": "1279280"
  },
  {
    "text": "compress 2 to compress everything as much as i can and then i just need to specify which",
    "start": "1279280",
    "end": "1284400"
  },
  {
    "text": "modules are needed by the minecraft server and it turned out that the minecraft server needs those 12 modules",
    "start": "1284400",
    "end": "1290720"
  },
  {
    "text": "there is a specific tool that you can use to figure out which modules are needed by your code and then the second stage is basically",
    "start": "1290720",
    "end": "1297679"
  },
  {
    "start": "1295000",
    "end": "1356000"
  },
  {
    "text": "from a pure alpine distribution i copy all the files so those are the minecraft",
    "start": "1297679",
    "end": "1303200"
  },
  {
    "text": "server files and i'm also copying from the preview stage the custom runtime and",
    "start": "1303200",
    "end": "1309520"
  },
  {
    "text": "then i just run that guy so docker build minus t",
    "start": "1309520",
    "end": "1317039"
  },
  {
    "text": "mine no let's see if it's here",
    "start": "1317039",
    "end": "1326400"
  },
  {
    "text": "well sorry my laptop just crashed before so starting let's see",
    "start": "1326640",
    "end": "1335039"
  },
  {
    "text": "if i don't have the oil sorry i'm gonna have to well no let's start docker and i'm gonna come",
    "start": "1338240",
    "end": "1344720"
  },
  {
    "text": "back to this one because i'm starting docker locally it can take some time so yeah docker is starting so remind me",
    "start": "1344720",
    "end": "1351760"
  },
  {
    "text": "that i need to go back to that demo but anyway i have the result here so um",
    "start": "1351760",
    "end": "1358880"
  },
  {
    "start": "1356000",
    "end": "1447000"
  },
  {
    "text": "using open gdk so the open gdk 13 distribution from uh",
    "start": "1358880",
    "end": "1364000"
  },
  {
    "text": "from the open jdk community so the the one that is uh using oracle linux the 12 modules weight",
    "start": "1364080",
    "end": "1370799"
  },
  {
    "text": "88 megabyte if i strip debug so basically if i remove the debug information out of",
    "start": "1370799",
    "end": "1376400"
  },
  {
    "text": "that customer on time i would say 14 megabyte if i compress one from 88 megabyte i",
    "start": "1376400",
    "end": "1382880"
  },
  {
    "text": "will go down i would save another 18 megabyte and compress 2 i would save 31 megabytes from those 88",
    "start": "1382880",
    "end": "1390559"
  },
  {
    "text": "megabytes if i remove the header file and demand page i won't save anything because",
    "start": "1390559",
    "end": "1396240"
  },
  {
    "text": "in that particular distribution they are not included by default so uh something important um on top you",
    "start": "1396240",
    "end": "1404159"
  },
  {
    "text": "have the open gdk 13 uh a custom open jdk 13 with one modules",
    "start": "1404159",
    "end": "1410080"
  },
  {
    "text": "uh open jdk 13 so from the the build that are done by rackle",
    "start": "1410080",
    "end": "1415120"
  },
  {
    "text": "it weights let's say 15 megabytes then on at the bottom the same custom runtime",
    "start": "1415120",
    "end": "1421039"
  },
  {
    "text": "image one modules using uh the debian open dedicated testing build",
    "start": "1421039",
    "end": "1426159"
  },
  {
    "text": "it weighed nearly 500 megabytes so about 10 times the size for the same",
    "start": "1426159",
    "end": "1432080"
  },
  {
    "text": "exact customer and time why because the debian ones is embedding the debug symbols so if you",
    "start": "1432080",
    "end": "1440000"
  },
  {
    "text": "are well if you are concerned about the size of your java runtime layer you need",
    "start": "1440000",
    "end": "1445679"
  },
  {
    "text": "to clearly remove those symbols in java 13 we have added these new capabilities to jailing",
    "start": "1445679",
    "end": "1450880"
  },
  {
    "start": "1447000",
    "end": "1464000"
  },
  {
    "text": "sweep native debug symbols that you can use to basically remove those sim symbols if you do that",
    "start": "1450880",
    "end": "1456000"
  },
  {
    "text": "you will go from megabyte to 151 megabyte that's something that you should clearly",
    "start": "1456000",
    "end": "1462480"
  },
  {
    "text": "look at so let us see let's see if docker has started",
    "start": "1462480",
    "end": "1469760"
  },
  {
    "start": "1464000",
    "end": "1574000"
  },
  {
    "text": "yes look it's there so i'm building my minecraft server",
    "start": "1470000",
    "end": "1475039"
  },
  {
    "text": "let's look at the size of that image so that minecraft server the container",
    "start": "1476880",
    "end": "1483440"
  },
  {
    "text": "weight hundred megabytes we can look at what's inside dive mind",
    "start": "1483440",
    "end": "1491440"
  },
  {
    "text": "so those are are the different layers so the first layer is the opening system",
    "start": "1494320",
    "end": "1500240"
  },
  {
    "text": "layers then this one is basically just creating a directory uh the single layers just had this small",
    "start": "1500240",
    "end": "1506159"
  },
  {
    "text": "text file this one had the property file maybe it would have been a good idea to combine all of those together but it's",
    "start": "1506159",
    "end": "1511520"
  },
  {
    "text": "not the point here then we are adding the server.jar which is the minecraft server",
    "start": "1511520",
    "end": "1518080"
  },
  {
    "text": "well i'm not sure sorry so that guy weight i think",
    "start": "1520320",
    "end": "1529039"
  },
  {
    "text": "okay that guy wait oh sorry wait 36 megabytes so the the minecraft server",
    "start": "1529039",
    "end": "1534320"
  },
  {
    "text": "itself is already 36 megabyte and then the next layer is basically the custom java runtime",
    "start": "1534320",
    "end": "1540720"
  },
  {
    "text": "if we look at the size of that 658 megabyte in that case that's basically",
    "start": "1540720",
    "end": "1547520"
  },
  {
    "text": "what i had with compression 2b4 so clearly 100 megabytes we have the operating system",
    "start": "1547520",
    "end": "1552880"
  },
  {
    "text": "alpine we have uh the custom java runtime and we have our application that in this",
    "start": "1552880",
    "end": "1558159"
  },
  {
    "text": "particular case already weighed 36 megabytes so that's something that you should clearly look at",
    "start": "1558159",
    "end": "1565120"
  },
  {
    "text": "okay we've discussed how on the java side you can improve the startup time of the container the next step is basically to look at",
    "start": "1565120",
    "end": "1571360"
  },
  {
    "text": "the java startup time itself so this slide shows the startup time",
    "start": "1571360",
    "end": "1576559"
  },
  {
    "start": "1574000",
    "end": "1645000"
  },
  {
    "text": "between java 8 and 9 until it's not on my slide but smaller is better",
    "start": "1576559",
    "end": "1582159"
  },
  {
    "text": "so we had a big regression between eight and nine that's the bad news the good news is that it has been fixed",
    "start": "1582159",
    "end": "1587600"
  },
  {
    "text": "so you see on the right side the startup time this is for a simple helloworld application",
    "start": "1587600",
    "end": "1593600"
  },
  {
    "text": "uh in gdk14 that will be released in uh two weeks uh has been improved versus 13. i can",
    "start": "1593600",
    "end": "1600480"
  },
  {
    "text": "tell you that in 15 where we will be able to shave another extra milliseconds this is something which is",
    "start": "1600480",
    "end": "1606640"
  },
  {
    "text": "very important in the container space when you are using fml containers",
    "start": "1606640",
    "end": "1611760"
  },
  {
    "text": "so basically containers that will be invoked will perform the task and will die shortly then the startup time of",
    "start": "1611760",
    "end": "1619760"
  },
  {
    "text": "uh the the application is something which is becoming important this is the same",
    "start": "1619760",
    "end": "1626559"
  },
  {
    "text": "slide but with additional data like hello world using lambdas hello world using concatrick concat",
    "start": "1626559",
    "end": "1633520"
  },
  {
    "text": "strings so basically the takeaway is that if possible you need to you should look at the recent version of the gvm",
    "start": "1633520",
    "end": "1640320"
  },
  {
    "text": "if the startup time is something which is important to you",
    "start": "1640320",
    "end": "1645760"
  },
  {
    "start": "1645000",
    "end": "1726000"
  },
  {
    "text": "something else that we can use is cds so the previous example were quite",
    "start": "1646480",
    "end": "1651840"
  },
  {
    "text": "visible because we just had the startup time of the application and the application was",
    "start": "1651840",
    "end": "1657520"
  },
  {
    "text": "very trivial uh cds is something that we can use for non-trial applications so anybody knows what cbs",
    "start": "1657520",
    "end": "1662880"
  },
  {
    "text": "is class data sharing okay two ends which is very low because cds",
    "start": "1662880",
    "end": "1668240"
  },
  {
    "text": "is not a new capability cds is in the platform since java 5. so the basic id with cds is the",
    "start": "1668240",
    "end": "1673840"
  },
  {
    "text": "following when you run a java application the gvm will load the byte code",
    "start": "1673840",
    "end": "1679200"
  },
  {
    "text": "from disk and you could have to perform a bunch of operations because before it has something that the gvm can",
    "start": "1679200",
    "end": "1684799"
  },
  {
    "text": "use uh from the memory with cds the gvm will perform that",
    "start": "1684799",
    "end": "1691200"
  },
  {
    "text": "and once it has the inner representation of your bad code it will dump that to disk so that the next time",
    "start": "1691200",
    "end": "1697600"
  },
  {
    "text": "you use your your application the gvm will directly bring that into memory so it doesn't have to go through all the",
    "start": "1697600",
    "end": "1703600"
  },
  {
    "text": "operation which are expensive and the thing is that obviously you have a lot of classes so that's the basic idea uh with cds",
    "start": "1703600",
    "end": "1710480"
  },
  {
    "text": "in the early days cds was quite limited so cds for java c5 was just for the runtime classes so the rt.jar",
    "start": "1710480",
    "end": "1718240"
  },
  {
    "text": "back then it was limited i think to serial gc and so on but basically all those limitations have been lifted since then",
    "start": "1718240",
    "end": "1726720"
  },
  {
    "start": "1726000",
    "end": "1900000"
  },
  {
    "text": "so let's have a quick cds demo so for that i'm going to go back to my",
    "start": "1726720",
    "end": "1733600"
  },
  {
    "text": "linux box so so i'm gonna compile that hello world",
    "start": "1733600",
    "end": "1740480"
  },
  {
    "text": "application",
    "start": "1740480",
    "end": "1743039"
  },
  {
    "text": "java hello world i'm going to time that",
    "start": "1745919",
    "end": "1753120"
  },
  {
    "text": "invocation time hello world so",
    "start": "1753120",
    "end": "1757600"
  },
  {
    "text": "115 something milliseconds um to get some more accurate number i'm",
    "start": "1758279",
    "end": "1763360"
  },
  {
    "text": "going to invoke that application many times without and with cds so for that i have a nice tool",
    "start": "1763360",
    "end": "1771840"
  },
  {
    "text": "which will invoke the application 42 times per 42 and for the first run i'm going",
    "start": "1771840",
    "end": "1777919"
  },
  {
    "text": "to disable a cds so to disable cds",
    "start": "1777919",
    "end": "1782960"
  },
  {
    "text": "i need to use that flag",
    "start": "1785039",
    "end": "1788080"
  },
  {
    "text": "so the application is invoked 40 to time and on average it takes 200 and something 220 milliseconds",
    "start": "1791440",
    "end": "1798159"
  },
  {
    "text": "now i'm gonna use cds so i'm gonna do a 42 invocation but with cds to ucds well",
    "start": "1798159",
    "end": "1805039"
  },
  {
    "text": "it's pretty easy just remove that guy because now cds is",
    "start": "1805039",
    "end": "1811760"
  },
  {
    "text": "enabled by default so 222 versus",
    "start": "1811760",
    "end": "1817440"
  },
  {
    "text": "157",
    "start": "1820840",
    "end": "1823840"
  },
  {
    "text": "so basically sorry this time we're at 71 percent of the startup time",
    "start": "1827120",
    "end": "1832399"
  },
  {
    "text": "uh than the startup time without cbs and that's something that you get for free it's in the platform",
    "start": "1832399",
    "end": "1839440"
  },
  {
    "text": "now the thing that you might say okay uh this is good i mean it's a huge win but",
    "start": "1839440",
    "end": "1845039"
  },
  {
    "text": "it was a trivial application this tweet is coming from the g-ruby",
    "start": "1845039",
    "end": "1850880"
  },
  {
    "text": "project lead so he works at red hat and basically uh the number that they have now with gdk14",
    "start": "1850880",
    "end": "1858880"
  },
  {
    "text": "using app cds uh just look at the bottom so of gk8202",
    "start": "1858880",
    "end": "1864600"
  },
  {
    "text": "853 milliseconds now with gdk5513",
    "start": "1864600",
    "end": "1870919"
  },
  {
    "text": "717 milliseconds so the gap is quite important",
    "start": "1870919",
    "end": "1876960"
  },
  {
    "text": "and jruby is not a true application it's really a complex application so again in containers when startup time",
    "start": "1876960",
    "end": "1884799"
  },
  {
    "text": "is important that's something that you should consider using cds application cds is basically the ability",
    "start": "1884799",
    "end": "1890880"
  },
  {
    "text": "that cds gives you to dump all your classes of your own code so your own application",
    "start": "1890880",
    "end": "1896320"
  },
  {
    "text": "you can create an archive for cds so cds introducing java 5. it has been",
    "start": "1896320",
    "end": "1903679"
  },
  {
    "start": "1900000",
    "end": "1933000"
  },
  {
    "text": "open source in i think in 10 with application cds",
    "start": "1903679",
    "end": "1909919"
  },
  {
    "text": "well in java 9 it was a commercial feature anyway so yes it has an open source intent and we're keeping to improve cds so for",
    "start": "1909919",
    "end": "1916720"
  },
  {
    "text": "example in 13 we have added a dynamic cds which gives the ability to create the archive of your classes when your",
    "start": "1916720",
    "end": "1923519"
  },
  {
    "text": "application exits so basically you run your application once and at the end when it takes it it will create an",
    "start": "1923519",
    "end": "1929120"
  },
  {
    "text": "archive with all the classes you can go further than that if the",
    "start": "1929120",
    "end": "1935840"
  },
  {
    "start": "1933000",
    "end": "2064000"
  },
  {
    "text": "startup time and the footprint is important you can look at grout vm so grav vm is a project run by oracle",
    "start": "1935840",
    "end": "1942799"
  },
  {
    "text": "labs it's a high performance polyglot virtual machine that provides many capabilities on the java side there's this polyglot",
    "start": "1942799",
    "end": "1949440"
  },
  {
    "text": "api that you can use to interact with different language they have a jit compiler which",
    "start": "1949440",
    "end": "1956799"
  },
  {
    "text": "is based which is written in java so it's a jit compiler that you can use to plug and replace c2 within hotspot the",
    "start": "1956799",
    "end": "1964000"
  },
  {
    "text": "nice thing about that is it is that the jit is written in java the jit compiler is written in a java and it's",
    "start": "1964000",
    "end": "1969360"
  },
  {
    "text": "quite perfect well it's very performant and then they have these native image capabilities which basically allows you",
    "start": "1969360",
    "end": "1975279"
  },
  {
    "text": "to take some java application so some byte code and turn that into a native executable",
    "start": "1975279",
    "end": "1980799"
  },
  {
    "text": "for a given platform so let's have a look at groul vm so now",
    "start": "1980799",
    "end": "1987440"
  },
  {
    "text": "i need to find the right machine so this is this one",
    "start": "1987440",
    "end": "1991840"
  },
  {
    "text": "so java hello world oops sorry",
    "start": "1996640",
    "end": "2001519"
  },
  {
    "text": "this is the application um that we're done",
    "start": "2002960",
    "end": "2008399"
  },
  {
    "text": "so first i compile the application and then i'm using this native image tool from well",
    "start": "2011519",
    "end": "2018880"
  },
  {
    "text": "to compile it to aot compile it so it takes a bit of time so let's have a",
    "start": "2018880",
    "end": "2025840"
  },
  {
    "text": "look quickly at what is done behind the scenes so basically what i give to native image",
    "start": "2025840",
    "end": "2031039"
  },
  {
    "text": "is a jar that well not not a jar in this case it's a simple class for my application so i'm",
    "start": "2031039",
    "end": "2037679"
  },
  {
    "text": "giving us an application it will go through this native image tool that will scan the code to find all",
    "start": "2037679",
    "end": "2044080"
  },
  {
    "text": "the potential execution pass and then it will remove all the dead branches and once it has that it will uh",
    "start": "2044080",
    "end": "2051040"
  },
  {
    "text": "turn that code into a native code so machine code that will run on a given platform in this case",
    "start": "2051040",
    "end": "2056720"
  },
  {
    "text": "it's a mac platform so i will have a in term of output a mac executable",
    "start": "2056720",
    "end": "2063520"
  },
  {
    "start": "2064000",
    "end": "2277000"
  },
  {
    "text": "and let's see it's done so it takes like 42 seconds if we look here",
    "start": "2065440",
    "end": "2072158"
  },
  {
    "text": "we have this uh hello world file if we look at the type of that file",
    "start": "2072800",
    "end": "2079520"
  },
  {
    "text": "it's a mac os 64-bit executable that i can obviously invoke so well you see the startup time",
    "start": "2079520",
    "end": "2088158"
  },
  {
    "text": "it's pretty fast so 13 milliseconds that's pretty fast if we",
    "start": "2088159",
    "end": "2094000"
  },
  {
    "text": "look at the size of that executable eight megabyte uh that's the only thing i need i mean there's no external java",
    "start": "2094000",
    "end": "2099920"
  },
  {
    "text": "runtime that is needed so if i compare that to pure java so for that i'm going to switch to a",
    "start": "2099920",
    "end": "2107119"
  },
  {
    "text": "different version of java so java so let's first compile the class",
    "start": "2107119",
    "end": "2114720"
  },
  {
    "text": "with that version snopes",
    "start": "2114720",
    "end": "2118640"
  },
  {
    "text": "java hello hello world let's time that",
    "start": "2121920",
    "end": "2128720"
  },
  {
    "text": "you see 143 milliseconds you see that the java version is different so this is a java 14.",
    "start": "2129520",
    "end": "2135040"
  },
  {
    "text": "now to be fair with you um",
    "start": "2135040",
    "end": "2138960"
  },
  {
    "text": "i have a bunch of gdk installed on my machine so that has a bit of time so if i want to get fair well more accurate result i need to",
    "start": "2140480",
    "end": "2147760"
  },
  {
    "text": "invoke directly the right gdk assuming i can find my",
    "start": "2147760",
    "end": "2154480"
  },
  {
    "text": "gdk 14. rc1",
    "start": "2155520",
    "end": "2160800"
  },
  {
    "text": "home bin java hello world and i need to time that so i",
    "start": "2161599",
    "end": "2168160"
  },
  {
    "text": "was at 145 milliseconds and this time i'm at 800 that's weird okay 93",
    "start": "2168160",
    "end": "2176720"
  },
  {
    "text": "93 83 i can go down to",
    "start": "2176880",
    "end": "2182560"
  },
  {
    "text": "no but that's a more accurate number but still we don't have the performance in terms of startup time that we have with",
    "start": "2182560",
    "end": "2189040"
  },
  {
    "text": "with ground that's clearly why because here we have a full-blown gvm we have hotspot with all the capabilities of hotspot",
    "start": "2189040",
    "end": "2196960"
  },
  {
    "text": "so um that's great vm native image capabilities there are a",
    "start": "2197280",
    "end": "2202640"
  },
  {
    "text": "few limitations so um it only supports java 8 and 11. there are also some limitations mostly",
    "start": "2202640",
    "end": "2210079"
  },
  {
    "text": "supported basically mean that it works but you need to configure that like the use of gni for example and then",
    "start": "2210079",
    "end": "2216560"
  },
  {
    "text": "there are a few things that are not supported the thing is that what you will get in terms of output is native executable so",
    "start": "2216560",
    "end": "2222640"
  },
  {
    "text": "you lose the portability of java you don't have a jar you have a native executable so that's",
    "start": "2222640",
    "end": "2228320"
  },
  {
    "text": "something that you have to keep in mind you will also lose the ability to use some of the tooling that you might have on",
    "start": "2228320",
    "end": "2233359"
  },
  {
    "text": "the java side like for managing or observing your application uh gmx those kind of things might be",
    "start": "2233359",
    "end": "2240560"
  },
  {
    "text": "might not be available so that's something that you have to keep in mind but still if the startup time is something important",
    "start": "2240560",
    "end": "2246240"
  },
  {
    "text": "you need to look at raw vm native image the thing also with graph vm native image is that the footprint so the memory footprint will be lowers",
    "start": "2246240",
    "end": "2253680"
  },
  {
    "text": "um something that growl doesn't have is for example the gc and g1 even though they have a g1 gc",
    "start": "2253680",
    "end": "2260240"
  },
  {
    "text": "well they have a low latency g1 based uh gc that has been introduced i'm not sure it's an",
    "start": "2260240",
    "end": "2266079"
  },
  {
    "text": "it's a full features yet but clearly they don't have all the capabilities that we have",
    "start": "2266079",
    "end": "2271200"
  },
  {
    "text": "without spots in terms of of gc for example",
    "start": "2271200",
    "end": "2276799"
  },
  {
    "start": "2277000",
    "end": "2302000"
  },
  {
    "text": "talking about gc in 14 we have improved g1 gc with pneuma capabilities so number",
    "start": "2278320",
    "end": "2285200"
  },
  {
    "text": "stands for non-uniform memory access basically means that your memory is not always equidistant to the cpu",
    "start": "2285200",
    "end": "2291280"
  },
  {
    "text": "so it's a good idea for when you access something in memory that your code is aware of that so the gvm basically the gc is now able",
    "start": "2291280",
    "end": "2299040"
  },
  {
    "text": "to uh deal with pneuma architecture something else that is not clearly",
    "start": "2299040",
    "end": "2304320"
  },
  {
    "start": "2302000",
    "end": "2366000"
  },
  {
    "text": "advertised um is the all the improvement that we're doing into the platform between java 8 and 14",
    "start": "2304320",
    "end": "2311839"
  },
  {
    "text": "there are over 700 enhancements that have been done just for g1 all together they are",
    "start": "2311839",
    "end": "2318240"
  },
  {
    "text": "bringing they are bringing extra new capabilities so just one that i i show on this slide",
    "start": "2318240",
    "end": "2325440"
  },
  {
    "text": "is the the memory footprint of g1 for a native heap in this case of 16 megabyte so the extra uh",
    "start": "2325440",
    "end": "2333040"
  },
  {
    "text": "overhead in gdk8 for 16 gigabyte ip was four gigabyte of extra memory in",
    "start": "2333040",
    "end": "2340560"
  },
  {
    "text": "11 we were just below 3 and in 14 we are below 2. so basically between",
    "start": "2340560",
    "end": "2346400"
  },
  {
    "text": "8 and 14 we have dropped by 2 the extra footprint needed to deal with a 16 gigabyte",
    "start": "2346400",
    "end": "2354160"
  },
  {
    "text": "heap not only that we have also increased the performance of g1 so those are the kind of features that",
    "start": "2354160",
    "end": "2360320"
  },
  {
    "text": "are not advertised but that you need to keep in mind when looking at a new version of java",
    "start": "2360320",
    "end": "2366960"
  },
  {
    "start": "2366000",
    "end": "2375000"
  },
  {
    "text": "and that's something which is also important when your gvm run into containers the footprint",
    "start": "2367200",
    "end": "2372320"
  },
  {
    "text": "is obviously very key so let's talk about security you might have seen this tweet that says",
    "start": "2372320",
    "end": "2378000"
  },
  {
    "start": "2375000",
    "end": "2387000"
  },
  {
    "text": "that the top 10 most popular docker containers each contain at least 30 vulnerabilities",
    "start": "2378000",
    "end": "2383040"
  },
  {
    "text": "the good news java is not there so that's the good news the bad news is that we're not immune",
    "start": "2383040",
    "end": "2390640"
  },
  {
    "start": "2387000",
    "end": "2413000"
  },
  {
    "text": "this is um something that popped up on the open gdp mailing list and basically someone realized that uh in that case",
    "start": "2390640",
    "end": "2397119"
  },
  {
    "text": "that was debian they released the 11 something ga release even before it was officially ga i mean",
    "start": "2397119",
    "end": "2404240"
  },
  {
    "text": "the source code is there so anyone can build from the source code and claim it's ga",
    "start": "2404240",
    "end": "2410640"
  },
  {
    "text": "so watch out two weeks ago i saw that so someone was",
    "start": "2410640",
    "end": "2416960"
  },
  {
    "start": "2413000",
    "end": "2472000"
  },
  {
    "text": "looking for opengl 11gl linux build for muscles",
    "start": "2416960",
    "end": "2423680"
  },
  {
    "text": "the thing is that there's no such ga builds nevertheless someone figured that if you",
    "start": "2423680",
    "end": "2429359"
  },
  {
    "text": "take that particular build you can consider it as the open gdk 11 alpine general availability release even though",
    "start": "2429359",
    "end": "2434400"
  },
  {
    "text": "that release doesn't exist so and then you look at the docker file and",
    "start": "2434400",
    "end": "2439760"
  },
  {
    "text": "well it may be very small but the basically the docker file is doing a wget from a file coming from",
    "start": "2439760",
    "end": "2447839"
  },
  {
    "text": "a university in austria over hcp the good news is that they are checking uh",
    "start": "2447839",
    "end": "2453520"
  },
  {
    "text": "the the 256 uh checksum but from the same source over hcp so",
    "start": "2453520",
    "end": "2461838"
  },
  {
    "text": "and it's on the internet so it should be true so then other projects were using that as",
    "start": "2462079",
    "end": "2467520"
  },
  {
    "text": "the 11gl linux i mean so my advice here",
    "start": "2467520",
    "end": "2473440"
  },
  {
    "start": "2472000",
    "end": "2493000"
  },
  {
    "text": "uh when it well when it comes to java but also container in general you should choose",
    "start": "2473440",
    "end": "2479920"
  },
  {
    "text": "your base image wisely not only that you should secure it and you shouldn't",
    "start": "2479920",
    "end": "2486800"
  },
  {
    "text": "trust someone else to do it and don't believe what you read on the internet",
    "start": "2486800",
    "end": "2492480"
  },
  {
    "start": "2493000",
    "end": "2568000"
  },
  {
    "text": "so um there's these new trends where it's a good idea to run",
    "start": "2493200",
    "end": "2498640"
  },
  {
    "text": "rootless containers so basically we want to give as less privilege to the container as we can",
    "start": "2498640",
    "end": "2504400"
  },
  {
    "text": "it's a bit tricky to do docker they have a rootless mode and last time i checked it was still an experimental",
    "start": "2504400",
    "end": "2510079"
  },
  {
    "text": "features if you want to do pure rootless containers you need to use a podman",
    "start": "2510079",
    "end": "2516640"
  },
  {
    "text": "for that pod man use c groups v2 which is not something new i mean several v2 have been added in",
    "start": "2516640",
    "end": "2522560"
  },
  {
    "text": "kernel in the linux journal in uh well six years ago but it was not enabled by",
    "start": "2522560",
    "end": "2529119"
  },
  {
    "text": "default it's now enabled by default on fedora so fedora is the first major distribution that enables you",
    "start": "2529119",
    "end": "2534640"
  },
  {
    "text": "group v2 support by default so with that you can easily",
    "start": "2534640",
    "end": "2540560"
  },
  {
    "text": "do rootless container but on the jdk side you need gdk15 so gk15 we had",
    "start": "2540560",
    "end": "2546400"
  },
  {
    "text": "support for c group z2 i put a little asterisk remember the the the first slide the disclaimer slide",
    "start": "2546400",
    "end": "2552240"
  },
  {
    "text": "that basically says that it's there the day it's there but that's really id so gdk15 will support crooks v2 and if",
    "start": "2552240",
    "end": "2560079"
  },
  {
    "text": "uh signal d2 are not supported on the platform it will automatically fall back to see group d1 as today",
    "start": "2560079",
    "end": "2565599"
  },
  {
    "text": "right and then in terms of security it's just",
    "start": "2565599",
    "end": "2571440"
  },
  {
    "start": "2568000",
    "end": "2607000"
  },
  {
    "text": "common sense so choose your base image wisely and the rest is just pure containers so",
    "start": "2571440",
    "end": "2578079"
  },
  {
    "text": "watch out the certificates that you have in your in your container image there are a bunch",
    "start": "2578079",
    "end": "2584319"
  },
  {
    "text": "of security of offering of tools that you can use to basically scan your image for vulnerabilities and so on",
    "start": "2584319",
    "end": "2592000"
  },
  {
    "text": "and so on and also its containers so the basic id you should try to reduce as much as you can the potential surface attacks",
    "start": "2592000",
    "end": "2598720"
  },
  {
    "text": "on the java side we have gelling that that is useful to achieve that",
    "start": "2598720",
    "end": "2603920"
  },
  {
    "text": "okay let's quickly talk about observability so the gdk comes with a bunch of tool",
    "start": "2603920",
    "end": "2611520"
  },
  {
    "start": "2607000",
    "end": "2721000"
  },
  {
    "text": "gcmd gen4 gps gmaps and so on the thing that we tend to forget is that",
    "start": "2611520",
    "end": "2616640"
  },
  {
    "text": "we can also use them either on the host to do that obviously the host needs to have a privileged access so it's not",
    "start": "2616640",
    "end": "2623119"
  },
  {
    "text": "necessarily a good idea but you can also run them within the containers like doing doing a docker exec",
    "start": "2623119",
    "end": "2628640"
  },
  {
    "text": "and then the name of the container and then for example g info and doing that you can get useful",
    "start": "2628640",
    "end": "2633680"
  },
  {
    "text": "information about the gvm that is running inside your container without having to do anything else",
    "start": "2633680",
    "end": "2639040"
  },
  {
    "text": "so that's something that you should try to leverage something else that is coming in the jdk",
    "start": "2639040",
    "end": "2644640"
  },
  {
    "text": "since 11 is jdk flight recorder so gfr is basically a black box that is",
    "start": "2644640",
    "end": "2651520"
  },
  {
    "text": "built into the dvm so the gvm is animating event it's very low overhead so that's",
    "start": "2651520",
    "end": "2657119"
  },
  {
    "text": "something that you can use in production and then you have the ability to analyze",
    "start": "2657119",
    "end": "2662720"
  },
  {
    "text": "those events until now those events the analysis of those events were basically done",
    "start": "2662720",
    "end": "2668079"
  },
  {
    "text": "post-mortem or after the fact so you start the recording you stop the recording you dump the recording and then you do the",
    "start": "2668079",
    "end": "2674240"
  },
  {
    "text": "analyze in gdk14 we have the ability to stream the event as they happened so you can have you can analyze the",
    "start": "2674240",
    "end": "2681520"
  },
  {
    "text": "event in process doesn't really make sense in this case but you can also analyze the event outside of the process so what what you",
    "start": "2681520",
    "end": "2688319"
  },
  {
    "text": "can have is you have your container that is using gfr it's low overhead so that's something that you can have on",
    "start": "2688319",
    "end": "2695119"
  },
  {
    "text": "all the time and for example the the repository is basically where the events are being put",
    "start": "2695119",
    "end": "2700160"
  },
  {
    "text": "can be in the volumes that you can access from a different containers or from the host those kind of things so that means that",
    "start": "2700160",
    "end": "2706000"
  },
  {
    "text": "you can start to think about scenarios that are using gfr to basically emit",
    "start": "2706000",
    "end": "2711359"
  },
  {
    "text": "even from the gvm that is running within the containers and consume them outside that's something which is new",
    "start": "2711359",
    "end": "2718880"
  },
  {
    "text": "in gdk 14. so wrap up gvm in containers",
    "start": "2718880",
    "end": "2726400"
  },
  {
    "text": "the gvm needs to behave as a good container citizens so the advice here is you need to use a",
    "start": "2726400",
    "end": "2732640"
  },
  {
    "text": "relational version of the gvm don't rely on the whole version of jgvm",
    "start": "2732640",
    "end": "2737680"
  },
  {
    "text": "like i did at the beginning then i've discussed quickly some tricks and tools that we can use to reduce the",
    "start": "2737680",
    "end": "2743920"
  },
  {
    "text": "latency that's something which is important in the container space keeping in mind that there are two type of latency first",
    "start": "2743920",
    "end": "2749760"
  },
  {
    "text": "container latency so the time it takes to start the container and then the java application latency",
    "start": "2749760",
    "end": "2756400"
  },
  {
    "text": "and then something which is important is that all the other investment that we're doing into opengdk are also leaking into",
    "start": "2756400",
    "end": "2761760"
  },
  {
    "text": "containers so if i take for example loom panama zgc all those features which are not by a",
    "start": "2761760",
    "end": "2769040"
  },
  {
    "text": "design conceived for containers will also works nicely",
    "start": "2769040",
    "end": "2774560"
  },
  {
    "text": "when they are being deployed into containers so that's something that also something that you need to look at over time",
    "start": "2774560",
    "end": "2781520"
  },
  {
    "text": "so gm in containers choose your base image wisely secure it use the latest java version",
    "start": "2782160",
    "end": "2787920"
  },
  {
    "text": "and never use java latest that base image we're trying to get rid of that one but it's it's very difficult that's only",
    "start": "2787920",
    "end": "2793760"
  },
  {
    "text": "something that you can use on stage when you're doing demo and you want to uh clearly make a point to not use it only",
    "start": "2793760",
    "end": "2800240"
  },
  {
    "text": "rely on actively supported version uh they are all container aware so gvm ergonomics will kick in",
    "start": "2800240",
    "end": "2807520"
  },
  {
    "text": "there is this slide flag that i often see use container support those day you",
    "start": "2807520",
    "end": "2812960"
  },
  {
    "text": "don't need to use that flag anymore because the gvm is by default uh using the container support so you",
    "start": "2812960",
    "end": "2818880"
  },
  {
    "text": "can you should only use that flag if you explicitly explicitly want to disable the container support",
    "start": "2818880",
    "end": "2825280"
  },
  {
    "text": "assuming you have a valid reason and then don't use a full gdk but try to use a",
    "start": "2825280",
    "end": "2832319"
  },
  {
    "text": "gre or a custom java runtime for your code that is running",
    "start": "2832319",
    "end": "2837440"
  },
  {
    "text": "into containers and with that please stay safe",
    "start": "2837440",
    "end": "2842839"
  },
  {
    "start": "2839000",
    "end": "3002000"
  },
  {
    "text": "and we have three minutes for questions so is there any are there any questions",
    "start": "2842839",
    "end": "2848240"
  },
  {
    "text": "remarks comment [Applause]",
    "start": "2848240",
    "end": "2854559"
  },
  {
    "text": "jokes",
    "start": "2856839",
    "end": "2859839"
  },
  {
    "text": "hi david um first of all thanks for talk that was that was a real tour of force and i was really",
    "start": "2866400",
    "end": "2871520"
  },
  {
    "text": "happy to see that you um that you went back to talk about alpine and the fact that actually it",
    "start": "2871520",
    "end": "2877280"
  },
  {
    "text": "it does come from this weird unsupported uh place uh especially for 1811. um i had a question about growl so um",
    "start": "2877280",
    "end": "2884559"
  },
  {
    "text": "you mentioned that one one of growl vm's limitations is invoked dynamic",
    "start": "2884559",
    "end": "2889680"
  },
  {
    "text": "like like all of them dynamic because no no so it's just a copy and paste from from their site invoke dynamics",
    "start": "2889680",
    "end": "2895359"
  },
  {
    "text": "works but there's something that i didn't really check so so that's a copy and paste from the github page uh from growl",
    "start": "2895359",
    "end": "2902079"
  },
  {
    "text": "but no but i i want to make sure that i use the right limitation that they are saying so lambdas work yeah",
    "start": "2902079",
    "end": "2910400"
  },
  {
    "text": "there was a question just someone yes okay i think we've basically got time for this one question and then i think",
    "start": "2910800",
    "end": "2917200"
  },
  {
    "text": "we'll have to call it later and just for our full one through the audience just for our",
    "start": "2917200",
    "end": "2922640"
  },
  {
    "text": "ben is the one with the very long sephora busted and slide hello hi um i just wanted to ask you",
    "start": "2922640",
    "end": "2930000"
  },
  {
    "text": "about the thing that you mentioned with all the official supported jvms being container",
    "start": "2930000",
    "end": "2938000"
  },
  {
    "text": "where is that valid from java 8 onwards for all of them",
    "start": "2938000",
    "end": "2943599"
  },
  {
    "text": "so the question is is java 8 supported into containers as in container aware yes",
    "start": "2943599",
    "end": "2951839"
  },
  {
    "text": "i believe it's starting from 8 199. um so my advice if you're using java 8",
    "start": "2951839",
    "end": "2959040"
  },
  {
    "text": "use the latest version of java 8 but since the container support has been added",
    "start": "2959040",
    "end": "2964319"
  },
  {
    "text": "in i think 199 so yes if you use a recent version of 8 you're on the good side having said that it's a good idea",
    "start": "2964319",
    "end": "2970720"
  },
  {
    "text": "also to look at 11 and more for just the extra features that are provided sure i was just wondering if you still",
    "start": "2970720",
    "end": "2977040"
  },
  {
    "text": "need to use the two flags ex experimental vm options and the",
    "start": "2977040",
    "end": "2982160"
  },
  {
    "text": "c group something no those have been removed but you you need to look if it's in 199 or",
    "start": "2982160",
    "end": "2989040"
  },
  {
    "text": "210 but the those flags are removed yeah okay thank you so the the container support",
    "start": "2989040",
    "end": "2995920"
  },
  {
    "text": "is by default okay so thank you very much david",
    "start": "2995920",
    "end": "3004400"
  }
]