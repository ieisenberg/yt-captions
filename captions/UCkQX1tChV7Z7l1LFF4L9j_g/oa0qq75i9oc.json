[
  {
    "start": "0",
    "end": "17000"
  },
  {
    "text": "hi I'm Peter albro I'm an amateur language designer and I'm also a professor of computer science at UC",
    "start": "4090",
    "end": "10330"
  },
  {
    "text": "Santa Cruz this talk is called three things I wish I knew when I started designing languages and before I get",
    "start": "10330",
    "end": "15850"
  },
  {
    "text": "into the talk I want to go through an obligatory slide or two about me so this",
    "start": "15850",
    "end": "21220"
  },
  {
    "start": "17000",
    "end": "49000"
  },
  {
    "text": "is the picture of myself that I like and that I like to give to the world that's",
    "start": "21220",
    "end": "26740"
  },
  {
    "text": "me that's your boy he's a sort of quixotic cocksure paladin trying to",
    "start": "26740",
    "end": "32529"
  },
  {
    "text": "change the way that systems programming people think about how they do what they do using you guessed it declarative",
    "start": "32529",
    "end": "38350"
  },
  {
    "text": "languages so obviously poor guy he'll never succeed but he's doing God's work",
    "start": "38350",
    "end": "43629"
  },
  {
    "text": "right and we want to we we want to root for him anyway you know but of course on",
    "start": "43629",
    "end": "49899"
  },
  {
    "start": "49000",
    "end": "112000"
  },
  {
    "text": "the inside the picture is like significantly more nuanced and significantly less romantic let me tell you some facts about me that I've never",
    "start": "49899",
    "end": "55870"
  },
  {
    "text": "told anybody publicly before I don't belong here okay I don't have any",
    "start": "55870",
    "end": "61569"
  },
  {
    "text": "mathematical maturity whatsoever I was such a bad student and high school I even make it to calc I didn't make it to",
    "start": "61569",
    "end": "66670"
  },
  {
    "text": "physics I didn't get serious about my studies until college and when I was in",
    "start": "66670",
    "end": "72130"
  },
  {
    "text": "college I wasn't studying computer science I was studying literature reading books and then you know I was unemployable after that right obviously",
    "start": "72130",
    "end": "78460"
  },
  {
    "text": "so I had to claw and scratch my way and do a job that could pay me enough money to live out here when I moved out here",
    "start": "78460",
    "end": "83590"
  },
  {
    "text": "and I did that by getting a job as an editor at a search engine and latterly moving my way into an OPS role a DBA",
    "start": "83590",
    "end": "90130"
  },
  {
    "text": "role a software engineering role but truth be told I only did that software engineering rule for about five years before I went to grad school and then",
    "start": "90130",
    "end": "96280"
  },
  {
    "text": "when I went to grad school I didn't go to grad school in programming languages I am NOT nor was I ever despite what you",
    "start": "96280",
    "end": "101560"
  },
  {
    "text": "may have heard earlier today a programming language researcher so who the hell do I think I am getting up here",
    "start": "101560",
    "end": "106719"
  },
  {
    "text": "and talking about design right one of these is alive by the way see if you can figure out what it is and so you may",
    "start": "106719",
    "end": "114939"
  },
  {
    "start": "112000",
    "end": "170000"
  },
  {
    "text": "have heard this expression right that data is the plural of anecdote but I'm afraid all I have to offer you today this semantic does I hope you enjoy them",
    "start": "114939",
    "end": "122219"
  },
  {
    "text": "the meat of this talk is really gonna be about a few things that I got right somehow a few strong opinions that I",
    "start": "122219",
    "end": "128350"
  },
  {
    "text": "took early on planted my feet and then I used to guide my design process I strongly think that in the future as we",
    "start": "128350",
    "end": "134230"
  },
  {
    "text": "design new languages for new domains it's important to with strong opinions you can always",
    "start": "134230",
    "end": "139370"
  },
  {
    "text": "retract the opinion later but if you don't plant pins in the great plant stakes in the ground you'll never be",
    "start": "139370",
    "end": "144890"
  },
  {
    "text": "able to start exploring the area in a meaningful way everything will be too amorphous and as a really thin bread",
    "start": "144890",
    "end": "150260"
  },
  {
    "text": "around that around that meat I want to lead in by talking about some of the",
    "start": "150260",
    "end": "155510"
  },
  {
    "text": "ingenious arguments I came up with to convince myself not to bother designing a language to convince myself that it was a bad idea our argument that I hope",
    "start": "155510",
    "end": "161870"
  },
  {
    "text": "I can convince you you can stop making for yourself and then at the end obviously I'll talk about a few things",
    "start": "161870",
    "end": "167510"
  },
  {
    "text": "that we're surprising that I learned along the way so by way of Prelude I",
    "start": "167510",
    "end": "172790"
  },
  {
    "text": "want to talk about food you've all heard the term food right fear uncertainty and doubt it's something that typically",
    "start": "172790",
    "end": "178790"
  },
  {
    "text": "companies so in their potential customers about other companies I think",
    "start": "178790",
    "end": "183890"
  },
  {
    "text": "IBM coined the term you're salesmen go talking oh you could use our competitor yeah hmm I hope that works out for you",
    "start": "183890",
    "end": "190250"
  },
  {
    "text": "you know like flood is also something that we just we do to ourselves when we",
    "start": "190250",
    "end": "195290"
  },
  {
    "text": "ask whether it's a good idea to do this thankless and laborious effort of",
    "start": "195290",
    "end": "200570"
  },
  {
    "text": "language design and I want to identify three killer bad arguments that we use",
    "start": "200570",
    "end": "205580"
  },
  {
    "text": "to convince ourselves not to do it the first is the really superficial one and it has to do with the look of a language",
    "start": "205580",
    "end": "211520"
  },
  {
    "text": "a mature language designers like me tend to believe that a new language a",
    "start": "211520",
    "end": "218800"
  },
  {
    "text": "revolutionary language should look unlike any language you've ever seen right it should look like the domain",
    "start": "218800",
    "end": "224690"
  },
  {
    "text": "it's modeling it should look cool and it should look different enough from every other language that's ever existed and",
    "start": "224690",
    "end": "231140"
  },
  {
    "text": "you may be surprised to hear because it seems so superficial right who cares about syntax anyway but I probably lost more time in this time sink in the early",
    "start": "231140",
    "end": "237320"
  },
  {
    "text": "days of language design than any of the others you know cuz I would sit there on the beach with a notebook or I'd sit there in bed with my Google Docs and I",
    "start": "237320",
    "end": "243560"
  },
  {
    "text": "had this process where I had a number I was trying to write a new language for protocols and I had a bunch of protocols you know paxos and so on and so forth",
    "start": "243560",
    "end": "249500"
  },
  {
    "text": "that I thought were really hard and an exercise went like can I invent a new syntax that makes it easier for me to",
    "start": "249500",
    "end": "255950"
  },
  {
    "text": "express these things and I would try some twice in text and that's just like an English language syntax but",
    "start": "255950",
    "end": "261380"
  },
  {
    "start": "260000",
    "end": "292000"
  },
  {
    "text": "invariably nine out of ten times after I was done in play here wasn't me my attempt to implement two-phase commit in some new languages you never heard of no",
    "start": "261380",
    "end": "268190"
  },
  {
    "text": "no Michel man that like that's just Erlang and and that's that that's okay right but that would be",
    "start": "268190",
    "end": "274339"
  },
  {
    "text": "enough for me to ban in the attempt right this language is not sufficiently new-looking then I wasted a lot of time",
    "start": "274339",
    "end": "281419"
  },
  {
    "text": "in that way I didn't start making progress until I gave up thinking about what a language supposed to look like instead I'll figure out to look last I want to figure",
    "start": "281419",
    "end": "287929"
  },
  {
    "text": "out what the sort of domain of discourse should be of the language what should I be talking about not how should it look",
    "start": "287929",
    "end": "293749"
  },
  {
    "start": "292000",
    "end": "350000"
  },
  {
    "text": "right and moving from the superficial to the slightly more fundamental it's very",
    "start": "293749",
    "end": "301399"
  },
  {
    "text": "natural for us to a lot languages to address a real external need right we",
    "start": "301399",
    "end": "308360"
  },
  {
    "text": "shouldn't design a language unless the world needs it right think about this is the world doesn't need any new languages",
    "start": "308360",
    "end": "315669"
  },
  {
    "text": "right world doesn't need my language the fact that the world needs a language is",
    "start": "315669",
    "end": "321199"
  },
  {
    "text": "a bad reason to design a language and this is you stymie yourself all the time I start to make progress on the label design I'd be like whoa wait a minute",
    "start": "321199",
    "end": "326269"
  },
  {
    "text": "wait a minute wait a minute does this like does this need to be a language could it be a library does",
    "start": "326269",
    "end": "331849"
  },
  {
    "text": "anybody care well anybody care about my language and the issue of need is even",
    "start": "331849",
    "end": "337039"
  },
  {
    "text": "worse when you open it up to external opinions right if you're thinking about designing a language to solve a problem",
    "start": "337039",
    "end": "342889"
  },
  {
    "text": "the last people you should tell about it are your friends and your broader community because they're gonna piss on",
    "start": "342889",
    "end": "348649"
  },
  {
    "text": "you from a great height during the first year my grandson I told a luminary in my",
    "start": "348649",
    "end": "357439"
  },
  {
    "start": "350000",
    "end": "406000"
  },
  {
    "text": "field that I was working on designing a programming life for distribute competing and he literally laughed me",
    "start": "357439",
    "end": "363199"
  },
  {
    "text": "out of the room and I was a student and this was a bunch of senior people I got laughed out of the room had to leave the room and then a another year later I was",
    "start": "363199",
    "end": "369319"
  },
  {
    "text": "at Langdon exit at Microsoft presenting on this work and a luminary in our community and a couple other people just",
    "start": "369319",
    "end": "375289"
  },
  {
    "text": "started out at stormed out of my talk in the middle yes so they they didn't like it and when I presented at my job talk",
    "start": "375289",
    "end": "381139"
  },
  {
    "text": "at Harvard a systems researcher who I admire very much said something along the lines of yeah you know this kind of reminds me of a racket and in racket",
    "start": "381139",
    "end": "386839"
  },
  {
    "text": "everything's a parenthesis so in your language what is the thing that is everything that I don't buy that was",
    "start": "386839",
    "end": "392300"
  },
  {
    "text": "nice and I don't you get me start on the orange website don't you know I don't don't ask the orange website if they",
    "start": "392300",
    "end": "397369"
  },
  {
    "text": "think you should design a language right how is this different than elixir or they might just talk about something that they know that has",
    "start": "397369",
    "end": "403219"
  },
  {
    "text": "nothing to do with what you talking about right isn't our community amazing okay let me get serious for a minute though this one's really hard for",
    "start": "403219",
    "end": "410520"
  },
  {
    "start": "406000",
    "end": "479000"
  },
  {
    "text": "me cuz I would love to get up here and say hey any language that we all design",
    "start": "410520",
    "end": "416340"
  },
  {
    "text": "is almost certain to have no impact in the sense that it's likely after ten years to have one user you and I want to",
    "start": "416340",
    "end": "423240"
  },
  {
    "text": "say that's okay do it anyway it's worth doing anyway and",
    "start": "423240",
    "end": "428700"
  },
  {
    "text": "I believe that to be true but I feel weird saying it right because people like us the sorts of people who do this",
    "start": "428700",
    "end": "435660"
  },
  {
    "text": "perverse and thankless activity of engaging in language design care enough about the world that we would like to",
    "start": "435660",
    "end": "441510"
  },
  {
    "text": "see the world change even if only a little bit under our influence right we would like to change the discourse a little bit change the way that people",
    "start": "441510",
    "end": "447540"
  },
  {
    "text": "think doesn't necessarily have to be measured in users but will be",
    "start": "447540",
    "end": "452670"
  },
  {
    "text": "heartbroken if we don't have some kind of impact right so how do we resolve this I think we accept the fact that we",
    "start": "452670",
    "end": "459840"
  },
  {
    "text": "won't have impact we find reasons to do language design anyway if only because if we target impact if we design our",
    "start": "459840",
    "end": "467460"
  },
  {
    "text": "language with the desire to have a lot of users in mind we're gonna design the wrong language we're certainly not going",
    "start": "467460",
    "end": "473940"
  },
  {
    "text": "to design a radical language we're probably gonna design something that looks like go I didn't hate I didn't say",
    "start": "473940",
    "end": "483390"
  },
  {
    "start": "479000",
    "end": "498000"
  },
  {
    "text": "I hated it I said it was the wrong language though you're right I should have said that I take it back I take it back I will I will take off all my other",
    "start": "483390",
    "end": "489810"
  },
  {
    "text": "ghost stuff throughout this talk all right so enough about enough about the doom and gloom let me tell you about some of the strong opinions that I just",
    "start": "489810",
    "end": "495660"
  },
  {
    "text": "sort of asserted by Fiat and I think I got lucky and they guided my design the meta theme of this talk by the way I'm",
    "start": "495660",
    "end": "502530"
  },
  {
    "start": "498000",
    "end": "525000"
  },
  {
    "text": "just going to say it explicitly is a is the primacy of context I'm a bottom-up",
    "start": "502530",
    "end": "507810"
  },
  {
    "text": "thinker and bottom-up is the only way I know how to do is is it designed you pick your context first and then you",
    "start": "507810",
    "end": "514169"
  },
  {
    "text": "proceed from it you can always back up and change your context but you plant stakes and you establish context and you",
    "start": "514169",
    "end": "520169"
  },
  {
    "text": "use the context to frame the discussion otherwise it's just an amoeba it's just a blob right and as a first example of",
    "start": "520169",
    "end": "526740"
  },
  {
    "start": "525000",
    "end": "557000"
  },
  {
    "text": "context I would like to make the following indefensible statement every language is a domain-specific language",
    "start": "526740",
    "end": "533360"
  },
  {
    "text": "okay now that I have your attention every language obviously isn't it just amazed civic language except in the vacuous",
    "start": "533360",
    "end": "538980"
  },
  {
    "text": "sense that there is a domain called general-purpose languages but I think I can get away with a slightly toned-down",
    "start": "538980",
    "end": "545070"
  },
  {
    "text": "version of this which goes like this in the future all radical new languages will be domain-specific languages okay",
    "start": "545070",
    "end": "552300"
  },
  {
    "text": "and so those of us who are designing those radical languages had better damn well pick a domain first because once",
    "start": "552300",
    "end": "559200"
  },
  {
    "start": "557000",
    "end": "570000"
  },
  {
    "text": "you've picked a domain you could circle it right in fact maybe in some sense language design is kind of like a",
    "start": "559200",
    "end": "565410"
  },
  {
    "text": "drawing compass right it's just this object lying on my desk until I pick a domain but once I fixed the compasses",
    "start": "565410",
    "end": "571020"
  },
  {
    "start": "570000",
    "end": "578000"
  },
  {
    "text": "foot I can draw a circle I can try to frame a domain of discourse around that to me maybe languages are like tools now in my",
    "start": "571020",
    "end": "579570"
  },
  {
    "start": "578000",
    "end": "584000"
  },
  {
    "text": "case choosing an actual domain I got a little lucky there was a domain that I was already kind of care mad about had",
    "start": "579570",
    "end": "587400"
  },
  {
    "start": "584000",
    "end": "643000"
  },
  {
    "text": "to mean that I've been struggling to program for a number of years and feeling like the tools and the languages were inadequate and I'm not gonna lie in",
    "start": "587400",
    "end": "595860"
  },
  {
    "text": "choosing this domain I was thinking about impact a little bit I was applying a piece of pop math that I believe is due to Eric Meyer anybody know Eric",
    "start": "595860",
    "end": "602490"
  },
  {
    "text": "Meyer is another quixotic cocksure paladin of language design and he said",
    "start": "602490",
    "end": "608670"
  },
  {
    "text": "that you know the likelihood of adoption of like a real paradigm changing language a revolutionary language is likely to be proportional to the",
    "start": "608670",
    "end": "615240"
  },
  {
    "text": "magnitude of the crisis that the language might address right divided by the perceived pain of adoption of the",
    "start": "615240",
    "end": "621450"
  },
  {
    "text": "language and in the domain that I care about systems programming the denominator is sure to just be an astronomically high constant right",
    "start": "621450",
    "end": "628320"
  },
  {
    "text": "unless your language kind of looks like C in which case maybe not so the way you",
    "start": "628320",
    "end": "634680"
  },
  {
    "text": "win this is you choose a domain that everybody agrees we're in deep trouble and distribute system seems like a good",
    "start": "634680",
    "end": "640080"
  },
  {
    "text": "one for that there's a great many others and some emerging ones and so once",
    "start": "640080",
    "end": "645089"
  },
  {
    "start": "643000",
    "end": "671000"
  },
  {
    "text": "you've framed the domain you can begin to ask a series of questions that would have had no structure otherwise right",
    "start": "645089",
    "end": "650970"
  },
  {
    "text": "what is the right language doesn't mean anything but you say what is the right language for domain acts you can begin",
    "start": "650970",
    "end": "657810"
  },
  {
    "text": "to frame a reasonable question okay well what's the right language for a domain it so it's well maybe it's a language that hides a bunch of details that are",
    "start": "657810",
    "end": "665790"
  },
  {
    "text": "distracting or not germane to that domain in order to in so doing",
    "start": "665790",
    "end": "671370"
  },
  {
    "start": "671000",
    "end": "697000"
  },
  {
    "text": "expose a couple needles what are the needles of needles well I guess the needles are equivalently the fundamental",
    "start": "671370",
    "end": "678360"
  },
  {
    "text": "things about the domaine that you want to be able to talk about explicitly or maybe they're the hard things about the",
    "start": "678360",
    "end": "683700"
  },
  {
    "text": "domaine more than likely they're the same the things that are fundamental and unique to a domain are the things that are most challenging they're the things",
    "start": "683700",
    "end": "689880"
  },
  {
    "text": "that should be elevated and exposed and talked about explicitly in the language so you ask yourself okay what are the",
    "start": "689880",
    "end": "696330"
  },
  {
    "text": "needles for my domain Oh maybe then language design isn't so much using a",
    "start": "696330",
    "end": "702270"
  },
  {
    "start": "697000",
    "end": "713000"
  },
  {
    "text": "drawing compass maybe it's more like operating a pitchfork to clear away the distracting things we're duly operating",
    "start": "702270",
    "end": "708900"
  },
  {
    "text": "a needle to extract the fundamental things languages are tools huh so okay",
    "start": "708900",
    "end": "714780"
  },
  {
    "start": "713000",
    "end": "731000"
  },
  {
    "text": "zooming in a little further I asked myself what is it that's so devilishly",
    "start": "714780",
    "end": "720360"
  },
  {
    "text": "hard about distributed systems programming them reasoning about the Met cetera and I think like I can make a",
    "start": "720360",
    "end": "726270"
  },
  {
    "text": "list and I'm inclined to make an ordered list and the number one thing in that ordered list has to be program",
    "start": "726270",
    "end": "731610"
  },
  {
    "start": "731000",
    "end": "763000"
  },
  {
    "text": "correctness right the hardest thing about distributed systems is user in the program it gives rise to this huge space",
    "start": "731610",
    "end": "736860"
  },
  {
    "text": "of possible behaviors due to things like non determinism and the execution machines failing routes flapping",
    "start": "736860",
    "end": "741930"
  },
  {
    "text": "messages being reordered and you have to convince yourself that it produces the correct outcomes under all of those",
    "start": "741930",
    "end": "747980"
  },
  {
    "text": "contingencies you have to reason from a program through a maze of behaviors to a",
    "start": "747980",
    "end": "753090"
  },
  {
    "text": "space of outcomes that's super hard and not well served I would argue by existing tools you know what else is",
    "start": "753090",
    "end": "759480"
  },
  {
    "text": "super hard sort of the dual of program correctness debugging right in the fur",
    "start": "759480",
    "end": "764700"
  },
  {
    "start": "763000",
    "end": "814000"
  },
  {
    "text": "on the left side we're asking does this program under all these contingencies always do the right thing in debugging",
    "start": "764700",
    "end": "769980"
  },
  {
    "text": "we've run the program it's done one of these contingencies and it has done the wrong thing and we want to know why we'd",
    "start": "769980",
    "end": "775620"
  },
  {
    "text": "like an explanation in terms of the program its input and the things that happened during the execution why I got",
    "start": "775620",
    "end": "781530"
  },
  {
    "text": "X what I expected Y that's hard for all the same reasons that program correctness is hard and another which is",
    "start": "781530",
    "end": "788430"
  },
  {
    "text": "that you know the observed effect of some bad thing in a distributed execution is very often remote in both",
    "start": "788430",
    "end": "794220"
  },
  {
    "text": "space and time from its causes so it's not just an intellectual challenge to obtain that explanation it's also a",
    "start": "794220",
    "end": "799800"
  },
  {
    "text": "technical challenge to combine all those logs and do a big hadoop job it's like a big pain in the",
    "start": "799800",
    "end": "804840"
  },
  {
    "text": "to do distributed debugging in addition to hurting our brain and I would say you know I would I would argue that our",
    "start": "804840",
    "end": "811530"
  },
  {
    "text": "community the current state of the art current programming language is in current tooling aren't really trying to",
    "start": "811530",
    "end": "816960"
  },
  {
    "start": "814000",
    "end": "862000"
  },
  {
    "text": "solve these problems so they're you know some people are doing TL a and that's great and more and more people are",
    "start": "816960",
    "end": "822120"
  },
  {
    "text": "instrumenting their code to do distributed debugging and that's great but we don't have an end-to-end solution to either these problems and we haven't",
    "start": "822120",
    "end": "827550"
  },
  {
    "text": "really made a lot of progress over the last thirty something years that we've been studying distributed systems right",
    "start": "827550",
    "end": "833250"
  },
  {
    "text": "to be sure there's other things that are hard about distributed systems but I'm inclined to say they're not top shelf concerns in large part because they're",
    "start": "833250",
    "end": "840690"
  },
  {
    "text": "not like distribution isn't what's fundamentally hard about them it's just an incidentally hard if you like so like",
    "start": "840690",
    "end": "847670"
  },
  {
    "text": "distribute systems are large software systems that are difficult to maintain difficult to do bug fixes difficult to",
    "start": "847670",
    "end": "853260"
  },
  {
    "text": "release new features minimizing dependencies on other running code right but our community it's done a lot of",
    "start": "853260",
    "end": "858630"
  },
  {
    "text": "work a lot of good work over the last decade thinking both about organizational processes that make",
    "start": "858630",
    "end": "864690"
  },
  {
    "start": "862000",
    "end": "880000"
  },
  {
    "text": "release easier and architectures that are ideally suited to being able to do",
    "start": "864690",
    "end": "870660"
  },
  {
    "text": "incremental release with minimal dependencies right our community's made a lot of progress in this area and so",
    "start": "870660",
    "end": "876090"
  },
  {
    "text": "I'm not gonna talk about anymore there's hope there but that's not what's really hard right the other thing that",
    "start": "876090",
    "end": "881130"
  },
  {
    "start": "880000",
    "end": "907000"
  },
  {
    "text": "our community's done a lot of great work on and something that is certainly hard is a problem of keeping code portable",
    "start": "881130",
    "end": "886680"
  },
  {
    "text": "and manageable oops and heterogeneous environments right and there's been a ton of great work in virtualization",
    "start": "886680",
    "end": "893450"
  },
  {
    "text": "right it's easier than ever to think about our code running in an extremely heterogeneous environment in a",
    "start": "893450",
    "end": "899850"
  },
  {
    "text": "multi-tenant away that maximizes utilization and that's great that's great but you could see why I'm inclined",
    "start": "899850",
    "end": "906810"
  },
  {
    "text": "to argue that focusing on the things that we can fix rather than the things",
    "start": "906810",
    "end": "912120"
  },
  {
    "start": "907000",
    "end": "927000"
  },
  {
    "text": "that are gonna sink us is akin to rearranging the deck chairs on the Titanic right if you are a rearranger of deck chairs and not a melter of icebergs",
    "start": "912120",
    "end": "919470"
  },
  {
    "text": "it's fine to rearrange the deck chairs you should you should put in the work wherever wherever it can go but the ship",
    "start": "919470",
    "end": "924690"
  },
  {
    "text": "is still gonna sink why why is it so hard to write correct programs and why",
    "start": "924690",
    "end": "931020"
  },
  {
    "start": "927000",
    "end": "1082000"
  },
  {
    "text": "is it so hard well the more I thought about it the",
    "start": "931020",
    "end": "936240"
  },
  {
    "text": "more it seemed to me that it had to do with the paradigm of the languages we were using to write these programs right",
    "start": "936240",
    "end": "942660"
  },
  {
    "text": "so as I argued a moment ago in some sense from some really high level of abstraction all that program is",
    "start": "942660",
    "end": "948450"
  },
  {
    "text": "distributed or otherwise is a description of a mapping from inputs to outputs and all correctness is is",
    "start": "948450",
    "end": "955530"
  },
  {
    "text": "constraints on that mapping or constraints over the outputs so program correctness is really a matter of data",
    "start": "955530",
    "end": "962090"
  },
  {
    "text": "it has to do with whether the transformation from input to output data is constraint preserving or not that and",
    "start": "962090",
    "end": "971130"
  },
  {
    "text": "the behaviors that are exhibited in a distributed execution are arguably sort of a distraction that you know data's",
    "start": "971130",
    "end": "977520"
  },
  {
    "text": "finding its way through this maze but data's finding its way through this maze if we've written our program in a traditional language in a very sort of",
    "start": "977520",
    "end": "985020"
  },
  {
    "text": "implicit way let me explain what I mean all current programming languages for",
    "start": "985020",
    "end": "990990"
  },
  {
    "text": "distributed systems correct me if I'm wrong irrespective of the paradigm right whether it's imperative or functional or",
    "start": "990990",
    "end": "997230"
  },
  {
    "text": "whatever focus the programmers attention explicitly on control flow and only",
    "start": "997230",
    "end": "1004040"
  },
  {
    "text": "implicitly on details like data flow and time okay well what do I mean by that",
    "start": "1004040",
    "end": "1009500"
  },
  {
    "text": "well if I've written my line might my program in an imperative language I've structured my computation around",
    "start": "1009500",
    "end": "1014810"
  },
  {
    "text": "constructs like loops and branches if I'm using a functional paradigm I structured it around recursion and",
    "start": "1014810",
    "end": "1020330"
  },
  {
    "text": "functional composition but at some level I'm asking the programmer to live in this intermediate space between the",
    "start": "1020330",
    "end": "1026420"
  },
  {
    "text": "program and the behaviors that it happens to induce and the reasoning about data following the data through",
    "start": "1026420",
    "end": "1032990"
  },
  {
    "text": "the system it's saying that's very challenging to do because data's relegated to a second-class role in traditional languages right data is",
    "start": "1032990",
    "end": "1039290"
  },
  {
    "text": "stuff that is marshaled into function arguments and flows out of function returns and finds its way into exception",
    "start": "1039290",
    "end": "1044990"
  },
  {
    "text": "handlers and things like this right data is a thing that is stored in variables that persist their values across loop",
    "start": "1044990",
    "end": "1050510"
  },
  {
    "text": "iterations and things like this similarly ordering and timing are implicit in these languages in an",
    "start": "1050510",
    "end": "1056870"
  },
  {
    "text": "imperative language if I want to combine two chunks of code a and B the straightforward and obvious way to do it is to say a semicolon B do a and then do",
    "start": "1056870",
    "end": "1064070"
  },
  {
    "text": "they which makes tons of sense would be as a data dependence but which makes no sense whatsoever if they're independent similarly in",
    "start": "1064070",
    "end": "1070610"
  },
  {
    "text": "functional language all our data structures are ordered right we compose functions in a particular order order sort of everywhere but you don't talk",
    "start": "1070610",
    "end": "1076159"
  },
  {
    "text": "about it you just sort of get it implicitly and that seems upside down to me like completely upside down right a",
    "start": "1076159",
    "end": "1083330"
  },
  {
    "text": "language that made it easy for me to reason about data flowing from inputs to output so I could reason about correction or flowing in the reverse",
    "start": "1083330",
    "end": "1088850"
  },
  {
    "text": "direction from outputs to inputs so I could reason about debugging would instead make data explicit allowing me",
    "start": "1088850",
    "end": "1095059"
  },
  {
    "text": "to reason about how data is flowing through the system so that I can focus on the things that could cause my",
    "start": "1095059",
    "end": "1101240"
  },
  {
    "text": "program to be incorrect in adequately constrained change of that data right so",
    "start": "1101240",
    "end": "1106940"
  },
  {
    "text": "what I want have no idea what it looks like but I want a language that allows me to talk about data and time as",
    "start": "1106940",
    "end": "1112909"
  },
  {
    "text": "first-class citizens even if that means talking about control flow as a second-class citizen like what if",
    "start": "1112909",
    "end": "1119150"
  },
  {
    "text": "control flow was the thing that was implicit it just happened programmer doesn't talk about behaviors programmer",
    "start": "1119150",
    "end": "1125539"
  },
  {
    "text": "talks about data and says it can change in this way or maybe sometimes I can't control how it changes over here so I",
    "start": "1125539",
    "end": "1132530"
  },
  {
    "text": "need to move the control around the system and maybe everything else is a distraction maybe the the needle is",
    "start": "1132530",
    "end": "1139370"
  },
  {
    "start": "1136000",
    "end": "1177000"
  },
  {
    "text": "really data and time is a needle that provides context for the data maybe",
    "start": "1139370",
    "end": "1144679"
  },
  {
    "text": "control flow was the haystack and another haystack then in order to make all this work is details about the",
    "start": "1144679",
    "end": "1152750"
  },
  {
    "text": "representation of the data right it's really hard for me to track data flow through a system if sometimes the data is it's scalars and variables and hums",
    "start": "1152750",
    "end": "1160070"
  },
  {
    "text": "it's and tree data structures sometimes it's marshaled into a message you know",
    "start": "1160070",
    "end": "1165169"
  },
  {
    "text": "sometimes it's in a register sometimes it's in my memory sometimes it's you know laid out in blocks on my disk",
    "start": "1165169",
    "end": "1170299"
  },
  {
    "text": "wouldn't be really nice if I kind of had like a uniform representation so I could see data for data and I could follow the data through the system this is kind of",
    "start": "1170299",
    "end": "1176929"
  },
  {
    "text": "where I was thinking and then and then it occurred to me oh you know a compass can draw a circle by fixing a point but",
    "start": "1176929",
    "end": "1183770"
  },
  {
    "start": "1177000",
    "end": "1202000"
  },
  {
    "text": "you know if we were to fix another point like the things we want to talk about in our language everybody knows with with two points we can draw a more precise",
    "start": "1183770",
    "end": "1190880"
  },
  {
    "text": "shape two points in a piece of string we can draw an ellipse and try to sort of get even closer to capturing the domain",
    "start": "1190880",
    "end": "1197659"
  },
  {
    "text": "that we want to talk about maybe maybe lying our pins and string so I knew what I",
    "start": "1197659",
    "end": "1206120"
  },
  {
    "start": "1202000",
    "end": "1221000"
  },
  {
    "text": "wanted my language to talk about but I had no idea what it looked like or how you could use it or what its semantics were so you know I had six or seven",
    "start": "1206120",
    "end": "1212360"
  },
  {
    "text": "years to screw around with this stuff so I did you know a lot of time passed I spent my time on Google Docs thinking",
    "start": "1212360",
    "end": "1218390"
  },
  {
    "text": "about what the Wright State primitives should be how can we talk about data changing oh right whatever language I come up with there",
    "start": "1218390",
    "end": "1224720"
  },
  {
    "start": "1221000",
    "end": "1229000"
  },
  {
    "text": "should be a way to efficiently evaluate it that's pretty important if you're a systems person uh you know I screwed",
    "start": "1224720",
    "end": "1230150"
  },
  {
    "start": "1229000",
    "end": "1292000"
  },
  {
    "text": "around more with syntax I got really upset about this thing that Jeff Holman said in one of his books in which he",
    "start": "1230150",
    "end": "1236570"
  },
  {
    "text": "argued that encapsulation this thing that you really want right you hide data you're hot every star you hide an implementation so that you can abstract",
    "start": "1236570",
    "end": "1243080"
  },
  {
    "text": "above it and the Clara tivity you know allowing a programmer to give a precise",
    "start": "1243080",
    "end": "1248840"
  },
  {
    "text": "describe you know a precise description of what should happen in a computation but not necessarily how to do it appear to be very much at odds with each other",
    "start": "1248840",
    "end": "1256160"
  },
  {
    "text": "right so declare tivity tends to work really well for very small programs but when we want to build big programs that",
    "start": "1256160",
    "end": "1262370"
  },
  {
    "text": "a small program stuff gets fussy I'm not going to talk much more about this in this talk but this is a problem so",
    "start": "1262370",
    "end": "1268070"
  },
  {
    "text": "anybody in the audience who is interested in declarative programming I'd love to hear if you have any ideas about how we can do a better job of",
    "start": "1268070",
    "end": "1273520"
  },
  {
    "text": "hiding encapsulation and reuse in query languages and then of course the number",
    "start": "1273520",
    "end": "1280490"
  },
  {
    "text": "one thing that occupied all my attention kept me up at night which was like how do we in a reasonable way talk about",
    "start": "1280490",
    "end": "1286130"
  },
  {
    "text": "uncertainty how does a language talk about what it can't talk about that's",
    "start": "1286130",
    "end": "1291710"
  },
  {
    "text": "weird but I was a grad student right so I wasn't just writing I was reading too",
    "start": "1291710",
    "end": "1296840"
  },
  {
    "start": "1292000",
    "end": "1460000"
  },
  {
    "text": "and I want to take a little bit of a sort of detour which I hopefully have time for into a theory that provided a",
    "start": "1296840",
    "end": "1307400"
  },
  {
    "text": "lot of both inspiration for me and validation of my approach it's a piece",
    "start": "1307400",
    "end": "1313250"
  },
  {
    "text": "of theory called descriptive complexities everybody ever heard of descriptive complexity I didn't think okay",
    "start": "1313250",
    "end": "1318260"
  },
  {
    "text": "it's a subfield of finite model theories anybody ever heard of finite model theory okay doesn't matter so there was",
    "start": "1318260",
    "end": "1324740"
  },
  {
    "text": "this finite model theorist named Ron Fagan at IBM and year before I was born in 1974 he made this like profound",
    "start": "1324740",
    "end": "1332990"
  },
  {
    "text": "discovery it's the coolest thing ever to me and I'm not a complexity wonk I just think it's really cool like by",
    "start": "1332990",
    "end": "1338840"
  },
  {
    "text": "analogy so he observed that the complexity class NP the complexity class",
    "start": "1338840",
    "end": "1346510"
  },
  {
    "text": "class of problems that can be solved by a non-deterministic automaton in",
    "start": "1346510",
    "end": "1353410"
  },
  {
    "text": "polynomial time and whose solutions can be checked by a deterministic automaton",
    "start": "1353410",
    "end": "1359210"
  },
  {
    "text": "in polynomial time is precisely the same as the class of problems that can be",
    "start": "1359210",
    "end": "1366170"
  },
  {
    "text": "expressed in a somewhat arcane logic known as second-order whoops second-order existential logic anybody",
    "start": "1366170",
    "end": "1373310"
  },
  {
    "text": "ever heard a second-order logic cool ok so as we all know first-order logic allows us to talk about members of",
    "start": "1373310",
    "end": "1379370"
  },
  {
    "text": "domains and their relations to each other it allows us to quantify over those members of domains if there exists",
    "start": "1379370",
    "end": "1384530"
  },
  {
    "text": "an X such that's it has some property ER for all Y there's some property second-order logic allows us to in",
    "start": "1384530",
    "end": "1389870"
  },
  {
    "text": "addition to all that quantify over sets and relations themselves it allows you to say there exists a set with some",
    "start": "1389870",
    "end": "1397220"
  },
  {
    "text": "properties or for all sets some properties hold and so second-order existential is the",
    "start": "1397220",
    "end": "1402410"
  },
  {
    "text": "fragment of second-order that allows you to say there is a set with some properties but not to quantify it universally over sets right so Ron",
    "start": "1402410",
    "end": "1410750"
  },
  {
    "text": "noticed that this complexity class which we usually think of in the context of",
    "start": "1410750",
    "end": "1416680"
  },
  {
    "text": "computational machines right we have these measures of complexity space and time that would appear on the surface to",
    "start": "1416680",
    "end": "1424400"
  },
  {
    "text": "be very closely tied to our model of computation Turing machines this",
    "start": "1424400",
    "end": "1429830"
  },
  {
    "text": "infinite tape and a head that writes ones and zeros on the tape it makes sense in that context right because you can ask yourselves to solve a particular",
    "start": "1429830",
    "end": "1435620"
  },
  {
    "text": "problem how much tape do I need and how many times do I need to write something on it but that's not really satisfying from a",
    "start": "1435620",
    "end": "1441530"
  },
  {
    "text": "mathematical point of view right how do we know that that's fundamental that NP really means something outside the",
    "start": "1441530",
    "end": "1448280"
  },
  {
    "text": "context of a universal computing machine and Fagin's result suggested that there may be a rich correspondence between",
    "start": "1448280",
    "end": "1455440"
  },
  {
    "text": "languages and the exact class of complexity that they characterize so I'm",
    "start": "1455440",
    "end": "1462590"
  },
  {
    "start": "1460000",
    "end": "1585000"
  },
  {
    "text": "not gonna spend a lot of time on this but this is really cool stuff ok you gotta take my word for it so you're familiar with the three coloring",
    "start": "1462590",
    "end": "1468050"
  },
  {
    "text": "right I have a map and the question is can I just using three crayons color in all the countries in the map such that",
    "start": "1468050",
    "end": "1474350"
  },
  {
    "text": "no two countries that are adjacent are colored the same color it's easy to see that we can express this in second-order",
    "start": "1474350",
    "end": "1480500"
  },
  {
    "text": "logic we just say we just say you know there exists a relation are red yellow and blue with some assignment of values",
    "start": "1480500",
    "end": "1487400"
  },
  {
    "text": "to them such that for all countries it has a color it's either red blue or yellow and for all other countries if",
    "start": "1487400",
    "end": "1494840"
  },
  {
    "text": "there's a border then they're not both red and they're not both yellow and they're not both blue that's cool on the",
    "start": "1494840",
    "end": "1502430"
  },
  {
    "text": "one hand that's cool because we can see that an np-complete problem can be written down in second-order logic that",
    "start": "1502430",
    "end": "1508310"
  },
  {
    "text": "many of you were saying who cares like I don't know how to actually execute this but if you look at it from the other",
    "start": "1508310",
    "end": "1514220"
  },
  {
    "text": "side it's really interesting too because like let's say that I had an assignment",
    "start": "1514220",
    "end": "1520220"
  },
  {
    "text": "of values to those three relations red yellow and blue then it's easy to convince myself that given that",
    "start": "1520220",
    "end": "1527180"
  },
  {
    "text": "assignment this first order fragment of the step of the statement could be very efficiently checked right I just look at",
    "start": "1527180",
    "end": "1532910"
  },
  {
    "text": "the map after I've colored it and I see if there are any two countries next to each other they're the same color so there's an efficient polynomial time",
    "start": "1532910",
    "end": "1538340"
  },
  {
    "text": "check for a solution but it's by no means obvious how we assign those values to a first approximation you have to try",
    "start": "1538340",
    "end": "1544220"
  },
  {
    "text": "every coloring that sure sounds like an np-complete problem to me right that's cool and then so similarly a Sat right",
    "start": "1544220",
    "end": "1549890"
  },
  {
    "text": "there exists a set s of the true variables such that for every Clause",
    "start": "1549890",
    "end": "1557170"
  },
  {
    "text": "there exists a variable such that if the variable set to true in that clause then",
    "start": "1557170",
    "end": "1563960"
  },
  {
    "text": "we set it to true in s and if it's set to false in that clause then we haven't put it in s again if we had an S it",
    "start": "1563960",
    "end": "1571220"
  },
  {
    "text": "would be easy to check if this help if we had an assignment of easy to check but it would appear that we have to try",
    "start": "1571220",
    "end": "1576320"
  },
  {
    "text": "all the possible assignments that sure sounds like a problem that's in NP and so everybody who ever studied",
    "start": "1576320",
    "end": "1582140"
  },
  {
    "text": "descriptive complexity even if they only got to page 2 of the book spend a couple to three months freaking out about this",
    "start": "1582140",
    "end": "1587960"
  },
  {
    "start": "1585000",
    "end": "1663000"
  },
  {
    "text": "picture because it's on the inside cover of the book right so for many people this is as far as you get but this is still super dope so what you see happen",
    "start": "1587960",
    "end": "1593930"
  },
  {
    "text": "here on the right is these are complexity classes so this is the class of bounded circuits and this is the log",
    "start": "1593930",
    "end": "1599930"
  },
  {
    "text": "time computations this is the pollen time computations this is MP and Co MP",
    "start": "1599930",
    "end": "1605180"
  },
  {
    "text": "and then way up here oh hey look it's recursively enumerable complete there's a halting problem up there so that's all",
    "start": "1605180",
    "end": "1610430"
  },
  {
    "text": "of our friends from the zoo of complexity or over here on the right like I said I'm not a complexity walk so I only know to a couple to three of them",
    "start": "1610430",
    "end": "1616580"
  },
  {
    "text": "what's really crazy is that over here on the Left these are fragments of logic so",
    "start": "1616580",
    "end": "1622310"
  },
  {
    "text": "the bounded the bounded circuits are exactly the things that you can write down a first-order logic the log time",
    "start": "1622310",
    "end": "1628340"
  },
  {
    "text": "computations such as to color which is lock time complete are exactly the things you could write down a first-order logic if you've mented it",
    "start": "1628340",
    "end": "1634100"
  },
  {
    "text": "with the deterministic transitive closure operation and if you log meant it with a least fixed point operator you",
    "start": "1634100",
    "end": "1640070"
  },
  {
    "text": "can express the polynomial time computations if if you take second-order logic and add Lee's fixed point you can express that oh this is just so amazing",
    "start": "1640070",
    "end": "1647000"
  },
  {
    "text": "there's a one-to-one between the words and constructors that we use to talk",
    "start": "1647000",
    "end": "1653510"
  },
  {
    "text": "about a mapping in the most abstract sense and how hard it could be to evaluate that regardless of how you",
    "start": "1653510",
    "end": "1661210"
  },
  {
    "text": "evaluate it wow that's cosmic and it was as I said both inspirational to me because what it",
    "start": "1661210",
    "end": "1668030"
  },
  {
    "start": "1663000",
    "end": "1688000"
  },
  {
    "text": "because it got me thinking about carving up languages into different fragments and trying to assemble different",
    "start": "1668030",
    "end": "1673430"
  },
  {
    "text": "languages out of the pieces but it was also validating for me because because emmerman like me does view programs from",
    "start": "1673430",
    "end": "1679970"
  },
  {
    "text": "this really high level as a precise description of a mapping between inputs and outputs okay so that's that's cool",
    "start": "1679970",
    "end": "1688190"
  },
  {
    "start": "1688000",
    "end": "1731000"
  },
  {
    "text": "and this is validating for me because I've been looking at the world in this way for some time those of you who saw my strange lip talk in 2015 and I went",
    "start": "1688190",
    "end": "1695000"
  },
  {
    "text": "on for a while about like why wouldn't you just why wouldn't you just write down a web server in SQL because SQL",
    "start": "1695000",
    "end": "1701000"
  },
  {
    "text": "concisely and completely describes the behavior of the web server all you have to do is point your eyes and say I can imagine that a stream of requests can be",
    "start": "1701000",
    "end": "1707750"
  },
  {
    "text": "modeled as records and I can imagine that pages on disk can be modeled as records and it's really just a natural join between them they have to be on the",
    "start": "1707750",
    "end": "1713030"
  },
  {
    "text": "same server and they have to be for the same file why wouldn't you write it down that way especially if it provided a",
    "start": "1713030",
    "end": "1720050"
  },
  {
    "text": "guarantee about how efficient the computation could be right so and then",
    "start": "1720050",
    "end": "1725480"
  },
  {
    "text": "all this you know all this descriptive complexity stuff got me thinking and me maybe what languages really are is that",
    "start": "1725480",
    "end": "1732620"
  },
  {
    "start": "1731000",
    "end": "1768000"
  },
  {
    "text": "they're like their lenses that we put between our selves in a domain in order to better study it what does the lens do it",
    "start": "1732620",
    "end": "1738590"
  },
  {
    "text": "it frames things it puts some things in the frame some things out and it magnifies things and help maybe it burns holes and thanks to and there's no",
    "start": "1738590",
    "end": "1744980"
  },
  {
    "text": "reason why we should stop with a single lens right we should permit ourselves to grab a couple lenses in play amateur",
    "start": "1744980",
    "end": "1750200"
  },
  {
    "text": "optician hey is that better number one or number two what do you think but you certainly can do things like what would",
    "start": "1750200",
    "end": "1755539"
  },
  {
    "text": "happen if I took SQL it wasn't quite big enough to hold my problem is there like a couple things from",
    "start": "1755539",
    "end": "1761779"
  },
  {
    "text": "Erlang I could just add to it to get the language I wanted maybe languages are just lenses we can try out we can throw",
    "start": "1761779",
    "end": "1767390"
  },
  {
    "text": "out and then I started thinking about these fragments right not the same",
    "start": "1767390",
    "end": "1774860"
  },
  {
    "start": "1768000",
    "end": "1817000"
  },
  {
    "text": "fragments I'm not a second-order person but I was a query person I was a database person so I started thinking about SQL and the sort of the relational",
    "start": "1774860",
    "end": "1781760"
  },
  {
    "text": "algebra operators out of which SQL is built any of these symbols mean anything to anybody just like an eye test so the",
    "start": "1781760",
    "end": "1788570"
  },
  {
    "text": "simplest selection the basic idea is you have some rows throw some of them away this is projection you have a row throw",
    "start": "1788570",
    "end": "1795409"
  },
  {
    "text": "some of the columns away this is joined you have a couple rows combine them and make a new row and then maybe throw it",
    "start": "1795409",
    "end": "1801409"
  },
  {
    "text": "away or throw away some of the columns you can combine those and anyways you want the language that you get from",
    "start": "1801409",
    "end": "1806630"
  },
  {
    "text": "combining those in any ways and any way you want is a very small language a very",
    "start": "1806630",
    "end": "1811880"
  },
  {
    "text": "minimally expressive language known as the conjunctive queries but it's not that unexpressive it was expressive",
    "start": "1811880",
    "end": "1818360"
  },
  {
    "start": "1817000",
    "end": "1823000"
  },
  {
    "text": "enough to implement that web server so you can write things in the conjunctive queries and in exchange for having",
    "start": "1818360",
    "end": "1824960"
  },
  {
    "text": "written them in such a small language you get some really amazing properties so in the conjunctive queries you can",
    "start": "1824960",
    "end": "1833899"
  },
  {
    "text": "decide containment containment is decidable that is to say I can write a procedure that given a query P and a",
    "start": "1833899",
    "end": "1839809"
  },
  {
    "text": "query Q I can say is P containing Q meaning does every record that P produces does Q also produce it that's a",
    "start": "1839809",
    "end": "1847340"
  },
  {
    "text": "huge thing for query optimization it's use all the time in query optimization when we can determine in a database that a pair of queries are conjunctive but",
    "start": "1847340",
    "end": "1853880"
  },
  {
    "text": "obviously if you can do containment you can do containment in both directions and if P is contained in Q and Q is contained in P P and Q are equivalent",
    "start": "1853880",
    "end": "1860500"
  },
  {
    "text": "which means this is a language that you can write some interesting things but not all of the things you might want to",
    "start": "1860500",
    "end": "1866000"
  },
  {
    "text": "write for which equivalence is decidable like that's huge",
    "start": "1866000",
    "end": "1872960"
  },
  {
    "text": "right I could have these two programs that look completely different one could be a million lines and one could be two you put it into it a decision procedure",
    "start": "1872960",
    "end": "1879170"
  },
  {
    "text": "I say they're the same program so you probably wanna work with the one with two lines or I have these two programs that look totally different ones fast ones slow well guess what they're",
    "start": "1879170",
    "end": "1885140"
  },
  {
    "text": "equivalent so you should run the faster that's amazing unfortunately if we extend this language",
    "start": "1885140",
    "end": "1891650"
  },
  {
    "text": "in the tiniest bit with anything we lose decidability for containment if we add for example negation we arrive at the",
    "start": "1891650",
    "end": "1898520"
  },
  {
    "text": "aggregation free subset of SQL cool language so you can write some cool stuff richer things on the web server",
    "start": "1898520",
    "end": "1904960"
  },
  {
    "text": "unfortunately decidability a containment goes out the window it's also interesting as well what if we shift this thing over if you set this thing",
    "start": "1904960",
    "end": "1910820"
  },
  {
    "text": "over and say well forget about negation I don't want it but I want the ability to do least fix point so I want to",
    "start": "1910820",
    "end": "1915980"
  },
  {
    "text": "define things recursively I want to be able to define the transitive closure of a relation paths and grass or things",
    "start": "1915980",
    "end": "1921919"
  },
  {
    "text": "like this we get a language called data log containment isn't decidable and data",
    "start": "1921919",
    "end": "1927559"
  },
  {
    "text": "log either but data log has some really nice properties that you get an exchange for having a small language in data log",
    "start": "1927559",
    "end": "1934010"
  },
  {
    "text": "all computations terminate all computations halt in data log all",
    "start": "1934010",
    "end": "1940640"
  },
  {
    "text": "computations produce a unique result irrespective of the order in which data arrived and the order in which",
    "start": "1940640",
    "end": "1946010"
  },
  {
    "text": "computation was scheduled determinism despite non determinism oh okay so this",
    "start": "1946010",
    "end": "1952250"
  },
  {
    "text": "sounds really compelling maybe this is just the language that I want right I want a language that I can run in distributed systems where all the bad things that happen in distributed",
    "start": "1952250",
    "end": "1957890"
  },
  {
    "text": "systems don't happen to me most of the bad things that happen in distributed systems have to do with non determinacy",
    "start": "1957890",
    "end": "1963890"
  },
  {
    "text": "in timing if I can write down programs in a language it doesn't give a rat's ass about timing I've I have a language",
    "start": "1963890",
    "end": "1970160"
  },
  {
    "text": "that can capture the eventually consistent programs that's awesome let's just write let's just write our systems in data logs right so now that I'm like",
    "start": "1970160",
    "end": "1977419"
  },
  {
    "start": "1975000",
    "end": "2003000"
  },
  {
    "text": "wholewheat me I had it wrong maybe what I learn from descriptive complexity is not that languages are lenses that frame",
    "start": "1977419",
    "end": "1984049"
  },
  {
    "text": "a subject really what they are is lassos that you like capture a subject and you cinch it down you won't like the",
    "start": "1984049",
    "end": "1990429"
  },
  {
    "text": "smallest language that captures the programs that you want to write but is it's small enough that you can't write",
    "start": "1990429",
    "end": "1996740"
  },
  {
    "text": "anything else because insane exchange for that smallness you get proved ability and you potentially get efficiency",
    "start": "1996740",
    "end": "2003090"
  },
  {
    "start": "2003000",
    "end": "2006000"
  },
  {
    "text": "contacts contacts contacts alright let's talk about context room and I promise I wasn't gonna show you or did I say this",
    "start": "2003090",
    "end": "2008320"
  },
  {
    "start": "2006000",
    "end": "2053000"
  },
  {
    "text": "at the beginning of the talk maybe I forgot to say this I forced myself in this talk to not show any syntax because",
    "start": "2008320",
    "end": "2015370"
  },
  {
    "text": "I didn't want it to be about syntax I wanted it to be about the process and stuff turn out how super hard to give a",
    "start": "2015370",
    "end": "2021100"
  },
  {
    "text": "talk about a language that's showing any syntax I think I can get away with this because it's just a record right this isn't the syntax in my language so you",
    "start": "2021100",
    "end": "2027970"
  },
  {
    "text": "know in data log I can talk about knowledge I can talk about a particular piece of knowledge a string called",
    "start": "2027970",
    "end": "2033610"
  },
  {
    "text": "details that is in a predicate called knowledge so you ask yourself ok well what if I wanted to use data log to",
    "start": "2033610",
    "end": "2039520"
  },
  {
    "text": "capture distributed computing or at the very least I would need to also talk about space the location of data because",
    "start": "2039520",
    "end": "2046960"
  },
  {
    "text": "it might be the case that somebody knows the details and somebody else doesn't and if we want everybody to know what we have to invent a protocol to move the",
    "start": "2046960",
    "end": "2052330"
  },
  {
    "text": "data around right that's cool well that's easy because in some sense I'm",
    "start": "2052330",
    "end": "2057850"
  },
  {
    "start": "2053000",
    "end": "2084000"
  },
  {
    "text": "gonna say this slowly in some sense space has no semantics space is just a",
    "start": "2057850",
    "end": "2063580"
  },
  {
    "text": "name of a thing so we can just add another column to a data log relation and model the fact that host one knows",
    "start": "2063580",
    "end": "2069700"
  },
  {
    "text": "this but host-to-host two doesn't that's interesting I didn't need to change anything to model space space doesn't",
    "start": "2069700",
    "end": "2075520"
  },
  {
    "text": "mean anything it's just a name sure we have to written figure out how to route to the host but that's not our languages problem what we've done if you've added",
    "start": "2075520",
    "end": "2082179"
  },
  {
    "text": "context and set a richer thing now two things the data log can't do that we",
    "start": "2082179",
    "end": "2088090"
  },
  {
    "text": "need to do if we want to be able to model this those sorts of systems that that we write is I can't model time",
    "start": "2088090",
    "end": "2093490"
  },
  {
    "text": "varying state I can talk about knowledge but I can't talk about that knowledge coming into being and then being lost or",
    "start": "2093490",
    "end": "2099820"
  },
  {
    "text": "changing or something like that certainly these things can happen to real life and maybe more fundamentally it can't capture all that uncertainty",
    "start": "2099820",
    "end": "2106510"
  },
  {
    "text": "that makes these system so hard I can't talk about what it means to be unsure about when you receive a message that I",
    "start": "2106510",
    "end": "2114310"
  },
  {
    "text": "sent and it occurred to me in a dream that maybe you could kind of kill both",
    "start": "2114310",
    "end": "2122230"
  },
  {
    "text": "of these birds with one stone by salting in one more piece of context it's one thing for something to be known it's one",
    "start": "2122230",
    "end": "2129190"
  },
  {
    "text": "thing for it to be known by an agent and it's another thing for it to be known by an agent at a particular",
    "start": "2129190",
    "end": "2136270"
  },
  {
    "text": "now we can start to model a time before 27 where it wasn't known or a time after 27 when it changes to some other",
    "start": "2136270",
    "end": "2143350"
  },
  {
    "text": "knowledge right and then you can keep turning this crank right because this",
    "start": "2143350",
    "end": "2148750"
  },
  {
    "text": "thing kind of looks like a register some host has a current value that could be a different value at another time and if we wanted to generalize from a register",
    "start": "2148750",
    "end": "2155590"
  },
  {
    "text": "to something like a key value store we would just have to add one more column that contextualise the value in the",
    "start": "2155590",
    "end": "2161200"
  },
  {
    "start": "2159000",
    "end": "2176000"
  },
  {
    "text": "context of the key that it belonged to right so this adding context game works really well when we're modeling the",
    "start": "2161200",
    "end": "2167950"
  },
  {
    "text": "state of our universe uniformly as records unfortunately data log language didn't",
    "start": "2167950",
    "end": "2173440"
  },
  {
    "text": "give us any way to talk about time changing so we'll need at the very least to be able to model state change to add",
    "start": "2173440",
    "end": "2180550"
  },
  {
    "start": "2176000",
    "end": "2222000"
  },
  {
    "text": "two things to data log a successor function so we can talk about time marching forward which changes the",
    "start": "2180550",
    "end": "2187210"
  },
  {
    "text": "expressivity of our language of course and we have to be able to talk about negation too because if we want a model",
    "start": "2187210",
    "end": "2192730"
  },
  {
    "text": "mutable state we have to talk about what changes and what doesn't change as the",
    "start": "2192730",
    "end": "2198220"
  },
  {
    "text": "clock moves so we need to be able to say not and we need to be able to say plus one but if we add not and plus one to",
    "start": "2198220",
    "end": "2204550"
  },
  {
    "text": "date along we get a language that I thought I had invented in 2010 but it turned out somebody had already invented",
    "start": "2204550",
    "end": "2209980"
  },
  {
    "text": "this guy named Bertrand Luda sure created a language called state log on which he said hey if you add negation",
    "start": "2209980",
    "end": "2215950"
  },
  {
    "text": "and plus one to data log you get a data log that can model state machines it's",
    "start": "2215950",
    "end": "2221650"
  },
  {
    "text": "pretty cool and then the one last thing to add was something akin to please",
    "start": "2221650",
    "end": "2228850"
  },
  {
    "start": "2222000",
    "end": "2273000"
  },
  {
    "text": "advance the clock by one that was more like please admit that the clock changes",
    "start": "2228850",
    "end": "2235180"
  },
  {
    "text": "in a way that I can't control and when I send you a message my clock is 27 what is your clock when",
    "start": "2235180",
    "end": "2241900"
  },
  {
    "text": "you get the message can I even say that it's greater than 27 I don't think so I",
    "start": "2241900",
    "end": "2248710"
  },
  {
    "text": "think I have to say I can advance a clock by 1 and I can make the clock jump to some random place and if I can",
    "start": "2248710",
    "end": "2254920"
  },
  {
    "text": "capture both of those things in language I can my language can talk about everything that could happen in distributed execution that's pretty cool unfortunately it yields a very big",
    "start": "2254920",
    "end": "2261970"
  },
  {
    "text": "language a Turing complete language in which I can express any program and this isn't surprising right because they're",
    "start": "2261970",
    "end": "2267490"
  },
  {
    "text": "all these protocols and I was trying to write and I was added to Datalog until I had a language rich enough to write them so",
    "start": "2267490",
    "end": "2273100"
  },
  {
    "start": "2273000",
    "end": "2327000"
  },
  {
    "text": "now I could this is syntax but you can't read it so it doesn't matter so so I went ahead and a damn it implemented",
    "start": "2273100",
    "end": "2279760"
  },
  {
    "text": "two-phase commit and I was like yeah that was cool that felt right and I'm in a three phase commit I'll cool that felt right and I implemented",
    "start": "2279760",
    "end": "2284830"
  },
  {
    "text": "paxos and in every case I needed all of those things I needed least fix point I",
    "start": "2284830",
    "end": "2290200"
  },
  {
    "text": "needed successor I needed negation I began to ask myself why and I took a",
    "start": "2290200",
    "end": "2296410"
  },
  {
    "text": "step even further back and I was like what is it about these protocols that",
    "start": "2296410",
    "end": "2301810"
  },
  {
    "text": "they seem to require negation to express seem to require broadly speaking non",
    "start": "2301810",
    "end": "2307540"
  },
  {
    "text": "monotonicity to express and they also are the things that I deploy in a system",
    "start": "2307540",
    "end": "2312730"
  },
  {
    "text": "when I'm concerned about non determinism in ordering so some weird thing",
    "start": "2312730",
    "end": "2319390"
  },
  {
    "text": "happening where negation is required to say these things and it's also the",
    "start": "2319390",
    "end": "2325390"
  },
  {
    "text": "reason why I might want them my adviser Joe Hellerstein characterized this sort",
    "start": "2325390",
    "end": "2331030"
  },
  {
    "start": "2327000",
    "end": "2357000"
  },
  {
    "text": "of dualism in this way he said you know if you if you want to write a protocol that waits typically you do it by",
    "start": "2331030",
    "end": "2336280"
  },
  {
    "text": "counting you count votes or something like that thank you five minutes but if you want",
    "start": "2336280",
    "end": "2341950"
  },
  {
    "text": "to count something you have to wait until the thing you're counting has stopped changing so you need a barrier so in sometimes there's this weird",
    "start": "2341950",
    "end": "2347859"
  },
  {
    "text": "correspondence between waiting and counting you need to count to wait you need to wait to count not five but ten",
    "start": "2347859",
    "end": "2354460"
  },
  {
    "text": "okay great another way of saying that is like there's something about not right",
    "start": "2354460",
    "end": "2363550"
  },
  {
    "start": "2357000",
    "end": "2379000"
  },
  {
    "text": "we need not to write a protocol that expresses synchronization and if our",
    "start": "2363550",
    "end": "2370960"
  },
  {
    "text": "program has not in it it might require synchronization as we saw in the case of",
    "start": "2370960",
    "end": "2378280"
  },
  {
    "text": "data log which means there's another fragment that I should probably explore that I somehow neglected to explore",
    "start": "2378280",
    "end": "2383650"
  },
  {
    "start": "2379000",
    "end": "2413000"
  },
  {
    "text": "before which is the negation free fragment of Daedalus okay I can talk",
    "start": "2383650",
    "end": "2390550"
  },
  {
    "text": "about state evolving over time I can combine data in a variety of interesting ways including performing looping I can",
    "start": "2390550",
    "end": "2397660"
  },
  {
    "text": "be honest about non determinacy and message delivery order and non determinacy and what",
    "start": "2397660",
    "end": "2403599"
  },
  {
    "text": "I can expect to be up at one time or another and yet it yields a language which produces a deterministic outcome",
    "start": "2403599",
    "end": "2409839"
  },
  {
    "text": "for all message delivery orders that's pretty that's pretty cool and I like to",
    "start": "2409839",
    "end": "2415569"
  },
  {
    "text": "imagine that somebody much smarter than me one day well we'll draw a chart that looks like a mermans chart that is trying to explore the relationship not",
    "start": "2415569",
    "end": "2422019"
  },
  {
    "text": "between fragments of logic language and complexity classes but between fragments of logic languages and fundamental",
    "start": "2422019",
    "end": "2429999"
  },
  {
    "text": "requirements for synchronization right we can imagine that there are programs that we can write which require no",
    "start": "2429999",
    "end": "2436930"
  },
  {
    "text": "synchronization whatsoever and we can imagine that there are programs that we can write that are somewhere in this region up here that don't require huge",
    "start": "2436930",
    "end": "2442869"
  },
  {
    "text": "synchronization that we could find an appropriate synchronization regime for",
    "start": "2442869",
    "end": "2447989"
  },
  {
    "text": "okay by way of closing so this is weird",
    "start": "2447989",
    "end": "2454779"
  },
  {
    "start": "2454000",
    "end": "2473000"
  },
  {
    "text": "right what is all this stuff about what do all these things have in common what is a lasso have in common with a lens",
    "start": "2454779",
    "end": "2461769"
  },
  {
    "text": "with a compass with a magnet one thing that they have in common is that none of them like are the thing right none of",
    "start": "2461769",
    "end": "2468969"
  },
  {
    "text": "them are the artifact they're all tools that mediate between an object of study",
    "start": "2468969",
    "end": "2474999"
  },
  {
    "start": "2473000",
    "end": "2483000"
  },
  {
    "text": "and a subject of study right whether they're framing things or shrink-wrapping things it has to do with",
    "start": "2474999",
    "end": "2482440"
  },
  {
    "text": "like intimacy between a domain that we care about and a poor person who like",
    "start": "2482440",
    "end": "2488289"
  },
  {
    "start": "2483000",
    "end": "2526000"
  },
  {
    "text": "really cares about the domain so I think what I took away from this experience of",
    "start": "2488289",
    "end": "2493390"
  },
  {
    "text": "working with Daedalus is that there's one there's really only one good reason to design a language has nothing to do",
    "start": "2493390",
    "end": "2500049"
  },
  {
    "text": "with external need it has nothing to do with expectations of impact it certainly has nothing to do with the look and feel",
    "start": "2500049",
    "end": "2507039"
  },
  {
    "text": "of the language itself it has everything to do with deciding that you want to understand a domain so badly and because",
    "start": "2507039",
    "end": "2514630"
  },
  {
    "text": "you've tried everything else that you want to get like skin to skin with it and there's no way to get closer to a",
    "start": "2514630",
    "end": "2520029"
  },
  {
    "text": "domain to fit it so closely than to design a language around it okay so I",
    "start": "2520029",
    "end": "2526299"
  },
  {
    "start": "2526000",
    "end": "2533000"
  },
  {
    "text": "hope I have convinced you that it's not about the look all right it's about the",
    "start": "2526299",
    "end": "2531609"
  },
  {
    "text": "fit that we shouldn't seek an external need to fill when we engage in language",
    "start": "2531609",
    "end": "2537920"
  },
  {
    "start": "2533000",
    "end": "2545000"
  },
  {
    "text": "design if we engage in language design we're doing it because to fill fulfill a really serious need of our own and the",
    "start": "2537920",
    "end": "2546140"
  },
  {
    "start": "2545000",
    "end": "2636000"
  },
  {
    "text": "impact well I don't know where to where to do this because I think there's a lot of different ways to measure impact I",
    "start": "2546140",
    "end": "2552579"
  },
  {
    "text": "will admit that after about let's see how long is it it's been almost 10 years since I designed Daedalus how many users",
    "start": "2552579",
    "end": "2559280"
  },
  {
    "text": "do you think it has three are you one of them so be sure because I only know of",
    "start": "2559280",
    "end": "2566869"
  },
  {
    "text": "the one so yeah it only has one user so",
    "start": "2566869",
    "end": "2572089"
  },
  {
    "text": "it's a failure right no I don't think so I think it was the biggest success of my life I think that like Daedalus is my",
    "start": "2572089",
    "end": "2578359"
  },
  {
    "text": "boy Daedalus is this thing that I use to frame my understanding of distributed",
    "start": "2578359",
    "end": "2583609"
  },
  {
    "text": "systems problems in fact in meetings it's often the case that somebody's explaining something I'm saying wait explain it again I don't get it wait explain it okay hold on let's do it in",
    "start": "2583609",
    "end": "2590060"
  },
  {
    "text": "Daedalus on the whiteboard okay I see what's going on there Daedalus is how I understand distributed systems now it's",
    "start": "2590060",
    "end": "2597109"
  },
  {
    "text": "my internal language I dream in it and pretty much all the good research that I've done since then has been built on",
    "start": "2597109",
    "end": "2603410"
  },
  {
    "text": "it sure nobody nobody read this paper I couldn't get it except to do a good workshop nobody read the paper that's",
    "start": "2603410",
    "end": "2609800"
  },
  {
    "text": "not true I read it a hundred times and and I used it as the basis for linear",
    "start": "2609800",
    "end": "2616040"
  },
  {
    "text": "turbine fault injection which is the main research project of my lab I've used it in applications like protocol repair consistency analysis yeah a",
    "start": "2616040",
    "end": "2626150"
  },
  {
    "text": "variety kinds of distributed debugging it frames the way that I think about the world and it's my greatest success poor",
    "start": "2626150",
    "end": "2634280"
  },
  {
    "text": "lucky me can anybody guess what the lie was yeah so I was talking about this",
    "start": "2634280",
    "end": "2642349"
  },
  {
    "start": "2636000",
    "end": "2667000"
  },
  {
    "text": "talk to a PL researcher friend of mine and she's like it sounds like all these",
    "start": "2642349",
    "end": "2648079"
  },
  {
    "text": "surprising things that you learned a aren't surprising and and and B were",
    "start": "2648079",
    "end": "2653810"
  },
  {
    "text": "because you weren't doing language design you were doing Thiele research so in some sense that was a lie I am a",
    "start": "2653810",
    "end": "2659990"
  },
  {
    "text": "peel researcher and so can you Thanks [Applause]",
    "start": "2659990",
    "end": "2669150"
  }
]