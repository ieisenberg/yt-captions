[
  {
    "start": "0",
    "end": "33000"
  },
  {
    "text": "so everyone uses apps on their machines that don't feel quite quite right maybe",
    "start": "3909",
    "end": "10000"
  },
  {
    "text": "the mouse works slightly differently or menus just don't look the same or maybe you can't really articulate what's wrong",
    "start": "10000",
    "end": "16990"
  },
  {
    "text": "with the app it just feels off there are a million tiny things that can make an app feel of regardless of the framework",
    "start": "16990",
    "end": "23859"
  },
  {
    "text": "it's built in but if you know what to look for you can make your app feel great on all platforms so before I get",
    "start": "23859",
    "end": "31089"
  },
  {
    "text": "started I want to get a quick view of the room who considers themselves here to be a web developer primarily okay",
    "start": "31089",
    "end": "40300"
  },
  {
    "start": "33000",
    "end": "60000"
  },
  {
    "text": "fair share and who here has ever built desktop software whether native or with",
    "start": "40300",
    "end": "47980"
  },
  {
    "text": "a cross-platform framework awesome and how about electron who we are has",
    "start": "47980",
    "end": "53800"
  },
  {
    "text": "used electron before okay nice thanks everyone so before we get started I want to spend",
    "start": "53800",
    "end": "62890"
  },
  {
    "start": "60000",
    "end": "176000"
  },
  {
    "text": "a few minutes getting everyone up to speed with what electron is and what it does so electron is a framework to",
    "start": "62890",
    "end": "72009"
  },
  {
    "text": "create cross-platform apps using web technologies it came out of github where",
    "start": "72009",
    "end": "77350"
  },
  {
    "text": "it was developed for their code editor atom electron combines chromium nodes",
    "start": "77350",
    "end": "83139"
  },
  {
    "text": "and a set of operating system specific API so in essence they combine the power",
    "start": "83139",
    "end": "88869"
  },
  {
    "text": "and the freedom of the developments that we can do on the web with the right API",
    "start": "88869",
    "end": "95380"
  },
  {
    "text": "is to interact with the operating system with the file system with notifications and things like that",
    "start": "95380",
    "end": "102340"
  },
  {
    "text": "now what electron does is not new per se we've been doing web technology-based",
    "start": "102340",
    "end": "109350"
  },
  {
    "text": "desktop software since well around 2008 using things like Adobe AIR but the",
    "start": "109350",
    "end": "119319"
  },
  {
    "text": "reason I think electron has seen such widespread adoption in the past few years is that it gets a lot of the stuff",
    "start": "119319",
    "end": "125200"
  },
  {
    "text": "right building and packaging apps for electron is straightforward it's easy to",
    "start": "125200",
    "end": "131650"
  },
  {
    "text": "do you can even do it cross-platform and the chosen abstractions are",
    "start": "131650",
    "end": "137170"
  },
  {
    "text": "make it easy to port web applications over to the desktop so whereas previous",
    "start": "137170",
    "end": "142719"
  },
  {
    "text": "iterations of frameworks using web technologies at their own weird version",
    "start": "142719",
    "end": "148390"
  },
  {
    "text": "of WebKit or some other rendering engine with electron you know the exact version",
    "start": "148390",
    "end": "153430"
  },
  {
    "text": "of chromium you're going to get so you get a modern platform to work with and it's not a moving target either the",
    "start": "153430",
    "end": "161079"
  },
  {
    "text": "version you ship with it's the version you use now the nice thing is that the",
    "start": "161079",
    "end": "166840"
  },
  {
    "text": "skillset you already have for developing for the web you can apply that directly",
    "start": "166840",
    "end": "172750"
  },
  {
    "text": "into creating electron apps now what does that look like here's an example of the code you need",
    "start": "172750",
    "end": "179439"
  },
  {
    "start": "176000",
    "end": "239000"
  },
  {
    "text": "to write to get the cue cone scheduled up on your desktop as an app as you can",
    "start": "179439",
    "end": "186340"
  },
  {
    "text": "see it's not that many lines of code and I'll quickly walk through basically what",
    "start": "186340",
    "end": "191980"
  },
  {
    "text": "it does so we begin with importing two api's from electron the app API which is",
    "start": "191980",
    "end": "198700"
  },
  {
    "text": "basically the main process of your application and the browser window API which we use to create Windows when the",
    "start": "198700",
    "end": "210250"
  },
  {
    "text": "app emits the ready event which is when everything is loaded and is in memory we",
    "start": "210250",
    "end": "215560"
  },
  {
    "text": "can start creating Windows we do that with the browser window API and we can",
    "start": "215560",
    "end": "220810"
  },
  {
    "text": "give it a few properties right now I'm just giving it away the height and then we can load a new URL and basically",
    "start": "220810",
    "end": "228909"
  },
  {
    "text": "that's all we need to display a web page as an app on your desktop you can compile this and run it on all three",
    "start": "228909",
    "end": "235389"
  },
  {
    "text": "platforms now back to this idea of",
    "start": "235389",
    "end": "240909"
  },
  {
    "start": "239000",
    "end": "296000"
  },
  {
    "text": "cross-platform applications we all know that different operating systems have",
    "start": "240909",
    "end": "246159"
  },
  {
    "text": "pretty different interfaces and pretty different defaults so the good and the",
    "start": "246159",
    "end": "251949"
  },
  {
    "text": "bad news is is that the devil is in the details when it comes to this this is",
    "start": "251949",
    "end": "257709"
  },
  {
    "text": "good news because it means that if you want to get it right you don't need to build three separate apps using three",
    "start": "257709",
    "end": "263740"
  },
  {
    "text": "separate api's and build everything in native widgets for each platform specifically",
    "start": "263740",
    "end": "270039"
  },
  {
    "text": "you can use your own style and you can use your own branding in your app as long as you get some of the basics right",
    "start": "270039",
    "end": "276309"
  },
  {
    "text": "and I think that is because web apps and mobile apps have been around for a while",
    "start": "276309",
    "end": "282099"
  },
  {
    "text": "now because of web apps and mobile devices users have grown more tolerant and welcoming to different types of",
    "start": "282099",
    "end": "288909"
  },
  {
    "text": "interfaces and we as desktop developers now get the benefits of that and to",
    "start": "288909",
    "end": "294430"
  },
  {
    "text": "illustrate that here are two email clients there are about thirteen years apart they're both built using web",
    "start": "294430",
    "end": "301330"
  },
  {
    "start": "296000",
    "end": "358000"
  },
  {
    "text": "technologies on the left is obviously Gmail and on the right is super-human",
    "start": "301330",
    "end": "307270"
  },
  {
    "text": "super-human is an email client that runs in electron now if we look at Gmail",
    "start": "307270",
    "end": "313949"
  },
  {
    "text": "imagine if Gmail was launched as a Mac app looking like this it would have been",
    "start": "313949",
    "end": "321240"
  },
  {
    "text": "disregarded in an instance people would have gone back to mil and outlook and nobody would know Gmail but nowadays an",
    "start": "321240",
    "end": "329709"
  },
  {
    "text": "app like super super human can launch using the same technologies and like the",
    "start": "329709",
    "end": "336189"
  },
  {
    "text": "same set of principles and it works people accept it it has a fully custom",
    "start": "336189",
    "end": "342279"
  },
  {
    "text": "UI not using native widgets but people know how to work with it because of web",
    "start": "342279",
    "end": "348129"
  },
  {
    "text": "apps and mobile apps having done so much of the heavy lifting for us but you do",
    "start": "348129",
    "end": "355959"
  },
  {
    "text": "need to pay attention to the details and this is especially interesting for electron apps because they tend to have",
    "start": "355959",
    "end": "363339"
  },
  {
    "start": "358000",
    "end": "425000"
  },
  {
    "text": "a much more custom UI than apps built with other frameworks using native widgets and strangely enough the fully",
    "start": "363339",
    "end": "370659"
  },
  {
    "text": "custom UI that an app like slack has for example is actually a benefit by",
    "start": "370659",
    "end": "376809"
  },
  {
    "text": "creating a consistent interface for slack across different platforms it becomes easier to use for users because",
    "start": "376809",
    "end": "382779"
  },
  {
    "text": "they can use the skill set and the knowledge they have of slack on one platform and apply it to other platforms",
    "start": "382779",
    "end": "390430"
  },
  {
    "text": "where they also use the same application for each platform however it will need",
    "start": "390430",
    "end": "396939"
  },
  {
    "text": "to take over some of the customs that that particular operating system uses",
    "start": "396939",
    "end": "402120"
  },
  {
    "text": "for example how it interacts with the file system or how it shows menus in this talk I'll",
    "start": "402120",
    "end": "412810"
  },
  {
    "text": "walk you through eight of these design and implementation details that I think",
    "start": "412810",
    "end": "418449"
  },
  {
    "text": "matter the most I'll tell you how to think about them and how to solve them through codes and design but first off a",
    "start": "418449",
    "end": "427240"
  },
  {
    "start": "425000",
    "end": "443000"
  },
  {
    "text": "little about me my name is Killian Falco and for the past 20 years I've developed",
    "start": "427240",
    "end": "433270"
  },
  {
    "text": "websites web applications and as applications I'm also part of the",
    "start": "433270",
    "end": "438370"
  },
  {
    "text": "electron governance team which oversees the development of the electron framework last year I started a new",
    "start": "438370",
    "end": "445870"
  },
  {
    "text": "company with the goal of making software that improves the lives of developers and designers the major two products",
    "start": "445870",
    "end": "453460"
  },
  {
    "text": "that I work on are poly paint which is a browser to help developers and designers create websites faster and better and",
    "start": "453460",
    "end": "461039"
  },
  {
    "text": "superposition which is an app that lets people kickstart their design system efforts for the past 10 or so years I've",
    "start": "461039",
    "end": "469419"
  },
  {
    "text": "used a number of different technologies to publish desktop applications I've used QT which is a cross-platform",
    "start": "469419",
    "end": "476199"
  },
  {
    "text": "framework I've used gtk which is also theoretically a cross-platform framework",
    "start": "476199",
    "end": "483210"
  },
  {
    "text": "but before I moved to electron these apps were just theoretically",
    "start": "483210",
    "end": "488530"
  },
  {
    "text": "cross-platform there was nothing much in the code itself of these few apps that prevented them from being run on Mac or",
    "start": "488530",
    "end": "496389"
  },
  {
    "text": "Windows but the process of building and packaging especially if I wasn't on the",
    "start": "496389",
    "end": "503050"
  },
  {
    "text": "platform to build and compile for was so opaque that I just couldn't do it so",
    "start": "503050",
    "end": "508840"
  },
  {
    "text": "they ended up being in this case Linux only apps and that changed when I",
    "start": "508840",
    "end": "514630"
  },
  {
    "text": "discovered electron suddenly it was really easy for me to distribute apps on",
    "start": "514630",
    "end": "519789"
  },
  {
    "text": "all platforms and I've created dozens of electron apps open source and for clients alike and with electron you can",
    "start": "519789",
    "end": "528420"
  },
  {
    "text": "even cross comp our apps without a problem so you can if you have a Mac you can very easily build the software for",
    "start": "528420",
    "end": "535750"
  },
  {
    "text": "Linux and Windows as well right on your machine so it's incredibly easy to create cross-platform",
    "start": "535750",
    "end": "542560"
  },
  {
    "text": "applications so if you do that there are",
    "start": "542560",
    "end": "548140"
  },
  {
    "text": "some stuff you need to be aware of here's eight ways to make your electronic feel great or no platforms so",
    "start": "548140",
    "end": "560070"
  },
  {
    "start": "560000",
    "end": "610000"
  },
  {
    "text": "we'll start with opening your app we all know what it's like to load a web page",
    "start": "560070",
    "end": "565810"
  },
  {
    "text": "you stare at white page for a while and then things start popping in and after some time things stop moving and",
    "start": "565810",
    "end": "573270"
  },
  {
    "text": "everything's loaded and you can use the web page we also all know how it how",
    "start": "573270",
    "end": "579970"
  },
  {
    "text": "loading an app works the I can bounce I seen your dog for a while and then the app pops interview fully formed because",
    "start": "579970",
    "end": "588040"
  },
  {
    "text": "electron essentially loads a web page it will default to the former it will show you a white window while the page loads",
    "start": "588040",
    "end": "594610"
  },
  {
    "text": "and then you can interact with it but to get an app that feels right we",
    "start": "594610",
    "end": "600130"
  },
  {
    "text": "need to do a letter we need to hide the window until the page is fully loaded",
    "start": "600130",
    "end": "605140"
  },
  {
    "text": "and only then show it so if we go back",
    "start": "605140",
    "end": "612520"
  },
  {
    "start": "610000",
    "end": "632000"
  },
  {
    "text": "to the QuickStart example what's happening here is that it renders the window we say main window is new browser",
    "start": "612520",
    "end": "618700"
  },
  {
    "text": "window it shows that we know immediately and then we tell it to load a URL so",
    "start": "618700",
    "end": "624190"
  },
  {
    "text": "it'll show the window and then start loading a URL and what we actually want to do is flip that around we want to",
    "start": "624190",
    "end": "633880"
  },
  {
    "start": "632000",
    "end": "815000"
  },
  {
    "text": "wait for showing the app until the page for showing has loaded and electron gives us an event to do that called",
    "start": "633880",
    "end": "641110"
  },
  {
    "text": "ready to show when we create a new window using the browser window API we",
    "start": "641110",
    "end": "647200"
  },
  {
    "text": "initially hide it with shows false then we wait for the ready to show event",
    "start": "647200",
    "end": "653940"
  },
  {
    "text": "which is emitted after the page has fully loaded and only then do we show",
    "start": "653940",
    "end": "660070"
  },
  {
    "text": "the window this guarantees your page is loaded before the window is shown so as",
    "start": "660070",
    "end": "665260"
  },
  {
    "text": "soon as the user sees your window it's an app there's no more loading there's no more shifting of UI",
    "start": "665260",
    "end": "671590"
  },
  {
    "text": "it's there but the other thing we want to do here is once we show the window we",
    "start": "671590",
    "end": "677380"
  },
  {
    "text": "want to focus it this is something that native windows also do when you show the",
    "start": "677380",
    "end": "683890"
  },
  {
    "text": "window you focus it so that users can immediately interact with it it's what they expect from native applications so",
    "start": "683890",
    "end": "691060"
  },
  {
    "text": "we can do that with the main window does focus function now the other thing we",
    "start": "691060",
    "end": "697930"
  },
  {
    "text": "want to do is set a specific background color for your window web pages show a",
    "start": "697930",
    "end": "706630"
  },
  {
    "text": "white loading page or show a white page while they load but your app maybe doesn't have a white background and if",
    "start": "706630",
    "end": "713890"
  },
  {
    "text": "it doesn't have a white background it's especially jarring if users end up looking at a white square or a white",
    "start": "713890",
    "end": "720910"
  },
  {
    "text": "rectangle while your app is busy loading so what you want to do is give your browser window a specific background",
    "start": "720910",
    "end": "727420"
  },
  {
    "text": "color and it will always default to that color instead so either when you're",
    "start": "727420",
    "end": "733420"
  },
  {
    "text": "loading a page or if you're in between loading different pages within your app",
    "start": "733420",
    "end": "739050"
  },
  {
    "text": "now if your app takes a while to load and you want to make it feel faster you",
    "start": "739050",
    "end": "745240"
  },
  {
    "text": "wouldn't want to wait for the app to have fully loaded before showing your window the user might be waiting a few",
    "start": "745240",
    "end": "751720"
  },
  {
    "text": "seconds and think nothing is happening so in that case you'll actually want to",
    "start": "751720",
    "end": "758620"
  },
  {
    "text": "show the window immediately provide it with a background color that works for your app this means that the user",
    "start": "758620",
    "end": "765880"
  },
  {
    "text": "already sees something and once you have that you can either animate in your UI",
    "start": "765880",
    "end": "773170"
  },
  {
    "text": "or show some skeleton screen and what this means is that well the time to",
    "start": "773170",
    "end": "780700"
  },
  {
    "text": "using your app might be the same or actually slightly longer because you you're putting animation in in front of",
    "start": "780700",
    "end": "787570"
  },
  {
    "text": "it it'll feel faster to your users so depending on what you want to do with",
    "start": "787570",
    "end": "793089"
  },
  {
    "text": "your app and depending on how long it takes to load your app you either want",
    "start": "793089",
    "end": "798279"
  },
  {
    "text": "to hide it until it's ready to show or show it immediately and have a nice",
    "start": "798279",
    "end": "804160"
  },
  {
    "text": "loading interface or skeleton screen that fits with your app so you don't want to show a white",
    "start": "804160",
    "end": "809619"
  },
  {
    "text": "rectangle so that's what you want to do when opening your app now closing your",
    "start": "809619",
    "end": "816490"
  },
  {
    "start": "815000",
    "end": "870000"
  },
  {
    "text": "app I commit admit we're skipping over some stuff in the middle but closing",
    "start": "816490",
    "end": "822189"
  },
  {
    "text": "your app or the way your app closes its just as important as the way your app opens and it's here where something",
    "start": "822189",
    "end": "830199"
  },
  {
    "text": "slightly different happens on Windows or Linux versus Mac and this is how the platform's work conceptually so on Mac",
    "start": "830199",
    "end": "838439"
  },
  {
    "text": "the app has windows so windows are parts",
    "start": "838439",
    "end": "845110"
  },
  {
    "text": "of the app but the app itself is something separate on Windows and on",
    "start": "845110",
    "end": "851410"
  },
  {
    "text": "Linux the app is the window so when you're on Windows and Linux and you",
    "start": "851410",
    "end": "856749"
  },
  {
    "text": "close the window you actually close the app or Mac the app will stay running in",
    "start": "856749",
    "end": "863050"
  },
  {
    "text": "your dock and users expect to be able to click on your dog icon and relaunch the",
    "start": "863050",
    "end": "868569"
  },
  {
    "text": "app so on Windows and Linux everything's fairly easy if the window if your window",
    "start": "868569",
    "end": "876850"
  },
  {
    "start": "870000",
    "end": "887000"
  },
  {
    "text": "is closed or if all your browser windows are closed the app will receive this event called",
    "start": "876850",
    "end": "881980"
  },
  {
    "text": "window all closed and you can safely quit the app and you're done we want to",
    "start": "881980",
    "end": "888610"
  },
  {
    "start": "887000",
    "end": "911000"
  },
  {
    "text": "prevent that from happening on Mac so what we do here is we check the platform",
    "start": "888610",
    "end": "894040"
  },
  {
    "text": "and if it's Darwin which is the platform name for Mac OS we prevent it from quitting but that that only brings us",
    "start": "894040",
    "end": "901089"
  },
  {
    "text": "halfway there because while the app hasn't quit clicking the dock icon",
    "start": "901089",
    "end": "906610"
  },
  {
    "text": "doesn't do anything so it's not that useful and what we want to do for that",
    "start": "906610",
    "end": "912639"
  },
  {
    "start": "911000",
    "end": "979000"
  },
  {
    "text": "is we really need to retool our example a bit what I did here is I extracted the",
    "start": "912639",
    "end": "921129"
  },
  {
    "text": "window creation code into its own function create window and I call that",
    "start": "921129",
    "end": "927249"
  },
  {
    "text": "when the app is ready so that's just the same as in the previous example however",
    "start": "927249",
    "end": "935269"
  },
  {
    "text": "when we closed the main window we clear its reference and then if a user clicks",
    "start": "935269",
    "end": "944209"
  },
  {
    "text": "on the dock icon in Mac the activates event gets it emits it there we do a",
    "start": "944209",
    "end": "953149"
  },
  {
    "text": "quick check if there already is a window if there is a main window and if there isn't we create it again and we can do",
    "start": "953149",
    "end": "959449"
  },
  {
    "text": "that because we extracted the create window codes into its own function so we can just call that function again so",
    "start": "959449",
    "end": "966410"
  },
  {
    "text": "with this with this code we now have an app that closes the way people expect it",
    "start": "966410",
    "end": "973639"
  },
  {
    "text": "to close on both Mac Windows and Linux",
    "start": "973639",
    "end": "978188"
  },
  {
    "text": "now on to remembering user preferences on the web of course we save user",
    "start": "978730",
    "end": "985100"
  },
  {
    "start": "979000",
    "end": "1017000"
  },
  {
    "text": "preferences users log in they can you know do stuff with their settings if you have a web application but all of them",
    "start": "985100",
    "end": "991730"
  },
  {
    "text": "tend to be app specific user preferences on desktop however we also have these",
    "start": "991730",
    "end": "997670"
  },
  {
    "text": "metal user preferences and they're not things you might think of if you come from a web development backgrounds but",
    "start": "997670",
    "end": "1004509"
  },
  {
    "text": "there are really important for not frustrating your user two important things in that regards are remembering",
    "start": "1004509",
    "end": "1011019"
  },
  {
    "text": "the window position or the window geometry and remembering lost opens folders so once you start user testing",
    "start": "1011019",
    "end": "1019660"
  },
  {
    "start": "1017000",
    "end": "1234000"
  },
  {
    "text": "your desktop app you'll find out you'll find out that nearly each user has their own preference for where their app is on",
    "start": "1019660",
    "end": "1026740"
  },
  {
    "text": "the screen and which dimensions it has if a user has to reset that every time",
    "start": "1026740",
    "end": "1032589"
  },
  {
    "text": "they open your app they're going to move on to a different app that does conform",
    "start": "1032589",
    "end": "1038260"
  },
  {
    "text": "to EDR their user preferences so keeping track of your window position is a really nice thing to do there are a",
    "start": "1038260",
    "end": "1045279"
  },
  {
    "text": "number of variables you want to keep track of there's window dimensions and window position which together is called window",
    "start": "1045279",
    "end": "1051549"
  },
  {
    "text": "geometry there's which monitor is being shown on and also if the app is",
    "start": "1051549",
    "end": "1057370"
  },
  {
    "text": "maximized or not and that last one is actually pretty tricky it's tricky",
    "start": "1057370",
    "end": "1063130"
  },
  {
    "text": "because maximized is a state that your app can be in and if you exit the maximized state",
    "start": "1063130",
    "end": "1071130"
  },
  {
    "text": "native apps will actually restore the browser window or the window to the",
    "start": "1071130",
    "end": "1076780"
  },
  {
    "text": "previously set user geometry so while you should save the fact that your app",
    "start": "1076780",
    "end": "1082420"
  },
  {
    "text": "is maximized when your app is maximized you shouldn't save the geometry for that",
    "start": "1082420",
    "end": "1088180"
  },
  {
    "text": "state because otherwise people will unmask um ice and nothing will change",
    "start": "1088180",
    "end": "1093220"
  },
  {
    "text": "because you've set the dimensions to be the size of the maximized window so you",
    "start": "1093220",
    "end": "1099940"
  },
  {
    "text": "can do that yourself in code it's not that hard so electron has events for the",
    "start": "1099940",
    "end": "1106630"
  },
  {
    "text": "resize and move events and you can get the window geometry with the main window",
    "start": "1106630",
    "end": "1111730"
  },
  {
    "text": "don't get bounced function to deal with the maximized state however there's two",
    "start": "1111730",
    "end": "1118600"
  },
  {
    "text": "things we want to do first we want to records if the maximized state or if the app is in a maximized state which we can",
    "start": "1118600",
    "end": "1126430"
  },
  {
    "text": "find out with the main window is maximized and then we only save the",
    "start": "1126430",
    "end": "1132160"
  },
  {
    "text": "window geometry if the app is not maximized now we want to store this and",
    "start": "1132160",
    "end": "1139240"
  },
  {
    "text": "you can store it just in a flat file if you want but you can also use a package called electron - settings for this",
    "start": "1139240",
    "end": "1145540"
  },
  {
    "text": "which is what I'm doing here it's a very simple API you have settings set and settings don't forget and then once you",
    "start": "1145540",
    "end": "1155080"
  },
  {
    "text": "do that every time a user moves or resizes their app window we store the",
    "start": "1155080",
    "end": "1161530"
  },
  {
    "text": "new geometry the new position what we don't want to do is restore the window",
    "start": "1161530",
    "end": "1167320"
  },
  {
    "text": "position or load so again we get the sent the window state from our settings",
    "start": "1167320",
    "end": "1174310"
  },
  {
    "text": "and we set it to the new browser window that we want to create of course",
    "start": "1174310",
    "end": "1181780"
  },
  {
    "text": "you don't always have window geometry for example when the user first launches",
    "start": "1181780",
    "end": "1188050"
  },
  {
    "text": "an app they've never moved the window before so you don't have that data so you need to make sure to provide",
    "start": "1188050",
    "end": "1193210"
  },
  {
    "text": "adequate fall backs and then there's a small gotcha you",
    "start": "1193210",
    "end": "1200200"
  },
  {
    "text": "and starts a window in its maximized position you can only maximize the",
    "start": "1200200",
    "end": "1205210"
  },
  {
    "text": "window that's already on the screen so what we want to do here is check if it",
    "start": "1205210",
    "end": "1210880"
  },
  {
    "text": "should be maximized only in they're ready to show event after we've shown the window which is what we do here now",
    "start": "1210880",
    "end": "1220779"
  },
  {
    "text": "as you can see this is not a whole bunch of code but there's an alternative you",
    "start": "1220779",
    "end": "1225970"
  },
  {
    "text": "can use in electron window states that will do most of the heavy lifting for you it's an NPM package you can use now the",
    "start": "1225970",
    "end": "1234820"
  },
  {
    "start": "1234000",
    "end": "1298000"
  },
  {
    "text": "other thing you want to keep track of if your app supports loading or saving files is you want to keep track of the",
    "start": "1234820",
    "end": "1241840"
  },
  {
    "text": "last use folder now I use a GUI diffing tool quite often and it's an app with",
    "start": "1241840",
    "end": "1248320"
  },
  {
    "text": "basically to open foul buttons and when I've navigated my filesystem in the",
    "start": "1248320",
    "end": "1254980"
  },
  {
    "text": "first button which is often like 10 levels deep because I'm a developer and you know my file system tends to be many",
    "start": "1254980",
    "end": "1261850"
  },
  {
    "text": "many folders I get to do it all over again in the second button because it",
    "start": "1261850",
    "end": "1267700"
  },
  {
    "text": "didn't remember where I lost was and it frustrates me to no end so the nice",
    "start": "1267700",
    "end": "1274510"
  },
  {
    "text": "thing here to do is similar to the window positioning let the user continue",
    "start": "1274510",
    "end": "1279700"
  },
  {
    "text": "where they left off if I navigate it to a folder to select something there's a high chance I want to use that folder",
    "start": "1279700",
    "end": "1286029"
  },
  {
    "text": "again the next time I do the same action like saving or opening a file so",
    "start": "1286029",
    "end": "1291549"
  },
  {
    "text": "navigating to that folder when opening a dialogue saves a lot of time for your user what you want to do as the",
    "start": "1291549",
    "end": "1299889"
  },
  {
    "start": "1298000",
    "end": "1377000"
  },
  {
    "text": "developer is on each successful interaction with the file system and here we use the electron show safe",
    "start": "1299889",
    "end": "1306429"
  },
  {
    "text": "dialogue API on each successful interaction we want to store the path",
    "start": "1306429",
    "end": "1312279"
  },
  {
    "text": "that the user ended up using and next time for the same interaction we start with that path that path has the highest",
    "start": "1312279",
    "end": "1320830"
  },
  {
    "text": "chance of being the correct path or at the very least it's better than just dumping them back into their home",
    "start": "1320830",
    "end": "1326740"
  },
  {
    "text": "directory now I mentioned storing this path on successful interactions",
    "start": "1326740",
    "end": "1333850"
  },
  {
    "text": "you don't want to store the path if a user ended up canceling the interaction because obviously what they wanted to",
    "start": "1333850",
    "end": "1340210"
  },
  {
    "text": "find wasn't on that particular path so what we do here in the safe dialogue where people select a specific filename",
    "start": "1340210",
    "end": "1347620"
  },
  {
    "text": "in the callback function which starts here at file name we check if a file",
    "start": "1347620",
    "end": "1354040"
  },
  {
    "text": "name is being set and only then do we store the path of the file when we",
    "start": "1354040",
    "end": "1362020"
  },
  {
    "text": "create the window we can give it a default path which is the folder to show",
    "start": "1362020",
    "end": "1367150"
  },
  {
    "text": "when it initially opens and again here we use the electoral settings package to",
    "start": "1367150",
    "end": "1372280"
  },
  {
    "text": "do just that a couple of versions ago",
    "start": "1372280",
    "end": "1379750"
  },
  {
    "start": "1377000",
    "end": "1437000"
  },
  {
    "text": "electron did not ship with a default application menu and particularly on Mac",
    "start": "1379750",
    "end": "1385420"
  },
  {
    "text": "OS this gave some issues because on Mac OS if an application didn't have an",
    "start": "1385420",
    "end": "1390700"
  },
  {
    "text": "application menu with at least cut copy and paste those actions wouldn't be",
    "start": "1390700",
    "end": "1395710"
  },
  {
    "text": "available in your applications so you couldn't cut cut copy or paste text",
    "start": "1395710",
    "end": "1400720"
  },
  {
    "text": "guess who found that out after releasing a notetaking application this guy ouch",
    "start": "1400720",
    "end": "1407160"
  },
  {
    "text": "luckily nowadays electron will give you a default menu with those actions if you don't set one yourself",
    "start": "1407160",
    "end": "1413170"
  },
  {
    "text": "so they solve that issue but the default menu is pretty mac centric and to supply",
    "start": "1413170",
    "end": "1419860"
  },
  {
    "text": "menus that also makes sense for Windows and Linux where there's a file menu instead of an app name menu and the help",
    "start": "1419860",
    "end": "1427090"
  },
  {
    "text": "menu generally doesn't have things like search you'll right now have to",
    "start": "1427090",
    "end": "1432460"
  },
  {
    "text": "replicate the entire menu structure for all three different platforms to solve",
    "start": "1432460",
    "end": "1438790"
  },
  {
    "start": "1437000",
    "end": "1504000"
  },
  {
    "text": "this I made an NPM package called electron create menu and it created it",
    "start": "1438790",
    "end": "1444010"
  },
  {
    "text": "replaces the menu API that electron gives you and by default it will see it",
    "start": "1444010",
    "end": "1450250"
  },
  {
    "text": "will return a platform appropriate menu so this means that regardless of the",
    "start": "1450250",
    "end": "1456580"
  },
  {
    "text": "platform you're on or the platform your user is on it will give you a menu that fits with what they expect from it",
    "start": "1456580",
    "end": "1464760"
  },
  {
    "text": "additionally it gives you a few extra tools in the menu creation that makes it",
    "start": "1465289",
    "end": "1470610"
  },
  {
    "text": "easier for you to create a menu that works on all three platforms so where as",
    "start": "1470610",
    "end": "1476190"
  },
  {
    "text": "I previously mentioned that if you wanted to create a menu for all three",
    "start": "1476190",
    "end": "1481440"
  },
  {
    "text": "platforms you would need to create three menu structures for it one for each platform if you use the electron create",
    "start": "1481440",
    "end": "1488279"
  },
  {
    "text": "menu we add a few options to these menu templates that make it easy for you to",
    "start": "1488279",
    "end": "1493950"
  },
  {
    "text": "tell electron when to show a particular item or on which platform to show a",
    "start": "1493950",
    "end": "1500010"
  },
  {
    "text": "particular item in your menu that way",
    "start": "1500010",
    "end": "1505049"
  },
  {
    "text": "you can have a single menu structure and still provides the adequate menus for",
    "start": "1505049",
    "end": "1512279"
  },
  {
    "text": "each platform so here's a little snippet of what that would look like here's a",
    "start": "1512279",
    "end": "1517350"
  },
  {
    "text": "menu template and I'm showing like the first menu item on Mac it's the name of",
    "start": "1517350",
    "end": "1523890"
  },
  {
    "text": "the app so we do apt-get name and all windows it's file so we do a label as",
    "start": "1523890",
    "end": "1531299"
  },
  {
    "text": "file now two options that I added here are show on and hide on and these take",
    "start": "1531299",
    "end": "1539100"
  },
  {
    "text": "an array of platform names so what we do here is the top object is only shown on",
    "start": "1539100",
    "end": "1547350"
  },
  {
    "text": "Darwin so on Mac and the bottom object is always hidden on Mac and this means",
    "start": "1547350",
    "end": "1555419"
  },
  {
    "text": "that Mac users get the top menu which makes sense for them and it has all",
    "start": "1555419",
    "end": "1561240"
  },
  {
    "text": "these options that Mac users expect from your app and the bottom one is sent to",
    "start": "1561240",
    "end": "1566909"
  },
  {
    "text": "Windows and Linux users who Bertie only need to quit your app on to number five",
    "start": "1566909",
    "end": "1575640"
  },
  {
    "start": "1573000",
    "end": "1587000"
  },
  {
    "text": "text highlighting if you press command a or control a on the web this is what it",
    "start": "1575640",
    "end": "1581340"
  },
  {
    "text": "looks like the entire page is selected or in the entire page is highlighted",
    "start": "1581340",
    "end": "1586520"
  },
  {
    "text": "however if you do the same in a native app like say pages you'll notice that",
    "start": "1586520",
    "end": "1592049"
  },
  {
    "start": "1587000",
    "end": "1605000"
  },
  {
    "text": "the text selection and the text highlighting is only contains to the actual writable area that's currently",
    "start": "1592049",
    "end": "1597840"
  },
  {
    "text": "focused so what we want to do is more like this and less like the previous slide and we",
    "start": "1597840",
    "end": "1606030"
  },
  {
    "start": "1605000",
    "end": "1651000"
  },
  {
    "text": "can do that using CSS there's a CSS option called user selects and if we set",
    "start": "1606030",
    "end": "1611490"
  },
  {
    "text": "it to none the browser will prevent the user from selecting your text and this",
    "start": "1611490",
    "end": "1618059"
  },
  {
    "text": "is nice because even if a user then clicks and drags in your app they won't end up with a bunch of highlights at UI",
    "start": "1618059",
    "end": "1624570"
  },
  {
    "text": "items now you might think that if you add this then your entire app becomes",
    "start": "1624570",
    "end": "1631400"
  },
  {
    "text": "you know unselectable unhighlight scible but chromium already takes care of us it",
    "start": "1631400",
    "end": "1637890"
  },
  {
    "text": "takes care of making sure that this is unset in text areas and input fields so",
    "start": "1637890",
    "end": "1644160"
  },
  {
    "text": "any text that the user can type they can also select and highlight not every",
    "start": "1644160",
    "end": "1653100"
  },
  {
    "start": "1651000",
    "end": "1705000"
  },
  {
    "text": "application needs a context menu it's the menu that shows when you right-click somewhere but it is something that",
    "start": "1653100",
    "end": "1659640"
  },
  {
    "text": "people expect now because context menus are context dependent electron doesn't",
    "start": "1659640",
    "end": "1667740"
  },
  {
    "text": "give you by default but people do expect them to be there especially in things like text areas where now once you",
    "start": "1667740",
    "end": "1673890"
  },
  {
    "text": "right-click to cut or copy or paste text now electron gives us an event to deal",
    "start": "1673890",
    "end": "1682440"
  },
  {
    "text": "with this it's the context menu event and you can respond to that by creating",
    "start": "1682440",
    "end": "1688320"
  },
  {
    "text": "a menu that fits whatever context the user right clicked in so this is what",
    "start": "1688320",
    "end": "1696630"
  },
  {
    "text": "you would do on context menu you can create a menu template and I show that as a pop-up for text what you want to do",
    "start": "1696630",
    "end": "1707429"
  },
  {
    "start": "1705000",
    "end": "1778000"
  },
  {
    "text": "is it's quite a big list but the nice thing is in context menu you can receive",
    "start": "1707429",
    "end": "1714210"
  },
  {
    "text": "properties props and they will tell you what you right clicked on so if you",
    "start": "1714210",
    "end": "1719640"
  },
  {
    "text": "right-click on something that is editable like a text area or an input you can provide the adequate options for",
    "start": "1719640",
    "end": "1727740"
  },
  {
    "text": "text like undo redo cut copy and paste",
    "start": "1727740",
    "end": "1732800"
  },
  {
    "text": "but if say you're right clicking on a link electron will tell you that it's a",
    "start": "1732800",
    "end": "1739920"
  },
  {
    "text": "link and that it has a URL so if you right click on a link you can provide options like open the link or copy the",
    "start": "1739920",
    "end": "1747570"
  },
  {
    "text": "link location you get quite a bit of information on the right click so",
    "start": "1747570",
    "end": "1752610"
  },
  {
    "text": "alongside knowing if you right click if what you right click is editable or if it's a link you can also get the link",
    "start": "1752610",
    "end": "1759120"
  },
  {
    "text": "text get the selected text and you can even attacks if you're clicking an image or a video and interact with that so",
    "start": "1759120",
    "end": "1767490"
  },
  {
    "text": "spend some time thinking about what are the interactions in my app that could be",
    "start": "1767490",
    "end": "1774320"
  },
  {
    "text": "that could use a context menu now you could also choose not to do that in that",
    "start": "1774320",
    "end": "1781140"
  },
  {
    "start": "1778000",
    "end": "1794000"
  },
  {
    "text": "case at least adds this NPM package called electron context menu which will",
    "start": "1781140",
    "end": "1786660"
  },
  {
    "text": "add some basic context menus for your app for text images and links onto",
    "start": "1786660",
    "end": "1795690"
  },
  {
    "start": "1794000",
    "end": "1829000"
  },
  {
    "text": "keyword shortcuts now that we're seeing more cross-platform apps you can actually see keyboard shortcuts converts",
    "start": "1795690",
    "end": "1802920"
  },
  {
    "text": "a little we are previously on Windows we would do all T to select the location",
    "start": "1802920",
    "end": "1808760"
  },
  {
    "text": "now it's all ctrl L just like on Mac its command L but there remains one big",
    "start": "1808760",
    "end": "1816120"
  },
  {
    "text": "difference and that is keyboard shortcuts on Mac tend to use commands",
    "start": "1816120",
    "end": "1821480"
  },
  {
    "text": "keyboard shortcuts on Windows and Linux tend to use control shortcuts in",
    "start": "1821480",
    "end": "1830340"
  },
  {
    "start": "1829000",
    "end": "1992000"
  },
  {
    "text": "electron are created as global shortcuts and this means they work everywhere regardless of whether your app is",
    "start": "1830340",
    "end": "1838230"
  },
  {
    "text": "focused or not and more on that in a second and the keyboard shortcuts that",
    "start": "1838230",
    "end": "1843570"
  },
  {
    "text": "you fill in here are written out as a string so they're pretty readable you can just right backspace or Alt + R and",
    "start": "1843570",
    "end": "1851060"
  },
  {
    "text": "those will work now these are global shortcuts so they even work if your app",
    "start": "1851060",
    "end": "1858120"
  },
  {
    "text": "isn't focused and usually that's not what you want usually you just want your",
    "start": "1858120",
    "end": "1863280"
  },
  {
    "text": "shortcuts to work when your app is focused when people interacting with your app there are two",
    "start": "1863280",
    "end": "1870149"
  },
  {
    "text": "options for this if you want what we call local shortcuts or shortcuts that",
    "start": "1870149",
    "end": "1875309"
  },
  {
    "text": "only work in your app the first one is use a JavaScript library like mousetrap",
    "start": "1875309",
    "end": "1880559"
  },
  {
    "text": "in your browser window so this is a fully JavaScript based solution there",
    "start": "1880559",
    "end": "1887519"
  },
  {
    "text": "are some benefits to using global shortcuts over the JavaScript solution",
    "start": "1887519",
    "end": "1892610"
  },
  {
    "text": "primarily that global shortcuts support more keys so because a browser has some",
    "start": "1892610",
    "end": "1898200"
  },
  {
    "text": "security concerns it won't actually let you detect if a user uses function keys for example so if you want to have a",
    "start": "1898200",
    "end": "1905700"
  },
  {
    "text": "help function under the f1 key then you'll want to use global shortcuts to offer that now if you want to support",
    "start": "1905700",
    "end": "1914730"
  },
  {
    "text": "more Keys like this but you want to make them behave like local shortcuts then there's an electron package called",
    "start": "1914730",
    "end": "1921090"
  },
  {
    "text": "electron local shortcuts which will do this for you using global shortcuts and the trick it does here is whenever your",
    "start": "1921090",
    "end": "1928830"
  },
  {
    "text": "app is focused it will create the shortcuts whenever your app is out of",
    "start": "1928830",
    "end": "1933990"
  },
  {
    "text": "focus it will remove the shortcuts again and release it back to the operating system now for this the shortcuts",
    "start": "1933990",
    "end": "1942840"
  },
  {
    "text": "themselves say you wanted to create safe shortcuts and you you're already",
    "start": "1942840",
    "end": "1949200"
  },
  {
    "text": "convinced that you you know you need to offer something different for Mac and for Windows because they you know to use",
    "start": "1949200",
    "end": "1955289"
  },
  {
    "text": "commands instead of control which you do it like this where you basically",
    "start": "1955289",
    "end": "1961470"
  },
  {
    "text": "register to shortcuts and have some code duplication I mean you could but",
    "start": "1961470",
    "end": "1968010"
  },
  {
    "text": "electron actually gives us a very nice way of doing this you can type commands",
    "start": "1968010",
    "end": "1974220"
  },
  {
    "text": "or control for your shortcut and electron will then decide which of these",
    "start": "1974220",
    "end": "1979769"
  },
  {
    "text": "two to use depending on the platform that you're running the app on so this will save quite a lot of if statements",
    "start": "1979769",
    "end": "1988580"
  },
  {
    "start": "1992000",
    "end": "2017000"
  },
  {
    "text": "now lastly number eight using system phones to make an app integrate with the",
    "start": "1992820",
    "end": "1998790"
  },
  {
    "text": "system using the same font is a really powerful way to make it feel cohesive with the rest of your operating system",
    "start": "1998790",
    "end": "2006280"
  },
  {
    "text": "unfortunately the browser font isn't always the same font as the rest of the",
    "start": "2006280",
    "end": "2011780"
  },
  {
    "text": "operating system especially when that last one is user customizable so what",
    "start": "2011780",
    "end": "2017540"
  },
  {
    "start": "2017000",
    "end": "2076000"
  },
  {
    "text": "you could do is create a huge phone stack like this so there are San Francisco for Mac segue",
    "start": "2017540",
    "end": "2023810"
  },
  {
    "text": "UI for Windows and more of these but this stack even though it's already very",
    "start": "2023810",
    "end": "2029540"
  },
  {
    "text": "long isn't actually complete it doesn't include the usual Linux system folds",
    "start": "2029540",
    "end": "2035210"
  },
  {
    "text": "like Ubuntu stands for Ubuntu oxygen for KDE or - a few stands for other Linux",
    "start": "2035210",
    "end": "2041390"
  },
  {
    "text": "distributions so that's not cool but you",
    "start": "2041390",
    "end": "2046700"
  },
  {
    "text": "know maybe just adding more and more and more phones to this list also isn't the best solution because say you add you go",
    "start": "2046700",
    "end": "2057379"
  },
  {
    "text": "to some somewhere but a Windows user has decided that they actually quite like",
    "start": "2057380",
    "end": "2062450"
  },
  {
    "text": "you go into something they've installed the phones well too bad now you're using Ubuntu Suns in your app on Windows so it",
    "start": "2062450",
    "end": "2070700"
  },
  {
    "text": "doesn't feel native either luckily there's a simpler way to do this you can",
    "start": "2070700",
    "end": "2076040"
  },
  {
    "start": "2076000",
    "end": "2106000"
  },
  {
    "text": "use font family caption now caption is a special keyword value in CSS that maps",
    "start": "2076040",
    "end": "2082760"
  },
  {
    "text": "to what the operating system uses for captions in native widgets and that",
    "start": "2082760",
    "end": "2089690"
  },
  {
    "text": "happens to be the default phones that is being used everywhere so if you do",
    "start": "2089690",
    "end": "2094760"
  },
  {
    "text": "font-family caption you'll get Ubuntu on Ubuntu segue UI on Windows a San",
    "start": "2094760",
    "end": "2100070"
  },
  {
    "text": "Francisco on Mac so it will always fit without you needing to be explicit about it now if you want to use your own fonts",
    "start": "2100070",
    "end": "2108200"
  },
  {
    "start": "2106000",
    "end": "2145000"
  },
  {
    "text": "you can also do that of course and it can have a great effect for example",
    "start": "2108200",
    "end": "2114530"
  },
  {
    "text": "slack uses the font later on all their platforms and then that makes it feel",
    "start": "2114530",
    "end": "2119660"
  },
  {
    "text": "more cohesive inside the app if you want to do that it's best to ship the phones",
    "start": "2119660",
    "end": "2125450"
  },
  {
    "text": "where your app rather than using something like Google phones because you don't want to depend on network connectivity",
    "start": "2125450",
    "end": "2131620"
  },
  {
    "text": "for your apps you look the way you want it to look and you can use either a wolf",
    "start": "2131620",
    "end": "2136960"
  },
  {
    "text": "or a TCF right in your in your election",
    "start": "2136960",
    "end": "2142540"
  },
  {
    "text": "map so that's my eight tips and I'll review them in a second but I can't give",
    "start": "2142540",
    "end": "2149590"
  },
  {
    "start": "2145000",
    "end": "2228000"
  },
  {
    "text": "a talk about electron without mentioning memory now personally I don't think this",
    "start": "2149590",
    "end": "2155500"
  },
  {
    "text": "is a huge problem sure your average film user is going to balk at using a hundred",
    "start": "2155500",
    "end": "2161020"
  },
  {
    "text": "megabytes to run an app but really it's not significantly higher than most other",
    "start": "2161020",
    "end": "2166570"
  },
  {
    "text": "GUI heavy apps the problem you can run into though is memory leaks and if you",
    "start": "2166570",
    "end": "2172900"
  },
  {
    "text": "come from the web you really only need to care about the worst of memory leaks because web pages tend to be relatively",
    "start": "2172900",
    "end": "2179560"
  },
  {
    "text": "short-lived this changes a little if you are working on an SP a but even SPS tend",
    "start": "2179560",
    "end": "2186940"
  },
  {
    "text": "to have full page refreshes every now and then apps are much longer lived and",
    "start": "2186940",
    "end": "2192130"
  },
  {
    "text": "because of that small memory leaks can also become issues so let's check out",
    "start": "2192130",
    "end": "2197830"
  },
  {
    "text": "some strategies in dealing with that but before I start I want to mention that",
    "start": "2197830",
    "end": "2203230"
  },
  {
    "text": "electron has excellent performance documentation at this link and it's focused mostly on making your apps start",
    "start": "2203230",
    "end": "2209770"
  },
  {
    "text": "fast and feel snappy by making sure that you're not loading unnecessary polyfills because there's a very modern chromium",
    "start": "2209770",
    "end": "2216520"
  },
  {
    "text": "that you use by loading code strategically and by bundling your code",
    "start": "2216520",
    "end": "2221970"
  },
  {
    "text": "it's an excellent resource and you definitely should check it out now for",
    "start": "2221970",
    "end": "2229390"
  },
  {
    "start": "2228000",
    "end": "2365000"
  },
  {
    "text": "memory leaks we get the benefit of running Chrome and using Chrome's developer tools in recent years the",
    "start": "2229390",
    "end": "2236710"
  },
  {
    "text": "chrome developer tools have added really good performance tooling and you can use that right in electron to suss out any",
    "start": "2236710",
    "end": "2242530"
  },
  {
    "text": "memory issues in your application so what you want to do is go to the performance tab in your developer tools",
    "start": "2242530",
    "end": "2249460"
  },
  {
    "text": "make sure that memories checked and start a recording by clicking the record",
    "start": "2249460",
    "end": "2255820"
  },
  {
    "text": "button at this point you use your app either as you normally use it you know just going through your",
    "start": "2255820",
    "end": "2262120"
  },
  {
    "text": "app or focusing on a specific functionality of your app that you want to test then after a while you can stop",
    "start": "2262120",
    "end": "2270670"
  },
  {
    "text": "the recording and you end up with something that looks like this if you if you've never seen this before it's a",
    "start": "2270670",
    "end": "2277270"
  },
  {
    "text": "little bit intimidating and it's really too much you go into all of this for",
    "start": "2277270",
    "end": "2283570"
  },
  {
    "text": "this presentation so I'll zoom in on a small part what we want to focus on is",
    "start": "2283570",
    "end": "2291250"
  },
  {
    "text": "the graph at the bottom here right now I've checked the jas heap which is your",
    "start": "2291250",
    "end": "2297310"
  },
  {
    "text": "memory usage and the listeners which are your JavaScript the number of your JavaScript listeners if both of these go",
    "start": "2297310",
    "end": "2304930"
  },
  {
    "text": "up and up and up and up and up then there's an issue there's a memory leak",
    "start": "2304930",
    "end": "2310120"
  },
  {
    "text": "and most memory leaks are you not claimed your listeners after you're done using them so this will tell you where",
    "start": "2310120",
    "end": "2318370"
  },
  {
    "text": "that is happening additionally in the charts on the top of this slide which is",
    "start": "2318370",
    "end": "2327520"
  },
  {
    "text": "called a flame graph and it looks really intimidating but it actually gives you",
    "start": "2327520",
    "end": "2333280"
  },
  {
    "text": "some really nice information on what your app is doing and what functions are",
    "start": "2333280",
    "end": "2338410"
  },
  {
    "text": "causing slowdowns so it will tell you which functions are slow because it will",
    "start": "2338410",
    "end": "2343540"
  },
  {
    "text": "show the red triangles in the corner and then it will actually show you which function calls which function calls",
    "start": "2343540",
    "end": "2350290"
  },
  {
    "text": "which function that is taking such a long time so this is a really nice way",
    "start": "2350290",
    "end": "2355900"
  },
  {
    "text": "to pinpoint well what are the events that I should be looking at to improve",
    "start": "2355900",
    "end": "2361300"
  },
  {
    "text": "my my apps performance if we want to do",
    "start": "2361300",
    "end": "2366370"
  },
  {
    "text": "this for note we can also do that using the exact same methodology because we",
    "start": "2366370",
    "end": "2371830"
  },
  {
    "text": "can actually start electron with - - inspect and if we learn in a Chrome",
    "start": "2371830",
    "end": "2377260"
  },
  {
    "text": "browser go to Chrome inspect we can select the electron instance and we can",
    "start": "2377260",
    "end": "2383260"
  },
  {
    "text": "do the exact same performance testing for the node side of your electron",
    "start": "2383260",
    "end": "2389590"
  },
  {
    "text": "application so to conclude building a cross-platform",
    "start": "2389590",
    "end": "2397590"
  },
  {
    "start": "2393000",
    "end": "2534000"
  },
  {
    "text": "app that feels great everywhere doesn't require conforming to the platform UI",
    "start": "2397590",
    "end": "2404060"
  },
  {
    "text": "thanks to web apps and mobile devices people are more familiar with different interfaces but the devil is in the",
    "start": "2404060",
    "end": "2411480"
  },
  {
    "text": "details to make your app feel at home you need to take care of at least these things one you need to not launch your",
    "start": "2411480",
    "end": "2418950"
  },
  {
    "text": "app like a site you want to hide it until it's ready to show or you want to",
    "start": "2418950",
    "end": "2424200"
  },
  {
    "text": "use a fitting background color that matches with the style of your app - you",
    "start": "2424200",
    "end": "2430140"
  },
  {
    "text": "want to handle window closing like the OS on Mac you want to keep your app running and reopen it whenever a user",
    "start": "2430140",
    "end": "2437400"
  },
  {
    "text": "clicks your icon on Windows and Linux closing the last window should also",
    "start": "2437400",
    "end": "2442770"
  },
  {
    "text": "close the app number three remember user preferences make sure that if a user",
    "start": "2442770",
    "end": "2450960"
  },
  {
    "text": "reopens your application restore the window to their lost position and size and make sure to remember the lost use",
    "start": "2450960",
    "end": "2458940"
  },
  {
    "text": "folder if you provide saving or opening functionality in your app for make sure",
    "start": "2458940",
    "end": "2465390"
  },
  {
    "text": "to provide a menu that fits their operating system and the easiest way to",
    "start": "2465390",
    "end": "2470700"
  },
  {
    "text": "do that is use electron create menu number five prevent text highlighting",
    "start": "2470700",
    "end": "2479000"
  },
  {
    "text": "use this CSS to prevent users from accidentally dragging your app and having a bunch of your UI selected",
    "start": "2479150",
    "end": "2487970"
  },
  {
    "text": "number six provides context menus where they make sense so right-clicking on",
    "start": "2487970",
    "end": "2493110"
  },
  {
    "text": "text should have cut copy paste etc and use the contextual information you get",
    "start": "2493110",
    "end": "2498900"
  },
  {
    "text": "for a context menu to give extra options for things like images and links number",
    "start": "2498900",
    "end": "2505410"
  },
  {
    "text": "seven provides operating system specific keyboard shortcuts and the easiest way",
    "start": "2505410",
    "end": "2510480"
  },
  {
    "text": "to do that use commands or control and number eight use the system font with",
    "start": "2510480",
    "end": "2518820"
  },
  {
    "text": "font family caption you always get the phones that your operating system provide users by default",
    "start": "2518820",
    "end": "2525440"
  },
  {
    "text": "and lastly keep your memory leaks under control so these are the ingredients to make your app feel at home on all",
    "start": "2525440",
    "end": "2531800"
  },
  {
    "text": "platforms that was my talk check out electron GS dot org for more information",
    "start": "2531800",
    "end": "2537109"
  },
  {
    "start": "2534000",
    "end": "2684000"
  },
  {
    "text": "on electron my name is gillian falco and you can fight me at these links and make sure to",
    "start": "2537109",
    "end": "2542240"
  },
  {
    "text": "check out Puli pain now let's go to questions we have Oh anyone have",
    "start": "2542240",
    "end": "2555710"
  },
  {
    "text": "questions nobody don't be shy oh oh we",
    "start": "2555710",
    "end": "2565160"
  },
  {
    "text": "got one so when you're developing your",
    "start": "2565160",
    "end": "2571369"
  },
  {
    "text": "electron apps is there like an easy way because you're looking at dev tools to see what's taking a long time to run but",
    "start": "2571369",
    "end": "2577760"
  },
  {
    "text": "is there something that kind of shows you the where like how much memory is",
    "start": "2577760",
    "end": "2583220"
  },
  {
    "text": "being used and like is it easy to detect like a memory they collect from users",
    "start": "2583220",
    "end": "2592069"
  },
  {
    "text": "chromium and one of the features the nice features that chromium gives you is that it splits up the app in multiple",
    "start": "2592069",
    "end": "2600500"
  },
  {
    "text": "helpers so that the the best way to detect memory leaks is using the chrome",
    "start": "2600500",
    "end": "2607069"
  },
  {
    "text": "dev tools for this rather than for example looking at your system monitor",
    "start": "2607069",
    "end": "2612319"
  },
  {
    "text": "just those numbers don't really reflect what your app is really using great",
    "start": "2612319",
    "end": "2621109"
  },
  {
    "text": "question okay we got one over here I",
    "start": "2621109",
    "end": "2625299"
  },
  {
    "text": "just have a question what do you use for the automated testing like is there anything like karma or whatever back the",
    "start": "2626650",
    "end": "2633829"
  },
  {
    "text": "front people like the web browser people use so or do you personally use any of",
    "start": "2633829",
    "end": "2639470"
  },
  {
    "text": "this well because electron is just chrome and note you can use like the same testing",
    "start": "2639470",
    "end": "2646640"
  },
  {
    "text": "that you would use for your notes application and for your browser application and I believe there are like",
    "start": "2646640",
    "end": "2654890"
  },
  {
    "text": "hooks for puppets here etc that you can - you know orchestrate your electrical",
    "start": "2654890",
    "end": "2660710"
  },
  {
    "text": "application so yeah basically you run a web app in electron and you can test",
    "start": "2660710",
    "end": "2666620"
  },
  {
    "text": "that web app using any of the JavaScript testing libraries okay any last",
    "start": "2666620",
    "end": "2674660"
  },
  {
    "text": "questions going once going twice all right well thank you once again to",
    "start": "2674660",
    "end": "2680900"
  },
  {
    "text": "Killian",
    "start": "2680900",
    "end": "2683619"
  }
]