[
  {
    "text": "foreign [Music]",
    "start": "1380",
    "end": "17160"
  },
  {
    "text": "I'm Justin cormack I'm the CTO at Docker and I'm also a member of the technical oversight",
    "start": "17160",
    "end": "23279"
  },
  {
    "text": "Committee of the cloud native Computing foundation and I also I'm really interested in programming languages and",
    "start": "23279",
    "end": "29099"
  },
  {
    "text": "how they affect the way we work um it's great to be back at UConn",
    "start": "29099",
    "end": "34440"
  },
  {
    "text": "um so one of the things I'm talking about today is you know in the cloud native Computing foundation of the 42",
    "start": "34440",
    "end": "39840"
  },
  {
    "text": "graduated and incubating product projects we have 26 of them uh written predominantly in",
    "start": "39840",
    "end": "46559"
  },
  {
    "text": "go um and I want to explore how this happened and which new language is",
    "start": "46559",
    "end": "51840"
  },
  {
    "text": "emerging in the cloud notice base and how we got to this point where I go so dominant",
    "start": "51840",
    "end": "58680"
  },
  {
    "text": "um so um one of the things that you know is really was really important in this",
    "start": "58680",
    "end": "64559"
  },
  {
    "text": "historically was Docker when I started Docker in 2015 um go was already uh established",
    "start": "64559",
    "end": "71640"
  },
  {
    "text": "language in the company so I wanted to talk to Solomon hikes who founded doctor about how they how they",
    "start": "71640",
    "end": "77700"
  },
  {
    "text": "started off with a go and how really early in the go language Evolution they",
    "start": "77700",
    "end": "83040"
  },
  {
    "text": "they adopted it and moving away from python we didn't want to Target",
    "start": "83040",
    "end": "88560"
  },
  {
    "text": "um the Java platform or the python platform or whatever the target the the Unix platform or the Linux platform so",
    "start": "88560",
    "end": "94080"
  },
  {
    "text": "that was one one aspect um another aspect honestly is just that it was sort of a more of a personal gut",
    "start": "94080",
    "end": "101700"
  },
  {
    "text": "feeling thing um we were Python and C developers trying",
    "start": "101700",
    "end": "107100"
  },
  {
    "text": "to write distributed systems and a lot of what we ended up doing was writing",
    "start": "107100",
    "end": "113040"
  },
  {
    "text": "them in Python and then um getting bitten by the the typing issues",
    "start": "113040",
    "end": "120600"
  },
  {
    "text": "uh of python so discovering problems a little bit too late that runtime when they could have been discovered earlier",
    "start": "120600",
    "end": "126920"
  },
  {
    "text": "and also trying to recreate um some sort of a lightweight threading",
    "start": "126920",
    "end": "133500"
  },
  {
    "text": "system right and so at the time I think it's been a while but we were using",
    "start": "133500",
    "end": "138540"
  },
  {
    "text": "heavily libraries and Frameworks like um GE event and greenlits and things",
    "start": "138540",
    "end": "144540"
  },
  {
    "text": "like that um and go ahead go routines built in and that",
    "start": "144540",
    "end": "150420"
  },
  {
    "text": "was sort of the same thing but better and it had a typing benefits of c and so",
    "start": "150420",
    "end": "156599"
  },
  {
    "text": "from the point of view of from our specific point of view of c and python developers or distributed systems",
    "start": "156599",
    "end": "164099"
  },
  {
    "text": "it was a you know a perfect um just the perfect tool",
    "start": "164099",
    "end": "169319"
  },
  {
    "text": "huh and presumably you didn't want to choose C for other",
    "start": "169319",
    "end": "174900"
  },
  {
    "text": "no exactly yes she was she was not a consideration um",
    "start": "174900",
    "end": "180660"
  },
  {
    "text": "yeah it was python it was python was the default because that's what we used and go was just better by every metric that",
    "start": "180660",
    "end": "189120"
  },
  {
    "text": "we cared about and the last Factor so you know that's uh the fact that one",
    "start": "189120",
    "end": "196319"
  },
  {
    "text": "being the fact that it compiles to a standalone binary the other being that it was just the",
    "start": "196319",
    "end": "202019"
  },
  {
    "text": "right programming model for us and the third",
    "start": "202019",
    "end": "207659"
  },
  {
    "text": "is that because we specifically wanted to grow a large",
    "start": "207659",
    "end": "213480"
  },
  {
    "text": "uh community of Open Source contributors we wanted Docker to be not just a",
    "start": "213480",
    "end": "219180"
  },
  {
    "text": "successful tool but a successful open source project the choice of language",
    "start": "219180",
    "end": "225379"
  },
  {
    "text": "mattered for social reasons um like for example we wanted something",
    "start": "225379",
    "end": "231720"
  },
  {
    "text": "that was familiar enough to enough people that the language itself would",
    "start": "231720",
    "end": "237480"
  },
  {
    "text": "not be a huge barrier to reading the source code and contributing to it you",
    "start": "237480",
    "end": "245580"
  },
  {
    "text": "know and the nice thing about go is it doesn't it's not radical and it's syntax you know if you're written C you'll",
    "start": "245580",
    "end": "252599"
  },
  {
    "text": "you'll be you'll be familiar with go he's written python you'll be familiar you know it's not Haskell right it's not",
    "start": "252599",
    "end": "259500"
  },
  {
    "text": "lisp um it doesn't break every possible convention for May compared to you know",
    "start": "259500",
    "end": "268440"
  },
  {
    "text": "mainstream programming languages um and so that that that was",
    "start": "268440",
    "end": "276139"
  },
  {
    "text": "explicitly you um considered a benefit because that means it's easier to",
    "start": "276139",
    "end": "282120"
  },
  {
    "text": "contribute during this interview with Solomon he called out that when he was looking around at the existing gow ecosystem at",
    "start": "282120",
    "end": "289440"
  },
  {
    "text": "the time it was um was now another cncf project Vitesse that was something that that he saw that",
    "start": "289440",
    "end": "296460"
  },
  {
    "text": "gave him confidence vitess was a project that was um in YouTube at the time as YouTube was",
    "start": "296460",
    "end": "302880"
  },
  {
    "text": "growing really fast and I talked to sugu who was one of the founders of fit test about how he had got started in go so I",
    "start": "302880",
    "end": "309360"
  },
  {
    "text": "couldn't go through some of the thought process that we went through",
    "start": "309360",
    "end": "315199"
  },
  {
    "text": "about how we end up choosing go yes you know it was not very scientific",
    "start": "315199",
    "end": "322680"
  },
  {
    "text": "because [Laughter]",
    "start": "322680",
    "end": "327740"
  },
  {
    "text": "when 2010 when we were thinking of starting this project the options were",
    "start": "327740",
    "end": "335340"
  },
  {
    "text": "the primary options were python Java and C plus plus those were yeah three",
    "start": "335340",
    "end": "341340"
  },
  {
    "text": "languages that we are uh that part up for us uh python was because YouTube was",
    "start": "341340",
    "end": "346620"
  },
  {
    "text": "written in Python right um but then python was kind of",
    "start": "346620",
    "end": "353160"
  },
  {
    "text": "already losing because it's not a systems programming language and we knew that we wanted to build an efficient",
    "start": "353160",
    "end": "358979"
  },
  {
    "text": "proxy you know that uh uh so python was not because",
    "start": "358979",
    "end": "365940"
  },
  {
    "text": "efficiency right it's not a very efficient language uh so we had Java and C plus plus",
    "start": "365940",
    "end": "371900"
  },
  {
    "text": "and uh I wasn't familiar with Java and I think I was slightly bitter about it",
    "start": "371900",
    "end": "378060"
  },
  {
    "text": "those things I don't know why but uh probably probably based on some people I ran into",
    "start": "378060",
    "end": "385440"
  },
  {
    "text": "whatever I felt like you know um so I wasn't very excited about Java and Mike",
    "start": "385440",
    "end": "391080"
  },
  {
    "text": "wasn't excited about C plus plus because you didn't feel like he could write something good with it there were a",
    "start": "391080",
    "end": "397199"
  },
  {
    "text": "couple of uh reasons why we chose go the funny one is it was just a passing",
    "start": "397199",
    "end": "402840"
  },
  {
    "text": "comment but it is still a funny comment which is well if we use go and if our",
    "start": "402840",
    "end": "408660"
  },
  {
    "text": "project fails we can blame it but I don't think that's the reason why",
    "start": "408660",
    "end": "415740"
  },
  {
    "text": "we was it but that was definitely one uh one statement that was made in the",
    "start": "415740",
    "end": "421500"
  },
  {
    "text": "conversation uh but uh but really the reason why we chose go is because of",
    "start": "421500",
    "end": "429500"
  },
  {
    "text": "uh Rob Russ uh Ian and Robert wiesenberg",
    "start": "429500",
    "end": "436400"
  },
  {
    "text": "we kind of because it was such a brand new language we had to check out the",
    "start": "436400",
    "end": "441780"
  },
  {
    "text": "authors and we we actually basically studied those people",
    "start": "441780",
    "end": "447539"
  },
  {
    "text": "and we realized that their values their thinking their",
    "start": "447539",
    "end": "453840"
  },
  {
    "text": "philosophy is very mature and similar to the way we approached problems and uh",
    "start": "453840",
    "end": "461539"
  },
  {
    "text": "which which means that they were they were not like too theoretical or too",
    "start": "461539",
    "end": "467160"
  },
  {
    "text": "hacky they had a very good pragmatic balance",
    "start": "467160",
    "end": "472500"
  },
  {
    "text": "about how to solve problems and this was around the time when um it was around a time where within",
    "start": "472500",
    "end": "479880"
  },
  {
    "text": "Google there was a place where Engineers were going through this phase where they",
    "start": "479880",
    "end": "485099"
  },
  {
    "text": "had this Fascination to complexity uh where anything complex is awesome",
    "start": "485099",
    "end": "491340"
  },
  {
    "text": "type of thing and this was one group of people that were contrarian to that because they were saying it can be",
    "start": "491340",
    "end": "498539"
  },
  {
    "text": "simple you know he said well I like that I like the way you think but what",
    "start": "498539",
    "end": "504000"
  },
  {
    "text": "happened at that time was uh I don't know if you remember Dimitri Buco so I gave him a reproduction as to why we are",
    "start": "504000",
    "end": "513000"
  },
  {
    "text": "stuck um and the challenge I had to him was I",
    "start": "513000",
    "end": "518279"
  },
  {
    "text": "gave him was uh you know we have eight CPUs and that's all we have",
    "start": "518279",
    "end": "524700"
  },
  {
    "text": "you need to figure out and the the go run time today is only able to use six",
    "start": "524700",
    "end": "531839"
  },
  {
    "text": "if you give us if you optimize the runtime to use the that other two CPUs",
    "start": "531839",
    "end": "537660"
  },
  {
    "text": "we will be true you know that's that's the challenge I gave in he went away for I think two months I",
    "start": "537660",
    "end": "545519"
  },
  {
    "text": "think two two months and came up with this work stealing uh design and an",
    "start": "545519",
    "end": "550920"
  },
  {
    "text": "implementation prototype implementation we tried it it maxed out the 8 CPUs that",
    "start": "550920",
    "end": "558360"
  },
  {
    "text": "pulled us out of trouble uh but he kind of Saved our project and",
    "start": "558360",
    "end": "564180"
  },
  {
    "text": "our uh and uh if that had not happened there was a afterwards we might have",
    "start": "564180",
    "end": "571620"
  },
  {
    "text": "moved away from though it was uh and uh and it was not because of ghost design",
    "start": "571620",
    "end": "576899"
  },
  {
    "text": "it was just that we were we were getting pressured because YouTube was about to",
    "start": "576899",
    "end": "583019"
  },
  {
    "text": "fall apart I mean it we needed to find a solution and that solution basically",
    "start": "583019",
    "end": "589200"
  },
  {
    "text": "restored our faith to go after that we never had any struggles after that but Solomon and Sergey were looking for the",
    "start": "589200",
    "end": "595980"
  },
  {
    "text": "right language for their new projects a systems language for cloud native",
    "start": "595980",
    "end": "601140"
  },
  {
    "text": "but both of them really also felt that Community was important we can see that",
    "start": "601140",
    "end": "606360"
  },
  {
    "text": "for for Sugo is the community of the creators of go and the people working on",
    "start": "606360",
    "end": "611700"
  },
  {
    "text": "making the language better for Solomon it was the community that he wanted to create around Docker to make that other",
    "start": "611700",
    "end": "618480"
  },
  {
    "text": "language accessible to this community around this time late 2012 Derek",
    "start": "618480",
    "end": "624540"
  },
  {
    "text": "Collison who created the Nats project tweeted that within two years gay would",
    "start": "624540",
    "end": "629700"
  },
  {
    "text": "become the dominant systems language and language for cloud native and at the time people were very skeptical of",
    "start": "629700",
    "end": "637140"
  },
  {
    "text": "course but um it actually worked out that way that was you know in that period Docker and kubernetes were both",
    "start": "637140",
    "end": "643019"
  },
  {
    "text": "released and there was a huge explosion of usage so I talked to him about how he came to that conclusion back then so the",
    "start": "643019",
    "end": "649560"
  },
  {
    "text": "original Nat was written in Ruby like Cloud Foundry was and I actually from a development perspective and just liking",
    "start": "649560",
    "end": "656399"
  },
  {
    "text": "working in a language once the the system is set up Ruby is still awesome to me um but deploying production",
    "start": "656399",
    "end": "663000"
  },
  {
    "text": "systems with the Ruby VM and all the dependencies and we had dependencies on event machine to do a sync stop more",
    "start": "663000",
    "end": "669420"
  },
  {
    "text": "efficiently and stuff wasn't going to work and so in 2012 when we had started appsera",
    "start": "669420",
    "end": "676019"
  },
  {
    "text": "um we were internally huddling around yes Nats will be the control plane addressing Discovery and Telemetry",
    "start": "676019",
    "end": "682140"
  },
  {
    "text": "system for the epsera platform as well called continuum but I didn't want to run in Ruby anymore",
    "start": "682140",
    "end": "688320"
  },
  {
    "text": "and and we were looking at either go which was the newcomer I think it was at 0.52 at the time or node.js which was",
    "start": "688320",
    "end": "696420"
  },
  {
    "text": "also a newcomer but not as new um at least from a lexicon perspective",
    "start": "696420",
    "end": "701880"
  },
  {
    "text": "as as goat so there's definitely some initial things that that",
    "start": "701880",
    "end": "707160"
  },
  {
    "text": "um we chose and then after being in the go ecosystem for so long there's some",
    "start": "707160",
    "end": "712200"
  },
  {
    "text": "interesting observations now about why it was the right choice that weren't necessarily the original decision makers",
    "start": "712200",
    "end": "718860"
  },
  {
    "text": "so the original decision makers were trying to alleviate the pain that we had deploying production",
    "start": "718860",
    "end": "726000"
  },
  {
    "text": "systems with the Ruby ecosystem right um and so node even though it had like npm or the beginnings of it at the time",
    "start": "726000",
    "end": "733079"
  },
  {
    "text": "it was still a virtual machine had a package management system that had to kind of be spun up and all wrapped",
    "start": "733079",
    "end": "738899"
  },
  {
    "text": "around it and go had the ability to present quasi-static executables you can do and",
    "start": "738899",
    "end": "746040"
  },
  {
    "text": "we do full blown static executables you know you have to do a little extra work but that was a huge thing meaning our",
    "start": "746040",
    "end": "752760"
  },
  {
    "text": "deployment could be an SCP you know essentially yeah the other one Believe It or Not which was kind of funny is",
    "start": "752760",
    "end": "759660"
  },
  {
    "text": "um go routines in the concurrency model were interesting to us for sure",
    "start": "759660",
    "end": "764820"
  },
  {
    "text": "um but the other big defining factor for me because I spent a long time at tipco designing a system to do this was",
    "start": "764820",
    "end": "771959"
  },
  {
    "text": "in typical we wrote everything in low-level seat which is still probably one of my favorite languages even though",
    "start": "771959",
    "end": "777600"
  },
  {
    "text": "it's you know has a lot of challenges there being that close to the metal spawn and I've learned rust I'm going to",
    "start": "777600",
    "end": "784260"
  },
  {
    "text": "learn Zig uh this holiday as my pet project and and I probably would never program and see again but I still liked",
    "start": "784260",
    "end": "791579"
  },
  {
    "text": "it but at the time it was very interesting to me within what we were",
    "start": "791579",
    "end": "797339"
  },
  {
    "text": "trying to do to flow from 80 to 90 use cases that would live on the stack to",
    "start": "797339",
    "end": "803579"
  },
  {
    "text": "transparently move themselves to the heat that's very hard to do and see and I spent a lot of time and effort to get",
    "start": "803579",
    "end": "810480"
  },
  {
    "text": "that to work in C and go had that for free and almost nobody cared about that they're like what have you been talking",
    "start": "810480",
    "end": "816480"
  },
  {
    "text": "about but I said I spent so long trying to do that and see and go has it meaning I can take advantage of the fact that",
    "start": "816480",
    "end": "824040"
  },
  {
    "text": "at 052 goes garbage collector was really primitive you know very primitive Mark and sweep but to me I was like it",
    "start": "824040",
    "end": "830760"
  },
  {
    "text": "doesn't matter because I can architect to have most of the things on the stack and if they blow past the stack they",
    "start": "830760",
    "end": "836519"
  },
  {
    "text": "ought to promote and go I don't have to do on natural acts like we had to in the C code base at tibco yeah so it was",
    "start": "836519",
    "end": "843959"
  },
  {
    "text": "static executables and stacks were real what were the decision points the concurrency was nice to have",
    "start": "843959",
    "end": "851160"
  },
  {
    "text": "um and again looking back now at the ecosystem it's gofund was bigger impact than people",
    "start": "851160",
    "end": "858240"
  },
  {
    "text": "thought huge everyone does the same thing now the tooling right go vets P Prof",
    "start": "858240",
    "end": "865200"
  },
  {
    "text": "um you know the testing the way the testing all was in there and believe it or not the number one thing for me is",
    "start": "865200",
    "end": "870959"
  },
  {
    "text": "that if I go away from the code base maybe it's because I'm old but if I come back I immediately know",
    "start": "870959",
    "end": "877800"
  },
  {
    "text": "what I was doing or even if it's let's say code that you wrote I could figure out pretty quickly what your intent was",
    "start": "877800",
    "end": "884160"
  },
  {
    "text": "with go as a simple language versus Haskell or o camel or even sometimes if",
    "start": "884160",
    "end": "889800"
  },
  {
    "text": "people went into meta land with Ruby you know I mean in essentially we're programming dsls you went back to a",
    "start": "889800",
    "end": "896279"
  },
  {
    "text": "Kodak for a couple months and I'm looking at it and it would take me an hour so to figure out what the heck I was even trying to really do and so that",
    "start": "896279",
    "end": "903959"
  },
  {
    "text": "also lends itself to Bringing new people in to get up to speed very quickly with a language and I still think that's huge",
    "start": "903959",
    "end": "911100"
  },
  {
    "text": "we're talking about how a guy who got started in the cloud at native ecosystem recently we've been seeing a bunch of",
    "start": "911100",
    "end": "916800"
  },
  {
    "text": "projects in Rust as well and we've seen other languages I talked to Matt butcher about how how",
    "start": "916800",
    "end": "923940"
  },
  {
    "text": "he uh adopted rust he had started off as a go programmer I built Helm among other",
    "start": "923940",
    "end": "929940"
  },
  {
    "text": "things um recently he started using using rust for new projects uh so Ryan Levick who",
    "start": "929940",
    "end": "936360"
  },
  {
    "text": "is one of the I think he's one of the rust core maintainers or uh but he also worked at works at Microsoft when we",
    "start": "936360",
    "end": "943380"
  },
  {
    "text": "were starting to look into this and he just dropped into our slack and was like hey I heard you're writing a rust program you know clippy style and uh and",
    "start": "943380",
    "end": "951360"
  },
  {
    "text": "basically anybody who wanted to learn rust Ryan was more than happy to kind of walk them through the basics then point",
    "start": "951360",
    "end": "957300"
  },
  {
    "text": "them at some resources and then answer those first few questions about how to do the borrow checking correctly uh and",
    "start": "957300",
    "end": "963720"
  },
  {
    "text": "so very rapidly I think six or eight of us got going in the rust ecosystem and",
    "start": "963720",
    "end": "969480"
  },
  {
    "text": "our project started to the default started to shift right so we we wanted to write crosslit in Rust because of the",
    "start": "969480",
    "end": "976980"
  },
  {
    "text": "way we wanted to build a controller uh kubernetes controller uh we we hadn't intended to start writing other things",
    "start": "976980",
    "end": "983279"
  },
  {
    "text": "in Rust it just sort of happened out of that that new projects started to default to being written in Rust instead",
    "start": "983279",
    "end": "989699"
  },
  {
    "text": "of go uh what was it about across the crosstalk that made you want to write in",
    "start": "989699",
    "end": "995820"
  },
  {
    "text": "Rust then um the the main one was we wanted a webassembly run time and the best",
    "start": "995820",
    "end": "1001160"
  },
  {
    "text": "webassembly run times are either written in JavaScript or C or C plus plus for the JavaScript ego system or are written",
    "start": "1001160",
    "end": "1008540"
  },
  {
    "text": "in Rust and the one we wanted to use was wasn't time which is sort of the reference implementation of the wazzy",
    "start": "1008540",
    "end": "1015620"
  },
  {
    "text": "specification and that was written in Rust and we looked at well we could compile this to a library and then link",
    "start": "1015620",
    "end": "1021259"
  },
  {
    "text": "it with go and then once we started working on Rust uh and I had been",
    "start": "1021259",
    "end": "1026780"
  },
  {
    "text": "working on it already but once everybody else started working on it and going oh well I like the generics and oh this",
    "start": "1026780",
    "end": "1031938"
  },
  {
    "text": "kubernetes Library the kube.rs crate is pretty good before long everybody wanted",
    "start": "1031939",
    "end": "1038120"
  },
  {
    "text": "to write it in Rust wanted to write all of course sliding rust so where it started really because of",
    "start": "1038120",
    "end": "1045319"
  },
  {
    "text": "the necessity of wanting the web assembly run time it ended with us choosing it because it",
    "start": "1045319",
    "end": "1052280"
  },
  {
    "text": "felt like the right language for what we were building uh and then the surprising",
    "start": "1052280",
    "end": "1057559"
  },
  {
    "text": "sort of conclusion was that from that was we started writing other projects in Rust because it felt like the right fit",
    "start": "1057559",
    "end": "1063200"
  },
  {
    "text": "for the things we were starting to do moving forward from there Derek had quite similar thoughts about lighter",
    "start": "1063200",
    "end": "1069500"
  },
  {
    "text": "weight languages for lighter weight processing particularly on the edge and so we talked about webassembly as",
    "start": "1069500",
    "end": "1075860"
  },
  {
    "text": "well and also Zig most of the new ecosystems have taken a similar approach",
    "start": "1075860",
    "end": "1081799"
  },
  {
    "text": "the standard Library can't just be scalable it has to be yeah fairly I mean even Zig which is one of the newer lower",
    "start": "1081799",
    "end": "1088220"
  },
  {
    "text": "level languages has spent quite a bit of time on their standard Library fleshing it all out I I I I find it amazing that",
    "start": "1088220",
    "end": "1095240"
  },
  {
    "text": "even C plus has decided it needs HTTP and TLs but it's going to take another",
    "start": "1095240",
    "end": "1100880"
  },
  {
    "text": "decade to get there I don't I don't know how long my career will keep going for but I I can",
    "start": "1100880",
    "end": "1107660"
  },
  {
    "text": "say with confidence I will never program in CRC plus plus again and I'm okay with that you know uh",
    "start": "1107660",
    "end": "1113720"
  },
  {
    "text": "I think there's better Alternatives now for sure but I also think with the uh",
    "start": "1113720",
    "end": "1119240"
  },
  {
    "text": "the other prediction around Edge Computing at least my opinion that it's going to dwarf cloud computing cloud computing will become the Mainframe uh",
    "start": "1119240",
    "end": "1126500"
  },
  {
    "text": "very quickly we know they exist but who cares nobody ever really interacts with them they just live in the background type stuff",
    "start": "1126500",
    "end": "1132799"
  },
  {
    "text": "um efficiency so not necessary performance but efficiency how much energy and resources are you using to do",
    "start": "1132799",
    "end": "1139100"
  },
  {
    "text": "the same amount of work is going to come back into play so I think you know Enterprise with DOT net and Java will",
    "start": "1139100",
    "end": "1144260"
  },
  {
    "text": "still remain and still be driven especially within the data center of the cloud worlds but industry 4-0 Edge all",
    "start": "1144260",
    "end": "1151640"
  },
  {
    "text": "that other stuff is going to be you know I think you're going to see C rust Zig",
    "start": "1151640",
    "end": "1156740"
  },
  {
    "text": "and then of course you know very high speed um wasm or JavaScript uh engines you",
    "start": "1156740",
    "end": "1162260"
  },
  {
    "text": "know as the looser maybe some micro python circuit python type stuff tiny",
    "start": "1162260",
    "end": "1167960"
  },
  {
    "text": "ghost becoming really interesting in my opinion Solomon's still a big believer and user of guy but it was another",
    "start": "1167960",
    "end": "1174620"
  },
  {
    "text": "language that we talked about why he would like to see changes I I still write go I I I'm not the I'm not the",
    "start": "1174620",
    "end": "1182780"
  },
  {
    "text": "typical programming language early adopter I tend to use the same tools for a long time so uh if something were we",
    "start": "1182780",
    "end": "1192020"
  },
  {
    "text": "were probably a strong influence in the adoption of go",
    "start": "1192020",
    "end": "1197360"
  },
  {
    "text": "and also in the adoption of yaml in the cloud landscape and so",
    "start": "1197360",
    "end": "1203240"
  },
  {
    "text": "um there's one I feel better than the other um and yamo I think is just a source of",
    "start": "1203240",
    "end": "1209720"
  },
  {
    "text": "problems I mean it's it's not a it's not that it's bad it's just that it's used for things that it wasn't",
    "start": "1209720",
    "end": "1216500"
  },
  {
    "text": "meant to be used for you know it's just being overused in um",
    "start": "1216500",
    "end": "1221840"
  },
  {
    "text": "that's the sign that there's something missing and so um this new project we're working on",
    "start": "1221840",
    "end": "1227780"
  },
  {
    "text": "dagger we it's written in go but um it's configurable and customizable",
    "start": "1227780",
    "end": "1235039"
  },
  {
    "text": "to the extreme and um yaml or Jason",
    "start": "1235039",
    "end": "1241360"
  },
  {
    "text": "just didn't support the the the sort of features that we wanted to express",
    "start": "1241360",
    "end": "1247220"
  },
  {
    "text": "and we found this uh this um this language called Q so initially we we used HCL in our first prototype so that",
    "start": "1247220",
    "end": "1255860"
  },
  {
    "text": "you know um terraform and and other hashicorp tools use HCL it's a I think they",
    "start": "1255860",
    "end": "1263419"
  },
  {
    "text": "it's an in-house project uh and it's kind of spun out as a",
    "start": "1263419",
    "end": "1268520"
  },
  {
    "text": "library so you can use you can use it in your own tool um but it has limitations pretty severe",
    "start": "1268520",
    "end": "1274760"
  },
  {
    "text": "limitations um you can tell it's it started its life tied to a specific tool and it's and not",
    "start": "1274760",
    "end": "1282020"
  },
  {
    "text": "as a Standalone language meant from the beginning to be used by multiple tools Q",
    "start": "1282020",
    "end": "1288320"
  },
  {
    "text": "on the other hand started out as a language and it's you know the the it's author Marcel is a language experts",
    "start": "1288320",
    "end": "1296900"
  },
  {
    "text": "and uh it's exactly like go solved a specific problem that",
    "start": "1296900",
    "end": "1303320"
  },
  {
    "text": "um felt like it was written perfectly for us Hugh felt the same way as a",
    "start": "1303320",
    "end": "1308659"
  },
  {
    "text": "replacement um to yaml so so yeah I I'm a huge believer in huge",
    "start": "1308659",
    "end": "1315320"
  },
  {
    "text": "future I think it will um yeah I think",
    "start": "1315320",
    "end": "1320840"
  },
  {
    "text": "I think it will or at least it should replace yaml in in many many",
    "start": "1320840",
    "end": "1326419"
  },
  {
    "text": "um Cloud native configuration scenarios so what have we learned about the adoption of languages and and the",
    "start": "1326419",
    "end": "1332419"
  },
  {
    "text": "adoption of languages in Cloud native in particular the first thing that's clearly important",
    "start": "1332419",
    "end": "1337640"
  },
  {
    "text": "very important is community and this is the community around you as you start so",
    "start": "1337640",
    "end": "1342860"
  },
  {
    "text": "thinking about using a new language and the way the things they've built and the way they're building them and second is",
    "start": "1342860",
    "end": "1348919"
  },
  {
    "text": "the community that you want to bring to your projects and how you how you want",
    "start": "1348919",
    "end": "1354320"
  },
  {
    "text": "them to be able to adopt the language and tools you're building the second one",
    "start": "1354320",
    "end": "1359480"
  },
  {
    "text": "is fit for a problem domain for cloud native there were some requirements that",
    "start": "1359480",
    "end": "1365960"
  },
  {
    "text": "a lot of people mentioned around things like static binaries that were useful to be able to distribute their code easily",
    "start": "1365960",
    "end": "1372679"
  },
  {
    "text": "and let people run as easily in production that were important but or you know always you need this fit",
    "start": "1372679",
    "end": "1379100"
  },
  {
    "text": "between the problem you're working on and um moving into a new domain is actually a great opportunity to examine",
    "start": "1379100",
    "end": "1385700"
  },
  {
    "text": "the kind of fit for the tools that you're using languages you're using now and decide whether it's a good point to",
    "start": "1385700",
    "end": "1391580"
  },
  {
    "text": "make a change performance was also important for the cloud native use case and it was interesting that",
    "start": "1391580",
    "end": "1398600"
  },
  {
    "text": "you know came up a little bit but actually the language performance actually grew in line with",
    "start": "1398600",
    "end": "1405919"
  },
  {
    "text": "the requirements and the conversation with Sugo about YouTube it was really interesting that",
    "start": "1405919",
    "end": "1412159"
  },
  {
    "text": "um go manage to keep growing and meeting those requirements as as the",
    "start": "1412159",
    "end": "1417919"
  },
  {
    "text": "requirements became more difficult and they never got to the point where they had to give up so it's important to",
    "start": "1417919",
    "end": "1425299"
  },
  {
    "text": "remember that languages can change and evolve with your uses and and they grow and the ecosystem around them grows as",
    "start": "1425299",
    "end": "1432620"
  },
  {
    "text": "you as you start using them so those things are really important",
    "start": "1432620",
    "end": "1439059"
  },
  {
    "text": "and then finally you know everyone's journey into learning new languages was different and",
    "start": "1439840",
    "end": "1446600"
  },
  {
    "text": "um people often you know thought about things experimented maybe years before",
    "start": "1446600",
    "end": "1451880"
  },
  {
    "text": "they actually adopted a language um and you have to and also there's a whole journey towards internalizing how",
    "start": "1451880",
    "end": "1459559"
  },
  {
    "text": "to work in a new language and how to use its uh the opportunities it presents",
    "start": "1459559",
    "end": "1465500"
  },
  {
    "text": "best um and so that that part of learning new languages is incredibly important to to",
    "start": "1465500",
    "end": "1471980"
  },
  {
    "text": "people and it's a really important that we all continue to learn new programming languages experiment and see new ways we",
    "start": "1471980",
    "end": "1479659"
  },
  {
    "text": "could do things so that when we get an opportunity like when we're moving into a new area or experimenting with a new",
    "start": "1479659",
    "end": "1486320"
  },
  {
    "text": "idea we can think about what programming language would work best for this and what kind of community do I want to",
    "start": "1486320",
    "end": "1491659"
  },
  {
    "text": "build",
    "start": "1491659",
    "end": "1493840"
  },
  {
    "text": "hello Justin Hello nice to see you now always good to see you Justin a really",
    "start": "1501559",
    "end": "1507440"
  },
  {
    "text": "excellent talk great to hear from all of these voices and all these experiences around these languages",
    "start": "1507440",
    "end": "1514280"
  },
  {
    "text": "um so much to say here what where do we start um",
    "start": "1514280",
    "end": "1519919"
  },
  {
    "text": "as someone has mentioned in in the chat already it seems that ahead of time compilation or having static binaries is",
    "start": "1519919",
    "end": "1527120"
  },
  {
    "text": "one of the big selling points for languages like go or rust I mean does that even Java nowadays has ahead of",
    "start": "1527120",
    "end": "1535220"
  },
  {
    "text": "time compilation is that going to be essential for all future languages that come along",
    "start": "1535220",
    "end": "1541220"
  },
  {
    "text": "yeah it's it's interesting why it matters and when and what for and",
    "start": "1541220",
    "end": "1546440"
  },
  {
    "text": "I think the the comment was um was around serverless and serverless you know really start up time is",
    "start": "1546440",
    "end": "1553700"
  },
  {
    "text": "incredibly important and um and it's you know becomes one of the",
    "start": "1553700",
    "end": "1558799"
  },
  {
    "text": "constraints because you're you're there and you've got to do things and and you get people who work around it by trying",
    "start": "1558799",
    "end": "1565220"
  },
  {
    "text": "to snapshot things after startup um it it does depend which is actually",
    "start": "1565220",
    "end": "1572360"
  },
  {
    "text": "actually interesting enough emacs even used to do that as an editor emacs used to snapshot herself after startup",
    "start": "1572360",
    "end": "1579200"
  },
  {
    "text": "because the startup was too slow um so so it does depend on you know what",
    "start": "1579200",
    "end": "1584779"
  },
  {
    "text": "that what that period is and how to work around it emacs no longer does because it was you know computers were fast",
    "start": "1584779",
    "end": "1591140"
  },
  {
    "text": "enough it wasn't an issue so you know it does depend exactly what those constraints are but",
    "start": "1591140",
    "end": "1598340"
  },
  {
    "text": "um I think that ahead of time like you know ahead of time",
    "start": "1598340",
    "end": "1604100"
  },
  {
    "text": "has you know has those big advantages against it you know it has",
    "start": "1604100",
    "end": "1609500"
  },
  {
    "text": "um it has the the user experience Pro is is kind of worse",
    "start": "1609500",
    "end": "1615919"
  },
  {
    "text": "um in theory with uh with the kind of you know JavaScript model you can start running the code slowly with an",
    "start": "1615919",
    "end": "1622100"
  },
  {
    "text": "interpreter and maybe it doesn't need to be fast and you only compile it if it needs if it's really going to be used",
    "start": "1622100",
    "end": "1628700"
  },
  {
    "text": "um and you know maybe that static compilation is just not worth it for those kinds of applications where most",
    "start": "1628700",
    "end": "1635059"
  },
  {
    "text": "applications are so small that even like an interpreter is fine so I",
    "start": "1635059",
    "end": "1642080"
  },
  {
    "text": "think there are there are compromises but I think we're seeing a lot of space is where ahead of time is working better",
    "start": "1642080",
    "end": "1648679"
  },
  {
    "text": "we've gone we've kind of gone back to that because it's how language is originally were in this like from the",
    "start": "1648679",
    "end": "1655100"
  },
  {
    "text": "70s it was Java that moved away from that JavaScript kind of followed there",
    "start": "1655100",
    "end": "1661340"
  },
  {
    "text": "there was a huge investment in these Technologies and then we are kind of",
    "start": "1661340",
    "end": "1667279"
  },
  {
    "text": "seeing a little bit of a swing back to um until ahead of time",
    "start": "1667279",
    "end": "1672760"
  },
  {
    "text": "there's always the there is always the theory that",
    "start": "1672760",
    "end": "1677900"
  },
  {
    "text": "um Jet and profiled profiles based on actual execution can be faster but in",
    "start": "1677900",
    "end": "1684620"
  },
  {
    "text": "general those are most that's mostly been true for",
    "start": "1684620",
    "end": "1690200"
  },
  {
    "text": "um dynamically typed languages where you can um work out what the types are and with",
    "start": "1690200",
    "end": "1695480"
  },
  {
    "text": "static and you know we've I think the ahead of time thing has gone with the Revival then static typing and the kind",
    "start": "1695480",
    "end": "1701600"
  },
  {
    "text": "of the shift back to let's fix these bugs at compile time because it's annoying to fix them at at runtime as",
    "start": "1701600",
    "end": "1708440"
  },
  {
    "text": "well so I think that that combination of started typing ahead of ahead of time is",
    "start": "1708440",
    "end": "1714559"
  },
  {
    "text": "you know definitely we've swung back that way again for for some of those reasons",
    "start": "1714559",
    "end": "1720700"
  },
  {
    "text": "yeah someone mentioned this is I mean it's also important for several of those especially because they're you don't",
    "start": "1721159",
    "end": "1727640"
  },
  {
    "text": "want to pay essentially for you know for the compiler to do some work if you can do",
    "start": "1727640",
    "end": "1732799"
  },
  {
    "text": "it ahead of time since yeah and and as we've as we've as",
    "start": "1732799",
    "end": "1738500"
  },
  {
    "text": "serverless has had billing with smaller and smaller intervals that becomes more and more important and um and as we want",
    "start": "1738500",
    "end": "1745279"
  },
  {
    "text": "to do you know really lightweight things and serverless you know the",
    "start": "1745279",
    "end": "1751039"
  },
  {
    "text": "um I mean code size small code size also becomes important for those things I",
    "start": "1751039",
    "end": "1756080"
  },
  {
    "text": "mean it's very much the case with webassembly um where you know again rust has become",
    "start": "1756080",
    "end": "1762380"
  },
  {
    "text": "a a popular language to compile to webassembly because it compiles to a small static",
    "start": "1762380",
    "end": "1769100"
  },
  {
    "text": "binary without a runtime um you know I remember talking to cloudflare about you know the the Hoops",
    "start": "1769100",
    "end": "1775399"
  },
  {
    "text": "they were having to go through with go in webassembly because the language compiling the language runtime to",
    "start": "1775399",
    "end": "1782059"
  },
  {
    "text": "webassembly was a few megabytes of overhead and again they were really space constrained by how quickly they",
    "start": "1782059",
    "end": "1788600"
  },
  {
    "text": "could load code into a machine you know if you a megabyte of code is much",
    "start": "1788600",
    "end": "1793820"
  },
  {
    "text": "quicker than you know 100 megabytes of code just to load up and you know how much concurrency you can get and those",
    "start": "1793820",
    "end": "1799880"
  },
  {
    "text": "things those types of issues as well so so that those those kind of constraints",
    "start": "1799880",
    "end": "1805100"
  },
  {
    "text": "are related as well in terms of like and I think that's what um",
    "start": "1805100",
    "end": "1810260"
  },
  {
    "text": "you know a lot of the discussion about like Edge use cases and like Derek's conversation about",
    "start": "1810260",
    "end": "1816140"
  },
  {
    "text": "you know Tony go and micro Python and things like that where they're really designed for really small run times and",
    "start": "1816140",
    "end": "1822559"
  },
  {
    "text": "that gives you advantages if you want to run them for very short periods of time or very",
    "start": "1822559",
    "end": "1828760"
  },
  {
    "text": "or a lot of a lot of things at once and those kinds of things like memory memory",
    "start": "1828760",
    "end": "1834440"
  },
  {
    "text": "consumption is one of the big constraints for how many how many customers code can you run at once just",
    "start": "1834440",
    "end": "1841100"
  },
  {
    "text": "take your memory consumption divided by the size of the size of the application and that basically gives you the amount",
    "start": "1841100",
    "end": "1847760"
  },
  {
    "text": "of things you can Multiplex onto a CPU at one time so as serverless and those things start",
    "start": "1847760",
    "end": "1854360"
  },
  {
    "text": "to get into those constraints those those those types of constraints start to matter a lot too",
    "start": "1854360",
    "end": "1862100"
  },
  {
    "text": "yeah we just heard a talk about how Shopify is using webassembly to allow",
    "start": "1862100",
    "end": "1867260"
  },
  {
    "text": "people to extend their platform and that also quite nice you can write rust for it and it can pack a lot of code into",
    "start": "1867260",
    "end": "1875659"
  },
  {
    "text": "small space because it just needs it's naturally isolated you need the",
    "start": "1875659",
    "end": "1880760"
  },
  {
    "text": "containers and stuff on Virtual machines to to isolate the code from others so it's also an interesting Trend in what",
    "start": "1880760",
    "end": "1888260"
  },
  {
    "text": "Bible assembly allows here yeah and I think that um",
    "start": "1888260",
    "end": "1894820"
  },
  {
    "text": "isolation is um is a technology that has always been",
    "start": "1894820",
    "end": "1899899"
  },
  {
    "text": "important it just has different shapes over time and different kind of sizes and",
    "start": "1899899",
    "end": "1906320"
  },
  {
    "text": "um you know we started with virtual machines and containers were smaller and",
    "start": "1906320",
    "end": "1911779"
  },
  {
    "text": "more convenient but we're now looking at things like you know can I isolate",
    "start": "1911779",
    "end": "1917440"
  },
  {
    "text": "parts of a single application can I I you know because I don't trust them or I",
    "start": "1917440",
    "end": "1923659"
  },
  {
    "text": "don't want to audit the code in them so you know um you know Google has a role that every every untrusted bit of code",
    "start": "1923659",
    "end": "1930559"
  },
  {
    "text": "has to have two isolation layers between that and their code for example and those two isolation layers can be",
    "start": "1930559",
    "end": "1937159"
  },
  {
    "text": "different things in different cases but one isolation layer could be broken but two is much more difficult so",
    "start": "1937159",
    "end": "1944480"
  },
  {
    "text": "um so yeah if you're on Shopify and you're embedding customer code and your code then that's something you have to",
    "start": "1944480",
    "end": "1950360"
  },
  {
    "text": "isolate and you want you want isolation layers with that and those might be you",
    "start": "1950360",
    "end": "1955640"
  },
  {
    "text": "know the the wasm runtime and um you know some of those kernel process",
    "start": "1955640",
    "end": "1961520"
  },
  {
    "text": "isolation for example you run the runtime in a separate process or they might you know they might have a couple of you know other you know other ways of",
    "start": "1961520",
    "end": "1969200"
  },
  {
    "text": "doing it but the the more we make our applications out of sets of code with",
    "start": "1969200",
    "end": "1974240"
  },
  {
    "text": "different trust levels the more we need isolation at different at lots of different scales",
    "start": "1974240",
    "end": "1980059"
  },
  {
    "text": "you know everything from VMS for cloud tenants down to containers for",
    "start": "1980059",
    "end": "1986120"
  },
  {
    "text": "I'm running six applications at once and I don't want them to interfere with each other to like I'm running a library",
    "start": "1986120",
    "end": "1992600"
  },
  {
    "text": "that the customer provided I have nowhere to do or I'm running a library that I got from npm and I don't trust it",
    "start": "1992600",
    "end": "1999200"
  },
  {
    "text": "can I run that in there isolated as well yeah there was some interesting work",
    "start": "1999200",
    "end": "2004659"
  },
  {
    "text": "with the capability based isolation inside of JavaScript and yeah Kate sells",
    "start": "2004659",
    "end": "2010960"
  },
  {
    "text": "did a talk a while back at qcon that was really good that's where I heard it it's a great concept indeed yes I don't know",
    "start": "2010960",
    "end": "2019059"
  },
  {
    "text": "what what happened what happened to that it had a he had one of those ungoogleable names so it's kind of hard to keep up with it but it was supposed",
    "start": "2019059",
    "end": "2025659"
  },
  {
    "text": "to come in one of the ecmascripts something to check up on I think um",
    "start": "2025659",
    "end": "2030760"
  },
  {
    "text": "I think there's a question here um curious I have not heard of this but it",
    "start": "2030760",
    "end": "2037840"
  },
  {
    "text": "occurs to me that a cloud provider could provide a jvm platform as a service in a serverless manner",
    "start": "2037840",
    "end": "2044919"
  },
  {
    "text": "um I think there were some back in the day",
    "start": "2044919",
    "end": "2049960"
  },
  {
    "text": "but the security isolation of the jvm I mean again the jvm was like the first",
    "start": "2049960",
    "end": "2057040"
  },
  {
    "text": "language runtime that was designed for secure isolation but the security isolation wasn't",
    "start": "2057040",
    "end": "2063700"
  },
  {
    "text": "actually very good in the end it was it was broken a lot of times after",
    "start": "2063700",
    "end": "2069520"
  },
  {
    "text": "um it was initially released mainly through um security issues in the in the",
    "start": "2069520",
    "end": "2075339"
  },
  {
    "text": "standard library and and so on and it was um so again it wasn't",
    "start": "2075339",
    "end": "2082358"
  },
  {
    "text": "it was an experiment in isolation it's a kind of uh you can see where Azam as",
    "start": "2082359",
    "end": "2087760"
  },
  {
    "text": "being a more secure version of the jvm in terms of lesson you know there's been a lot of lessons learned in the last 20",
    "start": "2087760",
    "end": "2094419"
  },
  {
    "text": "years or is it even longer since jvm um yeah",
    "start": "2094419",
    "end": "2100780"
  },
  {
    "text": "um but yeah a lot of lessons learning how to build secure isolation for language runtimes",
    "start": "2100780",
    "end": "2106720"
  },
  {
    "text": "um and kind of wasms that really is the state of the art that came out of the",
    "start": "2106720",
    "end": "2111760"
  },
  {
    "text": "you know the browser as the as the most attacked piece of software we ever built",
    "start": "2111760",
    "end": "2119980"
  },
  {
    "text": "um there was a there was a lot of work um you know particularly from the the Google team around uh in Grime and and",
    "start": "2119980",
    "end": "2129220"
  },
  {
    "text": "you know those kinds of layers of isolation there that taught us how to do",
    "start": "2129220",
    "end": "2134260"
  },
  {
    "text": "that better but I think back I think back in back in the day people were did",
    "start": "2134260",
    "end": "2139660"
  },
  {
    "text": "have that idea but it wasn't you know the jvm runtime wasn't quite",
    "start": "2139660",
    "end": "2145480"
  },
  {
    "text": "designed for that and wasn't quite secure enough but but it was um",
    "start": "2145480",
    "end": "2150760"
  },
  {
    "text": "it was you know was it it's it's very much in the same line of forms of",
    "start": "2150760",
    "end": "2156220"
  },
  {
    "text": "isolation that we've worked on over the years right I guess the advantage of wasm has is that it just doesn't stuff",
    "start": "2156220",
    "end": "2162640"
  },
  {
    "text": "as much as many features into the standard runtime because with Java you",
    "start": "2162640",
    "end": "2168160"
  },
  {
    "text": "can get you know import data file formats and stuff like that yeah and the",
    "start": "2168160",
    "end": "2173680"
  },
  {
    "text": "type system is reflected inside which turned out to be quite complicated",
    "start": "2173680",
    "end": "2180220"
  },
  {
    "text": "um whereas rasm has very simple like linear arrays and and again the language",
    "start": "2180220",
    "end": "2185800"
  },
  {
    "text": "has to compile down the type system at once on top of that so it's even simpler I mean it is webassembly it is much more",
    "start": "2185800",
    "end": "2192520"
  },
  {
    "text": "like all right it's almost recognizably an Assembly Language apart from has better",
    "start": "2192520",
    "end": "2198160"
  },
  {
    "text": "looping constructs so but it feels more like a you know kind of more Machine",
    "start": "2198160",
    "end": "2203440"
  },
  {
    "text": "level thing than a language level thing and that again makes it easier because it's simpler yeah it I found it it was",
    "start": "2203440",
    "end": "2210220"
  },
  {
    "text": "quite fun trying to write code in it if with the text format which is kind of a lispy type of thing",
    "start": "2210220",
    "end": "2215500"
  },
  {
    "text": "it's much easier yeah assembly right yes it is fun it's um yeah it's not",
    "start": "2215500",
    "end": "2221680"
  },
  {
    "text": "perhaps designed for that but then I mean I don't know I when I was younger I",
    "start": "2221680",
    "end": "2227920"
  },
  {
    "text": "wrote PostScript which was kind of like that too it was fourth paced and it felt",
    "start": "2227920",
    "end": "2233020"
  },
  {
    "text": "it felt amazing to be as a programmer printer uh that's always good yeah did you hack",
    "start": "2233020",
    "end": "2238300"
  },
  {
    "text": "the printer well stack overflows in there I need recursion overflows oh yeah I mean you",
    "start": "2238300",
    "end": "2243880"
  },
  {
    "text": "got them all the time it was uh yes",
    "start": "2243880",
    "end": "2248039"
  },
  {
    "text": "I think we have one minute left um I think we might just call it 25",
    "start": "2249160",
    "end": "2254560"
  },
  {
    "text": "years okay if it's just instead okay one F 1.9 yeah it's uh yeah",
    "start": "2254560",
    "end": "2260680"
  },
  {
    "text": "it's a long time so uh how about we move on to the hangout room uh folks can ask you",
    "start": "2260680",
    "end": "2266619"
  },
  {
    "text": "questions there thank you again for an excellent talk uh folks if you want to chat with Justin for a few minutes we",
    "start": "2266619",
    "end": "2273040"
  },
  {
    "text": "can go to the hangout room and then I hope you join us for the fireside chat with Justin if you have any questions",
    "start": "2273040",
    "end": "2279880"
  },
  {
    "text": "for Justin on anything uh join us there in a few minutes",
    "start": "2279880",
    "end": "2284980"
  },
  {
    "text": "and thank you",
    "start": "2284980",
    "end": "2288000"
  },
  {
    "text": "[Music]",
    "start": "2290170",
    "end": "2295619"
  }
]