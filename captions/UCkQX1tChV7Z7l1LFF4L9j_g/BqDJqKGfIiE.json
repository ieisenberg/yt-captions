[
  {
    "start": "0",
    "end": "22000"
  },
  {
    "text": "[Music]",
    "start": "460",
    "end": "10840"
  },
  {
    "text": "hello everybody um my name is mikito takada um I'm here to talk about on the topic of um single page apps um with",
    "start": "13320",
    "end": "20840"
  },
  {
    "text": "this title let's get started and um I'm not going to like start going over all",
    "start": "20840",
    "end": "25960"
  },
  {
    "start": "22000",
    "end": "22000"
  },
  {
    "text": "right what is a single page app I'm just going to assume that you guys know already what that is um been out there for quite a while",
    "start": "25960",
    "end": "32200"
  },
  {
    "text": "technology has been out there and just start off with like the reasons why we write single page apps um I mean",
    "start": "32200",
    "end": "38680"
  },
  {
    "text": "obviously the first one is is just Rich interactions because if we don't have any JS running on the client side we're",
    "start": "38680",
    "end": "45039"
  },
  {
    "text": "not going to actually have access to the um to the events that we would like to have such as like a mouse click down",
    "start": "45039",
    "end": "51239"
  },
  {
    "text": "like you can access that I mean you could have links without JS but otherwise it would be impossible um",
    "start": "51239",
    "end": "57280"
  },
  {
    "text": "responsiveness so the speed of light imposes a certain limitation on latency",
    "start": "57280",
    "end": "62640"
  },
  {
    "text": "if you do your rendering on the server and um obviously that's going to be up",
    "start": "62640",
    "end": "68119"
  },
  {
    "text": "up to hundreds of milliseconds and that becomes kind of unacceptable even if we could do things without writing like",
    "start": "68119",
    "end": "73200"
  },
  {
    "text": "single page applications um finally like the third reason I think we write single page",
    "start": "73200",
    "end": "79240"
  },
  {
    "text": "applications is reuse at least hopefully this has been the promise for a long time that we can avoid duplicating logic",
    "start": "79240",
    "end": "86320"
  },
  {
    "text": "that we can write um our we can describe our views once um we can describe our business logic related to views and",
    "start": "86320",
    "end": "92640"
  },
  {
    "text": "models once and then we can just use that um both with with node both on the",
    "start": "92640",
    "end": "98200"
  },
  {
    "text": "server and on the client side at the same time there are some reasons why we would avoid single page",
    "start": "98200",
    "end": "104799"
  },
  {
    "text": "applications right um I think the first one is like lower productivity so as I said like I said um that reuse would be",
    "start": "104799",
    "end": "111960"
  },
  {
    "text": "one big component but um but at the same time with the current approaches that we're using it's still kind of more like right",
    "start": "111960",
    "end": "118840"
  },
  {
    "text": "once on the server and then once again for the client and that's well I'll talk get",
    "start": "118840",
    "end": "124799"
  },
  {
    "text": "into the details a little bit later um testing is also harder um as fry says",
    "start": "124799",
    "end": "130599"
  },
  {
    "text": "not sure if app runs perfectly or test framework is failing um the when when we",
    "start": "130599",
    "end": "137239"
  },
  {
    "text": "have um single page applications often they only run on the client side on the browser so then you end up using",
    "start": "137239",
    "end": "142920"
  },
  {
    "text": "something like headless webkit um for um for actually running your tests and",
    "start": "142920",
    "end": "148640"
  },
  {
    "text": "that's just not like a less way to interact with your test code or with your code because you're not going to",
    "start": "148640",
    "end": "153920"
  },
  {
    "text": "know why is it failing and you're not going to get that API access that you might",
    "start": "153920",
    "end": "160920"
  },
  {
    "text": "want um the time to interactivity is lower so even though we can respond to",
    "start": "160920",
    "end": "166720"
  },
  {
    "text": "like user clicks Faster by um triggering a render on the client side and updating",
    "start": "166720",
    "end": "172360"
  },
  {
    "text": "that information um the time it actually takes to load a single page app is still",
    "start": "172360",
    "end": "178280"
  },
  {
    "text": "um some somewhat of a barrier like you think about Gmail and you know you see a loading bar and you see any any other",
    "start": "178280",
    "end": "185000"
  },
  {
    "text": "like fairly large single page application there's always going to be some uh amount of time involved where",
    "start": "185000",
    "end": "190640"
  },
  {
    "text": "where you're just waiting for the application to load up its resources load up its data and stuff like that um",
    "start": "190640",
    "end": "196560"
  },
  {
    "text": "so the time to interactivity kind of suffers um and finally the pages can't be crawled so if you crawl a single page",
    "start": "196560",
    "end": "202319"
  },
  {
    "text": "app you'll often just get like an empty page and nothing is going to get rendered and that's um not necessarily a",
    "start": "202319",
    "end": "208720"
  },
  {
    "text": "problem if your clients have job script enabled but um but many search engines don't or if they do there's really no",
    "start": "208720",
    "end": "215640"
  },
  {
    "text": "predictability whether they're going to Cur uh whether they're going to be able to um crawl any of your",
    "start": "215640",
    "end": "221879"
  },
  {
    "text": "content um my starting point here for the talk really is um current best practice so you could think of backbone",
    "start": "221879",
    "end": "228760"
  },
  {
    "start": "222000",
    "end": "222000"
  },
  {
    "text": "and jQuery or you could think of like um Ember or angular or any of these other",
    "start": "228760",
    "end": "234120"
  },
  {
    "text": "Frameworks which are very good um and which solve certain sets of problems but",
    "start": "234120",
    "end": "239360"
  },
  {
    "text": "um at the the same time um as I mentioned there were some weaknesses that we currently um experience with",
    "start": "239360",
    "end": "244799"
  },
  {
    "text": "single page applications uh and in order to actually move forward and try to address some of those issues we really",
    "start": "244799",
    "end": "250519"
  },
  {
    "text": "need to get rid of um some things that are considered current best practice like MVC namespaces templating um and",
    "start": "250519",
    "end": "257000"
  },
  {
    "text": "I'm just going to present a few brief arguments um on that and then in the",
    "start": "257000",
    "end": "262120"
  },
  {
    "text": "second part of my talk I'm just going to talk more about um some of my more recent work um which has been um related",
    "start": "262120",
    "end": "268000"
  },
  {
    "text": "to um solving those uh issues that I mentioned earlier um by doing um serers",
    "start": "268000",
    "end": "275560"
  },
  {
    "text": "side rendering by doing snapshotting by doing using various",
    "start": "275560",
    "end": "280479"
  },
  {
    "text": "techniques so what's the ideal code base um I've been kind of trying to think about this for quite a while and um and",
    "start": "283720",
    "end": "291600"
  },
  {
    "text": "um well I mean we we somebody said we we've built things that are more complicated than the apps that we're",
    "start": "291600",
    "end": "297639"
  },
  {
    "text": "currently building we've built like Bridges we've built aircraft carriers and things like that um and the difference between these like really",
    "start": "297639",
    "end": "303720"
  },
  {
    "text": "physical things and the the applications that we often build is that um the failure modes are independent and that",
    "start": "303720",
    "end": "311520"
  },
  {
    "text": "the different functionality of um of real world things are not usually interrelated like if you build an",
    "start": "311520",
    "end": "317400"
  },
  {
    "text": "aircraft carrier um if the toilets overflow you're not going to launch the missiles because the missile system um",
    "start": "317400",
    "end": "323919"
  },
  {
    "start": "323000",
    "end": "323000"
  },
  {
    "text": "and the toilet system are two separate systems that are um not interconnected in any way and this is not necessarily",
    "start": "323919",
    "end": "329880"
  },
  {
    "text": "true of like a lot of applications where failure modes can be linked um and where",
    "start": "329880",
    "end": "335280"
  },
  {
    "text": "different modules are quite tightly coupled so they fail in so they don't fail",
    "start": "335280",
    "end": "342319"
  },
  {
    "text": "independently and really this is about complexity right it's it's it's a and I Define complexity just simply as code",
    "start": "343479",
    "end": "349039"
  },
  {
    "text": "that has remote inputs or remote effects um the idea being that if you're running a piece of code and then you depend on",
    "start": "349039",
    "end": "355400"
  },
  {
    "text": "something that happens somewhere there and you're not really sure what the connection with that somewhere where there is then you're you're going to",
    "start": "355400",
    "end": "361759"
  },
  {
    "text": "have either remote input or a remote effect and with like a good code base",
    "start": "361759",
    "end": "367720"
  },
  {
    "text": "ideally we'd need things to be it should it should be possible to load things independently it should be possible to",
    "start": "367720",
    "end": "373400"
  },
  {
    "text": "test things independently and it things should break independently um and this is kind of a prerequisite in some ways to um to",
    "start": "373400",
    "end": "380880"
  },
  {
    "text": "solving some of these problems related to um time to interactivity related to um um being",
    "start": "380880",
    "end": "388440"
  },
  {
    "text": "able to um pre-render and package things um in a smart way so so that's kind of why I I consider some of the uh",
    "start": "388440",
    "end": "395880"
  },
  {
    "text": "so-called best practices perhaps not ideal or perhaps at least worth um reevaluating a little bit so what's",
    "start": "395880",
    "end": "403440"
  },
  {
    "start": "402000",
    "end": "402000"
  },
  {
    "text": "wrong with MVC um here in the diagram well you'll just see like the basic way we describe",
    "start": "403440",
    "end": "411400"
  },
  {
    "text": "MVC right so models are the single source of TR truth um f observe the model changes and then we have",
    "start": "411400",
    "end": "418360"
  },
  {
    "text": "controllers that receive event from the Dom render templates and keep views and models in",
    "start": "418360",
    "end": "424120"
  },
  {
    "text": "sync and all this is kind of uncontroversial right so we have MVC right we have model",
    "start": "427000",
    "end": "433120"
  },
  {
    "text": "which is data and view which is presentation but what is the controller um is it something that routes URL fragments to methods is it",
    "start": "433120",
    "end": "439879"
  },
  {
    "text": "something that coordinates a set of views is it something that coordinates a model view pair is it something that",
    "start": "439879",
    "end": "445919"
  },
  {
    "text": "handles um Dom events for one view um I really don't know",
    "start": "445919",
    "end": "451440"
  },
  {
    "text": "um the word controller has gotten like way too many different meanings um we're",
    "start": "451440",
    "end": "456720"
  },
  {
    "text": "very familiar with the with the acronym MVC because of all the work that's been done on the server side but that doesn't",
    "start": "456720",
    "end": "463639"
  },
  {
    "text": "really mean that it's productive to actually describe everything as MVC um you can say that uh that a horse is a",
    "start": "463639",
    "end": "472800"
  },
  {
    "text": "type of car because you know you're familiar with um with horses or you're familiar with cars and not familiar with",
    "start": "472800",
    "end": "478120"
  },
  {
    "text": "horses either way but that doesn't mean that that that terminology necessarily like makes sense in that",
    "start": "478120",
    "end": "484159"
  },
  {
    "text": "context so I mean this is quite a few responsibilities right you receive",
    "start": "484159",
    "end": "490240"
  },
  {
    "text": "events from the D you render templates and you keep views and models in sync I mean what does this exactly even mean uh",
    "start": "490240",
    "end": "496720"
  },
  {
    "text": "why I mean I understand why we want to have MVC it's because when you say MVC people are like oh yeah MVC uh but like",
    "start": "496720",
    "end": "504840"
  },
  {
    "text": "it's not necessarily applicable to this to the the client side problem um and here's my definition of a",
    "start": "504840",
    "end": "510960"
  },
  {
    "text": "controller it's it's a it's a familiar word that makes writing glue code sound like a design",
    "start": "510960",
    "end": "516080"
  },
  {
    "text": "pattern so you know you take controller code you replace it with the word Like Glue code and and you'll be pretty good",
    "start": "516080",
    "end": "522479"
  },
  {
    "text": "um and and the reason for this really is that client side is more like having a lot of models having a lot of views and",
    "start": "522479",
    "end": "530040"
  },
  {
    "text": "then when you put in the controller it becomes kind of um confusing um you",
    "start": "530040",
    "end": "535560"
  },
  {
    "text": "you'll have many models and many views interacting on a single page and they'll be inter acting for a long",
    "start": "535560",
    "end": "541279"
  },
  {
    "text": "time and having those controllers um between the model and view um they they",
    "start": "541279",
    "end": "546320"
  },
  {
    "text": "be easily become like magnets for housekeeping code for glue code um",
    "start": "546320",
    "end": "551640"
  },
  {
    "text": "basically because it's it's easy to get tempted to let's add another method that knows about these two models and these",
    "start": "551640",
    "end": "557279"
  },
  {
    "text": "two views into the controller um it seems like a good place since you know it's MVC and we should have um all the",
    "start": "557279",
    "end": "563560"
  },
  {
    "text": "three different components um but that has a lot of disadvantages because it",
    "start": "563560",
    "end": "569040"
  },
  {
    "text": "makes the code harder to um separate into different parts it makes it harder to test because now a lot of your code",
    "start": "569040",
    "end": "575120"
  },
  {
    "text": "is in in in one thing that depends on like a lot of different other things so",
    "start": "575120",
    "end": "580240"
  },
  {
    "text": "you end up having to write like integration tests where you would have been wanting to write um unit",
    "start": "580240",
    "end": "587680"
  },
  {
    "start": "587000",
    "end": "587000"
  },
  {
    "text": "tests so I think controllers Must Die um like when you have one request and",
    "start": "587920",
    "end": "594839"
  },
  {
    "text": "one response it's fine because it doesn't really matter what kind of mess you create when you're like writing ad",
    "start": "594839",
    "end": "600839"
  },
  {
    "text": "hoc like I I almost think of it as like writing CGI scripts um like where you",
    "start": "600839",
    "end": "606320"
  },
  {
    "text": "just get a request and then you can do whatever and the main thing is that you return some HTML back um but with single",
    "start": "606320",
    "end": "612240"
  },
  {
    "text": "page apps we have um a persistent state so we're not we're",
    "start": "612240",
    "end": "617720"
  },
  {
    "text": "not just trying to like run a one-off task we're trying to set up the world in a particular configuration and then we",
    "start": "617720",
    "end": "624200"
  },
  {
    "text": "want to keep interacting with that world through like user events so we might as well try to replace controllers move",
    "start": "624200",
    "end": "631120"
  },
  {
    "text": "that codee away into different places and try to rather have like generic mechanisms that would um that would uh",
    "start": "631120",
    "end": "638320"
  },
  {
    "text": "solve at least some of these problems so I mean you can avoid having gluc code right but you can at least",
    "start": "638320",
    "end": "645760"
  },
  {
    "text": "move towards the direction where where most things are um mediated by mechanism",
    "start": "645760",
    "end": "650880"
  },
  {
    "text": "rather than mediated by I will write this this case specific code for this",
    "start": "650880",
    "end": "656680"
  },
  {
    "text": "specific set of model view and controller",
    "start": "656680",
    "end": "661240"
  },
  {
    "text": "um and this is like what I call our Mo modern day Lego we have a thing the",
    "start": "662639",
    "end": "667959"
  },
  {
    "text": "thing has a public API and the thing emits events um and this is like just a",
    "start": "667959",
    "end": "673399"
  },
  {
    "text": "basic building block that we can use to build almost anything um and if we start thinking in terms of these reusable",
    "start": "673399",
    "end": "679839"
  },
  {
    "text": "things rather than um one-off scripts uh things get easier um we can put those thing pieces",
    "start": "679839",
    "end": "687920"
  },
  {
    "start": "685000",
    "end": "685000"
  },
  {
    "text": "together and I'll talk about how in a while um but the general idea being that basically you just have one stage where",
    "start": "687920",
    "end": "694519"
  },
  {
    "text": "you connect these two things and then they interact with each other through events and through their public apis and",
    "start": "694519",
    "end": "701839"
  },
  {
    "text": "that basically means that um that that the model doesn't have to know about the",
    "start": "701839",
    "end": "707279"
  },
  {
    "text": "view uh the view knows that it can take one model or X models but it doesn't need to know what the specific um models",
    "start": "707279",
    "end": "714480"
  },
  {
    "text": "are and so when you get like an user event like a click um that becomes an API call on the",
    "start": "714480",
    "end": "720040"
  },
  {
    "text": "model and then that returns an event on the model um that's a change um and that",
    "start": "720040",
    "end": "725639"
  },
  {
    "text": "updates one or more views which then is reflected in the",
    "start": "725639",
    "end": "732079"
  },
  {
    "text": "Dom so we've got apis and events and then we've got bindings for those things",
    "start": "732279",
    "end": "737360"
  },
  {
    "text": "um and the benefit of this is really that then our code base becomes more",
    "start": "737360",
    "end": "742440"
  },
  {
    "text": "separable into different pieces so we can test unit test our views we can unit test our models separately from each",
    "start": "742440",
    "end": "748680"
  },
  {
    "text": "other and there is no like sanctioned place for um code that like collects different",
    "start": "748680",
    "end": "755959"
  },
  {
    "text": "dependencies so um you're not going to have like a place where you you'll get tempted to um to add more knowledge",
    "start": "755959",
    "end": "762000"
  },
  {
    "text": "about oh this specific View and this specific model um with these specific names will be connected like this um",
    "start": "762000",
    "end": "768959"
  },
  {
    "text": "instead you know you'll have um things that will be connected to each other",
    "start": "768959",
    "end": "774199"
  },
  {
    "text": "through events and through API calls",
    "start": "774199",
    "end": "778880"
  },
  {
    "start": "778000",
    "end": "778000"
  },
  {
    "text": "uh namespaces um probably if you've ever read anything about JavaScript organization um you'll you have run into",
    "start": "779680",
    "end": "785600"
  },
  {
    "text": "the recommendation of using",
    "start": "785600",
    "end": "789279"
  },
  {
    "text": "namespaces um here's somebody saying you know it keeps my Global scope clean it enables name spacing you know provides a",
    "start": "794240",
    "end": "799680"
  },
  {
    "text": "nice way to separate public and private methods and Fields and I say no um the problem with namespaces really",
    "start": "799680",
    "end": "807519"
  },
  {
    "start": "804000",
    "end": "804000"
  },
  {
    "text": "is that choices about privacy have have to made on a global have to be made on a global basis so you only have basically",
    "start": "807519",
    "end": "813800"
  },
  {
    "text": "two choices one is so let's look at this code um so you've got my app food. bar",
    "start": "813800",
    "end": "818839"
  },
  {
    "text": "which is something um it's got a public function called do bar and then a private utility",
    "start": "818839",
    "end": "824720"
  },
  {
    "text": "function um and in this case you know you're just assigning it to my app fubar so um so the private utility is globally",
    "start": "824720",
    "end": "834199"
  },
  {
    "text": "public or you can do this one which is basically you've got an A closure and",
    "start": "834199",
    "end": "839279"
  },
  {
    "text": "wrapping um that module and um private util is within that and now it's globally private so it's hidden from",
    "start": "839279",
    "end": "845680"
  },
  {
    "text": "every other um possible user of that piece of code [Music]",
    "start": "845680",
    "end": "851519"
  },
  {
    "text": "um but what we with but what this means basically is that with",
    "start": "851519",
    "end": "857959"
  },
  {
    "start": "853000",
    "end": "853000"
  },
  {
    "text": "namespaces um we need to we start exporting things into the global scope because that's the only way we can like",
    "start": "857959",
    "end": "863560"
  },
  {
    "text": "have this thing here and this thing here um reuse the same functionality or reuse the same code and that creates",
    "start": "863560",
    "end": "870920"
  },
  {
    "text": "complexity because now this guy knows the name of this guy and this guy knows the name of this guy",
    "start": "870920",
    "end": "876839"
  },
  {
    "text": "um and now most of the code has like remote inputs and remote effects and",
    "start": "876839",
    "end": "881880"
  },
  {
    "text": "there really isn't any clear structure right so you run into timing conflicts where you oh we didn't load this thing",
    "start": "881880",
    "end": "887600"
  },
  {
    "text": "before this thing because it depended on whatever um these kinds of um issues so",
    "start": "887600",
    "end": "893880"
  },
  {
    "text": "so that's what I see as the problem and what I really want with with um as a replacement for namespace is something",
    "start": "893880",
    "end": "899680"
  },
  {
    "start": "894000",
    "end": "894000"
  },
  {
    "text": "that would actually enforce information hiding so in O terms we have public and we have private and we have like",
    "start": "899680",
    "end": "905199"
  },
  {
    "text": "globally public globally private okay um but what I actually want is protected so I would want something where code that",
    "start": "905199",
    "end": "912360"
  },
  {
    "text": "is related to the private util can access that and by related I mean it's in the same subsystem whatever that",
    "start": "912360",
    "end": "917959"
  },
  {
    "text": "means for your application and code that isn't related to it has no access to it at",
    "start": "917959",
    "end": "924199"
  },
  {
    "text": "all and this is of course modules um and you may have heard of commonjs and AMD",
    "start": "926600",
    "end": "933480"
  },
  {
    "text": "but I'll just quickly Define what modules are I mean modules are basically depend pieces of code that can be loaded",
    "start": "933480",
    "end": "939120"
  },
  {
    "text": "and this is the key part in order to hide the implementation details behind an interface and that's the part that",
    "start": "939120",
    "end": "944360"
  },
  {
    "text": "people usually Miss um nodejs has its own um built-in module",
    "start": "944360",
    "end": "949920"
  },
  {
    "text": "system um so my approach to this has always been just to write for node.js and then um have like a packaging",
    "start": "949920",
    "end": "956279"
  },
  {
    "text": "solution that makes that same code um available in the",
    "start": "956279",
    "end": "961759"
  },
  {
    "text": "browser but so what is a module really basically basically a module is some looks something like this right you have",
    "start": "962519",
    "end": "969199"
  },
  {
    "start": "963000",
    "end": "963000"
  },
  {
    "text": "a thing that is a module you have um some dependencies like jQuery you're",
    "start": "969199",
    "end": "974240"
  },
  {
    "text": "requiring it through a requir statement rather than accessing it by like through a global name space or something like",
    "start": "974240",
    "end": "979880"
  },
  {
    "text": "that you have something that's defined there might be might be a class might be",
    "start": "979880",
    "end": "985000"
  },
  {
    "text": "a set of functions and then you have a single export statement um that takes that thing and returns it",
    "start": "985000",
    "end": "992160"
  },
  {
    "text": "back so basically by default everything within this um module is is um is",
    "start": "992160",
    "end": "997880"
  },
  {
    "text": "private except for the thing that you assign to module. exorts so I mean it's a convention it's",
    "start": "997880",
    "end": "1004480"
  },
  {
    "text": "a convention for saying oh these are the things we depend on and it's a convention for if we have one thing that",
    "start": "1004480",
    "end": "1010040"
  },
  {
    "text": "one thing only has one public interface um so isn't this the same thing as namespace well not even close",
    "start": "1010040",
    "end": "1017240"
  },
  {
    "start": "1013000",
    "end": "1013000"
  },
  {
    "text": "um first of all the default is privacy so you have to explicitly say oh this is my public interface so you don't really",
    "start": "1017240",
    "end": "1023639"
  },
  {
    "text": "accidentally leak things um things don't have Global names and all of the dependencies go",
    "start": "1023639",
    "end": "1028798"
  },
  {
    "text": "through require so you can actually have policy that um that that is in forc on the requires you can impose",
    "start": "1028799",
    "end": "1035199"
  },
  {
    "text": "privacy and most importantly modules can be composed into",
    "start": "1035199",
    "end": "1040240"
  },
  {
    "text": "packages so even if you're familiar with um AMD you might not actually have seen the whole packaging part um so when",
    "start": "1040240",
    "end": "1047160"
  },
  {
    "start": "1046000",
    "end": "1046000"
  },
  {
    "text": "you're moving from modules to packages uh modules without any hierarchy are basically just fancy namespaces right I",
    "start": "1047160",
    "end": "1052840"
  },
  {
    "text": "mean they do impose more structure than namespaces they do impose the discipline of using a requir statement and only",
    "start": "1052840",
    "end": "1059039"
  },
  {
    "text": "having one export but um but packages um are really the where where where it's",
    "start": "1059039",
    "end": "1065799"
  },
  {
    "text": "at um packages are like hierarchies of modules so think if each module is a file you put them in a directory you",
    "start": "1065799",
    "end": "1072960"
  },
  {
    "text": "decide that one of those modules is the index for that directory um the thing",
    "start": "1072960",
    "end": "1078679"
  },
  {
    "text": "that that determines what gets exported out of that directory um that is a package so it's",
    "start": "1078679",
    "end": "1085919"
  },
  {
    "text": "it's a set of modules behind um a single public",
    "start": "1085919",
    "end": "1091360"
  },
  {
    "start": "1094000",
    "end": "1094000"
  },
  {
    "text": "interface so several modules behind a single interface but also several modules behind a single HTTP gut so I me",
    "start": "1095679",
    "end": "1102000"
  },
  {
    "text": "a package is just a concept a structure that you could load with a single um HTTP get and when I'm talking about",
    "start": "1102000",
    "end": "1108880"
  },
  {
    "text": "index JS it's basically just another module this time just a module that exports something out so it might export",
    "start": "1108880",
    "end": "1115000"
  },
  {
    "text": "the fu and it might export another function and everything that's not exported um is private it's only",
    "start": "1115000",
    "end": "1121159"
  },
  {
    "text": "accessible to modules within that same",
    "start": "1121159",
    "end": "1125559"
  },
  {
    "start": "1126000",
    "end": "1126000"
  },
  {
    "text": "package and what's a package concretely um so it's something like this it's a closure right it it's something that",
    "start": "1126520",
    "end": "1132080"
  },
  {
    "text": "defines a require statement so that you can use that require in your modules it'll contain the code for several",
    "start": "1132080",
    "end": "1137679"
  },
  {
    "text": "different files uh and finally it'll have like something that assigns something to a global so",
    "start": "1137679",
    "end": "1144080"
  },
  {
    "text": "window. my packages modules index.js um the idea being that so we're",
    "start": "1144080",
    "end": "1150200"
  },
  {
    "text": "taking the the exports from uh from the index JS and then putting them on accessible under um window. my package",
    "start": "1150200",
    "end": "1157600"
  },
  {
    "text": "as a single Global um so what should go into that",
    "start": "1157600",
    "end": "1163520"
  },
  {
    "start": "1161000",
    "end": "1161000"
  },
  {
    "text": "index JS well ideally very few things um it should be possible to load the package without anything happening uh",
    "start": "1163520",
    "end": "1169120"
  },
  {
    "text": "and what I mean by that is that the modules within the package should be um",
    "start": "1169120",
    "end": "1174720"
  },
  {
    "text": "should only Define things not create new um State um so if you think about an",
    "start": "1174720",
    "end": "1182159"
  },
  {
    "text": "object definition right and then you have an instance of that object you should only Define the objects but not",
    "start": "1182159",
    "end": "1187919"
  },
  {
    "text": "never create instances of of those objects um any code that creates",
    "start": "1187919",
    "end": "1193080"
  },
  {
    "text": "instances of objects or Alters the global State should go into an initialization script uh which I call",
    "start": "1193080",
    "end": "1199380"
  },
  {
    "text": "[Music] init and in it is like the guy who sets up a particular stage um it creates",
    "start": "1199380",
    "end": "1207120"
  },
  {
    "text": "variables it creates instances of objects within that module it sets up the module for uh sets up the package",
    "start": "1207120",
    "end": "1212280"
  },
  {
    "text": "for um for use um it might let's say that the package contains some views and some models it'll initialize those",
    "start": "1212280",
    "end": "1218679"
  },
  {
    "text": "models it'll render some views and then it'll say oh vewa is related to model",
    "start": "1218679",
    "end": "1224400"
  },
  {
    "text": "B and then once it's done it just gets out of the way it doesn't it's not involved in any of the interactions",
    "start": "1224400",
    "end": "1230200"
  },
  {
    "text": "after that um it just initializes those views and then gets out of the way um and this means that you could",
    "start": "1230200",
    "end": "1237679"
  },
  {
    "text": "have like a different kind of setup right because the views um the views themselves don't have any Global",
    "start": "1237679",
    "end": "1243799"
  },
  {
    "text": "state so you could set up like different kinds of um test scripts that would",
    "start": "1243799",
    "end": "1249320"
  },
  {
    "text": "actually set up a different kind of interaction like for a unit test or for a different kind of interaction uh",
    "start": "1249320",
    "end": "1256080"
  },
  {
    "text": "integration test and the idea here is really that we isolate the side effects or the nasti",
    "start": "1256080",
    "end": "1262320"
  },
  {
    "text": "bits into one place so everything that creates new variables um is in one place",
    "start": "1262320",
    "end": "1267960"
  },
  {
    "text": "if you need to figure out how does this package work how does what happens when I um initialize this package you just",
    "start": "1267960",
    "end": "1273520"
  },
  {
    "text": "read the init function and you're not going to be surprised by something that you know creates an instance like every",
    "start": "1273520",
    "end": "1278960"
  },
  {
    "text": "time you access something it creates a new Global variable or something like that like nothing that should",
    "start": "1278960",
    "end": "1284279"
  },
  {
    "text": "happen and this makes possible to create um unit tests that do different kinds of",
    "start": "1284279",
    "end": "1291720"
  },
  {
    "text": "things so it's all about information hiding really um and this is something that a lot of the packaging Solutions",
    "start": "1291720",
    "end": "1297320"
  },
  {
    "text": "haven't gotten right that the most important part really is the information hiding so packages really exist so that",
    "start": "1297320",
    "end": "1303679"
  },
  {
    "text": "you can hide the implementation details behind a single interface and you can still share that",
    "start": "1303679",
    "end": "1308760"
  },
  {
    "text": "code within the package so all I can say is make sure you use a system that you",
    "start": "1308760",
    "end": "1313840"
  },
  {
    "text": "know actually creates packages and enforces this kind of information hiding and there's more on this topic um",
    "start": "1313840",
    "end": "1320039"
  },
  {
    "text": "on my book as well um glue. JS is one a packaging system that I wrote um just got a like",
    "start": "1320039",
    "end": "1327480"
  },
  {
    "text": "simple command line interface you can just include a set of files you'll say oh I want the output to be this file",
    "start": "1327480",
    "end": "1333600"
  },
  {
    "text": "name um I want the global to be called my package um and then if you do a require jQuery I want that to return",
    "start": "1333600",
    "end": "1339720"
  },
  {
    "text": "window. dooll and it creates a package um um out",
    "start": "1339720",
    "end": "1345840"
  },
  {
    "text": "of these different modules and then make sure that um that the output gets exported Under This",
    "start": "1345840",
    "end": "1351000"
  },
  {
    "text": "Global my package and it's based around basically just like having normal commonjs node-based",
    "start": "1351000",
    "end": "1359000"
  },
  {
    "text": "modules um packaging it really isn't about performance it's about maintainability so so it's really important um it's not something that you",
    "start": "1360080",
    "end": "1366720"
  },
  {
    "text": "can just say oh well we won't do any packaging because well we don't care about the performance right now um it's",
    "start": "1366720",
    "end": "1372240"
  },
  {
    "text": "more again about hiding the internals and there are other options you can use AMD um which there's",
    "start": "1372240",
    "end": "1378679"
  },
  {
    "text": "probably been a talk at this conference about um and definitely there's info um online as well um I think it's mostly a",
    "start": "1378679",
    "end": "1385480"
  },
  {
    "text": "bike debate the real thing is really just organize your code using modules and",
    "start": "1385480",
    "end": "1393240"
  },
  {
    "start": "1393000",
    "end": "1393000"
  },
  {
    "text": "packages so templating was one of our good ideas um instead of rendering",
    "start": "1401480",
    "end": "1406760"
  },
  {
    "text": "things on the server we'll have a set of templates that when you give them some data they turn into a string of HTML and",
    "start": "1406760",
    "end": "1413720"
  },
  {
    "text": "then later on you know we'll manipulate that HTML through the Dom or jQuery um and I mean this is the Bas",
    "start": "1413720",
    "end": "1419240"
  },
  {
    "text": "recommendation I think backbone gives you right they they have a very very U minimal view that doesn't really say",
    "start": "1419240",
    "end": "1425159"
  },
  {
    "text": "anything about what a VI layer should do they've got good models but um and and so this is where you end up often you'll",
    "start": "1425159",
    "end": "1430799"
  },
  {
    "text": "just write some templates that manipulate HTML and then you have a controller that does like a one-off task",
    "start": "1430799",
    "end": "1436159"
  },
  {
    "text": "that um that manipulates that HTML in some way way and you so you think about a a web page or a single page app as a",
    "start": "1436159",
    "end": "1443760"
  },
  {
    "text": "series of string processing tasks um but the problem with templates really is that you can't really Nest them and",
    "start": "1443760",
    "end": "1449559"
  },
  {
    "text": "there's a lot of manual work involved in um in rendering them in passing data to them in actually binding Dom events and",
    "start": "1449559",
    "end": "1456919"
  },
  {
    "text": "making them interactive um so I think declarative views and bindings are actually the way",
    "start": "1456919",
    "end": "1463279"
  },
  {
    "text": "to go and I'll I'll talk about those a little bit more um",
    "start": "1463279",
    "end": "1468520"
  },
  {
    "text": "later on so uh here's the state-of-the-art um",
    "start": "1468520",
    "end": "1475720"
  },
  {
    "start": "1469000",
    "end": "1469000"
  },
  {
    "text": "and I'm uh I hoping I didn't go too fast um you have entangled controllers so you",
    "start": "1475720",
    "end": "1481600"
  },
  {
    "text": "you rely on controllers that coordinate very many different things that run these oneoff kind of tasks which leads",
    "start": "1481600",
    "end": "1488279"
  },
  {
    "text": "to kind of having big integration tests you don't you end up using name spaces where you don't hide um you don't hide",
    "start": "1488279",
    "end": "1496919"
  },
  {
    "text": "um information like the implementation details of views or models so the code",
    "start": "1496919",
    "end": "1502559"
  },
  {
    "text": "is hard to split into small pieces hard to unit test separately and it's hard to load",
    "start": "1502559",
    "end": "1509840"
  },
  {
    "text": "independently uh you have templating that requires a lot of housekeeping so the views can't be rendered on the",
    "start": "1509840",
    "end": "1516200"
  },
  {
    "text": "server or if they can it's it's a one-off process again it's it's it's setting up some templates it's setting",
    "start": "1516200",
    "end": "1522039"
  },
  {
    "text": "up some namespace it's setting up some controllers um and it becomes kind of quite tedious",
    "start": "1522039",
    "end": "1530158"
  },
  {
    "text": "so um having covered some of that base stuff basically controllers Must Die Nam",
    "start": "1530760",
    "end": "1537679"
  },
  {
    "text": "spaces replace them with packages and templates are like force you to write",
    "start": "1537679",
    "end": "1543720"
  },
  {
    "text": "too much um housekeeping code um I'm just going to have a look at like where I think we're going to be going",
    "start": "1543720",
    "end": "1550399"
  },
  {
    "text": "hopefully um towards A Brave New World where we'll be U maybe applying these Concepts constructs differently",
    "start": "1550399",
    "end": "1558640"
  },
  {
    "text": "um and trying to solve again some of these um basic problems so again I started off with the reasons to avoid",
    "start": "1558640",
    "end": "1564600"
  },
  {
    "text": "single page applications right um the the ones I listed were lower productivity testing is harder um time",
    "start": "1564600",
    "end": "1570840"
  },
  {
    "text": "to interactivity is worse and the pages can't be",
    "start": "1570840",
    "end": "1575720"
  },
  {
    "text": "crawled and I think there's like a benchmark for all of these um for lower",
    "start": "1576320",
    "end": "1581480"
  },
  {
    "text": "productivity basically I would be a happy man if writing a single page application would",
    "start": "1581480",
    "end": "1587320"
  },
  {
    "text": "be as simple as as writing an HTML page a basic HTML page when it comes to testing I'd be",
    "start": "1587320",
    "end": "1593440"
  },
  {
    "text": "very happy if I could use mocha or or just like run things run simple tests",
    "start": "1593440",
    "end": "1599240"
  },
  {
    "text": "from the command line have them complete fast not have to worry about like running a headless web kit or or some",
    "start": "1599240",
    "end": "1605840"
  },
  {
    "text": "other um browser emulator in terms of interactivity um",
    "start": "1605840",
    "end": "1612279"
  },
  {
    "text": "basically static page is the best we can do right it's something that we've written the HTML in advance there's no",
    "start": "1612279",
    "end": "1619159"
  },
  {
    "text": "JavaScript running um the page just returns and you can immediately see um",
    "start": "1619159",
    "end": "1624200"
  },
  {
    "text": "the results of that page um and then in terms of crawlability well that's actually related to the whole static",
    "start": "1624200",
    "end": "1630799"
  },
  {
    "text": "page thing where um where static Pages work with curl but",
    "start": "1630799",
    "end": "1637039"
  },
  {
    "text": "single page applications don't um VI Json is basically a view",
    "start": "1637039",
    "end": "1643559"
  },
  {
    "text": "layer it's very Alpha quality it's not public yet um that I've been working on um it works with backbone it works with",
    "start": "1643559",
    "end": "1649679"
  },
  {
    "text": "um something called mundle model which is just an alternative model layer I've been playing around",
    "start": "1649679",
    "end": "1655039"
  },
  {
    "text": "with um the rest of the talk is really about the ideas behind it um which you should steal as much as the library",
    "start": "1655039",
    "end": "1661519"
  },
  {
    "text": "itself that's not quite yet public um it uses a bunch of um already public um",
    "start": "1661519",
    "end": "1669159"
  },
  {
    "text": "modules that I've written um for support um including glue. JS and some other",
    "start": "1669159",
    "end": "1675120"
  },
  {
    "text": "things so what are the problems that I'm trying",
    "start": "1675120",
    "end": "1680880"
  },
  {
    "text": "to look at here um when I'm thinking about how are we going to do rendering for single page applications hopefully",
    "start": "1680880",
    "end": "1687559"
  },
  {
    "text": "in the future um one is um productivity just basically just trying to get to that HTML Benchmark or that Benchmark of",
    "start": "1687559",
    "end": "1695960"
  },
  {
    "text": "the ease of writing a HTML page um cross environment rendering or testing so um I",
    "start": "1695960",
    "end": "1702559"
  },
  {
    "text": "would like to be able to run my views in node and just have them return that markup that I wrote before I would like",
    "start": "1702559",
    "end": "1709440"
  },
  {
    "text": "to be able to test them in any environment so I wouldn't need to have run a browser separately um and I would like to have",
    "start": "1709440",
    "end": "1715679"
  },
  {
    "text": "instant interactivity so I would like the page to load as quickly as it can",
    "start": "1715679",
    "end": "1721600"
  },
  {
    "text": "and I would prefer if that page would also be um crawlable by search engines in other words that it it would actually",
    "start": "1721600",
    "end": "1728360"
  },
  {
    "text": "show something useful um even without JavaScript turned on not necessarily work perfectly but",
    "start": "1728360",
    "end": "1734960"
  },
  {
    "text": "well enough for a search engine uh now there's a lot of components here",
    "start": "1734960",
    "end": "1740799"
  },
  {
    "start": "1737000",
    "end": "1737000"
  },
  {
    "text": "to cover and I can only give you like a like a brief overview of these different kinds of things but I covered these kind",
    "start": "1740799",
    "end": "1748000"
  },
  {
    "text": "of um things on the on the left um earlier there's an init script there's a model there's a view um you've",
    "start": "1748000",
    "end": "1754440"
  },
  {
    "text": "structured your code so that these things are reusable um and then there's a set of mechanisms that lives around",
    "start": "1754440",
    "end": "1761000"
  },
  {
    "text": "that that actually makes it possible for us to have fast rendered types to have",
    "start": "1761000",
    "end": "1766640"
  },
  {
    "text": "fairly productive um a fairly productive environment to work in um and these I'll talk about in",
    "start": "1766640",
    "end": "1777039"
  },
  {
    "start": "1777000",
    "end": "1777000"
  },
  {
    "text": "individually so productivity again it should feel as productive as HTML um the",
    "start": "1777039",
    "end": "1782440"
  },
  {
    "text": "approach that V Json has taken is the one that many other Frameworks have taken which is basically uses",
    "start": "1782440",
    "end": "1787480"
  },
  {
    "text": "declarative views and bindings um a declarative view is basically you say what the computation that should be done",
    "start": "1787480",
    "end": "1793240"
  },
  {
    "text": "is and not how to compute it um in other words you say oh I've got this piece of",
    "start": "1793240",
    "end": "1799320"
  },
  {
    "start": "1796000",
    "end": "1796000"
  },
  {
    "text": "HTML um I wanted to show this model um and that's it you don't tell it",
    "start": "1799320",
    "end": "1805000"
  },
  {
    "text": "how you will show it you just say all right I want this piece of information to be shown here um instead of the way",
    "start": "1805000",
    "end": "1811880"
  },
  {
    "text": "in which you do it if you'd write it with jQuery which would be you know when X is added create element assign value",
    "start": "1811880",
    "end": "1817120"
  },
  {
    "text": "blah blah blah like you tell tell it all the steps and that's just because like in most cases we can just kind of um use",
    "start": "1817120",
    "end": "1825480"
  },
  {
    "text": "a few fairly simple patterns to to show um information and we don't really need",
    "start": "1825480",
    "end": "1831440"
  },
  {
    "text": "to be writing all this um housekeeping code",
    "start": "1831440",
    "end": "1837080"
  },
  {
    "text": "um so the idea here um is basically that you'll say specify binding between the",
    "start": "1837080",
    "end": "1843600"
  },
  {
    "text": "data and the HTML um using some sort of name so you'll have a view right the view will refer to a model by name",
    "start": "1843600",
    "end": "1850000"
  },
  {
    "start": "1846000",
    "end": "1846000"
  },
  {
    "text": "there's going to be a name resolution bit um that takes that specific model and then it creates an event",
    "start": "1850000",
    "end": "1855840"
  },
  {
    "text": "registration on that so the thing on the left basically happens when you instantiate a specific View and then the",
    "start": "1855840",
    "end": "1863600"
  },
  {
    "text": "model data changes while the model runs uh triggers that event and runs the registered code and then the view gets",
    "start": "1863600",
    "end": "1872039"
  },
  {
    "text": "updated it's quite simple but in by reducing the interactions to between the view and the model to this um it becomes",
    "start": "1872039",
    "end": "1879720"
  },
  {
    "text": "a lot easier to actually do rendering on the server side as well as on the client side um here's an example of a",
    "start": "1879720",
    "end": "1886440"
  },
  {
    "start": "1885000",
    "end": "1885000"
  },
  {
    "text": "declarative view right um there is isn't really like that much to it the idea",
    "start": "1886440",
    "end": "1891799"
  },
  {
    "text": "being you know you bind some name here it's todos um it's a collection and you want the title of",
    "start": "1891799",
    "end": "1898679"
  },
  {
    "text": "that um of of the models within the within the um todos collection to be",
    "start": "1898679",
    "end": "1904000"
  },
  {
    "text": "shown uh and that'll render like a list with the items that you wanted to have",
    "start": "1904000",
    "end": "1909320"
  },
  {
    "text": "there so you don't really have to go into the details of oh okay well if a to-do is removed if a to-do is added",
    "start": "1909320",
    "end": "1914399"
  },
  {
    "text": "what are you going to do um it'll just update itself based so that it reflects",
    "start": "1914399",
    "end": "1919639"
  },
  {
    "text": "the content of the collection and again this is not really cutting edge stuff right it's it's",
    "start": "1919639",
    "end": "1924720"
  },
  {
    "text": "something that has already existed in in in in um other um view rendering or view",
    "start": "1924720",
    "end": "1929799"
  },
  {
    "text": "layers um it's just that being able to do this on the Node side um and there are like three kinds",
    "start": "1929799",
    "end": "1935440"
  },
  {
    "start": "1933000",
    "end": "1933000"
  },
  {
    "text": "of declarative views that you can reduce things to so one is you know I have this thing that reflects this data so I just",
    "start": "1935440",
    "end": "1941240"
  },
  {
    "text": "need to render you know the name the title whatever and there's I have this group of things and I want to show that",
    "start": "1941240",
    "end": "1947080"
  },
  {
    "text": "collection in this place so you'll have a collection View and then the third one is you know you have an if statement",
    "start": "1947080",
    "end": "1953120"
  },
  {
    "text": "basically you have a piece of logic and you want to show different things based on the result um of that",
    "start": "1953120",
    "end": "1961279"
  },
  {
    "text": "expression and so a lot of problems really reduced down to these which is kind of obvious since it's like a",
    "start": "1961279",
    "end": "1968919"
  },
  {
    "text": "variable a for Loop and a if statement right and that's what we use to program",
    "start": "1968919",
    "end": "1975240"
  },
  {
    "text": "so um so declarative views can definitely itely um go pretty far um in",
    "start": "1975240",
    "end": "1981120"
  },
  {
    "text": "representing um like the different kinds of things that we want to show in in in single page",
    "start": "1981120",
    "end": "1988200"
  },
  {
    "text": "applications um V Json does some things differently so it's fairly node oriented or it's fairly JavaScript oriented",
    "start": "1988600",
    "end": "1994559"
  },
  {
    "text": "really um a you can just take something like a a template um and compile that",
    "start": "1994559",
    "end": "2001799"
  },
  {
    "text": "down and and the result of that is not actually a um a function but a actual object or an actual object prototype",
    "start": "2001799",
    "end": "2008240"
  },
  {
    "text": "definition that is instantiable so what you get as the result is basically an object that you",
    "start": "2008240",
    "end": "2014360"
  },
  {
    "text": "can say all right New View and it's got a render method and it's got a few other helper methods but beyond that",
    "start": "2014360",
    "end": "2022360"
  },
  {
    "text": "um but beyond that that um it's just a normal object like an normal um ES3",
    "start": "2022360",
    "end": "2029320"
  },
  {
    "text": "prototype object rather than like somebody's um interpretation of what class inheritance should",
    "start": "2029320",
    "end": "2035639"
  },
  {
    "text": "be and you can run it inside not mode so you could actually just instantiate it and then console log it and it'll run in",
    "start": "2035639",
    "end": "2043039"
  },
  {
    "text": "either the server or on the client um and the general idea being you",
    "start": "2043039",
    "end": "2050878"
  },
  {
    "start": "2048000",
    "end": "2048000"
  },
  {
    "text": "know you have some markup you've got a view compiler the name view Json really comes from the idea that all the views",
    "start": "2050879",
    "end": "2057440"
  },
  {
    "text": "compile down to Json which is like used as an intermediate representation and then that Json compiles to actual JS",
    "start": "2057440",
    "end": "2064440"
  },
  {
    "text": "objects um this is basically mostly so that if you want if you want to like add",
    "start": "2064440",
    "end": "2070158"
  },
  {
    "text": "new things to your view markup or declarative views like new expressions or internationalization or things like",
    "start": "2070159",
    "end": "2076240"
  },
  {
    "text": "that you can you have a place where you can do",
    "start": "2076240",
    "end": "2080200"
  },
  {
    "start": "2081000",
    "end": "2081000"
  },
  {
    "text": "that um so we want to do cross environment rendering um we should it should be e um easy to test the code and",
    "start": "2081440",
    "end": "2089200"
  },
  {
    "text": "it should be easy to render um a view as a static page so and the same code",
    "start": "2089200",
    "end": "2094240"
  },
  {
    "text": "should run everywhere so um the way I've approaches is basically um to reduce D",
    "start": "2094240",
    "end": "2099920"
  },
  {
    "text": "manipulation directly um and instead uh use these declarative views that have",
    "start": "2099920",
    "end": "2105320"
  },
  {
    "text": "like fairly well-defined um interactions and then use shims that",
    "start": "2105320",
    "end": "2110960"
  },
  {
    "text": "change the rendering environment um and allow you to run the same code in um",
    "start": "2110960",
    "end": "2116880"
  },
  {
    "text": "different uh environments so you the code that you write stays the same but",
    "start": "2116880",
    "end": "2123359"
  },
  {
    "text": "the code surrounding it changes and what is shim a shim is just",
    "start": "2123359",
    "end": "2128480"
  },
  {
    "start": "2126000",
    "end": "2126000"
  },
  {
    "text": "a small library that transparently intercepts an API and handles calls appropriately so in the case of u. Json",
    "start": "2128480",
    "end": "2135000"
  },
  {
    "text": "you'll have like you have like a a jQuery shim a not old IE shim which is basically a jQuery lless framework l",
    "start": "2135000",
    "end": "2142480"
  },
  {
    "text": "view that basically just uses like some of the newer apis that are not available on Old IES um and then translates those",
    "start": "2142480",
    "end": "2148960"
  },
  {
    "text": "into Dom operations you've got a node shim that allows you to run those same views um on the Node side and a debug",
    "start": "2148960",
    "end": "2155480"
  },
  {
    "text": "shim just to get an idea of oh right what is happening how long is this taking and so",
    "start": "2155480",
    "end": "2162078"
  },
  {
    "text": "on and so the rendering basically just proceeds um from getting an event that's",
    "start": "2163720",
    "end": "2170119"
  },
  {
    "text": "intercepted by a view the view has certain um a certain API that calls um",
    "start": "2170119",
    "end": "2177480"
  },
  {
    "text": "calls the shim functions and the shim functions translate that to an HTML updates um on the server or on the",
    "start": "2177480",
    "end": "2184160"
  },
  {
    "text": "client side and just by swapping the shim you can",
    "start": "2184160",
    "end": "2189960"
  },
  {
    "text": "just get um we can render the same view in different environments whether it is in the browser or on the",
    "start": "2189960",
    "end": "2197640"
  },
  {
    "start": "2196000",
    "end": "2196000"
  },
  {
    "text": "server um finally like this instant interactivity so we should be as fast as loading a St static page um again it",
    "start": "2200280",
    "end": "2207560"
  },
  {
    "text": "can't change the speed of light but we can think of two questions the first being what is the least that we can load",
    "start": "2207560",
    "end": "2213680"
  },
  {
    "text": "and the second being what's the least processing that we can run uh this is where the packages stuff that",
    "start": "2213680",
    "end": "2219079"
  },
  {
    "text": "I talked about earlier comes kind of handy because once your application is structured like that you can basically",
    "start": "2219079",
    "end": "2224319"
  },
  {
    "text": "say oh okay I have this core and then I have my current activity I have my current view that I'm uh that the user",
    "start": "2224319",
    "end": "2231319"
  },
  {
    "text": "wants to see based on the URL that that we're getting um and then you can say oh",
    "start": "2231319",
    "end": "2237280"
  },
  {
    "text": "okay well the core will probably contain like jQuery and maybe your model definitions and then the package for",
    "start": "2237280",
    "end": "2244400"
  },
  {
    "text": "that specific thing that the user is viewing will probably contain like a set of views um uh maybe some model data and",
    "start": "2244400",
    "end": "2251839"
  },
  {
    "text": "some stuff like that but you can load a very minimal amount of the code because",
    "start": "2251839",
    "end": "2256920"
  },
  {
    "text": "you can just say okay well as long as I have the core and I have the um the package that I need for this",
    "start": "2256920",
    "end": "2262079"
  },
  {
    "text": "functionality that's all that's really needed so you reduce the the loading",
    "start": "2262079",
    "end": "2267520"
  },
  {
    "text": "times from having to load like a full application to okay I have got this neat partition where I can just load this",
    "start": "2267520",
    "end": "2273599"
  },
  {
    "text": "part and then um if I need to load like additional fun Al I can do that in the background later on but from a user",
    "start": "2273599",
    "end": "2280319"
  },
  {
    "text": "perspective the experience is better because there's not just that much data that gets",
    "start": "2280319",
    "end": "2286119"
  },
  {
    "text": "transferred um the other part is State snapshotting um which is again um",
    "start": "2286119",
    "end": "2291760"
  },
  {
    "text": "something that's provided by the framework something that's available um as a separate module as well um the idea being basically that",
    "start": "2291760",
    "end": "2300400"
  },
  {
    "text": "you can run some of the processing you can render the views or you can fetch model data you can serialize that model",
    "start": "2300400",
    "end": "2306680"
  },
  {
    "text": "data and then have the results um continue running um",
    "start": "2306680",
    "end": "2312280"
  },
  {
    "text": "on the client side and then pre-processing or pre-rendering again currently a lot of the the Frameworks",
    "start": "2312280",
    "end": "2318800"
  },
  {
    "text": "ship a templating compiler to the end user they might support pre-compilation um but then still",
    "start": "2318800",
    "end": "2325359"
  },
  {
    "text": "there's a lot of housekeeping involved um a lot of the like the load time that",
    "start": "2325359",
    "end": "2331000"
  },
  {
    "text": "that uh a single page application spending um when during the initial load is really um not just like loading the",
    "start": "2331000",
    "end": "2337880"
  },
  {
    "text": "framework but also realizing oh this model depends on this thing so I have to fetch more and more data um from the",
    "start": "2337880",
    "end": "2344520"
  },
  {
    "text": "back end before I can um actually render anything so um by pre-rendering and by",
    "start": "2344520",
    "end": "2350760"
  },
  {
    "text": "using SN State snapshots you can just send that data directly and you'll be confident that you can do the initial",
    "start": "2350760",
    "end": "2358079"
  },
  {
    "text": "render or that you have the base set of data that you need so with snapshots you can start",
    "start": "2358079",
    "end": "2365480"
  },
  {
    "text": "running the code on the server and then say oh okay well I'm going to send this as a snapshot and then continue running",
    "start": "2365480",
    "end": "2371119"
  },
  {
    "text": "that on the browser uh and with pre-rendering you'll just s sort out the um the HTML part",
    "start": "2371119",
    "end": "2377000"
  },
  {
    "text": "where you take that view you render it as an HTML page um and the result already works even if you don't have",
    "start": "2377000",
    "end": "2383079"
  },
  {
    "text": "JavaScript running or even if if you are a um a search engine that's crawling those pages you'll still get that",
    "start": "2383079",
    "end": "2389680"
  },
  {
    "text": "HTML um and it'll then the then the the the time to initial render initial",
    "start": "2389680",
    "end": "2394920"
  },
  {
    "text": "interactivity becomes a lot more predictable",
    "start": "2394920",
    "end": "2399318"
  },
  {
    "start": "2398000",
    "end": "2398000"
  },
  {
    "text": "so again an init function that sets up models and Views this happens on the server side the models get um or the model data",
    "start": "2401400",
    "end": "2410520"
  },
  {
    "text": "and the models themselves get put into a snapshot and then they get um on the client side they become just JS",
    "start": "2410520",
    "end": "2418599"
  },
  {
    "text": "variables and the viewer you uses shim you render it as HTML you send that HTML",
    "start": "2419040",
    "end": "2424599"
  },
  {
    "text": "um with the initial page load so it looks something like this right so you'll have like a core that's jQuery",
    "start": "2424599",
    "end": "2430319"
  },
  {
    "text": "and framework and whatever you'll have the current package that defines you know the views that you're using",
    "start": "2430319",
    "end": "2437240"
  },
  {
    "text": "here then you'll have the snapshot of that data or the of the code that you",
    "start": "2437240",
    "end": "2442480"
  },
  {
    "text": "were running on the server side and then you'll have the current HTML that you rendered on the server side meaning that",
    "start": "2442480",
    "end": "2448720"
  },
  {
    "text": "the initial render time goes down quite a",
    "start": "2448720",
    "end": "2452960"
  },
  {
    "start": "2453000",
    "end": "2453000"
  },
  {
    "text": "bit now when I say pre-rendering it's not just like oh we've got a template and we'll render that thing um it's also",
    "start": "2455040",
    "end": "2461560"
  },
  {
    "text": "the just just like a full um emulation um for those um for those view",
    "start": "2461560",
    "end": "2468680"
  },
  {
    "text": "interactions so you can actually interact with the HTML elements you can add new things to models and um all that",
    "start": "2468680",
    "end": "2475280"
  },
  {
    "text": "gets reflected in the HTML so it's not just like sending a pre-compiled template it's it's sending a real HTML",
    "start": "2475280",
    "end": "2482720"
  },
  {
    "text": "and then the view State associated with that HTML so you can really continue executing from where the server left",
    "start": "2482720",
    "end": "2489720"
  },
  {
    "text": "off and snapshotting I'm not talking just about Json um rather like a more",
    "start": "2489720",
    "end": "2496480"
  },
  {
    "text": "comprehensive um serialization where you know if you create a data object you get a data",
    "start": "2496480",
    "end": "2501920"
  },
  {
    "text": "object back you create a regular expression you get a regular expression back um you have models and collections",
    "start": "2501920",
    "end": "2509520"
  },
  {
    "text": "you don't get like Json that represents those but you actually get instances of those models and collections um on on",
    "start": "2509520",
    "end": "2516640"
  },
  {
    "text": "the client side side and you can have references to different objects and those will be stored as references so if",
    "start": "2516640",
    "end": "2523119"
  },
  {
    "text": "you've assigned an object as a property you'll get that property back um so there's it's it's it's kind",
    "start": "2523119",
    "end": "2530040"
  },
  {
    "text": "of like a more comprehensive um way of um serializing this kind of data which",
    "start": "2530040",
    "end": "2536359"
  },
  {
    "text": "allows for this seamless oh okay server left off here client continues",
    "start": "2536359",
    "end": "2541480"
  },
  {
    "text": "here so I've looked at all these different parts a little bit um",
    "start": "2541480",
    "end": "2548680"
  },
  {
    "text": "but I can't I don't really have enough time to actually go into like a lot of depth but um so how big is this thing",
    "start": "2548680",
    "end": "2555760"
  },
  {
    "start": "2554000",
    "end": "2554000"
  },
  {
    "text": "how bad is it um The View layer is 400 lines of code which is kind of surprising but it is really possible to",
    "start": "2555760",
    "end": "2561880"
  },
  {
    "text": "um to implement a lot of this functionality um using a um smaller set of um a smaller amount of code and",
    "start": "2561880",
    "end": "2569160"
  },
  {
    "text": "that's been something that's been like a design objective for me um to keep the runtime um for this single page app",
    "start": "2569160",
    "end": "2575839"
  },
  {
    "text": "framework um really small and also to avoid um trying to reinvent things so",
    "start": "2575839",
    "end": "2582920"
  },
  {
    "text": "you know almost every I guess pretty much every um single page app framework today comes up comes up with their own",
    "start": "2582920",
    "end": "2589920"
  },
  {
    "text": "um this is my my own class system um which is which I think is a problem because then you know you get no",
    "start": "2589920",
    "end": "2596440"
  },
  {
    "text": "interoperability um so I've been trying to just avoid um Reinventing things that do exist um things like The Inheritance",
    "start": "2596440",
    "end": "2603559"
  },
  {
    "text": "systems because it really doesn't matter um I have my own model player yes but that is fully event compatible API",
    "start": "2603559",
    "end": "2610119"
  },
  {
    "text": "compatible with um backbone um and then the compiler that",
    "start": "2610119",
    "end": "2615480"
  },
  {
    "text": "creates these views is larger but it's only used during the pre-compilation",
    "start": "2615480",
    "end": "2620720"
  },
  {
    "text": "stage so it it never gets shipped to the to the browser and it never runs there",
    "start": "2620720",
    "end": "2625800"
  },
  {
    "text": "so in terms of like an app developer perspective you're only dealing with this view layer code which is a few",
    "start": "2625800",
    "end": "2631359"
  },
  {
    "text": "hundred lines of code which should be fairly nice",
    "start": "2631359",
    "end": "2639040"
  },
  {
    "start": "2636000",
    "end": "2636000"
  },
  {
    "text": "so in summary um the D the the direction I think or I hope or I speculate I mean",
    "start": "2639520",
    "end": "2646599"
  },
  {
    "text": "predictions about the future are usually wrong um where we're going um is we're",
    "start": "2646599",
    "end": "2652400"
  },
  {
    "text": "going to be going more towards treating views as objects rather than treating them as strings or templates because",
    "start": "2652400",
    "end": "2658400"
  },
  {
    "text": "that just reduces the um the overhead of like connecting templates to view objects to",
    "start": "2658400",
    "end": "2664559"
  },
  {
    "text": "whatever um moving slightly away at least from this CGI inspired idea of",
    "start": "2664559",
    "end": "2670599"
  },
  {
    "text": "like oneoff scripts oneoff controllers towards having just event registrations and public",
    "start": "2670599",
    "end": "2676720"
  },
  {
    "text": "apis moving away from being only able to run your framework um on the client side",
    "start": "2676720",
    "end": "2682119"
  },
  {
    "text": "to being able to render um your views and your",
    "start": "2682119",
    "end": "2687400"
  },
  {
    "text": "um application anywhere so anywhere where you have the capability to execute JavaScript you will be able to um render",
    "start": "2687400",
    "end": "2694520"
  },
  {
    "text": "your views which basically means that that um multiple page",
    "start": "2694520",
    "end": "2699800"
  },
  {
    "text": "applications become like a special case of single page applications where oh well we'll do all the renders on the",
    "start": "2699800",
    "end": "2705640"
  },
  {
    "text": "server side um instead of having Frameworks that really require Dom in order to work",
    "start": "2705640",
    "end": "2711880"
  },
  {
    "text": "you move towards um uh Frameworks where the Dom is abstracted out you interact",
    "start": "2711880",
    "end": "2717559"
  },
  {
    "text": "with it through a shim or a limited set of things and this is so that you can render",
    "start": "2717559",
    "end": "2722680"
  },
  {
    "text": "anywhere um and then we'll just move towards better serialization better um loading so that again we reduce that",
    "start": "2722680",
    "end": "2729800"
  },
  {
    "text": "time to interactivity um with single Page Apps and we can have them um behave more like normal web pages that load",
    "start": "2729800",
    "end": "2736520"
  },
  {
    "text": "quickly um rather than like feeling like oh okay I've been waiting here for 10 seconds for this",
    "start": "2736520",
    "end": "2742119"
  },
  {
    "text": "thing to start up um some links so single page appbook um it's less about",
    "start": "2742119",
    "end": "2749480"
  },
  {
    "text": "all this futury stuff it's more about what currently exists um it's got some",
    "start": "2749480",
    "end": "2755280"
  },
  {
    "text": "half decent chapters on like modular in packaging um which I feel like is one of the big",
    "start": "2755280",
    "end": "2761079"
  },
  {
    "text": "points um view Json um I've got um so I'm iterating on the documentation right",
    "start": "2761079",
    "end": "2766359"
  },
  {
    "text": "now it's kind of the the the the hard parts are technically are kind of solved",
    "start": "2766359",
    "end": "2771880"
  },
  {
    "text": "but the the the part that really I I'm most concerned with is um the how does",
    "start": "2771880",
    "end": "2778040"
  },
  {
    "text": "it feel to actually use that use the framework um right now there's just not enough defaults the API is a little bit",
    "start": "2778040",
    "end": "2784079"
  },
  {
    "text": "too verbos and things like that so I'm really just trying to get The Experience right um before releasing",
    "start": "2784079",
    "end": "2790079"
  },
  {
    "text": "it um also recommended is radar zs.com which is a new realtime framework that I wrote a while back um that we're now",
    "start": "2790079",
    "end": "2796680"
  },
  {
    "text": "open sourcing um or my employer zenes is open sourcing but thank you",
    "start": "2796680",
    "end": "2805250"
  },
  {
    "text": "[Applause]",
    "start": "2805250",
    "end": "2810340"
  },
  {
    "text": "[Music]",
    "start": "2810340",
    "end": "2818730"
  }
]