[
  {
    "start": "0",
    "end": "36000"
  },
  {
    "text": "great so I'll get started if you've used reddit before you've probably seen this",
    "start": "3920",
    "end": "9830"
  },
  {
    "text": "a few times I'm I'm hoping that you'll see it less and less but you've",
    "start": "9830",
    "end": "14990"
  },
  {
    "text": "definitely seen it and this talk will hopefully hopefully help you understand",
    "start": "14990",
    "end": "19999"
  },
  {
    "text": "why if you've not used reddit then how about a quick explanation right it's the",
    "start": "19999",
    "end": "26599"
  },
  {
    "text": "front page of the internet it's a community hub and it's a place for people to talk about everything that",
    "start": "26599",
    "end": "32119"
  },
  {
    "text": "they are interested in but more importantly for this topic reddit is a really big website there we're currently",
    "start": "32119",
    "end": "40340"
  },
  {
    "start": "36000",
    "end": "59000"
  },
  {
    "text": "the fourth largest in the US according to Alexa and serve 320 million users",
    "start": "40340",
    "end": "47210"
  },
  {
    "text": "every month with doing all sorts of stuff like posting a million times a day and casting 75 million votes it kind of",
    "start": "47210",
    "end": "54829"
  },
  {
    "text": "adds up so let's dig into what the site looks like this is kind of a very",
    "start": "54829",
    "end": "61399"
  },
  {
    "start": "59000",
    "end": "239000"
  },
  {
    "text": "high-level overview of the architecture of Reddit and it's focused only on the parts of the site that are involved with",
    "start": "61399",
    "end": "67970"
  },
  {
    "text": "the main core experience of the site so I'm leaving out some really interesting",
    "start": "67970",
    "end": "73490"
  },
  {
    "text": "stuff like all of our data analysis and the ads stack all that kind of stuff but",
    "start": "73490",
    "end": "78979"
  },
  {
    "text": "this is the kind of core of the reddit experience the other thing to know about this diagram is that it's very much a",
    "start": "78979",
    "end": "85070"
  },
  {
    "text": "work in progress I made a diagram like this a year ago and it looks nothing like this this also tells you a whole",
    "start": "85070",
    "end": "92119"
  },
  {
    "text": "lot about our engineering organization as much as it tells you about the tech",
    "start": "92119",
    "end": "97369"
  },
  {
    "text": "that we use so that's that's actually really interesting here in the middle",
    "start": "97369",
    "end": "103820"
  },
  {
    "text": "there that giant blob is our - that is the original monolithic application that",
    "start": "103820",
    "end": "109250"
  },
  {
    "text": "is read it and has been reddit since around 2008 that's a big Python blog and",
    "start": "109250",
    "end": "114259"
  },
  {
    "text": "we'll talk about that in a bit more detail the the front-end engineers at",
    "start": "114259",
    "end": "120380"
  },
  {
    "text": "reddit got kind of tired with the pretty outdated stuff that we have in our - so they've been building out these modern",
    "start": "120380",
    "end": "126710"
  },
  {
    "text": "front-end applications those are all in node and they share code between the",
    "start": "126710",
    "end": "132890"
  },
  {
    "text": "server and the clients they all act as an API client them selves so they'll talk to api's that are",
    "start": "132890",
    "end": "139440"
  },
  {
    "text": "provided by our API gateway or r2 itself and act just like your mobile phone or",
    "start": "139440",
    "end": "145860"
  },
  {
    "text": "whatever other API clients out there we're also starting to split up r2 into",
    "start": "145860",
    "end": "151410"
  },
  {
    "text": "various back-end services and these are all highlighted here the the core thing",
    "start": "151410",
    "end": "158550"
  },
  {
    "text": "here is that they are kind of the focus of individual teams so you can imagine that there's an API team there's a",
    "start": "158550",
    "end": "164910"
  },
  {
    "text": "listing team there's a thing team I'll explain a little bit more what those mean in a later so they are written in Python",
    "start": "164910",
    "end": "175080"
  },
  {
    "text": "which has helped us splitting stuff out of the existing Python monolith and they",
    "start": "175080",
    "end": "180750"
  },
  {
    "text": "are all built on a common library that allows us to not reinvent the wheel",
    "start": "180750",
    "end": "187260"
  },
  {
    "text": "every time that we do this it also comes with some monitoring and tracing that kind of stuff built in well on the back",
    "start": "187260",
    "end": "193920"
  },
  {
    "text": "end we use thrift which gives us nice strong schemas and we allow also for HTTP on the front end for like the API",
    "start": "193920",
    "end": "201060"
  },
  {
    "text": "gateway so that we can still talk to them from the outside finally we have",
    "start": "201060",
    "end": "206430"
  },
  {
    "text": "the CDN in the front that's fastly and if you saw the talk earlier they do some pretty cool stuff one of the things we",
    "start": "206430",
    "end": "213060"
  },
  {
    "text": "use it for is being able to do a lot of decision logic outside at the edge and",
    "start": "213060",
    "end": "218880"
  },
  {
    "text": "figure out which stack we're gonna send that request to based on the domain that's coming in the path on the site",
    "start": "218880",
    "end": "225210"
  },
  {
    "text": "any of the cookies that the user have including including perhaps experiment",
    "start": "225210",
    "end": "230460"
  },
  {
    "text": "bucketing so that's how we can have all of these multiple stacks that we're starting to split out and still have one",
    "start": "230460",
    "end": "236940"
  },
  {
    "text": "reddit com so since our two is that big blob and is really complicated and old",
    "start": "236940",
    "end": "242910"
  },
  {
    "start": "239000",
    "end": "359000"
  },
  {
    "text": "let's dig in a little bit more into its details the the giant monolith here is a",
    "start": "242910",
    "end": "250440"
  },
  {
    "text": "very complicated beast that has its own weird diagram we run the same code on",
    "start": "250440",
    "end": "257220"
  },
  {
    "text": "every one of the servers here there it's monolithic each server might run",
    "start": "257220",
    "end": "262770"
  },
  {
    "text": "different parts of that code but the same stuff is deployed everywhere the",
    "start": "262770",
    "end": "268680"
  },
  {
    "text": "load balancers in the front we use H a proxy the point of that is to take in the",
    "start": "268680",
    "end": "274870"
  },
  {
    "text": "request that the user has and split it up into the various pools of application servers we do that to isolate different",
    "start": "274870",
    "end": "281440"
  },
  {
    "text": "kinds of request paths so that say a comments page is going slow today because of something going on it doesn't",
    "start": "281440",
    "end": "287530"
  },
  {
    "text": "affect the front page for other people that's been very useful for us for gating these kinds of weird issues that",
    "start": "287530",
    "end": "294340"
  },
  {
    "text": "happen we also do a lot of expensive operations when a user does things like",
    "start": "294340",
    "end": "301030"
  },
  {
    "text": "vote or submit a link etcetera and we defer that to an asynchronous job queue",
    "start": "301030",
    "end": "306040"
  },
  {
    "text": "via rabbitmq and so we put the message in the queue and processors handle it",
    "start": "306040",
    "end": "312130"
  },
  {
    "text": "later usually pretty quickly these memcache and Postgres section we",
    "start": "312130",
    "end": "319780"
  },
  {
    "text": "we have a core data model which I'll talk a bit about called thing and that data model is what you would consider",
    "start": "319780",
    "end": "326560"
  },
  {
    "text": "most of the guts of reddit accounts links subreddits comments so all of that",
    "start": "326560",
    "end": "332860"
  },
  {
    "text": "stuff is stored in this data model called thing which is based in Postgres with memcache in front of it and finally",
    "start": "332860",
    "end": "340660"
  },
  {
    "text": "we use Cassandra very heavily it has been in the stack for about seven years now and has been used for a lot of the",
    "start": "340660",
    "end": "347380"
  },
  {
    "text": "new features ever since it came on board and has been very nice for its ability",
    "start": "347380",
    "end": "354670"
  },
  {
    "text": "to stay up with one node going down that kind of thing cool so that was a bit",
    "start": "354670",
    "end": "362440"
  },
  {
    "start": "359000",
    "end": "390000"
  },
  {
    "text": "about the structure of the site itself let's talk about how some of the parts of the site work starting with listings",
    "start": "362440",
    "end": "370350"
  },
  {
    "text": "so a listing is kind of the foundation of reddit it's a list an ordered list of",
    "start": "372030",
    "end": "378100"
  },
  {
    "text": "links you could naively think of this as just selecting links out of the database with the sort these you'll see as the",
    "start": "378100",
    "end": "386290"
  },
  {
    "text": "front page you'll see it in subreddits etc the way that we do it is not",
    "start": "386290",
    "end": "393130"
  },
  {
    "start": "390000",
    "end": "443000"
  },
  {
    "text": "actually by running this select out of the database instead initially what",
    "start": "393130",
    "end": "398620"
  },
  {
    "text": "would happen is the Select would happen and then it would be cached as a list of ID's in memcache",
    "start": "398620",
    "end": "404470"
  },
  {
    "text": "that way you can that's that list of ID's very easily and then you can just",
    "start": "404470",
    "end": "410440"
  },
  {
    "text": "look up the links by primary key and that's very easy as well so that was a",
    "start": "410440",
    "end": "415810"
  },
  {
    "text": "nice system and worked great those those things those listings needed to be",
    "start": "415810",
    "end": "422710"
  },
  {
    "text": "invalidated whenever you change something in them which happens when you submit something but most frequently it",
    "start": "422710",
    "end": "429430"
  },
  {
    "text": "happens when you vote on something and so the vote queues were are something",
    "start": "429430",
    "end": "434950"
  },
  {
    "text": "that really update those listings very frequently we also have to do some other stuff in those vote processors such as",
    "start": "434950",
    "end": "441280"
  },
  {
    "text": "anti cheat processing so it turns out that running that select query even",
    "start": "441280",
    "end": "448630"
  },
  {
    "text": "occasionally when you invalidate it is still kind of expensive so when you're doing something like voting you know you",
    "start": "448630",
    "end": "455800"
  },
  {
    "text": "have all the information you need to be able to go and update that cached listing you don't really need to rerun",
    "start": "455800",
    "end": "461830"
  },
  {
    "text": "the query so what we do instead is we store not just the ID but the ID paired",
    "start": "461830",
    "end": "467890"
  },
  {
    "text": "with all of the sort information related to that thing and then when we do",
    "start": "467890",
    "end": "473740"
  },
  {
    "text": "something like process a vote we fetch down the current cached listing we modify it in this example you'll see",
    "start": "473740",
    "end": "480580"
  },
  {
    "text": "that we vote up on link 125 which moves it up in that list and changes the the",
    "start": "480580",
    "end": "486010"
  },
  {
    "text": "score that it has in that list and then we'll write it back that is kind of a an",
    "start": "486010",
    "end": "492130"
  },
  {
    "text": "interesting read mutate right operation which has the potential for race",
    "start": "492130",
    "end": "497410"
  },
  {
    "text": "conditions so we lock around that and you'll notice that once we're doing that",
    "start": "497410",
    "end": "504490"
  },
  {
    "text": "we're never actually running these queries anymore it's not really a cache anymore it's actually its own like",
    "start": "504490",
    "end": "509919"
  },
  {
    "text": "first-class thing that we're storing it's persisted index really ad normalized index so at that point they",
    "start": "509919",
    "end": "517390"
  },
  {
    "text": "started being stored originally in other things but nowadays in Cassandra so I'm",
    "start": "517390",
    "end": "525040"
  },
  {
    "start": "523000",
    "end": "564000"
  },
  {
    "text": "gonna talk a little bit about something that went wrong I mentioned that sometimes the the queues usually process",
    "start": "525040",
    "end": "530920"
  },
  {
    "text": "pretty quickly well not always back in around middle of 2012 we started seeing",
    "start": "530920",
    "end": "536890"
  },
  {
    "text": "that the boat she would start getting really backed up in the middle of the day particularly",
    "start": "536890",
    "end": "542290"
  },
  {
    "text": "you know peak traffic when everybody's around this would delay the processing",
    "start": "542290",
    "end": "547900"
  },
  {
    "text": "of those boats which is visible to users on the site because a submission would",
    "start": "547900",
    "end": "553300"
  },
  {
    "text": "not get its core properly it would be sitting on the front page but you know it's scores going up very slowly and it",
    "start": "553300",
    "end": "559450"
  },
  {
    "text": "really should be much higher than it is and then it would finally get it many hours later when that queue processed",
    "start": "559450",
    "end": "564810"
  },
  {
    "start": "564000",
    "end": "662000"
  },
  {
    "text": "well one easy thing is why don't we just add more skill more processors right that actually made it worse so we had to",
    "start": "564810",
    "end": "573850"
  },
  {
    "text": "dig in we didn't really have great observability at the time we we couldn't figure out what was going on we could",
    "start": "573850",
    "end": "579520"
  },
  {
    "text": "see that the whole processing time for a vote was longer than before about beyond that who knows so we started adding a",
    "start": "579520",
    "end": "587650"
  },
  {
    "text": "bunch of timers and once we narrowed it down we found out that it was there was LOX I mentioned that we're causing the",
    "start": "587650",
    "end": "593740"
  },
  {
    "text": "problems the very popular sub reddits on the site are getting a lot of votes it",
    "start": "593740",
    "end": "599470"
  },
  {
    "text": "makes sense they're popular right so when you have a bunch of these votes happening at the same time you're trying",
    "start": "599470",
    "end": "606100"
  },
  {
    "text": "to update the same listing from a bunch of votes at the same time and they're all just waiting on the lock so adding",
    "start": "606100",
    "end": "611740"
  },
  {
    "text": "more just added more people waiting on the lock and didn't actually help at all",
    "start": "611740",
    "end": "617339"
  },
  {
    "text": "so what we did to fix this was we partitioned the vote queues so this is",
    "start": "617580",
    "end": "622930"
  },
  {
    "text": "really just dead simple we took the subreddit ID of the link being voted on and used that and just did like modulo",
    "start": "622930",
    "end": "629620"
  },
  {
    "text": "10 and put it into one of 10 different queues this just looked like you know",
    "start": "629620",
    "end": "634660"
  },
  {
    "text": "you're voting on a link that's in subreddit 111 or 111 you go in to vote q1",
    "start": "634660",
    "end": "640180"
  },
  {
    "text": "you know vote 777 go in to vote q7 and",
    "start": "640180",
    "end": "645940"
  },
  {
    "text": "what that did is we had the same total number of processors in the end but they were all divided up in two different",
    "start": "645940",
    "end": "652450"
  },
  {
    "text": "partitions and there were far fewer vying for the same lock at any given time this worked really well",
    "start": "652450",
    "end": "659190"
  },
  {
    "text": "smooth sailin forever not really so late 2012 just a few months of",
    "start": "659190",
    "end": "667570"
  },
  {
    "start": "662000",
    "end": "763000"
  },
  {
    "text": "respite we started seeing the boat queue slowing down the lock contention time was okay in the",
    "start": "667570",
    "end": "675670"
  },
  {
    "text": "average and the processing times looked okay in the average but then we looked",
    "start": "675670",
    "end": "680680"
  },
  {
    "text": "at the p90 nines the 99th percentile of those timers and we were seeing that there were some",
    "start": "680680",
    "end": "685960"
  },
  {
    "text": "votes that were going really poorly and that was interesting so we had to dig in",
    "start": "685960",
    "end": "691150"
  },
  {
    "text": "and just start putting print statements in to see what is going on when you're taking over this amount of time it's",
    "start": "691150",
    "end": "696940"
  },
  {
    "text": "pretty dumb but it worked and what we found was that there was a domain",
    "start": "696940",
    "end": "703930"
  },
  {
    "text": "listing so we have listings on the site that are for all of the links that are submitted to a given domain sorry",
    "start": "703930",
    "end": "711810"
  },
  {
    "text": "dangers of a touchscreen and the domain",
    "start": "711810",
    "end": "717370"
  },
  {
    "text": "listing was the point of contention now so all of these things were partitioned",
    "start": "717370",
    "end": "723460"
  },
  {
    "text": "and not vying for the same lock for subreddits but they were then in the same thing vying for a domain listing",
    "start": "723460",
    "end": "731130"
  },
  {
    "text": "this was not great and it was causing a lot of issues so long story short much",
    "start": "731130",
    "end": "739990"
  },
  {
    "text": "later we comprehensively fix this by splitting up those queries all together instead of just processing one vote in",
    "start": "739990",
    "end": "746410"
  },
  {
    "text": "an entire single job processor we now do a little bit of upfront stuff and then",
    "start": "746410",
    "end": "752890"
  },
  {
    "text": "make a bunch of messages that deal with different parts of the job and those all work on the right partitions for",
    "start": "752890",
    "end": "759100"
  },
  {
    "text": "themselves so they're not vying across partitions interesting stuff here is",
    "start": "759100",
    "end": "765790"
  },
  {
    "start": "763000",
    "end": "787000"
  },
  {
    "text": "that you really need to have timers in your code nice granular timers but they also just",
    "start": "765790",
    "end": "771550"
  },
  {
    "text": "give you a cross-section you get a lot of info from your P 99s and tracing or",
    "start": "771550",
    "end": "778510"
  },
  {
    "text": "some way of getting info out of those P 99 cases is really important as well for",
    "start": "778510",
    "end": "784180"
  },
  {
    "text": "figuring out what's going on in the weird cases there's also kind of obvious",
    "start": "784180",
    "end": "789520"
  },
  {
    "start": "787000",
    "end": "851000"
  },
  {
    "text": "but locks are really bad news for throughput if you have to use them then",
    "start": "789520",
    "end": "795220"
  },
  {
    "text": "you should probably be partitioning on the right thing and so going forward",
    "start": "795220",
    "end": "801640"
  },
  {
    "text": "we've got some new data models that we're trying out for during those cash queries in a luckless",
    "start": "801640",
    "end": "806740"
  },
  {
    "text": "way it's it's pretty interesting and it's been promising so far but we haven't we haven't committed fully to it",
    "start": "806740",
    "end": "812740"
  },
  {
    "text": "yet and more importantly we're starting to split out listings altogether so we've got this listing service and",
    "start": "812740",
    "end": "818800"
  },
  {
    "text": "the goal of it and we have a whole team working on it is to make relevant listings for users and the relevant",
    "start": "818800",
    "end": "827920"
  },
  {
    "text": "listings can come from all sorts of sources which includes the data analysis pipeline machine learning and these",
    "start": "827920",
    "end": "835480"
  },
  {
    "text": "normal old listings like the rest of the site so that's that's kind of the future here where we extract it out into its",
    "start": "835480",
    "end": "842290"
  },
  {
    "text": "own service and r2 doesn't even need to know about how how it's coming anymore",
    "start": "842290",
    "end": "849450"
  },
  {
    "start": "851000",
    "end": "888000"
  },
  {
    "text": "cool so you've got listings of things but what about the things themselves the",
    "start": "852030",
    "end": "858690"
  },
  {
    "text": "the as I said earlier thing is in Postgres and cash this is the oldest data model",
    "start": "858690",
    "end": "865630"
  },
  {
    "text": "and reddit in r2 and it's a pretty interesting data model getting some",
    "start": "865630",
    "end": "873430"
  },
  {
    "text": "smiles the thing to know about it is that it's designed to take away certain",
    "start": "873430",
    "end": "879730"
  },
  {
    "text": "pain points but also make it so that you couldn't accidentally do something like expensive joins it's vaguely schema-less",
    "start": "879730",
    "end": "885970"
  },
  {
    "text": "and it's very key value there's one thing type / noun on the site so like an",
    "start": "885970",
    "end": "892600"
  },
  {
    "text": "account thing a link thing a subreddit thing and each one of those is",
    "start": "892600",
    "end": "898750"
  },
  {
    "text": "represented by a pair of tables in Postgres the theme table looks like this",
    "start": "898750",
    "end": "904120"
  },
  {
    "text": "it's a little bit abbreviated but the idea is that there's one row for each",
    "start": "904120",
    "end": "909880"
  },
  {
    "text": "thing object that exists and there's a set of fixed columns there which covered",
    "start": "909880",
    "end": "916930"
  },
  {
    "text": "everything that the original day is read it needed to do the just basic selects",
    "start": "916930",
    "end": "922270"
  },
  {
    "text": "query is to run the site so that's all the stuff that you would sort and filter on to make a listing back in the day the",
    "start": "922270",
    "end": "930640"
  },
  {
    "text": "data table however has many rows per thing object and they each have a key",
    "start": "930640",
    "end": "936550"
  },
  {
    "text": "and a value and this makes up kind of a bag of properties for that thing this has been pretty neat for reddit in terms",
    "start": "936550",
    "end": "943639"
  },
  {
    "text": "of the ability to make changes making new additions to the site without having",
    "start": "943639",
    "end": "949040"
  },
  {
    "text": "to go and alter a table in production it's very very cool in that way it's",
    "start": "949040",
    "end": "954649"
  },
  {
    "text": "also been a lot of performance issues so it'sit's interesting thing in Postgres",
    "start": "954649",
    "end": "960529"
  },
  {
    "text": "is done as a these set of tables live in a single database cluster each primary",
    "start": "960529",
    "end": "968269"
  },
  {
    "text": "in that database cluster handles writes and then we have a number of read-only replicas which we replicate to asynchronously our two connects directly",
    "start": "968269",
    "end": "976579"
  },
  {
    "text": "to the databases and we'll try to prefer to use the replicas for read operations",
    "start": "976579",
    "end": "983300"
  },
  {
    "text": "so that they scale out better at the time it would also do this thing where",
    "start": "983300",
    "end": "988670"
  },
  {
    "text": "it looks it determines that if if a query failed it would guess that the server is down and try to not use it",
    "start": "988670",
    "end": "995480"
  },
  {
    "text": "again in the future thing also works with memcache this helps us reduce the",
    "start": "995480",
    "end": "1002139"
  },
  {
    "text": "load on those reader we read replicas the whole thing object is serialized and it's popped into",
    "start": "1002139",
    "end": "1008170"
  },
  {
    "text": "memcache our two reads from memcache first and only hits Postgres on a Miss and we write directly to memcache from",
    "start": "1008170",
    "end": "1017079"
  },
  {
    "text": "r2 when making the change rather than just deleting from memcache and allowing",
    "start": "1017079",
    "end": "1022120"
  },
  {
    "text": "it to be repopulated on the next read so a width this broke 2011 we were waking",
    "start": "1022120",
    "end": "1030220"
  },
  {
    "text": "up a lot with these errors we would wake up suddenly with an alert saying that",
    "start": "1030220",
    "end": "1036760"
  },
  {
    "text": "the replication to one of the secondaries had crashed and this meant",
    "start": "1036760",
    "end": "1041860"
  },
  {
    "text": "that that database was getting more and more out-of-date as time went on which so obviously we need to fix that the",
    "start": "1041860",
    "end": "1047798"
  },
  {
    "text": "immediate thing to do is you just take that thing out of replication and out of usage on the site and you start",
    "start": "1047799",
    "end": "1053950"
  },
  {
    "text": "rebuilding it and go back to bed but",
    "start": "1053950",
    "end": "1059200"
  },
  {
    "text": "then we started seeing the next day when we woke up that some of those cached listings were referring to items that",
    "start": "1059200",
    "end": "1065230"
  },
  {
    "text": "didn't exist in Postgres which is a little terrifying so you'll see this",
    "start": "1065230",
    "end": "1070659"
  },
  {
    "text": "cache listing here says one two three for but then the thing table only has one two and four not a great thing to",
    "start": "1070659",
    "end": "1078400"
  },
  {
    "text": "see this cause the pages that needed that to crash because they were looking",
    "start": "1078400",
    "end": "1084400"
  },
  {
    "text": "for the data and it wasn't there and they just died so we built out a lot of tooling at the time to be able to clean",
    "start": "1084400",
    "end": "1091180"
  },
  {
    "text": "up those listings find any bad data that shouldn't be there and remove it from them the this was obviously really",
    "start": "1091180",
    "end": "1099850"
  },
  {
    "text": "painful so we were looking into a lot of things going on there there weren't a whole lot",
    "start": "1099850",
    "end": "1105880"
  },
  {
    "text": "of us either it was about five people at the time the issue we found always",
    "start": "1105880",
    "end": "1111490"
  },
  {
    "text": "started with a primary saturating its disks so it was running out of AI ops and something was going slow so what do",
    "start": "1111490",
    "end": "1120880"
  },
  {
    "text": "we do about that she's got beefier Hardware it's pretty good right problem solved",
    "start": "1120880",
    "end": "1128790"
  },
  {
    "text": "not really so a few months later everything had been nice and quiet for a",
    "start": "1128940",
    "end": "1134860"
  },
  {
    "text": "while but we were doing a pretty routine maintenance and accidentally bumped off line in the primary and suddenly we see",
    "start": "1134860",
    "end": "1143020"
  },
  {
    "text": "the replication lag alert firing and looking at the logs from the application at the time a light bulb went off so I",
    "start": "1143020",
    "end": "1150940"
  },
  {
    "text": "mentioned that r2 would try and remove a dead database from its connection pools",
    "start": "1150940",
    "end": "1156210"
  },
  {
    "text": "the code for that looks something like this very pseudocode e we have in",
    "start": "1156210",
    "end": "1162070"
  },
  {
    "text": "configuration a list of databases and we consider the first database in the list to be the primary so then when we're",
    "start": "1162070",
    "end": "1169450"
  },
  {
    "text": "going to decide which database to use for a query we take the list of databases we filter it down to the ones",
    "start": "1169450",
    "end": "1175960"
  },
  {
    "text": "that are alive we take the first one off the list as our primary and the secondary czar the rest then we choose",
    "start": "1175960",
    "end": "1183040"
  },
  {
    "text": "based on the query type which server to use and go for it there's a bug there so what happens when",
    "start": "1183040",
    "end": "1193060"
  },
  {
    "text": "it thinks the primary is down it would instead take the primary out of the list and now we're using a secondary as that",
    "start": "1193060",
    "end": "1199960"
  },
  {
    "text": "first item in the list and we try writing to a secondary well we've",
    "start": "1199960",
    "end": "1206320"
  },
  {
    "text": "have proper permissions setup so that worked and you could write to the second area oops",
    "start": "1206320",
    "end": "1215670"
  },
  {
    "text": "so you wrote to the secondary it created the thing and we write it to the cached",
    "start": "1216240",
    "end": "1222250"
  },
  {
    "text": "listing all is good then we take that secondary out and rebuild it and that data's gone not good so yeah you use a",
    "start": "1222250",
    "end": "1232990"
  },
  {
    "text": "use permissions they're really useful they're not just there to annoy people",
    "start": "1232990",
    "end": "1238200"
  },
  {
    "text": "that are very helpful if you do denormalize like the cache listings it's",
    "start": "1238200",
    "end": "1244240"
  },
  {
    "text": "really important to have tooling for healing and going forward some changes",
    "start": "1244240",
    "end": "1250450"
  },
  {
    "text": "we're making new services are using our service discovery system which is pretty",
    "start": "1250450",
    "end": "1255760"
  },
  {
    "text": "standard across all our stack to find databases so they don't have to implement all this logic in themselves",
    "start": "1255760",
    "end": "1262690"
  },
  {
    "text": "and that that helps with reducing complexity and making it a battle-tested component and also finally we're",
    "start": "1262690",
    "end": "1271300"
  },
  {
    "text": "starting to move that whole thing model out into its own service the initial reason for this was we had new other",
    "start": "1271300",
    "end": "1277510"
  },
  {
    "text": "services coming online and they wanted to know about the core data that's in reddit so we had this service that",
    "start": "1277510",
    "end": "1285670"
  },
  {
    "text": "starts out by just being able to read that data and now it's starting to take over the rights as well and take that",
    "start": "1285670",
    "end": "1290830"
  },
  {
    "text": "all out of our to a huge upside to this is that all of that code in our - had a",
    "start": "1290830",
    "end": "1297220"
  },
  {
    "text": "lot of legacy and a lot of weird twisted ways that it had been used and so by",
    "start": "1297220",
    "end": "1303010"
  },
  {
    "text": "pulling it out and doing this exercise it's now going to be separate and clean and something that we can completely",
    "start": "1303010",
    "end": "1309880"
  },
  {
    "text": "rethink as necessary cool so another",
    "start": "1309880",
    "end": "1315610"
  },
  {
    "start": "1313000",
    "end": "1344000"
  },
  {
    "text": "major thing I said that reddit is a place for people to talk about stuff right well they do that in comment trees",
    "start": "1315610",
    "end": "1324270"
  },
  {
    "text": "so an important thing to know about comments on reddit is that they're threaded this means that you nest",
    "start": "1324270",
    "end": "1330940"
  },
  {
    "text": "replies so you can see the structure of a conversation they can also be linked",
    "start": "1330940",
    "end": "1337540"
  },
  {
    "text": "to deep within that structure this makes it a bit more complicated to",
    "start": "1337540",
    "end": "1343570"
  },
  {
    "text": "render these trees it's pretty expensive to go and say okay there's ten thousand",
    "start": "1343570",
    "end": "1348880"
  },
  {
    "text": "comments in this thread I need to look up all ten thousand comments find out what their parents are etcetera so we",
    "start": "1348880",
    "end": "1355750"
  },
  {
    "text": "store hey another denormalized listing the parent relationships of that whole",
    "start": "1355750",
    "end": "1363010"
  },
  {
    "text": "tree in one place so that we can figure out ahead of time okay this is the subset of comments we're going to show",
    "start": "1363010",
    "end": "1368679"
  },
  {
    "text": "right now and then only look up those comments this also is kind of expensive",
    "start": "1368679",
    "end": "1376090"
  },
  {
    "text": "to do so we defer it to offline job processing one advantage in the comment",
    "start": "1376090",
    "end": "1383620"
  },
  {
    "text": "tree stuff is that we can batch up messages and mutate those trees in one",
    "start": "1383620",
    "end": "1388900"
  },
  {
    "text": "big batch that allows for more efficient operations on them",
    "start": "1388900",
    "end": "1394590"
  },
  {
    "start": "1393000",
    "end": "1456000"
  },
  {
    "text": "an important thing to note is that the tree structure is sensitive to ordering so if I insert a comment and its parent",
    "start": "1394720",
    "end": "1404590"
  },
  {
    "text": "doesn't exist that's kind of weird in a tree structure right so that that needs",
    "start": "1404590",
    "end": "1409690"
  },
  {
    "text": "to be washed out for because things happen and the system had some stuff to",
    "start": "1409690",
    "end": "1416049"
  },
  {
    "text": "try and heal itself in that situation where it will recompute the tree or try",
    "start": "1416049",
    "end": "1421330"
  },
  {
    "text": "to fix up the tree the processing for that also has the issue that sometimes",
    "start": "1421330",
    "end": "1428740"
  },
  {
    "text": "you end up with a mega threat on the site some news event is happening the Super Bowl is happening whatever people",
    "start": "1428740",
    "end": "1435220"
  },
  {
    "text": "like to comment you have 50,000 comments in one thread and that thread is now",
    "start": "1435220",
    "end": "1440289"
  },
  {
    "text": "going pretty slowly that's affecting the rest of the site so we developed a thing that allows us to manually mark a thread",
    "start": "1440289",
    "end": "1447549"
  },
  {
    "text": "and say this thread gets dedicated processing it just goes off onto its own queue called the fast lane well that",
    "start": "1447549",
    "end": "1457840"
  },
  {
    "start": "1456000",
    "end": "1478000"
  },
  {
    "text": "caused issues early 2016 there was a major news event happening",
    "start": "1457840",
    "end": "1464049"
  },
  {
    "text": "pretty sad stuff and a lot of people were talking about it the thread was making the the processing of comments",
    "start": "1464049",
    "end": "1472059"
  },
  {
    "text": "pretty slow on the site and so we fast lane did and then",
    "start": "1472059",
    "end": "1481320"
  },
  {
    "start": "1478000",
    "end": "1517000"
  },
  {
    "text": "everything died basically what happened immediately then was the fast lane queue",
    "start": "1481320",
    "end": "1488559"
  },
  {
    "text": "started filling up with messages very very very very very quickly and rapidly",
    "start": "1488559",
    "end": "1493659"
  },
  {
    "text": "filled up all of the memory on the message broker this meant we couldn't add any new messages anymore which is",
    "start": "1493659",
    "end": "1500980"
  },
  {
    "text": "not great in the end the only thing we could do was restart the message broker",
    "start": "1500980",
    "end": "1506380"
  },
  {
    "text": "and lose all those messages to get back to steady-state so this meant that all",
    "start": "1506380",
    "end": "1512649"
  },
  {
    "text": "of the other actions on the site that are deferred to queues were also messed up what it turned out to be the cause",
    "start": "1512649",
    "end": "1520480"
  },
  {
    "start": "1517000",
    "end": "1594000"
  },
  {
    "text": "was that stuff for dealing with a missing parent so when we fast lane the",
    "start": "1520480",
    "end": "1527169"
  },
  {
    "text": "thread the earlier comments in the thread that had happened before the fast laning we're still in the other queue",
    "start": "1527169",
    "end": "1534039"
  },
  {
    "text": "and they were still not yet processed and when we fast lane we suddenly skipped the key with a bunch of new",
    "start": "1534039",
    "end": "1539740"
  },
  {
    "text": "messages so then the site recognized that this thread was inconsistent and",
    "start": "1539740",
    "end": "1545440"
  },
  {
    "text": "every page view was putting a new message on to the queue saying hey please recompute me I'm broken no not",
    "start": "1545440",
    "end": "1553179"
  },
  {
    "text": "good so yeah as I mentioned we restarted rabbit everything kind of went back to",
    "start": "1553179",
    "end": "1559929"
  },
  {
    "text": "normal afterwards and we now use queue code quotas which are very very nice",
    "start": "1559929",
    "end": "1566309"
  },
  {
    "text": "resource limits allow you to prevent one thing from hogging all of your resources",
    "start": "1566309",
    "end": "1572909"
  },
  {
    "text": "so it's really important to use things like quotas if we had turn turned on",
    "start": "1572909",
    "end": "1579340"
  },
  {
    "text": "quotas at the time then that fast lane queue would have started dropping messages and it would have meant that",
    "start": "1579340",
    "end": "1586480"
  },
  {
    "text": "that thread might have been more inconsistent or comments wouldn't show up there for a little while but the rest",
    "start": "1586480",
    "end": "1591760"
  },
  {
    "text": "of the site would have kept working cool all right so this is a little more meta",
    "start": "1591760",
    "end": "1598559"
  },
  {
    "start": "1594000",
    "end": "1693000"
  },
  {
    "text": "we have a bunch of servers to power all of this stuff and we need to scale them",
    "start": "1598559",
    "end": "1604059"
  },
  {
    "text": "up and down so this is kind of what traffic to read it looks like over the course of a week",
    "start": "1604059",
    "end": "1611510"
  },
  {
    "text": "it's definitely very seasonal so you can see that it's about half at night at",
    "start": "1612230",
    "end": "1618390"
  },
  {
    "text": "what it is in the day there's a couple weird humps there for different time zones but it's it's pretty consistent",
    "start": "1618390",
    "end": "1624570"
  },
  {
    "text": "overall and so what we want to do with the autoscaler is save money off-peak",
    "start": "1624570",
    "end": "1631470"
  },
  {
    "text": "and also deal with situations where we need to scale up because something crazy is going on it does a pretty good job of",
    "start": "1631470",
    "end": "1639270"
  },
  {
    "text": "that what it does is it watches the utilization metrics reported by our load",
    "start": "1639270",
    "end": "1644460"
  },
  {
    "text": "balancers and it automatically increases or decreases the number of servers that",
    "start": "1644460",
    "end": "1649710"
  },
  {
    "text": "were requesting from AWS we just offload the actual logic of terminating or",
    "start": "1649710",
    "end": "1655710"
  },
  {
    "text": "launching servers to AWS auto-scaling groups that works out pretty well the",
    "start": "1655710",
    "end": "1663270"
  },
  {
    "text": "way that the autoscaler knows what's going on out there is that each host has",
    "start": "1663270",
    "end": "1669120"
  },
  {
    "text": "a demon on it that registers its existence into a zookeeper cluster this",
    "start": "1669120",
    "end": "1674190"
  },
  {
    "text": "is kind of a rudimentary health check and an up note is that we were also",
    "start": "1674190",
    "end": "1680700"
  },
  {
    "text": "using this system for memcache it is not really Auto scaled in that we were ever",
    "start": "1680700",
    "end": "1686880"
  },
  {
    "text": "going up or down but it was there so that if a server died it would be replaced automatically so in mid-2016",
    "start": "1686880",
    "end": "1695990"
  },
  {
    "text": "something went pretty wrong with the autoscaler that taught us a lot we were",
    "start": "1695990",
    "end": "1701760"
  },
  {
    "text": "in the midst of making our final migration from ec2 classic into V PC had",
    "start": "1701760",
    "end": "1709290"
  },
  {
    "text": "a huge number of benefits for us in better networking and security that kind of stuff and the final component to move",
    "start": "1709290",
    "end": "1715950"
  },
  {
    "text": "was our zookeeper cluster this was the zookeeper cluster being used for the",
    "start": "1715950",
    "end": "1721890"
  },
  {
    "text": "autoscaler so it was pretty important the plan for this migration was to launch the new",
    "start": "1721890",
    "end": "1729059"
  },
  {
    "start": "1724000",
    "end": "1754000"
  },
  {
    "text": "cluster in the BBC stop the autoscaler services so that they don't mess with anything during this migration repoint",
    "start": "1729059",
    "end": "1736980"
  },
  {
    "text": "the autoscaler agents on each of the servers in the fleet to a point at the new zookeeper cluster that's in VPC then",
    "start": "1736980",
    "end": "1744210"
  },
  {
    "text": "we'll repoint the autoscaler services themselves at the new cluster restart",
    "start": "1744210",
    "end": "1749370"
  },
  {
    "text": "the autoscaler and then act like nothing ever happened what actually happened was",
    "start": "1749370",
    "end": "1756600"
  },
  {
    "start": "1754000",
    "end": "1785000"
  },
  {
    "text": "a little different unfortunately we launched the new zookeeper cluster it's working great",
    "start": "1756600",
    "end": "1762270"
  },
  {
    "text": "we stopped the autoscaler services cool we start repointing things we got about",
    "start": "1762270",
    "end": "1768870"
  },
  {
    "text": "a third of the way through that when suddenly about a third of our servers",
    "start": "1768870",
    "end": "1776820"
  },
  {
    "text": "get terminated and it took us a moment to realize why and then we all face",
    "start": "1776820",
    "end": "1783810"
  },
  {
    "text": "palmed rather heavily so what happened was puppet was still running on the",
    "start": "1783810",
    "end": "1790350"
  },
  {
    "start": "1785000",
    "end": "1812000"
  },
  {
    "text": "autoscaler server and when it did its half-hourly run it decided to restart the autoscaler daemons and they were",
    "start": "1790350",
    "end": "1797880"
  },
  {
    "text": "still pointing at the old cluster and they they saw all of the servers that",
    "start": "1797880",
    "end": "1804060"
  },
  {
    "text": "had migrated to the new cluster as being unhealthy and terminated them very",
    "start": "1804060",
    "end": "1809850"
  },
  {
    "text": "helpful thanks autoscaler so what could we do about that well just wait a minute",
    "start": "1809850",
    "end": "1816780"
  },
  {
    "start": "1812000",
    "end": "1854000"
  },
  {
    "text": "the autoscaler will bring a bunch of whole new servers up that was relatively",
    "start": "1816780",
    "end": "1821820"
  },
  {
    "text": "easy except that the cache servers were also being done in the same system and",
    "start": "1821820",
    "end": "1828110"
  },
  {
    "text": "they have state and the new ones that come up don't have that state so what",
    "start": "1828110",
    "end": "1834360"
  },
  {
    "text": "this meant was that suddenly all of the production traffic that was happening was hammering our Postgres replicas",
    "start": "1834360",
    "end": "1840450"
  },
  {
    "text": "which couldn't handle that because they were not used to that many caches being gone at the same time",
    "start": "1840450",
    "end": "1848059"
  },
  {
    "text": "it's pretty reasonable so what we learned from that was the things they do",
    "start": "1852020",
    "end": "1858710"
  },
  {
    "start": "1854000",
    "end": "1898000"
  },
  {
    "text": "destructive actions like terminating servers should have a lot of sanity checks in them hey am i eating a large",
    "start": "1858710",
    "end": "1864440"
  },
  {
    "text": "percentage of the servers I probably shouldn't do that we needed to improve",
    "start": "1864440",
    "end": "1869900"
  },
  {
    "text": "our process about the migration itself in just having a peer reviewed checklist",
    "start": "1869900",
    "end": "1875330"
  },
  {
    "text": "where we made sure that we had extra layers of defense there would have been really helpful and the other important",
    "start": "1875330",
    "end": "1885980"
  },
  {
    "text": "thing is that staple services are pretty different from stateless services and you should treat them differently so",
    "start": "1885980",
    "end": "1892370"
  },
  {
    "text": "using the same autoscaler technology for that was probably not the best idea the",
    "start": "1892370",
    "end": "1898820"
  },
  {
    "start": "1898000",
    "end": "1934000"
  },
  {
    "text": "next-gen autoscaler that we're building has learned a lot from this stuff it has",
    "start": "1898820",
    "end": "1904550"
  },
  {
    "text": "a bunch of tooling in it to automatically recognize that it's you know affecting a larger number of servers than it really should and",
    "start": "1904550",
    "end": "1910550"
  },
  {
    "text": "stopped itself and it does it uses our",
    "start": "1910550",
    "end": "1915560"
  },
  {
    "text": "service discovery system to determine health instead of just an agent on the boxes so we actually get a little more",
    "start": "1915560",
    "end": "1922180"
  },
  {
    "text": "fine-grain detail like is the actual service ok not just the host but yeah",
    "start": "1922180",
    "end": "1929120"
  },
  {
    "text": "it'll it'll refuse to take action on large numbers of servers at once cool",
    "start": "1929120",
    "end": "1935630"
  },
  {
    "start": "1934000",
    "end": "1990000"
  },
  {
    "text": "so in summary observability is key here people make mistakes use multiple layers",
    "start": "1935630",
    "end": "1942620"
  },
  {
    "text": "of safeguards like if we'd if we'd turned off the autoscaler and you know",
    "start": "1942620",
    "end": "1949160"
  },
  {
    "text": "put an exit print at the exit command at the top of the script nothing would have",
    "start": "1949160",
    "end": "1955010"
  },
  {
    "text": "happened if prep it brought it back up you know little little extra things where no one failure can cause you",
    "start": "1955010",
    "end": "1960590"
  },
  {
    "text": "issues and it's really important to make sure that your system is simple and easy",
    "start": "1960590",
    "end": "1966440"
  },
  {
    "text": "to understand cool thank you so this is",
    "start": "1966440",
    "end": "1971720"
  },
  {
    "text": "just the beginning for us we're building a ton of stuff and hiring and also on",
    "start": "1971720",
    "end": "1977810"
  },
  {
    "text": "Thursday the entire infrared there are gonna be doing an AMA in our sis admit",
    "start": "1977810",
    "end": "1984860"
  },
  {
    "text": "if anybody like to ask some questions [Applause]",
    "start": "1984860",
    "end": "1992329"
  }
]