[
  {
    "text": "my name is Stuart Stewart and I'm from",
    "start": "40",
    "end": "2800"
  },
  {
    "text": "San Francisco I work for a company",
    "start": "2800",
    "end": "4240"
  },
  {
    "text": "called driver where we do genomic",
    "start": "4240",
    "end": "5600"
  },
  {
    "text": "sequencing of um of tumors and do",
    "start": "5600",
    "end": "8440"
  },
  {
    "text": "analysis on that um my talk today is on",
    "start": "8440",
    "end": "12759"
  },
  {
    "text": "logic programming in Scala and a little",
    "start": "12759",
    "end": "15440"
  },
  {
    "text": "bit of History so this is all based on",
    "start": "15440",
    "end": "17960"
  },
  {
    "text": "Mini Canen which if you haven't heard of",
    "start": "17960",
    "end": "19480"
  },
  {
    "text": "it it's a um it's a logic programming",
    "start": "19480",
    "end": "22640"
  },
  {
    "text": "DSL written by William bird it's it's",
    "start": "22640",
    "end": "25359"
  },
  {
    "text": "embedded in scheme the nice thing about",
    "start": "25359",
    "end": "26760"
  },
  {
    "text": "it is it has a it has a small purely",
    "start": "26760",
    "end": "28720"
  },
  {
    "text": "functional core so it's very easy to",
    "start": "28720",
    "end": "31000"
  },
  {
    "text": "take and just Port over to different",
    "start": "31000",
    "end": "32599"
  },
  {
    "text": "languages and and there are there are",
    "start": "32599",
    "end": "34680"
  },
  {
    "text": "many ports of it and there are if you",
    "start": "34680",
    "end": "37680"
  },
  {
    "text": "look on GitHub you could find three",
    "start": "37680",
    "end": "38920"
  },
  {
    "text": "other ports in Scala so um specifically",
    "start": "38920",
    "end": "42239"
  },
  {
    "text": "I learned this from uh the the book The",
    "start": "42239",
    "end": "44280"
  },
  {
    "text": "Reason schemer and my implementation is",
    "start": "44280",
    "end": "46120"
  },
  {
    "text": "based on the paper by um Jason heeman on",
    "start": "46120",
    "end": "48520"
  },
  {
    "text": "micr Canon which is an even smaller",
    "start": "48520",
    "end": "50960"
  },
  {
    "text": "core um great so what is uh what is this",
    "start": "50960",
    "end": "55239"
  },
  {
    "text": "exactly so what what is uh what do I",
    "start": "55239",
    "end": "56960"
  },
  {
    "text": "mean when I say relational programming",
    "start": "56960",
    "end": "58559"
  },
  {
    "text": "or logic programming",
    "start": "58559",
    "end": "61239"
  },
  {
    "text": "um so a",
    "start": "61239",
    "end": "63760"
  },
  {
    "text": "relation if I",
    "start": "63760",
    "end": "66159"
  },
  {
    "text": "could let me get that",
    "start": "66159",
    "end": "68640"
  },
  {
    "text": "out all right so a",
    "start": "68640",
    "end": "72560"
  },
  {
    "text": "relation where a function might have um",
    "start": "72560",
    "end": "74759"
  },
  {
    "text": "you know a couple of inputs and and some",
    "start": "74759",
    "end": "76720"
  },
  {
    "text": "output like say say",
    "start": "76720",
    "end": "78799"
  },
  {
    "text": "cons or let",
    "start": "78799",
    "end": "81119"
  },
  {
    "text": "let's okay so here I'm defining a next y",
    "start": "81119",
    "end": "83680"
  },
  {
    "text": "and z um and if you're to cons X if",
    "start": "83680",
    "end": "88360"
  },
  {
    "text": "you're to cons one onto list to three",
    "start": "88360",
    "end": "91439"
  },
  {
    "text": "then you'd get um that that result there",
    "start": "91439",
    "end": "93920"
  },
  {
    "text": "Z so a",
    "start": "93920",
    "end": "95960"
  },
  {
    "text": "relation is um is very similar except",
    "start": "95960",
    "end": "99600"
  },
  {
    "text": "that in uh instead of two inputs and one",
    "start": "99600",
    "end": "102560"
  },
  {
    "text": "and one output you have just three",
    "start": "102560",
    "end": "103960"
  },
  {
    "text": "different inputs and all it says is that",
    "start": "103960",
    "end": "106079"
  },
  {
    "text": "those two are related by um if you cons",
    "start": "106079",
    "end": "109159"
  },
  {
    "text": "X onto y then you get you get the result",
    "start": "109159",
    "end": "111759"
  },
  {
    "text": "Z so we can",
    "start": "111759",
    "end": "113840"
  },
  {
    "text": "um we can run that uh",
    "start": "113840",
    "end": "117520"
  },
  {
    "text": "q and run here",
    "start": "117520",
    "end": "120360"
  },
  {
    "text": "I I'll let you know more later but that",
    "start": "120360",
    "end": "121840"
  },
  {
    "text": "basically just uh searches for",
    "start": "121840",
    "end": "125479"
  },
  {
    "text": "Solutions oh",
    "start": "127280",
    "end": "130399"
  },
  {
    "text": "um so cono is my relational version of",
    "start": "130400",
    "end": "133959"
  },
  {
    "text": "um of that same",
    "start": "133959",
    "end": "135360"
  },
  {
    "text": "thing okay and and there there are there",
    "start": "135360",
    "end": "138360"
  },
  {
    "text": "are",
    "start": "138360",
    "end": "139280"
  },
  {
    "text": "results",
    "start": "139280",
    "end": "141840"
  },
  {
    "text": "um great so uh I'm going to go on and go",
    "start": "141840",
    "end": "145239"
  },
  {
    "text": "straight into the basics so we don't",
    "start": "145239",
    "end": "146440"
  },
  {
    "text": "have uh we don't have too much time to",
    "start": "146440",
    "end": "148200"
  },
  {
    "text": "to run through so",
    "start": "148200",
    "end": "152200"
  },
  {
    "text": "uh here here's",
    "start": "152200",
    "end": "155400"
  },
  {
    "text": "uh here's our our most basic goal",
    "start": "155400",
    "end": "158040"
  },
  {
    "text": "Constructor it basically says that our",
    "start": "158040",
    "end": "159560"
  },
  {
    "text": "our variable Q um is the same as three",
    "start": "159560",
    "end": "163000"
  },
  {
    "text": "so if we run that and get all the",
    "start": "163000",
    "end": "164200"
  },
  {
    "text": "possible results it says okay three is a",
    "start": "164200",
    "end": "165760"
  },
  {
    "text": "possible result for Q",
    "start": "165760",
    "end": "169239"
  },
  {
    "text": "um here we have um we have a a",
    "start": "169239",
    "end": "173200"
  },
  {
    "text": "disjunction we have either Q = 3 or qal",
    "start": "173200",
    "end": "176040"
  },
  {
    "text": "4 and result as as you might",
    "start": "176040",
    "end": "178480"
  },
  {
    "text": "expect here qal 3 and qal 4 um Q cannot",
    "start": "178480",
    "end": "183760"
  },
  {
    "text": "equal both of those so as you might",
    "start": "183760",
    "end": "185560"
  },
  {
    "text": "expect the stream of results will be",
    "start": "185560",
    "end": "189200"
  },
  {
    "text": "empty um we have a we have a short hand",
    "start": "189799",
    "end": "192440"
  },
  {
    "text": "for that we could just fail here is a is",
    "start": "192440",
    "end": "194799"
  },
  {
    "text": "a goal that always fails and similarly",
    "start": "194799",
    "end": "197159"
  },
  {
    "text": "we have succeed which is a goal that um",
    "start": "197159",
    "end": "200840"
  },
  {
    "text": "always succeeds so here um the these",
    "start": "200840",
    "end": "203799"
  },
  {
    "text": "things are all goals and I'm just",
    "start": "203799",
    "end": "205000"
  },
  {
    "text": "composing them in various",
    "start": "205000",
    "end": "207239"
  },
  {
    "text": "ways so um",
    "start": "207239",
    "end": "210680"
  },
  {
    "text": "you'll see a a a new thing here when",
    "start": "210680",
    "end": "213480"
  },
  {
    "text": "when I run succeed there there is this",
    "start": "213480",
    "end": "215360"
  },
  {
    "text": "uh there's this underscore zero and what",
    "start": "215360",
    "end": "217640"
  },
  {
    "text": "that is is a is a",
    "start": "217640",
    "end": "219640"
  },
  {
    "text": "placeholder for um for my for my",
    "start": "219640",
    "end": "224239"
  },
  {
    "text": "variable Q which is Unbound so if if",
    "start": "224239",
    "end": "227680"
  },
  {
    "text": "this stream is returning all possible",
    "start": "227680",
    "end": "229239"
  },
  {
    "text": "results that um you know all possible",
    "start": "229239",
    "end": "231519"
  },
  {
    "text": "values of",
    "start": "231519",
    "end": "233120"
  },
  {
    "text": "q that that satisfy this goal succeed",
    "start": "233120",
    "end": "236040"
  },
  {
    "text": "then then Q could be any value which is",
    "start": "236040",
    "end": "238000"
  },
  {
    "text": "why um which is why it stays on bound",
    "start": "238000",
    "end": "240200"
  },
  {
    "text": "and you and you get that underscore zero",
    "start": "240200",
    "end": "242280"
  },
  {
    "text": "so you know you could have um many",
    "start": "242280",
    "end": "245710"
  },
  {
    "text": "[Music]",
    "start": "245710",
    "end": "248860"
  },
  {
    "text": "more and there we have five different",
    "start": "249720",
    "end": "252040"
  },
  {
    "text": "Unbound variables and no matter what",
    "start": "252040",
    "end": "253439"
  },
  {
    "text": "value they had uh you know this this",
    "start": "253439",
    "end": "255040"
  },
  {
    "text": "goal would",
    "start": "255040",
    "end": "257040"
  },
  {
    "text": "succeed great so going just a little bit",
    "start": "257040",
    "end": "259479"
  },
  {
    "text": "more oh we have",
    "start": "259479",
    "end": "262560"
  },
  {
    "text": "that okay um this one here all is just a",
    "start": "264759",
    "end": "269039"
  },
  {
    "text": "conjunction so so it it returns um goals",
    "start": "269039",
    "end": "272440"
  },
  {
    "text": "if all of those you know all the goals",
    "start": "272440",
    "end": "276120"
  },
  {
    "text": "that all the states such that those",
    "start": "276120",
    "end": "278199"
  },
  {
    "text": "three goals hold so here um we are",
    "start": "278199",
    "end": "280120"
  },
  {
    "text": "relating s to T um and as we",
    "start": "280120",
    "end": "283960"
  },
  {
    "text": "see",
    "start": "283960",
    "end": "285960"
  },
  {
    "text": "uh so s and t here are related you see",
    "start": "285960",
    "end": "289199"
  },
  {
    "text": "um our",
    "start": "289199",
    "end": "290479"
  },
  {
    "text": "results these are well let me go to",
    "start": "290479",
    "end": "292919"
  },
  {
    "text": "something",
    "start": "292919",
    "end": "295160"
  },
  {
    "text": "simpler all right",
    "start": "297720",
    "end": "300160"
  },
  {
    "text": "um so given a Q and an",
    "start": "300160",
    "end": "303880"
  },
  {
    "text": "R if we say Q equals",
    "start": "303880",
    "end": "308039"
  },
  {
    "text": "R",
    "start": "309400",
    "end": "312080"
  },
  {
    "text": "um sorry oh yes",
    "start": "312080",
    "end": "315120"
  },
  {
    "text": "thanks great yeah so there q and R are",
    "start": "315120",
    "end": "318360"
  },
  {
    "text": "um are bound to the same variable and",
    "start": "318360",
    "end": "320080"
  },
  {
    "text": "and you could see that when when they're",
    "start": "320080",
    "end": "321160"
  },
  {
    "text": "reified and you know otherwise they",
    "start": "321160",
    "end": "323199"
  },
  {
    "text": "would have just",
    "start": "323199",
    "end": "324479"
  },
  {
    "text": "been",
    "start": "324479",
    "end": "326319"
  },
  {
    "text": "um uh distinct so I I can show you a",
    "start": "326319",
    "end": "329440"
  },
  {
    "text": "quick example of how to um how to use",
    "start": "329440",
    "end": "333199"
  },
  {
    "text": "that uh so here's a here's a a regular",
    "start": "333199",
    "end": "337840"
  },
  {
    "text": "pend you have your your list a it's it's",
    "start": "337840",
    "end": "341039"
  },
  {
    "text": "written um a little bit differently than",
    "start": "341039",
    "end": "343039"
  },
  {
    "text": "you might normally want to but",
    "start": "343039",
    "end": "345240"
  },
  {
    "text": "um that's because I'm I'm going to",
    "start": "345240",
    "end": "347080"
  },
  {
    "text": "translate that here so we have",
    "start": "347080",
    "end": "350800"
  },
  {
    "text": "um so we have any of a of a couple cases",
    "start": "353880",
    "end": "357479"
  },
  {
    "text": "so the first case here is that our first",
    "start": "357479",
    "end": "359360"
  },
  {
    "text": "list is is empty so um",
    "start": "359360",
    "end": "363638"
  },
  {
    "text": "if if it's empty then it's also true",
    "start": "364840",
    "end": "368800"
  },
  {
    "text": "that list B is empty",
    "start": "368800",
    "end": "372440"
  },
  {
    "text": "so be",
    "start": "373840",
    "end": "377319"
  },
  {
    "text": "great all right and the other case um we",
    "start": "377479",
    "end": "382080"
  },
  {
    "text": "have we have a we've introduced",
    "start": "382080",
    "end": "384160"
  },
  {
    "text": "temporary Val variables here a as and",
    "start": "384160",
    "end": "386759"
  },
  {
    "text": "Rex I'm going to introduce those um so",
    "start": "386759",
    "end": "389319"
  },
  {
    "text": "they",
    "start": "389319",
    "end": "390919"
  },
  {
    "text": "exists logic variables a as and Rec such",
    "start": "390919",
    "end": "398000"
  },
  {
    "text": "that um all of the following cases hold",
    "start": "398000",
    "end": "401880"
  },
  {
    "text": "so we have um a con onto",
    "start": "401880",
    "end": "405759"
  },
  {
    "text": "as is",
    "start": "405759",
    "end": "408319"
  },
  {
    "text": "La um the recursive case we have a",
    "start": "408319",
    "end": "413120"
  },
  {
    "text": "pendo and we're going to relate so if if",
    "start": "413120",
    "end": "416280"
  },
  {
    "text": "you get L to",
    "start": "416280",
    "end": "420479"
  },
  {
    "text": "recursive case and then we have um our",
    "start": "420479",
    "end": "424240"
  },
  {
    "text": "output is a con onto the recursive case",
    "start": "424240",
    "end": "427240"
  },
  {
    "text": "so um conso",
    "start": "427240",
    "end": "430280"
  },
  {
    "text": "a cursive case is our",
    "start": "430280",
    "end": "433479"
  },
  {
    "text": "output great and uh we can test that",
    "start": "433479",
    "end": "436280"
  },
  {
    "text": "out I'll",
    "start": "436280",
    "end": "439560"
  },
  {
    "text": "just okay so",
    "start": "445800",
    "end": "450039"
  },
  {
    "text": "um we get a pend one",
    "start": "451560",
    "end": "455639"
  },
  {
    "text": "onto",
    "start": "457840",
    "end": "460840"
  },
  {
    "text": "and oh",
    "start": "465199",
    "end": "468840"
  },
  {
    "text": "um all right you know I'm just going to",
    "start": "475240",
    "end": "477080"
  },
  {
    "text": "get out of there",
    "start": "477080",
    "end": "480599"
  },
  {
    "text": "all right import",
    "start": "492240",
    "end": "495879"
  },
  {
    "text": "that uh all",
    "start": "500759",
    "end": "503680"
  },
  {
    "text": "the list",
    "start": "503680",
    "end": "506560"
  },
  {
    "text": "of sorry",
    "start": "506560",
    "end": "510560"
  },
  {
    "text": "um oh yes sorry there we go I I I",
    "start": "511080",
    "end": "513959"
  },
  {
    "text": "thought I was doing cons for some",
    "start": "513959",
    "end": "515518"
  },
  {
    "text": "reason all right um append of list of",
    "start": "515519",
    "end": "521200"
  },
  {
    "text": "one great so that that's interesting but",
    "start": "521719",
    "end": "524720"
  },
  {
    "text": "um this is a relation so we we don't",
    "start": "524720",
    "end": "526279"
  },
  {
    "text": "have to have our Q as as the output we",
    "start": "526279",
    "end": "527959"
  },
  {
    "text": "could put Q here in the beginning and um",
    "start": "527959",
    "end": "531360"
  },
  {
    "text": "our result could be um one 2",
    "start": "531360",
    "end": "534519"
  },
  {
    "text": "three and it will solve Q to be the list",
    "start": "534519",
    "end": "536920"
  },
  {
    "text": "of one um that that would help me",
    "start": "536920",
    "end": "538440"
  },
  {
    "text": "earlier so so and and we can do uh many",
    "start": "538440",
    "end": "542399"
  },
  {
    "text": "more things so we could have QR",
    "start": "542399",
    "end": "545959"
  },
  {
    "text": "um whoops what's",
    "start": "545959",
    "end": "549680"
  },
  {
    "text": "[Music]",
    "start": "550050",
    "end": "551680"
  },
  {
    "text": "that and this this gives you all all",
    "start": "551680",
    "end": "554040"
  },
  {
    "text": "possible um different solutions",
    "start": "554040",
    "end": "556040"
  },
  {
    "text": "for for that",
    "start": "556040",
    "end": "559079"
  },
  {
    "text": "um and we have generally we could just",
    "start": "559079",
    "end": "562640"
  },
  {
    "text": "uh",
    "start": "562640",
    "end": "565640"
  },
  {
    "text": "and here this gives you the shape of all",
    "start": "570920",
    "end": "572680"
  },
  {
    "text": "possible um all possible solutions so",
    "start": "572680",
    "end": "574600"
  },
  {
    "text": "here you have a list of uh you know four",
    "start": "574600",
    "end": "576600"
  },
  {
    "text": "logic variables and some arbitrary other",
    "start": "576600",
    "end": "578440"
  },
  {
    "text": "logic variable and conses those four",
    "start": "578440",
    "end": "580279"
  },
  {
    "text": "onto that which could be a nil it could",
    "start": "580279",
    "end": "582360"
  },
  {
    "text": "be some other list um but we just don't",
    "start": "582360",
    "end": "584680"
  },
  {
    "text": "know what it is yet okay um how much",
    "start": "584680",
    "end": "587200"
  },
  {
    "text": "more time do I have uh I should have",
    "start": "587200",
    "end": "590880"
  },
  {
    "text": "just",
    "start": "590880",
    "end": "591920"
  },
  {
    "text": "enough five more minutes um if",
    "start": "591920",
    "end": "595440"
  },
  {
    "text": "everything goes as",
    "start": "595440",
    "end": "597519"
  },
  {
    "text": "timed so here uh I I have a I have an",
    "start": "597519",
    "end": "600040"
  },
  {
    "text": "example problem so we we have",
    "start": "600040",
    "end": "602760"
  },
  {
    "text": "um we we have a a case here this is from",
    "start": "602760",
    "end": "606040"
  },
  {
    "text": "sikp if you recognize it um",
    "start": "606040",
    "end": "609399"
  },
  {
    "text": "and uh we have MaryAnn's Mo's father has",
    "start": "609399",
    "end": "612959"
  },
  {
    "text": "has a bunch of friends and they all have",
    "start": "612959",
    "end": "614279"
  },
  {
    "text": "daughters and they all they all have",
    "start": "614279",
    "end": "615880"
  },
  {
    "text": "boats and they've named their daughters",
    "start": "615880",
    "end": "617040"
  },
  {
    "text": "after their friends's boats and they",
    "start": "617040",
    "end": "618680"
  },
  {
    "text": "give you some Clues here and you have to",
    "start": "618680",
    "end": "619640"
  },
  {
    "text": "figure out who um who owns what boats",
    "start": "619640",
    "end": "621959"
  },
  {
    "text": "and specifically they're asking who is",
    "start": "621959",
    "end": "623399"
  },
  {
    "text": "LA's father so the nice thing about this",
    "start": "623399",
    "end": "625160"
  },
  {
    "text": "is that you can just read this kind of",
    "start": "625160",
    "end": "626360"
  },
  {
    "text": "straight off one by one and and it's",
    "start": "626360",
    "end": "628720"
  },
  {
    "text": "very declar",
    "start": "628720",
    "end": "630720"
  },
  {
    "text": "and if you were to solve this normally",
    "start": "630720",
    "end": "632760"
  },
  {
    "text": "you might you know you might Brute Force",
    "start": "632760",
    "end": "634160"
  },
  {
    "text": "overall of it and and um and just filter",
    "start": "634160",
    "end": "637120"
  },
  {
    "text": "for the cases but the search Str but um",
    "start": "637120",
    "end": "640160"
  },
  {
    "text": "that's not quite as efficient as doing",
    "start": "640160",
    "end": "642079"
  },
  {
    "text": "it this way and and and this one",
    "start": "642079",
    "end": "644839"
  },
  {
    "text": "abstracts your search strategy out so I",
    "start": "644839",
    "end": "646560"
  },
  {
    "text": "I'll go ahead and uh start for that so",
    "start": "646560",
    "end": "648519"
  },
  {
    "text": "we have",
    "start": "648519",
    "end": "649839"
  },
  {
    "text": "um I have two little um helper functions",
    "start": "649839",
    "end": "653200"
  },
  {
    "text": "here so",
    "start": "653200",
    "end": "656000"
  },
  {
    "text": "um daughters and fathers is is modeled",
    "start": "656000",
    "end": "659480"
  },
  {
    "text": "as a list of um as a list of names and",
    "start": "659480",
    "end": "664959"
  },
  {
    "text": "um as our daughters and",
    "start": "664959",
    "end": "668320"
  },
  {
    "text": "Yachts and I have that a",
    "start": "668320",
    "end": "672720"
  },
  {
    "text": "um a father and a daughter are related",
    "start": "674480",
    "end": "677000"
  },
  {
    "text": "if if the father and daughter same the",
    "start": "677000",
    "end": "679320"
  },
  {
    "text": "share the same position of the list so",
    "start": "679320",
    "end": "680920"
  },
  {
    "text": "Mary might be the first element of the",
    "start": "680920",
    "end": "682200"
  },
  {
    "text": "list and and and that that means she is",
    "start": "682200",
    "end": "685160"
  },
  {
    "text": "Mo's Mo's daughter because Mo's the",
    "start": "685160",
    "end": "686639"
  },
  {
    "text": "first tier so um we we're looking for",
    "start": "686639",
    "end": "690000"
  },
  {
    "text": "Laura's father it already knows that",
    "start": "690000",
    "end": "691320"
  },
  {
    "text": "there are five different possibilities",
    "start": "691320",
    "end": "692680"
  },
  {
    "text": "if it were Parker's daughter Lorna would",
    "start": "692680",
    "end": "694000"
  },
  {
    "text": "be in the fifth position and we don't",
    "start": "694000",
    "end": "695399"
  },
  {
    "text": "want know what's what's uh what the rest",
    "start": "695399",
    "end": "697880"
  },
  {
    "text": "is there so so let's uh let's just start",
    "start": "697880",
    "end": "699959"
  },
  {
    "text": "reading the problem Maryann Moore's",
    "start": "699959",
    "end": "701920"
  },
  {
    "text": "father so",
    "start": "701920",
    "end": "705560"
  },
  {
    "text": "um",
    "start": "708000",
    "end": "711000"
  },
  {
    "text": "more okay has a yacht and each of and",
    "start": "712000",
    "end": "715160"
  },
  {
    "text": "and so does each of his four friends so",
    "start": "715160",
    "end": "717480"
  },
  {
    "text": "um",
    "start": "717480",
    "end": "720480"
  },
  {
    "text": "um",
    "start": "729639",
    "end": "732639"
  },
  {
    "text": "okay and they all have",
    "start": "733720",
    "end": "736360"
  },
  {
    "text": "daughters so now at this point we see um",
    "start": "736360",
    "end": "739320"
  },
  {
    "text": "okay now it at least knows that the list",
    "start": "739320",
    "end": "741320"
  },
  {
    "text": "only have five elements and we know some",
    "start": "741320",
    "end": "743560"
  },
  {
    "text": "things about those and we have a few",
    "start": "743560",
    "end": "745040"
  },
  {
    "text": "possible",
    "start": "745040",
    "end": "746079"
  },
  {
    "text": "candidates um let let's go on so each of",
    "start": "746079",
    "end": "749320"
  },
  {
    "text": "five has has um has named his yacht at",
    "start": "749320",
    "end": "752160"
  },
  {
    "text": "one of the daughters so let's uh pero",
    "start": "752160",
    "end": "755800"
  },
  {
    "text": "Yachts uh",
    "start": "755800",
    "end": "758959"
  },
  {
    "text": "daughters and now we have um many more",
    "start": "761720",
    "end": "764079"
  },
  {
    "text": "possibilities coming up",
    "start": "764079",
    "end": "766399"
  },
  {
    "text": "um uh let's just keep keep reading",
    "start": "766399",
    "end": "768959"
  },
  {
    "text": "through that so we have",
    "start": "768959",
    "end": "773839"
  },
  {
    "text": "um Mr Moore owns the Lorna so owns",
    "start": "773839",
    "end": "779720"
  },
  {
    "text": "more",
    "start": "779720",
    "end": "781680"
  },
  {
    "text": "the",
    "start": "781680",
    "end": "784680"
  },
  {
    "text": "L",
    "start": "787880",
    "end": "789560"
  },
  {
    "text": "um h on",
    "start": "789560",
    "end": "793160"
  },
  {
    "text": "Rosland Melissa is owned by colonal",
    "start": "798720",
    "end": "803199"
  },
  {
    "text": "Downing",
    "start": "805279",
    "end": "807399"
  },
  {
    "text": "ding the Melissa",
    "start": "807399",
    "end": "810240"
  },
  {
    "text": "which also happens to",
    "start": "810240",
    "end": "812560"
  },
  {
    "text": "be",
    "start": "812560",
    "end": "814279"
  },
  {
    "text": "um barnicle's daughter",
    "start": "814279",
    "end": "817800"
  },
  {
    "text": "so Barnacle there we go and now this",
    "start": "817800",
    "end": "821600"
  },
  {
    "text": "next one is a little bit more",
    "start": "821600",
    "end": "822639"
  },
  {
    "text": "complicated so Gabriel's father owns the",
    "start": "822639",
    "end": "825000"
  },
  {
    "text": "y That's owned by Parker's daughter so",
    "start": "825000",
    "end": "826880"
  },
  {
    "text": "um we have a mysterious Gabriel's",
    "start": "826880",
    "end": "830720"
  },
  {
    "text": "father uh and Parker's",
    "start": "830720",
    "end": "834600"
  },
  {
    "text": "daughter and what do we know about those",
    "start": "834600",
    "end": "836800"
  },
  {
    "text": "so sire car's father",
    "start": "836800",
    "end": "839600"
  },
  {
    "text": "um Gabrielle of course",
    "start": "839600",
    "end": "843199"
  },
  {
    "text": "hopefully and",
    "start": "843199",
    "end": "846560"
  },
  {
    "text": "um",
    "start": "847199",
    "end": "848759"
  },
  {
    "text": "Parker Parker's daughter and those two",
    "start": "848759",
    "end": "851600"
  },
  {
    "text": "are related and",
    "start": "851600",
    "end": "853600"
  },
  {
    "text": "that",
    "start": "853600",
    "end": "855160"
  },
  {
    "text": "um let's see G's father owns a boat",
    "start": "855160",
    "end": "860079"
  },
  {
    "text": "named after Parker's daughter",
    "start": "860079",
    "end": "862360"
  },
  {
    "text": "great so let me um actually fix that",
    "start": "862360",
    "end": "865800"
  },
  {
    "text": "real quick",
    "start": "865800",
    "end": "869040"
  },
  {
    "text": "type check",
    "start": "870320",
    "end": "873079"
  },
  {
    "text": "great cool um at this point we only",
    "start": "873360",
    "end": "876639"
  },
  {
    "text": "have four possibilities that doesn't",
    "start": "876639",
    "end": "878959"
  },
  {
    "text": "seem quite right because I think we've",
    "start": "878959",
    "end": "880240"
  },
  {
    "text": "exhausted all of these",
    "start": "880240",
    "end": "882519"
  },
  {
    "text": "uh yeah you miss one of the yach one of",
    "start": "882519",
    "end": "885399"
  },
  {
    "text": "the Yachts which one is that so Barnacle",
    "start": "885399",
    "end": "889120"
  },
  {
    "text": "oh great",
    "start": "889120",
    "end": "890800"
  },
  {
    "text": "so Barnacle owns the Gabriel",
    "start": "890800",
    "end": "895880"
  },
  {
    "text": "comma there we",
    "start": "899880",
    "end": "902320"
  },
  {
    "text": "go and Downing a father great so yeah",
    "start": "902320",
    "end": "906240"
  },
  {
    "text": "you can see that that that that was a",
    "start": "906240",
    "end": "907839"
  },
  {
    "text": "that's very easy to translate um you",
    "start": "907839",
    "end": "909720"
  },
  {
    "text": "didn't have to do any search strategy",
    "start": "909720",
    "end": "910920"
  },
  {
    "text": "and it's it's what 12 13 14 lines of you",
    "start": "910920",
    "end": "914120"
  },
  {
    "text": "know very declarative code so it it's",
    "start": "914120",
    "end": "917839"
  },
  {
    "text": "it's very complimentary and kind of fits",
    "start": "917839",
    "end": "920160"
  },
  {
    "text": "uh fits into Scala this is a lot easier",
    "start": "920160",
    "end": "921920"
  },
  {
    "text": "for someone who's already doing",
    "start": "921920",
    "end": "922720"
  },
  {
    "text": "functional programming to to translate",
    "start": "922720",
    "end": "924440"
  },
  {
    "text": "you know as you saw with the pendo it's",
    "start": "924440",
    "end": "926399"
  },
  {
    "text": "it's very easy to translate functions",
    "start": "926399",
    "end": "928160"
  },
  {
    "text": "into um",
    "start": "928160",
    "end": "929600"
  },
  {
    "text": "into",
    "start": "929600",
    "end": "930600"
  },
  {
    "text": "relations wherever that",
    "start": "930600",
    "end": "932959"
  },
  {
    "text": "is um great so uh I'm I'm out of time I",
    "start": "932959",
    "end": "937639"
  },
  {
    "text": "think I I will uh I'll leave you some",
    "start": "937639",
    "end": "940199"
  },
  {
    "text": "resources there there is the the reent",
    "start": "940199",
    "end": "943040"
  },
  {
    "text": "schemer this is and and there various",
    "start": "943040",
    "end": "945240"
  },
  {
    "text": "other implementations and um I don't",
    "start": "945240",
    "end": "948480"
  },
  {
    "text": "think there are oh there is a lot lot of",
    "start": "948480",
    "end": "950880"
  },
  {
    "text": "work to be done on this um you know",
    "start": "950880",
    "end": "952959"
  },
  {
    "text": "disequality constraints finite domains",
    "start": "952959",
    "end": "954600"
  },
  {
    "text": "and so forth um types if if you if",
    "start": "954600",
    "end": "957399"
  },
  {
    "text": "you're watching closely you you'll",
    "start": "957399",
    "end": "958519"
  },
  {
    "text": "notice that you will have noticed some",
    "start": "958519",
    "end": "959680"
  },
  {
    "text": "NES in there I do have a type version",
    "start": "959680",
    "end": "961399"
  },
  {
    "text": "but uh the syntax isn't quite nice yet",
    "start": "961399",
    "end": "963600"
  },
  {
    "text": "so um uh it does have a lot of work",
    "start": "963600",
    "end": "965839"
  },
  {
    "text": "before it's more useable and um with",
    "start": "965839",
    "end": "967800"
  },
  {
    "text": "that uh thank you",
    "start": "967800",
    "end": "972040"
  }
]