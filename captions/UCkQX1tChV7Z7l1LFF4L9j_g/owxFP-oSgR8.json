[
  {
    "text": "so in the first ten minute talk I'll",
    "start": "3899",
    "end": "6870"
  },
  {
    "text": "describe an abstraction that we've",
    "start": "6870",
    "end": "8430"
  },
  {
    "text": "designed for modeling prediction",
    "start": "8430",
    "end": "10410"
  },
  {
    "text": "problems and this abstraction is the at",
    "start": "10410",
    "end": "13320"
  },
  {
    "text": "the heart of the platform that we are",
    "start": "13320",
    "end": "14759"
  },
  {
    "text": "building at select the platform is",
    "start": "14759",
    "end": "16890"
  },
  {
    "text": "called P DB and p DB is short for",
    "start": "16890",
    "end": "19380"
  },
  {
    "text": "prediction database the second talk will",
    "start": "19380",
    "end": "22230"
  },
  {
    "text": "actually be about the architecture of",
    "start": "22230",
    "end": "24029"
  },
  {
    "text": "the platform itself so the way we think",
    "start": "24029",
    "end": "28739"
  },
  {
    "text": "about our platform is it's a software",
    "start": "28739",
    "end": "32308"
  },
  {
    "text": "layer so it works like a database in the",
    "start": "32309",
    "end": "34620"
  },
  {
    "text": "sense that you can query it you can",
    "start": "34620",
    "end": "36629"
  },
  {
    "text": "query it for data if data is in the",
    "start": "36629",
    "end": "39239"
  },
  {
    "text": "database you get back the data if it's",
    "start": "39239",
    "end": "41010"
  },
  {
    "text": "not you get back a prediction along with",
    "start": "41010",
    "end": "43019"
  },
  {
    "text": "confidence and some provenance",
    "start": "43019",
    "end": "45539"
  },
  {
    "text": "information and when we are building it",
    "start": "45539",
    "end": "48780"
  },
  {
    "text": "we wanted it to work with all kinds of",
    "start": "48780",
    "end": "50579"
  },
  {
    "text": "data sources so it should work with text",
    "start": "50579",
    "end": "53190"
  },
  {
    "text": "it should work with numeric data with",
    "start": "53190",
    "end": "55050"
  },
  {
    "text": "images geospatial data time series etc",
    "start": "55050",
    "end": "58379"
  },
  {
    "text": "and it should work with all kinds of",
    "start": "58379",
    "end": "61589"
  },
  {
    "text": "prediction problems so it should be able",
    "start": "61589",
    "end": "63179"
  },
  {
    "text": "to do out-of-the-box time series",
    "start": "63179",
    "end": "65280"
  },
  {
    "text": "predictions classification anomaly",
    "start": "65280",
    "end": "67650"
  },
  {
    "text": "detection right so the entire list so",
    "start": "67650",
    "end": "72900"
  },
  {
    "text": "before we could build something like",
    "start": "72900",
    "end": "74310"
  },
  {
    "text": "this",
    "start": "74310",
    "end": "74670"
  },
  {
    "text": "we found we needed the right abstraction",
    "start": "74670",
    "end": "76680"
  },
  {
    "text": "right we needed a flexible abstraction",
    "start": "76680",
    "end": "79410"
  },
  {
    "text": "to talk about prediction problems so the",
    "start": "79410",
    "end": "82560"
  },
  {
    "text": "analogy here is with SQL and what it did",
    "start": "82560",
    "end": "84870"
  },
  {
    "text": "for databases right so what sequel did",
    "start": "84870",
    "end": "87690"
  },
  {
    "text": "for databases are decoupled the",
    "start": "87690",
    "end": "89550"
  },
  {
    "text": "description of the data we want to fetch",
    "start": "89550",
    "end": "91340"
  },
  {
    "text": "from where this data is stored and",
    "start": "91340",
    "end": "94710"
  },
  {
    "text": "instructions for actually accessing the",
    "start": "94710",
    "end": "96510"
  },
  {
    "text": "data so this allowed us to focus on the",
    "start": "96510",
    "end": "99750"
  },
  {
    "text": "logic and we out sourced kind of the",
    "start": "99750",
    "end": "103200"
  },
  {
    "text": "fetching of the data and all these",
    "start": "103200",
    "end": "104490"
  },
  {
    "text": "mechanics to the database and we want",
    "start": "104490",
    "end": "106980"
  },
  {
    "text": "something very similar right except we",
    "start": "106980",
    "end": "108960"
  },
  {
    "text": "won this for data science we want to be",
    "start": "108960",
    "end": "111510"
  },
  {
    "text": "able to focus on the fun pieces the",
    "start": "111510",
    "end": "113370"
  },
  {
    "text": "modeling of the data figuring out the",
    "start": "113370",
    "end": "116070"
  },
  {
    "text": "right features building the right models",
    "start": "116070",
    "end": "117990"
  },
  {
    "text": "and have the work of building the",
    "start": "117990",
    "end": "121080"
  },
  {
    "text": "pipelines maintaining them outsourced to",
    "start": "121080",
    "end": "123540"
  },
  {
    "text": "the prediction database so to explain",
    "start": "123540",
    "end": "128220"
  },
  {
    "text": "the abstraction itself I'll do this with",
    "start": "128220",
    "end": "129720"
  },
  {
    "text": "a simple toy problem so I'll use the",
    "start": "129720",
    "end": "131909"
  },
  {
    "text": "popular movie recommendation problem",
    "start": "131909",
    "end": "134299"
  },
  {
    "text": "right and the way I want to visualize",
    "start": "134299",
    "end": "136439"
  },
  {
    "text": "the data is in sheets",
    "start": "136439",
    "end": "137800"
  },
  {
    "text": "so like an excel file in this case is",
    "start": "137800",
    "end": "141100"
  },
  {
    "text": "for sheets stags and ratings and this is",
    "start": "141100",
    "end": "145450"
  },
  {
    "text": "similar to the movie lines data set so",
    "start": "145450",
    "end": "148900"
  },
  {
    "text": "the movie has all kinds of features of",
    "start": "148900",
    "end": "150880"
  },
  {
    "text": "the movies in our data set so in this",
    "start": "150880",
    "end": "152500"
  },
  {
    "text": "case title genre the year in which it",
    "start": "152500",
    "end": "154630"
  },
  {
    "text": "was produced users is similar so users",
    "start": "154630",
    "end": "159430"
  },
  {
    "text": "has features of the user right it",
    "start": "159430",
    "end": "161860"
  },
  {
    "text": "identifies each of the user it gives",
    "start": "161860",
    "end": "163600"
  },
  {
    "text": "them an ID and it tells us the name age",
    "start": "163600",
    "end": "166900"
  },
  {
    "text": "location and gender",
    "start": "166900",
    "end": "170590"
  },
  {
    "text": "tides and ratings are a bit different",
    "start": "170590",
    "end": "172960"
  },
  {
    "text": "right tags and ratings are both",
    "start": "172960",
    "end": "175060"
  },
  {
    "text": "interactions in that they involve both a",
    "start": "175060",
    "end": "176950"
  },
  {
    "text": "movie and a user so tag is something",
    "start": "176950",
    "end": "179680"
  },
  {
    "text": "that any user who watches a movie can",
    "start": "179680",
    "end": "182230"
  },
  {
    "text": "give that movie so it can be random text",
    "start": "182230",
    "end": "184210"
  },
  {
    "text": "so some users put in something to do",
    "start": "184210",
    "end": "186220"
  },
  {
    "text": "with the genre some uses tag the actors",
    "start": "186220",
    "end": "189400"
  },
  {
    "text": "in the movie it can be arbitrary and",
    "start": "189400",
    "end": "193200"
  },
  {
    "text": "finally rating right and for the problem",
    "start": "193200",
    "end": "197890"
  },
  {
    "text": "of predicting or movie recommendations",
    "start": "197890",
    "end": "200110"
  },
  {
    "text": "ratings is really what we want to",
    "start": "200110",
    "end": "201610"
  },
  {
    "text": "predict it's typically very sparse",
    "start": "201610",
    "end": "204990"
  },
  {
    "text": "not all users have seen all movies and",
    "start": "204990",
    "end": "208770"
  },
  {
    "text": "the task here is for a movie user pair",
    "start": "208770",
    "end": "211720"
  },
  {
    "text": "where we don't have a rating in the",
    "start": "211720",
    "end": "213100"
  },
  {
    "text": "system to predict that rating so what",
    "start": "213100",
    "end": "216490"
  },
  {
    "text": "does the PD be abstraction look like for",
    "start": "216490",
    "end": "218890"
  },
  {
    "text": "this data set for every cell in this",
    "start": "218890",
    "end": "221950"
  },
  {
    "text": "excel file we model it as a key value",
    "start": "221950",
    "end": "224890"
  },
  {
    "text": "pair so the value is whatever happens to",
    "start": "224890",
    "end": "227530"
  },
  {
    "text": "be in that cell if it's an image or text",
    "start": "227530",
    "end": "230230"
  },
  {
    "text": "it's a vectorized form of it and the key",
    "start": "230230",
    "end": "233290"
  },
  {
    "text": "is how we address that value and in this",
    "start": "233290",
    "end": "237190"
  },
  {
    "text": "case the key is uniform it always",
    "start": "237190",
    "end": "239620"
  },
  {
    "text": "consists of two components the first",
    "start": "239620",
    "end": "241450"
  },
  {
    "text": "component is an operation operation",
    "start": "241450",
    "end": "244450"
  },
  {
    "text": "tells us kind of what kind of data it is",
    "start": "244450",
    "end": "246850"
  },
  {
    "text": "right so it's what kind of relationship",
    "start": "246850",
    "end": "249280"
  },
  {
    "text": "are we trying to model the second",
    "start": "249280",
    "end": "251709"
  },
  {
    "text": "component is a pair of IDs so ID 1 and",
    "start": "251709",
    "end": "254860"
  },
  {
    "text": "ID 2 and in general they talk about the",
    "start": "254860",
    "end": "257530"
  },
  {
    "text": "entities in our data set so in this",
    "start": "257530",
    "end": "259419"
  },
  {
    "text": "simple case there are two kinds of",
    "start": "259419",
    "end": "261100"
  },
  {
    "text": "entities there's the users and there's",
    "start": "261100",
    "end": "263350"
  },
  {
    "text": "the movies so the users here are from 1",
    "start": "263350",
    "end": "266950"
  },
  {
    "text": "to M the movies from 1 to N and you can",
    "start": "266950",
    "end": "269590"
  },
  {
    "text": "think of these as points in a graph",
    "start": "269590",
    "end": "271750"
  },
  {
    "text": "right so these are vertices in a graph",
    "start": "271750",
    "end": "273160"
  },
  {
    "text": "and every data point we have in our data",
    "start": "273160",
    "end": "276160"
  },
  {
    "text": "set will be an edge in our graph so for",
    "start": "276160",
    "end": "279220"
  },
  {
    "text": "instance take rating right so this is",
    "start": "279220",
    "end": "282910"
  },
  {
    "text": "one data point it says that the rating",
    "start": "282910",
    "end": "285550"
  },
  {
    "text": "that user one gave movie n is a 5 right",
    "start": "285550",
    "end": "289060"
  },
  {
    "text": "so the operation here is rating it tells",
    "start": "289060",
    "end": "291400"
  },
  {
    "text": "us what kind of data 5 is ID 1",
    "start": "291400",
    "end": "294640"
  },
  {
    "text": "identifies a particular user and ID 2",
    "start": "294640",
    "end": "297820"
  },
  {
    "text": "identifies a particular movie right so",
    "start": "297820",
    "end": "301270"
  },
  {
    "text": "now the movies cheap movie sheet looks",
    "start": "301270",
    "end": "304840"
  },
  {
    "text": "like this now we no longer have two",
    "start": "304840",
    "end": "307000"
  },
  {
    "text": "entities involved there is just one",
    "start": "307000",
    "end": "308380"
  },
  {
    "text": "entity the movie the operation is either",
    "start": "308380",
    "end": "311530"
  },
  {
    "text": "genre or title and since we have only",
    "start": "311530",
    "end": "315250"
  },
  {
    "text": "one entity ID 2 is an odd and ID 1 is",
    "start": "315250",
    "end": "318700"
  },
  {
    "text": "either movie 1 or movie n so it's the",
    "start": "318700",
    "end": "320800"
  },
  {
    "text": "genre of movie 1 as a comedy and we do",
    "start": "320800",
    "end": "327310"
  },
  {
    "text": "the same thing for users right so the",
    "start": "327310",
    "end": "329260"
  },
  {
    "text": "gender of user M is male and thanks kind",
    "start": "329260",
    "end": "332440"
  },
  {
    "text": "of looks like ratings so operation is",
    "start": "332440",
    "end": "336460"
  },
  {
    "text": "stag ID 1 as user 1 ID 2 is movie 1 and",
    "start": "336460",
    "end": "341650"
  },
  {
    "text": "the value is a vectorized for most of",
    "start": "341650",
    "end": "343480"
  },
  {
    "text": "screwball comedy so we've actually found",
    "start": "343480",
    "end": "347200"
  },
  {
    "text": "that even though this as a",
    "start": "347200",
    "end": "348370"
  },
  {
    "text": "representation looks very simple it's",
    "start": "348370",
    "end": "351640"
  },
  {
    "text": "able to model all kinds of relationships",
    "start": "351640",
    "end": "353890"
  },
  {
    "text": "in the data we've modelled fairly",
    "start": "353890",
    "end": "355630"
  },
  {
    "text": "complicated sets of relationships and we",
    "start": "355630",
    "end": "358600"
  },
  {
    "text": "can model all problems using the same",
    "start": "358600",
    "end": "360640"
  },
  {
    "text": "abstraction and in general it looks like",
    "start": "360640",
    "end": "363220"
  },
  {
    "text": "a tensor completion problem in",
    "start": "363220",
    "end": "366310"
  },
  {
    "text": "particular it looks like a 3 order",
    "start": "366310",
    "end": "368229"
  },
  {
    "text": "tensor completion problem one dimension",
    "start": "368229",
    "end": "371110"
  },
  {
    "text": "is operation and you can view the data",
    "start": "371110",
    "end": "373300"
  },
  {
    "text": "as slices along operation and each of",
    "start": "373300",
    "end": "376330"
  },
  {
    "text": "those slices has two axis ID 1 and ID -",
    "start": "376330",
    "end": "378940"
  },
  {
    "text": "and anytime we want a piece of data",
    "start": "378940",
    "end": "382750"
  },
  {
    "text": "that's not in the data set that looks",
    "start": "382750",
    "end": "385150"
  },
  {
    "text": "like a tensor completion problem so we",
    "start": "385150",
    "end": "387100"
  },
  {
    "text": "specify operation we specify ID 1 and ID",
    "start": "387100",
    "end": "389740"
  },
  {
    "text": "2 so that forms the key and we query for",
    "start": "389740",
    "end": "392890"
  },
  {
    "text": "the value so what do we get with an",
    "start": "392890",
    "end": "398290"
  },
  {
    "text": "abstraction like this",
    "start": "398290",
    "end": "399970"
  },
  {
    "text": "so what we found when we were building",
    "start": "399970",
    "end": "401950"
  },
  {
    "text": "pipelines is inevitably we had to stitch",
    "start": "401950",
    "end": "404890"
  },
  {
    "text": "together several data sources in order",
    "start": "404890",
    "end": "407080"
  },
  {
    "text": "to get something good out of the system",
    "start": "407080",
    "end": "409410"
  },
  {
    "text": "different data sources organized data",
    "start": "409410",
    "end": "411730"
  },
  {
    "text": "differently they call the same thing",
    "start": "411730",
    "end": "414100"
  },
  {
    "text": "different names so typically it's hard",
    "start": "414100",
    "end": "417010"
  },
  {
    "text": "to stitch them together it requires some",
    "start": "417010",
    "end": "419110"
  },
  {
    "text": "custom work each time but once we",
    "start": "419110",
    "end": "421780"
  },
  {
    "text": "process them and had them represented",
    "start": "421780",
    "end": "423670"
  },
  {
    "text": "using some common vocabulary stitching",
    "start": "423670",
    "end": "426430"
  },
  {
    "text": "him together is much easier and when we",
    "start": "426430",
    "end": "429730"
  },
  {
    "text": "have intermediate models intermediate",
    "start": "429730",
    "end": "431590"
  },
  {
    "text": "predictions they're easy to use across",
    "start": "431590",
    "end": "433420"
  },
  {
    "text": "multiple pipelines across multiple",
    "start": "433420",
    "end": "435220"
  },
  {
    "text": "predictions the other thing we found was",
    "start": "435220",
    "end": "439030"
  },
  {
    "text": "what would normally happen as we would",
    "start": "439030",
    "end": "440920"
  },
  {
    "text": "start working on a data set we would",
    "start": "440920",
    "end": "442540"
  },
  {
    "text": "build some models be able to predict",
    "start": "442540",
    "end": "444310"
  },
  {
    "text": "something and immediately someone would",
    "start": "444310",
    "end": "447460"
  },
  {
    "text": "want to predict something else and when",
    "start": "447460",
    "end": "450550"
  },
  {
    "text": "we had stored our data and our models",
    "start": "450550",
    "end": "452470"
  },
  {
    "text": "and kind of very specific form so when",
    "start": "452470",
    "end": "454330"
  },
  {
    "text": "we had feature vectors for instance it",
    "start": "454330",
    "end": "456550"
  },
  {
    "text": "wasn't trivial so predicting something",
    "start": "456550",
    "end": "458740"
  },
  {
    "text": "else meant building one more pipeline to",
    "start": "458740",
    "end": "460750"
  },
  {
    "text": "do that here we have an abstraction",
    "start": "460750",
    "end": "464110"
  },
  {
    "text": "that's not tied to what we are",
    "start": "464110",
    "end": "465550"
  },
  {
    "text": "predicting and asking a different",
    "start": "465550",
    "end": "467200"
  },
  {
    "text": "prediction question is really easy and",
    "start": "467200",
    "end": "470130"
  },
  {
    "text": "the last thing I said so now we have",
    "start": "470130",
    "end": "473410"
  },
  {
    "text": "this abstraction all our abstract all",
    "start": "473410",
    "end": "475060"
  },
  {
    "text": "our algorithms are coded only to work",
    "start": "475060",
    "end": "477070"
  },
  {
    "text": "with this abstraction we have nothing",
    "start": "477070",
    "end": "478960"
  },
  {
    "text": "else that we deal with but that means we",
    "start": "478960",
    "end": "481419"
  },
  {
    "text": "know exactly how to layout data for for",
    "start": "481419",
    "end": "484180"
  },
  {
    "text": "efficiency both for compute and for",
    "start": "484180",
    "end": "486280"
  },
  {
    "text": "query and we don't have to redo this",
    "start": "486280",
    "end": "488560"
  },
  {
    "text": "work of optimizing you know how should I",
    "start": "488560",
    "end": "490780"
  },
  {
    "text": "partition my data what indices I built",
    "start": "490780",
    "end": "492940"
  },
  {
    "text": "every time we get a new data set and all",
    "start": "492940",
    "end": "496720"
  },
  {
    "text": "our pipelines look homogeneous they are",
    "start": "496720",
    "end": "498580"
  },
  {
    "text": "built based on exactly the same",
    "start": "498580",
    "end": "500110"
  },
  {
    "text": "abstraction it's the same code making",
    "start": "500110",
    "end": "502450"
  },
  {
    "text": "maintaining them really easy so what we",
    "start": "502450",
    "end": "505720"
  },
  {
    "text": "found was having an abstraction like",
    "start": "505720",
    "end": "507340"
  },
  {
    "text": "this that let us decouple what the data",
    "start": "507340",
    "end": "509650"
  },
  {
    "text": "was and what ETL pipelines were from",
    "start": "509650",
    "end": "512440"
  },
  {
    "text": "what the algorithm and machine learning",
    "start": "512440",
    "end": "513849"
  },
  {
    "text": "pipelines was really helped us build our",
    "start": "513849",
    "end": "516870"
  },
  {
    "text": "platform really efficiently so after the",
    "start": "516870",
    "end": "520270"
  },
  {
    "text": "break I'll talk in a bit more detail",
    "start": "520270",
    "end": "521919"
  },
  {
    "text": "about what our platform architecture",
    "start": "521919",
    "end": "523719"
  },
  {
    "text": "looks like thank you",
    "start": "523719",
    "end": "527420"
  },
  {
    "text": "you",
    "start": "527420",
    "end": "529480"
  }
]