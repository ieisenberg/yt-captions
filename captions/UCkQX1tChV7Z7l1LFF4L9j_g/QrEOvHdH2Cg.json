[
  {
    "text": "[Music]",
    "start": "3320",
    "end": "9620"
  },
  {
    "text": "in the beginning the cloud was formless and void and the engineers provisioned",
    "start": "15200",
    "end": "20400"
  },
  {
    "text": "a server it talked to the database and served up the web page and it was",
    "start": "20400",
    "end": "27279"
  },
  {
    "text": "good the users came and the business grew as the company grew they formed more",
    "start": "27279",
    "end": "33760"
  },
  {
    "text": "engineering teams as the server grew it became a monolith",
    "start": "33760",
    "end": "39760"
  },
  {
    "text": "they divided the monolith into micro services in order to increase the autonomy of the",
    "start": "39760",
    "end": "45200"
  },
  {
    "text": "teams so they could move faster then the engineers created apps that",
    "start": "45200",
    "end": "50239"
  },
  {
    "text": "used the services but the engineers saw that it was not good for each app to have to talk to",
    "start": "50239",
    "end": "56079"
  },
  {
    "text": "every service on its own so they created an api gateway to bind the services together",
    "start": "56079",
    "end": "62800"
  },
  {
    "text": "and in the seventh year they rested but not for long because they continued",
    "start": "62800",
    "end": "68479"
  },
  {
    "text": "to innovate they saw that rest was insufficient so they created graph query languages for the apps to fetch data",
    "start": "68479",
    "end": "75200"
  },
  {
    "text": "from the api and it was all good time passed and the company continued to",
    "start": "75200",
    "end": "80720"
  },
  {
    "text": "grow and teams were fruitful and the services multiplied",
    "start": "80720",
    "end": "86400"
  },
  {
    "text": "the api gateway that bound them together grew as well in order to compose the many services",
    "start": "86400",
    "end": "92720"
  },
  {
    "text": "and there was temptation in order to handle failure gracefully they added fallback logic into the",
    "start": "92720",
    "end": "98320"
  },
  {
    "text": "gateway simple caches gave way to complex and memory data stores",
    "start": "98320",
    "end": "103600"
  },
  {
    "text": "along with business logic before they knew it the api gateway had become",
    "start": "103600",
    "end": "109520"
  },
  {
    "text": "the new monolith",
    "start": "109520",
    "end": "115840"
  },
  {
    "text": "what stephen has just described is the state of netflix microservices today we have hundreds of mid-tier services",
    "start": "124960",
    "end": "131520"
  },
  {
    "text": "providing apis for uis to consume and yet they're all aggregated into a single api monolith",
    "start": "131520",
    "end": "138800"
  },
  {
    "text": "this architecture might sound familiar to you if your organization also implements a microservices",
    "start": "138800",
    "end": "144640"
  },
  {
    "text": "architecture with a single api aggregation tier we had done all of this work to break apart our",
    "start": "144640",
    "end": "151840"
  },
  {
    "text": "system into microservices and yet we still found ourselves with an api monolith",
    "start": "151840",
    "end": "157599"
  },
  {
    "text": "so we asked ourselves now what i'm jennifer and i'm steven we're",
    "start": "157599",
    "end": "164480"
  },
  {
    "text": "engineers at netflix on the api systems team you might also know us as edge engineering we work on",
    "start": "164480",
    "end": "170000"
  },
  {
    "text": "this api aggregation layer the nexus point between uis and the universe of netflix",
    "start": "170000",
    "end": "175760"
  },
  {
    "text": "microservices there's all these services on the back end and all these different uis running on different device types",
    "start": "175760",
    "end": "182560"
  },
  {
    "text": "our team represents this tiny aggregation point in the middle we take the apis exposed by",
    "start": "182560",
    "end": "188319"
  },
  {
    "text": "microservices and weave them together into one big graph api and this",
    "start": "188319",
    "end": "195760"
  },
  {
    "text": "the clients can simply pretend that netflix is a single service but we're actually just the middleman we",
    "start": "195760",
    "end": "201760"
  },
  {
    "text": "simply aggregate information from all of these different data sources this architecture has served us well for",
    "start": "201760",
    "end": "208640"
  },
  {
    "text": "many years but we're starting to see that it's reaching its limit in order to scale even further netflix",
    "start": "208640",
    "end": "214959"
  },
  {
    "text": "has placed a big bet on an architecture called federation we're here today to tell you what",
    "start": "214959",
    "end": "221360"
  },
  {
    "text": "federation is how it's enabled us to scale to previously unprecedented levels and to convince you that",
    "start": "221360",
    "end": "228959"
  },
  {
    "text": "federation is the future of apis first let me tell you a story one year",
    "start": "228959",
    "end": "234319"
  },
  {
    "text": "ago i was on call for the netflix api service team it was thanksgiving and i was visiting family everyone was bustling trying to",
    "start": "234319",
    "end": "241519"
  },
  {
    "text": "prepare dinner when i get paged so i log on to see what the problem is",
    "start": "241519",
    "end": "247120"
  },
  {
    "text": "and i'm told that the trick play images are appearing in mandarin on a big movie that we had just released",
    "start": "247120",
    "end": "253599"
  },
  {
    "text": "so naturally the first thing i did was google what are triple images",
    "start": "253599",
    "end": "260230"
  },
  {
    "text": "[Laughter] then i started searching through api to figure out where it was exposed and how",
    "start": "260230",
    "end": "266960"
  },
  {
    "text": "it was used i knew i'd seen the word trick before somewhere but even though i'd been on the api team",
    "start": "266960",
    "end": "273040"
  },
  {
    "text": "for several years i never knew exactly what they were and yet right now i needed to become an",
    "start": "273040",
    "end": "279280"
  },
  {
    "text": "expert enough to fix them and quick before everyone starts tweeting that netflix is in chinese",
    "start": "279280",
    "end": "286320"
  },
  {
    "text": "that's the problem our graph had grown so large that no single human understands",
    "start": "286320",
    "end": "292479"
  },
  {
    "text": "the entire surface area and yet the entire graph is owned by a single team",
    "start": "292479",
    "end": "299040"
  },
  {
    "text": "what if we could break the api apart so that domain experts could own their part of the",
    "start": "299040",
    "end": "304560"
  },
  {
    "text": "graph and still expose the entire netflix ecosystem from a single unified access point",
    "start": "304560",
    "end": "311919"
  },
  {
    "text": "this is precisely what federation enables it's a way of breaking apart the implementation of your api",
    "start": "311919",
    "end": "318240"
  },
  {
    "text": "while preserving the facade of a unified api for clients it allows you to remove the",
    "start": "318240",
    "end": "324800"
  },
  {
    "text": "business logic from the core aggregator so that it becomes an appliance kind of like a reverse proxy",
    "start": "324800",
    "end": "331440"
  },
  {
    "text": "and that is something you can scale the title of this talk is how netflix scales its api with",
    "start": "331440",
    "end": "337440"
  },
  {
    "text": "graphql federation so let's talk a little bit about what graphql is and then we'll talk about how",
    "start": "337440",
    "end": "343360"
  },
  {
    "text": "federation works within that context now if you've seen netflix talks in the past you might know that the netflix app",
    "start": "343360",
    "end": "350400"
  },
  {
    "text": "actually uses a different graph api technology called falcore it's conceptually very similar",
    "start": "350400",
    "end": "356479"
  },
  {
    "text": "to graphql but back in 2012 graphql didn't exist yet so we created falcore in 2020",
    "start": "356479",
    "end": "364400"
  },
  {
    "text": "graphql is now pretty much taking over the world and netflix is using it too federation can actually be applied to",
    "start": "364400",
    "end": "371280"
  },
  {
    "text": "both but today we'll be talking about graphql here's an example of a really simple",
    "start": "371280",
    "end": "377199"
  },
  {
    "text": "graph api first from the very root of the graph which for graphql",
    "start": "377199",
    "end": "382720"
  },
  {
    "text": "is called query you can fetch the recommended videos for a user from there you can traverse into each",
    "start": "382720",
    "end": "389680"
  },
  {
    "text": "one of those videos the video type has further fields that we can fetch like title or rating some of these",
    "start": "389680",
    "end": "397199"
  },
  {
    "text": "fields just return scalar values but others express a relationship to another object",
    "start": "397199",
    "end": "403120"
  },
  {
    "text": "such as trailer which would then be another video object one of the key distinctions of a graph",
    "start": "403120",
    "end": "409280"
  },
  {
    "text": "api is that we can selectively choose the properties that we want as a client",
    "start": "409280",
    "end": "414560"
  },
  {
    "text": "and then follow relationships and recursively select properties from other objects",
    "start": "414560",
    "end": "423120"
  },
  {
    "text": "now the actual netflix graph is a bit more complex you might say it's like something from",
    "start": "423120",
    "end": "429280"
  },
  {
    "text": "the upside down so let's break it up with graphql federation",
    "start": "429280",
    "end": "434639"
  },
  {
    "text": "each distinct domain or logical business portion of the graph is served by a different service",
    "start": "434639",
    "end": "440800"
  },
  {
    "text": "the api aggregation layer composes these together into a single unified graph let's take a",
    "start": "440800",
    "end": "446880"
  },
  {
    "text": "look at our example again this is what that graph would look like in a federated architecture",
    "start": "446880",
    "end": "452800"
  },
  {
    "text": "each of these colors represent fields fulfilled by a separate service these different chunks of the graph",
    "start": "452800",
    "end": "457919"
  },
  {
    "text": "represent a portion of the graph that one domain service is responsible for serving up",
    "start": "457919",
    "end": "465360"
  },
  {
    "text": "then a service called the gateway which you can think of as the the aggregator",
    "start": "465360",
    "end": "470479"
  },
  {
    "text": "binds these separate schemas or graphs into a single composed graph each service only provides the part of",
    "start": "470479",
    "end": "477280"
  },
  {
    "text": "the schema it is responsible for the video service provides the title description and trailer for a single",
    "start": "477280",
    "end": "482400"
  },
  {
    "text": "video and the images service provides image urls or backstart urls",
    "start": "482400",
    "end": "487440"
  },
  {
    "text": "the recommendation service provides the top recommended videos for a user for each video",
    "start": "487440",
    "end": "493280"
  },
  {
    "text": "it only knows the video id that's all it knows about videos that's all it needs to know the gateway",
    "start": "493280",
    "end": "499199"
  },
  {
    "text": "does the rest with such clear service boundaries we now know who to talk to when say",
    "start": "499199",
    "end": "504560"
  },
  {
    "text": "video metadata stops appearing for a given video in fact their pager duty id and slack",
    "start": "504560",
    "end": "510160"
  },
  {
    "text": "support channel are actually embedded directly into the graph metadata so we know exactly who to call when",
    "start": "510160",
    "end": "516159"
  },
  {
    "text": "something goes wrong but also the video service team is not",
    "start": "516159",
    "end": "522000"
  },
  {
    "text": "bound by the speed of any other team in exposing their apis when they're ready for their api to be",
    "start": "522000",
    "end": "528160"
  },
  {
    "text": "consumed by clients their apis are available so that's",
    "start": "528160",
    "end": "533200"
  },
  {
    "text": "federation you take your api and break it into chunks that can be developed independently",
    "start": "533200",
    "end": "538399"
  },
  {
    "text": "you can think of each chunk as a micro aggregator that just handles a single domain",
    "start": "538399",
    "end": "543519"
  },
  {
    "text": "these can be implemented by domain experts then a graph aware gateway ties them together into a single api",
    "start": "543519",
    "end": "551279"
  },
  {
    "text": "now this graph gateway is still a central junction in our architecture but there's a key difference it doesn't",
    "start": "551279",
    "end": "557839"
  },
  {
    "text": "contain any business logic it just follows a declarative configuration that tells it which data comes from which service",
    "start": "557839",
    "end": "565360"
  },
  {
    "text": "this means crucially that the team managing the graph gateway doesn't need to scale along with the",
    "start": "565360",
    "end": "570959"
  },
  {
    "text": "size and complexity of the graph that's being exposed so that's the idea behind federation",
    "start": "570959",
    "end": "577200"
  },
  {
    "text": "let's go a little bit deeper into how it's implemented there are three components to a",
    "start": "577200",
    "end": "582560"
  },
  {
    "text": "federated architecture graph surfaces the schema registry and the graph gateway so let's take",
    "start": "582560",
    "end": "590080"
  },
  {
    "text": "graph services first graph services are simply just graphql servers",
    "start": "590080",
    "end": "595680"
  },
  {
    "text": "they expose a small portion of the overall schema and publish it using what's called a",
    "start": "595680",
    "end": "602079"
  },
  {
    "text": "schema registry the schema registry has one essential task to hold the schemas for all your",
    "start": "602079",
    "end": "608320"
  },
  {
    "text": "services along with each schema it holds some configuration like url or discovery identifier we also like to",
    "start": "608320",
    "end": "616480"
  },
  {
    "text": "register the contact information for the team behind the service because then that can be embedded",
    "start": "616480",
    "end": "622560"
  },
  {
    "text": "automatically into the documentation for the graph before a schema can be updated it has to",
    "start": "622560",
    "end": "629120"
  },
  {
    "text": "be validated beyond basic linting we also catch things like breaking changes",
    "start": "629120",
    "end": "635279"
  },
  {
    "text": "and conflicts that arise when combining the schema with the rest of the graph",
    "start": "635279",
    "end": "640320"
  },
  {
    "text": "and finally the registry provides the schemas and configuration to the gateway",
    "start": "640320",
    "end": "645440"
  },
  {
    "text": "and finally we have the graph gateway this is where the magic happens the job of the gateway is to take a",
    "start": "645440",
    "end": "651920"
  },
  {
    "text": "single incoming client query and break it into sub queries that can then be executed against the downstream",
    "start": "651920",
    "end": "658880"
  },
  {
    "text": "graphql servers now remember this graph gateway is an appliance",
    "start": "658880",
    "end": "664320"
  },
  {
    "text": "until it loads a configuration from the schema registry it knows nothing about netflix or about",
    "start": "664320",
    "end": "670079"
  },
  {
    "text": "our api in particular a traditional http proxy is generally",
    "start": "670079",
    "end": "675440"
  },
  {
    "text": "considered a layer 7 proxy in reference to http belonging to the application layer of",
    "start": "675440",
    "end": "682079"
  },
  {
    "text": "the osi reference model but graphql queries unlike rest are",
    "start": "682079",
    "end": "687440"
  },
  {
    "text": "abstracted from the http layer so you could think of this as a layer 8 multiplexing proxy",
    "start": "687440",
    "end": "695440"
  },
  {
    "text": "so how does it work the gateway processes a request in two stages query planning and query",
    "start": "695440",
    "end": "701920"
  },
  {
    "text": "execution the query planner traverses a client's entire request",
    "start": "701920",
    "end": "707279"
  },
  {
    "text": "and recursively collects the fields that belong to each service and it identifies the ones that can be",
    "start": "707279",
    "end": "713839"
  },
  {
    "text": "fetched in parallel and the ones that have to be retrieved sequentially",
    "start": "713839",
    "end": "718880"
  },
  {
    "text": "let's look at an example given our initial schema if we wanted to take the top 10 videos",
    "start": "718880",
    "end": "726240"
  },
  {
    "text": "for a given user and then for each one we want to fetch the title from the video service and the box our",
    "start": "726240",
    "end": "731839"
  },
  {
    "text": "images from the images service the query plan would look something like this",
    "start": "731839",
    "end": "737519"
  },
  {
    "text": "we know we have to fetch the top recommended videos first because we need those video ids",
    "start": "737519",
    "end": "742560"
  },
  {
    "text": "in order to know which titles and image urls to fetch so that's precisely how the query plan",
    "start": "742560",
    "end": "748639"
  },
  {
    "text": "is constructed the recommended videos are fetched first and then in parallel title is",
    "start": "748639",
    "end": "754560"
  },
  {
    "text": "fetched from the video service and box art urls are fetched from the image of service",
    "start": "754560",
    "end": "759839"
  },
  {
    "text": "the gateway sees a query plan in this form it's simply a tree of fetch parallel sequence and flattened",
    "start": "759839",
    "end": "766560"
  },
  {
    "text": "nodes there are three fetch nodes in this query plan you'll notice the parent of",
    "start": "766560",
    "end": "771680"
  },
  {
    "text": "the very first fetch is a sequence node signifying that whatever sibling of this first",
    "start": "771680",
    "end": "777440"
  },
  {
    "text": "fetch will happen after that fetch is executed the sibling of this initial fetch",
    "start": "777440",
    "end": "782560"
  },
  {
    "text": "is a nested parallel node signifying that after the first vet from recommendations the gateway should then execute the",
    "start": "782560",
    "end": "789200"
  },
  {
    "text": "subsequent fetches in parallel that is then wrapped in a flat node which signifies",
    "start": "789200",
    "end": "794639"
  },
  {
    "text": "how the results should get stitched back together executing the query plan is pretty straightforward then we simply",
    "start": "794639",
    "end": "801040"
  },
  {
    "text": "traverse the entire query plan starting from the very root node in parallel or in sequence",
    "start": "801040",
    "end": "807120"
  },
  {
    "text": "and merge them together into the overall response here's pretty much the actual code",
    "start": "807120",
    "end": "812800"
  },
  {
    "text": "that's responsible for this it's simply a recursive function that traverses all the nodes in the query",
    "start": "812800",
    "end": "818800"
  },
  {
    "text": "plan when the node is a sequence node we simply execute whatever's inside that node when the",
    "start": "818800",
    "end": "825199"
  },
  {
    "text": "node is a parallel node the code execution block is wrapped in an async block",
    "start": "825199",
    "end": "830480"
  },
  {
    "text": "and that tells the kotlin compiler to execute the nested code asynchronously or in parallel flattened",
    "start": "830480",
    "end": "837199"
  },
  {
    "text": "nodes as mentioned tell the executor where to stitch the result of the query execution back into the overall response",
    "start": "837199",
    "end": "845279"
  },
  {
    "text": "and fetch nodes actually do the fetching against the graph service and that's pretty much it so that's",
    "start": "845279",
    "end": "852959"
  },
  {
    "text": "federation now let's talk about how we've been using this at netflix and what we've learned",
    "start": "852959",
    "end": "858800"
  },
  {
    "text": "it all started a couple years ago in 2018 the netflix api team was exploring ways to break apart our",
    "start": "858800",
    "end": "865440"
  },
  {
    "text": "api monolith we prototyped a federating graph gateway for falcore",
    "start": "865440",
    "end": "871440"
  },
  {
    "text": "this was really exciting because it demonstrated a potentially transformative way to scale our api meanwhile",
    "start": "871440",
    "end": "880079"
  },
  {
    "text": "there was another organization at netflix that was building their own api aggregation layer this rapidly",
    "start": "880079",
    "end": "886959"
  },
  {
    "text": "growing organization is netflix studio netflix studio",
    "start": "886959",
    "end": "892160"
  },
  {
    "text": "engineering makes a bunch of apps that facilitate the creation of all the content you enjoy in the netflix app",
    "start": "892160",
    "end": "898160"
  },
  {
    "text": "this includes custom software for things like scheduling talent management dubbing animation etc",
    "start": "898160",
    "end": "905279"
  },
  {
    "text": "there were dozens of services providing all this functionality and netflix studio decided to make a",
    "start": "905279",
    "end": "910639"
  },
  {
    "text": "graphql aggregation layer to tie them together now you might have noticed that the number of netflix originals has",
    "start": "910639",
    "end": "917360"
  },
  {
    "text": "exploded over the last few years well so has the netflix studio graph",
    "start": "917360",
    "end": "924240"
  },
  {
    "text": "in only a few months this studio graph had grown to a point that it took the netflix consumer graph",
    "start": "924240",
    "end": "930160"
  },
  {
    "text": "years to get to the studio api team was already feeling the pains of a monolithic architecture so the",
    "start": "930160",
    "end": "937680"
  },
  {
    "text": "company placed a big bet on implementing federation here first the two api teams joined",
    "start": "937680",
    "end": "944320"
  },
  {
    "text": "forces to create a scalable api platform for studio right around this time a company called",
    "start": "944320",
    "end": "951040"
  },
  {
    "text": "apollo had just released a spec for something they called graphql",
    "start": "951040",
    "end": "956160"
  },
  {
    "text": "federation studio was already using graphql at the time so this seemed like a perfect fit in",
    "start": "956160",
    "end": "962800"
  },
  {
    "text": "july of 2019 the combined api teams started building a graphql gateway based",
    "start": "962800",
    "end": "969519"
  },
  {
    "text": "off of apollo's reference implementation we chose to implement our gateway using",
    "start": "969519",
    "end": "974959"
  },
  {
    "text": "kotlin this would give us access to netflix's java ecosystem while allowing us to rapidly develop a",
    "start": "974959",
    "end": "981920"
  },
  {
    "text": "robust solution with language features such as coroutines for efficient parallel fetches",
    "start": "981920",
    "end": "987600"
  },
  {
    "text": "and an expressive type system that handles null safely as we started to implement the gateway",
    "start": "987600",
    "end": "993839"
  },
  {
    "text": "we had one lingering question would it be fast enough we wanted to make sure that we weren't going to add",
    "start": "993839",
    "end": "999360"
  },
  {
    "text": "too much latency so as soon as the basic functionality was complete we did some benchmarking",
    "start": "999360",
    "end": "1004720"
  },
  {
    "text": "the core gateway activities of query planning and execution were clocking in at under a millisecond",
    "start": "1004720",
    "end": "1010959"
  },
  {
    "text": "this gave us enough confidence to move forward within a few months we had an initial release of the gateway",
    "start": "1010959",
    "end": "1017440"
  },
  {
    "text": "ready to go we took the former api monolith and put it behind the gateway",
    "start": "1017440",
    "end": "1023279"
  },
  {
    "text": "this became our very first federated graph service next we set up one new graph service",
    "start": "1023279",
    "end": "1029839"
  },
  {
    "text": "alongside the api monolith that exposed one small portion of the monolith's",
    "start": "1029839",
    "end": "1035520"
  },
  {
    "text": "schema but we marked this new schema with a directive called at override this schema directive",
    "start": "1035520",
    "end": "1042480"
  },
  {
    "text": "instructed the gateway to route to this new service instead of the old one when constructing and executing back-end",
    "start": "1042480",
    "end": "1049360"
  },
  {
    "text": "queries from there we opened up the platform for wider adoption",
    "start": "1049360",
    "end": "1054720"
  },
  {
    "text": "over the past year we've had more and more graph services taking over functionality for the former api",
    "start": "1054720",
    "end": "1060160"
  },
  {
    "text": "monolith and adding brand new functionality to the graph if you look at this chart of the number",
    "start": "1060160",
    "end": "1065919"
  },
  {
    "text": "of graph services behind the gateway you can see that we're looking at exponential growth there are now over",
    "start": "1065919",
    "end": "1072160"
  },
  {
    "text": "50 services in production contributing to the graph that graph is now being used to power",
    "start": "1072160",
    "end": "1078080"
  },
  {
    "text": "over 60 studio applications with all the teams behind the services",
    "start": "1078080",
    "end": "1084640"
  },
  {
    "text": "contributing the graph has exploded the number of nodes in the graph has grown from about 800 in october of",
    "start": "1084640",
    "end": "1092080"
  },
  {
    "text": "last year to almost 7 000 today there would have been no way that one",
    "start": "1092080",
    "end": "1098640"
  },
  {
    "text": "team could have added this much functionality to the graph in only one year and yet this was precisely",
    "start": "1098640",
    "end": "1104400"
  },
  {
    "text": "what the federated platform enabled and that is the kind of software you want to be building you want the effect",
    "start": "1104400",
    "end": "1111280"
  },
  {
    "text": "of your efforts to be multiplicative not linear especially when your growth goals are as",
    "start": "1111280",
    "end": "1116799"
  },
  {
    "text": "big as netflix's have been and as we yet envision for the future this kind of multiplicative effect is",
    "start": "1116799",
    "end": "1122720"
  },
  {
    "text": "precisely what you're getting after finally not only has the federated platform enabled such",
    "start": "1122720",
    "end": "1128799"
  },
  {
    "text": "explosive growth but that old api monolith that used to be a bottleneck those",
    "start": "1128799",
    "end": "1134480"
  },
  {
    "text": "complex and hard to reason about and that so many considered to be a blocker is now slated to be deprecated and fully",
    "start": "1134480",
    "end": "1141200"
  },
  {
    "text": "removed sometime this quarter now that the federation platform was built and the",
    "start": "1141200",
    "end": "1146320"
  },
  {
    "text": "studio graph was taking off it's time to circle back to the netflix",
    "start": "1146320",
    "end": "1151360"
  },
  {
    "text": "consumer api there have been growing interest over the last few years of using graphql for",
    "start": "1151360",
    "end": "1157760"
  },
  {
    "text": "the consumer netflix app and our internal falcor implementation has been evolving in that direction",
    "start": "1157760",
    "end": "1164799"
  },
  {
    "text": "in fact we are already using graphql's schema definition language to describe",
    "start": "1164799",
    "end": "1170000"
  },
  {
    "text": "our api so we don't have to maintain our own parser anymore could we use the exact same federation",
    "start": "1170000",
    "end": "1176320"
  },
  {
    "text": "infrastructure that we built for studio to power the netflix app",
    "start": "1176320",
    "end": "1182480"
  },
  {
    "text": "a small working group was formed to build out one page the search page in mobile devices on",
    "start": "1182480",
    "end": "1188320"
  },
  {
    "text": "graphql here's what that screen looks like",
    "start": "1188320",
    "end": "1193440"
  },
  {
    "text": "the client here is using apollo client to speak graphql to a gateway this gateway is federating",
    "start": "1193440",
    "end": "1200160"
  },
  {
    "text": "requests to three separate graph surfaces on the back end each exposing a different portion of the",
    "start": "1200160",
    "end": "1206240"
  },
  {
    "text": "graph we then sent a small amount of production traffic into this new stack",
    "start": "1206240",
    "end": "1211919"
  },
  {
    "text": "initial results are looking good so the next steps are a to fill out the graph even further and",
    "start": "1211919",
    "end": "1217200"
  },
  {
    "text": "make more data available on this platform and b to send more traffic to the stack overall",
    "start": "1217200",
    "end": "1223200"
  },
  {
    "text": "so that we can collect more data from the wild but we're really excited about the results so far",
    "start": "1223200",
    "end": "1230159"
  },
  {
    "text": "by now i hope your lizard brain is starting to tingle and you're thinking there's no way a",
    "start": "1230240",
    "end": "1235520"
  },
  {
    "text": "project like this is all roses it's true federation isn't some magic",
    "start": "1235520",
    "end": "1240960"
  },
  {
    "text": "potion it's not going to solve problems like climate change or world hunger in fact it comes with some",
    "start": "1240960",
    "end": "1247200"
  },
  {
    "text": "real challenges first you're going to need a team that's devoted to",
    "start": "1247200",
    "end": "1252720"
  },
  {
    "text": "building and operating a brand new platform we dedicated three engineers to building",
    "start": "1252720",
    "end": "1258159"
  },
  {
    "text": "out the core components like the gateway and the registry we also dedicated an",
    "start": "1258159",
    "end": "1263200"
  },
  {
    "text": "entire team to the the developer experience and tooling of these graph services",
    "start": "1263200",
    "end": "1269200"
  },
  {
    "text": "our colleagues paul and kavita are actually presenting their work on this effort on november 18th",
    "start": "1269200",
    "end": "1274400"
  },
  {
    "text": "so be sure to check it out they've worked on some really great cutting edge stuff",
    "start": "1274400",
    "end": "1279679"
  },
  {
    "text": "we also dedicated resources for instrumentation like distributed tracing so engineers can investigate and",
    "start": "1279679",
    "end": "1286320"
  },
  {
    "text": "troubleshoot problems that are happening in near real time for more information on how we did that",
    "start": "1286320",
    "end": "1291600"
  },
  {
    "text": "check out our colleague elizabeth coretto's talk and distributed tracing at netflix she just presented it yesterday november",
    "start": "1291600",
    "end": "1297200"
  },
  {
    "text": "10th so be sure to check that out with a distributed graph you're going to have a lot of engineers",
    "start": "1297200",
    "end": "1303679"
  },
  {
    "text": "contributing to a massive graph if you don't have a strong sense of controlled chaos",
    "start": "1303679",
    "end": "1308799"
  },
  {
    "text": "best practices documentation even a schema working group you can end up with one gigantic highly",
    "start": "1308799",
    "end": "1315200"
  },
  {
    "text": "messy graph finally you'll be distributing the concerns of the api layer",
    "start": "1315200",
    "end": "1320960"
  },
  {
    "text": "instead of shielding your engineering teams from them this could be potentially a radical and",
    "start": "1320960",
    "end": "1326159"
  },
  {
    "text": "costly shift especially if most engineers in your organization are not generally concerned",
    "start": "1326159",
    "end": "1331200"
  },
  {
    "text": "with matters like defensive programming or security",
    "start": "1331200",
    "end": "1335760"
  },
  {
    "text": "we invested heavily into this new architecture we even merged two teams that used to be",
    "start": "1338240",
    "end": "1343679"
  },
  {
    "text": "part of two totally separate organizations in order to deliver this new product was",
    "start": "1343679",
    "end": "1349360"
  },
  {
    "text": "it worth such a heavy investment especially when you consider all of the tooling and instrumentation that had to",
    "start": "1349360",
    "end": "1354880"
  },
  {
    "text": "be built in as well we posited that it was as netflix grows",
    "start": "1354880",
    "end": "1360400"
  },
  {
    "text": "its subscriber base to 300 million global subscribers and more it's crucial",
    "start": "1360400",
    "end": "1366000"
  },
  {
    "text": "that no single layer of our architecture is a bottleneck for growth and innovation what have we covered we",
    "start": "1366000",
    "end": "1374080"
  },
  {
    "text": "talked about federation and we went into some detail about how we've implemented it at netflix but our hope is that in all of the",
    "start": "1374080",
    "end": "1380720"
  },
  {
    "text": "technical detail we haven't lost the essence of what federation is it's more of a philosophy than a",
    "start": "1380720",
    "end": "1387039"
  },
  {
    "text": "specific technology you could call it a philosophy of illogical aggregation you remove the",
    "start": "1387039",
    "end": "1393039"
  },
  {
    "text": "business logic from the core aggregator you restore api ownership to domain experts",
    "start": "1393039",
    "end": "1399039"
  },
  {
    "text": "and yet still maintain a single unified api for clients to access your entire",
    "start": "1399039",
    "end": "1405280"
  },
  {
    "text": "ecosystem this vastly increases productivity it enables loosely coupled teams and",
    "start": "1405280",
    "end": "1412080"
  },
  {
    "text": "systems and it restores separation of concerns to your micro services architecture",
    "start": "1412080",
    "end": "1419200"
  },
  {
    "text": "is federation the future it is a future we're not actually that naive to believe",
    "start": "1419200",
    "end": "1425760"
  },
  {
    "text": "that a single technology or pattern could be the right choice for everybody and we've already seen that it doesn't",
    "start": "1425760",
    "end": "1432000"
  },
  {
    "text": "solve problems like world hunger or covet 19. but we've taken a journey",
    "start": "1432000",
    "end": "1437919"
  },
  {
    "text": "through the hype cycle past the peak of inflated expectations through the trough",
    "start": "1437919",
    "end": "1443120"
  },
  {
    "text": "of disillusionment to a place of extreme productivity and that is a pretty awesome future",
    "start": "1443120",
    "end": "1451440"
  },
  {
    "text": "so one question remains is this your future",
    "start": "1451440",
    "end": "1459840"
  },
  {
    "text": "thank you both stephen and jennifer um great great presentation very informative got a lot of great questions coming in",
    "start": "1462640",
    "end": "1468559"
  },
  {
    "text": "from attendees i encourage folks um that are attending keep adding keep asking in the chat",
    "start": "1468559",
    "end": "1474159"
  },
  {
    "text": "we've got we've got a curated list so far but we'll keep building on it so i'll start with some general questions and then we'll go into some of the specific attendee",
    "start": "1474159",
    "end": "1480400"
  },
  {
    "text": "questions so first to you jennifer what was the biggest challenge technologically with moving to this",
    "start": "1480400",
    "end": "1486720"
  },
  {
    "text": "federation architecture um technology i would just say",
    "start": "1486720",
    "end": "1495200"
  },
  {
    "text": "the the actual architecture was not super difficult i think part of the the challenge in",
    "start": "1495200",
    "end": "1501760"
  },
  {
    "text": "kind of bringing this in is that because it was brand new this was from apollo a lot of the challenges actually came",
    "start": "1501760",
    "end": "1508480"
  },
  {
    "text": "from kind of marketing this to the wider organization making sure that we had a broad alignment",
    "start": "1508480",
    "end": "1514000"
  },
  {
    "text": "across the entire org so that you know people like uh the domain service teams that",
    "start": "1514000",
    "end": "1519279"
  },
  {
    "text": "they would be on that graph services that we had the framework teams building out platforms",
    "start": "1519279",
    "end": "1525600"
  },
  {
    "text": "that would be become available to these other teams to consume and use",
    "start": "1525600",
    "end": "1531840"
  },
  {
    "text": "excellent that was actually the next question was what was the biggest people challenge so do you want to expand on that um you",
    "start": "1531840",
    "end": "1537679"
  },
  {
    "text": "didn't have this awesome presentation with cool music and graph graphics so how did you build that alignment",
    "start": "1537679",
    "end": "1543919"
  },
  {
    "text": "across the organization so um sorry was that targeted to me or",
    "start": "1543919",
    "end": "1550080"
  },
  {
    "text": "steven uh go for jennifer for for continuity go for it okay um so it was actually uh the studio",
    "start": "1550080",
    "end": "1558000"
  },
  {
    "text": "edge team was originally kind of the the graphql sort of owner they were the ones who",
    "start": "1558000",
    "end": "1564320"
  },
  {
    "text": "first created the initial monolith for the studio side of the organization",
    "start": "1564320",
    "end": "1569440"
  },
  {
    "text": "so um robert and uh tagus our our teammates they really kind of",
    "start": "1569440",
    "end": "1574880"
  },
  {
    "text": "formulated the idea of having this gateway layer uh created a dock uh shopped it around",
    "start": "1574880",
    "end": "1580880"
  },
  {
    "text": "basically they really did a grassroots level kind of effort starting with like pretty much every",
    "start": "1580880",
    "end": "1586320"
  },
  {
    "text": "single team and uh and marketing it from there",
    "start": "1586320",
    "end": "1590960"
  },
  {
    "text": "it's interesting it's the people side is very one-on-one very relational the technology side is",
    "start": "1591679",
    "end": "1597360"
  },
  {
    "text": "the big scale part right once you get that alignment you can scale it up yeah right right exactly especially yeah",
    "start": "1597360",
    "end": "1604320"
  },
  {
    "text": "especially when you come you know especially with netflix where um kind of individual contributorship is",
    "start": "1604320",
    "end": "1609840"
  },
  {
    "text": "like so important um i think having those relationships working really closely with individuals",
    "start": "1609840",
    "end": "1615120"
  },
  {
    "text": "is pretty important excellent next question um actually two more questions then we'll go to the",
    "start": "1615120",
    "end": "1620320"
  },
  {
    "text": "attendee questions so where should people consider starting if they're considering doing federation",
    "start": "1620320",
    "end": "1625440"
  },
  {
    "text": "stephen we'll go over to you for that well i think the first question to to ask yourself is",
    "start": "1625440",
    "end": "1630799"
  },
  {
    "text": "is why you know why are we interested in federation and you know are you committed to doing",
    "start": "1630799",
    "end": "1635840"
  },
  {
    "text": "microservices already if a monolithic architecture is working for your company then",
    "start": "1635840",
    "end": "1640880"
  },
  {
    "text": "uh you know don't don't let us be the ones to convince you otherwise but if you are down this microservices",
    "start": "1640880",
    "end": "1646399"
  },
  {
    "text": "road uh then this is you know this is a really great option and so",
    "start": "1646399",
    "end": "1651679"
  },
  {
    "text": "to start uh you'll need a gateway um we we chose to implement our own using",
    "start": "1651679",
    "end": "1658000"
  },
  {
    "text": "uh this graphql federation spec but there is one that is open sourced by apollo and so",
    "start": "1658000",
    "end": "1665039"
  },
  {
    "text": "so there's that and then you'll need some way also to to register your schemas and uh this",
    "start": "1665039",
    "end": "1672320"
  },
  {
    "text": "could be as simple as a a git repo that you all put your schema files in or you can",
    "start": "1672320",
    "end": "1677760"
  },
  {
    "text": "uh create a like a registry service like we did or also uh there's there's an offering",
    "start": "1677760",
    "end": "1683679"
  },
  {
    "text": "from apollo you that you can use for that and so i guess these are the the the you know the practical steps that",
    "start": "1683679",
    "end": "1689919"
  },
  {
    "text": "you would start out with that's that's great and folks keep asking i'm curating them and i'm adding",
    "start": "1689919",
    "end": "1696720"
  },
  {
    "text": "to the end of our list for questions to go through one more general question then we'll get to attendees is the gateway open source",
    "start": "1696720",
    "end": "1702559"
  },
  {
    "text": "you mentioned kotlin you mentioned you know it works at netflix scale tell us about that our gateway is not",
    "start": "1702559",
    "end": "1709039"
  },
  {
    "text": "currently open source but it is something that we're definitely open to and uh it's been on a roadmap so if this is something",
    "start": "1709039",
    "end": "1715279"
  },
  {
    "text": "that that you would be interested in in using or collaborating on uh then do let us know and that'll help",
    "start": "1715279",
    "end": "1721120"
  },
  {
    "text": "us prioritize the the work of uh sporting that as an open source project",
    "start": "1721120",
    "end": "1726960"
  },
  {
    "text": "and follow up on that stephen so boris had asked um so ours is an open source right now but",
    "start": "1727039",
    "end": "1732559"
  },
  {
    "text": "where could somebody use a open source gateway yeah as i mentioned uh",
    "start": "1732559",
    "end": "1738000"
  },
  {
    "text": "apollo gateway is um it's a typescript node.js server that implements the same spec and",
    "start": "1738000",
    "end": "1744799"
  },
  {
    "text": "uh and so it's it's like ours is uh actually interchangeable with that in terms of the",
    "start": "1744799",
    "end": "1750240"
  },
  {
    "text": "um the spec talking to the uh graphql servers",
    "start": "1750240",
    "end": "1756159"
  },
  {
    "text": "great and then um bartholson apologize if i didn't say your name correctly but he's",
    "start": "1756159",
    "end": "1761919"
  },
  {
    "text": "asked the question how should you think about the granularity level of the the federated layer the federated graphql",
    "start": "1761919",
    "end": "1767760"
  },
  {
    "text": "servers when you're breaking this up how should you think about splitting that up jennifer what do you think",
    "start": "1767760",
    "end": "1773919"
  },
  {
    "text": "so this is a two-part question we can talk about it in terms of the netflix studio organization and then kind of",
    "start": "1773919",
    "end": "1779440"
  },
  {
    "text": "broader so for netflix studio um each team was kind of already working in silos just because of",
    "start": "1779440",
    "end": "1785840"
  },
  {
    "text": "the way that netflix uh studios kind of grew organically because of that they were sort of",
    "start": "1785840",
    "end": "1792159"
  },
  {
    "text": "kind of owning their own part of the graph anyway when we were dealing with the graphql monolith so so",
    "start": "1792159",
    "end": "1798480"
  },
  {
    "text": "we were able to kind of take that model and apply it into the federated world um in terms of where",
    "start": "1798480",
    "end": "1804559"
  },
  {
    "text": "you might think of your organization i would say i think you would think of it similarly",
    "start": "1804559",
    "end": "1810320"
  },
  {
    "text": "like who owns the data and is there a way that you can organically create these relationships",
    "start": "1810320",
    "end": "1815840"
  },
  {
    "text": "between your front-end engineers who are consuming the graph and the people who are actually delivering it",
    "start": "1815840",
    "end": "1820960"
  },
  {
    "text": "from uh from from the back end side and then uh two related questions on",
    "start": "1820960",
    "end": "1827440"
  },
  {
    "text": "that sort of on that schema management and that ownership um so john and christian both asked john",
    "start": "1827440",
    "end": "1832720"
  },
  {
    "text": "asks how do you avoid teams creating similar scheme entities in the fitter environment and then is there any governance around",
    "start": "1832720",
    "end": "1839279"
  },
  {
    "text": "the schemas can you speak to that jennifer yeah this is actually this is really interesting because",
    "start": "1839279",
    "end": "1845440"
  },
  {
    "text": "this is pretty new right like apollo just open sourced their federation spec",
    "start": "1845440",
    "end": "1850640"
  },
  {
    "text": "it was like uh last year sometime uh netflix i think has one of the biggest federated graphs",
    "start": "1850640",
    "end": "1856480"
  },
  {
    "text": "out there pretty much in the world so one of the things that we're seeing is that you have like you you create like a",
    "start": "1856480",
    "end": "1863679"
  },
  {
    "text": "person entity or like a movie entity and like any other graph service can extend it and then just",
    "start": "1863679",
    "end": "1869360"
  },
  {
    "text": "start adding fields to it so we actually have a schema working group uh that meets weekly we have a data a",
    "start": "1869360",
    "end": "1875760"
  },
  {
    "text": "schema architect that understands the entire kind of surface area of the graph of studio and so we've helped",
    "start": "1875760",
    "end": "1881679"
  },
  {
    "text": "that kind of like we talked about controlled chaos it sort of aligns the teams to kind of have a similar ideology or methodology",
    "start": "1881679",
    "end": "1889279"
  },
  {
    "text": "behind the schema to add on that one that's one of the the",
    "start": "1889279",
    "end": "1894399"
  },
  {
    "text": "advantages of this this architecture is that you're separating your your schema and the you know the",
    "start": "1894399",
    "end": "1900399"
  },
  {
    "text": "the design of your api from the implementation and so that makes it possible to have like this this working group that can be",
    "start": "1900399",
    "end": "1907679"
  },
  {
    "text": "front end engineers backend engineers a a data architect that's uh you know not focused on the you know",
    "start": "1907679",
    "end": "1912880"
  },
  {
    "text": "like the engineering part of it and they can have that api discussion separately from",
    "start": "1912880",
    "end": "1918960"
  },
  {
    "text": "the backend engineers implementing it and then similarly on that how about",
    "start": "1918960",
    "end": "1924080"
  },
  {
    "text": "authorizers approvers security dimensions how do you think about that and after that we'll go back to some",
    "start": "1924080",
    "end": "1929440"
  },
  {
    "text": "questions about the gateway and questions about back-end data sources behind it jennifer you want to or see if you want to speak",
    "start": "1929440",
    "end": "1935200"
  },
  {
    "text": "to that one sure yeah so as far as you know like uh authorizing an approval as far as",
    "start": "1935200",
    "end": "1942000"
  },
  {
    "text": "uh the api itself i think that is you know a question that is really",
    "start": "1942000",
    "end": "1948240"
  },
  {
    "text": "for your organization how you do things netflix tends to lean in freedom and responsibility",
    "start": "1948240",
    "end": "1953840"
  },
  {
    "text": "and so we we try to provide context to allow people to make good choices for their api and then give them the freedom and the",
    "start": "1953840",
    "end": "1960720"
  },
  {
    "text": "responsibility to to do that but that that maybe isn't the right choice for for every organization and so",
    "start": "1960720",
    "end": "1966240"
  },
  {
    "text": "you can put more oversight on that as far as authorization we do the",
    "start": "1966240",
    "end": "1971679"
  },
  {
    "text": "well we do the authentication at the gateway level so that's centralized and then the authenticated user information",
    "start": "1971679",
    "end": "1977919"
  },
  {
    "text": "is provided to these individual federated graph services and so they are able to make",
    "start": "1977919",
    "end": "1983840"
  },
  {
    "text": "authorization decisions that are right for the the domain of the data that they're providing",
    "start": "1983840",
    "end": "1991600"
  },
  {
    "text": "and part of it too is we uh we shouted out to the talk that's going to happen on the 18th for paul and kavita as well",
    "start": "1991600",
    "end": "1998159"
  },
  {
    "text": "but for netflix we have this idea of a paved path and it's basically like if you really want to do things um kind",
    "start": "1998159",
    "end": "2004720"
  },
  {
    "text": "of the way that netflix does them we're going to make it the platform team is going to make it super easy to just get on that paved path so",
    "start": "2004720",
    "end": "2011200"
  },
  {
    "text": "everybody has a single way of doing authentication for instance that helps us at least even though we",
    "start": "2011200",
    "end": "2017120"
  },
  {
    "text": "have many different graph services out there kind of have a similar stack across them",
    "start": "2017120",
    "end": "2024000"
  },
  {
    "text": "great so let's let's talk about the gateway itself a bit more so there's some questions around",
    "start": "2025600",
    "end": "2030640"
  },
  {
    "text": "why did we choose to implement it uh ourself and then also the performance the",
    "start": "2030640",
    "end": "2036320"
  },
  {
    "text": "caching the comparison to apollo's version i'll open up to both you i mean those are you have thoughts on both of",
    "start": "2036320",
    "end": "2042320"
  },
  {
    "text": "that jennifer you want to start yeah so um one of the things i think",
    "start": "2042320",
    "end": "2048158"
  },
  {
    "text": "was just that this was going to be such a huge bet for netflix we were really kind of uh betting our entire future of the",
    "start": "2048159",
    "end": "2054638"
  },
  {
    "text": "architecture of a studio on this new technology and this framework and so because it was you know such a",
    "start": "2054639",
    "end": "2062398"
  },
  {
    "text": "big bet we wanted to make sure that we kind of owned that code and we had control over that going forward so that",
    "start": "2062399",
    "end": "2068960"
  },
  {
    "text": "was one big concern for us",
    "start": "2068960",
    "end": "2074560"
  },
  {
    "text": "yeah and um you know when you know whenever you're doing something like this you know if there are uh you know things",
    "start": "2074560",
    "end": "2081358"
  },
  {
    "text": "in the community you can leverage you want to do that and so we considered you know all layers of leverage",
    "start": "2081359",
    "end": "2086480"
  },
  {
    "text": "including using the uh you know the code um and uh but then there's also internal",
    "start": "2086480",
    "end": "2092638"
  },
  {
    "text": "leverage that we could get and you know within netflix we have platform teams that develop a lot of libraries that are you know for uh our market",
    "start": "2092639",
    "end": "2100560"
  },
  {
    "text": "service ecosystems you know service discovery and things like that and so we could leverage those best",
    "start": "2100560",
    "end": "2105680"
  },
  {
    "text": "by writing our own that runs on the java virtual machine",
    "start": "2105680",
    "end": "2110720"
  },
  {
    "text": "and still get a lot of leverage from the community by the fact that we're using graphql and and we're using this this",
    "start": "2110720",
    "end": "2117680"
  },
  {
    "text": "open spec as opposed to uh doing you know doing our own kind of federation",
    "start": "2117680",
    "end": "2122720"
  },
  {
    "text": "um protocol on top of graphql",
    "start": "2122720",
    "end": "2127119"
  },
  {
    "text": "and then how about the the caching uh concerns can can you speak to that stephen sure",
    "start": "2128000",
    "end": "2134240"
  },
  {
    "text": "yeah so uh so as far as caching we are letting the the federated",
    "start": "2134240",
    "end": "2141040"
  },
  {
    "text": "uh services themselves make the decisions on caching because uh you know whenever you start",
    "start": "2141040",
    "end": "2146640"
  },
  {
    "text": "caching things you you open up a pandora's box of questions about how you you know how you manage and expire those",
    "start": "2146640",
    "end": "2152320"
  },
  {
    "text": "caches and uh and so we want to make sure that the those domain experts are",
    "start": "2152320",
    "end": "2157599"
  },
  {
    "text": "able to make the right decisions there and i think there's a uh also in that",
    "start": "2157599",
    "end": "2163200"
  },
  {
    "text": "same question asking about optimization query optimization and then that is something that the",
    "start": "2163200",
    "end": "2168560"
  },
  {
    "text": "gateway does as far as the the query plan is optimized to minimize the end to",
    "start": "2168560",
    "end": "2174160"
  },
  {
    "text": "end latency of a query and so it's broken up and parts that can",
    "start": "2174160",
    "end": "2179200"
  },
  {
    "text": "be done in parallel are done in parallel and then also anything that can be batched together is",
    "start": "2179200",
    "end": "2184320"
  },
  {
    "text": "batched together so you have a minimum number of requests that are going to the the graphql services",
    "start": "2184320",
    "end": "2190640"
  },
  {
    "text": "yeah if you remember the part of the talk where we were talking about the osi reference model we really want to keep the gateway as",
    "start": "2190640",
    "end": "2197200"
  },
  {
    "text": "dumb as possible and basically just make it as kind of like a routing layer as opposed to",
    "start": "2197200",
    "end": "2203040"
  },
  {
    "text": "something that holds on to information and is and becomes stateful thank you so we're running down to the",
    "start": "2203040",
    "end": "2210240"
  },
  {
    "text": "end of our time there's a bunch of questions about how to think about data sources i think about connecting to rest",
    "start": "2210240",
    "end": "2215680"
  },
  {
    "text": "how to think about http um one one one and two stephen jennifer do you mind sticking",
    "start": "2215680",
    "end": "2221680"
  },
  {
    "text": "around for the hallway track to go deeper for people have interest in that yeah",
    "start": "2221680",
    "end": "2229440"
  },
  {
    "text": "so final final two questions if people want to learn more where can they find out more so we",
    "start": "2229440",
    "end": "2236480"
  },
  {
    "text": "actually just uh our team just released a blog post on this and so if you uh look for netflix tech",
    "start": "2236480",
    "end": "2241599"
  },
  {
    "text": "blog um graphql and you'll find it and so check that out it's it's uh it",
    "start": "2241599",
    "end": "2248000"
  },
  {
    "text": "provides a lot of great details great and then to to you jennifer and",
    "start": "2248000",
    "end": "2253200"
  },
  {
    "text": "then stephen what's one thing you want everybody to remember as they as they go off to the rest of their day and the rest of talks and everything else in",
    "start": "2253200",
    "end": "2259119"
  },
  {
    "text": "life yeah the presentation kind of hit it at the very end but",
    "start": "2259119",
    "end": "2264320"
  },
  {
    "text": "um i could i think that my kind of point would be that federation is sort of like a philosophy",
    "start": "2264320",
    "end": "2269440"
  },
  {
    "text": "it doesn't have to just be about graphql or about a certain technology but really you know if you have an aggregation",
    "start": "2269440",
    "end": "2274960"
  },
  {
    "text": "layer as as stephen said take the logic outside of the aggregation layer so that",
    "start": "2274960",
    "end": "2280079"
  },
  {
    "text": "you can have a single api but also it's not beholden to kind of the speed of the",
    "start": "2280079",
    "end": "2285760"
  },
  {
    "text": "team that can actually open it up and if you can do something like this",
    "start": "2285760",
    "end": "2291440"
  },
  {
    "text": "you know as with all big projects start small and move incrementally but then finally",
    "start": "2291440",
    "end": "2297040"
  },
  {
    "text": "go big or go home because this is ultimately about bringing your organization to another level of scale",
    "start": "2297040",
    "end": "2305119"
  },
  {
    "text": "thank you to both of you um thank you to all the attendees excellent questions see you on the hallway track with the",
    "start": "2305920",
    "end": "2311680"
  },
  {
    "text": "speakers and see you in the rest of the the talks for the track if you're interested we've got uh airbnb person airbnb and then",
    "start": "2311680",
    "end": "2318079"
  },
  {
    "text": "somebody from twitter and then a panel where steven and jennifer will come back for a broader discussion on api",
    "start": "2318079",
    "end": "2323440"
  },
  {
    "text": "architectures thanks everybody thanks y'all thank you",
    "start": "2323440",
    "end": "2331520"
  }
]