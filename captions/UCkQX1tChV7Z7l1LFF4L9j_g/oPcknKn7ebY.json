[
  {
    "start": "0",
    "end": "86000"
  },
  {
    "text": "we're gonna be talking about fault tolerance with with Java using something",
    "start": "3939",
    "end": "10179"
  },
  {
    "text": "that I've been working on with a couple other individuals called Aaron clustering so a little bit about me my",
    "start": "10179",
    "end": "16510"
  },
  {
    "text": "name is Todd Montgomery I've been doing high-performance messaging",
    "start": "16510",
    "end": "21929"
  },
  {
    "text": "high-performance networking and high performance computing for probably the last over 25 years I guess and in in a",
    "start": "21929",
    "end": "32258"
  },
  {
    "text": "various set of markets within the capital markets I'm probably best known for being the co-founder and CTO",
    "start": "32259",
    "end": "39130"
  },
  {
    "text": "of a company called 29 west which was acquired by informatica they did high-performance messaging from about",
    "start": "39130",
    "end": "44860"
  },
  {
    "text": "2004 to 2009 when we were acquired by informatica previous to that I actually",
    "start": "44860",
    "end": "50980"
  },
  {
    "text": "worked at a couple other messaging you know powerhouses like tellurian and TIBCO on various messaging products so",
    "start": "50980",
    "end": "58300"
  },
  {
    "text": "one of the things we'll be talking about today is the idea of guaranteed messaging or queuing and how that kind",
    "start": "58300",
    "end": "63400"
  },
  {
    "text": "of relates to some fault tolerance ways of doing things but even before that I",
    "start": "63400",
    "end": "68590"
  },
  {
    "text": "actually was a researcher that did research into Software Assurance at at",
    "start": "68590",
    "end": "75159"
  },
  {
    "text": "NASA so I was actually a researcher you know working for West Virginia University working on NASA projects and",
    "start": "75159",
    "end": "82389"
  },
  {
    "text": "so this this actually has a relevance to us because we're going to be talking about some fault-tolerance aspects today",
    "start": "82389",
    "end": "88420"
  },
  {
    "start": "86000",
    "end": "86000"
  },
  {
    "text": "in fact we're going to sort of start out with some basic mechanisms and work and",
    "start": "88420",
    "end": "93789"
  },
  {
    "text": "build them up because they actually have a lot to do with the clustering aspect and once we have an idea what the",
    "start": "93789",
    "end": "100090"
  },
  {
    "text": "architecture of this can look like we'll talk about why errand was a good fit for you know providing this and finally we",
    "start": "100090",
    "end": "107859"
  },
  {
    "text": "will sort of wrap around by looking at what the Java interface looks like because it is it is kind of relevant to",
    "start": "107859",
    "end": "114039"
  },
  {
    "text": "you know the whole way that we've developed this using Java and sort of",
    "start": "114039",
    "end": "119409"
  },
  {
    "text": "letting just some Java principles guide us so if we break down the title we have a couple different things to cover here",
    "start": "119409",
    "end": "124779"
  },
  {
    "text": "and we're going to do it this way you know what type of fault tolerance are we actually talking about because there's",
    "start": "124779",
    "end": "130119"
  },
  {
    "start": "125000",
    "end": "125000"
  },
  {
    "text": "many different ways to do it you know what is clustering you know why Aaron and then at the end we'll take a look at",
    "start": "130119",
    "end": "136180"
  },
  {
    "text": "what it looks like in Java and you know sort of see what the commonalities are there so the first",
    "start": "136180",
    "end": "141670"
  },
  {
    "text": "thing fault tolerance fault tolerance has about as well-defined as these words okay it means an awful lot they cover a",
    "start": "141670",
    "end": "151209"
  },
  {
    "text": "lot of ground so that whenever you see any talk this talk talking about fault tolerance or it's talking about",
    "start": "151209",
    "end": "156730"
  },
  {
    "text": "clustering and things like this it sort of has to define what that means we're going to actually spend a little bit of time doing this because it's actually",
    "start": "156730",
    "end": "162700"
  },
  {
    "text": "very central to some of the reasons why we did this the first thing is you have",
    "start": "162700",
    "end": "167799"
  },
  {
    "text": "a service it's running on some sort of hardware clients connect to it over some sort of communication mechanism right",
    "start": "167799",
    "end": "173470"
  },
  {
    "text": "the first thing is it's going to fail you're going to have all kinds of different reasons why it fails so I'm",
    "start": "173470",
    "end": "179140"
  },
  {
    "text": "will be software so I'll be hardware one way to provide a little bit of fault tolerance is to put it in the cloud I'm",
    "start": "179140",
    "end": "185049"
  },
  {
    "text": "not being facetious you know once you put something into the cloud you make it easier to launch quicker you make it easy to to virtualize the hardware that",
    "start": "185049",
    "end": "192790"
  },
  {
    "text": "does take away some sort of faults that can't occur you know if something does happen and being able to migrate it to a",
    "start": "192790",
    "end": "198970"
  },
  {
    "text": "different host and bring it up that actually is a form of fault tolerance but it's woefully inefficient for a lot",
    "start": "198970",
    "end": "205630"
  },
  {
    "text": "of the things we do because we want to actually a lot of times have the ability to have running replicas okay the idea",
    "start": "205630",
    "end": "213579"
  },
  {
    "text": "that you don't just have one service but you have many and you have many that you can you know you can go to the idea of",
    "start": "213579",
    "end": "219879"
  },
  {
    "text": "load load balancing comes into play which is also another form of look you don't fault tolerance as well so these",
    "start": "219879",
    "end": "226329"
  },
  {
    "text": "are these are pretty simple but it does get a little more complicated because once you have multiple versions of something running around how do you work",
    "start": "226329",
    "end": "232989"
  },
  {
    "text": "out how clients connect to them how do they find them you know how do they manage you know to to actually get to",
    "start": "232989",
    "end": "239500"
  },
  {
    "text": "the one that they need or do that it doesn't matter well what a lot of this kind of revolves around is the idea that",
    "start": "239500",
    "end": "246069"
  },
  {
    "text": "that service doesn't live in a vacuum it's totally stateless we'd like to think it is but even rest services have",
    "start": "246069",
    "end": "252370"
  },
  {
    "text": "some state associated with them even if you take that stateless part out of the name right so if we do that it's really",
    "start": "252370",
    "end": "258970"
  },
  {
    "text": "this that state that's there now we can just kick the can down the road right",
    "start": "258970",
    "end": "264789"
  },
  {
    "text": "and say well we're just going to store that state somewhere else in a database or we're going to store it the cash or we're gonna you know just",
    "start": "264789",
    "end": "271779"
  },
  {
    "text": "sort of not realize that it's the same problem we've just kicked it down the road apiece right so we've been building",
    "start": "271779",
    "end": "277899"
  },
  {
    "text": "systems like this for years and it's perfectly fine they work you",
    "start": "277899",
    "end": "282939"
  },
  {
    "text": "know if something does work it doesn't really matter why it's been implemented the way it is if it works and it meets",
    "start": "282939",
    "end": "288339"
  },
  {
    "text": "its requirements it's actually okay but what we really want to talk about is the",
    "start": "288339",
    "end": "293439"
  },
  {
    "text": "fault tolerance of state because that's the hard part and this lives on a spectrum that state that's shared",
    "start": "293439",
    "end": "300369"
  },
  {
    "text": "between those actual running services can go all the way from being totally partitioned so that none of them actually have the",
    "start": "300369",
    "end": "307209"
  },
  {
    "text": "same state they have their individual states and you just shard and partition that state around for the clients or it",
    "start": "307209",
    "end": "313719"
  },
  {
    "text": "can be totally replicated we're going to look more on that far right in the replicated it and because that's the one",
    "start": "313719",
    "end": "320739"
  },
  {
    "text": "that's the harder one in a lot of ways and it also is one that is the the majority of what we need to do a lot of",
    "start": "320739",
    "end": "326979"
  },
  {
    "text": "times so this is kind of the basis of this and I want to store sort of start",
    "start": "326979",
    "end": "332860"
  },
  {
    "text": "this by looking at the the enterprise way we do this in a lot of systems and I'm not talking about you know micro",
    "start": "332860",
    "end": "338589"
  },
  {
    "text": "services I'm actually talking about let's step back a moment let's think about es B's let's think about you know so let's think about how these things",
    "start": "338589",
    "end": "345009"
  },
  {
    "text": "have looked traditionally and how they look traditionally is like this you have a client it isn't communicating directly",
    "start": "345009",
    "end": "352240"
  },
  {
    "text": "with a service it's communicating with a queue or a buffer of some sort and it's",
    "start": "352240",
    "end": "357909"
  },
  {
    "text": "using guarantee messaging semantics or queuing to talk to that service and if that service is no is not there at the",
    "start": "357909",
    "end": "364659"
  },
  {
    "text": "moment it's actually it's informations being either cute or buffered in some way well the first thing is you should",
    "start": "364659",
    "end": "369699"
  },
  {
    "text": "realize is that these two things are very different but for this for the the purpose of this sort of discussion we're",
    "start": "369699",
    "end": "375879"
  },
  {
    "text": "going to assume they're the same thing because from this angle that we're going to talk about they operate exactly the same and that is if that service",
    "start": "375879",
    "end": "383379"
  },
  {
    "text": "restarts its previous state is gone right we don't have anything within the",
    "start": "383379",
    "end": "388899"
  },
  {
    "text": "messaging system whether it began to be messaging or cooling that allows us to preserve the current state of the system",
    "start": "388899",
    "end": "394629"
  },
  {
    "text": "the only thing we're preserving is messages that are being sent to it now those messages are going to be held",
    "start": "394629",
    "end": "400779"
  },
  {
    "text": "around and read and deliver and perhaps a redeliver but we don't",
    "start": "400779",
    "end": "405820"
  },
  {
    "text": "have anything that's holding state so any state that we previously had it's gone when it restarts right I don't have",
    "start": "405820",
    "end": "412630"
  },
  {
    "text": "anything there and because that's not his job traditionally these systems have an",
    "start": "412630",
    "end": "418780"
  },
  {
    "text": "unspoken requirement which is the job of the consumer of those messages is not the whole state it's actually to mutate",
    "start": "418780",
    "end": "425710"
  },
  {
    "text": "messages for downstream systems it's just kicking the can down the road - it really doesn't want to hold on to",
    "start": "425710",
    "end": "431620"
  },
  {
    "text": "any of that state and if you design systems which hold that state around you got to make sure that that state is now",
    "start": "431620",
    "end": "437590"
  },
  {
    "text": "fault tolerant some way that's fine a lot of these systems end up you know",
    "start": "437590",
    "end": "443170"
  },
  {
    "text": "setting alongside caching setting alongside you know databases setting",
    "start": "443170",
    "end": "448480"
  },
  {
    "text": "alongside all the other technologies because they're only solving a very thin piece of the puzzle they're only solving",
    "start": "448480",
    "end": "454720"
  },
  {
    "text": "that problem of what happens to those messages that are sent while I'm down",
    "start": "454720",
    "end": "459780"
  },
  {
    "text": "this leads us to a couple different things to think about even with just that bit of information and just that",
    "start": "459780",
    "end": "468070"
  },
  {
    "start": "461000",
    "end": "461000"
  },
  {
    "text": "bit of requirement we have things like what does it mean with exactly ones versus at least once delivery right do",
    "start": "468070",
    "end": "475360"
  },
  {
    "text": "we actually have any system to which does exactly once not without help from the application we don't block that",
    "start": "475360",
    "end": "482350"
  },
  {
    "text": "something that is from a messaging system designer if you start implementing these systems you get into",
    "start": "482350",
    "end": "487630"
  },
  {
    "text": "something which is called a blocking act spiral and the reason it's called a blocking acts barrel is because you implement acknowledgments into the",
    "start": "487630",
    "end": "494860"
  },
  {
    "text": "messaging system by making them block they don't just complete immediately and you wait for an ACK of an ACK which then",
    "start": "494860",
    "end": "504160"
  },
  {
    "text": "leads you to at some point having to realize that you have to wait for an ACK of a knack of an ACK and this ends up",
    "start": "504160",
    "end": "510820"
  },
  {
    "text": "until someone says ok enough with this we'll just tell the application that you know when you acknowledge data you still",
    "start": "510820",
    "end": "516370"
  },
  {
    "text": "may get it again unless you tell us something about it it allows us to determine if it's been",
    "start": "516370",
    "end": "523270"
  },
  {
    "text": "processed or not this leads into the problem of when these systems are implemented not the messaging system",
    "start": "523270",
    "end": "529630"
  },
  {
    "text": "itself but the applications they tend to be non-deterministic on restart testing",
    "start": "529630",
    "end": "535540"
  },
  {
    "text": "them so that you get combinations of data on a restart is a very tough thing to do",
    "start": "535540",
    "end": "541530"
  },
  {
    "text": "in fact it's intractable an infinite stream it can restarted any in any",
    "start": "541530",
    "end": "546960"
  },
  {
    "text": "infinite position you can't test that right so you have to break it down into what happens if I lose this type of",
    "start": "546960",
    "end": "553140"
  },
  {
    "text": "message what happens if I lose this other type of message it's really hard to make these system to determine this",
    "start": "553140",
    "end": "559290"
  },
  {
    "text": "stick so that you can you know find issues that may happen especially across restarts they typically have a lot of",
    "start": "559290",
    "end": "566130"
  },
  {
    "text": "contention and coherence associated with them which makes them slow and dealing with poison messages and air cues can be",
    "start": "566130",
    "end": "572190"
  },
  {
    "text": "a pain as well as making it making things non-deterministic the problem of",
    "start": "572190",
    "end": "577560"
  },
  {
    "text": "a poison message is this is this type of situation you restart you get a message",
    "start": "577560",
    "end": "582660"
  },
  {
    "text": "that message causes you to crash you restart that message is still there you",
    "start": "582660",
    "end": "588090"
  },
  {
    "text": "pull it out you try to process it you crash you go down you keep doing this until the messaging system basically",
    "start": "588090",
    "end": "594690"
  },
  {
    "text": "says you try to do this too much and it puts puts this message on an air queue or it or it gets rid of it or the",
    "start": "594690",
    "end": "602040"
  },
  {
    "text": "application says you know I think I might have processed this before so I want to take it and I'm going to set it",
    "start": "602040",
    "end": "607920"
  },
  {
    "text": "off to the side so poison messages that cause you to go down when your system is",
    "start": "607920",
    "end": "613320"
  },
  {
    "text": "designed that if you go down you get re delivered data can be problematic but",
    "start": "613320",
    "end": "620450"
  },
  {
    "text": "after implementing several systems like this having worked with you know users",
    "start": "620450",
    "end": "625680"
  },
  {
    "text": "of these systems for a long time having used them myself in larger projects and",
    "start": "625680",
    "end": "630830"
  },
  {
    "text": "seen a lot of different ways to do this there's actually a better way a much",
    "start": "630830",
    "end": "635970"
  },
  {
    "text": "better way to think about this and it revolves around thinking of the data stream that's coming into any system as",
    "start": "635970",
    "end": "642630"
  },
  {
    "text": "a contiguous log of data and we've heard different you know systems that use logs",
    "start": "642630",
    "end": "647760"
  },
  {
    "text": "and the concept of an append-only log you know these are all extremely valuable but one that is even more",
    "start": "647760",
    "end": "654750"
  },
  {
    "text": "important than just the log itself is the idea of snapshot and replay of the law so let's sort of go through sort of",
    "start": "654750",
    "end": "661980"
  },
  {
    "text": "build this up let's say you have a sequence of messages 1 2 3 4 5 6 onto some message X and if you think about",
    "start": "661980",
    "end": "669570"
  },
  {
    "text": "the system processing the this log of messages it's going to be very very deterministic",
    "start": "669570",
    "end": "674850"
  },
  {
    "text": "right it's gonna build up some associated state and if you execute the",
    "start": "674850",
    "end": "681960"
  },
  {
    "text": "log from a fresh state with nothing previous and you execute it 20 times you'll 20 times result in the same state",
    "start": "681960",
    "end": "688560"
  },
  {
    "text": "unless there's something outside the log which mutates that state randomness time",
    "start": "688560",
    "end": "695880"
  },
  {
    "text": "unless time is contained in the log we'll get into that but you're going to",
    "start": "695880",
    "end": "702570"
  },
  {
    "text": "have the same state which means that if you don't have the same state at two if you execute one and two every time well",
    "start": "702570",
    "end": "711960"
  },
  {
    "text": "if you take that knowledge and take a snapshot of your state at any of these points and sort of roll that up you now",
    "start": "711960",
    "end": "718560"
  },
  {
    "text": "have the ability to in effect have the same set of state by having the snapshot and then replaying after the snapshot",
    "start": "718560",
    "end": "726560"
  },
  {
    "text": "let's take that just a little bit differently what if I were to say that",
    "start": "726560",
    "end": "732150"
  },
  {
    "text": "the state was saved that the snapshot and we don't mind losing the messages",
    "start": "732150",
    "end": "737190"
  },
  {
    "text": "from the last snapshot do you know of any system that works like this excuse",
    "start": "737190",
    "end": "743910"
  },
  {
    "text": "me right yeah yeah this concept is used",
    "start": "743910",
    "end": "750720"
  },
  {
    "text": "in databases also all the time but I'm actually thinking just get rid of the rest of the log most of our spacecraft",
    "start": "750720",
    "end": "759050"
  },
  {
    "text": "Cassini Mars rovers a lot of them work on what's called a mark and rollback system so they take periodically",
    "start": "759050",
    "end": "766590"
  },
  {
    "text": "snapshots or checkpoints or something within the system they then say particular pieces of state so that if",
    "start": "766590",
    "end": "773670"
  },
  {
    "text": "there is a crash and you have to restart the whole spacecraft or the rover you",
    "start": "773670",
    "end": "779580"
  },
  {
    "text": "startup at a known point you know what your state is and from there you can kind of reconstruct the events so this",
    "start": "779580",
    "end": "788190"
  },
  {
    "text": "concept of marking your state and rolling back means that you're nothing too concerned with the replay you just",
    "start": "788190",
    "end": "793980"
  },
  {
    "text": "want to not have to go okay we're in the world and the universe am I in Cassini's case you know if the",
    "start": "793980",
    "end": "801300"
  },
  {
    "text": "if the spacecraft crashes it has to roost art it doesn't know where it is right",
    "start": "801300",
    "end": "807200"
  },
  {
    "text": "how else would it know oh I can look at the Stars and triangulate my position that's great as long as you're not",
    "start": "807200",
    "end": "813000"
  },
  {
    "text": "hurting towards a planet or an asteroid right so you want to quickly kind of figure out where you are find out what",
    "start": "813000",
    "end": "818550"
  },
  {
    "text": "your orientation is see if you need to do anything quickly that's why you would have something like that you may not",
    "start": "818550",
    "end": "825150"
  },
  {
    "text": "care about the additional things that you've done since that snapshot or that checkpoint but you're really concerned",
    "start": "825150",
    "end": "830610"
  },
  {
    "text": "and well yeah and having the right information for that mark and having that mark take effect whenever you do",
    "start": "830610",
    "end": "836190"
  },
  {
    "text": "something critical another plan other point what happens if your role you're you're rotating the spacecraft and you",
    "start": "836190",
    "end": "844710"
  },
  {
    "text": "all of a sudden crash and you come back do you know that you're rotating how",
    "start": "844710",
    "end": "850650"
  },
  {
    "text": "would you normally think if you're look at yourself and figure out if you're doing this the Delta between two",
    "start": "850650",
    "end": "857970"
  },
  {
    "text": "differently you know if you look at the sky or you look at the walls right you see them moving well that's not an",
    "start": "857970",
    "end": "863940"
  },
  {
    "text": "immediate thing but you'd like to know what orientation you're in right different things like this the amount of",
    "start": "863940",
    "end": "871140"
  },
  {
    "text": "state that you need is very small but it's important the same thing here",
    "start": "871140",
    "end": "876960"
  },
  {
    "text": "snapshots just rolling up those events the critical pieces of those events that have changed state and then being able",
    "start": "876960",
    "end": "883410"
  },
  {
    "text": "to replay what happens after it so that kind of mechanism of marking the state that you have in some way that's",
    "start": "883410",
    "end": "890820"
  },
  {
    "text": "critical and in being able to replay the messages that have happened after that or the events that have happened which",
    "start": "890820",
    "end": "896280"
  },
  {
    "text": "gets you into the current state that you want to be in that concept that alone of",
    "start": "896280",
    "end": "902820"
  },
  {
    "text": "a log that is then you can execute deterministically and you can kind of",
    "start": "902820",
    "end": "908220"
  },
  {
    "text": "shrink it by taking snapshots at some point or your latest snapshot and rolling forward from there it's a pretty",
    "start": "908220",
    "end": "914100"
  },
  {
    "text": "powerful concept in fact it's not new it's done all over the place and we want",
    "start": "914100",
    "end": "919200"
  },
  {
    "text": "to sort of look at it in the concept of what a clustered service looks like so cluster service is nothing more than",
    "start": "919200",
    "end": "924810"
  },
  {
    "text": "what we saw before it's a whole bunch of real or virtual machines running a service if we take that concept of the",
    "start": "924810",
    "end": "933330"
  },
  {
    "text": "snapshot and and replay in the log and we were to replicate it across these",
    "start": "933330",
    "end": "938850"
  },
  {
    "text": "machines okay so that each each different entity had its own copy of",
    "start": "938850",
    "end": "944190"
  },
  {
    "text": "that log and could process that log you know then we then we have something",
    "start": "944190",
    "end": "950100"
  },
  {
    "text": "that's kind of interesting right now we can do this you know as long as it's the same log that every that each is seeing",
    "start": "950100",
    "end": "955860"
  },
  {
    "text": "we can be in the same state in each of these and that gets us to the next point",
    "start": "955860",
    "end": "962010"
  },
  {
    "text": "which is the replicated state machine this is a replicated state machine the idea that each replicated service is the",
    "start": "962010",
    "end": "968040"
  },
  {
    "start": "967000",
    "end": "967000"
  },
  {
    "text": "same event log sees the same import ordering in other words if there's two different events that come in they get",
    "start": "968040",
    "end": "973709"
  },
  {
    "text": "ordered in some deterministic way so that each each replica sees the same same order and we replicate it locally",
    "start": "973709",
    "end": "980580"
  },
  {
    "text": "so instead of it being replicated someplace external it's replicated local to the state machine itself and",
    "start": "980580",
    "end": "989029"
  },
  {
    "text": "checkpoints of snapshots now are not just some random point in the log they're actually events in the log take",
    "start": "989690",
    "end": "996480"
  },
  {
    "text": "a snapshot at this point so that all the replicas should have the same snapshot",
    "start": "996480",
    "end": "1001550"
  },
  {
    "text": "the same Check Point and what this really does is it's rolling up previous log events right we're taking all the",
    "start": "1001550",
    "end": "1007790"
  },
  {
    "text": "events that have happened and we're sort of saying we don't care about the log anymore we just want the state that",
    "start": "1007790",
    "end": "1013400"
  },
  {
    "text": "we're currently in and so there comes a question you know we we have these",
    "start": "1013400",
    "end": "1020230"
  },
  {
    "text": "replicas and they're they're consuming the log they're processing the log when",
    "start": "1020230",
    "end": "1026630"
  },
  {
    "start": "1026000",
    "end": "1026000"
  },
  {
    "text": "should a service consume or process a log event and this is surprisingly not",
    "start": "1026630",
    "end": "1031640"
  },
  {
    "text": "an easy answer because let's take for example this one service on the on the",
    "start": "1031640",
    "end": "1038839"
  },
  {
    "text": "left here is has message 1 & 2 the service in the middle has 1 2 3 4 5 6",
    "start": "1038839",
    "end": "1043938"
  },
  {
    "text": "and the one on the right has 1 2 3 4 5 6 7 so there is 7 messages in the log at",
    "start": "1043939",
    "end": "1049730"
  },
  {
    "text": "least I might even be more but not all of them have all the messages except for",
    "start": "1049730",
    "end": "1055460"
  },
  {
    "text": "1 & 2 so is it a good idea to process 1 & 2 should we wait until we know it's",
    "start": "1055460",
    "end": "1061580"
  },
  {
    "text": "all the messages should we allow any of the replicas to consume whatever message",
    "start": "1061580",
    "end": "1067700"
  },
  {
    "text": "they want so you know they can consume you know up to two of the six enough to seven well there is no right answer to",
    "start": "1067700",
    "end": "1075500"
  },
  {
    "text": "this it depends on what kind of resiliency and fault-tolerance you want but I'll give you a sort of an",
    "start": "1075500",
    "end": "1081230"
  },
  {
    "text": "idea how this is done an errand clustering we actually use raft so RAF consensus basically what it's saying is",
    "start": "1081230",
    "end": "1088280"
  },
  {
    "text": "we want to take the majority of replicas and let them process up to where they have their messages in the example we",
    "start": "1088280",
    "end": "1095540"
  },
  {
    "text": "gave before the consensus would be six because two members out of the three have six now the one who has only one",
    "start": "1095540",
    "end": "1103130"
  },
  {
    "text": "and two he can't process six right it cannot it cannot it doesn't have three",
    "start": "1103130",
    "end": "1109010"
  },
  {
    "text": "four five or six or seven so it can't process them but if it did have those it could process up to six and the",
    "start": "1109010",
    "end": "1117740"
  },
  {
    "text": "reasoning here is that you want a a majority or sorry minority partition to",
    "start": "1117740",
    "end": "1124940"
  },
  {
    "text": "continue another sir sorry a minority partition doesn't mean that you have to stop so if you lose one of these you",
    "start": "1124940",
    "end": "1131660"
  },
  {
    "text": "still have one with the message with a messages up to six so you can continue",
    "start": "1131660",
    "end": "1137180"
  },
  {
    "text": "operation what this means is you could totally lose it you don't have to do anything else you continue on the",
    "start": "1137180",
    "end": "1144860"
  },
  {
    "text": "concept of Wrath is that it it is it has a strong leader which means that there is one element of the of the the cluster",
    "start": "1144860",
    "end": "1152630"
  },
  {
    "start": "1146000",
    "end": "1146000"
  },
  {
    "text": "that is elected to be the leader this is the one who's responsible for ordering input and also its job is to disseminate",
    "start": "1152630",
    "end": "1161270"
  },
  {
    "text": "consensus to say what the consensus of the group is and this is this is fairly",
    "start": "1161270",
    "end": "1167180"
  },
  {
    "text": "important now this work work in this area of how to order totally order",
    "start": "1167180",
    "end": "1174080"
  },
  {
    "text": "messages across different sort of sources and to figure out what a stable",
    "start": "1174080",
    "end": "1179270"
  },
  {
    "text": "what is stable and what's not and to provide that mechanism has been known since around 1975 when a paper was",
    "start": "1179270",
    "end": "1185750"
  },
  {
    "text": "written by Chang and Maxim Chuck and they they actually put forward something called the reliable broadcast protocol",
    "start": "1185750",
    "end": "1191630"
  },
  {
    "text": "and this spawned a lot of different work",
    "start": "1191630",
    "end": "1196790"
  },
  {
    "text": "in this area the original isis systems with atomic broadcast and virtual",
    "start": "1196790",
    "end": "1202700"
  },
  {
    "text": "synchrony built on top of that so that even across heirs and failures you can have a consistent order you know",
    "start": "1202700",
    "end": "1209419"
  },
  {
    "text": "these are these are the concepts have been around a lot what Raph really did is to make this a much more well",
    "start": "1209419",
    "end": "1216049"
  },
  {
    "text": "understood and well defined you know way of doing it so we have basically a",
    "start": "1216049",
    "end": "1221269"
  },
  {
    "text": "system now that it's going to talk in some way across consensus to determine consensus to order to do all those other",
    "start": "1221269",
    "end": "1228350"
  },
  {
    "text": "other pieces so what is rap rat is an algorithm with formal verification it",
    "start": "1228350",
    "end": "1233510"
  },
  {
    "text": "has certain properties the algorithm does the algorithm you know has a",
    "start": "1233510",
    "end": "1238610"
  },
  {
    "text": "certain set of invariants it has a certain set of assertions that that that basically you know sort of cover its",
    "start": "1238610",
    "end": "1246679"
  },
  {
    "text": "operating range but there's this is a fairly you know salient point but raft",
    "start": "1246679",
    "end": "1252740"
  },
  {
    "start": "1252000",
    "end": "1252000"
  },
  {
    "text": "is not a protocol a specification or a complete system you know you can",
    "start": "1252740",
    "end": "1258889"
  },
  {
    "text": "implement raft it's fairly useless if you implement just what's there you have",
    "start": "1258889",
    "end": "1265010"
  },
  {
    "text": "to actually expand on it and the reason is because it is an algorithm it is not",
    "start": "1265010",
    "end": "1271429"
  },
  {
    "text": "a complete spec you know you TCP is a complete specification you know how to",
    "start": "1271429",
    "end": "1277669"
  },
  {
    "text": "implement it you can make it interoperate it has certain characteristics when something happens",
    "start": "1277669",
    "end": "1283880"
  },
  {
    "text": "then this has to happen for all cases that's not raft raft is an algorithm",
    "start": "1283880",
    "end": "1289130"
  },
  {
    "text": "that specifies most of its operation and has a certain set of you know properties very good properties but to implement in",
    "start": "1289130",
    "end": "1296750"
  },
  {
    "text": "the real world you have to have more than raft and for this situation with Aran clustering we added a couple things",
    "start": "1296750",
    "end": "1303529"
  },
  {
    "start": "1297000",
    "end": "1297000"
  },
  {
    "text": "which are very important the first is that the leader doesn't just order events it actually ingest sin injects",
    "start": "1303529",
    "end": "1310549"
  },
  {
    "text": "time into the system by time stamping each event so the individual services",
    "start": "1310549",
    "end": "1316010"
  },
  {
    "text": "don't have their own concept of time separate from the log the log is time it's everything and raft is specified as",
    "start": "1316010",
    "end": "1324710"
  },
  {
    "text": "an RPC based kind of mechanic in the real world that's this works until you need to actually go somewhat fast and to",
    "start": "1324710",
    "end": "1332179"
  },
  {
    "text": "somewhat move fast and to scale asynchronous operation is inherent so you have - look at what RAF does what it relies",
    "start": "1332179",
    "end": "1339000"
  },
  {
    "text": "on from an RPC perspective and mimic that as an asynchronous process as well",
    "start": "1339000",
    "end": "1344390"
  },
  {
    "text": "and it turns out that you know if you have the concept of time and it's being",
    "start": "1344390",
    "end": "1349980"
  },
  {
    "text": "used within within a system and it's being enforced within a system then the concept of timers is something you can",
    "start": "1349980",
    "end": "1356700"
  },
  {
    "text": "provide as well the idea of scheduling a timer that goes off at some point the",
    "start": "1356700",
    "end": "1362460"
  },
  {
    "text": "leader is the one who's responsible for time staining and stamping events it's also the one who's watching for timers",
    "start": "1362460",
    "end": "1368100"
  },
  {
    "text": "to expire so that's a that's a fairly useful thing that most systems end up",
    "start": "1368100",
    "end": "1373260"
  },
  {
    "text": "building themselves if they go down this path so we have something which looks a little bit different because the",
    "start": "1373260",
    "end": "1378780"
  },
  {
    "text": "consensus between the different elements needs to to communicate with one another but you don't want the client to have to",
    "start": "1378780",
    "end": "1385409"
  },
  {
    "text": "communicate with every single member of the cluster but one of there is going to be one member so it's going to have to",
    "start": "1385409",
    "end": "1393510"
  },
  {
    "text": "reorder it's gonna have to timestamp events it's gonna have to do all this work why not let it be also the one",
    "start": "1393510",
    "end": "1398789"
  },
  {
    "text": "who's communicating with the clients what happens in the case where you don't know the member they're sorry the leader",
    "start": "1398789",
    "end": "1405200"
  },
  {
    "text": "well if you go to any of these they will should know who the who the leader is and they can tell you where to go right",
    "start": "1405200",
    "end": "1410850"
  },
  {
    "text": "so just simple redirect so let's say we have a system like this the concept of",
    "start": "1410850",
    "end": "1418260"
  },
  {
    "text": "snapshots and checkpoints the concept of a locally replicated log the idea of using consensus to determine position of",
    "start": "1418260",
    "end": "1425400"
  },
  {
    "text": "consumption or processing and a state machine at each of those instances it's running over top of that log what kind",
    "start": "1425400",
    "end": "1432390"
  },
  {
    "text": "of things can you build with this once you have this in place this is really the the meet of you know the toggle well",
    "start": "1432390",
    "end": "1441120"
  },
  {
    "text": "first off this is deterministic you know the first thing that you gain from this is a very deterministic system the log",
    "start": "1441120",
    "end": "1447000"
  },
  {
    "text": "is immutable you can't go back and change the log entry but you can append to it and it could be played you can",
    "start": "1447000",
    "end": "1453240"
  },
  {
    "text": "stop it and look at the state at any particular point that's kind of nice it's kind of Handy something that a lot",
    "start": "1453240",
    "end": "1459240"
  },
  {
    "text": "of distributed systems don't have the ability to do and you can also replay you can go back to a previous state and",
    "start": "1459240",
    "end": "1465720"
  },
  {
    "text": "replay and since each event is time-stamped you you know the concept of how pine is",
    "start": "1465720",
    "end": "1472380"
  },
  {
    "text": "progressing and when services restart they start they restart from a snapshot",
    "start": "1472380",
    "end": "1477900"
  },
  {
    "text": "on the log so they build their state up or read it in in the case of a snapshot and they you know adjust it from there",
    "start": "1477900",
    "end": "1485809"
  },
  {
    "text": "so with that you know what can you do well it comes some of the easy things that come about from this is you can do",
    "start": "1485809",
    "end": "1492360"
  },
  {
    "start": "1489000",
    "end": "1489000"
  },
  {
    "text": "distributed key-value stores almost in a simplistic manner right they're replicated so the state in that",
    "start": "1492360",
    "end": "1498360"
  },
  {
    "text": "event stream is just the same event stream now this is by far you know not maybe the best way to implement them",
    "start": "1498360",
    "end": "1504240"
  },
  {
    "text": "because it does have some some additional overhead you can start relaxing certain things like the order",
    "start": "1504240",
    "end": "1509789"
  },
  {
    "text": "of messages and the concept of time and other things and you can still do distributed key-value stores and with",
    "start": "1509789",
    "end": "1515909"
  },
  {
    "text": "you know a little less stringency that will still operate just fine with different types of algorithms but you",
    "start": "1515909",
    "end": "1521309"
  },
  {
    "text": "can implement a key value store that simply the concept of distributed timer how many times have you needed the",
    "start": "1521309",
    "end": "1527159"
  },
  {
    "text": "ability for a timer to go off in a system but you didn't have an element which was you know waiting and making",
    "start": "1527159",
    "end": "1533789"
  },
  {
    "text": "sure that it went off think about this for a moment you have a an element that",
    "start": "1533789",
    "end": "1541080"
  },
  {
    "text": "comes up and it says at time 10 o'clock I want you to send a message to some other entity that doesn't exist right",
    "start": "1541080",
    "end": "1547200"
  },
  {
    "text": "now but it's in a clock I want you know that it will exist there and I want you to send a message at that point that's a",
    "start": "1547200",
    "end": "1554610"
  },
  {
    "text": "distributed timer so you set it up you let the cluster worry about it and when the time comes up the leaders expires a",
    "start": "1554610",
    "end": "1561000"
  },
  {
    "text": "timer causes all the replicas to do whatever they're supposed to do on that timer in by the same token now since you",
    "start": "1561000",
    "end": "1568020"
  },
  {
    "text": "have the same state you can you can do distributed locks in a fairly easy and cheap way but so these are the these are",
    "start": "1568020",
    "end": "1575640"
  },
  {
    "text": "sort of the the really simple things you can do but if you start to sort of step back and what are the things you know",
    "start": "1575640",
    "end": "1582510"
  },
  {
    "text": "that that have used these types of systems before well and finance there's",
    "start": "1582510",
    "end": "1587880"
  },
  {
    "start": "1587000",
    "end": "1587000"
  },
  {
    "text": "several ones so there are a large set of matching engines that work this way they have an immutable log that's called",
    "start": "1587880",
    "end": "1594240"
  },
  {
    "text": "orders coming in they then match you know they want those who want to sell",
    "start": "1594240",
    "end": "1599520"
  },
  {
    "text": "with those who want to buy and since it's the same log its deterministic now if you've ever written",
    "start": "1599520",
    "end": "1606840"
  },
  {
    "text": "a matching engine thinking of it as being a deterministic thing you know might be something that you know there's kind of in congruous it might not be",
    "start": "1606840",
    "end": "1612840"
  },
  {
    "text": "something that you think of but they can be made to be very deterministic in this regard the second thing is order",
    "start": "1612840",
    "end": "1619650"
  },
  {
    "text": "management you know so you're managing orders from various venues from different entities that want to buy and",
    "start": "1619650",
    "end": "1625650"
  },
  {
    "text": "sell and do all kinds of interesting things tracking that as a series of messages that are that is coming in",
    "start": "1625650",
    "end": "1631920"
  },
  {
    "text": "efficiently is is one thing that you can do market surveillance it's a stream of",
    "start": "1631920",
    "end": "1637080"
  },
  {
    "text": "messages that are coming out you know out from a market if you want to surveil it and watch for certain things this is",
    "start": "1637080",
    "end": "1643200"
  },
  {
    "text": "one way of doing it because now you actually have the ability to say this event spawn this other event I had now",
    "start": "1643200",
    "end": "1649830"
  },
  {
    "text": "have some correlation I can even look at the time between them do all kinds of different things and from this you can do this you know a P&L risk or even",
    "start": "1649830",
    "end": "1657090"
  },
  {
    "text": "reference data and therefore different things that might change and might modify you know now you can actually do",
    "start": "1657090",
    "end": "1662790"
  },
  {
    "text": "that on that same string of data but you know finance is one thing but you know",
    "start": "1662790",
    "end": "1667860"
  },
  {
    "start": "1667000",
    "end": "1667000"
  },
  {
    "text": "beyond that what type of systems do we have that would benefit from this turns out venue ticketing and reservations is",
    "start": "1667860",
    "end": "1674400"
  },
  {
    "text": "another big system it's not hard the logics not difficult but the problem is making it so that you know if someone",
    "start": "1674400",
    "end": "1680760"
  },
  {
    "text": "decides that they're going to be starting a tour and their tickets are going to go on sale it's 6:00 p.m. you",
    "start": "1680760",
    "end": "1686850"
  },
  {
    "text": "don't want the system to be setting there and can't end it on the database by say you know trying to add add tickets to go through all the other",
    "start": "1686850",
    "end": "1694260"
  },
  {
    "text": "process so managing something like grabbing a reservation while you're checking out and being able to free it",
    "start": "1694260",
    "end": "1701040"
  },
  {
    "text": "later turns out to be extremely easy with these types of systems auctions are",
    "start": "1701040",
    "end": "1706590"
  },
  {
    "text": "another one very deterministic kind of like matching in some ways you know",
    "start": "1706590",
    "end": "1711690"
  },
  {
    "text": "other ones that are not up here things like betting and a lot of other systems any time you see a really contended",
    "start": "1711690",
    "end": "1717030"
  },
  {
    "text": "database which has you know a lot of contingent especially on just certain lines at any one time because of multiple different entities trying to",
    "start": "1717030",
    "end": "1724080"
  },
  {
    "text": "change them that's a good candidate these are you know systems which can be much simpler this way now it doesn't",
    "start": "1724080",
    "end": "1729840"
  },
  {
    "text": "necessarily mean that you know you need fully clustering you may not need you know all of it but it does simplify",
    "start": "1729840",
    "end": "1736170"
  },
  {
    "text": "things a little you know and yesterday we actually had a you know somewhat of a glorified IRC",
    "start": "1736170",
    "end": "1741660"
  },
  {
    "text": "style chat app that went down right it'd be kind of nice if you know you know some system like that had the ability to",
    "start": "1741660",
    "end": "1748440"
  },
  {
    "text": "sort of have its you know that sequence of messages and messages that are coming in be ordered right and also had a",
    "start": "1748440",
    "end": "1755040"
  },
  {
    "text": "little bit more you know maybe a little bit more uptime you know because our emojis don't forget about the emojis",
    "start": "1755040",
    "end": "1760320"
  },
  {
    "text": "don't underestimate you know the importance of emojis so another system which is kind of built on this idea of",
    "start": "1760320",
    "end": "1766710"
  },
  {
    "text": "an event log or a log of events and is sort of CQRS command query",
    "start": "1766710",
    "end": "1773220"
  },
  {
    "text": "responsibility segregation there's a couple good things in a several bad things about CQRS it's not really",
    "start": "1773220",
    "end": "1780480"
  },
  {
    "text": "related directly to this you it would not be the best idea to to use something",
    "start": "1780480",
    "end": "1786990"
  },
  {
    "text": "like CQRS I chose associated with this and the reason is because secure s almost demands that you record your",
    "start": "1786990",
    "end": "1794310"
  },
  {
    "text": "outputs recording of your outputs can be a very bad thing especially when your outputs are wrong so imagine if you will",
    "start": "1794310",
    "end": "1801720"
  },
  {
    "text": "you have bad logic that then generates a bad event like suppose your logic your reservation system your logic says you",
    "start": "1801720",
    "end": "1808950"
  },
  {
    "text": "know that it's possible for two people to reserve the same seat well if you",
    "start": "1808950",
    "end": "1814020"
  },
  {
    "text": "recorded that two people reserve the same seat now you try to replay it you're kind of stuck right so you know systems like",
    "start": "1814020",
    "end": "1822210"
  },
  {
    "text": "this now this isn't a perfect representation that you see QRS and there's lots of little gotchas around it but you know a lot of times if you're",
    "start": "1822210",
    "end": "1828540"
  },
  {
    "text": "thinking about these types of systems where it's replaying a sequence you know in a log and it's you know sort of an",
    "start": "1828540",
    "end": "1835620"
  },
  {
    "text": "event stream you know CTRs is kind of built you know to do that but for a different purpose so you know why why",
    "start": "1835620",
    "end": "1844890"
  },
  {
    "text": "Aaron so the first thing is if you don't know what Aaron is it's a it's it's a",
    "start": "1844890",
    "end": "1850350"
  },
  {
    "text": "very efficient reliable UDP unicast UDP multicast an IPC message transport you",
    "start": "1850350",
    "end": "1856170"
  },
  {
    "text": "know think of it as TCP but over a you know over UDP but it also supports multicast and it also supports very fast",
    "start": "1856170",
    "end": "1863250"
  },
  {
    "text": "IPC and a couple different languages in a few liter different languages and it's",
    "start": "1863250",
    "end": "1868620"
  },
  {
    "text": "a little bit more than that it has fast archival and replay now it's not persistence it's not guaranteed",
    "start": "1868620",
    "end": "1875070"
  },
  {
    "text": "messaging because we fundamentally think that guarantee messaging and queuing are kind of you know they're only a small",
    "start": "1875070",
    "end": "1881429"
  },
  {
    "text": "part of a much larger problem which we talked about you know previously but it does have this very fast way of",
    "start": "1881429",
    "end": "1887129"
  },
  {
    "text": "archiving a stream and replaying a stream so really what it does is it addresses the efficient bit in a title",
    "start": "1887129",
    "end": "1893609"
  },
  {
    "text": "right we try aaron has a lot of different pieces to that are extremely efficient so what this really means is",
    "start": "1893609",
    "end": "1900149"
  },
  {
    "text": "within clustering if you have air on what it's doing is it's providing all communications so between different can",
    "start": "1900149",
    "end": "1906419"
  },
  {
    "text": "you know consensus pieces between services getting a client sending into the cluster Aaron publication",
    "start": "1906419",
    "end": "1912749"
  },
  {
    "text": "subscriptions are used for that for the storage of the the archive you know the laravel kyv it's it's very simple Orca",
    "start": "1912749",
    "end": "1919799"
  },
  {
    "text": "Aaron archiving and replay is used and four different pieces of you know one particular stack the service the Ark of",
    "start": "1919799",
    "end": "1926820"
  },
  {
    "text": "the along archive and the consensus pieces themselves we use shared counters and shared memory to sort of control and",
    "start": "1926820",
    "end": "1933239"
  },
  {
    "text": "to monitor one another and really the concept of consensus you know is built",
    "start": "1933239",
    "end": "1940049"
  },
  {
    "text": "on the stream position so a stream position in the air on is a byte within the stream you know the stream position",
    "start": "1940049",
    "end": "1945989"
  },
  {
    "text": "10 is 10 bytes into the stream we use this for simplifying things like flow",
    "start": "1945989",
    "end": "1951059"
  },
  {
    "text": "control congestion control and a whole bunch of other monitoring that comes about by thinking of the you know every",
    "start": "1951059",
    "end": "1956849"
  },
  {
    "text": "part of the stream you know different components within a stream being in a different position I'll give you an",
    "start": "1956849",
    "end": "1962070"
  },
  {
    "text": "example you might be sending in your at position 100 but an archive might be",
    "start": "1962070",
    "end": "1967830"
  },
  {
    "text": "recording and it's gonna be behind that well how far behind it is it well if it's if it's a position 99 you know it's",
    "start": "1967830",
    "end": "1974190"
  },
  {
    "text": "one byte behind right if you have a consumer who is only really you know",
    "start": "1974190",
    "end": "1979379"
  },
  {
    "text": "processed up to position 90 and you're an up position hundred you know that there's 10 bytes outstanding simple",
    "start": "1979379",
    "end": "1986879"
  },
  {
    "text": "simple numbers but the concept here is this consists this is nothing more than a number it's nothing more than a",
    "start": "1986879",
    "end": "1992609"
  },
  {
    "text": "position in the stream that is saying on to all the other replicas that you can process up to this point in the stream",
    "start": "1992609",
    "end": "1999389"
  },
  {
    "text": "this is much simpler than actually a lot of the other thing that are done in a lot of wrapped",
    "start": "1999389",
    "end": "2006020"
  },
  {
    "text": "implementations or pieces of them the other part is batching batching is",
    "start": "2006020",
    "end": "2011330"
  },
  {
    "start": "2009000",
    "end": "2009000"
  },
  {
    "text": "really critical to efficient operation you know and how its efficient is there",
    "start": "2011330",
    "end": "2017450"
  },
  {
    "text": "sort critical is because it has to optimize the pipeline throughput through the system with clustering we're not is",
    "start": "2017450",
    "end": "2023390"
  },
  {
    "text": "much concerned about latency we want lowest latency we can get but in essence you also are going through multiple hops",
    "start": "2023390",
    "end": "2029030"
  },
  {
    "text": "and you're kind of throttled a little bit by how fast consensus can be reached but one thing you can do is you can",
    "start": "2029030",
    "end": "2035750"
  },
  {
    "text": "stream it very quickly so you can pipeline that operation so think of it as the consensus position is going to",
    "start": "2035750",
    "end": "2042200"
  },
  {
    "text": "move just as fast as any of the recordings so you can go that speed that",
    "start": "2042200",
    "end": "2049000"
  },
  {
    "text": "turns out to be really quick how fast we're still we're still going but in in",
    "start": "2049000",
    "end": "2055940"
  },
  {
    "text": "concept it can go as fast as your SSD can go that's it or any other storage",
    "start": "2055940",
    "end": "2061850"
  },
  {
    "text": "that you're using it also turns out the flow control with an Aeron which is one of the few things that a few messaging",
    "start": "2061850",
    "end": "2068148"
  },
  {
    "text": "transports that has flow control is incredibly important for correct operations so that the system is stable",
    "start": "2068149",
    "end": "2073850"
  },
  {
    "text": "and keeps itself stable so sir what does it look like you know in Java well the",
    "start": "2073850",
    "end": "2080690"
  },
  {
    "text": "first thing we decided was a lot of the ways that we've seen this done in the past is you know this kind of bloated",
    "start": "2080690",
    "end": "2087050"
  },
  {
    "text": "type of you know SOE API garbage right multiple objects",
    "start": "2087050",
    "end": "2093200"
  },
  {
    "text": "running around that you know have a hundred and you know if you know five methods that you have to fill in if you want to use them so we decided that a",
    "start": "2093200",
    "end": "2100430"
  },
  {
    "start": "2100000",
    "end": "2100000"
  },
  {
    "text": "service is a single class instance it has invoked from a single thread so you don't have to worry about you know it",
    "start": "2100430",
    "end": "2106580"
  },
  {
    "text": "coming from different threads or where they're coming from it has a very short list of methods in fact it has less than",
    "start": "2106580",
    "end": "2112310"
  },
  {
    "text": "a dozen and they are categorized when someone connects to the cluster you get",
    "start": "2112310",
    "end": "2118190"
  },
  {
    "text": "a session open when they go away either from timeout or deliberately closing you get a notification and this is in the",
    "start": "2118190",
    "end": "2124369"
  },
  {
    "text": "log so you ever everyone sees them the same thing a message is nothing more than you know here's a buffer here's the",
    "start": "2124369",
    "end": "2130730"
  },
  {
    "text": "message here's the time it was received you'll notice pretty much everything that is an event a time stamp associated with it and one",
    "start": "2130730",
    "end": "2137570"
  },
  {
    "text": "a timer expires you get you get a notification how do you take snapshots",
    "start": "2137570",
    "end": "2142750"
  },
  {
    "text": "system tells you where to take a snapshot it says take a snapshot and at hand you a publication that's because",
    "start": "2142750",
    "end": "2148850"
  },
  {
    "text": "snapshots gonna be actually stored in the log archive so it looks like just sending on a publication like you were",
    "start": "2148850",
    "end": "2155630"
  },
  {
    "text": "sending data and if you're loading up a snapshot it says here here's a snapshot read it from this image and an image is",
    "start": "2155630",
    "end": "2163280"
  },
  {
    "text": "a you know a piece of a string and then there's some housekeeping to let you know about certain things if you're",
    "start": "2163280",
    "end": "2170630"
  },
  {
    "text": "starting up if you are finished starting up but you're now replaying you've done your snapshot but you're now replaying",
    "start": "2170630",
    "end": "2176810"
  },
  {
    "text": "or you're replaying his end or you're ready after you have done your snapshot and replay and lastly if your role",
    "start": "2176810",
    "end": "2183500"
  },
  {
    "text": "changes so that you know if you're the you know if you're the the service that is in the leader or if you're just a",
    "start": "2183500",
    "end": "2190190"
  },
  {
    "text": "follower and that's it you just fill in these message these methods and that's it if you don't want",
    "start": "2190190",
    "end": "2198920"
  },
  {
    "text": "to do something that's perfectly fine you don't have to fill these in now you",
    "start": "2198920",
    "end": "2206180"
  },
  {
    "text": "can't integrate this with you know some the the ways of cleaning up some logic and asynchronous systems such as Rx and",
    "start": "2206180",
    "end": "2212360"
  },
  {
    "text": "java and i'm flow it's can be done it's not maybe the easiest or maybe the",
    "start": "2212360",
    "end": "2217910"
  },
  {
    "text": "appropriate thing for certain types of services but it can be done what does it look like how do I get data into a",
    "start": "2217910",
    "end": "2224120"
  },
  {
    "text": "cluster pretty simple first thing is you connect to the cluster and then you have",
    "start": "2224120",
    "end": "2232670"
  },
  {
    "text": "a buffer that you're going to put your data you assign it a correlation ID the only thing about the correlation idea is",
    "start": "2232670",
    "end": "2238460"
  },
  {
    "text": "it has to be increasing it can't have gaps there's fine doesn't have to be contiguous but it does have to just",
    "start": "2238460",
    "end": "2243680"
  },
  {
    "text": "increase and you offer into the cluster now one of the things that has normally been done here is that this is a",
    "start": "2243680",
    "end": "2250070"
  },
  {
    "text": "blocking operation you wait to send into the cluster and that actually is very",
    "start": "2250070",
    "end": "2255770"
  },
  {
    "text": "important for some systems that need that ability most systems do not go you'd rather just stream as fast as you",
    "start": "2255770",
    "end": "2263360"
  },
  {
    "text": "can you're the events that need to go into the cluster if you need to wait you know for",
    "start": "2263360",
    "end": "2268610"
  },
  {
    "text": "you know the cluster to make sure that that message is made it into it then build that logic into the service we've",
    "start": "2268610",
    "end": "2274910"
  },
  {
    "text": "noticed several times as we've used systems like this that the the thing of",
    "start": "2274910",
    "end": "2281000"
  },
  {
    "text": "I sent and then I wait and I block until the cluster has it then I send again and I wait until all the cluster has it what",
    "start": "2281000",
    "end": "2288350"
  },
  {
    "text": "it leads to is this locking behavior that can't go faster that's but you know basically it's it's constrained by the",
    "start": "2288350",
    "end": "2293930"
  },
  {
    "text": "speed of light and it's constrained Pro you know by every other member of the cluster it just slows things down not",
    "start": "2293930",
    "end": "2300890"
  },
  {
    "text": "everything needs to be that way you can just dream into the cluster and then wait for the end to make sure that everything got made it in so it's a",
    "start": "2300890",
    "end": "2308000"
  },
  {
    "text": "blocking sorry it's a non blocking type of offer you know friend receive me from",
    "start": "2308000",
    "end": "2313070"
  },
  {
    "text": "the cluster is nothing more than creating something we call an egress adapter and I'm pulling on it and saying what you want to do with the message so",
    "start": "2313070",
    "end": "2322300"
  },
  {
    "text": "that's kind of from a high level how things how things look so some of the",
    "start": "2322300",
    "end": "2328100"
  },
  {
    "start": "2327000",
    "end": "2327000"
  },
  {
    "text": "takeaways here hopefully I've kind of instilled the idea that snapshot and replay you know looks deterministic can",
    "start": "2328100",
    "end": "2334370"
  },
  {
    "text": "be used if you're not even using something like clustering but you have the ability to save a recording of events and you can use those events for",
    "start": "2334370",
    "end": "2341240"
  },
  {
    "text": "mutating your state even if you're using something like you know guarantee messaging or queuing or anything else of",
    "start": "2341240",
    "end": "2346820"
  },
  {
    "text": "that ilk you can use that to sort of simplify your state management especially across a replay and if there",
    "start": "2346820",
    "end": "2353960"
  },
  {
    "text": "is some power in a timestamp replicated log right if your time stamping it that",
    "start": "2353960",
    "end": "2359240"
  },
  {
    "text": "means that now the time within your system is decoupled from the real time and that multiple entities now can",
    "start": "2359240",
    "end": "2365150"
  },
  {
    "text": "rendezvous on the same time with that without it being something outside of the system something a little bit more",
    "start": "2365150",
    "end": "2371330"
  },
  {
    "text": "you know has a little more promise and you know the idea of a replicated state",
    "start": "2371330",
    "end": "2376940"
  },
  {
    "text": "machine one of the things I didn't mention but you know should be kind of obvious is you're reading this log",
    "start": "2376940",
    "end": "2382310"
  },
  {
    "text": "everyone's transitioning you know based on the same sequence of events you know",
    "start": "2382310",
    "end": "2387800"
  },
  {
    "text": "they're kind of not in true lockstep but they are you know sort of progressing at the same pace so if they process a",
    "start": "2387800",
    "end": "2394280"
  },
  {
    "text": "message they're at the same the same pace and you know what do you do for",
    "start": "2394280",
    "end": "2400460"
  },
  {
    "text": "situations like I want to take a piece of and mutate downstream well you know when",
    "start": "2400460",
    "end": "2405709"
  },
  {
    "text": "you're the leader you know when you're not the leader it'd be easy to have the leader logic to do all the hard work and",
    "start": "2405709",
    "end": "2412279"
  },
  {
    "text": "the rest of it you just sort of sit back and go well either the leader state machine is gonna take care of that I'm just going to sit here and you know do",
    "start": "2412279",
    "end": "2418219"
  },
  {
    "text": "the other things that I'd like to do so you can put conditional logic in and do",
    "start": "2418219",
    "end": "2423289"
  },
  {
    "text": "things like that or you can just let multi-point that these do this do the right thing downstream so what's the",
    "start": "2423289",
    "end": "2428900"
  },
  {
    "text": "current status here Aaron archiving Aaron's been around for since 2014 we've",
    "start": "2428900",
    "end": "2435019"
  },
  {
    "text": "got you know individuals doing some great great things with it from",
    "start": "2435019",
    "end": "2441199"
  },
  {
    "text": "everything from IOT devices to you know you know even some really high volume",
    "start": "2441199",
    "end": "2448180"
  },
  {
    "text": "you know things in finance Aaron archiving has been around for probably a little over a year it's fully",
    "start": "2448180",
    "end": "2454670"
  },
  {
    "text": "supported it's very fast we're only bottlenecked by basically storage and I'm not saying that",
    "start": "2454670",
    "end": "2461180"
  },
  {
    "text": "facetiously I mean realistically we we we keep getting larger and faster SSDs and we can't make it you know not max",
    "start": "2461180",
    "end": "2468680"
  },
  {
    "text": "them out Aaron itself you know can has been known to peg you know 40 gigabit you know",
    "start": "2468680",
    "end": "2474979"
  },
  {
    "text": "switches easily so Aaron clustering you know builds on Aaron archiving and Aaron",
    "start": "2474979",
    "end": "2481369"
  },
  {
    "text": "currently it's in pre-alpha it's actually in production at a couple places that are that are using it in a",
    "start": "2481369",
    "end": "2488269"
  },
  {
    "text": "single node version the multi node version is is coming along and will be in production here in the next month or",
    "start": "2488269",
    "end": "2493699"
  },
  {
    "text": "so probably even more than that and I should mention that you know an entity adaptive adaptive trading who I don't",
    "start": "2493699",
    "end": "2500989"
  },
  {
    "text": "know if you ever seen react to trader or anything like that they are a consulting group who we've worked with for a very",
    "start": "2500989",
    "end": "2506719"
  },
  {
    "text": "long time and they sponsored this work they have a client who's actually using this in production as I said right now",
    "start": "2506719",
    "end": "2512979"
  },
  {
    "text": "and it's you know they'll be going into a multi node deployment here very shortly and just to sort of give you a",
    "start": "2512979",
    "end": "2520729"
  },
  {
    "text": "little bit something hot off the press last night one individual who was playing with cluster and got it running",
    "start": "2520729",
    "end": "2526400"
  },
  {
    "text": "on you know set of raspberry PI's you know just just to see if they could and",
    "start": "2526400",
    "end": "2531769"
  },
  {
    "text": "so this is just a simple set up with three replicas and you know client on the on on there and",
    "start": "2531769",
    "end": "2539480"
  },
  {
    "text": "so that's it thank you we've got about",
    "start": "2539480",
    "end": "2547880"
  },
  {
    "text": "eight minutes or so for for questions so tried to rush to certain things yes not",
    "start": "2547880",
    "end": "2574010"
  },
  {
    "text": "really so the the the concept of scheduling a timer is is is done",
    "start": "2574010",
    "end": "2580610"
  },
  {
    "text": "actually all of the notes the actual expiry of the timer happens on the",
    "start": "2580610",
    "end": "2585980"
  },
  {
    "text": "leader so if you were to have like a change of a change of leader a role",
    "start": "2585980",
    "end": "2590990"
  },
  {
    "text": "change to someone else who has a vastly different clock it would it would expire",
    "start": "2590990",
    "end": "2596660"
  },
  {
    "text": "but the rest of them would detect that as well so because they're all they're all watching that",
    "start": "2596660",
    "end": "2604000"
  },
  {
    "text": "so so think of think of the entities that are scheduling the time or all of",
    "start": "2616330",
    "end": "2621589"
  },
  {
    "text": "them are scheduling the timer locally so who you know if it's so think of it this",
    "start": "2621589",
    "end": "2630109"
  },
  {
    "text": "way none of them have the same time right but you're saying I have a",
    "start": "2630109",
    "end": "2636020"
  },
  {
    "text": "deadline of 10 seconds from now and so it gets it gets it gets scheduled on each of those of those replicas 10",
    "start": "2636020",
    "end": "2645200"
  },
  {
    "text": "seconds from their individual timers so when and say the leader is waiting",
    "start": "2645200",
    "end": "2650930"
  },
  {
    "text": "waiting and he fails or he you know it fails right it goes it goes away so leaders now have gone another leader",
    "start": "2650930",
    "end": "2657140"
  },
  {
    "text": "comes in and it looks to see what timers it has scheduled now it's scheduled that",
    "start": "2657140",
    "end": "2662420"
  },
  {
    "text": "timer to go off at 10 seconds from when it or when it's scheduled it right so within the time stamp in the log 10",
    "start": "2662420",
    "end": "2668990"
  },
  {
    "text": "seconds later it will fire so there will be 10 seconds but it's just it's",
    "start": "2668990",
    "end": "2675140"
  },
  {
    "text": "relative to each individual node and then that gets put into the log and then",
    "start": "2675140",
    "end": "2680660"
  },
  {
    "text": "it gets replicated and then that gets the the consensus pops up and the rest of the services then see that so it's",
    "start": "2680660",
    "end": "2687290"
  },
  {
    "text": "it's sort of it's a subtlety right because it's each individual node is scheduling their timer if they become",
    "start": "2687290",
    "end": "2692480"
  },
  {
    "text": "leader then they are the one who's responsible for letting everyone else know so it's always going to be 10 seconds but it's 10 seconds relative to",
    "start": "2692480",
    "end": "2698990"
  },
  {
    "text": "each individual node sure no",
    "start": "2698990",
    "end": "2705820"
  },
  {
    "text": "no not really unless you build them into the you know into the but you have that anyway if you're going to schedule time",
    "start": "2718750",
    "end": "2724730"
  },
  {
    "text": "or like a month in advance you're gonna have drift with an end of it so if you just had one entity and you had drift",
    "start": "2724730",
    "end": "2730790"
  },
  {
    "text": "right you're gonna have that drift so if you wanted to run it so that you had",
    "start": "2730790",
    "end": "2736310"
  },
  {
    "text": "less drift for something that was a long running time or like a month you know you're gonna be wanted to do something",
    "start": "2736310",
    "end": "2741620"
  },
  {
    "text": "like PPTP or something else to keep that drift you know in check even if it were just locally to the machine it is so",
    "start": "2741620",
    "end": "2750440"
  },
  {
    "text": "it's it's in effect the same problem that you would have with just one node because it's it's still that that drift",
    "start": "2750440",
    "end": "2757370"
  },
  {
    "text": "is within that node it's not between nodes but this is that's the that's the",
    "start": "2757370",
    "end": "2763130"
  },
  {
    "text": "simplification right we're not we're not looking at the skew between two different clocks on two different machines we're looking at just within",
    "start": "2763130",
    "end": "2769460"
  },
  {
    "text": "the one within one machine and what it does is it's effectively just adding an event to the log that's saying as a",
    "start": "2769460",
    "end": "2775370"
  },
  {
    "text": "leader on time stamping the expiry of this event that happens at this time that's what the new time is yeah it took",
    "start": "2775370",
    "end": "2784250"
  },
  {
    "text": "us we thought about this a lot and kind of ran and ran it through several different scenarios to make sure that it",
    "start": "2784250",
    "end": "2790880"
  },
  {
    "text": "you know it's only dependent on what on the one machine the leader at the current time that it expires because it",
    "start": "2790880",
    "end": "2797510"
  },
  {
    "text": "was scheduled locally to that yeah sorry",
    "start": "2797510",
    "end": "2805430"
  },
  {
    "text": "yes",
    "start": "2805430",
    "end": "2807849"
  },
  {
    "text": "so the the time is a funny thing right I'm not being facetious it actually is a",
    "start": "2832030",
    "end": "2838700"
  },
  {
    "text": "really interesting interesting problem but realize that when an event happens at time stamps the leader time stamping",
    "start": "2838700",
    "end": "2845060"
  },
  {
    "text": "it is assigning the time to it so that a new leader who comes in is not going to",
    "start": "2845060",
    "end": "2850370"
  },
  {
    "text": "set and roll the clock back to his curtain time he's going to take his time relative to what the old time was so it",
    "start": "2850370",
    "end": "2856580"
  },
  {
    "text": "moves forward from there so uh time always moves forward now you may have a",
    "start": "2856580",
    "end": "2862880"
  },
  {
    "text": "clock on the leader which is unstable where you know it drifts around within",
    "start": "2862880",
    "end": "2868100"
  },
  {
    "text": "itself but that's you still have that problem however you do time time is not",
    "start": "2868100",
    "end": "2873590"
  },
  {
    "text": "time is not always consistent right it",
    "start": "2873590",
    "end": "2878840"
  },
  {
    "text": "does vary a bit it skews within itself a tire a clock always skews within itself",
    "start": "2878840",
    "end": "2884000"
  },
  {
    "text": "it'll slow down it'll speed up based on you know simply just a physic sudden temperature so the idea of progressing",
    "start": "2884000",
    "end": "2892340"
  },
  {
    "text": "from that time when you become leader here's the time and you progress forward from there that's a that's a very",
    "start": "2892340",
    "end": "2899180"
  },
  {
    "text": "important aspect of the whole system",
    "start": "2899180",
    "end": "2902980"
  },
  {
    "text": "we actually do it slightly differently we don't have the log is the the log is",
    "start": "2908970",
    "end": "2917160"
  },
  {
    "text": "the current time in essence so that's why it comes in in every event and that's why you know it starts from that",
    "start": "2917160",
    "end": "2923670"
  },
  {
    "text": "if you become leader now your job of getting your clock you know your system",
    "start": "2923670",
    "end": "2929010"
  },
  {
    "text": "clock together with the rest of that and the the cached clock to think of it that",
    "start": "2929010",
    "end": "2934319"
  },
  {
    "text": "way is now handled from that point forward we actually what we actually do",
    "start": "2934319",
    "end": "2939900"
  },
  {
    "text": "is within our duty cycle we have a slow tick that we advance time for so based",
    "start": "2939900",
    "end": "2946050"
  },
  {
    "text": "on the event the event the timestamp of events that come in so that when we become if if an entity of a cluster",
    "start": "2946050",
    "end": "2953220"
  },
  {
    "text": "member becomes a leader it then is always going to be ahead of that it's always going to be basing it's its basic",
    "start": "2953220",
    "end": "2959400"
  },
  {
    "text": "clock on that plus you know whatever however much time progresses if that",
    "start": "2959400",
    "end": "2965099"
  },
  {
    "text": "makes any sense",
    "start": "2965099",
    "end": "2967490"
  },
  {
    "text": "yeah but all it means is that we're we're relative as long as think of it as with something PTP PPTP you're always",
    "start": "2979060",
    "end": "2987250"
  },
  {
    "text": "having something sending you the time right and adjusting your clock you have the same concept here you know it's just",
    "start": "2987250",
    "end": "2993310"
  },
  {
    "text": "that they BK it's actually coming from a leader giving you the baseline for what the time is anything that progress is past that from",
    "start": "2993310",
    "end": "3000120"
  },
  {
    "text": "a follower perspective you don't even trust your clock your clock is you know it doesn't matter the only clock that",
    "start": "3000120",
    "end": "3005880"
  },
  {
    "text": "matters is the one that's coming in from the leader when you become a leader now it becomes important that you you know",
    "start": "3005880",
    "end": "3012000"
  },
  {
    "text": "are at that point and forward if that makes if that makes a little more sense",
    "start": "3012000",
    "end": "3017660"
  },
  {
    "text": "yeah because in Iran they're two",
    "start": "3017720",
    "end": "3027570"
  },
  {
    "text": "different things a publication just sends data and an image reads data you",
    "start": "3027570",
    "end": "3032580"
  },
  {
    "text": "know or polls data in it is it is well",
    "start": "3032580",
    "end": "3040140"
  },
  {
    "text": "it so there there's the there's all the mechanics of how you actually are taking the snapshot right internally if you",
    "start": "3040140",
    "end": "3047850"
  },
  {
    "text": "think about it all you're doing is they're offering data to a publication sending data and in it but it actually",
    "start": "3047850",
    "end": "3053070"
  },
  {
    "text": "is getting stored you know in the archive so we just we just basically made it as a a publication just that",
    "start": "3053070",
    "end": "3061320"
  },
  {
    "text": "interface that's the one we had and we didn't we we didn't try to make them the same because reading a snapshot and",
    "start": "3061320",
    "end": "3067230"
  },
  {
    "text": "letting a snapshot you know our sorry taking a snapshot and learning snapshot very two two very different things we",
    "start": "3067230",
    "end": "3072600"
  },
  {
    "text": "wanted to distinguish them slightly I'm being told to stop so but I'm more than happy to answer any questions down here",
    "start": "3072600",
    "end": "3080690"
  },
  {
    "text": "thank you",
    "start": "3085120",
    "end": "3088240"
  }
]