[
  {
    "text": "all right so we're going to talk about angular and we're going to specifically we're going to talk about uh testing an angular uh actually one more question",
    "start": "8800",
    "end": "15360"
  },
  {
    "text": "before we get started who who here Works in",
    "start": "15360",
    "end": "21119"
  },
  {
    "text": "angular who here has heard of angular who here uses",
    "start": "21119",
    "end": "28640"
  },
  {
    "text": "JavaScript Okay so I know some of you are lying because you had none of like there are people here who just didn't",
    "start": "28640",
    "end": "33840"
  },
  {
    "text": "raise their hands who here owns a",
    "start": "33840",
    "end": "37640"
  },
  {
    "text": "computer okay who here has legs I'm looking at you all right so",
    "start": "39000",
    "end": "47360"
  },
  {
    "text": "we're going to talk specifically about testing and we're going to talk about testing on angular uh the goals of",
    "start": "47360",
    "end": "53079"
  },
  {
    "text": "today's talk is to answer these questions what does it mean to test why should you write tests what is good",
    "start": "53079",
    "end": "59399"
  },
  {
    "text": "testing technique techque and how to test different components of our application unfortunately we don't have enough time to get every part of your",
    "start": "59399",
    "end": "65680"
  },
  {
    "text": "application so we're just going to we're going to talk about the different different types of tests and look at a",
    "start": "65680",
    "end": "70720"
  },
  {
    "text": "few ways to write tests for different components before we uh get too far into",
    "start": "70720",
    "end": "76280"
  },
  {
    "text": "that let's talk about uh let me just tell you who I am um my name is Ari I",
    "start": "76280",
    "end": "81479"
  },
  {
    "text": "wrote a book on angular actually I wrote several books on angular I'm in the process of writing another book not on",
    "start": "81479",
    "end": "87880"
  },
  {
    "text": "angular um I teach here in in San Francisco at a company called hack reactor or a school called hack reactor",
    "start": "87880",
    "end": "93680"
  },
  {
    "text": "and various other schools here in uh San Francisco and I have a background in",
    "start": "93680",
    "end": "98720"
  },
  {
    "text": "distributed computing and uh big data processing and infrastructure and I'm really into deep",
    "start": "98720",
    "end": "104960"
  },
  {
    "text": "learning which has nothing to do with angular um these are the books I referred to cool and I'm also uh kind of",
    "start": "104960",
    "end": "112799"
  },
  {
    "text": "as a way to wrap in um teaching for not only the people that I can speak to uh",
    "start": "112799",
    "end": "119479"
  },
  {
    "text": "in person and I'm also doing uh webinars and stuff online if you're interested in there's no way we're going to get",
    "start": "119479",
    "end": "125320"
  },
  {
    "text": "through all the material that I have today um I'm going to give a similar yet more in-depth talk um online uh and you",
    "start": "125320",
    "end": "133360"
  },
  {
    "text": "can find out more details at ng-newsletter Doc okay so back to the te The Talk",
    "start": "133360",
    "end": "141319"
  },
  {
    "text": "today um I strongly believe that testing is a",
    "start": "141319",
    "end": "147200"
  },
  {
    "text": "core component of development and I actually kind of even though I made this diagram I kind of argue with this diagram in the sense that I think those",
    "start": "147200",
    "end": "153480"
  },
  {
    "text": "two things are one and the same um so what is it what do actually mean to test",
    "start": "153480",
    "end": "159159"
  },
  {
    "text": "and why why do I hold that um opinion uh testing itself is is a way of",
    "start": "159159",
    "end": "167680"
  },
  {
    "text": "uh looking at our code and making sure that it runs the way that we expect it to run there are always going to be edge cases when you write code there's always",
    "start": "167680",
    "end": "173879"
  },
  {
    "text": "going to be the case where your code just does not run unless of course you're writing assembly code in which case um your code is always is going to",
    "start": "173879",
    "end": "180159"
  },
  {
    "text": "execute exactly how you expect it to execute until there's a power surge um",
    "start": "180159",
    "end": "185319"
  },
  {
    "text": "so uh specifically today we're going to talk about front-end testing and testing the front end testing our browsers has",
    "start": "185319",
    "end": "191200"
  },
  {
    "text": "traditionally been pretty difficult um one of the reasons it's been difficult because there's a lot we",
    "start": "191200",
    "end": "196840"
  },
  {
    "text": "have to do when we're writing front end tests we have to load a browser we have to set up our JavaScript Expectations first we have to have a library to do uh",
    "start": "196840",
    "end": "204080"
  },
  {
    "text": "to actually set our expectations up then we have to execute those exceptions capture the output um and then use",
    "start": "204080",
    "end": "209920"
  },
  {
    "text": "output to measure uh and compare against our expectations and then we have to uh in",
    "start": "209920",
    "end": "215799"
  },
  {
    "text": "order to do this in kind of a meaningful way other than just pointing and clicking and making sure that things kind of run when you press Apple R and",
    "start": "215799",
    "end": "223200"
  },
  {
    "text": "refresh your browsers we have to do this all in an automated way um we'll talk about how we as uh",
    "start": "223200",
    "end": "232400"
  },
  {
    "text": "developers in 2014 have it a lot easier than we as developers in 2010 and before",
    "start": "232400",
    "end": "238239"
  },
  {
    "text": "uh we'll look at uh the different tools that we have available to us today to handle a lot of that browser Automation",
    "start": "238239",
    "end": "243360"
  },
  {
    "text": "and uh expectations so there's two types of tests in um I there's a couple other",
    "start": "243360",
    "end": "249480"
  },
  {
    "text": "arguably a couple other uh ways of testing uh frontend code but the two um",
    "start": "249480",
    "end": "255079"
  },
  {
    "text": "typical types of tests are unit testing which is testing code and end end testing unit testing uh is basically",
    "start": "255079",
    "end": "263479"
  },
  {
    "text": "testing small core small components of our fun of our code and our functionality so unit tests are are",
    "start": "263479",
    "end": "269919"
  },
  {
    "text": "particularly good for um developer they're like they're developer uh facing",
    "start": "269919",
    "end": "275039"
  },
  {
    "text": "tests and the end testing on the other hand is we're automating clicking on a site we're automating loading a site",
    "start": "275039",
    "end": "281600"
  },
  {
    "text": "submitting forms um seeing if elements are there seeing if the browser is doing what we expect the browser to be",
    "start": "281600",
    "end": "288320"
  },
  {
    "text": "doing and lastly before we actually jump into uh working on stuff today uh",
    "start": "288320",
    "end": "294800"
  },
  {
    "text": "there's often I get the question a lot I do a lot of training uh for like I said",
    "start": "294800",
    "end": "299840"
  },
  {
    "text": "in uh in schools like hack reactor and I also do a lot of training in like the corporate setting and a lot of questions",
    "start": "299840",
    "end": "305320"
  },
  {
    "text": "we get are things like well do you believe in test driven development do you guys know what test driven development is it's kind of like an old",
    "start": "305320",
    "end": "312039"
  },
  {
    "text": "term yeah it means writing your test before you write your the functionality of your code that's why it's driven by",
    "start": "312039",
    "end": "318520"
  },
  {
    "text": "the tests um I don't actually believe in tdd I believe in test focused",
    "start": "318520",
    "end": "324400"
  },
  {
    "text": "development what I mean by that is um that's in the wrong spot what I mean by that is",
    "start": "324400",
    "end": "330520"
  },
  {
    "text": "uh writing testable code writing code that you can come back later and uh write a test on so you're um as opposed",
    "start": "330520",
    "end": "337440"
  },
  {
    "text": "to writing the test and then you know that your functionality is done when you write the test a a lot of the reason why",
    "start": "337440",
    "end": "342600"
  },
  {
    "text": "I believe that is because especially in the front end our API our developer uh",
    "start": "342600",
    "end": "347639"
  },
  {
    "text": "facing API is constantly changing especially when we're prototyping um and if you're writing",
    "start": "347639",
    "end": "353520"
  },
  {
    "text": "tests for an API that is likely to change is going to change then you're",
    "start": "353520",
    "end": "358960"
  },
  {
    "text": "wasting development Cycles on writing something that is you're going to throw away so I I believe specifically in test",
    "start": "358960",
    "end": "366720"
  },
  {
    "text": "focused development so what is tfd so this is oh jeez that is Tiny can",
    "start": "366720",
    "end": "375800"
  },
  {
    "text": "you guys read that well if you have edu.com open on your screen you can",
    "start": "375800",
    "end": "381720"
  },
  {
    "text": "totally read it um you might have a function like this inside of your angular app where you",
    "start": "381720",
    "end": "388720"
  },
  {
    "text": "have a load friends function and you only want to load the friends or you want to load the friends uh in from your",
    "start": "388720",
    "end": "395440"
  },
  {
    "text": "um either from your cache or you want to load it from uh a service like your API service for",
    "start": "395440",
    "end": "400800"
  },
  {
    "text": "instance this looks like kind of a reasonable function to do that right but this is super hard to test that is like",
    "start": "400800",
    "end": "407720"
  },
  {
    "text": "that is like if you're writing a test for that you are writing a whole bunch of Ed Edge case tests that you don't need to write you're like be simply",
    "start": "407720",
    "end": "415479"
  },
  {
    "text": "because your code looks like this your tests are going to be are going to explode",
    "start": "415479",
    "end": "420520"
  },
  {
    "text": "in terms of size whereas if you write were to write that same functionality like this in in different functions and",
    "start": "420520",
    "end": "426360"
  },
  {
    "text": "i'llbe it that this function right here is just kind of a little bit too big for my taste but if you write it like this",
    "start": "426360",
    "end": "431560"
  },
  {
    "text": "then you can stub out those specific tests when you're writing a test and uh",
    "start": "431560",
    "end": "436800"
  },
  {
    "text": "test that specific functionality for that test so I say tfd not",
    "start": "436800",
    "end": "442120"
  },
  {
    "text": "tdd um I also do believe that console log statements are",
    "start": "443160",
    "end": "448520"
  },
  {
    "text": "okay as long as you don't do a get commit with a console log okay so when when should we write",
    "start": "448520",
    "end": "456000"
  },
  {
    "text": "tests uh we should write tests when we're fixing a bug isolating an issue adding a new feature when we when we",
    "start": "456000",
    "end": "461680"
  },
  {
    "text": "bring a new developer on the project um tests are really good because when that",
    "start": "461680",
    "end": "467400"
  },
  {
    "text": "new developer joins and at some point you may have been that new developer you're like well what's broken how do these things work especially in a large",
    "start": "467400",
    "end": "474039"
  },
  {
    "text": "code base um having a test there to demonstrate exactly what that API looks like is really good",
    "start": "474039",
    "end": "481439"
  },
  {
    "text": "so let's talk about the process of testing um the process of testing is uh I",
    "start": "481479",
    "end": "488479"
  },
  {
    "text": "believe in four four um steps we want to isolate the functionality that we want to test we want to set expectation for",
    "start": "488479",
    "end": "494919"
  },
  {
    "text": "the functionality that we're writing set the given conditions for that functionality and this is uh this is",
    "start": "494919",
    "end": "500840"
  },
  {
    "text": "like an array by the way where you're like oh I have this condition this condition this condition and this condition um and then you want and then",
    "start": "500840",
    "end": "507360"
  },
  {
    "text": "the last part of it is compare the given conditions with the um with the given",
    "start": "507360",
    "end": "512399"
  },
  {
    "text": "output so uh for instance uh we might want to isolate a functionality like",
    "start": "512399",
    "end": "517880"
  },
  {
    "text": "this we have a function and this function does one thing it says build full name based off of name off of uh a",
    "start": "517880",
    "end": "525040"
  },
  {
    "text": "first name in a last name um so we in order to test this we would",
    "start": "525040",
    "end": "532839"
  },
  {
    "text": "have to set an expectation uh by the way I didn't include the introduction to",
    "start": "532839",
    "end": "538040"
  },
  {
    "text": "Jasmine in this because we just don't have enough time we're using Jasmine if you're not unfamiliar with Jasmine um it",
    "start": "538040",
    "end": "545920"
  },
  {
    "text": "it's very it's verbos it's tur enough such that you may uh should be able to",
    "start": "545920",
    "end": "551120"
  },
  {
    "text": "understand it if you don't understand it that's cool too just join the webinar because I'll be covering Jasmine in",
    "start": "551120",
    "end": "556760"
  },
  {
    "text": "there okay so um using Jasmine we would set an expectation like this where we use the keyword expect and then we call",
    "start": "556760",
    "end": "564000"
  },
  {
    "text": "the function and we call the function based off of a a set of given conditions",
    "start": "564000",
    "end": "569399"
  },
  {
    "text": "for instance the given conditions that we're calling inside of this test is we're building the full name with a first name and a last",
    "start": "569399",
    "end": "576040"
  },
  {
    "text": "name and then we're going to compare the output of that with the um expected",
    "start": "576040",
    "end": "583760"
  },
  {
    "text": "output all right so for the rest of the talk we're going to be using this code it's available here um this will link",
    "start": "585920",
    "end": "593920"
  },
  {
    "text": "you to this and you can uh just click on download zip on that page so it's um",
    "start": "593920",
    "end": "600800"
  },
  {
    "text": "J.M NG testing all one",
    "start": "600800",
    "end": "605040"
  },
  {
    "text": "word I know so hard to click download okay I'm going to move",
    "start": "608600",
    "end": "618000"
  },
  {
    "text": "on okay so uh the way that we'll run our specs as you guys are downloading that",
    "start": "618079",
    "end": "624200"
  },
  {
    "text": "hopefully the internet is good enough for it um not the internet is good the internet's good enough guys trust me the",
    "start": "624200",
    "end": "631120"
  },
  {
    "text": "our access to the internet is so we're going to be using a tool called karma",
    "start": "631120",
    "end": "637639"
  },
  {
    "text": "um uh K the way that we install karma is using the mpm node package manager uh",
    "start": "637639",
    "end": "643959"
  },
  {
    "text": "binary we'll install that using mpm install",
    "start": "643959",
    "end": "648639"
  },
  {
    "text": "Karma um so in order to use Karma we need to",
    "start": "651079",
    "end": "656519"
  },
  {
    "text": "give Karma a configuration file we'll give Karma configuration file by using the karma configuration generator we can",
    "start": "656519",
    "end": "663519"
  },
  {
    "text": "use the generator by using the command Karma space in",
    "start": "663519",
    "end": "669040"
  },
  {
    "text": "it are you guys following along or should yeah okay this is recorded So if you lose your place it's cool too great",
    "start": "669880",
    "end": "677800"
  },
  {
    "text": "so uh Karma andit itself will um bring up um a screen that looks like this with a bunch of different questions that you",
    "start": "677800",
    "end": "683920"
  },
  {
    "text": "can that it will ask you I particularly press enter for every single one of these questions regardless of what I'm doing because manually setting it up is",
    "start": "683920",
    "end": "690360"
  },
  {
    "text": "way easier than not so feel free to do that too if you're following along it will give you a file that looks",
    "start": "690360",
    "end": "695399"
  },
  {
    "text": "something like this um there are two there are three uh things inside this",
    "start": "695399",
    "end": "700720"
  },
  {
    "text": "file that you should pay attention to one is the files array the files array basically",
    "start": "700720",
    "end": "707120"
  },
  {
    "text": "um uh taking a step back the way that uh front-end testing works the way that Jasmine works is it'll load up a browser",
    "start": "707120",
    "end": "712959"
  },
  {
    "text": "and inject a bunch of files into that browser including uh including your dependencies your application and your",
    "start": "712959",
    "end": "718800"
  },
  {
    "text": "tests and so this files array represents the files that uh Karma will inject into",
    "start": "718800",
    "end": "725560"
  },
  {
    "text": "that running browser instance so every time that you have a dependency it needs to be listed in here you can see we have",
    "start": "725560",
    "end": "731440"
  },
  {
    "text": "uh angular inside of here as a dependency um anytime that you have new application code you have to put that",
    "start": "731440",
    "end": "737240"
  },
  {
    "text": "inside of this uh files array by the way this supports Globs as you can see here in our specs so if you just have like an",
    "start": "737240",
    "end": "743680"
  },
  {
    "text": "app directory and you just want to be like I'm just going to include all my app directory you can do that um and then this also takes all the tests that",
    "start": "743680",
    "end": "749920"
  },
  {
    "text": "we're writing so the uh second parameter that",
    "start": "749920",
    "end": "755000"
  },
  {
    "text": "you should pay attention to is the base path this is just basically where to resolve your files from um this is",
    "start": "755000",
    "end": "760680"
  },
  {
    "text": "particularly uh key when you're developing modular based",
    "start": "760680",
    "end": "765760"
  },
  {
    "text": "applications um and then the last one is auto watch Auto watch does exactly what it sounds like it will watch all your",
    "start": "765760",
    "end": "771320"
  },
  {
    "text": "files and when any of them changes inside that files array it will rerun all our",
    "start": "771320",
    "end": "776360"
  },
  {
    "text": "tests and that should say unit testing all right so uh unit testing as I",
    "start": "776360",
    "end": "781760"
  },
  {
    "text": "already said it's um it's really meant for the developer uh the developer who sees the code it's not meant for a user",
    "start": "781760",
    "end": "787839"
  },
  {
    "text": "an end user um right I put this in a weird spot",
    "start": "787839",
    "end": "795880"
  },
  {
    "text": "lastly before never mind unit testing is super fast unit testing is really focused it's really good it will save",
    "start": "795880",
    "end": "801279"
  },
  {
    "text": "your life you should totally do it are you guys convinced all right sweet so let's start testing so the first thing",
    "start": "801279",
    "end": "807959"
  },
  {
    "text": "that we need to do when we're writing t tests is to inject our execution environment in angular what that means",
    "start": "807959",
    "end": "813800"
  },
  {
    "text": "is we need to in inject our angular module because angular is a modular",
    "start": "813800",
    "end": "820399"
  },
  {
    "text": "framework we inject our modules by using the before each uh I'm Sorry by using the module function inside of a before",
    "start": "820399",
    "end": "827680"
  },
  {
    "text": "each block before each if you're unfamiliar with Jasmine does what exactly what it sounds like it runs",
    "start": "827680",
    "end": "832720"
  },
  {
    "text": "before every test all right so let's go do that inside of our code um if you downloaded",
    "start": "832720",
    "end": "838600"
  },
  {
    "text": "that example um uh I've pre-generated your the karma",
    "start": "838600",
    "end": "843959"
  },
  {
    "text": "config I've pre-generated the karma config um and Prett populated our application our application looks just",
    "start": "843959",
    "end": "850839"
  },
  {
    "text": "like this this is the weather in San",
    "start": "850839",
    "end": "856519"
  },
  {
    "text": "Francisco right now which that is super hot geez okay",
    "start": "856519",
    "end": "864800"
  },
  {
    "text": "what I guess it's 93.7 6 and that is Fahrenheit",
    "start": "864800",
    "end": "869839"
  },
  {
    "text": "that'd be terrible over Celsius all",
    "start": "869839",
    "end": "875959"
  },
  {
    "text": "right um this is a super basic application it's really uh this application is really intended on um uh",
    "start": "875959",
    "end": "884440"
  },
  {
    "text": "demonstrating testing not necessarily demonstrating the power of angular if you want to know the power of angular join the webinar I hate that word",
    "start": "884440",
    "end": "891320"
  },
  {
    "text": "webinar I just feel so dirty saying it okay so um we've already started I've",
    "start": "891320",
    "end": "897839"
  },
  {
    "text": "already started writing the home controller spec so if you're following along um this is now is a good time to",
    "start": "897839",
    "end": "903480"
  },
  {
    "text": "inject our environment again the way we inject our environment is by using the before each function or before is by",
    "start": "903480",
    "end": "910279"
  },
  {
    "text": "using the module function inside of our before each block and this module takes a single argument which is going to be",
    "start": "910279",
    "end": "917000"
  },
  {
    "text": "the name of the module that you're testing notice it says the name of the module that you're testing if you're",
    "start": "917000",
    "end": "922600"
  },
  {
    "text": "testing other modules you can do this with other mod modules you don't have to just test the your main application",
    "start": "922600",
    "end": "928600"
  },
  {
    "text": "module by the way I believe our module is called my app hooray it",
    "start": "928600",
    "end": "934880"
  },
  {
    "text": "is all right so inside of uh just little uh",
    "start": "934880",
    "end": "940560"
  },
  {
    "text": "exploration inside this application we have a service and we have a controller",
    "start": "940560",
    "end": "946240"
  },
  {
    "text": "the controller does um handles the business logic of our application where we say hey we want to make sure that we",
    "start": "946240",
    "end": "952880"
  },
  {
    "text": "get we have the weather that's available to us and the service is the thing that provides us with that",
    "start": "952880",
    "end": "957920"
  },
  {
    "text": "data not not terribly",
    "start": "957920",
    "end": "963120"
  },
  {
    "text": "complex so let's go ahead and test our our controller let's talk about testing controllers and then we'll test our",
    "start": "963120",
    "end": "968360"
  },
  {
    "text": "controller I jumped ahead I get really excited sometimes okay so um if you've",
    "start": "968360",
    "end": "973759"
  },
  {
    "text": "played with angular no doubt youve definitely seen this example if you tried to convince your boss that you should use angular no doubt you've",
    "start": "973759",
    "end": "980040"
  },
  {
    "text": "you've shown him this example um if you've been to the angular homepage angularjs.org you've seen this example",
    "start": "980040",
    "end": "986560"
  },
  {
    "text": "this is a really super basic example of how uh angular Works um where we are we have a bind to",
    "start": "986560",
    "end": "995440"
  },
  {
    "text": "an input field and we have an output bind to or we have we have another binding to Output um to The Binding of",
    "start": "995440",
    "end": "1002560"
  },
  {
    "text": "that input I said binding a lot there um the controller that specific controller",
    "start": "1002560",
    "end": "1008319"
  },
  {
    "text": "looks something like this where we are taking whatever we put inside of that inside of that field and um we're",
    "start": "1008319",
    "end": "1014680"
  },
  {
    "text": "splitting it by things on the strings hello everyone and stuff um and we're only showing the first name",
    "start": "1014680",
    "end": "1022519"
  },
  {
    "text": "so if this were right oh I totally misspelled my last name there we go can we edit that",
    "start": "1022519",
    "end": "1029400"
  },
  {
    "text": "out of the okay um so basically the test",
    "start": "1029400",
    "end": "1034798"
  },
  {
    "text": "that we would write for something like this and by the way yes this is a good example of something you want to write um there are edge cases where you may",
    "start": "1034799",
    "end": "1040959"
  },
  {
    "text": "have a dash or an underscore and that uh this this is a good case for writing a",
    "start": "1040959",
    "end": "1046558"
  },
  {
    "text": "test despite the fact that it looks kind of meaningless um what we want to do is",
    "start": "1046559",
    "end": "1051760"
  },
  {
    "text": "we want to test that only the first name the first name and only the first name is the only thing that gets outputed on",
    "start": "1051760",
    "end": "1056880"
  },
  {
    "text": "there so again we need to do is inject our uh execution environment way we do",
    "start": "1056880",
    "end": "1062480"
  },
  {
    "text": "that I've already covered that like four times okay so testing controllers inside of angular um basically if you think",
    "start": "1062480",
    "end": "1069520"
  },
  {
    "text": "about what a controller is a controller houses the business Logic for the application so it it does that by using",
    "start": "1069520",
    "end": "1076080"
  },
  {
    "text": "the scope or if you're using controller as syntax it does that that by using the object but we're not going to get into controller ad syntax right now because",
    "start": "1076080",
    "end": "1082200"
  },
  {
    "text": "it's less complex the more complex part is using the scope um you guys know what",
    "start": "1082200",
    "end": "1088080"
  },
  {
    "text": "the scope is describe that the scope itself is the glue between the view and",
    "start": "1088080",
    "end": "1093440"
  },
  {
    "text": "our JavaScript code so we would put inside of here uh inside of our first name we have a function called scope.",
    "start": "1093440",
    "end": "1099960"
  },
  {
    "text": "first name uh we can call first name from our view as we've seen here because it's on the scope so if you think about",
    "start": "1099960",
    "end": "1107679"
  },
  {
    "text": "what a controller is a controller is simply just a house for that scope it's just a container for that scope so if we",
    "start": "1107679",
    "end": "1113200"
  },
  {
    "text": "have access to the scope we can test our controller we can test our what goes from our controller to the view and how",
    "start": "1113200",
    "end": "1120080"
  },
  {
    "text": "we interact with the view which is why You' use a controller in the first place so getting access to the scope is the",
    "start": "1120080",
    "end": "1126000"
  },
  {
    "text": "Crux of how we test our application our application controller to test our application or to",
    "start": "1126000",
    "end": "1133880"
  },
  {
    "text": "get access to the scope we need to um do what angular does under the hood when it creates a new",
    "start": "1133880",
    "end": "1139720"
  },
  {
    "text": "scope by the way testing is also a really good way of learning a framework and learning how think especially",
    "start": "1139720",
    "end": "1146080"
  },
  {
    "text": "angular I can't speak for other Frameworks in this regard I can but in this regard uh testing is super good for",
    "start": "1146080",
    "end": "1153039"
  },
  {
    "text": "learning how angular does stuff under the hood because it uses you have to use the injector in fact we're going to talk",
    "start": "1153039",
    "end": "1158720"
  },
  {
    "text": "about that now the way that um you okay so in order to get access to the scope",
    "start": "1158720",
    "end": "1164039"
  },
  {
    "text": "we're going to have to need uh we're going to have to store an instance of that scope",
    "start": "1164039",
    "end": "1170360"
  },
  {
    "text": "and then we're going to have to use the angular injector to get access to things that will be injected into our angular",
    "start": "1170360",
    "end": "1176760"
  },
  {
    "text": "application the inject function is a helper function for doing",
    "start": "1176760",
    "end": "1181880"
  },
  {
    "text": "this um just like we do when we're writing any other angular object we can use the inject function to inject any",
    "start": "1183080",
    "end": "1190159"
  },
  {
    "text": "injectable object into our test in this case we're using the inject function",
    "start": "1190159",
    "end": "1196200"
  },
  {
    "text": "inject function to inject the root scope and the the controller the controller is a service that creates",
    "start": "1196200",
    "end": "1202919"
  },
  {
    "text": "controllers so then we're going to have to in order to write our test for our controller we're going to have to create a new scope we can create a new scope by",
    "start": "1203080",
    "end": "1209679"
  },
  {
    "text": "using the root scope uh dollar sign new function this will create a new scope by the way this is exactly how angular",
    "start": "1209679",
    "end": "1216480"
  },
  {
    "text": "Works under the hood when our application is running um the root scope in this case is now",
    "start": "1216480",
    "end": "1223320"
  },
  {
    "text": "the parent scope for that scope object so you can use another scope to call the dollar sign new on that scope and create",
    "start": "1223320",
    "end": "1229200"
  },
  {
    "text": "a Child Link of that if you want to do that and then finally um we need to",
    "start": "1229200",
    "end": "1234880"
  },
  {
    "text": "create our new controller and inject our new scope as the scope object of the controller this is why dependency",
    "start": "1234880",
    "end": "1241640"
  },
  {
    "text": "injection is really cool by the way because if you don't do this you get the real scope thing and you don't you get",
    "start": "1241640",
    "end": "1247480"
  },
  {
    "text": "the real scope that angular will create inside the view and you don't have access to it however you can slidep that",
    "start": "1247480",
    "end": "1253320"
  },
  {
    "text": "whole thing and inject your own injectables injectables is such a fun word to say",
    "start": "1253320",
    "end": "1260039"
  },
  {
    "text": "okay so now we can do any expectation that we want we can uh set up any expectation we want on side of our on",
    "start": "1260039",
    "end": "1266000"
  },
  {
    "text": "our scope these are pretty obvious so Jasmine has a bunch of",
    "start": "1266000",
    "end": "1273200"
  },
  {
    "text": "matchers uh a ton of matches the ones we'll use the most often are the 2B function which does a triple equal sign",
    "start": "1273200",
    "end": "1279760"
  },
  {
    "text": "on your object the two equal there it is the 2B u double triple equals the two",
    "start": "1279760",
    "end": "1287760"
  },
  {
    "text": "equal which Che for the object um equality the exact same object if you're unfamiliar um and there's many many",
    "start": "1287760",
    "end": "1296039"
  },
  {
    "text": "more Okay so we've seen that we can inject actually I lied let's go and",
    "start": "1296039",
    "end": "1302880"
  },
  {
    "text": "write our test our first test for our home controller so first test for our home controller specifically we'll test",
    "start": "1302880",
    "end": "1309039"
  },
  {
    "text": "that our city starts out as San Francisco",
    "start": "1309039",
    "end": "1314080"
  },
  {
    "text": "California so inside of our home controller we can is this that's the wrong test there it is all right so",
    "start": "1315320",
    "end": "1321880"
  },
  {
    "text": "inside of our our home controller as I said before we'll keep access to we'll keep a reference to the scope this",
    "start": "1321880",
    "end": "1327320"
  },
  {
    "text": "should be like a test level now let's go ahead and write a an injection",
    "start": "1327320",
    "end": "1335760"
  },
  {
    "text": "function okay so the first thing we need to do is for anyone who's paying attention just shout out",
    "start": "1342720",
    "end": "1350519"
  },
  {
    "text": "create new scope yeah I heard somebody say that unless that was me making that up um and then what's we're going to use",
    "start": "1350720",
    "end": "1357120"
  },
  {
    "text": "the scope inside of a what yeah let's go ahead and create our",
    "start": "1357120",
    "end": "1364000"
  },
  {
    "text": "controller sweet if you guys are following along",
    "start": "1368480",
    "end": "1375200"
  },
  {
    "text": "now's a good time to type this in by the way uh in your browsers if you do have",
    "start": "1375200",
    "end": "1380799"
  },
  {
    "text": "edu.com loaded you can switch between slides while I'm not switching between",
    "start": "1380799",
    "end": "1388919"
  },
  {
    "text": "slides okay so let's go ahead and write our tests that says uh uh the city",
    "start": "1389480",
    "end": "1395960"
  },
  {
    "text": "should start as San",
    "start": "1395960",
    "end": "1400158"
  },
  {
    "text": "Francisco so let's set an expectation on our scope we can this is um playing",
    "start": "1407440",
    "end": "1414000"
  },
  {
    "text": "JavaScript we can set an expectation on our scope by calling scope and then whatever we want to however we want to",
    "start": "1414000",
    "end": "1420640"
  },
  {
    "text": "access that scope in this case the scope would be uh what would we call it",
    "start": "1420640",
    "end": "1426039"
  },
  {
    "text": "City I can never spell San Francisco is that just me okay probably shouldn't have said",
    "start": "1427600",
    "end": "1434200"
  },
  {
    "text": "that out loud",
    "start": "1434200",
    "end": "1439640"
  },
  {
    "text": "okay so if you're following along how much time is",
    "start": "1439640",
    "end": "1444278"
  },
  {
    "text": "it when when do I go to hopefully it's not five minutes",
    "start": "1446360",
    "end": "1452559"
  },
  {
    "text": "ago okay maybe that's why so many people are here oh that's it that's all I have holy",
    "start": "1452559",
    "end": "1458640"
  },
  {
    "text": "cow okay um uh right um all this code",
    "start": "1458640",
    "end": "1463760"
  },
  {
    "text": "will be available online so follow along after you watch the recording um",
    "start": "1463760",
    "end": "1469240"
  },
  {
    "text": "uh so how how do we we can what 15 minutes oh few we're still going to skip",
    "start": "1469240",
    "end": "1476000"
  },
  {
    "text": "the live part well no we won't since we already wrote the code if you've written the code the way that you run this is you uh type karma in your in your in",
    "start": "1476000",
    "end": "1484080"
  },
  {
    "text": "your browser you type or in your terminal you type Karma start Karma start will wrong",
    "start": "1484080",
    "end": "1490919"
  },
  {
    "text": "directory uh Karma start will um as promised before it will start a live browser as you can see I have another",
    "start": "1493120",
    "end": "1499480"
  },
  {
    "text": "browser running here um one quick thing about this browser is if you click this debug function or that the the bug f um",
    "start": "1499480",
    "end": "1507720"
  },
  {
    "text": "button and then you open the console you'll see that we have all these tests the output of the tests are available in",
    "start": "1507720",
    "end": "1512799"
  },
  {
    "text": "that console hoay that's kind of neat I think it's kind of neat anyway",
    "start": "1512799",
    "end": "1518840"
  },
  {
    "text": "um great so we can use that uh object array to inject other objects other",
    "start": "1518840",
    "end": "1524559"
  },
  {
    "text": "injectables for instance in our controller we're injecting the weather service we can create a mock of that",
    "start": "1524559",
    "end": "1530000"
  },
  {
    "text": "Weather Service and we can inject that into our controller so that our tested controller is using the mocked Weather",
    "start": "1530000",
    "end": "1536640"
  },
  {
    "text": "Service not the real Weather Service which is really good for unit testing because you don't want actual HTTP",
    "start": "1536640",
    "end": "1542080"
  },
  {
    "text": "requests going out because that slows down your unit test which equates to slowing down your",
    "start": "1542080",
    "end": "1547799"
  },
  {
    "text": "productivity um so uh there are cases where we want to",
    "start": "1547799",
    "end": "1555159"
  },
  {
    "text": "actually have a an HTTP request going out when we are are making a a test we are making a uh test call we want to",
    "start": "1555159",
    "end": "1562240"
  },
  {
    "text": "make sure that like the right the appropriate request is going out so how do we mock how can we mock HTTP um HTTP",
    "start": "1562240",
    "end": "1571240"
  },
  {
    "text": "requests so the way that angular works is um espec when we're making um we're",
    "start": "1571240",
    "end": "1577799"
  },
  {
    "text": "making an HTTP call like we would our application view looks like this we're saying okay we have my app in a really",
    "start": "1577799",
    "end": "1584039"
  },
  {
    "text": "light font and we have the HTTP service and we're making a call to that HTTP service to go make a request",
    "start": "1584039",
    "end": "1590240"
  },
  {
    "text": "right if you're shaking your head ask me after um or if you're sh if you're nodding yeah okay so the way that",
    "start": "1590240",
    "end": "1598559"
  },
  {
    "text": "angular looks at this is it actually calls out to another surface called The htb backend the htb backend is a thing",
    "start": "1598559",
    "end": "1604080"
  },
  {
    "text": "that actually does the HTTP requests for us not the dollar sign HTTP even though it looks like it what this means is we",
    "start": "1604080",
    "end": "1611200"
  },
  {
    "text": "can use we don't have to change our angular code to um support a dollar sign",
    "start": "1611200",
    "end": "1617000"
  },
  {
    "text": "HTTP mock we we can simply switch out the HTTP backend mock that makes the request so instead of using the normal",
    "start": "1617000",
    "end": "1624120"
  },
  {
    "text": "htb backend we can switch that out for something else and that's how that's the way that we're going to create an a mock",
    "start": "1624120",
    "end": "1630399"
  },
  {
    "text": "for our angular application so the way that we do that um is by grabbing access to that H the",
    "start": "1630399",
    "end": "1638039"
  },
  {
    "text": "mocked HTP backend this is what Cara will do this for us by the way get access to we can get access to the htb",
    "start": "1638039",
    "end": "1645039"
  },
  {
    "text": "backend mock um by the way this is how I do injectors inside of tests it's just a",
    "start": "1645039",
    "end": "1650840"
  },
  {
    "text": "lot easier you don't have to change functions it's really cool um and then um we need to make sure",
    "start": "1650840",
    "end": "1658000"
  },
  {
    "text": "inside of our unit test specifically that all of our requests have gone out and that we have no more pending",
    "start": "1658000",
    "end": "1663279"
  },
  {
    "text": "requests this is super important if you forget this your test won't work um uh",
    "start": "1663279",
    "end": "1668880"
  },
  {
    "text": "so this after each function is really important um right so we can set expectations on",
    "start": "1668880",
    "end": "1676640"
  },
  {
    "text": "our HTP backend by using the keyword expect and the te this comes with the",
    "start": "1676640",
    "end": "1683399"
  },
  {
    "text": "testing HTP backend which comes with the angular D MOX Library so if you if you get like an error that's like I don't",
    "start": "1683399",
    "end": "1689480"
  },
  {
    "text": "know how to do this make sure you have your angular DMX Library included in your files array so we can set expectations on our",
    "start": "1689480",
    "end": "1697159"
  },
  {
    "text": "HTTP backend um that looks like the fir only the first two parameters are required in here by the way the HTP",
    "start": "1697159",
    "end": "1704240"
  },
  {
    "text": "method and the URL to test the other two are option this is the data object espe",
    "start": "1704240",
    "end": "1710600"
  },
  {
    "text": "which you would use if you're like testing a post request for instance um",
    "start": "1710600",
    "end": "1715840"
  },
  {
    "text": "and then headers these are optional headers so if you want to send in like an HTTP request or an HTML request",
    "start": "1715840",
    "end": "1721360"
  },
  {
    "text": "versus a Json request so that will create an expectation on the HTP backend but how",
    "start": "1721360",
    "end": "1728120"
  },
  {
    "text": "do we actually execute that function this is this can be a little bit tricky too so um that looks like the",
    "start": "1728120",
    "end": "1735240"
  },
  {
    "text": "expectation that we set up previously and we might say okay we're going now",
    "start": "1735240",
    "end": "1740360"
  },
  {
    "text": "we're going to call the function that calls that HTTP request so we're going to call Api get user which is presumably the thing that",
    "start": "1740360",
    "end": "1746919"
  },
  {
    "text": "we've been testing inside of this application that's actually not going to send out the request if you know how",
    "start": "1746919",
    "end": "1752799"
  },
  {
    "text": "angular works the digest Loop when the digest Loop runs that's when the htb requests will come back and that's when",
    "start": "1752799",
    "end": "1758600"
  },
  {
    "text": "the um the promise will get resolved so in order to actually execute this and test it we have to call HB backend flush",
    "start": "1758600",
    "end": "1766200"
  },
  {
    "text": "which will execute the digest Loop to run that for us so quick rule of thumb before we move",
    "start": "1766200",
    "end": "1773000"
  },
  {
    "text": "out of unit testing into end end testing is write a test for any functionality um",
    "start": "1773000",
    "end": "1778559"
  },
  {
    "text": "and write it after your API is settled huzzah all right if there are any",
    "start": "1778559",
    "end": "1785840"
  },
  {
    "text": "questions uh hold on to them I'll be here after I won't disappear in a cloud",
    "start": "1785840",
    "end": "1790880"
  },
  {
    "text": "of smoke that's weird so end to end testing um we're going to talk about protractor protractor is a tool that",
    "start": "1790880",
    "end": "1798080"
  },
  {
    "text": "written by um the angular team and now there is actually a protractor team inside of Google to um do or to write to",
    "start": "1798080",
    "end": "1807240"
  },
  {
    "text": "manage protractor uh team is really smart by the way um protractor is",
    "start": "1807240",
    "end": "1813320"
  },
  {
    "text": "basically a front end for uh selenium so if you if you uh have used selenium or",
    "start": "1813320",
    "end": "1820240"
  },
  {
    "text": "know what selenium is in the um you'll know it's power can run on like pretty",
    "start": "1820240",
    "end": "1825440"
  },
  {
    "text": "much every web browser known to man maybe not breach because breach is really new but maybe breach I don't know",
    "start": "1825440",
    "end": "1831320"
  },
  {
    "text": "enough about it um anyway end testing is not a replacement for unit testing you",
    "start": "1831320",
    "end": "1837519"
  },
  {
    "text": "um don't expect to write your unit tests and uh or don't expect don't expect to write end to end",
    "start": "1837519",
    "end": "1844399"
  },
  {
    "text": "tests and cover your unit testing end to end testing is like faking a user it's faking a QA manager sitting at a desk",
    "start": "1844399",
    "end": "1850840"
  },
  {
    "text": "clicking on things um and is one of the reasons is because it's not fast it's",
    "start": "1850840",
    "end": "1855960"
  },
  {
    "text": "really slow to load a browser and connect to that selenium web driver n testing is really good for um blackbox",
    "start": "1855960",
    "end": "1864159"
  },
  {
    "text": "testing being like I I don't care how login works I just want to make sure that I can log in so you write that you're login end to end test hoay it",
    "start": "1864159",
    "end": "1871000"
  },
  {
    "text": "logs in the way that we install this is by using um protractor the if you're going",
    "start": "1871000",
    "end": "1877960"
  },
  {
    "text": "to follow along uh or use this uh angular application in the future um",
    "start": "1877960",
    "end": "1883760"
  },
  {
    "text": "protractor is not included inside of your inside of this uh example sample code so you have to you actually have to",
    "start": "1883760",
    "end": "1890000"
  },
  {
    "text": "type npm install protractor oh that's making me nervous um and then we have to install",
    "start": "1890000",
    "end": "1897039"
  },
  {
    "text": "selenium uh I've already included a configuration example and that's how I did it just like that hooray and you can",
    "start": "1897039",
    "end": "1903080"
  },
  {
    "text": "look through um that protractor configuration file um in order to actually run",
    "start": "1903080",
    "end": "1909000"
  },
  {
    "text": "protractor test we have to have selenium running um we do that using the web driver manager and then you just pass it",
    "start": "1909000",
    "end": "1914639"
  },
  {
    "text": "the start function uh I'll just get to the corrects of the",
    "start": "1914639",
    "end": "1919679"
  },
  {
    "text": "matter um uh protractor gives us access to protractor gives us access to this",
    "start": "1919679",
    "end": "1926480"
  },
  {
    "text": "browser object and this browser object is our is our way to connect to the U browser's running instance we can use",
    "start": "1926480",
    "end": "1932919"
  },
  {
    "text": "that browser object to change the url of bless you to change the url of our application we can use that browser to",
    "start": "1932919",
    "end": "1940039"
  },
  {
    "text": "select ele or the object to select elements on the page although it's easier if you don't type browser dot do",
    "start": "1940039",
    "end": "1945799"
  },
  {
    "text": "I have that in here I don't darn um and you can select elements using the",
    "start": "1945799",
    "end": "1951720"
  },
  {
    "text": "global uh element function given to us by protractor and then we can use the bu",
    "start": "1951720",
    "end": "1957279"
  },
  {
    "text": "object to Target elements inside of there I will cover this entirely in the",
    "start": "1957279",
    "end": "1962440"
  },
  {
    "text": "in the webinar so uh feel free to join that too okay uh lastly the last thing that I",
    "start": "1962440",
    "end": "1969639"
  },
  {
    "text": "wanted to cover today was how um using continuous integration not really going to be able to cover this in in its",
    "start": "1969639",
    "end": "1975480"
  },
  {
    "text": "entirety uh continuous integration is super cool it's really good for um pre- deploys which means you push to your um",
    "start": "1975480",
    "end": "1982480"
  },
  {
    "text": "application you push to your G repo and uh Jenkins or whatever Travis will",
    "start": "1982480",
    "end": "1989559"
  },
  {
    "text": "execute your um config your uh all your tests and be like okay cool it's passing I'll deploy now don't actually do a cap",
    "start": "1989559",
    "end": "1996399"
  },
  {
    "text": "deploy if you're using Capistrano or FTP drop because that's just so",
    "start": "1996399",
    "end": "2002000"
  },
  {
    "text": "1998 um you can run Docker on your local instance but I'm sorry you can run Jenkins on your local box your",
    "start": "2002000",
    "end": "2008000"
  },
  {
    "text": "development Box by using something like Docker Docker is really awesome this is a really awesome example of or really",
    "start": "2008000",
    "end": "2014159"
  },
  {
    "text": "awesome box that will set up Jenkins for you um and I highly recommend you do it even when you're testing",
    "start": "2014159",
    "end": "2021840"
  },
  {
    "text": "locally okay uh I'll leave this one up here because this is kind of a useless slide",
    "start": "2022559",
    "end": "2027919"
  },
  {
    "text": "so if you're interested um in if you're interested in uh that webinar click on",
    "start": "2027919",
    "end": "2034519"
  },
  {
    "text": "that link inside your browser if you're ed. enr.com um or just go to ng-newsletter tocom",
    "start": "2034519",
    "end": "2040240"
  },
  {
    "text": "huzzah any questions I have like time for two maybe",
    "start": "2040240",
    "end": "2045240"
  },
  {
    "text": "two oh five minutes oh sweet I got through this way fast you guys actually want to Rite an protractor test yeah all",
    "start": "2046120",
    "end": "2054398"
  },
  {
    "text": "right sweet so our let's see if it's still 93 yeah still 993",
    "start": "2054399",
    "end": "2060480"
  },
  {
    "text": "okay oh why didn't anyone tell me that up here I'm like sweating bullets",
    "start": "2060480",
    "end": "2065919"
  },
  {
    "text": "like running as fast as I can man my running is really relaxing huh",
    "start": "2065919",
    "end": "2071118"
  },
  {
    "text": "okay okay so let's actually write a test to make sure that our weather actually comes back using an end-to-end test",
    "start": "2071119",
    "end": "2076720"
  },
  {
    "text": "using something like protractor if you are following along we have this um this protractor Doom file",
    "start": "2076720",
    "end": "2083760"
  },
  {
    "text": "that uh is given to you with that example code um first thing that we'll have to",
    "start": "2083760",
    "end": "2090118"
  },
  {
    "text": "do is we'll have to start selenium so the way we start S It Is by using the",
    "start": "2090119",
    "end": "2096679"
  },
  {
    "text": "web driver manager start function this is given to us by protractor so if you installed protractor with npm installed",
    "start": "2096679",
    "end": "2102440"
  },
  {
    "text": "protractor you can simply start selenium just like",
    "start": "2102440",
    "end": "2107200"
  },
  {
    "text": "that um next thing is that we we will have to whoops why did I type thin that was weird",
    "start": "2107800",
    "end": "2114359"
  },
  {
    "text": "um uh in order to uh use the web driver",
    "start": "2114359",
    "end": "2119440"
  },
  {
    "text": "or sorry in order to use selenium selenium has to load up a file we can have selenium load up um an index.html",
    "start": "2119440",
    "end": "2125680"
  },
  {
    "text": "file but I think that's kind of hacky and it's not really good for uh doing anything making any requests locally so",
    "start": "2125680",
    "end": "2133320"
  },
  {
    "text": "like if you have a template file that you're ex that you're writing um if you're using if you're just loading it",
    "start": "2133320",
    "end": "2139119"
  },
  {
    "text": "in in your browser as like file colon slash uh you won't be able to make",
    "start": "2139119",
    "end": "2145680"
  },
  {
    "text": "that request because of cores because of the Cross origin resource um safety that our browser",
    "start": "2145680",
    "end": "2151400"
  },
  {
    "text": "provides us so I like to run a t I'd like to run a uh um a uh what's the word",
    "start": "2151400",
    "end": "2160560"
  },
  {
    "text": "for this a web server oh my goodness I'm like slowing down and so my brain um so I like to run a web server",
    "start": "2160560",
    "end": "2167359"
  },
  {
    "text": "it's if you have a Mac or python installed you get this web server by default um so that allows us to take",
    "start": "2167359",
    "end": "2175000"
  },
  {
    "text": "this file colon thing away and just uh head to our browser at what at that um",
    "start": "2175000",
    "end": "2183880"
  },
  {
    "text": "route so now we can actually write our our uh",
    "start": "2183880",
    "end": "2189000"
  },
  {
    "text": "now we can actually write our end to end test so our end to end test is going to do something really simil or really um",
    "start": "2189000",
    "end": "2194920"
  },
  {
    "text": "simple and really easy we're simply just going to load this homepage and make sure that this thing is uh is actually",
    "start": "2194920",
    "end": "2202359"
  },
  {
    "text": "getting filled out it's a reasonable test let's move this guy over here and",
    "start": "2202359",
    "end": "2207520"
  },
  {
    "text": "move this guy over here and hi that all right sweet so in order to actually test this route this specific route we have",
    "start": "2207520",
    "end": "2214119"
  },
  {
    "text": "to say we have to go get that route we can get that route by using the before",
    "start": "2214119",
    "end": "2219680"
  },
  {
    "text": "each function again and telling our browser to I don't",
    "start": "2219680",
    "end": "2224880"
  },
  {
    "text": "know let's say go get that route oh cow that was easy okay all right and there was much",
    "start": "2224880",
    "end": "2234318"
  },
  {
    "text": "rejoicing all right what's",
    "start": "2235040",
    "end": "2239520"
  },
  {
    "text": "that are you heckling me okay so in order to write a test",
    "start": "2241800",
    "end": "2246920"
  },
  {
    "text": "we'll use the the it function the it function in Jasmine creates a test the",
    "start": "2246920",
    "end": "2251960"
  },
  {
    "text": "it function takes two arguments the first argument is the uh a description of the test and the",
    "start": "2251960",
    "end": "2258800"
  },
  {
    "text": "next argument is the block of code that we'll write to execute that test so looking in our uh looking in our",
    "start": "2258800",
    "end": "2267520"
  },
  {
    "text": "index.html we see that we have a single binding inside of our HTML and that binding corresponds to weather. temp.",
    "start": "2267520",
    "end": "2274760"
  },
  {
    "text": "day we can we can by the way we can attack we can Target also attack weird",
    "start": "2274760",
    "end": "2282119"
  },
  {
    "text": "um we can Target this this uh this um content inside of our uh",
    "start": "2282119",
    "end": "2290000"
  },
  {
    "text": "application in a bunch of different ways you can Target it using CSS if we were going to go grab the class of weather we",
    "start": "2290000",
    "end": "2295680"
  },
  {
    "text": "can Target it using a binding I think that's it actually we can Target it using CSS um looking at the h2 tag Etc",
    "start": "2295680",
    "end": "2303520"
  },
  {
    "text": "in this case we're going to look at we're going to Target when I say Target I mean select we're going to select this element by",
    "start": "2303520",
    "end": "2310359"
  },
  {
    "text": "using The Binding of weather. day we",
    "start": "2310359",
    "end": "2315880"
  },
  {
    "text": "can uh we can Target it using the bu object as I like sped through before",
    "start": "2315880",
    "end": "2321680"
  },
  {
    "text": "when I didn't realize I had more time um by using the bu object and selecting",
    "start": "2321680",
    "end": "2327599"
  },
  {
    "text": "using the by binding object just like that or function just like that so",
    "start": "2327599",
    "end": "2333200"
  },
  {
    "text": "notice this by binding itself is selecting on the The Binding that we",
    "start": "2333200",
    "end": "2338599"
  },
  {
    "text": "have in the view that is actually really cool like this is this allows us to select something inside of angular like",
    "start": "2338599",
    "end": "2345480"
  },
  {
    "text": "select this angular um uh view binding and throw that in our test we don't have",
    "start": "2345480",
    "end": "2350920"
  },
  {
    "text": "to be like okay I want to go get that CSS we don't have to do",
    "start": "2350920",
    "end": "2356079"
  },
  {
    "text": "like h2 tag that has a class of weather which is one of the reasons why um I",
    "start": "2356079",
    "end": "2364079"
  },
  {
    "text": "promote angular in the first place is the fact that you don't have to know what your objects are are you don't have to know what your",
    "start": "2364079",
    "end": "2369880"
  },
  {
    "text": "classes or your IDs are on your object you don't have to know the Dom structure of your application which is one of the",
    "start": "2369880",
    "end": "2375400"
  },
  {
    "text": "which is one of the powers of declarative Styles the fact that you don't have to be like oh no I don't know where it is because my designer put in a",
    "start": "2375400",
    "end": "2381960"
  },
  {
    "text": "new uh div tag for styling purposes or put in a new span tag for desig Designing purposes instead you can just",
    "start": "2381960",
    "end": "2388839"
  },
  {
    "text": "select it based off the angular idium which is what you want to do in the view",
    "start": "2388839",
    "end": "2393920"
  },
  {
    "text": "anyway so then we can just simply say we can make an expectation for this and we",
    "start": "2393920",
    "end": "2399560"
  },
  {
    "text": "want to uh just our expectation is going to be that this thing is filled out so we can set an expectation that says our",
    "start": "2399560",
    "end": "2406440"
  },
  {
    "text": "element itself uh expect our element's text simply has",
    "start": "2406440",
    "end": "2413520"
  },
  {
    "text": "a has the text or actually let's do",
    "start": "2413520",
    "end": "2419040"
  },
  {
    "text": "this so protractor is really cool because you can do stuff like that like you don't",
    "start": "2426319",
    "end": "2432240"
  },
  {
    "text": "have to know the Dom structure anyway to run this test it's pretty easy I think I",
    "start": "2432240",
    "end": "2437400"
  },
  {
    "text": "mentioned it before maybe I didn't uh to run this test we can simply",
    "start": "2437400",
    "end": "2444680"
  },
  {
    "text": "just call node modules protractor bin protractor and passing protractor the configuration",
    "start": "2444680",
    "end": "2450800"
  },
  {
    "text": "file this will load up my bad it's not on the",
    "start": "2450800",
    "end": "2456240"
  },
  {
    "text": "Buy um this will load up a new browser as",
    "start": "2456240",
    "end": "2463040"
  },
  {
    "text": "you can see oh my goodness the demo",
    "start": "2463040",
    "end": "2470880"
  },
  {
    "text": "Gods all right so this will load up a new browser let's see if we can't there it",
    "start": "2470880",
    "end": "2476560"
  },
  {
    "text": "is sorry that's this one okay this will load up a new browser",
    "start": "2478200",
    "end": "2484599"
  },
  {
    "text": "as you can see and that browser itself executes let's try this again that loads up a new browser ha",
    "start": "2484599",
    "end": "2491720"
  },
  {
    "text": "there it is that loads the actual application and will Target we will run the application it's your full",
    "start": "2491720",
    "end": "2497359"
  },
  {
    "text": "application running in a browser in an automated way it's really slow even that that was really fast if you're writing a",
    "start": "2497359",
    "end": "2503839"
  },
  {
    "text": "second test it's going to be exponentially slower as especially as it grows so it's really good to use something like this is why the Jenkins",
    "start": "2503839",
    "end": "2512040"
  },
  {
    "text": "slides were in there is this it's really good to use something like Jenkins or Travis or whatever CI server you're",
    "start": "2512040",
    "end": "2518880"
  },
  {
    "text": "using okay cool uh I'll be here for more questions",
    "start": "2518880",
    "end": "2526050"
  },
  {
    "text": "[Applause]",
    "start": "2526050",
    "end": "2534679"
  },
  {
    "text": "hooray",
    "start": "2538359",
    "end": "2541359"
  }
]