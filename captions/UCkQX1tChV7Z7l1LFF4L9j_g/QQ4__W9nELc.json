[
  {
    "text": "in this section we're going to look at",
    "start": "6440",
    "end": "7600"
  },
  {
    "text": "an ecmascript 6 feature that makes it",
    "start": "7600",
    "end": "9679"
  },
  {
    "text": "even easier to work around the problem",
    "start": "9679",
    "end": "12000"
  },
  {
    "text": "the way we were looking at in the last",
    "start": "12000",
    "end": "13360"
  },
  {
    "text": "section so if we need to create a",
    "start": "13360",
    "end": "15160"
  },
  {
    "text": "function in line and preserve the value",
    "start": "15160",
    "end": "17359"
  },
  {
    "text": "of this we can take an ecmascript 6",
    "start": "17359",
    "end": "20600"
  },
  {
    "text": "shortcut I'm going to create a new",
    "start": "20600",
    "end": "22640"
  },
  {
    "text": "function here I've stubbed out the",
    "start": "22640",
    "end": "24560"
  },
  {
    "text": "beginning of it called print later all",
    "start": "24560",
    "end": "26119"
  },
  {
    "text": "caps print later all caps is going to",
    "start": "26119",
    "end": "29359"
  },
  {
    "text": "access a field of contact and convert it",
    "start": "29359",
    "end": "31880"
  },
  {
    "text": "to uppercase before printing it so we'll",
    "start": "31880",
    "end": "34640"
  },
  {
    "text": "say set time out and we'll say",
    "start": "34640",
    "end": "39239"
  },
  {
    "text": "console",
    "start": "39239",
    "end": "41719"
  },
  {
    "text": "function",
    "start": "41719",
    "end": "44719"
  },
  {
    "text": "console.log this. first",
    "start": "45000",
    "end": "48600"
  },
  {
    "text": "name do two",
    "start": "48600",
    "end": "52600"
  },
  {
    "text": "uppercase and we'll wait 1500",
    "start": "53800",
    "end": "57039"
  },
  {
    "text": "milliseconds and the way we described in",
    "start": "57039",
    "end": "59600"
  },
  {
    "text": "the last section we know that we can",
    "start": "59600",
    "end": "61680"
  },
  {
    "text": "preserve the this value that we need by",
    "start": "61680",
    "end": "64518"
  },
  {
    "text": "coming to the end of the function",
    "start": "64519",
    "end": "65760"
  },
  {
    "text": "definition and saying well instead of",
    "start": "65760",
    "end": "67560"
  },
  {
    "text": "passing the function we've just defined",
    "start": "67560",
    "end": "69720"
  },
  {
    "text": "let's invoke bind on it with the current",
    "start": "69720",
    "end": "72280"
  },
  {
    "text": "value of this and pass the result of the",
    "start": "72280",
    "end": "75439"
  },
  {
    "text": "bind call so let's go over to Firefox",
    "start": "75439",
    "end": "78439"
  },
  {
    "text": "and make sure that",
    "start": "78439",
    "end": "81040"
  },
  {
    "text": "works print later all",
    "start": "81439",
    "end": "85439"
  },
  {
    "text": "caps and out comes Joe in all caps so",
    "start": "85799",
    "end": "89640"
  },
  {
    "text": "where do do the ecmascript 6 part come",
    "start": "89640",
    "end": "91520"
  },
  {
    "text": "in ecmascript 6 introduces a new syntax",
    "start": "91520",
    "end": "94600"
  },
  {
    "text": "for defining functions sometimes called",
    "start": "94600",
    "end": "96560"
  },
  {
    "text": "Arrow functions that use an equal sign",
    "start": "96560",
    "end": "99320"
  },
  {
    "text": "and a greater than sign sort of Arrow",
    "start": "99320",
    "end": "101520"
  },
  {
    "text": "shape to indicate the mapping from the",
    "start": "101520",
    "end": "104079"
  },
  {
    "text": "data that goes into a function to its",
    "start": "104079",
    "end": "106200"
  },
  {
    "text": "return value we're not going to concern",
    "start": "106200",
    "end": "108840"
  },
  {
    "text": "ourselves with the details of the arrow",
    "start": "108840",
    "end": "111640"
  },
  {
    "text": "function Syntax for here what we're",
    "start": "111640",
    "end": "113640"
  },
  {
    "text": "going to look at is the feature of the",
    "start": "113640",
    "end": "115560"
  },
  {
    "text": "arrow syntax which automatically",
    "start": "115560",
    "end": "118200"
  },
  {
    "text": "performs a DOT bind this on any function",
    "start": "118200",
    "end": "121479"
  },
  {
    "text": "that you define with the arrow",
    "start": "121479",
    "end": "124600"
  },
  {
    "text": "syntax this feature is sometimes",
    "start": "124600",
    "end": "126439"
  },
  {
    "text": "referred to as lexical this because the",
    "start": "126439",
    "end": "129319"
  },
  {
    "text": "this is determined based on the position",
    "start": "129319",
    "end": "131480"
  },
  {
    "text": "in the code where the function is",
    "start": "131480",
    "end": "134599"
  },
  {
    "text": "defined so how would that work well with",
    "start": "134599",
    "end": "137680"
  },
  {
    "text": "arrow syntax we can replace a function",
    "start": "137680",
    "end": "140000"
  },
  {
    "text": "that takes no parameters with an open",
    "start": "140000",
    "end": "142760"
  },
  {
    "text": "and closed paren",
    "start": "142760",
    "end": "144120"
  },
  {
    "text": "literal the little arrow symbol with the",
    "start": "144120",
    "end": "146480"
  },
  {
    "text": "equal and greater",
    "start": "146480",
    "end": "148080"
  },
  {
    "text": "than and in the case here where we need",
    "start": "148080",
    "end": "150720"
  },
  {
    "text": "to actually execute some logic we can",
    "start": "150720",
    "end": "153280"
  },
  {
    "text": "put the we can put",
    "start": "153280",
    "end": "155239"
  },
  {
    "text": "the block of logic directly after the",
    "start": "155239",
    "end": "158760"
  },
  {
    "text": "arrow and in this case we can remove the",
    "start": "158760",
    "end": "161360"
  },
  {
    "text": "dot bind this because the arrow function",
    "start": "161360",
    "end": "164200"
  },
  {
    "text": "will dot bind this",
    "start": "164200",
    "end": "166400"
  },
  {
    "text": "automatically so let's take a look and",
    "start": "166400",
    "end": "169080"
  },
  {
    "text": "see if this still works in",
    "start": "169080",
    "end": "172400"
  },
  {
    "text": "Firefox and out comes Joe in all caps",
    "start": "176480",
    "end": "180360"
  },
  {
    "text": "so this last version that we've seen",
    "start": "180360",
    "end": "182400"
  },
  {
    "text": "will only work in browsers that have the",
    "start": "182400",
    "end": "184319"
  },
  {
    "text": "ecmascript 6 Arrow syntax enabled or if",
    "start": "184319",
    "end": "187200"
  },
  {
    "text": "you're working in node or another",
    "start": "187200",
    "end": "188519"
  },
  {
    "text": "JavaScript environment uh and you have",
    "start": "188519",
    "end": "190440"
  },
  {
    "text": "it set to either enable these Harmony",
    "start": "190440",
    "end": "193000"
  },
  {
    "text": "ecmascript 6 features or if you use a",
    "start": "193000",
    "end": "194920"
  },
  {
    "text": "transpiler to change the code from",
    "start": "194920",
    "end": "196920"
  },
  {
    "text": "ecmascript 6 syntax to a lower version",
    "start": "196920",
    "end": "200239"
  },
  {
    "text": "of ecmascript",
    "start": "200239",
    "end": "202159"
  },
  {
    "text": "syntax but this is something that will",
    "start": "202159",
    "end": "204319"
  },
  {
    "text": "become increasingly common as people",
    "start": "204319",
    "end": "206480"
  },
  {
    "text": "start writing more and more ecmascript 6",
    "start": "206480",
    "end": "208360"
  },
  {
    "text": "code whenever we need to create a",
    "start": "208360",
    "end": "210120"
  },
  {
    "text": "function on the Fly and we want to",
    "start": "210120",
    "end": "212439"
  },
  {
    "text": "retain the value of this that behavior",
    "start": "212439",
    "end": "214439"
  },
  {
    "text": "is actually built",
    "start": "214439",
    "end": "217200"
  },
  {
    "text": "in the last thing we're going to look at",
    "start": "218799",
    "end": "221040"
  },
  {
    "text": "just to round out our discussion of this",
    "start": "221040",
    "end": "224040"
  },
  {
    "text": "is to visit other ways of determining",
    "start": "224040",
    "end": "226120"
  },
  {
    "text": "how this can be bound when we run a",
    "start": "226120",
    "end": "227840"
  },
  {
    "text": "function earlier we looked at a decision",
    "start": "227840",
    "end": "230200"
  },
  {
    "text": "tree that showed how the runtime",
    "start": "230200",
    "end": "233239"
  },
  {
    "text": "determines what the this binding should",
    "start": "233239",
    "end": "235000"
  },
  {
    "text": "be if we don't give it any other",
    "start": "235000",
    "end": "237000"
  },
  {
    "text": "instructions here we're going to say if",
    "start": "237000",
    "end": "239360"
  },
  {
    "text": "we have a function and we know exactly",
    "start": "239360",
    "end": "241239"
  },
  {
    "text": "what we'd like this to be we can",
    "start": "241239",
    "end": "243319"
  },
  {
    "text": "actually tell the runtime to invoke the",
    "start": "243319",
    "end": "245079"
  },
  {
    "text": "function with a particular value of this",
    "start": "245079",
    "end": "247360"
  },
  {
    "text": "so let's take a look at how that",
    "start": "247360",
    "end": "250599"
  },
  {
    "text": "works if we return to the problem",
    "start": "253720",
    "end": "256320"
  },
  {
    "text": "version that we had early in the",
    "start": "256320",
    "end": "257600"
  },
  {
    "text": "demonstration we had contact. print name",
    "start": "257600",
    "end": "261359"
  },
  {
    "text": "working great but if contact. print name",
    "start": "261359",
    "end": "264479"
  },
  {
    "text": "was invoked without a DOT we had a",
    "start": "264479",
    "end": "266800"
  },
  {
    "text": "problem we can see that right here if I",
    "start": "266800",
    "end": "268840"
  },
  {
    "text": "say f equals",
    "start": "268840",
    "end": "270280"
  },
  {
    "text": "contact. print",
    "start": "270280",
    "end": "272520"
  },
  {
    "text": "name and then I run F I've run the same",
    "start": "272520",
    "end": "276199"
  },
  {
    "text": "function exact same function but without",
    "start": "276199",
    "end": "278320"
  },
  {
    "text": "a DOT and that this context is lost so",
    "start": "278320",
    "end": "281960"
  },
  {
    "text": "next we're going to look at how we can",
    "start": "281960",
    "end": "284000"
  },
  {
    "text": "run F without a DOT and tell it exactly",
    "start": "284000",
    "end": "287600"
  },
  {
    "text": "what we'd like this to be so there are",
    "start": "287600",
    "end": "289960"
  },
  {
    "text": "two built-in functions that will do this",
    "start": "289960",
    "end": "292720"
  },
  {
    "text": "we saw how well there are three built-in",
    "start": "292720",
    "end": "294880"
  },
  {
    "text": "functions that will do this we saw how",
    "start": "294880",
    "end": "296880"
  },
  {
    "text": "bind produces a new function with a",
    "start": "296880",
    "end": "299000"
  },
  {
    "text": "particular this value but it doesn't run",
    "start": "299000",
    "end": "301039"
  },
  {
    "text": "the function right away so bind is handy",
    "start": "301039",
    "end": "303280"
  },
  {
    "text": "when we need the new function and we",
    "start": "303280",
    "end": "304880"
  },
  {
    "text": "want to pass it somewhere but if we want",
    "start": "304880",
    "end": "306680"
  },
  {
    "text": "to run the function right now we can use",
    "start": "306680",
    "end": "308759"
  },
  {
    "text": "two old-fashioned functions called call",
    "start": "308759",
    "end": "312400"
  },
  {
    "text": "and apply if I type f. call I can pass a",
    "start": "312400",
    "end": "317120"
  },
  {
    "text": "value for this explicitly like",
    "start": "317120",
    "end": "319759"
  },
  {
    "text": "contact and we get the behavior we'd",
    "start": "319759",
    "end": "321880"
  },
  {
    "text": "like I can also call f.",
    "start": "321880",
    "end": "325160"
  },
  {
    "text": "apply and pass that this",
    "start": "325160",
    "end": "328240"
  },
  {
    "text": "context or contact and get the behavior",
    "start": "328240",
    "end": "331680"
  },
  {
    "text": "I want the difference between call and",
    "start": "331680",
    "end": "333800"
  },
  {
    "text": "apply is how we can use it to pass other",
    "start": "333800",
    "end": "336039"
  },
  {
    "text": "parameters that the function might want",
    "start": "336039",
    "end": "337960"
  },
  {
    "text": "but in this case we're only interested",
    "start": "337960",
    "end": "339280"
  },
  {
    "text": "in context so for the purpose that we're",
    "start": "339280",
    "end": "341720"
  },
  {
    "text": "looking at here call and apply are going",
    "start": "341720",
    "end": "343720"
  },
  {
    "text": "to work the same",
    "start": "343720",
    "end": "345600"
  },
  {
    "text": "way so now we've looked at the",
    "start": "345600",
    "end": "347960"
  },
  {
    "text": "definition of this how the browser",
    "start": "347960",
    "end": "350319"
  },
  {
    "text": "decides what to bind this to common",
    "start": "350319",
    "end": "353240"
  },
  {
    "text": "problems that come up workarounds and",
    "start": "353240",
    "end": "356160"
  },
  {
    "text": "the future of solving these problems",
    "start": "356160",
    "end": "358400"
  },
  {
    "text": "thanks for watching and if you're",
    "start": "358400",
    "end": "360000"
  },
  {
    "text": "excited to keep diving into the details",
    "start": "360000",
    "end": "362479"
  },
  {
    "text": "of JavaScript I'd love to work with you",
    "start": "362479",
    "end": "364960"
  },
  {
    "text": "at a new Circle class",
    "start": "364960",
    "end": "368840"
  }
]