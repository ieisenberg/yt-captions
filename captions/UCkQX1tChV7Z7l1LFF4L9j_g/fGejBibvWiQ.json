[
  {
    "start": "0",
    "end": "45000"
  },
  {
    "text": "hi I'm Mark Rendell and I'm here at the start of the API track to talk a little",
    "start": "3950",
    "end": "10760"
  },
  {
    "text": "bit about the history and how we got to where we are today and where we might be going next and show you a little bit of",
    "start": "10760",
    "end": "17750"
  },
  {
    "text": "code along the way and and generally just get everyone set up for the day",
    "start": "17750",
    "end": "23360"
  },
  {
    "text": "who's planning on spending most of the day in this track quite a few people so",
    "start": "23360",
    "end": "28820"
  },
  {
    "text": "yes it's there should be some interesting stuff I'm expecting lots of different people to come along and say",
    "start": "28820",
    "end": "34730"
  },
  {
    "text": "this is the right way to build an API and then at the end of the day you'll have eight right ways to build an API",
    "start": "34730",
    "end": "40370"
  },
  {
    "text": "and you can just go away and choose which one you'd like to the best so",
    "start": "40370",
    "end": "46460"
  },
  {
    "start": "45000",
    "end": "142000"
  },
  {
    "text": "brief history I will try and explain how we got to where we are from the 1970s",
    "start": "46460",
    "end": "53210"
  },
  {
    "text": "which is when really programming kind of got started people were doing stuff with",
    "start": "53210",
    "end": "59000"
  },
  {
    "text": "COBOL and Fortran and we were just starting to get into high-level languages like C and everything else and",
    "start": "59000",
    "end": "67569"
  },
  {
    "text": "so we had to create application programming interfaces we had to create",
    "start": "67569",
    "end": "73429"
  },
  {
    "text": "ways that if we made a piece of software whether that was an order management stock control usually finance back in",
    "start": "73429",
    "end": "82159"
  },
  {
    "text": "those days banks were early adopters and they had lots of different applications dealing with different things and those",
    "start": "82159",
    "end": "88009"
  },
  {
    "text": "applications needed to be able to talk to each other and so they had to create api s-- and we've been using api's as",
    "start": "88009",
    "end": "96409"
  },
  {
    "text": "programmers pretty much everything we use could be considered an API the even",
    "start": "96409",
    "end": "105079"
  },
  {
    "text": "the the programming languages that we write code in whether that's C or C sharp or Java or Python there's a piece",
    "start": "105079",
    "end": "111799"
  },
  {
    "text": "of software which might be a compiler or it might be a dynamic language runtime and we are using the API for that",
    "start": "111799",
    "end": "119689"
  },
  {
    "text": "compiler or dynamic language runtime to use that to create our software and then",
    "start": "119689",
    "end": "124789"
  },
  {
    "text": "everything we interact with whether that's a database or a messaging system or a cue that has some API that we talk",
    "start": "124789",
    "end": "131450"
  },
  {
    "text": "to as well and then of course we've got the higher level API is now of talking to other sort of",
    "start": "131450",
    "end": "137450"
  },
  {
    "text": "services in service-oriented architecture or micro services but back",
    "start": "137450",
    "end": "143209"
  },
  {
    "start": "142000",
    "end": "344000"
  },
  {
    "text": "in the 1970s things were largely running on mainframes and that's very few people",
    "start": "143209",
    "end": "152629"
  },
  {
    "text": "very few organizations in those days would have had more than one mainframe that kind of wasn't the point mainframes",
    "start": "152629",
    "end": "159019"
  },
  {
    "text": "you bought a mainframe and if you needed more processing power you bought a bigger mainframe or you made your",
    "start": "159019",
    "end": "165950"
  },
  {
    "text": "mainframe bigger because you could just buy another couple of fridges and tack it on to the end and add another two",
    "start": "165950",
    "end": "172069"
  },
  {
    "text": "megabytes of disk space just a little",
    "start": "172069",
    "end": "178489"
  },
  {
    "text": "bit about me this is actually the my 31st year as a professional software",
    "start": "178489",
    "end": "184670"
  },
  {
    "text": "developer I've been doing this since I was 16 I started on UNIX systems with",
    "start": "184670",
    "end": "189709"
  },
  {
    "text": "wise terminals my first day at work they said learn see and they gave me the",
    "start": "189709",
    "end": "195860"
  },
  {
    "text": "Kernighan and Ritchie book with hello world and a wise terminal and I sat down",
    "start": "195860",
    "end": "201500"
  },
  {
    "text": "and they said I said how do you edit files and they said use VI and then I spent six months learning VI but the",
    "start": "201500",
    "end": "213920"
  },
  {
    "text": "mainframes that existed they had lots of difference they had time sharing systems they had multiple processes running and",
    "start": "213920",
    "end": "220010"
  },
  {
    "text": "those processes needed a way to talk to each other and so one of the first examples of an inter process",
    "start": "220010",
    "end": "227060"
  },
  {
    "text": "API was message oriented middleware or mam which was pioneered by IBM in the",
    "start": "227060",
    "end": "235220"
  },
  {
    "text": "1970s anything that was pioneered in the 1970s you can pretty much assume it was",
    "start": "235220",
    "end": "240319"
  },
  {
    "text": "IBM pioneering it and message oriented middleware was what we would think of",
    "start": "240319",
    "end": "247099"
  },
  {
    "text": "now was a RabbitMQ really but with a little bit of intelligence so that something could send a message and then",
    "start": "247099",
    "end": "253099"
  },
  {
    "text": "that middleware could transform it and then send it on somewhere else and that might get a response back but it was",
    "start": "253099",
    "end": "260150"
  },
  {
    "text": "very asynchronous and it's the sort of thing that we do today and we think we're being very clever using Kafka or",
    "start": "260150",
    "end": "266180"
  },
  {
    "text": "rabbitmq or AMQP and we're basically doing the same thing that people on mainframes were doing",
    "start": "266180",
    "end": "272110"
  },
  {
    "text": "with COBOL and mo em in the 1970s the other API that was created then it was I",
    "start": "272110",
    "end": "278380"
  },
  {
    "text": "Sam which is how databases used to work the first database I worked on was info",
    "start": "278380",
    "end": "284680"
  },
  {
    "text": "mix SQL anyone any infamous people in the room no just me yes one of the back",
    "start": "284680",
    "end": "291850"
  },
  {
    "text": "there other people were doing Oracle somehow I ended up at a place that was doing info mix information was obviously",
    "start": "291850",
    "end": "298450"
  },
  {
    "text": "superior but any info mix SQL database was just a bunch of sea-ice m-files",
    "start": "298450",
    "end": "303760"
  },
  {
    "text": "and we used a library called CI Sam to talk to the I Sam files and then info",
    "start": "303760",
    "end": "310810"
  },
  {
    "text": "mix invented the SQL see where you would put dollar symbols into your C code and",
    "start": "310810",
    "end": "316720"
  },
  {
    "text": "write SQL statements in it and then it would go through a pre compose that just turned those into the CI Sam API calls",
    "start": "316720",
    "end": "323740"
  },
  {
    "text": "and then it would compile and Link and we had a table tennis table because",
    "start": "323740",
    "end": "329050"
  },
  {
    "text": "compiling and linking in those days used to take three hours and if you broke the build you had to stay and fix it for the",
    "start": "329050",
    "end": "336190"
  },
  {
    "text": "next morning and if nobody broke the build then whoever lost the table tennis tournament had to stay and make sure",
    "start": "336190",
    "end": "342190"
  },
  {
    "text": "everything was ready for the next morning then the 1980s happened and",
    "start": "342190",
    "end": "347820"
  },
  {
    "start": "344000",
    "end": "470000"
  },
  {
    "text": "object-oriented programming came along an object-oriented programming made API is much easier to build because you",
    "start": "347820",
    "end": "353890"
  },
  {
    "text": "could create an object and you could send it off to somewhere else and then you'll get another object back telling",
    "start": "353890",
    "end": "360190"
  },
  {
    "text": "you what the result was and that might all have been in a single process Alan Kay the creator of small talk and",
    "start": "360190",
    "end": "369640"
  },
  {
    "text": "object-oriented programming generally wishes he'd convict message oriented programming because he said people got",
    "start": "369640",
    "end": "377410"
  },
  {
    "text": "completely the wrong end of the stick they thought object-oriented and they started talking about dog being a subclass of animal and animal being a",
    "start": "377410",
    "end": "385090"
  },
  {
    "text": "subclass of mammal and whatever else was going on it was message oriented programming and so within the process",
    "start": "385090",
    "end": "392230"
  },
  {
    "text": "within the libraries and the frameworks that you're using you have an API I use",
    "start": "392230",
    "end": "397270"
  },
  {
    "text": "net and when I once talked to the file system I use things in the system to IO namespace to talk to the final system",
    "start": "397270",
    "end": "404020"
  },
  {
    "text": "and that and API we also got shared libraries in the 1980s on Windows we had dll's so you",
    "start": "404020",
    "end": "411070"
  },
  {
    "text": "could publish your software with a DLL and then somebody else could link to that DLL using a dot H file and then",
    "start": "411070",
    "end": "418450"
  },
  {
    "text": "they could consume functions that you've distributed which made easier to access your file formats on the file system did",
    "start": "418450",
    "end": "427330"
  },
  {
    "text": "anyone use mappy DLL back in the day to interact with their mail system you have",
    "start": "427330",
    "end": "433300"
  },
  {
    "text": "my sympathy we all had ocx which was kind of the early ActiveX things and on",
    "start": "433300",
    "end": "438610"
  },
  {
    "text": "linux we had shared objects and Microsoft of course invented dynamic data exchange which was a way of talking",
    "start": "438610",
    "end": "444760"
  },
  {
    "text": "between two processes running on the same machine very unhappy memories of",
    "start": "444760",
    "end": "452680"
  },
  {
    "text": "working with Excel over dynamic data exchange from vb6 and we also got",
    "start": "452680",
    "end": "460060"
  },
  {
    "text": "sockets that was a 1980s thing network sockets but also UNIX sockets domain sockets nice ways for two processes to",
    "start": "460060",
    "end": "466990"
  },
  {
    "text": "talk to each other on a system in the",
    "start": "466990",
    "end": "472060"
  },
  {
    "start": "470000",
    "end": "679000"
  },
  {
    "text": "1990s client-server came along and",
    "start": "472060",
    "end": "477120"
  },
  {
    "text": "everybody went rushing for clients and client-server basically meant you have a Novell NetWare box which is running your",
    "start": "477120",
    "end": "483580"
  },
  {
    "text": "database or a UNIX box or a Linux box and then you have rich clients",
    "start": "483580",
    "end": "490450"
  },
  {
    "text": "applications on lots of Windows 3.1 machines or Windows 95 machines and they",
    "start": "490450",
    "end": "495580"
  },
  {
    "text": "talk to the database over the network and that database protocol was an",
    "start": "495580",
    "end": "501340"
  },
  {
    "text": "example of an API and sequel is a good example of an API language we also got",
    "start": "501340",
    "end": "508360"
  },
  {
    "text": "the common object request broker architecture Kolber",
    "start": "508360",
    "end": "513940"
  },
  {
    "text": "are there any core Burke casualties in the room how's the PTSD yeah",
    "start": "513940",
    "end": "523360"
  },
  {
    "text": "it's still out there people are still using it people are still getting stuff done with it and good luck to them",
    "start": "523360",
    "end": "530460"
  },
  {
    "text": "Microsoft decided that Cober IBM basically had control of Cobra as they",
    "start": "530460",
    "end": "536350"
  },
  {
    "text": "did with a lot of the standards and Mike soft when we're not doing coober we're going to do the component object model",
    "start": "536350",
    "end": "541380"
  },
  {
    "text": "we're gonna do comm ActiveX and if we want to do messaging over the network",
    "start": "541380",
    "end": "547060"
  },
  {
    "text": "will do D command comm plus and it was Microsoft's answer to Coba which",
    "start": "547060",
    "end": "552940"
  },
  {
    "text": "basically became widespread simply because everybody was on Windows at that",
    "start": "552940",
    "end": "558070"
  },
  {
    "text": "point come incredibly good fun writing con code in C++ that is not something I",
    "start": "558070",
    "end": "567280"
  },
  {
    "text": "would recommend doing and of course in the 90s in 1993 Tim berners-lee invented",
    "start": "567280",
    "end": "574330"
  },
  {
    "text": "the world wide web British yes back when",
    "start": "574330",
    "end": "580180"
  },
  {
    "text": "we were something although of course he invented it in you're not gonna I'm not",
    "start": "580180",
    "end": "585340"
  },
  {
    "text": "going there but the World Wide Web that's just a massive API that's just a",
    "start": "585340",
    "end": "593050"
  },
  {
    "text": "way of talking to other machines and saying give me back some HTML and some images and everything else and so this",
    "start": "593050",
    "end": "600400"
  },
  {
    "text": "was the point at which the API really became the default it was the default",
    "start": "600400",
    "end": "606040"
  },
  {
    "text": "way of interacting with computers you would create some software that software",
    "start": "606040",
    "end": "612730"
  },
  {
    "text": "would talk to a variety of api's in order to do its job and so on top of",
    "start": "612730",
    "end": "618790"
  },
  {
    "text": "that we invented service-oriented architecture we said it's ridiculous that all these client-server systems",
    "start": "618790",
    "end": "625210"
  },
  {
    "text": "bear in mind was still in the same decade where we thought client-server was a great idea but by the end of that",
    "start": "625210",
    "end": "631390"
  },
  {
    "text": "decade we got client-server is a terrible idea we've got all that business logic and we're repeating it over and over again on all these desktop",
    "start": "631390",
    "end": "638380"
  },
  {
    "text": "machines we should be pulling that business logic out of there and putting it into services that we're running over",
    "start": "638380",
    "end": "644590"
  },
  {
    "text": "HTTP and we should be talking to those from the clients and so we started to",
    "start": "644590",
    "end": "650260"
  },
  {
    "text": "move towards this idea of a thin smart client that could talk to these back-end",
    "start": "650260",
    "end": "655600"
  },
  {
    "text": "services and just to make sure that all these back-end services could talk to each other and all the different clients",
    "start": "655600",
    "end": "661330"
  },
  {
    "text": "could talk to those back-end services we had to come up with a common language that they could all speak and so we",
    "start": "661330",
    "end": "666850"
  },
  {
    "text": "invented soap sorry if you're too young to remember",
    "start": "666850",
    "end": "673940"
  },
  {
    "text": "soap if you haven't been doing this long enough to remember soap and yeah in the",
    "start": "673940",
    "end": "681769"
  },
  {
    "start": "679000",
    "end": "721000"
  },
  {
    "text": "year 2000 Roy fielding at the University of California Irvine for his doctoral",
    "start": "681769",
    "end": "687769"
  },
  {
    "text": "thesis wrote a paper called the architectural styles and design of network based software architectures",
    "start": "687769",
    "end": "695589"
  },
  {
    "text": "which you may know better as rest representational state transfer it's one",
    "start": "695589",
    "end": "703850"
  },
  {
    "text": "of those occasions when somebody's doctoral thesis has become a rallying",
    "start": "703850",
    "end": "708890"
  },
  {
    "text": "point for zealous to start bashing everybody else over the head and generally being unpleasant the other one",
    "start": "708890",
    "end": "717380"
  },
  {
    "text": "obviously being Karl Marx's Das Kapital and the Soviet Union yes I did just",
    "start": "717380",
    "end": "724130"
  },
  {
    "start": "721000",
    "end": "819000"
  },
  {
    "text": "compare rest zealots to Stalin because I",
    "start": "724130",
    "end": "732470"
  },
  {
    "text": "can also in the year 2000 our in the in the",
    "start": "732470",
    "end": "740209"
  },
  {
    "text": "2000s we got xmlhttprequest in browsers xmlhttprequest was actually invented by",
    "start": "740209",
    "end": "748379"
  },
  {
    "text": "Microsoft and it was built into the Internet Explorer browser and they only invented it they never meant for it to",
    "start": "748379",
    "end": "754439"
  },
  {
    "text": "be hoped this whole Ajax thing they never meant for web 2.0 and everything else to happen",
    "start": "754439",
    "end": "760019"
  },
  {
    "text": "they literally invented it to make Outlook Web Access work so that every time it checked for mail it didn't have",
    "start": "760019",
    "end": "765839"
  },
  {
    "text": "to refresh the entire screen and redownload all those ActiveX controls",
    "start": "765839",
    "end": "771050"
  },
  {
    "text": "Jason was created in 2001 Douglas",
    "start": "771050",
    "end": "776279"
  },
  {
    "text": "Crockford created Jason as a subset of JavaScript so the idea was that if you",
    "start": "776279",
    "end": "783629"
  },
  {
    "text": "see realized you created a JSON string and then you passed it across the network you could",
    "start": "783629",
    "end": "789240"
  },
  {
    "text": "literally just exec it because dynamic languages on the client-side and it",
    "start": "789240",
    "end": "797009"
  },
  {
    "text": "would become an object and then you will be able to work with that object in your JavaScript code which of course is a",
    "start": "797009",
    "end": "802410"
  },
  {
    "text": "terrible idea because all you have to do is put something nasty into the JSON and the JavaScript client will exec it and",
    "start": "802410",
    "end": "808649"
  },
  {
    "text": "so we ended up having to get Jason pass anyway which completely negates the",
    "start": "808649",
    "end": "813930"
  },
  {
    "text": "point of Jason being a subset of JavaScript but never mind it still is",
    "start": "813930",
    "end": "819589"
  },
  {
    "text": "in 2006 service-oriented architecture was just about to run out of steam",
    "start": "819589",
    "end": "827430"
  },
  {
    "text": "really and so Microsoft's invented windows communication foundation as a way of doing service-oriented",
    "start": "827430",
    "end": "833970"
  },
  {
    "text": "architectures and I'm sure most of the people who raised their hand for who",
    "start": "833970",
    "end": "839220"
  },
  {
    "text": "does net will have done WCF in the past we'll be looking at that in a bit more",
    "start": "839220",
    "end": "845490"
  },
  {
    "text": "detail later on rest came out of Roy Fielding's very vague thesis and also in",
    "start": "845490",
    "end": "855559"
  },
  {
    "text": "2006 I think it was Apple introduced the iPhone Microsoft had been trying to make",
    "start": "855559",
    "end": "861680"
  },
  {
    "text": "smart phones for about three or four years an apple just their powder dry waited until capacitive",
    "start": "861680",
    "end": "868830"
  },
  {
    "text": "touch screens came along and then went here you go that's how you do it and who",
    "start": "868830",
    "end": "874380"
  },
  {
    "text": "hasn't got a smartphone in their pocket see that's a good one because you don't have to raise your hand but mobile",
    "start": "874380",
    "end": "884700"
  },
  {
    "start": "883000",
    "end": "922000"
  },
  {
    "text": "devices obviously made a big difference we suddenly got to this situation where",
    "start": "884700",
    "end": "890070"
  },
  {
    "text": "you wanted the data on your mobile device to be current and so we created",
    "start": "890070",
    "end": "897600"
  },
  {
    "text": "systems that would talk to API he's pretty much exclusively we couldn't run",
    "start": "897600",
    "end": "902730"
  },
  {
    "text": "databases locally on that machine we couldn't do the thing that we've been doing with sort of sales people going",
    "start": "902730",
    "end": "909750"
  },
  {
    "text": "out with laptops with a local copy of the database and then they'd come back at the end of the day and we'd run a",
    "start": "909750",
    "end": "915300"
  },
  {
    "text": "sequel server murder replication synchronization and wonder why all our tables had disappeared and the",
    "start": "915300",
    "end": "924360"
  },
  {
    "start": "922000",
    "end": "1024000"
  },
  {
    "text": "late-2000s was also when we started to get what we actually think of when we when we say API is now which is public",
    "start": "924360",
    "end": "931740"
  },
  {
    "text": "API is over the Internet to services and software that's hosted on the internet",
    "start": "931740",
    "end": "938490"
  },
  {
    "text": "so eBay introduced their API actually in the year 2000 I'm quite surprised that",
    "start": "938490",
    "end": "943829"
  },
  {
    "text": "eBay is 20 years old but it is and so the eBay API they invented so that",
    "start": "943829",
    "end": "951240"
  },
  {
    "text": "people could write BOTS to sleep auctions I think that's the only reason",
    "start": "951240",
    "end": "956399"
  },
  {
    "text": "they did that Amazon created their first API in 2002 so that people could search",
    "start": "956399",
    "end": "962700"
  },
  {
    "text": "the Amazon stock database and display information from Amazon's store on their",
    "start": "962700",
    "end": "968220"
  },
  {
    "text": "websites Twitter came along with their API in 2006 and I think Twitter's one of",
    "start": "968220",
    "end": "974430"
  },
  {
    "text": "the best examples of a company launching with a very very good API and giving",
    "start": "974430",
    "end": "981690"
  },
  {
    "text": "everybody access to that API and saying build stuff based on this and there was",
    "start": "981690",
    "end": "987959"
  },
  {
    "text": "a plethora of amazing Twitter clients that people built and whatever you",
    "start": "987959",
    "end": "993449"
  },
  {
    "text": "wanted to use Twitter for whatever Twitter meant to you you could find a client that consumed that public Twitter",
    "start": "993449",
    "end": "1000170"
  },
  {
    "text": "API and represented the data in a form that wasn't meaningful to you and then",
    "start": "1000170",
    "end": "1006740"
  },
  {
    "text": "three years later they shut it down and said she couldn't do that anymore and Facebook in 2007 introduced the",
    "start": "1006740",
    "end": "1013760"
  },
  {
    "text": "Facebook platform so that you could automate giving your personal data to Twitter and you didn't have to sit down",
    "start": "1013760",
    "end": "1020540"
  },
  {
    "text": "and do it with a mouse and a smartphone and a camera and the other thing that we",
    "start": "1020540",
    "end": "1029510"
  },
  {
    "start": "1024000",
    "end": "1202000"
  },
  {
    "text": "started to see in in the 2000s was a very busy decade and then last decade",
    "start": "1029510",
    "end": "1037100"
  },
  {
    "text": "was even busier and this next decade I'm seriously considering just staying in bed and seeing where we end up in 2030",
    "start": "1037100",
    "end": "1044150"
  },
  {
    "text": "but we got cloud computing and Amazon",
    "start": "1044150",
    "end": "1049809"
  },
  {
    "text": "suddenly realized Jeff Bezos in Amazon had internally told all the teams",
    "start": "1049809",
    "end": "1056090"
  },
  {
    "text": "building all the different bits of Amazon everything should be an API so every team should be able to consume",
    "start": "1056090",
    "end": "1063110"
  },
  {
    "text": "everything from every other team using an API that you have published",
    "start": "1063110",
    "end": "1068140"
  },
  {
    "text": "documentation and specifications and libraries for regardless of what",
    "start": "1068140",
    "end": "1073760"
  },
  {
    "text": "platform they're using so we've got some people who are doing JavaScript we've got some people who are doing Python we've got some people are doing C++ all",
    "start": "1073760",
    "end": "1080990"
  },
  {
    "text": "these things should be able to talk to each other and he extended that even to the provisioning of infrastructure",
    "start": "1080990",
    "end": "1086929"
  },
  {
    "text": "virtual machines and storage and everything else and then at some point",
    "start": "1086929",
    "end": "1092030"
  },
  {
    "text": "when hang on we've got this amazing object storage platform and we've got",
    "start": "1092030",
    "end": "1098720"
  },
  {
    "text": "lots of spare capacity on it why don't we just sell access to that and so they",
    "start": "1098720",
    "end": "1104120"
  },
  {
    "text": "created s3 in 2006 and so if you had something that was running on the",
    "start": "1104120",
    "end": "1110270"
  },
  {
    "text": "Internet and you needed to be able to store data somewhere you could just say to Amazon over there API hey can you",
    "start": "1110270",
    "end": "1116690"
  },
  {
    "text": "store this for me and it would keep it and they would pay based on the amount",
    "start": "1116690",
    "end": "1123350"
  },
  {
    "text": "you had stored as well and this is another trend that was introduced at",
    "start": "1123350",
    "end": "1129350"
  },
  {
    "text": "around this time with api's was the pay-as-you-go model so rather than buying a license to a piece of software",
    "start": "1129350",
    "end": "1136510"
  },
  {
    "text": "buying like sequel server and then having to pay per call that you're",
    "start": "1136510",
    "end": "1141710"
  },
  {
    "text": "running it on and provision a piece of hardware for it you had an API and you could say create",
    "start": "1141710",
    "end": "1147289"
  },
  {
    "text": "a bucket in this data center here and for every gigabyte of data that I store",
    "start": "1147289",
    "end": "1153919"
  },
  {
    "text": "in there I will pay three cents per month and the API became a unit of sales",
    "start": "1153919",
    "end": "1160789"
  },
  {
    "text": "as well as a programming tool Microsoft",
    "start": "1160789",
    "end": "1166720"
  },
  {
    "text": "this is not clicking Microsoft introduced Azure in 2008 and it was",
    "start": "1166720",
    "end": "1174440"
  },
  {
    "text": "actually called Windows as here back in the day before Sacher took over and decided to deprecated the term Windows",
    "start": "1174440",
    "end": "1180830"
  },
  {
    "text": "and that had a similar set of things and then since then we've seen other people come along obviously Google IBM but also",
    "start": "1180830",
    "end": "1189590"
  },
  {
    "text": "smaller companies like digitalocean and Rackspace have managed to compete with",
    "start": "1189590",
    "end": "1195830"
  },
  {
    "text": "big players by providing api's to their services as well and then we got into",
    "start": "1195830",
    "end": "1203960"
  },
  {
    "start": "1202000",
    "end": "1250000"
  },
  {
    "text": "the 2010s and I can't remember exactly when it was",
    "start": "1203960",
    "end": "1211190"
  },
  {
    "text": "everyone started talking about micro services it feels like thirty years ago but it's not it's much less than that",
    "start": "1211190",
    "end": "1218240"
  },
  {
    "text": "but micro services is taking that idea of service-oriented architecture to its",
    "start": "1218240",
    "end": "1224570"
  },
  {
    "text": "extreme I listen to a blog another blog post I listened to a podcast awhile back",
    "start": "1224570",
    "end": "1231769"
  },
  {
    "text": "with a micro services person who was suggesting that every single object in a",
    "start": "1231769",
    "end": "1238549"
  },
  {
    "text": "framework had the potential to be a micro service and they said what int and",
    "start": "1238549",
    "end": "1245690"
  },
  {
    "text": "he said yes why not",
    "start": "1245690",
    "end": "1249580"
  },
  {
    "text": "yes I'm provisioning an integer in US East one and the funny thing was when",
    "start": "1250740",
    "end": "1260950"
  },
  {
    "text": "people started talking about microservices I was doing dotnet development I was creating a SP net web",
    "start": "1260950",
    "end": "1266799"
  },
  {
    "text": "api's at the time that was the kind of an asp net MVC websites and WPF",
    "start": "1266799",
    "end": "1272799"
  },
  {
    "text": "applications that talk to those asp net web api s-- and everything had to be hosted on iis on a windows server and",
    "start": "1272799",
    "end": "1280780"
  },
  {
    "text": "provisioning windows servers with iis was not fun and deploying an asp net",
    "start": "1280780",
    "end": "1287110"
  },
  {
    "text": "website on 2i is considering they call it the integrated pipeline deploying an",
    "start": "1287110",
    "end": "1292360"
  },
  {
    "text": "asp net website onto iis is way more complicated than it should be and so the",
    "start": "1292360",
    "end": "1298000"
  },
  {
    "text": "idea that we were going to create even more smaller web api's and deploy them all over and over again sort of two or",
    "start": "1298000",
    "end": "1305650"
  },
  {
    "text": "three times a day was absolutely insane I couldn't see that at all Micra services didn't really make sense",
    "start": "1305650",
    "end": "1311620"
  },
  {
    "text": "until containers came along docker put a layer over C groups and everything else",
    "start": "1311620",
    "end": "1317740"
  },
  {
    "text": "and docker created an API an approachable API over the namespaces and",
    "start": "1317740",
    "end": "1325870"
  },
  {
    "text": "C groups and and boundaries and process limits and everything else that are",
    "start": "1325870",
    "end": "1332650"
  },
  {
    "text": "inside Linux and they called it containers and they gave us a command line interface to interact with it and",
    "start": "1332650",
    "end": "1339220"
  },
  {
    "text": "they gave us HTTP API to interact with it you could connect to docker dot sock and you could send HTTP requests or you",
    "start": "1339220",
    "end": "1346450"
  },
  {
    "text": "could connect to your docker server in the cloud which of course you'd secure it with an SSL certificate and you could",
    "start": "1346450",
    "end": "1354309"
  },
  {
    "text": "spin up machines and scale and do everything else but even that was a bit",
    "start": "1354309",
    "end": "1359740"
  },
  {
    "text": "too complicated for most of us and so then we got kubernetes and kubernetes is the ultimate infrastructure API and it's",
    "start": "1359740",
    "end": "1367210"
  },
  {
    "text": "evolving and evolving and we're getting to the point now where kubernetes actually has API is built into it where",
    "start": "1367210",
    "end": "1375820"
  },
  {
    "text": "you can say to cooper kubernetes cluster provision another kubernetes cluster inside this class I want to",
    "start": "1375820",
    "end": "1382720"
  },
  {
    "text": "create virtual mini clusters inside my cluster and do interesting things with that but once we got containers and",
    "start": "1382720",
    "end": "1390220"
  },
  {
    "text": "kubernetes it became very very easy to deploy services over and over again it",
    "start": "1390220",
    "end": "1397600"
  },
  {
    "text": "really enabled that continuous integration continuous delivery pipeline and we leveraged API is all the way",
    "start": "1397600",
    "end": "1405010"
  },
  {
    "text": "through so we had web hooks and you would commit something into github and that would trigger a web hook which",
    "start": "1405010",
    "end": "1411190"
  },
  {
    "text": "would fire off your continuous integration on Jenkins or bamboo or or",
    "start": "1411190",
    "end": "1416380"
  },
  {
    "text": "is your DevOps or whatever you're using and then that would build your software and it would run the automated tests and",
    "start": "1416380",
    "end": "1422650"
  },
  {
    "text": "it would potentially create docker images and push those to a registry and then pushing that to a registry would",
    "start": "1422650",
    "end": "1428590"
  },
  {
    "text": "trigger another web hook which would call another API which would then deploy that new image into production and",
    "start": "1428590",
    "end": "1434470"
  },
  {
    "text": "slowly cycle down the old one all done with api s-- and mostly over",
    "start": "1434470",
    "end": "1441070"
  },
  {
    "text": "HTTP still at the time and we also got WebSockets and WebSockets was a way of",
    "start": "1441070",
    "end": "1448299"
  },
  {
    "text": "the browser at this point we'd started building everything into the browser",
    "start": "1448299",
    "end": "1453490"
  },
  {
    "text": "everything was just a browser application and so a WebSocket was effectively tcp/ip but in the browser",
    "start": "1453490",
    "end": "1459909"
  },
  {
    "text": "you could open a persistent connection to a server and just send data backwards",
    "start": "1459909",
    "end": "1466240"
  },
  {
    "text": "and forwards over it and we could build the same kind of experiences inside the browser that we'd been able to build",
    "start": "1466240",
    "end": "1472059"
  },
  {
    "text": "with things like WCF or whatever it is you Java people use I don't know spring",
    "start": "1472059",
    "end": "1478270"
  },
  {
    "text": "or something isn't it seriously I have no idea but I love you you're great so",
    "start": "1478270",
    "end": "1492159"
  },
  {
    "start": "1489000",
    "end": "1553000"
  },
  {
    "text": "one thing that all these api is have in common is they need a way to talk to",
    "start": "1492159",
    "end": "1498610"
  },
  {
    "text": "each other the client needs a way to express a request and the server needs",
    "start": "1498610",
    "end": "1505720"
  },
  {
    "text": "to be able to understand that request and act on it and then create a response",
    "start": "1505720",
    "end": "1511120"
  },
  {
    "text": "and then the client has to be able to understand that response and there are two real things involved",
    "start": "1511120",
    "end": "1518930"
  },
  {
    "text": "in that process one is how do they send that backwards and forwards is it over",
    "start": "1518930",
    "end": "1525710"
  },
  {
    "text": "TCP or HTTP or through a shared file system or some shared memory and the",
    "start": "1525710",
    "end": "1532760"
  },
  {
    "text": "other is what format are we going to use for that message that we're passing between the client and the server",
    "start": "1532760",
    "end": "1539870"
  },
  {
    "text": "that they can both understand and this has gone through a very interesting evolution I researched it for this talk",
    "start": "1539870",
    "end": "1546290"
  },
  {
    "text": "and and it's quite fun one of the earliest sort of wire format standards",
    "start": "1546290",
    "end": "1552140"
  },
  {
    "text": "was korba and what was called the G IOP or general inter orb protocol because",
    "start": "1552140",
    "end": "1560870"
  },
  {
    "start": "1553000",
    "end": "1676000"
  },
  {
    "text": "Cobre was all about the orbs apparently and this was a binary format and it was",
    "start": "1560870",
    "end": "1566870"
  },
  {
    "text": "very efficient and it had to be because when we were using Kolber to build our distributed systems we were still",
    "start": "1566870",
    "end": "1573290"
  },
  {
    "text": "dealing with 10 megabit Ethernet networks if in some places we were still",
    "start": "1573290",
    "end": "1580070"
  },
  {
    "text": "dealing with token the token ring networks where if somebody removed the",
    "start": "1580070",
    "end": "1585320"
  },
  {
    "text": "terminator from the end of the network then the whole thing would just stop because the messages would just go",
    "start": "1585320",
    "end": "1590809"
  },
  {
    "text": "flying off the end of the network and into space but that lack of network",
    "start": "1590809",
    "end": "1597140"
  },
  {
    "text": "bandwidth and that the absolutely appalling amount of error correction that was needed because the the network",
    "start": "1597140",
    "end": "1604970"
  },
  {
    "text": "wires were very shoddy and people like me were soldering them and I'm not good at soldering and so we had to keep the",
    "start": "1604970",
    "end": "1611840"
  },
  {
    "text": "messages small and so Cober used a binary format it was very complicated",
    "start": "1611840",
    "end": "1617120"
  },
  {
    "text": "and ideally you used a library to create it but you can see the general outline",
    "start": "1617120",
    "end": "1622730"
  },
  {
    "text": "of a core burr message or a G IOP message and then this was sent over a",
    "start": "1622730",
    "end": "1627920"
  },
  {
    "text": "IOP which was tcp/ip based protocol for two orbs to talk to each other in a",
    "start": "1627920",
    "end": "1635720"
  },
  {
    "text": "distributed CORBA system now obviously",
    "start": "1635720",
    "end": "1641350"
  },
  {
    "text": "debugging this was quite difficult if you used Wireshark to",
    "start": "1642490",
    "end": "1648710"
  },
  {
    "text": "attached to the network and look at the messages that were being sent you'd go I have no idea I don't know what that is",
    "start": "1648710",
    "end": "1654919"
  },
  {
    "text": "at all and so we decided that it was very important that we should be able to",
    "start": "1654919",
    "end": "1660890"
  },
  {
    "text": "read the messages being sent between these machines as well as the machines being able to read the messages and",
    "start": "1660890",
    "end": "1666429"
  },
  {
    "text": "network bandwidth went up a bit we got 200 make a bit networks and so we grew",
    "start": "1666429",
    "end": "1672770"
  },
  {
    "text": "complacent and said yes we can just use text to talk between systems and so we",
    "start": "1672770",
    "end": "1678590"
  },
  {
    "start": "1676000",
    "end": "1850000"
  },
  {
    "text": "invented XML one thing I will say about",
    "start": "1678590",
    "end": "1684380"
  },
  {
    "text": "XML this is a modern this is a current",
    "start": "1684380",
    "end": "1689570"
  },
  {
    "text": "piece of XML that I invented from a current system that doesn't really exist but it's still version 1.0 how many",
    "start": "1689570",
    "end": "1698570"
  },
  {
    "text": "things after nearly 25 years are still 1.0 they did a really good job with XML",
    "start": "1698570",
    "end": "1705409"
  },
  {
    "text": "when they SPECT it out and XML is was",
    "start": "1705409",
    "end": "1711710"
  },
  {
    "text": "the first kind of common human readable format for a given value of human and we",
    "start": "1711710",
    "end": "1720380"
  },
  {
    "text": "could use XML to communicate between systems and everything was fine and great in interestingly for me the xml",
    "start": "1720380",
    "end": "1729710"
  },
  {
    "text": "1.0 specification came out on the 10th of february 1998 which was my 25th birthday so now when my kids asked me",
    "start": "1729710",
    "end": "1737750"
  },
  {
    "text": "how old i am i say i'm 25 years older than xml and they say god dad you're",
    "start": "1737750",
    "end": "1743330"
  },
  {
    "text": "such a geek but of course xml it's it's",
    "start": "1743330",
    "end": "1750140"
  },
  {
    "text": "it's almost perfect it's wonderful as long as you've got the network bandwidth it's easy to read for a human it's easy",
    "start": "1750140",
    "end": "1756799"
  },
  {
    "text": "for a computer to pass kind of and it was just generally quite nice and easy",
    "start": "1756799",
    "end": "1762950"
  },
  {
    "text": "so of course we had to improve on it and that was how we got soap and this is so",
    "start": "1762950",
    "end": "1770409"
  },
  {
    "text": "so so essentially wraps the XML with a bunch of things that say soap",
    "start": "1770409",
    "end": "1777850"
  },
  {
    "text": "and also adds namespaces into the mix because the XML people were very clever and they went what if two people have",
    "start": "1782269",
    "end": "1789269"
  },
  {
    "text": "two different schemas have two different sort of XML objects and they both have a",
    "start": "1789269",
    "end": "1794669"
  },
  {
    "text": "description field we need namespaces so that they can say this object has this description field",
    "start": "1794669",
    "end": "1800070"
  },
  {
    "text": "and this is this namespace and so that was the other thing that soap made compulsory as part of your XML was an",
    "start": "1800070",
    "end": "1807119"
  },
  {
    "text": "absolute shedload of namespaces and I think part of the reason why I dislike",
    "start": "1807119",
    "end": "1813629"
  },
  {
    "text": "soap so much is because working with namespaces using the XML libraries",
    "start": "1813629",
    "end": "1819629"
  },
  {
    "text": "in.net is not fun it just isn't and the",
    "start": "1819629",
    "end": "1825450"
  },
  {
    "text": "other thing of course with XML is that there were a few special characters the",
    "start": "1825450",
    "end": "1830669"
  },
  {
    "text": "greater than and less then symbol the apostrophe the quote and so we had to have where are we we had at ampersand a",
    "start": "1830669",
    "end": "1839669"
  },
  {
    "text": "pause semicolon so what was a single",
    "start": "1839669",
    "end": "1844950"
  },
  {
    "text": "byte character became five bytes over the wire then Jason came along and Jason",
    "start": "1844950",
    "end": "1855559"
  },
  {
    "text": "like I said earlier Douglas Crockford the idea was that it is just a JavaScript object and Jason's great for",
    "start": "1855559",
    "end": "1864960"
  },
  {
    "text": "moving data across and particularly for moving data between web servers and browsers browsers can understand it",
    "start": "1864960",
    "end": "1871590"
  },
  {
    "text": "easily they can process it easily and so we decided nvm XML we're going to use",
    "start": "1871590",
    "end": "1878100"
  },
  {
    "text": "Jason for everything going to use Jason for a configuration files Jason doesn't support comments never mind why would we",
    "start": "1878100",
    "end": "1885029"
  },
  {
    "text": "have comments in our configuration files that's just insane and of course the",
    "start": "1885029",
    "end": "1892529"
  },
  {
    "text": "other fun thing with Jason dates no standard way of representing a date in a",
    "start": "1892529",
    "end": "1900059"
  },
  {
    "text": "JSON object so Douglas Crockford he kind of came up with the idea in 2001 the",
    "start": "1900059",
    "end": "1906480"
  },
  {
    "text": "JSON dog website went online in 2002 and it just took 11 short years for it to",
    "start": "1906480",
    "end": "1913419"
  },
  {
    "text": "become an actual ACMA standard so there were from 2002 to 2013 if you downloaded",
    "start": "1913419",
    "end": "1921460"
  },
  {
    "text": "a Jason package for your preferred development system it was kind of 50/50",
    "start": "1921460",
    "end": "1926860"
  },
  {
    "text": "whether it was going to work with the Jason coming from the other system that you were talking to now we have",
    "start": "1926860",
    "end": "1934570"
  },
  {
    "start": "1932000",
    "end": "2070000"
  },
  {
    "text": "something called protobuf and protobuf is Google's format for messages and",
    "start": "1934570",
    "end": "1942669"
  },
  {
    "text": "Google created this in 2001 Google were effectively one of the first",
    "start": "1942669",
    "end": "1948370"
  },
  {
    "text": "organizations to build a massive distributed system the Google engine",
    "start": "1948370",
    "end": "1954429"
  },
  {
    "text": "itself the search engine was a massive distributed system obviously the MapReduce algorithm you had a bunch of",
    "start": "1954429",
    "end": "1961450"
  },
  {
    "text": "servers doing something and then aggregating those results and sending it",
    "start": "1961450",
    "end": "1966789"
  },
  {
    "text": "to a smaller set of servers and then another smaller set of services and then eventually down to the browser where it",
    "start": "1966789",
    "end": "1972220"
  },
  {
    "text": "became a series of advertisements and",
    "start": "1972220",
    "end": "1976020"
  },
  {
    "text": "even though we were up to gigabit networking at this point and even though",
    "start": "1977880",
    "end": "1983020"
  },
  {
    "text": "they had tens of thousands of machines in their data centers the amount of traffic they were passing in between the",
    "start": "1983020",
    "end": "1989530"
  },
  {
    "text": "services meant that they had to make it as small as possible and so this this is",
    "start": "1989530",
    "end": "1994990"
  },
  {
    "text": "not actually protobuf this is how you define a message in protobuf this is how",
    "start": "1994990",
    "end": "2000179"
  },
  {
    "text": "you would define the book message from that XML once you've run the protobuf compiler and it generates the subclasses",
    "start": "2000179",
    "end": "2007650"
  },
  {
    "text": "for you and then it produces the actual wire format protobuf looks like this that is a hexadecimal representation of",
    "start": "2007650",
    "end": "2016520"
  },
  {
    "text": "exactly the same data that was in the XML and the soap message that I showed",
    "start": "2016520",
    "end": "2022860"
  },
  {
    "text": "you earlier this is 101 bytes and the equivalent soap message was roughly 600",
    "start": "2022860",
    "end": "2030539"
  },
  {
    "text": "bytes and so it's an awful lot smaller and it means you can send six times as much traffic over the same network the",
    "start": "2030539",
    "end": "2038070"
  },
  {
    "text": "other nice thing about protobuf I said XML is easy to pass it's actually try",
    "start": "2038070",
    "end": "2043860"
  },
  {
    "text": "an XML parser sometime it's not fun protobuf was designed so that encoding",
    "start": "2043860",
    "end": "2051388"
  },
  {
    "text": "and decoding the message is efficient as possible regardless of the language that",
    "start": "2051389",
    "end": "2056730"
  },
  {
    "text": "you're doing it in whether that's Python or C sharp or Java or C++ whatever it is",
    "start": "2056730",
    "end": "2064020"
  },
  {
    "text": "it's designed to use a minimal amount of CPU power to actually handle the encoding there are some other wire",
    "start": "2064020",
    "end": "2072750"
  },
  {
    "start": "2070000",
    "end": "2167000"
  },
  {
    "text": "formats which are in use at the moment there's thrift which was open sourced by",
    "start": "2072750",
    "end": "2078240"
  },
  {
    "text": "Facebook in 2007 thrift is a very similar alternative to protobuf but is",
    "start": "2078240",
    "end": "2084570"
  },
  {
    "text": "more kind of RPC oriented there's Avro",
    "start": "2084570",
    "end": "2090648"
  },
  {
    "text": "from which came out of the Hadoop project which is kind of somewhere between protobuf and Jason so Avro",
    "start": "2090649",
    "end": "2098520"
  },
  {
    "text": "messages actually include the the schema for decoding that message inside there",
    "start": "2098520",
    "end": "2104670"
  },
  {
    "text": "whereas both both thrift and protobuf you have to have generated a class that",
    "start": "2104670",
    "end": "2109859"
  },
  {
    "text": "understands the message is very difficult to reflect over it we have message pack which I really like",
    "start": "2109859",
    "end": "2115200"
  },
  {
    "text": "message back is very fast very small but it's basically Jason it's just Jason",
    "start": "2115200",
    "end": "2120890"
  },
  {
    "text": "encoded in a different way so instead of actually having the field name you just have a bite and both the client and the",
    "start": "2120890",
    "end": "2127859"
  },
  {
    "text": "server know what that bite means goes this is the description field this is the title field it's a string it's going",
    "start": "2127859",
    "end": "2135540"
  },
  {
    "text": "to be this long Burt I I don't I have no",
    "start": "2135540",
    "end": "2141810"
  },
  {
    "text": "idea what Burt is I just found it while I was doing my research it's it's got the best lane though it's it's actually",
    "start": "2141810",
    "end": "2149640"
  },
  {
    "text": "the binary Erlang term and it's how Erlang distributed systems speak to each",
    "start": "2149640",
    "end": "2156000"
  },
  {
    "text": "other and of course Beeson which is just binary jason that's the internal format",
    "start": "2156000",
    "end": "2161400"
  },
  {
    "text": "used by but it is a standard and you can use it to communicate between systems if you want to and then as I",
    "start": "2161400",
    "end": "2171000"
  },
  {
    "start": "2167000",
    "end": "2258000"
  },
  {
    "text": "said there's two components to this one is the wire format how do we encode and",
    "start": "2171000",
    "end": "2176040"
  },
  {
    "text": "decode the data at the Klein in the server end and the other is protocols and when we first started",
    "start": "2176040",
    "end": "2182420"
  },
  {
    "text": "talking between systems on networks the protocol was tcp/ip it was sockets and",
    "start": "2182420",
    "end": "2188790"
  },
  {
    "text": "you were just open a socket at your end you say hello can I have a socket on that machine and that machine would say",
    "start": "2188790",
    "end": "2195030"
  },
  {
    "text": "yes I am now listening on this socket and you would send data backwards and forwards over that socket connection and",
    "start": "2195030",
    "end": "2202050"
  },
  {
    "text": "everything else was down to you and you get a packet at a time and if the packet",
    "start": "2202050",
    "end": "2207660"
  },
  {
    "text": "didn't contain your entire message you would have to buffer that packet and you have to deal with framing yourself",
    "start": "2207660",
    "end": "2213500"
  },
  {
    "text": "tcp/ip actually started development in 1973 like me and ARPANET migrated to it",
    "start": "2213500",
    "end": "2222300"
  },
  {
    "text": "on January the 1st 1983 so we've had TCP since then tcp/ip and it still runs the",
    "start": "2222300",
    "end": "2231840"
  },
  {
    "text": "entire Internet today and will do for the next couple of years and then we're",
    "start": "2231840",
    "end": "2237240"
  },
  {
    "text": "all going to go to HTTP 3 over quick which is UDP which is unreliable",
    "start": "2237240",
    "end": "2243210"
  },
  {
    "text": "messaging that's going to be fun but yes tcp/ip is raw and it's fast and",
    "start": "2243210",
    "end": "2250500"
  },
  {
    "text": "it's painful and if you can handle the pain it's the most efficient way to pass",
    "start": "2250500",
    "end": "2255780"
  },
  {
    "text": "data between two systems then we've got HTTP 1.1 this was Tim berners-lee",
    "start": "2255780",
    "end": "2262470"
  },
  {
    "start": "2258000",
    "end": "2320000"
  },
  {
    "text": "contribution to the world HTTP really really easy to understand",
    "start": "2262470",
    "end": "2268230"
  },
  {
    "text": "you can actually look at an HTTP request and you can tell what's going on and you can understand it and it's quite",
    "start": "2268230",
    "end": "2275580"
  },
  {
    "text": "efficient and it can handle binary data it can do all sorts of things and it",
    "start": "2275580",
    "end": "2282300"
  },
  {
    "text": "takes care of that framing problem for you so the HTTP headers ideally if",
    "start": "2282300",
    "end": "2288810"
  },
  {
    "text": "you've written a good API and you have well-behaved clients will have a content length header and so you can actually go",
    "start": "2288810",
    "end": "2295440"
  },
  {
    "text": "right so from this double new line here I need to read for this many bytes",
    "start": "2295440",
    "end": "2301790"
  },
  {
    "text": "unless somebody has told you how many characters there are in the string rather than how many bytes the utf-8",
    "start": "2301790",
    "end": "2309540"
  },
  {
    "text": "encoding requires HTTP made it very very easy for us to",
    "start": "2309540",
    "end": "2314770"
  },
  {
    "text": "build api's but we needed a standard way to actually represent those api's which",
    "start": "2314770",
    "end": "2320799"
  },
  {
    "start": "2320000",
    "end": "2421000"
  },
  {
    "text": "was where everybody got completely nuts about rest and hypermedia it was just",
    "start": "2320799",
    "end": "2326109"
  },
  {
    "text": "yes I can send data over HTTP but I don't know if you're going to be able to understand it what would be really nice",
    "start": "2326109",
    "end": "2332260"
  },
  {
    "text": "is if I could send you an HTTP request that I know about and you could send me",
    "start": "2332260",
    "end": "2337750"
  },
  {
    "text": "back the data along with some information about some more HTTP requests that I could make to do things",
    "start": "2337750",
    "end": "2344559"
  },
  {
    "text": "with that data and this was kind of API on steroids if you did rest properly if",
    "start": "2344559",
    "end": "2351490"
  },
  {
    "text": "you did I saw this referred to as hate OAS hypermedia as the engine of",
    "start": "2351490",
    "end": "2358780"
  },
  {
    "text": "applications States which was kind of level 5 rest or something github api has",
    "start": "2358780",
    "end": "2366010"
  },
  {
    "text": "always been very good at this if you go to get up say API and say give me a repository give me the data about a",
    "start": "2366010",
    "end": "2371440"
  },
  {
    "text": "repository it will send you back all the information about that repository but embedded in there a urls that said here",
    "start": "2371440",
    "end": "2379299"
  },
  {
    "text": "is how to get the code here is how to get a list of the files that are in this repository and so you could write your",
    "start": "2379299",
    "end": "2385420"
  },
  {
    "text": "client to understand that those URLs were in the text and then use those to",
    "start": "2385420",
    "end": "2392140"
  },
  {
    "text": "do further requests which meant that github at their leisure could just",
    "start": "2392140",
    "end": "2397359"
  },
  {
    "text": "change those URLs anytime they wanted to and as long as the object had the new urls in it then your software would",
    "start": "2397359",
    "end": "2404079"
  },
  {
    "text": "still work don't get into versioning like that's a nightmare versioning rest",
    "start": "2404079",
    "end": "2411809"
  },
  {
    "text": "there's a there's a debate on how to version your rest api on Google Groups",
    "start": "2411809",
    "end": "2416890"
  },
  {
    "text": "that has been raging since the year 2000 and to knit TCP so the WCF people in the",
    "start": "2416890",
    "end": "2425650"
  },
  {
    "start": "2421000",
    "end": "2488000"
  },
  {
    "text": "room may have used net TCP in the past net TCP was Microsoft's proprietary",
    "start": "2425650",
    "end": "2433859"
  },
  {
    "text": "networking protocol for to.net systems to talk to each other over a tcp/ip",
    "start": "2433859",
    "end": "2440020"
  },
  {
    "text": "connection it was insanely fast it's a binary format similar to proto for the kaabah object format it would",
    "start": "2440020",
    "end": "2446859"
  },
  {
    "text": "maintain a persistent connection the server could say things to the client without being asked very very powerful",
    "start": "2446859",
    "end": "2453609"
  },
  {
    "text": "and only worked between dotnet systems and Microsoft actually published the specification for net TCP how the",
    "start": "2453609",
    "end": "2460630"
  },
  {
    "text": "protocol worked how the encoding format worked and went to the Java people which at the time was Sun Microsystems and",
    "start": "2460630",
    "end": "2467049"
  },
  {
    "text": "said hey you can make your java systems talk net TCP and the Java people went",
    "start": "2467049",
    "end": "2472089"
  },
  {
    "text": "yeah no but it was binary and it was very fast and it only worked with",
    "start": "2472089",
    "end": "2478089"
  },
  {
    "text": "Commandos communication foundation and this was Steve Ballmer era Microsoft so",
    "start": "2478089",
    "end": "2483849"
  },
  {
    "text": "of course it was proprietary and closed source meanwhile at Google for their",
    "start": "2483849",
    "end": "2491799"
  },
  {
    "start": "2488000",
    "end": "2533000"
  },
  {
    "text": "internal systems they were using protobuf to communicate between those systems but they created a protocol",
    "start": "2491799",
    "end": "2498900"
  },
  {
    "text": "called stubby an RPC framework called stubby which was used to actually handle",
    "start": "2498900",
    "end": "2505210"
  },
  {
    "text": "the communication between those things it was called stubby because you fade in a protobuf file and it would generate",
    "start": "2505210",
    "end": "2511660"
  },
  {
    "text": "stubs and those stubs were either a client or the base classes to implement",
    "start": "2511660",
    "end": "2517510"
  },
  {
    "text": "a server in C++ or Java or Python which were the three languages in use at the",
    "start": "2517510",
    "end": "2522970"
  },
  {
    "text": "time and it was completely internal they built it for themselves so it never got open-sourced it would",
    "start": "2522970",
    "end": "2529329"
  },
  {
    "text": "not have been fun but it was binary and it was fast and it was internal to Google and it was when HTTP 2 came along",
    "start": "2529329",
    "end": "2536079"
  },
  {
    "text": "that's a lot of the code that had gone into stubby had actually informed some",
    "start": "2536079",
    "end": "2544869"
  },
  {
    "text": "of the design of speedy which was Google's HTTP replacements which",
    "start": "2544869",
    "end": "2552160"
  },
  {
    "text": "everyone when told Google Chrome Google running the internet it's not good but actually yeah no that is quite good yeah",
    "start": "2552160",
    "end": "2558490"
  },
  {
    "text": "ok let's adopt that and so then buddy became HTTP 2 which meant that the",
    "start": "2558490",
    "end": "2564039"
  },
  {
    "text": "internet protocol that everyone was using now had an awful lot of the code",
    "start": "2564039",
    "end": "2569410"
  },
  {
    "text": "that have come out of stubby to do with micro to do with multiplexing passing",
    "start": "2569410",
    "end": "2575319"
  },
  {
    "text": "messages backwards and forwards maintaining persistent connection http/2 has all that stuff and so Google",
    "start": "2575319",
    "end": "2581070"
  },
  {
    "text": "rebuilt stubby on top of HTTP - and they called it G RPC and the G does not stand",
    "start": "2581070",
    "end": "2587650"
  },
  {
    "text": "for Google no it doesn't it stands for a different thing with every different version of G RPC that comes out it's it",
    "start": "2587650",
    "end": "2593530"
  },
  {
    "text": "stood for glorious ginormous grand general but definitely definitely not",
    "start": "2593530",
    "end": "2601570"
  },
  {
    "text": "ever Google and G RPC is binary and it's fast and it runs over HTTP - and it was",
    "start": "2601570",
    "end": "2607690"
  },
  {
    "text": "open sourced by Google in 2015 and so now we can all use that and I'm going to show you a bit of GRP see in a moment",
    "start": "2607690",
    "end": "2616290"
  },
  {
    "start": "2615000",
    "end": "2736000"
  },
  {
    "text": "the other thing that we've got now is graph QL and I think somebody's going to",
    "start": "2616290",
    "end": "2621640"
  },
  {
    "text": "be talking about graphic UL today graph QL is it's like an evolution of HTTP",
    "start": "2621640",
    "end": "2629650"
  },
  {
    "text": "api's works particularly well for clients talking to for browser clients",
    "start": "2629650",
    "end": "2635560"
  },
  {
    "text": "talking to servers one of the issues with a standard restful api is you might",
    "start": "2635560",
    "end": "2643240"
  },
  {
    "text": "go to github and say i just want to know who owns that repo and github will say yes here is all the information about",
    "start": "2643240",
    "end": "2650110"
  },
  {
    "text": "that repo and you just throw most of it away and go right this is Dave's repo",
    "start": "2650110",
    "end": "2656620"
  },
  {
    "text": "and now I know who to go and hit graph QL attempts to address that and graph QL",
    "start": "2656620",
    "end": "2663100"
  },
  {
    "text": "was open source by Facebook in 2015 and it's now the standard way of interacting",
    "start": "2663100",
    "end": "2668560"
  },
  {
    "text": "with the Facebook API and it works really well for Facebook because if you just want to know someone's relationship",
    "start": "2668560",
    "end": "2674290"
  },
  {
    "text": "status which let's face it is what most people use Facebook for you can just",
    "start": "2674290",
    "end": "2679420"
  },
  {
    "text": "send a request to Facebook and say what's that person's relationship status and it will just send that one word back",
    "start": "2679420",
    "end": "2686610"
  },
  {
    "text": "and so graph QL is very good for public",
    "start": "2686610",
    "end": "2692140"
  },
  {
    "text": "api's for allowing people to request exactly the shape of the data that they want and to express complicated queries",
    "start": "2692140",
    "end": "2699790"
  },
  {
    "text": "so you can send a request that says give me all the the people in the staff",
    "start": "2699790",
    "end": "2705550"
  },
  {
    "text": "database whose job title is something to do with HR",
    "start": "2705550",
    "end": "2711250"
  },
  {
    "text": "graph QL I believe the idea with graph QL is you could tell it to serialize as",
    "start": "2711250",
    "end": "2716920"
  },
  {
    "text": "XML but everybody does it with Jason but it's very efficient because you get to specify which fields you want it's very",
    "start": "2716920",
    "end": "2724120"
  },
  {
    "text": "flexible for the people who are consuming it and if you are building",
    "start": "2724120",
    "end": "2729370"
  },
  {
    "text": "public api's and you want to give people that flexibility then graph QL is probably the current state of the art",
    "start": "2729370",
    "end": "2736800"
  },
  {
    "start": "2736000",
    "end": "2802000"
  },
  {
    "text": "there's also something new called our socket which I've been watching with interest and our socket came out of",
    "start": "2736800",
    "end": "2741910"
  },
  {
    "text": "Netflix again in 2015 who does reactive programming so observables streams",
    "start": "2741910",
    "end": "2748780"
  },
  {
    "text": "and/or rx or angular sort of if you're using angular you're doing reactive",
    "start": "2748780",
    "end": "2754300"
  },
  {
    "text": "programming whether you know it or not because underneath angular is all rxjs and everything else and our socket takes",
    "start": "2754300",
    "end": "2761080"
  },
  {
    "text": "that idea of reactive programming and applies it over your network it's a",
    "start": "2761080",
    "end": "2766540"
  },
  {
    "text": "lower level protocol than G RPC its OSI",
    "start": "2766540",
    "end": "2771670"
  },
  {
    "text": "layer 5 or 6 whereas G RPC because it's over HTTP 2 is OS 9 a level 7 but our",
    "start": "2771670",
    "end": "2779680"
  },
  {
    "text": "socket you create a stream between two machines and you can send messages",
    "start": "2779680",
    "end": "2785710"
  },
  {
    "text": "either in one direction or both directions over that stream and when you're dealing with those messages at",
    "start": "2785710",
    "end": "2792220"
  },
  {
    "text": "each end it's up to you how you deal with those but you can use a reactive",
    "start": "2792220",
    "end": "2799180"
  },
  {
    "text": "framework and observable or something else so our socket uses reactive stream",
    "start": "2799180",
    "end": "2805480"
  },
  {
    "start": "2802000",
    "end": "3310000"
  },
  {
    "text": "semantics it's lower level and there is an AR socket RPC framework on top of that which turns it into something like",
    "start": "2805480",
    "end": "2812760"
  },
  {
    "text": "G RPC so I'm going to very very quickly talk about the difference between that's",
    "start": "2812760",
    "end": "2820930"
  },
  {
    "text": "interesting that animated that so WCF I have been building for the last year in",
    "start": "2820930",
    "end": "2828070"
  },
  {
    "text": "my spare time a product called visual recode which Microsoft announced build",
    "start": "2828070",
    "end": "2833500"
  },
  {
    "text": "last year that they had finished adding new features to dotnet core which is the",
    "start": "2833500",
    "end": "2839380"
  },
  {
    "text": "new open source cross-platform version of.net and that in future net core",
    "start": "2839380",
    "end": "2845110"
  },
  {
    "text": "was going to be called dotnet and so the next version of.net core would be dotnet five and hundreds thousands of people in",
    "start": "2845110",
    "end": "2853090"
  },
  {
    "text": "enterprises who had built massive distributed systems using WCF said but",
    "start": "2853090",
    "end": "2858250"
  },
  {
    "text": "you haven't ported WCF to dotnet core and microsoft said no we haven't used gr pc and the world went how we can't use",
    "start": "2858250",
    "end": "2866590"
  },
  {
    "text": "to your pc everything's in WCF WCF is very structured you have interfaces and",
    "start": "2866590",
    "end": "2872100"
  },
  {
    "text": "contract declarations and everything else and so i did an experiment to see",
    "start": "2872100",
    "end": "2877630"
  },
  {
    "text": "whether I could use Roslyn to read the WCF code and generate the equivalent G RPC code and it turned out I could so",
    "start": "2877630",
    "end": "2884320"
  },
  {
    "text": "now that's a Visual Studio extension and it's going on sale hopefully this week I've just finished the trial thing",
    "start": "2884320",
    "end": "2890920"
  },
  {
    "text": "writing trial modes in software is really annoying I'm going to my software until you pay for it feels very",
    "start": "2890920",
    "end": "2896830"
  },
  {
    "text": "mean but WCF the thing with WCF it will allow interrupts with other systems",
    "start": "2896830",
    "end": "2902170"
  },
  {
    "text": "written in Java or Python or C or C++ but only if you used soap as I said the",
    "start": "2902170",
    "end": "2907630"
  },
  {
    "text": "net TCP encoding was proprietary and only work between dotnet systems and it",
    "start": "2907630",
    "end": "2914350"
  },
  {
    "text": "meant that you had to write your server in C sharp or vb.net there was not a lot",
    "start": "2914350",
    "end": "2919570"
  },
  {
    "text": "of flexibility in there you could use WCF to generate a client to talk to another server that was written in Java",
    "start": "2919570",
    "end": "2926109"
  },
  {
    "text": "as long as it published a would still file you could only run your WCF services and your net TCP WCF clients on",
    "start": "2926109",
    "end": "2934030"
  },
  {
    "text": "Windows because this was 20 mm soft and",
    "start": "2934030",
    "end": "2939840"
  },
  {
    "text": "it generated subclasses either from wisdom or if you using net TCP it would",
    "start": "2939840",
    "end": "2945310"
  },
  {
    "text": "just go in and look at the code gr PC which is the modern alternative and the one that Microsoft's are recommending",
    "start": "2945310",
    "end": "2951430"
  },
  {
    "text": "it's wire formats defaults to protobuf but you can customize it if you want to pass message pack messages over protobuf",
    "start": "2951430",
    "end": "2958630"
  },
  {
    "text": "you can do that out of the gr PC you can do that don't because it's insane and",
    "start": "2958630",
    "end": "2965100"
  },
  {
    "text": "protobuf is fine and why would you want to use anything else but you can if you want to gr PC supports C++ and Java and",
    "start": "2965100",
    "end": "2972490"
  },
  {
    "text": "Python it's completely cross-platform all of these systems can interrupt with each other all of them you can",
    "start": "2972490",
    "end": "2978580"
  },
  {
    "text": "Reiter client you can generate the base classes for a server using the proto buff compiler or for some languages",
    "start": "2978580",
    "end": "2984630"
  },
  {
    "text": "there are third-party open-source compilers so down the left hand side is",
    "start": "2984630",
    "end": "2990780"
  },
  {
    "text": "the official supported one so if you go to the gr PC repository on github all",
    "start": "2990780",
    "end": "2997000"
  },
  {
    "text": "those languages have official first party support and then down the right hand side you've got all the third party",
    "start": "2997000",
    "end": "3004740"
  },
  {
    "text": "people there's a rust implementation a Haskell implementation there's even a Perl implementation if you really must I",
    "start": "3004740",
    "end": "3012000"
  },
  {
    "text": "believe it's just one massive regular expression and don't ask whether it",
    "start": "3012000",
    "end": "3019440"
  },
  {
    "text": "works in Perl 6 I'm going to very very quickly so the difference and I'm going",
    "start": "3019440",
    "end": "3028680"
  },
  {
    "text": "to have to switch to duplicate and then I'm going to go to here so here we have",
    "start": "3028680",
    "end": "3037620"
  },
  {
    "text": "some WCF and I'm going to get rid of that and I'm going to make this bigger so this is a WCF contract and with WCF",
    "start": "3037620",
    "end": "3046110"
  },
  {
    "text": "the whole idea was that people who knew c-sharp should be able to do everything in c-sharp and never have to learn anything else which describe c-sharp",
    "start": "3046110",
    "end": "3053550"
  },
  {
    "text": "programmers really well or it used to we've got a lot better no really we have",
    "start": "3053550",
    "end": "3059300"
  },
  {
    "text": "we you had data contract so these defines your messages you had data contracts there like that and then you",
    "start": "3059300",
    "end": "3065070"
  },
  {
    "text": "had service contracts and your service contract was literally a c-sharp interface and then you would create an",
    "start": "3065070",
    "end": "3071970"
  },
  {
    "text": "implementation of that interface and if I go to they see we've got service contract and operation contract and",
    "start": "3071970",
    "end": "3078390"
  },
  {
    "text": "everything else everything outside of the WCF code was actually just your business logic and you would map it up",
    "start": "3078390",
    "end": "3084210"
  },
  {
    "text": "to that I was told I could do a couple of minutes over soon because the other",
    "start": "3084210",
    "end": "3089940"
  },
  {
    "text": "guy ran over so sorry Mike so yes",
    "start": "3089940",
    "end": "3096680"
  },
  {
    "text": "fundamentally when you define an API 90% of the code in that API is going to be",
    "start": "3096680",
    "end": "3102450"
  },
  {
    "text": "your code that actually does stuff and only 5% of it is going to be the bit that actually either communicates with",
    "start": "3102450",
    "end": "3109530"
  },
  {
    "text": "another API or exposes your service as API and if you mix those two things",
    "start": "3109530",
    "end": "3115319"
  },
  {
    "text": "together then you're doing it wrong which i think is the big takeaway WCF made it very easy not to mix those two",
    "start": "3115319",
    "end": "3121859"
  },
  {
    "text": "things together which made it very easy to write a system that would take that",
    "start": "3121859",
    "end": "3128640"
  },
  {
    "text": "WCF code not now and turn it into the",
    "start": "3128640",
    "end": "3134099"
  },
  {
    "text": "equivalent protobuf code so that is literally the exact prototype resent ation of the service contract that you",
    "start": "3134099",
    "end": "3142049"
  },
  {
    "text": "saw previously and i have successfully managed to write a system that takes WCF",
    "start": "3142049",
    "end": "3148559"
  },
  {
    "text": "api and turns it into a G RPC API and having done that I'm moving on to taking",
    "start": "3148559",
    "end": "3155759"
  },
  {
    "text": "a WCF API and turning it into JSON API with swagger and everything else and I'm",
    "start": "3155759",
    "end": "3164489"
  },
  {
    "text": "doing a panel later on where I believe we'll be having a brief discussion on this problem of API standards chasing",
    "start": "3164489",
    "end": "3171150"
  },
  {
    "text": "changing over time and how you can migrate from one to the other with minimal disruption to your business so",
    "start": "3171150",
    "end": "3178349"
  },
  {
    "text": "that did go very long and I am very sorry and let's just go back to duplicating to",
    "start": "3178349",
    "end": "3188249"
  },
  {
    "text": "extending which should get that onto there and you can see my lovely desktop",
    "start": "3188249",
    "end": "3198319"
  },
  {
    "text": "there we go so yes I haven't got",
    "start": "3198319",
    "end": "3203640"
  },
  {
    "text": "something for those but just briefly so the the future of the API the things that are going to be affecting this in",
    "start": "3203640",
    "end": "3210059"
  },
  {
    "text": "the very near future we now have 5g networks those are starting to roll out across the world and so mobile devices",
    "start": "3210059",
    "end": "3218309"
  },
  {
    "text": "we're going to have more connectivity we're going to have more services being used more API is being built and",
    "start": "3218309",
    "end": "3224039"
  },
  {
    "text": "unconsumed satellite internet Elon Musk is gradually blanking out the night sky",
    "start": "3224039",
    "end": "3229049"
  },
  {
    "text": "with his satellites which are going to introduce latency issues and everything else we've got a whole swathe of new",
    "start": "3229049",
    "end": "3236489"
  },
  {
    "text": "devices coming along I've got a SmartWatch on here that's talking to api's on my phone over Bluetooth mixed",
    "start": "3236489",
    "end": "3243539"
  },
  {
    "text": "reality we're all going to be war with augmented reality sunglasses on in ten years time and those are going to be",
    "start": "3243539",
    "end": "3250190"
  },
  {
    "text": "constantly communicating with various servers to overlay advertisements on the real world we've got voice api's when",
    "start": "3250190",
    "end": "3258619"
  },
  {
    "text": "you talk to a lexer or Google home you are effectively interacting with an API using your voice and we've got the",
    "start": "3258619",
    "end": "3264589"
  },
  {
    "text": "Internet of Things which is lots of tiny little devices with very low power running on batteries the size of a pound",
    "start": "3264589",
    "end": "3271009"
  },
  {
    "text": "coin and we have those talking over api's to the cloud and so that's",
    "start": "3271009",
    "end": "3278390"
  },
  {
    "text": "something we've got to deal with as well and so yes this is where we are this is",
    "start": "3278390",
    "end": "3285470"
  },
  {
    "text": "where we're going to be going if you're not building api's right this moment you are probably going to be very soon",
    "start": "3285470",
    "end": "3292609"
  },
  {
    "text": "because it is becoming the standard way someone will create a user interface but the majority of us will be creating",
    "start": "3292609",
    "end": "3299089"
  },
  {
    "text": "api's for those user interfaces to consume and that is the end of my brief history of the future of the API thank",
    "start": "3299089",
    "end": "3305480"
  },
  {
    "text": "you very much and I hope you enjoy the rest of your date [Applause]",
    "start": "3305480",
    "end": "3312090"
  }
]