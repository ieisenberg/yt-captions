[
  {
    "start": "0",
    "end": "91000"
  },
  {
    "text": "it's great to be back in New York I grew up in New York I went to Columbia so this is home and thank you all for",
    "start": "3900",
    "end": "11969"
  },
  {
    "text": "coming today I'm gonna be talking about AP is this is very much not a typical",
    "start": "11969",
    "end": "18150"
  },
  {
    "text": "Josh talk anyone who has seen me talk before knows that usually you know I've",
    "start": "18150",
    "end": "23490"
  },
  {
    "text": "got code on every slide and usually a lot of it's Java code this talk has only",
    "start": "23490",
    "end": "29189"
  },
  {
    "text": "one slide with code and it's 70 year old assembly language it's not actually a",
    "start": "29189",
    "end": "36210"
  },
  {
    "text": "brief talk let's see I look at the clock yeah so I've got 41 minutes to do it and",
    "start": "36210",
    "end": "41700"
  },
  {
    "text": "you know it was originally an hour talk we'll see how it goes so api's a while ago some guy asked me",
    "start": "41700",
    "end": "51480"
  },
  {
    "text": "hey how did api's develop in the history of programming ok so it was a federal",
    "start": "51480",
    "end": "58200"
  },
  {
    "text": "judge who asked me you know in this interrogatory in the oracle v google trial but you have to admit it's a great",
    "start": "58200",
    "end": "64680"
  },
  {
    "text": "question right you know I answered it as best I could at the time but I realized you know this is a piece of history and",
    "start": "64680",
    "end": "71400"
  },
  {
    "text": "I don't really know the answer and I studied it and the result is this talk the talk is divided into three parts the",
    "start": "71400",
    "end": "78750"
  },
  {
    "text": "first to directly answer the judges question and the last one is a discussion of the current legal status",
    "start": "78750",
    "end": "85500"
  },
  {
    "text": "of api's and how it affects all of us in the software field so first let's talk",
    "start": "85500",
    "end": "93090"
  },
  {
    "start": "91000",
    "end": "91000"
  },
  {
    "text": "about who entered sorry who invented a subroutine library because he can't have",
    "start": "93090",
    "end": "98159"
  },
  {
    "text": "api's without subroutine libraries so the term first appeared in goldstein and",
    "start": "98159",
    "end": "104280"
  },
  {
    "text": "von neumann's planning and coding of problems for an electronic computing instrument from the advanced a the",
    "start": "104280",
    "end": "110729"
  },
  {
    "text": "Institute for Advanced Study at Princeton in 1948 and that's before any",
    "start": "110729",
    "end": "116010"
  },
  {
    "text": "general-purpose computers had ever been built it's the first account of",
    "start": "116010",
    "end": "121229"
  },
  {
    "text": "programming methodology as people all over the country were preparing all over",
    "start": "121229",
    "end": "126659"
  },
  {
    "text": "the world were preparing to build computers after World War two and this",
    "start": "126659",
    "end": "132090"
  },
  {
    "text": "this report basically made its way to all the labs that were trying to build computers",
    "start": "132090",
    "end": "137280"
  },
  {
    "text": "was enormous ly influential and it does contain this key idea that most programs",
    "start": "137280",
    "end": "142590"
  },
  {
    "text": "will make use of common operations and a library of subroutines reduces the",
    "start": "142590",
    "end": "147750"
  },
  {
    "text": "amount of new code you'll have to write when you're writing a program and also it makes it much likely much more likely",
    "start": "147750",
    "end": "153959"
  },
  {
    "text": "that the program will be free of bugs right because you're using tried and tested code and and here it is in black",
    "start": "153959",
    "end": "162390"
  },
  {
    "text": "and previously white and you you probably can't read all this stuff but",
    "start": "162390",
    "end": "169080"
  },
  {
    "text": "you know simple and composite problems routines and subroutines changes",
    "start": "169080",
    "end": "174690"
  },
  {
    "text": "required when using subroutines they were all over subroutines in here so it seems that Goldstein and von Neumann",
    "start": "174690",
    "end": "182550"
  },
  {
    "text": "invented the subroutine library right case closed except the ACM would beg to differ",
    "start": "182550",
    "end": "189510"
  },
  {
    "text": "because in 1967 the second-ever Turing award sorry let's try that again",
    "start": "189510",
    "end": "195660"
  },
  {
    "text": "the second-ever Turing award was awarded to Morris V Wilks and the award says he",
    "start": "195660",
    "end": "202620"
  },
  {
    "text": "is also known as the author with wheeler and Gil of a volume on preparation of programs for electronic digital",
    "start": "202620",
    "end": "208950"
  },
  {
    "text": "computers in 1951 in which program libraries were effectively introduced so",
    "start": "208950",
    "end": "214860"
  },
  {
    "text": "the second-ever Turing award was given to Wilkes for introducing subroutine",
    "start": "214860",
    "end": "221250"
  },
  {
    "text": "libraries what gives why didn't you know Goldstein and von",
    "start": "221250",
    "end": "227489"
  },
  {
    "text": "Neumann get the award if they invented it well the answer is pretty simple actually they were peddling vaporware it's true",
    "start": "227489",
    "end": "235590"
  },
  {
    "text": "so he turns out the Martin Campbell Kelly wrote a lovely history of the",
    "start": "235590",
    "end": "241260"
  },
  {
    "text": "first few years of programming called from theory to practice the invention of programming 1947 to 1951 and in it he",
    "start": "241260",
    "end": "248370"
  },
  {
    "text": "said Goldstein and von neumann's preparatory routine would have required extensive operator intervention and it",
    "start": "248370",
    "end": "255239"
  },
  {
    "text": "is difficult to imagine that it would ever have worked in practice in other words to get a program that used subroutines to actually work would have",
    "start": "255239",
    "end": "261780"
  },
  {
    "text": "each time you ran the program involved a lot of work on the part of the person who fed the program to the computer and",
    "start": "261780",
    "end": "266880"
  },
  {
    "text": "it just you know it was impractical it was like they had this idea but they didn't know how to make it work",
    "start": "266880",
    "end": "273120"
  },
  {
    "text": "but Wilks and wheelers idea was was the real thing and here it is",
    "start": "273120",
    "end": "278380"
  },
  {
    "text": "they built a computer called ed Zack at the University of Cambridge mathematical laboratory and I'll give you a few of",
    "start": "278380",
    "end": "284350"
  },
  {
    "text": "the vital stats on Ed sack it was the world's first functioning stored programming computer it came to life on",
    "start": "284350",
    "end": "291310"
  },
  {
    "start": "286000",
    "end": "286000"
  },
  {
    "text": "May 6 1949 and it was immediately useful as a research tool throughout the",
    "start": "291310",
    "end": "297070"
  },
  {
    "text": "university it ran 650 instructions or orders as they were known per second blisteringly",
    "start": "297070",
    "end": "304270"
  },
  {
    "text": "fast right 650 instructions per second he initially it had 512 whole words of",
    "start": "304270",
    "end": "311500"
  },
  {
    "text": "memory eventually they expanded that to a K and they were 17 bit words don't ask",
    "start": "311500",
    "end": "317830"
  },
  {
    "text": "why I dunno but you don't want to and the memory was stored in ultrasonic",
    "start": "317830",
    "end": "326200"
  },
  {
    "text": "mercury delay lines there were these big tanks of mercury and vibrations would go through the tanks and then you know be",
    "start": "326200",
    "end": "332710"
  },
  {
    "text": "reapplied at the other end and you would just sort of keep the mercury moving to keep the bits in memory you know this is",
    "start": "332710",
    "end": "339130"
  },
  {
    "text": "finicky technology and also a little bit dangerous input was paper tape the output was a teleprinter it ran at a",
    "start": "339130",
    "end": "345970"
  },
  {
    "text": "blistering 6 and 2/3 characters per second so you know never complain about your network speeds because that's what",
    "start": "345970",
    "end": "352600"
  },
  {
    "text": "I had to put up with then it used 3,000 vacuum tubes it used 12 kilowatts of",
    "start": "352600",
    "end": "358720"
  },
  {
    "text": "power and it occupied an entire 15 by 12 room so in in round numbers the thing",
    "start": "358720",
    "end": "366790"
  },
  {
    "text": "was I guess 4 million times slower than a modern PC it had 4 million times less",
    "start": "366790",
    "end": "373000"
  },
  {
    "text": "memory than a modern PC it used a thousand times the power and it was the fella that no sorry used a hundred",
    "start": "373000",
    "end": "380610"
  },
  {
    "text": "hundred times the power and it was a thousand times the size so you know it",
    "start": "380610",
    "end": "385930"
  },
  {
    "text": "was a monster and a pig but it was like it changed the world that the name edsac",
    "start": "385930",
    "end": "393820"
  },
  {
    "text": "is an homage sorry the name edy vac yeah it's like is an homage to edvac edvac is",
    "start": "393820",
    "end": "401230"
  },
  {
    "text": "the machine that Goldstein and von Neumann we're working on and they didn't finish it until 1951 three years later and it",
    "start": "401230",
    "end": "409210"
  },
  {
    "text": "only worked on a limited basis initially so what gives you know given that the Americans had a two-year head start over",
    "start": "409210",
    "end": "415810"
  },
  {
    "text": "the Cambridge team why did the Cambridge team finish their machines so much faster well in a word simplicity he kept",
    "start": "415810",
    "end": "424569"
  },
  {
    "text": "it simple once again quoting from camel Kelly's book the reason for the rapid completion",
    "start": "424569",
    "end": "430840"
  },
  {
    "text": "which was well ahead of any American computer was that Wilkes wanted to have a machine as practical computing",
    "start": "430840",
    "end": "436150"
  },
  {
    "text": "instrument rather than a machine of the highest technological performance so you know first you make it work then you",
    "start": "436150",
    "end": "443110"
  },
  {
    "text": "make it fast to this end he kept the EDSAC simple conservative in electronics and",
    "start": "443110",
    "end": "448720"
  },
  {
    "text": "conventional in its architecture and then Andrew Herbert who led a project to",
    "start": "448720",
    "end": "454210"
  },
  {
    "text": "restore the EDSAC and make it work again recently said you know he added that the",
    "start": "454210",
    "end": "460659"
  },
  {
    "text": "refinements came later the sequence of diagrams over the next five years shows",
    "start": "460659",
    "end": "465759"
  },
  {
    "text": "that after they got it running they did all sorts of stuff to make it faster but they kept it simple and got it running",
    "start": "465759",
    "end": "471849"
  },
  {
    "text": "and put it into production right away and by 1948 they were able to do this they here's the first program that was",
    "start": "471849",
    "end": "479139"
  },
  {
    "text": "ever run on EDSAC actually I don't have the program on the slide but this is the",
    "start": "479139",
    "end": "484960"
  },
  {
    "text": "actual note from the lab notebook and it says a machine in operation for the",
    "start": "484960",
    "end": "491979"
  },
  {
    "text": "first time May 6th 1949 printed table of squares 0 to 99 time for program 2",
    "start": "491979",
    "end": "500409"
  },
  {
    "text": "minutes and 35 seconds but that was fast because how did you do a table of squares before that you did it by hand",
    "start": "500409",
    "end": "507219"
  },
  {
    "text": "or with the mechanical calculator so you know would have been half an hour's work so this was you know it was earth-shattering at the time that the",
    "start": "507219",
    "end": "515770"
  },
  {
    "text": "second program which was you know written just a few days later predicted the first hundred and seventy Prime's I",
    "start": "515770",
    "end": "522039"
  },
  {
    "text": "mean it was written by Morris Wilkes himself the first one was written by his PhD student whose name was David wheeler",
    "start": "522039",
    "end": "530459"
  },
  {
    "start": "530000",
    "end": "530000"
  },
  {
    "text": "simple toy programs like that didn't need much in the way of an architecture",
    "start": "530459",
    "end": "536860"
  },
  {
    "text": "they didn't need subroutine libraries so the architecture was just a simple set of initial orders which in in modern",
    "start": "536860",
    "end": "544060"
  },
  {
    "text": "terminology would be called the bootloader and it was stored on an electromechanical telephone switch the",
    "start": "544060",
    "end": "550750"
  },
  {
    "text": "whole machine was electronic except this switch which contained that the bootloader and it simply read the",
    "start": "550750",
    "end": "557470"
  },
  {
    "text": "program off the paper tape put it into the mercury delay lines and then started execution at the location immediately",
    "start": "557470",
    "end": "564100"
  },
  {
    "text": "following the bootloader the bootloader took up the first 30 words of and by the",
    "start": "564100",
    "end": "569920"
  },
  {
    "text": "way who would press a button like on the console and it would copy the the first",
    "start": "569920",
    "end": "575470"
  },
  {
    "text": "30 words the bootloader from the phone switch into the mercury delay lines run it to read in the tape and then continue",
    "start": "575470",
    "end": "582730"
  },
  {
    "text": "running the program that was read in from the tape simple right it turns out",
    "start": "582730",
    "end": "587830"
  },
  {
    "text": "that technically speaking I suppose the initial orders were an assembler because",
    "start": "587830",
    "end": "593350"
  },
  {
    "text": "the tape did not contain binary code wheeler and Wilkes knew that humans would be making these tapes and they",
    "start": "593350",
    "end": "599170"
  },
  {
    "text": "wanted the machine to be kind of human-centric so they decreed that humans could always program in assembly",
    "start": "599170",
    "end": "605530"
  },
  {
    "text": "language sort of mnemonic codes rather than actual binary so you never actually",
    "start": "605530",
    "end": "610600"
  },
  {
    "text": "had to use the binary and wheeler wrote",
    "start": "610600",
    "end": "615610"
  },
  {
    "text": "the initial orders they were as far as they went but you know just a few months",
    "start": "615610",
    "end": "624040"
  },
  {
    "text": "later Wilkes tried to write his first real program and here's a little quote",
    "start": "624040",
    "end": "629380"
  },
  {
    "text": "from Wilkes memoirs here's what he had to say about it by June 1949 I was",
    "start": "629380",
    "end": "635170"
  },
  {
    "text": "trying to get working my first non-trivial program which was for the numerical integration of Aries differential equation he was a rate",
    "start": "635170",
    "end": "643630"
  },
  {
    "text": "radar engineer in the war and he you know was physicist and did computations of waves bouncing in the ionosphere and",
    "start": "643630",
    "end": "649780"
  },
  {
    "text": "this this integral this differential equation apparently tells you about that so it",
    "start": "649780",
    "end": "654790"
  },
  {
    "text": "was on one of my journeys between the EDSAC room and the punching equipment that hesitating at the angles of the",
    "start": "654790",
    "end": "661870"
  },
  {
    "text": "stairs the realization came over me that a good part of the remainder of my life was going to be spent finding errors in",
    "start": "661870",
    "end": "669820"
  },
  {
    "text": "my programs this is the first program ever",
    "start": "669820",
    "end": "677560"
  },
  {
    "text": "written on the first computer ever built that amazingly deep insight you know",
    "start": "677560",
    "end": "684460"
  },
  {
    "text": "given that this guy was doing something entirely new but I think we all know",
    "start": "684460",
    "end": "690010"
  },
  {
    "text": "that he was absolutely right but Wilkes did see high-quality",
    "start": "690010",
    "end": "695050"
  },
  {
    "text": "subroutine libraries as a partial fix for this problem he thought basically you know if you don't have to debug every little thing",
    "start": "695050",
    "end": "701230"
  },
  {
    "text": "because you can rely on a library of high quality code then it'll be at least",
    "start": "701230",
    "end": "706360"
  },
  {
    "text": "a bit easier to write correct efficient code so he gave the task to his PhD",
    "start": "706360",
    "end": "712660"
  },
  {
    "text": "student who was David wheeler and wheelers architecture for subroutines",
    "start": "712660",
    "end": "718240"
  },
  {
    "start": "715000",
    "end": "715000"
  },
  {
    "text": "was finished he basically spent the summer writing it so he finished it that September and he added what he called",
    "start": "718240",
    "end": "726070"
  },
  {
    "text": "coordinating orders to these initial orders when you hear order think instruction so what he did was he had",
    "start": "726070",
    "end": "732970"
  },
  {
    "text": "and sort of fake op codes which were instructions not to the computer but to",
    "start": "732970",
    "end": "738310"
  },
  {
    "text": "the compiler that is to this to the initial orders sort of telling you you",
    "start": "738310",
    "end": "744760"
  },
  {
    "text": "know hey this subroutine is being relocated here you know hey we're invoking this subroutine here and doing",
    "start": "744760",
    "end": "752380"
  },
  {
    "text": "parameter passing all the things that you have to do to basically invoke subroutines from code and his system was",
    "start": "752380",
    "end": "761350"
  },
  {
    "text": "a masterpiece it required no manual intervention whatsoever the program consisted as it says of the the main",
    "start": "761350",
    "end": "769510"
  },
  {
    "text": "program kind of intermixed with these coordinating orders followed by the",
    "start": "769510",
    "end": "775300"
  },
  {
    "text": "subroutines all on a single tape and and this magic little program that made it",
    "start": "775300",
    "end": "781750"
  },
  {
    "text": "all work was only 42 instructions long which given that the simple boot loader was 30 instructions is is amazing like",
    "start": "781750",
    "end": "789310"
  },
  {
    "text": "how did he do this and why well you know he did it by working very very hard and",
    "start": "789310",
    "end": "795610"
  },
  {
    "text": "he did it because he had no choice he was constrained by the size of the phone switch right he only had 42 instructions",
    "start": "795610",
    "end": "802690"
  },
  {
    "text": "to work with so did the best that he could using those 42 instructions and and Wilkes his",
    "start": "802690",
    "end": "807720"
  },
  {
    "text": "advisor who was generally not prone to overstatement described it as a tour de force of ingenuity and he can actually",
    "start": "807720",
    "end": "814829"
  },
  {
    "text": "read this code in a book that I'll discuss later if you're if you're curious um here is wheeler a subroutine",
    "start": "814829",
    "end": "821250"
  },
  {
    "start": "819000",
    "end": "819000"
  },
  {
    "text": "linkage technique called the wheeler jump I'm not gonna discuss it in any detail because I don't have time but I",
    "start": "821250",
    "end": "827519"
  },
  {
    "text": "will tell you a couple things about it first of all it did allow for",
    "start": "827519",
    "end": "832880"
  },
  {
    "text": "subroutines to call other subroutines to arbitrary depths which you know may sound like an",
    "start": "832880",
    "end": "838560"
  },
  {
    "text": "obvious thing to do but you know who here has programmed the basic language anyone yeah basic doesn't let you do it",
    "start": "838560",
    "end": "845519"
  },
  {
    "text": "go sub before return in line you know 37 that was an error message so it did not",
    "start": "845519",
    "end": "852839"
  },
  {
    "text": "allow for recursion a method could not call itself that didn't become possible until basically a decade later in in",
    "start": "852839",
    "end": "859709"
  },
  {
    "text": "Algol and Lisp it did allow for higher",
    "start": "859709",
    "end": "866040"
  },
  {
    "text": "order functions you could pass a function to a function because when they were designing this they knew they were",
    "start": "866040",
    "end": "871620"
  },
  {
    "text": "gonna want to like solve differential equations and do numerical integration and in order to do that you have to pass",
    "start": "871620",
    "end": "877860"
  },
  {
    "text": "functions to functions so it was it was an amazing piece of work for its time it's overly tricky by modern standards",
    "start": "877860",
    "end": "884910"
  },
  {
    "text": "it turns out this is self-modifying code now that would be a security nightmare but at the time it was a clever solution",
    "start": "884910",
    "end": "891959"
  },
  {
    "text": "to a difficult problem here's what the EDSAC subroutine library itself looked",
    "start": "891959",
    "end": "898170"
  },
  {
    "start": "895000",
    "end": "895000"
  },
  {
    "text": "like sorry I keep hitting the wrong button anyway it was in fact a library see here",
    "start": "898170",
    "end": "904139"
  },
  {
    "text": "it is in this little thing each drawer contains a bunch of tapes you know the",
    "start": "904139",
    "end": "909329"
  },
  {
    "text": "top one contains arithmetic subroutines the next one is complex arithmetic subroutines and this woman here is the",
    "start": "909329",
    "end": "916230"
  },
  {
    "text": "computer operator and she basically takes the the tapes of the main programs",
    "start": "916230",
    "end": "921779"
  },
  {
    "text": "and the tapes of the subroutines and using automatic punching equipment kind of combines them into a single tape",
    "start": "921779",
    "end": "927480"
  },
  {
    "text": "that's then gonna be fed to the computer and here's another view of the EDSAC",
    "start": "927480",
    "end": "932610"
  },
  {
    "text": "subroutine library this is kind of a logical view and it contains of the the the labels on each drawer",
    "start": "932610",
    "end": "940919"
  },
  {
    "text": "floating-point arithmetic complex arithmetic debugging division Exponential's functions differential",
    "start": "940919",
    "end": "948209"
  },
  {
    "text": "equations special functions power series logarithms miscellaneous print and layout which is output quadrature which",
    "start": "948209",
    "end": "954809"
  },
  {
    "text": "is which is you know numerical integration input and through trig",
    "start": "954809",
    "end": "960299"
  },
  {
    "text": "functions counting operations vectors and matrices what what an astonishing amount of coverage for the first",
    "start": "960299",
    "end": "967859"
  },
  {
    "text": "subroutine library ever written and and the whole thing was written you know in under a year by a tiny little team of",
    "start": "967859",
    "end": "974879"
  },
  {
    "text": "you know one professor and a few graduate students this is the book that introduced subroutine libraries to the",
    "start": "974879",
    "end": "982079"
  },
  {
    "start": "978000",
    "end": "978000"
  },
  {
    "text": "world it's called it's got a long name the preparation of programs for an",
    "start": "982079",
    "end": "987509"
  },
  {
    "text": "electronic digital computer with reference to edsac and the use of a",
    "start": "987509",
    "end": "993809"
  },
  {
    "text": "library of subroutines so they knew right up front that the subroutine library was the most important thing in this book and they put it in the title",
    "start": "993809",
    "end": "1000499"
  },
  {
    "text": "this was the world's first text on programming this was it and for the next decade it was like the only text on",
    "start": "1000499",
    "end": "1007369"
  },
  {
    "text": "program and it was you know as important as any programming book is now though it is largely forgotten in this era it was",
    "start": "1007369",
    "end": "1015769"
  },
  {
    "text": "known as wwg back then in the same way as we call the carnahan and ritchie book on the c programming language KN are now",
    "start": "1015769",
    "end": "1021979"
  },
  {
    "text": "you know this was it this was the bomb this was the book on programming for basically the rest of the 1950s and it",
    "start": "1021979",
    "end": "1029779"
  },
  {
    "text": "wasn't really supplanted until sort of higher you know programming languages",
    "start": "1029779",
    "end": "1035808"
  },
  {
    "text": "like Fortran became the order of the day in the late 1950s we were presented the",
    "start": "1035809",
    "end": "1044389"
  },
  {
    "start": "1043000",
    "end": "1043000"
  },
  {
    "text": "key ideas from this book and the related research in a 1952 paper at what would",
    "start": "1044389",
    "end": "1049549"
  },
  {
    "text": "become Carnegie Mellon University in Pittsburgh and the paper described all",
    "start": "1049549",
    "end": "1054799"
  },
  {
    "text": "of these concepts the subroutine the subroutine library generality versus performance trade-offs in designing",
    "start": "1054799",
    "end": "1060470"
  },
  {
    "text": "subroutine libraries the importance and difficulty of documenting a library information hiding dynamic debuggers and",
    "start": "1060470",
    "end": "1067279"
  },
  {
    "text": "higher-order functions and the astonishing thing is they built these things you know this wasn't just these are things we might do these are",
    "start": "1067279",
    "end": "1075240"
  },
  {
    "text": "what they had done in the past couple years here's a remarkable passage from",
    "start": "1075240",
    "end": "1080490"
  },
  {
    "text": "the paper that I'm gonna read to you in its entirety it should be pointed out that the preparation of a library of",
    "start": "1080490",
    "end": "1086040"
  },
  {
    "text": "subroutines requires considerable amount of effort this is much greater than the effort merely required to code the",
    "start": "1086040",
    "end": "1092970"
  },
  {
    "text": "subroutine in its simplest form it will usually be necessary to code it in the library standard form and this may",
    "start": "1092970",
    "end": "1098520"
  },
  {
    "text": "detract from its efficiency in time and space it may be desirable to code it in",
    "start": "1098520",
    "end": "1103740"
  },
  {
    "text": "such a manner that the operation is generalized to some extent however even after it has been coded and tested there",
    "start": "1103740",
    "end": "1111390"
  },
  {
    "text": "still remains the considerable task of writing a description so that people not acquainted with the interior coding can",
    "start": "1111390",
    "end": "1117600"
  },
  {
    "text": "nevertheless use it easily this last task may be the most difficult this was",
    "start": "1117600",
    "end": "1125070"
  },
  {
    "text": "in 1952 you know it's just amazing to me how much they knew back then 42 years",
    "start": "1125070",
    "end": "1132420"
  },
  {
    "text": "later David Parnas wrote this he said reuse is something that is far easier to",
    "start": "1132420",
    "end": "1139020"
  },
  {
    "text": "say than to do doing it requires both good design and very good documentation even when we see good design which is",
    "start": "1139020",
    "end": "1146340"
  },
  {
    "text": "still infrequently we won't see the components reused without good documentation and that was still news to",
    "start": "1146340",
    "end": "1152520"
  },
  {
    "text": "everybody in 1994 you know even though it's precisely what Wheeler said in 1952",
    "start": "1152520",
    "end": "1159950"
  },
  {
    "text": "here's another remarkable passage this is the conclusion of the paper he says the primary objectives to be",
    "start": "1159950",
    "end": "1166770"
  },
  {
    "text": "borne in mind when constructing subroutine libraries are simplicity of use correctness of codes and accuracy of",
    "start": "1166770",
    "end": "1173640"
  },
  {
    "text": "description all complexity should if possible be buried out of sight there's",
    "start": "1173640",
    "end": "1181020"
  },
  {
    "text": "a lot going on in that one sentence here's something that I wrote in 2006 at",
    "start": "1181020",
    "end": "1186390"
  },
  {
    "text": "an oops luck keynote called how to design a good API and why it matters API",
    "start": "1186390",
    "end": "1191490"
  },
  {
    "text": "should be easy to use and hard to misuse it should be easy to do simple things possible to do complex things and",
    "start": "1191490",
    "end": "1196679"
  },
  {
    "text": "impossible or at least difficult to do wrong things documentation matters no matter how good",
    "start": "1196679",
    "end": "1201900"
  },
  {
    "text": "an API it won't get used without good documentation minimize accessibility when in doubt make it private so those are exactly the",
    "start": "1201900",
    "end": "1209100"
  },
  {
    "text": "same ideas that were in the conclusion of this 1952 paper and in addition to",
    "start": "1209100",
    "end": "1216450"
  },
  {
    "text": "its prescient wisdom there's one more truly remarkable thing about this paper",
    "start": "1216450",
    "end": "1221720"
  },
  {
    "text": "it was only two pages alone that's it this this is the whole paper and by the",
    "start": "1221720",
    "end": "1228330"
  },
  {
    "text": "way I found a typo in it but you know I stand in awe of this paper the amount of",
    "start": "1228330",
    "end": "1235290"
  },
  {
    "text": "material that he was able to cram into these two pages is truly remarkable and",
    "start": "1235290",
    "end": "1240390"
  },
  {
    "text": "almost all of it is still of value today I'll post the link to the PDF in case",
    "start": "1240390",
    "end": "1247170"
  },
  {
    "text": "you guys want to read it and I recommend that you do it's good reading so at this",
    "start": "1247170",
    "end": "1253290"
  },
  {
    "start": "1252000",
    "end": "1252000"
  },
  {
    "text": "point I think it's safe to say that we know who the inventors of the subroutine",
    "start": "1253290",
    "end": "1258630"
  },
  {
    "text": "library are that the primary inventor is David wheeler and you know I think that that is that there's a little doubt but",
    "start": "1258630",
    "end": "1265590"
  },
  {
    "text": "what about api's as opposed to subroutine libraries why didn't Wilson wheeler discuss api's",
    "start": "1265590",
    "end": "1272130"
  },
  {
    "text": "as a separate entity well basically because in those days the two things a",
    "start": "1272130",
    "end": "1277860"
  },
  {
    "text": "subroutine library and an API were isomorphic you know there was only one",
    "start": "1277860",
    "end": "1283920"
  },
  {
    "text": "machine architecture because this was the first machine ever built and in fact there was only one machine because this",
    "start": "1283920",
    "end": "1290700"
  },
  {
    "text": "work was the first machine ever built so the notion of portability didn't exist you know it's not like you take a",
    "start": "1290700",
    "end": "1296730"
  },
  {
    "text": "program written on one system and run it on another system with the same API you",
    "start": "1296730",
    "end": "1302970"
  },
  {
    "text": "know and there were no legacy programs cuz there were no programs the notion of",
    "start": "1302970",
    "end": "1308910"
  },
  {
    "text": "backward compatibility didn't exist because backward compatible with what so",
    "start": "1308910",
    "end": "1314280"
  },
  {
    "text": "there was basically no reason for them to discuss the API separately from the",
    "start": "1314280",
    "end": "1320790"
  },
  {
    "text": "library they were one in the same back in those days but I think it's clear from that two-page paper that wheeler",
    "start": "1320790",
    "end": "1326250"
  },
  {
    "text": "wrote that they really did understand quite well the principles of API design even back before they'd come up with the",
    "start": "1326250",
    "end": "1333510"
  },
  {
    "text": "notion of an API as a free-standing entity the field progressed and then existing",
    "start": "1333510",
    "end": "1341710"
  },
  {
    "text": "subroutine libraries had to be re-implemented why well new hardware was built like they did a new version of the",
    "start": "1341710",
    "end": "1348460"
  },
  {
    "text": "EDSAC machine and they basically you know ported the the old libraries to the",
    "start": "1348460",
    "end": "1353470"
  },
  {
    "text": "new machine to run more quickly using the new instructions on the new machine and new algorithms were devised so you",
    "start": "1353470",
    "end": "1360730"
  },
  {
    "text": "could take the the old api's and you know do things like matrix multiplication faster using new",
    "start": "1360730",
    "end": "1366850"
  },
  {
    "text": "algorithms for matrix multiplication and and so on and these things gave life to",
    "start": "1366850",
    "end": "1372850"
  },
  {
    "text": "AP is independent of the underlying subroutine libraries you know as soon as you start reimplemented an api then the",
    "start": "1372850",
    "end": "1379810"
  },
  {
    "text": "api is a separate thing from the library it isn't just sort of your view into the library as far as the term api I don't",
    "start": "1379810",
    "end": "1391930"
  },
  {
    "text": "think we started using it until 1968 I mean this represents independent",
    "start": "1391930",
    "end": "1397120"
  },
  {
    "text": "research on on my part you know I when I looked it up like a couple years ago",
    "start": "1397120",
    "end": "1402850"
  },
  {
    "text": "Webster's said that term came from you know the late 70s and I said that can't be possible",
    "start": "1402850",
    "end": "1408400"
  },
  {
    "text": "and I did a literature search this was the earliest paper that I could find that actually used the term it's called",
    "start": "1408400",
    "end": "1415120"
  },
  {
    "text": "data structures and techniques for remote computer graphics and it's by Ira cotton and Frank Greatorex and actually",
    "start": "1415120",
    "end": "1422800"
  },
  {
    "text": "went and talked to ira cotton Frank is no longer alive IRA was a student of mmm",
    "start": "1422800",
    "end": "1431320"
  },
  {
    "text": "I forget anyway I talked to IRA and I said you know hey um did you guys come up with the term API and he said no no",
    "start": "1431320",
    "end": "1438940"
  },
  {
    "text": "no we didn't know and I said but it's mentioned in this 1968 paper and he said oh is it let me see you know yeah I",
    "start": "1438940",
    "end": "1444610"
  },
  {
    "text": "guess we came up with it and and I told",
    "start": "1444610",
    "end": "1450340"
  },
  {
    "text": "Miriam Webster and now 1968 is listed as their earliest citation so this is this is the first use of the term let's go a",
    "start": "1450340",
    "end": "1457570"
  },
  {
    "text": "little deeper into what this paper has to say first it dances around the term",
    "start": "1457570",
    "end": "1463180"
  },
  {
    "text": "it says normally the interface between application program so there you go application program interface",
    "start": "1463180",
    "end": "1469389"
  },
  {
    "text": "and the system is desired via Fortran type subroutine calls okay then they say",
    "start": "1469389",
    "end": "1475959"
  },
  {
    "text": "the system has been designed to be essentially Hardware independent in the sense that the implementation may be",
    "start": "1475959",
    "end": "1481269"
  },
  {
    "text": "recoded for different or improved Hardware while still maintaining the same interface with each other and with",
    "start": "1481269",
    "end": "1487089"
  },
  {
    "text": "the application program so there's the concept clearly defined and motivated and then they run with the term a little",
    "start": "1487089",
    "end": "1494889"
  },
  {
    "text": "further in the paper it says finally hardware independence at the central computer means that a consistent",
    "start": "1494889",
    "end": "1500379"
  },
  {
    "text": "application program interface could be maintained if the program were replaced",
    "start": "1500379",
    "end": "1505559"
  },
  {
    "text": "eventual replacement of at least a portion of the hardware is almost a certainty given the rapid rate of new",
    "start": "1505559",
    "end": "1512079"
  },
  {
    "text": "developments in computer technology this was in 1968 by the way they they had no",
    "start": "1512079",
    "end": "1517509"
  },
  {
    "text": "idea what was ahead of them but they were absolutely right then they say a sufficiently flexible Hardware",
    "start": "1517509",
    "end": "1523089"
  },
  {
    "text": "independent system guarantees that technological advances will not make the system prematurely obsolete so it's key",
    "start": "1523089",
    "end": "1529479"
  },
  {
    "text": "that they understand the value proposition of api's that API is you know represent the the glue which allows",
    "start": "1529479",
    "end": "1536889"
  },
  {
    "text": "you to put a new implementation of a library underneath existing code so that you keep the value in that code and in",
    "start": "1536889",
    "end": "1543940"
  },
  {
    "text": "your knowledge of the API so what's going on the author's understood the",
    "start": "1543940",
    "end": "1549549"
  },
  {
    "text": "underlying concept but then you know and that the API had a life of its own apart",
    "start": "1549549",
    "end": "1555999"
  },
  {
    "text": "from the library and and once you have this sort of freestanding entity",
    "start": "1555999",
    "end": "1561129"
  },
  {
    "text": "different from the library it deserves a name and the name they gave it was application programming interface or",
    "start": "1561129",
    "end": "1566979"
  },
  {
    "text": "actually application program interface the in got added later many other people understood it too it's not like this was",
    "start": "1566979",
    "end": "1573009"
  },
  {
    "text": "it some sort of great intellectual achievement that they came up with this name it just sort of naturally arose",
    "start": "1573009",
    "end": "1579940"
  },
  {
    "text": "so in summary libraries naturally give rise to api's api's weren't invented so",
    "start": "1579940",
    "end": "1586839"
  },
  {
    "text": "much as they were discovered so I I would claim that wheeler and Wilkins",
    "start": "1586839",
    "end": "1592259"
  },
  {
    "text": "latent Lee invented the API in you know 1948 and it just took us another 20",
    "start": "1592259",
    "end": "1600369"
  },
  {
    "text": "years for us to discover it and give alright that ends the first part of the",
    "start": "1600369",
    "end": "1606490"
  },
  {
    "start": "1604000",
    "end": "1604000"
  },
  {
    "text": "talk and the second part is devoted to what what exactly constitutes an API um",
    "start": "1606490",
    "end": "1612940"
  },
  {
    "text": "as of as of April this is what Wikipedia said a set of subroutine definitions protocols and tools for building",
    "start": "1612940",
    "end": "1619780"
  },
  {
    "text": "applications software in general terms a set of clearly defined methods of communication between various software",
    "start": "1619780",
    "end": "1626410"
  },
  {
    "text": "components and I think that's not a bad definition as far as it goes actually a lot better than the definition they had",
    "start": "1626410",
    "end": "1631660"
  },
  {
    "text": "last year I would quibble with the three things in red you know I don't think",
    "start": "1631660",
    "end": "1637120"
  },
  {
    "text": "tools are part of the API I think there are an adjunct to the API I wouldn't limit it to building application",
    "start": "1637120",
    "end": "1643150"
  },
  {
    "text": "software you build system software with api's as well and they say that it's used to communicate between software",
    "start": "1643150",
    "end": "1649090"
  },
  {
    "text": "components as you'll see later in this section I believe api's are also used to communicate with hardware components the",
    "start": "1649090",
    "end": "1656380"
  },
  {
    "text": "purpose is described and this is my paraphrasing is to define a set of functionalities independent of their",
    "start": "1656380",
    "end": "1661900"
  },
  {
    "text": "implementation allowing implementation to vary without compromising the users of the component and this definition",
    "start": "1661900",
    "end": "1668230"
  },
  {
    "text": "gives rise to a two-part test for whether something's an API or not if you can answer yes to both of these",
    "start": "1668230",
    "end": "1674320"
  },
  {
    "text": "questions it's an API does it provide a set of operations defined by their inputs and outputs and does it admit",
    "start": "1674320",
    "end": "1680380"
  },
  {
    "text": "reimplementation without compromising its users if you can say yes to both of those things then you probably have an",
    "start": "1680380",
    "end": "1685900"
  },
  {
    "text": "API on your hands so now let's take a whirlwind chronological tour of twelve",
    "start": "1685900",
    "end": "1692190"
  },
  {
    "text": "reasonably important api's of the past's video fifty years the first one that I'm",
    "start": "1692190",
    "end": "1699490"
  },
  {
    "text": "discussing is the Fortran standard library in 1958 when 4:22 came out it",
    "start": "1699490",
    "end": "1704710"
  },
  {
    "text": "came out with 28 math functions and they're all listed in this table here this is the Fortran standard library and",
    "start": "1704710",
    "end": "1712470"
  },
  {
    "text": "astonishingly it still works if you write a Fortran program today using",
    "start": "1712470",
    "end": "1718120"
  },
  {
    "text": "these library functions it will still run you know so API is kind of last",
    "start": "1718120",
    "end": "1725290"
  },
  {
    "text": "forever notice by the way that I have kind of the API shown in this picture and I have",
    "start": "1725290",
    "end": "1731680"
  },
  {
    "text": "the underlying architecture which is Fortran shown in this picture I'm gonna stick to that convention for the entire whirlwind tour here's",
    "start": "1731680",
    "end": "1739270"
  },
  {
    "start": "1739000",
    "end": "1739000"
  },
  {
    "text": "here's another thing that maybe an API the IBM s 360 instruction set which came",
    "start": "1739270",
    "end": "1744610"
  },
  {
    "text": "out in 1964 and was how programmers communicated assembly language programs to the IBM computer it is summarized on",
    "start": "1744610",
    "end": "1752740"
  },
  {
    "text": "this famous green card and it ran on the IBM 360 architecture it was subsequently",
    "start": "1752740",
    "end": "1759550"
  },
  {
    "text": "reimplemented on you know other larger IBM 360s and then our IBM 370 s and on",
    "start": "1759550",
    "end": "1765280"
  },
  {
    "text": "clone machines by companies like am Dahl you know the whole mainframe industry",
    "start": "1765280",
    "end": "1770980"
  },
  {
    "text": "formed around this API is do you guys think an instruction set is an API",
    "start": "1770980",
    "end": "1776470"
  },
  {
    "text": "there's some disagreement as to whether it is or not show of hands is this an API yeah bad",
    "start": "1776470",
    "end": "1783430"
  },
  {
    "text": "half and you say it's an API it feels like an API to me then another one is",
    "start": "1783430",
    "end": "1788470"
  },
  {
    "text": "the C standard library in 1975 and it's really fundamentally no different from the Fortran standard library it's bigger",
    "start": "1788470",
    "end": "1794470"
  },
  {
    "text": "because you know C was a bigger richer language and it just did more things but",
    "start": "1794470",
    "end": "1800650"
  },
  {
    "text": "it's still not huge and it is not fundamentally different here's an",
    "start": "1800650",
    "end": "1807640"
  },
  {
    "text": "interesting discussion of a library from KN ours C book they clearly understood",
    "start": "1807640",
    "end": "1813490"
  },
  {
    "text": "the role of api's in ensuring portability it says input and output facilities are not part of the C",
    "start": "1813490",
    "end": "1819130"
  },
  {
    "text": "language nonetheless real programs do interact with their environment in this",
    "start": "1819130",
    "end": "1824500"
  },
  {
    "text": "chapter we describe the standard i/o library a set of functions designed to provide a standard i/o programming interface the routines are meant to be",
    "start": "1824500",
    "end": "1831310"
  },
  {
    "text": "portable in the sense that they will exist in compatible form on any system where C exists and that the programs",
    "start": "1831310",
    "end": "1837760"
  },
  {
    "text": "which confine their system interactions to facilities provided by the standard library can be motivated it can be moved",
    "start": "1837760",
    "end": "1843700"
  },
  {
    "text": "from one system to another essentially without change so you know there you",
    "start": "1843700",
    "end": "1848980"
  },
  {
    "text": "have it what they're saying in that last sentence is essentially the same thing Sun said when they said write once run",
    "start": "1848980",
    "end": "1856090"
  },
  {
    "text": "anywhere you know they just didn't have the snappy marketing department but it's the same thing so you could move the",
    "start": "1856090",
    "end": "1861670"
  },
  {
    "text": "program from one computer to another without change because you've got an API also they clearly understood that core",
    "start": "1861670",
    "end": "1869590"
  },
  {
    "text": "API are inseparable from the underlying language that kind of said yeah technically the standard library isn't",
    "start": "1869590",
    "end": "1875810"
  },
  {
    "text": "part of C but it's going to be implemented everywhere that C is another",
    "start": "1875810",
    "end": "1883370"
  },
  {
    "start": "1882000",
    "end": "1882000"
  },
  {
    "text": "kind of API is the API between programs and the underlying operating system",
    "start": "1883370",
    "end": "1889640"
  },
  {
    "text": "kernel so here's the UNIX system calls this happens to be from you know the six",
    "start": "1889640",
    "end": "1896750"
  },
  {
    "text": "edition may 1975 but these were reimplemented by you know every",
    "start": "1896750",
    "end": "1902990"
  },
  {
    "text": "subsequent unix-like operating system up to and including Linux and you know",
    "start": "1902990",
    "end": "1909500"
  },
  {
    "text": "they're what you what you use for you know i/o and the like interrupts at that level what are what about hardware so",
    "start": "1909500",
    "end": "1918250"
  },
  {
    "start": "1918000",
    "end": "1918000"
  },
  {
    "text": "just how many people just want to see how how old you guys are how many people know what this thing is",
    "start": "1918250",
    "end": "1924340"
  },
  {
    "text": "yeah not a lot of you maybe 10% this is what we used to call a computer terminal you know back in the days when computers",
    "start": "1924340",
    "end": "1931130"
  },
  {
    "text": "took up a whole room we didn't own computers we didn't have them in our offices at work we had these terminals",
    "start": "1931130",
    "end": "1937460"
  },
  {
    "text": "and the terminals talk to the computer via either a modem or you know a wired connection and and this was the deck",
    "start": "1937460",
    "end": "1946280"
  },
  {
    "text": "vt100 which was one of the early smart terminals and what made it terminals smart well you could make characters",
    "start": "1946280",
    "end": "1951560"
  },
  {
    "text": "blinked on it you could you had arbitrary cursor addressing so you could sort of jump around the screen and",
    "start": "1951560",
    "end": "1956810"
  },
  {
    "text": "update things and that allowed you to write games on it so you know smart terminals were really great things in",
    "start": "1956810",
    "end": "1962600"
  },
  {
    "text": "their days but in order to make this work you needed special escape sequences to tell the computer hey you know print",
    "start": "1962600",
    "end": "1968750"
  },
  {
    "text": "this over here print this over here make this thing blink and those escape sequences are just defined on this card",
    "start": "1968750",
    "end": "1974750"
  },
  {
    "text": "so this is essentially an API between programs and the terminal once again",
    "start": "1974750",
    "end": "1981590"
  },
  {
    "text": "it's not clear if it deserves to be called an API but it certainly feels like one another kind of API is between",
    "start": "1981590",
    "end": "1990740"
  },
  {
    "start": "1987000",
    "end": "1987000"
  },
  {
    "text": "the program and the underlying hardware but not the processor so in in the IBM",
    "start": "1990740",
    "end": "1998330"
  },
  {
    "text": "PC and then in all the compatibles that were made there after in order for",
    "start": "1998330",
    "end": "2003879"
  },
  {
    "text": "program to talk to you note once again to do IO and do other sort of",
    "start": "2003879",
    "end": "2009190"
  },
  {
    "text": "interactions with the lower level hardware but not the processor they had to do these BIOS calls the IBM PC was an",
    "start": "2009190",
    "end": "2017919"
  },
  {
    "text": "open architecture and the BIOS was defined in one chapter of this purple",
    "start": "2017919",
    "end": "2023139"
  },
  {
    "text": "book the technical reference for the IBM PC so that's another kind of an API and",
    "start": "2023139",
    "end": "2030059"
  },
  {
    "start": "2030000",
    "end": "2030000"
  },
  {
    "text": "what about command-line interfaces so here's the ms-dos command-line interface",
    "start": "2030059",
    "end": "2036509"
  },
  {
    "text": "which was adapted from the deck system 10 command line interface beforehand and",
    "start": "2036509",
    "end": "2043419"
  },
  {
    "text": "you know it's not exactly an API but what if here using a scripting language these things play exactly the part of",
    "start": "2043419",
    "end": "2050408"
  },
  {
    "text": "method calls in an ordinary programming language and if you look at the two part you know test that we made it certainly",
    "start": "2050409",
    "end": "2056559"
  },
  {
    "text": "functions as an API by the way amusing little prose on the box you probably",
    "start": "2056559",
    "end": "2061658"
  },
  {
    "text": "can't read it from there but it says this it says for computers compatible",
    "start": "2061659",
    "end": "2069009"
  },
  {
    "text": "with IBM personal computers it's kind of a mouthful but you know they were saying",
    "start": "2069009",
    "end": "2075069"
  },
  {
    "text": "something important there they were basically saying this defines a way to interact with any computer that",
    "start": "2075069",
    "end": "2080888"
  },
  {
    "text": "implements the correct underlying api's what about modems it turns out so if I",
    "start": "2080889",
    "end": "2088929"
  },
  {
    "text": "said a TDT and then a phone number how many people by show of hands would know what I'm talking about Wow many of you I'm astonished anyway",
    "start": "2088929",
    "end": "2096940"
  },
  {
    "text": "back in the old days when people had modems that was how you told them what to dial and there was a whole sort of little language for communicating with",
    "start": "2096940",
    "end": "2103329"
  },
  {
    "text": "the modem initially you actually typed it on the computer terminal but eventually computers sent it to the",
    "start": "2103329",
    "end": "2108940"
  },
  {
    "text": "modem and it turns out that it's still alive today like in all of our cell phones it turns out cell phones have two computers in",
    "start": "2108940",
    "end": "2114640"
  },
  {
    "text": "them the main computer and then the baseband which handles the radios and the way the main computer talks to the",
    "start": "2114640",
    "end": "2120309"
  },
  {
    "text": "baseband is through these you know eight EDT codes so this this is an API that",
    "start": "2120309",
    "end": "2126849"
  },
  {
    "text": "has been reimplemented you know hundreds of thousands of times and long outlived the underlying hardware what about adobe",
    "start": "2126849",
    "end": "2134500"
  },
  {
    "text": "postscript it is a language right there's the language",
    "start": "2134500",
    "end": "2140000"
  },
  {
    "text": "manual for it but it's also the API that you know Apple's Macintosh is used to",
    "start": "2140000",
    "end": "2146700"
  },
  {
    "text": "talk to laser writers to basically describe the page that's gonna get printed out so is it an API is it a",
    "start": "2146700",
    "end": "2152910"
  },
  {
    "text": "language is it both I don't think there's any easy answer that question honestly I don't think there's any hard",
    "start": "2152910",
    "end": "2159930"
  },
  {
    "text": "and fast distinction between api's and languages technically I might describe",
    "start": "2159930",
    "end": "2165510"
  },
  {
    "text": "this as an API that embodies a language same thing by the way for like Perl regular expressions it's an API and it's",
    "start": "2165510",
    "end": "2172560"
  },
  {
    "text": "a little language what about wire level protocols so SMB the the server message",
    "start": "2172560",
    "end": "2178170"
  },
  {
    "start": "2174000",
    "end": "2174000"
  },
  {
    "text": "block protocol which is what Windows uses for you know printing and file",
    "start": "2178170",
    "end": "2183960"
  },
  {
    "text": "sharing across networks it was reimplemented by Samba to allow Linux systems to interoperate with",
    "start": "2183960",
    "end": "2191040"
  },
  {
    "text": "Windows systems is that an API in wire level protocol what do you think the",
    "start": "2191040",
    "end": "2197580"
  },
  {
    "text": "only a few of you think of it as an API and yet you know it is an underlying communication mechanism that allows",
    "start": "2197580",
    "end": "2203730"
  },
  {
    "text": "components to interoperate but you don't program with it exactly like a traditional API finally in the modern",
    "start": "2203730",
    "end": "2210090"
  },
  {
    "text": "era we have web api's if you've got a web service in this case delicious you you publish an API so that you can sort",
    "start": "2210090",
    "end": "2219600"
  },
  {
    "text": "of mash the things up and build programs that use them so you know we have api's all the way from the earliest of",
    "start": "2219600",
    "end": "2226290"
  },
  {
    "text": "machines from from the edge sacks of the world to our modern web applications the",
    "start": "2226290",
    "end": "2232140"
  },
  {
    "text": "the Java code was that that I just discussed the wrong one oh god sorry my",
    "start": "2232140",
    "end": "2238170"
  },
  {
    "text": "bad yeah win32 so basically this is just another operating system API bigger",
    "start": "2238170",
    "end": "2243420"
  },
  {
    "text": "operating system bigger API but not fundamentally different and it was real amended by samba sorry by wine so you",
    "start": "2243420",
    "end": "2249690"
  },
  {
    "text": "can program you know against the windows API is on your Linux machines you know",
    "start": "2249690",
    "end": "2255990"
  },
  {
    "text": "Java once again just like Fortran and C it's another set of core language api's",
    "start": "2255990",
    "end": "2261270"
  },
  {
    "text": "you know and it was reimplemented by classpath and by Adobe I'm sorry Apache",
    "start": "2261270",
    "end": "2267119"
  },
  {
    "text": "Oh harmony and Android and so forth and now we get to delicious which is you",
    "start": "2267119",
    "end": "2273860"
  },
  {
    "text": "know just a random web service API where the api's are using a different you know",
    "start": "2273860",
    "end": "2280340"
  },
  {
    "text": "description using json or whatever but there's still api's so that brings our tour to an end what have we learned from",
    "start": "2280340",
    "end": "2286730"
  },
  {
    "text": "the tour well first of all the two-part test may be too broad it admits instruction set architectures and",
    "start": "2286730",
    "end": "2292310"
  },
  {
    "text": "command-line interfaces you know wire level protocols and the like if we want to take them out we can",
    "start": "2292310",
    "end": "2297770"
  },
  {
    "text": "amend the definition to say that an API must augment a programming language or you know calling convention but more",
    "start": "2297770",
    "end": "2304820"
  },
  {
    "start": "2304000",
    "end": "2304000"
  },
  {
    "text": "importantly we learn that API is come in all shapes and sizes and they keep getting bigger many of them live on",
    "start": "2304820",
    "end": "2311690"
  },
  {
    "text": "forever often way past when the original hardware for which they were written dies and that they create entire",
    "start": "2311690",
    "end": "2319400"
  },
  {
    "text": "industries both above them you know where people write programs to the API like the programs that ran on Windows",
    "start": "2319400",
    "end": "2326420"
  },
  {
    "text": "and below them the entire sort of you know IBM compatible PC industry was",
    "start": "2326420",
    "end": "2332720"
  },
  {
    "text": "reimplementation x' of the bios and so forth and that in summary api's are the",
    "start": "2332720",
    "end": "2340130"
  },
  {
    "text": "methods of operation by which components in a system used one another so they are",
    "start": "2340130",
    "end": "2345500"
  },
  {
    "text": "basically the glue that connects the digital universe finally I would like to",
    "start": "2345500",
    "end": "2351320"
  },
  {
    "text": "conclude with a brief legal digression though I am NOT a lawyer we've always",
    "start": "2351320",
    "end": "2358160"
  },
  {
    "text": "had the freedom to reemployment a P is in fact every single API that I just",
    "start": "2358160",
    "end": "2363830"
  },
  {
    "text": "discussed in that whirlwind tour had many significant tree implementations",
    "start": "2363830",
    "end": "2370010"
  },
  {
    "text": "here's a little table which I'm not gonna go over now of all those api's who created them when they were created an",
    "start": "2370010",
    "end": "2376310"
  },
  {
    "text": "important reimplementation and the year that that reimplementation took place even the exact instruction set",
    "start": "2376310",
    "end": "2383750"
  },
  {
    "text": "architecture was reimplemented amazingly you know is it was designed in 1948 and",
    "start": "2383750",
    "end": "2389060"
  },
  {
    "text": "it turns out that a decade later Toshiba and Tokyo University had a consortium where they built a transistorized",
    "start": "2389060",
    "end": "2394910"
  },
  {
    "text": "version of edsac that reamed went to the instruction set architectures so they could use the same library you know and",
    "start": "2394910",
    "end": "2401090"
  },
  {
    "text": "they basically copied the entire spec for the book wheeler you know wwg and there",
    "start": "2401090",
    "end": "2407970"
  },
  {
    "text": "was no contact between the consortium and Cambridge Wilkes learned about it later on and he was thrilled that these",
    "start": "2407970",
    "end": "2415020"
  },
  {
    "text": "guys were able to build a whole new machine just by reimplemented his api's but now and for the last eight years API",
    "start": "2415020",
    "end": "2424440"
  },
  {
    "text": "reimplementation is under serious attack in in 2010 Oracle sued Google in federal",
    "start": "2424440",
    "end": "2433590"
  },
  {
    "text": "court in the Northern District of California for re-implementing the Java API is in Android there they alleged",
    "start": "2433590",
    "end": "2441030"
  },
  {
    "text": "both patent and copyright infringement and that turns out to be very important",
    "start": "2441030",
    "end": "2446190"
  },
  {
    "text": "the the the judge who is judge alsa the same one whose interrogatory began this",
    "start": "2446190",
    "end": "2452010"
  },
  {
    "text": "talk he ruled that there had been no patent infringement but that api's were",
    "start": "2452010",
    "end": "2460680"
  },
  {
    "text": "not copyrightable so that you know that sorry let me get let me get it right the jury ruled that there was no patent",
    "start": "2460680",
    "end": "2467670"
  },
  {
    "text": "infringement and the judge ruled that api's will not copyrightable so that was what happened in the first trial but",
    "start": "2467670",
    "end": "2474119"
  },
  {
    "text": "Oracle appeal appealed the ruling and because there had been patents mentioned",
    "start": "2474119",
    "end": "2479400"
  },
  {
    "text": "in the original suit the appeal was handled by the Court of Appeals for the Federal Circuit CFC who are otherwise",
    "start": "2479400",
    "end": "2485700"
  },
  {
    "text": "known as the patent court and they overturned they reversed judge osip's ruling in in May of 2014 and then in",
    "start": "2485700",
    "end": "2495510"
  },
  {
    "text": "October of that year Google petitioned the Supreme Court to you know we hear",
    "start": "2495510",
    "end": "2500640"
  },
  {
    "text": "the case but the Supreme Court the next year declined to rehear it on the advice of the Solicitor General under Obama",
    "start": "2500640",
    "end": "2508440"
  },
  {
    "text": "unfortunately and that kind of caused the case to be remanded to the court in",
    "start": "2508440",
    "end": "2514920"
  },
  {
    "start": "2510000",
    "end": "2510000"
  },
  {
    "text": "California to decide whether the reimplementation was in fact fair use",
    "start": "2514920",
    "end": "2520680"
  },
  {
    "text": "and that's exactly what the court decided in a jury trial they decided yes of course it's fairy story implemented",
    "start": "2520680",
    "end": "2527100"
  },
  {
    "text": "API then in October of that of 2016 Oracle appealed that jury verdict and",
    "start": "2527100",
    "end": "2535730"
  },
  {
    "text": "you know in June of that year Stanford and 76 computer scientists and engineers all",
    "start": "2535730",
    "end": "2541690"
  },
  {
    "text": "wrote an amicus brief saying we've always had the freedom to implement api's to riemann we need to keep that",
    "start": "2541690",
    "end": "2548800"
  },
  {
    "text": "freedom but sadly the court did not",
    "start": "2548800",
    "end": "2553840"
  },
  {
    "text": "listen to that amicus brief and they ruled they they overturned the jury",
    "start": "2553840",
    "end": "2560260"
  },
  {
    "text": "verdict on fair use this is unheard of that never happened but it did happen in this case so you know right now it is",
    "start": "2560260",
    "end": "2569170"
  },
  {
    "text": "the law of the land that api's our copyrightable and you cannot",
    "start": "2569170",
    "end": "2574240"
  },
  {
    "text": "reimplementation of the originator of the api's you know and that has not been",
    "start": "2574240",
    "end": "2580090"
  },
  {
    "text": "the case for the past 70 years but it is the case today recently that is May of",
    "start": "2580090",
    "end": "2586870"
  },
  {
    "text": "this year Google petitioned for the entire Court of Appeals for the Federal Circuit to rehear the case and a subset",
    "start": "2586870",
    "end": "2593290"
  },
  {
    "text": "of those 75 scientists and engineers wrote another amicus brief calling for",
    "start": "2593290",
    "end": "2598630"
  },
  {
    "text": "the rehearing just in case you're curious you know who these people are just they are the designers of these",
    "start": "2598630",
    "end": "2606190"
  },
  {
    "text": "systems and languages you know you've heard of Steve Wozniak and and you know",
    "start": "2606190",
    "end": "2614580"
  },
  {
    "text": "gosh I don't know I don't have time to go over the names but you can look I have a pointer in the talk to it tons of",
    "start": "2614580",
    "end": "2620770"
  },
  {
    "text": "people that you know Gordon Bell they were like you know tentorium Award winners in this list these are the",
    "start": "2620770",
    "end": "2627160"
  },
  {
    "text": "people who believe we have the freedom to reemployment api's there are also the authors of these books since a bunch of",
    "start": "2627160",
    "end": "2632440"
  },
  {
    "text": "you have studied computer science you probably have these books on your shelf so what does it mean for you if the",
    "start": "2632440",
    "end": "2640300"
  },
  {
    "start": "2638000",
    "end": "2638000"
  },
  {
    "text": "Federal Circuit ruling stands it means you cannot re-implement an API without",
    "start": "2640300",
    "end": "2645730"
  },
  {
    "text": "permission from its author this may require you to pay licensing fees or even they may just say hey you know",
    "start": "2645730",
    "end": "2651610"
  },
  {
    "text": "there are certain restrictions like yeah you can ruin this API but you can't do it on a mobile device that sounds",
    "start": "2651610",
    "end": "2657310"
  },
  {
    "text": "ridiculous right but those are exactly the rules that Oracle attempted to apply",
    "start": "2657310",
    "end": "2662920"
  },
  {
    "text": "to the Java API so you know this this is this is the future if this ruling stands",
    "start": "2662920",
    "end": "2670779"
  },
  {
    "text": "and you know if you guys think that software patents have caused problems it",
    "start": "2670779",
    "end": "2677650"
  },
  {
    "text": "turns out that software copyrights will cause much worse problems because patents are limited to basically twenty years whereas copyrights grant and your",
    "start": "2677650",
    "end": "2685359"
  },
  {
    "text": "perpetual monopoly on writing and implementation of this little language",
    "start": "2685359",
    "end": "2690819"
  },
  {
    "text": "and by near perpetual I mean life Plus 70 years if the API was written by a person or a total of 95 years if it was",
    "start": "2690819",
    "end": "2699219"
  },
  {
    "text": "written by a company well there have only been computers for 70 years so like if nobody can reimplementation API for",
    "start": "2699219",
    "end": "2705729"
  },
  {
    "text": "95 years it's yours you've got a monopoly did any of you use new or a PC",
    "start": "2705729",
    "end": "2712029"
  },
  {
    "text": "or or wine or Android sure you do probably you use most of these things",
    "start": "2712029",
    "end": "2717880"
  },
  {
    "text": "well none of them could have been written without you know the ability the",
    "start": "2717880",
    "end": "2723069"
  },
  {
    "text": "freedom to reemployment api's so that's the stakes here the stakes are awfully",
    "start": "2723069",
    "end": "2728380"
  },
  {
    "text": "high the right to reemployment api's is crucial new entrants won't be able to compete against incumbents and the",
    "start": "2728380",
    "end": "2735339"
  },
  {
    "text": "result will be software that's less interoperable you'll have silos and",
    "start": "2735339",
    "end": "2741359"
  },
  {
    "text": "you'll spend less time hacking more time talking to lawyers and companies will",
    "start": "2741359",
    "end": "2747459"
  },
  {
    "text": "spend more time building less time building products and they'll spend more time basically fighting with each other",
    "start": "2747459",
    "end": "2752919"
  },
  {
    "text": "in the court or negotiating so in conclusion api is date back to the dawn",
    "start": "2752919",
    "end": "2761529"
  },
  {
    "text": "of the computer age they're the glue that connects the digital universe the",
    "start": "2761529",
    "end": "2766569"
  },
  {
    "text": "magic of api is what makes an api an api is the fact that it can be reimplemented we've been free to do so since the time",
    "start": "2766569",
    "end": "2773199"
  },
  {
    "text": "of edsac and i sincerely hope that we haven't lost this freedom so what can you personally do to ensure that we",
    "start": "2773199",
    "end": "2779979"
  },
  {
    "text": "don't lose the freedom well consider not developing api's unless you know they're",
    "start": "2779979",
    "end": "2786609"
  },
  {
    "text": "free to re-implement you know have a have a chat with your employer consider not working for companies that assert",
    "start": "2786609",
    "end": "2792969"
  },
  {
    "text": "copyright on api's and and finally make your opinions known to those in power",
    "start": "2792969",
    "end": "2798249"
  },
  {
    "text": "whether it's executives at the company that you work for or the courts in amicus briefs or",
    "start": "2798249",
    "end": "2804880"
  },
  {
    "text": "Congress so thank you for coming to my talk of course we have no time for questions but if you have questions for",
    "start": "2804880",
    "end": "2810849"
  },
  {
    "text": "me ask me anything in you know whatever it is 20 minutes Times Square is the",
    "start": "2810849",
    "end": "2817990"
  },
  {
    "text": "room it's the seventh floor of this building thank you for your patience [Applause]",
    "start": "2817990",
    "end": "2826119"
  }
]