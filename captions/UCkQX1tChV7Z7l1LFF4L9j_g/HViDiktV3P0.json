[
  {
    "text": "well",
    "start": "9440",
    "end": "11360"
  },
  {
    "text": "hello is this the coolest Scola",
    "start": "11360",
    "end": "13920"
  },
  {
    "text": "conference",
    "start": "13920",
    "end": "15920"
  },
  {
    "text": "ever I know I know I know what you guys",
    "start": "15920",
    "end": "18680"
  },
  {
    "text": "are thinking who is this awesome guy",
    "start": "18680",
    "end": "21320"
  },
  {
    "text": "sitting in the front of the room where",
    "start": "21320",
    "end": "23640"
  },
  {
    "text": "did he get those rad Shades well I'm",
    "start": "23640",
    "end": "28119"
  },
  {
    "text": "actually sorry to disappoint you guys",
    "start": "28119",
    "end": "29840"
  },
  {
    "text": "but but I'm actually not that cool but I",
    "start": "29840",
    "end": "33680"
  },
  {
    "text": "just want to kind of illustrate a point",
    "start": "33680",
    "end": "36480"
  },
  {
    "text": "here",
    "start": "36480",
    "end": "38040"
  },
  {
    "text": "um so so this does have a context to",
    "start": "38040",
    "end": "40600"
  },
  {
    "text": "Scala um but but but I'm going to get",
    "start": "40600",
    "end": "42879"
  },
  {
    "text": "there uh slowly um but my point is",
    "start": "42879",
    "end": "45760"
  },
  {
    "text": "basically that um deducing certain",
    "start": "45760",
    "end": "49199"
  },
  {
    "text": "truths about the beauty um that you see",
    "start": "49199",
    "end": "52239"
  },
  {
    "text": "and the things that you make um only",
    "start": "52239",
    "end": "54680"
  },
  {
    "text": "based on a narrow Vantage Point um can",
    "start": "54680",
    "end": "57719"
  },
  {
    "text": "some sometimes lead to mistake or",
    "start": "57719",
    "end": "60239"
  },
  {
    "text": "misjudgments in my case if you take me",
    "start": "60239",
    "end": "62760"
  },
  {
    "text": "and throw me in a party function your",
    "start": "62760",
    "end": "64878"
  },
  {
    "text": "program is likely to throw a runtime",
    "start": "64879",
    "end": "67960"
  },
  {
    "text": "error um but that said ahing along okay",
    "start": "67960",
    "end": "74200"
  },
  {
    "text": "um so uh looking at like the the same",
    "start": "74200",
    "end": "78320"
  },
  {
    "text": "kind of uh um perspective of view of a",
    "start": "78320",
    "end": "81240"
  },
  {
    "text": "certain design uh from a different",
    "start": "81240",
    "end": "83240"
  },
  {
    "text": "perspective uh say for another person",
    "start": "83240",
    "end": "85479"
  },
  {
    "text": "who may be sitting on a different side",
    "start": "85479",
    "end": "87280"
  },
  {
    "text": "of the bus um that view may be kind of",
    "start": "87280",
    "end": "89439"
  },
  {
    "text": "skewed um by certain differences let's",
    "start": "89439",
    "end": "92280"
  },
  {
    "text": "say there's fog on the uh on the window",
    "start": "92280",
    "end": "95119"
  },
  {
    "text": "that they kind of have to push aside or",
    "start": "95119",
    "end": "97360"
  },
  {
    "text": "there is uh a set of confusing an off",
    "start": "97360",
    "end": "101079"
  },
  {
    "text": "you skated bite code um that they kind",
    "start": "101079",
    "end": "103240"
  },
  {
    "text": "of have to rearrange and try to",
    "start": "103240",
    "end": "105320"
  },
  {
    "text": "understand in order to see your vision",
    "start": "105320",
    "end": "107479"
  },
  {
    "text": "um but I thought this idea was kind of",
    "start": "107479",
    "end": "109960"
  },
  {
    "text": "interesting and I thought I would kind",
    "start": "109960",
    "end": "112040"
  },
  {
    "text": "of explore it in terms of basically uh a",
    "start": "112040",
    "end": "114880"
  },
  {
    "text": "Java programmer um looking back at what",
    "start": "114880",
    "end": "117680"
  },
  {
    "text": "a scholar programmer's code generates",
    "start": "117680",
    "end": "119479"
  },
  {
    "text": "for them",
    "start": "119479",
    "end": "121840"
  },
  {
    "text": "okay uh so where does my story start my",
    "start": "121840",
    "end": "124039"
  },
  {
    "text": "story starts with my mom as most stories",
    "start": "124039",
    "end": "126399"
  },
  {
    "text": "do um and what I really love about moms",
    "start": "126399",
    "end": "129319"
  },
  {
    "text": "is the kind of lessons that they teach",
    "start": "129319",
    "end": "131039"
  },
  {
    "text": "you as a child kind of come back later",
    "start": "131039",
    "end": "133760"
  },
  {
    "text": "on in life and they apply in lots of",
    "start": "133760",
    "end": "135400"
  },
  {
    "text": "different contexts um for me my mom",
    "start": "135400",
    "end": "137640"
  },
  {
    "text": "taught me a lot of lessons and those",
    "start": "137640",
    "end": "139080"
  },
  {
    "text": "kind of lessons kind of reapply to me in",
    "start": "139080",
    "end": "141720"
  },
  {
    "text": "a day-to-day basis actually in the in",
    "start": "141720",
    "end": "143920"
  },
  {
    "text": "what I do for programming so let's say",
    "start": "143920",
    "end": "145800"
  },
  {
    "text": "for instance always finish what's on",
    "start": "145800",
    "end": "147519"
  },
  {
    "text": "your plate um this I don't adhere to as",
    "start": "147519",
    "end": "150840"
  },
  {
    "text": "much as I probably should but this",
    "start": "150840",
    "end": "152280"
  },
  {
    "text": "basically means um that we all have lots",
    "start": "152280",
    "end": "154720"
  },
  {
    "text": "of ideas we all get really excited about",
    "start": "154720",
    "end": "156440"
  },
  {
    "text": "things but what's important is um not so",
    "start": "156440",
    "end": "158640"
  },
  {
    "text": "much starting those things but finishing",
    "start": "158640",
    "end": "160159"
  },
  {
    "text": "those things uh clean behind your ears",
    "start": "160159",
    "end": "163080"
  },
  {
    "text": "um keep it clean uh otherwise you'll end",
    "start": "163080",
    "end": "165200"
  },
  {
    "text": "up with a ball of mud that was mentioned",
    "start": "165200",
    "end": "166959"
  },
  {
    "text": "earlier um but one of the more important",
    "start": "166959",
    "end": "169640"
  },
  {
    "text": "points uh so if you're taking notes uh",
    "start": "169640",
    "end": "172480"
  },
  {
    "text": "this will be on the quiz later um is to",
    "start": "172480",
    "end": "174680"
  },
  {
    "text": "always be mindful of your neighbors um",
    "start": "174680",
    "end": "177080"
  },
  {
    "text": "and why I think this one's most",
    "start": "177080",
    "end": "178400"
  },
  {
    "text": "important um is because when applied to",
    "start": "178400",
    "end": "181120"
  },
  {
    "text": "basically uh any problem domain it",
    "start": "181120",
    "end": "183319"
  },
  {
    "text": "creates a better world for everyone's",
    "start": "183319",
    "end": "186640"
  },
  {
    "text": "future um particular ours uh so how does",
    "start": "186640",
    "end": "189519"
  },
  {
    "text": "this apply to uh why does this apply to",
    "start": "189519",
    "end": "192280"
  },
  {
    "text": "Scala um so though there are many or not",
    "start": "192280",
    "end": "196080"
  },
  {
    "text": "many there's a handful of different",
    "start": "196080",
    "end": "197319"
  },
  {
    "text": "implementations of the scolar",
    "start": "197319",
    "end": "198560"
  },
  {
    "text": "programming language there's a pretty",
    "start": "198560",
    "end": "200319"
  },
  {
    "text": "good chance that the one that you use",
    "start": "200319",
    "end": "201879"
  },
  {
    "text": "runs on the",
    "start": "201879",
    "end": "203120"
  },
  {
    "text": "jvm uh why is this a good choice the",
    "start": "203120",
    "end": "205799"
  },
  {
    "text": "jvm's uh essentially considered mostly",
    "start": "205799",
    "end": "208760"
  },
  {
    "text": "reliable runtime um so and for that same",
    "start": "208760",
    "end": "212200"
  },
  {
    "text": "reason uh other languages have adopted",
    "start": "212200",
    "end": "214480"
  },
  {
    "text": "it um is their kind of Target runtime",
    "start": "214480",
    "end": "216959"
  },
  {
    "text": "platform um so it's probably a good idea",
    "start": "216959",
    "end": "220040"
  },
  {
    "text": "uh whenever designing your code um that",
    "start": "220040",
    "end": "221959"
  },
  {
    "text": "you want to kind of uh play nice uh with",
    "start": "221959",
    "end": "224120"
  },
  {
    "text": "the other kids pring on the",
    "start": "224120",
    "end": "226720"
  },
  {
    "text": "pram um so you can kind of think of this",
    "start": "226720",
    "end": "229159"
  },
  {
    "text": "also as basically uh a courtesy to",
    "start": "229159",
    "end": "232400"
  },
  {
    "text": "others um sometimes I see scalar",
    "start": "232400",
    "end": "234840"
  },
  {
    "text": "programmers who look down on Java",
    "start": "234840",
    "end": "236680"
  },
  {
    "text": "programmers it's not so much that the",
    "start": "236680",
    "end": "238439"
  },
  {
    "text": "Java programmers are any more primitive",
    "start": "238439",
    "end": "240720"
  },
  {
    "text": "um they may just have a different",
    "start": "240720",
    "end": "241879"
  },
  {
    "text": "perspective on things um that said um",
    "start": "241879",
    "end": "245760"
  },
  {
    "text": "when you're playing in the same",
    "start": "245760",
    "end": "246799"
  },
  {
    "text": "playground or your codes running in the",
    "start": "246799",
    "end": "248200"
  },
  {
    "text": "same uh the same basically runtime or",
    "start": "248200",
    "end": "251360"
  },
  {
    "text": "whatever you kind of want to do it would",
    "start": "251360",
    "end": "253760"
  },
  {
    "text": "you would do yourself a a benefit by",
    "start": "253760",
    "end": "256560"
  },
  {
    "text": "showing the courtesy to them in the",
    "start": "256560",
    "end": "258400"
  },
  {
    "text": "interfaces that you expose um some extra",
    "start": "258400",
    "end": "261759"
  },
  {
    "text": "thought with them in",
    "start": "261759",
    "end": "263639"
  },
  {
    "text": "mind um so when it comes to Scala and um",
    "start": "263639",
    "end": "268800"
  },
  {
    "text": "other languages View of Scala when it",
    "start": "268800",
    "end": "270400"
  },
  {
    "text": "comes to Scala hopping on the jvm um",
    "start": "270400",
    "end": "273160"
  },
  {
    "text": "there's kind of two things that they",
    "start": "273160",
    "end": "274639"
  },
  {
    "text": "kind of frown upon um basically um",
    "start": "274639",
    "end": "277800"
  },
  {
    "text": "giving the jvm's uh Young Generation",
    "start": "277800",
    "end": "280600"
  },
  {
    "text": "gray hair early um we generate a lot of",
    "start": "280600",
    "end": "283000"
  },
  {
    "text": "garbage scy makes it really easy to do",
    "start": "283000",
    "end": "285080"
  },
  {
    "text": "that um and also these kind of awkward",
    "start": "285080",
    "end": "287680"
  },
  {
    "text": "interfaces um which if we tried a little",
    "start": "287680",
    "end": "290320"
  },
  {
    "text": "bit harder um we can kind of resolve our",
    "start": "290320",
    "end": "292320"
  },
  {
    "text": "differences um with some extra",
    "start": "292320",
    "end": "294880"
  },
  {
    "text": "thought um so before I talk about those",
    "start": "294880",
    "end": "297840"
  },
  {
    "text": "differences I guess it's worth",
    "start": "297840",
    "end": "299199"
  },
  {
    "text": "mentioning what's universally",
    "start": "299199",
    "end": "301000"
  },
  {
    "text": "translatable um between I hope anyone",
    "start": "301000",
    "end": "303840"
  },
  {
    "text": "got that joke okay no one got the joke",
    "start": "303840",
    "end": "306199"
  },
  {
    "text": "um so uh so in Scala we have lots of",
    "start": "306199",
    "end": "309919"
  },
  {
    "text": "different types um to work with and to",
    "start": "309919",
    "end": "312759"
  },
  {
    "text": "mold with and do what we want with um",
    "start": "312759",
    "end": "315440"
  },
  {
    "text": "but uh so what does translate well to",
    "start": "315440",
    "end": "318000"
  },
  {
    "text": "Java is behavior behaviorist traits uh",
    "start": "318000",
    "end": "320720"
  },
  {
    "text": "those are traits without any",
    "start": "320720",
    "end": "322639"
  },
  {
    "text": "Behavior Uh and uh basically uh all",
    "start": "322639",
    "end": "325840"
  },
  {
    "text": "three flavors of classes vanilla classes",
    "start": "325840",
    "end": "327720"
  },
  {
    "text": "abstract classes and case classes case",
    "start": "327720",
    "end": "329720"
  },
  {
    "text": "classes actually generate um an object",
    "start": "329720",
    "end": "332479"
  },
  {
    "text": "but I'll talk about that later so what",
    "start": "332479",
    "end": "335199"
  },
  {
    "text": "doesn't translate well um basically uh",
    "start": "335199",
    "end": "337520"
  },
  {
    "text": "everything else that we like about the",
    "start": "337520",
    "end": "339280"
  },
  {
    "text": "language and that's why we use it um but",
    "start": "339280",
    "end": "342919"
  },
  {
    "text": "uh again I think we can do a little bit",
    "start": "342919",
    "end": "344880"
  },
  {
    "text": "better job uh of thinking about the",
    "start": "344880",
    "end": "347759"
  },
  {
    "text": "interfaces that we exposed and then this",
    "start": "347759",
    "end": "349639"
  },
  {
    "text": "is kind of like a small talk about some",
    "start": "349639",
    "end": "351639"
  },
  {
    "text": "things to consider whenever you think",
    "start": "351639",
    "end": "353280"
  },
  {
    "text": "about",
    "start": "353280",
    "end": "354759"
  },
  {
    "text": "those um so can anyone in the room",
    "start": "354759",
    "end": "357759"
  },
  {
    "text": "attach a name to this face",
    "start": "357759",
    "end": "361560"
  },
  {
    "text": "Mark Twain yeah good bonus points on the",
    "start": "361560",
    "end": "364080"
  },
  {
    "text": "quiz uh so yeah he was kind of uh known",
    "start": "364080",
    "end": "367360"
  },
  {
    "text": "for many things but uh one of the things",
    "start": "367360",
    "end": "369160"
  },
  {
    "text": "he was known for uh was dabbling in a",
    "start": "369160",
    "end": "371759"
  },
  {
    "text": "Pastime called back translations uh back",
    "start": "371759",
    "end": "374680"
  },
  {
    "text": "translations are kind of an interesting",
    "start": "374680",
    "end": "376560"
  },
  {
    "text": "subject matter basically it's uh so say",
    "start": "376560",
    "end": "380000"
  },
  {
    "text": "you have a source document someone",
    "start": "380000",
    "end": "381639"
  },
  {
    "text": "translates that to uh another document",
    "start": "381639",
    "end": "385280"
  },
  {
    "text": "in a a different language and then that",
    "start": "385280",
    "end": "387440"
  },
  {
    "text": "back translator takes the translation",
    "start": "387440",
    "end": "389840"
  },
  {
    "text": "and attempts to translate it back to the",
    "start": "389840",
    "end": "391520"
  },
  {
    "text": "original Source without the actual uh",
    "start": "391520",
    "end": "394280"
  },
  {
    "text": "Source on hand um so and then it's kind",
    "start": "394280",
    "end": "397039"
  },
  {
    "text": "of funny whenever you compare the the",
    "start": "397039",
    "end": "398960"
  },
  {
    "text": "original source with the back translated",
    "start": "398960",
    "end": "400639"
  },
  {
    "text": "Source you can kind of see like where",
    "start": "400639",
    "end": "401880"
  },
  {
    "text": "the differences lie between the two um",
    "start": "401880",
    "end": "404240"
  },
  {
    "text": "in terms of transation um so uh among",
    "start": "404240",
    "end": "407840"
  },
  {
    "text": "many tools that the Java runtime provide",
    "start": "407840",
    "end": "411360"
  },
  {
    "text": "is this little one called Java p uh Java",
    "start": "411360",
    "end": "413840"
  },
  {
    "text": "P will let you kind of inspect class",
    "start": "413840",
    "end": "416039"
  },
  {
    "text": "files uh in the B code and then we'll",
    "start": "416039",
    "end": "418080"
  },
  {
    "text": "basically split out spit out what it",
    "start": "418080",
    "end": "420440"
  },
  {
    "text": "thinks uh what the actual Java Source",
    "start": "420440",
    "end": "423080"
  },
  {
    "text": "interfaces would look like uh",
    "start": "423080",
    "end": "425000"
  },
  {
    "text": "interestingly enough since uh the scalac",
    "start": "425000",
    "end": "427440"
  },
  {
    "text": "C compiler generates class files and",
    "start": "427440",
    "end": "429800"
  },
  {
    "text": "bite code that the jvm can understand",
    "start": "429800",
    "end": "431479"
  },
  {
    "text": "you can actually Point Java P at a Scala",
    "start": "431479",
    "end": "434800"
  },
  {
    "text": "translated a class file and see what a",
    "start": "434800",
    "end": "437400"
  },
  {
    "text": "Java uh what what it expects the uh the",
    "start": "437400",
    "end": "440720"
  },
  {
    "text": "Java source file to look like to some",
    "start": "440720",
    "end": "444319"
  },
  {
    "text": "degree um so I'm going to go through a",
    "start": "444319",
    "end": "446759"
  },
  {
    "text": "couple different features that I like",
    "start": "446759",
    "end": "448319"
  },
  {
    "text": "about Scala and things that don't tend",
    "start": "448319",
    "end": "450319"
  },
  {
    "text": "to translate well um when you translate",
    "start": "450319",
    "end": "452599"
  },
  {
    "text": "them back to Java from by code um so if",
    "start": "452599",
    "end": "456400"
  },
  {
    "text": "there was one feature that um I had to",
    "start": "456400",
    "end": "459440"
  },
  {
    "text": "have in Scala and that I could not give",
    "start": "459440",
    "end": "461240"
  },
  {
    "text": "up uh it would be default arguments so",
    "start": "461240",
    "end": "464199"
  },
  {
    "text": "I'm sure you're all familiar with this",
    "start": "464199",
    "end": "466240"
  },
  {
    "text": "type of programming um pre Scala 28 um",
    "start": "466240",
    "end": "469599"
  },
  {
    "text": "you do do this a lot in Java 2",
    "start": "469599",
    "end": "471360"
  },
  {
    "text": "particularly where you don't want to",
    "start": "471360",
    "end": "472479"
  },
  {
    "text": "break interfaces you want to add new",
    "start": "472479",
    "end": "474240"
  },
  {
    "text": "Behavior but maintain older interfaces",
    "start": "474240",
    "end": "477000"
  },
  {
    "text": "and basically we do um is you override",
    "start": "477000",
    "end": "479800"
  },
  {
    "text": "uh so let's say you have a method apply",
    "start": "479800",
    "end": "482199"
  },
  {
    "text": "that takes an INT um and then you build",
    "start": "482199",
    "end": "484960"
  },
  {
    "text": "some client code against that um you",
    "start": "484960",
    "end": "487360"
  },
  {
    "text": "introduce some new feature uh you don't",
    "start": "487360",
    "end": "489639"
  },
  {
    "text": "want to change the usage of the existing",
    "start": "489639",
    "end": "492400"
  },
  {
    "text": "uh interface so basically you add a new",
    "start": "492400",
    "end": "495280"
  },
  {
    "text": "uh uh add a new argument to the method",
    "start": "495280",
    "end": "498120"
  },
  {
    "text": "um and then you can kind of keep",
    "start": "498120",
    "end": "499759"
  },
  {
    "text": "chaining this as you add new features so",
    "start": "499759",
    "end": "501440"
  },
  {
    "text": "that you don't break old features um but",
    "start": "501440",
    "end": "504080"
  },
  {
    "text": "what it ends up being is a lot of boiler",
    "start": "504080",
    "end": "505520"
  },
  {
    "text": "plate um and it it makes you an angry",
    "start": "505520",
    "end": "508360"
  },
  {
    "text": "developer uh is an angry developer at a",
    "start": "508360",
    "end": "511039"
  },
  {
    "text": "younger stage",
    "start": "511039",
    "end": "513080"
  },
  {
    "text": "um uh so basically the format of this",
    "start": "513080",
    "end": "517279"
  },
  {
    "text": "talk is kind of like what you see and",
    "start": "517279",
    "end": "519240"
  },
  {
    "text": "what you may get um so in uh when taken",
    "start": "519240",
    "end": "523680"
  },
  {
    "text": "uh overboard uh you can kind of um take",
    "start": "523680",
    "end": "527200"
  },
  {
    "text": "this this uh feature set which is",
    "start": "527200",
    "end": "529800"
  },
  {
    "text": "basically um allows users of your code",
    "start": "529800",
    "end": "532320"
  },
  {
    "text": "to actually not have to pass in any",
    "start": "532320",
    "end": "534279"
  },
  {
    "text": "arguments just give a default to",
    "start": "534279",
    "end": "535839"
  },
  {
    "text": "everything um and what that actually",
    "start": "535839",
    "end": "539560"
  },
  {
    "text": "generates uh for your Java users um",
    "start": "539560",
    "end": "542279"
  },
  {
    "text": "something that's really ugly it looks",
    "start": "542279",
    "end": "543600"
  },
  {
    "text": "something like this um so how many of",
    "start": "543600",
    "end": "547040"
  },
  {
    "text": "you are kind of already familiar this",
    "start": "547040",
    "end": "548720"
  },
  {
    "text": "might give me a sense of uh the",
    "start": "548720",
    "end": "552880"
  },
  {
    "text": "basically uh that what Java Cod what",
    "start": "552880",
    "end": "556720"
  },
  {
    "text": "calling okay how many of you have kind",
    "start": "556720",
    "end": "559160"
  },
  {
    "text": "of had experience calling into Scala",
    "start": "559160",
    "end": "561279"
  },
  {
    "text": "from java",
    "start": "561279",
    "end": "562399"
  },
  {
    "text": "code okay more than I thought so",
    "start": "562399",
    "end": "565440"
  },
  {
    "text": "hopefully someone appreciates this um so",
    "start": "565440",
    "end": "567880"
  },
  {
    "text": "basically uh whenever you get",
    "start": "567880",
    "end": "569920"
  },
  {
    "text": "um uh uh and in Scala you can have uh",
    "start": "569920",
    "end": "574680"
  },
  {
    "text": "basically the same name type under a",
    "start": "574680",
    "end": "577920"
  },
  {
    "text": "given package uh you can do this with",
    "start": "577920",
    "end": "580440"
  },
  {
    "text": "traits with classes uh with objects um",
    "start": "580440",
    "end": "584600"
  },
  {
    "text": "but actually this is kind of an illegal",
    "start": "584600",
    "end": "586880"
  },
  {
    "text": "thing uh that you can't do in the Java",
    "start": "586880",
    "end": "589200"
  },
  {
    "text": "World um this would uh you would run",
    "start": "589200",
    "end": "592079"
  },
  {
    "text": "into name collisions and the way that",
    "start": "592079",
    "end": "594040"
  },
  {
    "text": "people typically typically work around",
    "start": "594040",
    "end": "595800"
  },
  {
    "text": "this is to uh Nam space namespace things",
    "start": "595800",
    "end": "598839"
  },
  {
    "text": "differently so kind of get away um get",
    "start": "598839",
    "end": "601240"
  },
  {
    "text": "away from the problem with qualification",
    "start": "601240",
    "end": "603720"
  },
  {
    "text": "um but what this is doing here is in",
    "start": "603720",
    "end": "607120"
  },
  {
    "text": "Scala um you can't actually Define",
    "start": "607120",
    "end": "609600"
  },
  {
    "text": "constants uh or static static methods or",
    "start": "609600",
    "end": "612680"
  },
  {
    "text": "whatever for that you have a companion",
    "start": "612680",
    "end": "614360"
  },
  {
    "text": "object um well where do you store that",
    "start": "614360",
    "end": "616640"
  },
  {
    "text": "for um",
    "start": "616640",
    "end": "618360"
  },
  {
    "text": "basically uh the arguments of a",
    "start": "618360",
    "end": "620680"
  },
  {
    "text": "Constructor um there's no State um so",
    "start": "620680",
    "end": "623360"
  },
  {
    "text": "Scala generated uh basically a companion",
    "start": "623360",
    "end": "626120"
  },
  {
    "text": "object for me um and it's basically",
    "start": "626120",
    "end": "628200"
  },
  {
    "text": "storing those",
    "start": "628200",
    "end": "629920"
  },
  {
    "text": "arguments uh that I set in the the uh",
    "start": "629920",
    "end": "633880"
  },
  {
    "text": "the Constructor as a default uh as these",
    "start": "633880",
    "end": "636399"
  },
  {
    "text": "kind of long mangled names um so",
    "start": "636399",
    "end": "639240"
  },
  {
    "text": "basically if a Java user wanted to use",
    "start": "639240",
    "end": "641240"
  },
  {
    "text": "your code in Java uh they don't have the",
    "start": "641240",
    "end": "643800"
  },
  {
    "text": "language feature of default arguments um",
    "start": "643800",
    "end": "646839"
  },
  {
    "text": "available to them so basically they",
    "start": "646839",
    "end": "648320"
  },
  {
    "text": "would be forced to uh reference these",
    "start": "648320",
    "end": "650560"
  },
  {
    "text": "long identifiers if uh if they wanted to",
    "start": "650560",
    "end": "654079"
  },
  {
    "text": "use your interface uh so that said uh",
    "start": "654079",
    "end": "656839"
  },
  {
    "text": "it's worth thinking about not going",
    "start": "656839",
    "end": "658800"
  },
  {
    "text": "overboard and basically providing",
    "start": "658800",
    "end": "660639"
  },
  {
    "text": "default Arguments for everything you",
    "start": "660639",
    "end": "662399"
  },
  {
    "text": "probably actually really want to capture",
    "start": "662399",
    "end": "664399"
  },
  {
    "text": "the common cases um of the the types of",
    "start": "664399",
    "end": "668000"
  },
  {
    "text": "behavior that your your interfaces would",
    "start": "668000",
    "end": "670680"
  },
  {
    "text": "provide um and for the exceptional cases",
    "start": "670680",
    "end": "673519"
  },
  {
    "text": "um the cases that the would be like the",
    "start": "673519",
    "end": "677560"
  },
  {
    "text": "the times the method wouldn't be called",
    "start": "677560",
    "end": "679800"
  },
  {
    "text": "as often and apply default arguments to",
    "start": "679800",
    "end": "682079"
  },
  {
    "text": "those um because um that would kind of",
    "start": "682079",
    "end": "684120"
  },
  {
    "text": "hide it a little bit more from the Java",
    "start": "684120",
    "end": "685839"
  },
  {
    "text": "developers and make them happy and look",
    "start": "685839",
    "end": "688000"
  },
  {
    "text": "less like this",
    "start": "688000",
    "end": "690720"
  },
  {
    "text": "uh so companion objects I kind of",
    "start": "690720",
    "end": "693399"
  },
  {
    "text": "already alluded to this in the last",
    "start": "693399",
    "end": "694839"
  },
  {
    "text": "slide um companion objects again they",
    "start": "694839",
    "end": "698000"
  },
  {
    "text": "work around this problem where in in",
    "start": "698000",
    "end": "699760"
  },
  {
    "text": "Scola you can actually have a a static",
    "start": "699760",
    "end": "702160"
  },
  {
    "text": "method or a constant um basically in",
    "start": "702160",
    "end": "704600"
  },
  {
    "text": "Scala you uh encode that in a companion",
    "start": "704600",
    "end": "707560"
  },
  {
    "text": "object um so let's say you have a class",
    "start": "707560",
    "end": "711000"
  },
  {
    "text": "bippy uh and you have an object bippy uh",
    "start": "711000",
    "end": "714200"
  },
  {
    "text": "if you wanted to store a content for the",
    "start": "714200",
    "end": "716200"
  },
  {
    "text": "type bippy you would most definitely",
    "start": "716200",
    "end": "718200"
  },
  {
    "text": "want to put it in the",
    "start": "718200",
    "end": "719760"
  },
  {
    "text": "uh the your companion object that kind",
    "start": "719760",
    "end": "721880"
  },
  {
    "text": "of reduces like the overhead of object",
    "start": "721880",
    "end": "724560"
  },
  {
    "text": "allocation so you wouldn't need to for",
    "start": "724560",
    "end": "726600"
  },
  {
    "text": "each instance of class bippy to",
    "start": "726600",
    "end": "728160"
  },
  {
    "text": "instantiate new uh um value for each one",
    "start": "728160",
    "end": "731480"
  },
  {
    "text": "of these constants um so what does that",
    "start": "731480",
    "end": "733600"
  },
  {
    "text": "look in like in Java again uh this is",
    "start": "733600",
    "end": "736959"
  },
  {
    "text": "the same kind of thing Scala generates",
    "start": "736959",
    "end": "738959"
  },
  {
    "text": "some kind of mangled names uh you would",
    "start": "738959",
    "end": "741240"
  },
  {
    "text": "reference uh the Singleton object uh",
    "start": "741240",
    "end": "744600"
  },
  {
    "text": "through this uh bippy type that's uh",
    "start": "744600",
    "end": "748199"
  },
  {
    "text": "kind of uh has a suffix of a dollar sign",
    "start": "748199",
    "end": "751040"
  },
  {
    "text": "and then reference it through this um",
    "start": "751040",
    "end": "753760"
  },
  {
    "text": "constant member module dollar sign um",
    "start": "753760",
    "end": "756600"
  },
  {
    "text": "and basically down here is your vanilla",
    "start": "756600",
    "end": "758880"
  },
  {
    "text": "class bippy um basically this guy over",
    "start": "758880",
    "end": "761839"
  },
  {
    "text": "here um and then you can instantiate",
    "start": "761839",
    "end": "764399"
  },
  {
    "text": "that if as if you would any other class",
    "start": "764399",
    "end": "766959"
  },
  {
    "text": "in Java um the sucky thing is that the",
    "start": "766959",
    "end": "770600"
  },
  {
    "text": "Java developers would kind of have to uh",
    "start": "770600",
    "end": "773839"
  },
  {
    "text": "indirectly reference these contents",
    "start": "773839",
    "end": "775480"
  },
  {
    "text": "through this really ugly name which kind",
    "start": "775480",
    "end": "778480"
  },
  {
    "text": "of sucks um but there's some kind of",
    "start": "778480",
    "end": "780480"
  },
  {
    "text": "interesting properties about the way",
    "start": "780480",
    "end": "782120"
  },
  {
    "text": "that uh Skyla treats these two these two",
    "start": "782120",
    "end": "785040"
  },
  {
    "text": "things and I'm going to try to show you",
    "start": "785040",
    "end": "787519"
  },
  {
    "text": "a quick demo of something that's a",
    "start": "787519",
    "end": "789199"
  },
  {
    "text": "little bit neat uh so companions so",
    "start": "789199",
    "end": "793639"
  },
  {
    "text": "basically this is like the kind of what",
    "start": "793639",
    "end": "796839"
  },
  {
    "text": "you saw on this slide earlier um so",
    "start": "796839",
    "end": "800040"
  },
  {
    "text": "let's say we had added some Behavior or",
    "start": "800040",
    "end": "803639"
  },
  {
    "text": "method to bippy say Boop you that biger",
    "start": "803639",
    "end": "808720"
  },
  {
    "text": "uh yeah yeah sorry do not think about",
    "start": "808720",
    "end": "812279"
  },
  {
    "text": "that is this viewable okay so bippy says",
    "start": "812279",
    "end": "817040"
  },
  {
    "text": "Boop and bippy returns get",
    "start": "817040",
    "end": "821399"
  },
  {
    "text": "class get",
    "start": "821399",
    "end": "824079"
  },
  {
    "text": "name if I go back to",
    "start": "824079",
    "end": "826720"
  },
  {
    "text": "here this should automatically give me a",
    "start": "826720",
    "end": "829680"
  },
  {
    "text": "Boop okay um so now uh from a Java's uh",
    "start": "829680",
    "end": "833800"
  },
  {
    "text": "from a Java developer perspective um you",
    "start": "833800",
    "end": "836759"
  },
  {
    "text": "kind of have this boot member which",
    "start": "836759",
    "end": "838399"
  },
  {
    "text": "basically Ates into your companion",
    "start": "838399",
    "end": "840920"
  },
  {
    "text": "objects boop I'm going to fast forward",
    "start": "840920",
    "end": "843920"
  },
  {
    "text": "ahead because I'm running out of time",
    "start": "843920",
    "end": "846560"
  },
  {
    "text": "but another interesting property is what",
    "start": "846560",
    "end": "848320"
  },
  {
    "text": "happens whenever B defines a",
    "start": "848320",
    "end": "852079"
  },
  {
    "text": "Boop really short on time um basically",
    "start": "853279",
    "end": "857880"
  },
  {
    "text": "uh the Java class deals that Boop method",
    "start": "857880",
    "end": "861800"
  },
  {
    "text": "and makes it an instance method",
    "start": "861800",
    "end": "864600"
  },
  {
    "text": "um okay I'm going to try this really",
    "start": "864600",
    "end": "866600"
  },
  {
    "text": "quick uh little check you can do single",
    "start": "866600",
    "end": "869110"
  },
  {
    "text": "[Music]",
    "start": "869110",
    "end": "870240"
  },
  {
    "text": "is to provide an",
    "start": "870240",
    "end": "872519"
  },
  {
    "text": "interface uh familiar to Java",
    "start": "872519",
    "end": "877320"
  },
  {
    "text": "developers live coding always takes more",
    "start": "887880",
    "end": "892480"
  },
  {
    "text": "time oops",
    "start": "896160",
    "end": "900160"
  },
  {
    "text": "yeah I think this will do",
    "start": "905000",
    "end": "907560"
  },
  {
    "text": "it yep um so basically if you wanted to",
    "start": "907560",
    "end": "911519"
  },
  {
    "text": "reference uh the Boop on the bippy uh",
    "start": "911519",
    "end": "915959"
  },
  {
    "text": "basically you can call bippy dogit which",
    "start": "915959",
    "end": "917839"
  },
  {
    "text": "would give you a reference to the",
    "start": "917839",
    "end": "919440"
  },
  {
    "text": "Singleton uh object which is a lot nicer",
    "start": "919440",
    "end": "921720"
  },
  {
    "text": "than call calling bippy dollar sign",
    "start": "921720",
    "end": "923839"
  },
  {
    "text": "module uh and then calling the Boop on",
    "start": "923839",
    "end": "926360"
  },
  {
    "text": "that which kind of gives you an indirect",
    "start": "926360",
    "end": "928040"
  },
  {
    "text": "uh and nice path to do that in Java um",
    "start": "928040",
    "end": "930800"
  },
  {
    "text": "so I did have a couple other examples",
    "start": "930800",
    "end": "932480"
  },
  {
    "text": "but I ran out of time um but uh yeah",
    "start": "932480",
    "end": "936000"
  },
  {
    "text": "until then uh yeah just come talk to me",
    "start": "936000",
    "end": "939160"
  },
  {
    "text": "later",
    "start": "939160",
    "end": "940290"
  },
  {
    "text": "[Applause]",
    "start": "940290",
    "end": "948250"
  }
]