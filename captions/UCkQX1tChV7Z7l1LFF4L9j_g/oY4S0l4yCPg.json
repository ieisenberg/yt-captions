[
  {
    "start": "0",
    "end": "0"
  },
  {
    "text": "[Music]",
    "start": "630",
    "end": "27199"
  },
  {
    "start": "27000",
    "end": "27000"
  },
  {
    "text": "one of the thing that I liked in J was the packaging model and I think one of",
    "start": "27279",
    "end": "32480"
  },
  {
    "text": "the things that was figured out pretty well at the time uh was that an application is built out of different",
    "start": "32480",
    "end": "38920"
  },
  {
    "text": "modules and as part of the fact that they it was built out of different modules they created that type of",
    "start": "38920",
    "end": "44360"
  },
  {
    "text": "hierarchy and that hierarchy included the assembly route the web modules uh",
    "start": "44360",
    "end": "50719"
  },
  {
    "text": "that we all know as a war and application client model and some other modules and also a description a meta",
    "start": "50719",
    "end": "57280"
  },
  {
    "text": "description uh that describe those modules and how they relate to one another now if you look at that",
    "start": "57280",
    "end": "62960"
  },
  {
    "text": "definition that kind of helped to define pretty well what a Java application",
    "start": "62960",
    "end": "68640"
  },
  {
    "text": "looks like uh what is it comprised of and and that model was actually very",
    "start": "68640",
    "end": "74080"
  },
  {
    "text": "successful i think one of the best thing that came out of Ju was was that definition uh so in in many ways uh this",
    "start": "74080",
    "end": "81759"
  },
  {
    "text": "is the type of I think one of the first time that there was an attempt to define an application in a broader spectrum and",
    "start": "81759",
    "end": "89759"
  },
  {
    "text": "that's kind of that was the interesting experience from that world now the thing that have changed that we need to take",
    "start": "89759",
    "end": "96560"
  },
  {
    "start": "96000",
    "end": "96000"
  },
  {
    "text": "care of from that experience uh it's not that that model is wrong or broken or",
    "start": "96560",
    "end": "103360"
  },
  {
    "text": "anything of that line just that the world have changed since the definition came out to the world when the",
    "start": "103360",
    "end": "108720"
  },
  {
    "text": "definition came to the world one of the one of the main assumption is that the world is very much Javaentric everything",
    "start": "108720",
    "end": "115759"
  },
  {
    "text": "is going to be in Java that's how JTE was built everything is going to be Java and therefore our world is Java and our",
    "start": "115759",
    "end": "122799"
  },
  {
    "text": "definition of application is in Java and everything is in Java obviously the world is a little bit different today",
    "start": "122799",
    "end": "129280"
  },
  {
    "text": "it's more heterogeneous and the one of the assumption was that everything that is non Java is pretty much out of scope so",
    "start": "129280",
    "end": "136800"
  },
  {
    "text": "for example even in a Java application if we have a load balancer if we have a database it doesn't fit in that packaging world right so you wouldn't be",
    "start": "136800",
    "end": "144160"
  },
  {
    "text": "able to put in a war file a definition of the actual database and how it is installed or uh the same thing for for",
    "start": "144160",
    "end": "151680"
  },
  {
    "text": "the uh for the load balancer the other thing is that it's doesn't really assume",
    "start": "151680",
    "end": "157840"
  },
  {
    "text": "that the application changed quite a bit in terms of scale and size and all of",
    "start": "157840",
    "end": "162959"
  },
  {
    "text": "those sort of things a lot of the definition was fairly static so a lot of the things that are dynamics are kind of",
    "start": "162959",
    "end": "169519"
  },
  {
    "text": "outside of that meta definition uh so for example having meta definition for",
    "start": "169519",
    "end": "175599"
  },
  {
    "text": "scaling doesn't exist in that in that definition so that's another aspect that when we move to a cloud kind of world we",
    "start": "175599",
    "end": "182159"
  },
  {
    "text": "need to add to that type of definitions we'll talk more about that later on",
    "start": "182159",
    "end": "189719"
  },
  {
    "start": "189000",
    "end": "189000"
  },
  {
    "text": "so if we really look at all of those things and what are the things that have changed as I mentioned earlier the world",
    "start": "189840",
    "end": "196959"
  },
  {
    "text": "is not Java uh we have a world in which we need to combine Java plus a lot of other",
    "start": "196959",
    "end": "203360"
  },
  {
    "text": "languages and it becames more common today than it was in the past cloud in itself as a data center enforces us to",
    "start": "203360",
    "end": "211040"
  },
  {
    "text": "think of automation as something that is pretty baked right into the development",
    "start": "211040",
    "end": "216560"
  },
  {
    "text": "we and I think you had this talk of gradel how many people here was in in this talk of",
    "start": "216560",
    "end": "222200"
  },
  {
    "text": "gradel okay so you're pretty much familiar with that concept of continuous",
    "start": "222200",
    "end": "227480"
  },
  {
    "text": "development so a lot of the concept of cloud actually now become part of our development it's not something that is",
    "start": "227480",
    "end": "234400"
  },
  {
    "text": "done by operations in the data center and we have to think about it early on",
    "start": "234400",
    "end": "239439"
  },
  {
    "text": "the other thing that we have is a lot of open source project tons of them that we want to integrate with to speed up our",
    "start": "239439",
    "end": "246280"
  },
  {
    "text": "development and we don't want to think about integration as an embedding thing right we don't want to embed them into",
    "start": "246280",
    "end": "253120"
  },
  {
    "text": "our application and change the wire file or change the jar file or change meta configuration every time that we want to",
    "start": "253120",
    "end": "258639"
  },
  {
    "text": "use a project so we want to think about integration in a more broader spectrum as a service kind of model",
    "start": "258639",
    "end": "265199"
  },
  {
    "text": "and that's kind of I would say the the few items that have changed that needs",
    "start": "265199",
    "end": "270800"
  },
  {
    "text": "to change the way we deploy application and I'll talk more about that again in a second so that's the other motivation",
    "start": "270800",
    "end": "277759"
  },
  {
    "text": "that we have here so if we really look at the same packaging model trying to",
    "start": "277759",
    "end": "284160"
  },
  {
    "text": "map it to that new world it will look something like this so we'll have an",
    "start": "284160",
    "end": "289639"
  },
  {
    "text": "application and below that application we'll have a bunch of services services are like jav files are not",
    "start": "289639",
    "end": "296160"
  },
  {
    "text": "necessarily package of libraries that sits in one file there would be different files potentially that could",
    "start": "296160",
    "end": "303600"
  },
  {
    "text": "live in different places but will have one definition of how how they relate to one another okay it's the same thing",
    "start": "303600",
    "end": "309600"
  },
  {
    "text": "that we have in web.xml or something like that but the difference is that they don't necessarily need to be",
    "start": "309600",
    "end": "315280"
  },
  {
    "text": "packaged in one file so think about it in that way and that will help you and I'll show you what that means in a",
    "start": "315280",
    "end": "320639"
  },
  {
    "text": "second the other definition is that a package can be a an application which is",
    "start": "320639",
    "end": "327120"
  },
  {
    "text": "basically a bunch of processes interconnected to one another and and again it's not",
    "start": "327120",
    "end": "333880"
  },
  {
    "text": "Java bear in mind that I mentioned processes and a process could be mapped to Java but it doesn't have to be Java a",
    "start": "333880",
    "end": "341600"
  },
  {
    "text": "process on an operating system could be anything so once we work it at a process level we're pretty much agnostic on the",
    "start": "341600",
    "end": "347600"
  },
  {
    "text": "language by which it was produced and that's another thing that gives us",
    "start": "347600",
    "end": "352800"
  },
  {
    "text": "the ability to define the application context if you'd like without binding it",
    "start": "352800",
    "end": "358479"
  },
  {
    "text": "to a particular language uh so we have an application uh a pod is basically a way to say that we",
    "start": "358479",
    "end": "366160"
  },
  {
    "text": "have services that needs to be uh interrelated to one another uh in an affinity model meaning that they need to",
    "start": "366160",
    "end": "372639"
  },
  {
    "text": "sit in the same machine for example uh so the services are decoupled from one",
    "start": "372639",
    "end": "377680"
  },
  {
    "text": "another at some point but in some cases we do want to say you know that web tier and that database tier needs to sit on",
    "start": "377680",
    "end": "384800"
  },
  {
    "text": "the same machine because we don't really scale them separately and in a lot of the assembly especially in multi-tenant SAS applications you do build",
    "start": "384800",
    "end": "391759"
  },
  {
    "text": "application like that so for example when Salesforce provision a machine they provision the machine with a database",
    "start": "391759",
    "end": "398160"
  },
  {
    "text": "with a lot of components in that machine that serves let's say a 100 customers per machine and that's how they",
    "start": "398160",
    "end": "403759"
  },
  {
    "text": "provisioned their SAS operation it's very common in a SAS world to build the entire environment like that so you",
    "start": "403759",
    "end": "409680"
  },
  {
    "text": "build stacks combine them together you know that they're going to serve that amount of load and then you pile them",
    "start": "409680",
    "end": "415120"
  },
  {
    "text": "out and that becomes your application so we need to have that construct as well as part of the",
    "start": "415120",
    "end": "421400"
  },
  {
    "text": "definition and as I mentioned they're interrelated to one another so there is some dependency the difference in that",
    "start": "421400",
    "end": "427520"
  },
  {
    "text": "in that dependencies as opposed to let's say the spring definition of injection or as opposed to the web XML definition",
    "start": "427520",
    "end": "435039"
  },
  {
    "text": "of injection the difference is that it's going to be distributed meaning that it's not a container a single container",
    "start": "435039",
    "end": "442080"
  },
  {
    "text": "that's going to build all those libraries and wire them up it's going to be a distributed deployment so we're",
    "start": "442080",
    "end": "448319"
  },
  {
    "text": "going to have a web talking to a database and they're going to be interrelated meaning that when we launch",
    "start": "448319",
    "end": "454800"
  },
  {
    "text": "the database we need to notify the web container that this is where the place in which that database exists when we",
    "start": "454800",
    "end": "462400"
  },
  {
    "start": "455000",
    "end": "455000"
  },
  {
    "text": "deploy the application we don't know where the database exists we don't even need to assume where it exists we're",
    "start": "462400",
    "end": "468880"
  },
  {
    "text": "just saying that this web container relates to this database with that name and once the provisioning happens this",
    "start": "468880",
    "end": "476000"
  },
  {
    "text": "is where the injection happens but it happens in the distributed fashion all that wiring happen is in the distributed",
    "start": "476000",
    "end": "481759"
  },
  {
    "text": "fashion and the definition the meta definition needs to take that into account it doesn't need to reference to",
    "start": "481759",
    "end": "487919"
  },
  {
    "text": "a specific IP for example it needs to reference to the logical service behind that and as I mentioned a service could",
    "start": "487919",
    "end": "494800"
  },
  {
    "text": "be anything uh and not not necessarily Java processes actually a lot of that",
    "start": "494800",
    "end": "500000"
  },
  {
    "text": "wouldn't be Java so Java would be just a private case of those services",
    "start": "500000",
    "end": "505360"
  },
  {
    "text": "and this is just a typical example of how an application looks like today this is a typical big data application the",
    "start": "505360",
    "end": "511919"
  },
  {
    "text": "word typical for big data is not that uh could be an ex oxymoron for some people",
    "start": "511919",
    "end": "517839"
  },
  {
    "text": "but uh but big data become very common so uh this is a true typical environment",
    "start": "517839",
    "end": "524000"
  },
  {
    "text": "that I took from one of the architecture so you could see for example Hadoop meache my SQL uh a lot of streaming",
    "start": "524000",
    "end": "530480"
  },
  {
    "text": "processing out there and and what you could see is two things one of them is the tragenicity but also the complexity",
    "start": "530480",
    "end": "537600"
  },
  {
    "text": "of that thing what we want in that application context is the ability to describe that thing okay not just one",
    "start": "537600",
    "end": "545360"
  },
  {
    "text": "component of that which is the right layer here or the left layer here because we have that already what we",
    "start": "545360",
    "end": "552320"
  },
  {
    "text": "want is the ability to define all that why do we want to ability to define all that because we want to be able to clone",
    "start": "552320",
    "end": "558480"
  },
  {
    "text": "that very easily we want to be able to maintain that very easy we want to say take that entire thing deploy it on",
    "start": "558480",
    "end": "563600"
  },
  {
    "text": "Amazon take that entire thing deploy it on Rackspace if we can define",
    "start": "563600",
    "end": "569320"
  },
  {
    "text": "it in a way that can describe all those definitions then we can actually do that",
    "start": "569320",
    "end": "575360"
  },
  {
    "text": "and if we can't then we can and that's the motivation behind that so that",
    "start": "575360",
    "end": "581519"
  },
  {
    "text": "brings to the next point is that enough yes so one aspect",
    "start": "581519",
    "end": "587519"
  },
  {
    "text": "is that we're missing some information so if we only have the definition of the packaging meaning what are the tiers of",
    "start": "587519",
    "end": "593360"
  },
  {
    "text": "my application how each individual tier is installed is that going to be useful enough so let's say that I'm throwing it",
    "start": "593360",
    "end": "599360"
  },
  {
    "text": "out into into some orchestration layer and it takes all that definition and operate around that would that be enough",
    "start": "599360",
    "end": "605839"
  },
  {
    "text": "so one point of dimension is that the operation needs to have a lot of information about the dependency so for",
    "start": "605839",
    "end": "611760"
  },
  {
    "text": "example if I do that manually today when I deploy a database it's not just deploying a process of a database I'm",
    "start": "611760",
    "end": "618480"
  },
  {
    "text": "deploying it someone need to know that the database includes my data that I can actually query the data before I'm",
    "start": "618480",
    "end": "624480"
  },
  {
    "text": "launching the web tier because if I launch the web tier just because just when the process of the database is there it might actually have a timing",
    "start": "624480",
    "end": "632320"
  },
  {
    "text": "issue I may launch the the web tier it will connect to the database but wouldn't find the data because the data",
    "start": "632320",
    "end": "637600"
  },
  {
    "text": "is still being loaded so how do I know that information how do I define that type of dependency if I try to map all",
    "start": "637600",
    "end": "644560"
  },
  {
    "text": "those dependencies I'm going to get to a very chaotic definition or very complex definition so that's part is is missing",
    "start": "644560",
    "end": "651600"
  },
  {
    "text": "the other part that is missing is the following thing uh and and those who have been in these uh continuous",
    "start": "651600",
    "end": "657800"
  },
  {
    "text": "development discussions should be very much aware of that this is another important aspect of",
    "start": "657800",
    "end": "664720"
  },
  {
    "text": "application and in cloud it becomes actually even more important than the packaging side of it how we operate the application ways",
    "start": "664720",
    "end": "672959"
  },
  {
    "text": "that information sits today in many cases in in many",
    "start": "672959",
    "end": "678440"
  },
  {
    "text": "places so you'll find that in scripts shell scripts you'll find that in chef",
    "start": "678440",
    "end": "683519"
  },
  {
    "text": "and some other configuration tools",
    "start": "683519",
    "end": "687880"
  },
  {
    "text": "right yes so so the idea is that an",
    "start": "689839",
    "end": "695440"
  },
  {
    "text": "application also had definition of its operational aspect so when when I want to describe",
    "start": "695440",
    "end": "701760"
  },
  {
    "text": "an application I can't really describe only the component of the application or even the configuration i need to",
    "start": "701760",
    "end": "707279"
  },
  {
    "text": "describe the operational aspect the operational dependencies and operational dependency have aspects on deployment",
    "start": "707279",
    "end": "713279"
  },
  {
    "start": "708000",
    "end": "708000"
  },
  {
    "text": "and post- deployment on deployment it's pretty much the life cycle the the regular life cycle of installation",
    "start": "713279",
    "end": "719600"
  },
  {
    "text": "configuration setup and startup but the more complex thing is the post- deployment aspect how do I scale it what",
    "start": "719600",
    "end": "726399"
  },
  {
    "text": "happens when something breaks what is the failover process when a tier fails does that mean",
    "start": "726399",
    "end": "733519"
  },
  {
    "text": "what are the dependency that is going to be broken up and how do you do that so you know how to do that manually there",
    "start": "733519",
    "end": "739680"
  },
  {
    "text": "is no reasons why you couldn't really map that to something more automatically the other thing that we",
    "start": "739680",
    "end": "745839"
  },
  {
    "text": "need to know uh in in the post deployment aspect is also not just how",
    "start": "745839",
    "end": "751920"
  },
  {
    "text": "we uh fail over and and scale that that application but also how we maintain it",
    "start": "751920",
    "end": "757680"
  },
  {
    "text": "so for example when we do an update of a wire in a web container there's usually a process behind it we do it in a",
    "start": "757680",
    "end": "764240"
  },
  {
    "text": "certain order we do it in a way that uh wouldn't break the application that is",
    "start": "764240",
    "end": "769600"
  },
  {
    "text": "currently running so there is a lot of that definition as well a lot of that knowledge as well that is outside of any",
    "start": "769600",
    "end": "776079"
  },
  {
    "text": "description of the application so if we want to take that application and build it from scratch again without that",
    "start": "776079",
    "end": "783240"
  },
  {
    "text": "knowledge something is going to break so this is an application so what we",
    "start": "783240",
    "end": "788639"
  },
  {
    "text": "basically trying to do is map what is an application as it is done today and",
    "start": "788639",
    "end": "794160"
  },
  {
    "text": "there's all those aspects that we need to take care of and the reason why we need to take care of that differently",
    "start": "794160",
    "end": "800560"
  },
  {
    "text": "than we used to is because the cloud or this type of dynamic world inforce uses to do that there's almost no way where",
    "start": "800560",
    "end": "808000"
  },
  {
    "text": "we could do that effectively without having this knowledge or building the application with that knowledge in in",
    "start": "808000",
    "end": "813680"
  },
  {
    "text": "place now the other aspect is the consistency",
    "start": "813680",
    "end": "820880"
  },
  {
    "text": "now if we talk about u hetrogenous world one of the problem",
    "start": "820880",
    "end": "826160"
  },
  {
    "text": "in hetrogenous world and don't get stuck in that picture u one of the problem is that think about",
    "start": "826160",
    "end": "834000"
  },
  {
    "text": "just having a dupe and Tom cut right how do you install Tom cut you pretty much",
    "start": "834000",
    "end": "839279"
  },
  {
    "text": "know there's a set of things try to do the same thing that you do for Tomcat from installation scaling and everything",
    "start": "839279",
    "end": "845920"
  },
  {
    "text": "to adoop right it's going to be completely different now try to do that to my to my SQL That's going to be",
    "start": "845920",
    "end": "851519"
  },
  {
    "text": "another thing that is completely different how do you monitor those things that's going to be also completely different between all those",
    "start": "851519",
    "end": "857600"
  },
  {
    "text": "tiers and application so if it's not consistent across our stack the",
    "start": "857600",
    "end": "863560"
  },
  {
    "text": "complexity becomes exponential of managing that entire thing so one of the",
    "start": "863560",
    "end": "869120"
  },
  {
    "text": "things that we want to do is make that consistent consistent not by replacing the tiers but by providing a layer that",
    "start": "869120",
    "end": "876079"
  },
  {
    "text": "will make it consistent and that layer is going to map into the individual way of how MySQL do things but from an",
    "start": "876079",
    "end": "882000"
  },
  {
    "text": "operational perspective it will look the same so we'll call the same thing behind the scenes it will actually do different",
    "start": "882000",
    "end": "888120"
  },
  {
    "text": "things and in that way we can actually glue or provide a consistent layer across all those different things so the",
    "start": "888120",
    "end": "894639"
  },
  {
    "text": "way we're going to install Adoope is going to be very much different to the way we installed Tom Cut and that's going to simplify quite a bit the",
    "start": "894639",
    "end": "900800"
  },
  {
    "text": "environment itself so that's the other bit that we need to keep in mind so we have a very ambitious goal here okay now",
    "start": "900800",
    "end": "907440"
  },
  {
    "text": "the next thing is how the hell do we do that",
    "start": "907440",
    "end": "914560"
  },
  {
    "start": "914000",
    "end": "914000"
  },
  {
    "text": "okay one of the answers and I think you those who have been in the gradal discussion have probably heard that",
    "start": "915639",
    "end": "923959"
  },
  {
    "text": "DSL DSL stands for domain specific language and the idea of domain specific",
    "start": "923959",
    "end": "930160"
  },
  {
    "text": "language is to try to map that problem which is the domain that we're talking about the domain is the problem of the",
    "start": "930160",
    "end": "937279"
  },
  {
    "text": "orchestration that I described earlier and now we want to define",
    "start": "937279",
    "end": "943360"
  },
  {
    "text": "something that can describe an application with all those different",
    "start": "943360",
    "end": "948519"
  },
  {
    "text": "constraints so if we take any language today whether it's Java Groovy Ruby whatever and try to implement it in",
    "start": "948519",
    "end": "955279"
  },
  {
    "text": "those languages we'll find ourselves doing a lot of verbose thing that are not",
    "start": "955279",
    "end": "960600"
  },
  {
    "text": "readable because they are not specific to our domain again our domain is orchestration i don't want to see a lot",
    "start": "960600",
    "end": "967519"
  },
  {
    "text": "of code that if I'll you know walk through that code I may understand what it actually does i want to see something",
    "start": "967519",
    "end": "974240"
  },
  {
    "text": "that says scale when the Tom cut server",
    "start": "974240",
    "end": "979600"
  },
  {
    "text": "has uh latency of 10 seconds or less than a second with not more than two",
    "start": "979600",
    "end": "987000"
  },
  {
    "text": "instances and if it's less than 10 second or less than a second scale it",
    "start": "987000",
    "end": "993279"
  },
  {
    "text": "down that's how I want to describe things i don't want to describe with a",
    "start": "993279",
    "end": "998720"
  },
  {
    "text": "code with a lot of verbos code that no one is going to be implement be able to",
    "start": "998720",
    "end": "1003920"
  },
  {
    "text": "maintain or even read i want to be able to describe that my application has a a",
    "start": "1003920",
    "end": "1009360"
  },
  {
    "text": "Tom cut server as a web tier MySQL as a database and they depend on one another",
    "start": "1009360",
    "end": "1015040"
  },
  {
    "text": "that's how I want to describe things and I will have that description in a very nonverbos way to describe it so a domain",
    "start": "1015040",
    "end": "1022079"
  },
  {
    "text": "specific language could be a mean to solve that problem and we'll see how we",
    "start": "1022079",
    "end": "1028319"
  },
  {
    "text": "can use that and that kind of a good segue to the rest of the discussion so a few examples just to give you an idea",
    "start": "1028319",
    "end": "1034319"
  },
  {
    "text": "what is a domain specific language you could see that it's not a new concept we actually implemented that quite a bit",
    "start": "1034319",
    "end": "1039520"
  },
  {
    "text": "even without the definition of a domain specific language a good example for that is SQL sql is a domain specific",
    "start": "1039520",
    "end": "1045038"
  },
  {
    "text": "language for managing data and it's a very successful one it's actually something that we've had for years",
    "start": "1045039",
    "end": "1052160"
  },
  {
    "text": "another example for domain specific language is even a regular expression for string manipulation right",
    "start": "1052160",
    "end": "1059360"
  },
  {
    "text": "so we've been using that concept for years without necessarily calling it by name and the idea here is that we could",
    "start": "1059360",
    "end": "1066000"
  },
  {
    "text": "apply that same rule to the problem that I described earlier and that's going to",
    "start": "1066000",
    "end": "1071120"
  },
  {
    "text": "be the mean to a solution",
    "start": "1071120",
    "end": "1077400"
  },
  {
    "text": "now the other example and this ties to what you described earlier doesn't chef",
    "start": "1077400",
    "end": "1083039"
  },
  {
    "text": "do the same thing uh we actually borrowing another idea of how people have done or solved",
    "start": "1083039",
    "end": "1089919"
  },
  {
    "text": "similar problem and in the develop world chef world Ruby world uh there was a",
    "start": "1089919",
    "end": "1096559"
  },
  {
    "text": "concept that was uh called recipe so recipe basically try to not create a DSL",
    "start": "1096559",
    "end": "1103840"
  },
  {
    "text": "that defines everything but use a DSL that provides a framework in which we",
    "start": "1103840",
    "end": "1109120"
  },
  {
    "text": "could put the definitions our definitions our specific definitions and our specific definition can be very",
    "start": "1109120",
    "end": "1115600"
  },
  {
    "text": "different so we're not going to try and create a DSL that has now all the",
    "start": "1115600",
    "end": "1121360"
  },
  {
    "text": "definition that says my SQL has this and this and the web tier has this and this",
    "start": "1121360",
    "end": "1126799"
  },
  {
    "text": "because that's going to be an endless work and it's never going to be uh doable because an application world is a",
    "start": "1126799",
    "end": "1134799"
  },
  {
    "text": "is a living organism it's always changing it's always there is always new application new features new versions",
    "start": "1134799",
    "end": "1140160"
  },
  {
    "text": "there's no way we can map that to one language that could cover it all so what we can do from a scope perspective is",
    "start": "1140160",
    "end": "1146720"
  },
  {
    "text": "create enough construct in which we could put that specific definitions in a",
    "start": "1146720",
    "end": "1152960"
  },
  {
    "text": "way that is readable but there's going to be specific definitions per",
    "start": "1152960",
    "end": "1158120"
  },
  {
    "text": "service that is outside of the domain of the spec domain specific language but the domain specific language is going to",
    "start": "1158120",
    "end": "1164000"
  },
  {
    "text": "give us that framework for example how to start the server the implementation",
    "start": "1164000",
    "end": "1169039"
  },
  {
    "start": "1168000",
    "end": "1168000"
  },
  {
    "text": "of how to start a server would be different outside of the domain specific",
    "start": "1169039",
    "end": "1174080"
  },
  {
    "text": "language context but how we call it and where we call it could be a standard way and",
    "start": "1174080",
    "end": "1180960"
  },
  {
    "text": "that's the type of trade-offs that we're trying to map here so we're not trying to create a language that will map the",
    "start": "1180960",
    "end": "1186960"
  },
  {
    "text": "world right now these are the type of things that we need to have as part of that",
    "start": "1186960",
    "end": "1192600"
  },
  {
    "text": "DSL what components do we have what are the dependency between them how to install the services where the",
    "start": "1192600",
    "end": "1198400"
  },
  {
    "text": "application and the binaries sit so where to grab them from is that a a web",
    "start": "1198400",
    "end": "1205120"
  },
  {
    "text": "container is that a a Maven repository is that a GitHub anything that fits into",
    "start": "1205120",
    "end": "1212039"
  },
  {
    "text": "that and and then and as I mentioned earlier the post- deployment aspect what",
    "start": "1212039",
    "end": "1217600"
  },
  {
    "text": "happens in the case of a failure and so forth and how to monitor each of those components so that's the DSL that we",
    "start": "1217600",
    "end": "1223600"
  },
  {
    "text": "want to create we want to create a DSL that has all those",
    "start": "1223600",
    "end": "1228760"
  },
  {
    "text": "construct okay let's go on then by the way when we",
    "start": "1228760",
    "end": "1233919"
  },
  {
    "text": "have that DSL in place someone need to understand it and this is going to be an orchestration server or something that",
    "start": "1233919",
    "end": "1239919"
  },
  {
    "text": "can read that and execute upon that so we just by creating a DSL that's not enough we need an engine that can parse",
    "start": "1239919",
    "end": "1246400"
  },
  {
    "text": "it and understand it and do something meaningful with that so we need those two components to solve that problem",
    "start": "1246400",
    "end": "1255280"
  },
  {
    "start": "1253000",
    "end": "1253000"
  },
  {
    "text": "okay how chef does that this is an example of a DSL in chef so what chef",
    "start": "1256280",
    "end": "1262559"
  },
  {
    "text": "did that's an interesting lesson for us as Java users is took Ruby so basically",
    "start": "1262559",
    "end": "1268919"
  },
  {
    "text": "said Ruby has a lot of construct in the language in itself that is a good fit",
    "start": "1268919",
    "end": "1275520"
  },
  {
    "text": "for creating DSL what are the construct it reduces a lot of verbose things like",
    "start": "1275520",
    "end": "1280880"
  },
  {
    "text": "columns and semicolumns and others and it can be",
    "start": "1280880",
    "end": "1285960"
  },
  {
    "text": "extendable i I'll show you how you do that in Java but that was a general concept and that what made a lot of the",
    "start": "1285960",
    "end": "1293120"
  },
  {
    "text": "Ruby guys adopting the concept of DSL to do a lot of that orchestration so what",
    "start": "1293120",
    "end": "1298159"
  },
  {
    "text": "we could see here is something that is more readable i can actually read that and understand that what we're doing",
    "start": "1298159",
    "end": "1303200"
  },
  {
    "text": "here is basically trying to change a configuration of a web server that is in",
    "start": "1303200",
    "end": "1309640"
  },
  {
    "text": "some cluster so we're basically doing a search on a cluster finding the node that fits to a certain name and setting",
    "start": "1309640",
    "end": "1316880"
  },
  {
    "text": "up the configuration of that that's basically what we're doing so again try to do that in a regular",
    "start": "1316880",
    "end": "1323640"
  },
  {
    "text": "scripting you'll find that it's much more vivos so by using a DSL in that",
    "start": "1323640",
    "end": "1330000"
  },
  {
    "text": "context we can simplify that process because we have a lot of more construct in place and more services in place to",
    "start": "1330000",
    "end": "1336640"
  },
  {
    "text": "help us do that same task and the result is less verose much simpler to read much",
    "start": "1336640",
    "end": "1341919"
  },
  {
    "text": "simpler to understand but that doesn't help us we're here in a Java users group right",
    "start": "1341919",
    "end": "1349520"
  },
  {
    "text": "so I'm not going to teach you Ruby right now or even J Ruby so the question is",
    "start": "1349520",
    "end": "1355120"
  },
  {
    "text": "how can we do that in Java and that's I think the answer is pretty uh obvious",
    "start": "1355120",
    "end": "1361200"
  },
  {
    "text": "right from the topic of this discussion what are we going to use uh",
    "start": "1361200",
    "end": "1366240"
  },
  {
    "text": "this is where Groovy fits in why",
    "start": "1366240",
    "end": "1372360"
  },
  {
    "text": "Groovy so Groovy takes a lot of those ideas of those other languages like Ruby",
    "start": "1372360",
    "end": "1379120"
  },
  {
    "text": "but do that same thing in Java the problem with Ruby for Java users is that",
    "start": "1379120",
    "end": "1384799"
  },
  {
    "text": "it's a different domain right it's a maybe it can utilize the same language or the same JVM but it's a different",
    "start": "1384799",
    "end": "1393080"
  },
  {
    "text": "language you can't really use effectively the same pules the same object uh and and and if you're a Java",
    "start": "1393080",
    "end": "1400640"
  },
  {
    "text": "users you'll find that context switch is is very different so what Groovy is trying to do is take a",
    "start": "1400640",
    "end": "1408720"
  },
  {
    "text": "lot of those keep you within that Java domain but give you a lot of the features of those of those dynamic",
    "start": "1408720",
    "end": "1415320"
  },
  {
    "text": "languages one of the features is reducing the verbosity uh what is also referred to as",
    "start": "1415320",
    "end": "1422559"
  },
  {
    "text": "syntactical noise so for example if I look at that code I could see that in",
    "start": "1422559",
    "end": "1427919"
  },
  {
    "text": "Groovy I can reduce a lot of the the things that are not really meaningful to",
    "start": "1427919",
    "end": "1434000"
  },
  {
    "text": "run my application just by running Groovy without any DSL okay so Ruby in",
    "start": "1434000",
    "end": "1441039"
  },
  {
    "text": "itself gives me power to simplify things just by the fact that I'm using",
    "start": "1441039",
    "end": "1447240"
  },
  {
    "text": "Groovy so that's the first thing the second thing that it's",
    "start": "1447240",
    "end": "1453240"
  },
  {
    "text": "extendable it's extendable in the case that I can actually configure the compiler and add things into that like",
    "start": "1453240",
    "end": "1460279"
  },
  {
    "text": "imports so I can reduce the calls to imports i can reduce the calls to for",
    "start": "1460279",
    "end": "1465840"
  },
  {
    "text": "example I can write something very readable like that because it's extendable move left at three kilometers",
    "start": "1465840",
    "end": "1472960"
  },
  {
    "text": "an hour that's very very readable but in order to implement that this line would be",
    "start": "1472960",
    "end": "1479520"
  },
  {
    "text": "actually a code that runs we need to be able to interact with the actual language engine the compiler the and",
    "start": "1479520",
    "end": "1486640"
  },
  {
    "text": "other configuration other things that are called binding in the language itself meaning the ability to provide",
    "start": "1486640",
    "end": "1492080"
  },
  {
    "text": "context to say when you run that code actually run it without import before",
    "start": "1492080",
    "end": "1497279"
  },
  {
    "text": "you actually run that when you run that code use that basecloud for every class that you're generating for that",
    "start": "1497279",
    "end": "1503120"
  },
  {
    "text": "particular script so I can hook and talk to the compiler and do things that will",
    "start": "1503120",
    "end": "1508480"
  },
  {
    "text": "enable me to extend the language i can even change the class on the fly and say",
    "start": "1508480",
    "end": "1513600"
  },
  {
    "start": "1511000",
    "end": "1511000"
  },
  {
    "text": "well you know what you could actually add properties into that class dynamically because I know that for that",
    "start": "1513600",
    "end": "1519120"
  },
  {
    "text": "domain I need those properties in place and there is a way to control that so",
    "start": "1519120",
    "end": "1524880"
  },
  {
    "text": "there is a security model in which I can say to the compiler what I'm allowed to do and not allowed to do so that people",
    "start": "1524880",
    "end": "1530720"
  },
  {
    "text": "wouldn't be able to mess up with the DSL and do the wrong things as well so the",
    "start": "1530720",
    "end": "1535760"
  },
  {
    "text": "basic idea in the language that gives me that power is the ability to interact with the compiler and and basically",
    "start": "1535760",
    "end": "1542720"
  },
  {
    "text": "provide that definition on those different points in the compiler that",
    "start": "1542720",
    "end": "1547760"
  },
  {
    "text": "otherwise wouldn't be able to do that's what makes Groovy or Ruby for that case",
    "start": "1547760",
    "end": "1553200"
  },
  {
    "text": "something a tool that is very good for DSL another",
    "start": "1553200",
    "end": "1559039"
  },
  {
    "text": "example you could see an example of how the code would look like without Ruby",
    "start": "1559400",
    "end": "1564799"
  },
  {
    "text": "and how we could look into uh the Groovy kind of scenario it's the uh command",
    "start": "1564799",
    "end": "1570640"
  },
  {
    "text": "chaining kind of model so in uh in Java if we'll try to write something like",
    "start": "1570640",
    "end": "1576880"
  },
  {
    "text": "that it will look like the things at the top and we'll need to do a lot of work to actually make that code work returns",
    "start": "1576880",
    "end": "1582880"
  },
  {
    "text": "and other things in Groovy that becomes something that is built into the language itself so we could call take",
    "start": "1582880",
    "end": "1589200"
  },
  {
    "text": "which would be a method take and the second thing that we'll do is we'll pass a",
    "start": "1589200",
    "end": "1594760"
  },
  {
    "text": "parameter and if we don't pass other parameters then the second thing would be another method call on that same",
    "start": "1594760",
    "end": "1602600"
  },
  {
    "text": "object and then another thing is the parameters but because we're using",
    "start": "1602600",
    "end": "1608679"
  },
  {
    "text": "uh the the second parameters you could see that using this to actually define",
    "start": "1608679",
    "end": "1614480"
  },
  {
    "text": "that these are two parameters for this method and then if we don't use that then the",
    "start": "1614480",
    "end": "1621120"
  },
  {
    "text": "second thing becomes another method and this would be the parameters for that method but the result of that is very",
    "start": "1621120",
    "end": "1627080"
  },
  {
    "text": "readable like a you as a human I can read that and understand what it does even if I'm not a coder and to implement",
    "start": "1627080",
    "end": "1634960"
  },
  {
    "text": "that it's much simpler if I try to implement it in Java I need to actually write that code in that way so I can do",
    "start": "1634960",
    "end": "1642000"
  },
  {
    "text": "that chaining so every time that I'm running that class it needs to return itself in order that the next chain in",
    "start": "1642000",
    "end": "1647840"
  },
  {
    "text": "the command would be able to work on the same instance and so forth and so forth which becomes more verbos for uh",
    "start": "1647840",
    "end": "1654520"
  },
  {
    "text": "development so that's another property of the language that makes Groovy more",
    "start": "1654520",
    "end": "1660640"
  },
  {
    "text": "useful for building DSL so we touch on some of those aspects obviously I didn't cover there's more aspect to that but I",
    "start": "1660640",
    "end": "1667600"
  },
  {
    "text": "thought but but I thought that the main message is that we're using Groovy because it's extendable because it gives",
    "start": "1667600",
    "end": "1673760"
  },
  {
    "text": "us the ability to control the compiler and because we can create DSL as a result of that okay so now that we",
    "start": "1673760",
    "end": "1681360"
  },
  {
    "text": "talked about the idea the problem what we're trying to solve I wanted to give you an example on how we solved it and",
    "start": "1681360",
    "end": "1689279"
  },
  {
    "text": "when when I'm saying we I'm the CEO of Gigaspace I actually didn't introduce myself so my my name is Nadi Shalom and",
    "start": "1689279",
    "end": "1695840"
  },
  {
    "text": "I'm the CEO and founder of Gigaspaces and one of the things that we do is we launch a product an open source project",
    "start": "1695840",
    "end": "1701679"
  },
  {
    "text": "that is called Cloudify one of the things that we try to do in Cloudify is actually solve a lot of those problems",
    "start": "1701679",
    "end": "1707200"
  },
  {
    "text": "and what I'm going to do in the next slides is reference to that project and reference to that in a generic way",
    "start": "1707200",
    "end": "1713520"
  },
  {
    "text": "meaning what are the lessons that we took what are the methods that we use to address the question that I mentioned",
    "start": "1713520",
    "end": "1719840"
  },
  {
    "text": "earlier and hopefully you're going to take that as a as a lessons and a lot of those ideas as I mentioned earlier are",
    "start": "1719840",
    "end": "1725520"
  },
  {
    "text": "generic so you could very much take it and implement it in your own project so let's see how we address that",
    "start": "1725520",
    "end": "1733600"
  },
  {
    "start": "1731000",
    "end": "1731000"
  },
  {
    "text": "so first of all when we created the DSL remember the structure of an application",
    "start": "1733600",
    "end": "1741200"
  },
  {
    "text": "uh that we look at so we said okay we need to map the domain model of that DSL into that",
    "start": "1741200",
    "end": "1747760"
  },
  {
    "text": "structure so the constraint or the construct that we have is an application the core",
    "start": "1747760",
    "end": "1754080"
  },
  {
    "text": "construct is an application and a service we also have a pod we didn't implement it yet that pod model but",
    "start": "1754080",
    "end": "1760480"
  },
  {
    "text": "that's something that will come down the line but the main construct are an application and a service we'll see how",
    "start": "1760480",
    "end": "1766559"
  },
  {
    "text": "that maps into a groovy based DSL so you'll see what I'm talking",
    "start": "1766559",
    "end": "1773039"
  },
  {
    "start": "1773000",
    "end": "1773000"
  },
  {
    "text": "about look at that basically what we we have here is a pet",
    "start": "1774279",
    "end": "1779600"
  },
  {
    "text": "clink application that as Java users you're probably familiar with that it's a pretty common example that is actually",
    "start": "1779600",
    "end": "1784799"
  },
  {
    "text": "using not my SQL but using a database that is a and itself is built out of services demon yeah",
    "start": "1784799",
    "end": "1792640"
  },
  {
    "text": "exactly so itself is built out of services so we describe them as services as well and uh and that's how we",
    "start": "1792640",
    "end": "1800399"
  },
  {
    "text": "construct that so we can actually take a complete cluster and map that in that world and there is dependency between them so you could see for example that",
    "start": "1800399",
    "end": "1806799"
  },
  {
    "text": "the Tom cut service and the service is dependent on one another actually I omitted the dependency just",
    "start": "1806799",
    "end": "1813279"
  },
  {
    "text": "to make the snippet here something that could fit into that slide but there's",
    "start": "1813279",
    "end": "1818799"
  },
  {
    "text": "also uh the dependency like in this case those other tiers that I missed",
    "start": "1818799",
    "end": "1825000"
  },
  {
    "text": "here so for example when I'm saying depends on that means that this one runs",
    "start": "1825000",
    "end": "1830240"
  },
  {
    "text": "after this one exactly exactly so that's an example of",
    "start": "1830240",
    "end": "1837039"
  },
  {
    "text": "how I configure that but you could see that you could actually read that and understand what that",
    "start": "1837039",
    "end": "1843520"
  },
  {
    "text": "application does and how it is comprised and what are the tiers of that application how they relate to one another without understanding very much",
    "start": "1843520",
    "end": "1850159"
  },
  {
    "text": "how each tier works now that's not enough obviously but it it already",
    "start": "1850159",
    "end": "1856320"
  },
  {
    "text": "simplifies our world quite a bit try to go to anywhere in your Java code",
    "start": "1856320",
    "end": "1861840"
  },
  {
    "text": "and find how your application is built in one single file in a very simple",
    "start": "1861840",
    "end": "1867120"
  },
  {
    "text": "readable way you find PowerPoint presentations that changes all the time and never and documents and wikis but",
    "start": "1867120",
    "end": "1875360"
  },
  {
    "text": "never something that is binary that is baked into your application and you know that it works you know that it actually",
    "start": "1875360",
    "end": "1880640"
  },
  {
    "text": "maps directly to the application that is running right now in production because it's part of the",
    "start": "1880640",
    "end": "1886000"
  },
  {
    "text": "deployment it's not a definition that sits outside of it okay so that in",
    "start": "1886000",
    "end": "1891279"
  },
  {
    "text": "itself is already helpful now you'd ask okay that's a good start but where is",
    "start": "1891279",
    "end": "1897279"
  },
  {
    "text": "the definition that's too simplistic where is the definition of how we actually start that thing the",
    "start": "1897279",
    "end": "1903360"
  },
  {
    "text": "patch thing there is a lot of details there how do we use that and another question that I would",
    "start": "1903360",
    "end": "1909360"
  },
  {
    "text": "add to that is what if I have already something that defines",
    "start": "1909360",
    "end": "1915240"
  },
  {
    "text": "that do I need to build that from scratch now forget everything that I've",
    "start": "1915240",
    "end": "1920720"
  },
  {
    "text": "done already and we'll try to address that whether I'm using chef or whether I'm using shell script let's see how that",
    "start": "1920720",
    "end": "1928080"
  },
  {
    "text": "how we deal with that so the second element is the service the service is the more fat",
    "start": "1928080",
    "end": "1935440"
  },
  {
    "text": "element this is where we'll have more details actually 90% of the details is",
    "start": "1935440",
    "end": "1941679"
  },
  {
    "start": "1936000",
    "end": "1936000"
  },
  {
    "text": "baked into that element what we're seeing is two elements in that DSL of a service and we'll see more of that the",
    "start": "1941679",
    "end": "1948399"
  },
  {
    "text": "interesting thing is that it's modular meaning that a service could be very simplistic it could include only the",
    "start": "1948399",
    "end": "1955440"
  },
  {
    "text": "metadata of a service and few other elements and we can extend those other modules so we don't necessarily need to",
    "start": "1955440",
    "end": "1961720"
  },
  {
    "text": "have all the component that I'm going to show you right now as part of a service why is that important it's important",
    "start": "1961720",
    "end": "1968640"
  },
  {
    "text": "because when we want to build an application or port an application to that model we don't know in advance all",
    "start": "1968640",
    "end": "1975360"
  },
  {
    "text": "that information or we don't have to know in advance all that information we don't know in advance for example how to",
    "start": "1975360",
    "end": "1981760"
  },
  {
    "text": "monitor all the custom metrics and the SLAs that would define the application and that's fairly advanced to uh in in",
    "start": "1981760",
    "end": "1988960"
  },
  {
    "text": "the process in which we're developing that application and we want to be able to introduce that in stages we don't necessarily want to have everything",
    "start": "1988960",
    "end": "1995440"
  },
  {
    "text": "pre-baked because that's going to take much longer process to map the application into that wall so the very",
    "start": "1995440",
    "end": "2002000"
  },
  {
    "text": "basic element is to define the metadata and the metadata is actually used for the monitoring less for the actual",
    "start": "2002000",
    "end": "2008200"
  },
  {
    "text": "orchestration so for example the fact that we're calling it a database is mostly used by the monitoring side to",
    "start": "2008200",
    "end": "2014559"
  },
  {
    "text": "actually use an icon that looks like a database so that when we look at the monitoring we'll know what it is but we",
    "start": "2014559",
    "end": "2020240"
  },
  {
    "text": "have that definition of a metadata that other services that would be able to query that information would be able to",
    "start": "2020240",
    "end": "2025760"
  },
  {
    "text": "use that for other purposes so beyond the metadata that and and by the way the other piece of",
    "start": "2025760",
    "end": "2032080"
  },
  {
    "text": "metadata would be other things that we want to add for properties for example what would be the URL for the",
    "start": "2032080",
    "end": "2038039"
  },
  {
    "text": "application and we can actually add that it doesn't have to be static it's something that computed i'll show you",
    "start": "2038039",
    "end": "2043760"
  },
  {
    "text": "that in a live application the other element that is important is the life cycle remember the question that I asked",
    "start": "2043760",
    "end": "2049760"
  },
  {
    "text": "earlier what if we already have a definition a script that we're using right now manually to start and stop my",
    "start": "2049760",
    "end": "2057118"
  },
  {
    "text": "Tomcat server or my server do I need to recreate it so the answer is",
    "start": "2057119",
    "end": "2062480"
  },
  {
    "text": "generally no we can only map them into that definition and basically say which",
    "start": "2062480",
    "end": "2067760"
  },
  {
    "text": "script to call in which context so in this case we're using a",
    "start": "2067760",
    "end": "2073440"
  },
  {
    "text": "Groovy script as a shell script but we could also map a shell script here",
    "start": "2073440",
    "end": "2079158"
  },
  {
    "text": "ash or a batch file in Windows or have a definition that has for Windows run that",
    "start": "2079159",
    "end": "2086560"
  },
  {
    "text": "script for Linux run that script I don't have that in this example but there is another example that so there is",
    "start": "2086560",
    "end": "2091599"
  },
  {
    "text": "different ways in which I can set the value for a given properties and that's part of the definition of the DSL is",
    "start": "2091599",
    "end": "2098160"
  },
  {
    "text": "that I can and and the use of Groove is that I can put different values easily into the same property in that case it",
    "start": "2098160",
    "end": "2105520"
  },
  {
    "text": "could be an array it could be a string and based on the value we know how to",
    "start": "2105520",
    "end": "2110720"
  },
  {
    "text": "act upon that that's the core part of a service and by doing that we can actually map to an application and we",
    "start": "2110720",
    "end": "2118079"
  },
  {
    "text": "can cover a lot of things we can cover the consistent deployment installation",
    "start": "2118079",
    "end": "2124920"
  },
  {
    "text": "configuration dependencies a lot of things just by doing that piece but we",
    "start": "2124920",
    "end": "2130079"
  },
  {
    "start": "2126000",
    "end": "2126000"
  },
  {
    "text": "want to do more okay so we'll see how we extend that what other things we want to do for",
    "start": "2130079",
    "end": "2136000"
  },
  {
    "text": "example remember the scaling things that we mentioned again you could read that",
    "start": "2136000",
    "end": "2141280"
  },
  {
    "text": "let's see if you understand what I'm trying to do here total request right now try to do that today without a",
    "start": "2141280",
    "end": "2150200"
  },
  {
    "text": "DSL have you tried it today even go to Amazon and use you know the uh the watch element",
    "start": "2150200",
    "end": "2158320"
  },
  {
    "text": "and some other services and API that you're using try to define the metrics and the",
    "start": "2158320",
    "end": "2164440"
  },
  {
    "text": "rules and then what to do with that rule you'll get this size of files I'm",
    "start": "2164440",
    "end": "2170720"
  },
  {
    "text": "not kidding you and if you'll understand what it does be on",
    "start": "2170720",
    "end": "2176920"
  },
  {
    "text": "me anyway the idea of this is in my view a best illustration of the value of DSL",
    "start": "2176920",
    "end": "2183280"
  },
  {
    "text": "that I could actually condense things that right now fits in a very complex and verbose things and put it in",
    "start": "2183280",
    "end": "2189920"
  },
  {
    "text": "something that is very readable that's the whole idea i mean take everything that I said",
    "start": "2189920",
    "end": "2195760"
  },
  {
    "text": "basically what we want is build readable code that will work that's in a nutshell",
    "start": "2195760",
    "end": "2202320"
  },
  {
    "text": "the the only thing that we're trying to do here all those bits and bites are the means to an end but that's really the",
    "start": "2202320",
    "end": "2208320"
  },
  {
    "text": "the end goal uh so we really want to be able to say you know take anyone in our organization",
    "start": "2208320",
    "end": "2215359"
  },
  {
    "text": "and say tell us what you want to do write it in a way that you understand it with all the definition and now we as",
    "start": "2215359",
    "end": "2222400"
  },
  {
    "text": "technician quote unquote need to take that definition that readable definition and try to make it work and we use the",
    "start": "2222400",
    "end": "2229520"
  },
  {
    "text": "language we'll use the extendability of the language and a lot of features that I'm going to tuck on and I'm going to touch on the under the hood things to",
    "start": "2229520",
    "end": "2236560"
  },
  {
    "text": "actually make it codable to make it something that runs that's in a nutshell the entire thing so for example and what",
    "start": "2236560",
    "end": "2243040"
  },
  {
    "text": "we found out is that in order to monitor an application the what we didn't want to do is map the you know replace the",
    "start": "2243040",
    "end": "2250400"
  },
  {
    "text": "entire monitoring aspect what we wanted to do is monitor only the things that matters the KPI as they are called key",
    "start": "2250400",
    "end": "2256160"
  },
  {
    "text": "performance indicators what we find is that there is a lot of standard there's JMX in the Java world",
    "start": "2256160",
    "end": "2261760"
  },
  {
    "text": "there's SNMP there is tons of things and if we try to build plug-in for everything uh that's going to be endless",
    "start": "2261760",
    "end": "2269200"
  },
  {
    "text": "process as well and not everyone for example doesn't have any any of those standard APIs they have their own",
    "start": "2269200",
    "end": "2274640"
  },
  {
    "text": "custom API some cases it's a REST API in some cases just a CLI a command line interface that you call to actually grab",
    "start": "2274640",
    "end": "2280960"
  },
  {
    "text": "that in some cases you actually need to call to log files and grab that information",
    "start": "2280960",
    "end": "2286480"
  },
  {
    "text": "so in order to make it very simple what we said is basically per service all we need to do is have names and values for",
    "start": "2286480",
    "end": "2294400"
  },
  {
    "text": "those key performance indicators how we grab those values can be different per service we don't need to know the",
    "start": "2294400",
    "end": "2301040"
  },
  {
    "text": "details of that that details can be in a closure that details could be some somewhere else and you could actually call a code and we don't really care so",
    "start": "2301040",
    "end": "2308560"
  },
  {
    "text": "in this case what I'm using is a JMX for example but I can map that in a case of",
    "start": "2308560",
    "end": "2314079"
  },
  {
    "text": " to something else the result would be that every service returns an array",
    "start": "2314079",
    "end": "2320160"
  },
  {
    "text": "or map file sorry a map object of keys and values that is",
    "start": "2320160",
    "end": "2325760"
  },
  {
    "text": "continuously being updated so every time that I'm monitoring that service I'm getting a list with the updated values",
    "start": "2325760",
    "end": "2331599"
  },
  {
    "text": "per key and then I can apply rules like that scaling rules so if I have a composite metric I can map that in that",
    "start": "2331599",
    "end": "2339000"
  },
  {
    "text": "closure and I can write any piece of code here that says the metrics that I want to scale for is going to be",
    "start": "2339000",
    "end": "2345680"
  },
  {
    "text": "computed metric what is the logic of that compute is not something that I need to map in",
    "start": "2345680",
    "end": "2350720"
  },
  {
    "text": "the DSL i'm actually giving you the power of the language to do that logic i'll give you the tools and libraries to",
    "start": "2350720",
    "end": "2356480"
  },
  {
    "start": "2351000",
    "end": "2351000"
  },
  {
    "text": "do statistical computations very easily but I'm not going to get into that layer and try to map the world here again okay",
    "start": "2356480",
    "end": "2363920"
  },
  {
    "text": "so that's so so the idea is that you could put a closure here and write anything that you want in terms of the logic of that matrix okay let's go ahead",
    "start": "2363920",
    "end": "2372320"
  },
  {
    "text": "another example so at the end of the day this is how it's going to look like so for example when I'm taking those key",
    "start": "2372320",
    "end": "2378160"
  },
  {
    "text": "values what you could see is that I can say this value needs to be monitored as a gouge and another graph and some other",
    "start": "2378160",
    "end": "2386880"
  },
  {
    "text": "things but the important thing again think about how application are built today is when I describe the application",
    "start": "2386880",
    "end": "2392800"
  },
  {
    "text": "I'm also describing the operational aspect of that application meaning how to monitor it because I need that information not just for monitoring",
    "start": "2392800",
    "end": "2398800"
  },
  {
    "text": "aspect I need that information to keep the SLA of the application what is the",
    "start": "2398800",
    "end": "2404079"
  },
  {
    "text": "SLA application is part of the definition of the application the SLA could be a latency the SLA could be",
    "start": "2404079",
    "end": "2410160"
  },
  {
    "text": "availability SLA and some other things and once I I map that I can actually",
    "start": "2410160",
    "end": "2415359"
  },
  {
    "text": "have that information baked into that same definition okay let's go on the other thing that I want to do is say that this",
    "start": "2415359",
    "end": "2423839"
  },
  {
    "text": "script that definition of application needs to run anywhere by anywhere I mean bare metal",
    "start": "2423839",
    "end": "2431720"
  },
  {
    "text": "machine I mean Amazon Rackspace OpenStack CloudStack everything i don't",
    "start": "2431720",
    "end": "2438400"
  },
  {
    "text": "want that script to be different per environment because once I do that I'm",
    "start": "2438400",
    "end": "2443520"
  },
  {
    "text": "breaking the entire definition so how do I do that because each environment has its own API amazon has its own API its",
    "start": "2443520",
    "end": "2450160"
  },
  {
    "text": "own image format its own whatever there's no way that I can find a least common denominator for",
    "start": "2450160",
    "end": "2455640"
  },
  {
    "text": "everything so what we did is we created something that is called a template a template basically says this",
    "start": "2455640",
    "end": "2464000"
  },
  {
    "text": "application needs to run on this type of machine type of machine small Linux the",
    "start": "2464000",
    "end": "2470240"
  },
  {
    "text": "definition of that machine is going to be different per Amazon per Rackspace",
    "start": "2470240",
    "end": "2475440"
  },
  {
    "text": "per whatever but we'll keep that outside of that recipe somewhere else in a place",
    "start": "2475440",
    "end": "2480720"
  },
  {
    "text": "where we call it a cloud driver where we keep everything that is platform or",
    "start": "2480720",
    "end": "2486280"
  },
  {
    "text": "environment specific outside of the recipe and that's how we can keep our recipe portable and all those custom",
    "start": "2486280",
    "end": "2493839"
  },
  {
    "text": "definition outside of that so we don't necessarily trying to create a least common the denominator for everything",
    "start": "2493839",
    "end": "2499920"
  },
  {
    "text": "but we're trying to minimize that change and the areas of change instead of having them scattered around our recipes",
    "start": "2499920",
    "end": "2506400"
  },
  {
    "text": "and code per deployment they're all centralized in one component in that case the portability becomes much",
    "start": "2506400",
    "end": "2512160"
  },
  {
    "text": "simpler and there's a different implementation for a lot for a lot of that so we have a good starting point that in most cases we don't need to even",
    "start": "2512160",
    "end": "2519040"
  },
  {
    "text": "mess with that so if we still in that standard wall we'll probably find that the default uh plugins fit that and you",
    "start": "2519040",
    "end": "2526800"
  },
  {
    "text": "can see the difference mapping for each of that environment one of them is workspace one of them is in Amazon each",
    "start": "2526800",
    "end": "2532800"
  },
  {
    "text": "one of them is different but there is a lot of similarities also between them i believe that you know over time the",
    "start": "2532800",
    "end": "2538720"
  },
  {
    "text": "differences would also get lower",
    "start": "2538720",
    "end": "2544240"
  },
  {
    "start": "2542000",
    "end": "2542000"
  },
  {
    "text": "and the last bit is as I mentioned earlier what we don't want to do is reinvent the world as you pointed out",
    "start": "2544240",
    "end": "2550960"
  },
  {
    "text": "there's already technologies not necessarily in Java that is doing a lot of that mapping the definition of how we",
    "start": "2550960",
    "end": "2557680"
  },
  {
    "text": "install an application so I mentioned shell script and the ability to call sharecript but there's also places in",
    "start": "2557680",
    "end": "2562800"
  },
  {
    "text": "which we're already using chef or puppet or some other configuration management tools to implement a lot of that logic",
    "start": "2562800",
    "end": "2568800"
  },
  {
    "text": "of how we install or run an application and what we we wanted to do is not",
    "start": "2568800",
    "end": "2574240"
  },
  {
    "text": "replace that even though technically we could but map to that and what we did here in",
    "start": "2574240",
    "end": "2580720"
  },
  {
    "text": "the DSL is we enabled to extend a service definition to say how you run",
    "start": "2580720",
    "end": "2586640"
  },
  {
    "text": "the application how you start it how you configure it is defined in a chef script",
    "start": "2586640",
    "end": "2592000"
  },
  {
    "text": "how do we do that we basically extend that as you could see into a chef so by",
    "start": "2592000",
    "end": "2597680"
  },
  {
    "text": "extending a service to a chef we inherit some chef properties into that service",
    "start": "2597680",
    "end": "2603680"
  },
  {
    "text": "what are those chef properties usually it means that I can actually tell in",
    "start": "2603680",
    "end": "2610319"
  },
  {
    "text": "this case clify what are the cookbooks what are the recipes that will be called per installation and in that case I",
    "start": "2610319",
    "end": "2617280"
  },
  {
    "text": "could inherit or import the chef cookbooks as part of my service",
    "start": "2617280",
    "end": "2622760"
  },
  {
    "text": "definition and use the service definition to wrap that with extra information that is not part of that",
    "start": "2622760",
    "end": "2628560"
  },
  {
    "text": "cookbook in most cases like the metrics that I mentioned and some other properties that are not part of the chef recipe so a lot of the installation",
    "start": "2628560",
    "end": "2635280"
  },
  {
    "text": "configuration etc is something that I can actually import and use and reuse not necessarily implement we're doing",
    "start": "2635280",
    "end": "2642000"
  },
  {
    "text": "the same thing for puppet as well so the idea is that it would be extendable such that I can plug in those",
    "start": "2642000",
    "end": "2648720"
  },
  {
    "text": "different technologies into that and not necessarily come yet with another configuration management that requires a",
    "start": "2648720",
    "end": "2655680"
  },
  {
    "text": "rewrite of the entire thing so that's an example of how DSL",
    "start": "2655680",
    "end": "2660720"
  },
  {
    "text": "look like and that's what uh we've built to address a lot of those",
    "start": "2660720",
    "end": "2666480"
  },
  {
    "text": "questions so hopefully that gives you an idea when I'm talking about the DSL as a solution to the problem that I mentioned",
    "start": "2666480",
    "end": "2672240"
  },
  {
    "text": "at the beginning this is what I meant okay so hopefully that gives you an idea and again try to take that in a generic",
    "start": "2672240",
    "end": "2678960"
  },
  {
    "text": "way so you could implement the same thing in your own environment you don't necessarily need to use that tool now",
    "start": "2678960",
    "end": "2684240"
  },
  {
    "text": "this the last part of this discussion I want to go a little bit under the hood and show how we implemented that DSL",
    "start": "2684240",
    "end": "2689920"
  },
  {
    "text": "what are the features of Groovy that we used to implement some of those contract and I'm going to go through few",
    "start": "2689920",
    "end": "2697200"
  },
  {
    "start": "2697000",
    "end": "2697000"
  },
  {
    "text": "examples I'm not going to cover everything so let's take the service component that I mentioned earlier as an",
    "start": "2697200",
    "end": "2702960"
  },
  {
    "text": "interesting case this would be for example how it would look like if you would write it in Java obviously I",
    "start": "2702960",
    "end": "2709359"
  },
  {
    "text": "missed a lot of details below but for the sake of illustration that should be good",
    "start": "2709359",
    "end": "2714760"
  },
  {
    "text": "enough what we want to do is get rid of the import and this a lot of the dots",
    "start": "2714760",
    "end": "2723920"
  },
  {
    "text": "that you can see here and make it more readable like the one that you've seen at the beginning okay so we're going to",
    "start": "2723920",
    "end": "2730480"
  },
  {
    "text": "use certain features of the Groovy language to get rid of that noise to",
    "start": "2730480",
    "end": "2735520"
  },
  {
    "text": "make it more readable let's see which features we used and hopefully that will give you an",
    "start": "2735520",
    "end": "2742119"
  },
  {
    "start": "2740000",
    "end": "2740000"
  },
  {
    "text": "idea so the first thing that we did is we used constructor with name parameters",
    "start": "2742119",
    "end": "2747920"
  },
  {
    "text": "so we construct with net parameters we can actually pass in a lot of the properties and value",
    "start": "2747920",
    "end": "2755200"
  },
  {
    "text": "without doing all this dot dot dot thing that in groovy is built in that gives us",
    "start": "2755200",
    "end": "2761599"
  },
  {
    "text": "a way to already omit some of those noise that's the first feature that",
    "start": "2761599",
    "end": "2768640"
  },
  {
    "start": "2768000",
    "end": "2768000"
  },
  {
    "text": "we're using out of the groovy language the second thing that we're",
    "start": "2768640",
    "end": "2774560"
  },
  {
    "text": "doing is we're interacting we want to get rid of the import closure right the first input lines how",
    "start": "2774560",
    "end": "2782560"
  },
  {
    "text": "do we do that in Groovy in Groovy there is something that is called compiler",
    "start": "2782560",
    "end": "2788920"
  },
  {
    "text": "configuration the compiler configuration is a component in Groovy that I can actually tell the compiler which",
    "start": "2788920",
    "end": "2795520"
  },
  {
    "text": "libraries or which components to import before it actually compiles my script",
    "start": "2795520",
    "end": "2800720"
  },
  {
    "text": "and I can tell it what are the libraries that I wanted to import before that so",
    "start": "2800720",
    "end": "2806400"
  },
  {
    "text": "in that case the the areas meaning that our code",
    "start": "2806400",
    "end": "2811920"
  },
  {
    "text": "that would run your script would be able to run it but before we run it we do the",
    "start": "2811920",
    "end": "2817040"
  },
  {
    "text": "import outside of your script and the way we do that is we interact the Groovy compiler tell it which classes or which",
    "start": "2817040",
    "end": "2823920"
  },
  {
    "text": "libraries we wanted to import and only then call your script and in that case the compilers already include that",
    "start": "2823920",
    "end": "2829920"
  },
  {
    "text": "definition it doesn't have to be part of your script that's the idea here it's pretty straightforward okay the",
    "start": "2829920",
    "end": "2836960"
  },
  {
    "text": "component the API that we're using is called the compiler configuration in Groovy and this is basically how we tell",
    "start": "2836960",
    "end": "2842400"
  },
  {
    "text": "it which libraries which elements of information we want to have pre-baked",
    "start": "2842400",
    "end": "2847760"
  },
  {
    "text": "before we call our script and that means that we can omit that information from our script so a lot of the things that",
    "start": "2847760",
    "end": "2853760"
  },
  {
    "text": "are generic to our script that are repeatable is something that we want to take away so that the user wouldn't need",
    "start": "2853760",
    "end": "2859280"
  },
  {
    "text": "to know about that and use that's how we get rid of the",
    "start": "2859280",
    "end": "2864680"
  },
  {
    "text": "import so we got to that point where we can have that service definition without the import without a lot of the noise so",
    "start": "2864680",
    "end": "2870720"
  },
  {
    "text": "we're already in a a good place but not enough the other thing that we want to do is extend further another feature",
    "start": "2870720",
    "end": "2880560"
  },
  {
    "start": "2874000",
    "end": "2874000"
  },
  {
    "text": "that we use is that we could tell Groovy again through that same binding and configuration we can tell Groovy which",
    "start": "2880560",
    "end": "2886400"
  },
  {
    "text": "base class it's going to use it's going to generate for our script usually what it does by default is using some sort of",
    "start": "2886400",
    "end": "2892880"
  },
  {
    "text": "a default script class as a base class what I can tell the compiler is",
    "start": "2892880",
    "end": "2898640"
  },
  {
    "text": "that when it's generating my script it's going to use my classes which means that",
    "start": "2898640",
    "end": "2905280"
  },
  {
    "text": "I can actually add properties and any methods in that base class that by",
    "start": "2905280",
    "end": "2910880"
  },
  {
    "text": "definition is going to be part of every script so when I'm writing the script I",
    "start": "2910880",
    "end": "2916480"
  },
  {
    "text": "can assume that those method exist without actually writing them or importing them or whatever that's how I",
    "start": "2916480",
    "end": "2922240"
  },
  {
    "text": "can extend that very easily so that's another method in which I can remove a lot of the definition from the script",
    "start": "2922240",
    "end": "2927760"
  },
  {
    "text": "keep the script simple and put all the repeatable work outside of that script",
    "start": "2927760",
    "end": "2933520"
  },
  {
    "text": "so that's another way sorry exactly so so let me show you an example",
    "start": "2933520",
    "end": "2939040"
  },
  {
    "text": "and I think that will address so for example we wanted to say that every print line every call to print line",
    "start": "2939040",
    "end": "2945760"
  },
  {
    "text": "would go to a log so we did an override of the print line method and made it such that every",
    "start": "2945760",
    "end": "2952800"
  },
  {
    "text": "one that every time that you're calling print line in your groovy script it would go to a log that's a that's an",
    "start": "2952800",
    "end": "2958000"
  },
  {
    "text": "example of how you do override also for the default implementation okay so it's the same",
    "start": "2958000",
    "end": "2963920"
  },
  {
    "text": "Groovy script now we extending its capabilities with other things just by doing that method so it's another",
    "start": "2963920",
    "end": "2970160"
  },
  {
    "text": "feature of the language that I used to implement that again I'm just trying to walk through first of all the DSL and",
    "start": "2970160",
    "end": "2977359"
  },
  {
    "text": "then how we implement that and what features of Groovy we used to implement that to give you an idea how you could",
    "start": "2977359",
    "end": "2982880"
  },
  {
    "text": "extend that yourself there is much more definition on how you do that so by all",
    "start": "2982880",
    "end": "2988559"
  },
  {
    "text": "means there is more references than the one that I'm going to refer to but hopefully you get the idea",
    "start": "2988559",
    "end": "2994960"
  },
  {
    "text": "the other thing that we can do is uh extend the class definition itself there",
    "start": "2994960",
    "end": "3000319"
  },
  {
    "text": "are different ways to do that uh there is a method that is called monkey patching which basically means that I",
    "start": "3000319",
    "end": "3005680"
  },
  {
    "text": "can actually uh interact with something that is called meta class in groovy and by interacting with the meta class I can",
    "start": "3005680",
    "end": "3012240"
  },
  {
    "text": "extend the class in runtime i can add properties methods and other things into the class itself the advantage of that",
    "start": "3012240",
    "end": "3019520"
  },
  {
    "text": "method is that if I do a Java P on that class or something like that on the class itself",
    "start": "3019520",
    "end": "3025520"
  },
  {
    "text": "using Groovy I can actually see that new definition in the class itself the method that we chose to use is slightly",
    "start": "3025520",
    "end": "3031839"
  },
  {
    "text": "different uh it basically says that it uses a hook that basically means that",
    "start": "3031839",
    "end": "3037280"
  },
  {
    "text": "every time that I'm invoking a property or a method that doesn't that is not part of the class definition it would",
    "start": "3037280",
    "end": "3043839"
  },
  {
    "text": "call that method and I can put a logic around that the advantage of that is it would be very generic i can put one",
    "start": "3043839",
    "end": "3050079"
  },
  {
    "text": "place with all the definitions so if I have a generic rule that applies no matter which properties I'm using or",
    "start": "3050079",
    "end": "3056000"
  },
  {
    "text": "which method I'm using that could be an easier way to do that because it applies to all the classes regardless uh the",
    "start": "3056000",
    "end": "3062400"
  },
  {
    "text": "disadvantage is that I don't see that in the meta class so if I'll go to the metaclass I wouldn't see that logic",
    "start": "3062400",
    "end": "3067920"
  },
  {
    "text": "extended into my class in our case that was a simpler solution than extending",
    "start": "3067920",
    "end": "3072960"
  },
  {
    "text": "the meta class because the rule that we wanted to is fairly",
    "start": "3072960",
    "end": "3078960"
  },
  {
    "text": "generic the last point is the binding so for example one of the requirements that",
    "start": "3079720",
    "end": "3084960"
  },
  {
    "text": "we had we have recipes that are pre-baked for the product for example a cloud driver would be a good example for",
    "start": "3084960",
    "end": "3090960"
  },
  {
    "text": "that one of the thing that we wanted to do is ship a distribution of of our software into a user which has its own",
    "start": "3090960",
    "end": "3098240"
  },
  {
    "text": "credentials to the cloud and its own properties and whatever so before that what happens is that every time that we",
    "start": "3098240",
    "end": "3104960"
  },
  {
    "text": "ship that software and that libraries you had to go to the configuration and change it and put your variables in",
    "start": "3104960",
    "end": "3110720"
  },
  {
    "text": "those scripts obviously that means that every time that you change versions and other",
    "start": "3110720",
    "end": "3115839"
  },
  {
    "text": "things that becomes very verbose and very complex and so what we wanted is the ability to inject a lot of those",
    "start": "3115839",
    "end": "3122040"
  },
  {
    "text": "properties as an overrides overrides meaning that I can take the libraries as a back blocks take it from GitHub",
    "start": "3122040",
    "end": "3129680"
  },
  {
    "text": "compile it and build it and it will have some default implementations and I can override it from the outside by",
    "start": "3129680",
    "end": "3136160"
  },
  {
    "text": "injecting my properties into that without touching the scripts the method in which you could do that in Groovy is",
    "start": "3136160",
    "end": "3142800"
  },
  {
    "start": "3142000",
    "end": "3142000"
  },
  {
    "text": "called bindings okay so in bindings I can actually tell and set variables and",
    "start": "3142800",
    "end": "3148079"
  },
  {
    "text": "set properties before the compilers runs your code and that means that when you",
    "start": "3148079",
    "end": "3153760"
  },
  {
    "text": "run your script those variables will be available for you with the values that you provided from the outside and that's",
    "start": "3153760",
    "end": "3161200"
  },
  {
    "text": "the idea here so you could see an example how we did that for example we wanted to have a definition of an image",
    "start": "3161200",
    "end": "3168160"
  },
  {
    "text": "and a pre-start message the way we do that is we call binding in Groovy pass",
    "start": "3168160",
    "end": "3173760"
  },
  {
    "text": "in the properties files with those variables and then when we use our script we can actually use or refer to",
    "start": "3173760",
    "end": "3180559"
  },
  {
    "text": "those variables even though they're not the definition of those variables is not part of the script so you could see for example an",
    "start": "3180559",
    "end": "3187319"
  },
  {
    "start": "3181000",
    "end": "3181000"
  },
  {
    "text": "icon and an image sorry that is part of my script right now as if it was a variable but nothing",
    "start": "3187319",
    "end": "3193760"
  },
  {
    "text": "in the script defines that it's actually done outside of my script using that properties file right but I can refer to",
    "start": "3193760",
    "end": "3201280"
  },
  {
    "text": "that as if it was a variable that was defined in my script and what we used is we use a a",
    "start": "3201280",
    "end": "3207280"
  },
  {
    "text": "naming convention to say if that script has a property file under the name of",
    "start": "3207280",
    "end": "3212480"
  },
  {
    "text": "that script properties is then we load it in the binding and then we we know",
    "start": "3212480",
    "end": "3218480"
  },
  {
    "text": "that it it's available when we write the script so that was a way to address that problem hopefully that makes sense does",
    "start": "3218480",
    "end": "3224319"
  },
  {
    "text": "that make sense good okay so we're close to the end so the end result is that we",
    "start": "3224319",
    "end": "3231680"
  },
  {
    "start": "3230000",
    "end": "3230000"
  },
  {
    "text": "created a lot of that generic definition of application for a lot of things that exist out there right now so we can use",
    "start": "3231680",
    "end": "3238720"
  },
  {
    "text": "that different scripts that right now exist in GitHubs and a GitHub repository and that means that if I want to deploy",
    "start": "3238720",
    "end": "3244559"
  },
  {
    "text": "and that's the advantage of that if I want to deploy if I want to deploy my SQL Apache advancer a lot of those",
    "start": "3244559",
    "end": "3249839"
  },
  {
    "text": "common stack I don't need to go through the process of defining it I just grab",
    "start": "3249839",
    "end": "3257440"
  },
  {
    "text": "it and use it and if I even want to build my own",
    "start": "3257440",
    "end": "3262640"
  },
  {
    "text": "application in most cases the areas in which I need to define all those DSLs is",
    "start": "3262640",
    "end": "3268000"
  },
  {
    "text": "only in areas that are special so for example the things that we added to the DSL is is something that is called",
    "start": "3268000",
    "end": "3273760"
  },
  {
    "text": "extent like in the Java language which means that I have a golden image of how to cut is being defined generically but",
    "start": "3273760",
    "end": "3280720"
  },
  {
    "text": "let's say that I want to override the XMX or some other variables of that I can only override that and still extend",
    "start": "3280720",
    "end": "3287200"
  },
  {
    "text": "that gold image or gold definition without overriding it and then creating a fork creating a fork mean that if you",
    "start": "3287200",
    "end": "3295359"
  },
  {
    "text": "know in the GitHub someone update it added more logic added more metrics I can't really inherit it when I'm doing a",
    "start": "3295359",
    "end": "3301520"
  },
  {
    "text": "fork so I don't want to do that I just want to do an overrite that's how we did that and that's why we can come up with",
    "start": "3301520",
    "end": "3306720"
  },
  {
    "text": "that set of recipes and because we extended chef and puppet we could also have a lot of those recipes in place",
    "start": "3306720",
    "end": "3312559"
  },
  {
    "text": "that already gives us the power to grab a lot of that information without doing the actual work ourself so even though",
    "start": "3312559",
    "end": "3318800"
  },
  {
    "text": "we have a recipe even though we have all those definitions we don't want to do that ourself",
    "start": "3318800",
    "end": "3324000"
  },
  {
    "text": "So with that I'll jump to a short demo that will give you an idea how that looks like in real life very very short",
    "start": "3324000",
    "end": "3332640"
  },
  {
    "text": "demo okay and the the purpose of this demo is really to map a lot of those",
    "start": "3333160",
    "end": "3338559"
  },
  {
    "text": "abstract concept into something real so in this case I took an example which is the pet clinic or the the travel",
    "start": "3338559",
    "end": "3345839"
  },
  {
    "text": "application the spring travel application if you familiar and I'm using cloudify and chef to deploy it and",
    "start": "3345839",
    "end": "3352880"
  },
  {
    "text": "we'll see how that looks like and what's the end result looks like the first thing that we're doing in cloudify is that I download cloudify on my desktop",
    "start": "3352880",
    "end": "3359839"
  },
  {
    "text": "and I configured the basically the cloud driver for my definition you could see",
    "start": "3359839",
    "end": "3365760"
  },
  {
    "text": "it somewhere here okay so this is the CLI so I just",
    "start": "3365760",
    "end": "3372000"
  },
  {
    "text": "started the CLI the first thing that I did is a command that is called bootstrap cloud openstack and the open",
    "start": "3372000",
    "end": "3378559"
  },
  {
    "text": "stack is actually referring to the HP OpenStack implementation somewhere in the network and what I did by that is",
    "start": "3378559",
    "end": "3384640"
  },
  {
    "text": "created a server that is going to be my gateway to that cloud so I'm starting fresh nothing is installed there is no",
    "start": "3384640",
    "end": "3390960"
  },
  {
    "text": "cloudify in that cloud there is nothing of my environment the only thing that I did before I run that is that I set my",
    "start": "3390960",
    "end": "3397520"
  },
  {
    "text": "credentials as part of the driver definition of that open stack i'm not going to go through that right now but",
    "start": "3397520",
    "end": "3403760"
  },
  {
    "text": "there is a way take five minutes to put all the properties in the right place and from that point that's the only",
    "start": "3403760",
    "end": "3410240"
  },
  {
    "text": "thing that you need is to run that that thing the end result of that is that once the bootstrap process has finished",
    "start": "3410240",
    "end": "3417599"
  },
  {
    "text": "you basically get to that point where you have these things up and running and if I go to the web console I can already",
    "start": "3417599",
    "end": "3424920"
  },
  {
    "text": "access that environment and what you could see is the cloudify dashboard up",
    "start": "3424920",
    "end": "3430720"
  },
  {
    "text": "and running and the cloudify dashboard gives me the information of the application that is running and some",
    "start": "3430720",
    "end": "3436440"
  },
  {
    "text": "statistics i didn't have to do any of that that's comes out of that right out of the bat and the definition includes",
    "start": "3436440",
    "end": "3443920"
  },
  {
    "text": "the application that I deployed and I'll show you what I did to deploy it and also the management of cloudify is also",
    "start": "3443920",
    "end": "3449359"
  },
  {
    "text": "treated as an application so when we deploy cloudify we deploy the rest gateway and the management console which",
    "start": "3449359",
    "end": "3456319"
  },
  {
    "text": "is web web server and everything like that is also treated as an application so we can monitor that using cloudify",
    "start": "3456319",
    "end": "3462319"
  },
  {
    "text": "itself so cloudify in itself monitor itself so we can see some aggregate value of the total memory total CPU of",
    "start": "3462319",
    "end": "3469200"
  },
  {
    "text": "all the aggregated machines that exist out in the network and I can see some of the aggregated information about the",
    "start": "3469200",
    "end": "3474640"
  },
  {
    "text": "number of servers the type of servers the type of services that are totally running right now the second thing that",
    "start": "3474640",
    "end": "3479920"
  },
  {
    "text": "I did was to install the application and I did that using a single command that is",
    "start": "3479920",
    "end": "3487040"
  },
  {
    "text": "called install application there is two commands one of them is install application the other one is install service install service would install",
    "start": "3487040",
    "end": "3493520"
  },
  {
    "text": "the individual component database the  whatever install application would go to the application definition and",
    "start": "3493520",
    "end": "3499520"
  },
  {
    "text": "would run the entire thing all those composite applications composite services so in this case I did a install",
    "start": "3499520",
    "end": "3506160"
  },
  {
    "text": "application which basically goes to the definition of the application figure out which elements needs to be running in",
    "start": "3506160",
    "end": "3512160"
  },
  {
    "text": "this case it's a myql plus webtier plus load balancer and it deploys it and you could see some of the output",
    "start": "3512160",
    "end": "3518960"
  },
  {
    "text": "in the console of what happens uh to do that and I can actually the end of the",
    "start": "3518960",
    "end": "3525599"
  },
  {
    "text": "day see the result of that here so if I go to the application I can see the topology of the application that is",
    "start": "3525599",
    "end": "3531280"
  },
  {
    "text": "actually taken from the definition of the application DSL i can see the dependency of each one of them I can see",
    "start": "3531280",
    "end": "3537680"
  },
  {
    "text": "that there are currently two instances of Tomat running right now i can see if",
    "start": "3537680",
    "end": "3543440"
  },
  {
    "text": "I click on one of them I can see different views of that tomat for example I can see the custom metrics that are part of the DSL i can actually",
    "start": "3543440",
    "end": "3550559"
  },
  {
    "text": "see that one of the one of the servers takes more load than the other all that comes out of that i didn't have to do",
    "start": "3550559",
    "end": "3557200"
  },
  {
    "text": "any of that to actually get that monitoring once I deploy deploy the application because the application includes that metrics I can create that",
    "start": "3557200",
    "end": "3564319"
  },
  {
    "text": "view dynamically because there is a definition already that the monitor is understand which is the DSL I didn't",
    "start": "3564319",
    "end": "3571359"
  },
  {
    "text": "have to go to the monitoring and say my application is built out of those things and those things and those things it",
    "start": "3571359",
    "end": "3576720"
  },
  {
    "text": "actually understand it parse it and create that view it's automatically that's the beauty of that now the other",
    "start": "3576720",
    "end": "3583200"
  },
  {
    "text": "thing that I can see is this thing and this one is red for example right now why is that red one of the common",
    "start": "3583200",
    "end": "3588880"
  },
  {
    "text": "problem on managing clusters is managing or understanding how the cluster is",
    "start": "3588880",
    "end": "3594480"
  },
  {
    "text": "balanced everyone that runs clusters at some point find out that one customer is taking more load than the other twitter",
    "start": "3594480",
    "end": "3600799"
  },
  {
    "text": "for example is a very good case for and usually a lot of the crashes that we have is because of that because one of",
    "start": "3600799",
    "end": "3606160"
  },
  {
    "text": "the nodes we didn't partition well the cluster one of the node takes most of the load it explode it breaks and then",
    "start": "3606160",
    "end": "3611440"
  },
  {
    "text": "the entire cluster uh gets down so we wanted to have a a very simple view in which we can know how a cluster is doing",
    "start": "3611440",
    "end": "3617839"
  },
  {
    "text": "so the gouge here shows us the aggregated result of those individual servers remember we have a cluster each",
    "start": "3617839",
    "end": "3625040"
  },
  {
    "text": "cluster has a different value for that same metric that we're monitoring we could have you know all those metrics",
    "start": "3625040",
    "end": "3631200"
  },
  {
    "text": "exposed to that which is going to be very verbose a lot of a lot of information that we don't necessarily can pass or any human being can pass",
    "start": "3631200",
    "end": "3638640"
  },
  {
    "text": "easily only thing that we met that is matters for us is if something is wrong",
    "start": "3638640",
    "end": "3644559"
  },
  {
    "text": "that's it if something is not wrong we don't really care about those different metrics so we want to have and pass that",
    "start": "3644559",
    "end": "3651599"
  },
  {
    "text": "information very quickly so that you know if something is wrong or not and that's it that's what we did here so",
    "start": "3651599",
    "end": "3656960"
  },
  {
    "text": "with that gouge we know if the cluster is balanced without drilling into the details and then once it's not balanced",
    "start": "3656960",
    "end": "3663119"
  },
  {
    "text": "then we'll drill down into the details but only then and we can see the logs and some",
    "start": "3663119",
    "end": "3669200"
  },
  {
    "text": "other information about the instances that is running and we can go and see the details the meta information per",
    "start": "3669200",
    "end": "3676119"
  },
  {
    "text": "service for example in this case I can say go to and see how the load balances",
    "start": "3676119",
    "end": "3681839"
  },
  {
    "text": "in the cluster and it actually sees two instances running right now it's actually started with one and I did",
    "start": "3681839",
    "end": "3687520"
  },
  {
    "text": "something i did a scaling event i simulated it just takes the process takes a little bit of time i emulated a",
    "start": "3687520",
    "end": "3694000"
  },
  {
    "text": "scaling event that created another instance and added automatically to the load balancer so again I didn't have to",
    "start": "3694000",
    "end": "3699040"
  },
  {
    "text": "do anything the only thing that I did here is trigger a scaling event and that",
    "start": "3699040",
    "end": "3704240"
  },
  {
    "text": "created a new tomat server and that Tom cut server automatically configure that in the load balancer and everything went",
    "start": "3704240",
    "end": "3710319"
  },
  {
    "text": "up automatically the same goes with failover so if I crash one of those instances what I'll see is that it will",
    "start": "3710319",
    "end": "3716240"
  },
  {
    "text": "monitor the SLA say that there needs to be two instances here it will launch a new machine configure that and that's it",
    "start": "3716240",
    "end": "3722480"
  },
  {
    "text": "so with that I think we reaching to the end i'll just show you the examples of",
    "start": "3722480",
    "end": "3727680"
  },
  {
    "text": "how I did that trigger of event so all I did here is set instances app to app is",
    "start": "3727680",
    "end": "3734880"
  },
  {
    "text": "the name of the server so for example I did here list services and I can see the name of the services that are currently",
    "start": "3734880",
    "end": "3741040"
  },
  {
    "text": "being deployed and then I can interact with that take into account that I",
    "start": "3741040",
    "end": "3746480"
  },
  {
    "text": "didn't have to point any IP address any host or anything like that i interact",
    "start": "3746480",
    "end": "3751760"
  },
  {
    "text": "with the service using a logical name because of that I can take that",
    "start": "3751760",
    "end": "3757359"
  },
  {
    "text": "same application and run it on a bare metal environment on a cloud environment or any environment and it will work",
    "start": "3757359",
    "end": "3763359"
  },
  {
    "text": "because we abstracted a lot of the infrastructure details out of that recipe",
    "start": "3763359",
    "end": "3769559"
  },
  {
    "text": "[Music]",
    "start": "3770250",
    "end": "3777789"
  }
]