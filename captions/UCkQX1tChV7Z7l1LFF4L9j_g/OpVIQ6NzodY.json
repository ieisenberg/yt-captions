[
  {
    "text": "hello kukon",
    "start": "4560",
    "end": "6319"
  },
  {
    "text": "my name is kati gamanji and i one of the",
    "start": "6319",
    "end": "8480"
  },
  {
    "text": "cloud platform engineer for american",
    "start": "8480",
    "end": "10160"
  },
  {
    "text": "express",
    "start": "10160",
    "end": "11440"
  },
  {
    "text": "around a month ago i joined american",
    "start": "11440",
    "end": "13599"
  },
  {
    "text": "express and i am part of the team that",
    "start": "13599",
    "end": "15440"
  },
  {
    "text": "aims to transform the current platform",
    "start": "15440",
    "end": "17600"
  },
  {
    "text": "by embracing the cloud native principles",
    "start": "17600",
    "end": "19520"
  },
  {
    "text": "and making the best use of the open",
    "start": "19520",
    "end": "21199"
  },
  {
    "text": "source tools",
    "start": "21199",
    "end": "23359"
  },
  {
    "text": "as well quite recently i've been",
    "start": "23359",
    "end": "24880"
  },
  {
    "text": "nominated one of the technical oversight",
    "start": "24880",
    "end": "26720"
  },
  {
    "text": "committee member or toc",
    "start": "26720",
    "end": "28480"
  },
  {
    "text": "for the cncf alongside 10 other",
    "start": "28480",
    "end": "31439"
  },
  {
    "text": "champions within the open source",
    "start": "31439",
    "end": "32880"
  },
  {
    "text": "community",
    "start": "32880",
    "end": "33680"
  },
  {
    "text": "i'll be responsible to steer and",
    "start": "33680",
    "end": "35600"
  },
  {
    "text": "maintain the technical vision",
    "start": "35600",
    "end": "37280"
  },
  {
    "text": "for the cncf landscape pretty much we",
    "start": "37280",
    "end": "39840"
  },
  {
    "text": "are the committee that enables and",
    "start": "39840",
    "end": "41840"
  },
  {
    "text": "leverages products",
    "start": "41840",
    "end": "43040"
  },
  {
    "text": "to join the open source community",
    "start": "43040",
    "end": "46399"
  },
  {
    "text": "today i would like to talk about the",
    "start": "46399",
    "end": "48399"
  },
  {
    "text": "interoperability of open source tools",
    "start": "48399",
    "end": "50559"
  },
  {
    "text": "and more specifically the emergence of",
    "start": "50559",
    "end": "52719"
  },
  {
    "text": "interfaces",
    "start": "52719",
    "end": "55360"
  },
  {
    "text": "six years ago the container orchestrated",
    "start": "55600",
    "end": "58000"
  },
  {
    "text": "framework space",
    "start": "58000",
    "end": "58879"
  },
  {
    "text": "was very heavily diversified we had",
    "start": "58879",
    "end": "61520"
  },
  {
    "text": "tools such as",
    "start": "61520",
    "end": "62480"
  },
  {
    "text": "doco swarm apache mesos coreos fleet",
    "start": "62480",
    "end": "65680"
  },
  {
    "text": "kubernetes",
    "start": "65680",
    "end": "66640"
  },
  {
    "text": "and all of them provided a viable",
    "start": "66640",
    "end": "68320"
  },
  {
    "text": "solutions to run containers",
    "start": "68320",
    "end": "69920"
  },
  {
    "text": "at scale however kubernetes took the",
    "start": "69920",
    "end": "73520"
  },
  {
    "text": "lead in defining the principles of how",
    "start": "73520",
    "end": "75439"
  },
  {
    "text": "to maintain",
    "start": "75439",
    "end": "76640"
  },
  {
    "text": "and distribute containerized workloads",
    "start": "76640",
    "end": "79200"
  },
  {
    "text": "nowadays kubernetes is known for its",
    "start": "79200",
    "end": "81040"
  },
  {
    "text": "scalability and portability",
    "start": "81040",
    "end": "82960"
  },
  {
    "text": "but more importantly for its approach to",
    "start": "82960",
    "end": "85520"
  },
  {
    "text": "declarative configuration",
    "start": "85520",
    "end": "87119"
  },
  {
    "text": "and automation and this prompted for",
    "start": "87119",
    "end": "89920"
  },
  {
    "text": "multiple tools to be built around",
    "start": "89920",
    "end": "91520"
  },
  {
    "text": "kubernetes",
    "start": "91520",
    "end": "92400"
  },
  {
    "text": "to extend its functionalities and this",
    "start": "92400",
    "end": "94720"
  },
  {
    "text": "created what we",
    "start": "94720",
    "end": "95759"
  },
  {
    "text": "today know as the cloud native landscape",
    "start": "95759",
    "end": "98560"
  },
  {
    "text": "which resides under the cncf umbrella",
    "start": "98560",
    "end": "100960"
  },
  {
    "text": "cloud native computing foundation",
    "start": "100960",
    "end": "104560"
  },
  {
    "text": "however if you look into every single",
    "start": "104560",
    "end": "106079"
  },
  {
    "text": "tool they're gonna provision",
    "start": "106079",
    "end": "107759"
  },
  {
    "text": "quite similar functionality sometimes",
    "start": "107759",
    "end": "110000"
  },
  {
    "text": "and at the beginning they had very very",
    "start": "110000",
    "end": "112000"
  },
  {
    "text": "different ways to converge with",
    "start": "112000",
    "end": "113680"
  },
  {
    "text": "kubernetes components",
    "start": "113680",
    "end": "115600"
  },
  {
    "text": "it was clear that it was necessary to",
    "start": "115600",
    "end": "117920"
  },
  {
    "text": "introduce a set of standards",
    "start": "117920",
    "end": "119680"
  },
  {
    "text": "and it was imperative to have the",
    "start": "119680",
    "end": "122000"
  },
  {
    "text": "interfaces around",
    "start": "122000",
    "end": "123280"
  },
  {
    "text": "and this is what i would like to talk to",
    "start": "123280",
    "end": "124560"
  },
  {
    "text": "you about today",
    "start": "124560",
    "end": "126560"
  },
  {
    "text": "to do so i would like to introduce the",
    "start": "126560",
    "end": "128640"
  },
  {
    "text": "container network and container runtime",
    "start": "128640",
    "end": "130479"
  },
  {
    "text": "interfaces",
    "start": "130479",
    "end": "131360"
  },
  {
    "text": "and how they space the path towards",
    "start": "131360",
    "end": "132959"
  },
  {
    "text": "standardization and guidelines within",
    "start": "132959",
    "end": "135120"
  },
  {
    "text": "the kubernetes ecosystem",
    "start": "135120",
    "end": "137120"
  },
  {
    "text": "now these two components were necessary",
    "start": "137120",
    "end": "139440"
  },
  {
    "text": "to make the transition between the vms",
    "start": "139440",
    "end": "141520"
  },
  {
    "text": "and containers as easy as possible",
    "start": "141520",
    "end": "145599"
  },
  {
    "text": "in the next stage it's something which",
    "start": "145599",
    "end": "147280"
  },
  {
    "text": "identify as the innovation wave",
    "start": "147280",
    "end": "149760"
  },
  {
    "text": "we have the community concerning itself",
    "start": "149760",
    "end": "151519"
  },
  {
    "text": "more and more with the extensibility of",
    "start": "151519",
    "end": "153280"
  },
  {
    "text": "kubernetes",
    "start": "153280",
    "end": "155280"
  },
  {
    "text": "and this is confirmed by the appearance",
    "start": "155280",
    "end": "156879"
  },
  {
    "text": "of the service mesh and storage",
    "start": "156879",
    "end": "158160"
  },
  {
    "text": "interfaces",
    "start": "158160",
    "end": "159040"
  },
  {
    "text": "as well as cluster api and lastly i",
    "start": "159040",
    "end": "162480"
  },
  {
    "text": "would like to conclude",
    "start": "162480",
    "end": "163680"
  },
  {
    "text": "with the impact that the emergence of",
    "start": "163680",
    "end": "165360"
  },
  {
    "text": "interfaces had on the vendors",
    "start": "165360",
    "end": "167440"
  },
  {
    "text": "end users and the community",
    "start": "167440",
    "end": "171360"
  },
  {
    "text": "before i move forward i would like to",
    "start": "171360",
    "end": "172959"
  },
  {
    "text": "introduce kubernetes numbers",
    "start": "172959",
    "end": "174640"
  },
  {
    "text": "as it is today based on the cncf",
    "start": "174640",
    "end": "177840"
  },
  {
    "text": "survey in 2019 more than 58",
    "start": "177840",
    "end": "180959"
  },
  {
    "text": "of the companies are using kubernetes",
    "start": "180959",
    "end": "182720"
  },
  {
    "text": "and production",
    "start": "182720",
    "end": "184080"
  },
  {
    "text": "the over 42 percent are actually",
    "start": "184080",
    "end": "186159"
  },
  {
    "text": "prototyping kubernetes as a viable",
    "start": "186159",
    "end": "188159"
  },
  {
    "text": "solution",
    "start": "188159",
    "end": "189760"
  },
  {
    "text": "another milestone i'd like to mention is",
    "start": "189760",
    "end": "191680"
  },
  {
    "text": "that more than 2 000 companies",
    "start": "191680",
    "end": "193519"
  },
  {
    "text": "are using kubernetes in an enterprise",
    "start": "193519",
    "end": "195360"
  },
  {
    "text": "context now this is a very important",
    "start": "195360",
    "end": "197280"
  },
  {
    "text": "milestone because it showcases the",
    "start": "197280",
    "end": "198879"
  },
  {
    "text": "maturity",
    "start": "198879",
    "end": "199840"
  },
  {
    "text": "and the high adoption rate for",
    "start": "199840",
    "end": "201040"
  },
  {
    "text": "communities",
    "start": "201040",
    "end": "203440"
  },
  {
    "text": "when we move towards the development",
    "start": "203440",
    "end": "204879"
  },
  {
    "text": "community more than 2 000 engineers are",
    "start": "204879",
    "end": "207599"
  },
  {
    "text": "actively contributing towards the",
    "start": "207599",
    "end": "209200"
  },
  {
    "text": "feature build out",
    "start": "209200",
    "end": "210239"
  },
  {
    "text": "and bug fixing and when we look into the",
    "start": "210239",
    "end": "213040"
  },
  {
    "text": "end user community",
    "start": "213040",
    "end": "214400"
  },
  {
    "text": "more than 23 000 attendees were",
    "start": "214400",
    "end": "216720"
  },
  {
    "text": "registered at the kubecons around the",
    "start": "216720",
    "end": "218400"
  },
  {
    "text": "world",
    "start": "218400",
    "end": "218799"
  },
  {
    "text": "last year now this is going to be coupon",
    "start": "218799",
    "end": "221200"
  },
  {
    "text": "in europe",
    "start": "221200",
    "end": "221920"
  },
  {
    "text": "china and north america",
    "start": "221920",
    "end": "226959"
  },
  {
    "text": "the community around kubernetes was not",
    "start": "226959",
    "end": "228799"
  },
  {
    "text": "always as developed and flourishing",
    "start": "228799",
    "end": "230560"
  },
  {
    "text": "but more importantly it was not always",
    "start": "230560",
    "end": "232720"
  },
  {
    "text": "as engaging",
    "start": "232720",
    "end": "234319"
  },
  {
    "text": "at the beginning the picture was quite",
    "start": "234319",
    "end": "235840"
  },
  {
    "text": "different nowadays kubernetes is known",
    "start": "235840",
    "end": "238480"
  },
  {
    "text": "for its adaptability and flexibility",
    "start": "238480",
    "end": "240879"
  },
  {
    "text": "to run containerized workloads with",
    "start": "240879",
    "end": "242560"
  },
  {
    "text": "predefined technical requirements",
    "start": "242560",
    "end": "244720"
  },
  {
    "text": "it will be able to provision the",
    "start": "244720",
    "end": "246159"
  },
  {
    "text": "ecosystem for application execution",
    "start": "246159",
    "end": "248560"
  },
  {
    "text": "while shrinking its footprint in the",
    "start": "248560",
    "end": "250159"
  },
  {
    "text": "cluster it's all about",
    "start": "250159",
    "end": "252319"
  },
  {
    "text": "efficient management of the resources",
    "start": "252319",
    "end": "255599"
  },
  {
    "text": "however to reach the state of the art",
    "start": "255599",
    "end": "257440"
  },
  {
    "text": "complex challenges",
    "start": "257440",
    "end": "258639"
  },
  {
    "text": "required solutionizing such as the",
    "start": "258639",
    "end": "260639"
  },
  {
    "text": "support for different networking",
    "start": "260639",
    "end": "262400"
  },
  {
    "text": "and hardware systems and this prompted",
    "start": "262400",
    "end": "265040"
  },
  {
    "text": "for the cni and cri to be",
    "start": "265040",
    "end": "267120"
  },
  {
    "text": "introduced so pretty much the container",
    "start": "267120",
    "end": "269520"
  },
  {
    "text": "network interface",
    "start": "269520",
    "end": "270639"
  },
  {
    "text": "and the container runtime interface",
    "start": "270639",
    "end": "273919"
  },
  {
    "text": "cni was introduced under the cncf",
    "start": "273919",
    "end": "276400"
  },
  {
    "text": "umbrella in early 2017",
    "start": "276400",
    "end": "278800"
  },
  {
    "text": "while the cri was introduced in",
    "start": "278800",
    "end": "280479"
  },
  {
    "text": "kubernetes 1.5 and its alpha release",
    "start": "280479",
    "end": "284080"
  },
  {
    "text": "i would like to deep dive a bit more",
    "start": "284080",
    "end": "285440"
  },
  {
    "text": "into this topic because i find them",
    "start": "285440",
    "end": "287199"
  },
  {
    "text": "quite pivotal",
    "start": "287199",
    "end": "288320"
  },
  {
    "text": "in terms of the standardization but more",
    "start": "288320",
    "end": "291520"
  },
  {
    "text": "importantly",
    "start": "291520",
    "end": "292320"
  },
  {
    "text": "when it comes to the transition between",
    "start": "292320",
    "end": "293759"
  },
  {
    "text": "the vms and containers it's all about",
    "start": "293759",
    "end": "296240"
  },
  {
    "text": "keeping the mindset and changing the",
    "start": "296240",
    "end": "298160"
  },
  {
    "text": "perspective",
    "start": "298160",
    "end": "300720"
  },
  {
    "text": "exploring the networking fabric within a",
    "start": "301440",
    "end": "303440"
  },
  {
    "text": "kubernetes cluster",
    "start": "303440",
    "end": "304479"
  },
  {
    "text": "is quite a challenging task kubernetes",
    "start": "304479",
    "end": "307039"
  },
  {
    "text": "is known for its ability to run",
    "start": "307039",
    "end": "308800"
  },
  {
    "text": "distributed workload workloads on a",
    "start": "308800",
    "end": "310880"
  },
  {
    "text": "distributed amount of machines",
    "start": "310880",
    "end": "312720"
  },
  {
    "text": "while preserving the connectivity and",
    "start": "312720",
    "end": "314800"
  },
  {
    "text": "reachability to these workloads",
    "start": "314800",
    "end": "317520"
  },
  {
    "text": "as such the networking topology is",
    "start": "317520",
    "end": "319680"
  },
  {
    "text": "highly assertive",
    "start": "319680",
    "end": "320639"
  },
  {
    "text": "and it gravitates towards the idea that",
    "start": "320639",
    "end": "322800"
  },
  {
    "text": "every single pod has a unique ip",
    "start": "322800",
    "end": "326080"
  },
  {
    "text": "now this particular networking model",
    "start": "326080",
    "end": "328000"
  },
  {
    "text": "dismisses the need for dynamic port",
    "start": "328000",
    "end": "329759"
  },
  {
    "text": "allocation",
    "start": "329759",
    "end": "330720"
  },
  {
    "text": "but at the same time brings into light",
    "start": "330720",
    "end": "332720"
  },
  {
    "text": "new challenges to be solved",
    "start": "332720",
    "end": "334400"
  },
  {
    "text": "such as how containers pods services",
    "start": "334400",
    "end": "338000"
  },
  {
    "text": "and users are able to access our",
    "start": "338000",
    "end": "340240"
  },
  {
    "text": "application",
    "start": "340240",
    "end": "342560"
  },
  {
    "text": "to showcase exactly where the cni",
    "start": "342560",
    "end": "344960"
  },
  {
    "text": "component is injected",
    "start": "344960",
    "end": "346560"
  },
  {
    "text": "i would like to showcase the journey of",
    "start": "346560",
    "end": "349440"
  },
  {
    "text": "a packet to be sent across",
    "start": "349440",
    "end": "351199"
  },
  {
    "text": "two different applications on an",
    "start": "351199",
    "end": "352960"
  },
  {
    "text": "internet setup",
    "start": "352960",
    "end": "354560"
  },
  {
    "text": "so in this example i have two nodes and",
    "start": "354560",
    "end": "356560"
  },
  {
    "text": "supposedly i'm going to have two",
    "start": "356560",
    "end": "357680"
  },
  {
    "text": "different applications running on that",
    "start": "357680",
    "end": "359680"
  },
  {
    "text": "and i would like to send a request from",
    "start": "359680",
    "end": "361280"
  },
  {
    "text": "application one to application two",
    "start": "361280",
    "end": "365039"
  },
  {
    "text": "once the request is issued is actually",
    "start": "365039",
    "end": "367280"
  },
  {
    "text": "going to look inside the pod",
    "start": "367280",
    "end": "368960"
  },
  {
    "text": "to see if any containers are able to",
    "start": "368960",
    "end": "370800"
  },
  {
    "text": "serve the request",
    "start": "370800",
    "end": "372400"
  },
  {
    "text": "for the sake of this example will not be",
    "start": "372400",
    "end": "374160"
  },
  {
    "text": "able to do so which means the request is",
    "start": "374160",
    "end": "376400"
  },
  {
    "text": "going to go outside of the pod",
    "start": "376400",
    "end": "377840"
  },
  {
    "text": "and it's going to reach the root network",
    "start": "377840",
    "end": "379360"
  },
  {
    "text": "namespace on the physical machine",
    "start": "379360",
    "end": "382319"
  },
  {
    "text": "at this stage we're going to have the",
    "start": "382319",
    "end": "383520"
  },
  {
    "text": "visibility of all the pods on that",
    "start": "383520",
    "end": "385440"
  },
  {
    "text": "specific node",
    "start": "385440",
    "end": "387440"
  },
  {
    "text": "again we'll not be able to serve our",
    "start": "387440",
    "end": "389280"
  },
  {
    "text": "request which means the request is going",
    "start": "389280",
    "end": "391520"
  },
  {
    "text": "to go",
    "start": "391520",
    "end": "391840"
  },
  {
    "text": "outside of the machine for the inferno",
    "start": "391840",
    "end": "393840"
  },
  {
    "text": "device towards the routing table",
    "start": "393840",
    "end": "396560"
  },
  {
    "text": "now generally speaking the routing table",
    "start": "396560",
    "end": "398639"
  },
  {
    "text": "is going to have the mapping between",
    "start": "398639",
    "end": "400000"
  },
  {
    "text": "every single node",
    "start": "400000",
    "end": "401199"
  },
  {
    "text": "and the side for the pod ip to be",
    "start": "401199",
    "end": "403680"
  },
  {
    "text": "allocated on that node",
    "start": "403680",
    "end": "405440"
  },
  {
    "text": "which means that with minimal hubs we'll",
    "start": "405440",
    "end": "407280"
  },
  {
    "text": "be able to reach our machine",
    "start": "407280",
    "end": "409199"
  },
  {
    "text": "and in a reversive manner we'll go for",
    "start": "409199",
    "end": "411280"
  },
  {
    "text": "the root network namespace",
    "start": "411280",
    "end": "413039"
  },
  {
    "text": "to the pod slash container and our",
    "start": "413039",
    "end": "415360"
  },
  {
    "text": "request is going to be served",
    "start": "415360",
    "end": "418560"
  },
  {
    "text": "now the networking model in kubernetes",
    "start": "418800",
    "end": "420880"
  },
  {
    "text": "dictates that every single pod should be",
    "start": "420880",
    "end": "422880"
  },
  {
    "text": "accessible via its ip",
    "start": "422880",
    "end": "424560"
  },
  {
    "text": "across all nodes as such it was",
    "start": "424560",
    "end": "427840"
  },
  {
    "text": "necessary to have this inclusivity of",
    "start": "427840",
    "end": "429840"
  },
  {
    "text": "different networks",
    "start": "429840",
    "end": "430880"
  },
  {
    "text": "networking systems to make sure that",
    "start": "430880",
    "end": "432880"
  },
  {
    "text": "this principle is fulfilled",
    "start": "432880",
    "end": "435599"
  },
  {
    "text": "and this prompted for the appearance of",
    "start": "435599",
    "end": "437120"
  },
  {
    "text": "the cni or containing network interface",
    "start": "437120",
    "end": "440560"
  },
  {
    "text": "which concerns itself with the",
    "start": "440560",
    "end": "441919"
  },
  {
    "text": "connectivity of the pods and the",
    "start": "441919",
    "end": "443360"
  },
  {
    "text": "deletion of resources",
    "start": "443360",
    "end": "444800"
  },
  {
    "text": "when the pod is removed so pretty much",
    "start": "444800",
    "end": "447120"
  },
  {
    "text": "it's going to have two operations",
    "start": "447120",
    "end": "449039"
  },
  {
    "text": "addition and deletion it will make sure",
    "start": "449039",
    "end": "451599"
  },
  {
    "text": "the pod has an ip",
    "start": "451599",
    "end": "452960"
  },
  {
    "text": "but at the same time to make sure that",
    "start": "452960",
    "end": "454720"
  },
  {
    "text": "to clean up resources when the pot is",
    "start": "454720",
    "end": "456479"
  },
  {
    "text": "not going to be there anymore",
    "start": "456479",
    "end": "459520"
  },
  {
    "text": "when you're looking into the ecosystem",
    "start": "459840",
    "end": "461360"
  },
  {
    "text": "at the moment there are plethora of",
    "start": "461360",
    "end": "462960"
  },
  {
    "text": "tools provisioning the networking fabric",
    "start": "462960",
    "end": "464720"
  },
  {
    "text": "for a cluster",
    "start": "464720",
    "end": "466080"
  },
  {
    "text": "from which we have flannel which",
    "start": "466080",
    "end": "467919"
  },
  {
    "text": "reported a lot of",
    "start": "467919",
    "end": "469199"
  },
  {
    "text": "success from the end user community",
    "start": "469199",
    "end": "471360"
  },
  {
    "text": "flannel is known for its simplicity",
    "start": "471360",
    "end": "473599"
  },
  {
    "text": "to introduce the network overlay for a",
    "start": "473599",
    "end": "475360"
  },
  {
    "text": "cluster",
    "start": "475360",
    "end": "477440"
  },
  {
    "text": "calico as well has gained a lot of",
    "start": "477440",
    "end": "479199"
  },
  {
    "text": "momentum lately and this is because in",
    "start": "479199",
    "end": "481280"
  },
  {
    "text": "addition to the network overlay",
    "start": "481280",
    "end": "482879"
  },
  {
    "text": "it's going to introduce the networking",
    "start": "482879",
    "end": "484560"
  },
  {
    "text": "policy enforcer which",
    "start": "484560",
    "end": "486240"
  },
  {
    "text": "allows the users to configure",
    "start": "486240",
    "end": "487759"
  },
  {
    "text": "fine-grained access control",
    "start": "487759",
    "end": "489440"
  },
  {
    "text": "to the services within the classroom",
    "start": "489440",
    "end": "493039"
  },
  {
    "text": "lately celium as well has gained a lot",
    "start": "493039",
    "end": "495599"
  },
  {
    "text": "of popularity",
    "start": "495599",
    "end": "496879"
  },
  {
    "text": "and this is because it's aware of the",
    "start": "496879",
    "end": "498479"
  },
  {
    "text": "networking and application layer",
    "start": "498479",
    "end": "500080"
  },
  {
    "text": "security protocols",
    "start": "500080",
    "end": "501440"
  },
  {
    "text": "it will allow the layer 3 and layer 7",
    "start": "501440",
    "end": "503440"
  },
  {
    "text": "configuration which makes it possible to",
    "start": "503440",
    "end": "505599"
  },
  {
    "text": "have the transparency",
    "start": "505599",
    "end": "507120"
  },
  {
    "text": "of the networking packets at the api",
    "start": "507120",
    "end": "510160"
  },
  {
    "text": "level",
    "start": "510160",
    "end": "512240"
  },
  {
    "text": "and with works actually came with their",
    "start": "512240",
    "end": "513919"
  },
  {
    "text": "own tool for the",
    "start": "513919",
    "end": "515440"
  },
  {
    "text": "networking component called weavenet and",
    "start": "515440",
    "end": "517919"
  },
  {
    "text": "it's known for its simplicity to be",
    "start": "517919",
    "end": "519360"
  },
  {
    "text": "installed in the cluster",
    "start": "519360",
    "end": "520719"
  },
  {
    "text": "with minimal configuration it's actually",
    "start": "520719",
    "end": "523518"
  },
  {
    "text": "on one line",
    "start": "523519",
    "end": "524159"
  },
  {
    "text": "installer",
    "start": "524159",
    "end": "526720"
  },
  {
    "text": "when i transition to the runtime",
    "start": "527519",
    "end": "528880"
  },
  {
    "text": "component the store is slightly",
    "start": "528880",
    "end": "530480"
  },
  {
    "text": "different",
    "start": "530480",
    "end": "532080"
  },
  {
    "text": "at the beginning most of the containers",
    "start": "532080",
    "end": "534880"
  },
  {
    "text": "or the runtime capabilities would be",
    "start": "534880",
    "end": "536480"
  },
  {
    "text": "provisioned by docker",
    "start": "536480",
    "end": "537920"
  },
  {
    "text": "and rocket now the runtime is the",
    "start": "537920",
    "end": "540320"
  },
  {
    "text": "particle which intercepts",
    "start": "540320",
    "end": "542160"
  },
  {
    "text": "api calls from the cubelet and it will",
    "start": "542160",
    "end": "544320"
  },
  {
    "text": "make sure to create the containers on",
    "start": "544320",
    "end": "545839"
  },
  {
    "text": "the machine",
    "start": "545839",
    "end": "546399"
  },
  {
    "text": "with the right specification now as i",
    "start": "546399",
    "end": "549440"
  },
  {
    "text": "mentioned",
    "start": "549440",
    "end": "550080"
  },
  {
    "text": "docker and rocket would be the only",
    "start": "550080",
    "end": "551600"
  },
  {
    "text": "supported runtimes at the beginning",
    "start": "551600",
    "end": "553760"
  },
  {
    "text": "and their logic would be very deeply",
    "start": "553760",
    "end": "555440"
  },
  {
    "text": "ingrained within the kubernetes source",
    "start": "555440",
    "end": "557200"
  },
  {
    "text": "code",
    "start": "557200",
    "end": "558000"
  },
  {
    "text": "and this presented quite a few",
    "start": "558000",
    "end": "559200"
  },
  {
    "text": "challenges if you'd like to",
    "start": "559200",
    "end": "561519"
  },
  {
    "text": "introduce new features to the existing",
    "start": "561519",
    "end": "563839"
  },
  {
    "text": "runtimes",
    "start": "563839",
    "end": "564720"
  },
  {
    "text": "that will be very tightly coupled with",
    "start": "564720",
    "end": "566320"
  },
  {
    "text": "the release process for kubernetes",
    "start": "566320",
    "end": "568080"
  },
  {
    "text": "which is quite lengthy it actually",
    "start": "568080",
    "end": "570320"
  },
  {
    "text": "allows for very low",
    "start": "570320",
    "end": "571600"
  },
  {
    "text": "velocity rate when it comes to feature",
    "start": "571600",
    "end": "573360"
  },
  {
    "text": "development",
    "start": "573360",
    "end": "575200"
  },
  {
    "text": "as well if you'd like to introduce new",
    "start": "575200",
    "end": "577040"
  },
  {
    "text": "runtimes that will present a very high",
    "start": "577040",
    "end": "579279"
  },
  {
    "text": "level entry bar",
    "start": "579279",
    "end": "580480"
  },
  {
    "text": "because it will require a very in-depth",
    "start": "580480",
    "end": "582240"
  },
  {
    "text": "knowledge of the kubernetes source code",
    "start": "582240",
    "end": "584560"
  },
  {
    "text": "again this is not sustainable to move",
    "start": "584560",
    "end": "586480"
  },
  {
    "text": "forward and to comply with the growing",
    "start": "586480",
    "end": "588560"
  },
  {
    "text": "space within the runtime components",
    "start": "588560",
    "end": "591120"
  },
  {
    "text": "it was clear that it was necessary to",
    "start": "591120",
    "end": "593200"
  },
  {
    "text": "have an interface",
    "start": "593200",
    "end": "594640"
  },
  {
    "text": "which will enable the runtimes to be",
    "start": "594640",
    "end": "596560"
  },
  {
    "text": "integrated",
    "start": "596560",
    "end": "598640"
  },
  {
    "text": "as such the container runtime interface",
    "start": "598640",
    "end": "601279"
  },
  {
    "text": "came to be about",
    "start": "601279",
    "end": "602320"
  },
  {
    "text": "and it provides an abstraction layer for",
    "start": "602320",
    "end": "604399"
  },
  {
    "text": "the",
    "start": "604399",
    "end": "605600"
  },
  {
    "text": "integration of runtime capabilities from",
    "start": "605600",
    "end": "608320"
  },
  {
    "text": "which docker would be just one of the",
    "start": "608320",
    "end": "610079"
  },
  {
    "text": "supported runtimes",
    "start": "610079",
    "end": "612880"
  },
  {
    "text": "when you're looking into the cncf",
    "start": "612880",
    "end": "614320"
  },
  {
    "text": "landscape there are plenty of tools",
    "start": "614320",
    "end": "616000"
  },
  {
    "text": "provisioning",
    "start": "616000",
    "end": "616720"
  },
  {
    "text": "the runtime capabilities from which we",
    "start": "616720",
    "end": "618880"
  },
  {
    "text": "have container d in cryo",
    "start": "618880",
    "end": "620640"
  },
  {
    "text": "being the most widely used and this is",
    "start": "620640",
    "end": "622720"
  },
  {
    "text": "because of the open source nature",
    "start": "622720",
    "end": "625440"
  },
  {
    "text": "container d is currently a graduated",
    "start": "625440",
    "end": "627440"
  },
  {
    "text": "cncf project so it has a lot of",
    "start": "627440",
    "end": "629920"
  },
  {
    "text": "use cases from the end user community",
    "start": "629920",
    "end": "631760"
  },
  {
    "text": "but as well it actually showcases its",
    "start": "631760",
    "end": "633440"
  },
  {
    "text": "maturity",
    "start": "633440",
    "end": "634800"
  },
  {
    "text": "and it's known for its industry standard",
    "start": "634800",
    "end": "637200"
  },
  {
    "text": "to provision the runtime for a cluster",
    "start": "637200",
    "end": "640320"
  },
  {
    "text": "now cryo is an incubating cncf project",
    "start": "640320",
    "end": "643519"
  },
  {
    "text": "and it's known for its lightweight",
    "start": "643519",
    "end": "644959"
  },
  {
    "text": "capabilities but at the same time",
    "start": "644959",
    "end": "647040"
  },
  {
    "text": "complying",
    "start": "647040",
    "end": "648000"
  },
  {
    "text": "with open source container initiative",
    "start": "648000",
    "end": "650000"
  },
  {
    "text": "standards",
    "start": "650000",
    "end": "652320"
  },
  {
    "text": "now the implementation of the runtime is",
    "start": "652320",
    "end": "654480"
  },
  {
    "text": "going to be very tightly coupled with",
    "start": "654480",
    "end": "656079"
  },
  {
    "text": "the infrastructure provider",
    "start": "656079",
    "end": "658000"
  },
  {
    "text": "it is only natural to allow the existing",
    "start": "658000",
    "end": "659920"
  },
  {
    "text": "cloud providers to use their own apis",
    "start": "659920",
    "end": "662079"
  },
  {
    "text": "to create the containers on their",
    "start": "662079",
    "end": "663680"
  },
  {
    "text": "machines as such",
    "start": "663680",
    "end": "665920"
  },
  {
    "text": "google is going to have their own",
    "start": "665920",
    "end": "667120"
  },
  {
    "text": "runtime component which is going to be",
    "start": "667120",
    "end": "668640"
  },
  {
    "text": "called gvisor",
    "start": "668640",
    "end": "669839"
  },
  {
    "text": "and aws has their own component which is",
    "start": "669839",
    "end": "672240"
  },
  {
    "text": "going to be aws firecracker",
    "start": "672240",
    "end": "675839"
  },
  {
    "text": "now the networking and runtime",
    "start": "677200",
    "end": "678720"
  },
  {
    "text": "components were extremely essential",
    "start": "678720",
    "end": "680959"
  },
  {
    "text": "when it comes to the migration between",
    "start": "680959",
    "end": "682720"
  },
  {
    "text": "the vms and containers",
    "start": "682720",
    "end": "684480"
  },
  {
    "text": "this is because we actually keep the",
    "start": "684480",
    "end": "686320"
  },
  {
    "text": "mindset in terms of reachability",
    "start": "686320",
    "end": "688079"
  },
  {
    "text": "of our workloads would be able to do so",
    "start": "688079",
    "end": "690800"
  },
  {
    "text": "by the ip",
    "start": "690800",
    "end": "691760"
  },
  {
    "text": "so the same would do with the vms we're",
    "start": "691760",
    "end": "693760"
  },
  {
    "text": "going to do it in the container world as",
    "start": "693760",
    "end": "695200"
  },
  {
    "text": "well",
    "start": "695200",
    "end": "696399"
  },
  {
    "text": "and the writing capability actually",
    "start": "696399",
    "end": "698000"
  },
  {
    "text": "allowed us to create the containers on",
    "start": "698000",
    "end": "699760"
  },
  {
    "text": "the machine",
    "start": "699760",
    "end": "700800"
  },
  {
    "text": "and these two components actually",
    "start": "700800",
    "end": "702959"
  },
  {
    "text": "exceeded the rate for the adoption",
    "start": "702959",
    "end": "704959"
  },
  {
    "text": "of kubernetes moving forward from this",
    "start": "704959",
    "end": "708320"
  },
  {
    "text": "point",
    "start": "708320",
    "end": "708959"
  },
  {
    "text": "the community concerns itself more and",
    "start": "708959",
    "end": "710720"
  },
  {
    "text": "more with the extensibility of",
    "start": "710720",
    "end": "712240"
  },
  {
    "text": "kubernetes",
    "start": "712240",
    "end": "713200"
  },
  {
    "text": "rather than settling down to a very",
    "start": "713200",
    "end": "714959"
  },
  {
    "text": "specific amount of tooling",
    "start": "714959",
    "end": "716959"
  },
  {
    "text": "and this is confirmed by the appearance",
    "start": "716959",
    "end": "719279"
  },
  {
    "text": "of service mesh interface",
    "start": "719279",
    "end": "721200"
  },
  {
    "text": "or smi container storage interface or",
    "start": "721200",
    "end": "724240"
  },
  {
    "text": "csi",
    "start": "724240",
    "end": "725120"
  },
  {
    "text": "and cluster api",
    "start": "725120",
    "end": "728079"
  },
  {
    "text": "the service mesh interface was",
    "start": "728959",
    "end": "730560"
  },
  {
    "text": "introduced in cubecon barcelona 2019",
    "start": "730560",
    "end": "733519"
  },
  {
    "text": "and it provides a solution to",
    "start": "733519",
    "end": "734959"
  },
  {
    "text": "democratize the integration of service",
    "start": "734959",
    "end": "736880"
  },
  {
    "text": "mesh within a kubernetes cluster",
    "start": "736880",
    "end": "740000"
  },
  {
    "text": "now i would like to step a bit back and",
    "start": "740000",
    "end": "741680"
  },
  {
    "text": "just introduce the service mesh",
    "start": "741680",
    "end": "742959"
  },
  {
    "text": "capabilities",
    "start": "742959",
    "end": "744560"
  },
  {
    "text": "service mesh is a dedicated",
    "start": "744560",
    "end": "746079"
  },
  {
    "text": "infrastructure layer that concerns",
    "start": "746079",
    "end": "747760"
  },
  {
    "text": "itself with the traffic to be sent",
    "start": "747760",
    "end": "749519"
  },
  {
    "text": "across services in a distributed",
    "start": "749519",
    "end": "751279"
  },
  {
    "text": "ecosystem",
    "start": "751279",
    "end": "752560"
  },
  {
    "text": "what it actually means is that it",
    "start": "752560",
    "end": "755040"
  },
  {
    "text": "focuses on the traceability and more",
    "start": "755040",
    "end": "756959"
  },
  {
    "text": "importantly of the transparency how the",
    "start": "756959",
    "end": "758800"
  },
  {
    "text": "services communicate between themselves",
    "start": "758800",
    "end": "760880"
  },
  {
    "text": "and this is an important feature when we",
    "start": "760880",
    "end": "763040"
  },
  {
    "text": "have an ecosystem",
    "start": "763040",
    "end": "764880"
  },
  {
    "text": "where you have micro services as the",
    "start": "764880",
    "end": "766320"
  },
  {
    "text": "basis",
    "start": "766320",
    "end": "768800"
  },
  {
    "text": "the service mesh interface is going to",
    "start": "770160",
    "end": "772079"
  },
  {
    "text": "cover three areas of configuration",
    "start": "772079",
    "end": "774399"
  },
  {
    "text": "there's going to be the traffic policy",
    "start": "774399",
    "end": "776240"
  },
  {
    "text": "traffic telemetry and traffic management",
    "start": "776240",
    "end": "779279"
  },
  {
    "text": "traffic policy allows the configuration",
    "start": "779279",
    "end": "781120"
  },
  {
    "text": "of fine-grained access control",
    "start": "781120",
    "end": "783040"
  },
  {
    "text": "of how the services will be",
    "start": "783040",
    "end": "784399"
  },
  {
    "text": "communicating between themselves",
    "start": "784399",
    "end": "787200"
  },
  {
    "text": "traffic management it's all about the",
    "start": "787200",
    "end": "789120"
  },
  {
    "text": "proportional traffic to be sent across",
    "start": "789120",
    "end": "790959"
  },
  {
    "text": "services",
    "start": "790959",
    "end": "791920"
  },
  {
    "text": "now this is an important feature if",
    "start": "791920",
    "end": "793519"
  },
  {
    "text": "you're thinking about canary rollouts",
    "start": "793519",
    "end": "796000"
  },
  {
    "text": "and traffic telemetry is concerning",
    "start": "796000",
    "end": "798240"
  },
  {
    "text": "itself how to capture and expose",
    "start": "798240",
    "end": "800000"
  },
  {
    "text": "metrics to make sure that we have the",
    "start": "800000",
    "end": "801600"
  },
  {
    "text": "full transparency of communication",
    "start": "801600",
    "end": "803600"
  },
  {
    "text": "between the services",
    "start": "803600",
    "end": "806480"
  },
  {
    "text": "now we have multiple tools provisioning",
    "start": "806639",
    "end": "808800"
  },
  {
    "text": "the service mesh capabilities but only",
    "start": "808800",
    "end": "810959"
  },
  {
    "text": "three of them",
    "start": "810959",
    "end": "811680"
  },
  {
    "text": "integrated with cmi from which we have",
    "start": "811680",
    "end": "814079"
  },
  {
    "text": "istio provisioned by google",
    "start": "814079",
    "end": "816160"
  },
  {
    "text": "we have console provisioned by hashicorp",
    "start": "816160",
    "end": "818399"
  },
  {
    "text": "and linkerd provisioned by buoyant",
    "start": "818399",
    "end": "821040"
  },
  {
    "text": "now it's worth to mention here that",
    "start": "821040",
    "end": "822880"
  },
  {
    "text": "linkard is currently",
    "start": "822880",
    "end": "824079"
  },
  {
    "text": "an incubating cncf project and is known",
    "start": "824079",
    "end": "826639"
  },
  {
    "text": "for its simplicity",
    "start": "826639",
    "end": "828079"
  },
  {
    "text": "to actually introduce the service mesh",
    "start": "828079",
    "end": "829920"
  },
  {
    "text": "function functionalities within the",
    "start": "829920",
    "end": "831360"
  },
  {
    "text": "cluster",
    "start": "831360",
    "end": "833839"
  },
  {
    "text": "when we transition to the storage space",
    "start": "834639",
    "end": "836639"
  },
  {
    "text": "i think this is one of the most",
    "start": "836639",
    "end": "837760"
  },
  {
    "text": "developed and widely used areas",
    "start": "837760",
    "end": "841120"
  },
  {
    "text": "the story with the storage component is",
    "start": "841120",
    "end": "843279"
  },
  {
    "text": "very similar to the runtime component",
    "start": "843279",
    "end": "845120"
  },
  {
    "text": "and this is because it was very deeply",
    "start": "845120",
    "end": "846720"
  },
  {
    "text": "engrained its logic was very deeply",
    "start": "846720",
    "end": "848639"
  },
  {
    "text": "claimed within the kubernetes source",
    "start": "848639",
    "end": "850320"
  },
  {
    "text": "code",
    "start": "850320",
    "end": "850800"
  },
  {
    "text": "and this allowed for a very low future",
    "start": "850800",
    "end": "852560"
  },
  {
    "text": "development rate and a very high level",
    "start": "852560",
    "end": "854720"
  },
  {
    "text": "bar",
    "start": "854720",
    "end": "855360"
  },
  {
    "text": "for the new storage providers to be",
    "start": "855360",
    "end": "857680"
  },
  {
    "text": "introduced",
    "start": "857680",
    "end": "858959"
  },
  {
    "text": "as such the interface came to be about",
    "start": "858959",
    "end": "861680"
  },
  {
    "text": "and it promotes a plugable system",
    "start": "861680",
    "end": "863760"
  },
  {
    "text": "for the applications to consume external",
    "start": "863760",
    "end": "866160"
  },
  {
    "text": "storage",
    "start": "866160",
    "end": "867519"
  },
  {
    "text": "the csi was introduced in kubernetes 1.9",
    "start": "867519",
    "end": "870560"
  },
  {
    "text": "in its alpha release and it moved to",
    "start": "870560",
    "end": "872800"
  },
  {
    "text": "general availability",
    "start": "872800",
    "end": "874240"
  },
  {
    "text": "in 1.13",
    "start": "874240",
    "end": "877360"
  },
  {
    "text": "now i was mentioning that this is one of",
    "start": "877519",
    "end": "879279"
  },
  {
    "text": "the most widely contributed areas",
    "start": "879279",
    "end": "881440"
  },
  {
    "text": "and this is because more than 60",
    "start": "881440",
    "end": "883040"
  },
  {
    "text": "providers are currently integrating with",
    "start": "883040",
    "end": "885199"
  },
  {
    "text": "csi",
    "start": "885199",
    "end": "886000"
  },
  {
    "text": "from which we have storage os rook ceph",
    "start": "886000",
    "end": "889519"
  },
  {
    "text": "open ebs and many more all of these",
    "start": "889519",
    "end": "892639"
  },
  {
    "text": "providers are actually going to focus on",
    "start": "892639",
    "end": "894160"
  },
  {
    "text": "the simplicity to configure the storage",
    "start": "894160",
    "end": "896160"
  },
  {
    "text": "component",
    "start": "896160",
    "end": "896800"
  },
  {
    "text": "but at the same time we'll focus on the",
    "start": "896800",
    "end": "898959"
  },
  {
    "text": "dynamic provisioning",
    "start": "898959",
    "end": "900160"
  },
  {
    "text": "of the storage capabilities and again",
    "start": "900160",
    "end": "903839"
  },
  {
    "text": "rook here is an incubating cncf project",
    "start": "903839",
    "end": "906959"
  },
  {
    "text": "and it actually provides an interface to",
    "start": "906959",
    "end": "908800"
  },
  {
    "text": "integrate the cev",
    "start": "908800",
    "end": "910240"
  },
  {
    "text": "drivers so it's kind of an inception",
    "start": "910240",
    "end": "912160"
  },
  {
    "text": "here",
    "start": "912160",
    "end": "914399"
  },
  {
    "text": "when you transition towards the cluster",
    "start": "915120",
    "end": "916639"
  },
  {
    "text": "api the perspective is changed",
    "start": "916639",
    "end": "918399"
  },
  {
    "text": "completely",
    "start": "918399",
    "end": "919600"
  },
  {
    "text": "this is because when we talked about the",
    "start": "919600",
    "end": "921279"
  },
  {
    "text": "networking and runtime",
    "start": "921279",
    "end": "922800"
  },
  {
    "text": "service mission storage components all",
    "start": "922800",
    "end": "924639"
  },
  {
    "text": "of these are residing within the",
    "start": "924639",
    "end": "926240"
  },
  {
    "text": "kubernetes world",
    "start": "926240",
    "end": "927839"
  },
  {
    "text": "cluster api takes the idea of interfaces",
    "start": "927839",
    "end": "930959"
  },
  {
    "text": "a further step it completely rethinks",
    "start": "930959",
    "end": "933600"
  },
  {
    "text": "the way we provision our clusters",
    "start": "933600",
    "end": "935440"
  },
  {
    "text": "across different cloud providers i would",
    "start": "935440",
    "end": "938399"
  },
  {
    "text": "like to",
    "start": "938399",
    "end": "938880"
  },
  {
    "text": "dive a bit more into this tool as i find",
    "start": "938880",
    "end": "940880"
  },
  {
    "text": "it quite crucial",
    "start": "940880",
    "end": "942000"
  },
  {
    "text": "in the modern infrastructure nowadays",
    "start": "942000",
    "end": "945600"
  },
  {
    "text": "looking into the current tools there are",
    "start": "946079",
    "end": "947920"
  },
  {
    "text": "plenty of providers providing the",
    "start": "947920",
    "end": "949680"
  },
  {
    "text": "bootstrap capabilities for kubernetes",
    "start": "949680",
    "end": "951839"
  },
  {
    "text": "cluster",
    "start": "951839",
    "end": "952720"
  },
  {
    "text": "from which we have cube adm cube spray",
    "start": "952720",
    "end": "955519"
  },
  {
    "text": "cops",
    "start": "955519",
    "end": "956160"
  },
  {
    "text": "tectonic and many more however if you",
    "start": "956160",
    "end": "959360"
  },
  {
    "text": "look into every single tool and the",
    "start": "959360",
    "end": "960880"
  },
  {
    "text": "supported cloud providers",
    "start": "960880",
    "end": "962480"
  },
  {
    "text": "we're gonna it's gonna be difficult for",
    "start": "962480",
    "end": "964079"
  },
  {
    "text": "us to find a common denominator",
    "start": "964079",
    "end": "966480"
  },
  {
    "text": "what it actually means is that every",
    "start": "966480",
    "end": "968800"
  },
  {
    "text": "single tool is going to have",
    "start": "968800",
    "end": "970079"
  },
  {
    "text": "a very specific cloud providers is going",
    "start": "970079",
    "end": "972079"
  },
  {
    "text": "to support and this exposes quite a few",
    "start": "972079",
    "end": "974399"
  },
  {
    "text": "challenges moving forward",
    "start": "974399",
    "end": "976720"
  },
  {
    "text": "supposedly what happens if you'd like to",
    "start": "976720",
    "end": "979279"
  },
  {
    "text": "rewrite to infrastructure",
    "start": "979279",
    "end": "980720"
  },
  {
    "text": "or to migrate infrastructure to a",
    "start": "980720",
    "end": "982320"
  },
  {
    "text": "different cloud provider",
    "start": "982320",
    "end": "984320"
  },
  {
    "text": "even if you use the same bootstrap",
    "start": "984320",
    "end": "985680"
  },
  {
    "text": "provider the end result is going to be",
    "start": "985680",
    "end": "987680"
  },
  {
    "text": "that you",
    "start": "987680",
    "end": "988320"
  },
  {
    "text": "will have to write your infrastructure's",
    "start": "988320",
    "end": "989920"
  },
  {
    "text": "code from scratch because there are very",
    "start": "989920",
    "end": "991759"
  },
  {
    "text": "little reusable components",
    "start": "991759",
    "end": "995120"
  },
  {
    "text": "another use case is what happens if",
    "start": "995120",
    "end": "997120"
  },
  {
    "text": "you'd like to change your bootstrap",
    "start": "997120",
    "end": "998639"
  },
  {
    "text": "provider altogether",
    "start": "998639",
    "end": "1000320"
  },
  {
    "text": "for example tectonic which i introduced",
    "start": "1000320",
    "end": "1002000"
  },
  {
    "text": "earlier is no longer under active",
    "start": "1002000",
    "end": "1004000"
  },
  {
    "text": "development and it is to be merged",
    "start": "1004000",
    "end": "1005839"
  },
  {
    "text": "openshift container platform moving",
    "start": "1005839",
    "end": "1008480"
  },
  {
    "text": "forward",
    "start": "1008480",
    "end": "1009040"
  },
  {
    "text": "it's actually quite difficult because",
    "start": "1009040",
    "end": "1011360"
  },
  {
    "text": "we'll not be able to do so",
    "start": "1011360",
    "end": "1012720"
  },
  {
    "text": "unless we forget the project and",
    "start": "1012720",
    "end": "1014800"
  },
  {
    "text": "maintain it in-house",
    "start": "1014800",
    "end": "1016399"
  },
  {
    "text": "the end result is going to be rewriting",
    "start": "1016399",
    "end": "1018240"
  },
  {
    "text": "the infrastructure's code from scratch",
    "start": "1018240",
    "end": "1020000"
  },
  {
    "text": "again",
    "start": "1020000",
    "end": "1021920"
  },
  {
    "text": "as well i'd like to introduce you some",
    "start": "1021920",
    "end": "1024240"
  },
  {
    "text": "challenges area to the areas to deploy",
    "start": "1024240",
    "end": "1026319"
  },
  {
    "text": "platforms",
    "start": "1026319",
    "end": "1027038"
  },
  {
    "text": "such as china and russia and this is",
    "start": "1027039",
    "end": "1029120"
  },
  {
    "text": "because in these particular regions we",
    "start": "1029120",
    "end": "1031038"
  },
  {
    "text": "have specific tooling to provision our",
    "start": "1031039",
    "end": "1032959"
  },
  {
    "text": "platform",
    "start": "1032959",
    "end": "1034000"
  },
  {
    "text": "capabilities",
    "start": "1034000",
    "end": "1036798"
  },
  {
    "text": "and most of the time the engineers will",
    "start": "1037360",
    "end": "1039520"
  },
  {
    "text": "end up with a snowflake infrastructure",
    "start": "1039520",
    "end": "1041280"
  },
  {
    "text": "which means that we're going to lose the",
    "start": "1041280",
    "end": "1042720"
  },
  {
    "text": "lift and shift capability altogether",
    "start": "1042720",
    "end": "1045360"
  },
  {
    "text": "however cluster api intercepts all of",
    "start": "1045360",
    "end": "1047360"
  },
  {
    "text": "these challenges and provides the",
    "start": "1047360",
    "end": "1048960"
  },
  {
    "text": "solution",
    "start": "1048960",
    "end": "1050000"
  },
  {
    "text": "by providing an interface for cluster",
    "start": "1050000",
    "end": "1052160"
  },
  {
    "text": "creation across",
    "start": "1052160",
    "end": "1053280"
  },
  {
    "text": "different cloud providers through a set",
    "start": "1053280",
    "end": "1055520"
  },
  {
    "text": "of declarative apis",
    "start": "1055520",
    "end": "1056880"
  },
  {
    "text": "for cluster configuration management and",
    "start": "1056880",
    "end": "1059760"
  },
  {
    "text": "deletion",
    "start": "1059760",
    "end": "1062240"
  },
  {
    "text": "when we're talking about cluster api we",
    "start": "1062240",
    "end": "1064080"
  },
  {
    "text": "talk about sig cluster life cycle",
    "start": "1064080",
    "end": "1066160"
  },
  {
    "text": "which had its first initial release in",
    "start": "1066160",
    "end": "1068000"
  },
  {
    "text": "april 2018",
    "start": "1068000",
    "end": "1070160"
  },
  {
    "text": "since then they had two releases and",
    "start": "1070160",
    "end": "1071840"
  },
  {
    "text": "they're actually preparing for",
    "start": "1071840",
    "end": "1073200"
  },
  {
    "text": "a new release this month which is going",
    "start": "1073200",
    "end": "1075600"
  },
  {
    "text": "to result with a v1",
    "start": "1075600",
    "end": "1076960"
  },
  {
    "text": "alpha free endpoint now i was mentioning",
    "start": "1076960",
    "end": "1080480"
  },
  {
    "text": "the cluster api integrates of different",
    "start": "1080480",
    "end": "1081919"
  },
  {
    "text": "cloud providers and currently we have a",
    "start": "1081919",
    "end": "1083760"
  },
  {
    "text": "dozen of them",
    "start": "1083760",
    "end": "1084799"
  },
  {
    "text": "from which we have gcp aws digital ocean",
    "start": "1084799",
    "end": "1088640"
  },
  {
    "text": "bar metal but more importantly by the",
    "start": "1088640",
    "end": "1091039"
  },
  {
    "text": "cloud",
    "start": "1091039",
    "end": "1091919"
  },
  {
    "text": "and by the cloud is a chinese provider",
    "start": "1091919",
    "end": "1093919"
  },
  {
    "text": "cluster api actually enables us to",
    "start": "1093919",
    "end": "1095919"
  },
  {
    "text": "provisions our clusters in china with",
    "start": "1095919",
    "end": "1097919"
  },
  {
    "text": "the same ease",
    "start": "1097919",
    "end": "1098880"
  },
  {
    "text": "we do so in aws in europe",
    "start": "1098880",
    "end": "1103360"
  },
  {
    "text": "let's see how cluster api works",
    "start": "1104799",
    "end": "1106880"
  },
  {
    "text": "supposedly we'd like to",
    "start": "1106880",
    "end": "1108160"
  },
  {
    "text": "provision a couple of clusters in",
    "start": "1108160",
    "end": "1110320"
  },
  {
    "text": "different regions different cloud",
    "start": "1110320",
    "end": "1111679"
  },
  {
    "text": "providers",
    "start": "1111679",
    "end": "1113360"
  },
  {
    "text": "the way cluster api is going to work it",
    "start": "1113360",
    "end": "1115200"
  },
  {
    "text": "will require a management cluster",
    "start": "1115200",
    "end": "1117440"
  },
  {
    "text": "for testing purposes it is recommended",
    "start": "1117440",
    "end": "1119840"
  },
  {
    "text": "to use kind",
    "start": "1119840",
    "end": "1120799"
  },
  {
    "text": "to provision the cluster and kind is a",
    "start": "1120799",
    "end": "1122960"
  },
  {
    "text": "dockerized version of kubernetes",
    "start": "1122960",
    "end": "1126160"
  },
  {
    "text": "if you'd like to use cluster api in",
    "start": "1126160",
    "end": "1127600"
  },
  {
    "text": "production if one of the age adopters",
    "start": "1127600",
    "end": "1129919"
  },
  {
    "text": "it is recommended to use a fully fledged",
    "start": "1129919",
    "end": "1131760"
  },
  {
    "text": "kubernetes cluster",
    "start": "1131760",
    "end": "1133039"
  },
  {
    "text": "and this is because it comes with a more",
    "start": "1133039",
    "end": "1134640"
  },
  {
    "text": "sophisticated failover mechanism",
    "start": "1134640",
    "end": "1138080"
  },
  {
    "text": "once we have our management cluster up",
    "start": "1138080",
    "end": "1139760"
  },
  {
    "text": "and running we'll require our controller",
    "start": "1139760",
    "end": "1141679"
  },
  {
    "text": "managers",
    "start": "1141679",
    "end": "1142480"
  },
  {
    "text": "on top of it now to have a fully working",
    "start": "1142480",
    "end": "1145520"
  },
  {
    "text": "version of cluster api",
    "start": "1145520",
    "end": "1147039"
  },
  {
    "text": "we'll require three controllers one for",
    "start": "1147039",
    "end": "1149760"
  },
  {
    "text": "the cluster api crds",
    "start": "1149760",
    "end": "1151440"
  },
  {
    "text": "one for the bootstrap provider and the",
    "start": "1151440",
    "end": "1153360"
  },
  {
    "text": "infrastructure provider",
    "start": "1153360",
    "end": "1156000"
  },
  {
    "text": "cluster api introduces four new",
    "start": "1156000",
    "end": "1157600"
  },
  {
    "text": "resources for customer service",
    "start": "1157600",
    "end": "1159120"
  },
  {
    "text": "definitions",
    "start": "1159120",
    "end": "1160160"
  },
  {
    "text": "and will require a controller to make",
    "start": "1160160",
    "end": "1161760"
  },
  {
    "text": "sure that we can create and reconcile",
    "start": "1161760",
    "end": "1163919"
  },
  {
    "text": "any changes we have to these resources",
    "start": "1163919",
    "end": "1167600"
  },
  {
    "text": "the second controller is going to be the",
    "start": "1167600",
    "end": "1169120"
  },
  {
    "text": "bootstrap provider and this is going to",
    "start": "1169120",
    "end": "1171120"
  },
  {
    "text": "be the component which",
    "start": "1171120",
    "end": "1172400"
  },
  {
    "text": "will translate the yaml configuration",
    "start": "1172400",
    "end": "1174640"
  },
  {
    "text": "into cloud init script",
    "start": "1174640",
    "end": "1176000"
  },
  {
    "text": "and it will make sure to attach the",
    "start": "1176000",
    "end": "1177919"
  },
  {
    "text": "instance to the cluster as a node",
    "start": "1177919",
    "end": "1181120"
  },
  {
    "text": "this capability is currently provided by",
    "start": "1181120",
    "end": "1183360"
  },
  {
    "text": "cube adm",
    "start": "1183360",
    "end": "1184240"
  },
  {
    "text": "and talus and thirdly will require our",
    "start": "1184240",
    "end": "1187600"
  },
  {
    "text": "infrastructure provider",
    "start": "1187600",
    "end": "1189200"
  },
  {
    "text": "and this is going to be the component",
    "start": "1189200",
    "end": "1190480"
  },
  {
    "text": "which will actually interact directly",
    "start": "1190480",
    "end": "1192320"
  },
  {
    "text": "with the api",
    "start": "1192320",
    "end": "1193280"
  },
  {
    "text": "and provision the infrastructure such as",
    "start": "1193280",
    "end": "1195600"
  },
  {
    "text": "the instances",
    "start": "1195600",
    "end": "1196880"
  },
  {
    "text": "iron rolls bpcs subnets security groups",
    "start": "1196880",
    "end": "1199919"
  },
  {
    "text": "and many more",
    "start": "1199919",
    "end": "1201440"
  },
  {
    "text": "it deserves to mention here that we can",
    "start": "1201440",
    "end": "1202960"
  },
  {
    "text": "have one or many",
    "start": "1202960",
    "end": "1204480"
  },
  {
    "text": "infrastructure providers if you'd like",
    "start": "1204480",
    "end": "1207120"
  },
  {
    "text": "to create a cluster for example",
    "start": "1207120",
    "end": "1208960"
  },
  {
    "text": "in digitalocean aws you'll require the",
    "start": "1208960",
    "end": "1211679"
  },
  {
    "text": "infrastructure provider for both of them",
    "start": "1211679",
    "end": "1213919"
  },
  {
    "text": "so you'll cry one infrastructure",
    "start": "1213919",
    "end": "1216159"
  },
  {
    "text": "controller",
    "start": "1216159",
    "end": "1217200"
  },
  {
    "text": "for digital ocean and aws so it will",
    "start": "1217200",
    "end": "1220159"
  },
  {
    "text": "actually be able to interact with the",
    "start": "1220159",
    "end": "1221679"
  },
  {
    "text": "apis directly",
    "start": "1221679",
    "end": "1224559"
  },
  {
    "text": "once we have our controller managers up",
    "start": "1225039",
    "end": "1227200"
  },
  {
    "text": "and running so our dependencies are",
    "start": "1227200",
    "end": "1228880"
  },
  {
    "text": "there",
    "start": "1228880",
    "end": "1229280"
  },
  {
    "text": "we'll be able to provision our target",
    "start": "1229280",
    "end": "1230799"
  },
  {
    "text": "clusters and these are going to be the",
    "start": "1230799",
    "end": "1232480"
  },
  {
    "text": "clusters we're going to deliver",
    "start": "1232480",
    "end": "1234000"
  },
  {
    "text": "to our users and developers",
    "start": "1234000",
    "end": "1237840"
  },
  {
    "text": "i would like to introduce the resources",
    "start": "1239039",
    "end": "1240720"
  },
  {
    "text": "introduces by cluster api",
    "start": "1240720",
    "end": "1242400"
  },
  {
    "text": "because i'm going to use one of them to",
    "start": "1242400",
    "end": "1244240"
  },
  {
    "text": "showcase an example later on",
    "start": "1244240",
    "end": "1246720"
  },
  {
    "text": "now as mentioned cluster api introduces",
    "start": "1246720",
    "end": "1249039"
  },
  {
    "text": "four new resources",
    "start": "1249039",
    "end": "1250559"
  },
  {
    "text": "cluster machine machine set and machine",
    "start": "1250559",
    "end": "1253600"
  },
  {
    "text": "deployment",
    "start": "1253600",
    "end": "1255120"
  },
  {
    "text": "the cluster resource is going to allow",
    "start": "1255120",
    "end": "1257120"
  },
  {
    "text": "the higher level configuration",
    "start": "1257120",
    "end": "1258799"
  },
  {
    "text": "of a cluster we'll be able to specify",
    "start": "1258799",
    "end": "1261520"
  },
  {
    "text": "the subnets of our pods and services",
    "start": "1261520",
    "end": "1264000"
  },
  {
    "text": "as well any dnf suffix if you have any",
    "start": "1264000",
    "end": "1267840"
  },
  {
    "text": "the machine configuration is going to be",
    "start": "1267840",
    "end": "1269440"
  },
  {
    "text": "very similar to a node configuration",
    "start": "1269440",
    "end": "1272080"
  },
  {
    "text": "we'll be able to say what version of",
    "start": "1272080",
    "end": "1273600"
  },
  {
    "text": "kubernetes would like to run but at the",
    "start": "1273600",
    "end": "1275520"
  },
  {
    "text": "same time",
    "start": "1275520",
    "end": "1276080"
  },
  {
    "text": "to say where what region would like our",
    "start": "1276080",
    "end": "1278480"
  },
  {
    "text": "instance to run",
    "start": "1278480",
    "end": "1279440"
  },
  {
    "text": "or any desired instance type",
    "start": "1279440",
    "end": "1282720"
  },
  {
    "text": "machine set is going to be very similar",
    "start": "1282720",
    "end": "1284559"
  },
  {
    "text": "to replica set it will make sure that we",
    "start": "1284559",
    "end": "1286640"
  },
  {
    "text": "have an amount of machine resources up",
    "start": "1286640",
    "end": "1288720"
  },
  {
    "text": "and running",
    "start": "1288720",
    "end": "1289360"
  },
  {
    "text": "at all time and machine deployment is",
    "start": "1289360",
    "end": "1292159"
  },
  {
    "text": "very similar to deployment",
    "start": "1292159",
    "end": "1293760"
  },
  {
    "text": "it comes with a very powerful rolling",
    "start": "1293760",
    "end": "1295440"
  },
  {
    "text": "out strategy between configurations",
    "start": "1295440",
    "end": "1298720"
  },
  {
    "text": "now it's worth to mention here that the",
    "start": "1298720",
    "end": "1300480"
  },
  {
    "text": "machine resource is immutable within the",
    "start": "1300480",
    "end": "1302559"
  },
  {
    "text": "cluster api context",
    "start": "1302559",
    "end": "1305039"
  },
  {
    "text": "if you deploy new changes to our",
    "start": "1305039",
    "end": "1307679"
  },
  {
    "text": "machines",
    "start": "1307679",
    "end": "1308720"
  },
  {
    "text": "the node with old configuration is going",
    "start": "1308720",
    "end": "1310880"
  },
  {
    "text": "to be taken down",
    "start": "1310880",
    "end": "1312000"
  },
  {
    "text": "and a new machine with a new",
    "start": "1312000",
    "end": "1313200"
  },
  {
    "text": "configuration is going to be brought up",
    "start": "1313200",
    "end": "1315120"
  },
  {
    "text": "there is no patching there is only",
    "start": "1315120",
    "end": "1316880"
  },
  {
    "text": "immutability",
    "start": "1316880",
    "end": "1319200"
  },
  {
    "text": "now to showcase the simplicity of",
    "start": "1319200",
    "end": "1320640"
  },
  {
    "text": "configuring clusters across different",
    "start": "1320640",
    "end": "1322640"
  },
  {
    "text": "cloud providers",
    "start": "1322640",
    "end": "1323840"
  },
  {
    "text": "i would like to introduce the current",
    "start": "1323840",
    "end": "1325120"
  },
  {
    "text": "way to do so so this is just a snippet",
    "start": "1325120",
    "end": "1327679"
  },
  {
    "text": "of",
    "start": "1327679",
    "end": "1328159"
  },
  {
    "text": "tube spray rolls and cube spray actually",
    "start": "1328159",
    "end": "1330080"
  },
  {
    "text": "provisions the infrastructure's code for",
    "start": "1330080",
    "end": "1332000"
  },
  {
    "text": "a cluster",
    "start": "1332000",
    "end": "1332720"
  },
  {
    "text": "using ansible configuration and in this",
    "start": "1332720",
    "end": "1335280"
  },
  {
    "text": "particular view we have some of the",
    "start": "1335280",
    "end": "1337120"
  },
  {
    "text": "roles",
    "start": "1337120",
    "end": "1337600"
  },
  {
    "text": "a developer will need to be aware while",
    "start": "1337600",
    "end": "1340480"
  },
  {
    "text": "creating",
    "start": "1340480",
    "end": "1341120"
  },
  {
    "text": "troubleshooting and maintaining the",
    "start": "1341120",
    "end": "1342559"
  },
  {
    "text": "cluster",
    "start": "1342559",
    "end": "1345039"
  },
  {
    "text": "cluster api completely changes the",
    "start": "1345039",
    "end": "1346559"
  },
  {
    "text": "perspective and it reduces all of this",
    "start": "1346559",
    "end": "1348480"
  },
  {
    "text": "configuration",
    "start": "1348480",
    "end": "1349440"
  },
  {
    "text": "to a couple of manifests if you'd like",
    "start": "1349440",
    "end": "1351360"
  },
  {
    "text": "to create a cluster in aws",
    "start": "1351360",
    "end": "1353600"
  },
  {
    "text": "this is going to be the only",
    "start": "1353600",
    "end": "1354559"
  },
  {
    "text": "configuration you'll need to do",
    "start": "1354559",
    "end": "1357120"
  },
  {
    "text": "so in this particular case we have a",
    "start": "1357120",
    "end": "1358559"
  },
  {
    "text": "cluster resource now it's worth to",
    "start": "1358559",
    "end": "1360320"
  },
  {
    "text": "mention here that",
    "start": "1360320",
    "end": "1361280"
  },
  {
    "text": "the cluster resource is going to pretty",
    "start": "1361280",
    "end": "1363039"
  },
  {
    "text": "much take care of",
    "start": "1363039",
    "end": "1364559"
  },
  {
    "text": "major networking components for a",
    "start": "1364559",
    "end": "1366000"
  },
  {
    "text": "cluster we'll still need to add our",
    "start": "1366000",
    "end": "1367919"
  },
  {
    "text": "machines to the cluster so this is step",
    "start": "1367919",
    "end": "1369520"
  },
  {
    "text": "one",
    "start": "1369520",
    "end": "1370080"
  },
  {
    "text": "step two is actually at our control",
    "start": "1370080",
    "end": "1372159"
  },
  {
    "text": "plane which means our master nodes",
    "start": "1372159",
    "end": "1374080"
  },
  {
    "text": "and then the worker nodes but those are",
    "start": "1374080",
    "end": "1375840"
  },
  {
    "text": "like separate manifests",
    "start": "1375840",
    "end": "1378240"
  },
  {
    "text": "now what we actually have here is a",
    "start": "1378240",
    "end": "1380000"
  },
  {
    "text": "cluster resource",
    "start": "1380000",
    "end": "1381440"
  },
  {
    "text": "with a kind cluster and we actually",
    "start": "1381440",
    "end": "1384880"
  },
  {
    "text": "write it we're invoking the api version",
    "start": "1384880",
    "end": "1386960"
  },
  {
    "text": "v1 alpha 2.",
    "start": "1386960",
    "end": "1388799"
  },
  {
    "text": "we give it a name in the metadata spec",
    "start": "1388799",
    "end": "1390799"
  },
  {
    "text": "which is going to be test cluster",
    "start": "1390799",
    "end": "1392559"
  },
  {
    "text": "and in the actual specification we",
    "start": "1392559",
    "end": "1394640"
  },
  {
    "text": "choose a slash 16 subnet for our pods",
    "start": "1394640",
    "end": "1398880"
  },
  {
    "text": "now i would like to draw your attention",
    "start": "1398880",
    "end": "1400640"
  },
  {
    "text": "towards the infrastructure reference",
    "start": "1400640",
    "end": "1402720"
  },
  {
    "text": "this is going to be the component which",
    "start": "1402720",
    "end": "1404240"
  },
  {
    "text": "will actually invoke the configuration",
    "start": "1404240",
    "end": "1406640"
  },
  {
    "text": "specific to a cloud provider",
    "start": "1406640",
    "end": "1408320"
  },
  {
    "text": "and this makes sense because every",
    "start": "1408320",
    "end": "1409679"
  },
  {
    "text": "single call provider is going to have",
    "start": "1409679",
    "end": "1411120"
  },
  {
    "text": "their own parameters to be configured",
    "start": "1411120",
    "end": "1413679"
  },
  {
    "text": "so what we actually have here we invoke",
    "start": "1413679",
    "end": "1415919"
  },
  {
    "text": "an aws cluster resource",
    "start": "1415919",
    "end": "1418000"
  },
  {
    "text": "in v1 alpha 2 with the name test cluster",
    "start": "1418000",
    "end": "1421600"
  },
  {
    "text": "in the background we're going to invoke",
    "start": "1421600",
    "end": "1423360"
  },
  {
    "text": "this particular manifest",
    "start": "1423360",
    "end": "1425520"
  },
  {
    "text": "so what we actually have here is say we",
    "start": "1425520",
    "end": "1427279"
  },
  {
    "text": "want our cluster to be created in",
    "start": "1427279",
    "end": "1429200"
  },
  {
    "text": "eu central one that's going to be the",
    "start": "1429200",
    "end": "1431120"
  },
  {
    "text": "region as well we say we want to attach",
    "start": "1431120",
    "end": "1433360"
  },
  {
    "text": "an ssh key with the name default",
    "start": "1433360",
    "end": "1435520"
  },
  {
    "text": "to our instance now if you'd like to",
    "start": "1435520",
    "end": "1438720"
  },
  {
    "text": "create this particular resource in gcp",
    "start": "1438720",
    "end": "1441600"
  },
  {
    "text": "these are going to be the only changes",
    "start": "1441600",
    "end": "1443039"
  },
  {
    "text": "required",
    "start": "1443039",
    "end": "1444640"
  },
  {
    "text": "so what we actually do here we change",
    "start": "1444640",
    "end": "1446799"
  },
  {
    "text": "our kind",
    "start": "1446799",
    "end": "1448240"
  },
  {
    "text": "version in our infrastructure reference",
    "start": "1448240",
    "end": "1450320"
  },
  {
    "text": "is going to be gcp cloud",
    "start": "1450320",
    "end": "1452159"
  },
  {
    "text": "because it's going to be in gcp now and",
    "start": "1452159",
    "end": "1454080"
  },
  {
    "text": "this is going to invoke the manifest",
    "start": "1454080",
    "end": "1455840"
  },
  {
    "text": "with gcp particular configuration",
    "start": "1455840",
    "end": "1458320"
  },
  {
    "text": "so we're going to have the region move",
    "start": "1458320",
    "end": "1460159"
  },
  {
    "text": "to europquest free",
    "start": "1460159",
    "end": "1461679"
  },
  {
    "text": "we have the concept of a project which",
    "start": "1461679",
    "end": "1463600"
  },
  {
    "text": "is very particular to gcp as well",
    "start": "1463600",
    "end": "1465760"
  },
  {
    "text": "and we say we want our cluster resource",
    "start": "1465760",
    "end": "1467600"
  },
  {
    "text": "to be associated with cpi project",
    "start": "1467600",
    "end": "1470559"
  },
  {
    "text": "as well we specify a particular network",
    "start": "1470559",
    "end": "1473440"
  },
  {
    "text": "which is going to have the name",
    "start": "1473440",
    "end": "1474559"
  },
  {
    "text": "default cpi",
    "start": "1474559",
    "end": "1477520"
  },
  {
    "text": "now cluster api has been so efficient",
    "start": "1479840",
    "end": "1482400"
  },
  {
    "text": "and so successful",
    "start": "1482400",
    "end": "1483520"
  },
  {
    "text": "in such a short amount of time because",
    "start": "1483520",
    "end": "1485679"
  },
  {
    "text": "it uses the building blocks principle",
    "start": "1485679",
    "end": "1488400"
  },
  {
    "text": "it does not concern itself with bringing",
    "start": "1488400",
    "end": "1490080"
  },
  {
    "text": "new api endpoints or new techniques to",
    "start": "1490080",
    "end": "1492080"
  },
  {
    "text": "consumer's capabilities",
    "start": "1492080",
    "end": "1493520"
  },
  {
    "text": "it's actually building on top of",
    "start": "1493520",
    "end": "1494960"
  },
  {
    "text": "available primitives from kubernetes",
    "start": "1494960",
    "end": "1498240"
  },
  {
    "text": "another important feature for cluster",
    "start": "1498240",
    "end": "1499840"
  },
  {
    "text": "api is the fact that it's cloud agnostic",
    "start": "1499840",
    "end": "1502559"
  },
  {
    "text": "now it actually provides this one common",
    "start": "1502559",
    "end": "1504480"
  },
  {
    "text": "interface that we can create our",
    "start": "1504480",
    "end": "1506080"
  },
  {
    "text": "clusters in different cloud providers",
    "start": "1506080",
    "end": "1508240"
  },
  {
    "text": "but more importantly we can do so with",
    "start": "1508240",
    "end": "1510080"
  },
  {
    "text": "minimal changes to our manifests",
    "start": "1510080",
    "end": "1512720"
  },
  {
    "text": "it is a very important way to move",
    "start": "1512720",
    "end": "1515120"
  },
  {
    "text": "forward because it completely rethinks",
    "start": "1515120",
    "end": "1517200"
  },
  {
    "text": "the way we see our clusters we actually",
    "start": "1517200",
    "end": "1519279"
  },
  {
    "text": "can have the concept of a cluster",
    "start": "1519279",
    "end": "1521200"
  },
  {
    "text": "as a resource and another thing about",
    "start": "1521200",
    "end": "1524159"
  },
  {
    "text": "cluster api",
    "start": "1524159",
    "end": "1525120"
  },
  {
    "text": "is still experimental now if you have a",
    "start": "1525120",
    "end": "1527600"
  },
  {
    "text": "use case for cluster api",
    "start": "1527600",
    "end": "1529120"
  },
  {
    "text": "please give it a try and feed it back to",
    "start": "1529120",
    "end": "1530720"
  },
  {
    "text": "the community now is the perfect time to",
    "start": "1530720",
    "end": "1532880"
  },
  {
    "text": "customize cluster api",
    "start": "1532880",
    "end": "1534559"
  },
  {
    "text": "to your use case",
    "start": "1534559",
    "end": "1537440"
  },
  {
    "text": "within its six years of existence",
    "start": "1539120",
    "end": "1540960"
  },
  {
    "text": "kubernetes transmogrified its identity",
    "start": "1540960",
    "end": "1543200"
  },
  {
    "text": "multiple times",
    "start": "1543200",
    "end": "1544880"
  },
  {
    "text": "in a recursive manner we see more and",
    "start": "1544880",
    "end": "1546799"
  },
  {
    "text": "more of the out of tree approach being",
    "start": "1546799",
    "end": "1548559"
  },
  {
    "text": "used",
    "start": "1548559",
    "end": "1549120"
  },
  {
    "text": "which means we extrapolate core binaries",
    "start": "1549120",
    "end": "1551279"
  },
  {
    "text": "from the we actually extrapolate",
    "start": "1551279",
    "end": "1553120"
  },
  {
    "text": "components from the core binaries of",
    "start": "1553120",
    "end": "1554559"
  },
  {
    "text": "kubernetes",
    "start": "1554559",
    "end": "1555360"
  },
  {
    "text": "and make them develop independently",
    "start": "1555360",
    "end": "1558400"
  },
  {
    "text": "and this has been so efficient because",
    "start": "1558400",
    "end": "1560640"
  },
  {
    "text": "kubernetes",
    "start": "1560640",
    "end": "1561600"
  },
  {
    "text": "is not opinative of course it's going to",
    "start": "1561600",
    "end": "1564159"
  },
  {
    "text": "be assertive when it comes to the",
    "start": "1564159",
    "end": "1565440"
  },
  {
    "text": "networking model",
    "start": "1565440",
    "end": "1566400"
  },
  {
    "text": "and the primitives it distributes but",
    "start": "1566400",
    "end": "1568240"
  },
  {
    "text": "it's not going to be opinionated on the",
    "start": "1568240",
    "end": "1569600"
  },
  {
    "text": "underlying technology around kubernetes",
    "start": "1569600",
    "end": "1571440"
  },
  {
    "text": "on top of",
    "start": "1571440",
    "end": "1572960"
  },
  {
    "text": "as well the users have the full",
    "start": "1572960",
    "end": "1574559"
  },
  {
    "text": "flexibility to use the available",
    "start": "1574559",
    "end": "1576640"
  },
  {
    "text": "primitives",
    "start": "1576640",
    "end": "1577520"
  },
  {
    "text": "they can actually construct their own",
    "start": "1577520",
    "end": "1579279"
  },
  {
    "text": "primitives",
    "start": "1579279",
    "end": "1580720"
  },
  {
    "text": "will actually construct their own",
    "start": "1580720",
    "end": "1581760"
  },
  {
    "text": "resources by using the custom resource",
    "start": "1581760",
    "end": "1584320"
  },
  {
    "text": "definition and this had a huge impact if",
    "start": "1584320",
    "end": "1587760"
  },
  {
    "text": "you look into the perspective this had a",
    "start": "1587760",
    "end": "1589360"
  },
  {
    "text": "huge impact on the vendors",
    "start": "1589360",
    "end": "1590960"
  },
  {
    "text": "end users and the community",
    "start": "1590960",
    "end": "1594399"
  },
  {
    "text": "when looking to the vendors the",
    "start": "1594559",
    "end": "1596080"
  },
  {
    "text": "emergence of interfaces",
    "start": "1596080",
    "end": "1597679"
  },
  {
    "text": "means innovation as a vendor you don't",
    "start": "1597679",
    "end": "1601200"
  },
  {
    "text": "have to concern yourself of how you can",
    "start": "1601200",
    "end": "1603039"
  },
  {
    "text": "integrate your component with kubernetes",
    "start": "1603039",
    "end": "1605360"
  },
  {
    "text": "the interface is going to be already",
    "start": "1605360",
    "end": "1606880"
  },
  {
    "text": "there as a vendor you can focus on the",
    "start": "1606880",
    "end": "1609440"
  },
  {
    "text": "future development",
    "start": "1609440",
    "end": "1610559"
  },
  {
    "text": "and how can you provision value to the",
    "start": "1610559",
    "end": "1612240"
  },
  {
    "text": "customer with minimal latency",
    "start": "1612240",
    "end": "1614720"
  },
  {
    "text": "it's all about innovation and healthy",
    "start": "1614720",
    "end": "1616720"
  },
  {
    "text": "competition",
    "start": "1616720",
    "end": "1619440"
  },
  {
    "text": "when you're looking into the end user",
    "start": "1619679",
    "end": "1621200"
  },
  {
    "text": "community the emergence of interfaces",
    "start": "1621200",
    "end": "1623600"
  },
  {
    "text": "means extensibility it was never as easy",
    "start": "1623600",
    "end": "1626799"
  },
  {
    "text": "as it is today to benchmark different",
    "start": "1626799",
    "end": "1628799"
  },
  {
    "text": "tools with the same capability",
    "start": "1628799",
    "end": "1631440"
  },
  {
    "text": "as an end user you actually have the",
    "start": "1631440",
    "end": "1633440"
  },
  {
    "text": "privilege to choose the right tool for",
    "start": "1633440",
    "end": "1635360"
  },
  {
    "text": "your infrastructure with minimal",
    "start": "1635360",
    "end": "1636799"
  },
  {
    "text": "compromises",
    "start": "1636799",
    "end": "1638240"
  },
  {
    "text": "it's all about leverage leveraging",
    "start": "1638240",
    "end": "1640159"
  },
  {
    "text": "further your platform",
    "start": "1640159",
    "end": "1641440"
  },
  {
    "text": "and your product and when we look into",
    "start": "1641440",
    "end": "1644399"
  },
  {
    "text": "the",
    "start": "1644399",
    "end": "1644799"
  },
  {
    "text": "community the emergence of interfaces",
    "start": "1644799",
    "end": "1647120"
  },
  {
    "text": "it's all about interoperability",
    "start": "1647120",
    "end": "1650000"
  },
  {
    "text": "now kubernetes embraces different",
    "start": "1650000",
    "end": "1651760"
  },
  {
    "text": "solutions or multiple solutions for the",
    "start": "1651760",
    "end": "1653520"
  },
  {
    "text": "same problem",
    "start": "1653520",
    "end": "1654399"
  },
  {
    "text": "but it actually focuses as well how can",
    "start": "1654399",
    "end": "1656480"
  },
  {
    "text": "you inter interoperate between these",
    "start": "1656480",
    "end": "1658240"
  },
  {
    "text": "solutions",
    "start": "1658240",
    "end": "1659360"
  },
  {
    "text": "it's all about creating this canvas of",
    "start": "1659360",
    "end": "1661279"
  },
  {
    "text": "tooling which actually is going to",
    "start": "1661279",
    "end": "1662880"
  },
  {
    "text": "leverage a platform",
    "start": "1662880",
    "end": "1665840"
  },
  {
    "text": "and this has been extremely beneficial",
    "start": "1666880",
    "end": "1668320"
  },
  {
    "text": "for kubernetes because what it created",
    "start": "1668320",
    "end": "1671120"
  },
  {
    "text": "is a landscape which we nowadays know as",
    "start": "1671120",
    "end": "1673279"
  },
  {
    "text": "the cloud native landscape",
    "start": "1673279",
    "end": "1675039"
  },
  {
    "text": "however if this would not be possible if",
    "start": "1675039",
    "end": "1677279"
  },
  {
    "text": "the thinking of interfaces and",
    "start": "1677279",
    "end": "1678960"
  },
  {
    "text": "standardization",
    "start": "1678960",
    "end": "1680240"
  },
  {
    "text": "was not built in at the early stages of",
    "start": "1680240",
    "end": "1682399"
  },
  {
    "text": "kubernetes",
    "start": "1682399",
    "end": "1683520"
  },
  {
    "text": "and this was done through the container",
    "start": "1683520",
    "end": "1685120"
  },
  {
    "text": "network and container runtime interfaces",
    "start": "1685120",
    "end": "1688000"
  },
  {
    "text": "as well we actually needed that",
    "start": "1688000",
    "end": "1689520"
  },
  {
    "text": "extensibility and wide adoption",
    "start": "1689520",
    "end": "1691520"
  },
  {
    "text": "for this tool and this is further",
    "start": "1691520",
    "end": "1693919"
  },
  {
    "text": "confirmed by the introduction of service",
    "start": "1693919",
    "end": "1696159"
  },
  {
    "text": "mesh",
    "start": "1696159",
    "end": "1696640"
  },
  {
    "text": "and storage interfaces but more",
    "start": "1696640",
    "end": "1699360"
  },
  {
    "text": "importantly",
    "start": "1699360",
    "end": "1700080"
  },
  {
    "text": "we can see that it had a huge impact on",
    "start": "1700080",
    "end": "1702240"
  },
  {
    "text": "the vendors",
    "start": "1702240",
    "end": "1703679"
  },
  {
    "text": "innovation on the end users for",
    "start": "1703679",
    "end": "1706720"
  },
  {
    "text": "extensibility",
    "start": "1706720",
    "end": "1707919"
  },
  {
    "text": "and on the community for",
    "start": "1707919",
    "end": "1709600"
  },
  {
    "text": "interoperability",
    "start": "1709600",
    "end": "1712559"
  },
  {
    "text": "however the concept of interfaces",
    "start": "1713039",
    "end": "1715360"
  },
  {
    "text": "transcends the world of kubernetes",
    "start": "1715360",
    "end": "1717600"
  },
  {
    "text": "it can be applied to different domains",
    "start": "1717600",
    "end": "1719360"
  },
  {
    "text": "and areas and this is because",
    "start": "1719360",
    "end": "1722000"
  },
  {
    "text": "interfaces can be the central engine for",
    "start": "1722000",
    "end": "1724640"
  },
  {
    "text": "development and innovation",
    "start": "1724640",
    "end": "1726399"
  },
  {
    "text": "that anchors extensibility but at the",
    "start": "1726399",
    "end": "1728960"
  },
  {
    "text": "same time embraces",
    "start": "1728960",
    "end": "1730320"
  },
  {
    "text": "multiple solutions for the same problem",
    "start": "1730320",
    "end": "1734320"
  },
  {
    "text": "if you'd like to find out a bit more",
    "start": "1735679",
    "end": "1737200"
  },
  {
    "text": "details about the topics i discussed",
    "start": "1737200",
    "end": "1739120"
  },
  {
    "text": "today",
    "start": "1739120",
    "end": "1739760"
  },
  {
    "text": "please visit my medium account i'm going",
    "start": "1739760",
    "end": "1741360"
  },
  {
    "text": "to publish an article with more",
    "start": "1741360",
    "end": "1743120"
  },
  {
    "text": "details or links to research forever",
    "start": "1743120",
    "end": "1746399"
  },
  {
    "text": "enjoy the rest of the conference thank",
    "start": "1746399",
    "end": "1750080"
  },
  {
    "text": "you",
    "start": "1750360",
    "end": "1753360"
  }
]