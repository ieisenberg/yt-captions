[
  {
    "start": "0",
    "end": "34000"
  },
  {
    "text": "foreign [Music]",
    "start": "1380",
    "end": "14249"
  },
  {
    "text": "hi there welcome to infrastructure's code past present and future my name is Joe Duffy founder and CEO of palumi I'm",
    "start": "14880",
    "end": "21539"
  },
  {
    "text": "excited to be here today to talk to you about all things infrastructure's code we'll start a little bit of History where do we come from we'll talk about",
    "start": "21539",
    "end": "27599"
  },
  {
    "text": "current state of infrastructure's code and what tools exist out there and where we might be headed from here so get",
    "start": "27599",
    "end": "33960"
  },
  {
    "text": "started where did we come from you know I think you look at the evolution of uh server-side management and and",
    "start": "33960",
    "end": "39719"
  },
  {
    "start": "34000",
    "end": "63000"
  },
  {
    "text": "provisioning servers and in the beginning of course you've got uh Hardware you've got to rack and stack that move it into a data center",
    "start": "39719",
    "end": "45960"
  },
  {
    "text": "eventually virtualization made a lot of this easier but once you've got a server it's a stateful machine so if there's",
    "start": "45960",
    "end": "52020"
  },
  {
    "text": "there are dependencies or pieces of software that need to run on that of course how do you install those well the first step is you manually do so so you",
    "start": "52020",
    "end": "59160"
  },
  {
    "text": "SSH into a machine you manually patch it as that software needs to be updated over time these days you know a lot of",
    "start": "59160",
    "end": "65220"
  },
  {
    "start": "63000",
    "end": "130000"
  },
  {
    "text": "points and clicking we've got consoles and all the cloud providers or even on-prem with vsphere management consoles",
    "start": "65220",
    "end": "72020"
  },
  {
    "text": "and all these things have problems um where we came from was not repeatable",
    "start": "72020",
    "end": "77880"
  },
  {
    "text": "uh you know you would go configure some infrastructure maybe install some packages what if you needed a second",
    "start": "77880",
    "end": "82979"
  },
  {
    "text": "server that looked the same what if something failed um you know so repeatability was was a",
    "start": "82979",
    "end": "88799"
  },
  {
    "text": "challenge with this this mode of doing it manually either you know through command lines or in uis it also doesn't",
    "start": "88799",
    "end": "94920"
  },
  {
    "text": "scale and I mentioned going from one to two servers but what if you're going from 1 to 10 or 100 or thousands what if",
    "start": "94920",
    "end": "101520"
  },
  {
    "text": "you're going from one environment to multiple environments uh and it's easy to make a mistake right if you're",
    "start": "101520",
    "end": "107040"
  },
  {
    "text": "manually running commands and you fat finger a command and something fails um now you're in a mode where you have",
    "start": "107040",
    "end": "112920"
  },
  {
    "text": "to manually recover from that failure and these sorts of failures uh we hear about them all the time right they lead",
    "start": "112920",
    "end": "117960"
  },
  {
    "text": "to uh reliability problems outages security problems and so there's",
    "start": "117960",
    "end": "123299"
  },
  {
    "text": "definitely you know a better way to go about things and uh to foreshadow a little bit you know that's that's what",
    "start": "123299",
    "end": "128340"
  },
  {
    "text": "infrastructure's code is all about and it sounds familiar right if you look back in the 1970s you know back then",
    "start": "128340",
    "end": "135540"
  },
  {
    "start": "130000",
    "end": "189000"
  },
  {
    "text": "we're building software packages and how are we building software packages again running manual command lines we're",
    "start": "135540",
    "end": "140879"
  },
  {
    "text": "compiling software packaging it up linking software and so from there we created a tool called many people are",
    "start": "140879",
    "end": "147540"
  },
  {
    "text": "probably familiar with called make um make is an interesting source of inspiration for where we're going to go",
    "start": "147540",
    "end": "152940"
  },
  {
    "text": "in terms of infrastructure's code and that make is all about taking some set of inputs performing some set of",
    "start": "152940",
    "end": "159540"
  },
  {
    "text": "commands and and then having some outputs as a result you know source code in compiled program out the way make",
    "start": "159540",
    "end": "166920"
  },
  {
    "text": "works is actually super interesting because you know you're using a domain specific language we'll see that infrastructure's code many tools have",
    "start": "166920",
    "end": "173519"
  },
  {
    "text": "domain specific languages and in either case make has to understand dependencies between all of these so-called targets",
    "start": "173519",
    "end": "179400"
  },
  {
    "text": "and then orchestrate um the execution of the build process so that those inputs can properly translate",
    "start": "179400",
    "end": "185360"
  },
  {
    "text": "repeatedly you know in an automated fashion to those outputs so you'll see all these Concepts uh show",
    "start": "185360",
    "end": "193080"
  },
  {
    "start": "189000",
    "end": "221000"
  },
  {
    "text": "up in the way that we have approached how to manage infrastructure and how to automate infrastructure and the first tool that I'll point to in this um in",
    "start": "193080",
    "end": "200280"
  },
  {
    "text": "this evolution is CF engine CF engine was really the first approach of taking",
    "start": "200280",
    "end": "205920"
  },
  {
    "text": "a sort of similar approach to what we saw with make where dependencies can be described the process of automating",
    "start": "205920",
    "end": "212099"
  },
  {
    "text": "infrastructure is is encoded in machine readable textual declarations",
    "start": "212099",
    "end": "218400"
  },
  {
    "text": "which hence the term infrastructure is code in a nutshell infrastructure's code",
    "start": "218400",
    "end": "224459"
  },
  {
    "text": "allows you to automate manual processes um we're not going and sshing into servers and running manual commands to",
    "start": "224459",
    "end": "230640"
  },
  {
    "text": "update packages uh we're really encoding those things as repeatable steps so that",
    "start": "230640",
    "end": "236220"
  },
  {
    "text": "as the needs of our software evolve we can repeat reuse and scale that also as",
    "start": "236220",
    "end": "241500"
  },
  {
    "text": "the scalability changes the requirements we can easily scale that infrastructure without having to manually worry about",
    "start": "241500",
    "end": "247400"
  },
  {
    "text": "issuing commands that can fail and recovering from those if we fast forward to these days with",
    "start": "247400",
    "end": "253799"
  },
  {
    "text": "the modern Cloud we'll see that the the complexity of infrastructure these days is is is totally different League than",
    "start": "253799",
    "end": "259799"
  },
  {
    "text": "you know 20 years ago and so increasingly being able to treat infrastructure like software has",
    "start": "259799",
    "end": "265020"
  },
  {
    "text": "unlocked a lot of um practices and processes that can help us tame the complexity of that of that",
    "start": "265020",
    "end": "272100"
  },
  {
    "text": "infrastructure and really just eliminate a whole bunch of manual effort increase the ability to collaborate and really do",
    "start": "272100",
    "end": "278040"
  },
  {
    "text": "more with less so if you look at this this is uh my my attempted uh infrastructure is code",
    "start": "278040",
    "end": "283440"
  },
  {
    "start": "279000",
    "end": "308000"
  },
  {
    "text": "family tree we'll see you know make came out way back in the 70s CF engine actually was early early 90s although if",
    "start": "283440",
    "end": "289680"
  },
  {
    "text": "you looked at CF engine one two and three and those were uh spaced apart with some pretty significant",
    "start": "289680",
    "end": "295199"
  },
  {
    "text": "um changes uh each for each major revision then we'll walk through actually every other tool um on this on",
    "start": "295199",
    "end": "302100"
  },
  {
    "text": "this roadmap but you'll see you know a few branches in here that are interesting to to trace through which",
    "start": "302100",
    "end": "307320"
  },
  {
    "text": "I'll do in this talk the first major concept that's important to understand and we'll first talk about",
    "start": "307320",
    "end": "313259"
  },
  {
    "start": "308000",
    "end": "409000"
  },
  {
    "text": "some general concepts and then we'll get into some specific tools the first major concept is the notion of imperative",
    "start": "313259",
    "end": "319800"
  },
  {
    "text": "versus declarative and what do I mean by that I'll give you an example just to make it concrete",
    "start": "319800",
    "end": "325560"
  },
  {
    "text": "um what if our objective is to create a python web server listening on Port 80 you know available over the Internet",
    "start": "325560",
    "end": "331919"
  },
  {
    "text": "well the imperative way is to describe how to go about creating a python web server uh and here are some steps we",
    "start": "331919",
    "end": "338940"
  },
  {
    "text": "might create a new AWS ec2 instance assuming we're running this in the cloud we might then SSH into that instance",
    "start": "338940",
    "end": "344460"
  },
  {
    "text": "install python copy our web server files from maybe a git repo or somewhere else",
    "start": "344460",
    "end": "349500"
  },
  {
    "text": "that we've got them stashed start a python web server process and then add a port 80 firewall rule to allow traffic",
    "start": "349500",
    "end": "356280"
  },
  {
    "text": "that's fine but that's really speaks to those manual steps that we talked about earlier what if something fails in",
    "start": "356280",
    "end": "361800"
  },
  {
    "text": "between steps uh two and three for example or or so on we have to manually recover",
    "start": "361800",
    "end": "367680"
  },
  {
    "text": "the declarative approach instead is to literally say to some Oracle create a python web server listening on",
    "start": "367680",
    "end": "373860"
  },
  {
    "text": "part 80 and that Oracle the infrastructure's code engine the infrastructures code tool that we're",
    "start": "373860",
    "end": "379320"
  },
  {
    "text": "using will then decide how to perform those steps we've removed ourselves from",
    "start": "379320",
    "end": "384780"
  },
  {
    "text": "the messy business of figuring out every precise step necessary to actually provision that and allow that Oracle to",
    "start": "384780",
    "end": "391139"
  },
  {
    "text": "figure out things like what if it fails what you know how to actually distill that into the concrete steps",
    "start": "391139",
    "end": "397080"
  },
  {
    "text": "and so nearly all the infrastructure's code tools we'll look at have some notion of declarative",
    "start": "397080",
    "end": "403560"
  },
  {
    "text": "um uh approach to them it widely varies based on the tool which we'll see shortly",
    "start": "403560",
    "end": "409740"
  },
  {
    "start": "409000",
    "end": "636000"
  },
  {
    "text": "let me go a little more concrete I'm going to actually show you a demo of that specific you know python web server listening on Port 80 in infrastructures",
    "start": "409740",
    "end": "417060"
  },
  {
    "text": "code tool now this is you know general concepts uh I'll be using palumi the company I work for just as an example",
    "start": "417060",
    "end": "424139"
  },
  {
    "text": "but the the concepts transcend any one tool so here we've got uh just an editor one",
    "start": "424139",
    "end": "431160"
  },
  {
    "text": "of the things about infrastructure's code is often many tools are using general purpose languages and so we can use tools like vs code the editor we've",
    "start": "431160",
    "end": "438240"
  },
  {
    "text": "got here we can use package managers and all the familiarities that we have with languages again it depends on the tools",
    "start": "438240",
    "end": "444060"
  },
  {
    "text": "some use yaml some use domain-specific languages in this case reason polluting I can use any language I've chosen to",
    "start": "444060",
    "end": "449759"
  },
  {
    "text": "use python and really if you look at what what's happening here we're just declaring some",
    "start": "449759",
    "end": "454880"
  },
  {
    "text": "settings some objects again this is declaring the desired state of my infrastructure and that concept of",
    "start": "454880",
    "end": "460680"
  },
  {
    "text": "desired state is important we'll talk about that a lot in in the coming minutes but if we Trace through we're",
    "start": "460680",
    "end": "466919"
  },
  {
    "text": "saying hey you know we need to allow internet traffic on Port 80 the way we do that on AWS is to use a security",
    "start": "466919",
    "end": "473400"
  },
  {
    "text": "group with Ingress arbs that allow incoming traffic over the internet on",
    "start": "473400",
    "end": "478620"
  },
  {
    "text": "Port 80. we need to use a Linux Amazon machine image Ami for ec2 if anybody is using uh",
    "start": "478620",
    "end": "487440"
  },
  {
    "text": "AWS you're probably familiar with that concept is effectively just the image that we want the server to run and then we go ahead and we configure",
    "start": "487440",
    "end": "493979"
  },
  {
    "text": "our server and we declare that it's going to use that Ami that we just looked up and put it in a security group",
    "start": "493979",
    "end": "499199"
  },
  {
    "text": "that we created and run a python web server and then at the end we're going to spit out the uh automatically",
    "start": "499199",
    "end": "504840"
  },
  {
    "text": "assigned addresses notice that this is declaring the state it's not necessarily talking about exactly how to go about",
    "start": "504840",
    "end": "510660"
  },
  {
    "text": "creating that web server that's left to the declarative engine polymy I just say",
    "start": "510660",
    "end": "515820"
  },
  {
    "text": "pulling me up and what what most infrastructures code tools is they'll show you a plan of",
    "start": "515820",
    "end": "521640"
  },
  {
    "text": "what's going to happen before actually performing that so here we see that it says hey we're going to create a security group in an instance if we want",
    "start": "521640",
    "end": "528480"
  },
  {
    "text": "to look at some of the details we can it will show us you know things like the instance type and all the other settings in this case we're just going to say yes",
    "start": "528480",
    "end": "534980"
  },
  {
    "text": "and that's going to go ahead and start chugging away now notice that that first",
    "start": "534980",
    "end": "540000"
  },
  {
    "text": "step showed me what's going to happen first and this is a really key concept because although you could go script",
    "start": "540000",
    "end": "545700"
  },
  {
    "text": "against the cloud providers you could go use the sdks that the cloud providers",
    "start": "545700",
    "end": "550740"
  },
  {
    "text": "offer that still is a problem of being able to know what it's going to do before you run the script and what",
    "start": "550740",
    "end": "555959"
  },
  {
    "text": "happens if it fails the benefit of an infrastructure's code tool is you remove yourself from all of that and infrastructure's code tool can handle",
    "start": "555959",
    "end": "562560"
  },
  {
    "text": "things like showing you what it's going to do beforehand so you can always make sure that the there are no unintended",
    "start": "562560",
    "end": "568140"
  },
  {
    "text": "consequences of a deployment activity and you know if something were to fail here I'd be able to trivially pick up",
    "start": "568140",
    "end": "573959"
  },
  {
    "text": "where I left off and so this is going to go create the server takes a little bit to create the",
    "start": "573959",
    "end": "579480"
  },
  {
    "text": "server in in Amazon but you'll see here it's done and it gives us the auto generated IDs the wonderful thing now is",
    "start": "579480",
    "end": "586260"
  },
  {
    "text": "if I wanted to take this and deploy it a second time maybe this is my staging environment and I want to go deploy it",
    "start": "586260",
    "end": "591360"
  },
  {
    "text": "to production that's trivial or maybe if it's production East Coast versus West Coast or production EU maybe they all",
    "start": "591360",
    "end": "597660"
  },
  {
    "text": "have different settings I can still start from a common code base and repeatably scale that and again if I",
    "start": "597660",
    "end": "603060"
  },
  {
    "text": "wanted a second server a third server this demo was creating something from scratch but infrastructure's code tools",
    "start": "603060",
    "end": "608820"
  },
  {
    "text": "can take an existing environment and evolve it over time by basically diffing the current state with the the future",
    "start": "608820",
    "end": "615180"
  },
  {
    "text": "desired state and if I were to go ahead and curl this HTTP address",
    "start": "615180",
    "end": "621240"
  },
  {
    "text": "I will see Hello World the server is up and running I'm going to go ahead and destroy this",
    "start": "621240",
    "end": "627060"
  },
  {
    "text": "because we don't want to leave our server sitting around costing us money while we finish the rest of the top and",
    "start": "627060",
    "end": "632760"
  },
  {
    "text": "I'll let that go and we'll head back to the slides and keep going so you saw there the basic concepts of",
    "start": "632760",
    "end": "639420"
  },
  {
    "start": "636000",
    "end": "737000"
  },
  {
    "text": "infrastructure is code you know we provisioned a web server by declaring it and I think there are two key Concepts",
    "start": "639420",
    "end": "646019"
  },
  {
    "text": "um you know there's a declarative and imperative but another key concept here is the language versus the evaluation",
    "start": "646019",
    "end": "651959"
  },
  {
    "text": "engine so you'll see that I I claimed that the previous example was a declarative example and yet I was expressing the",
    "start": "651959",
    "end": "659459"
  },
  {
    "text": "desired State using an imperative language python many infrastructures code tools offer",
    "start": "659459",
    "end": "665579"
  },
  {
    "text": "different choices you can do yaml or Json you can use a domain-specific language like hashicorps configuration",
    "start": "665579",
    "end": "671579"
  },
  {
    "text": "language or puppet script you can use a general purpose language like Ruby with Chef or JavaScript python go Etc with",
    "start": "671579",
    "end": "679920"
  },
  {
    "text": "palumi the key concept here is that you're expressing the desired state in one language and then the evaluation",
    "start": "679920",
    "end": "686399"
  },
  {
    "text": "engine is actually carrying out the deployment activities in the deployment engine the evaluation engine can be",
    "start": "686399",
    "end": "693180"
  },
  {
    "text": "declarative such that it has a goal state if something fails it can resume where it left off then yeah that",
    "start": "693180",
    "end": "698760"
  },
  {
    "text": "expression language became beneficial to be be able to have the imperative constructs you know in Python I might",
    "start": "698760",
    "end": "704579"
  },
  {
    "text": "take that example I just showed you and put it in a class so that I can have a web server class that encapsulates some",
    "start": "704579",
    "end": "711180"
  },
  {
    "text": "of those Concepts I could have a for Loop if I wanted to create three servers I could say for I and range zero three",
    "start": "711180",
    "end": "717300"
  },
  {
    "text": "you know provision and yet that none of that takes away from the fact that ultimately at the end of the day the",
    "start": "717300",
    "end": "722519"
  },
  {
    "text": "evaluation and declarative and so separating these Concepts in your mind as you think about infrastructure's code",
    "start": "722519",
    "end": "727920"
  },
  {
    "text": "can be quite helpful in understanding the the options available and which ones",
    "start": "727920",
    "end": "733500"
  },
  {
    "text": "are are the ones that you want to choose for your project",
    "start": "733500",
    "end": "738600"
  },
  {
    "start": "737000",
    "end": "835000"
  },
  {
    "text": "another key concept I hinted at this with with uh the make example but ultimately if you looked at that example",
    "start": "738600",
    "end": "744480"
  },
  {
    "text": "we just had you know we had a web server ec2 instance the ec2 instance actually consumed you remember it referred to the",
    "start": "744480",
    "end": "751980"
  },
  {
    "text": "security group that we had declared and that forms a dag a directed Asic lip graph and and this is a concept that is",
    "start": "751980",
    "end": "759120"
  },
  {
    "text": "pervasive in many of the infrastructure as code tools you know beginning all the way to CF engine I believe it was two",
    "start": "759120",
    "end": "764639"
  },
  {
    "text": "could have been three but but it's a key concept because what allows the engine to do is",
    "start": "764639",
    "end": "770100"
  },
  {
    "text": "parallelize operations well and also perform operations in the correct order if you think about back to what we just",
    "start": "770100",
    "end": "777420"
  },
  {
    "text": "showed um you know we created a security group and then a web server the web server",
    "start": "777420",
    "end": "782459"
  },
  {
    "text": "depended on the security group so clearly we have to wait until that security group is is completed the",
    "start": "782459",
    "end": "788040"
  },
  {
    "text": "provisioning is completed before we can go create the server and similarly I just destroyed uh the the stack and that",
    "start": "788040",
    "end": "795779"
  },
  {
    "text": "means it has to do it in the reverse order if it tried to destroy the security group first it would find that the the web server dependent on that and",
    "start": "795779",
    "end": "802620"
  },
  {
    "text": "so this concept that an infrastructures code engine not only needs to create this declarative",
    "start": "802620",
    "end": "808519"
  },
  {
    "text": "plan it also needs to understand the references between all of the infrastructure components within your",
    "start": "808519",
    "end": "814560"
  },
  {
    "text": "your stack and this is similar to make as well make needs to build things in the right order you know if something",
    "start": "814560",
    "end": "819720"
  },
  {
    "text": "consumes the output of a previous build step it has to do those in the correct order and so dags are are very important",
    "start": "819720",
    "end": "825660"
  },
  {
    "text": "it's it's sort of an internal implementation detail if you're just using the tool but it definitely helps to understand you know this this aspect",
    "start": "825660",
    "end": "832740"
  },
  {
    "text": "of infrastructures code as well I've mentioned this this notion of",
    "start": "832740",
    "end": "838339"
  },
  {
    "start": "835000",
    "end": "928000"
  },
  {
    "text": "desired State um many times this is also a common concept amongst many infrastructures",
    "start": "838339",
    "end": "844380"
  },
  {
    "text": "code tools where effectively the infrastructure's code",
    "start": "844380",
    "end": "849779"
  },
  {
    "text": "engine has to eventually Converge on your desired state so you think of the security group in the web",
    "start": "849779",
    "end": "856260"
  },
  {
    "text": "server we've declared that to be our desired State and now the infrastructure's code tools job is to",
    "start": "856260",
    "end": "861899"
  },
  {
    "text": "figure out where are we are we starting from an empty environment are we starting from an environment that's partially constructed is it fully",
    "start": "861899",
    "end": "868320"
  },
  {
    "text": "constructed and it's just a minor change to the environment like we're going from uh you know a T2 micro to a T3 large or",
    "start": "868320",
    "end": "876660"
  },
  {
    "text": "something you know in terms of the the web server size then it can just update you know one property on that on that ec2 VM the idea that this desired state",
    "start": "876660",
    "end": "884760"
  },
  {
    "text": "is known by the system and then the system can converge towards it it's actually critical to not only",
    "start": "884760",
    "end": "890760"
  },
  {
    "text": "infrastructures code tools but also modern Technologies like kubernetes if you think about you know if you're",
    "start": "890760",
    "end": "896339"
  },
  {
    "text": "decline declaring kubernetes configuration the API server and control",
    "start": "896339",
    "end": "901740"
  },
  {
    "text": "plane is effectively doing the same thing so this is a critical concept it's also why infrastructures code tools can",
    "start": "901740",
    "end": "907260"
  },
  {
    "text": "can resume if in the face of a failure you know because that desired state is",
    "start": "907260",
    "end": "913199"
  },
  {
    "text": "known the Oracle can always be trying to converge and if something fails along the way it can simply pick up where it",
    "start": "913199",
    "end": "918899"
  },
  {
    "text": "left off and continue attempting to accomplish that desired State this is another key concept",
    "start": "918899",
    "end": "924600"
  },
  {
    "text": "um that that you'll you'll encounter with infrastructures code tools so let's talk about now some specific",
    "start": "924600",
    "end": "931440"
  },
  {
    "start": "928000",
    "end": "973000"
  },
  {
    "text": "tools we'll we'll go through sort of the evolution of computing and cloud computing starting from data center",
    "start": "931440",
    "end": "938279"
  },
  {
    "text": "modernization you know in the in the 2000s where we really started moving Whole Hog from rack and stacking",
    "start": "938279",
    "end": "944399"
  },
  {
    "text": "physical servers and data data centers uh and manual configuration",
    "start": "944399",
    "end": "949680"
  },
  {
    "text": "um uh two software managed VMS in automation you know with VMware and and",
    "start": "949680",
    "end": "955440"
  },
  {
    "text": "this is really when the great thing is went from kvms and switches where you actually had to physically be located with your server",
    "start": "955440",
    "end": "962519"
  },
  {
    "text": "to actually do anything with it um or telnet into it or SSH into it to",
    "start": "962519",
    "end": "967620"
  },
  {
    "text": "actually having a software control plane that manages our servers and that's really a key Innovation because what",
    "start": "967620",
    "end": "974880"
  },
  {
    "start": "973000",
    "end": "1005000"
  },
  {
    "text": "that did is it meant that infrastructure now is software effectively it's programmable software has an API so",
    "start": "974880",
    "end": "981839"
  },
  {
    "text": "vsphere for example had that software defined control plane and when you look at AWS it's pretty incredible actually",
    "start": "981839",
    "end": "987480"
  },
  {
    "text": "you can curl an API a rest API to get a server somewhere in some data center",
    "start": "987480",
    "end": "993240"
  },
  {
    "text": "um at palumi we like to say program the cloud and this was the key Innovation that happened along the way that allows",
    "start": "993240",
    "end": "999240"
  },
  {
    "text": "us to build increasingly powerful infrastructures code tools and other tools and capabilities as well",
    "start": "999240",
    "end": "1006500"
  },
  {
    "start": "1005000",
    "end": "1041000"
  },
  {
    "text": "so let's talk about one really important concept we'll talk about configuration based infrastructures code and provisioning based infrastructures code",
    "start": "1006500",
    "end": "1012800"
  },
  {
    "text": "these are two primary different families of IAC tools",
    "start": "1012800",
    "end": "1018019"
  },
  {
    "text": "so configuration once you've created a server a virtual machine or a physical server you need to install and configure",
    "start": "1018019",
    "end": "1024260"
  },
  {
    "text": "software on it you need to copy and edit files run commands and processes start daemons and services and configuration",
    "start": "1024260",
    "end": "1031880"
  },
  {
    "text": "based infrastructures code was really born in a stateful world a world of virtual machines where you",
    "start": "1031880",
    "end": "1038000"
  },
  {
    "text": "patch the servers in place anytime they needed to be upgraded in the early era these are the initial",
    "start": "1038000",
    "end": "1044480"
  },
  {
    "start": "1041000",
    "end": "1068000"
  },
  {
    "text": "forays into infrastructure's code primarily with virtual machines you know CF engine even predated these but you",
    "start": "1044480",
    "end": "1049940"
  },
  {
    "text": "look at Chef puppet salt stack and ansible really what these tools were about was how to install an upgrade in",
    "start": "1049940",
    "end": "1056120"
  },
  {
    "text": "patch software on Virtual machines that was the primary mission of course they they have since evolved to a lot more",
    "start": "1056120",
    "end": "1063500"
  },
  {
    "text": "than that but you know at the time that was one of the major challenges how to automate how to make that repeatable",
    "start": "1063500",
    "end": "1069620"
  },
  {
    "start": "1068000",
    "end": "1116000"
  },
  {
    "text": "and puppet is really uh an early approach here that builds on some of the",
    "start": "1069620",
    "end": "1074840"
  },
  {
    "text": "momentum of CF engine but takes a slightly different approach puppet gives you a domain specific language it's very",
    "start": "1074840",
    "end": "1081020"
  },
  {
    "text": "ruby-like but it's DSL where in this case we're basically declaring some firewall rules that we want to",
    "start": "1081020",
    "end": "1087320"
  },
  {
    "text": "accomplish again look at how declarative this is um this is not a bash script that goes",
    "start": "1087320",
    "end": "1093500"
  },
  {
    "text": "and runs a set of commands to accomplish this it's actually saying hey firewall for protocol icmp make sure it's set to",
    "start": "1093500",
    "end": "1101120"
  },
  {
    "text": "accept and so on and so forth and of course this will translate into some SSH commands some some edits to some some",
    "start": "1101120",
    "end": "1107660"
  },
  {
    "text": "configuration files in the machine or able to operate at a much more declarative higher level more repeatable",
    "start": "1107660",
    "end": "1114020"
  },
  {
    "text": "level of abstraction Chef Builds on this as well and takes",
    "start": "1114020",
    "end": "1119419"
  },
  {
    "text": "things in a slightly different direction which is actually using Ruby um and so it'll look a lot similar to",
    "start": "1119419",
    "end": "1126559"
  },
  {
    "text": "what we just saw we're still saying we're declaring firewall rules but we've got the full expressiveness of the Ruby",
    "start": "1126559",
    "end": "1132380"
  },
  {
    "text": "language and again remember because the separation between expressive language and the infrastructures code engine",
    "start": "1132380",
    "end": "1137539"
  },
  {
    "text": "although we now have access to all the rich capabilities of Ruby we're still getting the belts and suspenders of",
    "start": "1137539",
    "end": "1143240"
  },
  {
    "text": "infrastructure as code and thanks to this really Chef enabled and unlocked a lot of amazing capabilities like",
    "start": "1143240",
    "end": "1150460"
  },
  {
    "text": "cookbooks which were chefs sharing and reuse mechanism with programming",
    "start": "1150460",
    "end": "1155539"
  },
  {
    "text": "languages were accustomed to sharing and reusing packages and patterns so that we don't have to copy and paste scripts all",
    "start": "1155539",
    "end": "1161120"
  },
  {
    "text": "over the place we can actually say hey here's a common configuration Define it once and then use it a whole bunch of",
    "start": "1161120",
    "end": "1167120"
  },
  {
    "text": "times and that's a very powerful capability in addition to that and the expressiveness",
    "start": "1167120",
    "end": "1172400"
  },
  {
    "text": "of the language we get things like testing you know the the ability to actually test our code and so this was",
    "start": "1172400",
    "end": "1178340"
  },
  {
    "text": "the first example of using really a full-blown general purpose language",
    "start": "1178340",
    "end": "1183679"
  },
  {
    "text": "but marrying that with the The Rock Solid infrastructures code engine and we'll see this this pattern repeats",
    "start": "1183679",
    "end": "1190160"
  },
  {
    "text": "although from here we sort of go in a slightly different direction um with with many of the other tools so",
    "start": "1190160",
    "end": "1196220"
  },
  {
    "start": "1194000",
    "end": "1256000"
  },
  {
    "text": "ansible approach this um from a different angle and instead of a DSL instead of a general purpose",
    "start": "1196220",
    "end": "1202640"
  },
  {
    "text": "language actually use yaml a markup language to to express effectively the",
    "start": "1202640",
    "end": "1209179"
  },
  {
    "text": "desired state of the configuration one of the ansible's major Innovations",
    "start": "1209179",
    "end": "1214400"
  },
  {
    "text": "in the space was having a serverless design in not not in the way that we",
    "start": "1214400",
    "end": "1219440"
  },
  {
    "text": "talk about serverless and lambdas today but not needing an agent so agentless effectively it could manage any machine",
    "start": "1219440",
    "end": "1226100"
  },
  {
    "text": "that had python installed on it so you don't have to worry about running an agent or running some heavyweight processes on the machines that you're",
    "start": "1226100",
    "end": "1232340"
  },
  {
    "text": "trying to to manage which has made adopting ansible at scale within organizations just very seamless almost",
    "start": "1232340",
    "end": "1238760"
  },
  {
    "text": "every machine already has you know python on it and if it doesn't it's pretty non-controversial and easy to get",
    "start": "1238760",
    "end": "1244039"
  },
  {
    "text": "that installed but again we've seen you know DSL general purpose language and yaml and you've already seen basically",
    "start": "1244039",
    "end": "1250400"
  },
  {
    "text": "the three approaches to expression languages that you'll find in all infrastructures code tools",
    "start": "1250400",
    "end": "1257380"
  },
  {
    "start": "1256000",
    "end": "1463000"
  },
  {
    "text": "some of the benefits of a DSL is you know it's it's purpose-built it's easier to get started right that DSL can afford",
    "start": "1257780",
    "end": "1266299"
  },
  {
    "text": "to basically make language design decisions that are intended to",
    "start": "1266299",
    "end": "1271580"
  },
  {
    "text": "streamline and make it super easy to use for that one purpose-built situation",
    "start": "1271580",
    "end": "1277039"
  },
  {
    "text": "some of the cons of dsls however are that it is I mean its pros are also its cons which is it's single use uh so it's",
    "start": "1277039",
    "end": "1283760"
  },
  {
    "text": "it's it's really you learn it for that one thing but it doesn't transcend that to other use cases compare that to",
    "start": "1283760",
    "end": "1289760"
  },
  {
    "text": "python where If You Learn Python there's many many other tools that use Python and you've now learned something that is",
    "start": "1289760",
    "end": "1296840"
  },
  {
    "text": "transferable to other domains and context and because of that's limited",
    "start": "1296840",
    "end": "1301880"
  },
  {
    "text": "familiarity you you know somebody coming from a different background or for the first time coming to space they have to",
    "start": "1301880",
    "end": "1306919"
  },
  {
    "text": "learn that DSL now because dsls are often simpler you know maybe that learning curve is is um is is easier but",
    "start": "1306919",
    "end": "1315200"
  },
  {
    "text": "you know if you just graduate from college you know python you know you're not going to know that that specific DSL",
    "start": "1315200",
    "end": "1320900"
  },
  {
    "text": "most likely and many dsls are destined to grow up into a general purpose language it's just not designed that way",
    "start": "1320900",
    "end": "1327080"
  },
  {
    "text": "from the outset and so you often end up with you know funny funny for Loops or funny you know if statements that maybe",
    "start": "1327080",
    "end": "1333440"
  },
  {
    "text": "were not uh designed intentionally but bolted on after the fact",
    "start": "1333440",
    "end": "1339799"
  },
  {
    "text": "service languages again are multi-use they give you the ultimate expressiveness which can be a challenge",
    "start": "1339799",
    "end": "1344840"
  },
  {
    "text": "but in these in this context because infrastructures code that declarative engine at the core that expressiveness",
    "start": "1344840",
    "end": "1352039"
  },
  {
    "text": "uh it limits the blast radius of how much you can shoot yourself in the foot and is brought familiarity as I",
    "start": "1352039",
    "end": "1357679"
  },
  {
    "text": "mentioned already the cons are you know if you don't know the general personal language it sometimes can be more complex to learn",
    "start": "1357679",
    "end": "1363559"
  },
  {
    "text": "it when you're just getting started and frankly marrying that with declarative infrastructures code is not trivial so",
    "start": "1363559",
    "end": "1370400"
  },
  {
    "text": "we've seen that Chef was able to do that we've seen that polumina was able to do that but there aren't many examples of",
    "start": "1370400",
    "end": "1375860"
  },
  {
    "text": "being able to do that because you do need to sort of narrow down the object model and really design a system from",
    "start": "1375860",
    "end": "1381740"
  },
  {
    "text": "the outset that can work with the best of both worlds and finally markup language is really",
    "start": "1381740",
    "end": "1388520"
  },
  {
    "text": "extreme Simplicity you know Json yaml are effectively Universal data formats",
    "start": "1388520",
    "end": "1393799"
  },
  {
    "text": "that are used everywhere throughout computer software these days it also aligns well with that declarative",
    "start": "1393799",
    "end": "1399320"
  },
  {
    "text": "approach you know really it is Data so you're declaring you know there's no compute in that uh except that market",
    "start": "1399320",
    "end": "1407059"
  },
  {
    "text": "languages lack expressiveness so if you do need a for Loop or you do need some level of abstraction or templating or",
    "start": "1407059",
    "end": "1415100"
  },
  {
    "text": "you know you're you're declaring something like the web server that needs to reference the security group you have to invent constructs to enable those",
    "start": "1415100",
    "end": "1421820"
  },
  {
    "text": "things which often feel like you're now jamming a general purpose language into what was meant to be a simple data",
    "start": "1421820",
    "end": "1428179"
  },
  {
    "text": "format in fact you look at some systems like Helm and the kubernetes ecosystem they've had it to add go templates to",
    "start": "1428179",
    "end": "1434840"
  },
  {
    "text": "generate the yaml because you know in many complex situations you do run that into the wall on complexity that leads",
    "start": "1434840",
    "end": "1441860"
  },
  {
    "text": "to a lot of copy and paste a lot of custom tooling built up around this supposedly simple format and there's",
    "start": "1441860",
    "end": "1448400"
  },
  {
    "text": "really not great tooling to kind of help manage those things at scale so all of these are pros and cons I just wanted to",
    "start": "1448400",
    "end": "1453919"
  },
  {
    "text": "kind of give you the full landscape again the right solution to the right problem domain is typically my guidance",
    "start": "1453919",
    "end": "1460820"
  },
  {
    "text": "for when to pick you know one over the other along the way we introduced this this",
    "start": "1460820",
    "end": "1467120"
  },
  {
    "start": "1463000",
    "end": "1523000"
  },
  {
    "text": "concept of devops you know developers and operations and really taking those things and working together you know",
    "start": "1467120",
    "end": "1474140"
  },
  {
    "text": "devops really is a set of practices to harmonize software development and operations so that we're not thinking of",
    "start": "1474140",
    "end": "1479720"
  },
  {
    "text": "these things as you know developers go write the code over here they throw the code over the wall with a ticketing",
    "start": "1479720",
    "end": "1484820"
  },
  {
    "text": "system in between to the operations team who then goes and you know clicks a few things really this idea of reimagining",
    "start": "1484820",
    "end": "1490520"
  },
  {
    "text": "the software development life cycle with infrastructure at the Forefront and really helping the two sides of the",
    "start": "1490520",
    "end": "1496400"
  },
  {
    "text": "house you know developers operations infrastructure um collaborate this really helps us to",
    "start": "1496400",
    "end": "1502520"
  },
  {
    "text": "achieve continuous software delivery where we're shipping daily hourly constantly instead of just you know",
    "start": "1502520",
    "end": "1508280"
  },
  {
    "text": "quarterly or some of the the ways that we did things you know 20 years ago uh and really I mentioned devops here",
    "start": "1508280",
    "end": "1513740"
  },
  {
    "text": "because infrastructure's code was an essential technology to First facilitating devops but then devops also",
    "start": "1513740",
    "end": "1520280"
  },
  {
    "text": "helped carry infrastructures code into the mainstream so let's keep going on our um you know",
    "start": "1520280",
    "end": "1526220"
  },
  {
    "start": "1523000",
    "end": "1542000"
  },
  {
    "text": "the the the journey here I think devops sort of predated the cloud just barely and then you know the cloud came on the",
    "start": "1526220",
    "end": "1532100"
  },
  {
    "text": "scene and you know I love this press release uh AWS first service that they launched with S3",
    "start": "1532100",
    "end": "1537500"
  },
  {
    "text": "um back in uh 2006 and this really changed the game completely",
    "start": "1537500",
    "end": "1543640"
  },
  {
    "start": "1542000",
    "end": "1670000"
  },
  {
    "text": "things that it introduced was this notion that infrastructure is an API call away and it's much more repeatable",
    "start": "1543679",
    "end": "1549919"
  },
  {
    "text": "and scalable we have managed Services um and effectively you can offload a lot",
    "start": "1549919",
    "end": "1555440"
  },
  {
    "text": "of the operations tasks and management of our infrastructure to the AWS control plane the AWS Services themselves",
    "start": "1555440",
    "end": "1563240"
  },
  {
    "text": "so as as we hit this inflection point there's another concept that I want to mention because it it really leads to",
    "start": "1563240",
    "end": "1571400"
  },
  {
    "text": "from configuration based infrastructures code to provisioning based infrastructures code which we're about to dive into",
    "start": "1571400",
    "end": "1577880"
  },
  {
    "text": "um this notion of cattle versus pets which is probably probably terrible analogy it's not mine but um but it's",
    "start": "1577880",
    "end": "1584179"
  },
  {
    "text": "pretty well known the idea is you know in the world of VMS um those were like pets every every",
    "start": "1584179",
    "end": "1591260"
  },
  {
    "text": "machine especially in the world of you know physical react and stacked uh data center",
    "start": "1591260",
    "end": "1596299"
  },
  {
    "text": "um uh computers every one of those is a special stateful",
    "start": "1596299",
    "end": "1601340"
  },
  {
    "text": "being they have specific names like Puss and boots.cern.ch they're unique",
    "start": "1601340",
    "end": "1607460"
  },
  {
    "text": "lovingly hand raised and cared for and when something goes wrong with them you try to get it back to health if",
    "start": "1607460",
    "end": "1613400"
  },
  {
    "text": "something fails in the hardware you go swap out you know the SIM card and install something new",
    "start": "1613400",
    "end": "1618559"
  },
  {
    "text": "um when a piece of software gets corrupt or you know there's a security vulnerability you go patch that thing",
    "start": "1618559",
    "end": "1625640"
  },
  {
    "text": "um whereas in the shift to the cloud we move more towards this notion of cattle which is we've got a lot of these",
    "start": "1625640",
    "end": "1631880"
  },
  {
    "text": "machines and they're almost identical to each other and when one fails you swap",
    "start": "1631880",
    "end": "1637400"
  },
  {
    "text": "in a new one whether that's because Hardware fails and we just get a new machine we plug it in or you know if",
    "start": "1637400",
    "end": "1643159"
  },
  {
    "text": "something needs to be upgraded often instead of going and patching that and worrying about the fact that it's state stateful and that means that we have to",
    "start": "1643159",
    "end": "1649520"
  },
  {
    "text": "consider if something fails the machine might be in a bad State we just go and create new ones and and then you know",
    "start": "1649520",
    "end": "1656419"
  },
  {
    "text": "using things like load balancers we can redirect traffic from the old to the new this is uh by the way this this slide I",
    "start": "1656419",
    "end": "1663559"
  },
  {
    "text": "took directly from the initial in 2020 uh 2012 the initial introduction of this",
    "start": "1663559",
    "end": "1668720"
  },
  {
    "text": "concept and that leads to provision in a world with uh cattle instead of pets it",
    "start": "1668720",
    "end": "1675799"
  },
  {
    "start": "1670000",
    "end": "1714000"
  },
  {
    "text": "doesn't make sense to really think a lot about hey patching that virtual machine in fact we can just bake images and",
    "start": "1675799",
    "end": "1681559"
  },
  {
    "text": "we'll see in with containers and Docker and kubernetes is kind of the new way we do things we can just make images with",
    "start": "1681559",
    "end": "1687080"
  },
  {
    "text": "the latest software in them and then just go provision new versions and update all the old references to the new",
    "start": "1687080",
    "end": "1692480"
  },
  {
    "text": "what that means is um you know we really don't have to think about State transitions from A to",
    "start": "1692480",
    "end": "1698900"
  },
  {
    "text": "B to C to D you know something fails along the way you know we can just say desired state so getting back to the",
    "start": "1698900",
    "end": "1705320"
  },
  {
    "text": "this notion of desired configuration and and the infrastructure's code tool can figure out how to get from wherever we",
    "start": "1705320",
    "end": "1711679"
  },
  {
    "text": "are today to wherever we want to go tomorrow and that's led to this sort of middle era of infrastructures code tools there",
    "start": "1711679",
    "end": "1718400"
  },
  {
    "start": "1714000",
    "end": "1727000"
  },
  {
    "text": "are Cloud specific tools like AWS cloudformation Azure resource manager Google deployment manager and then Cloud",
    "start": "1718400",
    "end": "1724100"
  },
  {
    "text": "agnostic terraform something that I'm sure many people are familiar with so cloudformation will look you know can",
    "start": "1724100",
    "end": "1730820"
  },
  {
    "start": "1727000",
    "end": "1779000"
  },
  {
    "text": "use Json or yaml and so looks a lot like",
    "start": "1730820",
    "end": "1736340"
  },
  {
    "text": "you know the ansible example we saw earlier it's just declaring um AWS infrastructure here and this is",
    "start": "1736340",
    "end": "1742400"
  },
  {
    "text": "actually basically doing the same thing we saw in our demo earlier uh effectively yeah just spinning up an ec2",
    "start": "1742400",
    "end": "1747919"
  },
  {
    "text": "instance that runs you know some commands when it spins up well notice a few things though you know that bang sub",
    "start": "1747919",
    "end": "1754760"
  },
  {
    "text": "here you know in FN colon colon base64 again because the limitations of a of a",
    "start": "1754760",
    "end": "1761419"
  },
  {
    "text": "markup language cloudformation has introduced sort of mini DSL embedded within it where you can actually",
    "start": "1761419",
    "end": "1767000"
  },
  {
    "text": "substitute commands to reference other objects or perform computations like in this case we're substituting",
    "start": "1767000",
    "end": "1773720"
  },
  {
    "text": "um some and base and base64 encoding some strings",
    "start": "1773720",
    "end": "1779679"
  },
  {
    "start": "1779000",
    "end": "1834000"
  },
  {
    "text": "and Azure resource manager has very similar Concepts it's just written in uh Json instead of yaml terraform however",
    "start": "1780679",
    "end": "1788480"
  },
  {
    "text": "takes that approach of a domain-specific language so again you know very similar to kind of what puppet did where it",
    "start": "1788480",
    "end": "1795140"
  },
  {
    "text": "didn't have to be constrained by the limitations of a of a markup language and yet didn't have to go and support a",
    "start": "1795140",
    "end": "1802940"
  },
  {
    "text": "full-blown language terraform allows you to express yourself in its DSL the hashicorp config language and we'll see",
    "start": "1802940",
    "end": "1810020"
  },
  {
    "text": "here this VAR dot instant site VAR dot instance key um we can reference you know in the",
    "start": "1810020",
    "end": "1815179"
  },
  {
    "text": "security groups AWS underscore Security Group sg.id we have some facilities for",
    "start": "1815179",
    "end": "1821659"
  },
  {
    "text": "programming but within a simpler declarative DSL and terraform again is multi-cloud so it",
    "start": "1821659",
    "end": "1829100"
  },
  {
    "text": "can support AWS Azure Google Cloud also on-prem things like you know vsphere [Music]",
    "start": "1829100",
    "end": "1835220"
  },
  {
    "text": "okay so all of that was you know early early 2010s and and and then Docker and",
    "start": "1835220",
    "end": "1840679"
  },
  {
    "text": "kubernetes came on the scene and really changed how we think about application architectures and encouraged us to move",
    "start": "1840679",
    "end": "1847940"
  },
  {
    "text": "Beyond lift and shift I think a lot of the prior Technologies were still very oriented around how do we provision VMS",
    "start": "1847940",
    "end": "1853760"
  },
  {
    "text": "and how do we configure them kubernetes in Cloud native in fact actually really dovetail nicely with",
    "start": "1853760",
    "end": "1860720"
  },
  {
    "start": "1855000",
    "end": "1885000"
  },
  {
    "text": "this concept of declarative infrastructures code because the kubernetes object model and way of doing things is all about eventual consistency",
    "start": "1860720",
    "end": "1867320"
  },
  {
    "text": "assuming things will fail and really working in terms of desired State and Loosely coupled dependencies uh",
    "start": "1867320",
    "end": "1873799"
  },
  {
    "text": "unfortunately there's lots and lots of yaml in there but um but the concepts at the core of how kubernetes work align",
    "start": "1873799",
    "end": "1879679"
  },
  {
    "text": "very nicely with the Core Concepts of infrastructure as code that we've already talked about throughout this",
    "start": "1879679",
    "end": "1885140"
  },
  {
    "start": "1885000",
    "end": "1928000"
  },
  {
    "text": "talk but at this point you know where did the general purpose languages go you know we saw that with Chef we saw that basically",
    "start": "1885140",
    "end": "1892340"
  },
  {
    "text": "for 10 years we just moved entirely away from general purpose languages which meant that we lost the ability to have",
    "start": "1892340",
    "end": "1899000"
  },
  {
    "text": "for loops and if statements we lost abstraction facilities like function classes and modules a lot of the editor",
    "start": "1899000",
    "end": "1904760"
  },
  {
    "text": "support is now missing you know most editors are not going to understand Cloud formation's way of doing a DSL to",
    "start": "1904760",
    "end": "1910039"
  },
  {
    "text": "reference things so you're not getting statement completion or red squiggles if you make a mistake you're not getting",
    "start": "1910039",
    "end": "1915799"
  },
  {
    "text": "unless somebody goes and implements a specific plug-in for it you're not getting you know interactive documentation for things like terraforms",
    "start": "1915799",
    "end": "1922760"
  },
  {
    "text": "DSL and it led to a lot of copying pace and a lot of recreating the wheel",
    "start": "1922760",
    "end": "1929419"
  },
  {
    "start": "1928000",
    "end": "1973000"
  },
  {
    "text": "and so today's our we're seeing a Resurgence of two things one more Cloud native Technologies",
    "start": "1929419",
    "end": "1935659"
  },
  {
    "text": "um not just kubernetes and Helm the typical uh what people typically mean when they say cloud native but really",
    "start": "1935659",
    "end": "1941659"
  },
  {
    "text": "race and manage services like AWS Lambda or you know Azure Cosmos DB offloading",
    "start": "1941659",
    "end": "1947779"
  },
  {
    "text": "some of the heavy lifting of managing services to the cloud providers themselves but also seeing a Renaissance of let's",
    "start": "1947779",
    "end": "1955340"
  },
  {
    "text": "use those general purpose languages let's marry those with declarative infrastructure as code but let's give",
    "start": "1955340",
    "end": "1960440"
  },
  {
    "text": "ourselves the ability to tame the complexity and go from you know small small numbers of services to many many",
    "start": "1960440",
    "end": "1967760"
  },
  {
    "text": "services to many environments and use software to tame that complexity like it was designed to do",
    "start": "1967760",
    "end": "1974120"
  },
  {
    "start": "1973000",
    "end": "2002000"
  },
  {
    "text": "so this led to palumi's introduction company that I'm uh you know that I founded back in 2017. uh we already saw",
    "start": "1974120",
    "end": "1980059"
  },
  {
    "text": "this in action but the idea is use JavaScript typescript go python c-sharp",
    "start": "1980059",
    "end": "1986360"
  },
  {
    "text": "Java we actually even support yaml if you prefer that markup language approach but the idea here is no matter what",
    "start": "1986360",
    "end": "1993140"
  },
  {
    "text": "choice you pick for the expression language you're still getting all that great declarative provisioning based infrastructures code belts and",
    "start": "1993140",
    "end": "1999620"
  },
  {
    "text": "suspenders previews and all of that so summary you know if you're picking an infrastructure's code tool today uh it's",
    "start": "1999620",
    "end": "2007720"
  },
  {
    "start": "2002000",
    "end": "2081000"
  },
  {
    "text": "very common to see folks using palumi with ansible or you know terraform with Chef or any any combination thereof",
    "start": "2007720",
    "end": "2014740"
  },
  {
    "text": "because configuration is still super useful if you're doing virtual machines if you're doing stable stateful",
    "start": "2014740",
    "end": "2020200"
  },
  {
    "text": "workloads and stateful virtual machines you're going to have to configure them you're gonna have to patch them and those tools are very much vibrant and",
    "start": "2020200",
    "end": "2026080"
  },
  {
    "text": "being used widely in the ecosystem today if you're really going all in on Modern cloud architectures provisioning based",
    "start": "2026080",
    "end": "2031779"
  },
  {
    "text": "infrastructures code is basically table Stakes so you're going to want to pick you know pollute me terraform something",
    "start": "2031779",
    "end": "2036940"
  },
  {
    "text": "in that category for simple use cases it's fine to start with the DSL or markup language we saw",
    "start": "2036940",
    "end": "2043299"
  },
  {
    "text": "that with Paloma you can pick either of those and still stay within the flumi ecosystem but if you want something",
    "start": "2043299",
    "end": "2048520"
  },
  {
    "text": "expressive familiar that can that can really work in a very complex setting and that is familiar to developers",
    "start": "2048520",
    "end": "2055138"
  },
  {
    "text": "general purpose languages tend to be the way to go and then of course kubernetes only you've got to pick something that",
    "start": "2055139",
    "end": "2061060"
  },
  {
    "text": "works in the cloud native ecosystem we saw some examples I didn't talk through some of those but you know polomium works great there uh cross plane is",
    "start": "2061060",
    "end": "2067480"
  },
  {
    "text": "another example or just the kubernetes native tools themselves are very infrastructures code like",
    "start": "2067480",
    "end": "2074320"
  },
  {
    "text": "so I'm going to wind down which is talking about a few trends that are exciting to me that that we can expect to see in the infrastructure as code",
    "start": "2074320",
    "end": "2080260"
  },
  {
    "text": "domain over the next few years the first I just alluded to this which is empowering developers you know you",
    "start": "2080260",
    "end": "2086378"
  },
  {
    "start": "2081000",
    "end": "2161000"
  },
  {
    "text": "you rewind the clock 20 years ago and developers really didn't think much about the infrastructure they'd write a three-tier application two virtual",
    "start": "2086379",
    "end": "2092800"
  },
  {
    "text": "machines in a database and the infrastructure team could easily take it from there we'd update the applications",
    "start": "2092800",
    "end": "2098320"
  },
  {
    "text": "every quarter life was good but it turns out these days infrastructure and application code the",
    "start": "2098320",
    "end": "2104440"
  },
  {
    "text": "line between that is getting blurrier first of all so is a AWS Lambda is that",
    "start": "2104440",
    "end": "2109660"
  },
  {
    "text": "a application concept or an infrastructure concept it's somewhere in between what about building and Publishing a Docker container into a",
    "start": "2109660",
    "end": "2115240"
  },
  {
    "text": "product container registry that's somewhere in between as well what we're finding is increasingly because developers are creating the business",
    "start": "2115240",
    "end": "2122079"
  },
  {
    "text": "value letting them move as fast as possible and embrace the cloud as much as possible is something that most of",
    "start": "2122079",
    "end": "2127720"
  },
  {
    "text": "the most Innovative company is out there especially those where the cloud is helping them ship faster is is really",
    "start": "2127720",
    "end": "2134260"
  },
  {
    "text": "key and these days all software Builders Cloud software so this totally makes sense however",
    "start": "2134260",
    "end": "2139599"
  },
  {
    "text": "you need to still have those guardrails in place you know how to provision a network a cost-effective kubernetes",
    "start": "2139599",
    "end": "2145599"
  },
  {
    "text": "cluster reliability security and so that's why infrastructure's code is still an essential tool to empowering",
    "start": "2145599",
    "end": "2151480"
  },
  {
    "text": "developers where the infrastructure team can define those best practices set those guardrails but developers can",
    "start": "2151480",
    "end": "2156820"
  },
  {
    "text": "still go and self-serve some subset of the infrastructure that makes sense and that gives rise to this notion of a",
    "start": "2156820",
    "end": "2163900"
  },
  {
    "start": "2161000",
    "end": "2213000"
  },
  {
    "text": "platform team we're seeing this increasingly a platform team is sort of the team that sits between the operations and it organization and the",
    "start": "2163900",
    "end": "2172240"
  },
  {
    "text": "developers and oftentimes this infrastructure platform team the goal is to allow developers to be self-served",
    "start": "2172240",
    "end": "2178060"
  },
  {
    "text": "with guardrails in place it made the connective tissue between the developers and operations team many times the",
    "start": "2178060",
    "end": "2184300"
  },
  {
    "text": "platformer machine platform engineering team takes a software engineering mindset they're Building Systems they're",
    "start": "2184300",
    "end": "2190000"
  },
  {
    "text": "putting place kubernetes and scaling that up they're defining the common infrastructures code components that are going to be used elsewhere the policy",
    "start": "2190000",
    "end": "2196480"
  },
  {
    "text": "components um but that software engineering mindset is often prevalent within the platform",
    "start": "2196480",
    "end": "2201640"
  },
  {
    "text": "team you'll find that it's a intersection of software engineering experts and infrastructure expertise in",
    "start": "2201640",
    "end": "2208119"
  },
  {
    "text": "this group and this is definitely a pattern we see in the most modern organizations",
    "start": "2208119",
    "end": "2214060"
  },
  {
    "start": "2213000",
    "end": "2250000"
  },
  {
    "text": "we'll see that taming complexity is continuing to be on everybody's mind I think there's essential complexity and",
    "start": "2214060",
    "end": "2220240"
  },
  {
    "text": "accidental complexity and with the cloud today we've got a lot of accidental complexity if you're a developer you",
    "start": "2220240",
    "end": "2225520"
  },
  {
    "text": "just want to spin up a microservice and Define a couple containers a pub sub topic a queue a serverless function",
    "start": "2225520",
    "end": "2231040"
  },
  {
    "text": "there's a lot of accidental complexity in that space and so we're seeing already at the rise of tools that talk",
    "start": "2231040",
    "end": "2237520"
  },
  {
    "text": "about infrastructure from code something palumi does and some new entrances to Market so we'll continue to see that",
    "start": "2237520",
    "end": "2243520"
  },
  {
    "text": "level of abstraction increasing over time so there's less toil we can focus a lot more on just business logic",
    "start": "2243520",
    "end": "2250780"
  },
  {
    "start": "2250000",
    "end": "2296000"
  },
  {
    "text": "security is Unfortunately today still an afterthought so I think another Trend that we're clearly seeing is principle",
    "start": "2250780",
    "end": "2257020"
  },
  {
    "text": "of least privilege policies code scanning early enough and making sure that software is secured by construction",
    "start": "2257020",
    "end": "2263200"
  },
  {
    "text": "and infrastructure's code has a huge role to play in ensuring that we've seen a ton of great Technologies here you",
    "start": "2263200",
    "end": "2268839"
  },
  {
    "text": "know inspect by Chef I mentioned the ability for Chef to test code well a lot of that that that work manifested in",
    "start": "2268839",
    "end": "2275079"
  },
  {
    "text": "inspect so you can actually ensure that things are secure by default we've got things like Opa the open policy agent",
    "start": "2275079",
    "end": "2280599"
  },
  {
    "text": "which is doing that in the in the realm of cloud native The hashicorp Sentinel which does that for the terraform tool",
    "start": "2280599",
    "end": "2286240"
  },
  {
    "text": "polluting cross guard which allows you to policies code in palumi and sneak which is a more general purpose solution",
    "start": "2286240",
    "end": "2293140"
  },
  {
    "text": "across a lot of these different Technologies and distributed application architectures truly distribute",
    "start": "2293140",
    "end": "2298900"
  },
  {
    "start": "2296000",
    "end": "2333000"
  },
  {
    "text": "application architectures I think that one of the most exciting things about the cloud the cloud has really made it",
    "start": "2298900",
    "end": "2304599"
  },
  {
    "text": "easy to create software with infinite scale infinite data and that's a really",
    "start": "2304599",
    "end": "2310240"
  },
  {
    "text": "exciting change in in the entire industry where we went from you know single computers to multiple computers",
    "start": "2310240",
    "end": "2316839"
  },
  {
    "text": "connected through HTTP to multi-core and now really truly distributed application architectures often leveraged in",
    "start": "2316839",
    "end": "2323380"
  },
  {
    "text": "containers and serverless and managed services and this just unlocks incredible capabilities that are giving",
    "start": "2323380",
    "end": "2328480"
  },
  {
    "text": "rise to entirely new companies and business models and entirely new architectures",
    "start": "2328480",
    "end": "2333760"
  },
  {
    "start": "2333000",
    "end": "2363000"
  },
  {
    "text": "and then finally artificial intelligence uh you know I think GitHub co-pilot when",
    "start": "2333760",
    "end": "2339040"
  },
  {
    "text": "it first came out we because palumi is just code uh we cracked it open started writing some infrastructures code and",
    "start": "2339040",
    "end": "2345099"
  },
  {
    "text": "who know you know surprise surprise GitHub co-pilot was able to actually author and complete some of our infrastructures code for us the recent",
    "start": "2345099",
    "end": "2351820"
  },
  {
    "text": "introduction of uh chat GPT from open API you can literally go and say write a plume program to create an ECS parking",
    "start": "2351820",
    "end": "2358359"
  },
  {
    "text": "at microservice and lo and behold it spits out uh the code to create uh microservice",
    "start": "2358359",
    "end": "2364300"
  },
  {
    "start": "2363000",
    "end": "2407000"
  },
  {
    "text": "so in summary we've seen where we come from You Know Rich history many Giants who shoulders We Stand upon you know",
    "start": "2364300",
    "end": "2370060"
  },
  {
    "text": "starting from make CF engine and puppet chef and so on to today present day you",
    "start": "2370060",
    "end": "2375280"
  },
  {
    "text": "know where infrastructures code really is table States for any Cloud infrastructure whether it's on-prem",
    "start": "2375280",
    "end": "2380320"
  },
  {
    "text": "hybrid public cloud or anywhere in between we've got many great tools to choose from a lot of great Innovations",
    "start": "2380320",
    "end": "2386920"
  },
  {
    "text": "thanks to Containers Cloud native and being more developer Centric and then where we go from here you know really",
    "start": "2386920",
    "end": "2392980"
  },
  {
    "text": "moving beyond just building blocks to best practices distributed application architectures uh and having things like",
    "start": "2392980",
    "end": "2400180"
  },
  {
    "text": "security uh built in from the outset and the good news is we're starting from a really solid foundation which hopefully",
    "start": "2400180",
    "end": "2405760"
  },
  {
    "text": "you've seen uh in this talk and with that thanks for joining me today to hear about infrastructure's",
    "start": "2405760",
    "end": "2410920"
  },
  {
    "start": "2407000",
    "end": "2426000"
  },
  {
    "text": "code past present and future I hope you learned some interesting insights about the history some practical information",
    "start": "2410920",
    "end": "2415960"
  },
  {
    "text": "that you can go apply today and some exciting ideas to keep you excited about where we might go from here thank you",
    "start": "2415960",
    "end": "2421420"
  },
  {
    "text": "everyone",
    "start": "2421420",
    "end": "2423540"
  },
  {
    "start": "2426000",
    "end": "2540000"
  },
  {
    "text": "hello hello how are you awesome",
    "start": "2426820",
    "end": "2432280"
  },
  {
    "text": "well thanks for joining us that was a great talk and thanks for everybody here if you have any questions please post",
    "start": "2432280",
    "end": "2438520"
  },
  {
    "text": "them in the public chat um there is one question here we'll start off with that and then if there",
    "start": "2438520",
    "end": "2444880"
  },
  {
    "text": "are no more I have some as well but um Sebastian C asks can we declare can we",
    "start": "2444880",
    "end": "2450880"
  },
  {
    "text": "Define declarative implementation as a very thorough imperative implementation done by somebody else and reused so in",
    "start": "2450880",
    "end": "2459040"
  },
  {
    "text": "some sense everything is imperative Until It's Made declarative as a layer above for specific cases that",
    "start": "2459040",
    "end": "2466060"
  },
  {
    "text": "demonstrated the need to be curated yeah it's a it's a it's a very good",
    "start": "2466060",
    "end": "2471400"
  },
  {
    "text": "point and an interesting way to think about it because yeah like the engine of palumi although the engine itself is",
    "start": "2471400",
    "end": "2476859"
  },
  {
    "text": "declarative is actually written in go which of course is an imperative uh language in fact I like to think of",
    "start": "2476859",
    "end": "2482500"
  },
  {
    "text": "programming languages as sort of occupying space along a spectrum from you know imperative to declarative you",
    "start": "2482500",
    "end": "2488500"
  },
  {
    "text": "look at a language like Haskell Haskell arguably is declarative because side",
    "start": "2488500",
    "end": "2494260"
  },
  {
    "text": "effects are you know explicit and built into the model um but then you look at a language like",
    "start": "2494260",
    "end": "2500020"
  },
  {
    "text": "F-sharp where it has lots of declarative facilities and in fact you can use F sharp with you know polluting or cdk",
    "start": "2500020",
    "end": "2507099"
  },
  {
    "text": "um it's actually a nice fit because it's more of a declarative model um uh but it's got some imperative",
    "start": "2507099",
    "end": "2512859"
  },
  {
    "text": "constructs in it as well so I think of these things as more of a spectrum but I do think that's a good way of thinking",
    "start": "2512859",
    "end": "2519040"
  },
  {
    "text": "about it there's more esoteric you know Solutions like proof carrying code and you know TLA plus and all these you know",
    "start": "2519040",
    "end": "2525400"
  },
  {
    "text": "more research and academic languages that really are more declarative in nature but most of the",
    "start": "2525400",
    "end": "2531880"
  },
  {
    "text": "time we're trying to approximate declarative using imperative languages like Sebastian kind of suggests there",
    "start": "2531880",
    "end": "2539280"
  },
  {
    "start": "2540000",
    "end": "2666000"
  },
  {
    "text": "a follow-on question I suppose would be you do have this declarative engine",
    "start": "2540760",
    "end": "2547720"
  },
  {
    "text": "and especially for palumi as part of your solution to infrastructure as code",
    "start": "2547720",
    "end": "2553480"
  },
  {
    "text": "but you also talk about the tenet of infrastructure code is being declarative",
    "start": "2553480",
    "end": "2558520"
  },
  {
    "text": "and we're seeing you know the future is declarative so are there any downsides",
    "start": "2558520",
    "end": "2565060"
  },
  {
    "text": "for the engine or just the solution to not be declarative native so to speak",
    "start": "2565060",
    "end": "2572859"
  },
  {
    "text": "um you know the process in the process of of bringing your own language construct to that evaluation engine",
    "start": "2572859",
    "end": "2580540"
  },
  {
    "text": "yeah I think you could definitely argue it both ways there's sort of more of an",
    "start": "2580540",
    "end": "2585700"
  },
  {
    "text": "impedance mismatch when you have to take something that fundamentally is not declarative and map it onto something that is declarative",
    "start": "2585700",
    "end": "2592480"
  },
  {
    "text": "um and yet at the same time you know a lot of programmers are accustomed to imperative languages you know we like",
    "start": "2592480",
    "end": "2599140"
  },
  {
    "text": "our for Loops we like our shared mutable State even though it's you know on paper it's you know sometimes not not a great",
    "start": "2599140",
    "end": "2605380"
  },
  {
    "text": "idea um so the approach that we took at least was to accommodate the different",
    "start": "2605380",
    "end": "2610599"
  },
  {
    "text": "preferences of different end users who who might already have a language that they they know but still give them a way",
    "start": "2610599",
    "end": "2616599"
  },
  {
    "text": "to map that onto the declarative core but you look at things like well yaml is",
    "start": "2616599",
    "end": "2622900"
  },
  {
    "text": "pretty pretty mainstream and popular so that's a but that's more of a data format um and you look at Q which adds",
    "start": "2622900",
    "end": "2629800"
  },
  {
    "text": "some really super exciting you know capabilities around type checking and the ability to do things like for Loops",
    "start": "2629800",
    "end": "2637240"
  },
  {
    "text": "um within the context of a purely declarative data model the unfortunate thing is there's no you know really",
    "start": "2637240",
    "end": "2643960"
  },
  {
    "text": "super popular declarative programming language you know I mentioned Haskell is probably the closest but that really has",
    "start": "2643960",
    "end": "2651099"
  },
  {
    "text": "has always been people like to Tinker with it and and certainly in fintech you",
    "start": "2651099",
    "end": "2656920"
  },
  {
    "text": "go to Wall Street quants like people are using Haskell like crazy but more broadly in the industry a little bit",
    "start": "2656920",
    "end": "2662980"
  },
  {
    "text": "less so very interesting you mentioned the",
    "start": "2662980",
    "end": "2668680"
  },
  {
    "start": "2666000",
    "end": "2790000"
  },
  {
    "text": "future of um infrastructure's code and you also talked about policy and the rise of",
    "start": "2668680",
    "end": "2675819"
  },
  {
    "text": "policy of code and how infrastructure of code has a huge part to play as that play in that could you expand on that a",
    "start": "2675819",
    "end": "2682720"
  },
  {
    "text": "little bit yeah definitely you know I lived through an interesting",
    "start": "2682720",
    "end": "2687880"
  },
  {
    "text": "time you know back in the trustworthy Computing days where we had all these viruses and issues you know with you",
    "start": "2687880",
    "end": "2693460"
  },
  {
    "text": "know Windows when we're at Microsoft and the thing that we found out was like hey you can you can detect a lot of those",
    "start": "2693460",
    "end": "2698859"
  },
  {
    "text": "through static analysis and analyzing code or analyzing you know the the environment but it's a whole lot better",
    "start": "2698859",
    "end": "2705880"
  },
  {
    "text": "if you didn't get yourself into that situation to begin with and so what we did back then was we started moving",
    "start": "2705880",
    "end": "2711280"
  },
  {
    "text": "things more and more into the the programming languages more uh static type checking and you look at what rust",
    "start": "2711280",
    "end": "2716859"
  },
  {
    "text": "has done for example eliminating entire classes of common security problems by having a robust type system I think it",
    "start": "2716859",
    "end": "2724119"
  },
  {
    "text": "was policy as code is effectively in that realm of you know static type checking um and sometimes dynamic as",
    "start": "2724119",
    "end": "2730060"
  },
  {
    "text": "well detecting errors like oops I didn't mean for this database to be open to the",
    "start": "2730060",
    "end": "2735579"
  },
  {
    "text": "internet um oops you know my entire microservice you know there's uh again a pathway from",
    "start": "2735579",
    "end": "2741040"
  },
  {
    "text": "the Internet or I forgot to encrypt files at rest or I'm using an",
    "start": "2741040",
    "end": "2747819"
  },
  {
    "text": "end-of-life version of my Sequel and catching these things ideally at deployment time but worst case you know",
    "start": "2747819",
    "end": "2753880"
  },
  {
    "text": "after they've already made their way out we've seen a lot of great uh tools there you know how she has Sentinel Chef head",
    "start": "2753880",
    "end": "2760300"
  },
  {
    "text": "inspect I you know at palumi we we created policies code but we still have a long way to go",
    "start": "2760300",
    "end": "2766119"
  },
  {
    "text": "because it's still an afterthought it's not to the point where it's it's checked as part of author in my program and it's",
    "start": "2766119",
    "end": "2772300"
  },
  {
    "text": "just secure by default and I think that's where we all want to get to is secure by default you'll see supply",
    "start": "2772300",
    "end": "2777940"
  },
  {
    "text": "chain security as well as part of this you know companies like chain guard trying to make it secure by construction",
    "start": "2777940",
    "end": "2783400"
  },
  {
    "text": "so I think that as an industry we'll see a lot more movement in that direction",
    "start": "2783400",
    "end": "2789300"
  },
  {
    "text": "we have a palumi specific question so unit tests are unit tests and",
    "start": "2789480",
    "end": "2794560"
  },
  {
    "start": "2790000",
    "end": "2854000"
  },
  {
    "text": "integration tests are they recommended when we Implement pipelines with palumi",
    "start": "2794560",
    "end": "2799720"
  },
  {
    "text": "definitely I I think one of the benefits to using general purpose languages is you get the whole ecosystem around that",
    "start": "2799720",
    "end": "2805960"
  },
  {
    "text": "language so if you're using python you can use the built-in unit testing every language has a unit test framework so",
    "start": "2805960",
    "end": "2812859"
  },
  {
    "text": "there's a spectrum of testing there's unit testing there's uh pre-deployment",
    "start": "2812859",
    "end": "2817960"
  },
  {
    "text": "testing actually a common thing is open a GitHub pull request spin up a whole fresh copy of that infrastructure run a",
    "start": "2817960",
    "end": "2824319"
  },
  {
    "text": "battery of tests against it and tear it down only pass the pull request if you know that set of tests work that's",
    "start": "2824319",
    "end": "2831040"
  },
  {
    "text": "another form of testing and then once you actually merge it there's post deployment testing and a variety of techniques like a b testing canaries",
    "start": "2831040",
    "end": "2839640"
  },
  {
    "text": "blue green deployments that that are more sophisticated if you want to actually push testing into the post",
    "start": "2839640",
    "end": "2845440"
  },
  {
    "text": "deployment part of the process as well and we see people doing a lot of everything along that Spectrum",
    "start": "2845440",
    "end": "2853260"
  },
  {
    "text": "Yeah you mentioned um States desired State and looking at",
    "start": "2853680",
    "end": "2859119"
  },
  {
    "start": "2854000",
    "end": "2948000"
  },
  {
    "text": "state but you didn't mention the word drift um and so maybe you can just this is we",
    "start": "2859119",
    "end": "2865240"
  },
  {
    "text": "are two minutes out but in terms of infrastructure as code and the various",
    "start": "2865240",
    "end": "2870339"
  },
  {
    "text": "the both the configuration part and the instantiation part can you talk about drift and the complexities that you're",
    "start": "2870339",
    "end": "2876760"
  },
  {
    "text": "seeing there in Solutions yes absolutely I just got back from RE invent last week and talking to a lot of",
    "start": "2876760",
    "end": "2883060"
  },
  {
    "text": "folks and I I heard a lot of people say we require any changes to infrastructure",
    "start": "2883060",
    "end": "2888160"
  },
  {
    "text": "go through infrastructures code there are break glass scenarios where if there's a security issue somebody can go",
    "start": "2888160",
    "end": "2893440"
  },
  {
    "text": "in and make manual changes so a lot of people are locking down the ability to make changes but sometimes either it's",
    "start": "2893440",
    "end": "2900579"
  },
  {
    "text": "standard practice or occasionally somebody will log in and make a manual change when they make a manual change the actual state of your infrastructure",
    "start": "2900579",
    "end": "2907300"
  },
  {
    "text": "no longer matches what you thought you deployed so infrastructure is code tools like plumy terraform others can actually",
    "start": "2907300",
    "end": "2913359"
  },
  {
    "text": "detect that and say whoa and what you thought you deployed is actually different maybe opened you know Port 22",
    "start": "2913359",
    "end": "2919780"
  },
  {
    "text": "to SSH into a box and do some debugging and then you forgot to close it afterwards drift detection can tell you",
    "start": "2919780",
    "end": "2925359"
  },
  {
    "text": "hey you didn't mean to leave 422 open and then it can reconcile the state it can go either reapply the changes or if",
    "start": "2925359",
    "end": "2932619"
  },
  {
    "text": "you want to maybe you added a tag to a server you can ingest that back into your infrastructures code so that's what",
    "start": "2932619",
    "end": "2937960"
  },
  {
    "text": "drift detection is definitely a very important thing to do but I would say start from everything must go through a",
    "start": "2937960",
    "end": "2943720"
  },
  {
    "text": "pipeline and then layer on drift detection after that great so everyone we are at time I want",
    "start": "2943720",
    "end": "2951760"
  },
  {
    "start": "2948000",
    "end": "2982000"
  },
  {
    "text": "to thank Joe for giving us his time and giving us a wonderful history lesson on infrastructure's code and posits on the",
    "start": "2951760",
    "end": "2958720"
  },
  {
    "text": "future thank you for coming to this track as it concludes hope you learned a lot and post if you have questions have",
    "start": "2958720",
    "end": "2966400"
  },
  {
    "text": "a great rest of your day everyone thanks Carmen thanks everyone bye",
    "start": "2966400",
    "end": "2972780"
  },
  {
    "text": "[Music] thank you",
    "start": "2974890",
    "end": "2981000"
  }
]