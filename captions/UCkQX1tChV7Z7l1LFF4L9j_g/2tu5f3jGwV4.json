[
  {
    "text": "hi folks so it doesn't say on the slide",
    "start": "3910",
    "end": "6910"
  },
  {
    "text": "but I work at Cloudera this is work I've",
    "start": "6910",
    "end": "8680"
  },
  {
    "text": "done on my own recognizance but if you",
    "start": "8680",
    "end": "10809"
  },
  {
    "text": "want to hear about work I've done during",
    "start": "10809",
    "end": "12910"
  },
  {
    "text": "the day I guess I'm giving the talk",
    "start": "12910",
    "end": "14769"
  },
  {
    "text": "immediately after this next door about",
    "start": "14769",
    "end": "16510"
  },
  {
    "text": "interpretive or machine learning",
    "start": "16510",
    "end": "17830"
  },
  {
    "text": "products but this is an Operations Talk",
    "start": "17830",
    "end": "20400"
  },
  {
    "text": "how many in the room know what",
    "start": "20400",
    "end": "22840"
  },
  {
    "text": "serverless is okay most of you so this",
    "start": "22840",
    "end": "28029"
  },
  {
    "text": "is going to be pretty high-level",
    "start": "28029",
    "end": "29279"
  },
  {
    "text": "material in that sense but I hit the",
    "start": "29279",
    "end": "31480"
  },
  {
    "text": "connection to data science and machine",
    "start": "31480",
    "end": "33340"
  },
  {
    "text": "learning may be a new idea for some of",
    "start": "33340",
    "end": "36640"
  },
  {
    "text": "you so these are computers as as we all",
    "start": "36640",
    "end": "42129"
  },
  {
    "text": "know these things dreadful things we",
    "start": "42129",
    "end": "43899"
  },
  {
    "text": "don't want them and one of the wonderful",
    "start": "43899",
    "end": "45370"
  },
  {
    "text": "things about the cloud is you no longer",
    "start": "45370",
    "end": "46960"
  },
  {
    "text": "have to live with your computers they're",
    "start": "46960",
    "end": "48489"
  },
  {
    "text": "feeding and care is somebody else's",
    "start": "48489",
    "end": "51190"
  },
  {
    "text": "problem which is great but doesn't solve",
    "start": "51190",
    "end": "53230"
  },
  {
    "text": "all your problems",
    "start": "53230",
    "end": "54160"
  },
  {
    "text": "so you still have this problem which is",
    "start": "54160",
    "end": "56260"
  },
  {
    "text": "that you now have a very efficient way",
    "start": "56260",
    "end": "58180"
  },
  {
    "text": "of setting money on fire",
    "start": "58180",
    "end": "60039"
  },
  {
    "text": "that's because partly because of you",
    "start": "60039",
    "end": "62079"
  },
  {
    "text": "know uncertainty and billing partly",
    "start": "62079",
    "end": "63940"
  },
  {
    "text": "because cloud gets expensive fast for",
    "start": "63940",
    "end": "66510"
  },
  {
    "text": "modestly complicated applications and",
    "start": "66510",
    "end": "69880"
  },
  {
    "text": "one of the reasons for that is",
    "start": "69880",
    "end": "70900"
  },
  {
    "text": "inevitably machines stand idle they are",
    "start": "70900",
    "end": "73600"
  },
  {
    "text": "not necessarily fully utilized at all",
    "start": "73600",
    "end": "75730"
  },
  {
    "text": "times and you've still got a problem",
    "start": "75730",
    "end": "78280"
  },
  {
    "text": "which is the computer is somewhere and",
    "start": "78280",
    "end": "80170"
  },
  {
    "text": "that means you need to configure secure",
    "start": "80170",
    "end": "84550"
  },
  {
    "text": "and maintain the operating system this",
    "start": "84550",
    "end": "86470"
  },
  {
    "text": "is a recent video of me configuring",
    "start": "86470",
    "end": "88150"
  },
  {
    "text": "securing and maintaining an operating",
    "start": "88150",
    "end": "89590"
  },
  {
    "text": "system and it's you know it's a task",
    "start": "89590",
    "end": "92590"
  },
  {
    "text": "that never ends and it not it's not",
    "start": "92590",
    "end": "93940"
  },
  {
    "text": "necessarily what I want to do for a",
    "start": "93940",
    "end": "95770"
  },
  {
    "text": "living you know sometimes it's fun",
    "start": "95770",
    "end": "97600"
  },
  {
    "text": "noodling around with kernel modules but",
    "start": "97600",
    "end": "99580"
  },
  {
    "text": "it's not generally what most of us are",
    "start": "99580",
    "end": "101350"
  },
  {
    "text": "paid to do and for most people it's not",
    "start": "101350",
    "end": "103690"
  },
  {
    "text": "what makes their employer money what",
    "start": "103690",
    "end": "105340"
  },
  {
    "text": "makes their employer money is business",
    "start": "105340",
    "end": "106900"
  },
  {
    "text": "logic applications and machine learning",
    "start": "106900",
    "end": "109800"
  },
  {
    "text": "so we'd love to focus on that so you can",
    "start": "109800",
    "end": "114400"
  },
  {
    "text": "think about moving to the cloud as",
    "start": "114400",
    "end": "115990"
  },
  {
    "text": "putting the server in the trash and",
    "start": "115990",
    "end": "117760"
  },
  {
    "text": "forgetting about that that's now",
    "start": "117760",
    "end": "118900"
  },
  {
    "text": "somebody else's problem it's been",
    "start": "118900",
    "end": "119980"
  },
  {
    "text": "abstracted away the conceit",
    "start": "119980",
    "end": "122380"
  },
  {
    "text": "at least or the goal or the claim of",
    "start": "122380",
    "end": "124180"
  },
  {
    "text": "server lists is that you can put two",
    "start": "124180",
    "end": "125950"
  },
  {
    "text": "more things in the trash and forget",
    "start": "125950",
    "end": "127120"
  },
  {
    "text": "about them one is the operating system",
    "start": "127120",
    "end": "128709"
  },
  {
    "text": "the other is the container technology",
    "start": "128709",
    "end": "131260"
  },
  {
    "text": "and all your left was at that point is",
    "start": "131260",
    "end": "133630"
  },
  {
    "text": "the application the business logic model",
    "start": "133630",
    "end": "135700"
  },
  {
    "text": "the machine learning",
    "start": "135700",
    "end": "136660"
  },
  {
    "text": "that's the goal anyway and that's the",
    "start": "136660",
    "end": "141850"
  },
  {
    "text": "goal of service this is what service is",
    "start": "141850",
    "end": "143860"
  },
  {
    "text": "in a slide basically civilus is you can",
    "start": "143860",
    "end": "146860"
  },
  {
    "text": "think of in simple terms as computers",
    "start": "146860",
    "end": "149800"
  },
  {
    "text": "that exist for the duration of a single",
    "start": "149800",
    "end": "151510"
  },
  {
    "text": "function call so this isn't micro",
    "start": "151510",
    "end": "153250"
  },
  {
    "text": "services computers that serve a single",
    "start": "153250",
    "end": "155260"
  },
  {
    "text": "function it's computers that exist",
    "start": "155260",
    "end": "157690"
  },
  {
    "text": "literally for the duration of a single",
    "start": "157690",
    "end": "159100"
  },
  {
    "text": "function call so this is a service",
    "start": "159100",
    "end": "161230"
  },
  {
    "text": "infrastructure that offers an adding",
    "start": "161230",
    "end": "163120"
  },
  {
    "text": "machine and in between these two calls",
    "start": "163120",
    "end": "165880"
  },
  {
    "text": "to the adding machine API the person who",
    "start": "165880",
    "end": "168100"
  },
  {
    "text": "deployed this application has no",
    "start": "168100",
    "end": "170500"
  },
  {
    "text": "infrastructure and the nice thing about",
    "start": "170500",
    "end": "173860"
  },
  {
    "text": "that is this you are charged by the",
    "start": "173860",
    "end": "176320"
  },
  {
    "text": "second essentially by the CPU second",
    "start": "176320",
    "end": "178330"
  },
  {
    "text": "modulo some overhead associated with",
    "start": "178330",
    "end": "180640"
  },
  {
    "text": "setting things up your pricing scales in",
    "start": "180640",
    "end": "183760"
  },
  {
    "text": "exact proportion to how much time you're",
    "start": "183760",
    "end": "185770"
  },
  {
    "text": "using these applications for and",
    "start": "185770",
    "end": "188400"
  },
  {
    "text": "generally speaking for many use cases",
    "start": "188400",
    "end": "190930"
  },
  {
    "text": "that will result in a significant saving",
    "start": "190930",
    "end": "192940"
  },
  {
    "text": "just as an example and this is not",
    "start": "192940",
    "end": "195340"
  },
  {
    "text": "machine learning or data science these",
    "start": "195340",
    "end": "197470"
  },
  {
    "text": "are the numbers for the readability API",
    "start": "197470",
    "end": "199540"
  },
  {
    "text": "readability is an API essentially a",
    "start": "199540",
    "end": "202000"
  },
  {
    "text": "little bit like Instapaper or reader",
    "start": "202000",
    "end": "205000"
  },
  {
    "text": "mode in Safari that takes a article on",
    "start": "205000",
    "end": "208810"
  },
  {
    "text": "the web that's full of pull quotes and",
    "start": "208810",
    "end": "210340"
  },
  {
    "text": "advertising and images and extracts out",
    "start": "210340",
    "end": "212710"
  },
  {
    "text": "the actual legible text that's available",
    "start": "212710",
    "end": "215680"
  },
  {
    "text": "as an API they used to run it on ec2",
    "start": "215680",
    "end": "217300"
  },
  {
    "text": "where it cost them $10,000 a month they",
    "start": "217300",
    "end": "219520"
  },
  {
    "text": "switched over to AWS lambda one of these",
    "start": "219520",
    "end": "221580"
  },
  {
    "text": "instances of service and cost went down",
    "start": "221580",
    "end": "224830"
  },
  {
    "text": "to $400 a month which is lovely um",
    "start": "224830",
    "end": "228190"
  },
  {
    "text": "here's how you deploy on serverless I'm",
    "start": "228190",
    "end": "231459"
  },
  {
    "text": "getting to the data science I promise",
    "start": "231459",
    "end": "234180"
  },
  {
    "text": "app dot P Y is a flask server that has",
    "start": "234180",
    "end": "238360"
  },
  {
    "text": "one endpoint time that tells you the",
    "start": "238360",
    "end": "240400"
  },
  {
    "text": "time no one's going to win a Turing",
    "start": "240400",
    "end": "242410"
  },
  {
    "text": "Award for this but here's how it looks",
    "start": "242410",
    "end": "244270"
  },
  {
    "text": "deployed locally we run it and we can",
    "start": "244270",
    "end": "246250"
  },
  {
    "text": "curl that localhost URL and while we're",
    "start": "246250",
    "end": "248950"
  },
  {
    "text": "not expecting to win that Turing Award",
    "start": "248950",
    "end": "250600"
  },
  {
    "text": "we would like to share it with the world",
    "start": "250600",
    "end": "251980"
  },
  {
    "text": "so we'd like to deploy it and we're",
    "start": "251980",
    "end": "254260"
  },
  {
    "text": "gonna do that using servlets I usually",
    "start": "254260",
    "end": "256510"
  },
  {
    "text": "do that using a tool called zapper there",
    "start": "256510",
    "end": "258310"
  },
  {
    "text": "are alternatives chalices perhaps the",
    "start": "258310",
    "end": "260230"
  },
  {
    "text": "best-known one that's the official AWS",
    "start": "260230",
    "end": "262600"
  },
  {
    "text": "client I like to use Apple because in",
    "start": "262600",
    "end": "264550"
  },
  {
    "text": "principle at least it is agnostic about",
    "start": "264550",
    "end": "266440"
  },
  {
    "text": "your cloud provider and cloud era is all",
    "start": "266440",
    "end": "268960"
  },
  {
    "text": "about being gnostic",
    "start": "268960",
    "end": "270070"
  },
  {
    "text": "private providers when I run Zappa in it",
    "start": "270070",
    "end": "272860"
  },
  {
    "text": "it looks at that file app dot py figures",
    "start": "272860",
    "end": "275560"
  },
  {
    "text": "out what the end points are and in",
    "start": "275560",
    "end": "277150"
  },
  {
    "text": "particular figures out what the",
    "start": "277150",
    "end": "278230"
  },
  {
    "text": "dependencies of that application are",
    "start": "278230",
    "end": "279970"
  },
  {
    "text": "when I run deploy is bundling all those",
    "start": "279970",
    "end": "283120"
  },
  {
    "text": "dependencies up with the application",
    "start": "283120",
    "end": "284770"
  },
  {
    "text": "essentially into a tarball sending them",
    "start": "284770",
    "end": "287200"
  },
  {
    "text": "up to AWS and configuring publicly",
    "start": "287200",
    "end": "290020"
  },
  {
    "text": "accessible URL endpoints and various",
    "start": "290020",
    "end": "292200"
  },
  {
    "text": "firewall II stuff that is for our",
    "start": "292200",
    "end": "295210"
  },
  {
    "text": "purposes bookkeeping and it's wonderful",
    "start": "295210",
    "end": "297070"
  },
  {
    "text": "to have it taken care of and what you",
    "start": "297070",
    "end": "298780"
  },
  {
    "text": "get after some other output that",
    "start": "298780",
    "end": "300190"
  },
  {
    "text": "truncated is the URL if you visit that",
    "start": "300190",
    "end": "303250"
  },
  {
    "text": "URL you get the time and this time is in",
    "start": "303250",
    "end": "305440"
  },
  {
    "text": "UT because it's on the Amazon server and",
    "start": "305440",
    "end": "308340"
  },
  {
    "text": "what's actually happening when someone",
    "start": "308340",
    "end": "310780"
  },
  {
    "text": "visits that URL lots of lots of clever",
    "start": "310780",
    "end": "314260"
  },
  {
    "text": "things involving containers that AWS",
    "start": "314260",
    "end": "316360"
  },
  {
    "text": "engineer's understand and I don't but in",
    "start": "316360",
    "end": "318370"
  },
  {
    "text": "general terms on the point of view of",
    "start": "318370",
    "end": "319540"
  },
  {
    "text": "the application developer here's what's",
    "start": "319540",
    "end": "321220"
  },
  {
    "text": "happening a new machine is created the",
    "start": "321220",
    "end": "324640"
  },
  {
    "text": "code is deployed onto that machine it",
    "start": "324640",
    "end": "326560"
  },
  {
    "text": "receives the input from the HTTP",
    "start": "326560",
    "end": "329020"
  },
  {
    "text": "requests computes the result returns the",
    "start": "329020",
    "end": "331480"
  },
  {
    "text": "output and then crucially is the",
    "start": "331480",
    "end": "333070"
  },
  {
    "text": "important bit the machine is destroyed",
    "start": "333070",
    "end": "335640"
  },
  {
    "text": "that has implications for the",
    "start": "335640",
    "end": "338290"
  },
  {
    "text": "application and how it can be structured",
    "start": "338290",
    "end": "340570"
  },
  {
    "text": "and principally there's this the",
    "start": "340570",
    "end": "343570"
  },
  {
    "text": "application cannot have internal state",
    "start": "343570",
    "end": "345430"
  },
  {
    "text": "it cannot remember what happened the",
    "start": "345430",
    "end": "347590"
  },
  {
    "text": "last time the function was called",
    "start": "347590",
    "end": "348790"
  },
  {
    "text": "without the help of an outside service",
    "start": "348790",
    "end": "350470"
  },
  {
    "text": "such as a database you know you could by",
    "start": "350470",
    "end": "353500"
  },
  {
    "text": "all means do that but just just within",
    "start": "353500",
    "end": "355150"
  },
  {
    "text": "server list you cannot have state nor",
    "start": "355150",
    "end": "357730"
  },
  {
    "text": "can these workers if you like",
    "start": "357730",
    "end": "359230"
  },
  {
    "text": "communicate directly with each other",
    "start": "359230",
    "end": "361270"
  },
  {
    "text": "there are workarounds for all these",
    "start": "361270",
    "end": "362860"
  },
  {
    "text": "things but fundamentally we're working",
    "start": "362860",
    "end": "364330"
  },
  {
    "text": "in quite a functional pure function",
    "start": "364330",
    "end": "367480"
  },
  {
    "text": "world there's another much more",
    "start": "367480",
    "end": "369400"
  },
  {
    "text": "pragmatic engineering limitation that",
    "start": "369400",
    "end": "371440"
  },
  {
    "text": "will probably become less true with time",
    "start": "371440",
    "end": "373150"
  },
  {
    "text": "which is that service instances are low",
    "start": "373150",
    "end": "376450"
  },
  {
    "text": "powered short-lived machines they're low",
    "start": "376450",
    "end": "379150"
  },
  {
    "text": "powered in this specific case of AWS",
    "start": "379150",
    "end": "381070"
  },
  {
    "text": "lambda they are they've only got 1.5 gig",
    "start": "381070",
    "end": "384160"
  },
  {
    "text": "of ram at at most and crucially the",
    "start": "384160",
    "end": "387100"
  },
  {
    "text": "function has to finish in 300 seconds if",
    "start": "387100",
    "end": "389440"
  },
  {
    "text": "it doesn't finish in 300 seconds tough",
    "start": "389440",
    "end": "391450"
  },
  {
    "text": "you'd get the computer shuts down you",
    "start": "391450",
    "end": "393460"
  },
  {
    "text": "don't get half a result you get no",
    "start": "393460",
    "end": "394780"
  },
  {
    "text": "result that constrains what you can do",
    "start": "394780",
    "end": "397240"
  },
  {
    "text": "but if you're thinking pure functions",
    "start": "397240",
    "end": "400150"
  },
  {
    "text": "low powered machines that sounds a",
    "start": "400150",
    "end": "402070"
  },
  {
    "text": "little",
    "start": "402070",
    "end": "402430"
  },
  {
    "text": "like the mappers in MapReduce you're",
    "start": "402430",
    "end": "404530"
  },
  {
    "text": "thinking along the right lines for the",
    "start": "404530",
    "end": "406570"
  },
  {
    "text": "rest of the talk this is a picture of",
    "start": "406570",
    "end": "409120"
  },
  {
    "text": "data science and we would like to do",
    "start": "409120",
    "end": "412330"
  },
  {
    "text": "this sort of stuff on server list for",
    "start": "412330",
    "end": "414700"
  },
  {
    "text": "many reasons that are out to collect in",
    "start": "414700",
    "end": "416110"
  },
  {
    "text": "a second so how can we do that I just",
    "start": "416110",
    "end": "419650"
  },
  {
    "text": "want to really the focus of this talk is",
    "start": "419650",
    "end": "421840"
  },
  {
    "text": "to advertise some work I was not",
    "start": "421840",
    "end": "423430"
  },
  {
    "text": "involved in that I think is wonderful",
    "start": "423430",
    "end": "424660"
  },
  {
    "text": "this is a paper that came out of rice",
    "start": "424660",
    "end": "426340"
  },
  {
    "text": "lab at Berkeley about a fundamentally",
    "start": "426340",
    "end": "428380"
  },
  {
    "text": "it's about a new Python tool called PI R",
    "start": "428380",
    "end": "430120"
  },
  {
    "text": "n and that's what I suggest you play",
    "start": "430120",
    "end": "432280"
  },
  {
    "text": "with the paper is really interesting and",
    "start": "432280",
    "end": "435190"
  },
  {
    "text": "you can tell from the title the goal",
    "start": "435190",
    "end": "437200"
  },
  {
    "text": "here is to democratize and make more",
    "start": "437200",
    "end": "439810"
  },
  {
    "text": "inexpensive what has traditionally been",
    "start": "439810",
    "end": "442150"
  },
  {
    "text": "quite expensive and complicated namely",
    "start": "442150",
    "end": "444930"
  },
  {
    "text": "distributed computing for analytics pi r",
    "start": "444930",
    "end": "449050"
  },
  {
    "text": "n can be seen as a alternative or a",
    "start": "449050",
    "end": "451750"
  },
  {
    "text": "lightweight replacement for tools like",
    "start": "451750",
    "end": "454330"
  },
  {
    "text": "sparkle Hadoop how so well pi r n",
    "start": "454330",
    "end": "460300"
  },
  {
    "text": "essentially abstracts away server lists",
    "start": "460300",
    "end": "462760"
  },
  {
    "text": "as a back-end computational engine for",
    "start": "462760",
    "end": "466890"
  },
  {
    "text": "embarrassingly parallel operations so",
    "start": "466890",
    "end": "469810"
  },
  {
    "text": "you've got a very simple code snippet",
    "start": "469810",
    "end": "472300"
  },
  {
    "text": "here we instantiate an executor this is",
    "start": "472300",
    "end": "474790"
  },
  {
    "text": "this object that knows how to on-demand",
    "start": "474790",
    "end": "477010"
  },
  {
    "text": "create lambda instances and then any",
    "start": "477010",
    "end": "479800"
  },
  {
    "text": "function that we can map across inputs",
    "start": "479800",
    "end": "481870"
  },
  {
    "text": "so this is the last line here is the",
    "start": "481870",
    "end": "483850"
  },
  {
    "text": "thing you might normally write as a list",
    "start": "483850",
    "end": "485290"
  },
  {
    "text": "comprehension in Python if you can turn",
    "start": "485290",
    "end": "487210"
  },
  {
    "text": "that into a Python map function then you",
    "start": "487210",
    "end": "488950"
  },
  {
    "text": "can turn it into a PI Ren map function",
    "start": "488950",
    "end": "490570"
  },
  {
    "text": "and we're mapping expensive function",
    "start": "490570",
    "end": "492880"
  },
  {
    "text": "across the list of inputs and we get the",
    "start": "492880",
    "end": "494830"
  },
  {
    "text": "results quickly and inexpensively and",
    "start": "494830",
    "end": "497710"
  },
  {
    "text": "with on-demand infrastructure that's",
    "start": "497710",
    "end": "499690"
  },
  {
    "text": "what's going on in the background here",
    "start": "499690",
    "end": "501160"
  },
  {
    "text": "can have a couple more minutes because",
    "start": "501160",
    "end": "502840"
  },
  {
    "text": "yeah so as a specific example you can",
    "start": "502840",
    "end": "507040"
  },
  {
    "text": "imagine scraping a website for lots of",
    "start": "507040",
    "end": "508810"
  },
  {
    "text": "URLs that's you know something I do day",
    "start": "508810",
    "end": "511330"
  },
  {
    "text": "to day perhaps a more interesting and",
    "start": "511330",
    "end": "514450"
  },
  {
    "text": "classical Hadoop II benchmark is this",
    "start": "514450",
    "end": "517390"
  },
  {
    "text": "it's counting the words in a document",
    "start": "517390",
    "end": "519370"
  },
  {
    "text": "Docs there is a long list of documents",
    "start": "519370",
    "end": "521740"
  },
  {
    "text": "complete works of Shakespeare Wikipedia",
    "start": "521740",
    "end": "523719"
  },
  {
    "text": "whatever we've got a lambda function in",
    "start": "523720",
    "end": "525760"
  },
  {
    "text": "there lambda the anonymous function not",
    "start": "525760",
    "end": "528670"
  },
  {
    "text": "lambda the AWS then that knows how to",
    "start": "528670",
    "end": "531640"
  },
  {
    "text": "count words and then we collect results",
    "start": "531640",
    "end": "534160"
  },
  {
    "text": "and all the computation is happening in",
    "start": "534160",
    "end": "536040"
  },
  {
    "text": "ploud just as a rough idea all",
    "start": "536040",
    "end": "538740"
  },
  {
    "text": "benchmarks are dubious at best but this",
    "start": "538740",
    "end": "541320"
  },
  {
    "text": "is the benchmark reported by the pyrin",
    "start": "541320",
    "end": "543240"
  },
  {
    "text": "folks ballpark a few hundred AWS lambda",
    "start": "543240",
    "end": "546779"
  },
  {
    "text": "instances roughly equivalent to a",
    "start": "546779",
    "end": "548579"
  },
  {
    "text": "hundred node spark cluster for that kind",
    "start": "548579",
    "end": "550560"
  },
  {
    "text": "of classical embarrassingly parallel",
    "start": "550560",
    "end": "552839"
  },
  {
    "text": "Eliza bull analytics distribution but",
    "start": "552839",
    "end": "557250"
  },
  {
    "text": "that's not the point the point is I was",
    "start": "557250",
    "end": "559290"
  },
  {
    "text": "able to do that on my own without",
    "start": "559290",
    "end": "561060"
  },
  {
    "text": "calling and calling an adult without",
    "start": "561060",
    "end": "562920"
  },
  {
    "text": "calling a data engineer to help me get",
    "start": "562920",
    "end": "564750"
  },
  {
    "text": "set up without speaking to the people",
    "start": "564750",
    "end": "567930"
  },
  {
    "text": "who were called the purse strings and",
    "start": "567930",
    "end": "569220"
  },
  {
    "text": "are able to make decisions like we want",
    "start": "569220",
    "end": "570750"
  },
  {
    "text": "to stand up a long live spark cluster",
    "start": "570750",
    "end": "573560"
  },
  {
    "text": "machine learning of course not all of it",
    "start": "573560",
    "end": "576120"
  },
  {
    "text": "is embarrassingly parallel eyes above it",
    "start": "576120",
    "end": "578100"
  },
  {
    "text": "is I think the most obvious example is",
    "start": "578100",
    "end": "580230"
  },
  {
    "text": "hyper parameter search that's of course",
    "start": "580230",
    "end": "581819"
  },
  {
    "text": "when you essentially try lots of numbers",
    "start": "581819",
    "end": "584699"
  },
  {
    "text": "and see which ones are the best that is",
    "start": "584699",
    "end": "587370"
  },
  {
    "text": "embarrassing and parallelizable as long",
    "start": "587370",
    "end": "589649"
  },
  {
    "text": "as training you can do it in under 300",
    "start": "589649",
    "end": "591630"
  },
  {
    "text": "seconds you can you can use PI R n as",
    "start": "591630",
    "end": "594810"
  },
  {
    "text": "the executor for that kind of job it",
    "start": "594810",
    "end": "598350"
  },
  {
    "text": "also raises the interesting possibility",
    "start": "598350",
    "end": "599459"
  },
  {
    "text": "of mapping gradient descent across these",
    "start": "599459",
    "end": "602310"
  },
  {
    "text": "things not all implementations of grains",
    "start": "602310",
    "end": "605250"
  },
  {
    "text": "that are trivially embarrassingly",
    "start": "605250",
    "end": "607230"
  },
  {
    "text": "parallel and there are of course",
    "start": "607230",
    "end": "608550"
  },
  {
    "text": "communication cost to sending large",
    "start": "608550",
    "end": "610589"
  },
  {
    "text": "batches of data out to nodes so this",
    "start": "610589",
    "end": "612569"
  },
  {
    "text": "isn't as simple as mapping a URL scraper",
    "start": "612569",
    "end": "616260"
  },
  {
    "text": "across a pyro executor additionally in",
    "start": "616260",
    "end": "620010"
  },
  {
    "text": "the real world distributed systems",
    "start": "620010",
    "end": "621959"
  },
  {
    "text": "involve stragglers they involve faults",
    "start": "621959",
    "end": "624060"
  },
  {
    "text": "and you need a district radiant descent",
    "start": "624060",
    "end": "626430"
  },
  {
    "text": "algorithm that is robust against that",
    "start": "626430",
    "end": "629010"
  },
  {
    "text": "let's say a synchronicity I'm working on",
    "start": "629010",
    "end": "632010"
  },
  {
    "text": "this right now if anyone else is working",
    "start": "632010",
    "end": "633209"
  },
  {
    "text": "on this I'd love to talk to them it",
    "start": "633209",
    "end": "634410"
  },
  {
    "text": "using server list as the backend for",
    "start": "634410",
    "end": "636720"
  },
  {
    "text": "those kinds of fundamental machine",
    "start": "636720",
    "end": "639000"
  },
  {
    "text": "learning calculations finally PI R n is",
    "start": "639000",
    "end": "642720"
  },
  {
    "text": "I think a proof of concept rather than",
    "start": "642720",
    "end": "644760"
  },
  {
    "text": "something you necessarily want to use in",
    "start": "644760",
    "end": "646139"
  },
  {
    "text": "production there are no managers there",
    "start": "646139",
    "end": "648240"
  },
  {
    "text": "are no there are no guarantees and in a",
    "start": "648240",
    "end": "651720"
  },
  {
    "text": "distributed system given enough nodes",
    "start": "651720",
    "end": "653430"
  },
  {
    "text": "one of them is going to fail Pyron won't",
    "start": "653430",
    "end": "655500"
  },
  {
    "text": "help you there unfortunately",
    "start": "655500",
    "end": "657120"
  },
  {
    "text": "so it's up to you to do that the kind of",
    "start": "657120",
    "end": "659009"
  },
  {
    "text": "bookkeeping that's necessary for that so",
    "start": "659009",
    "end": "660630"
  },
  {
    "text": "this is not a spark alternative I'm not",
    "start": "660630",
    "end": "662430"
  },
  {
    "text": "saying you should you don't need spark",
    "start": "662430",
    "end": "663720"
  },
  {
    "text": "anymore but this is a lightweight fun",
    "start": "663720",
    "end": "666449"
  },
  {
    "text": "thing to play with that I think it's",
    "start": "666449",
    "end": "667649"
  },
  {
    "text": "very useful for machine learning people",
    "start": "667649",
    "end": "669420"
  },
  {
    "text": "data scientists to be aware of and",
    "start": "669420",
    "end": "671610"
  },
  {
    "text": "that's because final slide it raises the",
    "start": "671610",
    "end": "674400"
  },
  {
    "text": "possibility the exciting future where",
    "start": "674400",
    "end": "676140"
  },
  {
    "text": "the data engineer and the data scientist",
    "start": "676140",
    "end": "678300"
  },
  {
    "text": "are friends again because they no longer",
    "start": "678300",
    "end": "679710"
  },
  {
    "text": "have to argue about contention on an",
    "start": "679710",
    "end": "682290"
  },
  {
    "text": "expensive distributed system thank you",
    "start": "682290",
    "end": "684810"
  },
  {
    "text": "very much",
    "start": "684810",
    "end": "687080"
  }
]