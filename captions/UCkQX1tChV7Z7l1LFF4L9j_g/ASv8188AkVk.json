[
  {
    "text": "hi everybody I am Motoko Lena at Matteo Colleen on Twitter you will see my",
    "start": "4040",
    "end": "9889"
  },
  {
    "text": "endows everybody hey hi folks so it's I work for this company called",
    "start": "9889",
    "end": "19520"
  },
  {
    "text": "near firm and we are a professional services company based based in Ireland so if you need any other no - yes you",
    "start": "19520",
    "end": "27289"
  },
  {
    "text": "know we are in business just so that you know just for to take a quick survey how",
    "start": "27289",
    "end": "33740"
  },
  {
    "text": "many of you have been on call okay folks okay yeah perfect okay so once upon a",
    "start": "33740",
    "end": "42079"
  },
  {
    "text": "time and I was we just launched a new back-end API and you know everything",
    "start": "42079",
    "end": "49910"
  },
  {
    "text": "went fine and it was for a very famous a newspaper here in London and once upon a",
    "start": "49910",
    "end": "58640"
  },
  {
    "text": "time and that at that point in time they you know they called me at 7 a.m. on",
    "start": "58640",
    "end": "66310"
  },
  {
    "text": "Sunday morning because the food thing went down you know I was level 3 support",
    "start": "66310",
    "end": "75410"
  },
  {
    "text": "so I was never expected to be any at any point in time be called I was so confident of what my team has built that",
    "start": "75410",
    "end": "83900"
  },
  {
    "text": "you know so when that happened you know that was the the my our lb auto-scaling",
    "start": "83900",
    "end": "93170"
  },
  {
    "text": "cluster was full and you know the the traffic was going down to crawl nothing",
    "start": "93170",
    "end": "99380"
  },
  {
    "text": "was working and in the end the manager was really really upset about this okay",
    "start": "99380",
    "end": "104720"
  },
  {
    "text": "so that is was you know angry people were really angry I don't know how many",
    "start": "104720",
    "end": "113300"
  },
  {
    "text": "of you went into that path so well after all of this was sold and after we know we was relaxed it was very easy to fix",
    "start": "113300",
    "end": "121970"
  },
  {
    "text": "actually that point in time because you know you know what I mean just restarting all and killing all the",
    "start": "121970",
    "end": "128390"
  },
  {
    "text": "servers understanding all of them that both worked so yeah there was a very bad",
    "start": "128390",
    "end": "136670"
  },
  {
    "text": "bug on our and we got back to that bug later on but it's really that's important anyway",
    "start": "136670",
    "end": "145989"
  },
  {
    "text": "well after that I am the morning of them on Monday morning you know I I am to ask",
    "start": "145989",
    "end": "153969"
  },
  {
    "text": "my question why the question that you need to ask when those type of incidents happen windup application start slowing",
    "start": "153969",
    "end": "160060"
  },
  {
    "text": "down it's you have a performance issue you have a problem in production is you need to ask why do a full post-mortem",
    "start": "160060",
    "end": "166299"
  },
  {
    "text": "debugging session post mortem post-mortem on the incident so you know what happened and what has caused the",
    "start": "166299",
    "end": "173169"
  },
  {
    "text": "problems that led to to be called on a Sunday morning and maybe question a little bit of life today so and the",
    "start": "173169",
    "end": "182650"
  },
  {
    "text": "answer is always because there is a bottleneck right this is all it was one bottleneck on your system that is being hit and that's",
    "start": "182650",
    "end": "189280"
  },
  {
    "text": "why you your things cuts get slow or essentially fail badly at some point and",
    "start": "189280",
    "end": "194980"
  },
  {
    "text": "it's all because there is a bottleneck and your system cannot grow and then though that bigger flow of data or that",
    "start": "194980",
    "end": "202389"
  },
  {
    "text": "it's that is expected so and this is probably the most important part of the talk so because bottleneck okay and then",
    "start": "202389",
    "end": "209260"
  },
  {
    "text": "we got into some more technical details so there is two to big question on if you're working on no js' on why a",
    "start": "209260",
    "end": "216939"
  },
  {
    "text": "process can be slow and and bottlenecks",
    "start": "216939",
    "end": "223180"
  },
  {
    "text": "and this basically two kinds of bottleneck on a node.js application they both the first one is the bottleneck is",
    "start": "223180",
    "end": "229540"
  },
  {
    "text": "internal so you have about an internal bottleneck and I'd say that the DOJ's process is on fire typically it ends up",
    "start": "229540",
    "end": "236409"
  },
  {
    "text": "with the CPU 200 percent wait it's a single threaded system with a CPU at 200% why this can happen we",
    "start": "236409",
    "end": "244209"
  },
  {
    "text": "talk about it again topics like I have a 50 minute slot so you know we need to I",
    "start": "244209",
    "end": "250209"
  },
  {
    "text": "need to build up a little bit of tension then the second part is the botton",
    "start": "250209",
    "end": "256329"
  },
  {
    "text": "external and something else is on fire okay no Jesse the system to build as a tree is a runtime to build io heavy to",
    "start": "256329",
    "end": "266409"
  },
  {
    "text": "some extent up application so you need to talk to database and other API call",
    "start": "266409",
    "end": "271660"
  },
  {
    "text": "the response whatever sent it back you know maybe do some little bit of server",
    "start": "271660",
    "end": "276670"
  },
  {
    "text": "react server-side rendering and that's really slow so whatever anyway the key",
    "start": "276670",
    "end": "282010"
  },
  {
    "text": "part there is you can have a bottleneck on one side or on the other so now",
    "start": "282010",
    "end": "288630"
  },
  {
    "text": "considering that we know that there is a problem we had a problem in production and if we had a problem we know that",
    "start": "288630",
    "end": "295930"
  },
  {
    "text": "there is a bottleneck okay so what is the bottleneck and you have seen a very",
    "start": "295930",
    "end": "301660"
  },
  {
    "text": "nice keynote today talking on talking on how to know more or less in which part",
    "start": "301660",
    "end": "309700"
  },
  {
    "text": "of which API with tracing data and so on where to find your bottleneck right so",
    "start": "309700",
    "end": "315550"
  },
  {
    "text": "this is the path that you need to follow to find bottlenecks on live production system so you start with a nice",
    "start": "315550",
    "end": "322540"
  },
  {
    "text": "performance issue and you know there's a total total there for a reason okay and then you got to have on up on",
    "start": "322540",
    "end": "332800"
  },
  {
    "text": "your production system you try to reach out and you get some Diagnostics data",
    "start": "332800",
    "end": "337840"
  },
  {
    "text": "you need to you can use tracing you can use use what an APM you can use whatever",
    "start": "337840",
    "end": "343810"
  },
  {
    "text": "product you want okay I don't want to say one product versus another just use one okay there's a lot of companies that",
    "start": "343810",
    "end": "350080"
  },
  {
    "text": "provide these services a lot of open source projects that provides these services so I'm not I don't want to to",
    "start": "350080",
    "end": "356050"
  },
  {
    "text": "make fat to call any favorites I do app but I do not want to doing the talk so",
    "start": "356050",
    "end": "361450"
  },
  {
    "text": "the the hardest part in all of this and why you need to have those type of system in place is because you need to",
    "start": "361450",
    "end": "367960"
  },
  {
    "text": "come to a point to be able to reproduce your problem if you can't reproduce your problem you",
    "start": "367960",
    "end": "373030"
  },
  {
    "text": "are never going to be able to fix it and that's the first part and you know that is the sad sad face because that's the",
    "start": "373030",
    "end": "380440"
  },
  {
    "text": "hardest part happen more or less because you need to know exactly what your",
    "start": "380440",
    "end": "385810"
  },
  {
    "text": "product is doing and why and investigate why things are happening to some extent and you ever an understanding at least",
    "start": "385810",
    "end": "393240"
  },
  {
    "text": "10,000 feet of oh I can reproduce this now I can make my server crash hey I",
    "start": "393240",
    "end": "398620"
  },
  {
    "text": "might be now so how do you do that well how do you represent see",
    "start": "398620",
    "end": "404530"
  },
  {
    "text": "well typically what you need to do you need to eat your servers and in terms of web application comes about in",
    "start": "404530",
    "end": "410470"
  },
  {
    "text": "simulating load now I am an au jus developer so I ended up using a lot of a",
    "start": "410470",
    "end": "415660"
  },
  {
    "text": "b WK jmeter I don't know how many I mean",
    "start": "415660",
    "end": "422170"
  },
  {
    "text": "if you use a B for doing some HTTP load testing I mean if you use WK probably",
    "start": "422170",
    "end": "429280"
  },
  {
    "text": "only me I don't know James I know James did it because whatever anyway I ended",
    "start": "429280",
    "end": "434500"
  },
  {
    "text": "up writing my own thing in node it generates the same amount of load on with a B or wfk but you can script it",
    "start": "434500",
    "end": "442030"
  },
  {
    "text": "with nodejs so it's decently fast for for a single machine system you can use beasts with",
    "start": "442030",
    "end": "449260"
  },
  {
    "text": "machine guns if you want to have some more Club fun anyway if you definitely can test a CDN",
    "start": "449260",
    "end": "455860"
  },
  {
    "text": "with this so whatever anyway you you and we end up going back to our to our diagram you are",
    "start": "455860",
    "end": "461650"
  },
  {
    "text": "now able to reproduce the system right to reproduce the problem and then whoa",
    "start": "461650",
    "end": "468460"
  },
  {
    "text": "this is a very nice moment because I can you know I came the parts is now you can start the bug in this and you know you",
    "start": "468460",
    "end": "475300"
  },
  {
    "text": "can still use your tracing system your APM's use your stuff to to to gather",
    "start": "475300",
    "end": "483729"
  },
  {
    "text": "some more insights but the most important bit is this step 5 reproduce on the developer machine not the live",
    "start": "483729",
    "end": "490510"
  },
  {
    "text": "environment now I don't like coding on servers that we have deploying code",
    "start": "490510",
    "end": "496150"
  },
  {
    "text": "inside functions inside containers inside kubernetes clusters inside VMs 5",
    "start": "496150",
    "end": "504550"
  },
  {
    "text": "steps down and if I once upon a time you were able to SSH on a server open a file",
    "start": "504550",
    "end": "509860"
  },
  {
    "text": "with the I and patch it in place now not really that's not really a good way to",
    "start": "509860",
    "end": "515229"
  },
  {
    "text": "do things so if you want to do some testing and development you need to reproduce the problem on you know a",
    "start": "515229",
    "end": "521800"
  },
  {
    "text": "workstation or something so after that especially on node applications then",
    "start": "521800",
    "end": "528370"
  },
  {
    "text": "there is a big question that's kind of a big of a problem right what do you do how do you fix it because that's the",
    "start": "528370",
    "end": "533980"
  },
  {
    "text": "question so you know where to actually produce the probe you don't know exactly what the problem is and you know that on certain",
    "start": "533980",
    "end": "541399"
  },
  {
    "text": "condition your server goes down and because of that problem and so what you can do you can tap into some more",
    "start": "541399",
    "end": "548000"
  },
  {
    "text": "diagnostics which is now it's fine-grain like the tracing system provides you at 10,000 feet view or what is happening on",
    "start": "548000",
    "end": "554839"
  },
  {
    "text": "your on your on your distributed system however you know can I know what not",
    "start": "554839",
    "end": "561560"
  },
  {
    "text": "genius does how my not genius system is running my code and yes you can you can",
    "start": "561560",
    "end": "568190"
  },
  {
    "text": "tap into some more fine-grain Diagnostics data and once upon a time",
    "start": "568190",
    "end": "573649"
  },
  {
    "text": "this diagnostic data was more or less like a wall of text and you know you can was kind of the matrix and you can",
    "start": "573649",
    "end": "580850"
  },
  {
    "text": "decode it you know after some time you seeing a lot of problems and patterns and was not",
    "start": "580850",
    "end": "586700"
  },
  {
    "text": "really super straightforward to read and interpret what was happening and in the",
    "start": "586700",
    "end": "594620"
  },
  {
    "text": "end in order to fix this problem that is my perfect solution was staring at the screen for a very long time later I got",
    "start": "594620",
    "end": "602779"
  },
  {
    "text": "a dog that was a definite upgrade of my workflow because I started walking the dog probably is the same effect of me",
    "start": "602779",
    "end": "609709"
  },
  {
    "text": "walking and looking at the screen okay a lot of time to think and after all of this you got a performant application",
    "start": "609709",
    "end": "615829"
  },
  {
    "text": "out of Europe right that was the best way to prove to the bug to make to solve",
    "start": "615829",
    "end": "622610"
  },
  {
    "text": "that performance issues a performance issue with nodejs that's probably like one of one of the approach that still",
    "start": "622610",
    "end": "628880"
  },
  {
    "text": "like that's the last resort approach ok walk the dog that's my last resort approach I have",
    "start": "628880",
    "end": "635000"
  },
  {
    "text": "been as I guess I said near from his a professional service companies so we have been helping companies putting no G",
    "start": "635000",
    "end": "642980"
  },
  {
    "text": "as in production for for sometimes been working there five years so hey long",
    "start": "642980",
    "end": "648800"
  },
  {
    "text": "time and since 2000 yet five years Wow",
    "start": "648800",
    "end": "655220"
  },
  {
    "text": "and it's basically I have been traveling",
    "start": "655220",
    "end": "660800"
  },
  {
    "text": "all over the world more or less the one of the best gig as I did I was",
    "start": "660800",
    "end": "667590"
  },
  {
    "text": "I was flown to Chicago two hours went home that was that was it I really knew",
    "start": "667590",
    "end": "676560"
  },
  {
    "text": "what the problem was but whatever anyway that is the thing and you know can we do",
    "start": "676560",
    "end": "682620"
  },
  {
    "text": "better that's a question mark who knows well maybe yes so we have started building this tool at mere form",
    "start": "682620",
    "end": "688830"
  },
  {
    "text": "based on our experience solving this type of performance problems this tool is open source so you can",
    "start": "688830",
    "end": "694230"
  },
  {
    "text": "check it out full open source look at the code send poor request you know if it's for",
    "start": "694230",
    "end": "700470"
  },
  {
    "text": "people to use you can install it with NPM and it's a it it basically",
    "start": "700470",
    "end": "705660"
  },
  {
    "text": "streamlined what is our process to solve performance issues in four nodejs",
    "start": "705660",
    "end": "711990"
  },
  {
    "text": "applications so that's what what I'm talking about a little bit so clinic in reality is a big comment but it has",
    "start": "711990",
    "end": "718380"
  },
  {
    "text": "three main components in it dr. bubble probe and flame and let's go through",
    "start": "718380",
    "end": "724110"
  },
  {
    "text": "them one at a time so yeah so first one is Teaneck doctor and it it collects",
    "start": "724110",
    "end": "731700"
  },
  {
    "text": "some metrics on your node application by injecting some probes in it so it",
    "start": "731700",
    "end": "737430"
  },
  {
    "text": "monitors the garbage collector in my notes they haven't loop the health of the habit loop this magical thing we dig",
    "start": "737430",
    "end": "743910"
  },
  {
    "text": "deep into the end loop later and it monitors the CPU usage and in monitors",
    "start": "743910",
    "end": "749970"
  },
  {
    "text": "they active handles now what is a handle well a handle is one of those it comes",
    "start": "749970",
    "end": "756330"
  },
  {
    "text": "from the internals of node it's come from libuv is basically a socket or a",
    "start": "756330",
    "end": "762330"
  },
  {
    "text": "file or some other native resource that is actually mapped by known by by by",
    "start": "762330",
    "end": "771240"
  },
  {
    "text": "nodejs and that they're very important because you know those can be can have other problems so that those are important",
    "start": "771240",
    "end": "776520"
  },
  {
    "text": "stuff so in fact that was the actual problem on that we had when I was",
    "start": "776520",
    "end": "783240"
  },
  {
    "text": "working at the newspaper so anyway so this is doctor doctor it does some some",
    "start": "783240",
    "end": "790529"
  },
  {
    "text": "important stuff it plots some diagram you can run your code with doctor on",
    "start": "790529",
    "end": "795690"
  },
  {
    "text": "your local machine the type of data that we extract here is very fine-grain it generates a lot of data so it's you can run these",
    "start": "795690",
    "end": "802770"
  },
  {
    "text": "in production to some extent but not full-time because it literally get a lot of information out and it does a very",
    "start": "802770",
    "end": "811170"
  },
  {
    "text": "important stuff here and I don't know it it is able to automatically detect that",
    "start": "811170",
    "end": "817380"
  },
  {
    "text": "we had some of the normal most known problems in node.js application how do we do this well you have seen at this",
    "start": "817380",
    "end": "824970"
  },
  {
    "text": "conference is a lot of talk about machine learning and we are using tensorflow TAS internally to detect this",
    "start": "824970",
    "end": "832620"
  },
  {
    "text": "type to make those type of recommendations so check out our code it's a especially this one with the text",
    "start": "832620",
    "end": "838110"
  },
  {
    "text": "a potentially which is powered by tensorflow some others are powered by statistics do",
    "start": "838110",
    "end": "844680"
  },
  {
    "text": "we try the statistics approach didn't really work out on all cases so we are moving them to the more machine learning",
    "start": "844680",
    "end": "849990"
  },
  {
    "text": "based approach and it's a nice application on test of flow so anyway",
    "start": "849990",
    "end": "856140"
  },
  {
    "text": "we might or all those things and we create recommendations so that's what this tool does okay and it tells you",
    "start": "856140",
    "end": "861990"
  },
  {
    "text": "what is the what we guess what is the problem your your node application the",
    "start": "861990",
    "end": "867180"
  },
  {
    "text": "way we build this I sit down with a state as a statistician for for some time like that like a scientist for some",
    "start": "867180",
    "end": "873600"
  },
  {
    "text": "time and basically said oh if I see this curve that's the problem if I see these are the curve that's the problem and",
    "start": "873600",
    "end": "879990"
  },
  {
    "text": "they said well you know we can build software to detect those so that's how this tool was born then the next one is",
    "start": "879990",
    "end": "886620"
  },
  {
    "text": "a clinic flame it's basically a flame graph tool with a nice UI built for for",
    "start": "886620",
    "end": "892560"
  },
  {
    "text": "no GS and it called it does CPU sampling as all things is based on the v8",
    "start": "892560",
    "end": "900360"
  },
  {
    "text": "profiler and stuff like that and you collect tracks top top of the stack frequency so basically you have a you",
    "start": "900360",
    "end": "906510"
  },
  {
    "text": "know code that your call stack samples it take it into and you know after the",
    "start": "906510",
    "end": "912630"
  },
  {
    "text": "run is finished we take all the samples and we collect some it does some averages and collect some metrics so it",
    "start": "912630",
    "end": "918990"
  },
  {
    "text": "creates a frame graph and you probably seen these flavors in the past and we now have some little bits and bobs so we",
    "start": "918990",
    "end": "924720"
  },
  {
    "text": "are able to know detect where the bottleneck is so in this case we have a nice thing that is inside node modules",
    "start": "924720",
    "end": "931980"
  },
  {
    "text": "in nodes I don't know but the nice part is there that we have a bar here which it tells",
    "start": "931980",
    "end": "937559"
  },
  {
    "text": "you which on which thing you need to focus your attention on and we are able to end all certain components of certain",
    "start": "937559",
    "end": "944579"
  },
  {
    "text": "data from v8 itself for example we can detect inlining we can detect other optimizations that are happening so it",
    "start": "944579",
    "end": "951299"
  },
  {
    "text": "can be quite powerful and those are under options and we differentiate between code your code and the",
    "start": "951299",
    "end": "956790"
  },
  {
    "text": "dependencies so now let's go back to Babel profit is kind of the new thing to",
    "start": "956790",
    "end": "962279"
  },
  {
    "text": "some extent it's you know the question is if you have a problem and you have a",
    "start": "962279",
    "end": "969449"
  },
  {
    "text": "problem you're not application now those can be extremely complex to debug because it's not most of the time they",
    "start": "969449",
    "end": "975179"
  },
  {
    "text": "do not come down to just being there is a query on there is a credo my data as",
    "start": "975179",
    "end": "982350"
  },
  {
    "text": "it is slow okay they come down to some very complex interactions between database queries",
    "start": "982350",
    "end": "988100"
  },
  {
    "text": "promises next sticks set immediate timers and whatever can get complicated",
    "start": "988100",
    "end": "995100"
  },
  {
    "text": "it can get very complicated if you want to so it creates a bubble graph which is this type of diagram which is a",
    "start": "995100",
    "end": "1001519"
  },
  {
    "text": "visualization of a synchronous activity in your node.js system so we'll go through through this later with a lot of",
    "start": "1001519",
    "end": "1008179"
  },
  {
    "text": "examples so just so that you know so now the question is going back to our",
    "start": "1008179",
    "end": "1014089"
  },
  {
    "text": "original starting point is where is the bottleneck we can ask doctor where is the bottleneck and you know it will give",
    "start": "1014089",
    "end": "1020480"
  },
  {
    "text": "you two answers will choose two recommendations in one case if if we say that the process problem is in node we",
    "start": "1020480",
    "end": "1027500"
  },
  {
    "text": "tell you a news clinic claim if we tell if it's you know if it's an i/o problem",
    "start": "1027500",
    "end": "1033918"
  },
  {
    "text": "it's slowing down because of fire issues then we tell us below probe so now it's",
    "start": "1033919",
    "end": "1040250"
  },
  {
    "text": "the moment of a live demo so the demo gods may be with me hopefully we'll see",
    "start": "1040250",
    "end": "1046610"
  },
  {
    "text": "I don't know so let's see if my doctor container is up my dock and container is",
    "start": "1046610",
    "end": "1053240"
  },
  {
    "text": "up so hey so first thing we have a node server okay and this is my node server",
    "start": "1053240",
    "end": "1059299"
  },
  {
    "text": "and what we can do with my node server and we can we can send an HTTP",
    "start": "1059299",
    "end": "1065610"
  },
  {
    "text": "to it okay look at it's slow okay it's perceivably slow so what does this thing",
    "start": "1065610",
    "end": "1073530"
  },
  {
    "text": "does okay so well let's let's look it up and it's it's basically an HTTP endpoint",
    "start": "1073530",
    "end": "1079799"
  },
  {
    "text": "that does couple of queries and returns and compute MAGIX and returns in the tournament or something okay",
    "start": "1079799",
    "end": "1086070"
  },
  {
    "text": "so let's so let's do a benchmark so I'm using my leg my autocannon library so",
    "start": "1086070",
    "end": "1092940"
  },
  {
    "text": "I'm doing with two connection per second because I think this is pretty slow for five seconds and then I'm doing some",
    "start": "1092940",
    "end": "1098640"
  },
  {
    "text": "some little magical tricks because this is no js' application so basically I can",
    "start": "1098640",
    "end": "1103980"
  },
  {
    "text": "run my tests straight again my node process so we're starting up the process the tackling which one which port is",
    "start": "1103980",
    "end": "1109530"
  },
  {
    "text": "listening to and automatically ran my load test little note so we can do this",
    "start": "1109530",
    "end": "1115020"
  },
  {
    "text": "type of things so you can see here that you know latest variable it's 50% on is",
    "start": "1115020",
    "end": "1122910"
  },
  {
    "text": "a 1.3 seconds at the 50% percentile if",
    "start": "1122910",
    "end": "1128040"
  },
  {
    "text": "you go to 99% well decent got so bad but we also sample the number of requests per",
    "start": "1128040",
    "end": "1133440"
  },
  {
    "text": "seconds and again those numbers are not really encouraging let's see if I ramped these up to maybe a hundred connections",
    "start": "1133440",
    "end": "1140429"
  },
  {
    "text": "and you know this will be a very nice number very round okay so that's a very",
    "start": "1140429",
    "end": "1148919"
  },
  {
    "text": "nice number okay and note that the minimum goes so high because for some",
    "start": "1148919",
    "end": "1154049"
  },
  {
    "text": "very bad approximation bug that I have in outer can so well you know how do you",
    "start": "1154049",
    "end": "1159150"
  },
  {
    "text": "debug this well you could you use node clinics so you do not clinic a clinic doctor which is hour or two and then we",
    "start": "1159150",
    "end": "1166559"
  },
  {
    "text": "can still use our cannon inside clinics so we can do with two connection five seconds on slash and then we do note 1.2",
    "start": "1166559",
    "end": "1175350"
  },
  {
    "text": "yes so we just keep hitting hour or two with this and you know it spins up our",
    "start": "1175350",
    "end": "1181740"
  },
  {
    "text": "process inject the probes and that we need and it's actually run so and then",
    "start": "1181740",
    "end": "1187440"
  },
  {
    "text": "it analyzes the data is running tests will flow now so that's you know and it's also rendering an HTML page so you",
    "start": "1187440",
    "end": "1194040"
  },
  {
    "text": "see it does a bunch of stuff it also used browserify if you if you are into this so I'm actually zooming a little",
    "start": "1194040",
    "end": "1199180"
  },
  {
    "text": "Bittan so basically it says the texts are potential at your issue now we have",
    "start": "1199180",
    "end": "1205980"
  },
  {
    "text": "a bunch of things here a bunch of recommendations so you know there is",
    "start": "1205980",
    "end": "1211240"
  },
  {
    "text": "diagnose use clinic bubble trough but also is the read more section with a la",
    "start": "1211240",
    "end": "1217150"
  },
  {
    "text": "bunch of links to look into if you want",
    "start": "1217150",
    "end": "1222280"
  },
  {
    "text": "to investigate more this topic so it tells us to use babble profs oh in order",
    "start": "1222280",
    "end": "1227920"
  },
  {
    "text": "to use that we just get this bubble so",
    "start": "1227920",
    "end": "1234870"
  },
  {
    "text": "here we go and it's again it with some",
    "start": "1234870",
    "end": "1242320"
  },
  {
    "text": "load note that it had an impact in our latencies went up because babakov",
    "start": "1242320",
    "end": "1247390"
  },
  {
    "text": "generates a lot of data if you are running it in a normal production system you are definitely going to have you",
    "start": "1247390",
    "end": "1257530"
  },
  {
    "text": "know generate up to maybe half a gig of data for a neutron or something so it generates a lot of information and let",
    "start": "1257530",
    "end": "1264730"
  },
  {
    "text": "me explain why because it basically for every a synchronous activity in your system it it collects the full stack",
    "start": "1264730",
    "end": "1273400"
  },
  {
    "text": "trace for that of synchronous activity so and then you can enable this doing certain things let me zoom in again so",
    "start": "1273400",
    "end": "1281280"
  },
  {
    "text": "so for example you can see it and on this write that this is the block of a synchronous operations so you can see",
    "start": "1281280",
    "end": "1287650"
  },
  {
    "text": "that it does some synchronous activity here and it's color-coded so there is networks data crypto scheduling what is",
    "start": "1287650",
    "end": "1294490"
  },
  {
    "text": "scheduling scheduling is basically overhead promises and neck sticks and city minutes and timers and then other",
    "start": "1294490",
    "end": "1300670"
  },
  {
    "text": "other is because we are using a library  J as it has been instrumented with us in books which is the underlining",
    "start": "1300670",
    "end": "1306250"
  },
  {
    "text": "technologies that provides this in node so that's what it is and if you if you",
    "start": "1306250",
    "end": "1313630"
  },
  {
    "text": "are some issues with seeing this we can switch to another color code I don't know if you can see this better or not I",
    "start": "1313630",
    "end": "1318790"
  },
  {
    "text": "am probably not anyway then we have two important parts here one is you can see",
    "start": "1318790",
    "end": "1326080"
  },
  {
    "text": "this is 14 and the reason why this is so let's start from the top we start from",
    "start": "1326080",
    "end": "1331150"
  },
  {
    "text": "the top this is a root okay and you see that it's little thing here injuring will dig this later a",
    "start": "1331150",
    "end": "1338090"
  },
  {
    "text": "little bit later than that off we go down here and this is basically when we receive a TCP call from from the server",
    "start": "1338090",
    "end": "1345460"
  },
  {
    "text": "from the network so basically it says that we have eight frames from previous",
    "start": "1345460",
    "end": "1350720"
  },
  {
    "text": "sync operation create server and all this from North core and you know and",
    "start": "1350720",
    "end": "1355790"
  },
  {
    "text": "this is empty frames this is all of things happen natively and then you have more things happening in node core",
    "start": "1355790",
    "end": "1361940"
  },
  {
    "text": "internal so you know this is not core doing stuff you can see that we are handling our connection listener so we",
    "start": "1361940",
    "end": "1367700"
  },
  {
    "text": "have probably setting up the HTTP parser here and then it goes to you know intense mic the code of my application",
    "start": "1367700",
    "end": "1373820"
  },
  {
    "text": "and it goes into this Jes library and you can see that these stars from",
    "start": "1373820",
    "end": "1378970"
  },
  {
    "text": "this line align 11 of my application and it goes into say yes and creates a",
    "start": "1378970",
    "end": "1384950"
  },
  {
    "text": "cursor you know we are reading data from  so it creates a cursor yeah makes sense note that if we overlay on this",
    "start": "1384950",
    "end": "1392030"
  },
  {
    "text": "thing you can see that a nice pattern emerge you can see that there is lots of stuff happening here happening happening",
    "start": "1392030",
    "end": "1398630"
  },
  {
    "text": "and this is because you know we are only doing two connections so basically we",
    "start": "1398630",
    "end": "1404030"
  },
  {
    "text": "are issuing true connection at some point in time together and then those two finishes and then they choose those",
    "start": "1404030",
    "end": "1410120"
  },
  {
    "text": "to move to the second block so and then it replies okay so basically",
    "start": "1410120",
    "end": "1416090"
  },
  {
    "text": "you can see this type of path even this type of patterns happening in the system so and if you look at this one it says",
    "start": "1416090",
    "end": "1421970"
  },
  {
    "text": "that the problem is in line 13 so hey okay so we have two problems on my",
    "start": "1421970",
    "end": "1427309"
  },
  {
    "text": "system on line 11 on line 13 so you go in on line 13 ok the two queries on",
    "start": "1427309",
    "end": "1432530"
  },
  {
    "text": " so what you do I open my manga cannot my manga the manga console so I",
    "start": "1432530",
    "end": "1438559"
  },
  {
    "text": "go to my library this thing is just creating some empty M data so what we do",
    "start": "1438559",
    "end": "1443809"
  },
  {
    "text": "we have the query here yeah we have the query here that we are doing and we just",
    "start": "1443809",
    "end": "1449510"
  },
  {
    "text": "ask mom good to explain it and we can see that manga Jes is actually doing a full sorting of that collection so",
    "start": "1449510",
    "end": "1456620"
  },
  {
    "text": "probably is missing an index so if we look at it more closely we can see that",
    "start": "1456620",
    "end": "1462710"
  },
  {
    "text": "there is another collection called modules in the in here that maybe as an index I don't",
    "start": "1462710",
    "end": "1468309"
  },
  {
    "text": "know maybe maybe let's see what they",
    "start": "1468309",
    "end": "1473460"
  },
  {
    "text": "what the query planner would yeah Bronco yeah what and we'll play we will",
    "start": "1474119",
    "end": "1480340"
  },
  {
    "text": "think and in fact it's doing an index scan so and if we run this you can see",
    "start": "1480340",
    "end": "1485679"
  },
  {
    "text": "that this is like fast and if you run the previous one you can see that it's",
    "start": "1485679",
    "end": "1490960"
  },
  {
    "text": "actually not fast okay so that so what",
    "start": "1490960",
    "end": "1496749"
  },
  {
    "text": "we can do now is you know we can use this collection so instead of the previous one so we move to this one",
    "start": "1496749",
    "end": "1502929"
  },
  {
    "text": "which using module index it instead so now we can let's check what they were",
    "start": "1502929",
    "end": "1509679"
  },
  {
    "text": "thinking oh if this solved our problem so let's see with true connection if if this is our system has improved right",
    "start": "1509679",
    "end": "1519149"
  },
  {
    "text": "take some time five seconds so now we can do like 68 requests per second okay please a bit better probably not what",
    "start": "1519149",
    "end": "1526299"
  },
  {
    "text": "we'd expect maybe there's something else maybe it's just because you are doing",
    "start": "1526299",
    "end": "1532119"
  },
  {
    "text": "Chuck true connection per second right that's what we are doing that's our problem we're doing two connection per second so that's the problem",
    "start": "1532119",
    "end": "1538480"
  },
  {
    "text": "so let's ramp it up let's see if we can throw more more more resources at it",
    "start": "1538480",
    "end": "1544389"
  },
  {
    "text": "that optical world well we went up a little bit but also the latency spiked so there is some other problem that is",
    "start": "1544389",
    "end": "1551169"
  },
  {
    "text": "you know we have some other issue on this on this piece of code so we can",
    "start": "1551169",
    "end": "1559269"
  },
  {
    "text": "again go back and use doctor to tell us what change so and we can run it in the",
    "start": "1559269",
    "end": "1567159"
  },
  {
    "text": "exact same way we were running it before it just the probes run that the load tests and then generates our HTML report",
    "start": "1567159",
    "end": "1575129"
  },
  {
    "text": "and yay here we go so now it detects",
    "start": "1575129",
    "end": "1581110"
  },
  {
    "text": "something else and you detect that there is an event loop issue and this is because we are actually doing more",
    "start": "1581110",
    "end": "1586809"
  },
  {
    "text": "requests before than before now you can see that now the event loop is blocking for significant amount of time and while",
    "start": "1586809",
    "end": "1593769"
  },
  {
    "text": "before if you look closely in fact it was kind of no spiking and blocking a little bit but",
    "start": "1593769",
    "end": "1600479"
  },
  {
    "text": "the worst that was not the big source of the problem right now instead there is the way less right now instead you see",
    "start": "1600479",
    "end": "1608159"
  },
  {
    "text": "that it's massively blocking and we have the CPU running up to I was possible",
    "start": "1608159",
    "end": "1614969"
  },
  {
    "text": "that the CPU is packin too close to a 100% under more than 150% like you can",
    "start": "1614969",
    "end": "1620879"
  },
  {
    "text": "see it here like why this is happening quite that that big spike over 100 over 150 what is that now the reason for that",
    "start": "1620879",
    "end": "1628799"
  },
  {
    "text": "is not J yes you have been told for a long time that nodejs is a single",
    "start": "1628799",
    "end": "1634499"
  },
  {
    "text": "threaded system this is true javascript is single threaded so on that runtime",
    "start": "1634499",
    "end": "1642749"
  },
  {
    "text": "that specific JavaScript program is executing only one function at a time however v8 and no use trans for a lot of",
    "start": "1642749",
    "end": "1651359"
  },
  {
    "text": "other stuff so for example the garbage collector in v8 runs on a separate thread so because of rants on a separate",
    "start": "1651359",
    "end": "1658440"
  },
  {
    "text": "like 80% of the time but if it is a good blog post and talked about this from some friends of mine at Google so you",
    "start": "1658440",
    "end": "1665849"
  },
  {
    "text": "should check that out it goes to up because you know there is a guy this is",
    "start": "1665849",
    "end": "1672479"
  },
  {
    "text": "a lot of dubs just being allocated and you need to collect those so that's where that's why it's spiking over so",
    "start": "1672479",
    "end": "1679619"
  },
  {
    "text": "what does doctor recommends doctor recommends to use clinic flame that's",
    "start": "1679619",
    "end": "1685139"
  },
  {
    "text": "what you're going to use you probably got got the mood of this so",
    "start": "1685139",
    "end": "1690829"
  },
  {
    "text": "now and you know we're generating the stuff and as again take some time to do",
    "start": "1693739",
    "end": "1705299"
  },
  {
    "text": "the analysis so let me turn on this is a feature nice feature here that my team",
    "start": "1705299",
    "end": "1712079"
  },
  {
    "text": "is putting in called presentation mode hopefully you will actually see this a little bit better so you can see a",
    "start": "1712079",
    "end": "1718379"
  },
  {
    "text": "couple of things nice things here you can see that there is a compute magic function that is taking most of the time",
    "start": "1718379",
    "end": "1723809"
  },
  {
    "text": "like literally most of the time he spent in computer magic white computer magic",
    "start": "1723809",
    "end": "1729659"
  },
  {
    "text": "it's so much time like I don't know who put that in there okay I don't know now you",
    "start": "1729659",
    "end": "1736470"
  },
  {
    "text": "can see a bunch of stuff happening and that's dominating this thing but you can also check in for example v8 so you can",
    "start": "1736470",
    "end": "1744540"
  },
  {
    "text": "enable internal v8 details so you can actually dig deep on what v8 is doing and you know you can do the back from v8",
    "start": "1744540",
    "end": "1752850"
  },
  {
    "text": "runtime native the dagger expression stuff but there is also this button called merge normally by default we",
    "start": "1752850",
    "end": "1759600"
  },
  {
    "text": "merge optimize and non-optimized pads together because that makes sense for",
    "start": "1759600",
    "end": "1765030"
  },
  {
    "text": "you for people to visualize because you don't want to know when a function gets optimized but in some cases you might",
    "start": "1765030",
    "end": "1770520"
  },
  {
    "text": "want to disable that and you can see that there is a completely different like shade the diagram gets a completely",
    "start": "1770520",
    "end": "1776250"
  },
  {
    "text": "different shape before and after being optimized note that you know v8 is going",
    "start": "1776250",
    "end": "1781680"
  },
  {
    "text": "to get give you a hint of one of the problems which is json.stringify",
    "start": "1781680",
    "end": "1786870"
  },
  {
    "text": "cellular life string okay what could be the problem how are we computing magic",
    "start": "1786870",
    "end": "1792420"
  },
  {
    "text": "so you know going back to our function it's on line 25 of of my files so I'm",
    "start": "1792420",
    "end": "1799320"
  },
  {
    "text": "opening up my editor and going to line 25 so line 25 compute magic Oh create a",
    "start": "1799320",
    "end": "1804690"
  },
  {
    "text": "suggestion signifies Association for Aselton okay who did this like with the engineers that put this in okay so it",
    "start": "1804690",
    "end": "1811560"
  },
  {
    "text": "was me so I'm sorry and now we have a much better alternative that doesn't",
    "start": "1811560",
    "end": "1816810"
  },
  {
    "text": "have this problem so because of this let me see if I solve the problem and by",
    "start": "1816810",
    "end": "1823230"
  },
  {
    "text": "checking again with my load tester so I can verify if my problem has been fixed here we go oh now it's probably better",
    "start": "1823230",
    "end": "1832020"
  },
  {
    "text": "right you know that look does it look better yeah likely and we can you can even check with doctor if it still you",
    "start": "1832020",
    "end": "1839640"
  },
  {
    "text": "know if the data matches what what you would expect and and so on there is of",
    "start": "1839640",
    "end": "1845490"
  },
  {
    "text": "course a lot of rooms for optimization still but you know I just wanted to show this to you you can make the two queries",
    "start": "1845490",
    "end": "1852150"
  },
  {
    "text": "in parallel for example and so on now you can see that it's way more healthier type of diagram especially the event",
    "start": "1852150",
    "end": "1858000"
  },
  {
    "text": "loop is not like it's not blocking the CPU is going up and down nice and the memory used has been that it's",
    "start": "1858000",
    "end": "1865380"
  },
  {
    "text": "doing this so for example which is very normal for nodejs systems so that's it",
    "start": "1865380",
    "end": "1870980"
  },
  {
    "text": "so let's go back to two hours lights okay so here we go so we have seen a",
    "start": "1870980",
    "end": "1879360"
  },
  {
    "text": "clinic and you know we can ask the question now how can we improve the performance of nodejs applications okay",
    "start": "1879360",
    "end": "1885179"
  },
  {
    "text": "you have been on this journey with me and we have been improved the performance of my system like 50 times",
    "start": "1885179",
    "end": "1890880"
  },
  {
    "text": "of my application of 50 times okay so",
    "start": "1890880",
    "end": "1896100"
  },
  {
    "text": "the key question that the key way to optimize the thing key thing to understand before optimizing an OGS",
    "start": "1896100",
    "end": "1903450"
  },
  {
    "text": "system is the event loop how to out that",
    "start": "1903450",
    "end": "1908669"
  },
  {
    "text": "they have no js' event loop works and this is they know GS event rope have you ever seen this diagram how many",
    "start": "1908669",
    "end": "1915720"
  },
  {
    "text": "of you have seen this dragon before okay do you understand what that works how that worked somebody somebody's nodding",
    "start": "1915720",
    "end": "1923789"
  },
  {
    "text": "I don't know okay it's when we brought this piece of documentation took us six",
    "start": "1923789",
    "end": "1929700"
  },
  {
    "text": "months to write the piece of documentation down so it's the probably the one of the little known it's one",
    "start": "1929700",
    "end": "1937139"
  },
  {
    "text": "secret piece of dog so that's super important and you know the event loop goes down through phases and you know",
    "start": "1937139",
    "end": "1944460"
  },
  {
    "text": "you get incoming connections and you react to it so anyway the important",
    "start": "1944460",
    "end": "1951149"
  },
  {
    "text": "important part is that URL that explains all of this so I'm just putting this down there this is a more high level",
    "start": "1951149",
    "end": "1957019"
  },
  {
    "text": "diagram of what that that looks like okay and we have the nodejs see our new",
    "start": "1957019",
    "end": "1962340"
  },
  {
    "text": "GS system that scheduled some activity either on the kernel I think at your barrier or with capable involve whatever",
    "start": "1962340",
    "end": "1969450"
  },
  {
    "text": "you want to use and then with the or on the thread pool and when those things",
    "start": "1969450",
    "end": "1976620"
  },
  {
    "text": "finishes they go back into an event queue and from that event you then know",
    "start": "1976620",
    "end": "1983700"
  },
  {
    "text": "Jes will execute that and what does an event look like well this is an event in",
    "start": "1983700",
    "end": "1988950"
  },
  {
    "text": "a node okay so basically when from JavaScript you add a function you create",
    "start": "1988950",
    "end": "1994169"
  },
  {
    "text": "a function that typically as a closure and maybe some state with an object or something and for an i/o event so you basically said",
    "start": "1994169",
    "end": "2001909"
  },
  {
    "text": "oh when that happens coal means it called this function then the i/o event",
    "start": "2001909",
    "end": "2007369"
  },
  {
    "text": "happens and then that specific function is called that's it so is nothing more complicated than this",
    "start": "2007369",
    "end": "2015109"
  },
  {
    "text": "that's what we receive data we send data whatever okay that's what it happens at",
    "start": "2015109",
    "end": "2021200"
  },
  {
    "text": "at the core level of the system so and but there is a question that you should",
    "start": "2021200",
    "end": "2026330"
  },
  {
    "text": "ask a question I we have talked about Iowa Veterans is what about next sticks",
    "start": "2026330",
    "end": "2033529"
  },
  {
    "text": "what about set immediate and and timers and all those stuff yes",
    "start": "2033529",
    "end": "2038929"
  },
  {
    "text": "so no before that again I said this before there is no correlation of a function execution so we execute a",
    "start": "2038929",
    "end": "2046669"
  },
  {
    "text": "function we execute a function only one at a time",
    "start": "2046669",
    "end": "2051799"
  },
  {
    "text": "so that is the key part of of an OGS system there's no parallelism of fact a lot of people seems to forget this in",
    "start": "2051799",
    "end": "2059299"
  },
  {
    "text": "practice was working with nodes so only one function runs at any given time now in node twelve we probably in node",
    "start": "2059299",
    "end": "2066950"
  },
  {
    "text": "eleven this colorless of note we have work threads so you might want to check those out then you can run beautiful",
    "start": "2066950",
    "end": "2072589"
  },
  {
    "text": "fractions in peril but on the matter of a single event loop you have only one",
    "start": "2072589",
    "end": "2079220"
  },
  {
    "text": "function that is running at any given time so and then we go to the problem of",
    "start": "2079220",
    "end": "2086169"
  },
  {
    "text": "fatal signals activity because this is fake a signals activity right what you",
    "start": "2086169",
    "end": "2092750"
  },
  {
    "text": "do if you need to you need to create do an API and that API it can be called",
    "start": "2092750",
    "end": "2099650"
  },
  {
    "text": "synchronously or asynchronously and with the you know in order to create some to",
    "start": "2099650",
    "end": "2105349"
  },
  {
    "text": "respect the contract you need to use something that creates some a synchronicity in your system now you",
    "start": "2105349",
    "end": "2110450"
  },
  {
    "text": "have next sticks and next is testing that node invented yeah we're good we",
    "start": "2110450",
    "end": "2116930"
  },
  {
    "text": "invented something and it's not browser with just pure to node not really a",
    "start": "2116930",
    "end": "2123440"
  },
  {
    "text": "great piece of technology overall it's we keep changing implementation typically a big bottleneck of nodejs so",
    "start": "2123440",
    "end": "2129069"
  },
  {
    "text": "we do performance a continuous performance optimization every three months on that library with the new v8 version comes in we tend to use the",
    "start": "2129069",
    "end": "2135579"
  },
  {
    "text": "latest and the greatest for that and then next sticks are always executed so",
    "start": "2135579",
    "end": "2140799"
  },
  {
    "text": "when you receive an area event from the underlining from the underlying",
    "start": "2140799",
    "end": "2146619"
  },
  {
    "text": "operating system neck stick are always executed as you know when the function that function finishes so when that",
    "start": "2146619",
    "end": "2152680"
  },
  {
    "text": "function finishes you execute all all of the next tick q and as part of that we",
    "start": "2152680",
    "end": "2161049"
  },
  {
    "text": "also secured promises but next team comes first so we typically execute a sticks and then we execute promises note",
    "start": "2161049",
    "end": "2168490"
  },
  {
    "text": "that we execute promises of the singular sleep but the sort of a synchronously so it's not when you do new promise that",
    "start": "2168490",
    "end": "2175059"
  },
  {
    "text": "function is called immediately but there so when you eat resolve that resolve will be actually the fact the promise",
    "start": "2175059",
    "end": "2181809"
  },
  {
    "text": "will actually be resolved in the future just to complicate things we also have",
    "start": "2181809",
    "end": "2187510"
  },
  {
    "text": "set immediate that is another thing that it does not exist in the browser at some point that it did but that's a different",
    "start": "2187510",
    "end": "2192670"
  },
  {
    "text": "chapter of life and it exercised the same flow of the ILO events so it",
    "start": "2192670",
    "end": "2199299"
  },
  {
    "text": "exercised the full pipeline like set immediate pass through all of this okay",
    "start": "2199299",
    "end": "2206920"
  },
  {
    "text": "while promise is a next stick stays within this so there is a complete",
    "start": "2206920",
    "end": "2212500"
  },
  {
    "text": "difference when you're running a lot of promises or next sticks in my application because we are never",
    "start": "2212500",
    "end": "2217869"
  },
  {
    "text": "receiving IO events so we say that we're using processed promises or next stick",
    "start": "2217869",
    "end": "2223780"
  },
  {
    "text": "you can actually starve the event loop so you can keep staying here scheduling fake a single activity never exiting and",
    "start": "2223780",
    "end": "2231000"
  },
  {
    "text": "never asking the icing higher barrier is there something that we can do so going",
    "start": "2231000",
    "end": "2240010"
  },
  {
    "text": "back to the credit to to the original question and how we optimize no TS application is the they are this part",
    "start": "2240010",
    "end": "2245559"
  },
  {
    "text": "like working with a lot of companies and clients all over the years it's it's knowing when when a piece of code run is",
    "start": "2245559",
    "end": "2253480"
  },
  {
    "text": "executed versus when another piece of code is executed what is the order like can those two things always come in the",
    "start": "2253480",
    "end": "2259359"
  },
  {
    "text": "same order are these what are they interleaved how are my flows interact with each other",
    "start": "2259359",
    "end": "2265550"
  },
  {
    "text": "how does this reflect to my garbage collector because we have a garbage collector system right how does this",
    "start": "2265550",
    "end": "2272000"
  },
  {
    "text": "impact our garbage collector which I didn't touch this this table does not talk about garbage collection",
    "start": "2272000",
    "end": "2277040"
  },
  {
    "text": "it's another 50 minutes talk so so they",
    "start": "2277040",
    "end": "2282680"
  },
  {
    "text": "tell me that yes cannot you understand how your node application work that the key the key tagline of this but it is",
    "start": "2282680",
    "end": "2288890"
  },
  {
    "text": "very important to know and really reason about these things when we see",
    "start": "2288890",
    "end": "2295360"
  },
  {
    "text": "production issue so let's so a quick example okay now you probably have seen",
    "start": "2295360",
    "end": "2304940"
  },
  {
    "text": "a right and does demo of not a yes for a long time and you'll probably see you",
    "start": "2304940",
    "end": "2309980"
  },
  {
    "text": "know how many of you using promises I mean if you know where our promises work",
    "start": "2309980",
    "end": "2318040"
  },
  {
    "text": "you know there's a high chance that you're using them run the same",
    "start": "2318940",
    "end": "2324230"
  },
  {
    "text": "okay that's become from my experience anyway a very simple mistake when you're",
    "start": "2324230",
    "end": "2330950"
  },
  {
    "text": "doing with promises is when you switch from a non promise context to a promise",
    "start": "2330950",
    "end": "2336020"
  },
  {
    "text": "and you start a promise chain you always if you're writing single a system in",
    "start": "2336020",
    "end": "2341240"
  },
  {
    "text": "note on the contest of for example all on web server you always need to put this second part the Kay you need to",
    "start": "2341240",
    "end": "2346850"
  },
  {
    "text": "react to errors you need to check if the problem is rejected why because otherwise you will leak a",
    "start": "2346850",
    "end": "2355130"
  },
  {
    "text": "file descriptor that was my problem back then I was leaking a file descriptor",
    "start": "2355130",
    "end": "2360950"
  },
  {
    "text": "because my response will never like if I remove this thing if my handler throws",
    "start": "2360950",
    "end": "2367540"
  },
  {
    "text": "my response will never be sent a response will never receive an answer or",
    "start": "2367540",
    "end": "2375530"
  },
  {
    "text": "response to my load balancer stuff and that will timeout and those file descriptor would linger in my system up",
    "start": "2375530",
    "end": "2382790"
  },
  {
    "text": "until my operating system will clean them up but that you know for some is configuration for the default",
    "start": "2382790",
    "end": "2388820"
  },
  {
    "text": "configuration is like 50 minutes or something so what anyway that was the bad mood so that's",
    "start": "2388820",
    "end": "2397560"
  },
  {
    "text": "what it is so what we are doing here we are using promise if I to to to create",
    "start": "2397560",
    "end": "2403440"
  },
  {
    "text": "some assign whose activity and then after that we send a response so this is the bubble prom",
    "start": "2403440",
    "end": "2410010"
  },
  {
    "text": "okay and I'm actually going to open it up hey it's actually working so what you",
    "start": "2410010",
    "end": "2416250"
  },
  {
    "text": "can see here that there's a lot of scheduling happening the purple one because we are using promises right so",
    "start": "2416250",
    "end": "2421950"
  },
  {
    "text": "there's a lot of scheduling activity happening and because you know that's that's what it is and let me see if I",
    "start": "2421950",
    "end": "2427350"
  },
  {
    "text": "can do Hey yeah so and we can actually open it up and we can see that when you",
    "start": "2427350",
    "end": "2434100"
  },
  {
    "text": "know when we are receiving a promise in fact this is this is actually forking and white is forking well because that's",
    "start": "2434100",
    "end": "2442830"
  },
  {
    "text": "how promises work to some extent so you have a promise and then you're something",
    "start": "2442830",
    "end": "2448620"
  },
  {
    "text": "that could you execute when the promise is executed it's basically a fourth of your main execution thread of your may",
    "start": "2448620",
    "end": "2455220"
  },
  {
    "text": "need execution of your application even though you change them together in fact that the way they the context the model",
    "start": "2455220",
    "end": "2461400"
  },
  {
    "text": "of the context the context model of this it's a forking model but one is goes nowhere okay so this goes nowhere it's",
    "start": "2461400",
    "end": "2468030"
  },
  {
    "text": "just and the other one is with the one that continues so this because you do something that",
    "start": "2468030",
    "end": "2473190"
  },
  {
    "text": "then then then then then so all of those things are actually siblings so and",
    "start": "2473190",
    "end": "2478350"
  },
  {
    "text": "that's what is happening we see another example of this in a moment and you know this cam is this is our end",
    "start": "2478350",
    "end": "2485250"
  },
  {
    "text": "and promise so going back to the talk next example I think await I mean if you",
    "start": "2485250",
    "end": "2492840"
  },
  {
    "text": "love a sink away I don't see people raising your hands so we need to have a",
    "start": "2492840",
    "end": "2497940"
  },
  {
    "text": "chat about this so you see that you are waiting here okay you do the assing",
    "start": "2497940",
    "end": "2505620"
  },
  {
    "text": "something and we do await and we specify a catch handler to avoid leaking file descriptors when these throws and we are",
    "start": "2505620",
    "end": "2514200"
  },
  {
    "text": "awaiting and doing resigned l-word hey same code as before right so this should",
    "start": "2514200",
    "end": "2520050"
  },
  {
    "text": "you it's the same diagram do you think it generates the same diagram no hmm",
    "start": "2520050",
    "end": "2529838"
  },
  {
    "text": "depends on version of noche yes true but the version that generates a different the different one has not been released",
    "start": "2530980",
    "end": "2537500"
  },
  {
    "text": "yet so oh this is probably not yeah okay",
    "start": "2537500",
    "end": "2546170"
  },
  {
    "text": "this is what a wrong image so anyway so what you can see here now is that it",
    "start": "2546170",
    "end": "2557300"
  },
  {
    "text": "changed the diagram has changed right it's it's now it's it's the 14 is",
    "start": "2557300",
    "end": "2562819"
  },
  {
    "text": "actually happening you know it's now there are three forks with the problem is we have two and now we have three and",
    "start": "2562819",
    "end": "2569150"
  },
  {
    "text": "even more and the reason for that is in fact when you're scheduling a massing",
    "start": "2569150",
    "end": "2576319"
  },
  {
    "text": "function in up until the latest changes",
    "start": "2576319",
    "end": "2581750"
  },
  {
    "text": "in this pack that happened this year so a promise a throwaway promise is",
    "start": "2581750",
    "end": "2588740"
  },
  {
    "text": "creating handle hood to make a sink away it works and in fact the sink await also",
    "start": "2588740",
    "end": "2593810"
  },
  {
    "text": "does a lot of ticks on the micro tasks use internally and that's what is being caused here and that's why you see a",
    "start": "2593810",
    "end": "2599569"
  },
  {
    "text": "difference in the diagram from a user perspective it doesn't change much but the moment you are adding a lot of our",
    "start": "2599569",
    "end": "2605900"
  },
  {
    "text": "weights and the same functions in your code that might actually impact your latency because you're basically adding",
    "start": "2605900",
    "end": "2611300"
  },
  {
    "text": "a lot deferring a lot of computation in the future that is probably not not needed at that point in time so it's",
    "start": "2611300",
    "end": "2618170"
  },
  {
    "text": "it's worthwhile to know now this was the wrong diagram so whatever no let's go",
    "start": "2618170",
    "end": "2623660"
  },
  {
    "text": "back to callbacks okay I mean if you'd allow like callbacks",
    "start": "2623660",
    "end": "2628569"
  },
  {
    "text": "okay I love callbacks I live sink away time I just like JavaScript okay this is",
    "start": "2628810",
    "end": "2635930"
  },
  {
    "text": "you know we are reading the same file three times and then concatenate with three copies like some pretty useless piece of code but it's very nice to see",
    "start": "2635930",
    "end": "2642950"
  },
  {
    "text": "why that out that will be random and we can open this up and basically you can",
    "start": "2642950",
    "end": "2649849"
  },
  {
    "text": "see that there is a little bit of scheduling true but there is a lot of data happening and in fact this isn't very nice to see",
    "start": "2649849",
    "end": "2656419"
  },
  {
    "text": "because this is not ten you know ten we started you know when we're reading a file we started segmenting the reads of",
    "start": "2656419",
    "end": "2662779"
  },
  {
    "text": "that file and you can open it up and you can see it here way this is when we",
    "start": "2662779",
    "end": "2668660"
  },
  {
    "text": "schedule the read of the file okay we do call a read file and then here a bunch",
    "start": "2668660",
    "end": "2673699"
  },
  {
    "text": "of things happen now you can see that in order to read that file we actually do three assignments activities in no js'",
    "start": "2673699",
    "end": "2679819"
  },
  {
    "text": "for five minutes fantastic okay we do three a synchronous activities in EndNote in not say yes in",
    "start": "2679819",
    "end": "2685939"
  },
  {
    "text": "Nadia's course so this is where well it's happening I'll be late so I had the",
    "start": "2685939",
    "end": "2691640"
  },
  {
    "text": "thought that word didn't have enough materials so I have a lot of stuff now",
    "start": "2691640",
    "end": "2697689"
  },
  {
    "text": "let's do the same thing with to see Kuwait you've seen it was very linear",
    "start": "2697689",
    "end": "2703130"
  },
  {
    "text": "like to go back to this this was very linear one after the other and you know this is better to read though this is",
    "start": "2703130",
    "end": "2711739"
  },
  {
    "text": "what is happening okay it's completely different why because we have all of",
    "start": "2711739",
    "end": "2717019"
  },
  {
    "text": "those throwaway promises being created and we have a throwaway promise here we",
    "start": "2717019",
    "end": "2723049"
  },
  {
    "text": "have a throw another throwaway nice throw a promise under here you see another one here and another one here",
    "start": "2723049",
    "end": "2729529"
  },
  {
    "text": "because you're doing three await right so we are going trio three throwaway promises so hey and then we have a big",
    "start": "2729529",
    "end": "2735829"
  },
  {
    "text": "promise here which is my main a single weight function which is like schedule all the stuff so hopefully this will be",
    "start": "2735829",
    "end": "2743749"
  },
  {
    "text": "sorted in not twelve so this would be probably better but that's the current",
    "start": "2743749",
    "end": "2749959"
  },
  {
    "text": "situation and you need to under it's important to visualize this and to see the difference between one and the other",
    "start": "2749959",
    "end": "2756009"
  },
  {
    "text": "so and the end result and then go to this very quickly it's with promise all",
    "start": "2756009",
    "end": "2763609"
  },
  {
    "text": "and trickle to read file so basically we are using promise only instead and we promise all we are we are getting a",
    "start": "2763609",
    "end": "2772069"
  },
  {
    "text": "diagram that is more or less look like what we would expect so we got about one throwaway promise because we call await",
    "start": "2772069",
    "end": "2779179"
  },
  {
    "text": "only ones and the other things are actually happening in parallel which is kind of what we would expect two things",
    "start": "2779179",
    "end": "2784339"
  },
  {
    "text": "so let's conclude with some performance consideration so energy yes you have if you have a",
    "start": "2784339",
    "end": "2792290"
  },
  {
    "text": "slow IO operation typically that your node application increase the number of",
    "start": "2792290",
    "end": "2798650"
  },
  {
    "text": "concurrent tasks that's what's happening because I ever slow database query my",
    "start": "2798650",
    "end": "2803900"
  },
  {
    "text": "energy as a process is either so I'm I'm not accepting new TCP connection and I've set in new HTTP requests now",
    "start": "2803900",
    "end": "2812030"
  },
  {
    "text": "because of that the memory consumption of my system is going up why well we are",
    "start": "2812030",
    "end": "2819290"
  },
  {
    "text": "allocating data structures to end all those requests right and then we are issue invented a to my database so is it",
    "start": "2819290",
    "end": "2826400"
  },
  {
    "text": "my memory consumption is going up what happens when the memory consumption goes up increase the amount of work that your",
    "start": "2826400",
    "end": "2834319"
  },
  {
    "text": "garbage collection is to do you know and two minutes yeah but I'm not going to be",
    "start": "2834319",
    "end": "2839510"
  },
  {
    "text": "late so that's fine and under a high load the garbage collector will still",
    "start": "2839510",
    "end": "2846290"
  },
  {
    "text": "pre-show CPU cycles from your JavaScript it'll pass so that the problem the",
    "start": "2846290",
    "end": "2851720"
  },
  {
    "text": "endline problem so in fact you can see in a lot of cases you can see that the",
    "start": "2851720",
    "end": "2856940"
  },
  {
    "text": "garbage collection is doing a lot of extra work and you see this your CPU on",
    "start": "2856940",
    "end": "2861950"
  },
  {
    "text": "your systems running at 100% or 200% or whatever because of there is actually",
    "start": "2861950",
    "end": "2869630"
  },
  {
    "text": "too much concurrency on your system and is allocating too much data you're not processes allocating too much data which",
    "start": "2869630",
    "end": "2875990"
  },
  {
    "text": "is actually very important to now so and unfortunately ladies YouTuber are",
    "start": "2875990",
    "end": "2881540"
  },
  {
    "text": "connected in energy yes so there is an and you wouldn't expect this but this these two things are actually very at",
    "start": "2881540",
    "end": "2888250"
  },
  {
    "text": "under high stressful conditions those two things are connected so under severe",
    "start": "2888250",
    "end": "2894950"
  },
  {
    "text": "high load those two things are are very important so it's very important to know that they are connected so some more",
    "start": "2894950",
    "end": "2901970"
  },
  {
    "text": "conclusions if you're doing any performance work send 25 performance go making things faster does not make any",
    "start": "2901970",
    "end": "2908599"
  },
  {
    "text": "sense at all so don't do this okay don't try oh I want to optimize a piece of",
    "start": "2908599",
    "end": "2914990"
  },
  {
    "text": "code no check is this code fast enough all if you're working on not core it's a bunch of people that are just",
    "start": "2914990",
    "end": "2920079"
  },
  {
    "text": "enjoying trying to squeeze like some few percentage points out of a benchmark but",
    "start": "2920079",
    "end": "2925359"
  },
  {
    "text": "that's you know that's the only thing you're getting out of it is squeezed presented points points out of a benchmark so I'm doing that all the time",
    "start": "2925359",
    "end": "2932950"
  },
  {
    "text": "so you know just I'm talking about myself you might want to choose if",
    "start": "2932950",
    "end": "2938049"
  },
  {
    "text": "you're using node you might want to choose five libraries so one is Pino it's a high-speed login library I do have stickers so come by and get",
    "start": "2938049",
    "end": "2944380"
  },
  {
    "text": "stickers and the other one is fast if I steal stickers it's a high speed web",
    "start": "2944380",
    "end": "2949630"
  },
  {
    "text": "framework so little bit of marketing we stickers and you know be aware of the rabbit-hole because performance world",
    "start": "2949630",
    "end": "2957819"
  },
  {
    "text": "takes forever so it's gonna lean unbounded tasks if you don't put an s and escape hatch",
    "start": "2957819",
    "end": "2963009"
  },
  {
    "text": "you can keep optimizing your things forever so you know you might have other",
    "start": "2963009",
    "end": "2968319"
  },
  {
    "text": "activities yeah I know that I need to stop so I'd be mag bye-bye this is fine",
    "start": "2968319",
    "end": "2974099"
  },
  {
    "text": "remember that you don't need to go ludicrous speed okay you know if you have seen the stuff it's and if you need help we are in",
    "start": "2974099",
    "end": "2983559"
  },
  {
    "text": "business near firms so come talk to me and come talk to us and yeah question",
    "start": "2983559",
    "end": "2989259"
  },
  {
    "text": "time [Applause]",
    "start": "2989259",
    "end": "2997019"
  },
  {
    "text": "we have time for one or two questions can I ask the first one do I really have to business that balanced business goals with speed yes",
    "start": "2997019",
    "end": "3004160"
  },
  {
    "text": "you do unfortunately very unfortunately you do you got you got to do that the point is",
    "start": "3004160",
    "end": "3010910"
  },
  {
    "text": "it's an unbounded activity so the most precious thing on a software development",
    "start": "3010910",
    "end": "3019130"
  },
  {
    "text": "team is developer time so if the infrastructure is if you don't have a",
    "start": "3019130",
    "end": "3025490"
  },
  {
    "text": "problem in production don't over optimize don't spend time if you're building a product that you're keep are",
    "start": "3025490",
    "end": "3032779"
  },
  {
    "text": "you one of your key characteristics and",
    "start": "3032779",
    "end": "3038089"
  },
  {
    "text": "key features is performance and speed then you want to spend the time but most",
    "start": "3038089",
    "end": "3043190"
  },
  {
    "text": "of the time you you do you have any do we have this one from yeah I think oops",
    "start": "3043190",
    "end": "3055130"
  },
  {
    "text": "so with Babel profesor based on a sin cooks which is see library it's a part",
    "start": "3055130",
    "end": "3060890"
  },
  {
    "text": "of node core all based on see stuff and to be able to track their synchronous",
    "start": "3060890",
    "end": "3066859"
  },
  {
    "text": "context from the pencil side on on which",
    "start": "3066859",
    "end": "3078230"
  },
  {
    "text": "environment because the point is you need if you're talking about the browser or you're talking about node.js for",
    "start": "3078230",
    "end": "3084140"
  },
  {
    "text": "implementing it yourself on top of that",
    "start": "3084140",
    "end": "3087700"
  },
  {
    "text": "so you should really you should really",
    "start": "3091539",
    "end": "3096740"
  },
  {
    "text": "use because it is asking hooks is implemented in c and c++ so you need to",
    "start": "3096740",
    "end": "3102380"
  },
  {
    "text": "go down at the runtime level and provide that functionality where the synchronous call is being implemented it took us two",
    "start": "3102380",
    "end": "3110509"
  },
  {
    "text": "years to ship so and then it still experimental so considered so that is the that is the",
    "start": "3110509",
    "end": "3118819"
  },
  {
    "text": "key and part of of that of that thing ok one more if we have if we have time",
    "start": "3118819",
    "end": "3124670"
  },
  {
    "text": "people are leaving so whatever but the error of it's one more these tickets though so if you wants to get your oath to protect",
    "start": "3124670",
    "end": "3129980"
  },
  {
    "text": "there is no question or okay yeah so yes",
    "start": "3129980",
    "end": "3145370"
  },
  {
    "text": "and no so that's the question that the answer is we need to in Stu instrument",
    "start": "3145370",
    "end": "3150650"
  },
  {
    "text": "the note process so you if the day if we don't have the data we can't do anything",
    "start": "3150650",
    "end": "3156050"
  },
  {
    "text": "about it okay in order to have the data there is some flag that you can pass to clinic so you can actually gather that",
    "start": "3156050",
    "end": "3163160"
  },
  {
    "text": "data store them on disk and then do the analysis and the rendering on another",
    "start": "3163160",
    "end": "3168770"
  },
  {
    "text": "machine so that is feasible of course it",
    "start": "3168770",
    "end": "3174890"
  },
  {
    "text": "doesn't work on you know postmark in debugging scenario to some extent so",
    "start": "3174890",
    "end": "3181840"
  },
  {
    "text": "okay thank you very much for saying thank you thank you",
    "start": "3181840",
    "end": "3186760"
  }
]