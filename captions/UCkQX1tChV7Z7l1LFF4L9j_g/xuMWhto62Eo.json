[
  {
    "start": "0",
    "end": "175000"
  },
  {
    "text": "my name is Matt I work in Netflix as UI engineer and I'm here tonight today to talk to you about webkit in your living",
    "start": "27840",
    "end": "34079"
  },
  {
    "text": "room now this is kind of a cheeky title but really on a lot of connected devices nowadays in your living room that our",
    "start": "34079",
    "end": "40480"
  },
  {
    "text": "Netflix enabled may be running web uh web kit after tonight's presentation I'll I'll be able to stick around for",
    "start": "40480",
    "end": "46239"
  },
  {
    "text": "the while for some questions but just to get one thing out of the way when I tell people where I work I wind up getting a",
    "start": "46239",
    "end": "52000"
  },
  {
    "text": "probably three or four questions right pretty much is oh what do you think of quick stir okay it's great oh what do",
    "start": "52000",
    "end": "57079"
  },
  {
    "text": "you think of the split oh my goodness and stock price oh my goodness and eventually it gets down to so do you",
    "start": "57079",
    "end": "62120"
  },
  {
    "text": "watch movies all day along at work you like what do you do and I I give him one canned answer his answer is yes I watch",
    "start": "62120",
    "end": "68520"
  },
  {
    "text": "movies all day long at work but in reality we only really do that on days where we have big lunches you know you",
    "start": "68520",
    "end": "73680"
  },
  {
    "text": "want to get back to work and you start watching movies we call those days our playback testing days right so you get",
    "start": "73680",
    "end": "79159"
  },
  {
    "text": "back and you hook up your headphones and you start watching Breaking Bad and then 45 minutes go by an hour goes by and you go a I need to work so you it's a",
    "start": "79159",
    "end": "87400"
  },
  {
    "text": "little tongue and cheek but when we're doing our work we all work on this on on",
    "start": "87400",
    "end": "92680"
  },
  {
    "text": "this interface so the team that I work for builds a web kit front end that runs",
    "start": "92680",
    "end": "98479"
  },
  {
    "text": "these interfaces now the application itself is native part of it is uh used",
    "start": "98479",
    "end": "104920"
  },
  {
    "text": "for things like the hardware you know touching the network doing video playback doing DRM running webkit itself",
    "start": "104920",
    "end": "110640"
  },
  {
    "text": "those are all Native but the parts that are uh webkit based in our front end is All Pure HTML CSS and JavaScript so it's",
    "start": "110640",
    "end": "118119"
  },
  {
    "text": "very much like traditional front endend engineering it just has a different set of constraints so one of the nice things",
    "start": "118119",
    "end": "124200"
  },
  {
    "text": "though is when I'm at work and we do we do our development we can work inside just about any webkit browser that we",
    "start": "124200",
    "end": "129599"
  },
  {
    "text": "want to so for instance these screenshots were taken in Safari so all day at work I got to work in Safari or",
    "start": "129599",
    "end": "135000"
  },
  {
    "text": "Chrome it's it's a real nice treat now the difference in these two in these three interfaces is the one in the",
    "start": "135000",
    "end": "141440"
  },
  {
    "text": "back this large one that's a we call that an L red interface which stands for left right up down that's when the user",
    "start": "141440",
    "end": "148120"
  },
  {
    "text": "has a remote control and they really just have four button buttons and maybe an enter button in the middle whereas the one ones on the right those are",
    "start": "148120",
    "end": "154280"
  },
  {
    "text": "pointer based interfaces so those run on things like your Wii or on TVs that have pointer",
    "start": "154280",
    "end": "160599"
  },
  {
    "text": "devices now that interface runs all over the place on tons of devices and last",
    "start": "161640",
    "end": "168120"
  },
  {
    "text": "time we had something like over 450 different devices by a bunch of different manufacturers all running our web kit in our front end now the the",
    "start": "168120",
    "end": "175680"
  },
  {
    "start": "175000",
    "end": "175000"
  },
  {
    "text": "challenge is though not all these devices are created equal so when we start seeing different differences in them we can start from the bottom and",
    "start": "175680",
    "end": "181840"
  },
  {
    "text": "know that things that that touch the hardware are going to be different based on the the chipset or the actual device",
    "start": "181840",
    "end": "187360"
  },
  {
    "text": "so you know the network stack the memory bus Graphics CPU architecture those are all different but they're not really",
    "start": "187360",
    "end": "192519"
  },
  {
    "text": "interesting to a lot of us um what's interesting to us though in the front end comes into things like the CPU the",
    "start": "192519",
    "end": "198200"
  },
  {
    "text": "GPU in your memory now sometimes memory is split where you have main memory that runs things like JavaScript and has your",
    "start": "198200",
    "end": "204319"
  },
  {
    "text": "objects in and all your variables and video memory which holds all your images now sometimes we have one pool to work",
    "start": "204319",
    "end": "210680"
  },
  {
    "text": "with where that's actually a shared resource so this this gives us a different set of challenges out there",
    "start": "210680",
    "end": "216599"
  },
  {
    "text": "typical Front Ends don't have to deal a lot with memory they don't have to worry about users on very very slow devices to",
    "start": "216599",
    "end": "222640"
  },
  {
    "text": "users on very fast devices you just kind of pick pick something in the middle and shoot for it and generally whatever is",
    "start": "222640",
    "end": "228120"
  },
  {
    "text": "in the middle of of our desktop spectrum is still at a pretty high end when you compare it to embedded devices as just a",
    "start": "228120",
    "end": "234720"
  },
  {
    "text": "marker your iPhones are about three times more powerful than our slowest device so that's that's something to",
    "start": "234720",
    "end": "241720"
  },
  {
    "text": "keep in mind as as we go through this and talk about our constraints so the the first thing I'll",
    "start": "241720",
    "end": "247319"
  },
  {
    "text": "talk about today is a little bit about device performance tips some stuff that we do to make sure that when we're running on those slow devices that we",
    "start": "247319",
    "end": "254319"
  },
  {
    "text": "don't uh go too slowly or I can give the user an experience which is suboptimal",
    "start": "254319",
    "end": "259799"
  },
  {
    "text": "afterwards we'll talk about memory because memory is actually oh that's actually a spoiler alert after that",
    "start": "259799",
    "end": "266000"
  },
  {
    "text": "we'll talk about some webkit rendering Basics just just a short short ja through web kit right because when we",
    "start": "266000",
    "end": "271039"
  },
  {
    "text": "get to the end we're going to talk about accelerated compositing and the The Accelerated compositing will make a lot",
    "start": "271039",
    "end": "276199"
  },
  {
    "text": "more sense if you understand some of the internals for how webkit takes your your markup and turns it into bit maps that",
    "start": "276199",
    "end": "281639"
  },
  {
    "text": "it shows on a device so the the first performance tip that we have is responding to user input",
    "start": "281639",
    "end": "288639"
  },
  {
    "text": "which in itself is not a performance tip but the things that we do is where it comes to be interesting so remote",
    "start": "288639",
    "end": "295840"
  },
  {
    "text": "controls are not high Precision input devices right we have a mouse hooked up with USB it tracks very fast across the",
    "start": "295840",
    "end": "302000"
  },
  {
    "text": "screen we click and immediately the apps can respond in in a desktop World on on",
    "start": "302000",
    "end": "307360"
  },
  {
    "text": "these little RF remotes when you're sitting 10 12T away from your Blu-ray player and you hit a button sometimes",
    "start": "307360",
    "end": "313000"
  },
  {
    "text": "nothing happens and you're like what the hell so you hit the button again nothing happens So eventually you dig the remote",
    "start": "313000",
    "end": "318080"
  },
  {
    "text": "out of the couch and you point it directly at it and by this point you're frustrated and now that frustration",
    "start": "318080",
    "end": "323919"
  },
  {
    "text": "directly translates to your joy using our application if you're frustrated trying to navigate you're not going to",
    "start": "323919",
    "end": "330120"
  },
  {
    "text": "want to spend the time to do it you're going to say screw it I'm going to go watch Hulu on my laptop and have a nice day so for us for us it's really",
    "start": "330120",
    "end": "337800"
  },
  {
    "text": "important to accept user input provide feedback but not necessarily update the",
    "start": "337800",
    "end": "343680"
  },
  {
    "text": "UI all at the same time so we handle those three vectors separately accepting input providing feedback and updating",
    "start": "343680",
    "end": "349600"
  },
  {
    "text": "the user interface now this is plus we saw this just a moment ago this is our L red",
    "start": "349600",
    "end": "355680"
  },
  {
    "text": "interface that is the core interface on the PS3 if we have any PS3 user users in here it's also the interface that runs",
    "start": "355680",
    "end": "362080"
  },
  {
    "text": "on a lot of Blu-rays and TVs so the interface has two big conspicuous parts right the part on this side that's the",
    "start": "362080",
    "end": "368720"
  },
  {
    "text": "gallery the gallery can have one to many lists there's no cap to to the number of lists here that we can display and",
    "start": "368720",
    "end": "375680"
  },
  {
    "text": "there's actually no cap to the length of the list that we can display either these are just artificial numbers that we put in place to try to try to limit",
    "start": "375680",
    "end": "382240"
  },
  {
    "text": "the the selection to keep content discoverable now that's the gallery and",
    "start": "382240",
    "end": "387360"
  },
  {
    "text": "that on the side that's Bob Bob is where we show the metadata for the select a title Bob is an acronym it means back of",
    "start": "387360",
    "end": "395000"
  },
  {
    "text": "box but it gets pretty lame and tiresome to say the Bob the back of box all the time so we've given given it a Persona",
    "start": "395000",
    "end": "402280"
  },
  {
    "text": "and Bob is sometimes benevolent sometimes Bob is really really vengeful and you can tell if I go back a slide",
    "start": "402280",
    "end": "409360"
  },
  {
    "text": "there's a lot of individual content data fields in the Bob for instance synopsis titles ratings run times uh the presence",
    "start": "409360",
    "end": "416280"
  },
  {
    "text": "of HD audio all those things differ based on the title that on so when we update the Bob we have to perform a lot",
    "start": "416280",
    "end": "422440"
  },
  {
    "text": "of checks and do a lot of small Dom operations that's when Bob gets mean so when users using our app one",
    "start": "422440",
    "end": "429840"
  },
  {
    "text": "thing that happens is the input comes in at various speeds as as developers in in frontend people specifically we want",
    "start": "429840",
    "end": "436560"
  },
  {
    "text": "users to hit a button wait for us to provide feedback and update the content and then hit a button again and do it",
    "start": "436560",
    "end": "442800"
  },
  {
    "text": "over and over again but users are impatient they don't want to wait for us necessarily to update our content all the time so we have to take take steps",
    "start": "442800",
    "end": "450319"
  },
  {
    "text": "to start um providing feedback and backing off our content updates for",
    "start": "450319",
    "end": "455400"
  },
  {
    "text": "instance this is me navigating around so at first I go slowly so Bob Bob and the",
    "start": "455400",
    "end": "460759"
  },
  {
    "text": "gallery both keep up but then as I start going faster and faster we can't update",
    "start": "460759",
    "end": "465800"
  },
  {
    "text": "the Bob as quickly or more truthfully we choose not to now when we go too fast we'll",
    "start": "465800",
    "end": "472720"
  },
  {
    "text": "actually stop updating the gallery completely too but we still provide feedback so that that's the separation",
    "start": "472720",
    "end": "477960"
  },
  {
    "text": "between providing feedback and providing updated content now you're wondering why the",
    "start": "477960",
    "end": "483080"
  },
  {
    "text": "hell do you do this those those Box shots are really ugly and the truth is they're not beautiful but if we try to",
    "start": "483080",
    "end": "488919"
  },
  {
    "text": "update the Dom at the same time that the animation is going on the frame rates decrease drastically so it's our",
    "start": "488919",
    "end": "495479"
  },
  {
    "text": "responsibility to only update the Dom as quickly as we can still provide a smooth smooth uh smooth experience and for",
    "start": "495479",
    "end": "503400"
  },
  {
    "text": "instance we can actually go pretty damn fast if we don't limit the which we",
    "start": "503400",
    "end": "509960"
  },
  {
    "text": "accept key down repeat events we can fly through the interface and it looks neat",
    "start": "509960",
    "end": "515599"
  },
  {
    "text": "but I dare you to try to scan those titles at as as they fly by you just can't do it so one of the things which",
    "start": "515599",
    "end": "522719"
  },
  {
    "text": "which you have to keep in mind as you're handling key key input is you have two",
    "start": "522719",
    "end": "527839"
  },
  {
    "text": "kinds of key input I guess you have the key down and key up you have the pair where you just click the button and release click the button and release you",
    "start": "527839",
    "end": "534360"
  },
  {
    "text": "also have key down where you hold a button and then the the host system is giving those repeat events over and over",
    "start": "534360",
    "end": "540880"
  },
  {
    "text": "and over again well the the rate at which you receive those key repeat events is normally pretty drastically",
    "start": "540880",
    "end": "547120"
  },
  {
    "text": "different than the rate at which a true user can naturally hit that button as fast as they can for instance this that",
    "start": "547120",
    "end": "553079"
  },
  {
    "text": "that video we just saw was the PS3 which does key down repeat events at 50 milliseconds apart that's pretty damn",
    "start": "553079",
    "end": "559000"
  },
  {
    "text": "fast that that that's what 50 HZ now a user hitting the button as fast as he",
    "start": "559000",
    "end": "564800"
  },
  {
    "text": "can in our test can only bang the button about 140 milliseconds apart so what we",
    "start": "564800",
    "end": "569920"
  },
  {
    "text": "do is we'll limit our our response our response to user input to the point that",
    "start": "569920",
    "end": "575440"
  },
  {
    "text": "we're handling key events at an interval of say 140 milliseconds so if you're holding down the button we're going to",
    "start": "575440",
    "end": "582040"
  },
  {
    "text": "acknowledge some key events and we're going to not acknowledge others that sounds it sounds kind of counterintuitive you say you need to",
    "start": "582040",
    "end": "588000"
  },
  {
    "text": "respond to user input and here I am saying don't respond to all user input um the trick is to do it in a way that",
    "start": "588000",
    "end": "594040"
  },
  {
    "text": "the user doesn't perceive that they're being limited right that's why when we press when we measure the duration that",
    "start": "594040",
    "end": "599920"
  },
  {
    "text": "we throttle by it's the it's it's the natural press it's the down and it's the up it's not the the hold to down",
    "start": "599920",
    "end": "608560"
  },
  {
    "text": "so as we're navigating through the grid of of the gallery we're doing what we call activating for each row in the",
    "start": "608560",
    "end": "614920"
  },
  {
    "start": "611000",
    "end": "611000"
  },
  {
    "text": "gallery we we let me back up a little bit when we load the load the the interface we load the metadata for some",
    "start": "614920",
    "end": "621800"
  },
  {
    "text": "of the Galler for some of the rows up front that way we can provide the user with say the first five rows so if they",
    "start": "621800",
    "end": "627680"
  },
  {
    "text": "navigate through slowly they'll never see the Great boxes but if you start navigating through quickly then we have",
    "start": "627680",
    "end": "633160"
  },
  {
    "text": "we don't have the the metadata yet and we need to start fetching it now once we have that metadata or even backing up a",
    "start": "633160",
    "end": "639680"
  },
  {
    "text": "moment when we try to request the metadata we're crossing from JavaScript land to Hardware Land we're touching the",
    "start": "639680",
    "end": "645279"
  },
  {
    "text": "network interface to then make a request now the speed that that operation happens depends on the device so that",
    "start": "645279",
    "end": "652320"
  },
  {
    "text": "that's the first thing that we need to try to be careful of once we have a response back from our API it comes back",
    "start": "652320",
    "end": "657360"
  },
  {
    "text": "to us as a Json structure and when we have that we can't really do anything with it until we parse it well parsing",
    "start": "657360",
    "end": "663279"
  },
  {
    "text": "is a that is a greedy operation when you parse JavaScript can do nothing else",
    "start": "663279",
    "end": "668720"
  },
  {
    "text": "because parsing takes time and if you request too much data you're doing a lot of parsing and everything's going to slow down and your frame rates are going",
    "start": "668720",
    "end": "674920"
  },
  {
    "text": "to drop to the floor and you're going to get stutters and the the last part of the activation that takes time is",
    "start": "674920",
    "end": "680240"
  },
  {
    "text": "actually touching the Dom you there's been people evangelizing for years that D is slow and very few people I think",
    "start": "680240",
    "end": "685600"
  },
  {
    "text": "actually have have listened to this most time people just keep touching the D whatever they want update stuff read",
    "start": "685600",
    "end": "691040"
  },
  {
    "text": "properties that will cause reflows um we need to be careful about this so we we are very careful about when we update",
    "start": "691040",
    "end": "697360"
  },
  {
    "text": "content and when we choose to have that content painted to the screen so this is this paints a pretty",
    "start": "697360",
    "end": "702720"
  },
  {
    "text": "bleak picture of Ro activation but it's it's really not that bad here's a video that shows a little bit behind the",
    "start": "702720",
    "end": "709240"
  },
  {
    "start": "709000",
    "end": "709000"
  },
  {
    "text": "scenes this is this is the same application with some CSS that has a",
    "start": "709240",
    "end": "714360"
  },
  {
    "text": "hidden Bob it's turned off the Chrome it's done some scaling turned off the Overflow etc etc",
    "start": "714360",
    "end": "719800"
  },
  {
    "text": "So eventually essentially what the user normally sees as the gallery is that gray box in the middle the part that's",
    "start": "719800",
    "end": "726279"
  },
  {
    "text": "hidden from them is on the red area that's the Overflow region so as we navigate through",
    "start": "726279",
    "end": "733199"
  },
  {
    "text": "this back up a little bit as user navigates through it we have the first few columns the first few rows of data",
    "start": "733199",
    "end": "740160"
  },
  {
    "text": "already but when we get to a point where we don't have the data we have to activate all those gray rows we stagger",
    "start": "740160",
    "end": "746120"
  },
  {
    "text": "the activation now the the amount that we're staggering is ex exaggerated for this video but the idea is when you land",
    "start": "746120",
    "end": "752720"
  },
  {
    "text": "on a row we're going to activate that and provide you feedback as fast as possible now updating the rows next to",
    "start": "752720",
    "end": "758199"
  },
  {
    "text": "it and further out from there is less important especially since once the user lands on one row they may choose that",
    "start": "758199",
    "end": "763760"
  },
  {
    "text": "they want to go someplace else remember users are impatient they don't stay in the same place very often so if we had",
    "start": "763760",
    "end": "770240"
  },
  {
    "text": "updated all the rows right when the user stopped and then they chose to move somewhere immediately afterwards it would have been very very slow because",
    "start": "770240",
    "end": "776600"
  },
  {
    "text": "we would have been doing a ton of network operations and a ton ton the D Dom operations but in this case we do it",
    "start": "776600",
    "end": "782720"
  },
  {
    "text": "a little bit at a time and when you do it a little bit at a time there's a good chance you won't have to do all the work",
    "start": "782720",
    "end": "787839"
  },
  {
    "text": "so this is generally how we do it I hope you guys can see that in the back the idea is by default our our objects have",
    "start": "787839",
    "end": "796079"
  },
  {
    "start": "788000",
    "end": "788000"
  },
  {
    "text": "um asynchronous interfaces so when this object is asked to activate and pass a series of IDs which need to activate it",
    "start": "796079",
    "end": "802839"
  },
  {
    "text": "itself is responsible for determining the best path forward to actually activating those objects um so when it",
    "start": "802839",
    "end": "809160"
  },
  {
    "text": "comes in here this is the straight work deferral and chunking the first thing we do is try to defer the work and then",
    "start": "809160",
    "end": "814760"
  },
  {
    "text": "once we once the timeout has actually executed in the call back function right there we peel off a portion of those IDs",
    "start": "814760",
    "end": "821480"
  },
  {
    "text": "and we activate those and then if we have any more IDs left we set another time out and we do it over and over and over again now this is what I was",
    "start": "821480",
    "end": "828600"
  },
  {
    "text": "talking about where the user can come in and change their idea or change their mind and we can go ahead and drop",
    "start": "828600",
    "end": "834600"
  },
  {
    "text": "whatever IDs haven't been activated to the floor so internally this object has",
    "start": "834600",
    "end": "839839"
  },
  {
    "text": "a synchronous backer to this asynchronous method which it is it's a privileged method that only this object",
    "start": "839839",
    "end": "845600"
  },
  {
    "text": "can call because it knows about all the greedy operations that happen during that time now the thing that happens",
    "start": "845600",
    "end": "851639"
  },
  {
    "text": "though is sometimes we we want to be able to um tune that delay really far down or we want to be able to turn it",
    "start": "851639",
    "end": "857759"
  },
  {
    "text": "off completely for debugging so that's why we have it as a configurable value because the amount that we delay in",
    "start": "857759",
    "end": "863480"
  },
  {
    "text": "development we want to maybe have zero so everything runs synchronously and we can debug anywhere along the trace when",
    "start": "863480",
    "end": "868680"
  },
  {
    "text": "we run on a slower device we might use different delays than we use on say a PS3 where we can activate faster so",
    "start": "868680",
    "end": "875399"
  },
  {
    "text": "that's a lot of words but really comes down to don't do everything up front just wait to do stuff until the last",
    "start": "875399",
    "end": "880800"
  },
  {
    "text": "moment possible it's all about being proactively lazy now this is another way to",
    "start": "880800",
    "end": "887519"
  },
  {
    "start": "885000",
    "end": "885000"
  },
  {
    "text": "visualize what I was talking about with when you cross a divide to the slower operations in JavaScript and most of our",
    "start": "887519",
    "end": "893720"
  },
  {
    "text": "code runs over here that's all your logic that's the stuff where you're just doing application Level logic you're",
    "start": "893720",
    "end": "898800"
  },
  {
    "text": "you're determining data during arithmetic and such but eventually you have to use that data to say request",
    "start": "898800",
    "end": "904560"
  },
  {
    "text": "more data or to update a Dom all once you cross that divide over to over to the other level you're touching",
    "start": "904560",
    "end": "910360"
  },
  {
    "text": "different interfaces now those interfaces slow down so if you say you need to retrieve elements from the Dom",
    "start": "910360",
    "end": "917040"
  },
  {
    "text": "that's slow so you want to do that as infrequently as possible now this is when I was doing",
    "start": "917040",
    "end": "923079"
  },
  {
    "text": "some research for this this was a big Hot Topic in 2009 and what's interesting is I think some people got in 2009 but",
    "start": "923079",
    "end": "930920"
  },
  {
    "text": "there's still a lot of content on the on the web where people are still doing the same approaches where they're wheelie Neely doing all the stuff on on the side",
    "start": "930920",
    "end": "937920"
  },
  {
    "text": "and the apps are slow for it so if you want to try to find places to improve your app it's kind of easy just Target these areas first find out where you're",
    "start": "937920",
    "end": "944399"
  },
  {
    "text": "doing heavy operations in that column and fix it now the the second thing which is",
    "start": "944399",
    "end": "952240"
  },
  {
    "text": "unique to what we do is memory right we're a long-lived application users can",
    "start": "952240",
    "end": "958600"
  },
  {
    "text": "jump into our application and then sit there for hours know last night I was watching Breaking Bad I watched three or",
    "start": "958600",
    "end": "964680"
  },
  {
    "text": "four episodes I was in there for you know what 3 hours and in in the middle I was browsing around the gallery I was",
    "start": "964680",
    "end": "970560"
  },
  {
    "text": "looking at images I was loading more stuff I was doing searches all that stuff adds up now in a normal web",
    "start": "970560",
    "end": "977000"
  },
  {
    "text": "application you would change the location every once in a while which would let the browser deallocate memory and clean things up so that when you",
    "start": "977000",
    "end": "983199"
  },
  {
    "text": "start the next page you have a fresh slate to work with we don't have that luxury so we need to be very cautious",
    "start": "983199",
    "end": "988759"
  },
  {
    "text": "about about how we um how we inter how we handle the data that we have as in",
    "start": "988759",
    "end": "994519"
  },
  {
    "text": "data being um objects from JavaScript as well as",
    "start": "994519",
    "end": "999519"
  },
  {
    "text": "images so our application has this concept of a UI budget now this is this",
    "start": "999839",
    "end": "1005519"
  },
  {
    "start": "1001000",
    "end": "1001000"
  },
  {
    "text": "is something which is implied I guess in a lot of talks but I think very",
    "start": "1005519",
    "end": "1011279"
  },
  {
    "text": "infrequently do people actually try to determine how much memory each of their components are taking for instance once",
    "start": "1011279",
    "end": "1016720"
  },
  {
    "text": "we take away from the total memory all the things that are also running we're left with a much smaller budget which",
    "start": "1016720",
    "end": "1022839"
  },
  {
    "text": "means that if we start downloading tons of metadata we need to understand that that metadata has a certain fixed size",
    "start": "1022839",
    "end": "1029240"
  },
  {
    "text": "now we use a lot of different approaches to try to get around that one of the things which is also",
    "start": "1029240",
    "end": "1035199"
  },
  {
    "start": "1032000",
    "end": "1032000"
  },
  {
    "text": "useful is useful in our stand at least is uh images and video memory now this",
    "start": "1035199",
    "end": "1041199"
  },
  {
    "text": "is something which is not unique to what we do here it's actually experienced a lot on on the mobile world as well where",
    "start": "1041199",
    "end": "1047959"
  },
  {
    "text": "as you download an image off the internet it comes to compressed right it's it you could have different images",
    "start": "1047959",
    "end": "1053559"
  },
  {
    "text": "all come in at different sizes and at one point you're going to go ahead and decode those images and uncompress them",
    "start": "1053559",
    "end": "1059919"
  },
  {
    "text": "and pass them to video memory once that decoding and uncompressing happens that tiny image has now gotten pretty damn",
    "start": "1059919",
    "end": "1065720"
  },
  {
    "text": "big so keep in mind that the gallery has hundreds of boxes right and then the",
    "start": "1065720",
    "end": "1071360"
  },
  {
    "text": "user goes into playback well video memory already has tons of those boxes inside of it so when we start trying to",
    "start": "1071360",
    "end": "1077200"
  },
  {
    "text": "shove in their HD video stuff it's going to chew up the video memory really fast",
    "start": "1077200",
    "end": "1082360"
  },
  {
    "text": "now this is in in in the mobile world this is when things crash right you you round out of memory and all a sudden",
    "start": "1082360",
    "end": "1087960"
  },
  {
    "text": "you're back at the home screen again same thing is true in our world",
    "start": "1087960",
    "end": "1093080"
  },
  {
    "text": "too so we have a few ways of dealing with this one the first I already alluded to was the unbounded growth we",
    "start": "1093480",
    "end": "1099600"
  },
  {
    "text": "use a lot of caching and very intelligent caches in our code things like last recently used caches and last",
    "start": "1099600",
    "end": "1105480"
  },
  {
    "start": "1100000",
    "end": "1100000"
  },
  {
    "text": "recently used caches backed by a memory manager that understands the size of each element inside the",
    "start": "1105480",
    "end": "1110880"
  },
  {
    "text": "cache the second one this one's kind of weird it's minimizing the number of throwaway objects but this this leads to",
    "start": "1110880",
    "end": "1118280"
  },
  {
    "text": "garbage collection right if you have a for Loop or you have a loop that's generating tons of temporary variables",
    "start": "1118280",
    "end": "1124559"
  },
  {
    "text": "when that Loop is done all those all those variables get cleaned up so if you're doing this in a lot of places in",
    "start": "1124559",
    "end": "1130080"
  },
  {
    "text": "your code in a lot of different ways when it comes time to clean up that code it's going to freeze the UI again just",
    "start": "1130080",
    "end": "1135240"
  },
  {
    "text": "for a moment so your frame rate is going to go back down to zero the user's going to look at a jerky UI and",
    "start": "1135240",
    "end": "1141880"
  },
  {
    "text": "go now the last one's actually probably one of the most interesting things I think we do it's pooling right pooling",
    "start": "1141880",
    "end": "1148080"
  },
  {
    "text": "is not a unique concept of what we're doing it's it's it's a fundamental CS concept that says if you have if you",
    "start": "1148080",
    "end": "1153640"
  },
  {
    "text": "need say 10 uh say you're you're instantiating a bunch of list rows in",
    "start": "1153640",
    "end": "1158840"
  },
  {
    "text": "this case and we have a scrollable list that has 25 list rows but we don't",
    "start": "1158840",
    "end": "1164840"
  },
  {
    "text": "actually need to create 25 different list rows themselves we can create say five of them put them in this thing called a pool and then when we need to",
    "start": "1164840",
    "end": "1171360"
  },
  {
    "text": "display list row we we ask the pool for a row we format it we use it for a little while then we release it and put",
    "start": "1171360",
    "end": "1176480"
  },
  {
    "text": "it back in the pool that way things keep rotating like this and the best way for me to",
    "start": "1176480",
    "end": "1182640"
  },
  {
    "text": "understand this was actually seeing it in action so this is just what we saw before but pay special attention what",
    "start": "1182640",
    "end": "1187919"
  },
  {
    "text": "happens when the rows go out the top or out the",
    "start": "1187919",
    "end": "1191600"
  },
  {
    "text": "bottom see that rad just disappear on top when it disappears it's being put back in the pool when the rows come in",
    "start": "1193000",
    "end": "1199760"
  },
  {
    "text": "from the bottom they're going to pull that row out of a pool format it and then use it to go for the brief time",
    "start": "1199760",
    "end": "1205640"
  },
  {
    "text": "that it's there and the same thing happens on the bottom",
    "start": "1205640",
    "end": "1210799"
  },
  {
    "text": "too now one of the optim one of the most important optimizations that we made was being careful how we um reset these",
    "start": "1210799",
    "end": "1217919"
  },
  {
    "text": "elements when we put them back in the pool because when we put some of back in the pool we used to set it all back to",
    "start": "1217919",
    "end": "1223960"
  },
  {
    "text": "the gray boxes so that when it was used again it was ready and it was in a blank state but what that was causing was a",
    "start": "1223960",
    "end": "1229760"
  },
  {
    "text": "lot of repaints as the as the element is visually changed the rendering engine",
    "start": "1229760",
    "end": "1235320"
  },
  {
    "text": "has to has to handle that in some way so what we wound up doing was we only update them when we pull them out of the",
    "start": "1235320",
    "end": "1241240"
  },
  {
    "text": "Dom that way we can update at one time by pulling out the old elements the old images image sources putting new ones in",
    "start": "1241240",
    "end": "1247440"
  },
  {
    "text": "place and all that operation does is just trigger one paint oper one paint with the rendering engine so yeah this is another one of",
    "start": "1247440",
    "end": "1254280"
  },
  {
    "text": "the videos I like to watch too now left and right is different we're not actually pooling here but we",
    "start": "1254280",
    "end": "1260000"
  },
  {
    "text": "do have a fixed set of elements that we're changing exchanging CSS classes on so as I navigate left and right we are",
    "start": "1260000",
    "end": "1266640"
  },
  {
    "text": "not updating the dawn we're not changing the fundamental structure of that documentary but we are changing the",
    "start": "1266640",
    "end": "1271760"
  },
  {
    "text": "classes which makes it look like the element's moving it's just CSS transforms doing their",
    "start": "1271760",
    "end": "1277720"
  },
  {
    "text": "magic so this is honestly my favorite slide entire presentation I just love seeing the",
    "start": "1278880",
    "end": "1284679"
  },
  {
    "text": "glitter py get socked now when we use web kit it's it's",
    "start": "1284679",
    "end": "1289799"
  },
  {
    "start": "1285000",
    "end": "1285000"
  },
  {
    "text": "easy to get carried away with all the magic right that it has great CSS drawing effects and for years we are",
    "start": "1289799",
    "end": "1296880"
  },
  {
    "text": "really told that that front end performance starts with network IO that's true in a desktop world but given",
    "start": "1296880",
    "end": "1304360"
  },
  {
    "text": "our set of constraints we have fast networks hell you streaming HD video what we don't have are fast devices we",
    "start": "1304360",
    "end": "1311520"
  },
  {
    "text": "have a slow CPU we have slow gpus we have limited amounts of ram so what we wind up doing is keeping in our mind",
    "start": "1311520",
    "end": "1318640"
  },
  {
    "text": "this one motto right and it says don't do in software what can be handled by Hardware so that's that's well and good",
    "start": "1318640",
    "end": "1326080"
  },
  {
    "text": "but here's what it actually means in practice we don't do any of these things in code now it's it's a little odd for",
    "start": "1326080",
    "end": "1334679"
  },
  {
    "start": "1330000",
    "end": "1330000"
  },
  {
    "text": "me to follow behind Steve and um count and try to um change some of the story",
    "start": "1334679",
    "end": "1342480"
  },
  {
    "text": "and remember our our our bottleneck is CPU iio it's not Network our devices are",
    "start": "1342480",
    "end": "1349520"
  },
  {
    "text": "slower than your iPhones so when we're if I was to say paint a radial gradient",
    "start": "1349520",
    "end": "1355080"
  },
  {
    "text": "or a linear gradient that's going to cause the CPU to calculate the gradient to render it and to paint it now if you",
    "start": "1355080",
    "end": "1362720"
  },
  {
    "text": "update the contents to that element it's going to calculate it render it and paint it again if you display none of that element and show it back to the",
    "start": "1362720",
    "end": "1368640"
  },
  {
    "text": "screen it's going to calculate render and paint it again right so what we wind up doing is we use images for this",
    "start": "1368640",
    "end": "1375360"
  },
  {
    "text": "because static images are just painted they're past regular hardware and is painted one time so this does cause us",
    "start": "1375360",
    "end": "1382480"
  },
  {
    "text": "to download additional images which we use strategies around trying to make nut kill our network but our runtime",
    "start": "1382480",
    "end": "1389120"
  },
  {
    "text": "performance is better for it because if we're going to use CSS drawing effects they have to be recalculated and",
    "start": "1389120",
    "end": "1394279"
  },
  {
    "text": "rendered and repainted over and over and over again this one was actually kind of kind",
    "start": "1394279",
    "end": "1400240"
  },
  {
    "text": "of a sad one for me because when I came from Yahoo I was working on the front page and we're all about fast ass page",
    "start": "1400240",
    "end": "1406360"
  },
  {
    "text": "you know that page loads in under a second it's amazing and a lot of that has to do with",
    "start": "1406360",
    "end": "1411880"
  },
  {
    "text": "minimizing the number of requests that we make now when I came into Netflix I was I wanted to do the same thing I was",
    "start": "1411880",
    "end": "1417360"
  },
  {
    "text": "like oh this is evil this is bad how could you do this and I was naive I was from a desktop world but on a device",
    "start": "1417360",
    "end": "1423120"
  },
  {
    "text": "world you have to acknowledge your constraints and choose the best approaches to fulfill them and still",
    "start": "1423120",
    "end": "1428400"
  },
  {
    "text": "have a good ux so keep that in mind don't be dogmatic be",
    "start": "1428400",
    "end": "1434480"
  },
  {
    "text": "pragmatic now we do some things in software like animation there's no way that you cannot that you can animate",
    "start": "1434720",
    "end": "1441039"
  },
  {
    "text": "without software but we only use CSS to do our",
    "start": "1441039",
    "end": "1448039"
  },
  {
    "text": "animation and that's because for CSS to do animation it's working solely within",
    "start": "1448039",
    "end": "1453080"
  },
  {
    "start": "1451000",
    "end": "1451000"
  },
  {
    "text": "the rendering engine we don't use say request animation frame to do our animation because that's Crossing from",
    "start": "1453080",
    "end": "1459200"
  },
  {
    "text": "Dom land to JavaScript land back and forth at 60 HZ right and every time that",
    "start": "1459200",
    "end": "1465039"
  },
  {
    "text": "your animation frame callback is executed it blocks other operations so what we need to do is keep our",
    "start": "1465039",
    "end": "1470760"
  },
  {
    "text": "animation as close to the hardware as possible because like I said before CPUs are evil and they're",
    "start": "1470760",
    "end": "1477080"
  },
  {
    "text": "slow now the part of this which is um important to also understand is we only animate two properties we these",
    "start": "1477080",
    "end": "1485080"
  },
  {
    "text": "properties are safe for Hardware acceleration we animate opacity like fade ins fade outs and we animate",
    "start": "1485080",
    "end": "1491440"
  },
  {
    "text": "transforms now transforms are great because you can do scaling with transforms you can do translations with transforms you can rotate with",
    "start": "1491440",
    "end": "1497320"
  },
  {
    "text": "transforms they're very very powerful what we don't do I say animate things like width because as you animate width",
    "start": "1497320",
    "end": "1504480"
  },
  {
    "text": "the contents of the Box were reflowed and everything is recal calculated over and over again same thing goes for",
    "start": "1504480",
    "end": "1509960"
  },
  {
    "text": "anything that changes the dimensions of the Box we're also careful not to change the contents of a box as it's animating",
    "start": "1509960",
    "end": "1516360"
  },
  {
    "text": "and that these are all techniques that lead into accelerated compositing which I'm kind of building up towards if you",
    "start": "1516360",
    "end": "1521480"
  },
  {
    "text": "feel where I'm going so before we get into accelerate",
    "start": "1521480",
    "end": "1527000"
  },
  {
    "text": "compositing and really talk about hard Hardware acceleration and how we use it you need to understand what webkit is and how we use webkit so when we use",
    "start": "1527000",
    "end": "1535080"
  },
  {
    "text": "webkit we're not using an embedded browser we don't have an address bar that we're hiding from you or bookmarks",
    "start": "1535080",
    "end": "1540320"
  },
  {
    "text": "that we're choosing not to display or a location bar any of that stuff none of that's there what we have is a",
    "start": "1540320",
    "end": "1546000"
  },
  {
    "text": "programmatic API for displaying web content now which is cool because being",
    "start": "1546000",
    "end": "1551159"
  },
  {
    "text": "that web web kit is open sourced when we want to try to match our content for the rendering engine we can dive right into",
    "start": "1551159",
    "end": "1556919"
  },
  {
    "text": "the source and find sources of performance optimizations you'll see some of those tricks in a moment and",
    "start": "1556919",
    "end": "1563159"
  },
  {
    "text": "portable we'll get into that right here so webkit is an engine it's a web engine",
    "start": "1563159",
    "end": "1569120"
  },
  {
    "text": "it's not a web browser webkit can be put into a web browser it can be put into a",
    "start": "1569120",
    "end": "1575679"
  },
  {
    "text": "to a toolkit much like a car engine can be put into a Chevy a Dodge or a pickup truck doesn't matter it's still an",
    "start": "1575679",
    "end": "1582600"
  },
  {
    "text": "engine Now webkit is really composed of two two two primary segments web core",
    "start": "1582600",
    "end": "1588480"
  },
  {
    "text": "and JavaScript core now for the rendering aspects where we find a lot of our performance improvements that's all ins sign web core so going in there a",
    "start": "1588480",
    "end": "1595480"
  },
  {
    "text": "little deeper you think working at Netflix I know you don't point the device at the",
    "start": "1595480",
    "end": "1601440"
  },
  {
    "text": "screen now webcore is responsible for taking the downloaded assets the HTML and the CSS it parses the CSS into an",
    "start": "1601440",
    "end": "1609080"
  },
  {
    "text": "object structure the Dom is the HML is parsed into a Dom tree and those two things are attached",
    "start": "1609080",
    "end": "1615640"
  },
  {
    "text": "together now the attachment process creates what's called a render tree now any visible object in the Dom has a",
    "start": "1615640",
    "end": "1622440"
  },
  {
    "text": "render object node in the render tree Elements which are display none in your Dom are not part of the render tree",
    "start": "1622440",
    "end": "1628480"
  },
  {
    "text": "which is a pretty damn cool optimization right why spend time painting objects which are display none or even outside",
    "start": "1628480",
    "end": "1633960"
  },
  {
    "text": "of the viewport you don't have to worry about those now that that's the render tree's whole job right there now once",
    "start": "1633960",
    "end": "1640320"
  },
  {
    "text": "you have these objects in the render tree each object is goes through a layout and a paint step the layout is",
    "start": "1640320",
    "end": "1645919"
  },
  {
    "text": "where it gets Dimensions it gets its size it gets its position and then from there each object knows how to paint",
    "start": "1645919",
    "end": "1651440"
  },
  {
    "text": "itself now the Magic in this whole process comes in the render tree and the layout because the render objects go",
    "start": "1651440",
    "end": "1658640"
  },
  {
    "text": "through a composition step and they're created into these things called render",
    "start": "1658640",
    "end": "1664519"
  },
  {
    "text": "layers now multiple render objects that all sh share the same transform could be combined into a single layer which is",
    "start": "1664519",
    "end": "1671519"
  },
  {
    "text": "then passed along to the graphics context now this is part the the part of",
    "start": "1671519",
    "end": "1676840"
  },
  {
    "text": "the the the to the browser report that actually supports the accelera compositing for us because when when",
    "start": "1676840",
    "end": "1682480"
  },
  {
    "text": "that layer is passed through to the graphics context it can be turned into a bit map and then used for accelerate",
    "start": "1682480",
    "end": "1687519"
  },
  {
    "text": "compositing it could be passed through a software for a software compositor like it's done an Android webkit it's it's",
    "start": "1687519",
    "end": "1693320"
  },
  {
    "text": "really pretty neat now that was a whirlwind three slide webkit rendering Basics thing",
    "start": "1693320",
    "end": "1699559"
  },
  {
    "text": "right so we went through you have your markup and your CSS and and in the end you have these things called render",
    "start": "1699559",
    "end": "1704640"
  },
  {
    "text": "layers now the the render layers play directly into to accelerate compositing",
    "start": "1704640",
    "end": "1710279"
  },
  {
    "text": "does anyone is anyone familiar with this red box ah one all right great two great so",
    "start": "1710279",
    "end": "1717360"
  },
  {
    "text": "this is this is newish stuff right it's not new to the technology it's been",
    "start": "1717360",
    "end": "1722679"
  },
  {
    "text": "there for a long time but we haven't really focused about this in in a lot of our day-to-day work so accelerat",
    "start": "1722679",
    "end": "1730039"
  },
  {
    "text": "compositing is when these render layers are turned into bit maps and these bit maps are then animated around the screen",
    "start": "1730039",
    "end": "1737360"
  },
  {
    "text": "so if you want say render an object once or an element once and paint it all over the screen then then accelerated",
    "start": "1737360",
    "end": "1744600"
  },
  {
    "text": "compositing is going to give you the fastest animation performance because that element is not rendered and recalculated all the time it's just",
    "start": "1744600",
    "end": "1750600"
  },
  {
    "text": "moved you just push it around the screen so these in in practice these",
    "start": "1750600",
    "end": "1755919"
  },
  {
    "text": "layers look kind of like this this is one list Row from our",
    "start": "1755919",
    "end": "1761360"
  },
  {
    "text": "gallery now we can see there's there's different colors there's different boxes there's the red boxes and the Yellow",
    "start": "1761360",
    "end": "1766399"
  },
  {
    "text": "Boxes but this is a this is a good chance to understand",
    "start": "1766399",
    "end": "1772840"
  },
  {
    "text": "that there's there's different layer types so we have the yellow layers which are containers and red layers which actually have the the uh a bitmap",
    "start": "1772840",
    "end": "1780640"
  },
  {
    "text": "backing to them so a little more explanation on Safari's visual hints shc can tell you that that screenshot that",
    "start": "1780640",
    "end": "1786919"
  },
  {
    "start": "1782000",
    "end": "1782000"
  },
  {
    "text": "magic was from Safari the red layers are the layers that have the backing images those are",
    "start": "1786919",
    "end": "1792240"
  },
  {
    "text": "layers actually have the GPU textures the yellow layers they're they're called container layers what they do is contain",
    "start": "1792240",
    "end": "1799640"
  },
  {
    "text": "the composited layers the red ones that way we can still get the GPU acceleration of a of a bunch of elements",
    "start": "1799640",
    "end": "1806360"
  },
  {
    "text": "without having to say create one layer that is the size of that yellow the yellow box the cyan I've never never",
    "start": "1806360",
    "end": "1813360"
  },
  {
    "text": "really understood why debugging overflow is useful so if anyone here understands why this this color happens let me know",
    "start": "1813360",
    "end": "1820559"
  },
  {
    "text": "basically that's just when an element has overflow hidden or overflow whatnot it turn a s in so we can debug it it's",
    "start": "1820559",
    "end": "1826279"
  },
  {
    "text": "kind of distracting if you ask me now green ones we we don't see green",
    "start": "1826279",
    "end": "1831440"
  },
  {
    "text": "ones in our UI because we keep our textur small if you have a layer that's over 1024 it gets turned into a tiled",
    "start": "1831440",
    "end": "1837480"
  },
  {
    "text": "layer by by the rendering engine in the graphics context which means that only parts of that layer render at and are",
    "start": "1837480",
    "end": "1843399"
  },
  {
    "text": "put in video memory at a certain time otherwise if you have this giant image that's turned into a layer you shove",
    "start": "1843399",
    "end": "1848919"
  },
  {
    "text": "that in video memory it's going to crash immediately because it just runs out of",
    "start": "1848919",
    "end": "1853679"
  },
  {
    "text": "space so to turn this on inside Safari there is a command line flag defaults right com Apple Safari include",
    "start": "1854039",
    "end": "1860799"
  },
  {
    "start": "1856000",
    "end": "1856000"
  },
  {
    "text": "internal debug menu one that's exactly what I thought it would be right now once you turn this on there's",
    "start": "1860799",
    "end": "1867480"
  },
  {
    "text": "a debug menu that shows up in the top right corner of your menu bar inside Safari and the two most interesting",
    "start": "1867480",
    "end": "1873480"
  },
  {
    "text": "things to me at this point are the render layer tree and the show compositing borders remember how we",
    "start": "1873480",
    "end": "1879840"
  },
  {
    "text": "talked about the render tree a moment ago has all the elements which have visual visual representation now the",
    "start": "1879840",
    "end": "1885159"
  },
  {
    "text": "render layer tree is is the composite step where all those elements are turned are aggregated into smaller layers and",
    "start": "1885159",
    "end": "1891519"
  },
  {
    "text": "whatnot so the render layer tree normally is going to map to the the compositing that we saw a moment ago",
    "start": "1891519",
    "end": "1896720"
  },
  {
    "text": "with the yellow composited containers and the red composite ones as well that was a",
    "start": "1896720",
    "end": "1902200"
  },
  {
    "text": "mouthful now Chrome let you turn bless you Chrome lets you turn on the borders",
    "start": "1902200",
    "end": "1908039"
  },
  {
    "start": "1904000",
    "end": "1904000"
  },
  {
    "text": "as well if you jump into about Flags you can go in there and turn them on but what what you miss actually back here is",
    "start": "1908039",
    "end": "1916080"
  },
  {
    "text": "a number in the top left Corner that number is really important that number",
    "start": "1916080",
    "end": "1921720"
  },
  {
    "text": "shows the the number of times that that layer's content was recalculated the number of time times that it",
    "start": "1921720",
    "end": "1927639"
  },
  {
    "text": "changed for instance ah before we get there layer",
    "start": "1927639",
    "end": "1934880"
  },
  {
    "start": "1930000",
    "end": "1930000"
  },
  {
    "text": "creation happens using CSS triggers so in your layout you go ahead and you can",
    "start": "1934880",
    "end": "1940519"
  },
  {
    "text": "add these specific CSS properties to it and this is going to turn that element into a layer of some sort right",
    "start": "1940519",
    "end": "1947960"
  },
  {
    "text": "now at another point if a if an element overlaps on an existing layer it's going turn into a layer as well so what what",
    "start": "1947960",
    "end": "1955679"
  },
  {
    "text": "you watch out for is as as you're moving this element around the page if it goes underneath something that element is",
    "start": "1955679",
    "end": "1961480"
  },
  {
    "text": "that the something that it goes underneath is now going to be turned into a layer right then and then if it moves back out again that layer is going",
    "start": "1961480",
    "end": "1966919"
  },
  {
    "text": "be destroyed so you have to be careful where you move the elements in the page now what's neat about webkit is",
    "start": "1966919",
    "end": "1973000"
  },
  {
    "start": "1972000",
    "end": "1972000"
  },
  {
    "text": "it's open source right you can jump right into the code and you can figure out what the heck's going on without having to to say ask the internet and",
    "start": "1973000",
    "end": "1979679"
  },
  {
    "text": "when I first wanted to find out this stuff I wasn't comfortable inside webcut source uh Source yet so I had to go to a",
    "start": "1979679",
    "end": "1985200"
  },
  {
    "text": "Blog go to Twitter and go around searching and 20 30 minutes later I finally had a list of things that seemed like they were complete but in the end",
    "start": "1985200",
    "end": "1992880"
  },
  {
    "text": "all I had to do was go in the source so layers are created explicitly inside",
    "start": "1992880",
    "end": "1998000"
  },
  {
    "text": "right here and we can see that things like is it positioned is it overflowed does it have transparency all those",
    "start": "1998000",
    "end": "2003480"
  },
  {
    "text": "things lead to layer creation inside of webkit now this is the explicit layer creation these are those CSS triggers",
    "start": "2003480",
    "end": "2009799"
  },
  {
    "text": "which I just talked about the implicit layer creation happens at composite time that's when we",
    "start": "2009799",
    "end": "2015480"
  },
  {
    "text": "determine if that element goes underneath another element so this is one of those things even if you don't know C Plus+",
    "start": "2015480",
    "end": "2023080"
  },
  {
    "text": "C what you get is the ability to peer inside and and see what's happening in a",
    "start": "2023080",
    "end": "2029519"
  },
  {
    "text": "way that we normally don't have the chance to do for years browsers were black boxes and thankfully browsers",
    "start": "2029519",
    "end": "2035039"
  },
  {
    "text": "aren't so much black boxes anymore so this is a short and contrived taale",
    "start": "2035039",
    "end": "2042120"
  },
  {
    "text": "of two layers right um back when I was doing mobile stuff there be cases where as as I scroll around the page stuff",
    "start": "2042120",
    "end": "2048480"
  },
  {
    "start": "2043000",
    "end": "2043000"
  },
  {
    "text": "would flicker right you go why is it flickering crap and you have this deadline coming up so you go ask the internet you say why is my element",
    "start": "2048480",
    "end": "2054599"
  },
  {
    "text": "flickering and it says oh add a add back face visibility add translate Z so you do it and next thing you know there's no",
    "start": "2054599",
    "end": "2061079"
  },
  {
    "text": "more flicker so you move on but what you don't realize is the element that you added it to could have been a very very",
    "start": "2061079",
    "end": "2067320"
  },
  {
    "text": "bad element to add it to for instance two animated gifts right one animated",
    "start": "2067320",
    "end": "2072358"
  },
  {
    "text": "gift on the left is a traditional animated gift that just changes the contents over and over and over again",
    "start": "2072359",
    "end": "2077760"
  },
  {
    "text": "the one on the other side that's a static gift that's being rotated with CSS so that number there does not ever",
    "start": "2077760",
    "end": "2084358"
  },
  {
    "text": "stop growing as long as that image is spinning on the page that layer's contents are being recalculated and",
    "start": "2084359",
    "end": "2091079"
  },
  {
    "text": "redrawn now every time that that new image is created every time that that number increments a new image is being",
    "start": "2091079",
    "end": "2097320"
  },
  {
    "text": "sent to the graphics context and rendered so each frame is causing another image to be recreated over and",
    "start": "2097320",
    "end": "2103000"
  },
  {
    "text": "over and over again so this is this is contrived right but this is very true",
    "start": "2103000",
    "end": "2108040"
  },
  {
    "text": "that for years we've gotten used to adding magic CSS and if we keep doing it we're going to have crap happening on",
    "start": "2108040",
    "end": "2113560"
  },
  {
    "text": "our uis that we want to try to avoid so the things that are safe to",
    "start": "2113560",
    "end": "2120800"
  },
  {
    "text": "change are things like the opacity and transforms those are the things that we animate remember from the CSS slide I spoke about the stuff that we don't",
    "start": "2120800",
    "end": "2127960"
  },
  {
    "text": "touch are the layer contents it as much as we can help it we want to keep that layer once built and then use it as many",
    "start": "2127960",
    "end": "2134800"
  },
  {
    "text": "times as possible now the the funny story here with the text indent is you're going Matt why the hell is text",
    "start": "2134800",
    "end": "2140119"
  },
  {
    "text": "indent harmful for your layers well we had this little 40x40 icon right it was like a left arrow and in there we had",
    "start": "2140119",
    "end": "2147119"
  },
  {
    "text": "text and we had it hidden using text indent and it was set to a text indent of you know negative 8,000 M or",
    "start": "2147119",
    "end": "2152359"
  },
  {
    "text": "something ridiculously huge well what turned out is when the rendering engine made that layer that layer was the",
    "start": "2152359",
    "end": "2158240"
  },
  {
    "text": "entire size of of a the the drawing surface all the way out to that text all",
    "start": "2158240",
    "end": "2163400"
  },
  {
    "text": "the way over here so your element visually is this big to you but to the rendering engine it's actually this big",
    "start": "2163400",
    "end": "2170560"
  },
  {
    "text": "so it comes down to the point where testing is incredibly important when you start dealing with layers because you want to understand that your magic flag",
    "start": "2170560",
    "end": "2178079"
  },
  {
    "text": "may have had horrific consequences that are going to crash devices in a way that you just can't understand because who",
    "start": "2178079",
    "end": "2183240"
  },
  {
    "text": "would think text and Dent's bad not me now the last item in each one of the",
    "start": "2183240",
    "end": "2188800"
  },
  {
    "text": "columns is they kind of they they contradict each other right a bit but what that goes to is if",
    "start": "2188800",
    "end": "2196440"
  },
  {
    "text": "you want to hide an element that is a layer just move it off screen now if you want to destroy the element you set it",
    "start": "2196440",
    "end": "2202640"
  },
  {
    "text": "with display none so to a user they're both hidden the user doesn't really perceive a difference the device will",
    "start": "2202640",
    "end": "2209000"
  },
  {
    "text": "though because when you say try to redraw that layer again the one that's hidden off screen just gets slid back",
    "start": "2209000",
    "end": "2214240"
  },
  {
    "text": "into place magic the one that was display none that has to get recalculated redrawn and",
    "start": "2214240",
    "end": "2220440"
  },
  {
    "text": "repainted now this is both good and bad right when we go from playback or excuse",
    "start": "2220440",
    "end": "2225920"
  },
  {
    "text": "me from Gallery where we have tons of of those images in the Box shots and application Chrome and we jump into",
    "start": "2225920",
    "end": "2231079"
  },
  {
    "text": "playback where we start showing those giant images we display none the gallery and we do that to reclaim the video",
    "start": "2231079",
    "end": "2236520"
  },
  {
    "text": "memory now that's that that's one of those cases where you need to understand what's happening so you can break the",
    "start": "2236520",
    "end": "2242760"
  },
  {
    "text": "rules intelligently all right so a lot of preaching but here's something that's",
    "start": "2242760",
    "end": "2248920"
  },
  {
    "text": "actually really tangible this is one listro a listro has",
    "start": "2248920",
    "end": "2254640"
  },
  {
    "start": "2251000",
    "end": "2251000"
  },
  {
    "text": "a very simple markup you know a listro is a title and is a bunch of items and we can have one to many items",
    "start": "2254640",
    "end": "2261480"
  },
  {
    "text": "in it so when we look at this we see that we have two red boxes",
    "start": "2261480",
    "end": "2267839"
  },
  {
    "text": "right and we have one yellow box so all those list items are one compositing",
    "start": "2267839",
    "end": "2273599"
  },
  {
    "text": "layer and the list title itself is one compositing layer but that list row it's",
    "start": "2273599",
    "end": "2279040"
  },
  {
    "text": "a container layer so that way as we start to manipulate that list row up and down it still moves as a unit even",
    "start": "2279040",
    "end": "2285200"
  },
  {
    "text": "though it has those individual painting contexts inside of it so this is well and good for going up and down because",
    "start": "2285200",
    "end": "2290640"
  },
  {
    "text": "the layer contents don't change which is awesome but when we go side to side as I go left and right the contents of the",
    "start": "2290640",
    "end": "2297680"
  },
  {
    "start": "2296000",
    "end": "2296000"
  },
  {
    "text": "list items changes so we need to change our our layer composition to accommodate",
    "start": "2297680",
    "end": "2302800"
  },
  {
    "text": "that so when we go left and right instead of having the list Row the list items themselves be one red layer we",
    "start": "2302800",
    "end": "2309839"
  },
  {
    "text": "break it down so that every box is a red layer that way as the cruise the title",
    "start": "2309839",
    "end": "2315240"
  },
  {
    "text": "on the far right moves all the way left we're not recreating it every time if we had left all that as one layer every",
    "start": "2315240",
    "end": "2321640"
  },
  {
    "text": "time that that thing moved every step along the way it would have created a new image over and over and over again",
    "start": "2321640",
    "end": "2328200"
  },
  {
    "text": "so breaking apart your layers is useful doing it intelligently in on purpose is",
    "start": "2328200",
    "end": "2333680"
  },
  {
    "text": "what's best doing it on accident that's not great so here's here's the CSS that does it",
    "start": "2333680",
    "end": "2340680"
  },
  {
    "text": "it's not a lot of magic I hope you guys can read it now so we see that the list row and the list title both have translate Z is",
    "start": "2340680",
    "end": "2347480"
  },
  {
    "text": "of zero right that punches them right into a red compositing layer Now list items that has a it has a plain",
    "start": "2347480",
    "end": "2354520"
  },
  {
    "text": "translate I'll get back to that in a sec now we see for every sequence of those boxes CT is a class that we put on each",
    "start": "2354520",
    "end": "2361800"
  },
  {
    "text": "box we give that a translate X as well now once we go left and right we",
    "start": "2361800",
    "end": "2367760"
  },
  {
    "text": "actually stick a translate Z onto all those sequence images on all the sequence classes and what what we've",
    "start": "2367760",
    "end": "2375200"
  },
  {
    "text": "notice is that if you give something a translate Z webkit is going to take and make that a red border right away for you it's going to punch it into a red",
    "start": "2375200",
    "end": "2381359"
  },
  {
    "text": "border and you're responsible you as as as a developer have specifically said",
    "start": "2381359",
    "end": "2386480"
  },
  {
    "text": "this is a compositing layer make it red yet when we use just a plane transform",
    "start": "2386480",
    "end": "2391599"
  },
  {
    "text": "or excuse me plain translate translate X Translate Y or just translate what we get is we give web get the ability to",
    "start": "2391599",
    "end": "2398640"
  },
  {
    "text": "composite those layers the best way it sees fit so that's why when we're not animating left and right the list items",
    "start": "2398640",
    "end": "2406680"
  },
  {
    "text": "and all the boxes inside of it are just red layers or they they get bubbled up into one layer right back",
    "start": "2406680",
    "end": "2414880"
  },
  {
    "text": "again so none of those list items those boxes have translate Z they're not being punched into layers once we go to here",
    "start": "2414880",
    "end": "2421839"
  },
  {
    "text": "we start punching them into layers great all right so that",
    "start": "2421839",
    "end": "2427960"
  },
  {
    "text": "that is accelerate compositing it's a pretty cool topic it's something which definitely relates to mobile and to",
    "start": "2427960",
    "end": "2433760"
  },
  {
    "start": "2428000",
    "end": "2428000"
  },
  {
    "text": "devices and to desktop you can use this on the desktop but you won't really feel the difference on the desktop because",
    "start": "2433760",
    "end": "2439119"
  },
  {
    "text": "most of the devices that run desktop um web apps are fast and you open something up on your MacBook Pro it just flies but",
    "start": "2439119",
    "end": "2446040"
  },
  {
    "text": "when you start going to slower devices and things that are slower than your iPhone that's when you need to start pushing stuff out of the CPU and in",
    "start": "2446040",
    "end": "2454400"
  },
  {
    "text": "Hardware now the last pull there trial and error I'll just harp on that one more time this is the the trial and eror",
    "start": "2454400",
    "end": "2461599"
  },
  {
    "text": "comes down to things like that text and Dent bug right where you add it and you think that that layer is great but",
    "start": "2461599",
    "end": "2468400"
  },
  {
    "text": "quietly the rendering engine says no no it's actually this big so that's a good example of error and we've had a lot of",
    "start": "2468400",
    "end": "2475640"
  },
  {
    "text": "those as we tried to come up with the best composition for our gallery and for different parts of our app it's a lot of",
    "start": "2475640",
    "end": "2481079"
  },
  {
    "text": "try it test it try it test it try it test it just like most performance updates except now we're not really",
    "start": "2481079",
    "end": "2486720"
  },
  {
    "text": "dealing with JavaScript runtime performance or network IO we're dealing with how fast can we move these Graphics",
    "start": "2486720",
    "end": "2491920"
  },
  {
    "text": "layers around the screen so that that is my talk today I",
    "start": "2491920",
    "end": "2497440"
  },
  {
    "text": "really thank you all for coming and uh thank",
    "start": "2497440",
    "end": "2502519"
  },
  {
    "text": "you good question the the sel's question was if we take a layer that's already",
    "start": "2504640",
    "end": "2510119"
  },
  {
    "text": "built and we push it off screen it's still in memory right so to our app we haven't reclaimed anything that's",
    "start": "2510119",
    "end": "2515880"
  },
  {
    "text": "absolutely true um so when we do that we're we're careful about it and we do it in places typically it's it's a fast",
    "start": "2515880",
    "end": "2521160"
  },
  {
    "text": "interaction like say say we we toggle a panel that shows up and and Fades away like that we'll do that with offscreen",
    "start": "2521160",
    "end": "2527319"
  },
  {
    "text": "that way next time it shows up it's it's closer to instantaneous um once we do things like change the overall state of",
    "start": "2527319",
    "end": "2532720"
  },
  {
    "text": "the application something like entering playback that's when we really flush as much as we can so the the question is um",
    "start": "2532720",
    "end": "2540000"
  },
  {
    "text": "how do we know when we have too many layers in in screen in in video memory and typically for us that's when things",
    "start": "2540000",
    "end": "2545040"
  },
  {
    "text": "start slowing down a lot because when you run out of video memory all those animation operations go to hard go to",
    "start": "2545040",
    "end": "2550680"
  },
  {
    "text": "software um so it's it's more of a a reactive operation um we don't have a way to measure our individual me video",
    "start": "2550680",
    "end": "2557559"
  },
  {
    "text": "memory usage at a certain point in time all right I'll be up here and you guys can come ask more questions if you",
    "start": "2557559",
    "end": "2562839"
  },
  {
    "text": "want thanks a lot",
    "start": "2562839",
    "end": "2566319"
  }
]