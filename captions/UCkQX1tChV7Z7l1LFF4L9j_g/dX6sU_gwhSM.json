[
  {
    "start": "0",
    "end": "85000"
  },
  {
    "text": "you want to find network errors fast and",
    "start": "960",
    "end": "2639"
  },
  {
    "text": "need a reliable tool now what you are",
    "start": "2639",
    "end": "5040"
  },
  {
    "text": "not alone try fiddler everywhere free",
    "start": "5040",
    "end": "7120"
  },
  {
    "text": "for 30 days and let this all in one web",
    "start": "7120",
    "end": "8960"
  },
  {
    "text": "debugging solution deliver the",
    "start": "8960",
    "end": "10559"
  },
  {
    "text": "successful outcomes you expect learn",
    "start": "10559",
    "end": "12639"
  },
  {
    "text": "more at telerik.com forward slash",
    "start": "12639",
    "end": "14880"
  },
  {
    "text": "fiddler",
    "start": "14880",
    "end": "17880"
  },
  {
    "text": "hello and welcome to the infoq podcast",
    "start": "19279",
    "end": "22320"
  },
  {
    "text": "i'm charles humble one of the co-hosts",
    "start": "22320",
    "end": "24640"
  },
  {
    "text": "of the show and editor-in-chief at cloud",
    "start": "24640",
    "end": "26560"
  },
  {
    "text": "native consultancy firm container",
    "start": "26560",
    "end": "28320"
  },
  {
    "text": "solutions my guest this week is james",
    "start": "28320",
    "end": "30800"
  },
  {
    "text": "clark",
    "start": "30800",
    "end": "31679"
  },
  {
    "text": "james has been contributing to the open",
    "start": "31679",
    "end": "33600"
  },
  {
    "text": "source community for nearly 20 years and",
    "start": "33600",
    "end": "36079"
  },
  {
    "text": "is probably best known as a pioneer of",
    "start": "36079",
    "end": "38079"
  },
  {
    "text": "sgml and xml more recently he's been",
    "start": "38079",
    "end": "41040"
  },
  {
    "text": "working for wso2 which is an open source",
    "start": "41040",
    "end": "43840"
  },
  {
    "text": "technology provider founded in 2005",
    "start": "43840",
    "end": "46800"
  },
  {
    "text": "where he is the lead designer for the",
    "start": "46800",
    "end": "49200"
  },
  {
    "text": "ballerina language ballerina is an open",
    "start": "49200",
    "end": "51920"
  },
  {
    "text": "source programming language for the",
    "start": "51920",
    "end": "53440"
  },
  {
    "text": "cloud that makes it easier to use",
    "start": "53440",
    "end": "55280"
  },
  {
    "text": "combine and create network services it",
    "start": "55280",
    "end": "57840"
  },
  {
    "text": "is i think a really interesting language",
    "start": "57840",
    "end": "59520"
  },
  {
    "text": "that joins others like go and rust and",
    "start": "59520",
    "end": "61680"
  },
  {
    "text": "dart as being languages that have been",
    "start": "61680",
    "end": "63680"
  },
  {
    "text": "developed for this cloud native era and",
    "start": "63680",
    "end": "66159"
  },
  {
    "text": "so it's ballerina that will be the focus",
    "start": "66159",
    "end": "67920"
  },
  {
    "text": "for this podcast james welcome to the",
    "start": "67920",
    "end": "70080"
  },
  {
    "text": "infaque podcast hello thank you for",
    "start": "70080",
    "end": "72320"
  },
  {
    "text": "having me i think it's actually nearly",
    "start": "72320",
    "end": "73840"
  },
  {
    "text": "after 30 years i've been doing this sort",
    "start": "73840",
    "end": "75520"
  },
  {
    "text": "of thing actually i'm getting on a bit",
    "start": "75520",
    "end": "76880"
  },
  {
    "text": "now is it thirsty i think it's nearly 30",
    "start": "76880",
    "end": "79200"
  },
  {
    "text": "now",
    "start": "79200",
    "end": "80640"
  },
  {
    "text": "nearly 30 years thanks to that",
    "start": "80640",
    "end": "84560"
  },
  {
    "text": "there we are so i said in my",
    "start": "84560",
    "end": "86080"
  },
  {
    "start": "85000",
    "end": "162000"
  },
  {
    "text": "introduction that ballerina has been",
    "start": "86080",
    "end": "87600"
  },
  {
    "text": "conceived during this new sort of cloud",
    "start": "87600",
    "end": "89360"
  },
  {
    "text": "native era so how has the shift to",
    "start": "89360",
    "end": "92079"
  },
  {
    "text": "clouds changed programming in your feed",
    "start": "92079",
    "end": "94400"
  },
  {
    "text": "i think it changes",
    "start": "94400",
    "end": "96079"
  },
  {
    "text": "in a very big way what are the main",
    "start": "96079",
    "end": "97600"
  },
  {
    "text": "tasks that a program do you know i",
    "start": "97600",
    "end": "99600"
  },
  {
    "text": "started programming in the pre-cloud",
    "start": "99600",
    "end": "100960"
  },
  {
    "text": "area you think about how a program gets",
    "start": "100960",
    "end": "102960"
  },
  {
    "text": "things done in that area you know you",
    "start": "102960",
    "end": "105119"
  },
  {
    "text": "were having perl and it was you know you",
    "start": "105119",
    "end": "107040"
  },
  {
    "text": "read read files you write files and you",
    "start": "107040",
    "end": "110079"
  },
  {
    "text": "have apis but the apis are",
    "start": "110079",
    "end": "113200"
  },
  {
    "text": "calls to libraries like order maybe",
    "start": "113200",
    "end": "115360"
  },
  {
    "text": "shared libraries or c libraries they're",
    "start": "115360",
    "end": "117920"
  },
  {
    "text": "all on the same machine so apis are",
    "start": "117920",
    "end": "120320"
  },
  {
    "text": "library apis and you get stuff done by",
    "start": "120320",
    "end": "122240"
  },
  {
    "text": "writing files basically whereas in the",
    "start": "122240",
    "end": "124240"
  },
  {
    "text": "cloud area you get stuff done by",
    "start": "124240",
    "end": "126799"
  },
  {
    "text": "consuming and providing network services",
    "start": "126799",
    "end": "130160"
  },
  {
    "text": "and the apis that matter are primarily",
    "start": "130160",
    "end": "132879"
  },
  {
    "text": "network apis so they're sending network",
    "start": "132879",
    "end": "135200"
  },
  {
    "text": "messages typically http typically json",
    "start": "135200",
    "end": "138800"
  },
  {
    "text": "and so what an api is and what the main",
    "start": "138800",
    "end": "141440"
  },
  {
    "text": "business of a program is very different",
    "start": "141440",
    "end": "144080"
  },
  {
    "text": "yes another aspect is concurrency in the",
    "start": "144080",
    "end": "146000"
  },
  {
    "text": "you know traditional sea world if you",
    "start": "146000",
    "end": "147920"
  },
  {
    "text": "like most application programs don't",
    "start": "147920",
    "end": "149680"
  },
  {
    "text": "really need to worry about it the",
    "start": "149680",
    "end": "150959"
  },
  {
    "text": "operating system does but the",
    "start": "150959",
    "end": "152560"
  },
  {
    "text": "application program can just sort of",
    "start": "152560",
    "end": "154080"
  },
  {
    "text": "forget about it whereas in the cloud",
    "start": "154080",
    "end": "155840"
  },
  {
    "text": "it's pretty pervasive you've really got",
    "start": "155840",
    "end": "157599"
  },
  {
    "text": "to think about it you can't completely",
    "start": "157599",
    "end": "159760"
  },
  {
    "text": "hide concurrency from the application",
    "start": "159760",
    "end": "161840"
  },
  {
    "text": "programmer and then given that context",
    "start": "161840",
    "end": "164480"
  },
  {
    "start": "162000",
    "end": "236000"
  },
  {
    "text": "what is the specific goal or goals you",
    "start": "164480",
    "end": "166800"
  },
  {
    "text": "have for ballerina what is it that",
    "start": "166800",
    "end": "168239"
  },
  {
    "text": "you're trying to accomplish with the",
    "start": "168239",
    "end": "170400"
  },
  {
    "text": "language this isn't an academic exercise",
    "start": "170400",
    "end": "172560"
  },
  {
    "text": "so it's very much designed to be a",
    "start": "172560",
    "end": "174480"
  },
  {
    "text": "pragmatic language",
    "start": "174480",
    "end": "176000"
  },
  {
    "text": "and it's not designed we don't want it",
    "start": "176000",
    "end": "177440"
  },
  {
    "text": "to be a niche language we have ambitious",
    "start": "177440",
    "end": "179519"
  },
  {
    "text": "goals we want it to be something that is",
    "start": "179519",
    "end": "181680"
  },
  {
    "text": "capable of being a mainstream language",
    "start": "181680",
    "end": "184640"
  },
  {
    "text": "so i guess the initial target is we want",
    "start": "184640",
    "end": "186640"
  },
  {
    "text": "it to be a good way to do enterprise",
    "start": "186640",
    "end": "189440"
  },
  {
    "text": "integration and you can start off as a",
    "start": "189440",
    "end": "191200"
  },
  {
    "text": "narrow objective which is we want it to",
    "start": "191200",
    "end": "193440"
  },
  {
    "text": "be a good way to do enterprise",
    "start": "193440",
    "end": "194879"
  },
  {
    "text": "integration good compared to",
    "start": "194879",
    "end": "197599"
  },
  {
    "text": "the traditional way which is an esb plus",
    "start": "197599",
    "end": "200560"
  },
  {
    "text": "some java so basically what we said the",
    "start": "200560",
    "end": "202879"
  },
  {
    "text": "basic concept is okay instead of having",
    "start": "202879",
    "end": "205519"
  },
  {
    "text": "a dsl typically a dsl you know with xml",
    "start": "205519",
    "end": "208560"
  },
  {
    "text": "syntax that has networky stuff that's",
    "start": "208560",
    "end": "211280"
  },
  {
    "text": "all about you know providing endpoints",
    "start": "211280",
    "end": "213440"
  },
  {
    "text": "and messages and routing instead of",
    "start": "213440",
    "end": "215680"
  },
  {
    "text": "having that plus java let's just have",
    "start": "215680",
    "end": "219840"
  },
  {
    "text": "one unified language that you can do it",
    "start": "219840",
    "end": "222400"
  },
  {
    "text": "all in you don't have to have this two",
    "start": "222400",
    "end": "224480"
  },
  {
    "text": "language",
    "start": "224480",
    "end": "225599"
  },
  {
    "text": "you don't have to have this split and",
    "start": "225599",
    "end": "227599"
  },
  {
    "text": "you could just do it all in one unified",
    "start": "227599",
    "end": "230400"
  },
  {
    "text": "way and in a way that sort of works is a",
    "start": "230400",
    "end": "233360"
  },
  {
    "text": "good fit for the needs of the cloud",
    "start": "233360",
    "end": "236560"
  },
  {
    "text": "when i first started looking at the",
    "start": "236560",
    "end": "238400"
  },
  {
    "text": "language one of the things i was struck",
    "start": "238400",
    "end": "240080"
  },
  {
    "text": "by was that everything is very explicit",
    "start": "240080",
    "end": "242319"
  },
  {
    "text": "so for example there are no implicit",
    "start": "242319",
    "end": "244000"
  },
  {
    "text": "conversions between integers and",
    "start": "244000",
    "end": "245760"
  },
  {
    "text": "floating point values and integer",
    "start": "245760",
    "end": "247680"
  },
  {
    "text": "overflow causes a runtime exception and",
    "start": "247680",
    "end": "249840"
  },
  {
    "text": "so on it feels very much like a language",
    "start": "249840",
    "end": "252319"
  },
  {
    "text": "that's been designed to favor ease of",
    "start": "252319",
    "end": "254640"
  },
  {
    "text": "maintainability over speed of kind of",
    "start": "254640",
    "end": "257600"
  },
  {
    "text": "initial implementation initial typing",
    "start": "257600",
    "end": "259600"
  },
  {
    "text": "would you agree with that is that a fair",
    "start": "259600",
    "end": "261120"
  },
  {
    "text": "assessment absolutely it's a kind of i",
    "start": "261120",
    "end": "263120"
  },
  {
    "text": "mean if i say enterprising mindset not",
    "start": "263120",
    "end": "265120"
  },
  {
    "text": "everybody would understand that in a",
    "start": "265120",
    "end": "266320"
  },
  {
    "text": "positive way i mean programs are red i",
    "start": "266320",
    "end": "268479"
  },
  {
    "text": "mean real programs the businesses you",
    "start": "268479",
    "end": "270560"
  },
  {
    "text": "know rely on serious programs they have",
    "start": "270560",
    "end": "273040"
  },
  {
    "text": "a long life span",
    "start": "273040",
    "end": "275040"
  },
  {
    "text": "you've got that crafty cobalt code",
    "start": "275040",
    "end": "276960"
  },
  {
    "text": "that's 20 or 30 years old",
    "start": "276960",
    "end": "278800"
  },
  {
    "text": "they're read from years and decades but",
    "start": "278800",
    "end": "281199"
  },
  {
    "text": "being able to read it and understand it",
    "start": "281199",
    "end": "283360"
  },
  {
    "text": "is far more important than being able to",
    "start": "283360",
    "end": "285919"
  },
  {
    "text": "save a few key strokes when you're",
    "start": "285919",
    "end": "287280"
  },
  {
    "text": "typing it out so it's definitely a",
    "start": "287280",
    "end": "289360"
  },
  {
    "text": "fundamental design goal of ballerina to",
    "start": "289360",
    "end": "293120"
  },
  {
    "text": "favor maintainability favor explicitness",
    "start": "293120",
    "end": "296960"
  },
  {
    "text": "avoid surprises and also to leverage",
    "start": "296960",
    "end": "300160"
  },
  {
    "text": "familiarity and leverage what people",
    "start": "300160",
    "end": "301759"
  },
  {
    "text": "know the percentage of working",
    "start": "301759",
    "end": "303680"
  },
  {
    "text": "programmers who know one of you know",
    "start": "303680",
    "end": "306000"
  },
  {
    "text": "javascript c c sharp java c plus plus is",
    "start": "306000",
    "end": "309280"
  },
  {
    "text": "pretty high",
    "start": "309280",
    "end": "310479"
  },
  {
    "text": "and so we want to leverage that so that",
    "start": "310479",
    "end": "312800"
  },
  {
    "text": "if you know one of these languages and",
    "start": "312800",
    "end": "314880"
  },
  {
    "text": "you look at a chunk of ballerina code",
    "start": "314880",
    "end": "317680"
  },
  {
    "text": "you should have a pretty good idea",
    "start": "317680",
    "end": "318960"
  },
  {
    "text": "what's going on i may not know every",
    "start": "318960",
    "end": "320960"
  },
  {
    "text": "little detail of the semantics of the",
    "start": "320960",
    "end": "322479"
  },
  {
    "text": "language but you can look at it and even",
    "start": "322479",
    "end": "323919"
  },
  {
    "text": "knowing zero ballerina you should have a",
    "start": "323919",
    "end": "326720"
  },
  {
    "text": "reasonable sense of what's going on it",
    "start": "326720",
    "end": "328479"
  },
  {
    "text": "should not be mysterious",
    "start": "328479",
    "end": "330560"
  },
  {
    "start": "330000",
    "end": "385000"
  },
  {
    "text": "right and that shows up for example in",
    "start": "330560",
    "end": "332400"
  },
  {
    "text": "the way you do error handling you don't",
    "start": "332400",
    "end": "334240"
  },
  {
    "text": "use the exception method which is common",
    "start": "334240",
    "end": "336240"
  },
  {
    "text": "in languages like java i think there's a",
    "start": "336240",
    "end": "338080"
  },
  {
    "text": "significant trend in modern programming",
    "start": "338080",
    "end": "340880"
  },
  {
    "text": "languages away from exceptions towards",
    "start": "340880",
    "end": "343840"
  },
  {
    "text": "more explicit error handling where you",
    "start": "343840",
    "end": "346479"
  },
  {
    "text": "return error values so you see that in",
    "start": "346479",
    "end": "349759"
  },
  {
    "text": "go",
    "start": "349759",
    "end": "350560"
  },
  {
    "text": "and in rust explicit error handling is",
    "start": "350560",
    "end": "353039"
  },
  {
    "text": "explicit you do have exceptional flow",
    "start": "353039",
    "end": "355199"
  },
  {
    "text": "which are panics but those are for the",
    "start": "355199",
    "end": "357360"
  },
  {
    "text": "really truly exceptional case but a",
    "start": "357360",
    "end": "360240"
  },
  {
    "text": "regular error handling and then it's a",
    "start": "360240",
    "end": "361680"
  },
  {
    "text": "normal part of network programming to",
    "start": "361680",
    "end": "363120"
  },
  {
    "text": "have errors that is dealt with",
    "start": "363120",
    "end": "364720"
  },
  {
    "text": "explicitly you see the control flow",
    "start": "364720",
    "end": "367280"
  },
  {
    "text": "explicitly in the program just like",
    "start": "367280",
    "end": "369600"
  },
  {
    "text": "regular control flare and that again is",
    "start": "369600",
    "end": "371759"
  },
  {
    "text": "a thing that's a little bit more",
    "start": "371759",
    "end": "372960"
  },
  {
    "text": "inconvenient to write but the poor old",
    "start": "372960",
    "end": "375120"
  },
  {
    "text": "maintenance programmer who's coming to",
    "start": "375120",
    "end": "376400"
  },
  {
    "text": "look at it can see what are the possible",
    "start": "376400",
    "end": "378720"
  },
  {
    "text": "control flows and is going to have a",
    "start": "378720",
    "end": "381120"
  },
  {
    "text": "much easier time not screwing up when",
    "start": "381120",
    "end": "383840"
  },
  {
    "text": "they try and fix bugs right yes i found",
    "start": "383840",
    "end": "386800"
  },
  {
    "start": "385000",
    "end": "434000"
  },
  {
    "text": "this really interesting because most of",
    "start": "386800",
    "end": "388560"
  },
  {
    "text": "my professional programming was done in",
    "start": "388560",
    "end": "390000"
  },
  {
    "text": "java and obviously java has its concept",
    "start": "390000",
    "end": "392560"
  },
  {
    "text": "of checked exceptions which i think were",
    "start": "392560",
    "end": "394800"
  },
  {
    "text": "trying to solve the same problem but",
    "start": "394800",
    "end": "396800"
  },
  {
    "text": "because they allow you to throw a",
    "start": "396800",
    "end": "398160"
  },
  {
    "text": "runtime exception most people do that so",
    "start": "398160",
    "end": "400639"
  },
  {
    "text": "the checks exceptions didn't really work",
    "start": "400639",
    "end": "402800"
  },
  {
    "text": "but i think it's trying to do the same",
    "start": "402800",
    "end": "404080"
  },
  {
    "text": "sort of job yes and the checked",
    "start": "404080",
    "end": "405759"
  },
  {
    "text": "exceptions are not quite the same it",
    "start": "405759",
    "end": "407360"
  },
  {
    "text": "shows you which of the possible",
    "start": "407360",
    "end": "409120"
  },
  {
    "text": "exceptions but it's still you don't know",
    "start": "409120",
    "end": "411599"
  },
  {
    "text": "when you call a function when you see a",
    "start": "411599",
    "end": "413520"
  },
  {
    "text": "function call there you don't see in the",
    "start": "413520",
    "end": "415759"
  },
  {
    "text": "call that there is the possibility of it",
    "start": "415759",
    "end": "417440"
  },
  {
    "text": "throwing exceptions you see that there",
    "start": "417440",
    "end": "418880"
  },
  {
    "text": "is a possibility of checking sessions",
    "start": "418880",
    "end": "420160"
  },
  {
    "text": "but it's not explicit in the syntax so",
    "start": "420160",
    "end": "422080"
  },
  {
    "text": "every time you see a function chord",
    "start": "422080",
    "end": "423360"
  },
  {
    "text": "you've got to go what are the possible",
    "start": "423360",
    "end": "425039"
  },
  {
    "text": "exceptions that can throw and how is",
    "start": "425039",
    "end": "427520"
  },
  {
    "text": "this going to affect the flow of control",
    "start": "427520",
    "end": "429440"
  },
  {
    "text": "in the function and that just makes it",
    "start": "429440",
    "end": "432400"
  },
  {
    "text": "harder to figure out what's going on now",
    "start": "432400",
    "end": "434479"
  },
  {
    "start": "434000",
    "end": "560000"
  },
  {
    "text": "you've said that ballerina isn't a",
    "start": "434479",
    "end": "436080"
  },
  {
    "text": "research language it's intended to be",
    "start": "436080",
    "end": "437919"
  },
  {
    "text": "used in industry for real world",
    "start": "437919",
    "end": "439759"
  },
  {
    "text": "applications and given that you haven't",
    "start": "439759",
    "end": "442479"
  },
  {
    "text": "invented any particularly new ideas from",
    "start": "442479",
    "end": "445120"
  },
  {
    "text": "a language point of view so what is it",
    "start": "445120",
    "end": "447199"
  },
  {
    "text": "that makes it distinct i mean there are",
    "start": "447199",
    "end": "448960"
  },
  {
    "text": "several different dimensions but we're",
    "start": "448960",
    "end": "450800"
  },
  {
    "text": "starting off from the proposition that",
    "start": "450800",
    "end": "452080"
  },
  {
    "text": "what we want to do is make the things",
    "start": "452080",
    "end": "454400"
  },
  {
    "text": "that a program has to do today easy so",
    "start": "454400",
    "end": "456960"
  },
  {
    "text": "consume and provide network services",
    "start": "456960",
    "end": "459120"
  },
  {
    "text": "work with data we want to make those",
    "start": "459120",
    "end": "461120"
  },
  {
    "text": "easy",
    "start": "461120",
    "end": "462160"
  },
  {
    "text": "that's one damage another dimension is",
    "start": "462160",
    "end": "464160"
  },
  {
    "text": "that we are trying to provide an",
    "start": "464160",
    "end": "466319"
  },
  {
    "text": "alternative to a combination of a dsl",
    "start": "466319",
    "end": "469680"
  },
  {
    "text": "and java and one of the things you can",
    "start": "469680",
    "end": "471440"
  },
  {
    "text": "do with the dsl is you can have a",
    "start": "471440",
    "end": "473360"
  },
  {
    "text": "graphical view and the graphical view",
    "start": "473360",
    "end": "476160"
  },
  {
    "text": "that you get from the dsl isn't just the",
    "start": "476160",
    "end": "478319"
  },
  {
    "text": "syntax it's not just a syntactic view it",
    "start": "478319",
    "end": "480960"
  },
  {
    "text": "is actually showing you meaningful",
    "start": "480960",
    "end": "482240"
  },
  {
    "text": "things about the flow of messages that",
    "start": "482240",
    "end": "485120"
  },
  {
    "text": "is possible within your application and",
    "start": "485120",
    "end": "487039"
  },
  {
    "text": "so one of the goals is that you should",
    "start": "487039",
    "end": "488720"
  },
  {
    "text": "be able to take a ballerina program and",
    "start": "488720",
    "end": "491919"
  },
  {
    "text": "from that have a graphical view that is",
    "start": "491919",
    "end": "495759"
  },
  {
    "text": "not just syntactic it's not just giving",
    "start": "495759",
    "end": "498240"
  },
  {
    "text": "you the classes or the functions it is",
    "start": "498240",
    "end": "501199"
  },
  {
    "text": "actually giving you real insight into",
    "start": "501199",
    "end": "503840"
  },
  {
    "text": "how your application is interacting with",
    "start": "503840",
    "end": "505919"
  },
  {
    "text": "the network and it does that by",
    "start": "505919",
    "end": "508080"
  },
  {
    "text": "leveraging sequence diagrams",
    "start": "508080",
    "end": "510639"
  },
  {
    "text": "and i think part of wso2's experience",
    "start": "510639",
    "end": "513200"
  },
  {
    "text": "doing enterprise integration for 15",
    "start": "513200",
    "end": "515120"
  },
  {
    "text": "years is that when you talk to customers",
    "start": "515120",
    "end": "517360"
  },
  {
    "text": "and they want to explain you know how is",
    "start": "517360",
    "end": "519360"
  },
  {
    "text": "this application supposed to be working",
    "start": "519360",
    "end": "521599"
  },
  {
    "text": "what they do is they sit down they write",
    "start": "521599",
    "end": "523518"
  },
  {
    "text": "a little sequence diagram draw a little",
    "start": "523519",
    "end": "525200"
  },
  {
    "text": "sequence track and that gets everybody",
    "start": "525200",
    "end": "527040"
  },
  {
    "text": "on the same page so one of the key",
    "start": "527040",
    "end": "529200"
  },
  {
    "text": "features in ballerina is that you can",
    "start": "529200",
    "end": "532560"
  },
  {
    "text": "click on it and you can look at every",
    "start": "532560",
    "end": "534880"
  },
  {
    "text": "function as a sequence diagram and you",
    "start": "534880",
    "end": "536640"
  },
  {
    "text": "can see the flow of messages in that",
    "start": "536640",
    "end": "539440"
  },
  {
    "text": "function and that is something that's",
    "start": "539440",
    "end": "541200"
  },
  {
    "text": "deep you know that sort of deeply",
    "start": "541200",
    "end": "542560"
  },
  {
    "text": "affects the syntax and it deeply affects",
    "start": "542560",
    "end": "544880"
  },
  {
    "text": "the concurrency model and that's",
    "start": "544880",
    "end": "546640"
  },
  {
    "text": "something you couldn't sort of graft on",
    "start": "546640",
    "end": "548399"
  },
  {
    "text": "to any other program so when you get",
    "start": "548399",
    "end": "549920"
  },
  {
    "text": "this it's a two-way model so you can",
    "start": "549920",
    "end": "551600"
  },
  {
    "text": "edit the sequence diagram or you can",
    "start": "551600",
    "end": "553200"
  },
  {
    "text": "edit the code and the two views are the",
    "start": "553200",
    "end": "555279"
  },
  {
    "text": "same thing you can always think of it as",
    "start": "555279",
    "end": "556720"
  },
  {
    "text": "an alternative syntax for the higher",
    "start": "556720",
    "end": "558880"
  },
  {
    "text": "level layers of the language",
    "start": "558880",
    "end": "560560"
  },
  {
    "text": "right yes and that i think is really",
    "start": "560560",
    "end": "562240"
  },
  {
    "text": "interesting and it is something that i",
    "start": "562240",
    "end": "563519"
  },
  {
    "text": "think is kind of unique so the graphical",
    "start": "563519",
    "end": "566160"
  },
  {
    "text": "representation is a graphical",
    "start": "566160",
    "end": "568240"
  },
  {
    "text": "representation of the actual ballerina",
    "start": "568240",
    "end": "570399"
  },
  {
    "text": "syntax tree meaning that there's no",
    "start": "570399",
    "end": "572399"
  },
  {
    "text": "abstraction there's no translation",
    "start": "572399",
    "end": "574240"
  },
  {
    "text": "between the visualization and the code",
    "start": "574240",
    "end": "576000"
  },
  {
    "text": "that runs on the platform if you edit",
    "start": "576000",
    "end": "577920"
  },
  {
    "text": "the diagram you're editing the code and",
    "start": "577920",
    "end": "580080"
  },
  {
    "text": "vice versa so you can genuinely round",
    "start": "580080",
    "end": "582560"
  },
  {
    "text": "trip between low code and normal code as",
    "start": "582560",
    "end": "584880"
  },
  {
    "text": "it were exactly there's no possibility",
    "start": "584880",
    "end": "586800"
  },
  {
    "text": "of them getting out of sync as we are",
    "start": "586800",
    "end": "588320"
  },
  {
    "text": "now",
    "start": "588320",
    "end": "589360"
  },
  {
    "text": "right",
    "start": "589360",
    "end": "591839"
  },
  {
    "text": "just for listeners we're on a different",
    "start": "592320",
    "end": "593839"
  },
  {
    "text": "continent so there's a little bit of a",
    "start": "593839",
    "end": "595120"
  },
  {
    "text": "lag but there's no possibility with",
    "start": "595120",
    "end": "597200"
  },
  {
    "text": "these two views of their getting out of",
    "start": "597200",
    "end": "599040"
  },
  {
    "text": "sync and that comes from having thought",
    "start": "599040",
    "end": "601440"
  },
  {
    "text": "about this you couldn't do this just by",
    "start": "601440",
    "end": "603519"
  },
  {
    "text": "drawing a pretty layer on top of another",
    "start": "603519",
    "end": "605279"
  },
  {
    "text": "language it's designed in and it's",
    "start": "605279",
    "end": "607519"
  },
  {
    "text": "designed into the concurrency model the",
    "start": "607519",
    "end": "609440"
  },
  {
    "text": "way we do concurrency is it's somewhat",
    "start": "609440",
    "end": "611040"
  },
  {
    "text": "limited and we know we need fancier",
    "start": "611040",
    "end": "612959"
  },
  {
    "text": "stuff for the cases it doesn't handle",
    "start": "612959",
    "end": "614480"
  },
  {
    "text": "for the cases it does handle it provides",
    "start": "614480",
    "end": "617040"
  },
  {
    "text": "a more controlled environment you can",
    "start": "617040",
    "end": "618399"
  },
  {
    "text": "really see what's going on and there's a",
    "start": "618399",
    "end": "620000"
  },
  {
    "text": "much easier way to do things",
    "start": "620000",
    "end": "622160"
  },
  {
    "text": "so that's possibly a unique thing but i",
    "start": "622160",
    "end": "624320"
  },
  {
    "text": "think there's deeper stuff too which",
    "start": "624320",
    "end": "626560"
  },
  {
    "text": "goes back to the point about apis what",
    "start": "626560",
    "end": "629440"
  },
  {
    "text": "is an api in a cloud era language cloud",
    "start": "629440",
    "end": "632640"
  },
  {
    "text": "era language it's a network api so",
    "start": "632640",
    "end": "635760"
  },
  {
    "text": "how does a network api differ from a",
    "start": "635760",
    "end": "639120"
  },
  {
    "text": "traditional object oriented api well i",
    "start": "639120",
    "end": "641360"
  },
  {
    "text": "think one of the big difference is that",
    "start": "641360",
    "end": "644160"
  },
  {
    "text": "you want to do more in each network",
    "start": "644160",
    "end": "646000"
  },
  {
    "text": "round trip round trip so expensive so",
    "start": "646000",
    "end": "648320"
  },
  {
    "text": "you have typically",
    "start": "648320",
    "end": "650160"
  },
  {
    "text": "the parameters to your network apis are",
    "start": "650160",
    "end": "653040"
  },
  {
    "text": "often complex structures so you're",
    "start": "653040",
    "end": "655519"
  },
  {
    "text": "sending data and whereas your object",
    "start": "655519",
    "end": "658000"
  },
  {
    "text": "oriented maybe i might be set this set",
    "start": "658000",
    "end": "659839"
  },
  {
    "text": "that and it's a boolean orient or",
    "start": "659839",
    "end": "661360"
  },
  {
    "text": "something you don't do your network apis",
    "start": "661360",
    "end": "663519"
  },
  {
    "text": "like that instead you want to send in",
    "start": "663519",
    "end": "665760"
  },
  {
    "text": "each of your api calls it's a complex",
    "start": "665760",
    "end": "667680"
  },
  {
    "text": "structure typically json which has a",
    "start": "667680",
    "end": "669839"
  },
  {
    "text": "deemed necessarily a tree structure",
    "start": "669839",
    "end": "671839"
  },
  {
    "text": "that's one thing another thing is that",
    "start": "671839",
    "end": "673279"
  },
  {
    "text": "the different parts of your service are",
    "start": "673279",
    "end": "675200"
  },
  {
    "text": "going to be in different languages one",
    "start": "675200",
    "end": "676560"
  },
  {
    "text": "of the beautiful things about",
    "start": "676560",
    "end": "677839"
  },
  {
    "text": "microservices is you're not constrained",
    "start": "677839",
    "end": "679440"
  },
  {
    "text": "to use one language for everything you",
    "start": "679440",
    "end": "681279"
  },
  {
    "text": "don't have to have a common api or",
    "start": "681279",
    "end": "683040"
  },
  {
    "text": "anything each bit of your system can be",
    "start": "683040",
    "end": "684720"
  },
  {
    "text": "written in whatever language is best",
    "start": "684720",
    "end": "686560"
  },
  {
    "text": "suited for that bit but that means that",
    "start": "686560",
    "end": "688480"
  },
  {
    "text": "your messages your data the parameters",
    "start": "688480",
    "end": "690640"
  },
  {
    "text": "if you like to your api you want those",
    "start": "690640",
    "end": "693040"
  },
  {
    "text": "to be",
    "start": "693040",
    "end": "693920"
  },
  {
    "text": "data you want to be pure data you don't",
    "start": "693920",
    "end": "696160"
  },
  {
    "text": "want them to be objects you want to send",
    "start": "696160",
    "end": "698720"
  },
  {
    "text": "around chunks of json that can be",
    "start": "698720",
    "end": "700640"
  },
  {
    "text": "interpreted by whatever language each",
    "start": "700640",
    "end": "703680"
  },
  {
    "text": "microservice is using so that means you",
    "start": "703680",
    "end": "705680"
  },
  {
    "text": "want a lot of what you want to do in an",
    "start": "705680",
    "end": "707360"
  },
  {
    "text": "integration language is deal with this",
    "start": "707360",
    "end": "708800"
  },
  {
    "text": "data it's not objects it's just data and",
    "start": "708800",
    "end": "711839"
  },
  {
    "text": "you want to take the message you got",
    "start": "711839",
    "end": "713920"
  },
  {
    "text": "from one and you want to transform it a",
    "start": "713920",
    "end": "715680"
  },
  {
    "text": "bit and you want to send it off to",
    "start": "715680",
    "end": "717839"
  },
  {
    "text": "somewhere else or you want to combine",
    "start": "717839",
    "end": "719760"
  },
  {
    "text": "two of them together into another",
    "start": "719760",
    "end": "721360"
  },
  {
    "text": "message and send it off to several",
    "start": "721360",
    "end": "722959"
  },
  {
    "text": "different people but instead it's not",
    "start": "722959",
    "end": "724240"
  },
  {
    "text": "the object-oriented the object-oriented",
    "start": "724240",
    "end": "725680"
  },
  {
    "text": "way is about combining code and data",
    "start": "725680",
    "end": "728800"
  },
  {
    "text": "into objects and keeping the data hidden",
    "start": "728800",
    "end": "731519"
  },
  {
    "text": "within the object opposite of what you",
    "start": "731519",
    "end": "733600"
  },
  {
    "text": "want to do when you're dealing with",
    "start": "733600",
    "end": "735040"
  },
  {
    "text": "network apis you want to expose the data",
    "start": "735040",
    "end": "738079"
  },
  {
    "text": "well it may be hidden within your",
    "start": "738079",
    "end": "739279"
  },
  {
    "text": "service but you're exposing the data in",
    "start": "739279",
    "end": "741120"
  },
  {
    "text": "the messages that you're sending is very",
    "start": "741120",
    "end": "743200"
  },
  {
    "text": "much exposed",
    "start": "743200",
    "end": "744480"
  },
  {
    "start": "744000",
    "end": "781000"
  },
  {
    "text": "right yes i mean you have this concept",
    "start": "744480",
    "end": "746480"
  },
  {
    "text": "of plane data in ballerina i was trying",
    "start": "746480",
    "end": "749279"
  },
  {
    "text": "to think i'm not quite sure where that",
    "start": "749279",
    "end": "750560"
  },
  {
    "text": "term originates but could you maybe try",
    "start": "750560",
    "end": "753120"
  },
  {
    "text": "and give us a bit of a definition of",
    "start": "753120",
    "end": "754639"
  },
  {
    "text": "what plane data actually is in ballerina",
    "start": "754639",
    "end": "757600"
  },
  {
    "text": "it's a term that actually comes from i",
    "start": "757600",
    "end": "759600"
  },
  {
    "text": "think it's a c plus plus term pod plain",
    "start": "759600",
    "end": "762399"
  },
  {
    "text": "old data it's just data that doesn't",
    "start": "762399",
    "end": "765200"
  },
  {
    "text": "have any methods attached to it it",
    "start": "765200",
    "end": "767760"
  },
  {
    "text": "doesn't make any assumptions as how it's",
    "start": "767760",
    "end": "769279"
  },
  {
    "text": "going to be processed it's programming",
    "start": "769279",
    "end": "771440"
  },
  {
    "text": "language independent and it's therefore",
    "start": "771440",
    "end": "773040"
  },
  {
    "text": "inherently mobile you can serialize it",
    "start": "773040",
    "end": "775360"
  },
  {
    "text": "you can copy it it's just data if you're",
    "start": "775360",
    "end": "778240"
  },
  {
    "text": "going to try sending functions around",
    "start": "778240",
    "end": "779600"
  },
  {
    "text": "that's not so easy and then once you've",
    "start": "779600",
    "end": "781839"
  },
  {
    "text": "got your plain data you can presumably",
    "start": "781839",
    "end": "783680"
  },
  {
    "text": "do things like deep copy deep equality",
    "start": "783680",
    "end": "786720"
  },
  {
    "text": "serialization deserialization and so",
    "start": "786720",
    "end": "788720"
  },
  {
    "text": "forth right all happens for free and",
    "start": "788720",
    "end": "791360"
  },
  {
    "text": "also you can serialize it as json you",
    "start": "791360",
    "end": "793600"
  },
  {
    "text": "don't need to pre-agree and if you try",
    "start": "793600",
    "end": "795360"
  },
  {
    "text": "to start serializing objects then you",
    "start": "795360",
    "end": "797200"
  },
  {
    "text": "need to agree with the recipient about",
    "start": "797200",
    "end": "798959"
  },
  {
    "text": "what are the objects you're going to",
    "start": "798959",
    "end": "799839"
  },
  {
    "text": "send you have to agree on what you're",
    "start": "799839",
    "end": "800959"
  },
  {
    "text": "going to call them all that sort of",
    "start": "800959",
    "end": "802560"
  },
  {
    "text": "stuff but plain data is just much more",
    "start": "802560",
    "end": "805200"
  },
  {
    "text": "flexible and has much less coupling and",
    "start": "805200",
    "end": "808399"
  },
  {
    "text": "allows your services to be much more",
    "start": "808399",
    "end": "810000"
  },
  {
    "text": "loosely coupled doesn't create coupling",
    "start": "810000",
    "end": "812240"
  },
  {
    "text": "between your services and i think that's",
    "start": "812240",
    "end": "814880"
  },
  {
    "start": "814000",
    "end": "997000"
  },
  {
    "text": "kind of reflected in your type system as",
    "start": "814880",
    "end": "817920"
  },
  {
    "text": "well so it's a statically typed language",
    "start": "817920",
    "end": "820079"
  },
  {
    "text": "but you've got kind of looser coupling",
    "start": "820079",
    "end": "822160"
  },
  {
    "text": "than some other statically typed",
    "start": "822160",
    "end": "824000"
  },
  {
    "text": "languages including things like java",
    "start": "824000",
    "end": "825440"
  },
  {
    "text": "that people are probably familiar with",
    "start": "825440",
    "end": "827440"
  },
  {
    "text": "you have built-in support for json.xml",
    "start": "827440",
    "end": "830399"
  },
  {
    "text": "but as i say the type system is it's",
    "start": "830399",
    "end": "832320"
  },
  {
    "text": "primarily structural as distinct from",
    "start": "832320",
    "end": "834160"
  },
  {
    "text": "nominal right",
    "start": "834160",
    "end": "835680"
  },
  {
    "text": "yes it's a structural type system it",
    "start": "835680",
    "end": "837760"
  },
  {
    "text": "works in some ways a little bit more",
    "start": "837760",
    "end": "838880"
  },
  {
    "text": "like a schema language you can almost",
    "start": "838880",
    "end": "840320"
  },
  {
    "text": "think of the type system it's really",
    "start": "840320",
    "end": "841920"
  },
  {
    "text": "doing double duty the type system we're",
    "start": "841920",
    "end": "844000"
  },
  {
    "text": "both using it to constrain how",
    "start": "844000",
    "end": "847920"
  },
  {
    "text": "or to check how the operations have been",
    "start": "847920",
    "end": "850000"
  },
  {
    "text": "done within the program but we're also",
    "start": "850000",
    "end": "852240"
  },
  {
    "text": "using it to describe the network",
    "start": "852240",
    "end": "854639"
  },
  {
    "text": "interfaces to the program so you can",
    "start": "854639",
    "end": "857040"
  },
  {
    "text": "take when you write ballerina types",
    "start": "857040",
    "end": "859440"
  },
  {
    "text": "those can also be used to generate",
    "start": "859440",
    "end": "861440"
  },
  {
    "text": "schemas for the network interface so you",
    "start": "861440",
    "end": "864079"
  },
  {
    "text": "can generate graphql schema or open api",
    "start": "864079",
    "end": "866959"
  },
  {
    "text": "from the types you write the types once",
    "start": "866959",
    "end": "868800"
  },
  {
    "text": "and those types are used both to",
    "start": "868800",
    "end": "870240"
  },
  {
    "text": "generate that schema and also to",
    "start": "870240",
    "end": "872240"
  },
  {
    "text": "manipulate in just like a regular type",
    "start": "872240",
    "end": "874240"
  },
  {
    "text": "system within the program i think one of",
    "start": "874240",
    "end": "876480"
  },
  {
    "text": "the things that makes life very",
    "start": "876480",
    "end": "877680"
  },
  {
    "text": "difficult for a modern program is you",
    "start": "877680",
    "end": "879120"
  },
  {
    "text": "have to continually switch between",
    "start": "879120",
    "end": "880480"
  },
  {
    "text": "different worlds you know they've got to",
    "start": "880480",
    "end": "882000"
  },
  {
    "text": "be a bit of html a bit of sql you know",
    "start": "882000",
    "end": "884399"
  },
  {
    "text": "they've got all these different things",
    "start": "884399",
    "end": "885600"
  },
  {
    "text": "and they have to manually switch gears",
    "start": "885600",
    "end": "887600"
  },
  {
    "text": "we know okay this is how it works in",
    "start": "887600",
    "end": "888800"
  },
  {
    "text": "graphql this is what works in sql this",
    "start": "888800",
    "end": "890880"
  },
  {
    "text": "is how it works in my languages type",
    "start": "890880",
    "end": "892480"
  },
  {
    "text": "system and kind of deal with the various",
    "start": "892480",
    "end": "894399"
  },
  {
    "text": "important matches between them",
    "start": "894399",
    "end": "896160"
  },
  {
    "text": "themselves whereas in ballerina you can",
    "start": "896160",
    "end": "898240"
  },
  {
    "text": "just express thing once in the ballerina",
    "start": "898240",
    "end": "900320"
  },
  {
    "text": "type and because it's almost like a",
    "start": "900320",
    "end": "902079"
  },
  {
    "text": "schema you can map it onto your graphql",
    "start": "902079",
    "end": "904000"
  },
  {
    "text": "type and you can use it like a regular",
    "start": "904000",
    "end": "905440"
  },
  {
    "text": "type system it also has something called",
    "start": "905440",
    "end": "907600"
  },
  {
    "text": "semantic subtyping which means that you",
    "start": "907600",
    "end": "909600"
  },
  {
    "text": "can think of a type as being a set of",
    "start": "909600",
    "end": "911040"
  },
  {
    "text": "values and you can think of the subtype",
    "start": "911040",
    "end": "914800"
  },
  {
    "text": "relationship as corresponding to the",
    "start": "914800",
    "end": "916240"
  },
  {
    "text": "subset relationship between types which",
    "start": "916240",
    "end": "918720"
  },
  {
    "text": "is something that you see in some schema",
    "start": "918720",
    "end": "920399"
  },
  {
    "text": "languages so you can use ballerina types",
    "start": "920399",
    "end": "922800"
  },
  {
    "text": "to basically describe what's on the wire",
    "start": "922800",
    "end": "924639"
  },
  {
    "text": "so you can have features like say the",
    "start": "924639",
    "end": "926720"
  },
  {
    "text": "particular field is optional you know",
    "start": "926720",
    "end": "928639"
  },
  {
    "text": "that happens all the time in json that",
    "start": "928639",
    "end": "930720"
  },
  {
    "text": "you know you may or may not have this",
    "start": "930720",
    "end": "932240"
  },
  {
    "text": "particular field in an object but most",
    "start": "932240",
    "end": "935519"
  },
  {
    "text": "type systems you don't have that you",
    "start": "935519",
    "end": "937199"
  },
  {
    "text": "have defaults but that's not the same",
    "start": "937199",
    "end": "938639"
  },
  {
    "text": "thing you're able to describe what's",
    "start": "938639",
    "end": "941040"
  },
  {
    "text": "there or you can say you can just have",
    "start": "941040",
    "end": "943120"
  },
  {
    "text": "this or this again that's an absolutely",
    "start": "943120",
    "end": "945680"
  },
  {
    "text": "basic thing when you think of it as a",
    "start": "945680",
    "end": "947040"
  },
  {
    "text": "schema but most languages don't do that",
    "start": "947040",
    "end": "949519"
  },
  {
    "text": "you can't say well it's either this or",
    "start": "949519",
    "end": "951199"
  },
  {
    "text": "this you've got to say you've got to",
    "start": "951199",
    "end": "952720"
  },
  {
    "text": "have some sort of type hierarchy or",
    "start": "952720",
    "end": "954720"
  },
  {
    "text": "something i mean typescript can do it",
    "start": "954720",
    "end": "956160"
  },
  {
    "text": "and probably typescript is the closest",
    "start": "956160",
    "end": "957920"
  },
  {
    "text": "of mainstream languages in terms of how",
    "start": "957920",
    "end": "960240"
  },
  {
    "text": "the type system works because again the",
    "start": "960240",
    "end": "961680"
  },
  {
    "text": "way typescript is what typescript is",
    "start": "961680",
    "end": "963279"
  },
  {
    "text": "doing is describing javascript values",
    "start": "963279",
    "end": "966000"
  },
  {
    "text": "and javascript values are pretty close",
    "start": "966000",
    "end": "967440"
  },
  {
    "text": "to json so you can think of typescript",
    "start": "967440",
    "end": "969199"
  },
  {
    "text": "as basically describing json values so",
    "start": "969199",
    "end": "971920"
  },
  {
    "text": "in a way it has some similarity to",
    "start": "971920",
    "end": "973600"
  },
  {
    "text": "typescript typescript is very much tied",
    "start": "973600",
    "end": "975759"
  },
  {
    "text": "to javascript which has a kind of",
    "start": "975759",
    "end": "977199"
  },
  {
    "text": "anything goes free and easy very dynamic",
    "start": "977199",
    "end": "979759"
  },
  {
    "text": "view of the world whereas ballerina is",
    "start": "979759",
    "end": "981839"
  },
  {
    "text": "trying to want to catch your errors",
    "start": "981839",
    "end": "983839"
  },
  {
    "text": "eventually we want to be able to compile",
    "start": "983839",
    "end": "985199"
  },
  {
    "text": "things into you know a nice executable",
    "start": "985199",
    "end": "987199"
  },
  {
    "text": "at the moment current implementation is",
    "start": "987199",
    "end": "988720"
  },
  {
    "text": "based on java but that's not part of the",
    "start": "988720",
    "end": "990959"
  },
  {
    "text": "language that's just the current",
    "start": "990959",
    "end": "992160"
  },
  {
    "text": "implementation and we plan to have a",
    "start": "992160",
    "end": "993839"
  },
  {
    "text": "native implementation where everything",
    "start": "993839",
    "end": "995680"
  },
  {
    "text": "statically compiled i want to return",
    "start": "995680",
    "end": "998160"
  },
  {
    "start": "997000",
    "end": "1056000"
  },
  {
    "text": "briefly to the concurrency model we",
    "start": "998160",
    "end": "1000560"
  },
  {
    "text": "talked about it in the context of the",
    "start": "1000560",
    "end": "1002160"
  },
  {
    "text": "sequence diagrams the visual aspects but",
    "start": "1002160",
    "end": "1004480"
  },
  {
    "text": "i'd like to talk a little bit more about",
    "start": "1004480",
    "end": "1006079"
  },
  {
    "text": "the concurrency model in general so one",
    "start": "1006079",
    "end": "1007920"
  },
  {
    "text": "thing is that you support lightweight",
    "start": "1007920",
    "end": "1009680"
  },
  {
    "text": "threads you refer to these as strands",
    "start": "1009680",
    "end": "1012079"
  },
  {
    "text": "and these are analogous i think to",
    "start": "1012079",
    "end": "1013519"
  },
  {
    "text": "virtual threads in java's project loom",
    "start": "1013519",
    "end": "1015920"
  },
  {
    "text": "which we've talked about in a previous",
    "start": "1015920",
    "end": "1017440"
  },
  {
    "text": "episode with ron presler on the podcast",
    "start": "1017440",
    "end": "1019120"
  },
  {
    "text": "so i'll link to that in the show notes",
    "start": "1019120",
    "end": "1020800"
  },
  {
    "text": "but basically these strands are",
    "start": "1020800",
    "end": "1023199"
  },
  {
    "text": "runtime managed logical threads of",
    "start": "1023199",
    "end": "1025520"
  },
  {
    "text": "control right exactly they're logical",
    "start": "1025520",
    "end": "1027600"
  },
  {
    "text": "threads i mean it's very fashionable",
    "start": "1027600",
    "end": "1029438"
  },
  {
    "text": "these days to do everything with",
    "start": "1029439",
    "end": "1030798"
  },
  {
    "text": "asynchronous programming but i think",
    "start": "1030799",
    "end": "1032558"
  },
  {
    "text": "that makes life awfully hard for the",
    "start": "1032559",
    "end": "1034480"
  },
  {
    "text": "program with this whole async thing and",
    "start": "1034480",
    "end": "1036480"
  },
  {
    "text": "promises and all that sort of stuff is",
    "start": "1036480",
    "end": "1038959"
  },
  {
    "text": "just a layer of complexity for the poor",
    "start": "1038959",
    "end": "1041600"
  },
  {
    "text": "application programmer and i think a",
    "start": "1041600",
    "end": "1043520"
  },
  {
    "text": "thread model where you just present a",
    "start": "1043520",
    "end": "1045199"
  },
  {
    "text": "very simple logical model to the",
    "start": "1045199",
    "end": "1046880"
  },
  {
    "text": "programmer and it's up to the",
    "start": "1046880",
    "end": "1048400"
  },
  {
    "text": "implementation to turn that into",
    "start": "1048400",
    "end": "1050240"
  },
  {
    "text": "something efficient i think that's a",
    "start": "1050240",
    "end": "1052480"
  },
  {
    "text": "better model for the program fundamental",
    "start": "1052480",
    "end": "1054160"
  },
  {
    "text": "threads is a better programming model i",
    "start": "1054160",
    "end": "1056000"
  },
  {
    "start": "1056000",
    "end": "1123000"
  },
  {
    "text": "feel how does strands enable cooperative",
    "start": "1056000",
    "end": "1059440"
  },
  {
    "text": "multitasking well so strands it's as you",
    "start": "1059440",
    "end": "1061919"
  },
  {
    "text": "say it's a logical thread so there's",
    "start": "1061919",
    "end": "1064480"
  },
  {
    "text": "these things logically run concurrently",
    "start": "1064480",
    "end": "1066480"
  },
  {
    "text": "whether they're actually running on two",
    "start": "1066480",
    "end": "1068640"
  },
  {
    "text": "threads or not depends on whether the",
    "start": "1068640",
    "end": "1071280"
  },
  {
    "text": "compiler can figure out that it's safe",
    "start": "1071280",
    "end": "1072880"
  },
  {
    "text": "to do so so if we have locking",
    "start": "1072880",
    "end": "1074480"
  },
  {
    "text": "constructs you haven't used the locking",
    "start": "1074480",
    "end": "1075919"
  },
  {
    "text": "construct then the compiler will figure",
    "start": "1075919",
    "end": "1078080"
  },
  {
    "text": "out that okay we can't run these things",
    "start": "1078080",
    "end": "1080000"
  },
  {
    "text": "in parallel and so it will switch",
    "start": "1080000",
    "end": "1082240"
  },
  {
    "text": "between them so you never get two things",
    "start": "1082240",
    "end": "1084000"
  },
  {
    "text": "running on two different threads and so",
    "start": "1084000",
    "end": "1085840"
  },
  {
    "text": "you the various kind of data races can't",
    "start": "1085840",
    "end": "1087679"
  },
  {
    "text": "happen so in the worst case it will just",
    "start": "1087679",
    "end": "1090320"
  },
  {
    "text": "run on one thread and typically when you",
    "start": "1090320",
    "end": "1091760"
  },
  {
    "text": "do some i o that logical strand will",
    "start": "1091760",
    "end": "1093679"
  },
  {
    "text": "block waiting through the i o and",
    "start": "1093679",
    "end": "1095440"
  },
  {
    "text": "another logical thread will start",
    "start": "1095440",
    "end": "1096880"
  },
  {
    "text": "running because in a lot of cases within",
    "start": "1096880",
    "end": "1098559"
  },
  {
    "text": "network programming it's really the i o",
    "start": "1098559",
    "end": "1100240"
  },
  {
    "text": "that really matters so so long as you",
    "start": "1100240",
    "end": "1102080"
  },
  {
    "text": "can you know if you've got to go ahead",
    "start": "1102080",
    "end": "1103280"
  },
  {
    "text": "and",
    "start": "1103280",
    "end": "1104240"
  },
  {
    "text": "go to five different web services and",
    "start": "1104240",
    "end": "1106400"
  },
  {
    "text": "get results from them and then compute",
    "start": "1106400",
    "end": "1108640"
  },
  {
    "text": "your result from that what's important",
    "start": "1108640",
    "end": "1110640"
  },
  {
    "text": "is you don't do one wait for that and do",
    "start": "1110640",
    "end": "1113280"
  },
  {
    "text": "the other one wait for that you want to",
    "start": "1113280",
    "end": "1114640"
  },
  {
    "text": "be waiting at the same time whether",
    "start": "1114640",
    "end": "1116320"
  },
  {
    "text": "you're actually using multiple cause is",
    "start": "1116320",
    "end": "1118480"
  },
  {
    "text": "not such a big deal it's more about",
    "start": "1118480",
    "end": "1121200"
  },
  {
    "text": "having the i o work in parallel i mean",
    "start": "1121200",
    "end": "1124160"
  },
  {
    "start": "1123000",
    "end": "1207000"
  },
  {
    "text": "so sort of bring this back to the visual",
    "start": "1124160",
    "end": "1126000"
  },
  {
    "text": "aspects the concurrent operations in a",
    "start": "1126000",
    "end": "1128559"
  },
  {
    "text": "function can be defined by multiple",
    "start": "1128559",
    "end": "1130640"
  },
  {
    "text": "named workers can you describe that and",
    "start": "1130640",
    "end": "1133120"
  },
  {
    "text": "how that works for us",
    "start": "1133120",
    "end": "1134799"
  },
  {
    "text": "right so within a function and this is",
    "start": "1134799",
    "end": "1137200"
  },
  {
    "text": "going back to sequence diagram model at",
    "start": "1137200",
    "end": "1138960"
  },
  {
    "text": "the top level within a function you can",
    "start": "1138960",
    "end": "1140480"
  },
  {
    "text": "have blocks that are named workers and",
    "start": "1140480",
    "end": "1142480"
  },
  {
    "text": "those blocks run in parallel and they",
    "start": "1142480",
    "end": "1145039"
  },
  {
    "text": "can exchange messages with each other",
    "start": "1145039",
    "end": "1148240"
  },
  {
    "text": "and the messages are matched up a",
    "start": "1148240",
    "end": "1151039"
  },
  {
    "text": "compile time to make sure that everyone",
    "start": "1151039",
    "end": "1153120"
  },
  {
    "text": "so if you think of a sequence diagram",
    "start": "1153120",
    "end": "1154799"
  },
  {
    "text": "you know your arrows match up so the",
    "start": "1154799",
    "end": "1157200"
  },
  {
    "text": "arrows in the sequence diagram they'll",
    "start": "1157200",
    "end": "1159440"
  },
  {
    "text": "be ascending one block and received from",
    "start": "1159440",
    "end": "1161120"
  },
  {
    "text": "the other block in order to be able to",
    "start": "1161120",
    "end": "1163280"
  },
  {
    "text": "build that sequence diagrams you'll",
    "start": "1163280",
    "end": "1164640"
  },
  {
    "text": "check that the sense and the receives in",
    "start": "1164640",
    "end": "1166640"
  },
  {
    "text": "each block match up it's probably easier",
    "start": "1166640",
    "end": "1168960"
  },
  {
    "text": "with a picture you can't draw i mean the",
    "start": "1168960",
    "end": "1171039"
  },
  {
    "text": "sequence diagram you have a send and",
    "start": "1171039",
    "end": "1172480"
  },
  {
    "text": "receiver and if one block is sending and",
    "start": "1172480",
    "end": "1174320"
  },
  {
    "text": "one block is receiving in order to be",
    "start": "1174320",
    "end": "1175919"
  },
  {
    "text": "able to draw a diagram with an arrow",
    "start": "1175919",
    "end": "1177280"
  },
  {
    "text": "from one to the other you've got to have",
    "start": "1177280",
    "end": "1178799"
  },
  {
    "text": "ascending one receiving the other or",
    "start": "1178799",
    "end": "1180320"
  },
  {
    "text": "vice versa so that is part of the",
    "start": "1180320",
    "end": "1182320"
  },
  {
    "text": "semantics of the language that you can",
    "start": "1182320",
    "end": "1184720"
  },
  {
    "text": "match those lines up and what the static",
    "start": "1184720",
    "end": "1186960"
  },
  {
    "text": "checking does is check that your sends",
    "start": "1186960",
    "end": "1188799"
  },
  {
    "text": "and receives to match up and so you can",
    "start": "1188799",
    "end": "1190640"
  },
  {
    "text": "actually get every line has a center and",
    "start": "1190640",
    "end": "1192960"
  },
  {
    "text": "receiver which is a somewhat restrictive",
    "start": "1192960",
    "end": "1195120"
  },
  {
    "text": "model but when it applies to your",
    "start": "1195120",
    "end": "1196559"
  },
  {
    "text": "problem you detect a lot of problems",
    "start": "1196559",
    "end": "1198160"
  },
  {
    "text": "that compile time that would not",
    "start": "1198160",
    "end": "1199280"
  },
  {
    "text": "otherwise be detectable and you also get",
    "start": "1199280",
    "end": "1201840"
  },
  {
    "text": "the diagram that actually gives you real",
    "start": "1201840",
    "end": "1203760"
  },
  {
    "text": "insight into what your program is doing",
    "start": "1203760",
    "end": "1205360"
  },
  {
    "text": "in terms of network interaction",
    "start": "1205360",
    "end": "1207520"
  },
  {
    "start": "1207000",
    "end": "1312000"
  },
  {
    "text": "what's next for ballerina what are you",
    "start": "1207520",
    "end": "1210000"
  },
  {
    "text": "currently working on currently we are",
    "start": "1210000",
    "end": "1212640"
  },
  {
    "text": "working on getting the java version",
    "start": "1212640",
    "end": "1215600"
  },
  {
    "text": "we're just in the process of finishing",
    "start": "1215600",
    "end": "1217280"
  },
  {
    "text": "up the beta for the kind of major",
    "start": "1217280",
    "end": "1219600"
  },
  {
    "text": "release",
    "start": "1219600",
    "end": "1220400"
  },
  {
    "text": "we have as well that we call it swan",
    "start": "1220400",
    "end": "1221840"
  },
  {
    "text": "lake uh which is the kind of the first",
    "start": "1221840",
    "end": "1224799"
  },
  {
    "text": "oh i'm loving this yeah next one's gonna",
    "start": "1224799",
    "end": "1226480"
  },
  {
    "text": "be nutcracker actually you're working",
    "start": "1226480",
    "end": "1228480"
  },
  {
    "text": "your way through all the tchaikovsky",
    "start": "1228480",
    "end": "1229679"
  },
  {
    "text": "ballets",
    "start": "1229679",
    "end": "1231679"
  },
  {
    "text": "you need a sleeping beauty and a romeo",
    "start": "1231679",
    "end": "1233360"
  },
  {
    "text": "and juliet",
    "start": "1233360",
    "end": "1235840"
  },
  {
    "text": "anyway so we're starting with swan lake",
    "start": "1237440",
    "end": "1238720"
  },
  {
    "text": "and the idea is going to be that really",
    "start": "1238720",
    "end": "1240640"
  },
  {
    "text": "represents the language being mature not",
    "start": "1240640",
    "end": "1243679"
  },
  {
    "text": "language being perfect there's tons of",
    "start": "1243679",
    "end": "1245520"
  },
  {
    "text": "stuff we can do but we've got a fairly",
    "start": "1245520",
    "end": "1247840"
  },
  {
    "text": "comprehensive set of language features",
    "start": "1247840",
    "end": "1249840"
  },
  {
    "text": "which we're happy with there's plenty of",
    "start": "1249840",
    "end": "1251360"
  },
  {
    "text": "stuff we want to do but it's a solid",
    "start": "1251360",
    "end": "1252880"
  },
  {
    "text": "base",
    "start": "1252880",
    "end": "1253760"
  },
  {
    "text": "and we'll have a java based",
    "start": "1253760",
    "end": "1255360"
  },
  {
    "text": "implementation that you know has a solid",
    "start": "1255360",
    "end": "1257280"
  },
  {
    "text": "implementation of those features and so",
    "start": "1257280",
    "end": "1258880"
  },
  {
    "text": "we're just finishing that up i guess",
    "start": "1258880",
    "end": "1260640"
  },
  {
    "text": "some several things are going in power",
    "start": "1260640",
    "end": "1262000"
  },
  {
    "text": "but i think that the next thing is which",
    "start": "1262000",
    "end": "1263520"
  },
  {
    "text": "is what i'm working on is doing a native",
    "start": "1263520",
    "end": "1265520"
  },
  {
    "text": "implementation so targeting llvm being",
    "start": "1265520",
    "end": "1268159"
  },
  {
    "text": "able to use native executables that",
    "start": "1268159",
    "end": "1270480"
  },
  {
    "text": "don't have any dependency on java",
    "start": "1270480",
    "end": "1272720"
  },
  {
    "text": "and we're also which is interesting",
    "start": "1272720",
    "end": "1273919"
  },
  {
    "text": "doing it in ballerina so we're trying to",
    "start": "1273919",
    "end": "1275760"
  },
  {
    "text": "write a ballerina compiler in ballerina",
    "start": "1275760",
    "end": "1278799"
  },
  {
    "text": "this is not what ballerina is designed",
    "start": "1278799",
    "end": "1280400"
  },
  {
    "text": "for obviously barry's design for writing",
    "start": "1280400",
    "end": "1282159"
  },
  {
    "text": "relatively small programs to enterprise",
    "start": "1282159",
    "end": "1283919"
  },
  {
    "text": "integration so using it to write a",
    "start": "1283919",
    "end": "1285760"
  },
  {
    "text": "compiler is pushing it to its limits but",
    "start": "1285760",
    "end": "1288960"
  },
  {
    "text": "i think that that's good because it",
    "start": "1288960",
    "end": "1290240"
  },
  {
    "text": "pushes the current implementation and it",
    "start": "1290240",
    "end": "1292080"
  },
  {
    "text": "pushes the language and i think one of",
    "start": "1292080",
    "end": "1293679"
  },
  {
    "text": "the goals of ballerina is that you",
    "start": "1293679",
    "end": "1295280"
  },
  {
    "text": "shouldn't run into a war you should be",
    "start": "1295280",
    "end": "1296880"
  },
  {
    "text": "able to start small and as your program",
    "start": "1296880",
    "end": "1298480"
  },
  {
    "text": "grows ballerina will grow with you and i",
    "start": "1298480",
    "end": "1300880"
  },
  {
    "text": "think if we can ride a compiler in",
    "start": "1300880",
    "end": "1302320"
  },
  {
    "text": "ballerina then adding whatever",
    "start": "1302320",
    "end": "1304159"
  },
  {
    "text": "enterprise integration problem you need",
    "start": "1304159",
    "end": "1306000"
  },
  {
    "text": "to solve you can be confident that",
    "start": "1306000",
    "end": "1308159"
  },
  {
    "text": "ballerina will have sufficient",
    "start": "1308159",
    "end": "1309760"
  },
  {
    "text": "horsepower to be able to do it if",
    "start": "1309760",
    "end": "1312240"
  },
  {
    "start": "1312000",
    "end": "1356000"
  },
  {
    "text": "listeners want to find out more about",
    "start": "1312240",
    "end": "1314480"
  },
  {
    "text": "the language and maybe have a play with",
    "start": "1314480",
    "end": "1316080"
  },
  {
    "text": "it see what they think where's the best",
    "start": "1316080",
    "end": "1317440"
  },
  {
    "text": "place for them to get started the",
    "start": "1317440",
    "end": "1319039"
  },
  {
    "text": "ballerina dot io website nice easy",
    "start": "1319039",
    "end": "1321760"
  },
  {
    "text": "answer nice easy answering everything's",
    "start": "1321760",
    "end": "1323280"
  },
  {
    "text": "linked to from there excellent i i shall",
    "start": "1323280",
    "end": "1325360"
  },
  {
    "text": "include a link to that in the show notes",
    "start": "1325360",
    "end": "1327280"
  },
  {
    "text": "and with that james thank you very much",
    "start": "1327280",
    "end": "1328960"
  },
  {
    "text": "indeed for joining me today on the info",
    "start": "1328960",
    "end": "1331200"
  },
  {
    "text": "podcast thank you for having me i",
    "start": "1331200",
    "end": "1332559"
  },
  {
    "text": "enjoyed our conversation",
    "start": "1332559",
    "end": "1336120"
  },
  {
    "text": "[Music]",
    "start": "1341280",
    "end": "1355700"
  },
  {
    "text": "you",
    "start": "1356000",
    "end": "1358080"
  }
]