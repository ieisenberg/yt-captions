[
  {
    "start": "0",
    "end": "35000"
  },
  {
    "text": "[Music]",
    "start": "3350",
    "end": "14249"
  },
  {
    "text": "welcome to my talk about going from monreo Mass to monreo Bliss and I would",
    "start": "15160",
    "end": "20240"
  },
  {
    "text": "like to mostly talk to you about some common mistakes which I've seen while working with big companies around the",
    "start": "20240",
    "end": "25920"
  },
  {
    "text": "globe basically as they Implement monos and so the common m mes that that many",
    "start": "25920",
    "end": "31240"
  },
  {
    "text": "make when they approach mon repos but also the challenges that they face so let's have a look but first of all how",
    "start": "31240",
    "end": "38079"
  },
  {
    "start": "35000",
    "end": "100000"
  },
  {
    "text": "does software development work in general so usually at a very like simple concept level it starts with an idea and",
    "start": "38079",
    "end": "45280"
  },
  {
    "text": "a group of people themes up to actually hack on that idea and so ultimately they",
    "start": "45280",
    "end": "50399"
  },
  {
    "text": "might ship some software and they might pretty soon go into a cycle that looks like the following so if the the",
    "start": "50399",
    "end": "56879"
  },
  {
    "text": "software gets better and better and it's more useful more use users will grab its attention and they will start using it",
    "start": "56879",
    "end": "64198"
  },
  {
    "text": "and so hopefully at least that's that's what what everyone kind of aims for right and so at that point they might",
    "start": "64199",
    "end": "69320"
  },
  {
    "text": "need to kind of scale up right in the sense of adding more developers to make sure to be able to deliver new features",
    "start": "69320",
    "end": "74680"
  },
  {
    "text": "timely and keep satisfying those users and so you keep going into such a cycle where your software grows and as you",
    "start": "74680",
    "end": "82240"
  },
  {
    "text": "grow more people join your team now initially the communication is really simple and if if we think about software",
    "start": "82240",
    "end": "89479"
  },
  {
    "text": "development is a lot about communication right and so in a small team everything is pretty straightforward communication",
    "start": "89479",
    "end": "95119"
  },
  {
    "text": "paths are very direct and we can be very agile and and kind of move on really",
    "start": "95119",
    "end": "100200"
  },
  {
    "start": "100000",
    "end": "197000"
  },
  {
    "text": "quickly as we add people though that might change a bit so we might soon face",
    "start": "100200",
    "end": "105560"
  },
  {
    "text": "a situation where our communication overhead kind of ramps up right and so",
    "start": "105560",
    "end": "110840"
  },
  {
    "text": "this is an additional communication cause that we need to deal with and and kind of figure out how to solve and still be productive even though we Shi",
    "start": "110840",
    "end": "117759"
  },
  {
    "text": "now a much larger application so what usually happens is that team group up",
    "start": "117759",
    "end": "123079"
  },
  {
    "text": "and specialize into smaller teams right and so in that way within the team the communication again is pretty",
    "start": "123079",
    "end": "129119"
  },
  {
    "text": "straightforward fast they they might iterate into short like Sprints or cycles and they were able to deliver a",
    "start": "129119",
    "end": "135200"
  },
  {
    "text": "piece of the software however because ultimately what happens now is that if every team works on a part of the",
    "start": "135200",
    "end": "141840"
  },
  {
    "text": "software and not on the entire piece uh as a whole because it just got too big basically at some point now this is an",
    "start": "141840",
    "end": "149200"
  },
  {
    "text": "example here like t-mobile.com which is just at random picked but you can also look at for instance Amazon and other",
    "start": "149200",
    "end": "155360"
  },
  {
    "text": "big stores or online websites where this is a big problem and obviously also desktop software it's not exclusive for",
    "start": "155360",
    "end": "162720"
  },
  {
    "text": "web and so at some point though we start we still might have those communication",
    "start": "162720",
    "end": "168640"
  },
  {
    "text": "issues at A Team level but we also see another thing coming up as we scale up which is the time and the communication",
    "start": "168640",
    "end": "175840"
  },
  {
    "text": "overhead and especially the integration overhead keeps increasing with all Al the number of repositories because",
    "start": "175840",
    "end": "182280"
  },
  {
    "text": "potentially those teams work in separate repositories build that small part of the whole product which then needs to be",
    "start": "182280",
    "end": "189480"
  },
  {
    "text": "integrated and so now we also face or have such an integration overhead",
    "start": "189480",
    "end": "194840"
  },
  {
    "text": "potentially additional to the communication over so things like this for instance if",
    "start": "194840",
    "end": "200239"
  },
  {
    "start": "197000",
    "end": "288000"
  },
  {
    "text": "you have been working in such a situation are then very common right like for inst the the design system team",
    "start": "200239",
    "end": "205799"
  },
  {
    "text": "that cares about corporate design and style guided make sure everything kind of looks integrated and and nice from a visual perspective and they might have",
    "start": "205799",
    "end": "213280"
  },
  {
    "text": "some updates that they make and it is important that those updates get rolled out to all the websites all the different components that build up the",
    "start": "213280",
    "end": "219680"
  },
  {
    "text": "entire product because otherwise it might look weird right and so they might reach out over the corporate channels",
    "start": "219680",
    "end": "225120"
  },
  {
    "text": "over emails or some like slack groups to urge everyone to update to the latest",
    "start": "225120",
    "end": "230439"
  },
  {
    "text": "4.3 package and obviously you can imagine it might take time right until this propagates throughout the entire",
    "start": "230439",
    "end": "236000"
  },
  {
    "text": "system so you face that that challenge basically there similarly which might even be worse is the security team",
    "start": "236000",
    "end": "242000"
  },
  {
    "text": "identifies the vulnerability on some deeper level package which is used by some other package which is inside apps",
    "start": "242000",
    "end": "248840"
  },
  {
    "text": "that are being built by the the various teams and so obviously they reach out in a very urgent Manner and say like every",
    "start": "248840",
    "end": "254760"
  },
  {
    "text": "should upgrade and fix that vulnerability and so how fast can you propagate those in such systems right",
    "start": "254760",
    "end": "261199"
  },
  {
    "text": "where you have different repositories and other other examples could also be just a a single team that",
    "start": "261199",
    "end": "267440"
  },
  {
    "text": "integrates with a lot of teams for inst Authentication team they might change or an API or some fundamental piece which",
    "start": "267440",
    "end": "273560"
  },
  {
    "text": "they want everyone to kind of update and so they obviously need to have deprication phases and go through that but again you can kind imagine how",
    "start": "273560",
    "end": "280960"
  },
  {
    "text": "potentially slow that propagation can be until everyone reacts besides their job they already do in delivering",
    "start": "280960",
    "end": "287919"
  },
  {
    "text": "features so this is a typical situation which you have right you have those different repositories and they",
    "start": "287919",
    "end": "293080"
  },
  {
    "text": "integrate via some central registry and where they share pieces and and kind of reuse some of the like lower level",
    "start": "293080",
    "end": "300120"
  },
  {
    "text": "libraries potentially now what could be a solution to those different repositories you probably guessed it",
    "start": "300120",
    "end": "305560"
  },
  {
    "text": "already given given a title of my talk but one potential approach can be for instance to group them together in one",
    "start": "305560",
    "end": "311840"
  },
  {
    "text": "single repository which is also called Mono now I also call them often just multiple project per repo which is like",
    "start": "311840",
    "end": "318919"
  },
  {
    "text": "a longer word but it kind of explains the the philosophy behind of what a mon potential is so why should that solve",
    "start": "318919",
    "end": "326199"
  },
  {
    "text": "our integration problem because we still have those different pieces right well one part that is that is solved is",
    "start": "326199",
    "end": "332600"
  },
  {
    "text": "that the integration now is much more straightforward so we don't have to kind of version something package it up share",
    "start": "332600",
    "end": "338919"
  },
  {
    "text": "it via an internal registry but R can directly depend on the latest version",
    "start": "338919",
    "end": "344000"
  },
  {
    "text": "and so this has a couple of advantages in terms of experimentation you can just create a local branch update something",
    "start": "344000",
    "end": "349800"
  },
  {
    "text": "and see what breaks right so the the feedback cycle is much much quicker but obviously as you can imagine and the",
    "start": "349800",
    "end": "356759"
  },
  {
    "text": "whole purpose of this talk is this is not a silver bullet so so it comes with potentially its own challenges while it",
    "start": "356759",
    "end": "362919"
  },
  {
    "text": "also solves some other things that we have so let's have a look today I would like to go into three main areas when I",
    "start": "362919",
    "end": "370120"
  },
  {
    "start": "366000",
    "end": "415000"
  },
  {
    "text": "talk about mon repos which is first of all the structure of a mon repo throughput or speed like how fast can",
    "start": "370120",
    "end": "376479"
  },
  {
    "text": "you pass out like um how fast can you go forward with like feature development",
    "start": "376479",
    "end": "381840"
  },
  {
    "text": "and also automation a part which is often underestimated especially in the beginning but has huge value in the long",
    "start": "381840",
    "end": "388080"
  },
  {
    "text": "run so my my name is y strum fler I'm a Google developer expert already for a lot of years in web Technologies I'm",
    "start": "388080",
    "end": "395080"
  },
  {
    "text": "also an ehad instructor and I'm currently the senior director of developer experience for NX uh and I'm",
    "start": "395080",
    "end": "402000"
  },
  {
    "text": "also a core contributor to both NX and larna both are open source projects MIT",
    "start": "402000",
    "end": "407160"
  },
  {
    "text": "license so you can freely use them and incorporate them in your commercial products and they're tools for helping",
    "start": "407160",
    "end": "413160"
  },
  {
    "text": "to build monos so what are common mistakes or as",
    "start": "413160",
    "end": "418680"
  },
  {
    "start": "415000",
    "end": "494000"
  },
  {
    "text": "I also prefer some sometimes to mention like challenges because mistakes kind of sounds very negative right to some degree so let's start with the first one",
    "start": "418680",
    "end": "425759"
  },
  {
    "text": "which I would like to immediately eliminate which is also kind of a common misconception which is Allin one so you",
    "start": "425759",
    "end": "432199"
  },
  {
    "text": "might have heard about those gigantic monor post that like Google is famous for for instance but also meta Twitter",
    "start": "432199",
    "end": "440400"
  },
  {
    "text": "apparently I'm not sure but like Twitter apparently should also be one of those which has like one or mostly one single",
    "start": "440400",
    "end": "446639"
  },
  {
    "text": "mono for the entire organization so Google very very good example but usually that is not the case so if",
    "start": "446639",
    "end": "453479"
  },
  {
    "text": "you're scared about Mono is because you don't see your company going in that direction you might want to reconsider",
    "start": "453479",
    "end": "459879"
  },
  {
    "text": "because most of the scenarios which I have seen working with companies is that you have even multiple monor OS but also",
    "start": "459879",
    "end": "466800"
  },
  {
    "text": "like single project repositories mixed in your entire company landscape and you might still use an internal registry to",
    "start": "466800",
    "end": "473159"
  },
  {
    "text": "share some parts so even the monos might share part of their internal packages to the outside world so it usually makes",
    "start": "473159",
    "end": "480280"
  },
  {
    "text": "sense to group related business functionalities into a moner because that's where you get most leverage right",
    "start": "480280",
    "end": "487000"
  },
  {
    "text": "so you can kind of get more code sharing you can iterate faster on some features so that's where like monos have a good",
    "start": "487000",
    "end": "494000"
  },
  {
    "start": "494000",
    "end": "833000"
  },
  {
    "text": "place and another thing though as you then move into such a mon Reaper is you just or a common mistake I've seen is to",
    "start": "494000",
    "end": "500919"
  },
  {
    "text": "just collocate the code so basically go from this structure and just move everything into one git repository or",
    "start": "500919",
    "end": "507720"
  },
  {
    "text": "whatever Version Control you're using and that's it but that actually doesn't give you a whole lot of value like sure",
    "start": "507720",
    "end": "514320"
  },
  {
    "text": "like you have everything one place you know where to go you see the other other projects code which is also often",
    "start": "514320",
    "end": "520080"
  },
  {
    "text": "actually quite an advantage because it helps reason about especially when you have to integrate with them but you get",
    "start": "520080",
    "end": "526399"
  },
  {
    "text": "more value out of it if you start building relations because here for instance let's assume the checkout application here wants to leverage",
    "start": "526399",
    "end": "533399"
  },
  {
    "text": "pieces of our design system well then the design system needs to modularize First in order to be able to leverage",
    "start": "533399",
    "end": "538600"
  },
  {
    "text": "some of those parts parts and so what usually suggested is to split things up",
    "start": "538600",
    "end": "543640"
  },
  {
    "text": "now the the purple boxes here are our applications right so we have a product application check out my account and",
    "start": "543640",
    "end": "549440"
  },
  {
    "text": "orders application which are kind of to the main areas then there's more share part which is the design system which",
    "start": "549440",
    "end": "554480"
  },
  {
    "text": "can also come with an application which is for internal testing but it can also be the internal facing or even public",
    "start": "554480",
    "end": "559519"
  },
  {
    "text": "facing documentation side where you see the live components running right which can be very valuable but then you see",
    "start": "559519",
    "end": "565320"
  },
  {
    "text": "those green boxes below which are the actual libraries and so here for in we have like button library that expose all",
    "start": "565320",
    "end": "571720"
  },
  {
    "text": "sorts of different buttons for the design system something to to work with forms with cards and that can obviously",
    "start": "571720",
    "end": "577200"
  },
  {
    "text": "be a lot more of them and the advantage here now is that other applications can now directly leverage those so they can",
    "start": "577200",
    "end": "583839"
  },
  {
    "text": "directly refer to these libr and import them so what does this look at the code level now if you take a look at here at",
    "start": "583839",
    "end": "590680"
  },
  {
    "text": "the file system level we see the buttons Library here as an example where uh in this case it's a react component but it",
    "start": "590680",
    "end": "596560"
  },
  {
    "text": "can actually be any type of framework or technology ol you want to use the concept here that I want to highlight is",
    "start": "596560",
    "end": "602000"
  },
  {
    "text": "that you have your component within such a library but then you have that index TS file which is kind of your public API",
    "start": "602000",
    "end": "607760"
  },
  {
    "text": "of the library right which allows you to in a very fine grain manner understand what you want to expose and what you",
    "start": "607760",
    "end": "613160"
  },
  {
    "text": "want to keep within that Library so here for instance we have a button and it exposes also the button to the outside",
    "start": "613160",
    "end": "618279"
  },
  {
    "text": "because that's the whole purpose of reusing that inside all our applications and then other apps here for instance",
    "start": "618279",
    "end": "624720"
  },
  {
    "text": "the order details UI uh component just pulls them in right and you can see it's just a local reference uh although this",
    "start": "624720",
    "end": "632200"
  },
  {
    "text": "looks like it gets pulled from a package this is just a local package living in the same mono so it's direct this in",
    "start": "632200",
    "end": "638639"
  },
  {
    "text": "this case for instance it's mapped over just typ strep path mappings and so you can see this is a very straightforward forward way of",
    "start": "638639",
    "end": "645839"
  },
  {
    "text": "using such components now if you take the orders part i' I split that up even more and again these are just potential",
    "start": "645839",
    "end": "652800"
  },
  {
    "text": "approaches on structuring such a like a module if you want such a domain area which I've seen and that works but you",
    "start": "652800",
    "end": "659200"
  },
  {
    "text": "might not want to have all the different levels here so what I what I have here in this particular case just to",
    "start": "659200",
    "end": "665000"
  },
  {
    "text": "highlight one potential approach is I have a top level like application so this is what is being deployed it can be",
    "start": "665000",
    "end": "670560"
  },
  {
    "text": "seen as my deployment container or or bundling off different features but the logic there is very very minimal so it's",
    "start": "670560",
    "end": "677720"
  },
  {
    "text": "like a thin layer which just pulls in and references the the down level",
    "start": "677720",
    "end": "682920"
  },
  {
    "text": "features and so here for instance we have the actual feature areas those are more kind of our user flows let's say",
    "start": "682920",
    "end": "690240"
  },
  {
    "text": "for the ordering the whole creating the create order process for instance can be Rec like represented by a single feature",
    "start": "690240",
    "end": "697680"
  },
  {
    "text": "which then just pulls in different UI components for implementing such a feature and again UI components here are",
    "start": "697680",
    "end": "705560"
  },
  {
    "text": "targeted and specifically made for that domain area they might actually reuse obviously and they should reuse the",
    "start": "705560",
    "end": "712000"
  },
  {
    "text": "design system components but those are much more granular like those are individual buttons individual form Fields validation Fields while the U y",
    "start": "712000",
    "end": "719279"
  },
  {
    "text": "here can even be reusable but just usually in a context within that domain area so that's how they are being",
    "start": "719279",
    "end": "725079"
  },
  {
    "text": "composed then together of the out of the design system components and then we have potentially domain layer which is",
    "start": "725079",
    "end": "731720"
  },
  {
    "text": "purely technology Gnostic can be different like flows of logic it can be also the whole like data mapping",
    "start": "731720",
    "end": "738560"
  },
  {
    "text": "entities dto uh transfer objects basically but also like the actual Logic for interfacing with your backhand and",
    "start": "738560",
    "end": "745360"
  },
  {
    "text": "creating new orders or fetching order related data and this can be expanded to all",
    "start": "745360",
    "end": "751360"
  },
  {
    "text": "different products potentially or all different design uh domain",
    "start": "751360",
    "end": "756800"
  },
  {
    "text": "areas at the F level again this could be a potential way of structuring it again",
    "start": "756800",
    "end": "761920"
  },
  {
    "text": "this is just an example you can structure really the way you want basically But Here We have basically at the top we have our applications and",
    "start": "761920",
    "end": "767880"
  },
  {
    "text": "then we have the libraries which you can see are nested into subfolders based on their domain area so here we have orders",
    "start": "767880",
    "end": "774320"
  },
  {
    "text": "and products and the order one is here expanded where you can clearly see for inst domain logic libraries the various",
    "start": "774320",
    "end": "780120"
  },
  {
    "text": "feature libraries and UI libraries and again each of these libraries has such an entry point like has the internal",
    "start": "780120",
    "end": "786880"
  },
  {
    "text": "logic which might just be for that library and the logic itself and then it exposes whatever needs to be reused to",
    "start": "786880",
    "end": "793160"
  },
  {
    "text": "the outside world bya such an indexs file at a deployment level uh it could",
    "start": "793160",
    "end": "798720"
  },
  {
    "text": "like look like this where uh you have the basically the applications deployed under different kind of Sub sub URLs it",
    "start": "798720",
    "end": "805800"
  },
  {
    "text": "could even be subdomains depending on how you want to compose your application but for instance here if you land an/",
    "start": "805800",
    "end": "811680"
  },
  {
    "text": "order of our main entry page the order application would have been deployed there and would load up which then has",
    "start": "811680",
    "end": "818079"
  },
  {
    "text": "all the top level routing which then delegates to other of those feature libraries which then have pull in the",
    "start": "818079",
    "end": "824320"
  },
  {
    "text": "actual visualization components use the domain Logic for actually implementing",
    "start": "824320",
    "end": "829480"
  },
  {
    "text": "uh the whole flow Etc so you can see how this can be composed and one thing and",
    "start": "829480",
    "end": "834759"
  },
  {
    "start": "833000",
    "end": "967000"
  },
  {
    "text": "this is also actually a common misconception that by now should be very clear here is that this is quite",
    "start": "834759",
    "end": "840120"
  },
  {
    "text": "contrary to an actual monolith um you you could actually rather call this more like a modulith which is also another",
    "start": "840120",
    "end": "846759"
  },
  {
    "text": "term coined in a more Javas spring Community but it's definitely different than a moner like a",
    "start": "846759",
    "end": "852880"
  },
  {
    "text": "monolith H I also tend to usually say that a monor repo is more about actual",
    "start": "852880",
    "end": "858519"
  },
  {
    "text": "coding level so how you develop your software while the monolith usually defers or refers to the actual",
    "start": "858519",
    "end": "865560"
  },
  {
    "text": "deployment scenario now they are kind of inter Lea the line is kind of fuss in between those but they are potentially",
    "start": "865560",
    "end": "871639"
  },
  {
    "text": "different concepts what I want to highlight in general is that a mon people doesn't really care how you",
    "start": "871639",
    "end": "876800"
  },
  {
    "text": "deploy or how you develop your software you can totally develop a monolith that's perfectly fine uh I prefer to",
    "start": "876800",
    "end": "882519"
  },
  {
    "text": "kind of modularize it still so you have a monolitic deployment but still quite a modular nice structure but you can also",
    "start": "882519",
    "end": "888600"
  },
  {
    "text": "build a micro front end and micr service based infrastructure in a monreo or just in deploy individual applications as we",
    "start": "888600",
    "end": "895079"
  },
  {
    "text": "have and then compose them at a deployment level via different routing there's actually a good book uh about uh",
    "start": "895079",
    "end": "902360"
  },
  {
    "text": "this and about how to structure such a mon repo following a domain driven design approach and by Manfred Styer H",
    "start": "902360",
    "end": "909279"
  },
  {
    "text": "now this is an angular specific book or in the cover you see the angular logo because he works a lot in that ecosystem",
    "start": "909279",
    "end": "914839"
  },
  {
    "text": "but the book is actually at the level where it can be easily applied also to other areas right so it's more about the",
    "start": "914839",
    "end": "920440"
  },
  {
    "text": "concept of how you split up domain areas how you structure them how a single application domain area can look like uh",
    "start": "920440",
    "end": "927360"
  },
  {
    "text": "and so on so what we've seen here is definitely modularity is key for obviously",
    "start": "927360",
    "end": "932720"
  },
  {
    "text": "reusability H but also maintainability if you think like in the long run so it is is very similar to if you want a",
    "start": "932720",
    "end": "938440"
  },
  {
    "text": "microservices approach where it is easy to switch out a single feature in this way because we can literally just Place",
    "start": "938440",
    "end": "945120"
  },
  {
    "text": "Another feature alongside it even reuse some of the logic right and then deprecate the old feature and just",
    "start": "945120",
    "end": "950319"
  },
  {
    "text": "delete it because it should be if it is nice and structured encapsulated within that single feature area and then",
    "start": "950319",
    "end": "956600"
  },
  {
    "text": "obviously this helps a lot in scaling like scaling in terms of assigning developers but also scaling in terms of",
    "start": "956600",
    "end": "962639"
  },
  {
    "text": "speed as we will see in a bit also later in the presentation cool so having seen",
    "start": "962639",
    "end": "967920"
  },
  {
    "start": "967000",
    "end": "1447000"
  },
  {
    "text": "modularity the next topic kind of fits nicely into it which is a mistake is to ignore the service boundaries or",
    "start": "967920",
    "end": "974480"
  },
  {
    "text": "boundaries in general of those domain areas why is that well if you think about the situation where we had",
    "start": "974480",
    "end": "981160"
  },
  {
    "text": "different poly repos or like single project repositories then we had kind of",
    "start": "981160",
    "end": "986319"
  },
  {
    "text": "like a physical boundary between those repositories because you cannot really just literally like grab a file from",
    "start": "986319",
    "end": "992720"
  },
  {
    "text": "another repository and import it but you have to actually go through a publishing process and like versioning process so",
    "start": "992720",
    "end": "997959"
  },
  {
    "text": "it's much more formal the problem is now once you move that into like a single",
    "start": "997959",
    "end": "1003600"
  },
  {
    "text": "mono that disappears right there is potentially you can import any file within the mon rer without going through",
    "start": "1003600",
    "end": "1010440"
  },
  {
    "text": "any process because you always depend on the latest and so that's something that you need to be aware of and then kind of",
    "start": "1010440",
    "end": "1015839"
  },
  {
    "text": "put some rules into place and also make sure how to control those because here for instance this is like within an",
    "start": "1015839",
    "end": "1021680"
  },
  {
    "text": "actual domain area which might not even be that bad in general but like even here do we want to allow the domain area",
    "start": "1021680",
    "end": "1029360"
  },
  {
    "text": "type of libraries import feature type of libraries which more like Contour flows right uh do we want to allow this",
    "start": "1029360",
    "end": "1035839"
  },
  {
    "text": "probably we don't right we want to have like the inverse so the feature should probably or can depend on the domain but the domain layer should not be able to",
    "start": "1035839",
    "end": "1042438"
  },
  {
    "text": "depend on a feature layer or UI layer and so those are for instance such rules that we can establish it gets even",
    "start": "1042439",
    "end": "1048919"
  },
  {
    "text": "problematic or more problematic if we talk about cross domain areas right so",
    "start": "1048919",
    "end": "1054120"
  },
  {
    "text": "if like we have the product area and we have a feature there is it allowed to grab some UI components from the orders",
    "start": "1054120",
    "end": "1060640"
  },
  {
    "text": "area it might be if those UI components are made to be exposed also to other",
    "start": "1060640",
    "end": "1065720"
  },
  {
    "text": "areas so it's totally fine if the product page wants to include a piece of an order state for instance but it",
    "start": "1065720",
    "end": "1071200"
  },
  {
    "text": "should be something that is a conscious decision that we make and so the problem is like this",
    "start": "1071200",
    "end": "1077280"
  },
  {
    "text": "could even happen by accident right right like we have seen as shown here in this slide how easy it is to import a of files so even Visual Studio code for",
    "start": "1077280",
    "end": "1084799"
  },
  {
    "text": "instance or some other IDE using might just import that automatically as it completes some class that you're using",
    "start": "1084799",
    "end": "1091200"
  },
  {
    "text": "right so this could even happen without being conscious however if we look at the code",
    "start": "1091200",
    "end": "1096600"
  },
  {
    "text": "base here we can clearly see there is a way to potentially avoid that or we have at least information because the import",
    "start": "1096600",
    "end": "1103679"
  },
  {
    "text": "clearly defines which Library those Imports belong to so we can see this is from design system buttons and design",
    "start": "1103679",
    "end": "1109520"
  },
  {
    "text": "system form controls so we can potentially assign those to to those regions of the kind of more higher level",
    "start": "1109520",
    "end": "1116120"
  },
  {
    "text": "domain area and we also know where the file that Imports it belongs to right which is in this case a feature part of",
    "start": "1116120",
    "end": "1123159"
  },
  {
    "text": "the orders application for instance so all we need to understand now is whether such an import is legit so is it allowed",
    "start": "1123159",
    "end": "1130520"
  },
  {
    "text": "that a feature library or UI Li from the orders Dom main area import from Design Systems now in this case it might",
    "start": "1130520",
    "end": "1135720"
  },
  {
    "text": "totally be right because they should be able to do that that they should be able to leverage some of those",
    "start": "1135720",
    "end": "1140840"
  },
  {
    "text": "components but we need to basically ask two different questions here and we can approach and kind of control this type",
    "start": "1140840",
    "end": "1147679"
  },
  {
    "text": "of like boundaries in a way where we ask what type of project is allowed to import what other type of project which",
    "start": "1147679",
    "end": "1154080"
  },
  {
    "text": "is one dimension and the second dimension is what domain area scope is allowed to import from which other",
    "start": "1154080",
    "end": "1160720"
  },
  {
    "text": "domain area scope now if you look at our examples in a concrete manner the types",
    "start": "1160720",
    "end": "1166679"
  },
  {
    "text": "for instance would be the feature libraries the UI libraries the domain logic libraries usually are much more",
    "start": "1166679",
    "end": "1173200"
  },
  {
    "text": "like here I just listed a couple of examples but there usually utility Library you might even have other type",
    "start": "1173200",
    "end": "1178520"
  },
  {
    "text": "of dedicated libraries because it really depends on your actual use case or infrastructure or design system you're",
    "start": "1178520",
    "end": "1185200"
  },
  {
    "text": "actually developing on the other side the scope is represented by our domain areas right so we have in this case of",
    "start": "1185200",
    "end": "1191760"
  },
  {
    "text": "this example the orders to my account for handing authentication profiles the product and the checkout and then there",
    "start": "1191760",
    "end": "1197799"
  },
  {
    "text": "is usually a shared area which is not assigned to actual clear domain area but",
    "start": "1197799",
    "end": "1203000"
  },
  {
    "text": "it's more a reusable infrastructure L if you want that can be used by all the other",
    "start": "1203000",
    "end": "1209159"
  },
  {
    "text": "areas now in order to be able to categorize our projects one way to do",
    "start": "1209360",
    "end": "1214760"
  },
  {
    "text": "that could be to assign some sort of TX right so identifiers to those projects to say well here and this is a specific",
    "start": "1214760",
    "end": "1222000"
  },
  {
    "text": "example for inst how an X implements it but you could say the orders UI is of scope orders so it belongs to that or",
    "start": "1222000",
    "end": "1229039"
  },
  {
    "text": "domain area and it is of type UI because it's kind of a reusable but inside the",
    "start": "1229039",
    "end": "1234200"
  },
  {
    "text": "domain area component and then based on that we can establish rules uh in potentially a very",
    "start": "1234200",
    "end": "1241360"
  },
  {
    "text": "simple way again here's an implementation needle of an X but you could really literally formulate however",
    "start": "1241360",
    "end": "1247000"
  },
  {
    "text": "you want such a rule system where we say for instance Source tag of like type feature can depend on other features",
    "start": "1247000",
    "end": "1254440"
  },
  {
    "text": "which might be totally legit it can depend on type UI it can depend on type util and can depend on type domain so",
    "start": "1254440",
    "end": "1261240"
  },
  {
    "text": "all of those are valid as we keep going to more specific libraries let's say",
    "start": "1261240",
    "end": "1266440"
  },
  {
    "text": "here for instance type domain might already just be able to depend on some general purpose utility libraries like",
    "start": "1266440",
    "end": "1271840"
  },
  {
    "text": "utility functions right might also depend or be able to depend on aut domains but that's something we can kind",
    "start": "1271840",
    "end": "1277000"
  },
  {
    "text": "of decide or if you look at the exact like Type U that can just depend on an aut type utl",
    "start": "1277000",
    "end": "1283360"
  },
  {
    "text": "Library so this is the one dimension of the types and then if we add in also so",
    "start": "1283360",
    "end": "1288440"
  },
  {
    "text": "the second dimension we would Define further rules which say okay then now the second dimension I would say that",
    "start": "1288440",
    "end": "1294360"
  },
  {
    "text": "the scope of products can only depend on the scope of product libraries plus the",
    "start": "1294360",
    "end": "1299679"
  },
  {
    "text": "scope shared because that's legit because they might want to depend on for instance design system components which",
    "start": "1299679",
    "end": "1305080"
  },
  {
    "text": "definitely lives in that shared domain area and that's how we continue defining such like classification for all our",
    "start": "1305080",
    "end": "1311760"
  },
  {
    "text": "projects there there's even like once you have such a system people even uh have an approach like the following here",
    "start": "1311760",
    "end": "1317200"
  },
  {
    "text": "where they Define dedicated Library just for the purpose of exposing functionality to other domain areas so",
    "start": "1317200",
    "end": "1323279"
  },
  {
    "text": "you could have a potentially type API Library which all the other domain areas can depend on where you like",
    "start": "1323279",
    "end": "1330000"
  },
  {
    "text": "specifically reexport internal domain area functionality so you can see what I",
    "start": "1330000",
    "end": "1335320"
  },
  {
    "text": "want to show basically is like how detailed and fine gr you can control such a flow and make sure it is kind of",
    "start": "1335320",
    "end": "1341760"
  },
  {
    "text": "being resped now one thing we didn't address is like how do I enforce these rules and so this is definitely",
    "start": "1341760",
    "end": "1347440"
  },
  {
    "text": "something we need an automation for like we we definitely we should kind of control this as well in the pr reviews",
    "start": "1347440",
    "end": "1353320"
  },
  {
    "text": "but it's not something that is scalable obviously and so it turns out that linting for instance can be a very good",
    "start": "1353320",
    "end": "1358600"
  },
  {
    "text": "approach to do something like that because it is really static code analysis at this point right where we",
    "start": "1358600",
    "end": "1364159"
  },
  {
    "text": "look at the Imports at our source files map them to the projects and verify based on our tagging rules or whatever",
    "start": "1364159",
    "end": "1370480"
  },
  {
    "text": "system we are kind of implementing and so that can be very neat to implement first of all because it has nice side",
    "start": "1370480",
    "end": "1376880"
  },
  {
    "text": "effect that for instance our IDE can with the linting plugins that exist for all the various types of Ides give us a",
    "start": "1376880",
    "end": "1383320"
  },
  {
    "text": "heads up as we code along so we might even see it before we commit the code and can therefore fix it but obviously",
    "start": "1383320",
    "end": "1389320"
  },
  {
    "text": "the last result is always that you can run them in your CI system and so it will block the pr from being merged",
    "start": "1389320",
    "end": "1395400"
  },
  {
    "text": "which is something that needs to be obviously in place so to look at that enforcing",
    "start": "1395400",
    "end": "1400840"
  },
  {
    "text": "boundaries is really important for avoiding those spaghetti dependencies because again before we had the physical",
    "start": "1400840",
    "end": "1406919"
  },
  {
    "text": "boundaries B B on the repository boundaries that like existed and now we need to make that something similar",
    "start": "1406919",
    "end": "1413640"
  },
  {
    "text": "because we don't have that anymore right we don't we want to still make it as flexible as possible but we want to",
    "start": "1413640",
    "end": "1418840"
  },
  {
    "text": "still also be able to kind of have some sort of like management around the areas that might exist in a mon reer and",
    "start": "1418840",
    "end": "1425600"
  },
  {
    "text": "obviously this helps as we scale up and as our codebase grows and this is especially important uh as we keep",
    "start": "1425600",
    "end": "1431840"
  },
  {
    "text": "adding team members as we keep adding projects because those are rules that aren't defined in some docs but they are",
    "start": "1431840",
    "end": "1437400"
  },
  {
    "text": "automatically post and en force on your system as you keep coding and obviously maintainability is a big part like this",
    "start": "1437400",
    "end": "1443760"
  },
  {
    "text": "is just for maintainability the next thing and let's address to the elephant in the room here",
    "start": "1443760",
    "end": "1450000"
  },
  {
    "start": "1447000",
    "end": "1560000"
  },
  {
    "text": "basically is speed right so we don't need to kind of address this immediately",
    "start": "1450000",
    "end": "1456919"
  },
  {
    "text": "as we start our moner but we need to keep it in the back of our minds that this is going to be important because",
    "start": "1456919",
    "end": "1463640"
  },
  {
    "text": "one thing is obviously that as we keep adding new projects to our monor our CI time will go up that's by definition",
    "start": "1463640",
    "end": "1470559"
  },
  {
    "text": "basically right the more product we need to build test lint end to end test whatever the more time our CI system",
    "start": "1470559",
    "end": "1476080"
  },
  {
    "text": "will need so we need to have some sort of mechanism because otherwise it will lead into congestion and what you usually see then",
    "start": "1476080",
    "end": "1483399"
  },
  {
    "text": "in monus that don't have or are not optimized for that is the following so this is the typical result for those",
    "start": "1483399",
    "end": "1489919"
  },
  {
    "text": "that that haven't seen it h what I mean here is the the numbers of file changed here and this is pretty clear right",
    "start": "1489919",
    "end": "1496520"
  },
  {
    "text": "because a developer uh like his main job is to work within that Sprint system or whatever whatever is set up as their",
    "start": "1496520",
    "end": "1503000"
  },
  {
    "text": "methodology for developing and their job is to ship features and if your CI system keeps slowing down and therefore",
    "start": "1503000",
    "end": "1509679"
  },
  {
    "text": "you have a hard time to merge your PRS into the main integration Branch it means that you're slower at chipping",
    "start": "1509679",
    "end": "1515679"
  },
  {
    "text": "features and so what developer instinctively do well I just group multiple features into one PR because",
    "start": "1515679",
    "end": "1521960"
  },
  {
    "text": "then I don't have the overhead of going through CI multiple times but just ship it everything into the co-base in one go",
    "start": "1521960",
    "end": "1528960"
  },
  {
    "text": "uh but obviously as you as you know this is not really solution right because the the pr reviewer has a super hard time to",
    "start": "1528960",
    "end": "1535399"
  },
  {
    "text": "review this we will most probably skip a large part of the review and just glance over it uh and therefore lose an in",
    "start": "1535399",
    "end": "1541919"
  },
  {
    "text": "quality right so that's definitely something that needs to be addressed what we rather want to aim for is",
    "start": "1541919",
    "end": "1547559"
  },
  {
    "text": "something like this so we want to flatten the curve as has been kind of ingrained in our brains over the last",
    "start": "1547559",
    "end": "1553919"
  },
  {
    "text": "couple of years but keep it as low as possible even as our number of product grows in a mon",
    "start": "1553919",
    "end": "1559760"
  },
  {
    "text": "repo and for that to be able to to realize there is what I call personally",
    "start": "1559760",
    "end": "1565360"
  },
  {
    "start": "1560000",
    "end": "1629000"
  },
  {
    "text": "like the layers of speed or speed optimizations at the first layer you obviously want fast tooling or build",
    "start": "1565360",
    "end": "1572360"
  },
  {
    "text": "tooling you want intelligent parallelization on top of it you want to",
    "start": "1572360",
    "end": "1577399"
  },
  {
    "text": "be able to have a mechanism which allows you to just address or like run those",
    "start": "1577399",
    "end": "1583480"
  },
  {
    "text": "parts of the project or the system that has been touched you you also want to have some sort of caching mechanism and",
    "start": "1583480",
    "end": "1590360"
  },
  {
    "text": "and all those like we will go into details of those I'm just like going to show them first and you also want to",
    "start": "1590360",
    "end": "1595720"
  },
  {
    "text": "potentially have distributed remote caching and at the very top you might even want to have something that allows",
    "start": "1595720",
    "end": "1601679"
  },
  {
    "text": "you to compute or run the computation across different machines and then regroup the results again back into one",
    "start": "1601679",
    "end": "1607799"
  },
  {
    "text": "single system and so I'm calling this layers of speed because you don't necessarily have to do all of them so",
    "start": "1607799",
    "end": "1613399"
  },
  {
    "text": "you could remain at the fast build tooling maybe add intelligent paration and only affected but that's it right or",
    "start": "1613399",
    "end": "1619200"
  },
  {
    "text": "just local caching and you could kind of also keep incrementing that as you go and as you see the need for it so let's",
    "start": "1619200",
    "end": "1625919"
  },
  {
    "text": "have a look what all these uh weird terminologies here mean first of all layers of speed fast",
    "start": "1625919",
    "end": "1632559"
  },
  {
    "start": "1629000",
    "end": "1712000"
  },
  {
    "text": "tooling like someone on Twitter mentioned this is kind of like asking for Faster Horses right which is pretty",
    "start": "1632559",
    "end": "1638559"
  },
  {
    "text": "accurate I think right but the main philosophy the main idea which I have behind this point is mostly that",
    "start": "1638559",
    "end": "1644399"
  },
  {
    "text": "nowadays the tooling system especially talking about the this being a front end track talking about this JavaScript",
    "start": "1644399",
    "end": "1651360"
  },
  {
    "text": "tooling uh we have lots of good toolings that are much much faster than they were before right so we have es build now uh",
    "start": "1651360",
    "end": "1658960"
  },
  {
    "text": "we have vit which is super fast in terms of developing there is tuop pack being develop as well as RS pack which is kind",
    "start": "1658960",
    "end": "1665279"
  },
  {
    "text": "of the successor of weback so a lot of those toolings actually use native rust",
    "start": "1665279",
    "end": "1671039"
  },
  {
    "text": "level implementations just for being able to speed up things and so just to have an example like if you take car or",
    "start": "1671039",
    "end": "1677720"
  },
  {
    "text": "just as a runner and compare it to vest there's like ages in between like those are multiple times faster and so",
    "start": "1677720",
    "end": "1686039"
  },
  {
    "text": "obviously this is like the minimum your base payload basically that you carry on right so if that is already slow right",
    "start": "1686039",
    "end": "1692200"
  },
  {
    "text": "if your Bild takes let's say 10 seconds compared to just a couple milliseconds well that's the budget with which you",
    "start": "1692200",
    "end": "1698320"
  },
  {
    "text": "start right and then polarization caching and just all the other layers on top of it just try to diminish that but",
    "start": "1698320",
    "end": "1705159"
  },
  {
    "text": "the lower we start the more we can actually def implementing some of the other approaches and the more those will",
    "start": "1705159",
    "end": "1710399"
  },
  {
    "text": "be effective obviously so the next obviously that comes into play here is parallelization",
    "start": "1710399",
    "end": "1717080"
  },
  {
    "start": "1712000",
    "end": "1811000"
  },
  {
    "text": "and I think this one is actually pretty clear uh but implementation is not always that straightforward so what I",
    "start": "1717080",
    "end": "1723120"
  },
  {
    "text": "mean here is we don't obviously want uh to run things serly right and so here i' I've taken an example of like an X which",
    "start": "1723120",
    "end": "1729679"
  },
  {
    "text": "runs first the lint and then the test and then the build of all the projects in our workspace and so you can see",
    "start": "1729679",
    "end": "1735159"
  },
  {
    "text": "below which is kind of like a a visualization like approximate illustration basically of the timing you can see like the the second the tests",
    "start": "1735159",
    "end": "1742360"
  },
  {
    "text": "need to wait until the linting is done and the bills need to wait until the testing is done which is completely inefficient right because for for",
    "start": "1742360",
    "end": "1749000"
  },
  {
    "text": "project one the the build and test could already start much earlier right so there's no way to to wait and so what",
    "start": "1749000",
    "end": "1755600"
  },
  {
    "text": "you can do is paralyze those right say well run me lint testing and building",
    "start": "1755600",
    "end": "1761240"
  },
  {
    "text": "however you think is most optimal and so here you see already like product one already runs all of them in par parallel",
    "start": "1761240",
    "end": "1767799"
  },
  {
    "text": "there are no dependence between them then there's product two which has some weird thing which we will come into a",
    "start": "1767799",
    "end": "1773159"
  },
  {
    "text": "second then there is product three which also runs in parallel so what happens here with project two well the build is",
    "start": "1773159",
    "end": "1779600"
  },
  {
    "text": "delayed right and the main reason for that is because in this specific system here which I've Illustrated project two",
    "start": "1779600",
    "end": "1786000"
  },
  {
    "text": "depends on the build output of project 3 so we cannot run the build before running the build of project three and",
    "start": "1786000",
    "end": "1792559"
  },
  {
    "text": "so this is a system that is like very common in mon Reapers because you have all those dependencies which we have",
    "start": "1792559",
    "end": "1798480"
  },
  {
    "text": "mentioned before so if the Y order component wants the button well the button needs to be built first right so",
    "start": "1798480",
    "end": "1804120"
  },
  {
    "text": "we need to make sure that that is there and only then we can run it and so that's what I mean with intelligent",
    "start": "1804120",
    "end": "1811080"
  },
  {
    "start": "1811000",
    "end": "1881000"
  },
  {
    "text": "parallelization now you might wonder like how does this actually work like how does the build system or in this",
    "start": "1811080",
    "end": "1816559"
  },
  {
    "text": "case mon repo tool Runner task Runner figure out which how to to prioritize",
    "start": "1816559",
    "end": "1821799"
  },
  {
    "text": "things well there's usually in all modern Tooling in the mono space there is a So-Cal graph behind the scenes some",
    "start": "1821799",
    "end": "1828799"
  },
  {
    "text": "of them even allow you to visualize it like an X for instance but the graph is always present because this is the main",
    "start": "1828799",
    "end": "1835279"
  },
  {
    "text": "foundational concept which allows you to make a whole set of optimizations which we'll see in a second and so taking that",
    "start": "1835279",
    "end": "1842159"
  },
  {
    "text": "example of the build for instance well if we run the build of this product here in the middle we know already it depends",
    "start": "1842159",
    "end": "1849200"
  },
  {
    "text": "on our project further Downstream right and so we need to make sure that first the direct dependencies are being built",
    "start": "1849200",
    "end": "1855559"
  },
  {
    "text": "as well now again depending on the implementation or the tool that you choose you can even usually customize",
    "start": "1855559",
    "end": "1861960"
  },
  {
    "text": "that even further right so you can actually specify whether that build dependency actually exists because sometimes it might not be there right so",
    "start": "1861960",
    "end": "1868720"
  },
  {
    "text": "you can even run them in parallel even though there's like such a a tree dependency between them but that is kind",
    "start": "1868720",
    "end": "1874519"
  },
  {
    "text": "of one fundamental concept and how the tooling actually is able to figure that out and then parallelize uh various",
    "start": "1874519",
    "end": "1881039"
  },
  {
    "start": "1881000",
    "end": "1942000"
  },
  {
    "text": "things another part here which also ties in very easily in into the graph as well which you just mentioned is",
    "start": "1881039",
    "end": "1887679"
  },
  {
    "text": "only run computation on effective projects and so what I mean with this",
    "start": "1887679",
    "end": "1893279"
  },
  {
    "text": "here is again looking at our beautiful graph here uh we don't want to run every",
    "start": "1893279",
    "end": "1898639"
  },
  {
    "text": "time everything right so this is a very naive approach uh which you see in very simple uh monor implementations where",
    "start": "1898639",
    "end": "1905919"
  },
  {
    "text": "each PR runs the testing the building the linting the end Des for all the projects every time which is obviously",
    "start": "1905919",
    "end": "1912840"
  },
  {
    "text": "completely inefficient because we can optimize that for instance let's assume we we change something in that specific",
    "start": "1912840",
    "end": "1919639"
  },
  {
    "text": "node here in that specific project then we don't need to test and run and build everything right but we",
    "start": "1919639",
    "end": "1925840"
  },
  {
    "text": "don't we just can follow the graph upwards and then run the computation for those notes so you can already see how",
    "start": "1925840",
    "end": "1933000"
  },
  {
    "text": "we cut out the whole part of the graph here and we can already optimize obviously for Speed in this case because",
    "start": "1933000",
    "end": "1939039"
  },
  {
    "text": "running less projects will be faster on top of that comes then the",
    "start": "1939039",
    "end": "1945799"
  },
  {
    "start": "1942000",
    "end": "2105000"
  },
  {
    "text": "caching and so this is another thing that most modern tools nowadays mon repo",
    "start": "1945799",
    "end": "1951000"
  },
  {
    "text": "tools have and and you can imagine this being like function memorization but",
    "start": "1951000",
    "end": "1957159"
  },
  {
    "text": "apply to processes so what do I mean with this usually what happens here is that you have your command like on your",
    "start": "1957159",
    "end": "1964000"
  },
  {
    "text": "CLI or whatever where you say run me all the builds or run me a build of this specific project what the usual the the",
    "start": "1964000",
    "end": "1971360"
  },
  {
    "text": "tool then does behind the scenes is it grabs all relevant information so it has the command it will take obviously the",
    "start": "1971360",
    "end": "1976720"
  },
  {
    "text": "import source code that to make sure that hasn't changed it takes potential environment variables Global",
    "start": "1976720",
    "end": "1981840"
  },
  {
    "text": "configuration your node version everything that could kind of matter and could have an impact on the actual built",
    "start": "1981840",
    "end": "1987360"
  },
  {
    "text": "output and again this obviously depends on the type of like technology you're using right like JavaScript might be more vulnerable vulnerable vulnerable to",
    "start": "1987360",
    "end": "1996120"
  },
  {
    "text": "kind of the the node version for instance and how it compiles but it might be some relevant piece and so this",
    "start": "1996120",
    "end": "2001919"
  },
  {
    "text": "is all being then like composed into a single hash that is being computed out",
    "start": "2001919",
    "end": "2007360"
  },
  {
    "text": "of that information which is then sort locally together with the actual output of running the process which could be",
    "start": "2007360",
    "end": "2014039"
  },
  {
    "text": "the console log outputs obviously which you usually see on your CLI as you run the command but also the potential",
    "start": "2014039",
    "end": "2019600"
  },
  {
    "text": "artifacts that are being produced and placed in your disc folder now if we rerun the computation again what will",
    "start": "2019600",
    "end": "2026320"
  },
  {
    "text": "happen is first the hash has being computed which is usually a very fast operation because it's very optimized",
    "start": "2026320",
    "end": "2032279"
  },
  {
    "text": "and then it's being checked whether such a hash exists and if there's a match of course what we will do is we don't run",
    "start": "2032279",
    "end": "2038600"
  },
  {
    "text": "the actual computation but we just restore the cache show the console log to the user restore everything of the",
    "start": "2038600",
    "end": "2045480"
  },
  {
    "text": "build artifact in onto the file system and that's it right and so the operation obviously as you can imagine can be just",
    "start": "2045480",
    "end": "2051118"
  },
  {
    "text": "a couple milliseconds compared to uh like even a second or depending on how fast your build holding is so why do we",
    "start": "2051119",
    "end": "2058440"
  },
  {
    "text": "need this let's see the existing graph that we had before where we ran just",
    "start": "2058440",
    "end": "2063560"
  },
  {
    "text": "affected noes so this is already optimized right so but imagine we now that PR where we change this we push it",
    "start": "2063560",
    "end": "2069638"
  },
  {
    "text": "up it will run just effected notes based on this calculation but then this product fails because the test fails or",
    "start": "2069639",
    "end": "2076358"
  },
  {
    "text": "the build actually fails we pull it down again we change it we push it up again",
    "start": "2076359",
    "end": "2082040"
  },
  {
    "text": "but now we don't have to run all the projects again right because some of them haven't been touched right and we",
    "start": "2082040",
    "end": "2087800"
  },
  {
    "text": "have run them before the input conditions didn't change so we can just pull them out of the cache while some",
    "start": "2087800",
    "end": "2093839"
  },
  {
    "text": "other products obviously we need to run so you can already see now on top of of that affected calculation or optimization we now have the caching",
    "start": "2093839",
    "end": "2100240"
  },
  {
    "text": "which gives us further optimization now all of this has been local caching and so an additional thing",
    "start": "2100240",
    "end": "2107400"
  },
  {
    "start": "2105000",
    "end": "2200000"
  },
  {
    "text": "you could potentially add on top of it is remote caching so what do I mean well",
    "start": "2107400",
    "end": "2113320"
  },
  {
    "text": "local caching is just stored on every single machine right so it can be on your Noe in your node model folder if",
    "start": "2113320",
    "end": "2119800"
  },
  {
    "text": "it's a front end project it can be on some specified folder uh obviously depends a lot on the tool itself that you're using but imagine now Kate has",
    "start": "2119800",
    "end": "2126960"
  },
  {
    "text": "such a local cach but then there's also gym and there's also the CI system right the CI system is something people always",
    "start": "2126960",
    "end": "2133320"
  },
  {
    "text": "sometimes forget but it is some that keeps running continuously tests and builds and lint so it's one prod that",
    "start": "2133320",
    "end": "2139200"
  },
  {
    "text": "works like the whole day right and it can contribute a lot of cash results for others to reuse but you can also",
    "start": "2139200",
    "end": "2145240"
  },
  {
    "text": "leverage a lot of the cash that has been produced beforehand by other PRS and therefore speed up operations a lot and",
    "start": "2145240",
    "end": "2152400"
  },
  {
    "text": "so the whole concept of about remote caching is nothing else than sharing that cash and storing it in a central",
    "start": "2152400",
    "end": "2158640"
  },
  {
    "text": "location now hopefully there is no floppy disc there where everything is being stored but usually there is like",
    "start": "2158640",
    "end": "2164359"
  },
  {
    "text": "the specific SAS provider of the product you're using right and usually those are then paid or they have some generous",
    "start": "2164359",
    "end": "2169760"
  },
  {
    "text": "free options depending on what tool you're using but the con is you have a central location where those cash",
    "start": "2169760",
    "end": "2175520"
  },
  {
    "text": "results are being stored and so all of the members that are part of this network can benefit from it again",
    "start": "2175520",
    "end": "2181920"
  },
  {
    "text": "personally the main contributor and like one that mostly leverages this is the CI system because that's where the the",
    "start": "2181920",
    "end": "2188359"
  },
  {
    "text": "so-called congestion happens that we mentioned earlier and if people produce a lot of cash results subsequent PRS",
    "start": "2188359",
    "end": "2194079"
  },
  {
    "text": "will be much much faster because we don't tend to change all the time all the different",
    "start": "2194079",
    "end": "2200079"
  },
  {
    "start": "2200000",
    "end": "2477000"
  },
  {
    "text": "parts as the last part in that whole layers of speed is distributed task",
    "start": "2200079",
    "end": "2205680"
  },
  {
    "text": "execution or how to distribute the task across machines um and this is basically",
    "start": "2205680",
    "end": "2210920"
  },
  {
    "text": "an advanced paralyzation if you want that is not just on your machine which is kind of limited by the amount of CPUs",
    "start": "2210920",
    "end": "2216359"
  },
  {
    "text": "and money multi threading it is able to do and multi processes but this is this",
    "start": "2216359",
    "end": "2221480"
  },
  {
    "text": "across machines so why would I need this well again looking at our graph imagine",
    "start": "2221480",
    "end": "2227760"
  },
  {
    "text": "we change this note here because obviously the the speed of the computation on your PR and usci time",
    "start": "2227760",
    "end": "2234200"
  },
  {
    "text": "also depends what node you change right and how small the nodes are which is also why the whole modularity concept",
    "start": "2234200",
    "end": "2239720"
  },
  {
    "text": "here kind of plays a role the more fine grin the the the levels of the projects are the better in terms of the cach but",
    "start": "2239720",
    "end": "2246920"
  },
  {
    "text": "there's also cost and overhead cost of spinning up new computations and running them so it is kind of a balance that",
    "start": "2246920",
    "end": "2252359"
  },
  {
    "text": "needs to be taken but as you can see obviously here if we change more of the leaf nodes in our graph we need to",
    "start": "2252359",
    "end": "2258599"
  },
  {
    "text": "compute a lot more projects for the more might be cases where you change fundamental configuration files right",
    "start": "2258599",
    "end": "2264680"
  },
  {
    "text": "where we need to invalidate entire cache because the risk of not running",
    "start": "2264680",
    "end": "2269720"
  },
  {
    "text": "computation that might be affected by such a global configuration change within the repo uh is just too high so",
    "start": "2269720",
    "end": "2275280"
  },
  {
    "text": "the computations rerun so the result is that we have now the worst casee scenario where we run everything and so",
    "start": "2275280",
    "end": "2281800"
  },
  {
    "text": "in that case having a more efficient task scheduling than just pure paralyzation might be rev valuable H and",
    "start": "2281800",
    "end": "2288920"
  },
  {
    "text": "so rather than running it on one agent we distribute it across multiple agents",
    "start": "2288920",
    "end": "2294319"
  },
  {
    "text": "now we can totally do that manually so we can actually split it up but usually what happens is this is a very naive",
    "start": "2294319",
    "end": "2300200"
  },
  {
    "text": "approach in the sense that people split up the bills that go on one agent the test and lint test in one another agent",
    "start": "2300200",
    "end": "2306599"
  },
  {
    "text": "agent and Linds on another agent as well but you can already see that this might",
    "start": "2306599",
    "end": "2312000"
  },
  {
    "text": "lead to a very inefficient distribution because like here the the testing and",
    "start": "2312000",
    "end": "2317240"
  },
  {
    "text": "linting might be much faster but still the entire computation only finishes when agent one finishes but you can",
    "start": "2317240",
    "end": "2323560"
  },
  {
    "text": "already see in this illustration that agent two and agent three are idle like they're waiting there right and could",
    "start": "2323560",
    "end": "2329200"
  },
  {
    "text": "potentially take over some of the computation so what we can do is we can",
    "start": "2329200",
    "end": "2334760"
  },
  {
    "text": "run our paralyzation script um but have a central coordinating system that knows what scripts needs to",
    "start": "2334760",
    "end": "2342040"
  },
  {
    "text": "be computed what are the different projects that are affected because it knows all the it has the prodject graph",
    "start": "2342040",
    "end": "2348200"
  },
  {
    "text": "basically it has all the information it has also information about the dependences between prodject so it is able to prioritize even more and being",
    "start": "2348200",
    "end": "2355520"
  },
  {
    "text": "it a central coordinator it could even take into consideration previous historical runs right so it could learn",
    "start": "2355520",
    "end": "2361400"
  },
  {
    "text": "over time from such runs and optimize based on that because it knows friends that one the build is super slow so it",
    "start": "2361400",
    "end": "2369160"
  },
  {
    "text": "can learn over time and then allocate it differently rather than it would uh naively without having much data and so",
    "start": "2369160",
    "end": "2376119"
  },
  {
    "text": "here we see for instance the the bills distributed across all those three agents and you can already see it's much",
    "start": "2376119",
    "end": "2381520"
  },
  {
    "text": "more like uniformly distributed so what we aim here for is to reduce the idle",
    "start": "2381520",
    "end": "2387000"
  },
  {
    "text": "time and therefore maximize utilization of those machines that we run another part is also so not only the scripts are",
    "start": "2387000",
    "end": "2394079"
  },
  {
    "text": "flexible because we can have multiple products tomorrow and so that whole distribution might look different so this is a really a dynamic distribution",
    "start": "2394079",
    "end": "2401200"
  },
  {
    "text": "but we can also add an agent right if we see it is valuable because all three agents are already at maximum capacity",
    "start": "2401200",
    "end": "2408280"
  },
  {
    "text": "we can start playing by adding another agent and then have the system automatically distribute now across four",
    "start": "2408280",
    "end": "2413800"
  },
  {
    "text": "agents similarly we can potentially add like very alter our script like add an",
    "start": "2413800",
    "end": "2419240"
  },
  {
    "text": "end to end test right and so again those would automatically be scheduled within those agents and they would also be",
    "start": "2419240",
    "end": "2425800"
  },
  {
    "text": "scheduled dep pay depending on their dependencies because the ENT is usually",
    "start": "2425800",
    "end": "2431599"
  },
  {
    "text": "for instance depend on the actual build output of a previous project and so in",
    "start": "2431599",
    "end": "2436800"
  },
  {
    "text": "this case here you can see that they are scaled towards the end of the processing of those agents but where they are",
    "start": "2436800",
    "end": "2442599"
  },
  {
    "text": "located in the system is actually not really relevant because if those system like if those agents also Leverage The",
    "start": "2442599",
    "end": "2450319"
  },
  {
    "text": "caching the remote caching which I mentioned earlier then we have an easy Communication System right because once",
    "start": "2450319",
    "end": "2457040"
  },
  {
    "text": "like agent two runs the end to end test and it depends on the build output of agent one here it would try to run that",
    "start": "2457040",
    "end": "2464440"
  },
  {
    "text": "build but the build would hit a cach hit and would just restore all the artifacts now on agent two right and so this can",
    "start": "2464440",
    "end": "2471119"
  },
  {
    "text": "even be used like the caching system as a communication layer for moving around artifact between different",
    "start": "2471119",
    "end": "2477440"
  },
  {
    "text": "machines all right so this was actually a long topic but this is a very important one and so one thing that I",
    "start": "2477440",
    "end": "2483040"
  },
  {
    "text": "want you to to remember for this is that speed is really a key requirement if you want to scale so it might not be that",
    "start": "2483040",
    "end": "2489640"
  },
  {
    "text": "relevant if you have just three four projects but even then people might slowly start like not being as happy",
    "start": "2489640",
    "end": "2496040"
  },
  {
    "text": "with the mon repo as they were initially because things start slowing down and so you start should start kind of thinking",
    "start": "2496040",
    "end": "2501599"
  },
  {
    "text": "about that concept for the very beginning modularization plays a key role uh depending on the tool you're",
    "start": "2501599",
    "end": "2507560"
  },
  {
    "text": "using uh you need to identify what is the smallest kind of individual note that can be compiled because that's what",
    "start": "2507560",
    "end": "2514160"
  },
  {
    "text": "can be cached that's what can be r run independently in such an affected process or whatever and then tooling is",
    "start": "2514160",
    "end": "2520920"
  },
  {
    "text": "obviously fundamental right so this is not something that comes baked in for instance an npm or pnpm workspace which",
    "start": "2520920",
    "end": "2526240"
  },
  {
    "text": "is probably the most simplest uh mon repo setup in a JavaScript ecosystem but you need dedicated tooling that has that",
    "start": "2526240",
    "end": "2533599"
  },
  {
    "start": "2533000",
    "end": "2672000"
  },
  {
    "text": "implemented another common mistake to I would like to transition to which is our final one is not investing in",
    "start": "2533599",
    "end": "2541079"
  },
  {
    "text": "automation now automation is a key because at a certain point like",
    "start": "2541079",
    "end": "2546359"
  },
  {
    "text": "operations manually just won't scale I mean this is something which is I think pretty intuitive um so we need to add",
    "start": "2546359",
    "end": "2552800"
  },
  {
    "text": "some sort of automation to speed up processes and this is not just for speeding up processes or for like",
    "start": "2552800",
    "end": "2558960"
  },
  {
    "text": "scaling in general but it also helps with adoption like if it is easy to add a new project your monor repo to add",
    "start": "2558960",
    "end": "2565280"
  },
  {
    "text": "some sort of functionality to extend your cic script like if some of that is automated people will be much more",
    "start": "2565280",
    "end": "2571480"
  },
  {
    "text": "easily adopt such an approach and be much happier to work in such an environment which is is not to be",
    "start": "2571480",
    "end": "2577119"
  },
  {
    "text": "underestimated and so I don't know depending on how long you are around in the frontend system there has been a project called yoman and the main",
    "start": "2577119",
    "end": "2584480"
  },
  {
    "text": "purpose there was to easily and quickly scaffold new projects and so it was extensible so you could create a human",
    "start": "2584480",
    "end": "2590680"
  },
  {
    "text": "generator for react for angular uh depending on what view whatever Frameworks you're using and it would",
    "start": "2590680",
    "end": "2596559"
  },
  {
    "text": "help people get up to speed quickly without having to identify all the lower level details by themselves and so human",
    "start": "2596559",
    "end": "2603720"
  },
  {
    "text": "I don't I think it's still around I didn't see it being use as much but the concept out of it is code generation and",
    "start": "2603720",
    "end": "2610839"
  },
  {
    "text": "so code generation can create your project files it can help you configure your build test Lin tooling so you don't",
    "start": "2610839",
    "end": "2616440"
  },
  {
    "text": "have to worry about can do things like setting code owners for like making sure the right people review newly created",
    "start": "2616440",
    "end": "2622440"
  },
  {
    "text": "libraries within FR like a domain area it can also configure some of the the boundary rules that we identified before",
    "start": "2622440",
    "end": "2629599"
  },
  {
    "text": "because you code generation process could ask which is the domain this library is part of what type of Library",
    "start": "2629599",
    "end": "2635760"
  },
  {
    "text": "do you generate right it could even be baked into some of the generators that you could create specifically for your",
    "start": "2635760",
    "end": "2641319"
  },
  {
    "text": "moner and then with that if those are specialized generators you can also use them to enforce like your company and",
    "start": "2641319",
    "end": "2648119"
  },
  {
    "text": "organization coding style guide right so how do you write your react components where is lint file configured are there",
    "start": "2648119",
    "end": "2654599"
  },
  {
    "text": "company specific lint rules all this stuff could be set up automatically by such code generation and you can",
    "start": "2654599",
    "end": "2661000"
  },
  {
    "text": "obviously increment that also like depending on how advanced code generation is it could not just be for C",
    "start": "2661000",
    "end": "2666240"
  },
  {
    "text": "folding which is the most simple one but it could also be like in incrementally added over time and the bonus you get",
    "start": "2666240",
    "end": "2673200"
  },
  {
    "start": "2672000",
    "end": "2802000"
  },
  {
    "text": "out of it obviously is cons consistency right so all the projects are set up in a similar way but it could also go further right",
    "start": "2673200",
    "end": "2680400"
  },
  {
    "text": "so it could even be automatic upgrades uh for instance tools such as code mods I know storybook uses them for upgrading",
    "start": "2680400",
    "end": "2687319"
  },
  {
    "text": "their users and X is very known also the angery LI is known for using such and leveraging such such system for",
    "start": "2687319",
    "end": "2694359"
  },
  {
    "text": "upgrading their Tooling in a monave paper which is again something that needs to be taken care of because",
    "start": "2694359",
    "end": "2699599"
  },
  {
    "text": "otherwise it gets out of hand and gets difficult and obviously being at the larger scale now upgrading might be",
    "start": "2699599",
    "end": "2706079"
  },
  {
    "text": "difficult or might be more difficult and so if you again have some automation around it it helps you get the first 80%",
    "start": "2706079",
    "end": "2712319"
  },
  {
    "text": "then you can kind of keep pushing for the last parts that need to be done so wrapping up what I I want you to",
    "start": "2712319",
    "end": "2720400"
  },
  {
    "text": "take away from this talk is uh it's not just single mon repo per organization so if that's scares you away definitely",
    "start": "2720400",
    "end": "2727200"
  },
  {
    "text": "reconsider and have a look again breaking up into small units is key uh",
    "start": "2727200",
    "end": "2732280"
  },
  {
    "text": "as is also maintaining those domain boundaries speed again is an an like a",
    "start": "2732280",
    "end": "2738079"
  },
  {
    "text": "very important topic that needs to be addressed sooner or later as your mon Reaper grows um the modalization again",
    "start": "2738079",
    "end": "2743359"
  },
  {
    "text": "has an impact there and tooling support is inevitable right do you need some sort of more smarter intelligent tooling",
    "start": "2743359",
    "end": "2749200"
  },
  {
    "text": "around it and finally automation right leverage toolings that have code generation that have even maybe",
    "start": "2749200",
    "end": "2756480"
  },
  {
    "text": "automated uh upgrades in place because this is key for adoption and scaling in general and again you don't need to go",
    "start": "2756480",
    "end": "2763200"
  },
  {
    "text": "full in from the beginning so most of these tools or they should if they are good like be incrementally adoptable",
    "start": "2763200",
    "end": "2768640"
  },
  {
    "text": "over time uh and also research the available tooling there's a page that's called mon rep. tools which lists some",
    "start": "2768640",
    "end": "2775040"
  },
  {
    "text": "of them like especially in the monreo field going also into one of some of those features that are",
    "start": "2775040",
    "end": "2780680"
  },
  {
    "text": "relevant if you have more questions definitely get in touch with me best on Twitter directly or find some links and",
    "start": "2780680",
    "end": "2787599"
  },
  {
    "text": "and contact options on u.d thanks for",
    "start": "2787599",
    "end": "2792319"
  },
  {
    "text": "[Music]",
    "start": "2795210",
    "end": "2800659"
  },
  {
    "text": "watching",
    "start": "2801800",
    "end": "2804800"
  }
]