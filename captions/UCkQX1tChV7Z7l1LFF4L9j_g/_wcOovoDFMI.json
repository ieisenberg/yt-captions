[
  {
    "text": "[Music]",
    "start": "3320",
    "end": "8769"
  },
  {
    "text": "okay thank you for that intro Uh yeah so welcome Uh glad you made it all the way",
    "start": "13559",
    "end": "19840"
  },
  {
    "text": "far so I'll be fast so I don't keep you too long here Uh so yeah basically we're",
    "start": "19840",
    "end": "25359"
  },
  {
    "text": "going to talk about how we rebuild a prime video UI um for living room devices with Rust and Web Assembly and",
    "start": "25359",
    "end": "30800"
  },
  {
    "text": "the journey that got us there So I had an intro but I already",
    "start": "30800",
    "end": "35840"
  },
  {
    "text": "had an intro slice so I'm kind of like reintroduce myself I'm Alex I've been a principal engineer with Amazon for about",
    "start": "35840",
    "end": "40879"
  },
  {
    "text": "eight years Um we've been working with Rust for a while actually in our tech",
    "start": "40879",
    "end": "46160"
  },
  {
    "text": "stack for the clients We had our low-level UI engine in web assembly and rust for um that log Previously I worked",
    "start": "46160",
    "end": "53920"
  },
  {
    "text": "on video games game engines interactive applications like that So have quite a",
    "start": "53920",
    "end": "59280"
  },
  {
    "text": "bit of experience in interactive applications Uh so there is a bit of",
    "start": "59280",
    "end": "65280"
  },
  {
    "text": "table of contents of what we're going to see here on this talk So I'll talk about challenge in in this space because",
    "start": "65280",
    "end": "71920"
  },
  {
    "text": "living room devices are things like setup boxes gaming consoles streaming",
    "start": "71920",
    "end": "76960"
  },
  {
    "text": "sticks TVs So people don't usually develop UIs for these devices and they",
    "start": "76960",
    "end": "82880"
  },
  {
    "text": "come with their own special set of challenges So we're going to go through those Then I'll show you how our",
    "start": "82880",
    "end": "88799"
  },
  {
    "text": "architecture for the prime video app looked before we rewrote everything in Rust So we had a dual text stack with um",
    "start": "88799",
    "end": "97360"
  },
  {
    "text": "the business code in React and JavaScript and then low-level bits of the engine in Rust and Web Assembly Bit",
    "start": "97360",
    "end": "104000"
  },
  {
    "text": "of C++ in there as well And then I'll show you some code with our new Rust UI SDK and how that looks which is what we",
    "start": "104000",
    "end": "111600"
  },
  {
    "text": "use right now in production Uh we're going to talk a little bit of how that code works with our low-level existing",
    "start": "111600",
    "end": "119040"
  },
  {
    "text": "engine Um and how all everything is organized And at the end we're going to",
    "start": "119040",
    "end": "124880"
  },
  {
    "text": "go a little bit to results lessons learned and we can have some Q&A after",
    "start": "124880",
    "end": "131520"
  },
  {
    "text": "So quite a bit of content So you know buckle up living room devices So as I",
    "start": "131520",
    "end": "137440"
  },
  {
    "text": "said these are gaming consoles streamy sticks setup boxes They come with their own challenges and some of them are",
    "start": "137440",
    "end": "144360"
  },
  {
    "text": "obvious Uh there's performance differences that are huge right we're talking about a PlayStation 5 Pro super",
    "start": "144360",
    "end": "152080"
  },
  {
    "text": "nice gaming console lots of power but also a USB power streaming stick And",
    "start": "152080",
    "end": "158080"
  },
  {
    "text": "Prime Video we run the same application on all of these device types So obviously performance is really",
    "start": "158080",
    "end": "164480"
  },
  {
    "text": "important for us We can't quite have teams per device type So one team that",
    "start": "164480",
    "end": "169519"
  },
  {
    "text": "does setup boxes then another team does gaming consoles because then everything explodes and when you build a feature",
    "start": "169519",
    "end": "174640"
  },
  {
    "text": "you have to build it for everything So we were building things once and then deploying on all of these device",
    "start": "174640",
    "end": "180239"
  },
  {
    "text": "categories here We don't deploy this application that I'm talking about on mobile devices and",
    "start": "180239",
    "end": "187080"
  },
  {
    "text": "um uh like iPhone iOS mobile devices don't have this So this is just living",
    "start": "187080",
    "end": "192720"
  },
  {
    "text": "room devices right but again huge range of performance So we're trying to write our code as optim optimal as possible",
    "start": "192720",
    "end": "200760"
  },
  {
    "text": "Usually high performance code is code that you compile natively So let's say Rust compile to native C++ compile to",
    "start": "200760",
    "end": "207599"
  },
  {
    "text": "native But that does quite cut it in this space and we'll see why Another pain point and challenge is hardware",
    "start": "207599",
    "end": "215040"
  },
  {
    "text": "capabilities between these devices is a pain So as an SDK developers we need to",
    "start": "215040",
    "end": "221159"
  },
  {
    "text": "think a lot about what are reasonable fallbacks that applications developer",
    "start": "221159",
    "end": "226560"
  },
  {
    "text": "who write the app code and the app behavior they don't need to think about",
    "start": "226560",
    "end": "231760"
  },
  {
    "text": "when they write that code and every on every little hardware difference we try to have uh some reasonable defaults",
    "start": "231760",
    "end": "238879"
  },
  {
    "text": "that's not always possible so we kind of use patterns like feature flags and things like that to let them have a bit",
    "start": "238879",
    "end": "244480"
  },
  {
    "text": "more control but it's it's fairly challenging thing Um another thing is",
    "start": "244480",
    "end": "249760"
  },
  {
    "text": "we're trying to make this application as fast as possible with as many features as possible to every customer Uh but",
    "start": "249760",
    "end": "256479"
  },
  {
    "text": "then updating native code on these device types is really really",
    "start": "256479",
    "end": "262040"
  },
  {
    "text": "hard Part of that is they these devices don't even have",
    "start": "262040",
    "end": "267720"
  },
  {
    "text": "um app stores most of them So maybe it goes up with a firmware update So that's",
    "start": "267720",
    "end": "273840"
  },
  {
    "text": "a pain It requires a manual process Interacting with a third party that owns the platform even on places that do have",
    "start": "273840",
    "end": "281120"
  },
  {
    "text": "an app store If you try to update on an app on an app store is quite a challenge",
    "start": "281120",
    "end": "286560"
  },
  {
    "text": "as well You need to wait It's highly likely a manual process So we're have",
    "start": "286560",
    "end": "292080"
  },
  {
    "text": "the we're having this tension between code that will downloading over the air like JavaScript web assembly and so on",
    "start": "292080",
    "end": "298800"
  },
  {
    "text": "fairly easy and then um code that works on a device that is very fast but then really hard to update and we want to",
    "start": "298800",
    "end": "305440"
  },
  {
    "text": "have this fast iteration cycle So updating the app in a short amount of time is is is huge for us Um again this",
    "start": "305440",
    "end": "314639"
  },
  {
    "text": "is like how the application looks like today I've been there eight years and we",
    "start": "314639",
    "end": "319840"
  },
  {
    "text": "changed it many times I'm sure it's going to change again in sometime as it",
    "start": "319840",
    "end": "325199"
  },
  {
    "text": "happens with EUIS Uh and we've added things to it like channels live events",
    "start": "325199",
    "end": "331759"
  },
  {
    "text": "uh all sorts of new features that weren't there in the starting version And part of us being able to do that was",
    "start": "331759",
    "end": "339919"
  },
  {
    "text": "this kind of focus on updatability that we had all the way in the beginning So",
    "start": "339919",
    "end": "344960"
  },
  {
    "text": "most of this application was in a language like JavaScript that we can change basically everything on it and",
    "start": "344960",
    "end": "350960"
  },
  {
    "text": "add all of these features without any need or almost without a need to go and",
    "start": "350960",
    "end": "356240"
  },
  {
    "text": "touch the low-level native code Uh and I'll show you the architecture and how it looks like But today if a developer",
    "start": "356240",
    "end": "363199"
  },
  {
    "text": "adds some code ch changes a feature fixes a bug does anything around that",
    "start": "363199",
    "end": "369120"
  },
  {
    "text": "the UI um that code goes through a fully CI/CD pipeline no manual testing",
    "start": "369120",
    "end": "374919"
  },
  {
    "text": "whatsoever We test on virtual devices like Linux and on physical devices where",
    "start": "374919",
    "end": "380960"
  },
  {
    "text": "we have a device farm Once all of those tests pass we you get this new",
    "start": "380960",
    "end": "386720"
  },
  {
    "text": "experience on your TV in your living room let's say So that is way way faster",
    "start": "386720",
    "end": "393120"
  },
  {
    "text": "than a native app update for that platform Um",
    "start": "393120",
    "end": "399039"
  },
  {
    "text": "uh right now you'll see it working and you'll see a couple of features This is a bunch of test profiles I was making",
    "start": "399039",
    "end": "405039"
  },
  {
    "text": "cuz I was testing stuff But um we have stuff like layout animations So the whole layout gets recalculated This is",
    "start": "405039",
    "end": "411680"
  },
  {
    "text": "the Rust app in production today Um so layout animations are a thing that was",
    "start": "411680",
    "end": "417120"
  },
  {
    "text": "previously impossible with JavaScript and React and now they just work So when you see this thing getting bigger all",
    "start": "417120",
    "end": "423120"
  },
  {
    "text": "the things get reordered on the page These are things that are just have possible right now due to the",
    "start": "423120",
    "end": "429280"
  },
  {
    "text": "performance of Rust almost instant page transitions as well um are things that weren't um possible with TypeScript and",
    "start": "429280",
    "end": "437280"
  },
  {
    "text": "React due to performance constraints So this is live today and this is kind of",
    "start": "437280",
    "end": "442400"
  },
  {
    "text": "how it looks like So you have an idea um on on what what is going on in there",
    "start": "442400",
    "end": "449440"
  },
  {
    "text": "And we're going to get a little bit back to layout animations and and those things later But uh for people who are",
    "start": "449440",
    "end": "455440"
  },
  {
    "text": "not UI engineers and don't quite know this is the slide that will teach you everything you need to know about UI",
    "start": "455440",
    "end": "461520"
  },
  {
    "text": "programming So basically every UI ever is a tree of",
    "start": "461520",
    "end": "467720"
  },
  {
    "text": "nodes and the job of a UI SDK is to manipulate as fast as possible this tree",
    "start": "467720",
    "end": "474800"
  },
  {
    "text": "as a reaction to user inputs or some things that happen like some events So",
    "start": "474800",
    "end": "481360"
  },
  {
    "text": "you either change properties on nodes like um maybe you animate a value like a position uh and then the UI engine needs",
    "start": "481360",
    "end": "488960"
  },
  {
    "text": "to take care of updating this tree and creating new nodes deleting new nodes depending on what the business um logic",
    "start": "488960",
    "end": "498000"
  },
  {
    "text": "code tells you to do Uh so those nodes could be let's say view nodes that are",
    "start": "498000",
    "end": "503560"
  },
  {
    "text": "maybe just a rectangle and then text nodes are quite common and image nodes",
    "start": "503560",
    "end": "508879"
  },
  {
    "text": "those type of things Um nothing too complicated It's really annoying that it's a tree but anyway we're going to",
    "start": "508879",
    "end": "517039"
  },
  {
    "text": "move on because we we're still having a tree even in our RA app We didn't innovate there but it's just important",
    "start": "517039",
    "end": "522719"
  },
  {
    "text": "to have this kind of mental model We call this in our um UI engine a scene",
    "start": "522719",
    "end": "527760"
  },
  {
    "text": "tree in browsers call it a dome but it's basically the same thing in every everywhere Now this is the high level",
    "start": "527760",
    "end": "534640"
  },
  {
    "text": "architecture before we rewrote everything in Rust uh and as you can see",
    "start": "534640",
    "end": "540240"
  },
  {
    "text": "we've already added some time ago I think two years three years ago maybe",
    "start": "540240",
    "end": "545600"
  },
  {
    "text": "rust in our there's a a coupon talk about this journey but we already had it",
    "start": "545600",
    "end": "550720"
  },
  {
    "text": "there for the um low-level UI engine and there's another part which is saying",
    "start": "550720",
    "end": "556399"
  },
  {
    "text": "JavaScript here but actually developers write TypeScript uh that has the business logic code for the prime video",
    "start": "556399",
    "end": "562800"
  },
  {
    "text": "app and um this is the stuff we download right so this is downloaded every time",
    "start": "562800",
    "end": "568959"
  },
  {
    "text": "the application changes This is what we output at the end of that full CI/CD pipeline It's a bundle that has some web",
    "start": "568959",
    "end": "575519"
  },
  {
    "text": "assembly compiled Ras code and some JavaScript that came from TypeScript and got transpiled to JavaScript Um and this",
    "start": "575519",
    "end": "583200"
  },
  {
    "text": "is getting upload It maybe changes once per day sometimes even more sometimes less depending on our pipelines and if",
    "start": "583200",
    "end": "589680"
  },
  {
    "text": "the tests pass or not but it's updated very very frequently on all",
    "start": "589680",
    "end": "596560"
  },
  {
    "text": "of the devices that I spoke about the device categories And then we have the stuff on device in our architecture",
    "start": "596560",
    "end": "603600"
  },
  {
    "text": "which is uh we're trying to keep it as thin as possible because it's really hard to update So the less we touch this",
    "start": "603600",
    "end": "610720"
  },
  {
    "text": "code the better It has a couple of virtual machines some rendering back end which mainly connects um the higher",
    "start": "610720",
    "end": "618079"
  },
  {
    "text": "level stuff we download to things like OpenGL and other graphics APIs networking this is basically curve some",
    "start": "618079",
    "end": "625680"
  },
  {
    "text": "media APIs and storage and a bunch of other things but they're in C++ we",
    "start": "625680",
    "end": "631200"
  },
  {
    "text": "deploy them on a device and they sit there almost untouched um after unless",
    "start": "631200",
    "end": "636320"
  },
  {
    "text": "there's some critical bug that needs to be fixed or some more tricky",
    "start": "636320",
    "end": "642279"
  },
  {
    "text": "thing And um this is how things work today You might wonder though these are",
    "start": "642279",
    "end": "648240"
  },
  {
    "text": "two separate virtual machines So how do how do they actually work together and we're going to go through an example of",
    "start": "648240",
    "end": "654399"
  },
  {
    "text": "how things worked before with this tech stack So the prime video app here takes high level decisions like",
    "start": "654399",
    "end": "661519"
  },
  {
    "text": "what to show the user maybe some carousels maybe arrange some things on the screen Let's say in this example it",
    "start": "661519",
    "end": "667120"
  },
  {
    "text": "wants to show some image with the um on on your TV right so the private video",
    "start": "667120",
    "end": "674240"
  },
  {
    "text": "app is built with React We call it React living room because it's a version of",
    "start": "674240",
    "end": "679920"
  },
  {
    "text": "React that we've kind of changed and made it usable for living room devices",
    "start": "679920",
    "end": "685360"
  },
  {
    "text": "by uh pairing them some features uh simplifying them and also writing um a",
    "start": "685360",
    "end": "693160"
  },
  {
    "text": "few reconcilers because we have this application that works on this type of architecture but also in browsers",
    "start": "693160",
    "end": "699839"
  },
  {
    "text": "because some living room devices today have just an HTML 5 browser and can't put don't even have flash",
    "start": "699839",
    "end": "706360"
  },
  {
    "text": "space big enough to put our native C++ engine So that we needed that device",
    "start": "706360",
    "end": "712000"
  },
  {
    "text": "abstraction layer right so prime video app says okay I want to put an image node It uses react living room to do the",
    "start": "712000",
    "end": "719279"
  },
  {
    "text": "um as a UI SDK through the device abstraction layer we figure out oh wait you have a web assembly VM available So",
    "start": "719279",
    "end": "726880"
  },
  {
    "text": "at that point in time instead of doing the actual work it it just encodes a message and",
    "start": "726880",
    "end": "732880"
  },
  {
    "text": "puts it on a message bus So it says something like this is literally a command which says create me an image",
    "start": "732880",
    "end": "739279"
  },
  {
    "text": "load with an ID with a URL where we download the image from some properties",
    "start": "739279",
    "end": "744320"
  },
  {
    "text": "width height and position and the parent ID to put it in that scene tree Right",
    "start": "744320",
    "end": "750000"
  },
  {
    "text": "the web assembly VM has the engine and this engine has low-level things that actually manage that scene tree that we",
    "start": "750000",
    "end": "756639"
  },
  {
    "text": "talked about So for example the CNN resource manager will figure out oh",
    "start": "756639",
    "end": "762320"
  },
  {
    "text": "there's a new message I have to create a node put it in the tree It's an image node So it checks if that image is",
    "start": "762320",
    "end": "768880"
  },
  {
    "text": "available or not It issues a download request Maybe it animates some properties if necessary Uh and once the",
    "start": "768880",
    "end": "776240"
  },
  {
    "text": "image is downloaded it gets decoded uploaded to the GPU memory And after that the high level renderer here uh",
    "start": "776240",
    "end": "783600"
  },
  {
    "text": "from the scene tree that could be quite big it figures out what subset of nodes",
    "start": "783600",
    "end": "789440"
  },
  {
    "text": "is visible on the screen and then issues commands the C++ layer that's with gray",
    "start": "789440",
    "end": "797440"
  },
  {
    "text": "to draw pixels on the screen and at the end of it all you'll have one um the",
    "start": "797440",
    "end": "802720"
  },
  {
    "text": "marvelous maze image in there as it should be So this is how it used to work",
    "start": "802720",
    "end": "808639"
  },
  {
    "text": "and when we added Rust here we had huge gains in animation fluidity and these",
    "start": "808639",
    "end": "814240"
  },
  {
    "text": "type of things However things like input latency didn't quite improve So the the input latency is basically the the time",
    "start": "814240",
    "end": "822480"
  },
  {
    "text": "it takes from when you press a button on your remote control um in our case um",
    "start": "822480",
    "end": "827839"
  },
  {
    "text": "until the application responds to your input That's what we call input latency",
    "start": "827839",
    "end": "832880"
  },
  {
    "text": "that didn't improve much or at all because basically all of those decisions",
    "start": "832880",
    "end": "840000"
  },
  {
    "text": "and all that business logic like what happens as a response to an input event to the scene tree is in JavaScript So",
    "start": "840000",
    "end": "847600"
  },
  {
    "text": "that's a fairly slow language Um especially since some of this hardware can be",
    "start": "847600",
    "end": "852680"
  },
  {
    "text": "as maybe dual core devices with not even one GHz um worth of um CPU speed and not",
    "start": "852680",
    "end": "861680"
  },
  {
    "text": "much memory Actually those are medium We have some that are even slower So running JavaScript of those is is time",
    "start": "861680",
    "end": "868399"
  },
  {
    "text": "consuming Uh so we wanted to improve this input latency and um in the end we",
    "start": "868399",
    "end": "874959"
  },
  {
    "text": "did but we ended up with this architecture So the engine is more or",
    "start": "874959",
    "end": "880000"
  },
  {
    "text": "less the same except we added certain systems that are specific to this application For example focus management",
    "start": "880000",
    "end": "887199"
  },
  {
    "text": "layout engine is now in part of the engine And I didn't put it on this slide because it goes into that scene",
    "start": "887199",
    "end": "893160"
  },
  {
    "text": "management And on top of it we built a new Rust UI SDK",
    "start": "893160",
    "end": "898560"
  },
  {
    "text": "uh that we then use to build the application So everything is now in Rust",
    "start": "898560",
    "end": "904320"
  },
  {
    "text": "It's one single language You don't even have the message bus to worry about That wasn't even that slow anyway It was",
    "start": "904320",
    "end": "911360"
  },
  {
    "text": "almost instantaneous The problem was JavaScript So we don't have that anymore We're actually not quite here because we",
    "start": "911360",
    "end": "917120"
  },
  {
    "text": "are deploying this uh iteratively page by page because we wanted to get this out faster in front of customers but we",
    "start": "917120",
    "end": "924000"
  },
  {
    "text": "will get here early next year Um so um",
    "start": "924000",
    "end": "929399"
  },
  {
    "text": "now this is going to be a bit intense but uh here's some UI code with Rust And",
    "start": "929399",
    "end": "936880"
  },
  {
    "text": "this is actually working UI code that our UI SDK supports And I'm going to",
    "start": "936880",
    "end": "942240"
  },
  {
    "text": "walk you through it because there's a few concepts here that I think are important Uh when it comes to UI",
    "start": "942240",
    "end": "948440"
  },
  {
    "text": "programming Rust isn't known for having lots of libraries and then the ecosystem",
    "start": "948440",
    "end": "954000"
  },
  {
    "text": "is not quite there we had to build our own We use some ideas from Leptos like the signals that I'm going to talk about",
    "start": "954000",
    "end": "960720"
  },
  {
    "text": "But um this is how things look like today And if you're familiar with React and SolidJS and those things you'll see",
    "start": "960720",
    "end": "967680"
  },
  {
    "text": "some some familiar things here Um so first you might notice or if you",
    "start": "967680",
    "end": "974800"
  },
  {
    "text": "don't notice I'm going to tell you about it is that composer macro over there Um that is get gets attached to this",
    "start": "974800",
    "end": "981279"
  },
  {
    "text": "function here that um returns a composable So a composible is a reusable",
    "start": "981279",
    "end": "986880"
  },
  {
    "text": "piece of um tree of hierarchy of nodes that we",
    "start": "986880",
    "end": "992000"
  },
  {
    "text": "can plug in with other reusable bits and compose them basically um together So",
    "start": "992000",
    "end": "998240"
  },
  {
    "text": "this is our way of reusing UI Um this composer macro actually doesn't do that",
    "start": "998240",
    "end": "1003440"
  },
  {
    "text": "much except generate boilerplate code that gives us some nicer functionality",
    "start": "1003440",
    "end": "1008800"
  },
  {
    "text": "in that compose macro you see later down in the function uh and it allows us to",
    "start": "1008800",
    "end": "1014320"
  },
  {
    "text": "have named arguments um as well as nicer error messages and optional arguments",
    "start": "1014320",
    "end": "1020880"
  },
  {
    "text": "that might miss for functions So this is some quality of life thing So then our developers don't need to specify every",
    "start": "1020880",
    "end": "1026880"
  },
  {
    "text": "argument to these functions like this hello function here that just takes a name as a string This case the name is",
    "start": "1026880",
    "end": "1033120"
  },
  {
    "text": "mandatory but we can have optional arguments with optional values that you",
    "start": "1033120",
    "end": "1038480"
  },
  {
    "text": "don't need to specify Also you can specify arguments in any order as long as you name them and we will see that",
    "start": "1038480",
    "end": "1044798"
  },
  {
    "text": "below It's just super nice quality of life thing I wish R supported this out of the box for functions to be honest",
    "start": "1044799",
    "end": "1050640"
  },
  {
    "text": "but it doesn't So this is where we are Um then this is kind of the core",
    "start": "1050640",
    "end": "1056559"
  },
  {
    "text": "principle of our UI SDK Um it uses signals and effects and the signal is a",
    "start": "1056559",
    "end": "1063120"
  },
  {
    "text": "special kind of a value So this name here will shadow the string above but basically this name",
    "start": "1063120",
    "end": "1069200"
  },
  {
    "text": "is a signal and that means when it changes it will trigger effects that use",
    "start": "1069200",
    "end": "1074760"
  },
  {
    "text": "it So for example when this name changes it will execute the function in this",
    "start": "1074760",
    "end": "1079840"
  },
  {
    "text": "memo which is a special sort of signal and it creates a new hello message with",
    "start": "1079840",
    "end": "1084960"
  },
  {
    "text": "the new value that name has been set to So it executes the function you see here",
    "start": "1084960",
    "end": "1090720"
  },
  {
    "text": "It formats it It concatenates and it will give something like hello Billy or whatever And then hello message is a",
    "start": "1090720",
    "end": "1098480"
  },
  {
    "text": "special kind of signal that also will trigger effects So here you see in this function we use the hello message So",
    "start": "1098480",
    "end": "1105679"
  },
  {
    "text": "whenever the hello message is updated it will trigger this effect that we called here with create effect And this is very",
    "start": "1105679",
    "end": "1111440"
  },
  {
    "text": "very similar to how solid JS or if you're familiar with React works And",
    "start": "1111440",
    "end": "1116559"
  },
  {
    "text": "actually this is quite important because this is also what helps UI engineers be productive in in this um framework",
    "start": "1116559",
    "end": "1124320"
  },
  {
    "text": "without knowing much Rust actually So the core of our UI engine is signals",
    "start": "1124320",
    "end": "1130080"
  },
  {
    "text": "effects and memos which are special kind of signals that only trigger effects if the values that they got updated to are",
    "start": "1130080",
    "end": "1137280"
  },
  {
    "text": "different from the previous value by default they just trigger the effect anyway And then we have this other macro",
    "start": "1137280",
    "end": "1143360"
  },
  {
    "text": "here which is the compose macro and this does the heavy lifting of this is where",
    "start": "1143360",
    "end": "1148799"
  },
  {
    "text": "you define how your UI hierarchy looks like So here we have a row that then has",
    "start": "1148799",
    "end": "1155360"
  },
  {
    "text": "children which are label nodes And you see here the label has a text that is",
    "start": "1155360",
    "end": "1161039"
  },
  {
    "text": "either a hardcoded value with three exclamation marks as a string or it can",
    "start": "1161039",
    "end": "1167120"
  },
  {
    "text": "take a um it it can take a signal that wraps a",
    "start": "1167120",
    "end": "1172400"
  },
  {
    "text": "string So the first label here will be updated whenever hello message gets",
    "start": "1172400",
    "end": "1177440"
  },
  {
    "text": "updated without the UI engineer doing anything It just happens automatically that hello message gets updated Um the",
    "start": "1177440",
    "end": "1185360"
  },
  {
    "text": "label itself will render the new um new text and it just works So for for if",
    "start": "1185360",
    "end": "1191840"
  },
  {
    "text": "you're a UI engineer this is kind of the code you write Um and it's it's fairly easy to to understand once you get the",
    "start": "1191840",
    "end": "1198480"
  },
  {
    "text": "idea Here we have some examples For example channel card and movie card are just some other functions that allow you",
    "start": "1198480",
    "end": "1205120"
  },
  {
    "text": "to pass parameters like a name uh a main texture and maybe a title main texture",
    "start": "1205120",
    "end": "1210480"
  },
  {
    "text": "and so on Um again they could have um optional parameters that you don't",
    "start": "1210480",
    "end": "1216559"
  },
  {
    "text": "see here Uh you can you can even put signals instead of those hardcoded values It doesn't quite matter It's just",
    "start": "1216559",
    "end": "1223520"
  },
  {
    "text": "these would be siblings of those two labels And all the way down we have button uh with a text that's click And",
    "start": "1223520",
    "end": "1231520"
  },
  {
    "text": "then it has a few callbacks on select on on click and stuff like that that are",
    "start": "1231520",
    "end": "1237600"
  },
  {
    "text": "functions that get triggered whenever those events happen in the UI engine So for example whenever we select this",
    "start": "1237600",
    "end": "1244159"
  },
  {
    "text": "button we set a signal that new that name gets set to a new name and this",
    "start": "1244159",
    "end": "1250080"
  },
  {
    "text": "triggers a cascade of actions Hello message gets updated to hello new name",
    "start": "1250080",
    "end": "1255520"
  },
  {
    "text": "and then the effects gets triggered because that's a new value So that thing will be printed and then lastly the",
    "start": "1255520",
    "end": "1262000"
  },
  {
    "text": "label the first label you see here um will get updated to a new value And",
    "start": "1262000",
    "end": "1268480"
  },
  {
    "text": "lastly this row has um we call them um properties or modifier So we can modify",
    "start": "1268480",
    "end": "1275679"
  },
  {
    "text": "the background color In this case is just set to a hardcoded value of blue However we support signals as being to",
    "start": "1275679",
    "end": "1284080"
  },
  {
    "text": "be passed here as well So if you have a color that's a signal of a color whenever that gets set maybe on a timer",
    "start": "1284080",
    "end": "1292080"
  },
  {
    "text": "or whatever the color of the node just gets updated and you pass it here like a",
    "start": "1292080",
    "end": "1297200"
  },
  {
    "text": "exactly like we said this parameter Um so that's another powerful way in where",
    "start": "1297200",
    "end": "1303360"
  },
  {
    "text": "we get behavior as or effects as as um a consequence of business logic that",
    "start": "1303360",
    "end": "1309440"
  },
  {
    "text": "happens in the UI um code and this is what your engineers",
    "start": "1309440",
    "end": "1315039"
  },
  {
    "text": "deal with and um it's quite high level and it's very",
    "start": "1315039",
    "end": "1320320"
  },
  {
    "text": "similar to other um UI engines but it's in Rust this time So um when we run that",
    "start": "1320320",
    "end": "1327120"
  },
  {
    "text": "compose macro this is kind of how the UI interf the UI hierarchy will look like in the scene tree So you have the row",
    "start": "1327120",
    "end": "1333600"
  },
  {
    "text": "and then it has a label and then labels are special because they're widgets So",
    "start": "1333600",
    "end": "1338919"
  },
  {
    "text": "composables can be built out of widgets which are special composables our UI SDK",
    "start": "1338919",
    "end": "1344080"
  },
  {
    "text": "provides to the engineers or other composables that eventually are built",
    "start": "1344080",
    "end": "1349840"
  },
  {
    "text": "out of widgets Widgets are then built out of a series of components And this is fairly important",
    "start": "1349840",
    "end": "1356400"
  },
  {
    "text": "because we use entity component systems under the hood So components for now you can think of them as structures without",
    "start": "1356400",
    "end": "1363760"
  },
  {
    "text": "behavior So just data without any sort of behavior The behavior comes from systems that operate on these components",
    "start": "1363760",
    "end": "1371039"
  },
  {
    "text": "So in this case this label has a layout component that helps the layout system a base component Let's say maybe it has",
    "start": "1371039",
    "end": "1378000"
  },
  {
    "text": "like a position a rotation things like that Uh render info components This is",
    "start": "1378000",
    "end": "1383120"
  },
  {
    "text": "all the data you need to put the pixels on the screen for this widget once everything gets computed Text component",
    "start": "1383120",
    "end": "1390480"
  },
  {
    "text": "This does text layout and things like that And maybe a text cache component that is used to cache the text in the",
    "start": "1390480",
    "end": "1396720"
  },
  {
    "text": "texture so we don't render it draw it letter by letter Important bit is that",
    "start": "1396720",
    "end": "1403320"
  },
  {
    "text": "widgets are special because they come as predefined composables from our UI SDK",
    "start": "1403320",
    "end": "1410080"
  },
  {
    "text": "But then again composables can be built out of other composable So this row has",
    "start": "1410080",
    "end": "1415440"
  },
  {
    "text": "a few children here But eventually it has to have widgets as their lift nodes",
    "start": "1415440",
    "end": "1420480"
  },
  {
    "text": "because those are the thing that actually have um the the base behavior",
    "start": "1420480",
    "end": "1426080"
  },
  {
    "text": "Right so here maybe you have a button and another image and the button has",
    "start": "1426080",
    "end": "1431280"
  },
  {
    "text": "let's say all the way down a focus component So this allows us to focus the button and it gets automatically used by",
    "start": "1431280",
    "end": "1438480"
  },
  {
    "text": "the system The image component can just stores a URL and maybe the status has",
    "start": "1438480",
    "end": "1443919"
  },
  {
    "text": "this been download uploaded to GPU and so on Uh so it's it's fairly uh simple",
    "start": "1443919",
    "end": "1450799"
  },
  {
    "text": "but basically we use this to this kind of architecture in our low-level engine",
    "start": "1450799",
    "end": "1456000"
  },
  {
    "text": "is used to kind of manage uh complexity and behavior and we'll see a bit later how it works and then we had another",
    "start": "1456000",
    "end": "1462720"
  },
  {
    "text": "movie card in that example and again it would eventually have to be built out of widgets All right so widgets are the",
    "start": "1462720",
    "end": "1470640"
  },
  {
    "text": "things that our UI SDK provides to UI developers out of the box So they can be",
    "start": "1470640",
    "end": "1475760"
  },
  {
    "text": "row columns image labels stack reach text which is a special kind of text nodes that allows you to have images",
    "start": "1475760",
    "end": "1483120"
  },
  {
    "text": "embedded and things like that Uh stacks uh row lists and column lists and these",
    "start": "1483120",
    "end": "1488720"
  },
  {
    "text": "are scrollable either horizontally or vertically And I think we added grid recently because we needed it for",
    "start": "1488720",
    "end": "1495279"
  },
  {
    "text": "something But basically we build this as we build the app So this is what we support now Uh and um I think button is",
    "start": "1495279",
    "end": "1503440"
  },
  {
    "text": "another one of them um that's just supported here out of the box that I somehow didn't put Uh and then each",
    "start": "1503440",
    "end": "1510159"
  },
  {
    "text": "widget is an entity ID So it has an ID and a collection of components and then",
    "start": "1510159",
    "end": "1515520"
  },
  {
    "text": "the lower level engine um uses systems to modify and update the components So",
    "start": "1515520",
    "end": "1521919"
  },
  {
    "text": "ECS is this kind of entity component system is a way to organize your code",
    "start": "1521919",
    "end": "1528400"
  },
  {
    "text": "and manage complexity without paying that much in terms of um performance",
    "start": "1528400",
    "end": "1535360"
  },
  {
    "text": "It's been used by game engines um not a lot but for example Overwatch used it",
    "start": "1535360",
    "end": "1541279"
  },
  {
    "text": "Thief I think was the first game in 1998 that used it as piece of trivia But it's",
    "start": "1541279",
    "end": "1546799"
  },
  {
    "text": "a very simple idea which is you have entity ids You have entities and these are just",
    "start": "1546799",
    "end": "1553039"
  },
  {
    "text": "ids that map to components You have components that are data without behavior And then you have systems which",
    "start": "1553039",
    "end": "1560080"
  },
  {
    "text": "are basically functions that act on tpples of components So it always acts",
    "start": "1560080",
    "end": "1566000"
  },
  {
    "text": "in on more things on things at a time not on one thing at a time So it's a bit",
    "start": "1566000",
    "end": "1571600"
  },
  {
    "text": "different than the other paradigms but it's really good to um create behavior",
    "start": "1571600",
    "end": "1579760"
  },
  {
    "text": "because if you want a certain behavior for an entity you just add the component and then the systems that need that",
    "start": "1579760",
    "end": "1586080"
  },
  {
    "text": "component automatically will just work because the component is there So here",
    "start": "1586080",
    "end": "1591279"
  },
  {
    "text": "is how it might work in a game loop So for example we these um systems are on",
    "start": "1591279",
    "end": "1596880"
  },
  {
    "text": "the left side and then components are on the right side When I say components you can basically imagine those as arrays",
    "start": "1596880",
    "end": "1604240"
  },
  {
    "text": "and entity ids and as indices in those arrays It's a bit more complicated than that but that's basically it And then",
    "start": "1604240",
    "end": "1611360"
  },
  {
    "text": "the things on the left side with the yellow thing those are systems and they're basically functions that operate",
    "start": "1611360",
    "end": "1618000"
  },
  {
    "text": "on those arrays at the same time So let's say the resource management system",
    "start": "1618000",
    "end": "1623039"
  },
  {
    "text": "needs to touch base components image components and read from them with this reading is with the white arrow and it",
    "start": "1623039",
    "end": "1630400"
  },
  {
    "text": "will write to render info components For example it will look",
    "start": "1630400",
    "end": "1635679"
  },
  {
    "text": "where the image is if it's close to the screen looked at the base component Uh",
    "start": "1635679",
    "end": "1641200"
  },
  {
    "text": "it looks at the image component that contains the URL It checks the image status that will be there Is it",
    "start": "1641200",
    "end": "1646640"
  },
  {
    "text": "downloaded has it been downloaded to the GPU it if it has been decoded and",
    "start": "1646640",
    "end": "1651919"
  },
  {
    "text": "uploaded to the GPU we update the render info components so we can draw the thing later on the",
    "start": "1651919",
    "end": "1657480"
  },
  {
    "text": "screen For this system you need to have all three components on an entity at",
    "start": "1657480",
    "end": "1663120"
  },
  {
    "text": "least You can have more but we just ignore them We don't care So this system just looks at that slice of an object",
    "start": "1663120",
    "end": "1670080"
  },
  {
    "text": "which is the base components the image components and render info components And you have to have all three of them",
    "start": "1670080",
    "end": "1675440"
  },
  {
    "text": "If you have only two without the third one that entity just isn't touched by this system and it does nothing the",
    "start": "1675440",
    "end": "1683679"
  },
  {
    "text": "system with it right and then we have the layout system Of course this looks",
    "start": "1683679",
    "end": "1688960"
  },
  {
    "text": "as a bunch of components and updates one at the end It's quite complicated but uh",
    "start": "1688960",
    "end": "1695039"
  },
  {
    "text": "layout is complicated anyway So at least that complication and that complexity",
    "start": "1695039",
    "end": "1700559"
  },
  {
    "text": "sits in within a file or a function and we can tell from the signature that oh",
    "start": "1700559",
    "end": "1705600"
  },
  {
    "text": "my god this reads from a million things writes to one but it is what it is You can't quite build layout systems without",
    "start": "1705600",
    "end": "1712080"
  },
  {
    "text": "touching all of those things Um maybe we have a text cache component that looks at text components and writes to a bunch",
    "start": "1712080",
    "end": "1718480"
  },
  {
    "text": "of other things Again you need to have all three of these for an entity such that is updated for by this system And",
    "start": "1718480",
    "end": "1726559"
  },
  {
    "text": "all the way at the end we have the rendering system that looks at render info components reads from them It",
    "start": "1726559",
    "end": "1733120"
  },
  {
    "text": "doesn't write anywhere because it doesn't need to update any component It will just call the functions in the C++",
    "start": "1733120",
    "end": "1740080"
  },
  {
    "text": "code uh in the renderer back end to put things on the screen So it just reads through this and then up updates your",
    "start": "1740080",
    "end": "1746880"
  },
  {
    "text": "screen with new pixels So this is kind of it looks it sounds complicated but",
    "start": "1746880",
    "end": "1752320"
  },
  {
    "text": "it's very simple way to organize behavior and this has paid dividends organizing our low-level architecture",
    "start": "1752320",
    "end": "1758480"
  },
  {
    "text": "like this u for reasons that we'll see a little bit later how and why not only",
    "start": "1758480",
    "end": "1764320"
  },
  {
    "text": "for the new application but also the old application because they use the same low-level engine Uh right So again going",
    "start": "1764320",
    "end": "1771840"
  },
  {
    "text": "back to the architecture this is what we have prime video app at the top We've seen how developers write the UI with",
    "start": "1771840",
    "end": "1780279"
  },
  {
    "text": "composables using our UI SDK Then we've seen how the UI SDK uses widgets that",
    "start": "1780279",
    "end": "1786399"
  },
  {
    "text": "then get get updated by the systems and have components that are defined in the",
    "start": "1786399",
    "end": "1791760"
  },
  {
    "text": "low-level engine And this is always this is again downloaded every time we write",
    "start": "1791760",
    "end": "1797200"
  },
  {
    "text": "some new code It goes through a pipeline It gets built to web assembly and then um we just executed on your uh TV setup",
    "start": "1797200",
    "end": "1805279"
  },
  {
    "text": "box whatever you have in your living room and then we have the low-level stuff that interacts with the device um",
    "start": "1805279",
    "end": "1810799"
  },
  {
    "text": "that we try to keep as uh small as possible and this is what we shipped I think end of August um and we uh it's",
    "start": "1810799",
    "end": "1819279"
  },
  {
    "text": "it's live today um so good parts developer productivity",
    "start": "1819279",
    "end": "1825200"
  },
  {
    "text": "actually um this was great for us so previously when we rewrote the engine We had a bunch of developers who knew C++",
    "start": "1825200",
    "end": "1832320"
  },
  {
    "text": "uh and switched to Rust um and we had good results there But in this case we",
    "start": "1832320",
    "end": "1838720"
  },
  {
    "text": "we switch people who knew only JavaScript and TypeScript to Rust and they only knew stuff like React and",
    "start": "1838720",
    "end": "1844240"
  },
  {
    "text": "those frameworks and we switched them with our Rust UI SDA with no loss in productivity",
    "start": "1844240",
    "end": "1850039"
  },
  {
    "text": "Um this is both self-reported and compared with um whenever we build a",
    "start": "1850039",
    "end": "1857360"
  },
  {
    "text": "feature we have other clients that don't use this So for example like the mobile client or um the web client and so on",
    "start": "1857360",
    "end": "1864000"
  },
  {
    "text": "and the rust client actually when we were discussing some new features to be built now on all of the clients was I",
    "start": "1864000",
    "end": "1871440"
  },
  {
    "text": "think the second one in terms of speed I think behind web and then even mobile developers had higher estimations than",
    "start": "1871440",
    "end": "1878640"
  },
  {
    "text": "we did here Also we did this whole rewrite in a really short amount of time",
    "start": "1878640",
    "end": "1884640"
  },
  {
    "text": "so we had to be productive uh we build a UI SDK and large part of the app uh",
    "start": "1884640",
    "end": "1890480"
  },
  {
    "text": "quite fast Uh the reason why I think this is true is because we did a lot of",
    "start": "1890480",
    "end": "1896720"
  },
  {
    "text": "work in developer experience with that those macros that maybe look a bit shocking if you don't know UI",
    "start": "1896720",
    "end": "1902159"
  },
  {
    "text": "programming but actually they felt very familiar to UI engineers um and they",
    "start": "1902159",
    "end": "1908159"
  },
  {
    "text": "they could work with it right off the bat they don't have to deal with much complexity in in the borrow checker Uh",
    "start": "1908159",
    "end": "1916240"
  },
  {
    "text": "they usually in the UI code you can kind of clone things if necessary or even use",
    "start": "1916240",
    "end": "1922080"
  },
  {
    "text": "a RC and things like that and oh no this is not super optimal Yeah Well we came",
    "start": "1922080",
    "end": "1927760"
  },
  {
    "text": "from JavaScript so this is fine I promise like the gnarly bits are down in",
    "start": "1927760",
    "end": "1932799"
  },
  {
    "text": "the engine and there we take a lot of care about data management and and memory and so on in the UI code uh we",
    "start": "1932799",
    "end": "1939360"
  },
  {
    "text": "can afford it easy and even on the lowest level hardware I have some slides that you'll see the the impact of this",
    "start": "1939360",
    "end": "1946720"
  },
  {
    "text": "uh another thing in the SDK as SDK and engine team we chose really uh we chose",
    "start": "1946720",
    "end": "1953760"
  },
  {
    "text": "some constraints and they seem u they helped us build a simple UI SDK and ship",
    "start": "1953760",
    "end": "1960799"
  },
  {
    "text": "it faster So for example one constraint audio engine has that is not um that",
    "start": "1960799",
    "end": "1966399"
  },
  {
    "text": "might short you is that um when you define a label or a widget or something",
    "start": "1966399",
    "end": "1972320"
  },
  {
    "text": "like that you cannot read properties from it unless you've been the one setting properties So it's impossible to",
    "start": "1972320",
    "end": "1978880"
  },
  {
    "text": "read where on the screen element ends up after layout from the UI code It's just",
    "start": "1978880",
    "end": "1984399"
  },
  {
    "text": "you you never know You just put them in there We calculate things in the engine but you can't read things unless you've",
    "start": "1984399",
    "end": "1990960"
  },
  {
    "text": "been the one saying this is your color blue and then you're like yeah it's in my variable I can read it of course but",
    "start": "1990960",
    "end": "1996960"
  },
  {
    "text": "things that like that you can't read and this simplified vastly our UI",
    "start": "1996960",
    "end": "2002880"
  },
  {
    "text": "architecture and we don't have to deal with a bunch of things and slownesses because of it uh it seems like a",
    "start": "2002880",
    "end": "2010960"
  },
  {
    "text": "shocking thing maybe you need to know where on the screen no you don't because we shipped it there was no need to know",
    "start": "2010960",
    "end": "2016640"
  },
  {
    "text": "where you are on the screen and there was no need to read a property that you haven't set There are certain cases",
    "start": "2016640",
    "end": "2022399"
  },
  {
    "text": "where we do notify UI engine developers through callbacks where they can attach a function and get notified if something",
    "start": "2022399",
    "end": "2029200"
  },
  {
    "text": "happens Uh but it's very very rare It happens usually in case of focus",
    "start": "2029200",
    "end": "2035360"
  },
  {
    "text": "management and things like that Um you will get a function call that you're focused you're not focused anymore and",
    "start": "2035360",
    "end": "2042320"
  },
  {
    "text": "that works fine Uh again it's a trade-off it has worked perfectly fine for us Um it's something that I think",
    "start": "2042320",
    "end": "2050800"
  },
  {
    "text": "also has helped productivity Um we only had one instance where developers asked",
    "start": "2050800",
    "end": "2056720"
  },
  {
    "text": "to read of value of layout because they wanted something to grow and maybe at 70% of the the thing they wanted",
    "start": "2056720",
    "end": "2065118"
  },
  {
    "text": "something else to happen just use a timer and that was fixed Um but again uh",
    "start": "2065119",
    "end": "2072398"
  },
  {
    "text": "another good thing is that we iteratively shipped this and this is only because we used I think in my view",
    "start": "2072399",
    "end": "2078240"
  },
  {
    "text": "entity component systems as the basis of our u low lower level engine So that",
    "start": "2078240",
    "end": "2084398"
  },
  {
    "text": "low-level engine with the systems it has and the components it has currently supports um JavaScript pages and by",
    "start": "2084399",
    "end": "2091358"
  },
  {
    "text": "pages I mean you either everything on the screen is in Rust or everything on the screen is in JavaScript Sorry",
    "start": "2091359",
    "end": "2099280"
  },
  {
    "text": "So for example uh we ship like this the profiles page which is the page you you",
    "start": "2099280",
    "end": "2104560"
  },
  {
    "text": "select the profile the collections page that's the page right after you selected the profile and you see all of the",
    "start": "2104560",
    "end": "2110960"
  },
  {
    "text": "categories all of the movies and everything Um the details page which is",
    "start": "2110960",
    "end": "2116240"
  },
  {
    "text": "once you choose something to watch you can go to that um place and see maybe",
    "start": "2116240",
    "end": "2121440"
  },
  {
    "text": "episodes or just more details about the movie and press play Uh so we still have to move the search page settings uh and",
    "start": "2121440",
    "end": "2130640"
  },
  {
    "text": "um a bunch of other smaller pages Um those are still in JavaScript We're this",
    "start": "2130640",
    "end": "2136640"
  },
  {
    "text": "is work in progress So we're just moving them over Uh it's just a function of time Uh we we only had like 20 people",
    "start": "2136640",
    "end": "2143359"
  },
  {
    "text": "for both the UI SDK and the uh the the",
    "start": "2143359",
    "end": "2148720"
  },
  {
    "text": "application So it takes a bit um to to to move everything It's just time not",
    "start": "2148720",
    "end": "2155599"
  },
  {
    "text": "the reason just work in progress Uh we think it was good Um that",
    "start": "2155599",
    "end": "2161599"
  },
  {
    "text": "entity component system managed perfectly fine um to have these two running side by side I don't think we",
    "start": "2161599",
    "end": "2167119"
  },
  {
    "text": "had one bug um because of this We only had to do some extra work to synchronize",
    "start": "2167119",
    "end": "2174240"
  },
  {
    "text": "a bunch of state between these things like the the stack that you used to go back the back stack and things like that",
    "start": "2174240",
    "end": "2180240"
  },
  {
    "text": "but um was worth it in the end and we got this out really fast So we actually",
    "start": "2180240",
    "end": "2185680"
  },
  {
    "text": "first shipped the profiles page and then added the collections page and then the details page and then life and linear",
    "start": "2185680",
    "end": "2191040"
  },
  {
    "text": "and whatnot Uh so that's um that's nice Another good part is in my opinion we",
    "start": "2191040",
    "end": "2197680"
  },
  {
    "text": "built tools um as part of building this UI SDK just uh without um",
    "start": "2197680",
    "end": "2205160"
  },
  {
    "text": "basically because we built an SDK so we had to build tools So I think one winning move here was it's really easy",
    "start": "2205160",
    "end": "2212079"
  },
  {
    "text": "in our codebase to add a new tool mostly because we use eguy which is this rust",
    "start": "2212079",
    "end": "2218160"
  },
  {
    "text": "immediate mode UI library So you see there like the resource manager t just",
    "start": "2218160",
    "end": "2223280"
  },
  {
    "text": "appears on top of the UI Uh so this is something a developer built because um",
    "start": "2223280",
    "end": "2229119"
  },
  {
    "text": "he was debugging some sort of an issue where a texture wasn't loading and he was trying to figure out well how much memory do we have is this a memory thing",
    "start": "2229119",
    "end": "2236640"
  },
  {
    "text": "the resource manager maybe didn't do something right Uh so we just made it very easy to build tools and we built",
    "start": "2236640",
    "end": "2243040"
  },
  {
    "text": "tools in parallel with building the application and the UI SDK and um in",
    "start": "2243040",
    "end": "2249119"
  },
  {
    "text": "reality these are way below what you'd expect from browsers and things like that but with literally 20% of the tools",
    "start": "2249119",
    "end": "2256880"
  },
  {
    "text": "you you get 80% done It's absolutely true Um you just need mostly the basics",
    "start": "2256880",
    "end": "2262320"
  },
  {
    "text": "Of course we have like debugger and things like that that just work but these are like UI specific tools We have",
    "start": "2262320",
    "end": "2268560"
  },
  {
    "text": "layout inspectors and all sorts of other things So you can kind of figure out if you set the wrong property Um now another cool thing is um",
    "start": "2268560",
    "end": "2279440"
  },
  {
    "text": "in my opinion so we built this which is essentially a rewrite of the whole prime video app and obviously we're kind of",
    "start": "2279440",
    "end": "2287520"
  },
  {
    "text": "against this things without a lot of data So one thing that really helped us made a point that this is worth it is to",
    "start": "2287520",
    "end": "2296480"
  },
  {
    "text": "make a prototype that wasn't cheating um that we showed to leadership around look this is how it",
    "start": "2296480",
    "end": "2304480"
  },
  {
    "text": "feels on a device before what we did and this is with this new thing and",
    "start": "2304480",
    "end": "2309520"
  },
  {
    "text": "literally features that were impossible before like layout animations are just super easy to do now and you see here",
    "start": "2309520",
    "end": "2316480"
  },
  {
    "text": "things are growing layout just works it rearranges everything things appear and",
    "start": "2316480",
    "end": "2321599"
  },
  {
    "text": "disappear Again this is a layout animation here Uh of course this is programmer art Um but has nothing to do",
    "start": "2321599",
    "end": "2329359"
  },
  {
    "text": "with designers We're just kind of showcasing capabilities on a device As you can see things are over icons and",
    "start": "2329359",
    "end": "2335680"
  },
  {
    "text": "under It's just a prototype but it felt so much nicer and responsive compared to",
    "start": "2335680",
    "end": "2340720"
  },
  {
    "text": "what you could get on a device that it just convinced people instantly that it's worth the risk of building a UI in",
    "start": "2340720",
    "end": "2348079"
  },
  {
    "text": "Rust and Web Assembly because even though we added Rust and it was part of our text stack we were using it for",
    "start": "2348079",
    "end": "2354320"
  },
  {
    "text": "low-level bits But this showed us that um okay we we can take a risk and try to",
    "start": "2354320",
    "end": "2359599"
  },
  {
    "text": "build some UI in it And here are some results So this is a really really really low-end device where input",
    "start": "2359599",
    "end": "2367200"
  },
  {
    "text": "latency for the main page for connection page was as bad as 247 milliseconds 250",
    "start": "2367200",
    "end": "2373040"
  },
  {
    "text": "millconds horrible input latency with the orange color this is in JavaScript",
    "start": "2373040",
    "end": "2378720"
  },
  {
    "text": "with Rust in blue 33 milliseconds easy",
    "start": "2378720",
    "end": "2383760"
  },
  {
    "text": "Uh similarly uh details page 440 milliseconds This also includes layout",
    "start": "2383760",
    "end": "2389680"
  },
  {
    "text": "time as because we cons if you press a button as the page loads and we do layout you might wait that much So this",
    "start": "2389680",
    "end": "2396480"
  },
  {
    "text": "is kind of max and the the the device is very very slow again 30 milliseconds",
    "start": "2396480",
    "end": "2402160"
  },
  {
    "text": "because layout animations means we need to run layout as fast as um an animation",
    "start": "2402160",
    "end": "2408880"
  },
  {
    "text": "frame which is usually 16 milliseconds or 30 millconds at 30 fps So it's way",
    "start": "2408880",
    "end": "2414160"
  },
  {
    "text": "way faster and way more responsive again uh it's that line is basically flat so",
    "start": "2414160",
    "end": "2421599"
  },
  {
    "text": "it's it was great and this is other devices have been closer those two lines but I picked this example because it",
    "start": "2421599",
    "end": "2427359"
  },
  {
    "text": "really showcases even on the lowest end device you can get great results the",
    "start": "2427359",
    "end": "2432480"
  },
  {
    "text": "medium devices were like 70 milliseconds and they went down to 16 or 33 but this",
    "start": "2432480",
    "end": "2437520"
  },
  {
    "text": "is like the worst of them all so um anyway we have that ugly parts uh web",
    "start": "2437520",
    "end": "2444880"
  },
  {
    "text": "assembly system interface is quite new uh and web assembly in general is quite",
    "start": "2444880",
    "end": "2450240"
  },
  {
    "text": "new We're part of the W3C community We're working with them around features",
    "start": "2450240",
    "end": "2455359"
  },
  {
    "text": "things like that But uh there's certain things that are lacking So for example we did add threads Um but also",
    "start": "2455359",
    "end": "2463560"
  },
  {
    "text": "um there's things that happen in the ecosystem that break our code sometimes",
    "start": "2463560",
    "end": "2468720"
  },
  {
    "text": "because we use something that's not fully standardized in production for a while Uh one such example was recently",
    "start": "2468720",
    "end": "2475760"
  },
  {
    "text": "Rust 182 um enabled some feature by default for web assembly wazy builds uh",
    "start": "2475760",
    "end": "2483280"
  },
  {
    "text": "that basically didn't work on older uh web assembly virtual machines that we",
    "start": "2483280",
    "end": "2489760"
  },
  {
    "text": "had in production So we basically now a way to disable it even if we have a new",
    "start": "2489760",
    "end": "2495119"
  },
  {
    "text": "default and things like that That that's not um I mean it comes with it's worth",
    "start": "2495119",
    "end": "2500319"
  },
  {
    "text": "it for us Um that's something to think about Also web assembly system interface",
    "start": "2500319",
    "end": "2505680"
  },
  {
    "text": "keeps evolving and adding new features and we're trying to be active as part of that effort as well Um it requires",
    "start": "2505680",
    "end": "2513680"
  },
  {
    "text": "engineering effort You we can't just quite take a dependency specifically on web assembly",
    "start": "2513680",
    "end": "2519599"
  },
  {
    "text": "and just be like well let's see where this ship goes So you need to to to get involved in there",
    "start": "2519599",
    "end": "2528160"
  },
  {
    "text": "and and help with feedback with work on features and so on Um another one we",
    "start": "2528160",
    "end": "2534240"
  },
  {
    "text": "found out is panic free code is really really hard So I of course exceptions",
    "start": "2534240",
    "end": "2541520"
  },
  {
    "text": "should be for exceptional things but okay that's not how people write JavaScript So when the code panics in",
    "start": "2541520",
    "end": "2549599"
  },
  {
    "text": "our new Rust app the whole app gets just basically demolish it crashes So you",
    "start": "2549599",
    "end": "2556079"
  },
  {
    "text": "need to restart it from your menu or whatever your TV menu is really annoying",
    "start": "2556079",
    "end": "2562599"
  },
  {
    "text": "So crashes panics shouldn't quite happen but it's very easy to cause a rust panic",
    "start": "2562599",
    "end": "2569280"
  },
  {
    "text": "Just access an array with the wrong index you panic game over Uh and then",
    "start": "2569280",
    "end": "2574880"
  },
  {
    "text": "that's it So if you're an engineer who only worked in JavaScript maybe you're",
    "start": "2574880",
    "end": "2580880"
  },
  {
    "text": "familiar with exceptions you can try catch somewhere and even if it's uh not",
    "start": "2580880",
    "end": "2586720"
  },
  {
    "text": "ideal you can reset the catch the exception and maybe reset the customer at some nice position they",
    "start": "2586720",
    "end": "2595160"
  },
  {
    "text": "were closer to where they were before or literally where they were before It's impossible with our new app which is",
    "start": "2595160",
    "end": "2602720"
  },
  {
    "text": "really annoying We of course use clippy to ban unwraps uh and expect and those things We ban",
    "start": "2602720",
    "end": "2611359"
  },
  {
    "text": "unsafe code except in one engine crate that has to interact with the lower level bits But again it required a bit",
    "start": "2611359",
    "end": "2619280"
  },
  {
    "text": "of education in our UI engineers to kind of rely on this pattern of using um",
    "start": "2619280",
    "end": "2625400"
  },
  {
    "text": "results the result type from rust and get comfortable with the idea that there",
    "start": "2625400",
    "end": "2631200"
  },
  {
    "text": "is no stack unwinding especially there is no stack unwinding in web assembly which is tied to the first point so you",
    "start": "2631200",
    "end": "2637839"
  },
  {
    "text": "can't even um catch that in a in a panic handler Uh so it just aborts the program",
    "start": "2637839",
    "end": "2643359"
  },
  {
    "text": "Again this pretty pretty big big pain payment for us Um in the end obviously",
    "start": "2643359",
    "end": "2650000"
  },
  {
    "text": "we shipped so we're happy We almost never crashed but this requires a bunch",
    "start": "2650000",
    "end": "2655040"
  },
  {
    "text": "of work Um and as a consequence this also generated a bunch of work on us",
    "start": "2655040",
    "end": "2660880"
  },
  {
    "text": "because we were depending on some third party libraries that were very happily",
    "start": "2660880",
    "end": "2666720"
  },
  {
    "text": "panicking whenever you were calling some functions in a bit of an um maybe not super correct way Uh",
    "start": "2666720",
    "end": "2676040"
  },
  {
    "text": "but again we would rather have results instead of panics for those cases So it",
    "start": "2676040",
    "end": "2681839"
  },
  {
    "text": "it led to a bit of work there that we didn't quite expect Um so that's something to think about",
    "start": "2681839",
    "end": "2688000"
  },
  {
    "text": "especially in UI programming or especially if you go from uh like we did",
    "start": "2688000",
    "end": "2693680"
  },
  {
    "text": "from from JavaScript to Rust and Web Assembly Um at the end here I just want to plug the bike alliance which is this",
    "start": "2693680",
    "end": "2700160"
  },
  {
    "text": "nonprofit organization we're part of a bunch of companies are part of it and they work on um we built on open",
    "start": "2700160",
    "end": "2708240"
  },
  {
    "text": "standards like web assembly web assembly system interface um and then",
    "start": "2708240",
    "end": "2713960"
  },
  {
    "text": "um um they also built like the web assembly micro runtime which is the virtual machine we use is built over",
    "start": "2713960",
    "end": "2720720"
  },
  {
    "text": "there as well as was time which is another popular rust one um implemented in rust this web assembly micro runtime",
    "start": "2720720",
    "end": "2728000"
  },
  {
    "text": "you see Uh so it's kind of a good good place to look at if you're interested in",
    "start": "2728000",
    "end": "2734079"
  },
  {
    "text": "using Rust in production and uh especially with with using web assembly",
    "start": "2734079",
    "end": "2739359"
  },
  {
    "text": "in production more specifically but in our case it's kind of comes with with Rust and everything Um right",
    "start": "2739359",
    "end": "2746119"
  },
  {
    "text": "so this was my presentation I can breathe a bit now If you have",
    "start": "2746119",
    "end": "2751480"
  },
  {
    "text": "questions should that's it Thank you",
    "start": "2751480",
    "end": "2757319"
  },
  {
    "text": "Thank you Alex Uh hands up if you want the mic",
    "start": "2761760",
    "end": "2767200"
  },
  {
    "text": "Hi thanks for the presentation Really good Um so you mentioned I mean you don't use this for your web clients Do",
    "start": "2767200",
    "end": "2772520"
  },
  {
    "text": "you would you think that something like this could work using like WebGL as the",
    "start": "2772520",
    "end": "2777680"
  },
  {
    "text": "rendering target uh we uh yeah so we did some um",
    "start": "2777680",
    "end": "2784160"
  },
  {
    "text": "comparisons on devices Um there's a bunch of pain points Um",
    "start": "2784160",
    "end": "2790040"
  },
  {
    "text": "first pain point is uh on the ones we do have to use uh",
    "start": "2790040",
    "end": "2798560"
  },
  {
    "text": "browser because there's no space on the flash on some setup boxes Let's say the problem is those browsers are some",
    "start": "2798560",
    "end": "2805359"
  },
  {
    "text": "version of webkit that has no web assembly So that that's kind of the big hurdle for us there It could be possible",
    "start": "2805359",
    "end": "2812400"
  },
  {
    "text": "So we did some experiments uh and um it it worked but you do lose a few things",
    "start": "2812400",
    "end": "2819599"
  },
  {
    "text": "that browsers have that we don't So um it's",
    "start": "2819599",
    "end": "2826520"
  },
  {
    "text": "um today is not worth it for us because those are have very few customers They",
    "start": "2826520",
    "end": "2832960"
  },
  {
    "text": "work fairly okay uh in terms of what comparing them to the even the system UI",
    "start": "2832960",
    "end": "2839119"
  },
  {
    "text": "So even though they don't hit these numbers it would be a significant amount",
    "start": "2839119",
    "end": "2844160"
  },
  {
    "text": "of effort to get this SDK to work on a on a browser Right now it's just quite",
    "start": "2844160",
    "end": "2850240"
  },
  {
    "text": "simple because it has one target the the one that has the native VM It requires a bunch of functions from the native VM",
    "start": "2850240",
    "end": "2856800"
  },
  {
    "text": "that we expose that aren't standard So getting those would probably require to pipe them to JavaScript and then you're",
    "start": "2856800",
    "end": "2863200"
  },
  {
    "text": "like what's going on you might lose some performance and things like that So it's it's a bit of a tricky one So yeah but",
    "start": "2863200",
    "end": "2871200"
  },
  {
    "text": "we we're we're keeping an eye on it So yeah",
    "start": "2871200",
    "end": "2876599"
  },
  {
    "text": "[Music]",
    "start": "2879160",
    "end": "2884609"
  }
]