[
  {
    "text": "all right hello everyone uh my name is Xavier Duky i'm",
    "start": "8559",
    "end": "14000"
  },
  {
    "text": "the tech lead for developer tools for Android at Google and my name is Hans Doctor i'm the founder of Gradel and the",
    "start": "14000",
    "end": "20400"
  },
  {
    "text": "CEO of Gradawware all right so we're going to talk about the Android build system uh so uh we",
    "start": "20400",
    "end": "26960"
  },
  {
    "text": "wanted to start a little bit by talking about our motivation and really like on the Android side right um so Android um",
    "start": "26960",
    "end": "33840"
  },
  {
    "text": "well first I want to ask who is currently using greater to build Android applications okay that's a lot of you",
    "start": "33840",
    "end": "40239"
  },
  {
    "text": "who is using Maven one okay uh who is using Eclipse and",
    "start": "40239",
    "end": "47079"
  },
  {
    "text": "Ant okay a few of you all right so um then I guess we'll go through some of",
    "start": "47079",
    "end": "52399"
  },
  {
    "text": "those introductions a little bit faster uh But it's it's interesting to to look at the motivation that we had when we",
    "start": "52399",
    "end": "58879"
  },
  {
    "text": "designed u gradal when we designed from our perspective you know the new build",
    "start": "58879",
    "end": "64320"
  },
  {
    "text": "system based on gradal uh so when you look at Android it's a little bit you know it's a very complex build system it",
    "start": "64320",
    "end": "70960"
  },
  {
    "text": "it may not look like it but we have a lot of languages you know you have Java of course you have uh native code of",
    "start": "70960",
    "end": "76799"
  },
  {
    "text": "course you have aid you have um you know render script uh you have um the",
    "start": "76799",
    "end": "82720"
  },
  {
    "text": "resources is not really a language but both aid run script and or resource mechanism generate code so that's",
    "start": "82720",
    "end": "88240"
  },
  {
    "text": "complicated uh and it really makes something relatively complicated when you look at the build process right so",
    "start": "88240",
    "end": "94159"
  },
  {
    "text": "that's um it's not even up to date um so I'm I'm going to show you a few things",
    "start": "94159",
    "end": "99439"
  },
  {
    "text": "here um so at the beginning you have like merging of a lot of resources and source",
    "start": "99439",
    "end": "105920"
  },
  {
    "text": "file coming from different variants we'll talk about that a little bit that flow here is render script either native",
    "start": "105920",
    "end": "111360"
  },
  {
    "text": "render script with just regular classes here and by code and like the u support",
    "start": "111360",
    "end": "116399"
  },
  {
    "text": "mode where we generate um non renderers script code native code to run on you know older devices so that's that flow",
    "start": "116399",
    "end": "122799"
  },
  {
    "text": "here uh here we have a single flow a very simple flow going from java compilation to progard to dex but in",
    "start": "122799",
    "end": "128959"
  },
  {
    "text": "fact of course progard is optional then you have instrumentation then we have multidex now and that flow here is like",
    "start": "128959",
    "end": "134720"
  },
  {
    "text": "I don't even know how to represent it on a chart like that and that's just one version of course right um if you look",
    "start": "134720",
    "end": "140800"
  },
  {
    "text": "at you know a lot of developers are going to want to do a lot of things in",
    "start": "140800",
    "end": "146239"
  },
  {
    "text": "their Android application that we never thought about at the beginning they want to inject new steps in any of those you",
    "start": "146239",
    "end": "152480"
  },
  {
    "text": "know between any of those squares uh they want to do you know dependency injection they want to do a lot of",
    "start": "152480",
    "end": "157920"
  },
  {
    "text": "things that really require a developer to do more than just going and hacking some build script somewhere or dealing",
    "start": "157920",
    "end": "164640"
  },
  {
    "text": "with like or builder in Eclipse is just like a black box and you have no flexibility whatsoever so being able to",
    "start": "164640",
    "end": "170800"
  },
  {
    "text": "enable developers you to do any sort of modification that they wanted was right a big motivation for us um and you know",
    "start": "170800",
    "end": "180000"
  },
  {
    "text": "I I explained that you know that's like one variant of it but there's a lot of requirement also that come from Android",
    "start": "180000",
    "end": "186239"
  },
  {
    "text": "uh the simplest one when you look at at the platform level is well you need a special version to debug versus the",
    "start": "186239",
    "end": "192959"
  },
  {
    "text": "version that you ship as a release build so suddenly you need to build two versions um in the ecosystem part you",
    "start": "192959",
    "end": "199599"
  },
  {
    "text": "have well you have you know older devices because not every devices run lollipop unfortunately uh you have you",
    "start": "199599",
    "end": "206000"
  },
  {
    "text": "know things like you know different densities different uh ABI right",
    "start": "206000",
    "end": "211440"
  },
  {
    "text": "shipping for Intel CPUs or ARM CPUs and there's a lot of things here where you don't want to just have one APK that",
    "start": "211440",
    "end": "216959"
  },
  {
    "text": "contains everything and then there's you know just you all who have told us loudly that you know well I have a",
    "start": "216959",
    "end": "223599"
  },
  {
    "text": "version that's slightly different from my other version and I want to be able to manage that more easily than I can right now some people have you know",
    "start": "223599",
    "end": "230720"
  },
  {
    "text": "abused the flavor mechanism that we introduced to generate hundreds of flavors and I'm like you know I don't",
    "start": "230720",
    "end": "237040"
  },
  {
    "text": "you know it's like we had to plan for that it's it's kind of to me it's kind of a little bit like a crazy edge case",
    "start": "237040",
    "end": "242239"
  },
  {
    "text": "but we have to support it and we have to support all of you and so none of that was possible before with Ant and with",
    "start": "242239",
    "end": "248560"
  },
  {
    "text": "Eclipse and so we had to design something new uh and all of that flexibility was very important uh so the",
    "start": "248560",
    "end": "255599"
  },
  {
    "text": "the big thing though is that we wanted to make sure that it wasn't you know like we had flexibility in Ants before",
    "start": "255599",
    "end": "260880"
  },
  {
    "text": "right it's like hey just go and edit the endcript and just make it happen yourself that's not a good solution",
    "start": "260880",
    "end": "266880"
  },
  {
    "text": "right so we wanted like really a good build system that really felt like you know was designed for it and wasn't some",
    "start": "266880",
    "end": "273360"
  },
  {
    "text": "you know hack you know that that's kind of like a weird word but it's like you know",
    "start": "273360",
    "end": "279040"
  },
  {
    "text": "like when I see some developer who are doing what they're doing in their endscript it's like it you know it's it's very scary and and then when you do",
    "start": "279040",
    "end": "285440"
  },
  {
    "text": "that of course you lose completely the integration in Eclipse so we really wanted to do that um the the other part that was really",
    "start": "285440",
    "end": "292560"
  },
  {
    "text": "important was the ID integration right i just touched on you know like you do a lot of customization in Ant it doesn't",
    "start": "292560",
    "end": "298560"
  },
  {
    "text": "work in Eclipse and that's a big problem and being able to do all of those customization in one place and have it",
    "start": "298560",
    "end": "304960"
  },
  {
    "text": "work you know everywhere was really important so in um you know when we designed all of that",
    "start": "304960",
    "end": "312639"
  },
  {
    "text": "you know we created that model that you know you all know because you're using Angra already so you know flavor build",
    "start": "312639",
    "end": "317840"
  },
  {
    "text": "type etc you know we have the API we have everything but whatever you do right it just works in the ID we send",
    "start": "317840",
    "end": "324720"
  },
  {
    "text": "that model that we created that you guys define right you know creating those flavors and things like that and we just",
    "start": "324720",
    "end": "331120"
  },
  {
    "text": "use that um you know everywhere and that's really to us that was really something really important you know",
    "start": "331120",
    "end": "336479"
  },
  {
    "text": "because our goal was really to create one true Android ID you know like or current or old uh ID integration the u",
    "start": "336479",
    "end": "346240"
  },
  {
    "text": "you know the Eclipse plugin didn't really feel like it was a good Android ID felt more like you know hey we are",
    "start": "346240",
    "end": "352320"
  },
  {
    "text": "plugging some Android feature into Eclipse and and we wanted something that felt really native so with that custom",
    "start": "352320",
    "end": "358320"
  },
  {
    "text": "model we can really have studio understand exactly everything that you define the flavor the variant and all of",
    "start": "358320",
    "end": "364800"
  },
  {
    "text": "that and um and it just works you know great now Studio is very aware of of",
    "start": "364800",
    "end": "370400"
  },
  {
    "text": "everything that you're doing um and uh so the thing also that's important",
    "start": "370400",
    "end": "376800"
  },
  {
    "text": "you know all that flexibility is that the API that we provide will give",
    "start": "376800",
    "end": "382240"
  },
  {
    "text": "you you know studio doesn't need to know about your custom thing you know what",
    "start": "382240",
    "end": "387360"
  },
  {
    "text": "matters is that your custom steps your custom logic basically modify the model that is sent from gradal to studio and",
    "start": "387360",
    "end": "393440"
  },
  {
    "text": "then studio just understand that new model so if you have some custom code to generate dynamic you know dynamically",
    "start": "393440",
    "end": "399280"
  },
  {
    "text": "generate flavors not a problem right what matters to studio at the end is all the flavor that you generate so and that",
    "start": "399280",
    "end": "405600"
  },
  {
    "text": "that's what matters um so grad we chose gradal because it offers us the ability",
    "start": "405600",
    "end": "411039"
  },
  {
    "text": "to do all of that right the tooling API and all of that was really important um okay yeah so um from a gradal side u um",
    "start": "411039",
    "end": "420080"
  },
  {
    "text": "ID integration is a first was has always been a first class citizen uh uh in how we modeled gradal and and that's why we",
    "start": "420080",
    "end": "426800"
  },
  {
    "text": "have this separate thing called tooling API I because we don't want that the idees directly integrate with gradal for",
    "start": "426800",
    "end": "434080"
  },
  {
    "text": "v various reasons so uh one is stability across gradal versions right so so when",
    "start": "434080",
    "end": "439680"
  },
  {
    "text": "using the tooling API uh uh it can interact with gradal versions of the",
    "start": "439680",
    "end": "444800"
  },
  {
    "text": "past and gradal versions of the future so when a new gradal version comes out uh uh you don't need to update your IDE",
    "start": "444800",
    "end": "451039"
  },
  {
    "text": "unless you are so in the future you won't Um so so unless you are pushing it",
    "start": "451039",
    "end": "457599"
  },
  {
    "text": "like Android Studio and always needing the newest features but once this consolidate uh we see this with many",
    "start": "457599",
    "end": "462880"
  },
  {
    "text": "other uh other technologies that integrated in the IDE when you directly integrate with with the platform you",
    "start": "462880",
    "end": "468720"
  },
  {
    "text": "always need to you need you have a you have a onetoone mapping of a certain plug-in version in the IDE with a",
    "start": "468720",
    "end": "474479"
  },
  {
    "text": "version of the platform and the tooling API will will uh uh eventually once thing have consolidated leads to a very",
    "start": "474479",
    "end": "480800"
  },
  {
    "text": "very stable uh uh um IDE behavior in regard to different versions of",
    "start": "480800",
    "end": "485840"
  },
  {
    "text": "gradal uh the other is runtime is isolation so uh we want to take away the",
    "start": "485840",
    "end": "491120"
  },
  {
    "text": "burden that the IDE needs to take care of that uh the gradal processes run in isolation",
    "start": "491120",
    "end": "497599"
  },
  {
    "text": "at the same time run as fast as they can uh there's some high level services in there the IDE doesn't need to take care",
    "start": "497599",
    "end": "503840"
  },
  {
    "text": "of uh provisioning of the gradal distributions managing the demon and and we will see much more of that in the",
    "start": "503840",
    "end": "510319"
  },
  {
    "text": "future a very rich interaction with the IDE so we have that already via the",
    "start": "510319",
    "end": "515518"
  },
  {
    "text": "model that's already more than what I think I wouldn't know any other deep integration between build systems and",
    "start": "515519",
    "end": "521440"
  },
  {
    "text": "and IDE that is that rich but what you will see in the future for example is that when you execute tests by Android",
    "start": "521440",
    "end": "527920"
  },
  {
    "text": "Studio via the tooling API the tooling API will actually execute the test but send rich events to Android Studio so",
    "start": "527920",
    "end": "535519"
  },
  {
    "text": "that you have that that you have the rich visual uh representation of the",
    "start": "535519",
    "end": "540800"
  },
  {
    "text": "test run but at the same time you can do all the customizations you need to set",
    "start": "540800",
    "end": "546080"
  },
  {
    "text": "up your test fixtures in the gradal build script right and this will work you don't have a different behavior when",
    "start": "546080",
    "end": "551519"
  },
  {
    "text": "you run your tests in the ID IDE compared to running them in u um uh",
    "start": "551519",
    "end": "556800"
  },
  {
    "text": "directly via gradal and that's what we see saw in many organizations they say oh we want to run our integration test v",
    "start": "556800",
    "end": "562000"
  },
  {
    "text": "IDE so they had a build wiki or first you need to create the test fixture via your ant or your maven build and then",
    "start": "562000",
    "end": "568240"
  },
  {
    "text": "you can go in the IDE and execute the tests that kind of is not our vision so",
    "start": "568240",
    "end": "573600"
  },
  {
    "text": "that's and there's a lot of other rich interaction stuff you will see testing will be the first one on the list where this really starts to shine um yeah the",
    "start": "573600",
    "end": "582240"
  },
  {
    "text": "Other thing is cradle is uh uh has been built it's one of the very strings that",
    "start": "582240",
    "end": "588399"
  },
  {
    "text": "you can elegantly and powerfully extend it right and and the Android plug-in is",
    "start": "588399",
    "end": "593839"
  },
  {
    "text": "the best example i mean it's a full new platform uh that is that that is now",
    "start": "593839",
    "end": "599040"
  },
  {
    "text": "based on gradal but it's an external plug-in using mostly the public gradal",
    "start": "599040",
    "end": "604160"
  },
  {
    "text": "API sometimes the internal ones but nonetheless still it's an external plugin and uh that that is a very good",
    "start": "604160",
    "end": "610959"
  },
  {
    "text": "example how how you can extend gradel so so in gradal everything is deeply modeled right and um and and that means",
    "start": "610959",
    "end": "621519"
  },
  {
    "text": "you can easily query and extend it So for example you can ask questions uh uh",
    "start": "621519",
    "end": "627440"
  },
  {
    "text": "hey I want to extend gradel in a way for every free flavor you have defined right",
    "start": "627440",
    "end": "632720"
  },
  {
    "text": "uh please do an additional check of the dependencies whether they all have a non-commercial license or uh hey cradle",
    "start": "632720",
    "end": "639120"
  },
  {
    "text": "give me the repository container if any repository has been added uh that is",
    "start": "639120",
    "end": "644240"
  },
  {
    "text": "that is not an allowed repository let the build fail or uh if a test task takes longer than x millisec",
    "start": "644240",
    "end": "650800"
  },
  {
    "text": "milliseconds issue a warning in real time because there's a rich model in gradal it's super easy that that all",
    "start": "650800",
    "end": "656399"
  },
  {
    "text": "those things you can extend gradel with a few lines of code right and um and",
    "start": "656399",
    "end": "661920"
  },
  {
    "text": "that is that is one of the very strength so so one consumer of the capabilities",
    "start": "661920",
    "end": "667360"
  },
  {
    "text": "are you basically as Android developer uh uh writing your custom gradal build",
    "start": "667360",
    "end": "672480"
  },
  {
    "text": "but even if you say oh I don't need to extend anything those extendability mechanisms are key for a rich plug-in",
    "start": "672480",
    "end": "678480"
  },
  {
    "text": "ecosystem that you then use and that is another that is another strength uh that",
    "start": "678480",
    "end": "684480"
  },
  {
    "text": "that plugins because can do a lot of valuable stuff because Gradel is so extendable and it's so straightforward",
    "start": "684480",
    "end": "690399"
  },
  {
    "text": "to extend so and and as part of the new build system you have now a nice plug-in",
    "start": "690399",
    "end": "696800"
  },
  {
    "text": "system already based on the Android plugin so you have the gradal as the foundation then you have the Android",
    "start": "696800",
    "end": "702640"
  },
  {
    "text": "plugin and then you have plugins extending the Android plugin right so moneyo for and and and similar virtual",
    "start": "702640",
    "end": "710399"
  },
  {
    "text": "in the cloud devices provider rob electric uh performance tracking there's a lot out there uh and then of course",
    "start": "710399",
    "end": "717040"
  },
  {
    "text": "you can make use of of all the plugins that are more gen general purpose the git release plugin code quality plugins",
    "start": "717040",
    "end": "722959"
  },
  {
    "text": "other languages that are supported AWS and there there are hundreds and hundreds of plugins out there that that",
    "start": "722959",
    "end": "729360"
  },
  {
    "text": "are uh uh have value for for Android developers so um by the way there's like on the",
    "start": "729360",
    "end": "736720"
  },
  {
    "text": "floor like the exhibition floor there's a bunch of companies who are doing like performance monitoring for your app and they all have like gradal plugin and",
    "start": "736720",
    "end": "744160"
  },
  {
    "text": "it's really amazing to me because it's like you know that you just apply their plugin and then it just hooks correctly",
    "start": "744160",
    "end": "749600"
  },
  {
    "text": "into the right thing you know it does by code manipulation to add their tracking and and then it just works you have",
    "start": "749600",
    "end": "754720"
  },
  {
    "text": "nothing to do and it just you know out of the box and then studio works too right because you know studio doesn't care about like that extra step it just",
    "start": "754720",
    "end": "761519"
  },
  {
    "text": "it just works and whether you build from studio or whether you build from you know gradal just works the same way uh",
    "start": "761519",
    "end": "767120"
  },
  {
    "text": "so let's talk a little bit about you know some of the base concept which I guess I don't have to talk about it too much because apparently you all know",
    "start": "767120",
    "end": "773440"
  },
  {
    "text": "them right so uh but I I'll cover some of them um so you know the biggest thing",
    "start": "773440",
    "end": "779040"
  },
  {
    "text": "that we did um and and I think the part that's interesting here is that you know we didn't you know I didn't work with",
    "start": "779040",
    "end": "785440"
  },
  {
    "text": "like hands to define those concept we actually you know my team we sat down and we said okay we need to create the",
    "start": "785440",
    "end": "791279"
  },
  {
    "text": "new build system for Android let's figure out some of the concept that we could create based on feedback from developer like like you and and we came",
    "start": "791279",
    "end": "798320"
  },
  {
    "text": "up with like build time product flavors and varants and then you know we went to gradal and said hey you know we have",
    "start": "798320",
    "end": "803519"
  },
  {
    "text": "this thing can we actually even do that and hence was like sure you can um and",
    "start": "803519",
    "end": "808800"
  },
  {
    "text": "that was two years ago and you know uh we we shipped actually two days ago the RC1 for the plug-in although it's called",
    "start": "808800",
    "end": "814639"
  },
  {
    "text": "you know 014 something but it's like kind of like a 10 RC1 uh and about 30",
    "start": "814639",
    "end": "819760"
  },
  {
    "text": "minutes ago we shipped uh Studio 1.0 RC1 as well cool hey and so",
    "start": "819760",
    "end": "828040"
  },
  {
    "text": "uh it's been a long road but we're we're getting there um so build types um so",
    "start": "828880",
    "end": "834959"
  },
  {
    "text": "they control how your app is built so that's typically debug versus release uh you know or you know if you want to have",
    "start": "834959",
    "end": "840959"
  },
  {
    "text": "like a debug version that access your staging server versus your production server you can create a new one you can create as many build type as you want uh",
    "start": "840959",
    "end": "847839"
  },
  {
    "text": "you have a bunch of flags that you can set on it like you know whether it's debugable um whether you want to run",
    "start": "847839",
    "end": "852959"
  },
  {
    "text": "prog and and things like that uh signing configuration also is important so that your debug is signed differently from",
    "start": "852959",
    "end": "858639"
  },
  {
    "text": "your release one uh the other big dimension is product flavor so product flavor is to create a different version",
    "start": "858639",
    "end": "864720"
  },
  {
    "text": "of your application uh and that's where you're going to define you know maybe",
    "start": "864720",
    "end": "870320"
  },
  {
    "text": "you have a game and you have a free and a paid version right the free version uses ads and so you want to create two slightly different version of the same",
    "start": "870320",
    "end": "876480"
  },
  {
    "text": "one so that's a good way to do that um in the Play Store we have multi APK support so you could do a version",
    "start": "876480",
    "end": "882079"
  },
  {
    "text": "specialized for like an older version of Android like Gingerbread or you know whatever version and then a newer",
    "start": "882079",
    "end": "887279"
  },
  {
    "text": "version for IC and then another version for Lollipop you know depending on what you want to do right it might be easier",
    "start": "887279",
    "end": "892639"
  },
  {
    "text": "for you if you want to do something like very native to to lollipop to just create a lollipop only version that's up",
    "start": "892639",
    "end": "898560"
  },
  {
    "text": "to you right you have the flexibility for it and we used to do version uh flavor as well for splitting packaging",
    "start": "898560",
    "end": "905360"
  },
  {
    "text": "you know like one version for ARM one version for Intel and I I struggle through here because we have a better mechanism that I will talk about in a",
    "start": "905360",
    "end": "912240"
  },
  {
    "text": "moment so this one here is not about how you build your application it's more about what your application is so you",
    "start": "912240",
    "end": "917680"
  },
  {
    "text": "can control the application ID that's the package name in the manifesto so we call that application ID by the way because it doesn't change any package",
    "start": "917680",
    "end": "925440"
  },
  {
    "text": "name in your code right it's purely the ID of your application on Android uh unfortunately in the manifest it says",
    "start": "925440",
    "end": "931360"
  },
  {
    "text": "package which is not super awesome even though it looks like a Java package but that's really the ID of your application",
    "start": "931360",
    "end": "936720"
  },
  {
    "text": "that must be unique on a on a device um and then you can control you know so you know min SDK version target SDK version",
    "start": "936720",
    "end": "943760"
  },
  {
    "text": "of course if you want to do an NCS version a generate version you can control signing again um you know maybe",
    "start": "943760",
    "end": "948880"
  },
  {
    "text": "you you have two versions that you need to sign differently for business reasons or whatever um and things like that um",
    "start": "948880",
    "end": "956160"
  },
  {
    "text": "and then a variant so what when what you actually build is a variant and a variant is a combination of build types",
    "start": "956160",
    "end": "962800"
  },
  {
    "text": "and a product flavor um you can have no flavor in which case basically the build",
    "start": "962800",
    "end": "968639"
  },
  {
    "text": "type is your flavor right you just get a debug and a release version uh and you can have multiple dimensions of flavor",
    "start": "968639",
    "end": "974720"
  },
  {
    "text": "so earlier here you know if you wanted to do a game that was you know paid versus free but also x86 versus ARM you",
    "start": "974720",
    "end": "982000"
  },
  {
    "text": "could technically create two dimension of it although you don't want to actually create that second dimension i'll get back to that um what's",
    "start": "982000",
    "end": "987839"
  },
  {
    "text": "important to know is that it's really like a combination of all of those dimensions so if you take an example here the first dimension is really your",
    "start": "987839",
    "end": "994480"
  },
  {
    "text": "build type you have debug release the second dimension is uh paid versus free here and then the third one is",
    "start": "994480",
    "end": "1000320"
  },
  {
    "text": "gingerbread and IC and so you're going to create every single combination of that um which I will not list but you",
    "start": "1000320",
    "end": "1006720"
  },
  {
    "text": "can see them um we get developer who are like well I just want a p debug i don't care about IC you know I do want a paid",
    "start": "1006720",
    "end": "1013680"
  },
  {
    "text": "gingerbread and a paid IC version but I also want just a paid version it's not possible right it's like it's just you",
    "start": "1013680",
    "end": "1019600"
  },
  {
    "text": "have dimensions you can make every combination and every dimension should contribute a flavor u what you can do",
    "start": "1019600",
    "end": "1026720"
  },
  {
    "text": "though is uh create a skip really flavor",
    "start": "1026720",
    "end": "1032079"
  },
  {
    "text": "so for example you want to be mean to your IC users and say no free version for you uh that's fine so you just tell",
    "start": "1032079",
    "end": "1038160"
  },
  {
    "text": "Gradle hey you know basically so you have this variant filter object here and you pass it a closure basically and",
    "start": "1038160",
    "end": "1044640"
  },
  {
    "text": "we're going to use that closure every time we create those combination and we'll test whether that closure return",
    "start": "1044640",
    "end": "1050799"
  },
  {
    "text": "true or false although it doesn't return true it you basically so you receive a variant object and um so you would have",
    "start": "1050799",
    "end": "1057600"
  },
  {
    "text": "two flavors in that variant object right so there's a flavor combination flavor collection sorry you get the two of them",
    "start": "1057600",
    "end": "1064000"
  },
  {
    "text": "um and then you just test and you set the boolean ignore if you should ignore it or not um that way it's a little bit",
    "start": "1064000",
    "end": "1069360"
  },
  {
    "text": "we can extend it and add new things so for now right now what you get uh in the fin filter is just basically that right",
    "start": "1069360",
    "end": "1075600"
  },
  {
    "text": "you get the list of get the build type you get the flavors and you get you get the default config but really you don't",
    "start": "1075600",
    "end": "1081200"
  },
  {
    "text": "really need it it's a global object you could just access it using you know project.android devel default config and",
    "start": "1081200",
    "end": "1087280"
  },
  {
    "text": "then you have set ignore that allow you to set whether you should ignore it or not and that's really that allows you to",
    "start": "1087280",
    "end": "1092720"
  },
  {
    "text": "tweak still the list of flavors when you have some combination that don't make sense now in theory you know if you",
    "start": "1092720",
    "end": "1099440"
  },
  {
    "text": "don't care about it you know you could keep those combination but you know we're going to create more objects you",
    "start": "1099440",
    "end": "1104640"
  },
  {
    "text": "know because we have to going to create a lot of tasks for them uh and you know",
    "start": "1104640",
    "end": "1110240"
  },
  {
    "text": "and it just it's useless so you should just keep the version um and it keeps the UI clean and then in studio in",
    "start": "1110240",
    "end": "1117039"
  },
  {
    "text": "studio you'll have you know the ability to switch between those variant and so if you're generating like 15 bianants or",
    "start": "1117039",
    "end": "1122960"
  },
  {
    "text": "however many you know you should you should just not show them um so uh in fact you know that's you",
    "start": "1122960",
    "end": "1131679"
  },
  {
    "text": "know something that uh do you want to talk about the number of tasks yeah oh we already there okay i'm following the",
    "start": "1131679",
    "end": "1137520"
  },
  {
    "text": "slides here on my phone so completely in sync so uh uh I mean okay I I'm still",
    "start": "1137520",
    "end": "1144400"
  },
  {
    "text": "doing the old school form and x86 so but I will change that soon so um if you if",
    "start": "1144400",
    "end": "1151200"
  },
  {
    "text": "you look at this innocent looking build script on the left side right it's if if you think about how many tasks will",
    "start": "1151200",
    "end": "1158480"
  },
  {
    "text": "result from that it's more than 300 task so if you would translate that to an end build you would have an end build with",
    "start": "1158480",
    "end": "1164480"
  },
  {
    "text": "thousand lines of XML if you would translate those few lines of code into a",
    "start": "1164480",
    "end": "1170160"
  },
  {
    "text": "Maven build you would have 18 sub projects right for every variant testing another sub project so first of all the",
    "start": "1170160",
    "end": "1177200"
  },
  {
    "text": "expressiveness is really really cool it it it just shows it's not just flexibility it's also structure right",
    "start": "1177200",
    "end": "1184080"
  },
  {
    "text": "that is the sign of any good design it's a subtle design where you need flexibility you have flexibility but a",
    "start": "1184080",
    "end": "1189919"
  },
  {
    "text": "lot of complexity is also hidden that you not interested in right that's one thing and um but it's not just about",
    "start": "1189919",
    "end": "1196799"
  },
  {
    "text": "expressiveness again uh uh if you if you would translate that into an ant build it's not just that you have this",
    "start": "1196799",
    "end": "1202720"
  },
  {
    "text": "thousand lines of XML you couldn't ask hey Antu what are the flavors and would say what are flavors i don't know i only",
    "start": "1202720",
    "end": "1209039"
  },
  {
    "text": "know targets or hey maven what are the flavors I only know sub projects there's no way for an IDE to interact in this",
    "start": "1209039",
    "end": "1215440"
  },
  {
    "text": "rich way like Android Studio okay here here are the flavors of that build you can execute them you can switch between",
    "start": "1215440",
    "end": "1221280"
  },
  {
    "text": "them there's no way like the variant API you could do really efficient stuff to",
    "start": "1221280",
    "end": "1226720"
  },
  {
    "text": "extend it actually that's how the like you know some of the plugins that we talked about like the performance",
    "start": "1226720",
    "end": "1232000"
  },
  {
    "text": "tracking you know from those different companies that are on the exhibition floor what they're going to do is they're going to look through those variant that we",
    "start": "1232000",
    "end": "1238320"
  },
  {
    "text": "And they're going for each variant to query and say hey give me give me the dex task and basically they're going to",
    "start": "1238320",
    "end": "1244000"
  },
  {
    "text": "capture the input of the dex and then which is jar file and then manipulate",
    "start": "1244000",
    "end": "1249280"
  },
  {
    "text": "them you know do by code manipulation to insert the instrumentation and then send the result to dex so um it's it's very",
    "start": "1249280",
    "end": "1256080"
  },
  {
    "text": "easy for them to just you know whenever you create a new variant it their code still works right and there's a lot of",
    "start": "1256080",
    "end": "1262080"
  },
  {
    "text": "API there and I think the it's you know since we're also doing studio that works with greater you know like the the work",
    "start": "1262080",
    "end": "1268960"
  },
  {
    "text": "there is already done anyway I think it's more like at the plug-in ecosystem where we can really enable a lot of very",
    "start": "1268960",
    "end": "1274320"
  },
  {
    "text": "interesting um you know work to be done just because we have this rich model that is queryingable and and you can",
    "start": "1274320",
    "end": "1281200"
  },
  {
    "text": "really and also you can manipulate it we'll see a little bit better how to do some of that and by the way what the",
    "start": "1281200",
    "end": "1287280"
  },
  {
    "text": "Android plugin is doing you can do yourself if you have requirements in your organization for your automation",
    "start": "1287280",
    "end": "1292720"
  },
  {
    "text": "and you want to create your own build language for that it's that is a first class concept in creative world you can",
    "start": "1292720",
    "end": "1298000"
  },
  {
    "text": "do that to make it your developers to express their requirements right and um so uh that's a little bit",
    "start": "1298000",
    "end": "1306960"
  },
  {
    "text": "uh can you read that that's I don't know something's broken with that slide so uh my point is with this slide is that The",
    "start": "1306960",
    "end": "1313679"
  },
  {
    "text": "collaboration between uh uh the Google Android team and Cradle has been also on a very deep and conceptual level and has",
    "start": "1313679",
    "end": "1320720"
  },
  {
    "text": "been uh yeah I would say uh very productive so so we learned a lot from",
    "start": "1320720",
    "end": "1327039"
  },
  {
    "text": "the way Savier and his team modeled the Android domain we said wow these are really cool concepts we can use for",
    "start": "1327039",
    "end": "1333679"
  },
  {
    "text": "other domains so if you now look at the Gradal C++ plugins uh and I know when you were looking the first time oh build",
    "start": "1333679",
    "end": "1339600"
  },
  {
    "text": "types I know a concept from somewhere right so uh uh this has really inspired us uh and and uh and influenced the way",
    "start": "1339600",
    "end": "1347039"
  },
  {
    "text": "we we now modeling other domains uh uh with with the same concept so that's pretty uh uh that's pretty cool and the",
    "start": "1347039",
    "end": "1352960"
  },
  {
    "text": "next iteration of gradal will have will have a common abstraction layer for concepts like build varants that that",
    "start": "1352960",
    "end": "1358400"
  },
  {
    "text": "have been originally introduced uh uh by Android all right so uh let's talk a little bit",
    "start": "1358400",
    "end": "1366000"
  },
  {
    "text": "about source sets uh so I'm sure a lot of you are familiar with that um so in Android we have you know like a lot of",
    "start": "1366000",
    "end": "1372080"
  },
  {
    "text": "languages so we have a lot of source folder for all of them so here um you know the default one is source main",
    "start": "1372080",
    "end": "1377280"
  },
  {
    "text": "right and then you're going to have a bunch of folders and and one file in it um and I mean there's a really like a",
    "start": "1377280",
    "end": "1383760"
  },
  {
    "text": "few that are missing there uh so the important part is that whenever you create a build type or flavor we have a version for that so you're going to have",
    "start": "1383760",
    "end": "1389840"
  },
  {
    "text": "you know source main that's the default one debug release is paid free so one for each of those",
    "start": "1389840",
    "end": "1395480"
  },
  {
    "text": "um uh component i I really don't have a generic name that represent build type and build and product flavor but you",
    "start": "1395480",
    "end": "1401440"
  },
  {
    "text": "know the build types are here the flavors are here what we also um oh yeah",
    "start": "1401440",
    "end": "1406720"
  },
  {
    "text": "so when we actually build you know any variant we basically take that so for ped IC debug we'll have both the main",
    "start": "1406720",
    "end": "1413440"
  },
  {
    "text": "source set and then we'll have debug ped and IC and for the other one we have the one that matches right uh and so we have",
    "start": "1413440",
    "end": "1420400"
  },
  {
    "text": "some uh we introduced that actually not too long ago um like a few months ago we have some additional source sets now",
    "start": "1420400",
    "end": "1426080"
  },
  {
    "text": "that we create uh so one of them is the full variant set so paid ICS debug um",
    "start": "1426080",
    "end": "1431679"
  },
  {
    "text": "and you have one for each of your variant and then we have another one that I call sort of like multi-lavor",
    "start": "1431679",
    "end": "1436960"
  },
  {
    "text": "which is basically the full variant minus the build type and that really only makes sense when you have more than",
    "start": "1436960",
    "end": "1442159"
  },
  {
    "text": "two flavors because when you have a single flavor dimension well that's already ped or when you don't have any",
    "start": "1442159",
    "end": "1448400"
  },
  {
    "text": "one that there's nothing um and also of course if you don't have any flavor well the variant is basically debug so it's",
    "start": "1448400",
    "end": "1455360"
  },
  {
    "text": "the same one as this one so of course it doesn't exist either so we have those additional source set and um so we have",
    "start": "1455360",
    "end": "1461200"
  },
  {
    "text": "some new priorities for them right because there's some combination on the source set so the in term of priority",
    "start": "1461200",
    "end": "1467440"
  },
  {
    "text": "right number one is higher priority of course you have the balance specific one because that's the most specific one uh then you have build type then the multi",
    "start": "1467440",
    "end": "1473760"
  },
  {
    "text": "flavor then the flavors and then the default and they are combined in kind of",
    "start": "1473760",
    "end": "1478880"
  },
  {
    "text": "like two different type of um strategy right on the right basically it's just a",
    "start": "1478880",
    "end": "1484480"
  },
  {
    "text": "union so if you have some source code in java uh in source main java and in",
    "start": "1484480",
    "end": "1489679"
  },
  {
    "text": "source debug java it's just two source folder but when we send that to the compile task it it's just one set of",
    "start": "1489679",
    "end": "1495760"
  },
  {
    "text": "source right and that provides a lot of flexibility that I will talk about in a moment and then on those one here so",
    "start": "1495760",
    "end": "1502000"
  },
  {
    "text": "that's the Android resource folder and then the asset folder we do merging so that allows you to do overlays so for",
    "start": "1502000",
    "end": "1508000"
  },
  {
    "text": "example if you want to override some you know resources in your debug version or in your variant specific version just",
    "start": "1508000",
    "end": "1514000"
  },
  {
    "text": "put a resource in there and then it will overlay whatever is in source main uh source main race and and of course the",
    "start": "1514000",
    "end": "1520400"
  },
  {
    "text": "manifest you know we have we introduced a few releases ago probably just around IO a new manifest merger that we've",
    "start": "1520400",
    "end": "1526960"
  },
  {
    "text": "increased improved a lot since then that does a lot of of merging of all those",
    "start": "1526960",
    "end": "1532640"
  },
  {
    "text": "manifest uh and you have a lot of fine grain control over like you know excluding things coming from a library",
    "start": "1532640",
    "end": "1538720"
  },
  {
    "text": "um you know figuring out merging strategy in case you have conflicts and things like that",
    "start": "1538720",
    "end": "1545000"
  },
  {
    "text": "um so um a big question that comes is well when should I use variant versus",
    "start": "1545000",
    "end": "1551840"
  },
  {
    "text": "when should I use just like you know dependency project right and and it's a it's a good question I don't have a you",
    "start": "1551840",
    "end": "1558960"
  },
  {
    "text": "know this is where when you should use one or when you should use the other one there's just like a lot of pros and cons",
    "start": "1558960",
    "end": "1564080"
  },
  {
    "text": "so you know source set allow sorry variant allow source set flexibility",
    "start": "1564080",
    "end": "1569120"
  },
  {
    "text": "which I will talk about in a moment u it allows flexibility also with the ability",
    "start": "1569120",
    "end": "1574559"
  },
  {
    "text": "to have two different dimension of flavor so you have to think about you know if you wanted to have paid versus",
    "start": "1574559",
    "end": "1579760"
  },
  {
    "text": "free and gingerbread versus ICS as sub project then you have well you have some",
    "start": "1579760",
    "end": "1585200"
  },
  {
    "text": "project for IC specific code and for gingerbread specific code and then maybe those are also you have a free and a",
    "start": "1585200",
    "end": "1592159"
  },
  {
    "text": "paid version of it and you know you get that explosion of project that h was talking about and that's just like difficult to to do uh but if you have a",
    "start": "1592159",
    "end": "1599440"
  },
  {
    "text": "regular you know a very simple use case you know a library project can give you advantages of just being",
    "start": "1599440",
    "end": "1607080"
  },
  {
    "text": "basically you know like for example you you want to you have different application that you ship on different",
    "start": "1607080",
    "end": "1612559"
  },
  {
    "text": "schedule and they all depend on a particular artifact library and you want to just publish that artifact and you",
    "start": "1612559",
    "end": "1618640"
  },
  {
    "text": "know it has its own release schedule and so that that gives you flexibility if you have like if you're a big company",
    "start": "1618640",
    "end": "1623760"
  },
  {
    "text": "that release different application that just you know share different type of code uh we'll take question at the end",
    "start": "1623760",
    "end": "1630320"
  },
  {
    "text": "okay um so if you look in term of source set uh flexibility that I was mentioning",
    "start": "1630320",
    "end": "1636400"
  },
  {
    "text": "if you have like you know if you use library project so you have your library here and you have two project using it",
    "start": "1636400",
    "end": "1642159"
  },
  {
    "text": "the code from project A and project B can of course access the code of your library but the code of your library cannot access project so you need to",
    "start": "1642159",
    "end": "1649279"
  },
  {
    "text": "make sure that it's all you know architectured properly which when you're start from a simple app saying hey I",
    "start": "1649279",
    "end": "1654960"
  },
  {
    "text": "want to make a game and you make your game and then later only you're like hm maybe I should make a free version of it",
    "start": "1654960",
    "end": "1660000"
  },
  {
    "text": "you know maybe you don't want to like re you know architecture everything to make that happen and so the source set here",
    "start": "1660000",
    "end": "1666000"
  },
  {
    "text": "you know same color so same project um and same really class path really when you build well in fact when you build",
    "start": "1666000",
    "end": "1672240"
  },
  {
    "text": "you either use source main and source ped or use source main and source free right you never use those two because",
    "start": "1672240",
    "end": "1677600"
  },
  {
    "text": "they're in the same dimension so they're always exclusive from one another u but the thing that's interesting is that the",
    "start": "1677600",
    "end": "1683360"
  },
  {
    "text": "code in source main can access the source code in source paid or in source free uh because it's you know as I said",
    "start": "1683360",
    "end": "1689440"
  },
  {
    "text": "earlier it's just like two source folder but they're passed to the same t compilation task so it means though that",
    "start": "1689440",
    "end": "1694960"
  },
  {
    "text": "you know when you compile let's say source main has some class that accept fu the class fu you need to make sure that the class fu in each version is",
    "start": "1694960",
    "end": "1702159"
  },
  {
    "text": "always in sync right it's API at least the API that is used from your main source code is always the same so you",
    "start": "1702159",
    "end": "1709120"
  },
  {
    "text": "know there's a little bit of well suddenly I need to manage two version of the same class which unfortunately we",
    "start": "1709120",
    "end": "1714480"
  },
  {
    "text": "don't really handle very well or at all I should say in studio but our goal is to have the ability that hey when you do",
    "start": "1714480",
    "end": "1720080"
  },
  {
    "text": "refactoring we should know that there's two version of the same class and we should just handle",
    "start": "1720080",
    "end": "1725120"
  },
  {
    "text": "after one but we we'll get there we'll get there um so so you know that that's one way of going um and then we have yet",
    "start": "1725120",
    "end": "1733120"
  },
  {
    "text": "another way of going is that well maybe you just want a single like you know source base and have just a couple of",
    "start": "1733120",
    "end": "1739520"
  },
  {
    "text": "flag here and there it's like hey if I'm running variant fu maybe I should do that and if I'm using that other variant",
    "start": "1739520",
    "end": "1744559"
  },
  {
    "text": "maybe I should do that instead right so that's what I would call feature flag um so feature flag is you know it's great",
    "start": "1744559",
    "end": "1751360"
  },
  {
    "text": "because you don't have to maintain that same class in both places um but you",
    "start": "1751360",
    "end": "1757120"
  },
  {
    "text": "know if you start having 200 flags maybe you should refactor your code a little bit you know so it it's really up to you",
    "start": "1757120",
    "end": "1762799"
  },
  {
    "text": "to figure out what you want to do now so for feature flag we have a great way to do that so you can technically create",
    "start": "1762799",
    "end": "1768000"
  },
  {
    "text": "your own flag right you could create a constant class and put it in source debug constant Java and then source uh",
    "start": "1768000",
    "end": "1776399"
  },
  {
    "text": "paid constant on Java you know and and maintain that yourself uh but we have this build config class that really you",
    "start": "1776399",
    "end": "1782320"
  },
  {
    "text": "should be using i'm always surprised that a lot of developers just don't seem to know about it so u it's generated",
    "start": "1782320",
    "end": "1787840"
  },
  {
    "text": "automatically for you there's a version for each variant and it contains a lot of default information already that's",
    "start": "1787840",
    "end": "1793120"
  },
  {
    "text": "very interesting so you have whether it's debuggable or not uh so if you're doing logging in like logging you know",
    "start": "1793120",
    "end": "1798480"
  },
  {
    "text": "and you don't want any login in your uh release code just do if debug and then when that becomes false uh the you know",
    "start": "1798480",
    "end": "1805120"
  },
  {
    "text": "compiler will just remove that uh you have your application ID so that's the package you have your build type you",
    "start": "1805120",
    "end": "1810399"
  },
  {
    "text": "have your version code and version name and then you have the flavor so here we have the full flavor which is you know generate free and then you have actually",
    "start": "1810399",
    "end": "1817600"
  },
  {
    "text": "the two flavor with the dimension right flavor API and flavor version um there but of course it's more interesting if",
    "start": "1817600",
    "end": "1823760"
  },
  {
    "text": "you can actually create your own so in the DSL you can very easily just create your own so before you could already do",
    "start": "1823760",
    "end": "1830240"
  },
  {
    "text": "that you know build config field string so here for example if you want to access a different server between debug",
    "start": "1830240",
    "end": "1835760"
  },
  {
    "text": "and release you create debug build config fix string server whatever your server is then you do the same thing in",
    "start": "1835760",
    "end": "1841120"
  },
  {
    "text": "release i I ran out of room so I couldn't put the release one and then you would put the same server string uh",
    "start": "1841120",
    "end": "1846919"
  },
  {
    "text": "server uh constant with a different value and then in your code you just access you know buildconfig.server",
    "start": "1846919",
    "end": "1852880"
  },
  {
    "text": "server and and it's always the right one and so what we just added actually uh",
    "start": "1852880",
    "end": "1858000"
  },
  {
    "text": "Monday on the version that released on Monday is the ability to do that per variant as well so here uh on the",
    "start": "1858000",
    "end": "1864320"
  },
  {
    "text": "variant object you can now do build config field and then you create a you know so here we create a boolean called",
    "start": "1864320",
    "end": "1869440"
  },
  {
    "text": "feature one and we say you know it's true only if the name of the release is",
    "start": "1869440",
    "end": "1874640"
  },
  {
    "text": "paid free release so that's a feature that you only enable on on paid free release um and we have race value which",
    "start": "1874640",
    "end": "1882320"
  },
  {
    "text": "is sort of similar uh instead of creating those config flags uh it creates actual resources Android",
    "start": "1882320",
    "end": "1888399"
  },
  {
    "text": "resources um and so uh you know we used to have that also on debug and we also have that now on application variant and",
    "start": "1888399",
    "end": "1895520"
  },
  {
    "text": "because those are you know high you know they're variant level so they're high priority and so they will override also",
    "start": "1895520",
    "end": "1901279"
  },
  {
    "text": "anything else that that you have okay so um I talked earlier about",
    "start": "1901279",
    "end": "1907120"
  },
  {
    "text": "using flavors to do packaging you know ARM versus x86 and it used to be an interesting way of doing it um and it's",
    "start": "1907120",
    "end": "1915840"
  },
  {
    "text": "deprecated in favor of space so uh the idea you know do you remember that big you know flow that I showed you earlier",
    "start": "1915840",
    "end": "1922799"
  },
  {
    "text": "uh that was one variant right so imagine doing you know ARM versus X86 and then",
    "start": "1922799",
    "end": "1928799"
  },
  {
    "text": "MEIPS and then ARM 64-bit and then x86 64 bit like you have a lot of dimension you have a lot of AI suddenly and",
    "start": "1928799",
    "end": "1935760"
  },
  {
    "text": "imagine that big flow repeated as many time as you have AI because flavors are",
    "start": "1935760",
    "end": "1940960"
  },
  {
    "text": "so flexible right you can provide custom manifest you can provide custom Java code you can provide a lot of things uh",
    "start": "1940960",
    "end": "1946480"
  },
  {
    "text": "we kind of we have to build them completely separately but when you just want to do packaging uh you know that's",
    "start": "1946480",
    "end": "1951760"
  },
  {
    "text": "not what you want to do now if you said that it's hard for the model to understand that your flavors are very",
    "start": "1951760",
    "end": "1957600"
  },
  {
    "text": "different only in packaging versus you know code because you could somewhere in",
    "start": "1957600",
    "end": "1964799"
  },
  {
    "text": "you know insert steps that suddenly adds extra bit of code and so it would be hard to detect that and so really we we",
    "start": "1964799",
    "end": "1971919"
  },
  {
    "text": "couldn't really just you know optimize the build so now with splits basically what we do is that we know that this is",
    "start": "1971919",
    "end": "1978720"
  },
  {
    "text": "going to be just a different packaging all the Java compilation progarding dexing",
    "start": "1978720",
    "end": "1983760"
  },
  {
    "text": "you know resource compilation all of those tasks that you know take a lot of time will be shared across every you",
    "start": "1983760",
    "end": "1990000"
  },
  {
    "text": "know splits basically so it's just a different packaging for the viant um and",
    "start": "1990000",
    "end": "1995519"
  },
  {
    "text": "we support density and u there there's some things that you",
    "start": "1995519",
    "end": "2001760"
  },
  {
    "text": "need to do around the version code but if you're already using multi APK you know that every APK has to have a different version code so we look at the",
    "start": "2001760",
    "end": "2008080"
  },
  {
    "text": "viant API that allow you to do that uh we don't have yet right now the ability to filter out a uh a split so for",
    "start": "2008080",
    "end": "2016880"
  },
  {
    "text": "example you know Freyo didn't have Intel you know support so you should be able to say hey for my for your version I",
    "start": "2016880",
    "end": "2023360"
  },
  {
    "text": "don't I want Intel we we'll add that soon uh so this is the AI again that",
    "start": "2023360",
    "end": "2029200"
  },
  {
    "text": "allow you to do that um so you just create a split item here you say density",
    "start": "2029200",
    "end": "2034720"
  },
  {
    "text": "um you say so by default we support every density we we will split for every density so here you start excluding we",
    "start": "2034720",
    "end": "2041120"
  },
  {
    "text": "have another API that says okay first I reset the list and then I just include what I want to use uh and then we",
    "start": "2041120",
    "end": "2047039"
  },
  {
    "text": "realized that well what you really want to do when you start splitting by density is having a custom manifest for",
    "start": "2047039",
    "end": "2052398"
  },
  {
    "text": "the compatible screen item right because compatible screen item in the manifest will say the the current density and",
    "start": "2052399",
    "end": "2058079"
  },
  {
    "text": "then which screen size you want to do so here you provide us with the list of screens that you actually support and",
    "start": "2058079",
    "end": "2063358"
  },
  {
    "text": "then we actually inject that into your manifest for you so that you don't have to maintain again a custom manifest just for all of those um and then AB oh uh",
    "start": "2063359",
    "end": "2071679"
  },
  {
    "text": "and then this one always create a universal APK with all the densities but you don't have to use it if you don't want to and then ABI something you know",
    "start": "2071679",
    "end": "2078800"
  },
  {
    "text": "you can exclude or include and then you can decide whether you want a fat binary or not and then studio will will deal",
    "start": "2078800",
    "end": "2085440"
  },
  {
    "text": "with that also um you know actually in you won't see those because it's purely a packaging but um we actually don't do",
    "start": "2085440",
    "end": "2092720"
  },
  {
    "text": "that yet but we want to make sure that when you you connect your phone and you say hey I want to deploy to that phone we'll only build the split that you ask",
    "start": "2092720",
    "end": "2099760"
  },
  {
    "text": "that you have that you can deploy right so we'll we'll query which uh we do that installation right now but when you",
    "start": "2099760",
    "end": "2106160"
  },
  {
    "text": "start building from studio we don't yet do that but we'll do that uh in the future okay so multile uh another",
    "start": "2106160",
    "end": "2113440"
  },
  {
    "text": "feature that was added uh maybe two weeks ago something like that all right so who's aware of the multileex issue",
    "start": "2113440",
    "end": "2120640"
  },
  {
    "text": "too many of you um okay so Dex for those who don't",
    "start": "2120640",
    "end": "2125839"
  },
  {
    "text": "know the dex format is limited to 65k method perex file as you can imagine you",
    "start": "2125839",
    "end": "2132160"
  },
  {
    "text": "know in 16 index so uh after uh starting with",
    "start": "2132160",
    "end": "2138480"
  },
  {
    "text": "lollipop uh we have native support for it so basically you can really split all your code into multiple dex format and",
    "start": "2138480",
    "end": "2145520"
  },
  {
    "text": "Android is smart enough now to say hey look there's multiple dex file inside the apk let me extract all of them",
    "start": "2145520",
    "end": "2151200"
  },
  {
    "text": "convert them them using the ahead of time compilation and then when the app start all your code is ready to go uh",
    "start": "2151200",
    "end": "2157280"
  },
  {
    "text": "that's not the case for uh five you know for before that so of course we couldn't release a",
    "start": "2157280",
    "end": "2163599"
  },
  {
    "text": "solution without having backward compatibility uh again because of that you know not every phone is running Lollipop yet uh so we have support",
    "start": "2163599",
    "end": "2171119"
  },
  {
    "text": "library that we shipped it's part of the Maven repository that we ship in the SDK um so what it does is that it's going to",
    "start": "2171119",
    "end": "2178000"
  },
  {
    "text": "be two things first gradle our plug-in now support computing exactly what needs",
    "start": "2178000",
    "end": "2183680"
  },
  {
    "text": "to go in those dex file because like after one after 5.0 you know Android",
    "start": "2183680",
    "end": "2189440"
  },
  {
    "text": "will just see all of those dex file and take them out and just use all of them right away without caring where the",
    "start": "2189440",
    "end": "2195200"
  },
  {
    "text": "classes are but the support library the way it works is basically it does that um so you know there's that line",
    "start": "2195200",
    "end": "2202880"
  },
  {
    "text": "multidex install uh that if you have your own application uh t application",
    "start": "2202880",
    "end": "2208320"
  },
  {
    "text": "class you need to use that if you don't have one the support library come with a small application task that you can just",
    "start": "2208320",
    "end": "2214800"
  },
  {
    "text": "insert in your manifest saying hey just go use whatever it is it's like com support com support multidex multidex",
    "start": "2214800",
    "end": "2222320"
  },
  {
    "text": "application something right so you can just use that directly um but to be able to do that the application needs to be",
    "start": "2222320",
    "end": "2227920"
  },
  {
    "text": "able to launch right to count uh and so to do that we have a computation in the",
    "start": "2227920",
    "end": "2233520"
  },
  {
    "text": "gradal file that will say look at all your code and say okay what is the minimum set of classes that I need to",
    "start": "2233520",
    "end": "2239520"
  },
  {
    "text": "slightly launch the application just enough to run that code that's going to go and manually go and find all of those",
    "start": "2239520",
    "end": "2245200"
  },
  {
    "text": "desk file and extract them from your IPK and convert them at this first launch and then load them on every launch uh so",
    "start": "2245200",
    "end": "2252400"
  },
  {
    "text": "we do that for you so that you don't have to do anything um and we have that support library so um that's really all",
    "start": "2252400",
    "end": "2259440"
  },
  {
    "text": "you have to do multidex enabled equal true and hopefully it works um and you can set that you know you know on the",
    "start": "2259440",
    "end": "2265520"
  },
  {
    "text": "build type you can set that on the flavor uh on the default configure you cannot set that at the variant level but so basically if you have your ped and",
    "start": "2265520",
    "end": "2271760"
  },
  {
    "text": "your free app and the paid app doesn't need it but the free app needs it i don't know what that would be but let's",
    "start": "2271760",
    "end": "2277119"
  },
  {
    "text": "imagine um you know you could set it on only one of the of the variants um now the native support is much better right",
    "start": "2277119",
    "end": "2284079"
  },
  {
    "text": "as I said earlier there's no computation needed dex will just receive could receive all your code just",
    "start": "2284079",
    "end": "2290560"
  },
  {
    "text": "create new classes and basically the way it works is it start writing a dex file when it reach 65k it just says hey it's full let's start a new file and let's go",
    "start": "2290560",
    "end": "2297680"
  },
  {
    "text": "but we have predexing in Gredle uh to try to runex through all of your dependencies and that's great because",
    "start": "2297680",
    "end": "2304720"
  },
  {
    "text": "before what we did with predexing if you didn't use multidex we would um we would predex all of your",
    "start": "2304720",
    "end": "2311599"
  },
  {
    "text": "dependencies and then once you redex the code of the main application we would merge all of that into a single dex file",
    "start": "2311599",
    "end": "2317920"
  },
  {
    "text": "well we don't even need to do that anymore we just pred we keep predicting and then we just package them all and",
    "start": "2317920",
    "end": "2322960"
  },
  {
    "text": "that's it done so it's much faster right if you just change your code of your main project and we just dex that one",
    "start": "2322960",
    "end": "2329359"
  },
  {
    "text": "and then we take the previous dex file for all your dependencies and we just package all of that and done so that's",
    "start": "2329359",
    "end": "2334480"
  },
  {
    "text": "going to be faster um and of course you don't need to shrink right like I know a lot of developers who are starting to",
    "start": "2334480",
    "end": "2340560"
  },
  {
    "text": "have to use progard even in their debug build because their app doesn't compile anymore so that's additional build time",
    "start": "2340560",
    "end": "2346640"
  },
  {
    "text": "and here you don't need to right it's fine if you have 200k method I don't know what kind of app would have 200k method but you could um and so you know",
    "start": "2346640",
    "end": "2354400"
  },
  {
    "text": "what I've been really recommending developer is hey you have flavors that allow you to do gingerbread versus IC or",
    "start": "2354400",
    "end": "2360720"
  },
  {
    "text": "gingerbread versus lollipop so you could create a lollipop only variant by creating a flavor that says you know hey",
    "start": "2360720",
    "end": "2366800"
  },
  {
    "text": "min SDK 21 plus and then when you use that for develop of course you need to deploy that to a lollipop device you",
    "start": "2366800",
    "end": "2373520"
  },
  {
    "text": "know or emulator uh but if you do that you're going to get much faster build time especially if you have a big app",
    "start": "2373520",
    "end": "2379920"
  },
  {
    "text": "right that needs to run through prog to be able to be installed just do that you know create that variant with variant",
    "start": "2379920",
    "end": "2385520"
  },
  {
    "text": "filter you can make it not even build like a release version it's only like your debug version and then um you know",
    "start": "2385520",
    "end": "2391760"
  },
  {
    "text": "Gradle automatically trigger you know change the the behavior whether your min SDK is 21 or below so whether it's",
    "start": "2391760",
    "end": "2398079"
  },
  {
    "text": "entering legacy mode or not is automatic for you you don't have to do anything and then that allows you really to uh",
    "start": "2398079",
    "end": "2404800"
  },
  {
    "text": "to have a faster build time because like the the multidlex legacy mode especially if you're also doing progard is really",
    "start": "2404800",
    "end": "2410960"
  },
  {
    "text": "like you know even slower than before we have to compute all those classes and we're looking at ways to at least better",
    "start": "2410960",
    "end": "2416880"
  },
  {
    "text": "support incremental mode for that legacy mode but you know making that work is complicated so we we want to make sure",
    "start": "2416880",
    "end": "2422720"
  },
  {
    "text": "that we get it right but for now that's a great workaround to have faster compilation time thanks to the",
    "start": "2422720",
    "end": "2428240"
  },
  {
    "text": "flexibility of of our plug-in um okay let's talk about uh variant APIs",
    "start": "2428240",
    "end": "2436000"
  },
  {
    "text": "a little bit because we we mentioned about that a little bit earlier uh to me that's like one of the great power of",
    "start": "2436000",
    "end": "2441359"
  },
  {
    "text": "our plug-in is you know you have this way of declaratively you know creating",
    "start": "2441359",
    "end": "2446480"
  },
  {
    "text": "your build types and your product flavor and yes you can have some custom logic to go and dynamically create flavors i'm",
    "start": "2446480",
    "end": "2453040"
  },
  {
    "text": "not sure what the really use case is there but some developer wanted it so it you know you can do that anyway grad just you know it's just a collection of",
    "start": "2453040",
    "end": "2458720"
  },
  {
    "text": "flavor you know you can write code to add flavors if you want to but the great power is you know manipulating it after",
    "start": "2458720",
    "end": "2464079"
  },
  {
    "text": "as I was saying like those those uh uh plug-in that do like you know that",
    "start": "2464079",
    "end": "2469440"
  },
  {
    "text": "instrument your code for performance tracking so the tooling API the sorry the variant API is really like you know",
    "start": "2469440",
    "end": "2475520"
  },
  {
    "text": "once we create all of those variants you know here they're created go in and do",
    "start": "2475520",
    "end": "2481119"
  },
  {
    "text": "whatever you want to modify them and you get access to uh you know the properties of the uh of",
    "start": "2481119",
    "end": "2489440"
  },
  {
    "text": "the um of the variant right which flavor and which build type it contains uh so",
    "start": "2489440",
    "end": "2495040"
  },
  {
    "text": "flavor when you have multiple dimension we actually merge them all together because there's an overlay mechanism as",
    "start": "2495040",
    "end": "2500640"
  },
  {
    "text": "well right if you have two two flavor pardon me if you have two flavors",
    "start": "2500640",
    "end": "2506319"
  },
  {
    "text": "and one says hey my application ID is com.fu and the other one says hey my application ID is com.bar bar well one",
    "start": "2506319",
    "end": "2512160"
  },
  {
    "text": "of them is going to win right they can't both win so we merge all of those flavors so we give you that flavor",
    "start": "2512160",
    "end": "2517680"
  },
  {
    "text": "object so that you can maybe verify that it's okay and long-term we want you to be able to also modify it right saying",
    "start": "2517680",
    "end": "2523119"
  },
  {
    "text": "well for that variant I want a different application ID would be nice so we we're not quite there yet but we want to give",
    "start": "2523119",
    "end": "2528480"
  },
  {
    "text": "access to that um we have specific configuration object like you know the build build config field that I",
    "start": "2528480",
    "end": "2535280"
  },
  {
    "text": "mentioned earlier the RA value um and and we get access to you know all the",
    "start": "2535280",
    "end": "2540880"
  },
  {
    "text": "tasks right that's what I was mentioning earlier you know we can query the variant to get access to all the desk task and dex task and go in and you know",
    "start": "2540880",
    "end": "2548880"
  },
  {
    "text": "grab its output convert them and then give new input to the dex so you have a lot of flexibility so let let's start",
    "start": "2548880",
    "end": "2554400"
  },
  {
    "text": "with a simple example here um so here um so the the the API right application",
    "start": "2554400",
    "end": "2561280"
  },
  {
    "text": "vantall it's important to put all uh because if you put H it's not going to",
    "start": "2561280",
    "end": "2567760"
  },
  {
    "text": "do anything so there's some timing issue with there where we really need to know uh everything about all your build type",
    "start": "2567760",
    "end": "2574880"
  },
  {
    "text": "and your variant before we create actually all your build type and your flavor be before we create any variance",
    "start": "2574880",
    "end": "2582240"
  },
  {
    "text": "and the only way to do that is to kind of like after all your code is passed we actually do things and so for those who",
    "start": "2582240",
    "end": "2589040"
  },
  {
    "text": "are not familiar with Rubyall is really like every item in that collection now currently present or future so when you",
    "start": "2589040",
    "end": "2595839"
  },
  {
    "text": "set up that closure here you know nothing is in the uh in the collection nothing happens and then later we create",
    "start": "2595839",
    "end": "2602640"
  },
  {
    "text": "all the variants and as we add them basically the the closure is actually applied to every",
    "start": "2602640",
    "end": "2609599"
  },
  {
    "text": "item that we add to the collection it's like a listener basically you hook in to container but I still see some developer",
    "start": "2609599",
    "end": "2615599"
  },
  {
    "text": "doing project after evaluate so after evaluate is a callback that you get after your project has been evaluated",
    "start": "2615599",
    "end": "2620640"
  },
  {
    "text": "and we do all our work in after evaluate so I see a lot of developer doing project after evaluate and then they do",
    "start": "2620640",
    "end": "2625760"
  },
  {
    "text": "the each because then they know that it's there uh it's kind of like useless you can just do all um so here what we",
    "start": "2625760",
    "end": "2633359"
  },
  {
    "text": "do is u on each variant we're going to basically change the output of the variant to be variant.name so the part",
    "start": "2633359",
    "end": "2639920"
  },
  {
    "text": "that we changed uh not too long ago maybe about a months ago is that you used to be able to just say variant.out",
    "start": "2639920",
    "end": "2646000"
  },
  {
    "text": "file and that was it but now that we introduce splits uh a variant is really more than one APK right a variant is",
    "start": "2646000",
    "end": "2652640"
  },
  {
    "text": "like your paid ICS debug version but you could have four APK for it you could have you know um medium density x86 high",
    "start": "2652640",
    "end": "2661440"
  },
  {
    "text": "density x86 medium density ARM identity arm right if you were doing two dimension of space so you get a",
    "start": "2661440",
    "end": "2668960"
  },
  {
    "text": "collection of output you can query those outputs to get a lot of ID a lot of things but you can do that one thing and",
    "start": "2668960",
    "end": "2675119"
  },
  {
    "text": "I will show you that more detail in a moment uh one thing that I want to mention here because I see a lot of developer getting that problem is that",
    "start": "2675119",
    "end": "2681359"
  },
  {
    "text": "they're like they have a great idea where they're going to they want to keep every single build that they have so they're going to put a time stamp in the",
    "start": "2681359",
    "end": "2687839"
  },
  {
    "text": "build uh name in the file name it's a great idea except that the way studio",
    "start": "2687839",
    "end": "2693359"
  },
  {
    "text": "works is that when you import or when you open your project studio through the",
    "start": "2693359",
    "end": "2699119"
  },
  {
    "text": "tooling API say hey gradle what's the model and part of the model is that file name so we get the model and then every",
    "start": "2699119",
    "end": "2706079"
  },
  {
    "text": "time we build we just you know we already recorded that file name um we're working with greaterware to have a",
    "start": "2706079",
    "end": "2711359"
  },
  {
    "text": "better way of getting a new version of the model on every build but right now we can't so basically every time we build we still use that recorded name",
    "start": "2711359",
    "end": "2718240"
  },
  {
    "text": "and we deploy that one even though maybe it built with a different name because the time stamp is in the file name so",
    "start": "2718240",
    "end": "2724880"
  },
  {
    "text": "don't make this you know uh different based on build uh you could do something where you know you could make a copy of",
    "start": "2724880",
    "end": "2732319"
  },
  {
    "text": "it if you really want to keep all of them um you can there's actually some property that tell you whether you're",
    "start": "2732319",
    "end": "2737520"
  },
  {
    "text": "being called from studio or not so you could make that dynamic say hey if I'm being called from studio always return",
    "start": "2737520",
    "end": "2744240"
  },
  {
    "text": "the same name because basically that property will be true whether you build or whether you quer the model but if I'm",
    "start": "2744240",
    "end": "2749520"
  },
  {
    "text": "being called not by studio which maybe CI server then I want to have a different name right you have flexibility uh to do whatever you want",
    "start": "2749520",
    "end": "2757280"
  },
  {
    "text": "uh so um let's you know uh let's talk about",
    "start": "2757280",
    "end": "2762720"
  },
  {
    "text": "those outputs here so this is an example that I was saying earlier like the multi APK stuff in",
    "start": "2762720",
    "end": "2768280"
  },
  {
    "text": "um in uh play store requires that every version code is different um and so you",
    "start": "2768280",
    "end": "2775920"
  },
  {
    "text": "basically have to create a new version code for all of those APKs and uh you know so we had to implement that it's",
    "start": "2775920",
    "end": "2781920"
  },
  {
    "text": "not just like a different packaging but we actually create a different manifest with just a different version code",
    "start": "2781920",
    "end": "2786960"
  },
  {
    "text": "there's a little bit of trick to do there um and so here what we do basically is we look on the output so",
    "start": "2786960",
    "end": "2792880"
  },
  {
    "text": "first I create a random map saying hey you know my version code for MDPI is one the GPI is two you know whatever and",
    "start": "2792880",
    "end": "2799040"
  },
  {
    "text": "then here I query my output saying hey what's the density filter on it and then I use that as a key on my map and then I",
    "start": "2799040",
    "end": "2804800"
  },
  {
    "text": "make a composite version code of you know it's basically you know the higher you know",
    "start": "2804800",
    "end": "2812760"
  },
  {
    "text": "uh you know higher priority bit is basically the the density and then the rest is your actual version code and it's up to you to figure out your actual",
    "start": "2813520",
    "end": "2819839"
  },
  {
    "text": "scheme you know how many digits you put for the actual version code that you have and if you have a lot of densities",
    "start": "2819839",
    "end": "2825200"
  },
  {
    "text": "like if you have if you have split plus a density for you know gingerbread versus lollipop for example you're going",
    "start": "2825200",
    "end": "2832240"
  },
  {
    "text": "to have that composite version code is going you have a lot of different you know sections right there's going to be your version code uh and then you know",
    "start": "2832240",
    "end": "2839119"
  },
  {
    "text": "you're going to have you know probably split and then the like the the API level should always be the higher",
    "start": "2839119",
    "end": "2845359"
  },
  {
    "text": "version uh so that should be the first one the higher order one uh so you have to compose that yourself there's really",
    "start": "2845359",
    "end": "2851920"
  },
  {
    "text": "no other way for you to do that uh because we can't really figure out the scheme for you and you know any other",
    "start": "2851920",
    "end": "2858079"
  },
  {
    "text": "build system that doesn't give you the ability to write a little bit of code for that would just not work well with multi APK um and then you just basically",
    "start": "2858079",
    "end": "2865520"
  },
  {
    "text": "say hey you know I want to create the output with that particular version code you can also change the version name so here I just put the version code in",
    "start": "2865520",
    "end": "2871359"
  },
  {
    "text": "there uh because some developers have asked us to be able to you know when you look at the about box or whatever you",
    "start": "2871359",
    "end": "2877280"
  },
  {
    "text": "can see what the version name is or when you look about the app or stuff actually um okay and then finally adding steps is",
    "start": "2877280",
    "end": "2885200"
  },
  {
    "text": "Um uh so it's very easy to right so so we looked at a richer model of what a",
    "start": "2885200",
    "end": "2892800"
  },
  {
    "text": "variant is and some of its properties but really down below to like a much lower level there's just task in the end",
    "start": "2892800",
    "end": "2899599"
  },
  {
    "text": "and so here what we do is um ultimately we do that right we create a so let's",
    "start": "2899599",
    "end": "2905520"
  },
  {
    "text": "let's create a task first so task create that's the standard like if you ever created you know task manually in gr",
    "start": "2905520",
    "end": "2911440"
  },
  {
    "text": "that's the way you do it you pass it a name and you pass it a type so type jar here So that that particular example is very simple it's like hey the output of",
    "start": "2911440",
    "end": "2917520"
  },
  {
    "text": "the Java compilation is a folder full of class file let's make a jar out of that and send that to Dex which is really not",
    "start": "2917520",
    "end": "2922960"
  },
  {
    "text": "needed but that's an example um so here the name all those tasks have to be unique right you can't create two you",
    "start": "2922960",
    "end": "2930160"
  },
  {
    "text": "know jar my code task right it has so we have a pattern in in in our plug-in where we it's always like you know jar",
    "start": "2930160",
    "end": "2937040"
  },
  {
    "text": "and then the variant name or process variant name manifest right so process debug manifest process release manifest",
    "start": "2937040",
    "end": "2943119"
  },
  {
    "text": "so the variant provide a name and we guarantee that name is unique so do use it in your task um so we create that",
    "start": "2943119",
    "end": "2949359"
  },
  {
    "text": "task and then after what we need to do is make that task depend on the Java compile task so that it runs after uh",
    "start": "2949359",
    "end": "2955040"
  },
  {
    "text": "and then uh we make the test task run you know depend on this task and then we",
    "start": "2955040",
    "end": "2960240"
  },
  {
    "text": "change the output actually there's you know well here you would wire the output from the Java compile task and then we",
    "start": "2960240",
    "end": "2965280"
  },
  {
    "text": "see here you know the the input file of the desk desk task is you know my uh the",
    "start": "2965280",
    "end": "2970960"
  },
  {
    "text": "output of my task uh we do want to provide better API to do that because it's kind of like you know well first",
    "start": "2970960",
    "end": "2977760"
  },
  {
    "text": "you need to know that it's like hey it's input files um and we need to make sure that we don't change that under you so",
    "start": "2977760",
    "end": "2983280"
  },
  {
    "text": "that your plug-in breaks um and I typically by code manipulation is something that apparently a lot of",
    "start": "2983280",
    "end": "2988880"
  },
  {
    "text": "plugins are doing and so we want to provide you know some API to help you get you know do that kind of thing u but",
    "start": "2988880",
    "end": "2995680"
  },
  {
    "text": "you have you know if you're like really brave and you're okay with potentially having your custom logic break whenever",
    "start": "2995680",
    "end": "3002319"
  },
  {
    "text": "you update plug-in um you know you can access everything from those task here",
    "start": "3002319",
    "end": "3008240"
  },
  {
    "text": "right so you can go look at the source code it's open source and just go at it and you know and change whatever you",
    "start": "3008240",
    "end": "3013359"
  },
  {
    "text": "want uh it's up to you you know we try at least in the source code to have some comment about hey this is a private API",
    "start": "3013359",
    "end": "3019520"
  },
  {
    "text": "and this is a public API it's it's hard to actually enforce that but we put some comments in the source code that show",
    "start": "3019520",
    "end": "3025520"
  },
  {
    "text": "what's really public and what's not public and we're working on a DSL reference doc for for Wo that will show",
    "start": "3025520",
    "end": "3030960"
  },
  {
    "text": "all the properties that we already support although that won't include those yet but we'll we'll include them",
    "start": "3030960",
    "end": "3036559"
  },
  {
    "text": "shortly after um but technically you know you can go and use whatever you want if you're ready to maintain it",
    "start": "3036559",
    "end": "3043200"
  },
  {
    "text": "whenever you know we change things it's it's totally possible um I want to I'm",
    "start": "3043200",
    "end": "3049200"
  },
  {
    "text": "going to run very quickly through dependency management because that's really a big feature of Gradle and one of the reason also that we chose Gradle",
    "start": "3049200",
    "end": "3055680"
  },
  {
    "text": "right um so dependency management is very important and we have uh we have three scopes we have compile time right",
    "start": "3055680",
    "end": "3062160"
  },
  {
    "text": "that's provided package only and compile uh so provided is only sent to the java",
    "start": "3062160",
    "end": "3067200"
  },
  {
    "text": "compilation but not packaged package is only package but not sent to the compile compile class path so that allow you to",
    "start": "3067200",
    "end": "3073359"
  },
  {
    "text": "provide different version of compile versus runtime if you wanted to and compile is both uh we do have and we",
    "start": "3073359",
    "end": "3079680"
  },
  {
    "text": "have those three scopes on you know again the main part that's shared for everyone and then all the debug all the",
    "start": "3079680",
    "end": "3086079"
  },
  {
    "text": "flavor all of that contains also those three so you have a whole bunch of configuration that you can really do",
    "start": "3086079",
    "end": "3091520"
  },
  {
    "text": "dependency the way you want uh what's new in 043 which is obsolete there's a 044",
    "start": "3091520",
    "end": "3098079"
  },
  {
    "text": "already um is uh variance specific configuration so a lot of developers",
    "start": "3098079",
    "end": "3103680"
  },
  {
    "text": "have asked for that if you want to have a compilation dependency that's very specific to p ICS debug you can do that",
    "start": "3103680",
    "end": "3109920"
  },
  {
    "text": "and also we provide the the multi-lavor one um it's uh right so so there's one small",
    "start": "3109920",
    "end": "3116720"
  },
  {
    "text": "limitation is um due to some timing that we are working on to fix is uh when you",
    "start": "3116720",
    "end": "3123280"
  },
  {
    "text": "want to use a multi-lavor or variant dependency you have to create it first because by the time you know I mentioned",
    "start": "3123280",
    "end": "3129040"
  },
  {
    "text": "after evaluate earlier by the time we actually create the variant you know that code would have been executed already and that would not have been",
    "start": "3129040",
    "end": "3136000"
  },
  {
    "text": "created yet so you really need to you create it first you define all your flavor all your stuff in here and then",
    "start": "3136000",
    "end": "3141839"
  },
  {
    "text": "you use it and then when we create the variant and we say hey you created that variant we need a configuration object",
    "start": "3141839",
    "end": "3147040"
  },
  {
    "text": "for it we'll be like there's already one let's use it and it will work uh so it's kind of it's a crappy limitation as I",
    "start": "3147040",
    "end": "3153760"
  },
  {
    "text": "said you know we're working on on a lot of improvement to in grad to to make that work better uh but right now that's",
    "start": "3153760",
    "end": "3159119"
  },
  {
    "text": "a limitation so um right so before I mention that well actually I I would mention that on that side so you know",
    "start": "3159119",
    "end": "3166079"
  },
  {
    "text": "all those dependency scope that you have like debug main or compile and then debug compile all of that when you build",
    "start": "3166079",
    "end": "3172720"
  },
  {
    "text": "paid ICS debug we take all of the configuration and we tell grad that this",
    "start": "3172720",
    "end": "3178480"
  },
  {
    "text": "is one configuration made up of all of those just resolve all of that so if you have let's say guava 15 in in compile",
    "start": "3178480",
    "end": "3185440"
  },
  {
    "text": "and guava 17 in debug compile the 17 will win you won't get both right it will just do the right thing um now we",
    "start": "3185440",
    "end": "3192720"
  },
  {
    "text": "have the ability to embed Wear APK we added that a few months ago around IO I think but now we also we used to only",
    "start": "3192720",
    "end": "3199440"
  },
  {
    "text": "have where app so you couldn't embed a different version depending on your flavor so now we can in 043 you have ICS",
    "start": "3199440",
    "end": "3205839"
  },
  {
    "text": "where app now for example so here we have to do something different though we can't just take everything and say hey suddenly if you're building IC you're",
    "start": "3205839",
    "end": "3212319"
  },
  {
    "text": "going to get the default version plus the other one because then we would package two version and we can't package two version of your mic we can only",
    "start": "3212319",
    "end": "3218559"
  },
  {
    "text": "package one so here the behavior is slightly different is that we just take the highest priority one so if you put a",
    "start": "3218559",
    "end": "3224640"
  },
  {
    "text": "paid ICS debug where app with another one we would use this one only for p ICS",
    "start": "3224640",
    "end": "3229680"
  },
  {
    "text": "where so the behavior is slightly different but you have the same flexibility as you have in in the regular compile and provided in package",
    "start": "3229680",
    "end": "3236640"
  },
  {
    "text": "scope um dependency management yeah so",
    "start": "3236640",
    "end": "3242280"
  },
  {
    "text": "um yeah so uh to give you some some perspective cradle is used not not just",
    "start": "3242280",
    "end": "3248000"
  },
  {
    "text": "in the Android world it's used for building some of the biggest software stacks in the world right and dependency management is is a big problem it's it's",
    "start": "3248000",
    "end": "3255119"
  },
  {
    "text": "not a solved problem yet right so there there are many issues we are uh we have started to provide solutions for so for",
    "start": "3255119",
    "end": "3262200"
  },
  {
    "text": "example simple problem is are you want to tell your dependency management system hey whatever is in my transitive",
    "start": "3262200",
    "end": "3269200"
  },
  {
    "text": "graph uh Please be aware that uh Google collections has been replaced by Guava",
    "start": "3269200",
    "end": "3275520"
  },
  {
    "text": "right so uh uh uh another thing is you have aggregations well there has to be a",
    "start": "3275520",
    "end": "3281680"
  },
  {
    "text": "certain module and then it has been split into multiple pieces in in later versions so and and with with standard",
    "start": "3281680",
    "end": "3289359"
  },
  {
    "text": "Maven dependency management there's no way you can tell this to the dependency resolution engine so this all stuff you",
    "start": "3289359",
    "end": "3296240"
  },
  {
    "text": "can do you can do with Gradel uh and one thing that we're seeing is that um I'm",
    "start": "3296240",
    "end": "3302000"
  },
  {
    "text": "not sure what the situation is for you so uh the traditional setup for Android teams was that they were pretty isolated",
    "start": "3302000",
    "end": "3308800"
  },
  {
    "text": "group in the organization when it cames to the delivery pipeline right and uh and also how the organization was",
    "start": "3308800",
    "end": "3314800"
  },
  {
    "text": "structured what we're now seeing in many organizations LinkedIn is for example one example they're now completely reorganizing their teams there's no",
    "start": "3314800",
    "end": "3320800"
  },
  {
    "text": "longer the Android team and the iOS team and the JavaScript team they're they're now the teams are now organized uh",
    "start": "3320800",
    "end": "3327920"
  },
  {
    "text": "around the features right they they're working on right and then everyone so that is a that is that means uh uh iOS",
    "start": "3327920",
    "end": "3335200"
  },
  {
    "text": "and Android developers and and and JavaScript developers it's all one team uh uh and and that pushes puts a lot of",
    "start": "3335200",
    "end": "3342160"
  },
  {
    "text": "pressure on having a much more coherent delivery pipeline and and that and then",
    "start": "3342160",
    "end": "3347280"
  },
  {
    "text": "you get into a more complex situation and then this stuff becomes interesting right once you're not just building uh one app but once you have a lot of",
    "start": "3347280",
    "end": "3354000"
  },
  {
    "text": "dependencies ies are that is constantly changing in your organization and the large dependency graph uh there powerful",
    "start": "3354000",
    "end": "3360799"
  },
  {
    "text": "dependency management is super important right that you don't have a fragile class path that that that where you just",
    "start": "3360799",
    "end": "3366640"
  },
  {
    "text": "be lucky that the order in the class path is right that that things are not collapsing right uh uh another thing",
    "start": "3366640",
    "end": "3371920"
  },
  {
    "text": "that you can do is is is rich selection so you can say hey uh uh gradel on defaf",
    "start": "3371920",
    "end": "3378160"
  },
  {
    "text": "uh give me the latest let's say uh uh latest fu right whatever is there and",
    "start": "3378160",
    "end": "3383599"
  },
  {
    "text": "then you can say on QA well great give me the latest few but one that hasn't the term that hasn't has the name better",
    "start": "3383599",
    "end": "3389760"
  },
  {
    "text": "in its version string so you can do some really smart binary integration give me the latest that obeys some constraint so",
    "start": "3389760",
    "end": "3396640"
  },
  {
    "text": "for modeling a rich continuous delivery pipeline those are very powerful features for Android what will be very",
    "start": "3396640",
    "end": "3402160"
  },
  {
    "text": "interesting and and that will come very soon is a variant aware dependency management what does it mean who views",
    "start": "3402160",
    "end": "3407520"
  },
  {
    "text": "using Android is creating Android libraries right so uh and Android libraries can have a can have a build",
    "start": "3407520",
    "end": "3414480"
  },
  {
    "text": "type right so there can be and at the moment when you publish an Android library you only can publish the release",
    "start": "3414480",
    "end": "3420160"
  },
  {
    "text": "version correct right because the dependency management doesn't understand the concept of of variant right and and",
    "start": "3420160",
    "end": "3426640"
  },
  {
    "text": "what we are working on is a dependency management that understands uh that you want a certain library let's call it fu",
    "start": "3426640",
    "end": "3433760"
  },
  {
    "text": "right but and when you say hey cradle I now build my Android app uh uh in debug",
    "start": "3433760",
    "end": "3440319"
  },
  {
    "text": "mode then it automatically gets foo in the debug variant and if foo has another",
    "start": "3440319",
    "end": "3446319"
  },
  {
    "text": "library dependency moo right it get also the debug variant and and the debug",
    "start": "3446319",
    "end": "3451440"
  },
  {
    "text": "variant can have a completely different transitive graph than the release variant So that is something we're",
    "start": "3451440",
    "end": "3456640"
  },
  {
    "text": "working on and I think will be a a cool feature first for Android and then also for many other languages i think every",
    "start": "3456640",
    "end": "3463280"
  },
  {
    "text": "every domain has that problem right uh okay so before we start the Q&A yeah",
    "start": "3463280",
    "end": "3469520"
  },
  {
    "text": "let's go uh relatively quickly yes through the road map um so uh",
    "start": "3469520",
    "end": "3475839"
  },
  {
    "text": "performance who's happy with performance in greater what wow you didn't notice that I did",
    "start": "3475839",
    "end": "3482559"
  },
  {
    "text": "not raise my hand either well okay you just raised your hand but you're using Maven right no we use Yeah he was the",
    "start": "3482559",
    "end": "3490079"
  },
  {
    "text": "one guy raising his hand about Maven but we use locally for local our development",
    "start": "3490079",
    "end": "3496160"
  },
  {
    "text": "we use oh okay the production app is built by Okay um so we well aware that",
    "start": "3496160",
    "end": "3503200"
  },
  {
    "text": "there's a issue with it performance um a lot of it is really on our side like on the Android side where you know Dex is",
    "start": "3503200",
    "end": "3510480"
  },
  {
    "text": "not really incremental um you know progard is not incremental compilation of resources is not incremental uh you",
    "start": "3510480",
    "end": "3516640"
  },
  {
    "text": "know and we have some project internally that takes several minutes to merge the to process the resources uh the merging",
    "start": "3516640",
    "end": "3522960"
  },
  {
    "text": "is incremental of the resources um you know merging manifest is not but it's not really a problem uh so we know that",
    "start": "3522960",
    "end": "3529280"
  },
  {
    "text": "there's a lot of issues where we can solve things and we are going to actively work on that um on the gradal",
    "start": "3529280",
    "end": "3535680"
  },
  {
    "text": "side yes yes so I mean the thing is if you compare us to the classical build",
    "start": "3535680",
    "end": "3541119"
  },
  {
    "text": "systems in that area Gradel is a is a fast build system but uh the point is we",
    "start": "3541119",
    "end": "3546880"
  },
  {
    "text": "got we got very ambitious what we want to do right so and and that is kind of pushing what is perceived as fast so uh",
    "start": "3546880",
    "end": "3554640"
  },
  {
    "text": "so first of all I think uh uh so so we we continuously uh working on on on many",
    "start": "3554640",
    "end": "3561839"
  },
  {
    "text": "little pieces to make the performance improvement better so I think with 014 which is using gradal 21 there's been a",
    "start": "3561839",
    "end": "3568480"
  },
  {
    "text": "significant boost for for the performance for many Android projects kind of 20 30% for many projects because",
    "start": "3568480",
    "end": "3575040"
  },
  {
    "text": "we we did a much more efficient class loading for external plugins right and the next version of gradel has now",
    "start": "3575040",
    "end": "3581440"
  },
  {
    "text": "functionality that keeps the whole class loader warm in a demon so we should once once is consuming that we should see see",
    "start": "3581440",
    "end": "3588400"
  },
  {
    "text": "another nice nice improvement so there are many many areas where you can improve the performance uh uh many",
    "start": "3588400",
    "end": "3594640"
  },
  {
    "text": "little stuff that that adds up but then we do also some some deep very deep work",
    "start": "3594640",
    "end": "3600799"
  },
  {
    "text": "at the moment to push gradal basically to to a new performance level and uh uh",
    "start": "3600799",
    "end": "3606079"
  },
  {
    "text": "so and the key for that is uh uh that we're working on a much richer configuration model so first of all this",
    "start": "3606079",
    "end": "3611680"
  },
  {
    "text": "has a benefit in itself who of you has ever used after evaluate in modifying yeah and it kind of sucks right it's",
    "start": "3611680",
    "end": "3618720"
  },
  {
    "text": "kind of in terms of I mean it's great again compared to and and other build system wonderful right but because this",
    "start": "3618720",
    "end": "3625599"
  },
  {
    "text": "ecosystem is now getting so rich gradal extended by Android android extended by other plugins after evaluate gets a",
    "start": "3625599",
    "end": "3632079"
  },
  {
    "text": "little bit crowded and that's why we also have situations like with the configuration that you can't do it the",
    "start": "3632079",
    "end": "3637440"
  },
  {
    "text": "way you want to do it we have like some people telling their developer hey you need to apply your plug-in after you do",
    "start": "3637440",
    "end": "3643200"
  },
  {
    "text": "this because well after evaluate it's just a straight up list right and so you can't really manage that it's like you",
    "start": "3643200",
    "end": "3648880"
  },
  {
    "text": "know having to manually maintain the proper list of plug-in just doesn't make a lot of sense so and that is so that is",
    "start": "3648880",
    "end": "3654240"
  },
  {
    "text": "an ordering issue we just need to provide a richer model we will provide a craft model for configuration actions",
    "start": "3654240",
    "end": "3659280"
  },
  {
    "text": "and that will be will will be very elegant solution to that whether you use it directly or you you now enjoy a",
    "start": "3659280",
    "end": "3666400"
  },
  {
    "text": "plug-in system that is much better integrated doesn't matter it will benefit all of you so uh but the other",
    "start": "3666400",
    "end": "3671599"
  },
  {
    "text": "thing a richer configuration model allows us is to reliably store the",
    "start": "3671599",
    "end": "3677680"
  },
  {
    "text": "cradle model at the moment we always have to recreate it because we don't know exactly what is going on in your build script right you could have system",
    "start": "3677680",
    "end": "3683760"
  },
  {
    "text": "current time millies everywhere and we have no way we have no idea do we need to recreate a model or not with the new",
    "start": "3683760",
    "end": "3689760"
  },
  {
    "text": "configuration model we have much more knowledge and we know hey nothing nothing has changed in that build we are",
    "start": "3689760",
    "end": "3696079"
  },
  {
    "text": "sure so we can persist it we can reuse it and that is a that would be a a key",
    "start": "3696079",
    "end": "3701280"
  },
  {
    "text": "thing getting the configuration time to zero basically especially with the Android that's super important like",
    "start": "3701280",
    "end": "3707359"
  },
  {
    "text": "every time you change your build.gradal grad file in studio and you click sync right it has to reevaluate all of those",
    "start": "3707359",
    "end": "3712640"
  },
  {
    "text": "project and we have some project inside Google that have like you know couple hundred you know project and it takes a",
    "start": "3712640",
    "end": "3718799"
  },
  {
    "text": "couple of minutes to evaluate so every time you click sync it takes like three minutes or something like that yeah so even for every re-evaluation the thing",
    "start": "3718799",
    "end": "3725200"
  },
  {
    "text": "is incremental build is only for execution even what even if you don't change the build script the build always",
    "start": "3725200",
    "end": "3731359"
  },
  {
    "text": "is re-evaluated and that that's going to change uh it will also allow a much more efficient configuration because we need",
    "start": "3731359",
    "end": "3737359"
  },
  {
    "text": "to uh we need to we need to configure less and last but not least and that's",
    "start": "3737359",
    "end": "3742880"
  },
  {
    "text": "we will have parallel task execution because we're now reaching a point where we're saying hey it's so cool that you",
    "start": "3742880",
    "end": "3748480"
  },
  {
    "text": "don't have to have all those sub projects but the only way you can have parallel execution and greater is",
    "start": "3748480",
    "end": "3753640"
  },
  {
    "text": "actually having stuff across sub project that's not that's not a very good story so there will be parallel task execution",
    "start": "3753640",
    "end": "3760119"
  },
  {
    "text": "also soon to come so so this this will be a real jump when it comes to gradal",
    "start": "3760119",
    "end": "3766160"
  },
  {
    "text": "responsiveness and and and gradal performance behavior and uh and what is him there's other stuff we're doing uh",
    "start": "3766160",
    "end": "3772960"
  },
  {
    "text": "you know there's the greater demon the greater demon will become uh much more powerful will we will work on a",
    "start": "3772960",
    "end": "3778319"
  },
  {
    "text": "preemptive mode that the greater demon constantly check in a watch mode what is changing if the build script has changed",
    "start": "3778319",
    "end": "3783920"
  },
  {
    "text": "right it will immediately uh uh renew the model things like that so and this is stuff is not this not 2016 right we",
    "start": "3783920",
    "end": "3790880"
  },
  {
    "text": "are working already with organizations on that to make that a reality so um uh",
    "start": "3790880",
    "end": "3796319"
  },
  {
    "text": "yeah there's other stuff we can do to improve the build output cach so one thing why you've introduced the splits",
    "start": "3796319",
    "end": "3801920"
  },
  {
    "text": "we will anyhow increase some basic efficiency to to to uh uh uh to have a",
    "start": "3801920",
    "end": "3807520"
  },
  {
    "text": "better reuse of build output across task and across builds so and to give you an",
    "start": "3807520",
    "end": "3813039"
  },
  {
    "text": "understanding uh uh this is pushed from two sides so there's there's the Android Studio side that even with small",
    "start": "3813039",
    "end": "3818559"
  },
  {
    "text": "projects when you have a rich interaction with the build system every second count and on the other side you mentioned the large internal Google",
    "start": "3818559",
    "end": "3824480"
  },
  {
    "text": "project LinkedIn is having a 4,000 subm module gradal build right so they all so",
    "start": "3824480",
    "end": "3830160"
  },
  {
    "text": "we get pushed from the very large scale code bases as well as from also smaller projects that have a rich integr in",
    "start": "3830160",
    "end": "3836240"
  },
  {
    "text": "integration with the IDE and uh they all need the same thing and we we're getting there so you should be able to see the",
    "start": "3836240",
    "end": "3842960"
  },
  {
    "text": "first experimental results of that uh uh in the next months right so that's",
    "start": "3842960",
    "end": "3848000"
  },
  {
    "text": "that's so it's a yeah it's definitely a big focus for us um yeah let's do you",
    "start": "3848000",
    "end": "3853520"
  },
  {
    "text": "want to talk about Yeah no let's let's skip that i mean there's a lot of other stuff we're working on so it's not just Android right so and reality is our",
    "start": "3853520",
    "end": "3860000"
  },
  {
    "text": "hogerous software stack so okay so on the on the Android side uh we have some",
    "start": "3860000",
    "end": "3865440"
  },
  {
    "text": "uh work on incremental dexing uh it's going to take a while for us to switch but we hope to to show something relatively quickly um same thing for",
    "start": "3865440",
    "end": "3872400"
  },
  {
    "text": "incremental resource compilation right i was just mentioning that running AP is just one step and so we're we're going to work on that um and we definitely",
    "start": "3872400",
    "end": "3879359"
  },
  {
    "text": "want to improve the deployment during development cycle where you know it would be nice not to have to redeploy",
    "start": "3879359",
    "end": "3884559"
  },
  {
    "text": "the whole APK every time um testing is also a big area you know after performance that we want to do um we do",
    "start": "3884559",
    "end": "3890720"
  },
  {
    "text": "realize that there's a lot of issue in testing you know unit testing and and you know better reporting and running those tests from the ID is definitely an",
    "start": "3890720",
    "end": "3896799"
  },
  {
    "text": "area that we want to focus on in 2015 and then finally NDK integration so you",
    "start": "3896799",
    "end": "3902000"
  },
  {
    "text": "know Hans showed like that example of u you know that new native plug-in that",
    "start": "3902000",
    "end": "3908559"
  },
  {
    "text": "they have and it's a great plug-in for us to to uh to build on top of so we",
    "start": "3908559",
    "end": "3913839"
  },
  {
    "text": "already have you know plugin that use that internally we haven't really released it because you know it's not",
    "start": "3913839",
    "end": "3918880"
  },
  {
    "text": "quite final on the gradal stuff so the API change regularly so you know it's hard for us to release something and say hey you know start using it if things",
    "start": "3918880",
    "end": "3925200"
  },
  {
    "text": "are going to change uh but it's definitely something that we're working actively on uh so those are you know",
    "start": "3925200",
    "end": "3930559"
  },
  {
    "text": "performance testing and and ADK integration is like the three to me like the three big thing that we want to work in 2015 all right um let's do questions",
    "start": "3930559",
    "end": "3939520"
  },
  {
    "text": "we have about 10 minutes for questions you raised your hand early on so the question I had was I think so uh the",
    "start": "3939520",
    "end": "3946400"
  },
  {
    "text": "question was about flavor for like library project you technically",
    "start": "3946400",
    "end": "3951599"
  },
  {
    "text": "um strictly speaking is a build type right yeah I mean you can have build type for",
    "start": "3951599",
    "end": "3958000"
  },
  {
    "text": "library project but you have to manually go in and tell it that you want to publish both and you have to in your app",
    "start": "3958000",
    "end": "3964000"
  },
  {
    "text": "go in and manually depend on them which doesn't really scale when you start having multiple flavors and so the the",
    "start": "3964000",
    "end": "3970480"
  },
  {
    "text": "new thing that Hans was talking about about the uh variant aware dependency management will help with that but",
    "start": "3970480",
    "end": "3976160"
  },
  {
    "text": "there's some ways to kind of sort of do it uh we can see that after uh in more",
    "start": "3976160",
    "end": "3982960"
  },
  {
    "text": "detail if you want help it depends I guess to some degree whether this library is part of one build whether",
    "start": "3982960",
    "end": "3988880"
  },
  {
    "text": "it's part of a multimodule build then you then it would be easy I guess to reuse it a little bit yeah or whether",
    "start": "3988880",
    "end": "3994799"
  },
  {
    "text": "it's whether you do it via repository well if you yeah if you deploy it to repository that's a bit",
    "start": "3994799",
    "end": "4001960"
  },
  {
    "text": "right so so there's a lot so right now because we're in pre 1.0 zero we sort of like you know we have very specific um",
    "start": "4004000",
    "end": "4012319"
  },
  {
    "text": "uh compatibility level between studio gradal and the gradal plugin uh that",
    "start": "4012319",
    "end": "4017599"
  },
  {
    "text": "will go away after 1.0 where uh I think our target is to have our plug-in",
    "start": "4017599",
    "end": "4022720"
  },
  {
    "text": "support 2.0 and above for gradal for plugin to support 2.0 and above and then",
    "start": "4022720",
    "end": "4028799"
  },
  {
    "text": "have studio work with or plug-in 1.0 and above and have our plug-in works with",
    "start": "4028799",
    "end": "4034960"
  },
  {
    "text": "studio 1.0 because you're above whatever the value is so all that pain that you have right now is because like we are",
    "start": "4034960",
    "end": "4040000"
  },
  {
    "text": "using some internal APIs and you know we are still figuring things out like the model that we exchanged between studio and and Gradle you know we had to",
    "start": "4040000",
    "end": "4046640"
  },
  {
    "text": "finalize it and to tweak it and you like when we introduced the split it was like well we need to add that in the model and so that now we're like we're good",
    "start": "4046640",
    "end": "4053440"
  },
  {
    "text": "and you know we also commit that when we will have to change things in the future we'll go through like long deprecation",
    "start": "4053440",
    "end": "4059760"
  },
  {
    "text": "period of you know adding stuff to the model but still supporting the old one so that if you old if you're in I don't",
    "start": "4059760",
    "end": "4066559"
  },
  {
    "text": "know it's like studio 2.0 you load a plugin a project using plug-in 1.0 it should work right and",
    "start": "4066559",
    "end": "4073119"
  },
  {
    "text": "we'll just make it work until 5.0 or whatever where we say \"Okay it's done right we we stop supporting really old",
    "start": "4073119",
    "end": "4079680"
  },
  {
    "text": "plugins.\" So we'll have we know that it's been very painful right now and and we'll but I mean the reason is pretty",
    "start": "4079680",
    "end": "4085359"
  },
  {
    "text": "simple so uh so Gradel is is extremely backwards compatible right but but the",
    "start": "4085359",
    "end": "4091920"
  },
  {
    "text": "but because we worked so closely together it was always about uh uh the latest version of Android Studio was",
    "start": "4091920",
    "end": "4098000"
  },
  {
    "text": "requiring the latest version of Gradel for some of the features that were required for some of the functionality",
    "start": "4098000",
    "end": "4103359"
  },
  {
    "text": "so and that is why we're always saying you need to upgrade to cradle not because of that and but that was that",
    "start": "4103359",
    "end": "4108880"
  },
  {
    "text": "was the pre10 deal basically right we don't guarantee backwards compatibility but cradle",
    "start": "4108880",
    "end": "4114159"
  },
  {
    "text": "itself a cradle a gradal build script uh uh uh during a major stream is always",
    "start": "4114159",
    "end": "4120238"
  },
  {
    "text": "backwards compatible and and now the Android plugin will enter the same will enter in the same game which is going to",
    "start": "4120239",
    "end": "4126640"
  },
  {
    "text": "be painful the Android plugin uses private API so we used to we used to but",
    "start": "4126640",
    "end": "4133040"
  },
  {
    "text": "We stopped not too long ago but we we don't use that anymore but also as Hans was doing we like every new version like",
    "start": "4133040",
    "end": "4138560"
  },
  {
    "text": "we were using some new features of Gradle and instead of like saying well if you use the old version then we won't",
    "start": "4138560",
    "end": "4143838"
  },
  {
    "text": "use it it's like hey we're pre10 let's just you know force everyone to move on that and private API is not necessarily",
    "start": "4143839",
    "end": "4149040"
  },
  {
    "text": "a problem because we work well together so even if there's some private API usage it doesn't mean uh we we we can we",
    "start": "4149040",
    "end": "4156159"
  },
  {
    "text": "can work that out that that this co-evolves properly so so that that that is something it is a little bit more",
    "start": "4156159",
    "end": "4161920"
  },
  {
    "text": "work uh for both of us to do but we will make sure that that this works and there's a there's a continuous uh",
    "start": "4161920",
    "end": "4168159"
  },
  {
    "text": "integration process between the Android plugin and gradal so yeah yeah doesn't really doesn't really help",
    "start": "4168159",
    "end": "4176080"
  },
  {
    "text": "what that is so it's not greater right it's either our plugin or",
    "start": "4176080",
    "end": "4181719"
  },
  {
    "text": "dex and then when I hit",
    "start": "4181719",
    "end": "4186080"
  },
  {
    "text": "run again it calls the compus right but it's not what is that it's not",
    "start": "4187000",
    "end": "4192960"
  },
  {
    "text": "Gradle itself it's it's somewhere you know yeah it's Dex that sends that uh yeah we'll have to look uh Dex is not",
    "start": "4192960",
    "end": "4200320"
  },
  {
    "text": "super awesome about really you know giving error code and we we need to improve that",
    "start": "4200320",
    "end": "4207040"
  },
  {
    "text": "in in general one other thing we we get out of the new configuration model is that you get more insights when things",
    "start": "4207040",
    "end": "4212880"
  },
  {
    "text": "go wrong at the moment sometimes but anyhow this this is not related to that it's just a general thing so we we",
    "start": "4212880",
    "end": "4218480"
  },
  {
    "text": "appreciate anyhow I think both of us that we that we want to we want to give good feedback if things are not working",
    "start": "4218480",
    "end": "4224400"
  },
  {
    "text": "out so there there is there is room for improvements on the Android plug-in side but also on the gradal side so but yeah",
    "start": "4224400",
    "end": "4230719"
  },
  {
    "text": "we have to responsibility",
    "start": "4230719",
    "end": "4236760"
  },
  {
    "text": "no people hit that with well yeah well for probably different reason",
    "start": "4240080",
    "end": "4246239"
  },
  {
    "text": "because that one seem to be mult one but like the unexpected top level exception happen in DX whenever you do something",
    "start": "4246239",
    "end": "4251760"
  },
  {
    "text": "that it's not happy about so I've seen that happen in in like in edit and yeah we need to go in and ask the DX team to",
    "start": "4251760",
    "end": "4259440"
  },
  {
    "text": "fix it please my question is about auto compile",
    "start": "4259440",
    "end": "4267960"
  },
  {
    "text": "that will useful yeah uh so yeah autocomp completion on grad file so we",
    "start": "4268760",
    "end": "4275600"
  },
  {
    "text": "have a little bit of it uh it's not awesome um it's definitely something we",
    "start": "4275600",
    "end": "4280800"
  },
  {
    "text": "want to do but it's it's something where you know we need to we want to have some",
    "start": "4280800",
    "end": "4286480"
  },
  {
    "text": "sort of um API so that a plug-in can contribute through that tooling API to",
    "start": "4286480",
    "end": "4292320"
  },
  {
    "text": "an ID or whatever saying hey here's my DSL spec or whatever so that because",
    "start": "4292320",
    "end": "4297360"
  },
  {
    "text": "right now we had to hardcode that into studio where I say hey you know if you're inside of Android one you have access to build types or product flavors",
    "start": "4297360",
    "end": "4303199"
  },
  {
    "text": "and it's very manual uh it's something that we need to incorporate on to make sure that we can make something automatic i have another question",
    "start": "4303199",
    "end": "4310960"
  },
  {
    "text": "yes yeah so so yeah that is the thing is I mean one step at a time uh yes so and",
    "start": "4310960",
    "end": "4318320"
  },
  {
    "text": "and the thing is we think build users are a little bit more important than built authors so therefore for in our",
    "start": "4318320",
    "end": "4326159"
  },
  {
    "text": "priorities you know because it's it's a much much bigger audience where we first want to get the experience right we fully so we're fully on the same page uh",
    "start": "4326159",
    "end": "4333280"
  },
  {
    "text": "you want to have that and we might there might be some nice incremental steps that already will improve the experience",
    "start": "4333280",
    "end": "4340400"
  },
  {
    "text": "a lot without having the ultimate smartness so that's something so but we agree that this is a this is something",
    "start": "4340400",
    "end": "4347679"
  },
  {
    "text": "that that that that is not irrelevant or not minor i think it's it's also coming from I mean you know like with the",
    "start": "4347679",
    "end": "4354159"
  },
  {
    "text": "example that Hans was giving like you know working with like LinkedIn that has like you know really enterprise type of build it's it's going to be the type of",
    "start": "4354159",
    "end": "4361360"
  },
  {
    "text": "setup where you have you know like build masters that just work through that and no grad like like learn it and no gradal",
    "start": "4361360",
    "end": "4367520"
  },
  {
    "text": "and you know the user the developers never touch those file and don't care and you know we're clearly pushing",
    "start": "4367520",
    "end": "4372960"
  },
  {
    "text": "gradually to more like you know like a single developer that's both coding for Android and managing their build file",
    "start": "4372960",
    "end": "4378960"
  },
  {
    "text": "and you know and it's things that we have to solve clearly we're just not there yet where you know we need to",
    "start": "4378960",
    "end": "4385120"
  },
  {
    "text": "improve the tooling for the random developer who's going to touch their gradal file every month or every like",
    "start": "4385120",
    "end": "4390960"
  },
  {
    "text": "three months or every six months and really don't remember exactly oh what's the syntax right it it's like a it's a different use case and we're really like",
    "start": "4390960",
    "end": "4397199"
  },
  {
    "text": "stretching a little bit like the current boundaries of rad and we need to you know which is good for us i mean it's",
    "start": "4397199",
    "end": "4402800"
  },
  {
    "text": "really so no so accepted and has to be extendable right it can't be just work for the core plugins and so and we have",
    "start": "4402800",
    "end": "4409440"
  },
  {
    "text": "some ideas around that so so point taken uh it we're not actively working on it",
    "start": "4409440",
    "end": "4415120"
  },
  {
    "text": "right now but it's something that that that is important to us and uh you know I want to mention I think it's a good",
    "start": "4415120",
    "end": "4420239"
  },
  {
    "text": "segue i'm hiring you know if you're interested in helping those tools you know come talk to me are you hiring we",
    "start": "4420239",
    "end": "4427360"
  },
  {
    "text": "Yeah there you go you take the Bay Area we take the rest of the world so so I'm curious about the issue or um so SDK",
    "start": "4427360",
    "end": "4435520"
  },
  {
    "text": "manager yes there is you know right now you have to click through that license so we can't really do anything about it",
    "start": "4435520",
    "end": "4441040"
  },
  {
    "text": "much uh but we do want to improve the situation and uh that's all I would say",
    "start": "4441040",
    "end": "4447000"
  },
  {
    "text": "right you see that first line here um and it's it's not quite ready but that's",
    "start": "4447000",
    "end": "4453280"
  },
  {
    "text": "where we're going sorry it's not you know quite ready you know which is why we haven't really talked about it i",
    "start": "4453280",
    "end": "4459199"
  },
  {
    "text": "think we're working on a blog post about it uh and actually the incremental feature is not really in it and not",
    "start": "4459199",
    "end": "4464239"
  },
  {
    "text": "integrated in greater but that's the beginning of like we're you know trying to fix the situation and and provide",
    "start": "4464239",
    "end": "4469920"
  },
  {
    "text": "some new compiler for that i saw there was a flag that you can use yeah use Jack on build type default config",
    "start": "4469920",
    "end": "4475840"
  },
  {
    "text": "product flavor start using it it does uh it does Java compilation texting uh shrinking and obuscation no optimization",
    "start": "4475840",
    "end": "4483040"
  },
  {
    "text": "but it takes regular program file um it it what it doesn't do right now is like",
    "start": "4483040",
    "end": "4488480"
  },
  {
    "text": "annotation processor or Jakoko instrumentation uh and it doesn't uh it",
    "start": "4488480",
    "end": "4494159"
  },
  {
    "text": "technically supports a jar jar so that you can automatically you know as you add dependencies rename them but it's",
    "start": "4494159",
    "end": "4500880"
  },
  {
    "text": "not integrated in grad yet but yeah use jack equal true and then you will you need like 21.1 build tools um try it out",
    "start": "4500880",
    "end": "4508400"
  },
  {
    "text": "send us feedback on the AOSP bug tracker um we'll have more updates and you know",
    "start": "4508400",
    "end": "4513760"
  },
  {
    "text": "the the team is you know easily working on that so hopefully we'll have uh regular updates to the compiler and and",
    "start": "4513760",
    "end": "4520800"
  },
  {
    "text": "more features coming from i think and maybe a very last question",
    "start": "4520800",
    "end": "4528640"
  },
  {
    "text": "can you give an example of the package that you mentioned",
    "start": "4528640",
    "end": "4535000"
  },
  {
    "text": "an example of the package scope um it's a good question um I don't really have",
    "start": "4535040",
    "end": "4540800"
  },
  {
    "text": "one i remember like some developers saying \"Hey we absolutely need package scopes.\" Like sure whatever um but um",
    "start": "4540800",
    "end": "4549120"
  },
  {
    "text": "yeah I mean I think you know long term I would like to see it's not quite the same but it's it's the same idea is you",
    "start": "4549120",
    "end": "4555040"
  },
  {
    "text": "know like in the library I would definitely would want to see AR having both a API jar and a you know full jar",
    "start": "4555040",
    "end": "4561360"
  },
  {
    "text": "right to be able to restrict uh saying you know I do want to depend on that uh",
    "start": "4561360",
    "end": "4566800"
  },
  {
    "text": "jar but I don't you know and there's a bunch of classes in it that are you know implementation detail that I don't want",
    "start": "4566800",
    "end": "4572159"
  },
  {
    "text": "people to use so you know if you didn't have that in a jar you know in a AR file you could have like two jar right it's",
    "start": "4572159",
    "end": "4578400"
  },
  {
    "text": "like it's food api and the food runtime right and food api is only a small set and that's the one that's guaranteed to",
    "start": "4578400",
    "end": "4584000"
  },
  {
    "text": "always be there and so you you do a provided on food API food- API and then",
    "start": "4584000",
    "end": "4590000"
  },
  {
    "text": "you do a package on food and then the advantage is that when you're inside studio you will never have cut",
    "start": "4590000",
    "end": "4595600"
  },
  {
    "text": "compilation on stuff that's inside the runtime one and you will never by mistake use something that really you",
    "start": "4595600",
    "end": "4600840"
  },
  {
    "text": "shouldn't right um so that's one example i think for AR it's actually very useful um you know because you you push",
    "start": "4600840",
    "end": "4608719"
  },
  {
    "text": "something to developers and you know it's nice if every when you update from 1.0 to",
    "start": "4608719",
    "end": "4614600"
  },
  {
    "text": "1.0.3 you know you haven't renamed three class that they use but really they shouldn't have been using but hey they",
    "start": "4614600",
    "end": "4620159"
  },
  {
    "text": "looked at it because inside studio it's like hey look at that class it looks awesome i'm going to use it even though they weren't meant to use it right so",
    "start": "4620159",
    "end": "4626000"
  },
  {
    "text": "providing more control is something that you can do but that's the typical use case uh it's something actually an",
    "start": "4626000",
    "end": "4632640"
  },
  {
    "text": "important point is that provided and package uh do not work if you use ARS",
    "start": "4632640",
    "end": "4638159"
  },
  {
    "text": "actually because you know it's only for comp compile the AR dependencies only",
    "start": "4638159",
    "end": "4643600"
  },
  {
    "text": "work with the compile scope because what does it mean to have um resources that",
    "start": "4643600",
    "end": "4650080"
  },
  {
    "text": "are only used for packaging but not for you know compile time right like if you have Android resources you need to",
    "start": "4650080",
    "end": "4656480"
  },
  {
    "text": "generate the R class and you need to you really need to run them through the whole compile step same for provided right if you have an AR and you put it",
    "start": "4656480",
    "end": "4662800"
  },
  {
    "text": "to provided and you create an R class but you don't package the resources you're going to have problem at runtime so those two are really very specific",
    "start": "4662800",
    "end": "4669360"
  },
  {
    "text": "for jar file only and not like full AR thanks a lot all right thank Get on",
    "start": "4669360",
    "end": "4678678"
  }
]