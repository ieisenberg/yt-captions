[
  {
    "start": "0",
    "end": "108000"
  },
  {
    "text": "my name is Owen Reese uh I work at media",
    "start": "120",
    "end": "2080"
  },
  {
    "text": "math we're uh going to be sponsoring the",
    "start": "2080",
    "end": "3800"
  },
  {
    "text": "drink and food later on I'm here to talk",
    "start": "3800",
    "end": "6680"
  },
  {
    "text": "about dependent types um mostly because",
    "start": "6680",
    "end": "10400"
  },
  {
    "text": "I I see a lot of libraries coming out",
    "start": "10400",
    "end": "13040"
  },
  {
    "text": "that don't use them uh people really",
    "start": "13040",
    "end": "15559"
  },
  {
    "text": "aren't sure about what they are and i'",
    "start": "15559",
    "end": "17800"
  },
  {
    "text": "I'd like to give like a little",
    "start": "17800",
    "end": "18720"
  },
  {
    "text": "introduction and like you know just show",
    "start": "18720",
    "end": "20680"
  },
  {
    "text": "like how you can actually use these",
    "start": "20680",
    "end": "22039"
  },
  {
    "text": "things without being scared about them",
    "start": "22039",
    "end": "25760"
  },
  {
    "text": "um so before I I even get in like the",
    "start": "25760",
    "end": "29320"
  },
  {
    "text": "context of what this is this is uh this",
    "start": "29320",
    "end": "31840"
  },
  {
    "text": "is what I mean by path dependent types",
    "start": "31840",
    "end": "34360"
  },
  {
    "text": "or dependent types in in terms of scolar",
    "start": "34360",
    "end": "38000"
  },
  {
    "text": "so if you if you actually take a look",
    "start": "38000",
    "end": "39480"
  },
  {
    "text": "there's really just a trait or an",
    "start": "39480",
    "end": "41079"
  },
  {
    "text": "abstract class that you have up there",
    "start": "41079",
    "end": "43160"
  },
  {
    "text": "with with this abstract type parameter",
    "start": "43160",
    "end": "44960"
  },
  {
    "text": "and if you pass it into a function that",
    "start": "44960",
    "end": "46879"
  },
  {
    "text": "function uh the return value actually",
    "start": "46879",
    "end": "49879"
  },
  {
    "text": "depends upon the uh variable that you",
    "start": "49879",
    "end": "52719"
  },
  {
    "text": "passed in so it it becomes very context",
    "start": "52719",
    "end": "55199"
  },
  {
    "text": "sensitive and when you start using these",
    "start": "55199",
    "end": "57359"
  },
  {
    "text": "things with implicits and sort of type",
    "start": "57359",
    "end": "59079"
  },
  {
    "text": "classes you can you can start really uh",
    "start": "59079",
    "end": "62120"
  },
  {
    "text": "doing some magical things at the type",
    "start": "62120",
    "end": "64040"
  },
  {
    "text": "level that uh that can really simplify",
    "start": "64040",
    "end": "66119"
  },
  {
    "text": "your life or if you want to go really",
    "start": "66119",
    "end": "68400"
  },
  {
    "text": "crazy and be some sort of type astronaut",
    "start": "68400",
    "end": "70400"
  },
  {
    "text": "you can really complicate your life",
    "start": "70400",
    "end": "73560"
  },
  {
    "text": "so uh one of my favorite children's",
    "start": "73560",
    "end": "76080"
  },
  {
    "text": "books has got to be through the Looking",
    "start": "76080",
    "end": "77520"
  },
  {
    "text": "Glass and one of the one of the things",
    "start": "77520",
    "end": "79680"
  },
  {
    "text": "that I like about it and what's so",
    "start": "79680",
    "end": "81479"
  },
  {
    "text": "entertaining is that the author decided",
    "start": "81479",
    "end": "83680"
  },
  {
    "text": "to take a lot of the rules that people",
    "start": "83680",
    "end": "85360"
  },
  {
    "text": "are used to and just throw them out I",
    "start": "85360",
    "end": "87920"
  },
  {
    "text": "mean not completely like not where it",
    "start": "87920",
    "end": "90400"
  },
  {
    "text": "was absurd but like you know you lose",
    "start": "90400",
    "end": "91799"
  },
  {
    "text": "your head that's bad everybody remembers",
    "start": "91799",
    "end": "93799"
  },
  {
    "text": "that off of their head but uh sort of",
    "start": "93799",
    "end": "96920"
  },
  {
    "text": "the kinds of things that you see that",
    "start": "96920",
    "end": "98600"
  },
  {
    "text": "you would you wouldn't expect but if",
    "start": "98600",
    "end": "100280"
  },
  {
    "text": "someone says oh this is my perspective",
    "start": "100280",
    "end": "102159"
  },
  {
    "text": "you're like okay well I can see why the",
    "start": "102159",
    "end": "104360"
  },
  {
    "text": "way I feel is rather absurd",
    "start": "104360",
    "end": "107560"
  },
  {
    "text": "so let's say that I want to go through",
    "start": "107560",
    "end": "110079"
  },
  {
    "text": "and I want to start doing some of this",
    "start": "110079",
    "end": "111479"
  },
  {
    "text": "stuff in scal itself and I'm going to",
    "start": "111479",
    "end": "113600"
  },
  {
    "text": "come out and I'm going to make this list",
    "start": "113600",
    "end": "115040"
  },
  {
    "text": "Ops this thing that's based upon list",
    "start": "115040",
    "end": "116920"
  },
  {
    "text": "that you know some more sort of Pimp My",
    "start": "116920",
    "end": "119200"
  },
  {
    "text": "Method whatever I want to come out with",
    "start": "119200",
    "end": "120719"
  },
  {
    "text": "this flat size and I write it like this",
    "start": "120719",
    "end": "122759"
  },
  {
    "text": "well if I try and compile the first",
    "start": "122759",
    "end": "124719"
  },
  {
    "text": "thing I'm going to see is I'm going to",
    "start": "124719",
    "end": "126399"
  },
  {
    "text": "get this this exception is going to be",
    "start": "126399",
    "end": "128399"
  },
  {
    "text": "saying like hey there's no implicit",
    "start": "128399",
    "end": "130440"
  },
  {
    "text": "there's nothing that tells me or or",
    "start": "130440",
    "end": "132000"
  },
  {
    "text": "tells the compiler that this this type",
    "start": "132000",
    "end": "133959"
  },
  {
    "text": "of a that was in list is itself a",
    "start": "133959",
    "end": "136560"
  },
  {
    "text": "reversible in other words it can be",
    "start": "136560",
    "end": "138239"
  },
  {
    "text": "flattened and we can see this comes",
    "start": "138239",
    "end": "140400"
  },
  {
    "text": "directly from the flatten method on um",
    "start": "140400",
    "end": "143239"
  },
  {
    "text": "on list and a lot of people when they",
    "start": "143239",
    "end": "145200"
  },
  {
    "text": "see this they don't even realize that",
    "start": "145200",
    "end": "147840"
  },
  {
    "text": "first of all that flatten actually has a",
    "start": "147840",
    "end": "149400"
  },
  {
    "text": "typ because when they're working with it",
    "start": "149400",
    "end": "151319"
  },
  {
    "text": "a lot of times they think well list of",
    "start": "151319",
    "end": "153160"
  },
  {
    "text": "list of T the type parameter T but in",
    "start": "153160",
    "end": "156080"
  },
  {
    "text": "fact the type parameter list of T and",
    "start": "156080",
    "end": "158400"
  },
  {
    "text": "need to tell the compiler like this this",
    "start": "158400",
    "end": "160720"
  },
  {
    "text": "abstract type T needs to be flattenable",
    "start": "160720",
    "end": "163519"
  },
  {
    "text": "so if I if I write out the full",
    "start": "163519",
    "end": "165440"
  },
  {
    "text": "signature and I I take a look at what",
    "start": "165440",
    "end": "167159"
  },
  {
    "text": "this really looks like I have flat sze",
    "start": "167159",
    "end": "169920"
  },
  {
    "text": "with this",
    "start": "169920",
    "end": "171519"
  },
  {
    "text": "implicit but oddly enough I get this",
    "start": "171519",
    "end": "174200"
  },
  {
    "text": "weird uh type parameter B up there I",
    "start": "174200",
    "end": "176760"
  },
  {
    "text": "mean this this thing just sort of floats",
    "start": "176760",
    "end": "178920"
  },
  {
    "text": "there I'm not really really using this",
    "start": "178920",
    "end": "180599"
  },
  {
    "text": "type parameter I don't need it doesn't",
    "start": "180599",
    "end": "182599"
  },
  {
    "start": "182000",
    "end": "244000"
  },
  {
    "text": "really add to my understanding of what",
    "start": "182599",
    "end": "184879"
  },
  {
    "text": "flat size should be but it sort of",
    "start": "184879",
    "end": "187440"
  },
  {
    "text": "happens because of this implicit and",
    "start": "187440",
    "end": "189959"
  },
  {
    "text": "that's that's really a shame that's",
    "start": "189959",
    "end": "191640"
  },
  {
    "text": "that's kind of bad because this these",
    "start": "191640",
    "end": "193519"
  },
  {
    "text": "sort of types that you have and these",
    "start": "193519",
    "end": "195080"
  },
  {
    "text": "methods start bleeding up to other calls",
    "start": "195080",
    "end": "197440"
  },
  {
    "text": "you get uh what I would call type",
    "start": "197440",
    "end": "199920"
  },
  {
    "text": "pollution you know types that really are",
    "start": "199920",
    "end": "202720"
  },
  {
    "text": "there but you don't care about so if I",
    "start": "202720",
    "end": "206159"
  },
  {
    "text": "were to rewrite this and I were to come",
    "start": "206159",
    "end": "208040"
  },
  {
    "text": "along and and to have done this i'",
    "start": "208040",
    "end": "209879"
  },
  {
    "text": "actually use this is reversible once I",
    "start": "209879",
    "end": "212840"
  },
  {
    "text": "come out and it looks almost exactly the",
    "start": "212840",
    "end": "215280"
  },
  {
    "text": "same except that it's using dependent",
    "start": "215280",
    "end": "218519"
  },
  {
    "text": "types as a type to return in other words",
    "start": "218519",
    "end": "221439"
  },
  {
    "text": "it uses this thing that's actually found",
    "start": "221439",
    "end": "223000"
  },
  {
    "text": "in scal itself uh that has this abstract",
    "start": "223000",
    "end": "226720"
  },
  {
    "text": "type A that is the type of the",
    "start": "226720",
    "end": "230599"
  },
  {
    "text": "reversible which comes out so I mean",
    "start": "230599",
    "end": "233480"
  },
  {
    "text": "here I only have the type that I care",
    "start": "233480",
    "end": "236360"
  },
  {
    "text": "about and if I actually want to get to",
    "start": "236360",
    "end": "238760"
  },
  {
    "text": "that list and I want to use the types",
    "start": "238760",
    "end": "240239"
  },
  {
    "text": "within it well there it is for when I",
    "start": "240239",
    "end": "243040"
  },
  {
    "text": "want it so my new signature if I were to",
    "start": "243040",
    "end": "246640"
  },
  {
    "start": "244000",
    "end": "378000"
  },
  {
    "text": "have flatten written like that and I",
    "start": "246640",
    "end": "248079"
  },
  {
    "text": "were to come out and I were to use it",
    "start": "248079",
    "end": "250439"
  },
  {
    "text": "well that b actually disappears and now",
    "start": "250439",
    "end": "253200"
  },
  {
    "text": "now my types are actually telling me",
    "start": "253200",
    "end": "254959"
  },
  {
    "text": "exactly what I want it to be this flat",
    "start": "254959",
    "end": "256840"
  },
  {
    "text": "Siz returns an INT I don't care about",
    "start": "256840",
    "end": "258720"
  },
  {
    "text": "anything else here's my list of a",
    "start": "258720",
    "end": "260639"
  },
  {
    "text": "there's my is traversible once and it",
    "start": "260639",
    "end": "262720"
  },
  {
    "text": "only depends on a because that's all",
    "start": "262720",
    "end": "265080"
  },
  {
    "text": "that's important it's just saying a is",
    "start": "265080",
    "end": "267199"
  },
  {
    "text": "what's",
    "start": "267199",
    "end": "267960"
  },
  {
    "text": "traversible and this this sort of",
    "start": "267960",
    "end": "270160"
  },
  {
    "text": "pattern this this type of thing is",
    "start": "270160",
    "end": "271880"
  },
  {
    "text": "probably if you were to ever start using",
    "start": "271880",
    "end": "273680"
  },
  {
    "text": "dependent types and putting them into",
    "start": "273680",
    "end": "275400"
  },
  {
    "text": "your libraries and using them to effect",
    "start": "275400",
    "end": "278360"
  },
  {
    "text": "this is what it is it's really a sort of",
    "start": "278360",
    "end": "280720"
  },
  {
    "text": "a a compiled time type reification in",
    "start": "280720",
    "end": "283800"
  },
  {
    "text": "other words this is just identity the",
    "start": "283800",
    "end": "286199"
  },
  {
    "text": "way I've defined it I say it's some type",
    "start": "286199",
    "end": "288840"
  },
  {
    "text": "and I'm passing ma into the apply and I",
    "start": "288840",
    "end": "290919"
  },
  {
    "text": "get ma out and the compiler is often",
    "start": "290919",
    "end": "294360"
  },
  {
    "text": "smart enough once it's been running",
    "start": "294360",
    "end": "295680"
  },
  {
    "text": "enough times to say well this isn't",
    "start": "295680",
    "end": "297440"
  },
  {
    "text": "really doing anything I can get rid of",
    "start": "297440",
    "end": "299280"
  },
  {
    "text": "this but at the compile time level",
    "start": "299280",
    "end": "301240"
  },
  {
    "text": "you're actually saying that this",
    "start": "301240",
    "end": "302400"
  },
  {
    "text": "abstract type A is a type it's got this",
    "start": "302400",
    "end": "305639"
  },
  {
    "text": "some type if it was a list it could come",
    "start": "305639",
    "end": "307720"
  },
  {
    "text": "out and say like okay you actually have",
    "start": "307720",
    "end": "309520"
  },
  {
    "text": "use of map or flat map or filter of all",
    "start": "309520",
    "end": "312880"
  },
  {
    "text": "the other methods that would be on list",
    "start": "312880",
    "end": "314840"
  },
  {
    "text": "if it was just some abstract type A you",
    "start": "314840",
    "end": "318199"
  },
  {
    "text": "you sort of would use that and uh you",
    "start": "318199",
    "end": "321280"
  },
  {
    "text": "know that that becomes a very powerful",
    "start": "321280",
    "end": "323440"
  },
  {
    "text": "sort of mechanism for implicit guards",
    "start": "323440",
    "end": "325639"
  },
  {
    "text": "and things of that nature of course uh",
    "start": "325639",
    "end": "329720"
  },
  {
    "text": "flatten is kind of like a trivial",
    "start": "329720",
    "end": "331319"
  },
  {
    "text": "example that I just sort of pulled out",
    "start": "331319",
    "end": "333199"
  },
  {
    "text": "because nobody uses it I mean how many",
    "start": "333199",
    "end": "335840"
  },
  {
    "text": "of you have actually used flatten itself",
    "start": "335840",
    "end": "338080"
  },
  {
    "text": "like every single day of code what wait",
    "start": "338080",
    "end": "340960"
  },
  {
    "text": "one hand came up once a week once a",
    "start": "340960",
    "end": "343919"
  },
  {
    "text": "month once a month okay so yeah why",
    "start": "343919",
    "end": "348240"
  },
  {
    "text": "that's because we have this wonderful",
    "start": "348240",
    "end": "349639"
  },
  {
    "text": "method called flat map uh flat map came",
    "start": "349639",
    "end": "352600"
  },
  {
    "text": "out because of this stuff because nobody",
    "start": "352600",
    "end": "355759"
  },
  {
    "text": "nobody wants to deal with some of none",
    "start": "355759",
    "end": "359479"
  },
  {
    "text": "that that's that's kind of like taking a",
    "start": "359479",
    "end": "361199"
  },
  {
    "text": "cardboard box that's empty wrapping it",
    "start": "361199",
    "end": "362919"
  },
  {
    "text": "up and giving it to a four-year-old for",
    "start": "362919",
    "end": "364360"
  },
  {
    "text": "their birthday present you know",
    "start": "364360",
    "end": "367479"
  },
  {
    "text": "like this is terrible I mean this is",
    "start": "367479",
    "end": "369960"
  },
  {
    "text": "there's there's true false and file not",
    "start": "369960",
    "end": "373360"
  },
  {
    "text": "found or something like that I mean just",
    "start": "373360",
    "end": "375400"
  },
  {
    "text": "no don't don't do",
    "start": "375400",
    "end": "377800"
  },
  {
    "text": "that but the thing is is flat map",
    "start": "377800",
    "end": "380560"
  },
  {
    "text": "requires you to preempt it like you",
    "start": "380560",
    "end": "382800"
  },
  {
    "text": "yourself have to know so during code",
    "start": "382800",
    "end": "385520"
  },
  {
    "text": "reviews you're going to catch people",
    "start": "385520",
    "end": "386759"
  },
  {
    "text": "going uh did you mean to flat map that",
    "start": "386759",
    "end": "388960"
  },
  {
    "text": "oh yeah yeah of course a more intuitive",
    "start": "388960",
    "end": "392240"
  },
  {
    "text": "way would be sort of less mistake prone",
    "start": "392240",
    "end": "394840"
  },
  {
    "text": "as if map itself said no I'm only going",
    "start": "394840",
    "end": "398960"
  },
  {
    "text": "to work on things that can't be flat",
    "start": "398960",
    "end": "400400"
  },
  {
    "text": "mapped and flat map said well I'm only",
    "start": "400400",
    "end": "403039"
  },
  {
    "text": "going to work on things that can be flat",
    "start": "403039",
    "end": "406680"
  },
  {
    "text": "mapped but this really isn't isn't far",
    "start": "406680",
    "end": "410280"
  },
  {
    "text": "enough as what I'd like to see or or to",
    "start": "410280",
    "end": "412680"
  },
  {
    "text": "push it this far so I really don't want",
    "start": "412680",
    "end": "415199"
  },
  {
    "text": "to think about this stuff like honestly",
    "start": "415199",
    "end": "417720"
  },
  {
    "text": "I don't care map flat map whatever it",
    "start": "417720",
    "end": "419879"
  },
  {
    "text": "should just happen automatically so if I",
    "start": "419879",
    "end": "422360"
  },
  {
    "text": "were to make it happen automatically",
    "start": "422360",
    "end": "424080"
  },
  {
    "text": "this automagic way I'd actually write",
    "start": "424080",
    "end": "426520"
  },
  {
    "text": "map or flat map in terms of something",
    "start": "426520",
    "end": "428680"
  },
  {
    "text": "like this and I I could actually get rid",
    "start": "428680",
    "end": "430520"
  },
  {
    "text": "of map and Flat map if it weren't for",
    "start": "430520",
    "end": "432440"
  },
  {
    "text": "the you know for comprehension syntactic",
    "start": "432440",
    "end": "434919"
  },
  {
    "text": "sugar uh in terms of this this sort of",
    "start": "434919",
    "end": "437440"
  },
  {
    "text": "dmap function this this sort of",
    "start": "437440",
    "end": "439560"
  },
  {
    "text": "dependent map function I take a function",
    "start": "439560",
    "end": "442400"
  },
  {
    "text": "T to be S implicit that pends on be a",
    "start": "442400",
    "end": "445599"
  },
  {
    "text": "type class there and I get out uh I you",
    "start": "445599",
    "end": "448800"
  },
  {
    "text": "know type my",
    "start": "448800",
    "end": "451000"
  },
  {
    "text": "M and you know to say this or talk about",
    "start": "451000",
    "end": "454000"
  },
  {
    "text": "this in sort of an abstract term is not",
    "start": "454000",
    "end": "456879"
  },
  {
    "text": "really helpful so I'm going to actually",
    "start": "456879",
    "end": "459120"
  },
  {
    "text": "talk about this in terms of something",
    "start": "459120",
    "end": "460680"
  },
  {
    "text": "like a continuation monad uh because",
    "start": "460680",
    "end": "463039"
  },
  {
    "text": "this is probably an also rather unloved",
    "start": "463039",
    "end": "466520"
  },
  {
    "text": "monad um here you have map you have flat",
    "start": "466520",
    "end": "469960"
  },
  {
    "text": "map I mean apply is just T to r that",
    "start": "469960",
    "end": "472199"
  },
  {
    "text": "returns an R so uh the map s you see F",
    "start": "472199",
    "end": "475240"
  },
  {
    "text": "and then G that's a t to R and then you",
    "start": "475240",
    "end": "477479"
  },
  {
    "text": "see down in flat map f of you know a t",
    "start": "477479",
    "end": "481800"
  },
  {
    "text": "and put in g into continuation of B of R",
    "start": "481800",
    "end": "484479"
  },
  {
    "text": "well that's just T to R and it it's",
    "start": "484479",
    "end": "487479"
  },
  {
    "text": "lovely and it composes and it works",
    "start": "487479",
    "end": "489960"
  },
  {
    "text": "great so if I were to rewrite this uh in",
    "start": "489960",
    "end": "493680"
  },
  {
    "text": "terms of this dmap well it kind of look",
    "start": "493680",
    "end": "496599"
  },
  {
    "text": "slightly different so so the apply that",
    "start": "496599",
    "end": "499199"
  },
  {
    "text": "I would have out sort of very similar",
    "start": "499199",
    "end": "501199"
  },
  {
    "text": "looks like what I have in map and Flat",
    "start": "501199",
    "end": "503120"
  },
  {
    "text": "map before of this past",
    "start": "503120",
    "end": "505440"
  },
  {
    "text": "continuation but now it's in terms of",
    "start": "505440",
    "end": "507879"
  },
  {
    "text": "this this tie thing that takes in this",
    "start": "507879",
    "end": "511280"
  },
  {
    "text": "the function of F of the dmap and the",
    "start": "511280",
    "end": "514360"
  },
  {
    "text": "parameter G that's that's this function",
    "start": "514360",
    "end": "517120"
  },
  {
    "text": "that comes in and it's based on some",
    "start": "517120",
    "end": "519560"
  },
  {
    "text": "weird crazy abstract type parameter and",
    "start": "519560",
    "end": "522240"
  },
  {
    "text": "this this apply just just comes in and",
    "start": "522240",
    "end": "525320"
  },
  {
    "text": "and and it returns an R which is exactly",
    "start": "525320",
    "end": "528080"
  },
  {
    "text": "what the continuation says it needs to",
    "start": "528080",
    "end": "529959"
  },
  {
    "text": "return but other than that it's it's not",
    "start": "529959",
    "end": "532959"
  },
  {
    "text": "really not really providing as much",
    "start": "532959",
    "end": "535720"
  },
  {
    "text": "context as you might think so to",
    "start": "535720",
    "end": "538720"
  },
  {
    "text": "actually make this tied to have it come",
    "start": "538720",
    "end": "540320"
  },
  {
    "text": "out and see and by the way this is going",
    "start": "540320",
    "end": "542279"
  },
  {
    "text": "to be the most complicated slide can",
    "start": "542279",
    "end": "544399"
  },
  {
    "text": "everybody see the",
    "start": "544399",
    "end": "546040"
  },
  {
    "text": "code yes all right good uh I'd actually",
    "start": "546040",
    "end": "550040"
  },
  {
    "text": "Define it in This this term so so first",
    "start": "550040",
    "end": "553160"
  },
  {
    "text": "of all I'll take a step back and I'll",
    "start": "553160",
    "end": "554760"
  },
  {
    "text": "say like look I'm going to do a little",
    "start": "554760",
    "end": "556720"
  },
  {
    "text": "hand waving here um on this aux",
    "start": "556720",
    "end": "559760"
  },
  {
    "text": "parameter uh there's a talk that New",
    "start": "559760",
    "end": "561800"
  },
  {
    "text": "York scholar guys you probably have seen",
    "start": "561800",
    "end": "563640"
  },
  {
    "text": "if you attended it uh next month I'll be",
    "start": "563640",
    "end": "565880"
  },
  {
    "text": "coming up here Boston to give a",
    "start": "565880",
    "end": "568000"
  },
  {
    "text": "dependent type talk that I'll go really",
    "start": "568000",
    "end": "570040"
  },
  {
    "text": "in depth on um the rest of you you know",
    "start": "570040",
    "end": "573040"
  },
  {
    "text": "I I can probably talk to you later on",
    "start": "573040",
    "end": "574760"
  },
  {
    "text": "about it but what's going on here is",
    "start": "574760",
    "end": "577360"
  },
  {
    "text": "actually uh type level pattern matching",
    "start": "577360",
    "end": "580040"
  },
  {
    "text": "um and uh this is this is sort of like",
    "start": "580040",
    "end": "583160"
  },
  {
    "text": "the the most advanced kind of weird ass",
    "start": "583160",
    "end": "586120"
  },
  {
    "text": "crazy stuff that you might put up on the",
    "start": "586120",
    "end": "588160"
  },
  {
    "text": "type level but what you're doing is",
    "start": "588160",
    "end": "590200"
  },
  {
    "text": "you're having this object tie that",
    "start": "590200",
    "end": "591959"
  },
  {
    "text": "extends low priority tie and you see two",
    "start": "591959",
    "end": "594360"
  },
  {
    "text": "different implicits here so I'm using",
    "start": "594360",
    "end": "596399"
  },
  {
    "text": "implicit resolution order to sort of to",
    "start": "596399",
    "end": "598680"
  },
  {
    "text": "sort of program in like how to do this",
    "start": "598680",
    "end": "600920"
  },
  {
    "text": "pattern matching and say like this",
    "start": "600920",
    "end": "603279"
  },
  {
    "text": "implicit here is takes priority of this",
    "start": "603279",
    "end": "605480"
  },
  {
    "text": "implicit the next thing I have is this",
    "start": "605480",
    "end": "607079"
  },
  {
    "text": "apply that has these two parameters C",
    "start": "607079",
    "end": "608920"
  },
  {
    "text": "ofr that is an implicit of tie that",
    "start": "608920",
    "end": "611320"
  },
  {
    "text": "returns this this aux thing what this is",
    "start": "611320",
    "end": "614519"
  },
  {
    "text": "doing is actually is is I'm allowed to",
    "start": "614519",
    "end": "616399"
  },
  {
    "text": "shove anything I want in these objects",
    "start": "616399",
    "end": "618079"
  },
  {
    "text": "and these traits and I can just say",
    "start": "618079",
    "end": "620560"
  },
  {
    "text": "import tie instead of import tie. uncore",
    "start": "620560",
    "end": "623959"
  },
  {
    "text": "and what happens is I can I can not",
    "start": "623959",
    "end": "627600"
  },
  {
    "text": "pollute uh the rest of of my code base",
    "start": "627600",
    "end": "630240"
  },
  {
    "text": "with implicits or or weird stuff that",
    "start": "630240",
    "end": "632640"
  },
  {
    "text": "might happen uh it's all going to be",
    "start": "632640",
    "end": "634959"
  },
  {
    "text": "kept compartmentalizing here that apply",
    "start": "634959",
    "end": "637320"
  },
  {
    "text": "itself when scholar starts trying to",
    "start": "637320",
    "end": "639519"
  },
  {
    "text": "take a look for a tie of type c to R",
    "start": "639519",
    "end": "642160"
  },
  {
    "text": "will hit that apply hit that implicit if",
    "start": "642160",
    "end": "644839"
  },
  {
    "text": "it can be done and return that tie",
    "start": "644839",
    "end": "646959"
  },
  {
    "text": "that's how it sort of gets it it's it's",
    "start": "646959",
    "end": "648959"
  },
  {
    "text": "this um Escape Hatcher like a hole into",
    "start": "648959",
    "end": "652680"
  },
  {
    "text": "into this weird Universe you might",
    "start": "652680",
    "end": "654519"
  },
  {
    "text": "construct this aux is",
    "start": "654519",
    "end": "657839"
  },
  {
    "text": "um that's to help help uh the compiler",
    "start": "657839",
    "end": "661079"
  },
  {
    "text": "uh do type inferencing um I won't get",
    "start": "661079",
    "end": "664720"
  },
  {
    "text": "into it but if you don't have that it it",
    "start": "664720",
    "end": "668040"
  },
  {
    "text": "start starts losing track of what the",
    "start": "668040",
    "end": "670519"
  },
  {
    "text": "the types are the dependent types it",
    "start": "670519",
    "end": "672360"
  },
  {
    "text": "just it'll compile and say okay these",
    "start": "672360",
    "end": "674320"
  },
  {
    "text": "are the right types but then you go to",
    "start": "674320",
    "end": "675560"
  },
  {
    "text": "use them and it has no idea what type it",
    "start": "675560",
    "end": "678560"
  },
  {
    "text": "is um so this implicit this tifm I mean",
    "start": "678560",
    "end": "684320"
  },
  {
    "text": "essentially what you see here is a",
    "start": "684320",
    "end": "685920"
  },
  {
    "text": "continuation of B and R and it's just",
    "start": "685920",
    "end": "688839"
  },
  {
    "text": "taking in uh a",
    "start": "688839",
    "end": "691639"
  },
  {
    "text": "continuation and putting the function in",
    "start": "691639",
    "end": "693839"
  },
  {
    "text": "like you would I mean this is this is",
    "start": "693839",
    "end": "695639"
  },
  {
    "text": "exactly the same case as flat map and",
    "start": "695639",
    "end": "698519"
  },
  {
    "text": "this low priority if you take a look at",
    "start": "698519",
    "end": "700519"
  },
  {
    "text": "this this is taking anything that is in",
    "start": "700519",
    "end": "702839"
  },
  {
    "text": "continuation or well it would take a",
    "start": "702839",
    "end": "705200"
  },
  {
    "text": "continuation if you let it and uh and",
    "start": "705200",
    "end": "707880"
  },
  {
    "text": "running it through much like you would",
    "start": "707880",
    "end": "709760"
  },
  {
    "text": "map so obviously the name is TFM or Ty",
    "start": "709760",
    "end": "714240"
  },
  {
    "text": "and if I take a look at this a little",
    "start": "714240",
    "end": "716480"
  },
  {
    "text": "more closely or or see this in sort of",
    "start": "716480",
    "end": "719600"
  },
  {
    "text": "the context of dmap these applies of tie",
    "start": "719600",
    "end": "723320"
  },
  {
    "text": "here this one coming in this is flat map",
    "start": "723320",
    "end": "726639"
  },
  {
    "text": "I mean and this is map and the fact of",
    "start": "726639",
    "end": "729880"
  },
  {
    "text": "the matter is is I myself don't have to",
    "start": "729880",
    "end": "732360"
  },
  {
    "text": "call whether it's coming out as map or",
    "start": "732360",
    "end": "734040"
  },
  {
    "text": "flat map the types themselves will",
    "start": "734040",
    "end": "736720"
  },
  {
    "text": "actually uh call into scope the correct",
    "start": "736720",
    "end": "739959"
  },
  {
    "text": "tie and the tie itself will actually do",
    "start": "739959",
    "end": "742279"
  },
  {
    "text": "the map or the flat map and that's it uh",
    "start": "742279",
    "end": "745519"
  },
  {
    "text": "I don't have to think about it it just",
    "start": "745519",
    "end": "747800"
  },
  {
    "text": "just sort of will work",
    "start": "747800",
    "end": "749920"
  },
  {
    "text": "and I think this is this is",
    "start": "749920",
    "end": "752480"
  },
  {
    "text": "probably probably half the time what",
    "start": "752480",
    "end": "755000"
  },
  {
    "text": "people would want I mean I don't know",
    "start": "755000",
    "end": "756959"
  },
  {
    "text": "about you but I've I've never actually",
    "start": "756959",
    "end": "758519"
  },
  {
    "text": "written a list of list of some tea and",
    "start": "758519",
    "end": "760320"
  },
  {
    "text": "gone this yes this is the type parameter",
    "start": "760320",
    "end": "762079"
  },
  {
    "text": "I want I want I want lists of lists yes",
    "start": "762079",
    "end": "766040"
  },
  {
    "text": "absolutely",
    "start": "766040",
    "end": "769040"
  },
  {
    "text": "no but uh as helpful and as useful as as",
    "start": "769600",
    "end": "774959"
  },
  {
    "text": "that might be um that isn't always like",
    "start": "774959",
    "end": "779240"
  },
  {
    "text": "the be all end all I mean sure I I could",
    "start": "779240",
    "end": "781839"
  },
  {
    "text": "see people come through and be like I",
    "start": "781839",
    "end": "783240"
  },
  {
    "text": "want a state mon ad of a state mon ad of",
    "start": "783240",
    "end": "785320"
  },
  {
    "text": "a state mon ad maybe or or they be like",
    "start": "785320",
    "end": "787600"
  },
  {
    "text": "well you have a state on a transform or",
    "start": "787600",
    "end": "790880"
  },
  {
    "text": "something",
    "start": "790880",
    "end": "792440"
  },
  {
    "start": "792000",
    "end": "913000"
  },
  {
    "text": "but sometimes we wouldn't uh we wouldn't",
    "start": "792440",
    "end": "795800"
  },
  {
    "text": "think about where Maps or or flat Maps",
    "start": "795800",
    "end": "798839"
  },
  {
    "text": "might actually be used or might want to",
    "start": "798839",
    "end": "800800"
  },
  {
    "text": "be used or maybe should be used so I see",
    "start": "800800",
    "end": "804639"
  },
  {
    "text": "a lot of methods like this and you",
    "start": "804639",
    "end": "806320"
  },
  {
    "text": "probably have done this in your library",
    "start": "806320",
    "end": "807839"
  },
  {
    "text": "you've written code like this you you've",
    "start": "807839",
    "end": "809240"
  },
  {
    "text": "been like well I'm going out to some",
    "start": "809240",
    "end": "811600"
  },
  {
    "text": "database or some API somewhere and I",
    "start": "811600",
    "end": "814360"
  },
  {
    "text": "don't want to to have this blocking code",
    "start": "814360",
    "end": "816800"
  },
  {
    "text": "so this call this a type may actually be",
    "start": "816800",
    "end": "819760"
  },
  {
    "text": "some like result set jdbc result set or",
    "start": "819760",
    "end": "822440"
  },
  {
    "text": "something like that that comes back I",
    "start": "822440",
    "end": "824480"
  },
  {
    "text": "want to map over it with this function",
    "start": "824480",
    "end": "826800"
  },
  {
    "text": "and I want to do this in a synchronous",
    "start": "826800",
    "end": "828560"
  },
  {
    "text": "Manner and we think wow I've done",
    "start": "828560",
    "end": "830399"
  },
  {
    "text": "something really great this is good this",
    "start": "830399",
    "end": "832839"
  },
  {
    "text": "is this is the way we want our code to",
    "start": "832839",
    "end": "834959"
  },
  {
    "text": "be no you",
    "start": "834959",
    "end": "836800"
  },
  {
    "text": "don't uh and that's because you can get",
    "start": "836800",
    "end": "839800"
  },
  {
    "text": "these two things uh the first one uh",
    "start": "839800",
    "end": "843880"
  },
  {
    "text": "happens by accident uh you might have a",
    "start": "843880",
    "end": "847839"
  },
  {
    "text": "method that is synchronous and then",
    "start": "847839",
    "end": "849720"
  },
  {
    "text": "later on as you are enhancing the code",
    "start": "849720",
    "end": "852000"
  },
  {
    "text": "and you know a different functionality",
    "start": "852000",
    "end": "853920"
  },
  {
    "text": "comes out someone says well this",
    "start": "853920",
    "end": "856480"
  },
  {
    "text": "actually needs to be a synchronous and",
    "start": "856480",
    "end": "857759"
  },
  {
    "text": "he goes through and he makes sure",
    "start": "857759",
    "end": "858880"
  },
  {
    "text": "everything compiles and then as most of",
    "start": "858880",
    "end": "861480"
  },
  {
    "text": "you probably do because I know we do a",
    "start": "861480",
    "end": "863240"
  },
  {
    "text": "lot you only uh code review the diffs",
    "start": "863240",
    "end": "866759"
  },
  {
    "text": "all the places people have checked and",
    "start": "866759",
    "end": "868639"
  },
  {
    "text": "because this is returning a unit I mean",
    "start": "868639",
    "end": "870720"
  },
  {
    "text": "it's a side effect nobody cares they",
    "start": "870720",
    "end": "873279"
  },
  {
    "text": "probably don't even look at the return",
    "start": "873279",
    "end": "875600"
  },
  {
    "text": "type of this they probably the function",
    "start": "875600",
    "end": "878079"
  },
  {
    "text": "that would produce this probably returns",
    "start": "878079",
    "end": "879920"
  },
  {
    "text": "unit itself uh the second one is",
    "start": "879920",
    "end": "883959"
  },
  {
    "text": "arguably much much worse uh on a",
    "start": "883959",
    "end": "886440"
  },
  {
    "text": "conceptual level and it's it's funny",
    "start": "886440",
    "end": "888160"
  },
  {
    "text": "someone was asking uh Bill like how to",
    "start": "888160",
    "end": "890360"
  },
  {
    "text": "work with future and or um I'm going to",
    "start": "890360",
    "end": "893600"
  },
  {
    "text": "I'm going to show one way of potentially",
    "start": "893600",
    "end": "895639"
  },
  {
    "text": "do that and here's here's why future of",
    "start": "895639",
    "end": "897880"
  },
  {
    "text": "try is really really",
    "start": "897880",
    "end": "900079"
  },
  {
    "text": "bad look at that third case that says",
    "start": "900079",
    "end": "903000"
  },
  {
    "text": "congratulations you",
    "start": "903000",
    "end": "905199"
  },
  {
    "text": "failed that's no kid to his parent when",
    "start": "905199",
    "end": "908240"
  },
  {
    "text": "he's showing his report card guess what",
    "start": "908240",
    "end": "909839"
  },
  {
    "text": "it came in I",
    "start": "909839",
    "end": "911800"
  },
  {
    "text": "failed you're not going to do that uh",
    "start": "911800",
    "end": "914480"
  },
  {
    "start": "913000",
    "end": "937000"
  },
  {
    "text": "even worse is your your on failure is",
    "start": "914480",
    "end": "917040"
  },
  {
    "text": "sort of missing half the failure cases",
    "start": "917040",
    "end": "920440"
  },
  {
    "text": "and your un suuccess has to handle",
    "start": "920440",
    "end": "922120"
  },
  {
    "text": "failure which is really horrendously bad",
    "start": "922120",
    "end": "924959"
  },
  {
    "text": "so you have a future which has success",
    "start": "924959",
    "end": "927199"
  },
  {
    "text": "or fail you have try which has success",
    "start": "927199",
    "end": "929360"
  },
  {
    "text": "or fail you may have other things that",
    "start": "929360",
    "end": "931920"
  },
  {
    "text": "have this sort of concept of success or",
    "start": "931920",
    "end": "934560"
  },
  {
    "text": "fail coming",
    "start": "934560",
    "end": "937120"
  },
  {
    "start": "937000",
    "end": "1056000"
  },
  {
    "text": "in so I'd actually rewrite it something",
    "start": "937120",
    "end": "940079"
  },
  {
    "text": "like this by the way this tie and knot",
    "start": "940079",
    "end": "942000"
  },
  {
    "text": "and stuff like that you know I was",
    "start": "942000",
    "end": "943600"
  },
  {
    "text": "looking at uh bind and I was thinking",
    "start": "943600",
    "end": "946279"
  },
  {
    "text": "okay what's sort of similar I mean you",
    "start": "946279",
    "end": "947759"
  },
  {
    "text": "can bind ropes and stuff so you can tie",
    "start": "947759",
    "end": "949560"
  },
  {
    "text": "ropes or you can knot them and that sort",
    "start": "949560",
    "end": "951680"
  },
  {
    "text": "of thing so uh I'd actually look at this",
    "start": "951680",
    "end": "954880"
  },
  {
    "text": "and",
    "start": "954880",
    "end": "955839"
  },
  {
    "text": "just not awesome great so if you come",
    "start": "955839",
    "end": "959560"
  },
  {
    "text": "out with something like this uh and you",
    "start": "959560",
    "end": "961920"
  },
  {
    "text": "you sort of structure your code like",
    "start": "961920",
    "end": "963199"
  },
  {
    "text": "this by the way this this forces you to",
    "start": "963199",
    "end": "965319"
  },
  {
    "text": "do something so it forces you to",
    "start": "965319",
    "end": "967160"
  },
  {
    "text": "separate uh your synchronous code from",
    "start": "967160",
    "end": "969920"
  },
  {
    "text": "what you would do with the result of",
    "start": "969920",
    "end": "971560"
  },
  {
    "text": "that asynchronous code which I quite",
    "start": "971560",
    "end": "973880"
  },
  {
    "text": "like uh and if you were to actually show",
    "start": "973880",
    "end": "976800"
  },
  {
    "text": "the implementation it's not going to be",
    "start": "976800",
    "end": "979680"
  },
  {
    "text": "that much different than what we were",
    "start": "979680",
    "end": "980959"
  },
  {
    "text": "doing with dmap where again we're doing",
    "start": "980959",
    "end": "983440"
  },
  {
    "text": "sort of pattern matching at the type",
    "start": "983440",
    "end": "985040"
  },
  {
    "text": "level here but we're doing uh the first",
    "start": "985040",
    "end": "988279"
  },
  {
    "text": "case a future and you're just going to",
    "start": "988279",
    "end": "990120"
  },
  {
    "text": "flat map so what this would do is if",
    "start": "990120",
    "end": "993160"
  },
  {
    "text": "your your function itself will return a",
    "start": "993160",
    "end": "995160"
  },
  {
    "text": "future and you'd get a future future of",
    "start": "995160",
    "end": "997160"
  },
  {
    "text": "B what you actually get is just a future",
    "start": "997160",
    "end": "1000399"
  },
  {
    "text": "of B uh and the second case is if you",
    "start": "1000399",
    "end": "1003759"
  },
  {
    "text": "would get a future of try of B you just",
    "start": "1003759",
    "end": "1006319"
  },
  {
    "text": "get a future of or of B and that's it",
    "start": "1006319",
    "end": "1009480"
  },
  {
    "text": "I'm just I'm just taking flat mapping as",
    "start": "1009480",
    "end": "1013360"
  },
  {
    "text": "much as I can I've left off the low",
    "start": "1013360",
    "end": "1015319"
  },
  {
    "text": "priority because well that's pretty",
    "start": "1015319",
    "end": "1017240"
  },
  {
    "text": "straightforward it's just map uh and if",
    "start": "1017240",
    "end": "1020279"
  },
  {
    "text": "you were to think about this in the",
    "start": "1020279",
    "end": "1021440"
  },
  {
    "text": "context of what was going on up here uh",
    "start": "1021440",
    "end": "1025678"
  },
  {
    "text": "you see that this not this this not. R",
    "start": "1025679",
    "end": "1028480"
  },
  {
    "text": "is actually it's pulling out it's sort",
    "start": "1028480",
    "end": "1030438"
  },
  {
    "text": "of piecing out and pulling out the typ",
    "start": "1030439",
    "end": "1032400"
  },
  {
    "text": "parameters that would be in our in our",
    "start": "1032400",
    "end": "1034400"
  },
  {
    "text": "nested future or a nested triy so that I",
    "start": "1034400",
    "end": "1037480"
  },
  {
    "text": "don't ever have to think about this I",
    "start": "1037480",
    "end": "1039438"
  },
  {
    "text": "don't have to to handle it or I don't",
    "start": "1039439",
    "end": "1042038"
  },
  {
    "text": "have to do anything with it",
    "start": "1042039",
    "end": "1047160"
  },
  {
    "text": "um it sort of of sort of yeah just sort",
    "start": "1047160",
    "end": "1050960"
  },
  {
    "text": "of pulled this stuff out wow",
    "start": "1050960",
    "end": "1054679"
  },
  {
    "text": "um I really raced through this all right",
    "start": "1054679",
    "end": "1058600"
  },
  {
    "start": "1056000",
    "end": "1298000"
  },
  {
    "text": "but I race through this because I know",
    "start": "1058600",
    "end": "1060120"
  },
  {
    "text": "there's going to be a lot of questions",
    "start": "1060120",
    "end": "1061840"
  },
  {
    "text": "generally when I do this stuff so who's",
    "start": "1061840",
    "end": "1064240"
  },
  {
    "text": "got questions who wants me to go back",
    "start": "1064240",
    "end": "1066039"
  },
  {
    "text": "and start going over stuff way in the",
    "start": "1066039",
    "end": "1069600"
  },
  {
    "text": "back all right so",
    "start": "1076880",
    "end": "1080039"
  },
  {
    "text": "uh yeah all right I'll I'll go I guess",
    "start": "1080039",
    "end": "1082039"
  },
  {
    "text": "I'll go through that because we",
    "start": "1082039",
    "end": "1083400"
  },
  {
    "text": "definitely have time um yeah aux is",
    "start": "1083400",
    "end": "1087039"
  },
  {
    "text": "definitely about that so so uh one of",
    "start": "1087039",
    "end": "1090919"
  },
  {
    "text": "the big problems is of course as you say",
    "start": "1090919",
    "end": "1092440"
  },
  {
    "text": "type inferencing if you were to take a",
    "start": "1092440",
    "end": "1094520"
  },
  {
    "text": "look at like this apply the way it's",
    "start": "1094520",
    "end": "1096000"
  },
  {
    "text": "defined and I'm returning this tie uh",
    "start": "1096000",
    "end": "1099159"
  },
  {
    "text": "and you think about how this is defined",
    "start": "1099159",
    "end": "1102200"
  },
  {
    "text": "itself uh the actual type if if you",
    "start": "1102200",
    "end": "1105440"
  },
  {
    "text": "think about in type inferencing is going",
    "start": "1105440",
    "end": "1107000"
  },
  {
    "text": "to say well this is some type of B r",
    "start": "1107000",
    "end": "1109720"
  },
  {
    "text": "with an abstract type",
    "start": "1109720",
    "end": "1112640"
  },
  {
    "text": "um and I look down here and I and I see",
    "start": "1112640",
    "end": "1116360"
  },
  {
    "text": "like without that aux going on and I'll",
    "start": "1116360",
    "end": "1119240"
  },
  {
    "text": "I'll tell you exactly how that aux is",
    "start": "1119240",
    "end": "1121280"
  },
  {
    "text": "working it's going to say that's some",
    "start": "1121280",
    "end": "1122799"
  },
  {
    "text": "type with some abstract type so even",
    "start": "1122799",
    "end": "1125480"
  },
  {
    "text": "though uh you could look at the value of",
    "start": "1125480",
    "end": "1128159"
  },
  {
    "text": "it and the value would be consistent",
    "start": "1128159",
    "end": "1130320"
  },
  {
    "text": "with what you expect the types lost so",
    "start": "1130320",
    "end": "1134240"
  },
  {
    "text": "this this type parameter we have done",
    "start": "1134240",
    "end": "1136720"
  },
  {
    "text": "here the way it's defined is is very",
    "start": "1136720",
    "end": "1139600"
  },
  {
    "text": "specific and and uh sort of critical to",
    "start": "1139600",
    "end": "1143200"
  },
  {
    "text": "this this type of like hey compiler by",
    "start": "1143200",
    "end": "1146240"
  },
  {
    "text": "the way this is what you need to know uh",
    "start": "1146240",
    "end": "1149120"
  },
  {
    "text": "this is if you want to think about it in",
    "start": "1149120",
    "end": "1151320"
  },
  {
    "text": "mathematical terms like the way this is",
    "start": "1151320",
    "end": "1153360"
  },
  {
    "text": "defined is is it works this way and it",
    "start": "1153360",
    "end": "1156440"
  },
  {
    "text": "works this way in other words it's one",
    "start": "1156440",
    "end": "1158520"
  },
  {
    "text": "to one and it's on to or or it's you",
    "start": "1158520",
    "end": "1160840"
  },
  {
    "text": "know they're an inverse or an alias of",
    "start": "1160840",
    "end": "1162760"
  },
  {
    "text": "each other uh and this is saying like by",
    "start": "1162760",
    "end": "1165520"
  },
  {
    "text": "the way this third parameter is my",
    "start": "1165520",
    "end": "1168320"
  },
  {
    "text": "dependent type and if I Define it that",
    "start": "1168320",
    "end": "1171360"
  },
  {
    "text": "way the compiler knows okay this is the",
    "start": "1171360",
    "end": "1174200"
  },
  {
    "text": "type it must be it will actually do a",
    "start": "1174200",
    "end": "1176159"
  },
  {
    "text": "type check if you try and put something",
    "start": "1176159",
    "end": "1178400"
  },
  {
    "text": "in and Define it and say like whether",
    "start": "1178400",
    "end": "1180039"
  },
  {
    "text": "this is or isn't the type you",
    "start": "1180039",
    "end": "1182559"
  },
  {
    "text": "expect the weird thing is is the way",
    "start": "1182559",
    "end": "1185799"
  },
  {
    "text": "that aux is defined way up there it's",
    "start": "1185799",
    "end": "1187919"
  },
  {
    "text": "kind of like recursively defined in the",
    "start": "1187919",
    "end": "1190400"
  },
  {
    "text": "type that I'm actually going to lose",
    "start": "1190400",
    "end": "1192960"
  },
  {
    "text": "which is kind of odd but uh somehow it",
    "start": "1192960",
    "end": "1196520"
  },
  {
    "text": "actually works this this parameter here",
    "start": "1196520",
    "end": "1199000"
  },
  {
    "text": "tie when it goes tie do in it the",
    "start": "1199000",
    "end": "1202280"
  },
  {
    "text": "compiler will actually keep that typ",
    "start": "1202280",
    "end": "1204200"
  },
  {
    "text": "parameter right up until there uh after",
    "start": "1204200",
    "end": "1207679"
  },
  {
    "text": "that it'll lose it unless I do",
    "start": "1207679",
    "end": "1210000"
  },
  {
    "text": "this it just it just says well I I know",
    "start": "1210000",
    "end": "1213000"
  },
  {
    "text": "right up to that point and now I've",
    "start": "1213000",
    "end": "1214080"
  },
  {
    "text": "forgotten it I don't know why it just",
    "start": "1214080",
    "end": "1216200"
  },
  {
    "text": "poof gone so you you do these sort of",
    "start": "1216200",
    "end": "1219559"
  },
  {
    "text": "ORS that you'll see in some of some of",
    "start": "1219559",
    "end": "1221240"
  },
  {
    "text": "the libraries that use these dependent",
    "start": "1221240",
    "end": "1222960"
  },
  {
    "text": "types uh so that that type keeps going",
    "start": "1222960",
    "end": "1226120"
  },
  {
    "text": "through and propagates at each step",
    "start": "1226120",
    "end": "1228080"
  },
  {
    "text": "along the way",
    "start": "1228080",
    "end": "1230080"
  },
  {
    "text": "um does that that answer your",
    "start": "1230080",
    "end": "1234000"
  },
  {
    "text": "question anyone else",
    "start": "1234000",
    "end": "1237919"
  },
  {
    "text": "yes do I have",
    "start": "1243440",
    "end": "1247280"
  },
  {
    "text": "uh yeah I I got I could actually show",
    "start": "1247280",
    "end": "1249880"
  },
  {
    "text": "you something from from my other talk",
    "start": "1249880",
    "end": "1252880"
  },
  {
    "text": "uh but what it'll tell you is is it'll",
    "start": "1252880",
    "end": "1255919"
  },
  {
    "text": "actually say this it'll say uh i c r",
    "start": "1255919",
    "end": "1260039"
  },
  {
    "text": "pound",
    "start": "1260039",
    "end": "1261200"
  },
  {
    "text": "in that's it that's your type like it's",
    "start": "1261200",
    "end": "1263799"
  },
  {
    "text": "some type abstract in",
    "start": "1263799",
    "end": "1266159"
  },
  {
    "text": "awesome it won't actually say like this",
    "start": "1266159",
    "end": "1268280"
  },
  {
    "text": "is an INT or this is a double another",
    "start": "1268280",
    "end": "1272480"
  },
  {
    "text": "hand I and I can show you afterwards by",
    "start": "1272480",
    "end": "1275080"
  },
  {
    "text": "the way I have no problem any other",
    "start": "1275080",
    "end": "1277279"
  },
  {
    "text": "talks all right",
    "start": "1277279",
    "end": "1279320"
  },
  {
    "text": "questions yes",
    "start": "1279320",
    "end": "1281400"
  },
  {
    "text": "no wow okay I got done really",
    "start": "1281400",
    "end": "1286440"
  },
  {
    "text": "quick sorry about that",
    "start": "1286440",
    "end": "1290519"
  }
]