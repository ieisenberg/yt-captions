[
  {
    "text": "hi my name is Seth lad and today on Dar",
    "start": "199",
    "end": "1880"
  },
  {
    "text": "tips we continue our tour of the DAR",
    "start": "1880",
    "end": "3600"
  },
  {
    "text": "Language by taking a look at variables",
    "start": "3600",
    "end": "5799"
  },
  {
    "text": "think of a variable as a nickname you",
    "start": "5799",
    "end": "7319"
  },
  {
    "text": "give to an object instead of referring",
    "start": "7319",
    "end": "9080"
  },
  {
    "text": "to an object by some formal computer",
    "start": "9080",
    "end": "10880"
  },
  {
    "text": "generated serial number like a326 C d25a",
    "start": "10880",
    "end": "14759"
  },
  {
    "text": "you can instead give it a meaningful",
    "start": "14759",
    "end": "16278"
  },
  {
    "text": "name like password or Response Code or",
    "start": "16279",
    "end": "18800"
  },
  {
    "text": "home address once the object has a",
    "start": "18800",
    "end": "20960"
  },
  {
    "text": "nickname you can refer to it ask it",
    "start": "20960",
    "end": "22840"
  },
  {
    "text": "questions or retrieve its data darts",
    "start": "22840",
    "end": "25359"
  },
  {
    "text": "variables are certainly familiar and",
    "start": "25359",
    "end": "26599"
  },
  {
    "text": "easy to learn but there are few cool",
    "start": "26599",
    "end": "28199"
  },
  {
    "text": "features like optional types to show off",
    "start": "28199",
    "end": "30359"
  },
  {
    "text": "let's get",
    "start": "30359",
    "end": "31730"
  },
  {
    "text": "[Music]",
    "start": "31730",
    "end": "36120"
  },
  {
    "text": "started here's a simple D variable",
    "start": "36120",
    "end": "38480"
  },
  {
    "text": "initialized with a value there are three",
    "start": "38480",
    "end": "40520"
  },
  {
    "text": "parts of this statement VAR which",
    "start": "40520",
    "end": "42480"
  },
  {
    "text": "declares it as a dynamic variable answer",
    "start": "42480",
    "end": "45239"
  },
  {
    "text": "which is the nickname or variable name",
    "start": "45239",
    "end": "46760"
  },
  {
    "text": "for an object and 42 which is the object",
    "start": "46760",
    "end": "49920"
  },
  {
    "text": "itself we say a variable is a reference",
    "start": "49920",
    "end": "52359"
  },
  {
    "text": "to an object because a variable simply",
    "start": "52359",
    "end": "54039"
  },
  {
    "text": "refers to some object living in the",
    "start": "54039",
    "end": "55719"
  },
  {
    "text": "virtual machine it helps to remember",
    "start": "55719",
    "end": "57719"
  },
  {
    "text": "that Dart is a purely objectoriented",
    "start": "57719",
    "end": "59480"
  },
  {
    "text": "language where everything is an object",
    "start": "59480",
    "end": "61600"
  },
  {
    "text": "variables are how you get a handle to",
    "start": "61600",
    "end": "63320"
  },
  {
    "text": "these objects I use VAR to declare the",
    "start": "63320",
    "end": "66000"
  },
  {
    "text": "variable as Dynamic which means that the",
    "start": "66000",
    "end": "68000"
  },
  {
    "text": "variable is perfectly happy to refer to",
    "start": "68000",
    "end": "69880"
  },
  {
    "text": "any type of object using VAR is a tur",
    "start": "69880",
    "end": "72720"
  },
  {
    "text": "way to write dark code especially when",
    "start": "72720",
    "end": "74320"
  },
  {
    "text": "the variable is initialized with an",
    "start": "74320",
    "end": "75680"
  },
  {
    "text": "obvious value tools such as D editor can",
    "start": "75680",
    "end": "78360"
  },
  {
    "text": "easily infer that this variable refers",
    "start": "78360",
    "end": "80280"
  },
  {
    "text": "to an object of type integer however",
    "start": "80280",
    "end": "83040"
  },
  {
    "text": "sometimes it's beneficial to be even",
    "start": "83040",
    "end": "84560"
  },
  {
    "text": "more explicit with the types variables",
    "start": "84560",
    "end": "86600"
  },
  {
    "text": "can refer to for example here's a",
    "start": "86600",
    "end": "89560"
  },
  {
    "text": "variable that is not initialized to a",
    "start": "89560",
    "end": "91320"
  },
  {
    "text": "specific value it's impossible for the",
    "start": "91320",
    "end": "93360"
  },
  {
    "text": "tools or your fellow developers to know",
    "start": "93360",
    "end": "95159"
  },
  {
    "text": "what you intend to do what is results",
    "start": "95159",
    "end": "97360"
  },
  {
    "text": "supposed to refer to a number a string",
    "start": "97360",
    "end": "100159"
  },
  {
    "text": "luckily you can easily say I expect this",
    "start": "100159",
    "end": "101960"
  },
  {
    "text": "variable to refer to an integer with",
    "start": "101960",
    "end": "103520"
  },
  {
    "text": "darts type annotations here's an example",
    "start": "103520",
    "end": "106079"
  },
  {
    "text": "of a dart variable annotated as an",
    "start": "106079",
    "end": "107960"
  },
  {
    "text": "integer notice how VAR is replaced by",
    "start": "107960",
    "end": "110320"
  },
  {
    "text": "int it's clear that I'm saying I expect",
    "start": "110320",
    "end": "112520"
  },
  {
    "text": "result to refer to integers if you",
    "start": "112520",
    "end": "115479"
  },
  {
    "text": "accidentally assign an object that is",
    "start": "115479",
    "end": "117000"
  },
  {
    "text": "not an integer to the variable as this",
    "start": "117000",
    "end": "119159"
  },
  {
    "text": "example shows darts check mode will",
    "start": "119159",
    "end": "121200"
  },
  {
    "text": "throw an error all thanks to the use of",
    "start": "121200",
    "end": "123119"
  },
  {
    "text": "type annotations you can learn more",
    "start": "123119",
    "end": "125360"
  },
  {
    "text": "about check mode in a previous video but",
    "start": "125360",
    "end": "127439"
  },
  {
    "text": "for now all you need to know is check",
    "start": "127439",
    "end": "129280"
  },
  {
    "text": "mode gives you a feedback if an object's",
    "start": "129280",
    "end": "131400"
  },
  {
    "text": "type does not match its variable's type",
    "start": "131400",
    "end": "134280"
  },
  {
    "text": "so type annotations are great when",
    "start": "134280",
    "end": "136040"
  },
  {
    "text": "variables are declared but not",
    "start": "136040",
    "end": "137280"
  },
  {
    "text": "initialized but that leads to the",
    "start": "137280",
    "end": "138920"
  },
  {
    "text": "question what value is an uninitialized",
    "start": "138920",
    "end": "141800"
  },
  {
    "text": "variable set to you by default that is",
    "start": "141800",
    "end": "143800"
  },
  {
    "text": "if you don't initialize a variable with",
    "start": "143800",
    "end": "145400"
  },
  {
    "text": "a value what value does it have",
    "start": "145400",
    "end": "148400"
  },
  {
    "text": "specifically what is the varable age set",
    "start": "148400",
    "end": "151160"
  },
  {
    "text": "to in this example Hint it doesn't",
    "start": "151160",
    "end": "153239"
  },
  {
    "text": "matter if a type annotation is",
    "start": "153239",
    "end": "155480"
  },
  {
    "text": "used any variable that is not",
    "start": "155480",
    "end": "157560"
  },
  {
    "text": "initialized when it is declared has the",
    "start": "157560",
    "end": "159360"
  },
  {
    "text": "default value of null in other words if",
    "start": "159360",
    "end": "161760"
  },
  {
    "text": "you don't set an initial value when you",
    "start": "161760",
    "end": "163360"
  },
  {
    "text": "declare a variable it is set to null",
    "start": "163360",
    "end": "165720"
  },
  {
    "text": "this is a simple rule and is not",
    "start": "165720",
    "end": "167400"
  },
  {
    "text": "affected by the presence of type",
    "start": "167400",
    "end": "168640"
  },
  {
    "text": "annotations because remember type",
    "start": "168640",
    "end": "170239"
  },
  {
    "text": "annotations are optional finally pun",
    "start": "170239",
    "end": "172400"
  },
  {
    "text": "intended as is the case in most",
    "start": "172400",
    "end": "174159"
  },
  {
    "text": "programming languages variables in Dart",
    "start": "174159",
    "end": "176040"
  },
  {
    "text": "have the ability to be well fickle they",
    "start": "176040",
    "end": "178400"
  },
  {
    "text": "can refer to one object and then then",
    "start": "178400",
    "end": "180159"
  },
  {
    "text": "another without a care in the world here",
    "start": "180159",
    "end": "182599"
  },
  {
    "text": "in this example the variable name refers",
    "start": "182599",
    "end": "185000"
  },
  {
    "text": "first to the string Bob and then later",
    "start": "185000",
    "end": "186959"
  },
  {
    "text": "to the string Alice this is confusing",
    "start": "186959",
    "end": "189200"
  },
  {
    "text": "because code might have an assumption",
    "start": "189200",
    "end": "191040"
  },
  {
    "text": "that a variable refers to one and only",
    "start": "191040",
    "end": "192760"
  },
  {
    "text": "one object in some cases if a variable",
    "start": "192760",
    "end": "195040"
  },
  {
    "text": "gets reassigned subtle bugs crop up what",
    "start": "195040",
    "end": "197640"
  },
  {
    "text": "if you could catch those bugs earlier by",
    "start": "197640",
    "end": "199319"
  },
  {
    "text": "saying this variable should always refer",
    "start": "199319",
    "end": "201080"
  },
  {
    "text": "to this object and that's final luckily",
    "start": "201080",
    "end": "204360"
  },
  {
    "text": "in Dart you can Mark a variable as final",
    "start": "204360",
    "end": "206840"
  },
  {
    "text": "which means the variable cannot be",
    "start": "206840",
    "end": "208239"
  },
  {
    "text": "reassigned after it is initial ized in",
    "start": "208239",
    "end": "210640"
  },
  {
    "text": "other words a final variable is one that",
    "start": "210640",
    "end": "212360"
  },
  {
    "text": "has been given an object for the final",
    "start": "212360",
    "end": "214319"
  },
  {
    "text": "time and no more object assignments are",
    "start": "214319",
    "end": "216480"
  },
  {
    "text": "allowed if you do attempt to reassign",
    "start": "216480",
    "end": "218439"
  },
  {
    "text": "the variable as this example shows the",
    "start": "218439",
    "end": "220599"
  },
  {
    "text": "code will fail to compile using final",
    "start": "220599",
    "end": "223519"
  },
  {
    "text": "with type annotations is similar as",
    "start": "223519",
    "end": "225319"
  },
  {
    "text": "shown in this example you can use both",
    "start": "225319",
    "end": "226959"
  },
  {
    "text": "the keyword final and a type annotation",
    "start": "226959",
    "end": "229439"
  },
  {
    "text": "at the same time using final is good",
    "start": "229439",
    "end": "231480"
  },
  {
    "text": "practice to clearly Mark variables that",
    "start": "231480",
    "end": "233120"
  },
  {
    "text": "should not be reassigned many subtle",
    "start": "233120",
    "end": "235280"
  },
  {
    "text": "bugs can occur when a variable is",
    "start": "235280",
    "end": "236760"
  },
  {
    "text": "accidentally assigned to a different",
    "start": "236760",
    "end": "238000"
  },
  {
    "text": "object the keyword final is a another",
    "start": "238000",
    "end": "240000"
  },
  {
    "text": "way to clearly express your intent to",
    "start": "240000",
    "end": "241560"
  },
  {
    "text": "your tools and fellow developers we'll",
    "start": "241560",
    "end": "244200"
  },
  {
    "text": "revisit final after we introduce classes",
    "start": "244200",
    "end": "246159"
  },
  {
    "text": "and objects and there's this whole con",
    "start": "246159",
    "end": "247799"
  },
  {
    "text": "thing we haven't even talked about yet",
    "start": "247799",
    "end": "249480"
  },
  {
    "text": "so we're not completely done with",
    "start": "249480",
    "end": "250799"
  },
  {
    "text": "variables but we'll leave the rest of",
    "start": "250799",
    "end": "252599"
  },
  {
    "text": "future episodes the short short version",
    "start": "252599",
    "end": "254879"
  },
  {
    "text": "of today's show variables in Dart can be",
    "start": "254879",
    "end": "257079"
  },
  {
    "text": "dynamic or typed variables are given a",
    "start": "257079",
    "end": "259560"
  },
  {
    "text": "default value of null unless otherwise",
    "start": "259560",
    "end": "261400"
  },
  {
    "text": "initialized and variables can be marked",
    "start": "261400",
    "end": "263400"
  },
  {
    "text": "as final to ensure they only ever point",
    "start": "263400",
    "end": "265840"
  },
  {
    "text": "to one and only one object thanks for",
    "start": "265840",
    "end": "268759"
  },
  {
    "text": "watching my name is Seth L and as we",
    "start": "268759",
    "end": "270320"
  },
  {
    "text": "stay here on Dart tips stay sharp click",
    "start": "270320",
    "end": "272840"
  },
  {
    "text": "here to subscribe to our channel for",
    "start": "272840",
    "end": "274160"
  },
  {
    "text": "more episodes of Dart tips we appreciate",
    "start": "274160",
    "end": "276160"
  },
  {
    "text": "any thoughts you might have for the",
    "start": "276160",
    "end": "277240"
  },
  {
    "text": "series please leave them in the comments",
    "start": "277240",
    "end": "278960"
  },
  {
    "text": "below if you have any additional",
    "start": "278960",
    "end": "280639"
  },
  {
    "text": "questions about Dart please drop by",
    "start": "280639",
    "end": "282199"
  },
  {
    "text": "stack Overflow where Dart experts are",
    "start": "282199",
    "end": "283800"
  },
  {
    "text": "standing by to help you out see you next",
    "start": "283800",
    "end": "285520"
  },
  {
    "text": "time",
    "start": "285520",
    "end": "288198"
  }
]