[
  {
    "text": "and then there's this idea of concepts",
    "start": "1160",
    "end": "3889"
  },
  {
    "text": "that puts some now I've never even the I",
    "start": "3889",
    "end": "11450"
  },
  {
    "text": "don't know if it was ever available in",
    "start": "11450",
    "end": "13129"
  },
  {
    "text": "any form but it puts some constraints on",
    "start": "13129",
    "end": "16520"
  },
  {
    "text": "the stuff you can parameterize",
    "start": "16520",
    "end": "18160"
  },
  {
    "text": "essentially let me try and explain yes",
    "start": "18160",
    "end": "22330"
  },
  {
    "text": "so yes it wasn't there ten years ago we",
    "start": "22330",
    "end": "27470"
  },
  {
    "text": "have had versions of it that actually",
    "start": "27470",
    "end": "29720"
  },
  {
    "text": "work for the last four or five years it",
    "start": "29720",
    "end": "34850"
  },
  {
    "text": "was a design by Gabby does raise true",
    "start": "34850",
    "end": "38960"
  },
  {
    "text": "certain and me we were professors and",
    "start": "38960",
    "end": "42170"
  },
  {
    "text": "postdocs in Texas at the time and the",
    "start": "42170",
    "end": "47510"
  },
  {
    "text": "implementation by Andres Arden has been",
    "start": "47510",
    "end": "49309"
  },
  {
    "text": "available for at that time and it is",
    "start": "49309",
    "end": "55660"
  },
  {
    "text": "part of C++ 20 and the standard library",
    "start": "55660",
    "end": "61309"
  },
  {
    "text": "that uses it so this is becoming really",
    "start": "61309",
    "end": "63530"
  },
  {
    "text": "very real it's available in clang in GCC",
    "start": "63530",
    "end": "71230"
  },
  {
    "text": "GCC for a couple of years and I believe",
    "start": "71230",
    "end": "74150"
  },
  {
    "text": "Microsoft assume assume going to do it",
    "start": "74150",
    "end": "76700"
  },
  {
    "text": "expect a wall of C++ 20 to be available",
    "start": "76700",
    "end": "79280"
  },
  {
    "text": "so in all the major compilers in 20 but",
    "start": "79280",
    "end": "84520"
  },
  {
    "text": "this kind of stuff is it's available now",
    "start": "84520",
    "end": "88030"
  },
  {
    "text": "I'm just saying that because otherwise",
    "start": "88030",
    "end": "90740"
  },
  {
    "text": "people might think I was talking about",
    "start": "90740",
    "end": "92330"
  },
  {
    "text": "science fiction and so what I'm going to",
    "start": "92330",
    "end": "95450"
  },
  {
    "text": "say Israel on Crete you can write it",
    "start": "95450",
    "end": "97220"
  },
  {
    "text": "today",
    "start": "97220",
    "end": "98960"
  },
  {
    "text": "and there's production users of it so",
    "start": "98960",
    "end": "101630"
  },
  {
    "text": "the basic idea is that when you have a a",
    "start": "101630",
    "end": "106900"
  },
  {
    "text": "generic component like a sort function",
    "start": "106900",
    "end": "111220"
  },
  {
    "text": "the sort function will require at least",
    "start": "111220",
    "end": "114740"
  },
  {
    "text": "two parameters one a data structure with",
    "start": "114740",
    "end": "119000"
  },
  {
    "text": "a given type and comparison criteria and",
    "start": "119000",
    "end": "123979"
  },
  {
    "text": "these things are related but obviously",
    "start": "123979",
    "end": "127310"
  },
  {
    "text": "you can't compare things if you don't",
    "start": "127310",
    "end": "128899"
  },
  {
    "text": "know what the type of things you compare",
    "start": "128899",
    "end": "132340"
  },
  {
    "text": "and so you want to be able to say I'm",
    "start": "132340",
    "end": "136720"
  },
  {
    "text": "going to sort something and did this so",
    "start": "136720",
    "end": "139150"
  },
  {
    "text": "be sortable what does it mean to be",
    "start": "139150",
    "end": "140890"
  },
  {
    "text": "sortable you look it up in the standard",
    "start": "140890",
    "end": "142720"
  },
  {
    "text": "it has to have it has to be a sequence",
    "start": "142720",
    "end": "145480"
  },
  {
    "text": "with a beginner and an end there has to",
    "start": "145480",
    "end": "148330"
  },
  {
    "text": "be random access to that sequence and",
    "start": "148330",
    "end": "150459"
  },
  {
    "text": "there has to be the element types has to",
    "start": "150459",
    "end": "155890"
  },
  {
    "text": "be comparable like a more like operator",
    "start": "155890",
    "end": "159250"
  },
  {
    "text": "can I do it yes what illogical already",
    "start": "159250",
    "end": "162010"
  },
  {
    "text": "cannot basically what concepts are there",
    "start": "162010",
    "end": "165160"
  },
  {
    "text": "compile-time predicates there predicates",
    "start": "165160",
    "end": "167590"
  },
  {
    "text": "you can ask are you a sequence yes I",
    "start": "167590",
    "end": "171250"
  },
  {
    "text": "have begin an end",
    "start": "171250",
    "end": "172870"
  },
  {
    "text": "are you a random exit sequence yes I",
    "start": "172870",
    "end": "176440"
  },
  {
    "text": "have subscripting and plus it's your",
    "start": "176440",
    "end": "181120"
  },
  {
    "text": "element type something that has a less",
    "start": "181120",
    "end": "182890"
  },
  {
    "text": "then yes",
    "start": "182890",
    "end": "183940"
  },
  {
    "text": "I have a less than hits and so basically",
    "start": "183940",
    "end": "187630"
  },
  {
    "text": "that's the system and so instead of",
    "start": "187630",
    "end": "189940"
  },
  {
    "text": "saying I will take a parameter of any",
    "start": "189940",
    "end": "192310"
  },
  {
    "text": "type it'll say I'll take something",
    "start": "192310",
    "end": "193989"
  },
  {
    "text": "that's horrible and it's well defined",
    "start": "193989",
    "end": "197980"
  },
  {
    "text": "and so we say okay you can sorta less",
    "start": "197980",
    "end": "201190"
  },
  {
    "text": "than I don't want less then I want",
    "start": "201190",
    "end": "203019"
  },
  {
    "text": "greater than us or something I invent so",
    "start": "203019",
    "end": "205390"
  },
  {
    "text": "you have two parameters the sortable",
    "start": "205390",
    "end": "207430"
  },
  {
    "text": "thing and the compassion criteria and",
    "start": "207430",
    "end": "210850"
  },
  {
    "text": "the comparison criteria will say well I",
    "start": "210850",
    "end": "214180"
  },
  {
    "text": "can you you can write it saying it",
    "start": "214180",
    "end": "218200"
  },
  {
    "text": "should operate on the element type and",
    "start": "218200",
    "end": "221549"
  },
  {
    "text": "it has the compassion operations so",
    "start": "221549",
    "end": "225459"
  },
  {
    "text": "that's the simply the fundamental thing",
    "start": "225459",
    "end": "228010"
  },
  {
    "text": "it's compile-time predicates do you have",
    "start": "228010",
    "end": "230260"
  },
  {
    "text": "the properties I need so it specifies",
    "start": "230260",
    "end": "233019"
  },
  {
    "text": "the requirements of the code on the",
    "start": "233019",
    "end": "236320"
  },
  {
    "text": "parameters that gets yes there are lots",
    "start": "236320",
    "end": "240340"
  },
  {
    "text": "of types actually but operating in the",
    "start": "240340",
    "end": "244359"
  },
  {
    "text": "space of concepts concepts the word",
    "start": "244359",
    "end": "248769"
  },
  {
    "text": "concept was used by Alec Stephan of who",
    "start": "248769",
    "end": "253090"
  },
  {
    "text": "is sort of the father of generic",
    "start": "253090",
    "end": "255160"
  },
  {
    "text": "programming in the context of C++",
    "start": "255160",
    "end": "258870"
  },
  {
    "text": "there's other places that use that word",
    "start": "258870",
    "end": "262360"
  },
  {
    "text": "but the way we call Genetic Programming",
    "start": "262360",
    "end": "264040"
  },
  {
    "text": "is Alex's and he called them concepts",
    "start": "264040",
    "end": "267310"
  },
  {
    "text": "because he said there they are the sort",
    "start": "267310",
    "end": "269050"
  },
  {
    "text": "of the fundamental concepts of an area",
    "start": "269050",
    "end": "271330"
  },
  {
    "text": "so they should be called concepts and",
    "start": "271330",
    "end": "274030"
  },
  {
    "text": "we've had concepts all the time if you",
    "start": "274030",
    "end": "276400"
  },
  {
    "text": "look at the K&R book about si si has",
    "start": "276400",
    "end": "280030"
  },
  {
    "text": "arithmetic types and it has integral",
    "start": "280030",
    "end": "285880"
  },
  {
    "text": "types it says so in the book and then it",
    "start": "285880",
    "end": "289390"
  },
  {
    "text": "lists what they are and they have",
    "start": "289390",
    "end": "291610"
  },
  {
    "text": "certain properties the difference to me",
    "start": "291610",
    "end": "293950"
  },
  {
    "text": "is that we can actually write a concept",
    "start": "293950",
    "end": "296620"
  },
  {
    "text": "that will ask a type are you an integral",
    "start": "296620",
    "end": "299830"
  },
  {
    "text": "type do you have the properties",
    "start": "299830",
    "end": "302440"
  },
  {
    "text": "necessary to be an integral type do you",
    "start": "302440",
    "end": "305080"
  },
  {
    "text": "have cross - divide so what may be the",
    "start": "305080",
    "end": "309640"
  },
  {
    "text": "story of concepts because I thought it",
    "start": "309640",
    "end": "314890"
  },
  {
    "text": "might be part of C++ 11 C C C's o X or",
    "start": "314890",
    "end": "320770"
  },
  {
    "text": "whatever it was at the time what was the",
    "start": "320770",
    "end": "323770"
  },
  {
    "text": "why didn't it what like what we'll talk",
    "start": "323770",
    "end": "327460"
  },
  {
    "text": "a little bit about this fascinating",
    "start": "327460",
    "end": "328510"
  },
  {
    "text": "process of standards because I think",
    "start": "328510",
    "end": "330820"
  },
  {
    "text": "it's really interesting for people it's",
    "start": "330820",
    "end": "332380"
  },
  {
    "text": "interesting for me but why did it take",
    "start": "332380",
    "end": "335710"
  },
  {
    "text": "so long what shapes that the idea of",
    "start": "335710",
    "end": "338590"
  },
  {
    "text": "concepts take what were the challenges",
    "start": "338590",
    "end": "342480"
  },
  {
    "text": "back in 87 or there abouts 1987 well",
    "start": "342480",
    "end": "348960"
  },
  {
    "text": "1987 like they are about so when I was",
    "start": "348960",
    "end": "351250"
  },
  {
    "text": "designing templates obviously I wanted",
    "start": "351250",
    "end": "353710"
  },
  {
    "text": "to express the notion of what is",
    "start": "353710",
    "end": "356470"
  },
  {
    "text": "required by a template of its arguments",
    "start": "356470",
    "end": "359620"
  },
  {
    "text": "and so I looked at this and basically",
    "start": "359620",
    "end": "363430"
  },
  {
    "text": "for for templates I wanted three",
    "start": "363430",
    "end": "365290"
  },
  {
    "text": "properties I wanted to be very flexible",
    "start": "365290",
    "end": "369720"
  },
  {
    "text": "it had to be able to express things I",
    "start": "369720",
    "end": "374140"
  },
  {
    "text": "couldn't imagine because I know I can't",
    "start": "374140",
    "end": "377620"
  },
  {
    "text": "imagine everything and I've been",
    "start": "377620",
    "end": "379210"
  },
  {
    "text": "suffering from languages and try to",
    "start": "379210",
    "end": "381220"
  },
  {
    "text": "constrain you to only do what you're the",
    "start": "381220",
    "end": "384730"
  },
  {
    "text": "designer thought good didn't want to do",
    "start": "384730",
    "end": "387370"
  },
  {
    "text": "that secondly it had to run faster",
    "start": "387370",
    "end": "391550"
  },
  {
    "text": "as fast or faster that hand-written code",
    "start": "391550",
    "end": "394460"
  },
  {
    "text": "so basically if I have a vector of T and",
    "start": "394460",
    "end": "397250"
  },
  {
    "text": "I take a vector of cha it should run as",
    "start": "397250",
    "end": "401030"
  },
  {
    "text": "fast as you build a vector of cha",
    "start": "401030",
    "end": "403520"
  },
  {
    "text": "yourself without parameterization and",
    "start": "403520",
    "end": "406930"
  },
  {
    "text": "second and thirdly I wanted to be able",
    "start": "406930",
    "end": "410300"
  },
  {
    "text": "to express the constraints of of the",
    "start": "410300",
    "end": "416930"
  },
  {
    "text": "arguments have proper type checking of",
    "start": "416930",
    "end": "419240"
  },
  {
    "text": "the interfaces and neither I nor anybody",
    "start": "419240",
    "end": "422840"
  },
  {
    "text": "else at the time knew how to get all",
    "start": "422840",
    "end": "425659"
  },
  {
    "text": "three and I thought for C++ I must have",
    "start": "425659",
    "end": "429650"
  },
  {
    "text": "the two first otherwise it's not C++ and",
    "start": "429650",
    "end": "433990"
  },
  {
    "text": "it bothered me for an hour a couple of",
    "start": "433990",
    "end": "436639"
  },
  {
    "text": "decades that I couldn't solve the third",
    "start": "436639",
    "end": "438289"
  },
  {
    "text": "one I mean I was the one that put",
    "start": "438289",
    "end": "441699"
  },
  {
    "text": "function argument type checking in to",
    "start": "441699",
    "end": "444169"
  },
  {
    "text": "see I know the value of good interfaces",
    "start": "444169",
    "end": "447380"
  },
  {
    "text": "I didn't invent that idea it's very",
    "start": "447380",
    "end": "449210"
  },
  {
    "text": "common but I did it and I wanted to do",
    "start": "449210",
    "end": "453680"
  },
  {
    "text": "the same for templates of course and I",
    "start": "453680",
    "end": "456469"
  },
  {
    "text": "could so it bothered me then we try it",
    "start": "456469",
    "end": "460099"
  },
  {
    "text": "again mm of to 2003",
    "start": "460099",
    "end": "464030"
  },
  {
    "text": "cavitus raised and I started analyzing",
    "start": "464030",
    "end": "466849"
  },
  {
    "text": "the problem explained possible solutions",
    "start": "466849",
    "end": "471139"
  },
  {
    "text": "it was not a complete design a group in",
    "start": "471139",
    "end": "475060"
  },
  {
    "text": "University of Indiana an old friend of",
    "start": "475060",
    "end": "478849"
  },
  {
    "text": "mine they started a project at Indiana",
    "start": "478849",
    "end": "483620"
  },
  {
    "text": "and we thought we could get a good",
    "start": "483620",
    "end": "491360"
  },
  {
    "text": "system of concepts in another two or",
    "start": "491360",
    "end": "494630"
  },
  {
    "text": "three years that would have made C++ la",
    "start": "494630",
    "end": "499580"
  },
  {
    "text": "11 to C++ Oh 607 well it turns out that",
    "start": "499580",
    "end": "507139"
  },
  {
    "text": "I think we got a lot of the fundamental",
    "start": "507139",
    "end": "510430"
  },
  {
    "text": "ideas are wrong they were took on",
    "start": "510430",
    "end": "513289"
  },
  {
    "text": "conventional they didn't quite fit C++",
    "start": "513289",
    "end": "517578"
  },
  {
    "text": "in my opinion didn't serve implicit",
    "start": "517579",
    "end": "520310"
  },
  {
    "text": "conversions very well it didn't",
    "start": "520310",
    "end": "522950"
  },
  {
    "text": "of mixed mixed type arithmetic Mitch",
    "start": "522950",
    "end": "526340"
  },
  {
    "text": "type computation computations very well",
    "start": "526340",
    "end": "529220"
  },
  {
    "text": "a lot of stuff came out of the",
    "start": "529220",
    "end": "531680"
  },
  {
    "text": "functional",
    "start": "531680",
    "end": "533580"
  },
  {
    "text": "community and it that community didn't",
    "start": "533580",
    "end": "540820"
  },
  {
    "text": "deal with multiple types in in the same",
    "start": "540820",
    "end": "543730"
  },
  {
    "text": "way as C++ does had more constraints on",
    "start": "543730",
    "end": "547630"
  },
  {
    "text": "on what you could express and didn't",
    "start": "547630",
    "end": "551350"
  },
  {
    "text": "have the draconian performance",
    "start": "551350",
    "end": "554110"
  },
  {
    "text": "requirements and basically we tried we",
    "start": "554110",
    "end": "557740"
  },
  {
    "text": "tried very hard we had some successes",
    "start": "557740",
    "end": "560160"
  },
  {
    "text": "but it just in the end wasn't didn't",
    "start": "560160",
    "end": "565810"
  },
  {
    "text": "compile fast enough was too hard to use",
    "start": "565810",
    "end": "568690"
  },
  {
    "text": "and didn't run fast enough unless you",
    "start": "568690",
    "end": "573250"
  },
  {
    "text": "had optimizes that was beyond the state",
    "start": "573250",
    "end": "578470"
  },
  {
    "text": "of the art they still are so we had to",
    "start": "578470",
    "end": "580960"
  },
  {
    "text": "do something else basically it was the",
    "start": "580960",
    "end": "583810"
  },
  {
    "text": "idea that a set of parameters has",
    "start": "583810",
    "end": "588340"
  },
  {
    "text": "defines a set of operations and you go",
    "start": "588340",
    "end": "591580"
  },
  {
    "text": "through an indirection table just like",
    "start": "591580",
    "end": "593830"
  },
  {
    "text": "for virtual functions then you try to",
    "start": "593830",
    "end": "596080"
  },
  {
    "text": "optimize the interaction away to get",
    "start": "596080",
    "end": "600400"
  },
  {
    "text": "performance and we just couldn't do all",
    "start": "600400",
    "end": "603340"
  },
  {
    "text": "of that",
    "start": "603340",
    "end": "605520"
  },
  {
    "text": "you",
    "start": "611139",
    "end": "613199"
  }
]