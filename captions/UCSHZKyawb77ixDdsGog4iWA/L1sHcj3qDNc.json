[
  {
    "text": "so I'm gonna tell you about machine learning with torch and with torture Auto grads so the the description of the",
    "start": "570",
    "end": "6180"
  },
  {
    "text": "talk isn't entirely correct I'm gonna do practical stuff for the first half and then what I want to do is dive into",
    "start": "6180",
    "end": "14009"
  },
  {
    "text": "torch Auto grad and some of the concepts that are behind it and those concepts also happen to be shared amongst all",
    "start": "14009",
    "end": "20279"
  },
  {
    "text": "deep learning libraries so I really want to give you a perspective of the common thread that links all deep learning",
    "start": "20279",
    "end": "26010"
  },
  {
    "text": "software you could possibly use and then also talk a bit about what makes each of the libraries different and why there's",
    "start": "26010",
    "end": "31470"
  },
  {
    "text": "I will I will hypothesize why there's so many and the different choices so one",
    "start": "31470",
    "end": "37380"
  },
  {
    "text": "thing I want to try there's been a lot of questions and we've gone over time but if there's not questions that go",
    "start": "37380",
    "end": "42750"
  },
  {
    "text": "over time in the room there's a lot of people watching online and if there's extra time we'll of course prioritize",
    "start": "42750",
    "end": "49050"
  },
  {
    "text": "people here but if you ask a question with the DL school hashtag or if you tweet at me directly I will try to",
    "start": "49050",
    "end": "54870"
  },
  {
    "text": "answer those questions from online and I'll certainly answer them offline as well so ask if you're watching at home",
    "start": "54870",
    "end": "61500"
  },
  {
    "text": "maybe that will kind of increase you know meaningful participation for people watching through the stream that aren't",
    "start": "61500",
    "end": "66689"
  },
  {
    "text": "here today umm a lot of this material was developed with sumus chintala at",
    "start": "66689",
    "end": "71790"
  },
  {
    "text": "Facebook he's kind of the Czar of the torch ecosystem these days and Hugo la",
    "start": "71790",
    "end": "76920"
  },
  {
    "text": "rochelle who you heard from yesterday and also Ryan Adams who's at Twitter with us and all this some material is",
    "start": "76920",
    "end": "84650"
  },
  {
    "text": "available on this github repository that you got actually on a printed sheet for",
    "start": "84650",
    "end": "91500"
  },
  {
    "text": "installing torch so all the examples that I'll show you will be in in one notebook and then there's a separate",
    "start": "91500",
    "end": "97619"
  },
  {
    "text": "notebook which it actually won't reference in the talk that's a full end-to-end walkthrough of how to train a convolutional neural network on CFR 10",
    "start": "97619",
    "end": "105329"
  },
  {
    "text": "so that's kind of a self-paced tutorial notebook that you can work through on your own time but I'm going to focus on",
    "start": "105329",
    "end": "110549"
  },
  {
    "text": "the basics on the fundamentals and hopefully give you some of the concepts and vocabulary that you can use to",
    "start": "110549",
    "end": "116460"
  },
  {
    "text": "really dive into torch on your own time so let's let's get going so torch is an",
    "start": "116460",
    "end": "122549"
  },
  {
    "text": "array programming language for Lua right so it's like numpy it's like MATLAB but",
    "start": "122549",
    "end": "127590"
  },
  {
    "text": "it's in the Lua language so torch is - Lua as numpy is - pi right so what you can do in torch you",
    "start": "127590",
    "end": "135340"
  },
  {
    "text": "can do in you know any language this is the absolute minimum basics you can grab strings and print them you can put",
    "start": "135340",
    "end": "141970"
  },
  {
    "text": "things in associative data types in Python there's tuples and lists and sets",
    "start": "141970",
    "end": "147700"
  },
  {
    "text": "and dictionaries in lua there's just one data type called a table so you'll see that a lot but you can do all those",
    "start": "147700",
    "end": "154090"
  },
  {
    "text": "things that I mentioned before with with a table and you got four loops and if statements the core type of torch is the",
    "start": "154090",
    "end": "162370"
  },
  {
    "text": "tensor just like in in numpy when you have the ND array which is a way of shaping sets of numbers into matrices or",
    "start": "162370",
    "end": "169660"
  },
  {
    "text": "tensors we have the tensor and you can fill it up with random numbers you can",
    "start": "169660",
    "end": "174880"
  },
  {
    "text": "multiply them standard stuff but the tensor is the core data type of torch and we've got plotting functionality",
    "start": "174880",
    "end": "181810"
  },
  {
    "text": "going over at a very high level I'll show you some more specific code in a moment so you can do all the kind of",
    "start": "181810",
    "end": "187630"
  },
  {
    "text": "standard stuff that you'd do in any other array based language there's all",
    "start": "187630",
    "end": "192700"
  },
  {
    "text": "the tensor functions that you'd like to like to use including all the linear algebra and convolutions and and you",
    "start": "192700",
    "end": "199930"
  },
  {
    "text": "know blast functions and I'm leaving this link here when the slides get uploaded you can follow this and kind of",
    "start": "199930",
    "end": "205000"
  },
  {
    "text": "dive into the documentation and see exactly what what kind of tools you have at your disposal in in the notebook and",
    "start": "205000",
    "end": "212140"
  },
  {
    "text": "the eye torch notebook which is something that seumas put together you can prepend any torch function with a",
    "start": "212140",
    "end": "218500"
  },
  {
    "text": "question mark and that gives you the help for that function so it makes it really nice to discover functionality in",
    "start": "218500",
    "end": "225190"
  },
  {
    "text": "the torch library in the notebook so why",
    "start": "225190",
    "end": "230410"
  },
  {
    "text": "is it in Lua alright it's kind of a maybe a strange maybe esoteric language to write things in Lua is is",
    "start": "230410",
    "end": "239640"
  },
  {
    "text": "unreasonably fast for how convenient it is to use especially a flavor of Lua",
    "start": "239640",
    "end": "245140"
  },
  {
    "text": "called Lua jet for loops in Lua jet are basically the same speed as C so this",
    "start": "245140",
    "end": "251380"
  },
  {
    "text": "for loop here is actually in production code in master and torch it's not C code",
    "start": "251380",
    "end": "257100"
  },
  {
    "text": "but this is perfectly fast enough right so that's a really nice aspect of Lua is",
    "start": "257100",
    "end": "262380"
  },
  {
    "text": "you can depend on super high-performance c-code and then on top",
    "start": "262380",
    "end": "267479"
  },
  {
    "text": "of it you've got this very convenient glue layer but you don't pay much of a speed penalty to use that glue layer so",
    "start": "267479",
    "end": "272550"
  },
  {
    "text": "that's one of the reasons why we've used Lua another advantage that some people might see as a plus is the language",
    "start": "272550",
    "end": "278039"
  },
  {
    "text": "itself is quite small so there's 10,000 lines of C code that define the whole language of Lua so you can really sit",
    "start": "278039",
    "end": "284310"
  },
  {
    "text": "down with the manual in an afternoon and understand most of the language on your own that same day another aspect",
    "start": "284310",
    "end": "292620"
  },
  {
    "text": "which is pretty critical for deep learning but also for other fields is that it's really easy to interoperate",
    "start": "292620",
    "end": "297779"
  },
  {
    "text": "with C libraries it was designed originally to be embedded so Lua was a",
    "start": "297779",
    "end": "303060"
  },
  {
    "text": "language that was designed to run inside of another C program but have a little scripting layer inside of it so it's",
    "start": "303060",
    "end": "308669"
  },
  {
    "text": "very easy to call indicee it's very easy for c to call into Lua so this is another reason why it's kind of an",
    "start": "308669",
    "end": "314520"
  },
  {
    "text": "appropriate choice for deep learning libraries the FFI for like the FF I call",
    "start": "314520",
    "end": "321689"
  },
  {
    "text": "signature and the idea has been copied into many other languages so C FF I and Python is a Python version of the Lua FF",
    "start": "321689",
    "end": "329580"
  },
  {
    "text": "I julia has something similar as well and as I mentioned it was originally",
    "start": "329580",
    "end": "335159"
  },
  {
    "text": "designed to be embedded and it's in all kinds of crazy places that you maybe wouldn't expect Lua to be so in World of",
    "start": "335159",
    "end": "341099"
  },
  {
    "text": "Warcraft all the graphics are in C++ or whatever they wrote it in but like the boss battles or the quests so like when",
    "start": "341099",
    "end": "346949"
  },
  {
    "text": "you go give the gem to the blacksmith or whatever and they give you back the magic sword the scripting of those",
    "start": "346949",
    "end": "351960"
  },
  {
    "text": "events that happens in Lua and if you write scripts for world of warcraft to make your own quests that's Lua Adobe",
    "start": "351960",
    "end": "358110"
  },
  {
    "text": "Lightroom is a photo processing app all the image processing is done in C++ but",
    "start": "358110",
    "end": "363120"
  },
  {
    "text": "all the UI and everything was done in Lua so again it was used to bind together high-performance code with a",
    "start": "363120",
    "end": "368909"
  },
  {
    "text": "with kind of a scripting layer and Redis and nginx which are kind of workhorses in the field of web development are both",
    "start": "368909",
    "end": "375569"
  },
  {
    "text": "scriptable with Lua and in fact if you go to github pages like my page github I",
    "start": "375569",
    "end": "382020"
  },
  {
    "text": "oh if somebody's hosting a web page on github that's served in part by Lua the",
    "start": "382020",
    "end": "387689"
  },
  {
    "text": "apocryphal story of why I was originally chosen maybe you could correct me is klimova Oh BAE was trying to build an",
    "start": "387689",
    "end": "396180"
  },
  {
    "text": "embedded machine learning application some device he could whereas helmut and classify the world with the CNN when he was a young student and he",
    "start": "396180",
    "end": "403350"
  },
  {
    "text": "was trying to do this with Python and it's incredibly frustrating to get Python to run on embedded chips maybe",
    "start": "403350",
    "end": "409169"
  },
  {
    "text": "it's easier now with raspberry pi but that just wasn't the case and then he stumbled upon Lua and turns out people had been building",
    "start": "409169",
    "end": "415020"
  },
  {
    "text": "Lua into embedded applications for years before that and so that kind of was the snowballing effect so that's that's the",
    "start": "415020",
    "end": "421110"
  },
  {
    "text": "hearsay for how we arrived at Lua but maybe there's there's another story",
    "start": "421110",
    "end": "426139"
  },
  {
    "text": "another really nice feature of torch is we have first-class support for GPU",
    "start": "426139",
    "end": "433530"
  },
  {
    "text": "computation interactive GPU computation so it's very very easy to get some data",
    "start": "433530",
    "end": "439290"
  },
  {
    "text": "from the CPU to the GPU and then everything that you do with that data happens on the GPU without you having to",
    "start": "439290",
    "end": "444990"
  },
  {
    "text": "worry about writing CUDA kernels right so this has been a feature of Lua torch which is becoming maybe a little bit",
    "start": "444990",
    "end": "451289"
  },
  {
    "text": "less unique now but this was this was a pretty solid feature when it first came out so interactive GPU computing and",
    "start": "451289",
    "end": "458310"
  },
  {
    "text": "I'll go very quickly over some of the basic features and all of these examples again are in a notebook which you can do",
    "start": "458310",
    "end": "464669"
  },
  {
    "text": "kind of at your own pace if you'd like so there's all the basic arithmetic like",
    "start": "464669",
    "end": "470430"
  },
  {
    "text": "creating matrices and and doing arithmetic between them taking maxes of",
    "start": "470430",
    "end": "475560"
  },
  {
    "text": "numbers and arrays clamping building tensors out of ranges boolean operations",
    "start": "475560",
    "end": "483090"
  },
  {
    "text": "over entire arrays special functions this is supported through a wrapper",
    "start": "483090",
    "end": "489539"
  },
  {
    "text": "around the Cepheus library this is what numpy uses to support things like 10h and atan2 and other kinds of functions",
    "start": "489539",
    "end": "496830"
  },
  {
    "text": "that I guess are in the special class and then sumif again has wrapped the",
    "start": "496830",
    "end": "504450"
  },
  {
    "text": "Bocage a/s library which is originally just for python but it provides really nice and beautiful plots in the eye",
    "start": "504450",
    "end": "510990"
  },
  {
    "text": "torch notebook and so we can you know draw random numbers from our favorite distributions and make nice histograms",
    "start": "510990",
    "end": "517380"
  },
  {
    "text": "of these so you can do nice data exploration in the eye torch notebook along with deep learning so one feature",
    "start": "517380",
    "end": "525330"
  },
  {
    "text": "that is attractive to some folks but just an interesting feature of the torch ecosystem is that although there's a lot",
    "start": "525330",
    "end": "531630"
  },
  {
    "text": "of industries support it is not industry owned so at Twitter and at Facebook air research in",
    "start": "531630",
    "end": "537660"
  },
  {
    "text": "at Nvidia we all contribute a lot to the torch community but we don't own it we can't",
    "start": "537660",
    "end": "544139"
  },
  {
    "text": "really steer it to go one way or the other definitively and there's a ton of other people that participate",
    "start": "544139",
    "end": "549569"
  },
  {
    "text": "academically in this ecosystem and that's a really nice feature and along",
    "start": "549569",
    "end": "556079"
  },
  {
    "text": "with I guess because of the really nice habits of people in deep learning when a",
    "start": "556079",
    "end": "561809"
  },
  {
    "text": "paper comes out there's often a high quality code implementation that follows it not not always but but very often at",
    "start": "561809",
    "end": "568499"
  },
  {
    "text": "least compared with with other fields and torch is one of the environments in which you'll often see high quality",
    "start": "568499",
    "end": "574410"
  },
  {
    "text": "implementations of really cutting-edge stuff so if you just browsed through github and you kind of follow",
    "start": "574410",
    "end": "580129"
  },
  {
    "text": "researchers on github you can see really high quality implementations of image captioning of neural style transfer so",
    "start": "580129",
    "end": "587910"
  },
  {
    "text": "you can just clone this github repository and run this yourself seek to seek models kind of the what is",
    "start": "587910",
    "end": "594480"
  },
  {
    "text": "whatever is the state of the art there's usually a torch implementation of it some of the recent work in generating",
    "start": "594480",
    "end": "600839"
  },
  {
    "text": "very realistic synthetic images with generative adversarial networks also has great torch code implementing it so",
    "start": "600839",
    "end": "608240"
  },
  {
    "text": "given that there's this active community on github in deep learning for torch how",
    "start": "608240",
    "end": "616740"
  },
  {
    "text": "does that stack up against other communities just to give you some context so the Python data science community is is pretty enormous and its",
    "start": "616740",
    "end": "623970"
  },
  {
    "text": "focuses are also very very varied if you enter into the data science",
    "start": "623970",
    "end": "630149"
  },
  {
    "text": "community in torch and lua you'll likely find deep learning people but not a lot",
    "start": "630149",
    "end": "635160"
  },
  {
    "text": "of other people so it's strengthened deep learning compared to its size is actually quite enormous and for those",
    "start": "635160",
    "end": "641459"
  },
  {
    "text": "that are kind of thinking of switching between Python and Lua and giving torch a try the effort to switch from Python",
    "start": "641459",
    "end": "647579"
  },
  {
    "text": "to Lua you can probably do that in a day if you've tried some Python programming so I was a Python programmer for a while",
    "start": "647579",
    "end": "653040"
  },
  {
    "text": "and getting started on Lua took took me maybe a couple days and I was you know actually productive at work and maybe a",
    "start": "653040",
    "end": "658949"
  },
  {
    "text": "week or so but you can actually run your code and understand and write new things pretty quickly if you've worked in a",
    "start": "658949",
    "end": "664499"
  },
  {
    "text": "scripting language like MATLAB or or Python so if you were intimidated or waiting to try it you should just dive in so how does torch compared to other",
    "start": "664499",
    "end": "672810"
  },
  {
    "text": "deep learning libraries specifically as opposed to languages and the first thing I'll say is there's really no silver",
    "start": "672810",
    "end": "677970"
  },
  {
    "text": "bullet right now there are a lot of deep learning libraries out there I say",
    "start": "677970",
    "end": "683010"
  },
  {
    "text": "tensorflow is by far the largest and this is a plot that was made by a",
    "start": "683010",
    "end": "688350"
  },
  {
    "text": "colleague of SU myths and I wish it kind of had confidence intervals on it because it's not strictly that these are",
    "start": "688350",
    "end": "695280"
  },
  {
    "text": "like you know points in in deep learning space but maybe this is a good guess of",
    "start": "695280",
    "end": "700380"
  },
  {
    "text": "where things kind of fit it seems as if tensorflow was engineered to be very good in an industrial production setting",
    "start": "700380",
    "end": "706740"
  },
  {
    "text": "and it seems like it's really fulfilling that Theano seems to have always had a research goal",
    "start": "706740",
    "end": "711870"
  },
  {
    "text": "in mind and has been really awesome in the research community for some time Torche tends to be more towards research",
    "start": "711870",
    "end": "717690"
  },
  {
    "text": "than industry I think Twitter maybe has pulled it a little bit towards production we maybe are the only example",
    "start": "717690",
    "end": "723690"
  },
  {
    "text": "I'd love to learn of others but were maybe the only example of a large company that uses torch in production to",
    "start": "723690",
    "end": "729390"
  },
  {
    "text": "serve models so every piece of media that comes in to Twitter goes through a torch model at this point so we're",
    "start": "729390",
    "end": "735600"
  },
  {
    "text": "really dealing with an enormous amount of data in a live setting the",
    "start": "735600",
    "end": "741870"
  },
  {
    "text": "development of torch just to give you a sense of how we think about how it was built and how we're extending it is",
    "start": "741870",
    "end": "747960"
  },
  {
    "text": "there's some kind of tenets of our core philosophy and if really the first is things should be as not to this isn't",
    "start": "747960",
    "end": "754170"
  },
  {
    "text": "necessarily good or bad this but this is our choice whenever you hit enter on a particular line and your I torch",
    "start": "754170",
    "end": "759330"
  },
  {
    "text": "notebook or on the command line you should get an answer back and this is something that we've we've tried to",
    "start": "759330",
    "end": "765630"
  },
  {
    "text": "stick to pretty pretty tightly so no compilation time imperative programming right so just write your code and you",
    "start": "765630",
    "end": "772350"
  },
  {
    "text": "know each each line of code executes something and passes it to the next line and minimal abstraction what I mean by",
    "start": "772350",
    "end": "779580"
  },
  {
    "text": "minimal abstraction is if you want a reason about how your code is performing it shouldn't take you that many jumps to",
    "start": "779580",
    "end": "785340"
  },
  {
    "text": "go to the C code that's actually being run in fact it usually is one or two jumps from the file that defines the",
    "start": "785340",
    "end": "791100"
  },
  {
    "text": "function that you care about to the actual C code so if you want a reason about performance or really understand what's going on it's it's it's quite",
    "start": "791100",
    "end": "797370"
  },
  {
    "text": "easy to do so in torch I want to take a little bit of a detour",
    "start": "797370",
    "end": "804270"
  },
  {
    "text": "and tell you about how torch thinks about its objects how it thinks about the tensor because this can help you",
    "start": "804270",
    "end": "810030"
  },
  {
    "text": "also reason about performance a lot of the reason why people come to torch is to build high-performance models very",
    "start": "810030",
    "end": "815520"
  },
  {
    "text": "quickly and easily so I mentioned tensors before so attentional tensor a",
    "start": "815520",
    "end": "821130"
  },
  {
    "text": "tensor is an N dimensional array and a tensor is actually just a pointer it's a",
    "start": "821130",
    "end": "826710"
  },
  {
    "text": "view into your member into your data that's sitting in memory all right so it's just a it's a shape it's um it's a",
    "start": "826710",
    "end": "834030"
  },
  {
    "text": "view into into what's actually being stored in your RAM and it's stored in a row major way so that means if I go to the first",
    "start": "834030",
    "end": "840480"
  },
  {
    "text": "element of my tensor in memory and I move over one I'm moving over one in a row and not one in a column column major",
    "start": "840480",
    "end": "849300"
  },
  {
    "text": "memory storage does exist it's just less common today so you often see row major so this tensor is defined by its link to",
    "start": "849300",
    "end": "856500"
  },
  {
    "text": "some storage and it's size 4 by 6 and it's tried six by one and six by one means if I move one down in the column",
    "start": "856500",
    "end": "864390"
  },
  {
    "text": "direction I actually have to skip six elements in memory right whereas the one",
    "start": "864390",
    "end": "869670"
  },
  {
    "text": "here means if I move over one in the second axis the row axis I have to go over one in memory so if I take a slice",
    "start": "869670",
    "end": "877650"
  },
  {
    "text": "of this tensor using the Select command so I select along the first dimension",
    "start": "877650",
    "end": "882780"
  },
  {
    "text": "the third element what he gives me back is a new tensor it doesn't give me a new memory this is a thing that that happens",
    "start": "882780",
    "end": "889260"
  },
  {
    "text": "a lot in torch is you'll deal with views into memory you won't do memory copies right so usually working with kind of",
    "start": "889260",
    "end": "895620"
  },
  {
    "text": "the raw data in RAM and so this creates a new tensor with the size of six",
    "start": "895620",
    "end": "900900"
  },
  {
    "text": "because there's six elements astride of one because we've pulled out a row not a column and an offset of 13 that means I",
    "start": "900900",
    "end": "906570"
  },
  {
    "text": "have to go 13 elements from the beginning of the original storage to find that piece of memory so if I pull",
    "start": "906570",
    "end": "912960"
  },
  {
    "text": "out a column then something different happens which is they still have or I have a size of four here and my stride",
    "start": "912960",
    "end": "919410"
  },
  {
    "text": "is now six because in order to grab each element of the column I have to skip six and then the offset of three is because",
    "start": "919410",
    "end": "926040"
  },
  {
    "text": "I grab the third element there all right so that's kind of a view of the of the memory model and if we act",
    "start": "926040",
    "end": "932200"
  },
  {
    "text": "run something like this like we instantiate a double-a tensor of double of foot double values inside of the",
    "start": "932200",
    "end": "940900"
  },
  {
    "text": "tensor and fill it with you know uniform uniform distribution and print it we can",
    "start": "940900",
    "end": "947140"
  },
  {
    "text": "see the values here and then we grab a slice B and print it it's just this row",
    "start": "947140",
    "end": "952530"
  },
  {
    "text": "and then we can fill B with just some number and print it now it's filled with that number now if we go back and print",
    "start": "952530",
    "end": "958150"
  },
  {
    "text": "a we've actually overwritten the values there so this is something you see a lot in torches is working on one big piece",
    "start": "958150",
    "end": "964480"
  },
  {
    "text": "of shared memory and as I mentioned before working with CUDA is really",
    "start": "964480",
    "end": "970690"
  },
  {
    "text": "really easy so if you just require ku torch which is installed automatically if you have a CUDA GPU using the",
    "start": "970690",
    "end": "978190"
  },
  {
    "text": "instructions on the github repository you can instantiate a tensor on the GPU and do the same thing and it will just",
    "start": "978190",
    "end": "985420"
  },
  {
    "text": "work so now I want to talk a bit about the frameworks that you'll use to",
    "start": "985420",
    "end": "991450"
  },
  {
    "text": "actually train neural networks in torch so this is a schematic kind of cartoon",
    "start": "991450",
    "end": "996640"
  },
  {
    "text": "of how we of the pieces we typically need to train a neural network so we've got our data stored on you know hard",
    "start": "996640",
    "end": "1003630"
  },
  {
    "text": "drive or on a big distributed file system and we have some system for loading that data off of that file",
    "start": "1003630",
    "end": "1010770"
  },
  {
    "text": "system which goes into a nice queue and then some training code which orchestrates a neural network so the",
    "start": "1010770",
    "end": "1017100"
  },
  {
    "text": "thing actually making the prediction a cost function which is a measure of how good our neural network is at any point",
    "start": "1017100",
    "end": "1022530"
  },
  {
    "text": "in our training and an optimizer which is going to take the gradient of the cost with respect to the parameters in",
    "start": "1022530",
    "end": "1028439"
  },
  {
    "text": "the neural network and try to make the neural network better so in the torch ecosystem we've got some packages that",
    "start": "1028440",
    "end": "1036240"
  },
  {
    "text": "tackle each one of these separately so I won't talk about threads here there's actually several different libraries that will do this there's actually",
    "start": "1036240",
    "end": "1042420"
  },
  {
    "text": "several different libraries that will do each one of these things but this one is maybe the most common or the easiest to",
    "start": "1042420",
    "end": "1047550"
  },
  {
    "text": "start with and and then here we'll cover both the specification of the neural",
    "start": "1047550",
    "end": "1052590"
  },
  {
    "text": "network and the cost function as well as the mechanisms to push data through the neural network in the cost function and",
    "start": "1052590",
    "end": "1058050"
  },
  {
    "text": "pull the gradients back from the cost to the parameters and then the optimizer which is we've heard mentioned several",
    "start": "1058050",
    "end": "1063780"
  },
  {
    "text": "times today is to cast a gradient descent or we're outta grad so let me talk about NN",
    "start": "1063780",
    "end": "1069690"
  },
  {
    "text": "first give you a flavor of kind of how it works and what the pieces are so NN",
    "start": "1069690",
    "end": "1076380"
  },
  {
    "text": "is a package for building feed-forward neural networks mostly feed-forward",
    "start": "1076380",
    "end": "1082500"
  },
  {
    "text": "neural networks but kind of clicking Lego blocks together right so you might start with your input",
    "start": "1082500",
    "end": "1087779"
  },
  {
    "text": "and then click together a fully connected layer and then another fully connected layer and then maybe some output right so here I've defined a",
    "start": "1087779",
    "end": "1095460"
  },
  {
    "text": "sequential container which is going to be a container for all my Lego blocks and then I might click in a spatial",
    "start": "1095460",
    "end": "1102450"
  },
  {
    "text": "convolution so I'm going to be working with images maybe a non-linearity some max pooling some other layers as well to",
    "start": "1102450",
    "end": "1111720"
  },
  {
    "text": "kind of complete the whole neural network and then I might add a log softmax at the end to to compute class",
    "start": "1111720",
    "end": "1117090"
  },
  {
    "text": "probabilities so this this kind of the structure that you'll build neural networks with in NN is define a",
    "start": "1117090",
    "end": "1123059"
  },
  {
    "text": "container and then one by one add pieces down a processing hierarchy and I",
    "start": "1123059",
    "end": "1129000"
  },
  {
    "text": "mentioned the sequential container which is starting from inputs and then proceeding linearly there's two other types of containers that you might use",
    "start": "1129000",
    "end": "1135720"
  },
  {
    "text": "but generally NN shines when your architecture is linear right not when",
    "start": "1135720",
    "end": "1140760"
  },
  {
    "text": "it's got some crazy branches or anything like that the there's not a lot of API",
    "start": "1140760",
    "end": "1147299"
  },
  {
    "text": "to the NN package so if you if you learn these couple functions which will be in the slides for later if you want to",
    "start": "1147299",
    "end": "1153090"
  },
  {
    "text": "refer to them back you will understand all the mechanisms that you need to know to push data through a neural network",
    "start": "1153090",
    "end": "1159090"
  },
  {
    "text": "and then to push it through a criterion or a loss function and then to pull those gradients back in order to make a",
    "start": "1159090",
    "end": "1165600"
  },
  {
    "text": "gradient update to your model so these are really the API is the levers that you need to know to kind of drive your",
    "start": "1165600",
    "end": "1172080"
  },
  {
    "text": "neural network and of course we have a CUDA back-end for n n so in the same way",
    "start": "1172080",
    "end": "1177870"
  },
  {
    "text": "that you'll just call CUDA on some data you can call CUDA on a container and that will move the whole model onto the",
    "start": "1177870",
    "end": "1184559"
  },
  {
    "text": "GPU and then anything that you do with that model will occur on the GPU so it's kind of a one-liner to start training",
    "start": "1184559",
    "end": "1191010"
  },
  {
    "text": "models on a graphics processor so for doing feed-forward neural networks n n",
    "start": "1191010",
    "end": "1198149"
  },
  {
    "text": "is pretty great but for starting too weirder architectures like richard social yesterday mentioned a pretty",
    "start": "1198149",
    "end": "1205410"
  },
  {
    "text": "complicated NLP model that starts with glove vectors which are kind of like shallow neural networks and then a",
    "start": "1205410",
    "end": "1211290"
  },
  {
    "text": "recursive neural network and then an attention mechanism and all these things were interacting in strange ways that's",
    "start": "1211290",
    "end": "1216300"
  },
  {
    "text": "actually pretty hard to specify in NN at Twitter we have a package called torch Auto grab which makes these kinds of",
    "start": "1216300",
    "end": "1223440"
  },
  {
    "text": "gluing different model pieces together really easy and in fact the pieces can be as small as addition division",
    "start": "1223440",
    "end": "1231350"
  },
  {
    "text": "multiplication and subtraction so you can glue together any size piece of computation and still get a correct",
    "start": "1231350",
    "end": "1236730"
  },
  {
    "text": "model out and I'll talk more about that in a moment the optin package is what you need in",
    "start": "1236730",
    "end": "1242550"
  },
  {
    "text": "order to train models with like stochastic gradient descent or a degrade or out of delta whatever your optimizer",
    "start": "1242550",
    "end": "1248250"
  },
  {
    "text": "is that you that's your favor the API is pretty straightforward but",
    "start": "1248250",
    "end": "1253560"
  },
  {
    "text": "maybe a little bit different for people kind of coming from the Python world it's got a bit of a functional approach where it will actually you'll you'll",
    "start": "1253560",
    "end": "1261600"
  },
  {
    "text": "pass a function to opt in that will evaluate your neural network and pass back the gradients so that's just",
    "start": "1261600",
    "end": "1268770"
  },
  {
    "text": "something to be aware of it's a little bit of a different style another gotcha with optin that you might run into and",
    "start": "1268770",
    "end": "1275910"
  },
  {
    "text": "you'll see in some of the notebooks that are online is your parameters should be",
    "start": "1275910",
    "end": "1281700"
  },
  {
    "text": "linear in memory so if you want to optimize to neural networks that are interacting in some way you actually",
    "start": "1281700",
    "end": "1287460"
  },
  {
    "text": "need to first bring their parameters together into one tensor and then pass that to opt in there's just something to",
    "start": "1287460",
    "end": "1292710"
  },
  {
    "text": "be aware of so I want to talk for the rest of the talk about torch Auto grad",
    "start": "1292710",
    "end": "1299610"
  },
  {
    "text": "but also about some of the ideas that are behind torch Auto grad and how those link all the deep learning libraries",
    "start": "1299610",
    "end": "1305010"
  },
  {
    "text": "that you possibly could choose so first I want to take a step back and say that",
    "start": "1305010",
    "end": "1310560"
  },
  {
    "text": "just appreciate the wonderful stable abstractions that we have in scientific computing right so Fortran you know back",
    "start": "1310560",
    "end": "1318360"
  },
  {
    "text": "in 57 I don't think anybody uses Fortran 57 but people might actually still use Fortran 90 the idea of an array was",
    "start": "1318360",
    "end": "1324900"
  },
  {
    "text": "didn't exist on a computer and it really took some pretty crazy thinking I think",
    "start": "1324900",
    "end": "1331140"
  },
  {
    "text": "to build a system that made arrays something we take for granted same with linear algebra over about a 20-year",
    "start": "1331140",
    "end": "1338770"
  },
  {
    "text": "period starting in the late 70s people decided oh maybe we should think about linear algebra in a systematic way and",
    "start": "1338770",
    "end": "1344740"
  },
  {
    "text": "now we don't really worry about this if you want to multiply two matrices that used to be you know a phd's worth of",
    "start": "1344740",
    "end": "1350890"
  },
  {
    "text": "work to do that at scale and now we just you know we don't even actually import",
    "start": "1350890",
    "end": "1355930"
  },
  {
    "text": "Blas there's so many wrappers of blasts that we don't even think about this anymore so this is another abstraction and also the idea that we should have",
    "start": "1355930",
    "end": "1362140"
  },
  {
    "text": "all of the routines that we would possibly want to call in one place available that we don't have to write that was kind of invented I would say by",
    "start": "1362140",
    "end": "1370210"
  },
  {
    "text": "MATLAB in the mid-80s and then really popularized in the open-source community by numpy and we should take them for",
    "start": "1370210",
    "end": "1377680"
  },
  {
    "text": "granted we should totally forget about them that because they make us faster they make us better for us to assume",
    "start": "1377680",
    "end": "1382690"
  },
  {
    "text": "these things will work so machine learning has other abstractions besides",
    "start": "1382690",
    "end": "1387850"
  },
  {
    "text": "these computational ones that we take for granted all gradient based optimization that includes neural nets",
    "start": "1387850",
    "end": "1395500"
  },
  {
    "text": "as a subset relies on automatic differentiation to calculate those gradients right and and I like this",
    "start": "1395500",
    "end": "1403210"
  },
  {
    "text": "definition from Barack Perlmutter automatic differentiation mechanically calculates derivatives as functions",
    "start": "1403210",
    "end": "1409240"
  },
  {
    "text": "expressed as computer programs right so it doesn't derive things are right on a piece of paper with a pencil it derives",
    "start": "1409240",
    "end": "1415120"
  },
  {
    "text": "computer programs app machine precision and with complexity guarantees those",
    "start": "1415120",
    "end": "1420460"
  },
  {
    "text": "last two clauses differentiate it from finite differences where you take the input to a program you perturb it",
    "start": "1420460",
    "end": "1425920"
  },
  {
    "text": "slightly and you measure the gradient that way that's a very bad way to measure gradients it's it's numerically",
    "start": "1425920",
    "end": "1432010"
  },
  {
    "text": "very unstable and it's not symbolic differentiation so it's not writing down the symbolic expression of a neural",
    "start": "1432010",
    "end": "1437380"
  },
  {
    "text": "network putting it in Mathematica or maple and then it asking for the the derivative because your expression might",
    "start": "1437380",
    "end": "1443620"
  },
  {
    "text": "go from this to this so you get expressions well when you do naive symbolic differentiation and you don't",
    "start": "1443620",
    "end": "1449320"
  },
  {
    "text": "get that with automatic differentiation so automatic differentiation I would say",
    "start": "1449320",
    "end": "1455650"
  },
  {
    "text": "is the abstraction for gradient based machine learning it's been rediscovered",
    "start": "1455650",
    "end": "1461650"
  },
  {
    "text": "several times there's a review by Woodrow and there I think the first implementation where",
    "start": "1461650",
    "end": "1468330"
  },
  {
    "text": "it actually operates on a computer program was by Bert's bill pending in 1980 although it has been described back",
    "start": "1468330",
    "end": "1476820"
  },
  {
    "text": "you know in 1964 by Wengert in in neural networks rumble heart is the one that I",
    "start": "1476820",
    "end": "1483779"
  },
  {
    "text": "suppose popularized it as back propagation although back propagation is a special case of auto-da-fé this this I",
    "start": "1483779",
    "end": "1490860"
  },
  {
    "text": "think is important in nuclear science and computational fluid dynamics and in weather modeling these people have been",
    "start": "1490860",
    "end": "1497429"
  },
  {
    "text": "using auto-da-fé for years decades and their tools in many ways are much more sophisticated than we have in machine",
    "start": "1497429",
    "end": "1502830"
  },
  {
    "text": "learning there's a lot of ideas that we have yet to import from people that model the weather that would really",
    "start": "1502830",
    "end": "1509759"
  },
  {
    "text": "benefit our ability to train larger and larger models and I would clarify that",
    "start": "1509759",
    "end": "1515700"
  },
  {
    "text": "our abstraction and machine learning is actually reverse mode automatic differentiation there's two different",
    "start": "1515700",
    "end": "1521519"
  },
  {
    "text": "types two extremes I should say forward mode in Reverse mode you never hear about forward mode and you never hear",
    "start": "1521519",
    "end": "1527850"
  },
  {
    "text": "about forward mode of machine learning because it's a very bad idea to try forward mode and machine learning and I'll show you why so here is a cat",
    "start": "1527850",
    "end": "1535889"
  },
  {
    "text": "picture from the internet and my job at my job is to decide that that is in fact",
    "start": "1535889",
    "end": "1540899"
  },
  {
    "text": "a cat picture this is actually something that we do do at Twitter what I am doing",
    "start": "1540899",
    "end": "1546450"
  },
  {
    "text": "is passing this cat through successive layers of transformations than eventually producing a probability over",
    "start": "1546450",
    "end": "1551580"
  },
  {
    "text": "classes I'm getting it wrong my classifier thinks it's a dog so I'd like to train my neural net to think it's a",
    "start": "1551580",
    "end": "1557340"
  },
  {
    "text": "cat so I have a loss a gradient of my loss and I have it with respect to my",
    "start": "1557340",
    "end": "1564450"
  },
  {
    "text": "parameters and this is my gradient that will let me update my parameters and it is composed of multiple pieces and using",
    "start": "1564450",
    "end": "1571350"
  },
  {
    "text": "the chain rule I know that I can fold this together to actually compute the loss I want which is the gradient of the law through the respect to the",
    "start": "1571350",
    "end": "1577049"
  },
  {
    "text": "parameters the issue is I can do it either left to right or right to left so going from left to right looks like this",
    "start": "1577049",
    "end": "1584759"
  },
  {
    "text": "whoops that was very fast okay I'll do",
    "start": "1584759",
    "end": "1589860"
  },
  {
    "text": "two big matrix matrix multiplies so this is bad this is not good because we had",
    "start": "1589860",
    "end": "1594929"
  },
  {
    "text": "these huge matrix matrix products that we're keeping around it's actually worse than this and I'll show you in another",
    "start": "1594929",
    "end": "1600390"
  },
  {
    "text": "view of forward node so see I have a computer program so no longer a symbolic representation of a neural net this is",
    "start": "1600390",
    "end": "1606450"
  },
  {
    "text": "just some computer program and let's say I'd like to optimize a write a is the single parameter of my neural net it's a",
    "start": "1606450",
    "end": "1612840"
  },
  {
    "text": "very silly trivial example but I think it will help illustrate the point so I can execute this program and look at all",
    "start": "1612840",
    "end": "1620370"
  },
  {
    "text": "of the arithmetic operations that occur and build what's called a trace so I'll define say a is 3 I'll define B",
    "start": "1620370",
    "end": "1627720"
  },
  {
    "text": "is to C is 1 and then I'll start executing the code I'm actually going to look if B is greater than C and choose a",
    "start": "1627720",
    "end": "1634559"
  },
  {
    "text": "branch to operate on but then ignore it in my trace so I've chosen one of those",
    "start": "1634559",
    "end": "1640140"
  },
  {
    "text": "traces that one of those branches which is the first because B is greater than C and I have some output value D and I'll",
    "start": "1640140",
    "end": "1647220"
  },
  {
    "text": "return the output value all right so this is a trace execution of my program given some inputs so to calculate in",
    "start": "1647220",
    "end": "1653340"
  },
  {
    "text": "forward mode the derivative of my output D with respect to a I'll define a is 3",
    "start": "1653340",
    "end": "1659340"
  },
  {
    "text": "and then initialize a gradient of a with respect to itself and the idea is I eventually want the derivative of D with",
    "start": "1659340",
    "end": "1665730"
  },
  {
    "text": "respect to a and I'll build it up sequentially da da and then I'll do D be da and then Dissidia in ddd a so I'm",
    "start": "1665730",
    "end": "1672720"
  },
  {
    "text": "moving from the left to the right building up my gradient I can't do much about the derivative of B with respect",
    "start": "1672720",
    "end": "1678570"
  },
  {
    "text": "to a right now so I'll define C and remove C with respect to a and then I",
    "start": "1678570",
    "end": "1685530"
  },
  {
    "text": "have my value D and then I can define my target value which is the gradient of D with respect to a so if I wanted the",
    "start": "1685530",
    "end": "1694020"
  },
  {
    "text": "gradient of D with respect to B so if I had a two parameter neural network and I wanted optimize both at once I would",
    "start": "1694020",
    "end": "1700380"
  },
  {
    "text": "have to execute this whole thing again and initialize this guy here as DB DB",
    "start": "1700380",
    "end": "1705540"
  },
  {
    "text": "has one right so if you have a million parameters in your neural network or tens of millions if you have to do a",
    "start": "1705540",
    "end": "1711240"
  },
  {
    "text": "million evaluations of forward mode or tens of millions of evaluations of fort mode so it is a very bad idea to try",
    "start": "1711240",
    "end": "1717900"
  },
  {
    "text": "forward mode automatic differentiation on neural network and that's why you probably never heard of it so now you",
    "start": "1717900",
    "end": "1723210"
  },
  {
    "text": "can forget about it but the alternative is reverse mode and that's starting from",
    "start": "1723210",
    "end": "1730860"
  },
  {
    "text": "the right to the left so now I've got this nice matrix that your products which are much smaller and",
    "start": "1730860",
    "end": "1736130"
  },
  {
    "text": "the complexity is much better and there's an interesting difference when I actually go to do this in computer code",
    "start": "1736130",
    "end": "1742140"
  },
  {
    "text": "and you'll see these words are closer together and that's because for reverse",
    "start": "1742140",
    "end": "1749460"
  },
  {
    "text": "mode I actually have to evaluate the whole program before I can start deriving because I'm starting with the",
    "start": "1749460",
    "end": "1755400"
  },
  {
    "text": "derivative of D with respect to D and then decrementing derivative of D with respect to C with respect to D with",
    "start": "1755400",
    "end": "1761340"
  },
  {
    "text": "respect to a so I'm going the other way but I have to have all the information first before I start that so now I can",
    "start": "1761340",
    "end": "1767130"
  },
  {
    "text": "initialize derivative of D with respect to D and I can walk backwards and return",
    "start": "1767130",
    "end": "1773340"
  },
  {
    "text": "both the value and get gradient what's really nice about this is you'll notice",
    "start": "1773340",
    "end": "1778830"
  },
  {
    "text": "here I actually have all the information I need to calculate the derivatives of D with respect to these other parameters",
    "start": "1778830",
    "end": "1784350"
  },
  {
    "text": "so that's why we really like reverse mode auto-da-fé aka back propagation for",
    "start": "1784350",
    "end": "1789360"
  },
  {
    "text": "neural nets is if you have a million of these guys you really want to be ready to compute them all at once right and",
    "start": "1789360",
    "end": "1794970"
  },
  {
    "text": "doing these with matrices is very efficient thing to do on the computer so we've implemented this trace based",
    "start": "1794970",
    "end": "1800520"
  },
  {
    "text": "automatic differentiation in a package called Auto grad and this is the entirety of a neural network so this is",
    "start": "1800520",
    "end": "1807780"
  },
  {
    "text": "how you would specify and train a neural network and autocrat so I'll initialize",
    "start": "1807780",
    "end": "1812820"
  },
  {
    "text": "my parameters we'll just be some random numbers and then here is my neural network function I'm multiplying my you",
    "start": "1812820",
    "end": "1820860"
  },
  {
    "text": "know image that I'm passing in by my white matrix and adding a bias non-linearity doing it again and then",
    "start": "1820860",
    "end": "1826530"
  },
  {
    "text": "returning some probabilities and I have a loss which will take in an image and",
    "start": "1826530",
    "end": "1832430"
  },
  {
    "text": "return a prediction so just using this function and then I'll just take the mean squared error or it's the sum",
    "start": "1832430",
    "end": "1839280"
  },
  {
    "text": "squared error in order to get the gradients of this function the derivative of the loss with respect to",
    "start": "1839280",
    "end": "1845100"
  },
  {
    "text": "these parameters all I have to do is import this autograph package and then call grad on this function this returns",
    "start": "1845100",
    "end": "1853170"
  },
  {
    "text": "a new function that returns the gradients of my original function so",
    "start": "1853170",
    "end": "1858390"
  },
  {
    "text": "it's a what's called a higher-order function it's inputs and its outputs are a function so whenever you see that",
    "start": "1858390",
    "end": "1865440"
  },
  {
    "text": "Noblet that upside-down triangle grad triangle this is the coding equivalent of that and then to Train",
    "start": "1865440",
    "end": "1874030"
  },
  {
    "text": "we'll just call our D loss function on our parameters our image and our label which I'm just pretending like you",
    "start": "1874030",
    "end": "1880330"
  },
  {
    "text": "already have a system to get here when we have our gradients and then we're updating with stochastic gradient",
    "start": "1880330",
    "end": "1885550"
  },
  {
    "text": "descent here all right so it's a very thin it's it's really just this this is the interface with which you talk with",
    "start": "1885550",
    "end": "1892840"
  },
  {
    "text": "Auto grad so what's actually happening so here's my simple function as we",
    "start": "1892840",
    "end": "1899230"
  },
  {
    "text": "evaluate it we're actually keeping track of everything that you're doing in order to be able to reverse it so we're actually",
    "start": "1899230",
    "end": "1904690"
  },
  {
    "text": "building that trace list that I described before and keeping track of it internally so we'll start online I guess",
    "start": "1904690",
    "end": "1911320"
  },
  {
    "text": "that's five so we'll multiply some things we'll keep track of the fact you multiplied and the inputs will keep",
    "start": "1911320",
    "end": "1918010"
  },
  {
    "text": "track of the addition and the inputs and also the output of addition will keep track of inputs outputs in the function",
    "start": "1918010",
    "end": "1923620"
  },
  {
    "text": "every time and we'll kind of walk down this function and build your compute graph just in time so as you're running",
    "start": "1923620",
    "end": "1930070"
  },
  {
    "text": "your code we're learning what you've done and the way we track that and I won't go into details we actually",
    "start": "1930070",
    "end": "1936160"
  },
  {
    "text": "replace every function and torch with like a like a spy function so instead of just running torch dot some our spy",
    "start": "1936160",
    "end": "1942670"
  },
  {
    "text": "function says oh I hear you're running torch dot some let me remember the parameters you gave me let me run some",
    "start": "1942670",
    "end": "1948610"
  },
  {
    "text": "on those parameters remember the output and then return it like nothing happened but internally we're remembering all",
    "start": "1948610",
    "end": "1953740"
  },
  {
    "text": "those things and the way we do this to actually compute the gradients is we're",
    "start": "1953740",
    "end": "1959920"
  },
  {
    "text": "walking back this list like I described before and every time we get to a point where we need to calculate a partial",
    "start": "1959920",
    "end": "1965650"
  },
  {
    "text": "derivative we look it up so we've written all of the partial derivatives for Torche functions and it really every",
    "start": "1965650",
    "end": "1973180"
  },
  {
    "text": "neural network library is going to do this at some level of granularity so let me walk you through another couple",
    "start": "1973180",
    "end": "1978910"
  },
  {
    "text": "examples just to show you what it could do so this is kind of a pretty vanilla one we can you know add and multiply",
    "start": "1978910",
    "end": "1985840"
  },
  {
    "text": "scalars and get the correct gradient this is where things get a little bit more interesting if there's an if",
    "start": "1985840",
    "end": "1991600"
  },
  {
    "text": "statement all right so this control flow can be a little bit difficult or awkward and a lot of existing deep learning libraries because we just listen to what",
    "start": "1991600",
    "end": "2000390"
  },
  {
    "text": "era medic functions get run we ignore control flow so we just go right through this stuff all right so we can get the",
    "start": "2000390",
    "end": "2007299"
  },
  {
    "text": "correct gradient even with if statements we actually care about tensors when",
    "start": "2007299",
    "end": "2013329"
  },
  {
    "text": "we're doing optimization or machine learning so everything I've shown you that works with scalars also works with",
    "start": "2013329",
    "end": "2018969"
  },
  {
    "text": "tensors just as easily this is in the notebook that is on the github repository if you want to play with it",
    "start": "2018969",
    "end": "2025109"
  },
  {
    "text": "this is where things get a little bit interesting for loops also work just fine and not just for loops that have a",
    "start": "2025109",
    "end": "2030699"
  },
  {
    "text": "fixed length which is something that is perhaps easy to unroll but for loops whose duration can depend on data you",
    "start": "2030699",
    "end": "2036969"
  },
  {
    "text": "just computed right or while loops whose stopping condition can depend on a computation that occurs in the while",
    "start": "2036969",
    "end": "2043209"
  },
  {
    "text": "loop we don't really care we're building your graph dynamically and when it's done and when you return some value will",
    "start": "2043209",
    "end": "2048638"
  },
  {
    "text": "calculate the derivative derivatives of the graph that we have you can turn any for loop into a recursive function this",
    "start": "2048639",
    "end": "2055868"
  },
  {
    "text": "is kind of wacky I mean I don't know how you would actually use this in practice but you can cook up a lot of crazy",
    "start": "2055869",
    "end": "2061059"
  },
  {
    "text": "things you might try with autograph and they just work so here we have a function f if B is at some stopping",
    "start": "2061059",
    "end": "2067089"
  },
  {
    "text": "condition will return a otherwise we'll call F and we're gonna differentiate this right so we're gonna differentiate",
    "start": "2067089",
    "end": "2073720"
  },
  {
    "text": "a fully recursive function and it works just fine another aspect which is coming",
    "start": "2073720",
    "end": "2082599"
  },
  {
    "text": "up more and more as papers are coming out that basically disrespect the sanctity of the partial you know of the derivative of the gradient and people",
    "start": "2082599",
    "end": "2089829"
  },
  {
    "text": "are computing synthetic gradients they're you know adding they're clipping two gradients or people are messing with",
    "start": "2089829",
    "end": "2096608"
  },
  {
    "text": "kind of the the internals of back propagation or of auto-da-fé it's actually pretty easy to start to engage",
    "start": "2096609",
    "end": "2102220"
  },
  {
    "text": "with in Auto grad so say I'm going to sum the floor of a to the third power so",
    "start": "2102220",
    "end": "2109960"
  },
  {
    "text": "the floor operation is piecewise constant so the derivative is zero almost everywhere except for where it's undefined why would I want to do this",
    "start": "2109960",
    "end": "2117569"
  },
  {
    "text": "for instance if you wanted to build a differentiable JPEG encoder or differentiable MPEG encoder in",
    "start": "2117569",
    "end": "2124140"
  },
  {
    "text": "compression algorithms like that there's often a quantization step that will floor around or truncate numbers and if",
    "start": "2124140",
    "end": "2131380"
  },
  {
    "text": "you wanted to differentiate through that to build like a neural Jake algorithm or something you need to pass gradients through something that",
    "start": "2131380",
    "end": "2136880"
  },
  {
    "text": "ordinarily does not and so if we look at what the gradient is at zero everywhere I won't go into the details but you can",
    "start": "2136880",
    "end": "2143750"
  },
  {
    "text": "ask Auto grad to use your own gradient for anything so if you have a new module that you want to define and either",
    "start": "2143750",
    "end": "2149690"
  },
  {
    "text": "you've written high-performance code for it and you want to use it or you want to redefine or overwrite you know the",
    "start": "2149690",
    "end": "2155570"
  },
  {
    "text": "gradients that we have there's a pretty easy mechanism for doing that and then when you call your special dot floor you",
    "start": "2155570",
    "end": "2161510"
  },
  {
    "text": "can propagate gradients through it right and here I was just saying basically ignore the gradient of floor so this is",
    "start": "2161510",
    "end": "2166640"
  },
  {
    "text": "a toy example but there are real places where you have a non differentiable",
    "start": "2166640",
    "end": "2171710"
  },
  {
    "text": "bottleneck inside of your computer off and you want to either hop over it or find some approximation and auto grad",
    "start": "2171710",
    "end": "2177650"
  },
  {
    "text": "has a mechanism for very easily plugging those types of things in so that's a bit",
    "start": "2177650",
    "end": "2183110"
  },
  {
    "text": "of what auto grad is and what it can do and I want to turn our attention to how",
    "start": "2183110",
    "end": "2188480"
  },
  {
    "text": "autograph relates to other deep learning libraries and maybe how they're common and how they're similar and how they're",
    "start": "2188480",
    "end": "2194390"
  },
  {
    "text": "different so one big difference that I",
    "start": "2194390",
    "end": "2200570"
  },
  {
    "text": "found between different deep learning libraries is the level of granularity at which you are allowed to specify your",
    "start": "2200570",
    "end": "2207890"
  },
  {
    "text": "neural network so there's a lot of libraries where you say you get a confident or you get a feed-forward",
    "start": "2207890",
    "end": "2213560"
  },
  {
    "text": "neural network and that's it right so the menu is two items long and that's",
    "start": "2213560",
    "end": "2218660"
  },
  {
    "text": "fine I think Andre I really hit it on the head where if you want to solve a problem don't be a hero use somebody else's network so maybe this is vgg that",
    "start": "2218660",
    "end": "2225890"
  },
  {
    "text": "you've downloaded from from the model Zoo or something like that right so this is the don't be a hero regime on the left in the middle there's a lot of",
    "start": "2225890",
    "end": "2233960"
  },
  {
    "text": "really convenient neural net specific libraries like torch and n and Karras and lasagna and you get to put together",
    "start": "2233960",
    "end": "2241190"
  },
  {
    "text": "big layers and you don't really get to see what's inside those layers but you get to click together linear layers or",
    "start": "2241190",
    "end": "2246710"
  },
  {
    "text": "convolutions and usually that's kind of what you want to do and on the far end of the spectrum the things you can click",
    "start": "2246710",
    "end": "2253250"
  },
  {
    "text": "together are the function the the numeric functions in your kind of host",
    "start": "2253250",
    "end": "2258260"
  },
  {
    "text": "scientific computing library right like add multiply subtract and these are",
    "start": "2258260",
    "end": "2263300"
  },
  {
    "text": "features of projects like Otto grad and Theano and tensor flow and the reason why these boundaries are",
    "start": "2263300",
    "end": "2269910"
  },
  {
    "text": "made is because the developers have chosen to give you partial derivatives at these interfaces all right so this is",
    "start": "2269910",
    "end": "2276539"
  },
  {
    "text": "how they've defined their api's and these are the interfaces with you know across which you as a user cannot pass",
    "start": "2276539",
    "end": "2282269"
  },
  {
    "text": "if you want to new one of these modules for the type on the left or the type in",
    "start": "2282269",
    "end": "2289349"
  },
  {
    "text": "the middle you have to go in and build a whole new model and actually implement the partial derivatives but with the",
    "start": "2289349",
    "end": "2296940"
  },
  {
    "text": "types of libraries on the right you can build your own models by modules by composing primitive operations all right",
    "start": "2296940",
    "end": "2303720"
  },
  {
    "text": "so that's one difference that you can find in practice how these things are",
    "start": "2303720",
    "end": "2308789"
  },
  {
    "text": "implemented under the hood usually means this is the totally shrink-wrap stuff",
    "start": "2308789",
    "end": "2313799"
  },
  {
    "text": "and maybe they implemented this whole thing by hand usually these guys in the middle are rappers they're rapping some",
    "start": "2313799",
    "end": "2319980"
  },
  {
    "text": "other library and the guys on the right are usually actually implementing automatic differentiation so Auto grad",
    "start": "2319980",
    "end": "2326339"
  },
  {
    "text": "in theano and tensorflow all implement auto death and the guys in the middle are taking advantage of that to make",
    "start": "2326339",
    "end": "2331890"
  },
  {
    "text": "more convenient wrappers so another aspect that's different is how these",
    "start": "2331890",
    "end": "2338130"
  },
  {
    "text": "graphs are built so I'll remind you in Auto grad we build these things just in time by listening to what you're doing",
    "start": "2338130",
    "end": "2344190"
  },
  {
    "text": "and recording it but that's not how all neural network libraries are built and",
    "start": "2344190",
    "end": "2349410"
  },
  {
    "text": "this is an axis along which I think that they are differentiated meaningfully so there's a lot of libraries that build",
    "start": "2349410",
    "end": "2356009"
  },
  {
    "text": "these graphs explicitly where you say I'm going to click this Lego block into this Lego block where I'm going to give you this yamo specification file the",
    "start": "2356009",
    "end": "2363869"
  },
  {
    "text": "graph is totally static and you really have no opportunity for compiler optimizations there and then there are",
    "start": "2363869",
    "end": "2370319"
  },
  {
    "text": "the just-in-time library so Auto grad and chain ER is another one where you",
    "start": "2370319",
    "end": "2375599"
  },
  {
    "text": "get any graph the graph can be anything it can change from sample to sample it can be you know to the length of the graph can be determined by the compute",
    "start": "2375599",
    "end": "2382559"
  },
  {
    "text": "that occurs in the graph you have very little opportunity for compiler optimizations there so speed can be an",
    "start": "2382559",
    "end": "2387869"
  },
  {
    "text": "issue sometimes and in the middle there's a head of time libraries like tensorflow and Theano where you construct your graph using a",
    "start": "2387869",
    "end": "2394109"
  },
  {
    "text": "domain-specific language you hand it off to their runtime and then they can do crazy stuff to make it faster the",
    "start": "2394109",
    "end": "2400019"
  },
  {
    "text": "problem with that is it can be awkward to work with I guess that got cut off it can be awkward to work with control flow and I think",
    "start": "2400019",
    "end": "2406750"
  },
  {
    "text": "there's a reason why it can be awkward to work with control flow and it's because of the types of graphs that",
    "start": "2406750",
    "end": "2413260"
  },
  {
    "text": "these libraries are actually manipulating so we say compute graph a lot we say data flow graph a lot data",
    "start": "2413260",
    "end": "2418809"
  },
  {
    "text": "flow graph has a pretty restricted meaning and it means that the nodes in",
    "start": "2418809",
    "end": "2425140"
  },
  {
    "text": "your graph do computation and the edges are data and there's no room for control flow in a graph that is a data flow",
    "start": "2425140",
    "end": "2431529"
  },
  {
    "text": "graph right so static data flow is the type of graph that N and n Cafe use because all the ops are the nodes and",
    "start": "2431529",
    "end": "2438970"
  },
  {
    "text": "the edges are just the data and the graph can't change get data flow just in",
    "start": "2438970",
    "end": "2444069"
  },
  {
    "text": "time compiled data flow like Auto grad and chain ER has the same characteristics but the graph can change from iteration to iteration because we",
    "start": "2444069",
    "end": "2450190"
  },
  {
    "text": "wait until you're done computing the forward pass to build the graph in the middle there's kind of a hybrid and I",
    "start": "2450190",
    "end": "2455769"
  },
  {
    "text": "don't know what to call that graph type the ops are nodes the edges are data but",
    "start": "2455769",
    "end": "2461260"
  },
  {
    "text": "then there's special information that the runtime gets in order to expand control flow or for loops so scan is in",
    "start": "2461260",
    "end": "2467440"
  },
  {
    "text": "Theano is an instance of this where the Theano runtime has special information that allows it to make scan work but",
    "start": "2467440",
    "end": "2473890"
  },
  {
    "text": "it's kind of it's it's it's conspiring with the graph data type to do that there's actually another graph type that",
    "start": "2473890",
    "end": "2480779"
  },
  {
    "text": "naturally expresses control flow and data flow together that I haven't seen implemented in a deep learning library",
    "start": "2480779",
    "end": "2487930"
  },
  {
    "text": "it's called see of nodes from cliff clicks thesis in the mid-90s it seems",
    "start": "2487930",
    "end": "2493269"
  },
  {
    "text": "like a really natural thing to try and man maybe that's something that comes up in the future but that's kind of a big question marks",
    "start": "2493269",
    "end": "2499150"
  },
  {
    "text": "maybe one of you will we'll try that out and see how well it works so in practice",
    "start": "2499150",
    "end": "2506279"
  },
  {
    "text": "this level of granularity can sometimes slow us down having to work with addition and multiplication can be nice",
    "start": "2506279",
    "end": "2514660"
  },
  {
    "text": "if you want to try crazy stuff but if you know you want to make a confident why don't you just rush all the way over",
    "start": "2514660",
    "end": "2519819"
  },
  {
    "text": "to the left if you want to take you know inception and add another layer where you want to use the type in the middle",
    "start": "2519819",
    "end": "2526029"
  },
  {
    "text": "an autograph allows you to do that so I'll just kind of walk through writing a",
    "start": "2526029",
    "end": "2531369"
  },
  {
    "text": "neural net three ways very quickly and then and then close questions shortly thereafter so using",
    "start": "2531369",
    "end": "2537190"
  },
  {
    "text": "the fully granular approach there's a lot of text on the screen but the top half is basically let's instantiate our",
    "start": "2537190",
    "end": "2542980"
  },
  {
    "text": "parameters the way that we want to and then here just like I've showed you in previous slides let's do a multiply and",
    "start": "2542980",
    "end": "2548200"
  },
  {
    "text": "let's do an addition and put it through non-linearity we're being very explicit right so we're breaking all the abstraction boundaries and we're just",
    "start": "2548200",
    "end": "2553930"
  },
  {
    "text": "using primitive operations we can use the layer based approach so in Auto grad we have a facility to turn all of the N",
    "start": "2553930",
    "end": "2560890"
  },
  {
    "text": "and modules of which there are a lot may be an exhaustive list for what you'd want to use for standard deep learning",
    "start": "2560890",
    "end": "2567069"
  },
  {
    "text": "applications you can turn them into functions and then just use them so linear one on the linear parameters and",
    "start": "2567069",
    "end": "2573339"
  },
  {
    "text": "your input and some activation you can go through your neural network this way so you can use a layer based approach if",
    "start": "2573339",
    "end": "2579670"
  },
  {
    "text": "you want and if you just want your network just a feed-forward neural network we've got a couple of these kind",
    "start": "2579670",
    "end": "2586839"
  },
  {
    "text": "of standard models just ready to go so you can just say give me a neural network give me log softmax and a loss",
    "start": "2586839",
    "end": "2592299"
  },
  {
    "text": "and let me blow these guys together so you can do it any of those three ways",
    "start": "2592299",
    "end": "2599099"
  },
  {
    "text": "Auto grad at Twitter has had a pretty cool impact we use NN for a lot of stuff",
    "start": "2599099",
    "end": "2605170"
  },
  {
    "text": "when we use Auto grat as well but being able to reach for autograph to try something totally crazy and just knowing",
    "start": "2605170",
    "end": "2610839"
  },
  {
    "text": "that you're going to get the right gradients has really accelerated the pace of high risk potentially high payoff attempts that we make so one",
    "start": "2610839",
    "end": "2617980"
  },
  {
    "text": "crazy thing you might want to try is experiment with loss functions so instead of I have a hundred image",
    "start": "2617980",
    "end": "2623770"
  },
  {
    "text": "classes and I want to have my convolutional neural network be good at classifying this hundred image classes",
    "start": "2623770",
    "end": "2629619"
  },
  {
    "text": "maybe you have a taxonomy of classes maybe you have a vehicle and then a bus",
    "start": "2629619",
    "end": "2634960"
  },
  {
    "text": "a car and a motorcycle and if you guess any one of those you kind of want partial credit for vehicle or if you guess motorcycle you want partial credit",
    "start": "2634960",
    "end": "2641349"
  },
  {
    "text": "for for car so building that kind of a tree loss is actually really straightforward an auto grad and you can",
    "start": "2641349",
    "end": "2646809"
  },
  {
    "text": "do that in in just one sitting but might be more complicated to do that in other libraries we have to crack open the",
    "start": "2646809",
    "end": "2652420"
  },
  {
    "text": "abstraction barrier write your own partial derivatives glue it back together and then use that module that you've built we've trained models that",
    "start": "2652420",
    "end": "2661839"
  },
  {
    "text": "are in production in auto grad so this is something that's a battle-tested to a sense and is running on",
    "start": "2661839",
    "end": "2667840"
  },
  {
    "text": "large amount of media Twitter in a sense Auto grad doesn't actually matter when you're running in production because you",
    "start": "2667840",
    "end": "2673060"
  },
  {
    "text": "just you have your function definition for your prediction of your neural network and then the gradient part just",
    "start": "2673060",
    "end": "2679120"
  },
  {
    "text": "goes away or so all the fancy stuff where we play Storch with our secret you know listener functions all that just",
    "start": "2679120",
    "end": "2684400"
  },
  {
    "text": "goes away and you just have some numerical code so there's actually no speed penalty a test time at all and we",
    "start": "2684400",
    "end": "2690040"
  },
  {
    "text": "have an optimized mode which does a little bit of compiler stuff still work in progress but for the average model",
    "start": "2690040",
    "end": "2696700"
  },
  {
    "text": "it's as fast sometimes faster than n N and for really complicated stuff if you",
    "start": "2696700",
    "end": "2702130"
  },
  {
    "text": "wrote that by hand you'd probably be faster but the time to first model fit using Auto grad is dramatically reduced",
    "start": "2702130",
    "end": "2708970"
  },
  {
    "text": "because you don't have to worry about correctness so this is a big wall of text but it's meant to put in your head",
    "start": "2708970",
    "end": "2716620"
  },
  {
    "text": "some ideas of things from automatic differentiation from that world that we",
    "start": "2716620",
    "end": "2721810"
  },
  {
    "text": "don't have yet that we really want right to be able to train models faster and better so the first is checkpointing",
    "start": "2721810",
    "end": "2728260"
  },
  {
    "text": "this does not check pointing where you save your model every 10 iterations this is check pointing where on your forward",
    "start": "2728260",
    "end": "2733600"
  },
  {
    "text": "pass you might you in normal reverse mode automatic differentiation you have",
    "start": "2733600",
    "end": "2738790"
  },
  {
    "text": "to remember every single piece of computation you do because you might need it to calculate the derivatives and checkpointing you just delete them you",
    "start": "2738790",
    "end": "2745420"
  },
  {
    "text": "let them go away because you think that some of those might actually be easier to recompute than to store alright so",
    "start": "2745420",
    "end": "2751480"
  },
  {
    "text": "for point wise nonlinearities for instance it might be easier once you've loaded your data just to recompute the",
    "start": "2751480",
    "end": "2756580"
  },
  {
    "text": "reloj as opposed to saving the result of reloj and loading that back in again mixing forward and reverse mode is",
    "start": "2756580",
    "end": "2763030"
  },
  {
    "text": "something that you can imagine being important for kind of complicated architectures although I don't really",
    "start": "2763030",
    "end": "2768730"
  },
  {
    "text": "know how much impact that would have so in the chain rule you can either go from left to right or you could start in the middle and go out you can do all kinds",
    "start": "2768730",
    "end": "2774820"
  },
  {
    "text": "of crazy stuff if you want and we really just do reverse mode for diamond shape",
    "start": "2774820",
    "end": "2780610"
  },
  {
    "text": "graphs where your computation explodes out and it comes back in that might be",
    "start": "2780610",
    "end": "2785830"
  },
  {
    "text": "useful to start with forward mode and then finish with the reverse mode or an hourglass you might want to start with reverse mode and end with forward mode",
    "start": "2785830",
    "end": "2793770"
  },
  {
    "text": "stencils are a generalization of convolutions that people use a lot in",
    "start": "2793770",
    "end": "2799420"
  },
  {
    "text": "computer graphics automatically calculate really efficient derivatives of image processing just general image processing",
    "start": "2799420",
    "end": "2806460"
  },
  {
    "text": "algorithms is under active investigation in the graphics world and in the computer vision world so these are two",
    "start": "2806460",
    "end": "2812770"
  },
  {
    "text": "references that are kind of neat papers source to source transformations is something that hasn't really made it it",
    "start": "2812770",
    "end": "2819520"
  },
  {
    "text": "basically has kind of been dormant for about ten or fifteen years so the gold standard used to be you take a piece of",
    "start": "2819520",
    "end": "2825610"
  },
  {
    "text": "code as text and you output another piece of code as text what we're doing now in deep learning is we're always",
    "start": "2825610",
    "end": "2831940"
  },
  {
    "text": "building runtimes we're always building some domain-specific layer that depends on you actually running code it used to",
    "start": "2831940",
    "end": "2838690"
  },
  {
    "text": "be that you just read that text and kind of like a compiler spit out the gradient this this was the gold standard it might",
    "start": "2838690",
    "end": "2845650"
  },
  {
    "text": "not be now but I think it's worth three investigating and then higher order gradients so Hessian vector products and",
    "start": "2845650",
    "end": "2852550"
  },
  {
    "text": "kind of Hessian based optimization maybe doesn't always have full payoff I actually don't recall hearing anything",
    "start": "2852550",
    "end": "2858490"
  },
  {
    "text": "about this at this school so far because it's very expensive and difficult to do",
    "start": "2858490",
    "end": "2864430"
  },
  {
    "text": "expensive computationally fashion is just if you take the grad of F it gives you the gradients if you want the second",
    "start": "2864430",
    "end": "2869950"
  },
  {
    "text": "derivative right so you take grad a grad of F so there's efficient ways to do this it's still kind of an open problem",
    "start": "2869950",
    "end": "2876100"
  },
  {
    "text": "but there are libraries out there the Python version of autograph dust as well diff sharp and hype both also do this as",
    "start": "2876100",
    "end": "2882160"
  },
  {
    "text": "well so to kind of close out you should just try it out it's really easy to get",
    "start": "2882160",
    "end": "2887830"
  },
  {
    "text": "it if you have anaconda if you use Python we've made it so that Lua is",
    "start": "2887830",
    "end": "2893440"
  },
  {
    "text": "fully installable with anaconda so if you're already using it it's very very easy to get all of the tools that I've",
    "start": "2893440",
    "end": "2900100"
  },
  {
    "text": "showed you today and that's kind of the single line to interface with it and if",
    "start": "2900100",
    "end": "2905410"
  },
  {
    "text": "you have any questions you can find me on Twitter or email or github but I'm happy to to answer any questions that",
    "start": "2905410",
    "end": "2911890"
  },
  {
    "text": "you have",
    "start": "2911890",
    "end": "2914160"
  },
  {
    "text": "oh yeah I have no idea",
    "start": "2934870",
    "end": "2944860"
  },
  {
    "text": "thanks thanks for the great talk oh yeah I was wondering what's the state",
    "start": "2945550",
    "end": "2951830"
  },
  {
    "text": "of the data visualization facilities in Lua compared to say Python if I'm Frank",
    "start": "2951830",
    "end": "2957170"
  },
  {
    "text": "it's it's not as good python has been at this for you know five ten years really actively building matplotlib and you",
    "start": "2957170",
    "end": "2964940"
  },
  {
    "text": "know Seabourn and all these other libraries and in Lua were importing other people's work so book ajs is",
    "start": "2964940",
    "end": "2970820"
  },
  {
    "text": "really the best that i've seen so far and that's something you can use in a notebook so you have the full suite of",
    "start": "2970820",
    "end": "2976370"
  },
  {
    "text": "that of that particular library yeah",
    "start": "2976370",
    "end": "2980440"
  },
  {
    "text": "hey thanks for the luck is it possible to convert a model train with torch in",
    "start": "2987030",
    "end": "2993860"
  },
  {
    "text": "into a C model that's deployable in you know production we just run torch in",
    "start": "2993860",
    "end": "3000890"
  },
  {
    "text": "production we use a little model but you want to run it and see so the whole",
    "start": "3000890",
    "end": "3005930"
  },
  {
    "text": "layer of torch that's actually doing the work is in C and calling torch from C I",
    "start": "3005930",
    "end": "3011900"
  },
  {
    "text": "don't have a specific website I can point you to but you can very easily call and execute a Lua script from C",
    "start": "3011900",
    "end": "3018620"
  },
  {
    "text": "it's like three or four lines of code in C thank you the follow-up the question",
    "start": "3018620",
    "end": "3032390"
  },
  {
    "text": "about see just now just like if I'm gonna compile I mean I want to have Tosh into my sequence passcode what kind of",
    "start": "3032390",
    "end": "3039470"
  },
  {
    "text": "overhead do I see I see just animations yourself like I have a 10,000 line - what just-in-time compiler",
    "start": "3039470",
    "end": "3046760"
  },
  {
    "text": "I need to put that in there right oh I can I avoid that because for example I",
    "start": "3046760",
    "end": "3051920"
  },
  {
    "text": "think about if I'm going to put the one in an embedded system they have a mouth resource of anything during inference",
    "start": "3051920",
    "end": "3059390"
  },
  {
    "text": "time so I'm sorry during yet during inference time there's there's no appreciable overhead if I'm",
    "start": "3059390",
    "end": "3065630"
  },
  {
    "text": "understanding your question right so you you are importing a Louis so in your C code you're going to basically say Lua",
    "start": "3065630",
    "end": "3072950"
  },
  {
    "text": "please run this Lua script and that's going to call out into other C code so all this overhead I talked about with",
    "start": "3072950",
    "end": "3078530"
  },
  {
    "text": "autograph that's training time that doesn't exist at test time at all so so",
    "start": "3078530",
    "end": "3083840"
  },
  {
    "text": "during test time but the thing is I still need to have Lua compile into my C code right yeah so this is something",
    "start": "3083840",
    "end": "3090320"
  },
  {
    "text": "people have been doing for like 15 20 years it's pretty mature so Lua is in like microwaves for instance people have",
    "start": "3090320",
    "end": "3097670"
  },
  {
    "text": "done very embedded applications of Lua yeah I think the binary for Lu is like I",
    "start": "3097670",
    "end": "3103040"
  },
  {
    "text": "don't want to it's like a round it's a kilobytes it's very very small there's 10,000 lines of code so when it compiles",
    "start": "3103040",
    "end": "3109400"
  },
  {
    "text": "down on small",
    "start": "3109400",
    "end": "3111880"
  },
  {
    "text": "so there's a question from the twitters says i'm using a combination of Karros",
    "start": "3114760",
    "end": "3121130"
  },
  {
    "text": "and tensor flow why should I use torture auto grad if you're happy then you know",
    "start": "3121130",
    "end": "3127940"
  },
  {
    "text": "that's great I guess so people tend to reach for torch when they would like to be able to",
    "start": "3127940",
    "end": "3134510"
  },
  {
    "text": "reason very easily about performance the",
    "start": "3134510",
    "end": "3139640"
  },
  {
    "text": "kind of the more of a compiler infrastructure that gets added to a deep learning environment the harder it can",
    "start": "3139640",
    "end": "3145640"
  },
  {
    "text": "be for the end user right away from the people that originally made the library can be harder for the end user to reason",
    "start": "3145640",
    "end": "3151670"
  },
  {
    "text": "why is this slow why is this not working you might eventually see some github issue later my network is slow in these",
    "start": "3151670",
    "end": "3157310"
  },
  {
    "text": "conditions and then it gets closed a year after you had to have shipped your project right I mean these things can happen it's not the fault of anybody",
    "start": "3157310",
    "end": "3163520"
  },
  {
    "text": "it's just that torch was designed to basically be very thin a thin layer over C code so if that's something that you",
    "start": "3163520",
    "end": "3170060"
  },
  {
    "text": "care about torch is a really good thing to work for if careless and tensorflow is working great for you then keep deep",
    "start": "3170060",
    "end": "3175250"
  },
  {
    "text": "learning you know that's awesome so I'm",
    "start": "3175250",
    "end": "3182600"
  },
  {
    "text": "trying to see",
    "start": "3182600",
    "end": "3185140"
  },
  {
    "text": "it's hard to filter where will the slides be posted it's not",
    "start": "3189849",
    "end": "3196870"
  },
  {
    "text": "a deep learning question but they will be posted that's the answer to that",
    "start": "3196870",
    "end": "3202090"
  },
  {
    "text": "question I have a question now how do I access through so normally all the web",
    "start": "3202090",
    "end": "3210700"
  },
  {
    "text": "services production generally are another you know fast based application in Python or you know Java based Web",
    "start": "3210700",
    "end": "3217420"
  },
  {
    "text": "Services right or maybe in you know in the cellphone through Android which is also Java right so how do you call these",
    "start": "3217420",
    "end": "3224410"
  },
  {
    "text": "models which were you know trained in torch how would you actually access those there's a couple different ways",
    "start": "3224410",
    "end": "3229720"
  },
  {
    "text": "you can do that if you're using a feed-forward neural network writing the",
    "start": "3229720",
    "end": "3235900"
  },
  {
    "text": "Java code to do the matrix multiplies can be pretty straightforward and we've actually done that before or it's just",
    "start": "3235900",
    "end": "3241510"
  },
  {
    "text": "simpler tor just write the deep learning code load in the weights we'll serialize it however you know it needs to be",
    "start": "3241510",
    "end": "3246910"
  },
  {
    "text": "loaded that's one approach is kind of you know hacking short term at Twitter we've engineered a system where we",
    "start": "3246910",
    "end": "3252880"
  },
  {
    "text": "actually have Lua virtual machines running inside of Java and we talked over the j'ni so we have like a more",
    "start": "3252880",
    "end": "3261250"
  },
  {
    "text": "permanent solution for that but if you're using standard model architectures you might try to serialize",
    "start": "3261250",
    "end": "3267910"
  },
  {
    "text": "your weights and then use the native deep learning library that exists to load up those weights and then run for",
    "start": "3267910",
    "end": "3273250"
  },
  {
    "text": "it and that with some debugging I think that's perfectly fair approach if you have this split between testing and kind",
    "start": "3273250",
    "end": "3279910"
  },
  {
    "text": "of deployment where you're constrained by language or environment that's generally the thing that you know I mean",
    "start": "3279910",
    "end": "3286900"
  },
  {
    "text": "you do basically just you know C realize your model and then try to read it what about the latency actually so related to",
    "start": "3286900",
    "end": "3293080"
  },
  {
    "text": "you know this so when you see realize that hackish way at least you can get you know that latency things sold out",
    "start": "3293080",
    "end": "3299470"
  },
  {
    "text": "but is there any plan basically to have you know interfaces available for other languages so that you know you don't",
    "start": "3299470",
    "end": "3306220"
  },
  {
    "text": "have to do this extra step of serializing and then you know loading into language if you if you don't like",
    "start": "3306220",
    "end": "3314560"
  },
  {
    "text": "in your case you were mentioning that in Twitter you have",
    "start": "3314560",
    "end": "3318570"
  },
  {
    "text": "- available inside your Java JVM our access to the JVM using j'ni so what",
    "start": "3321420",
    "end": "3329080"
  },
  {
    "text": "what what impact does it have on the latency and by latency you mean time to",
    "start": "3329080",
    "end": "3335650"
  },
  {
    "text": "ship the model not the latency of how long it takes many predictions oh that's",
    "start": "3335650",
    "end": "3341590"
  },
  {
    "text": "gonna be very engineering dependent so if you're calling torch from C code the latency is not appreciable over if",
    "start": "3341590",
    "end": "3348369"
  },
  {
    "text": "you're just running Lua code and that can be extremely fast if you're going through some wrapper like through the",
    "start": "3348369",
    "end": "3354670"
  },
  {
    "text": "J&I or something like that you will incur an overhead and you should just try to pick the interfaces that reduce",
    "start": "3354670",
    "end": "3360820"
  },
  {
    "text": "that as much even if you incur engineering overhead to do so I don't know if that answers your question I'm a",
    "start": "3360820",
    "end": "3372580"
  },
  {
    "text": "little bit distant from the server side so I can't give you I just don't know but generally I think what I can say",
    "start": "3372580",
    "end": "3380740"
  },
  {
    "text": "this that's fair is we're constrained by machine learning you know model complexity latency we are not",
    "start": "3380740",
    "end": "3387340"
  },
  {
    "text": "constrained by overhead of like figuring out how to actually get those predictions like to an HTTP request for",
    "start": "3387340",
    "end": "3394060"
  },
  {
    "text": "instance serving which you know which is",
    "start": "3394060",
    "end": "3400240"
  },
  {
    "text": "kind of sort of solving this problem yeah not that I'm aware of",
    "start": "3400240",
    "end": "3406600"
  },
  {
    "text": "again the torch community is not centralized and so people could be working on a totally awesome",
    "start": "3406600",
    "end": "3412240"
  },
  {
    "text": "you know complement to the the tensorflow server but I am not aware of",
    "start": "3412240",
    "end": "3418540"
  },
  {
    "text": "it thank you okay we're going to take a",
    "start": "3418540",
    "end": "3423940"
  },
  {
    "text": "short break of 15 minutes let's thanks Alex again",
    "start": "3423940",
    "end": "3429690"
  }
]