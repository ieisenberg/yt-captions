[
  {
    "start": "0",
    "end": "35000"
  },
  {
    "text": "Alright, welcome back everyone.  Sound okay?  Alright.",
    "start": "4820",
    "end": "8440"
  },
  {
    "text": "So today we will-  We talked a little bit about neural networks, started to talk about neural networks yesterday.",
    "start": "10440",
    "end": "17880"
  },
  {
    "text": "Today we'll continue to talk about neural networks that work with images, convolutional neural networks,",
    "start": "18200",
    "end": "25850"
  },
  {
    "text": "and see how those types of networks can help us drive a car.  If we have time we'll cover a simple illustrative case study",
    "start": "26620",
    "end": "37800"
  },
  {
    "start": "35000",
    "end": "35000"
  },
  {
    "text": "of detecting traffic lights. The problem of detecting green, yellow, red.  If we can't teach our neural networks to do that, we're in trouble,",
    "start": "38260",
    "end": "49240"
  },
  {
    "text": "but it's a good, clear, illustrative case study of a three-class classification problem. Okay, next there's",
    "start": "49990",
    "end": "59660"
  },
  {
    "start": "58000",
    "end": "58000"
  },
  {
    "text": "DeepTesla here looped over and over in a very short GIF.  This is actually running live in a website right now.",
    "start": "60440",
    "end": "68900"
  },
  {
    "text": "We'll show it towards the end of the lecture, this once again just like DeepTraffic is a neural network that learns to",
    "start": "68900",
    "end": "79560"
  },
  {
    "text": "steer a vehicle based on the video of the forward road way. And once again, doing all of that in the browser using javascript.",
    "start": "79560",
    "end": "87620"
  },
  {
    "text": "So you'll be able to train your own very network to drive using real world data.",
    "start": "88800",
    "end": "93560"
  },
  {
    "text": "I'll explain how.  We will also have a tutorial and code.  Briefly described today at the end of the lecture,",
    "start": "94540",
    "end": "108340"
  },
  {
    "text": "if there's time how to do the same thing in TensorFlow. So if you want to build a network that's bigger, deeper and you want to utilize GPUs to train that network,",
    "start": "108340",
    "end": "120960"
  },
  {
    "text": "you want to not do it in your browser, you want to do it offline using TensorFlow",
    "start": "120960",
    "end": "126680"
  },
  {
    "text": "and having a powerful GPU on your computer and we'll explain how to do that. Computer vision.",
    "start": "127150",
    "end": "134120"
  },
  {
    "start": "131000",
    "end": "131000"
  },
  {
    "text": "So we talked about vanilla machine learning where there's no-  Where the size, yesterday,",
    "start": "134680",
    "end": "142280"
  },
  {
    "text": "where the size of the input is small for the most part. The number of neurons, in the case the neural networks, is on the order of 10, 100, 1,000.",
    "start": "142800",
    "end": "154180"
  },
  {
    "text": "When you think of images, images are a collection of pixels, one of the most iconic images from computer vision",
    "start": "155160",
    "end": "162080"
  },
  {
    "text": "on the bottom left there is Lenna. I encourage you to Google it and figure out the story behind that image.  It's quite shocking when I found out recently.",
    "start": "162620",
    "end": "173040"
  },
  {
    "text": "So once again, computer vision is, these days, dominated by data driven approaches by machine learning",
    "start": "175720",
    "end": "187480"
  },
  {
    "text": "where all of the same methods that are used on other types of data are used on images where the input is just",
    "start": "191260",
    "end": "199950"
  },
  {
    "text": "a collection of pixels and pixels are numbers from 0  to 255 discrete values.",
    "start": "199950",
    "end": "208580"
  },
  {
    "text": "So we can think exactly what we've talked about previously, you could think of images in the same exact way.  It's just numbers",
    "start": "209420",
    "end": "216280"
  },
  {
    "text": "and so we can do the same kind of thing.  We could do supervised learning where you have an input image",
    "start": "217060",
    "end": "221860"
  },
  {
    "text": "and output label.  The input image here is a picture of a woman; the label might be \"woman\".",
    "start": "222180",
    "end": "228359"
  },
  {
    "text": "On supervised learning, same thing.  We'll look at that briefly as well as clustering images into categories.",
    "start": "229930",
    "end": "237260"
  },
  {
    "text": "Again semi-supervised and reinforcement learning.  In fact, the Atari games that talked about yesterday.",
    "start": "238080",
    "end": "244500"
  },
  {
    "text": "do some pre-processing on the images.  They're doing computer vision;  they're using convolutional neural networks as we'll discuss today",
    "start": "245080",
    "end": "251720"
  },
  {
    "text": "and the pipeline for supervised learning is again the same:  there's raw data in the form of images,",
    "start": "253040",
    "end": "259019"
  },
  {
    "text": "there's labels on those images.  We perform a machine learning algorithm, performs feature extraction,",
    "start": "259260",
    "end": "266180"
  },
  {
    "text": "it trains given the inputs and outputs on the images and the labels of those images, constructs the model",
    "start": "266520",
    "end": "273900"
  },
  {
    "text": "and then test that model. And we get a metric and accuracy.  Accuracy is the term that's used to often describe how well the model performs.",
    "start": "273900",
    "end": "281500"
  },
  {
    "text": "The percentage.",
    "start": "282280",
    "end": "283120"
  },
  {
    "start": "286000",
    "end": "286000"
  },
  {
    "text": "I apologise for the constant presence of cats throughout this course.  I assure you this course is about driving, not cats.",
    "start": "287290",
    "end": "294220"
  },
  {
    "text": "but images are numbers.  So for us we take it for granted.",
    "start": "296380",
    "end": "303140"
  },
  {
    "text": "We're really good at looking and converting visual perception as human beings, converting visual perception, into semantics.",
    "start": "303760",
    "end": "312560"
  },
  {
    "text": "We see this image and we know it's a cat but a computer only sees numbers:  RGB values for a color image.",
    "start": "313500",
    "end": "322040"
  },
  {
    "text": "There's three values for every single pixel from 0 to 255.",
    "start": "322560",
    "end": "326720"
  },
  {
    "text": "And so given that image, we can think of two problems:  one is regression and the other is classification.  Regression is when given an image",
    "start": "327840",
    "end": "337680"
  },
  {
    "text": "we want to produce a real value of output put back. So if we have an image of the four roadway,",
    "start": "338140",
    "end": "343200"
  },
  {
    "text": "we want to produce a value for the steering wheel angle and if you have an algorithm that's really smart,",
    "start": "343440",
    "end": "350340"
  },
  {
    "text": "It can take any image of the forward roadway and produce the perfectly correct steering angle that drives the car safely across the United States.",
    "start": "350840",
    "end": "358540"
  },
  {
    "text": "We'll talk about how to do that and where that fails.  Classification is when the input again is an image",
    "start": "359340",
    "end": "367680"
  },
  {
    "text": "and the output is a class label, a discrete class label.  Underneath it though often is still a regression problem",
    "start": "368140",
    "end": "376340"
  },
  {
    "text": "and once produced is a probability that this particular image belongs to a particular category.",
    "start": "376340",
    "end": "383639"
  },
  {
    "text": "And we use a threshold to chop off the outputs associated with low probabilities",
    "start": "384590",
    "end": "391740"
  },
  {
    "text": "and take the labels associated with high probabilities and convert it into a discrete classification.",
    "start": "392940",
    "end": "397980"
  },
  {
    "start": "399000",
    "end": "399000"
  },
  {
    "text": "I mentioned this yesterday but it bears saying again, computer vision is hard.",
    "start": "400020",
    "end": "404379"
  },
  {
    "text": "We, once again, take it for granted.  As human beings, we're really good at dealing with all these problems.",
    "start": "407320",
    "end": "413220"
  },
  {
    "text": "There's viewpoint variation:  the object looks wholly different in terms of the numbers behind the images",
    "start": "413740",
    "end": "420080"
  },
  {
    "text": "in terms of the pixels when viewed from a different angle. Viewpoint variation:  objects when you're standing far away from them or up close are totally different size.",
    "start": "420360",
    "end": "431199"
  },
  {
    "text": "We're good at detecting that there are different size. It's still the same object as human beings but that's still a really hard problem because those sizes can vary drastically.",
    "start": "431800",
    "end": "440960"
  },
  {
    "text": "We talked about occlusions and deformations with cats; well understood problem. There's background clutter.",
    "start": "441500",
    "end": "449400"
  },
  {
    "text": "You have to separate the object of interest from the background and given the three dimensional structure of our world.",
    "start": "450390",
    "end": "458200"
  },
  {
    "text": "There's a lot of stuff often going on in the background:  the clutter, their inter-class variation.",
    "start": "458200",
    "end": "464880"
  },
  {
    "text": "That's often greater than inter-class variation; meaning objects of the same type often have more variation",
    "start": "465000",
    "end": "471100"
  },
  {
    "text": "than the objects that you're trying to separate them from.  There is the hard one for driving:  illumination.",
    "start": "471220",
    "end": "481060"
  },
  {
    "text": "Light is the way we perceive things; the reflection of light off the surface",
    "start": "482350",
    "end": "486800"
  },
  {
    "text": "and the source of that light changes the way that object appears and we have to be robust to all of that.",
    "start": "487860",
    "end": "493680"
  },
  {
    "start": "495000",
    "end": "495000"
  },
  {
    "text": "So the image classification pipeline is the same as I mentioned.  There are categories,",
    "start": "497210",
    "end": "504639"
  },
  {
    "text": "It's the classification problems for those categories of cat, dog, mug, hat.",
    "start": "505800",
    "end": "510840"
  },
  {
    "text": "You have a bunch of examples, image examples of each of those categories and so the input is just those images paired with the category.",
    "start": "510840",
    "end": "519760"
  },
  {
    "text": "And you train to map, to estimate a function that maps from the images to the categories.",
    "start": "521210",
    "end": "528980"
  },
  {
    "start": "530000",
    "end": "530000"
  },
  {
    "text": "For all of that you need data; a lot of it. There is, unfortunately, a growing number of data sets but there are still relatively small.",
    "start": "532140",
    "end": "543880"
  },
  {
    "text": "We get excited.  There are millions of images but they're not billions or trillions of images and these are,",
    "start": "545140",
    "end": "552600"
  },
  {
    "text": "the data sets that you will see if you read academic literature most often. Mnist, the one that's been beaten to death.",
    "start": "553440",
    "end": "560920"
  },
  {
    "text": "And then we use as well in this course the data set of handwritten digits where the categories are 0 to 9.",
    "start": "561510",
    "end": "574340"
  },
  {
    "text": "ImageNet, one of the largest image data sets; fully labeled image data sets in the world has images with a hierarchy of categories from Word Net.",
    "start": "575440",
    "end": "588120"
  },
  {
    "text": "And what you see there is a labeling of what image is associated with which words are present in the data set.",
    "start": "589560",
    "end": "596180"
  },
  {
    "text": "CIFAR-10 and CIFAR-100 are tiny images that are used to prove in a very efficient and quick way",
    "start": "597380",
    "end": "606240"
  },
  {
    "text": "offhand that your algorithm that you're trying to publish on, or trying to impress the world with, works well.",
    "start": "606500",
    "end": "612860"
  },
  {
    "text": "It's small, it's a small data set:  CIFAR-10 means there's 10 categories.",
    "start": "613580",
    "end": "618040"
  },
  {
    "text": "And places is a data set of natural scenes: woods, nature, city, and so on.",
    "start": "619960",
    "end": "627500"
  },
  {
    "start": "625000",
    "end": "625000"
  },
  {
    "text": "So let's look at CIFAR-10 as a data set of 10 categories: airplane, automobile, bird, cat, and so on.",
    "start": "627940",
    "end": "634620"
  },
  {
    "text": "They're shown there with sample images as the rose. And so let's build a classifier that's able to take images from one of these 10 categories and tell us what",
    "start": "635540",
    "end": "647220"
  },
  {
    "text": "is shown in the image.  So how do we do that?  Once again, all the algorithm sees is numbers.",
    "start": "648300",
    "end": "656360"
  },
  {
    "text": "So we have to try to have at the very core, we have to have an operator for comparing two images.",
    "start": "658450",
    "end": "666740"
  },
  {
    "text": "So given an image and I want to save it as a cat or dog. I want to compare it to images of cats and compare it to images of dogs and see which one matches better.",
    "start": "667440",
    "end": "676280"
  },
  {
    "text": "So there has to be a comparative operator.  Okay so one way to do that is take the absolute difference between the two images",
    "start": "676680",
    "end": "684380"
  },
  {
    "text": "pixel by pixel, take the difference between each individual pixel shown on the bottom of the slide for a 4x4 image.  And then we sum that pixel-wise",
    "start": "684380",
    "end": "698560"
  },
  {
    "text": "pixel-wise absolute difference into a single number.  So if the image is totally different pixel-wise,",
    "start": "698960",
    "end": "705020"
  },
  {
    "text": "that will be a high number. If it's the same image, the number will be 0.  Oh, it's the absolute value too of the difference.",
    "start": "705840",
    "end": "713240"
  },
  {
    "text": "And that's called L1 distance.  It doesn't matter.  When we speak of distance, we usually mean L2 distance.",
    "start": "716420",
    "end": "725500"
  },
  {
    "text": "And so, if we try to-  So we can build the classifier that just uses this operator to compare it to every single image in the data set",
    "start": "727480",
    "end": "737959"
  },
  {
    "text": "and say I'm going to pick the, I'm going to pick the category",
    "start": "738160",
    "end": "743940"
  },
  {
    "text": "that's the closest using this comparative operator.  I'm going to find-  I have a picture of a cat",
    "start": "743940",
    "end": "750020"
  },
  {
    "text": "and I'm going to look through the dataset and find the image that's the closest to this picture",
    "start": "750020",
    "end": "754100"
  },
  {
    "text": "and say that is the category that this picture belongs to. So if we just flip the coin and randomly pick which category an image belongs to get that accuracy,",
    "start": "755270",
    "end": "765280"
  },
  {
    "text": "would be on average 10%.  It's random. The accuracy with which our brilliant image difference algorithm that just goes through the data set",
    "start": "766410",
    "end": "779980"
  },
  {
    "text": "and finds the closest one is 38% which is pretty good, it's way above 10%.",
    "start": "779980",
    "end": "788199"
  },
  {
    "start": "788000",
    "end": "788000"
  },
  {
    "text": "So you can think about this operation of look into the base and finding the closest image as what's called K-Nearest Neighbors",
    "start": "790580",
    "end": "799900"
  },
  {
    "text": "or K in that case.  Meaning you find the one closest neighbor to this image that you're asking questions about",
    "start": "800460",
    "end": "807340"
  },
  {
    "text": "and accept the label from that image.  You could do the same thing increasing K.",
    "start": "808410",
    "end": "813480"
  },
  {
    "text": "Increasing K to 2 means you take the two nearest neighbors. You find the two closest in terms of pixel-wise image difference through this particular query image",
    "start": "814650",
    "end": "827540"
  },
  {
    "text": "and find which categories did those belong to. What's shown up top on the left is the data set we're working with:  red, green, blue.",
    "start": "828690",
    "end": "838780"
  },
  {
    "text": "What's shown in the middle is the one nearest neighbor classifier, meaning",
    "start": "840000",
    "end": "845000"
  },
  {
    "text": "this is how you segment the entire space of different things that you can compare.",
    "start": "845860",
    "end": "850860"
  },
  {
    "text": "And if a point falls into any of these regions, it will be immediately associated with the nearest neighbor algorithm to belong to that image, to that region.",
    "start": "853950",
    "end": "863779"
  },
  {
    "text": "With the five nearest neighbors, there's immediately an issue.  The issue is that there is white regions.",
    "start": "865180",
    "end": "873040"
  },
  {
    "text": "There's tie breakers where your five closest neighbors are from various categories.  So it's unclear where you belong to.",
    "start": "873040",
    "end": "883399"
  },
  {
    "text": "So this is a good example of parameter tuning.  You have one parameter:  K.",
    "start": "885680",
    "end": "892779"
  },
  {
    "text": "And your task as a teacher of machine learning, you have to teach this algorithm how to do your learning for you,",
    "start": "894800",
    "end": "903940"
  },
  {
    "text": "is to figure out that parameter. That's called \"parameter tuning\" or \"hyper-parameter tuning\" as it's called in neural networks.",
    "start": "905160",
    "end": "912720"
  },
  {
    "text": "And so on the bottom right of the slide on the x-axis is K.  As we increase it from 0 to 100 and",
    "start": "914730",
    "end": "925449"
  },
  {
    "text": " the y-axis is classification accuracy.  It turns out that the best K for this data set is 7, 7 years neighbors.",
    "start": "925450",
    "end": "934060"
  },
  {
    "text": "With that we get a performance of 30% human level performance",
    "start": "934500",
    "end": "942460"
  },
  {
    "text": "and I should say that the way we get that number as we do with a lot of the machine learning pipeline",
    "start": "944060",
    "end": "951220"
  },
  {
    "text": "process is you separate the data into the parts of days that you use for training",
    "start": "952640",
    "end": "960020"
  },
  {
    "text": "and another part they use for testing.  You're not allowed to touch the testing part.  That's cheating.",
    "start": "960020",
    "end": "967320"
  },
  {
    "text": "You construct your model of the world on the training data set and you use what's called cross validation",
    "start": "967500",
    "end": "974260"
  },
  {
    "text": "where you take a small part of the training data shown \"fold five\" there in yellow to leave that part out from",
    "start": "975100",
    "end": "985870"
  },
  {
    "text": "the training and then use it as part of the hyper-parameter tuning.  As you train, figure out with that yellow part fold five",
    "start": "985870",
    "end": "997120"
  },
  {
    "text": "how well you're doing  and then you choose a different fold and see how well you're doing",
    "start": "997780",
    "end": "1002740"
  },
  {
    "text": "And keep playing with parameters never touching the test part.  And when you're ready, you run the algorithm on a test data to see how well you really do.  How will it really generalizes.  Yes, question.",
    "start": "1002880",
    "end": "1014360"
  },
  {
    "text": "(INAUDIBLE QUESTION) So, the question was:  \"is there a good way to-",
    "start": "1014500",
    "end": "1021200"
  },
  {
    "text": "Is any good intuition behind what a good K is?\"  There are general rules for different data sets",
    "start": "1022330",
    "end": "1027040"
  },
  {
    "text": "but usually you just have to run through it.  Grid search, brute force.  Yes, question.",
    "start": "1027340",
    "end": "1033199"
  },
  {
    "text": "(INAUDIBLE QUESTION) (CHUCKLING) Good question.  Yes. (INAUDIBLE QUESTION)",
    "start": "1033300",
    "end": "1045079"
  },
  {
    "text": "Yes, the question was:  \"is each pixel 1 number or 3 numbers?\" For majority of computer vision throughout its history used grayscale images so it's 1 number but RGB",
    "start": "1045080",
    "end": "1055040"
  },
  {
    "text": "is 3 numbers and there's sometimes a depth value too, so it's 4 numbers. So it's-",
    "start": "1055040",
    "end": "1060920"
  },
  {
    "text": "If you have a stereo vision camera that gives you the depth information of the pixels, that's a fourth and then if you stack two images together there could be 6.  In general,",
    "start": "1062120",
    "end": "1072140"
  },
  {
    "text": "everything we work with will be 3 numbers for a pixel.",
    "start": "1072140",
    "end": "1076540"
  },
  {
    "text": "Yes, so the question:  \"as to the absolute value is just one number?\" Exactly right.  So in that case, those are grayscale images.",
    "start": "1080000",
    "end": "1085640"
  },
  {
    "text": "So it's not RGB images. So, you know, this algorithm is pretty good if we use the best.",
    "start": "1086020",
    "end": "1094780"
  },
  {
    "text": "We optimize the hyper-parameters of this algorithm, choose K of 7,",
    "start": "1097770",
    "end": "1103200"
  },
  {
    "text": "seems to work well for this particular CIFAR-10 data set.  Okay, we get 30% accuracy.",
    "start": "1103200",
    "end": "1109580"
  },
  {
    "text": "It's impressive, higher than 10%.  Human beings perform at about 94, slightly above 94%",
    "start": "1110080",
    "end": "1117899"
  },
  {
    "text": "accuracy for CIFAR-10.  So given an image and it's a tiny image.  I should clarify it, it's like a little icon.",
    "start": "1117900",
    "end": "1126620"
  },
  {
    "text": "Given that image, human beings are able to determine accurately one of the 10 categories with 94% accuracy.",
    "start": "1129150",
    "end": "1135360"
  },
  {
    "text": "And the currently state-of-the-art convolutional neural networks is ninety five, it's 95.4% accuracy and, believe it or not, it's a heated battle",
    "start": "1135790",
    "end": "1146600"
  },
  {
    "text": "but the most important, the critical fact here, is it's recently surpassed humans.",
    "start": "1147530",
    "end": "1153040"
  },
  {
    "text": "And certainly surpass the k-nearest neighbors algorithm.  So,how does this work?  Let's briefly look back.",
    "start": "1153640",
    "end": "1162800"
  },
  {
    "start": "1155000",
    "end": "1155000"
  },
  {
    "text": "It all still boils down to this little guy:  the neuron, that sums the weights of its inputs, adds a bias, produces an output based on an activation, a smooth activation function.",
    "start": "1163490",
    "end": "1176760"
  },
  {
    "text": "Yes, question. (INAUDIBLE QUESTION)",
    "start": "1178900",
    "end": "1184520"
  },
  {
    "start": "1179000",
    "end": "1179000"
  },
  {
    "text": "The question was:  \"do you take a picture of Cassie, you know it's a cat, but that's not encoded anywhere, like you have to write that down somewhere.",
    "start": "1185880",
    "end": "1196140"
  },
  {
    "text": "So you have to write as a caption:  \"This is my cat.\" And then the unfortunate thing, given the internet and how woody it is, you can't trust the captions on images.",
    "start": "1196700",
    "end": "1205480"
  },
  {
    "text": "because maybe you're just being clever and it's not a cat all, it's a dog dressed as a cat.  Yes, question.",
    "start": "1206220",
    "end": "1213100"
  },
  {
    "text": "(INAUDIBLE QUESTION) Sorry.  Seen as do better than what?",
    "start": "1214240",
    "end": "1220500"
  },
  {
    "text": "Yes, so the question was:  \"do convolutional neural networks generally do better than nearest neighbors? There's very few problems on which neural networks don't do better, yes ,they almost always do better",
    "start": "1226890",
    "end": "1239020"
  },
  {
    "text": "except when you have almost no data.  So you need data.  And convolutional neural networks isn't some special magical thing.",
    "start": "1239020",
    "end": "1250080"
  },
  {
    "text": "It's just neural networks with some cheating up front that I'll explain, some tricks to try to reduce the size",
    "start": "1250080",
    "end": "1258059"
  },
  {
    "text": "and make it capable to deal with images. So again.  Yes, the input is, in this case that we looked at classifying an image of a number,",
    "start": "1258300",
    "end": "1266720"
  },
  {
    "text": "as opposed to doing some fancy convolutional tricks.  We just take the the entire 28x28",
    "start": "1267400",
    "end": "1273920"
  },
  {
    "text": "pixel image that's 784 pixels as the input.",
    "start": "1273940",
    "end": "1279940"
  },
  {
    "text": "That's 784 neurons in the input, 15 neurons on the hidden layer and 10 neurons in the output.",
    "start": "1280380",
    "end": "1286880"
  },
  {
    "text": "Now everything we'll talk about has the same exact structure.  Nothing fancy.",
    "start": "1288640",
    "end": "1292480"
  },
  {
    "start": "1289000",
    "end": "1289000"
  },
  {
    "text": "There is a forward pass through the network where you take an input image and produce an output classification",
    "start": "1294830",
    "end": "1301360"
  },
  {
    "text": "and there's a backward pass through the network for Back Propagation where you adjust the weights",
    "start": "1301920",
    "end": "1307960"
  },
  {
    "text": "when your prediction doesn't match the Ground Truth output.",
    "start": "1307960",
    "end": "1313059"
  },
  {
    "text": "And learning just boils down to optimization; it's just optimizing a smooth function.",
    "start": "1314700",
    "end": "1321220"
  },
  {
    "text": "Differentiable function; that's defined as the lost function.",
    "start": "1322130",
    "end": "1326980"
  },
  {
    "text": "That's usually as simple as a squared error between the true output",
    "start": "1327340",
    "end": "1333179"
  },
  {
    "text": "and the one you actually got.  So what's the difference?  What are convolutional neural networks?",
    "start": "1333180",
    "end": "1338610"
  },
  {
    "text": "Convolutional neural networks take inputs that have some spatial consistency, have some meaning to the spatial-",
    "start": "1340650",
    "end": "1352260"
  },
  {
    "text": "Has some spatial meaning in them like images.  There's other things, you can think of the dimension of time.",
    "start": "1354800",
    "end": "1362620"
  },
  {
    "text": "And you can input audio signal into a convolutional neural network.  And so the input is, usually for every single layer,",
    "start": "1363620",
    "end": "1374559"
  },
  {
    "text": "that's a convolutional layer, the input is a 3D volume and the output is a 3D volume.",
    "start": "1374800",
    "end": "1379860"
  },
  {
    "text": "I'm simplifying because you can call it 4D too but it's 3D.  There's height, width and depth.",
    "start": "1381080",
    "end": "1386840"
  },
  {
    "text": "So that's an image.  The height and the width is the width and the height of the image. And then the depth for grayscale image is 1; for an RGB image is 3;",
    "start": "1387820",
    "end": "1399220"
  },
  {
    "text": "for a ten-frame video of greyscale images the depth is 10.",
    "start": "1400320",
    "end": "1406440"
  },
  {
    "text": "It's just a volume, a three-dimensional matrix of numbers.  And everything-",
    "start": "1407670",
    "end": "1416420"
  },
  {
    "text": "The only thing that a convolutional layer does is take a 3D volume's input, produce a 3D volume as output",
    "start": "1416420",
    "end": "1423670"
  },
  {
    "text": "and has some smooth function. Operating on the inputs, on the sum of the inputs,",
    "start": "1424470",
    "end": "1431240"
  },
  {
    "text": "that may or may not be a parameter that you tune, that you try to optimize.  That's it.",
    "start": "1432900",
    "end": "1440500"
  },
  {
    "start": "1440000",
    "end": "1440000"
  },
  {
    "text": "So Lego pieces that you stack together in the same way as we talked about before.",
    "start": "1441740",
    "end": "1445380"
  },
  {
    "text": "So what are the types of layers that a convolutional neural networks have?  There's inputs. So for example a color image of 32x32 will be a volume of 32x32x3.",
    "start": "1447220",
    "end": "1459160"
  },
  {
    "text": "A convolutional layer takes advantage of the spatial relationships of the input neurons and a convolutional layer,",
    "start": "1461770",
    "end": "1474080"
  },
  {
    "start": "1462000",
    "end": "1462000"
  },
  {
    "text": "it's the same exact neuron as for fully connected network, the regular we talked about before.",
    "start": "1475880",
    "end": "1481580"
  },
  {
    "text": "But it has a narrower receptive field, it's more focused, the inputs to a neuron on the convolutional layer",
    "start": "1481930",
    "end": "1492000"
  },
  {
    "text": "come from a specific region from the previous layer.  And the parameters on each filter, you can think of this as a filter, because you slide it across the entire image.",
    "start": "1492980",
    "end": "1503000"
  },
  {
    "text": "And those parameters are shared.  So supposed you've taken the-  If you think about two layers,",
    "start": "1505860",
    "end": "1512360"
  },
  {
    "text": "as opposed to connecting every single pixel in the first layer to every single neuron in the following layer.",
    "start": "1512780",
    "end": "1520660"
  },
  {
    "text": "You only connect the neurons in the input layer that are close to each other, to the output layer, and then you",
    "start": "1520920",
    "end": "1530070"
  },
  {
    "text": "enforce the weights to be tied together spatially.",
    "start": "1530070",
    "end": "1537620"
  },
  {
    "text": "And what that results in is a filter every single layer on the output,",
    "start": "1539070",
    "end": "1545080"
  },
  {
    "text": "you can think of as a filter, they get excited for example for an edge",
    "start": "1545080",
    "end": "1549940"
  },
  {
    "text": "and when it sees this particular kind of edge in the image, it will get excited. And it'll get excited in the top left of the image, on the top right, bottom left, bottom right.",
    "start": "1550800",
    "end": "1561540"
  },
  {
    "text": "The assumption there is that a powerful feature for detecting a cat",
    "start": "1562930",
    "end": "1568960"
  },
  {
    "text": "is just as important no matter where in the image it is. And this allows you to cut away a huge number of connections between neurons but it still boils down on the right,",
    "start": "1569700",
    "end": "1585780"
  },
  {
    "text": "as a neuron that sums a collection of inputs and applies weights to them.  The spatial arrangement of the output volume relative to the input volume",
    "start": "1586640",
    "end": "1603300"
  },
  {
    "start": "1593000",
    "end": "1593000"
  },
  {
    "text": "is controlled by three things.  The number of filters.  So for every single \"filter\"",
    "start": "1603300",
    "end": "1611360"
  },
  {
    "text": "you get an extra layer on the output.  So if the input,",
    "start": "1611630",
    "end": "1618560"
  },
  {
    "text": "let's talk about the very first layer, the input is 32x32x3.  It's in RGB",
    "start": "1618830",
    "end": "1625870"
  },
  {
    "text": "image of 32x32.  If the number of filters is 10,",
    "start": "1625870",
    "end": "1633280"
  },
  {
    "text": "then the resulting depth the resulting number of stacked channels in the output will be 10.  Stride is given.",
    "start": "1634310",
    "end": "1647060"
  },
  {
    "text": "is the step size of the filter that you slide along the image.  Often times as just 1 or 3",
    "start": "1647660",
    "end": "1656380"
  },
  {
    "text": "and that directly reduces the size, the spatial size the width and the height, of the output image.",
    "start": "1657200",
    "end": "1664279"
  },
  {
    "text": "and then there is a convenient thing that it's often done is padding.  The image on the outside zeros.",
    "start": "1665130",
    "end": "1673220"
  },
  {
    "text": "So that the input and the output have the same height and width.  So this is a visualization of convolution.",
    "start": "1674080",
    "end": "1685419"
  },
  {
    "text": "I encourage you to, kind of maybe offline, think about what's happening. It's similar to the way human vision works, crudely so, if there's any experts in the audience.",
    "start": "1686250",
    "end": "1699460"
  },
  {
    "text": "So the input here on the left is a collection of numbers:  0, 1, 2.  And a filter",
    "start": "1700410",
    "end": "1710580"
  },
  {
    "text": "or there are two filters shown as W1- W0 and W1.  Those filters shown in red, are the different weights applied in those filters.",
    "start": "1716720",
    "end": "1729380"
  },
  {
    "text": "And each of the filters have a certain depth; just like the input a depth of 3.",
    "start": "1730530",
    "end": "1735200"
  },
  {
    "text": "So there are three of them in each column and so,",
    "start": "1736040",
    "end": "1742580"
  },
  {
    "text": "so you slide death filter along the image keeping the weights the same.",
    "start": "1744200",
    "end": "1749799"
  },
  {
    "text": "this is the sharing of the weights and so your first filter you pick the weights, this is an optimization problem. you pick the weights in such a way",
    "start": "1749800",
    "end": "1759240"
  },
  {
    "text": "that it fires, it gets excited, for useful features and doesn't fire for not useful features.",
    "start": "1759240",
    "end": "1764620"
  },
  {
    "text": "And then there's a second filter that fires for useful features and not. And produces a signal on the output depending on a positive number, meaning there's a strong feature in that region,",
    "start": "1765140",
    "end": "1780179"
  },
  {
    "text": "and negative number if there isn't but the filter is the same. This allows for a drastic reduction in the parameters and so you can deal with",
    "start": "1780520",
    "end": "1789820"
  },
  {
    "text": "inputs.  There are a thousand by thousand pixel image, for example, or video. There's a really powerful concept there.",
    "start": "1790540",
    "end": "1799260"
  },
  {
    "start": "1796000",
    "end": "1796000"
  },
  {
    "text": "The spatial sharing of weights. That means there's a spatial invariance to the features you're detecting.  It allows you to learn from arbitrary images",
    "start": "1802750",
    "end": "1811419"
  },
  {
    "text": "so you don't have to be concerned about pre-processing the images in some clever way,",
    "start": "1811960",
    "end": "1817580"
  },
  {
    "text": "you just give the raw image.  There is another operation:  pooling.",
    "start": "1817700",
    "end": "1823840"
  },
  {
    "text": "It's a way to reduce the size of the layers by, for example in this case,",
    "start": "1824880",
    "end": "1830500"
  },
  {
    "text": "it's max pooling for taking a collection of outputs and choose x1",
    "start": "1830500",
    "end": "1835810"
  },
  {
    "text": "and summarizing those collection of pixels such that the output of the pooling operation is much smaller than the input.",
    "start": "1835810",
    "end": "1848170"
  },
  {
    "text": "Because the justification there is that you don't need a high resolution.",
    "start": "1849970",
    "end": "1859120"
  },
  {
    "text": "Localization of which pixel is important in the image or according to, you know,",
    "start": "1860340",
    "end": "1868020"
  },
  {
    "text": "you don't need to know exactly which pixel is associated with the cat ear or a cat face.",
    "start": "1868020",
    "end": "1874740"
  },
  {
    "text": "As long as you, kind of, know it's around that part and that reduces a lot of complexity in the operations. Yes, question.",
    "start": "1875840",
    "end": "1882720"
  },
  {
    "text": "The question was:  \"when is too much pooling, when do you stop pooling?\"",
    "start": "1887280",
    "end": "1892340"
  },
  {
    "text": "So pooling is a very crude operation that doesn't have any, one thing you need to know, is it doesn't have any",
    "start": "1895780",
    "end": "1906480"
  },
  {
    "text": "parameters that are learnable. So you can't learn anything clever about pooling.  You're just picking, in this case",
    "start": "1906480",
    "end": "1916740"
  },
  {
    "text": "max pool, so you're picking the largest number.  So you're reducing the resolution, you're losing a lot of information.",
    "start": "1916740",
    "end": "1924840"
  },
  {
    "text": "There's an argument that you're not, you know, losing that much information as long as you're not pooling the entire",
    "start": "1925460",
    "end": "1930679"
  },
  {
    "text": "image into a single value but you're gaining training efficiency, you're gaining the memory size, reducing the size of the network.",
    "start": "1930680",
    "end": "1942460"
  },
  {
    "text": "So, it's definitely a thing that people debate and it's a parameter that you play with to see what works for you.",
    "start": "1942980",
    "end": "1950559"
  },
  {
    "start": "1952000",
    "end": "1952000"
  },
  {
    "text": "Okay, so how does this thing look like as a whole, a convolutional neural network, the input is an image",
    "start": "1953290",
    "end": "1960500"
  },
  {
    "text": "there's usually a convolutional layer, there is a pooling operation, another convolutional layer, another pooling operation and so on.",
    "start": "1961700",
    "end": "1972360"
  },
  {
    "text": "At the very end, if the task is classification you have a stack of convolutional layers and pooling layers.",
    "start": "1974370",
    "end": "1981700"
  },
  {
    "text": "There are several fully connected layers. So, you go from those spatial convolutional operations to fully connecting every single neuron in a layer to the",
    "start": "1982020",
    "end": "1994440"
  },
  {
    "text": "following layer. And you do this so that by the end, you have a collection of neurons each one is associated with a particular class.",
    "start": "1994440",
    "end": "2002919"
  },
  {
    "text": "So in what we looked at yesterday is the input, is an image of a number 0 through 9.",
    "start": "2003700",
    "end": "2010940"
  },
  {
    "text": "The output here would be 10  neurons. So you blow down that image with a collection of convolutional layers,",
    "start": "2011300",
    "end": "2021020"
  },
  {
    "text": "with 1 or 2 or 3 fully connected layers at the end that all lead to 10 neurons",
    "start": "2021840",
    "end": "2027799"
  },
  {
    "text": "and each of those neuron's job is to get fired up",
    "start": "2028320",
    "end": "2033559"
  },
  {
    "text": "when it sees a particular number and for the other ones to produce a low probability.  And so this kind of process",
    "start": "2034260",
    "end": "2042020"
  },
  {
    "text": "is how you have the 95 percentile accuracy on the CIFAR-10 problem.",
    "start": "2042620",
    "end": "2050899"
  },
  {
    "text": "This here is ImageNet data set that I mentioned.  It's how you take this image of a leopard, of a container ship,",
    "start": "2050900",
    "end": "2059359"
  },
  {
    "text": "and produce a probability that that is a container ship or a leopard.",
    "start": "2060160",
    "end": "2064139"
  },
  {
    "text": "Also shown there are the outputs of the other nearest neurons in terms of their confidence.",
    "start": "2065430",
    "end": "2072119"
  },
  {
    "start": "2077000",
    "end": "2077000"
  },
  {
    "text": "Now you can use the same exact operation by chopping off the fully connected layer at the end",
    "start": "2077300",
    "end": "2084440"
  },
  {
    "text": "and as opposed to mapping from image to a prediction of what's contained in the image, you map from the image to another image.",
    "start": "2084860",
    "end": "2093260"
  },
  {
    "text": "And you can train that image to be one that gets excited",
    "start": "2094520",
    "end": "2100640"
  },
  {
    "text": "spatially, meaning it gives you a high, close to one value, for areas of the image that contain the object of interest",
    "start": "2101720",
    "end": "2111940"
  },
  {
    "text": "and then a low number for areas of the image that are unlikely to contain that image.",
    "start": "2113380",
    "end": "2119759"
  },
  {
    "text": "And so from this you can go on the left, an original image of a woman on a horse, to a segmented image of knowing where the woman is and where the horse is",
    "start": "2120870",
    "end": "2131200"
  },
  {
    "text": "and where the background is.  The same process can be done for detecting the object.",
    "start": "2131200",
    "end": "2138829"
  },
  {
    "text": "So you can segment the scene into a bunch of interesting objects, candidates for interesting objects and then go through those candidates one by one",
    "start": "2139520",
    "end": "2153520"
  },
  {
    "text": "and perform the same kind of classification as in the previous step where it's just an input as an image and the output as a classification.",
    "start": "2153520",
    "end": "2160460"
  },
  {
    "text": "And through this process of hopping around an image, you can figure out exactly where is the best way to segment the cow",
    "start": "2161050",
    "end": "2169160"
  },
  {
    "text": "out of the image.  That's called object detection.  Okay, so",
    "start": "2169160",
    "end": "2177359"
  },
  {
    "start": "2175000",
    "end": "2175000"
  },
  {
    "text": "how can these magical convolutional neural networks help us in driving?  This is a video of the forward road way from a",
    "start": "2178230",
    "end": "2188320"
  },
  {
    "text": "data set that we'll look at, that we've collected from a Tesla.  But first let me look at driving.",
    "start": "2188320",
    "end": "2195020"
  },
  {
    "start": "2192000",
    "end": "2192000"
  },
  {
    "text": "Briefly, the general driving task from the human perspective.  On average an American driver in the United States",
    "start": "2195820",
    "end": "2207850"
  },
  {
    "text": "drives 10,000 miles a year.  A little more for rural, a little less for urban.  There is about 30,000",
    "start": "2207850",
    "end": "2218040"
  },
  {
    "text": "fatal crashes and >32,000 sometimes as high as 38,000 fatalities a year.",
    "start": "2218040",
    "end": "2226040"
  },
  {
    "text": "This includes car occupants, pedestrians, bicyclists and motorcycle riders.",
    "start": "2226790",
    "end": "2234460"
  },
  {
    "text": "This may be a surprising fact but in a class on self-driving cars we should remember that.",
    "start": "2236460",
    "end": "2245040"
  },
  {
    "text": "So ignore the 59.9%, that's other.  The most popular cars in the United States are pickup trucks:  Ford F-1 Series,",
    "start": "2245040",
    "end": "2254440"
  },
  {
    "text": "Chevy Silverado, Ram.  It's an important point that we're still married to our,",
    "start": "2254900",
    "end": "2264160"
  },
  {
    "start": "2261000",
    "end": "2261000"
  },
  {
    "text": "to wanting to be in control and so one of the interesting cars that we look at",
    "start": "2266160",
    "end": "2276200"
  },
  {
    "text": "and the car that is the days that we provide to the class is collected from is a Tesla.",
    "start": "2276980",
    "end": "2282900"
  },
  {
    "text": "It's the one that comes at the intersection of the Ford F-150 and the cute, little Google self-driving car on the right.  It's fast, it allows you to have a feeling of control",
    "start": "2283890",
    "end": "2297080"
  },
  {
    "text": "but it can also drive itself for hundreds of miles on the highway, if need be.",
    "start": "2297080",
    "end": "2302120"
  },
  {
    "text": "It allows you to press a button and the car takes over. It's a fascinating trade-off, of transferring control from the human to the car.",
    "start": "2304020",
    "end": "2313280"
  },
  {
    "text": "It's a transfer of trust and it's a chance for us to study the psychology of human beings as they relate to machines at >60 miles an hour.",
    "start": "2315290",
    "end": "2328600"
  },
  {
    "start": "2331000",
    "end": "2331000"
  },
  {
    "text": "In case you're not aware a little summary of human beings, where distracted things:  would like to text, use the smartphone,",
    "start": "2331670",
    "end": "2342220"
  },
  {
    "text": "watch videos, groom, talk to passengers, eat, drink, texting.",
    "start": "2343190",
    "end": "2351000"
  },
  {
    "text": "169 billion texts were sent in the US every single month in 2014.",
    "start": "2352380",
    "end": "2358440"
  },
  {
    "text": "On average, 5 seconds our eyes spent off the road while texting -  5 seconds.",
    "start": "2360170",
    "end": "2367760"
  },
  {
    "start": "2370000",
    "end": "2370000"
  },
  {
    "text": "That's the opportunity for automation to step in.  More than that, there's what NHTSA refers to as the 4 D's:  drunk, drugged,",
    "start": "2370360",
    "end": "2381830"
  },
  {
    "text": "distracted and drowsy. Each one of those opportunity is for automation to step in.  Drunk driving stands to benefit significantly",
    "start": "2381830",
    "end": "2393180"
  },
  {
    "start": "2391000",
    "end": "2391000"
  },
  {
    "text": "from automation, perhaps.  So the miles, let's look at the miles.  The data.  There's 3 trillion (3 million million)",
    "start": "2393710",
    "end": "2406640"
  },
  {
    "text": "3 million million miles driven every year and TESLA autopilot, our case study for this class,",
    "start": "2406640",
    "end": "2414819"
  },
  {
    "text": "and as human beings is driven on full auto-pilot mode.",
    "start": "2415080",
    "end": "2420660"
  },
  {
    "text": "So it's driving by itself 300 million miles as of December 2016",
    "start": "2420660",
    "end": "2427599"
  },
  {
    "text": "and the fatalities for human control vehicles is 1:90,000,000.",
    "start": "2428740",
    "end": "2436400"
  },
  {
    "text": "It's about >30,000 fatalities a year and currently under TESLA auto-pilot there's one fatality.",
    "start": "2436820",
    "end": "2446300"
  },
  {
    "text": "There's a lot of ways you could tear that statistic apart but it's one to think about.  Already, perhaps automation",
    "start": "2447440",
    "end": "2455319"
  },
  {
    "text": "results in safer driving.  The thing is, we don't understand automation,",
    "start": "2455700",
    "end": "2462619"
  },
  {
    "text": "because we don't have the data:  we don't have the data on the forward roadway video, we don't have the data on the driver",
    "start": "2463520",
    "end": "2472940"
  },
  {
    "text": "and we just don't have that many cars on the road today that drive themselves.  So we need a lot of data.",
    "start": "2473650",
    "end": "2480500"
  },
  {
    "text": "We'll provide some of it to you in the class and as part of our research at MIT were collecting huge amounts of it,",
    "start": "2481150",
    "end": "2489579"
  },
  {
    "text": "of cars driving themselves, and collecting that data is how we get to understanding.",
    "start": "2490200",
    "end": "2498180"
  },
  {
    "text": "So talking about the data and what we'll be doing training our algorithms on, here is a Tesla Model S, Model X",
    "start": "2498820",
    "end": "2511220"
  },
  {
    "text": "we've instrumented 17 of them, have collected over 5,000 hours and 70,000 miles.",
    "start": "2511600",
    "end": "2518120"
  },
  {
    "text": "And I'll talk about the cameras that we've put in them.  We're collecting video of the forward road way.",
    "start": "2518560",
    "end": "2528420"
  },
  {
    "text": "This is a highlight of a trip from Boston to Florida of one of the people driving a Tesla.  What's also shown in blue is the",
    "start": "2528490",
    "end": "2539230"
  },
  {
    "text": "amount of time that autopilot was engaged:  currently 0 minutes and then it grows and grows.",
    "start": "2539230",
    "end": "2546900"
  },
  {
    "text": "For prolonged periods of time, so hundreds of miles, people engage autopilot.  Out of 1.3 billion",
    "start": "2548220",
    "end": "2554160"
  },
  {
    "text": "miles driven a Tesla, 300,000,000 are on autopilot.  You do the math whatever that is, 25%.",
    "start": "2554590",
    "end": "2561960"
  },
  {
    "text": "So we are collecting data of the forward roadway, of the driver.  We have 2 cameras on the driver.",
    "start": "2564280",
    "end": "2570820"
  },
  {
    "text": "What we're providing with the class is epics of time of the forward roadway, for privacy considerations.  Cameras used",
    "start": "2571220",
    "end": "2585369"
  },
  {
    "start": "2583000",
    "end": "2583000"
  },
  {
    "text": "to record are your regular Webcam, the work horse of the computer vision community.  The C920,",
    "start": "2585370",
    "end": "2593240"
  },
  {
    "text": "and we have some special lenses on top of it. Now what's special about these webcams?  Nothing that costs $70 can be that good, right?",
    "start": "2594300",
    "end": "2603120"
  },
  {
    "text": "What's special about them is that they do onboard compression and allow you to collect huge amounts of data",
    "start": "2604180",
    "end": "2614440"
  },
  {
    "text": "and use reasonably sized storage capacity to store that data and train your algorithms on.",
    "start": "2614440",
    "end": "2622520"
  },
  {
    "start": "2622000",
    "end": "2622000"
  },
  {
    "text": "So what on the self-driving side do we have to work with?  How do we build a self-driving car?",
    "start": "2626860",
    "end": "2634720"
  },
  {
    "text": "There is these sensors:  radar, lidar, vision,",
    "start": "2635920",
    "end": "2640339"
  },
  {
    "text": "audio - all looking outside helping you detect the objects in the external environment to localize yourself and so on.",
    "start": "2641180",
    "end": "2649980"
  },
  {
    "text": "And there's the sensors facing inside:  visible light camera, audio again,",
    "start": "2650360",
    "end": "2655520"
  },
  {
    "text": "and infrared camera to help detect peoples. So we can decompose the self-driving car task into 4 steps:  localization, answering where am I; scene understanding,",
    "start": "2655860",
    "end": "2670240"
  },
  {
    "start": "2658000",
    "end": "2658000"
  },
  {
    "text": "using the texture of the information of the scene around, to interpret the identity of the different objects in the",
    "start": "2670900",
    "end": "2678700"
  },
  {
    "text": "scene and the semantic meaning of those objects, of their movement.",
    "start": "2678700",
    "end": "2685700"
  },
  {
    "text": "There's movement planning - once you figured all that out, found all the pedestrians, found all the other cars,",
    "start": "2686780",
    "end": "2693500"
  },
  {
    "text": "how do I navigate through this maze, a clutter of objects in a safe and legal way.  And there's driver state,",
    "start": "2693500",
    "end": "2704900"
  },
  {
    "text": "how do I detect using video or other information.",
    "start": "2705360",
    "end": "2708940"
  },
  {
    "text": "The video of the driver detect information about their emotional state or their distraction level.  Yes, question.",
    "start": "2710480",
    "end": "2716820"
  },
  {
    "text": "(INAUDIBLE QUESTION) Yes, that's the real-time figure from lidar.  Lidars are sensors that provides you the 3D point cloud",
    "start": "2717360",
    "end": "2730079"
  },
  {
    "text": "of the external scene.  So lidar is the technology used by",
    "start": "2731480",
    "end": "2737680"
  },
  {
    "text": "most folks working with self-driving cars to give you a strong Ground Truth of the objects.  It's probably the best sensor we have",
    "start": "2739740",
    "end": "2749480"
  },
  {
    "text": "for getting 3D information, the least noisy 3D information about the external environment.  Question.",
    "start": "2749920",
    "end": "2759540"
  },
  {
    "start": "2765000",
    "end": "2765000"
  },
  {
    "text": "So autopilot is always changing.  One of the most amazing things about this vehicle is that the updates to autopilot come in",
    "start": "2767380",
    "end": "2776539"
  },
  {
    "text": "the form of software. So the amount of time it's available to changes has become more conservative with time.",
    "start": "2777040",
    "end": "2784160"
  },
  {
    "text": "But in this, this one of the earlier versions, and it shows, the second line in yellow, shows how often autopilot was available but not turned on.",
    "start": "2785160",
    "end": "2797220"
  },
  {
    "text": "So the total driving time was 10 hours, autopilot was available 7 hours and was engaged an hour.",
    "start": "2797720",
    "end": "2804180"
  },
  {
    "text": "This particular person is a responsible driver because what you see or",
    "start": "2804180",
    "end": "2809640"
  },
  {
    "text": "is a more cautious driver.  What you see is it's raining, autopilot is still available",
    "start": "2810540",
    "end": "2816140"
  },
  {
    "text": "but- (INAUDIBLE QUESTION) the comment was that you shouldn't trust that one fatality number as an indication of safety because the drivers",
    "start": "2816620",
    "end": "2827690"
  },
  {
    "text": "elect to only engage the system when it's safe to do so.  It's a totally open,",
    "start": "2827690",
    "end": "2835339"
  },
  {
    "text": "there's a lot bigger arguments for that number than just that one, the question is whether that's a bad",
    "start": "2836260",
    "end": "2847560"
  },
  {
    "text": "thing so maybe we can trust human beings to engage, you know,",
    "start": "2847560",
    "end": "2852960"
  },
  {
    "text": "despite the poorly filmed YouTube videos, despite the hype in the media, you're still a human being.",
    "start": "2854230",
    "end": "2862020"
  },
  {
    "text": "riding 60 miles an hour in a metal box with your life on the line. You won't engage the system unless you know it's completely safe unless you've built up a relationship with it.",
    "start": "2862030",
    "end": "2874180"
  },
  {
    "text": "It's not all the stuff you see where a person gets in the back of a Tesla and start sleeping or is playing chess,",
    "start": "2874380",
    "end": "2879980"
  },
  {
    "text": "or whatever.  That's all for YouTube, the reality is when it's just you in the car",
    "start": "2880000",
    "end": "2885140"
  },
  {
    "text": "it's still your life on the line and so you're going to do the responsible thing unless perhaps you're a teenager and so on but that never changes no matter what you're in.",
    "start": "2885140",
    "end": "2893260"
  },
  {
    "text": "Question. (INAUDIBLE QUESTION) The question was:  \"what do you need to see",
    "start": "2894620",
    "end": "2899720"
  },
  {
    "text": "or sense about the external environment to be able to successfully drive?  Do you need lane markings?  Do you need other-  ",
    "start": "2899860",
    "end": "2906030"
  },
  {
    "text": "what are the landmarks based on which you do the localization and navigation?\" And that depends on the sensors.  So with the Google self-driving car in sunny California,",
    "start": "2906030",
    "end": "2917420"
  },
  {
    "text": "it depends on lidar in a high-resolution way, map the environment in order to be able to localize itself",
    "start": "2917740",
    "end": "2925760"
  },
  {
    "text": "based on lidar.  And lidar, now I don't know the details of exactly where lidar fails,",
    "start": "2926040",
    "end": "2934060"
  },
  {
    "text": "but it's not good with rain, it's not good with snow, it's not good  when the environment is changing.  So what snow does is it changes the visual, the appearance, the reflective texture",
    "start": "2934870",
    "end": "2946790"
  },
  {
    "text": "of the surfaces around.  Us human beings are still able to figure stuff out but a car that's relying heavily on lidar won't be able to localize itself using the landmarks",
    "start": "2946790",
    "end": "2958540"
  },
  {
    "text": "it previously has detected because they look different now with the snow.  Computer vision can help us with lanes",
    "start": "2958540",
    "end": "2966940"
  },
  {
    "text": "or following a car.  The two landmarks that we used in a lane is following the car in front of you",
    "start": "2967410",
    "end": "2975119"
  },
  {
    "text": "or staying between two lanes.  That's the nice thing about our roadways it's they're designed for human eyes.",
    "start": "2975120",
    "end": "2981680"
  },
  {
    "text": "So you can use computer vision for lanes and for cars in front to follow them. And there is radar.",
    "start": "2982060",
    "end": "2989800"
  },
  {
    "text": "That's a crude but a reliable source of distance information that allows you to not collide with metal objects.",
    "start": "2989820",
    "end": "2998560"
  },
  {
    "text": "So all that together depending on what you want to rely on more gives you a lot of information.",
    "start": "2998560",
    "end": "3004760"
  },
  {
    "text": "The question is when its messy complexity of real life occurs,",
    "start": "3004940",
    "end": "3013480"
  },
  {
    "text": "how reliable it would be in the urban environment and so on.  So localization-  How can deep learning help?",
    "start": "3013800",
    "end": "3026220"
  },
  {
    "text": "So first, just a quick summary of visual odometry.  It's using a monocular or stereo input of video images",
    "start": "3026220",
    "end": "3040640"
  },
  {
    "text": "to determine your orientation in the world.  The orientation, in this case, of a vehicle in the frame of the world",
    "start": "3041780",
    "end": "3051380"
  },
  {
    "text": "and all you have to work with is a video of the forward roadway",
    "start": "3052120",
    "end": "3055180"
  },
  {
    "text": "and with stereo you get a little extra information of how far away different objects are.",
    "start": "3057180",
    "end": "3063180"
  },
  {
    "start": "3066000",
    "end": "3066000"
  },
  {
    "text": "And so this is where one of our speakers on Friday will talk about his expertise (SLAM) Simultaneous Localization and Mapping.",
    "start": "3066820",
    "end": "3074820"
  },
  {
    "text": "This is a very well-studied and understood problem of detecting unique features in the external scene",
    "start": "3074820",
    "end": "3084160"
  },
  {
    "text": "and localizing yourself based on the trajectory of those unique features.",
    "start": "3085290",
    "end": "3091620"
  },
  {
    "text": "When the number of features is high enough it becomes an optimization problem.",
    "start": "3092020",
    "end": "3096460"
  },
  {
    "text": "You know this particular lane moved a little bit from frame to frame you can track that information.",
    "start": "3097140",
    "end": "3101819"
  },
  {
    "text": "And fuse everything together in order to be able to estimate your trajectory through the three dimensional space.",
    "start": "3103170",
    "end": "3109859"
  },
  {
    "text": "You also have other sensors to help you out.  You have GPS which is pretty accurate, not perfect but pretty accurate.",
    "start": "3110680",
    "end": "3119660"
  },
  {
    "text": "It's another signal to help you localize yourself. You also have IMU.  Accelerometer",
    "start": "3119660",
    "end": "3125120"
  },
  {
    "text": "tells you your acceleration, from the gyroscope, the accelerometer, you have the six degree of freedom",
    "start": "3125120",
    "end": "3135200"
  },
  {
    "text": "of movement information about how the moving object, the car, is navigating through space.",
    "start": "3135500",
    "end": "3144160"
  },
  {
    "start": "3144000",
    "end": "3144000"
  },
  {
    "text": "So you can do that using the old school way of optimization.",
    "start": "3145910",
    "end": "3154740"
  },
  {
    "text": "Given a unique set of features, like sift features, and that step involves with stereo input understorting and",
    "start": "3156030",
    "end": "3166620"
  },
  {
    "text": "and rectifying the images.  You have two images, from the two images compute the depth map but for every single pixel",
    "start": "3166620",
    "end": "3173300"
  },
  {
    "text": "computing the best estimate of the depth of that pixel, the three dimensional position, relative to the camera then you",
    "start": "3173300",
    "end": "3186340"
  },
  {
    "text": "compute, that's where you compute the disparity map, that's what that's called, from which you get the distance",
    "start": "3186340",
    "end": "3193080"
  },
  {
    "text": "then you detect unique, interesting features in the scene.  Sift is a popular one.",
    "start": "3194010",
    "end": "3199480"
  },
  {
    "text": "It's a popular algorithm for detecting unique features and you, over time, track those features.",
    "start": "3200300",
    "end": "3205700"
  },
  {
    "text": "And that tracking is what allows you through the vision alone to get information about your trajectory",
    "start": "3206160",
    "end": "3213089"
  },
  {
    "text": "through three-dimensional space.  You estimate that trajectory.  There's a lot of assumptions, assumptions that bodies are rigid.",
    "start": "3213090",
    "end": "3220660"
  },
  {
    "text": "So you have to figure out if a large object passes right in front of you, you have to figure out what that was.",
    "start": "3222630",
    "end": "3229619"
  },
  {
    "text": "You have to figure out mobile objects in the scene.  And those are the stationary.",
    "start": "3232520",
    "end": "3239100"
  },
  {
    "start": "3235000",
    "end": "3235000"
  },
  {
    "text": "Or you can cheat or we'll talk about and do it using neural networks end-to-end.",
    "start": "3240880",
    "end": "3248720"
  },
  {
    "text": "Now what does end-to-end mean?  And this will come up a bunch of times throughout this class and today.  End-to-end means,",
    "start": "3249380",
    "end": "3255920"
  },
  {
    "text": "and I refer to it as cheating because it takes away a lot of the hard work of panageneric features.  You take the raw input",
    "start": "3257000",
    "end": "3268020"
  },
  {
    "text": "of whatever sensors.  In this case, it's taking stereo input from a stereo vision cameras so two images, a sequence of two",
    "start": "3268020",
    "end": "3277580"
  },
  {
    "text": "images coming from a stereo vision camera, and the output is a estimate of your trajectory through space.",
    "start": "3277580",
    "end": "3286960"
  },
  {
    "text": "So it's supposed to be doing the hard work of SLAM, of detecting unique features, of localizing yourself, of tracking those",
    "start": "3287630",
    "end": "3293579"
  },
  {
    "text": "features and figuring out where your trajectory is.  You simply train the network.",
    "start": "3293580",
    "end": "3298300"
  },
  {
    "text": "With some Ground Truth, you have form a more accurate sensor like lidar,",
    "start": "3299780",
    "end": "3303600"
  },
  {
    "text": "and you train it on a set of inputs, the stereo vision inputs, and outputs is the trajectory through space.  You have a separate convolutional neural networks for the velocity",
    "start": "3304830",
    "end": "3317580"
  },
  {
    "text": "and for the orientation.  And this works pretty well.  Unfortunately, not quite well",
    "start": "3318020",
    "end": "3324860"
  },
  {
    "text": "and John Leonard will talk about that.  SLAM is one of the places were deep learning is not being able to outperform the",
    "start": "3325930",
    "end": "3335460"
  },
  {
    "text": "previous approaches. Where deep learning really helps is the scene understanding part.  It's interpreting the objects in the scene.",
    "start": "3335460",
    "end": "3344440"
  },
  {
    "text": "It's detecting the various parts of the scene, segmenting them",
    "start": "3345390",
    "end": "3350619"
  },
  {
    "text": "and with optical flow determining their movement.  So previous approaches for detecting objects",
    "start": "3351060",
    "end": "3358300"
  },
  {
    "start": "3353000",
    "end": "3353000"
  },
  {
    "text": "like the traffic signal, the classification of detection that we have the TensorFlow tutorial for",
    "start": "3360400",
    "end": "3368460"
  },
  {
    "text": "or to use car-like features or other types of features that are hard-engineered from the images.",
    "start": "3369100",
    "end": "3377340"
  },
  {
    "text": "Now we can use convolutional neural networks to replace the extraction of those features.",
    "start": "3378760",
    "end": "3384100"
  },
  {
    "start": "3383000",
    "end": "3383000"
  },
  {
    "text": "And there's TensorFlow implementation of SegNet which is taking the exact same neural network that I talked about.  It's the same thing, the beauty is you just apply",
    "start": "3390490",
    "end": "3404000"
  },
  {
    "text": "similar types of networks to different problems and depending on the complexity of the problem, can get quite amazing performance.  In this case, we convolutionize",
    "start": "3404280",
    "end": "3415150"
  },
  {
    "text": "network, meaning the output is an image, input is an image, a single monocular image.  The output is a",
    "start": "3415150",
    "end": "3422000"
  },
  {
    "text": "segmented image where the colors indicate your best pixel-by-pixel estimate of what object is in that part.",
    "start": "3423360",
    "end": "3430120"
  },
  {
    "text": "This is not using any spatial information, it's not using any temporal information.",
    "start": "3430480",
    "end": "3435840"
  },
  {
    "text": "So it's processing every single frame separately and it's able to separate the road from the trees,",
    "start": "3436260",
    "end": "3445000"
  },
  {
    "text": "from the pedestrians, other cars, and so on.",
    "start": "3445310",
    "end": "3449280"
  },
  {
    "text": "This is intended to lie on top of a radar / lidar type of technology that's giving you the three dimensional",
    "start": "3450710",
    "end": "3459420"
  },
  {
    "text": "or stereo vision three-dimensional information about the scene.  You're, sort of, painting that scene with the identity of",
    "start": "3459420",
    "end": "3465730"
  },
  {
    "text": "the objects that are in it, your best estimate of it. This is something I'll talk about tomorrow is recurring neural networks",
    "start": "3465730",
    "end": "3476140"
  },
  {
    "start": "3468000",
    "end": "3468000"
  },
  {
    "text": "and we can use recurring neural networks that work with temporal data to process video",
    "start": "3476340",
    "end": "3482500"
  },
  {
    "text": "and also process audio.  In this case, we can process what's shown on the bottom is",
    "start": "3482900",
    "end": "3491599"
  },
  {
    "text": " a spectrogram of audio for a wet road and a dry road. You can look at that spectrogram as an image",
    "start": "3491900",
    "end": "3500660"
  },
  {
    "text": "and process it in a temporal way using recurring neural networks.  Just slide it across and keep feeding it to a network.",
    "start": "3502700",
    "end": "3510300"
  },
  {
    "text": "And it does incredibly well on the simple tasks, certainly of dry road versus wet road.  This is important,",
    "start": "3511570",
    "end": "3519940"
  },
  {
    "text": "a subtle, but very important task and there's many like it to know the road, the texture, the quality.,",
    "start": "3519940",
    "end": "3529700"
  },
  {
    "text": "the characteristics of the road, wetness being a critical one. When it's not raining but the road is still wet, that information is very important.",
    "start": "3530440",
    "end": "3537819"
  },
  {
    "text": "Okay, so for movement planning.  The same kind of approach.  On the right is work from one of our other speakers",
    "start": "3540800",
    "end": "3553200"
  },
  {
    "start": "3542000",
    "end": "3542000"
  },
  {
    "text": "Sertec Karaman.  The same approach we're using to solve traffic through friendly competition",
    "start": "3553200",
    "end": "3562619"
  },
  {
    "text": "is the same that we can use for what Chris Gerdes does with his race cars for planning trajectories in high speed movement",
    "start": "3563060",
    "end": "3572780"
  },
  {
    "text": "along complex curve.",
    "start": "3573140",
    "end": "3577960"
  },
  {
    "text": "So we can solve that problem using optimization, solve the control problem using optimization,",
    "start": "3580430",
    "end": "3586700"
  },
  {
    "text": "or we can use it with reinforcement learning by running tens of millions, hundreds of millions of times through that simulation of taking that curve",
    "start": "3586940",
    "end": "3596079"
  },
  {
    "text": "and learning which trajectory doesn't both optimizes the speed at which you take the turn",
    "start": "3596520",
    "end": "3603180"
  },
  {
    "text": "and the safety of the vehicle.  Exactly the same thing that you're using for traffic.",
    "start": "3603180",
    "end": "3610940"
  },
  {
    "text": "And for driver state, this is what will talk about next week.  It's all the fun face stuff:  eyes, face, emotion.",
    "start": "3612690",
    "end": "3619740"
  },
  {
    "text": "This is with video of the driver, video of the driver's body, video the driver's face.  On the left is one of the TAs",
    "start": "3621490",
    "end": "3629900"
  },
  {
    "text": "in his younger days.  Still looks the same.  There he is.  So in that particular case,",
    "start": "3630220",
    "end": "3642980"
  },
  {
    "text": "you're doing one of the easier problems which is one of detecting where the head and the eyes are positioned.",
    "start": "3643780",
    "end": "3651740"
  },
  {
    "text": "The head and eye pose.  You know it determine what's called he gaze of the driver, where the driver's looking, glance.  And so,",
    "start": "3651920",
    "end": "3661760"
  },
  {
    "text": "we'll talk about these problems.  From the left to the right:  on the left in green are the easier problems; on the red",
    "start": "3661760",
    "end": "3669770"
  },
  {
    "text": "are the harder from the computer vision aspect. So on the left is body pose, head pose.  The larger the object the easier it is the detect",
    "start": "3669770",
    "end": "3678200"
  },
  {
    "text": "and the orientation of it is easier to detect. And then there is pupil diameter.  Detecting the pupil, the characteristics, the position, the size of the pupil.",
    "start": "3678200",
    "end": "3688760"
  },
  {
    "text": "And there's micro saccade, things that happen at one millisecond frequency, the tremors of the eye.  All important information to determine the state of the driver.",
    "start": "3689280",
    "end": "3701119"
  },
  {
    "text": "Some are possible computer vision, some are not.  This is something that we'll talk about, I think, on Thursday.",
    "start": "3701980",
    "end": "3711500"
  },
  {
    "text": "Is the detection of where the driver's looking.  So, this is a bunch of the cameras that we have in the Tesla.  This is",
    "start": "3712340",
    "end": "3718600"
  },
  {
    "text": "This is Dan driving a Tesla and detecting exactly where of one of six regions",
    "start": "3718600",
    "end": "3725100"
  },
  {
    "text": "We've converted into a classification problem of left, right, rear view mirror instrument cluster center stack",
    "start": "3725160",
    "end": "3732030"
  },
  {
    "text": "or forward roadway. So we have to determine out of those six categories which direction is the driver looking at.  This is important for driving.  We don't care exactly the X, Y, Z",
    "start": "3732030",
    "end": "3743380"
  },
  {
    "text": "position of where the driver is looking at.  We care that they're looking at the road or not. Are they looking at their cell phone in their lap or are they looking at the forward roadway?",
    "start": "3743380",
    "end": "3751060"
  },
  {
    "text": "And we'll be able to answer that pretty effectively using convolutional neural networks.",
    "start": "3751220",
    "end": "3755400"
  },
  {
    "text": "You can also look at emotion using CNNs to extract,",
    "start": "3765360",
    "end": "3771280"
  },
  {
    "text": "again converting emotion, the complex world of emotion, into a binary problem of frustrated versus satisfied.",
    "start": "3772860",
    "end": "3780520"
  },
  {
    "text": "This is the video of drivers interacting with a voice navigation system.  If you've ever used one,",
    "start": "3782040",
    "end": "3788270"
  },
  {
    "text": "you know that may be a source of frustration from folks. And so this is self reported, this is one of the hard, you know, driver",
    "start": "3788270",
    "end": "3796180"
  },
  {
    "text": "emotion if you're in what's called \"Effective Computing.\"  It's the field of studying emotion from the computational side.",
    "start": "3796180",
    "end": "3803960"
  },
  {
    "text": "If you work in that field, you know that the annotation side of emotion is really challenging one.",
    "start": "3805760",
    "end": "3812560"
  },
  {
    "text": "So getting the Ground Truth of, well okay since this guy's smiling",
    "start": "3812560",
    "end": "3816720"
  },
  {
    "text": "so can I label that as happy or he's frowning because that mean he's sad.  Most effective computing folks do just that.",
    "start": "3817620",
    "end": "3825260"
  },
  {
    "text": "In this case we self report ask people how frustrated they're were in a scale of 1 to 10.",
    "start": "3826240",
    "end": "3832520"
  },
  {
    "text": "Dan up top reported a \"1\" for not frustrated, he's satisfied with the interaction,",
    "start": "3833180",
    "end": "3840059"
  },
  {
    "text": "and the other driver reported as a \"9\" he was very frustrated with the interaction.  And what you notice",
    "start": "3840440",
    "end": "3846319"
  },
  {
    "text": "is there is a very cold, stoic look on Dan's face which is an indication of happiness.",
    "start": "3846530",
    "end": "3851900"
  },
  {
    "text": "And in the case of frustration, the driver is smiling.",
    "start": "3852900",
    "end": "3858000"
  },
  {
    "text": "So this is a sort of a good reminder that we can't trust our own human instincts.",
    "start": "3858580",
    "end": "3864180"
  },
  {
    "text": "It's an engineering feature.  Engineering the ground truth.  We have to trust the data, trust the Ground Truth",
    "start": "3864180",
    "end": "3874119"
  },
  {
    "text": "that we believe is the closest reflection of the actual semantics of what's going on in the scene.",
    "start": "3874580",
    "end": "3879920"
  },
  {
    "text": "Okay, so end-to-end driving.  Getting to the the project and the tutorial.",
    "start": "3884600",
    "end": "3889460"
  },
  {
    "text": "So if driving is like a conversation and, thank you for someone to clarifying, that this is the Arch of Triumph",
    "start": "3889960",
    "end": "3904599"
  },
  {
    "text": "in Paris in this video. If driving is like a natural language conversation, then we can think of end-to-end driving as skipping the entire Turing Test",
    "start": "3904600",
    "end": "3918820"
  },
  {
    "text": "components and treating it as an end-to-end natural language generation.",
    "start": "3918820",
    "end": "3923960"
  },
  {
    "text": "So what we do is we take as input the external sensors",
    "start": "3924570",
    "end": "3929340"
  },
  {
    "text": "and output, the control of the vehicle.  And the magic happens in the middle.",
    "start": "3929800",
    "end": "3936300"
  },
  {
    "text": "We replace that entire step with a neural network.",
    "start": "3938050",
    "end": "3941840"
  },
  {
    "text": "TAs told me to not include this image because it's the cheesiest we've ever seen.  I apologize.  Thank you, thank you.",
    "start": "3943310",
    "end": "3953380"
  },
  {
    "text": "I regret nothing. So this is to show our path to self-driving cars",
    "start": "3956720",
    "end": "3966240"
  },
  {
    "text": "but it still explain a point that we have a large data set of Ground Truth.",
    "start": "3966240",
    "end": "3972140"
  },
  {
    "text": "If we were to formulate the driving task to simply taking external images",
    "start": "3973000",
    "end": "3977120"
  },
  {
    "text": "and producing steering commands, acceleration of braking commands, then we have a lot of Ground Truth.",
    "start": "3978220",
    "end": "3984780"
  },
  {
    "text": "We have a large number of drivers on the road every day driving",
    "start": "3985280",
    "end": "3991800"
  },
  {
    "text": "and, therefore, collecting our Ground Truth for us because they're an interested party in producing the steering commands",
    "start": "3991980",
    "end": "3998359"
  },
  {
    "text": "that keep them alive and, therefore, if we were to record that data it becomes Ground Truth.",
    "start": "3998580",
    "end": "4004280"
  },
  {
    "text": "So if it's possible to learn this, what we can do is we can collect data for the manually controlled vehicles",
    "start": "4004760",
    "end": "4010680"
  },
  {
    "text": "and use that data to train an algorithm to control a self-driving vehicle.",
    "start": "4010920",
    "end": "4018359"
  },
  {
    "text": "Okay, so one of the first folks who did this is Nvidia where they actually train in an external image, the image of the forward roadway.",
    "start": "4021060",
    "end": "4029680"
  },
  {
    "text": "and a neural network, a convolutional network, a simple vanilla convolutional neural network I'll briefly outline:",
    "start": "4030760",
    "end": "4037900"
  },
  {
    "text": "take an image in, produce a steering command out and they're able to successfully, to some degree, learn to navigate basic turns, curves and even stop",
    "start": "4038900",
    "end": "4053960"
  },
  {
    "text": "or make sharp turns at a keener section.  So this this now work is simple.",
    "start": "4053960",
    "end": "4062560"
  },
  {
    "text": "There is input on the bottom, output up top.  The input is a 66x200 pixel image, RGB.",
    "start": "4063000",
    "end": "4071300"
  },
  {
    "text": "Shown on the left is the raw input and then you crop it a little bit and resize it down",
    "start": "4074020",
    "end": "4078560"
  },
  {
    "text": "66x200.   That's what we have in the code as well in the two versions of the code we'll provide to you.",
    "start": "4079380",
    "end": "4087519"
  },
  {
    "text": "Both that runs in the browser and in TensorFlow.  It has a few layers.  A few convolutional layers, a few fully connected layers.",
    "start": "4087700",
    "end": "4099560"
  },
  {
    "text": "And an output.  This is a regression network. It's producing not a classification of cat versus dog, it's producing a steering command.",
    "start": "4100200",
    "end": "4109060"
  },
  {
    "text": "How do I turn the steering wheel?  That's it.  The rest is magic and we train it on a human input.",
    "start": "4109300",
    "end": "4119040"
  },
  {
    "text": "What we have here is a project, is an implementation of the system in ConvNetJS that runs in your browser.",
    "start": "4124890",
    "end": "4133580"
  },
  {
    "text": "This is the tutorial to follow and the project to take on.  So unlike the DeepTraffic game, this is reality.",
    "start": "4134080",
    "end": "4147220"
  },
  {
    "text": "This is a real input from real vehicles. So you can go to this link.  Demo went wonderfully yesterday so let's see, maybe two for two.",
    "start": "4147560",
    "end": "4161080"
  },
  {
    "text": "There's the tutorial and then the actual game, the actual simulation is on DeepTesla.JS, I apologize.",
    "start": "4172880",
    "end": "4179900"
  },
  {
    "text": "Everyone is going there now, aren't they?  Does it work on a phone?  It does, great.",
    "start": "4186680",
    "end": "4193760"
  },
  {
    "text": "Again similar structure up top is the visualization of the lost function as the network is learning",
    "start": "4197740",
    "end": "4206580"
  },
  {
    "text": "and it's always training.",
    "start": "4206780",
    "end": "4208059"
  },
  {
    "text": "Next is the input for the layout of the network, there's the specification of the input 200x66.",
    "start": "4212880",
    "end": "4221020"
  },
  {
    "text": "There's a convolutional layer. There's a pooling layer and the output is a regression layer.  A single neuron.",
    "start": "4222680",
    "end": "4230800"
  },
  {
    "text": "This is a tiny version, DeepTiny, right?  It's a tiny version of",
    "start": "4231430",
    "end": "4238580"
  },
  {
    "text": "the Nvidia architecture and then you can visualize the operation of this network on real video.",
    "start": "4240180",
    "end": "4249980"
  },
  {
    "text": "The actual wheel value that produced by the driver, by the autopilot system,",
    "start": "4253480",
    "end": "4259380"
  },
  {
    "text": "is in blue and the output of the network is in white.",
    "start": "4260780",
    "end": "4264059"
  },
  {
    "text": "And what's indicated by green is the cropping of the image that is then resized to produce the 66x200",
    "start": "4268980",
    "end": "4278380"
  },
  {
    "text": "input to the network.  So once again, amazingly, this is running in your browser, training on real world video.",
    "start": "4278380",
    "end": "4289020"
  },
  {
    "text": "So you can get in your car today input it and maybe teach a neural network to drive like you.",
    "start": "4289620",
    "end": "4295100"
  },
  {
    "text": "We have the code in ConvNetJS and TensorFlow to do that and the tutorial.  Well, let me briefly describe some of the work here.",
    "start": "4296050",
    "end": "4309480"
  },
  {
    "text": "So the input to the network as a single image. This is for DeepTesla.JS, single image and the output is a steering wheel value between -20 and 20.",
    "start": "4310910",
    "end": "4322000"
  },
  {
    "text": "That's in degrees.  We record,",
    "start": "4322280",
    "end": "4327300"
  },
  {
    "text": "like I said, thousands of hours but we provide publicly 10 video clips of highway driving from a Tesla.",
    "start": "4328750",
    "end": "4336280"
  },
  {
    "text": "Half are driven by autopilot, half are driven by human.  The wheel values extracted from a perfectly synchronized",
    "start": "4337290",
    "end": "4347680"
  },
  {
    "text": "CAN, we are collecting all of the messages from CAN, which contains steering wheel value and that's synchronized to the video.  We crop, extract the window.  The green one I mentioned.",
    "start": "4349390",
    "end": "4360840"
  },
  {
    "text": "And then provide that as input to the network. So this is a slight difference from DeepTraffic with the red car weaving through traffic because there is the messy",
    "start": "4362460",
    "end": "4373030"
  },
  {
    "text": "reality of real world lighting conditions. And your task for the most part, in this simple steering task, is to stay inside the lane,",
    "start": "4373030",
    "end": "4384740"
  },
  {
    "text": "inside the lane markings.  In an end-to-end way, learn to do just that.  So ConvNetJS",
    "start": "4385400",
    "end": "4394310"
  },
  {
    "text": "is a javascript implementation of CNNs, of convolutional neural networks.  It supports really arbitrary networks.",
    "start": "4394310",
    "end": "4405400"
  },
  {
    "text": "I mean all neural networks are simple but because it runs in javascript it's not utilizing GPU.",
    "start": "4406200",
    "end": "4412200"
  },
  {
    "text": "The larger the network the more it's going to be weighed down computationally.",
    "start": "4413020",
    "end": "4419280"
  },
  {
    "text": "Now unlike DeepTraffic, this isn't a competition but if you are a student registered for the course you still do have to submit the code, you still have to submit your own",
    "start": "4420600",
    "end": "4430840"
  },
  {
    "text": "car as part of the class.  Question.  So the question was the amount of data that's needed.",
    "start": "4430840",
    "end": "4441800"
  },
  {
    "text": "Is there a general rules of thumb for the amount of data needed for a particular task in driving for example?",
    "start": "4443680",
    "end": "4450380"
  },
  {
    "text": "It's a good question. You generally have to, like I said, neural networks are good memorizers so you have to just have every case represented in the",
    "start": "4451570",
    "end": "4463239"
  },
  {
    "text": "training said that you're interested in.  As much as possible, so that means, in general if you want a picture, if you want to",
    "start": "4463240",
    "end": "4472160"
  },
  {
    "text": "classify the difference between cats and dogs, you want to have at least a thousand cats and a thousand dogs",
    "start": "4472160",
    "end": "4477190"
  },
  {
    "text": "and they do really well.  The problem with driving is twofold:  one, is that most of the time driving looks the same.",
    "start": "4477190",
    "end": "4486739"
  },
  {
    "text": "And the stuff you really care about is when driving looks different.  It's all the edge cases. So we're not good with neural networks is generalizing from the common case to the edge cases, to the outliers.",
    "start": "4487380",
    "end": "4499880"
  },
  {
    "text": "So avoiding a crash just because you can stand the highway for thousands of hours successfully doesn't mean you can avoid a crash with",
    "start": "4500670",
    "end": "4507699"
  },
  {
    "text": "somebody runs in front of you on the road and the other part with driving is the accuracy you have to achieve is really high.  So for cat versus dog,",
    "start": "4507700",
    "end": "4520119"
  },
  {
    "text": "No, life doesn't depend on your error.  On your ability to steer a car inside of the lane.",
    "start": "4520360",
    "end": "4528380"
  },
  {
    "text": "You better be very close to 100% accurate. There's a box for designing the network.",
    "start": "4528740",
    "end": "4536120"
  },
  {
    "text": "There's a visualization of the metrics measuring the performance of the network as it trains.",
    "start": "4536870",
    "end": "4541400"
  },
  {
    "text": "There is a visualization, layer visualization, of what features the network is extracting at every convolutional layer",
    "start": "4542060",
    "end": "4550960"
  },
  {
    "text": "and every fully connected layer.  There is ability to restart the training.",
    "start": "4551120",
    "end": "4558800"
  },
  {
    "text": "Visualize the network performing on real video.  There is the input layer, the convolutional layers.",
    "start": "4559610",
    "end": "4575300"
  },
  {
    "text": "The video visualization, an interesting tidbit on the bottom right is a barcode that Will has ingeniously designed.",
    "start": "4579980",
    "end": "4593600"
  },
  {
    "text": "How do I clearly explain why this is so cool? It's a way to through video synchronized multiple streams of data together,",
    "start": "4596460",
    "end": "4607460"
  },
  {
    "text": "so it's very easy for those who have worked with multi-modal data where there are several streams of data",
    "start": "4607980",
    "end": "4613640"
  },
  {
    "text": "for them to become unsynchronized especially when a big component of training a neural network is shuffling the data.",
    "start": "4613960",
    "end": "4621580"
  },
  {
    "text": "So you have to shuffle the data in clever ways so you're not overfitting any one little aspect of the video and yet maintain the data perfectly synchronized.",
    "start": "4622000",
    "end": "4631000"
  },
  {
    "text": "So what he did instead doing the hard work of connecting the steering wheel and in the video is actually putting the steering on top of the video as a barcode.",
    "start": "4631540",
    "end": "4643300"
  },
  {
    "text": "The final result is you can watch the network operate and over time it learns more and more to steer correctly.",
    "start": "4645400",
    "end": "4656679"
  },
  {
    "text": "I'll fly through this a little bit in the interest of time just kind of summarize some of the things that you can play with in terms of tutorials and let you guys go.  This is the same kind of process end-to-end driving with",
    "start": "4657000",
    "end": "4669580"
  },
  {
    "text": "So we have code available on GetHub.  You just put up on my GetHub and the DeepTesla.",
    "start": "4669960",
    "end": "4677360"
  },
  {
    "text": "That takes in a single video or an arbitrary number of videos trains on them",
    "start": "4677760",
    "end": "4683320"
  },
  {
    "text": "and produces a visualization that compares the steering wheel, the actual steering wheel and the predicted steering wheel.",
    "start": "4683860",
    "end": "4689820"
  },
  {
    "text": "The steering wheel, when it agrees with the human driver or the autopilot system lighting up as green",
    "start": "4691060",
    "end": "4696260"
  },
  {
    "text": "and when it disagrees, lighting up as red.  Hopefully not too often.",
    "start": "4696260",
    "end": "4700320"
  },
  {
    "text": "Again, this is some of the details of how that's exactly done in TensorFlow.",
    "start": "4701480",
    "end": "4706160"
  },
  {
    "text": "This is vanilla convolution neural networks. Specifying a bunch of layers, convolutional layers, a fully connected layer, train the model, so you iterate over the batches of images.",
    "start": "4706500",
    "end": "4719060"
  },
  {
    "text": "Run the model over a test set of images and get this result.  We have a tutorial",
    "start": "4722420",
    "end": "4733960"
  },
  {
    "text": "on iPython Notebook into the tutorial up on this. This is perhaps the best way to get started with convolutional neural networks in terms of our class.  It's looking at the",
    "start": "4735720",
    "end": "4746020"
  },
  {
    "text": "simplest image classification problem, of traffic light classification.  So we have these images of traffic lights.",
    "start": "4746280",
    "end": "4754020"
  },
  {
    "text": "We did the hard work of detecting them for you. So now you have to figure out, you have to build the convolutional network that gets",
    "start": "4754930",
    "end": "4762800"
  },
  {
    "text": "figures out the concept of color and gets excited when it sees red, yellow or green.  If anyone has questions,",
    "start": "4764800",
    "end": "4773460"
  },
  {
    "text": "I'll welcome those.  You can stay after class if you have any concerns with Docker,",
    "start": "4774260",
    "end": "4779599"
  },
  {
    "text": "with TensorFlow, with how to win DeepTraffic.  Just stay after class or come by Friday, 5 to 7.  See you guys tomorrow.",
    "start": "4779900",
    "end": "4790520"
  }
]