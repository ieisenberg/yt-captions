[
  {
    "start": "0",
    "end": "59000"
  },
  {
    "text": "- The following is a conversation with the founding members\nof the Cursor Team, Michael Truell, Sualeh\nAsif, Arvid Lunnemark,",
    "start": "90",
    "end": "8010"
  },
  {
    "text": "and Aman Sanger. Cursor is a code editor based on VS Code",
    "start": "8010",
    "end": "14309"
  },
  {
    "text": "that adds a lot of powerful\nfeatures for AI-assisted coding. It has captivated the\nattention and excitement",
    "start": "14310",
    "end": "21060"
  },
  {
    "text": "of the programming and AI communities. So I thought, this is\nan excellent opportunity",
    "start": "21060",
    "end": "26790"
  },
  {
    "text": "to dive deep into the\nrole of AI in programming. This is a super technical conversation",
    "start": "26790",
    "end": "33090"
  },
  {
    "text": "that is bigger than just\nabout one code editor. It's about the future of programming,",
    "start": "33090",
    "end": "38460"
  },
  {
    "text": "and in general, the future\nof human AI collaboration in designing and engineering complicated",
    "start": "38460",
    "end": "45030"
  },
  {
    "text": "and powerful systems. This is the \"Lex Fridman Podcast.\" To support it, please check out our\nsponsors in the description.",
    "start": "45030",
    "end": "52170"
  },
  {
    "text": "And now, dear friends, here's Michael, Sualeh, Arvid and Aman.",
    "start": "52170",
    "end": "58053"
  },
  {
    "start": "59000",
    "end": "189000"
  },
  {
    "text": "All right, this is awesome. We have Michael, Aman, Sualeh, Arvid here from the Cursor Team.",
    "start": "59130",
    "end": "64920"
  },
  {
    "text": "First up, big ridiculous question. What's the point of a code editor?",
    "start": "64920",
    "end": "70200"
  },
  {
    "text": "- So the code editor is largely the place where you build software. And today or for a long\ntime, that's meant the place",
    "start": "70200",
    "end": "77670"
  },
  {
    "text": "where you text edit a\nformal programming language. And for people who aren't programmers,",
    "start": "77670",
    "end": "82740"
  },
  {
    "text": "the way to think of a code editor is a really souped up word\nprocessor for programmers, where the reason it's souped up",
    "start": "82740",
    "end": "89010"
  },
  {
    "text": "is code has a lot of structure. And so the, quote,\nunquote, \"word processor,\"",
    "start": "89010",
    "end": "94320"
  },
  {
    "text": "the code editor can\nactually do a lot for you that word processors in the writing space",
    "start": "94320",
    "end": "99750"
  },
  {
    "text": "haven't been able to do for\npeople editing texts there. And so that's everything from giving you visual differentiation",
    "start": "99750",
    "end": "105630"
  },
  {
    "text": "of the actual tokens in the\ncode so you can scan it quickly, to letting you navigate\naround the code base,",
    "start": "105630",
    "end": "111300"
  },
  {
    "text": "like you're navigating around\nthe internet with hyperlinks, you're going to definitions\nof things you're using to error checking to\ncatch rudimentary bugs.",
    "start": "111300",
    "end": "120273"
  },
  {
    "text": "And so traditionally, that's\nwhat a code editor has meant. And I think that what a code editor is,",
    "start": "122340",
    "end": "130050"
  },
  {
    "text": "is going to change a lot\nover the next 10 years as what it means to build software maybe starts to look a bit different.",
    "start": "130050",
    "end": "136800"
  },
  {
    "text": "- I think also a code\neditor should just be fun. - Yes, that is very important,\nthat is very important.",
    "start": "136800",
    "end": "142230"
  },
  {
    "text": "And it's actually an underrated aspect of how we decide what to build.",
    "start": "142230",
    "end": "147363"
  },
  {
    "text": "A lot of the things that we\nbuild and then we try them out, we do an experiment and then\nwe actually throw them out",
    "start": "148200",
    "end": "155340"
  },
  {
    "text": "because they're not fun. And so, a big part of being fun is being fast a lot of the time.",
    "start": "155340",
    "end": "161580"
  },
  {
    "text": "Fast is fun. - Yeah, fast is. (chuckles) Yeah, that should be a T-shirt.",
    "start": "161580",
    "end": "167390"
  },
  {
    "text": "(group chuckling) - Fundamentally, I think one of the things that draws a lot of people to\nbuilding stuff on computers",
    "start": "167391",
    "end": "173670"
  },
  {
    "text": "is this insane iteration speed, where in other disciplines\nyou might be gate capped by resources or the ability.",
    "start": "173670",
    "end": "181140"
  },
  {
    "text": "Even the ability to get\na large group together and coding is this amazing thing where it's you and the\ncomputer and that alone,",
    "start": "181140",
    "end": "187739"
  },
  {
    "text": "you can build really cool\nstuff really quickly. - So for people who don't know, Cursor is this super cool new editor",
    "start": "187740",
    "end": "194760"
  },
  {
    "start": "189000",
    "end": "627000"
  },
  {
    "text": "that's a fork of VS Code. It would be interesting\nto get your explanation",
    "start": "194760",
    "end": "200250"
  },
  {
    "text": "of your own journey of editors. I think all of you were big\nfans of VS Code with Copilot.",
    "start": "200250",
    "end": "208130"
  },
  {
    "text": "How did you arrive to VS Code and how did that lead to\nyour journey with Cursor? - Yeah, so I think a lot of us,",
    "start": "208200",
    "end": "217650"
  },
  {
    "text": "well, all of us were originally Vim users. - Pure Vim.\n- Pure Vim, yeah. No Neovim, just pure Vim and a terminal.",
    "start": "217650",
    "end": "224190"
  },
  {
    "text": "And at least for myself, it was around the time\nthat Copilot came out,",
    "start": "224190",
    "end": "230250"
  },
  {
    "text": "so 2021 that I really wanted to try it.",
    "start": "230250",
    "end": "235250"
  },
  {
    "text": "So, I went into VS Code, the only code editor in\nwhich it was available, and even though I really\nenjoyed using Vim,",
    "start": "235290",
    "end": "244680"
  },
  {
    "text": "just the experience of\nCopilot with VS Code was more than good enough\nto convince me to switch.",
    "start": "244680",
    "end": "250830"
  },
  {
    "text": "And so that kind of was the default until we started working on Cursor. - And maybe we should\nexplain what Copilot does.",
    "start": "250830",
    "end": "257370"
  },
  {
    "text": "It's a really nice auto complete. As you start writing a thing, it suggests one or two or three lines",
    "start": "257370",
    "end": "264270"
  },
  {
    "text": "how to complete the thing. And there's a fun experience in that. You know like when you\nhave a close friendship",
    "start": "264270",
    "end": "271200"
  },
  {
    "text": "and your friend completes your sentences? (group chuckles) When it's done well,\nthere's an intimate feeling.",
    "start": "271200",
    "end": "277290"
  },
  {
    "text": "There's probably a better\nword than intimate, but there's a cool feeling of\nlike, \"Holy shit, it gets me.\"",
    "start": "277290",
    "end": "283306"
  },
  {
    "text": "(all chuckles) And then, there's an unpleasant feeling when it doesn't get you. And so, there's that kind of friction.",
    "start": "283306",
    "end": "290610"
  },
  {
    "text": "But I would say for a lot of people, the feeling that it gets me\noverpowers that it doesn't. - And, I think, actually one\nof the underrated aspects",
    "start": "290610",
    "end": "297060"
  },
  {
    "text": "of Github Copilot is that\neven when it's wrong, it's a little bit annoying,\nbut it's not that bad because you just type another character,",
    "start": "297060",
    "end": "304199"
  },
  {
    "text": "and then maybe then it gets you, or you type another character\nand then it gets you. So even when it's wrong,\nit's not that bad.",
    "start": "304200",
    "end": "309450"
  },
  {
    "text": "- Yeah, you can iterate and fix it. I mean, the other underrated\npart of Copilot for me",
    "start": "309450",
    "end": "315300"
  },
  {
    "text": "was just the first real AI product. So the first language\nmodel consumer product.",
    "start": "315300",
    "end": "321450"
  },
  {
    "text": "- So, Copilot was like\nthe first killer app for LLMs.\n- Yeah. - Yeah, and the beta was out in 2021.",
    "start": "321450",
    "end": "329040"
  },
  {
    "text": "- Right, okay. So, what's the origin story of Cursor?",
    "start": "329040",
    "end": "334140"
  },
  {
    "text": "- So around 2020, the scaling loss papers\ncame out from OpenAI, and that was a moment",
    "start": "334140",
    "end": "340230"
  },
  {
    "text": "where this looked like\nclear predictable progress for the field where even if\nwe didn't have any more ideas,",
    "start": "340230",
    "end": "346050"
  },
  {
    "text": "it looked like you could make\nthese models a lot better if you had more compute and more data. - By the way, we'll probably\ntalk for three to four hours",
    "start": "346050",
    "end": "353729"
  },
  {
    "text": "on the topic of scaling loss. (group chuckling) But just to summarize, it's a paper in a set of\npapers in a set of ideas",
    "start": "353730",
    "end": "360240"
  },
  {
    "text": "that say bigger might be better for model size and data size in the realm of machine learning.",
    "start": "360240",
    "end": "365699"
  },
  {
    "text": "- It's bigger and better,\nbut predictably better. - Okay, that's another\ntopic of conversation. - Yes.\n- Yeah.",
    "start": "365700",
    "end": "371453"
  },
  {
    "text": "- So around that time for some of us, there were a lot of\nconceptual conversations about what's this gonna look like?",
    "start": "371453",
    "end": "377280"
  },
  {
    "text": "What's the story gonna be for all these different\nknowledge worker fields about how they're gonna be made better",
    "start": "377280",
    "end": "383190"
  },
  {
    "text": "by this technology getting better? And then, I think, there\nwere a couple of moments where the theoretical gains predicted",
    "start": "383190",
    "end": "390060"
  },
  {
    "text": "in that paper started\nto feel really concrete, and it started to feel like a moment where you could actually\ngo and not do a PhD",
    "start": "390060",
    "end": "397050"
  },
  {
    "text": "if you wanted to do useful work in AI. It actually felt like now\nthere was this whole set",
    "start": "397050",
    "end": "402180"
  },
  {
    "text": "of systems one could build\nthat were really useful. And I think that the first moment we already talked about a little bit, which was playing with\nthe early beta of Copilot,",
    "start": "402180",
    "end": "408960"
  },
  {
    "text": "that was awesome and magical. I think that the next big moment where everything kind of clicked together",
    "start": "408960",
    "end": "415290"
  },
  {
    "text": "was actually getting\nearly access to GPT-4. So, it was sort of end of 2022 was when we were\ntinkering with that model,",
    "start": "415290",
    "end": "422400"
  },
  {
    "text": "and the step-upping\ncapabilities felt enormous. And previous to that, we had been working on a\ncouple of different projects.",
    "start": "422400",
    "end": "429257"
  },
  {
    "text": "Because of Copilot,\nbecause of scaling odds, because of our prior\ninterest in the technology, we had been tinkering around\nwith tools for programmers,",
    "start": "430680",
    "end": "438870"
  },
  {
    "text": "but things that are very specific. So, we were building tools\nfor financial professionals",
    "start": "438870",
    "end": "444539"
  },
  {
    "text": "who have to work within a Jupyter Notebook or playing around with can you do static analysis\nwith these models? And then, the step-up in GPT-4 felt like,",
    "start": "444540",
    "end": "451230"
  },
  {
    "text": "look, that really made\nconcrete the theoretical gains that we had predicted before.",
    "start": "451230",
    "end": "457290"
  },
  {
    "text": "It felt like you could build\na lot more just immediately at that point in time. And also, if we were being\nconsistent, it really felt like",
    "start": "457290",
    "end": "465950"
  },
  {
    "text": "this wasn't just gonna be\na point solution thing. This was gonna be all of\nprogramming was gonna flow through these models. And it felt like that\ndemanded a different type",
    "start": "466530",
    "end": "473069"
  },
  {
    "text": "of programming environment, a\ndifferent type of programming. And so, we set off to build\nthat larger vision around then.",
    "start": "473070",
    "end": "479910"
  },
  {
    "text": "- There's one that I distinctly remember. So, my roommate is an IMO Gold winner",
    "start": "479910",
    "end": "485190"
  },
  {
    "text": "and there's a competition\nin the US called the PUTNAM, which is the IMO for college people, and it's this math competition.",
    "start": "485190",
    "end": "492330"
  },
  {
    "text": "It's exceptionally good. So, Shengtong and Aman I\nremember, sort of June of 2022,",
    "start": "492330",
    "end": "499190"
  },
  {
    "text": "had this bet on whether\nthe 2024 June or July,",
    "start": "501720",
    "end": "506720"
  },
  {
    "text": "you were going to win a gold\nmedal in the IMO with models. - IMO is the International Math Olympiad.",
    "start": "507180",
    "end": "513570"
  },
  {
    "text": "- Yeah, IMO is\nInternational Math Olympiad. And so, Arvid and I are\nboth also competing in it.",
    "start": "513570",
    "end": "518819"
  },
  {
    "text": "So, it was sort of personal. (group chuckling) And I remember thinking, \"Matt,\nthis is not gonna happen.\"",
    "start": "518820",
    "end": "527523"
  },
  {
    "text": "Even though I sort of\nbelieved in progress, I thought IMO Gold, Aman is delusional.",
    "start": "528990",
    "end": "535803"
  },
  {
    "text": "And to be honest, I mean, I\nwas, to be clear, very wrong. But that was maybe the most\nprescient bet in the group.",
    "start": "537180",
    "end": "545370"
  },
  {
    "text": "- So the new results from DeepMind, it turned out that you were correct.",
    "start": "545370",
    "end": "550698"
  },
  {
    "text": "(group chattering) - [Arvid] Technically not. - Technically incorrect\nbut one point away. - Aman was very enthusiastic\nabout this stuff back then.",
    "start": "550698",
    "end": "557960"
  },
  {
    "text": "And before, Aman had\nthis scaling loss T-shirt that he would wear around where it had the charts\nand the formulas on it.",
    "start": "557960",
    "end": "565200"
  },
  {
    "text": "- So, you felt the AGI or\nyou felt the scaling loss. - Yeah, I distinctly remember there was this one\nconversation I had with Michael",
    "start": "565200",
    "end": "573670"
  },
  {
    "text": "before I hadn't thought super deeply and critically about scaling laws. And he kind of posed the question,",
    "start": "574650",
    "end": "580560"
  },
  {
    "text": "why isn't scaling all you need, or why isn't scaling gonna result in massive gains in progress?",
    "start": "580560",
    "end": "586077"
  },
  {
    "text": "And I think I went through\nthe stages of grief. There is anger, denial,\nand then finally at the end",
    "start": "586077",
    "end": "591870"
  },
  {
    "text": "just thinking about it, acceptance. And I think I've been quite hopeful",
    "start": "591870",
    "end": "598967"
  },
  {
    "text": "and optimistic about progress since. I think one thing I'll caveat\nis, I think, it also depends",
    "start": "600030",
    "end": "606450"
  },
  {
    "text": "on which domains you're\ngonna see progress. Math is a great domain\nespecially formal theorem proving",
    "start": "606450",
    "end": "612750"
  },
  {
    "text": "because you get this fantastic\nsignal of actually verifying if the thing was correct.",
    "start": "612750",
    "end": "618120"
  },
  {
    "text": "And so this means something like RL can\nwork really, really well, and I think you could have systems that are perhaps very superhuman in math",
    "start": "618120",
    "end": "625350"
  },
  {
    "text": "and still not technically have AGI. - Okay, so can we take\nit all the way to Cursor.",
    "start": "625350",
    "end": "630840"
  },
  {
    "start": "627000",
    "end": "1014000"
  },
  {
    "text": "And what is Cursor? It's a fork of VS Code, and VS Code is one of\nthe most popular editors",
    "start": "630840",
    "end": "637560"
  },
  {
    "text": "for a long time. Everybody fell in love with it. Everybody left Vim, I left DMAX for it.",
    "start": "637560",
    "end": "642990"
  },
  {
    "text": "Sorry. (all laughing) So, unified in some fundamental\nway the developer community.",
    "start": "642990",
    "end": "651710"
  },
  {
    "text": "And then, you look at the space of things, you look at the scaling\nlaws, AI is becoming amazing.",
    "start": "652980",
    "end": "658260"
  },
  {
    "text": "And you decided, okay, it's not enough to just write an extension via VS Code",
    "start": "658260",
    "end": "662649"
  },
  {
    "text": "because there's a lot\nof limitations to that. If AI is gonna keep getting\nbetter and better and better,",
    "start": "663780",
    "end": "669240"
  },
  {
    "text": "we need to really rethink\nhow the AI is gonna be part of the editing process.",
    "start": "669240",
    "end": "674250"
  },
  {
    "text": "And so, you decided to fork VS Code, and start to build a lot\nof the amazing features",
    "start": "674250",
    "end": "679470"
  },
  {
    "text": "we'll be able to talk about. But what was that decision like? Because there's a lot of\nextensions, including Copilot,",
    "start": "679470",
    "end": "687690"
  },
  {
    "text": "of VS Code that are doing\nsort of AI type stuff. What was the decision\nlike to just fork VS Code?",
    "start": "687690",
    "end": "693330"
  },
  {
    "text": "- So the decision to do an\neditor seemed self-evident to us for at least what we\nwanted to do and achieve,",
    "start": "693330",
    "end": "700470"
  },
  {
    "text": "because when we started\nworking on the editor, the idea was these models\nare gonna get much better, their capabilities are gonna improve,",
    "start": "700470",
    "end": "705540"
  },
  {
    "text": "and it's gonna entirely\nchange how you build software, both in a you will have\nbig productivity gains but also radical and now\nthe active building software",
    "start": "705540",
    "end": "712199"
  },
  {
    "text": "is gonna change a lot. And so, you're very limited in the control you have over a code editor",
    "start": "712200",
    "end": "718170"
  },
  {
    "text": "if you're a plugin to an\nexisting coding environment, and we didn't wanna get locked\nin by those limitations.",
    "start": "718170",
    "end": "724920"
  },
  {
    "text": "We wanted to be able to just\nbuild the most useful stuff. - Okay. Well then, the natural question is,",
    "start": "724920",
    "end": "730323"
  },
  {
    "text": "VS Code is kind of with\nCopilot a competitor, so how do you win?",
    "start": "731820",
    "end": "737340"
  },
  {
    "text": "Is it basically just the\nspeed and the quality of the features? - Yeah, I mean, I think this is a space",
    "start": "737340",
    "end": "742980"
  },
  {
    "text": "that is quite interesting,\nperhaps quite unique where if you look at previous tech waves,",
    "start": "742980",
    "end": "749760"
  },
  {
    "text": "maybe there's kind of one\nmajor thing that happened and it unlocked a new wave of companies, but every single year, every\nsingle model capability",
    "start": "749760",
    "end": "757710"
  },
  {
    "text": "or jump you get in model capabilities, you now unlock this new wave of features,",
    "start": "757710",
    "end": "763560"
  },
  {
    "text": "things that are possible,\nespecially in programming. And so, I think, in AI programming,",
    "start": "763560",
    "end": "769800"
  },
  {
    "text": "being even just a few months\nahead, let alone a year ahead, makes your product much,\nmuch, much more useful.",
    "start": "769800",
    "end": "775770"
  },
  {
    "text": "I think the Cursor a year from now will need to make the Cursor\nof today look obsolete.",
    "start": "775770",
    "end": "780903"
  },
  {
    "text": "And I think Microsoft has done\na number of fantastic things, but I don't think they're in a great place",
    "start": "781830",
    "end": "788339"
  },
  {
    "text": "to really keep innovating and pushing on this in the\nway that a startup can. - Just rapidly implementing features.",
    "start": "788340",
    "end": "795063"
  },
  {
    "text": "- Yeah, and doing the research\nexperimentation necessary",
    "start": "796410",
    "end": "801250"
  },
  {
    "text": "to really push the ceiling. - I don't know if I think\nof it in terms of features as I think of it in terms of\ncapabilities for programmers.",
    "start": "802920",
    "end": "809823"
  },
  {
    "text": "As the new o1 model came out, and I'm sure there are\ngonna be more models",
    "start": "811170",
    "end": "817290"
  },
  {
    "text": "of different types, like longer\ncontext and maybe faster, there's all these crazy\nideas that you can try,",
    "start": "817290",
    "end": "824700"
  },
  {
    "text": "and hopefully 10% of the crazy ideas will make it into something\nkind of cool and useful",
    "start": "824700",
    "end": "830699"
  },
  {
    "text": "and we want people to have that sooner.",
    "start": "830700",
    "end": "835700"
  },
  {
    "text": "To rephrase, an underrated fact is we're making it for ourself. When we started Cursor,",
    "start": "835800",
    "end": "840810"
  },
  {
    "text": "you really felt this\nfrustration that models, you could see models getting better,",
    "start": "840810",
    "end": "846690"
  },
  {
    "text": "but the Copilot experience\nhad not changed. It was like, \"Man, the\nceiling is getting higher,",
    "start": "846690",
    "end": "853320"
  },
  {
    "text": "why are they not making new things? They should be making new things. Where's all the alpha features?",
    "start": "853320",
    "end": "859560"
  },
  {
    "text": "There were no alpha features.\" I'm sure it was selling well.",
    "start": "859560",
    "end": "864690"
  },
  {
    "text": "I'm sure it was a great business, I'm one of these people that really want to\ntry and use new things,",
    "start": "864690",
    "end": "871800"
  },
  {
    "text": "and there was no new thing\nfor a very long while. - Yeah, it's interesting.",
    "start": "871800",
    "end": "877290"
  },
  {
    "text": "I don't know how you put that into words, but when you compare\na Cursor with Copilot, Copilot pretty quickly\nstarted to feel stale",
    "start": "877290",
    "end": "885060"
  },
  {
    "text": "for some reason. - Yeah, I think one thing\nthat I think helps us is that we're doing it all in one",
    "start": "885060",
    "end": "892770"
  },
  {
    "text": "where we're developing the UX and the way you interact with the model at the same time as we're developing",
    "start": "892770",
    "end": "900420"
  },
  {
    "text": "how we actually make the\nmodel give better answers. So, how you build up the prompt or how do you find the\ncontext and for a Cursor Tab,",
    "start": "900420",
    "end": "908430"
  },
  {
    "text": "how do you train the model? So, I think that helps\nus to have all of it the same people working on the\nentire experience end to end.",
    "start": "908430",
    "end": "917400"
  },
  {
    "text": "- Yeah, it's like the person making the UI and the person training the\nmodel sit like 18 feet away.",
    "start": "917400",
    "end": "924269"
  },
  {
    "text": "- [Aman] Often the same person even. - Yeah, often even the same person. You can create things that\nare sort of not possible",
    "start": "924270",
    "end": "930990"
  },
  {
    "text": "if you're not talking,\nyou're not experimenting. - And you're using, like you\nsaid, Cursor to write Cursor?",
    "start": "930990",
    "end": "937170"
  },
  {
    "text": "- Of course. - Oh, yeah.\n- Yeah. - Well, let's talk about\nsome of these features. Let's talk about the all-knowing,",
    "start": "937170",
    "end": "943140"
  },
  {
    "text": "the all-powerful praise be to the Tab, (group chuckles) auto complete on steroids basically.",
    "start": "943140",
    "end": "950760"
  },
  {
    "text": "So how does Tab work? What is Tab? - To highlight and\nsummarize at a high level, I'd say that there are two things",
    "start": "950760",
    "end": "957000"
  },
  {
    "text": "that Cursor is pretty good at right now. There are other things that it does, but two things that it\nhelps programmers with.",
    "start": "957000",
    "end": "964889"
  },
  {
    "text": "One is this idea of\nlooking over your shoulder, and being a really fast colleague",
    "start": "964890",
    "end": "970380"
  },
  {
    "text": "who can kind of jump\nahead of you, and type, and figure out what you're gonna do next.",
    "start": "970380",
    "end": "974709"
  },
  {
    "text": "That was the kernel of the idea\nbehind a good auto complete was predicting what you're gonna do next, but you can make that\nconcept even more ambitious",
    "start": "979113",
    "end": "986100"
  },
  {
    "text": "by not just predicting the\ncharacters after your Cursor but actually predicting\nthe next entire change you're gonna make, the next diff,",
    "start": "986100",
    "end": "992070"
  },
  {
    "text": "next place you're gonna jump to. And the second thing Cursor is\npretty good at right now too",
    "start": "992070",
    "end": "1000160"
  },
  {
    "text": "is helping you sometimes\njump ahead of the AI and tell it what to do and\ngo from instructions to code.",
    "start": "1000170",
    "end": "1007100"
  },
  {
    "text": "And on both of those,\nwe've done a lot of work on making the editing experience\nfor those things ergonomic and also making those\nthings smart and fast.",
    "start": "1007100",
    "end": "1014480"
  },
  {
    "start": "1014000",
    "end": "1388000"
  },
  {
    "text": "- One of the things we really wanted, was we wanted the model to\nbe able to edit code for us. That was kind of a wish and\nwe had multiple attempts at it",
    "start": "1014480",
    "end": "1022129"
  },
  {
    "text": "before we had a good model\nthat could edit code for you.",
    "start": "1022130",
    "end": "1026303"
  },
  {
    "text": "Then after we had a good model, I think there've been a lot of effort to make the inference fast\nfor having a good experience,",
    "start": "1027710",
    "end": "1036670"
  },
  {
    "text": "and we've been starting to incorporate, I mean, Michael sort of\nmentioned this ability",
    "start": "1038960",
    "end": "1044510"
  },
  {
    "text": "to jump to different places, and that jump to different\nplaces I think came from a feeling of once you accept an edit,",
    "start": "1044510",
    "end": "1052343"
  },
  {
    "text": "it's like, \"Man, it should\nbe just really obvious where to go next.\" It's like, \"I'd made this change,\nthe model should just know",
    "start": "1054290",
    "end": "1061280"
  },
  {
    "text": "that the next place to\ngo to is 18 lines down.\" If you're a WIM user, you\ncould press 18JJ or whatever,",
    "start": "1061280",
    "end": "1068933"
  },
  {
    "text": "but why am I doing this? The model should just know it. So the idea was you just press Tab,",
    "start": "1069920",
    "end": "1076820"
  },
  {
    "text": "it would go 18 lines down, and then show you the next\nedit and you would press Tab, so as long as you could keep pressing Tab.",
    "start": "1076820",
    "end": "1084620"
  },
  {
    "text": "And so the internal competition was, how many Tabs can we make someone press? Once you have the idea, more abstractly,",
    "start": "1084620",
    "end": "1092290"
  },
  {
    "text": "the thing to think about is\nhow are the edits zero entropy?",
    "start": "1094070",
    "end": "1098828"
  },
  {
    "text": "There's no new bits of information\nto finish your thought, but you still have to type some characters",
    "start": "1102727",
    "end": "1109640"
  },
  {
    "text": "to make the computer understand what you're actually thinking, then maybe the model\nshould just read your mind",
    "start": "1109640",
    "end": "1115911"
  },
  {
    "text": "and all the zero entropy bits\nshould just be tabbed away.",
    "start": "1115911",
    "end": "1120203"
  },
  {
    "text": "That was sort of the abstract version. - There's this interesting thing where if you look at language model loss on different domains, I\nbelieve the bits per byte,",
    "start": "1121220",
    "end": "1129350"
  },
  {
    "text": "which is a kind of\ncharacter normalize loss for code is lower than language,",
    "start": "1129350",
    "end": "1135230"
  },
  {
    "text": "which means in general, there\nare a lot of tokens in code that are super predictable, a lot of characters that\nare super predictable.",
    "start": "1135230",
    "end": "1140960"
  },
  {
    "text": "And this is I think even magnified when you're not just trying\nto auto complete code, but predicting what the\nuser's going to do next",
    "start": "1140960",
    "end": "1148549"
  },
  {
    "text": "in their editing of existing code. And so, the goal of Cursor\nTab is let's eliminate",
    "start": "1148550",
    "end": "1153620"
  },
  {
    "text": "all the low entropy actions\nyou take inside of the editor. When the intent is effectively determined,",
    "start": "1153620",
    "end": "1159679"
  },
  {
    "text": "let's just jump you forward\nin time, skip you forward. - Well, what's the intuition and what's the technical details",
    "start": "1159680",
    "end": "1165080"
  },
  {
    "text": "of how to do next Cursor prediction? That jump, that's not so\nintuitive I think to people.",
    "start": "1165080",
    "end": "1171440"
  },
  {
    "text": "- Yeah. I think I can speak to\na few of the details on how to make these things work.",
    "start": "1171440",
    "end": "1177320"
  },
  {
    "text": "They're incredibly low latency, so you need to train\nsmall models on this task.",
    "start": "1177320",
    "end": "1183230"
  },
  {
    "text": "In particular, they're\nincredibly pre-fill token hungry.",
    "start": "1183230",
    "end": "1188230"
  },
  {
    "text": "What that means is they have these really, really long prompts where\nthey see a lot of your code and they're not actually\ngenerating that many tokens.",
    "start": "1188330",
    "end": "1194900"
  },
  {
    "text": "And so, the perfect fit for\nthat is using a sparse model, meaning an MOE model.",
    "start": "1194900",
    "end": "1199882"
  },
  {
    "text": "So that was one breakthrough we made that substantially\nimproved its performance at longer context.",
    "start": "1200780",
    "end": "1206300"
  },
  {
    "text": "The other being a variant\nof speculative decoding that we built out called\nspeculative edits.",
    "start": "1206300",
    "end": "1213320"
  },
  {
    "text": "These are two, I think, important pieces of what make it quite high\nquality and very fast.",
    "start": "1213320",
    "end": "1220330"
  },
  {
    "text": "- Okay, so MoE, Mixture of Experts, the input is huge, the output is small. - Yeah.\n- Okay.",
    "start": "1220370",
    "end": "1225893"
  },
  {
    "text": "Does caching play a role- - Oh, caching plays a huge role. Because you're dealing with\nthis many input tokens,",
    "start": "1229303",
    "end": "1236480"
  },
  {
    "text": "if every single keystroke that\nyou're typing in a given line you had to rerun the model on\nall of those tokens passed in,",
    "start": "1236480",
    "end": "1244130"
  },
  {
    "text": "you're just going to one,\nsignificantly degrade latency, two, you're gonna kill\nyour GPUs with load.",
    "start": "1244130",
    "end": "1249860"
  },
  {
    "text": "So, you need to design\nthe actual prompts you use for the model such that\nthey're caching aware.",
    "start": "1249860",
    "end": "1257150"
  },
  {
    "text": "And then yeah, you need\nto reuse the KV cache across requests just so that you're spending\nless work, less compute.",
    "start": "1257150",
    "end": "1264440"
  },
  {
    "text": "- Again, what are the\nthings that Tab is supposed to be able to do in the near\nterm, just to linger on that?",
    "start": "1264440",
    "end": "1272350"
  },
  {
    "text": "Generate code, fill empty space, also edit code across multiple lines,",
    "start": "1273530",
    "end": "1281570"
  },
  {
    "text": "and then jump to different\nlocations inside the same file, and then-\n- Hopefully, jump to different files also.",
    "start": "1281570",
    "end": "1286880"
  },
  {
    "text": "So if you make an edit in one file, and maybe you have to go to another file",
    "start": "1286880",
    "end": "1292460"
  },
  {
    "text": "to finish your thought, it should go to the second file also. - The full generalization\nis next action prediction.",
    "start": "1292460",
    "end": "1301310"
  },
  {
    "text": "Sometimes, you need to run\na command in the terminal and it should be able to\nsuggest the command based",
    "start": "1301310",
    "end": "1307130"
  },
  {
    "text": "on the code that you wrote too.",
    "start": "1307130",
    "end": "1308933"
  },
  {
    "text": "It suggests something, but it's hard for you\nto know if it's correct because you actually need some\nmore information to learn.",
    "start": "1313370",
    "end": "1319910"
  },
  {
    "text": "You need to know the\ntype to be able to verify that it's correct. And so maybe it should\nactually take you to a place",
    "start": "1319910",
    "end": "1325580"
  },
  {
    "text": "that's the definition of something, and then take you back so that you have all\nthe requisite knowledge",
    "start": "1325580",
    "end": "1331160"
  },
  {
    "text": "to be able to accept the next completion. - So providing the human the knowledge. - [Arvid] Yes.",
    "start": "1331160",
    "end": "1337190"
  },
  {
    "text": "- Right.\n- Mm-hmm, yeah. - I just gotten to know\na guy named Primeagen.",
    "start": "1337190",
    "end": "1342677"
  },
  {
    "text": "You can order coffee via SSH. - (chuckles) Oh, yeah. - We did that.\n- We did that.",
    "start": "1344930",
    "end": "1351230"
  },
  {
    "text": "- So, can also the model do that and provide you with caffeine?",
    "start": "1351230",
    "end": "1357350"
  },
  {
    "text": "Okay, so that's the general framework. - Yeah.",
    "start": "1357350",
    "end": "1364394"
  },
  {
    "text": "- Programming is this weird discipline where sometimes the next\nfive minutes, not always,",
    "start": "1364670",
    "end": "1370610"
  },
  {
    "text": "but sometimes the next five\nminutes of what you're gonna do is actually predictable from\nthe stuff you've done recently. And so, can you get to a world\nwhere that next five minutes",
    "start": "1370610",
    "end": "1376670"
  },
  {
    "text": "either happens by you disengaging\nand it taking you through? Or maybe a little bit more\nof just you seeing next step",
    "start": "1376670",
    "end": "1382940"
  },
  {
    "text": "what it's gonna do and you're like, \"Okay, that's good, that's\ngood, that's good, that's good,\" and you can just tap, tap\nthrough these big changes.",
    "start": "1382940",
    "end": "1389030"
  },
  {
    "start": "1388000",
    "end": "1880000"
  },
  {
    "text": "- As we're talking about this, I should mention one of the really cool and noticeable things about Cursor is that",
    "start": "1389030",
    "end": "1394909"
  },
  {
    "text": "there's this whole diff\ninterface situation going on. So, the model suggests\nwith the red and the green",
    "start": "1394910",
    "end": "1402590"
  },
  {
    "text": "of here's how we're gonna modify the code, and in the chat window you can apply and it shows you the diff\nand you can accept the diff.",
    "start": "1402590",
    "end": "1409910"
  },
  {
    "text": "So, maybe can you speak to\nwhatever direction of that? - We'll probably have four or\nfive different kinds of diffs.",
    "start": "1409910",
    "end": "1417694"
  },
  {
    "text": "So we have optimized the\ndiff for the auto complete, so that has a different diff interface",
    "start": "1417694",
    "end": "1422820"
  },
  {
    "text": "than when you're reviewing\nlarger blocks of code. And then we're trying to\noptimize another diff thing",
    "start": "1424687",
    "end": "1430789"
  },
  {
    "text": "for when you're doing\nmultiple different files. And at a high level, the difference is",
    "start": "1430790",
    "end": "1437510"
  },
  {
    "text": "for when you're doing auto-complete, it should be really, really fast to read.",
    "start": "1437510",
    "end": "1442560"
  },
  {
    "text": "Actually, it should be really fast to read in all situations, but in auto-complete your\neyes are focused in one area.",
    "start": "1443780",
    "end": "1451462"
  },
  {
    "text": "The humans can't look in\ntoo many different places. - So, you're talking about\non the interface side? - On the interface side. So it currently has this box on this side.",
    "start": "1453925",
    "end": "1460490"
  },
  {
    "text": "So we have the current box,\nand it you tries to delete code in some place and tries to add other code,",
    "start": "1460490",
    "end": "1467150"
  },
  {
    "text": "it tries to show you a box on the side. - You can maybe show it if\nwe pull it up in cursor.com. This is what we're talking.",
    "start": "1467150",
    "end": "1473510"
  },
  {
    "text": "- So that box-\n- Exactly here. - It was like three or\nfour different attempts at trying to make this thing work",
    "start": "1473510",
    "end": "1480799"
  },
  {
    "text": "where first the attempt was\nthis blue crossed out line. So before it was a box on the side,",
    "start": "1480800",
    "end": "1488120"
  },
  {
    "text": "it used to show you the code to delete by showing you Google Docs style,",
    "start": "1488120",
    "end": "1493340"
  },
  {
    "text": "you would see a line through it and then you would see the new code. That was super distracting.",
    "start": "1493340",
    "end": "1499373"
  },
  {
    "text": "There was deletions, there\nwas trying the red highlight. Then the next iteration of\nit, which is sort of funny,",
    "start": "1502808",
    "end": "1509630"
  },
  {
    "text": "you would hold the, on\nMac, the Option button. So, it would highlight a region of code",
    "start": "1509630",
    "end": "1517160"
  },
  {
    "text": "to show you that there\nmight be something coming. So, maybe in this example, the input and the value\nwould all get blue.",
    "start": "1517160",
    "end": "1526222"
  },
  {
    "text": "And the blue was to highlight that the AI had a suggestion for you. So instead of directly\nshowing you the thing,",
    "start": "1527090",
    "end": "1533450"
  },
  {
    "text": "it would just hint that\nthe AI had a suggestion and if you really wanted to see it, you would hold the Option button,",
    "start": "1535026",
    "end": "1540470"
  },
  {
    "text": "and then you would see the new suggestion. And if you release the Option button, you would then see your original code.",
    "start": "1540470",
    "end": "1546950"
  },
  {
    "text": "- Mm-hmm, by the way, that's pretty nice, but you have to know to\nhold the Option button. - Yeah.",
    "start": "1546950",
    "end": "1552080"
  },
  {
    "text": "- And by the way, I'm not a\nMac user, but I got it, Option. It's a button I guess you people have.",
    "start": "1552080",
    "end": "1558773"
  },
  {
    "text": "- Again, it's just not intuitive. I think that's the key thing. - And there's a chance this is also not the final version of it.",
    "start": "1560270",
    "end": "1566990"
  },
  {
    "text": "- I am personally very excited for making a lot of\nimprovements in this area.",
    "start": "1566990",
    "end": "1573200"
  },
  {
    "text": "We often talk about it as\nthe verification problem where these diffs are\ngreat for small edits.",
    "start": "1574430",
    "end": "1581750"
  },
  {
    "text": "For large edits or when it's\nmultiple files or something, it's actually a little bit prohibitive",
    "start": "1581750",
    "end": "1590210"
  },
  {
    "text": "to review these diffs. So, there are a couple\nof different ideas here.",
    "start": "1590210",
    "end": "1596720"
  },
  {
    "text": "One idea that we have is, okay, parts of the diffs are important. They have a lot of information.",
    "start": "1596720",
    "end": "1602480"
  },
  {
    "text": "And then parts of the diff\nare just very low entropy. They're the same thing\nover and over again.",
    "start": "1602480",
    "end": "1609590"
  },
  {
    "text": "And so maybe you can\nhighlight the important pieces and then gray out the\nnot so important pieces.",
    "start": "1609590",
    "end": "1615260"
  },
  {
    "text": "Or maybe you can have a\nmodel that looks at the diff and sees, oh, there's a likely bug here.",
    "start": "1615260",
    "end": "1621020"
  },
  {
    "text": "I will mark this with a\nlittle red squiggly and say, \"You should probably review\nthis part of the diff.\"",
    "start": "1621020",
    "end": "1627237"
  },
  {
    "text": "Ideas in that vein I think are exciting. - Yeah, that's a really fascinating space",
    "start": "1628670",
    "end": "1633799"
  },
  {
    "text": "of UX design engineering. So you're, basically, trying\nto guide the human programmer",
    "start": "1633800",
    "end": "1640880"
  },
  {
    "text": "through all the things they need to read and nothing more, optimally. - Yeah, and you want an\nintelligent model to do it.",
    "start": "1640880",
    "end": "1648080"
  },
  {
    "text": "Currently, diff algorithms, they're just like normal algorithms.",
    "start": "1648080",
    "end": "1656120"
  },
  {
    "text": "There's no intelligence. There's intelligence that went\ninto designing the algorithm, but then you don't care\nif it's about this thing",
    "start": "1656120",
    "end": "1664250"
  },
  {
    "text": "or this thing as you want\nthe model to do this. - So, I think the\ngeneral question is like,",
    "start": "1664250",
    "end": "1670373"
  },
  {
    "text": "man, these models are\ngoing to get much smarter. As the models get much smarter,",
    "start": "1671420",
    "end": "1675293"
  },
  {
    "text": "changes they will be able\nto propose are much bigger. So as the changes gets\nbigger and bigger and bigger,",
    "start": "1676580",
    "end": "1682070"
  },
  {
    "text": "the humans have to do more and more and more verification work.",
    "start": "1682070",
    "end": "1684953"
  },
  {
    "text": "You need to help them out. I don't wanna spend all\nmy time reviewing code.",
    "start": "1687350",
    "end": "1692789"
  },
  {
    "text": "- Can you say a little more\nacross multiple files diff? - Yeah, I mean, so GitHub\ntries to solve this, right,",
    "start": "1695480",
    "end": "1703580"
  },
  {
    "text": "with code review. When you're doing code review, you're reviewing multiple\ndiffs across multiple files.",
    "start": "1703580",
    "end": "1709700"
  },
  {
    "text": "But like Arvid said earlier, I think you can do much\nbetter than code review.",
    "start": "1709700",
    "end": "1715220"
  },
  {
    "text": "Code review kind of sucks. You spend a lot of time\ntrying to grok this code that's often quite unfamiliar to you",
    "start": "1715220",
    "end": "1722270"
  },
  {
    "text": "and it often doesn't even\nactually catch that many bugs.",
    "start": "1722270",
    "end": "1727270"
  },
  {
    "text": "And I think you can significantly improve that review experience using\nlanguage models, for example, using the kinds of tricks\nthat Arvid had described",
    "start": "1728030",
    "end": "1734930"
  },
  {
    "text": "of maybe pointing you towards the regions that actually matter.",
    "start": "1734930",
    "end": "1738953"
  },
  {
    "text": "I think also if the code is produced by these language models and it's not produced by someone else.",
    "start": "1741380",
    "end": "1747330"
  },
  {
    "text": "The code review experience is\ndesign for both the reviewer",
    "start": "1748940",
    "end": "1753940"
  },
  {
    "text": "and the person that produced the code. In the case where the person that produced the code\nis a language model,",
    "start": "1754280",
    "end": "1760100"
  },
  {
    "text": "you don't have to care that\nmuch about their experience and you can design the entire thing around the reviewer such that\nthe reviewer's job is as fun,",
    "start": "1760100",
    "end": "1769010"
  },
  {
    "text": "as easy, as productive as possible. I think that feels like the\nissue with just naively trying",
    "start": "1769010",
    "end": "1775670"
  },
  {
    "text": "to make these things\nlook like code review. I think you can be a lot more creative",
    "start": "1775670",
    "end": "1781070"
  },
  {
    "text": "and push the boundary on what's possible. - And just one idea there\nis, I think ordering matters.",
    "start": "1781070",
    "end": "1786740"
  },
  {
    "text": "Generally, when you review a\nPR, you have this list of files and you're reviewing\nthem from top to bottom,",
    "start": "1786740",
    "end": "1792380"
  },
  {
    "text": "but you actually wanna\nunderstand this part first because that came logically first,",
    "start": "1792380",
    "end": "1797600"
  },
  {
    "text": "and then you want to\nunderstand the next part. And you don't want to have\nto figure out that yourself.",
    "start": "1797600",
    "end": "1802730"
  },
  {
    "text": "You want a model to guide\nyou through the thing. - And is the step of\ncreation going to be more",
    "start": "1802730",
    "end": "1808040"
  },
  {
    "text": "and more natural language, is the goal versus with\nactual writing the book? - I think sometimes. I don't\nthink it's going to be the case",
    "start": "1808040",
    "end": "1815600"
  },
  {
    "text": "that all of programming\nwill be natural language, and the reason for that is if I'm pair programming with Sualeh,",
    "start": "1815600",
    "end": "1822672"
  },
  {
    "text": "and Sualeh is at the\ncomputer and the keyboard, and sometimes if I'm driving,\nI want to say to Sualeh,",
    "start": "1822672",
    "end": "1829480"
  },
  {
    "text": "\"Hey, implement this\nfunction,\" and that works. And then sometimes it's just so annoying",
    "start": "1829527",
    "end": "1835850"
  },
  {
    "text": "to explain to Sualeh\nwhat I want him to do, and so I actually take over\nthe keyboard and I show him.",
    "start": "1835850",
    "end": "1841550"
  },
  {
    "text": "I write part of the example\nand then it makes sense and that's the easiest way to communicate.",
    "start": "1841550",
    "end": "1847460"
  },
  {
    "text": "And so, I think that's\nalso the case for AI. Sometimes the easiest way\nto communicate with the AI will be to show an example",
    "start": "1847460",
    "end": "1852740"
  },
  {
    "text": "and then it goes and does\nthe thing everywhere else. Or sometimes if you're making\na website, for example,",
    "start": "1852740",
    "end": "1857779"
  },
  {
    "text": "the easiest way to show\nto the AI what you want is not to tell it what to do but drag things around or draw things,",
    "start": "1857780",
    "end": "1865043"
  },
  {
    "text": "and maybe eventually, we will get to brain machine\ninterfaces or whatever",
    "start": "1866030",
    "end": "1871160"
  },
  {
    "text": "and you can understand\nwhat you're thinking. And so, I think natural\nlanguage will have a place. I think it will definitely not be the way",
    "start": "1871160",
    "end": "1877790"
  },
  {
    "text": "most people program most of the time. - I'm really feeling the\nAGI with this editor.",
    "start": "1877790",
    "end": "1883429"
  },
  {
    "start": "1880000",
    "end": "2214000"
  },
  {
    "text": "(group chuckling) It\nfeels like there's a lot of machine learning going on underneath. Tell me about some of the ML\nstuff that makes it all work?",
    "start": "1883429",
    "end": "1891230"
  },
  {
    "text": "- Where Cursor really works via this ensemble of custom models that we've trained alongside\nthe frontier models",
    "start": "1891230",
    "end": "1898460"
  },
  {
    "text": "that are fantastic at the\nreasoning intense things. And so Cursor Tab, for\nexample, is a great example",
    "start": "1898460",
    "end": "1903860"
  },
  {
    "text": "of where you can specialize\nthis model to be, even better than even frontier models if you look at evals on\nthe task we set it at.",
    "start": "1903860",
    "end": "1910399"
  },
  {
    "text": "The other domain, which it's surprising that it requires custom models but it's necessary and works\nquite well, is in Apply.",
    "start": "1910400",
    "end": "1918143"
  },
  {
    "text": "The frontier models are quite\ngood at sketching out plans for code and generating\nrough sketches of the change,",
    "start": "1922370",
    "end": "1927770"
  },
  {
    "text": "but actually, creating diffs is quite hard",
    "start": "1927770",
    "end": "1931860"
  },
  {
    "text": "for frontier models, for\nyour training models. You try to do this with Sonnet,\nwith o1, any frontier model",
    "start": "1933140",
    "end": "1942080"
  },
  {
    "text": "and it really messes up stupid things like counting line numbers, especially in super, super large files.",
    "start": "1942080",
    "end": "1948443"
  },
  {
    "text": "And so what we've done to alleviate this is we let the model sketch\nout this rough code block",
    "start": "1949820",
    "end": "1955250"
  },
  {
    "text": "that indicates what the change will be and we train a model to then\nApply that change to the file.",
    "start": "1955250",
    "end": "1962297"
  },
  {
    "text": "- And we should say that\nApply is the model looks at your code, it gives you a\nreally damn good suggestion",
    "start": "1962297",
    "end": "1969470"
  },
  {
    "text": "of what new things to do. And the seemingly for humans trivial step",
    "start": "1969470",
    "end": "1975080"
  },
  {
    "text": "of combining the two, you're\nsaying is not so trivial. - Contrary to popular perception,",
    "start": "1975080",
    "end": "1981170"
  },
  {
    "text": "it is not a deterministic algorithm. - Yeah, I think you see shallow\ncopies of Apply elsewhere",
    "start": "1981170",
    "end": "1988060"
  },
  {
    "text": "and it just breaks most of the time because you think you can try to do some deterministic matching, and then it fails at least 40% of the time",
    "start": "1989450",
    "end": "1998150"
  },
  {
    "text": "and that just results in a\nterrible product experience.",
    "start": "1998150",
    "end": "2001423"
  },
  {
    "text": "I think in general, this regime of you are going to get smarter\nand smarter models.",
    "start": "2003310",
    "end": "2009429"
  },
  {
    "text": "So one other thing that Apply lets you do is it lets you use fewer tokens",
    "start": "2009430",
    "end": "2015190"
  },
  {
    "text": "with the most intelligent models. This is both expensive in terms of latency for generating all these tokens and cost.",
    "start": "2015190",
    "end": "2024220"
  },
  {
    "text": "So, you can give this\nvery, very rough sketch and then have your model\nmodels go and implement it",
    "start": "2024220",
    "end": "2029890"
  },
  {
    "text": "because it's a much\neasier task to implement, this very, very sketched out code. And I think that this regime will continue",
    "start": "2029890",
    "end": "2036220"
  },
  {
    "text": "where you can use smarter\nand smarter models to do the planning and then\nmaybe the implementation details",
    "start": "2036220",
    "end": "2041590"
  },
  {
    "text": "can be handled by the\nless intelligent ones. Perhaps you'll have maybe o1, maybe it'll be even more capable models",
    "start": "2041590",
    "end": "2048369"
  },
  {
    "text": "given an even higher level plan that is recursively applied by Sauna",
    "start": "2048370",
    "end": "2055629"
  },
  {
    "text": "and then the Apply model. - Maybe we should talk\nabout how to make it fast if you like. Fast is always an interesting detail.",
    "start": "2055630",
    "end": "2061510"
  },
  {
    "text": "- [Arvid] Fast is good. - Yeah, how do you make it fast? - Yeah, so one big component",
    "start": "2061510",
    "end": "2067030"
  },
  {
    "text": "of making it fast is speculative edits. So, speculative edits are a\nvariant of speculative decoding,",
    "start": "2067030",
    "end": "2073119"
  },
  {
    "text": "and maybe it'd be helpful to briefly describe speculative decoding. With speculative decoding,",
    "start": "2073120",
    "end": "2079240"
  },
  {
    "text": "what you do is you can\ntake advantage of the fact that most of the time,\nand I'll add the caveat",
    "start": "2079240",
    "end": "2086620"
  },
  {
    "text": "that it would be when you're memory bound in language model generation,",
    "start": "2086620",
    "end": "2090613"
  },
  {
    "text": "if you process multiple tokens at once, it is faster than generating\none token at a time.",
    "start": "2091900",
    "end": "2098770"
  },
  {
    "text": "So this is the same reason why if you look at tokens per\nsecond with prompt tokens",
    "start": "2098770",
    "end": "2104230"
  },
  {
    "text": "versus generated tokens, it's much much faster for prompt tokens.",
    "start": "2104230",
    "end": "2107533"
  },
  {
    "text": "So what we do is instead of using what speculative decoding normally does, which is using a really small model",
    "start": "2109330",
    "end": "2115750"
  },
  {
    "text": "to predict these draft\ntokens that your larger model will then go in and verify,",
    "start": "2115750",
    "end": "2120613"
  },
  {
    "text": "with code edits, we\nhave a very strong prior of what the existing code will look like, and that prior is literally\nthe same exact code.",
    "start": "2122140",
    "end": "2129609"
  },
  {
    "text": "So you can do is you can just feed chunks of the original code back into the model,",
    "start": "2129610",
    "end": "2133813"
  },
  {
    "text": "and then the model will\njust pretty much agree most of the time that, \"Okay, I'm just gonna\nspit this code back out.\"",
    "start": "2135010",
    "end": "2140403"
  },
  {
    "text": "And so, you can process all\nof those lines in parallel and you just do this with\nsufficiently many chunks. And then eventually, you'll\nreach a point of disagreement",
    "start": "2140403",
    "end": "2147700"
  },
  {
    "text": "where the model will now\npredict text that is different from the ground truth original code.",
    "start": "2147700",
    "end": "2153400"
  },
  {
    "text": "It'll generate those tokens\nand then we will decide after enough tokens\nmatch the original code",
    "start": "2153400",
    "end": "2159250"
  },
  {
    "text": "to re-start speculating in chunks of code. What this actually ends up looking like",
    "start": "2159250",
    "end": "2164980"
  },
  {
    "text": "is just a much faster version\nof normal editing code. So, it looks like a much faster version",
    "start": "2164980",
    "end": "2172090"
  },
  {
    "text": "of the model rewriting all the code. So, we can use the same exact interface that we use for diffs,",
    "start": "2172090",
    "end": "2179140"
  },
  {
    "text": "but it will just stream down a lot faster. - And then the advantage is\nthat while it's streaming,",
    "start": "2179140",
    "end": "2184660"
  },
  {
    "text": "you can just also start reviewing the code before it's done so there's\nno big loading screen.",
    "start": "2184660",
    "end": "2191203"
  },
  {
    "text": "Maybe that is part of the advantage. - So, the human can start\nreading before the thing is done.",
    "start": "2193180",
    "end": "2199510"
  },
  {
    "text": "- I think the interesting\nriff here is something like, I feel like speculation is a\nfairly common idea nowadays.",
    "start": "2199510",
    "end": "2205690"
  },
  {
    "text": "It's not only in language models. There's obviously speculation in CPUs and there's speculation for databases",
    "start": "2205690",
    "end": "2211570"
  },
  {
    "text": "and there's speculation\nall over the place. - Well, let me ask the ridiculous question",
    "start": "2211570",
    "end": "2216910"
  },
  {
    "start": "2214000",
    "end": "2608000"
  },
  {
    "text": "of which LLM is better at coding? GPT, Claude, who wins in\nthe context of programming?",
    "start": "2216910",
    "end": "2224140"
  },
  {
    "text": "And I'm sure the answer\nis much more nuanced because it sounds like every single part of this involves a different model.",
    "start": "2224140",
    "end": "2232030"
  },
  {
    "text": "- Yeah, I think there's no model that Pareto dominates others,",
    "start": "2232030",
    "end": "2238930"
  },
  {
    "text": "meaning, it is better in all categories that we think matter, the\ncategories being speed,",
    "start": "2238930",
    "end": "2245353"
  },
  {
    "text": "ability to edit code, ability\nto process lots of code, long context, a couple of other things",
    "start": "2247570",
    "end": "2252892"
  },
  {
    "text": "and coding capabilities. The one that I'd say right now\nis just net best is Sonnet.",
    "start": "2252893",
    "end": "2259480"
  },
  {
    "text": "I think this is a consensus opinion. O1's really interesting and\nit's really good at reasoning.",
    "start": "2259480",
    "end": "2264970"
  },
  {
    "text": "So if you give it really hard programming interview style\nproblems or lead code problems,",
    "start": "2264970",
    "end": "2271480"
  },
  {
    "text": "it can do quite well on them, but it doesn't feel like it\nunderstands your rough intent",
    "start": "2271480",
    "end": "2279010"
  },
  {
    "text": "as well as Sonnet does. If you look at a lot of\nthe other frontier models,",
    "start": "2279010",
    "end": "2285610"
  },
  {
    "text": "one qualm I have is it feels like they're not necessarily over, I'm not saying they train on benchmarks,",
    "start": "2285610",
    "end": "2292060"
  },
  {
    "text": "but they perform really\nwell in benchmarks relative to everything that's in the middle.",
    "start": "2292060",
    "end": "2297790"
  },
  {
    "text": "So if you tried on all these benchmarks and things that are in the distribution of the benchmarks they're evaluated on, they'll do really well.",
    "start": "2297790",
    "end": "2303423"
  },
  {
    "text": "But when you push them a\nlittle bit outside of that, Sonnet is I think the one that does best",
    "start": "2303423",
    "end": "2308470"
  },
  {
    "text": "at maintaining that same capability. You have the same\ncapability in the benchmark",
    "start": "2308470",
    "end": "2313480"
  },
  {
    "text": "as when you try to instruct\nit to do anything with coding. - Another ridiculous\nquestion is the difference",
    "start": "2313480",
    "end": "2319960"
  },
  {
    "text": "between the normal programming experience versus what benchmarks represent?",
    "start": "2319960",
    "end": "2325059"
  },
  {
    "text": "Where do benchmarks fall\nshort, do you think, when we're evaluating these models? - By the way, that's\na really, really hard,",
    "start": "2325060",
    "end": "2331410"
  },
  {
    "text": "critically important detail of how different benchmarks\nare versus real coding,",
    "start": "2332410",
    "end": "2338620"
  },
  {
    "text": "where real coding, it's\nnot interview style coding.",
    "start": "2338620",
    "end": "2343620"
  },
  {
    "text": "Humans are saying\nhalf-broken English sometimes and sometimes you're saying,\n\"Oh, do what I did before.\"",
    "start": "2346750",
    "end": "2354640"
  },
  {
    "text": "Sometimes you're saying, \"Go add this thing and then\ndo this other thing for me",
    "start": "2354640",
    "end": "2360460"
  },
  {
    "text": "and then make this UI element.\" And then, it's just a lot of\nthings are context dependent.",
    "start": "2360460",
    "end": "2366870"
  },
  {
    "text": "You really want to understand the human and then do what the human\nwants, as opposed to this,",
    "start": "2367900",
    "end": "2373240"
  },
  {
    "text": "maybe the way to put it abstractly is the interview problems\nare very well specified.",
    "start": "2373240",
    "end": "2380610"
  },
  {
    "text": "They lean a lot on specification while the human stuff is less specified.",
    "start": "2382150",
    "end": "2388632"
  },
  {
    "text": "- Yeah. I think that this benchmark\nquestion is both complicated by what Sualeh just mentioned,",
    "start": "2389740",
    "end": "2395080"
  },
  {
    "text": "and then also what Aman was getting into,",
    "start": "2395080",
    "end": "2399193"
  },
  {
    "text": "there's this problem of the skew between what can you actually model in a benchmark versus real programming,",
    "start": "2400690",
    "end": "2405730"
  },
  {
    "text": "and that can be sometimes\nhard to encapsulate because it's real programming's very messy and sometimes things\naren't super well specified",
    "start": "2405730",
    "end": "2412810"
  },
  {
    "text": "what's correct or what isn't. But then it's also doubly hard because of this public benchmark problem.",
    "start": "2412810",
    "end": "2418300"
  },
  {
    "text": "And that's both because public benchmarks are sometimes hill climbed on, then it's really, really\nhard to also get the data",
    "start": "2418300",
    "end": "2424750"
  },
  {
    "text": "from the public benchmarks\nout of the models. And so for instance,",
    "start": "2424750",
    "end": "2429880"
  },
  {
    "text": "one of the most popular\nagent benchmarks, SWE-Bench,",
    "start": "2429880",
    "end": "2433602"
  },
  {
    "text": "is really, really contaminated\nin the training data of these foundation models. And so if you ask these foundation models",
    "start": "2434920",
    "end": "2440920"
  },
  {
    "text": "to do a SWE-Bench problem, but you actually don't give\nthem the context of a code base, they can hallucinate the right file pass, they can hallucinate the\nright function names.",
    "start": "2440920",
    "end": "2448900"
  },
  {
    "text": "And so, it's also just the public aspect of these things is tricky. - Yeah, in that case, it could be trained",
    "start": "2448900",
    "end": "2455410"
  },
  {
    "text": "on the literal issues or\npull requests themselves, and maybe the labs will\nstart to do a better job",
    "start": "2455410",
    "end": "2462280"
  },
  {
    "text": "or they've already done a good job at decontaminating those things, but they're not going to\nomit the actual training data",
    "start": "2462280",
    "end": "2468250"
  },
  {
    "text": "of the repository itself. These are all some of the most\npopular Python repositories. SimPy is one example.",
    "start": "2468250",
    "end": "2474760"
  },
  {
    "text": "I don't think they're going\nto handicap their models on SimPy and all these\npopular Python repositories",
    "start": "2474760",
    "end": "2480250"
  },
  {
    "text": "in order to get true evaluation\nscores in these benchmarks. - I think that given\nthe dirts in benchmarks,",
    "start": "2480250",
    "end": "2487303"
  },
  {
    "text": "there have been a few\ninteresting crutches that places that build systems with these models or build these models actually use",
    "start": "2488260",
    "end": "2495010"
  },
  {
    "text": "to get a sense of are they going\nthe right direction or not. And in a lot of places, people will actually just have\nhumans play with the things",
    "start": "2495010",
    "end": "2501970"
  },
  {
    "text": "and give qualitative feedback on these. One or two of the\nfoundation model companies, they have people that's\na big part of their role.",
    "start": "2501970",
    "end": "2508990"
  },
  {
    "text": "And internally, we also\nqualitatively assess these models and actually lean on that a lot",
    "start": "2508990",
    "end": "2514030"
  },
  {
    "text": "in addition to private\nemails that we have. - [Arvid] It's like the vibe. - The vibe, yeah, the vibe.\n- It's like the vibe.",
    "start": "2514030",
    "end": "2519640"
  },
  {
    "text": "- The vibe benchmark, human\nbenchmark, the humans. You pull in the humans to do a vibe check.",
    "start": "2519640",
    "end": "2525610"
  },
  {
    "text": "- Yeah. (chuckles) - Okay. That's what I do, just\nreading online forums and Reddit and X.",
    "start": "2525610",
    "end": "2532213"
  },
  {
    "text": "Well, I don't know how to\nproperly load in people's opinions",
    "start": "2533920",
    "end": "2538920"
  },
  {
    "text": "'cause they'll say things like, \"I feel like Claude or GPT has\ngotten dumber,\" or something.",
    "start": "2539080",
    "end": "2545200"
  },
  {
    "text": "They'll say, \"I feel like.\" And then I sometimes feel like that too, but I wonder if it's the\nmodel's problem or mine.",
    "start": "2545200",
    "end": "2554019"
  },
  {
    "text": "- With Claude, there's an\ninteresting take I heard where I think AWS has different chips,",
    "start": "2554020",
    "end": "2560382"
  },
  {
    "text": "and I suspect they have\nslightly different numerics than Nvidia GPUs,",
    "start": "2561550",
    "end": "2566980"
  },
  {
    "text": "and someone speculated that\nClaude's degraded performance had to do with maybe using\nthe quantized version",
    "start": "2566980",
    "end": "2574300"
  },
  {
    "text": "that existed on AWS Bedrock versus whatever was\nrunning on Anthropics GPUs.",
    "start": "2574300",
    "end": "2580750"
  },
  {
    "text": "- I interview a bunch of people that have conspiracy theories, so I'm glad you spoke to this conspiracy.",
    "start": "2580750",
    "end": "2586463"
  },
  {
    "text": "- Well, it's not like conspiracy\ntheory as much as humans.",
    "start": "2586463",
    "end": "2591463"
  },
  {
    "text": "Humans are humans and\nthere's these details. - [Lex] Yes. - And you're doing this\nqueasy amount of flops",
    "start": "2592450",
    "end": "2599200"
  },
  {
    "text": "and chips are messy and\nman, you can just have bugs.",
    "start": "2599200",
    "end": "2602713"
  },
  {
    "text": "It's hard to overstate how\nhard bugs are to avoid. - What's the role of a\ngood prompt in all of this?",
    "start": "2604270",
    "end": "2613119"
  },
  {
    "start": "2608000",
    "end": "3054000"
  },
  {
    "text": "We mentioned that benchmarks\nhave really structured, well-formulated prompts.",
    "start": "2613120",
    "end": "2618853"
  },
  {
    "text": "What should a human be\ndoing to maximize success and what's the importance\nof what the humans,",
    "start": "2619859",
    "end": "2626590"
  },
  {
    "text": "you wrote a blog post, you\ncalled it Prompt Design. - Yeah, I think it depends\non which model you're using,",
    "start": "2626590",
    "end": "2635760"
  },
  {
    "text": "and all of them are slightly different and they respond differently\nto different prompts, but I think the original GPT-4",
    "start": "2635980",
    "end": "2645000"
  },
  {
    "text": "and the original (indistinct)\nmodels last year, they were quite sensitive to the prompts,",
    "start": "2645070",
    "end": "2650530"
  },
  {
    "text": "and they also had a very\nsmall context window. And so, we have all of\nthese pieces of information",
    "start": "2650530",
    "end": "2656590"
  },
  {
    "text": "around the code base that would maybe be\nrelevant in the prompt. You have the docs, you have\nthe files that you add,",
    "start": "2656590",
    "end": "2663100"
  },
  {
    "text": "you have the conversation history, and then there's a problem\nlike how do you decide what you actually put in the prompt",
    "start": "2663100",
    "end": "2668800"
  },
  {
    "text": "and when you have a limited space? And even for today's models, even when you have long context,",
    "start": "2668800",
    "end": "2673900"
  },
  {
    "text": "filling out the entire\ncontext window means that it's slower. It means that sometimes the\nmodel actually gets confused",
    "start": "2673900",
    "end": "2680530"
  },
  {
    "text": "and some models get more\nconfused than others. And we have this one system\ninternally that we call Preempt,",
    "start": "2680530",
    "end": "2686710"
  },
  {
    "text": "which helps us with that a little bit. And I think it was\nbuilt for the era before",
    "start": "2686710",
    "end": "2695040"
  },
  {
    "text": "where we had 8,000 token contact windows. And it's a little bit similar",
    "start": "2696370",
    "end": "2703420"
  },
  {
    "text": "to when you're making a website. You want it to work on mobile,",
    "start": "2703420",
    "end": "2709840"
  },
  {
    "text": "you want it to work on a desktop screen, and you have this dynamic\ninformation which you don't have.",
    "start": "2709840",
    "end": "2717270"
  },
  {
    "text": "For example, if you're\ndesigning a print magazine, you know exactly where you can put stuff. But when you have a website\nor when you have a prompt,",
    "start": "2717670",
    "end": "2724240"
  },
  {
    "text": "you have these inputs and\nthen you need to format them to always work, even if\nthe input is really big, then you might have to cut something down.",
    "start": "2724240",
    "end": "2731260"
  },
  {
    "text": "And so the idea was, okay,\nlet's take some inspiration. What's the best way to design websites?",
    "start": "2731260",
    "end": "2737440"
  },
  {
    "text": "Well, the thing that\nwe really like is React and the declarative approach where you use JSX in JavaScript,\nand then you declare,",
    "start": "2737440",
    "end": "2747060"
  },
  {
    "text": "\"This is what I want and I\nthink this has higher priority or this has higher Z index\nthan something else.\"",
    "start": "2749147",
    "end": "2756460"
  },
  {
    "text": "And then, you have this\nrendering engine in web design. It's like Chrome, and in our\ncase it's a preempt renderer,",
    "start": "2756460",
    "end": "2763750"
  },
  {
    "text": "which then fits everything onto the page. And as you declare, decide what you want and then it figures out what you want.",
    "start": "2763750",
    "end": "2770713"
  },
  {
    "text": "And so, we have found\nthat to be quite helpful and I think the role of\nit has shifted over time",
    "start": "2771730",
    "end": "2779050"
  },
  {
    "text": "where initially it was to fit to these small context windows. Now, it's really useful because it helps us with\nsplitting up the data",
    "start": "2779050",
    "end": "2787720"
  },
  {
    "text": "that goes into the prompt and\nthe actual rendering of it. And so, it's easier to debug",
    "start": "2787720",
    "end": "2793180"
  },
  {
    "text": "because you can change the\nrendering of the prompt and then try it on old prompts because you have the raw data\nthat went into the prompt,",
    "start": "2793180",
    "end": "2800290"
  },
  {
    "text": "and then you can see, \"Did\nmy change actually improve it for this entire eval set?\" - So, do you literally prompt with JSX?",
    "start": "2800290",
    "end": "2808059"
  },
  {
    "text": "- Yes, yes.\n- Yeah. - So it looks like React,\nthere are components. We have one component\nthat's a file component",
    "start": "2808060",
    "end": "2814960"
  },
  {
    "text": "and it takes in the Cursor. Usually, there's one line where\nthe Cursor is in your file",
    "start": "2814960",
    "end": "2820840"
  },
  {
    "text": "and that's probably\nthe most important line because that's the one you're looking at. And so, then you can give priorities, so that line has the highest priority,",
    "start": "2820840",
    "end": "2827109"
  },
  {
    "text": "and then you subtract one for every line that is farther away. And then eventually, when it's rendered,",
    "start": "2827110",
    "end": "2833170"
  },
  {
    "text": "it figures out how many\nlines can actually fit and it centers around that thing. - That's amazing.\n- Yeah.",
    "start": "2833170",
    "end": "2838445"
  },
  {
    "text": "- And you can do other fancy things where if you have lots of code blocks from the entire code base,\nyou could use retrieval",
    "start": "2838445",
    "end": "2845530"
  },
  {
    "text": "and things like embedding\nand re-ranking scores to add priorities for you\nthrough these components.",
    "start": "2845530",
    "end": "2850900"
  },
  {
    "text": "- So should humans when\nthey ask questions, also try to use something like that? Would it be beneficial to\nwrite JSX in the problem",
    "start": "2850900",
    "end": "2860181"
  },
  {
    "text": "or the whole idea is this\nshould be loose and messy? - I think our goal is that\nyou should just do whatever",
    "start": "2860181",
    "end": "2867850"
  },
  {
    "text": "is the most natural thing for you, and then our job is to figure out",
    "start": "2867850",
    "end": "2873160"
  },
  {
    "text": "how do we actually retrieve\nthe relative event things so that your thinking\nactually makes sense? - Well, this is the discussion I had",
    "start": "2873160",
    "end": "2878829"
  },
  {
    "text": "with Aravind of Perplexity\nis his whole idea is you should let the person\nbe as lazy as he wants.",
    "start": "2878830",
    "end": "2886059"
  },
  {
    "text": "- Yeah.\n- Mm-hmm. - Yeah, that's a beautiful thing, but I feel like you're allowed",
    "start": "2886060",
    "end": "2891640"
  },
  {
    "text": "to ask more of programmers, right? - Yes. - So if you say, \"Just do what you want,\"",
    "start": "2891640",
    "end": "2896710"
  },
  {
    "text": "I mean, humans are lazy. There's a tension between just being lazy versus provide more as be prompted,",
    "start": "2896710",
    "end": "2905590"
  },
  {
    "text": "almost like the system pressuring you or inspiring you to be articulate.",
    "start": "2905590",
    "end": "2912160"
  },
  {
    "text": "Not in terms of the\ngrammar of the sentences, but in terms of the depth of thoughts that you convey inside the prompts.",
    "start": "2912160",
    "end": "2918970"
  },
  {
    "text": "- I think even as a system gets closer to some level of perfection, often when you ask the\nmodel for something,",
    "start": "2918970",
    "end": "2926863"
  },
  {
    "text": "not enough intent is\nconveyed to know what to do. And there are a few ways\nto resolve that intent.",
    "start": "2928901",
    "end": "2934210"
  },
  {
    "text": "One is the simple thing of\nhaving the model just ask you, \"I'm not sure how to do these\nparts based on your query.",
    "start": "2934210",
    "end": "2941470"
  },
  {
    "text": "Could you clarify that?\" I think the other could be maybe",
    "start": "2941470",
    "end": "2947119"
  },
  {
    "text": "if there are five or six\npossible generations, \"Given the uncertainty\npresent in your query so far,",
    "start": "2949655",
    "end": "2954730"
  },
  {
    "text": "why don't we just actually\nshow you all of those and let you pick them?\" - How hard is it for the\nmodel to choose to talk back?",
    "start": "2954730",
    "end": "2963373"
  },
  {
    "text": "It's hard, how deal with the uncertainty. Do I choose to ask for more information",
    "start": "2966700",
    "end": "2974200"
  },
  {
    "text": "to reduce the ambiguity? - So, I mean, one of the things we do,",
    "start": "2974200",
    "end": "2978223"
  },
  {
    "text": "it's like a recent addition, is try to suggest files that you can add.",
    "start": "2979420",
    "end": "2984670"
  },
  {
    "text": "And while you're typing, one can guess what the uncertainty is",
    "start": "2984670",
    "end": "2990730"
  },
  {
    "text": "and maybe suggest that maybe\nyou're writing your API",
    "start": "2990730",
    "end": "2995730"
  },
  {
    "text": "and we can guess using the commits",
    "start": "2997240",
    "end": "3002170"
  },
  {
    "text": "that you've made\npreviously in the same file that the client and the\nserver is super useful",
    "start": "3003360",
    "end": "3009240"
  },
  {
    "text": "and there's a hard technical problem of how do you resolve\nit across all commits?",
    "start": "3009240",
    "end": "3015329"
  },
  {
    "text": "Which files are the most important given your current prompt? And we're still initial\nversion is ruled out",
    "start": "3015330",
    "end": "3022950"
  },
  {
    "text": "and I'm sure we can make\nit much more accurate. It's very experimental, but\nthen the idea is we show you,",
    "start": "3022950",
    "end": "3029880"
  },
  {
    "text": "do you just want to add this\nfile, this file, this file also to tell the model to\nedit those files for you?",
    "start": "3029880",
    "end": "3036273"
  },
  {
    "text": "Because if maybe you're making the API, you should also edit the\nclient and the server that is using the API and the\nother one resolving the API.",
    "start": "3037170",
    "end": "3044190"
  },
  {
    "text": "So that would be cool as\nboth there's the phase where you're writing a prompt.",
    "start": "3044190",
    "end": "3049950"
  },
  {
    "text": "Before you even click, \"Enter,\" maybe we can help resolve\nsome of the uncertainty. - To what degree do you\nuse agentic approaches?",
    "start": "3049950",
    "end": "3057090"
  },
  {
    "start": "3054000",
    "end": "3891000"
  },
  {
    "text": "How useful are agents? - We think agents are really, really cool.",
    "start": "3057090",
    "end": "3062701"
  },
  {
    "text": "- [Lex] (chuckles) Okay. - I think agents, it's like\nresembles like a human.",
    "start": "3062701",
    "end": "3068163"
  },
  {
    "text": "You can feel that you're\ngetting closer to AGI because you see a demo where\nit acts as a human would",
    "start": "3069732",
    "end": "3077600"
  },
  {
    "text": "and it's really, really cool. I think agents are not yet\nsuper useful for many things.",
    "start": "3077670",
    "end": "3084740"
  },
  {
    "text": "I think we're getting close to where they will actually be useful. And so, I think there are\ncertain types of tasks",
    "start": "3087120",
    "end": "3095540"
  },
  {
    "text": "where having an agent\nwould be really nice. I would love to have an agent.\nFor example, if we have a bug",
    "start": "3095550",
    "end": "3102120"
  },
  {
    "text": "where you sometimes can't\nCommand+C and Command+V inside our chat input box,",
    "start": "3102120",
    "end": "3108720"
  },
  {
    "text": "and that's a task that's\nsuper well specified. I just want to say in two sentences, \"This does not work, please fix it.\"",
    "start": "3108720",
    "end": "3114420"
  },
  {
    "text": "And then I would love to have an agent that just goes off, does it, and then a day later, I come\nback and I review the thing.",
    "start": "3114420",
    "end": "3122820"
  },
  {
    "text": "- You mean it goes, finds the right file? - Yeah, it finds the right files, it tries to reproduce the bug,",
    "start": "3122820",
    "end": "3128789"
  },
  {
    "text": "it fixes the bug and then it\nverifies that it's correct. And this could be a process\nthat takes a long time.",
    "start": "3128790",
    "end": "3134790"
  },
  {
    "text": "And so, I think I would love to have that. And then I think a lot of programming,",
    "start": "3134790",
    "end": "3140760"
  },
  {
    "text": "there is often this belief that agents will take\nover all of programming.",
    "start": "3140760",
    "end": "3144753"
  },
  {
    "text": "I don't think we think\nthat that's the case because a lot of programming, a lot of the value is in iterating,",
    "start": "3146190",
    "end": "3152490"
  },
  {
    "text": "or you don't actually want\nto specify something upfront because you don't really\nknow what you want until you have seen an initial version",
    "start": "3152490",
    "end": "3159090"
  },
  {
    "text": "and then you want to iterate on that, and then you provide more information. And so, for a lot of programming,",
    "start": "3159090",
    "end": "3164790"
  },
  {
    "text": "I think you actually want\na system that's instant, that gives you an initial\nversion instantly back and then you can iterate\nsuper, super quickly.",
    "start": "3164790",
    "end": "3172410"
  },
  {
    "text": "- What about something like\nthat recently came out, replica agent, that does also setting up",
    "start": "3172410",
    "end": "3178740"
  },
  {
    "text": "the development environment\nand solving software packages, configuring everything,\nconfiguring the databases",
    "start": "3178740",
    "end": "3183840"
  },
  {
    "text": "and actually deploying the app. Is that also in the set\nof things you dream about?",
    "start": "3183840",
    "end": "3189930"
  },
  {
    "text": "- I think so. I think that would be really cool. For certain types of programming,\nit would be really cool.",
    "start": "3189930",
    "end": "3195110"
  },
  {
    "text": "- Is that within scope of Cursor? - Yeah, we aren't actively\nworking on it right now.",
    "start": "3195110",
    "end": "3200823"
  },
  {
    "text": "We want to make the\nprogrammer's life easier and more fun and some things\nare just really tedious",
    "start": "3202860",
    "end": "3210030"
  },
  {
    "text": "and you need to go\nthrough a bunch of steps and you want to delegate that to an agent. And then some things you\ncan actually have an agent",
    "start": "3210030",
    "end": "3216029"
  },
  {
    "text": "in the background while you're working. Let's say you have a PR that's\nboth backend and frontend,",
    "start": "3216030",
    "end": "3221520"
  },
  {
    "text": "and you're working in the frontend, and then you can have a background agent that doesn't work and figure\nout what you're doing.",
    "start": "3221520",
    "end": "3227070"
  },
  {
    "text": "And then, when you get to\nthe backend part of your PR, then you have some initial piece of code",
    "start": "3227070",
    "end": "3232890"
  },
  {
    "text": "that you can iterate on. And so that would also be really cool.",
    "start": "3232890",
    "end": "3238530"
  },
  {
    "text": "- One of the things we\nalready talked about is speed, but I wonder if we can just\nlinger on that some more",
    "start": "3238530",
    "end": "3244609"
  },
  {
    "text": "in the various places that\nthe technical details involved",
    "start": "3244610",
    "end": "3249610"
  },
  {
    "text": "in making this thing really fast. So every single aspect of Cursor, most aspects of Cursor feel really fast.",
    "start": "3250020",
    "end": "3256380"
  },
  {
    "text": "Like I mentioned, the Apply\nis probably the slowest thing. I'm sorry, the pain on\nArvid's face as I say that.",
    "start": "3256380",
    "end": "3262015"
  },
  {
    "text": "- I know. It's a pain, it's a\npain that we're feeling and we're working on fixing it. (Arvid and Lex chuckling)",
    "start": "3262015",
    "end": "3267745"
  },
  {
    "text": "- Yeah, it says something that feels, I don't know what it is, like\none second or two seconds,",
    "start": "3267745",
    "end": "3273030"
  },
  {
    "text": "that feels slow. That means that actually shows that everything else is\njust really, really fast.",
    "start": "3273030",
    "end": "3279630"
  },
  {
    "text": "So, is there some technical details about how to make some of these models,\nhow to make the chat fast, how to make the diffs fast?",
    "start": "3279630",
    "end": "3287339"
  },
  {
    "text": "Is there something that\njust jumps to mind? - Yeah. So, we can go over a lot of\nthe strategies that we use. One interesting thing is cache warming.",
    "start": "3287340",
    "end": "3293883"
  },
  {
    "text": "You're probably going to\nuse some piece of context and you can know that before\nthe user's done typing.",
    "start": "3301740",
    "end": "3307470"
  },
  {
    "text": "So as we discussed before, reusing the KV cache\nresults in lower latency,",
    "start": "3307470",
    "end": "3313470"
  },
  {
    "text": "lower costs, cross requests. So as the user starts typing, you can immediately warm the cache with let's say the current file contents,",
    "start": "3313470",
    "end": "3321180"
  },
  {
    "text": "and then when they press Enter, there's very few tokens it\nactually has to pre-fill",
    "start": "3321180",
    "end": "3327089"
  },
  {
    "text": "and compute before\nstarting the generation. This will significantly lower TTFT. - Can you explain how KV cache works?",
    "start": "3327090",
    "end": "3333010"
  },
  {
    "text": "- [Aman] Yeah, so the\nway transformers work. (group chuckling) - I like it.",
    "start": "3333010",
    "end": "3339300"
  },
  {
    "text": "(group chuckling)",
    "start": "3339300",
    "end": "3342133"
  },
  {
    "text": "- The mechanism that allows transformers to not just independently\nlook at each token, but see previous tokens are the keys",
    "start": "3345480",
    "end": "3351330"
  },
  {
    "text": "and values to attention. And generally, the way attention works is you have at your\ncurrent token some query,",
    "start": "3351330",
    "end": "3358500"
  },
  {
    "text": "and then you've all the keys and values of all your previous tokens, which are some kind of representation",
    "start": "3358500",
    "end": "3364050"
  },
  {
    "text": "that the model stores internally\nof all the previous tokens in the prompt. And by default, when you're\ndoing a chat, the model has to,",
    "start": "3364050",
    "end": "3373070"
  },
  {
    "text": "for every single token, do this forward pass\nthrough the entire model.",
    "start": "3373950",
    "end": "3379350"
  },
  {
    "text": "That's a lot of matrix\nmultiplies that happen, and that is really, really slow. Instead, if you have already done that",
    "start": "3379350",
    "end": "3386190"
  },
  {
    "text": "and you stored the keys and values and you keep that in the GPU,",
    "start": "3386190",
    "end": "3389853"
  },
  {
    "text": "let's say I have to sort\nit for the last N tokens. If I now wanna compute the output token for the N+1nth token,",
    "start": "3391590",
    "end": "3398670"
  },
  {
    "text": "I don't need to pass those first N tokens through the entire model because I already have\nall those keys and values.",
    "start": "3398670",
    "end": "3406410"
  },
  {
    "text": "And so, you just need\nto do the forward pass through that last token. And then when you're doing attention,",
    "start": "3406410",
    "end": "3412109"
  },
  {
    "text": "you're reusing those keys and values that have been computed, which is the only kind of sequential part",
    "start": "3412110",
    "end": "3417690"
  },
  {
    "text": "or sequentially dependent\npart of the transformer. - Is there higher level caching\nof caching of the prompts",
    "start": "3417690",
    "end": "3424290"
  },
  {
    "text": "or that kind of stuff that could help?\n- I see. Yeah, there's other types\nof caching you can do.",
    "start": "3424290",
    "end": "3430593"
  },
  {
    "text": "One interesting thing that\nyou can do for Cursor Tab is you can basically predict ahead",
    "start": "3432600",
    "end": "3440609"
  },
  {
    "text": "as if the user would've\naccepted the suggestion and then trigger another request.",
    "start": "3440610",
    "end": "3446670"
  },
  {
    "text": "And so then you've cached,\nyou've done the speculative. It's a mix of speculation\nand caching, right? Because speculating what would\nhappen if they accepted it.",
    "start": "3446670",
    "end": "3454050"
  },
  {
    "text": "And then you have this value\nthat is cached this suggestion. And then when they press Tab,",
    "start": "3454050",
    "end": "3459600"
  },
  {
    "text": "the next one would be\nwaiting for them immediately. It's a clever heuristic/trick",
    "start": "3459600",
    "end": "3464589"
  },
  {
    "text": "that uses a higher level caching. It feels fast despite there\nnot actually being any changes",
    "start": "3465510",
    "end": "3473790"
  },
  {
    "text": "in the model. - And if you can make\nthe KV cache smaller, one of the advantages you get is like maybe you can speculate even more.",
    "start": "3473790",
    "end": "3479940"
  },
  {
    "text": "Maybe you can guess, \"Here's the 10 things\nthat could be useful,",
    "start": "3479940",
    "end": "3483843"
  },
  {
    "text": "predict the next 10,\" and then it's possible the\nuser hits the one of the 10. It's much higher chance than\nthe user hits the exact one",
    "start": "3485790",
    "end": "3493530"
  },
  {
    "text": "that you showed them. Maybe they type in other character and hit something else in the cache.",
    "start": "3493530",
    "end": "3498993"
  },
  {
    "text": "The general phenomena here is, I think it's also super useful for RL",
    "start": "3503100",
    "end": "3508380"
  },
  {
    "text": "is maybe a single sample from\nthe model isn't very good, but if you predict 10 different things,",
    "start": "3508380",
    "end": "3517950"
  },
  {
    "text": "turns out that one of the 10 that's right is the\nprobability is much higher. There's these passive K\ncurves and part of RL,",
    "start": "3517950",
    "end": "3526410"
  },
  {
    "text": "what RL does is you can exploit\nthis passive K phenomena to make many different predictions.",
    "start": "3526410",
    "end": "3533553"
  },
  {
    "text": "And one way to think about this, the model knows internally\nhas some uncertainty",
    "start": "3534481",
    "end": "3540780"
  },
  {
    "text": "over which of the key things is correct or which of the key things\ndoes the human wants? When we RL our Cursor Tab model,",
    "start": "3540780",
    "end": "3549483"
  },
  {
    "text": "one of the things we're\ndoing is we're predicting",
    "start": "3550320",
    "end": "3552820"
  },
  {
    "text": "which of the 100 different\nsuggestions the model produces is more amenable for humans?",
    "start": "3555688",
    "end": "3560700"
  },
  {
    "text": "Which of them do humans\nmore like than other things? Maybe there's something",
    "start": "3560700",
    "end": "3565950"
  },
  {
    "text": "where the model can predict very far ahead versus a little bit, maybe\nsomewhere in the middle.",
    "start": "3565950",
    "end": "3570273"
  },
  {
    "text": "And then you can give\na reward to the things that humans would like more and punish the things that it would like, and then train the model\nto output the suggestions",
    "start": "3572841",
    "end": "3580109"
  },
  {
    "text": "that humans would like more. You have these RL loops\nthat are very useful that exploit these passive K curves.",
    "start": "3580110",
    "end": "3585000"
  },
  {
    "text": "Aman, maybe can go into even more detail. - Yeah, it is a little\ndifferent than speed,",
    "start": "3585840",
    "end": "3590829"
  },
  {
    "text": "but technically, you tie it back in because you can get away\nwith the smaller model",
    "start": "3592170",
    "end": "3597269"
  },
  {
    "text": "if you RL your smaller model and it gets the same\nperformance as the bigger one.",
    "start": "3597270",
    "end": "3601077"
  },
  {
    "text": "So while I was mentioning stuff about KV, about reducing the size of your KV cache, there are other techniques there as well",
    "start": "3604209",
    "end": "3610140"
  },
  {
    "text": "that are really helpful for speed. So, kind of back in the day,\nall the way two years ago,",
    "start": "3610140",
    "end": "3617640"
  },
  {
    "text": "people mainly use multi-head attention, and I think there's been a migration towards more efficient attention\nschemes like group query",
    "start": "3617640",
    "end": "3625720"
  },
  {
    "text": "or multi-query attention, and this is really helpful for\nthen with larger batch sizes",
    "start": "3626640",
    "end": "3633570"
  },
  {
    "text": "being able to generate\nthe tokens much faster. The interesting thing here\nis this now has no effect",
    "start": "3633570",
    "end": "3641009"
  },
  {
    "text": "on that time to first\ntoken pre-fill speed. The thing this matters for\nis now generating tokens.",
    "start": "3641010",
    "end": "3648810"
  },
  {
    "text": "And why is that? 'Cause when you're generating tokens, instead of being bottlenecked",
    "start": "3648810",
    "end": "3654540"
  },
  {
    "text": "by doing these super\nparallelizable matrix multiplies across all your tokens,\nyou're bottlenecked,",
    "start": "3654540",
    "end": "3659859"
  },
  {
    "text": "for a long context with large batch sizes, by how quickly you can read\nthose cache, keys, and values.",
    "start": "3661200",
    "end": "3667829"
  },
  {
    "text": "And so then that's memory bandwidth, and how can we make this faster? We can try to compress the\nsize of these keys and values.",
    "start": "3667830",
    "end": "3675240"
  },
  {
    "text": "So multi-query attention is\nthe most aggressive of these. Where normally with multi-head attention,",
    "start": "3675240",
    "end": "3680310"
  },
  {
    "text": "you have some number of, quote,\nunquote, \"attention heads,\"",
    "start": "3680310",
    "end": "3684327"
  },
  {
    "text": "and some number of query heads. Multi-query just\npreserves the query heads,",
    "start": "3686160",
    "end": "3692160"
  },
  {
    "text": "gets rid of all the key value heads. So there's only one\nkind of key value head,",
    "start": "3692160",
    "end": "3697860"
  },
  {
    "text": "and there's all the remaining query heads. With group query, you instead\npreserve all the query heads.",
    "start": "3697860",
    "end": "3706310"
  },
  {
    "text": "There are fewer heads\nfor the keys and values, but you're not reducing it to just one. But anyways, the whole point here",
    "start": "3712200",
    "end": "3717300"
  },
  {
    "text": "is you're just reducing\nthe size of your KV cache. - And then there is MLA.",
    "start": "3717300",
    "end": "3722490"
  },
  {
    "text": "- Yeah, multi-latent. That's a little more complicated. And the way that this works is\nit kind of turns the entirety",
    "start": "3722490",
    "end": "3730350"
  },
  {
    "text": "of your keys and values\nacross all your heads into this one latent vector",
    "start": "3730350",
    "end": "3736740"
  },
  {
    "text": "that has then kind of\nexpanded in for its time. - But MLA is from this\ncompany called DeepSeek.",
    "start": "3736740",
    "end": "3743970"
  },
  {
    "text": "It's quite an interesting algorithm. Maybe the key idea is in\nboth MQA and in other places,",
    "start": "3743970",
    "end": "3751310"
  },
  {
    "text": "what you're doing is you're\nreducing the number of KV heads.",
    "start": "3752520",
    "end": "3757520"
  },
  {
    "text": "And the advantage you get from\nthat is there's less of them.",
    "start": "3758670",
    "end": "3763323"
  },
  {
    "text": "You want each of the keys and values to actually be different. So, one way to reduce the size is you keep one big shared vector",
    "start": "3769980",
    "end": "3779309"
  },
  {
    "text": "for all the keys and values, and then you have smaller\nvectors for every single token. So that you can store the\nonly the smaller thing",
    "start": "3779310",
    "end": "3787530"
  },
  {
    "text": "as some sort of low-rank reduction. At the end of the time,",
    "start": "3787530",
    "end": "3792809"
  },
  {
    "text": "when you eventually wanna\ncompute the final thing, remember that your memory band, which means that you still\nhave some compute left",
    "start": "3792810",
    "end": "3800310"
  },
  {
    "text": "that you can use for these things. And if you can expand the\nlatent vector back out",
    "start": "3800310",
    "end": "3806597"
  },
  {
    "text": "and somehow this is far more efficient because you're reducing, for example,",
    "start": "3807390",
    "end": "3813299"
  },
  {
    "text": "maybe you're reducing vec 32 or something like the size of the\nvector that you're keeping. - Yeah, there's perhaps some richness",
    "start": "3813300",
    "end": "3819930"
  },
  {
    "text": "in having a separate\nset of keys and values and query that kind of pairwise match up",
    "start": "3819930",
    "end": "3825960"
  },
  {
    "text": "versus compressing that all into one in that interaction at least.",
    "start": "3825960",
    "end": "3831359"
  },
  {
    "text": "- Okay, and all of that is\ndealing with being memory bound. - Yeah.",
    "start": "3831360",
    "end": "3836213"
  },
  {
    "text": "- I mean, ultimately, how does that map to the user experience? Trying to get the- - Yeah, the two things that it maps to",
    "start": "3837960",
    "end": "3843900"
  },
  {
    "text": "is you can now make\nyour cache a lot larger because you've less space\nallocated for the KV cache.",
    "start": "3843900",
    "end": "3849569"
  },
  {
    "text": "You can maybe cache a\nlot more aggressively in a lot more things, so\nyou get more cache hits, which are helpful for reducing\nthe time to first token",
    "start": "3849570",
    "end": "3857310"
  },
  {
    "text": "for the reasons that were\nkind of described earlier. And then the second being, when you start doing inference\nwith more and more requests",
    "start": "3857310",
    "end": "3864150"
  },
  {
    "text": "and larger and larger batch sizes, you don't see much of a slowdown",
    "start": "3864150",
    "end": "3868030"
  },
  {
    "text": "as it's generating the\ntokens at the speed of that. - Well, it also allows you\nto make your prompt bigger for certain-\n- Yeah, yeah.",
    "start": "3869340",
    "end": "3874829"
  },
  {
    "text": "So, the size of your KV cache is both the size of all your prompts,",
    "start": "3874830",
    "end": "3881280"
  },
  {
    "text": "multiplied by the number of prompts being processed in parallel. So you could increase either\nthose dimensions, right? The batch size or the size of your prompts",
    "start": "3881280",
    "end": "3888180"
  },
  {
    "text": "without degrading the\nlatency of generating tokens. - Arvid, you wrote a blog post,",
    "start": "3888180",
    "end": "3893197"
  },
  {
    "start": "3891000",
    "end": "4171000"
  },
  {
    "text": "\"Shadow Workspace: Iterating\non Code in the Background.\" So, what's going on?",
    "start": "3893197",
    "end": "3898617"
  },
  {
    "text": "- So, to be clear, we want there to be a lot of stuff\nhappening in the background, and we're experimenting\nwith a lot of things.",
    "start": "3898617",
    "end": "3905790"
  },
  {
    "text": "Right now, we don't have\nmuch stuff happening other than the cache warming",
    "start": "3905790",
    "end": "3910950"
  },
  {
    "text": "or figuring out the right context that goes into your command\nkey prompts, for example.",
    "start": "3910950",
    "end": "3916500"
  },
  {
    "text": "But the idea is if you can\nactually spend computation in the background, then\nyou can help the user",
    "start": "3916500",
    "end": "3924410"
  },
  {
    "text": "maybe at a slightly longer time horizon than just predicting the next few lines",
    "start": "3924750",
    "end": "3930090"
  },
  {
    "text": "that you're gonna make. But actually in the next 10 minutes, what are you going to make? And by doing it in background,",
    "start": "3930090",
    "end": "3935700"
  },
  {
    "text": "you can spend more computation doing that. And so the idea of the Shadow\nWorkspace that we implemented,",
    "start": "3935700",
    "end": "3942720"
  },
  {
    "text": "and we use it internally for experiments is that to actually get advantage",
    "start": "3942720",
    "end": "3949290"
  },
  {
    "text": "of doing stuff in the background, you want some kind of feedback signal to give back to the model",
    "start": "3949290",
    "end": "3954839"
  },
  {
    "text": "because otherwise, you\ncan get higher performance by just letting the\nmodel think for longer,",
    "start": "3954840",
    "end": "3960750"
  },
  {
    "text": "and so o1 is a good example of that. But another way you\ncan improve performance is by letting the model\niterate and get feedback.",
    "start": "3960750",
    "end": "3968040"
  },
  {
    "text": "And so, one very important\npiece of feedback when you're a programmer\nis the language server,",
    "start": "3968040",
    "end": "3974970"
  },
  {
    "text": "which is this thing, it exists\nfor most different languages,",
    "start": "3974970",
    "end": "3979970"
  },
  {
    "text": "and there's a separate\nlanguage server per language. And it can tell you, \"You're\nusing the wrong type here,\"",
    "start": "3980070",
    "end": "3986130"
  },
  {
    "text": "and then gives you an error, or it can allow you to go to definition and understands the\nstructure of your code.",
    "start": "3986130",
    "end": "3991803"
  },
  {
    "text": "There is a TypeScript\nlanguage server developed by the TypeScript people, a Rust language server\ndeveloped by the Rust people, and then they all interface",
    "start": "3995130",
    "end": "4001490"
  },
  {
    "text": "over the language server\nprotocol to VS Code. So that VS Code doesn't need to have all of the different languages\nbuilt into VS Code",
    "start": "4001490",
    "end": "4007490"
  },
  {
    "text": "but rather you can use the\nexisting compiler infrastructure. - For linting purposes, what- - It's for linting.",
    "start": "4007490",
    "end": "4013400"
  },
  {
    "text": "It's for going to definition, and for seeing the right\ntypes that you're using.",
    "start": "4013400",
    "end": "4018980"
  },
  {
    "text": "- So it's doing type checking also? - Yes, type checking\nand going to references.",
    "start": "4018980",
    "end": "4023963"
  },
  {
    "text": "And that's like when you're\nworking in a big project, you kind of need that. If you don't have that, it's really hard to code in a big project.",
    "start": "4025040",
    "end": "4032750"
  },
  {
    "text": "- Can you say, again, how\nthat's being used inside Cursor, the language server protocol\ncommunication thing?",
    "start": "4032750",
    "end": "4040460"
  },
  {
    "text": "- So it's being used in Cursor\nto show to the programmer just like in VS Code, but then the idea is you want to show that same\ninformation to the models,",
    "start": "4040460",
    "end": "4048230"
  },
  {
    "text": "the IM models, and you\nwant to do that in a way that doesn't affect the user",
    "start": "4048230",
    "end": "4053360"
  },
  {
    "text": "because you want to do it in background. And so the idea behind\nthe Shadow Workspace was, okay, one way we can do this\nis we spawn a separate window",
    "start": "4053360",
    "end": "4062980"
  },
  {
    "text": "of Cursor that's hidden, and\nso you can set this flag in it and like turn it's hidden.",
    "start": "4063890",
    "end": "4068930"
  },
  {
    "text": "There is a window but you\ndon't actually see it. And inside of this window,\nthe AI agents can modify code",
    "start": "4068930",
    "end": "4074420"
  },
  {
    "text": "however they want as long\nas they don't save it because it's still the same folder, and then can get feedback from the linters",
    "start": "4074420",
    "end": "4081770"
  },
  {
    "text": "and go to definition and\niterate on their code. - So literally run\neverything in the background,",
    "start": "4081770",
    "end": "4086783"
  },
  {
    "text": "right, maybe even run the code. - So that's the eventual version\nand that's what you want.",
    "start": "4087620",
    "end": "4093657"
  },
  {
    "text": "And a lot of the blog\npost is actually about how do you make that happen",
    "start": "4093657",
    "end": "4099139"
  },
  {
    "text": "because it's a little bit tricky. You want it to be on the user's machine so that it exactly mirrors\nthe user's environment.",
    "start": "4099140",
    "end": "4105889"
  },
  {
    "text": "And then on Linux, you\ncan do this cool thing where you can actually\nmirror the file system",
    "start": "4105890",
    "end": "4111380"
  },
  {
    "text": "and have the AI make changes to the files, and it thinks that it's\noperating on the file level,",
    "start": "4111380",
    "end": "4118670"
  },
  {
    "text": "but actually, that's stored in memory and you can create this\nkernel-like extension",
    "start": "4118670",
    "end": "4125810"
  },
  {
    "text": "to make it work. Whereas on Mac and Windows, it's a little bit more difficult,",
    "start": "4125810",
    "end": "4131903"
  },
  {
    "text": "but it's a fun technical\nproblem, so that's why. - One may be hacky but interesting idea that I like is holding a lock on saving.",
    "start": "4134240",
    "end": "4142159"
  },
  {
    "text": "And so basically, you can\nthen have the language model kind of hold the lock on saving to disk,",
    "start": "4142160",
    "end": "4147259"
  },
  {
    "text": "and then instead of you operating in the ground truth version of the files that are saved to disk,\nyou actually are operating",
    "start": "4147260",
    "end": "4153290"
  },
  {
    "text": "what was the Shadow Workspace before and these unsaved things\nthat only exist in memory that you still get linter\nerrors for, and you can code in.",
    "start": "4153290",
    "end": "4159080"
  },
  {
    "text": "And then when you try to maybe run code, it's just like there's a small\nwarning that there's a lock, and then you kind of\nwill take back the lock",
    "start": "4159080",
    "end": "4165770"
  },
  {
    "text": "from the language server if you're trying to do things concurrently or from the Shadow Workspace if you're trying to do\nthings concurrently.",
    "start": "4165770",
    "end": "4171740"
  },
  {
    "start": "4171000",
    "end": "4498000"
  },
  {
    "text": "- That's such an exciting\nfuture by the way. It's a bit of a tangent, but to allow a model to change files,",
    "start": "4171740",
    "end": "4178400"
  },
  {
    "text": "it's scary for people\nbut it's really cool, to be able to just let the\nagent do a set of tasks",
    "start": "4178400",
    "end": "4186020"
  },
  {
    "text": "and you come back the next\nday and kind of observe, like it's a colleague\nor something like that.",
    "start": "4186020",
    "end": "4192410"
  },
  {
    "text": "- And I think there may be\ndifferent versions of runability for the simple things\nwhere you're doing things",
    "start": "4192410",
    "end": "4198800"
  },
  {
    "text": "in the span of a few minutes\non behalf of the user as they're programming, it makes sense to make something work\nlocally in their machine.",
    "start": "4198800",
    "end": "4205790"
  },
  {
    "text": "I think for the more aggressive things where you're making larger changes that take longer periods of time, you'll probably wanna do this",
    "start": "4205790",
    "end": "4211640"
  },
  {
    "text": "in some sandbox remote environment and that's another\nincredibly tricky problem of how do you exactly reproduce",
    "start": "4211640",
    "end": "4218869"
  },
  {
    "text": "or mostly reproduce to the point of it being effectively\nequivalent for running code the user's environment\nwith this remote sandbox.",
    "start": "4218870",
    "end": "4227210"
  },
  {
    "text": "- I'm curious what kind of\nagents you want for coding? Do you want them to find bugs?",
    "start": "4227210",
    "end": "4232910"
  },
  {
    "text": "Do you want them to\nimplement new features? What agents do you want? - So by the way, when\nI think about agents,",
    "start": "4232910",
    "end": "4238579"
  },
  {
    "text": "I don't think just about coding. I think so for this particular podcast,",
    "start": "4238580",
    "end": "4245120"
  },
  {
    "text": "there's video editing\nand if you look in Adobe, there's code behind.",
    "start": "4245120",
    "end": "4250310"
  },
  {
    "text": "It's very poorly documented code, but you can interact with\nPremiere, for example, using code,",
    "start": "4250310",
    "end": "4256460"
  },
  {
    "text": "and basically all the uploading,\neverything I do on YouTube, everything as you could probably imagine,",
    "start": "4256460",
    "end": "4261469"
  },
  {
    "text": "I do all of that through code\nand including translation and overdubbing, all of this.",
    "start": "4261470",
    "end": "4266630"
  },
  {
    "text": "So, I envision all of\nthose kinds of tasks. So automating many of the tasks",
    "start": "4266630",
    "end": "4271850"
  },
  {
    "text": "that don't have to do directly\nwith the editing, so that. Okay, that's what I was thinking about.",
    "start": "4271850",
    "end": "4277010"
  },
  {
    "text": "But in terms of coding, I would be fundamentally\nthinking about bug finding,",
    "start": "4277010",
    "end": "4283943"
  },
  {
    "text": "many levels of kind of bug finding and also bug finding like logical bugs, not logical like spiritual\nbugs or something.",
    "start": "4285350",
    "end": "4292571"
  },
  {
    "text": "(group chuckling) Ones like big directions\nof implementation, that kind of stuff.",
    "start": "4292571",
    "end": "4298670"
  },
  {
    "text": "- Magical (indistinct) and bug finding. - Yeah, I mean, it's really interesting that these models are\nso bad at bug finding",
    "start": "4298670",
    "end": "4304830"
  },
  {
    "text": "when just naively prompted to find a bug. They're incredibly poorly calibrated.",
    "start": "4305750",
    "end": "4311330"
  },
  {
    "text": "- Even the smartest models.\n- Exactly, even o1. - How do you explain that?",
    "start": "4311330",
    "end": "4316490"
  },
  {
    "text": "Is there a good intuition? - I think these models are\nreally strong reflection",
    "start": "4316490",
    "end": "4322070"
  },
  {
    "text": "of the pre-training distribution, and I do think they generalize as the loss gets lower and lower,",
    "start": "4322070",
    "end": "4328520"
  },
  {
    "text": "but I don't think the loss is low enough such that they're really\nfully generalizing on code.",
    "start": "4328520",
    "end": "4336470"
  },
  {
    "text": "The things that we use these things for, the frontier models that\nthey're quite good at, are really code generation\nand question answering.",
    "start": "4336470",
    "end": "4345080"
  },
  {
    "text": "And these things exist in massive\nquantities in pre-training with all of the code\nin GitHub on the scale",
    "start": "4345080",
    "end": "4351290"
  },
  {
    "text": "of many, many trillions of\ntokens and questions and answers on things like stack overflow\nand maybe GitHub issues.",
    "start": "4351290",
    "end": "4359180"
  },
  {
    "text": "And so, when you try to\npush one of these things that really don't exist very much online,",
    "start": "4359180",
    "end": "4366233"
  },
  {
    "text": "for example, the Cursor Tab objective of predicting the next edit\ngiven the edits done so far, the brittleness kind of shows.",
    "start": "4367250",
    "end": "4373730"
  },
  {
    "text": "And then bug detection\nis another great example, where there aren't\nreally that many examples of actually detecting real\nbugs and then proposing fixes",
    "start": "4373730",
    "end": "4381030"
  },
  {
    "text": "and the models just kind\nof really struggle at it. But I think it's a question\nof transferring the model",
    "start": "4382820",
    "end": "4388670"
  },
  {
    "text": "in the same way that you\nget this fantastic transfer from pre-trained models\njust on code in general",
    "start": "4388670",
    "end": "4394730"
  },
  {
    "text": "to the Cursor Tab objective. You'll see a very, very similar thing with generalized models\nthat are really good at code",
    "start": "4394730",
    "end": "4401600"
  },
  {
    "text": "to bug detection. It just takes a little bit of kind nudging in that direction. - Look, to be clear, I think, they understand code really well.",
    "start": "4401600",
    "end": "4408770"
  },
  {
    "text": "While they're being pre-trained, the representation that's\nbeing built up almost certainly",
    "start": "4408770",
    "end": "4415010"
  },
  {
    "text": "like somewhere in the\nstream, the model knows that maybe there's\nsomething sketchy going on.",
    "start": "4415010",
    "end": "4421943"
  },
  {
    "text": "Part of it is that humans\nare really calibrated on which bugs are really important.",
    "start": "4430880",
    "end": "4434813"
  },
  {
    "text": "It's not just actually saying\nthere's something sketchy. It's like it's this sketchy trivial, it's this sketchy like you're\ngonna take the server down.",
    "start": "4436716",
    "end": "4444019"
  },
  {
    "text": "Part of it is maybe the cultural knowledge of why is a staff engineer is good",
    "start": "4444020",
    "end": "4449067"
  },
  {
    "text": "because they know that three years ago someone wrote a really\nsketchy piece of code",
    "start": "4450800",
    "end": "4456020"
  },
  {
    "text": "that took the server down. (group chuckling)",
    "start": "4456020",
    "end": "4461617"
  },
  {
    "text": "This thing is an experiment. So, a few bugs are fine, you're just trying to experiment",
    "start": "4463760",
    "end": "4468770"
  },
  {
    "text": "and get the feel of the thing. And so if the model gets really annoying when you're writing an\nexperiment, that's really bad,",
    "start": "4468770",
    "end": "4474619"
  },
  {
    "text": "but if you're writing\nsomething for super production, you're writing a database. You're writing code in\nPostgres or Linux or whatever.",
    "start": "4474620",
    "end": "4480949"
  },
  {
    "text": "You're Linus Torvalds. It's sort of unacceptable\nto have even an edge case and just having the calibration\nof how paranoid is the user.",
    "start": "4480950",
    "end": "4490420"
  },
  {
    "text": "- But even then if you're\nputting in a maximum paranoia, it still just doesn't quite get it.",
    "start": "4491660",
    "end": "4497719"
  },
  {
    "text": "- Yeah, yeah, yeah. - I mean, but this is hard\nfor humans too to understand",
    "start": "4497720",
    "end": "4502940"
  },
  {
    "start": "4498000",
    "end": "5169000"
  },
  {
    "text": "which line of code is\nimportant, which is not. I think one of your\nprinciples on a website says",
    "start": "4502940",
    "end": "4508400"
  },
  {
    "text": "if a code can do a lot of damage, one should add a comment that say,",
    "start": "4508400",
    "end": "4513567"
  },
  {
    "text": "\"This line of code is dangerous.\" - And all caps, repeated 10 times.",
    "start": "4513567",
    "end": "4520132"
  },
  {
    "text": "(group chuckling) - No, you say for every\nsingle line of code inside the function you have\nto, and that's quite profound,",
    "start": "4520132",
    "end": "4528080"
  },
  {
    "text": "that says something about human beings because the engineers move on,",
    "start": "4528080",
    "end": "4533420"
  },
  {
    "text": "even the same person might just forget how it can sink the\nTitanic a single function.",
    "start": "4533420",
    "end": "4539240"
  },
  {
    "text": "You might not intuit that quite clearly by looking at the single piece of code. - Yeah, and I think that\none is partially also",
    "start": "4539240",
    "end": "4546080"
  },
  {
    "text": "for today's AI models where if you actually write\ndangerous, dangerous, dangerous",
    "start": "4546080",
    "end": "4551680"
  },
  {
    "text": "in every single line, the models will pay more attention to that",
    "start": "4551680",
    "end": "4557540"
  },
  {
    "text": "and will be more likely to\nfind bugs in that region. - That's actually just straight\nup a really good practice",
    "start": "4557540",
    "end": "4563600"
  },
  {
    "text": "of labeling code of how\nmuch damages can do. - Yeah, I mean, it's controversial.",
    "start": "4563600",
    "end": "4570200"
  },
  {
    "text": "Some people think it's ugly. Sualeh does not like it. - In fact, I actually think\nthis is one of the things",
    "start": "4570200",
    "end": "4576710"
  },
  {
    "text": "I learned from Arvid. Aesthetically, I don't like it,",
    "start": "4576710",
    "end": "4582110"
  },
  {
    "text": "but I think there's certainly something where it's useful for the models and humans just forget a lot,",
    "start": "4582110",
    "end": "4588230"
  },
  {
    "text": "and it's really easy to\nmake a small mistake.",
    "start": "4588230",
    "end": "4590693"
  },
  {
    "text": "Just bring down the server. Of course, we test a lot and whatever,",
    "start": "4594234",
    "end": "4599390"
  },
  {
    "text": "but there's always these things that you have to be very careful. - Yeah, like with just normal docstrings,",
    "start": "4599390",
    "end": "4604400"
  },
  {
    "text": "I think people will often just skim it when making a change and think,\n\"Oh, I know how to do this,\"",
    "start": "4604400",
    "end": "4609677"
  },
  {
    "text": "and you really need to\npoint it out to them so that doesn't slip through. - Yeah, you have to be reminded",
    "start": "4610970",
    "end": "4617030"
  },
  {
    "text": "that you could do a lot of damage, that's like we don't\nreally think about that.",
    "start": "4617030",
    "end": "4622099"
  },
  {
    "text": "You think about, \"Okay, how\ndo I figure out how this works so I can improve it?\" You don't think about the\nother direction that it could-",
    "start": "4622100",
    "end": "4628677"
  },
  {
    "text": "- Until we have formal\nverification for everything, then you can do whatever you want",
    "start": "4628677",
    "end": "4634250"
  },
  {
    "text": "and you know for certain that\nyou have not introduced a bug if the proof pass. - Well, concretely, what\ndo you think that future",
    "start": "4634250",
    "end": "4640580"
  },
  {
    "text": "would look like? - I think people will just\nnot write to tests anymore.",
    "start": "4640580",
    "end": "4646103"
  },
  {
    "text": "You write a function, the\nmodel will suggest a spec, and you review the spec. And in the meantime, smart\nreasoning model computes a proof",
    "start": "4650424",
    "end": "4659230"
  },
  {
    "text": "that the implementation follows the spec, and I think that happens\nfor most functions.",
    "start": "4659450",
    "end": "4664489"
  },
  {
    "text": "- Do you think this gets at a little bit some of the stuff you\nwere talking about earlier with the difficulty of specifying intent for what you want with software,",
    "start": "4664490",
    "end": "4671660"
  },
  {
    "text": "where sometimes it might be because the intent is\nreally hard to specify, it's also then going to\nbe really hard to prove",
    "start": "4671660",
    "end": "4676700"
  },
  {
    "text": "that it's actually matching\nwhatever your intent is? - You think that spec is hard to generate?",
    "start": "4676700",
    "end": "4680903"
  },
  {
    "text": "- Yeah, or just for a given spec.",
    "start": "4681800",
    "end": "4686800"
  },
  {
    "text": "I think there is a question of, can you actually do the\nformal verification? Is that possible? I think that there's more to\ndig into there, but then also-",
    "start": "4688071",
    "end": "4695900"
  },
  {
    "text": "- Even if you have the spec? - If you have the spec-\n- Even if you have the spec, is the spec written in natural language?",
    "start": "4695900",
    "end": "4701060"
  },
  {
    "text": "Or is it- - No, the spec would be formal. - But how easier would\nthat be (indistinct). - Okay, so then I think\nthat you care about things",
    "start": "4701060",
    "end": "4708080"
  },
  {
    "text": "that are not going to\nbe easily well specified in the spec language. - I see, I see, yeah, yeah. - Would be maybe an argument\nagainst formal verification",
    "start": "4708080",
    "end": "4715190"
  },
  {
    "text": "is all you need. - The worry is there's\nthis massive document- - Replacing something\nlike unit tests, sure.",
    "start": "4715190",
    "end": "4721639"
  },
  {
    "text": "- Yeah, yeah. I think you can probably also\nevolve the spec languages",
    "start": "4721640",
    "end": "4727040"
  },
  {
    "text": "to capture some of the things that they don't really capture right now.",
    "start": "4727040",
    "end": "4731153"
  },
  {
    "text": "I don't know, I think it's very exciting. - And you're speaking not\njust about single functions,",
    "start": "4732800",
    "end": "4737930"
  },
  {
    "text": "you're speaking about entire code bases. - I think entire code bases is harder, but that is what I would love to have",
    "start": "4737930",
    "end": "4743670"
  },
  {
    "text": "and I think it should be possible. There's a lot of work recently",
    "start": "4743670",
    "end": "4749180"
  },
  {
    "text": "where you can prove formally\nverified down to the hardware.",
    "start": "4749180",
    "end": "4753803"
  },
  {
    "text": "You formally verify the C code,\nand then you formally verify through the GCC compiler, and then through the Verilog\ndown to the hardware.",
    "start": "4755210",
    "end": "4762293"
  },
  {
    "text": "And that's incredibly big\nsystem, but it actually works. And I think big code bases\nare sort of similar in that",
    "start": "4763190",
    "end": "4768857"
  },
  {
    "text": "and they're like multi-layered system. And if you can decompose it\nand formally verify each part,",
    "start": "4768857",
    "end": "4775070"
  },
  {
    "text": "then I think it should be possible. I think this specification\nproblem is a real problem. - How do you handle side\neffects or how do you handle,",
    "start": "4775070",
    "end": "4782330"
  },
  {
    "text": "I guess, external dependencies\nlike calling the Stripe API? - Maybe Stripe would write\na spec for their API.",
    "start": "4782330",
    "end": "4788480"
  },
  {
    "text": "- But you can't do this for everything. Can you do this for everything you use?",
    "start": "4788480",
    "end": "4792500"
  },
  {
    "text": "Maybe people will use\nlanguage models as primitives in the programs they write, and there's a dependence on it",
    "start": "4795320",
    "end": "4800719"
  },
  {
    "text": "and how do you now include that? - I think you might be\nable to prove that still.",
    "start": "4800720",
    "end": "4805940"
  },
  {
    "text": "- Prove what about language models? - I think it feels possible\nthat you could actually prove that a language model\nis aligned, for example,",
    "start": "4805940",
    "end": "4814940"
  },
  {
    "text": "or you can prove that it\nactually gives the right answer.",
    "start": "4814940",
    "end": "4818903"
  },
  {
    "text": "- That's the dream. - Yeah, I mean, if it's possible. That's your I have a dream speech.",
    "start": "4820458",
    "end": "4826040"
  },
  {
    "text": "If it's possible, that will certainly help with making sure your\ncode doesn't have bugs",
    "start": "4826040",
    "end": "4831890"
  },
  {
    "text": "and making sure AI doesn't\ndestroy all human civilization. So, the full spectrum of AI\nsafety to just bug finding.",
    "start": "4831890",
    "end": "4839302"
  },
  {
    "text": "So, you said the models\nstruggle with bug finding. What's the hope? - My hope initially is, and I\ncan let Michael chime in too,",
    "start": "4840440",
    "end": "4848570"
  },
  {
    "text": "but it was like it should first\nhelp with the stupid bugs.",
    "start": "4848570",
    "end": "4853570"
  },
  {
    "text": "It should query quickly, catch the stupid bugs off by one error. Sometimes you write something in a comment",
    "start": "4854720",
    "end": "4860360"
  },
  {
    "text": "and do the other way. It's very common. I do this. I write less than in a comment and I maybe write the greater\nthan or something like that.",
    "start": "4860360",
    "end": "4867920"
  },
  {
    "text": "And the model is like,\n\"Yeah, you looks sketchy. You sure you wanna do that?\"",
    "start": "4867920",
    "end": "4871997"
  },
  {
    "text": "But eventually, it should be\nable to catch harder bugs too. - Yeah, and I think that\nit's also important to note",
    "start": "4873020",
    "end": "4879080"
  },
  {
    "text": "that having good bug, finding\nmodels feels necessary to get to the highest reaches",
    "start": "4879080",
    "end": "4884660"
  },
  {
    "text": "of having AI do more and\nmore programming for you. If AI is building more and\nmore of the system for you,",
    "start": "4884660",
    "end": "4891170"
  },
  {
    "text": "you need to not just\ngenerate but also verify. And without that, some of the problems that we've talked about\nbefore with programming,",
    "start": "4891170",
    "end": "4898010"
  },
  {
    "text": "with these models will\njust become untenable. So it's not just for humans\nlike you write a bug,",
    "start": "4898010",
    "end": "4905660"
  },
  {
    "text": "I write a bug, find the bug for me, but it's also being able\nto verify the AI's code and check it is really important.",
    "start": "4905660",
    "end": "4912530"
  },
  {
    "text": "- Yeah, and then how do\nyou actually do this? We have had a lot of\ncontentious dinner discussions of how do you actually train a bug model,",
    "start": "4912530",
    "end": "4917807"
  },
  {
    "text": "but one very popular idea\nis it's potentially easy to introduce a bug than\nactually finding the bug.",
    "start": "4917807",
    "end": "4925280"
  },
  {
    "text": "And so, you can train a\nmodel to introduce bugs in existing code, and then you can train\na reverse bug model then",
    "start": "4925280",
    "end": "4933740"
  },
  {
    "text": "that can find bugs using\nthis synthetic data. So that's one example,",
    "start": "4933740",
    "end": "4938633"
  },
  {
    "text": "but there are lots of ideas\nfor how to (indistinct). - You can also do a bunch of work not even at the model level\nof taking the biggest models",
    "start": "4939680",
    "end": "4947389"
  },
  {
    "text": "and then maybe giving them\naccess to a lot of information that's not just the code.",
    "start": "4947390",
    "end": "4952520"
  },
  {
    "text": "It's a hard problem to\nstare at a file and be like, \"Where's the bug?\" And that's hard for humans often, right?",
    "start": "4952520",
    "end": "4957947"
  },
  {
    "text": "And so often, you have to run the code and being able to see things like traces and step through a debugger,",
    "start": "4957947",
    "end": "4963260"
  },
  {
    "text": "there's another whole other direction where it tends toward that. - It could also be that there are two different\nproduct form factors here.",
    "start": "4963260",
    "end": "4968469"
  },
  {
    "text": "It could be that you have\na really specialty model that's quite fast that's\nrunning in the background and trying to spot bugs.",
    "start": "4968470",
    "end": "4973880"
  },
  {
    "text": "And it might be that sometimes\nto Arvid's earlier example about some nefarious input box bug.",
    "start": "4973880",
    "end": "4979613"
  },
  {
    "text": "You know there's a bug, you're not just checking hypothesis free, you're like, \"This is a problem,\nI really wanna solve it,\"",
    "start": "4981260",
    "end": "4986570"
  },
  {
    "text": "and you zap that with tons\nand tons and tons of compute, and you're willing to put\nin $50 to solve that bug or something even more.",
    "start": "4986570",
    "end": "4992810"
  },
  {
    "text": "- Have you thought about integrating money into this whole thing? I would pay probably a\nlarge amount of money if you found a bug or even generated code",
    "start": "4992810",
    "end": "5000310"
  },
  {
    "text": "that I really appreciated. I had a moment a few days ago\nwhen I started using Cursor where it generated perfect three functions",
    "start": "5000310",
    "end": "5007870"
  },
  {
    "text": "for interacting with the\nYouTube API to update captions",
    "start": "5012760",
    "end": "5017760"
  },
  {
    "text": "for localization in different languages. The API documentation is not\nvery good and the code across.",
    "start": "5019630",
    "end": "5026560"
  },
  {
    "text": "I googled it for a while. I couldn't find exactly, there's a lot of confusing information, and Cursor generated perfectly.",
    "start": "5026560",
    "end": "5033760"
  },
  {
    "text": "I just sit back, I read\nthe code, I was like, \"This is correct, I\ntested it, it's correct.\" I was like, \"I wanna tip.\"",
    "start": "5033760",
    "end": "5039487"
  },
  {
    "text": "I want a button that goes, \"Here's $5.\" One that's really good\njust to support the company",
    "start": "5040540",
    "end": "5045909"
  },
  {
    "text": "and support what the interface is. And the other is that\nprobably sends a strong signal like good job.",
    "start": "5045910",
    "end": "5052782"
  },
  {
    "text": "(all chuckling) So, there's this much stronger signal than just accepting the code, right? You just actually send a strong good job.",
    "start": "5052783",
    "end": "5060219"
  },
  {
    "text": "That and for bug finding, obviously, there's a lot of people",
    "start": "5060220",
    "end": "5064850"
  },
  {
    "text": "that would pay a huge amount of money for a bug bounty thing, right?",
    "start": "5066280",
    "end": "5072400"
  },
  {
    "text": "You guys think about that? - Yeah, it's a controversial\nidea inside the company. I think it depends",
    "start": "5072400",
    "end": "5078220"
  },
  {
    "text": "on how much you believe\nin humanity almost.",
    "start": "5078220",
    "end": "5082003"
  },
  {
    "text": "I think it would be really cool if you spend nothing to try to find a bug.",
    "start": "5083920",
    "end": "5089139"
  },
  {
    "text": "And if it doesn't find\na bug, you spend $0. And then if it does find a\nbug and you click accept,",
    "start": "5089140",
    "end": "5094600"
  },
  {
    "text": "then it also shows in parentheses like $1. And so, you spend $1 to accept the bug.",
    "start": "5094600",
    "end": "5100480"
  },
  {
    "text": "And then, of course, there's a worry like, \"Okay, we spent a lot of computation, maybe people will just copy paste.\"",
    "start": "5100480",
    "end": "5105576"
  },
  {
    "text": "I think that's a worry. Then there is also the\nworry that introducing money into the product.",
    "start": "5106660",
    "end": "5112513"
  },
  {
    "text": "It doesn't feel as fun anymore. You have to think about money. And all you want to\nthink about is the code,",
    "start": "5114880",
    "end": "5120927"
  },
  {
    "text": "and so maybe it actually makes more sense to separate it out, and you\npay some fee every month,",
    "start": "5120927",
    "end": "5126790"
  },
  {
    "text": "and then you get all of\nthese things for free. - But there could be a tipping component which is not like it cost this-",
    "start": "5126790",
    "end": "5133071"
  },
  {
    "text": "- Yes, but it still\nhas that dollar symbol. I think it's fine, but\nI also see the point where maybe you don't\nwant to introduce it.",
    "start": "5133071",
    "end": "5140199"
  },
  {
    "text": "- Yeah, I was gonna say the moment that feels like people do\nthis is when they share it. When they have this fantastic example, they just share it with their friends.",
    "start": "5140200",
    "end": "5146890"
  },
  {
    "text": "- There is also a potential world where there's a technical solution to this like honor system problem too, where if we can get to a place",
    "start": "5146890",
    "end": "5152830"
  },
  {
    "text": "where we understand the\noutput of the system more, I mean, to the stuff we were talking about with error checking with the LSP",
    "start": "5152830",
    "end": "5159400"
  },
  {
    "text": "and then also running the code. But if you could get to a place where you could actually somehow verify, \"Oh, I have fixed the bug,\"\nmaybe then the bounty system",
    "start": "5159400",
    "end": "5167230"
  },
  {
    "text": "doesn't need to rely on\nthe honor system too. - How much interaction is there between the terminal and the code?",
    "start": "5167230",
    "end": "5172540"
  },
  {
    "start": "5169000",
    "end": "5360000"
  },
  {
    "text": "How much information is gained from if you run the code in the terminal?",
    "start": "5172540",
    "end": "5176440"
  },
  {
    "text": "Can you do a loop where it runs the code and suggests how to change the code?",
    "start": "5178628",
    "end": "5184930"
  },
  {
    "text": "If the code and runtime gets an error? Is right now there's\nseparate worlds completely?",
    "start": "5184930",
    "end": "5190780"
  },
  {
    "text": "I know you can do control\nK inside the terminal to help you write the code. - You can use terminal context as well",
    "start": "5190780",
    "end": "5198130"
  },
  {
    "text": "inside of check Command+K\nkind of everything. We don't have the looping part yet,",
    "start": "5198130",
    "end": "5204670"
  },
  {
    "text": "so we suspect something like\nthis could make a lot of sense. There's a question of whether it happens in the foreground too or if\nit happens in the background",
    "start": "5204670",
    "end": "5211449"
  },
  {
    "text": "like what we've been discussing. - Sure, the background's pretty cool. I could be running the\ncode in different ways.",
    "start": "5211450",
    "end": "5216700"
  },
  {
    "text": "Plus there's a database side to this, which how do you protect it\nfrom not modifying the database, but okay.",
    "start": "5216700",
    "end": "5222223"
  },
  {
    "text": "(group chuckling) - I mean, there's certainly\ncool solutions there. There's this new API\nthat is being developed.",
    "start": "5222223",
    "end": "5229153"
  },
  {
    "text": "It's not in AWS, but\nit certainly, I think,",
    "start": "5230410",
    "end": "5235410"
  },
  {
    "text": "it's in PlanetScale. I don't know if PlanetScale was\nthe first one to you add it. It's this ability sort of\nadd branches to a database,",
    "start": "5235570",
    "end": "5242739"
  },
  {
    "text": "which is like if you're\nworking on a feature and you wanna test against\nthe broad database, but you don't actually want to test",
    "start": "5242740",
    "end": "5248949"
  },
  {
    "text": "against the broad database, you could add a branch to the database. And the way they do that\nis they add a branch to the write-ahead log.",
    "start": "5248950",
    "end": "5255220"
  },
  {
    "text": "And there's obviously a\nlot of technical complexity in doing it correctly. I guess database companies\nneed new things to do.",
    "start": "5255220",
    "end": "5262061"
  },
  {
    "text": "(group chuckling) They have good databases now.",
    "start": "5262061",
    "end": "5266626"
  },
  {
    "text": "And I think turbopuffer, which is one of the databases we use, is going to add maybe branching\nto the write-ahead log.",
    "start": "5267790",
    "end": "5277243"
  },
  {
    "text": "So maybe the AI agents will use branching, they'll test against some branch,",
    "start": "5279010",
    "end": "5285400"
  },
  {
    "text": "and it's gonna be a\nrequirement for the database to support branching or something.",
    "start": "5285400",
    "end": "5290818"
  },
  {
    "text": "- It would be really interesting if you could branch a file system, right? - Yeah. I feel like everything needs branching.",
    "start": "5290818",
    "end": "5296170"
  },
  {
    "text": "- [Aman] Yeah. - Yeah. The problem with the multiverse, right? (group chuckling)",
    "start": "5296170",
    "end": "5302573"
  },
  {
    "text": "If you branch on everything\nthat's like a lot. - There's obviously these\nsuper clever algorithms to make sure that you don't\nactually use a lot of space",
    "start": "5302574",
    "end": "5310120"
  },
  {
    "text": "or CPU or whatever. - Okay, this is a good place\nto ask about infrastructure. So, you guys mostly use AWS,",
    "start": "5310120",
    "end": "5316900"
  },
  {
    "text": "what are some interesting details? What are some interesting challenges? Why'd you choose AWS? Why is AWS still winning?",
    "start": "5316900",
    "end": "5324100"
  },
  {
    "text": "Hashtag. - AWS is just really, really good. It is really good.",
    "start": "5324100",
    "end": "5329083"
  },
  {
    "text": "Whenever you use an AWS product, you just know that it's going to work.",
    "start": "5331180",
    "end": "5337090"
  },
  {
    "text": "It might be absolute hell\nto go through the steps to set it up.",
    "start": "5337090",
    "end": "5342130"
  },
  {
    "text": "- Why is the interface so horrible? - Because it's. (chuckles) - It's just so good. It doesn't need to-\n- It's the nature of winning.",
    "start": "5342130",
    "end": "5348107"
  },
  {
    "text": "(group chuckling) - I think it's exactly, it's\njust nature they're winning. - Yeah, yeah. But AWS we can always\ntrust, it will always work.",
    "start": "5348107",
    "end": "5355210"
  },
  {
    "text": "And if there is a problem,\nit's probably your problem. (Lex chuckles)\nYeah.",
    "start": "5355210",
    "end": "5360940"
  },
  {
    "start": "5360000",
    "end": "6212000"
  },
  {
    "text": "- Okay, is there some\ninteresting challenges, you guys are pretty\nnew startup to scaling,",
    "start": "5360940",
    "end": "5366913"
  },
  {
    "text": "to so many people. - Yeah, I think that it has\nbeen an interesting journey",
    "start": "5367930",
    "end": "5374310"
  },
  {
    "text": "adding each extra zero to\nthe request per second. (Lex chuckles) You run into all of these\nwith the general components",
    "start": "5374410",
    "end": "5380170"
  },
  {
    "text": "you're using for caching and databases, run into issues as you make\nthings bigger and bigger, and now we're at the scale\nwhere we get into overflows",
    "start": "5380170",
    "end": "5386440"
  },
  {
    "text": "on our tables and things like that. And then, also there have\nbeen some custom systems",
    "start": "5386440",
    "end": "5391840"
  },
  {
    "text": "that we've built. For instance, our retrieval\nsystem for computing, a semantic index of your code\nbase and answering questions",
    "start": "5391840",
    "end": "5398920"
  },
  {
    "text": "about a code base that have continually, I feel like, been one of the\ntrickier things to scale.",
    "start": "5398920",
    "end": "5404410"
  },
  {
    "text": "- I have a few friends who\nare super senior engineers and one of their lines is,\nit's very hard to predict",
    "start": "5404410",
    "end": "5410440"
  },
  {
    "text": "where systems will break\nwhen you scale them. You can try to predict in advance,",
    "start": "5410440",
    "end": "5417040"
  },
  {
    "text": "but there's always something\nweird that's gonna happen when you add these extras here.",
    "start": "5417040",
    "end": "5422050"
  },
  {
    "text": "You thought through everything, which you didn't actually\nthink through everything. But I think for that particular system,",
    "start": "5422050",
    "end": "5429403"
  },
  {
    "text": "we chunk up all of your code, and then we send up the code for embedding",
    "start": "5439431",
    "end": "5444790"
  },
  {
    "text": "and we embed the code. And then, we store the\nembeddings in a database, but we don't actually\nstore any of the code.",
    "start": "5444790",
    "end": "5451869"
  },
  {
    "text": "And then there's reasons\naround making sure that we don't introduce client bugs because we're very, very\nparanoid about client bugs.",
    "start": "5451870",
    "end": "5459130"
  },
  {
    "text": "We store much of the\ndetails on the server.",
    "start": "5459130",
    "end": "5463573"
  },
  {
    "text": "Everything is encrypted. So, one of the technical\nchallenges is always making sure",
    "start": "5465310",
    "end": "5471100"
  },
  {
    "text": "that the local index, the local\ncode base state is the same as the state that is on the server.",
    "start": "5471100",
    "end": "5477220"
  },
  {
    "text": "The way, technically, we\nended up doing that is, for every single file\nyou can keep this hash,",
    "start": "5478570",
    "end": "5485829"
  },
  {
    "text": "and then for every folder\nyou can keep a hash, which is the hash of all of its children.",
    "start": "5485830",
    "end": "5491260"
  },
  {
    "text": "You can recursively do that until the top. Why do something complicated?",
    "start": "5491260",
    "end": "5497680"
  },
  {
    "text": "One thing you could do is you could keep a hash for every file, and every minute, you could\ntry to download the hashes",
    "start": "5497680",
    "end": "5503980"
  },
  {
    "text": "that are on the server,\nfigure out what are the files that don't exist on the server. Maybe you just created a new file, maybe you just deleted a file,",
    "start": "5503980",
    "end": "5510370"
  },
  {
    "text": "maybe you checked out a new branch, and try to reconcile the state between the client and the server.",
    "start": "5510370",
    "end": "5516240"
  },
  {
    "text": "But that introduces absolutely\nginormous network overhead both on the client side.",
    "start": "5517180",
    "end": "5524050"
  },
  {
    "text": "Nobody really wants us to\nhammer their WiFi all the time if you're using Cursor.",
    "start": "5524050",
    "end": "5529390"
  },
  {
    "text": "But also, it would\nintroduce ginormous overhead on the database. It would be reading these\ntens of terabytes database,",
    "start": "5529390",
    "end": "5538710"
  },
  {
    "text": "approaching 20 terabytes or something data base every second. That's just crazy.",
    "start": "5540850",
    "end": "5548200"
  },
  {
    "text": "You definitely don't wanna do that. So what you do, you just try\nto reconcile the single hash,",
    "start": "5548200",
    "end": "5554320"
  },
  {
    "text": "which is at the root of the project. And then if something\nmismatches, then you go, you find where all the things disagree.",
    "start": "5554320",
    "end": "5559630"
  },
  {
    "text": "Maybe you look at the children\nand see if the hashes match. If the hashes don't match, go look at their children and so on. But you only do that in the scenario",
    "start": "5559630",
    "end": "5566320"
  },
  {
    "text": "where things don't match. For most people, most of\nthe time, the hashes match. - So it's like a\nhierarchical reconciliation",
    "start": "5566320",
    "end": "5573790"
  },
  {
    "text": "of hashes.\n- Yeah, something like that. - Yeah, it's called a Merkle tree. - Yeah, Merkle.\n- Yeah. - Yeah.",
    "start": "5573790",
    "end": "5579100"
  },
  {
    "text": "This is cool to see that you have to think\nthrough all these problems. - The reason it's gotten hard",
    "start": "5579100",
    "end": "5584400"
  },
  {
    "text": "is just because the\nnumber of people using it and some of your customers have really, really large code bases.",
    "start": "5584400",
    "end": "5592513"
  },
  {
    "text": "We originally reordered dark\ncode base, which is big, but it's just not the size of some company",
    "start": "5596080",
    "end": "5601360"
  },
  {
    "text": "that's been there for 20 years and has a ginormous number of files and you wanna scale\nthat across programmers.",
    "start": "5601360",
    "end": "5608200"
  },
  {
    "text": "There's all these details where building the simple thing is easy, but scaling it to a lot of people,",
    "start": "5608200",
    "end": "5613630"
  },
  {
    "text": "a lot of companies is\nobviously a difficult problem, which is independent of, actually, so that there's part of this scaling.",
    "start": "5613630",
    "end": "5619719"
  },
  {
    "text": "Our current solution is also\ncoming up with new ideas that, obviously, we're working on,",
    "start": "5619720",
    "end": "5625510"
  },
  {
    "text": "but then scaling all of that\nin the last few weeks, months. - Yeah. And there are a lot of clever things,",
    "start": "5625510",
    "end": "5630850"
  },
  {
    "text": "additional things that go\ninto this indexing system. For example, the bottleneck\nin terms of costs",
    "start": "5630850",
    "end": "5637150"
  },
  {
    "text": "is not soaring things\nin the vector database or the database, it's\nactually embedding the code. You don't wanna re-embed the code base",
    "start": "5637150",
    "end": "5642670"
  },
  {
    "text": "for every single person in a company that is using the same exact code except for maybe they're\na different branch",
    "start": "5642670",
    "end": "5648970"
  },
  {
    "text": "with a few different files or they've made a few local changes. Because again, embeddings\nare the bottleneck,",
    "start": "5648970",
    "end": "5654640"
  },
  {
    "text": "you can do this one clever trick and not have to worry about the complexity of dealing with branches\nand the other databases",
    "start": "5654640",
    "end": "5660610"
  },
  {
    "text": "where you just have some cash\non the actual vectors computed",
    "start": "5660610",
    "end": "5665610"
  },
  {
    "text": "from the hash of a given chunk. - Mm-hmm. - So this means that when the\nnth person at a company goes",
    "start": "5667630",
    "end": "5673960"
  },
  {
    "text": "and embed their code base,\nit's really, really fast. You do all this without\nactually storing any code",
    "start": "5673960",
    "end": "5679270"
  },
  {
    "text": "on our servers at all. No code data is stored. We just store the vectors\nin the vector database and the vector cache.",
    "start": "5679270",
    "end": "5685510"
  },
  {
    "text": "- What's the biggest\ngains at this time you get from indexing the code base?",
    "start": "5685510",
    "end": "5691750"
  },
  {
    "text": "Just out of curiosity,\nwhat benefit do users have? It seems like longer term,",
    "start": "5691750",
    "end": "5697450"
  },
  {
    "text": "there'll be more and more\nbenefit, but in the short term, just asking questions of the code base,",
    "start": "5697450",
    "end": "5701743"
  },
  {
    "text": "what's the usefulness of that? - I think the most obvious one\nis just, you want to find out",
    "start": "5702940",
    "end": "5711090"
  },
  {
    "text": "where something is happening\nin your large code base, and you have a fuzzy memory of,",
    "start": "5711760",
    "end": "5716927"
  },
  {
    "text": "\"Okay, I want to find\nthe place where we do X,\" but you don't exactly\nknow what to search for",
    "start": "5716927",
    "end": "5722290"
  },
  {
    "text": "in a normal text search. So you ask a chat, you hit Command+Enter to ask with the code base chat.",
    "start": "5722290",
    "end": "5727960"
  },
  {
    "text": "And then very often, it\nfinds the right place that you were thinking of.",
    "start": "5727960",
    "end": "5732469"
  },
  {
    "text": "- Like you mentioned, in the future, I think there's only going to\nget more and more powerful, where we're working a lot\non improving the quality",
    "start": "5733780",
    "end": "5740950"
  },
  {
    "text": "of our retrieval. I think the ceiling for that\nis really, really much higher than people give the credit for.",
    "start": "5740950",
    "end": "5746020"
  },
  {
    "text": "- One question that's good to\nask here, have you considered and why haven't you much done local stuff,",
    "start": "5746020",
    "end": "5751992"
  },
  {
    "text": "it seems like everything\nwas just discussed as exceptionally difficult to do. To go to the cloud, you have\nto think about all these things",
    "start": "5754000",
    "end": "5760090"
  },
  {
    "text": "with the caching and the large code base",
    "start": "5760090",
    "end": "5765090"
  },
  {
    "text": "where a large number of\nprogrammers are using the same code base. You have to figure out the puzzle of that. A lot of it, most software",
    "start": "5765280",
    "end": "5772390"
  },
  {
    "text": "just does this heavy\ncomputational stuff locally. So, have you considered\ndoing embeddings locally?",
    "start": "5772390",
    "end": "5778869"
  },
  {
    "text": "- Yeah, we thought about it, and I think it would be\ncool to do it locally. I think it's just really hard.",
    "start": "5778870",
    "end": "5785080"
  },
  {
    "text": "One thing to keep in mind is that some of our users\nuse the latest MacBook Pro,",
    "start": "5785080",
    "end": "5790873"
  },
  {
    "text": "but most of our users,\nmore than 80% of our users are in Windows machines, which many of them are not very powerful.",
    "start": "5792040",
    "end": "5800290"
  },
  {
    "text": "So, local models really only\nworks on the latest computers, and it's also a big\noverhead to build that in.",
    "start": "5800290",
    "end": "5808510"
  },
  {
    "text": "So even if we would like to do that, it's currently not something\nthat we are able to focus on.",
    "start": "5808510",
    "end": "5814540"
  },
  {
    "text": "I think there are some\npeople that do that, and I think that's great,",
    "start": "5814540",
    "end": "5818863"
  },
  {
    "text": "but especially as models\nget bigger and bigger and you want to do fancier\nthings with bigger models,",
    "start": "5819970",
    "end": "5825880"
  },
  {
    "text": "it becomes even harder to do it locally. - Yeah, it's not a problem\nof weaker computers.",
    "start": "5825880",
    "end": "5831580"
  },
  {
    "text": "It's just that for example,\nif you're some big company, you have big company code base.",
    "start": "5831580",
    "end": "5837610"
  },
  {
    "text": "It's just really hard to\nprocess big company code base even on the beefiest MacBook Pros.",
    "start": "5837610",
    "end": "5842800"
  },
  {
    "text": "It's not even a matter of\nif you're just a student or something.",
    "start": "5842800",
    "end": "5848103"
  },
  {
    "text": "I think, if you're the best\nprogrammer at a big company, you're still gonna have\na horrible experience.",
    "start": "5848103",
    "end": "5854380"
  },
  {
    "text": "If you do everything locally\nwhere you could do it and scrape by, but again,\nit wouldn't be fun anymore.",
    "start": "5854380",
    "end": "5860800"
  },
  {
    "text": "- Yeah, like at approximate\nnearest neighbors and this massive code base is\ngonna just eat up your memory and your CPU, and it's based off of that.",
    "start": "5860800",
    "end": "5867043"
  },
  {
    "text": "That's just that. Let's talk about also\nthe modeling side where, as Arvid said, there are\nthese massive headwinds",
    "start": "5869306",
    "end": "5875770"
  },
  {
    "text": "against local models where one, things that seem to move\ntowards MOEs, which one benefit",
    "start": "5875770",
    "end": "5882910"
  },
  {
    "text": "is maybe their more\nmemory bandwidth bound, which plays in favor of\nlocal versus using GPUs",
    "start": "5882910",
    "end": "5889580"
  },
  {
    "text": "or using Nvidia GPUs. But the downside is, these\nmodels are just bigger in total,",
    "start": "5890620",
    "end": "5896500"
  },
  {
    "text": "and they're gonna need to fit, often not even on a single\nnode but multiple nodes.",
    "start": "5896500",
    "end": "5901179"
  },
  {
    "text": "There's no way that's gonna fit inside of even really good MacBooks. I think especially for coding,",
    "start": "5902140",
    "end": "5908860"
  },
  {
    "text": "it's not a question as much of, does it clear some bar of\nthe model's good enough",
    "start": "5908860",
    "end": "5914860"
  },
  {
    "text": "to do these things and\nthen we're satisfied? Which may be the case for other problems and maybe where local models shine,",
    "start": "5914860",
    "end": "5921640"
  },
  {
    "text": "but people are always gonna want the best, the most intelligent,\nthe most capable things, and that's gonna be\nreally, really hard to run",
    "start": "5921640",
    "end": "5928480"
  },
  {
    "text": "for almost all people, locally. - Don't you want the most capable model?",
    "start": "5928480",
    "end": "5933883"
  },
  {
    "text": "You want Sonnet too? - And also o1- (Lex chuckling) - I like how you're pitching me. (group chuckling)",
    "start": "5934750",
    "end": "5940484"
  },
  {
    "text": "- O1 is another- - Would you be satisfied\nwith an inferior model? Listen, yes, I'm one of those,",
    "start": "5940484",
    "end": "5945520"
  },
  {
    "text": "but there's some people that\nlike to do stuff locally, really, there's a whole\nobviously open source movement",
    "start": "5945520",
    "end": "5952360"
  },
  {
    "text": "that resists. It's good that they exist actually because you wanna resist the power centers",
    "start": "5952360",
    "end": "5958900"
  },
  {
    "text": "that are growing our- - There's actually an\nalternative to local models that I am particularly fond of.",
    "start": "5958900",
    "end": "5965170"
  },
  {
    "text": "I think it's still very\nmuch in the research stage, but you could imagine to\ndo homomorphic encryption",
    "start": "5965170",
    "end": "5972550"
  },
  {
    "text": "for language model inference. So you encrypt your input\non your local machine, then you send that up,",
    "start": "5972550",
    "end": "5977889"
  },
  {
    "text": "and then the server can\nuse loss of computation.",
    "start": "5977890",
    "end": "5982890"
  },
  {
    "text": "They can run models that\nyou cannot run locally on this encrypted data, but they cannot see what the data is,",
    "start": "5983020",
    "end": "5988480"
  },
  {
    "text": "and then they send back the answer and you decrypt the answer and\nonly you can see the answer. So I think that's still very much research",
    "start": "5988480",
    "end": "5995830"
  },
  {
    "text": "and all of it is about trying\nto make the overhead lower because right now, the\noverhead is really big,",
    "start": "5995830",
    "end": "6002760"
  },
  {
    "text": "but if you can make that happen, I think that would be really, really cool, and I think it would be\nreally, really impactful",
    "start": "6002760",
    "end": "6010020"
  },
  {
    "text": "because I think one thing that's\nactually worrisome is that, as these models get better and better, they're going to become more\nand more economically useful.",
    "start": "6010020",
    "end": "6017850"
  },
  {
    "text": "And so, more and more of the\nworld's information and data will flow through one or\ntwo centralized actors.",
    "start": "6017850",
    "end": "6026000"
  },
  {
    "text": "And then there are worries about, there can be traditional hacker attempts,",
    "start": "6026310",
    "end": "6031380"
  },
  {
    "text": "but it also creates this scary part where if all of the world's\ninformation is flowing",
    "start": "6031380",
    "end": "6038190"
  },
  {
    "text": "through one node in plaintext, you can have surveillance\nin very bad ways.",
    "start": "6038190",
    "end": "6044103"
  },
  {
    "text": "Initially, will be good reasons. People will want to try to protect against bad actors using\nAI models in bad ways,",
    "start": "6048180",
    "end": "6055650"
  },
  {
    "text": "and then you will add in\nsome surveillance code. And then, someone else will come in and you're on a slippery slope, and then you start doing bad things",
    "start": "6055650",
    "end": "6064469"
  },
  {
    "text": "with a lot of the world's data. So, I am very hopeful that we can solve homomorphic encryption",
    "start": "6064470",
    "end": "6071639"
  },
  {
    "text": "for language model inference. - Yeah, and doing privacy,\npreserving machine learning. But I would say, that's\nthe challenge we have with all software these days.",
    "start": "6071640",
    "end": "6078719"
  },
  {
    "text": "It's like, there's so many\nfeatures that can be provided from the cloud and all us\nincreasingly rely on it",
    "start": "6078720",
    "end": "6085199"
  },
  {
    "text": "and make our life awesome. But there's downsides, and that's why you rely\non really good security to protect from basic attacks.",
    "start": "6085200",
    "end": "6091590"
  },
  {
    "text": "But there's also only a\nsmall set of companies that are controlling that data,",
    "start": "6091590",
    "end": "6096920"
  },
  {
    "text": "and they obviously have leverage and they could be infiltrated\nin all kinds of ways. That's the world we live in.",
    "start": "6097830",
    "end": "6103650"
  },
  {
    "text": "- Yeah, the thing I'm just\nactually quite worried about is Anthropic has this\nresponsible scaling policy",
    "start": "6103650",
    "end": "6111190"
  },
  {
    "text": "where we're the low ASLs, which is the Anthropic\nsecurity level or whatever of the models.",
    "start": "6112470",
    "end": "6118950"
  },
  {
    "text": "But as we get to, quote,\nunquote, \"ASL-3, ASL-4,\" whatever models which are very powerful.",
    "start": "6118950",
    "end": "6126450"
  },
  {
    "text": "But for mostly reasonable\nsecurity reasons, you would wanna monitor all the prompts.",
    "start": "6126450",
    "end": "6133590"
  },
  {
    "text": "But I think that's\nreasonable and understandable where everyone is coming from. But man, it'd be really horrible",
    "start": "6133590",
    "end": "6141000"
  },
  {
    "text": "if all the world's information\nis monitored that heavily, it's way too centralized.",
    "start": "6141000",
    "end": "6147000"
  },
  {
    "text": "It's like this really\nfine line you're walking where on the one side,",
    "start": "6147000",
    "end": "6153330"
  },
  {
    "text": "you don't want the models to go rogue. On the other side, humans like, I don't know if I trust\nall the world's information",
    "start": "6153330",
    "end": "6161070"
  },
  {
    "text": "to pass through three model providers. - Yeah. - Why do you think it's\ndifferent than cloud providers?",
    "start": "6161070",
    "end": "6167640"
  },
  {
    "text": "- Because I think a lot of\nthis data would never have gone",
    "start": "6167640",
    "end": "6172640"
  },
  {
    "text": "to the cloud providers in the first place.",
    "start": "6174120",
    "end": "6176523"
  },
  {
    "text": "You want to give more\ndata to the AI models, you want to give personal data that you would never have\nput online in the first place",
    "start": "6180570",
    "end": "6187440"
  },
  {
    "text": "to these companies or to these models. It also centralizes control\nwhere right now, for cloud,",
    "start": "6187440",
    "end": "6196550"
  },
  {
    "text": "you can often use your\nown encryption keys, and AWS can't really do much.",
    "start": "6199080",
    "end": "6204423"
  },
  {
    "text": "But here, it's just centralized actors that see the exact plain\ntext of everything.",
    "start": "6206100",
    "end": "6211653"
  },
  {
    "start": "6212000",
    "end": "6519000"
  },
  {
    "text": "- On the topic of a context, that's actually been a friction for me. When I'm writing code in Python,",
    "start": "6212700",
    "end": "6218070"
  },
  {
    "text": "there's a bunch of stuff imported. You could probably\nintuit the kind of stuff",
    "start": "6218070",
    "end": "6223350"
  },
  {
    "text": "I would like to include in the context. How hard is it to auto\nfigure out the context?",
    "start": "6223350",
    "end": "6231090"
  },
  {
    "text": "- It's tricky. I think we can do a lot better at computing the context\nautomatically in the future.",
    "start": "6231090",
    "end": "6238740"
  },
  {
    "text": "One thing that's important to note is, there are trade-offs with\nincluding automatic context. So, the more context you\ninclude for these models,",
    "start": "6238740",
    "end": "6246780"
  },
  {
    "text": "first of all, the slower they are and the more expensive those requests are,",
    "start": "6246780",
    "end": "6252239"
  },
  {
    "text": "which means you can\nthen do less model calls and do less fancy stuff in the background. Also, for a lot of these\nmodels, they get confused",
    "start": "6252240",
    "end": "6258300"
  },
  {
    "text": "if you have a lot of\ninformation in the prompt. So the bar for accuracy and for relevance",
    "start": "6258300",
    "end": "6263790"
  },
  {
    "text": "of the context you include\nshould be quite high.",
    "start": "6263790",
    "end": "6266190"
  },
  {
    "text": "Already, we do some automatic context in some places within the product. It's definitely something we\nwanna get a lot better at.",
    "start": "6268950",
    "end": "6275423"
  },
  {
    "text": "I think that there are a lot\nof cool ideas to try there, both on the learning\nbetter retrieval systems,",
    "start": "6277020",
    "end": "6285720"
  },
  {
    "text": "like better embedding\nmodels, better rerankers. I think that there are\nalso cool academic ideas,",
    "start": "6285720",
    "end": "6292170"
  },
  {
    "text": "stuff we've tried out internally, but also the field is grappling\nwith writ large about, can you get language models to a place",
    "start": "6292170",
    "end": "6298230"
  },
  {
    "text": "where you can actually\njust have the model itself understand a new corpus of information? The most popular talked\nabout version of this is",
    "start": "6298230",
    "end": "6305699"
  },
  {
    "text": "can you make the context windows infinite? Then if you make the\ncontext windows infinite, can you make the model\nactually pay attention to the infinite context?",
    "start": "6305700",
    "end": "6311730"
  },
  {
    "text": "And then, after you can\nmake it pay attention to the infinite context to\nmake it somewhat feasible to actually do it, can you then do caching",
    "start": "6311730",
    "end": "6317850"
  },
  {
    "text": "for that infinite context? You don't have to recompute\nthat all the time. But there are other cool\nideas that are being tried,",
    "start": "6317850",
    "end": "6323490"
  },
  {
    "text": "that are a little bit more\nanalogous to fine-tuning of actually learning this information in the weights of the model.",
    "start": "6323490",
    "end": "6328580"
  },
  {
    "text": "It might be that you\nactually get a qualitative lead different type of understanding",
    "start": "6329430",
    "end": "6334800"
  },
  {
    "text": "if you do it more at the weight level than if you do it at the\nin-context learning level. I think the jury's still a little bit out",
    "start": "6334800",
    "end": "6340710"
  },
  {
    "text": "on how this is all gonna work in the end? But in the interim, us as a company, we are really excited about\nbetter retrieval systems",
    "start": "6340710",
    "end": "6347250"
  },
  {
    "text": "and picking the parts of the code base that are most relevant\nto what you're doing, and we could do that a lot better.",
    "start": "6347250",
    "end": "6352740"
  },
  {
    "text": "- One interesting proof of concept for the learning this knowledge\ndirectly in the weights",
    "start": "6352740",
    "end": "6358349"
  },
  {
    "text": "is with VS Code. So, we're in a VS Code fork and VS Code.",
    "start": "6358350",
    "end": "6363450"
  },
  {
    "text": "The code is all public. So these models in pre-training\nhave seen all the code.",
    "start": "6363450",
    "end": "6367833"
  },
  {
    "text": "They've probably also seen\nquestions and answers about it. And then, they've been\nfine-tuned and RLHFed",
    "start": "6368670",
    "end": "6373770"
  },
  {
    "text": "to be able to answer questions\nabout code in general. So when you ask it a\nquestion about VS Code,",
    "start": "6373770",
    "end": "6378869"
  },
  {
    "text": "sometimes it'll hallucinate, but sometimes it actually\ndoes a pretty good job at answering the question.",
    "start": "6378870",
    "end": "6384603"
  },
  {
    "text": "It happens to be okay, but what if you could\nactually specifically train or post-train a model such\nthat it really was built",
    "start": "6387420",
    "end": "6395700"
  },
  {
    "text": "to understand this code base? It's an open research question, one that we're quite interested in.",
    "start": "6395700",
    "end": "6401400"
  },
  {
    "text": "And then there's also uncertainty of, do you want the model to be the thing that end-to-end is doing everything,",
    "start": "6401400",
    "end": "6406830"
  },
  {
    "text": "i.e., it's doing the\nretrieval in its internals, and then answering a\nquestion, creating the code,",
    "start": "6406830",
    "end": "6411900"
  },
  {
    "text": "or do you want to separate the retrieval from the frontier model,",
    "start": "6411900",
    "end": "6417210"
  },
  {
    "text": "where maybe you'll get\nsome really capable models that are much better than\nthe best open source ones in a handful of months?",
    "start": "6417210",
    "end": "6423333"
  },
  {
    "text": "And then, you'll want to separately train a really good open source\nmodel to be the retriever, to be the thing that feeds in the context",
    "start": "6424500",
    "end": "6432330"
  },
  {
    "text": "to these larger models. - Can you speak a little\nmore to post-training a model to understand the code base?",
    "start": "6432330",
    "end": "6438320"
  },
  {
    "text": "What do you mean by that? Is this a synthetic data direction? Is this- - Yeah, there are many possible\nways you could try doing it.",
    "start": "6439260",
    "end": "6446820"
  },
  {
    "text": "There's certainly no shortage of ideas. It's just a question of going\nin and trying all of them",
    "start": "6446820",
    "end": "6452460"
  },
  {
    "text": "and being empirical about\nwhich one works best. One very naive thing is to\ntry to replicate what's done",
    "start": "6452460",
    "end": "6460200"
  },
  {
    "text": "with VS Code and these frontier models. So, let's continue pre-training.",
    "start": "6460200",
    "end": "6465840"
  },
  {
    "text": "Some kind of continued pre-training that includes general code data but also throws in of the data\nof some particular repository",
    "start": "6465840",
    "end": "6472020"
  },
  {
    "text": "that you care about. And then in post-training, meaning, let's just start with\ninstruction fine-tuning.",
    "start": "6472020",
    "end": "6478350"
  },
  {
    "text": "You have a normal instruction\nfine-tuning data set about code. Then you throw in a lot\nof questions about code",
    "start": "6478350",
    "end": "6484890"
  },
  {
    "text": "in that repository. So, you could either\nget ground truth ones, which might be difficult or\nyou could do what you hinted at",
    "start": "6484890",
    "end": "6492210"
  },
  {
    "text": "or suggested using synthetic data, i.e., having the model ask questions",
    "start": "6492210",
    "end": "6499820"
  },
  {
    "text": "about various recent pieces of the code. So you take the pieces of the code, then prompt the model or have\na model propose a question",
    "start": "6499890",
    "end": "6507840"
  },
  {
    "text": "for that piece of code, and then add those as instruction\nfine-tuning data points. And then in theory, this might\nunlock the model's ability",
    "start": "6507840",
    "end": "6516210"
  },
  {
    "text": "to answer questions about that code base. - Let me ask you about OpenAI o1.",
    "start": "6516210",
    "end": "6522480"
  },
  {
    "start": "6519000",
    "end": "7201000"
  },
  {
    "text": "What do you think is the role of that kind of test time\ncompute system in programming? - I think test time compute\nis really, really interesting.",
    "start": "6522480",
    "end": "6530820"
  },
  {
    "text": "So, there's been the pre-training regime as you scale up the amount of data",
    "start": "6530820",
    "end": "6537060"
  },
  {
    "text": "and the size of your model, get you better and better\nperformance both on loss, and then on downstream benchmarks",
    "start": "6537060",
    "end": "6542940"
  },
  {
    "text": "and just general performance, so we use it for coding or other tasks.",
    "start": "6542940",
    "end": "6547023"
  },
  {
    "text": "We're starting to hit\na bit of a data wall, meaning, it's going to be hard to continue",
    "start": "6549000",
    "end": "6554460"
  },
  {
    "text": "scaling up this regime. So, scaling up test time\ncompute is an interesting way, if now increasing the number\nof inference time flops.",
    "start": "6554460",
    "end": "6563763"
  },
  {
    "text": "Yeah, as you increase the number of flops you use inference\ntime getting corresponding improvements in the\nperformance of these models.",
    "start": "6567214",
    "end": "6573420"
  },
  {
    "text": "Traditionally, we just had to\nliterally train a bigger model that always used that many more flops,",
    "start": "6573420",
    "end": "6578880"
  },
  {
    "text": "but now, we could perhaps\nuse the same size model and run it for longer to\nbe able to get an answer",
    "start": "6578880",
    "end": "6585450"
  },
  {
    "text": "at the quality of a much larger model. And so, the really interesting\nthing I like about this is there are some problems\nthat perhaps require",
    "start": "6585450",
    "end": "6592210"
  },
  {
    "text": "100 trillion parameter\nmodel intelligence trained on 100 trillion tokens. But that's maybe 1%,\nmaybe .1% of all queries.",
    "start": "6593250",
    "end": "6602940"
  },
  {
    "text": "So are you going to\nspend all of this effort, all of this compute training\na model that costs that much",
    "start": "6602940",
    "end": "6609540"
  },
  {
    "text": "and then run it so infrequently?",
    "start": "6609540",
    "end": "6611793"
  },
  {
    "text": "You train the model that is capable of doing the 99.9% of queries, then you have a way of\ninference time running it longer",
    "start": "6616715",
    "end": "6623579"
  },
  {
    "text": "for those few people that really, really want max intelligence. - How do you figure out\nwhich problem requires",
    "start": "6623580",
    "end": "6631110"
  },
  {
    "text": "what level of intelligence? Is that possible to dynamically figure out when to use GPT-4, when\nto use a small model",
    "start": "6631110",
    "end": "6639030"
  },
  {
    "text": "and when you need the o1? (group chuckles)",
    "start": "6639030",
    "end": "6644610"
  },
  {
    "text": "- Yeah, that's an open\nresearch problem, certainly. I don't think anyone's actually cracked this model routing problem quite well.",
    "start": "6644610",
    "end": "6651281"
  },
  {
    "text": "We have initial implementations of this for something like Cursor Tab,",
    "start": "6651282",
    "end": "6656943"
  },
  {
    "text": "but at the level of going\nbetween 4o Sonnet to o1,",
    "start": "6658110",
    "end": "6662673"
  },
  {
    "text": "it's a bit trickier. There's also a question like, what level of intelligence\ndo you need to determine if the thing is too hard\nfor the four level model?",
    "start": "6663570",
    "end": "6673460"
  },
  {
    "text": "Maybe you need the o1 level model. It's really unclear.",
    "start": "6673860",
    "end": "6679710"
  },
  {
    "text": "- But you mentioned this. So, there's a pre-training process then there's post-training,",
    "start": "6679710",
    "end": "6685230"
  },
  {
    "text": "and then there's test time compute. Is that fair to separate? Where's the biggest gains?",
    "start": "6685230",
    "end": "6690153"
  },
  {
    "text": "- Well, it's weird\nbecause test time compute, there's a whole training strategy needed",
    "start": "6691080",
    "end": "6696180"
  },
  {
    "text": "to get test time compute to work. The other really weird thing about this is outside of the big labs\nand maybe even just OpenAI,",
    "start": "6696180",
    "end": "6705510"
  },
  {
    "text": "no one really knows how it works. There've been some\nreally interesting papers that show hints of what\nthey might be doing.",
    "start": "6705510",
    "end": "6714090"
  },
  {
    "text": "So, perhaps they're doing something with tree search using\nprocess reward models.",
    "start": "6714090",
    "end": "6720150"
  },
  {
    "text": "But yeah, I think the issue is we don't quite know\nexactly what it looks like, so it would be hard to\ncomment on where it fits in.",
    "start": "6720150",
    "end": "6728040"
  },
  {
    "text": "I would put it in post-training, but maybe the compute spent for this forgetting test time\ncompute to work for a model",
    "start": "6728040",
    "end": "6734760"
  },
  {
    "text": "is going to dwarf pre-training eventually. - So we don't even know if o1\nis using just chain of thought",
    "start": "6734760",
    "end": "6743810"
  },
  {
    "text": "or we don't know how\nthey're using any of these? We don't know anything? - It's fun to speculate. (group chuckling)",
    "start": "6743910",
    "end": "6750809"
  },
  {
    "text": "- If you were to build a competing\nmodel, what would you do? - Yeah, so one thing to do would be,",
    "start": "6750810",
    "end": "6758340"
  },
  {
    "text": "I think you probably need to\ntrain a process reward model. So maybe we can get into reward models",
    "start": "6758340",
    "end": "6763557"
  },
  {
    "text": "and outcome reward models\nversus process reward models. Outcome reward models are\nthe traditional reward models",
    "start": "6763557",
    "end": "6769620"
  },
  {
    "text": "that people are trained\nfor language modeling, and it's just looking at the final thing.",
    "start": "6769620",
    "end": "6775440"
  },
  {
    "text": "So if you're doing some math problem, let's look at that final thing. You've done everything and\nlet's assign a grade to it,",
    "start": "6775440",
    "end": "6782160"
  },
  {
    "text": "how likely we think. What's the reward for this outcome? Process reward models instead try to grade the chain of thought.",
    "start": "6782160",
    "end": "6789270"
  },
  {
    "text": "And so OpenAI had preliminary\npaper on this, I think, last summer where they use human labelers",
    "start": "6789270",
    "end": "6797190"
  },
  {
    "text": "to get this pretty large several\nhundred thousand data set of creating chains of thought.",
    "start": "6797190",
    "end": "6802023"
  },
  {
    "text": "Ultimately, it feels like I haven't seen anything\ninteresting in the ways that people use process reward models",
    "start": "6803850",
    "end": "6809369"
  },
  {
    "text": "outside of just using it\nas a means of affecting",
    "start": "6809370",
    "end": "6814370"
  },
  {
    "text": "how we choose between a bunch of samples. So, what people do in all these papers is they sample a bunch of\noutputs from the language model,",
    "start": "6814590",
    "end": "6822210"
  },
  {
    "text": "and then use the process reward models to grade all those generations",
    "start": "6822210",
    "end": "6827220"
  },
  {
    "text": "alongside maybe some other heuristics, and then use that to\nchoose the best answer. The really interesting thing\nthat people think might work",
    "start": "6827220",
    "end": "6835050"
  },
  {
    "text": "and people want to work is tree search with these process reward models. Because if you really can\ngrade every single step",
    "start": "6835050",
    "end": "6842340"
  },
  {
    "text": "of the chain of thought,\nthen you can branch out and explore multiple paths\nof this chain of thought",
    "start": "6842340",
    "end": "6848940"
  },
  {
    "text": "and then use these process\nreward models to evaluate how good is this branch\nthat you're taking.",
    "start": "6848940",
    "end": "6853159"
  },
  {
    "text": "- Yeah, when the quality of the branch is somehow strongly correlated with the quality of the\noutcome at the very end,",
    "start": "6854010",
    "end": "6860460"
  },
  {
    "text": "so you have a good model of\nknowing which branch to take. So not just in the short\nterm, in the long term?",
    "start": "6860460",
    "end": "6865950"
  },
  {
    "text": "- Yeah. The interesting work that\nI think has been done is figuring out how to\nproperly train the process, or the interesting work\nthat has been open sourced",
    "start": "6865950",
    "end": "6873600"
  },
  {
    "text": "and people I think talk about is how to train the process reward models,",
    "start": "6873600",
    "end": "6878880"
  },
  {
    "text": "maybe in a more automated way. I could be wrong here, could\nnot be mentioning some papers. I haven't seen anything super\nthat seems to work really well",
    "start": "6878880",
    "end": "6887460"
  },
  {
    "text": "for using the process\nreward models creatively to do tree search and code.",
    "start": "6887460",
    "end": "6892740"
  },
  {
    "text": "- This is an AI safety, maybe a bit of a philosophy question. So OpenAI says that they're\nhiding the chain of thought",
    "start": "6892740",
    "end": "6898560"
  },
  {
    "text": "from the user, and they've said that that was\na difficult decision to make.",
    "start": "6898560",
    "end": "6902940"
  },
  {
    "text": "Instead of showing the chain of thought, they're asking the model to\nsummarize the chain of thought.",
    "start": "6903780",
    "end": "6909300"
  },
  {
    "text": "They're also in the background saying they're going to monitor\nthe chain of thought to make sure the model is not\ntrying to manipulate the user,",
    "start": "6909300",
    "end": "6915840"
  },
  {
    "text": "which is a fascinating possibility. But anyway, what do you think about hiding the chain of thought?",
    "start": "6915840",
    "end": "6921180"
  },
  {
    "text": "- One consideration for OpenAI, and this is completely speculative, could be that they wanna\nmake it hard for people",
    "start": "6921180",
    "end": "6926910"
  },
  {
    "text": "to distill these capabilities\nout of their model. It might actually be easier if you had access to that\nhidden chain of thought",
    "start": "6926910",
    "end": "6933600"
  },
  {
    "text": "to replicate the technology,\nbecause pretty important data, like seeing the steps that the model took",
    "start": "6933600",
    "end": "6938820"
  },
  {
    "text": "to get to the final results. - So, you could probably\ntrain on that also? - And there was a mirror\nsituation with this,",
    "start": "6938820",
    "end": "6945239"
  },
  {
    "text": "with some of the large\nlanguage model providers, and also this is speculation, but some of these APIs\nused to offer easy access",
    "start": "6945240",
    "end": "6953750"
  },
  {
    "text": "to log probabilities for all the tokens that they're generating and also log probabilities\nover the prompt tokens.",
    "start": "6954330",
    "end": "6959970"
  },
  {
    "text": "And then some of these\nAPIs took those away. Again, complete speculation,\nbut one of the thoughts",
    "start": "6959970",
    "end": "6966630"
  },
  {
    "text": "is that the reason those were taken away is if you have access to log probabilities similar to this hidden chain of thought,",
    "start": "6966630",
    "end": "6972540"
  },
  {
    "text": "that can give you even more information to try and distill these\ncapabilities out of the APIs, out of these biggest models\nand to models you control.",
    "start": "6972540",
    "end": "6980040"
  },
  {
    "text": "As an asterisk on also\nthe previous discussion about us integrating o1,",
    "start": "6980040",
    "end": "6986130"
  },
  {
    "text": "I think that we're still\nlearning how to use this model. So, we made o1 available in Cursor",
    "start": "6986130",
    "end": "6991139"
  },
  {
    "text": "because when we got the model, we were really interested\nin trying it out. I think a lot of programmers\nare gonna be interested",
    "start": "6991140",
    "end": "6998040"
  },
  {
    "text": "in trying it out. O1 is not part of the\ndefault Cursor experience",
    "start": "6998040",
    "end": "7003560"
  },
  {
    "text": "in any way up, and we still haven't found\na way to yet integrate it",
    "start": "7003560",
    "end": "7010540"
  },
  {
    "text": "into the editor in a way\nthat we reach for every hour, maybe even every day.",
    "start": "7010700",
    "end": "7016370"
  },
  {
    "text": "So, I think that the jury's still out on how to use the model, and we haven't seen examples\nyet of people releasing things",
    "start": "7016370",
    "end": "7025610"
  },
  {
    "text": "where it seems really clear like, \"Oh, that's now the use case.\" The obvious one to turn to",
    "start": "7025610",
    "end": "7031219"
  },
  {
    "text": "is maybe this can make it easier for you to have these\nbackground things running, to have these models and loops, to have these models be agentic.",
    "start": "7031220",
    "end": "7037823"
  },
  {
    "text": "But we're still discovering. - To be clear, we have ideas. We just need to try and get\nsomething incredibly useful",
    "start": "7039260",
    "end": "7048139"
  },
  {
    "text": "before we put it out there. - But it has these\nsignificant limitations. Even barring capabilities,\nit does not stream.",
    "start": "7048140",
    "end": "7057233"
  },
  {
    "text": "That means it's really, really\npainful to use for things where you want to supervise the output.",
    "start": "7058100",
    "end": "7063619"
  },
  {
    "text": "Instead, you're just waiting\nfor the wall text to show up. Also, it does feel like the\nearly innings of test time,",
    "start": "7063620",
    "end": "7070130"
  },
  {
    "text": "compute and search where it's\njust a very, very much a v0, and there's so many things\nthat don't feel quite right.",
    "start": "7070130",
    "end": "7078830"
  },
  {
    "text": "I suspect in parallel to\npeople increasing the amount",
    "start": "7078830",
    "end": "7083830"
  },
  {
    "text": "of pre-training data and the size of the\nmodels and pre-training and finding tricks there, you'll\nnow have this other thread",
    "start": "7084740",
    "end": "7089930"
  },
  {
    "text": "of getting search to\nwork better and better. - So, let me ask you about\nstrawberry tomorrow eyes.",
    "start": "7089930",
    "end": "7098800"
  },
  {
    "text": "(group chuckles) So, it looks like GitHub\nCopilot might be integrating o1",
    "start": "7098808",
    "end": "7104860"
  },
  {
    "text": "in some kind of way, and I think some of the\ncomments are saying, does this mean Cursor is done?",
    "start": "7106670",
    "end": "7111930"
  },
  {
    "text": "(group chuckles) I think I saw one comment saying that. - It's a time to shut down Cursor, yeah.",
    "start": "7111930",
    "end": "7116963"
  },
  {
    "text": "- Time to shut down Cursor, thank you. (group chuckling) So, is it time to shut down Cursor? - I think this space is\na little bit different",
    "start": "7116963",
    "end": "7123140"
  },
  {
    "text": "from past software spaces over the 2010s, where I think that the ceiling here",
    "start": "7123140",
    "end": "7129230"
  },
  {
    "text": "is really, really, really incredibly high. So, I think that the best\nproduct in three to four years",
    "start": "7129230",
    "end": "7134420"
  },
  {
    "text": "will just be soon much more useful than the best product today. You can wax poetic about\nmoats this and brand that",
    "start": "7134420",
    "end": "7142880"
  },
  {
    "text": "and this is our advantage,\nbut I think in the end, just if you stop innovating\non the product, you will lose.",
    "start": "7142880",
    "end": "7151060"
  },
  {
    "text": "That's also great for startups, that's great for people\ntrying to enter this market because it means you have an opportunity",
    "start": "7151310",
    "end": "7158030"
  },
  {
    "text": "to win against people who\nhave lots of users already by just building something better.",
    "start": "7158030",
    "end": "7163360"
  },
  {
    "text": "And so, I think over the next few years, it's just about building the best product, building the best system,\nand that both comes down",
    "start": "7164480",
    "end": "7171290"
  },
  {
    "text": "to the modeling engine side of things, and it also comes down to\nthe editing experience.",
    "start": "7171290",
    "end": "7177500"
  },
  {
    "text": "- Yeah, I think most of the\nadditional value from Cursor versus everything else out there",
    "start": "7177500",
    "end": "7182600"
  },
  {
    "text": "is not just integrating\nthe new model fast like o1. It comes from all of the depth",
    "start": "7182600",
    "end": "7189500"
  },
  {
    "text": "that goes into these custom models that you don't realize are working for you in every facet of the product,",
    "start": "7189500",
    "end": "7195500"
  },
  {
    "text": "as well as the really thoughtful UX with every single feature.",
    "start": "7195500",
    "end": "7200730"
  },
  {
    "start": "7201000",
    "end": "7428000"
  },
  {
    "text": "- All right, from that profound answer, let's descend back down to the technical. You mentioned you have a\ntaxonomy of synthetic data.",
    "start": "7201770",
    "end": "7208406"
  },
  {
    "text": "- (chuckles) Oh, yeah. - Can you please explain? - Yeah, I think there are three main kinds",
    "start": "7208407",
    "end": "7213710"
  },
  {
    "text": "of synthetic data. So what is synthetic data, first? So there's normal data,\nlike non-synthetic data,",
    "start": "7213710",
    "end": "7220460"
  },
  {
    "text": "which is just data\nthat's naturally created, i.e., usually it'll be from\nhumans having done things.",
    "start": "7220460",
    "end": "7227179"
  },
  {
    "text": "So, from some human\nprocess you get this data. Synthetic data, the first\none would be distillation.",
    "start": "7227180",
    "end": "7234740"
  },
  {
    "text": "So having a language model, output tokens or probability\ndistributions over tokens,",
    "start": "7234740",
    "end": "7240833"
  },
  {
    "text": "and then you can train some\nless capable model on this. This approach is not gonna\nget you a more capable model",
    "start": "7241760",
    "end": "7249050"
  },
  {
    "text": "than the original one that\nhas produced the tokens, but it's really useful if there's some capability\nyou wanna elicit",
    "start": "7249050",
    "end": "7256310"
  },
  {
    "text": "from some really expensive\nhigh-latency model. You can then distill that down into some smaller task-specific model.",
    "start": "7256310",
    "end": "7263423"
  },
  {
    "text": "The second kind is when one\ndirection of the problem is easier than the reverse.",
    "start": "7264950",
    "end": "7271433"
  },
  {
    "text": "So, a great example of\nthis is bug detection, like we mentioned earlier, where it's a lot easier to\nintroduce reasonable-looking bugs",
    "start": "7272900",
    "end": "7282490"
  },
  {
    "text": "than it is to actually detect them. And this is probably\nthe case for humans too.",
    "start": "7282590",
    "end": "7287240"
  },
  {
    "text": "And so what you can do,\nis you can get a model that's not trained in that much\ndata, that's not that smart,",
    "start": "7288530",
    "end": "7294350"
  },
  {
    "text": "to introduce a bunch of bugs and code. And then, you can use that to then train. Use the synthetic data to train a model",
    "start": "7294350",
    "end": "7299389"
  },
  {
    "text": "that can be really good at detecting bugs. The last category I think\nis, I guess the main one",
    "start": "7299390",
    "end": "7305240"
  },
  {
    "text": "that it feels like the big labs are doing for synthetic data,\nwhich is producing text",
    "start": "7305240",
    "end": "7312800"
  },
  {
    "text": "with language models that\ncan then be verified easily.",
    "start": "7312800",
    "end": "7317363"
  },
  {
    "text": "So, extreme example of this is if you have a verification\nsystem that can detect if language is Shakespeare level,",
    "start": "7318230",
    "end": "7326014"
  },
  {
    "text": "and then you have a bunch of\nmonkeys typing and typewriters. You can eventually get\nenough training data to train a Shakespeare-level\nlanguage model.",
    "start": "7326014",
    "end": "7332690"
  },
  {
    "text": "And I mean this is very\nmuch the case for math where verification is\nactually really, really easy",
    "start": "7332690",
    "end": "7339140"
  },
  {
    "text": "for formal languages. And then what you can do, is\nyou can have an okay model,",
    "start": "7339140",
    "end": "7346219"
  },
  {
    "text": "generate a ton of rollouts,\nand then choose the ones that you know have actually proved",
    "start": "7346220",
    "end": "7351830"
  },
  {
    "text": "the ground truth theorems,\nand train that further. There's similar things you can do for code with lead code like problems,",
    "start": "7351830",
    "end": "7358253"
  },
  {
    "text": "where if you have some set of tests that you know correspond to if\nsomething passes these tests, it actually solved problem.\nYou could do the same thing",
    "start": "7359300",
    "end": "7366463"
  },
  {
    "text": "where you verify that it's passed the test and then train the model in the outputs that have passed the tests.",
    "start": "7366463",
    "end": "7370763"
  },
  {
    "text": "I think it's gonna be a little\ntricky getting this to work in all domains, or just in general.",
    "start": "7371720",
    "end": "7377960"
  },
  {
    "text": "Having the perfect verifier\nfeels really, really hard to do with just open-ended miscellaneous tasks.",
    "start": "7377960",
    "end": "7384800"
  },
  {
    "text": "You give the model or\nmore long horizon tasks, even in coding. - [Lex] That's 'cause you're\nnot as optimistic as Arvid.",
    "start": "7384800",
    "end": "7391040"
  },
  {
    "text": "But yeah, so yeah, (Aman chuckles) that third category\nrequires having a verifier.",
    "start": "7391040",
    "end": "7396560"
  },
  {
    "text": "- Yeah. Verification, it feels like\nit's best when you know for a fact that it's correct.",
    "start": "7396560",
    "end": "7401578"
  },
  {
    "text": "And then it wouldn't be\nlike using a language model to verify, it would be using\ntests or formal systems.",
    "start": "7401579",
    "end": "7408500"
  },
  {
    "text": "- Or running the thing too. Doing the human form of verification, where you just do manual quality control.",
    "start": "7408500",
    "end": "7414320"
  },
  {
    "text": "- Yeah.\n- Yeah. - But the language model version of that, where it's running the thing and it actually understands the output.",
    "start": "7414320",
    "end": "7419809"
  },
  {
    "text": "- Yeah, no, that's- - I'm sure it's somewhere in between. - Yeah. I think that's the category\nthat is most likely to result",
    "start": "7419810",
    "end": "7426680"
  },
  {
    "text": "in massive gains. - What about RL with feedback\nside RLHF versus RLAIF?",
    "start": "7426680",
    "end": "7432383"
  },
  {
    "start": "7428000",
    "end": "7534000"
  },
  {
    "text": "What's the role of that in getting better\nperformance on the models?",
    "start": "7433790",
    "end": "7438863"
  },
  {
    "text": "- Yeah. So, RLHF is when the reward\nmodel you use is trained",
    "start": "7440090",
    "end": "7445420"
  },
  {
    "text": "from some labels you've collected from humans giving feedback.",
    "start": "7447050",
    "end": "7451373"
  },
  {
    "text": "I think this works if you have the ability to get a ton of human feedback",
    "start": "7452930",
    "end": "7458270"
  },
  {
    "text": "for this kind of task that you care about. RLAIF is interesting",
    "start": "7458270",
    "end": "7463710"
  },
  {
    "text": "because it's depending on the\nconstraint that verification is actually a decent bit\neasier than generation.",
    "start": "7470688",
    "end": "7476870"
  },
  {
    "text": "Because it feels like,\nokay, what are you doing? Are you using this language model to look at the language model outputs and then prove the language model?",
    "start": "7476870",
    "end": "7482660"
  },
  {
    "text": "But no, it actually may work if the language model has a\nmuch easier time verifying",
    "start": "7482660",
    "end": "7488570"
  },
  {
    "text": "some solution than it does generating it. Then you actually could perhaps\nget this recursive loop.",
    "start": "7488570",
    "end": "7494210"
  },
  {
    "text": "But I don't think it's gonna\nlook exactly like that. The other thing you could\ndo, that we kind of do,",
    "start": "7494210",
    "end": "7501079"
  },
  {
    "text": "is a little bit of a\nmix of RLAIF and RLHF, where usually the model\nis actually quite correct",
    "start": "7501080",
    "end": "7507650"
  },
  {
    "text": "and this is the case of\nprecursor tap picking between two possible generations\nof what is the better one.",
    "start": "7507650",
    "end": "7515239"
  },
  {
    "text": "And then, it just needs a\nlittle bit of human nudging with only on the order 50, 100 examples",
    "start": "7515240",
    "end": "7522870"
  },
  {
    "text": "to align that prior the model has with exactly with what you want.",
    "start": "7524090",
    "end": "7529220"
  },
  {
    "text": "It looks different than\nI think normal RLHF where you're usually\ntraining these reward models in tons of examples.",
    "start": "7529220",
    "end": "7534503"
  },
  {
    "start": "7534000",
    "end": "7697000"
  },
  {
    "text": "- What's your intuition\nwhen you compare generation and verification or\ngeneration and ranking?",
    "start": "7535940",
    "end": "7541480"
  },
  {
    "text": "Is ranking way easier than generation? - My intuition would just\nsay, yeah, it should be.",
    "start": "7542330",
    "end": "7548782"
  },
  {
    "text": "Like, if you believe P does not equal NP, then there's this\nmassive class of problems",
    "start": "7554093",
    "end": "7559550"
  },
  {
    "text": "that are much, much easier\nto verify given proof, than actually proving it. - I wonder if the same thing\nwill prove P not equal to NP",
    "start": "7559550",
    "end": "7567230"
  },
  {
    "text": "or P equal to NP. - (chuckles) That would be really cool. - That'd be a whatever Field's Medal",
    "start": "7567230",
    "end": "7574247"
  },
  {
    "text": "(group giggling) by AI. Who gets the credit? Another the open philosophical question.",
    "start": "7574247",
    "end": "7579925"
  },
  {
    "text": "(group chuckling) - Whoever prompted it. (group chuckling) - I'm actually surprisingly curious",
    "start": "7579925",
    "end": "7586506"
  },
  {
    "text": "what a good bet for one AI will get the Field's Medal will be. I actually don't have-\n- Isn't this",
    "start": "7586506",
    "end": "7592305"
  },
  {
    "text": "Aman's specialty? - I don't know what Aman's bet here is. - Oh, sorry, Nobel Prize\nor Field's Medal first?",
    "start": "7592305",
    "end": "7597530"
  },
  {
    "text": "- Field's Medal-\n- Oh, Field's Medal level? - Field's Medal comes first, I think. - Field's Medal comes first. Well, you would say that, of course.",
    "start": "7597530",
    "end": "7604253"
  },
  {
    "text": "(group chuckling) - But it's also this\nisolated system you verify. - Sure.\n- Yeah. - I don't even know if I-",
    "start": "7604253",
    "end": "7609763"
  },
  {
    "text": "- You don't need to do (indistinct). - I feel like I have\nmuch more to do there. It felt like the path to get to IMO was a little bit more clear.",
    "start": "7609763",
    "end": "7615140"
  },
  {
    "text": "Because it already could\nget a few IMO problems and there was a bunch\nof low-hanging fruit,",
    "start": "7615140",
    "end": "7620360"
  },
  {
    "text": "given the literature at the time, of what tactics people could take. I think I'm, one, much less versed",
    "start": "7620360",
    "end": "7626090"
  },
  {
    "text": "in the space of theorem proving now. And two, less intuition about\nhow close we are to solving",
    "start": "7626090",
    "end": "7632120"
  },
  {
    "text": "these really, really hard open problems. - So you think you'll\nbe Field's Medal first?",
    "start": "7632120",
    "end": "7637250"
  },
  {
    "text": "It won't be in physics or in- - Oh, 100%, I think that's\nprobably more likely.",
    "start": "7637250",
    "end": "7643810"
  },
  {
    "text": "It is probably much more\nlikely that it'll get in. Yeah, yeah, yeah. Well, I think it both\nto, I don't know, BSD,",
    "start": "7643810",
    "end": "7650180"
  },
  {
    "text": "which is a Birch and\nSwinnerton-Dyer conjecture, or (indistinct) iPods, or any one of these hard math problems",
    "start": "7650180",
    "end": "7656659"
  },
  {
    "text": "are just actually really hard. It's unclear what the path to get even a solution looks like.",
    "start": "7656660",
    "end": "7663140"
  },
  {
    "text": "We don't even know what a path looks like, let alone (indistinct). - And you don't buy the idea this is just like an isolated system",
    "start": "7663140",
    "end": "7669050"
  },
  {
    "text": "and you can actually have\na good reward system, and it feels like it's\neasier to train for that.",
    "start": "7669050",
    "end": "7676010"
  },
  {
    "text": "- I think we might get\nField's Medal before AGI. - I mean, I'd be very happy.",
    "start": "7676010",
    "end": "7682133"
  },
  {
    "text": "I'd be very happy. But I don't know if I think 2028, 2030.",
    "start": "7683450",
    "end": "7688881"
  },
  {
    "text": "(Aman chuckles) - For Field's Medal? - Field's Medal.\n- All right. It feels like forever from now,",
    "start": "7688881",
    "end": "7695030"
  },
  {
    "text": "given how fast things have been going. Speaking of how fast\nthings have been going, let's talk about scaling laws.",
    "start": "7695030",
    "end": "7701450"
  },
  {
    "start": "7697000",
    "end": "8226000"
  },
  {
    "text": "So, for people who don't know, maybe it's good to talk\nabout this whole idea",
    "start": "7701450",
    "end": "7707997"
  },
  {
    "text": "of scaling laws. What are they, where'd you think stand, and where do you think things are going?",
    "start": "7709190",
    "end": "7714607"
  },
  {
    "text": "- I think it was interesting. The original scaling laws paper by OpenAI was slightly wrong. 'Cause I think of some issues they did",
    "start": "7714607",
    "end": "7720500"
  },
  {
    "text": "with learning right schedules. And then, Chinchilla showed\na more correct version.",
    "start": "7720500",
    "end": "7726560"
  },
  {
    "text": "And then, from then\npeople have again deviated from doing the compute optimal thing. 'Cause people start now optimizing more so",
    "start": "7726560",
    "end": "7733370"
  },
  {
    "text": "for making the thing work really well given an inference budget.",
    "start": "7733370",
    "end": "7738953"
  },
  {
    "text": "And I think there are a lot\nmore dimensions to these curves than what we originally used,",
    "start": "7739790",
    "end": "7744920"
  },
  {
    "text": "of just compute number\nof parameters and data.",
    "start": "7744920",
    "end": "7749663"
  },
  {
    "text": "Like inference compute is the obvious one. I think context length\nis another obvious one. Let's say you care about the two things",
    "start": "7750560",
    "end": "7756860"
  },
  {
    "text": "of inference compute\nand then context window, maybe the thing you wanna\ntrain is some kind of SSM.",
    "start": "7756860",
    "end": "7764719"
  },
  {
    "text": "Because they're much,\nmuch cheaper and faster at super, super long context. And even if, maybe it was\n10 X more scaling properties",
    "start": "7764720",
    "end": "7771710"
  },
  {
    "text": "during training, meaning,\nyou spend 10 X more compute to train the thing to get the\nsame level of capabilities,",
    "start": "7771710",
    "end": "7777889"
  },
  {
    "text": "it's worth it because you care most\nabout that inference budget for really long context windows.",
    "start": "7777890",
    "end": "7783500"
  },
  {
    "text": "So, it'll be interesting to see how people play with all these dimensions. - So, yeah, I mean, you speak to the multiple dimensions, obviously.",
    "start": "7783500",
    "end": "7789950"
  },
  {
    "text": "The original conception was\njust looking at the variables of the size of the model\nas measured by parameters,",
    "start": "7789950",
    "end": "7795530"
  },
  {
    "text": "and the size of the data as measured by the number of tokens, and looking at the ratio of the two. - Yeah.",
    "start": "7795530",
    "end": "7800719"
  },
  {
    "text": "- And it's kind of a compelling notion that there is a number,\nor at least a minimum.",
    "start": "7800720",
    "end": "7806389"
  },
  {
    "text": "And it seems like one was emerging. Do you still believe that there is a kind of bigger is better?",
    "start": "7806390",
    "end": "7814253"
  },
  {
    "text": "- I mean, I think bigger\nis certainly better for just raw performance.",
    "start": "7815720",
    "end": "7821540"
  },
  {
    "text": "- And raw intelligence. - And raw intelligence. I think the path that people might take, I'm particularly bullish on distillation.",
    "start": "7821540",
    "end": "7828320"
  },
  {
    "text": "And how many knobs can you turn to, if we spend a ton, ton\nof money on training,",
    "start": "7828320",
    "end": "7835040"
  },
  {
    "text": "get the most capable cheap model. Really, really caring as much as you can.",
    "start": "7835040",
    "end": "7840380"
  },
  {
    "text": "'Cause the naive version of\ncaring as much as you can about inference time compute, is what people have already\ndone with the Llama models.",
    "start": "7840380",
    "end": "7846020"
  },
  {
    "text": "Or just over-training\nthe shit out of 7B models on way, way, way more tokens\nthan is essential optimal.",
    "start": "7846020",
    "end": "7854180"
  },
  {
    "text": "But if you really care about it, maybe the thing to do is what Gamma did, which is let's not just train on tokens, let's literally train on\nminimizing the KL divergence",
    "start": "7854180",
    "end": "7864040"
  },
  {
    "text": "with the distribution of gemma 27B, right? So knowledge distillation there.",
    "start": "7864470",
    "end": "7870090"
  },
  {
    "text": "And you're spending the compute of literally training this\n27 billion parameter model",
    "start": "7870980",
    "end": "7876590"
  },
  {
    "text": "on all these tokens, just to get out this, I don't know, smaller model. - And the distillation gives\nyou just a faster model,",
    "start": "7876590",
    "end": "7882470"
  },
  {
    "text": "smaller means faster. - Yeah, distillation in theory is,",
    "start": "7882470",
    "end": "7885683"
  },
  {
    "text": "I think, getting out more signal from the data that you're training on. And it's perhaps another\nway of getting over,",
    "start": "7887480",
    "end": "7893780"
  },
  {
    "text": "not completely over, but partially helping with the data wall. Where you only have so\nmuch data to train on,",
    "start": "7893780",
    "end": "7899390"
  },
  {
    "text": "let's train this really, really big model on all these tokens and we'll distill it\ninto this smaller one. And maybe we can get more signal per token",
    "start": "7899390",
    "end": "7907559"
  },
  {
    "text": "for this much smaller model than we would've originally\nif we trained it. - So if I gave you $10 trillion,\nhow would you spend it?",
    "start": "7908433",
    "end": "7915743"
  },
  {
    "text": "(Aman chuckles) I mean, you can't buy\nan island or whatever. How would you allocate it in terms of improving the big model",
    "start": "7915743",
    "end": "7923600"
  },
  {
    "text": "versus maybe paying for HF in the RLHF?",
    "start": "7923600",
    "end": "7928600"
  },
  {
    "text": "- Yeah, yeah. I think, there's a lot of\nthese secrets and details",
    "start": "7929656",
    "end": "7935240"
  },
  {
    "text": "about training these large\nmodels that I just don't know, and are only privy to the large labs. And the issue is, I would\nwaste a lot of that money",
    "start": "7935240",
    "end": "7942620"
  },
  {
    "text": "if I even attempted this, because I wouldn't know those things. Suspending a lot of disbelief",
    "start": "7942620",
    "end": "7948199"
  },
  {
    "text": "and assuming you had the know-how, or if you're saying you have to operate",
    "start": "7948200",
    "end": "7955220"
  },
  {
    "text": "with the limited information you have now. - No, no, no, actually, I would say, you swoop in and you\nget all the information,",
    "start": "7955220",
    "end": "7962030"
  },
  {
    "text": "all the little heuristics,\nall the little parameters, all the parameters that define\nhow the thing is trained.",
    "start": "7962030",
    "end": "7969260"
  },
  {
    "text": "- Mm-hmm. - If we look in how to invest\nmoney for the next five years",
    "start": "7969260",
    "end": "7974330"
  },
  {
    "text": "in terms of maximizing what\nyou called raw intelligence. - I mean, isn't the answer really simple?",
    "start": "7974330",
    "end": "7979850"
  },
  {
    "text": "You just try to get as\nmuch compute as possible. At the end of the day, all\nyou need to buy is the GPUs.",
    "start": "7979850",
    "end": "7985745"
  },
  {
    "text": "You can tune whether you\nwant to pre-train a big model or a small model.",
    "start": "7990200",
    "end": "7995210"
  },
  {
    "text": "- Well, this gets into the question of are you really limited\nby compute and money, or are you limited by these other things?",
    "start": "7995210",
    "end": "8001003"
  },
  {
    "text": "- I'm more privy to Arvid's\nbelief that we're idea-limited, but there's always that like-",
    "start": "8002230",
    "end": "8007780"
  },
  {
    "text": "- But if you have a lot of compute, you can run a lot of experiments.",
    "start": "8007780",
    "end": "8012790"
  },
  {
    "text": "- So you would run a lot of experiments versus use that compute\nto trend a gigantic model?",
    "start": "8012790",
    "end": "8018580"
  },
  {
    "text": "- I would, but I do\nbelieve that we are limited in terms of ideas that we have.",
    "start": "8018580",
    "end": "8024639"
  },
  {
    "text": "- I think yeah, 'cause\neven with all this compute, and all the data you could\ncollect in the world,",
    "start": "8024640",
    "end": "8031030"
  },
  {
    "text": "I think you really are ultimately\nlimited by not even ideas, but just really good engineering.",
    "start": "8031030",
    "end": "8038353"
  },
  {
    "text": "There aren't that many people in the world who really can make the difference here. And there's so much work\nthat goes into research",
    "start": "8043630",
    "end": "8051700"
  },
  {
    "text": "that is just pure, really,\nreally hard engineering work. As a very hand-wavy example,",
    "start": "8051700",
    "end": "8058750"
  },
  {
    "text": "if you look at the\noriginal Transformer paper, how much work was joining together a lot of these really interesting\nconcepts embedded",
    "start": "8058750",
    "end": "8065800"
  },
  {
    "text": "in the literature, versus then going in and writing all the codes,\nmaybe the CUDA kernels,",
    "start": "8065800",
    "end": "8071170"
  },
  {
    "text": "maybe whatever else. I don't know if it ran them GPUs or TPUs. Originally, such that\nit actually saturated the GPU performance.",
    "start": "8071170",
    "end": "8078430"
  },
  {
    "text": "Getting GNOME Azure to go\nin and do all this code. And GNOME is probably\none of the best engineers in the world.",
    "start": "8078430",
    "end": "8083793"
  },
  {
    "text": "Or maybe going a step further, like the next generation of\nmodels, having these things. Like getting model parallelism to work,",
    "start": "8083793",
    "end": "8089500"
  },
  {
    "text": "and scaling it on thousands of, or maybe tens of thousands of V100s, which I think GBDE-III may have been.",
    "start": "8089500",
    "end": "8097180"
  },
  {
    "text": "There's just so much engineering effort that has to go into all of\nthese things to make it work.",
    "start": "8097180",
    "end": "8101803"
  },
  {
    "text": "If you really brought that\ncost down to maybe not zero,",
    "start": "8103180",
    "end": "8108180"
  },
  {
    "text": "but just made it 10 X easier,\nmade it super easy for someone with really fantastic ideas,",
    "start": "8108370",
    "end": "8113620"
  },
  {
    "text": "to immediately get to the version of the new architecture they dreamed up, that is getting 50, 40%\nutilization on their GPUs,",
    "start": "8113620",
    "end": "8122550"
  },
  {
    "text": "I think that would just\nspeed up research by a ton. - I mean, I think if you see\na clear path to improvement,",
    "start": "8122890",
    "end": "8130720"
  },
  {
    "text": "you should always take the\nlow-hanging fruit first, right? I think probably OpenAI\nand all the other labs",
    "start": "8130720",
    "end": "8136780"
  },
  {
    "text": "that did the right thing to\npick off the low-hanging fruit. Where the low-hanging fruit is like,",
    "start": "8136780",
    "end": "8141130"
  },
  {
    "text": "you could scale up to a GPT-4.25 scale",
    "start": "8143200",
    "end": "8147650"
  },
  {
    "text": "and you just keep scaling, and things keep getting better.",
    "start": "8149620",
    "end": "8153463"
  },
  {
    "text": "There's no point of\nexperimenting with new ideas when everything is working. And you should bang on",
    "start": "8155830",
    "end": "8161617"
  },
  {
    "text": "and to try to get as much as\nmuch juice out of the possible.",
    "start": "8161617",
    "end": "8164617"
  },
  {
    "text": "I think if you're spending $10 trillion, you probably wanna spend some, then actually reevaluate your ideas,",
    "start": "8167410",
    "end": "8173560"
  },
  {
    "text": "probably your idea a\nlittle bit at that point. - I think all of us believe\nnew ideas are probably needed",
    "start": "8173560",
    "end": "8179199"
  },
  {
    "text": "to get all the way there to AGI. And all of us also probably believe",
    "start": "8179200",
    "end": "8187270"
  },
  {
    "text": "there exist ways of\ntesting out those ideas at smaller scales, and\nbeing fairly confident",
    "start": "8187270",
    "end": "8194170"
  },
  {
    "text": "that they'll play out. It's just quite difficult for the labs",
    "start": "8194170",
    "end": "8199179"
  },
  {
    "text": "in their current position to dedicate their very limited research and engineering talent to\nexploring all these other ideas,",
    "start": "8199180",
    "end": "8207370"
  },
  {
    "text": "when there's this core thing that will probably improve performance",
    "start": "8207370",
    "end": "8212740"
  },
  {
    "text": "for some decent amount of time. - Yeah, but also, these\nbig labs like winning.",
    "start": "8212740",
    "end": "8218460"
  },
  {
    "text": "(Lex chuckles) So, they're just going wild. Okay. (all chuckling)",
    "start": "8219441",
    "end": "8224769"
  },
  {
    "text": "So, big question, looking\nout into the future. You're now at the center\nof the programming world.",
    "start": "8224770",
    "end": "8232059"
  },
  {
    "start": "8226000",
    "end": "8945000"
  },
  {
    "text": "How do you think programming, the nature of programming\nchanges in the next few months, in the next year, in the next two years",
    "start": "8232060",
    "end": "8238639"
  },
  {
    "text": "and the next five years, 10 years? - I think we're really\nexcited about a future",
    "start": "8238640",
    "end": "8243849"
  },
  {
    "text": "where the programmer\nis in the driver's seat for a long time. And you've heard us talk\nabout this a little bit,",
    "start": "8243850",
    "end": "8250389"
  },
  {
    "text": "but one that emphasizes speed and agency for the programmer and control.",
    "start": "8250390",
    "end": "8256240"
  },
  {
    "text": "The ability to modify\nanything you wanna modify, the ability to iterate really\nfast on what you're building.",
    "start": "8256240",
    "end": "8261760"
  },
  {
    "text": "And this is a little different, I think, than where some people\nare jumping to in the space,",
    "start": "8261760",
    "end": "8270059"
  },
  {
    "text": "where I think one idea\nthat's captivated people, is can you talk to your computer?",
    "start": "8270550",
    "end": "8278320"
  },
  {
    "text": "Can you have it build software for you? As if you're talking to\nan engineering department or an engineer over Slack. And can it just be this\nsort of isolated text box?",
    "start": "8278321",
    "end": "8285700"
  },
  {
    "text": "And part of the reason we're\nnot excited about that,",
    "start": "8285700",
    "end": "8290700"
  },
  {
    "text": "is some of the stuff we've\ntalked about with latency, but then a big piece, a reason\nwe're not excited about that,",
    "start": "8290770",
    "end": "8296080"
  },
  {
    "text": "is because that comes with\ngiving up a lot of control. It's much harder to be really specific when you're talking in the text box.",
    "start": "8296080",
    "end": "8302410"
  },
  {
    "text": "And if you're necessarily\njust going to communicate with a thing like you\nwould be communicating with an engineering department,",
    "start": "8302410",
    "end": "8308109"
  },
  {
    "text": "you're actually advocating tons of really important decisions to this bot.",
    "start": "8308111",
    "end": "8312553"
  },
  {
    "text": "And this kind of gets at, fundamentally, what engineering is.",
    "start": "8313630",
    "end": "8318670"
  },
  {
    "text": "I think that some people who are a little bit more\nremoved from engineering might think of it as the spec\nis completely written out",
    "start": "8318670",
    "end": "8324969"
  },
  {
    "text": "and then the engineers just\ncome and they just implement. And it's just about making\nthe thing happen in code",
    "start": "8324970",
    "end": "8330010"
  },
  {
    "text": "and making the thing exist. But I think a lot of the best engineering,",
    "start": "8330010",
    "end": "8335200"
  },
  {
    "text": "the engineering we enjoy, involves tons of tiny micro decisions about what exactly you're building,",
    "start": "8335200",
    "end": "8341290"
  },
  {
    "text": "and about really hard trade-offs\nbetween speed and cost and just all the other\nthings involved in a system.",
    "start": "8341290",
    "end": "8347982"
  },
  {
    "text": "As long as humans are actually the ones designing the software and the ones specifying\nwhat they want to be built,",
    "start": "8350950",
    "end": "8358450"
  },
  {
    "text": "and it's not just like\ncompany run by all AIs, we think you'll really want the human in a driver's seat\ndictating these decisions.",
    "start": "8358450",
    "end": "8366340"
  },
  {
    "text": "And so the jury's still out\non what that looks like. I think that one weird idea\nfor what that could look like,",
    "start": "8366340",
    "end": "8374260"
  },
  {
    "text": "is it could look like you can control the level of abstraction\nyou view a code base at.",
    "start": "8374260",
    "end": "8379809"
  },
  {
    "text": "And you can point at specific\nparts of a code base,",
    "start": "8379810",
    "end": "8383412"
  },
  {
    "text": "like, maybe you digest a\ncode base by looking at it in the form of pseudocode. And you can actually\nedit that pseudocode too,",
    "start": "8384921",
    "end": "8392620"
  },
  {
    "text": "and then have changes get made down at the formal programming level. And you can gesture at any piece of logic",
    "start": "8392620",
    "end": "8401580"
  },
  {
    "text": "in your software component of programming. You keep the inflow text editing\ncomponent of programming,",
    "start": "8401860",
    "end": "8407170"
  },
  {
    "text": "you keep the control of, you\ncan even go down into the code, you can go at higher\nlevels of abstraction,",
    "start": "8407170",
    "end": "8412360"
  },
  {
    "text": "while also giving you these\nbig productivity gains. - It'd be nice if you can go up and down\nthe abstraction stack.",
    "start": "8412360",
    "end": "8418330"
  },
  {
    "text": "- Yeah. And there are a lot of\ndetails to figure out there that's sort of like a fuzzy idea. Time will tell if it actually works. But these principles of control and speed",
    "start": "8418330",
    "end": "8425337"
  },
  {
    "text": "in the human in the driver's seat, we think are really important. We think for some things\nlike Arvid mentioned before,",
    "start": "8425337",
    "end": "8431140"
  },
  {
    "text": "for some styles of programming, you can hand it off chatbot-style. If you have a bug that's\nreally well specified.",
    "start": "8431140",
    "end": "8436840"
  },
  {
    "text": "But that's not most of programming, and that's also not\nmost of the programming we think a lot of people value.",
    "start": "8436840",
    "end": "8443500"
  },
  {
    "text": "- What about the fundamental\nskill of programming? There's a lot of people, like\nyoung people right now scared,",
    "start": "8443500",
    "end": "8450598"
  },
  {
    "text": "'cause they love programming,\nbut they're scared about, \"Will I be able to have a future if I pursue this career path?\"",
    "start": "8454162",
    "end": "8459820"
  },
  {
    "text": "Do you think the very skill of programming will change fundamentally? - I actually think this is a\nreally, really exciting time",
    "start": "8459820",
    "end": "8466630"
  },
  {
    "text": "to be building software. We remember what programming was like in 2013, 2012, whatever it was.",
    "start": "8466630",
    "end": "8474764"
  },
  {
    "text": "And there was just so much\nmore cruft and boilerplate and looking up something really gnarly.",
    "start": "8475930",
    "end": "8485380"
  },
  {
    "text": "And that stuff still exists,\nit's definitely not at zero. But programming today is\nway more fun than back then.",
    "start": "8485380",
    "end": "8492580"
  },
  {
    "text": "It's like we're really getting down to the delight concentration. And all the things that really\ndraw people to programming,",
    "start": "8492580",
    "end": "8499870"
  },
  {
    "text": "for instance, this element of being able to build things really fast and speed, and also individual control,",
    "start": "8499870",
    "end": "8506080"
  },
  {
    "text": "all those are just being turned up a ton. And so I think it's gonna\nbe a really, really fun time",
    "start": "8506080",
    "end": "8511779"
  },
  {
    "text": "for people who build software. I think that the skills\nwill probably change too. I think that people's\ntaste and creative ideas",
    "start": "8511780",
    "end": "8518650"
  },
  {
    "text": "will be magnified. And it will be maybe less, a little bit, about boilerplate text editing.",
    "start": "8518650",
    "end": "8525160"
  },
  {
    "text": "Maybe even a little bit\nless about carefulness, which I think is really important today",
    "start": "8525160",
    "end": "8530770"
  },
  {
    "text": "if you're a programmer. I think it'll be a lot more fun. - What do you guys think? - I agree.",
    "start": "8530770",
    "end": "8536109"
  },
  {
    "text": "I'm very excited to be able to change. One thing that happened recently,",
    "start": "8536110",
    "end": "8542800"
  },
  {
    "text": "was we wanted to do a\nrelatively big migration to our code base. We were using\nAsyncLocalStorage in Node.js,",
    "start": "8542800",
    "end": "8550119"
  },
  {
    "text": "which is known to be not very performant, and we wanted to migrate\nto a context object. And this is a big migration",
    "start": "8550120",
    "end": "8555430"
  },
  {
    "text": "and affects the entire code base. Sualeh and I spent, I don't know, five days working through this,\neven with today's AI tools.",
    "start": "8555430",
    "end": "8563650"
  },
  {
    "text": "And I am really excited for a future where I can just show a couple of examples",
    "start": "8563650",
    "end": "8570520"
  },
  {
    "text": "and then the AI applies that\nto all of the locations. And then it highlights, \"Oh, this is a new\nexample, what should I do?\"",
    "start": "8570520",
    "end": "8577660"
  },
  {
    "text": "And then, I show exactly what to do there. And then, that can be done in 10 minutes. And then, you can iterate\nmuch, much faster.",
    "start": "8577660",
    "end": "8585072"
  },
  {
    "text": "Then, you don't have to\nthink as much upfront and stand at the blackboard and think, \"Exactly, how are we gonna do this,",
    "start": "8586504",
    "end": "8592360"
  },
  {
    "text": "because the cost is so high?\" But you can just try something\nfirst and you realize, \"Oh, this is not actually\nexactly what I want.\"",
    "start": "8592360",
    "end": "8598629"
  },
  {
    "text": "And then, you can change\nit instantly again after. And so, yeah, I think being\na programmer in the future",
    "start": "8598629",
    "end": "8604960"
  },
  {
    "text": "is going to be a lot of fun. - Yeah, I really like that point. It feels like a lot of\nthe time with programming,",
    "start": "8604960",
    "end": "8611290"
  },
  {
    "text": "there are two ways you can go about it. One is you think really\nhard, carefully upfront",
    "start": "8611290",
    "end": "8617260"
  },
  {
    "text": "about the best possible way to do it, and then you spend your\nlimited time of engineering to actually implement it.",
    "start": "8617260",
    "end": "8623473"
  },
  {
    "text": "But I must refer just getting in the code and taking a crack at\nseeing how it lays out",
    "start": "8624430",
    "end": "8629890"
  },
  {
    "text": "and then iterating really quickly on that. That feels more fun.",
    "start": "8629890",
    "end": "8633823"
  },
  {
    "text": "- Yeah, just speaking to generate\nthe boilerplate, is great. So you just focus on the nuanced,",
    "start": "8635890",
    "end": "8642729"
  },
  {
    "text": "difficult design decisions. Migration, I feel like this is a cool one.",
    "start": "8642730",
    "end": "8648130"
  },
  {
    "text": "It seems like a larger\nlanguage models is able to basically translate for one\nprogram language to another. Or translate, migrate in the general sense",
    "start": "8648130",
    "end": "8656230"
  },
  {
    "text": "of what migrate is. But that's in the current moment. So mean the fear has to do with,",
    "start": "8656230",
    "end": "8662650"
  },
  {
    "text": "okay, as these models\nget better and better, then you're doing less and\nless creative decisions. And is it going to kind of move to a place",
    "start": "8662650",
    "end": "8668890"
  },
  {
    "text": "where you're operating in the design space of natural language",
    "start": "8668890",
    "end": "8674020"
  },
  {
    "text": "where natural language is the\nmain programming language? And, I guess, I could ask\nthat by way of advice.",
    "start": "8674020",
    "end": "8679450"
  },
  {
    "text": "If somebody's interested\nin programming now, what do you think they should learn?",
    "start": "8679450",
    "end": "8683224"
  },
  {
    "text": "You guys started in some Java. (group chuckling) And I forget, oh, some PHP.",
    "start": "8685330",
    "end": "8692628"
  },
  {
    "text": "- PHP. - Objective-C. - Objective-C, there you go. I mean in the end, we all know\nJavaScript was going to win",
    "start": "8692628",
    "end": "8699011"
  },
  {
    "text": "(group chuckling) and not TypeScript. It's going to be like vanilla JavaScript.",
    "start": "8699011",
    "end": "8704680"
  },
  {
    "text": "It's just going to eat the\nworld and maybe live with PHP. And I mean, it also\nbrings up the question of,",
    "start": "8704680",
    "end": "8710800"
  },
  {
    "text": "I think Don Knuth has this idea that some percent of\nthe population is geeks,",
    "start": "8710800",
    "end": "8716680"
  },
  {
    "text": "and there's a particular\nkind of psychology in mind required for programming.",
    "start": "8716680",
    "end": "8722200"
  },
  {
    "text": "And it feels like more\nand more that expands the kind of person that should be able to,",
    "start": "8722200",
    "end": "8727689"
  },
  {
    "text": "can do great programming might expand. - I think different people do programming",
    "start": "8727690",
    "end": "8734920"
  },
  {
    "text": "for different reasons. But I think the true,\nmaybe the best programmers",
    "start": "8734920",
    "end": "8739761"
  },
  {
    "text": "are the ones that really love, just absolutely love programming.",
    "start": "8741520",
    "end": "8746590"
  },
  {
    "text": "For example, there are folks on our team who literally when they\nget back from work,",
    "start": "8746590",
    "end": "8753360"
  },
  {
    "text": "they go and then they boot up Cursor, and then they start coding\non their side projects",
    "start": "8755590",
    "end": "8760600"
  },
  {
    "text": "for the entire night, and they stay up until 3:00 am doing that. And when they're sad, they said,",
    "start": "8760600",
    "end": "8766723"
  },
  {
    "text": "\"I just really need to code.\" (group chuckling) And I think there's\nthat level of programmer",
    "start": "8767987",
    "end": "8775480"
  },
  {
    "text": "where this obsession\nand love of programming, I think makes, really,\nthe best programmers.",
    "start": "8775480",
    "end": "8782890"
  },
  {
    "text": "And I think these types of people will really get into the\ndetails of how things work.",
    "start": "8782890",
    "end": "8789375"
  },
  {
    "text": "- I guess the question I'm\nasking, that exact programmer, let's think about that person.",
    "start": "8789430",
    "end": "8793573"
  },
  {
    "text": "When the super Tab, the super awesome praise\nbe the Tab succeeds,",
    "start": "8794740",
    "end": "8800410"
  },
  {
    "text": "and you keep pressing Tab. - That person in the team loves Cursor Tab more than anybody else, right?",
    "start": "8800410",
    "end": "8805660"
  },
  {
    "text": "- Yeah. Pressing Tab is just pressing Tab. That's the easy way to\nsay it in the catchphrase.",
    "start": "8805660",
    "end": "8813343"
  },
  {
    "text": "But what you're actually doing\nwhen you're pressing Tab, is that you're injecting\nintent all the time",
    "start": "8814390",
    "end": "8820510"
  },
  {
    "text": "while you're doing it. Sometimes you're rejecting it, sometimes you're typing\na few more characters.",
    "start": "8820510",
    "end": "8825910"
  },
  {
    "text": "And that's the way that\nyou're shaping the things",
    "start": "8825910",
    "end": "8830910"
  },
  {
    "text": "that's being created. And I think programming\nwill change a lot to just, \"What is it that you want to make?\"",
    "start": "8831130",
    "end": "8837730"
  },
  {
    "text": "- It's sort of higher bandwidth. The communication to the computer just becomes higher and higher bandwidth as opposed to just typing\nas much lower bandwidth",
    "start": "8837730",
    "end": "8845862"
  },
  {
    "text": "than communicating intent. - I mean, this goes to your manifesto",
    "start": "8845862",
    "end": "8851260"
  },
  {
    "text": "titled Engineering Genius. \"We are an applied research lab building extraordinary productive\nhuman AI systems.\"",
    "start": "8851260",
    "end": "8858460"
  },
  {
    "text": "So, speaking to this hybrid element. \"To start, we're building\nthe engineer of the future,",
    "start": "8858460",
    "end": "8864910"
  },
  {
    "text": "a human AI programmer that's an order of magnitude more effective\nthan any one engineer.",
    "start": "8864910",
    "end": "8870700"
  },
  {
    "text": "This hybrid engineer will\nhave effortless control over their code base and\nno low entropy keystrokes.",
    "start": "8870700",
    "end": "8876940"
  },
  {
    "text": "They will iterate at the\nspeed of their judgment, even in the most complex systems.",
    "start": "8876940",
    "end": "8882130"
  },
  {
    "text": "Using a combination of\nAI and human ingenuity, they will out-smart and out-engineer",
    "start": "8882130",
    "end": "8887440"
  },
  {
    "text": "the best pure AI systems. We are a group of\nresearchers and engineers. We build software and models to invent",
    "start": "8887440",
    "end": "8894460"
  },
  {
    "text": "at the edge of what's\nuseful and what's possible. Our work has already improved the lives of hundreds of thousands of programmers.\"",
    "start": "8894460",
    "end": "8901270"
  },
  {
    "text": "And on the way to that, we'll at least make programming more fun. So, thank you for talking today.",
    "start": "8901270",
    "end": "8906700"
  },
  {
    "text": "- Thank you.\n- Thanks for having us. - Thank you.\n- Thank you. - Thanks for listening\nto this conversation with Michael, Sualeh, Arvid and Aman.",
    "start": "8906700",
    "end": "8914649"
  },
  {
    "text": "To support this podcast, please check out our\nsponsors in the description. And now, let me leave\nyou with a random, funny,",
    "start": "8914650",
    "end": "8922600"
  },
  {
    "text": "and perhaps profound programming\ncode I saw on Reddit. Nothing is as permanent as a\ntemporary solution that works.",
    "start": "8922600",
    "end": "8931123"
  },
  {
    "text": "Thank you for listening and\nhope to see you next time.",
    "start": "8932320",
    "end": "8935354"
  }
]