[
  {
    "text": "the following is a conversation with Chris flattener currently he's a senior director of Google working on several",
    "start": "30",
    "end": "6060"
  },
  {
    "text": "projects including CPU GPU TPU accelerators for tensorflow swift for tensorflow and all kinds of",
    "start": "6060",
    "end": "12870"
  },
  {
    "text": "machine learning compiler magic going on behind the scenes he's one of the top experts in the world on compiler",
    "start": "12870",
    "end": "18930"
  },
  {
    "text": "technologies which means he deeply understands the intricacies of how hardware and software come together to",
    "start": "18930",
    "end": "26400"
  },
  {
    "text": "create efficient code he created the LLVM compiler infrastructure project and the clang compiler he led major",
    "start": "26400",
    "end": "34469"
  },
  {
    "text": "engineering efforts at Apple including the creation of the Swift programming language he also briefly spent time at",
    "start": "34469",
    "end": "41010"
  },
  {
    "text": "Tesla as vice president of auto pilot software during the transition from autopilot Hardware 1 to hardware 2 when",
    "start": "41010",
    "end": "48239"
  },
  {
    "text": "Tesla essentially started from scratch to build an in-house software infrastructure for autopilot I could",
    "start": "48239",
    "end": "55170"
  },
  {
    "text": "have easily talked to Chris for many more hours compiling code down across the levels abstraction is one of the",
    "start": "55170",
    "end": "61710"
  },
  {
    "text": "most fundamental and fascinating aspects of what computers do and he is one of the world experts in this process it's",
    "start": "61710",
    "end": "68760"
  },
  {
    "text": "rigorous science and it's messy beautiful art this conversation is part",
    "start": "68760",
    "end": "74580"
  },
  {
    "text": "of the artificial intelligence podcast if you enjoy it subscribe on youtube itunes or simply connect with me on",
    "start": "74580",
    "end": "80670"
  },
  {
    "text": "twitter at Lex Friedman spelled Fri D and now here's my conversation with",
    "start": "80670",
    "end": "87060"
  },
  {
    "text": "Chris Ladner what was the first program you've ever written my first program",
    "start": "87060",
    "end": "94049"
  },
  {
    "text": "back and when was it I think I started as a kid and my parents got a basic",
    "start": "94049",
    "end": "99960"
  },
  {
    "text": "programming book and so when I started it was typing out programs from a book and seeing how they worked and then",
    "start": "99960",
    "end": "107220"
  },
  {
    "text": "typing them in wrong and trying to figure out why they were not working right that kind of stuff so basic what",
    "start": "107220",
    "end": "113880"
  },
  {
    "text": "was the first language that you remember yourself maybe falling in love with like really connecting with I don't know I",
    "start": "113880",
    "end": "120450"
  },
  {
    "text": "mean I feel like I've learned a lot along the way and each of them have a different special thing about them so I",
    "start": "120450",
    "end": "126840"
  },
  {
    "text": "started in basic and then went like gw-basic which was the thing back in the DOS days and then",
    "start": "126840",
    "end": "132250"
  },
  {
    "text": "upgrade to QBasic and eventually quick basic which are all slightly more fancy",
    "start": "132250",
    "end": "137350"
  },
  {
    "text": "versions of Microsoft basic made the jump to Pascal and start doing machine",
    "start": "137350",
    "end": "142360"
  },
  {
    "text": "language programming and assembly in Pasco which was really cool through Pascal was amazing for its day",
    "start": "142360",
    "end": "147450"
  },
  {
    "text": "eventually going to C C++ and then kind of did lots of other weird things I feel",
    "start": "147450",
    "end": "153670"
  },
  {
    "text": "like you took the dark path which is the you could you could have gone Lisp yeah",
    "start": "153670",
    "end": "159670"
  },
  {
    "text": "you've got a higher-level sort of functional philosophical hippy route instead you went into like the dark arts",
    "start": "159670",
    "end": "166930"
  },
  {
    "text": "of the straight straight in the machine straight to toys so started with basic",
    "start": "166930",
    "end": "172630"
  },
  {
    "text": "task element assembly and then wrote a lot of assembly and why eventually I eventually did small talk and other",
    "start": "172630",
    "end": "179290"
  },
  {
    "text": "things like that but that was not the starting point but so what what is this journey to see is that in",
    "start": "179290",
    "end": "185709"
  },
  {
    "text": "high school is that in college that was in high school yeah so and then that was",
    "start": "185709",
    "end": "191430"
  },
  {
    "text": "it was really about trying to be able to do more powerful things than what Pascal could do and also to learn a different",
    "start": "191430",
    "end": "197800"
  },
  {
    "text": "world so he was really confusing me with pointers and the syntax and everything and it took a while but Pascal is much",
    "start": "197800",
    "end": "205600"
  },
  {
    "text": "more principled in various ways sees more I mean it has its historical roots",
    "start": "205600",
    "end": "213190"
  },
  {
    "text": "but it's it's not as easy to learn with pointers there's this memory management",
    "start": "213190",
    "end": "218790"
  },
  {
    "text": "thing that you have to become conscious of is that the first time you start to understand that there's resources that",
    "start": "218790",
    "end": "225070"
  },
  {
    "text": "you're supposed to manage well so you have that in Pascal as well but in Pascal these like the carrot instead of",
    "start": "225070",
    "end": "231070"
  },
  {
    "text": "the star and there's some small differences like that but it's not about pointer arithmetic and and and see it",
    "start": "231070",
    "end": "236830"
  },
  {
    "text": "you end up thinking about how things get laid out in memory a lot more and so in Pascal you have allocating and",
    "start": "236830",
    "end": "243519"
  },
  {
    "text": "deallocating and owning the the memory but just the programs are simpler and you don't have to well for example",
    "start": "243519",
    "end": "250540"
  },
  {
    "text": "Pascal has a string type and so you can think about a string instead of an array of characters which are consecutive in",
    "start": "250540",
    "end": "256810"
  },
  {
    "text": "memory so it's a little bit of a higher level abstraction so let's get into it",
    "start": "256810",
    "end": "262720"
  },
  {
    "text": "let's talk about LLVM si Lang and compilers sure so can you tell me first what I",
    "start": "262720",
    "end": "268900"
  },
  {
    "text": "love the a messy laying our and how is it that you find yourself the creator",
    "start": "268900",
    "end": "274420"
  },
  {
    "text": "and lead developer one of the most powerful compiler optimization systems than used today sure so I guess they're",
    "start": "274420",
    "end": "282610"
  },
  {
    "text": "different things so let's start with what is a compiler it's a is that a good place to start",
    "start": "282610",
    "end": "288760"
  },
  {
    "text": "what are the phases of a compiler where the parts yeah what is it so what does even a compiler are used for so the way",
    "start": "288760",
    "end": "294490"
  },
  {
    "text": "the way I look at this is you have a two sided problem of you have humans that need to write code and then you have",
    "start": "294490",
    "end": "300820"
  },
  {
    "text": "machines that need to run the program that the human wrote and for lots of reasons the humans don't want to be writing in binary and want to think",
    "start": "300820",
    "end": "307660"
  },
  {
    "text": "about every piece of hardware and so at the same time that you have lots of humans you also have lots of kinds of",
    "start": "307660",
    "end": "313210"
  },
  {
    "text": "hardware and so compilers are the art of allowing humans to think of the level of",
    "start": "313210",
    "end": "318580"
  },
  {
    "text": "abstraction that they want to think about and then get that program get the thing that they wrote to run on a",
    "start": "318580",
    "end": "324520"
  },
  {
    "text": "specific piece of hardware and the interesting and exciting part of all this is that there's now lots of",
    "start": "324520",
    "end": "330580"
  },
  {
    "text": "different kinds of hardware chips like x86 and PowerPC and arm and things like that but also high-performance",
    "start": "330580",
    "end": "336700"
  },
  {
    "text": "accelerators for machine learning and other things like that or also just different kinds of hardware GPUs these are new kinds of hardware and at the",
    "start": "336700",
    "end": "343210"
  },
  {
    "text": "same time on the programming side of it you have your basic UFC you have JavaScript you have Python you so if you",
    "start": "343210",
    "end": "350650"
  },
  {
    "text": "have like lots of other languages that are all trying to talk to the human in a different way to make them more",
    "start": "350650",
    "end": "355860"
  },
  {
    "text": "expressive and capable and powerful and so compilers are the thing that goes",
    "start": "355860",
    "end": "361690"
  },
  {
    "text": "from one to the other no and then from the very beginning end to end and so you go from what the human wrote and",
    "start": "361690",
    "end": "368580"
  },
  {
    "text": "programming languages end up being about expressing intent not just for the",
    "start": "368580",
    "end": "373630"
  },
  {
    "text": "compiler and the hardware but the programming languages job is really to to capture an expression of what the",
    "start": "373630",
    "end": "381790"
  },
  {
    "text": "programmer wanted that then can be maintained and adapted and evolved by other humans as well as by the",
    "start": "381790",
    "end": "387760"
  },
  {
    "text": "interpreter by the compiler so so when you look at this problem you have on one hand humans which are complicated and",
    "start": "387760",
    "end": "394240"
  },
  {
    "text": "you have hardware which is complicated until compilers typically work in multiple phases and so the software",
    "start": "394240",
    "end": "401950"
  },
  {
    "text": "engineering challenge that you have here is try to get maximum reuse out of the the amount of code that you write",
    "start": "401950",
    "end": "406960"
  },
  {
    "text": "because this these compilers are very complicated and so the way it typically works out is that you have something",
    "start": "406960",
    "end": "412660"
  },
  {
    "text": "called a front-end or a parser that is language specific and so you'll have a C parser and that's what clang is or C++",
    "start": "412660",
    "end": "421000"
  },
  {
    "text": "or JavaScript or Python or whatever that's the front-end then you'll have a middle part which is often the optimizer",
    "start": "421000",
    "end": "428650"
  },
  {
    "text": "and then you'll have a late part which is hardware specific and so compilers",
    "start": "428650",
    "end": "434200"
  },
  {
    "text": "end up there's many different layers often but these three big groups are very common in compilers and what LLVM",
    "start": "434200",
    "end": "441520"
  },
  {
    "text": "is trying to do is trying to standardize that middle and last part and so one of",
    "start": "441520",
    "end": "446710"
  },
  {
    "text": "the cool things about LLVM is that there are a lot of different languages that compile through to it and so things like",
    "start": "446710",
    "end": "452340"
  },
  {
    "text": "swift but also julia rust clang for C C++ objective-c like these are all very",
    "start": "452340",
    "end": "459910"
  },
  {
    "text": "different languages and they can all use the same optimization infrastructure which gets better performance and the",
    "start": "459910",
    "end": "465790"
  },
  {
    "text": "same code generation for structure for hardware support and so LVM is really that that layer that is common that all",
    "start": "465790",
    "end": "472570"
  },
  {
    "text": "these different specific compilers can use and is that is it a standard like a",
    "start": "472570",
    "end": "478390"
  },
  {
    "text": "specification or is it literally an implementation it's an implementation and so it's I think there's a couple",
    "start": "478390",
    "end": "485500"
  },
  {
    "text": "different ways of looking at write because it depends on what which angle you're looking at it from LVM ends up being a bunch of code okay",
    "start": "485500",
    "end": "492580"
  },
  {
    "text": "so it's a bunch of code that people reuse and they build compilers with we call it a compiler infrastructure",
    "start": "492580",
    "end": "497950"
  },
  {
    "text": "because it's kind of the underlying platform that you build a concrete compiler on top of but it's also a",
    "start": "497950",
    "end": "502990"
  },
  {
    "text": "community and the LVM community is hundreds of people that all collaborate and one of the most fascinating things",
    "start": "502990",
    "end": "509350"
  },
  {
    "text": "about LVM over the course of time is that we've managed somehow to successfully get harsh competitors in",
    "start": "509350",
    "end": "517150"
  },
  {
    "text": "the commercial space to collaborate on shared infrastructure and so you have Google and Apple you have AMD and Intel",
    "start": "517150",
    "end": "525760"
  },
  {
    "text": "you've Nvidia and d on the graphics side you have prey and everybody else doing these things and",
    "start": "525760",
    "end": "532760"
  },
  {
    "text": "like all these companies are collaborating together to make that shared infrastructure really really",
    "start": "532760",
    "end": "537980"
  },
  {
    "text": "great and they do this not other businesses or heart but they do it because it's in their commercial",
    "start": "537980",
    "end": "543050"
  },
  {
    "text": "interests of having really great infrastructure that they can build on top of and facing the reality that it's",
    "start": "543050",
    "end": "548329"
  },
  {
    "text": "so expensive that no one company even the big companies no one company really wants to implement it all themselves",
    "start": "548329",
    "end": "554170"
  },
  {
    "text": "expensive or difficult both that's a great point because it's also about the",
    "start": "554170",
    "end": "559310"
  },
  {
    "text": "skill sets right and these the skill sets are very hard hard to find how big",
    "start": "559310",
    "end": "566389"
  },
  {
    "text": "is the LLVM it always seems like with open-source projects the kind you know",
    "start": "566389",
    "end": "571910"
  },
  {
    "text": "LLVM open source yes it's open source it's about it's 19 years old now so it's fairly old it seems like the magic often",
    "start": "571910",
    "end": "580519"
  },
  {
    "text": "happens within a very small circle of people yes I'd like at least the early birth and whatever yes so the LVM came",
    "start": "580519",
    "end": "587990"
  },
  {
    "text": "from a university project and so I was at the University of Illinois and there it was myself my advisor and then a team",
    "start": "587990",
    "end": "594860"
  },
  {
    "text": "of two or three research students in the research group and we built many of the",
    "start": "594860",
    "end": "599899"
  },
  {
    "text": "core pieces initially I then graduated went to Apple and Apple brought it to",
    "start": "599899",
    "end": "605420"
  },
  {
    "text": "the products first in the OpenGL graphics stack but eventually to the C",
    "start": "605420",
    "end": "610790"
  },
  {
    "text": "compiler realm and eventually built clang and eventually built Swift in these things along the way building a team of people that are really amazing",
    "start": "610790",
    "end": "617449"
  },
  {
    "text": "compiler engineers that helped build a lot of that and so as it was gaining momentum and as Apple was using it being",
    "start": "617449",
    "end": "623660"
  },
  {
    "text": "open source in public and encouraging contribution many others for example at Google came in and started contributing",
    "start": "623660",
    "end": "629779"
  },
  {
    "text": "and some cases Google effectively owns clang now because it cares so much about C++ and the evolution of that that",
    "start": "629779",
    "end": "636680"
  },
  {
    "text": "ecosystem and so it's a vesting a lot in the C++ world and the tooling and things",
    "start": "636680",
    "end": "642440"
  },
  {
    "text": "like that and so likewise Nvidia cares a lot about CUDA and so CUDA uses clang and uses LVM",
    "start": "642440",
    "end": "650540"
  },
  {
    "text": "for for graphics and GPGPU and so when",
    "start": "650540",
    "end": "656060"
  },
  {
    "text": "you first started as a master's project I guess did you think is gonna go as far as it",
    "start": "656060",
    "end": "661779"
  },
  {
    "text": "went were you uh crazy ambitious about it no seems like a really difficult",
    "start": "661779",
    "end": "667810"
  },
  {
    "text": "undertaking a brave one yeah no it was nothing like that so I mean my goal when I went to University of Illinois was to",
    "start": "667810",
    "end": "673959"
  },
  {
    "text": "get in and out with the non thesis masters in a year and get back to work so I was not I was not planning to stay",
    "start": "673959",
    "end": "681310"
  },
  {
    "text": "for five years and and build this massive infrastructure I got nerd sniped into staying and a lot of it was because",
    "start": "681310",
    "end": "688449"
  },
  {
    "text": "Elvin was fun I was building cool stuff than learning really interesting things and facing will suffer engineering",
    "start": "688449",
    "end": "696490"
  },
  {
    "text": "challenges but also learning how to work in a team and things like that I had worked at many companies as interns",
    "start": "696490",
    "end": "702129"
  },
  {
    "text": "before that but it was really a different a different thing to have a team of people that were working",
    "start": "702129",
    "end": "707470"
  },
  {
    "text": "together and try and collaborate in version control and it was it was just a little bit different like I said I just",
    "start": "707470",
    "end": "713019"
  },
  {
    "text": "talked to Don Knuth and he believes that 2% of the world population have something weird with their brain that",
    "start": "713019",
    "end": "718660"
  },
  {
    "text": "they're geeks they understand computers to connect with computer he put it exactly 2 percent okay so this specific",
    "start": "718660",
    "end": "726189"
  },
  {
    "text": "guy is very specific he says I can't prove it but it's very empirical II there is there something that attracts",
    "start": "726189",
    "end": "734319"
  },
  {
    "text": "you to the idea of optimizing code and he seems like that's one of the biggest coolest things about oh yeah that's one",
    "start": "734319",
    "end": "741370"
  },
  {
    "text": "of the major things it does so I got into that because of a person actually so when I was in my undergraduate I had",
    "start": "741370",
    "end": "748329"
  },
  {
    "text": "an advisor or a professor named Steve Bechtel and he I went to this little",
    "start": "748329",
    "end": "754089"
  },
  {
    "text": "tiny private school we there were like seven or nine people in my computer science department students in my in my",
    "start": "754089",
    "end": "762220"
  },
  {
    "text": "class so it was a very tiny very very small school it was a kind of a wart on",
    "start": "762220",
    "end": "768880"
  },
  {
    "text": "the side of the math department kind of a thing at the time I think it's evolved a lot in the many years since then but",
    "start": "768880",
    "end": "774120"
  },
  {
    "text": "but Steve egg Dahl was a compiler guy and he was super passionate and he his",
    "start": "774120",
    "end": "781540"
  },
  {
    "text": "passion rubbed off on me and one of the things I like about compilers is that they're large complicated software",
    "start": "781540",
    "end": "787680"
  },
  {
    "text": "pieces and so one of the culminating classes",
    "start": "787680",
    "end": "792760"
  },
  {
    "text": "is that many computer science departments at least at the time did was to say that you take algorithms and data",
    "start": "792760",
    "end": "797860"
  },
  {
    "text": "structures in all these core classes but then the compilers class was one of the last classes you take because it pulls",
    "start": "797860",
    "end": "803380"
  },
  {
    "text": "everything together and then you work on one piece of code over the entire semester and and so you keep building on",
    "start": "803380",
    "end": "811060"
  },
  {
    "text": "your own work which is really interesting it's also very challenging because in many classes if you don't get",
    "start": "811060",
    "end": "816790"
  },
  {
    "text": "a project done you just forget about it and move on to the next one and get your you know your B or whatever it is but here you have to live with the decisions",
    "start": "816790",
    "end": "823390"
  },
  {
    "text": "you make and continue to reinvest in it and I really like that and and so I did",
    "start": "823390",
    "end": "829450"
  },
  {
    "text": "a extra study project within the following semester and he was just really great and he was also a great",
    "start": "829450",
    "end": "835630"
  },
  {
    "text": "mentor in a lot of ways and so from from him and from his advice he encouraged me to go to graduate school I wasn't super",
    "start": "835630",
    "end": "841990"
  },
  {
    "text": "excited about going grad school I wanted the master's degree but I didn't want to be in academic and but like I said I",
    "start": "841990",
    "end": "849760"
  },
  {
    "text": "kind of got tricked into saying and was having a lot of fun and I definitely do not regret it what aspects of compilers",
    "start": "849760",
    "end": "855790"
  },
  {
    "text": "were the things you connected with so LVM there's also the other part this is",
    "start": "855790",
    "end": "862450"
  },
  {
    "text": "really interesting if you're interested in languages is parsing and you know just analyzing like yeah analyzing",
    "start": "862450",
    "end": "869230"
  },
  {
    "text": "language breaking it out parsing so on was that interesting to you were you more engine optimization for me it was",
    "start": "869230",
    "end": "874660"
  },
  {
    "text": "more so I'm I'm not really a math person I can do math I understand some bits of it when I get into it but math is never",
    "start": "874660",
    "end": "882430"
  },
  {
    "text": "the thing that that attracted me and so a lot of the parser part of the compiler has a lot of good formal theories that",
    "start": "882430",
    "end": "888040"
  },
  {
    "text": "dawn for example knows quite well still waiting for his book on that but but the",
    "start": "888040",
    "end": "894070"
  },
  {
    "text": "but I just like building a thing and and seeing what it could do and exploring and getting it to do more things and",
    "start": "894070",
    "end": "900880"
  },
  {
    "text": "then setting new goals and reaching for them and and with in the case of component in the case of LVM when I",
    "start": "900880",
    "end": "907750"
  },
  {
    "text": "start work on that my research advisor that I was working for was a compiler",
    "start": "907750",
    "end": "912970"
  },
  {
    "text": "guy and so he and I specifically found each other because we're both interested in compilers and so I started working with them and taking his class and a lot",
    "start": "912970",
    "end": "919870"
  },
  {
    "text": "of LLVM initially was it's fun implementing all the standard algorithms and all the all the things that pea",
    "start": "919870",
    "end": "925500"
  },
  {
    "text": "have been talking about and were well-known and they were in the the curricula for Advanced Studies and",
    "start": "925500",
    "end": "930780"
  },
  {
    "text": "compilers and so just being able to build that was really fun and I was learning a lot by instead of reading",
    "start": "930780",
    "end": "937470"
  },
  {
    "text": "about it just building and so I enjoyed that so he said compositor these complicated systems can you even just with language",
    "start": "937470",
    "end": "945600"
  },
  {
    "text": "tried to describe you know how you turn a C++ program yes into code like what",
    "start": "945600",
    "end": "952620"
  },
  {
    "text": "are the hard parts why is this hard so I'll give you examples of the hard parts Illinois so C++ is a very complicated",
    "start": "952620",
    "end": "960090"
  },
  {
    "text": "programming way which is something like 1400 pages in the spec so people as possible as crazy complicated paas what",
    "start": "960090",
    "end": "967380"
  },
  {
    "text": "makes a language complicated in terms of what's syntactically like us so it's",
    "start": "967380",
    "end": "973440"
  },
  {
    "text": "what they call syntax so the actual how the character is arranged yes it's also semantics how it behaves it's also in",
    "start": "973440",
    "end": "980730"
  },
  {
    "text": "the case of C++ there's a huge amount of history C was supposed to build on top of C you play that forward and then a",
    "start": "980730",
    "end": "987060"
  },
  {
    "text": "bunch of suboptimal in some cases decisions were made and they compound and then more and more and more things",
    "start": "987060",
    "end": "993300"
  },
  {
    "text": "keep getting added to C++ and it will probably never stop but the language is very complicated from that perspective",
    "start": "993300",
    "end": "999390"
  },
  {
    "text": "and so the interactions between subsystems is very complicated there's just a lot there and when you talk about",
    "start": "999390",
    "end": "1005060"
  },
  {
    "text": "the front end one of the major challenges which clang as a project the the C C++ compiler that I built I and",
    "start": "1005060",
    "end": "1011390"
  },
  {
    "text": "many people built one of the challenges we took on was we looked at GCC ok GCC",
    "start": "1011390",
    "end": "1018200"
  },
  {
    "text": "at the time was like a really good industry standardized compiler that had",
    "start": "1018200",
    "end": "1023600"
  },
  {
    "text": "really consolidated a lot of the other compilers in the world and was was a standard but it wasn't really great for",
    "start": "1023600",
    "end": "1029209"
  },
  {
    "text": "research the design was very difficult to work with and it was full of global",
    "start": "1029209",
    "end": "1034850"
  },
  {
    "text": "variables and other other things that made it very difficult to reuse in ways that it wasn't originally designed for and so with claying one of the things",
    "start": "1034850",
    "end": "1041688"
  },
  {
    "text": "what we wanted to do is push forward on better user interface so make error messages that are just better than GCC's",
    "start": "1041689",
    "end": "1047839"
  },
  {
    "text": "and that that's actually hard because you have to do a lot of bookkeeping in an efficient way today I'll do that we want to make",
    "start": "1047839",
    "end": "1053990"
  },
  {
    "text": "compile-time better and so compile-time is about making it efficient which is also really hard when you're keeping track of extra information we wanted to",
    "start": "1053990",
    "end": "1061070"
  },
  {
    "text": "make new tools available so refactoring tools and other analysis tools the the",
    "start": "1061070",
    "end": "1066530"
  },
  {
    "text": "GCC never supported also leveraging the extra information we kept but enabling",
    "start": "1066530",
    "end": "1072890"
  },
  {
    "text": "those new classes the tools that then get built into IDs and so that's been one of the one of the areas that clang",
    "start": "1072890",
    "end": "1078830"
  },
  {
    "text": "has really helped push the world forward in the tooling for C and C++ and things like that but C++ and the front-end",
    "start": "1078830",
    "end": "1086750"
  },
  {
    "text": "piece is complicated and you have to build syntax trees and you have to check every rule in the spec and you have to",
    "start": "1086750",
    "end": "1091790"
  },
  {
    "text": "turn that back into an error message to the humor humor that the human can understand when they do something wrong",
    "start": "1091790",
    "end": "1096910"
  },
  {
    "text": "but then you start doing the what's called lowering so going from C++ in the",
    "start": "1096910",
    "end": "1102200"
  },
  {
    "text": "way that it represents code down to the machine and when you do that there's many different phases you go through",
    "start": "1102200",
    "end": "1108940"
  },
  {
    "text": "often there are I think LLVM something like 150 different what are called",
    "start": "1108940",
    "end": "1114410"
  },
  {
    "text": "passes in the compiler that the code passed passes through and these get",
    "start": "1114410",
    "end": "1119590"
  },
  {
    "text": "organized in very complicated ways which affect the generated code in performance and compile time and many of the things",
    "start": "1119590",
    "end": "1125990"
  },
  {
    "text": "what are they passing through so after you do the clang parsing what's what's",
    "start": "1125990",
    "end": "1132410"
  },
  {
    "text": "the graph what does it look like what's the data structure here yeah so in in the parser it's usually a tree and it's",
    "start": "1132410",
    "end": "1139220"
  },
  {
    "text": "called an abstract syntax tree and so the idea is you you have a node for the plus that the human wrote in their code",
    "start": "1139220",
    "end": "1146120"
  },
  {
    "text": "or the function call you'll have a node for call with the function that they call and the arguments they pass things",
    "start": "1146120",
    "end": "1152000"
  },
  {
    "text": "like that this then gets lowered into what's called an intermediate",
    "start": "1152000",
    "end": "1157190"
  },
  {
    "text": "representation and intermediate representations are like LVM has one and there it's a it's what's called a",
    "start": "1157190",
    "end": "1165920"
  },
  {
    "text": "control flow graph and so you represent each operation in the program as a very",
    "start": "1165920",
    "end": "1171680"
  },
  {
    "text": "simple like this is gonna add two numbers this is gonna multiply two things maybe we'll do a call but then",
    "start": "1171680",
    "end": "1177770"
  },
  {
    "text": "they get put in what are called blocks and so you get blocks of these straight line operations or instead of being",
    "start": "1177770",
    "end": "1184220"
  },
  {
    "text": "nested like in a tree it's straight line operation and so there's a sequence and ordering to these operations and then in the",
    "start": "1184220",
    "end": "1190410"
  },
  {
    "text": "block we're outside the block that's within the block and so it's a straight line sequence of operations within the block and then you have branches like",
    "start": "1190410",
    "end": "1197610"
  },
  {
    "text": "conditional branches between blocks and so when you write a loop for example in",
    "start": "1197610",
    "end": "1203310"
  },
  {
    "text": "a syntax tree you would have a four node like for a for statement and I see like",
    "start": "1203310",
    "end": "1208710"
  },
  {
    "text": "language you'd out a four node and you have a pointer to the expression for the initializer a pointer to the expression",
    "start": "1208710",
    "end": "1214050"
  },
  {
    "text": "for the increment a pointer to the expression for the comparison a pointer to the body okay and these are all",
    "start": "1214050",
    "end": "1219330"
  },
  {
    "text": "nested underneath it in a control flow graph you get a block for the code that",
    "start": "1219330",
    "end": "1224670"
  },
  {
    "text": "runs before the loop so the initializer code then you have a block for the body of the loop and so the the body of the",
    "start": "1224670",
    "end": "1232080"
  },
  {
    "text": "loop code goes in there but also they increment and other things like that and then you have a branch that goes back to the top and a comparison and branch that",
    "start": "1232080",
    "end": "1239190"
  },
  {
    "text": "goes out and so it's more of a assembly level kind of representation but the",
    "start": "1239190",
    "end": "1244230"
  },
  {
    "text": "nice thing about this level of representation is it's much more language independent and so there's lots",
    "start": "1244230",
    "end": "1249810"
  },
  {
    "text": "of different kinds of languages with different kinds of you know JavaScript",
    "start": "1249810",
    "end": "1255030"
  },
  {
    "text": "has a lot of different ideas of what is false for example and all that can stay in the front end but then that middle",
    "start": "1255030",
    "end": "1261960"
  },
  {
    "text": "part can be shared across all those how close is that intermediate representation to ten yuan that works",
    "start": "1261960",
    "end": "1269340"
  },
  {
    "text": "for example is they are they because everything described as a kind of neural",
    "start": "1269340",
    "end": "1275250"
  },
  {
    "text": "network graph right yeah that's all we need a neighbor's or what they're they're quite different in details but",
    "start": "1275250",
    "end": "1281040"
  },
  {
    "text": "they're very similar and idea so one of the things that normal networks do is they learn representations for data at",
    "start": "1281040",
    "end": "1286920"
  },
  {
    "text": "different levels of abstraction right and then they transform those through layers right so the compiler does very",
    "start": "1286920",
    "end": "1294900"
  },
  {
    "text": "similar things but one of the things the compiler does is it has relatively few different representations or a neural",
    "start": "1294900",
    "end": "1301050"
  },
  {
    "text": "network often as you get deeper for example you get many different representations in each you know layer",
    "start": "1301050",
    "end": "1306630"
  },
  {
    "text": "or set of ops is transforming between these different representations and compiler often you get one",
    "start": "1306630",
    "end": "1312330"
  },
  {
    "text": "representation and they do many transformations to it and these transformations are often applied iteratively",
    "start": "1312330",
    "end": "1319230"
  },
  {
    "text": "and for programmers there's familiar types of things for example trying to find expressions inside of a loop and",
    "start": "1319230",
    "end": "1326250"
  },
  {
    "text": "pulling them out of a loop so if they execute four times or a fine redundant computation or find constant",
    "start": "1326250",
    "end": "1333570"
  },
  {
    "text": "folding or other simplifications turning you know 2 times X into X shift left by",
    "start": "1333570",
    "end": "1338640"
  },
  {
    "text": "one and and things like this or all all all the examples of the things that happen but compilers end up getting a",
    "start": "1338640",
    "end": "1344490"
  },
  {
    "text": "lot of theorem proving and other kinds of algorithms that try to find higher-level properties of the program",
    "start": "1344490",
    "end": "1349830"
  },
  {
    "text": "that then can be used by the optimizer cool so what's like the biggest bang for",
    "start": "1349830",
    "end": "1355080"
  },
  {
    "text": "the buck with optimization what's there yeah well no not even today at the very",
    "start": "1355080",
    "end": "1361260"
  },
  {
    "text": "beginning the 80s I don't know but yeah so for the 80s a lot of it was things like register allocation so the idea of",
    "start": "1361260",
    "end": "1367290"
  },
  {
    "text": "in in a modern like a microprocessor what you'll end up having is you're having memory which is relatively slow",
    "start": "1367290",
    "end": "1374040"
  },
  {
    "text": "and then you have registers relatively fast but registers you don't have very many of them ok and so when you're",
    "start": "1374040",
    "end": "1381030"
  },
  {
    "text": "writing a bunch of code you're just saying like compute this put it in temporary variable compute those compute this compute this put in temporary well",
    "start": "1381030",
    "end": "1387750"
  },
  {
    "text": "I have a loop I have some other stuff going on well now you're running on an x86 like a desktop PC or something well it only has",
    "start": "1387750",
    "end": "1394590"
  },
  {
    "text": "in some cases some modes eight registers right and so now the compiler has to",
    "start": "1394590",
    "end": "1400230"
  },
  {
    "text": "choose what values get put in what registers at what points in the program and this is actually a really big deal",
    "start": "1400230",
    "end": "1406080"
  },
  {
    "text": "so if you think about you have a loop and then an inner loop to execute millions of times maybe if you're doing",
    "start": "1406080",
    "end": "1412020"
  },
  {
    "text": "loads and stores inside that loop then it's gonna be really slow but if you can somehow fit all the values inside that",
    "start": "1412020",
    "end": "1417480"
  },
  {
    "text": "loop and registers now it's really fast and so getting that right requires a lot",
    "start": "1417480",
    "end": "1422850"
  },
  {
    "text": "of work because there's many different ways to do that and often what the compiler ends up doing is it ends up thinking about things in a different",
    "start": "1422850",
    "end": "1429360"
  },
  {
    "text": "representation than what the human wrote all right you wrote into X well the compiler thinks about that as four",
    "start": "1429360",
    "end": "1435150"
  },
  {
    "text": "different values each which have different lifetimes across the function that it's in and each of those could be",
    "start": "1435150",
    "end": "1441360"
  },
  {
    "text": "put in a register or memory or different memory or maybe in some parts of the code recomputed instead of stored and",
    "start": "1441360",
    "end": "1448049"
  },
  {
    "text": "reloaded and there are many of these different kinds of techniques that can be used so it's adding almost like a",
    "start": "1448049",
    "end": "1453080"
  },
  {
    "text": "time-dimension - it's trying to trying to optimize across time so considering",
    "start": "1453080",
    "end": "1458970"
  },
  {
    "text": "when when you're programming you're not thinking and yeah absolutely and so the the RISC era made thing this",
    "start": "1458970",
    "end": "1466350"
  },
  {
    "text": "so so RISC chips Ras see the the risks risk chips as opposed to sisk chips the",
    "start": "1466350",
    "end": "1473789"
  },
  {
    "text": "risk chips made things more complicated for the compiler because what they ended",
    "start": "1473789",
    "end": "1479309"
  },
  {
    "text": "up doing is ending up adding pipelines to the processor where the processor can do more than one thing at a time but",
    "start": "1479309",
    "end": "1485070"
  },
  {
    "text": "this means that the order of operations matters a lot and so one of the classical compiler techniques that you use is called scheduling and so moving",
    "start": "1485070",
    "end": "1493020"
  },
  {
    "text": "the instructions around so that the processor can act like keep its pipelines full instead of stalling and",
    "start": "1493020",
    "end": "1498539"
  },
  {
    "text": "getting blocked and so there's a lot of things like that that are kind of bread and butter a compiler techniques have",
    "start": "1498539",
    "end": "1503730"
  },
  {
    "text": "been studied a lot over the course of decades now but the engineering side of making them real is also still quite",
    "start": "1503730",
    "end": "1509850"
  },
  {
    "text": "hard and you talk about machine learning this is this is a huge opportunity for machine learning because many of these",
    "start": "1509850",
    "end": "1515309"
  },
  {
    "text": "algorithms are full of these like hokey hand-rolled heuristics which work well on specific benchmarks we don't",
    "start": "1515309",
    "end": "1521100"
  },
  {
    "text": "generalize and full of magic numbers and you know I hear there's some techniques",
    "start": "1521100",
    "end": "1526470"
  },
  {
    "text": "that are good at handling that so what would be the if you were to apply machine learning to this what's the",
    "start": "1526470",
    "end": "1533549"
  },
  {
    "text": "thing you try to optimize is it ultimately the running time you can pick",
    "start": "1533549",
    "end": "1539460"
  },
  {
    "text": "your metric and there's there's running time there's memory use there's there's lots of different things that you can optimize for code code size is another",
    "start": "1539460",
    "end": "1546090"
  },
  {
    "text": "one that some people care about in the embedded space is this like the thinking into the future or somebody actually",
    "start": "1546090",
    "end": "1552840"
  },
  {
    "text": "been crazy enough to try to have machine learning based parameter tuning for",
    "start": "1552840",
    "end": "1559260"
  },
  {
    "text": "optimization of compilers so this is something that is I would say research right now there are a lot of research",
    "start": "1559260",
    "end": "1566309"
  },
  {
    "text": "systems that have been applying search in various forums and using reinforcement learning is one form but",
    "start": "1566309",
    "end": "1571590"
  },
  {
    "text": "also brute force search has been tried for a quite a while and usually these are in small small problem spaces so",
    "start": "1571590",
    "end": "1578309"
  },
  {
    "text": "find the optimal way to code generate a matrix multiply for a GPU write",
    "start": "1578309",
    "end": "1583590"
  },
  {
    "text": "something like that where we say there there's a lot of design space of do you unroll uppsala do",
    "start": "1583590",
    "end": "1590070"
  },
  {
    "text": "you execute multiple things in parallel and there's many different confounding factors here because graphics cards have",
    "start": "1590070",
    "end": "1596760"
  },
  {
    "text": "different numbers of threads and registers and execution ports and memory bandwidth and many different constraints",
    "start": "1596760",
    "end": "1602070"
  },
  {
    "text": "to interact in nonlinear ways and so search is very powerful for that and it",
    "start": "1602070",
    "end": "1608010"
  },
  {
    "text": "gets used in in certain ways but it's not very structured this is something that we need we as an industry need to",
    "start": "1608010",
    "end": "1613590"
  },
  {
    "text": "fix these set ATS but like so have there been like big jumps and improvement and",
    "start": "1613590",
    "end": "1619980"
  },
  {
    "text": "optimization yeah yeah yes since then what's yeah so so it's largely been",
    "start": "1619980",
    "end": "1626070"
  },
  {
    "text": "driven by hardware so hartwell hardware and software so in the mid-90s Java",
    "start": "1626070",
    "end": "1632060"
  },
  {
    "text": "totally changed the world right and and I'm still amazed by how much change was",
    "start": "1632060",
    "end": "1637110"
  },
  {
    "text": "introduced by the way or in a good way so like reflecting back Java introduced things like it all at once introduced",
    "start": "1637110",
    "end": "1643500"
  },
  {
    "text": "things like JIT compilation none of these were novel but it pulled it together and made it mainstream and",
    "start": "1643500",
    "end": "1648720"
  },
  {
    "text": "and made people invest in it JIT compilation garbage collection portable code safe code say like memory safe code",
    "start": "1648720",
    "end": "1656810"
  },
  {
    "text": "like a very dynamic dispatch execution model like many of these things which",
    "start": "1656810",
    "end": "1662760"
  },
  {
    "text": "had been done in research systems and had been done in small ways and various places really came to the forefront",
    "start": "1662760",
    "end": "1667770"
  },
  {
    "text": "really changed how things worked and therefore changed the way people thought about the problem javascript was another",
    "start": "1667770",
    "end": "1673890"
  },
  {
    "text": "major world change based on the way it works but also on the hardware side of",
    "start": "1673890",
    "end": "1680430"
  },
  {
    "text": "things multi-core and vector instructions really change the problem",
    "start": "1680430",
    "end": "1687120"
  },
  {
    "text": "space and are very they don't remove any of the problems that composers faced in the past but they they add new kinds of",
    "start": "1687120",
    "end": "1693900"
  },
  {
    "text": "problems of how do you find enough work to keep a four-wide vector busy right or",
    "start": "1693900",
    "end": "1700110"
  },
  {
    "text": "if you're doing a matrix multiplication how do you do different columns out of that matrix in at the same time and how",
    "start": "1700110",
    "end": "1706830"
  },
  {
    "text": "do you maximally utilize the the arithmetic compute that one core has and then how do you take it to multiple",
    "start": "1706830",
    "end": "1712560"
  },
  {
    "text": "cores and how did the whole virtual machine thing change the compilation pipeline yeah so so what what the java",
    "start": "1712560",
    "end": "1719550"
  },
  {
    "text": "virtual machine does is it splits just like I've talked about before where you have a front-end that",
    "start": "1719550",
    "end": "1725130"
  },
  {
    "text": "parses the code and then you have an intermediate representation that gets transformed what Java did was they said",
    "start": "1725130",
    "end": "1730500"
  },
  {
    "text": "we will parse the code and then compile to what's known as Java bytecode and that bytecode is now a portable code",
    "start": "1730500",
    "end": "1737610"
  },
  {
    "text": "representation that is industry-standard and locked down and can't change and then the the back part of the compiler",
    "start": "1737610",
    "end": "1744810"
  },
  {
    "text": "the the does optimization and code generation can now be built by different vendors okay and Java bytecode can be",
    "start": "1744810",
    "end": "1751440"
  },
  {
    "text": "shipped around across the wire its memory safe and relatively trusted and",
    "start": "1751440",
    "end": "1756600"
  },
  {
    "text": "because of that it can run in the browser and that's why it runs in the browser yeah right and so that way you can be in you know again back in the day",
    "start": "1756600",
    "end": "1763740"
  },
  {
    "text": "you would write a Java applet and you use as a little as a web developer you'd build this mini app that run a web page",
    "start": "1763740",
    "end": "1770010"
  },
  {
    "text": "well a user of that is running a web browser on their computer you download that that Java bytecode which can be",
    "start": "1770010",
    "end": "1776550"
  },
  {
    "text": "trusted and then you do all the compiler stuff on your machine so that you know",
    "start": "1776550",
    "end": "1781560"
  },
  {
    "text": "that you trust that that was that a good idea a bad idea it's great idea I mean it's great idea for certain problems and I'm very much believe for the",
    "start": "1781560",
    "end": "1788310"
  },
  {
    "text": "technologies itself neither good nor bad it's how you apply it you know this",
    "start": "1788310",
    "end": "1793350"
  },
  {
    "text": "would be a very very bad thing for very low levels of the software stack but but in terms of solving some of these",
    "start": "1793350",
    "end": "1799230"
  },
  {
    "text": "software portability and transparency your portability problems I think it's been really good now Java ultimately",
    "start": "1799230",
    "end": "1805020"
  },
  {
    "text": "didn't win out on the desktop and like there are good reasons for that but it's",
    "start": "1805020",
    "end": "1810450"
  },
  {
    "text": "been very successful on servers and in many places it's been a very successful thing over over decades so what has been",
    "start": "1810450",
    "end": "1819230"
  },
  {
    "text": "ll VMs and ceilings improvements in",
    "start": "1819230",
    "end": "1824580"
  },
  {
    "text": "optimization that throughout its history what are some moments we get set back",
    "start": "1824580",
    "end": "1830910"
  },
  {
    "text": "I'm really proud of what's been accomplished yeah I think that the interesting thing about LLVM is not the",
    "start": "1830910",
    "end": "1836910"
  },
  {
    "text": "innovations in compiler research it has very good implementations of various",
    "start": "1836910",
    "end": "1842430"
  },
  {
    "text": "important algorithms no doubt and and a lot of really smart people have worked",
    "start": "1842430",
    "end": "1848040"
  },
  {
    "text": "on it but I think that the thing was most profound about LLVM is that through standardization it made things possible",
    "start": "1848040",
    "end": "1853560"
  },
  {
    "text": "too otherwise wouldn't have happened okay and so interesting things that have happened with LVM for example sony has",
    "start": "1853560",
    "end": "1860280"
  },
  {
    "text": "picked up lv m and used it to do all the graphics compilation in their movie production pipeline and so now they're",
    "start": "1860280",
    "end": "1866610"
  },
  {
    "text": "able to have better special effects because of LVN that's kind of cool that's not what it was designed for",
    "start": "1866610",
    "end": "1872190"
  },
  {
    "text": "right but that's that's the sign of good infrastructure when it can be used in",
    "start": "1872190",
    "end": "1877560"
  },
  {
    "text": "ways it was never designed for because it has good layering and software engineering and it's composable and things like that just where as you said",
    "start": "1877560",
    "end": "1884430"
  },
  {
    "text": "it differs from GCC yes GCC is also great in various ways but it's not as good as a infrastructure technology it's",
    "start": "1884430",
    "end": "1891930"
  },
  {
    "text": "it's you know it's really a C compiler or it's or it's a fortunate compiler it's not it's not infrastructure in the",
    "start": "1891930",
    "end": "1898170"
  },
  {
    "text": "same way is it now you can tell I don't know what I'm talking about because I'm sick eep saying si Lang you can you",
    "start": "1898170",
    "end": "1904920"
  },
  {
    "text": "could always tell when a person is close by the way pronounce something I'm I don't think have I ever used Clank",
    "start": "1904920",
    "end": "1911960"
  },
  {
    "text": "entirely possible have you well so you've used code it's generated probably",
    "start": "1911960",
    "end": "1917460"
  },
  {
    "text": "so clang is an Alabama used to compile all the apps on the iPhone effectively",
    "start": "1917460",
    "end": "1923610"
  },
  {
    "text": "and the OS is it compiles Google's production server applications let's use",
    "start": "1923610",
    "end": "1930930"
  },
  {
    "text": "to build my GameCube games and PlayStation 4 and things like that I was",
    "start": "1930930",
    "end": "1936900"
  },
  {
    "text": "a user I have but just everything I've done that I experienced for Linux has been I believe always GCC yeah I think",
    "start": "1936900",
    "end": "1943830"
  },
  {
    "text": "Linux still defaults to GCC and is there a reason for that there's a big it's a",
    "start": "1943830",
    "end": "1949620"
  },
  {
    "text": "combination of technical and social reasons many GC likes developers do you do use clang but the distributions for",
    "start": "1949620",
    "end": "1958440"
  },
  {
    "text": "lots of reasons use GCC historically and they've not switched yeah that and it's just",
    "start": "1958440",
    "end": "1965400"
  },
  {
    "text": "anecdotally online it seems that LLVM has either reached the level GCC or",
    "start": "1965400",
    "end": "1970560"
  },
  {
    "text": "superseded on different features or whatever the way I would say it is that there was there so close it doesn't matter yeah exactly like there's a",
    "start": "1970560",
    "end": "1977130"
  },
  {
    "text": "slightly better in some way slightly worse than otherwise but it doesn't actually really matter anymore that level so in terms of optimization",
    "start": "1977130",
    "end": "1984790"
  },
  {
    "text": "breakthroughs it's just been solid incremental work yeah yeah",
    "start": "1984790",
    "end": "1989960"
  },
  {
    "text": "which which is which describes a lot of compilers there are the hard thing about compilers in my experience is the",
    "start": "1989960",
    "end": "1995120"
  },
  {
    "text": "engineering the software engineering making it so that you can have hundreds of people collaborating on really",
    "start": "1995120",
    "end": "2001480"
  },
  {
    "text": "detailed low-level work and scaling that and that's that's really hard and that's",
    "start": "2001480",
    "end": "2008080"
  },
  {
    "text": "one of the things I think Alabama's done well and that kind of goes back to the",
    "start": "2008080",
    "end": "2013240"
  },
  {
    "text": "original design goals with it to be modular and things like that and incidentally I don't want to take all",
    "start": "2013240",
    "end": "2018460"
  },
  {
    "text": "the credit for this right I mean some of the the best parts about LLVM is that it was designed to be modular and when I",
    "start": "2018460",
    "end": "2024010"
  },
  {
    "text": "started I would write for example a register allocator and then some a much smarter than me would come in and pull",
    "start": "2024010",
    "end": "2029770"
  },
  {
    "text": "it out and replace it with something else that they would come up with and because it's modular they were able to do that and that's one of the challenges",
    "start": "2029770",
    "end": "2036220"
  },
  {
    "text": "with what GCC for example is replacing subsystems is incredibly difficult it",
    "start": "2036220",
    "end": "2041350"
  },
  {
    "text": "can be done but it wasn't designed for that and that's one of the reasons the LVM has been very successful in the",
    "start": "2041350",
    "end": "2046809"
  },
  {
    "text": "research world as well but in the in the community sense Widow van rossum right",
    "start": "2046809",
    "end": "2052780"
  },
  {
    "text": "from Python just retired from what is it",
    "start": "2052780",
    "end": "2058419"
  },
  {
    "text": "benevolent dictator for life right so in managing this community of brilliant compiler folks is there that did it at",
    "start": "2058419",
    "end": "2066908"
  },
  {
    "text": "for a time at least following you to approve things oh yeah so I mean I still",
    "start": "2066909",
    "end": "2072908"
  },
  {
    "text": "have something like an order of magnitude more patches in LVM than",
    "start": "2072909",
    "end": "2078100"
  },
  {
    "text": "anybody else and many of those I wrote myself but he's still right I mean you",
    "start": "2078100",
    "end": "2084158"
  },
  {
    "text": "still he's still close to the two though I don't know what the expression is to",
    "start": "2084159",
    "end": "2089560"
  },
  {
    "text": "the metal you still write code yes alright good not as much as I was able to in grad school but that's important",
    "start": "2089560",
    "end": "2095590"
  },
  {
    "text": "part of my identity but the way the LLVM has worked over time is that when I was a grad student I could do all the work",
    "start": "2095590",
    "end": "2101050"
  },
  {
    "text": "and steer everything and review every patch and make sure everything was done exactly the way my opinionated sense",
    "start": "2101050",
    "end": "2108820"
  },
  {
    "text": "felt like it should be done and that was fine but I think scale you can't do that right and so what ends",
    "start": "2108820",
    "end": "2115390"
  },
  {
    "text": "happening as LVM has a hierarchical system of what's called code owners these code owners are given the",
    "start": "2115390",
    "end": "2122140"
  },
  {
    "text": "responsibility not to do all the work not necessarily to review all the patches but to make sure that the",
    "start": "2122140",
    "end": "2127420"
  },
  {
    "text": "patches do get reviewed and make sure that the right things happening architectural e in their area and so",
    "start": "2127420",
    "end": "2132580"
  },
  {
    "text": "what you'll see is you'll see that for example hardware manufacturers end up",
    "start": "2132580",
    "end": "2137980"
  },
  {
    "text": "owning the the the hardware specific parts of their their their hardware",
    "start": "2137980",
    "end": "2143320"
  },
  {
    "text": "that's very common leaders in the community that have done really good work naturally become the de facto owner",
    "start": "2143320",
    "end": "2149620"
  },
  {
    "text": "of something and then usually somebody else's like how about we make them the official code owner and then and then",
    "start": "2149620",
    "end": "2157180"
  },
  {
    "text": "we'll have somebody to make sure the whole patch does get reviewed in a timely manner and then everybody's like yes that's obvious and then it happens",
    "start": "2157180",
    "end": "2162880"
  },
  {
    "text": "right and usually this is a very organic thing which is great and so I'm nominally the top of that stack still",
    "start": "2162880",
    "end": "2168580"
  },
  {
    "text": "but I don't spend a lot of time reviewing patches what I do is I help",
    "start": "2168580",
    "end": "2173670"
  },
  {
    "text": "negotiate a lot of the the technical disagreements that end up happening and making sure that the community as a",
    "start": "2173670",
    "end": "2179470"
  },
  {
    "text": "whole makes progress and is moving in the right direction and and doing that so we also started a non-profit and six",
    "start": "2179470",
    "end": "2187780"
  },
  {
    "text": "years ago seven years ago it's times gone away and the nonprofit the the LVM foundation nonprofit helps oversee all",
    "start": "2187780",
    "end": "2194710"
  },
  {
    "text": "the business sides of things and make sure that the events that the Elven community has are funded and set up and",
    "start": "2194710",
    "end": "2200650"
  },
  {
    "text": "run correctly and stuff like that but the foundation is very much stays out of the technical side of where where",
    "start": "2200650",
    "end": "2207640"
  },
  {
    "text": "the project was going right sounds like a lot of it is just organic just yeah",
    "start": "2207640",
    "end": "2213250"
  },
  {
    "text": "well and this is Alabama is almost twenty years old which is hard to believe somebody point out to me recently that LVM is now older than GCC",
    "start": "2213250",
    "end": "2220960"
  },
  {
    "text": "was when Olivia started right so time has a way of getting away from you but",
    "start": "2220960",
    "end": "2227050"
  },
  {
    "text": "the good thing about that is it has a really robust really amazing community of people that",
    "start": "2227050",
    "end": "2232240"
  },
  {
    "text": "are in their professional lives spread across lots of different companies but it's a it's a community of people that",
    "start": "2232240",
    "end": "2239410"
  },
  {
    "text": "are interested in similar kinds of problems and have been working together effectively for years and have a lot of",
    "start": "2239410",
    "end": "2245230"
  },
  {
    "text": "trust and respect for each other and even if they don't always agree that you know we're we'll find a path forward so then in a",
    "start": "2245230",
    "end": "2252150"
  },
  {
    "text": "slightly different flavor of effort you started at Apple in 2005 with the task",
    "start": "2252150",
    "end": "2257940"
  },
  {
    "text": "of making I guess LLVM production ready and then eventually 2013 through 2017",
    "start": "2257940",
    "end": "2264450"
  },
  {
    "text": "leading the entire developer tools department we were talking about LLVM",
    "start": "2264450",
    "end": "2269700"
  },
  {
    "text": "Xcode Objective C to Swift so in a quick",
    "start": "2269700",
    "end": "2275790"
  },
  {
    "text": "overview of your time there what were the challenges first of all leading such a huge group of developers what was the",
    "start": "2275790",
    "end": "2283710"
  },
  {
    "text": "big motivator dream mission behind creating Swift the early birth of it's",
    "start": "2283710",
    "end": "2291329"
  },
  {
    "text": "from objective-c and so on and Xcode well yeah so these are different questions yeah I know what about the",
    "start": "2291329",
    "end": "2298710"
  },
  {
    "text": "other stuff I'll stay I'll stay on the technical side then we could talk about the big team pieces yeah that's okay",
    "start": "2298710",
    "end": "2303869"
  },
  {
    "text": "sure so he has to really oversimplify many years of hard work via most started",
    "start": "2303869",
    "end": "2310650"
  },
  {
    "text": "joined Apple became a thing we became successful and became deployed but then there was a question about how how do we",
    "start": "2310650",
    "end": "2317190"
  },
  {
    "text": "actually purse the source code so LVM is that back part the optimizer and the code generator and Alvin was really good",
    "start": "2317190",
    "end": "2323520"
  },
  {
    "text": "for Apple as it went through a couple of hundred transitions I joined right at the time of the Intel transition for example and 64-bit transitions and then",
    "start": "2323520",
    "end": "2332099"
  },
  {
    "text": "the transition to almost the iPhone and so LVM was very useful for some of these kinds of things but at the same time",
    "start": "2332099",
    "end": "2337589"
  },
  {
    "text": "there's a lot of questions around developer experience and so if you're a programmer pounding out at the time of objective-c code the error message you",
    "start": "2337589",
    "end": "2345089"
  },
  {
    "text": "get the compile time the turnaround cycle the the tooling and the IDE were not great we're not as good as it could",
    "start": "2345089",
    "end": "2352200"
  },
  {
    "text": "be and so you know as as I occasionally",
    "start": "2352200",
    "end": "2357390"
  },
  {
    "text": "do I'm like well okay how hard is it to write a C compiler and so I I'm not gonna commit to anybody I'm not gonna",
    "start": "2357390",
    "end": "2362849"
  },
  {
    "text": "tell anybody I'm just gonna just do it on nice and weekends and start working on it and then you know I built up in C",
    "start": "2362849",
    "end": "2369660"
  },
  {
    "text": "there's a thing called the preprocessor which people don't like but it's actually really hard and complicated and",
    "start": "2369660",
    "end": "2375480"
  },
  {
    "text": "includes a bunch of really weird things like try graphs and other stuff like that that are they're really nasty and",
    "start": "2375480",
    "end": "2380790"
  },
  {
    "text": "it's the crux of a bunch of the perform issues in the compiler and I'm started",
    "start": "2380790",
    "end": "2385830"
  },
  {
    "text": "working on the parser and kind of got to the point where I'm like ah you know what we could actually do this this everybody saying that this is impossible",
    "start": "2385830",
    "end": "2390960"
  },
  {
    "text": "to do but it's actually just hard it's not impossible and eventually told my",
    "start": "2390960",
    "end": "2396780"
  },
  {
    "text": "manager about it and he's like oh wow this is great we do need to solve this problem oh this is great we can like get you one other person to work with you on",
    "start": "2396780",
    "end": "2403110"
  },
  {
    "text": "this you know and slowly a team is formed and it starts taking off and c++",
    "start": "2403110",
    "end": "2409320"
  },
  {
    "text": "for example huge complicated language people always assume that it's impossible to implement and it's very",
    "start": "2409320",
    "end": "2415260"
  },
  {
    "text": "nearly impossible but it's just really really hard and the way to get there is",
    "start": "2415260",
    "end": "2420300"
  },
  {
    "text": "to build it one piece at a time incrementally and and there that was only possible because we were lucky to",
    "start": "2420300",
    "end": "2426510"
  },
  {
    "text": "hire some really exceptional engineers that that knew various parts of it very well and and could do great things",
    "start": "2426510",
    "end": "2431960"
  },
  {
    "text": "Swift was kind of a similar thing so Swift came from we were just finishing",
    "start": "2431960",
    "end": "2438510"
  },
  {
    "text": "off the first version of C++ support in M clang and C++ is a very formidable and",
    "start": "2438510",
    "end": "2446250"
  },
  {
    "text": "very important language but it's also ugly in lots of ways and you can't influence C++ without thinking there has",
    "start": "2446250",
    "end": "2452640"
  },
  {
    "text": "to be a better thing right and so I started working on Swift again with no hope or ambition that would go anywhere",
    "start": "2452640",
    "end": "2458280"
  },
  {
    "text": "just uh let's see what could be done let's play around with this thing it was you know me in my spare time not telling",
    "start": "2458280",
    "end": "2465840"
  },
  {
    "text": "anybody about it kind of a thing and it made some good progress I'm like actually it would make sense to do this",
    "start": "2465840",
    "end": "2471030"
  },
  {
    "text": "at the same time I started talking with the senior VP of software at the time a guy named Burt Ron stole a and Burt Ron",
    "start": "2471030",
    "end": "2478140"
  },
  {
    "text": "was very encouraging he was like well you know let's let's have fun let's talk about this and he was a little bit of a language guy and so he helped guide some",
    "start": "2478140",
    "end": "2484980"
  },
  {
    "text": "of the the early work and encouraged me and like got things off the ground and",
    "start": "2484980",
    "end": "2490110"
  },
  {
    "text": "eventually I've told other to like my manager and told other people and and it",
    "start": "2490110",
    "end": "2496560"
  },
  {
    "text": "started making progress the the complicating thing was Swift was that",
    "start": "2496560",
    "end": "2501710"
  },
  {
    "text": "the idea of doing a new language is not obvious to anybody including myself",
    "start": "2501710",
    "end": "2507240"
  },
  {
    "text": "and the tone at the time was that the iPhone was successful because of objective-c right Oh interesting in a",
    "start": "2507240",
    "end": "2514590"
  },
  {
    "text": "practice site of or just great because it and and you have to understand that at the time",
    "start": "2514590",
    "end": "2520619"
  },
  {
    "text": "Apple was hiring software people that loved Objective C right and it wasn't",
    "start": "2520619",
    "end": "2525900"
  },
  {
    "text": "that they came despite Objective C they loved Objective C and that's why they got hired and so you had a software team",
    "start": "2525900",
    "end": "2531240"
  },
  {
    "text": "that the leadership and in many cases went all the way back to next where Objective C really became real and so",
    "start": "2531240",
    "end": "2540090"
  },
  {
    "text": "they quote-unquote grew up writing Objective C and many of the individual engineers all were hired because they",
    "start": "2540090",
    "end": "2546720"
  },
  {
    "text": "loved Objective C and so this notion of okay let's do new language was kind of heretical in many ways right meanwhile",
    "start": "2546720",
    "end": "2554400"
  },
  {
    "text": "my sense was that the outside community wasn't really in love with Objective C some people were and some of the most outspoken people were but other people",
    "start": "2554400",
    "end": "2560640"
  },
  {
    "text": "were hitting challenges because it has very sharp corners and it's difficult to learn and so one of the challenges of",
    "start": "2560640",
    "end": "2569010"
  },
  {
    "text": "making Swift happen that was totally non-technical is the the social part of",
    "start": "2569010",
    "end": "2574830"
  },
  {
    "text": "what do we do like if we do a new language which at Apple many things",
    "start": "2574830",
    "end": "2580260"
  },
  {
    "text": "happen that don't ship right so if we if we ship it what what what is the metrics of success why would we do this why",
    "start": "2580260",
    "end": "2586470"
  },
  {
    "text": "wouldn't we make Objective C better if object C has problems let's file off those rough corners and edges and one of",
    "start": "2586470",
    "end": "2592650"
  },
  {
    "text": "the major things that became the reason to do this was this notion of safety memory safety and the way Objective C",
    "start": "2592650",
    "end": "2600240"
  },
  {
    "text": "works is that a lot of the object system and everything else is built on top of",
    "start": "2600240",
    "end": "2605730"
  },
  {
    "text": "pointers and C Objective C is an extension on top of C and so pointers",
    "start": "2605730",
    "end": "2611369"
  },
  {
    "text": "are unsafe and if you get rid of the pointers it's not Objective C anymore and so fundamentally that was an issue",
    "start": "2611369",
    "end": "2618780"
  },
  {
    "text": "that you could not fix safety or memory safety without fundamentally changing",
    "start": "2618780",
    "end": "2624780"
  },
  {
    "text": "the language and so once we got through that part of the mental process and the",
    "start": "2624780",
    "end": "2630060"
  },
  {
    "text": "thought process it became a design process of saying okay well if we're gonna do something new what what is good",
    "start": "2630060",
    "end": "2636000"
  },
  {
    "text": "like how do we think about this and what do we like and what are we looking for and that that was a very different phase",
    "start": "2636000",
    "end": "2641760"
  },
  {
    "text": "of it so well what are some design choices early on and Swift like we're talking about braces are you making a",
    "start": "2641760",
    "end": "2650460"
  },
  {
    "text": "type language or not all those kinds of things yeah so some of those were obvious given the context so a types",
    "start": "2650460",
    "end": "2656760"
  },
  {
    "text": "language for example objective sees a typed language and going with an untyped language wasn't really seriously",
    "start": "2656760",
    "end": "2663540"
  },
  {
    "text": "considered we wanted we want the performance and we wanted refactoring tools and other things like that to go with type languages quick dumb question",
    "start": "2663540",
    "end": "2670530"
  },
  {
    "text": "yeah was it obvious I think it would be a dumb question but was it obvious that the language has to",
    "start": "2670530",
    "end": "2676500"
  },
  {
    "text": "be a compiled language not and yes that's not a dumb question earlier I",
    "start": "2676500",
    "end": "2682710"
  },
  {
    "text": "think late 90s Apple is seriously considered moving its development experience to Java but this was started",
    "start": "2682710",
    "end": "2690510"
  },
  {
    "text": "in 2010 which was several years after the iPhone it was when the iPhone was definitely on an upward trajectory and",
    "start": "2690510",
    "end": "2696180"
  },
  {
    "text": "the iPhone was still extremely and is still a bit memory constrained right and",
    "start": "2696180",
    "end": "2701880"
  },
  {
    "text": "so being able to compile the code and then ship it and then have having standalone code that is not JIT compiled",
    "start": "2701880",
    "end": "2709200"
  },
  {
    "text": "was is a very big deal and it's very much part of the apple value system now",
    "start": "2709200",
    "end": "2715430"
  },
  {
    "text": "javascript is also a thing right I mean it's not it's not that this is exclusive and technologies are good depending on",
    "start": "2715430",
    "end": "2721650"
  },
  {
    "text": "how they're applied right but in the design of Swift saying like how can we",
    "start": "2721650",
    "end": "2726960"
  },
  {
    "text": "make Objective C better right Objective C is statically compiled and that was the contiguous natural thing to do just",
    "start": "2726960",
    "end": "2732630"
  },
  {
    "text": "skip ahead a little bit now go right back just just as a question as you think about today in 2019 yeah in your",
    "start": "2732630",
    "end": "2740310"
  },
  {
    "text": "work at Google if tons of phone so on is again compilations static compilation",
    "start": "2740310",
    "end": "2746660"
  },
  {
    "text": "the right there's still the right thing yes so the the funny thing after working",
    "start": "2746660",
    "end": "2751920"
  },
  {
    "text": "on compilers for a really long time is that and one of this is one of the things that LVM has helped with is that",
    "start": "2751920",
    "end": "2759360"
  },
  {
    "text": "I don't look as comp compilations being static or dynamic or interpreted or not",
    "start": "2759360",
    "end": "2764610"
  },
  {
    "text": "this is a spectrum okay and one of the cool things about Swift is that Swift is",
    "start": "2764610",
    "end": "2769980"
  },
  {
    "text": "not just statically compiled it's actually dynamically compiled as well and it can also be interpreted that",
    "start": "2769980",
    "end": "2775380"
  },
  {
    "text": "nobody's actually done that and so what what ends up happening when you use",
    "start": "2775380",
    "end": "2780660"
  },
  {
    "text": "Swift in a workbook for example in Calabria and Jupiter is it's actually dynamically compiling the statements as",
    "start": "2780660",
    "end": "2786420"
  },
  {
    "text": "you execute them and so let's gets back to the software engineering problems",
    "start": "2786420",
    "end": "2792030"
  },
  {
    "text": "right where if you layer the stack properly you can actually completely change how and when things get compiled",
    "start": "2792030",
    "end": "2798750"
  },
  {
    "text": "because you have the right abstractions there and so the way that a collab workbook works with Swift is that we start typing",
    "start": "2798750",
    "end": "2807359"
  },
  {
    "text": "into it it creates a process a UNIX process and then each line of code you type in it compiles it through the Swift",
    "start": "2807359",
    "end": "2813900"
  },
  {
    "text": "compiler there's the front end part and then sends it through the optimizer JIT compiles machine code and then injects",
    "start": "2813900",
    "end": "2821550"
  },
  {
    "text": "it into that process and so as you're typing new stuff it's putting it's like",
    "start": "2821550",
    "end": "2826770"
  },
  {
    "text": "squirting a new code and overriding and replacing an updating code in place and the fact that it can do this is not an",
    "start": "2826770",
    "end": "2833010"
  },
  {
    "text": "accident like Swift was designed for this but it's an important part of how the language was set up and how it's",
    "start": "2833010",
    "end": "2838500"
  },
  {
    "text": "layered and and this is a non-obvious piece and one of the things with Swift that was for me a very strong design",
    "start": "2838500",
    "end": "2845550"
  },
  {
    "text": "point is to make it so that you can learn it very quickly and so from a",
    "start": "2845550",
    "end": "2850980"
  },
  {
    "text": "language design perspective the thing that I always come back to is this UI principle of progressive disclosure of",
    "start": "2850980",
    "end": "2856500"
  },
  {
    "text": "complexity and so in Swift you can start by saying print quote hello world quote",
    "start": "2856500",
    "end": "2862800"
  },
  {
    "text": "right and there's no /n just like Python one line of code no main no no header",
    "start": "2862800",
    "end": "2868710"
  },
  {
    "text": "files no header files no public static class void blah blah blah string like Java has right so one line of code right",
    "start": "2868710",
    "end": "2875250"
  },
  {
    "text": "and you can teach that and it works great they can say well let's introduce variables and so you can declare a",
    "start": "2875250",
    "end": "2881339"
  },
  {
    "text": "variable with far so VAR x equals four what is a variable you can use xx plus one this is what it means then you can",
    "start": "2881339",
    "end": "2888089"
  },
  {
    "text": "say we'll have a control flow well this is what an if statement is this is what a for statement is this is what a while statement is then you can say let's",
    "start": "2888089",
    "end": "2896010"
  },
  {
    "text": "introduce functions right and and many languages like Python have had this this kind of notion of let's introduce small",
    "start": "2896010",
    "end": "2902460"
  },
  {
    "text": "things and they can add complex then you can introduce classes and then you can add generics I'm against the",
    "start": "2902460",
    "end": "2907740"
  },
  {
    "text": "Swift and then you can in modules and build out in terms of the things that you're expressing but this is not very",
    "start": "2907740",
    "end": "2913589"
  },
  {
    "text": "typical for compiled languages and so this was a very strong design point and one of the reasons that Swift in general",
    "start": "2913589",
    "end": "2920910"
  },
  {
    "text": "is designed with this factoring of complexity in mind so that the language can express powerful things you can",
    "start": "2920910",
    "end": "2926640"
  },
  {
    "text": "write firmware in Swift if you want to but it has a very high-level feel which",
    "start": "2926640",
    "end": "2931980"
  },
  {
    "text": "is really this perfect blend because often you have very advanced library writers that want to be able to use the",
    "start": "2931980",
    "end": "2938579"
  },
  {
    "text": "the nitty-gritty details but then other people just want to use the libraries and work at a higher abstraction level",
    "start": "2938579",
    "end": "2944400"
  },
  {
    "text": "it's kind of cool that I saw that you can just enter a probability I don't",
    "start": "2944400",
    "end": "2949530"
  },
  {
    "text": "think I pronounced that word enough but you can just drag in Python it's just a",
    "start": "2949530",
    "end": "2955560"
  },
  {
    "text": "string you can import like I saw this in the demo yeah I'm pointing out but like how do you make that happen",
    "start": "2955560",
    "end": "2960660"
  },
  {
    "text": "yeah what's what's up yeah say is that as easy as it looks or is it yes that's not that's not a",
    "start": "2960660",
    "end": "2967349"
  },
  {
    "text": "stage magic hack or anything like that then I I don't mean from the user perspective I mean from the implementation perspective to make it",
    "start": "2967349",
    "end": "2973589"
  },
  {
    "text": "happen so it's it's easy once all the pieces are in place the way it works so if you think about a dynamically typed language",
    "start": "2973589",
    "end": "2979530"
  },
  {
    "text": "like Python right you can think about it as in two different ways you can say it has no types right which is what most",
    "start": "2979530",
    "end": "2986130"
  },
  {
    "text": "people would say or you can say it has one type right and you could say has one",
    "start": "2986130",
    "end": "2991200"
  },
  {
    "text": "type and it's like the Python object mm-hmm and the Python object gets passed around and because there's only one type its implicit okay and so what happens",
    "start": "2991200",
    "end": "2999180"
  },
  {
    "text": "with Swift and Python talking to each other Swift has lots of types right has a raise and it has strings and all like",
    "start": "2999180",
    "end": "3005329"
  },
  {
    "text": "classes and that kind of stuff but it now has a Python object type right so",
    "start": "3005329",
    "end": "3011240"
  },
  {
    "text": "there is one Python object type and so when you say import numpy what you get",
    "start": "3011240",
    "end": "3016250"
  },
  {
    "text": "is a Python object which is the numpy module then you say NPRA it says okay",
    "start": "3016250",
    "end": "3022730"
  },
  {
    "text": "hey hey Python object I have no idea what you are give me your array member right okay cool it just it just uses",
    "start": "3022730",
    "end": "3029450"
  },
  {
    "text": "dynamic stuff talks to the Python interpreter and says hey Python what's the daughter a member in the",
    "start": "3029450",
    "end": "3034570"
  },
  {
    "text": "that Python object it gives you back another Python object and now you say parentheses for the call and the",
    "start": "3034570",
    "end": "3039670"
  },
  {
    "text": "arguments are gonna pass and so then it says hey a Python object that is the result of NPR a call with these",
    "start": "3039670",
    "end": "3046840"
  },
  {
    "text": "arguments right again calling into the Python interpreter to do that work and so right now this is all really simple",
    "start": "3046840",
    "end": "3053380"
  },
  {
    "text": "and if you if you dive into the code what you'll see is that the the Python module and Swift is something like",
    "start": "3053380",
    "end": "3058990"
  },
  {
    "text": "twelve hundred lines of code or something is written in pure Swift it's super simple and it's and it's built on",
    "start": "3058990",
    "end": "3065020"
  },
  {
    "text": "top of the c interoperability because just talks to the Python interpreter but making that possible required us to add",
    "start": "3065020",
    "end": "3071320"
  },
  {
    "text": "two major language features to Swift to be able to express these dynamic calls and the dynamic member lookups and so",
    "start": "3071320",
    "end": "3077560"
  },
  {
    "text": "what we've done over the last year is we've proposed implement standardized",
    "start": "3077560",
    "end": "3082780"
  },
  {
    "text": "and contributed new language features to the Swift language in order to make it so it is really trivial right and this",
    "start": "3082780",
    "end": "3089740"
  },
  {
    "text": "is one of the things about Swift that is critical to this but for tens flow work which is that we can actually add new",
    "start": "3089740",
    "end": "3096160"
  },
  {
    "text": "language features and the bar for adding those is high but it's it's what makes it possible so you know Google doing",
    "start": "3096160",
    "end": "3103660"
  },
  {
    "text": "incredible work on several things including tensorflow the test flow 2.0 or whatever leading up",
    "start": "3103660",
    "end": "3110620"
  },
  {
    "text": "to 2.0 has by default in 2.0 has eager execution in yet in order to make code",
    "start": "3110620",
    "end": "3118600"
  },
  {
    "text": "optimized for GPU or TP or some of these systems computation needs to be",
    "start": "3118600",
    "end": "3124480"
  },
  {
    "text": "converted to a graph so what's that process like what are the challenges there yeah so I I'm tangentially",
    "start": "3124480",
    "end": "3130750"
  },
  {
    "text": "involved in this but the the way that it works with autograph is that",
    "start": "3130750",
    "end": "3137140"
  },
  {
    "text": "you mark your your function with the decorator and when Python calls that",
    "start": "3137140",
    "end": "3142570"
  },
  {
    "text": "that decorator is invoked and then it says before I call this function you can",
    "start": "3142570",
    "end": "3148450"
  },
  {
    "text": "transform it and so the way autograph works is as far as I understand as it actually uses the Python parser to go",
    "start": "3148450",
    "end": "3154690"
  },
  {
    "text": "parse that turn into a syntax tree and now apply compiler techniques to again transform this down into tensor",
    "start": "3154690",
    "end": "3161230"
  },
  {
    "text": "photographs and so it you can think of it as saying hey I have an if statement I'm going to create an if node in the",
    "start": "3161230",
    "end": "3167890"
  },
  {
    "text": "graph like you say TF conned you have a multiply well I'll turn that into",
    "start": "3167890",
    "end": "3173680"
  },
  {
    "text": "multiply node in the graph and that becomes the street transformation so word is the Swift for tensor for come in",
    "start": "3173680",
    "end": "3180760"
  },
  {
    "text": "which is you know parallels you know for one swift is a interface like Python is",
    "start": "3180760",
    "end": "3187660"
  },
  {
    "text": "an interface test flow but it seems like there's a lot more going on in just a different language interface there's",
    "start": "3187660",
    "end": "3193270"
  },
  {
    "text": "optimization methodology yeah so so the tensor float world has a couple of different what I'd call front-end",
    "start": "3193270",
    "end": "3200260"
  },
  {
    "text": "technologies and so Swift and Python and go and rust and Julia and all these",
    "start": "3200260",
    "end": "3205600"
  },
  {
    "text": "things share the tensor flow graphs and all the runtime and everything that's",
    "start": "3205600",
    "end": "3211300"
  },
  {
    "text": "later again and so vertex flow is merely another front end for tensor flow I'm",
    "start": "3211300",
    "end": "3217870"
  },
  {
    "text": "just like any of these other systems are there's a major difference between I would say three camps of technologies",
    "start": "3217870",
    "end": "3224380"
  },
  {
    "text": "here there's Python which is a special case because the vast majority of the community efforts go into the Python",
    "start": "3224380",
    "end": "3229930"
  },
  {
    "text": "interface and python has its own approaches for automatic differentiation it has its own api's and all this kind",
    "start": "3229930",
    "end": "3236650"
  },
  {
    "text": "of stuff there's Swift which I'll talk about in a second and then there's kind of everything else and so the everything",
    "start": "3236650",
    "end": "3242620"
  },
  {
    "text": "else are effectively language bindings so they they call into the tense flow runtime but they're not they usually",
    "start": "3242620",
    "end": "3248980"
  },
  {
    "text": "don't have automatic differentiation or they usually don't provide anything other than API is that call the C API is",
    "start": "3248980",
    "end": "3255790"
  },
  {
    "text": "intensive flow and so they're kind of wrappers for that Swift is really kind of special and it's a very different",
    "start": "3255790",
    "end": "3260980"
  },
  {
    "text": "approach Swift 4/10 below that is is a very different approach because there we're saying let's look at all the",
    "start": "3260980",
    "end": "3267490"
  },
  {
    "text": "problems that need to be solved in the fullest of the tensorflow compilation process if",
    "start": "3267490",
    "end": "3274690"
  },
  {
    "text": "you think about it that way because tensorflow is fundamentally a compiler it takes models and then it makes them",
    "start": "3274690",
    "end": "3280630"
  },
  {
    "text": "go faster on hardware that's what a compiler does and it has a front end it",
    "start": "3280630",
    "end": "3286210"
  },
  {
    "text": "has an optimizer and it has many backends and so if you think about it the right way",
    "start": "3286210",
    "end": "3291280"
  },
  {
    "text": "or in in if you look at it in a particular way like it is a compiler okay and and so Swift is merely another",
    "start": "3291280",
    "end": "3301060"
  },
  {
    "text": "front-end but it's saying in the the design principle is saying let's look at",
    "start": "3301060",
    "end": "3306190"
  },
  {
    "text": "all the problems that we face as machine learning practitioners and what is the best possible way we can do that given",
    "start": "3306190",
    "end": "3312490"
  },
  {
    "text": "the fact that we can change literally anything in this entire stack and python for example where the vast majority of",
    "start": "3312490",
    "end": "3318520"
  },
  {
    "text": "the engineering and an effort has gone into its constrained by being the best",
    "start": "3318520",
    "end": "3324220"
  },
  {
    "text": "possible thing you can do with the Python library like there are no Python language features that are added because",
    "start": "3324220",
    "end": "3330070"
  },
  {
    "text": "of machine learning that I'm aware of they added a matrix multiplication operator with that but that's as close",
    "start": "3330070",
    "end": "3336670"
  },
  {
    "text": "as you get and so with Swift you can you it's hard but you can add language",
    "start": "3336670",
    "end": "3341950"
  },
  {
    "text": "features to the language and there's a community process for that and so we look at these things and say well what",
    "start": "3341950",
    "end": "3348339"
  },
  {
    "text": "is the right division of labor between the human programmer and the compiler and Swift has a number of things that",
    "start": "3348339",
    "end": "3354280"
  },
  {
    "text": "shift that balance so because it's a because it has a type system for example",
    "start": "3354280",
    "end": "3360099"
  },
  {
    "text": "it makes certain things possible for analysis of the code and the compiler can automatically build graphs for you",
    "start": "3360099",
    "end": "3366430"
  },
  {
    "text": "without you thinking about them like that's that's a big deal for a programmer you just get free performance",
    "start": "3366430",
    "end": "3371619"
  },
  {
    "text": "you get clustering infusion and optimization and things like that without you as a programmer having to",
    "start": "3371619",
    "end": "3377560"
  },
  {
    "text": "manually do it because the compiler can do it for you automatic to frenchie ation there's another big deal and it's I think one of the key contributions of",
    "start": "3377560",
    "end": "3385060"
  },
  {
    "text": "the Swift for tensorflow project is that there's this entire body of work on",
    "start": "3385060",
    "end": "3390970"
  },
  {
    "text": "automatic differentiation that dates back to the Fortran days people doing a tremendous amount of numerical computing",
    "start": "3390970",
    "end": "3396339"
  },
  {
    "text": "and Fortran used to write these what they call source-to-source translators where you where you take a bunch of code",
    "start": "3396339",
    "end": "3403269"
  },
  {
    "text": "shove it into a mini compiler and push out more Fortran code but it would",
    "start": "3403269",
    "end": "3408399"
  },
  {
    "text": "generate the backwards passes for your functions for you the derivatives and so",
    "start": "3408399",
    "end": "3414569"
  },
  {
    "text": "in that work in the 70s a true master of optimizations a tremendous number of",
    "start": "3414569",
    "end": "3420119"
  },
  {
    "text": "techniques for fixing numerical instability and other other kinds of problems were developed but they're very",
    "start": "3420119",
    "end": "3425919"
  },
  {
    "text": "difficult to port into a world where in eager execution you get an opt by op at a time like you need to be able to look",
    "start": "3425919",
    "end": "3432279"
  },
  {
    "text": "at an entire function and be able to reason about what's going on and so when you have a language integrated automatic",
    "start": "3432279",
    "end": "3438609"
  },
  {
    "text": "differentiation which is one of the things that the Swift project is focusing on you can open open all these",
    "start": "3438609",
    "end": "3444130"
  },
  {
    "text": "techniques and reuse them and in familiar ways but the language",
    "start": "3444130",
    "end": "3449319"
  },
  {
    "text": "integration piece has a bunch of design room in it and it's also complicated the other piece of the puzzle here that's",
    "start": "3449319",
    "end": "3455049"
  },
  {
    "text": "kind of interesting is TP use at Google yes so you know we're in a new world with deep learning it's constantly",
    "start": "3455049",
    "end": "3460989"
  },
  {
    "text": "changing and I imagine without disclosing anything I imagine you know",
    "start": "3460989",
    "end": "3466239"
  },
  {
    "text": "you're still innovating on the TP you front - indeed so how much sort of",
    "start": "3466239",
    "end": "3471249"
  },
  {
    "text": "interplay xur between software and hardware in trying to figure out how to gather move towards at an optimal",
    "start": "3471249",
    "end": "3476259"
  },
  {
    "text": "solution there's an incredible amount so our third generation of TP use which are now 100 petaflop syn a very large liquid",
    "start": "3476259",
    "end": "3483099"
  },
  {
    "text": "cooled box in a virtual box with no cover and as you might imagine we're not out",
    "start": "3483099",
    "end": "3489940"
  },
  {
    "text": "of ideas yet the the great thing about TP use is that they're a perfect example",
    "start": "3489940",
    "end": "3495400"
  },
  {
    "text": "of hardware/software co.design and so it's a bet it's about saying what hardware do we build to solve certain",
    "start": "3495400",
    "end": "3500950"
  },
  {
    "text": "classes of machine learning problems well the algorithms are changing like",
    "start": "3500950",
    "end": "3506410"
  },
  {
    "text": "the hardware it takes you know some cases years to produce right and so you have to make bets and decide what is",
    "start": "3506410",
    "end": "3513250"
  },
  {
    "text": "going to happen and so and what is the best way to spend the transistors to get the maximum you know performance per",
    "start": "3513250",
    "end": "3519490"
  },
  {
    "text": "watt or area per cost or like whatever it is that you're optimizing for and so one of the amazing things about TP use",
    "start": "3519490",
    "end": "3526359"
  },
  {
    "text": "is this numeric format called b-flat 16b float16 is a compressed 16-bit",
    "start": "3526359",
    "end": "3533109"
  },
  {
    "text": "floating-point format but it puts the bits in different places in numeric terms it has a smaller mantissa and a",
    "start": "3533109",
    "end": "3539140"
  },
  {
    "text": "larger exponent that means that it's less precise but it can represent larger",
    "start": "3539140",
    "end": "3544180"
  },
  {
    "text": "ranges of values which in the machine learning context is really important and useful because sometimes you have very",
    "start": "3544180",
    "end": "3550329"
  },
  {
    "text": "small gradients you want to accumulate and very very small numbers that are",
    "start": "3550329",
    "end": "3557349"
  },
  {
    "text": "important to to move things as you're learning but sometimes you have very large magnitude numbers as well and be",
    "start": "3557349",
    "end": "3565150"
  },
  {
    "text": "float16 is not as precise the mantissa is small but it turns out the machine learning algorithms actually want to",
    "start": "3565150",
    "end": "3570609"
  },
  {
    "text": "generalize and so there's you know theories that this actually increases generate the ability for the network to",
    "start": "3570609",
    "end": "3576460"
  },
  {
    "text": "generalize across data sets and regardless of whether it's good or bad is much cheaper at the hardware level to",
    "start": "3576460",
    "end": "3582789"
  },
  {
    "text": "implement because the area and time of a multiplier is N squared in the number of",
    "start": "3582789",
    "end": "3589359"
  },
  {
    "text": "bits in the mantissa but it's linear with size of the exponent connected to solar big deal efforts here both on the",
    "start": "3589359",
    "end": "3595990"
  },
  {
    "text": "hardware and the software side yeah and so that was a breakthrough coming from the research side and people working on",
    "start": "3595990",
    "end": "3601960"
  },
  {
    "text": "optimizing network transport of weights across a network originally and trying",
    "start": "3601960",
    "end": "3608319"
  },
  {
    "text": "to find ways to compress that but then it got burned into silicon and it's a key part of what makes CPU performance",
    "start": "3608319",
    "end": "3614259"
  },
  {
    "text": "so amazing and and and great TPS have many different aspects of the",
    "start": "3614259",
    "end": "3620049"
  },
  {
    "text": "important but the the co.design between the low-level compiler bits and the",
    "start": "3620049",
    "end": "3625479"
  },
  {
    "text": "software bits and the algorithms is all super important and it's a this amazing try factor that only Google do yeah",
    "start": "3625479",
    "end": "3633069"
  },
  {
    "text": "that's super exciting so can you tell me about MLI our project previously this",
    "start": "3633069",
    "end": "3640029"
  },
  {
    "text": "the secretive one yeah so EMA lair is a project that we announced at a compiler conference three weeks ago or something",
    "start": "3640029",
    "end": "3647439"
  },
  {
    "text": "at the compilers for machine learning conference basically if again if you look at tensorflow as a compiler stack",
    "start": "3647439",
    "end": "3653559"
  },
  {
    "text": "it has a number of compiler algorithms within it it also has a number of compilers that get embedded into it and",
    "start": "3653559",
    "end": "3658989"
  },
  {
    "text": "they're made by different vendors for example Google has xla which is a great compiler system NVIDIA has tensor RT",
    "start": "3658989",
    "end": "3666130"
  },
  {
    "text": "Intel has n graph there's a number of these different compiler systems and",
    "start": "3666130",
    "end": "3671309"
  },
  {
    "text": "they're very hardware specific and they're trying to solve different parts of the problems but they're all kind of",
    "start": "3671309",
    "end": "3677319"
  },
  {
    "text": "similar in a sense of they want to integrate with tensorflow no test flow has an optimizer and it has these",
    "start": "3677319",
    "end": "3683679"
  },
  {
    "text": "different code generation technologies built in the idea of NLR is to build a common infrastructure to support all",
    "start": "3683679",
    "end": "3689709"
  },
  {
    "text": "these different subsystems and initially it's to be able to make it so that they all plug in together and they can share",
    "start": "3689709",
    "end": "3695410"
  },
  {
    "text": "a lot more code and can be reusable but over time we hope that the industry will start collaborating and sharing code and",
    "start": "3695410",
    "end": "3702609"
  },
  {
    "text": "instead of reinventing the same things over and over again that we can actually foster some of that that you know",
    "start": "3702609",
    "end": "3708519"
  },
  {
    "text": "working together to solve common problem energy that has been useful in the compiler field before beyond that mor is",
    "start": "3708519",
    "end": "3715650"
  },
  {
    "text": "some people have joked that it's kind of LVM to it learns a lot about what LVM",
    "start": "3715650",
    "end": "3721059"
  },
  {
    "text": "has been good and what LVM has done wrong and it's a chance to fix that and",
    "start": "3721059",
    "end": "3726880"
  },
  {
    "text": "also there are challenges in the LLVM ecosystem as well where LVM is very good at the thing was designed to do but you",
    "start": "3726880",
    "end": "3733569"
  },
  {
    "text": "know 20 years later the world has changed and people are trying to solve higher-level problems and we need we need some new technology and what's the",
    "start": "3733569",
    "end": "3741489"
  },
  {
    "text": "future of open source in this context very soon so it is not yet open source",
    "start": "3741489",
    "end": "3747369"
  },
  {
    "text": "but it will be hopefully you still believe in the value of open source in kazakh oh yeah absolutely and I",
    "start": "3747369",
    "end": "3752930"
  },
  {
    "text": "that the tensorflow community at large fully believes an open-source so I mean",
    "start": "3752930",
    "end": "3758000"
  },
  {
    "text": "that's there is a difference between Apple where you were previously in Google now in spirit and culture and I",
    "start": "3758000",
    "end": "3763640"
  },
  {
    "text": "would say the open sourcing intensive floor was a seminal moment in the history of software because here's this",
    "start": "3763640",
    "end": "3769400"
  },
  {
    "text": "large company releasing a very large code base as the open sourcing what are",
    "start": "3769400",
    "end": "3776420"
  },
  {
    "text": "your thoughts on that I'll happy or not were you to see that kind of degree of open sourcing so",
    "start": "3776420",
    "end": "3783050"
  },
  {
    "text": "between the two I prefer the Google approach if that's what you're saying the Apple approach makes sense given the",
    "start": "3783050",
    "end": "3791360"
  },
  {
    "text": "historical context that Apple came from but that's been 35 years ago and I think the Apple is definitely adapting and the",
    "start": "3791360",
    "end": "3799310"
  },
  {
    "text": "way I look at it is that there's different kinds of concerns in the space right it is very rational for a business",
    "start": "3799310",
    "end": "3804770"
  },
  {
    "text": "to to care about making money that fundamentally is what a business is",
    "start": "3804770",
    "end": "3810380"
  },
  {
    "text": "about right but I think it's also incredibly realistic to say it's not your string library that's the thing",
    "start": "3810380",
    "end": "3816590"
  },
  {
    "text": "that's going to make you money it's going to be the amazing UI product differentiating features and other",
    "start": "3816590",
    "end": "3822170"
  },
  {
    "text": "things like that that you built on top of your string library and so keeping",
    "start": "3822170",
    "end": "3827300"
  },
  {
    "text": "your string library proprietary and secret and things like that isn't maybe not the the important thing anymore",
    "start": "3827300",
    "end": "3833750"
  },
  {
    "text": "right or before platforms were different right and even 15 years ago things were",
    "start": "3833750",
    "end": "3840380"
  },
  {
    "text": "a little bit different but the world is changing so Google strikes very good balance I think and I think the",
    "start": "3840380",
    "end": "3847010"
  },
  {
    "text": "tensorflow being open source really changed the entire machine learning field and it caused a revolution in its",
    "start": "3847010",
    "end": "3853490"
  },
  {
    "text": "own right and so I think it's amazing for amazingly forward-looking because I",
    "start": "3853490",
    "end": "3858920"
  },
  {
    "text": "could have imagined and I was an at Google time but I could imagine the different contacts and different world where a company says machine learning is",
    "start": "3858920",
    "end": "3866180"
  },
  {
    "text": "critical to what we're doing we're not going to give it to other people right and so that decision is a profound",
    "start": "3866180",
    "end": "3871850"
  },
  {
    "text": "a profoundly brilliant insight that I think has really led to the world being",
    "start": "3871850",
    "end": "3877370"
  },
  {
    "text": "better and better for Google as well and has all kinds of ripple effects I think",
    "start": "3877370",
    "end": "3882530"
  },
  {
    "text": "it is really I mean you can't understate Google does adding that how profound that is for",
    "start": "3882530",
    "end": "3889220"
  },
  {
    "text": "software is awesome well and it's been in again I can understand the concern",
    "start": "3889220",
    "end": "3894589"
  },
  {
    "text": "about if we release our machine learning software are our competitors could go faster from the other hand I think that",
    "start": "3894589",
    "end": "3901460"
  },
  {
    "text": "open sourcing test flow has been fantastic for Google and I'm sure that obvious was that that that decision was",
    "start": "3901460",
    "end": "3907160"
  },
  {
    "text": "very non obvious at the time but I think it's worked out very well so let's try this real quick yeah you were",
    "start": "3907160",
    "end": "3913490"
  },
  {
    "text": "at Tesla for five months as the VP of auto pilot software you led the team during the transition from each hardware",
    "start": "3913490",
    "end": "3920480"
  },
  {
    "text": "one hardware to I have a couple questions so one first of all to me",
    "start": "3920480",
    "end": "3925910"
  },
  {
    "text": "that's one of the bravest engineering decisions undertaking so like undertaking really ever in the",
    "start": "3925910",
    "end": "3933530"
  },
  {
    "text": "automotive industry to me software wise starting from scratch it's a really brave a decision so my one question is",
    "start": "3933530",
    "end": "3940579"
  },
  {
    "text": "there's always that like what was the challenge of that do you mean the career decision of jumping from a comfortable",
    "start": "3940579",
    "end": "3946520"
  },
  {
    "text": "good job into the unknown or that combined so the at the individual level you making that decision and then when",
    "start": "3946520",
    "end": "3955099"
  },
  {
    "text": "you show up you know it's a really hard engineering process so you could just",
    "start": "3955099",
    "end": "3960380"
  },
  {
    "text": "stay maybe slow down say hardware one or that those kinds of decisions",
    "start": "3960380",
    "end": "3966349"
  },
  {
    "text": "just taking it full-on let's let's do this from scratch what was that like well so I mean I don't think Tesla has a",
    "start": "3966349",
    "end": "3972829"
  },
  {
    "text": "culture of taking things slow insights how it goes and one of the things that attracted me about Tesla is it's very much a gung-ho",
    "start": "3972829",
    "end": "3979040"
  },
  {
    "text": "let's change the world let's figure it out kind of a place and so I have a huge amount of respect for that",
    "start": "3979040",
    "end": "3985090"
  },
  {
    "text": "Tesla has done very smart things with hardware one in particular and the",
    "start": "3985090",
    "end": "3990490"
  },
  {
    "text": "harder one design was originally designed to be very simple automation",
    "start": "3990490",
    "end": "3996100"
  },
  {
    "text": "features in the car for like traffic aware cruise control and things like that and the fact that they were able to",
    "start": "3996100",
    "end": "4001170"
  },
  {
    "text": "effectively feature creep it into lane holding and and a very useful driver",
    "start": "4001170",
    "end": "4007290"
  },
  {
    "text": "assistance features is pretty astounding particularly given the details of the hardware hardware to built on that a lot",
    "start": "4007290",
    "end": "4014220"
  },
  {
    "text": "of ways and the challenge there was that they were transitioning from a third party provided vision stack to an",
    "start": "4014220",
    "end": "4020430"
  },
  {
    "text": "in-house built vision stack and so for the first step which I mostly helped with was getting onto that new vision",
    "start": "4020430",
    "end": "4027930"
  },
  {
    "text": "stack and that was very challenging and there were it was time critical for",
    "start": "4027930",
    "end": "4033240"
  },
  {
    "text": "various reasons and it was a big leap but it was fortunate that built on a lot of the knowledge and expertise and the",
    "start": "4033240",
    "end": "4038430"
  },
  {
    "text": "team that had built harder ones driver assistance features so you spoke in a",
    "start": "4038430",
    "end": "4043950"
  },
  {
    "text": "collected and kind way about your time at Tesla but it was ultimately not a good fit Elon Musk we've talked on his",
    "start": "4043950",
    "end": "4051210"
  },
  {
    "text": "podcast several guests the course he almost continues to do some of the most bold and innovative engineering work in",
    "start": "4051210",
    "end": "4057240"
  },
  {
    "text": "the world at times at the cost some of the members of the test the team what did you learn about this working in this chaotic world",
    "start": "4057240",
    "end": "4064770"
  },
  {
    "text": "Leon yeah so I guess I would say that when I was at Tesla I experienced and",
    "start": "4064770",
    "end": "4071580"
  },
  {
    "text": "saw vert the highest degree of turnover I'd ever seen in a company my which was a bit of a shock but one of the things I",
    "start": "4071580",
    "end": "4079050"
  },
  {
    "text": "learned and I came to respect is that Elon is able to attract amazing talent because he has a very clear vision of",
    "start": "4079050",
    "end": "4085230"
  },
  {
    "text": "the future and he can get people to buy into it because they want that future to happen right and the power of vision is",
    "start": "4085230",
    "end": "4091200"
  },
  {
    "text": "something that I have a tremendous amount of respect for and I think that Elon is fairly singular in the world in",
    "start": "4091200",
    "end": "4097710"
  },
  {
    "text": "terms of the things he's able to get people to believe in and it's it's a",
    "start": "4097710",
    "end": "4103259"
  },
  {
    "text": "very it's very there many people who stay on the street corner and say ah we're gonna go to Mars right but then",
    "start": "4103260",
    "end": "4109650"
  },
  {
    "text": "but then there are a few people that can get other others to buy into it and believe in build the path and make it",
    "start": "4109650",
    "end": "4115560"
  },
  {
    "text": "happen and so I respect that I don't respect all of his methods but",
    "start": "4115560",
    "end": "4121009"
  },
  {
    "text": "but I have a huge amount of respect for that you've mentioned in a few places",
    "start": "4121010",
    "end": "4126200"
  },
  {
    "text": "including in this context working hard what does it mean to work hard and when",
    "start": "4126200",
    "end": "4132259"
  },
  {
    "text": "you look back at your life what are what were some of the most brutal periods of",
    "start": "4132260",
    "end": "4138009"
  },
  {
    "text": "having to really sort of put everything you have into something yeah good",
    "start": "4138010",
    "end": "4143810"
  },
  {
    "text": "question so working hard can be defined a lot of different ways so a lot of hours and so that's that is true the thing to me",
    "start": "4143810",
    "end": "4153020"
  },
  {
    "text": "that's the hardest is both being short-term focused on delivering and",
    "start": "4153020",
    "end": "4158180"
  },
  {
    "text": "executing and making a thing happen while also thinking about the longer-term and trying to balance that",
    "start": "4158180",
    "end": "4163818"
  },
  {
    "text": "right because if you are myopically focused on solving a task and getting",
    "start": "4163819",
    "end": "4168950"
  },
  {
    "text": "that done and only think about that incremental next step you will miss the next big hill you should jump over -",
    "start": "4168950",
    "end": "4175460"
  },
  {
    "text": "right and so I've been really fortunate that I've been able to kind of oscillate",
    "start": "4175460",
    "end": "4180680"
  },
  {
    "text": "between the two and historically at Apple for example that was made possible",
    "start": "4180680",
    "end": "4186200"
  },
  {
    "text": "because I was able to work some really amazing people and build up teams and leadership structures and and allow them",
    "start": "4186200",
    "end": "4193910"
  },
  {
    "text": "to grow in their careers and take on responsibilities thereby freeing up me to be a little bit crazy and thinking",
    "start": "4193910",
    "end": "4200450"
  },
  {
    "text": "about the next thing and so it's it's a lot of that but it's also about you know",
    "start": "4200450",
    "end": "4206180"
  },
  {
    "text": "with the experience you make connections that other people don't necessarily make and so I think that is that's a big part",
    "start": "4206180",
    "end": "4211850"
  },
  {
    "text": "as well but the bedrock is just a lot of hours and you know that's that's okay",
    "start": "4211850",
    "end": "4218990"
  },
  {
    "text": "with me there's different theories on work-life balance and my theory for myself which I do not project on to the team but my",
    "start": "4218990",
    "end": "4225470"
  },
  {
    "text": "theory for myself is that you know I I wanted love what I'm doing and work really hard and my purpose I feel like",
    "start": "4225470",
    "end": "4232850"
  },
  {
    "text": "and my goal is to change the world and make it a better place and that's that's what I'm really motivated to do so last",
    "start": "4232850",
    "end": "4240590"
  },
  {
    "text": "question LLVM logo is a dragon you know you explain that this is",
    "start": "4240590",
    "end": "4245930"
  },
  {
    "text": "because dragons have connotations of power speed intelligence it can also be sleek elegant and",
    "start": "4245930",
    "end": "4252560"
  },
  {
    "text": "modular till you remove them the modular part what is your favorite dragon-related character from fiction",
    "start": "4252560",
    "end": "4259760"
  },
  {
    "text": "video or movies so those are all very kind ways of explaining it that you wanna know the real reason it's a dragon",
    "start": "4259760",
    "end": "4265490"
  },
  {
    "text": "well yeah so there is a seminal book on compiler design called the dragon book",
    "start": "4265490",
    "end": "4271910"
  },
  {
    "text": "and so this is a really old now book on compilers and so the the dragon logo for",
    "start": "4271910",
    "end": "4279560"
  },
  {
    "text": "LVM came about because at Apple we kept talking about LLVM related technologies",
    "start": "4279560",
    "end": "4284690"
  },
  {
    "text": "and there's no logo to put on a slide it's sort of like what do we do and somebody's like well what kind of logo",
    "start": "4284690",
    "end": "4289940"
  },
  {
    "text": "should a compiler technology have and I'm like I don't know I mean the Dragons or the dragon is the best thing that",
    "start": "4289940",
    "end": "4295850"
  },
  {
    "text": "that we've got and you know Apple somehow magically came up with the logo and and it was a great thing and the",
    "start": "4295850",
    "end": "4302810"
  },
  {
    "text": "whole community rallied around it and and then it got better as other graphic designers got involved but that's that's",
    "start": "4302810",
    "end": "4308120"
  },
  {
    "text": "originally where it came from story is they're dragons from fiction that you connect with for that Game of",
    "start": "4308120",
    "end": "4315170"
  },
  {
    "text": "Thrones Lord of the Rings that kind of thing Lord of the Rings is great I also like role-playing games and things like in",
    "start": "4315170",
    "end": "4320930"
  },
  {
    "text": "computer role-playing games and so Dragons often show up in there but but really comes back to to to the book oh",
    "start": "4320930",
    "end": "4327230"
  },
  {
    "text": "no we need we need a thing yeah and hilariously one of the one of the the",
    "start": "4327230",
    "end": "4332270"
  },
  {
    "text": "funny things about LLVM is that my wife who's amazing runs the the LVM",
    "start": "4332270",
    "end": "4338420"
  },
  {
    "text": "foundation and she goes to Grace Hopper and it's trying to get more women involved in the she's also compiler",
    "start": "4338420",
    "end": "4344330"
  },
  {
    "text": "engineer so she's trying to get other other women to get interested in compilers and things like this and so she hands out the stickers and people",
    "start": "4344330",
    "end": "4350390"
  },
  {
    "text": "like the LVM sticker because a game of thrones and so sometimes culture has",
    "start": "4350390",
    "end": "4355610"
  },
  {
    "text": "this whole effect to like get the next generation if hilar engineers engaged with the cause okay awesome Chris thanks",
    "start": "4355610",
    "end": "4363800"
  },
  {
    "text": "so much for time great talking with you",
    "start": "4363800",
    "end": "4367420"
  },
  {
    "text": "you",
    "start": "4372989",
    "end": "4375050"
  }
]