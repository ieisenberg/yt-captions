[
  {
    "text": "there's a lot of features that came in",
    "start": "1170",
    "end": "3449"
  },
  {
    "text": "in C++ 11 there's a lot of features at",
    "start": "3449",
    "end": "7170"
  },
  {
    "text": "the birth of C++ they were amazing and",
    "start": "7170",
    "end": "10490"
  },
  {
    "text": "ideas with concepts in 2020 what to you",
    "start": "10490",
    "end": "15089"
  },
  {
    "text": "is the most justjust to you personally",
    "start": "15089",
    "end": "19880"
  },
  {
    "text": "beautiful or just you sit back and think",
    "start": "19880",
    "end": "25700"
  },
  {
    "text": "wow that's just nice and clean feature",
    "start": "25700",
    "end": "30360"
  },
  {
    "text": "of C++ I have written two papers for the",
    "start": "30360",
    "end": "36660"
  },
  {
    "text": "history of programming languages",
    "start": "36660",
    "end": "37980"
  },
  {
    "text": "conference which basically asked me such",
    "start": "37980",
    "end": "40739"
  },
  {
    "text": "questions and I'm writing a third one",
    "start": "40739",
    "end": "43470"
  },
  {
    "text": "which I will deliver at the history of",
    "start": "43470",
    "end": "46800"
  },
  {
    "text": "programming languages conference in",
    "start": "46800",
    "end": "48329"
  },
  {
    "text": "London next year so I've been thinking",
    "start": "48329",
    "end": "51120"
  },
  {
    "text": "about that and there is one play answer",
    "start": "51120",
    "end": "53660"
  },
  {
    "text": "constructors and destructors the way a",
    "start": "53660",
    "end": "57210"
  },
  {
    "text": "constructor can establish the",
    "start": "57210",
    "end": "59399"
  },
  {
    "text": "environment for the use of the Java type",
    "start": "59399",
    "end": "62790"
  },
  {
    "text": "for an object and the destructor that",
    "start": "62790",
    "end": "65670"
  },
  {
    "text": "cleans up any messes at the end of it",
    "start": "65670",
    "end": "67890"
  },
  {
    "text": "that is the key to C++ that's why we",
    "start": "67890",
    "end": "71670"
  },
  {
    "text": "don't have to use garbage collection",
    "start": "71670",
    "end": "73620"
  },
  {
    "text": "that's how we can get predictable",
    "start": "73620",
    "end": "75900"
  },
  {
    "text": "performance that's how you can get the",
    "start": "75900",
    "end": "79770"
  },
  {
    "text": "minimal overhead in many many cases and",
    "start": "79770",
    "end": "82590"
  },
  {
    "text": "have really clean types it's the idea of",
    "start": "82590",
    "end": "87740"
  },
  {
    "text": "constructor destructor pairs sometimes",
    "start": "87740",
    "end": "90780"
  },
  {
    "text": "it comes out under the name our high a",
    "start": "90780",
    "end": "94170"
  },
  {
    "text": "III resource acquisition is",
    "start": "94170",
    "end": "97140"
  },
  {
    "text": "initialization which is the idea that",
    "start": "97140",
    "end": "99360"
  },
  {
    "text": "you grab resources and the constructor",
    "start": "99360",
    "end": "101640"
  },
  {
    "text": "and release them and destructor it's",
    "start": "101640",
    "end": "104729"
  },
  {
    "text": "also the best example of why I shouldn't",
    "start": "104729",
    "end": "106860"
  },
  {
    "text": "be in advertising I get the best idea",
    "start": "106860",
    "end": "109830"
  },
  {
    "text": "and I call it resource acquisition is",
    "start": "109830",
    "end": "112650"
  },
  {
    "text": "initialization not the greatest naming",
    "start": "112650",
    "end": "116640"
  },
  {
    "text": "I've ever heard",
    "start": "116640",
    "end": "119298"
  },
  {
    "text": "so it's types abstraction of types you",
    "start": "119549",
    "end": "126350"
  },
  {
    "text": "said I want to create my own types so",
    "start": "126350",
    "end": "129660"
  },
  {
    "text": "types is an essential part of C++ in",
    "start": "129660",
    "end": "132599"
  },
  {
    "text": "making them",
    "start": "132599",
    "end": "134290"
  },
  {
    "text": "is the if it is the key part and GU the",
    "start": "134290",
    "end": "139239"
  },
  {
    "text": "this is almost getting philosophical but",
    "start": "139239",
    "end": "141760"
  },
  {
    "text": "the construction and the destruction the",
    "start": "141760",
    "end": "145060"
  },
  {
    "text": "creation of an instance of a type and",
    "start": "145060",
    "end": "148349"
  },
  {
    "text": "the freeing of resources from that",
    "start": "148349",
    "end": "151709"
  },
  {
    "text": "instance of a type is what defines the",
    "start": "151709",
    "end": "155140"
  },
  {
    "text": "object is uh that's a little is like",
    "start": "155140",
    "end": "158650"
  },
  {
    "text": "birth and death is what defines human",
    "start": "158650",
    "end": "161409"
  },
  {
    "text": "life yeah that's right by the way",
    "start": "161409",
    "end": "164109"
  },
  {
    "text": "philosophy is important you can't do",
    "start": "164109",
    "end": "166799"
  },
  {
    "text": "good language design without philosophy",
    "start": "166799",
    "end": "170230"
  },
  {
    "text": "because what you are determining is what",
    "start": "170230",
    "end": "172480"
  },
  {
    "text": "people can express and how this is very",
    "start": "172480",
    "end": "175780"
  },
  {
    "text": "important",
    "start": "175780",
    "end": "176790"
  },
  {
    "text": "by the way constructors destructors came",
    "start": "176790",
    "end": "179859"
  },
  {
    "text": "into C++ in 79 in about the second week",
    "start": "179859",
    "end": "184690"
  },
  {
    "text": "of my work with what was then Corsi the",
    "start": "184690",
    "end": "187629"
  },
  {
    "text": "classes it is a fundamental idea",
    "start": "187629",
    "end": "190780"
  },
  {
    "text": "next comes the fact that you need to",
    "start": "190780",
    "end": "192879"
  },
  {
    "text": "control copying because once you control",
    "start": "192879",
    "end": "196209"
  },
  {
    "text": "as you says birth and death you have to",
    "start": "196209",
    "end": "199000"
  },
  {
    "text": "control taking coffees which is another",
    "start": "199000",
    "end": "202930"
  },
  {
    "text": "way of creating an object and finally",
    "start": "202930",
    "end": "205959"
  },
  {
    "text": "you have to be able to move things",
    "start": "205959",
    "end": "207280"
  },
  {
    "text": "around so you get the move operations",
    "start": "207280",
    "end": "210280"
  },
  {
    "text": "and that's the set of key operations you",
    "start": "210280",
    "end": "214510"
  },
  {
    "text": "can define on a C++ type inserts you",
    "start": "214510",
    "end": "219000"
  },
  {
    "text": "those things are just a beautiful part",
    "start": "219000",
    "end": "224440"
  },
  {
    "text": "of C++ that is at the core of it all yes",
    "start": "224440",
    "end": "229590"
  },
  {
    "text": "you",
    "start": "235680",
    "end": "237739"
  }
]