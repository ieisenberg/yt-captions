[
  {
    "start": "0",
    "end": "47000"
  },
  {
    "text": "rust on the web is constantly getting",
    "start": "40",
    "end": "2000"
  },
  {
    "text": "better compared to just a few short",
    "start": "2000",
    "end": "4120"
  },
  {
    "text": "years ago we now have a whole Suite of",
    "start": "4120",
    "end": "6000"
  },
  {
    "text": "crates allowing us to build production",
    "start": "6000",
    "end": "7600"
  },
  {
    "text": "ready applications for the web one of",
    "start": "7600",
    "end": "9800"
  },
  {
    "text": "these crates is tonic which provides a",
    "start": "9800",
    "end": "11799"
  },
  {
    "text": "rust implementation of grpc and having",
    "start": "11799",
    "end": "14960"
  },
  {
    "text": "played with it for a little while I can",
    "start": "14960",
    "end": "17119"
  },
  {
    "text": "confidently say that it makes grpc",
    "start": "17119",
    "end": "19439"
  },
  {
    "text": "stupidly simple when it comes to rust it",
    "start": "19439",
    "end": "21840"
  },
  {
    "text": "earns this prestigious classification",
    "start": "21840",
    "end": "24000"
  },
  {
    "text": "through the use of some wellth thought",
    "start": "24000",
    "end": "25519"
  },
  {
    "text": "out features features such as automatic",
    "start": "25519",
    "end": "27880"
  },
  {
    "text": "prod debuff compilation whenever you",
    "start": "27880",
    "end": "29599"
  },
  {
    "text": "build your code simplified importing",
    "start": "29599",
    "end": "31759"
  },
  {
    "text": "through macros compile time checking of",
    "start": "31759",
    "end": "33920"
  },
  {
    "text": "your implementation as compared to your",
    "start": "33920",
    "end": "35680"
  },
  {
    "text": "grpc contract and perhaps one of the",
    "start": "35680",
    "end": "38160"
  },
  {
    "text": "greatest features I've seen in a grpc",
    "start": "38160",
    "end": "40200"
  },
  {
    "text": "implementation web support with about",
    "start": "40200",
    "end": "42360"
  },
  {
    "text": "three lines of code to show all of these",
    "start": "42360",
    "end": "44600"
  },
  {
    "text": "features in action let's go ahead and",
    "start": "44600",
    "end": "46320"
  },
  {
    "text": "build something with it to get started",
    "start": "46320",
    "end": "48520"
  },
  {
    "start": "47000",
    "end": "149000"
  },
  {
    "text": "first create a new project using cargo",
    "start": "48520",
    "end": "50719"
  },
  {
    "text": "this project is going to be a simple",
    "start": "50719",
    "end": "52480"
  },
  {
    "text": "calculator app using grpc and tonic",
    "start": "52480",
    "end": "54879"
  },
  {
    "text": "under the hood in order to do this we're",
    "start": "54879",
    "end": "57199"
  },
  {
    "text": "going to need to add tonic and a couple",
    "start": "57199",
    "end": "58879"
  },
  {
    "text": "of other dependencies to to our project",
    "start": "58879",
    "end": "60840"
  },
  {
    "text": "therefore go ahead and open up the",
    "start": "60840",
    "end": "62359"
  },
  {
    "text": "cargo. TMO in your favorite text editor",
    "start": "62359",
    "end": "64878"
  },
  {
    "text": "once inside add in the following line to",
    "start": "64879",
    "end": "66880"
  },
  {
    "text": "set tonic as the first dependency of our",
    "start": "66880",
    "end": "69119"
  },
  {
    "text": "project as tonic is built on top of the",
    "start": "69119",
    "end": "71200"
  },
  {
    "text": "Tokyo stack we'll also need to add this",
    "start": "71200",
    "end": "73119"
  },
  {
    "text": "as well below this Define an entry for",
    "start": "73119",
    "end": "75080"
  },
  {
    "text": "The Prost crate which is used to",
    "start": "75080",
    "end": "76439"
  },
  {
    "text": "serialize and deserialize into protuff",
    "start": "76439",
    "end": "79119"
  },
  {
    "text": "lastly we have one final dependency to",
    "start": "79119",
    "end": "81159"
  },
  {
    "text": "add at this stage which is tonic build",
    "start": "81159",
    "end": "83799"
  },
  {
    "text": "however this goes in a different section",
    "start": "83799",
    "end": "85520"
  },
  {
    "text": "called build dependencies this section",
    "start": "85520",
    "end": "87600"
  },
  {
    "text": "is used to define the dependencies for",
    "start": "87600",
    "end": "89240"
  },
  {
    "text": "any build we might have in our case",
    "start": "89240",
    "end": "91680"
  },
  {
    "text": "we're going to set up a build script",
    "start": "91680",
    "end": "93119"
  },
  {
    "text": "that will compile our protuff whenever",
    "start": "93119",
    "end": "95079"
  },
  {
    "text": "our project is built before we add that",
    "start": "95079",
    "end": "97280"
  },
  {
    "text": "in let's first create our protuff",
    "start": "97280",
    "end": "99399"
  },
  {
    "text": "definition to do so first create a new",
    "start": "99399",
    "end": "101680"
  },
  {
    "text": "directory called Proto which contains a",
    "start": "101680",
    "end": "103640"
  },
  {
    "text": "file called calculator. prototo inside",
    "start": "103640",
    "end": "106119"
  },
  {
    "text": "this file is going to contain all the",
    "start": "106119",
    "end": "107520"
  },
  {
    "text": "protuff definition for our calculator",
    "start": "107520",
    "end": "109520"
  },
  {
    "text": "service once it's created go ahead and",
    "start": "109520",
    "end": "112000"
  },
  {
    "text": "open it up first add in the following",
    "start": "112000",
    "end": "114040"
  },
  {
    "text": "line to define the syntax as Proto 3 and",
    "start": "114040",
    "end": "116640"
  },
  {
    "text": "below it set the package name which in",
    "start": "116640",
    "end": "118479"
  },
  {
    "text": "this case is calculator underneath this",
    "start": "118479",
    "end": "120719"
  },
  {
    "text": "we can Define our calculator service and",
    "start": "120719",
    "end": "122759"
  },
  {
    "text": "then Define our ad method inside using",
    "start": "122759",
    "end": "124680"
  },
  {
    "text": "the following code this method takes a",
    "start": "124680",
    "end": "127000"
  },
  {
    "text": "calculation request message as its input",
    "start": "127000",
    "end": "129000"
  },
  {
    "text": "and returns a calculation response the",
    "start": "129000",
    "end": "131640"
  },
  {
    "text": "calculation request message wraps two",
    "start": "131640",
    "end": "133400"
  },
  {
    "text": "integers A and B whilst the calculation",
    "start": "133400",
    "end": "136040"
  },
  {
    "text": "response message wraps a single integer",
    "start": "136040",
    "end": "138040"
  },
  {
    "text": "called result that wraps up our protuff",
    "start": "138040",
    "end": "140480"
  },
  {
    "text": "definition for the moment if you're not",
    "start": "140480",
    "end": "142280"
  },
  {
    "text": "entirely sure what's going on here then",
    "start": "142280",
    "end": "143959"
  },
  {
    "text": "I have another video that goes into this",
    "start": "143959",
    "end": "145760"
  },
  {
    "text": "protuff in a little more detail which I",
    "start": "145760",
    "end": "147920"
  },
  {
    "text": "would recommend watching with our buff",
    "start": "147920",
    "end": "150160"
  },
  {
    "start": "149000",
    "end": "193000"
  },
  {
    "text": "defined now we can move on to the fun",
    "start": "150160",
    "end": "152120"
  },
  {
    "text": "stuff code generation in order to do",
    "start": "152120",
    "end": "155000"
  },
  {
    "text": "this we first need to install the",
    "start": "155000",
    "end": "156519"
  },
  {
    "text": "protuff compiler onto our system on Mac",
    "start": "156519",
    "end": "159040"
  },
  {
    "text": "OS you can do this using Homebrew and on",
    "start": "159040",
    "end": "160959"
  },
  {
    "text": "Linux you can use whatever flavor of",
    "start": "160959",
    "end": "162720"
  },
  {
    "text": "package manager your drro provides with",
    "start": "162720",
    "end": "164920"
  },
  {
    "text": "the protuff compiler installed we can",
    "start": "164920",
    "end": "166680"
  },
  {
    "text": "now go ahead and add in our build script",
    "start": "166680",
    "end": "168560"
  },
  {
    "text": "that I mentioned before to do so create",
    "start": "168560",
    "end": "170599"
  },
  {
    "text": "a new file in the rout of the project",
    "start": "170599",
    "end": "172239"
  },
  {
    "text": "called build. RS once created open it up",
    "start": "172239",
    "end": "175280"
  },
  {
    "text": "and add in the following lines inside of",
    "start": "175280",
    "end": "177440"
  },
  {
    "text": "the main function we're using the",
    "start": "177440",
    "end": "179040"
  },
  {
    "text": "compile Proto method of the tonic build",
    "start": "179040",
    "end": "181239"
  },
  {
    "text": "package passing in the path to our",
    "start": "181239",
    "end": "183120"
  },
  {
    "text": "calculator's protuff definition this is",
    "start": "183120",
    "end": "185519"
  },
  {
    "text": "all it takes in order for us to compile",
    "start": "185519",
    "end": "187560"
  },
  {
    "text": "our protuff whenever we build our",
    "start": "187560",
    "end": "189200"
  },
  {
    "text": "project compared to other languages",
    "start": "189200",
    "end": "191080"
  },
  {
    "text": "tonic makes this seriously simple with",
    "start": "191080",
    "end": "193720"
  },
  {
    "start": "193000",
    "end": "358000"
  },
  {
    "text": "our code now being generated we're ready",
    "start": "193720",
    "end": "195560"
  },
  {
    "text": "to move on to setting up our calculator",
    "start": "195560",
    "end": "197680"
  },
  {
    "text": "service to do so head on over to the",
    "start": "197680",
    "end": "199760"
  },
  {
    "text": "main. RS file inside of your Source",
    "start": "199760",
    "end": "201879"
  },
  {
    "text": "directory the first thing we want to do",
    "start": "201879",
    "end": "203920"
  },
  {
    "text": "inside of this file is import the",
    "start": "203920",
    "end": "205519"
  },
  {
    "text": "compiled Proto buff into our code to do",
    "start": "205519",
    "end": "207720"
  },
  {
    "text": "this let's first create a module of",
    "start": "207720",
    "end": "209319"
  },
  {
    "text": "Proto in order to namespace our",
    "start": "209319",
    "end": "211159"
  },
  {
    "text": "generated code then inside of this",
    "start": "211159",
    "end": "213040"
  },
  {
    "text": "module block use the include Proto macro",
    "start": "213040",
    "end": "215599"
  },
  {
    "text": "from the tonic crate in order to import",
    "start": "215599",
    "end": "217799"
  },
  {
    "text": "our calculator package which is the name",
    "start": "217799",
    "end": "220080"
  },
  {
    "text": "we gave to the package inside of our",
    "start": "220080",
    "end": "221799"
  },
  {
    "text": "calculator. prototo with our Proto buff",
    "start": "221799",
    "end": "224239"
  },
  {
    "text": "included we can now go ahead and create",
    "start": "224239",
    "end": "226080"
  },
  {
    "text": "our actual service to do so we need to",
    "start": "226080",
    "end": "228319"
  },
  {
    "text": "create a new type in order to implement",
    "start": "228319",
    "end": "230360"
  },
  {
    "text": "the services methods in our case this is",
    "start": "230360",
    "end": "232640"
  },
  {
    "text": "going to be the calculator service",
    "start": "232640",
    "end": "234360"
  },
  {
    "text": "struct in order for the struct to",
    "start": "234360",
    "end": "236439"
  },
  {
    "text": "implement the methods of our RPC service",
    "start": "236439",
    "end": "238799"
  },
  {
    "text": "we need to import these Services trait",
    "start": "238799",
    "end": "240560"
  },
  {
    "text": "from our Proto buff definition we can do",
    "start": "240560",
    "end": "242760"
  },
  {
    "text": "this with a used declaration importing",
    "start": "242760",
    "end": "244959"
  },
  {
    "text": "the calculator trait from the Proto",
    "start": "244959",
    "end": "246920"
  },
  {
    "text": "module this trait was created by Tonic",
    "start": "246920",
    "end": "249480"
  },
  {
    "text": "and represents the same interface we",
    "start": "249480",
    "end": "251400"
  },
  {
    "text": "have in our protuff definition for our",
    "start": "251400",
    "end": "253640"
  },
  {
    "text": "calculator service whilst we're here we",
    "start": "253640",
    "end": "255799"
  },
  {
    "text": "may as well add a declaration for the",
    "start": "255799",
    "end": "257479"
  },
  {
    "text": "calculator server as well with our trait",
    "start": "257479",
    "end": "260000"
  },
  {
    "text": "imported let's go ahead and implement it",
    "start": "260000",
    "end": "261880"
  },
  {
    "text": "for our calculator service type because",
    "start": "261880",
    "end": "264240"
  },
  {
    "text": "tonic uses Tokyo under the hood that",
    "start": "264240",
    "end": "266240"
  },
  {
    "text": "means that the traits contain",
    "start": "266240",
    "end": "267479"
  },
  {
    "text": "asynchronous methods therefore we need",
    "start": "267479",
    "end": "269320"
  },
  {
    "text": "to use the tonic async trait macro on",
    "start": "269320",
    "end": "271560"
  },
  {
    "text": "our implementation with that done we can",
    "start": "271560",
    "end": "273680"
  },
  {
    "text": "go ahead and now implement the ad method",
    "start": "273680",
    "end": "275800"
  },
  {
    "text": "that our trait expects this method is",
    "start": "275800",
    "end": "277960"
  },
  {
    "text": "cooled with a tonic request that",
    "start": "277960",
    "end": "279520"
  },
  {
    "text": "encapsulates a calculation request",
    "start": "279520",
    "end": "281440"
  },
  {
    "text": "message from our protuff definition the",
    "start": "281440",
    "end": "283639"
  },
  {
    "text": "return type of this method is a result",
    "start": "283639",
    "end": "285800"
  },
  {
    "text": "which either returns a tonic response",
    "start": "285800",
    "end": "287800"
  },
  {
    "text": "which encapsulates a calculation",
    "start": "287800",
    "end": "289600"
  },
  {
    "text": "response from our protuff or it returns",
    "start": "289600",
    "end": "291759"
  },
  {
    "text": "a tonic status in the event of an error",
    "start": "291759",
    "end": "293880"
  },
  {
    "text": "for the function implementation it's",
    "start": "293880",
    "end": "295919"
  },
  {
    "text": "rather simple to pull out our input",
    "start": "295919",
    "end": "298000"
  },
  {
    "text": "message by reference we can use use the",
    "start": "298000",
    "end": "299960"
  },
  {
    "text": "get ref method on our request type then",
    "start": "299960",
    "end": "302479"
  },
  {
    "text": "we can craft a calculation response with",
    "start": "302479",
    "end": "304320"
  },
  {
    "text": "the result being the sum of input a and",
    "start": "304320",
    "end": "306759"
  },
  {
    "text": "input B then we can wrap this response",
    "start": "306759",
    "end": "309120"
  },
  {
    "text": "in a tonic response which in turn will",
    "start": "309120",
    "end": "311120"
  },
  {
    "text": "wrap in an okay with that our service is",
    "start": "311120",
    "end": "313560"
  },
  {
    "text": "complete the next thing to do is to get",
    "start": "313560",
    "end": "315800"
  },
  {
    "text": "it running to do so head on down to the",
    "start": "315800",
    "end": "318000"
  },
  {
    "text": "main function and turn it into an",
    "start": "318000",
    "end": "319759"
  },
  {
    "text": "asynchronous Tokyo runtime returning a",
    "start": "319759",
    "end": "322000"
  },
  {
    "text": "result next we'll specify the address we",
    "start": "322000",
    "end": "324160"
  },
  {
    "text": "want our server to run on which is going",
    "start": "324160",
    "end": "325720"
  },
  {
    "text": "to be on our IPv6 loop back at Port",
    "start": "325720",
    "end": "328600"
  },
  {
    "text": "50,000 and 51 next we'll create an",
    "start": "328600",
    "end": "331479"
  },
  {
    "text": "instance of our calculator service and",
    "start": "331479",
    "end": "333600"
  },
  {
    "text": "then add in the following lines which",
    "start": "333600",
    "end": "335160"
  },
  {
    "text": "creates a new tonic server using the",
    "start": "335160",
    "end": "337520"
  },
  {
    "text": "server Builder wraps our service in a",
    "start": "337520",
    "end": "339319"
  },
  {
    "text": "calculator server and adds it to the",
    "start": "339319",
    "end": "341080"
  },
  {
    "text": "Builder and then listens on our IPv6",
    "start": "341080",
    "end": "343560"
  },
  {
    "text": "address lastly you'll need to add a Ed",
    "start": "343560",
    "end": "345919"
  },
  {
    "text": "declaration for the tonic transport",
    "start": "345919",
    "end": "347720"
  },
  {
    "text": "server with that our initial service",
    "start": "347720",
    "end": "349759"
  },
  {
    "text": "should be ready to run let's go ahead",
    "start": "349759",
    "end": "351680"
  },
  {
    "text": "and test it first run your code by using",
    "start": "351680",
    "end": "353919"
  },
  {
    "text": "the cargo run command if everything was",
    "start": "353919",
    "end": "356120"
  },
  {
    "text": "built correctly you shouldn't see any",
    "start": "356120",
    "end": "357720"
  },
  {
    "text": "errors with our server running we now",
    "start": "357720",
    "end": "359759"
  },
  {
    "start": "358000",
    "end": "429000"
  },
  {
    "text": "need a way to send a grpc request to it",
    "start": "359759",
    "end": "362840"
  },
  {
    "text": "my preferred tool for doing this on the",
    "start": "362840",
    "end": "364319"
  },
  {
    "text": "command line is grpc curl which is a CLI",
    "start": "364319",
    "end": "367560"
  },
  {
    "text": "tool that has a very similar interface",
    "start": "367560",
    "end": "369240"
  },
  {
    "text": "to curl but works for grpc you can",
    "start": "369240",
    "end": "371560"
  },
  {
    "text": "install this as per the instructions on",
    "start": "371560",
    "end": "373360"
  },
  {
    "text": "their documentation once it's installed",
    "start": "373360",
    "end": "375720"
  },
  {
    "text": "we can then send a request to our grpc",
    "start": "375720",
    "end": "378120"
  },
  {
    "text": "server using the following command let's",
    "start": "378120",
    "end": "380440"
  },
  {
    "text": "take a moment to break it down the first",
    "start": "380440",
    "end": "382680"
  },
  {
    "text": "flag we're passing is the plain text",
    "start": "382680",
    "end": "384639"
  },
  {
    "text": "flag which tells the client to not use",
    "start": "384639",
    "end": "386800"
  },
  {
    "text": "TLS next is the dash Proto option which",
    "start": "386800",
    "end": "389759"
  },
  {
    "text": "tells the command where to find our",
    "start": "389759",
    "end": "391240"
  },
  {
    "text": "protuff definition this is needed by the",
    "start": "391240",
    "end": "393440"
  },
  {
    "text": "client in order to interact with the",
    "start": "393440",
    "end": "395120"
  },
  {
    "text": "service next is the- D flag which is",
    "start": "395120",
    "end": "397840"
  },
  {
    "text": "passing in our request data in the form",
    "start": "397840",
    "end": "399759"
  },
  {
    "text": "of Json this will be serialized into a",
    "start": "399759",
    "end": "402120"
  },
  {
    "text": "protuff message by the client and in",
    "start": "402120",
    "end": "404440"
  },
  {
    "text": "this case represents the calculation",
    "start": "404440",
    "end": "406400"
  },
  {
    "text": "request message in our protuff",
    "start": "406400",
    "end": "408039"
  },
  {
    "text": "definition next is the servers URL",
    "start": "408039",
    "end": "410440"
  },
  {
    "text": "followed by the servers RPC method which",
    "start": "410440",
    "end": "413160"
  },
  {
    "text": "in our case is the ad method of the",
    "start": "413160",
    "end": "415120"
  },
  {
    "text": "calculator service found in the",
    "start": "415120",
    "end": "416759"
  },
  {
    "text": "calculator package if I go ahead and",
    "start": "416759",
    "end": "418960"
  },
  {
    "text": "execute the this command I get the",
    "start": "418960",
    "end": "420360"
  },
  {
    "text": "result back of five which by my",
    "start": "420360",
    "end": "422479"
  },
  {
    "text": "calculation is correct with that we've",
    "start": "422479",
    "end": "425039"
  },
  {
    "text": "successfully managed to set up our grpc",
    "start": "425039",
    "end": "427039"
  },
  {
    "text": "server and hit it with an actual request",
    "start": "427039",
    "end": "429720"
  },
  {
    "start": "429000",
    "end": "532000"
  },
  {
    "text": "now is a good time to improve our",
    "start": "429720",
    "end": "431080"
  },
  {
    "text": "service by enabling reflection",
    "start": "431080",
    "end": "433120"
  },
  {
    "text": "reflection is the ability for a service",
    "start": "433120",
    "end": "435039"
  },
  {
    "text": "to communicate its grpc contract to",
    "start": "435039",
    "end": "437560"
  },
  {
    "text": "clients eliminating the need for the",
    "start": "437560",
    "end": "439440"
  },
  {
    "text": "client to have the prabu definition to",
    "start": "439440",
    "end": "441680"
  },
  {
    "text": "enable reflection in tonic takes a",
    "start": "441680",
    "end": "443479"
  },
  {
    "text": "couple of steps first we need to add the",
    "start": "443479",
    "end": "445520"
  },
  {
    "text": "tonic reflection crate to our cargo. tml",
    "start": "445520",
    "end": "448160"
  },
  {
    "text": "after that we need to make a CH to our",
    "start": "448160",
    "end": "449879"
  },
  {
    "text": "build. RS file in order to compile the",
    "start": "449879",
    "end": "452160"
  },
  {
    "text": "reflection descriptors first add in the",
    "start": "452160",
    "end": "454520"
  },
  {
    "text": "following line for a couple of types in",
    "start": "454520",
    "end": "456280"
  },
  {
    "text": "the standard library next we want to",
    "start": "456280",
    "end": "458039"
  },
  {
    "text": "create a path from the following",
    "start": "458039",
    "end": "459319"
  },
  {
    "text": "environment variable which is set and",
    "start": "459319",
    "end": "461400"
  },
  {
    "text": "used by cargo to place all of the build",
    "start": "461400",
    "end": "463479"
  },
  {
    "text": "artifacts in our project lastly add in",
    "start": "463479",
    "end": "465800"
  },
  {
    "text": "the following lines which will compile",
    "start": "465800",
    "end": "467360"
  },
  {
    "text": "our protuff into the file descriptor set",
    "start": "467360",
    "end": "470000"
  },
  {
    "text": "with that we're ready to move over to",
    "start": "470000",
    "end": "471560"
  },
  {
    "text": "our main. RS file in order to add",
    "start": "471560",
    "end": "473759"
  },
  {
    "text": "reflection to our grpc service to do so",
    "start": "473759",
    "end": "476919"
  },
  {
    "text": "add in the following two lines into our",
    "start": "476919",
    "end": "478879"
  },
  {
    "text": "Proto module this loads in the file",
    "start": "478879",
    "end": "480879"
  },
  {
    "text": "descriptor set that we just set up to",
    "start": "480879",
    "end": "482400"
  },
  {
    "text": "compile in our build script next head",
    "start": "482400",
    "end": "484680"
  },
  {
    "text": "down to the main function and add in the",
    "start": "484680",
    "end": "486280"
  },
  {
    "text": "following lines of code which builds a",
    "start": "486280",
    "end": "488199"
  },
  {
    "text": "tonic reflection service using the",
    "start": "488199",
    "end": "490240"
  },
  {
    "text": "encoded file descriptor set of our",
    "start": "490240",
    "end": "491879"
  },
  {
    "text": "calculator service that we just imported",
    "start": "491879",
    "end": "494159"
  },
  {
    "text": "finally use the ad service method of the",
    "start": "494159",
    "end": "496360"
  },
  {
    "text": "Builder in order to add reflection to it",
    "start": "496360",
    "end": "498759"
  },
  {
    "text": "now if we go ahead and rerun our code we",
    "start": "498759",
    "end": "500720"
  },
  {
    "text": "should be then able to hit it with grpc",
    "start": "500720",
    "end": "502720"
  },
  {
    "text": "Co without needing to provide the",
    "start": "502720",
    "end": "504400"
  },
  {
    "text": "protuff definition whilst Reflections",
    "start": "504400",
    "end": "506919"
  },
  {
    "text": "simplifies the command line it works",
    "start": "506919",
    "end": "508720"
  },
  {
    "text": "even better when it comes to grpc UI",
    "start": "508720",
    "end": "511280"
  },
  {
    "text": "clients take grpc UI for example by",
    "start": "511280",
    "end": "514518"
  },
  {
    "text": "using reflection it shows us all of",
    "start": "514519",
    "end": "516279"
  },
  {
    "text": "these services and methods that our",
    "start": "516279",
    "end": "517839"
  },
  {
    "text": "server provides as well as the expected",
    "start": "517839",
    "end": "519880"
  },
  {
    "text": "request data for each method because of",
    "start": "519880",
    "end": "522080"
  },
  {
    "text": "this reflection makes it a lot easier to",
    "start": "522080",
    "end": "524080"
  },
  {
    "text": "work with internal Services when it",
    "start": "524080",
    "end": "525720"
  },
  {
    "text": "comes to grpc with our server in a good",
    "start": "525720",
    "end": "528360"
  },
  {
    "text": "State now is a good time to start",
    "start": "528360",
    "end": "529800"
  },
  {
    "text": "thinking about building out our grpc",
    "start": "529800",
    "end": "531920"
  },
  {
    "text": "client but before we do that let me",
    "start": "531920",
    "end": "534279"
  },
  {
    "start": "532000",
    "end": "595000"
  },
  {
    "text": "first talk about the sponsor of today's",
    "start": "534279",
    "end": "535880"
  },
  {
    "text": "video brilliant.org If you're looking to",
    "start": "535880",
    "end": "538480"
  },
  {
    "text": "level up your knowledge knowledge in",
    "start": "538480",
    "end": "539720"
  },
  {
    "text": "computer science maths or data science",
    "start": "539720",
    "end": "542120"
  },
  {
    "text": "then brilliant can help brilliant is one",
    "start": "542120",
    "end": "544120"
  },
  {
    "text": "of the best ways to learn these subjects",
    "start": "544120",
    "end": "545720"
  },
  {
    "text": "in an interactive way providing",
    "start": "545720",
    "end": "547320"
  },
  {
    "text": "bite-size courses that cover a range of",
    "start": "547320",
    "end": "549240"
  },
  {
    "text": "subjects such as algorithms and data",
    "start": "549240",
    "end": "551040"
  },
  {
    "text": "structures probability and even coding",
    "start": "551040",
    "end": "553160"
  },
  {
    "text": "in Python if you're looking to level up",
    "start": "553160",
    "end": "555279"
  },
  {
    "text": "your skills or even learn something new",
    "start": "555279",
    "end": "557279"
  },
  {
    "text": "Brilliance makes it easy to do so by",
    "start": "557279",
    "end": "559480"
  },
  {
    "text": "selecting the course you wish to take",
    "start": "559480",
    "end": "561240"
  },
  {
    "text": "Brilliance will ask you some questions",
    "start": "561240",
    "end": "562800"
  },
  {
    "text": "about where you want to go and what your",
    "start": "562800",
    "end": "564279"
  },
  {
    "text": "current skill level is suggesting the",
    "start": "564279",
    "end": "566360"
  },
  {
    "text": "best place for you to start recently I",
    "start": "566360",
    "end": "568560"
  },
  {
    "text": "picked up the course on Quantum",
    "start": "568560",
    "end": "569959"
  },
  {
    "text": "Computing in order to better understand",
    "start": "569959",
    "end": "571680"
  },
  {
    "text": "this emerging field because brilliant",
    "start": "571680",
    "end": "573440"
  },
  {
    "text": "provides this course in bite-size",
    "start": "573440",
    "end": "574800"
  },
  {
    "text": "lessons I was able to easily progress",
    "start": "574800",
    "end": "576519"
  },
  {
    "text": "through this course during my spare time",
    "start": "576519",
    "end": "578519"
  },
  {
    "text": "making it work for my schedule so to try",
    "start": "578519",
    "end": "580959"
  },
  {
    "text": "everything that brilliant has to offer",
    "start": "580959",
    "end": "582440"
  },
  {
    "text": "free for 30 days visit brilliant.org",
    "start": "582440",
    "end": "584720"
  },
  {
    "text": "sreams or code or click the link in the",
    "start": "584720",
    "end": "586959"
  },
  {
    "text": "description down below the first 200 to",
    "start": "586959",
    "end": "589240"
  },
  {
    "text": "sign up will receive 20% of brilliant's",
    "start": "589240",
    "end": "591279"
  },
  {
    "text": "annual premium subscription a big thank",
    "start": "591279",
    "end": "593399"
  },
  {
    "text": "you to brilliant for sponsoring this",
    "start": "593399",
    "end": "595079"
  },
  {
    "start": "595000",
    "end": "674000"
  },
  {
    "text": "video as well as servers tonic makes it",
    "start": "595079",
    "end": "597600"
  },
  {
    "text": "extremely easy for building out grpc",
    "start": "597600",
    "end": "599800"
  },
  {
    "text": "clients let's go ahead and build one for",
    "start": "599800",
    "end": "601760"
  },
  {
    "text": "our calculator service to do so we need",
    "start": "601760",
    "end": "604120"
  },
  {
    "text": "to set up a new binary build Target",
    "start": "604120",
    "end": "605880"
  },
  {
    "text": "inside of our cargo. Tomo which we can",
    "start": "605880",
    "end": "607880"
  },
  {
    "text": "do using the following lines this also",
    "start": "607880",
    "end": "610079"
  },
  {
    "text": "adds in a binary Target for our server",
    "start": "610079",
    "end": "612160"
  },
  {
    "text": "as well you'll notice that the path for",
    "start": "612160",
    "end": "613880"
  },
  {
    "text": "our client binary is pointing to the",
    "start": "613880",
    "end": "615680"
  },
  {
    "text": "source client. RS file let's go ahead",
    "start": "615680",
    "end": "618000"
  },
  {
    "text": "and create it and then open it up inside",
    "start": "618000",
    "end": "620279"
  },
  {
    "text": "we want to create a new main function",
    "start": "620279",
    "end": "621920"
  },
  {
    "text": "that conforms to the Tokyo runtime",
    "start": "621920",
    "end": "624120"
  },
  {
    "text": "afterwards we then can import our",
    "start": "624120",
    "end": "625600"
  },
  {
    "text": "generated protuff using the exact same",
    "start": "625600",
    "end": "627560"
  },
  {
    "text": "way we did on our server with the",
    "start": "627560",
    "end": "629399"
  },
  {
    "text": "include Proto macro from tonic to make",
    "start": "629399",
    "end": "631680"
  },
  {
    "text": "the code a little more concise add in",
    "start": "631680",
    "end": "633440"
  },
  {
    "text": "the following use declaration for our",
    "start": "633440",
    "end": "635279"
  },
  {
    "text": "calculator client then scroll down to",
    "start": "635279",
    "end": "637519"
  },
  {
    "text": "the main function first Define a",
    "start": "637519",
    "end": "639320"
  },
  {
    "text": "variable that stores our server's URL",
    "start": "639320",
    "end": "641720"
  },
  {
    "text": "next let's create an instance of our",
    "start": "641720",
    "end": "643360"
  },
  {
    "text": "calculator client using the connect",
    "start": "643360",
    "end": "645160"
  },
  {
    "text": "method passing in the URL we just",
    "start": "645160",
    "end": "647000"
  },
  {
    "text": "created afterwards we can Define our",
    "start": "647000",
    "end": "649040"
  },
  {
    "text": "request parameters using the calculation",
    "start": "649040",
    "end": "651120"
  },
  {
    "text": "request type and then wrap it in a tonic",
    "start": "651120",
    "end": "653480"
  },
  {
    "text": "request finally all we need to do is",
    "start": "653480",
    "end": "655720"
  },
  {
    "text": "pass this request object to the ad",
    "start": "655720",
    "end": "657440"
  },
  {
    "text": "method of our calculator client and we",
    "start": "657440",
    "end": "659720"
  },
  {
    "text": "can then print out the result from the",
    "start": "659720",
    "end": "661480"
  },
  {
    "text": "response message let's go ahead and",
    "start": "661480",
    "end": "663320"
  },
  {
    "text": "execute this code using the cargo run",
    "start": "663320",
    "end": "665200"
  },
  {
    "text": "command and if everything is working",
    "start": "665200",
    "end": "667200"
  },
  {
    "text": "correctly we should get back our",
    "start": "667200",
    "end": "668680"
  },
  {
    "text": "expected result with that we've managed",
    "start": "668680",
    "end": "670839"
  },
  {
    "text": "to set up a grpc client in just 21 lines",
    "start": "670839",
    "end": "673760"
  },
  {
    "text": "of code the next feature I think worth",
    "start": "673760",
    "end": "676120"
  },
  {
    "start": "674000",
    "end": "778000"
  },
  {
    "text": "looking at is how to handle errors when",
    "start": "676120",
    "end": "677880"
  },
  {
    "text": "it comes to Tonic in order to do this we",
    "start": "677880",
    "end": "680360"
  },
  {
    "text": "need to add a new RPC method to our",
    "start": "680360",
    "end": "682320"
  },
  {
    "text": "protuff definition one that can cause an",
    "start": "682320",
    "end": "684680"
  },
  {
    "text": "error fortunately for us there's an",
    "start": "684680",
    "end": "686399"
  },
  {
    "text": "obvious choice The Divide method let's",
    "start": "686399",
    "end": "688639"
  },
  {
    "text": "go ahead and add this into our service",
    "start": "688639",
    "end": "690720"
  },
  {
    "text": "by the way if we now try to build our",
    "start": "690720",
    "end": "692279"
  },
  {
    "text": "server code following this change we'll",
    "start": "692279",
    "end": "694200"
  },
  {
    "text": "actually receive a compilation error",
    "start": "694200",
    "end": "696279"
  },
  {
    "text": "this is because our protuff is",
    "start": "696279",
    "end": "697560"
  },
  {
    "text": "automatically compiled and the",
    "start": "697560",
    "end": "699240"
  },
  {
    "text": "calculator service type inside of our",
    "start": "699240",
    "end": "701000"
  },
  {
    "text": "code no longer matches the generated",
    "start": "701000",
    "end": "703160"
  },
  {
    "text": "calculator trait this is one of the",
    "start": "703160",
    "end": "704920"
  },
  {
    "text": "features I absolutely love when it comes",
    "start": "704920",
    "end": "706920"
  },
  {
    "text": "to Tonic let's go ahead and fix this",
    "start": "706920",
    "end": "708920"
  },
  {
    "text": "error by implementing our divide method",
    "start": "708920",
    "end": "711399"
  },
  {
    "text": "the function definition and",
    "start": "711399",
    "end": "712680"
  },
  {
    "text": "implementation is pretty much the same",
    "start": "712680",
    "end": "714519"
  },
  {
    "text": "as our ad method with the only",
    "start": "714519",
    "end": "716200"
  },
  {
    "text": "difference being the use of the division",
    "start": "716200",
    "end": "717839"
  },
  {
    "text": "operator instead of ADD adding our two",
    "start": "717839",
    "end": "719560"
  },
  {
    "text": "input values together if we go ahead and",
    "start": "719560",
    "end": "721760"
  },
  {
    "text": "run this code and then send a request to",
    "start": "721760",
    "end": "723560"
  },
  {
    "text": "divide the number 10 by two we get back",
    "start": "723560",
    "end": "725720"
  },
  {
    "text": "the expected result of five however if",
    "start": "725720",
    "end": "728240"
  },
  {
    "text": "we then try to send a request dividing",
    "start": "728240",
    "end": "729959"
  },
  {
    "text": "10 by Z we receive back an error and our",
    "start": "729959",
    "end": "732320"
  },
  {
    "text": "server panics this is because we've",
    "start": "732320",
    "end": "734320"
  },
  {
    "text": "attempted to divide by zero let's make",
    "start": "734320",
    "end": "736480"
  },
  {
    "text": "some changes inside of our divide method",
    "start": "736480",
    "end": "738480"
  },
  {
    "text": "to better handle this error let's add in",
    "start": "738480",
    "end": "740560"
  },
  {
    "text": "the following line to perform a",
    "start": "740560",
    "end": "742040"
  },
  {
    "text": "validation check on our devisor value if",
    "start": "742040",
    "end": "744360"
  },
  {
    "text": "the value is zero then we want to return",
    "start": "744360",
    "end": "746360"
  },
  {
    "text": "early whilst providing an error back to",
    "start": "746360",
    "end": "748160"
  },
  {
    "text": "the client this error expects to wrap a",
    "start": "748160",
    "end": "750279"
  },
  {
    "text": "type of tonic status which is used to",
    "start": "750279",
    "end": "752360"
  },
  {
    "text": "represent the various status codes you",
    "start": "752360",
    "end": "754199"
  },
  {
    "text": "can return with grpc the applicable",
    "start": "754199",
    "end": "756920"
  },
  {
    "text": "status code in this case is invalid",
    "start": "756920",
    "end": "758920"
  },
  {
    "text": "argument which we can generate using the",
    "start": "758920",
    "end": "760959"
  },
  {
    "text": "following function this function also",
    "start": "760959",
    "end": "762959"
  },
  {
    "text": "expects a string which will be passed",
    "start": "762959",
    "end": "764560"
  },
  {
    "text": "down to the client as an error message",
    "start": "764560",
    "end": "766639"
  },
  {
    "text": "now if we run this code and send up",
    "start": "766639",
    "end": "768360"
  },
  {
    "text": "another request to divide by zero",
    "start": "768360",
    "end": "770120"
  },
  {
    "text": "instead of our application panicking we",
    "start": "770120",
    "end": "771920"
  },
  {
    "text": "receive a response with the invalid",
    "start": "771920",
    "end": "773639"
  },
  {
    "text": "argument status code and a message",
    "start": "773639",
    "end": "775639"
  },
  {
    "text": "telling us we can't divide by zero when",
    "start": "775639",
    "end": "777880"
  },
  {
    "text": "it comes to building service in Rust",
    "start": "777880",
    "end": "779800"
  },
  {
    "start": "778000",
    "end": "909000"
  },
  {
    "text": "State can sometimes be a little tricky",
    "start": "779800",
    "end": "781920"
  },
  {
    "text": "to handle in the case of tonic however",
    "start": "781920",
    "end": "784120"
  },
  {
    "text": "it's yet again rather simple let's add",
    "start": "784120",
    "end": "786440"
  },
  {
    "text": "State into our service by implementing a",
    "start": "786440",
    "end": "788680"
  },
  {
    "text": "request counter which will track the",
    "start": "788680",
    "end": "790519"
  },
  {
    "text": "number of requests made to our",
    "start": "790519",
    "end": "792160"
  },
  {
    "text": "calculator service to do so we first",
    "start": "792160",
    "end": "794519"
  },
  {
    "text": "need to Define our state type this type",
    "start": "794519",
    "end": "797040"
  },
  {
    "text": "is an unsigned 64-bit integer wrapped in",
    "start": "797040",
    "end": "799720"
  },
  {
    "text": "a Tokyo sync read write lock which in",
    "start": "799720",
    "end": "802040"
  },
  {
    "text": "turn is wrapped by an STD sync Arc this",
    "start": "802040",
    "end": "804880"
  },
  {
    "text": "provides us a thread safe value which",
    "start": "804880",
    "end": "806680"
  },
  {
    "text": "we're able to access and mutate ins",
    "start": "806680",
    "end": "808800"
  },
  {
    "text": "inside of our services methods next",
    "start": "808800",
    "end": "810920"
  },
  {
    "text": "let's add an instance of this state type",
    "start": "810920",
    "end": "812839"
  },
  {
    "text": "into our calculator service then we'll",
    "start": "812839",
    "end": "815000"
  },
  {
    "text": "add a new method in order to increment",
    "start": "815000",
    "end": "816800"
  },
  {
    "text": "this counter in a thread safe manner I'm",
    "start": "816800",
    "end": "818839"
  },
  {
    "text": "also going to add a print statement here",
    "start": "818839",
    "end": "820480"
  },
  {
    "text": "in order to visually see the counter",
    "start": "820480",
    "end": "822320"
  },
  {
    "text": "incrementing All That Remains is to call",
    "start": "822320",
    "end": "824440"
  },
  {
    "text": "this function in both the add and divide",
    "start": "824440",
    "end": "826279"
  },
  {
    "text": "methods of our calculator service with",
    "start": "826279",
    "end": "828600"
  },
  {
    "text": "that our counter is now incrementing",
    "start": "828600",
    "end": "830360"
  },
  {
    "text": "whenever we send a request to the",
    "start": "830360",
    "end": "832000"
  },
  {
    "text": "service however in a real world",
    "start": "832000",
    "end": "833720"
  },
  {
    "text": "application you probably want to have",
    "start": "833720",
    "end": "835320"
  },
  {
    "text": "another method to obtain this using grpc",
    "start": "835320",
    "end": "838199"
  },
  {
    "text": "to do this let's create a new service",
    "start": "838199",
    "end": "839759"
  },
  {
    "text": "called admin in our protuff definition",
    "start": "839759",
    "end": "842079"
  },
  {
    "text": "inside of this service let's add a new",
    "start": "842079",
    "end": "843680"
  },
  {
    "text": "RPC method called get request count and",
    "start": "843680",
    "end": "846240"
  },
  {
    "text": "then Define our request and response",
    "start": "846240",
    "end": "847680"
  },
  {
    "text": "messages as follows with that our",
    "start": "847680",
    "end": "849639"
  },
  {
    "text": "protuff is yet again ready to go without",
    "start": "849639",
    "end": "851839"
  },
  {
    "text": "us needing to compile anything by hand",
    "start": "851839",
    "end": "854040"
  },
  {
    "text": "if we jump on over to our main. RS file",
    "start": "854040",
    "end": "856199"
  },
  {
    "text": "we can start to implement this Service",
    "start": "856199",
    "end": "858160"
  },
  {
    "text": "First add in the following use",
    "start": "858160",
    "end": "859639"
  },
  {
    "text": "declaration for both the admin trait and",
    "start": "859639",
    "end": "861720"
  },
  {
    "text": "admin server next Define a new struct",
    "start": "861720",
    "end": "864160"
  },
  {
    "text": "called admin service which will contain",
    "start": "864160",
    "end": "866000"
  },
  {
    "text": "a property of our state then we can",
    "start": "866000",
    "end": "868199"
  },
  {
    "text": "begin implementing the admin trait for",
    "start": "868199",
    "end": "870480"
  },
  {
    "text": "the implementation of the get request",
    "start": "870480",
    "end": "872240"
  },
  {
    "text": "method first obtain the count from the",
    "start": "872240",
    "end": "874120"
  },
  {
    "text": "state using a readlock followed by",
    "start": "874120",
    "end": "876120"
  },
  {
    "text": "returning it as a counter response",
    "start": "876120",
    "end": "877720"
  },
  {
    "text": "message to our client next we can create",
    "start": "877720",
    "end": "880120"
  },
  {
    "text": "an instance of this service and then add",
    "start": "880120",
    "end": "882000"
  },
  {
    "text": "it to our grpc server the final thing we",
    "start": "882000",
    "end": "884839"
  },
  {
    "text": "need to do is to make sure both our",
    "start": "884839",
    "end": "886560"
  },
  {
    "text": "calculator and admin service are",
    "start": "886560",
    "end": "888320"
  },
  {
    "text": "operating of the same instance of a",
    "start": "888320",
    "end": "890519"
  },
  {
    "text": "shared state to do this let's create a",
    "start": "890519",
    "end": "892800"
  },
  {
    "text": "new instance of the state in our main",
    "start": "892800",
    "end": "894639"
  },
  {
    "text": "function and then provide an instance of",
    "start": "894639",
    "end": "896519"
  },
  {
    "text": "each service using the Clone method now",
    "start": "896519",
    "end": "898959"
  },
  {
    "text": "when we run our code we're able to pel",
    "start": "898959",
    "end": "900759"
  },
  {
    "text": "out the request count whenever we want",
    "start": "900759",
    "end": "902720"
  },
  {
    "text": "using the get request count method of",
    "start": "902720",
    "end": "904560"
  },
  {
    "text": "the admin service with that we've",
    "start": "904560",
    "end": "906360"
  },
  {
    "text": "managed to add state to our grpc server",
    "start": "906360",
    "end": "909279"
  },
  {
    "start": "909000",
    "end": "1009000"
  },
  {
    "text": "the next feature of tonic we're going to",
    "start": "909279",
    "end": "910880"
  },
  {
    "text": "look at are interceptors which allow you",
    "start": "910880",
    "end": "912759"
  },
  {
    "text": "to add simple middleware to both your",
    "start": "912759",
    "end": "914720"
  },
  {
    "text": "services and client implementations to",
    "start": "914720",
    "end": "917360"
  },
  {
    "text": "demonstrate this we're going to add a",
    "start": "917360",
    "end": "919040"
  },
  {
    "text": "very simple Interceptor to our admin",
    "start": "919040",
    "end": "921040"
  },
  {
    "text": "service in order to check authentication",
    "start": "921040",
    "end": "923279"
  },
  {
    "text": "in the requests headers to do so let's",
    "start": "923279",
    "end": "925560"
  },
  {
    "text": "first add in the following use",
    "start": "925560",
    "end": "926880"
  },
  {
    "text": "declarations to make our code a little",
    "start": "926880",
    "end": "928399"
  },
  {
    "text": "more concise then we need to create our",
    "start": "928399",
    "end": "930800"
  },
  {
    "text": "Interceptor function which has the",
    "start": "930800",
    "end": "932480"
  },
  {
    "text": "following interface inside of this",
    "start": "932480",
    "end": "934360"
  },
  {
    "text": "function let's define our expected token",
    "start": "934360",
    "end": "936440"
  },
  {
    "text": "type and then pull out the authorization",
    "start": "936440",
    "end": "938160"
  },
  {
    "text": "token from the requests metadata if it",
    "start": "938160",
    "end": "940560"
  },
  {
    "text": "exists we'll then compare it to our",
    "start": "940560",
    "end": "942480"
  },
  {
    "text": "token and return an okay with our",
    "start": "942480",
    "end": "944199"
  },
  {
    "text": "request if they both match this will",
    "start": "944199",
    "end": "946120"
  },
  {
    "text": "enable our request to proceed to the",
    "start": "946120",
    "end": "947800"
  },
  {
    "text": "service if the request does not contain",
    "start": "947800",
    "end": "949920"
  },
  {
    "text": "any authorization metadata or the token",
    "start": "949920",
    "end": "952040"
  },
  {
    "text": "check fails then will return an error",
    "start": "952040",
    "end": "953959"
  },
  {
    "text": "with a tonic status instead this status",
    "start": "953959",
    "end": "956199"
  },
  {
    "text": "will be returned to the client and the",
    "start": "956199",
    "end": "957800"
  },
  {
    "text": "request will be proved prevent it from",
    "start": "957800",
    "end": "959160"
  },
  {
    "text": "continuing now to make use of this",
    "start": "959160",
    "end": "961079"
  },
  {
    "text": "Interceptor head on down to where we",
    "start": "961079",
    "end": "962800"
  },
  {
    "text": "construct our admin server and change",
    "start": "962800",
    "end": "964839"
  },
  {
    "text": "the new method to be a with Interceptor",
    "start": "964839",
    "end": "967040"
  },
  {
    "text": "method instead passing in the same admin",
    "start": "967040",
    "end": "969440"
  },
  {
    "text": "service but also passing in the",
    "start": "969440",
    "end": "971000"
  },
  {
    "text": "Interceptor as well now when we run this",
    "start": "971000",
    "end": "973120"
  },
  {
    "text": "code and attempt to send a request to",
    "start": "973120",
    "end": "974920"
  },
  {
    "text": "our admin service we'll receive back an",
    "start": "974920",
    "end": "976759"
  },
  {
    "text": "unauthenticated status code if we",
    "start": "976759",
    "end": "978639"
  },
  {
    "text": "attempt to do so without the correct",
    "start": "978639",
    "end": "980319"
  },
  {
    "text": "authorization header when we send a",
    "start": "980319",
    "end": "982199"
  },
  {
    "text": "request with the correct header then we",
    "start": "982199",
    "end": "983880"
  },
  {
    "text": "receive the expected result this is",
    "start": "983880",
    "end": "986079"
  },
  {
    "text": "pretty great but I have to say it's",
    "start": "986079",
    "end": "987759"
  },
  {
    "text": "probably one of the weakest parts of",
    "start": "987759",
    "end": "989199"
  },
  {
    "text": "tonic that I've seen unfortunately the",
    "start": "989199",
    "end": "991319"
  },
  {
    "text": "Interceptor interface does not support",
    "start": "991319",
    "end": "993160"
  },
  {
    "text": "any asynchronous operation and therefore",
    "start": "993160",
    "end": "995199"
  },
  {
    "text": "only supports very simple use cases in",
    "start": "995199",
    "end": "997680"
  },
  {
    "text": "order to use more powerful middleware",
    "start": "997680",
    "end": "999440"
  },
  {
    "text": "it's recommended to use Tower instead",
    "start": "999440",
    "end": "1001639"
  },
  {
    "text": "the documentation gives some examples on",
    "start": "1001639",
    "end": "1003600"
  },
  {
    "text": "how to do this additionally we're also",
    "start": "1003600",
    "end": "1005560"
  },
  {
    "text": "going to make use of a tower middleware",
    "start": "1005560",
    "end": "1007319"
  },
  {
    "text": "layer in our next feature the last and",
    "start": "1007319",
    "end": "1010120"
  },
  {
    "start": "1009000",
    "end": "1148000"
  },
  {
    "text": "certainly not least feature I want to",
    "start": "1010120",
    "end": "1011759"
  },
  {
    "text": "demonstrate is the ability to easily",
    "start": "1011759",
    "end": "1013759"
  },
  {
    "text": "support grpc web without the need to run",
    "start": "1013759",
    "end": "1016519"
  },
  {
    "text": "a proxy server such as Envoy to do so we",
    "start": "1016519",
    "end": "1019160"
  },
  {
    "text": "need to add another two crates to our",
    "start": "1019160",
    "end": "1021000"
  },
  {
    "text": "project tonic web and Tower HTTP make",
    "start": "1021000",
    "end": "1023800"
  },
  {
    "text": "sure to use the same version as I am and",
    "start": "1023800",
    "end": "1025880"
  },
  {
    "text": "to enable the cuse feature for the tower",
    "start": "1025880",
    "end": "1027918"
  },
  {
    "text": "HTTP crate then heading over to the main",
    "start": "1027919",
    "end": "1030558"
  },
  {
    "text": "function in our main. RS file add in the",
    "start": "1030559",
    "end": "1033000"
  },
  {
    "text": "following line to enable http1 support",
    "start": "1033000",
    "end": "1035400"
  },
  {
    "text": "on our tonic server next we need to",
    "start": "1035400",
    "end": "1037558"
  },
  {
    "text": "enable CES for our web app to",
    "start": "1037559",
    "end": "1039120"
  },
  {
    "text": "communicate with our grpc server to do",
    "start": "1039120",
    "end": "1041600"
  },
  {
    "text": "so let's add in the cuse middleware from",
    "start": "1041600",
    "end": "1043720"
  },
  {
    "text": "the tower HTTP crate as a layer for our",
    "start": "1043720",
    "end": "1046120"
  },
  {
    "text": "server using the following code this",
    "start": "1046120",
    "end": "1048079"
  },
  {
    "text": "line enables a permissive configuration",
    "start": "1048079",
    "end": "1050000"
  },
  {
    "text": "for Cores which is fine for us to",
    "start": "1050000",
    "end": "1051720"
  },
  {
    "text": "develop with but in a production",
    "start": "1051720",
    "end": "1053520"
  },
  {
    "text": "environment you'll want to set a more",
    "start": "1053520",
    "end": "1055240"
  },
  {
    "text": "restrictive configuration the last",
    "start": "1055240",
    "end": "1057120"
  },
  {
    "text": "change to make is to wrap our calculator",
    "start": "1057120",
    "end": "1059039"
  },
  {
    "text": "service in the enable function of the",
    "start": "1059039",
    "end": "1060799"
  },
  {
    "text": "tonic web package with that we're now",
    "start": "1060799",
    "end": "1063240"
  },
  {
    "text": "able to connect to our service using",
    "start": "1063240",
    "end": "1064840"
  },
  {
    "text": "grpc web in order to demonstrate this",
    "start": "1064840",
    "end": "1067440"
  },
  {
    "text": "I've created a front-end web project you",
    "start": "1067440",
    "end": "1069240"
  },
  {
    "text": "can use to test this out to use it first",
    "start": "1069240",
    "end": "1071640"
  },
  {
    "text": "clone it down onto your system then run",
    "start": "1071640",
    "end": "1073559"
  },
  {
    "text": "the mpm install and mpm runev commands",
    "start": "1073559",
    "end": "1076640"
  },
  {
    "text": "you can then access this web app on",
    "start": "1076640",
    "end": "1078120"
  },
  {
    "text": "local host 5173 if everything is set up",
    "start": "1078120",
    "end": "1081200"
  },
  {
    "text": "correctly you can then enter numbers in",
    "start": "1081200",
    "end": "1082840"
  },
  {
    "text": "the two input fields and then press the",
    "start": "1082840",
    "end": "1084919"
  },
  {
    "text": "add button to send a request to our",
    "start": "1084919",
    "end": "1086640"
  },
  {
    "text": "server which updates the result with the",
    "start": "1086640",
    "end": "1088960"
  },
  {
    "text": "response all of this is done using",
    "start": "1088960",
    "end": "1090760"
  },
  {
    "text": "protuff and grpc honestly this feature",
    "start": "1090760",
    "end": "1093640"
  },
  {
    "text": "is perhaps the most stupidly simple way",
    "start": "1093640",
    "end": "1095559"
  },
  {
    "text": "that I've seen grpc web be implemented",
    "start": "1095559",
    "end": "1098280"
  },
  {
    "text": "if you check out the documentation for",
    "start": "1098280",
    "end": "1099880"
  },
  {
    "text": "grpc web they give you instructions on",
    "start": "1099880",
    "end": "1102080"
  },
  {
    "text": "how to set it up for use with Envoy and",
    "start": "1102080",
    "end": "1104640"
  },
  {
    "text": "yeah there's nothing simple about this",
    "start": "1104640",
    "end": "1106720"
  },
  {
    "text": "especially when compared to the three",
    "start": "1106720",
    "end": "1108120"
  },
  {
    "text": "line it took us with that being said",
    "start": "1108120",
    "end": "1110480"
  },
  {
    "text": "there's still a couple of improvements",
    "start": "1110480",
    "end": "1112120"
  },
  {
    "text": "I'd love to see come to Tonic with the",
    "start": "1112120",
    "end": "1114159"
  },
  {
    "text": "most notable one being async",
    "start": "1114159",
    "end": "1115799"
  },
  {
    "text": "interceptors during my research I did",
    "start": "1115799",
    "end": "1118120"
  },
  {
    "text": "find this project which does provide an",
    "start": "1118120",
    "end": "1120200"
  },
  {
    "text": "implementation however I didn't find it",
    "start": "1120200",
    "end": "1122400"
  },
  {
    "text": "perfect and I'd still love to see a",
    "start": "1122400",
    "end": "1123880"
  },
  {
    "text": "version come to the framework itself",
    "start": "1123880",
    "end": "1126200"
  },
  {
    "text": "even without this however I'm still",
    "start": "1126200",
    "end": "1128080"
  },
  {
    "text": "rather impressed by Tonic and it makes",
    "start": "1128080",
    "end": "1130240"
  },
  {
    "text": "setting up a grpc service stupidly",
    "start": "1130240",
    "end": "1132720"
  },
  {
    "text": "simple still I'd love to know your",
    "start": "1132720",
    "end": "1134600"
  },
  {
    "text": "thoughts is tonic something you're",
    "start": "1134600",
    "end": "1136240"
  },
  {
    "text": "interested in trying or are you still",
    "start": "1136240",
    "end": "1137720"
  },
  {
    "text": "playing around with grpc yourself let me",
    "start": "1137720",
    "end": "1140120"
  },
  {
    "text": "know in the comments down below",
    "start": "1140120",
    "end": "1141799"
  },
  {
    "text": "otherwise a big thank you for watching",
    "start": "1141799",
    "end": "1143520"
  },
  {
    "text": "and I'll see you on the next",
    "start": "1143520",
    "end": "1146159"
  },
  {
    "text": "one",
    "start": "1146159",
    "end": "1149159"
  }
]