[
  {
    "text": "throughout my time as a software",
    "start": "160",
    "end": "1719"
  },
  {
    "text": "developer I've typed on a number of",
    "start": "1719",
    "end": "3719"
  },
  {
    "text": "different keyboards each of them",
    "start": "3719",
    "end": "5400"
  },
  {
    "text": "different in their own unique way one",
    "start": "5400",
    "end": "7759"
  },
  {
    "text": "thing that most of these keyboards have",
    "start": "7759",
    "end": "9360"
  },
  {
    "text": "in common however is caps loock which",
    "start": "9360",
    "end": "12000"
  },
  {
    "text": "almost always ends up being one of my",
    "start": "12000",
    "end": "13920"
  },
  {
    "text": "most used keys this wasn't always the",
    "start": "13920",
    "end": "16480"
  },
  {
    "text": "case however in fact I think that the",
    "start": "16480",
    "end": "18600"
  },
  {
    "text": "default caps lock key found on most",
    "start": "18600",
    "end": "20480"
  },
  {
    "text": "keyboards is perhaps the worst key ever",
    "start": "20480",
    "end": "23160"
  },
  {
    "text": "made let me explain why the first reason",
    "start": "23160",
    "end": "26760"
  },
  {
    "text": "why I think the capslock key is the",
    "start": "26760",
    "end": "28359"
  },
  {
    "text": "worst is the fact that it's redundant",
    "start": "28359",
    "end": "30920"
  },
  {
    "text": "when it comes to typing out uppercase",
    "start": "30920",
    "end": "32480"
  },
  {
    "text": "letters the same behavior can be",
    "start": "32480",
    "end": "34280"
  },
  {
    "text": "achieved by using the shift modifier",
    "start": "34280",
    "end": "36719"
  },
  {
    "text": "which provides a couple of benefits over",
    "start": "36719",
    "end": "38600"
  },
  {
    "text": "using caps lock for starters the caps",
    "start": "38600",
    "end": "41239"
  },
  {
    "text": "lock function doesn't work on either the",
    "start": "41239",
    "end": "42840"
  },
  {
    "text": "number or symbol Keys each of these",
    "start": "42840",
    "end": "45120"
  },
  {
    "text": "require the use of the shift modifier in",
    "start": "45120",
    "end": "47160"
  },
  {
    "text": "order to print out their secondary codes",
    "start": "47160",
    "end": "49640"
  },
  {
    "text": "additionally because the shift key needs",
    "start": "49640",
    "end": "51360"
  },
  {
    "text": "to be pressed in conjunction with",
    "start": "51360",
    "end": "52920"
  },
  {
    "text": "another key it provides real-time",
    "start": "52920",
    "end": "54800"
  },
  {
    "text": "physical feedback that the modifier is",
    "start": "54800",
    "end": "56879"
  },
  {
    "text": "active this is in contrast to the",
    "start": "56879",
    "end": "59039"
  },
  {
    "text": "capslock key which either enables or",
    "start": "59039",
    "end": "61399"
  },
  {
    "text": "disables its modifier through the use of",
    "start": "61399",
    "end": "63480"
  },
  {
    "text": "a single key press because of this",
    "start": "63480",
    "end": "65640"
  },
  {
    "text": "toggling Behavior it can sometimes be",
    "start": "65640",
    "end": "68280"
  },
  {
    "text": "difficult to know whether or not the",
    "start": "68280",
    "end": "69520"
  },
  {
    "text": "caps lock key is enabled especially when",
    "start": "69520",
    "end": "71759"
  },
  {
    "text": "the keystrokes aren't displayed such as",
    "start": "71759",
    "end": "74000"
  },
  {
    "text": "when entering a password or when using",
    "start": "74000",
    "end": "76159"
  },
  {
    "text": "Vim motions some keyboards do show a",
    "start": "76159",
    "end": "78799"
  },
  {
    "text": "caps lock indicator however in order to",
    "start": "78799",
    "end": "81200"
  },
  {
    "text": "see if this is lit up you have to look",
    "start": "81200",
    "end": "83079"
  },
  {
    "text": "at the keyboard itself which ironically",
    "start": "83079",
    "end": "86119"
  },
  {
    "text": "is one of the things you're taught not",
    "start": "86119",
    "end": "87479"
  },
  {
    "text": "to do when learning to touch type now to",
    "start": "87479",
    "end": "90439"
  },
  {
    "text": "be fair some operating systems such as",
    "start": "90439",
    "end": "92600"
  },
  {
    "text": "Windows and Mac OS will display an",
    "start": "92600",
    "end": "94520"
  },
  {
    "text": "indicator when caps lock is enabled but",
    "start": "94520",
    "end": "96680"
  },
  {
    "text": "it doesn't appear for every application",
    "start": "96680",
    "end": "98880"
  },
  {
    "text": "especially not the ones that I use",
    "start": "98880",
    "end": "100840"
  },
  {
    "text": "additionally there's no built-in",
    "start": "100840",
    "end": "102079"
  },
  {
    "text": "solution when it comes to Linux although",
    "start": "102079",
    "end": "104280"
  },
  {
    "text": "there are a couple of shell extensions",
    "start": "104280",
    "end": "106040"
  },
  {
    "text": "out there however personally I haven't",
    "start": "106040",
    "end": "108320"
  },
  {
    "text": "found these to be the best ultimately",
    "start": "108320",
    "end": "110320"
  },
  {
    "text": "for myself this makes onscreen",
    "start": "110320",
    "end": "112000"
  },
  {
    "text": "indicators unreliable which means that",
    "start": "112000",
    "end": "114280"
  },
  {
    "text": "whenever caps lock is accidentally",
    "start": "114280",
    "end": "116039"
  },
  {
    "text": "activated it's pretty much guaranteed to",
    "start": "116039",
    "end": "118119"
  },
  {
    "text": "interrupt my workflow at least until I",
    "start": "118119",
    "end": "120280"
  },
  {
    "text": "figured out what's happened in fact",
    "start": "120280",
    "end": "122119"
  },
  {
    "text": "because of where the caps lock key is",
    "start": "122119",
    "end": "123479"
  },
  {
    "text": "placed accidental activations are pretty",
    "start": "123479",
    "end": "125840"
  },
  {
    "text": "common place this positioning is",
    "start": "125840",
    "end": "128080"
  },
  {
    "text": "actually another issue I have with caps",
    "start": "128080",
    "end": "130039"
  },
  {
    "text": "lock as it's located on the home row",
    "start": "130039",
    "end": "132040"
  },
  {
    "text": "next to the a key when it comes to",
    "start": "132040",
    "end": "134040"
  },
  {
    "text": "keyboard layouts this is Prime real",
    "start": "134040",
    "end": "135920"
  },
  {
    "text": "estate especially when you consider how",
    "start": "135920",
    "end": "138040"
  },
  {
    "text": "infrequently caps lock is used in fact",
    "start": "138040",
    "end": "140680"
  },
  {
    "text": "if we compare the position of the caps",
    "start": "140680",
    "end": "142319"
  },
  {
    "text": "lock key to the position of the return",
    "start": "142319",
    "end": "143959"
  },
  {
    "text": "key which is used far more often we can",
    "start": "143959",
    "end": "146680"
  },
  {
    "text": "see that the caps lock key is actually",
    "start": "146680",
    "end": "148560"
  },
  {
    "text": "better placed sit only one key away from",
    "start": "148560",
    "end": "151200"
  },
  {
    "text": "reach whereas the return key is two so",
    "start": "151200",
    "end": "154440"
  },
  {
    "text": "how did the worst keyboard key ever end",
    "start": "154440",
    "end": "156640"
  },
  {
    "text": "up becoming one of my most useful ones",
    "start": "156640",
    "end": "159319"
  },
  {
    "text": "well it All Began back in 2016 back when",
    "start": "159319",
    "end": "162280"
  },
  {
    "text": "I was a Vim user who also happened to",
    "start": "162280",
    "end": "164200"
  },
  {
    "text": "use Apple laptops at the end of that",
    "start": "164200",
    "end": "166640"
  },
  {
    "text": "year Apple released a new version of its",
    "start": "166640",
    "end": "168680"
  },
  {
    "text": "MacBook lineup the 2016 MacBook Pro",
    "start": "168680",
    "end": "172159"
  },
  {
    "text": "which came with the infamous touch bar",
    "start": "172159",
    "end": "174840"
  },
  {
    "text": "for some reason the company that I had",
    "start": "174840",
    "end": "176760"
  },
  {
    "text": "previously thought made the best laptops",
    "start": "176760",
    "end": "178800"
  },
  {
    "text": "in the world had decided that Pro users",
    "start": "178800",
    "end": "180840"
  },
  {
    "text": "would prefer to use emojis instead of",
    "start": "180840",
    "end": "182920"
  },
  {
    "text": "physical function keys whilst this was",
    "start": "182920",
    "end": "185599"
  },
  {
    "text": "bad enough in itself they also did",
    "start": "185599",
    "end": "188120"
  },
  {
    "text": "something even more egregious they",
    "start": "188120",
    "end": "190560"
  },
  {
    "text": "removed the physical Escape key as a Vim",
    "start": "190560",
    "end": "193599"
  },
  {
    "text": "user with a Macbook this was pretty",
    "start": "193599",
    "end": "195920"
  },
  {
    "text": "devastating the lack of physical",
    "start": "195920",
    "end": "197799"
  },
  {
    "text": "feedback from pressing the Escape key",
    "start": "197799",
    "end": "199480"
  },
  {
    "text": "made Vim pretty much unusable if you're",
    "start": "199480",
    "end": "201920"
  },
  {
    "text": "unaware when it comes to Vim the Escape",
    "start": "201920",
    "end": "204080"
  },
  {
    "text": "key is used to switch from insert mode",
    "start": "204080",
    "end": "206599"
  },
  {
    "text": "which is the mode where you're inserting",
    "start": "206599",
    "end": "208280"
  },
  {
    "text": "text into normal mode which is the mode",
    "start": "208280",
    "end": "210760"
  },
  {
    "text": "you mainly use for navigation this makes",
    "start": "210760",
    "end": "213159"
  },
  {
    "text": "the Escape key pretty important if you",
    "start": "213159",
    "end": "215080"
  },
  {
    "text": "happen to use Vim so I had to adapt or",
    "start": "215080",
    "end": "218599"
  },
  {
    "text": "heaven forbid use VSS code fortunately I",
    "start": "218599",
    "end": "221599"
  },
  {
    "text": "didn't have to take any extreme steps as",
    "start": "221599",
    "end": "224080"
  },
  {
    "text": "Mac OS provides a workaround through the",
    "start": "224080",
    "end": "226159"
  },
  {
    "text": "modifier keys of the settings app this",
    "start": "226159",
    "end": "228720"
  },
  {
    "text": "setting allows you to rebind the caps",
    "start": "228720",
    "end": "230680"
  },
  {
    "text": "lock key into a different modifier and",
    "start": "230680",
    "end": "233200"
  },
  {
    "text": "so I decided to rebind it to be my",
    "start": "233200",
    "end": "235200"
  },
  {
    "text": "missing Escape key this change not only",
    "start": "235200",
    "end": "237799"
  },
  {
    "text": "solved my initial issue but it so",
    "start": "237799",
    "end": "240079"
  },
  {
    "text": "improved my workflow as the Escape key",
    "start": "240079",
    "end": "242439"
  },
  {
    "text": "was now in a much better position for my",
    "start": "242439",
    "end": "244319"
  },
  {
    "text": "fingers to tap this got me thinking what",
    "start": "244319",
    "end": "247480"
  },
  {
    "text": "else could I use the Caps loock key for",
    "start": "247480",
    "end": "250159"
  },
  {
    "text": "so I decided to do some research and in",
    "start": "250159",
    "end": "252680"
  },
  {
    "text": "doing so I came across the modt behavior",
    "start": "252680",
    "end": "256079"
  },
  {
    "text": "this is where a key has different",
    "start": "256079",
    "end": "257639"
  },
  {
    "text": "behaviors depending on whether you tap",
    "start": "257639",
    "end": "259440"
  },
  {
    "text": "it or hold it for a period of time this",
    "start": "259440",
    "end": "262360"
  },
  {
    "text": "felt pretty perfect as I could continue",
    "start": "262360",
    "end": "264600"
  },
  {
    "text": "using the tap behavior for the Escape",
    "start": "264600",
    "end": "266360"
  },
  {
    "text": "key whilst using the hold Behavior to",
    "start": "266360",
    "end": "268400"
  },
  {
    "text": "act as left control by doing so it makes",
    "start": "268400",
    "end": "271199"
  },
  {
    "text": "the control modifier much easier for me",
    "start": "271199",
    "end": "273080"
  },
  {
    "text": "to reach and given how often I use the",
    "start": "273080",
    "end": "275280"
  },
  {
    "text": "control key both in neovim and the",
    "start": "275280",
    "end": "277120"
  },
  {
    "text": "terminal having this setup makes me much",
    "start": "277120",
    "end": "279280"
  },
  {
    "text": "more efficient overall this Behavior",
    "start": "279280",
    "end": "281680"
  },
  {
    "text": "makes caps loock one of my most useful",
    "start": "281680",
    "end": "283800"
  },
  {
    "text": "keys so much so that I now set it up on",
    "start": "283800",
    "end": "286440"
  },
  {
    "text": "every keyboard that I use but you may be",
    "start": "286440",
    "end": "289160"
  },
  {
    "text": "wondering how I do so well there's a",
    "start": "289160",
    "end": "291400"
  },
  {
    "text": "number of different ways you can do this",
    "start": "291400",
    "end": "292880"
  },
  {
    "text": "depending on the keyboard that you're",
    "start": "292880",
    "end": "294400"
  },
  {
    "text": "using take for example the Kyron V10 Max",
    "start": "294400",
    "end": "298160"
  },
  {
    "text": "which I have a review on coming out very",
    "start": "298160",
    "end": "300160"
  },
  {
    "text": "soon one of the big perks of this",
    "start": "300160",
    "end": "301960"
  },
  {
    "text": "keyboard is that it uses the qmk",
    "start": "301960",
    "end": "303880"
  },
  {
    "text": "firmware under the hood this makes it",
    "start": "303880",
    "end": "306000"
  },
  {
    "text": "incredibly easy to modify the",
    "start": "306000",
    "end": "307520"
  },
  {
    "text": "keybindings of the keyboard and the",
    "start": "307520",
    "end": "309759"
  },
  {
    "text": "documentation gives good examples of how",
    "start": "309759",
    "end": "311720"
  },
  {
    "text": "to do this for the modt behavior however",
    "start": "311720",
    "end": "314440"
  },
  {
    "text": "what about keyboards that you can't",
    "start": "314440",
    "end": "315800"
  },
  {
    "text": "change the firmware on such as with a",
    "start": "315800",
    "end": "318319"
  },
  {
    "text": "laptop in this case there are software",
    "start": "318319",
    "end": "320680"
  },
  {
    "text": "options available with different ones",
    "start": "320680",
    "end": "322639"
  },
  {
    "text": "depending on which operating system that",
    "start": "322639",
    "end": "324280"
  },
  {
    "text": "you're using when it comes to Mac OS my",
    "start": "324280",
    "end": "326639"
  },
  {
    "text": "preferred app has typically been",
    "start": "326639",
    "end": "328160"
  },
  {
    "text": "carabina Elements which has a number of",
    "start": "328160",
    "end": "330639"
  },
  {
    "text": "different community implementations of",
    "start": "330639",
    "end": "332560"
  },
  {
    "text": "this capslock key Behavior I've put a",
    "start": "332560",
    "end": "334840"
  },
  {
    "text": "link to one that I used to use in the",
    "start": "334840",
    "end": "336560"
  },
  {
    "text": "description down below when it comes to",
    "start": "336560",
    "end": "338680"
  },
  {
    "text": "Linux the tool I used to use was caps to",
    "start": "338680",
    "end": "341000"
  },
  {
    "text": "escape which is a plugin for a larger",
    "start": "341000",
    "end": "343360"
  },
  {
    "text": "interception tools package this is",
    "start": "343360",
    "end": "345680"
  },
  {
    "text": "typically available in most package",
    "start": "345680",
    "end": "347440"
  },
  {
    "text": "managers and was always simple to",
    "start": "347440",
    "end": "349280"
  },
  {
    "text": "install and enable recently however I've",
    "start": "349280",
    "end": "351960"
  },
  {
    "text": "added more custom key bindings ones I'll",
    "start": "351960",
    "end": "354360"
  },
  {
    "text": "talk about in another video because of",
    "start": "354360",
    "end": "356360"
  },
  {
    "text": "this I now use a tool called canata",
    "start": "356360",
    "end": "359280"
  },
  {
    "text": "which is is a crossplatform software",
    "start": "359280",
    "end": "361120"
  },
  {
    "text": "remapper written in Rust by the way to",
    "start": "361120",
    "end": "363800"
  },
  {
    "text": "install canet you can either use your",
    "start": "363800",
    "end": "365600"
  },
  {
    "text": "operating systems package manager or",
    "start": "365600",
    "end": "367599"
  },
  {
    "text": "through the use of cargo using the",
    "start": "367599",
    "end": "369160"
  },
  {
    "text": "following command in my case I mostly",
    "start": "369160",
    "end": "371560"
  },
  {
    "text": "use canet with NYX and Nyx OS however",
    "start": "371560",
    "end": "374400"
  },
  {
    "text": "let me show you how to set up the caps",
    "start": "374400",
    "end": "375880"
  },
  {
    "text": "lock Behavior using a standard",
    "start": "375880",
    "end": "377440"
  },
  {
    "text": "configuration file to do so first create",
    "start": "377440",
    "end": "379840"
  },
  {
    "text": "a new file called config kbd canet uses",
    "start": "379840",
    "end": "383360"
  },
  {
    "text": "a list like syntax for its configuration",
    "start": "383360",
    "end": "385919"
  },
  {
    "text": "and so I can set the file type as",
    "start": "385919",
    "end": "387599"
  },
  {
    "text": "follows in order to get syntax",
    "start": "387599",
    "end": "389160"
  },
  {
    "text": "highlighted in order to begin our",
    "start": "389160",
    "end": "390919"
  },
  {
    "text": "configuration the first thing we need to",
    "start": "390919",
    "end": "392639"
  },
  {
    "text": "do is Define which Keys we want caneta",
    "start": "392639",
    "end": "394720"
  },
  {
    "text": "to overwrite this is done by using the",
    "start": "394720",
    "end": "397080"
  },
  {
    "text": "def Source function which takes a list",
    "start": "397080",
    "end": "399160"
  },
  {
    "text": "of keys that we want to remap in our",
    "start": "399160",
    "end": "401479"
  },
  {
    "text": "case this is just the caps lock key",
    "start": "401479",
    "end": "403440"
  },
  {
    "text": "which is defined as caps when it comes",
    "start": "403440",
    "end": "405639"
  },
  {
    "text": "to remapping our keys the Caps key is",
    "start": "405639",
    "end": "407720"
  },
  {
    "text": "now defined at index Zer when we",
    "start": "407720",
    "end": "409720"
  },
  {
    "text": "eventually call the def layer function",
    "start": "409720",
    "end": "411960"
  },
  {
    "text": "next we need to Define our custom",
    "start": "411960",
    "end": "413639"
  },
  {
    "text": "Behavior which is our modt behavior of",
    "start": "413639",
    "end": "416080"
  },
  {
    "text": "control and Escape in can you can either",
    "start": "416080",
    "end": "418599"
  },
  {
    "text": "do this directly in inside of your de",
    "start": "418599",
    "end": "420240"
  },
  {
    "text": "layer Coe or you can do it by first",
    "start": "420240",
    "end": "422360"
  },
  {
    "text": "mapping the behavior to an alias using",
    "start": "422360",
    "end": "424479"
  },
  {
    "text": "the deaf Alias function let's use it to",
    "start": "424479",
    "end": "426800"
  },
  {
    "text": "create an alias called Escape control",
    "start": "426800",
    "end": "429080"
  },
  {
    "text": "which will have an Associated action of",
    "start": "429080",
    "end": "431080"
  },
  {
    "text": "tap hold the tap hold behavior is",
    "start": "431080",
    "end": "433360"
  },
  {
    "text": "canet's version of mod tap and requires",
    "start": "433360",
    "end": "435759"
  },
  {
    "text": "four different values for its",
    "start": "435759",
    "end": "436960"
  },
  {
    "text": "configuration the first two parameters",
    "start": "436960",
    "end": "439000"
  },
  {
    "text": "of this Behavior are the tap timeout and",
    "start": "439000",
    "end": "440960"
  },
  {
    "text": "the hold timeout both of these in",
    "start": "440960",
    "end": "443000"
  },
  {
    "text": "milliseconds the tap timeout is the",
    "start": "443000",
    "end": "445280"
  },
  {
    "text": "number of milliseconds within which a",
    "start": "445280",
    "end": "447160"
  },
  {
    "text": "rapid press release press of a key will",
    "start": "447160",
    "end": "449199"
  },
  {
    "text": "result in the tap action being held",
    "start": "449199",
    "end": "451319"
  },
  {
    "text": "instead of the hold action activating",
    "start": "451319",
    "end": "453520"
  },
  {
    "text": "this can enable you to still use the key",
    "start": "453520",
    "end": "455120"
  },
  {
    "text": "for key repeats if you need to although",
    "start": "455120",
    "end": "457160"
  },
  {
    "text": "this functionality isn't really used",
    "start": "457160",
    "end": "458840"
  },
  {
    "text": "when it comes to the Escape key the",
    "start": "458840",
    "end": "460960"
  },
  {
    "text": "second of these values is the hold",
    "start": "460960",
    "end": "462879"
  },
  {
    "text": "timeout which is the number of",
    "start": "462879",
    "end": "464759"
  },
  {
    "text": "milliseconds it would take for the hold",
    "start": "464759",
    "end": "466400"
  },
  {
    "text": "action to be activated in my case I like",
    "start": "466400",
    "end": "468800"
  },
  {
    "text": "to set both of these values to be 100",
    "start": "468800",
    "end": "470560"
  },
  {
    "text": "milliseconds which feels pretty good for",
    "start": "470560",
    "end": "472400"
  },
  {
    "text": "the caps lock key the next parameter is",
    "start": "472400",
    "end": "474879"
  },
  {
    "text": "the tap action which in our case we want",
    "start": "474879",
    "end": "477199"
  },
  {
    "text": "to set to be the Escape key the the last",
    "start": "477199",
    "end": "480000"
  },
  {
    "text": "remaining parameter is the hold action",
    "start": "480000",
    "end": "482199"
  },
  {
    "text": "which we want to set to be left control",
    "start": "482199",
    "end": "484680"
  },
  {
    "text": "with that our Escape control Alias is",
    "start": "484680",
    "end": "486639"
  },
  {
    "text": "now defined and we can use it within the",
    "start": "486639",
    "end": "488720"
  },
  {
    "text": "def layer function to map it to the caps",
    "start": "488720",
    "end": "490879"
  },
  {
    "text": "lock key to do so we can call the def",
    "start": "490879",
    "end": "492960"
  },
  {
    "text": "layer function with the name that we",
    "start": "492960",
    "end": "494440"
  },
  {
    "text": "want to give this layer in my case I",
    "start": "494440",
    "end": "496560"
  },
  {
    "text": "like to set this to be base after the",
    "start": "496560",
    "end": "498599"
  },
  {
    "text": "layer name we then Define the mappings",
    "start": "498599",
    "end": "500639"
  },
  {
    "text": "we want to give to our keys in the same",
    "start": "500639",
    "end": "502680"
  },
  {
    "text": "order that we defined when we called def",
    "start": "502680",
    "end": "504599"
  },
  {
    "text": "Source in our case we only defined the",
    "start": "504599",
    "end": "506759"
  },
  {
    "text": "single key of caps lock so all we need",
    "start": "506759",
    "end": "509039"
  },
  {
    "text": "to do is pass in our Escape control",
    "start": "509039",
    "end": "511039"
  },
  {
    "text": "Alias with that our configuration is now",
    "start": "511039",
    "end": "513399"
  },
  {
    "text": "defined and we can use it with canet to",
    "start": "513399",
    "end": "515279"
  },
  {
    "text": "remap our caps lock key to do so all we",
    "start": "515279",
    "end": "517880"
  },
  {
    "text": "have to do is call the canet binary",
    "start": "517880",
    "end": "519880"
  },
  {
    "text": "passing in the config using the- C flag",
    "start": "519880",
    "end": "522880"
  },
  {
    "text": "additionally we also need to use this",
    "start": "522880",
    "end": "524399"
  },
  {
    "text": "with pseudo although in Linux you can",
    "start": "524399",
    "end": "526120"
  },
  {
    "text": "prevent this requirement by making sure",
    "start": "526120",
    "end": "527839"
  },
  {
    "text": "to add the user to the correct groups",
    "start": "527839",
    "end": "530160"
  },
  {
    "text": "with can running we can see that our",
    "start": "530160",
    "end": "531880"
  },
  {
    "text": "keyboard is now sending the correct",
    "start": "531880",
    "end": "533640"
  },
  {
    "text": "codes depending on whether we hold or",
    "start": "533640",
    "end": "535480"
  },
  {
    "text": "tap the caps lock key that wraps up the",
    "start": "535480",
    "end": "537959"
  },
  {
    "text": "basic canit implementation which we can",
    "start": "537959",
    "end": "540360"
  },
  {
    "text": "also use on both Mac OS and windows as",
    "start": "540360",
    "end": "543000"
  },
  {
    "text": "well one thing to be aware of however is",
    "start": "543000",
    "end": "545120"
  },
  {
    "text": "that on Mac OS canet will overwrite the",
    "start": "545120",
    "end": "547200"
  },
  {
    "text": "function row keys this means you'll need",
    "start": "547200",
    "end": "549519"
  },
  {
    "text": "to either explicitly set them in your",
    "start": "549519",
    "end": "551360"
  },
  {
    "text": "canor config or instead use carabina",
    "start": "551360",
    "end": "553800"
  },
  {
    "text": "Elements which does this by default if",
    "start": "553800",
    "end": "556320"
  },
  {
    "text": "you want to still use caneta there's a",
    "start": "556320",
    "end": "558000"
  },
  {
    "text": "GitHub issue that can show you how to",
    "start": "558000",
    "end": "559440"
  },
  {
    "text": "set up the function row mapping and I",
    "start": "559440",
    "end": "561480"
  },
  {
    "text": "have a repo with further documentation",
    "start": "561480",
    "end": "563480"
  },
  {
    "text": "linked down below additionally if you",
    "start": "563480",
    "end": "565440"
  },
  {
    "text": "want canet to start up whenever you run",
    "start": "565440",
    "end": "567279"
  },
  {
    "text": "your machine then you'll need to add",
    "start": "567279",
    "end": "568839"
  },
  {
    "text": "this into your os's system service again",
    "start": "568839",
    "end": "571680"
  },
  {
    "text": "the repo down below will have some",
    "start": "571680",
    "end": "573279"
  },
  {
    "text": "instructions on how to achieve this as I",
    "start": "573279",
    "end": "575560"
  },
  {
    "text": "mentioned before my preferred way of",
    "start": "575560",
    "end": "577040"
  },
  {
    "text": "using canit is using the Nyx package",
    "start": "577040",
    "end": "579079"
  },
  {
    "text": "manager which not only handles setting",
    "start": "579079",
    "end": "580959"
  },
  {
    "text": "it up as a service but also allows me to",
    "start": "580959",
    "end": "583000"
  },
  {
    "text": "share this configuration across multiple",
    "start": "583000",
    "end": "584880"
  },
  {
    "text": "machines this comes in handy as my canet",
    "start": "584880",
    "end": "587519"
  },
  {
    "text": "configuration also has support for home",
    "start": "587519",
    "end": "589519"
  },
  {
    "text": "row mods which really improves my",
    "start": "589519",
    "end": "591399"
  },
  {
    "text": "productivity when it comes to working on",
    "start": "591399",
    "end": "593120"
  },
  {
    "text": "a laptop however that's going to be a",
    "start": "593120",
    "end": "595440"
  },
  {
    "text": "video for another time",
    "start": "595440",
    "end": "599640"
  }
]