[
  {
    "start": "0",
    "end": "73000"
  },
  {
    "text": "I have a question for you on the screen",
    "start": "60",
    "end": "2760"
  },
  {
    "text": "is an app it's nothing fancy just a",
    "start": "2760",
    "end": "5100"
  },
  {
    "text": "Lambda function that expects some data",
    "start": "5100",
    "end": "6720"
  },
  {
    "text": "from an sqs queue which you would then",
    "start": "6720",
    "end": "8580"
  },
  {
    "text": "write to an S3 bucket",
    "start": "8580",
    "end": "10500"
  },
  {
    "text": "my question to you is how would you",
    "start": "10500",
    "end": "12719"
  },
  {
    "text": "deploy this",
    "start": "12719",
    "end": "14219"
  },
  {
    "text": "a simple answer is to log on to AWS",
    "start": "14219",
    "end": "16740"
  },
  {
    "text": "navigate the Sea of acronyms until you",
    "start": "16740",
    "end": "19140"
  },
  {
    "text": "find the services you want click a few",
    "start": "19140",
    "end": "20640"
  },
  {
    "text": "buttons to configure and deploy each",
    "start": "20640",
    "end": "22080"
  },
  {
    "text": "service upload an artifact of the code",
    "start": "22080",
    "end": "24119"
  },
  {
    "text": "configure the environment variables the",
    "start": "24119",
    "end": "26100"
  },
  {
    "text": "sqs trigger and IM access tested a",
    "start": "26100",
    "end": "28740"
  },
  {
    "text": "couple of times and you're good it's not",
    "start": "28740",
    "end": "31199"
  },
  {
    "text": "a bad answer at all it's a little point",
    "start": "31199",
    "end": "33239"
  },
  {
    "text": "and click heavy for my tastes but it",
    "start": "33239",
    "end": "34980"
  },
  {
    "text": "gets the job done",
    "start": "34980",
    "end": "36239"
  },
  {
    "text": "however there is a potential problem",
    "start": "36239",
    "end": "39059"
  },
  {
    "text": "for example let's say you just managed",
    "start": "39059",
    "end": "41460"
  },
  {
    "text": "to complete the previous steps you're",
    "start": "41460",
    "end": "43920"
  },
  {
    "text": "ready to relax take an early lunch and",
    "start": "43920",
    "end": "46140"
  },
  {
    "text": "then suddenly I drop you a slack message",
    "start": "46140",
    "end": "48180"
  },
  {
    "text": "with another version that I'd like you",
    "start": "48180",
    "end": "50160"
  },
  {
    "text": "to deploy",
    "start": "50160",
    "end": "51539"
  },
  {
    "text": "at this point you'll probably realize",
    "start": "51539",
    "end": "53399"
  },
  {
    "text": "that I'm just going to keep pushing you",
    "start": "53399",
    "end": "54719"
  },
  {
    "text": "work so as the smart developer that you",
    "start": "54719",
    "end": "57420"
  },
  {
    "text": "are you are going to want to start",
    "start": "57420",
    "end": "58920"
  },
  {
    "text": "automating some of this",
    "start": "58920",
    "end": "60600"
  },
  {
    "text": "you can write this yourself using either",
    "start": "60600",
    "end": "62579"
  },
  {
    "text": "the AWS API or the AWS CLI or even some",
    "start": "62579",
    "end": "65700"
  },
  {
    "text": "of the sdks",
    "start": "65700",
    "end": "67140"
  },
  {
    "text": "however there is another approach one",
    "start": "67140",
    "end": "69479"
  },
  {
    "text": "that has forever changed the way that I",
    "start": "69479",
    "end": "71280"
  },
  {
    "text": "deploy code",
    "start": "71280",
    "end": "72720"
  },
  {
    "text": "you could use a tool called terraform",
    "start": "72720",
    "end": "74780"
  },
  {
    "start": "73000",
    "end": "213000"
  },
  {
    "text": "terraform is an infrastructure as code",
    "start": "74780",
    "end": "77100"
  },
  {
    "text": "tool that lets you build change and",
    "start": "77100",
    "end": "78720"
  },
  {
    "text": "version Cloud resources safely and",
    "start": "78720",
    "end": "80340"
  },
  {
    "text": "efficiently terraform isn't the only",
    "start": "80340",
    "end": "82619"
  },
  {
    "text": "tool that provides the ability to do",
    "start": "82619",
    "end": "84299"
  },
  {
    "text": "infrastructure as code but it's probably",
    "start": "84299",
    "end": "86159"
  },
  {
    "text": "the most ubiquitous so we're going to",
    "start": "86159",
    "end": "88560"
  },
  {
    "text": "focus on it in this video but I will be",
    "start": "88560",
    "end": "90420"
  },
  {
    "text": "doing videos on the other tooling out",
    "start": "90420",
    "end": "92040"
  },
  {
    "text": "there",
    "start": "92040",
    "end": "92759"
  },
  {
    "text": "so what is infrastructure as code",
    "start": "92759",
    "end": "94820"
  },
  {
    "text": "infrastructure is code or IAC is the",
    "start": "94820",
    "end": "98159"
  },
  {
    "text": "idea that you can use code to Define",
    "start": "98159",
    "end": "99720"
  },
  {
    "text": "your infrastructure in a declarative",
    "start": "99720",
    "end": "101400"
  },
  {
    "text": "manner but what does declarative mean",
    "start": "101400",
    "end": "103820"
  },
  {
    "text": "well instead of writing code to perform",
    "start": "103820",
    "end": "106140"
  },
  {
    "text": "iterative or procedural actions based on",
    "start": "106140",
    "end": "108659"
  },
  {
    "text": "the current state of your environment",
    "start": "108659",
    "end": "109979"
  },
  {
    "text": "you instead describe what the expected",
    "start": "109979",
    "end": "112259"
  },
  {
    "text": "state of your environment should look",
    "start": "112259",
    "end": "113520"
  },
  {
    "text": "like and terraform will perform the",
    "start": "113520",
    "end": "115320"
  },
  {
    "text": "necessary changes in order to achieve it",
    "start": "115320",
    "end": "117960"
  },
  {
    "text": "this means your code defines only the",
    "start": "117960",
    "end": "120119"
  },
  {
    "text": "relevant information about your system",
    "start": "120119",
    "end": "121500"
  },
  {
    "text": "rather than defining control flow such",
    "start": "121500",
    "end": "123540"
  },
  {
    "text": "as state reconciliation or error",
    "start": "123540",
    "end": "125399"
  },
  {
    "text": "handling as the infrastructure of a",
    "start": "125399",
    "end": "127500"
  },
  {
    "text": "system becomes more complex this",
    "start": "127500",
    "end": "128940"
  },
  {
    "text": "declarative manner helps to keep the",
    "start": "128940",
    "end": "130440"
  },
  {
    "text": "definition concise and understandable",
    "start": "130440",
    "end": "132620"
  },
  {
    "text": "the second benefit that ISE brings is",
    "start": "132620",
    "end": "135480"
  },
  {
    "text": "that it provides a deterministic and",
    "start": "135480",
    "end": "137160"
  },
  {
    "text": "repeatable method for managing",
    "start": "137160",
    "end": "138540"
  },
  {
    "text": "infrastructure this means that in theory",
    "start": "138540",
    "end": "141180"
  },
  {
    "text": "tearing down an entire environment and",
    "start": "141180",
    "end": "143340"
  },
  {
    "text": "rebuilding it is possible in just two",
    "start": "143340",
    "end": "145379"
  },
  {
    "text": "steps but uh please don't do this in",
    "start": "145379",
    "end": "147660"
  },
  {
    "text": "production as there are some caveats",
    "start": "147660",
    "end": "149459"
  },
  {
    "text": "around this especially concerning data",
    "start": "149459",
    "end": "151560"
  },
  {
    "text": "the third benefit I think is worth",
    "start": "151560",
    "end": "153780"
  },
  {
    "text": "mentioning is that it allows your",
    "start": "153780",
    "end": "155520"
  },
  {
    "text": "infrastructure changes to be version",
    "start": "155520",
    "end": "156840"
  },
  {
    "text": "controlled by checking in your code into",
    "start": "156840",
    "end": "159300"
  },
  {
    "text": "a Version Control System such as git you",
    "start": "159300",
    "end": "161400"
  },
  {
    "text": "get all of the benefits that brings such",
    "start": "161400",
    "end": "163260"
  },
  {
    "text": "as being able to have your IAC reviewed",
    "start": "163260",
    "end": "165000"
  },
  {
    "text": "by other developers and having a log of",
    "start": "165000",
    "end": "166860"
  },
  {
    "text": "changes that have been made to your",
    "start": "166860",
    "end": "168239"
  },
  {
    "text": "environment",
    "start": "168239",
    "end": "169200"
  },
  {
    "text": "you're also able to share your",
    "start": "169200",
    "end": "170700"
  },
  {
    "text": "infrastructure with others like you",
    "start": "170700",
    "end": "171959"
  },
  {
    "text": "would code",
    "start": "171959",
    "end": "173099"
  },
  {
    "text": "perhaps even more powerfully you can",
    "start": "173099",
    "end": "174959"
  },
  {
    "text": "also apply automation for example rather",
    "start": "174959",
    "end": "177900"
  },
  {
    "text": "than having to manually deploy any",
    "start": "177900",
    "end": "179580"
  },
  {
    "text": "changes I make to my Lambda function",
    "start": "179580",
    "end": "181140"
  },
  {
    "text": "each time I make them I can instead just",
    "start": "181140",
    "end": "183180"
  },
  {
    "text": "set up a continuous deployment pipeline",
    "start": "183180",
    "end": "184860"
  },
  {
    "text": "to apply my changes whenever I make a",
    "start": "184860",
    "end": "186660"
  },
  {
    "text": "commit to my main branch by doing this",
    "start": "186660",
    "end": "188879"
  },
  {
    "text": "it reduces the time and effort required",
    "start": "188879",
    "end": "190860"
  },
  {
    "text": "from code being written to it being",
    "start": "190860",
    "end": "192599"
  },
  {
    "text": "deployed",
    "start": "192599",
    "end": "193620"
  },
  {
    "text": "okay so hopefully I've done a good job",
    "start": "193620",
    "end": "195599"
  },
  {
    "text": "of explaining the value of",
    "start": "195599",
    "end": "196980"
  },
  {
    "text": "infrastructure as code and you're",
    "start": "196980",
    "end": "198420"
  },
  {
    "text": "feeling inspired to give it a try if not",
    "start": "198420",
    "end": "200819"
  },
  {
    "text": "then it's a good job no one is",
    "start": "200819",
    "end": "202560"
  },
  {
    "text": "sponsoring this video",
    "start": "202560",
    "end": "203819"
  },
  {
    "text": "either way let's actually write some",
    "start": "203819",
    "end": "205560"
  },
  {
    "text": "terraform to gain a better understanding",
    "start": "205560",
    "end": "207000"
  },
  {
    "text": "of how it all works remember the code I",
    "start": "207000",
    "end": "209280"
  },
  {
    "text": "asked you to mentally deploy earlier",
    "start": "209280",
    "end": "210599"
  },
  {
    "text": "well let's deploy it using terraform",
    "start": "210599",
    "end": "213060"
  },
  {
    "start": "213000",
    "end": "340000"
  },
  {
    "text": "the first thing we're going to want to",
    "start": "213060",
    "end": "214319"
  },
  {
    "text": "do is to install terraform",
    "start": "214319",
    "end": "216239"
  },
  {
    "text": "I actually recommend using a tool called",
    "start": "216239",
    "end": "218580"
  },
  {
    "text": "tfnf which allows us to manage different",
    "start": "218580",
    "end": "220860"
  },
  {
    "text": "versions of terraform on Mac you can do",
    "start": "220860",
    "end": "223379"
  },
  {
    "text": "so using Brew install TFM and on Linux",
    "start": "223379",
    "end": "226620"
  },
  {
    "text": "whatever your distro uses I'm using Arch",
    "start": "226620",
    "end": "229080"
  },
  {
    "text": "by the way so I'll install using yay",
    "start": "229080",
    "end": "232140"
  },
  {
    "text": "with tfns installed go ahead and install",
    "start": "232140",
    "end": "234900"
  },
  {
    "text": "the same terraform version I am which is",
    "start": "234900",
    "end": "237319"
  },
  {
    "text": "1.4.6 you can try a more recent version",
    "start": "237319",
    "end": "240299"
  },
  {
    "text": "if you like but your mileage may vary",
    "start": "240299",
    "end": "242879"
  },
  {
    "text": "with the necessary software installed",
    "start": "242879",
    "end": "244799"
  },
  {
    "text": "you'll also need to have your AWS",
    "start": "244799",
    "end": "246540"
  },
  {
    "text": "credentials set up and for this you'll",
    "start": "246540",
    "end": "248760"
  },
  {
    "text": "need an AWS account if you're unsure how",
    "start": "248760",
    "end": "251099"
  },
  {
    "text": "to obtain your credentials you can get",
    "start": "251099",
    "end": "252599"
  },
  {
    "text": "them by heading over to the I am section",
    "start": "252599",
    "end": "254640"
  },
  {
    "text": "of AWS and pulling them from there I",
    "start": "254640",
    "end": "257639"
  },
  {
    "text": "recommend creating a new programmatic",
    "start": "257639",
    "end": "259260"
  },
  {
    "text": "access only user as it's good hygiene to",
    "start": "259260",
    "end": "261540"
  },
  {
    "text": "not have your root users credentials",
    "start": "261540",
    "end": "263160"
  },
  {
    "text": "exposed we could actually create our",
    "start": "263160",
    "end": "265919"
  },
  {
    "text": "user using IAC but it leaves us with a",
    "start": "265919",
    "end": "268080"
  },
  {
    "text": "bit of a chicken and egg situation",
    "start": "268080",
    "end": "269460"
  },
  {
    "text": "either way it's not a huge issue",
    "start": "269460",
    "end": "271139"
  },
  {
    "text": "terraform does allow us to import",
    "start": "271139",
    "end": "272639"
  },
  {
    "text": "existing resources into the state so",
    "start": "272639",
    "end": "275460"
  },
  {
    "text": "let's create that resource manually at",
    "start": "275460",
    "end": "277199"
  },
  {
    "text": "this time for this user I've attached",
    "start": "277199",
    "end": "279240"
  },
  {
    "text": "them the administrator access policy",
    "start": "279240",
    "end": "281280"
  },
  {
    "text": "which gives them admin access across the",
    "start": "281280",
    "end": "283199"
  },
  {
    "text": "entire account this isn't the best",
    "start": "283199",
    "end": "285360"
  },
  {
    "text": "practice and in production you'd really",
    "start": "285360",
    "end": "286979"
  },
  {
    "text": "want to restrict this with the user",
    "start": "286979",
    "end": "289259"
  },
  {
    "text": "created click on their name and head on",
    "start": "289259",
    "end": "291000"
  },
  {
    "text": "over to the security credentials tab",
    "start": "291000",
    "end": "292860"
  },
  {
    "text": "here we'll generate access credentials",
    "start": "292860",
    "end": "295020"
  },
  {
    "text": "that we'll be able to use with terraform",
    "start": "295020",
    "end": "297300"
  },
  {
    "text": "go through the necessary steps until you",
    "start": "297300",
    "end": "299400"
  },
  {
    "text": "end up on the same screen that I am here",
    "start": "299400",
    "end": "301620"
  },
  {
    "text": "you'll have your access key ID and",
    "start": "301620",
    "end": "303300"
  },
  {
    "text": "Secret",
    "start": "303300",
    "end": "304380"
  },
  {
    "text": "you'll want to copy both of these values",
    "start": "304380",
    "end": "306060"
  },
  {
    "text": "into a credentials file for AWS this",
    "start": "306060",
    "end": "308820"
  },
  {
    "text": "credentials file is stored at home dot",
    "start": "308820",
    "end": "311460"
  },
  {
    "text": "AWS slash credentials with the following",
    "start": "311460",
    "end": "315120"
  },
  {
    "text": "format as I have on screen",
    "start": "315120",
    "end": "317100"
  },
  {
    "text": "make sure to actually use the secret key",
    "start": "317100",
    "end": "319259"
  },
  {
    "text": "value instead of the placeholder that",
    "start": "319259",
    "end": "320820"
  },
  {
    "text": "I'm using just a quick security",
    "start": "320820",
    "end": "322740"
  },
  {
    "text": "disclaimer you'll want to delete this",
    "start": "322740",
    "end": "324600"
  },
  {
    "text": "user at the end of this tutorial or at",
    "start": "324600",
    "end": "326699"
  },
  {
    "text": "the very least adjust the security",
    "start": "326699",
    "end": "327900"
  },
  {
    "text": "permissions to no longer have admin",
    "start": "327900",
    "end": "329880"
  },
  {
    "text": "access using full admin access is a bad",
    "start": "329880",
    "end": "332759"
  },
  {
    "text": "practice but it's just to keep this",
    "start": "332759",
    "end": "334740"
  },
  {
    "text": "tutorial as simple as possible",
    "start": "334740",
    "end": "336960"
  },
  {
    "text": "okay with all of that done we're now",
    "start": "336960",
    "end": "339000"
  },
  {
    "text": "ready to write some code the first thing",
    "start": "339000",
    "end": "340740"
  },
  {
    "start": "340000",
    "end": "538000"
  },
  {
    "text": "we're going to do is clone the project",
    "start": "340740",
    "end": "342120"
  },
  {
    "text": "files into a new directory you can do",
    "start": "342120",
    "end": "344340"
  },
  {
    "text": "this yourself to follow along and the",
    "start": "344340",
    "end": "345900"
  },
  {
    "text": "command is in the description with the",
    "start": "345900",
    "end": "347940"
  },
  {
    "text": "project downloaded open it up in your",
    "start": "347940",
    "end": "350100"
  },
  {
    "text": "favorite text editor and jump on over to",
    "start": "350100",
    "end": "352680"
  },
  {
    "text": "the infrastructure directory here is",
    "start": "352680",
    "end": "355020"
  },
  {
    "text": "where the magic is going to happen",
    "start": "355020",
    "end": "356340"
  },
  {
    "text": "inside of the infrastructure directory",
    "start": "356340",
    "end": "358199"
  },
  {
    "text": "is where all of our IAC will live you'll",
    "start": "358199",
    "end": "361139"
  },
  {
    "text": "notice we have a number of files in here",
    "start": "361139",
    "end": "362639"
  },
  {
    "text": "with the extension.tf which is the file",
    "start": "362639",
    "end": "365039"
  },
  {
    "text": "extension for terraform the three files",
    "start": "365039",
    "end": "367320"
  },
  {
    "text": "we have are terraform.tf which has our",
    "start": "367320",
    "end": "369840"
  },
  {
    "text": "terraform provider configuration",
    "start": "369840",
    "end": "371840"
  },
  {
    "text": "variables.tf which defines any terraform",
    "start": "371840",
    "end": "374340"
  },
  {
    "text": "variables we're using and main.tf which",
    "start": "374340",
    "end": "376979"
  },
  {
    "text": "is where our resource definitions will",
    "start": "376979",
    "end": "378600"
  },
  {
    "text": "live if you open up the terraform.tf",
    "start": "378600",
    "end": "381000"
  },
  {
    "text": "file you can see the providers that",
    "start": "381000",
    "end": "382380"
  },
  {
    "text": "we're using you can think of providers",
    "start": "382380",
    "end": "384000"
  },
  {
    "text": "as being similar to packages or",
    "start": "384000",
    "end": "385620"
  },
  {
    "text": "dependencies and in this file we're",
    "start": "385620",
    "end": "387419"
  },
  {
    "text": "defining which dependencies we're using",
    "start": "387419",
    "end": "389039"
  },
  {
    "text": "and their versions these dependencies",
    "start": "389039",
    "end": "391020"
  },
  {
    "text": "are hashicorps AWS which is the official",
    "start": "391020",
    "end": "393780"
  },
  {
    "text": "AWS Provider from hashicorp Azure corpse",
    "start": "393780",
    "end": "396419"
  },
  {
    "text": "random which is is a provider for",
    "start": "396419",
    "end": "397979"
  },
  {
    "text": "generating random values and hashicorp",
    "start": "397979",
    "end": "400500"
  },
  {
    "text": "archive which is a provider used for",
    "start": "400500",
    "end": "402180"
  },
  {
    "text": "managing archives of files by the way",
    "start": "402180",
    "end": "404400"
  },
  {
    "text": "hashicorp is the creator of terraform",
    "start": "404400",
    "end": "406620"
  },
  {
    "text": "these are the necessary providers we're",
    "start": "406620",
    "end": "408600"
  },
  {
    "text": "going to use in this video if you jump",
    "start": "408600",
    "end": "410460"
  },
  {
    "text": "over to the variables.tf file you'll see",
    "start": "410460",
    "end": "412860"
  },
  {
    "text": "that we have one variable defined which",
    "start": "412860",
    "end": "415020"
  },
  {
    "text": "is the AWS region that we're using as",
    "start": "415020",
    "end": "417780"
  },
  {
    "text": "I'm based in the US I'll be using U.S",
    "start": "417780",
    "end": "419940"
  },
  {
    "text": "east one region but you should change",
    "start": "419940",
    "end": "421919"
  },
  {
    "text": "this to the one that is closer to your",
    "start": "421919",
    "end": "423419"
  },
  {
    "text": "location if you like finally we can jump",
    "start": "423419",
    "end": "426060"
  },
  {
    "text": "on over to our main.tf file which is",
    "start": "426060",
    "end": "428039"
  },
  {
    "text": "where our infrastructure resources will",
    "start": "428039",
    "end": "429539"
  },
  {
    "text": "be provisioned we currently only have a",
    "start": "429539",
    "end": "431940"
  },
  {
    "text": "single resource defined at the moment",
    "start": "431940",
    "end": "433440"
  },
  {
    "text": "which is used to generate a random",
    "start": "433440",
    "end": "435660"
  },
  {
    "text": "forward name we'll use this resource",
    "start": "435660",
    "end": "437940"
  },
  {
    "text": "later on but let me show you what it",
    "start": "437940",
    "end": "439440"
  },
  {
    "text": "does if you jump over to the terminal we",
    "start": "439440",
    "end": "441780"
  },
  {
    "text": "can go ahead and create our single",
    "start": "441780",
    "end": "443220"
  },
  {
    "text": "resource first navigate to the",
    "start": "443220",
    "end": "445259"
  },
  {
    "text": "infrastructure directory and type in",
    "start": "445259",
    "end": "447000"
  },
  {
    "text": "terraform init to initialize our state",
    "start": "447000",
    "end": "449580"
  },
  {
    "text": "and download any providers once that's",
    "start": "449580",
    "end": "452039"
  },
  {
    "text": "done you can then type in terraform plan",
    "start": "452039",
    "end": "454020"
  },
  {
    "text": "which will show you the changes that",
    "start": "454020",
    "end": "455520"
  },
  {
    "text": "will occur when we apply our",
    "start": "455520",
    "end": "456599"
  },
  {
    "text": "configuration",
    "start": "456599",
    "end": "457860"
  },
  {
    "text": "these changes are derived from our",
    "start": "457860",
    "end": "459780"
  },
  {
    "text": "current state versus our expected state",
    "start": "459780",
    "end": "461819"
  },
  {
    "text": "in our case you can see that a single",
    "start": "461819",
    "end": "463680"
  },
  {
    "text": "resource of random pet dot Lambda bucket",
    "start": "463680",
    "end": "466680"
  },
  {
    "text": "name is going to be created",
    "start": "466680",
    "end": "468599"
  },
  {
    "text": "one thing to note is that terraform",
    "start": "468599",
    "end": "470220"
  },
  {
    "text": "can't arrive every change beforehand and",
    "start": "470220",
    "end": "472740"
  },
  {
    "text": "sometimes needs an apply to actually",
    "start": "472740",
    "end": "474180"
  },
  {
    "text": "resolve values this usually happens for",
    "start": "474180",
    "end": "476639"
  },
  {
    "text": "things such as IDs or in our case our",
    "start": "476639",
    "end": "478860"
  },
  {
    "text": "randomly generated name you can see this",
    "start": "478860",
    "end": "481139"
  },
  {
    "text": "defined as known after apply",
    "start": "481139",
    "end": "484199"
  },
  {
    "text": "the next command is terraform apply",
    "start": "484199",
    "end": "486180"
  },
  {
    "text": "which will create update and Destroy",
    "start": "486180",
    "end": "488280"
  },
  {
    "text": "resources in order to meet our desired",
    "start": "488280",
    "end": "489900"
  },
  {
    "text": "state from our current one basically it",
    "start": "489900",
    "end": "492419"
  },
  {
    "text": "will apply the changes we saw in our",
    "start": "492419",
    "end": "493860"
  },
  {
    "text": "plan let's go ahead and run this when",
    "start": "493860",
    "end": "496440"
  },
  {
    "text": "running apply terraform will show you",
    "start": "496440",
    "end": "498120"
  },
  {
    "text": "the changes that the apply will make if",
    "start": "498120",
    "end": "500400"
  },
  {
    "text": "everything looks good type the word yes",
    "start": "500400",
    "end": "502139"
  },
  {
    "text": "in the prompts and press enter to",
    "start": "502139",
    "end": "503879"
  },
  {
    "text": "continue we can see in the output that",
    "start": "503879",
    "end": "505800"
  },
  {
    "text": "our resource has been created if we run",
    "start": "505800",
    "end": "508020"
  },
  {
    "text": "terraform plan again we'll see that",
    "start": "508020",
    "end": "509520"
  },
  {
    "text": "there are no changes to be made that's",
    "start": "509520",
    "end": "511680"
  },
  {
    "text": "because our current terraform State",
    "start": "511680",
    "end": "513300"
  },
  {
    "text": "matches our configuration",
    "start": "513300",
    "end": "515219"
  },
  {
    "text": "about the terraform state by the way if",
    "start": "515219",
    "end": "517500"
  },
  {
    "text": "you look in the current directory you'll",
    "start": "517500",
    "end": "519120"
  },
  {
    "text": "see a terraform.tfstate file in there",
    "start": "519120",
    "end": "521339"
  },
  {
    "text": "this is where the current state is",
    "start": "521339",
    "end": "523320"
  },
  {
    "text": "stored which is unfortunately local this",
    "start": "523320",
    "end": "526320"
  },
  {
    "text": "isn't ideal for the long term as you'll",
    "start": "526320",
    "end": "528000"
  },
  {
    "text": "probably want this in a remote and",
    "start": "528000",
    "end": "529500"
  },
  {
    "text": "centralized Place one option is S3 which",
    "start": "529500",
    "end": "532260"
  },
  {
    "text": "is actually pretty easy to configure in",
    "start": "532260",
    "end": "533940"
  },
  {
    "text": "terraform but we'll save that for",
    "start": "533940",
    "end": "535620"
  },
  {
    "text": "another video",
    "start": "535620",
    "end": "536880"
  },
  {
    "text": "by the way you might be wondering what",
    "start": "536880",
    "end": "539100"
  },
  {
    "start": "538000",
    "end": "643000"
  },
  {
    "text": "random name our resource generated well",
    "start": "539100",
    "end": "541560"
  },
  {
    "text": "we can actually view this by inspecting",
    "start": "541560",
    "end": "543240"
  },
  {
    "text": "the state file if you run the following",
    "start": "543240",
    "end": "545399"
  },
  {
    "text": "command of terraform State show",
    "start": "545399",
    "end": "547580"
  },
  {
    "text": "randompet dot Lambda bucket name",
    "start": "547580",
    "end": "550260"
  },
  {
    "text": "terraform will then show you the",
    "start": "550260",
    "end": "552000"
  },
  {
    "text": "resource as it exists in the state file",
    "start": "552000",
    "end": "553800"
  },
  {
    "text": "and here you can actually see the random",
    "start": "553800",
    "end": "555720"
  },
  {
    "text": "name which in my case is positively",
    "start": "555720",
    "end": "557940"
  },
  {
    "text": "currently ablecod",
    "start": "557940",
    "end": "559680"
  },
  {
    "text": "okay so I think there is one last",
    "start": "559680",
    "end": "561540"
  },
  {
    "text": "command worth going over and that is the",
    "start": "561540",
    "end": "563880"
  },
  {
    "text": "destroy command",
    "start": "563880",
    "end": "565560"
  },
  {
    "text": "the destroy command will tear down any",
    "start": "565560",
    "end": "567779"
  },
  {
    "text": "resources in your terraform state to run",
    "start": "567779",
    "end": "570720"
  },
  {
    "text": "the destroy command you just type in",
    "start": "570720",
    "end": "572339"
  },
  {
    "text": "terraform destroy",
    "start": "572339",
    "end": "574920"
  },
  {
    "text": "after a short while terraform will show",
    "start": "574920",
    "end": "577080"
  },
  {
    "text": "you the changes that are going to be",
    "start": "577080",
    "end": "578339"
  },
  {
    "text": "made which is going to be deleting every",
    "start": "578339",
    "end": "580440"
  },
  {
    "text": "resource this is what we're expecting so",
    "start": "580440",
    "end": "583140"
  },
  {
    "text": "go ahead and type yes in the prompt",
    "start": "583140",
    "end": "585779"
  },
  {
    "text": "now if we run terraform plan again we",
    "start": "585779",
    "end": "588060"
  },
  {
    "text": "can see that we're starting from scratch",
    "start": "588060",
    "end": "590580"
  },
  {
    "text": "okay sweet so that covers the basics but",
    "start": "590580",
    "end": "592980"
  },
  {
    "text": "we really didn't create anything other",
    "start": "592980",
    "end": "594300"
  },
  {
    "text": "than a random name let's go ahead and",
    "start": "594300",
    "end": "596339"
  },
  {
    "text": "actually deploy some infrastructure",
    "start": "596339",
    "end": "598380"
  },
  {
    "text": "to help visualize what we're going to",
    "start": "598380",
    "end": "600120"
  },
  {
    "text": "deploy I've drafted up a diagram of what",
    "start": "600120",
    "end": "602100"
  },
  {
    "text": "our expected infrastructure should look",
    "start": "602100",
    "end": "603720"
  },
  {
    "text": "like here we have our message queue",
    "start": "603720",
    "end": "606240"
  },
  {
    "text": "which is going to be sqs",
    "start": "606240",
    "end": "608160"
  },
  {
    "text": "the user will send messages or data to",
    "start": "608160",
    "end": "610800"
  },
  {
    "text": "the sqsq the next component we have is",
    "start": "610800",
    "end": "613740"
  },
  {
    "text": "our Lambda function which will read",
    "start": "613740",
    "end": "615480"
  },
  {
    "text": "messages off the sqsq using an event",
    "start": "615480",
    "end": "618060"
  },
  {
    "text": "mapping",
    "start": "618060",
    "end": "619200"
  },
  {
    "text": "this Lambda will then write those",
    "start": "619200",
    "end": "620940"
  },
  {
    "text": "messages into our final component our S3",
    "start": "620940",
    "end": "623760"
  },
  {
    "text": "bucket the messages will be stored with",
    "start": "623760",
    "end": "626279"
  },
  {
    "text": "the message ID from sqs yes I know this",
    "start": "626279",
    "end": "629700"
  },
  {
    "text": "is kind of pointless but bear with me",
    "start": "629700",
    "end": "631260"
  },
  {
    "text": "this is just to help represent a",
    "start": "631260",
    "end": "633240"
  },
  {
    "text": "non-trivial app that has multiple",
    "start": "633240",
    "end": "634800"
  },
  {
    "text": "dependencies",
    "start": "634800",
    "end": "636300"
  },
  {
    "text": "so let's start our infrastructure's code",
    "start": "636300",
    "end": "638760"
  },
  {
    "text": "from the components that have the least",
    "start": "638760",
    "end": "640260"
  },
  {
    "text": "amount of dependencies one of which is",
    "start": "640260",
    "end": "642420"
  },
  {
    "text": "our S3 bucket heading back over to our",
    "start": "642420",
    "end": "644940"
  },
  {
    "start": "643000",
    "end": "725000"
  },
  {
    "text": "main.tf file let's add in the S3 bucket",
    "start": "644940",
    "end": "647940"
  },
  {
    "text": "resource we can do this by calling the",
    "start": "647940",
    "end": "649860"
  },
  {
    "text": "resource keyword followed by the",
    "start": "649860",
    "end": "651899"
  },
  {
    "text": "resource type of AWS S3 bucket the last",
    "start": "651899",
    "end": "655079"
  },
  {
    "text": "thing to add to this line is the name we",
    "start": "655079",
    "end": "656640"
  },
  {
    "text": "wish to give our resource let's go with",
    "start": "656640",
    "end": "658680"
  },
  {
    "text": "Lambda underscore bucket this name is",
    "start": "658680",
    "end": "661440"
  },
  {
    "text": "only for our terraform State and not for",
    "start": "661440",
    "end": "663540"
  },
  {
    "text": "our actual S3 bucket that's being",
    "start": "663540",
    "end": "665220"
  },
  {
    "text": "created",
    "start": "665220",
    "end": "666300"
  },
  {
    "text": "okay inside our resource block let's go",
    "start": "666300",
    "end": "668399"
  },
  {
    "text": "and add the bucket name or ID field",
    "start": "668399",
    "end": "671160"
  },
  {
    "text": "we'll set this to be the name that we",
    "start": "671160",
    "end": "672839"
  },
  {
    "text": "randomly generated which will help",
    "start": "672839",
    "end": "674640"
  },
  {
    "text": "prevent any bucket naming collisions if",
    "start": "674640",
    "end": "676440"
  },
  {
    "text": "you decide to run this yourself here is",
    "start": "676440",
    "end": "678120"
  },
  {
    "text": "where part of the magic of terraform",
    "start": "678120",
    "end": "679440"
  },
  {
    "text": "happens instead of hard coding this name",
    "start": "679440",
    "end": "681660"
  },
  {
    "text": "we're referencing the value of our",
    "start": "681660",
    "end": "683399"
  },
  {
    "text": "Lambda bucket name resource like we",
    "start": "683399",
    "end": "685200"
  },
  {
    "text": "would do in code this creates a",
    "start": "685200",
    "end": "687360"
  },
  {
    "text": "dependency graph that terraform will use",
    "start": "687360",
    "end": "689100"
  },
  {
    "text": "to determine the order in which to",
    "start": "689100",
    "end": "690720"
  },
  {
    "text": "create resources as for our S3 resource",
    "start": "690720",
    "end": "693360"
  },
  {
    "text": "we're only setting the bucket field but",
    "start": "693360",
    "end": "695399"
  },
  {
    "text": "there's many others you can set if you",
    "start": "695399",
    "end": "697380"
  },
  {
    "text": "want to know more about what Fields you",
    "start": "697380",
    "end": "698880"
  },
  {
    "text": "can configure hashicorp provides amazing",
    "start": "698880",
    "end": "700920"
  },
  {
    "text": "documentation on their providers which",
    "start": "700920",
    "end": "702839"
  },
  {
    "text": "you can view on their website heading",
    "start": "702839",
    "end": "705060"
  },
  {
    "text": "back to our terminal now let's run",
    "start": "705060",
    "end": "706500"
  },
  {
    "text": "terraform apply and inspect what's going",
    "start": "706500",
    "end": "708420"
  },
  {
    "text": "to be created everything looks as",
    "start": "708420",
    "end": "710519"
  },
  {
    "text": "expected so let's go ahead and type yes",
    "start": "710519",
    "end": "712260"
  },
  {
    "text": "in the prompt and wait for terraform to",
    "start": "712260",
    "end": "714060"
  },
  {
    "text": "do its thing once terraform is done we",
    "start": "714060",
    "end": "716220"
  },
  {
    "text": "can confirm that our bucket is created",
    "start": "716220",
    "end": "717720"
  },
  {
    "text": "both by using the AWS CLI with the AWS",
    "start": "717720",
    "end": "720839"
  },
  {
    "text": "S3 LS command or by checking the AWS",
    "start": "720839",
    "end": "724079"
  },
  {
    "text": "console",
    "start": "724079",
    "end": "725519"
  },
  {
    "start": "725000",
    "end": "785000"
  },
  {
    "text": "with this resource created we've",
    "start": "725519",
    "end": "727380"
  },
  {
    "text": "successfully deployed the first",
    "start": "727380",
    "end": "728579"
  },
  {
    "text": "component of our infrastructure the S3",
    "start": "728579",
    "end": "730620"
  },
  {
    "text": "bucket let's move on to our next",
    "start": "730620",
    "end": "732720"
  },
  {
    "text": "resource which is going to be the sqsq",
    "start": "732720",
    "end": "734720"
  },
  {
    "text": "similar to our S3 bucket let's define",
    "start": "734720",
    "end": "737459"
  },
  {
    "text": "our resource which will be an AWS sqsq",
    "start": "737459",
    "end": "739980"
  },
  {
    "text": "and we'll call it message key",
    "start": "739980",
    "end": "742320"
  },
  {
    "text": "next we'll set the name value to the",
    "start": "742320",
    "end": "744660"
  },
  {
    "text": "dreams of code IAC queue unlike our S3",
    "start": "744660",
    "end": "748260"
  },
  {
    "text": "bucket this name is account scope so we",
    "start": "748260",
    "end": "750180"
  },
  {
    "text": "shouldn't get any conflicts",
    "start": "750180",
    "end": "751740"
  },
  {
    "text": "this is all we're going to set in this",
    "start": "751740",
    "end": "753360"
  },
  {
    "text": "video but in a production system you",
    "start": "753360",
    "end": "754860"
  },
  {
    "text": "probably want to configure a few more",
    "start": "754860",
    "end": "756180"
  },
  {
    "text": "things if you want to know more about",
    "start": "756180",
    "end": "757740"
  },
  {
    "text": "configuring sqs then let me know in the",
    "start": "757740",
    "end": "759540"
  },
  {
    "text": "comments down below",
    "start": "759540",
    "end": "761160"
  },
  {
    "text": "let's go ahead and run terraform apply",
    "start": "761160",
    "end": "763139"
  },
  {
    "text": "again",
    "start": "763139",
    "end": "765380"
  },
  {
    "text": "everything looks good in the plan",
    "start": "765480",
    "end": "766800"
  },
  {
    "text": "changes so we're going to type yes",
    "start": "766800",
    "end": "769079"
  },
  {
    "text": "this might take a little while to create",
    "start": "769079",
    "end": "770760"
  },
  {
    "text": "so now is a good time to make sure",
    "start": "770760",
    "end": "772440"
  },
  {
    "text": "you're hydrated",
    "start": "772440",
    "end": "774060"
  },
  {
    "text": "once that's done we can check that our",
    "start": "774060",
    "end": "775860"
  },
  {
    "text": "sqsq exists in both the AWS CLI with the",
    "start": "775860",
    "end": "779100"
  },
  {
    "text": "AWS sqs list use command or by checking",
    "start": "779100",
    "end": "782040"
  },
  {
    "text": "the AWS console under the sqs page",
    "start": "782040",
    "end": "785639"
  },
  {
    "start": "785000",
    "end": "1027000"
  },
  {
    "text": "the final piece of the infrastructure",
    "start": "785639",
    "end": "787440"
  },
  {
    "text": "puzzle is the Lambda function which is",
    "start": "787440",
    "end": "789779"
  },
  {
    "text": "going to be the most exciting we",
    "start": "789779",
    "end": "791399"
  },
  {
    "text": "actually have a few resources we need to",
    "start": "791399",
    "end": "793019"
  },
  {
    "text": "create here the first step is to create",
    "start": "793019",
    "end": "795420"
  },
  {
    "text": "an Archive of Our binary to deploy I've",
    "start": "795420",
    "end": "798600"
  },
  {
    "text": "kept this binary in the repo but you",
    "start": "798600",
    "end": "800639"
  },
  {
    "text": "shouldn't ever blindly trust anything",
    "start": "800639",
    "end": "801959"
  },
  {
    "text": "you download on the internet I recommend",
    "start": "801959",
    "end": "804420"
  },
  {
    "text": "to rebuild the code yourself just to be",
    "start": "804420",
    "end": "806339"
  },
  {
    "text": "safe if you really do trust me and don't",
    "start": "806339",
    "end": "808560"
  },
  {
    "text": "want to bother installing go then you",
    "start": "808560",
    "end": "809940"
  },
  {
    "text": "can just skip the following steps but I",
    "start": "809940",
    "end": "811860"
  },
  {
    "text": "really advise against this",
    "start": "811860",
    "end": "813600"
  },
  {
    "text": "to build from Source make sure you have",
    "start": "813600",
    "end": "815459"
  },
  {
    "text": "at least go version 1.20 and make",
    "start": "815459",
    "end": "818160"
  },
  {
    "text": "installed on your system then head over",
    "start": "818160",
    "end": "820320"
  },
  {
    "text": "to the source directory in the project",
    "start": "820320",
    "end": "822060"
  },
  {
    "text": "here you can just run the makebill",
    "start": "822060",
    "end": "824279"
  },
  {
    "text": "command which will create the binary in",
    "start": "824279",
    "end": "825720"
  },
  {
    "text": "the directory you will need which is the",
    "start": "825720",
    "end": "827700"
  },
  {
    "text": "bin directory of the project root now we",
    "start": "827700",
    "end": "830100"
  },
  {
    "text": "can jump back over to our main.tf file",
    "start": "830100",
    "end": "832139"
  },
  {
    "text": "and use the data keyword of type archive",
    "start": "832139",
    "end": "834540"
  },
  {
    "text": "file with the name Lambda zip notice",
    "start": "834540",
    "end": "836760"
  },
  {
    "text": "that we use the data keyword instead of",
    "start": "836760",
    "end": "838260"
  },
  {
    "text": "the resource keyword the data keyword",
    "start": "838260",
    "end": "840120"
  },
  {
    "text": "defines a data source which is typically",
    "start": "840120",
    "end": "842100"
  },
  {
    "text": "something that is not managed by",
    "start": "842100",
    "end": "843540"
  },
  {
    "text": "terraform but terraform can still make a",
    "start": "843540",
    "end": "845459"
  },
  {
    "text": "reference to it",
    "start": "845459",
    "end": "846660"
  },
  {
    "text": "and this block we'll also need to add",
    "start": "846660",
    "end": "848579"
  },
  {
    "text": "the type which will be a zip and the",
    "start": "848579",
    "end": "851100"
  },
  {
    "text": "source file followed by the output path",
    "start": "851100",
    "end": "853440"
  },
  {
    "text": "now if we apply these changes we should",
    "start": "853440",
    "end": "855360"
  },
  {
    "text": "see terraform zip up our binary",
    "start": "855360",
    "end": "857639"
  },
  {
    "text": "okay so we have an Archive of Our code",
    "start": "857639",
    "end": "859560"
  },
  {
    "text": "that we can push into a Lambda function",
    "start": "859560",
    "end": "862320"
  },
  {
    "text": "to do so we first need to set up some I",
    "start": "862320",
    "end": "864600"
  },
  {
    "text": "am rolls however IAM is the identity and",
    "start": "864600",
    "end": "867360"
  },
  {
    "text": "access management service of AWS it",
    "start": "867360",
    "end": "869519"
  },
  {
    "text": "basically determines role-based access",
    "start": "869519",
    "end": "871139"
  },
  {
    "text": "management to different services within",
    "start": "871139",
    "end": "873360"
  },
  {
    "text": "the AWS ecosystem setting up IM access",
    "start": "873360",
    "end": "875880"
  },
  {
    "text": "is a little bit tedious but don't worry",
    "start": "875880",
    "end": "877500"
  },
  {
    "text": "I'll try to get through it as quick as",
    "start": "877500",
    "end": "878820"
  },
  {
    "text": "possible all of this is going to be in a",
    "start": "878820",
    "end": "880740"
  },
  {
    "text": "new file called iam.tf we basically need",
    "start": "880740",
    "end": "883800"
  },
  {
    "text": "to create a role for our Lambda to",
    "start": "883800",
    "end": "885660"
  },
  {
    "text": "assume and we need to give it",
    "start": "885660",
    "end": "886980"
  },
  {
    "text": "permissions to write objects to S3 via",
    "start": "886980",
    "end": "889199"
  },
  {
    "text": "the put object action and to both",
    "start": "889199",
    "end": "891180"
  },
  {
    "text": "consume and delete messages from our",
    "start": "891180",
    "end": "893100"
  },
  {
    "text": "sqsq",
    "start": "893100",
    "end": "894480"
  },
  {
    "text": "it will also need the basic Lambda",
    "start": "894480",
    "end": "896459"
  },
  {
    "text": "execution permissions so we can view",
    "start": "896459",
    "end": "898019"
  },
  {
    "text": "logs and metrics",
    "start": "898019",
    "end": "899820"
  },
  {
    "text": "we also need to set up a policy in our",
    "start": "899820",
    "end": "901740"
  },
  {
    "text": "S3 bucket to allow the Lambda function",
    "start": "901740",
    "end": "903480"
  },
  {
    "text": "to perform actions against it",
    "start": "903480",
    "end": "905699"
  },
  {
    "text": "if you don't want to type all of this",
    "start": "905699",
    "end": "907139"
  },
  {
    "text": "out which is understandable there's a",
    "start": "907139",
    "end": "909060"
  },
  {
    "text": "link to the IM infrastructure in the",
    "start": "909060",
    "end": "910680"
  },
  {
    "text": "description below otherwise just copy",
    "start": "910680",
    "end": "912839"
  },
  {
    "text": "what I'm putting on the screen and you",
    "start": "912839",
    "end": "914160"
  },
  {
    "text": "should be good once the file is in place",
    "start": "914160",
    "end": "916500"
  },
  {
    "text": "go ahead and apply it and you can see",
    "start": "916500",
    "end": "918180"
  },
  {
    "text": "all the resources being created",
    "start": "918180",
    "end": "921000"
  },
  {
    "text": "okay now that that's done we can move on",
    "start": "921000",
    "end": "923279"
  },
  {
    "text": "to creating our Lambda let's head back",
    "start": "923279",
    "end": "925560"
  },
  {
    "text": "to our main.tf and add in a new resource",
    "start": "925560",
    "end": "927839"
  },
  {
    "text": "type of AWS Lambda function and we'll",
    "start": "927839",
    "end": "930300"
  },
  {
    "text": "call it funky here we'll set the name of",
    "start": "930300",
    "end": "932699"
  },
  {
    "text": "the function to dreams of code IAC func",
    "start": "932699",
    "end": "935100"
  },
  {
    "text": "and then we'll set the file name we want",
    "start": "935100",
    "end": "936899"
  },
  {
    "text": "to upload to be our archive we created",
    "start": "936899",
    "end": "938880"
  },
  {
    "text": "earlier next we set the runtime which is",
    "start": "938880",
    "end": "941820"
  },
  {
    "text": "go 1.x and we'll set the Handler which",
    "start": "941820",
    "end": "945300"
  },
  {
    "text": "for a Go app is just the binary file",
    "start": "945300",
    "end": "947339"
  },
  {
    "text": "name we can then set the Lambda role to",
    "start": "947339",
    "end": "949320"
  },
  {
    "text": "be the one we just created in our I am",
    "start": "949320",
    "end": "951180"
  },
  {
    "text": "we can also set the source code hash",
    "start": "951180",
    "end": "953220"
  },
  {
    "text": "field using an inbuilt terraform",
    "start": "953220",
    "end": "954959"
  },
  {
    "text": "function finally we need to set the",
    "start": "954959",
    "end": "957120"
  },
  {
    "text": "memory size and the timeout which is in",
    "start": "957120",
    "end": "959160"
  },
  {
    "text": "seconds let's be generous here and set",
    "start": "959160",
    "end": "961260"
  },
  {
    "text": "it to 128 megabytes and a timeout of 10",
    "start": "961260",
    "end": "963779"
  },
  {
    "text": "seconds the last thing to add is any",
    "start": "963779",
    "end": "965699"
  },
  {
    "text": "environment variables if you check the",
    "start": "965699",
    "end": "968040"
  },
  {
    "text": "code you can see that we're expecting",
    "start": "968040",
    "end": "969540"
  },
  {
    "text": "the bucket name variable to be set this",
    "start": "969540",
    "end": "972300"
  },
  {
    "text": "is so the code knows which S3 bucket to",
    "start": "972300",
    "end": "974339"
  },
  {
    "text": "save the data to",
    "start": "974339",
    "end": "975720"
  },
  {
    "text": "let's go ahead and add this variable and",
    "start": "975720",
    "end": "977820"
  },
  {
    "text": "Link it to our S3 bucket resource",
    "start": "977820",
    "end": "980639"
  },
  {
    "text": "with our Lambda function added we can",
    "start": "980639",
    "end": "982680"
  },
  {
    "text": "now run terraform apply to create it",
    "start": "982680",
    "end": "985740"
  },
  {
    "text": "once the command is complete if we check",
    "start": "985740",
    "end": "987839"
  },
  {
    "text": "the AWS console we can see our Lambda",
    "start": "987839",
    "end": "989820"
  },
  {
    "text": "function has been created",
    "start": "989820",
    "end": "991680"
  },
  {
    "text": "but we're not finished yet we have one",
    "start": "991680",
    "end": "994019"
  },
  {
    "text": "last thing to do which is to assign our",
    "start": "994019",
    "end": "996540"
  },
  {
    "text": "sqsq as an event trigger for our Lambda",
    "start": "996540",
    "end": "998880"
  },
  {
    "text": "function",
    "start": "998880",
    "end": "1000199"
  },
  {
    "text": "this is pretty simple to do and requires",
    "start": "1000199",
    "end": "1002060"
  },
  {
    "text": "creating another resource of AWS Lambda",
    "start": "1002060",
    "end": "1004399"
  },
  {
    "text": "Event Source mapping and here we just",
    "start": "1004399",
    "end": "1006500"
  },
  {
    "text": "set the Event Source arm to brsqsq and",
    "start": "1006500",
    "end": "1009860"
  },
  {
    "text": "the Lambda function to be our newly",
    "start": "1009860",
    "end": "1011600"
  },
  {
    "text": "created Lambda resource",
    "start": "1011600",
    "end": "1013459"
  },
  {
    "text": "we're also going to set the batch size",
    "start": "1013459",
    "end": "1014839"
  },
  {
    "text": "to 1 otherwise we'll be waiting a whole",
    "start": "1014839",
    "end": "1016579"
  },
  {
    "text": "minute for anything to happen you",
    "start": "1016579",
    "end": "1018079"
  },
  {
    "text": "probably don't want to do this in",
    "start": "1018079",
    "end": "1019160"
  },
  {
    "text": "production however unless you have a",
    "start": "1019160",
    "end": "1020720"
  },
  {
    "text": "very good reason let's type in our",
    "start": "1020720",
    "end": "1022820"
  },
  {
    "text": "favorite command terraform apply check",
    "start": "1022820",
    "end": "1024740"
  },
  {
    "text": "the changes and type yes",
    "start": "1024740",
    "end": "1027319"
  },
  {
    "start": "1027000",
    "end": "1113000"
  },
  {
    "text": "and with that our infrastructure should",
    "start": "1027319",
    "end": "1029120"
  },
  {
    "text": "be completely deployed I'll show you how",
    "start": "1029120",
    "end": "1031400"
  },
  {
    "text": "to test these changes both using the AWS",
    "start": "1031400",
    "end": "1033740"
  },
  {
    "text": "CLI and the AWS console first we'll use",
    "start": "1033740",
    "end": "1037339"
  },
  {
    "text": "the CLI to send a message to our app via",
    "start": "1037339",
    "end": "1040280"
  },
  {
    "text": "the AWS CLI you can use the sqs send",
    "start": "1040280",
    "end": "1043160"
  },
  {
    "text": "message command make sure to adjust the",
    "start": "1043160",
    "end": "1045558"
  },
  {
    "text": "region and select the correct Q URL as",
    "start": "1045559",
    "end": "1048438"
  },
  {
    "text": "per your account if you're not sure what",
    "start": "1048439",
    "end": "1050480"
  },
  {
    "text": "your Q URL is you can run the AWS sqs",
    "start": "1050480",
    "end": "1053540"
  },
  {
    "text": "list cues command again then you want to",
    "start": "1053540",
    "end": "1056299"
  },
  {
    "text": "set the message payload which in this",
    "start": "1056299",
    "end": "1058039"
  },
  {
    "text": "case is hello YouTube",
    "start": "1058039",
    "end": "1060020"
  },
  {
    "text": "once that's completed we can check our",
    "start": "1060020",
    "end": "1061880"
  },
  {
    "text": "S3 bucket for any files using the S3 LS",
    "start": "1061880",
    "end": "1064760"
  },
  {
    "text": "command",
    "start": "1064760",
    "end": "1065780"
  },
  {
    "text": "once we see the file in there we can",
    "start": "1065780",
    "end": "1067340"
  },
  {
    "text": "download it using the s3cp command and",
    "start": "1067340",
    "end": "1070220"
  },
  {
    "text": "once that's done check the contents",
    "start": "1070220",
    "end": "1071900"
  },
  {
    "text": "using cat as we can see is the same",
    "start": "1071900",
    "end": "1074360"
  },
  {
    "text": "message payload we sent",
    "start": "1074360",
    "end": "1077179"
  },
  {
    "text": "to check using the AWS console first",
    "start": "1077179",
    "end": "1079940"
  },
  {
    "text": "navigate over to sqs and click on the",
    "start": "1079940",
    "end": "1082160"
  },
  {
    "text": "dreams of code IAC queue here you should",
    "start": "1082160",
    "end": "1084740"
  },
  {
    "text": "see a button on the top right for",
    "start": "1084740",
    "end": "1086179"
  },
  {
    "text": "sending and receiving messages click",
    "start": "1086179",
    "end": "1088460"
  },
  {
    "text": "that button and then on the next page",
    "start": "1088460",
    "end": "1090140"
  },
  {
    "text": "you should see a text field enter in",
    "start": "1090140",
    "end": "1092299"
  },
  {
    "text": "your message into this field and click",
    "start": "1092299",
    "end": "1093980"
  },
  {
    "text": "the send message button on the top right",
    "start": "1093980",
    "end": "1096380"
  },
  {
    "text": "Now navigate over to the S3 page",
    "start": "1096380",
    "end": "1100780"
  },
  {
    "text": "in this area we should see our bucket",
    "start": "1101059",
    "end": "1103039"
  },
  {
    "text": "with the dreams of code prefix click",
    "start": "1103039",
    "end": "1105260"
  },
  {
    "text": "that bucket and you should be greeted",
    "start": "1105260",
    "end": "1106520"
  },
  {
    "text": "with a single file inside download and",
    "start": "1106520",
    "end": "1109280"
  },
  {
    "text": "open the file and you should see the",
    "start": "1109280",
    "end": "1110660"
  },
  {
    "text": "payload we just sent",
    "start": "1110660",
    "end": "1113299"
  },
  {
    "start": "1113000",
    "end": "1126000"
  },
  {
    "text": "with that we've confirmed everything is",
    "start": "1113299",
    "end": "1115039"
  },
  {
    "text": "working but before we're done we better",
    "start": "1115039",
    "end": "1116900"
  },
  {
    "text": "just tidy up our resources to tidy",
    "start": "1116900",
    "end": "1119360"
  },
  {
    "text": "everything up first delete any files in",
    "start": "1119360",
    "end": "1121280"
  },
  {
    "text": "your S3 bucket and then run a terraform",
    "start": "1121280",
    "end": "1123620"
  },
  {
    "text": "destroy in your infrastructure folder",
    "start": "1123620",
    "end": "1125660"
  },
  {
    "text": "this will prevent us from incurring any",
    "start": "1125660",
    "end": "1127520"
  },
  {
    "start": "1126000",
    "end": "1152000"
  },
  {
    "text": "charges",
    "start": "1127520",
    "end": "1128600"
  },
  {
    "text": "it's also a good idea to delete the AWS",
    "start": "1128600",
    "end": "1131179"
  },
  {
    "text": "user we created for terraform you can do",
    "start": "1131179",
    "end": "1133340"
  },
  {
    "text": "this in the IM section on the AWS",
    "start": "1133340",
    "end": "1135200"
  },
  {
    "text": "website",
    "start": "1135200",
    "end": "1137000"
  },
  {
    "text": "and with that we've managed to turn the",
    "start": "1137000",
    "end": "1138860"
  },
  {
    "text": "deployment of our app into",
    "start": "1138860",
    "end": "1139820"
  },
  {
    "text": "infrastructure's code using terraform",
    "start": "1139820",
    "end": "1142160"
  },
  {
    "text": "the next time someone asks you how to",
    "start": "1142160",
    "end": "1143900"
  },
  {
    "text": "deploy something you might be able to",
    "start": "1143900",
    "end": "1145640"
  },
  {
    "text": "teach them something new I hope you",
    "start": "1145640",
    "end": "1147380"
  },
  {
    "text": "enjoyed this video and I'll see you on",
    "start": "1147380",
    "end": "1148940"
  },
  {
    "text": "the next one",
    "start": "1148940",
    "end": "1151419"
  }
]