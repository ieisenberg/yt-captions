[
  {
    "text": "as much as I like neovim I'll admit it",
    "start": "359",
    "end": "2800"
  },
  {
    "text": "can be difficult to know how to set up",
    "start": "2800",
    "end": "4359"
  },
  {
    "text": "and configure a productive environment",
    "start": "4359",
    "end": "6040"
  },
  {
    "text": "for writing code so on this video I'm",
    "start": "6040",
    "end": "8480"
  },
  {
    "text": "going to share some plugins and",
    "start": "8480",
    "end": "9920"
  },
  {
    "text": "configuration to supercharge neovim for",
    "start": "9920",
    "end": "12000"
  },
  {
    "text": "working with",
    "start": "12000",
    "end": "13200"
  },
  {
    "text": "rust by the end of this video you'll",
    "start": "13200",
    "end": "15519"
  },
  {
    "text": "have native auto code completion",
    "start": "15519",
    "end": "17840"
  },
  {
    "text": "automatic code formatting whenever you",
    "start": "17840",
    "end": "19720"
  },
  {
    "text": "save built-in debugging and a powerful",
    "start": "19720",
    "end": "22960"
  },
  {
    "text": "tool for managing versions of your cargo",
    "start": "22960",
    "end": "25119"
  },
  {
    "text": "crates for this video I'm using Envy",
    "start": "25119",
    "end": "27679"
  },
  {
    "text": "Chad as my base configuration this means",
    "start": "27679",
    "end": "30519"
  },
  {
    "text": "that all of the configuration code will",
    "start": "30519",
    "end": "31960"
  },
  {
    "text": "be written in lure and the project",
    "start": "31960",
    "end": "33920"
  },
  {
    "text": "structure will be tailored to Envy chat",
    "start": "33920",
    "end": "36480"
  },
  {
    "text": "if you're using another neovim",
    "start": "36480",
    "end": "38000"
  },
  {
    "text": "configuration such as Astro you should",
    "start": "38000",
    "end": "39879"
  },
  {
    "text": "be able to achieve the same thing with a",
    "start": "39879",
    "end": "41440"
  },
  {
    "text": "little bit of translation if you're",
    "start": "41440",
    "end": "43320"
  },
  {
    "text": "working from a base implementation",
    "start": "43320",
    "end": "45000"
  },
  {
    "text": "however I'd recommend using Envy Chad",
    "start": "45000",
    "end": "47360"
  },
  {
    "text": "fortunately I already have a video on",
    "start": "47360",
    "end": "49120"
  },
  {
    "text": "getting set up with mvy Chad which you",
    "start": "49120",
    "end": "50559"
  },
  {
    "text": "can go and watch now if you want to get",
    "start": "50559",
    "end": "52960"
  },
  {
    "text": "started make sure you're using the",
    "start": "52960",
    "end": "54680"
  },
  {
    "text": "latest version of neovim which as of the",
    "start": "54680",
    "end": "57079"
  },
  {
    "text": "time we're recording is version 9.0",
    "start": "57079",
    "end": "60160"
  },
  {
    "text": "I'm using Arch by the way so I'll",
    "start": "60160",
    "end": "61879"
  },
  {
    "text": "install it using Pac-Man you can check",
    "start": "61879",
    "end": "64119"
  },
  {
    "text": "the running version of neovim using the",
    "start": "64119",
    "end": "66360"
  },
  {
    "text": "envm D- version command to make this",
    "start": "66360",
    "end": "70119"
  },
  {
    "text": "video easier to follow I'm going to",
    "start": "70119",
    "end": "71520"
  },
  {
    "text": "start with the base installation of mvy",
    "start": "71520",
    "end": "73280"
  },
  {
    "text": "Chad to do so is as easy as cloning the",
    "start": "73280",
    "end": "75960"
  },
  {
    "text": "Envy Chad repo into our neovim",
    "start": "75960",
    "end": "77880"
  },
  {
    "text": "configuration directory now let's open",
    "start": "77880",
    "end": "80479"
  },
  {
    "text": "neovim and make sure to enter n for no",
    "start": "80479",
    "end": "83200"
  },
  {
    "text": "when it asks you if you want to install",
    "start": "83200",
    "end": "84840"
  },
  {
    "text": "the example config you then should see",
    "start": "84840",
    "end": "86960"
  },
  {
    "text": "the default plugins being installed",
    "start": "86960",
    "end": "89200"
  },
  {
    "text": "after it's done installing the base",
    "start": "89200",
    "end": "90680"
  },
  {
    "text": "packages I'm also going to set the theme",
    "start": "90680",
    "end": "92640"
  },
  {
    "text": "to kuchin cuz I'm addicted to those",
    "start": "92640",
    "end": "95040"
  },
  {
    "text": "pastel",
    "start": "95040",
    "end": "97119"
  },
  {
    "text": "colors now that we have our base",
    "start": "97119",
    "end": "99079"
  },
  {
    "text": "configuration set up the first thing",
    "start": "99079",
    "end": "100479"
  },
  {
    "text": "we're going to want to do is to config",
    "start": "100479",
    "end": "102119"
  },
  {
    "text": "an LSP server to use with rust this will",
    "start": "102119",
    "end": "104680"
  },
  {
    "text": "provide contextual aware code completion",
    "start": "104680",
    "end": "106600"
  },
  {
    "text": "and other tooling the recommended rust",
    "start": "106600",
    "end": "109000"
  },
  {
    "text": "LSP server is rust analyzer let's go",
    "start": "109000",
    "end": "111600"
  },
  {
    "text": "ahead and install it we can install this",
    "start": "111600",
    "end": "114360"
  },
  {
    "text": "using rust up if we want to which is",
    "start": "114360",
    "end": "116360"
  },
  {
    "text": "typically my preferred approach however",
    "start": "116360",
    "end": "118600"
  },
  {
    "text": "for this video we're going to inst it",
    "start": "118600",
    "end": "120240"
  },
  {
    "text": "within neovim using Mason to do so",
    "start": "120240",
    "end": "123200"
  },
  {
    "text": "navigate over to your freshly downloaded",
    "start": "123200",
    "end": "124920"
  },
  {
    "text": "neovim configuration and open it up in",
    "start": "124920",
    "end": "127159"
  },
  {
    "text": "Vim you can open up the file Tree by",
    "start": "127159",
    "end": "129239"
  },
  {
    "text": "pressing contrl and N now let's open up",
    "start": "129239",
    "end": "131760"
  },
  {
    "text": "the chat rc. lure file in our custom",
    "start": "131760",
    "end": "134480"
  },
  {
    "text": "directory if you don't have one create",
    "start": "134480",
    "end": "136400"
  },
  {
    "text": "this yourself and open it up in Vim in",
    "start": "136400",
    "end": "138640"
  },
  {
    "text": "here we'll import our custom plugins",
    "start": "138640",
    "end": "140360"
  },
  {
    "text": "file which will'll create in this",
    "start": "140360",
    "end": "141519"
  },
  {
    "text": "directory using the name plugins. L next",
    "start": "141519",
    "end": "144920"
  },
  {
    "text": "up we can open up this new file and",
    "start": "144920",
    "end": "147080"
  },
  {
    "text": "return an empty lure map inside which",
    "start": "147080",
    "end": "149160"
  },
  {
    "text": "we'll use for adding our plugin",
    "start": "149160",
    "end": "150760"
  },
  {
    "text": "information inside of this map we'll add",
    "start": "150760",
    "end": "153040"
  },
  {
    "text": "in Mason again which will extend the",
    "start": "153040",
    "end": "155239"
  },
  {
    "text": "default",
    "start": "155239",
    "end": "156519"
  },
  {
    "text": "configuration then we'll add the insure",
    "start": "156519",
    "end": "159040"
  },
  {
    "text": "installed option for Mason to add rust",
    "start": "159040",
    "end": "161560"
  },
  {
    "text": "analyzer to our",
    "start": "161560",
    "end": "163080"
  },
  {
    "text": "configuration now let's close and reopen",
    "start": "163080",
    "end": "165599"
  },
  {
    "text": "neim and then call the Mason installed",
    "start": "165599",
    "end": "168280"
  },
  {
    "text": "all command a window will pop up showing",
    "start": "168280",
    "end": "170879"
  },
  {
    "text": "rust analyzer being installed next up we",
    "start": "170879",
    "end": "173800"
  },
  {
    "text": "want to change our LSP config so that we",
    "start": "173800",
    "end": "175720"
  },
  {
    "text": "load and run rust analyzer heading back",
    "start": "175720",
    "end": "178200"
  },
  {
    "text": "over to our custom plugins. L fire let's",
    "start": "178200",
    "end": "180760"
  },
  {
    "text": "add in an override for the LSP config so",
    "start": "180760",
    "end": "182959"
  },
  {
    "text": "that we can load our custom LSP server",
    "start": "182959",
    "end": "185879"
  },
  {
    "text": "what we're doing here is specifying the",
    "start": "185879",
    "end": "187440"
  },
  {
    "text": "package name that we're overriding which",
    "start": "187440",
    "end": "189280"
  },
  {
    "text": "is the neovim LSP config package and",
    "start": "189280",
    "end": "192000"
  },
  {
    "text": "adding in a new configuration function",
    "start": "192000",
    "end": "194040"
  },
  {
    "text": "which will load the default NV Chad",
    "start": "194040",
    "end": "195799"
  },
  {
    "text": "config and our own custom LSP config",
    "start": "195799",
    "end": "198680"
  },
  {
    "text": "next let's create a config directory in",
    "start": "198680",
    "end": "200480"
  },
  {
    "text": "our custom folder and add in a file",
    "start": "200480",
    "end": "202560"
  },
  {
    "text": "called LSP config do lure in this file",
    "start": "202560",
    "end": "205720"
  },
  {
    "text": "we're going to set up rust analyzer to",
    "start": "205720",
    "end": "207680"
  },
  {
    "text": "work with neovim we'll first need to",
    "start": "207680",
    "end": "209920"
  },
  {
    "text": "import the onattach and capabilities",
    "start": "209920",
    "end": "211879"
  },
  {
    "text": "values from the Envy Chad LSP config to",
    "start": "211879",
    "end": "214480"
  },
  {
    "text": "use with our LSP servers then we'll need",
    "start": "214480",
    "end": "217360"
  },
  {
    "text": "to import the Nim LSP config I also like",
    "start": "217360",
    "end": "220599"
  },
  {
    "text": "to pull in the LSP config utilities",
    "start": "220599",
    "end": "222920"
  },
  {
    "text": "package as well now we can add rust",
    "start": "222920",
    "end": "225239"
  },
  {
    "text": "analyzer to the LSP config table and",
    "start": "225239",
    "end": "228319"
  },
  {
    "text": "using the setup function let's assign",
    "start": "228319",
    "end": "230239"
  },
  {
    "text": "the onattach and capabilities values we",
    "start": "230239",
    "end": "233120"
  },
  {
    "text": "can also constrain this LSP to only run",
    "start": "233120",
    "end": "235319"
  },
  {
    "text": "on Rust file types and to set the",
    "start": "235319",
    "end": "237480"
  },
  {
    "text": "project route for any cargo projects to",
    "start": "237480",
    "end": "239239"
  },
  {
    "text": "be where the cargo. Tomo lives",
    "start": "239239",
    "end": "241280"
  },
  {
    "text": "additionally I like to set the cargo.",
    "start": "241280",
    "end": "243239"
  },
  {
    "text": "all features value to true in the",
    "start": "243239",
    "end": "244840"
  },
  {
    "text": "configuration as this can help with",
    "start": "244840",
    "end": "246599"
  },
  {
    "text": "autocomplete on cargo crates now if I",
    "start": "246599",
    "end": "249360"
  },
  {
    "text": "open a project that has the Rand crate",
    "start": "249360",
    "end": "251159"
  },
  {
    "text": "added we can see autocomplete works as",
    "start": "251159",
    "end": "253079"
  },
  {
    "text": "expected once I type in the module",
    "start": "253079",
    "end": "255400"
  },
  {
    "text": "name one feature I really find helps to",
    "start": "255400",
    "end": "258239"
  },
  {
    "text": "speed up my rust development is to",
    "start": "258239",
    "end": "260000"
  },
  {
    "text": "enable code formatting whenever I save",
    "start": "260000",
    "end": "262040"
  },
  {
    "text": "my file this feature is provided by the",
    "start": "262040",
    "end": "264840"
  },
  {
    "text": "official rust Vim plugin to add this",
    "start": "264840",
    "end": "267720"
  },
  {
    "text": "plugin let's jump back into our custom",
    "start": "267720",
    "end": "270000"
  },
  {
    "text": "plugins lower file and add it to our",
    "start": "270000",
    "end": "272240"
  },
  {
    "text": "plugins table we'll also set this to",
    "start": "272240",
    "end": "274560"
  },
  {
    "text": "load on file type of",
    "start": "274560",
    "end": "276680"
  },
  {
    "text": "rust as well as specifying the plugin's",
    "start": "276680",
    "end": "278919"
  },
  {
    "text": "name we should add an init function to",
    "start": "278919",
    "end": "280800"
  },
  {
    "text": "the plugin configuration to run lure",
    "start": "280800",
    "end": "282720"
  },
  {
    "text": "code when the package is loaded here's",
    "start": "282720",
    "end": "284840"
  },
  {
    "text": "the line to enable rust Auto formatting",
    "start": "284840",
    "end": "286919"
  },
  {
    "text": "on Save if we jump over to another",
    "start": "286919",
    "end": "289280"
  },
  {
    "text": "project here we can see some code that",
    "start": "289280",
    "end": "290800"
  },
  {
    "text": "is poorly formatted now when I save the",
    "start": "290800",
    "end": "293199"
  },
  {
    "text": "file the code is reorganized as per rust",
    "start": "293199",
    "end": "296960"
  },
  {
    "text": "format as well as code completion and",
    "start": "296960",
    "end": "299199"
  },
  {
    "text": "Auto formatting any decent IDE also",
    "start": "299199",
    "end": "301880"
  },
  {
    "text": "provides the ability to debug code from",
    "start": "301880",
    "end": "303880"
  },
  {
    "text": "within the text editor we can achieve",
    "start": "303880",
    "end": "306360"
  },
  {
    "text": "this in Rust and neovim using another",
    "start": "306360",
    "end": "308680"
  },
  {
    "text": "plugin the first thing we need to do is",
    "start": "308680",
    "end": "310600"
  },
  {
    "text": "jump over to our custom LSP config and",
    "start": "310600",
    "end": "313320"
  },
  {
    "text": "delete our rust analyzer entry yeah",
    "start": "313320",
    "end": "316560"
  },
  {
    "text": "sorry about that but if we have both",
    "start": "316560",
    "end": "318120"
  },
  {
    "text": "configured then it'll just end up",
    "start": "318120",
    "end": "319240"
  },
  {
    "text": "causing conflicts now let's jump on over",
    "start": "319240",
    "end": "321680"
  },
  {
    "text": "to our custom plugins file and add in",
    "start": "321680",
    "end": "323840"
  },
  {
    "text": "the rust tools plugin just like the",
    "start": "323840",
    "end": "326880"
  },
  {
    "text": "others we'll set the file type for this",
    "start": "326880",
    "end": "328360"
  },
  {
    "text": "to be rust the rust tools plugin",
    "start": "328360",
    "end": "330360"
  },
  {
    "text": "provides a lot of available features for",
    "start": "330360",
    "end": "332280"
  },
  {
    "text": "working with rust so I recommend reading",
    "start": "332280",
    "end": "334039"
  },
  {
    "text": "the documentation for what else you can",
    "start": "334039",
    "end": "335680"
  },
  {
    "text": "achieve with this plugin however for",
    "start": "335680",
    "end": "337360"
  },
  {
    "text": "this video we're just going to focus on",
    "start": "337360",
    "end": "338720"
  },
  {
    "text": "debugging back in our plugins lure file",
    "start": "338720",
    "end": "341160"
  },
  {
    "text": "we're also going to want to set up some",
    "start": "341160",
    "end": "342520"
  },
  {
    "text": "custom options so let's go ahead and add",
    "start": "342520",
    "end": "344639"
  },
  {
    "text": "in a function to our Ops value for the",
    "start": "344639",
    "end": "346880"
  },
  {
    "text": "plug-in table in this function we're",
    "start": "346880",
    "end": "348759"
  },
  {
    "text": "going to return an import of some custom",
    "start": "348759",
    "end": "350919"
  },
  {
    "text": "options we're about to create let's",
    "start": "350919",
    "end": "352880"
  },
  {
    "text": "create a new file in our custom configs",
    "start": "352880",
    "end": "355000"
  },
  {
    "text": "directory for rust Tools in this file",
    "start": "355000",
    "end": "357600"
  },
  {
    "text": "we're going to set up any custom options",
    "start": "357600",
    "end": "359319"
  },
  {
    "text": "for the rust tools package especially",
    "start": "359319",
    "end": "361120"
  },
  {
    "text": "the LSP server which is just rust",
    "start": "361120",
    "end": "363520"
  },
  {
    "text": "analyzer under the hood let's go ahead",
    "start": "363520",
    "end": "365680"
  },
  {
    "text": "and import The Familiar on attached and",
    "start": "365680",
    "end": "368000"
  },
  {
    "text": "capabilities values and add them to the",
    "start": "368000",
    "end": "369599"
  },
  {
    "text": "server block of our options table",
    "start": "369599",
    "end": "372319"
  },
  {
    "text": "jumping back over to our custom plugins",
    "start": "372319",
    "end": "374080"
  },
  {
    "text": "files let's go ahead and add a config",
    "start": "374080",
    "end": "376319"
  },
  {
    "text": "function to the rust tools table where",
    "start": "376319",
    "end": "378000"
  },
  {
    "text": "we just call the setup function with the",
    "start": "378000",
    "end": "379599"
  },
  {
    "text": "newly provided options whilst setting",
    "start": "379599",
    "end": "381800"
  },
  {
    "text": "this up I kept running into an issue",
    "start": "381800",
    "end": "383520"
  },
  {
    "text": "where the default LSP config wasn't",
    "start": "383520",
    "end": "385479"
  },
  {
    "text": "loaded before the rust tools package was",
    "start": "385479",
    "end": "388039"
  },
  {
    "text": "to fix this we can add a depend of LSP",
    "start": "388039",
    "end": "390759"
  },
  {
    "text": "config to our rust tools plug-in entry",
    "start": "390759",
    "end": "393280"
  },
  {
    "text": "which will force the package manager to",
    "start": "393280",
    "end": "395039"
  },
  {
    "text": "load rust tools after LSP config has",
    "start": "395039",
    "end": "397199"
  },
  {
    "text": "been loaded now if we open up a rust",
    "start": "397199",
    "end": "399599"
  },
  {
    "text": "file we should see LSP is working as it",
    "start": "399599",
    "end": "401840"
  },
  {
    "text": "was before and with some more features",
    "start": "401840",
    "end": "403880"
  },
  {
    "text": "compared to our previous setup in order",
    "start": "403880",
    "end": "406240"
  },
  {
    "text": "for debugging to be enabled we need to",
    "start": "406240",
    "end": "408080"
  },
  {
    "text": "install another neovim plugin called the",
    "start": "408080",
    "end": "410319"
  },
  {
    "text": "neovim debug adapter protocol let's add",
    "start": "410319",
    "end": "413840"
  },
  {
    "text": "this to our custom plugins table and",
    "start": "413840",
    "end": "416080"
  },
  {
    "text": "then reinstall our packages finally all",
    "start": "416080",
    "end": "418919"
  },
  {
    "text": "we need to do is install the llddp",
    "start": "418919",
    "end": "421000"
  },
  {
    "text": "package on our system in order to debug",
    "start": "421000",
    "end": "422840"
  },
  {
    "text": "our code I'll install this using Pac-Man",
    "start": "422840",
    "end": "425759"
  },
  {
    "text": "because well you know why after",
    "start": "425759",
    "end": "428759"
  },
  {
    "text": "everything's installed we can go ahead",
    "start": "428759",
    "end": "430080"
  },
  {
    "text": "and debug our code to debug code first",
    "start": "430080",
    "end": "433039"
  },
  {
    "text": "open up a file you want to test then",
    "start": "433039",
    "end": "435319"
  },
  {
    "text": "we'll call the rust debug bles command",
    "start": "435319",
    "end": "437639"
  },
  {
    "text": "which will present a menu for our build",
    "start": "437639",
    "end": "439400"
  },
  {
    "text": "and run options let's choose to run our",
    "start": "439400",
    "end": "442160"
  },
  {
    "text": "test Target and nothing happens this is",
    "start": "442160",
    "end": "446280"
  },
  {
    "text": "because we haven't set up any break",
    "start": "446280",
    "end": "447599"
  },
  {
    "text": "points so the code is just running and",
    "start": "447599",
    "end": "450240"
  },
  {
    "text": "exiting let's go ahead and add a break",
    "start": "450240",
    "end": "452560"
  },
  {
    "text": "point to a line of code we wish to",
    "start": "452560",
    "end": "453960"
  },
  {
    "text": "inspect with our debugger selecting the",
    "start": "453960",
    "end": "456479"
  },
  {
    "text": "line we care about we can add a",
    "start": "456479",
    "end": "458000"
  },
  {
    "text": "breakpoint using the DAP toggle",
    "start": "458000",
    "end": "460319"
  },
  {
    "text": "breakpoint command you can see a",
    "start": "460319",
    "end": "462759"
  },
  {
    "text": "breakpoint has been added denoted by the",
    "start": "462759",
    "end": "464720"
  },
  {
    "text": "capital B next to the line number if we",
    "start": "464720",
    "end": "467479"
  },
  {
    "text": "rerun our debug command you'll see we've",
    "start": "467479",
    "end": "469759"
  },
  {
    "text": "actually arrived at our break point",
    "start": "469759",
    "end": "471400"
  },
  {
    "text": "which is noted by the arrow at the line",
    "start": "471400",
    "end": "474080"
  },
  {
    "text": "although this doesn't tell us too much",
    "start": "474080",
    "end": "475759"
  },
  {
    "text": "about what is going on in order to",
    "start": "475759",
    "end": "477960"
  },
  {
    "text": "inspect our values we can use some of",
    "start": "477960",
    "end": "479919"
  },
  {
    "text": "the UI features of envin dap to view",
    "start": "479919",
    "end": "482159"
  },
  {
    "text": "what our current variables look like",
    "start": "482159",
    "end": "483759"
  },
  {
    "text": "according to the scope entering the",
    "start": "483759",
    "end": "486440"
  },
  {
    "text": "following command will open up a sidebar",
    "start": "486440",
    "end": "488360"
  },
  {
    "text": "that we can view our locally scoped",
    "start": "488360",
    "end": "489840"
  },
  {
    "text": "window with we can then step through our",
    "start": "489840",
    "end": "491960"
  },
  {
    "text": "code using the DAP stepover command",
    "start": "491960",
    "end": "494199"
  },
  {
    "text": "which will allow us to inspect changes",
    "start": "494199",
    "end": "496159"
  },
  {
    "text": "to our variables as our code progresses",
    "start": "496159",
    "end": "498520"
  },
  {
    "text": "line by",
    "start": "498520",
    "end": "499759"
  },
  {
    "text": "line and with that we have some",
    "start": "499759",
    "end": "501759"
  },
  {
    "text": "rudimentary debugging and rust although",
    "start": "501759",
    "end": "504360"
  },
  {
    "text": "this is a little bit cumbersome to type",
    "start": "504360",
    "end": "505879"
  },
  {
    "text": "in any time we want to inspect our local",
    "start": "505879",
    "end": "508000"
  },
  {
    "text": "variables to make the debugging",
    "start": "508000",
    "end": "510120"
  },
  {
    "text": "experience better we'll go ahead and add",
    "start": "510120",
    "end": "512159"
  },
  {
    "text": "some key mappings to open up our windows",
    "start": "512159",
    "end": "514560"
  },
  {
    "text": "and add break points heading back on",
    "start": "514560",
    "end": "516800"
  },
  {
    "text": "over to our custom config let's add a",
    "start": "516800",
    "end": "518959"
  },
  {
    "text": "new file called mappings do",
    "start": "518959",
    "end": "521360"
  },
  {
    "text": "lure here we can add in new mappings to",
    "start": "521360",
    "end": "523919"
  },
  {
    "text": "simplify our debugging experience let's",
    "start": "523919",
    "end": "526560"
  },
  {
    "text": "add in a mapping for toggling a",
    "start": "526560",
    "end": "528120"
  },
  {
    "text": "breakpoint using space D and B with this",
    "start": "528120",
    "end": "531680"
  },
  {
    "text": "added let's import it into our chat. RC",
    "start": "531680",
    "end": "534080"
  },
  {
    "text": "file now jumping back on over to our",
    "start": "534080",
    "end": "536320"
  },
  {
    "text": "code we can easily toggle break points",
    "start": "536320",
    "end": "538079"
  },
  {
    "text": "using this key binding",
    "start": "538079",
    "end": "540480"
  },
  {
    "text": "let's go ahead and add the same for our",
    "start": "540480",
    "end": "542240"
  },
  {
    "text": "Ur sidebar command so we can easily open",
    "start": "542240",
    "end": "544440"
  },
  {
    "text": "this up as well we'll bind this to the",
    "start": "544440",
    "end": "546800"
  },
  {
    "text": "space d command and we'll add a function",
    "start": "546800",
    "end": "550480"
  },
  {
    "text": "which calls the same lower code we were",
    "start": "550480",
    "end": "552200"
  },
  {
    "text": "using",
    "start": "552200",
    "end": "553440"
  },
  {
    "text": "earlier back in the code with debugging",
    "start": "553440",
    "end": "555519"
  },
  {
    "text": "we can now press this key bindings to",
    "start": "555519",
    "end": "557440"
  },
  {
    "text": "easily open up a sidebar to inspect the",
    "start": "557440",
    "end": "559240"
  },
  {
    "text": "values of variables in our debugging",
    "start": "559240",
    "end": "561959"
  },
  {
    "text": "scope there's many more UI options in",
    "start": "561959",
    "end": "564600"
  },
  {
    "text": "mvap that you can use and I'd recommend",
    "start": "564600",
    "end": "566360"
  },
  {
    "text": "reading the documentation to see what",
    "start": "566360",
    "end": "567839"
  },
  {
    "text": "works for you alternatively if you'd",
    "start": "567839",
    "end": "569720"
  },
  {
    "text": "like me to do a more detailed video on",
    "start": "569720",
    "end": "571360"
  },
  {
    "text": "mvap then let me",
    "start": "571360",
    "end": "573480"
  },
  {
    "text": "know this next plugin adds greater",
    "start": "573480",
    "end": "575880"
  },
  {
    "text": "information and utilities for working",
    "start": "575880",
    "end": "577680"
  },
  {
    "text": "with crates via the cargo. tumml with",
    "start": "577680",
    "end": "580720"
  },
  {
    "text": "this plugin we're able to see crate",
    "start": "580720",
    "end": "582839"
  },
  {
    "text": "versions update or upgrade crates to the",
    "start": "582839",
    "end": "585000"
  },
  {
    "text": "latest version get auto complete for",
    "start": "585000",
    "end": "586959"
  },
  {
    "text": "create versions and jump to the",
    "start": "586959",
    "end": "588880"
  },
  {
    "text": "documentation for a create with a single",
    "start": "588880",
    "end": "590600"
  },
  {
    "text": "command to install this plugin first",
    "start": "590600",
    "end": "593120"
  },
  {
    "text": "jump on over to the plugins. L file and",
    "start": "593120",
    "end": "595640"
  },
  {
    "text": "add in the crates plugin entry let's set",
    "start": "595640",
    "end": "598040"
  },
  {
    "text": "it to Lazy load on Rust and toml",
    "start": "598040",
    "end": "600800"
  },
  {
    "text": "files now we're going to want to",
    "start": "600800",
    "end": "602600"
  },
  {
    "text": "override some configuration let's create",
    "start": "602600",
    "end": "605120"
  },
  {
    "text": "a config function require the package",
    "start": "605120",
    "end": "607480"
  },
  {
    "text": "and call the setup function I was having",
    "start": "607480",
    "end": "610120"
  },
  {
    "text": "issues getting crates to work when",
    "start": "610120",
    "end": "611320"
  },
  {
    "text": "opening up the cargo. Tomo first so I",
    "start": "611320",
    "end": "613800"
  },
  {
    "text": "added in a call to the crates. show",
    "start": "613800",
    "end": "615360"
  },
  {
    "text": "function to resolve it to get",
    "start": "615360",
    "end": "617040"
  },
  {
    "text": "autocomplete to work you'll need to",
    "start": "617040",
    "end": "618519"
  },
  {
    "text": "override the default sources for the",
    "start": "618519",
    "end": "620160"
  },
  {
    "text": "comp package we can do this easily with",
    "start": "620160",
    "end": "622920"
  },
  {
    "text": "another plugin entry and adding a",
    "start": "622920",
    "end": "624640"
  },
  {
    "text": "function for the options where we load",
    "start": "624640",
    "end": "626560"
  },
  {
    "text": "the default values and add crates to the",
    "start": "626560",
    "end": "628600"
  },
  {
    "text": "plugin sources",
    "start": "628600",
    "end": "631160"
  },
  {
    "text": "now we have a superpowered cargo doomo",
    "start": "631160",
    "end": "633240"
  },
  {
    "text": "which will give us aut complete for",
    "start": "633240",
    "end": "634320"
  },
  {
    "text": "crate versions and a bunch of other",
    "start": "634320",
    "end": "636720"
  },
  {
    "text": "utilities if we jump over to our",
    "start": "636720",
    "end": "638639"
  },
  {
    "text": "mappings file we can add a mapping to",
    "start": "638639",
    "end": "640800"
  },
  {
    "text": "automatically upgrade our crates and",
    "start": "640800",
    "end": "642760"
  },
  {
    "text": "bind it to the space RC UK",
    "start": "642760",
    "end": "646200"
  },
  {
    "text": "key with this setup you can turn neovim",
    "start": "646200",
    "end": "648959"
  },
  {
    "text": "into a Powerhouse for writing rust code",
    "start": "648959",
    "end": "651360"
  },
  {
    "text": "I hope this video helps you to have a",
    "start": "651360",
    "end": "652839"
  },
  {
    "text": "better rust developer experience and",
    "start": "652839",
    "end": "654800"
  },
  {
    "text": "inspired you to try configuring neovim",
    "start": "654800",
    "end": "656680"
  },
  {
    "text": "for yourself as always thank you for",
    "start": "656680",
    "end": "658959"
  },
  {
    "text": "watching and I'll see you next time",
    "start": "658959",
    "end": "663399"
  }
]