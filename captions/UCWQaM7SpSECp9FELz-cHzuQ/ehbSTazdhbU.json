[
  {
    "start": "0",
    "end": "62000"
  },
  {
    "text": "if you're a software developer you've",
    "start": "280",
    "end": "2240"
  },
  {
    "text": "likely written a good number of hello",
    "start": "2240",
    "end": "4200"
  },
  {
    "text": "world programs so many in fact that",
    "start": "4200",
    "end": "6560"
  },
  {
    "text": "you're probably wondering why the world",
    "start": "6560",
    "end": "8679"
  },
  {
    "text": "has yet to say hello back despite being",
    "start": "8679",
    "end": "11480"
  },
  {
    "text": "ghosted we've continued to slip into the",
    "start": "11480",
    "end": "13559"
  },
  {
    "text": "Earth's DMS in a number of different",
    "start": "13559",
    "end": "15759"
  },
  {
    "text": "programming languages odds are these",
    "start": "15759",
    "end": "18160"
  },
  {
    "text": "languages followed a rather similar",
    "start": "18160",
    "end": "20160"
  },
  {
    "text": "structure with perhaps some slight",
    "start": "20160",
    "end": "21880"
  },
  {
    "text": "differences in syntax or function naming",
    "start": "21880",
    "end": "24920"
  },
  {
    "text": "whilst this is true for most common",
    "start": "24920",
    "end": "26880"
  },
  {
    "text": "programming languages there are a good",
    "start": "26880",
    "end": "28840"
  },
  {
    "text": "number that are unrecognized ible in the",
    "start": "28840",
    "end": "30640"
  },
  {
    "text": "way that they are written which are",
    "start": "30640",
    "end": "32480"
  },
  {
    "text": "often considered cursed these cursed",
    "start": "32480",
    "end": "34840"
  },
  {
    "text": "languages are known as esoteric",
    "start": "34840",
    "end": "36520"
  },
  {
    "text": "programming languages or esol Langs for",
    "start": "36520",
    "end": "39000"
  },
  {
    "text": "short and there's a whole website",
    "start": "39000",
    "end": "41160"
  },
  {
    "text": "dedicated to them these languages are",
    "start": "41160",
    "end": "43480"
  },
  {
    "text": "called esoteric for good reason and",
    "start": "43480",
    "end": "45879"
  },
  {
    "text": "whilst some are created for very",
    "start": "45879",
    "end": "47640"
  },
  {
    "text": "specific use cases many have been",
    "start": "47640",
    "end": "49640"
  },
  {
    "text": "created as a means to test human",
    "start": "49640",
    "end": "51800"
  },
  {
    "text": "creativity on the humble turing machine",
    "start": "51800",
    "end": "54879"
  },
  {
    "text": "so for this video I decided to write",
    "start": "54879",
    "end": "56600"
  },
  {
    "text": "hello world in five of these esoteric",
    "start": "56600",
    "end": "58719"
  },
  {
    "text": "languages that I personally found to be",
    "start": "58719",
    "end": "60680"
  },
  {
    "text": "the most interesting the first language",
    "start": "60680",
    "end": "63519"
  },
  {
    "start": "62000",
    "end": "234000"
  },
  {
    "text": "we're going to write hello world in is",
    "start": "63519",
    "end": "65239"
  },
  {
    "text": "arguably the most famous of the Langs",
    "start": "65239",
    "end": "68439"
  },
  {
    "text": "and that language is brain brain",
    "start": "68439",
    "end": "70960"
  },
  {
    "text": " isn't just named to be provocative",
    "start": "70960",
    "end": "73439"
  },
  {
    "text": "it's a pretty accurate description of",
    "start": "73439",
    "end": "75040"
  },
  {
    "text": "what happens to your mental state when",
    "start": "75040",
    "end": "76759"
  },
  {
    "text": "you attempt to write this language for",
    "start": "76759",
    "end": "78360"
  },
  {
    "text": "the first time however once you get past",
    "start": "78360",
    "end": "80920"
  },
  {
    "text": "the initial mental labotomy the",
    "start": "80920",
    "end": "82920"
  },
  {
    "text": "languages design is actually rather",
    "start": "82920",
    "end": "85119"
  },
  {
    "text": "simple consisting of two main components",
    "start": "85119",
    "end": "87960"
  },
  {
    "text": "an array of 30,000 bytes each",
    "start": "87960",
    "end": "90159"
  },
  {
    "text": "initialized to zero and a bite pointer",
    "start": "90159",
    "end": "92840"
  },
  {
    "text": "which is initialized to start at the",
    "start": "92840",
    "end": "94520"
  },
  {
    "text": "beginning of the array the semantics of",
    "start": "94520",
    "end": "96680"
  },
  {
    "text": "the language allow for the pointer to",
    "start": "96680",
    "end": "98119"
  },
  {
    "text": "move up and down the array manipulating",
    "start": "98119",
    "end": "100439"
  },
  {
    "text": "the bytes at whichever index the pointer",
    "start": "100439",
    "end": "102680"
  },
  {
    "text": "is currently placed at so let's write",
    "start": "102680",
    "end": "105119"
  },
  {
    "text": "our hello world program to begin let's",
    "start": "105119",
    "end": "107479"
  },
  {
    "text": "print out the letter H to do this we'll",
    "start": "107479",
    "end": "109640"
  },
  {
    "text": "set the first bite in the array to 72",
    "start": "109640",
    "end": "111759"
  },
  {
    "text": "which is the asky value for H and print",
    "start": "111759",
    "end": "114159"
  },
  {
    "text": "it out to increment the value at the",
    "start": "114159",
    "end": "116360"
  },
  {
    "text": "current pointer we use the plus symbol",
    "start": "116360",
    "end": "118680"
  },
  {
    "text": "let's go ahead and do this 72 times we",
    "start": "118680",
    "end": "121479"
  },
  {
    "text": "can then print it out to the console",
    "start": "121479",
    "end": "122920"
  },
  {
    "text": "using the dot symbol let's go ahead and",
    "start": "122920",
    "end": "125680"
  },
  {
    "text": "run this in the terminal and we should",
    "start": "125680",
    "end": "127000"
  },
  {
    "text": "see the letter H print to console so far",
    "start": "127000",
    "end": "129599"
  },
  {
    "text": "so good we could continue this method to",
    "start": "129599",
    "end": "131800"
  },
  {
    "text": "write out each letter if we wanted to",
    "start": "131800",
    "end": "133760"
  },
  {
    "text": "but it's not the most elegant approach",
    "start": "133760",
    "end": "136000"
  },
  {
    "text": "instead we can use a different method",
    "start": "136000",
    "end": "138120"
  },
  {
    "text": "brain gives us the ability to",
    "start": "138120",
    "end": "139640"
  },
  {
    "text": "perform looping which can make our code",
    "start": "139640",
    "end": "141760"
  },
  {
    "text": "much more concise to Loop we first need",
    "start": "141760",
    "end": "143920"
  },
  {
    "text": "to set a loop counter which is the",
    "start": "143920",
    "end": "146040"
  },
  {
    "text": "number of iterations that we want to",
    "start": "146040",
    "end": "147760"
  },
  {
    "text": "perform we can roughly figure this out",
    "start": "147760",
    "end": "149879"
  },
  {
    "text": "by using the square root of the number",
    "start": "149879",
    "end": "151560"
  },
  {
    "text": "we want which in our case gives us 8.4",
    "start": "151560",
    "end": "154480"
  },
  {
    "text": "if we divide our 72 by 8 we get back the",
    "start": "154480",
    "end": "157239"
  },
  {
    "text": "number N9 so we want to Loop nine times",
    "start": "157239",
    "end": "159879"
  },
  {
    "text": "incrementing the value by eight each",
    "start": "159879",
    "end": "161879"
  },
  {
    "text": "iteration let's go ahead and set the",
    "start": "161879",
    "end": "163920"
  },
  {
    "text": "first bite to the value of nine which",
    "start": "163920",
    "end": "165519"
  },
  {
    "text": "will be our Loop counter we can then",
    "start": "165519",
    "end": "168319"
  },
  {
    "text": "Define our Loop using the brace symbols",
    "start": "168319",
    "end": "171040"
  },
  {
    "text": "anything we put inside of the braces",
    "start": "171040",
    "end": "172599"
  },
  {
    "text": "will be our Loops logic here we want to",
    "start": "172599",
    "end": "175200"
  },
  {
    "text": "move the pointer to The Next Bite in our",
    "start": "175200",
    "end": "176879"
  },
  {
    "text": "array increment this bite by eight times",
    "start": "176879",
    "end": "179280"
  },
  {
    "text": "and then move Mo the pointer back to the",
    "start": "179280",
    "end": "180760"
  },
  {
    "text": "loop counter decrementing it by one when",
    "start": "180760",
    "end": "183360"
  },
  {
    "text": "the loop counter reaches zero the loop",
    "start": "183360",
    "end": "185120"
  },
  {
    "text": "will end after the loop we then want to",
    "start": "185120",
    "end": "187319"
  },
  {
    "text": "increment the pointer again to where our",
    "start": "187319",
    "end": "188920"
  },
  {
    "text": "first Letter's bite value is stored and",
    "start": "188920",
    "end": "191159"
  },
  {
    "text": "printed out now if we run this code we",
    "start": "191159",
    "end": "194040"
  },
  {
    "text": "should see the letter H being printed to",
    "start": "194040",
    "end": "196000"
  },
  {
    "text": "the screen All That Remains is to do",
    "start": "196000",
    "end": "198120"
  },
  {
    "text": "this for each character in our hello",
    "start": "198120",
    "end": "199760"
  },
  {
    "text": "world string you'll notice on some lines",
    "start": "199760",
    "end": "202360"
  },
  {
    "text": "instead of using a fresh bite in the",
    "start": "202360",
    "end": "204159"
  },
  {
    "text": "array I just increment the current value",
    "start": "204159",
    "end": "206480"
  },
  {
    "text": "as it's only a few steps to get the",
    "start": "206480",
    "end": "208280"
  },
  {
    "text": "expected value we want you'll also",
    "start": "208280",
    "end": "210439"
  },
  {
    "text": "notice for the L character I just print",
    "start": "210439",
    "end": "212480"
  },
  {
    "text": "this out twice for the exclamation mark",
    "start": "212480",
    "end": "214680"
  },
  {
    "text": "well I do something very similar I",
    "start": "214680",
    "end": "216480"
  },
  {
    "text": "decent the pointer back to the bite that",
    "start": "216480",
    "end": "218159"
  },
  {
    "text": "we used for our space value and then",
    "start": "218159",
    "end": "220200"
  },
  {
    "text": "increment it by one and print out that",
    "start": "220200",
    "end": "222040"
  },
  {
    "text": "value once you understand how the",
    "start": "222040",
    "end": "223640"
  },
  {
    "text": "language works it's actually not too",
    "start": "223640",
    "end": "225360"
  },
  {
    "text": "difficult to write which translates well",
    "start": "225360",
    "end": "227400"
  },
  {
    "text": "to many other esoteric languages such as",
    "start": "227400",
    "end": "229799"
  },
  {
    "text": "UK which is basically a derivative",
    "start": "229799",
    "end": "232159"
  },
  {
    "text": "language with a pretty similar concept",
    "start": "232159",
    "end": "234519"
  },
  {
    "start": "234000",
    "end": "439000"
  },
  {
    "text": "whilst inspiring a large number of",
    "start": "234519",
    "end": "236599"
  },
  {
    "text": "similar languages brain wasn't the",
    "start": "236599",
    "end": "238879"
  },
  {
    "text": "first esoteric language to be created",
    "start": "238879",
    "end": "241120"
  },
  {
    "text": "that title goes to the compiler language",
    "start": "241120",
    "end": "243280"
  },
  {
    "text": "with no pronounceable acronym which is",
    "start": "243280",
    "end": "245840"
  },
  {
    "text": "abbreviated to intercal pronunciation",
    "start": "245840",
    "end": "248640"
  },
  {
    "text": "issues aside this language was created",
    "start": "248640",
    "end": "250840"
  },
  {
    "text": "as a parody by two Princeton University",
    "start": "250840",
    "end": "252959"
  },
  {
    "text": "students in 1972 which happens to be the",
    "start": "252959",
    "end": "256000"
  },
  {
    "text": "same year the C programming language",
    "start": "256000",
    "end": "257799"
  },
  {
    "text": "first appeared this is an important fact",
    "start": "257799",
    "end": "260400"
  },
  {
    "text": "about how esoteric intercal is whilst",
    "start": "260400",
    "end": "263240"
  },
  {
    "text": "modern esoteric languages can be",
    "start": "263240",
    "end": "264960"
  },
  {
    "text": "somewhat difficult to understand they",
    "start": "264960",
    "end": "266960"
  },
  {
    "text": "typically come from the minds of more",
    "start": "266960",
    "end": "268520"
  },
  {
    "text": "modern Developers who have been brought",
    "start": "268520",
    "end": "270199"
  },
  {
    "text": "up knowing only the comfort of the ca",
    "start": "270199",
    "end": "272280"
  },
  {
    "text": "programming language and its influence",
    "start": "272280",
    "end": "274240"
  },
  {
    "text": "on Modern development modern esang",
    "start": "274240",
    "end": "277120"
  },
  {
    "text": "merely adopted the dark whilst intera",
    "start": "277120",
    "end": "280000"
  },
  {
    "text": "was born to it the languages that",
    "start": "280000",
    "end": "283000"
  },
  {
    "text": "inspired intera were much more torturous",
    "start": "283000",
    "end": "285840"
  },
  {
    "text": "such as foran and Cobo which are",
    "start": "285840",
    "end": "288240"
  },
  {
    "text": "arguably esoteric by themselves so here",
    "start": "288240",
    "end": "291440"
  },
  {
    "text": "is Hello World in intercal yep it's",
    "start": "291440",
    "end": "294520"
  },
  {
    "text": "pretty cursed let's try and decipher",
    "start": "294520",
    "end": "296800"
  },
  {
    "text": "what is actually happening the first",
    "start": "296800",
    "end": "299000"
  },
  {
    "text": "thing to notice is that every line must",
    "start": "299000",
    "end": "300560"
  },
  {
    "text": "start with a statement identifier this",
    "start": "300560",
    "end": "302680"
  },
  {
    "text": "is either do please or please do if we",
    "start": "302680",
    "end": "306039"
  },
  {
    "text": "look at the first line of code here",
    "start": "306039",
    "end": "307520"
  },
  {
    "text": "we're defining an array of 16bit",
    "start": "307520",
    "end": "309240"
  },
  {
    "text": "integers called one which is sized to 13",
    "start": "309240",
    "end": "311680"
  },
  {
    "text": "elements this is where we'll store the",
    "start": "311680",
    "end": "313720"
  },
  {
    "text": "bytes for our hello world string the",
    "start": "313720",
    "end": "315880"
  },
  {
    "text": "next lines go through and actually add",
    "start": "315880",
    "end": "317680"
  },
  {
    "text": "the string to each index within the",
    "start": "317680",
    "end": "319479"
  },
  {
    "text": "array which is done using the sub",
    "start": "319479",
    "end": "321360"
  },
  {
    "text": "command determining the values for that",
    "start": "321360",
    "end": "323520"
  },
  {
    "text": "array however is where things get a",
    "start": "323520",
    "end": "325240"
  },
  {
    "text": "little cursed in most languages you",
    "start": "325240",
    "end": "328000"
  },
  {
    "text": "would typically either enter the asky",
    "start": "328000",
    "end": "330000"
  },
  {
    "text": "character or value that you wanted the",
    "start": "330000",
    "end": "331759"
  },
  {
    "text": "program to Output when it comes to",
    "start": "331759",
    "end": "333680"
  },
  {
    "text": "intercal however this isn't the case",
    "start": "333680",
    "end": "336000"
  },
  {
    "text": "instead the compiler will print out the",
    "start": "336000",
    "end": "338120"
  },
  {
    "text": "value at each element on the array using",
    "start": "338120",
    "end": "340080"
  },
  {
    "text": "a four-step algorithm this is a little",
    "start": "340080",
    "end": "342560"
  },
  {
    "text": "complex so bear with me it took me a",
    "start": "342560",
    "end": "344759"
  },
  {
    "text": "whole evening to figure it out the",
    "start": "344759",
    "end": "346840"
  },
  {
    "text": "algorithm is as follows step one the",
    "start": "346840",
    "end": "349440"
  },
  {
    "text": "compiler will take the asky value of the",
    "start": "349440",
    "end": "351400"
  },
  {
    "text": "previously printed character and reverse",
    "start": "351400",
    "end": "353319"
  },
  {
    "text": "its bits if there was no previously",
    "start": "353319",
    "end": "355120"
  },
  {
    "text": "printed value such as when you at the",
    "start": "355120",
    "end": "356680"
  },
  {
    "text": "start of the array then this value is",
    "start": "356680",
    "end": "358600"
  },
  {
    "text": "zero step two two take the value at the",
    "start": "358600",
    "end": "360800"
  },
  {
    "text": "current index of the array step three",
    "start": "360800",
    "end": "362960"
  },
  {
    "text": "subtract the value in step two from the",
    "start": "362960",
    "end": "364800"
  },
  {
    "text": "value in step one make sure to handle",
    "start": "364800",
    "end": "367199"
  },
  {
    "text": "any underflow by keeping the number in",
    "start": "367199",
    "end": "369280"
  },
  {
    "text": "eight bits and step four take the result",
    "start": "369280",
    "end": "371919"
  },
  {
    "text": "of step three and reverse its bits to",
    "start": "371919",
    "end": "373680"
  },
  {
    "text": "get the asy value of the character to",
    "start": "373680",
    "end": "375520"
  },
  {
    "text": "print yes it's really this horrible in",
    "start": "375520",
    "end": "378319"
  },
  {
    "text": "order to figure out the values I needed",
    "start": "378319",
    "end": "379960"
  },
  {
    "text": "for hello world I ended up creating my",
    "start": "379960",
    "end": "382199"
  },
  {
    "text": "own python script to perform this",
    "start": "382199",
    "end": "383800"
  },
  {
    "text": "calculation in Reverse if you're",
    "start": "383800",
    "end": "385880"
  },
  {
    "text": "interested in running this yourself I",
    "start": "385880",
    "end": "387479"
  },
  {
    "text": "added the link to the code down below",
    "start": "387479",
    "end": "389800"
  },
  {
    "text": "this printing logic is a bit of a puzzle",
    "start": "389800",
    "end": "391639"
  },
  {
    "text": "to understand but it's not the only one",
    "start": "391639",
    "end": "393639"
  },
  {
    "text": "that intercal requires let's first",
    "start": "393639",
    "end": "395680"
  },
  {
    "text": "compile this code using the intercal",
    "start": "395680",
    "end": "397440"
  },
  {
    "text": "compiler which is aptly known as ick",
    "start": "397440",
    "end": "399880"
  },
  {
    "text": "this is the puzzle in action here the",
    "start": "399880",
    "end": "402520"
  },
  {
    "text": "compiler has produced an error message",
    "start": "402520",
    "end": "404319"
  },
  {
    "text": "telling us that we the programmer are",
    "start": "404319",
    "end": "406319"
  },
  {
    "text": "insufficiently polite this is because",
    "start": "406319",
    "end": "408680"
  },
  {
    "text": "each program must contain a specific",
    "start": "408680",
    "end": "410360"
  },
  {
    "text": "range of the please keyword and in our",
    "start": "410360",
    "end": "412720"
  },
  {
    "text": "case we haven't used enough if we try to",
    "start": "412720",
    "end": "415240"
  },
  {
    "text": "rectify this by adding too many we'll",
    "start": "415240",
    "end": "417000"
  },
  {
    "text": "receive another error from the compiler",
    "start": "417000",
    "end": "419120"
  },
  {
    "text": "in ining us that we're being overly",
    "start": "419120",
    "end": "420960"
  },
  {
    "text": "polite therefore just like Goldilocks",
    "start": "420960",
    "end": "423280"
  },
  {
    "text": "and the Three Bears you need to find an",
    "start": "423280",
    "end": "425160"
  },
  {
    "text": "amount that sits somewhere in the middle",
    "start": "425160",
    "end": "427080"
  },
  {
    "text": "and is just right out of this list",
    "start": "427080",
    "end": "429759"
  },
  {
    "text": "intercal was probably the second hardest",
    "start": "429759",
    "end": "432120"
  },
  {
    "text": "one for me to figure out and whilst it",
    "start": "432120",
    "end": "434520"
  },
  {
    "text": "may not be anything great to look at",
    "start": "434520",
    "end": "436440"
  },
  {
    "text": "it's certainly better than looking at",
    "start": "436440",
    "end": "437919"
  },
  {
    "text": "nothing right well it just so happens",
    "start": "437919",
    "end": "441080"
  },
  {
    "start": "439000",
    "end": "595000"
  },
  {
    "text": "that the creator of this next language",
    "start": "441080",
    "end": "442800"
  },
  {
    "text": "would probably disagree to show what I",
    "start": "442800",
    "end": "444919"
  },
  {
    "text": "mean here is Hello World in our next",
    "start": "444919",
    "end": "447240"
  },
  {
    "text": "language you're probably thinking he",
    "start": "447240",
    "end": "449479"
  },
  {
    "text": "made a mistake there's nothing on the",
    "start": "449479",
    "end": "451199"
  },
  {
    "text": "screen well let me run this code with",
    "start": "451199",
    "end": "453160"
  },
  {
    "text": "our next interpreter as you can see we",
    "start": "453160",
    "end": "455639"
  },
  {
    "text": "get back the message of hello world so",
    "start": "455639",
    "end": "458039"
  },
  {
    "text": "what exactly is this code passing well",
    "start": "458039",
    "end": "460560"
  },
  {
    "text": "if I highlight the code it makes it a",
    "start": "460560",
    "end": "462280"
  },
  {
    "text": "little more clear we basically have a",
    "start": "462280",
    "end": "464360"
  },
  {
    "text": "bunch of Whit space which coincidentally",
    "start": "464360",
    "end": "467039"
  },
  {
    "text": "is also the name of the language where",
    "start": "467039",
    "end": "469360"
  },
  {
    "text": "most programming languages ignore the",
    "start": "469360",
    "end": "471080"
  },
  {
    "text": "whites space and code whitespace does",
    "start": "471080",
    "end": "473000"
  },
  {
    "text": "the opposite and ignores all other",
    "start": "473000",
    "end": "475000"
  },
  {
    "text": "characters only considering the white",
    "start": "475000",
    "end": "477080"
  },
  {
    "text": "space as code now you probably thinking",
    "start": "477080",
    "end": "480199"
  },
  {
    "text": "how many whites space characters are",
    "start": "480199",
    "end": "481759"
  },
  {
    "text": "there well the answer is not a lot",
    "start": "481759",
    "end": "484440"
  },
  {
    "text": "there's only three in total which are",
    "start": "484440",
    "end": "486319"
  },
  {
    "text": "the tab space and the new line or Line",
    "start": "486319",
    "end": "489479"
  },
  {
    "text": "Feed character if I set up my Editor to",
    "start": "489479",
    "end": "492280"
  },
  {
    "text": "display these you'll be able to see the",
    "start": "492280",
    "end": "493840"
  },
  {
    "text": "code a little more clearly I'm using the",
    "start": "493840",
    "end": "496360"
  },
  {
    "text": "underscore character for spaces the",
    "start": "496360",
    "end": "498120"
  },
  {
    "text": "greater than symbol for tabs and the",
    "start": "498120",
    "end": "499800"
  },
  {
    "text": "dollar symbol for new line it may not",
    "start": "499800",
    "end": "502479"
  },
  {
    "text": "feel like it but these three characters",
    "start": "502479",
    "end": "504240"
  },
  {
    "text": "are enough to create a working touring",
    "start": "504240",
    "end": "506280"
  },
  {
    "text": "machine let me show you how it works by",
    "start": "506280",
    "end": "508680"
  },
  {
    "text": "simplifying our code and only printing",
    "start": "508680",
    "end": "510840"
  },
  {
    "text": "the letter H whitespace uses a stack to",
    "start": "510840",
    "end": "513680"
  },
  {
    "text": "manage its memory so the first thing we",
    "start": "513680",
    "end": "515839"
  },
  {
    "text": "want to do is push the asky value of H",
    "start": "515839",
    "end": "518479"
  },
  {
    "text": "onto it we can push a number onto the",
    "start": "518479",
    "end": "520800"
  },
  {
    "text": "stack using the space space combination",
    "start": "520800",
    "end": "523719"
  },
  {
    "text": "followed by the number represented as",
    "start": "523719",
    "end": "525680"
  },
  {
    "text": "binary binary is constructed using wh",
    "start": "525680",
    "end": "528279"
  },
  {
    "text": "space itself where the tab character is",
    "start": "528279",
    "end": "530680"
  },
  {
    "text": "equal to one and the space is equal to",
    "start": "530680",
    "end": "532839"
  },
  {
    "text": "zero the letter H is represented by 72",
    "start": "532839",
    "end": "535760"
  },
  {
    "text": "in decimal which in 8bit binary is 01 1",
    "start": "535760",
    "end": "539440"
  },
  {
    "text": "0 0 1 0 0 0 this translates in Whit",
    "start": "539440",
    "end": "543560"
  },
  {
    "text": "space to space tab space space tab space",
    "start": "543560",
    "end": "547600"
  },
  {
    "text": "space space we can then end our binary",
    "start": "547600",
    "end": "550079"
  },
  {
    "text": "sequence using the new line character",
    "start": "550079",
    "end": "552519"
  },
  {
    "text": "next we want to Output the character at",
    "start": "552519",
    "end": "554519"
  },
  {
    "text": "the top of the stack we can do this",
    "start": "554519",
    "end": "556079"
  },
  {
    "text": "using a tab followed by a new line and",
    "start": "556079",
    "end": "558399"
  },
  {
    "text": "then space and space we then end the",
    "start": "558399",
    "end": "560680"
  },
  {
    "text": "program using the three line feeds next",
    "start": "560680",
    "end": "563680"
  },
  {
    "text": "if we run this code we should see the",
    "start": "563680",
    "end": "565360"
  },
  {
    "text": "letter H print to console we can also",
    "start": "565360",
    "end": "567880"
  },
  {
    "text": "print this as a number of food want by",
    "start": "567880",
    "end": "569760"
  },
  {
    "text": "changing our printing logic from space",
    "start": "569760",
    "end": "571800"
  },
  {
    "text": "space to space tab pretty neat whites",
    "start": "571800",
    "end": "575760"
  },
  {
    "text": "Space is really impressive in design",
    "start": "575760",
    "end": "578000"
  },
  {
    "text": "providing a lot of functionality with",
    "start": "578000",
    "end": "579800"
  },
  {
    "text": "different combinations of characters",
    "start": "579800",
    "end": "581720"
  },
  {
    "text": "considering that there are only three",
    "start": "581720",
    "end": "583279"
  },
  {
    "text": "characters in use it's rather impressive",
    "start": "583279",
    "end": "586120"
  },
  {
    "text": "however it's certainly one of the more",
    "start": "586120",
    "end": "587440"
  },
  {
    "text": "Vose sangs if we're looking for",
    "start": "587440",
    "end": "590040"
  },
  {
    "text": "something a little more concise well",
    "start": "590040",
    "end": "592120"
  },
  {
    "text": "fortunately our next group of languages",
    "start": "592120",
    "end": "593839"
  },
  {
    "text": "fits that requirement the next language",
    "start": "593839",
    "end": "596240"
  },
  {
    "start": "595000",
    "end": "665000"
  },
  {
    "text": "we're going to write hello world in is",
    "start": "596240",
    "end": "597839"
  },
  {
    "text": "actually part of a subgroup group of",
    "start": "597839",
    "end": "599440"
  },
  {
    "text": "esoteric languages these languages are",
    "start": "599440",
    "end": "601839"
  },
  {
    "text": "used for an activity called code golf",
    "start": "601839",
    "end": "604240"
  },
  {
    "text": "which is similar to a lead code Type",
    "start": "604240",
    "end": "606480"
  },
  {
    "text": "challenge but instead of attempting to",
    "start": "606480",
    "end": "608200"
  },
  {
    "text": "perform the challenge in the shortest",
    "start": "608200",
    "end": "609959"
  },
  {
    "text": "time or memory complexity the goal is to",
    "start": "609959",
    "end": "612320"
  },
  {
    "text": "complete it using the least amount of",
    "start": "612320",
    "end": "614040"
  },
  {
    "text": "code measured in either bytes or",
    "start": "614040",
    "end": "616200"
  },
  {
    "text": "characters in order to get the best",
    "start": "616200",
    "end": "618399"
  },
  {
    "text": "scores possible esoteric languages for",
    "start": "618399",
    "end": "620959"
  },
  {
    "text": "the purpose of code golf were created",
    "start": "620959",
    "end": "622959"
  },
  {
    "text": "allowing developers to write code to",
    "start": "622959",
    "end": "624600"
  },
  {
    "text": "solve these challenges in as few key",
    "start": "624600",
    "end": "626519"
  },
  {
    "text": "presses as possible the one I decided to",
    "start": "626519",
    "end": "628880"
  },
  {
    "text": "write hello worlden is called stuck and",
    "start": "628880",
    "end": "631200"
  },
  {
    "text": "to do so is pretty easy here it is in",
    "start": "631200",
    "end": "634040"
  },
  {
    "text": "all its Glory before you ask no this",
    "start": "634040",
    "end": "636920"
  },
  {
    "text": "isn't an editing error I haven't left",
    "start": "636920",
    "end": "639040"
  },
  {
    "text": "the whites space answer up by accident",
    "start": "639040",
    "end": "641560"
  },
  {
    "text": "stuck has a unique behavior in which an",
    "start": "641560",
    "end": "643600"
  },
  {
    "text": "empty source file automatically",
    "start": "643600",
    "end": "645200"
  },
  {
    "text": "translates to hello world thus allowing",
    "start": "645200",
    "end": "647639"
  },
  {
    "text": "for the smallest golf score possible",
    "start": "647639",
    "end": "650160"
  },
  {
    "text": "zero bytes pretty neat golfing languages",
    "start": "650160",
    "end": "653600"
  },
  {
    "text": "are extremely esoteric and therefore can",
    "start": "653600",
    "end": "656079"
  },
  {
    "text": "be very difficult to read but they are",
    "start": "656079",
    "end": "658320"
  },
  {
    "text": "still readable by most software",
    "start": "658320",
    "end": "660320"
  },
  {
    "text": "Engineers which is a lot better than our",
    "start": "660320",
    "end": "662920"
  },
  {
    "text": "last but certainly not least language",
    "start": "662920",
    "end": "665720"
  },
  {
    "start": "665000",
    "end": "788000"
  },
  {
    "text": "this language is called VTO and it's a",
    "start": "665720",
    "end": "668320"
  },
  {
    "text": "real doozy it also happens to be the",
    "start": "668320",
    "end": "670560"
  },
  {
    "text": "language I had the most trouble writing",
    "start": "670560",
    "end": "672279"
  },
  {
    "text": "hello world in and there's two reasons",
    "start": "672279",
    "end": "674519"
  },
  {
    "text": "for this the first is because the",
    "start": "674519",
    "end": "676360"
  },
  {
    "text": "language compiler only works in Windows",
    "start": "676360",
    "end": "679040"
  },
  {
    "text": "unless you use the JavaScript transpiler",
    "start": "679040",
    "end": "681560"
  },
  {
    "text": "this meant I had to break my separation",
    "start": "681560",
    "end": "683320"
  },
  {
    "text": "of church and state and load up some",
    "start": "683320",
    "end": "685120"
  },
  {
    "text": "code on my gaming PC the second reason",
    "start": "685120",
    "end": "688040"
  },
  {
    "text": "is because the comp ER doesn't read text",
    "start": "688040",
    "end": "690320"
  },
  {
    "text": "based source code instead it compiles",
    "start": "690320",
    "end": "692800"
  },
  {
    "text": "midi files midi is a file format that",
    "start": "692800",
    "end": "695320"
  },
  {
    "text": "provides a standardized way for music",
    "start": "695320",
    "end": "697079"
  },
  {
    "text": "sequences to be saved transported and",
    "start": "697079",
    "end": "699399"
  },
  {
    "text": "opened in other systems it's typically",
    "start": "699399",
    "end": "702040"
  },
  {
    "text": "created using musical instruments but",
    "start": "702040",
    "end": "704040"
  },
  {
    "text": "can also be created using software if",
    "start": "704040",
    "end": "706240"
  },
  {
    "text": "you happen to be one of the few",
    "start": "706240",
    "end": "707560"
  },
  {
    "text": "musicians software developer combos then",
    "start": "707560",
    "end": "710360"
  },
  {
    "text": "vato is probably going to be an easy",
    "start": "710360",
    "end": "712360"
  },
  {
    "text": "language for you to pick up however I",
    "start": "712360",
    "end": "714360"
  },
  {
    "text": "happen to be more on the tonee side of",
    "start": "714360",
    "end": "716279"
  },
  {
    "text": "the scale when it comes to musical",
    "start": "716279",
    "end": "717680"
  },
  {
    "text": "creativity which makes writing velato",
    "start": "717680",
    "end": "720120"
  },
  {
    "text": "more of a challenge fortunately there is",
    "start": "720120",
    "end": "722560"
  },
  {
    "text": "a tutorial on how to write hello world",
    "start": "722560",
    "end": "724720"
  },
  {
    "text": "using the guido notation system I'll",
    "start": "724720",
    "end": "726920"
  },
  {
    "text": "drop a link to this guide down below",
    "start": "726920",
    "end": "728959"
  },
  {
    "text": "given that this source code is a midi",
    "start": "728959",
    "end": "730760"
  },
  {
    "text": "file however this one is a little",
    "start": "730760",
    "end": "732800"
  },
  {
    "text": "difficult to show fortunately I happen",
    "start": "732800",
    "end": "734440"
  },
  {
    "text": "to have the musical score to hand for",
    "start": "734440",
    "end": "736279"
  },
  {
    "text": "those who are musically literate for the",
    "start": "736279",
    "end": "738720"
  },
  {
    "text": "rest of us well here is the sound of",
    "start": "738720",
    "end": "740880"
  },
  {
    "text": "hello world in C the musical key not the",
    "start": "740880",
    "end": "744240"
  },
  {
    "text": "language",
    "start": "744240",
    "end": "747240"
  },
  {
    "text": "enjoy",
    "start": "747880",
    "end": "750880"
  }
]