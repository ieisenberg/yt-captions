[
  {
    "text": "recently I was building a CLI",
    "start": "120",
    "end": "2120"
  },
  {
    "text": "application in go and I wanted to",
    "start": "2120",
    "end": "4319"
  },
  {
    "text": "display a progress spinner for a long",
    "start": "4319",
    "end": "6359"
  },
  {
    "text": "running task usually my first instinct",
    "start": "6359",
    "end": "9240"
  },
  {
    "text": "is to reach for a third-party package",
    "start": "9240",
    "end": "12000"
  },
  {
    "text": "however this time I decided I wanted to",
    "start": "12000",
    "end": "14200"
  },
  {
    "text": "build my own to do so I went about it",
    "start": "14200",
    "end": "16880"
  },
  {
    "text": "like I normally would thinking a little",
    "start": "16880",
    "end": "19000"
  },
  {
    "text": "about the design before jumping straight",
    "start": "19000",
    "end": "20680"
  },
  {
    "text": "into the code however after building it",
    "start": "20680",
    "end": "22880"
  },
  {
    "text": "for a couple of hours I still couldn't",
    "start": "22880",
    "end": "24920"
  },
  {
    "text": "get it to work as I kept running into",
    "start": "24920",
    "end": "27080"
  },
  {
    "text": "issues caused by concurrency so I",
    "start": "27080",
    "end": "29480"
  },
  {
    "text": "decided to scrap what I had and start",
    "start": "29480",
    "end": "31519"
  },
  {
    "text": "again from the beginning but this time I",
    "start": "31519",
    "end": "33760"
  },
  {
    "text": "was going to use test driven development",
    "start": "33760",
    "end": "36440"
  },
  {
    "text": "in hindsight I'm really glad that I did",
    "start": "36440",
    "end": "39120"
  },
  {
    "text": "because this component was a lot",
    "start": "39120",
    "end": "40760"
  },
  {
    "text": "trickier than I thought to get started I",
    "start": "40760",
    "end": "43879"
  },
  {
    "text": "decided to create a new project called",
    "start": "43879",
    "end": "45719"
  },
  {
    "text": "Terminal D UI which I then initialized",
    "start": "45719",
    "end": "48320"
  },
  {
    "text": "using the go mod init command followed",
    "start": "48320",
    "end": "50399"
  },
  {
    "text": "by opening it up in my favorite text",
    "start": "50399",
    "end": "52600"
  },
  {
    "text": "editor once inside I opened up my",
    "start": "52600",
    "end": "54680"
  },
  {
    "text": "telescope file browser and created a new",
    "start": "54680",
    "end": "57079"
  },
  {
    "text": "directory and file both called spinner",
    "start": "57079",
    "end": "59359"
  },
  {
    "text": "this directory would be the spinner",
    "start": "59359",
    "end": "60879"
  },
  {
    "text": "package and this file would contain the",
    "start": "60879",
    "end": "62680"
  },
  {
    "text": "main spinner code inside of this file I",
    "start": "62680",
    "end": "65198"
  },
  {
    "text": "first defined the package name followed",
    "start": "65199",
    "end": "67520"
  },
  {
    "text": "by creating a new struct type called",
    "start": "67520",
    "end": "69360"
  },
  {
    "text": "spinner whenever I begin building out a",
    "start": "69360",
    "end": "71520"
  },
  {
    "text": "new abstraction I always start with",
    "start": "71520",
    "end": "73400"
  },
  {
    "text": "designing the public interface by doing",
    "start": "73400",
    "end": "75600"
  },
  {
    "text": "so it helps me understand how I want the",
    "start": "75600",
    "end": "77680"
  },
  {
    "text": "component to work laying the foundation",
    "start": "77680",
    "end": "79840"
  },
  {
    "text": "for the actual implementation when it",
    "start": "79840",
    "end": "81960"
  },
  {
    "text": "came to the spinner the first idea I had",
    "start": "81960",
    "end": "84119"
  },
  {
    "text": "was to use a simple start and stop",
    "start": "84119",
    "end": "86280"
  },
  {
    "text": "method whilst I was initially happy with",
    "start": "86280",
    "end": "88439"
  },
  {
    "text": "this design I did feel like it opened up",
    "start": "88439",
    "end": "90360"
  },
  {
    "text": "the spinner to a number of different",
    "start": "90360",
    "end": "91799"
  },
  {
    "text": "edge cases such as what the expected",
    "start": "91799",
    "end": "94159"
  },
  {
    "text": "behavior of restarting a stopped spinner",
    "start": "94159",
    "end": "96320"
  },
  {
    "text": "was or what should happen if you call",
    "start": "96320",
    "end": "98200"
  },
  {
    "text": "start on a spinner that's already",
    "start": "98200",
    "end": "99840"
  },
  {
    "text": "spinning despite this however I did like",
    "start": "99840",
    "end": "102439"
  },
  {
    "text": "this interface design but I wanted to",
    "start": "102439",
    "end": "104759"
  },
  {
    "text": "see if I could simplify it in some way",
    "start": "104759",
    "end": "107399"
  },
  {
    "text": "and so I decided to play around with",
    "start": "107399",
    "end": "109280"
  },
  {
    "text": "removing the stop method instead only",
    "start": "109280",
    "end": "112000"
  },
  {
    "text": "having the single method of start in",
    "start": "112000",
    "end": "114399"
  },
  {
    "text": "order to actually stop the spinner I",
    "start": "114399",
    "end": "116119"
  },
  {
    "text": "decided to use a context. context which",
    "start": "116119",
    "end": "118439"
  },
  {
    "text": "would be passed into the start method as",
    "start": "118439",
    "end": "120399"
  },
  {
    "text": "a parameter whilst this approach was",
    "start": "120399",
    "end": "122439"
  },
  {
    "text": "less intuitive I felt like it removed a",
    "start": "122439",
    "end": "124680"
  },
  {
    "text": "lot of code and so for my initial",
    "start": "124680",
    "end": "126600"
  },
  {
    "text": "implementation I decided to roll with it",
    "start": "126600",
    "end": "129039"
  },
  {
    "text": "predictably however this decision ended",
    "start": "129039",
    "end": "131080"
  },
  {
    "text": "up being a mistake with the interface",
    "start": "131080",
    "end": "133480"
  },
  {
    "text": "defined the next thing to do was to",
    "start": "133480",
    "end": "135280"
  },
  {
    "text": "begin implementation and because I was",
    "start": "135280",
    "end": "137680"
  },
  {
    "text": "using tdd that meant beginning with a",
    "start": "137680",
    "end": "139879"
  },
  {
    "text": "test in order to do so I created a new",
    "start": "139879",
    "end": "142319"
  },
  {
    "text": "go file called spinner uncore test and",
    "start": "142319",
    "end": "144959"
  },
  {
    "text": "set the package name to be the same",
    "start": "144959",
    "end": "147040"
  },
  {
    "text": "after defining the test package I then",
    "start": "147040",
    "end": "148920"
  },
  {
    "text": "went about writing the code for my",
    "start": "148920",
    "end": "150519"
  },
  {
    "text": "initial test function the way TD works",
    "start": "150519",
    "end": "153160"
  },
  {
    "text": "is you start by defining your test case",
    "start": "153160",
    "end": "155760"
  },
  {
    "text": "and then write the least amount of code",
    "start": "155760",
    "end": "157280"
  },
  {
    "text": "in order to make it pass once it's",
    "start": "157280",
    "end": "159480"
  },
  {
    "text": "passing you can then go about",
    "start": "159480",
    "end": "160920"
  },
  {
    "text": "refactoring your implementation this is",
    "start": "160920",
    "end": "163239"
  },
  {
    "text": "known as the red green refactor Loop and",
    "start": "163239",
    "end": "165760"
  },
  {
    "text": "is actually a really interesting way to",
    "start": "165760",
    "end": "167440"
  },
  {
    "text": "build software the first test case I",
    "start": "167440",
    "end": "169519"
  },
  {
    "text": "decided to implement was that after a",
    "start": "169519",
    "end": "171319"
  },
  {
    "text": "scheduled period of time two frames",
    "start": "171319",
    "end": "173280"
  },
  {
    "text": "would be printed to the console via sdd",
    "start": "173280",
    "end": "175760"
  },
  {
    "text": "error unfortunately this presented a bit",
    "start": "175760",
    "end": "177720"
  },
  {
    "text": "of a problem as we needed a way to",
    "start": "177720",
    "end": "179560"
  },
  {
    "text": "capture what had been written to the",
    "start": "179560",
    "end": "181159"
  },
  {
    "text": "stream whilst there is a way to capture",
    "start": "181159",
    "end": "183480"
  },
  {
    "text": "SD error using operating system pipes",
    "start": "183480",
    "end": "185879"
  },
  {
    "text": "doing so adds a lot of complexity to the",
    "start": "185879",
    "end": "188000"
  },
  {
    "text": "tests not only that but because we're",
    "start": "188000",
    "end": "190000"
  },
  {
    "text": "patching a global value then it also has",
    "start": "190000",
    "end": "192480"
  },
  {
    "text": "the potential to cause some KnockOn",
    "start": "192480",
    "end": "194120"
  },
  {
    "text": "effects so I decided to use another",
    "start": "194120",
    "end": "196560"
  },
  {
    "text": "approach this approach was to Define an",
    "start": "196560",
    "end": "198680"
  },
  {
    "text": "io. writer property on the spinner which",
    "start": "198680",
    "end": "201120"
  },
  {
    "text": "would default to sdd error then in our",
    "start": "201120",
    "end": "203599"
  },
  {
    "text": "tests we could use dependency injection",
    "start": "203599",
    "end": "205599"
  },
  {
    "text": "to overwrite this property allowing us",
    "start": "205599",
    "end": "207400"
  },
  {
    "text": "to easily read the value to enable this",
    "start": "207400",
    "end": "209840"
  },
  {
    "text": "I like to use the Constructor pattern",
    "start": "209840",
    "end": "211879"
  },
  {
    "text": "which works by defining a function",
    "start": "211879",
    "end": "213439"
  },
  {
    "text": "called new which returns an instance of",
    "start": "213439",
    "end": "215319"
  },
  {
    "text": "the type in this case the spinner inside",
    "start": "215319",
    "end": "217799"
  },
  {
    "text": "of this function I configure an instance",
    "start": "217799",
    "end": "219680"
  },
  {
    "text": "with default properties which I can",
    "start": "219680",
    "end": "221480"
  },
  {
    "text": "override by using dependency injection",
    "start": "221480",
    "end": "223879"
  },
  {
    "text": "when it comes to go you can actually do",
    "start": "223879",
    "end": "225760"
  },
  {
    "text": "dependency injection via a number of",
    "start": "225760",
    "end": "227760"
  },
  {
    "text": "different ways and I actually have a",
    "start": "227760",
    "end": "229640"
  },
  {
    "text": "video plan for the future to look at",
    "start": "229640",
    "end": "231159"
  },
  {
    "text": "some of these different methods in this",
    "start": "231159",
    "end": "233040"
  },
  {
    "text": "case because I was setting default",
    "start": "233040",
    "end": "234720"
  },
  {
    "text": "values then I wanted the injected",
    "start": "234720",
    "end": "236560"
  },
  {
    "text": "dependencies to be optional and so I",
    "start": "236560",
    "end": "238959"
  },
  {
    "text": "decided to achieve this by using a new",
    "start": "238959",
    "end": "241000"
  },
  {
    "text": "type called config which itself",
    "start": "241000",
    "end": "243000"
  },
  {
    "text": "contained a property of io. writer this",
    "start": "243000",
    "end": "245680"
  },
  {
    "text": "config type would then be passed as a",
    "start": "245680",
    "end": "247280"
  },
  {
    "text": "parameter to the Constructor function",
    "start": "247280",
    "end": "249439"
  },
  {
    "text": "and if the io. writer was set inside of",
    "start": "249439",
    "end": "251760"
  },
  {
    "text": "the config this value would be used",
    "start": "251760",
    "end": "253640"
  },
  {
    "text": "instead of the Spinner's default this",
    "start": "253640",
    "end": "255879"
  },
  {
    "text": "approach made it easy for the tests to",
    "start": "255879",
    "end": "257680"
  },
  {
    "text": "overwrite this value whilst also",
    "start": "257680",
    "end": "259440"
  },
  {
    "text": "preventing end users from having to pass",
    "start": "259440",
    "end": "261320"
  },
  {
    "text": "in a default as well as a property of",
    "start": "261320",
    "end": "264000"
  },
  {
    "text": "io. writer I also wanted to add in",
    "start": "264000",
    "end": "266320"
  },
  {
    "text": "another property for the frame rate",
    "start": "266320",
    "end": "268360"
  },
  {
    "text": "which was of type time do duration and",
    "start": "268360",
    "end": "270800"
  },
  {
    "text": "would be used to determine how fast the",
    "start": "270800",
    "end": "272720"
  },
  {
    "text": "spinner would cycle through each of its",
    "start": "272720",
    "end": "274600"
  },
  {
    "text": "frames by default I set this to be 250",
    "start": "274600",
    "end": "278000"
  },
  {
    "text": "milliseconds which equal 4 frames per",
    "start": "278000",
    "end": "280600"
  },
  {
    "text": "second however I also made this",
    "start": "280600",
    "end": "282639"
  },
  {
    "text": "available to be overridden using the",
    "start": "282639",
    "end": "284600"
  },
  {
    "text": "constructor's config this made it so",
    "start": "284600",
    "end": "286800"
  },
  {
    "text": "that our tests could run quicker as they",
    "start": "286800",
    "end": "288680"
  },
  {
    "text": "could now configure the amount of time",
    "start": "288680",
    "end": "290160"
  },
  {
    "text": "it would take for a condition to be met",
    "start": "290160",
    "end": "292479"
  },
  {
    "text": "lastly I added another property to the",
    "start": "292479",
    "end": "294120"
  },
  {
    "text": "spinner called frames which was a slice",
    "start": "294120",
    "end": "296039"
  },
  {
    "text": "of runes used to represent each",
    "start": "296039",
    "end": "297880"
  },
  {
    "text": "individual frame in the spinner",
    "start": "297880",
    "end": "299320"
  },
  {
    "text": "animation",
    "start": "299320",
    "end": "300280"
  },
  {
    "text": "again I set this to its default value",
    "start": "300280",
    "end": "302160"
  },
  {
    "text": "inside of the Constructor function which",
    "start": "302160",
    "end": "304080"
  },
  {
    "text": "was set to four asky values for lines in",
    "start": "304080",
    "end": "306240"
  },
  {
    "text": "various different orientations when",
    "start": "306240",
    "end": "308440"
  },
  {
    "text": "these characters are used as an",
    "start": "308440",
    "end": "309800"
  },
  {
    "text": "animation it gives the appearance of a",
    "start": "309800",
    "end": "311720"
  },
  {
    "text": "line spinning in a clockwise Direction",
    "start": "311720",
    "end": "314280"
  },
  {
    "text": "with our properties defined and a way to",
    "start": "314280",
    "end": "315960"
  },
  {
    "text": "overwrite them the next thing to do was",
    "start": "315960",
    "end": "317680"
  },
  {
    "text": "to go and Implement my initial test",
    "start": "317680",
    "end": "319960"
  },
  {
    "text": "before I move on to how I did that",
    "start": "319960",
    "end": "321840"
  },
  {
    "text": "however let me first take a minute to",
    "start": "321840",
    "end": "323360"
  },
  {
    "text": "talk about the sponsor of today's video",
    "start": "323360",
    "end": "325520"
  },
  {
    "text": "brilliant.org one of the best things you",
    "start": "325520",
    "end": "328199"
  },
  {
    "text": "can do for your own personal development",
    "start": "328199",
    "end": "330199"
  },
  {
    "text": "is to learn a little every day and using",
    "start": "330199",
    "end": "333000"
  },
  {
    "text": "a platform such as brilliant can help",
    "start": "333000",
    "end": "334759"
  },
  {
    "text": "you to achieve This brilliant has",
    "start": "334759",
    "end": "336840"
  },
  {
    "text": "thousands of interactive lessons in math",
    "start": "336840",
    "end": "339280"
  },
  {
    "text": "data analysis programming and AI each of",
    "start": "339280",
    "end": "342280"
  },
  {
    "text": "these courses on brilliant encourages",
    "start": "342280",
    "end": "343880"
  },
  {
    "text": "you to learn by doing rather than just",
    "start": "343880",
    "end": "346000"
  },
  {
    "text": "by memorization additionally each of the",
    "start": "346000",
    "end": "348199"
  },
  {
    "text": "lessons are set up so you can learn a",
    "start": "348199",
    "end": "350000"
  },
  {
    "text": "little every day which makes it easier",
    "start": "350000",
    "end": "352080"
  },
  {
    "text": "to exercise your brain improving your",
    "start": "352080",
    "end": "354039"
  },
  {
    "text": "ability to learn which when it comes to",
    "start": "354039",
    "end": "356160"
  },
  {
    "text": "software development is extremely",
    "start": "356160",
    "end": "358039"
  },
  {
    "text": "important given how quickly the",
    "start": "358039",
    "end": "359880"
  },
  {
    "text": "landscape changes as well as helping you",
    "start": "359880",
    "end": "362039"
  },
  {
    "text": "to develop your learning capabilities",
    "start": "362039",
    "end": "363919"
  },
  {
    "text": "brilliant also helps you to build real",
    "start": "363919",
    "end": "365680"
  },
  {
    "text": "knowledge in just minutes every day such",
    "start": "365680",
    "end": "367960"
  },
  {
    "text": "as with the thinking in code course",
    "start": "367960",
    "end": "370440"
  },
  {
    "text": "which will not only teach you the",
    "start": "370440",
    "end": "371759"
  },
  {
    "text": "foundations of writing code but will",
    "start": "371759",
    "end": "373680"
  },
  {
    "text": "also teach you essential coding elements",
    "start": "373680",
    "end": "375840"
  },
  {
    "text": "such as Loops variables nesting and",
    "start": "375840",
    "end": "378560"
  },
  {
    "text": "conditionals so to try everything that",
    "start": "378560",
    "end": "380759"
  },
  {
    "text": "brilliant has to offer for a full 30",
    "start": "380759",
    "end": "382919"
  },
  {
    "text": "days visit brilliant.org dreamof code or",
    "start": "382919",
    "end": "386039"
  },
  {
    "text": "click the link in the description down",
    "start": "386039",
    "end": "387759"
  },
  {
    "text": "below you'll also get 20% of brilliant's",
    "start": "387759",
    "end": "390240"
  },
  {
    "text": "annual premium subscription a big thank",
    "start": "390240",
    "end": "392400"
  },
  {
    "text": "you to brilliant for sponsoring this",
    "start": "392400",
    "end": "394039"
  },
  {
    "text": "video now that my spinner had some",
    "start": "394039",
    "end": "396080"
  },
  {
    "text": "properties applied to it I was able to",
    "start": "396080",
    "end": "398000"
  },
  {
    "text": "implement my first test to do so I",
    "start": "398000",
    "end": "400720"
  },
  {
    "text": "instantiated an instance of the spinner",
    "start": "400720",
    "end": "402639"
  },
  {
    "text": "with a bite stop buffer and a frame rate",
    "start": "402639",
    "end": "404840"
  },
  {
    "text": "of 20 milliseconds then I created a",
    "start": "404840",
    "end": "407560"
  },
  {
    "text": "cancellation context with a timeout of",
    "start": "407560",
    "end": "409680"
  },
  {
    "text": "25 milliseconds which would be enough",
    "start": "409680",
    "end": "412039"
  },
  {
    "text": "time for the spinner to hit two frames",
    "start": "412039",
    "end": "414639"
  },
  {
    "text": "then I called the start method passing",
    "start": "414639",
    "end": "416360"
  },
  {
    "text": "in the cancellation context afterwards I",
    "start": "416360",
    "end": "418919"
  },
  {
    "text": "then pull out all of the written data",
    "start": "418919",
    "end": "420479"
  },
  {
    "text": "from the buffer using the read all",
    "start": "420479",
    "end": "422360"
  },
  {
    "text": "function of the io package because this",
    "start": "422360",
    "end": "424759"
  },
  {
    "text": "function can return an error it's",
    "start": "424759",
    "end": "426240"
  },
  {
    "text": "worthwhile adding in a check to ensure",
    "start": "426240",
    "end": "427919"
  },
  {
    "text": "that this is null when it comes to",
    "start": "427919",
    "end": "429639"
  },
  {
    "text": "testing in go I often refer to the",
    "start": "429639",
    "end": "431720"
  },
  {
    "text": "stretcher / testify package for my",
    "start": "431720",
    "end": "433879"
  },
  {
    "text": "assertions which I added to my project",
    "start": "433879",
    "end": "435960"
  },
  {
    "text": "using the following goget command after",
    "start": "435960",
    "end": "438479"
  },
  {
    "text": "asserting that the error didn't exist",
    "start": "438479",
    "end": "440440"
  },
  {
    "text": "the next thing to assert was that the",
    "start": "440440",
    "end": "441840"
  },
  {
    "text": "data from the buffer contained the",
    "start": "441840",
    "end": "443400"
  },
  {
    "text": "expected string this string consisted of",
    "start": "443400",
    "end": "445840"
  },
  {
    "text": "our first and second frame separated by",
    "start": "445840",
    "end": "448319"
  },
  {
    "text": "a back SLB this back SLB is a special",
    "start": "448319",
    "end": "451360"
  },
  {
    "text": "Escape character when it comes to the",
    "start": "451360",
    "end": "452879"
  },
  {
    "text": "terminal and is used to move the",
    "start": "452879",
    "end": "454639"
  },
  {
    "text": "character back one space this will cause",
    "start": "454639",
    "end": "457039"
  },
  {
    "text": "our spinner to replace each character",
    "start": "457039",
    "end": "458680"
  },
  {
    "text": "with the next frame which will make it",
    "start": "458680",
    "end": "460599"
  },
  {
    "text": "appear as if it's spinning with the test",
    "start": "460599",
    "end": "462800"
  },
  {
    "text": "now implemented I quickly checked that",
    "start": "462800",
    "end": "464720"
  },
  {
    "text": "it was working before moving on to",
    "start": "464720",
    "end": "466440"
  },
  {
    "text": "implement the code to make it pass as I",
    "start": "466440",
    "end": "468960"
  },
  {
    "text": "mentioned before when it comes to DDD",
    "start": "468960",
    "end": "471159"
  },
  {
    "text": "the idea is to write the least amount of",
    "start": "471159",
    "end": "473039"
  },
  {
    "text": "code in order to make the test pass",
    "start": "473039",
    "end": "475319"
  },
  {
    "text": "therefore for the start method I wrote a",
    "start": "475319",
    "end": "477319"
  },
  {
    "text": "simple iterator to iterate over each",
    "start": "477319",
    "end": "479159"
  },
  {
    "text": "frame convert that frame into a bite and",
    "start": "479159",
    "end": "481759"
  },
  {
    "text": "then write the bite to the internal io.",
    "start": "481759",
    "end": "484120"
  },
  {
    "text": "writer once the frame has been written",
    "start": "484120",
    "end": "486159"
  },
  {
    "text": "the next step is to use the select",
    "start": "486159",
    "end": "487840"
  },
  {
    "text": "keyword in order to wait on two",
    "start": "487840",
    "end": "489759"
  },
  {
    "text": "different channels the first channel is",
    "start": "489759",
    "end": "491879"
  },
  {
    "text": "the context DOD which if selected means",
    "start": "491879",
    "end": "494280"
  },
  {
    "text": "that the context is canceled and we want",
    "start": "494280",
    "end": "495960"
  },
  {
    "text": "to return out of the loop the second",
    "start": "495960",
    "end": "497840"
  },
  {
    "text": "channel is created using the after",
    "start": "497840",
    "end": "499599"
  },
  {
    "text": "function of the time package passing in",
    "start": "499599",
    "end": "501800"
  },
  {
    "text": "our frame duration when this channel is",
    "start": "501800",
    "end": "504080"
  },
  {
    "text": "invoked we want to continue with the for",
    "start": "504080",
    "end": "506000"
  },
  {
    "text": "Loop to the next frame therefore I'm",
    "start": "506000",
    "end": "508159"
  },
  {
    "text": "adding in the following line to break",
    "start": "508159",
    "end": "509919"
  },
  {
    "text": "out of the select statement causing the",
    "start": "509919",
    "end": "512120"
  },
  {
    "text": "loop to move on to the next iteration",
    "start": "512120",
    "end": "514560"
  },
  {
    "text": "before the next frame is printed however",
    "start": "514560",
    "end": "516320"
  },
  {
    "text": "I make sure to write the backspace",
    "start": "516320",
    "end": "518000"
  },
  {
    "text": "character to the internal writer which",
    "start": "518000",
    "end": "520120"
  },
  {
    "text": "will cause the next frame to overwrite",
    "start": "520120",
    "end": "521919"
  },
  {
    "text": "the previous character next I check if",
    "start": "521919",
    "end": "524039"
  },
  {
    "text": "I've written enough code in order to",
    "start": "524039",
    "end": "525800"
  },
  {
    "text": "make sure the test is passing which I",
    "start": "525800",
    "end": "527920"
  },
  {
    "text": "had managed to do meaning I was able to",
    "start": "527920",
    "end": "530040"
  },
  {
    "text": "move on to writing the next test case",
    "start": "530040",
    "end": "532360"
  },
  {
    "text": "before doing so however I take the",
    "start": "532360",
    "end": "534160"
  },
  {
    "text": "opportunity to refactor the test code",
    "start": "534160",
    "end": "536440"
  },
  {
    "text": "turning it into a parametric or table",
    "start": "536440",
    "end": "538839"
  },
  {
    "text": "driven test which is commonly used in go",
    "start": "538839",
    "end": "541600"
  },
  {
    "text": "by doing so it reduces the amount of",
    "start": "541600",
    "end": "543360"
  },
  {
    "text": "boiler plat needed for each test making",
    "start": "543360",
    "end": "545680"
  },
  {
    "text": "it much easier to test different",
    "start": "545680",
    "end": "547360"
  },
  {
    "text": "parameters once the code has been",
    "start": "547360",
    "end": "548959"
  },
  {
    "text": "refactored the next test I add is to",
    "start": "548959",
    "end": "551240"
  },
  {
    "text": "ensure that we get the correct output",
    "start": "551240",
    "end": "552880"
  },
  {
    "text": "when we wait for six frames when I go to",
    "start": "552880",
    "end": "555200"
  },
  {
    "text": "run this test it fails as expected which",
    "start": "555200",
    "end": "557800"
  },
  {
    "text": "means I can now implement the code to",
    "start": "557800",
    "end": "559680"
  },
  {
    "text": "fix it again by taking the approach of",
    "start": "559680",
    "end": "561760"
  },
  {
    "text": "writing the most minimal amount of code",
    "start": "561760",
    "end": "563680"
  },
  {
    "text": "for the test to pass all I end up doing",
    "start": "563680",
    "end": "565760"
  },
  {
    "text": "is wrapping the existing for Loop inside",
    "start": "565760",
    "end": "567839"
  },
  {
    "text": "of another one that will run",
    "start": "567839",
    "end": "569480"
  },
  {
    "text": "indefinitely which is enough for all of",
    "start": "569480",
    "end": "571480"
  },
  {
    "text": "the tests to pass whilst my spinner is",
    "start": "571480",
    "end": "574040"
  },
  {
    "text": "working as defined by the tests because",
    "start": "574040",
    "end": "576480"
  },
  {
    "text": "it's a UI based component I always find",
    "start": "576480",
    "end": "578720"
  },
  {
    "text": "it's worthwhile adding in a visual",
    "start": "578720",
    "end": "580440"
  },
  {
    "text": "integration to make sure it works as",
    "start": "580440",
    "end": "582279"
  },
  {
    "text": "intended for this project I achiev this",
    "start": "582279",
    "end": "584480"
  },
  {
    "text": "by setting up a new example application",
    "start": "584480",
    "end": "586959"
  },
  {
    "text": "which starts a spinner sleeps for 5",
    "start": "586959",
    "end": "588920"
  },
  {
    "text": "seconds and then stops it by cancelling",
    "start": "588920",
    "end": "591000"
  },
  {
    "text": "the context however when I went to run",
    "start": "591000",
    "end": "593399"
  },
  {
    "text": "the application it presented a couple of",
    "start": "593399",
    "end": "595399"
  },
  {
    "text": "bugs the first is that the spinner",
    "start": "595399",
    "end": "597279"
  },
  {
    "text": "didn't stop running this was happening",
    "start": "597279",
    "end": "599399"
  },
  {
    "text": "due to the spinner blocking the main",
    "start": "599399",
    "end": "601079"
  },
  {
    "text": "thread which meant that the line",
    "start": "601079",
    "end": "602720"
  },
  {
    "text": "cancelling our context was never being",
    "start": "602720",
    "end": "604480"
  },
  {
    "text": "called this Behavior wasn't being",
    "start": "604480",
    "end": "606399"
  },
  {
    "text": "encountered in the tests due to the fact",
    "start": "606399",
    "end": "608560"
  },
  {
    "text": "they were using the context. with",
    "start": "608560",
    "end": "610360"
  },
  {
    "text": "timeout method which meant that the",
    "start": "610360",
    "end": "612200"
  },
  {
    "text": "cancellation was happening",
    "start": "612200",
    "end": "613800"
  },
  {
    "text": "asynchronously therefore I added in",
    "start": "613800",
    "end": "615880"
  },
  {
    "text": "another test to check the asynchronous",
    "start": "615880",
    "end": "617839"
  },
  {
    "text": "behavior this sort of test can sometimes",
    "start": "617839",
    "end": "619920"
  },
  {
    "text": "be a little tricky to implement as you",
    "start": "619920",
    "end": "621959"
  },
  {
    "text": "want to make sure that the test also",
    "start": "621959",
    "end": "623519"
  },
  {
    "text": "exits and doesn't get stuck indefinitely",
    "start": "623519",
    "end": "625880"
  },
  {
    "text": "my approach to these tests is to run the",
    "start": "625880",
    "end": "627640"
  },
  {
    "text": "problematic function inside of a guru",
    "start": "627640",
    "end": "629320"
  },
  {
    "text": "routine which will then close a done",
    "start": "629320",
    "end": "631079"
  },
  {
    "text": "Channel after the function exits then",
    "start": "631079",
    "end": "633399"
  },
  {
    "text": "inside of the main test body I'll use a",
    "start": "633399",
    "end": "635360"
  },
  {
    "text": "select statement on both the done",
    "start": "635360",
    "end": "636800"
  },
  {
    "text": "Channel and a Time dot after if the done",
    "start": "636800",
    "end": "639360"
  },
  {
    "text": "channel is co then that means the",
    "start": "639360",
    "end": "640959"
  },
  {
    "text": "function exited however if the time dot",
    "start": "640959",
    "end": "643320"
  },
  {
    "text": "after is co then we can assume that the",
    "start": "643320",
    "end": "645279"
  },
  {
    "text": "method is still running and the test has",
    "start": "645279",
    "end": "647079"
  },
  {
    "text": "failed this meant the test would only",
    "start": "647079",
    "end": "648800"
  },
  {
    "text": "ever run up to 200 milliseconds before",
    "start": "648800",
    "end": "651120"
  },
  {
    "text": "exiting once I had the bug recreated The",
    "start": "651120",
    "end": "653600"
  },
  {
    "text": "Next Step was to implement a solution",
    "start": "653600",
    "end": "655880"
  },
  {
    "text": "for that I chose to run the entire logic",
    "start": "655880",
    "end": "658079"
  },
  {
    "text": "inside of the start function in a go",
    "start": "658079",
    "end": "660120"
  },
  {
    "text": "routine which meant that the spinner",
    "start": "660120",
    "end": "661880"
  },
  {
    "text": "would work asynchronously upon",
    "start": "661880",
    "end": "663880"
  },
  {
    "text": "implementing the solution my example now",
    "start": "663880",
    "end": "665959"
  },
  {
    "text": "worked however my tests were now failing",
    "start": "665959",
    "end": "668680"
  },
  {
    "text": "initially this was a little confusing",
    "start": "668680",
    "end": "670519"
  },
  {
    "text": "but the root cause ended up being the",
    "start": "670519",
    "end": "672160"
  },
  {
    "text": "latency caused by invoking a new go",
    "start": "672160",
    "end": "674399"
  },
  {
    "text": "routine I was able to solve this by",
    "start": "674399",
    "end": "676360"
  },
  {
    "text": "modifying my tests to not use the",
    "start": "676360",
    "end": "678360"
  },
  {
    "text": "context. with timeout method instead",
    "start": "678360",
    "end": "680800"
  },
  {
    "text": "using a time. sleep after starting the",
    "start": "680800",
    "end": "682920"
  },
  {
    "text": "spinner and then calling the context",
    "start": "682920",
    "end": "684800"
  },
  {
    "text": "cancel function afterwards at this point",
    "start": "684800",
    "end": "687360"
  },
  {
    "text": "I was starting to wonder if using a cont",
    "start": "687360",
    "end": "689320"
  },
  {
    "text": "text. context was the right decision the",
    "start": "689320",
    "end": "691720"
  },
  {
    "text": "good news was I didn't have to wait too",
    "start": "691720",
    "end": "693720"
  },
  {
    "text": "long to find out when testing the",
    "start": "693720",
    "end": "695959"
  },
  {
    "text": "example application to ensure that the",
    "start": "695959",
    "end": "697880"
  },
  {
    "text": "code was now working asynchronously I",
    "start": "697880",
    "end": "700200"
  },
  {
    "text": "discovered another minor bug this was",
    "start": "700200",
    "end": "702200"
  },
  {
    "text": "where one of the frames was left behind",
    "start": "702200",
    "end": "703880"
  },
  {
    "text": "when the spinner stopped in order to",
    "start": "703880",
    "end": "706000"
  },
  {
    "text": "solve it I needed to make sure I was",
    "start": "706000",
    "end": "707839"
  },
  {
    "text": "clearing the line when the context was",
    "start": "707839",
    "end": "709600"
  },
  {
    "text": "cancelled which meant I needed to write",
    "start": "709600",
    "end": "711560"
  },
  {
    "text": "in another backspace character before",
    "start": "711560",
    "end": "713959"
  },
  {
    "text": "implementing this I quickly modified the",
    "start": "713959",
    "end": "716040"
  },
  {
    "text": "expectations of my existing tests then",
    "start": "716040",
    "end": "718600"
  },
  {
    "text": "once I confirmed that my tests were",
    "start": "718600",
    "end": "720079"
  },
  {
    "text": "failing I went and added in the",
    "start": "720079",
    "end": "721639"
  },
  {
    "text": "following line to make them pass this",
    "start": "721639",
    "end": "723839"
  },
  {
    "text": "line would write in the backspace",
    "start": "723839",
    "end": "725279"
  },
  {
    "text": "character once the context was canceled",
    "start": "725279",
    "end": "727839"
  },
  {
    "text": "however when I went to run my tests it",
    "start": "727839",
    "end": "729880"
  },
  {
    "text": "didn't work neither of the tests had the",
    "start": "729880",
    "end": "732240"
  },
  {
    "text": "backspace character printed at the end",
    "start": "732240",
    "end": "734600"
  },
  {
    "text": "again I was a little confused however",
    "start": "734600",
    "end": "736959"
  },
  {
    "text": "after a little bit of trial and error I",
    "start": "736959",
    "end": "738959"
  },
  {
    "text": "realized that the context cancellation",
    "start": "738959",
    "end": "740800"
  },
  {
    "text": "function doesn't wait for the work to",
    "start": "740800",
    "end": "742600"
  },
  {
    "text": "complete this meant that the code would",
    "start": "742600",
    "end": "744720"
  },
  {
    "text": "continue before the backspace character",
    "start": "744720",
    "end": "746720"
  },
  {
    "text": "was written I was able to validate that",
    "start": "746720",
    "end": "748800"
  },
  {
    "text": "this was Happening by writing yet",
    "start": "748800",
    "end": "750440"
  },
  {
    "text": "another test one that would wait a",
    "start": "750440",
    "end": "752279"
  },
  {
    "text": "couple more frames after canceling the",
    "start": "752279",
    "end": "754079"
  },
  {
    "text": "context which ended up producing the",
    "start": "754079",
    "end": "756199"
  },
  {
    "text": "correct result unfortunately because I",
    "start": "756199",
    "end": "758360"
  },
  {
    "text": "had chosen to stop my spinner using a",
    "start": "758360",
    "end": "760360"
  },
  {
    "text": "context. context I was unable to perform",
    "start": "760360",
    "end": "763160"
  },
  {
    "text": "any thread synchronization this was",
    "start": "763160",
    "end": "765240"
  },
  {
    "text": "actually a very similar problem I",
    "start": "765240",
    "end": "766880"
  },
  {
    "text": "encountered when I wrote my initial",
    "start": "766880",
    "end": "768680"
  },
  {
    "text": "implementation and it was what caused me",
    "start": "768680",
    "end": "770720"
  },
  {
    "text": "to start again using tdd this time",
    "start": "770720",
    "end": "773480"
  },
  {
    "text": "however I had an idea on how to solve",
    "start": "773480",
    "end": "775160"
  },
  {
    "text": "the problem and I had the tests to",
    "start": "775160",
    "end": "777320"
  },
  {
    "text": "validate it but in order to do so I",
    "start": "777320",
    "end": "780079"
  },
  {
    "text": "needed to implement a stop method with",
    "start": "780079",
    "end": "782639"
  },
  {
    "text": "the method defined the next thing to do",
    "start": "782639",
    "end": "784440"
  },
  {
    "text": "was to modify my tests to make use of it",
    "start": "784440",
    "end": "787000"
  },
  {
    "text": "replacing any calls to the cancel",
    "start": "787000",
    "end": "788880"
  },
  {
    "text": "function then I went and ran my tests to",
    "start": "788880",
    "end": "791199"
  },
  {
    "text": "make sure that they were all failing",
    "start": "791199",
    "end": "793040"
  },
  {
    "text": "next I went about implementing my",
    "start": "793040",
    "end": "794800"
  },
  {
    "text": "solution which was actually very similar",
    "start": "794800",
    "end": "796639"
  },
  {
    "text": "to what I had already I started by",
    "start": "796639",
    "end": "798600"
  },
  {
    "text": "assigning a property of cancel Funk to",
    "start": "798600",
    "end": "800639"
  },
  {
    "text": "the spinner followed by creating a brand",
    "start": "800639",
    "end": "802720"
  },
  {
    "text": "new context and cancel Funk inside of",
    "start": "802720",
    "end": "804800"
  },
  {
    "text": "the start method I then assigned this",
    "start": "804800",
    "end": "806839"
  },
  {
    "text": "cancel Funk to the Spinner's property",
    "start": "806839",
    "end": "808720"
  },
  {
    "text": "followed by calling this cancel Funk",
    "start": "808720",
    "end": "810480"
  },
  {
    "text": "inside of the stop method this was",
    "start": "810480",
    "end": "812600"
  },
  {
    "text": "actually very similar to what I already",
    "start": "812600",
    "end": "814279"
  },
  {
    "text": "had however now it was all encapsulated",
    "start": "814279",
    "end": "816519"
  },
  {
    "text": "within the spinner so when I went to run",
    "start": "816519",
    "end": "818399"
  },
  {
    "text": "my tests they were now all passing",
    "start": "818399",
    "end": "820480"
  },
  {
    "text": "except for the ones with the missing",
    "start": "820480",
    "end": "822000"
  },
  {
    "text": "backspace character however now I was",
    "start": "822000",
    "end": "824320"
  },
  {
    "text": "able to implement a fix I started by",
    "start": "824320",
    "end": "826880"
  },
  {
    "text": "adding the most minimal code approach",
    "start": "826880",
    "end": "829040"
  },
  {
    "text": "which was a loadbearing time do sleep",
    "start": "829040",
    "end": "830800"
  },
  {
    "text": "with the duration of a single frame now",
    "start": "830800",
    "end": "832959"
  },
  {
    "text": "when I went to run my tests they were",
    "start": "832959",
    "end": "834600"
  },
  {
    "text": "passing however this was a bit of a",
    "start": "834600",
    "end": "836720"
  },
  {
    "text": "hacky solution but thinking back to the",
    "start": "836720",
    "end": "838720"
  },
  {
    "text": "red green loop I was now able to make my",
    "start": "838720",
    "end": "841120"
  },
  {
    "text": "refactor the approach I chose to use was",
    "start": "841120",
    "end": "843560"
  },
  {
    "text": "to make use of a done Channel which is",
    "start": "843560",
    "end": "845720"
  },
  {
    "text": "another idiomatic pattern when it comes",
    "start": "845720",
    "end": "847480"
  },
  {
    "text": "to go this channel will be created",
    "start": "847480",
    "end": "849519"
  },
  {
    "text": "inside of the spinner start method and",
    "start": "849519",
    "end": "851440"
  },
  {
    "text": "then assigned to the spinner property",
    "start": "851440",
    "end": "853800"
  },
  {
    "text": "then this channel will be closed after",
    "start": "853800",
    "end": "855399"
  },
  {
    "text": "the final backspace had been written in",
    "start": "855399",
    "end": "857279"
  },
  {
    "text": "the context. dun Method All That",
    "start": "857279",
    "end": "859639"
  },
  {
    "text": "remained now was to make use of this",
    "start": "859639",
    "end": "861079"
  },
  {
    "text": "done channel in the stop method",
    "start": "861079",
    "end": "863120"
  },
  {
    "text": "preventing it from returning until it",
    "start": "863120",
    "end": "864880"
  },
  {
    "text": "was closed if your brain is spinning at",
    "start": "864880",
    "end": "867079"
  },
  {
    "text": "this point then you're not alone mine",
    "start": "867079",
    "end": "868800"
  },
  {
    "text": "was also starting to do so as well",
    "start": "868800",
    "end": "870800"
  },
  {
    "text": "fortunately I had my test cases to prove",
    "start": "870800",
    "end": "872800"
  },
  {
    "text": "that everything was working as expected",
    "start": "872800",
    "end": "875079"
  },
  {
    "text": "which showed that the backspace",
    "start": "875079",
    "end": "876360"
  },
  {
    "text": "character was now being added I also",
    "start": "876360",
    "end": "878600"
  },
  {
    "text": "quickly modified my example application",
    "start": "878600",
    "end": "880440"
  },
  {
    "text": "to make use of this new stop method and",
    "start": "880440",
    "end": "882759"
  },
  {
    "text": "everything worked as expected however I",
    "start": "882759",
    "end": "885279"
  },
  {
    "text": "wasn't done yet as I needed to address",
    "start": "885279",
    "end": "887639"
  },
  {
    "text": "the main reason I didn't want to use a",
    "start": "887639",
    "end": "889160"
  },
  {
    "text": "stop method in the first place the",
    "start": "889160",
    "end": "891160"
  },
  {
    "text": "associated edge cases again I was going",
    "start": "891160",
    "end": "894040"
  },
  {
    "text": "to check these off using tdd and the",
    "start": "894040",
    "end": "896160"
  },
  {
    "text": "first test I wrote was to check what",
    "start": "896160",
    "end": "897880"
  },
  {
    "text": "happened if I called stop and a non-st",
    "start": "897880",
    "end": "899920"
  },
  {
    "text": "started spinner the expectation here was",
    "start": "899920",
    "end": "902040"
  },
  {
    "text": "that nothing should happen however",
    "start": "902040",
    "end": "903600"
  },
  {
    "text": "instead my test panicked caused by a no",
    "start": "903600",
    "end": "906079"
  },
  {
    "text": "pointer dfference again I took the",
    "start": "906079",
    "end": "908160"
  },
  {
    "text": "minimal code approach to solve this",
    "start": "908160",
    "end": "910120"
  },
  {
    "text": "which was to check if the done channel",
    "start": "910120",
    "end": "911720"
  },
  {
    "text": "was nil and return early if that was the",
    "start": "911720",
    "end": "913839"
  },
  {
    "text": "case this caused the test to pass so I",
    "start": "913839",
    "end": "916120"
  },
  {
    "text": "was able to move on to the next Edge",
    "start": "916120",
    "end": "917720"
  },
  {
    "text": "case which was checking what would",
    "start": "917720",
    "end": "919240"
  },
  {
    "text": "happen if I called the start method on",
    "start": "919240",
    "end": "921120"
  },
  {
    "text": "an already started spinner again my",
    "start": "921120",
    "end": "923519"
  },
  {
    "text": "expectation was nothing should happen",
    "start": "923519",
    "end": "925639"
  },
  {
    "text": "instead however it ended up causing two",
    "start": "925639",
    "end": "927720"
  },
  {
    "text": "progress Spinners to be writing into the",
    "start": "927720",
    "end": "929319"
  },
  {
    "text": "same stream at the same time again I",
    "start": "929319",
    "end": "931560"
  },
  {
    "text": "solved this using the most minimal code",
    "start": "931560",
    "end": "933639"
  },
  {
    "text": "I could which was to check if the done",
    "start": "933639",
    "end": "935480"
  },
  {
    "text": "channel was not nil which had sort of",
    "start": "935480",
    "end": "937600"
  },
  {
    "text": "become the de facto runtime check if",
    "start": "937600",
    "end": "940199"
  },
  {
    "text": "that was the case then the start",
    "start": "940199",
    "end": "941399"
  },
  {
    "text": "function would return early with this",
    "start": "941399",
    "end": "943319"
  },
  {
    "text": "test passing I was then able to move on",
    "start": "943319",
    "end": "945160"
  },
  {
    "text": "to my third and final Edge case which",
    "start": "945160",
    "end": "947639"
  },
  {
    "text": "was calling start on a spinner that had",
    "start": "947639",
    "end": "949519"
  },
  {
    "text": "been stopped my expectation for this",
    "start": "949519",
    "end": "951680"
  },
  {
    "text": "test was that it should restart from the",
    "start": "951680",
    "end": "953440"
  },
  {
    "text": "beginning however instead my spinner",
    "start": "953440",
    "end": "955519"
  },
  {
    "text": "refused to restart this was happening",
    "start": "955519",
    "end": "958000"
  },
  {
    "text": "because I wasn't res setting the spinner",
    "start": "958000",
    "end": "959720"
  },
  {
    "text": "State inside of the stop method and so",
    "start": "959720",
    "end": "962079"
  },
  {
    "text": "all I had to do was set the done channel",
    "start": "962079",
    "end": "963680"
  },
  {
    "text": "to be nil after waiting for it to be",
    "start": "963680",
    "end": "965519"
  },
  {
    "text": "closed with that all of my tests were",
    "start": "965519",
    "end": "967639"
  },
  {
    "text": "now passing and my edge cases had been",
    "start": "967639",
    "end": "969560"
  },
  {
    "text": "handled the last thing I wanted to do",
    "start": "969560",
    "end": "971480"
  },
  {
    "text": "was some refactoring especially as I now",
    "start": "971480",
    "end": "973680"
  },
  {
    "text": "had a good picture of how the code",
    "start": "973680",
    "end": "975240"
  },
  {
    "text": "worked the first thing I chose to do was",
    "start": "975240",
    "end": "977240"
  },
  {
    "text": "to remove the context parameter of the",
    "start": "977240",
    "end": "979120"
  },
  {
    "text": "start method given that this was now",
    "start": "979120",
    "end": "981120"
  },
  {
    "text": "useless with the stop method and by",
    "start": "981120",
    "end": "983240"
  },
  {
    "text": "using it you could actually cause the",
    "start": "983240",
    "end": "984880"
  },
  {
    "text": "spinner to be left in a bad state after",
    "start": "984880",
    "end": "987360"
  },
  {
    "text": "removing it I also had to make a few",
    "start": "987360",
    "end": "989000"
  },
  {
    "text": "changes inside of the test cases the",
    "start": "989000",
    "end": "991399"
  },
  {
    "text": "next thing I changed was to make use of",
    "start": "991399",
    "end": "993000"
  },
  {
    "text": "a time. ticker rather than using the",
    "start": "993000",
    "end": "995319"
  },
  {
    "text": "time. after function there's a very",
    "start": "995319",
    "end": "997519"
  },
  {
    "text": "slight difference between the way that",
    "start": "997519",
    "end": "998839"
  },
  {
    "text": "these two work however the tldr is that",
    "start": "998839",
    "end": "1001399"
  },
  {
    "text": "the time. ticker is more consistent once",
    "start": "1001399",
    "end": "1003920"
  },
  {
    "text": "I made this change I then checked that",
    "start": "1003920",
    "end": "1005440"
  },
  {
    "text": "my tests were still passing which they",
    "start": "1005440",
    "end": "1007560"
  },
  {
    "text": "were the next thing I wanted to refactor",
    "start": "1007560",
    "end": "1009680"
  },
  {
    "text": "was to add in a private helper method to",
    "start": "1009680",
    "end": "1011920"
  },
  {
    "text": "check if the spinner was running I added",
    "start": "1011920",
    "end": "1013959"
  },
  {
    "text": "this change just to make the code a",
    "start": "1013959",
    "end": "1015399"
  },
  {
    "text": "little bit more readable especially as",
    "start": "1015399",
    "end": "1017160"
  },
  {
    "text": "we had ended up using the done channel",
    "start": "1017160",
    "end": "1018519"
  },
  {
    "text": "to perform this check with the method",
    "start": "1018519",
    "end": "1020560"
  },
  {
    "text": "implemented I then made the following",
    "start": "1020560",
    "end": "1022319"
  },
  {
    "text": "changes to make use of it in both the",
    "start": "1022319",
    "end": "1024120"
  },
  {
    "text": "start and stop methods the final change",
    "start": "1024120",
    "end": "1027000"
  },
  {
    "text": "I decided to make was to add in some",
    "start": "1027000",
    "end": "1028600"
  },
  {
    "text": "thread safety using a read write mutex",
    "start": "1028600",
    "end": "1031079"
  },
  {
    "text": "from the sync package by doing so it",
    "start": "1031079",
    "end": "1033600"
  },
  {
    "text": "would help to prevent any race",
    "start": "1033600",
    "end": "1035079"
  },
  {
    "text": "conditions if using the spinner across",
    "start": "1035079",
    "end": "1036918"
  },
  {
    "text": "multiple go routines once added I",
    "start": "1036919",
    "end": "1039199"
  },
  {
    "text": "verified that everything was working by",
    "start": "1039199",
    "end": "1040798"
  },
  {
    "text": "running my unit tests and checking my",
    "start": "1040799",
    "end": "1042918"
  },
  {
    "text": "example integration lastly all that",
    "start": "1042919",
    "end": "1045160"
  },
  {
    "text": "remained was to initialize a git",
    "start": "1045160",
    "end": "1046839"
  },
  {
    "text": "repository add and commit the code and",
    "start": "1046839",
    "end": "1049080"
  },
  {
    "text": "then push it to a remote repo",
    "start": "1049080",
    "end": "1053720"
  }
]