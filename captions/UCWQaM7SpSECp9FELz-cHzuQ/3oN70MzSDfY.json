[
  {
    "start": "0",
    "end": "28000"
  },
  {
    "text": "software developers we're an opinionated",
    "start": "280",
    "end": "3080"
  },
  {
    "text": "Bunch yes especially when it comes to",
    "start": "3080",
    "end": "5759"
  },
  {
    "text": "our favorite Tex Stacks fortunately",
    "start": "5759",
    "end": "8320"
  },
  {
    "text": "stack Overflow provides us with an",
    "start": "8320",
    "end": "10200"
  },
  {
    "text": "annual survey which we can use to",
    "start": "10200",
    "end": "12280"
  },
  {
    "text": "provide data on why our chosen Tech",
    "start": "12280",
    "end": "14240"
  },
  {
    "text": "stack is the best my opinions the only",
    "start": "14240",
    "end": "16680"
  },
  {
    "text": "one that counts and that's exactly what",
    "start": "16680",
    "end": "18640"
  },
  {
    "text": "I'm going to do with this video I'm",
    "start": "18640",
    "end": "20359"
  },
  {
    "text": "going to create a crowd app using the",
    "start": "20359",
    "end": "22039"
  },
  {
    "text": "most loved Technologies according to the",
    "start": "22039",
    "end": "24720"
  },
  {
    "text": "2023 stack Overflow developer survey",
    "start": "24720",
    "end": "28519"
  },
  {
    "start": "28000",
    "end": "117000"
  },
  {
    "text": "first we need to find out which language",
    "start": "28519",
    "end": "30279"
  },
  {
    "text": "we're going to use for our crud app",
    "start": "30279",
    "end": "32960"
  },
  {
    "text": "let's open up the 2023 developer survey",
    "start": "32960",
    "end": "35640"
  },
  {
    "text": "and check out the programming scripting",
    "start": "35640",
    "end": "37559"
  },
  {
    "text": "and markup languages section this list",
    "start": "37559",
    "end": "40200"
  },
  {
    "text": "contains some languages that are a",
    "start": "40200",
    "end": "41920"
  },
  {
    "text": "little concerning such as matlb cobal",
    "start": "41920",
    "end": "44840"
  },
  {
    "text": "and Visual Basic which I really don't",
    "start": "44840",
    "end": "47360"
  },
  {
    "text": "want to be building a CR app with",
    "start": "47360",
    "end": "49280"
  },
  {
    "text": "luckily these are at the lower end of",
    "start": "49280",
    "end": "51160"
  },
  {
    "text": "the spectrum unfortunately I'm not doing",
    "start": "51160",
    "end": "53280"
  },
  {
    "text": "a video on the most despised Tex St not",
    "start": "53280",
    "end": "55920"
  },
  {
    "text": "until I hit at least 75,000 Subs so uh",
    "start": "55920",
    "end": "59359"
  },
  {
    "text": "please don't press that subscribe button",
    "start": "59359",
    "end": "61199"
  },
  {
    "text": "fortunately on the other end of the list",
    "start": "61199",
    "end": "62960"
  },
  {
    "text": "we have rust as the most loved language",
    "start": "62960",
    "end": "65640"
  },
  {
    "text": "just beating out Elixir for first place",
    "start": "65640",
    "end": "68000"
  },
  {
    "text": "perfect we'll go with that next we need",
    "start": "68000",
    "end": "70680"
  },
  {
    "text": "a web framework while stack Overflow",
    "start": "70680",
    "end": "73080"
  },
  {
    "text": "does provide a list of the most loved",
    "start": "73080",
    "end": "75119"
  },
  {
    "text": "web Frameworks it doesn't provide an",
    "start": "75119",
    "end": "77320"
  },
  {
    "text": "option for any rust based one it does",
    "start": "77320",
    "end": "79759"
  },
  {
    "text": "provide one for Elixir through Phoenix",
    "start": "79759",
    "end": "82360"
  },
  {
    "text": "but as we're not using Elixir well it's",
    "start": "82360",
    "end": "84360"
  },
  {
    "text": "no good fortunately however I have done",
    "start": "84360",
    "end": "86640"
  },
  {
    "text": "a video on my own favorite rust web",
    "start": "86640",
    "end": "88759"
  },
  {
    "text": "framework but when we're not going to",
    "start": "88759",
    "end": "90320"
  },
  {
    "text": "use it in this video instead we're going",
    "start": "90320",
    "end": "92479"
  },
  {
    "text": "to use axom which a lot of you had a",
    "start": "92479",
    "end": "95079"
  },
  {
    "text": "high amount of praise for in the",
    "start": "95079",
    "end": "96520"
  },
  {
    "text": "comments so it feels like a good choice",
    "start": "96520",
    "end": "99000"
  },
  {
    "text": "for our most loved text stack lastly",
    "start": "99000",
    "end": "102280"
  },
  {
    "text": "every good CR up needs a database",
    "start": "102280",
    "end": "104640"
  },
  {
    "text": "luckily for me postgres is the winner",
    "start": "104640",
    "end": "106799"
  },
  {
    "text": "here on the stack Overflow developer",
    "start": "106799",
    "end": "108320"
  },
  {
    "text": "survey although I wouldn't have minded",
    "start": "108320",
    "end": "110079"
  },
  {
    "text": "using reddis which came in at a close",
    "start": "110079",
    "end": "112159"
  },
  {
    "text": "second with our application stack",
    "start": "112159",
    "end": "114320"
  },
  {
    "text": "decided let's take a quick peek at what",
    "start": "114320",
    "end": "116240"
  },
  {
    "text": "we're going to build for this video",
    "start": "116240",
    "end": "118399"
  },
  {
    "start": "117000",
    "end": "238000"
  },
  {
    "text": "we're going to create a simple crud app",
    "start": "118399",
    "end": "120360"
  },
  {
    "text": "to manage book quotes using an HTTP Json",
    "start": "120360",
    "end": "123159"
  },
  {
    "text": "API interface our application will allow",
    "start": "123159",
    "end": "125799"
  },
  {
    "text": "for crud operations using the following",
    "start": "125799",
    "end": "127719"
  },
  {
    "text": "API endpoints and our data model will",
    "start": "127719",
    "end": "130360"
  },
  {
    "text": "consist of the book title and the quote",
    "start": "130360",
    "end": "132480"
  },
  {
    "text": "itself simple stuff we're also going to",
    "start": "132480",
    "end": "135400"
  },
  {
    "text": "deploy this application to the cloud for",
    "start": "135400",
    "end": "137319"
  },
  {
    "text": "free but more on that in a minute first",
    "start": "137319",
    "end": "140280"
  },
  {
    "text": "we need to create a new project using",
    "start": "140280",
    "end": "142120"
  },
  {
    "text": "cargo you can do so by using the cargo",
    "start": "142120",
    "end": "144560"
  },
  {
    "text": "new command in your terminal for this",
    "start": "144560",
    "end": "146640"
  },
  {
    "text": "project we're using rust 1.72 so make",
    "start": "146640",
    "end": "149560"
  },
  {
    "text": "sure to install it using rust up as per",
    "start": "149560",
    "end": "151640"
  },
  {
    "text": "your operating system with our project",
    "start": "151640",
    "end": "153840"
  },
  {
    "text": "set up we now need to add in the",
    "start": "153840",
    "end": "155319"
  },
  {
    "text": "dependencies via the cargo. tommo the",
    "start": "155319",
    "end": "158160"
  },
  {
    "text": "dependencies we want are axon which is",
    "start": "158160",
    "end": "160280"
  },
  {
    "text": "our web server Sur and Sur Json for",
    "start": "160280",
    "end": "163239"
  },
  {
    "text": "encoding and decoding Tokyo which is our",
    "start": "163239",
    "end": "166440"
  },
  {
    "text": "application's asynchronous runtime SQL X",
    "start": "166440",
    "end": "169360"
  },
  {
    "text": "which allows us to connect to our",
    "start": "169360",
    "end": "170720"
  },
  {
    "text": "postgres database and The UU ID and",
    "start": "170720",
    "end": "173560"
  },
  {
    "text": "Chrono data types which will allow us to",
    "start": "173560",
    "end": "175280"
  },
  {
    "text": "store unique identifiers and timestamps",
    "start": "175280",
    "end": "177800"
  },
  {
    "text": "in our data model when adding these to",
    "start": "177800",
    "end": "179680"
  },
  {
    "text": "your your own cargo. toml make sure to",
    "start": "179680",
    "end": "181480"
  },
  {
    "text": "set the same feature flags as I have",
    "start": "181480",
    "end": "183560"
  },
  {
    "text": "with our initial dependencies added",
    "start": "183560",
    "end": "185239"
  },
  {
    "text": "let's whip up a basic service to begin",
    "start": "185239",
    "end": "188040"
  },
  {
    "text": "open up the main. RS file in your text",
    "start": "188040",
    "end": "190319"
  },
  {
    "text": "editor then go ahead and delete",
    "start": "190319",
    "end": "192560"
  },
  {
    "text": "everything inside of it next add in the",
    "start": "192560",
    "end": "195280"
  },
  {
    "text": "following lines of code here we're",
    "start": "195280",
    "end": "197040"
  },
  {
    "text": "creating an asynchronous main function",
    "start": "197040",
    "end": "198840"
  },
  {
    "text": "to initialize our application which will",
    "start": "198840",
    "end": "201239"
  },
  {
    "text": "create and start an axom server on Port",
    "start": "201239",
    "end": "203840"
  },
  {
    "text": "3,000 next we want to create a health",
    "start": "203840",
    "end": "206040"
  },
  {
    "text": "check endpoint which will return the",
    "start": "206040",
    "end": "207480"
  },
  {
    "text": "status code of 200 we can create this",
    "start": "207480",
    "end": "209840"
  },
  {
    "text": "using the following function and binding",
    "start": "209840",
    "end": "211680"
  },
  {
    "text": "it to our SL path in the application",
    "start": "211680",
    "end": "214120"
  },
  {
    "text": "router now we can go ahead and test this",
    "start": "214120",
    "end": "216760"
  },
  {
    "text": "code let's open up a new terminal window",
    "start": "216760",
    "end": "219120"
  },
  {
    "text": "and use the cargo run command to both",
    "start": "219120",
    "end": "221000"
  },
  {
    "text": "build and run our application once the",
    "start": "221000",
    "end": "223680"
  },
  {
    "text": "application is running we can open up",
    "start": "223680",
    "end": "225239"
  },
  {
    "text": "another terminal window and send a c",
    "start": "225239",
    "end": "227040"
  },
  {
    "text": "request to Local Host 3000 we receive",
    "start": "227040",
    "end": "229599"
  },
  {
    "text": "back the HTTP status code of 200 or okay",
    "start": "229599",
    "end": "233319"
  },
  {
    "text": "which tells us everything is working",
    "start": "233319",
    "end": "235040"
  },
  {
    "text": "correctly so far so good so what's next",
    "start": "235040",
    "end": "238079"
  },
  {
    "start": "238000",
    "end": "456000"
  },
  {
    "text": "well personally I like to deploy my",
    "start": "238079",
    "end": "239920"
  },
  {
    "text": "applications as soon as possible the",
    "start": "239920",
    "end": "242040"
  },
  {
    "text": "reason for this is that it's always",
    "start": "242040",
    "end": "243560"
  },
  {
    "text": "easier to do so when the application is",
    "start": "243560",
    "end": "245760"
  },
  {
    "text": "less complex this also means it's much",
    "start": "245760",
    "end": "248040"
  },
  {
    "text": "easier to discover any problems as you",
    "start": "248040",
    "end": "249959"
  },
  {
    "text": "iterate rather than having to sift",
    "start": "249959",
    "end": "251680"
  },
  {
    "text": "through a larger amount of code later on",
    "start": "251680",
    "end": "254120"
  },
  {
    "text": "we have a few options to deploy this",
    "start": "254120",
    "end": "256400"
  },
  {
    "text": "typically I'd use my new home lab but",
    "start": "256400",
    "end": "258519"
  },
  {
    "text": "that's not ideal for everyone following",
    "start": "258519",
    "end": "260320"
  },
  {
    "text": "at home at least until I start doing",
    "start": "260320",
    "end": "262360"
  },
  {
    "text": "some more home lab based content still I",
    "start": "262360",
    "end": "265199"
  },
  {
    "text": "wanted a free option which typically",
    "start": "265199",
    "end": "267320"
  },
  {
    "text": "Cloud providers such as AWS don't really",
    "start": "267320",
    "end": "269960"
  },
  {
    "text": "provide so I'm going to use the sponsor",
    "start": "269960",
    "end": "272400"
  },
  {
    "text": "of today's video flow to deploy our",
    "start": "272400",
    "end": "274639"
  },
  {
    "text": "application flow's Bas offering provides",
    "start": "274639",
    "end": "276960"
  },
  {
    "text": "us with a free application and a",
    "start": "276960",
    "end": "278960"
  },
  {
    "text": "database which is harder and harder to",
    "start": "278960",
    "end": "280680"
  },
  {
    "text": "find in this economy that database also",
    "start": "280680",
    "end": "283400"
  },
  {
    "text": "happens to be postr so it'll work with",
    "start": "283400",
    "end": "285800"
  },
  {
    "text": "our chosen text a in order to deploy to",
    "start": "285800",
    "end": "288280"
  },
  {
    "text": "flow we're going to first need to",
    "start": "288280",
    "end": "289680"
  },
  {
    "text": "containerize our application fortunately",
    "start": "289680",
    "end": "292000"
  },
  {
    "text": "Docker also happens to sit pretty high",
    "start": "292000",
    "end": "293880"
  },
  {
    "text": "on the most love Technologies list I",
    "start": "293880",
    "end": "296199"
  },
  {
    "text": "love it when a plan comes together let's",
    "start": "296199",
    "end": "298199"
  },
  {
    "text": "go ahead and create a Docker file for",
    "start": "298199",
    "end": "299960"
  },
  {
    "text": "use the flow documentation has an",
    "start": "299960",
    "end": "302240"
  },
  {
    "text": "example on how to do this for rust",
    "start": "302240",
    "end": "304280"
  },
  {
    "text": "applications let's go ahead and copy",
    "start": "304280",
    "end": "306520"
  },
  {
    "text": "this pasting it in we then need to make",
    "start": "306520",
    "end": "308720"
  },
  {
    "text": "a few modifications in order to work for",
    "start": "308720",
    "end": "310680"
  },
  {
    "text": "our own application the first is to",
    "start": "310680",
    "end": "312600"
  },
  {
    "text": "change the version of rust to",
    "start": "312600",
    "end": "314800"
  },
  {
    "text": "1.72 the second is to build our app in",
    "start": "314800",
    "end": "317280"
  },
  {
    "text": "release mode which gives us much better",
    "start": "317280",
    "end": "319160"
  },
  {
    "text": "performance and lastly we just need to",
    "start": "319160",
    "end": "321520"
  },
  {
    "text": "change the reference of template D rust",
    "start": "321520",
    "end": "323880"
  },
  {
    "text": "to our application's name quotes with",
    "start": "323880",
    "end": "326759"
  },
  {
    "text": "our Docker file complete we can test",
    "start": "326759",
    "end": "328360"
  },
  {
    "text": "that it's working using the dock build",
    "start": "328360",
    "end": "330120"
  },
  {
    "text": "command and if everything works you",
    "start": "330120",
    "end": "331840"
  },
  {
    "text": "should see a similar output as on screen",
    "start": "331840",
    "end": "334479"
  },
  {
    "text": "now we can actually test that the",
    "start": "334479",
    "end": "335880"
  },
  {
    "text": "application runs by using the docker run",
    "start": "335880",
    "end": "337960"
  },
  {
    "text": "command and exposing our Port of 3000",
    "start": "337960",
    "end": "340800"
  },
  {
    "text": "once it's running we can run the other",
    "start": "340800",
    "end": "342280"
  },
  {
    "text": "curl command as we did before so far so",
    "start": "342280",
    "end": "345000"
  },
  {
    "text": "good however we need to make one more",
    "start": "345000",
    "end": "346960"
  },
  {
    "text": "change for our app to work with flow the",
    "start": "346960",
    "end": "349280"
  },
  {
    "text": "documentation recommends dynamically",
    "start": "349280",
    "end": "350880"
  },
  {
    "text": "setting your web server Port based on an",
    "start": "350880",
    "end": "353199"
  },
  {
    "text": "environment variable passed into the",
    "start": "353199",
    "end": "354840"
  },
  {
    "text": "application to make that change let's",
    "start": "354840",
    "end": "356880"
  },
  {
    "text": "head on back over to our main. RS file",
    "start": "356880",
    "end": "359039"
  },
  {
    "text": "and add in the following line to pull",
    "start": "359039",
    "end": "360800"
  },
  {
    "text": "out the port from an environment",
    "start": "360800",
    "end": "362199"
  },
  {
    "text": "variable or fall back to Port 3000 if",
    "start": "362199",
    "end": "364639"
  },
  {
    "text": "the nvar doesn't exist with the code",
    "start": "364639",
    "end": "367080"
  },
  {
    "text": "changes and Docker file completes we now",
    "start": "367080",
    "end": "369039"
  },
  {
    "text": "need to get our code into a remote",
    "start": "369039",
    "end": "371080"
  },
  {
    "text": "repository flow integrates with GitHub",
    "start": "371080",
    "end": "373880"
  },
  {
    "text": "so let's go ahead and create a new",
    "start": "373880",
    "end": "375160"
  },
  {
    "text": "repository for our code then we can go",
    "start": "375160",
    "end": "377759"
  },
  {
    "text": "ahead and commit our code add the",
    "start": "377759",
    "end": "380120"
  },
  {
    "text": "repository as the origin and push it on",
    "start": "380120",
    "end": "382880"
  },
  {
    "text": "up now we're ready to deploy our",
    "start": "382880",
    "end": "385199"
  },
  {
    "text": "application to do so first sign in to",
    "start": "385199",
    "end": "387759"
  },
  {
    "text": "flow and then create a new workspace",
    "start": "387759",
    "end": "389800"
  },
  {
    "text": "followed by adding a new project will'll",
    "start": "389800",
    "end": "391880"
  },
  {
    "text": "give ours the name of most loved crud",
    "start": "391880",
    "end": "393880"
  },
  {
    "text": "app next we need to link our GitHub",
    "start": "393880",
    "end": "395960"
  },
  {
    "text": "account so flow can access our code then",
    "start": "395960",
    "end": "398039"
  },
  {
    "text": "we can create a new application with our",
    "start": "398039",
    "end": "399840"
  },
  {
    "text": "repo in the application settings check",
    "start": "399840",
    "end": "402000"
  },
  {
    "text": "to make sure you're using the correct",
    "start": "402000",
    "end": "403520"
  },
  {
    "text": "branch and select the region you want to",
    "start": "403520",
    "end": "405280"
  },
  {
    "text": "deploy on you can also see the port",
    "start": "405280",
    "end": "407199"
  },
  {
    "text": "environment variable here as well which",
    "start": "407199",
    "end": "409080"
  },
  {
    "text": "you can change to whatever you like",
    "start": "409080",
    "end": "410880"
  },
  {
    "text": "after clicking deploy we get some lovely",
    "start": "410880",
    "end": "412680"
  },
  {
    "text": "confetti and we can check the build and",
    "start": "412680",
    "end": "414440"
  },
  {
    "text": "deploy logs for our applications code by",
    "start": "414440",
    "end": "417160"
  },
  {
    "text": "the way flow are launching on product",
    "start": "417160",
    "end": "418879"
  },
  {
    "text": "hunt so be sure to check them out there",
    "start": "418879",
    "end": "420919"
  },
  {
    "text": "you can check the link in the",
    "start": "420919",
    "end": "421840"
  },
  {
    "text": "description down below after a short",
    "start": "421840",
    "end": "424160"
  },
  {
    "text": "while everything should be deployed",
    "start": "424160",
    "end": "425759"
  },
  {
    "text": "correctly and we can go ahead and test",
    "start": "425759",
    "end": "427720"
  },
  {
    "text": "our application using the provided URL",
    "start": "427720",
    "end": "430720"
  },
  {
    "text": "with that we have our app deployed with",
    "start": "430720",
    "end": "433000"
  },
  {
    "text": "no cost very cool with everything",
    "start": "433000",
    "end": "435639"
  },
  {
    "text": "deployed now is a good time to refactor",
    "start": "435639",
    "end": "437560"
  },
  {
    "text": "our code let's first create a new",
    "start": "437560",
    "end": "439639"
  },
  {
    "text": "handlers. RS file which will use to",
    "start": "439639",
    "end": "441680"
  },
  {
    "text": "store all of our Handler logic we can",
    "start": "441680",
    "end": "443919"
  },
  {
    "text": "start by moving the health Handler into",
    "start": "443919",
    "end": "445840"
  },
  {
    "text": "here as a first step then we can head on",
    "start": "445840",
    "end": "448360"
  },
  {
    "text": "back over to our main function function",
    "start": "448360",
    "end": "450319"
  },
  {
    "text": "import the Handler module and use it",
    "start": "450319",
    "end": "452400"
  },
  {
    "text": "with our SL endpoint now we're ready to",
    "start": "452400",
    "end": "455840"
  },
  {
    "text": "proceed the next thing we want to do is",
    "start": "455840",
    "end": "458160"
  },
  {
    "start": "456000",
    "end": "804000"
  },
  {
    "text": "start creating our crud endpoints the",
    "start": "458160",
    "end": "460919"
  },
  {
    "text": "best place to start a book is always at",
    "start": "460919",
    "end": "462800"
  },
  {
    "text": "the beginning let's do the same here and",
    "start": "462800",
    "end": "465240"
  },
  {
    "text": "start with the letter c AKA create as",
    "start": "465240",
    "end": "469120"
  },
  {
    "text": "we're building a restful API the create",
    "start": "469120",
    "end": "471400"
  },
  {
    "text": "endpoint will be a post method to the/",
    "start": "471400",
    "end": "473879"
  },
  {
    "text": "quotes path this endpoint will accept a",
    "start": "473879",
    "end": "476400"
  },
  {
    "text": "request body with the Json schema as on",
    "start": "476400",
    "end": "478639"
  },
  {
    "text": "screen which is is an object that",
    "start": "478639",
    "end": "480400"
  },
  {
    "text": "expects a string for both the book and",
    "start": "480400",
    "end": "482879"
  },
  {
    "text": "quote fields to represent this we can",
    "start": "482879",
    "end": "485120"
  },
  {
    "text": "create a new struct in Rust and use the",
    "start": "485120",
    "end": "487720"
  },
  {
    "text": "serdy macros to easily support the",
    "start": "487720",
    "end": "490039"
  },
  {
    "text": "deserialization of our input model with",
    "start": "490039",
    "end": "492840"
  },
  {
    "text": "this model defined we can now add our",
    "start": "492840",
    "end": "494720"
  },
  {
    "text": "Handler function I got to say the",
    "start": "494720",
    "end": "496919"
  },
  {
    "text": "recommendation to use axom was pretty",
    "start": "496919",
    "end": "499080"
  },
  {
    "text": "spoton it's a really nice framework to",
    "start": "499080",
    "end": "501680"
  },
  {
    "text": "use especially for removing boiler",
    "start": "501680",
    "end": "503479"
  },
  {
    "text": "plates such as request body decoding",
    "start": "503479",
    "end": "505520"
  },
  {
    "text": "that you typically have to do with other",
    "start": "505520",
    "end": "507199"
  },
  {
    "text": "Frameworks so far I'm impressed",
    "start": "507199",
    "end": "510120"
  },
  {
    "text": "with our route defined we can now start",
    "start": "510120",
    "end": "511879"
  },
  {
    "text": "thinking about our database integration",
    "start": "511879",
    "end": "514200"
  },
  {
    "text": "to achieve this we're going to use the",
    "start": "514200",
    "end": "515599"
  },
  {
    "text": "SQL X package for rust which works with",
    "start": "515599",
    "end": "518080"
  },
  {
    "text": "both postgres and Tokyo which is the",
    "start": "518080",
    "end": "520320"
  },
  {
    "text": "asynchronous runtime for axom it also",
    "start": "520320",
    "end": "522640"
  },
  {
    "text": "happens to be my favorite SQL driver for",
    "start": "522640",
    "end": "525000"
  },
  {
    "text": "rust and I have a pretty decent video on",
    "start": "525000",
    "end": "527399"
  },
  {
    "text": "how to use it to begin let's head back",
    "start": "527399",
    "end": "529360"
  },
  {
    "text": "over to our main function the first",
    "start": "529360",
    "end": "531360"
  },
  {
    "text": "thing we want to do is pull out the",
    "start": "531360",
    "end": "532800"
  },
  {
    "text": "database URL from the associated",
    "start": "532800",
    "end": "534720"
  },
  {
    "text": "environment variable we'll also throw an",
    "start": "534720",
    "end": "536680"
  },
  {
    "text": "exception if this doesn't exist next we",
    "start": "536680",
    "end": "538920"
  },
  {
    "text": "can then create create our PG pool",
    "start": "538920",
    "end": "540760"
  },
  {
    "text": "options passing in the database URL we",
    "start": "540760",
    "end": "543320"
  },
  {
    "text": "can then provide the database pool to",
    "start": "543320",
    "end": "545120"
  },
  {
    "text": "our handlers using the with State",
    "start": "545120",
    "end": "546959"
  },
  {
    "text": "function this way our HTTP Handler",
    "start": "546959",
    "end": "549200"
  },
  {
    "text": "functions are able to have access to the",
    "start": "549200",
    "end": "550959"
  },
  {
    "text": "database through the state parameter if",
    "start": "550959",
    "end": "552880"
  },
  {
    "text": "they need it let's go ahead and modify",
    "start": "552880",
    "end": "554920"
  },
  {
    "text": "our create Handler to accept it by",
    "start": "554920",
    "end": "556880"
  },
  {
    "text": "adding in the following line pretty",
    "start": "556880",
    "end": "559079"
  },
  {
    "text": "simple now that we have our database",
    "start": "559079",
    "end": "561000"
  },
  {
    "text": "connectivity set up we need to add an",
    "start": "561000",
    "end": "562760"
  },
  {
    "text": "instance or postgres to our applications",
    "start": "562760",
    "end": "565279"
  },
  {
    "text": "deployment to set this up with flow is",
    "start": "565279",
    "end": "567720"
  },
  {
    "text": "incredibly easy if we head back on over",
    "start": "567720",
    "end": "570399"
  },
  {
    "text": "to the web page for our projects we get",
    "start": "570399",
    "end": "572399"
  },
  {
    "text": "an option to add a database to it go",
    "start": "572399",
    "end": "575720"
  },
  {
    "text": "ahead and set this up as I have done on",
    "start": "575720",
    "end": "577959"
  },
  {
    "text": "screen once you're complete we should be",
    "start": "577959",
    "end": "580279"
  },
  {
    "text": "given a database URL that we're able to",
    "start": "580279",
    "end": "582680"
  },
  {
    "text": "connect with go ahead and copy this to",
    "start": "582680",
    "end": "584880"
  },
  {
    "text": "your clipboard then heading over to a",
    "start": "584880",
    "end": "586720"
  },
  {
    "text": "terminal add it to an environment",
    "start": "586720",
    "end": "588720"
  },
  {
    "text": "variable now we're ready to set up our",
    "start": "588720",
    "end": "591279"
  },
  {
    "text": "database in order to get our initial",
    "start": "591279",
    "end": "593360"
  },
  {
    "text": "tables up and running the best way to do",
    "start": "593360",
    "end": "595519"
  },
  {
    "text": "this is using database migrations",
    "start": "595519",
    "end": "597560"
  },
  {
    "text": "fortunately the sqlx CLI can help us",
    "start": "597560",
    "end": "600640"
  },
  {
    "text": "with this let's first install it using",
    "start": "600640",
    "end": "603040"
  },
  {
    "text": "the following cargo command on our",
    "start": "603040",
    "end": "604920"
  },
  {
    "text": "terminal once the CLI is installed we",
    "start": "604920",
    "end": "607360"
  },
  {
    "text": "can now use it to generate our initial",
    "start": "607360",
    "end": "609120"
  },
  {
    "text": "migrations using the command on screen",
    "start": "609120",
    "end": "611880"
  },
  {
    "text": "this command will create a new directory",
    "start": "611880",
    "end": "613600"
  },
  {
    "text": "called migrations with an initial file",
    "start": "613600",
    "end": "615880"
  },
  {
    "text": "inside of it open up this file and add",
    "start": "615880",
    "end": "618600"
  },
  {
    "text": "in the following lines of SQL to create",
    "start": "618600",
    "end": "620560"
  },
  {
    "text": "our quote table this table will have an",
    "start": "620560",
    "end": "623480"
  },
  {
    "text": "ID field which will be stored as a uu ID",
    "start": "623480",
    "end": "626360"
  },
  {
    "text": "and a column for both the book and the",
    "start": "626360",
    "end": "628399"
  },
  {
    "text": "quote itself which are of type varar and",
    "start": "628399",
    "end": "631279"
  },
  {
    "text": "text respectively then we'll add a time",
    "start": "631279",
    "end": "633800"
  },
  {
    "text": "stamp for both the inserted at and",
    "start": "633800",
    "end": "636000"
  },
  {
    "text": "updated at times we also don't want to",
    "start": "636000",
    "end": "638720"
  },
  {
    "text": "double up on quotes so we'll go ahead",
    "start": "638720",
    "end": "640720"
  },
  {
    "text": "and make both the quote and book pair a",
    "start": "640720",
    "end": "642839"
  },
  {
    "text": "unique constraint perfect now let's go",
    "start": "642839",
    "end": "645760"
  },
  {
    "text": "ahead and run these migrations we can do",
    "start": "645760",
    "end": "647920"
  },
  {
    "text": "this with the sqlx CLI as well make sure",
    "start": "647920",
    "end": "651000"
  },
  {
    "text": "you're in the terminal where you set up",
    "start": "651000",
    "end": "652800"
  },
  {
    "text": "your database URL environment variable",
    "start": "652800",
    "end": "655120"
  },
  {
    "text": "and then run the following command if",
    "start": "655120",
    "end": "657839"
  },
  {
    "text": "everything is successful we can now move",
    "start": "657839",
    "end": "659800"
  },
  {
    "text": "on to writing our database query back",
    "start": "659800",
    "end": "662360"
  },
  {
    "text": "over in our rust code let's first create",
    "start": "662360",
    "end": "664440"
  },
  {
    "text": "another struct to represent the database",
    "start": "664440",
    "end": "666240"
  },
  {
    "text": "model this is going to be similar to the",
    "start": "666240",
    "end": "668320"
  },
  {
    "text": "model of our request body but will also",
    "start": "668320",
    "end": "670639"
  },
  {
    "text": "contain the quote ID as a uu ID and our",
    "start": "670639",
    "end": "673519"
  },
  {
    "text": "two Tim stamps we'll also add in a",
    "start": "673519",
    "end": "675959"
  },
  {
    "text": "Constructor which will take both the",
    "start": "675959",
    "end": "677480"
  },
  {
    "text": "book and quote as an input and generate",
    "start": "677480",
    "end": "679800"
  },
  {
    "text": "a uu ID and the necessary timestamps for",
    "start": "679800",
    "end": "682279"
  },
  {
    "text": "us scrolling down to the create function",
    "start": "682279",
    "end": "685040"
  },
  {
    "text": "first change the return type to what I",
    "start": "685040",
    "end": "686880"
  },
  {
    "text": "have on screen this will return both a",
    "start": "686880",
    "end": "689000"
  },
  {
    "text": "stat stat code and Json in the event of",
    "start": "689000",
    "end": "691040"
  },
  {
    "text": "a success and in the event of failure",
    "start": "691040",
    "end": "693320"
  },
  {
    "text": "just an HTTP status code then let's use",
    "start": "693320",
    "end": "696160"
  },
  {
    "text": "our Constructor method to create a new",
    "start": "696160",
    "end": "697959"
  },
  {
    "text": "quote and add some SQL to insert it into",
    "start": "697959",
    "end": "700480"
  },
  {
    "text": "our table then we want to bind our input",
    "start": "700480",
    "end": "702680"
  },
  {
    "text": "parameters to the SQL statement followed",
    "start": "702680",
    "end": "704959"
  },
  {
    "text": "by executing the command on our database",
    "start": "704959",
    "end": "706920"
  },
  {
    "text": "pool next we'll check the result of this",
    "start": "706920",
    "end": "708959"
  },
  {
    "text": "query and if everything was successful",
    "start": "708959",
    "end": "711040"
  },
  {
    "text": "return the HTTP status code of created",
    "start": "711040",
    "end": "713519"
  },
  {
    "text": "with our quote encoded as a Json",
    "start": "713519",
    "end": "715519"
  },
  {
    "text": "response otherwise we'll return an",
    "start": "715519",
    "end": "717639"
  },
  {
    "text": "internal server error next we just need",
    "start": "717639",
    "end": "720079"
  },
  {
    "text": "to add an endpoint for the create",
    "start": "720079",
    "end": "721720"
  },
  {
    "text": "Handler to our application router to do",
    "start": "721720",
    "end": "724399"
  },
  {
    "text": "this first import the post method from",
    "start": "724399",
    "end": "726160"
  },
  {
    "text": "the axom routing module and then add the",
    "start": "726160",
    "end": "728200"
  },
  {
    "text": "following line to the app router in",
    "start": "728200",
    "end": "729800"
  },
  {
    "text": "order to use the Handler with the SL",
    "start": "729800",
    "end": "731519"
  },
  {
    "text": "quotes path with the create Handler",
    "start": "731519",
    "end": "733680"
  },
  {
    "text": "integrated we're now able to commit our",
    "start": "733680",
    "end": "735839"
  },
  {
    "text": "code and push it up to our GitHub repo",
    "start": "735839",
    "end": "738199"
  },
  {
    "text": "flow will automatically monitor the main",
    "start": "738199",
    "end": "740240"
  },
  {
    "text": "branch of our code and whenever it",
    "start": "740240",
    "end": "742160"
  },
  {
    "text": "detects a change automatically build and",
    "start": "742160",
    "end": "744199"
  },
  {
    "text": "deploy our code for us pretty neat after",
    "start": "744199",
    "end": "747079"
  },
  {
    "text": "a short while the deployment should",
    "start": "747079",
    "end": "748440"
  },
  {
    "text": "complete how however in our case we've",
    "start": "748440",
    "end": "750240"
  },
  {
    "text": "actually encountered an error",
    "start": "750240",
    "end": "752000"
  },
  {
    "text": "fortunately flow uses AI to actually",
    "start": "752000",
    "end": "754360"
  },
  {
    "text": "detect what went wrong and suggest what",
    "start": "754360",
    "end": "756240"
  },
  {
    "text": "we need to do to fix it in our case we",
    "start": "756240",
    "end": "758639"
  },
  {
    "text": "forgot to add the database URL as an",
    "start": "758639",
    "end": "760720"
  },
  {
    "text": "environment variable so let's jump on",
    "start": "760720",
    "end": "762760"
  },
  {
    "text": "over to our application settings to fix",
    "start": "762760",
    "end": "764680"
  },
  {
    "text": "this up here flow also provides a button",
    "start": "764680",
    "end": "766920"
  },
  {
    "text": "to import our database credentials as",
    "start": "766920",
    "end": "769000"
  },
  {
    "text": "environment variables which makes it",
    "start": "769000",
    "end": "770839"
  },
  {
    "text": "really easy to fix our problem what we",
    "start": "770839",
    "end": "772880"
  },
  {
    "text": "have to do now is just save our settings",
    "start": "772880",
    "end": "775199"
  },
  {
    "text": "both of these are fantastic quality of",
    "start": "775199",
    "end": "777079"
  },
  {
    "text": "life features now that our environment",
    "start": "777079",
    "end": "779279"
  },
  {
    "text": "variables are set up let's go ahead and",
    "start": "779279",
    "end": "780800"
  },
  {
    "text": "redeploy this manually by pressing the",
    "start": "780800",
    "end": "782680"
  },
  {
    "text": "following buttons after another short",
    "start": "782680",
    "end": "785040"
  },
  {
    "text": "wait we should see everything deploy",
    "start": "785040",
    "end": "786760"
  },
  {
    "text": "which means we can go ahead and test our",
    "start": "786760",
    "end": "788920"
  },
  {
    "text": "new endpoint heading back to our",
    "start": "788920",
    "end": "790800"
  },
  {
    "text": "terminal let's create a new quote using",
    "start": "790800",
    "end": "793040"
  },
  {
    "text": "the following curl command if everything",
    "start": "793040",
    "end": "795639"
  },
  {
    "text": "is successful you should receive a Json",
    "start": "795639",
    "end": "797639"
  },
  {
    "text": "response with the full quote details and",
    "start": "797639",
    "end": "800040"
  },
  {
    "text": "the ID showing that our read Handler is",
    "start": "800040",
    "end": "802199"
  },
  {
    "text": "working as intended with our create",
    "start": "802199",
    "end": "804680"
  },
  {
    "start": "804000",
    "end": "911000"
  },
  {
    "text": "endpoint completed let's move on to the",
    "start": "804680",
    "end": "806959"
  },
  {
    "text": "read Handler here we're going to keep it",
    "start": "806959",
    "end": "809240"
  },
  {
    "text": "simple and only Implement a method to",
    "start": "809240",
    "end": "811360"
  },
  {
    "text": "retrieve all of the quotes in our",
    "start": "811360",
    "end": "812760"
  },
  {
    "text": "database in a production system you'd",
    "start": "812760",
    "end": "815320"
  },
  {
    "text": "probably want to implement pagination",
    "start": "815320",
    "end": "817480"
  },
  {
    "text": "and perhaps filtering but that's another",
    "start": "817480",
    "end": "819760"
  },
  {
    "text": "Topic in itself if you're interested in",
    "start": "819760",
    "end": "821920"
  },
  {
    "text": "any more production ready set up however",
    "start": "821920",
    "end": "823920"
  },
  {
    "text": "then please let me know in the comments",
    "start": "823920",
    "end": "825199"
  },
  {
    "text": "down below if I get enough interest then",
    "start": "825199",
    "end": "827279"
  },
  {
    "text": "I'll probably set up an entire course on",
    "start": "827279",
    "end": "829440"
  },
  {
    "text": "how to do so jumping back on over to our",
    "start": "829440",
    "end": "832160"
  },
  {
    "text": "handlers code let's go ahead and create",
    "start": "832160",
    "end": "834120"
  },
  {
    "text": "a new one for reading our quotes this",
    "start": "834120",
    "end": "836399"
  },
  {
    "text": "method will return either a Json body",
    "start": "836399",
    "end": "838560"
  },
  {
    "text": "with our quot or an HTTP status code to",
    "start": "838560",
    "end": "841279"
  },
  {
    "text": "make pulling data out of the database a",
    "start": "841279",
    "end": "843120"
  },
  {
    "text": "little easier let's add a new macro to",
    "start": "843120",
    "end": "845079"
  },
  {
    "text": "our quote struct this is the from row",
    "start": "845079",
    "end": "847680"
  },
  {
    "text": "macro from the sqlx library which allows",
    "start": "847680",
    "end": "850399"
  },
  {
    "text": "us to automatically pull out rows from",
    "start": "850399",
    "end": "852199"
  },
  {
    "text": "the database into our rust types now we",
    "start": "852199",
    "end": "854920"
  },
  {
    "text": "can use the query as method from SQL X",
    "start": "854920",
    "end": "857440"
  },
  {
    "text": "which will allow us to convert our rows",
    "start": "857440",
    "end": "859000"
  },
  {
    "text": "automatically into our quote type using",
    "start": "859000",
    "end": "861440"
  },
  {
    "text": "this with the fetch all method will give",
    "start": "861440",
    "end": "863000"
  },
  {
    "text": "us a vector of quotes which happens to",
    "start": "863000",
    "end": "865120"
  },
  {
    "text": "be our return type lastly we just want",
    "start": "865120",
    "end": "867759"
  },
  {
    "text": "to match the response to either a",
    "start": "867759",
    "end": "869519"
  },
  {
    "text": "success or failure depending on the",
    "start": "869519",
    "end": "871160"
  },
  {
    "text": "result of the query with the Handler",
    "start": "871160",
    "end": "873519"
  },
  {
    "text": "implementation complete we can now add",
    "start": "873519",
    "end": "875399"
  },
  {
    "text": "it to our applications router in the",
    "start": "875399",
    "end": "876959"
  },
  {
    "text": "main function we'll use the get method",
    "start": "876959",
    "end": "879199"
  },
  {
    "text": "for this with the SL quotes path make",
    "start": "879199",
    "end": "881399"
  },
  {
    "text": "sure that your handle function is also",
    "start": "881399",
    "end": "883120"
  },
  {
    "text": "said to be public otherwise your build",
    "start": "883120",
    "end": "884959"
  },
  {
    "text": "will fail then we just need to commit",
    "start": "884959",
    "end": "886839"
  },
  {
    "text": "our code and push it up to GitHub all we",
    "start": "886839",
    "end": "889079"
  },
  {
    "text": "have to do now is wait for flow to build",
    "start": "889079",
    "end": "891279"
  },
  {
    "text": "and deploy it once it's deployed we can",
    "start": "891279",
    "end": "893600"
  },
  {
    "text": "test our Endo using curl and we get back",
    "start": "893600",
    "end": "895839"
  },
  {
    "text": "an array containing our single quote to",
    "start": "895839",
    "end": "897920"
  },
  {
    "text": "test this further let's go go ahead and",
    "start": "897920",
    "end": "899440"
  },
  {
    "text": "add another quote using our create",
    "start": "899440",
    "end": "901120"
  },
  {
    "text": "endpoint now if we run our get request",
    "start": "901120",
    "end": "903480"
  },
  {
    "text": "again we should receive an array",
    "start": "903480",
    "end": "904959"
  },
  {
    "text": "containing both of them with that our",
    "start": "904959",
    "end": "907160"
  },
  {
    "text": "read Handler is complete and we can move",
    "start": "907160",
    "end": "909000"
  },
  {
    "text": "on to the next method the next letter in",
    "start": "909000",
    "end": "911639"
  },
  {
    "start": "911000",
    "end": "1047000"
  },
  {
    "text": "the acronym is U which stands for update",
    "start": "911639",
    "end": "915000"
  },
  {
    "text": "using this method we're going to want to",
    "start": "915000",
    "end": "916639"
  },
  {
    "text": "be able to update both the book and",
    "start": "916639",
    "end": "918560"
  },
  {
    "text": "quote fields of an existing quote record",
    "start": "918560",
    "end": "921360"
  },
  {
    "text": "to achieve this we're going to create an",
    "start": "921360",
    "end": "923079"
  },
  {
    "text": "endpoint which accepts an ID as a path",
    "start": "923079",
    "end": "925480"
  },
  {
    "text": "parameter and will be called using an",
    "start": "925480",
    "end": "927600"
  },
  {
    "text": "HTTP put method me the Handler will",
    "start": "927600",
    "end": "930319"
  },
  {
    "text": "accept the same request body as our",
    "start": "930319",
    "end": "932319"
  },
  {
    "text": "create endpoint back in our Handler code",
    "start": "932319",
    "end": "935680"
  },
  {
    "text": "let's define a new function which takes",
    "start": "935680",
    "end": "938040"
  },
  {
    "text": "the following three parameters the first",
    "start": "938040",
    "end": "940360"
  },
  {
    "text": "is our state which provides our database",
    "start": "940360",
    "end": "942240"
  },
  {
    "text": "connection pole the second is the quote",
    "start": "942240",
    "end": "944440"
  },
  {
    "text": "uu ID pulled from the ID path parameter",
    "start": "944440",
    "end": "947720"
  },
  {
    "text": "and finally the third is going to be a",
    "start": "947720",
    "end": "949839"
  },
  {
    "text": "request body which is the same as our",
    "start": "949839",
    "end": "951639"
  },
  {
    "text": "create Handler lastly we want to return",
    "start": "951639",
    "end": "953920"
  },
  {
    "text": "an HTTP status code to determine whether",
    "start": "953920",
    "end": "955959"
  },
  {
    "text": "or not the update operation was",
    "start": "955959",
    "end": "957519"
  },
  {
    "text": "successful with our function defined",
    "start": "957519",
    "end": "959560"
  },
  {
    "text": "let's go ahead and implement it let's",
    "start": "959560",
    "end": "961560"
  },
  {
    "text": "first create a variable storing the",
    "start": "961560",
    "end": "963000"
  },
  {
    "text": "current time we'll use this to set the",
    "start": "963000",
    "end": "965040"
  },
  {
    "text": "updated at Tim stamp in our data model",
    "start": "965040",
    "end": "967360"
  },
  {
    "text": "next we can craft our SQL which will",
    "start": "967360",
    "end": "969720"
  },
  {
    "text": "update the row with the provided ID",
    "start": "969720",
    "end": "971880"
  },
  {
    "text": "setting both the book and the quote",
    "start": "971880",
    "end": "973440"
  },
  {
    "text": "itself to the input values we'll also",
    "start": "973440",
    "end": "975880"
  },
  {
    "text": "set the updated at timestamp to the",
    "start": "975880",
    "end": "977560"
  },
  {
    "text": "value we stored earlier the last thing",
    "start": "977560",
    "end": "979800"
  },
  {
    "text": "we want to do is check to see how many",
    "start": "979800",
    "end": "981759"
  },
  {
    "text": "rows we actually affected by this update",
    "start": "981759",
    "end": "984240"
  },
  {
    "text": "operation if the count of rows is zero",
    "start": "984240",
    "end": "986880"
  },
  {
    "text": "then that means there was no entry for",
    "start": "986880",
    "end": "988759"
  },
  {
    "text": "the the ID given and we should return a",
    "start": "988759",
    "end": "990959"
  },
  {
    "text": "404 to the client to let them know that",
    "start": "990959",
    "end": "993079"
  },
  {
    "text": "this resource doesn't exist otherwise",
    "start": "993079",
    "end": "995360"
  },
  {
    "text": "we'll set a status code of okay lastly",
    "start": "995360",
    "end": "998079"
  },
  {
    "text": "we'll check the result of this operation",
    "start": "998079",
    "end": "999920"
  },
  {
    "text": "and return an internal server error if",
    "start": "999920",
    "end": "1002079"
  },
  {
    "text": "something went wrong now we can add this",
    "start": "1002079",
    "end": "1004440"
  },
  {
    "text": "Handler to our application router we",
    "start": "1004440",
    "end": "1006519"
  },
  {
    "text": "first need to import the put method from",
    "start": "1006519",
    "end": "1008399"
  },
  {
    "text": "the accent package and then we can use",
    "start": "1008399",
    "end": "1010360"
  },
  {
    "text": "it with our SL quotes slid path the",
    "start": "1010360",
    "end": "1013680"
  },
  {
    "text": "syntax specifies that the path itself",
    "start": "1013680",
    "end": "1015639"
  },
  {
    "text": "has a path parameter in our case called",
    "start": "1015639",
    "end": "1017720"
  },
  {
    "text": "ID same as before let's commit our code",
    "start": "1017720",
    "end": "1020680"
  },
  {
    "text": "and push it to our repo then we just",
    "start": "1020680",
    "end": "1023120"
  },
  {
    "text": "need to wait for flow to automatically",
    "start": "1023120",
    "end": "1025038"
  },
  {
    "text": "build our code and deploy it to test",
    "start": "1025039",
    "end": "1027480"
  },
  {
    "text": "this I created an initial quote that is",
    "start": "1027480",
    "end": "1030000"
  },
  {
    "text": "incorrect I can send a put request to",
    "start": "1030000",
    "end": "1032438"
  },
  {
    "text": "the/ ques slid path with my updated",
    "start": "1032439",
    "end": "1035438"
  },
  {
    "text": "fields and I receed back an HTTP status",
    "start": "1035439",
    "end": "1038280"
  },
  {
    "text": "code of 200 now if I retrieve all of the",
    "start": "1038280",
    "end": "1041079"
  },
  {
    "text": "quotes again I can see that my changes",
    "start": "1041079",
    "end": "1042678"
  },
  {
    "text": "have been applied and the quotes updated",
    "start": "1042679",
    "end": "1044720"
  },
  {
    "text": "at Value has also changed the Last",
    "start": "1044720",
    "end": "1047480"
  },
  {
    "start": "1047000",
    "end": "1178000"
  },
  {
    "text": "Action we need for our base basic crud",
    "start": "1047480",
    "end": "1049559"
  },
  {
    "text": "application is the delete functionality",
    "start": "1049559",
    "end": "1051760"
  },
  {
    "text": "which will accept an HTTP delete request",
    "start": "1051760",
    "end": "1054280"
  },
  {
    "text": "to a path containing the quote ID we",
    "start": "1054280",
    "end": "1056400"
  },
  {
    "text": "wish to delete we should be pretty",
    "start": "1056400",
    "end": "1058520"
  },
  {
    "text": "familiar with how to do this by now",
    "start": "1058520",
    "end": "1060440"
  },
  {
    "text": "let's add a new function called delete",
    "start": "1060440",
    "end": "1062360"
  },
  {
    "text": "quote into our handlers method this",
    "start": "1062360",
    "end": "1064520"
  },
  {
    "text": "function will accept the database pool",
    "start": "1064520",
    "end": "1066400"
  },
  {
    "text": "and the uuid found in the path the",
    "start": "1066400",
    "end": "1068840"
  },
  {
    "text": "sequel for this method is pretty simple",
    "start": "1068840",
    "end": "1070720"
  },
  {
    "text": "deleting any rows from the quotes table",
    "start": "1070720",
    "end": "1072720"
  },
  {
    "text": "where the ID matches our input for our",
    "start": "1072720",
    "end": "1075400"
  },
  {
    "text": "status code return value let's use the",
    "start": "1075400",
    "end": "1077559"
  },
  {
    "text": "same logic we used in our our update",
    "start": "1077559",
    "end": "1079320"
  },
  {
    "text": "Handler where we check for the number of",
    "start": "1079320",
    "end": "1081000"
  },
  {
    "text": "rows affected and return an appropriate",
    "start": "1081000",
    "end": "1083200"
  },
  {
    "text": "status code accordingly with the Handler",
    "start": "1083200",
    "end": "1085520"
  },
  {
    "text": "completed we can now add it to our",
    "start": "1085520",
    "end": "1087559"
  },
  {
    "text": "application router using the delete",
    "start": "1087559",
    "end": "1089760"
  },
  {
    "text": "method now that that's done we can",
    "start": "1089760",
    "end": "1091919"
  },
  {
    "text": "commit this code and push it up to our",
    "start": "1091919",
    "end": "1093600"
  },
  {
    "text": "repo which will then be deployed by flow",
    "start": "1093600",
    "end": "1096559"
  },
  {
    "text": "once everything is deployed we can test",
    "start": "1096559",
    "end": "1098000"
  },
  {
    "text": "it out using curl let's first grab the",
    "start": "1098000",
    "end": "1100320"
  },
  {
    "text": "ID of the quote that we wish to delete",
    "start": "1100320",
    "end": "1102679"
  },
  {
    "text": "we can then send a delete request to the",
    "start": "1102679",
    "end": "1104320"
  },
  {
    "text": "following endpoint making sure to use",
    "start": "1104320",
    "end": "1105960"
  },
  {
    "text": "the ID of the entry we wish to remove we",
    "start": "1105960",
    "end": "1108520"
  },
  {
    "text": "receive back a00 which tells us",
    "start": "1108520",
    "end": "1110440"
  },
  {
    "text": "everything works as expected which we",
    "start": "1110440",
    "end": "1112240"
  },
  {
    "text": "can verify the last thing we want to",
    "start": "1112240",
    "end": "1114159"
  },
  {
    "text": "test is deleting a quote that doesn't",
    "start": "1114159",
    "end": "1116000"
  },
  {
    "text": "exist if we generate a brand new uu ID",
    "start": "1116000",
    "end": "1119600"
  },
  {
    "text": "and pass this in as our path parameter",
    "start": "1119600",
    "end": "1121799"
  },
  {
    "text": "we should receive a 404 when we try to",
    "start": "1121799",
    "end": "1124280"
  },
  {
    "text": "delete that resource which we do showing",
    "start": "1124280",
    "end": "1127159"
  },
  {
    "text": "that everything is working as expected",
    "start": "1127159",
    "end": "1129440"
  },
  {
    "text": "and with that we've managed to create a",
    "start": "1129440",
    "end": "1130960"
  },
  {
    "text": "simple CR app using the most loved Tech",
    "start": "1130960",
    "end": "1133360"
  },
  {
    "text": "stack according to the stack Overflow",
    "start": "1133360",
    "end": "1135320"
  },
  {
    "text": "developer survey at least using the",
    "start": "1135320",
    "end": "1137679"
  },
  {
    "text": "sponsor of today's video flow we were",
    "start": "1137679",
    "end": "1139960"
  },
  {
    "text": "able to easily deploy this with",
    "start": "1139960",
    "end": "1141480"
  },
  {
    "text": "integrated cicd at no extra cost which",
    "start": "1141480",
    "end": "1144400"
  },
  {
    "text": "allows us to easily get started with an",
    "start": "1144400",
    "end": "1146080"
  },
  {
    "text": "app Ida without needing to worry about",
    "start": "1146080",
    "end": "1148000"
  },
  {
    "text": "deployment this is a pretty awesome",
    "start": "1148000",
    "end": "1150000"
  },
  {
    "text": "product in my opinion if you do want to",
    "start": "1150000",
    "end": "1152120"
  },
  {
    "text": "move to a paid service well their",
    "start": "1152120",
    "end": "1154159"
  },
  {
    "text": "pricing is pretty reasonable especially",
    "start": "1154159",
    "end": "1156520"
  },
  {
    "text": "for this economy as always you can find",
    "start": "1156520",
    "end": "1159159"
  },
  {
    "text": "this code on GitHub the link is in the",
    "start": "1159159",
    "end": "1161080"
  },
  {
    "text": "description down below otherwise I want",
    "start": "1161080",
    "end": "1163159"
  },
  {
    "text": "to give a big thank you to my newest",
    "start": "1163159",
    "end": "1164880"
  },
  {
    "text": "Channel member jazil Sama thank you for",
    "start": "1164880",
    "end": "1167280"
  },
  {
    "text": "supporting the channel and enabling me",
    "start": "1167280",
    "end": "1168880"
  },
  {
    "text": "to bring content to hundreds of",
    "start": "1168880",
    "end": "1170320"
  },
  {
    "text": "thousands of viewers a big thank you to",
    "start": "1170320",
    "end": "1172840"
  },
  {
    "text": "everyone else for watching and I'll see",
    "start": "1172840",
    "end": "1174720"
  },
  {
    "text": "you on the next one",
    "start": "1174720",
    "end": "1178640"
  }
]