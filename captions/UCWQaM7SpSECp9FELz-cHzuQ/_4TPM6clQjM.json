[
  {
    "start": "0",
    "end": "27000"
  },
  {
    "text": "for the longest time rest has been my",
    "start": "120",
    "end": "2200"
  },
  {
    "text": "go-to sorry dexra architecture for",
    "start": "2200",
    "end": "4880"
  },
  {
    "text": "building apis and I've had little to no",
    "start": "4880",
    "end": "7840"
  },
  {
    "text": "complaints however rest hasn't been the",
    "start": "7840",
    "end": "10120"
  },
  {
    "text": "only API architectural pattern that I've",
    "start": "10120",
    "end": "12080"
  },
  {
    "text": "used with the other major one being RPC",
    "start": "12080",
    "end": "15200"
  },
  {
    "text": "RPC comes in a number of different",
    "start": "15200",
    "end": "17000"
  },
  {
    "text": "flavors such as Json RPC HTTP RPC and",
    "start": "17000",
    "end": "21279"
  },
  {
    "text": "the main one we're talking about in this",
    "start": "21279",
    "end": "22720"
  },
  {
    "text": "video grpc before we talk about it",
    "start": "22720",
    "end": "25640"
  },
  {
    "text": "however let's look at what RPC actually",
    "start": "25640",
    "end": "27760"
  },
  {
    "start": "27000",
    "end": "152000"
  },
  {
    "text": "is RPC which stands for remote procedure",
    "start": "27760",
    "end": "30679"
  },
  {
    "text": "cool is a form of interprocess",
    "start": "30679",
    "end": "32480"
  },
  {
    "text": "communication it works over HTTP similar",
    "start": "32480",
    "end": "35360"
  },
  {
    "text": "to rest but instead of being resource",
    "start": "35360",
    "end": "37280"
  },
  {
    "text": "based it works with actions for example",
    "start": "37280",
    "end": "39760"
  },
  {
    "text": "let's say you want to create a new",
    "start": "39760",
    "end": "41000"
  },
  {
    "text": "Pokémon in a Pokémon based API with rest",
    "start": "41000",
    "end": "44000"
  },
  {
    "text": "you'd send an HTTP request with a post",
    "start": "44000",
    "end": "46440"
  },
  {
    "text": "method to the/ pookemon endpoint with",
    "start": "46440",
    "end": "48960"
  },
  {
    "text": "your Pokémon details in the request body",
    "start": "48960",
    "end": "51239"
  },
  {
    "text": "if we want to do the same with Json RPC",
    "start": "51239",
    "end": "53520"
  },
  {
    "text": "we'd instead send an HTTP post request",
    "start": "53520",
    "end": "56000"
  },
  {
    "text": "to a generic endpoint with the following",
    "start": "56000",
    "end": "58480"
  },
  {
    "text": "request body specifying both both the",
    "start": "58480",
    "end": "60320"
  },
  {
    "text": "action or method that we're taking in",
    "start": "60320",
    "end": "62280"
  },
  {
    "text": "our case create Pokémon and the data in",
    "start": "62280",
    "end": "64720"
  },
  {
    "text": "the form of the pams field now I know",
    "start": "64720",
    "end": "67200"
  },
  {
    "text": "what you're thinking why would anyone",
    "start": "67200",
    "end": "68680"
  },
  {
    "text": "choose this over rest and you're correct",
    "start": "68680",
    "end": "71360"
  },
  {
    "text": "creating resources isn't the best",
    "start": "71360",
    "end": "73000"
  },
  {
    "text": "example of using RPC a better example",
    "start": "73000",
    "end": "76040"
  },
  {
    "text": "would be an API for a calculator service",
    "start": "76040",
    "end": "79040"
  },
  {
    "text": "in this case it's actually rather",
    "start": "79040",
    "end": "80799"
  },
  {
    "text": "difficult to model a restful API and",
    "start": "80799",
    "end": "83560"
  },
  {
    "text": "that's because of the lack of any",
    "start": "83560",
    "end": "84799"
  },
  {
    "text": "tangible resources or objects for us to",
    "start": "84799",
    "end": "87280"
  },
  {
    "text": "model a restful interface around instead",
    "start": "87280",
    "end": "90479"
  },
  {
    "text": "calculators typically perform actions",
    "start": "90479",
    "end": "92799"
  },
  {
    "text": "such as addition subtraction",
    "start": "92799",
    "end": "94600"
  },
  {
    "text": "multiplication and division in an RPC",
    "start": "94600",
    "end": "97600"
  },
  {
    "text": "interface these methods are incredibly",
    "start": "97600",
    "end": "99640"
  },
  {
    "text": "easy to model in fact it's why slack",
    "start": "99640",
    "end": "101880"
  },
  {
    "text": "decided to model their API using HTTP",
    "start": "101880",
    "end": "104240"
  },
  {
    "text": "RPC instead of rest whilst their API",
    "start": "104240",
    "end": "107240"
  },
  {
    "text": "does have the concept of objects they",
    "start": "107240",
    "end": "109320"
  },
  {
    "text": "mostly have methods and ultimately",
    "start": "109320",
    "end": "111439"
  },
  {
    "text": "that's where RPC shines so whilst it's",
    "start": "111439",
    "end": "113520"
  },
  {
    "text": "not its most optimal use case you can",
    "start": "113520",
    "end": "115560"
  },
  {
    "text": "use RPC to create and manage resources",
    "start": "115560",
    "end": "118240"
  },
  {
    "text": "which when compared to rest gives a a",
    "start": "118240",
    "end": "119920"
  },
  {
    "text": "lot more flexibility for a Services API",
    "start": "119920",
    "end": "123079"
  },
  {
    "text": "whilst this does imply that RPC is more",
    "start": "123079",
    "end": "124880"
  },
  {
    "text": "powerful there is one major drawback",
    "start": "124880",
    "end": "127360"
  },
  {
    "text": "this drawback is the lack of",
    "start": "127360",
    "end": "129319"
  },
  {
    "text": "self-documentation for example if I told",
    "start": "129319",
    "end": "131440"
  },
  {
    "text": "you I had a well-designed restful API",
    "start": "131440",
    "end": "133840"
  },
  {
    "text": "that managed dragons there's a good",
    "start": "133840",
    "end": "136280"
  },
  {
    "text": "chance you'd figure out how to use it",
    "start": "136280",
    "end": "137959"
  },
  {
    "text": "even with little documentation the same",
    "start": "137959",
    "end": "140400"
  },
  {
    "text": "can't be said for RPC however which is",
    "start": "140400",
    "end": "142879"
  },
  {
    "text": "why I've always opted for restful apis",
    "start": "142879",
    "end": "145280"
  },
  {
    "text": "in the past that is until grpc came onto",
    "start": "145280",
    "end": "148800"
  },
  {
    "text": "the scene and brought with it one",
    "start": "148800",
    "end": "150560"
  },
  {
    "text": "fundamental change that change is",
    "start": "150560",
    "end": "153200"
  },
  {
    "start": "152000",
    "end": "346000"
  },
  {
    "text": "protocal buffers or protuff for short",
    "start": "153200",
    "end": "155720"
  },
  {
    "text": "which is a language neutral extensible",
    "start": "155720",
    "end": "157800"
  },
  {
    "text": "mechanism for serializing structured",
    "start": "157800",
    "end": "159599"
  },
  {
    "text": "data it's similar to XML or Json but",
    "start": "159599",
    "end": "162519"
  },
  {
    "text": "with one key difference it's a binary",
    "start": "162519",
    "end": "164879"
  },
  {
    "text": "protocol instead of a text based one",
    "start": "164879",
    "end": "167120"
  },
  {
    "text": "which gives it the benefit of being more",
    "start": "167120",
    "end": "168840"
  },
  {
    "text": "compact however in order to accurately",
    "start": "168840",
    "end": "171080"
  },
  {
    "text": "decode a prodab payload you require the",
    "start": "171080",
    "end": "173360"
  },
  {
    "text": "schema that was used to encode it in the",
    "start": "173360",
    "end": "175360"
  },
  {
    "text": "first place you might be thinking that",
    "start": "175360",
    "end": "177120"
  },
  {
    "text": "this sounds like a drawback but in",
    "start": "177120",
    "end": "178720"
  },
  {
    "text": "reality it's actually a strength the",
    "start": "178720",
    "end": "180959"
  },
  {
    "text": "requirement of the dot Proto file acts",
    "start": "180959",
    "end": "183040"
  },
  {
    "text": "as a sort of contract for an API so what",
    "start": "183040",
    "end": "185840"
  },
  {
    "text": "does a protocal buffer schema look like",
    "start": "185840",
    "end": "188159"
  },
  {
    "text": "well here is one for a calculator",
    "start": "188159",
    "end": "189680"
  },
  {
    "text": "service I've created already this",
    "start": "189680",
    "end": "191720"
  },
  {
    "text": "probably doesn't make a lot of sense at",
    "start": "191720",
    "end": "193120"
  },
  {
    "text": "this stage so instead let's look at a",
    "start": "193120",
    "end": "195159"
  },
  {
    "text": "service in action that uses this",
    "start": "195159",
    "end": "196959"
  },
  {
    "text": "contract to do this we're going to need",
    "start": "196959",
    "end": "199000"
  },
  {
    "text": "an instance of our calculator service to",
    "start": "199000",
    "end": "200879"
  },
  {
    "text": "interact with fortunately I have one",
    "start": "200879",
    "end": "202920"
  },
  {
    "text": "which you're able to deploy an instance",
    "start": "202920",
    "end": "204599"
  },
  {
    "text": "of yourself for free using the sponsor",
    "start": "204599",
    "end": "207319"
  },
  {
    "text": "of this video Acorn to deploy it all you",
    "start": "207319",
    "end": "210120"
  },
  {
    "text": "have to do is click the deploy Link in",
    "start": "210120",
    "end": "211720"
  },
  {
    "text": "the description down below then sign in",
    "start": "211720",
    "end": "214040"
  },
  {
    "text": "with your GitHub account click the",
    "start": "214040",
    "end": "215599"
  },
  {
    "text": "deploy button and it will create an",
    "start": "215599",
    "end": "217239"
  },
  {
    "text": "ephemeral instance of the service for a",
    "start": "217239",
    "end": "219120"
  },
  {
    "text": "couple of hours no cost no code to run",
    "start": "219120",
    "end": "221560"
  },
  {
    "text": "which is much more secure than running",
    "start": "221560",
    "end": "222959"
  },
  {
    "text": "locally and it has all of the",
    "start": "222959",
    "end": "224280"
  },
  {
    "text": "infrastructure you need to test with",
    "start": "224280",
    "end": "225959"
  },
  {
    "text": "it's a really cool product which allows",
    "start": "225959",
    "end": "227480"
  },
  {
    "text": "me to easily share deployments with you",
    "start": "227480",
    "end": "229040"
  },
  {
    "text": "for free we'll talk a little bit more",
    "start": "229040",
    "end": "230480"
  },
  {
    "text": "about acon later on but for the moment",
    "start": "230480",
    "end": "232319"
  },
  {
    "text": "that's all you need to do after a short",
    "start": "232319",
    "end": "234040"
  },
  {
    "text": "while you should get back the URL of",
    "start": "234040",
    "end": "235720"
  },
  {
    "text": "your deployed instance make sure to take",
    "start": "235720",
    "end": "237560"
  },
  {
    "text": "a note of it or copy it to your",
    "start": "237560",
    "end": "238959"
  },
  {
    "text": "clipboard the next thing we're going to",
    "start": "238959",
    "end": "240599"
  },
  {
    "text": "need is a grpc client for this video I'm",
    "start": "240599",
    "end": "243640"
  },
  {
    "text": "going to use grpc UI one because it's",
    "start": "243640",
    "end": "246599"
  },
  {
    "text": "open source and two it seemed to work",
    "start": "246599",
    "end": "248560"
  },
  {
    "text": "best for some certain use cases however",
    "start": "248560",
    "end": "250959"
  },
  {
    "text": "you may want to use an app like Postman",
    "start": "250959",
    "end": "252879"
  },
  {
    "text": "or insomnia yourself either way make",
    "start": "252879",
    "end": "254959"
  },
  {
    "text": "sure to First install your chosen client",
    "start": "254959",
    "end": "257000"
  },
  {
    "text": "as per your operating system once",
    "start": "257000",
    "end": "258799"
  },
  {
    "text": "installed you then want to connect to",
    "start": "258799",
    "end": "260199"
  },
  {
    "text": "your deployed service using the URL that",
    "start": "260199",
    "end": "262320"
  },
  {
    "text": "was generated earlier if you're using",
    "start": "262320",
    "end": "264120"
  },
  {
    "text": "grpc UI like I am you'll want to remove",
    "start": "264120",
    "end": "266639"
  },
  {
    "text": "the https from the start of this URL and",
    "start": "266639",
    "end": "269160"
  },
  {
    "text": "add the Port of 443 when the UI opens",
    "start": "269160",
    "end": "272440"
  },
  {
    "text": "the first thing you'll notice is that",
    "start": "272440",
    "end": "273639"
  },
  {
    "text": "all of the RPC methods are populated",
    "start": "273639",
    "end": "275800"
  },
  {
    "text": "this is done using reflection which is",
    "start": "275800",
    "end": "277919"
  },
  {
    "text": "an opt-in feature of grpc it's not",
    "start": "277919",
    "end": "280520"
  },
  {
    "text": "recommended to enable it on external",
    "start": "280520",
    "end": "282199"
  },
  {
    "text": "facing services but for our test server",
    "start": "282199",
    "end": "284560"
  },
  {
    "text": "it saves us having to mess around with",
    "start": "284560",
    "end": "286120"
  },
  {
    "text": "any dot Proto files until we learn a",
    "start": "286120",
    "end": "288039"
  },
  {
    "text": "little bit more about them let's go",
    "start": "288039",
    "end": "289960"
  },
  {
    "text": "ahead and call the ad method of our",
    "start": "289960",
    "end": "291400"
  },
  {
    "text": "service all we need to do is select the",
    "start": "291400",
    "end": "293600"
  },
  {
    "text": "method fill in the required parameters",
    "start": "293600",
    "end": "295600"
  },
  {
    "text": "which are the two numbers we're going to",
    "start": "295600",
    "end": "297080"
  },
  {
    "text": "send and send off the request we'll get",
    "start": "297080",
    "end": "299800"
  },
  {
    "text": "the result of our two numbers added",
    "start": "299800",
    "end": "301560"
  },
  {
    "text": "together showing that everything is",
    "start": "301560",
    "end": "302759"
  },
  {
    "text": "working we can do the same with any of",
    "start": "302759",
    "end": "304800"
  },
  {
    "text": "the methods that our service provides",
    "start": "304800",
    "end": "307360"
  },
  {
    "text": "this is pretty cool and shows the",
    "start": "307360",
    "end": "308680"
  },
  {
    "text": "strength of having a contract associated",
    "start": "308680",
    "end": "310639"
  },
  {
    "text": "with our service which is really",
    "start": "310639",
    "end": "312600"
  },
  {
    "text": "difficult to achieve for the other types",
    "start": "312600",
    "end": "314039"
  },
  {
    "text": "of RPC to do so you'd need to Define",
    "start": "314039",
    "end": "316560"
  },
  {
    "text": "your contract using something such as an",
    "start": "316560",
    "end": "318280"
  },
  {
    "text": "open API spec which isn't the nicest",
    "start": "318280",
    "end": "320840"
  },
  {
    "text": "thing to write then you can load the",
    "start": "320840",
    "end": "322759"
  },
  {
    "text": "open API spec into a open API UI and get",
    "start": "322759",
    "end": "326120"
  },
  {
    "text": "something similar however there's a",
    "start": "326120",
    "end": "328080"
  },
  {
    "text": "catch your open API contract isn't",
    "start": "328080",
    "end": "330479"
  },
  {
    "text": "always guaranteed to match your actual",
    "start": "330479",
    "end": "332319"
  },
  {
    "text": "service so even then you need to add",
    "start": "332319",
    "end": "334680"
  },
  {
    "text": "contract testing into your API to ensure",
    "start": "334680",
    "end": "337039"
  },
  {
    "text": "parity with the open API specification",
    "start": "337039",
    "end": "339840"
  },
  {
    "text": "all of this is a lot more work and",
    "start": "339840",
    "end": "341639"
  },
  {
    "text": "maintenance just to get to the same",
    "start": "341639",
    "end": "343160"
  },
  {
    "text": "feature set that grpc gives you for free",
    "start": "343160",
    "end": "346680"
  },
  {
    "start": "346000",
    "end": "774000"
  },
  {
    "text": "so now that I've hopefully convinced you",
    "start": "346680",
    "end": "348319"
  },
  {
    "text": "of the benefits of grpc let's take a",
    "start": "348319",
    "end": "350600"
  },
  {
    "text": "look at actually building our own",
    "start": "350600",
    "end": "352080"
  },
  {
    "text": "version of the calculator service we",
    "start": "352080",
    "end": "353960"
  },
  {
    "text": "were just using both protuff and grpc",
    "start": "353960",
    "end": "356840"
  },
  {
    "text": "themselves are language agnostic but I'm",
    "start": "356840",
    "end": "358960"
  },
  {
    "text": "going to use use goang in this video as",
    "start": "358960",
    "end": "360840"
  },
  {
    "text": "I feel it does a good job of showing the",
    "start": "360840",
    "end": "362520"
  },
  {
    "text": "endtoend process if you want me to do a",
    "start": "362520",
    "end": "364840"
  },
  {
    "text": "video on grpc in a specific language",
    "start": "364840",
    "end": "367520"
  },
  {
    "text": "then please let me know in the comments",
    "start": "367520",
    "end": "369000"
  },
  {
    "text": "down below let's begin by creating a new",
    "start": "369000",
    "end": "371639"
  },
  {
    "text": "directory and initializing our project",
    "start": "371639",
    "end": "373440"
  },
  {
    "text": "using go mod in it next we'll want to",
    "start": "373440",
    "end": "376000"
  },
  {
    "text": "create a folder called Proto with a file",
    "start": "376000",
    "end": "377680"
  },
  {
    "text": "inside called calculator. prototo which",
    "start": "377680",
    "end": "380039"
  },
  {
    "text": "will then open up in our editor the",
    "start": "380039",
    "end": "382080"
  },
  {
    "text": "first line of this file is used to",
    "start": "382080",
    "end": "383599"
  },
  {
    "text": "specify which version of protuff we're",
    "start": "383599",
    "end": "385440"
  },
  {
    "text": "using in our case Proto 3 the next line",
    "start": "385440",
    "end": "388240"
  },
  {
    "text": "is used to name the package of our",
    "start": "388240",
    "end": "389880"
  },
  {
    "text": "protuff file I'm going to call mine",
    "start": "389880",
    "end": "391840"
  },
  {
    "text": "calculator then we Define our actual",
    "start": "391840",
    "end": "394199"
  },
  {
    "text": "service which again is called calculator",
    "start": "394199",
    "end": "396960"
  },
  {
    "text": "inside of the service block is where",
    "start": "396960",
    "end": "398319"
  },
  {
    "text": "we're going to specify the RPC methods",
    "start": "398319",
    "end": "400479"
  },
  {
    "text": "that our service provides we do this by",
    "start": "400479",
    "end": "402759"
  },
  {
    "text": "using the RPC keyword followed by the",
    "start": "402759",
    "end": "404759"
  },
  {
    "text": "name of the method in this case we're",
    "start": "404759",
    "end": "406520"
  },
  {
    "text": "defining the at method we then specify",
    "start": "406520",
    "end": "408960"
  },
  {
    "text": "the inputs for this method inside of the",
    "start": "408960",
    "end": "411319"
  },
  {
    "text": "parentheses here our input is called",
    "start": "411319",
    "end": "413520"
  },
  {
    "text": "calculation request which we're going to",
    "start": "413520",
    "end": "415199"
  },
  {
    "text": "Define in a minute next we'll add the",
    "start": "415199",
    "end": "417520"
  },
  {
    "text": "returns keyword followed by the type we",
    "start": "417520",
    "end": "419199"
  },
  {
    "text": "wish to respond with we've named our",
    "start": "419199",
    "end": "421319"
  },
  {
    "text": "type calculation response let's go ahead",
    "start": "421319",
    "end": "423800"
  },
  {
    "text": "and create both of these types in grpc",
    "start": "423800",
    "end": "426639"
  },
  {
    "text": "types are known as messages and we can",
    "start": "426639",
    "end": "428879"
  },
  {
    "text": "Define one with the message keyword",
    "start": "428879",
    "end": "430479"
  },
  {
    "text": "followed by the name we wish to give it",
    "start": "430479",
    "end": "432599"
  },
  {
    "text": "here we're creating a message called",
    "start": "432599",
    "end": "434240"
  },
  {
    "text": "calculation request inside we then need",
    "start": "434240",
    "end": "436280"
  },
  {
    "text": "to define the body of this request known",
    "start": "436280",
    "end": "438520"
  },
  {
    "text": "as the fields let's add our first field",
    "start": "438520",
    "end": "440720"
  },
  {
    "text": "which will be the left hand side of the",
    "start": "440720",
    "end": "442240"
  },
  {
    "text": "calculation the first thing we need to",
    "start": "442240",
    "end": "444080"
  },
  {
    "text": "Define is the fields type in our case we",
    "start": "444080",
    "end": "446360"
  },
  {
    "text": "want to set this to be an int64 after",
    "start": "446360",
    "end": "448759"
  },
  {
    "text": "the fields type we can give the field a",
    "start": "448759",
    "end": "450520"
  },
  {
    "text": "name we'll call ours A lastly we need to",
    "start": "450520",
    "end": "453240"
  },
  {
    "text": "set a field number this number must be",
    "start": "453240",
    "end": "455520"
  },
  {
    "text": "unique across the fields inside of a",
    "start": "455520",
    "end": "457360"
  },
  {
    "text": "message let's go ahead and set this to",
    "start": "457360",
    "end": "459160"
  },
  {
    "text": "the number one we can now do the same",
    "start": "459160",
    "end": "461160"
  },
  {
    "text": "for the right hand side of the",
    "start": "461160",
    "end": "462400"
  },
  {
    "text": "calculation called B with our request",
    "start": "462400",
    "end": "465120"
  },
  {
    "text": "message defined let's go ahead and do",
    "start": "465120",
    "end": "466960"
  },
  {
    "text": "the same for the response message inside",
    "start": "466960",
    "end": "469240"
  },
  {
    "text": "we'll Define a single field called",
    "start": "469240",
    "end": "470919"
  },
  {
    "text": "result which is of type int64 and has a",
    "start": "470919",
    "end": "473400"
  },
  {
    "text": "field number of one lastly we just need",
    "start": "473400",
    "end": "475960"
  },
  {
    "text": "to add in the following line which is an",
    "start": "475960",
    "end": "478240"
  },
  {
    "text": "option when generating Goan code this",
    "start": "478240",
    "end": "480919"
  },
  {
    "text": "option will specify which package we",
    "start": "480919",
    "end": "482759"
  },
  {
    "text": "want our generated code to reside in",
    "start": "482759",
    "end": "484960"
  },
  {
    "text": "once that's done go ahead and save the",
    "start": "484960",
    "end": "486680"
  },
  {
    "text": "file with our service defined in protuff",
    "start": "486680",
    "end": "489599"
  },
  {
    "text": "we can now use it to generate some grpc",
    "start": "489599",
    "end": "492440"
  },
  {
    "text": "code to do that we first need to install",
    "start": "492440",
    "end": "494759"
  },
  {
    "text": "a couple of tools the first tool is",
    "start": "494759",
    "end": "496840"
  },
  {
    "text": "protoc C which is the protuff compiler",
    "start": "496840",
    "end": "499360"
  },
  {
    "text": "this can be found in the protuff package",
    "start": "499360",
    "end": "501840"
  },
  {
    "text": "next we need to install our language",
    "start": "501840",
    "end": "503639"
  },
  {
    "text": "specific plugins for goang that's the",
    "start": "503639",
    "end": "505919"
  },
  {
    "text": "following two packages Proto Cen go and",
    "start": "505919",
    "end": "508520"
  },
  {
    "text": "protoc Cen go grpc these can be",
    "start": "508520",
    "end": "511120"
  },
  {
    "text": "installed through goang using the go",
    "start": "511120",
    "end": "513039"
  },
  {
    "text": "install command or through your",
    "start": "513039",
    "end": "514518"
  },
  {
    "text": "operating systems package manager I've",
    "start": "514519",
    "end": "516640"
  },
  {
    "text": "also left instructions on the GitHub",
    "start": "516640",
    "end": "518360"
  },
  {
    "text": "repo for this video you can find the",
    "start": "518360",
    "end": "519880"
  },
  {
    "text": "link to it in the description down below",
    "start": "519880",
    "end": "522000"
  },
  {
    "text": "with that done we're now ready to",
    "start": "522000",
    "end": "523279"
  },
  {
    "text": "generate some code to do so we just need",
    "start": "523279",
    "end": "525600"
  },
  {
    "text": "to run the following command in our",
    "start": "525600",
    "end": "527160"
  },
  {
    "text": "terminal which will load all of the dot",
    "start": "527160",
    "end": "529080"
  },
  {
    "text": "Proto files in our Proto directory and",
    "start": "529080",
    "end": "531320"
  },
  {
    "text": "generate both go models and go grpc code",
    "start": "531320",
    "end": "535080"
  },
  {
    "text": "this command is a little bit gross to",
    "start": "535080",
    "end": "536720"
  },
  {
    "text": "type however it's usually a good idea to",
    "start": "536720",
    "end": "538839"
  },
  {
    "text": "add a make file or something similar so",
    "start": "538839",
    "end": "540640"
  },
  {
    "text": "that we don't have to keep typing it out",
    "start": "540640",
    "end": "542600"
  },
  {
    "text": "to do so create a new make file in the",
    "start": "542600",
    "end": "544480"
  },
  {
    "text": "project and add in the following lines",
    "start": "544480",
    "end": "547000"
  },
  {
    "text": "now we can run make generate inside of",
    "start": "547000",
    "end": "548800"
  },
  {
    "text": "our project directory and our protuff",
    "start": "548800",
    "end": "550640"
  },
  {
    "text": "will be created for us if everything",
    "start": "550640",
    "end": "552480"
  },
  {
    "text": "worked correctly you should have a",
    "start": "552480",
    "end": "553959"
  },
  {
    "text": "directory or package called PB and",
    "start": "553959",
    "end": "556160"
  },
  {
    "text": "inside of it we should see our generated",
    "start": "556160",
    "end": "558079"
  },
  {
    "text": "code now we're ready to go ahead and use",
    "start": "558079",
    "end": "560399"
  },
  {
    "text": "this to create a service the first thing",
    "start": "560399",
    "end": "562440"
  },
  {
    "text": "you want to do is install the grpc",
    "start": "562440",
    "end": "564680"
  },
  {
    "text": "package from Google using the goget",
    "start": "564680",
    "end": "566680"
  },
  {
    "text": "command once that's completed create a",
    "start": "566680",
    "end": "568640"
  },
  {
    "text": "new directory tree called server and",
    "start": "568640",
    "end": "570680"
  },
  {
    "text": "inside add a new file called main.go",
    "start": "570680",
    "end": "572839"
  },
  {
    "text": "opening this up let's define our package",
    "start": "572839",
    "end": "575519"
  },
  {
    "text": "and create an empty main function inside",
    "start": "575519",
    "end": "578320"
  },
  {
    "text": "now we can begin creating our server",
    "start": "578320",
    "end": "580240"
  },
  {
    "text": "let's first Define a new struct called",
    "start": "580240",
    "end": "581959"
  },
  {
    "text": "server which inherits from the",
    "start": "581959",
    "end": "583519"
  },
  {
    "text": "unimplemented calculator server found in",
    "start": "583519",
    "end": "585920"
  },
  {
    "text": "our PB code g package make sure to",
    "start": "585920",
    "end": "588360"
  },
  {
    "text": "import both this and the context",
    "start": "588360",
    "end": "590120"
  },
  {
    "text": "packages next we need to Define our ad",
    "start": "590120",
    "end": "592720"
  },
  {
    "text": "method we can do so by using the",
    "start": "592720",
    "end": "594519"
  },
  {
    "text": "following function definition which",
    "start": "594519",
    "end": "596480"
  },
  {
    "text": "accepts a context. context and a pb.",
    "start": "596480",
    "end": "599120"
  },
  {
    "text": "calculation request finally we'll return",
    "start": "599120",
    "end": "601600"
  },
  {
    "text": "our response type of pb. calculation",
    "start": "601600",
    "end": "604040"
  },
  {
    "text": "response and an error if one exists the",
    "start": "604040",
    "end": "606839"
  },
  {
    "text": "actual function itself is pretty easy",
    "start": "606839",
    "end": "608880"
  },
  {
    "text": "we'll just return a response which",
    "start": "608880",
    "end": "610279"
  },
  {
    "text": "contains the sum of our two numbers and",
    "start": "610279",
    "end": "612440"
  },
  {
    "text": "a nil for the error pretty simple All",
    "start": "612440",
    "end": "614760"
  },
  {
    "text": "That Remains is to load up our server",
    "start": "614760",
    "end": "616839"
  },
  {
    "text": "inside of our main function to begin",
    "start": "616839",
    "end": "619079"
  },
  {
    "text": "first import the following four packages",
    "start": "619079",
    "end": "621360"
  },
  {
    "text": "then scroll down to the main function",
    "start": "621360",
    "end": "623079"
  },
  {
    "text": "and create a TCP listener to listen on",
    "start": "623079",
    "end": "625079"
  },
  {
    "text": "port 8080 followed by creating a new",
    "start": "625079",
    "end": "627399"
  },
  {
    "text": "grpc server type let's also add in the",
    "start": "627399",
    "end": "630079"
  },
  {
    "text": "following line to enable reflection",
    "start": "630079",
    "end": "631959"
  },
  {
    "text": "which we'll want for testing at this",
    "start": "631959",
    "end": "633600"
  },
  {
    "text": "time we then just need to register an",
    "start": "633600",
    "end": "635560"
  },
  {
    "text": "instance of our calculator server to the",
    "start": "635560",
    "end": "637519"
  },
  {
    "text": "grpc service which will then serve using",
    "start": "637519",
    "end": "640120"
  },
  {
    "text": "the TCP listener we just created as a",
    "start": "640120",
    "end": "642639"
  },
  {
    "text": "note it's worth mentioning that grpc",
    "start": "642639",
    "end": "644720"
  },
  {
    "text": "only works over htttp 2 rather than HTTP",
    "start": "644720",
    "end": "647639"
  },
  {
    "text": "1.1 which is why we're using a TCP",
    "start": "647639",
    "end": "650200"
  },
  {
    "text": "listener now if we run this code we can",
    "start": "650200",
    "end": "652079"
  },
  {
    "text": "test everything is working by connecting",
    "start": "652079",
    "end": "653680"
  },
  {
    "text": "to it with our grpc client using the",
    "start": "653680",
    "end": "655959"
  },
  {
    "text": "following command if we go ahead and",
    "start": "655959",
    "end": "658000"
  },
  {
    "text": "test our ad method we we can see that",
    "start": "658000",
    "end": "659519"
  },
  {
    "text": "everything is working as expected so far",
    "start": "659519",
    "end": "662000"
  },
  {
    "text": "so good let's go ahead and get this",
    "start": "662000",
    "end": "663600"
  },
  {
    "text": "deployed to the cloud before we add any",
    "start": "663600",
    "end": "665240"
  },
  {
    "text": "more functionality to do that we're",
    "start": "665240",
    "end": "667279"
  },
  {
    "text": "going to need a Docker file let's create",
    "start": "667279",
    "end": "669240"
  },
  {
    "text": "a new one and add in the following lines",
    "start": "669240",
    "end": "671480"
  },
  {
    "text": "this will build our app using go 1.20",
    "start": "671480",
    "end": "673800"
  },
  {
    "text": "and we'll use a different Docker stage",
    "start": "673800",
    "end": "675560"
  },
  {
    "text": "in order to run the binary with the",
    "start": "675560",
    "end": "677639"
  },
  {
    "text": "docker file in place we can now test",
    "start": "677639",
    "end": "679279"
  },
  {
    "text": "that everything is working by opening up",
    "start": "679279",
    "end": "680880"
  },
  {
    "text": "a new terminal window and running Docker",
    "start": "680880",
    "end": "682720"
  },
  {
    "text": "build next up I'm going to show you how",
    "start": "682720",
    "end": "684760"
  },
  {
    "text": "to get this running on acor to do so is",
    "start": "684760",
    "end": "687200"
  },
  {
    "text": "pretty simple we first just need to",
    "start": "687200",
    "end": "689040"
  },
  {
    "text": "download the acon CLI to our machine",
    "start": "689040",
    "end": "691560"
  },
  {
    "text": "which you can do pretty easily using",
    "start": "691560",
    "end": "693000"
  },
  {
    "text": "Homebrew on Mac OS or following the",
    "start": "693000",
    "end": "695240"
  },
  {
    "text": "documentation on Linux with the CLI",
    "start": "695240",
    "end": "698000"
  },
  {
    "text": "installed we can then call the acon",
    "start": "698000",
    "end": "699519"
  },
  {
    "text": "login command to log to acon Cloud we",
    "start": "699519",
    "end": "702440"
  },
  {
    "text": "should get a success message letting us",
    "start": "702440",
    "end": "704200"
  },
  {
    "text": "know that we're in now that we're logged",
    "start": "704200",
    "end": "706200"
  },
  {
    "text": "into acon we can go ahead and start",
    "start": "706200",
    "end": "708040"
  },
  {
    "text": "writing our acon file this file is",
    "start": "708040",
    "end": "710800"
  },
  {
    "text": "basically a really simple way to declare",
    "start": "710800",
    "end": "712800"
  },
  {
    "text": "complex applications which when pushed",
    "start": "712800",
    "end": "715240"
  },
  {
    "text": "to the acor platform will spin up the",
    "start": "715240",
    "end": "717320"
  },
  {
    "text": "environment as we've declared it inside",
    "start": "717320",
    "end": "719720"
  },
  {
    "text": "of this file we'll declare a container",
    "start": "719720",
    "end": "721440"
  },
  {
    "text": "for our calculator which will build the",
    "start": "721440",
    "end": "723240"
  },
  {
    "text": "local Docker file we'll then expose Port",
    "start": "723240",
    "end": "725399"
  },
  {
    "text": "880 with an http2 interface which is",
    "start": "725399",
    "end": "728040"
  },
  {
    "text": "needed for grpc to then deploy this all",
    "start": "728040",
    "end": "730639"
  },
  {
    "text": "we have to do is call acor run and pass",
    "start": "730639",
    "end": "732639"
  },
  {
    "text": "in the name we want to give to the app",
    "start": "732639",
    "end": "734399"
  },
  {
    "text": "acor will then build our app for us and",
    "start": "734399",
    "end": "736199"
  },
  {
    "text": "deploy it providing us with the URL of",
    "start": "736199",
    "end": "738480"
  },
  {
    "text": "our deployed application if we then take",
    "start": "738480",
    "end": "740720"
  },
  {
    "text": "this URL we can use it with our RPC",
    "start": "740720",
    "end": "742920"
  },
  {
    "text": "client when testing this for the first",
    "start": "742920",
    "end": "744959"
  },
  {
    "text": "time I received a context canceled when",
    "start": "744959",
    "end": "747000"
  },
  {
    "text": "trying to connect most likely due to DNS",
    "start": "747000",
    "end": "749360"
  },
  {
    "text": "propagation I haven't seen that error",
    "start": "749360",
    "end": "751399"
  },
  {
    "text": "come up since so if it does happen to",
    "start": "751399",
    "end": "753160"
  },
  {
    "text": "you just wait a few seconds and try",
    "start": "753160",
    "end": "754839"
  },
  {
    "text": "again connecting to our server we can",
    "start": "754839",
    "end": "756519"
  },
  {
    "text": "see our OD method is available for us to",
    "start": "756519",
    "end": "758600"
  },
  {
    "text": "interact with and works as expected so",
    "start": "758600",
    "end": "761920"
  },
  {
    "text": "this is great we've just managed to",
    "start": "761920",
    "end": "763680"
  },
  {
    "text": "create our first grpc method the method",
    "start": "763680",
    "end": "766639"
  },
  {
    "text": "we created is pretty simple and isn't",
    "start": "766639",
    "end": "768639"
  },
  {
    "text": "likely to fail but what about a method",
    "start": "768639",
    "end": "770519"
  },
  {
    "text": "that could cause an error how would we",
    "start": "770519",
    "end": "772880"
  },
  {
    "text": "handle it to understand error handling",
    "start": "772880",
    "end": "775360"
  },
  {
    "start": "774000",
    "end": "947000"
  },
  {
    "text": "in grpc let's look at implementing The",
    "start": "775360",
    "end": "777880"
  },
  {
    "text": "Divide method of our calculator service",
    "start": "777880",
    "end": "780279"
  },
  {
    "text": "to do that head back on over to the",
    "start": "780279",
    "end": "781920"
  },
  {
    "text": "calculator. prototo file and add in a",
    "start": "781920",
    "end": "784040"
  },
  {
    "text": "new method called divide this method",
    "start": "784040",
    "end": "786160"
  },
  {
    "text": "will accept the same calculation request",
    "start": "786160",
    "end": "788199"
  },
  {
    "text": "and return a calculation response let's",
    "start": "788199",
    "end": "790880"
  },
  {
    "text": "save this file and use the make generate",
    "start": "790880",
    "end": "792880"
  },
  {
    "text": "command we made earlier in order to",
    "start": "792880",
    "end": "794519"
  },
  {
    "text": "regenerate our code now let's head back",
    "start": "794519",
    "end": "796720"
  },
  {
    "text": "into our main file and implement this",
    "start": "796720",
    "end": "798519"
  },
  {
    "text": "method we'll do this naively at first",
    "start": "798519",
    "end": "800920"
  },
  {
    "text": "which is just dividing input a by input",
    "start": "800920",
    "end": "803160"
  },
  {
    "text": "B pretty simple now let's run this",
    "start": "803160",
    "end": "805800"
  },
  {
    "text": "interactively on acon using the acon Run",
    "start": "805800",
    "end": "808199"
  },
  {
    "text": "command with the I flag to test our",
    "start": "808199",
    "end": "810440"
  },
  {
    "text": "divide method I'm going to use grpc Curl",
    "start": "810440",
    "end": "813279"
  },
  {
    "text": "which is a CLI tool for sending grpc",
    "start": "813279",
    "end": "815639"
  },
  {
    "text": "requests as you would curl if we cool",
    "start": "815639",
    "end": "818519"
  },
  {
    "text": "our method with an input of 10 and two",
    "start": "818519",
    "end": "820880"
  },
  {
    "text": "then we get back the result of five",
    "start": "820880",
    "end": "822519"
  },
  {
    "text": "which is expected however what happens",
    "start": "822519",
    "end": "824839"
  },
  {
    "text": "if we try to divide by zero well it",
    "start": "824839",
    "end": "827399"
  },
  {
    "text": "crashes the server not great but this is",
    "start": "827399",
    "end": "829839"
  },
  {
    "text": "also expected bad input is a common",
    "start": "829839",
    "end": "833279"
  },
  {
    "text": "problem when it comes to apis as you can",
    "start": "833279",
    "end": "835680"
  },
  {
    "text": "never really trust the client ever so",
    "start": "835680",
    "end": "838079"
  },
  {
    "text": "our service need needs to validate the",
    "start": "838079",
    "end": "839800"
  },
  {
    "text": "input and return an error if there's",
    "start": "839800",
    "end": "841560"
  },
  {
    "text": "something wrong with the values in a",
    "start": "841560",
    "end": "843399"
  },
  {
    "text": "restful API this error would look like a",
    "start": "843399",
    "end": "845880"
  },
  {
    "text": "status code of 400 being sent back to",
    "start": "845880",
    "end": "848000"
  },
  {
    "text": "the client with perhaps an error message",
    "start": "848000",
    "end": "850040"
  },
  {
    "text": "letting them know what went wrong when",
    "start": "850040",
    "end": "852040"
  },
  {
    "text": "it comes to grpc however things are a",
    "start": "852040",
    "end": "854360"
  },
  {
    "text": "little different as our service is",
    "start": "854360",
    "end": "856519"
  },
  {
    "text": "backed by a contract we can't be Loosey",
    "start": "856519",
    "end": "858880"
  },
  {
    "text": "Goosey about what we send back to the",
    "start": "858880",
    "end": "860600"
  },
  {
    "text": "client so what do we do one approach",
    "start": "860600",
    "end": "862920"
  },
  {
    "text": "could be to Define an error message",
    "start": "862920",
    "end": "864720"
  },
  {
    "text": "within our protuff schema and we could",
    "start": "864720",
    "end": "866880"
  },
  {
    "text": "then add it as an optional field in our",
    "start": "866880",
    "end": "868759"
  },
  {
    "text": "calculation response this means we'd",
    "start": "868759",
    "end": "870680"
  },
  {
    "text": "also need to Define our result as",
    "start": "870680",
    "end": "872279"
  },
  {
    "text": "optional as well given that our response",
    "start": "872279",
    "end": "874360"
  },
  {
    "text": "would only ever contain an error or a",
    "start": "874360",
    "end": "876800"
  },
  {
    "text": "result this approach is a little clunky",
    "start": "876800",
    "end": "879680"
  },
  {
    "text": "however we'd also have to repeat this",
    "start": "879680",
    "end": "881560"
  },
  {
    "text": "for every response message we defined",
    "start": "881560",
    "end": "883920"
  },
  {
    "text": "luckily for us there is a better way",
    "start": "883920",
    "end": "886040"
  },
  {
    "text": "let's jump back on over to our",
    "start": "886040",
    "end": "887560"
  },
  {
    "text": "implementation code in the main.go file",
    "start": "887560",
    "end": "890240"
  },
  {
    "text": "in order to handle our error let's first",
    "start": "890240",
    "end": "892320"
  },
  {
    "text": "import the codes and Status modules of",
    "start": "892320",
    "end": "894560"
  },
  {
    "text": "the grpc package next scroll down to the",
    "start": "894560",
    "end": "897480"
  },
  {
    "text": "Divide methods implement ation let's",
    "start": "897480",
    "end": "899759"
  },
  {
    "text": "first add in a check to see if the",
    "start": "899759",
    "end": "901320"
  },
  {
    "text": "diviser the right hand side is zero if",
    "start": "901320",
    "end": "904279"
  },
  {
    "text": "so then we want to return an error in",
    "start": "904279",
    "end": "905959"
  },
  {
    "text": "the function which we can do using the",
    "start": "905959",
    "end": "907920"
  },
  {
    "text": "status. error method this function",
    "start": "907920",
    "end": "910320"
  },
  {
    "text": "expects both a status code and an error",
    "start": "910320",
    "end": "912519"
  },
  {
    "text": "message string the code most applicable",
    "start": "912519",
    "end": "914839"
  },
  {
    "text": "to our situation is the invalid argument",
    "start": "914839",
    "end": "917320"
  },
  {
    "text": "error code and we'll set the error",
    "start": "917320",
    "end": "919279"
  },
  {
    "text": "message to be cannot divide by zero",
    "start": "919279",
    "end": "921680"
  },
  {
    "text": "let's now redeploy this code on our",
    "start": "921680",
    "end": "923120"
  },
  {
    "text": "server in order to test it whilst acor",
    "start": "923120",
    "end": "925440"
  },
  {
    "text": "is running in interactive mode if we run",
    "start": "925440",
    "end": "927440"
  },
  {
    "text": "the touch command against our acon file",
    "start": "927440",
    "end": "929399"
  },
  {
    "text": "it will automatically rebuild and deploy",
    "start": "929399",
    "end": "931319"
  },
  {
    "text": "our project for us once it's done we can",
    "start": "931319",
    "end": "933639"
  },
  {
    "text": "go ahead and rerun the grpc Cur command",
    "start": "933639",
    "end": "935880"
  },
  {
    "text": "against our server as you can see the",
    "start": "935880",
    "end": "938160"
  },
  {
    "text": "server no longer crashes and the client",
    "start": "938160",
    "end": "940120"
  },
  {
    "text": "receives a response telling it what went",
    "start": "940120",
    "end": "941839"
  },
  {
    "text": "wrong which provides a much better",
    "start": "941839",
    "end": "944000"
  },
  {
    "text": "developer experience when consuming the",
    "start": "944000",
    "end": "946199"
  },
  {
    "text": "API so that almost wraps up our grpc",
    "start": "946199",
    "end": "949199"
  },
  {
    "start": "947000",
    "end": "1027000"
  },
  {
    "text": "server but there's one last thing to",
    "start": "949199",
    "end": "950920"
  },
  {
    "text": "look at before we begin implementing our",
    "start": "950920",
    "end": "953120"
  },
  {
    "text": "client for this final task we want to",
    "start": "953120",
    "end": "955360"
  },
  {
    "text": "add a new method called sum which will",
    "start": "955360",
    "end": "957519"
  },
  {
    "text": "accept a list of integers and return the",
    "start": "957519",
    "end": "959480"
  },
  {
    "text": "sum of them all to do this let's head",
    "start": "959480",
    "end": "961880"
  },
  {
    "text": "back on over to our calculator protuff",
    "start": "961880",
    "end": "964360"
  },
  {
    "text": "and we'll add in a new RPC method called",
    "start": "964360",
    "end": "966639"
  },
  {
    "text": "sum this method will take a new input",
    "start": "966639",
    "end": "968959"
  },
  {
    "text": "message which we're going to call",
    "start": "968959",
    "end": "970199"
  },
  {
    "text": "numbers request and it will return the",
    "start": "970199",
    "end": "972600"
  },
  {
    "text": "existing calculation response message",
    "start": "972600",
    "end": "974920"
  },
  {
    "text": "now we can Define our numbers request in",
    "start": "974920",
    "end": "977480"
  },
  {
    "text": "order for this message to contain a list",
    "start": "977480",
    "end": "979360"
  },
  {
    "text": "of integers we can use the repeated",
    "start": "979360",
    "end": "981519"
  },
  {
    "text": "keyword on a field which tells protuff",
    "start": "981519",
    "end": "983839"
  },
  {
    "text": "we expect this type to be a list",
    "start": "983839",
    "end": "985600"
  },
  {
    "text": "containing zero or more values with that",
    "start": "985600",
    "end": "988560"
  },
  {
    "text": "we're ready to generate our code opening",
    "start": "988560",
    "end": "990880"
  },
  {
    "text": "up a new terminal window let's go ahead",
    "start": "990880",
    "end": "992880"
  },
  {
    "text": "and run make generate to generate our",
    "start": "992880",
    "end": "994560"
  },
  {
    "text": "code and then start implementing this",
    "start": "994560",
    "end": "996279"
  },
  {
    "text": "new method this should be reasonably",
    "start": "996279",
    "end": "998560"
  },
  {
    "text": "familiar at this point the only",
    "start": "998560",
    "end": "1000120"
  },
  {
    "text": "difference is the new type that we've",
    "start": "1000120",
    "end": "1001720"
  },
  {
    "text": "defined for this implementation we're",
    "start": "1001720",
    "end": "1003720"
  },
  {
    "text": "just going to iterate over the numbers",
    "start": "1003720",
    "end": "1005519"
  },
  {
    "text": "in the input array and return the",
    "start": "1005519",
    "end": "1007319"
  },
  {
    "text": "response now let's go ahead and redeploy",
    "start": "1007319",
    "end": "1009519"
  },
  {
    "text": "this using the acor Run command with the",
    "start": "1009519",
    "end": "1011639"
  },
  {
    "text": "update flag we can then test this new",
    "start": "1011639",
    "end": "1013560"
  },
  {
    "text": "method using either the grpc UI or grpc",
    "start": "1013560",
    "end": "1017120"
  },
  {
    "text": "curl when using GR RPC Co we're setting",
    "start": "1017120",
    "end": "1019560"
  },
  {
    "text": "the numbers as we would a Json array",
    "start": "1019560",
    "end": "1021880"
  },
  {
    "text": "when we invoke our request we receive",
    "start": "1021880",
    "end": "1023440"
  },
  {
    "text": "the result we're expecting back telling",
    "start": "1023440",
    "end": "1025038"
  },
  {
    "text": "us that everything is working as",
    "start": "1025039",
    "end": "1026839"
  },
  {
    "text": "intended that wraps up our calculator",
    "start": "1026839",
    "end": "1029319"
  },
  {
    "start": "1027000",
    "end": "1139000"
  },
  {
    "text": "service but we're not finished yet so",
    "start": "1029319",
    "end": "1031839"
  },
  {
    "text": "far we've been using pre-made grpc",
    "start": "1031839",
    "end": "1034079"
  },
  {
    "text": "clients to interface with our server but",
    "start": "1034079",
    "end": "1036520"
  },
  {
    "text": "in the real world we're going to want to",
    "start": "1036520",
    "end": "1038079"
  },
  {
    "text": "use a grpc client within our code",
    "start": "1038079",
    "end": "1041000"
  },
  {
    "text": "fortunately whenever we generate code",
    "start": "1041000",
    "end": "1042678"
  },
  {
    "text": "with the protuff compiler we also",
    "start": "1042679",
    "end": "1044400"
  },
  {
    "text": "generate client code that we can use",
    "start": "1044400",
    "end": "1046480"
  },
  {
    "text": "let's look at how to do this to begin",
    "start": "1046480",
    "end": "1048760"
  },
  {
    "text": "let's first create a new directory",
    "start": "1048760",
    "end": "1050120"
  },
  {
    "text": "called client in our project with a",
    "start": "1050120",
    "end": "1052080"
  },
  {
    "text": "main.go file inside opening up this file",
    "start": "1052080",
    "end": "1055039"
  },
  {
    "text": "let's add in the package name import the",
    "start": "1055039",
    "end": "1057400"
  },
  {
    "text": "packages we're going to use and Define",
    "start": "1057400",
    "end": "1059360"
  },
  {
    "text": "our empty main function which we're",
    "start": "1059360",
    "end": "1061320"
  },
  {
    "text": "going to fill in first we'll specify a",
    "start": "1061320",
    "end": "1063559"
  },
  {
    "text": "CLI flag so we can set the server",
    "start": "1063559",
    "end": "1065400"
  },
  {
    "text": "address when we run our code the next",
    "start": "1065400",
    "end": "1067280"
  },
  {
    "text": "few lines are used to enable TLS which",
    "start": "1067280",
    "end": "1069200"
  },
  {
    "text": "we're going to need when deploying to",
    "start": "1069200",
    "end": "1070440"
  },
  {
    "text": "acor if you're running this locally or",
    "start": "1070440",
    "end": "1072440"
  },
  {
    "text": "deploying without TLS enabled check out",
    "start": "1072440",
    "end": "1074200"
  },
  {
    "text": "the source code on GitHub for how you",
    "start": "1074200",
    "end": "1075559"
  },
  {
    "text": "can disable this next we'll want to",
    "start": "1075559",
    "end": "1077679"
  },
  {
    "text": "create a grp connection using the dial",
    "start": "1077679",
    "end": "1079960"
  },
  {
    "text": "method of the grpc package passing in",
    "start": "1079960",
    "end": "1082559"
  },
  {
    "text": "both our server address and the grpc",
    "start": "1082559",
    "end": "1084919"
  },
  {
    "text": "options let's handle any errors and add",
    "start": "1084919",
    "end": "1087159"
  },
  {
    "text": "a defer to close the connection when our",
    "start": "1087159",
    "end": "1088840"
  },
  {
    "text": "main function is complete this code",
    "start": "1088840",
    "end": "1091039"
  },
  {
    "text": "creates the basic grpc connection for us",
    "start": "1091039",
    "end": "1093400"
  },
  {
    "text": "which we can now use with our generated",
    "start": "1093400",
    "end": "1095159"
  },
  {
    "text": "protuff to do so import the PB package",
    "start": "1095159",
    "end": "1097840"
  },
  {
    "text": "which contains our generated code and",
    "start": "1097840",
    "end": "1099840"
  },
  {
    "text": "then create a new instance of the",
    "start": "1099840",
    "end": "1101320"
  },
  {
    "text": "calculator client passing in the",
    "start": "1101320",
    "end": "1102919"
  },
  {
    "text": "connection with that we can now cool our",
    "start": "1102919",
    "end": "1105080"
  },
  {
    "text": "RPC methods using this connected client",
    "start": "1105080",
    "end": "1107679"
  },
  {
    "text": "here is how we would cool our recently",
    "start": "1107679",
    "end": "1109320"
  },
  {
    "text": "implemented sum method making sure to",
    "start": "1109320",
    "end": "1111880"
  },
  {
    "text": "also use our generated types with our",
    "start": "1111880",
    "end": "1114400"
  },
  {
    "text": "code completed let's go ahead and run",
    "start": "1114400",
    "end": "1116120"
  },
  {
    "text": "this using the G run command making sure",
    "start": "1116120",
    "end": "1118400"
  },
  {
    "text": "to pass in the URL of your deployed",
    "start": "1118400",
    "end": "1120280"
  },
  {
    "text": "service you should get back the",
    "start": "1120280",
    "end": "1121880"
  },
  {
    "text": "following response letting you know that",
    "start": "1121880",
    "end": "1123760"
  },
  {
    "text": "everything worked as expected with that",
    "start": "1123760",
    "end": "1126080"
  },
  {
    "text": "we've managed to create both our",
    "start": "1126080",
    "end": "1127320"
  },
  {
    "text": "calculator service and client all using",
    "start": "1127320",
    "end": "1129480"
  },
  {
    "text": "grpc and protuff I've intentionally left",
    "start": "1129480",
    "end": "1132200"
  },
  {
    "text": "out these subtraction and multiplication",
    "start": "1132200",
    "end": "1134120"
  },
  {
    "text": "methods as an exercise for you to",
    "start": "1134120",
    "end": "1135720"
  },
  {
    "text": "complete as you should have all of the",
    "start": "1135720",
    "end": "1137200"
  },
  {
    "text": "building blocks available to do so",
    "start": "1137200",
    "end": "1139159"
  },
  {
    "start": "1139000",
    "end": "1262000"
  },
  {
    "text": "before you go off and do that however I",
    "start": "1139159",
    "end": "1141000"
  },
  {
    "text": "have one last thing to show you whilst",
    "start": "1141000",
    "end": "1143320"
  },
  {
    "text": "I've given you the building blocks of",
    "start": "1143320",
    "end": "1144799"
  },
  {
    "text": "grpc you may be interested to know what",
    "start": "1144799",
    "end": "1147200"
  },
  {
    "text": "a grpc crud app looks like so I've",
    "start": "1147200",
    "end": "1149960"
  },
  {
    "text": "created one that you can reference this",
    "start": "1149960",
    "end": "1152000"
  },
  {
    "text": "is yet another acor app that you can",
    "start": "1152000",
    "end": "1153640"
  },
  {
    "text": "deploy yourselves which also integrates",
    "start": "1153640",
    "end": "1156080"
  },
  {
    "text": "with postes for persisting data you can",
    "start": "1156080",
    "end": "1158600"
  },
  {
    "text": "find a button to deploy this yourself in",
    "start": "1158600",
    "end": "1160480"
  },
  {
    "text": "the video GitHub repo which is linked in",
    "start": "1160480",
    "end": "1162799"
  },
  {
    "text": "the description down below this repo",
    "start": "1162799",
    "end": "1164919"
  },
  {
    "text": "also happens to contain the code itself",
    "start": "1164919",
    "end": "1166919"
  },
  {
    "text": "if you want to reference it this crup",
    "start": "1166919",
    "end": "1169320"
  },
  {
    "text": "provides all of the operations for",
    "start": "1169320",
    "end": "1170880"
  },
  {
    "text": "creating reading updating and deleting",
    "start": "1170880",
    "end": "1173200"
  },
  {
    "text": "Pokémon the one feature I really want to",
    "start": "1173200",
    "end": "1175080"
  },
  {
    "text": "show is inside of the create method if",
    "start": "1175080",
    "end": "1177320"
  },
  {
    "text": "you look at the request data you can see",
    "start": "1177320",
    "end": "1178840"
  },
  {
    "text": "we have an ID field a name field and a",
    "start": "1178840",
    "end": "1181400"
  },
  {
    "text": "type field which is an array if I go to",
    "start": "1181400",
    "end": "1183960"
  },
  {
    "text": "add a new item to our type array you'll",
    "start": "1183960",
    "end": "1186200"
  },
  {
    "text": "see that we're presented with a drop-",
    "start": "1186200",
    "end": "1187840"
  },
  {
    "text": "down list this is done using an enum in",
    "start": "1187840",
    "end": "1190440"
  },
  {
    "text": "our do Proto definition which allows us",
    "start": "1190440",
    "end": "1192760"
  },
  {
    "text": "to easily constrain the possible inputs",
    "start": "1192760",
    "end": "1195000"
  },
  {
    "text": "providing us with a greater level of",
    "start": "1195000",
    "end": "1196840"
  },
  {
    "text": "type safety while it is possible to",
    "start": "1196840",
    "end": "1199159"
  },
  {
    "text": "achieve this using a restful API it's",
    "start": "1199159",
    "end": "1201679"
  },
  {
    "text": "much harder for us to communicate that",
    "start": "1201679",
    "end": "1203159"
  },
  {
    "text": "enum representation to our clients at",
    "start": "1203159",
    "end": "1205840"
  },
  {
    "text": "this point you may feel like I'm saying",
    "start": "1205840",
    "end": "1207440"
  },
  {
    "text": "grpc is superior to rest and in some",
    "start": "1207440",
    "end": "1210039"
  },
  {
    "text": "ways it is but even with everything I've",
    "start": "1210039",
    "end": "1212240"
  },
  {
    "text": "said in this video there are some",
    "start": "1212240",
    "end": "1213559"
  },
  {
    "text": "drawbacks to using grpc some of these",
    "start": "1213559",
    "end": "1216240"
  },
  {
    "text": "drawbacks include the lack of a mature",
    "start": "1216240",
    "end": "1218440"
  },
  {
    "text": "ecosystem difficulty when introspecting",
    "start": "1218440",
    "end": "1220760"
  },
  {
    "text": "data and the lack of native web support",
    "start": "1220760",
    "end": "1223840"
  },
  {
    "text": "however more and more solutions are",
    "start": "1223840",
    "end": "1225200"
  },
  {
    "text": "being created to help with these",
    "start": "1225200",
    "end": "1226480"
  },
  {
    "text": "drawbacks one such solution is Envoy",
    "start": "1226480",
    "end": "1229400"
  },
  {
    "text": "which can act as a reverse proxy",
    "start": "1229400",
    "end": "1230919"
  },
  {
    "text": "converting rest into grpc but that's a",
    "start": "1230919",
    "end": "1233559"
  },
  {
    "text": "video for another time whilst I still",
    "start": "1233559",
    "end": "1235600"
  },
  {
    "text": "build a good number of restful apis grpc",
    "start": "1235600",
    "end": "1238720"
  },
  {
    "text": "has inspired me to take a contract first",
    "start": "1238720",
    "end": "1240840"
  },
  {
    "text": "approach changing the way I build",
    "start": "1240840",
    "end": "1242600"
  },
  {
    "text": "services for the better either way I'm",
    "start": "1242600",
    "end": "1244919"
  },
  {
    "text": "interested to hear more from you what do",
    "start": "1244919",
    "end": "1246640"
  },
  {
    "text": "you think of grpc let me know in the",
    "start": "1246640",
    "end": "1248600"
  },
  {
    "text": "comments down below I want to give a big",
    "start": "1248600",
    "end": "1250559"
  },
  {
    "text": "thank you to Acorn for sponsoring this",
    "start": "1250559",
    "end": "1252320"
  },
  {
    "text": "video they have a really cool product",
    "start": "1252320",
    "end": "1254159"
  },
  {
    "text": "which has been awesome in allowing me to",
    "start": "1254159",
    "end": "1255720"
  },
  {
    "text": "share these services with you otherwise",
    "start": "1255720",
    "end": "1257760"
  },
  {
    "text": "a big thank you for watching and I'll",
    "start": "1257760",
    "end": "1259200"
  },
  {
    "text": "see you on the next one",
    "start": "1259200",
    "end": "1263320"
  }
]