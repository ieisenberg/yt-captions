[
  {
    "start": "0",
    "end": "17000"
  },
  {
    "text": "in this video I'm going to show you how",
    "start": "199",
    "end": "2000"
  },
  {
    "text": "you can configure neovim to be the last",
    "start": "2000",
    "end": "3760"
  },
  {
    "text": "editor you'll need for rri and go by the",
    "start": "3760",
    "end": "6319"
  },
  {
    "text": "end of this video you'll have code",
    "start": "6319",
    "end": "7839"
  },
  {
    "text": "suggestions and Snippets Auto formatting",
    "start": "7839",
    "end": "10200"
  },
  {
    "text": "on save a powerful debugger and many",
    "start": "10200",
    "end": "13000"
  },
  {
    "text": "other utilities to make writing go code",
    "start": "13000",
    "end": "14679"
  },
  {
    "text": "and neovim an absolute pleasure as with",
    "start": "14679",
    "end": "17880"
  },
  {
    "start": "17000",
    "end": "91000"
  },
  {
    "text": "all of my new Vim configurations I'm",
    "start": "17880",
    "end": "19400"
  },
  {
    "text": "going to be starting from a base",
    "start": "19400",
    "end": "20560"
  },
  {
    "text": "installation of Envy Chad if you want a",
    "start": "20560",
    "end": "23080"
  },
  {
    "text": "better introduction to Envy Chad then I",
    "start": "23080",
    "end": "24680"
  },
  {
    "text": "recommend watching my intro video",
    "start": "24680",
    "end": "26279"
  },
  {
    "text": "beforehand you can always jump back",
    "start": "26279",
    "end": "28320"
  },
  {
    "text": "Hereafter to get started you'll want to",
    "start": "28320",
    "end": "30439"
  },
  {
    "text": "install the latest version of neovim",
    "start": "30439",
    "end": "32238"
  },
  {
    "text": "which at the time of recording is",
    "start": "32239",
    "end": "34000"
  },
  {
    "text": "version",
    "start": "34000",
    "end": "34960"
  },
  {
    "text": "0.9 I'm using Arch by the way so I'll go",
    "start": "34960",
    "end": "37760"
  },
  {
    "text": "ahead and install neovim using",
    "start": "37760",
    "end": "39960"
  },
  {
    "text": "Pac-Man once neovim is installed we can",
    "start": "39960",
    "end": "42680"
  },
  {
    "text": "now set up Envy Chad as our base",
    "start": "42680",
    "end": "44520"
  },
  {
    "text": "configuration if you already have a",
    "start": "44520",
    "end": "46280"
  },
  {
    "text": "neovim configuration setup it's probably",
    "start": "46280",
    "end": "48239"
  },
  {
    "text": "worthwhile to move it into a backup",
    "start": "48239",
    "end": "50239"
  },
  {
    "text": "First Once that's done you can install",
    "start": "50239",
    "end": "52480"
  },
  {
    "text": "mvy Chad by running the following git",
    "start": "52480",
    "end": "54280"
  },
  {
    "text": "command which will clone the repository",
    "start": "54280",
    "end": "56039"
  },
  {
    "text": "into our neovim config directory make",
    "start": "56039",
    "end": "58480"
  },
  {
    "text": "sure you have a git installed by the way",
    "start": "58480",
    "end": "60640"
  },
  {
    "text": "once that command is done you'll want to",
    "start": "60640",
    "end": "62239"
  },
  {
    "text": "open up neovim and you'll be greeted",
    "start": "62239",
    "end": "63760"
  },
  {
    "text": "with a prompt go ahead and type n for no",
    "start": "63760",
    "end": "66920"
  },
  {
    "text": "so that you're able to start with the",
    "start": "66920",
    "end": "68320"
  },
  {
    "text": "same configuration I am you should then",
    "start": "68320",
    "end": "70720"
  },
  {
    "text": "see the lazy package manager install our",
    "start": "70720",
    "end": "73040"
  },
  {
    "text": "base",
    "start": "73040",
    "end": "75200"
  },
  {
    "text": "packages once everything's installed I'm",
    "start": "75200",
    "end": "77520"
  },
  {
    "text": "going to set the theme to Capuchin by",
    "start": "77520",
    "end": "79479"
  },
  {
    "text": "pressing the space T and H key",
    "start": "79479",
    "end": "81920"
  },
  {
    "text": "combination to bring up the theme",
    "start": "81920",
    "end": "83320"
  },
  {
    "text": "switcher and selecting the best color",
    "start": "83320",
    "end": "85600"
  },
  {
    "text": "scheme from the list with that out of",
    "start": "85600",
    "end": "87799"
  },
  {
    "text": "the way we're in a good position to",
    "start": "87799",
    "end": "89000"
  },
  {
    "text": "start adding in our go plugins the first",
    "start": "89000",
    "end": "91479"
  },
  {
    "start": "91000",
    "end": "276000"
  },
  {
    "text": "thing we're going to want to do is set",
    "start": "91479",
    "end": "92520"
  },
  {
    "text": "up an LSP server to get code suggestion",
    "start": "92520",
    "end": "94640"
  },
  {
    "text": "aut complete and code analysis working",
    "start": "94640",
    "end": "97320"
  },
  {
    "text": "for go the popular LSP server is go",
    "start": "97320",
    "end": "99640"
  },
  {
    "text": "pleas so we're going to use that we can",
    "start": "99640",
    "end": "101520"
  },
  {
    "text": "install it by either using goget or",
    "start": "101520",
    "end": "103960"
  },
  {
    "text": "Mason which comes bundled with NV Chad",
    "start": "103960",
    "end": "106640"
  },
  {
    "text": "let's use Mason as it's worthwhile to",
    "start": "106640",
    "end": "108240"
  },
  {
    "text": "write configuration as code in my",
    "start": "108240",
    "end": "110000"
  },
  {
    "text": "opinion to do so we're going to need to",
    "start": "110000",
    "end": "112200"
  },
  {
    "text": "create a new file called plugins. Lower",
    "start": "112200",
    "end": "113880"
  },
  {
    "text": "in our neovim config under the custom",
    "start": "113880",
    "end": "116119"
  },
  {
    "text": "directory here we're going to create an",
    "start": "116119",
    "end": "118000"
  },
  {
    "text": "empty lure table called plugins and",
    "start": "118000",
    "end": "120240"
  },
  {
    "text": "return it now let's go ahead and add in",
    "start": "120240",
    "end": "122520"
  },
  {
    "text": "an entry for Mason this entry will merge",
    "start": "122520",
    "end": "125360"
  },
  {
    "text": "with the default entry in MV Chad",
    "start": "125360",
    "end": "126880"
  },
  {
    "text": "allowing us to add more configuration",
    "start": "126880",
    "end": "128759"
  },
  {
    "text": "options inside this entry add a value",
    "start": "128759",
    "end": "131360"
  },
  {
    "text": "for the Ops and add go please under the",
    "start": "131360",
    "end": "134040"
  },
  {
    "text": "ensure installed key after that jump on",
    "start": "134040",
    "end": "136959"
  },
  {
    "text": "over to your chat rc. L file also in the",
    "start": "136959",
    "end": "139280"
  },
  {
    "text": "custom directory and set the plugins",
    "start": "139280",
    "end": "141200"
  },
  {
    "text": "value of the mtable to be custom.",
    "start": "141200",
    "end": "143480"
  },
  {
    "text": "plugins which basically loads the file",
    "start": "143480",
    "end": "145519"
  },
  {
    "text": "we just created now go ahead and restart",
    "start": "145519",
    "end": "148160"
  },
  {
    "text": "neovim by closing and reopening it then",
    "start": "148160",
    "end": "150680"
  },
  {
    "text": "we can type the Mason install all",
    "start": "150680",
    "end": "152640"
  },
  {
    "text": "command and we should see go pleas being",
    "start": "152640",
    "end": "154720"
  },
  {
    "text": "installed next up we want to make sure",
    "start": "154720",
    "end": "156760"
  },
  {
    "text": "that go pleas is loaded whenever we're",
    "start": "156760",
    "end": "158560"
  },
  {
    "text": "working in a go file jumping back over",
    "start": "158560",
    "end": "160720"
  },
  {
    "text": "to our plugins file let's add in another",
    "start": "160720",
    "end": "162480"
  },
  {
    "text": "entry for neovim LSP config we'll also",
    "start": "162480",
    "end": "165080"
  },
  {
    "text": "override the configuration function to",
    "start": "165080",
    "end": "166720"
  },
  {
    "text": "load the default MV Chad configuration",
    "start": "166720",
    "end": "168800"
  },
  {
    "text": "but also our own custom config which",
    "start": "168800",
    "end": "170840"
  },
  {
    "text": "we're about to create let's create a new",
    "start": "170840",
    "end": "172920"
  },
  {
    "text": "directory called configs in our custom",
    "start": "172920",
    "end": "174599"
  },
  {
    "text": "folder and add a file of LSP config ler",
    "start": "174599",
    "end": "177640"
  },
  {
    "text": "here we're going to add in the",
    "start": "177640",
    "end": "178680"
  },
  {
    "text": "configuration for our go pleas server",
    "start": "178680",
    "end": "180879"
  },
  {
    "text": "the first thing to do is import the",
    "start": "180879",
    "end": "182319"
  },
  {
    "text": "onattach and capabilities functions from",
    "start": "182319",
    "end": "184440"
  },
  {
    "text": "the Envy Chad config if you've watched",
    "start": "184440",
    "end": "186760"
  },
  {
    "text": "any of my other videos this is a very",
    "start": "186760",
    "end": "188280"
  },
  {
    "text": "familiar process next up we can import",
    "start": "188280",
    "end": "190959"
  },
  {
    "text": "the neovim LSP config plugin and the",
    "start": "190959",
    "end": "193200"
  },
  {
    "text": "utilities helper don't worry by the way",
    "start": "193200",
    "end": "195360"
  },
  {
    "text": "if you get a yellow warning this is just",
    "start": "195360",
    "end": "196840"
  },
  {
    "text": "the lure LSP server complaining about",
    "start": "196840",
    "end": "198840"
  },
  {
    "text": "the naming Collision it won't cause any",
    "start": "198840",
    "end": "200680"
  },
  {
    "text": "negative effects however now that that's",
    "start": "200680",
    "end": "202760"
  },
  {
    "text": "done we can add in the go please entry",
    "start": "202760",
    "end": "204680"
  },
  {
    "text": "to our LSP config table by adding in the",
    "start": "204680",
    "end": "207080"
  },
  {
    "text": "following line we'll then call the setup",
    "start": "207080",
    "end": "209159"
  },
  {
    "text": "function and add in the onattach and",
    "start": "209159",
    "end": "211640"
  },
  {
    "text": "capabilities values we'll also set the",
    "start": "211640",
    "end": "213879"
  },
  {
    "text": "command to use which is go please as",
    "start": "213879",
    "end": "216080"
  },
  {
    "text": "well as the file types who want the LSP",
    "start": "216080",
    "end": "217840"
  },
  {
    "text": "server to be enabled for next we want to",
    "start": "217840",
    "end": "219840"
  },
  {
    "text": "set the project route for our LSP server",
    "start": "219840",
    "end": "222159"
  },
  {
    "text": "which should be the directory that",
    "start": "222159",
    "end": "223200"
  },
  {
    "text": "contains either a go. work go dood or a",
    "start": "223200",
    "end": "225879"
  },
  {
    "text": "dogit directory okay go ahead and save",
    "start": "225879",
    "end": "228439"
  },
  {
    "text": "this file and jump on over to a go",
    "start": "228439",
    "end": "230040"
  },
  {
    "text": "project to test out our code suggestions",
    "start": "230040",
    "end": "232239"
  },
  {
    "text": "when we type in some code we can see the",
    "start": "232239",
    "end": "234120"
  },
  {
    "text": "auto suggestions pop up in our window",
    "start": "234120",
    "end": "236360"
  },
  {
    "text": "looking good but before we move on",
    "start": "236360",
    "end": "238000"
  },
  {
    "text": "there's a couple of other settings I",
    "start": "238000",
    "end": "239239"
  },
  {
    "text": "like to add",
    "start": "239239",
    "end": "240480"
  },
  {
    "text": "back in our LSP config file let's add",
    "start": "240480",
    "end": "242519"
  },
  {
    "text": "the complete unported true setting which",
    "start": "242519",
    "end": "245879"
  },
  {
    "text": "will automatically import packages when",
    "start": "245879",
    "end": "247560"
  },
  {
    "text": "we use",
    "start": "247560",
    "end": "248959"
  },
  {
    "text": "autocomplete another setting I like to",
    "start": "248959",
    "end": "250959"
  },
  {
    "text": "enable is use placeholders which will",
    "start": "250959",
    "end": "253360"
  },
  {
    "text": "add placeholders for any function",
    "start": "253360",
    "end": "254799"
  },
  {
    "text": "parameters or stru fields in the",
    "start": "254799",
    "end": "256280"
  },
  {
    "text": "completion",
    "start": "256280",
    "end": "257280"
  },
  {
    "text": "responses finally I like to enable the",
    "start": "257280",
    "end": "259759"
  },
  {
    "text": "unused parameters analysis as well that",
    "start": "259759",
    "end": "262639"
  },
  {
    "text": "way I can get a warning for any",
    "start": "262639",
    "end": "264120"
  },
  {
    "text": "parameters that are unused go pleas",
    "start": "264120",
    "end": "266400"
  },
  {
    "text": "provides many other static analysis",
    "start": "266400",
    "end": "267960"
  },
  {
    "text": "settings that you can enable I recommend",
    "start": "267960",
    "end": "270080"
  },
  {
    "text": "looking over the analyzers document in",
    "start": "270080",
    "end": "271800"
  },
  {
    "text": "the go pleas repo to see if there's any",
    "start": "271800",
    "end": "273720"
  },
  {
    "text": "others you want to use the next feature",
    "start": "273720",
    "end": "276560"
  },
  {
    "start": "276000",
    "end": "425000"
  },
  {
    "text": "I like to enable is auto formatting of",
    "start": "276560",
    "end": "278440"
  },
  {
    "text": "our code whenever we save this prevents",
    "start": "278440",
    "end": "280880"
  },
  {
    "text": "having to run tools such as go format or",
    "start": "280880",
    "end": "282960"
  },
  {
    "text": "go and ports before committing our code",
    "start": "282960",
    "end": "285520"
  },
  {
    "text": "to enable this we can either do so using",
    "start": "285520",
    "end": "287560"
  },
  {
    "text": "go pleas or we can use the null LS",
    "start": "287560",
    "end": "289960"
  },
  {
    "text": "plugin instead which tends to be my",
    "start": "289960",
    "end": "291759"
  },
  {
    "text": "preferred approach as it's easier to use",
    "start": "291759",
    "end": "293360"
  },
  {
    "text": "for other languages let's go ahead and",
    "start": "293360",
    "end": "295360"
  },
  {
    "text": "do that jumping over to our custom",
    "start": "295360",
    "end": "298320"
  },
  {
    "text": "plugin file let's add in the null LS",
    "start": "298320",
    "end": "300280"
  },
  {
    "text": "package to our plugins table we'll set",
    "start": "300280",
    "end": "302280"
  },
  {
    "text": "the file type that we want this plugin",
    "start": "302280",
    "end": "303600"
  },
  {
    "text": "to load for to be go and then we can add",
    "start": "303600",
    "end": "305639"
  },
  {
    "text": "in a function to set up our null LS",
    "start": "305639",
    "end": "307560"
  },
  {
    "text": "options our null options are going to be",
    "start": "307560",
    "end": "309880"
  },
  {
    "text": "rather heavy so let's create a new file",
    "start": "309880",
    "end": "311639"
  },
  {
    "text": "for this to keep our plugins table clean",
    "start": "311639",
    "end": "313320"
  },
  {
    "text": "and readable first add in a new file in",
    "start": "313320",
    "end": "316039"
  },
  {
    "text": "the custom configs directory called null",
    "start": "316039",
    "end": "318280"
  },
  {
    "text": "ls. lower inside this file we want to",
    "start": "318280",
    "end": "321280"
  },
  {
    "text": "import the null LS package and create",
    "start": "321280",
    "end": "323360"
  },
  {
    "text": "our options table which will return",
    "start": "323360",
    "end": "325960"
  },
  {
    "text": "inside of this table we're going to set",
    "start": "325960",
    "end": "327800"
  },
  {
    "text": "up our autof formatting sources of go",
    "start": "327800",
    "end": "329960"
  },
  {
    "text": "format and go Imports if you prefer G",
    "start": "329960",
    "end": "332919"
  },
  {
    "text": "fump which is a stricter version of go",
    "start": "332919",
    "end": "334720"
  },
  {
    "text": "format then you can use that instead",
    "start": "334720",
    "end": "337479"
  },
  {
    "text": "instead of go Imports I prefer to use",
    "start": "337479",
    "end": "339720"
  },
  {
    "text": "the go Imports revisor version which",
    "start": "339720",
    "end": "342039"
  },
  {
    "text": "adds more deterministic ordering of",
    "start": "342039",
    "end": "343960"
  },
  {
    "text": "imports whichever of these packages you",
    "start": "343960",
    "end": "346039"
  },
  {
    "text": "use make sure you have them installed on",
    "start": "346039",
    "end": "347479"
  },
  {
    "text": "your system you can do so by running the",
    "start": "347479",
    "end": "349720"
  },
  {
    "text": "go install command for each package",
    "start": "349720",
    "end": "352680"
  },
  {
    "text": "Additionally you may also want to use",
    "start": "352680",
    "end": "354000"
  },
  {
    "text": "the go lines formatter which shortens",
    "start": "354000",
    "end": "355720"
  },
  {
    "text": "long lines if possible if you want to",
    "start": "355720",
    "end": "357840"
  },
  {
    "text": "use go lines you'll first need to",
    "start": "357840",
    "end": "359240"
  },
  {
    "text": "install that on your system and then add",
    "start": "359240",
    "end": "361360"
  },
  {
    "text": "in the GoLine sources to our null LS",
    "start": "361360",
    "end": "364240"
  },
  {
    "text": "options now we have our Auto formatting",
    "start": "364240",
    "end": "366919"
  },
  {
    "text": "set up which we can run by calling the",
    "start": "366919",
    "end": "369039"
  },
  {
    "text": "LSP Auto format command in neovim",
    "start": "369039",
    "end": "372160"
  },
  {
    "text": "however this is not much better than",
    "start": "372160",
    "end": "373440"
  },
  {
    "text": "actually running these commands in our",
    "start": "373440",
    "end": "374800"
  },
  {
    "text": "terminal to improve this we can enable",
    "start": "374800",
    "end": "377039"
  },
  {
    "text": "auto format on Save heading back over to",
    "start": "377039",
    "end": "379599"
  },
  {
    "text": "our null LS config first we need to",
    "start": "379599",
    "end": "381639"
  },
  {
    "text": "create an autoc command group we'll need",
    "start": "381639",
    "end": "384000"
  },
  {
    "text": "this to group our Auto formatting so",
    "start": "384000",
    "end": "385639"
  },
  {
    "text": "that we're able to cancel it next up we",
    "start": "385639",
    "end": "388199"
  },
  {
    "text": "can add a new function to our null LS on",
    "start": "388199",
    "end": "390479"
  },
  {
    "text": "attached setting which will be cooled",
    "start": "390479",
    "end": "392160"
  },
  {
    "text": "when we attach to the null LS plugin",
    "start": "392160",
    "end": "394520"
  },
  {
    "text": "next we just want to add in the",
    "start": "394520",
    "end": "396360"
  },
  {
    "text": "following lines which will basically",
    "start": "396360",
    "end": "398039"
  },
  {
    "text": "check if our client supports formatting",
    "start": "398039",
    "end": "400000"
  },
  {
    "text": "clear any commands from the named group",
    "start": "400000",
    "end": "401680"
  },
  {
    "text": "in our buffer and then create a new",
    "start": "401680",
    "end": "403520"
  },
  {
    "text": "autoc command in the group that will run",
    "start": "403520",
    "end": "405039"
  },
  {
    "text": "on Buffer pre-write which will call the",
    "start": "405039",
    "end": "406919"
  },
  {
    "text": "format function of the LSP server in our",
    "start": "406919",
    "end": "409280"
  },
  {
    "text": "case null LS go ahead and save that file",
    "start": "409280",
    "end": "411960"
  },
  {
    "text": "and let's jump back into some go code to",
    "start": "411960",
    "end": "413639"
  },
  {
    "text": "test our Auto formatting on Save here we",
    "start": "413639",
    "end": "416199"
  },
  {
    "text": "have some badly formatted code now if we",
    "start": "416199",
    "end": "418400"
  },
  {
    "text": "go ahead and save our file using colon W",
    "start": "418400",
    "end": "420960"
  },
  {
    "text": "the code is autof formatted as per our",
    "start": "420960",
    "end": "423560"
  },
  {
    "text": "configuration nice next up we want to",
    "start": "423560",
    "end": "426960"
  },
  {
    "start": "425000",
    "end": "663000"
  },
  {
    "text": "get debugging working within neovim for",
    "start": "426960",
    "end": "428919"
  },
  {
    "text": "go to do this we're going to need to",
    "start": "428919",
    "end": "431120"
  },
  {
    "text": "First install delve on our system if you",
    "start": "431120",
    "end": "433759"
  },
  {
    "text": "don't know what delve is it's basically",
    "start": "433759",
    "end": "435360"
  },
  {
    "text": "a debugger for go typical debuggers such",
    "start": "435360",
    "end": "437840"
  },
  {
    "text": "as GDB and lldb don't work well with go",
    "start": "437840",
    "end": "440879"
  },
  {
    "text": "and so delve is a better alternative",
    "start": "440879",
    "end": "443360"
  },
  {
    "text": "because of this it means we need to do a",
    "start": "443360",
    "end": "444759"
  },
  {
    "text": "little more setup in order to get it",
    "start": "444759",
    "end": "445919"
  },
  {
    "text": "working with neovim but that's not a",
    "start": "445919",
    "end": "448000"
  },
  {
    "text": "problem you can first install delve by",
    "start": "448000",
    "end": "450319"
  },
  {
    "text": "using the go install command as found on",
    "start": "450319",
    "end": "452560"
  },
  {
    "text": "the delve readme which is what I'm using",
    "start": "452560",
    "end": "454319"
  },
  {
    "text": "on the screen once you've installed",
    "start": "454319",
    "end": "455919"
  },
  {
    "text": "delve head back over to your custom",
    "start": "455919",
    "end": "457479"
  },
  {
    "text": "plugins file where you need to add an",
    "start": "457479",
    "end": "459319"
  },
  {
    "text": "entry for envin dap which is the neim",
    "start": "459319",
    "end": "462199"
  },
  {
    "text": "debug adapter protocol in addition to",
    "start": "462199",
    "end": "464400"
  },
  {
    "text": "envin DAP we're also going to need",
    "start": "464400",
    "end": "465960"
  },
  {
    "text": "another plugin so we can work with delve",
    "start": "465960",
    "end": "467879"
  },
  {
    "text": "there's a few out there that do this but",
    "start": "467879",
    "end": "469240"
  },
  {
    "text": "I've gone with the envm DAP go plugin if",
    "start": "469240",
    "end": "471639"
  },
  {
    "text": "you know of any better ones then please",
    "start": "471639",
    "end": "473039"
  },
  {
    "text": "let me know in the comments down below",
    "start": "473039",
    "end": "474560"
  },
  {
    "text": "the reason I've gone with MVM dapgo is",
    "start": "474560",
    "end": "476639"
  },
  {
    "text": "it's purely focused on providing the",
    "start": "476639",
    "end": "478080"
  },
  {
    "text": "delve integration G given that I'm",
    "start": "478080",
    "end": "479960"
  },
  {
    "text": "partial to modules performing one thing",
    "start": "479960",
    "end": "481879"
  },
  {
    "text": "and one thing well this is what makes",
    "start": "481879",
    "end": "483560"
  },
  {
    "text": "sense to me let's go ahead and add it to",
    "start": "483560",
    "end": "486319"
  },
  {
    "text": "our plugins as well just a quick note at",
    "start": "486319",
    "end": "488919"
  },
  {
    "text": "the time of recording this video the MVM",
    "start": "488919",
    "end": "490879"
  },
  {
    "text": "Dapo plugin was using a couple of",
    "start": "490879",
    "end": "492759"
  },
  {
    "text": "deprecated functions which would cause",
    "start": "492759",
    "end": "494520"
  },
  {
    "text": "warnings in the console you can either",
    "start": "494520",
    "end": "496720"
  },
  {
    "text": "ignore these or you can use my own Fork",
    "start": "496720",
    "end": "498759"
  },
  {
    "text": "of this plugin which is on the screen I",
    "start": "498759",
    "end": "500960"
  },
  {
    "text": "did submit a PR to fix this so hopefully",
    "start": "500960",
    "end": "502840"
  },
  {
    "text": "it's resolved in the main branch",
    "start": "502840",
    "end": "504639"
  },
  {
    "text": "soon we'll set the file type to go add a",
    "start": "504639",
    "end": "507319"
  },
  {
    "text": "dependency of MVM dap and then call the",
    "start": "507319",
    "end": "509919"
  },
  {
    "text": "setup function with the default options",
    "start": "509919",
    "end": "512640"
  },
  {
    "text": "I also like to add in some mappings to",
    "start": "512640",
    "end": "514200"
  },
  {
    "text": "make working with mvim appap a little",
    "start": "514200",
    "end": "515760"
  },
  {
    "text": "bit easier to do this first let's add a",
    "start": "515760",
    "end": "517560"
  },
  {
    "text": "new file in our custom directory called",
    "start": "517560",
    "end": "519200"
  },
  {
    "text": "mapping. Lower here we'll created an",
    "start": "519200",
    "end": "521518"
  },
  {
    "text": "empty table and return it then you'll",
    "start": "521519",
    "end": "524159"
  },
  {
    "text": "want to add the following line which",
    "start": "524159",
    "end": "525720"
  },
  {
    "text": "will create a new entry in this table",
    "start": "525720",
    "end": "527120"
  },
  {
    "text": "called dap inside of this entry set the",
    "start": "527120",
    "end": "529120"
  },
  {
    "text": "plug-in key to true and then add in the",
    "start": "529120",
    "end": "531000"
  },
  {
    "text": "following lines to configure our",
    "start": "531000",
    "end": "532640"
  },
  {
    "text": "mappings these will set up key bindings",
    "start": "532640",
    "end": "534720"
  },
  {
    "text": "for normal mode which is marked by the",
    "start": "534720",
    "end": "536120"
  },
  {
    "text": "end value these key bindings allow us to",
    "start": "536120",
    "end": "538440"
  },
  {
    "text": "easily add in a break point at our",
    "start": "538440",
    "end": "540120"
  },
  {
    "text": "current line by pressing the space DMB",
    "start": "540120",
    "end": "542440"
  },
  {
    "text": "key binding and to bring up a UI side",
    "start": "542440",
    "end": "544920"
  },
  {
    "text": "panel which will display information",
    "start": "544920",
    "end": "546519"
  },
  {
    "text": "about the variables in our local scope",
    "start": "546519",
    "end": "548399"
  },
  {
    "text": "by using space d u and S I also like to",
    "start": "548399",
    "end": "552120"
  },
  {
    "text": "add in some additional custom mappings",
    "start": "552120",
    "end": "554079"
  },
  {
    "text": "for working with go let's go ahead and",
    "start": "554079",
    "end": "556839"
  },
  {
    "text": "add in another key into our table for",
    "start": "556839",
    "end": "558959"
  },
  {
    "text": "dapore go the first mapping I want to",
    "start": "558959",
    "end": "561880"
  },
  {
    "text": "add is for debugging the nearest go test",
    "start": "561880",
    "end": "564120"
  },
  {
    "text": "to our cursor using space g d and T and",
    "start": "564120",
    "end": "568760"
  },
  {
    "text": "the second mapping is to rerun the last",
    "start": "568760",
    "end": "571320"
  },
  {
    "text": "test using space G D and L after that",
    "start": "571320",
    "end": "575240"
  },
  {
    "text": "jump on over to the chat rc. L file and",
    "start": "575240",
    "end": "577480"
  },
  {
    "text": "import our custom mappings then jump",
    "start": "577480",
    "end": "580000"
  },
  {
    "text": "back over to our custom plugins file and",
    "start": "580000",
    "end": "581480"
  },
  {
    "text": "load in the mappings using the following",
    "start": "581480",
    "end": "583600"
  },
  {
    "text": "lines in their respective plugins set up",
    "start": "583600",
    "end": "586519"
  },
  {
    "text": "this will only load those key bindings",
    "start": "586519",
    "end": "587959"
  },
  {
    "text": "whenever our plugins are loaded which",
    "start": "587959",
    "end": "590079"
  },
  {
    "text": "prevents loading in key bindings when we",
    "start": "590079",
    "end": "591760"
  },
  {
    "text": "don't need them with that done we can",
    "start": "591760",
    "end": "593600"
  },
  {
    "text": "now test our new debugging capabilities",
    "start": "593600",
    "end": "596320"
  },
  {
    "text": "here's some code to test hashing of a",
    "start": "596320",
    "end": "598360"
  },
  {
    "text": "password in s code we can add a",
    "start": "598360",
    "end": "600720"
  },
  {
    "text": "breakpoint at the current line by",
    "start": "600720",
    "end": "602000"
  },
  {
    "text": "pressing the space D and B key binding",
    "start": "602000",
    "end": "604720"
  },
  {
    "text": "you can see that a breakpoint has been",
    "start": "604720",
    "end": "605959"
  },
  {
    "text": "added by the letter B next to the line",
    "start": "605959",
    "end": "608399"
  },
  {
    "text": "number before we can run our test we",
    "start": "608399",
    "end": "610640"
  },
  {
    "text": "first need to install the go grammar for",
    "start": "610640",
    "end": "612640"
  },
  {
    "text": "tree sitter you can do this by running",
    "start": "612640",
    "end": "614360"
  },
  {
    "text": "TS install go on the ne Vim command",
    "start": "614360",
    "end": "616880"
  },
  {
    "text": "line with our breakpoint added and tree",
    "start": "616880",
    "end": "619440"
  },
  {
    "text": "sitter set up we can then move over to",
    "start": "619440",
    "end": "621079"
  },
  {
    "text": "our test function and run it using the",
    "start": "621079",
    "end": "622920"
  },
  {
    "text": "space d g and T key binding which could",
    "start": "622920",
    "end": "625920"
  },
  {
    "text": "be remembered pneumonic as debug go test",
    "start": "625920",
    "end": "629800"
  },
  {
    "text": "once the test is running we should then",
    "start": "629800",
    "end": "631200"
  },
  {
    "text": "see the code reach our breakpoint which",
    "start": "631200",
    "end": "632959"
  },
  {
    "text": "is now marked with an arrow where there",
    "start": "632959",
    "end": "634480"
  },
  {
    "text": "once was a B on line 19 whilst we're",
    "start": "634480",
    "end": "637800"
  },
  {
    "text": "debugging we can also bring up an",
    "start": "637800",
    "end": "639160"
  },
  {
    "text": "inspector window using the space du and",
    "start": "639160",
    "end": "641680"
  },
  {
    "text": "S combo which shows the values of our",
    "start": "641680",
    "end": "644160"
  },
  {
    "text": "local variables at the time of debugging",
    "start": "644160",
    "end": "646240"
  },
  {
    "text": "you can remember this neonic as the",
    "start": "646240",
    "end": "648000"
  },
  {
    "text": "debug UI sidebar mapping to debug over",
    "start": "648000",
    "end": "650959"
  },
  {
    "text": "each line you can then call the DAP",
    "start": "650959",
    "end": "652519"
  },
  {
    "text": "stepover command in the ne Vim command",
    "start": "652519",
    "end": "654360"
  },
  {
    "text": "line you may also want to add your own",
    "start": "654360",
    "end": "656560"
  },
  {
    "text": "custom mapping to make this easier with",
    "start": "656560",
    "end": "659120"
  },
  {
    "text": "the that we have effective debugging for",
    "start": "659120",
    "end": "661000"
  },
  {
    "text": "go within",
    "start": "661000",
    "end": "662120"
  },
  {
    "text": "neovim the last thing we're going to do",
    "start": "662120",
    "end": "664160"
  },
  {
    "start": "663000",
    "end": "840000"
  },
  {
    "text": "is add in a plugin which provides a",
    "start": "664160",
    "end": "665760"
  },
  {
    "text": "number of helper functions for",
    "start": "665760",
    "end": "666880"
  },
  {
    "text": "interacting with go code in our editor",
    "start": "666880",
    "end": "669320"
  },
  {
    "text": "you may have been wondering this whole",
    "start": "669320",
    "end": "670519"
  },
  {
    "text": "video why not use Vim go and it's a good",
    "start": "670519",
    "end": "673639"
  },
  {
    "text": "question let me explain vimo provides a",
    "start": "673639",
    "end": "676399"
  },
  {
    "text": "lot of tooling out of the box but it's",
    "start": "676399",
    "end": "678240"
  },
  {
    "text": "kind of isolated I'm assuming that if",
    "start": "678240",
    "end": "680680"
  },
  {
    "text": "you're using neovim you're probably",
    "start": "680680",
    "end": "682519"
  },
  {
    "text": "going to want to use other languages and",
    "start": "682519",
    "end": "684519"
  },
  {
    "text": "having a setup that allows you to easily",
    "start": "684519",
    "end": "686240"
  },
  {
    "text": "add other LSP servers or Auto formatting",
    "start": "686240",
    "end": "688680"
  },
  {
    "text": "is to me a better experience so as we're",
    "start": "688680",
    "end": "691720"
  },
  {
    "text": "not using vimo we're going to add in",
    "start": "691720",
    "end": "693760"
  },
  {
    "text": "some of the key features that we're",
    "start": "693760",
    "end": "695079"
  },
  {
    "text": "missing the features I really care about",
    "start": "695079",
    "end": "697000"
  },
  {
    "text": "the most are if error Snippets because",
    "start": "697000",
    "end": "699800"
  },
  {
    "text": "let's be honest error handling boiler",
    "start": "699800",
    "end": "701600"
  },
  {
    "text": "plate really do be a grind sometimes and",
    "start": "701600",
    "end": "704200"
  },
  {
    "text": "the ability to add struct tags easily",
    "start": "704200",
    "end": "706560"
  },
  {
    "text": "which again helps with boilerplate there",
    "start": "706560",
    "end": "709000"
  },
  {
    "text": "are a few plugins that provide this but",
    "start": "709000",
    "end": "711240"
  },
  {
    "text": "the one I decided on was gopher NVM",
    "start": "711240",
    "end": "714279"
  },
  {
    "text": "which provides the features we're",
    "start": "714279",
    "end": "715440"
  },
  {
    "text": "looking for and a number of others to",
    "start": "715440",
    "end": "717680"
  },
  {
    "text": "install it let's jump back over to our",
    "start": "717680",
    "end": "719240"
  },
  {
    "text": "our custom plugins file and add in the",
    "start": "719240",
    "end": "720880"
  },
  {
    "text": "new package we want this to load on file",
    "start": "720880",
    "end": "723279"
  },
  {
    "text": "a type of go as with everything else",
    "start": "723279",
    "end": "725600"
  },
  {
    "text": "pretty standard let's also add our",
    "start": "725600",
    "end": "727920"
  },
  {
    "text": "config functions so we can call setup on",
    "start": "727920",
    "end": "729480"
  },
  {
    "text": "our new package finally we're going to",
    "start": "729480",
    "end": "731680"
  },
  {
    "text": "want to call the go install depths",
    "start": "731680",
    "end": "733519"
  },
  {
    "text": "command after we install the plugin so",
    "start": "733519",
    "end": "735680"
  },
  {
    "text": "that any dependencies the plugin uses",
    "start": "735680",
    "end": "737399"
  },
  {
    "text": "are downloaded we can do this by setting",
    "start": "737399",
    "end": "739720"
  },
  {
    "text": "a build function in our plug-in table",
    "start": "739720",
    "end": "741720"
  },
  {
    "text": "the build function is called whenever",
    "start": "741720",
    "end": "743240"
  },
  {
    "text": "the plugin is installed or updated here",
    "start": "743240",
    "end": "745480"
  },
  {
    "text": "we can call the Vim command of go",
    "start": "745480",
    "end": "747120"
  },
  {
    "text": "install depths and our dependencies will",
    "start": "747120",
    "end": "748800"
  },
  {
    "text": "automat ially be",
    "start": "748800",
    "end": "750600"
  },
  {
    "text": "added nice now if we jump on over to a g",
    "start": "750600",
    "end": "754959"
  },
  {
    "text": "struct we can easily add in Json struct",
    "start": "754959",
    "end": "756920"
  },
  {
    "text": "Tags by calling the go tag add command",
    "start": "756920",
    "end": "759600"
  },
  {
    "text": "with the Json argument we can also do",
    "start": "759600",
    "end": "762199"
  },
  {
    "text": "the same with",
    "start": "762199",
    "end": "763680"
  },
  {
    "text": "yamamo the go for package provides a",
    "start": "763680",
    "end": "766120"
  },
  {
    "text": "bunch of other functionality such as the",
    "start": "766120",
    "end": "768440"
  },
  {
    "text": "ability to run go mod tidy from within",
    "start": "768440",
    "end": "770320"
  },
  {
    "text": "neovim being able to run the Gog get",
    "start": "770320",
    "end": "772720"
  },
  {
    "text": "command to download a package from",
    "start": "772720",
    "end": "774240"
  },
  {
    "text": "within neovim automatically generate go",
    "start": "774240",
    "end": "776560"
  },
  {
    "text": "test boiler plate for the functions in",
    "start": "776560",
    "end": "778600"
  },
  {
    "text": "your current file and autogenerating if",
    "start": "778600",
    "end": "780880"
  },
  {
    "text": "error blocks I'd recommend reading the",
    "start": "780880",
    "end": "783079"
  },
  {
    "text": "goer documentation to find out more",
    "start": "783079",
    "end": "784760"
  },
  {
    "text": "about what this plug-in can do the last",
    "start": "784760",
    "end": "786680"
  },
  {
    "text": "thing we'll do is add in a keyboard",
    "start": "786680",
    "end": "788760"
  },
  {
    "text": "mapping for adding tags to a struct back",
    "start": "788760",
    "end": "791240"
  },
  {
    "text": "in our custom mappings file let's add an",
    "start": "791240",
    "end": "792959"
  },
  {
    "text": "entry for gopher and set a new mapping",
    "start": "792959",
    "end": "794920"
  },
  {
    "text": "of space g s and J which stands for G",
    "start": "794920",
    "end": "798440"
  },
  {
    "text": "struct Json in this mapping we'll call",
    "start": "798440",
    "end": "800639"
  },
  {
    "text": "our go tag add command let's also add a",
    "start": "800639",
    "end": "803680"
  },
  {
    "text": "custom mapping for yamamo as well using",
    "start": "803680",
    "end": "805440"
  },
  {
    "text": "space GS and Y lastly we just need to",
    "start": "805440",
    "end": "808320"
  },
  {
    "text": "jump over to our plugins. lower and add",
    "start": "808320",
    "end": "810480"
  },
  {
    "text": "in the mapping to the goer envm config",
    "start": "810480",
    "end": "813839"
  },
  {
    "text": "function once we reload neovim we can",
    "start": "813839",
    "end": "816360"
  },
  {
    "text": "now use this mapping for generating stru",
    "start": "816360",
    "end": "818600"
  },
  {
    "text": "tags and with that we've turned neovim",
    "start": "818600",
    "end": "821079"
  },
  {
    "text": "from a basic text editor into one that",
    "start": "821079",
    "end": "822760"
  },
  {
    "text": "has been customized and packed full of",
    "start": "822760",
    "end": "824480"
  },
  {
    "text": "productivity features for working and go",
    "start": "824480",
    "end": "827320"
  },
  {
    "text": "I hope you enjoyed this video and if",
    "start": "827320",
    "end": "828880"
  },
  {
    "text": "there's any other languages you'd like",
    "start": "828880",
    "end": "830079"
  },
  {
    "text": "me to set neovim up for please let me",
    "start": "830079",
    "end": "831959"
  },
  {
    "text": "know in the comments down below",
    "start": "831959",
    "end": "833839"
  },
  {
    "text": "otherwise thank you for watching and",
    "start": "833839",
    "end": "835199"
  },
  {
    "text": "I'll see you on the next one",
    "start": "835199",
    "end": "839120"
  }
]