[
  {
    "start": "0",
    "end": "15000"
  },
  {
    "text": "in this video we're going to set up",
    "start": "0",
    "end": "1860"
  },
  {
    "text": "neovim to be the perfect editor for",
    "start": "1860",
    "end": "3840"
  },
  {
    "text": "working with C plus by the end of this",
    "start": "3840",
    "end": "6299"
  },
  {
    "text": "guide you'll have Auto suggestions code",
    "start": "6299",
    "end": "8400"
  },
  {
    "text": "completion and encode static analysis",
    "start": "8400",
    "end": "10440"
  },
  {
    "text": "Auto formatting on Save and Powerful",
    "start": "10440",
    "end": "13440"
  },
  {
    "text": "debugging capabilities to get started",
    "start": "13440",
    "end": "16020"
  },
  {
    "start": "15000",
    "end": "112000"
  },
  {
    "text": "you'll want to make sure you have the",
    "start": "16020",
    "end": "17580"
  },
  {
    "text": "latest version of neovim installed at",
    "start": "17580",
    "end": "19680"
  },
  {
    "text": "the time of recording this is version",
    "start": "19680",
    "end": "20880"
  },
  {
    "text": "0.9.1",
    "start": "20880",
    "end": "22800"
  },
  {
    "text": "I'm using Arch by the way so I'll",
    "start": "22800",
    "end": "24539"
  },
  {
    "text": "install it using Pacman",
    "start": "24539",
    "end": "26400"
  },
  {
    "text": "feel free to use whatever installation",
    "start": "26400",
    "end": "28080"
  },
  {
    "text": "method works for your operating system",
    "start": "28080",
    "end": "30660"
  },
  {
    "text": "next you'll need to have a nerd font",
    "start": "30660",
    "end": "32520"
  },
  {
    "text": "installed in order to see icons from",
    "start": "32520",
    "end": "34320"
  },
  {
    "text": "within near them I'm using the jetbrains",
    "start": "34320",
    "end": "36780"
  },
  {
    "text": "mono nerd font for mine you'll want to",
    "start": "36780",
    "end": "39300"
  },
  {
    "text": "install this as per your operating",
    "start": "39300",
    "end": "40620"
  },
  {
    "text": "system's instructions and set this up in",
    "start": "40620",
    "end": "42780"
  },
  {
    "text": "your terminal finally make sure to have",
    "start": "42780",
    "end": "45059"
  },
  {
    "text": "git installed on your system as well",
    "start": "45059",
    "end": "47940"
  },
  {
    "text": "with everything ready the next thing we",
    "start": "47940",
    "end": "49500"
  },
  {
    "text": "want to do is set up a base",
    "start": "49500",
    "end": "50579"
  },
  {
    "text": "configuration my preferred option is",
    "start": "50579",
    "end": "53219"
  },
  {
    "text": "nvchat which provides some powerful",
    "start": "53219",
    "end": "55500"
  },
  {
    "text": "neovim plugins to get us started while",
    "start": "55500",
    "end": "57539"
  },
  {
    "text": "still giving us a great deal of freedom",
    "start": "57539",
    "end": "59280"
  },
  {
    "text": "for customization if you have an",
    "start": "59280",
    "end": "61020"
  },
  {
    "text": "existing neovim configuration first make",
    "start": "61020",
    "end": "63120"
  },
  {
    "text": "sure to back this up and clear out your",
    "start": "63120",
    "end": "64799"
  },
  {
    "text": "local cache using the following commands",
    "start": "64799",
    "end": "67380"
  },
  {
    "text": "now we can use our single line to",
    "start": "67380",
    "end": "69420"
  },
  {
    "text": "install nvchat on our system using git",
    "start": "69420",
    "end": "71400"
  },
  {
    "text": "you can copy and paste this from the",
    "start": "71400",
    "end": "73320"
  },
  {
    "text": "description as well rather than typing",
    "start": "73320",
    "end": "75000"
  },
  {
    "text": "it out",
    "start": "75000",
    "end": "76080"
  },
  {
    "text": "once that's done open up neovim using",
    "start": "76080",
    "end": "78180"
  },
  {
    "text": "the and then command and you'll be",
    "start": "78180",
    "end": "79619"
  },
  {
    "text": "greeted with a prompt to create an",
    "start": "79619",
    "end": "81240"
  },
  {
    "text": "example config make sure to type in n as",
    "start": "81240",
    "end": "84360"
  },
  {
    "text": "in no at this point so you start from",
    "start": "84360",
    "end": "86340"
  },
  {
    "text": "the same base configuration as I do once",
    "start": "86340",
    "end": "88680"
  },
  {
    "text": "you submit your answer you should see",
    "start": "88680",
    "end": "90060"
  },
  {
    "text": "neovim and the lazy package manager",
    "start": "90060",
    "end": "92040"
  },
  {
    "text": "download and install our base plugins",
    "start": "92040",
    "end": "94619"
  },
  {
    "text": "give this a little time and it'll",
    "start": "94619",
    "end": "96299"
  },
  {
    "text": "complete",
    "start": "96299",
    "end": "97439"
  },
  {
    "text": "now all that's left to do is to change",
    "start": "97439",
    "end": "99360"
  },
  {
    "text": "neovin to use a much more appealing",
    "start": "99360",
    "end": "101220"
  },
  {
    "text": "theme we can do this by pressing the",
    "start": "101220",
    "end": "103200"
  },
  {
    "text": "space T and H keys to open up the theme",
    "start": "103200",
    "end": "105240"
  },
  {
    "text": "switcher once inside we can navigate to",
    "start": "105240",
    "end": "107520"
  },
  {
    "text": "the best theme ever Capuchin and set it",
    "start": "107520",
    "end": "110220"
  },
  {
    "text": "for neovin nicely done",
    "start": "110220",
    "end": "112500"
  },
  {
    "start": "112000",
    "end": "424000"
  },
  {
    "text": "the first feature we're going to want to",
    "start": "112500",
    "end": "114180"
  },
  {
    "text": "add is auto suggestions and code",
    "start": "114180",
    "end": "116100"
  },
  {
    "text": "completion we can do this by adding in",
    "start": "116100",
    "end": "118259"
  },
  {
    "text": "something called an LSP server to neovin",
    "start": "118259",
    "end": "120540"
  },
  {
    "text": "for CPUs plus we have a couple of",
    "start": "120540",
    "end": "122460"
  },
  {
    "text": "different LSP servers to choose from but",
    "start": "122460",
    "end": "124799"
  },
  {
    "text": "my preference tends to be c-lang D which",
    "start": "124799",
    "end": "127020"
  },
  {
    "text": "will provide linting and static analysis",
    "start": "127020",
    "end": "128819"
  },
  {
    "text": "in addition to code suggestion and",
    "start": "128819",
    "end": "130380"
  },
  {
    "text": "completion so we're going to use it the",
    "start": "130380",
    "end": "132720"
  },
  {
    "text": "first thing we want to do is install C",
    "start": "132720",
    "end": "134400"
  },
  {
    "text": "language on our system if you have the",
    "start": "134400",
    "end": "136500"
  },
  {
    "text": "c-lan compiler installed then you should",
    "start": "136500",
    "end": "138660"
  },
  {
    "text": "already have c-lang D however I still",
    "start": "138660",
    "end": "141000"
  },
  {
    "text": "think it's worthwhile to install it",
    "start": "141000",
    "end": "142440"
  },
  {
    "text": "using neovim to achieve this we can use",
    "start": "142440",
    "end": "144780"
  },
  {
    "text": "a plugin called Mason which acts as a",
    "start": "144780",
    "end": "147720"
  },
  {
    "text": "package manager for third-party",
    "start": "147720",
    "end": "149340"
  },
  {
    "text": "dependencies by using Mason we can",
    "start": "149340",
    "end": "151680"
  },
  {
    "text": "specify any external dependencies for",
    "start": "151680",
    "end": "153540"
  },
  {
    "text": "our neovim configuration and Mason will",
    "start": "153540",
    "end": "155819"
  },
  {
    "text": "manage them for us allowing us to",
    "start": "155819",
    "end": "158099"
  },
  {
    "text": "specify more of our configuration as",
    "start": "158099",
    "end": "159959"
  },
  {
    "text": "code which is a good thing",
    "start": "159959",
    "end": "162540"
  },
  {
    "text": "to do so let's head over to our neovim",
    "start": "162540",
    "end": "164940"
  },
  {
    "text": "configuration folder in our terminal",
    "start": "164940",
    "end": "166739"
  },
  {
    "text": "once inside open it up within neovim you",
    "start": "166739",
    "end": "169800"
  },
  {
    "text": "should be greeted with a Blank Stare if",
    "start": "169800",
    "end": "172379"
  },
  {
    "text": "you press Ctrl and end you'll open up",
    "start": "172379",
    "end": "173940"
  },
  {
    "text": "the nvim tree which allows us to",
    "start": "173940",
    "end": "175620"
  },
  {
    "text": "navigate around our directory the next",
    "start": "175620",
    "end": "177720"
  },
  {
    "text": "thing we want to do is navigate to the",
    "start": "177720",
    "end": "179099"
  },
  {
    "text": "custom folder which is under lower",
    "start": "179099",
    "end": "180720"
  },
  {
    "text": "custom this is where our main NV chat",
    "start": "180720",
    "end": "183900"
  },
  {
    "text": "configuration will live",
    "start": "183900",
    "end": "185760"
  },
  {
    "text": "inside this directory you'll see the",
    "start": "185760",
    "end": "187620"
  },
  {
    "text": "chat rc.lua file which is basically our",
    "start": "187620",
    "end": "190080"
  },
  {
    "text": "entry point for configuration within",
    "start": "190080",
    "end": "191879"
  },
  {
    "text": "nvchat open this up and take a look",
    "start": "191879",
    "end": "194220"
  },
  {
    "text": "inside of this file you'll see a lure",
    "start": "194220",
    "end": "196739"
  },
  {
    "text": "table called m is being created and",
    "start": "196739",
    "end": "198900"
  },
  {
    "text": "returned inside of this m table we're",
    "start": "198900",
    "end": "201599"
  },
  {
    "text": "setting the UI theme to Capuchin this",
    "start": "201599",
    "end": "204900"
  },
  {
    "text": "file is also where we're going to import",
    "start": "204900",
    "end": "206400"
  },
  {
    "text": "our custom plugins to do so add the",
    "start": "206400",
    "end": "208980"
  },
  {
    "text": "following line this line sets the tables",
    "start": "208980",
    "end": "211500"
  },
  {
    "text": "plugin value to a new Lua file which",
    "start": "211500",
    "end": "213540"
  },
  {
    "text": "we're about to create to do so navigate",
    "start": "213540",
    "end": "215760"
  },
  {
    "text": "back to the custom directory in the",
    "start": "215760",
    "end": "217500"
  },
  {
    "text": "neovim tree and create a new file using",
    "start": "217500",
    "end": "219720"
  },
  {
    "text": "the a key name this file plugins.lure",
    "start": "219720",
    "end": "222540"
  },
  {
    "text": "which relates to the line we just added",
    "start": "222540",
    "end": "224340"
  },
  {
    "text": "once the file is created open it up",
    "start": "224340",
    "end": "226379"
  },
  {
    "text": "create a new lower table called plugins",
    "start": "226379",
    "end": "228480"
  },
  {
    "text": "and return it this table is where we'll",
    "start": "228480",
    "end": "231239"
  },
  {
    "text": "specify any custom plugins or plug-in",
    "start": "231239",
    "end": "233280"
  },
  {
    "text": "overrides next let's add an entry for",
    "start": "233280",
    "end": "236159"
  },
  {
    "text": "Mason in our plugins table inside of",
    "start": "236159",
    "end": "238739"
  },
  {
    "text": "this entry add a block for the options",
    "start": "238739",
    "end": "240360"
  },
  {
    "text": "which contains another table for our",
    "start": "240360",
    "end": "242459"
  },
  {
    "text": "ensure installed value inside of this",
    "start": "242459",
    "end": "244560"
  },
  {
    "text": "table add an entry for C language d once",
    "start": "244560",
    "end": "247379"
  },
  {
    "text": "you've added this line go ahead and",
    "start": "247379",
    "end": "248580"
  },
  {
    "text": "close neovim and then reopen it this",
    "start": "248580",
    "end": "251040"
  },
  {
    "text": "should load in our custom plugin",
    "start": "251040",
    "end": "252480"
  },
  {
    "text": "configuration and we can now use the",
    "start": "252480",
    "end": "254220"
  },
  {
    "text": "Mason installed all command to download",
    "start": "254220",
    "end": "256199"
  },
  {
    "text": "and install c-lankd very nice okay now",
    "start": "256199",
    "end": "259919"
  },
  {
    "text": "it's time to configure our new LSP",
    "start": "259919",
    "end": "261479"
  },
  {
    "text": "server for use within neovim head back",
    "start": "261479",
    "end": "263940"
  },
  {
    "text": "on over to our custom plugins lure file",
    "start": "263940",
    "end": "265919"
  },
  {
    "text": "and add a new entry into our plugins",
    "start": "265919",
    "end": "267840"
  },
  {
    "text": "table for neovim nvim LSP config this",
    "start": "267840",
    "end": "271860"
  },
  {
    "text": "plugin provides some out-of-the-box",
    "start": "271860",
    "end": "273240"
  },
  {
    "text": "defaults for a number of LSP servers",
    "start": "273240",
    "end": "275220"
  },
  {
    "text": "which makes it much easier to configure",
    "start": "275220",
    "end": "277020"
  },
  {
    "text": "inside this plugin entry add the",
    "start": "277020",
    "end": "279060"
  },
  {
    "text": "following lines to add a configuration",
    "start": "279060",
    "end": "280500"
  },
  {
    "text": "function inside this function import",
    "start": "280500",
    "end": "282720"
  },
  {
    "text": "both the nvchat LSP config and our own",
    "start": "282720",
    "end": "285479"
  },
  {
    "text": "custom one which we're about to create",
    "start": "285479",
    "end": "287460"
  },
  {
    "text": "once that's done head back on over to",
    "start": "287460",
    "end": "289620"
  },
  {
    "text": "the tree View and create a new directory",
    "start": "289620",
    "end": "291240"
  },
  {
    "text": "and file by using the a key and filling",
    "start": "291240",
    "end": "294180"
  },
  {
    "text": "out the entire path let's call this",
    "start": "294180",
    "end": "296460"
  },
  {
    "text": "configs slash lsbconfig.lure inside this",
    "start": "296460",
    "end": "299820"
  },
  {
    "text": "file we're going to store all of our",
    "start": "299820",
    "end": "301020"
  },
  {
    "text": "custom LSP configuration open it up and",
    "start": "301020",
    "end": "303660"
  },
  {
    "text": "add in the following line to import the",
    "start": "303660",
    "end": "305460"
  },
  {
    "text": "base NV Chad LSP configuration we'll",
    "start": "305460",
    "end": "308220"
  },
  {
    "text": "also pull out the undetached and",
    "start": "308220",
    "end": "309720"
  },
  {
    "text": "capabilities functions for use in a",
    "start": "309720",
    "end": "311460"
  },
  {
    "text": "second now we want to import the LSP",
    "start": "311460",
    "end": "313560"
  },
  {
    "text": "config plugin you may see a warning for",
    "start": "313560",
    "end": "315660"
  },
  {
    "text": "this regarding conflicting names but it",
    "start": "315660",
    "end": "317520"
  },
  {
    "text": "shouldn't affect anything so don't worry",
    "start": "317520",
    "end": "319139"
  },
  {
    "text": "next add in the following line to add",
    "start": "319139",
    "end": "321479"
  },
  {
    "text": "and call the setup function of c-lang D",
    "start": "321479",
    "end": "323460"
  },
  {
    "text": "in the LSP config plugin inside of the",
    "start": "323460",
    "end": "326039"
  },
  {
    "text": "table we passed a setup add in a new",
    "start": "326039",
    "end": "328139"
  },
  {
    "text": "function for the unattached value here",
    "start": "328139",
    "end": "330539"
  },
  {
    "text": "we need to do some small overrides in",
    "start": "330539",
    "end": "332400"
  },
  {
    "text": "order to fix a bug within NV Chad and",
    "start": "332400",
    "end": "334440"
  },
  {
    "text": "c-lang D to fix this just set the client",
    "start": "334440",
    "end": "337259"
  },
  {
    "text": "dot server",
    "start": "337259",
    "end": "338960"
  },
  {
    "text": "capabilities.signature help provide a",
    "start": "338960",
    "end": "340860"
  },
  {
    "text": "value to false and then call the",
    "start": "340860",
    "end": "342900"
  },
  {
    "text": "unattach function with our client and",
    "start": "342900",
    "end": "344940"
  },
  {
    "text": "buffer number variables",
    "start": "344940",
    "end": "346620"
  },
  {
    "text": "after that we can just use the same",
    "start": "346620",
    "end": "348419"
  },
  {
    "text": "capabilities value we pulled out earlier",
    "start": "348419",
    "end": "351000"
  },
  {
    "text": "go ahead and save this file and",
    "start": "351000",
    "end": "352740"
  },
  {
    "text": "everything should be working as expected",
    "start": "352740",
    "end": "354660"
  },
  {
    "text": "let's go ahead and test this out by",
    "start": "354660",
    "end": "356340"
  },
  {
    "text": "jumping on over to some C plus code here",
    "start": "356340",
    "end": "359400"
  },
  {
    "text": "I have a simple mean function which is",
    "start": "359400",
    "end": "361440"
  },
  {
    "text": "doing pretty much nothing before we",
    "start": "361440",
    "end": "363240"
  },
  {
    "text": "start typing anything let's go ahead and",
    "start": "363240",
    "end": "364740"
  },
  {
    "text": "install the tree sitter language for C",
    "start": "364740",
    "end": "366479"
  },
  {
    "text": "plus which will give us improved syntax",
    "start": "366479",
    "end": "368580"
  },
  {
    "text": "highlighting for our code to do so type",
    "start": "368580",
    "end": "371160"
  },
  {
    "text": "in the TS install CPP command you can",
    "start": "371160",
    "end": "374220"
  },
  {
    "text": "initiate this using the colon key once",
    "start": "374220",
    "end": "376919"
  },
  {
    "text": "that's done you should see some improved",
    "start": "376919",
    "end": "378600"
  },
  {
    "text": "syntax highlighting now we can go ahead",
    "start": "378600",
    "end": "380639"
  },
  {
    "text": "and test our autocomplete if I start",
    "start": "380639",
    "end": "382979"
  },
  {
    "text": "typing in sdd you'll see some Auto",
    "start": "382979",
    "end": "384720"
  },
  {
    "text": "suggestions appear and I can select them",
    "start": "384720",
    "end": "387479"
  },
  {
    "text": "to autocomplete my code you may have",
    "start": "387479",
    "end": "389699"
  },
  {
    "text": "noticed this automatically imported",
    "start": "389699",
    "end": "391080"
  },
  {
    "text": "iostream for me as well which is really",
    "start": "391080",
    "end": "393360"
  },
  {
    "text": "nice",
    "start": "393360",
    "end": "394560"
  },
  {
    "text": "let's also test out our LSP server's",
    "start": "394560",
    "end": "396900"
  },
  {
    "text": "linting capabilities here I have an",
    "start": "396900",
    "end": "399660"
  },
  {
    "text": "array of size 10. if I try and access",
    "start": "399660",
    "end": "402180"
  },
  {
    "text": "the element at the 10th index which is",
    "start": "402180",
    "end": "404460"
  },
  {
    "text": "out of bounds the linter will accurately",
    "start": "404460",
    "end": "406139"
  },
  {
    "text": "highlight that this is a problem for me",
    "start": "406139",
    "end": "408000"
  },
  {
    "text": "nice",
    "start": "408000",
    "end": "409680"
  },
  {
    "text": "let's really push the limiting",
    "start": "409680",
    "end": "411360"
  },
  {
    "text": "capabilities by seeing if our LSP server",
    "start": "411360",
    "end": "413699"
  },
  {
    "text": "can detect an infinite recursion inside",
    "start": "413699",
    "end": "415500"
  },
  {
    "text": "of a templated function",
    "start": "415500",
    "end": "417180"
  },
  {
    "text": "when we call this function inside of Foo",
    "start": "417180",
    "end": "419699"
  },
  {
    "text": "we can see that the linter detects this",
    "start": "419699",
    "end": "421319"
  },
  {
    "text": "as an error wonderful",
    "start": "421319",
    "end": "423840"
  },
  {
    "text": "the next feature we're going to add is",
    "start": "423840",
    "end": "425400"
  },
  {
    "start": "424000",
    "end": "631000"
  },
  {
    "text": "formatting for CPUs Plus Code so that",
    "start": "425400",
    "end": "427560"
  },
  {
    "text": "our code looks pretty all the time",
    "start": "427560",
    "end": "429720"
  },
  {
    "text": "to do so we're going to use a plugin",
    "start": "429720",
    "end": "431460"
  },
  {
    "text": "called null LS which allows us to bind",
    "start": "431460",
    "end": "433380"
  },
  {
    "text": "LSP functionality to non-lsp tooling the",
    "start": "433380",
    "end": "436560"
  },
  {
    "text": "first thing we're going to need however",
    "start": "436560",
    "end": "437699"
  },
  {
    "text": "is a formatter for this configuration",
    "start": "437699",
    "end": "439979"
  },
  {
    "text": "I've chosen to use c-lang format just",
    "start": "439979",
    "end": "442919"
  },
  {
    "text": "like with C line D we're going to",
    "start": "442919",
    "end": "444479"
  },
  {
    "text": "install c-lang format using Mason",
    "start": "444479",
    "end": "447120"
  },
  {
    "text": "to do so head back on over to your",
    "start": "447120",
    "end": "448919"
  },
  {
    "text": "plugins.lua file and add an entry to",
    "start": "448919",
    "end": "451259"
  },
  {
    "text": "your Ensure installed options for silang",
    "start": "451259",
    "end": "453180"
  },
  {
    "text": "format once that's added you can call",
    "start": "453180",
    "end": "455220"
  },
  {
    "text": "the Mason install all command to",
    "start": "455220",
    "end": "456960"
  },
  {
    "text": "download and install it if you encounter",
    "start": "456960",
    "end": "459300"
  },
  {
    "text": "any problems just close and reopen near",
    "start": "459300",
    "end": "461340"
  },
  {
    "text": "them and try again with silang format",
    "start": "461340",
    "end": "463919"
  },
  {
    "text": "installed we can now configure null LS",
    "start": "463919",
    "end": "465840"
  },
  {
    "text": "to use it",
    "start": "465840",
    "end": "467039"
  },
  {
    "text": "first add an entry to your custom",
    "start": "467039",
    "end": "468840"
  },
  {
    "text": "plugins lure file for null LS next we",
    "start": "468840",
    "end": "471840"
  },
  {
    "text": "need to specify when we want this plugin",
    "start": "471840",
    "end": "473699"
  },
  {
    "text": "to load as the internal sources also",
    "start": "473699",
    "end": "476099"
  },
  {
    "text": "have a file type Associated let's set",
    "start": "476099",
    "end": "478020"
  },
  {
    "text": "this to load on event type of very lazy",
    "start": "478020",
    "end": "480180"
  },
  {
    "text": "so that it always loads but shouldn't",
    "start": "480180",
    "end": "482220"
  },
  {
    "text": "impact startup time we then need to add",
    "start": "482220",
    "end": "484560"
  },
  {
    "text": "a function for our plugins options as",
    "start": "484560",
    "end": "487380"
  },
  {
    "text": "these options can be rather verbose",
    "start": "487380",
    "end": "489539"
  },
  {
    "text": "we'll want to specify them in another",
    "start": "489539",
    "end": "491460"
  },
  {
    "text": "file that means we'll just import the",
    "start": "491460",
    "end": "493680"
  },
  {
    "text": "file here and return it after that we",
    "start": "493680",
    "end": "496080"
  },
  {
    "text": "can go and create this new file to do so",
    "start": "496080",
    "end": "498419"
  },
  {
    "text": "head back on over to the custom configs",
    "start": "498419",
    "end": "500340"
  },
  {
    "text": "directory and create the new file using",
    "start": "500340",
    "end": "502259"
  },
  {
    "text": "the a key let's name this null ls.lure",
    "start": "502259",
    "end": "505560"
  },
  {
    "text": "and open it up inside we're going to",
    "start": "505560",
    "end": "507900"
  },
  {
    "text": "create an empty lure table called ops",
    "start": "507900",
    "end": "509699"
  },
  {
    "text": "and return it next add a line to import",
    "start": "509699",
    "end": "512039"
  },
  {
    "text": "the null LS plugin in order to access",
    "start": "512039",
    "end": "514380"
  },
  {
    "text": "the built-in sources then add a block",
    "start": "514380",
    "end": "517020"
  },
  {
    "text": "inside the options table for the sources",
    "start": "517020",
    "end": "519000"
  },
  {
    "text": "key inside of this block add an entry",
    "start": "519000",
    "end": "521039"
  },
  {
    "text": "for the c-lang format built-in Source",
    "start": "521039",
    "end": "522959"
  },
  {
    "text": "once that's done save the file and let's",
    "start": "522959",
    "end": "525060"
  },
  {
    "text": "test it out here I have some poorly",
    "start": "525060",
    "end": "527580"
  },
  {
    "text": "formatted C plus plus code at least",
    "start": "527580",
    "end": "529620"
  },
  {
    "text": "according to the silang format style",
    "start": "529620",
    "end": "531720"
  },
  {
    "text": "sorry for anybody who doesn't like to",
    "start": "531720",
    "end": "533399"
  },
  {
    "text": "use knr style braces we can run our",
    "start": "533399",
    "end": "536100"
  },
  {
    "text": "formatter by pressing space F and M and",
    "start": "536100",
    "end": "539760"
  },
  {
    "text": "our code has been formatted to the",
    "start": "539760",
    "end": "541560"
  },
  {
    "text": "default Clan format style which suggests",
    "start": "541560",
    "end": "544260"
  },
  {
    "text": "that everything is working as expected",
    "start": "544260",
    "end": "546360"
  },
  {
    "text": "however it's no secret that styling in C",
    "start": "546360",
    "end": "548640"
  },
  {
    "text": "plus can be a bit of a flame war and you",
    "start": "548640",
    "end": "551399"
  },
  {
    "text": "may prefer a different kind of style",
    "start": "551399",
    "end": "552899"
  },
  {
    "text": "than k r fortunately c-lang format has",
    "start": "552899",
    "end": "555720"
  },
  {
    "text": "you covered we can change the style of",
    "start": "555720",
    "end": "557640"
  },
  {
    "text": "silang format by adding a DOT c-lang",
    "start": "557640",
    "end": "559980"
  },
  {
    "text": "format file in our codes directory",
    "start": "559980",
    "end": "562440"
  },
  {
    "text": "we can generate one by using the",
    "start": "562440",
    "end": "564120"
  },
  {
    "text": "following command which will create a",
    "start": "564120",
    "end": "565860"
  },
  {
    "text": "new format file in the style of gnu now",
    "start": "565860",
    "end": "568260"
  },
  {
    "text": "if we head back to our project and run",
    "start": "568260",
    "end": "569880"
  },
  {
    "text": "our formatter Command again we can see",
    "start": "569880",
    "end": "571500"
  },
  {
    "text": "that it formats to this new style",
    "start": "571500",
    "end": "573600"
  },
  {
    "text": "so this is great but running the",
    "start": "573600",
    "end": "575519"
  },
  {
    "text": "formatter manually is a tad tedious what",
    "start": "575519",
    "end": "578100"
  },
  {
    "text": "we really want to do is set up Auto",
    "start": "578100",
    "end": "579720"
  },
  {
    "text": "formatting on save to do so let's head",
    "start": "579720",
    "end": "582420"
  },
  {
    "text": "back on over to our custom null LS",
    "start": "582420",
    "end": "584580"
  },
  {
    "text": "config file the first thing to do is",
    "start": "584580",
    "end": "586500"
  },
  {
    "text": "Define an auto group that will use for",
    "start": "586500",
    "end": "588300"
  },
  {
    "text": "LSP formatting which will prevent us",
    "start": "588300",
    "end": "590339"
  },
  {
    "text": "from having multiple formatters run on",
    "start": "590339",
    "end": "592080"
  },
  {
    "text": "Save",
    "start": "592080",
    "end": "592980"
  },
  {
    "text": "once that's done go ahead and add an",
    "start": "592980",
    "end": "595080"
  },
  {
    "text": "unattached function to the options table",
    "start": "595080",
    "end": "597240"
  },
  {
    "text": "inside of the function add the following",
    "start": "597240",
    "end": "599220"
  },
  {
    "text": "lines of code what this code does is",
    "start": "599220",
    "end": "601320"
  },
  {
    "text": "checks that our client supports the",
    "start": "601320",
    "end": "602760"
  },
  {
    "text": "formatting command and cleans up any",
    "start": "602760",
    "end": "604560"
  },
  {
    "text": "auto formatting on save that already",
    "start": "604560",
    "end": "606060"
  },
  {
    "text": "exists after that it initializes a new",
    "start": "606060",
    "end": "608519"
  },
  {
    "text": "auto command for whenever we save our",
    "start": "608519",
    "end": "610320"
  },
  {
    "text": "buffer which we'll call the LSP format",
    "start": "610320",
    "end": "612300"
  },
  {
    "text": "command on Save",
    "start": "612300",
    "end": "613740"
  },
  {
    "text": "with that done we can head back on over",
    "start": "613740",
    "end": "615480"
  },
  {
    "text": "to our code and we can test this out by",
    "start": "615480",
    "end": "617640"
  },
  {
    "text": "setting up a new DOT Clan format file",
    "start": "617640",
    "end": "619740"
  },
  {
    "text": "for Google style opening up our gnu",
    "start": "619740",
    "end": "622440"
  },
  {
    "text": "formatted code again if we go ahead and",
    "start": "622440",
    "end": "624300"
  },
  {
    "text": "save using colon w we should see that",
    "start": "624300",
    "end": "626339"
  },
  {
    "text": "format changed to Google style which I",
    "start": "626339",
    "end": "628800"
  },
  {
    "text": "for one much more prefer compared to gnu",
    "start": "628800",
    "end": "630839"
  },
  {
    "text": "style although I did learn C plus using",
    "start": "630839",
    "end": "633300"
  },
  {
    "start": "631000",
    "end": "710000"
  },
  {
    "text": "Allman which is pretty similar C plus",
    "start": "633300",
    "end": "636060"
  },
  {
    "text": "plus is definitely one of the harder",
    "start": "636060",
    "end": "637320"
  },
  {
    "text": "languages to get started with and if",
    "start": "637320",
    "end": "639240"
  },
  {
    "text": "you're learning computer science there's",
    "start": "639240",
    "end": "640800"
  },
  {
    "text": "a free and easy way to do so and that's",
    "start": "640800",
    "end": "642959"
  },
  {
    "text": "using the sponsor of today's video",
    "start": "642959",
    "end": "644399"
  },
  {
    "text": "brilliant brilliant.org is the best way",
    "start": "644399",
    "end": "647399"
  },
  {
    "text": "to learn computer science math and data",
    "start": "647399",
    "end": "649500"
  },
  {
    "text": "science interactively",
    "start": "649500",
    "end": "650880"
  },
  {
    "text": "brilliant is a platform that is",
    "start": "650880",
    "end": "652560"
  },
  {
    "text": "dedicated to fun and Interactive",
    "start": "652560",
    "end": "654120"
  },
  {
    "text": "Learning with thousands of lessons that",
    "start": "654120",
    "end": "655980"
  },
  {
    "text": "range from the basics to more advanced",
    "start": "655980",
    "end": "657959"
  },
  {
    "text": "topics with new lessons being added",
    "start": "657959",
    "end": "660180"
  },
  {
    "text": "every month",
    "start": "660180",
    "end": "661380"
  },
  {
    "text": "I decided to try out some of the data",
    "start": "661380",
    "end": "663420"
  },
  {
    "text": "science courses and after a quick quiz",
    "start": "663420",
    "end": "665760"
  },
  {
    "text": "brilliant determined what level I was",
    "start": "665760",
    "end": "667560"
  },
  {
    "text": "ready for I got started with the",
    "start": "667560",
    "end": "669779"
  },
  {
    "text": "introduction to probability course which",
    "start": "669779",
    "end": "671940"
  },
  {
    "text": "had always been a topic that I had",
    "start": "671940",
    "end": "673680"
  },
  {
    "text": "struggled to understand in the past",
    "start": "673680",
    "end": "675720"
  },
  {
    "text": "the way brilliant delivers these courses",
    "start": "675720",
    "end": "677519"
  },
  {
    "text": "in bite-sized chunks allowed me to learn",
    "start": "677519",
    "end": "679800"
  },
  {
    "text": "at my own pace and gain an understanding",
    "start": "679800",
    "end": "681720"
  },
  {
    "text": "I hadn't achieved before because of this",
    "start": "681720",
    "end": "683820"
  },
  {
    "text": "I have a better understanding of",
    "start": "683820",
    "end": "685500"
  },
  {
    "text": "technologies that rely on probability",
    "start": "685500",
    "end": "687120"
  },
  {
    "text": "such as large language models and neural",
    "start": "687120",
    "end": "689640"
  },
  {
    "text": "networks",
    "start": "689640",
    "end": "690839"
  },
  {
    "text": "so to try everything that brilliant has",
    "start": "690839",
    "end": "692820"
  },
  {
    "text": "to offer free for a full 30 days visit",
    "start": "692820",
    "end": "695579"
  },
  {
    "text": "brilliant.org dreams of code or click",
    "start": "695579",
    "end": "698160"
  },
  {
    "text": "the link in the description the first",
    "start": "698160",
    "end": "699839"
  },
  {
    "text": "200 to sign up will receive 20 of",
    "start": "699839",
    "end": "702120"
  },
  {
    "text": "brilliant's annual premium subscription",
    "start": "702120",
    "end": "703860"
  },
  {
    "text": "so sign up today to try out everything",
    "start": "703860",
    "end": "706260"
  },
  {
    "text": "brilliant has to offer and a big thank",
    "start": "706260",
    "end": "708120"
  },
  {
    "text": "you to brilliant for sponsoring this",
    "start": "708120",
    "end": "709620"
  },
  {
    "text": "video",
    "start": "709620",
    "end": "710760"
  },
  {
    "start": "710000",
    "end": "1065000"
  },
  {
    "text": "the last feature we're going to add is a",
    "start": "710760",
    "end": "713040"
  },
  {
    "text": "debugger so that we're able to debug and",
    "start": "713040",
    "end": "715140"
  },
  {
    "text": "run our code from within near them to",
    "start": "715140",
    "end": "717480"
  },
  {
    "text": "achieve this we're going to use a plugin",
    "start": "717480",
    "end": "719160"
  },
  {
    "text": "called nvimdap which stands for the",
    "start": "719160",
    "end": "721079"
  },
  {
    "text": "debug adapter protocol",
    "start": "721079",
    "end": "723000"
  },
  {
    "text": "this plugin allows us to execute our",
    "start": "723000",
    "end": "724860"
  },
  {
    "text": "code and attach to debuggers from within",
    "start": "724860",
    "end": "726959"
  },
  {
    "text": "near them heading back on over to our",
    "start": "726959",
    "end": "729180"
  },
  {
    "text": "plugins.lua file let's add an entry for",
    "start": "729180",
    "end": "731279"
  },
  {
    "text": "nvimdap to our custom plugins table we",
    "start": "731279",
    "end": "733980"
  },
  {
    "text": "now have two options for setting up a c",
    "start": "733980",
    "end": "735779"
  },
  {
    "text": "plus debugger either code lldb or CPP",
    "start": "735779",
    "end": "739500"
  },
  {
    "text": "tools as we're using silang for our LSB",
    "start": "739500",
    "end": "742680"
  },
  {
    "text": "server I'm going to go ahead and opt for",
    "start": "742680",
    "end": "744240"
  },
  {
    "text": "the lldbu option in this video so in",
    "start": "744240",
    "end": "747000"
  },
  {
    "text": "Mason let's add an entry for code lldb",
    "start": "747000",
    "end": "749700"
  },
  {
    "text": "to our ensure installed table and run",
    "start": "749700",
    "end": "752160"
  },
  {
    "text": "the familiar Mason installed all command",
    "start": "752160",
    "end": "754500"
  },
  {
    "text": "once that's done we now need to create a",
    "start": "754500",
    "end": "756660"
  },
  {
    "text": "custom adapter for C plus and nvimdap we",
    "start": "756660",
    "end": "759540"
  },
  {
    "text": "could write this ourselves but there's a",
    "start": "759540",
    "end": "761279"
  },
  {
    "text": "really nice plugin called Mason and the",
    "start": "761279",
    "end": "763079"
  },
  {
    "text": "adapt that has this written already so",
    "start": "763079",
    "end": "765360"
  },
  {
    "text": "we're going to use it back in our",
    "start": "765360",
    "end": "767459"
  },
  {
    "text": "plugins table let's add an entry for",
    "start": "767459",
    "end": "769139"
  },
  {
    "text": "Mason and Vin dap the next thing we need",
    "start": "769139",
    "end": "772019"
  },
  {
    "text": "to add is the plugins dependencies which",
    "start": "772019",
    "end": "774600"
  },
  {
    "text": "are Mason and and then DAP in that order",
    "start": "774600",
    "end": "776940"
  },
  {
    "text": "after that we add in the options block",
    "start": "776940",
    "end": "779160"
  },
  {
    "text": "and specify an empty table for the",
    "start": "779160",
    "end": "780959"
  },
  {
    "text": "handlers which means it will load the",
    "start": "780959",
    "end": "782519"
  },
  {
    "text": "default ones for us",
    "start": "782519",
    "end": "784200"
  },
  {
    "text": "similar to Mason we can specify an",
    "start": "784200",
    "end": "786420"
  },
  {
    "text": "Ensure installed option here where we",
    "start": "786420",
    "end": "788220"
  },
  {
    "text": "could place our debugger dependencies",
    "start": "788220",
    "end": "790380"
  },
  {
    "text": "personally I prefer to keep the primary",
    "start": "790380",
    "end": "792660"
  },
  {
    "text": "Mason configuration as the source of",
    "start": "792660",
    "end": "794639"
  },
  {
    "text": "truth but if you prefer it this way then",
    "start": "794639",
    "end": "796920"
  },
  {
    "text": "by all means added here the last field",
    "start": "796920",
    "end": "799380"
  },
  {
    "text": "to add is the event field which we set",
    "start": "799380",
    "end": "801360"
  },
  {
    "text": "to very lazy",
    "start": "801360",
    "end": "803220"
  },
  {
    "text": "the final package we want to install is",
    "start": "803220",
    "end": "805260"
  },
  {
    "text": "the nvimdap UI plugin which provides a",
    "start": "805260",
    "end": "808079"
  },
  {
    "text": "really nice user interface whenever our",
    "start": "808079",
    "end": "809579"
  },
  {
    "text": "debugger runs to do this add the",
    "start": "809579",
    "end": "812160"
  },
  {
    "text": "following entry into the plugins table",
    "start": "812160",
    "end": "814019"
  },
  {
    "text": "and set the dependency to end themed app",
    "start": "814019",
    "end": "816120"
  },
  {
    "text": "next add in a config function with the",
    "start": "816120",
    "end": "818820"
  },
  {
    "text": "following lines inside these lines",
    "start": "818820",
    "end": "821220"
  },
  {
    "text": "configure the plugin to automatically",
    "start": "821220",
    "end": "823019"
  },
  {
    "text": "open the UI when our debugger is running",
    "start": "823019",
    "end": "825360"
  },
  {
    "text": "you can also copy this code from the",
    "start": "825360",
    "end": "827459"
  },
  {
    "text": "GitHub repository the link is in the",
    "start": "827459",
    "end": "829500"
  },
  {
    "text": "description after that set this plugin",
    "start": "829500",
    "end": "831660"
  },
  {
    "text": "to load on the event type of very lazy",
    "start": "831660",
    "end": "834240"
  },
  {
    "text": "okay awesome so far we're looking good",
    "start": "834240",
    "end": "836459"
  },
  {
    "text": "the last thing we need to do is add in",
    "start": "836459",
    "end": "838500"
  },
  {
    "text": "some custom mappings to both add",
    "start": "838500",
    "end": "840000"
  },
  {
    "text": "breakpoints in our code and to start our",
    "start": "840000",
    "end": "842040"
  },
  {
    "text": "debugger to do this first create a new",
    "start": "842040",
    "end": "844440"
  },
  {
    "text": "file called mappings.lure in the custom",
    "start": "844440",
    "end": "846360"
  },
  {
    "text": "directory",
    "start": "846360",
    "end": "847560"
  },
  {
    "text": "inside of this file create an empty lure",
    "start": "847560",
    "end": "849300"
  },
  {
    "text": "table called M and return it",
    "start": "849300",
    "end": "851459"
  },
  {
    "text": "next add an entry to the table called",
    "start": "851459",
    "end": "853500"
  },
  {
    "text": "dap we'll use this entry for any nvimdap",
    "start": "853500",
    "end": "856320"
  },
  {
    "text": "specific mappings inside of this table",
    "start": "856320",
    "end": "858480"
  },
  {
    "text": "set the plugin value to be true which",
    "start": "858480",
    "end": "861000"
  },
  {
    "text": "means the mappings will only appear when",
    "start": "861000",
    "end": "862860"
  },
  {
    "text": "they are explicitly loaded next add a",
    "start": "862860",
    "end": "865440"
  },
  {
    "text": "table for the N key which stands for",
    "start": "865440",
    "end": "867660"
  },
  {
    "text": "normal mode which is the Vim mode we",
    "start": "867660",
    "end": "870120"
  },
  {
    "text": "want our mapping to be available for",
    "start": "870120",
    "end": "871740"
  },
  {
    "text": "next we can Define the actual key",
    "start": "871740",
    "end": "873600"
  },
  {
    "text": "binding for our mapping which is the",
    "start": "873600",
    "end": "875820"
  },
  {
    "text": "leader or space key followed by D and B",
    "start": "875820",
    "end": "879000"
  },
  {
    "text": "which can be remembered mnemonically as",
    "start": "879000",
    "end": "881579"
  },
  {
    "text": "debugger breakpoint for this mapping we",
    "start": "881579",
    "end": "884279"
  },
  {
    "text": "want to call the DAP toggle breakpoint",
    "start": "884279",
    "end": "886260"
  },
  {
    "text": "command which will toggle a breakpoint",
    "start": "886260",
    "end": "888060"
  },
  {
    "text": "at the same line our cursor is on",
    "start": "888060",
    "end": "889860"
  },
  {
    "text": "finally we'll give the command a",
    "start": "889860",
    "end": "891480"
  },
  {
    "text": "description which will show in our which",
    "start": "891480",
    "end": "893040"
  },
  {
    "text": "key menu now that we've got the gist of",
    "start": "893040",
    "end": "895199"
  },
  {
    "text": "it let's add in another mapping to the",
    "start": "895199",
    "end": "897120"
  },
  {
    "text": "end table this mapping will be used for",
    "start": "897120",
    "end": "899279"
  },
  {
    "text": "starting our debugger let's assign it to",
    "start": "899279",
    "end": "901440"
  },
  {
    "text": "the leader D and R key which we can",
    "start": "901440",
    "end": "903899"
  },
  {
    "text": "remember as debugging run this mapping",
    "start": "903899",
    "end": "906420"
  },
  {
    "text": "will call the DAP continue command which",
    "start": "906420",
    "end": "908820"
  },
  {
    "text": "will both start and resume our debugger",
    "start": "908820",
    "end": "910860"
  },
  {
    "text": "let's also give this a friendly",
    "start": "910860",
    "end": "912600"
  },
  {
    "text": "description Now All That Remains is to",
    "start": "912600",
    "end": "914880"
  },
  {
    "text": "load our mappings whenever NVM dap is",
    "start": "914880",
    "end": "916860"
  },
  {
    "text": "also loaded to do so we first need to",
    "start": "916860",
    "end": "918959"
  },
  {
    "text": "import the mappings into NB chat to do",
    "start": "918959",
    "end": "921480"
  },
  {
    "text": "this head back on over to the",
    "start": "921480",
    "end": "922699"
  },
  {
    "text": "chatrc.lure file and add in the",
    "start": "922699",
    "end": "924660"
  },
  {
    "text": "following line This Will import the",
    "start": "924660",
    "end": "926760"
  },
  {
    "text": "mappings from our mappings file and",
    "start": "926760",
    "end": "928440"
  },
  {
    "text": "assign them to nvchat after that head",
    "start": "928440",
    "end": "930959"
  },
  {
    "text": "back to our custom plugins.lua file and",
    "start": "930959",
    "end": "933000"
  },
  {
    "text": "add in a config function to the mvim DAP",
    "start": "933000",
    "end": "935279"
  },
  {
    "text": "entry inside of this function add the",
    "start": "935279",
    "end": "937800"
  },
  {
    "text": "following line which will explicitly",
    "start": "937800",
    "end": "939120"
  },
  {
    "text": "load the mappings under the DAP table",
    "start": "939120",
    "end": "941279"
  },
  {
    "text": "which is what we Define them as earlier",
    "start": "941279",
    "end": "943560"
  },
  {
    "text": "with that done we should be ready to go",
    "start": "943560",
    "end": "945420"
  },
  {
    "text": "let's go ahead and test out our new",
    "start": "945420",
    "end": "946980"
  },
  {
    "text": "debugger now that we're back in our code",
    "start": "946980",
    "end": "948959"
  },
  {
    "text": "the first thing we need to do to be able",
    "start": "948959",
    "end": "950760"
  },
  {
    "text": "to run it is to well build it when it",
    "start": "950760",
    "end": "953639"
  },
  {
    "text": "comes to C plus it's pretty common to",
    "start": "953639",
    "end": "955500"
  },
  {
    "text": "use either a makefile or cmake file for",
    "start": "955500",
    "end": "957720"
  },
  {
    "text": "managing a Project's build commands",
    "start": "957720",
    "end": "959399"
  },
  {
    "text": "neovim has some really nice plugins for",
    "start": "959399",
    "end": "961620"
  },
  {
    "text": "both of those tools but we're going to",
    "start": "961620",
    "end": "963240"
  },
  {
    "text": "save that for another video for now",
    "start": "963240",
    "end": "964860"
  },
  {
    "text": "we're just going to build our code using",
    "start": "964860",
    "end": "966779"
  },
  {
    "text": "a simple terminal command you can open",
    "start": "966779",
    "end": "969120"
  },
  {
    "text": "up a terminal window in Envy chat by",
    "start": "969120",
    "end": "970800"
  },
  {
    "text": "pressing the space and H key with the",
    "start": "970800",
    "end": "973260"
  },
  {
    "text": "terminal window open we can compile our",
    "start": "973260",
    "end": "975000"
  },
  {
    "text": "code using the following command the",
    "start": "975000",
    "end": "976980"
  },
  {
    "text": "debug flag will ensure that we're also",
    "start": "976980",
    "end": "978720"
  },
  {
    "text": "including debug symbols in our",
    "start": "978720",
    "end": "980399"
  },
  {
    "text": "compilation which is needed for",
    "start": "980399",
    "end": "982320"
  },
  {
    "text": "debugging once that's done you can exit",
    "start": "982320",
    "end": "984540"
  },
  {
    "text": "the terminal by pressing Ctrl and X to",
    "start": "984540",
    "end": "986639"
  },
  {
    "text": "enter normal mode and closing the buffer",
    "start": "986639",
    "end": "988800"
  },
  {
    "text": "with colon queue",
    "start": "988800",
    "end": "990420"
  },
  {
    "text": "back in our code we can now set a",
    "start": "990420",
    "end": "992100"
  },
  {
    "text": "breakpoint using the custom mapping of",
    "start": "992100",
    "end": "993839"
  },
  {
    "text": "space D and B",
    "start": "993839",
    "end": "995579"
  },
  {
    "text": "we can see a breakpoint has been added",
    "start": "995579",
    "end": "997740"
  },
  {
    "text": "by looking at the B next to our line",
    "start": "997740",
    "end": "999600"
  },
  {
    "text": "number with our breakpoint in place we",
    "start": "999600",
    "end": "1001699"
  },
  {
    "text": "can now start the debugger by using our",
    "start": "1001699",
    "end": "1003380"
  },
  {
    "text": "mapping of space d and r",
    "start": "1003380",
    "end": "1005959"
  },
  {
    "text": "this will prompt us to specify the file",
    "start": "1005959",
    "end": "1007940"
  },
  {
    "text": "path of the binary we wish to test if",
    "start": "1007940",
    "end": "1010220"
  },
  {
    "text": "you ran the same command as I did go",
    "start": "1010220",
    "end": "1011779"
  },
  {
    "text": "ahead and set this as main which is the",
    "start": "1011779",
    "end": "1014180"
  },
  {
    "text": "name of my executable",
    "start": "1014180",
    "end": "1015980"
  },
  {
    "text": "as you can see our breakpoint is hit and",
    "start": "1015980",
    "end": "1018019"
  },
  {
    "text": "a number of panels are opened up which",
    "start": "1018019",
    "end": "1019940"
  },
  {
    "text": "we can use for inspecting our code or",
    "start": "1019940",
    "end": "1021680"
  },
  {
    "text": "controlling our debugger by stepping",
    "start": "1021680",
    "end": "1023420"
  },
  {
    "text": "over lines of our code continuing until",
    "start": "1023420",
    "end": "1025400"
  },
  {
    "text": "the next breakpoint or just stopping",
    "start": "1025400",
    "end": "1027380"
  },
  {
    "text": "execution with that we've turned neovim",
    "start": "1027380",
    "end": "1029959"
  },
  {
    "text": "from a basic text editor into a powerful",
    "start": "1029959",
    "end": "1032240"
  },
  {
    "text": "and configurable IDE for working with C",
    "start": "1032240",
    "end": "1034280"
  },
  {
    "text": "plus plus if you have any other",
    "start": "1034280",
    "end": "1036079"
  },
  {
    "text": "languages or tooling that you'd like me",
    "start": "1036079",
    "end": "1037760"
  },
  {
    "text": "to do in this series then let me know in",
    "start": "1037760",
    "end": "1039500"
  },
  {
    "text": "the comments down below I'll be doing a",
    "start": "1039500",
    "end": "1041540"
  },
  {
    "text": "members only poll to decide the next",
    "start": "1041540",
    "end": "1043220"
  },
  {
    "text": "video in the series so if you want to",
    "start": "1043220",
    "end": "1045438"
  },
  {
    "text": "have a vote in the next video I do then",
    "start": "1045439",
    "end": "1047178"
  },
  {
    "text": "please consider supporting me and",
    "start": "1047179",
    "end": "1048679"
  },
  {
    "text": "becoming a channel member finally I want",
    "start": "1048679",
    "end": "1050840"
  },
  {
    "text": "to thank my three new channel members",
    "start": "1050840",
    "end": "1052460"
  },
  {
    "text": "Chiba Ulysses and maybe the second",
    "start": "1052460",
    "end": "1055039"
  },
  {
    "text": "commenter I also want to extend another",
    "start": "1055039",
    "end": "1057320"
  },
  {
    "text": "thank you to brilliant for sponsoring",
    "start": "1057320",
    "end": "1059000"
  },
  {
    "text": "this video otherwise I hope you enjoyed",
    "start": "1059000",
    "end": "1061280"
  },
  {
    "text": "this video and I'll see you on the next",
    "start": "1061280",
    "end": "1062960"
  },
  {
    "text": "one",
    "start": "1062960",
    "end": "1065200"
  }
]