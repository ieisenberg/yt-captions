[
  {
    "start": "0",
    "end": "109000"
  },
  {
    "text": "when it comes to working with databases",
    "start": "199",
    "end": "2120"
  },
  {
    "text": "I believe there's two types of software",
    "start": "2120",
    "end": "4359"
  },
  {
    "text": "developer those that like to use ORS and",
    "start": "4359",
    "end": "7799"
  },
  {
    "text": "those who prefer to write SQL as for",
    "start": "7799",
    "end": "10679"
  },
  {
    "text": "myself I'm definitely that kind of",
    "start": "10679",
    "end": "12519"
  },
  {
    "text": "developer that likes to get his hands",
    "start": "12519",
    "end": "14120"
  },
  {
    "text": "dirty writing raw queries but I also",
    "start": "14120",
    "end": "17960"
  },
  {
    "text": "make sure to be safe which means I use",
    "start": "17960",
    "end": "20640"
  },
  {
    "text": "protection that protection typically",
    "start": "20640",
    "end": "22800"
  },
  {
    "text": "comes in the form of abstraction",
    "start": "22800",
    "end": "24560"
  },
  {
    "text": "wrapping the raw queries in a typesafe",
    "start": "24560",
    "end": "27039"
  },
  {
    "text": "construct using the repository design",
    "start": "27039",
    "end": "29640"
  },
  {
    "text": "pattern by doing so it provides a number",
    "start": "29640",
    "end": "32480"
  },
  {
    "text": "of benefits the first and most obvious",
    "start": "32480",
    "end": "36200"
  },
  {
    "text": "is that you get to write your own SQL",
    "start": "36200",
    "end": "38640"
  },
  {
    "text": "meaning you have full control over the",
    "start": "38640",
    "end": "40440"
  },
  {
    "text": "queries that are being performed against",
    "start": "40440",
    "end": "42320"
  },
  {
    "text": "your database additionally by",
    "start": "42320",
    "end": "44440"
  },
  {
    "text": "abstracting my SQL queries into a",
    "start": "44440",
    "end": "46600"
  },
  {
    "text": "central repository type I'm able to",
    "start": "46600",
    "end": "48920"
  },
  {
    "text": "constrain my database operations into a",
    "start": "48920",
    "end": "51120"
  },
  {
    "text": "single location which prevents me from",
    "start": "51120",
    "end": "53320"
  },
  {
    "text": "needing to sprinkle SQL queries all",
    "start": "53320",
    "end": "55320"
  },
  {
    "text": "across my code instead because these",
    "start": "55320",
    "end": "57680"
  },
  {
    "text": "queries are wrapped inside of their own",
    "start": "57680",
    "end": "59280"
  },
  {
    "text": "functions the operation itself becomes",
    "start": "59280",
    "end": "61800"
  },
  {
    "text": "type safe due to the implementation of",
    "start": "61800",
    "end": "64158"
  },
  {
    "text": "concrete types for both the query inputs",
    "start": "64159",
    "end": "66520"
  },
  {
    "text": "and outputs this not only has the",
    "start": "66520",
    "end": "69040"
  },
  {
    "text": "benefit of decoupling my database",
    "start": "69040",
    "end": "70920"
  },
  {
    "text": "implementation with the application",
    "start": "70920",
    "end": "72680"
  },
  {
    "text": "logic but makes it really easy to reuse",
    "start": "72680",
    "end": "75320"
  },
  {
    "text": "these queries across my code all of this",
    "start": "75320",
    "end": "77759"
  },
  {
    "text": "makes the repository design pattern my",
    "start": "77759",
    "end": "79759"
  },
  {
    "text": "preferred approach for working with",
    "start": "79759",
    "end": "81200"
  },
  {
    "text": "databases in my application code but as",
    "start": "81200",
    "end": "84680"
  },
  {
    "text": "with all design patterns there is a",
    "start": "84680",
    "end": "86640"
  },
  {
    "text": "trade-off in this case that trade-off is",
    "start": "86640",
    "end": "89560"
  },
  {
    "text": "time as you typically have to write this",
    "start": "89560",
    "end": "91920"
  },
  {
    "text": "repository implementation by hand this",
    "start": "91920",
    "end": "94640"
  },
  {
    "text": "can be somewhat tedious as most of the",
    "start": "94640",
    "end": "96759"
  },
  {
    "text": "code that's written ends up just being",
    "start": "96759",
    "end": "98840"
  },
  {
    "text": "boiler plate for those developers who",
    "start": "98840",
    "end": "100920"
  },
  {
    "text": "aren't AI adverse then this may not be",
    "start": "100920",
    "end": "103680"
  },
  {
    "text": "too much of an issue but for myself I'd",
    "start": "103680",
    "end": "106320"
  },
  {
    "text": "much rather just write these SQL queries",
    "start": "106320",
    "end": "108280"
  },
  {
    "text": "by hand and have the actual repository",
    "start": "108280",
    "end": "110560"
  },
  {
    "start": "109000",
    "end": "242000"
  },
  {
    "text": "boiler plates be generated fortunately",
    "start": "110560",
    "end": "113040"
  },
  {
    "text": "it seems I'm not the only one who thinks",
    "start": "113040",
    "end": "114759"
  },
  {
    "text": "this way as some rather clever",
    "start": "114759",
    "end": "116680"
  },
  {
    "text": "individuals have created what I think is",
    "start": "116680",
    "end": "118920"
  },
  {
    "text": "the perfect solution ution SQL C which",
    "start": "118920",
    "end": "122759"
  },
  {
    "text": "was actually recommended to me by a",
    "start": "122759",
    "end": "124439"
  },
  {
    "text": "couple of members of my Discord Channel",
    "start": "124439",
    "end": "126520"
  },
  {
    "text": "and after having used it for about a",
    "start": "126520",
    "end": "128239"
  },
  {
    "text": "month now it's dramatically reduced the",
    "start": "128239",
    "end": "130280"
  },
  {
    "text": "amount of time it takes for me to write",
    "start": "130280",
    "end": "131840"
  },
  {
    "text": "code that works with SQL queries so much",
    "start": "131840",
    "end": "134680"
  },
  {
    "text": "so that I don't think I'll ever go back",
    "start": "134680",
    "end": "136599"
  },
  {
    "text": "to a time where I didn't use it the way",
    "start": "136599",
    "end": "139319"
  },
  {
    "text": "sqlc works is actually rather intuitive",
    "start": "139319",
    "end": "142280"
  },
  {
    "text": "it starts with what is arguably the most",
    "start": "142280",
    "end": "144400"
  },
  {
    "text": "important part of working with a",
    "start": "144400",
    "end": "145879"
  },
  {
    "text": "database the queries themselves when it",
    "start": "145879",
    "end": "148560"
  },
  {
    "text": "comes to sqy you Define your SQL queries",
    "start": "148560",
    "end": "151120"
  },
  {
    "text": "inside of a do SQL file using",
    "start": "151120",
    "end": "153720"
  },
  {
    "text": "annotations to define the query name and",
    "start": "153720",
    "end": "156120"
  },
  {
    "text": "the query type then by using the sqlc",
    "start": "156120",
    "end": "158879"
  },
  {
    "text": "generate command you're able to generate",
    "start": "158879",
    "end": "161120"
  },
  {
    "text": "code in your chosen language that is",
    "start": "161120",
    "end": "163120"
  },
  {
    "text": "both type safe and matches the",
    "start": "163120",
    "end": "165120"
  },
  {
    "text": "repository design pattern if the term",
    "start": "165120",
    "end": "167720"
  },
  {
    "text": "generate code gives you some pause then",
    "start": "167720",
    "end": "170200"
  },
  {
    "text": "I get it now I've been known to have my",
    "start": "170200",
    "end": "172280"
  },
  {
    "text": "own strong reaction whenever somebody",
    "start": "172280",
    "end": "174640"
  },
  {
    "text": "mentions code gen to me so when I first",
    "start": "174640",
    "end": "177239"
  },
  {
    "text": "heard how sqlc worked I was initially",
    "start": "177239",
    "end": "179879"
  },
  {
    "text": "skeptical however after having now used",
    "start": "179879",
    "end": "182200"
  },
  {
    "text": "it a few times I think the code",
    "start": "182200",
    "end": "184280"
  },
  {
    "text": "generation has been implemented in one",
    "start": "184280",
    "end": "186159"
  },
  {
    "text": "of the best ways I've ever seen not only",
    "start": "186159",
    "end": "188720"
  },
  {
    "text": "does the generator code look pretty",
    "start": "188720",
    "end": "190440"
  },
  {
    "text": "similar to how I would write it but",
    "start": "190440",
    "end": "192400"
  },
  {
    "text": "you're also able to customize it in",
    "start": "192400",
    "end": "194319"
  },
  {
    "text": "whichever way you need this includes",
    "start": "194319",
    "end": "196640"
  },
  {
    "text": "which language you generate your code",
    "start": "196640",
    "end": "198319"
  },
  {
    "text": "into as sqy not only supports four",
    "start": "198319",
    "end": "200959"
  },
  {
    "text": "languages natively which are typescript",
    "start": "200959",
    "end": "203640"
  },
  {
    "text": "codlin Python and go but it also",
    "start": "203640",
    "end": "206640"
  },
  {
    "text": "supports a number of other languages",
    "start": "206640",
    "end": "208319"
  },
  {
    "text": "using its plugins feature which allows",
    "start": "208319",
    "end": "210480"
  },
  {
    "text": "you to add any language support that you",
    "start": "210480",
    "end": "212560"
  },
  {
    "text": "may want not only this but sqlc also",
    "start": "212560",
    "end": "215480"
  },
  {
    "text": "supports three different SQL engines",
    "start": "215480",
    "end": "218080"
  },
  {
    "text": "postgres MySQL and SQL light",
    "start": "218080",
    "end": "221840"
  },
  {
    "text": "additionally it manages to achieve all",
    "start": "221840",
    "end": "223760"
  },
  {
    "text": "this without adding any additional",
    "start": "223760",
    "end": "225480"
  },
  {
    "text": "dependencies instead making use of",
    "start": "225480",
    "end": "227760"
  },
  {
    "text": "popular packages for each respective",
    "start": "227760",
    "end": "229640"
  },
  {
    "text": "language whilst also allowing you to",
    "start": "229640",
    "end": "231560"
  },
  {
    "text": "configure which types and packages are",
    "start": "231560",
    "end": "233159"
  },
  {
    "text": "used by the generated code all of this",
    "start": "233159",
    "end": "235920"
  },
  {
    "text": "makes SQL C incredibly easy to use as it",
    "start": "235920",
    "end": "238959"
  },
  {
    "text": "can be easily customized to fit your own",
    "start": "238959",
    "end": "241560"
  },
  {
    "text": "requirements before we look into SQL C",
    "start": "241560",
    "end": "244079"
  },
  {
    "start": "242000",
    "end": "343000"
  },
  {
    "text": "however let me first pay some bills by",
    "start": "244079",
    "end": "246599"
  },
  {
    "text": "asking you two questions question number",
    "start": "246599",
    "end": "249280"
  },
  {
    "text": "one are you interested in learning",
    "start": "249280",
    "end": "251079"
  },
  {
    "text": "backend web development using either",
    "start": "251079",
    "end": "253079"
  },
  {
    "text": "python or go and question number two do",
    "start": "253079",
    "end": "256000"
  },
  {
    "text": "you happen to like role playing games",
    "start": "256000",
    "end": "258560"
  },
  {
    "text": "well if you answered yes to both then",
    "start": "258560",
    "end": "260519"
  },
  {
    "text": "you may be interested in the sponsor of",
    "start": "260519",
    "end": "262360"
  },
  {
    "text": "today's video boot dodev boot dodev is",
    "start": "262360",
    "end": "266320"
  },
  {
    "text": "an online platform where you can learn",
    "start": "266320",
    "end": "268120"
  },
  {
    "text": "back-end web development from start to",
    "start": "268120",
    "end": "270120"
  },
  {
    "text": "finish using both Python and go the team",
    "start": "270120",
    "end": "273520"
  },
  {
    "text": "at boot. believe that the smartest way",
    "start": "273520",
    "end": "275680"
  },
  {
    "text": "to learn to code is to make sure that",
    "start": "275680",
    "end": "277440"
  },
  {
    "text": "you're never bored which is why they",
    "start": "277440",
    "end": "279560"
  },
  {
    "text": "have implemented aspects from role",
    "start": "279560",
    "end": "281120"
  },
  {
    "text": "playing games into the platform this",
    "start": "281120",
    "end": "283360"
  },
  {
    "text": "means that by learning you'll also earn",
    "start": "283360",
    "end": "285680"
  },
  {
    "text": "XP levels achievements and complete",
    "start": "285680",
    "end": "288759"
  },
  {
    "text": "quests in order to reach the top spot of",
    "start": "288759",
    "end": "291400"
  },
  {
    "text": "the leader board the platform is",
    "start": "291400",
    "end": "293600"
  },
  {
    "text": "designed to get you writing a ton of",
    "start": "293600",
    "end": "295479"
  },
  {
    "text": "code as getting your hands on the",
    "start": "295479",
    "end": "297120"
  },
  {
    "text": "keyboard and shipping is one of the best",
    "start": "297120",
    "end": "299039"
  },
  {
    "text": "ways to really learn because learning to",
    "start": "299039",
    "end": "301600"
  },
  {
    "text": "code can be kind of spooky boot dodev do",
    "start": "301600",
    "end": "304120"
  },
  {
    "text": "as much as they can to try to make it as",
    "start": "304120",
    "end": "305919"
  },
  {
    "text": "risk-free as possible they achieve this",
    "start": "305919",
    "end": "308440"
  },
  {
    "text": "by providing a free demo of every course",
    "start": "308440",
    "end": "311000"
  },
  {
    "text": "and its interactive features as well as",
    "start": "311000",
    "end": "313400"
  },
  {
    "text": "offering a 30-day no questions asked",
    "start": "313400",
    "end": "315800"
  },
  {
    "text": "refund policy enabling you to test if",
    "start": "315800",
    "end": "318199"
  },
  {
    "text": "the platform is right for you therefore",
    "start": "318199",
    "end": "320680"
  },
  {
    "text": "in order to learn all of the skills you",
    "start": "320680",
    "end": "322160"
  },
  {
    "text": "need to become a back-end web developer",
    "start": "322160",
    "end": "324360"
  },
  {
    "text": "working in either python or go then",
    "start": "324360",
    "end": "326759"
  },
  {
    "text": "click the link in the description down",
    "start": "326759",
    "end": "328240"
  },
  {
    "text": "below and use my coupon code code dreams",
    "start": "328240",
    "end": "330240"
  },
  {
    "text": "of code to get 25% off your first",
    "start": "330240",
    "end": "332240"
  },
  {
    "text": "payment for boot dodev that's 25% off",
    "start": "332240",
    "end": "335160"
  },
  {
    "text": "your first month or your first year",
    "start": "335160",
    "end": "337400"
  },
  {
    "text": "depending on which subscription that you",
    "start": "337400",
    "end": "339280"
  },
  {
    "text": "choose a big thank you to boot dodev for",
    "start": "339280",
    "end": "342120"
  },
  {
    "text": "sponsoring this video to show seqy in",
    "start": "342120",
    "end": "344560"
  },
  {
    "start": "343000",
    "end": "442000"
  },
  {
    "text": "action let's begin with a simple example",
    "start": "344560",
    "end": "346800"
  },
  {
    "text": "of how it works here I've created a",
    "start": "346800",
    "end": "349639"
  },
  {
    "text": "simple application which performs data",
    "start": "349639",
    "end": "351600"
  },
  {
    "text": "operations to represent an online role",
    "start": "351600",
    "end": "354080"
  },
  {
    "text": "playing game if I go ahead and run this",
    "start": "354080",
    "end": "356400"
  },
  {
    "text": "code you can see it pulls all of the",
    "start": "356400",
    "end": "358000"
  },
  {
    "text": "games players out of the database and",
    "start": "358000",
    "end": "359880"
  },
  {
    "text": "prints them to the console in a tabular",
    "start": "359880",
    "end": "361800"
  },
  {
    "text": "format the code for this project is",
    "start": "361800",
    "end": "364039"
  },
  {
    "text": "pretty simple all it does is connect to",
    "start": "364039",
    "end": "366240"
  },
  {
    "text": "a postgres database using the Fantastic",
    "start": "366240",
    "end": "368599"
  },
  {
    "text": "PGX package which is my favorite",
    "start": "368599",
    "end": "370840"
  },
  {
    "text": "postgres driver to use when it comes to",
    "start": "370840",
    "end": "372919"
  },
  {
    "text": "go after connecting to the database the",
    "start": "372919",
    "end": "375360"
  },
  {
    "text": "code then calls the get players function",
    "start": "375360",
    "end": "377599"
  },
  {
    "text": "passing in the database connection this",
    "start": "377599",
    "end": "379759"
  },
  {
    "text": "function acts as a basic abstraction of",
    "start": "379759",
    "end": "381880"
  },
  {
    "text": "the database operation wrapping the raw",
    "start": "381880",
    "end": "384319"
  },
  {
    "text": "SQL query and returning a typesafe",
    "start": "384319",
    "end": "386680"
  },
  {
    "text": "result basically this function acts as a",
    "start": "386680",
    "end": "389240"
  },
  {
    "text": "simple implementation of the repository",
    "start": "389240",
    "end": "391199"
  },
  {
    "text": "design pattern that I mentioned before",
    "start": "391199",
    "end": "393720"
  },
  {
    "text": "despite this function having a",
    "start": "393720",
    "end": "395120"
  },
  {
    "text": "relatively simple implementation there's",
    "start": "395120",
    "end": "397160"
  },
  {
    "text": "still a lot of boiler plate that goes",
    "start": "397160",
    "end": "398880"
  },
  {
    "text": "into supporting the core functionality",
    "start": "398880",
    "end": "401560"
  },
  {
    "text": "which basically boils down to the SQL",
    "start": "401560",
    "end": "403360"
  },
  {
    "text": "query on line 38 and 39 and encoding the",
    "start": "403360",
    "end": "406840"
  },
  {
    "text": "rows into our concrete go type the",
    "start": "406840",
    "end": "409360"
  },
  {
    "text": "player struct therefore let's remove",
    "start": "409360",
    "end": "411680"
  },
  {
    "text": "this boiler plate from our code by using",
    "start": "411680",
    "end": "413720"
  },
  {
    "text": "sqlc instead to begin we need to create",
    "start": "413720",
    "end": "417039"
  },
  {
    "text": "a new file called SQL C.O this file is",
    "start": "417039",
    "end": "420280"
  },
  {
    "text": "used to configure SQL C in order for it",
    "start": "420280",
    "end": "422280"
  },
  {
    "text": "to work with both our project our",
    "start": "422280",
    "end": "424280"
  },
  {
    "text": "database schema and our database queries",
    "start": "424280",
    "end": "427160"
  },
  {
    "text": "inside of this file the first thing we",
    "start": "427160",
    "end": "428720"
  },
  {
    "text": "need to Define is the SQL C schema",
    "start": "428720",
    "end": "430919"
  },
  {
    "text": "version which at the time of recording",
    "start": "430919",
    "end": "433160"
  },
  {
    "text": "is version two afterwards we then Define",
    "start": "433160",
    "end": "435720"
  },
  {
    "text": "the SQL block and SQL engine that we're",
    "start": "435720",
    "end": "437879"
  },
  {
    "text": "going to use which in this case is",
    "start": "437879",
    "end": "440280"
  },
  {
    "text": "postgres with our SQL engine defined the",
    "start": "440280",
    "end": "442840"
  },
  {
    "start": "442000",
    "end": "494000"
  },
  {
    "text": "next thing we need to do is to Define",
    "start": "442840",
    "end": "444400"
  },
  {
    "text": "our database schema this can be achieved",
    "start": "444400",
    "end": "446759"
  },
  {
    "text": "using a couple of different approaches",
    "start": "446759",
    "end": "448879"
  },
  {
    "text": "if you're using using a database",
    "start": "448879",
    "end": "450240"
  },
  {
    "text": "migration tool such as the Fantastic",
    "start": "450240",
    "end": "452319"
  },
  {
    "text": "goang migrate package then you can",
    "start": "452319",
    "end": "454720"
  },
  {
    "text": "easily set the value of this field to be",
    "start": "454720",
    "end": "456400"
  },
  {
    "text": "the directory that contains your",
    "start": "456400",
    "end": "457879"
  },
  {
    "text": "database migrations this is my personal",
    "start": "457879",
    "end": "460879"
  },
  {
    "text": "preferred approach as it allows you to",
    "start": "460879",
    "end": "462639"
  },
  {
    "text": "keep both your sqlc schema and database",
    "start": "462639",
    "end": "465000"
  },
  {
    "text": "in sync which you can easily ensure by",
    "start": "465000",
    "end": "467319"
  },
  {
    "text": "using cicd if you don't happen to be",
    "start": "467319",
    "end": "469639"
  },
  {
    "text": "using the migrate package for migrations",
    "start": "469639",
    "end": "471960"
  },
  {
    "text": "then sqlc does support other database",
    "start": "471960",
    "end": "473960"
  },
  {
    "text": "migration tools as well the",
    "start": "473960",
    "end": "475840"
  },
  {
    "text": "documentation contains a list of which",
    "start": "475840",
    "end": "477720"
  },
  {
    "text": "tools are supported if you're not using",
    "start": "477720",
    "end": "480440"
  },
  {
    "text": "database migrations which you really",
    "start": "480440",
    "end": "482280"
  },
  {
    "text": "should be then you can either write down",
    "start": "482280",
    "end": "484400"
  },
  {
    "text": "your database schema in SQL or better",
    "start": "484400",
    "end": "486680"
  },
  {
    "text": "yet dump it from your database using the",
    "start": "486680",
    "end": "488879"
  },
  {
    "text": "following PG dump command whichever",
    "start": "488879",
    "end": "491520"
  },
  {
    "text": "approach you take wants you to find",
    "start": "491520",
    "end": "493280"
  },
  {
    "text": "where your database schema lives the",
    "start": "493280",
    "end": "495120"
  },
  {
    "start": "494000",
    "end": "543000"
  },
  {
    "text": "next thing to do is to Define where SQL",
    "start": "495120",
    "end": "497039"
  },
  {
    "text": "C can find our queries by setting the",
    "start": "497039",
    "end": "499479"
  },
  {
    "text": "queries field for the value of this",
    "start": "499479",
    "end": "501639"
  },
  {
    "text": "field this again can either point to a",
    "start": "501639",
    "end": "503759"
  },
  {
    "text": "single file or a directory which",
    "start": "503759",
    "end": "505759"
  },
  {
    "text": "contains multiple SQL files inside in my",
    "start": "505759",
    "end": "508759"
  },
  {
    "text": "case I'm going to to set this to a",
    "start": "508759",
    "end": "510240"
  },
  {
    "text": "single file called query. SQL which I'm",
    "start": "510240",
    "end": "513320"
  },
  {
    "text": "now going to go and create this file is",
    "start": "513320",
    "end": "516000"
  },
  {
    "text": "where all of these SQL queries from my",
    "start": "516000",
    "end": "517560"
  },
  {
    "text": "project are going to be defined starting",
    "start": "517560",
    "end": "519880"
  },
  {
    "text": "with adding in the select query I'm",
    "start": "519880",
    "end": "521800"
  },
  {
    "text": "already using inside of my application",
    "start": "521800",
    "end": "524000"
  },
  {
    "text": "code however instead of this being the",
    "start": "524000",
    "end": "526480"
  },
  {
    "text": "exact same query I'm going to make a",
    "start": "526480",
    "end": "528480"
  },
  {
    "text": "small but welcome change rather than",
    "start": "528480",
    "end": "531000"
  },
  {
    "text": "explicitly defining each of the columns",
    "start": "531000",
    "end": "532720"
  },
  {
    "text": "we want to select which is typically",
    "start": "532720",
    "end": "534720"
  },
  {
    "text": "needed when working with SQL in go",
    "start": "534720",
    "end": "537320"
  },
  {
    "text": "instead I'm going to replace this with",
    "start": "537320",
    "end": "539160"
  },
  {
    "text": "the select star syntax in order to",
    "start": "539160",
    "end": "541760"
  },
  {
    "text": "select all the columns in the table with",
    "start": "541760",
    "end": "544240"
  },
  {
    "start": "543000",
    "end": "611000"
  },
  {
    "text": "that our query is now defined the next",
    "start": "544240",
    "end": "546920"
  },
  {
    "text": "thing we need to do is to give it a name",
    "start": "546920",
    "end": "549560"
  },
  {
    "text": "this is done through the use of a SQL",
    "start": "549560",
    "end": "551360"
  },
  {
    "text": "comment on the line above the query in",
    "start": "551360",
    "end": "553760"
  },
  {
    "text": "this case I'm using the following syntax",
    "start": "553760",
    "end": "555839"
  },
  {
    "text": "to give this query the name of find all",
    "start": "555839",
    "end": "558240"
  },
  {
    "text": "players in sequency this is actually",
    "start": "558240",
    "end": "560560"
  },
  {
    "text": "known as The annotation and is required",
    "start": "560560",
    "end": "563160"
  },
  {
    "text": "for each query we Define inside of our",
    "start": "563160",
    "end": "565360"
  },
  {
    "text": "query file in addition to the query name",
    "start": "565360",
    "end": "568399"
  },
  {
    "text": "this annotation or also needs to define",
    "start": "568399",
    "end": "570360"
  },
  {
    "text": "the command that the query will use sqen",
    "start": "570360",
    "end": "573079"
  },
  {
    "text": "C provides a number of different",
    "start": "573079",
    "end": "574480"
  },
  {
    "text": "commands you can choose from each of",
    "start": "574480",
    "end": "576240"
  },
  {
    "text": "which are similar to commands found when",
    "start": "576240",
    "end": "578040"
  },
  {
    "text": "using either the PGX or database ssql",
    "start": "578040",
    "end": "580959"
  },
  {
    "text": "packages when it comes to go the three",
    "start": "580959",
    "end": "583320"
  },
  {
    "text": "ones that I use most are the one command",
    "start": "583320",
    "end": "585920"
  },
  {
    "text": "which returns a single Row the many",
    "start": "585920",
    "end": "588399"
  },
  {
    "text": "command which is used for returning a",
    "start": "588399",
    "end": "590240"
  },
  {
    "text": "slice of rows and the exec command which",
    "start": "590240",
    "end": "593839"
  },
  {
    "text": "is used for queries that don't return",
    "start": "593839",
    "end": "595839"
  },
  {
    "text": "any rows for a full list of the",
    "start": "595839",
    "end": "598040"
  },
  {
    "text": "available commands I re recommend",
    "start": "598040",
    "end": "599760"
  },
  {
    "text": "checking out the SQL C documentation in",
    "start": "599760",
    "end": "602519"
  },
  {
    "text": "the case of this current query because",
    "start": "602519",
    "end": "604440"
  },
  {
    "text": "it can return multiple rows then we want",
    "start": "604440",
    "end": "606760"
  },
  {
    "text": "to use the many command which is done",
    "start": "606760",
    "end": "609200"
  },
  {
    "text": "using the following syntax with both our",
    "start": "609200",
    "end": "612120"
  },
  {
    "start": "611000",
    "end": "655000"
  },
  {
    "text": "query and annotation defined let's head",
    "start": "612120",
    "end": "614600"
  },
  {
    "text": "back on over to our sqlc doyo file in",
    "start": "614600",
    "end": "617320"
  },
  {
    "text": "order to configure the code generation",
    "start": "617320",
    "end": "619720"
  },
  {
    "text": "in my case I want sqlc to generate go",
    "start": "619720",
    "end": "622279"
  },
  {
    "text": "code which I can achieve by adding in",
    "start": "622279",
    "end": "624360"
  },
  {
    "text": "the following two lines then inside of",
    "start": "624360",
    "end": "626800"
  },
  {
    "text": "the go block the next thing to do is",
    "start": "626800",
    "end": "628560"
  },
  {
    "text": "Define the packet package name of the",
    "start": "628560",
    "end": "630040"
  },
  {
    "text": "generated code in my case I'm sending",
    "start": "630040",
    "end": "632160"
  },
  {
    "text": "this package name to repository next we",
    "start": "632160",
    "end": "634720"
  },
  {
    "text": "then need to Define where in our file",
    "start": "634720",
    "end": "636519"
  },
  {
    "text": "system we want this generated code to be",
    "start": "636519",
    "end": "638639"
  },
  {
    "text": "output to using the out key in my case",
    "start": "638639",
    "end": "642320"
  },
  {
    "text": "I'm setting this to be the internal /",
    "start": "642320",
    "end": "644240"
  },
  {
    "text": "repository directory of my project with",
    "start": "644240",
    "end": "646880"
  },
  {
    "text": "that the first iteration of our sequency",
    "start": "646880",
    "end": "649079"
  },
  {
    "text": "config is good to go let's go ahead and",
    "start": "649079",
    "end": "651480"
  },
  {
    "text": "use it to generate some code to do so we",
    "start": "651480",
    "end": "654399"
  },
  {
    "text": "first need to install the sqy binary",
    "start": "654399",
    "end": "656560"
  },
  {
    "start": "655000",
    "end": "688000"
  },
  {
    "text": "onto our system sqy is available for",
    "start": "656560",
    "end": "659000"
  },
  {
    "text": "both Mac OS and Linux in their",
    "start": "659000",
    "end": "660680"
  },
  {
    "text": "respective package managers if you're",
    "start": "660680",
    "end": "662639"
  },
  {
    "text": "using Arch you can install it using",
    "start": "662639",
    "end": "664440"
  },
  {
    "text": "Pac-Man by the way or if you're using",
    "start": "664440",
    "end": "666800"
  },
  {
    "text": "Mac OS then it's also available on",
    "start": "666800",
    "end": "668639"
  },
  {
    "text": "Homebrew by the way however if you like",
    "start": "668639",
    "end": "671240"
  },
  {
    "text": "to live declaratively just like me by",
    "start": "671240",
    "end": "673600"
  },
  {
    "text": "the way then fortunately it's available",
    "start": "673600",
    "end": "675519"
  },
  {
    "text": "on the Nyx package manager as well",
    "start": "675519",
    "end": "677920"
  },
  {
    "text": "whichever approach you take once the",
    "start": "677920",
    "end": "679680"
  },
  {
    "text": "binary is installed go ahead and run it",
    "start": "679680",
    "end": "681760"
  },
  {
    "text": "using the sqlc generate command this",
    "start": "681760",
    "end": "684360"
  },
  {
    "text": "will generate a number of source files",
    "start": "684360",
    "end": "686240"
  },
  {
    "text": "in the directory we defined let's take a",
    "start": "686240",
    "end": "688519"
  },
  {
    "start": "688000",
    "end": "738000"
  },
  {
    "text": "moment to quick go through this",
    "start": "688519",
    "end": "690160"
  },
  {
    "text": "generated code first of all we have the",
    "start": "690160",
    "end": "692519"
  },
  {
    "text": "db. go file which accepts a database",
    "start": "692519",
    "end": "695440"
  },
  {
    "text": "connection and returns a query type this",
    "start": "695440",
    "end": "698399"
  },
  {
    "text": "is the Constructor that we'll use in",
    "start": "698399",
    "end": "699920"
  },
  {
    "text": "order to access our database queries",
    "start": "699920",
    "end": "702480"
  },
  {
    "text": "next up we have the models. go file",
    "start": "702480",
    "end": "705320"
  },
  {
    "text": "which contains generated data types used",
    "start": "705320",
    "end": "707600"
  },
  {
    "text": "to represent our data model based on the",
    "start": "707600",
    "end": "709920"
  },
  {
    "text": "database schema and the queries",
    "start": "709920",
    "end": "712079"
  },
  {
    "text": "themselves lastly we have the query. SQL",
    "start": "712079",
    "end": "715200"
  },
  {
    "text": "Dogo file which contains the actual",
    "start": "715200",
    "end": "717320"
  },
  {
    "text": "implementation of our database queries",
    "start": "717320",
    "end": "719360"
  },
  {
    "text": "converting them into our go types if we",
    "start": "719360",
    "end": "722160"
  },
  {
    "text": "quickly take a look at this",
    "start": "722160",
    "end": "723120"
  },
  {
    "text": "implementation you can see it's actually",
    "start": "723120",
    "end": "725120"
  },
  {
    "text": "very similar to how I had implemented",
    "start": "725120",
    "end": "727040"
  },
  {
    "text": "this by hand which is really reassuring",
    "start": "727040",
    "end": "729959"
  },
  {
    "text": "to see lastly you'll notice that the",
    "start": "729959",
    "end": "731880"
  },
  {
    "text": "name of this file also contains the name",
    "start": "731880",
    "end": "733920"
  },
  {
    "text": "of the associated query file we'll take",
    "start": "733920",
    "end": "736279"
  },
  {
    "text": "a look at why that is later on for the",
    "start": "736279",
    "end": "738800"
  },
  {
    "start": "738000",
    "end": "847000"
  },
  {
    "text": "meantime however let's integrate this",
    "start": "738800",
    "end": "740480"
  },
  {
    "text": "code into our application by first",
    "start": "740480",
    "end": "742959"
  },
  {
    "text": "heading on over to the main.go file and",
    "start": "742959",
    "end": "745000"
  },
  {
    "text": "deleting a bunch of code very nice with",
    "start": "745000",
    "end": "748000"
  },
  {
    "text": "the boilerplate deleted let's go ahead",
    "start": "748000",
    "end": "749959"
  },
  {
    "text": "and use the code that SQL C generated to",
    "start": "749959",
    "end": "752920"
  },
  {
    "text": "do so let's first call The Constructor",
    "start": "752920",
    "end": "754519"
  },
  {
    "text": "function of the repository package",
    "start": "754519",
    "end": "756440"
  },
  {
    "text": "passing in our PGX connection next let's",
    "start": "756440",
    "end": "759560"
  },
  {
    "text": "go ahead and retrieve all of the players",
    "start": "759560",
    "end": "761040"
  },
  {
    "text": "from our table by using the find all",
    "start": "761040",
    "end": "763040"
  },
  {
    "text": "players method this method will use the",
    "start": "763040",
    "end": "765440"
  },
  {
    "text": "query that we defined inside of the",
    "start": "765440",
    "end": "767079"
  },
  {
    "text": "query. SQL for the sake of brevity I'm",
    "start": "767079",
    "end": "770040"
  },
  {
    "text": "choosing to not add any error handling",
    "start": "770040",
    "end": "772040"
  },
  {
    "text": "into these examples just as an FYI if we",
    "start": "772040",
    "end": "775120"
  },
  {
    "text": "take a look at this method signature we",
    "start": "775120",
    "end": "776720"
  },
  {
    "text": "can see it returns back a slice of the",
    "start": "776720",
    "end": "778519"
  },
  {
    "text": "player type",
    "start": "778519",
    "end": "779760"
  },
  {
    "text": "rather than returning any unsafe SQL",
    "start": "779760",
    "end": "782040"
  },
  {
    "text": "rows we can use the following go do",
    "start": "782040",
    "end": "784519"
  },
  {
    "text": "command to view what this player type",
    "start": "784519",
    "end": "786320"
  },
  {
    "text": "looks like which is actually similar to",
    "start": "786320",
    "end": "788320"
  },
  {
    "text": "the player type I defined before again",
    "start": "788320",
    "end": "790800"
  },
  {
    "text": "that's rather reassuring with our slice",
    "start": "790800",
    "end": "793000"
  },
  {
    "text": "of players in hand let's go ahead and",
    "start": "793000",
    "end": "794720"
  },
  {
    "text": "print them to the console using the",
    "start": "794720",
    "end": "796120"
  },
  {
    "text": "print players command I've defined",
    "start": "796120",
    "end": "798000"
  },
  {
    "text": "earlier if I go ahead and run this code",
    "start": "798000",
    "end": "800399"
  },
  {
    "text": "you can see that it Returns the same",
    "start": "800399",
    "end": "802040"
  },
  {
    "text": "result as it did before or whilst having",
    "start": "802040",
    "end": "804480"
  },
  {
    "text": "less lines of written code yet still",
    "start": "804480",
    "end": "806560"
  },
  {
    "text": "performing our own defined SQL query to",
    "start": "806560",
    "end": "809120"
  },
  {
    "text": "retrieve the data not only that but",
    "start": "809120",
    "end": "811399"
  },
  {
    "text": "because everything is now set up it's",
    "start": "811399",
    "end": "813360"
  },
  {
    "text": "also incredibly trivial to now make",
    "start": "813360",
    "end": "815120"
  },
  {
    "text": "changes to our SQL query for example if",
    "start": "815120",
    "end": "818600"
  },
  {
    "text": "I want to order these players by level I",
    "start": "818600",
    "end": "820880"
  },
  {
    "text": "can do so by making the following change",
    "start": "820880",
    "end": "822680"
  },
  {
    "text": "to the query inside of my queries file",
    "start": "822680",
    "end": "825279"
  },
  {
    "text": "then if I run the sequency generate",
    "start": "825279",
    "end": "827160"
  },
  {
    "text": "command to regenerate this code followed",
    "start": "827160",
    "end": "829560"
  },
  {
    "text": "by rerunning the application using the",
    "start": "829560",
    "end": "831639"
  },
  {
    "text": "gun command the games players are now",
    "start": "831639",
    "end": "834000"
  },
  {
    "text": "printed out ordered by their level",
    "start": "834000",
    "end": "836079"
  },
  {
    "text": "pretty great but to be fair this would",
    "start": "836079",
    "end": "838399"
  },
  {
    "text": "have also been simple to do using the",
    "start": "838399",
    "end": "840279"
  },
  {
    "text": "repository pattern I had before",
    "start": "840279",
    "end": "842720"
  },
  {
    "text": "therefore let's go ahead and turn this",
    "start": "842720",
    "end": "844120"
  },
  {
    "text": "up a notch by adding in a brand new",
    "start": "844120",
    "end": "846920"
  },
  {
    "text": "query to go along with this query I've",
    "start": "846920",
    "end": "849199"
  },
  {
    "start": "847000",
    "end": "972000"
  },
  {
    "text": "created a second table in the database",
    "start": "849199",
    "end": "851279"
  },
  {
    "text": "migrations called item this table is",
    "start": "851279",
    "end": "854160"
  },
  {
    "text": "used for storing any available items",
    "start": "854160",
    "end": "856160"
  },
  {
    "text": "that can be found in the game let's go",
    "start": "856160",
    "end": "858160"
  },
  {
    "text": "ahead and create a query to insert a row",
    "start": "858160",
    "end": "860399"
  },
  {
    "text": "into this table to do so let's begin by",
    "start": "860399",
    "end": "863000"
  },
  {
    "text": "defining the queries annotation by first",
    "start": "863000",
    "end": "865560"
  },
  {
    "text": "giving it the name of insert item as for",
    "start": "865560",
    "end": "868440"
  },
  {
    "text": "the queries command I'm going to set",
    "start": "868440",
    "end": "870240"
  },
  {
    "text": "this to be exec which means this query",
    "start": "870240",
    "end": "872680"
  },
  {
    "text": "won't return any rows next let's go",
    "start": "872680",
    "end": "875279"
  },
  {
    "text": "ahead and Define our actual query which",
    "start": "875279",
    "end": "877560"
  },
  {
    "text": "should insert a row into the item table",
    "start": "877560",
    "end": "880120"
  },
  {
    "text": "with the following three columns for the",
    "start": "880120",
    "end": "882320"
  },
  {
    "text": "ID value itself as I'm using a uu ID I'm",
    "start": "882320",
    "end": "885600"
  },
  {
    "text": "therefore going to generate it using the",
    "start": "885600",
    "end": "887440"
  },
  {
    "text": "uid generate V4 function which is found",
    "start": "887440",
    "end": "890600"
  },
  {
    "text": "inside of postgres when using the uid",
    "start": "890600",
    "end": "893120"
  },
  {
    "text": "ossb extension make sure to enable this",
    "start": "893120",
    "end": "896040"
  },
  {
    "text": "using the following SQL if you're",
    "start": "896040",
    "end": "897759"
  },
  {
    "text": "following along at home",
    "start": "897759",
    "end": "899600"
  },
  {
    "text": "then for the other two values I'm going",
    "start": "899600",
    "end": "901360"
  },
  {
    "text": "to Define that these will be passed in",
    "start": "901360",
    "end": "903399"
  },
  {
    "text": "as parameters using the following syntax",
    "start": "903399",
    "end": "906240"
  },
  {
    "text": "with that our insert item query should",
    "start": "906240",
    "end": "908120"
  },
  {
    "text": "be good to go let's go ahead and use the",
    "start": "908120",
    "end": "910160"
  },
  {
    "text": "SQL C command to generate the code",
    "start": "910160",
    "end": "912360"
  },
  {
    "text": "before we go about integrating it if we",
    "start": "912360",
    "end": "914480"
  },
  {
    "text": "quickly check the queries type from the",
    "start": "914480",
    "end": "916240"
  },
  {
    "text": "repository object you can see that we",
    "start": "916240",
    "end": "918160"
  },
  {
    "text": "now have a new method called insert item",
    "start": "918160",
    "end": "921480"
  },
  {
    "text": "this method takes a context. context as",
    "start": "921480",
    "end": "923639"
  },
  {
    "text": "its first parameter followed by the",
    "start": "923639",
    "end": "925639"
  },
  {
    "text": "insert item prams type of the repository",
    "start": "925639",
    "end": "928160"
  },
  {
    "text": "package which is a type that's been",
    "start": "928160",
    "end": "930120"
  },
  {
    "text": "generated by SQL C to encapsulate the",
    "start": "930120",
    "end": "932360"
  },
  {
    "text": "query's parameters if we quickly check",
    "start": "932360",
    "end": "935000"
  },
  {
    "text": "out this type using God do we can see",
    "start": "935000",
    "end": "937040"
  },
  {
    "text": "that it contains two properties the",
    "start": "937040",
    "end": "939120"
  },
  {
    "text": "first of which is a string representing",
    "start": "939120",
    "end": "941040"
  },
  {
    "text": "the name parameter and the second is an",
    "start": "941040",
    "end": "943560"
  },
  {
    "text": "INT 32 that represents the items value",
    "start": "943560",
    "end": "946560"
  },
  {
    "text": "both of these correlate to the two input",
    "start": "946560",
    "end": "948440"
  },
  {
    "text": "parameters defined by the insert query",
    "start": "948440",
    "end": "951000"
  },
  {
    "text": "sqy has passed this query and generated",
    "start": "951000",
    "end": "953880"
  },
  {
    "text": "a type based on these input parameters",
    "start": "953880",
    "end": "956639"
  },
  {
    "text": "very cool let's go ahead and quickly",
    "start": "956639",
    "end": "958399"
  },
  {
    "text": "finish this implementation here I'm",
    "start": "958399",
    "end": "960319"
  },
  {
    "text": "going to create a new item with the name",
    "start": "960319",
    "end": "962079"
  },
  {
    "text": "of Ruby and set the value to 300 now if",
    "start": "962079",
    "end": "965240"
  },
  {
    "text": "I go ahead and run this code followed by",
    "start": "965240",
    "end": "966800"
  },
  {
    "text": "checking the database we can see we've",
    "start": "966800",
    "end": "968560"
  },
  {
    "text": "now created a row inside of the item",
    "start": "968560",
    "end": "970519"
  },
  {
    "text": "table with our given values however",
    "start": "970519",
    "end": "972839"
  },
  {
    "start": "972000",
    "end": "1069000"
  },
  {
    "text": "there is a modification I want to make",
    "start": "972839",
    "end": "974759"
  },
  {
    "text": "to this query when it comes to inserting",
    "start": "974759",
    "end": "976880"
  },
  {
    "text": "rows inside of a database table",
    "start": "976880",
    "end": "979120"
  },
  {
    "text": "sometimes it's beneficial to return that",
    "start": "979120",
    "end": "980880"
  },
  {
    "text": "newly created row as a result by doing",
    "start": "980880",
    "end": "983519"
  },
  {
    "text": "so you're then able to access any",
    "start": "983519",
    "end": "985360"
  },
  {
    "text": "generated fields which in this case",
    "start": "985360",
    "end": "987480"
  },
  {
    "text": "would be the items ID let's go ahead and",
    "start": "987480",
    "end": "989880"
  },
  {
    "text": "make that change inside of our insert",
    "start": "989880",
    "end": "991600"
  },
  {
    "text": "item query to do so all we need to do is",
    "start": "991600",
    "end": "994360"
  },
  {
    "text": "add the returning Star Command to the",
    "start": "994360",
    "end": "996120"
  },
  {
    "text": "end of our insert query this will cause",
    "start": "996120",
    "end": "998480"
  },
  {
    "text": "all of The Columns of the newly inserted",
    "start": "998480",
    "end": "1000440"
  },
  {
    "text": "row to be returned because this query",
    "start": "1000440",
    "end": "1002680"
  },
  {
    "text": "now returns a result then we need to",
    "start": "1002680",
    "end": "1004560"
  },
  {
    "text": "change the command that is going to be",
    "start": "1004560",
    "end": "1006240"
  },
  {
    "text": "used inside of The annotation let's",
    "start": "1006240",
    "end": "1008279"
  },
  {
    "text": "change this from exec to one with our",
    "start": "1008279",
    "end": "1010959"
  },
  {
    "text": "changes now made we can go ahead and",
    "start": "1010959",
    "end": "1012720"
  },
  {
    "text": "generate this code using the sequency",
    "start": "1012720",
    "end": "1014920"
  },
  {
    "text": "generate command now if we take a look",
    "start": "1014920",
    "end": "1017160"
  },
  {
    "text": "at the insert item method that we use",
    "start": "1017160",
    "end": "1018920"
  },
  {
    "text": "used before we can see it has an",
    "start": "1018920",
    "end": "1020639"
  },
  {
    "text": "additional return value of repository.",
    "start": "1020639",
    "end": "1022920"
  },
  {
    "text": "item type in addition to the error type",
    "start": "1022920",
    "end": "1024918"
  },
  {
    "text": "it had before this repository. item type",
    "start": "1024919",
    "end": "1027480"
  },
  {
    "text": "has also been generated by SQL C if I",
    "start": "1027480",
    "end": "1030038"
  },
  {
    "text": "quickly make some modifications to the",
    "start": "1030039",
    "end": "1031640"
  },
  {
    "text": "insert parameters this time creating a",
    "start": "1031640",
    "end": "1033760"
  },
  {
    "text": "new item called diamond with a much",
    "start": "1033760",
    "end": "1035880"
  },
  {
    "text": "higher value we're now able to capture",
    "start": "1035880",
    "end": "1037798"
  },
  {
    "text": "the query return value and print out the",
    "start": "1037799",
    "end": "1039959"
  },
  {
    "text": "new items ID however when I go and run",
    "start": "1039959",
    "end": "1042640"
  },
  {
    "text": "this code you'll see that the item's ID",
    "start": "1042640",
    "end": "1044600"
  },
  {
    "text": "value is printed out a little strange",
    "start": "1044600",
    "end": "1047480"
  },
  {
    "text": "this is because by default sqlc will map",
    "start": "1047480",
    "end": "1050200"
  },
  {
    "text": "the uid in the database to the struct of",
    "start": "1050200",
    "end": "1052600"
  },
  {
    "text": "PG type. uid which in my opinion doesn't",
    "start": "1052600",
    "end": "1056280"
  },
  {
    "text": "have the greatest interface instead it",
    "start": "1056280",
    "end": "1058880"
  },
  {
    "text": "would be much more preferable if we",
    "start": "1058880",
    "end": "1060440"
  },
  {
    "text": "could use the Fantastic uuid package",
    "start": "1060440",
    "end": "1063240"
  },
  {
    "text": "provided by Google which is honestly the",
    "start": "1063240",
    "end": "1065600"
  },
  {
    "text": "deao standard when it comes to working",
    "start": "1065600",
    "end": "1067799"
  },
  {
    "text": "with uuids fortunately sqlc provides a",
    "start": "1067799",
    "end": "1071160"
  },
  {
    "start": "1069000",
    "end": "1204000"
  },
  {
    "text": "way to achieve this using its fantastic",
    "start": "1071160",
    "end": "1073640"
  },
  {
    "text": "overrides feature this feature allows",
    "start": "1073640",
    "end": "1075799"
  },
  {
    "text": "you to override the types that sqlc uses",
    "start": "1075799",
    "end": "1078559"
  },
  {
    "text": "when mapping from the database schema",
    "start": "1078559",
    "end": "1080760"
  },
  {
    "text": "let's go ahead and set this up first by",
    "start": "1080760",
    "end": "1082760"
  },
  {
    "text": "using the following goget command to add",
    "start": "1082760",
    "end": "1085000"
  },
  {
    "text": "the package to our project then we can",
    "start": "1085000",
    "end": "1087640"
  },
  {
    "text": "Define the overrides we want inside of",
    "start": "1087640",
    "end": "1089440"
  },
  {
    "text": "our sqlc configuration by adding a list",
    "start": "1089440",
    "end": "1092039"
  },
  {
    "text": "of entries to the overrides key let's go",
    "start": "1092039",
    "end": "1094919"
  },
  {
    "text": "ahead and add an entry to override the",
    "start": "1094919",
    "end": "1096840"
  },
  {
    "text": "DB type of uuid this is done by adding",
    "start": "1096840",
    "end": "1100120"
  },
  {
    "text": "in the following line specifying the DB",
    "start": "1100120",
    "end": "1102559"
  },
  {
    "text": "type we're overriding next we need to",
    "start": "1102559",
    "end": "1105000"
  },
  {
    "text": "Define which type we want to overwrite",
    "start": "1105000",
    "end": "1106799"
  },
  {
    "text": "it with this is done by adding in the",
    "start": "1106799",
    "end": "1109080"
  },
  {
    "text": "following lines first def finding the",
    "start": "1109080",
    "end": "1111000"
  },
  {
    "text": "package where the type lives using the",
    "start": "1111000",
    "end": "1112840"
  },
  {
    "text": "import key in my case I'm sending this",
    "start": "1112840",
    "end": "1114880"
  },
  {
    "text": "to the Google uuid package next we then",
    "start": "1114880",
    "end": "1117919"
  },
  {
    "text": "need to define the name of the type we",
    "start": "1117919",
    "end": "1119559"
  },
  {
    "text": "want to overwrite with in this case uu",
    "start": "1119559",
    "end": "1122240"
  },
  {
    "text": "ID now let's go and see if our items ID",
    "start": "1122240",
    "end": "1125000"
  },
  {
    "text": "prints out in a uuid format first of all",
    "start": "1125000",
    "end": "1128080"
  },
  {
    "text": "I'm going to delete the existing Diamond",
    "start": "1128080",
    "end": "1130360"
  },
  {
    "text": "item from the database then use the",
    "start": "1130360",
    "end": "1132600"
  },
  {
    "text": "sequency command to generate the new",
    "start": "1132600",
    "end": "1134679"
  },
  {
    "text": "code before running the application",
    "start": "1134679",
    "end": "1136600"
  },
  {
    "text": "using G run which now prints the new",
    "start": "1136600",
    "end": "1139159"
  },
  {
    "text": "items uuid in a much more readable",
    "start": "1139159",
    "end": "1141960"
  },
  {
    "text": "format if we go ahead and take a look at",
    "start": "1141960",
    "end": "1143919"
  },
  {
    "text": "the item type using godoc we can see",
    "start": "1143919",
    "end": "1146200"
  },
  {
    "text": "it's now using the overridden U type",
    "start": "1146200",
    "end": "1149280"
  },
  {
    "text": "making the item struct a lot more",
    "start": "1149280",
    "end": "1151000"
  },
  {
    "text": "friendly to work with another great",
    "start": "1151000",
    "end": "1153159"
  },
  {
    "text": "feature of overrides is that they also",
    "start": "1153159",
    "end": "1155039"
  },
  {
    "text": "apply to any generated query parameters",
    "start": "1155039",
    "end": "1157799"
  },
  {
    "text": "for example if we add a new query to",
    "start": "1157799",
    "end": "1159799"
  },
  {
    "text": "find an item by its ID and generate this",
    "start": "1159799",
    "end": "1162640"
  },
  {
    "text": "code we can see that the generated",
    "start": "1162640",
    "end": "1164480"
  },
  {
    "text": "function expects a uuid type if we",
    "start": "1164480",
    "end": "1167120"
  },
  {
    "text": "didn't have this override in place it",
    "start": "1167120",
    "end": "1168559"
  },
  {
    "text": "would would instead expect the PG Type U",
    "start": "1168559",
    "end": "1171120"
  },
  {
    "text": "ID which is a much harder type to",
    "start": "1171120",
    "end": "1173480"
  },
  {
    "text": "construct when it comes to overrides and",
    "start": "1173480",
    "end": "1175640"
  },
  {
    "text": "SQL C these can be used for more than",
    "start": "1175640",
    "end": "1177919"
  },
  {
    "text": "just uyu IDs for example I also like to",
    "start": "1177919",
    "end": "1180760"
  },
  {
    "text": "use them when it comes to the timestamp",
    "start": "1180760",
    "end": "1182559"
  },
  {
    "text": "types such as timestamp TZ in this case",
    "start": "1182559",
    "end": "1185559"
  },
  {
    "text": "I like to override these to use the time",
    "start": "1185559",
    "end": "1187520"
  },
  {
    "text": "type of the time package found in the",
    "start": "1187520",
    "end": "1189240"
  },
  {
    "text": "standard Library this is done by adding",
    "start": "1189240",
    "end": "1191440"
  },
  {
    "text": "in the following lines into the sqlc",
    "start": "1191440",
    "end": "1193799"
  },
  {
    "text": "yamamo by setting this it will replace",
    "start": "1193799",
    "end": "1195960"
  },
  {
    "text": "the PG type time TZ type in the player",
    "start": "1195960",
    "end": "1198320"
  },
  {
    "text": "structure with our desired time.time",
    "start": "1198320",
    "end": "1200480"
  },
  {
    "text": "type instead which is much more usable",
    "start": "1200480",
    "end": "1203240"
  },
  {
    "text": "in my opinion in addition to using",
    "start": "1203240",
    "end": "1205240"
  },
  {
    "start": "1204000",
    "end": "1231000"
  },
  {
    "text": "overrides to configure the generated",
    "start": "1205240",
    "end": "1206960"
  },
  {
    "text": "types sqy allows for a number of other",
    "start": "1206960",
    "end": "1209520"
  },
  {
    "text": "configurations you can make to the",
    "start": "1209520",
    "end": "1211120"
  },
  {
    "text": "generated code one of these that I use",
    "start": "1211120",
    "end": "1213679"
  },
  {
    "text": "frequently is the emit Json tags option",
    "start": "1213679",
    "end": "1216760"
  },
  {
    "text": "by enabling this option sqlc will then",
    "start": "1216760",
    "end": "1219000"
  },
  {
    "text": "add Json struct tags to the generated",
    "start": "1219000",
    "end": "1221520"
  },
  {
    "text": "types which means you can then encode",
    "start": "1221520",
    "end": "1223480"
  },
  {
    "text": "this generator type into Json with",
    "start": "1223480",
    "end": "1225520"
  },
  {
    "text": "correctly formatted fields in snake case",
    "start": "1225520",
    "end": "1228240"
  },
  {
    "text": "rather than the camel case that go would",
    "start": "1228240",
    "end": "1230000"
  },
  {
    "text": "default to additionally another great",
    "start": "1230000",
    "end": "1232200"
  },
  {
    "start": "1231000",
    "end": "1325000"
  },
  {
    "text": "customization is the ability to embed",
    "start": "1232200",
    "end": "1234039"
  },
  {
    "text": "strs into your data types to show this",
    "start": "1234039",
    "end": "1236640"
  },
  {
    "text": "in action here I have another table",
    "start": "1236640",
    "end": "1238640"
  },
  {
    "text": "called inventory which stores a list of",
    "start": "1238640",
    "end": "1241039"
  },
  {
    "text": "player item mappings to pull out these",
    "start": "1241039",
    "end": "1243720"
  },
  {
    "text": "mappings I can use the following query",
    "start": "1243720",
    "end": "1246280"
  },
  {
    "text": "which will pull out every player and",
    "start": "1246280",
    "end": "1247960"
  },
  {
    "text": "item column in the table using a left",
    "start": "1247960",
    "end": "1250400"
  },
  {
    "text": "join in the real world you probably",
    "start": "1250400",
    "end": "1252760"
  },
  {
    "text": "wouldn't use a query like this but this",
    "start": "1252760",
    "end": "1255240"
  },
  {
    "text": "is YouTube so let's just roll with it",
    "start": "1255240",
    "end": "1257520"
  },
  {
    "text": "anyway if I go ahead and generate the",
    "start": "1257520",
    "end": "1259480"
  },
  {
    "text": "code for this query you can see it comes",
    "start": "1259480",
    "end": "1261280"
  },
  {
    "text": "out a little strange this is because",
    "start": "1261280",
    "end": "1263799"
  },
  {
    "text": "both the item and player types share",
    "start": "1263799",
    "end": "1265760"
  },
  {
    "text": "some commonly named Fields sqy",
    "start": "1265760",
    "end": "1268520"
  },
  {
    "text": "deconflict these by using a kind of odd",
    "start": "1268520",
    "end": "1270679"
  },
  {
    "text": "approach by specifying a different",
    "start": "1270679",
    "end": "1272720"
  },
  {
    "text": "number value after each conflicting name",
    "start": "1272720",
    "end": "1275320"
  },
  {
    "text": "not only this but when it comes to using",
    "start": "1275320",
    "end": "1277279"
  },
  {
    "text": "the results of this query because it",
    "start": "1277279",
    "end": "1279159"
  },
  {
    "text": "comes back in a flat instruct you end up",
    "start": "1279159",
    "end": "1281320"
  },
  {
    "text": "needing to write boiler plate in order",
    "start": "1281320",
    "end": "1282919"
  },
  {
    "text": "to convert it into the concrete type",
    "start": "1282919",
    "end": "1285400"
  },
  {
    "text": "which is exactly what we're trying to",
    "start": "1285400",
    "end": "1287120"
  },
  {
    "text": "avoid by using SQL C in the first place",
    "start": "1287120",
    "end": "1290000"
  },
  {
    "text": "fortunately sqlc solves this through the",
    "start": "1290000",
    "end": "1292159"
  },
  {
    "text": "use of its embedded strug feature which",
    "start": "1292159",
    "end": "1294440"
  },
  {
    "text": "configures sqlc to reuse existing",
    "start": "1294440",
    "end": "1296840"
  },
  {
    "text": "generat types inside of this query's",
    "start": "1296840",
    "end": "1299159"
  },
  {
    "text": "result this is achieved by using the",
    "start": "1299159",
    "end": "1301360"
  },
  {
    "text": "sqlc embed macro inside of the SQL query",
    "start": "1301360",
    "end": "1304799"
  },
  {
    "text": "using the following syntax here we're",
    "start": "1304799",
    "end": "1307039"
  },
  {
    "text": "using it to embed the already existing",
    "start": "1307039",
    "end": "1309159"
  },
  {
    "text": "types that have been generated for both",
    "start": "1309159",
    "end": "1311000"
  },
  {
    "text": "the player and item table now when I",
    "start": "1311000",
    "end": "1313520"
  },
  {
    "text": "generate this code you can see it embeds",
    "start": "1313520",
    "end": "1315559"
  },
  {
    "text": "the existing types of player and item",
    "start": "1315559",
    "end": "1318039"
  },
  {
    "text": "rather than generating a flattened",
    "start": "1318039",
    "end": "1320000"
  },
  {
    "text": "struct which in my opinion makes it a",
    "start": "1320000",
    "end": "1322400"
  },
  {
    "text": "lot easier to work with the results of",
    "start": "1322400",
    "end": "1324279"
  },
  {
    "text": "this query as you can see sqy comes with",
    "start": "1324279",
    "end": "1327080"
  },
  {
    "start": "1325000",
    "end": "1356000"
  },
  {
    "text": "a lot of features but in order for it to",
    "start": "1327080",
    "end": "1329760"
  },
  {
    "text": "work in a production setting then",
    "start": "1329760",
    "end": "1331679"
  },
  {
    "text": "there's a couple of others that we're",
    "start": "1331679",
    "end": "1333200"
  },
  {
    "text": "going to need the first of these is",
    "start": "1333200",
    "end": "1335880"
  },
  {
    "text": "prepared statements fortunately when it",
    "start": "1335880",
    "end": "1338000"
  },
  {
    "text": "comes to SQL C this is again rather",
    "start": "1338000",
    "end": "1340600"
  },
  {
    "text": "simple if you're using go with version",
    "start": "1340600",
    "end": "1342960"
  },
  {
    "text": "five of the PGX driver then prepared",
    "start": "1342960",
    "end": "1345360"
  },
  {
    "text": "statements are handled automatically",
    "start": "1345360",
    "end": "1347240"
  },
  {
    "text": "without the need for any additional",
    "start": "1347240",
    "end": "1348720"
  },
  {
    "text": "configuration when it comes to other",
    "start": "1348720",
    "end": "1350400"
  },
  {
    "text": "database drivers however then you'll",
    "start": "1350400",
    "end": "1352279"
  },
  {
    "text": "need to set the emit prepared queries",
    "start": "1352279",
    "end": "1354080"
  },
  {
    "text": "option to True inside of your sqlc",
    "start": "1354080",
    "end": "1356320"
  },
  {
    "start": "1356000",
    "end": "1585000"
  },
  {
    "text": "config as well as handling prepared",
    "start": "1356320",
    "end": "1358279"
  },
  {
    "text": "statements automatically SQL C also",
    "start": "1358279",
    "end": "1360960"
  },
  {
    "text": "makes it really easy to use database",
    "start": "1360960",
    "end": "1362880"
  },
  {
    "text": "transactions as well sqlc handles these",
    "start": "1362880",
    "end": "1366000"
  },
  {
    "text": "without the need to do any additional",
    "start": "1366000",
    "end": "1367679"
  },
  {
    "text": "configuration all through the use of",
    "start": "1367679",
    "end": "1370039"
  },
  {
    "text": "interfaces let's see how this works by",
    "start": "1370039",
    "end": "1372120"
  },
  {
    "text": "implementing the following function for",
    "start": "1372120",
    "end": "1373880"
  },
  {
    "text": "when a player sells an item the goal of",
    "start": "1373880",
    "end": "1376440"
  },
  {
    "text": "this function is to remove the item from",
    "start": "1376440",
    "end": "1378640"
  },
  {
    "text": "the player's inventory before adding the",
    "start": "1378640",
    "end": "1380559"
  },
  {
    "text": "items value to the player's gold which",
    "start": "1380559",
    "end": "1383200"
  },
  {
    "text": "is a column I've just added using the",
    "start": "1383200",
    "end": "1385440"
  },
  {
    "text": "following SQL migration in order for the",
    "start": "1385440",
    "end": "1387919"
  },
  {
    "text": "cell item workflow to take place I've",
    "start": "1387919",
    "end": "1390159"
  },
  {
    "text": "defined the following three queries the",
    "start": "1390159",
    "end": "1392720"
  },
  {
    "text": "first query is used to pull out the item",
    "start": "1392720",
    "end": "1394720"
  },
  {
    "text": "from the player's inventory provided",
    "start": "1394720",
    "end": "1396919"
  },
  {
    "text": "that it exists whilst this query does",
    "start": "1396919",
    "end": "1399279"
  },
  {
    "text": "work I could have used the existing find",
    "start": "1399279",
    "end": "1401799"
  },
  {
    "text": "item by ID query instead as it",
    "start": "1401799",
    "end": "1404520"
  },
  {
    "text": "effectively does the same thing as they",
    "start": "1404520",
    "end": "1406880"
  },
  {
    "text": "say however hindsight is 2020 the second",
    "start": "1406880",
    "end": "1410080"
  },
  {
    "text": "query we've defined is to delete an item",
    "start": "1410080",
    "end": "1412480"
  },
  {
    "text": "from a player's inventory given a player",
    "start": "1412480",
    "end": "1415000"
  },
  {
    "text": "and item id rather than the command for",
    "start": "1415000",
    "end": "1417840"
  },
  {
    "text": "this query being exec I've actually",
    "start": "1417840",
    "end": "1420000"
  },
  {
    "text": "defined this as exec rows in order for",
    "start": "1420000",
    "end": "1422480"
  },
  {
    "text": "the query to return the number of rows",
    "start": "1422480",
    "end": "1424159"
  },
  {
    "text": "that were affected this allows us to",
    "start": "1424159",
    "end": "1426279"
  },
  {
    "text": "easily check whether or not the item",
    "start": "1426279",
    "end": "1428039"
  },
  {
    "text": "existed in the player's inventory the",
    "start": "1428039",
    "end": "1430520"
  },
  {
    "text": "third and final query is used to modify",
    "start": "1430520",
    "end": "1432840"
  },
  {
    "text": "the player's gold value by a certain",
    "start": "1432840",
    "end": "1435080"
  },
  {
    "text": "amount for this query we're passing in",
    "start": "1435080",
    "end": "1437360"
  },
  {
    "text": "two parameters the amount we want the",
    "start": "1437360",
    "end": "1439400"
  },
  {
    "text": "gold to increase by and the ID of the",
    "start": "1439400",
    "end": "1441960"
  },
  {
    "text": "player whose record should be affected",
    "start": "1441960",
    "end": "1444080"
  },
  {
    "text": "if this query fails for any reason then",
    "start": "1444080",
    "end": "1446440"
  },
  {
    "text": "we'll want to roll back the associated",
    "start": "1446440",
    "end": "1448520"
  },
  {
    "text": "transaction reverting the deletion of",
    "start": "1448520",
    "end": "1450720"
  },
  {
    "text": "the player's item from their inventory",
    "start": "1450720",
    "end": "1453120"
  },
  {
    "text": "if we take a look at this query in more",
    "start": "1453120",
    "end": "1454840"
  },
  {
    "text": "detail you can see that I'm using two",
    "start": "1454840",
    "end": "1456720"
  },
  {
    "text": "additional sqlc macros on the following",
    "start": "1456720",
    "end": "1458919"
  },
  {
    "text": "two lines this is the SQL c.org macro",
    "start": "1458919",
    "end": "1462760"
  },
  {
    "text": "which allows you to name a parameter",
    "start": "1462760",
    "end": "1464320"
  },
  {
    "text": "inside of your SQL query which will be",
    "start": "1464320",
    "end": "1466159"
  },
  {
    "text": "reflected in the generated code in this",
    "start": "1466159",
    "end": "1468799"
  },
  {
    "text": "case I'm setting the names to amount and",
    "start": "1468799",
    "end": "1471279"
  },
  {
    "text": "player ID as well as setting their types",
    "start": "1471279",
    "end": "1473640"
  },
  {
    "text": "to int and big int respectively if I",
    "start": "1473640",
    "end": "1476840"
  },
  {
    "text": "wasn't explicitly defining the names of",
    "start": "1476840",
    "end": "1478600"
  },
  {
    "text": "these arguments instead using the same",
    "start": "1478600",
    "end": "1480799"
  },
  {
    "text": "syntax as the previous queries then the",
    "start": "1480799",
    "end": "1483279"
  },
  {
    "text": "names in the generated code for these",
    "start": "1483279",
    "end": "1485080"
  },
  {
    "text": "two input parameters would instead be",
    "start": "1485080",
    "end": "1486960"
  },
  {
    "text": "set to gold and ID whilst either",
    "start": "1486960",
    "end": "1489679"
  },
  {
    "text": "approach is acceptable personally I",
    "start": "1489679",
    "end": "1491640"
  },
  {
    "text": "think this is still a really cool",
    "start": "1491640",
    "end": "1493279"
  },
  {
    "text": "feature and in my opinion setting these",
    "start": "1493279",
    "end": "1495520"
  },
  {
    "text": "names for the input parameters makes the",
    "start": "1495520",
    "end": "1497440"
  },
  {
    "text": "code a little more more understandable",
    "start": "1497440",
    "end": "1499600"
  },
  {
    "text": "either way with our queries now defined",
    "start": "1499600",
    "end": "1501640"
  },
  {
    "text": "let's take a look at how we can use them",
    "start": "1501640",
    "end": "1503240"
  },
  {
    "text": "inside of a transaction to do so is",
    "start": "1503240",
    "end": "1505559"
  },
  {
    "text": "similar to how we were constructing the",
    "start": "1505559",
    "end": "1507159"
  },
  {
    "text": "repository before using the new function",
    "start": "1507159",
    "end": "1510080"
  },
  {
    "text": "however rather than passing in the",
    "start": "1510080",
    "end": "1511440"
  },
  {
    "text": "database connection instead we create a",
    "start": "1511440",
    "end": "1513840"
  },
  {
    "text": "new transaction from it using the begin",
    "start": "1513840",
    "end": "1516360"
  },
  {
    "text": "method then we can pass in this",
    "start": "1516360",
    "end": "1518279"
  },
  {
    "text": "transaction into the repository",
    "start": "1518279",
    "end": "1520000"
  },
  {
    "text": "Constructor as it conforms to the same",
    "start": "1520000",
    "end": "1522399"
  },
  {
    "text": "interface that it's expecting now any",
    "start": "1522399",
    "end": "1524640"
  },
  {
    "text": "queries that we perform using this",
    "start": "1524640",
    "end": "1526320"
  },
  {
    "text": "instance of the repository type will",
    "start": "1526320",
    "end": "1528320"
  },
  {
    "text": "will be performed on the database",
    "start": "1528320",
    "end": "1530000"
  },
  {
    "text": "transaction we passed in let's go ahead",
    "start": "1530000",
    "end": "1532279"
  },
  {
    "text": "and implement the rest of this function",
    "start": "1532279",
    "end": "1534320"
  },
  {
    "text": "to begin let's start by adding in a",
    "start": "1534320",
    "end": "1536120"
  },
  {
    "text": "deferred roll back for this transaction",
    "start": "1536120",
    "end": "1538440"
  },
  {
    "text": "in case something goes wrong next I'm",
    "start": "1538440",
    "end": "1540880"
  },
  {
    "text": "going to quickly speedrun through the",
    "start": "1540880",
    "end": "1542320"
  },
  {
    "text": "actual implementation but one thing to",
    "start": "1542320",
    "end": "1544600"
  },
  {
    "text": "take note of is I return early if ever",
    "start": "1544600",
    "end": "1546799"
  },
  {
    "text": "we encounter an error which will cause",
    "start": "1546799",
    "end": "1548640"
  },
  {
    "text": "the transaction to roll back then after",
    "start": "1548640",
    "end": "1551000"
  },
  {
    "text": "each of these three queries have been",
    "start": "1551000",
    "end": "1552360"
  },
  {
    "text": "performs I'm calling the commit method",
    "start": "1552360",
    "end": "1554440"
  },
  {
    "text": "of the transaction if you want to study",
    "start": "1554440",
    "end": "1556679"
  },
  {
    "text": "this function in more detail you can",
    "start": "1556679",
    "end": "1558320"
  },
  {
    "text": "find a link to the code in the",
    "start": "1558320",
    "end": "1559640"
  },
  {
    "text": "description down below now if we head",
    "start": "1559640",
    "end": "1561880"
  },
  {
    "text": "back to our main function we can then",
    "start": "1561880",
    "end": "1563480"
  },
  {
    "text": "call this new cell iton function passing",
    "start": "1563480",
    "end": "1565760"
  },
  {
    "text": "in the database connection the player ID",
    "start": "1565760",
    "end": "1568399"
  },
  {
    "text": "and the item we wish to sell now if I go",
    "start": "1568399",
    "end": "1570960"
  },
  {
    "text": "ahead and run this code we receive back",
    "start": "1570960",
    "end": "1572799"
  },
  {
    "text": "the console output letting us know that",
    "start": "1572799",
    "end": "1574600"
  },
  {
    "text": "the operation completed if I quickly",
    "start": "1574600",
    "end": "1576760"
  },
  {
    "text": "check the database we can see that the",
    "start": "1576760",
    "end": "1578320"
  },
  {
    "text": "inventory item no longer exists for the",
    "start": "1578320",
    "end": "1580600"
  },
  {
    "text": "player and the gold amount in the",
    "start": "1580600",
    "end": "1582399"
  },
  {
    "text": "players row has increased by the items",
    "start": "1582399",
    "end": "1584679"
  },
  {
    "text": "value the last thing I want to show is",
    "start": "1584679",
    "end": "1586840"
  },
  {
    "start": "1585000",
    "end": "1691000"
  },
  {
    "text": "how to organize your project once you",
    "start": "1586840",
    "end": "1588760"
  },
  {
    "text": "start to have a lot of queries if we",
    "start": "1588760",
    "end": "1591240"
  },
  {
    "text": "take a quick look at our query file you",
    "start": "1591240",
    "end": "1593200"
  },
  {
    "text": "can see it's starting to get a little",
    "start": "1593200",
    "end": "1595159"
  },
  {
    "text": "messy whilst some people are fine to",
    "start": "1595159",
    "end": "1597360"
  },
  {
    "text": "work inside of a single file this way I",
    "start": "1597360",
    "end": "1599760"
  },
  {
    "text": "personally prefer to organize my code",
    "start": "1599760",
    "end": "1601520"
  },
  {
    "text": "using multiple files instead fortunately",
    "start": "1601520",
    "end": "1604279"
  },
  {
    "text": "sqy allows us to do this by setting the",
    "start": "1604279",
    "end": "1606440"
  },
  {
    "text": "queries value in the sqen C.O to a",
    "start": "1606440",
    "end": "1609000"
  },
  {
    "text": "directory rather than a single file in",
    "start": "1609000",
    "end": "1611679"
  },
  {
    "text": "my case I'm setting this to be the query",
    "start": "1611679",
    "end": "1613640"
  },
  {
    "text": "directory which has a number of",
    "start": "1613640",
    "end": "1615279"
  },
  {
    "text": "different files inside personally I tend",
    "start": "1615279",
    "end": "1617640"
  },
  {
    "text": "to group my queries together based on",
    "start": "1617640",
    "end": "1619360"
  },
  {
    "text": "their Associated type which means I have",
    "start": "1619360",
    "end": "1621559"
  },
  {
    "text": "a file for my player queries a file for",
    "start": "1621559",
    "end": "1624000"
  },
  {
    "text": "my item queries and a file for my",
    "start": "1624000",
    "end": "1626360"
  },
  {
    "text": "inventory queries if I go ahead and",
    "start": "1626360",
    "end": "1628399"
  },
  {
    "text": "generate this code all of the queries",
    "start": "1628399",
    "end": "1630000"
  },
  {
    "text": "will still live inside of the same",
    "start": "1630000",
    "end": "1631520"
  },
  {
    "text": "repository package instead however we",
    "start": "1631520",
    "end": "1633840"
  },
  {
    "text": "now have multiple files inside one for",
    "start": "1633840",
    "end": "1636399"
  },
  {
    "text": "each respective SQL file found inside of",
    "start": "1636399",
    "end": "1638559"
  },
  {
    "text": "the query directory that wraps up how",
    "start": "1638559",
    "end": "1641000"
  },
  {
    "text": "I've been using SQL C when it comes to",
    "start": "1641000",
    "end": "1642919"
  },
  {
    "text": "my own projects personally I absolutely",
    "start": "1642919",
    "end": "1646200"
  },
  {
    "text": "love this tool given how much time it",
    "start": "1646200",
    "end": "1648559"
  },
  {
    "text": "saved me was still allowing me to write",
    "start": "1648559",
    "end": "1650600"
  },
  {
    "text": "raw SQL queries when it comes to working",
    "start": "1650600",
    "end": "1653399"
  },
  {
    "text": "with databases in my application code",
    "start": "1653399",
    "end": "1656360"
  },
  {
    "text": "because of this SQL C has now become a",
    "start": "1656360",
    "end": "1658440"
  },
  {
    "text": "permanent fixture in my go development",
    "start": "1658440",
    "end": "1660399"
  },
  {
    "text": "stack if you're interested in what that",
    "start": "1660399",
    "end": "1662320"
  },
  {
    "text": "full stack looks like then let me know",
    "start": "1662320",
    "end": "1663960"
  },
  {
    "text": "in the comments down below and I'll do a",
    "start": "1663960",
    "end": "1665720"
  },
  {
    "text": "dedicated video on it otherwise I want",
    "start": "1665720",
    "end": "1668240"
  },
  {
    "text": "to give a big thank you to boot dodev",
    "start": "1668240",
    "end": "1669840"
  },
  {
    "text": "for sponsoring this video If you're",
    "start": "1669840",
    "end": "1671720"
  },
  {
    "text": "looking to learn backend web development",
    "start": "1671720",
    "end": "1673480"
  },
  {
    "text": "in either python or go then I really",
    "start": "1673480",
    "end": "1675240"
  },
  {
    "text": "recommend giving the platform a look if",
    "start": "1675240",
    "end": "1677480"
  },
  {
    "text": "you do then make sure to use my coupon",
    "start": "1677480",
    "end": "1679279"
  },
  {
    "text": "code dreams of code to get 25% off your",
    "start": "1679279",
    "end": "1682240"
  },
  {
    "text": "first payment otherwise a big thank you",
    "start": "1682240",
    "end": "1684720"
  },
  {
    "text": "for watching and I'll see you on the",
    "start": "1684720",
    "end": "1686440"
  },
  {
    "text": "next one",
    "start": "1686440",
    "end": "1689639"
  }
]