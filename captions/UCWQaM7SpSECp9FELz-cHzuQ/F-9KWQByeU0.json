[
  {
    "text": "recently I've been working on a brand",
    "start": "199",
    "end": "2240"
  },
  {
    "text": "new micro SAS and I've been having a lot",
    "start": "2240",
    "end": "4920"
  },
  {
    "text": "of fun doing so one thing that I've",
    "start": "4920",
    "end": "6960"
  },
  {
    "text": "really appreciated is how easy it is to",
    "start": "6960",
    "end": "9000"
  },
  {
    "text": "now deploy our applications to the cloud",
    "start": "9000",
    "end": "11679"
  },
  {
    "text": "with a huge number of platforms as a",
    "start": "11679",
    "end": "13320"
  },
  {
    "text": "service making it easy to do so whilst",
    "start": "13320",
    "end": "15839"
  },
  {
    "text": "these platforms can be pretty great",
    "start": "15839",
    "end": "17720"
  },
  {
    "text": "they're not always perfect because of",
    "start": "17720",
    "end": "19920"
  },
  {
    "text": "the underlying business model they're",
    "start": "19920",
    "end": "21560"
  },
  {
    "text": "not well suited for long running tasks",
    "start": "21560",
    "end": "24000"
  },
  {
    "text": "or transferring a lot of data and doing",
    "start": "24000",
    "end": "26439"
  },
  {
    "text": "so can sometimes result in an",
    "start": "26439",
    "end": "28080"
  },
  {
    "text": "unexpectedly High bill this contrasts to",
    "start": "28080",
    "end": "31039"
  },
  {
    "text": "using something such as a VPS which",
    "start": "31039",
    "end": "33200"
  },
  {
    "text": "stands for a virtual private server",
    "start": "33200",
    "end": "35600"
  },
  {
    "text": "these often provide much more consistent",
    "start": "35600",
    "end": "37680"
  },
  {
    "text": "billing whilst also mitigating some of",
    "start": "37680",
    "end": "39760"
  },
  {
    "text": "the caveats that comes from using a",
    "start": "39760",
    "end": "41520"
  },
  {
    "text": "serverless platform despite these",
    "start": "41520",
    "end": "43480"
  },
  {
    "text": "benefits however I've always been rather",
    "start": "43480",
    "end": "45480"
  },
  {
    "text": "hesitant to use a raw VPS when it comes",
    "start": "45480",
    "end": "47840"
  },
  {
    "text": "to deploying my Production Services this",
    "start": "47840",
    "end": "50320"
  },
  {
    "text": "hesitancy is due to the perceived",
    "start": "50320",
    "end": "52719"
  },
  {
    "text": "difficulty of setting up a VPS to be",
    "start": "52719",
    "end": "54719"
  },
  {
    "text": "production ready but is that actually",
    "start": "54719",
    "end": "56879"
  },
  {
    "text": "the case well in order to find out I",
    "start": "56879",
    "end": "59280"
  },
  {
    "text": "decided to give myself a challenge a",
    "start": "59280",
    "end": "61640"
  },
  {
    "text": "challenge to see how difficult it would",
    "start": "61640",
    "end": "63320"
  },
  {
    "text": "be to set up a production ready VPS from",
    "start": "63320",
    "end": "65680"
  },
  {
    "text": "scratch as it turns out it's actually a",
    "start": "65680",
    "end": "68720"
  },
  {
    "text": "lot easier than I thought to go along",
    "start": "68720",
    "end": "71320"
  },
  {
    "text": "with this challenge I've built a simple",
    "start": "71320",
    "end": "73320"
  },
  {
    "text": "guestbook web app with the goal of",
    "start": "73320",
    "end": "75040"
  },
  {
    "text": "having it deployed on a VPS before I",
    "start": "75040",
    "end": "77600"
  },
  {
    "text": "went about deploying this however I",
    "start": "77600",
    "end": "79280"
  },
  {
    "text": "decided to write out a list of",
    "start": "79280",
    "end": "80600"
  },
  {
    "text": "requirements in order to Define what",
    "start": "80600",
    "end": "82320"
  },
  {
    "text": "production ready meant to kickoff these",
    "start": "82320",
    "end": "84880"
  },
  {
    "text": "requirements I first wanted to make sure",
    "start": "84880",
    "end": "86840"
  },
  {
    "text": "I had a DNS record pointing to the",
    "start": "86840",
    "end": "88880"
  },
  {
    "text": "server followed by by making sure that I",
    "start": "88880",
    "end": "90840"
  },
  {
    "text": "had the application up and running",
    "start": "90840",
    "end": "92880"
  },
  {
    "text": "afterwards was adding good security",
    "start": "92880",
    "end": "94560"
  },
  {
    "text": "practices to the Box such as making sure",
    "start": "94560",
    "end": "96840"
  },
  {
    "text": "that all hdtp communication took place",
    "start": "96840",
    "end": "98920"
  },
  {
    "text": "over TLS and that the Box itself would",
    "start": "98920",
    "end": "101479"
  },
  {
    "text": "automatically provision and renew its",
    "start": "101479",
    "end": "103560"
  },
  {
    "text": "certificates as well as TLS there would",
    "start": "103560",
    "end": "106079"
  },
  {
    "text": "also need to be additional security",
    "start": "106079",
    "end": "107960"
  },
  {
    "text": "measures in place such as hardening op",
    "start": "107960",
    "end": "110520"
  },
  {
    "text": "SSH to prevent unauthorized access",
    "start": "110520",
    "end": "113159"
  },
  {
    "text": "whilst also sending up a firewall to",
    "start": "113159",
    "end": "114880"
  },
  {
    "text": "block any unnecessary ports in addition",
    "start": "114880",
    "end": "118079"
  },
  {
    "text": "to ensuring that the application was",
    "start": "118079",
    "end": "119880"
  },
  {
    "text": "cure I also wanted to make sure that the",
    "start": "119880",
    "end": "121840"
  },
  {
    "text": "deployment had a good user experience",
    "start": "121840",
    "end": "124920"
  },
  {
    "text": "this meant setting up high availability",
    "start": "124920",
    "end": "128039"
  },
  {
    "text": "as much as you can on a single node to",
    "start": "128039",
    "end": "130599"
  },
  {
    "text": "do this I would need to set up a load",
    "start": "130599",
    "end": "132400"
  },
  {
    "text": "balancer so that I could distribute",
    "start": "132400",
    "end": "134080"
  },
  {
    "text": "traffic across multiple instances in",
    "start": "134080",
    "end": "136200"
  },
  {
    "text": "case one went down as well as a good",
    "start": "136200",
    "end": "138519"
  },
  {
    "text": "user experience I also wanted to make",
    "start": "138519",
    "end": "140560"
  },
  {
    "text": "sure I had a good developer experience",
    "start": "140560",
    "end": "143480"
  },
  {
    "text": "this meant setting up automated",
    "start": "143480",
    "end": "144920"
  },
  {
    "text": "deployments so that whenever I pushed up",
    "start": "144920",
    "end": "146879"
  },
  {
    "text": "a change it would automatically be",
    "start": "146879",
    "end": "148599"
  },
  {
    "text": "deployed onto the VPS within a couple of",
    "start": "148599",
    "end": "150879"
  },
  {
    "text": "minutes all whilst keeping the service",
    "start": "150879",
    "end": "153239"
  },
  {
    "text": "available lastly I wanted to make sure",
    "start": "153239",
    "end": "155519"
  },
  {
    "text": "that if the website did become",
    "start": "155519",
    "end": "156959"
  },
  {
    "text": "unavailable at any point I would be",
    "start": "156959",
    "end": "159200"
  },
  {
    "text": "notified this meant I would need to set",
    "start": "159200",
    "end": "161280"
  },
  {
    "text": "up some sort of website monitoring with",
    "start": "161280",
    "end": "163800"
  },
  {
    "text": "my requirements defined the next thing",
    "start": "163800",
    "end": "165640"
  },
  {
    "text": "to do was to consider some of the",
    "start": "165640",
    "end": "167120"
  },
  {
    "text": "technical approaches I could take the",
    "start": "167120",
    "end": "169480"
  },
  {
    "text": "first condition I had was that I wanted",
    "start": "169480",
    "end": "171120"
  },
  {
    "text": "to achieve this using simple tooling",
    "start": "171120",
    "end": "173000"
  },
  {
    "text": "that didn't require too much domain",
    "start": "173000",
    "end": "174760"
  },
  {
    "text": "expertise this ruled out using something",
    "start": "174760",
    "end": "177000"
  },
  {
    "text": "such as a lightweight kubernetes",
    "start": "177000",
    "end": "178519"
  },
  {
    "text": "deployment such as k 3s or micro k8s",
    "start": "178519",
    "end": "181920"
  },
  {
    "text": "additionally I didn't want to use a",
    "start": "181920",
    "end": "183360"
  },
  {
    "text": "full-featured solution such as coolify",
    "start": "183360",
    "end": "186239"
  },
  {
    "text": "instead focusing on setting this up",
    "start": "186239",
    "end": "188120"
  },
  {
    "text": "without any additional layers of",
    "start": "188120",
    "end": "189760"
  },
  {
    "text": "abstraction this also meant I didn't",
    "start": "189760",
    "end": "191599"
  },
  {
    "text": "want to use any infrastructure as code",
    "start": "191599",
    "end": "193640"
  },
  {
    "text": "such as terraform palumi or open tofu",
    "start": "193640",
    "end": "196920"
  },
  {
    "text": "although I may consider migrating to one",
    "start": "196920",
    "end": "198680"
  },
  {
    "text": "of these in the future with my",
    "start": "198680",
    "end": "200599"
  },
  {
    "text": "requirements and Technical",
    "start": "200599",
    "end": "201840"
  },
  {
    "text": "considerations to find it was now time",
    "start": "201840",
    "end": "204000"
  },
  {
    "text": "to start setting up my production",
    "start": "204000",
    "end": "205480"
  },
  {
    "text": "environment which meant I needed to",
    "start": "205480",
    "end": "207480"
  },
  {
    "text": "obtain a VPS fortunately that's where",
    "start": "207480",
    "end": "210120"
  },
  {
    "text": "the sponsor of today's video comes in",
    "start": "210120",
    "end": "212360"
  },
  {
    "text": "hostinger who have kindly provided a VPS",
    "start": "212360",
    "end": "215200"
  },
  {
    "text": "instance for me to use throughout this",
    "start": "215200",
    "end": "217080"
  },
  {
    "text": "video if you're considering getting a",
    "start": "217080",
    "end": "218840"
  },
  {
    "text": "VPS for your own applications then",
    "start": "218840",
    "end": "220840"
  },
  {
    "text": "hostinger has some amazingly affordable",
    "start": "220840",
    "end": "222920"
  },
  {
    "text": "rates in my case I have an instance size",
    "start": "222920",
    "end": "225599"
  },
  {
    "text": "of KVM 2 which has two vcpus and a",
    "start": "225599",
    "end": "228959"
  },
  {
    "text": "whopping 8 GB of memory costing only",
    "start": "228959",
    "end": "231480"
  },
  {
    "text": "$6.99 a month when you sign up for a",
    "start": "231480",
    "end": "233760"
  },
  {
    "text": "24-month contract it also comes with up",
    "start": "233760",
    "end": "236439"
  },
  {
    "text": "to 8 tab of bandwidth a month if you",
    "start": "236439",
    "end": "239079"
  },
  {
    "text": "tried to transfer this much data on",
    "start": "239079",
    "end": "240640"
  },
  {
    "text": "versale it would end up costing you over",
    "start": "240640",
    "end": "243280"
  },
  {
    "text": "$1,000 not only this but a VPS instance",
    "start": "243280",
    "end": "246760"
  },
  {
    "text": "this size for $699 a month is incredibly",
    "start": "246760",
    "end": "249519"
  },
  {
    "text": "affordable especially when you compare",
    "start": "249519",
    "end": "251360"
  },
  {
    "text": "it to other options additionally when",
    "start": "251360",
    "end": "253400"
  },
  {
    "text": "checking outs if you use my coupon code",
    "start": "253400",
    "end": "255760"
  },
  {
    "text": "dreams of code then you'll receive a",
    "start": "255760",
    "end": "257639"
  },
  {
    "text": "further discount on the already low",
    "start": "257639",
    "end": "259720"
  },
  {
    "text": "price so to get your own VPS instance",
    "start": "259720",
    "end": "262320"
  },
  {
    "text": "today make sure to check out the link in",
    "start": "262320",
    "end": "264000"
  },
  {
    "text": "the description below and use my dreams",
    "start": "264000",
    "end": "265880"
  },
  {
    "text": "of code coupon code after obtaining the",
    "start": "265880",
    "end": "268120"
  },
  {
    "text": "VPS instance from hosting a I was then",
    "start": "268120",
    "end": "270440"
  },
  {
    "text": "prompted to set it up using the",
    "start": "270440",
    "end": "271960"
  },
  {
    "text": "hostinger UI the first thing to do was",
    "start": "271960",
    "end": "274400"
  },
  {
    "text": "to choose an operating system template",
    "start": "274400",
    "end": "276280"
  },
  {
    "text": "for my server here I had a choice",
    "start": "276280",
    "end": "278440"
  },
  {
    "text": "between plane operating systems",
    "start": "278440",
    "end": "280160"
  },
  {
    "text": "operating systems with panels or",
    "start": "280160",
    "end": "282120"
  },
  {
    "text": "applications the application tab",
    "start": "282120",
    "end": "283960"
  },
  {
    "text": "provides a number of preconfigured",
    "start": "283960",
    "end": "285440"
  },
  {
    "text": "environments with specific commonly used",
    "start": "285440",
    "end": "287720"
  },
  {
    "text": "applications already installed these",
    "start": "287720",
    "end": "289960"
  },
  {
    "text": "include Docker olama and even one for vs",
    "start": "289960",
    "end": "292880"
  },
  {
    "text": "code if that's more your Vibe whilst",
    "start": "292880",
    "end": "295160"
  },
  {
    "text": "this is pretty cool to get started",
    "start": "295160",
    "end": "296479"
  },
  {
    "text": "quickly in my case however I wanted to",
    "start": "296479",
    "end": "298800"
  },
  {
    "text": "install everything I needed from scratch",
    "start": "298800",
    "end": "301240"
  },
  {
    "text": "so I ended up going with a base",
    "start": "301240",
    "end": "302919"
  },
  {
    "text": "operating system installation as for",
    "start": "302919",
    "end": "305320"
  },
  {
    "text": "which operating system as much as I'd",
    "start": "305320",
    "end": "307120"
  },
  {
    "text": "have loved to Ed Arch either way instead",
    "start": "307120",
    "end": "309759"
  },
  {
    "text": "I decided to use Ubuntu",
    "start": "309759",
    "end": "311680"
  },
  {
    "text": "244 which is an LTS or long-term support",
    "start": "311680",
    "end": "315240"
  },
  {
    "text": "distribution and perhaps one of the most",
    "start": "315240",
    "end": "317240"
  },
  {
    "text": "common operating systems when it comes",
    "start": "317240",
    "end": "319000"
  },
  {
    "text": "to setting up a VPS on the next screen I",
    "start": "319000",
    "end": "321919"
  },
  {
    "text": "made sure to disable the Monarch's maare",
    "start": "321919",
    "end": "324160"
  },
  {
    "text": "scanner as I wanted my server to be as",
    "start": "324160",
    "end": "326160"
  },
  {
    "text": "base as possible then it was time to set",
    "start": "326160",
    "end": "328680"
  },
  {
    "text": "up a strong password for the root user",
    "start": "328680",
    "end": "331039"
  },
  {
    "text": "before adding in an SSH public key to",
    "start": "331039",
    "end": "333319"
  },
  {
    "text": "allow me to log in over SSH hostinger",
    "start": "333319",
    "end": "336160"
  },
  {
    "text": "does provide some instructions on how",
    "start": "336160",
    "end": "337880"
  },
  {
    "text": "you can both generate and add a new SSH",
    "start": "337880",
    "end": "340560"
  },
  {
    "text": "key however in my case I decided to use",
    "start": "340560",
    "end": "343280"
  },
  {
    "text": "my existing one as it's tied to my UB",
    "start": "343280",
    "end": "345479"
  },
  {
    "text": "key this was done by first copying the",
    "start": "345479",
    "end": "347479"
  },
  {
    "text": "public key to my clipboard using the",
    "start": "347479",
    "end": "349120"
  },
  {
    "text": "following command and then pasting it",
    "start": "349120",
    "end": "351039"
  },
  {
    "text": "into the SSH key box with everything set",
    "start": "351039",
    "end": "354039"
  },
  {
    "text": "up I went and deployed my new VPS",
    "start": "354039",
    "end": "356319"
  },
  {
    "text": "instance and waited for it to start",
    "start": "356319",
    "end": "358479"
  },
  {
    "text": "before testing the login over SSH which",
    "start": "358479",
    "end": "361160"
  },
  {
    "text": "was working correctly whenever I log",
    "start": "361160",
    "end": "363319"
  },
  {
    "text": "into a new VPS the first thing I do is",
    "start": "363319",
    "end": "365840"
  },
  {
    "text": "to always make sure to add a new user",
    "start": "365840",
    "end": "367840"
  },
  {
    "text": "account as working as the root user is",
    "start": "367840",
    "end": "370160"
  },
  {
    "text": "generally not advised adding a new user",
    "start": "370160",
    "end": "372560"
  },
  {
    "text": "account is done by using the add user",
    "start": "372560",
    "end": "374400"
  },
  {
    "text": "command followed by passing in the",
    "start": "374400",
    "end": "376160"
  },
  {
    "text": "user's name in my case I set this to be",
    "start": "376160",
    "end": "378400"
  },
  {
    "text": "Elliot upon doing so it then prompted me",
    "start": "378400",
    "end": "380880"
  },
  {
    "text": "to add the user's password and to fill",
    "start": "380880",
    "end": "382599"
  },
  {
    "text": "out any additional information before",
    "start": "382599",
    "end": "384680"
  },
  {
    "text": "then creating the user with my new user",
    "start": "384680",
    "end": "387240"
  },
  {
    "text": "account the next thing to do was to",
    "start": "387240",
    "end": "388759"
  },
  {
    "text": "ensure that this user user also had",
    "start": "388759",
    "end": "390400"
  },
  {
    "text": "pseudo permissions so that I could",
    "start": "390400",
    "end": "392280"
  },
  {
    "text": "Elevate its access whenever I needed to",
    "start": "392280",
    "end": "394759"
  },
  {
    "text": "this was achieved by using the following",
    "start": "394759",
    "end": "396599"
  },
  {
    "text": "user mod command adding the user to the",
    "start": "396599",
    "end": "398919"
  },
  {
    "text": "pseudo group afterwards I could then",
    "start": "398919",
    "end": "401039"
  },
  {
    "text": "test that everything was working",
    "start": "401039",
    "end": "402160"
  },
  {
    "text": "correctly by first switching to this new",
    "start": "402160",
    "end": "403960"
  },
  {
    "text": "user using the Sue command before",
    "start": "403960",
    "end": "406039"
  },
  {
    "text": "running a test pseudo command with my",
    "start": "406039",
    "end": "408560"
  },
  {
    "text": "user account added to the VPS it was now",
    "start": "408560",
    "end": "411080"
  },
  {
    "text": "time to move on to my first requirement",
    "start": "411080",
    "end": "413680"
  },
  {
    "text": "pointing a DNS record at the server",
    "start": "413680",
    "end": "416240"
  },
  {
    "text": "surprisingly enough I didn't have any",
    "start": "416240",
    "end": "418000"
  },
  {
    "text": "spare domain names lying around",
    "start": "418000",
    "end": "420039"
  },
  {
    "text": "so I needed to purchase a new one",
    "start": "420039",
    "end": "422120"
  },
  {
    "text": "fortunately you can buy a domain name",
    "start": "422120",
    "end": "423680"
  },
  {
    "text": "from hostinger at an incredibly low",
    "start": "423680",
    "end": "425720"
  },
  {
    "text": "price so I decided to purchase the z.",
    "start": "425720",
    "end": "428440"
  },
  {
    "text": "Cloud domain name for the low price of",
    "start": "428440",
    "end": "430319"
  },
  {
    "text": "$1.99 for the first year once the",
    "start": "430319",
    "end": "432680"
  },
  {
    "text": "purchase went through I then went about",
    "start": "432680",
    "end": "434319"
  },
  {
    "text": "adding a DNS record pointing to the VPS",
    "start": "434319",
    "end": "437120"
  },
  {
    "text": "using the hostinger UI to do this the",
    "start": "437120",
    "end": "439800"
  },
  {
    "text": "first thing I did was clear both the",
    "start": "439800",
    "end": "441400"
  },
  {
    "text": "existing A and C Name Records that were",
    "start": "441400",
    "end": "443360"
  },
  {
    "text": "automatically generated as they were no",
    "start": "443360",
    "end": "445520"
  },
  {
    "text": "longer needed then I was able to add a",
    "start": "445520",
    "end": "447680"
  },
  {
    "text": "new record for the rout domain pointing",
    "start": "447680",
    "end": "450039"
  },
  {
    "text": "this to the IP address of my server",
    "start": "450039",
    "end": "452160"
  },
  {
    "text": "which you can pull out of the actual",
    "start": "452160",
    "end": "453400"
  },
  {
    "text": "node Itself by using the IP Adder",
    "start": "453400",
    "end": "455599"
  },
  {
    "text": "command all that then remained was to",
    "start": "455599",
    "end": "457639"
  },
  {
    "text": "save the record and wait for it to",
    "start": "457639",
    "end": "459000"
  },
  {
    "text": "propagate across the global DNS Network",
    "start": "459000",
    "end": "461919"
  },
  {
    "text": "this can take a few hours so whilst I",
    "start": "461919",
    "end": "464639"
  },
  {
    "text": "waited I went about making myself a warm",
    "start": "464639",
    "end": "466879"
  },
  {
    "text": "beverage before deciding to add some",
    "start": "466879",
    "end": "468759"
  },
  {
    "text": "more security to the VPS if you're",
    "start": "468759",
    "end": "471280"
  },
  {
    "text": "following along at home you may want to",
    "start": "471280",
    "end": "472919"
  },
  {
    "text": "install tarx on your VPS and work inside",
    "start": "472919",
    "end": "475440"
  },
  {
    "text": "of it by doing so if your SSH connection",
    "start": "475440",
    "end": "477879"
  },
  {
    "text": "happens to drop you're able to easily",
    "start": "477879",
    "end": "479800"
  },
  {
    "text": "reattached to the t-mo session when you",
    "start": "479800",
    "end": "481599"
  },
  {
    "text": "SSH back in in my case I'm using t-mo on",
    "start": "481599",
    "end": "484479"
  },
  {
    "text": "my local machine with a pretty reliable",
    "start": "484479",
    "end": "486440"
  },
  {
    "text": "internet connection but if SSH did drop",
    "start": "486440",
    "end": "489080"
  },
  {
    "text": "then this can be a little Annoying",
    "start": "489080",
    "end": "490960"
  },
  {
    "text": "however it didn't do so during the",
    "start": "490960",
    "end": "492280"
  },
  {
    "text": "filming of this video which took place",
    "start": "492280",
    "end": "494000"
  },
  {
    "text": "over a couple of days if you want to",
    "start": "494000",
    "end": "496000"
  },
  {
    "text": "learn more about t-o and how to use it I",
    "start": "496000",
    "end": "498479"
  },
  {
    "text": "actually have another video on it which",
    "start": "498479",
    "end": "500240"
  },
  {
    "text": "you can check out after this one in",
    "start": "500240",
    "end": "502080"
  },
  {
    "text": "order to harden the VPS the first thing",
    "start": "502080",
    "end": "504240"
  },
  {
    "text": "I wanted to do was to remove password",
    "start": "504240",
    "end": "506000"
  },
  {
    "text": "authentication on SSH which generally",
    "start": "506000",
    "end": "508680"
  },
  {
    "text": "isn't a good idea to leave enabled as",
    "start": "508680",
    "end": "510840"
  },
  {
    "text": "there are many automated Bots out there",
    "start": "510840",
    "end": "512640"
  },
  {
    "text": "performing SSH brute forcing before I",
    "start": "512640",
    "end": "515039"
  },
  {
    "text": "was able to do that however I first",
    "start": "515039",
    "end": "516719"
  },
  {
    "text": "needed to make sure that my non-root",
    "start": "516719",
    "end": "518320"
  },
  {
    "text": "user also had a copy of my SSH public",
    "start": "518320",
    "end": "520959"
  },
  {
    "text": "key the easiest way I find to do this is",
    "start": "520959",
    "end": "523399"
  },
  {
    "text": "to use the SSH copy ID command from my",
    "start": "523399",
    "end": "526200"
  },
  {
    "text": "local machine this command requires",
    "start": "526200",
    "end": "528440"
  },
  {
    "text": "existing authentication in order to copy",
    "start": "528440",
    "end": "530399"
  },
  {
    "text": "the SSH public key so I had to run it",
    "start": "530399",
    "end": "532959"
  },
  {
    "text": "before disabling password or with my SSH",
    "start": "532959",
    "end": "535920"
  },
  {
    "text": "public key copied over I then tested",
    "start": "535920",
    "end": "537920"
  },
  {
    "text": "that everything was working by SSH Hing",
    "start": "537920",
    "end": "539800"
  },
  {
    "text": "in which allowed me to log in using key",
    "start": "539800",
    "end": "542160"
  },
  {
    "text": "based orth now I was ready to disable",
    "start": "542160",
    "end": "544839"
  },
  {
    "text": "password authentication to do so I first",
    "start": "544839",
    "end": "547720"
  },
  {
    "text": "opened up the sshd config file using Vim",
    "start": "547720",
    "end": "550880"
  },
  {
    "text": "then changed the yes value of password",
    "start": "550880",
    "end": "553040"
  },
  {
    "text": "authentication to no whilst I was in",
    "start": "553040",
    "end": "555440"
  },
  {
    "text": "this file I also disabled the ability to",
    "start": "555440",
    "end": "557560"
  },
  {
    "text": "login as the root user and disabled Pam",
    "start": "557560",
    "end": "560360"
  },
  {
    "text": "authentication as well which are both",
    "start": "560360",
    "end": "562720"
  },
  {
    "text": "recommendations for hardening SSH",
    "start": "562720",
    "end": "565240"
  },
  {
    "text": "additionally on hostinger there was",
    "start": "565240",
    "end": "566839"
  },
  {
    "text": "another file called 50. cloud in it",
    "start": "566839",
    "end": "569079"
  },
  {
    "text": "where password authentication was also",
    "start": "569079",
    "end": "570880"
  },
  {
    "text": "set to enabled so I needed to either",
    "start": "570880",
    "end": "573200"
  },
  {
    "text": "modify this file as well or just remove",
    "start": "573200",
    "end": "575440"
  },
  {
    "text": "it to apply these changes all I had to",
    "start": "575440",
    "end": "577720"
  },
  {
    "text": "do was first reload the SSH service then",
    "start": "577720",
    "end": "580440"
  },
  {
    "text": "I tested that everything was working",
    "start": "580440",
    "end": "581839"
  },
  {
    "text": "correctly by first running the following",
    "start": "581839",
    "end": "583800"
  },
  {
    "text": "command to make sure I couldn't log into",
    "start": "583800",
    "end": "585360"
  },
  {
    "text": "the root user at all with that my VPS",
    "start": "585360",
    "end": "587800"
  },
  {
    "text": "was now hardened from SSH attacks",
    "start": "587800",
    "end": "590120"
  },
  {
    "text": "especially password Brute Forces one",
    "start": "590120",
    "end": "592440"
  },
  {
    "text": "additional approach that you can take is",
    "start": "592440",
    "end": "594120"
  },
  {
    "text": "to change the port that SSH listens on",
    "start": "594120",
    "end": "596360"
  },
  {
    "text": "from Port 22 onto something else this",
    "start": "596360",
    "end": "598839"
  },
  {
    "text": "can help to reduce the attack surfice",
    "start": "598839",
    "end": "600720"
  },
  {
    "text": "from automated scanners however",
    "start": "600720",
    "end": "602920"
  },
  {
    "text": "personally I feel like this is more",
    "start": "602920",
    "end": "604720"
  },
  {
    "text": "security by obscurity so in my case I",
    "start": "604720",
    "end": "607839"
  },
  {
    "text": "decided to leave SSH on the default Port",
    "start": "607839",
    "end": "610079"
  },
  {
    "text": "of 22 if you do decide to change this",
    "start": "610079",
    "end": "612720"
  },
  {
    "text": "however then make sure to take note of",
    "start": "612720",
    "end": "614320"
  },
  {
    "text": "it as you'll need to make some other",
    "start": "614320",
    "end": "615959"
  },
  {
    "text": "changes later on once SSH had been",
    "start": "615959",
    "end": "618480"
  },
  {
    "text": "hardened I then used NS lookup to check",
    "start": "618480",
    "end": "620560"
  },
  {
    "text": "if the DNS record had propagated which",
    "start": "620560",
    "end": "622839"
  },
  {
    "text": "showed me that my zen. cloud domain name",
    "start": "622839",
    "end": "625160"
  },
  {
    "text": "was now resolving to the vpss IP I then",
    "start": "625160",
    "end": "628040"
  },
  {
    "text": "confirmed this by using the domain M",
    "start": "628040",
    "end": "629480"
  },
  {
    "text": "name to ssh in with my DNS record set up",
    "start": "629480",
    "end": "633000"
  },
  {
    "text": "the next requirement was to get the web",
    "start": "633000",
    "end": "634880"
  },
  {
    "text": "application up and running as I",
    "start": "634880",
    "end": "636920"
  },
  {
    "text": "mentioned before I had built a web app",
    "start": "636920",
    "end": "638839"
  },
  {
    "text": "to go along with this project which is a",
    "start": "638839",
    "end": "641000"
  },
  {
    "text": "simple guest book application written in",
    "start": "641000",
    "end": "642800"
  },
  {
    "text": "go where visitors to the website can",
    "start": "642800",
    "end": "644680"
  },
  {
    "text": "leave a hopefully nice message if you",
    "start": "644680",
    "end": "647320"
  },
  {
    "text": "want to deploy this project yourself or",
    "start": "647320",
    "end": "649120"
  },
  {
    "text": "are just interested in the code then you",
    "start": "649120",
    "end": "650880"
  },
  {
    "text": "can find a link to the GitHub repo in",
    "start": "650880",
    "end": "652680"
  },
  {
    "text": "the description down below to get it",
    "start": "652680",
    "end": "654600"
  },
  {
    "text": "running on the VPS I decided to First",
    "start": "654600",
    "end": "656600"
  },
  {
    "text": "Take A naive approach which was to clone",
    "start": "656600",
    "end": "659000"
  },
  {
    "text": "down the project onto my hostinger",
    "start": "659000",
    "end": "660519"
  },
  {
    "text": "instance and build it in order to do so",
    "start": "660519",
    "end": "663320"
  },
  {
    "text": "I first needed to install the go",
    "start": "663320",
    "end": "665000"
  },
  {
    "text": "compiler which was done through Snap",
    "start": "665000",
    "end": "666880"
  },
  {
    "text": "using the following command once the go",
    "start": "666880",
    "end": "669320"
  },
  {
    "text": "tool chain was installed I could then",
    "start": "669320",
    "end": "671079"
  },
  {
    "text": "build the project using the go build",
    "start": "671079",
    "end": "672880"
  },
  {
    "text": "command which did take a little bit of",
    "start": "672880",
    "end": "675000"
  },
  {
    "text": "time but was fortunately much quicker",
    "start": "675000",
    "end": "676880"
  },
  {
    "text": "than say if I'd been using rust after it",
    "start": "676880",
    "end": "679440"
  },
  {
    "text": "was built I then had a binary called",
    "start": "679440",
    "end": "681240"
  },
  {
    "text": "guestbook which I could then run however",
    "start": "681240",
    "end": "683880"
  },
  {
    "text": "this unfortunately failed as the",
    "start": "683880",
    "end": "685839"
  },
  {
    "text": "application needs a database URL",
    "start": "685839",
    "end": "687880"
  },
  {
    "text": "environment variable in order for it to",
    "start": "687880",
    "end": "689720"
  },
  {
    "text": "connect to a postgres database in order",
    "start": "689720",
    "end": "691760"
  },
  {
    "text": "to store the data later on I actually",
    "start": "691760",
    "end": "693959"
  },
  {
    "text": "set up an instance of postgres on the",
    "start": "693959",
    "end": "695600"
  },
  {
    "text": "VPS which makes a lot of sense given how",
    "start": "695600",
    "end": "697920"
  },
  {
    "text": "much memory it has coupled with the fact",
    "start": "697920",
    "end": "700000"
  },
  {
    "text": "that hostinger also provides a 100 GB of",
    "start": "700000",
    "end": "702399"
  },
  {
    "text": "SSD storage in a true production",
    "start": "702399",
    "end": "704720"
  },
  {
    "text": "environment however there's a lot more",
    "start": "704720",
    "end": "706360"
  },
  {
    "text": "you need to do when it comes to setting",
    "start": "706360",
    "end": "707800"
  },
  {
    "text": "up a database just keep that in mind",
    "start": "707800",
    "end": "710040"
  },
  {
    "text": "before installing postgres on the VPS",
    "start": "710040",
    "end": "712000"
  },
  {
    "text": "however I first decided to test that the",
    "start": "712000",
    "end": "714000"
  },
  {
    "text": "app was working by setting the database",
    "start": "714000",
    "end": "715800"
  },
  {
    "text": "URL environment variable to a spare",
    "start": "715800",
    "end": "718079"
  },
  {
    "text": "postgres instance I had had lying around",
    "start": "718079",
    "end": "720839"
  },
  {
    "text": "then I ran the app again which this time",
    "start": "720839",
    "end": "723120"
  },
  {
    "text": "showed that the server was listening on",
    "start": "723120",
    "end": "724800"
  },
  {
    "text": "Port 8880 to test that everything was",
    "start": "724800",
    "end": "727440"
  },
  {
    "text": "working I opened up a web browser to the",
    "start": "727440",
    "end": "729560"
  },
  {
    "text": "zen. cloud domain at Port 880 which",
    "start": "729560",
    "end": "732920"
  },
  {
    "text": "brought me to my applications homepage",
    "start": "732920",
    "end": "735000"
  },
  {
    "text": "so far so good whilst this approach of",
    "start": "735000",
    "end": "737399"
  },
  {
    "text": "cloning down the repo and building it on",
    "start": "737399",
    "end": "739240"
  },
  {
    "text": "the box does work personally I'm not a",
    "start": "739240",
    "end": "741320"
  },
  {
    "text": "big fan of compiling applications on my",
    "start": "741320",
    "end": "743320"
  },
  {
    "text": "production server instead I prefer to",
    "start": "743320",
    "end": "745480"
  },
  {
    "text": "use containerization which allows me to",
    "start": "745480",
    "end": "747839"
  },
  {
    "text": "build an immutable image of my",
    "start": "747839",
    "end": "749240"
  },
  {
    "text": "application for distribution which also",
    "start": "749240",
    "end": "751160"
  },
  {
    "text": "happens to be versioned and configurable",
    "start": "751160",
    "end": "753560"
  },
  {
    "text": "this means rather than running the",
    "start": "753560",
    "end": "754880"
  },
  {
    "text": "application binary directly instead I",
    "start": "754880",
    "end": "757000"
  },
  {
    "text": "decided to run it using Docker through a",
    "start": "757000",
    "end": "759040"
  },
  {
    "text": "Docker image this project comes with a",
    "start": "759040",
    "end": "761240"
  },
  {
    "text": "Docker file in it already which you can",
    "start": "761240",
    "end": "763079"
  },
  {
    "text": "view on GitHub additionally I also had",
    "start": "763079",
    "end": "765320"
  },
  {
    "text": "built and pushed a Docker image to the",
    "start": "765320",
    "end": "767079"
  },
  {
    "text": "GitHub container registry found in the",
    "start": "767079",
    "end": "769240"
  },
  {
    "text": "Project's packages in addition to this",
    "start": "769240",
    "end": "771519"
  },
  {
    "text": "the project also contains a compose doyl",
    "start": "771519",
    "end": "774079"
  },
  {
    "text": "which allows me to easily use Docker",
    "start": "774079",
    "end": "775560"
  },
  {
    "text": "compose to deploy this project as well",
    "start": "775560",
    "end": "777480"
  },
  {
    "text": "as any other dependencies such as",
    "start": "777480",
    "end": "779959"
  },
  {
    "text": "which also has a service reference",
    "start": "779959",
    "end": "781760"
  },
  {
    "text": "inside of the compos file this meant I",
    "start": "781760",
    "end": "784000"
  },
  {
    "text": "could use Docker compos to deploy the",
    "start": "784000",
    "end": "785720"
  },
  {
    "text": "entire production ready application",
    "start": "785720",
    "end": "787639"
  },
  {
    "text": "stack in order to do so however I first",
    "start": "787639",
    "end": "790440"
  },
  {
    "text": "needed to install Docker and Docker",
    "start": "790440",
    "end": "792240"
  },
  {
    "text": "compose onto the VPS the best way to do",
    "start": "792240",
    "end": "795240"
  },
  {
    "text": "this is to follow the instructions found",
    "start": "795240",
    "end": "797000"
  },
  {
    "text": "on the docker website which gives a list",
    "start": "797000",
    "end": "799000"
  },
  {
    "text": "of commands to enter these commands add",
    "start": "799000",
    "end": "801240"
  },
  {
    "text": "the docker repository to apt which",
    "start": "801240",
    "end": "803279"
  },
  {
    "text": "allows you to install both Docker and",
    "start": "803279",
    "end": "804959"
  },
  {
    "text": "Docker composed plugin via the APT",
    "start": "804959",
    "end": "806880"
  },
  {
    "text": "install command once these had both been",
    "start": "806880",
    "end": "809120"
  },
  {
    "text": "setup the docker service was now up and",
    "start": "809120",
    "end": "811199"
  },
  {
    "text": "running however if it's not in your own",
    "start": "811199",
    "end": "813320"
  },
  {
    "text": "case you can go ahead and run the",
    "start": "813320",
    "end": "814880"
  },
  {
    "text": "following system control commands in",
    "start": "814880",
    "end": "816680"
  },
  {
    "text": "order to enable it the next thing to do",
    "start": "816680",
    "end": "818720"
  },
  {
    "text": "was to then add the user to the docker",
    "start": "818720",
    "end": "820639"
  },
  {
    "text": "Group by using the user mod command this",
    "start": "820639",
    "end": "823199"
  },
  {
    "text": "prevents the user from needing to use",
    "start": "823199",
    "end": "824800"
  },
  {
    "text": "pseudo in order to interface with Docker",
    "start": "824800",
    "end": "827480"
  },
  {
    "text": "next it was time to get the application",
    "start": "827480",
    "end": "829120"
  },
  {
    "text": "stack deployed in order to do so I first",
    "start": "829120",
    "end": "831839"
  },
  {
    "text": "needed to set up a password for my",
    "start": "831839",
    "end": "833480"
  },
  {
    "text": "postgres instance rather than hardcoding",
    "start": "833480",
    "end": "836120"
  },
  {
    "text": "this into the composed. yaml I decided",
    "start": "836120",
    "end": "838240"
  },
  {
    "text": "to instead set this using a Docker",
    "start": "838240",
    "end": "839880"
  },
  {
    "text": "composed secret which is defined on the",
    "start": "839880",
    "end": "842320"
  },
  {
    "text": "following line to do so I needed to",
    "start": "842320",
    "end": "844600"
  },
  {
    "text": "write out my password into the specified",
    "start": "844600",
    "end": "846800"
  },
  {
    "text": "file which was done by first creating",
    "start": "846800",
    "end": "849120"
  },
  {
    "text": "the DB directory using make deer",
    "start": "849120",
    "end": "851399"
  },
  {
    "text": "followed by echoing the password into",
    "start": "851399",
    "end": "853240"
  },
  {
    "text": "the file using the following command",
    "start": "853240",
    "end": "855720"
  },
  {
    "text": "then I could go ahead and deploy my",
    "start": "855720",
    "end": "857240"
  },
  {
    "text": "stack using the docker compose up",
    "start": "857240",
    "end": "858959"
  },
  {
    "text": "command which began by creating an",
    "start": "858959",
    "end": "860959"
  },
  {
    "text": "instance of postes followed by creating",
    "start": "860959",
    "end": "863079"
  },
  {
    "text": "an instance of the guestbook service now",
    "start": "863079",
    "end": "865720"
  },
  {
    "text": "when I headed on over to our web browser",
    "start": "865720",
    "end": "867399"
  },
  {
    "text": "and typed in the zen. cloud main name",
    "start": "867399",
    "end": "869680"
  },
  {
    "text": "followed by Port 880 I was greeted by a",
    "start": "869680",
    "end": "872320"
  },
  {
    "text": "running instance of the guestbook web",
    "start": "872320",
    "end": "874240"
  },
  {
    "text": "app as well as seeing a corresponding",
    "start": "874240",
    "end": "876320"
  },
  {
    "text": "line in the container Logs with that I",
    "start": "876320",
    "end": "879000"
  },
  {
    "text": "had my containerized service running",
    "start": "879000",
    "end": "880720"
  },
  {
    "text": "with a domain name pointing to it which",
    "start": "880720",
    "end": "882800"
  },
  {
    "text": "meant I had completed three of my eight",
    "start": "882800",
    "end": "885079"
  },
  {
    "text": "requirements the next production Ready",
    "start": "885079",
    "end": "887160"
  },
  {
    "text": "Step On My List was to enable a firewall",
    "start": "887160",
    "end": "890120"
  },
  {
    "text": "whilst this is generally a good idea to",
    "start": "890120",
    "end": "892440"
  },
  {
    "text": "improve your VPS security I did run into",
    "start": "892440",
    "end": "894959"
  },
  {
    "text": "a slight caveat when doing so which I'll",
    "start": "894959",
    "end": "897320"
  },
  {
    "text": "talk about in a bit to set up a a",
    "start": "897320",
    "end": "899240"
  },
  {
    "text": "firewall for This Server the only ports",
    "start": "899240",
    "end": "901079"
  },
  {
    "text": "that I wanted to be enabled were the",
    "start": "901079",
    "end": "902759"
  },
  {
    "text": "open SSH ports which was Port 22 for me",
    "start": "902759",
    "end": "905959"
  },
  {
    "text": "the port for HTTP which is Port 80 and",
    "start": "905959",
    "end": "909000"
  },
  {
    "text": "Port 443 which is used for https to",
    "start": "909000",
    "end": "912399"
  },
  {
    "text": "achieve this I decided to use the simple",
    "start": "912399",
    "end": "914600"
  },
  {
    "text": "yet powerful ufw application which",
    "start": "914600",
    "end": "917560"
  },
  {
    "text": "stands for uncomplicated firewall not",
    "start": "917560",
    "end": "920040"
  },
  {
    "text": "only is ufw really simple to use but it",
    "start": "920040",
    "end": "922759"
  },
  {
    "text": "also comes and stalled by default on",
    "start": "922759",
    "end": "924600"
  },
  {
    "text": "your buntu distributions making it a",
    "start": "924600",
    "end": "926759"
  },
  {
    "text": "great choice for this VPS in in order to",
    "start": "926759",
    "end": "929319"
  },
  {
    "text": "use it I began by defining the firewall",
    "start": "929319",
    "end": "931720"
  },
  {
    "text": "rules the first of which was to disable",
    "start": "931720",
    "end": "934079"
  },
  {
    "text": "all inbound Network requests by default",
    "start": "934079",
    "end": "936800"
  },
  {
    "text": "which was done using the following",
    "start": "936800",
    "end": "938240"
  },
  {
    "text": "command next for all outgoing requests I",
    "start": "938240",
    "end": "941120"
  },
  {
    "text": "enabled these by default using this next",
    "start": "941120",
    "end": "943480"
  },
  {
    "text": "command lastly I then needed to enable",
    "start": "943480",
    "end": "945839"
  },
  {
    "text": "inbound requests to the open SSH server",
    "start": "945839",
    "end": "948800"
  },
  {
    "text": "so that I was still able to SSH into the",
    "start": "948800",
    "end": "951199"
  },
  {
    "text": "VPS just to be aware this is a really",
    "start": "951199",
    "end": "954319"
  },
  {
    "text": "important step if I had forgotten to do",
    "start": "954319",
    "end": "956839"
  },
  {
    "text": "this then I'd no longer be able to",
    "start": "956839",
    "end": "958600"
  },
  {
    "text": "access the VPS so it's really important",
    "start": "958600",
    "end": "961199"
  },
  {
    "text": "to get this right before enabling the",
    "start": "961199",
    "end": "962880"
  },
  {
    "text": "firewall to allow connections to the",
    "start": "962880",
    "end": "964959"
  },
  {
    "text": "open SSH server I used the following",
    "start": "964959",
    "end": "967399"
  },
  {
    "text": "command which allows any inbound traffic",
    "start": "967399",
    "end": "969720"
  },
  {
    "text": "to Port 22 if I had changed the SSH port",
    "start": "969720",
    "end": "973160"
  },
  {
    "text": "to be something else such as 800 however",
    "start": "973160",
    "end": "975480"
  },
  {
    "text": "then I would have needed to use the",
    "start": "975480",
    "end": "976959"
  },
  {
    "text": "following command instead with that I",
    "start": "976959",
    "end": "979519"
  },
  {
    "text": "did one last check to make sure that I",
    "start": "979519",
    "end": "981160"
  },
  {
    "text": "had configured the firewall correctly",
    "start": "981160",
    "end": "983120"
  },
  {
    "text": "and then enabled it by running the",
    "start": "983120",
    "end": "984480"
  },
  {
    "text": "following ufw enable command with that",
    "start": "984480",
    "end": "987800"
  },
  {
    "text": "the firewall was now up and running",
    "start": "987800",
    "end": "990040"
  },
  {
    "text": "however when I went and checked if the",
    "start": "990040",
    "end": "991360"
  },
  {
    "text": "website was still accessible it actually",
    "start": "991360",
    "end": "993560"
  },
  {
    "text": "was despite being on a port I hadn't",
    "start": "993560",
    "end": "995880"
  },
  {
    "text": "explicitly allowed this was the caveat",
    "start": "995880",
    "end": "998480"
  },
  {
    "text": "that I mentioned earlier and is caused",
    "start": "998480",
    "end": "1000319"
  },
  {
    "text": "by the fact that exposing a port with",
    "start": "1000319",
    "end": "1002000"
  },
  {
    "text": "Docker will actually overwrite the IP",
    "start": "1002000",
    "end": "1004000"
  },
  {
    "text": "tables rules defined by ufw this is",
    "start": "1004000",
    "end": "1007000"
  },
  {
    "text": "unfortunately a well-known issue and",
    "start": "1007000",
    "end": "1009440"
  },
  {
    "text": "whilst there are some workarounds",
    "start": "1009440",
    "end": "1010959"
  },
  {
    "text": "there's not really one great solution",
    "start": "1010959",
    "end": "1013000"
  },
  {
    "text": "one such workaround is to only expose",
    "start": "1013000",
    "end": "1015279"
  },
  {
    "text": "the port on your loop back IP address of",
    "start": "1015279",
    "end": "1018160"
  },
  {
    "text": "127",
    "start": "1018160",
    "end": "1019639"
  },
  {
    "text": "0.0.1 by using the following syntax and",
    "start": "1019639",
    "end": "1022959"
  },
  {
    "text": "whil this does work it's not exactly",
    "start": "1022959",
    "end": "1024959"
  },
  {
    "text": "ideal instead the best way that I found",
    "start": "1024959",
    "end": "1027520"
  },
  {
    "text": "to make sure that these ports aren't",
    "start": "1027520",
    "end": "1029000"
  },
  {
    "text": "exposed is to just not Define them in",
    "start": "1029000",
    "end": "1031280"
  },
  {
    "text": "the docker composed file but then how",
    "start": "1031280",
    "end": "1033360"
  },
  {
    "text": "can anyone access the web application on",
    "start": "1033360",
    "end": "1035360"
  },
  {
    "text": "Port 880 well the best way to do that is",
    "start": "1035360",
    "end": "1038240"
  },
  {
    "text": "to set up a reverse proxy which is what",
    "start": "1038240",
    "end": "1040558"
  },
  {
    "text": "will be exposed onto the internet",
    "start": "1040559",
    "end": "1042480"
  },
  {
    "text": "instead in the past I've typically used",
    "start": "1042480",
    "end": "1045079"
  },
  {
    "text": "engine X as my go-to reverse proxy",
    "start": "1045079",
    "end": "1047678"
  },
  {
    "text": "however this time after doing some",
    "start": "1047679",
    "end": "1049160"
  },
  {
    "text": "research I ended up going with another",
    "start": "1049160",
    "end": "1051280"
  },
  {
    "text": "option traffic which is confusingly",
    "start": "1051280",
    "end": "1053919"
  },
  {
    "text": "spelled as traic spelling issues aside",
    "start": "1053919",
    "end": "1056559"
  },
  {
    "text": "traffic is pretty awesome and was",
    "start": "1056559",
    "end": "1058520"
  },
  {
    "text": "probably one of the two biggest reasons",
    "start": "1058520",
    "end": "1060400"
  },
  {
    "text": "as to why setting up this production",
    "start": "1060400",
    "end": "1061720"
  },
  {
    "text": "ready VPS was much easier than I thought",
    "start": "1061720",
    "end": "1064039"
  },
  {
    "text": "it would be to begin setting up the",
    "start": "1064039",
    "end": "1065799"
  },
  {
    "text": "reverse proxy I wanted to make sure I",
    "start": "1065799",
    "end": "1067799"
  },
  {
    "text": "had traffic listening on Port at",
    "start": "1067799",
    "end": "1070160"
  },
  {
    "text": "forwarding any HTTP requests containing",
    "start": "1070160",
    "end": "1072559"
  },
  {
    "text": "the zv. cloud host header to my",
    "start": "1072559",
    "end": "1074600"
  },
  {
    "text": "guestbook service in order to add",
    "start": "1074600",
    "end": "1076720"
  },
  {
    "text": "traffic to the stack I added a new",
    "start": "1076720",
    "end": "1078840"
  },
  {
    "text": "service into my composed. yaml called",
    "start": "1078840",
    "end": "1081120"
  },
  {
    "text": "reverse proxy pointing it to the traffic",
    "start": "1081120",
    "end": "1083480"
  },
  {
    "text": "image with tag 3.1 followed by passing",
    "start": "1083480",
    "end": "1086440"
  },
  {
    "text": "in two arguments to the command field",
    "start": "1086440",
    "end": "1088840"
  },
  {
    "text": "then I specified the ports of 80 for",
    "start": "1088840",
    "end": "1091000"
  },
  {
    "text": "HTTP and Port 880 for the web UI so that",
    "start": "1091000",
    "end": "1094880"
  },
  {
    "text": "I could access the traffic dashboard for",
    "start": "1094880",
    "end": "1096760"
  },
  {
    "text": "debugging the last thing to add was to",
    "start": "1096760",
    "end": "1098919"
  },
  {
    "text": "set the docker socket as a volume for",
    "start": "1098919",
    "end": "1100880"
  },
  {
    "text": "the container so that traffic can listen",
    "start": "1100880",
    "end": "1102640"
  },
  {
    "text": "to any Docker events such as new",
    "start": "1102640",
    "end": "1104640"
  },
  {
    "text": "Services being spun up and is why",
    "start": "1104640",
    "end": "1106679"
  },
  {
    "text": "traffic works really well with docker",
    "start": "1106679",
    "end": "1108400"
  },
  {
    "text": "compon",
    "start": "1108400",
    "end": "1109400"
  },
  {
    "text": "with the new service added I then",
    "start": "1109400",
    "end": "1111240"
  },
  {
    "text": "restarted Docker compose and added both",
    "start": "1111240",
    "end": "1113200"
  },
  {
    "text": "Port 80 and 880 to the ufw allow list",
    "start": "1113200",
    "end": "1117039"
  },
  {
    "text": "whilst this step may not be required due",
    "start": "1117039",
    "end": "1119080"
  },
  {
    "text": "to the fact that Docker was overwriting",
    "start": "1119080",
    "end": "1120640"
  },
  {
    "text": "the IP tables it was worth playing it",
    "start": "1120640",
    "end": "1122679"
  },
  {
    "text": "safe in my opinion just in case there",
    "start": "1122679",
    "end": "1124559"
  },
  {
    "text": "were any race conditions between the two",
    "start": "1124559",
    "end": "1126320"
  },
  {
    "text": "Services writing to the IP tables to",
    "start": "1126320",
    "end": "1128919"
  },
  {
    "text": "test that everything was working I",
    "start": "1128919",
    "end": "1130400"
  },
  {
    "text": "opened up a new browser window and",
    "start": "1130400",
    "end": "1132159"
  },
  {
    "text": "headed over to zen. Cloud where I",
    "start": "1132159",
    "end": "1134880"
  },
  {
    "text": "received a 404 not found whilst this is",
    "start": "1134880",
    "end": "1137799"
  },
  {
    "text": "an HTTP error code it showed me that",
    "start": "1137799",
    "end": "1139960"
  },
  {
    "text": "traffic was set up correctly which I",
    "start": "1139960",
    "end": "1141799"
  },
  {
    "text": "could then confirm by heading on over to",
    "start": "1141799",
    "end": "1143440"
  },
  {
    "text": "port 8080 which brought me to the",
    "start": "1143440",
    "end": "1145640"
  },
  {
    "text": "traffic web UI dashboard upon confirming",
    "start": "1145640",
    "end": "1148480"
  },
  {
    "text": "that traffic was working the next step",
    "start": "1148480",
    "end": "1150400"
  },
  {
    "text": "was to set it up so that the HTTP",
    "start": "1150400",
    "end": "1152440"
  },
  {
    "text": "requests would resolve to the guestbook",
    "start": "1152440",
    "end": "1154440"
  },
  {
    "text": "service I achieved this by adding in the",
    "start": "1154440",
    "end": "1156640"
  },
  {
    "text": "following line to the guestbook service",
    "start": "1156640",
    "end": "1158520"
  },
  {
    "text": "inside the docker compose file this line",
    "start": "1158520",
    "end": "1160960"
  },
  {
    "text": "adds a label to all the guestbook docker",
    "start": "1160960",
    "end": "1162840"
  },
  {
    "text": "containers telling traffic to Route any",
    "start": "1162840",
    "end": "1165000"
  },
  {
    "text": "HTTP requests that contain the zen.",
    "start": "1165000",
    "end": "1167400"
  },
  {
    "text": "cloudhost to This Server this because",
    "start": "1167400",
    "end": "1169559"
  },
  {
    "text": "traffic listens to events on the docker",
    "start": "1169559",
    "end": "1171240"
  },
  {
    "text": "socket then this was all I needed to do",
    "start": "1171240",
    "end": "1173320"
  },
  {
    "text": "in order to set up reverse proxying",
    "start": "1173320",
    "end": "1175559"
  },
  {
    "text": "pretty simple after redeploying Docker",
    "start": "1175559",
    "end": "1177559"
  },
  {
    "text": "compose I was then able to visit the",
    "start": "1177559",
    "end": "1179640"
  },
  {
    "text": "zenful cloud domain in my browser and it",
    "start": "1179640",
    "end": "1181880"
  },
  {
    "text": "now resolved to my guestbook web app",
    "start": "1181880",
    "end": "1184039"
  },
  {
    "text": "with that traffic was now working as my",
    "start": "1184039",
    "end": "1186080"
  },
  {
    "text": "reverse proxy and my DNS record was now",
    "start": "1186080",
    "end": "1189039"
  },
  {
    "text": "resolving to the guestbook web app but",
    "start": "1189039",
    "end": "1191440"
  },
  {
    "text": "traffic's abilities don't just sto there",
    "start": "1191440",
    "end": "1194000"
  },
  {
    "text": "and I was able to use it to mark off",
    "start": "1194000",
    "end": "1195919"
  },
  {
    "text": "another requirement on my checklist",
    "start": "1195919",
    "end": "1198039"
  },
  {
    "text": "setting up a load balancer to show this",
    "start": "1198039",
    "end": "1200400"
  },
  {
    "text": "in action I first scaled up the number",
    "start": "1200400",
    "end": "1202360"
  },
  {
    "text": "of guestbook instances I had to three",
    "start": "1202360",
    "end": "1204760"
  },
  {
    "text": "replicas using the following Docker",
    "start": "1204760",
    "end": "1207120"
  },
  {
    "text": "compose command then when I went and",
    "start": "1207120",
    "end": "1209159"
  },
  {
    "text": "refreshed the page a number of times I",
    "start": "1209159",
    "end": "1211159"
  },
  {
    "text": "could see in the logs that each of the",
    "start": "1211159",
    "end": "1212600"
  },
  {
    "text": "requests were being balanced across the",
    "start": "1212600",
    "end": "1214679"
  },
  {
    "text": "three instances all of this was being",
    "start": "1214679",
    "end": "1216919"
  },
  {
    "text": "handled under the hood by traffic",
    "start": "1216919",
    "end": "1218799"
  },
  {
    "text": "without needing to add in any additional",
    "start": "1218799",
    "end": "1220960"
  },
  {
    "text": "configuration this is really nice now",
    "start": "1220960",
    "end": "1223880"
  },
  {
    "text": "you may be thinking what's the point of",
    "start": "1223880",
    "end": "1225400"
  },
  {
    "text": "a load balancer on a single node as it",
    "start": "1225400",
    "end": "1227720"
  },
  {
    "text": "doesn't exactly improve performance",
    "start": "1227720",
    "end": "1229840"
  },
  {
    "text": "whilst this is the case it does do",
    "start": "1229840",
    "end": "1231679"
  },
  {
    "text": "something else however which is improves",
    "start": "1231679",
    "end": "1233799"
  },
  {
    "text": "the reliability of the service through",
    "start": "1233799",
    "end": "1235600"
  },
  {
    "text": "increased availability for example if",
    "start": "1235600",
    "end": "1238200"
  },
  {
    "text": "one of the guestbook server instances",
    "start": "1238200",
    "end": "1240000"
  },
  {
    "text": "goes down due to say a panic traffic can",
    "start": "1240000",
    "end": "1242960"
  },
  {
    "text": "then route the requests to the other two",
    "start": "1242960",
    "end": "1244919"
  },
  {
    "text": "Services whilst the failing instance",
    "start": "1244919",
    "end": "1246799"
  },
  {
    "text": "comes back online this helps to improve",
    "start": "1246799",
    "end": "1249080"
  },
  {
    "text": "the overall user experience keeping",
    "start": "1249080",
    "end": "1251159"
  },
  {
    "text": "availability high and therefore having",
    "start": "1251159",
    "end": "1253280"
  },
  {
    "text": "three instances up and running is",
    "start": "1253280",
    "end": "1255080"
  },
  {
    "text": "usually a good idea especially as it",
    "start": "1255080",
    "end": "1257120"
  },
  {
    "text": "doesn't cost anything extra given how",
    "start": "1257120",
    "end": "1259159"
  },
  {
    "text": "much memory we have on this VPS so in",
    "start": "1259159",
    "end": "1262120"
  },
  {
    "text": "order to make this change persistent I",
    "start": "1262120",
    "end": "1264000"
  },
  {
    "text": "added in the following replicas block to",
    "start": "1264000",
    "end": "1266080"
  },
  {
    "text": "the guestbook service in the docker",
    "start": "1266080",
    "end": "1267840"
  },
  {
    "text": "compos file which also meant I could now",
    "start": "1267840",
    "end": "1270320"
  },
  {
    "text": "check off the load balancer for my",
    "start": "1270320",
    "end": "1272200"
  },
  {
    "text": "production ready requirements as well as",
    "start": "1272200",
    "end": "1274720"
  },
  {
    "text": "low balancing traffic also produces",
    "start": "1274720",
    "end": "1276960"
  },
  {
    "text": "another feature that is on our list TLS",
    "start": "1276960",
    "end": "1279640"
  },
  {
    "text": "certificates in the past I've typically",
    "start": "1279640",
    "end": "1281720"
  },
  {
    "text": "achieved this for engine X using let's",
    "start": "1281720",
    "end": "1283559"
  },
  {
    "text": "encrypt with Search bot which is a",
    "start": "1283559",
    "end": "1285559"
  },
  {
    "text": "service that both obtains certificates",
    "start": "1285559",
    "end": "1287520"
  },
  {
    "text": "and automatically use them for you for",
    "start": "1287520",
    "end": "1290000"
  },
  {
    "text": "this VPS however I didn't need to use it",
    "start": "1290000",
    "end": "1292400"
  },
  {
    "text": "as traffic already has this",
    "start": "1292400",
    "end": "1293760"
  },
  {
    "text": "functionality built in as I mentioned",
    "start": "1293760",
    "end": "1296120"
  },
  {
    "text": "before traffic is really doing a lot of",
    "start": "1296120",
    "end": "1298240"
  },
  {
    "text": "the heavy lifting when it comes to this",
    "start": "1298240",
    "end": "1299960"
  },
  {
    "text": "production ready VPS in order to enable",
    "start": "1299960",
    "end": "1302760"
  },
  {
    "text": "automatic generation of TLS certificates",
    "start": "1302760",
    "end": "1305039"
  },
  {
    "text": "all I needed to do was add in the",
    "start": "1305039",
    "end": "1306640"
  },
  {
    "text": "following lines into the reverse proxy",
    "start": "1306640",
    "end": "1308640"
  },
  {
    "text": "Services command list the first line",
    "start": "1308640",
    "end": "1311200"
  },
  {
    "text": "prevents any Docker containers from",
    "start": "1311200",
    "end": "1312799"
  },
  {
    "text": "being exposed by default this means that",
    "start": "1312799",
    "end": "1315600"
  },
  {
    "text": "in order for traffic to expose a service",
    "start": "1315600",
    "end": "1317520"
  },
  {
    "text": "through its proxy the service will need",
    "start": "1317520",
    "end": "1319400"
  },
  {
    "text": "an explicit label added to it next I",
    "start": "1319400",
    "end": "1322240"
  },
  {
    "text": "then defined an entry point called Web",
    "start": "1322240",
    "end": "1324000"
  },
  {
    "text": "secure pointing this to Port 443 which",
    "start": "1324000",
    "end": "1326919"
  },
  {
    "text": "is the port used for https underneath",
    "start": "1326919",
    "end": "1330080"
  },
  {
    "text": "this I then added in the necessary",
    "start": "1330080",
    "end": "1331840"
  },
  {
    "text": "arguments to define a certificate",
    "start": "1331840",
    "end": "1333480"
  },
  {
    "text": "resolver called my resolver in order to",
    "start": "1333480",
    "end": "1335799"
  },
  {
    "text": "generate the TLs certificates the first",
    "start": "1335799",
    "end": "1338320"
  },
  {
    "text": "of these arguments defines the challenge",
    "start": "1338320",
    "end": "1340240"
  },
  {
    "text": "type which in my case was TLS next I",
    "start": "1340240",
    "end": "1343520"
  },
  {
    "text": "defined the email address to be",
    "start": "1343520",
    "end": "1344919"
  },
  {
    "text": "associated with the Certificate request",
    "start": "1344919",
    "end": "1347360"
  },
  {
    "text": "followed by the location of where to",
    "start": "1347360",
    "end": "1349200"
  },
  {
    "text": "store the certificate data afterwards I",
    "start": "1349200",
    "end": "1351720"
  },
  {
    "text": "then replace the reference to Port 80",
    "start": "1351720",
    "end": "1353640"
  },
  {
    "text": "with Port 443 meaning that the load",
    "start": "1353640",
    "end": "1356240"
  },
  {
    "text": "balancer would only be accessible over",
    "start": "1356240",
    "end": "1358760"
  },
  {
    "text": "https lastly I then defined a volume",
    "start": "1358760",
    "end": "1361279"
  },
  {
    "text": "mapping of let's encrypt to the/ lets",
    "start": "1361279",
    "end": "1363559"
  },
  {
    "text": "encrypt directory of the container",
    "start": "1363559",
    "end": "1365440"
  },
  {
    "text": "before adding in three more labels to",
    "start": "1365440",
    "end": "1367080"
  },
  {
    "text": "the guest book service the first of",
    "start": "1367080",
    "end": "1369200"
  },
  {
    "text": "these is the explicit label to enable",
    "start": "1369200",
    "end": "1371159"
  },
  {
    "text": "traffic to proxy to this service which",
    "start": "1371159",
    "end": "1373159"
  },
  {
    "text": "was now needed given that I had just",
    "start": "1373159",
    "end": "1374880"
  },
  {
    "text": "disabled automatic exposure the next",
    "start": "1374880",
    "end": "1377400"
  },
  {
    "text": "label told traffic that as well as",
    "start": "1377400",
    "end": "1378880"
  },
  {
    "text": "needing the host of zen. cloud requests",
    "start": "1378880",
    "end": "1381960"
  },
  {
    "text": "would also need to come in on the web",
    "start": "1381960",
    "end": "1383480"
  },
  {
    "text": "secure Port I.E Port 443 in order to be",
    "start": "1383480",
    "end": "1386840"
  },
  {
    "text": "routed to this service and the third and",
    "start": "1386840",
    "end": "1389080"
  },
  {
    "text": "final label told the router to use the",
    "start": "1389080",
    "end": "1390919"
  },
  {
    "text": "certificate resolver that we just",
    "start": "1390919",
    "end": "1392559"
  },
  {
    "text": "defined the last thing I needed to add",
    "start": "1392559",
    "end": "1394720"
  },
  {
    "text": "to this file was to define the let's",
    "start": "1394720",
    "end": "1396200"
  },
  {
    "text": "encrypt Docker volume that I was using",
    "start": "1396200",
    "end": "1397960"
  },
  {
    "text": "to store the certificate data with",
    "start": "1397960",
    "end": "1400200"
  },
  {
    "text": "everything added in order to configure",
    "start": "1400200",
    "end": "1401720"
  },
  {
    "text": "TLS I restarted the docker compose and",
    "start": "1401720",
    "end": "1404600"
  },
  {
    "text": "waited for about 5 minutes for the",
    "start": "1404600",
    "end": "1406200"
  },
  {
    "text": "Certificate request to take place one it",
    "start": "1406200",
    "end": "1408799"
  },
  {
    "text": "was completed I was then able to access",
    "start": "1408799",
    "end": "1410880"
  },
  {
    "text": "my guest book over https unfortunately",
    "start": "1410880",
    "end": "1414120"
  },
  {
    "text": "however this setup did have another",
    "start": "1414120",
    "end": "1416159"
  },
  {
    "text": "issue because I had disabled the HTTP",
    "start": "1416159",
    "end": "1418720"
  },
  {
    "text": "Port I could no longer access the",
    "start": "1418720",
    "end": "1420600"
  },
  {
    "text": "website by using its domain name on the",
    "start": "1420600",
    "end": "1422440"
  },
  {
    "text": "browser which by default will attempt to",
    "start": "1422440",
    "end": "1424880"
  },
  {
    "text": "resolve to the HTTP protocol on Port 80",
    "start": "1424880",
    "end": "1427919"
  },
  {
    "text": "because of this any attempts would",
    "start": "1427919",
    "end": "1429279"
  },
  {
    "text": "eventually result in the time out to fix",
    "start": "1429279",
    "end": "1432039"
  },
  {
    "text": "this I needed to set up an HTTP redirect",
    "start": "1432039",
    "end": "1435120"
  },
  {
    "text": "which would redirect any HTTP requests",
    "start": "1435120",
    "end": "1437320"
  },
  {
    "text": "on Port at to https I.E 443 in traffic",
    "start": "1437320",
    "end": "1442200"
  },
  {
    "text": "this is done by adding in the following",
    "start": "1442200",
    "end": "1443919"
  },
  {
    "text": "three labels as well as adding in Port",
    "start": "1443919",
    "end": "1446159"
  },
  {
    "text": "80 back into the port list now when I",
    "start": "1446159",
    "end": "1448720"
  },
  {
    "text": "tried to access my website using HTTP it",
    "start": "1448720",
    "end": "1451559"
  },
  {
    "text": "would automatically redirect me to",
    "start": "1451559",
    "end": "1453960"
  },
  {
    "text": "https with that I had managed to check",
    "start": "1453960",
    "end": "1456480"
  },
  {
    "text": "off another item off my requirements",
    "start": "1456480",
    "end": "1458600"
  },
  {
    "text": "list and the next production ready",
    "start": "1458600",
    "end": "1460360"
  },
  {
    "text": "feature to add was automated deployments",
    "start": "1460360",
    "end": "1463200"
  },
  {
    "text": "the goal of this requirement was to make",
    "start": "1463200",
    "end": "1464919"
  },
  {
    "text": "it so that whenever I pushed up a change",
    "start": "1464919",
    "end": "1466880"
  },
  {
    "text": "be it either a code change via git or a",
    "start": "1466880",
    "end": "1469600"
  },
  {
    "text": "new Docker image the VPS would",
    "start": "1469600",
    "end": "1471679"
  },
  {
    "text": "automatically pull down the new version",
    "start": "1471679",
    "end": "1473440"
  },
  {
    "text": "of the app and redeploy the services",
    "start": "1473440",
    "end": "1475760"
  },
  {
    "text": "initially I was expecting this to be the",
    "start": "1475760",
    "end": "1477679"
  },
  {
    "text": "most challenging feature especially as",
    "start": "1477679",
    "end": "1479720"
  },
  {
    "text": "there's a number of different ways to",
    "start": "1479720",
    "end": "1481200"
  },
  {
    "text": "achieve this fortunately the approach I",
    "start": "1481200",
    "end": "1483240"
  },
  {
    "text": "decided to take was rather simple that",
    "start": "1483240",
    "end": "1485559"
  },
  {
    "text": "approach was to use a service called",
    "start": "1485559",
    "end": "1487320"
  },
  {
    "text": "Watchtower which works really well when",
    "start": "1487320",
    "end": "1489320"
  },
  {
    "text": "it comes to Docker compose Watchtower",
    "start": "1489320",
    "end": "1491720"
  },
  {
    "text": "works by watching for any images that",
    "start": "1491720",
    "end": "1493600"
  },
  {
    "text": "are defined in your Docker composed",
    "start": "1493600",
    "end": "1495240"
  },
  {
    "text": "Services then when it detects that a new",
    "start": "1495240",
    "end": "1497600"
  },
  {
    "text": "version of the image has been pushed",
    "start": "1497600",
    "end": "1499440"
  },
  {
    "text": "it'll pull down this image update the",
    "start": "1499440",
    "end": "1501360"
  },
  {
    "text": "containers and restart any Associated",
    "start": "1501360",
    "end": "1503600"
  },
  {
    "text": "services in order to set this up I added",
    "start": "1503600",
    "end": "1506200"
  },
  {
    "text": "in the following Watchtower service into",
    "start": "1506200",
    "end": "1508279"
  },
  {
    "text": "the docker compose with the following",
    "start": "1508279",
    "end": "1510240"
  },
  {
    "text": "three command arguments the first of",
    "start": "1510240",
    "end": "1512440"
  },
  {
    "text": "which was the label enable which",
    "start": "1512440",
    "end": "1514440"
  },
  {
    "text": "enforces the use of a label in order to",
    "start": "1514440",
    "end": "1516640"
  },
  {
    "text": "explicitly Define which Services",
    "start": "1516640",
    "end": "1518320"
  },
  {
    "text": "Watchtower should monitor the next two",
    "start": "1518320",
    "end": "1520480"
  },
  {
    "text": "lines is the argument of interval",
    "start": "1520480",
    "end": "1522360"
  },
  {
    "text": "followed by the parameter of 30 which",
    "start": "1522360",
    "end": "1525000"
  },
  {
    "text": "specifies the interval time and seconds",
    "start": "1525000",
    "end": "1527120"
  },
  {
    "text": "that Watchtower should pull for new",
    "start": "1527120",
    "end": "1528960"
  },
  {
    "text": "services in my case I set this to be 30",
    "start": "1528960",
    "end": "1531760"
  },
  {
    "text": "seconds next just like with traffic I",
    "start": "1531760",
    "end": "1534480"
  },
  {
    "text": "also needed to define the docker socket",
    "start": "1534480",
    "end": "1536559"
  },
  {
    "text": "as a volume for this service this is",
    "start": "1536559",
    "end": "1538760"
  },
  {
    "text": "used by Watchtower to perform any Docker",
    "start": "1538760",
    "end": "1540919"
  },
  {
    "text": "based actions now all that remained was",
    "start": "1540919",
    "end": "1543399"
  },
  {
    "text": "to scroll down to the guestbook service",
    "start": "1543399",
    "end": "1545159"
  },
  {
    "text": "and add in the following label which",
    "start": "1545159",
    "end": "1547039"
  },
  {
    "text": "would enable Watchtower to monitor it as",
    "start": "1547039",
    "end": "1549520"
  },
  {
    "text": "well as this I also had to make another",
    "start": "1549520",
    "end": "1551360"
  },
  {
    "text": "change to explicitly set the docker",
    "start": "1551360",
    "end": "1553159"
  },
  {
    "text": "image tag of the guestbook service to be",
    "start": "1553159",
    "end": "1555080"
  },
  {
    "text": "Pro this is because Watchtower only",
    "start": "1555080",
    "end": "1557279"
  },
  {
    "text": "monitors for image changes with the same",
    "start": "1557279",
    "end": "1559600"
  },
  {
    "text": "image tag so in order to trigger a",
    "start": "1559600",
    "end": "1561880"
  },
  {
    "text": "redeploy I would need to push a new",
    "start": "1561880",
    "end": "1563799"
  },
  {
    "text": "version of that image with the same tag",
    "start": "1563799",
    "end": "1565919"
  },
  {
    "text": "in this case prod normally this isn't my",
    "start": "1565919",
    "end": "1568200"
  },
  {
    "text": "preferred way of tagging Docker images",
    "start": "1568200",
    "end": "1570399"
  },
  {
    "text": "instead I much prefer to keep these",
    "start": "1570399",
    "end": "1572000"
  },
  {
    "text": "immutable as there are a number of",
    "start": "1572000",
    "end": "1573799"
  },
  {
    "text": "benefits to doing so with that being",
    "start": "1573799",
    "end": "1575760"
  },
  {
    "text": "said Watchtower is incredibly easy to",
    "start": "1575760",
    "end": "1578000"
  },
  {
    "text": "get automated deployment set up so in",
    "start": "1578000",
    "end": "1580320"
  },
  {
    "text": "this case I decided to not let",
    "start": "1580320",
    "end": "1582159"
  },
  {
    "text": "Perfection be the enemy of done with",
    "start": "1582159",
    "end": "1584600"
  },
  {
    "text": "Watchtower configured the next thing to",
    "start": "1584600",
    "end": "1586399"
  },
  {
    "text": "do was to restart Docker compose",
    "start": "1586399",
    "end": "1588520"
  },
  {
    "text": "followed by testing the automated",
    "start": "1588520",
    "end": "1590200"
  },
  {
    "text": "deployment capabilities to do so I made",
    "start": "1590200",
    "end": "1592760"
  },
  {
    "text": "a quick change to the index page of the",
    "start": "1592760",
    "end": "1594679"
  },
  {
    "text": "guest book application before building",
    "start": "1594679",
    "end": "1596919"
  },
  {
    "text": "and pushing a new image to the GitHub",
    "start": "1596919",
    "end": "1599000"
  },
  {
    "text": "container registry then through watching",
    "start": "1599000",
    "end": "1601200"
  },
  {
    "text": "the logs I could see that Watchtower",
    "start": "1601200",
    "end": "1603000"
  },
  {
    "text": "detected the new image pulled it down",
    "start": "1603000",
    "end": "1605039"
  },
  {
    "text": "and restarted the containers opening up",
    "start": "1605039",
    "end": "1607360"
  },
  {
    "text": "the web page in a browser I could then",
    "start": "1607360",
    "end": "1609080"
  },
  {
    "text": "see that the new version was deployed",
    "start": "1609080",
    "end": "1610679"
  },
  {
    "text": "and my changes were now live with that I",
    "start": "1610679",
    "end": "1613320"
  },
  {
    "text": "had a basic automated deploy system in",
    "start": "1613320",
    "end": "1615520"
  },
  {
    "text": "place one that I could easily expand out",
    "start": "1615520",
    "end": "1617640"
  },
  {
    "text": "to a c ICD pipeline using GitHub actions",
    "start": "1617640",
    "end": "1620880"
  },
  {
    "text": "however when testing this solution I did",
    "start": "1620880",
    "end": "1623080"
  },
  {
    "text": "notice one issue whilst watching the",
    "start": "1623080",
    "end": "1625159"
  },
  {
    "text": "logs I noticed that the default behavior",
    "start": "1625159",
    "end": "1627240"
  },
  {
    "text": "of Watchtower was to First pull down a",
    "start": "1627240",
    "end": "1629000"
  },
  {
    "text": "new image stop all the running",
    "start": "1629000",
    "end": "1630799"
  },
  {
    "text": "containers before then starting them",
    "start": "1630799",
    "end": "1632520"
  },
  {
    "text": "back up again with the new version this",
    "start": "1632520",
    "end": "1634720"
  },
  {
    "text": "meant that there was a brief window of",
    "start": "1634720",
    "end": "1636520"
  },
  {
    "text": "time where none of the containers were",
    "start": "1636520",
    "end": "1638039"
  },
  {
    "text": "running and if a user tried to hit the",
    "start": "1638039",
    "end": "1640200"
  },
  {
    "text": "service at this time they would then",
    "start": "1640200",
    "end": "1641919"
  },
  {
    "text": "receive an error status code this",
    "start": "1641919",
    "end": "1644120"
  },
  {
    "text": "deployment behavior isn't one I would",
    "start": "1644120",
    "end": "1645679"
  },
  {
    "text": "consider as production ready as it",
    "start": "1645679",
    "end": "1647640"
  },
  {
    "text": "produces the possibility of a bad user",
    "start": "1647640",
    "end": "1649760"
  },
  {
    "text": "experience when the system redeploys",
    "start": "1649760",
    "end": "1652159"
  },
  {
    "text": "fortunately Watchtower does provide",
    "start": "1652159",
    "end": "1653840"
  },
  {
    "text": "support for Rolling releases which is",
    "start": "1653840",
    "end": "1655960"
  },
  {
    "text": "where each service is updated one after",
    "start": "1655960",
    "end": "1657919"
  },
  {
    "text": "the other rather than updating them all",
    "start": "1657919",
    "end": "1659840"
  },
  {
    "text": "at the same time to enable this with",
    "start": "1659840",
    "end": "1661799"
  },
  {
    "text": "Watchtower is as simple as passing in",
    "start": "1661799",
    "end": "1663559"
  },
  {
    "text": "the Das Dash rolling restart flag now",
    "start": "1663559",
    "end": "1666159"
  },
  {
    "text": "when I push up a change if you check the",
    "start": "1666159",
    "end": "1667880"
  },
  {
    "text": "logs you can see that this is done in a",
    "start": "1667880",
    "end": "1669840"
  },
  {
    "text": "rolling release way restarting each of",
    "start": "1669840",
    "end": "1672360"
  },
  {
    "text": "my instances one by one with that my VPS",
    "start": "1672360",
    "end": "1675720"
  },
  {
    "text": "server was almost in a production ready",
    "start": "1675720",
    "end": "1677720"
  },
  {
    "text": "state the final requirement on my list",
    "start": "1677720",
    "end": "1680080"
  },
  {
    "text": "was to make sure that if something went",
    "start": "1680080",
    "end": "1681600"
  },
  {
    "text": "wrong and my website was down I would be",
    "start": "1681600",
    "end": "1683720"
  },
  {
    "text": "notified of it one way to do this in a",
    "start": "1683720",
    "end": "1685960"
  },
  {
    "text": "typical production environment is to use",
    "start": "1685960",
    "end": "1687919"
  },
  {
    "text": "observability which means collecting",
    "start": "1687919",
    "end": "1689760"
  },
  {
    "text": "logs metrics and traces and storing them",
    "start": "1689760",
    "end": "1691960"
  },
  {
    "text": "in an Associated database such as using",
    "start": "1691960",
    "end": "1694600"
  },
  {
    "text": "Prometheus when it comes to metrics or",
    "start": "1694600",
    "end": "1696519"
  },
  {
    "text": "using the elk stack when it comes to",
    "start": "1696519",
    "end": "1698200"
  },
  {
    "text": "logs all of this would end up requiring",
    "start": "1698200",
    "end": "1700440"
  },
  {
    "text": "a lot more infrastructure so instead for",
    "start": "1700440",
    "end": "1703080"
  },
  {
    "text": "my single node VPS I decided to use a",
    "start": "1703080",
    "end": "1705679"
  },
  {
    "text": "simple uptime monitor these work by by",
    "start": "1705679",
    "end": "1708320"
  },
  {
    "text": "periodically checking if a website is",
    "start": "1708320",
    "end": "1710360"
  },
  {
    "text": "available and will send a notification",
    "start": "1710360",
    "end": "1712720"
  },
  {
    "text": "if they detect an error there's a number",
    "start": "1712720",
    "end": "1715039"
  },
  {
    "text": "of different uptime monitors out there",
    "start": "1715039",
    "end": "1717240"
  },
  {
    "text": "but the one that I decided to use was",
    "start": "1717240",
    "end": "1719039"
  },
  {
    "text": "uptime robot which has a pretty decent",
    "start": "1719039",
    "end": "1721360"
  },
  {
    "text": "free tiar to do so all I needed to do",
    "start": "1721360",
    "end": "1723799"
  },
  {
    "text": "was pass in the URL to uptime Monitor",
    "start": "1723799",
    "end": "1726480"
  },
  {
    "text": "and it would begin monitoring my service",
    "start": "1726480",
    "end": "1728919"
  },
  {
    "text": "now if my web application happens to",
    "start": "1728919",
    "end": "1730919"
  },
  {
    "text": "become unavailable uptime robot will",
    "start": "1730919",
    "end": "1733240"
  },
  {
    "text": "send me an email notification letting me",
    "start": "1733240",
    "end": "1735679"
  },
  {
    "text": "know with the monitoring setup all that",
    "start": "1735679",
    "end": "1738159"
  },
  {
    "text": "remain now was to remove the traffic web",
    "start": "1738159",
    "end": "1740159"
  },
  {
    "text": "UI and redeploy the composed stack using",
    "start": "1740159",
    "end": "1743039"
  },
  {
    "text": "the dasd flag to run this in a detached",
    "start": "1743039",
    "end": "1745640"
  },
  {
    "text": "state with that I had managed to set up",
    "start": "1745640",
    "end": "1748120"
  },
  {
    "text": "a production ready VPS to use with my",
    "start": "1748120",
    "end": "1750320"
  },
  {
    "text": "server whilst it may not be as simple as",
    "start": "1750320",
    "end": "1752240"
  },
  {
    "text": "using a platform as a service it",
    "start": "1752240",
    "end": "1754360"
  },
  {
    "text": "certainly wasn't as challenging to set",
    "start": "1754360",
    "end": "1756120"
  },
  {
    "text": "up as I initially thought in fact I'm",
    "start": "1756120",
    "end": "1758720"
  },
  {
    "text": "really happy with how this turned out",
    "start": "1758720",
    "end": "1760679"
  },
  {
    "text": "and by using tools such as traffic and",
    "start": "1760679",
    "end": "1762480"
  },
  {
    "text": "Watchtower I was pleasantly surprised by",
    "start": "1762480",
    "end": "1764600"
  },
  {
    "text": "the amount of functionality you can",
    "start": "1764600",
    "end": "1766120"
  },
  {
    "text": "easily set up in a short amount of time",
    "start": "1766120",
    "end": "1768440"
  },
  {
    "text": "I want to give a big thank you to",
    "start": "1768440",
    "end": "1769640"
  },
  {
    "text": "hostinger for sponsoring this video and",
    "start": "1769640",
    "end": "1771720"
  },
  {
    "text": "making the whole thing possible if",
    "start": "1771720",
    "end": "1773519"
  },
  {
    "text": "you're interested in obtaining your own",
    "start": "1773519",
    "end": "1775080"
  },
  {
    "text": "VPS then I recommend checking them out",
    "start": "1775080",
    "end": "1777200"
  },
  {
    "text": "using the link in the description down",
    "start": "1777200",
    "end": "1778799"
  },
  {
    "text": "below if you do make sure to use the",
    "start": "1778799",
    "end": "1781039"
  },
  {
    "text": "coupon code dreams of code for that",
    "start": "1781039",
    "end": "1782880"
  },
  {
    "text": "additional discount otherwise a big",
    "start": "1782880",
    "end": "1785159"
  },
  {
    "text": "thank you for watching and I'll see you",
    "start": "1785159",
    "end": "1786919"
  },
  {
    "text": "on the next one",
    "start": "1786919",
    "end": "1790440"
  }
]