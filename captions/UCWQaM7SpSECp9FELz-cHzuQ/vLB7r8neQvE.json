[
  {
    "start": "0",
    "end": "201000"
  },
  {
    "text": "lately I've been building my own web application in order to host my upcoming course rather than using a full stack",
    "start": "799",
    "end": "8000"
  },
  {
    "text": "JavaScript framework to achieve this I instead decided to use go and built it as a multi-page application also known",
    "start": "8000",
    "end": "15519"
  },
  {
    "text": "as an MPA so far I've been really happy with this decision as it's allowed me to take",
    "start": "15519",
    "end": "21560"
  },
  {
    "text": "full control of my entire application stack using a language that I'm pretty familiar with this has not only allowed",
    "start": "21560",
    "end": "29160"
  },
  {
    "text": "me to be more Ive but it's also made building the web application extremely",
    "start": "29160",
    "end": "34239"
  },
  {
    "text": "enjoyable which isn't something I personally feel when working with tools such as",
    "start": "34239",
    "end": "39640"
  },
  {
    "text": "nextjs however when I was first getting started building this application there was one thing I was Finding to be rather",
    "start": "39640",
    "end": "45760"
  },
  {
    "text": "tedious client side interactivity whil there isn't a huge amount in my course application I still",
    "start": "45760",
    "end": "52640"
  },
  {
    "text": "wanted there to be a little for things such as being able to dynamically open and close a side menu for mobile layouts",
    "start": "52640",
    "end": "60359"
  },
  {
    "text": "as well as accordion type collapsing and expanding in order to display the lessons belonging to one of the course's",
    "start": "60359",
    "end": "66159"
  },
  {
    "text": "modules and even the odd modal dialogue initially I was achieving this interactivity using ID attributes and",
    "start": "66159",
    "end": "73640"
  },
  {
    "text": "script tags inside of my HTML or in my case in sad Temple and as anyone who's",
    "start": "73640",
    "end": "79479"
  },
  {
    "text": "used script tags in ID fields for a long enough time will tell you it pretty much sucks in fact it sucked so much that I",
    "start": "79479",
    "end": "86680"
  },
  {
    "text": "decided to look for other options because I'm also using using HDMX in my stack when it comes to more Ajax based",
    "start": "86680",
    "end": "93759"
  },
  {
    "text": "interactivity I decided to try and make use of it in order to toggle CSS classes in order to both show and hide my side",
    "start": "93759",
    "end": "100799"
  },
  {
    "text": "menus whilst this approach did work HDMX isn't really designed for client side",
    "start": "100799",
    "end": "106200"
  },
  {
    "text": "interactivity and as soon as I wanted to start Ting more than simple class toggling HDMX started to become limiting",
    "start": "106200",
    "end": "113320"
  },
  {
    "text": "so I decided to search for another solution one that would allow me to still have an MPA using HDMX but would",
    "start": "113320",
    "end": "120039"
  },
  {
    "text": "make it easy to also add client side interactivity and as it turns out there's one that's often recommended for",
    "start": "120039",
    "end": "126640"
  },
  {
    "text": "this particular setup and so I decided to give it a go that solution is Alpine",
    "start": "126640",
    "end": "131840"
  },
  {
    "text": "JS which has not only made writing an interactive front end incredibly simple",
    "start": "131840",
    "end": "136920"
  },
  {
    "text": "but it allows me to do so in a way that I actually really enjoy in order to see",
    "start": "136920",
    "end": "142160"
  },
  {
    "text": "how I'm currently using Alpine let's take a look at the development version of my course platform which I have here",
    "start": "142160",
    "end": "148480"
  },
  {
    "text": "if I go ahead and turn it into the mobile version as follows you can see here I have a hamburger menu on the side",
    "start": "148480",
    "end": "155560"
  },
  {
    "text": "which if I click will allow me to open up a side menu in addition to this side menu if I go back to the full screen",
    "start": "155560",
    "end": "162640"
  },
  {
    "text": "you'll also notice that I have a normal side menu on the left hand side which displays my modules and any lessons",
    "start": "162640",
    "end": "168760"
  },
  {
    "text": "underneath each one if I click on a module that's opened you can see I get a nice collapsing animation and I can",
    "start": "168760",
    "end": "174840"
  },
  {
    "text": "click on it again to open the lessons back up in addition to this if I click another module such such as the counting",
    "start": "174840",
    "end": "180640"
  },
  {
    "text": "words module it'll close the existing introduction model and open up the new one displaying all of the lessons inside",
    "start": "180640",
    "end": "188239"
  },
  {
    "text": "and it's done so in a nice animated way that looks I think kind of great all of",
    "start": "188239",
    "end": "193400"
  },
  {
    "text": "this has been achieved with me only using The Primitives that Alpine JS provides as well as some minimal",
    "start": "193400",
    "end": "199440"
  },
  {
    "text": "JavaScript Expressions so how does Alpine JS work well in order to show",
    "start": "199440",
    "end": "205000"
  },
  {
    "start": "201000",
    "end": "236000"
  },
  {
    "text": "that here I have a sample project that I've whipped up just for demonstration purposes is you can actually find a link",
    "start": "205000",
    "end": "211519"
  },
  {
    "text": "to this project in the GitHub repo down below this example is a simple HTML web",
    "start": "211519",
    "end": "216799"
  },
  {
    "text": "page that has a side menu on the right hand side and a button that we want to be able to use to hide our menu whenever",
    "start": "216799",
    "end": "223319"
  },
  {
    "text": "it's clicked currently if I click the button nothing happens and the same as if I click the X in the actual menu",
    "start": "223319",
    "end": "228959"
  },
  {
    "text": "itself therefore let's go about adding in some interactivity to this web page so that I can both hide the menu and",
    "start": "228959",
    "end": "235480"
  },
  {
    "text": "show it dynamically before we take a look at how simple it is to add Interactive using Alpine JS let's first",
    "start": "235480",
    "end": "242120"
  },
  {
    "start": "236000",
    "end": "322000"
  },
  {
    "text": "add it in using vanilla JavaScript in order to do so we want to add an onclick Handler to the button online 21 which is",
    "start": "242120",
    "end": "249720"
  },
  {
    "text": "going to be used to toggle a class inside of our actual side menu so let's go ahead and assign it the function of",
    "start": "249720",
    "end": "256919"
  },
  {
    "text": "toggle menu then we can go ahead and Define this toggle menu function inside of a script as follows I'm going to put",
    "start": "256919",
    "end": "262880"
  },
  {
    "text": "this right here and let's define our toggle menu function next we then want to pull out the actual element we want",
    "start": "262880",
    "end": "269800"
  },
  {
    "text": "toggle which we can do by using the document doget element by ID function",
    "start": "269800",
    "end": "276720"
  },
  {
    "text": "passing in the ID of our element the element we're going to want to pull out is this side menu or this aside on line",
    "start": "276720",
    "end": "283160"
  },
  {
    "text": "34 which currently doesn't have an ID but we'll add that in shortly in any case let's just go ahead and pass in the",
    "start": "283160",
    "end": "288759"
  },
  {
    "text": "side menu ID which We'll add in in a minute then when it comes to actually toggling the display state of this menu",
    "start": "288759",
    "end": "294520"
  },
  {
    "text": "the easiest way to do this is to just modify the class list in this case to",
    "start": "294520",
    "end": "299840"
  },
  {
    "text": "Ling the hidden class which is a Tailwind CSS class that basically resolves to display none Now All That",
    "start": "299840",
    "end": "306320"
  },
  {
    "text": "Remains is to go ahead and actually add in our ID attribute which we can do as follows with that our interactivity",
    "start": "306320",
    "end": "313400"
  },
  {
    "text": "should now be set up if I go ahead and navigate back to the browser page and refresh it now when I click the hide",
    "start": "313400",
    "end": "318919"
  },
  {
    "text": "menu button you can see we're both hiding and showing our actual side menu whilst this was pretty simple to set up",
    "start": "318919",
    "end": "325199"
  },
  {
    "start": "322000",
    "end": "365000"
  },
  {
    "text": "it's also pretty naive for example there's no transitions for when the side menu enters or leaves it's just either",
    "start": "325199",
    "end": "332400"
  },
  {
    "text": "visible or not Additionally the button we're using to toggle the menu's visibility it's text is saying hide menu",
    "start": "332400",
    "end": "339759"
  },
  {
    "text": "regardless of the menu's State instead I think it would be a little nicer if we could have text that represented the",
    "start": "339759",
    "end": "345720"
  },
  {
    "text": "menu state so only showing hide menu when the menu is showing and having the",
    "start": "345720",
    "end": "350919"
  },
  {
    "text": "text of show menu when the menu is hidden so rather than implementing this all in JavaScript which I think would be",
    "start": "350919",
    "end": "356840"
  },
  {
    "text": "a bit of a pain let's instead take a look at how we can do so using Alpine JS first I'm just going to go ahead and",
    "start": "356840",
    "end": "362800"
  },
  {
    "text": "revert the code back to where it was before now that our code is back in its initial States let's go about setting up",
    "start": "362800",
    "end": "368520"
  },
  {
    "start": "365000",
    "end": "487000"
  },
  {
    "text": "Alpine JS in order to add in some interactivity to do so we first need to import Alpine JS into our actual code in",
    "start": "368520",
    "end": "376039"
  },
  {
    "text": "order to do so let's take a look at the installation guide from the documentation which tells us there are two different ways to include Alpine",
    "start": "376039",
    "end": "382759"
  },
  {
    "text": "into our project by either including it from a script tag or importing it as a module let's go ahead and add the script",
    "start": "382759",
    "end": "389160"
  },
  {
    "text": "tag into our head element as follows with that we're now ready to begin adding in Alpine JS in order to do so",
    "start": "389160",
    "end": "396479"
  },
  {
    "text": "the first thing we're going to need to do is Define some state to do so in Alpine JS you can use the X data",
    "start": "396479",
    "end": "403199"
  },
  {
    "text": "directive which is where everything associated with alpine Begins the X data",
    "start": "403199",
    "end": "408479"
  },
  {
    "text": "directive defines a chunk of HTML as an Alpine component and provides the ractive data for that component to",
    "start": "408479",
    "end": "415240"
  },
  {
    "text": "reference as you can see it gives a little example right here as for the scope of the X data directive well any",
    "start": "415240",
    "end": "421599"
  },
  {
    "text": "properties defined are available to all child elements even ones inside other",
    "start": "421599",
    "end": "426919"
  },
  {
    "text": "nested X data components this for me is a really nice feature as it allows you to constrain the state defined by Alpine",
    "start": "426919",
    "end": "433479"
  },
  {
    "text": "JS to only child elements from where you define it in HTML therefore in order to add some interactivity to our side menu",
    "start": "433479",
    "end": "440879"
  },
  {
    "text": "let's go ahead and Define an X data attributes in the following div we could also Define it in the body but I think",
    "start": "440879",
    "end": "447479"
  },
  {
    "text": "keeping the scope as minimal as possible is the right approach and given that this div contains both our buttons and",
    "start": "447479",
    "end": "454319"
  },
  {
    "text": "our side menus then we're going to Define it here as for the actual State itself in this case it's going to be a",
    "start": "454319",
    "end": "459400"
  },
  {
    "text": "simple JavaScript object which we can define a property of menu open as follows and we'll set it to be true in",
    "start": "459400",
    "end": "467280"
  },
  {
    "text": "fact let's actually go ahead and set this to be false so that we can see whether or not the Alpine state is working with our state defined we can",
    "start": "467280",
    "end": "474159"
  },
  {
    "text": "now go about adding it in as an actual attribute the elements that we want to be hidden is the side menu found on line",
    "start": "474159",
    "end": "480680"
  },
  {
    "text": "29 in order to use this state to hide an element in Alpine JS there are a couple of approaches you can take you can use a",
    "start": "480680",
    "end": "487840"
  },
  {
    "start": "487000",
    "end": "549000"
  },
  {
    "text": "similar approach to what we did when we were using vanilla JavaScript which is to bind a class based on the value of",
    "start": "487840",
    "end": "494240"
  },
  {
    "text": "this actual State as you can see this is done using the X bind attribute there is",
    "start": "494240",
    "end": "499680"
  },
  {
    "text": "however a simpler approach so we'll park X bind for the moment and instead look at the X show attribute which is one of",
    "start": "499680",
    "end": "507280"
  },
  {
    "text": "the most useful and Powerful directives in Pine JS in all honesty when it comes to using Alpine 90% of the time it's",
    "start": "507280",
    "end": "514240"
  },
  {
    "text": "going to be with the X show attribute in any case the X show attributes provides",
    "start": "514240",
    "end": "519440"
  },
  {
    "text": "an expressive way to show and hide Dom elements so let's go ahead and use it when it comes to our side menu first",
    "start": "519440",
    "end": "526440"
  },
  {
    "text": "defining the X show attribute as being the menu open property in this case we",
    "start": "526440",
    "end": "531959"
  },
  {
    "text": "have it set to false so when I go ahead and reload the page the menu should be hidden which it is so far so good now",
    "start": "531959",
    "end": "538680"
  },
  {
    "text": "that we've managed to to hide our menu successfully let's go ahead and change the menu open property back to true so",
    "start": "538680",
    "end": "544480"
  },
  {
    "text": "that our menu is appearing and we can now go about setting up the ability to hide this menu whenever we click our",
    "start": "544480",
    "end": "549560"
  },
  {
    "start": "549000",
    "end": "590000"
  },
  {
    "text": "hide button to do so we need to bind to The Click method of the button similar to what we did before with onclick",
    "start": "549560",
    "end": "556560"
  },
  {
    "text": "however when it comes to Alpine JS instead of using the onclick attribute you instead use the xon attribute which",
    "start": "556560",
    "end": "563600"
  },
  {
    "text": "allows you to run code on dispatched Dom events in this case you can see an example for the click event using the x-",
    "start": "563600",
    "end": "571800"
  },
  {
    "text": "onclick so let's go ahead and do the same thing for our button X on click and",
    "start": "571800",
    "end": "577440"
  },
  {
    "text": "in this case we want to set menu open to equal false now if we head back on over to our web page and reload it when I",
    "start": "577440",
    "end": "584720"
  },
  {
    "text": "click the hide menu button it should hide the actual menu which it does great",
    "start": "584720",
    "end": "591079"
  },
  {
    "start": "590000",
    "end": "661000"
  },
  {
    "text": "however when I go to click it again it won't actually show it therefore let's go ahead and change our buttons behavior",
    "start": "591079",
    "end": "596320"
  },
  {
    "text": "from only hiding the menu to also showing it in this case we want to add the ability to toggle which is pretty",
    "start": "596320",
    "end": "602360"
  },
  {
    "text": "easy to do all we have to do is just set the menu open property to be the inverse of the menu open now if I reload the",
    "start": "602360",
    "end": "609079"
  },
  {
    "text": "page again you can see we're able to hide and close the menu whenever I click the button so far so good however this",
    "start": "609079",
    "end": "616160"
  },
  {
    "text": "is exactly the same as we had before when it came to our vanilla JavaScript but now that we have Alpine set up we",
    "start": "616160",
    "end": "621800"
  },
  {
    "text": "can actually go about adding in some more interactivity to this web page let's go ahead and add in the ability to",
    "start": "621800",
    "end": "627839"
  },
  {
    "text": "close the side menu whenever we we click the cross button to do so is pretty similar to what we're doing already with",
    "start": "627839",
    "end": "633680"
  },
  {
    "text": "the button on line 22 however rather than defining the X onclick attribute",
    "start": "633680",
    "end": "638959"
  },
  {
    "text": "let's instead use the short hand syntax which is provided by Alpine this is using the at symbol before the events",
    "start": "638959",
    "end": "645639"
  },
  {
    "text": "name so we can go ahead and change our X on click to be at click then for the expression",
    "start": "645639",
    "end": "654200"
  },
  {
    "text": "itself we want to set the menu opens value to be false rather than toggling it now if we head back to our actual web",
    "start": "654200",
    "end": "661200"
  },
  {
    "start": "661000",
    "end": "749000"
  },
  {
    "text": "page and if I refresh the page again this time we should be able to hide the menu by clicking the big X which we're",
    "start": "661200",
    "end": "668120"
  },
  {
    "text": "able to do so far so good with our menu now hiding and showing the next thing I want to go ahead and change is the",
    "start": "668120",
    "end": "674320"
  },
  {
    "text": "actual text on our hide menu button as you can see the text is remaining static",
    "start": "674320",
    "end": "679880"
  },
  {
    "text": "no matter what the state of the menu actually is it would be nice if we could actually have the text of this menu",
    "start": "679880",
    "end": "685240"
  },
  {
    "text": "changed depending on whether or not the menu is showing so if it's being hidden we can have the text of show menu and if",
    "start": "685240",
    "end": "692320"
  },
  {
    "text": "it's being shown we could have the text of hide menu which it currently is statically defined as fortunately when",
    "start": "692320",
    "end": "698000"
  },
  {
    "text": "it comes to Alpine JS having Dynamic text is pretty easy as we can just use the X text attribute this attribute will",
    "start": "698000",
    "end": "705880"
  },
  {
    "text": "set the text content of an element to the result of a given expression so let's go ahead and use the X text",
    "start": "705880",
    "end": "712000"
  },
  {
    "text": "attribute when it comes to our actual button here I'm quickly going to go ahead and just reorganize this and now",
    "start": "712000",
    "end": "719399"
  },
  {
    "text": "we can go ahead and Define X text is equal to and we can use a Turner",
    "start": "719399",
    "end": "725920"
  },
  {
    "text": "expression of menu open if so then we want to use the text of hide menu and if",
    "start": "725920",
    "end": "732120"
  },
  {
    "text": "not we'll go ahead and Define this as show menu now if I head back on over to",
    "start": "732120",
    "end": "737240"
  },
  {
    "text": "the page and refresh it we can see that our buttons text now changes depending on the state of the side menu if we",
    "start": "737240",
    "end": "744079"
  },
  {
    "text": "wanted to do this using normal vanilla javascripts this would be a lot more challenging as we would have to then",
    "start": "744079",
    "end": "749760"
  },
  {
    "start": "749000",
    "end": "844000"
  },
  {
    "text": "find the button element and update the state there as well as updating the button text we can also update other",
    "start": "749760",
    "end": "756199"
  },
  {
    "text": "attributes for the button as well to see how this works let's take a look at updating the color of the button",
    "start": "756199",
    "end": "761519"
  },
  {
    "text": "depending on whether or not the menu is showing to achieve this we can use the X bind directive which allows you to set",
    "start": "761519",
    "end": "768760"
  },
  {
    "text": "HTML attributes on elements based on the result of the expression for instance you can use it to set the placeholder or",
    "start": "768760",
    "end": "775279"
  },
  {
    "text": "in our case you can use it to bind to classes there's actually a couple of syn taxes you can use when it comes to",
    "start": "775279",
    "end": "780760"
  },
  {
    "text": "binding on classes as the class attribute itself has special behavior depending on whether or not you want to",
    "start": "780760",
    "end": "786560"
  },
  {
    "text": "override existing classes in your actual element in our case we're just going to",
    "start": "786560",
    "end": "791720"
  },
  {
    "text": "go ahead and use the simple behavior for this demonstration to do so let's go ahead and Define the X bind attribute",
    "start": "791720",
    "end": "798320"
  },
  {
    "text": "and bind it to our class property then for the expression we can go ahead and do menu",
    "start": "798320",
    "end": "804680"
  },
  {
    "text": "open let's go ahead and set this to be a background of indigo 400 which is what",
    "start": "804680",
    "end": "810320"
  },
  {
    "text": "we currently have and we'll also do a hover class of background Indigo 400",
    "start": "810320",
    "end": "817000"
  },
  {
    "text": "with 80% opacity and whilst we're here let's go ahead and delete it from the actual class that we already",
    "start": "817000",
    "end": "824600"
  },
  {
    "text": "have then if the menu is not opened let's go ahead and set this to be a different color maybe pink we can do",
    "start": "824600",
    "end": "831279"
  },
  {
    "text": "pink of 400 and then hover background pink 400 with again ad",
    "start": "831279",
    "end": "839120"
  },
  {
    "text": "opacity okay with that change made if I go ahead and refresh the page and click the hide menu button you can see that in",
    "start": "839120",
    "end": "845800"
  },
  {
    "start": "844000",
    "end": "877000"
  },
  {
    "text": "addition to the text changing the background color of the button is changing as well what's awesome about",
    "start": "845800",
    "end": "851560"
  },
  {
    "text": "this is that you can also couple it with CSS transitions so if I go ahead and add",
    "start": "851560",
    "end": "857399"
  },
  {
    "text": "in the following class of transition Das colors duration to be say 200",
    "start": "857399",
    "end": "863160"
  },
  {
    "text": "milliseconds and we can do an ease in and out actually I don't know if I like easing when it comes to Colors we'll",
    "start": "863160",
    "end": "868519"
  },
  {
    "text": "leave that for the moment now if I head back on over refresh the page this time you can see the color transitions rather",
    "start": "868519",
    "end": "875720"
  },
  {
    "text": "than it just being a hard change whilst using CSS transitions is really nice to have that sort of Animation going on in",
    "start": "875720",
    "end": "882839"
  },
  {
    "start": "877000",
    "end": "1103000"
  },
  {
    "text": "your code it's not the only approach you can take as Alpine JS also provides an X",
    "start": "882839",
    "end": "888120"
  },
  {
    "text": "transition attribute this attribute allows you to easily create smooth transitions whenever an element is shown",
    "start": "888120",
    "end": "894160"
  },
  {
    "text": "or hidden and the documentation gives some examples of how to do so so let's go ahead and make use of it in order to",
    "start": "894160",
    "end": "899920"
  },
  {
    "text": "add a transition to our actual sidebar elements for whenever it's shown or hidden the easiest way to do so is to go",
    "start": "899920",
    "end": "906240"
  },
  {
    "text": "ahead and just use the X transition attribute before we do so let me go ahead and quickly tidy up this attribute",
    "start": "906240",
    "end": "911759"
  },
  {
    "text": "list then we can go ahead and just add the X transition attribute as follows now whenever I go ahead and toggle the",
    "start": "911759",
    "end": "917959"
  },
  {
    "text": "menu you can see there's a slight transition applied whilst this is awesome personally I don't think this is",
    "start": "917959",
    "end": "923120"
  },
  {
    "text": "the best transition when it comes to a side menu it's a sort of scaling and opacity transition and whilst it works",
    "start": "923120",
    "end": "930000"
  },
  {
    "text": "for many different elements in this case I would much rather there be a sort of sliding transition where the slide menu",
    "start": "930000",
    "end": "936199"
  },
  {
    "text": "will s to the right when it's being hidden and slide from the right when it's being shown fortunately Alpine JS",
    "start": "936199",
    "end": "942000"
  },
  {
    "text": "provides us the tools in order to achieve this as you can customize the X transition attributes even further for",
    "start": "942000",
    "end": "948880"
  },
  {
    "text": "example here you can do specific properties such as customizing the delay or customizing the opacity or even",
    "start": "948880",
    "end": "955199"
  },
  {
    "text": "customizing the scale however in our case we actually want to apply our own custom CSS classes for the entire",
    "start": "955199",
    "end": "961399"
  },
  {
    "text": "transition stages to do so let's go ahead and copy this code that we have in the documentation and we'll go ahead and",
    "start": "961399",
    "end": "968079"
  },
  {
    "text": "replace our call to the X transition attributes with these new properties instead if we take a quick look at these",
    "start": "968079",
    "end": "974360"
  },
  {
    "text": "transition attributes you can see we have a number of different attributes for enter three in total and for leave",
    "start": "974360",
    "end": "980079"
  },
  {
    "text": "as well the class is defined in the X transition enter attributes will be applied to the entire enter transition",
    "start": "980079",
    "end": "987440"
  },
  {
    "text": "and for the leave attributes the these classes will be applied for the entire leave as well however when it comes to",
    "start": "987440",
    "end": "992600"
  },
  {
    "text": "the start and end attributes these will be applied at the start or end of their relevant transition stage for example",
    "start": "992600",
    "end": "1000279"
  },
  {
    "text": "when the element is being shown it will start at opacity Z and scale 990 and it will end at opacity 100 and scale 100",
    "start": "1000279",
    "end": "1008120"
  },
  {
    "text": "this is the effect that we kind of already see where it comes in and out although now it's been set to be a",
    "start": "1008120",
    "end": "1013399"
  },
  {
    "text": "little bit slower due to the fact that we're using a transition of 300 in our case we want to make this a sliding",
    "start": "1013399",
    "end": "1018920"
  },
  {
    "text": "transition so let's go ahead and delete the actual start and end transitions for",
    "start": "1018920",
    "end": "1023959"
  },
  {
    "text": "both enter and leave and let's go ahead and actually set the duration to be 200 as well with our transitions cleared now",
    "start": "1023959",
    "end": "1030760"
  },
  {
    "text": "we want to determine what classes we want to use when it comes to our sliding transition if we take a quick look at",
    "start": "1030760",
    "end": "1037280"
  },
  {
    "text": "the tail and CSS documentation in our case we want to use the translate classes which allows you to change the",
    "start": "1037280",
    "end": "1043959"
  },
  {
    "text": "position of an element in our case we want to use the translate X properties",
    "start": "1043959",
    "end": "1049160"
  },
  {
    "text": "be it either translate x0 which means the element stays in its current position or the translate X full which",
    "start": "1049160",
    "end": "1055880"
  },
  {
    "text": "means that the element will be moved by its full width therefore when it comes",
    "start": "1055880",
    "end": "1060960"
  },
  {
    "text": "to starting we want to start off the end of the screen so we can go ahead and use the translate dx- full property and for",
    "start": "1060960",
    "end": "1069360"
  },
  {
    "text": "the end we'll set this to be translate dx- 0 then when it comes to our leave",
    "start": "1069360",
    "end": "1074880"
  },
  {
    "text": "transition we just basically want to apply the inverse so translate - x-0",
    "start": "1074880",
    "end": "1080679"
  },
  {
    "text": "meaning that the element remains where it currently is positioned at the start of the animation and then translate dx-",
    "start": "1080679",
    "end": "1087400"
  },
  {
    "text": "full for the end with that we should now have smooth animations whenever we show",
    "start": "1087400",
    "end": "1092600"
  },
  {
    "text": "and hide this menu which if I go ahead and test you can see it's working as expected and due to the fact that we're",
    "start": "1092600",
    "end": "1099360"
  },
  {
    "text": "using both ease in and ease out transitions makes this look really smooth so far so good let's go ahead and",
    "start": "1099360",
    "end": "1105559"
  },
  {
    "start": "1103000",
    "end": "1194000"
  },
  {
    "text": "set our menu open to be false initially which is our desired behavior and quickly take a look at how our web page",
    "start": "1105559",
    "end": "1111640"
  },
  {
    "text": "is looking so far it's looking pretty good however you'll notice that there is a bit of a visual artifact whenever I",
    "start": "1111640",
    "end": "1118799"
  },
  {
    "text": "refresh the page where we can briefly see the menu appear before it disappears this is unfortunately a side effect of",
    "start": "1118799",
    "end": "1125760"
  },
  {
    "text": "how Alpine JS Works in that because it's loaded after the HTML elements are",
    "start": "1125760",
    "end": "1130919"
  },
  {
    "text": "loaded then there's a brief blip where any elements that should be hidden by Alpine JS will be briefly visible",
    "start": "1130919",
    "end": "1137480"
  },
  {
    "text": "fortunately Alpine provides an attribute to resolve this which is the X cloak attribute as you can see sometimes when",
    "start": "1137480",
    "end": "1144440"
  },
  {
    "text": "you're using Aline JS for part of your template there is a blip where you might see your uninitialized template after",
    "start": "1144440",
    "end": "1150400"
  },
  {
    "text": "the page loads but before Alpine loads therefore let's go ahead and use the X cloak attribute in order to address this",
    "start": "1150400",
    "end": "1157320"
  },
  {
    "text": "in order to do so we first need to add the following CSS into our actual CSS code which we can do as follows opening",
    "start": "1157320",
    "end": "1164960"
  },
  {
    "text": "up the input. CSS which is where my CSS is being defined and pasting in the following CSS attributes with the CSS",
    "start": "1164960",
    "end": "1172799"
  },
  {
    "text": "defined we can now head back on over to our menu and for the element we want to hide initially we can go ahead and use",
    "start": "1172799",
    "end": "1178480"
  },
  {
    "text": "the X cloak attribute as follows now when I refresh the page we'll no longer",
    "start": "1178480",
    "end": "1183840"
  },
  {
    "text": "see the side menu being displayed with that we' managed to add in some simple client interactivity for showing and",
    "start": "1183840",
    "end": "1189320"
  },
  {
    "text": "hiding a slide menu which is pretty much the same thing that I've done on my own course website as you can see Alpine JS",
    "start": "1189320",
    "end": "1197240"
  },
  {
    "start": "1194000",
    "end": "1270000"
  },
  {
    "text": "makes it incredibly easy to interactivity into your application and it does so in a way that allows you to",
    "start": "1197240",
    "end": "1203080"
  },
  {
    "text": "keep all of the client interactivity code in line to the actual elements be it the state of the component the event",
    "start": "1203080",
    "end": "1209799"
  },
  {
    "text": "handlers or even the Expressions themselves this is a concept called locality of behavior which is a",
    "start": "1209799",
    "end": "1216520"
  },
  {
    "text": "philosophy that both tail and CSS and HDMX share the general idea is that",
    "start": "1216520",
    "end": "1221919"
  },
  {
    "text": "rather than separating your code across multiple places and grouping it by its concern for example storing your HTML",
    "start": "1221919",
    "end": "1228799"
  },
  {
    "text": "CSS and JavaScript in their own respective files you instead keep all of the relevant code inside of a component",
    "start": "1228799",
    "end": "1235320"
  },
  {
    "text": "or element local to where it's applied the benefit of doing so at least in my opinion is that it makes it easier to",
    "start": "1235320",
    "end": "1242400"
  },
  {
    "text": "both understand and rationalize where behavior is coming from be it client interactivity Ajax requests or even CSS",
    "start": "1242400",
    "end": "1250799"
  },
  {
    "text": "styling for me Alpine JS fits nicely into this Paradigm alongside both Tailwind CSS and HDMX the three of which",
    "start": "1250799",
    "end": "1258840"
  },
  {
    "text": "forming a sort of holy Trifecta when it comes to simple web development this also happens to make the three of these",
    "start": "1258840",
    "end": "1265000"
  },
  {
    "text": "a great option if you want to build web applications using more back-end languages such as rust or even python",
    "start": "1265000",
    "end": "1272360"
  },
  {
    "start": "1270000",
    "end": "1352000"
  },
  {
    "text": "speaking of which if you are looking to Learn Python or just computer science in general then that's where the sponsor of",
    "start": "1272360",
    "end": "1278880"
  },
  {
    "text": "today's video comes in brilliant.org brilliant is where you learn by doing",
    "start": "1278880",
    "end": "1284400"
  },
  {
    "text": "with thousands of interactive lessons in math data analysis programming and AI",
    "start": "1284400",
    "end": "1290000"
  },
  {
    "text": "the platform helps you to build critical thinking skills through problem solving rather than by memorization so whilst",
    "start": "1290000",
    "end": "1297279"
  },
  {
    "text": "You're Building Real World Knowledge on specific topics you'll also become a better thinker which is important when",
    "start": "1297279",
    "end": "1303600"
  },
  {
    "text": "it comes to writing code as most of the time you'll also be solving problems as",
    "start": "1303600",
    "end": "1308799"
  },
  {
    "text": "well as learning how to solve problems brilliant also provides a growing number of programming courses which are great",
    "start": "1308799",
    "end": "1314840"
  },
  {
    "text": "for building foundational knowledge when it comes to building real world appli apption as I mentioned if you're looking",
    "start": "1314840",
    "end": "1320679"
  },
  {
    "text": "to learn how to code in Python then brilliant can help through the applied python course which can help you to",
    "start": "1320679",
    "end": "1327120"
  },
  {
    "text": "learn the language so that one day you can begin building web applications using it as well as with alpine JS so to",
    "start": "1327120",
    "end": "1334679"
  },
  {
    "text": "try everything that brilliant has to offer free for 30 days visit brilliant.org dreams of code either by",
    "start": "1334679",
    "end": "1341000"
  },
  {
    "text": "scanning the QR code on screen or clicking the link in the description down below by doing so you'll also get",
    "start": "1341000",
    "end": "1347080"
  },
  {
    "text": "20% of Brilliance and your premium subscription a big thank you to brilliant for sponsoring this video so",
    "start": "1347080",
    "end": "1353880"
  },
  {
    "start": "1352000",
    "end": "1586000"
  },
  {
    "text": "now that we have a basic idea of how Alpine Works let's take a look at another example on how I use it in my",
    "start": "1353880",
    "end": "1359600"
  },
  {
    "text": "course platform in addition to using Alpine for showing and hiding my mobile side menus I'm also using it in order to",
    "start": "1359600",
    "end": "1367440"
  },
  {
    "text": "have accordian behavior when it comes to my modules and lessons this behavior is achieved by using one of Alpine's many",
    "start": "1367440",
    "end": "1374520"
  },
  {
    "text": "plugins specifically the collapse plugin which allows you to expand and collapse elements using smooth transitions in",
    "start": "1374520",
    "end": "1382200"
  },
  {
    "text": "order to see how this plug-in works here I have another example application this",
    "start": "1382200",
    "end": "1387240"
  },
  {
    "text": "time with a side menu that has a number of different tabs a courses tab an apps",
    "start": "1387240",
    "end": "1393039"
  },
  {
    "text": "Tab and a products tab Each of which have a number of items underneath let's take a look at how I use the collapse",
    "start": "1393039",
    "end": "1399279"
  },
  {
    "text": "plugin in order to make these side menus collapsible to do so we first need to add the actual plug-in to our code which",
    "start": "1399279",
    "end": "1406440"
  },
  {
    "text": "we can do by adding in the following script tab above where we import Alpine JS as for the actual code of this plugin",
    "start": "1406440",
    "end": "1412760"
  },
  {
    "text": "I'm actually defining these tabs using the X4 attribute provided by Alpine where I'm looping over the actual data",
    "start": "1412760",
    "end": "1419679"
  },
  {
    "text": "and creating my tabs from it normally I would do this using a templating engine",
    "start": "1419679",
    "end": "1425000"
  },
  {
    "text": "such as Temple or just standard go templates however for the meantime I wanted to do this entirely within Alpine",
    "start": "1425000",
    "end": "1431440"
  },
  {
    "text": "JS just to take a look at how it works in order to make our list elements collapsible let's begin by first",
    "start": "1431440",
    "end": "1437279"
  },
  {
    "text": "defining some state for each of the tabs we're creating using the X data attribute which we'll set to be is open",
    "start": "1437279",
    "end": "1444760"
  },
  {
    "text": "and we'll set it to be F followed by using the X show attribute on our individual items which we can do using",
    "start": "1444760",
    "end": "1450799"
  },
  {
    "text": "the following div X show is equal to is open and",
    "start": "1450799",
    "end": "1456360"
  },
  {
    "text": "lastly adding in some click behavior for our actual div in which case we'll just toggle the is open State using the",
    "start": "1456360",
    "end": "1464039"
  },
  {
    "text": "following line with that if I refresh the page we should see that each of the tabs is closed and when I click it it'll",
    "start": "1464039",
    "end": "1470799"
  },
  {
    "text": "open up now let's go ahead and add in some transitions which is as easy as adding the X collapse attribute in the",
    "start": "1470799",
    "end": "1476640"
  },
  {
    "text": "div we showing and hiding now if I go ahead and refresh the page in order to test it we should see our Tabs are able",
    "start": "1476640",
    "end": "1483159"
  },
  {
    "text": "to open and close with a collapse animation pretty simple but what about if we want to do it so that we only have",
    "start": "1483159",
    "end": "1489039"
  },
  {
    "text": "one menu open at a single time well in order to do so rather than using an X",
    "start": "1489039",
    "end": "1494279"
  },
  {
    "text": "data attribute on each element on our list which will cause them to have their own State instead we need to define a",
    "start": "1494279",
    "end": "1501559"
  },
  {
    "text": "single state element for all our tabs to share let's go ahead and create a shared",
    "start": "1501559",
    "end": "1506679"
  },
  {
    "text": "X data attribute on our on sorted list elements on line 38 then let's go ahead",
    "start": "1506679",
    "end": "1512039"
  },
  {
    "text": "and add in a property called open tab which will set to be an empty string this tab will be used to represent the",
    "start": "1512039",
    "end": "1518600"
  },
  {
    "text": "currently open tab if any and none if any of them aren't then for our actual",
    "start": "1518600",
    "end": "1523760"
  },
  {
    "text": "div we can go ahead and add in the following onclick event where we set the open tab value to be the current tab.",
    "start": "1523760",
    "end": "1530360"
  },
  {
    "text": "name Now All That Remains is to go ahead and Define our X show attribute which was set to be true if the open tab is",
    "start": "1530360",
    "end": "1537600"
  },
  {
    "text": "equal to the name of the current tab as follows and again we'll add in the X",
    "start": "1537600",
    "end": "1542960"
  },
  {
    "text": "collapse attribute now if I go ahead and refresh the page we we can open up our",
    "start": "1542960",
    "end": "1548200"
  },
  {
    "text": "tabs as we did before however if I open up another tab it should close the one that was already open which it does",
    "start": "1548200",
    "end": "1555240"
  },
  {
    "text": "unfortunately however we now have a bug where we can no longer collapse an open tab by clicking on it fortunately it's",
    "start": "1555240",
    "end": "1561960"
  },
  {
    "text": "pretty easy to solve this to do so we just need to add in the following turnery checking to see if the value of",
    "start": "1561960",
    "end": "1569520"
  },
  {
    "text": "open tab is the same as the current tab's name and if it is we'll set the open tab value to be an empty string",
    "start": "1569520",
    "end": "1576039"
  },
  {
    "text": "otherwise we'll set it to be the current tab's name now if I go ahead and refresh the page I should be able to open and",
    "start": "1576039",
    "end": "1581799"
  },
  {
    "text": "close a tab as follows and our existing behavior of being able to collapse and open tabs works in addition to the",
    "start": "1581799",
    "end": "1589360"
  },
  {
    "start": "1586000",
    "end": "1639000"
  },
  {
    "text": "collapse plugin Alpine JS also provides a number of other ones that can be really interesting for certain use cases",
    "start": "1589360",
    "end": "1595640"
  },
  {
    "text": "such as the mask plugin which allows you to automatically format a text input field for example this input field has a",
    "start": "1595640",
    "end": "1602760"
  },
  {
    "text": "mask applied so that whenever I enter a date such as 1301",
    "start": "1602760",
    "end": "1608120"
  },
  {
    "text": "1975 you can see it automatically formats it with the relevant slashes the",
    "start": "1608120",
    "end": "1614120"
  },
  {
    "text": "intersect plugin which allows you to react when an element enters the viewport or perhaps my favorite the",
    "start": "1614120",
    "end": "1619720"
  },
  {
    "text": "persist plugin which allows you to persist Alpine State across page reloads",
    "start": "1619720",
    "end": "1625360"
  },
  {
    "text": "this is really useful for persisting search filters active tabs or other features which can cause frustration if",
    "start": "1625360",
    "end": "1631679"
  },
  {
    "text": "their configuration is reset when refreshing a page therefore in order to round off this video let's take a quick",
    "start": "1631679",
    "end": "1638279"
  },
  {
    "text": "look at how the persist plug-in Works in order to do so here I have yet another",
    "start": "1638279",
    "end": "1643840"
  },
  {
    "start": "1639000",
    "end": "1746000"
  },
  {
    "text": "example web page this time a simple to-do list that I've built enti using",
    "start": "1643840",
    "end": "1649000"
  },
  {
    "text": "Alpine which is available on the/ too path in the web application and the HTML",
    "start": "1649000",
    "end": "1654880"
  },
  {
    "text": "for this page is in the to-do HTML file the page itself consists of a simple input field that will allow me to add",
    "start": "1654880",
    "end": "1661960"
  },
  {
    "text": "items onto my to-do list such as create Alpine JS video and finish full",
    "start": "1661960",
    "end": "1671039"
  },
  {
    "text": "stack go start a kit then I can go ahead and Mark these off by clicking the checkbox and it does",
    "start": "1671039",
    "end": "1677640"
  },
  {
    "text": "some Dynam DC CSS changing additionally if I add something that I want to remove I can just click the delete button",
    "start": "1677640",
    "end": "1683320"
  },
  {
    "text": "however if I refresh the page my to-do list disappears which is not only annoying but is also not a very good",
    "start": "1683320",
    "end": "1689640"
  },
  {
    "text": "experience for a to-do list which is meant to help me remember things to do rather than forget them therefore let's",
    "start": "1689640",
    "end": "1696360"
  },
  {
    "text": "go ahead and add in the persist plugin so I no longer forget to do things to do so let's go ahead and begin by first",
    "start": "1696360",
    "end": "1702679"
  },
  {
    "text": "copying the script tag to my clipboard and adding it in as follows just above where we're import supporting Alpine JS",
    "start": "1702679",
    "end": "1710080"
  },
  {
    "text": "then in order to persist our Alpine State all we need to do is wrap it inside of the dollar persist function",
    "start": "1710080",
    "end": "1717120"
  },
  {
    "text": "which we can do as follows here you can see my to-do lists are defined on the following line so if I go ahead and use",
    "start": "1717120",
    "end": "1723799"
  },
  {
    "text": "persist wrapping it as follows I should now have a to-do list that persists across refreshes so let's go ahead and",
    "start": "1723799",
    "end": "1731039"
  },
  {
    "text": "add in some tasks as follows and if I go ahead and refresh the page you can see",
    "start": "1731039",
    "end": "1736360"
  },
  {
    "text": "they still remain additionally if I go ahead and delete tasks you can see they still apply and the actual state of each",
    "start": "1736360",
    "end": "1743399"
  },
  {
    "text": "task should persist as well all of that without having to write any custom JavaScript that covers the basics of how",
    "start": "1743399",
    "end": "1750320"
  },
  {
    "start": "1746000",
    "end": "1802000"
  },
  {
    "text": "I've been using Alpine JS when it comes to my own course website using it to make implementing client interactivity",
    "start": "1750320",
    "end": "1756919"
  },
  {
    "text": "incredibly simple adding a bit of flare to any multi-page web application additionally by coupling Alpine JS with",
    "start": "1756919",
    "end": "1763279"
  },
  {
    "text": "HTM X it makes me feel like I don't need to worry so much about not choosing a Javas script frontend framework when it",
    "start": "1763279",
    "end": "1769799"
  },
  {
    "text": "comes to building web applications which is something I was always slightly concerned with before in fact I actually",
    "start": "1769799",
    "end": "1776120"
  },
  {
    "text": "have a couple of projects I already have written in nextjs that I want to migrate over to using go and Alpine which will",
    "start": "1776120",
    "end": "1782480"
  },
  {
    "text": "give me a chance to really push the boundaries of what I can achieve using it in any case I'm interested to hear",
    "start": "1782480",
    "end": "1788080"
  },
  {
    "text": "your thoughts have you been using Alpine JS when it comes to your own projects and if so do you happen to have any tips",
    "start": "1788080",
    "end": "1794000"
  },
  {
    "text": "you can share with me let me know in the comments down below otherwise I want want to give a big thank you for watching and I'll see you on the next",
    "start": "1794000",
    "end": "1800559"
  },
  {
    "text": "one",
    "start": "1800559",
    "end": "1802960"
  }
]