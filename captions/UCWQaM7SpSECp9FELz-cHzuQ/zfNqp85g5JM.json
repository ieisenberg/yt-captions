[
  {
    "start": "0",
    "end": "36000"
  },
  {
    "text": "Docker is one of my most used tools when",
    "start": "80",
    "end": "2159"
  },
  {
    "text": "it comes to software development with",
    "start": "2159",
    "end": "4080"
  },
  {
    "text": "the most obvious use case being the",
    "start": "4080",
    "end": "5799"
  },
  {
    "text": "containerization of application",
    "start": "5799",
    "end": "7480"
  },
  {
    "text": "deployments and whilst Docker is amazing",
    "start": "7480",
    "end": "9599"
  },
  {
    "text": "for this it's not the only thing it's",
    "start": "9599",
    "end": "11400"
  },
  {
    "text": "good at in fact there's many different",
    "start": "11400",
    "end": "13440"
  },
  {
    "text": "ways I use Docker to help improve my",
    "start": "13440",
    "end": "15320"
  },
  {
    "text": "software development workflow so when",
    "start": "15320",
    "end": "17640"
  },
  {
    "text": "the docker team reached out and asked if",
    "start": "17640",
    "end": "19279"
  },
  {
    "text": "I'd do a video on some of their newer",
    "start": "19279",
    "end": "20840"
  },
  {
    "text": "features I jumped at the opportunity and",
    "start": "20840",
    "end": "23400"
  },
  {
    "text": "thought it'd be a good chance to talk",
    "start": "23400",
    "end": "24800"
  },
  {
    "text": "about some of the more unusual ways that",
    "start": "24800",
    "end": "26560"
  },
  {
    "text": "I use it so for disclosure this video is",
    "start": "26560",
    "end": "29279"
  },
  {
    "text": "sponsored by Docker which means we'll",
    "start": "29279",
    "end": "31160"
  },
  {
    "text": "also talk about these three commands on",
    "start": "31160",
    "end": "32800"
  },
  {
    "text": "screen throughout the video the unusual",
    "start": "32800",
    "end": "34800"
  },
  {
    "text": "stuff however that's all me my first",
    "start": "34800",
    "end": "37480"
  },
  {
    "start": "36000",
    "end": "109000"
  },
  {
    "text": "unusual use of Docker is to use it as a",
    "start": "37480",
    "end": "39840"
  },
  {
    "text": "time machine since Docker hub's release",
    "start": "39840",
    "end": "42120"
  },
  {
    "text": "in 2014 we've had an append only library",
    "start": "42120",
    "end": "44680"
  },
  {
    "text": "of operating systems programming",
    "start": "44680",
    "end": "46399"
  },
  {
    "text": "languages and other software that we can",
    "start": "46399",
    "end": "48480"
  },
  {
    "text": "download and run at any time by running",
    "start": "48480",
    "end": "51039"
  },
  {
    "text": "the following command I'm able to easily",
    "start": "51039",
    "end": "53000"
  },
  {
    "text": "run an instance of UB 2 that was",
    "start": "53000",
    "end": "54600"
  },
  {
    "text": "released back in 2012 and whilst it's",
    "start": "54600",
    "end": "57079"
  },
  {
    "text": "always nice to take a trip down software",
    "start": "57079",
    "end": "58840"
  },
  {
    "text": "Memory Lane there's some big benefits to",
    "start": "58840",
    "end": "60920"
  },
  {
    "text": "being able to do this so easily one such",
    "start": "60920",
    "end": "63280"
  },
  {
    "text": "benefit is backwards compatibility for",
    "start": "63280",
    "end": "65640"
  },
  {
    "text": "example let's say my code needs to",
    "start": "65640",
    "end": "67360"
  },
  {
    "text": "compile on the last three major versions",
    "start": "67360",
    "end": "69240"
  },
  {
    "text": "of go rather than managing multiple",
    "start": "69240",
    "end": "71280"
  },
  {
    "text": "versions of the language in my",
    "start": "71280",
    "end": "72479"
  },
  {
    "text": "environment I can instead just use a",
    "start": "72479",
    "end": "74439"
  },
  {
    "text": "Docker file to test that my code",
    "start": "74439",
    "end": "75880"
  },
  {
    "text": "compiles on these older versions saving",
    "start": "75880",
    "end": "78119"
  },
  {
    "text": "me and my environment a bunch of",
    "start": "78119",
    "end": "80200"
  },
  {
    "text": "configuration as well as programming",
    "start": "80200",
    "end": "82119"
  },
  {
    "text": "languages and operating systems this can",
    "start": "82119",
    "end": "84520"
  },
  {
    "text": "also be applied to General applications",
    "start": "84520",
    "end": "86799"
  },
  {
    "text": "as well for example let's say I want to",
    "start": "86799",
    "end": "89280"
  },
  {
    "text": "test my fancy new website on an older",
    "start": "89280",
    "end": "91560"
  },
  {
    "text": "version of Firefox again I can easily do",
    "start": "91560",
    "end": "94320"
  },
  {
    "text": "this by using Docker without having to",
    "start": "94320",
    "end": "95920"
  },
  {
    "text": "install multiple versions of Firefox on",
    "start": "95920",
    "end": "98119"
  },
  {
    "text": "my system not only is Docker great for",
    "start": "98119",
    "end": "100680"
  },
  {
    "text": "ensuring your code has backwards",
    "start": "100680",
    "end": "102200"
  },
  {
    "text": "compatibility it's also rather useful",
    "start": "102200",
    "end": "104320"
  },
  {
    "text": "when your code has no forward",
    "start": "104320",
    "end": "105640"
  },
  {
    "text": "compatibility as well which brings me on",
    "start": "105640",
    "end": "107799"
  },
  {
    "text": "to my next use when it comes to dealing",
    "start": "107799",
    "end": "110360"
  },
  {
    "start": "109000",
    "end": "252000"
  },
  {
    "text": "with Legacy code things don't always",
    "start": "110360",
    "end": "112240"
  },
  {
    "text": "operate like they used to and whilst the",
    "start": "112240",
    "end": "114200"
  },
  {
    "text": "code itself might not change the",
    "start": "114200",
    "end": "115920"
  },
  {
    "text": "environment often does for example at my",
    "start": "115920",
    "end": "118680"
  },
  {
    "text": "last place of work we had a core",
    "start": "118680",
    "end": "120280"
  },
  {
    "text": "component of our data pipeline that was",
    "start": "120280",
    "end": "121920"
  },
  {
    "text": "written in Python 2 and it hadn't been",
    "start": "121920",
    "end": "124280"
  },
  {
    "text": "touched since",
    "start": "124280",
    "end": "125479"
  },
  {
    "text": "2019 occasionally this code needed to be",
    "start": "125479",
    "end": "128000"
  },
  {
    "text": "ran manually but as the years went by",
    "start": "128000",
    "end": "130599"
  },
  {
    "text": "this became harder and harder to achieve",
    "start": "130599",
    "end": "132680"
  },
  {
    "text": "this left us with two options either we",
    "start": "132680",
    "end": "134760"
  },
  {
    "text": "would have to find a way for anyone to",
    "start": "134760",
    "end": "136319"
  },
  {
    "text": "run this code or we'd rewrite it in Rust",
    "start": "136319",
    "end": "139000"
  },
  {
    "text": "and despite how excited we were to",
    "start": "139000",
    "end": "140760"
  },
  {
    "text": "perpetuate a stereotype we decided to",
    "start": "140760",
    "end": "142920"
  },
  {
    "text": "use Docker instead by containerizing",
    "start": "142920",
    "end": "145319"
  },
  {
    "text": "this component we were able to run it on",
    "start": "145319",
    "end": "147080"
  },
  {
    "text": "our local machines without having to",
    "start": "147080",
    "end": "148599"
  },
  {
    "text": "make any code changes the process of",
    "start": "148599",
    "end": "150840"
  },
  {
    "text": "doing this is now even easier than",
    "start": "150840",
    "end": "152640"
  },
  {
    "text": "before by using one of the new features",
    "start": "152640",
    "end": "154360"
  },
  {
    "text": "from Docker the docker init command this",
    "start": "154360",
    "end": "156959"
  },
  {
    "text": "command helps you to interactively set",
    "start": "156959",
    "end": "158760"
  },
  {
    "text": "up a project with the files needed to",
    "start": "158760",
    "end": "160480"
  },
  {
    "text": "both containerize your application and",
    "start": "160480",
    "end": "162159"
  },
  {
    "text": "deploy it locally as an example here is",
    "start": "162159",
    "end": "164680"
  },
  {
    "text": "an old node.js project I have from 2018",
    "start": "164680",
    "end": "167560"
  },
  {
    "text": "which I didn't dockerize I can Rectify",
    "start": "167560",
    "end": "170040"
  },
  {
    "text": "that using the docker init command upon",
    "start": "170040",
    "end": "172640"
  },
  {
    "text": "doing so Docker will automatically",
    "start": "172640",
    "end": "174400"
  },
  {
    "text": "detect the platform that my application",
    "start": "174400",
    "end": "176239"
  },
  {
    "text": "is using the command then suggests which",
    "start": "176239",
    "end": "178480"
  },
  {
    "text": "version of node.js I should use in this",
    "start": "178480",
    "end": "180800"
  },
  {
    "text": "case it's node 18 being the oldest LTS",
    "start": "180800",
    "end": "183840"
  },
  {
    "text": "version that's still supported Docker in",
    "start": "183840",
    "end": "185920"
  },
  {
    "text": "it will also detect the package manager",
    "start": "185920",
    "end": "187840"
  },
  {
    "text": "I'm using in this case mpm and my start",
    "start": "187840",
    "end": "190560"
  },
  {
    "text": "command I'm also able to modify any of",
    "start": "190560",
    "end": "192760"
  },
  {
    "text": "these if I want to I do have to specify",
    "start": "192760",
    "end": "195120"
  },
  {
    "text": "which Port my server runs on manually",
    "start": "195120",
    "end": "197200"
  },
  {
    "text": "however once it's done it generates",
    "start": "197200",
    "end": "198959"
  },
  {
    "text": "three files for me the first is the",
    "start": "198959",
    "end": "201040"
  },
  {
    "text": "docker file which we can use to build",
    "start": "201040",
    "end": "202640"
  },
  {
    "text": "our application image taking a look at",
    "start": "202640",
    "end": "204640"
  },
  {
    "text": "this file there's a number of best",
    "start": "204640",
    "end": "206040"
  },
  {
    "text": "practices that have been automatically",
    "start": "206040",
    "end": "207599"
  },
  {
    "text": "added through the docker init command",
    "start": "207599",
    "end": "209840"
  },
  {
    "text": "this is pretty great as it's sometimes",
    "start": "209840",
    "end": "211840"
  },
  {
    "text": "difficult to remember to add these best",
    "start": "211840",
    "end": "213400"
  },
  {
    "text": "practices in when setting up a new",
    "start": "213400",
    "end": "215200"
  },
  {
    "text": "project the next file it generates is",
    "start": "215200",
    "end": "217480"
  },
  {
    "text": "the docker ignore which is used to",
    "start": "217480",
    "end": "219239"
  },
  {
    "text": "exclude files from being added to the",
    "start": "219239",
    "end": "220879"
  },
  {
    "text": "docker context the one that's generated",
    "start": "220879",
    "end": "222920"
  },
  {
    "text": "is rather comprehensive handling files",
    "start": "222920",
    "end": "225000"
  },
  {
    "text": "from a number of different editors and",
    "start": "225000",
    "end": "226640"
  },
  {
    "text": "project types the last file it generates",
    "start": "226640",
    "end": "228799"
  },
  {
    "text": "is the docker compose compose doyo which",
    "start": "228799",
    "end": "231080"
  },
  {
    "text": "we can use to run our application",
    "start": "231080",
    "end": "232680"
  },
  {
    "text": "locally to do so I just use the docker",
    "start": "232680",
    "end": "235079"
  },
  {
    "text": "compose up-- build command which will",
    "start": "235079",
    "end": "237519"
  },
  {
    "text": "then both build and run my app with the",
    "start": "237519",
    "end": "239200"
  },
  {
    "text": "correct Port exposed allowing me to",
    "start": "239200",
    "end": "241640"
  },
  {
    "text": "interact with my application as if it",
    "start": "241640",
    "end": "243480"
  },
  {
    "text": "was running locally all in all the",
    "start": "243480",
    "end": "245480"
  },
  {
    "text": "docker init command helps to speed up a",
    "start": "245480",
    "end": "247319"
  },
  {
    "text": "lot of the tedious work that goes into",
    "start": "247319",
    "end": "249120"
  },
  {
    "text": "dockerizing your application which",
    "start": "249120",
    "end": "251159"
  },
  {
    "text": "actually segus nicely into my next use",
    "start": "251159",
    "end": "253599"
  },
  {
    "start": "252000",
    "end": "472000"
  },
  {
    "text": "case as well as dealing with Legacy code",
    "start": "253599",
    "end": "256040"
  },
  {
    "text": "Docker is rather useful for writing new",
    "start": "256040",
    "end": "257919"
  },
  {
    "text": "code as well because apps don't live in",
    "start": "257919",
    "end": "260239"
  },
  {
    "text": "a bubble local developer environments",
    "start": "260239",
    "end": "262240"
  },
  {
    "text": "need access to dependencies and tooling",
    "start": "262240",
    "end": "264040"
  },
  {
    "text": "that's required to build and deploy the",
    "start": "264040",
    "end": "265600"
  },
  {
    "text": "application and usually the versions of",
    "start": "265600",
    "end": "267960"
  },
  {
    "text": "these tools don't align with what's",
    "start": "267960",
    "end": "269360"
  },
  {
    "text": "provid by my package manager fortunately",
    "start": "269360",
    "end": "271840"
  },
  {
    "text": "however we can use Docker to solve this",
    "start": "271840",
    "end": "273919"
  },
  {
    "text": "one way that I've seen is to provide an",
    "start": "273919",
    "end": "275759"
  },
  {
    "text": "image that contains all of the versions",
    "start": "275759",
    "end": "277320"
  },
  {
    "text": "of tooling that a project uses then to",
    "start": "277320",
    "end": "279639"
  },
  {
    "text": "use any of the tools you can call the",
    "start": "279639",
    "end": "281320"
  },
  {
    "text": "docker run command mounting your Source",
    "start": "281320",
    "end": "283199"
  },
  {
    "text": "directory as a volume and then either",
    "start": "283199",
    "end": "285120"
  },
  {
    "text": "running your command inside of the",
    "start": "285120",
    "end": "286479"
  },
  {
    "text": "container or invoking it using the",
    "start": "286479",
    "end": "288199"
  },
  {
    "text": "docker run command whilst this works",
    "start": "288199",
    "end": "290320"
  },
  {
    "text": "pretty well it's not my preferred",
    "start": "290320",
    "end": "291639"
  },
  {
    "text": "approach to take instead I prefer to use",
    "start": "291639",
    "end": "293840"
  },
  {
    "text": "Docker compose which provides the Run",
    "start": "293840",
    "end": "295759"
  },
  {
    "text": "command to use this is pretty simple",
    "start": "295759",
    "end": "298320"
  },
  {
    "text": "inside of a composed. you can Define the",
    "start": "298320",
    "end": "300560"
  },
  {
    "text": "image of any tooling and its desired",
    "start": "300560",
    "end": "302320"
  },
  {
    "text": "version in this case terraform 1.4 then",
    "start": "302320",
    "end": "305440"
  },
  {
    "text": "using the docker compos run command I'm",
    "start": "305440",
    "end": "307560"
  },
  {
    "text": "able to execute this tool as if I was",
    "start": "307560",
    "end": "309479"
  },
  {
    "text": "inside of that container what's great",
    "start": "309479",
    "end": "311160"
  },
  {
    "text": "about this is that it's much easier to",
    "start": "311160",
    "end": "312720"
  },
  {
    "text": "add or update a single tool and Commit",
    "start": "312720",
    "end": "314560"
  },
  {
    "text": "This to your repository for other",
    "start": "314560",
    "end": "315880"
  },
  {
    "text": "developers on your team to make use of",
    "start": "315880",
    "end": "317960"
  },
  {
    "text": "this also elevates the composed. Amo",
    "start": "317960",
    "end": "319919"
  },
  {
    "text": "into a source of Truth for all of the",
    "start": "319919",
    "end": "321560"
  },
  {
    "text": "tooling that your team uses as well as",
    "start": "321560",
    "end": "323639"
  },
  {
    "text": "tooling this can also be set up for a",
    "start": "323639",
    "end": "325319"
  },
  {
    "text": "local environment of the application",
    "start": "325319",
    "end": "327000"
  },
  {
    "text": "stack as well by defining the",
    "start": "327000",
    "end": "328840"
  },
  {
    "text": "application and any dependencies such as",
    "start": "328840",
    "end": "331080"
  },
  {
    "text": "databases or other services in the",
    "start": "331080",
    "end": "333199"
  },
  {
    "text": "composed AO it's then a simple command",
    "start": "333199",
    "end": "335360"
  },
  {
    "text": "to start these services to both develop",
    "start": "335360",
    "end": "337240"
  },
  {
    "text": "and test against in the past however",
    "start": "337240",
    "end": "339360"
  },
  {
    "text": "this approach has been somewhat tedious",
    "start": "339360",
    "end": "341520"
  },
  {
    "text": "as anytime A change is made to the",
    "start": "341520",
    "end": "343199"
  },
  {
    "text": "application code it required manually",
    "start": "343199",
    "end": "345120"
  },
  {
    "text": "rebuilding the application's image",
    "start": "345120",
    "end": "347319"
  },
  {
    "text": "fortunately the team at Docker have",
    "start": "347319",
    "end": "348800"
  },
  {
    "text": "improved this with one of their new",
    "start": "348800",
    "end": "350360"
  },
  {
    "text": "features Docker compose watch by using",
    "start": "350360",
    "end": "352800"
  },
  {
    "text": "this new feature you can enable Docker",
    "start": "352800",
    "end": "354600"
  },
  {
    "text": "compose to watch for any file events on",
    "start": "354600",
    "end": "356479"
  },
  {
    "text": "your current working directory then when",
    "start": "356479",
    "end": "358520"
  },
  {
    "text": "a file is updated your application will",
    "start": "358520",
    "end": "360800"
  },
  {
    "text": "be automatically redeployed into your",
    "start": "360800",
    "end": "362720"
  },
  {
    "text": "stack to see this in action let's try",
    "start": "362720",
    "end": "364960"
  },
  {
    "text": "this out on the chatly project from my",
    "start": "364960",
    "end": "366599"
  },
  {
    "text": "rust socket iio video here I've created",
    "start": "366599",
    "end": "369400"
  },
  {
    "text": "a composed. yaml that contains all of",
    "start": "369400",
    "end": "371319"
  },
  {
    "text": "the services within my application stack",
    "start": "371319",
    "end": "373639"
  },
  {
    "text": "I have my front-end app written in react",
    "start": "373639",
    "end": "375880"
  },
  {
    "text": "and running on vit and I have my socket",
    "start": "375880",
    "end": "377960"
  },
  {
    "text": "iio server written in Rust let's go",
    "start": "377960",
    "end": "380120"
  },
  {
    "text": "ahead and add the watch feature first to",
    "start": "380120",
    "end": "382039"
  },
  {
    "text": "my front end to do so I need to add the",
    "start": "382039",
    "end": "384599"
  },
  {
    "text": "develop subsection with a watch field",
    "start": "384599",
    "end": "386400"
  },
  {
    "text": "inside to the front end service entry",
    "start": "386400",
    "end": "389000"
  },
  {
    "text": "the for this field is a list of rules",
    "start": "389000",
    "end": "391160"
  },
  {
    "text": "that control the automatic service",
    "start": "391160",
    "end": "392680"
  },
  {
    "text": "updates based on local file changes the",
    "start": "392680",
    "end": "395400"
  },
  {
    "text": "first entry will have the action of sync",
    "start": "395400",
    "end": "397720"
  },
  {
    "text": "which will keep any files in the path",
    "start": "397720",
    "end": "399520"
  },
  {
    "text": "directory the chatly web app",
    "start": "399520",
    "end": "401240"
  },
  {
    "text": "synchronized with the target directory",
    "start": "401240",
    "end": "403080"
  },
  {
    "text": "of the docker container this action is",
    "start": "403080",
    "end": "405160"
  },
  {
    "text": "great for any files that can be moved",
    "start": "405160",
    "end": "406639"
  },
  {
    "text": "across without needing to be recompiled",
    "start": "406639",
    "end": "408639"
  },
  {
    "text": "and works really well for our web app",
    "start": "408639",
    "end": "410759"
  },
  {
    "text": "lastly we just want to make sure we",
    "start": "410759",
    "end": "412080"
  },
  {
    "text": "ignore any changes to our node modules",
    "start": "412080",
    "end": "414560"
  },
  {
    "text": "instead We'll add another watch entry",
    "start": "414560",
    "end": "416960"
  },
  {
    "text": "this entry will cause our Docker image",
    "start": "416960",
    "end": "418599"
  },
  {
    "text": "to be rebuilt if anything changes in our",
    "start": "418599",
    "end": "420759"
  },
  {
    "text": "package.json with the changes made if I",
    "start": "420759",
    "end": "423280"
  },
  {
    "text": "go ahead and run Docker compose watch",
    "start": "423280",
    "end": "425280"
  },
  {
    "text": "and open up my application you'll see",
    "start": "425280",
    "end": "426919"
  },
  {
    "text": "that it's running as expected if I make",
    "start": "426919",
    "end": "428720"
  },
  {
    "text": "a change to the color scheme and save my",
    "start": "428720",
    "end": "430800"
  },
  {
    "text": "file the changes will then be synced to",
    "start": "430800",
    "end": "432759"
  },
  {
    "text": "the docker container and vit will hot",
    "start": "432759",
    "end": "434680"
  },
  {
    "text": "reload pretty cool let's add this to our",
    "start": "434680",
    "end": "436879"
  },
  {
    "text": "server as well heading back into the",
    "start": "436879",
    "end": "438960"
  },
  {
    "text": "composed. yaml I first need to add the",
    "start": "438960",
    "end": "441280"
  },
  {
    "text": "develop and watch fields to my server",
    "start": "441280",
    "end": "443360"
  },
  {
    "text": "Service as the rust code is fully",
    "start": "443360",
    "end": "445199"
  },
  {
    "text": "compiled we only need to add a rebuild",
    "start": "445199",
    "end": "447280"
  },
  {
    "text": "action here pointing it at the correct",
    "start": "447280",
    "end": "449120"
  },
  {
    "text": "part path and finally let's add an",
    "start": "449120",
    "end": "450840"
  },
  {
    "text": "ignore for the Target directory now if I",
    "start": "450840",
    "end": "453440"
  },
  {
    "text": "rerun Docker compose watch then add a",
    "start": "453440",
    "end": "455759"
  },
  {
    "text": "quick new feature into my rust server",
    "start": "455759",
    "end": "457919"
  },
  {
    "text": "when I save my file the image will start",
    "start": "457919",
    "end": "460080"
  },
  {
    "text": "rebuilding and once it's complete we'll",
    "start": "460080",
    "end": "462160"
  },
  {
    "text": "see the new feature appear this shows",
    "start": "462160",
    "end": "464479"
  },
  {
    "text": "the power of using Docker as a local",
    "start": "464479",
    "end": "466360"
  },
  {
    "text": "environment when it comes to writing",
    "start": "466360",
    "end": "467960"
  },
  {
    "text": "code and even though this is pretty",
    "start": "467960",
    "end": "469840"
  },
  {
    "text": "great I think it's nothing compared to",
    "start": "469840",
    "end": "471720"
  },
  {
    "text": "what it can do for writing tests when",
    "start": "471720",
    "end": "474240"
  },
  {
    "start": "472000",
    "end": "595000"
  },
  {
    "text": "building components that interface with",
    "start": "474240",
    "end": "475919"
  },
  {
    "text": "other dependencies for example code that",
    "start": "475919",
    "end": "478199"
  },
  {
    "text": "interacts with a database I prefer to",
    "start": "478199",
    "end": "480199"
  },
  {
    "text": "write tests that work against a real",
    "start": "480199",
    "end": "482159"
  },
  {
    "text": "instance instead of mocking one out this",
    "start": "482159",
    "end": "484440"
  },
  {
    "text": "is called integration testing and whilst",
    "start": "484440",
    "end": "486440"
  },
  {
    "text": "it provides a number of benefits it also",
    "start": "486440",
    "end": "488360"
  },
  {
    "text": "provides some challenges as well the",
    "start": "488360",
    "end": "490520"
  },
  {
    "text": "biggest challenge is ensuring a",
    "start": "490520",
    "end": "492080"
  },
  {
    "text": "consistent test environment no matter",
    "start": "492080",
    "end": "493960"
  },
  {
    "text": "where your tests are running fortunately",
    "start": "493960",
    "end": "496159"
  },
  {
    "text": "we can achieve this using Docker but not",
    "start": "496159",
    "end": "498000"
  },
  {
    "text": "in the way you might think one approach",
    "start": "498000",
    "end": "499919"
  },
  {
    "text": "is to create a test environment using",
    "start": "499919",
    "end": "501720"
  },
  {
    "text": "Docker compose which we would then start",
    "start": "501720",
    "end": "504000"
  },
  {
    "text": "before running our tests however this",
    "start": "504000",
    "end": "506120"
  },
  {
    "text": "presents a couple of problems because",
    "start": "506120",
    "end": "508280"
  },
  {
    "text": "the environment is being set up outside",
    "start": "508280",
    "end": "509960"
  },
  {
    "text": "of the test context there's no way for",
    "start": "509960",
    "end": "511879"
  },
  {
    "text": "the test to know whether the containers",
    "start": "511879",
    "end": "513599"
  },
  {
    "text": "are ready and in the correct State",
    "start": "513599",
    "end": "515760"
  },
  {
    "text": "additionally any connection information",
    "start": "515760",
    "end": "517399"
  },
  {
    "text": "has to be provided to our tests either",
    "start": "517399",
    "end": "519440"
  },
  {
    "text": "through the use of envar or hardcoding",
    "start": "519440",
    "end": "521959"
  },
  {
    "text": "this approach also doesn't handle Port",
    "start": "521959",
    "end": "523599"
  },
  {
    "text": "conflicts gracefully especially if",
    "start": "523599",
    "end": "525519"
  },
  {
    "text": "there's other versions of dependencies",
    "start": "525519",
    "end": "527080"
  },
  {
    "text": "running on a user's system all of these",
    "start": "527080",
    "end": "529200"
  },
  {
    "text": "issues can lead to the integration tests",
    "start": "529200",
    "end": "531160"
  },
  {
    "text": "being inconsistent earning them the",
    "start": "531160",
    "end": "533040"
  },
  {
    "text": "title of a flaky test for me a better",
    "start": "533040",
    "end": "536000"
  },
  {
    "text": "option is to use a package called test",
    "start": "536000",
    "end": "537920"
  },
  {
    "text": "containers the test test containers",
    "start": "537920",
    "end": "539680"
  },
  {
    "text": "framework allows you to Define any",
    "start": "539680",
    "end": "541360"
  },
  {
    "text": "dependency container images within your",
    "start": "541360",
    "end": "543320"
  },
  {
    "text": "test code these containers will then be",
    "start": "543320",
    "end": "545279"
  },
  {
    "text": "started and checked that they're healthy",
    "start": "545279",
    "end": "547040"
  },
  {
    "text": "before allowing your test code to",
    "start": "547040",
    "end": "548600"
  },
  {
    "text": "continue Additionally the package",
    "start": "548600",
    "end": "550360"
  },
  {
    "text": "ensures containers will run consistently",
    "start": "550360",
    "end": "552519"
  },
  {
    "text": "across different systems by exposing any",
    "start": "552519",
    "end": "554720"
  },
  {
    "text": "internal ports on unused ones in the",
    "start": "554720",
    "end": "556720"
  },
  {
    "text": "system Host this host Port can then be",
    "start": "556720",
    "end": "558839"
  },
  {
    "text": "attained by using a helper method which",
    "start": "558839",
    "end": "560839"
  },
  {
    "text": "we can then use in your connection logic",
    "start": "560839",
    "end": "563040"
  },
  {
    "text": "once the test case is completed the",
    "start": "563040",
    "end": "564760"
  },
  {
    "text": "containers will then be stopped and",
    "start": "564760",
    "end": "566160"
  },
  {
    "text": "deleted all of this enables your",
    "start": "566160",
    "end": "567959"
  },
  {
    "text": "integration tests to be consistent",
    "start": "567959",
    "end": "570120"
  },
  {
    "text": "self-contained and isolated from one",
    "start": "570120",
    "end": "572120"
  },
  {
    "text": "another the package is available for a",
    "start": "572120",
    "end": "574240"
  },
  {
    "text": "number of different languages as you can",
    "start": "574240",
    "end": "575839"
  },
  {
    "text": "see on screen and all it requires is",
    "start": "575839",
    "end": "577839"
  },
  {
    "text": "Docker be installed on the system you",
    "start": "577839",
    "end": "579360"
  },
  {
    "text": "want to run your tests on I could talk",
    "start": "579360",
    "end": "581279"
  },
  {
    "text": "about test containers for a whole",
    "start": "581279",
    "end": "582800"
  },
  {
    "text": "another video so if that's something",
    "start": "582800",
    "end": "584320"
  },
  {
    "text": "you'd like to see then let me know in",
    "start": "584320",
    "end": "585640"
  },
  {
    "text": "the comments down below using test",
    "start": "585640",
    "end": "587360"
  },
  {
    "text": "containers is probably my most favorite",
    "start": "587360",
    "end": "589320"
  },
  {
    "text": "use case on this video however with that",
    "start": "589320",
    "end": "591680"
  },
  {
    "text": "being said the last item is still rather",
    "start": "591680",
    "end": "594079"
  },
  {
    "text": "interesting when it comes to",
    "start": "594079",
    "end": "595680"
  },
  {
    "start": "595000",
    "end": "778000"
  },
  {
    "text": "containerization as I mentioned at the",
    "start": "595680",
    "end": "597560"
  },
  {
    "text": "start my most common use case for Docker",
    "start": "597560",
    "end": "599560"
  },
  {
    "text": "is for deploying application code this",
    "start": "599560",
    "end": "601680"
  },
  {
    "text": "is not only for production code in my",
    "start": "601680",
    "end": "603320"
  },
  {
    "text": "day job but also to run software and",
    "start": "603320",
    "end": "605279"
  },
  {
    "text": "services in my own home lab whil these",
    "start": "605279",
    "end": "607600"
  },
  {
    "text": "are different use cases they do share",
    "start": "607600",
    "end": "609600"
  },
  {
    "text": "one common concern vulnerabilities",
    "start": "609600",
    "end": "612279"
  },
  {
    "text": "fortunately Docker desktop comes with a",
    "start": "612279",
    "end": "614279"
  },
  {
    "text": "built-in container scanning tool called",
    "start": "614279",
    "end": "616440"
  },
  {
    "text": "Docker Scout Docker Scout is one of the",
    "start": "616440",
    "end": "618800"
  },
  {
    "text": "new features from Docker and it's really",
    "start": "618800",
    "end": "620560"
  },
  {
    "text": "great for allowing you to easily perform",
    "start": "620560",
    "end": "622120"
  },
  {
    "text": "container scanning on your local images",
    "start": "622120",
    "end": "624560"
  },
  {
    "text": "however it can do more than just that",
    "start": "624560",
    "end": "626360"
  },
  {
    "text": "and can be also used to scan your local",
    "start": "626360",
    "end": "628040"
  },
  {
    "text": "file system as well well to see this in",
    "start": "628040",
    "end": "630320"
  },
  {
    "text": "action let's jump back on over to that",
    "start": "630320",
    "end": "632000"
  },
  {
    "text": "code from 2018 that I showed earlier to",
    "start": "632000",
    "end": "634600"
  },
  {
    "text": "scan this project I can use the docker",
    "start": "634600",
    "end": "636480"
  },
  {
    "text": "Scout quick view command passing in the",
    "start": "636480",
    "end": "638480"
  },
  {
    "text": "file system schema to scan the current",
    "start": "638480",
    "end": "640399"
  },
  {
    "text": "directory very quickly this shows I have",
    "start": "640399",
    "end": "642920"
  },
  {
    "text": "a number of critical and high",
    "start": "642920",
    "end": "644519"
  },
  {
    "text": "vulnerabilities not great it also gives",
    "start": "644519",
    "end": "647079"
  },
  {
    "text": "a little hint on what to do next which",
    "start": "647079",
    "end": "648920"
  },
  {
    "text": "is to scan the file system for cves",
    "start": "648920",
    "end": "651440"
  },
  {
    "text": "let's go ahead and do that this gives a",
    "start": "651440",
    "end": "653760"
  },
  {
    "text": "lot of output so let's start from the",
    "start": "653760",
    "end": "655480"
  },
  {
    "text": "top and scroll through the first",
    "start": "655480",
    "end": "657240"
  },
  {
    "text": "critical vulnerability we can see is for",
    "start": "657240",
    "end": "659079"
  },
  {
    "text": "mongus",
    "start": "659079",
    "end": "660200"
  },
  {
    "text": "5.2.3 this view gives a list of all of",
    "start": "660200",
    "end": "662680"
  },
  {
    "text": "the cves that affects the mongus package",
    "start": "662680",
    "end": "665240"
  },
  {
    "text": "as well as the version that the cve was",
    "start": "665240",
    "end": "667040"
  },
  {
    "text": "fixed in now this is pretty great but",
    "start": "667040",
    "end": "669399"
  },
  {
    "text": "it's not unique most container scanning",
    "start": "669399",
    "end": "671399"
  },
  {
    "text": "tools provide this information however",
    "start": "671399",
    "end": "673800"
  },
  {
    "text": "the feature that I think sets Docker",
    "start": "673800",
    "end": "675279"
  },
  {
    "text": "Scout part is the compare command which",
    "start": "675279",
    "end": "677839"
  },
  {
    "text": "will allow you to compare two images or",
    "start": "677839",
    "end": "679720"
  },
  {
    "text": "file systems and display the differences",
    "start": "679720",
    "end": "681959"
  },
  {
    "text": "this feature is experimental but I find",
    "start": "681959",
    "end": "683839"
  },
  {
    "text": "it works pretty well let's see this in",
    "start": "683839",
    "end": "686000"
  },
  {
    "text": "action by comparing the file system to a",
    "start": "686000",
    "end": "688279"
  },
  {
    "text": "Docker image that I created earlier we",
    "start": "688279",
    "end": "690279"
  },
  {
    "text": "can see the number of known",
    "start": "690279",
    "end": "691399"
  },
  {
    "text": "vulnerabilities is exactly the same on",
    "start": "691399",
    "end": "693959"
  },
  {
    "text": "first thought that's kind of obvious",
    "start": "693959",
    "end": "695880"
  },
  {
    "text": "they're both using the exact same code",
    "start": "695880",
    "end": "697760"
  },
  {
    "text": "base but when you consider that the",
    "start": "697760",
    "end": "699560"
  },
  {
    "text": "image has an operating system embedded",
    "start": "699560",
    "end": "701560"
  },
  {
    "text": "as well we can determine that all of the",
    "start": "701560",
    "end": "703320"
  },
  {
    "text": "vulnerabilities are caused by my",
    "start": "703320",
    "end": "704839"
  },
  {
    "text": "application code we also get some other",
    "start": "704839",
    "end": "707079"
  },
  {
    "text": "nice stats here as well we can see that",
    "start": "707079",
    "end": "708959"
  },
  {
    "text": "the image contains 256 more packages and",
    "start": "708959",
    "end": "711680"
  },
  {
    "text": "weighs an additional 43 mbes as well as",
    "start": "711680",
    "end": "714639"
  },
  {
    "text": "comparing a file system to an image you",
    "start": "714639",
    "end": "716760"
  },
  {
    "text": "can also compare two images to each",
    "start": "716760",
    "end": "718600"
  },
  {
    "text": "other this can help you to detect if any",
    "start": "718600",
    "end": "720600"
  },
  {
    "text": "new changes introduce new",
    "start": "720600",
    "end": "721959"
  },
  {
    "text": "vulnerabilities into your containers or",
    "start": "721959",
    "end": "724399"
  },
  {
    "text": "if the issue existed already the last",
    "start": "724399",
    "end": "727240"
  },
  {
    "text": "Docker Scout command that I think worth",
    "start": "727240",
    "end": "728880"
  },
  {
    "text": "mentioning is the recommendations",
    "start": "728880",
    "end": "730600"
  },
  {
    "text": "command which gives suggestions on",
    "start": "730600",
    "end": "732399"
  },
  {
    "text": "optimizations you can make to your image",
    "start": "732399",
    "end": "735000"
  },
  {
    "text": "these suggestions go beyond just the",
    "start": "735000",
    "end": "736680"
  },
  {
    "text": "vulnerabilities however and also take",
    "start": "736680",
    "end": "738639"
  },
  {
    "text": "into consideration the size number of",
    "start": "738639",
    "end": "740680"
  },
  {
    "text": "packages and popularity of the image as",
    "start": "740680",
    "end": "743160"
  },
  {
    "text": "well all of this makes Docker Scout a",
    "start": "743160",
    "end": "745279"
  },
  {
    "text": "great tool for optimizing your images",
    "start": "745279",
    "end": "747320"
  },
  {
    "text": "and can help you make sure that you're",
    "start": "747320",
    "end": "748639"
  },
  {
    "text": "not the one introducing that",
    "start": "748639",
    "end": "749920"
  },
  {
    "text": "vulnerability into your production code",
    "start": "749920",
    "end": "752079"
  },
  {
    "text": "using Docker for more than just",
    "start": "752079",
    "end": "753600"
  },
  {
    "text": "application deployments has improved my",
    "start": "753600",
    "end": "755320"
  },
  {
    "text": "workflow substantially however I'd love",
    "start": "755320",
    "end": "757360"
  },
  {
    "text": "to know about you what are some of the",
    "start": "757360",
    "end": "758920"
  },
  {
    "text": "unusual ways that you use Docker",
    "start": "758920",
    "end": "760519"
  },
  {
    "text": "yourself let me know in the comments",
    "start": "760519",
    "end": "762040"
  },
  {
    "text": "down below and I'll do a follow-up video",
    "start": "762040",
    "end": "763959"
  },
  {
    "text": "on some of the more interesting ones I",
    "start": "763959",
    "end": "765920"
  },
  {
    "text": "want to give a big thank you to Docker",
    "start": "765920",
    "end": "767320"
  },
  {
    "text": "for sponsoring this video their new",
    "start": "767320",
    "end": "769040"
  },
  {
    "text": "features are pretty great and I hope you",
    "start": "769040",
    "end": "770760"
  },
  {
    "text": "can find some use for them in your",
    "start": "770760",
    "end": "772000"
  },
  {
    "text": "day-to-day otherwise a big thank you for",
    "start": "772000",
    "end": "774120"
  },
  {
    "text": "watching and I'll see you on the next",
    "start": "774120",
    "end": "776560"
  },
  {
    "text": "one",
    "start": "776560",
    "end": "779560"
  }
]