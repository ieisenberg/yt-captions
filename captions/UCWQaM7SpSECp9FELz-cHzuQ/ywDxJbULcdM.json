[
  {
    "text": "what you're looking at right now is some",
    "start": "179",
    "end": "2100"
  },
  {
    "text": "bad code",
    "start": "2100",
    "end": "3300"
  },
  {
    "text": "now I know it's hard to look at but this",
    "start": "3300",
    "end": "5940"
  },
  {
    "text": "code well it broke the first principle",
    "start": "5940",
    "end": "8639"
  },
  {
    "text": "of solid the single responsibility",
    "start": "8639",
    "end": "11219"
  },
  {
    "text": "principle now I know what you're",
    "start": "11219",
    "end": "12960"
  },
  {
    "text": "thinking but who are the what now let me",
    "start": "12960",
    "end": "15599"
  },
  {
    "text": "explain",
    "start": "15599",
    "end": "16980"
  },
  {
    "text": "solid is an acronym that represents five",
    "start": "16980",
    "end": "19320"
  },
  {
    "text": "principles for good object-orientated",
    "start": "19320",
    "end": "21539"
  },
  {
    "text": "design don't let the object-orientator",
    "start": "21539",
    "end": "24480"
  },
  {
    "text": "dissuade you however these principles",
    "start": "24480",
    "end": "26580"
  },
  {
    "text": "translate pretty well across other",
    "start": "26580",
    "end": "28019"
  },
  {
    "text": "paradigms the single responsibility",
    "start": "28019",
    "end": "30119"
  },
  {
    "text": "principle or SRP is the first of these",
    "start": "30119",
    "end": "33239"
  },
  {
    "text": "five principles the s in solid so what",
    "start": "33239",
    "end": "37200"
  },
  {
    "text": "is it well let's have a look at the",
    "start": "37200",
    "end": "39120"
  },
  {
    "text": "original definition of the SRP",
    "start": "39120",
    "end": "41579"
  },
  {
    "text": "there should never be more than one",
    "start": "41579",
    "end": "43200"
  },
  {
    "text": "reason for a class to change now this",
    "start": "43200",
    "end": "45600"
  },
  {
    "text": "definition is 20 years old and is a",
    "start": "45600",
    "end": "47640"
  },
  {
    "text": "little outdated honestly it sounds a",
    "start": "47640",
    "end": "49200"
  },
  {
    "text": "little bit like a token wizard said it",
    "start": "49200",
    "end": "52700"
  },
  {
    "text": "let's refactor this definition into",
    "start": "52860",
    "end": "54539"
  },
  {
    "text": "something more modern",
    "start": "54539",
    "end": "55980"
  },
  {
    "text": "each module should do one thing and do",
    "start": "55980",
    "end": "57960"
  },
  {
    "text": "it well",
    "start": "57960",
    "end": "59100"
  },
  {
    "text": "so how does this translate let's go back",
    "start": "59100",
    "end": "61379"
  },
  {
    "text": "to that horrific code I showed you",
    "start": "61379",
    "end": "62820"
  },
  {
    "text": "earlier with our Newfound understanding",
    "start": "62820",
    "end": "65400"
  },
  {
    "text": "let's look at this code line by line on",
    "start": "65400",
    "end": "67439"
  },
  {
    "text": "the right we have an HTTP Handler",
    "start": "67439",
    "end": "69240"
  },
  {
    "text": "function which is taking a request and",
    "start": "69240",
    "end": "71040"
  },
  {
    "text": "creating a user from it this method",
    "start": "71040",
    "end": "73500"
  },
  {
    "text": "loads the request body into a data",
    "start": "73500",
    "end": "75299"
  },
  {
    "text": "structure that contains the email and",
    "start": "75299",
    "end": "77040"
  },
  {
    "text": "password from this deserialized request",
    "start": "77040",
    "end": "79680"
  },
  {
    "text": "body the method then creates a user type",
    "start": "79680",
    "end": "81720"
  },
  {
    "text": "with a new random uuid and the email",
    "start": "81720",
    "end": "84540"
  },
  {
    "text": "from the request then the user password",
    "start": "84540",
    "end": "87240"
  },
  {
    "text": "is set using a method which will",
    "start": "87240",
    "end": "89340"
  },
  {
    "text": "internally hash the password from our",
    "start": "89340",
    "end": "91320"
  },
  {
    "text": "request",
    "start": "91320",
    "end": "92520"
  },
  {
    "text": "once the user type has the necessary",
    "start": "92520",
    "end": "94799"
  },
  {
    "text": "Fields added the Handler then proceeds",
    "start": "94799",
    "end": "96780"
  },
  {
    "text": "to save the user to the database using",
    "start": "96780",
    "end": "98640"
  },
  {
    "text": "the user's save method",
    "start": "98640",
    "end": "101040"
  },
  {
    "text": "once everything is done without error",
    "start": "101040",
    "end": "102840"
  },
  {
    "text": "the Handler would then send a welcome",
    "start": "102840",
    "end": "104220"
  },
  {
    "text": "email to the user and send back the",
    "start": "104220",
    "end": "106619"
  },
  {
    "text": "correct HTTP status to the client",
    "start": "106619",
    "end": "109200"
  },
  {
    "text": "this function actually isn't too bad the",
    "start": "109200",
    "end": "111960"
  },
  {
    "text": "flow is correct and it does what it",
    "start": "111960",
    "end": "113460"
  },
  {
    "text": "needs to however the issue doesn't lie",
    "start": "113460",
    "end": "115740"
  },
  {
    "text": "in this part of the code it's actually",
    "start": "115740",
    "end": "117540"
  },
  {
    "text": "over in our user struct and the",
    "start": "117540",
    "end": "119340"
  },
  {
    "text": "associated methods",
    "start": "119340",
    "end": "121560"
  },
  {
    "text": "by looking at the public interface that",
    "start": "121560",
    "end": "123540"
  },
  {
    "text": "this code exports we can see the problem",
    "start": "123540",
    "end": "125520"
  },
  {
    "text": "there's multiple responsibilities the",
    "start": "125520",
    "end": "128099"
  },
  {
    "text": "first responsibility is defining and",
    "start": "128099",
    "end": "130080"
  },
  {
    "text": "storing the data structure of a user",
    "start": "130080",
    "end": "132120"
  },
  {
    "text": "which in our case is the email the",
    "start": "132120",
    "end": "135060"
  },
  {
    "text": "hashed password and the ID",
    "start": "135060",
    "end": "137520"
  },
  {
    "text": "the second responsibility is saving",
    "start": "137520",
    "end": "139920"
  },
  {
    "text": "itself to our database inside of the",
    "start": "139920",
    "end": "142379"
  },
  {
    "text": "save method it's also creating the",
    "start": "142379",
    "end": "144120"
  },
  {
    "text": "database connection and generating the",
    "start": "144120",
    "end": "145920"
  },
  {
    "text": "SQL statement for writing to the",
    "start": "145920",
    "end": "147360"
  },
  {
    "text": "database this method also makes some",
    "start": "147360",
    "end": "149700"
  },
  {
    "text": "concrete assumptions about the database",
    "start": "149700",
    "end": "151440"
  },
  {
    "text": "type that we're using as well as the",
    "start": "151440",
    "end": "153060"
  },
  {
    "text": "connection details",
    "start": "153060",
    "end": "154920"
  },
  {
    "text": "the third responsibility is that of",
    "start": "154920",
    "end": "157080"
  },
  {
    "text": "generating encoding and setting the hash",
    "start": "157080",
    "end": "159300"
  },
  {
    "text": "of the password so that we're able to",
    "start": "159300",
    "end": "160800"
  },
  {
    "text": "store it in our database securely this",
    "start": "160800",
    "end": "162900"
  },
  {
    "text": "method again performs multiple actions",
    "start": "162900",
    "end": "164819"
  },
  {
    "text": "such as generating a secure salt for our",
    "start": "164819",
    "end": "167459"
  },
  {
    "text": "password hash setting the configuration",
    "start": "167459",
    "end": "169560"
  },
  {
    "text": "parameters of the argon2 hashing",
    "start": "169560",
    "end": "171720"
  },
  {
    "text": "algorithm hashing the actual password",
    "start": "171720",
    "end": "174120"
  },
  {
    "text": "and encoding the hash and configuration",
    "start": "174120",
    "end": "176400"
  },
  {
    "text": "details into a string that we can then",
    "start": "176400",
    "end": "178140"
  },
  {
    "text": "use later on to check passwords against",
    "start": "178140",
    "end": "181220"
  },
  {
    "text": "finally the fourth responsibility this",
    "start": "181220",
    "end": "183780"
  },
  {
    "text": "struct has is that of sending emails to",
    "start": "183780",
    "end": "185819"
  },
  {
    "text": "our user in doing so it is responsible",
    "start": "185819",
    "end": "188340"
  },
  {
    "text": "for setting up our AWS client creating",
    "start": "188340",
    "end": "190860"
  },
  {
    "text": "the necessary inputs for AWS simple",
    "start": "190860",
    "end": "192780"
  },
  {
    "text": "email service and then calling the",
    "start": "192780",
    "end": "194700"
  },
  {
    "text": "service with those inputs",
    "start": "194700",
    "end": "196440"
  },
  {
    "text": "in total that's four main",
    "start": "196440",
    "end": "198300"
  },
  {
    "text": "responsibilities this struct has which",
    "start": "198300",
    "end": "200819"
  },
  {
    "text": "is obviously violating the single",
    "start": "200819",
    "end": "202860"
  },
  {
    "text": "responsibility principle before we jump",
    "start": "202860",
    "end": "205140"
  },
  {
    "text": "into refactoring this code and",
    "start": "205140",
    "end": "206580"
  },
  {
    "text": "conforming it to the SRP let's talk",
    "start": "206580",
    "end": "208319"
  },
  {
    "text": "about why this even matters and what the",
    "start": "208319",
    "end": "210480"
  },
  {
    "text": "SRP actually means for our codes quality",
    "start": "210480",
    "end": "213840"
  },
  {
    "text": "the first impact the SRP has on code",
    "start": "213840",
    "end": "216599"
  },
  {
    "text": "quality is through increased",
    "start": "216599",
    "end": "218040"
  },
  {
    "text": "understandability of your code from",
    "start": "218040",
    "end": "219420"
  },
  {
    "text": "other engineers and your future self by",
    "start": "219420",
    "end": "221700"
  },
  {
    "text": "having modules that are properly named",
    "start": "221700",
    "end": "223260"
  },
  {
    "text": "to their responsibility and by keeping",
    "start": "223260",
    "end": "224940"
  },
  {
    "text": "their scope limited to that function it",
    "start": "224940",
    "end": "226920"
  },
  {
    "text": "helps to understand what tasks that",
    "start": "226920",
    "end": "228239"
  },
  {
    "text": "module is performing and what it is",
    "start": "228239",
    "end": "230099"
  },
  {
    "text": "expected to perform in our code's case",
    "start": "230099",
    "end": "232680"
  },
  {
    "text": "we can move the password hashing",
    "start": "232680",
    "end": "234299"
  },
  {
    "text": "functionality of our user into a",
    "start": "234299",
    "end": "236280"
  },
  {
    "text": "dedicated module for password hashing by",
    "start": "236280",
    "end": "238739"
  },
  {
    "text": "doing so we also communicate to other",
    "start": "238739",
    "end": "240659"
  },
  {
    "text": "developers that this module has that",
    "start": "240659",
    "end": "242340"
  },
  {
    "text": "single responsibility and can write some",
    "start": "242340",
    "end": "244620"
  },
  {
    "text": "dedicated documentation for this module",
    "start": "244620",
    "end": "247980"
  },
  {
    "text": "additionally if we get a requirement to",
    "start": "247980",
    "end": "250019"
  },
  {
    "text": "add a new hashing algorithm to our code",
    "start": "250019",
    "end": "251879"
  },
  {
    "text": "it's easy to understand where this new",
    "start": "251879",
    "end": "253680"
  },
  {
    "text": "functionality should live",
    "start": "253680",
    "end": "255840"
  },
  {
    "text": "the second impact of the SRP has on code",
    "start": "255840",
    "end": "258299"
  },
  {
    "text": "quality is through increased",
    "start": "258299",
    "end": "259859"
  },
  {
    "text": "maintainability of your code by having",
    "start": "259859",
    "end": "262139"
  },
  {
    "text": "each module be responsible for one",
    "start": "262139",
    "end": "263820"
  },
  {
    "text": "specific task it's easier to determine",
    "start": "263820",
    "end": "266280"
  },
  {
    "text": "where a potential issue might live when",
    "start": "266280",
    "end": "267900"
  },
  {
    "text": "a bugger eventually shows up",
    "start": "267900",
    "end": "269759"
  },
  {
    "text": "in our code for example if we're seeing",
    "start": "269759",
    "end": "271800"
  },
  {
    "text": "errors in our database logs when",
    "start": "271800",
    "end": "273300"
  },
  {
    "text": "inserting entities having a single",
    "start": "273300",
    "end": "274979"
  },
  {
    "text": "module responsible for the database",
    "start": "274979",
    "end": "276300"
  },
  {
    "text": "interaction Narrows down the possible",
    "start": "276300",
    "end": "277979"
  },
  {
    "text": "places that the bug may be coming from",
    "start": "277979",
    "end": "280560"
  },
  {
    "text": "another benefit to the SRP is that code",
    "start": "280560",
    "end": "283139"
  },
  {
    "text": "is more likely to be reusable by other",
    "start": "283139",
    "end": "285240"
  },
  {
    "text": "components in our case our send email",
    "start": "285240",
    "end": "288240"
  },
  {
    "text": "function is limited to only sending",
    "start": "288240",
    "end": "290040"
  },
  {
    "text": "emails to the specific user but we may",
    "start": "290040",
    "end": "292800"
  },
  {
    "text": "not always have a user that we want to",
    "start": "292800",
    "end": "294240"
  },
  {
    "text": "send emails to especially if we require",
    "start": "294240",
    "end": "296580"
  },
  {
    "text": "email validation before our user can",
    "start": "296580",
    "end": "298560"
  },
  {
    "text": "even be created",
    "start": "298560",
    "end": "300120"
  },
  {
    "text": "rather than having to duplicate the",
    "start": "300120",
    "end": "301800"
  },
  {
    "text": "email functionality code elsewhere we",
    "start": "301800",
    "end": "303660"
  },
  {
    "text": "can actually extract out our email",
    "start": "303660",
    "end": "305100"
  },
  {
    "text": "sending code into its own module which",
    "start": "305100",
    "end": "307919"
  },
  {
    "text": "can then be used in more than one place",
    "start": "307919",
    "end": "309479"
  },
  {
    "text": "by other components",
    "start": "309479",
    "end": "311960"
  },
  {
    "text": "finally having code that conforms to the",
    "start": "311960",
    "end": "314460"
  },
  {
    "text": "SRP makes it much easier to test if our",
    "start": "314460",
    "end": "317160"
  },
  {
    "text": "code is doing too much then our test",
    "start": "317160",
    "end": "318660"
  },
  {
    "text": "cases are likely going to be very",
    "start": "318660",
    "end": "320040"
  },
  {
    "text": "complex in order to handle each possible",
    "start": "320040",
    "end": "321960"
  },
  {
    "text": "situation",
    "start": "321960",
    "end": "323160"
  },
  {
    "text": "by splitting up our code as we have done",
    "start": "323160",
    "end": "325080"
  },
  {
    "text": "we're able to easily test each module in",
    "start": "325080",
    "end": "327180"
  },
  {
    "text": "isolation of each other",
    "start": "327180",
    "end": "329220"
  },
  {
    "text": "turning our attention back to our",
    "start": "329220",
    "end": "330900"
  },
  {
    "text": "original user struct let's look at how",
    "start": "330900",
    "end": "332639"
  },
  {
    "text": "we can refactor this to better suit the",
    "start": "332639",
    "end": "334380"
  },
  {
    "text": "SRP we've already started to do this but",
    "start": "334380",
    "end": "337080"
  },
  {
    "text": "we can split our user module into four",
    "start": "337080",
    "end": "339300"
  },
  {
    "text": "different modules each with their own",
    "start": "339300",
    "end": "341160"
  },
  {
    "text": "well-defined responsibility",
    "start": "341160",
    "end": "343800"
  },
  {
    "text": "the first responsibility to split out",
    "start": "343800",
    "end": "345840"
  },
  {
    "text": "would be saving the user to the database",
    "start": "345840",
    "end": "347759"
  },
  {
    "text": "for this we can create a module called",
    "start": "347759",
    "end": "349680"
  },
  {
    "text": "user repository which is responsible for",
    "start": "349680",
    "end": "351780"
  },
  {
    "text": "any database operations applied to a",
    "start": "351780",
    "end": "353880"
  },
  {
    "text": "user",
    "start": "353880",
    "end": "354840"
  },
  {
    "text": "for the password hashing a dedicated",
    "start": "354840",
    "end": "356820"
  },
  {
    "text": "hasher module would allow us to easily",
    "start": "356820",
    "end": "358500"
  },
  {
    "text": "move that responsibility elsewhere which",
    "start": "358500",
    "end": "360660"
  },
  {
    "text": "we can then configure test and reuse",
    "start": "360660",
    "end": "362460"
  },
  {
    "text": "more easily",
    "start": "362460",
    "end": "363720"
  },
  {
    "text": "for sending emails a dedicated mailer",
    "start": "363720",
    "end": "366060"
  },
  {
    "text": "module would allow us to reuse this code",
    "start": "366060",
    "end": "367680"
  },
  {
    "text": "for more than just sending emails to",
    "start": "367680",
    "end": "369240"
  },
  {
    "text": "users",
    "start": "369240",
    "end": "370259"
  },
  {
    "text": "and finally the user itself would stay",
    "start": "370259",
    "end": "372600"
  },
  {
    "text": "at its own module but instead of the",
    "start": "372600",
    "end": "374639"
  },
  {
    "text": "methods it had previously it would only",
    "start": "374639",
    "end": "376560"
  },
  {
    "text": "be responsible for representing the data",
    "start": "376560",
    "end": "378600"
  },
  {
    "text": "model of a user",
    "start": "378600",
    "end": "380580"
  },
  {
    "text": "let's jump back to our code and make",
    "start": "380580",
    "end": "382380"
  },
  {
    "text": "these changes to satisfy our user",
    "start": "382380",
    "end": "385080"
  },
  {
    "text": "repository change we'll first create a",
    "start": "385080",
    "end": "386880"
  },
  {
    "text": "new repository type in our user package",
    "start": "386880",
    "end": "388680"
  },
  {
    "text": "which will contain a sql.database",
    "start": "388680",
    "end": "391020"
  },
  {
    "text": "instance we'll also want a new",
    "start": "391020",
    "end": "392940"
  },
  {
    "text": "repository function that can act as the",
    "start": "392940",
    "end": "394740"
  },
  {
    "text": "Constructor and also accept an instance",
    "start": "394740",
    "end": "396600"
  },
  {
    "text": "of the sql.dp as a dependency this takes",
    "start": "396600",
    "end": "399300"
  },
  {
    "text": "away the responsibility of managing the",
    "start": "399300",
    "end": "400919"
  },
  {
    "text": "database connectivity from the",
    "start": "400919",
    "end": "402300"
  },
  {
    "text": "repository which also means we're able",
    "start": "402300",
    "end": "403919"
  },
  {
    "text": "to mock this when it comes to testing",
    "start": "403919",
    "end": "405300"
  },
  {
    "text": "with our Constructor created we can go",
    "start": "405300",
    "end": "407160"
  },
  {
    "text": "ahead and add in the new save user",
    "start": "407160",
    "end": "409080"
  },
  {
    "text": "method which takes a context and the",
    "start": "409080",
    "end": "411240"
  },
  {
    "text": "user we wish to save",
    "start": "411240",
    "end": "412919"
  },
  {
    "text": "we can then remove the save method from",
    "start": "412919",
    "end": "414780"
  },
  {
    "text": "our user struct",
    "start": "414780",
    "end": "417419"
  },
  {
    "text": "to replace the functionality in our",
    "start": "417419",
    "end": "418979"
  },
  {
    "text": "Handler we can add an instance of our",
    "start": "418979",
    "end": "420960"
  },
  {
    "text": "user repository to our Handler struct",
    "start": "420960",
    "end": "422580"
  },
  {
    "text": "which we can accept as a dependency",
    "start": "422580",
    "end": "425580"
  },
  {
    "text": "the Handler is then able to save using",
    "start": "425580",
    "end": "427500"
  },
  {
    "text": "this repo instead of directly through",
    "start": "427500",
    "end": "429060"
  },
  {
    "text": "the user",
    "start": "429060",
    "end": "430500"
  },
  {
    "text": "next up is to add in our new password",
    "start": "430500",
    "end": "433020"
  },
  {
    "text": "hasher component to do this I created a",
    "start": "433020",
    "end": "435600"
  },
  {
    "text": "new package called hasher which has a",
    "start": "435600",
    "end": "437699"
  },
  {
    "text": "password struct inside",
    "start": "437699",
    "end": "439500"
  },
  {
    "text": "this struct has a method called hash",
    "start": "439500",
    "end": "441419"
  },
  {
    "text": "password which takes in the password",
    "start": "441419",
    "end": "442800"
  },
  {
    "text": "string and returns a string and optional",
    "start": "442800",
    "end": "445199"
  },
  {
    "text": "error inside of the method we can then",
    "start": "445199",
    "end": "447000"
  },
  {
    "text": "add the same code we had in our user",
    "start": "447000",
    "end": "448919"
  },
  {
    "text": "struct for hashing and encoding using",
    "start": "448919",
    "end": "450539"
  },
  {
    "text": "argon2",
    "start": "450539",
    "end": "453199"
  },
  {
    "text": "if we wanted to we could also add in a",
    "start": "453840",
    "end": "455639"
  },
  {
    "text": "method for checking a password against a",
    "start": "455639",
    "end": "457500"
  },
  {
    "text": "password hash however we'll save that",
    "start": "457500",
    "end": "459720"
  },
  {
    "text": "for another time with our new password",
    "start": "459720",
    "end": "461699"
  },
  {
    "text": "hash method added we can go ahead and",
    "start": "461699",
    "end": "463560"
  },
  {
    "text": "remove it from our user struct we can",
    "start": "463560",
    "end": "465840"
  },
  {
    "text": "then jump on over to our Handler code",
    "start": "465840",
    "end": "467340"
  },
  {
    "text": "and add in an instance of the password",
    "start": "467340",
    "end": "469020"
  },
  {
    "text": "hasher to the Handler struct",
    "start": "469020",
    "end": "470940"
  },
  {
    "text": "then in our HTTP Handler function we'll",
    "start": "470940",
    "end": "473520"
  },
  {
    "text": "use this to generate the password and",
    "start": "473520",
    "end": "475319"
  },
  {
    "text": "assign it to the user",
    "start": "475319",
    "end": "478199"
  },
  {
    "text": "the last refactor we want to do is the",
    "start": "478199",
    "end": "480479"
  },
  {
    "text": "mailer module to remove the send email",
    "start": "480479",
    "end": "482400"
  },
  {
    "text": "functionality out of the user struct to",
    "start": "482400",
    "end": "484800"
  },
  {
    "text": "do this I first added in a new email",
    "start": "484800",
    "end": "486720"
  },
  {
    "text": "package with an SES mailer struct inside",
    "start": "486720",
    "end": "490259"
  },
  {
    "text": "I also added in a new Constructor method",
    "start": "490259",
    "end": "492660"
  },
  {
    "text": "that will set up the AWS configuration",
    "start": "492660",
    "end": "494639"
  },
  {
    "text": "create an SES service and assign it to a",
    "start": "494639",
    "end": "498000"
  },
  {
    "text": "new instance of the SES paler type or",
    "start": "498000",
    "end": "500819"
  },
  {
    "text": "return an error if something goes wrong",
    "start": "500819",
    "end": "503039"
  },
  {
    "text": "then we add in a send email method on",
    "start": "503039",
    "end": "505740"
  },
  {
    "text": "this type which takes in an email",
    "start": "505740",
    "end": "507120"
  },
  {
    "text": "address subject and an email body",
    "start": "507120",
    "end": "509819"
  },
  {
    "text": "the implementation of this method is",
    "start": "509819",
    "end": "511500"
  },
  {
    "text": "similar to what we have in our user",
    "start": "511500",
    "end": "512820"
  },
  {
    "text": "struct except we use the emo parameter",
    "start": "512820",
    "end": "514800"
  },
  {
    "text": "instead of the user's email next we can",
    "start": "514800",
    "end": "517260"
  },
  {
    "text": "head over to our user module and remove",
    "start": "517260",
    "end": "518820"
  },
  {
    "text": "this functionality from the user struct",
    "start": "518820",
    "end": "522300"
  },
  {
    "text": "then we can jump over to our Handler add",
    "start": "522300",
    "end": "524459"
  },
  {
    "text": "this Mailer in as another property for",
    "start": "524459",
    "end": "525959"
  },
  {
    "text": "our Handler struct and replace the HTTP",
    "start": "525959",
    "end": "528240"
  },
  {
    "text": "Handler logic to use this type instead",
    "start": "528240",
    "end": "530160"
  },
  {
    "text": "of directly calling on the user here you",
    "start": "530160",
    "end": "532260"
  },
  {
    "text": "can see what our Handler now looks like",
    "start": "532260",
    "end": "533760"
  },
  {
    "text": "interacting with these other modules",
    "start": "533760",
    "end": "535320"
  },
  {
    "text": "instead of only the user if you want to",
    "start": "535320",
    "end": "537420"
  },
  {
    "text": "see the final code for this refactor",
    "start": "537420",
    "end": "539100"
  },
  {
    "text": "then the link is in the description the",
    "start": "539100",
    "end": "541019"
  },
  {
    "text": "SRP is a powerful technique to organize",
    "start": "541019",
    "end": "543300"
  },
  {
    "text": "and structure your code so that it is",
    "start": "543300",
    "end": "544800"
  },
  {
    "text": "understandable maintainable testable and",
    "start": "544800",
    "end": "547320"
  },
  {
    "text": "reusable I'd love to hear your thoughts",
    "start": "547320",
    "end": "549600"
  },
  {
    "text": "about the SRP and solid in general and",
    "start": "549600",
    "end": "551760"
  },
  {
    "text": "whether you're going to apply it to your",
    "start": "551760",
    "end": "553019"
  },
  {
    "text": "own code otherwise thank you for",
    "start": "553019",
    "end": "555180"
  },
  {
    "text": "watching and I'll see you on the next",
    "start": "555180",
    "end": "556560"
  },
  {
    "text": "one",
    "start": "556560",
    "end": "558740"
  }
]