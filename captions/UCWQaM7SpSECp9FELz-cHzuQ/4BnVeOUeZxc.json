[
  {
    "start": "0",
    "end": "16000"
  },
  {
    "text": "in this video we're going to set up",
    "start": "0",
    "end": "2100"
  },
  {
    "text": "neovim to be the perfect editor for",
    "start": "2100",
    "end": "4080"
  },
  {
    "text": "working with python by the end of this",
    "start": "4080",
    "end": "6240"
  },
  {
    "text": "guide you'll have Auto suggestions and",
    "start": "6240",
    "end": "8160"
  },
  {
    "text": "code completion enabled encode static",
    "start": "8160",
    "end": "10620"
  },
  {
    "text": "analysis Auto formatting on Save and",
    "start": "10620",
    "end": "13380"
  },
  {
    "text": "Powerful debugging capabilities to get",
    "start": "13380",
    "end": "16080"
  },
  {
    "start": "16000",
    "end": "92000"
  },
  {
    "text": "started you'll need to make sure you",
    "start": "16080",
    "end": "17520"
  },
  {
    "text": "have the latest version of Neo then",
    "start": "17520",
    "end": "19199"
  },
  {
    "text": "installed at the time of recording this",
    "start": "19199",
    "end": "21119"
  },
  {
    "text": "is version 0.9.1 download and install",
    "start": "21119",
    "end": "24359"
  },
  {
    "text": "that as per the instructions for your",
    "start": "24359",
    "end": "26160"
  },
  {
    "text": "operating system for this video I'm",
    "start": "26160",
    "end": "28199"
  },
  {
    "text": "using Mac OS so I'll install near them",
    "start": "28199",
    "end": "30359"
  },
  {
    "text": "using Brew with neovim installed the",
    "start": "30359",
    "end": "33000"
  },
  {
    "text": "next step is to add a base configuration",
    "start": "33000",
    "end": "34500"
  },
  {
    "text": "to simplify our setup process",
    "start": "34500",
    "end": "36840"
  },
  {
    "text": "my preferred option is nvchad which",
    "start": "36840",
    "end": "39480"
  },
  {
    "text": "provides some powerful plugins and",
    "start": "39480",
    "end": "41100"
  },
  {
    "text": "defaults while still allowing a great",
    "start": "41100",
    "end": "42719"
  },
  {
    "text": "deal of flexibility for customization",
    "start": "42719",
    "end": "45180"
  },
  {
    "text": "if you have an existing neovim",
    "start": "45180",
    "end": "46920"
  },
  {
    "text": "configuration you'll first want to back",
    "start": "46920",
    "end": "48480"
  },
  {
    "text": "this up and delete your local neovim",
    "start": "48480",
    "end": "50280"
  },
  {
    "text": "cache using the following commands",
    "start": "50280",
    "end": "52440"
  },
  {
    "text": "you can then install nvchat by using the",
    "start": "52440",
    "end": "55020"
  },
  {
    "text": "following git clone command which will",
    "start": "55020",
    "end": "56940"
  },
  {
    "text": "download it into your neovim",
    "start": "56940",
    "end": "58379"
  },
  {
    "text": "configuration directory once that's done",
    "start": "58379",
    "end": "60480"
  },
  {
    "text": "open up neovim and you should be greeted",
    "start": "60480",
    "end": "62340"
  },
  {
    "text": "with a prompt asking if you want to",
    "start": "62340",
    "end": "64018"
  },
  {
    "text": "install an example configuration make",
    "start": "64019",
    "end": "66119"
  },
  {
    "text": "sure to type in n as in no so you start",
    "start": "66119",
    "end": "68520"
  },
  {
    "text": "from the same base configuration as I am",
    "start": "68520",
    "end": "70500"
  },
  {
    "text": "after that you should see the base",
    "start": "70500",
    "end": "72360"
  },
  {
    "text": "packages and plugins being installed",
    "start": "72360",
    "end": "74100"
  },
  {
    "text": "through the lazy plugin manager",
    "start": "74100",
    "end": "76560"
  },
  {
    "text": "once that's done feel free to set your",
    "start": "76560",
    "end": "78659"
  },
  {
    "text": "theme to one you prefer you can do so by",
    "start": "78659",
    "end": "81060"
  },
  {
    "text": "opening up the theme switcher using",
    "start": "81060",
    "end": "82500"
  },
  {
    "text": "space T and H I'll be setting my theme",
    "start": "82500",
    "end": "85380"
  },
  {
    "text": "to the best theme ever Capuchin",
    "start": "85380",
    "end": "88740"
  },
  {
    "text": "with that done we're ready to start",
    "start": "88740",
    "end": "90240"
  },
  {
    "text": "customizing the event for python",
    "start": "90240",
    "end": "92820"
  },
  {
    "start": "92000",
    "end": "347000"
  },
  {
    "text": "the first feature we want is to enable",
    "start": "92820",
    "end": "94500"
  },
  {
    "text": "code suggestions and autocomplete we can",
    "start": "94500",
    "end": "96960"
  },
  {
    "text": "do this by setting up a language server",
    "start": "96960",
    "end": "98640"
  },
  {
    "text": "protocol or LSP server there's a number",
    "start": "98640",
    "end": "101280"
  },
  {
    "text": "of LSP servers we can use with python",
    "start": "101280",
    "end": "103560"
  },
  {
    "text": "but we're going to go with Pyrite for",
    "start": "103560",
    "end": "105780"
  },
  {
    "text": "this configuration to do so we're going",
    "start": "105780",
    "end": "107820"
  },
  {
    "text": "to first need to get pyrite installed on",
    "start": "107820",
    "end": "109680"
  },
  {
    "text": "our system we can do this using either",
    "start": "109680",
    "end": "111479"
  },
  {
    "text": "pip or npm or from within neovim using a",
    "start": "111479",
    "end": "115140"
  },
  {
    "text": "plugin called Mason the Mason plugin",
    "start": "115140",
    "end": "117780"
  },
  {
    "text": "acts as a package manager for external",
    "start": "117780",
    "end": "119640"
  },
  {
    "text": "dependencies that neovim uses",
    "start": "119640",
    "end": "121979"
  },
  {
    "text": "the benefit to doing it in Mason is it",
    "start": "121979",
    "end": "123960"
  },
  {
    "text": "keeps our configuration as code which is",
    "start": "123960",
    "end": "126420"
  },
  {
    "text": "preferable when compared to installing",
    "start": "126420",
    "end": "127920"
  },
  {
    "text": "dependencies ad hoc to install using",
    "start": "127920",
    "end": "130560"
  },
  {
    "text": "Mason first open up your neovim",
    "start": "130560",
    "end": "132599"
  },
  {
    "text": "configuration files in near them by",
    "start": "132599",
    "end": "135180"
  },
  {
    "text": "changing it over to the config directory",
    "start": "135180",
    "end": "137040"
  },
  {
    "text": "and typing nvim inside",
    "start": "137040",
    "end": "139319"
  },
  {
    "text": "once neovin is loaded you can then open",
    "start": "139319",
    "end": "141300"
  },
  {
    "text": "up the tree view by pressing Ctrl and N",
    "start": "141300",
    "end": "143640"
  },
  {
    "text": "next we're going to need to create a new",
    "start": "143640",
    "end": "145980"
  },
  {
    "text": "file which will keep track of our neovin",
    "start": "145980",
    "end": "147900"
  },
  {
    "text": "plugins",
    "start": "147900",
    "end": "148920"
  },
  {
    "text": "we'll create this in the lower custom",
    "start": "148920",
    "end": "151200"
  },
  {
    "text": "directory of our configuration",
    "start": "151200",
    "end": "153720"
  },
  {
    "text": "once we've navigated here we can create",
    "start": "153720",
    "end": "155459"
  },
  {
    "text": "the file by pressing the a key and",
    "start": "155459",
    "end": "157260"
  },
  {
    "text": "entering a name for the file in the",
    "start": "157260",
    "end": "158819"
  },
  {
    "text": "prompt let's call this plugins.lure",
    "start": "158819",
    "end": "161640"
  },
  {
    "text": "once that's created you can open it up",
    "start": "161640",
    "end": "163260"
  },
  {
    "text": "by pressing enter on the file this file",
    "start": "163260",
    "end": "165720"
  },
  {
    "text": "is where we'll Define any plugins that",
    "start": "165720",
    "end": "167400"
  },
  {
    "text": "we want to add to near them or to extend",
    "start": "167400",
    "end": "169440"
  },
  {
    "text": "any config from the plugins that nvchat",
    "start": "169440",
    "end": "171599"
  },
  {
    "text": "installs as Mason is installed as part",
    "start": "171599",
    "end": "174420"
  },
  {
    "text": "of MV chat we'll be overriding the",
    "start": "174420",
    "end": "176160"
  },
  {
    "text": "options here to install pyrite in this",
    "start": "176160",
    "end": "178500"
  },
  {
    "text": "file let's define an empty lure table",
    "start": "178500",
    "end": "180120"
  },
  {
    "text": "called plugins and then add a line",
    "start": "180120",
    "end": "182220"
  },
  {
    "text": "underneath to return it",
    "start": "182220",
    "end": "184080"
  },
  {
    "text": "next open up this table and add an entry",
    "start": "184080",
    "end": "186660"
  },
  {
    "text": "for Mason",
    "start": "186660",
    "end": "187980"
  },
  {
    "text": "inside of this entry We'll add a block",
    "start": "187980",
    "end": "189840"
  },
  {
    "text": "for our options which will Define our",
    "start": "189840",
    "end": "191760"
  },
  {
    "text": "ensure installed table",
    "start": "191760",
    "end": "193620"
  },
  {
    "text": "the contents of this table defines the",
    "start": "193620",
    "end": "195540"
  },
  {
    "text": "dependencies that Mason should manage",
    "start": "195540",
    "end": "197099"
  },
  {
    "text": "for us",
    "start": "197099",
    "end": "198000"
  },
  {
    "text": "let's add pyrite to this list",
    "start": "198000",
    "end": "201000"
  },
  {
    "text": "next we want to make sure we import this",
    "start": "201000",
    "end": "202980"
  },
  {
    "text": "file whenever we load near them to do",
    "start": "202980",
    "end": "205260"
  },
  {
    "text": "this head over to the chatrc.lure file",
    "start": "205260",
    "end": "207480"
  },
  {
    "text": "in the custom directory if you don't",
    "start": "207480",
    "end": "209580"
  },
  {
    "text": "have this file be sure to create it",
    "start": "209580",
    "end": "211920"
  },
  {
    "text": "inside of this file is where we're going",
    "start": "211920",
    "end": "213720"
  },
  {
    "text": "to load our custom plugins to do so add",
    "start": "213720",
    "end": "216420"
  },
  {
    "text": "in the following line which will tell",
    "start": "216420",
    "end": "217800"
  },
  {
    "text": "nvchad where our custom plugin file",
    "start": "217800",
    "end": "219840"
  },
  {
    "text": "lives",
    "start": "219840",
    "end": "221040"
  },
  {
    "text": "the file saved go ahead and restart",
    "start": "221040",
    "end": "222659"
  },
  {
    "text": "neovim to reload our configuration",
    "start": "222659",
    "end": "225239"
  },
  {
    "text": "once you're back inside of neovim call",
    "start": "225239",
    "end": "227040"
  },
  {
    "text": "the Mason install all command to",
    "start": "227040",
    "end": "228959"
  },
  {
    "text": "download and install our new dependency",
    "start": "228959",
    "end": "231360"
  },
  {
    "text": "after Mason is finished we can go ahead",
    "start": "231360",
    "end": "233280"
  },
  {
    "text": "and configure pyrite",
    "start": "233280",
    "end": "234959"
  },
  {
    "text": "heading back over to our custom plugins",
    "start": "234959",
    "end": "236940"
  },
  {
    "text": "file let's add a new entry to our custom",
    "start": "236940",
    "end": "238799"
  },
  {
    "text": "plugins table",
    "start": "238799",
    "end": "240120"
  },
  {
    "text": "we're going to override another plugin",
    "start": "240120",
    "end": "241980"
  },
  {
    "text": "from nvchat called neovim nvim LSP",
    "start": "241980",
    "end": "245159"
  },
  {
    "text": "config this plugin is created by near",
    "start": "245159",
    "end": "247500"
  },
  {
    "text": "them and provides some default",
    "start": "247500",
    "end": "248760"
  },
  {
    "text": "configurations for use with LSP servers",
    "start": "248760",
    "end": "251360"
  },
  {
    "text": "inside of this entry add a function for",
    "start": "251360",
    "end": "253920"
  },
  {
    "text": "the config and add the following lines",
    "start": "253920",
    "end": "255599"
  },
  {
    "text": "to both import the default and V chat",
    "start": "255599",
    "end": "257880"
  },
  {
    "text": "LSP config and also a new custom file",
    "start": "257880",
    "end": "260100"
  },
  {
    "text": "we're about to create next we're going",
    "start": "260100",
    "end": "262260"
  },
  {
    "text": "to create a new file in our custom",
    "start": "262260",
    "end": "263580"
  },
  {
    "text": "directory under configs LSP config.lure",
    "start": "263580",
    "end": "267180"
  },
  {
    "text": "you can do this in neovim by navigating",
    "start": "267180",
    "end": "269520"
  },
  {
    "text": "to the tree view pressing the a key and",
    "start": "269520",
    "end": "271860"
  },
  {
    "text": "typing out the full file path",
    "start": "271860",
    "end": "274080"
  },
  {
    "text": "once you've created the file open it up",
    "start": "274080",
    "end": "275759"
  },
  {
    "text": "in your editor this file is where we're",
    "start": "275759",
    "end": "277860"
  },
  {
    "text": "going to store the configuration for our",
    "start": "277860",
    "end": "279479"
  },
  {
    "text": "LSP servers",
    "start": "279479",
    "end": "281100"
  },
  {
    "text": "first we need to import the existing",
    "start": "281100",
    "end": "282780"
  },
  {
    "text": "nvchat LSP configuration in order to",
    "start": "282780",
    "end": "285180"
  },
  {
    "text": "obtain the on attach and capabilities",
    "start": "285180",
    "end": "287040"
  },
  {
    "text": "functions",
    "start": "287040",
    "end": "288180"
  },
  {
    "text": "these are used to define our editor's",
    "start": "288180",
    "end": "289979"
  },
  {
    "text": "capabilities and to perform a callback",
    "start": "289979",
    "end": "291900"
  },
  {
    "text": "for when our LSP server is attached next",
    "start": "291900",
    "end": "294900"
  },
  {
    "text": "we import the LSP config plugin which is",
    "start": "294900",
    "end": "297840"
  },
  {
    "text": "what we'll use for setting up pyrite",
    "start": "297840",
    "end": "300180"
  },
  {
    "text": "to set up pyrite we call the LSP",
    "start": "300180",
    "end": "302660"
  },
  {
    "text": "config.pyrite.setup function and pass in",
    "start": "302660",
    "end": "304979"
  },
  {
    "text": "our options",
    "start": "304979",
    "end": "306479"
  },
  {
    "text": "in these options we'll set the unattach",
    "start": "306479",
    "end": "308820"
  },
  {
    "text": "and capabilities values to the functions",
    "start": "308820",
    "end": "310740"
  },
  {
    "text": "that we imported earlier and we'll set",
    "start": "310740",
    "end": "312720"
  },
  {
    "text": "the file type that we want the LSP",
    "start": "312720",
    "end": "314220"
  },
  {
    "text": "server to load on to be python this",
    "start": "314220",
    "end": "316259"
  },
  {
    "text": "should be all we need for a default",
    "start": "316259",
    "end": "317639"
  },
  {
    "text": "setup with Pyrite let's go and check it",
    "start": "317639",
    "end": "319740"
  },
  {
    "text": "out with some python code here I have a",
    "start": "319740",
    "end": "322620"
  },
  {
    "text": "python function to generate prime",
    "start": "322620",
    "end": "324120"
  },
  {
    "text": "numbers",
    "start": "324120",
    "end": "325080"
  },
  {
    "text": "as I start typing we can see pyrite",
    "start": "325080",
    "end": "327240"
  },
  {
    "text": "provides some code suggestions for use",
    "start": "327240",
    "end": "329400"
  },
  {
    "text": "with our list as well as this pyrite",
    "start": "329400",
    "end": "331440"
  },
  {
    "text": "will also provide some inline messages",
    "start": "331440",
    "end": "333000"
  },
  {
    "text": "whenever we have errors in our code this",
    "start": "333000",
    "end": "335820"
  },
  {
    "text": "suggests that our LSP config is working",
    "start": "335820",
    "end": "337560"
  },
  {
    "text": "as expected which we can validate using",
    "start": "337560",
    "end": "339660"
  },
  {
    "text": "the LSP info command here we can see",
    "start": "339660",
    "end": "342360"
  },
  {
    "text": "that pyrite is attached to our current",
    "start": "342360",
    "end": "344039"
  },
  {
    "text": "python buffer",
    "start": "344039",
    "end": "345720"
  },
  {
    "text": "nice",
    "start": "345720",
    "end": "347520"
  },
  {
    "start": "347000",
    "end": "486000"
  },
  {
    "text": "the next feature we're going to add is",
    "start": "347520",
    "end": "349380"
  },
  {
    "text": "static analysis and linting for our",
    "start": "349380",
    "end": "351300"
  },
  {
    "text": "python code now we could just change",
    "start": "351300",
    "end": "353400"
  },
  {
    "text": "from using pyrite to using python LSP",
    "start": "353400",
    "end": "355560"
  },
  {
    "text": "server which has a number of static",
    "start": "355560",
    "end": "357720"
  },
  {
    "text": "analyzers built in however I believe",
    "start": "357720",
    "end": "359940"
  },
  {
    "text": "it's more educational and extensible to",
    "start": "359940",
    "end": "362039"
  },
  {
    "text": "show how to do this using the null LS",
    "start": "362039",
    "end": "364139"
  },
  {
    "text": "plugin instead null LS is a neovim",
    "start": "364139",
    "end": "367199"
  },
  {
    "text": "plugin that enables non-lsp tooling such",
    "start": "367199",
    "end": "369419"
  },
  {
    "text": "as formatters and linters to have an LSP",
    "start": "369419",
    "end": "371759"
  },
  {
    "text": "interface null LS is a really powerful",
    "start": "371759",
    "end": "374759"
  },
  {
    "text": "plugin for language tooling for our",
    "start": "374759",
    "end": "376860"
  },
  {
    "text": "python configuration we're going to use",
    "start": "376860",
    "end": "378660"
  },
  {
    "text": "two tools with null LS mipi for static",
    "start": "378660",
    "end": "381900"
  },
  {
    "text": "type checking and rough for faster",
    "start": "381900",
    "end": "384060"
  },
  {
    "text": "python linting there are a number of",
    "start": "384060",
    "end": "386580"
  },
  {
    "text": "other python tools that work with the",
    "start": "386580",
    "end": "388319"
  },
  {
    "text": "null LS so be sure to check out the",
    "start": "388319",
    "end": "390360"
  },
  {
    "text": "built-ins documentation on GitHub to see",
    "start": "390360",
    "end": "392699"
  },
  {
    "text": "if there's any others you'd like to use",
    "start": "392699",
    "end": "394139"
  },
  {
    "text": "the link is in the description",
    "start": "394139",
    "end": "396360"
  },
  {
    "text": "to get started let's add an entry for",
    "start": "396360",
    "end": "398460"
  },
  {
    "text": "null LS in our custom plugins.lure file",
    "start": "398460",
    "end": "401039"
  },
  {
    "text": "we'll set the file type to be Python and",
    "start": "401039",
    "end": "402720"
  },
  {
    "text": "add in a block for our custom options as",
    "start": "402720",
    "end": "404880"
  },
  {
    "text": "this configuration can get a little",
    "start": "404880",
    "end": "406319"
  },
  {
    "text": "heavy We'll add our options into another",
    "start": "406319",
    "end": "408600"
  },
  {
    "text": "file so let's require our",
    "start": "408600",
    "end": "411800"
  },
  {
    "text": "custom.configs.null LS file and return",
    "start": "411800",
    "end": "413880"
  },
  {
    "text": "it here",
    "start": "413880",
    "end": "415319"
  },
  {
    "text": "now we can create this new file in our",
    "start": "415319",
    "end": "417300"
  },
  {
    "text": "custom configs directory called null",
    "start": "417300",
    "end": "419520"
  },
  {
    "text": "ls.lua",
    "start": "419520",
    "end": "421199"
  },
  {
    "text": "once that's done open it up and inside",
    "start": "421199",
    "end": "423000"
  },
  {
    "text": "we'll Define an empty table called ops",
    "start": "423000",
    "end": "425100"
  },
  {
    "text": "and return it",
    "start": "425100",
    "end": "426660"
  },
  {
    "text": "now we need to import the null LS",
    "start": "426660",
    "end": "428819"
  },
  {
    "text": "package in order to use the built-in",
    "start": "428819",
    "end": "430860"
  },
  {
    "text": "sources after that we'll add the sources",
    "start": "430860",
    "end": "433680"
  },
  {
    "text": "we want to our sources table in the",
    "start": "433680",
    "end": "435960"
  },
  {
    "text": "options let's add an entry for both my",
    "start": "435960",
    "end": "438479"
  },
  {
    "text": "pi and rough with the two following",
    "start": "438479",
    "end": "440580"
  },
  {
    "text": "lines",
    "start": "440580",
    "end": "441900"
  },
  {
    "text": "now we just need to make sure both of",
    "start": "441900",
    "end": "443580"
  },
  {
    "text": "these tools exist on our system let's go",
    "start": "443580",
    "end": "446039"
  },
  {
    "text": "ahead and do this using Mason jumping",
    "start": "446039",
    "end": "448319"
  },
  {
    "text": "back over to the custom plugins lure",
    "start": "448319",
    "end": "450060"
  },
  {
    "text": "file we can add both my pi and rough to",
    "start": "450060",
    "end": "452400"
  },
  {
    "text": "our ensure installed list in our Mason",
    "start": "452400",
    "end": "454560"
  },
  {
    "text": "entry now if we run the Mason install",
    "start": "454560",
    "end": "457020"
  },
  {
    "text": "all command we should see a window open",
    "start": "457020",
    "end": "458759"
  },
  {
    "text": "up with our new dependencies being",
    "start": "458759",
    "end": "460199"
  },
  {
    "text": "installed if this doesn't work for you",
    "start": "460199",
    "end": "462180"
  },
  {
    "text": "you may need to restart any of them once",
    "start": "462180",
    "end": "464280"
  },
  {
    "text": "that's done we can test out our new",
    "start": "464280",
    "end": "465419"
  },
  {
    "text": "linters over in our primes python code",
    "start": "465419",
    "end": "468120"
  },
  {
    "text": "we should be able to see any inline",
    "start": "468120",
    "end": "470099"
  },
  {
    "text": "messages for any code that violates our",
    "start": "470099",
    "end": "471840"
  },
  {
    "text": "linting rules we can trigger this by",
    "start": "471840",
    "end": "473880"
  },
  {
    "text": "adding an unused variable which rough",
    "start": "473880",
    "end": "476099"
  },
  {
    "text": "will detect and throw a warning for",
    "start": "476099",
    "end": "478319"
  },
  {
    "text": "we can also trigger an error from my Pi",
    "start": "478319",
    "end": "480240"
  },
  {
    "text": "by passing an invalid type as the",
    "start": "480240",
    "end": "482340"
  },
  {
    "text": "argument to our primes function",
    "start": "482340",
    "end": "484500"
  },
  {
    "text": "very cool",
    "start": "484500",
    "end": "486419"
  },
  {
    "start": "486000",
    "end": "590000"
  },
  {
    "text": "the next feature to add is auto",
    "start": "486419",
    "end": "488160"
  },
  {
    "text": "formatting which will reorganize and",
    "start": "488160",
    "end": "490319"
  },
  {
    "text": "format our code whenever we save",
    "start": "490319",
    "end": "492539"
  },
  {
    "text": "we can add Auto formatting to near them",
    "start": "492539",
    "end": "494759"
  },
  {
    "text": "using null LS and the black Auto",
    "start": "494759",
    "end": "496979"
  },
  {
    "text": "formatting tool for python which formats",
    "start": "496979",
    "end": "499379"
  },
  {
    "text": "code to the pep 8 standard if you prefer",
    "start": "499379",
    "end": "502139"
  },
  {
    "text": "a different style for auto formatting",
    "start": "502139",
    "end": "504060"
  },
  {
    "text": "fortunately there are other options",
    "start": "504060",
    "end": "505979"
  },
  {
    "text": "provided by another LS be sure to check",
    "start": "505979",
    "end": "508440"
  },
  {
    "text": "in the built-in sources documentation to",
    "start": "508440",
    "end": "510360"
  },
  {
    "text": "see which one you want to use",
    "start": "510360",
    "end": "512039"
  },
  {
    "text": "to get started with adding in our Auto",
    "start": "512039",
    "end": "513959"
  },
  {
    "text": "formatter we first need to install black",
    "start": "513959",
    "end": "515760"
  },
  {
    "text": "on our system this is probably pretty",
    "start": "515760",
    "end": "517979"
  },
  {
    "text": "familiar by now but we can do so by",
    "start": "517979",
    "end": "519719"
  },
  {
    "text": "adding it to the Mason insure installed",
    "start": "519719",
    "end": "521760"
  },
  {
    "text": "list",
    "start": "521760",
    "end": "522659"
  },
  {
    "text": "once added we can then call the Mason",
    "start": "522659",
    "end": "524459"
  },
  {
    "text": "install or command to download and",
    "start": "524459",
    "end": "526260"
  },
  {
    "text": "install it",
    "start": "526260",
    "end": "527940"
  },
  {
    "text": "now we can add black to our sources list",
    "start": "527940",
    "end": "529980"
  },
  {
    "text": "in our custom null LS config file this",
    "start": "529980",
    "end": "533220"
  },
  {
    "text": "should be all we need for a basic setup",
    "start": "533220",
    "end": "534779"
  },
  {
    "text": "if we go back to our python primes code",
    "start": "534779",
    "end": "536820"
  },
  {
    "text": "we can test this out nvchat provides a",
    "start": "536820",
    "end": "539760"
  },
  {
    "text": "simple mnemonic keybinding for running",
    "start": "539760",
    "end": "541980"
  },
  {
    "text": "any attached Auto formatters manually by",
    "start": "541980",
    "end": "545040"
  },
  {
    "text": "typing space F and M if we run this",
    "start": "545040",
    "end": "547140"
  },
  {
    "text": "we'll see our code is formatted",
    "start": "547140",
    "end": "548640"
  },
  {
    "text": "according to the pep 8 Style",
    "start": "548640",
    "end": "550920"
  },
  {
    "text": "this is nice and dull but as humans are",
    "start": "550920",
    "end": "553260"
  },
  {
    "text": "terrible at remembering things it's",
    "start": "553260",
    "end": "554940"
  },
  {
    "text": "preferable to set this to automatically",
    "start": "554940",
    "end": "556800"
  },
  {
    "text": "format on Save",
    "start": "556800",
    "end": "558660"
  },
  {
    "text": "we can set this up pretty easily and",
    "start": "558660",
    "end": "560339"
  },
  {
    "text": "neovim to do so head back over to the",
    "start": "560339",
    "end": "562680"
  },
  {
    "text": "null LS config file here we want to",
    "start": "562680",
    "end": "565019"
  },
  {
    "text": "define a new Auto Group for our Auto",
    "start": "565019",
    "end": "567060"
  },
  {
    "text": "formatting Auto command then we'll add",
    "start": "567060",
    "end": "569880"
  },
  {
    "text": "an unattach method to our options which",
    "start": "569880",
    "end": "571740"
  },
  {
    "text": "will make use of this order group and",
    "start": "571740",
    "end": "573060"
  },
  {
    "text": "Define a pre-save hook for our buffers",
    "start": "573060",
    "end": "575100"
  },
  {
    "text": "which will run the Vim LSP format",
    "start": "575100",
    "end": "577740"
  },
  {
    "text": "command",
    "start": "577740",
    "end": "578820"
  },
  {
    "text": "now let's jump on back over to our code",
    "start": "578820",
    "end": "580920"
  },
  {
    "text": "and add in some bad formatting to test",
    "start": "580920",
    "end": "582899"
  },
  {
    "text": "this out when we go ahead and save using",
    "start": "582899",
    "end": "585300"
  },
  {
    "text": "colon w we should see the file",
    "start": "585300",
    "end": "587160"
  },
  {
    "text": "automatically format nice",
    "start": "587160",
    "end": "590160"
  },
  {
    "start": "590000",
    "end": "911000"
  },
  {
    "text": "the last feature we want to add is a",
    "start": "590160",
    "end": "591839"
  },
  {
    "text": "debugger so that we're able to test run",
    "start": "591839",
    "end": "593820"
  },
  {
    "text": "and debug python code from within neovim",
    "start": "593820",
    "end": "596820"
  },
  {
    "text": "to achieve this we're going to use a",
    "start": "596820",
    "end": "598740"
  },
  {
    "text": "plugin called nvim dap which stands for",
    "start": "598740",
    "end": "601320"
  },
  {
    "text": "debug adapter protocol this plugin",
    "start": "601320",
    "end": "603959"
  },
  {
    "text": "allows us to connect neovim to a number",
    "start": "603959",
    "end": "605760"
  },
  {
    "text": "of different external debugging tools as",
    "start": "605760",
    "end": "608640"
  },
  {
    "text": "we're setting up neovin for python we'll",
    "start": "608640",
    "end": "610560"
  },
  {
    "text": "also need to add another plugin called",
    "start": "610560",
    "end": "612360"
  },
  {
    "text": "nvim dap python which provides an",
    "start": "612360",
    "end": "615180"
  },
  {
    "text": "extension to DAP in order to communicate",
    "start": "615180",
    "end": "616980"
  },
  {
    "text": "with the debug Pi debugger let's add",
    "start": "616980",
    "end": "619740"
  },
  {
    "text": "both of these by heading back to our",
    "start": "619740",
    "end": "621540"
  },
  {
    "text": "custom plugins file and adding in an",
    "start": "621540",
    "end": "623580"
  },
  {
    "text": "entry for both nvimdap and nvimdap",
    "start": "623580",
    "end": "626220"
  },
  {
    "text": "python",
    "start": "626220",
    "end": "627420"
  },
  {
    "text": "in the nvm.python entry let's specify",
    "start": "627420",
    "end": "630000"
  },
  {
    "text": "the file type to load this plugin for as",
    "start": "630000",
    "end": "631860"
  },
  {
    "text": "Python and also add a table for our",
    "start": "631860",
    "end": "634080"
  },
  {
    "text": "plugins dependencies with an entry of",
    "start": "634080",
    "end": "636060"
  },
  {
    "text": "NVM dap this means that whenever our and",
    "start": "636060",
    "end": "638339"
  },
  {
    "text": "then dap python plugin is loaded then",
    "start": "638339",
    "end": "640440"
  },
  {
    "text": "end in Dap will be loaded as well",
    "start": "640440",
    "end": "642540"
  },
  {
    "text": "next add in a config function to the",
    "start": "642540",
    "end": "644540"
  },
  {
    "text": "nvim.python entry and add in the",
    "start": "644540",
    "end": "646860"
  },
  {
    "text": "following line which points to the",
    "start": "646860",
    "end": "648540"
  },
  {
    "text": "virtual environment path of our debug Pi",
    "start": "648540",
    "end": "650820"
  },
  {
    "text": "instance",
    "start": "650820",
    "end": "652019"
  },
  {
    "text": "then call the DAP python setup function",
    "start": "652019",
    "end": "654720"
  },
  {
    "text": "with this path",
    "start": "654720",
    "end": "656160"
  },
  {
    "text": "finally we just need to make sure we",
    "start": "656160",
    "end": "657899"
  },
  {
    "text": "have debug Pi installed on our system we",
    "start": "657899",
    "end": "660540"
  },
  {
    "text": "can do this by adding an entry to Mason",
    "start": "660540",
    "end": "662220"
  },
  {
    "text": "in the insure installed list",
    "start": "662220",
    "end": "664740"
  },
  {
    "text": "after doing so make sure to call the",
    "start": "664740",
    "end": "666600"
  },
  {
    "text": "Mason install all command",
    "start": "666600",
    "end": "669120"
  },
  {
    "text": "with that we have a basic debugger setup",
    "start": "669120",
    "end": "671640"
  },
  {
    "text": "that we can use but I think it's worth",
    "start": "671640",
    "end": "673500"
  },
  {
    "text": "adding in another plugin to level up the",
    "start": "673500",
    "end": "675300"
  },
  {
    "text": "debugging experience in neovim that",
    "start": "675300",
    "end": "677880"
  },
  {
    "text": "plugin is called envym dap UI which",
    "start": "677880",
    "end": "680579"
  },
  {
    "text": "provides visual elements to make",
    "start": "680579",
    "end": "681899"
  },
  {
    "text": "inspecting values and working with debug",
    "start": "681899",
    "end": "683880"
  },
  {
    "text": "commands and absolute Joy",
    "start": "683880",
    "end": "686100"
  },
  {
    "text": "let's go ahead and add this to our",
    "start": "686100",
    "end": "687959"
  },
  {
    "text": "plugins table and set up nvin dap as a",
    "start": "687959",
    "end": "690600"
  },
  {
    "text": "dependency",
    "start": "690600",
    "end": "691920"
  },
  {
    "text": "next we'll want to add a configuration",
    "start": "691920",
    "end": "693600"
  },
  {
    "text": "function which will set up the UI to",
    "start": "693600",
    "end": "695579"
  },
  {
    "text": "automatically load in response to",
    "start": "695579",
    "end": "697140"
  },
  {
    "text": "debugging events",
    "start": "697140",
    "end": "698700"
  },
  {
    "text": "make sure to copy the following lines as",
    "start": "698700",
    "end": "700740"
  },
  {
    "text": "I have you can also find a link to my",
    "start": "700740",
    "end": "703320"
  },
  {
    "text": "configuration in the description if",
    "start": "703320",
    "end": "704940"
  },
  {
    "text": "copying is too much",
    "start": "704940",
    "end": "706980"
  },
  {
    "text": "All That Remains is to add in the",
    "start": "706980",
    "end": "709200"
  },
  {
    "text": "nvimdap UI as a dependency of our",
    "start": "709200",
    "end": "711300"
  },
  {
    "text": "nvimdap python plugin so that the UI is",
    "start": "711300",
    "end": "714060"
  },
  {
    "text": "also loaded whenever we load a python",
    "start": "714060",
    "end": "715860"
  },
  {
    "text": "file",
    "start": "715860",
    "end": "716700"
  },
  {
    "text": "with that we have all of the plugins we",
    "start": "716700",
    "end": "718740"
  },
  {
    "text": "need but there is one final thing we",
    "start": "718740",
    "end": "720660"
  },
  {
    "text": "should do",
    "start": "720660",
    "end": "721620"
  },
  {
    "text": "to make working with the debugger easier",
    "start": "721620",
    "end": "723540"
  },
  {
    "text": "you can add some custom mappings to",
    "start": "723540",
    "end": "725399"
  },
  {
    "text": "nvchat in order to set breakpoints and",
    "start": "725399",
    "end": "727560"
  },
  {
    "text": "to run debug pi",
    "start": "727560",
    "end": "729600"
  },
  {
    "text": "to do this first create a new file",
    "start": "729600",
    "end": "731820"
  },
  {
    "text": "called mappings.lure in the custom",
    "start": "731820",
    "end": "733680"
  },
  {
    "text": "directory inside of this file to find an",
    "start": "733680",
    "end": "736320"
  },
  {
    "text": "empty lure table called M and return it",
    "start": "736320",
    "end": "739079"
  },
  {
    "text": "now add a new field to this table called",
    "start": "739079",
    "end": "741240"
  },
  {
    "text": "dap which we'll use to store any custom",
    "start": "741240",
    "end": "743820"
  },
  {
    "text": "mappings associated with the mvimdap",
    "start": "743820",
    "end": "746160"
  },
  {
    "text": "plugin",
    "start": "746160",
    "end": "747420"
  },
  {
    "text": "in this table we'll set the value of",
    "start": "747420",
    "end": "749040"
  },
  {
    "text": "plugin to be true which means these",
    "start": "749040",
    "end": "750839"
  },
  {
    "text": "mappings will only exist when we",
    "start": "750839",
    "end": "752459"
  },
  {
    "text": "explicitly load them",
    "start": "752459",
    "end": "754380"
  },
  {
    "text": "next add the following lines to specify",
    "start": "754380",
    "end": "756779"
  },
  {
    "text": "that we want this mapping to work only",
    "start": "756779",
    "end": "758399"
  },
  {
    "text": "on normal mode as defined by the end",
    "start": "758399",
    "end": "760740"
  },
  {
    "text": "field then we can add our mapping which",
    "start": "760740",
    "end": "763620"
  },
  {
    "text": "is defined by the leader or space key",
    "start": "763620",
    "end": "765360"
  },
  {
    "text": "followed by D and B you can remember",
    "start": "765360",
    "end": "768120"
  },
  {
    "text": "this mnemonically as debug breakpoint",
    "start": "768120",
    "end": "771480"
  },
  {
    "text": "this mapping will call the DAP toggle",
    "start": "771480",
    "end": "773519"
  },
  {
    "text": "breakpoint command for us",
    "start": "773519",
    "end": "775260"
  },
  {
    "text": "the next mapping we want to add is for",
    "start": "775260",
    "end": "777120"
  },
  {
    "text": "running the nearest test case in our",
    "start": "777120",
    "end": "778740"
  },
  {
    "text": "python code to do this we need to add",
    "start": "778740",
    "end": "781079"
  },
  {
    "text": "another entry to our end table called",
    "start": "781079",
    "end": "783360"
  },
  {
    "text": "dap underscore python we'll also set the",
    "start": "783360",
    "end": "786240"
  },
  {
    "text": "plugin value of this entry to be true",
    "start": "786240",
    "end": "788040"
  },
  {
    "text": "and Define a mapping for normal mode",
    "start": "788040",
    "end": "790079"
  },
  {
    "text": "this mapping will be for space DPR which",
    "start": "790079",
    "end": "793860"
  },
  {
    "text": "stands for debug python run",
    "start": "793860",
    "end": "796920"
  },
  {
    "text": "this mapping will load the NVM dap",
    "start": "796920",
    "end": "799260"
  },
  {
    "text": "python package and call the test method",
    "start": "799260",
    "end": "801720"
  },
  {
    "text": "function",
    "start": "801720",
    "end": "802680"
  },
  {
    "text": "with our mappings defined the last thing",
    "start": "802680",
    "end": "804660"
  },
  {
    "text": "we need to do is go ahead and load them",
    "start": "804660",
    "end": "806399"
  },
  {
    "text": "jump on over to the Chad rc.lure file",
    "start": "806399",
    "end": "809519"
  },
  {
    "text": "and import the mappings file and assign",
    "start": "809519",
    "end": "811560"
  },
  {
    "text": "them to the end table",
    "start": "811560",
    "end": "813300"
  },
  {
    "text": "next head back over to our plugins.lure",
    "start": "813300",
    "end": "815880"
  },
  {
    "text": "file and add a config function block to",
    "start": "815880",
    "end": "818399"
  },
  {
    "text": "our mvimdap entry which we will use to",
    "start": "818399",
    "end": "821100"
  },
  {
    "text": "load the dab mappings",
    "start": "821100",
    "end": "823079"
  },
  {
    "text": "we'll do the same thing again in our MVM",
    "start": "823079",
    "end": "825300"
  },
  {
    "text": "dap python config block and add a line",
    "start": "825300",
    "end": "827220"
  },
  {
    "text": "in to load the DAP python mappings",
    "start": "827220",
    "end": "830339"
  },
  {
    "text": "with that done we should be complete",
    "start": "830339",
    "end": "832079"
  },
  {
    "text": "finally let's go ahead and test this out",
    "start": "832079",
    "end": "835740"
  },
  {
    "text": "back over in our Prime code let's go",
    "start": "835740",
    "end": "838440"
  },
  {
    "text": "ahead and install the Python language",
    "start": "838440",
    "end": "840060"
  },
  {
    "text": "for tree sitter this is required by MVM",
    "start": "840060",
    "end": "843060"
  },
  {
    "text": "dap to better navigate and understand",
    "start": "843060",
    "end": "844680"
  },
  {
    "text": "the syntax of our code",
    "start": "844680",
    "end": "846720"
  },
  {
    "text": "once that's done we'll need to add in",
    "start": "846720",
    "end": "848399"
  },
  {
    "text": "some tests in order to run our debugger",
    "start": "848399",
    "end": "850380"
  },
  {
    "text": "I'm going to generate these tests using",
    "start": "850380",
    "end": "852600"
  },
  {
    "text": "AI with a secret command if you're",
    "start": "852600",
    "end": "855300"
  },
  {
    "text": "interested in knowing how I did this",
    "start": "855300",
    "end": "856560"
  },
  {
    "text": "don't worry I'll be showcasing in",
    "start": "856560",
    "end": "858480"
  },
  {
    "text": "another video",
    "start": "858480",
    "end": "860880"
  },
  {
    "text": "with our tests generated and moved to",
    "start": "860880",
    "end": "862980"
  },
  {
    "text": "the correct file let's go ahead and use",
    "start": "862980",
    "end": "864660"
  },
  {
    "text": "our new mapping of space D and B to set",
    "start": "864660",
    "end": "867600"
  },
  {
    "text": "a breakpoint which you can see is set by",
    "start": "867600",
    "end": "869700"
  },
  {
    "text": "the B next to the line number then we",
    "start": "869700",
    "end": "871980"
  },
  {
    "text": "can use the mapping of space d p and R",
    "start": "871980",
    "end": "875279"
  },
  {
    "text": "to run our tests",
    "start": "875279",
    "end": "877139"
  },
  {
    "text": "as you can see once our breakpoint is",
    "start": "877139",
    "end": "879060"
  },
  {
    "text": "hit a number of panels are opened up",
    "start": "879060",
    "end": "880860"
  },
  {
    "text": "which is part of MVM dap UI",
    "start": "880860",
    "end": "883560"
  },
  {
    "text": "we can use these panels for inspecting",
    "start": "883560",
    "end": "885660"
  },
  {
    "text": "our local variables or for controlling",
    "start": "885660",
    "end": "887699"
  },
  {
    "text": "our debugger by stepping over lines of",
    "start": "887699",
    "end": "889500"
  },
  {
    "text": "code continuing until the next",
    "start": "889500",
    "end": "891180"
  },
  {
    "text": "breakpoint or just stopping execution",
    "start": "891180",
    "end": "893880"
  },
  {
    "text": "with that we have turned neovim from a",
    "start": "893880",
    "end": "895740"
  },
  {
    "text": "basic text editor into a powerful and",
    "start": "895740",
    "end": "897839"
  },
  {
    "text": "configurable IDE for working with python",
    "start": "897839",
    "end": "900839"
  },
  {
    "text": "if you have any other languages you'd",
    "start": "900839",
    "end": "902459"
  },
  {
    "text": "like to see me do in this series then",
    "start": "902459",
    "end": "904019"
  },
  {
    "text": "please let me know in the comments down",
    "start": "904019",
    "end": "905339"
  },
  {
    "text": "below",
    "start": "905339",
    "end": "906180"
  },
  {
    "text": "I hope you enjoyed this video and I'll",
    "start": "906180",
    "end": "907860"
  },
  {
    "text": "see you on the next one",
    "start": "907860",
    "end": "910699"
  }
]