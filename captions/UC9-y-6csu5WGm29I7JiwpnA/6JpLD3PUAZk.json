[
  {
    "start": "0",
    "end": "17000"
  },
  {
    "text": "So, I've come here today because you promised me \"cache\", but I don't see any money.",
    "start": "0",
    "end": "3420"
  },
  {
    "text": "I thought you were paying me for these things, but- No, we're not talking about that sort of cash.",
    "start": "3420",
    "end": "7480"
  },
  {
    "text": "We're actually looking for the cache that is built into our CPUs and they're used in computers",
    "start": "7480",
    "end": "12639"
  },
  {
    "text": "to try and make things run faster.",
    "start": "12640",
    "end": "14880"
  },
  {
    "start": "17000",
    "end": "122000"
  },
  {
    "text": "Now, we talked about how the CPU talks to memory, and we spent some time looking at how",
    "start": "17120",
    "end": "21960"
  },
  {
    "text": "we can build memory chips out of discrete logic circuits.",
    "start": "21960",
    "end": "25720"
  },
  {
    "text": "While you probably want to build all the memory in your computer system like that,",
    "start": "25720",
    "end": "28340"
  },
  {
    "text": "there are other ways you can build them to create SIMs as you're using in the late 80s, early 90s.",
    "start": "28340",
    "end": "33200"
  },
  {
    "text": "And this one is about 256 kilobytes, but you can get DIMMs that are as big as 16 gig these days.",
    "start": "33360",
    "end": "39440"
  },
  {
    "text": "Now, if you remember back to what Steve Furber was saying about when you build the BBC micro,",
    "start": "39440",
    "end": "43399"
  },
  {
    "text": "he was talking about how when they built it, they used RAM chips that ran at twice the speed of the CPU.",
    "start": "43640",
    "end": "50440"
  },
  {
    "text": "So, we got the 8 RAM chips here, and they're connected directly, more or less, to the CPU here.",
    "start": "50440",
    "end": "56519"
  },
  {
    "text": "The memory ran at 4 megahertz and the CPU ran at 2 megahertz.",
    "start": "56520",
    "end": "60640"
  },
  {
    "text": "And so the CPU could make its requests and the RAM  would return it very quickly.",
    "start": "60640",
    "end": "63840"
  },
  {
    "text": "And while the CPU was still processing that, the video circuits could grab the data from memory",
    "start": "63840",
    "end": "68360"
  },
  {
    "text": "to form the display. So, it was able to multiplex the two and not slow the CPU down,",
    "start": "68360",
    "end": "73400"
  },
  {
    "text": "unlike some of the systems.",
    "start": "73400",
    "end": "74840"
  },
  {
    "text": "Now, as time went on, the CPUs got much faster so by the end of 80s, you could get CPUs like this,",
    "start": "74840",
    "end": "80079"
  },
  {
    "text": "which ran at 8 megahertz and then 16 megahertz, 32 megahertz and so on.",
    "start": "80080",
    "end": "84320"
  },
  {
    "text": "And now a 3 gigahertz CPU is very easy to get a hold of.",
    "start": "84380",
    "end": "89320"
  },
  {
    "text": "Unfortunately, the RAM didn't increase speed at the same rate.",
    "start": "90040",
    "end": "93760"
  },
  {
    "text": "So these days, the RAM runs several orders of magnitude slower than what the CPU runs at.",
    "start": "93760",
    "end": "98240"
  },
  {
    "text": "So, this leaves us with a problem. Even if the clock speed of the CPU increased, it would still have to wait",
    "start": "98240",
    "end": "103259"
  },
  {
    "text": "for the memory, so it wouldn't actually appear to get any faster.",
    "start": "103260",
    "end": "106880"
  },
  {
    "text": "So actually, it is possible to build memory that will work at the speed that the CPU executes at.",
    "start": "106880",
    "end": "111579"
  },
  {
    "text": "But the problem is it takes more space on the silicon to store each bit of information,",
    "start": "111580",
    "end": "115700"
  },
  {
    "text": "and so therefore, it costs a lot more to produce the memory compared to the DIMMs,",
    "start": "115700",
    "end": "120780"
  },
  {
    "text": "the DRAM that we use today.",
    "start": "120780",
    "end": "122299"
  },
  {
    "start": "122000",
    "end": "184000"
  },
  {
    "text": "So the way we get around this is we split the memory up into two types.",
    "start": "122380",
    "end": "125560"
  },
  {
    "text": "We have our main memory, which we build out of dynamic RAM.",
    "start": "125560",
    "end": "128280"
  },
  {
    "text": "But we also have a second type of memory which is actually often built into the CPU as well.",
    "start": "128280",
    "end": "133000"
  },
  {
    "text": "Now this is much smaller, but it's built out of much faster memory.",
    "start": "133000",
    "end": "136360"
  },
  {
    "text": "And this is referred to as the cache. Now, the cache is perhaps an old-fashioned English word,",
    "start": "136360",
    "end": "142080"
  },
  {
    "text": "but it basically just means a small place where we can store things.",
    "start": "142080",
    "end": "144840"
  },
  {
    "text": "So you might use it to store your hidden treasure if you're a pirate or to store your food for winter.",
    "start": "144840",
    "end": "150519"
  },
  {
    "text": "Another example where you might come across a cache is with your web browser.",
    "start": "150520",
    "end": "154000"
  },
  {
    "text": "So the cache on the web browser is used to get around because it takes a relatively long time",
    "start": "154000",
    "end": "157940"
  },
  {
    "text": "to fetch a piece of information over the Internet compared to accessing something",
    "start": "157940",
    "end": "161520"
  },
  {
    "text": "on your local machine.",
    "start": "161520",
    "end": "162420"
  },
  {
    "text": "So what happens is: When you go and fetch a page from the Internet",
    "start": "162420",
    "end": "165319"
  },
  {
    "text": "the browser will go and get the HTML page, it'll get the CSS files, the images and so on.",
    "start": "165320",
    "end": "169860"
  },
  {
    "text": "And it's stores or caches a copy onto your local disk that it can then refer if it needs to get it again.",
    "start": "169860",
    "end": "176040"
  },
  {
    "text": "And the idea is that we can get the data from the local copy a lot quicker than it could",
    "start": "176040",
    "end": "180280"
  },
  {
    "text": "if it had to go fetch it from the web server somewhere else in the world.",
    "start": "180280",
    "end": "184200"
  },
  {
    "start": "184000",
    "end": "212000"
  },
  {
    "text": "And it's this same approach that is used by the CPUs. The CPU's got the same problem.",
    "start": "184200",
    "end": "188099"
  },
  {
    "text": "It can talk to its cache on the CPU very, very quickly, but talking to main memory,",
    "start": "188100",
    "end": "192880"
  },
  {
    "text": "compared to talking to the cache is a relatively long time.",
    "start": "193020",
    "end": "196940"
  },
  {
    "text": "So what happens is: Every time it requests a bit of data, it caches a copy locally",
    "start": "196940",
    "end": "202140"
  },
  {
    "text": "in the cache built onto the CPU, so that when it needs to fetch is again in the near future,",
    "start": "202140",
    "end": "207600"
  },
  {
    "text": "it can access it from its local copy a lot faster.",
    "start": "207780",
    "end": "211459"
  },
  {
    "text": "There's some other tricks that it can do as well, because the CPU can say,",
    "start": "211460",
    "end": "215340"
  },
  {
    "start": "212000",
    "end": "247000"
  },
  {
    "text": "\"Well, actually, if I fetch this instruction, there's a very good chance that I'm going to execute",
    "start": "215340",
    "end": "219379"
  },
  {
    "text": "the next instruction, and the one after that at the same time.\"",
    "start": "219380",
    "end": "222140"
  },
  {
    "text": "And so what it can do is, rather than just getting one word of memory at a time,",
    "start": "222140",
    "end": "226360"
  },
  {
    "text": "it'll say, \"Well okay, get me the next 128 bytes of memory.\"",
    "start": "226360",
    "end": "230280"
  },
  {
    "text": "And it'll read what we call a cache line, one single lot of 128 bytes from memory into the CPU in one go.",
    "start": "230280",
    "end": "236920"
  },
  {
    "text": "The idea being that it takes less time to read 128 bytes in one go, than just to read each 128 bytes individually.",
    "start": "236980",
    "end": "245319"
  },
  {
    "text": "But that's down to the way memory actually store things.",
    "start": "245320",
    "end": "248300"
  },
  {
    "start": "247000",
    "end": "295000"
  },
  {
    "text": "So, we talked about, in the previous video, how we would have an address, a binary number",
    "start": "248300",
    "end": "252120"
  },
  {
    "text": "that represents each different bit in the RAM chips.",
    "start": "252840",
    "end": "256859"
  },
  {
    "text": "But actually, rather than storing it as one big list of bits, it actually stores it as a grid.",
    "start": "257260",
    "end": "263680"
  },
  {
    "text": "The address that you give it from the CPU gets split up to reference a particular row,",
    "start": "263680",
    "end": "267539"
  },
  {
    "text": "and a column of that grid to get the particular bit it's interested in.",
    "start": "267540",
    "end": "272180"
  },
  {
    "text": "Now, the way the RAM chips work: One you've selected a specific row, you can then access",
    "start": "272180",
    "end": "277460"
  },
  {
    "text": "each of the columns in that relatively quickly, compared to changing to a different row.",
    "start": "277460",
    "end": "282539"
  },
  {
    "text": "So if we want to get 128 bytes, if they're all in the same row of memory,",
    "start": "282740",
    "end": "287460"
  },
  {
    "text": "then we can access them very quickly, and so copy them into the CPU's cache much quicker",
    "start": "287460",
    "end": "291940"
  },
  {
    "text": "than if we were having to select different rows at a time.",
    "start": "291940",
    "end": "295100"
  },
  {
    "start": "295000",
    "end": "365000"
  },
  {
    "text": "So, how big does the cache on your CPU need to be?",
    "start": "295460",
    "end": "298580"
  },
  {
    "text": "Well, actually it turns out, you only need a relatively small amount of cache to make a significant difference",
    "start": "298580",
    "end": "303680"
  },
  {
    "text": "because our programs are often sitting in loops, executing the same set of instructions",
    "start": "303680",
    "end": "307900"
  },
  {
    "text": "again and again and again.",
    "start": "307900",
    "end": "309300"
  },
  {
    "text": "So if you've got enough to store that loop, then they can be cached and it'll work fine.",
    "start": "309300",
    "end": "314599"
  },
  {
    "text": "Or the program's accessing the same block of data and manipulating that in different ways.",
    "start": "314600",
    "end": "319400"
  },
  {
    "text": "And so if that will fit into the cache, things work relatively fine.",
    "start": "319400",
    "end": "323160"
  },
  {
    "text": "So we don't need that much. You often use separate caches for the instructions",
    "start": "323160",
    "end": "326780"
  },
  {
    "text": "and for the data so you don't remove the instruction that you're interested in",
    "start": "326780",
    "end": "330720"
  },
  {
    "text": "to put a copy of the data that you're going to process in there.",
    "start": "330720",
    "end": "333700"
  },
  {
    "text": "I mean, you could think about it, that you might have a field full of turnips",
    "start": "333700",
    "end": "336240"
  },
  {
    "text": "and so you'd have to go and dig them up. But you might also have a cupboard with your turnips",
    "start": "336240",
    "end": "340280"
  },
  {
    "text": "in the kitchen, so you can make your stew that night without having to go out into the field",
    "start": "340280",
    "end": "343800"
  },
  {
    "text": "And if you're out working somewhere else, you may even have a turnip in your backpack to eat on the way out.",
    "start": "343800",
    "end": "349759"
  },
  {
    "text": "Second level turnip cache?",
    "start": "350420",
    "end": "351920"
  },
  {
    "text": "Yeah! *laughter*",
    "start": "351920",
    "end": "353120"
  }
]