[
  {
    "text": ">> Sean: We are kicking off a bit of a \nmini-series on things that programmers find",
    "start": "0",
    "end": "4140"
  },
  {
    "text": "essential, and it'd be great to find out\nwhat you think is essential.\n>> BWK: Sure.  Lots of",
    "start": "4140",
    "end": "11400"
  },
  {
    "text": "things that are essential.  Do you want to\nnarrow the scope of that a little bit?",
    "start": "11400",
    "end": "14459"
  },
  {
    "text": "I mean, coffee is essential.\n>> Sean: So within programming, I mean, you want to tell us",
    "start": "14460",
    "end": "20160"
  },
  {
    "text": "about some kind of array -- is that true?\n>> BWK: Yes, I guess I would say that I wanted",
    "start": "20160",
    "end": "27180"
  },
  {
    "text": "to talk primarily about associative\narrays which are in other contexts",
    "start": "27180",
    "end": "31170"
  },
  {
    "text": "called hash tables or sometimes in a\nlanguage like Python they're called",
    "start": "31170",
    "end": "35309"
  },
  {
    "text": "dictionaries.  The idea is an array which\nhas as its subscripts not integers from",
    "start": "35309",
    "end": "42570"
  },
  {
    "text": "0 or 1 up to something, but rather any\narbitrary thing is the subscript of the",
    "start": "42570",
    "end": "48239"
  },
  {
    "text": "array.  And so this gives you a great deal\nof flexibility; you can build really",
    "start": "48239",
    "end": "52378"
  },
  {
    "text": "interesting things with associative\narrays.  I will call them associative",
    "start": "52379",
    "end": "55680"
  },
  {
    "text": "arrays.  If you think hash table if you're\na Java or JavaScript programmer, let's",
    "start": "55680",
    "end": "60449"
  },
  {
    "text": "say, or if you think dictionary for\nPython people, it's the same basic thing.",
    "start": "60449",
    "end": "66890"
  },
  {
    "text": "So the idea is instead of having\nsubscripts which go from let's call it",
    "start": "66890",
    "end": "71820"
  },
  {
    "text": "zero up to something, you have arbitrary\nsubscripts, and for simplicity let's just",
    "start": "71820",
    "end": "76680"
  },
  {
    "text": "call them strings of characters, just\ntext: words like \"Sean\" or \"Dave\" or \"Steve\". \n>> Sean: So",
    "start": "76680",
    "end": "83310"
  },
  {
    "text": "let's get people context there -- we have\nour our film crew in full effect.",
    "start": "83310",
    "end": "89610"
  },
  {
    "text": "So if I understand rightly, then that\nmeans instead of keeping track on you",
    "start": "89610",
    "end": "94049"
  },
  {
    "text": "know number 13 was the number that I\ngave to the number of whatever then instead",
    "start": "94049",
    "end": "98759"
  },
  {
    "text": "it can say nails or screws or whatever \n>> BWK: Correct.  One of the classic",
    "start": "98759",
    "end": "103229"
  },
  {
    "text": "examples that this thing is that you\nwant to keep track of, for example, oh",
    "start": "103229",
    "end": "108530"
  },
  {
    "text": "your groceries that you might buy.  So we\nare buying things like beer and pizza",
    "start": "108530",
    "end": "113188"
  },
  {
    "text": "and coffee and chips, this sort of\nthing.  And so what you'd like to do is",
    "start": "113189",
    "end": "119070"
  },
  {
    "text": "have an array where the subscripts are\nbeer and pizza and chips and coffee or",
    "start": "119070",
    "end": "124649"
  },
  {
    "text": "whatever else.  And then the values of\nthose array elements can be whatever you",
    "start": "124649",
    "end": "130800"
  },
  {
    "text": "want, but they might be for example\nhow much you spent on beer and pizza and",
    "start": "130800",
    "end": "135860"
  },
  {
    "text": "coffee.  And so you could write a very\nsimple program that would simply say \"I",
    "start": "135860",
    "end": "140360"
  },
  {
    "text": "have pizza ten pounds, beer 20 pounds, coffee two",
    "start": "140360",
    "end": "146659"
  },
  {
    "text": "pounds, beer 20 pounds\" and I would like to\njust add up all of the things for the",
    "start": "146659",
    "end": "153260"
  },
  {
    "text": "pizza, all of the things for the beer\nseparately, and so on.  And so I would",
    "start": "153260",
    "end": "157310"
  },
  {
    "text": "simply add that, add numeric values to\nwhat you see in the array, add those",
    "start": "157310",
    "end": "163599"
  },
  {
    "text": "subscripts that are instead of being\nnumbers are just the strings: beer, pizza.",
    "start": "163599",
    "end": "168709"
  },
  {
    "text": "I think it's a lot easier in many\nrespects and so easy to use this stuff,",
    "start": "168709",
    "end": "175040"
  },
  {
    "text": "very natural I think for many people, and\nit turns out the implementation is",
    "start": "175040",
    "end": "178790"
  },
  {
    "text": "actually quite simple as well.  It took I\nimagine in computer science a while for",
    "start": "178790",
    "end": "182390"
  },
  {
    "text": "people to realize how to do it well and\nnow I think people really do understand",
    "start": "182390",
    "end": "185900"
  },
  {
    "text": "how to make effective, efficient\nimplementations of associative arrays.  So",
    "start": "185900",
    "end": "192530"
  },
  {
    "text": "I don't know whether I could perhaps\ndraw a picture that would be useful that",
    "start": "192530",
    "end": "196790"
  },
  {
    "text": "would give somebody an idea of how do\nthis.  Let me try.  \n>> Sean: Sure.\n>> BWK: Let's suppose I",
    "start": "196790",
    "end": "202370"
  },
  {
    "text": "have an array, let's just call it X\nbecause I have no imagination and I",
    "start": "202370",
    "end": "205909"
  },
  {
    "text": "would like to say, okay, the element here\nis pizza.  And I could say how much pizza",
    "start": "205910",
    "end": "210380"
  },
  {
    "text": "did I buy?  Well 20 pounds worth of pizza or\nsomething like that, or maybe it was 20",
    "start": "210380",
    "end": "214639"
  },
  {
    "text": "pizzas -- doesn't matter.  And so I can say X\nof beer equals 10, and so on.  And then I",
    "start": "214639",
    "end": "221180"
  },
  {
    "text": "could later on say well, X of beer equals X\nof beer plus 15.  So this is the way",
    "start": "221180",
    "end": "229010"
  },
  {
    "text": "that you would use these in a program\nwith all of the advantages and they",
    "start": "229010",
    "end": "232400"
  },
  {
    "text": "would look just like the subscripts that you\nwould find if these were integers",
    "start": "232400",
    "end": "236540"
  },
  {
    "text": "instead, like pizza were 1 and beer were 2\nand so on, but this is a lot more natural.",
    "start": "236540",
    "end": "240409"
  },
  {
    "text": "So that's kind of the use of this.  How\nwould you actually build one of these",
    "start": "240410",
    "end": "245000"
  },
  {
    "text": "things?  The internal representation is\noften, and this is where really hash",
    "start": "245000",
    "end": "250819"
  },
  {
    "text": "table is probably the right way to think\nof it, suppose we have in memory",
    "start": "250819",
    "end": "255319"
  },
  {
    "text": "somewhere an honest to god array of the\nsort that we're familiar with where the",
    "start": "255319",
    "end": "259489"
  },
  {
    "text": "subscripts go from 0, 1, 2,\ndot dot dot up to whatever, some number",
    "start": "259489",
    "end": "265879"
  },
  {
    "text": "N like this.  This is going to be the\nhash table where you can find things.  And",
    "start": "265879",
    "end": "271159"
  },
  {
    "text": "what happens is if I want to find the\nparticular place in this table where",
    "start": "271159",
    "end": "276080"
  },
  {
    "text": "elements associated with let's say pizza\nare stored, then what I do is I take pizza",
    "start": "276080",
    "end": "281629"
  },
  {
    "text": "and I run it through a hash which\nscrambles it up in some way and produces",
    "start": "281629",
    "end": "287870"
  },
  {
    "text": "a number which is between 0 and in this\ncase let's call it N.   OK?  So the",
    "start": "287870",
    "end": "293569"
  },
  {
    "text": "hashing takes this, scrambles it, you\ncould imagine doing just by adding up",
    "start": "293569",
    "end": "297530"
  },
  {
    "text": "the letters, treat them as numbers, add\nthem up, and you get some value, and then",
    "start": "297530",
    "end": "302360"
  },
  {
    "text": "you use the modulus function to reduce\nit so that it's in this range.  That tells",
    "start": "302360",
    "end": "307250"
  },
  {
    "text": "you the pizza stuff is going to be\nstored here, but you don't store it in the",
    "start": "307250",
    "end": "311659"
  },
  {
    "text": "table; what you do is that you have\ntypically something that says I'm pizza",
    "start": "311659",
    "end": "316430"
  },
  {
    "text": "and my current value is 20.  This is\ngetting a little too small.  And this",
    "start": "316430",
    "end": "320960"
  },
  {
    "text": "simply points to it.  Okay?  So now somebody\ncomes along later on and wants to say",
    "start": "320960",
    "end": "326000"
  },
  {
    "text": "where is Pizza stored in the array?  What\nI do is same process I say ok take",
    "start": "326000",
    "end": "331340"
  },
  {
    "text": "pizza, run it through the hash function,\ngives me a number, let's call it in this",
    "start": "331340",
    "end": "335210"
  },
  {
    "text": "case 2, and I say oh ok the pizza guy is\nthere.  Okay?  So that's the basic thing. But",
    "start": "335210",
    "end": "340699"
  },
  {
    "text": "what happens if something else by\naccident of the hashing collides with",
    "start": "340699",
    "end": "345940"
  },
  {
    "text": "pizza.  Maybe beer collides with pizza.  I\nmean they go well together.",
    "start": "345940",
    "end": "349580"
  },
  {
    "text": "So what happens there is that the data\nstructure is really a linked list and so",
    "start": "349580",
    "end": "354080"
  },
  {
    "text": "if it turns out that by accident beer\nalso, when run through the hash, comes out",
    "start": "354080",
    "end": "360860"
  },
  {
    "text": "as 2, so this is called a hash collision.\nSo what you have to do there is to say",
    "start": "360860",
    "end": "365569"
  },
  {
    "text": "well there's really a data structure a\nlittle more complicated and it points off",
    "start": "365569",
    "end": "368930"
  },
  {
    "text": "to something that says beer, which is at\nthis point 25 let's say.  And so when I",
    "start": "368930",
    "end": "374719"
  },
  {
    "text": "want to look up beer, I simply start at\nthe front here and I say pizza no that's",
    "start": "374719",
    "end": "379430"
  },
  {
    "text": "not beer; ah there's beer, and now I'm all\nset.  And there's also something that says",
    "start": "379430",
    "end": "384440"
  },
  {
    "text": "there's no more in this list.  And if\nanother thing comes along that happens",
    "start": "384440",
    "end": "387469"
  },
  {
    "text": "to also collide with this, then no\nproblem, we just make the list longer.  So",
    "start": "387469",
    "end": "393229"
  },
  {
    "text": "then what you have to do, this hashing\nfunction here has to have the property",
    "start": "393229",
    "end": "398360"
  },
  {
    "text": "that you give it a bunch of different\nthings like beer, pizza, coffee, coke,",
    "start": "398360",
    "end": "401599"
  },
  {
    "text": "whatever, it should spread those things\nfairly uniformly across the table so",
    "start": "401599",
    "end": "407270"
  },
  {
    "text": "that you don't get everybody piling up\nin this particular element but you get",
    "start": "407270",
    "end": "410930"
  },
  {
    "text": "mostly these little chains of things\nabout the same length.  And that means",
    "start": "410930",
    "end": "415849"
  },
  {
    "text": "that the access to the information in\nthis table, it's sort of constant time.",
    "start": "415849",
    "end": "420439"
  },
  {
    "text": "You do the hash function, it tells you\nwhere to go, and there's usually only one",
    "start": "420439",
    "end": "424669"
  },
  {
    "text": "or two elements in any given chain of\nthings that happen to have the same hash",
    "start": "424669",
    "end": "429379"
  },
  {
    "text": "value.  You know, suppose that this is\nsmall, maybe N is only 10 and you've got",
    "start": "429379",
    "end": "433639"
  },
  {
    "text": "hundreds of different things in the\ntable, N has to be bigger.  And so what",
    "start": "433639",
    "end": "437060"
  },
  {
    "text": "you can do at that point is you can\nactually grow the table.  You can say okay",
    "start": "437060",
    "end": "440599"
  },
  {
    "text": "let's just rehash everything in sight\nand make a new table.  I'm going to switch",
    "start": "440599",
    "end": "444319"
  },
  {
    "text": "to a new page here so we could see it.\n>> Sean: fanfold is going to throw you now.",
    "start": "444319",
    "end": "449689"
  },
  {
    "text": ">> BWK: Fanfold has thrown me.\nI remember fan-fold from my youth.",
    "start": "449689",
    "end": "452629"
  },
  {
    "text": "So here we have this hash table that\nwent from 0 up to some old value of N",
    "start": "452629",
    "end": "457699"
  },
  {
    "text": "like this and we've got things in it\nlike my pizza and my beer and so on.  And",
    "start": "457699",
    "end": "463430"
  },
  {
    "text": "suppose that it's gotten very crowded at\nthis point; if N was small and I've got",
    "start": "463430",
    "end": "466849"
  },
  {
    "text": "lots of things, it's going to get crowded\nnecessarily.  So what I can simply do is to",
    "start": "466849",
    "end": "470719"
  },
  {
    "text": "say well let me make a new table let's\ntwice as big, four times -- doesn't matter,",
    "start": "470719",
    "end": "474860"
  },
  {
    "text": "something that's a lot bigger, and simply\ntake every element that I find here,",
    "start": "474860",
    "end": "479209"
  },
  {
    "text": "whatever it might be,\ncompute its new hash value and just stick",
    "start": "479209",
    "end": "482419"
  },
  {
    "text": "it into this table instead.  And so with a\ndifferent value here, might find that",
    "start": "482419",
    "end": "486529"
  },
  {
    "text": "pizza is here but beer is down here;\nthey're no longer linked together -- quite",
    "start": "486529",
    "end": "491029"
  },
  {
    "text": "possible because this value would\ndetermine where they're put and so if I",
    "start": "491029",
    "end": "495680"
  },
  {
    "text": "changed so that this is let's say a\ntable of 2 N or something like that,",
    "start": "495680",
    "end": "499610"
  },
  {
    "text": "they might hash differently.  Might\nhash the same too.  And so now you can see",
    "start": "499610",
    "end": "503749"
  },
  {
    "text": "that on the average, the chains are going\nto be half as big and only do this once",
    "start": "503749",
    "end": "507889"
  },
  {
    "text": "in a while when the table starts to get\nfull, and maybe I make it four times as",
    "start": "507889",
    "end": "511909"
  },
  {
    "text": "big.  And so at all times the accessed\ninformation in this hash table is pretty",
    "start": "511909",
    "end": "517099"
  },
  {
    "text": "much constant time -- you come in, you hash\nit, and very short look down a list and",
    "start": "517099",
    "end": "521659"
  },
  {
    "text": "you're done.  Once you've made this new\ntable of course, then you can throw away",
    "start": "521659",
    "end": "524839"
  },
  {
    "text": "the information from that one.\n>> Sean:  So the modulo or the",
    "start": "524839",
    "end": "527649"
  },
  {
    "text": "amount to be modulo by will be N.\n>> BWK: Yes,\nright, exactly.  Yeah, I mean I've been",
    "start": "527649",
    "end": "531880"
  },
  {
    "text": "careless because we started at zero and\nwe went up to N, and so that's really",
    "start": "531880",
    "end": "535720"
  },
  {
    "text": "N plus one elements.  You have to be a\nlittle cautious there, that's a classic",
    "start": "535720",
    "end": "538779"
  },
  {
    "text": "kind of error that programming,\nprogrammers -- other programmers -- might make.",
    "start": "538779",
    "end": "543220"
  },
  {
    "text": "I would never do that.  But but that's the\nidea.  And and then of course the details",
    "start": "543220",
    "end": "549160"
  },
  {
    "text": "of what's a good hashing function and\nhow to make that really spread arbitrary",
    "start": "549160",
    "end": "554440"
  },
  {
    "text": "information around -- it's still kind of a\nyou've got to be careful to get it right,",
    "start": "554440",
    "end": "558940"
  },
  {
    "text": "but there's an awful lot of good\nguidance and so for the most part it",
    "start": "558940",
    "end": "561820"
  },
  {
    "text": "just works fine.  And and this is very\nsimple to implement; the amount of code",
    "start": "561820",
    "end": "565660"
  },
  {
    "text": "in pick your favorite programming\nlanguage is probably a few tens of lines",
    "start": "565660",
    "end": "570069"
  },
  {
    "text": "of code at most.  It's very compact, very\neasy to do -- you do it once and then you",
    "start": "570070",
    "end": "574600"
  },
  {
    "text": "say okay, now I understand how that stuff\nworks.  You don't have to think about it.",
    "start": "574600",
    "end": "578350"
  },
  {
    "text": "You can use somebody else's implementation \n>> Sean: So they're saying so some",
    "start": "578350",
    "end": "581620"
  },
  {
    "text": "of this is you write yourself but that\nwill probably be libraries out there.\n>> BWK:  Yeah",
    "start": "581620",
    "end": "585610"
  },
  {
    "text": "right if you're in Java there's a class\nwhat is it, hash table or something like",
    "start": "585610",
    "end": "589839"
  },
  {
    "text": "that I think; I've forgotten exactly.  In\nPython there's the subscript dictionary",
    "start": "589839",
    "end": "595540"
  },
  {
    "text": "that looks like that.  In Perl there's a\nhash -- literally hash and so on.  These",
    "start": "595540",
    "end": "602649"
  },
  {
    "text": "kinds of things, I've got too many of\nthem in my head, they blur, especially",
    "start": "602649",
    "end": "606160"
  },
  {
    "text": "under pressure, and so I would have to go\nand look to be sure but that's the",
    "start": "606160",
    "end": "611259"
  },
  {
    "text": "essence of it.",
    "start": "611260",
    "end": "614160"
  },
  {
    "start": "614160",
    "end": "615949"
  },
  {
    "text": "Self-publication is a recipe for having things disappear\nwithout a trace.  And so the first",
    "start": "615950",
    "end": "620720"
  },
  {
    "text": "edition did sort of disappear without\nmuch trace.  The second edition was",
    "start": "620720",
    "end": "624079"
  },
  {
    "text": "published by Princeton University Press\nwho also has an arrangement with Oxford",
    "start": "624079",
    "end": "628670"
  },
  {
    "text": "University Press, and so I'm hopeful that\nthe book gets a lot more publicity.",
    "start": "628670",
    "end": "635800"
  }
]