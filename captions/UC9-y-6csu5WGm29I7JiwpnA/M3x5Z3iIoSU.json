[
  {
    "text": "There's a parsing theme, devotees will\nknow, and there's a Regexp theme. And our",
    "start": "0",
    "end": "7049"
  },
  {
    "text": "aim, in the end, is to unite these all\ninto one, at the top, so that you're all",
    "start": "7049",
    "end": "12018"
  },
  {
    "text": "totally happy - or completely unhappy - as\nthe case may be. We have done Regular",
    "start": "12019",
    "end": "16949"
  },
  {
    "text": "Expressions and the last one I did was\nreally very simple and straightforward,",
    "start": "16949",
    "end": "21330"
  },
  {
    "text": "and showed you absolutely nothing about\nwhat can go wrong. And some of you out",
    "start": "21330",
    "end": "26760"
  },
  {
    "text": "there, coming up with the usual old jokes,\nquite right, about: \"Oh! you're implementing",
    "start": "26760",
    "end": "32700"
  },
  {
    "text": "using Regular Expressions. Now you've got\ntwo problems\", Yeah! We'll look on in glee",
    "start": "32700",
    "end": "39570"
  },
  {
    "text": "as we now take the story a bit further\nand see what can go right and how",
    "start": "39570",
    "end": "44730"
  },
  {
    "text": "powerful Regular Expressions are. But\nalso a little bit of what can go wrong",
    "start": "44730",
    "end": "49739"
  },
  {
    "text": "and why you've got to be careful in your\nuse. So what can it be this marvellous new",
    "start": "49739",
    "end": "58550"
  },
  {
    "text": "example that consumes Life the Universe\nand Everything and exhibits a whole load",
    "start": "58550",
    "end": "64198"
  },
  {
    "text": "of new features? And you're going to be\nquite convinced I'm off my head. ",
    "start": "64199",
    "end": "69210"
  },
  {
    "text": "It's Roman Numbers. Way way back when we first,\nhere at Nottingham, got Lex and Yacc, in",
    "start": "69210",
    "end": "78060"
  },
  {
    "text": "UNIX Version 7 - it was in the late 70s. \nSo, believe me, I have been ... or, back in",
    "start": "78060",
    "end": "85770"
  },
  {
    "text": "those days I was setting Roman Numbers\nas an example of what Lex -  remember the",
    "start": "85770",
    "end": "92340"
  },
  {
    "text": "Regular-Expression-based front-end to\nyour compiler. Does tour identifiers and",
    "start": "92340",
    "end": "96570"
  },
  {
    "text": "all that. I thought, all right, as an\nexercise, just write a Regular Expression",
    "start": "96570",
    "end": "100290"
  },
  {
    "text": "that will accept Roman Numbers - all of the\ngood ones and reject all the bad ones.",
    "start": "100290",
    "end": "106369"
  },
  {
    "text": "Now, I can't emphasize too strongly: that\nrider is important! It is very easy, in a",
    "start": "106369",
    "end": "114930"
  },
  {
    "text": "Regular Rxpression, quite easy, to get it\nto recognize what you want, but will it [also]",
    "start": "114930",
    "end": "120329"
  },
  {
    "text": "reject all the stuff that's bad?  And it\nis sometimes so easy to overlook [things].",
    "start": "120329",
    "end": "125939"
  },
  {
    "text": "I say with shame because, when I'd set that\nquestion, I scratched down a quick and",
    "start": "125939",
    "end": "132950"
  },
  {
    "text": "easy answer - which I now see is full of\nholes ....   Because if you input, into my",
    "start": "132950",
    "end": "139010"
  },
  {
    "text": "regular expression MMII - \nagain, looking ahead, Roman Numbers",
    "start": "139010",
    "end": "144379"
  },
  {
    "text": "MMII [is] 2002. Fine. But then I\nthought ... well I thought now, I didn't think then:",
    "start": "144380",
    "end": "151730"
  },
  {
    "text": "\"What happens if I do MIIM? [winces at the thought]?\"\n[Answer = ]  2002. [It] shouldn't be. There's a strict hierarchy",
    "start": "151730",
    "end": "159530"
  },
  {
    "text": "in the way these work. So, at this stage\nwe don't know how much, if anything, you",
    "start": "159530",
    "end": "164300"
  },
  {
    "text": "remember about Roman Numerals. So, as an\nExtra Bits we've put out a simple",
    "start": "164300",
    "end": "169310"
  },
  {
    "text": "tutorial on Roman Numerals based around\nthis example, But for those of you that",
    "start": "169310",
    "end": "174049"
  },
  {
    "text": "are totally happy with Roman numerals, we\ncan just carry on with the main video now.",
    "start": "174049",
    "end": "179269"
  },
  {
    "text": "So, just to locate ourselves then, and\ndo a few examples to make everybody",
    "start": "179269",
    "end": "184010"
  },
  {
    "text": "comfortable I'm going to write down  MCDXCII. \nStart at the left. We've got a",
    "start": "184010",
    "end": "194269"
  },
  {
    "text": "thousand [M] Then we see CD and, remember,\nthis is one of these subtraction things",
    "start": "194269",
    "end": "200090"
  },
  {
    "text": "CD is \"a hundred less than 500\" which is 400.\nMCD. So we're up to 1400 so far. XC?",
    "start": "200090",
    "end": "210440"
  },
  {
    "text": ">> Sean: OK That's 90\n>> DFB: 90. II?\n>> Sean: 2\n>> DFB: 1492. What happens in 1492 Sean, in \nWestern European folklore?",
    "start": "210440",
    "end": "219519"
  },
  {
    "text": "\"Columbus discovered horizons new in\nAmerica (1492)\n>> Sean: I should have known that one",
    "start": "219519",
    "end": "224120"
  },
  {
    "text": ">> DFB: Yeah! right. And, of course, the year \nwe're in at the moment, as we film all of this,",
    "start": "224120",
    "end": "230629"
  },
  {
    "text": "is - that's simple MMXX, 2020.\nAnd one which is dear to me, I'm sure you'll",
    "start": "230630",
    "end": "237200"
  },
  {
    "text": "work out why. Yes, it's got a lot of these\nprepended abbreviation things in there look,",
    "start": "237200",
    "end": "242629"
  },
  {
    "text": "MCM;  1900, XL: 10 less than 50 (40) \nIV: one less than 5 (4) -- 1944. \n 244 let's focus",
    "start": "242630",
    "end": "251209"
  },
  {
    "text": "Let's focus ourselves now on how would we do a\nRegular Expression for all of this?",
    "start": "251209",
    "end": "256100"
  },
  {
    "text": "In fact, let's make things very very simple\nand say: \"All I'm gonna do at the moment",
    "start": "256100",
    "end": "260630"
  },
  {
    "text": "is concentrate on getting a Regular",
    "start": "260630",
    "end": "263919"
  },
  {
    "text": "Expression pattern that will either\ngenerate me one or two, or three, or four, or five -",
    "start": "263919",
    "end": "275340"
  },
  {
    "text": "[writes on paper] forgive me I'll carry on down here.\nOr six, seven, eight, or nine. And I won't go",
    "start": "275340",
    "end": "284800"
  },
  {
    "text": "any further than that.\nBecause tens is a new adventure",
    "start": "284800",
    "end": "288759"
  },
  {
    "text": "further to the left. So, those numbers\nthen, from one to nine, which I've written",
    "start": "288759",
    "end": "295360"
  },
  {
    "text": "know like that now. I hope you can see\nthat if you're completely simple-minded",
    "start": "295360",
    "end": "299918"
  },
  {
    "text": "about this and don't want to do complex\nRegular Expressions you really could",
    "start": "299919",
    "end": "304030"
  },
  {
    "text": "write yourself a great long 'alternation'\nas it's called. In other words a great",
    "start": "304030",
    "end": "307569"
  },
  {
    "text": "big sequence of ORs. And you could do\neverything from one up to thousands and",
    "start": "307569",
    "end": "312940"
  },
  {
    "text": "just have this walloping great OR clause,\nthat your Regular Expression parser will",
    "start": "312940",
    "end": "319120"
  },
  {
    "text": "probably go bananas and say: \"too many\nalternations\", or something like this.",
    "start": "319120",
    "end": "323349"
  },
  {
    "text": "So, no, that's not the way to do it. What one\nwants to do is to generalize and use,",
    "start": "323349",
    "end": "329800"
  },
  {
    "text": "as it were, elegant Regular Expression\ncapabilities to shorten this a bit.",
    "start": "329800",
    "end": "335620"
  },
  {
    "text": "So, there we are the Roman numbers from I to IX,",
    "start": "335620",
    "end": "338800"
  },
  {
    "text": "All written out.\nFirst of all let's try and separate",
    "start": "338800",
    "end": "342159"
  },
  {
    "text": "these things into classes, and groups,\nthat make sense. There are two weird",
    "start": "342159",
    "end": "345940"
  },
  {
    "text": "things which involved the subtraction\nrule, you know, like IV (1 less than 5)",
    "start": "345940",
    "end": "351460"
  },
  {
    "text": "IX (one less than 10). I think we will do those\ntogether, because they're weird in the",
    "start": "351460",
    "end": "357250"
  },
  {
    "text": "same way, if you like. The other things\nare much more regular like you go from 1",
    "start": "357250",
    "end": "361690"
  },
  {
    "text": "2 and 3, which is with III. And similarly,\nhere, you get the same pattern but coming",
    "start": "361690",
    "end": "367419"
  },
  {
    "text": "after a V  -  a V on its own, or VI, VII, VIII,\nand so on. So, we've got three",
    "start": "367419",
    "end": "374860"
  },
  {
    "text": "groupings: things involving Is with or\nwithout a V in front of them;",
    "start": "374860",
    "end": "379538"
  },
  {
    "text": "and the two special cases IV and IX. So I\nwould conjecture there's a wonderful",
    "start": "379539",
    "end": "386020"
  },
  {
    "text": "piece of Regular Expression covering so\nfar what we've done, but something new",
    "start": "386020",
    "end": "391060"
  },
  {
    "text": "coming up - so do pay attention -\nwould be this: my RE is going to be I",
    "start": "391060",
    "end": "397189"
  },
  {
    "text": "- now this is square 'choice' brackets [], \nWe have seen these before.",
    "start": "397189",
    "end": "404150"
  },
  {
    "text": "But whereas, before, I put ranges inside\nthem - you know like [A-Za-z]",
    "start": "404150",
    "end": "410300"
  },
  {
    "text": "[0-9], any one of those digits.",
    "start": "410300",
    "end": "413569"
  },
  {
    "text": "These aren't ranges; these are just\nexplicit possibilities inside square",
    "start": "413569",
    "end": "419210"
  },
  {
    "text": "brackets. It's called a 'choice' so I've got\nto have an 'I', if I'm on this side of the",
    "start": "419210",
    "end": "424930"
  },
  {
    "text": "expression. But then it could be followed\nby either an X or a V, but it must be one",
    "start": "424930",
    "end": "430699"
  },
  {
    "text": "or other of them, and only once.\nThere's no repetition outside; there's no",
    "start": "430699",
    "end": "434419"
  },
  {
    "text": "star there's no plus; no nothing. So those\nare the special cases taken care of, ",
    "start": "434419",
    "end": "439520"
  },
  {
    "text": "the IV and the IX. Now we put a walloping\ngreat big OR bar down the middle. Or if",
    "start": "439520",
    "end": "445698"
  },
  {
    "text": "it's not a special case it's a regular\nstraightforward case. But we've been",
    "start": "445699",
    "end": "450110"
  },
  {
    "text": "clever with our REs now. Oh yes! look\nat this. Now, again, I think this is",
    "start": "450110",
    "end": "455719"
  },
  {
    "text": "something we may have mentioned but\nprobably not another piece of regular",
    "start": "455719",
    "end": "459080"
  },
  {
    "text": "expression notation is: \" ... if you put a\nquestion mark after something it means",
    "start": "459080",
    "end": "463580"
  },
  {
    "text": "0 or 1 of\". So, what I'm saying here\nis I can either have a V, or I don't need",
    "start": "463580",
    "end": "470029"
  },
  {
    "text": "a V. How can you not need a V? Well,\nwhat's following on here is going to be",
    "start": "470029",
    "end": "475159"
  },
  {
    "text": "something that really is new. This is a\ncounted repetition in curly braces zero",
    "start": "475159",
    "end": "482770"
  },
  {
    "text": "- [should be 0,3]. Look at that! Bound \nto win an award! Let's just run through it. ",
    "start": "482770",
    "end": "488569"
  },
  {
    "text": "The two special cases are off on that left-hand\nside of the OR bar. But if you choose not",
    "start": "488569",
    "end": "493219"
  },
  {
    "text": "to go down that route you go to here and\nit says: \"Oh well if it's not one of",
    "start": "493219",
    "end": "497930"
  },
  {
    "text": "the two special cases then it's like the\nfollowing: anything between 0 and 3 Is.",
    "start": "497930",
    "end": "504110"
  },
  {
    "text": "I mean you may not have Is at all - you\ncan just have V on its own if you want -",
    "start": "504110",
    "end": "507610"
  },
  {
    "text": "preceded by an optional V,  nought or one\nthese,\n>> Sean: Tthat's giving you the choice of",
    "start": "507610",
    "end": "514339"
  },
  {
    "text": "either 1 2 3, or 5, or 6 7 8, right?\n>> DFB: Yeah, yeah, that's right.",
    "start": "514339",
    "end": "520578"
  },
  {
    "text": "But it's all to do with sometimes\nhaving zero of something. Now, hereby",
    "start": "520579",
    "end": "528740"
  },
  {
    "text": "hangs a tale about Regular Expressions.\nAnd those of you that keep on posting",
    "start": "528740",
    "end": "532670"
  },
  {
    "text": "these notices about \" ... you've got multiple\nproblems with Regular Expressions !\".  Well. here's",
    "start": "532670",
    "end": "536660"
  },
  {
    "text": "another one. It's the strange case of the 'empty",
    "start": "536660",
    "end": "539839"
  },
  {
    "text": "alternative', which really can gang up to\nget you. Because what you're saying here,",
    "start": "539840",
    "end": "545420"
  },
  {
    "text": "in this expression, is: \" ... Is it possible for\nit to match nothing at all and yet",
    "start": "545420",
    "end": "552230"
  },
  {
    "text": "that's a valid match?\" Yes it is! Because\nif you choose to ignore what's on the",
    "start": "552230",
    "end": "557510"
  },
  {
    "text": "left of the OR bar here - which you can do,\nit's either/or - we come here, and we say: \" V,",
    "start": "557510",
    "end": "564560"
  },
  {
    "text": "oh! I can have 0 or 1 of those. So, let's\nhave 0 of them\". The I ?  I can have",
    "start": "564560",
    "end": "568850"
  },
  {
    "text": "anything between 0 to 3 of those. So\nlet's choose 0 of them. So, in other words",
    "start": "568850",
    "end": "572750"
  },
  {
    "text": "choosing nothing at followed by nothing\nis a valid match for a Roman number \n[according to this RE].",
    "start": "572750",
    "end": "579290"
  },
  {
    "text": "And if you think about it it's true. Nothing in\nRoman Numbers is compulsory. You can have",
    "start": "579290",
    "end": "584089"
  },
  {
    "text": "M's, or no M.  Yyou can have C's or no C's.\nYou know all of them. ",
    "start": "584089",
    "end": "589520"
  },
  {
    "text": "It's all optional. But as you start getting down\nto the units digits you think: \"I've got",
    "start": "589520",
    "end": "595190"
  },
  {
    "text": "to have something !\"\nThe paradox, then, about Roman Numbers",
    "start": "595190",
    "end": "598790"
  },
  {
    "text": "done as a Regular Expression, is: you've got\nall sorts of cases that yield you",
    "start": "598790",
    "end": "603740"
  },
  {
    "text": "nothing at all and yet you're going to\nbe very disappointed if you don't have something!",
    "start": "603740",
    "end": "607310"
  },
  {
    "text": "But saying \"... overall you must\nhave something\" That's not a context-free",
    "start": "607310",
    "end": "613130"
  },
  {
    "text": "assertion. That's a context-sensitive\nassertion. So we'll live with that for the",
    "start": "613130",
    "end": "619370"
  },
  {
    "text": "moment. And I think also what I'd like to\njust show you now, if I can get the",
    "start": "619370",
    "end": "624680"
  },
  {
    "text": "screen fired up ... and I'm using 'awk' here\nto demonstrate this, I'm going to add yet",
    "start": "624680",
    "end": "629839"
  },
  {
    "text": "another little piece of notation to all\nof this. I'm going to say that you can, if",
    "start": "629839",
    "end": "635149"
  },
  {
    "text": "you want to, insist that what you're\nmatching must just be a valid Roman",
    "start": "635150",
    "end": "640820"
  },
  {
    "text": "Number, on a line on its own, with no\nwriting or messing about on either side",
    "start": "640820",
    "end": "645740"
  },
  {
    "text": "of it. Just the number. Start of the number \n(^),  end of the number ($). Finish. Right?",
    "start": "645740",
    "end": "650630"
  },
  {
    "text": "And you denote that by saying start of\nstring anchor, ^  End of string anchor, $.",
    "start": "650630",
    "end": "656089"
  },
  {
    "text": "You're basically saying whatever \npattern there is must fit between",
    "start": "656089",
    "end": "661540"
  },
  {
    "text": "the start of the string, on a line on\nits own, and the end of the string - the",
    "start": "661540",
    "end": "666459"
  },
  {
    "text": "newline right at the end. Now, this is the key \nthing about this. Those things [^$ markers]",
    "start": "666459",
    "end": "673269"
  },
  {
    "text": "if you put them in, are not options. You\ncan't have zero of them. If you say",
    "start": "673270",
    "end": "678430"
  },
  {
    "text": "you must match the beginning of the line,\nyou must match the beginning of the line. If you",
    "start": "678430",
    "end": "682330"
  },
  {
    "text": "say you must match the end of the line,\nyou cannot ignore it. You can't have zero",
    "start": "682330",
    "end": "685690"
  },
  {
    "text": "of them. So, in a way, this is a kind of\nreality check and it's generally the",
    "start": "685690",
    "end": "690610"
  },
  {
    "text": "case that if you use these correctly you\nwon't end up with null strings being a",
    "start": "690610",
    "end": "695950"
  },
  {
    "text": "pseudo-match. Because this thing is saying: \n\"Well, whatever the finite [non-zero] length",
    "start": "695950",
    "end": "699850"
  },
  {
    "text": "string is, it's got to fit between\nbeginning of line end of line. Here's the",
    "start": "699850",
    "end": "704230"
  },
  {
    "text": "'awk' script that I hacked together, to try\nout a few alternatives. And I decided to",
    "start": "704230",
    "end": "710320"
  },
  {
    "text": "go for this simple little piece first.\nCan I do everything from 1 to 9 in a",
    "start": "710320",
    "end": "716110"
  },
  {
    "text": "single piece of Regular Expression. And\nyou'll see here this is classic 'awk'.",
    "start": "716110",
    "end": "720700"
  },
  {
    "text": "You, give a Regular Expression pattern, then\nyou give an action. It's a C-like syntax,",
    "start": "720700",
    "end": "726250"
  },
  {
    "text": "even in 'awk'. Basically what I'm saying is;\n\"If I match that then I print out 'Pattern",
    "start": "726250",
    "end": "730660"
  },
  {
    "text": "p1 matched' and so on\". Now, if you look\ndown here four of these things - because",
    "start": "730660",
    "end": "735819"
  },
  {
    "text": "this is just a test-bed - four of them are\ncommented out, they will not be executed.",
    "start": "735820",
    "end": "740110"
  },
  {
    "text": "The one that will be executed is the one\nI've just been discussing with you, here,",
    "start": "740110",
    "end": "744550"
  },
  {
    "text": "which says: \"I must match start of string\nthen here's my Regular Expression",
    "start": "744550",
    "end": "749769"
  },
  {
    "text": "pattern - which I think will work from I\nto IX inclusive, and then it must match",
    "start": "749770",
    "end": "754810"
  },
  {
    "text": "end of string\". So, I'm hoping that by\nuncommenting this that this will work.",
    "start": "754810",
    "end": "759579"
  },
  {
    "text": "And I'll type some good and bad Roman\nNumbers at it. And for every one it's happy",
    "start": "759579",
    "end": "765160"
  },
  {
    "text": "with, it will say 'Pattern P0 matched is'\nAnd it will echo back what it your Roman",
    "start": "765160",
    "end": "771009"
  },
  {
    "text": "Number [was] that you put in. So, what I want to\ndo, now, is actually run that script, that",
    "start": "771010",
    "end": "775720"
  },
  {
    "text": "we've been looking at. 'awk - f ' take your\ninstructions from a file called 'test-roman.awk'",
    "start": "775720",
    "end": "784149"
  },
  {
    "text": "OK, so when that runs now it\nshould just hang there waiting for its",
    "start": "784149",
    "end": "791050"
  },
  {
    "text": "input of a Roman number. And remember it is going",
    "start": "791050",
    "end": "793649"
  },
  {
    "text": "to match that beginning of string, piece\nof regular expression, end of string.",
    "start": "793650",
    "end": "798030"
  },
  {
    "text": ">> DFB: So. which one do you want me to try first Sean?\n>> Sean: OK, let's go really simply and just go ",
    "start": "798030",
    "end": "801930"
  },
  {
    "text": "for a number 5 [V].\n>> DFB:  V all on its own [waits]\nLook at that! That's a 'P0 matched is V  ",
    "start": "801930",
    "end": "812070"
  },
  {
    "text": ">> Sean: All right - a bit trickier 4 [IV] because\nit's got that 'minus one' sort of idea. \nLet's put one in that shouldn't work.",
    "start": "812070",
    "end": "818490"
  },
  {
    "text": ">> DFB: Go on that what do you want ?\nOK just put in C for Computerphile.",
    "start": "818490",
    "end": "824640"
  },
  {
    "text": ">> DFB: C for Computerphile?\nNow you might say that's a valid Roman number.",
    "start": "824640",
    "end": "830010"
  },
  {
    "text": "Yes, but it's it's not being covered by the bit of\nRegular Expression I've done, I've done a",
    "start": "830010",
    "end": "833460"
  },
  {
    "text": "piece of Regular Expression that\nliterally, I hope, does I to IX and",
    "start": "833460",
    "end": "837420"
  },
  {
    "text": "nothing else. Let's see what happens there [with C]\nIt echoes it back but it doesn't",
    "start": "837420",
    "end": "842430"
  },
  {
    "text": "do anything with it.\nSo let's now try IX, looking good.",
    "start": "842430",
    "end": "846270"
  },
  {
    "text": "All right how about the ultimate test [which] is\ntype in something utterly idiotic like HELLO",
    "start": "846270",
    "end": "850710"
  },
  {
    "text": "No, doesn't do anything with it,\ndoesn't recognize it. So, we're back",
    "start": "850710",
    "end": "855090"
  },
  {
    "text": "showing the 'awk' script again and let me\njust remind you that what we've shown is",
    "start": "855090",
    "end": "860190"
  },
  {
    "text": "that as long as we put the anchors in at\nthe beginning and the end of this",
    "start": "860190",
    "end": "864090"
  },
  {
    "text": "pattern then our minimal testing, but I\nthink we've tried all the options, it's",
    "start": "864090",
    "end": "869820"
  },
  {
    "text": "recognized V it's recognized IX. IV\nall this stuff. That one is absolutely",
    "start": "869820",
    "end": "874890"
  },
  {
    "text": "fine and it rejects rubbish. I've\nactually put in, as a comment, ",
    "start": "874890",
    "end": "880800"
  },
  {
    "text": "StackOverflow's assertion that this [points at screen] \nis the thing that's the answer to life the",
    "start": "880800",
    "end": "884730"
  },
  {
    "text": "universe and everything. Let's move right\nacross to the right and the first thing",
    "start": "884730",
    "end": "888660"
  },
  {
    "text": "you'll see here is the piece we've just\ndone for the units as it were, I through to IX.",
    "start": "888660",
    "end": "894990"
  },
  {
    "text": "But as you go leftwards can you\nsee that the beauty of this is ... ",
    "start": "894990",
    "end": "901050"
  },
  {
    "text": "that has handled the units part of the Roman\nNumbers. It's dead easy to see, therefore,",
    "start": "901050",
    "end": "905970"
  },
  {
    "text": "that it's like a repetition of the same\nidea, but with different symbols? When you",
    "start": "905970",
    "end": "914069"
  },
  {
    "text": "come to the tens range What are the\nexceptions there XC (ten less than a hundred)",
    "start": "914070",
    "end": "920430"
  },
  {
    "text": "XL (ten less than fifty). I's just like the \nI's and the X's and V's were before, look.",
    "start": "920430",
    "end": "925110"
  },
  {
    "text": "Similar. X[CL]. Or it is is an optional\nL, for 50,  followed by a tens digit, zero",
    "start": "925110",
    "end": "935399"
  },
  {
    "text": "{0,3} of them. You can't say just {1,3}\nbecause L on its own is",
    "start": "935400",
    "end": "939210"
  },
  {
    "text": "perfectly valid as a Roman Number Number.\nSo, you see that piece of pattern - similar to",
    "start": "939210",
    "end": "944840"
  },
  {
    "text": "the far-right one but just with a\nrelabeling almost of the digits you're",
    "start": "944840",
    "end": "950040"
  },
  {
    "text": "using-  that copes with the tens. Up here \n[points to left of screen] it's\ncoping with the hundreds, going on to",
    "start": "950040",
    "end": "955470"
  },
  {
    "text": "the thousands. So, the story finishes off\nin here by saying: Ah! you can have CM",
    "start": "955470",
    "end": "961189"
  },
  {
    "text": "(a hundred less than a thousand) i.e. 900\nin other words. CD for 400.",
    "start": "961190",
    "end": "965640"
  },
  {
    "text": "And the midpoint of the range,\nwhich everything pivots around. It was V",
    "start": "965640",
    "end": "971670"
  },
  {
    "text": "there, it was L here, it is going to be D\nhere. I hope you all know that D is",
    "start": "971670",
    "end": "977459"
  },
  {
    "text": "500? So there we are.\nhow about you see three very similar",
    "start": "977460",
    "end": "982230"
  },
  {
    "text": "pieces of pattern for the hundreds the\ntens and the units and right out here at",
    "start": "982230",
    "end": "989190"
  },
  {
    "text": "the far left, M*. And M* means\nyou can have zero or more 1000s. So, we've",
    "start": "989190",
    "end": "997020"
  },
  {
    "text": "got the basis there for something that\nlooks like it would do everything. The",
    "start": "997020",
    "end": "1002900"
  },
  {
    "text": "only problem is these empty matches. But\nthat's such a big problem we probably",
    "start": "1002900",
    "end": "1010790"
  },
  {
    "text": "ought to have an episode devoted to that\nall on its own.",
    "start": "1010790",
    "end": "1016430"
  }
]