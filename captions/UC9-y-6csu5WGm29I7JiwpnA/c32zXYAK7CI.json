[
  {
    "start": "0",
    "end": "60000"
  },
  {
    "text": "I thought today we could look at garbage",
    "start": "0",
    "end": "2460"
  },
  {
    "text": "collection which is a form of automatic",
    "start": "2460",
    "end": "5160"
  },
  {
    "text": "memory management so the the problem",
    "start": "5160",
    "end": "7379"
  },
  {
    "text": "here is when you're programming you",
    "start": "7379",
    "end": "10320"
  },
  {
    "text": "never know how much memory your program",
    "start": "10320",
    "end": "12059"
  },
  {
    "text": "will use when it's running so if you're",
    "start": "12059",
    "end": "14280"
  },
  {
    "text": "running an image processing thing you",
    "start": "14280",
    "end": "16260"
  },
  {
    "text": "don't know how big the photo you'll be",
    "start": "16260",
    "end": "17880"
  },
  {
    "text": "editing is if you're a web browser you",
    "start": "17880",
    "end": "19500"
  },
  {
    "text": "don't know how big the web page will be",
    "start": "19500",
    "end": "21660"
  },
  {
    "text": "so you dynamically have to ask that the",
    "start": "21660",
    "end": "23939"
  },
  {
    "text": "operating system give me some memory the",
    "start": "23939",
    "end": "25680"
  },
  {
    "text": "physical part of the Chip And you get",
    "start": "25680",
    "end": "28199"
  },
  {
    "text": "access to it and later you give that",
    "start": "28199",
    "end": "29880"
  },
  {
    "text": "back and you go through this sequence it",
    "start": "29880",
    "end": "32099"
  },
  {
    "text": "turns out to be very difficult to do",
    "start": "32099",
    "end": "34320"
  },
  {
    "text": "that manually and so there are",
    "start": "34320",
    "end": "36420"
  },
  {
    "text": "techniques including garbage collection",
    "start": "36420",
    "end": "37860"
  },
  {
    "text": "that do that automatically so you can't",
    "start": "37860",
    "end": "39660"
  },
  {
    "text": "just say right give me absolutely loads",
    "start": "39660",
    "end": "41640"
  },
  {
    "text": "because I want to be able to use",
    "start": "41640",
    "end": "42780"
  },
  {
    "text": "whatever I want then well you can and",
    "start": "42780",
    "end": "44940"
  },
  {
    "text": "it's like in anything in life you can",
    "start": "44940",
    "end": "46500"
  },
  {
    "text": "ask for all the resources and they might",
    "start": "46500",
    "end": "48059"
  },
  {
    "text": "even be given to you but then no one",
    "start": "48059",
    "end": "50160"
  },
  {
    "text": "else has access to them so you're trying",
    "start": "50160",
    "end": "52440"
  },
  {
    "text": "to balance out being a good citizen uh",
    "start": "52440",
    "end": "56160"
  },
  {
    "text": "with also asking for what you need",
    "start": "56160",
    "end": "60680"
  },
  {
    "start": "60000",
    "end": "275000"
  },
  {
    "text": "typically if you go back to older",
    "start": "61879",
    "end": "63960"
  },
  {
    "text": "programming languages and all you see is",
    "start": "63960",
    "end": "65460"
  },
  {
    "text": "an example if you wanted memory you had",
    "start": "65460",
    "end": "68400"
  },
  {
    "text": "to ask for it and release it yourself so",
    "start": "68400",
    "end": "72060"
  },
  {
    "text": "um there are two Primitives here one's",
    "start": "72060",
    "end": "74159"
  },
  {
    "text": "called malloc and malloc says give me",
    "start": "74159",
    "end": "75960"
  },
  {
    "text": "some quantity of memory please and the",
    "start": "75960",
    "end": "78000"
  },
  {
    "text": "operating system will and I'll simplify",
    "start": "78000",
    "end": "79619"
  },
  {
    "text": "a bit it will then reserve a physical",
    "start": "79619",
    "end": "81360"
  },
  {
    "text": "part of your RAM chip for your program",
    "start": "81360",
    "end": "83520"
  },
  {
    "text": "to use and then free says I'm done with",
    "start": "83520",
    "end": "86040"
  },
  {
    "text": "that block of memory however big it was",
    "start": "86040",
    "end": "87780"
  },
  {
    "text": "you can have it back you can free up",
    "start": "87780",
    "end": "89759"
  },
  {
    "text": "that physical part of the ram chip so if",
    "start": "89759",
    "end": "92040"
  },
  {
    "text": "we have a little look at some actual",
    "start": "92040",
    "end": "93479"
  },
  {
    "text": "code we can see how this works and then",
    "start": "93479",
    "end": "95520"
  },
  {
    "text": "what the challenges are",
    "start": "95520",
    "end": "97259"
  },
  {
    "text": "so here is a very simple C program I",
    "start": "97259",
    "end": "100320"
  },
  {
    "text": "just filled out the skeleton because I",
    "start": "100320",
    "end": "101579"
  },
  {
    "text": "always forget the bits these days",
    "start": "101579",
    "end": "103680"
  },
  {
    "text": "and I can say uh I would like to",
    "start": "103680",
    "end": "106759"
  },
  {
    "text": "allocate uh let's see",
    "start": "106759",
    "end": "109500"
  },
  {
    "text": "32 kilobytes of memory so malloc says",
    "start": "109500",
    "end": "111780"
  },
  {
    "text": "that give me 32 kilobytes of memory",
    "start": "111780",
    "end": "115079"
  },
  {
    "text": "and then I can do things like I can set",
    "start": "115079",
    "end": "117060"
  },
  {
    "text": "so we call that store value so I can say",
    "start": "117060",
    "end": "119460"
  },
  {
    "text": "the first byte I'll just store the",
    "start": "119460",
    "end": "120899"
  },
  {
    "text": "letter H oops",
    "start": "120899",
    "end": "123140"
  },
  {
    "text": "and then I can read values back so I can",
    "start": "123140",
    "end": "126540"
  },
  {
    "text": "say printer character",
    "start": "126540",
    "end": "128640"
  },
  {
    "text": "and then I've got a load",
    "start": "128640",
    "end": "130679"
  },
  {
    "text": "and then when I'm done with that I can",
    "start": "130679",
    "end": "132480"
  },
  {
    "text": "say I would like to free that memory so",
    "start": "132480",
    "end": "134819"
  },
  {
    "text": "that's a very valid little program if",
    "start": "134819",
    "end": "136860"
  },
  {
    "text": "I've got it right let's just quickly",
    "start": "136860",
    "end": "138360"
  },
  {
    "text": "compile it and see how many things I've",
    "start": "138360",
    "end": "139680"
  },
  {
    "text": "got wrong",
    "start": "139680",
    "end": "140819"
  },
  {
    "text": "uh",
    "start": "140819",
    "end": "143400"
  },
  {
    "text": "so it prints out H that's good so that's",
    "start": "143400",
    "end": "146640"
  },
  {
    "text": "things working correctly so I've",
    "start": "146640",
    "end": "148980"
  },
  {
    "text": "mallocked memory and I've read it so",
    "start": "148980",
    "end": "151140"
  },
  {
    "text": "I've been a good citizen I gave the",
    "start": "151140",
    "end": "152520"
  },
  {
    "text": "memory back uh when I was done with it",
    "start": "152520",
    "end": "155580"
  },
  {
    "text": "so several ways this can go wrong the",
    "start": "155580",
    "end": "157980"
  },
  {
    "text": "first one is I forget to free the memory",
    "start": "157980",
    "end": "159780"
  },
  {
    "text": "so there's now what we call a memory",
    "start": "159780",
    "end": "161580"
  },
  {
    "text": "leak if I don't use that bit of memory",
    "start": "161580",
    "end": "163980"
  },
  {
    "text": "for the rest of the program then the the",
    "start": "163980",
    "end": "166980"
  },
  {
    "text": "operating system will think I've still",
    "start": "166980",
    "end": "168540"
  },
  {
    "text": "got claim to it and it won't take it",
    "start": "168540",
    "end": "170519"
  },
  {
    "text": "back even though I may know I will never",
    "start": "170519",
    "end": "172200"
  },
  {
    "text": "need it again and if you have too many",
    "start": "172200",
    "end": "174480"
  },
  {
    "text": "of these memory leaks you run out of",
    "start": "174480",
    "end": "176160"
  },
  {
    "text": "memory the resources are no longer there",
    "start": "176160",
    "end": "178680"
  },
  {
    "text": "so that's something we've probably all",
    "start": "178680",
    "end": "180360"
  },
  {
    "text": "experienced your program just exploding",
    "start": "180360",
    "end": "182099"
  },
  {
    "text": "or if you're machine going into swap",
    "start": "182099",
    "end": "183780"
  },
  {
    "text": "it's often because of this",
    "start": "183780",
    "end": "185879"
  },
  {
    "text": "so that's one mode of getting things",
    "start": "185879",
    "end": "188519"
  },
  {
    "text": "wrong another one is I can free memory",
    "start": "188519",
    "end": "190980"
  },
  {
    "text": "and then try and read and write from it",
    "start": "190980",
    "end": "192420"
  },
  {
    "text": "so when I've moved the free statement",
    "start": "192420",
    "end": "193739"
  },
  {
    "text": "here I'm then reading and writing and",
    "start": "193739",
    "end": "195239"
  },
  {
    "text": "then that program will explode in",
    "start": "195239",
    "end": "197099"
  },
  {
    "text": "various random ways the operating system",
    "start": "197099",
    "end": "199200"
  },
  {
    "text": "will think oh you're done with that",
    "start": "199200",
    "end": "200280"
  },
  {
    "text": "memory I'll give it to someone else or",
    "start": "200280",
    "end": "201840"
  },
  {
    "text": "use it in some other way and you're",
    "start": "201840",
    "end": "203700"
  },
  {
    "text": "trying to read and write from it and",
    "start": "203700",
    "end": "205140"
  },
  {
    "text": "sometimes it works for a while",
    "start": "205140",
    "end": "207180"
  },
  {
    "text": "and then stops working or you get random",
    "start": "207180",
    "end": "209519"
  },
  {
    "text": "data all sorts of problems can happen",
    "start": "209519",
    "end": "212640"
  },
  {
    "text": "and another one which I'm particularly",
    "start": "212640",
    "end": "214739"
  },
  {
    "text": "fond of is where you try freeing the",
    "start": "214739",
    "end": "217200"
  },
  {
    "text": "same memory twice now the operating",
    "start": "217200",
    "end": "220019"
  },
  {
    "text": "system might notice this but what",
    "start": "220019",
    "end": "222239"
  },
  {
    "text": "sometimes happens you say I'm done with",
    "start": "222239",
    "end": "223680"
  },
  {
    "text": "this memory someone else asks for this",
    "start": "223680",
    "end": "225720"
  },
  {
    "text": "memory they get the same pointer like ID",
    "start": "225720",
    "end": "228120"
  },
  {
    "text": "should we say",
    "start": "228120",
    "end": "229560"
  },
  {
    "text": "and then you free it and you free the",
    "start": "229560",
    "end": "231480"
  },
  {
    "text": "memory they're using so they they are",
    "start": "231480",
    "end": "233220"
  },
  {
    "text": "perfectly good citizens of Gotham City",
    "start": "233220",
    "end": "235200"
  },
  {
    "text": "going about their business with no",
    "start": "235200",
    "end": "237239"
  },
  {
    "text": "worries and you've then said they no",
    "start": "237239",
    "end": "238799"
  },
  {
    "text": "longer need the memory and then they go",
    "start": "238799",
    "end": "240420"
  },
  {
    "text": "Splat so these are all I mean there are",
    "start": "240420",
    "end": "242819"
  },
  {
    "text": "some other ones but these are the",
    "start": "242819",
    "end": "243900"
  },
  {
    "text": "classic ways that you can go wrong in",
    "start": "243900",
    "end": "246120"
  },
  {
    "text": "traditional memory management and it",
    "start": "246120",
    "end": "248280"
  },
  {
    "text": "turns out as humans we're incredibly bad",
    "start": "248280",
    "end": "250500"
  },
  {
    "text": "at doing this particularly for big",
    "start": "250500",
    "end": "252060"
  },
  {
    "text": "programs shouldn't the operating system",
    "start": "252060",
    "end": "254099"
  },
  {
    "text": "manage some of this for us is or is that",
    "start": "254099",
    "end": "256260"
  },
  {
    "text": "where we're going with this",
    "start": "256260",
    "end": "257880"
  },
  {
    "text": "sort of so it turns out it's really",
    "start": "257880",
    "end": "260340"
  },
  {
    "text": "difficult for the operating system to do",
    "start": "260340",
    "end": "262079"
  },
  {
    "text": "this but in within our programming",
    "start": "262079",
    "end": "264240"
  },
  {
    "text": "languages we can",
    "start": "264240",
    "end": "266580"
  },
  {
    "text": "um have an automatic memory management",
    "start": "266580",
    "end": "268800"
  },
  {
    "text": "system that then gives things back the",
    "start": "268800",
    "end": "270840"
  },
  {
    "text": "resources back to the operating system",
    "start": "270840",
    "end": "272340"
  },
  {
    "text": "more swiftly without us as humans having",
    "start": "272340",
    "end": "274380"
  },
  {
    "text": "to say malloc and free people have",
    "start": "274380",
    "end": "276479"
  },
  {
    "start": "275000",
    "end": "390000"
  },
  {
    "text": "realized this is a problem for a long",
    "start": "276479",
    "end": "277919"
  },
  {
    "text": "time and in fact perhaps surprisingly",
    "start": "277919",
    "end": "280620"
  },
  {
    "text": "even in the late 1950s the very first",
    "start": "280620",
    "end": "283220"
  },
  {
    "text": "automatic memory management systems were",
    "start": "283220",
    "end": "285419"
  },
  {
    "text": "being created",
    "start": "285419",
    "end": "286440"
  },
  {
    "text": "and the basic idea is that you say I",
    "start": "286440",
    "end": "288360"
  },
  {
    "text": "would like to use some memory and the",
    "start": "288360",
    "end": "290040"
  },
  {
    "text": "automatic memory management system will",
    "start": "290040",
    "end": "291600"
  },
  {
    "text": "work out when you are finished using it",
    "start": "291600",
    "end": "294419"
  },
  {
    "text": "and then it will give it back to the",
    "start": "294419",
    "end": "295740"
  },
  {
    "text": "operating system on your behalf so if",
    "start": "295740",
    "end": "297660"
  },
  {
    "text": "you were to put this in terms of C you",
    "start": "297660",
    "end": "299759"
  },
  {
    "text": "would have malloc but you would no",
    "start": "299759",
    "end": "301080"
  },
  {
    "text": "longer worry about calling free and",
    "start": "301080",
    "end": "303240"
  },
  {
    "text": "because you no longer have to call free",
    "start": "303240",
    "end": "304740"
  },
  {
    "text": "we can get rid of all of these sources",
    "start": "304740",
    "end": "306180"
  },
  {
    "text": "of errors and make things a lot simpler",
    "start": "306180",
    "end": "308580"
  },
  {
    "text": "okay so there's a book it feels like",
    "start": "308580",
    "end": "311220"
  },
  {
    "text": "it's a book coming it feels like it",
    "start": "311220",
    "end": "312720"
  },
  {
    "text": "there is a bot of sorts there's there's",
    "start": "312720",
    "end": "314880"
  },
  {
    "text": "a couple of techniques and one of them",
    "start": "314880",
    "end": "316800"
  },
  {
    "text": "is the obvious one and and has",
    "start": "316800",
    "end": "319259"
  },
  {
    "text": "some trade-offs let's say so the obvious",
    "start": "319259",
    "end": "322380"
  },
  {
    "text": "way of doing this is what's called",
    "start": "322380",
    "end": "323580"
  },
  {
    "text": "reference counting so you say when I",
    "start": "323580",
    "end": "325560"
  },
  {
    "text": "allocate some memory I'm going to put a",
    "start": "325560",
    "end": "327180"
  },
  {
    "text": "little counter saying how many parts of",
    "start": "327180",
    "end": "329520"
  },
  {
    "text": "my program are still using this so when",
    "start": "329520",
    "end": "331380"
  },
  {
    "text": "it's allocated the count will probably",
    "start": "331380",
    "end": "332820"
  },
  {
    "text": "be one and if I give it to someone else",
    "start": "332820",
    "end": "334680"
  },
  {
    "text": "used the count goes up to two and when",
    "start": "334680",
    "end": "336479"
  },
  {
    "text": "they're done using it they put the count",
    "start": "336479",
    "end": "338280"
  },
  {
    "text": "back to one and when the count goes to",
    "start": "338280",
    "end": "340259"
  },
  {
    "text": "zero no one's using the memory it can be",
    "start": "340259",
    "end": "342060"
  },
  {
    "text": "free even go back to things so it's not",
    "start": "342060",
    "end": "343680"
  },
  {
    "text": "fully automatic but it's semi-automatic",
    "start": "343680",
    "end": "345479"
  },
  {
    "text": "and it's definitely less likely to have",
    "start": "345479",
    "end": "348660"
  },
  {
    "text": "problems but there are some consequences",
    "start": "348660",
    "end": "350400"
  },
  {
    "text": "one I've got to remember to add and",
    "start": "350400",
    "end": "352440"
  },
  {
    "text": "decrement these things accurately which",
    "start": "352440",
    "end": "354060"
  },
  {
    "text": "is surprisingly difficult to do",
    "start": "354060",
    "end": "355740"
  },
  {
    "text": "correctly",
    "start": "355740",
    "end": "357900"
  },
  {
    "text": "um the other one is that means every",
    "start": "357900",
    "end": "359820"
  },
  {
    "text": "block of memory now has a little integer",
    "start": "359820",
    "end": "361440"
  },
  {
    "text": "associated with it which takes up extra",
    "start": "361440",
    "end": "363300"
  },
  {
    "text": "memory and surprisingly the literal",
    "start": "363300",
    "end": "365639"
  },
  {
    "text": "adding and incrementing and decrementing",
    "start": "365639",
    "end": "367860"
  },
  {
    "text": "these counts can become surprisingly um",
    "start": "367860",
    "end": "370620"
  },
  {
    "text": "punishing in terms of performance if you",
    "start": "370620",
    "end": "372720"
  },
  {
    "text": "keep handing them out and getting them",
    "start": "372720",
    "end": "373979"
  },
  {
    "text": "back over time",
    "start": "373979",
    "end": "375840"
  },
  {
    "text": "and then just finally reference counting",
    "start": "375840",
    "end": "378780"
  },
  {
    "text": "cannot deal with what are called Cycles",
    "start": "378780",
    "end": "380400"
  },
  {
    "text": "so we'll see a maybe a little example of",
    "start": "380400",
    "end": "382199"
  },
  {
    "text": "that later",
    "start": "382199",
    "end": "383819"
  },
  {
    "text": "um you can end up finding remember me",
    "start": "383819",
    "end": "385800"
  },
  {
    "text": "that you have finished using that where",
    "start": "385800",
    "end": "387840"
  },
  {
    "text": "the counts are always above zero and",
    "start": "387840",
    "end": "389340"
  },
  {
    "text": "cannot be automatically returned so is",
    "start": "389340",
    "end": "391860"
  },
  {
    "start": "390000",
    "end": "755000"
  },
  {
    "text": "that like a memory leak it is it is a",
    "start": "391860",
    "end": "393720"
  },
  {
    "text": "memory leak yes it's absolutely a memory",
    "start": "393720",
    "end": "395819"
  },
  {
    "text": "leak exactly the same consequences your",
    "start": "395819",
    "end": "397560"
  },
  {
    "text": "program just grows but almost worse it",
    "start": "397560",
    "end": "400500"
  },
  {
    "text": "looks to use a program like I finished",
    "start": "400500",
    "end": "402000"
  },
  {
    "text": "using with this memory it looks like",
    "start": "402000",
    "end": "404039"
  },
  {
    "text": "I've done the right thing and yet",
    "start": "404039",
    "end": "405240"
  },
  {
    "text": "somehow it's not being freed",
    "start": "405240",
    "end": "408600"
  },
  {
    "text": "um so that's reference counting has its",
    "start": "408600",
    "end": "411300"
  },
  {
    "text": "place it's still used in in some",
    "start": "411300",
    "end": "412740"
  },
  {
    "text": "languages but what's more commonly used",
    "start": "412740",
    "end": "415319"
  },
  {
    "text": "in most languages now you know your",
    "start": "415319",
    "end": "417120"
  },
  {
    "text": "JavaScript your Javas",
    "start": "417120",
    "end": "419699"
  },
  {
    "text": "um is what's called garbage collection",
    "start": "419699",
    "end": "421380"
  },
  {
    "text": "now sometimes this is used as an",
    "start": "421380",
    "end": "423180"
  },
  {
    "text": "umbrella term but more commonly it's",
    "start": "423180",
    "end": "425160"
  },
  {
    "text": "used to mean a specific type of",
    "start": "425160",
    "end": "427139"
  },
  {
    "text": "automatic memory management where it's",
    "start": "427139",
    "end": "429419"
  },
  {
    "text": "more accurately able to determine when",
    "start": "429419",
    "end": "432120"
  },
  {
    "text": "you have finished using some memory and",
    "start": "432120",
    "end": "435240"
  },
  {
    "text": "it works really really well so maybe we",
    "start": "435240",
    "end": "437280"
  },
  {
    "text": "can see a a little example of that",
    "start": "437280",
    "end": "441000"
  },
  {
    "text": "what I do first of all I just run a very",
    "start": "441000",
    "end": "443160"
  },
  {
    "text": "stupid little small Python program and",
    "start": "443160",
    "end": "445440"
  },
  {
    "text": "we can just see that there must be some",
    "start": "445440",
    "end": "447419"
  },
  {
    "text": "sorted memory management going on",
    "start": "447419",
    "end": "450000"
  },
  {
    "text": "so we'll just make a little class and",
    "start": "450000",
    "end": "453599"
  },
  {
    "text": "we'll make some very long Loop",
    "start": "453599",
    "end": "456560"
  },
  {
    "text": "[Music]",
    "start": "456560",
    "end": "457919"
  },
  {
    "text": "this right so what this program is going",
    "start": "457919",
    "end": "460440"
  },
  {
    "text": "to do is just in a long Loop keep",
    "start": "460440",
    "end": "462060"
  },
  {
    "text": "allocating some memory now naively if",
    "start": "462060",
    "end": "465060"
  },
  {
    "text": "this was C the program the memory usage",
    "start": "465060",
    "end": "467220"
  },
  {
    "text": "would just go up and up over time",
    "start": "467220",
    "end": "468360"
  },
  {
    "text": "because I'm not saying free so when I",
    "start": "468360",
    "end": "470460"
  },
  {
    "text": "say c angle bracket allocate some memory",
    "start": "470460",
    "end": "473280"
  },
  {
    "text": "effectively and we can just force that",
    "start": "473280",
    "end": "475259"
  },
  {
    "text": "to make clear that we're storing some",
    "start": "475259",
    "end": "477240"
  },
  {
    "text": "extra things somebody must be doing",
    "start": "477240",
    "end": "478380"
  },
  {
    "text": "something",
    "start": "478380",
    "end": "479580"
  },
  {
    "text": "and then uh let's run this and we'll run",
    "start": "479580",
    "end": "482580"
  },
  {
    "text": "this in another window as well",
    "start": "482580",
    "end": "485400"
  },
  {
    "text": "so it will",
    "start": "485400",
    "end": "488300"
  },
  {
    "text": "see if I picked a big enough number no I",
    "start": "492539",
    "end": "494460"
  },
  {
    "text": "really need a bigger number to make it",
    "start": "494460",
    "end": "495539"
  },
  {
    "text": "run longer it's going to make it run for",
    "start": "495539",
    "end": "497400"
  },
  {
    "text": "very long so the first one of these",
    "start": "497400",
    "end": "499500"
  },
  {
    "text": "python processes you can see what under",
    "start": "499500",
    "end": "501240"
  },
  {
    "text": "let's take under size uh or actually",
    "start": "501240",
    "end": "503220"
  },
  {
    "text": "under resources which doesn't matter",
    "start": "503220",
    "end": "504419"
  },
  {
    "text": "which one the program keeps running and",
    "start": "504419",
    "end": "506759"
  },
  {
    "text": "it's never using any more memory in this",
    "start": "506759",
    "end": "509039"
  },
  {
    "text": "case it actually turns out using",
    "start": "509039",
    "end": "510419"
  },
  {
    "text": "reference counting at the moment but as",
    "start": "510419",
    "end": "512459"
  },
  {
    "text": "soon as I finish using the memory it's",
    "start": "512459",
    "end": "514020"
  },
  {
    "text": "deallocated that's automatic memory",
    "start": "514020",
    "end": "516060"
  },
  {
    "text": "management of some form working but what",
    "start": "516060",
    "end": "518459"
  },
  {
    "text": "happens if we do something a little bit",
    "start": "518459",
    "end": "520140"
  },
  {
    "text": "more sophisticated so let's kill that",
    "start": "520140",
    "end": "523380"
  },
  {
    "text": "so let's make another new font",
    "start": "523380",
    "end": "526200"
  },
  {
    "text": "and what we're going to do now is just",
    "start": "526200",
    "end": "528240"
  },
  {
    "text": "look",
    "start": "528240",
    "end": "529019"
  },
  {
    "text": "how one of these garbage collection",
    "start": "529019",
    "end": "531060"
  },
  {
    "text": "algorithms work now they turn you can go",
    "start": "531060",
    "end": "534120"
  },
  {
    "text": "into huge depth making these things",
    "start": "534120",
    "end": "536220"
  },
  {
    "text": "super fast but I just I will show you",
    "start": "536220",
    "end": "539100"
  },
  {
    "text": "the basic algorithm which is called a",
    "start": "539100",
    "end": "540959"
  },
  {
    "text": "mark and sweep algorithm where we work",
    "start": "540959",
    "end": "543240"
  },
  {
    "text": "out which memory is still being used",
    "start": "543240",
    "end": "544920"
  },
  {
    "text": "which can be free everything else all",
    "start": "544920",
    "end": "547560"
  },
  {
    "text": "the complexity is just an optimization",
    "start": "547560",
    "end": "549180"
  },
  {
    "text": "to make those stages go faster but they",
    "start": "549180",
    "end": "551040"
  },
  {
    "text": "don't affect the fundamentals so let's",
    "start": "551040",
    "end": "553320"
  },
  {
    "text": "save this one so again I'll just make an",
    "start": "553320",
    "end": "556080"
  },
  {
    "text": "empty class",
    "start": "556080",
    "end": "557640"
  },
  {
    "text": "and what I'm going to do first of all",
    "start": "557640",
    "end": "559260"
  },
  {
    "text": "I'm going to make an object so in Python",
    "start": "559260",
    "end": "561420"
  },
  {
    "text": "this is a blank object what I'm going to",
    "start": "561420",
    "end": "563519"
  },
  {
    "text": "show you is the problem of working at",
    "start": "563519",
    "end": "565500"
  },
  {
    "text": "which memory is live at first so there's",
    "start": "565500",
    "end": "568080"
  },
  {
    "text": "a concept of what are called Roots so",
    "start": "568080",
    "end": "569880"
  },
  {
    "text": "when we allocate memory we have to say",
    "start": "569880",
    "end": "571320"
  },
  {
    "text": "which objects am I still using we call",
    "start": "571320",
    "end": "573360"
  },
  {
    "text": "those the roots and I'll simplify and",
    "start": "573360",
    "end": "575220"
  },
  {
    "text": "say any object reference from a variable",
    "start": "575220",
    "end": "577380"
  },
  {
    "text": "is a root so I'll try drawing and",
    "start": "577380",
    "end": "579600"
  },
  {
    "text": "remembering that I have the artistic",
    "start": "579600",
    "end": "581100"
  },
  {
    "text": "skill of someone with no artistic skills",
    "start": "581100",
    "end": "584220"
  },
  {
    "text": "in fact my artistic skills should be",
    "start": "584220",
    "end": "585600"
  },
  {
    "text": "legendary for their lack of existence so",
    "start": "585600",
    "end": "588120"
  },
  {
    "text": "we'll say I've got a variable X and it's",
    "start": "588120",
    "end": "590459"
  },
  {
    "text": "allocated a chunk of memory over here it",
    "start": "590459",
    "end": "592380"
  },
  {
    "text": "doesn't matter what's in that memory",
    "start": "592380",
    "end": "594060"
  },
  {
    "text": "particularly and I have a reference to",
    "start": "594060",
    "end": "596279"
  },
  {
    "text": "it",
    "start": "596279",
    "end": "597839"
  },
  {
    "text": "so now we can say one of the roots is X",
    "start": "597839",
    "end": "601560"
  },
  {
    "text": "so it's pointing to that memory in the",
    "start": "601560",
    "end": "603779"
  },
  {
    "text": "intuitively that block of memory here is",
    "start": "603779",
    "end": "606060"
  },
  {
    "text": "alive because I'm still pointing at it",
    "start": "606060",
    "end": "608040"
  },
  {
    "text": "and I can make a second variable called",
    "start": "608040",
    "end": "610320"
  },
  {
    "text": "y",
    "start": "610320",
    "end": "612420"
  },
  {
    "text": "and that will also have another block of",
    "start": "612420",
    "end": "614940"
  },
  {
    "text": "memory over here I'm getting some very",
    "start": "614940",
    "end": "617279"
  },
  {
    "text": "variable with arrows here doesn't really",
    "start": "617279",
    "end": "619140"
  },
  {
    "text": "matter intuitively now both of those",
    "start": "619140",
    "end": "621480"
  },
  {
    "text": "boxes of memory are still being pointed",
    "start": "621480",
    "end": "623220"
  },
  {
    "text": "out they have Roots so they're alive",
    "start": "623220",
    "end": "625920"
  },
  {
    "text": "now the first thing I can say is I'm",
    "start": "625920",
    "end": "628440"
  },
  {
    "text": "going to put the null value or none",
    "start": "628440",
    "end": "630300"
  },
  {
    "text": "value in Python's variable y so now I've",
    "start": "630300",
    "end": "632760"
  },
  {
    "text": "effectively removed that pointer there",
    "start": "632760",
    "end": "635399"
  },
  {
    "text": "now so intuitively",
    "start": "635399",
    "end": "637320"
  },
  {
    "text": "this second object the the one with the",
    "start": "637320",
    "end": "639959"
  },
  {
    "text": "thinner lines is no longer being pointed",
    "start": "639959",
    "end": "642180"
  },
  {
    "text": "to so what's going to happen in Mark and",
    "start": "642180",
    "end": "643740"
  },
  {
    "text": "sweep algorithm is the garbage collector",
    "start": "643740",
    "end": "645300"
  },
  {
    "text": "every sort of can say what memory is",
    "start": "645300",
    "end": "647220"
  },
  {
    "text": "still accessible so it's going to start",
    "start": "647220",
    "end": "648600"
  },
  {
    "text": "at the roots and it will say Okay",
    "start": "648600",
    "end": "650220"
  },
  {
    "text": "variable X see what you point to at you",
    "start": "650220",
    "end": "652200"
  },
  {
    "text": "point to something over here so I'll",
    "start": "652200",
    "end": "653820"
  },
  {
    "text": "mark that as tickets being used",
    "start": "653820",
    "end": "656940"
  },
  {
    "text": "variable y That's pointing to nothing",
    "start": "656940",
    "end": "658800"
  },
  {
    "text": "nothing to do there and then it says",
    "start": "658800",
    "end": "660839"
  },
  {
    "text": "right I finished the mark phase of the",
    "start": "660839",
    "end": "663240"
  },
  {
    "text": "algorithm look at all the objects in",
    "start": "663240",
    "end": "664920"
  },
  {
    "text": "memory there are two one of them I",
    "start": "664920",
    "end": "666839"
  },
  {
    "text": "ticked I could reach the other one no",
    "start": "666839",
    "end": "668700"
  },
  {
    "text": "take so I can now deallocate that so",
    "start": "668700",
    "end": "672000"
  },
  {
    "text": "Mark work out what's live sweep get rid",
    "start": "672000",
    "end": "675660"
  },
  {
    "text": "of the stuff that isn't",
    "start": "675660",
    "end": "677160"
  },
  {
    "text": "so that's the very simple version",
    "start": "677160",
    "end": "679260"
  },
  {
    "text": "and then you have to think what happens",
    "start": "679260",
    "end": "681000"
  },
  {
    "text": "if there are more complex graphs than",
    "start": "681000",
    "end": "683399"
  },
  {
    "text": "just two variables and this algorithm is",
    "start": "683399",
    "end": "685500"
  },
  {
    "text": "so simple it scales really nicely",
    "start": "685500",
    "end": "688440"
  },
  {
    "text": "so I will put back the object into why",
    "start": "688440",
    "end": "693500"
  },
  {
    "text": "and I will say that the X object now has",
    "start": "693500",
    "end": "697079"
  },
  {
    "text": "a reference to the Y object",
    "start": "697079",
    "end": "699120"
  },
  {
    "text": "so I have this little line going over",
    "start": "699120",
    "end": "701160"
  },
  {
    "text": "here",
    "start": "701160",
    "end": "703519"
  },
  {
    "text": "okay so now I've got if I was to do run",
    "start": "703640",
    "end": "707459"
  },
  {
    "text": "the mark sweep stage both of those",
    "start": "707459",
    "end": "708899"
  },
  {
    "text": "objects are clearly accessible",
    "start": "708899",
    "end": "710820"
  },
  {
    "text": "but now imagine if again I say why is",
    "start": "710820",
    "end": "713579"
  },
  {
    "text": "none",
    "start": "713579",
    "end": "714600"
  },
  {
    "text": "I get rid of this",
    "start": "714600",
    "end": "716519"
  },
  {
    "text": "and I run the garbage collector first",
    "start": "716519",
    "end": "718800"
  },
  {
    "text": "object I can reach from X yes tick that",
    "start": "718800",
    "end": "720660"
  },
  {
    "text": "and then it will then do what's called a",
    "start": "720660",
    "end": "722880"
  },
  {
    "text": "reachability algorithm effective what",
    "start": "722880",
    "end": "724920"
  },
  {
    "text": "can be reached from this object well if",
    "start": "724920",
    "end": "726540"
  },
  {
    "text": "I go from this object I've just marked",
    "start": "726540",
    "end": "728160"
  },
  {
    "text": "with a tick and via the Y reference oh",
    "start": "728160",
    "end": "730740"
  },
  {
    "text": "yeah look I can take that one as well",
    "start": "730740",
    "end": "732779"
  },
  {
    "text": "it's in use so now I don't want to free",
    "start": "732779",
    "end": "735180"
  },
  {
    "text": "that second one even though it's not",
    "start": "735180",
    "end": "736920"
  },
  {
    "text": "being directly pointed to from a",
    "start": "736920",
    "end": "739019"
  },
  {
    "text": "variable",
    "start": "739019",
    "end": "739920"
  },
  {
    "text": "so in this case it won't have to get rid",
    "start": "739920",
    "end": "741779"
  },
  {
    "text": "of any of those objects in memory and",
    "start": "741779",
    "end": "743399"
  },
  {
    "text": "that in a nutshell is garbage collection",
    "start": "743399",
    "end": "746519"
  },
  {
    "text": "there are some other details perhaps we",
    "start": "746519",
    "end": "748200"
  },
  {
    "text": "want to talk about a few but really",
    "start": "748200",
    "end": "749279"
  },
  {
    "text": "that's the core of the algorithm it's",
    "start": "749279",
    "end": "750959"
  },
  {
    "text": "very nice and simple very intuitive and",
    "start": "750959",
    "end": "753839"
  },
  {
    "text": "the nice thing is it will free all of",
    "start": "753839",
    "end": "755339"
  },
  {
    "start": "755000",
    "end": "981000"
  },
  {
    "text": "the stuff I can't reach so it Suites",
    "start": "755339",
    "end": "757560"
  },
  {
    "text": "where anything that's not marked exactly",
    "start": "757560",
    "end": "759540"
  },
  {
    "text": "so a sweep is just a Boolean flight just",
    "start": "759540",
    "end": "762360"
  },
  {
    "text": "it is this reachable yes or no and if at",
    "start": "762360",
    "end": "765060"
  },
  {
    "text": "the end of this the mark phase it's not",
    "start": "765060",
    "end": "767220"
  },
  {
    "text": "marked as reachable outagos",
    "start": "767220",
    "end": "769980"
  },
  {
    "text": "and this might be completely irrelevant",
    "start": "769980",
    "end": "772320"
  },
  {
    "text": "compared to this but just thinking about",
    "start": "772320",
    "end": "773940"
  },
  {
    "text": "the kind of idea of allocating or",
    "start": "773940",
    "end": "775860"
  },
  {
    "text": "grabbing some memory why don't programs",
    "start": "775860",
    "end": "778620"
  },
  {
    "text": "just get memory when they need it why do",
    "start": "778620",
    "end": "780600"
  },
  {
    "text": "they have to kind of grab some allocate",
    "start": "780600",
    "end": "782399"
  },
  {
    "text": "it and ah okay good question we have",
    "start": "782399",
    "end": "785040"
  },
  {
    "text": "this idea that in in or sometimes we",
    "start": "785040",
    "end": "787139"
  },
  {
    "text": "have this idea that programs such in a",
    "start": "787139",
    "end": "789120"
  },
  {
    "text": "sense like know and Advance what they're",
    "start": "789120",
    "end": "790620"
  },
  {
    "text": "going to need to do",
    "start": "790620",
    "end": "792060"
  },
  {
    "text": "but you know imagine you're writing the",
    "start": "792060",
    "end": "793980"
  },
  {
    "text": "software for like a a web uh like an",
    "start": "793980",
    "end": "796800"
  },
  {
    "text": "e-commerce basket how many items are",
    "start": "796800",
    "end": "798660"
  },
  {
    "text": "people going to put in the basket some",
    "start": "798660",
    "end": "800279"
  },
  {
    "text": "people are going to buy one the",
    "start": "800279",
    "end": "801300"
  },
  {
    "text": "shopaholics are going to buy a hundred",
    "start": "801300",
    "end": "802680"
  },
  {
    "text": "so you never know in advance how much",
    "start": "802680",
    "end": "804839"
  },
  {
    "text": "you'll need to do and so this is really",
    "start": "804839",
    "end": "806459"
  },
  {
    "text": "all about allowing you to dynamically",
    "start": "806459",
    "end": "808139"
  },
  {
    "text": "allocate memory because you just don't",
    "start": "808139",
    "end": "809519"
  },
  {
    "text": "know how much you'll need then I'll be",
    "start": "809519",
    "end": "811200"
  },
  {
    "text": "free so over time your process will its",
    "start": "811200",
    "end": "813300"
  },
  {
    "text": "memory usage will go up and down",
    "start": "813300",
    "end": "814620"
  },
  {
    "text": "depending on what you need and your",
    "start": "814620",
    "end": "816000"
  },
  {
    "text": "process might run for days weeks months",
    "start": "816000",
    "end": "818339"
  },
  {
    "text": "going down to tiny amounts going up to",
    "start": "818339",
    "end": "820500"
  },
  {
    "text": "huge amounts also bearing in mind that",
    "start": "820500",
    "end": "822779"
  },
  {
    "text": "even with a very simple program like the",
    "start": "822779",
    "end": "824519"
  },
  {
    "text": "one I'm writing you can easily allocate",
    "start": "824519",
    "end": "826579"
  },
  {
    "text": "hundreds of megabytes if not gigabytes",
    "start": "826579",
    "end": "828959"
  },
  {
    "text": "per second so if you don't free memory",
    "start": "828959",
    "end": "831360"
  },
  {
    "text": "pretty quickly you won't have resources",
    "start": "831360",
    "end": "832920"
  },
  {
    "text": "really quickly are there any problems",
    "start": "832920",
    "end": "834839"
  },
  {
    "text": "with this then",
    "start": "834839",
    "end": "835920"
  },
  {
    "text": "there is one and it goes back a little",
    "start": "835920",
    "end": "838260"
  },
  {
    "text": "bit to our reference counting example",
    "start": "838260",
    "end": "839880"
  },
  {
    "text": "earlier which is um sometimes people",
    "start": "839880",
    "end": "842100"
  },
  {
    "text": "find they're using say Java which has",
    "start": "842100",
    "end": "843899"
  },
  {
    "text": "amazing quality garbage collection",
    "start": "843899",
    "end": "845700"
  },
  {
    "text": "algorithms and yet their program seems",
    "start": "845700",
    "end": "848040"
  },
  {
    "text": "to leak memory and keep getting bigger",
    "start": "848040",
    "end": "849600"
  },
  {
    "text": "and bigger and bigger",
    "start": "849600",
    "end": "850920"
  },
  {
    "text": "and it's because they've got a route",
    "start": "850920",
    "end": "853740"
  },
  {
    "text": "left in other words they have a pointer",
    "start": "853740",
    "end": "855600"
  },
  {
    "text": "to what looks like one little object and",
    "start": "855600",
    "end": "857579"
  },
  {
    "text": "and which they've forgotten that they're",
    "start": "857579",
    "end": "859260"
  },
  {
    "text": "keeping alive that object points to",
    "start": "859260",
    "end": "862399"
  },
  {
    "text": "directly indirectly to millions of other",
    "start": "862399",
    "end": "864779"
  },
  {
    "text": "objects you know gigabytes of memory and",
    "start": "864779",
    "end": "867000"
  },
  {
    "text": "as long as there's that one little",
    "start": "867000",
    "end": "868260"
  },
  {
    "text": "pointer left the rest of the stuff won't",
    "start": "868260",
    "end": "870480"
  },
  {
    "text": "be freed so occasionally you have this",
    "start": "870480",
    "end": "872639"
  },
  {
    "text": "challenge of my memory is huge and you",
    "start": "872639",
    "end": "874920"
  },
  {
    "text": "have to find often there's this one",
    "start": "874920",
    "end": "876600"
  },
  {
    "text": "little reference you need to clear in",
    "start": "876600",
    "end": "878940"
  },
  {
    "text": "order the garbage collector come with us",
    "start": "878940",
    "end": "880500"
  },
  {
    "text": "all of the other stuff isn't reachable",
    "start": "880500",
    "end": "882660"
  },
  {
    "text": "and there are tools to help you with",
    "start": "882660",
    "end": "884339"
  },
  {
    "text": "that but it's something that all of us",
    "start": "884339",
    "end": "885839"
  },
  {
    "text": "get wrong at some point",
    "start": "885839",
    "end": "887760"
  },
  {
    "text": "and my last question doesn't marking the",
    "start": "887760",
    "end": "891480"
  },
  {
    "text": "memory use memory",
    "start": "891480",
    "end": "893399"
  },
  {
    "text": "yes it does and so I alluded to you",
    "start": "893399",
    "end": "896220"
  },
  {
    "text": "earlier that the real algorithm so say",
    "start": "896220",
    "end": "898500"
  },
  {
    "text": "if you look in the Java virtual machine",
    "start": "898500",
    "end": "899820"
  },
  {
    "text": "that has several different garbage",
    "start": "899820",
    "end": "901260"
  },
  {
    "text": "collectors they go do some amazing",
    "start": "901260",
    "end": "904260"
  },
  {
    "text": "tricks uh to squash down the moments so",
    "start": "904260",
    "end": "907320"
  },
  {
    "text": "the marking thing is one single bit in",
    "start": "907320",
    "end": "909420"
  },
  {
    "text": "memory it's stored alongside some other",
    "start": "909420",
    "end": "912000"
  },
  {
    "text": "information that you have to have around",
    "start": "912000",
    "end": "914339"
  },
  {
    "text": "and so more or less not only does it not",
    "start": "914339",
    "end": "916500"
  },
  {
    "text": "take up any room but implicitly you",
    "start": "916500",
    "end": "918300"
  },
  {
    "text": "remember when I was doing the little",
    "start": "918300",
    "end": "919320"
  },
  {
    "text": "example after each space I went and",
    "start": "919320",
    "end": "921240"
  },
  {
    "text": "cleared the little tick marks the marks",
    "start": "921240",
    "end": "923639"
  },
  {
    "text": "and the proper garbage collectors say",
    "start": "923639",
    "end": "925380"
  },
  {
    "text": "hey even going over all the objects and",
    "start": "925380",
    "end": "927240"
  },
  {
    "text": "and setting them to false the mark bit",
    "start": "927240",
    "end": "929399"
  },
  {
    "text": "that is just too slow so what we'll do",
    "start": "929399",
    "end": "932519"
  },
  {
    "text": "we'll remember last time was it did the",
    "start": "932519",
    "end": "934680"
  },
  {
    "text": "mark bit set to True mean free or does",
    "start": "934680",
    "end": "936660"
  },
  {
    "text": "the market set the false mean free so",
    "start": "936660",
    "end": "938339"
  },
  {
    "text": "they don't have to go around and unset",
    "start": "938339",
    "end": "939660"
  },
  {
    "text": "things",
    "start": "939660",
    "end": "940680"
  },
  {
    "text": "all sorts of little optimizations to",
    "start": "940680",
    "end": "943079"
  },
  {
    "text": "make this as fast as they possibly can",
    "start": "943079",
    "end": "945600"
  },
  {
    "text": "and when you have got a memory leak is",
    "start": "945600",
    "end": "947699"
  },
  {
    "text": "that why we turn things off and on again",
    "start": "947699",
    "end": "950399"
  },
  {
    "text": "yes and I am a a habitual Turner offer",
    "start": "950399",
    "end": "954180"
  },
  {
    "text": "and back on her again because yes it",
    "start": "954180",
    "end": "956699"
  },
  {
    "text": "really does fix memory leaks and many",
    "start": "956699",
    "end": "959579"
  },
  {
    "text": "other patented and unpatented problems",
    "start": "959579",
    "end": "963620"
  },
  {
    "text": "I make that number a lot bigger so I",
    "start": "964320",
    "end": "966000"
  },
  {
    "text": "make it an order of magnitude bigger",
    "start": "966000",
    "end": "967560"
  },
  {
    "text": "this for Loop it now takes a bit longer",
    "start": "967560",
    "end": "969959"
  },
  {
    "text": "and if I make it longer again",
    "start": "969959",
    "end": "972540"
  },
  {
    "text": "we'll see depending on which style of",
    "start": "972540",
    "end": "974459"
  },
  {
    "text": "core it's going on I think it's within",
    "start": "974459",
    "end": "976260"
  },
  {
    "text": "three cycles and then if you go any",
    "start": "976260",
    "end": "978899"
  },
  {
    "text": "longer then it's going to take you",
    "start": "978899",
    "end": "980100"
  },
  {
    "text": "longer you know",
    "start": "980100",
    "end": "982819"
  }
]