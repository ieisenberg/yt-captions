[
  {
    "text": "So we did a video a while back on the SCP exploit in the secure copy, and I though it would be just a",
    "start": "0",
    "end": "5600"
  },
  {
    "text": "sort of interesting to talk/have a look in a bit more detail about how SSH works.",
    "start": "5660",
    "end": "10460"
  },
  {
    "text": "SSH stands for 'Secure Shell' and it first appeared in the mid 90's as a sort of replacement for/way of connecting to a remote machine over the internet.",
    "start": "10460",
    "end": "20200"
  },
  {
    "text": "Up until that time the technologies you had to connect to a remote machine, Telnet, rlogin, RSH and so on, worked fine",
    "start": "20280",
    "end": "27740"
  },
  {
    "text": "but they transmitted all the data in the clear over the network.  So if you logged into a remote machine",
    "start": "27740",
    "end": "32820"
  },
  {
    "text": "anyone with a packet sniffer between you and the remote machine could see everything you were doing on there.",
    "start": "32900",
    "end": "39440"
  },
  {
    "text": "When these protocols first appeared that wasn't a problem because the machines were probably only networked within their computer department of a university",
    "start": "39920",
    "end": "47500"
  },
  {
    "text": "or a company so the people that had access to do that were people who worked there and probably the system administrators who had access to these things.",
    "start": "47500",
    "end": "54739"
  },
  {
    "text": "Anyway, but as the machines got networked to other networks and you started to build the internet, if you had access to the network",
    "start": "54740",
    "end": "60840"
  },
  {
    "text": "Any network that the data was travelling over you could sniff the packets.",
    "start": "60840",
    "end": "64379"
  },
  {
    "text": "And see any of the data that was being transmitted, including passwords and things.",
    "start": "64380",
    "end": "68119"
  },
  {
    "text": "And so in 1995, Tatu Ylonen in Finland (I apologies if I pronounced that wrongly) was concerned about this",
    "start": "68120",
    "end": "73900"
  },
  {
    "text": "so he developed a protocol SSH 'Secure Shell' to sort of encrypt the data so that you couldn't sort of see how/what was being sent over the wire",
    "start": "74400",
    "end": "84160"
  },
  {
    "text": "You could see that data was being transmitted across, you could see how much data",
    "start": "84160",
    "end": "88660"
  },
  {
    "text": "You could see the frequency of it to a certain extent, but you couldn't see what the data was, so you could do",
    "start": "88660",
    "end": "93780"
  },
  {
    "text": "certain types of analysis to see whats happening, but you couldn't see the actual data.",
    "start": "93780",
    "end": "98380"
  },
  {
    "text": "And so SSH was developed as a way of encrypting the connection between two machines",
    "start": "98380",
    "end": "102860"
  },
  {
    "text": "but it actually does a lot more than that, because when you SSH to another machine",
    "start": "102860",
    "end": "107720"
  },
  {
    "text": "The first thing that happens is that you open up a TCP connection between those two machines",
    "start": "107860",
    "end": "113900"
  },
  {
    "text": "like any standard things.",
    "start": "113900",
    "end": "115080"
  },
  {
    "text": "Although it doesn't have to be a TCP connection.  You can actually specify that SSH uses any sort of reliable",
    "start": "115240",
    "end": "120979"
  },
  {
    "text": "network connection to make that, so you could theoretically run it over an RS-232 connection.",
    "start": "121060",
    "end": "126240"
  },
  {
    "text": "You could run it over the top of web sockets and things like that.",
    "start": "126240",
    "end": "129580"
  },
  {
    "text": "And I know people who have done that sort of thing.",
    "start": "129580",
    "end": "131780"
  },
  {
    "text": "So you've got a reliable transport between the two machines and so SSH is sending data over there.",
    "start": "131940",
    "end": "137200"
  },
  {
    "text": "And what SSH does is it breaks the data down into a series of packets.",
    "start": "137360",
    "end": "142940"
  },
  {
    "text": "And just like any packet transfer, these things have a few fields at the beginning.",
    "start": "142940",
    "end": "148280"
  },
  {
    "text": "So at the top you have something that tells you how big the packet is, so you have the packet",
    "start": "148280",
    "end": "153700"
  },
  {
    "text": "length, there are 4 bytes saying the packet is 'this big'.  After that, you have another  byte, which tells you",
    "start": "153700",
    "end": "161880"
  },
  {
    "text": "how much padding you've got.  So you've got the packet length.  You've got how much padding there is",
    "start": "161880",
    "end": "167300"
  },
  {
    "text": "and then you've got the data you want - the payload.",
    "start": "167420",
    "end": "171459"
  },
  {
    "text": "Then you have the padding that follows that, and so what you do, with each packet after the payload",
    "start": "171460",
    "end": "178260"
  },
  {
    "text": "the data that you want to send that's part of the connection, you add a small amount of padding.",
    "start": "178260",
    "end": "183060"
  },
  {
    "text": "Just random bytes.  They don't mean anything, but they sort of force the encryption to sort of make",
    "start": "183060",
    "end": "188400"
  },
  {
    "text": "it harder to detect what's going on because you've got random data in there.",
    "start": "188440",
    "end": "191180"
  },
  {
    "text": "[See some of Mike's videos, for more details on why you might want to do that]",
    "start": "191240",
    "end": "195500"
  },
  {
    "text": "And then, you have some sort of message authentication code there, so that",
    "start": "195520",
    "end": "199220"
  },
  {
    "text": "you know that the data here hasn't been 'monkied' around with",
    "start": "199220",
    "end": "202140"
  },
  {
    "text": "and it's actually what has been sent.",
    "start": "202140",
    "end": "203240"
  },
  {
    "text": "You can the apply compression if you want to - to the payload",
    "start": "203240",
    "end": "206980"
  },
  {
    "text": "so you can compress the payload using standard compression algorithms, such as zlib, or something to compress the data.",
    "start": "206980",
    "end": "214340"
  },
  {
    "text": "And then, the whole of that packet (excluding the length) is then encrypted.",
    "start": "214340",
    "end": "220200"
  },
  {
    "text": "The algorithms used for the encryption and for the message authentication code",
    "start": "220200",
    "end": "224220"
  },
  {
    "text": "are selected by the server and the client. They establish that at the beginning, which ones they offer",
    "start": "224220",
    "end": "228740"
  },
  {
    "text": "which ones they want to use and things, so they are established by the client and the server, so vary from connection to connection.",
    "start": "228740",
    "end": "235680"
  },
  {
    "text": "And you can offer many and you can choose the one that is perhaps best for that connection.",
    "start": "235680",
    "end": "239659"
  },
  {
    "text": "We'll ignore that for the purposes of this video.",
    "start": "239660",
    "end": "242380"
  },
  {
    "text": "So we leave the packet length unencrypted, because obviously we need to know how much data is coming.",
    "start": "242380",
    "end": "246060"
  },
  {
    "text": "We encrypt the padding length.  We encrypt the payload. We encrypt the padding",
    "start": "246060",
    "end": "250080"
  },
  {
    "text": "and we send the packet out over the network.  At the other end, that's decrypted by the server, and it then knows it's got the packet of data.",
    "start": "250080",
    "end": "260799"
  },
  {
    "text": "And it can piece it back together.",
    "start": "260800",
    "end": "262199"
  },
  {
    "text": "And then the same thing is done for this packet, and this packet, and every packet.",
    "start": "262260",
    "end": "265500"
  },
  {
    "text": "And the encryption is done, so that it's continuous.",
    "start": "265500",
    "end": "268040"
  },
  {
    "text": "You start encrypting this one with the vectors from this one, and so on, so it sort of encrypts it one after the other.",
    "start": "268040",
    "end": "273920"
  },
  {
    "text": "At the server, or the client, which receives this you just reverse that process, so you decrypt the packets",
    "start": "273920",
    "end": "280120"
  },
  {
    "text": "you decompress the payload, and you can extract the data and sort of stitch it back together.",
    "start": "280120",
    "end": "285479"
  },
  {
    "text": "So you start off, you've got your TCP connection and that's unencrypted, and on top of that you've got these",
    "start": "285480",
    "end": "293440"
  },
  {
    "text": "packets, which have been encrypted by the SSH protocol flowing on top of that.",
    "start": "293520",
    "end": "298800"
  },
  {
    "text": "But that's not the end of the story.  That's just encrypting the packets.",
    "start": "298800",
    "end": "301520"
  },
  {
    "text": "It's/that's not the connection that say if you're SSH and that's not you connection to the remote machine.",
    "start": "301520",
    "end": "306639"
  },
  {
    "text": "On top of that, you then open a series of channels that you send the data over.",
    "start": "306640",
    "end": "312820"
  },
  {
    "text": "And the reason for that is it enables you to multiplex multiple connections over that thing",
    "start": "312820",
    "end": "317960"
  },
  {
    "text": "so when I start a connection to my machine, it's creating a channel on top of this.",
    "start": "318000",
    "end": "323400"
  },
  {
    "text": "So if this is one computer over here, and this is another one over here, we're creating this channel here for",
    "start": "323400",
    "end": "331699"
  },
  {
    "text": "our shell connection where we can communicate and control things.",
    "start": "331760",
    "end": "335080"
  },
  {
    "text": "But this is actually being actually being represented by a connection through the SSH packets.",
    "start": "335080",
    "end": "339900"
  },
  {
    "text": "And we could have multiple ones of these between the same machines.  Or we could have different types",
    "start": "339900",
    "end": "345139"
  },
  {
    "text": "of connections, so for example SSH also allows you to forward any sort of TCP connection over there",
    "start": "345140",
    "end": "351160"
  },
  {
    "text": "so you can connect to a remote service via the SSH tunnel, so you can tunnel that through",
    "start": "351160",
    "end": "356300"
  },
  {
    "text": "and its encrypted and then sent out at the other end.  And if we make the connection with",
    "start": "356300",
    "end": "362159"
  },
  {
    "text": "verbose mode on, we can actually see it's setting up that connection.  So what we've got here, it's reading the",
    "start": "362180",
    "end": "368740"
  },
  {
    "text": "configuration data, its local protocol string is.",
    "start": "368740",
    "end": "373280"
  },
  {
    "text": "So it connects to the remote machine. It sends back saying I support this version of SSH.",
    "start": "373280",
    "end": "378400"
  },
  {
    "text": "I've sent what my version is.  We've then exchanged information about our compatibility",
    "start": "378400",
    "end": "384680"
  },
  {
    "text": "what method it is we are going to use for encrypting the messages - the packets over the network. And so on.",
    "start": "384680",
    "end": "390580"
  },
  {
    "text": "We've checked that we know the machine, and then we get down to here, we're now trying to authenticate",
    "start": "390580",
    "end": "395039"
  },
  {
    "text": "so it's now establishing, ok this is this user on that machine so I can put my password in.",
    "start": "395040",
    "end": "400080"
  },
  {
    "text": "And we're now connected, but if we look here 'Authentication succeeded'",
    "start": "400080",
    "end": "405099"
  },
  {
    "text": "we are authenticated to the remote machine and you see here it has created a new channel.",
    "start": "405100",
    "end": "409200"
  },
  {
    "text": "So it's creating a connection, which again is just going to be 'I send bytes down here' they appear at the other end.",
    "start": "409200",
    "end": "414660"
  },
  {
    "text": "You send bytes the other way, they come back to us over this channel.",
    "start": "414740",
    "end": "418240"
  },
  {
    "text": "And it's then setting up what type of connection it is.  It's setting environment variables and things.",
    "start": "418240",
    "end": "422280"
  },
  {
    "text": "And this is done by sending packets of data wrapped up inside the SSH packets which establish that.",
    "start": "422280",
    "end": "428360"
  },
  {
    "text": "Once that's done, we can then communicate and have our interactive session.",
    "start": "428360",
    "end": "432620"
  },
  {
    "text": "So SSH is not just a sort of way of connecting your shell.  It's actually got layers of things on top of that",
    "start": "432620",
    "end": "439060"
  },
  {
    "text": "which enable you to do lots of interesting things.",
    "start": "439060",
    "end": "440919"
  },
  {
    "text": "So you can have multiple connections made over this thing.",
    "start": "440920",
    "end": "445660"
  },
  {
    "text": "You don't just have to have one and there are ways you can set SSH up, so that actually, you make",
    "start": "445660",
    "end": "450520"
  },
  {
    "text": "the connection, and it stays connected. When you've finished, so if you make then make another",
    "start": "450560",
    "end": "454139"
  },
  {
    "text": "connection to the same server, it reuses that existing connection and multiplexes the two connections in between things.",
    "start": "454280",
    "end": "461139"
  },
  {
    "text": "It can start and stop forwarded TCP connections to other addresses, in both directions",
    "start": "461340",
    "end": "467060"
  },
  {
    "text": "while the connection is running, just by sending different things over this connection.",
    "start": "467060",
    "end": "470880"
  },
  {
    "text": "The reason why it's got all this functionality is that often",
    "start": "470880",
    "end": "473580"
  },
  {
    "text": "(particularly in the Unix environment, or the Linux environment) when you are connecting to to other",
    "start": "473700",
    "end": "477840"
  },
  {
    "text": "machines, you may just want a remote shell connection, where you just want to type commands and things",
    "start": "478000",
    "end": "482960"
  },
  {
    "text": "that's great. But also, the way the Unix X windows graphical user interface works",
    "start": "482980",
    "end": "489240"
  },
  {
    "text": "is that has a/normally done over a connection usually TCP/IP to port 6000, although it can be done over other things as well",
    "start": "489240",
    "end": "497340"
  },
  {
    "text": "and that could then be forwarded as another connection, so that you could login to another machine and send",
    "start": "497340",
    "end": "502139"
  },
  {
    "text": "the graphics commands back encrypted as well.",
    "start": "502140",
    "end": "506320"
  },
  {
    "text": "Occasionally you may want to connect to a service behind a firewall, and you can do that by tunnelling that",
    "start": "506320",
    "end": "512039"
  },
  {
    "text": "tunnelling it through the SSH connection. So there's lots of reasons why it was built this way.",
    "start": "512040",
    "end": "516259"
  },
  {
    "text": "But it's a nice feature, and I know I've been using this now for 20 odd years, 24 years probably now.",
    "start": "516260",
    "end": "524380"
  },
  {
    "text": "But actually you're still discovering new things you can do with it. For example",
    "start": "524380",
    "end": "528080"
  },
  {
    "text": "that you can keep a connection alive beyond when you've just disconnected from the shell",
    "start": "528080",
    "end": "533060"
  },
  {
    "text": "so they can reuse that TCP connection. The lower level bits, when you create a new connection on top.",
    "start": "533060",
    "end": "538980"
  }
]