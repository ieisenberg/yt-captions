[
  {
    "text": ">> Sean: Professor Brailsford! We are doing our series\non the most important things you can do in Computer ",
    "start": "0",
    "end": "5339"
  },
  {
    "text": "Science or something that, y'know, you couldn't \ndo without. So, what have you got for us today?",
    "start": "5339",
    "end": "9179"
  },
  {
    "text": ">> DFB: very well.  I think my most important\nthing - and we're going to sort of share this",
    "start": "9179",
    "end": "15360"
  },
  {
    "text": "discussion Steve Bagley and I - because I\nthink we are very much agreed that one of",
    "start": "15360",
    "end": "20910"
  },
  {
    "text": "the most powerful concepts, constructs, in\ncomputer science is just the idea of a pointer.",
    "start": "20910",
    "end": "26519"
  },
  {
    "text": "One of the uses of pointers that's\neasiest to understand is in linked lists.",
    "start": "26519",
    "end": "35940"
  },
  {
    "text": "We're going to use Lego to illustrate\nlinked lists. I know that some of you are",
    "start": "35940",
    "end": "41640"
  },
  {
    "text": "demon programmers and could take it if I\njust ran through a program with you, but",
    "start": "41640",
    "end": "46020"
  },
  {
    "text": "I think a lot of you, who are beginners,\nperhaps might appreciate having a more",
    "start": "46020",
    "end": "50629"
  },
  {
    "text": "pictorial introduction to linked lists.\nSo, at great mental expense, Sean and I have",
    "start": "50629",
    "end": "57360"
  },
  {
    "text": "developed a LEGO model of the linked lists\nwe want to talk about and we'll",
    "start": "57360",
    "end": "62370"
  },
  {
    "text": "gradually introduce the elements of this\nas we go along. Bbut the first thing to",
    "start": "62370",
    "end": "66118"
  },
  {
    "text": "say is that pointers are pieces of - I\ndon't know what they are in LEGO - ",
    "start": "66119",
    "end": "72060"
  },
  {
    "text": "firemen's hoses, or connectors, or\nwhatever they're called. That is a",
    "start": "72060",
    "end": "75630"
  },
  {
    "text": "pointer of some sort. In order to bring\nthis home and make it more concrete you've",
    "start": "75630",
    "end": "81180"
  },
  {
    "text": "got to say: \"Well, what are we linking\ntogether?\" And, once again, I mean this has",
    "start": "81180",
    "end": "87150"
  },
  {
    "text": "been referred to in Brian Kernighan's\nthing about Associative Arrays - he",
    "start": "87150",
    "end": "92790"
  },
  {
    "text": "pointed off to singly linked lists and\neach of the elements within these singly",
    "start": "92790",
    "end": "98040"
  },
  {
    "text": "linked lists contained a string. What I'm\ngoing to start with is, basically, a  piece",
    "start": "98040",
    "end": "103590"
  },
  {
    "text": "of Lego underneath a small section of C\ncoding! I'm going to go through this very",
    "start": "103590",
    "end": "110159"
  },
  {
    "text": "carefully and - those of you who aren't demon",
    "start": "110159",
    "end": "112500"
  },
  {
    "text": "programmers - don't get panicked about it.\nI'll try and go very slowly and explain to",
    "start": "112500",
    "end": "116670"
  },
  {
    "text": "you what's happening. This is what I am\ngoing to call a THING. Whenever you look",
    "start": "116670",
    "end": "122520"
  },
  {
    "text": "later on and say: \"What is that grey\nbaseplate doing - what does it signify?\"",
    "start": "122520",
    "end": "127129"
  },
  {
    "text": "`Grey base plate' means it's a THING. What\nare the components of a THING?",
    "start": "127129",
    "end": "132450"
  },
  {
    "text": "Well, a red box sitting on top of the THING \nholds a [pointer to] a string of characters, and",
    "start": "132450",
    "end": "137940"
  },
  {
    "text": "again we're going to follow up with the\nidea of things you might buy for a barbecue:",
    "start": "137940",
    "end": "141510"
  },
  {
    "text": "burgers,chips wine - stuff like\nthat. But because it's a singly-linked",
    "start": "141510",
    "end": "148620"
  },
  {
    "text": "list the other box sitting within the\nstructure is going to point off to the",
    "start": "148620",
    "end": "153989"
  },
  {
    "text": "next THING along in this singly-linked\nlist. If that's a THING then, the only bit",
    "start": "153989",
    "end": "159660"
  },
  {
    "text": "of programming I'm going to do today,\nhonest - this is it - is to just show you",
    "start": "159660",
    "end": "163470"
  },
  {
    "text": "how this would be declared in the C\nlanguage. I'm using a `typedef'",
    "start": "163470",
    "end": "168900"
  },
  {
    "text": "declaration because I just want to be\nable to use the shorthand of THING. A bit",
    "start": "168900",
    "end": "175439"
  },
  {
    "text": "like `int'. Instead of saying `int sean;'\n[where] `sean' is an integer and can",
    "start": "175440",
    "end": "179940"
  },
  {
    "text": "have contents. I just want to say: THING sean;\nBut in order to be able to ",
    "start": "179940",
    "end": "183569"
  },
  {
    "text": "make that abbreviation, and to cut the\nclutter a lot, I have to give what's",
    "start": "183569",
    "end": "188160"
  },
  {
    "text": "called a `typedef'. This is a definition of what\na structure of type THING really is. And",
    "start": "188160",
    "end": "192630"
  },
  {
    "text": "all it's saying, in here, if you look at it\nis `char *item'. Now, what that is",
    "start": "192630",
    "end": "198870"
  },
  {
    "text": "saying - this is again, those of you\nfamiliar with C will know - it's a",
    "start": "198870",
    "end": "202500"
  },
  {
    "text": "standard C way of saying: \"It's a pointer\nto a char apparently\". But actually they",
    "start": "202500",
    "end": "209549"
  },
  {
    "text": "cheat a bit because it's not just a\npointer to a single character, it can be",
    "start": "209549",
    "end": "213239"
  },
  {
    "text": "a pointer to a great long string of characters \n>> Sean: Does `char' mean character?\n>> DFB: `char'  is ",
    "start": "213239",
    "end": "217590"
  },
  {
    "text": "short for character, yes. Some people call it \n`car'; some people call it `char' but it's",
    "start": "217590",
    "end": "221970"
  },
  {
    "text": "basically ... if you point at the first\ncharacter in a string then you're pointing",
    "start": "221970",
    "end": "226109"
  },
  {
    "text": "at the whole thing because you just step along\nit sequentially. And here for the blue",
    "start": "226109",
    "end": "232079"
  },
  {
    "text": "box in my model I've got to say: \"Well how\ndo I point at the next THING along in my",
    "start": "232079",
    "end": "239069"
  },
  {
    "text": "list?\" Well, I hope you can see there's a\nsort of bit of recursion in the",
    "start": "239069",
    "end": "244139"
  },
  {
    "text": "definition here. But the compiler knows\nyou can do things like this and doesn't",
    "start": "244139",
    "end": "247980"
  },
  {
    "text": "panic. You've got a `struct _thing'\ninside here, referring back to this",
    "start": "247980",
    "end": "252450"
  },
  {
    "text": "`struct _thing'. What it's saying\nis that this THING I'm calling `next'",
    "start": "252450",
    "end": "257970"
  },
  {
    "text": "within the structure, is a pointer to the \nnext THING.",
    "start": "257970",
    "end": "263870"
  },
  {
    "text": "So what are these things known as then\n- this  `item' and `next'? They're called",
    "start": "263870",
    "end": "270080"
  },
  {
    "text": "`members' in C;  `next' is also a member. \nIn other languages you'll find these",
    "start": "270080",
    "end": "277129"
  },
  {
    "text": "\"internal identifiers\" - if you like -within a\nstructure, are called different things. I mean",
    "start": "277130",
    "end": "280700"
  },
  {
    "text": "in Algol68, where I started, they were\ncalled `fields' of the structure. Those are",
    "start": "280700",
    "end": "287180"
  },
  {
    "text": "just so that you can pick out the\ncomponents of your structure and",
    "start": "287180",
    "end": "291590"
  },
  {
    "text": "remember, the overall package of a\npointer to the next one; a red box which",
    "start": "291590",
    "end": "296810"
  },
  {
    "text": "means \"I can contain a string of\narbitrary size\", mount the whole thing up",
    "start": "296810",
    "end": "301760"
  },
  {
    "text": "on a piece of grey LEGO and the whole\nthing is a THING. We've got the basic",
    "start": "301760",
    "end": "306860"
  },
  {
    "text": "building block then of what we need to\nstart building together, linked lists. Now",
    "start": "306860",
    "end": "312159"
  },
  {
    "text": "some of you are going to say: \"Hey, come on,\nyou're glossing over actuality\".  Because",
    "start": "312160",
    "end": "317120"
  },
  {
    "text": "obviously this `next' member field is\ngoing to have a pointer in it to the",
    "start": "317120",
    "end": "323030"
  },
  {
    "text": "next one of these THINGs but you haven't\nsaid that inside the [item] string box you",
    "start": "323030",
    "end": "328760"
  },
  {
    "text": "can't just put a string inside an\naddress box - it might not be big enough",
    "start": "328760",
    "end": "334220"
  },
  {
    "text": "to hold \"supercalifragilisticexpialidocious\". \nYeah!",
    "start": "334220",
    "end": "338540"
  },
  {
    "text": "Quite right! Those of you `in the know' \nwill know that,",
    "start": "338540",
    "end": "340700"
  },
  {
    "text": "within this box that contains a string\nyou will have -  well it says so here - you",
    "start": "340700",
    "end": "347360"
  },
  {
    "text": "must create yourself enough space to\nhold the string and point at it. We draw",
    "start": "347360",
    "end": "352009"
  },
  {
    "text": "a veil over that for the moment. Just\nimagine that it doesn't matter what the",
    "start": "352010",
    "end": "355430"
  },
  {
    "text": "string is -- \"burgers\", \"zucchini\", whatever - \nwe can create enough space in the red box",
    "start": "355430",
    "end": "361220"
  },
  {
    "text": "to hold that string - make it identifiable.\nI'm going to put out the code for this",
    "start": "361220",
    "end": "365330"
  },
  {
    "text": "program, and any subsequent ones, in the\nusual way - available to you in C. I'll",
    "start": "365330",
    "end": "370220"
  },
  {
    "text": "try and get my indentation so it doesn't\nmake those are you care passionately about",
    "start": "370220",
    "end": "375530"
  },
  {
    "text": "these things .... Mind you, there'll\nbe Iindentation Wars. Some people will",
    "start": "375530",
    "end": "379760"
  },
  {
    "text": "love the way I've done it; other people\nwill hate it. But we'll live with that.",
    "start": "379760",
    "end": "383120"
  },
  {
    "text": "But yes, the idea of this, going through\nthis model, purely with LEGO is that if",
    "start": "383120",
    "end": "388490"
  },
  {
    "text": "you then get hold of the program, look\nback at the video, try and follow all the",
    "start": "388490",
    "end": "393229"
  },
  {
    "text": "things I'm doing and say: \"Well how does the",
    "start": "393230",
    "end": "395050"
  },
  {
    "text": "program do that?\"  And see if you can\nunderstand, as we go along. I wish in many",
    "start": "395050",
    "end": "400810"
  },
  {
    "text": "ways I'd thought about trying to do\nthis when I was teaching link-lists to",
    "start": "400810",
    "end": "406360"
  },
  {
    "text": "third-year undergrads. I think it might have\nhelped some of them who were very",
    "start": "406360",
    "end": "409090"
  },
  {
    "text": "pictorial in the way they wanted to look \nat things.",
    "start": "409090",
    "end": "411729"
  },
  {
    "text": "Once we've declared at the top of our C\nprogram that this whole thing is called",
    "start": "411729",
    "end": "416349"
  },
  {
    "text": "a THING, I can then say, later on in the\nprogram if I wanted to: `THING sean;' just",
    "start": "416349",
    "end": "422440"
  },
  {
    "text": "like saying `int sean;'  But this is a\nTHING.  OK we haven't filled in your",
    "start": "422440",
    "end": "426639"
  },
  {
    "text": "likes and dislikes Sean. What's your\nfavorite stuff at barbecue?\n>> Sean:  sausages.",
    "start": "426639",
    "end": "432699"
  },
  {
    "text": ">> DFB: Sausages!  So that, of course, is the\nbarbecue item that Sean likes best. Now",
    "start": "432699",
    "end": "437139"
  },
  {
    "text": "if I've named my THING which I have, and\ngiven this an identifier name, I can say",
    "start": "437139",
    "end": "442000"
  },
  {
    "text": "things like: `sean.item = \"sausages\";'\nAnd that works fine because if",
    "start": "442000",
    "end": "450370"
  },
  {
    "text": "you give an explicit string of\ncharacters in C it will, at compile time,",
    "start": "450370",
    "end": "456490"
  },
  {
    "text": "find the space to hold that for you. So\nthat should work OK. And there's also",
    "start": "456490",
    "end": "461620"
  },
  {
    "text": "no prizes for guessing that, perhaps for\ncleanliness, I ought to fill in what the",
    "start": "461620",
    "end": "466810"
  },
  {
    "text": "`next' field of `sean' is. And there is a\nstandard way of saying [that] it's the zero",
    "start": "466810",
    "end": "473469"
  },
  {
    "text": "pointer. It points nowhere!. It's called\nNIL [or] it's called NULL. It's not been filled in",
    "start": "473469",
    "end": "479560"
  },
  {
    "text": "yet but you've got to fill it in with\nsomething, so you fill it in with NULL.",
    "start": "479560",
    "end": "482949"
  },
  {
    "text": "A stage beyond that is to say `THING *p;'\nNow if you're happy that `char *item''",
    "start": "482949",
    "end": "489969"
  },
  {
    "text": "within the structure, means \"pointer to a\nstring of characters\" then it follows",
    "start": "489969",
    "end": "494889"
  },
  {
    "text": "that the type of p is `pointer to THING'.\nSo I haven't filled anything in here yet",
    "start": "494889",
    "end": "505080"
  },
  {
    "text": "This contains nothing, this box, but I\ncould overwrite it with a pointer to",
    "start": "505080",
    "end": "512039"
  },
  {
    "text": "`sean' if I wanted to do that.\nOK, so we will be developing, quite a",
    "start": "512039",
    "end": "518140"
  },
  {
    "text": "lot, the idea that we don't necessarily\ndeal always directly with THINGs. We",
    "start": "518140",
    "end": "524589"
  },
  {
    "text": "stand back one level and we\nuse pointers to THINGs. It makes good",
    "start": "524589",
    "end": "530110"
  },
  {
    "text": "sense, because within the list of\nstructures we're developing, as you know,",
    "start": "530110",
    "end": "535569"
  },
  {
    "text": "the `next' field is of type `pointer to a THING'.\nI guess at this stage, perhaps, to",
    "start": "535569",
    "end": "542050"
  },
  {
    "text": "make this a bit more concrete, we could\nturn our attention now over to the LEGO",
    "start": "542050",
    "end": "546069"
  },
  {
    "text": "and in that infuriating way that they do\non home-help or do-it-yourself programs on",
    "start": "546069",
    "end": "552220"
  },
  {
    "text": "TV, I'm going to say \"Here's one I\nprepared already :-) \" The idea in this",
    "start": "552220",
    "end": "556660"
  },
  {
    "text": "particular linked-list of barbecue items\nis that there are strings inside each of",
    "start": "556660",
    "end": "561878"
  },
  {
    "text": "these red boxes, as we've discussed, and\nthese strings of characters correspond",
    "start": "561879",
    "end": "566649"
  },
  {
    "text": "to things you might want on the barbecue.\nBut we are so neat and tidy we want to",
    "start": "566649",
    "end": "571029"
  },
  {
    "text": "keep these in alphabetical order, so look\nat this: the string content in that red",
    "start": "571029",
    "end": "575438"
  },
  {
    "text": "box says \"beer\" \"chips\" \"pizza\" \"slaw\" \"wine\". So\ndon't forget these are the contents of",
    "start": "575439",
    "end": "582550"
  },
  {
    "text": "the boxes. The member name of each box is\nalways the same. It's always the `item' part of",
    "start": "582550",
    "end": "588308"
  },
  {
    "text": "the particular thing you're on at the\nmoment. And the pointer here is the `next'",
    "start": "588309",
    "end": "592930"
  },
  {
    "text": "part of that block. But it's all\nbeautifully set up, look, every one of",
    "start": "592930",
    "end": "597279"
  },
  {
    "text": "your `next' boxes really does point to the\nstart address of the next THING. All the",
    "start": "597279",
    "end": "601839"
  },
  {
    "text": "way down they're all in alphabetical\norder. But the one aspect we didn't",
    "start": "601839",
    "end": "607329"
  },
  {
    "text": "mention, which is vital, is that you must\nset up a pointer to the head of the",
    "start": "607329",
    "end": "613839"
  },
  {
    "text": "linked list. If you don't have that you\ncan't reference anything. What we're",
    "start": "613839",
    "end": "617980"
  },
  {
    "text": "saying here is, it's not part of linked\nlist processing in general to give each",
    "start": "617980",
    "end": "622269"
  },
  {
    "text": "of these THING structures its own [identifier] name.\nI mean I could call them Sean,",
    "start": "622269",
    "end": "627610"
  },
  {
    "text": "Dave, Steve, Mike and Robert, or something\nlike that. But no, life's too short, I'd run",
    "start": "627610",
    "end": "634420"
  },
  {
    "text": "out of names. No, keep them all in order\nbut just retain one pointer that tells",
    "start": "634420",
    "end": "641170"
  },
  {
    "text": "you what is the lead item in there.\nSo, this start pointer. Look at the colour",
    "start": "641170",
    "end": "646990"
  },
  {
    "text": "coding. It's blue. So it's a `THING *', or\nas we used to say in Algol68, it's a `reference",
    "start": "646990",
    "end": "653259"
  },
  {
    "text": "to a THING. You jump onto the pointer at\nthe start address of the THING. ",
    "start": "653259",
    "end": "658509"
  },
  {
    "text": "And inside that you can say give me the \n`item', give me the",
    "start": "658509",
    "end": "663550"
  },
  {
    "text": "`next' and so on. But the big question now\nis - it's all beautiful - but suppose",
    "start": "663550",
    "end": "669720"
  },
  {
    "text": "actually I was told to get some burgers\nbut they didn't have them available at",
    "start": "669720",
    "end": "675069"
  },
  {
    "text": "the first supermarket I went in.  So I had\nto go somewhere else and get some",
    "start": "675070",
    "end": "678910"
  },
  {
    "text": "burgers and unfortunately Brian or Sean\nhas made this list up already. So",
    "start": "678910",
    "end": "684389"
  },
  {
    "text": "determinaedly keeping it alphabetic, if I\nprepare over here a new THING with",
    "start": "684390",
    "end": "691690"
  },
  {
    "text": "\"burgers\" ready to be put in, how do I\ntraverse down this list, find out where",
    "start": "691690",
    "end": "699310"
  },
  {
    "text": "it belongs, alphabetically? And get it to\nwork so that I can fiddle with the",
    "start": "699310",
    "end": "704589"
  },
  {
    "text": "pointers and link it in?  [A] quick check will\nshow you that \"burgers\" belongs after \"beer\"",
    "start": "704589",
    "end": "709810"
  },
  {
    "text": "but before \"chips\". Therefore what you need\nis a probe to look inside each of these",
    "start": "709810",
    "end": "715240"
  },
  {
    "text": "structures and to tell you what is\ninside there in terms ofn the `item' field.",
    "start": "715240",
    "end": "721480"
  },
  {
    "text": "Now I can't use `start' as the probe.\nIf I move that away from the head of the",
    "start": "721480",
    "end": "725410"
  },
  {
    "text": "list I'm sunk. I'll never find that\nwretched list ever again. You mustn't use",
    "start": "725410",
    "end": "730060"
  },
  {
    "text": "start as your roving pointer! But what I\ncan do - just like the thing called `p' I",
    "start": "730060",
    "end": "735790"
  },
  {
    "text": "developed - let's call this `p' - for the \n[roving] pointer. If I first of all copy \nover the contents",
    "start": "735790",
    "end": "742120"
  },
  {
    "text": "of `start' into `p', which is also of type\n`reference to THING' then I hope you'll all",
    "start": "742120",
    "end": "748420"
  },
  {
    "text": "agree that what will happen is I've now got\nthis THING * called `p' which is pointing at",
    "start": "748420",
    "end": "753820"
  },
  {
    "text": "exactly the same structure, at the head\nof the list, as `start' is. So hope I've",
    "start": "753820",
    "end": "760209"
  },
  {
    "text": "got enough finger-power here to do it. There you\ngo! You start with `p', up here, and you say:",
    "start": "760209",
    "end": "764800"
  },
  {
    "text": "\"What's the `item' within that THING I'm\npointing at now? It says \"beer\". So, \"burgers\"",
    "start": "764800",
    "end": "771130"
  },
  {
    "text": "goes after \"beer\" then move that from\nthere to there and use it as a probe to",
    "start": "771130",
    "end": "776860"
  },
  {
    "text": "ask what is the `item' entry in that one? \"chips\" !\nAagh! it needs to be earlier than \"chips\" ! So, you can see",
    "start": "776860",
    "end": "784720"
  },
  {
    "text": "here you've got a bit of a problem with\na singly-linked list; if you move the",
    "start": "784720",
    "end": "789790"
  },
  {
    "text": "pointer too far you end up with \"chips\".\nBut you say:",
    "start": "789790",
    "end": "793930"
  },
  {
    "text": "\"Ah! but I want to insert it before \"chips\" \nbut after \"beer\". I want to be back at this",
    "start": "793930",
    "end": "799839"
  },
  {
    "text": "address\". So what I'm saying is it's\nperfectly possible to do it. You've got to",
    "start": "799839",
    "end": "804880"
  },
  {
    "text": "be very careful. You've got to come in.\nyou've got to say :\"That one's beer\". ",
    "start": "804880",
    "end": "808630"
  },
  {
    "text": "Then you've very carefully got to take a look at\nthis `next' field and say: \"Should I follow",
    "start": "808630",
    "end": "813550"
  },
  {
    "text": "that pointer and see what's in the `next'\nblue box?\" You can do that, it's fine, but be",
    "start": "813550",
    "end": "819550"
  },
  {
    "text": "so careful that it doesn't contain NIL / NULL.\nIt could be a very short list. It",
    "start": "819550",
    "end": "825640"
  },
  {
    "text": "could be that there's only one item in it.",
    "start": "825640",
    "end": "827380"
  },
  {
    "text": "And right down at the bottom here - this\nthing that looks like something from",
    "start": "827380",
    "end": "830290"
  },
  {
    "text": "Angry Birds - denotes NULL. and if you \nstart trying to follow the NULL pointer",
    "start": "830290",
    "end": "835060"
  },
  {
    "text": "your program will go \"bang\" and will say:\nSegmentation Violation. Well, that's fine,",
    "start": "835060",
    "end": "839649"
  },
  {
    "text": "but it needs some careful programming.\nBut it can be done and I will give you a",
    "start": "839649",
    "end": "843220"
  },
  {
    "text": "solution that does it,just that way. Next\nthing you've got to sort of say to",
    "start": "843220",
    "end": "847629"
  },
  {
    "text": "yourself though is: \"When I've found where I\nwant to be how do I bind in the new",
    "start": "847630",
    "end": "853810"
  },
  {
    "text": "THING?\" Well, the actual construction process, \nif you like, of putting in the new THING,",
    "start": "853810",
    "end": "859720"
  },
  {
    "text": "once you've discovered that \"burgers\"\nneeds to go in here somewhere,",
    "start": "859720",
    "end": "864069"
  },
  {
    "text": "is to do this: you've got to - we'll use an\nextra long pointer here which points to",
    "start": "864070",
    "end": "870850"
  },
  {
    "text": "our newly created thing, and we are\nthen going to take the old pointer that",
    "start": "870850",
    "end": "878139"
  },
  {
    "text": "was in there and put it as going from\nhere to here. So, look, we've done it! We go",
    "start": "878140",
    "end": "885640"
  },
  {
    "text": "\"beer\" follow the pointer to a THING\nthat's got \"burgers\" - let's move that out",
    "start": "885640",
    "end": "891310"
  },
  {
    "text": "of the way - follow the pointer to a THING\nthat's called \"chips\". So, we've inserted",
    "start": "891310",
    "end": "895540"
  },
  {
    "text": "\"burgers\". So it's just pointer\nmanipulation once you've discovered",
    "start": "895540",
    "end": "898630"
  },
  {
    "text": "where you are. What you need in this - and\nit's really frustrating -",
    "start": "898630",
    "end": "903760"
  },
  {
    "text": "you need to keep your finger in two\nplaces - or you need two fingers - let's put",
    "start": "903760",
    "end": "907060"
  },
  {
    "text": "it that way. You want to remember the one\nyou just looked at; you want to take a",
    "start": "907060",
    "end": "910899"
  },
  {
    "text": "look at the next one and say: \"Yes, it's in-\nbetween those two. We've done it we've",
    "start": "910899",
    "end": "915579"
  },
  {
    "text": "patched in our new THING for \"burgers\". So,\nlet me just sort of summarize some of",
    "start": "915579",
    "end": "919779"
  },
  {
    "text": "the problems. Obsessively keep\nchecking for NULL- obsessively. If you",
    "start": "919779",
    "end": "924880"
  },
  {
    "text": "dereference that- BANG! - you're dead.\nAnd that brings into",
    "start": "924880",
    "end": "928699"
  },
  {
    "text": "question certain special cases. What\nhappens if I want to insert something at",
    "start": "928699",
    "end": "933709"
  },
  {
    "text": "the end of a list where NULL is parked\nthere already? I've got to be very",
    "start": "933709",
    "end": "938329"
  },
  {
    "text": "careful there. Suppose I wanted put\n\"zucchini\",  or something, in at the bottom",
    "start": "938329",
    "end": "942589"
  },
  {
    "text": "below \"wine\"? That might be a problem. Even\nworse problem, potentially, might be if I",
    "start": "942589",
    "end": "949369"
  },
  {
    "text": "wanted to put something in at the head\nof the list - ahead of what's there already?",
    "start": "949369",
    "end": "955429"
  },
  {
    "text": "I mean, under those circumstances what\nyou'd be saying is: \"Something beginning",
    "start": "955429",
    "end": "959660"
  },
  {
    "text": "with `a' Sean? \"avocado\" to make guacamole\nwith?\" If we want to put \"avocado\" here then",
    "start": "959660",
    "end": "965660"
  },
  {
    "text": "what you will have to do is to create a\nnew THING there and move that to point at",
    "start": "965660",
    "end": "972949"
  },
  {
    "text": "\"avocado\" and then make \"avocado\"s link\npoint at that one.  So this is \"avocado\"",
    "start": "972949",
    "end": "978769"
  },
  {
    "text": "that would be start of your list now and you'd\nhave an internal one [a pointer] to complete it,",
    "start": "978769",
    "end": "986360"
  },
  {
    "text": "going from here to here. Now here is a\nbig problem because you'd better get",
    "start": "986360",
    "end": "991549"
  },
  {
    "text": "this right, because notice you have\nactually altered `start'. What I was saying,",
    "start": "991549",
    "end": "998389"
  },
  {
    "text": "all along, was be careful with `start'.\nIt's your pointer to the head of the",
    "start": "998389",
    "end": "1001360"
  },
  {
    "text": "list. But if you get something like\n\"avocado\" that has to be the new head of",
    "start": "1001360",
    "end": "1005949"
  },
  {
    "text": "the list then you must make sure that\nthe `start' pointer gets updated. Another",
    "start": "1005949",
    "end": "1010569"
  },
  {
    "text": "special case that's got to be put in\nyour code. So, be obsessive about checking",
    "start": "1010569",
    "end": "1015279"
  },
  {
    "text": "for NULL. Can you cope with things\ninserted at the head, the very start of",
    "start": "1015279",
    "end": "1019959"
  },
  {
    "text": "the list? Can you cope with\nputting \"zucchini\" at the end? Is it all",
    "start": "1019959",
    "end": "1025778"
  },
  {
    "text": "nice and clean? You'll see, in the\nsolution I gave you that there has to be",
    "start": "1025779",
    "end": "1029709"
  },
  {
    "text": "a lot of special-case checking to get\nall of this right. But, on the other hand,",
    "start": "1029709",
    "end": "1035408"
  },
  {
    "text": "you can make it work.\nBut you will in general need some sort",
    "start": "1035409",
    "end": "1040209"
  },
  {
    "text": "of roving pointer, or pointers, moving\ndown the list to check what you're",
    "start": "1040209",
    "end": "1045038"
  },
  {
    "text": "pointing at and what the next one is. Now\nif you look at that code and say: \"Oh! it's",
    "start": "1045039",
    "end": "1050408"
  },
  {
    "text": "yukky - it's horrible - can't you do any\nbetter than that?\"",
    "start": "1050409",
    "end": "1053560"
  },
  {
    "text": "It's not easy! However, there is a top-\nsecret trick, which actually makes it so",
    "start": "1053560",
    "end": "1062390"
  },
  {
    "text": "much easier to do that. It'll have to be a\nseparate video. Sorry to leave you with",
    "start": "1062390",
    "end": "1067430"
  },
  {
    "text": "cliffhangers folks but it's becoming\nalmost a \"Computerphile\" tradition now,",
    "start": "1067430",
    "end": "1071390"
  },
  {
    "text": "isn't it?!  So, what would make life a lot easier",
    "start": "1071390",
    "end": "1073850"
  },
  {
    "text": "is instead of just having THING *, I mean we\ncan't do away with it -- we've got it.",
    "start": "1073850",
    "end": "1077690"
  },
  {
    "text": "But you know it's a blue thing. It points\nto a structure of type THING  - is if we",
    "start": "1077690",
    "end": "1083600"
  },
  {
    "text": "introduce the concept of a pointer to a\npointer to a THING and this is what a",
    "start": "1083600",
    "end": "1094610"
  },
  {
    "text": "green box signifies. I've got some extra\nlong linkage here. I'm going to put that",
    "start": "1094610",
    "end": "1102500"
  },
  {
    "text": "on there. So I hope you're all happy\nbecause this is really doing type theory",
    "start": "1102500",
    "end": "1108860"
  },
  {
    "text": "- elementary type theory - in a way that\nwould make my functional colleagues",
    "start": "1108860",
    "end": "1112940"
  },
  {
    "text": "blench, but I'll try not to say anything\ntoo obviously untrue. You'll have to",
    "start": "1112940",
    "end": "1118580"
  },
  {
    "text": "agree with me that if the contents of a\nblue box is a `reference to a THING' then",
    "start": "1118580",
    "end": "1124610"
  },
  {
    "text": "if you step one beyond it you're\nreferring to a ref THING, or the THING *,",
    "start": "1124610",
    "end": "1130820"
  },
  {
    "text": "or whatever. So the contents of the\ngreen box would be a ref ref thing, or in",
    "start": "1130820",
    "end": "1139220"
  },
  {
    "text": "C notation a THING **. Assemblerr\nprogrammers among you may say: \"Oh! come ",
    "start": "1139220",
    "end": "1146210"
  },
  {
    "text": "on this is just type-safe nonsense.\nThey're all pointers - just mess about",
    "start": "1146210",
    "end": "1151010"
  },
  {
    "text": "with them, do what you want with them, and\ndon't make any mistakes!\"",
    "start": "1151010",
    "end": "1153800"
  },
  {
    "text": "Now what I like about C is it's a nice\nhalf-way house. It gives you a bit of",
    "start": "1153800",
    "end": "1159100"
  },
  {
    "text": "type-safe capability. It does distinguish\nbetween a pointer to a THING and a",
    "start": "1159100",
    "end": "1164809"
  },
  {
    "text": "pointer to a pointer to a THING and\nmakes you very carefully get the level",
    "start": "1164810",
    "end": "1170090"
  },
  {
    "text": "of your pointing correct. But what can\nbe revealed in the future is that that",
    "start": "1170090",
    "end": "1175490"
  },
  {
    "text": "simple trick, of this [green] thing containing a\npointer to a pointer, can solve a huge number of problems.",
    "start": "1175490",
    "end": "1180620"
  }
]