[
  {
    "text": "We're going to look at an example of property based testing. [I'm] going to show quick check",
    "start": "0",
    "end": "3570"
  },
  {
    "text": "Which is the tools [I] work with and the idea here is your test software",
    "start": "3570",
    "end": "7710"
  },
  {
    "text": "And that's very important to get software right?",
    "start": "8380",
    "end": "10979"
  },
  {
    "text": "But thinking out all of the cases that you want to test is not something that is very popular with software developers actually",
    "start": "11360",
    "end": "19180"
  },
  {
    "text": "And so [are] it's often not really done as thoroughly as you would like",
    "start": "19540",
    "end": "23940"
  },
  {
    "text": "And what I'm going to show you is a tool that we can use for generating tests so that instead of running?",
    "start": "24280",
    "end": "30510"
  },
  {
    "text": "Maybe you know a few dozen tests. You make up by hand",
    "start": "30510",
    "end": "33540"
  },
  {
    "text": "[we] can run hundreds of thousands or millions and get much more confidence [for] [the] software really behaves the way that we wanted to",
    "start": "33730",
    "end": "40320"
  },
  {
    "text": "Temple which is going to test that text message encoding, so this is actually a part of the 2g",
    "start": "44420",
    "end": "50149"
  },
  {
    "text": "[11th] Standard, so it's got old [but] then",
    "start": "51120",
    "end": "53839"
  },
  {
    "text": "[I] [think] we'll introduce text messaging that they were just making you for some spare bits that within the packages",
    "start": "54600",
    "end": "60229"
  },
  {
    "text": "And they wanted to fit as many characters they could into a text message",
    "start": "60869",
    "end": "64489"
  },
  {
    "text": "And there's only so much space so they realized that they only needed seven bits per character [from] so that [we] decided to use",
    "start": "64890",
    "end": "71899"
  },
  {
    "text": "But when you put those seven, [but] characters into the messages you have to fit into 8-bit byte",
    "start": "72149",
    "end": "77239"
  },
  {
    "text": "And that means that you can fit eight characters in 27 bites",
    "start": "77240",
    "end": "81379"
  },
  {
    "text": "So of course the standard says you must do that, and that means the way you have a message",
    "start": "81479",
    "end": "86059"
  },
  {
    "text": "[you] [want] to send you have to encode it by packing [a] [bit] closer together?",
    "start": "86060",
    "end": "89689"
  },
  {
    "text": "And when you receive it you have to decode it and here",
    "start": "89909",
    "end": "93108"
  },
  {
    "text": "I've got back some code that came from the company in France does that ankle Candy coating so let me just start by",
    "start": "93110",
    "end": "99110"
  },
  {
    "text": "Showing the code that we got so here it is. This is that line code?",
    "start": "99179",
    "end": "102439"
  },
  {
    "text": "and",
    "start": "102959",
    "end": "103979"
  },
  {
    "text": "This is the code for packing characters. You can see there's plenty of it",
    "start": "103979",
    "end": "108647"
  },
  {
    "text": "This is it comes from unpacking them again, and there's plenty of that",
    "start": "109289",
    "end": "112969"
  },
  {
    "text": "And we're not going to look in detail at this",
    "start": "113039",
    "end": "115039"
  },
  {
    "text": "The only thing I want to point out is that a lot of code and it's complex",
    "start": "115219",
    "end": "118069"
  },
  {
    "text": "So it's quite easy to imagine that they might be an error in there",
    "start": "118320",
    "end": "121009"
  },
  {
    "text": "So course we need test that",
    "start": "122310",
    "end": "124310"
  },
  {
    "text": "And down here we have some test code and what it does is it says well. Let's just take a sample message",
    "start": "124439",
    "end": "130518"
  },
  {
    "text": "Let's try",
    "start": "131120",
    "end": "132000"
  },
  {
    "text": "[backing] it",
    "start": "132000",
    "end": "133350"
  },
  {
    "text": "And then unpacking it and what it will call that tea and at the end of the day what we get after unpacking",
    "start": "133350",
    "end": "138649"
  },
  {
    "text": "must be the same as the message to be started off with",
    "start": "138900",
    "end": "141500"
  },
  {
    "text": "and then there's a little test suite here that says just try that for a number of different strings and with",
    "start": "142049",
    "end": "148308"
  },
  {
    "text": "Somebody thought about this little bit and they tried all left that message from 0 to 10, so yeah",
    "start": "148500",
    "end": "153739"
  },
  {
    "text": "Hopefully it works for these [strings] that will work in general what we can do now is just don't compile a program",
    "start": "153750",
    "end": "160009"
  },
  {
    "text": "[just] done and now I can run that test code [I] do so",
    "start": "160620",
    "end": "163970"
  },
  {
    "text": "Then we get [them] [out] [put] all of the [task] [past]. That's good it seems to work",
    "start": "164489",
    "end": "169489"
  },
  {
    "text": "But of course what always demonstrated is it [works] for these particular ten strings, so you might wonder?",
    "start": "171090",
    "end": "175909"
  },
  {
    "text": "if we give it another message, is there a risk that the code won't actually work as we expect, so",
    "start": "176550",
    "end": "181949"
  },
  {
    "text": "That gives us a chance to use a test generation tool",
    "start": "182710",
    "end": "185879"
  },
  {
    "text": "and when we use quick check",
    "start": "186310",
    "end": "188310"
  },
  {
    "text": "I go back to code here actually have what we call it quick check property that is the way that we",
    "start": "188550",
    "end": "193290"
  },
  {
    "text": "Write tests with property based testing we want something that's supposed to be true in general of our code here",
    "start": "193540",
    "end": "199499"
  },
  {
    "text": "[I'm] saying for all messages or msGS not",
    "start": "199500",
    "end": "202080"
  },
  {
    "text": "Just pretend that test which our list of [7th] values",
    "start": "202180",
    "end": "206760"
  },
  {
    "text": "So they're made of the 7th character",
    "start": "206760",
    "end": "208760"
  },
  {
    "text": "Then if I pack that message and one packet [I] should get the best",
    "start": "208960",
    "end": "213689"
  },
  {
    "text": "Off with that says the same thing [as] the test [I] had before but it says it in general",
    "start": "213760",
    "end": "218368"
  },
  {
    "text": "And that means that now I can use quick check to generate many tests [are] like and make sure that [coastal] works",
    "start": "218560",
    "end": "225929"
  },
  {
    "text": "[let] me go back to my test execution window here, and I will just use quick check",
    "start": "226510",
    "end": "233099"
  },
  {
    "text": "Call it and I'll give it that [property] that. I just showed an argument and we'll see what happened",
    "start": "233740",
    "end": "240329"
  },
  {
    "text": "well",
    "start": "241239",
    "end": "242650"
  },
  {
    "text": "After only a little more than a hundred test quick found an example in which the [prophet] doesn't hold and what you see here is",
    "start": "242650",
    "end": "250590"
  },
  {
    "text": "first of all a randomly generated message",
    "start": "251140",
    "end": "254000"
  },
  {
    "text": "It's a sequence of bytes which appears numbers here",
    "start": "254850",
    "end": "257549"
  },
  {
    "text": "You can think of it as a message, and that message was not packed and unpacked correctly",
    "start": "257549",
    "end": "262769"
  },
  {
    "text": "So after finding a random example like this quick goes on to simplify the [same] case as much as we can",
    "start": "263350",
    "end": "269399"
  },
  {
    "text": "And we end up with this message. Which is just eight zeros",
    "start": "269800",
    "end": "274650"
  },
  {
    "text": "So why does [quickcheck] say the problem occurs with eight zeros and not for example 70?",
    "start": "274690",
    "end": "281010"
  },
  {
    "text": "well",
    "start": "281740",
    "end": "283060"
  },
  {
    "text": "because if you have 70 still works",
    "start": "283060",
    "end": "285330"
  },
  {
    "text": "So this is the smallest example that doesn't work",
    "start": "286350",
    "end": "289049"
  },
  {
    "text": "and if I think which again",
    "start": "289750",
    "end": "291750"
  },
  {
    "text": "You see that it starts off finding a different random example, but when it simplifies the test case we get the same",
    "start": "292210",
    "end": "299639"
  },
  {
    "text": "80 [this] is one of the key things about this kind of property based testing you always get",
    "start": "300460",
    "end": "305548"
  },
  {
    "text": "The simplest case because you know it's the simplest that tells you a lot about what the problem might be",
    "start": "305860",
    "end": "310508"
  },
  {
    "text": "[okay], so it seems to be something to do with being a characters long. So maybe it works for all other [lengths]",
    "start": "311719",
    "end": "319509"
  },
  {
    "text": "What I can do is I can",
    "start": "320719",
    "end": "322430"
  },
  {
    "text": "investigate when the coattails now by changing my property",
    "start": "322430",
    "end": "325810"
  },
  {
    "text": "So if I go back to the property out here at [the] what it says for every list of seven that bike",
    "start": "326419",
    "end": "331989"
  },
  {
    "text": "Packing unpacking [gives] [us] [a] result now. I'm going to add identification. [I'm] going to say for every list of seven bit byte",
    "start": "332240",
    "end": "339518"
  },
  {
    "text": "Provided the length of the message is not [ate]",
    "start": "340159",
    "end": "342999"
  },
  {
    "text": "That should work, [so] my hypothesis is that the length of eight characters problem? Let's just test now",
    "start": "343610",
    "end": "349930"
  },
  {
    "text": "messages of other lands",
    "start": "350479",
    "end": "352069"
  },
  {
    "text": "[I] do that. [I] just recompile test code and rerun could check",
    "start": "352069",
    "end": "355959"
  },
  {
    "text": "Now [two] [thousand] [tests] passed. So maybe I was right. I'll just run a few more tests. Which I can do five",
    "start": "357289",
    "end": "364718"
  },
  {
    "text": "[growing] test let's say 10 seconds",
    "start": "365930",
    "end": "367930"
  },
  {
    "text": "[There] Are [0]",
    "start": "370219",
    "end": "372219"
  },
  {
    "text": "It still doesn't work",
    "start": "372440",
    "end": "374120"
  },
  {
    "text": "So now we find another example. [we're] packing and unpacking",
    "start": "374120",
    "end": "377199"
  },
  {
    "text": "Failed this is actually consists of 16 zeros",
    "start": "377779",
    "end": "381189"
  },
  {
    "text": "So maybe it's not just being of length [8] that matters may be any multiple of 8 is also the case that I fail",
    "start": "381860",
    "end": "388569"
  },
  {
    "text": "But let's investigate that [I] can go back to my property and I can change it to say that",
    "start": "389569",
    "end": "394688"
  },
  {
    "text": "provided the length",
    "start": "395750",
    "end": "397339"
  },
  {
    "text": "Is not a multiple of 8 that's what that means then packing and unpacking the message should give me the same result back",
    "start": "397339",
    "end": "403719"
  },
  {
    "text": "and if I",
    "start": "404330",
    "end": "405888"
  },
  {
    "text": "We can buy that and run the test again",
    "start": "405889",
    "end": "407889"
  },
  {
    "text": "Now quick check is",
    "start": "408490",
    "end": "410360"
  },
  {
    "text": "Discarding some tests [with] the crosses mean so running lost every [dollar] [is] a passing tests or by now for [Dr.]",
    "start": "410360",
    "end": "416500"
  },
  {
    "text": "10,000 passing [test] the cross is a test that",
    "start": "416539",
    "end": "419109"
  },
  {
    "text": "Where a multiple of 8 quick check is not found failing case after a hundred ninety-five thousand tests so that suggests that we're right",
    "start": "419360",
    "end": "426638"
  },
  {
    "text": "But as long as the lens isn't a multiple of 8 then",
    "start": "427250",
    "end": "430089"
  },
  {
    "text": "Code works",
    "start": "431210",
    "end": "433210"
  },
  {
    "text": "But I can also investigate the problem more closely [I] know",
    "start": "433230",
    "end": "436159"
  },
  {
    "text": "When the test is when the messages of multiple date then the constant of sales",
    "start": "436680",
    "end": "441500"
  },
  {
    "text": "but doesn't always [sale] let me go back to my property and I'll just",
    "start": "441500",
    "end": "445489"
  },
  {
    "text": "Take that out for truth and said we got nothing",
    "start": "446070",
    "end": "448820"
  },
  {
    "text": "Instead of generating any listed as a message",
    "start": "449400",
    "end": "452360"
  },
  {
    "text": "[I'll] just generate list of 98 and I was focusing testing on the case on suspicious of",
    "start": "452360",
    "end": "457550"
  },
  {
    "text": "[its] every message of Mentaiko drawing. Let's find out",
    "start": "459300",
    "end": "462379"
  },
  {
    "text": "[I'll] run these tests [that] everybody's hands and fate",
    "start": "463080",
    "end": "466008"
  },
  {
    "text": "And what you know some of them passed [38s] past obviously many things are correctly encoded",
    "start": "466710",
    "end": "472999"
  },
  {
    "text": "But this example is not found, or [is] this example now?",
    "start": "473220",
    "end": "477110"
  },
  {
    "text": "I want to look at the random example that failed",
    "start": "477110",
    "end": "478849"
  },
  {
    "text": "And [that's] that's [a] few more of them",
    "start": "478850",
    "end": "480180"
  },
  {
    "text": "one of the nice things about",
    "start": "480180",
    "end": "481350"
  },
  {
    "text": "Generating tests as you can see a lot of different examples of the same thing so is there anything in common between that first example",
    "start": "481350",
    "end": "487670"
  },
  {
    "text": "This other one can see that full of different values of numbers those are all different wait a minute. [look] at the last number there",
    "start": "488040",
    "end": "495860"
  },
  {
    "text": "[and] the last one here left one here. They all end in 0",
    "start": "496470",
    "end": "500570"
  },
  {
    "text": "[that's] very unlikely to happen by chance",
    "start": "501270",
    "end": "503988"
  },
  {
    "text": "so maybe the code works unless",
    "start": "505620",
    "end": "508850"
  },
  {
    "text": "the messages of multiple of 8 in length and the Last character 0",
    "start": "510450",
    "end": "514160"
  },
  {
    "text": "[let's] test that hypothesis. [I'll] just change this still [to] runtastic [Wednesday] put to say",
    "start": "514830",
    "end": "520280"
  },
  {
    "text": "provided the last character of the message",
    "start": "521219",
    "end": "524119"
  },
  {
    "text": "Is not 0 then the coach should work [ok]?",
    "start": "524910",
    "end": "528048"
  },
  {
    "text": "So am I right in my postures let's find out",
    "start": "528840",
    "end": "531919"
  },
  {
    "text": "Whoa [now] all of the test statistic?",
    "start": "534600",
    "end": "537410"
  },
  {
    "text": "And after 10 seconds, we'll see we run to [continue] two thousand tests without a 0 in the last position",
    "start": "538860",
    "end": "545899"
  },
  {
    "text": "[they] all passed",
    "start": "546420",
    "end": "548310"
  },
  {
    "text": "So that strong evidence that the hypothesis right [okay]?",
    "start": "548310",
    "end": "551650"
  },
  {
    "text": "So now without even looking at complicated code. We understand the problem very well",
    "start": "553470",
    "end": "558540"
  },
  {
    "text": "We know it happens when the messages of multiple date. We know that happens when the last character [0]",
    "start": "558940",
    "end": "564450"
  },
  {
    "text": "And if we think about it, we can actually understand. Why this is happening",
    "start": "565180",
    "end": "568289"
  },
  {
    "text": "When we pack a number of characters in two bites?",
    "start": "569380",
    "end": "572510"
  },
  {
    "text": "They're always going to be some bits left over",
    "start": "573600",
    "end": "575600"
  },
  {
    "text": "What happens if we pack 7 characters in 27 bites?",
    "start": "576400",
    "end": "580740"
  },
  {
    "text": "[what] happens is that there are seven bits left over?",
    "start": "581680",
    "end": "584609"
  },
  {
    "text": "70 bits",
    "start": "586480",
    "end": "588010"
  },
  {
    "text": "that looks very like",
    "start": "588010",
    "end": "590010"
  },
  {
    "text": "Eight characters where the last 10 [and] that's the problem",
    "start": "590470",
    "end": "594569"
  },
  {
    "text": "it's a problem in the standard [car] distinguish between",
    "start": "595180",
    "end": "598409"
  },
  {
    "text": "A message that contains eight characters with zero at the end as a message to [just] [contains] the first seven",
    "start": "598900",
    "end": "605459"
  },
  {
    "text": "And it's a known problem. So there's nothing found it except I suggest not putting their characters in your messages",
    "start": "606610",
    "end": "614279"
  },
  {
    "text": "We realized that we were all working with very much the same kind of programming language",
    "start": "618520",
    "end": "623559"
  },
  {
    "text": "But because we each had our own combiner. We couldn't share any [cooked]",
    "start": "624140",
    "end": "627790"
  },
  {
    "text": "We couldn't share our results",
    "start": "627790",
    "end": "629480"
  },
  {
    "text": "And that just like a waste of effort so that led to the proposal to just",
    "start": "629480",
    "end": "635259"
  },
  {
    "text": "Take the common core of what we're all doing",
    "start": "635630",
    "end": "637840"
  }
]