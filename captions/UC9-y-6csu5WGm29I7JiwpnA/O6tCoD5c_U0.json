[
  {
    "text": "okay, BGP is the border Gateway protocol, and it's, it's a routing protocol that evolved in the internet and",
    "start": "30",
    "end": "7949"
  },
  {
    "text": "It's, you can think of it as kind of the the top of the food chain in terms of routing in the internet",
    "start": "8679",
    "end": "13979"
  },
  {
    "text": "It's the it's the protocol that's used to connect the",
    "start": "13980",
    "end": "17310"
  },
  {
    "text": "Service providers let's say primarily in the internet, so how does AT&T exchange",
    "start": "18640",
    "end": "24449"
  },
  {
    "text": "reachability information with bt with France telecom with you know and they have to exchange",
    "start": "25510",
    "end": "31559"
  },
  {
    "text": "This kind of reach ability information, so that we can glue that these",
    "start": "31960",
    "end": "35610"
  },
  {
    "text": "Autonomous Networks together",
    "start": "36190",
    "end": "38190"
  },
  {
    "text": "Because there is no one there is no centralized control in the internet you know so bt",
    "start": "38680",
    "end": "44819"
  },
  {
    "text": "Controls its equipment",
    "start": "45460",
    "end": "46620"
  },
  {
    "text": "And it's part of the internet",
    "start": "46620",
    "end": "48030"
  },
  {
    "text": "But AT&T controls its part of its own part of the internet and they have to interoperate somehow they have to be able to",
    "start": "48030",
    "end": "55019"
  },
  {
    "text": "Exchange information about the IP addresses associated with their customers and Etc",
    "start": "56469",
    "end": "62009"
  },
  {
    "text": "So the border Gateway protocol BGP is this protocol that has",
    "start": "65590",
    "end": "69250"
  },
  {
    "text": "evolved to handle that job, right, to exchange",
    "start": "69770",
    "end": "73898"
  },
  {
    "text": "information between",
    "start": "75200",
    "end": "77030"
  },
  {
    "text": "Autonomous networks okay, so without any centralized control. There are many interesting engineering problems, [they're]",
    "start": "77030",
    "end": "84640"
  },
  {
    "text": "interesting research problems in terms of scalability and robustness",
    "start": "85939",
    "end": "89199"
  },
  {
    "text": "ETC",
    "start": "89990",
    "end": "91250"
  },
  {
    "text": "And but I'm going to talk about it in really sort of elementary terms",
    "start": "91250",
    "end": "95349"
  },
  {
    "text": "and I want to I want to be I want to talk about a",
    "start": "95350",
    "end": "98739"
  },
  {
    "text": "simple graph problem as a reachability problem in graphs in simple",
    "start": "99380",
    "end": "104199"
  },
  {
    "text": "combinatorial graphs with where we have nodes and Arcs",
    "start": "104539",
    "end": "107889"
  },
  {
    "text": "And we want to get from one place to another. You send a packet to your service provider",
    "start": "107890",
    "end": "113229"
  },
  {
    "text": "It has to look in a table and figure out where to send that next and that packet may end up on",
    "start": "113450",
    "end": "119288"
  },
  {
    "text": "the other side of the globe in a completely different network",
    "start": "119599",
    "end": "123039"
  },
  {
    "text": "and and so it's that level you know it's it's",
    "start": "123950",
    "end": "127269"
  },
  {
    "text": "How to get from here to there, so it's the foundations of the internet",
    "start": "127789",
    "end": "132518"
  },
  {
    "text": "It's the basic global foundation of the internet. Different protocols are used within these autonomous networks",
    "start": "132620",
    "end": "139629"
  },
  {
    "text": "And I think more talked about that in a previous computer file, and you know for example",
    "start": "139630",
    "end": "145029"
  },
  {
    "text": "You might use some kind of shortest path based thing within a network, but between networks what's interesting about this is that",
    "start": "145030",
    "end": "152979"
  },
  {
    "text": "You know we want this",
    "start": "153590",
    "end": "155649"
  },
  {
    "text": "inter",
    "start": "156170",
    "end": "157940"
  },
  {
    "text": "domains or you know regional",
    "start": "157940",
    "end": "160660"
  },
  {
    "text": "Autonomous networks we want this routing to interoperate to work",
    "start": "162109",
    "end": "166179"
  },
  {
    "text": "even when",
    "start": "167180",
    "end": "168560"
  },
  {
    "text": "The service providers don't have common agreement about what is the best route for example?",
    "start": "168560",
    "end": "174190"
  },
  {
    "text": "You know your best route might not look like my best route because we have different contracts",
    "start": "174290",
    "end": "179739"
  },
  {
    "text": "With with different companies in the internet, and so we have different we will have different ideas about what is best",
    "start": "180290",
    "end": "187000"
  },
  {
    "text": "Okay, so that might be a commercial thing it might be our you know",
    "start": "187579",
    "end": "190838"
  },
  {
    "text": "I don't want you to send too much traffic through me because it's going to cost me money to look that's right right and basically",
    "start": "190840",
    "end": "196000"
  },
  {
    "text": "the idea is that",
    "start": "196280",
    "end": "198280"
  },
  {
    "text": "when you're doing shortest path routing you want you know you want everybody to be connected with everybody and",
    "start": "198500",
    "end": "204139"
  },
  {
    "text": "along the shortest path and in the internet you want",
    "start": "204720",
    "end": "208849"
  },
  {
    "text": "you don't want traffic to be crossing your network unless somebody's paying you for that either the source of the traffic or the",
    "start": "209790",
    "end": "217730"
  },
  {
    "text": "destination or a combination right somehow and so in other words the the protocol is more about limiting the",
    "start": "218160",
    "end": "225169"
  },
  {
    "text": "Connectivity rather than",
    "start": "226709",
    "end": "228660"
  },
  {
    "text": "You know being generous about it and giving it to everyone",
    "start": "228660",
    "end": "231649"
  },
  {
    "text": "It's kind of let's restrict this connectivity to those that are paying for it somehow. That's basically the idea but",
    "start": "231810",
    "end": "239660"
  },
  {
    "text": "What I want what I want to think about is well, How does this fit into our notion of finding paths in a graph?",
    "start": "240299",
    "end": "247879"
  },
  {
    "text": "because in the undergraduate",
    "start": "248549",
    "end": "251058"
  },
  {
    "text": "Computer science one of the things we teach in algorithms courses is you know a lot of shortest path algorithms",
    "start": "252360",
    "end": "258678"
  },
  {
    "text": "So we we define a graph let's say that is nodes and Arcs",
    "start": "258680",
    "end": "263060"
  },
  {
    "text": "And you have a weight on these arcs and then you try to find the best paths between every pair of Arcs",
    "start": "263060",
    "end": "270380"
  },
  {
    "text": "Let's say and we typically teach this and we teach lots of algorithms for doing this like Dijkstra's algorithm Bellman-Ford",
    "start": "270380",
    "end": "277820"
  },
  {
    "text": "Warshall's Algorithm so can we abstract away from the complexities of BGP and think about it in those terms?",
    "start": "279210",
    "end": "286039"
  },
  {
    "text": "The thing is it doesn't quite fit in our models very well and and and I'll try to explain",
    "start": "286380",
    "end": "293539"
  },
  {
    "text": "Informally why not",
    "start": "295350",
    "end": "297540"
  },
  {
    "text": "-Well what doesn't fit the BGP or what doesn't fit? Okay?",
    "start": "297540",
    "end": "300139"
  },
  {
    "text": "So we normally think about shortest paths in terms of numeric values",
    "start": "300139",
    "end": "304668"
  },
  {
    "text": "Okay, so and we typically add those values as we go along a path",
    "start": "305220",
    "end": "310100"
  },
  {
    "text": "Right, so maybe maybe each Arc has a weight one and we essentially count the number of hops that we're going",
    "start": "310680",
    "end": "318470"
  },
  {
    "text": "Through a path and then we would prefer",
    "start": "318470",
    "end": "320470"
  },
  {
    "text": "Let's say a shorter path one with fewer hops than a longer one",
    "start": "320880",
    "end": "325159"
  },
  {
    "text": "so we're what we're using there are two operations plus and",
    "start": "325440",
    "end": "328969"
  },
  {
    "text": "Maybe an operation let's call it min",
    "start": "329669",
    "end": "331699"
  },
  {
    "text": "Okay, so we have these operations min and plus so min for minimum",
    "start": "332310",
    "end": "336589"
  },
  {
    "text": "Yeah, plus for adding up those hops yeah, right, and so what people notice that about 40 years ago",
    "start": "336600",
    "end": "342230"
  },
  {
    "text": "Is that a lot of these algorithms that we have",
    "start": "342230",
    "end": "344839"
  },
  {
    "text": "for shortest paths Dijkstra's algorithm bellman-Ford can be generalized to a large class of",
    "start": "346530",
    "end": "353269"
  },
  {
    "text": "Algebraic structures called Semi rings. I'm gonna show you. What is a really stupid question I'm sure okay semi ring",
    "start": "353580",
    "end": "359870"
  },
  {
    "text": "I'm not familiar with a semi ring, okay?",
    "start": "359870",
    "end": "362120"
  },
  {
    "text": "So a semi ring is a algebraic structure that looks like a ring",
    "start": "362120",
    "end": "367100"
  },
  {
    "text": "So what is a ring a ring is something like the real numbers, so we have domain the real numbers",
    "start": "367170",
    "end": "373189"
  },
  {
    "text": "and we have a plus and a times they are plus and times the the",
    "start": "373190",
    "end": "378079"
  },
  {
    "text": "Standard operations and",
    "start": "378870",
    "end": "381018"
  },
  {
    "text": "A",
    "start": "381900",
    "end": "383250"
  },
  {
    "text": "Linear Algebra is built on",
    "start": "383250",
    "end": "385250"
  },
  {
    "text": "Rings where actually we take Matrices we multiply matrices we solve Matrix equations things like that",
    "start": "385350",
    "end": "392179"
  },
  {
    "text": "That's all linear Algebra. Well it turns out that semi rings and routing is also. It's kind",
    "start": "392220",
    "end": "398329"
  },
  {
    "text": "It's kind of like a generalization of that where we we weaken the properties that the the plus and the times have to have",
    "start": "398330",
    "end": "406159"
  },
  {
    "text": "Right so for example a ring",
    "start": "406680",
    "end": "409009"
  },
  {
    "text": "That plus has inverses we have negative numbers. So there's always a",
    "start": "410910",
    "end": "415519"
  },
  {
    "text": "For every a there's a not there's a negative a that when you add them together you get zero",
    "start": "416190",
    "end": "420619"
  },
  {
    "text": "Okay, and the semi ring is like a ring except it doesn't have that inverse property you don't necessarily have inverses what people did back",
    "start": "421200",
    "end": "429080"
  },
  {
    "text": "In the 60s and 70s is they looked at algorithms like Dijkstra's algorithm",
    "start": "429080",
    "end": "432680"
  },
  {
    "text": "like",
    "start": "433500",
    "end": "435500"
  },
  {
    "text": "Bellman-Ford, and then they said wait a minute. Let's work backwards",
    "start": "435570",
    "end": "438170"
  },
  {
    "text": "let's look at these we see min and plus in the algorithms, but let's replace them by abstract operators and",
    "start": "438870",
    "end": "445880"
  },
  {
    "text": "Let's see what algebraic properties. We need to make this algorithm work still suppose. We want to pick paths that have the highest capacity",
    "start": "446730",
    "end": "454519"
  },
  {
    "text": "Okay, so we might instead of using plus. We might go along a path",
    "start": "455700",
    "end": "460970"
  },
  {
    "text": "Using min the weight of a path will be the minimum",
    "start": "461730",
    "end": "465050"
  },
  {
    "text": "capacity Link",
    "start": "465770",
    "end": "466539"
  },
  {
    "text": "And then instead of using min to compare paths we might want to use max so that would give us the highest capacity path",
    "start": "466540",
    "end": "473290"
  },
  {
    "text": "Okay, so people noticed. Oh wait a minute. You know this min plus and this max min",
    "start": "473480",
    "end": "480009"
  },
  {
    "text": "They have certain algebraic properties that are true, and we can we can take Dijkstra's algorithm, and we can replace the plus",
    "start": "480560",
    "end": "488320"
  },
  {
    "text": "With min and replace the min with max and now we have an algorithm that does it works perfectly fine now it",
    "start": "489170",
    "end": "496929"
  },
  {
    "text": "Now it finds the highest capacity",
    "start": "497120",
    "end": "499120"
  },
  {
    "text": "paths in the graph, and then we can build other things for example suppose",
    "start": "499910",
    "end": "504459"
  },
  {
    "text": "I wanted to find paths that were shortest, but if I had two paths that were equally short",
    "start": "504460",
    "end": "511180"
  },
  {
    "text": "Maybe I want to break ties with capacity ok so then now I could have a path with two metrics. You know distance",
    "start": "511180",
    "end": "518919"
  },
  {
    "text": "Capacity right and then I could essentially",
    "start": "519680",
    "end": "523180"
  },
  {
    "text": "You know a use shortest paths on that first component",
    "start": "523820",
    "end": "527260"
  },
  {
    "text": "and then break ties with",
    "start": "527260",
    "end": "528620"
  },
  {
    "text": "capacity",
    "start": "528620",
    "end": "529310"
  },
  {
    "text": "Okay",
    "start": "529310",
    "end": "529910"
  },
  {
    "text": "That to that that that turns out you can make a semi ring out of this and then guess what you can use Dijkstra's algorithm",
    "start": "529910",
    "end": "536168"
  },
  {
    "text": "Bellman-Ford to compute with these as well if you compare things you know first distance then",
    "start": "537440",
    "end": "542440"
  },
  {
    "text": "capacity kind of its kind of A",
    "start": "543020",
    "end": "544940"
  },
  {
    "text": "Lexicographic comparison there you can build a semi ring out of that and then and so these these algorithms are really",
    "start": "544940",
    "end": "551229"
  },
  {
    "text": "Generic you can just plug in",
    "start": "551360",
    "end": "553360"
  },
  {
    "text": "You can plug in",
    "start": "554450",
    "end": "556450"
  },
  {
    "text": "You know just an unbounded number",
    "start": "557420",
    "end": "559420"
  },
  {
    "text": "Of different algebraic structures to get what you want and use the same algorithms",
    "start": "560060",
    "end": "565539"
  },
  {
    "text": "Bellman-Ford or Dijkstra ETC, so this might seem like oh now. We have this open-ended world",
    "start": "565970",
    "end": "573399"
  },
  {
    "text": "Maybe we can model something like BGP in this world",
    "start": "574330",
    "end": "577660"
  },
  {
    "text": "turns out we can't okay and",
    "start": "578540",
    "end": "581079"
  },
  {
    "text": "let me give you an example of",
    "start": "582050",
    "end": "584050"
  },
  {
    "text": "That's easy easier to understand than BGP. Okay. I told you we could do",
    "start": "584690",
    "end": "589839"
  },
  {
    "text": "We could we could look at distance first then break ties with bandwidth suppose. We or capacity let's suppose",
    "start": "591260",
    "end": "597939"
  },
  {
    "text": "We did it the other way around.",
    "start": "597940",
    "end": "599940"
  },
  {
    "text": "I want the highest capacity path and if I have two best paths",
    "start": "600589",
    "end": "606339"
  },
  {
    "text": "With high capacity I want to break ties then on the distance",
    "start": "606920",
    "end": "611170"
  },
  {
    "text": "So I first look at the at the capacity component, then I break ties on distance",
    "start": "611600",
    "end": "616449"
  },
  {
    "text": "That's not a semi ring anymore",
    "start": "617360",
    "end": "619449"
  },
  {
    "text": "Why is that? Oh? It's not obvious that you know if you use some of these generic",
    "start": "620209",
    "end": "625719"
  },
  {
    "text": "Best path algorithms, it's something's going to break. Maybe why is that?",
    "start": "627529",
    "end": "632109"
  },
  {
    "text": "not obvious, but it turns out that one of the rules of",
    "start": "633079",
    "end": "636428"
  },
  {
    "text": "that needs to be followed by a semi ring is",
    "start": "637759",
    "end": "640358"
  },
  {
    "text": "something called just",
    "start": "641149",
    "end": "643149"
  },
  {
    "text": "Distributivity this is an algebraic property what it really means is that you know",
    "start": "643220",
    "end": "648399"
  },
  {
    "text": "It doesn't really matter if I make a decision about the best path seeing all my past or you my neighbor",
    "start": "649220",
    "end": "655689"
  },
  {
    "text": "You make the decisions, and you tell me what your best path is it kind of doesn't really matter",
    "start": "655850",
    "end": "661750"
  },
  {
    "text": "Because we'll come to the same We'll come to the same conclusion right, so that's what distributivity is all about and",
    "start": "662389",
    "end": "668709"
  },
  {
    "text": "This this thing",
    "start": "669649",
    "end": "670810"
  },
  {
    "text": "I told you about you know shortest path then capacity that has that property still",
    "start": "670810",
    "end": "676690"
  },
  {
    "text": "But when I turn it around when I do capacity first and then shortest paths it breaks that property",
    "start": "677060",
    "end": "684039"
  },
  {
    "text": "Okay, and let me just give you an example of why suppose. I have a neighbor",
    "start": "684560",
    "end": "688029"
  },
  {
    "text": "That sees two paths: one's very high Bandwidth",
    "start": "688699",
    "end": "691868"
  },
  {
    "text": "But also a very long path right and it sees another one with very low bandwidth or capacity",
    "start": "691870",
    "end": "698079"
  },
  {
    "text": "But it has a short path",
    "start": "698360",
    "end": "699880"
  },
  {
    "text": "And then I am talking to my neighbor over a very low capacity link so my neighbor picks that high capacity long",
    "start": "699880",
    "end": "707739"
  },
  {
    "text": "Path, but I see two. Paths and I say wait a minute. This is kind of like a bottleneck link",
    "start": "708079",
    "end": "713438"
  },
  {
    "text": "Is sort of wipes out the the capacity you know it's the the capacity of both",
    "start": "714290",
    "end": "719560"
  },
  {
    "text": "paths is now the",
    "start": "719560",
    "end": "720769"
  },
  {
    "text": "capacity of this really lousy link as far as I'm concerned both of those paths that my neighbor is giving me have the same",
    "start": "720769",
    "end": "726759"
  },
  {
    "text": "capacity because I have this bottleneck link with very low capacity so I'm going to break ties on the length",
    "start": "727160",
    "end": "732850"
  },
  {
    "text": "And I'm going to break ties",
    "start": "733100",
    "end": "734829"
  },
  {
    "text": "I'm going to want that shortest path, but my neighbor picked the longer path because it had a higher capacity",
    "start": "734829",
    "end": "739928"
  },
  {
    "text": "But I don't see that you see so we're going to be disagreeing about this, okay",
    "start": "740060",
    "end": "745599"
  },
  {
    "text": "so a similar thing happens in the internet for example",
    "start": "745910",
    "end": "748600"
  },
  {
    "text": "If I'm a paying customer of a route of a path, let's say, I'm paying",
    "start": "749629",
    "end": "754359"
  },
  {
    "text": "Upstream, I'm paying for this route, but my neighbor is a service provider",
    "start": "755029",
    "end": "759338"
  },
  {
    "text": "One of those paths it's not paying for because it's a it's their customer another path",
    "start": "760250",
    "end": "766750"
  },
  {
    "text": "It's paying for you know. It's up",
    "start": "766750",
    "end": "769239"
  },
  {
    "text": "It has an upstream provider so that that that",
    "start": "769240",
    "end": "772149"
  },
  {
    "text": "Path could be my neighbor would like the longer path because it's a from a paying customer",
    "start": "772519",
    "end": "777399"
  },
  {
    "text": "From an economic point of view they like that longer path",
    "start": "777949",
    "end": "780909"
  },
  {
    "text": "but I I see the two routes as well. They're both",
    "start": "781730",
    "end": "785199"
  },
  {
    "text": "Provider paths, they're both equally bad in that sense, so I'll pick the shorter one, so we don't agree",
    "start": "785779",
    "end": "791588"
  },
  {
    "text": "There's one thing I should say about internet routing that I was I've been sort of taking for granted without",
    "start": "791809",
    "end": "797139"
  },
  {
    "text": "Really making it explicit and that is",
    "start": "797870",
    "end": "800799"
  },
  {
    "text": "99% of internet Routing Protocols only",
    "start": "802100",
    "end": "807279"
  },
  {
    "text": "They they they're their traffic insensitive?",
    "start": "809660",
    "end": "812949"
  },
  {
    "text": "Okay, that is they're perfectly willing to route all the traffic along the most congested link in the internet",
    "start": "813620",
    "end": "821289"
  },
  {
    "text": "Okay, in other words. They don't route around congestion",
    "start": "821899",
    "end": "825938"
  },
  {
    "text": "So this is the traffic difference between right yeah, and so telco",
    "start": "826670",
    "end": "831099"
  },
  {
    "text": "Protocols routed around things like congestion, but internet protocols have tradition. There are a few exceptions",
    "start": "832069",
    "end": "837038"
  },
  {
    "text": "but generally",
    "start": "837829",
    "end": "839000"
  },
  {
    "text": "Protocols like BGP OSPF is is and and RIP do not route around congestion",
    "start": "839000",
    "end": "845079"
  },
  {
    "text": "That's considered sort of a network that's at done that network management timescales",
    "start": "845420",
    "end": "850719"
  },
  {
    "text": "So a network manager will see oh, we have congestion over there. Let's adjust the link weights",
    "start": "850939",
    "end": "856659"
  },
  {
    "text": "So that the traffic will be more or divergent the protocol doesn't do that the protocol just",
    "start": "857420",
    "end": "864050"
  },
  {
    "text": "Blindly follows those link weights those statically configured link weights",
    "start": "864449",
    "end": "868548"
  },
  {
    "text": "it's not sensitive to traffic",
    "start": "869639",
    "end": "871969"
  },
  {
    "text": "characteristics, and this is because in the internet those characteristics tend to change a lot and oscillate a lot and",
    "start": "873420",
    "end": "880789"
  },
  {
    "text": "they tend to often oscillate in a",
    "start": "881009",
    "end": "883188"
  },
  {
    "text": "At a faster rate than the control plane can keep up with and so you you when you try to adapt",
    "start": "883589",
    "end": "890928"
  },
  {
    "text": "dynamically to congestion you tend to introduce a lot of",
    "start": "891990",
    "end": "895279"
  },
  {
    "text": "instability in the Routing plane and",
    "start": "896069",
    "end": "898069"
  },
  {
    "text": "So these things are you know completely insensitive to",
    "start": "898589",
    "end": "903138"
  },
  {
    "text": "to traffic conditions like congestion",
    "start": "904829",
    "end": "907548"
  },
  {
    "text": "It's up to the network managers to set those statically configured link weights to Avoid congestion",
    "start": "907550",
    "end": "913459"
  },
  {
    "text": "So this is more like the road size. They tell you where those things go. Yes, they don't change yes",
    "start": "913860",
    "end": "918919"
  },
  {
    "text": "I think internet forwarding is a lot like those signs that just point you in that direction",
    "start": "918920",
    "end": "924019"
  },
  {
    "text": "You know paris is in that direction. Go if you're heading towards Paris",
    "start": "924119",
    "end": "928009"
  },
  {
    "text": "Go that way a complicated thing of course is that when we have now these regions that are divided up into",
    "start": "928009",
    "end": "933649"
  },
  {
    "text": "Autonomous regions that have very different goals",
    "start": "935759",
    "end": "938779"
  },
  {
    "text": "But they're forced to interact all right BT is forced to exchange routes with AT&T because they're selling",
    "start": "940079",
    "end": "947719"
  },
  {
    "text": "The service of Global internet Connectivity, so they're forced to interact with their competitors",
    "start": "948540",
    "end": "955308"
  },
  {
    "text": "They they'd like to control the entire internet. I'm sure but they can't",
    "start": "955410",
    "end": "959748"
  },
  {
    "text": "There's a balance you want to",
    "start": "963459",
    "end": "965459"
  },
  {
    "text": "Allow each network to tailor its let's call them routing policies or routing policies",
    "start": "966050",
    "end": "973300"
  },
  {
    "text": "Sorry, I've been in the uk for 12 years, so I'm saying routing now",
    "start": "973300",
    "end": "976479"
  }
]