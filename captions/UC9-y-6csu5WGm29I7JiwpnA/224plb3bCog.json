[
  {
    "text": "Recently we've had a request saying can\nComputerphile do something on finite",
    "start": "0",
    "end": "5420"
  },
  {
    "text": "state automata. And in considering what\nto do about that it did seem to me that it",
    "start": "5420",
    "end": "11440"
  },
  {
    "text": "would be a good idea to look at where\nfinite-state automata sit in the scheme",
    "start": "11440",
    "end": "17109"
  },
  {
    "text": "of things. We've done a lot about\nTuring machines for example, we've",
    "start": "17109",
    "end": "23880"
  },
  {
    "text": "covered the fact that really every\nsingle computer, of any sort nowadays, is",
    "start": "23880",
    "end": "27380"
  },
  {
    "text": "a Turing machine. So what I'd like to do\nis to refer to a diagram which shows, if",
    "start": "27380",
    "end": "34000"
  },
  {
    "text": "you like, the various types of Turing machine -\na hierarchy where if you go inside",
    "start": "34000",
    "end": "39350"
  },
  {
    "text": "you make less and less demands on what you need.\nAnd, if you look at this set of circles",
    "start": "39350",
    "end": "46180"
  },
  {
    "text": "here, I can even related it back to some of\nthe videos we've done previously. You will",
    "start": "46180",
    "end": "50390"
  },
  {
    "text": "remember that when we were doing the Ackermann \nfunction we eventually decided that it's",
    "start": "50390",
    "end": "58170"
  },
  {
    "text": "of the Recursive sort,  which means it will\nterminate but it could take an awful",
    "start": "58170",
    "end": "61920"
  },
  {
    "text": "long time. If you remember in leading up\nto that, I said there's a certain sort of",
    "start": "61920",
    "end": "67909"
  },
  {
    "text": "Turing Machine, outside that, which is a\nreal so-and-so which says: \"Sometimes the",
    "start": "67909",
    "end": "73509"
  },
  {
    "text": "algorithm you give me will give an\nanswer - and you're happy, but sometimes I",
    "start": "73510",
    "end": "77520"
  },
  {
    "text": "will go into a loop and when you say `How\ncan I detect, in general, that you are in a",
    "start": "77520",
    "end": "82520"
  },
  {
    "text": "loop?', the answer is `You can't!' \"\nAnd we've done other videos with my colleague Mark Jago",
    "start": "82520",
    "end": "87530"
  },
  {
    "text": "all about the Halting Problem as it's\ncalled and then we went one even worse:",
    "start": "87530",
    "end": "91960"
  },
  {
    "text": "we've been out in the outer perimeter of\nhyperspace here, to say are there some",
    "start": "91960",
    "end": "98020"
  },
  {
    "text": "problems that are so awful that no algorithm \ncan exist? And we did the Busy Beaver",
    "start": "98020",
    "end": "105539"
  },
  {
    "text": "if you remember which is a sort of encoding \nof a particular Turing Machine. It says: \"Look, there's",
    "start": "105540",
    "end": "112040"
  },
  {
    "text": "not a general algorithm here - I'm not trying to \ndo n factorial. What I'm",
    "start": "112040",
    "end": "115790"
  },
  {
    "text": "asking is, for machines of this sort, can you\npredict how many zeros it will print out?\" And the",
    "start": "115790",
    "end": "122720"
  },
  {
    "text": "answer is there isn't an algorithm that can say \nhow those Busy Beaver",
    "start": "122720",
    "end": "126700"
  },
  {
    "text": "programs will behave in general - if only there\nwas! What you have to do is to run them",
    "start": "126700",
    "end": "130759"
  },
  {
    "text": "all and just exhaustively say \"I don't know,\nthere isn't an algorithm, just try them\".",
    "start": "130759",
    "end": "135520"
  },
  {
    "text": "What happened after",
    "start": "135520",
    "end": "136400"
  },
  {
    "text": "Godel and Turing and others, in the nineteen\nthirties, did all this, is people started",
    "start": "136400",
    "end": "141299"
  },
  {
    "text": "saying \"Well these Turing Machines, y'know,\nit's wonderful -",
    "start": "141300",
    "end": "145950"
  },
  {
    "text": "they're a pencil and paper thing but you could\nimagine building hardware to do them and,",
    "start": "145950",
    "end": "149640"
  },
  {
    "text": "of course. those are general-purpose\ncomputers as we now know them. But people",
    "start": "149640",
    "end": "153580"
  },
  {
    "text": "said: \"Is there a sort of subset of Turing \nMachines where you can either say 'it doesn't need",
    "start": "153580",
    "end": "161120"
  },
  {
    "text": "more than a definite amount of RAM -\nguaranteed - that would be nice to know. ' \"\nAnd those come",
    "start": "161120",
    "end": "167260"
  },
  {
    "text": "out to be in this inner circle of Type 1, here,\nThen people started to say;\"Hey there's",
    "start": "167260",
    "end": "173010"
  },
  {
    "text": "this thing called a 'pushdown store', which\nthe Americans call a 'stack'. That's a one-ended",
    "start": "173010",
    "end": "178319"
  },
  {
    "text": "memory device.  You can't dip into it,\narbitrarily. You can either take",
    "start": "178320",
    "end": "182799"
  },
  {
    "text": "something off the top or push something new on the \ntop. So any addition or ",
    "start": "182799",
    "end": "188370"
  },
  {
    "text": "reading of your memory can only be done at the \ntop of the stack. Is that a sort of special",
    "start": "188370",
    "end": "194989"
  },
  {
    "text": "case? Yes it is. \n>> Sean: And we've looked at that with\nyour Towers of Hanoi haven't we?\n>> DFB: Yes,  Towers of",
    "start": "194989",
    "end": "199580"
  },
  {
    "text": "Hanoi is a classic example of\nsomething where you just want to get",
    "start": "199580",
    "end": "203160"
  },
  {
    "text": "hold of the whole bunch of disks and sort them, in your\nhand, like RAM, y' know, just park that one there,",
    "start": "203160",
    "end": "209250"
  },
  {
    "text": "store that one there, think about it\nput them back together and plonk them",
    "start": "209250",
    "end": "212100"
  },
  {
    "text": "back on the rod. But you can't do that!\nYou can only do it one-ended and for",
    "start": "212100",
    "end": "217400"
  },
  {
    "text": "something that y'know, \"I could do that in two \nor three moves if only I could take all the",
    "start": "217400",
    "end": "221610"
  },
  {
    "text": "discs off\", you end up having to do 64",
    "start": "221610",
    "end": "224130"
  },
  {
    "text": "moves. And then there's one right in the\nmiddle in the inner circle here,",
    "start": "224130",
    "end": "228350"
  },
  {
    "text": "that needs no memory at all - in principle. And\nthat's what these finite-state automata",
    "start": "228350",
    "end": "235190"
  },
  {
    "text": "are all about. You might ask \"Who\ndiscovered all this - who filled in all",
    "start": "235190",
    "end": "239080"
  },
  {
    "text": "these gaps?\" Because there we are with Turing,\nwho perversely discovers the most general",
    "start": "239080",
    "end": "243410"
  },
  {
    "text": "thing going, in the nineteen thirties. But\npeople don't know the simpler story underneath.",
    "start": "243410",
    "end": "249330"
  },
  {
    "text": "Well the person who discovered it is still\nwith us. I think he must be in his late",
    "start": "249330",
    "end": "253050"
  },
  {
    "text": "eighties now - his name is Noam Chomsky\nand I think my friends say that you",
    "start": "253050",
    "end": "257720"
  },
  {
    "text": "ought to pronounce it \"Homski\" like the \"ch\" in \n[Scottish] \"loch\". But I'm happy to be put right on",
    "start": "257720",
    "end": "262710"
  },
  {
    "text": "that. He's genius - near genius - guy, I think he's\nbeen at Harvard, MIT, places like that",
    "start": "262710",
    "end": "269030"
  },
  {
    "text": "ever since he was young. He really was\ntalented. He's a 'linguistician'. If you",
    "start": "269030",
    "end": "274320"
  },
  {
    "text": "study the structure of natural languages\n- any languages, computer languages even, I think",
    "start": "274320",
    "end": "280350"
  },
  {
    "text": "I'm right in saying you're a 'linguistician'. Well,  \nin the late nineteen fifties he started",
    "start": "280350",
    "end": "285100"
  },
  {
    "text": "saying: \"Look, to understand natural\nlanguages better, I'm going to look at the",
    "start": "285100",
    "end": "289360"
  },
  {
    "text": "most restrictive form of language I can\nthink of\". Y'know really simple things.",
    "start": "289360",
    "end": "295759"
  },
  {
    "text": "How about a language whose words are just\nstrings of the letter 'i'. So 'iii' is a ",
    "start": "295760",
    "end": "302590"
  },
  {
    "text": "word; five i's, 'iiiii, 'is a word. Any number of\ni's is a different word. How simple can",
    "start": "302590",
    "end": "309740"
  },
  {
    "text": "that be?",
    "start": "309740",
    "end": "310550"
  },
  {
    "text": "Yes, very simple. And then he went on to\nsay things like \"Yeah, what's a bit more",
    "start": "310550",
    "end": "317710"
  },
  {
    "text": "complicated than that?\" Because those very\nsimple languages as we'll find, next",
    "start": "317710",
    "end": "323340"
  },
  {
    "text": "time, don't need any memory at all - they\nreally don't.",
    "start": "323340",
    "end": "327449"
  },
  {
    "text": "And what's the one that sits outside - he\ndid more investigations",
    "start": "327450",
    "end": "330689"
  },
  {
    "text": "and said: \"Ah! there is one where a one-ended \nmemory will work\".",
    "start": "330689",
    "end": "335249"
  },
  {
    "text": "Yeah - these are the Chomsky Type 2.\nSo, remember Chomsky - it goes, as it were, the",
    "start": "335249",
    "end": "340919"
  },
  {
    "text": "opposite way around. Type 0 is the most\ngeneral, right, the Recursivley Enumerables.\nA subset of Type 0",
    "start": "340919",
    "end": "349129"
  },
  {
    "text": "is the Recursively Enumerables that really do",
    "start": "349129",
    "end": "352779"
  },
  {
    "text": "terminate - e.g. Ackermann. Type 1 is\nthe one where it needs RAM but you can predict",
    "start": "352779",
    "end": "360169"
  },
  {
    "text": "how much RAM. So he discovered that sort -\nthat's the Type 1 i.e. Turing Machines with",
    "start": "360169",
    "end": "365809"
  },
  {
    "text": "a predictable and finite amount of RAM\nrequirement. And he just filled in the",
    "start": "365809",
    "end": "371399"
  },
  {
    "text": "whole picture. And in the period really\nfrom about 1959 to the middle 1970s",
    "start": "371399",
    "end": "376328"
  },
  {
    "text": "a huge amount of work filling in\nthe middle of this diagram. And that",
    "start": "376329",
    "end": "381419"
  },
  {
    "text": "includes things like computer languages,\nAlgol, how to parse them, how to compile them.",
    "start": "381419",
    "end": "386869"
  },
  {
    "text": "And it was all filled in - in the middle\nof this diagram. But all basically",
    "start": "386869",
    "end": "391379"
  },
  {
    "text": "referring back to that work that Chomsky\ndid in 1959, saying: \"These are the",
    "start": "391379",
    "end": "395629"
  },
  {
    "text": "language varieties\".",
    "start": "395629",
    "end": "400139"
  }
]