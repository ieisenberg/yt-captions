[
  {
    "start": "0",
    "end": "54000"
  },
  {
    "text": "functional programming is",
    "start": "30",
    "end": "1990"
  },
  {
    "text": "essentially kind of programming where",
    "start": "1990",
    "end": "3990"
  },
  {
    "text": "functions don't have side effects",
    "start": "5140",
    "end": "6700"
  },
  {
    "text": "So what does it mean when you call a function you give it some inputs?",
    "start": "6700",
    "end": "10500"
  },
  {
    "text": "And it will return some output and that's all that it does it doesn't modify the inputs",
    "start": "10719",
    "end": "16079"
  },
  {
    "text": "It doesn't do something on the side people often talk about firing the missiles",
    "start": "16180",
    "end": "20069"
  },
  {
    "text": "It can't do that",
    "start": "20070",
    "end": "21189"
  },
  {
    "text": "the entire behavior of the function you can see by [looking] at what the inputs were and what the apple was that was generated and",
    "start": "21189",
    "end": "26819"
  },
  {
    "text": "if you [program] [in] that style, then functions are",
    "start": "27189",
    "end": "29519"
  },
  {
    "text": "you know you know a lot [about] their behavior and",
    "start": "30490",
    "end": "32910"
  },
  {
    "text": "Many of the mistakes that are easy to make when you program in more conventional programming languages",
    "start": "33160",
    "end": "38250"
  },
  {
    "text": "is that [you] forget about some effects that a function has in addition to returning its result and",
    "start": "38250",
    "end": "44219"
  },
  {
    "text": "What you forget about those effects then they can lead to very difficult to find bugs and a lot of wasted time?",
    "start": "44620",
    "end": "51538"
  },
  {
    "start": "54000",
    "end": "121000"
  },
  {
    "text": "What did I get used for these languages?",
    "start": "54640",
    "end": "57149"
  },
  {
    "text": "Quite a variety of things they've made a lot of impact on the server side of internet applications. So for example haskell",
    "start": "58270",
    "end": "65459"
  },
  {
    "text": "Which is the language that I played a part in designing. That's now used for all the spam filtering on Facebook",
    "start": "65460",
    "end": "71640"
  },
  {
    "text": "now when I heard that first of all I said, I didn't think there was spam on Facebook and",
    "start": "72340",
    "end": "78118"
  },
  {
    "text": "Sally Marlowe, the man is now in charge of this said to me exactly",
    "start": "79420",
    "end": "82710"
  },
  {
    "text": "That's how good we [are]",
    "start": "83530",
    "end": "85530"
  },
  {
    "text": "All of that is running in Haskell nowadays",
    "start": "85990",
    "end": "88258"
  },
  {
    "text": "another example would be airline that's another functional [programming] [language] which I'm working with a lot at the moment [and]",
    "start": "88780",
    "end": "93210"
  },
  {
    "text": "Airline was used to implement. Whatsapp always everybody uses whatsapp at some point",
    "start": "94600",
    "end": "99089"
  },
  {
    "text": "that's all airline code running behind it there are other examples Twitter's code is built using scala which is a",
    "start": "99369",
    "end": "106859"
  },
  {
    "text": "programming language that I think was heavily inspired by Haskell, but",
    "start": "107320",
    "end": "110519"
  },
  {
    "text": "integrates very well with Java and",
    "start": "111579",
    "end": "113579"
  },
  {
    "text": "but it's also mostly functional and",
    "start": "114100",
    "end": "116100"
  },
  {
    "text": "So you know many of the services that we use [everyday] are actually running functional code in the background",
    "start": "116409",
    "end": "120748"
  },
  {
    "text": "You've just mentioned then you had a hand in the development of haskell. Where did you start?",
    "start": "120850",
    "end": "125938"
  },
  {
    "start": "121000",
    "end": "182000"
  },
  {
    "text": "[did] you have a big team that you weren't where tell me about that? Oh?",
    "start": "125939",
    "end": "128878"
  },
  {
    "text": "so that was interesting and",
    "start": "129520",
    "end": "131520"
  },
  {
    "text": "so when I first got in functional programming there were small number of people working on it at different universities around the world and",
    "start": "132160",
    "end": "138059"
  },
  {
    "text": "In those days you couldn't really get hold of a functional programming language from somewhere else you had to write your own compiler",
    "start": "139120",
    "end": "145530"
  },
  {
    "text": "So many of us around the [world] were doing that and then after [a] while",
    "start": "145930",
    "end": "150420"
  },
  {
    "text": "We realized and it was a man called Paul [hugh] deck yale university took the first initiative to this",
    "start": "150940",
    "end": "156179"
  },
  {
    "text": "We realized that we were all working with very much the same kind of programming language",
    "start": "156760",
    "end": "162148"
  },
  {
    "text": "But because we each had our own compiler. We couldn't share any code",
    "start": "162760",
    "end": "166319"
  },
  {
    "text": "We couldn't share our results",
    "start": "166360",
    "end": "167670"
  },
  {
    "text": "And that just seemed [like] a waste of effort so that led to the proposal [tooned] just",
    "start": "167670",
    "end": "173849"
  },
  {
    "text": "Take the common core [of] what we were all doing put it together and [designer] a programming language that we all use",
    "start": "174280",
    "end": "180239"
  },
  {
    "text": "Which became haskell what where did the name come from then?",
    "start": "180640",
    "end": "183839"
  },
  {
    "start": "182000",
    "end": "313000"
  },
  {
    "text": "It's actually named after",
    "start": "184360",
    "end": "186360"
  },
  {
    "text": "Haskell Curry who was",
    "start": "186880",
    "end": "188739"
  },
  {
    "text": "One of the early logicians who work with with lambda calculus the first time that the committee that was formed designed the language got together?",
    "start": "188739",
    "end": "195929"
  },
  {
    "text": "then we decided we had to choose a name and",
    "start": "196239",
    "end": "198659"
  },
  {
    "text": "nobody really knew [what] to choose so we",
    "start": "199209",
    "end": "201809"
  },
  {
    "text": "Everybody was allowed to write up one proposal on the blackboard",
    "start": "203380",
    "end": "206790"
  },
  {
    "text": "and",
    "start": "206790",
    "end": "207189"
  },
  {
    "text": "Then everybody was allowed to go round and cross off one proposal now you might think that we would end up with zero names that",
    "start": "207190",
    "end": "213269"
  },
  {
    "text": "Way, but no there was one name that",
    "start": "213269",
    "end": "215519"
  },
  {
    "text": "Survived and it was curry",
    "start": "216580",
    "end": "219299"
  },
  {
    "text": "named after",
    "start": "220150",
    "end": "221860"
  },
  {
    "text": "Haskell curry",
    "start": "221860",
    "end": "223390"
  },
  {
    "text": "So that was fine. We thought okay the new language will be called curry and",
    "start": "223390",
    "end": "227160"
  },
  {
    "text": "This is last thing in the evening. So we all went to bed",
    "start": "227980",
    "end": "230220"
  },
  {
    "text": "which meant we had a chance to sleep on it and next morning one of us realized that one of the",
    "start": "231100",
    "end": "237299"
  },
  {
    "text": "Abstract machines that was very popular at that time was called the Tim",
    "start": "238360",
    "end": "242429"
  },
  {
    "text": "Tim curry",
    "start": "243640",
    "end": "245640"
  },
  {
    "text": "Oh dear [that] [wouldn't] be good and so we decided to call it haskell instead, so it's still named after haskell curry",
    "start": "248230",
    "end": "255390"
  },
  {
    "text": "But his first name rather than second from what I've [seen] when you look at a functional program",
    "start": "255400",
    "end": "259979"
  },
  {
    "text": "It is very much like a mathematical equation am [I] right with that. Yes, that's right. So one of the things is that like mathematics",
    "start": "259979",
    "end": "267089"
  },
  {
    "text": "Functional programs will satisfy what we call laws for example in mathematics if you see",
    "start": "268360",
    "end": "273270"
  },
  {
    "text": "x plus y you can always replace it by y plus x if that's more convenient and in",
    "start": "273640",
    "end": "279899"
  },
  {
    "text": "Functional programs then very often you may be able to replace one program by another so you have different ways of expressing the same thing",
    "start": "280450",
    "end": "287069"
  },
  {
    "text": "And you can replace one by the other which you may want to do because one of them may be much more",
    "start": "287070",
    "end": "291659"
  },
  {
    "text": "efficient than the other",
    "start": "291970",
    "end": "293890"
  },
  {
    "text": "and you know",
    "start": "293890",
    "end": "295390"
  },
  {
    "text": "that that replacement will not change the overall behavior of your program and",
    "start": "295390",
    "end": "299580"
  },
  {
    "text": "So we find that these laws extremely important for reasoning about programs and they can let you",
    "start": "300250",
    "end": "305429"
  },
  {
    "text": "Rewrite your program quite freely in order to try and improve its performance for example and be sure that you're not introducing bugs",
    "start": "306010",
    "end": "312899"
  },
  {
    "text": "[I'm] assuming that the same kind of",
    "start": "312900",
    "end": "315120"
  },
  {
    "start": "313000",
    "end": "420000"
  },
  {
    "text": "Mechanics are happening somewhere at some level on the computers with any other programming language though is a [repeal] for this is it slow is",
    "start": "315520",
    "end": "322020"
  },
  {
    "text": "It faster. What's that? What's the deal? Oh, well, so",
    "start": "322020",
    "end": "324930"
  },
  {
    "text": "Functional programming languages take care of a lot [of] the implementation details that an older programming languages you have to do",
    "start": "325720",
    "end": "332459"
  },
  {
    "text": "manually for example memory management",
    "start": "332620",
    "end": "334679"
  },
  {
    "text": "but nowadays",
    "start": "335349",
    "end": "336360"
  },
  {
    "text": "It's very popular to use languages like even Java for example which builds memory management into the programming language functional languages do that too",
    "start": "336360",
    "end": "344340"
  },
  {
    "text": "Very often there is some kind of performance penalty for this and that has meant that",
    "start": "345729",
    "end": "350999"
  },
  {
    "text": "One of the very active parts of functional programming research has been developing compilers that [can] give good performance",
    "start": "351729",
    "end": "357899"
  },
  {
    "text": "Despite the fact that you're programming at a higher level",
    "start": "358419",
    "end": "360749"
  },
  {
    "text": "nowadays",
    "start": "361630",
    "end": "362740"
  },
  {
    "text": "Code written and functional languages can be as fast as or sometimes faster than code written in conventional programming languages",
    "start": "362740",
    "end": "368699"
  },
  {
    "text": "one of the very nice benefits of functional program by the way",
    "start": "368919",
    "end": "372059"
  },
  {
    "text": "is that it's always safe to evaluate two independent expressions in Parallel and",
    "start": "372909",
    "end": "377969"
  },
  {
    "text": "That's because functions have no side effects so you can all the functions going to do is convert inputs to outputs",
    "start": "379419",
    "end": "385848"
  },
  {
    "text": "And you can have two of those computations going on at the same time they cannot interfere",
    "start": "385860",
    "end": "390888"
  },
  {
    "text": "Whereas if you use",
    "start": "392190",
    "end": "394050"
  },
  {
    "text": "Programming languages in which each function may be modifying data somewhere else at the same time then you can't tell whether or not",
    "start": "394050",
    "end": "400490"
  },
  {
    "text": "Two functions will interfere they're very likely to and that means that when you want to make programs run in parallel",
    "start": "400680",
    "end": "406910"
  },
  {
    "text": "When you want to make them use more than one of the cores in your laptop",
    "start": "407220",
    "end": "411349"
  },
  {
    "text": "Then it's much easier to do that if you start with a functional program and that can give a performance benefit over and above",
    "start": "411810",
    "end": "417738"
  },
  {
    "text": "What conventional programming languages have I've heard as well?",
    "start": "417900",
    "end": "421370"
  },
  {
    "start": "420000",
    "end": "455000"
  },
  {
    "text": "there is [a] possibility to make hack-proof code using functional programming is that something you could tell me about or",
    "start": "421409",
    "end": "427459"
  },
  {
    "text": "Yes, so there is a lot of work in trying to make of the cannot be hacked of for example. Can't leak",
    "start": "428400",
    "end": "433940"
  },
  {
    "text": "confidential Data and",
    "start": "434699",
    "end": "436620"
  },
  {
    "text": "There are people who are working on programming languages that will provide some guarantees about that",
    "start": "436620",
    "end": "441679"
  },
  {
    "text": "one of the quite successful approaches is to build a library into haskell in fact that can be used for",
    "start": "442199",
    "end": "448639"
  },
  {
    "text": "enforcing in particular Privacy constraints",
    "start": "449340",
    "end": "452000"
  },
  {
    "text": "So yes, there's work [going] on in [that] area",
    "start": "452580",
    "end": "454728"
  },
  {
    "start": "455000",
    "end": "558000"
  },
  {
    "text": "We're going to talk about things like your quick check",
    "start": "455070",
    "end": "457219"
  },
  {
    "text": "And you know that we've already filmed some stuff on that and what do you up to? What do you do?",
    "start": "457219",
    "end": "461779"
  },
  {
    "text": "What's what's next for you?",
    "start": "461780",
    "end": "463289"
  },
  {
    "text": "So I'm devoting most of my time to quick check nowadays",
    "start": "463289",
    "end": "466218"
  },
  {
    "text": "where the basic idea is not to write tests by hand because",
    "start": "466770",
    "end": "471948"
  },
  {
    "text": "Because basically it doesn't work",
    "start": "474270",
    "end": "476270"
  },
  {
    "text": "Software is so complex that to make sure there are no bugs in it you have to try all kinds of weird",
    "start": "476490",
    "end": "481789"
  },
  {
    "text": "Combinations, and there are just too many combinations to try for people to be able to try them all so really the only way to",
    "start": "481949",
    "end": "488899"
  },
  {
    "text": "ensure that you",
    "start": "489810",
    "end": "491340"
  },
  {
    "text": "Avoid these bugs is to generate tests instead",
    "start": "491340",
    "end": "493669"
  },
  {
    "text": "That's what quick check does it lets you write test",
    "start": "493819",
    "end": "496609"
  },
  {
    "text": "Code that says what your program [should] do and then it generates as many tests as you want to check that it does",
    "start": "496610",
    "end": "503090"
  },
  {
    "text": "And I've been working with quick check for many years now [10] years ago",
    "start": "503909",
    "end": "508009"
  },
  {
    "text": "I founded a company that is commercializing quick check",
    "start": "508009",
    "end": "511098"
  },
  {
    "text": "And that's been huge fun because it means I get [to] apply",
    "start": "511099",
    "end": "514039"
  },
  {
    "text": "this technology to all of real problems all kinds [of] different kinds of software, and that's been a huge learning experience for me and a",
    "start": "514380",
    "end": "522140"
  },
  {
    "text": "Tremendous source of",
    "start": "522959",
    "end": "524959"
  },
  {
    "text": "Research problems when we find oh, it's hard to apply it in this case well",
    "start": "525510",
    "end": "528830"
  },
  {
    "text": "There's a research [property] to solve so [as] a professor and a researcher",
    "start": "528830",
    "end": "532459"
  },
  {
    "text": "It's given me all kinds of new ideas for problems to work on which which has been very very stimulating",
    "start": "532459",
    "end": "538219"
  },
  {
    "text": "and",
    "start": "539579",
    "end": "541380"
  },
  {
    "text": "the value of y at this position is going to be some polynomial that we have to find which is a",
    "start": "541380",
    "end": "548149"
  },
  {
    "text": "x cubed plus [be] x squared",
    "start": "548640",
    "end": "551689"
  },
  {
    "text": "Plus C. X plus d. There are four unknowns here x we know because we're going between no [1] 1",
    "start": "552420",
    "end": "558680"
  }
]