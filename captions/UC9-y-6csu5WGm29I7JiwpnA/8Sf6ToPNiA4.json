[
  {
    "start": "0",
    "end": "21000"
  },
  {
    "text": "today i wanted to talk about a",
    "start": "240",
    "end": "2800"
  },
  {
    "text": "property of functional programming",
    "start": "2800",
    "end": "4080"
  },
  {
    "text": "called immutability",
    "start": "4080",
    "end": "5680"
  },
  {
    "text": "and how immutability helps affect",
    "start": "5680",
    "end": "9599"
  },
  {
    "text": "concurrency models",
    "start": "9599",
    "end": "11280"
  },
  {
    "text": "and you know the advantages and",
    "start": "11280",
    "end": "12559"
  },
  {
    "text": "disadvantages of having immutable states",
    "start": "12559",
    "end": "14719"
  },
  {
    "text": "you know so they should be used",
    "start": "14719",
    "end": "16720"
  },
  {
    "text": "in some areas and not used in others",
    "start": "16720",
    "end": "20400"
  },
  {
    "start": "21000",
    "end": "134000"
  },
  {
    "text": "if you remember when you were back in",
    "start": "21279",
    "end": "22800"
  },
  {
    "text": "school they used to go in and",
    "start": "22800",
    "end": "25439"
  },
  {
    "text": "teach you the equations say y",
    "start": "25439",
    "end": "28080"
  },
  {
    "text": "is equal to x squared minus 1. you did",
    "start": "28080",
    "end": "31279"
  },
  {
    "text": "your calculation and then you figured",
    "start": "31279",
    "end": "32558"
  },
  {
    "text": "out what y was",
    "start": "32559",
    "end": "33920"
  },
  {
    "text": "and",
    "start": "33920",
    "end": "34960"
  },
  {
    "text": "that worked fine until they started",
    "start": "34960",
    "end": "37440"
  },
  {
    "text": "teaching you to program all of a sudden",
    "start": "37440",
    "end": "39280"
  },
  {
    "text": "when they were teaching you to program",
    "start": "39280",
    "end": "41120"
  },
  {
    "text": "what you got was x is equal to x squared",
    "start": "41120",
    "end": "44160"
  },
  {
    "text": "minus one and all of a sudden they",
    "start": "44160",
    "end": "46160"
  },
  {
    "text": "introduced mutability into the whole",
    "start": "46160",
    "end": "48399"
  },
  {
    "text": "equation where you had values but then",
    "start": "48399",
    "end": "50879"
  },
  {
    "text": "you went in and changed the values this",
    "start": "50879",
    "end": "53360"
  },
  {
    "text": "started causing kind of confusion and",
    "start": "53360",
    "end": "55760"
  },
  {
    "text": "because it's wrong it kind of defies the",
    "start": "55760",
    "end": "58320"
  },
  {
    "text": "laws of mathematics this is wrong you",
    "start": "58320",
    "end": "60640"
  },
  {
    "text": "know it shouldn't be that way even when",
    "start": "60640",
    "end": "62640"
  },
  {
    "text": "you program you should have you know y",
    "start": "62640",
    "end": "65198"
  },
  {
    "text": "is equal to x squared minus one and this",
    "start": "65199",
    "end": "67119"
  },
  {
    "text": "is an example of an immutable state so",
    "start": "67119",
    "end": "69600"
  },
  {
    "text": "mutability that's the idea of something",
    "start": "69600",
    "end": "71439"
  },
  {
    "text": "can change right so x is something and",
    "start": "71439",
    "end": "73680"
  },
  {
    "text": "then it can become something else that",
    "start": "73680",
    "end": "75759"
  },
  {
    "text": "is correct so uh mutability what you do",
    "start": "75759",
    "end": "77920"
  },
  {
    "text": "is uh you change some parts of it",
    "start": "77920",
    "end": "81439"
  },
  {
    "text": "and you retain some common bits so you",
    "start": "81439",
    "end": "84159"
  },
  {
    "text": "know that's mutability you you basically",
    "start": "84159",
    "end": "86320"
  },
  {
    "text": "the value changes",
    "start": "86320",
    "end": "87759"
  },
  {
    "text": "or some parts of that value change",
    "start": "87759",
    "end": "89600"
  },
  {
    "text": "immutability basically you share",
    "start": "89600",
    "end": "92159"
  },
  {
    "text": "what you can and copy what you can't",
    "start": "92159",
    "end": "95200"
  },
  {
    "text": "that's a way of seeing it let's look at",
    "start": "95200",
    "end": "97119"
  },
  {
    "text": "how immutability and mutability affect",
    "start": "97119",
    "end": "99280"
  },
  {
    "text": "your concurrency models concurrently",
    "start": "99280",
    "end": "101360"
  },
  {
    "text": "programming is when you have processes",
    "start": "101360",
    "end": "103439"
  },
  {
    "text": "as your main building block of your",
    "start": "103439",
    "end": "105119"
  },
  {
    "text": "system",
    "start": "105119",
    "end": "106240"
  },
  {
    "text": "and concurrence itself you know what you",
    "start": "106240",
    "end": "109119"
  },
  {
    "text": "do is you they don't have to run at the",
    "start": "109119",
    "end": "111040"
  },
  {
    "text": "same time but you model it that way so",
    "start": "111040",
    "end": "113840"
  },
  {
    "text": "they could inferiorly be running at the",
    "start": "113840",
    "end": "115360"
  },
  {
    "text": "same time and it's an easier way to",
    "start": "115360",
    "end": "118240"
  },
  {
    "text": "reason and an easier way to code and",
    "start": "118240",
    "end": "120799"
  },
  {
    "text": "program",
    "start": "120799",
    "end": "121920"
  },
  {
    "text": "and and this goes",
    "start": "121920",
    "end": "124240"
  },
  {
    "text": "in contrast to parallelism where you",
    "start": "124240",
    "end": "126399"
  },
  {
    "text": "actually have processes which are",
    "start": "126399",
    "end": "128720"
  },
  {
    "text": "running at the same time so",
    "start": "128720",
    "end": "130640"
  },
  {
    "text": "see it as a subset you know cc",
    "start": "130640",
    "end": "132319"
  },
  {
    "text": "concurrency as a subset of parallelism",
    "start": "132319",
    "end": "134480"
  },
  {
    "text": "so there are two ways of you know doing",
    "start": "134480",
    "end": "136560"
  },
  {
    "text": "concurrency one is based on mutable",
    "start": "136560",
    "end": "138720"
  },
  {
    "text": "state",
    "start": "138720",
    "end": "139680"
  },
  {
    "text": "where we've got",
    "start": "139680",
    "end": "141120"
  },
  {
    "text": "processes and processes usually threads",
    "start": "141120",
    "end": "144239"
  },
  {
    "text": "when it comes to mutable state will go",
    "start": "144239",
    "end": "146319"
  },
  {
    "text": "in and share memory so that means",
    "start": "146319",
    "end": "149120"
  },
  {
    "text": "any thread you know which has access to",
    "start": "149120",
    "end": "151440"
  },
  {
    "text": "the shared memory can go in and edit it",
    "start": "151440",
    "end": "153680"
  },
  {
    "text": "and this is where you program with locks",
    "start": "153680",
    "end": "155360"
  },
  {
    "text": "you program with semaphores",
    "start": "155360",
    "end": "158080"
  },
  {
    "text": "and the likes then you've got notion",
    "start": "158080",
    "end": "160560"
  },
  {
    "text": "memory so you've got",
    "start": "160560",
    "end": "162560"
  },
  {
    "text": "concurrency models with immutable state",
    "start": "162560",
    "end": "164800"
  },
  {
    "text": "and in those cases you've got processes",
    "start": "164800",
    "end": "167040"
  },
  {
    "text": "and processes do not share memory but",
    "start": "167040",
    "end": "169599"
  },
  {
    "text": "they communicate with each other through",
    "start": "169599",
    "end": "170959"
  },
  {
    "text": "message passing so they communicate with",
    "start": "170959",
    "end": "172640"
  },
  {
    "text": "each other by copying",
    "start": "172640",
    "end": "174560"
  },
  {
    "text": "the data from one process to the other",
    "start": "174560",
    "end": "177680"
  },
  {
    "text": "and so now they'll each have their own",
    "start": "177680",
    "end": "179519"
  },
  {
    "text": "copy",
    "start": "179519",
    "end": "180400"
  },
  {
    "text": "and you know they're able to do whatever",
    "start": "180400",
    "end": "181920"
  },
  {
    "text": "they want with it so you know the only",
    "start": "181920",
    "end": "184800"
  },
  {
    "text": "entity the only item which is allowed to",
    "start": "184800",
    "end": "186640"
  },
  {
    "text": "mutate the process state is the process",
    "start": "186640",
    "end": "189360"
  },
  {
    "text": "itself if we're dealing with a mutable",
    "start": "189360",
    "end": "191920"
  },
  {
    "text": "state",
    "start": "191920",
    "end": "192879"
  },
  {
    "text": "um",
    "start": "192879",
    "end": "194080"
  },
  {
    "text": "you've got a thread or a process running",
    "start": "194080",
    "end": "197040"
  },
  {
    "text": "in a critical section so basically",
    "start": "197040",
    "end": "198959"
  },
  {
    "text": "writing to the shared memory what",
    "start": "198959",
    "end": "200879"
  },
  {
    "text": "happens if something goes wrong so what",
    "start": "200879",
    "end": "202560"
  },
  {
    "text": "happens if the process terminates what",
    "start": "202560",
    "end": "204799"
  },
  {
    "text": "you need to do is you need to go and",
    "start": "204799",
    "end": "206239"
  },
  {
    "text": "terminate all of the threads which have",
    "start": "206239",
    "end": "208000"
  },
  {
    "text": "access to the shared memory because you",
    "start": "208000",
    "end": "210400"
  },
  {
    "text": "do not know you know what state the",
    "start": "210400",
    "end": "212400"
  },
  {
    "text": "process which terminated left the shared",
    "start": "212400",
    "end": "214080"
  },
  {
    "text": "memory in and it could you know",
    "start": "214080",
    "end": "215280"
  },
  {
    "text": "potentially be corrupt so you basically",
    "start": "215280",
    "end": "217519"
  },
  {
    "text": "lose everything",
    "start": "217519",
    "end": "219120"
  },
  {
    "text": "in there in a mutable state",
    "start": "219120",
    "end": "221840"
  },
  {
    "text": "what happens if a process",
    "start": "221840",
    "end": "224080"
  },
  {
    "text": "you know state gets corrupted or crashes",
    "start": "224080",
    "end": "226400"
  },
  {
    "text": "or something goes wrong with it is that",
    "start": "226400",
    "end": "228879"
  },
  {
    "text": "you just lose the state of that",
    "start": "228879",
    "end": "230480"
  },
  {
    "text": "particular process which was corrupt in",
    "start": "230480",
    "end": "232640"
  },
  {
    "text": "the first place",
    "start": "232640",
    "end": "233920"
  },
  {
    "text": "all other processes are not affected by",
    "start": "233920",
    "end": "236080"
  },
  {
    "text": "it because they'll have their own copy",
    "start": "236080",
    "end": "237760"
  },
  {
    "text": "of the data hopefully not corrupted and",
    "start": "237760",
    "end": "240400"
  },
  {
    "text": "you know continue executing so it's a",
    "start": "240400",
    "end": "242319"
  },
  {
    "text": "way of isolating failure your second",
    "start": "242319",
    "end": "244879"
  },
  {
    "text": "problem with mutable state is you know",
    "start": "244879",
    "end": "247200"
  },
  {
    "text": "where do you locate your data you've got",
    "start": "247200",
    "end": "248560"
  },
  {
    "text": "shared memory where do you locate it so",
    "start": "248560",
    "end": "250080"
  },
  {
    "text": "you've got a process",
    "start": "250080",
    "end": "251760"
  },
  {
    "text": "running in nottingham and you've got one",
    "start": "251760",
    "end": "254239"
  },
  {
    "text": "process running in london",
    "start": "254239",
    "end": "256560"
  },
  {
    "text": "and they need to share memory where you",
    "start": "256560",
    "end": "258320"
  },
  {
    "text": "place your shared memory it becomes a",
    "start": "258320",
    "end": "260320"
  },
  {
    "text": "bit hard versus immutable state where",
    "start": "260320",
    "end": "263440"
  },
  {
    "text": "you've got nottingham and you've got",
    "start": "263440",
    "end": "265840"
  },
  {
    "text": "london you don't share memory you copy",
    "start": "265840",
    "end": "268160"
  },
  {
    "text": "the state so they'll each have their own",
    "start": "268160",
    "end": "269520"
  },
  {
    "text": "copy of the data",
    "start": "269520",
    "end": "271759"
  },
  {
    "text": "and you can execute yeah without so so",
    "start": "271759",
    "end": "274000"
  },
  {
    "text": "so you you're avoiding problems of",
    "start": "274000",
    "end": "276720"
  },
  {
    "text": "locality here assume you figure out with",
    "start": "276720",
    "end": "278960"
  },
  {
    "text": "your mutable state between nottingham",
    "start": "278960",
    "end": "280400"
  },
  {
    "text": "and london you'll place your shared",
    "start": "280400",
    "end": "281919"
  },
  {
    "text": "memory in leicester what happens all of",
    "start": "281919",
    "end": "283759"
  },
  {
    "text": "a sudden when the network goes down",
    "start": "283759",
    "end": "286240"
  },
  {
    "text": "between them you know because here in",
    "start": "286240",
    "end": "287919"
  },
  {
    "text": "the middle you've got your shared data",
    "start": "287919",
    "end": "289759"
  },
  {
    "text": "all of a sudden you can't accept it and",
    "start": "289759",
    "end": "291360"
  },
  {
    "text": "there's one thing you need to be aware",
    "start": "291360",
    "end": "292880"
  },
  {
    "text": "when you're programming in life there",
    "start": "292880",
    "end": "294479"
  },
  {
    "text": "are three certainties one is taxes death",
    "start": "294479",
    "end": "297759"
  },
  {
    "text": "and network partitions so",
    "start": "297759",
    "end": "300000"
  },
  {
    "text": "you can be sure that",
    "start": "300000",
    "end": "301759"
  },
  {
    "text": "you know if you've got a network",
    "start": "301759",
    "end": "303120"
  },
  {
    "text": "something will go wrong with it versus",
    "start": "303120",
    "end": "305120"
  },
  {
    "text": "immutable state you've got a copy",
    "start": "305120",
    "end": "306720"
  },
  {
    "text": "nottingham you've got a copy in london",
    "start": "306720",
    "end": "308240"
  },
  {
    "text": "so even if the network goes down",
    "start": "308240",
    "end": "310639"
  },
  {
    "text": "they'll each have their own copy of the",
    "start": "310639",
    "end": "311919"
  },
  {
    "text": "data to continue running",
    "start": "311919",
    "end": "314080"
  },
  {
    "text": "and what you need to do is when the",
    "start": "314080",
    "end": "315759"
  },
  {
    "text": "network does come back up you will have",
    "start": "315759",
    "end": "317600"
  },
  {
    "text": "to go in and synchronize the data again",
    "start": "317600",
    "end": "320240"
  },
  {
    "text": "and there are many tools",
    "start": "320240",
    "end": "322720"
  },
  {
    "text": "distributed databases and techniques to",
    "start": "322720",
    "end": "324880"
  },
  {
    "text": "do that it's very clear that if you're",
    "start": "324880",
    "end": "326800"
  },
  {
    "text": "dealing with mutable state the",
    "start": "326800",
    "end": "328320"
  },
  {
    "text": "mutability will work but it will work",
    "start": "328320",
    "end": "330560"
  },
  {
    "text": "only if you're running your threads on a",
    "start": "330560",
    "end": "331840"
  },
  {
    "text": "single machine so without a network and",
    "start": "331840",
    "end": "334400"
  },
  {
    "text": "assuming nothing goes wrong and there",
    "start": "334400",
    "end": "336479"
  },
  {
    "text": "are many many use cases where you need",
    "start": "336479",
    "end": "338560"
  },
  {
    "text": "that approach especially those use cases",
    "start": "338560",
    "end": "340800"
  },
  {
    "text": "where copying memory",
    "start": "340800",
    "end": "342560"
  },
  {
    "text": "is not efficient you know where your",
    "start": "342560",
    "end": "344400"
  },
  {
    "text": "computations have been extremely fast",
    "start": "344400",
    "end": "347039"
  },
  {
    "text": "so it's not a question of you know one",
    "start": "347039",
    "end": "349600"
  },
  {
    "text": "or the other it's a question very much",
    "start": "349600",
    "end": "351360"
  },
  {
    "text": "of using",
    "start": "351360",
    "end": "352400"
  },
  {
    "text": "the right tool for the job and yeah it's",
    "start": "352400",
    "end": "355120"
  },
  {
    "text": "not always mutable state and it's not",
    "start": "355120",
    "end": "356560"
  },
  {
    "text": "always a mutable state you know these",
    "start": "356560",
    "end": "358400"
  },
  {
    "text": "these are the science decisions you need",
    "start": "358400",
    "end": "359759"
  },
  {
    "text": "to make when you go along there's some",
    "start": "359759",
    "end": "362080"
  },
  {
    "text": "examples of where you might choose a",
    "start": "362080",
    "end": "364000"
  },
  {
    "text": "mutable state most likely i mean you",
    "start": "364000",
    "end": "366000"
  },
  {
    "text": "would use a mutable state where say in",
    "start": "366000",
    "end": "369039"
  },
  {
    "text": "the finance space where you're doing",
    "start": "369039",
    "end": "371039"
  },
  {
    "text": "algorithmic trading",
    "start": "371039",
    "end": "373440"
  },
  {
    "text": "computation time is critical",
    "start": "373440",
    "end": "375759"
  },
  {
    "text": "and complex as well",
    "start": "375759",
    "end": "378319"
  },
  {
    "text": "where",
    "start": "378319",
    "end": "379680"
  },
  {
    "text": "if something crashes and go wrong you",
    "start": "379680",
    "end": "381120"
  },
  {
    "text": "just don't do the trade",
    "start": "381120",
    "end": "382880"
  },
  {
    "text": "but if you do get your results you know",
    "start": "382880",
    "end": "385120"
  },
  {
    "text": "you need to be fast and you",
    "start": "385120",
    "end": "387440"
  },
  {
    "text": "you know get you know execute that trade",
    "start": "387440",
    "end": "389440"
  },
  {
    "text": "as quickly as possible so as as an",
    "start": "389440",
    "end": "391759"
  },
  {
    "text": "example or",
    "start": "391759",
    "end": "393039"
  },
  {
    "text": "your rendering of graphics for example",
    "start": "393039",
    "end": "395199"
  },
  {
    "text": "or",
    "start": "395199",
    "end": "396240"
  },
  {
    "text": "you know where you might want to split",
    "start": "396240",
    "end": "397520"
  },
  {
    "text": "it up but uh you know",
    "start": "397520",
    "end": "399919"
  },
  {
    "text": "do do as much as you want as much as",
    "start": "399919",
    "end": "402560"
  },
  {
    "text": "possible in parallel so it's time",
    "start": "402560",
    "end": "404720"
  },
  {
    "text": "critical basically time critical",
    "start": "404720",
    "end": "406400"
  },
  {
    "text": "applications absolutely which can run on",
    "start": "406400",
    "end": "408560"
  },
  {
    "text": "a single machine and don't need to be",
    "start": "408560",
    "end": "409840"
  },
  {
    "text": "distributed so let's step back a second",
    "start": "409840",
    "end": "412720"
  },
  {
    "start": "411000",
    "end": "604000"
  },
  {
    "text": "uh you know i've been using the terms",
    "start": "412720",
    "end": "414240"
  },
  {
    "text": "mutable state and immutable state",
    "start": "414240",
    "end": "416880"
  },
  {
    "text": "you probably recognize them with the no",
    "start": "416880",
    "end": "419360"
  },
  {
    "text": "shared memory",
    "start": "419360",
    "end": "420639"
  },
  {
    "text": "approach versus the shared memory",
    "start": "420639",
    "end": "422160"
  },
  {
    "text": "approach",
    "start": "422160",
    "end": "423280"
  },
  {
    "text": "and i think a very common shared memory",
    "start": "423280",
    "end": "425680"
  },
  {
    "text": "approach is for for example java which",
    "start": "425680",
    "end": "427680"
  },
  {
    "text": "is fred's and the threads will go in and",
    "start": "427680",
    "end": "429520"
  },
  {
    "text": "share the memory",
    "start": "429520",
    "end": "431039"
  },
  {
    "text": "and what i'm seeing happening a lot out",
    "start": "431039",
    "end": "433680"
  },
  {
    "text": "there though is applying uh techniques",
    "start": "433680",
    "end": "436240"
  },
  {
    "text": "from immutable state",
    "start": "436240",
    "end": "438400"
  },
  {
    "text": "to processes and threads with mutable",
    "start": "438400",
    "end": "440479"
  },
  {
    "text": "state so what happens is that you you",
    "start": "440479",
    "end": "443039"
  },
  {
    "text": "only allow",
    "start": "443039",
    "end": "444400"
  },
  {
    "text": "the thread you know which owns the data",
    "start": "444400",
    "end": "446400"
  },
  {
    "text": "to go in and mutate it",
    "start": "446400",
    "end": "448479"
  },
  {
    "text": "and yeah and that resolves and addresses",
    "start": "448479",
    "end": "450880"
  },
  {
    "text": "a lot of the issues you know we've",
    "start": "450880",
    "end": "452080"
  },
  {
    "text": "discussed now so you know",
    "start": "452080",
    "end": "453840"
  },
  {
    "text": "it's again you're very much the right",
    "start": "453840",
    "end": "455520"
  },
  {
    "text": "tool for the job so if you look at",
    "start": "455520",
    "end": "457360"
  },
  {
    "text": "modern architectures today i mean",
    "start": "457360",
    "end": "459280"
  },
  {
    "text": "everything from embedded devices to",
    "start": "459280",
    "end": "461199"
  },
  {
    "text": "super computers",
    "start": "461199",
    "end": "462720"
  },
  {
    "text": "they are based on you know heterogeneous",
    "start": "462720",
    "end": "464639"
  },
  {
    "text": "multi-core architectures",
    "start": "464639",
    "end": "466479"
  },
  {
    "text": "and most of them are you know by nature",
    "start": "466479",
    "end": "468560"
  },
  {
    "text": "distributed so you know i think you know",
    "start": "468560",
    "end": "471280"
  },
  {
    "text": "what we've been looking at today",
    "start": "471280",
    "end": "473199"
  },
  {
    "text": "is basically the future of programming",
    "start": "473199",
    "end": "475919"
  },
  {
    "text": "uh you know future programming languages",
    "start": "475919",
    "end": "477919"
  },
  {
    "text": "will be concurrent they have to be",
    "start": "477919",
    "end": "479599"
  },
  {
    "text": "concurrent",
    "start": "479599",
    "end": "480879"
  },
  {
    "text": "and they'll have a concurrency model",
    "start": "480879",
    "end": "482879"
  },
  {
    "text": "based on immutable state so you know",
    "start": "482879",
    "end": "485280"
  },
  {
    "text": "immutable state you know being uh one of",
    "start": "485280",
    "end": "488319"
  },
  {
    "text": "the properties they've inherited from",
    "start": "488319",
    "end": "490319"
  },
  {
    "text": "functional programming languages you",
    "start": "490319",
    "end": "492400"
  },
  {
    "text": "might not be using functional",
    "start": "492400",
    "end": "493440"
  },
  {
    "text": "programming languages on a day-to-day",
    "start": "493440",
    "end": "495199"
  },
  {
    "text": "basis but",
    "start": "495199",
    "end": "496879"
  },
  {
    "text": "using you know the paradigms and the",
    "start": "496879",
    "end": "498560"
  },
  {
    "text": "principles and adopting them with your",
    "start": "498560",
    "end": "501520"
  },
  {
    "text": "main",
    "start": "501520",
    "end": "502400"
  },
  {
    "text": "mainstream technologies will make you",
    "start": "502400",
    "end": "504080"
  },
  {
    "text": "much better programmer and they'll make",
    "start": "504080",
    "end": "505360"
  },
  {
    "text": "you much more efficient and productive",
    "start": "505360",
    "end": "507280"
  },
  {
    "text": "earlier on we mentioned though that",
    "start": "507280",
    "end": "508639"
  },
  {
    "text": "immutability there was a speed penalty",
    "start": "508639",
    "end": "510879"
  },
  {
    "text": "right so how do we address that so with",
    "start": "510879",
    "end": "513599"
  },
  {
    "text": "immutability indeed you have a speed",
    "start": "513599",
    "end": "514959"
  },
  {
    "text": "penalty",
    "start": "514959",
    "end": "516399"
  },
  {
    "text": "but you know the speed penalty",
    "start": "516399",
    "end": "519039"
  },
  {
    "text": "becomes even more serious when you start",
    "start": "519039",
    "end": "521518"
  },
  {
    "text": "looking at amdahl's law",
    "start": "521519",
    "end": "523360"
  },
  {
    "text": "um",
    "start": "523360",
    "end": "525040"
  },
  {
    "text": "every one and a half years until",
    "start": "525040",
    "end": "527760"
  },
  {
    "text": "the mid-2000s uh chips were getting you",
    "start": "527760",
    "end": "530880"
  },
  {
    "text": "know becoming twice as fast",
    "start": "530880",
    "end": "533279"
  },
  {
    "text": "uh then amdahl's law you know because of",
    "start": "533279",
    "end": "536320"
  },
  {
    "text": "ambassador they've hit the limit and now",
    "start": "536320",
    "end": "539600"
  },
  {
    "text": "you need to deal you know you gain speed",
    "start": "539600",
    "end": "541920"
  },
  {
    "text": "through multi-core",
    "start": "541920",
    "end": "543279"
  },
  {
    "text": "and with multi-core programming you need",
    "start": "543279",
    "end": "545440"
  },
  {
    "text": "a different approach and what you do is",
    "start": "545440",
    "end": "547440"
  },
  {
    "text": "you start parallelizing your",
    "start": "547440",
    "end": "548640"
  },
  {
    "text": "computations",
    "start": "548640",
    "end": "550160"
  },
  {
    "text": "so you know desktops",
    "start": "550160",
    "end": "552399"
  },
  {
    "text": "will very soon have 64 cores you know",
    "start": "552399",
    "end": "554240"
  },
  {
    "text": "we'll be seeing",
    "start": "554240",
    "end": "555600"
  },
  {
    "text": "uh machines with a million cores",
    "start": "555600",
    "end": "558320"
  },
  {
    "text": "within their lifetimes",
    "start": "558320",
    "end": "560240"
  },
  {
    "text": "you know you start utilizing instead of",
    "start": "560240",
    "end": "561920"
  },
  {
    "text": "you're making one a single threaded",
    "start": "561920",
    "end": "563760"
  },
  {
    "text": "program which runs extremely fast you",
    "start": "563760",
    "end": "565680"
  },
  {
    "text": "now start parallelizing your programs",
    "start": "565680",
    "end": "567839"
  },
  {
    "text": "and so you start breaking up your",
    "start": "567839",
    "end": "569760"
  },
  {
    "text": "computations into many smaller",
    "start": "569760",
    "end": "571200"
  },
  {
    "text": "computations",
    "start": "571200",
    "end": "572800"
  },
  {
    "text": "and",
    "start": "572800",
    "end": "573760"
  },
  {
    "text": "this you know the only way to do that",
    "start": "573760",
    "end": "576399"
  },
  {
    "text": "is uh concurrency rented programming",
    "start": "576399",
    "end": "579519"
  },
  {
    "text": "with uh immutable states",
    "start": "579519",
    "end": "582160"
  },
  {
    "text": "with a concurrency model based on",
    "start": "582160",
    "end": "583519"
  },
  {
    "text": "immutable state",
    "start": "583519",
    "end": "587000"
  },
  {
    "text": "uh yeah that you you seem to have uh",
    "start": "592320",
    "end": "595120"
  },
  {
    "text": "yeah you've seen",
    "start": "595120",
    "end": "596880"
  },
  {
    "text": "scenes have",
    "start": "596880",
    "end": "598399"
  },
  {
    "text": "been hung by your own what was it called",
    "start": "598399",
    "end": "601519"
  },
  {
    "text": "busted yes",
    "start": "601519",
    "end": "605160"
  }
]