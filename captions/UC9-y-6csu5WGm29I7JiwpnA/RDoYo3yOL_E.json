[
  {
    "text": "As part of doing bits and bytes and\nfairly low-level stuff, we have mentioned",
    "start": "0",
    "end": "5310"
  },
  {
    "text": "the possibility of a thing called 'binary\ncoded decimal' and that, effectively, IBM",
    "start": "5310",
    "end": "10920"
  },
  {
    "text": "in their mainframe days, led the charge\non this. Now I've done a video on this and how",
    "start": "10920",
    "end": "16529"
  },
  {
    "text": "it led, eventually, to extended binary\ncoded decimal (EBCDIC). I would like to talk about",
    "start": "16529",
    "end": "20699"
  },
  {
    "text": "what is BCD, why is it necessary and in\nparticular that's to answer a question",
    "start": "20699",
    "end": "26910"
  },
  {
    "text": "that I did, vaguely, think about in my\nearly days of doing heavyweight, macho",
    "start": "26910",
    "end": "33960"
  },
  {
    "text": "calculations [on a computer] overnight. It's \neffectively: \"How does this stuff ever get printed out?\"",
    "start": "33960",
    "end": "39628"
  },
  {
    "text": "I thought, well, what's the biggest ratio\nbetween actual computation and fairly",
    "start": "39629",
    "end": "47550"
  },
  {
    "text": "quick printout that I can think of. Not my\nquantum calculations, they're",
    "start": "47550",
    "end": "52198"
  },
  {
    "text": "minor-league. Those of you who are familiar\nwith Douglas Adams and \"Hitchhiker's",
    "start": "52199",
    "end": "56160"
  },
  {
    "text": "Guide to the Galaxy\", which was made into\na BBC series here and also became a",
    "start": "56160",
    "end": "61890"
  },
  {
    "text": "movie, I think, will know that Douglas,\nwho was a very far-seeing guy, had this",
    "start": "61890",
    "end": "68010"
  },
  {
    "text": "idea of the ultimate computer called\nDeep Thought. It was [an idea] years ahead of its",
    "start": "68010",
    "end": "77460"
  },
  {
    "text": "time, because I'm pretty sure that Deep\nBlue - IBM's chess machine; Deep Mind - the AI",
    "start": "77460",
    "end": "82860"
  },
  {
    "text": "machine that's doing GO, is it, and so on.\nAnd you know Deep Learning,Deep",
    "start": "82860",
    "end": "87750"
  },
  {
    "text": "everything. I'm not at all sure it isn't all\ndown to Douglas Adams! \n>> Sean: I just have to",
    "start": "87750",
    "end": "93420"
  },
  {
    "text": "point out here that the ultimate\ncomputer was the Earth!\n>> DFB: Oh in the very end ... ?",
    "start": "93420",
    "end": "98070"
  },
  {
    "text": ">> Sean: And there will be some fans pointing out...I\n>> DFB: Oh! I see. Nevertheless, Deep Thought",
    "start": "98070",
    "end": "104369"
  },
  {
    "text": "was asked: \"Deep Thought: what is the\nanswer to Life the Universe and",
    "start": "104369",
    "end": "108600"
  },
  {
    "text": "Everything?: And several million years\nlater, presumably even with quantum assistance.",
    "start": "108600",
    "end": "113100"
  },
  {
    "text": "[Music]\n>> Deep Thought: \"You're really not going to like it!\"\n>> High Priests: \"Tell us!\"",
    "start": "113100",
    "end": "117020"
  },
  {
    "text": "The answer to Life the Universe and Everything is: \n[voices on film]\n42 42 42\n>> DFB: 42 ! And my first thought",
    "start": "117020",
    "end": "129530"
  },
  {
    "text": "when I was laughing out loud at that was, I\nthought: \"What's 42 in binary ?!\" Is there",
    "start": "129530",
    "end": "134990"
  },
  {
    "text": "something special about it? And, yeah, how\nwould you convert the binary string for 42",
    "start": "134990",
    "end": "140510"
  },
  {
    "text": "into being literally 4 and 2 on a\npiece of line-printer output?  42 in",
    "start": "140510",
    "end": "146180"
  },
  {
    "text": "binary is 101010.\nHow do we know that that's 42?",
    "start": "146180",
    "end": "156379"
  },
  {
    "text": "Well, starting at the right its powers of two.\nSo, 2^0 is units ,then 2s",
    "start": "156380",
    "end": "160760"
  },
  {
    "text": "then 4s then 8s then 16s and 32s.\nArmed with that knowledge we say OK",
    "start": "160760",
    "end": "166549"
  },
  {
    "text": "it's a 2 plus an 8 which is 10 plus a 32\nis 42. Pretty good look! A six-bit",
    "start": "166550",
    "end": "173269"
  },
  {
    "text": "representation for a 2-digit decimal\nnumber. But if you feed that into a",
    "start": "173269",
    "end": "180620"
  },
  {
    "text": "printer you're not going to get 42\nprinted out, because by and large they do",
    "start": "180620",
    "end": "185390"
  },
  {
    "text": "not interpret binary. So, where does the\nprintable form of '42' come from? And the",
    "start": "185390",
    "end": "192860"
  },
  {
    "text": "answer is it goes way back to the fact\nthat IBM and their computing machines -",
    "start": "192860",
    "end": "198500"
  },
  {
    "text": "way back at the start of the 20th\ncentury they were the Hollerith company. You",
    "start": "198500",
    "end": "205430"
  },
  {
    "text": "know, doing census details; controlling\nelections from punch cards and some IBM",
    "start": "205430",
    "end": "212540"
  },
  {
    "text": "early electronic computers I think - the\nIBM 650 was it? -  actually did work",
    "start": "212540",
    "end": "217370"
  },
  {
    "text": "internally on decimal. Just like Tommy Flowers \n[and Colossus]. I think they both used bi-quin.",
    "start": "217370",
    "end": "222019"
  },
  {
    "text": "But the pressure was on, from binary-based \nhardware to say: \"This [binary] is more",
    "start": "222019",
    "end": "229640"
  },
  {
    "text": "efficient by far. You'd be mad not to use\nit\". OK?,says IBM, but although it's got",
    "start": "229640",
    "end": "236480"
  },
  {
    "text": "to be a binary representation we want to\ndirectly link it to the decimal that",
    "start": "236480",
    "end": "242180"
  },
  {
    "text": "will ultimately be printed out.\nNow think about it, that's easy to do but",
    "start": "242180",
    "end": "247400"
  },
  {
    "text": "what would this binary-coded decimal be\nfor 42? Every decimal position can range",
    "start": "247400",
    "end": "254569"
  },
  {
    "text": "from 0 to 9. So, how many bits do we\nneed to represent 9? Well, we know that 3",
    "start": "254569",
    "end": "263539"
  },
  {
    "text": "bits isn't enough.  3 bits goes up to 111,\nwhich is 7, but you need a 8 and 9. So",
    "start": "263539",
    "end": "269000"
  },
  {
    "text": "you've got to go to that 4th bit. And you\nend up, of course, with 8 being 1000",
    "start": "269000",
    "end": "273350"
  },
  {
    "text": "and 9 being 1001. Ah! - I hear several\nof you saying - but you don't stop there, you",
    "start": "273350",
    "end": "280880"
  },
  {
    "text": "can go on to hexadecimal?!  And this is\nprecisely the thing with BCD. You must",
    "start": "280880",
    "end": "285350"
  },
  {
    "text": "*not* let it go over into the hexadecimal range\nfrom 10 - 16 [correction: 10 - 15] because the average",
    "start": "285350",
    "end": "294740"
  },
  {
    "text": "person wants their answers out in decimal - not in\nhexadecimal. So, here we go then. Look 0100",
    "start": "294740",
    "end": "301849"
  },
  {
    "text": "taken as a grouping of bits, on its\nown, that's nothing in the units column;",
    "start": "301850",
    "end": "309050"
  },
  {
    "text": "0 in the 2's column; 1 in the 4s\ncolumn; 0 in the 8s column. That",
    "start": "309050",
    "end": "314050"
  },
  {
    "text": "represents decimal 4. Right next door to\nit, is a separate 4-bit entity. If I write",
    "start": "314050",
    "end": "320030"
  },
  {
    "text": "down 0010 that represents a 2. In\nits simplest form that is what binary",
    "start": "320030",
    "end": "327740"
  },
  {
    "text": "coded decimal is. And you just use them\nin four-bit nibbles. Now we all know a",
    "start": "327740",
    "end": "332930"
  },
  {
    "text": "nibble is half a bite. A byte equals 8\nbits - well it does in the modern world.",
    "start": "332930",
    "end": "339020"
  },
  {
    "text": "So half a bite? Well, the name 'nibble' caught on for",
    "start": "339020",
    "end": "343340"
  },
  {
    "text": "obvious reasons. A nibble being a small\nbite and I'll use an 'i',  but some people",
    "start": "343340",
    "end": "349099"
  },
  {
    "text": "like to extend the joke as much as\npossible and actually spell nybble with",
    "start": "349099",
    "end": "353360"
  },
  {
    "text": "a 'y'. I don't mind! And then a nibble can\nhold a hex digit. You might say: Oh! well -",
    "start": "353360",
    "end": "358370"
  },
  {
    "text": "that's it then - \nif I fed 0100 down a serial line, into",
    "start": "358370",
    "end": "365599"
  },
  {
    "text": "a printer, it would cough into life and\nprint 4 ?\"  No. Not quite. But we're getting",
    "start": "365599",
    "end": "371780"
  },
  {
    "text": "close. Because what we've got to ask\nourselves is ...",
    "start": "371780",
    "end": "375479"
  },
  {
    "text": "this whole print-out thing is treating\ndecimal digits as characters. They're not",
    "start": "375479",
    "end": "382680"
  },
  {
    "text": "being thought of in their numeric sense\nat all. It's just any other character. It's",
    "start": "382680",
    "end": "386699"
  },
  {
    "text": "like an 'A', a 'B', a'Z', a '!'\nor whatever. The ASCII committee in the",
    "start": "386699",
    "end": "391439"
  },
  {
    "text": "1960s didn't just work in a\nvacuum. They knew what IBM - who they loved",
    "start": "391439",
    "end": "397650"
  },
  {
    "text": "and hated - had been doing for years. And\nit basically said: \"It is so much easier",
    "start": "397650",
    "end": "402569"
  },
  {
    "text": "if you base what's printed ultimately on\na BCD representation, but put a special",
    "start": "402569",
    "end": "411870"
  },
  {
    "text": "marker at the front of the BCD to pad it\nout to an 8-bit byte. But do it in such",
    "start": "411870",
    "end": "417900"
  },
  {
    "text": "a way that, in a sense, the codes that are\ngoing to do 0 - 9 are in a 'sensible' place.",
    "start": "417900",
    "end": "427649"
  },
  {
    "text": "Now, what does that mean. Well, let's do\nASCII first, even though historically",
    "start": "427649",
    "end": "431310"
  },
  {
    "text": "it was second. In ASCII the digits occupy\nfrom 30 (hexadecimal) to 39 (hexadecimal)",
    "start": "431310",
    "end": "443490"
  },
  {
    "text": "What it means is, if you have",
    "start": "443490",
    "end": "447839"
  },
  {
    "text": "got, shall we say this 4 (0100). That\nis your hex nibble for 4. All you have",
    "start": "447839",
    "end": "457948"
  },
  {
    "text": "to do, to make it printable, as an ASCII\n4, is to glue on the left hand end",
    "start": "457949",
    "end": "464419"
  },
  {
    "text": "hexadecimal three (which is the same as\ndecimal three) which  is 0011. So 0011",
    "start": "464419",
    "end": "473149"
  },
  {
    "text": "prepended to 0100 gives you an 8-bit\nentity which, if you fire that down at a",
    "start": "473149",
    "end": "479758"
  },
  {
    "text": "line printer it'll cough into action and \nprint a 4.",
    "start": "479759",
    "end": "482550"
  },
  {
    "text": "Notice that when I say \"glue on at the\nfront\", in order for it to be efficient",
    "start": "482550",
    "end": "487198"
  },
  {
    "text": "you don't want to be adding on something\nthat will cause carries, if you see",
    "start": "487199",
    "end": "492749"
  },
  {
    "text": "what I mean. You need to park it [the ASCII \nboundary where digits start] on a multiple of 16,",
    "start": "492749",
    "end": "497550"
  },
  {
    "text": "and then what will happen is that\nwhatever way you convert your 4 into",
    "start": "497550",
    "end": "504328"
  },
  {
    "text": "being 34 (hex) it will not cause ripple\ncarries, which are inefficient. OK, say the",
    "start": "504329",
    "end": "511639"
  },
  {
    "text": "IBM mainframe types. Why not (historically)\ntell the youth of today what IBM did originally?",
    "start": "511639",
    "end": "517849"
  },
  {
    "text": "Same idea! ASCII learned a lot from what",
    "start": "517849",
    "end": "521120"
  },
  {
    "text": "IBM did. In IBM EBCDIC you don't prepend\na 3 (0011 hex), you prepend an F (1111 hex)",
    "start": "521120",
    "end": "527839"
  },
  {
    "text": "But the principle is the same.\nYeah? it's cleanly on that boundary.",
    "start": "527839",
    "end": "533959"
  },
  {
    "text": "So, that's an absolute crucial fact in making \nBCD-to-printed-out-results be fast and",
    "start": "533960",
    "end": "541640"
  },
  {
    "text": "efficient. You need to be able to put\nsomething in there that's low cost",
    "start": "541640",
    "end": "545839"
  },
  {
    "text": "because you're going to be doing\nmillions of these BCD to ASCII/EBCDIC",
    "start": "545839",
    "end": "552110"
  },
  {
    "text": "conversions. So that is a very sort of\ncrucial fact to get hold of to try and",
    "start": "552110",
    "end": "557120"
  },
  {
    "text": "reduce the conversion burden before\nprint out. So, in many ways then that's",
    "start": "557120",
    "end": "563589"
  },
  {
    "text": "much of the story.\nIf you once got it into BCD then both",
    "start": "563589",
    "end": "569630"
  },
  {
    "text": "ASCII or (if you're still on IBM\nmainframes) EBCDIC, do make it easy for",
    "start": "569630",
    "end": "574220"
  },
  {
    "text": "you to get into a printable form very\nquickly. And of course the I/O routines",
    "start": "574220",
    "end": "578750"
  },
  {
    "text": "hidden underneath Fortran and C will be\nwell aware of this. Converting from pure",
    "start": "578750",
    "end": "584120"
  },
  {
    "text": "binary 101010 to 42 BCD (0100  0010),\nthey look very different! When you get",
    "start": "584120",
    "end": "598040"
  },
  {
    "text": "onto telling us how to do it, it's not\ngoing to be a cheap operation is it?",
    "start": "598040",
    "end": "602480"
  },
  {
    "text": "Because that's the hard bit. It's all\nvery well saying [that] getting from BCD to ASCIIk",
    "start": "602480",
    "end": "606829"
  },
  {
    "text": "is a piece of cake, but what about getting\nfrom binary to BCD? And the answer is",
    "start": "606830",
    "end": "611660"
  },
  {
    "text": "there's bound to be overheads there and\nit's bound to be something that you",
    "start": "611660",
    "end": "615110"
  },
  {
    "text": "probably want to eliminate?\nAnd to that effect, some people in the",
    "start": "615110",
    "end": "622550"
  },
  {
    "text": "commercial computing set-up said:\n\"Look, binary to BCD will turn out to be",
    "start": "622550",
    "end": "627290"
  },
  {
    "text": "expensive. Tell you what - If what we do is totally \ntrivial [arithmetically] and really isn't rocket",
    "start": "627290",
    "end": "632930"
  },
  {
    "text": "science, wouldn't we be better off to try\nand devise software, or",
    "start": "632930",
    "end": "638209"
  },
  {
    "text": "even hardware assistance circuits, to do\nall the arithmetic on a BCD notation?",
    "start": "638209",
    "end": "646368"
  },
  {
    "text": "Never convert it into pure binary! Because\nif all you're doing is adding up how",
    "start": "646369",
    "end": "650689"
  },
  {
    "text": "many voters in, y'know, Norwalk County\nor something, have voted for such-and-such,",
    "start": "650689",
    "end": "656540"
  },
  {
    "text": "you don't need all these huge great\nbinary things that numerical analysts use",
    "start": "656540",
    "end": "662990"
  },
  {
    "text": "You're just counting numbers. And even\nif you're looking at somebody's balance,",
    "start": "662990",
    "end": "667670"
  },
  {
    "text": "in dollars and cents, surely that's\nsimple enough arithmetic. It's better to",
    "start": "667670",
    "end": "673368"
  },
  {
    "text": "perhaps pay a little penalty for doing\nBCD arithmetic because you can overcome",
    "start": "673369",
    "end": "679100"
  },
  {
    "text": "that penalty, a bit, by having specialized\nhardware. Why not do it all in BCD and",
    "start": "679100",
    "end": "684410"
  },
  {
    "text": "then you don't have the binary to BCD\noverhead? All you have to do after you've",
    "start": "684410",
    "end": "691100"
  },
  {
    "text": "done your BCD arithmetic is slip a FFFF\n[correction: 1111] on the front end if it's EBCDIC",
    "start": "691100",
    "end": "695329"
  },
  {
    "text": "a 3 (hexadecimal) if its ASCII, and that's it.\n[It] prints out. There is one",
    "start": "695329",
    "end": "700490"
  },
  {
    "text": "classic one where you really can pick up\nthat it's very advantageous to do it in",
    "start": "700490",
    "end": "705679"
  },
  {
    "text": "BCD. If you think about the number 0.10,\nwhich might represent ten",
    "start": "705679",
    "end": "712790"
  },
  {
    "text": "cents shall we say. You know, your \nbank account's been drained down. It's",
    "start": "712790",
    "end": "716569"
  },
  {
    "text": "down to its last 10 cents. So here\nyou've got 0.10.",
    "start": "716569",
    "end": "722209"
  },
  {
    "text": "That's .1 (in decimal). What is it in\nbinary?  Oh dear!",
    "start": "722209",
    "end": "729139"
  },
  {
    "text": "You look at what it is in binary:\n[looks at notes] 0.000110011001100 .... ",
    "start": "729139",
    "end": "737149"
  },
  {
    "text": "And it goes on for ever! There is no\nexact representation of .1 (decimal)",
    "start": "737149",
    "end": "744410"
  },
  {
    "text": "as a binary expansion. It just doesn't\nstop. And accountants and actuaries get",
    "start": "744410",
    "end": "750498"
  },
  {
    "text": "paranoid about that: \"Oh! I know it'll\nnever happen but I hate the idea that",
    "start": "750499",
    "end": "756819"
  },
  {
    "text": "the rounding might go wrong and\nimy client's balance might drop to",
    "start": "756819",
    "end": "762949"
  },
  {
    "text": "9 cents instead of 10 cents (!) \nHow about some other examples of things that use",
    "start": "762949",
    "end": "767329"
  },
  {
    "text": "BCD, just to finish off with? I don't know\nif I've got it here ...",
    "start": "767329",
    "end": "771649"
  },
  {
    "text": "to dig it out of there, Sean. eventually\n[reaches for desk drawer] \nIt's a little [electronic] hand calculator. What better",
    "start": "771649",
    "end": "776990"
  },
  {
    "text": "place to use BCD? It's utterly display-\ndominated. Apart from things like square",
    "start": "776990",
    "end": "783410"
  },
  {
    "text": "root - that's probably about the most\ncomplex thing that you can ask a simple",
    "start": "783410",
    "end": "787040"
  },
  {
    "text": "four-function calculator to do. But\nmostly it's additions, subtractions",
    "start": "787040",
    "end": "791678"
  },
  {
    "text": "simple divides and so on. They\nuse BCD! Another example of simple",
    "start": "791679",
    "end": "800119"
  },
  {
    "text": "devices [that] you see in a shopping mall, or\nwhatever, that could use BCD. Digital",
    "start": "800119",
    "end": "804949"
  },
  {
    "text": "clocks. It makes eminent sense to use BCD",
    "start": "804949",
    "end": "808069"
  },
  {
    "text": "because it's the display, and the change\nin the display, is happening all the",
    "start": "808069",
    "end": "813019"
  },
  {
    "text": "time - every second = but the actual\nincrementing is trivial. You don't need",
    "start": "813019",
    "end": "819259"
  },
  {
    "text": "to convert into binary to add one second\nto a digital display,",
    "start": "819259",
    "end": "824089"
  },
  {
    "text": "you really don't. Live with the BCD. Focus\non the display, because that's what",
    "start": "824089",
    "end": "829579"
  },
  {
    "text": "matters above all else. i",
    "start": "829579",
    "end": "834860"
  }
]