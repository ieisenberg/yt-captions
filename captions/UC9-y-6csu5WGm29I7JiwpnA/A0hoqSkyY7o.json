[
  {
    "start": "0",
    "end": "27000"
  },
  {
    "text": "In computing terms, what often people refer to JSON now is JavaScript object notation",
    "start": "89",
    "end": "4379"
  },
  {
    "text": "So... It's a way of representing arbitrary data in an ASCII format that can be easily",
    "start": "5340",
    "end": "12340"
  },
  {
    "text": "transferred over the internet that can be stored on disk and things in a way they can be processed by most programming languages",
    "start": "12480",
    "end": "20640"
  },
  {
    "text": "Cool, end of video. \nYeah",
    "start": "22680",
    "end": "24680"
  },
  {
    "start": "27000",
    "end": "107000"
  },
  {
    "text": "So, why do we need something like JSON? Computers are great at storing data and they're great at processing data. The problem with computers",
    "start": "27160",
    "end": "34560"
  },
  {
    "text": "and data is",
    "start": "34800",
    "end": "36280"
  },
  {
    "text": "The format of how data is represented is fixed by the program that's been written",
    "start": "36460",
    "end": "41660"
  },
  {
    "text": "it's fixed by the architecture of the machine that's doing it and if you try and transfer that from one machine",
    "start": "41660",
    "end": "48420"
  },
  {
    "text": "to another machine, if they're the same type and running the same software it will work great",
    "start": "48640",
    "end": "53200"
  },
  {
    "text": "But if you say got a piece of data that you've created on your Sun workstation and you try and transfer it to your",
    "start": "53620",
    "end": "60540"
  },
  {
    "text": "say... IBM PC or your Intel Mac?",
    "start": "60620",
    "end": "64199"
  },
  {
    "text": "Then there's a good chance that they will interpret the data in different ways",
    "start": "64560",
    "end": "68659"
  },
  {
    "text": "we talked about Endianness in another video as a classic example of how",
    "start": "68670",
    "end": "71368"
  },
  {
    "text": "Sometimes a computer store data in a different way to another.",
    "start": "71740",
    "end": "74700"
  },
  {
    "text": "So what JSON gives you is a way of representing arbitrary data structures",
    "start": "74860",
    "end": "79420"
  },
  {
    "text": "That are sort of free from the programs that are represent— that are representing them",
    "start": "79920",
    "end": "85100"
  },
  {
    "text": "XML does something similar, the \"extensible markup language\". The advantage of JavaScript is",
    "start": "85320",
    "end": "90620"
  },
  {
    "text": "It's lighter weight in some ways",
    "start": "90880",
    "end": "92520"
  },
  {
    "text": "and things although that's perhaps less of an issue because it can always be compressed but",
    "start": "92590",
    "end": "96570"
  },
  {
    "text": "It helps but also obviously if you're processing it on the web in JavaScript, JavaScript object notation uses the same parser",
    "start": "96700",
    "end": "104119"
  },
  {
    "text": "as JavaScript as a programming language.",
    "start": "104820",
    "end": "107000"
  },
  {
    "start": "107000",
    "end": "242000"
  },
  {
    "text": "So what does JavaScript object notation have?",
    "start": "107200",
    "end": "109719"
  },
  {
    "text": "The two main things it may have is an object",
    "start": "109720",
    "end": "111720"
  },
  {
    "text": "which will map a string to some sort of value",
    "start": "111760",
    "end": "115060"
  },
  {
    "text": "And Brian Kernighan had talked about this in another video where he covered hash tables",
    "start": "115080",
    "end": "118540"
  },
  {
    "text": "it's exactly the same sort of thing.",
    "start": "118540",
    "end": "119880"
  },
  {
    "text": "So we can have a",
    "start": "119880",
    "end": "121439"
  },
  {
    "text": "Object and they're represented by a curly brace and then we have the string",
    "start": "121560",
    "end": "125600"
  },
  {
    "text": "so let's say name and that maps to a value and let's have another string that says Shawn and then we can have another",
    "start": "125600",
    "end": "131620"
  },
  {
    "text": "key in there, let's say birthday and that maps to",
    "start": "131960",
    "end": "135300"
  },
  {
    "text": "Let's just put 42 there, and so on",
    "start": "135820",
    "end": "138140"
  },
  {
    "text": "And we can have as many of these as we like. This value we can have here can be any",
    "start": "138160",
    "end": "142580"
  },
  {
    "text": "other JavaScript thing so it can be a number it can be a string",
    "start": "142660",
    "end": "146020"
  },
  {
    "text": "It can also be another object. So we could have something that says",
    "start": "146080",
    "end": "149860"
  },
  {
    "text": "\"children\" and then that could be an object there which maps say the name of your children to some details about them",
    "start": "150140",
    "end": "158100"
  },
  {
    "text": "That works you can nest them like that, but children",
    "start": "158200",
    "end": "161459"
  },
  {
    "text": "Tend to be an ordered collection you tend to have them one after the other",
    "start": "161800",
    "end": "166140"
  },
  {
    "text": "So we also have the ability to represent ordered things using an arrays and then we can have a series of things there",
    "start": "166300",
    "end": "173040"
  },
  {
    "text": "So the difference between an object and array is an object maps a key to a value",
    "start": "173050",
    "end": "179439"
  },
  {
    "text": "whereas an array",
    "start": "180020",
    "end": "181550"
  },
  {
    "text": "specifies an ordered collection of things they have this idea that this one comes after this one. So they have a",
    "start": "181550",
    "end": "185480"
  },
  {
    "text": "numerical index and we specify an order. Objects don't have a numerical order. So in this case we would have",
    "start": "185780",
    "end": "192100"
  },
  {
    "text": "children, so the first one, let's call that one",
    "start": "193020",
    "end": "195620"
  },
  {
    "text": "Alice and then we've got another one. Let's call that one Bob and then he has a third one. I don't know",
    "start": "196040",
    "end": "203000"
  },
  {
    "text": "Let's think that one could be called... let's go with Charlie.",
    "start": "203000",
    "end": "206780"
  },
  {
    "text": "and you might have a fourth one, which would be called Derrick and the fifth one which might be called",
    "start": "207000",
    "end": "212340"
  },
  {
    "text": "Esmeralda and so on. So we can have an ordered collection of things and so we can build up",
    "start": "212840",
    "end": "219340"
  },
  {
    "text": "any arbitrary structure",
    "start": "219600",
    "end": "221280"
  },
  {
    "text": "And of course the thing to remember is that you don't have to use JavaScript to use this — JavaScript object notation to do this",
    "start": "221440",
    "end": "227680"
  },
  {
    "text": "But it helps and it's become very popular doing this as we said, it's lightweight",
    "start": "227840",
    "end": "231560"
  },
  {
    "text": "You can remove the white space and things and you can you parse it relatively simply and if you're doing in JavaScript",
    "start": "231560",
    "end": "237340"
  },
  {
    "text": "So it's become very common on the web but also to transfer data between any other sort of programs.",
    "start": "237340",
    "end": "242780"
  },
  {
    "text": "Here, we've said that your children is a list of",
    "start": "242780",
    "end": "245660"
  },
  {
    "text": "strings",
    "start": "245980",
    "end": "246739"
  },
  {
    "text": "We could have specified that they are actually objects. And so Alice could really, let's just push this on to another good paper",
    "start": "246739",
    "end": "254139"
  },
  {
    "text": "So we've got what we had before we've got kids",
    "start": "255170",
    "end": "258428"
  },
  {
    "text": "I guess gotta abbreviate and that maps to an array and this time we're going to have an object here inside the array",
    "start": "258429",
    "end": "265620"
  },
  {
    "text": "which has got a name which maps your name to Alice and then",
    "start": "265920",
    "end": "270720"
  },
  {
    "text": "that could also have what else we have in the object. We had a birthday,",
    "start": "271200",
    "end": "276100"
  },
  {
    "text": "again, I'm abbreviating... which you can't do in JavaScript. Because it would be a different key and we'll put that to be 56",
    "start": "276660",
    "end": "283520"
  },
  {
    "text": "And then of course",
    "start": "283840",
    "end": "284770"
  },
  {
    "text": "She could have some children or kids and then we'd have an array of more objects and so on",
    "start": "284770",
    "end": "292940"
  },
  {
    "text": "and then eventually that ends that object and then we could get around to",
    "start": "293500",
    "end": "299180"
  },
  {
    "text": "Doing Bob and so on",
    "start": "299680",
    "end": "302400"
  },
  {
    "text": "And so on like that, so yeah, you can build up complicated structures in that way. But mainly it's a file transfer format, yeah",
    "start": "304840",
    "end": "311280"
  },
  {
    "text": "Yeah, it's exactly what it's used for. It's used for transferring data",
    "start": "311640",
    "end": "315200"
  },
  {
    "text": "in a way that is pretty much",
    "start": "315200",
    "end": "317960"
  },
  {
    "text": "agnostic to the programming language being used because you can represent pretty much any arbitrary structure you'd like in there",
    "start": "318400",
    "end": "323400"
  },
  {
    "text": "Representing graph like structures where you've got links from one to the other would become interesting",
    "start": "323660",
    "end": "328400"
  },
  {
    "text": "It's not the only format. The structure of this is very very similar to the structure that's inside a PDF file.",
    "start": "328400",
    "end": "333040"
  },
  {
    "text": "It has dictionaries which maps",
    "start": "333200",
    "end": "335900"
  },
  {
    "text": "keys or names rather than the strings to values and it has arrays and so on so there are other structures a very very similar",
    "start": "336120",
    "end": "343380"
  },
  {
    "text": "but it's just become common to transfer these things over the web.",
    "start": "343560",
    "end": "346680"
  },
  {
    "text": "So the first one let's call that one",
    "start": "347820",
    "end": "349960"
  },
  {
    "text": "Alice and then we've got another one. Let's call that one Bob",
    "start": "350589",
    "end": "354388"
  },
  {
    "text": "How did you know my children's names?",
    "start": "354909",
    "end": "356759"
  },
  {
    "text": "we keep watching videos about them with Mike.\n \nBecause it's fairly common and then we'll talk about",
    "start": "356759",
    "end": "360359"
  },
  {
    "text": "Differences with say one password what LastPass will do is it will produce a master password by a pet...",
    "start": "360430",
    "end": "365849"
  }
]