[
  {
    "text": "We're basically using the EDSAC as a\nclassic example of a very early von",
    "start": "0",
    "end": "4830"
  },
  {
    "text": "Neumann computer. And to the great\ncredit of Cambridge, I mean, they did get",
    "start": "4830",
    "end": "9150"
  },
  {
    "text": "it working by, I think it was April-May\n1949, something like that. And it went on",
    "start": "9150",
    "end": "17369"
  },
  {
    "text": "to great glory afterwards and\ncalculations on there, from many",
    "start": "17369",
    "end": "20970"
  },
  {
    "text": "Cambridge scientists ... I mean it's no\nexaggeration to say Nobel Prizes were",
    "start": "20970",
    "end": "24509"
  },
  {
    "text": "won because of the availability of \nEDSAC in all sorts of areas.",
    "start": "24510",
    "end": "31769"
  },
  {
    "text": "We're going to take a look and try and\nanswer this question of: \"How on earth do you get this",
    "start": "31769",
    "end": "37590"
  },
  {
    "text": "wretched EDSAC to boot up ?!\" And with\nthe help of Martin Campbell-Kelly's",
    "start": "37590",
    "end": "42660"
  },
  {
    "text": "emulator we're going to be able\nto show you something of that, because",
    "start": "42660",
    "end": "47878"
  },
  {
    "text": "what I want to do is to describe how the\ninitial boot programs ... first stab at it",
    "start": "47879",
    "end": "55680"
  },
  {
    "text": "was called Initial Orders I, ssecond stab\nwas called Initial Orders II -",
    "start": "55680",
    "end": "59430"
  },
  {
    "text": "written by a really bright guy who was\nthe PhD student of Maurice Wilkes (who led",
    "start": "59430",
    "end": "66390"
  },
  {
    "text": "the EDSAC team of course). That chap's\nname was David Wheeler - a really nice",
    "start": "66390",
    "end": "70380"
  },
  {
    "text": "chap. I did know him, only slightly, but\nhe was fearfully bright and always good",
    "start": "70380",
    "end": "75930"
  },
  {
    "text": "for a chat about low-level issues like\nthis, about how did you get this wretched",
    "start": "75930",
    "end": "81630"
  },
  {
    "text": "thing to work given that, I suspect -\ninherited on EDSAC but feeding back into",
    "start": "81630",
    "end": "89368"
  },
  {
    "text": "early things, again, like Tommy Flowers'\n\"Colossus\" -  how do you get a bit",
    "start": "89369",
    "end": "94409"
  },
  {
    "text": "pattern in here to tell it what to\ndo? Because if you once get the bit",
    "start": "94409",
    "end": "98310"
  },
  {
    "text": "pattern in, the electronics the logic and\neverything inside it will execute it",
    "start": "98310",
    "end": "103290"
  },
  {
    "text": "correctly, that will have been checked\nout, but how do you get the wretched",
    "start": "103290",
    "end": "106200"
  },
  {
    "text": "things in? And the answer certainly on\nthe Colossus machine was you used a set",
    "start": "106200",
    "end": "111600"
  },
  {
    "text": "of what were called Uniselectors to\nset up the 1s and 0s. And by having",
    "start": "111600",
    "end": "116969"
  },
  {
    "text": "enough Uniselectors plus usually a\nsort of `load' lever, to load it into the",
    "start": "116969",
    "end": "122610"
  },
  {
    "text": "current location in memory. Then you had\nto have an automated way inside the",
    "start": "122610",
    "end": "126509"
  },
  {
    "text": "hardware of stepping on to the next word\nto be loaded.",
    "start": "126509",
    "end": "131220"
  },
  {
    "text": "People like me didn't use Uniselectors\nbut learnt this when you booted up an",
    "start": "131220",
    "end": "136629"
  },
  {
    "text": "early PDP-11, even as late as the 60s and 70s.",
    "start": "136629",
    "end": "140620"
  },
  {
    "text": "It wasn't Uniselectors, it was hand-\nkeys on [the] front of the panel. I  think we've",
    "start": "140620",
    "end": "144280"
  },
  {
    "text": "shown those once or twice [in previous videos]. \nSame thing: \"up\" for a \"1\"; down for a \"0\"zero; \nboom boom boom",
    "start": "144280",
    "end": "148989"
  },
  {
    "text": "boom  - Load.  another pattern; Load; another\npattern; Load. It's bad enough loading up a",
    "start": "148989",
    "end": "156670"
  },
  {
    "text": "little boot program. It's unthinkable to\nload in an entire multi-kilobyte program",
    "start": "156670",
    "end": "161950"
  },
  {
    "text": "that way. But on the basis of hand\nswitches and Uniselectors in this case,",
    "start": "161950",
    "end": "167920"
  },
  {
    "text": "yes, these wonderful Initial Orders II\nand Initial Orders I were loaded in",
    "start": "167920",
    "end": "174250"
  },
  {
    "text": "from Uniselectors. Once you've\ndownloaded Martin's emulator, it comes",
    "start": "174250",
    "end": "178720"
  },
  {
    "text": "with a Tutorial Guide and it makes it\nvery clear in there that, on the actual",
    "start": "178720",
    "end": "182860"
  },
  {
    "text": "EDSAC, when you want you to load\nInitial Orders you just press a button !",
    "start": "182860",
    "end": "186970"
  },
  {
    "text": ">> Andy Herbert - [director EDSAC rebuild project]\n\"John is working here on the Uniselector units I \ntalked about the boot",
    "start": "186970",
    "end": "193150"
  },
  {
    "text": "ROM or the Initial Instructions. Those\nare coded by how he's wired up these Uniselectors.",
    "start": "193150",
    "end": "198700"
  },
  {
    "text": "When the operator presses the\nstart button a rotor spins in here and",
    "start": "198700",
    "end": "204579"
  },
  {
    "text": "as it passes each set of contacts that\ngets injected into the memory to download",
    "start": "204579",
    "end": "209019"
  },
  {
    "text": "the program\". \n>> DFB: To give some idea - the Initial Orders,\n I think, were about 42 words !",
    "start": "209019",
    "end": "215280"
  },
  {
    "text": "Not 42K. Not 42 Meg - like it might be on\na modern BIOS - 42 words! Because memory",
    "start": "215280",
    "end": "224169"
  },
  {
    "text": "was fantastically precious.  \n>> Sean: What was a `word' then? Is that a 16-bit ....",
    "start": "224169",
    "end": "229150"
  },
  {
    "text": ">> DFB: Well, actually it was 18 bits in EDSAC but,\nbasically, yeah. An 18-bit word could be",
    "start": "229150",
    "end": "236859"
  },
  {
    "text": "loaded in and you could load the whole\nthing in by hand. But you wouldn't want",
    "start": "236859",
    "end": "241209"
  },
  {
    "text": "to! So, here's the challenge then, there's\nall this memory here, in mercury,",
    "start": "241209",
    "end": "246510"
  },
  {
    "text": "available. What you want is something\nsitting down at the bottom of memory to",
    "start": "246510",
    "end": "253510"
  },
  {
    "text": "help you get bit patterns in - off paper\ntape. OK? So that will be your boot",
    "start": "253510",
    "end": "259599"
  },
  {
    "text": "program now that's the kind of thing sitting",
    "start": "259599",
    "end": "262430"
  },
  {
    "text": "in low memory which nowadays is the BIOS.\nAnd it's a heck of a sight more",
    "start": "262430",
    "end": "265970"
  },
  {
    "text": "complicated than the Initial Orders I.\nSo, what David Wheeler for Initial",
    "start": "265970",
    "end": "271610"
  },
  {
    "text": "Orders I - just to get us started - early\n1949: \"I will write a set of Initial",
    "start": "271610",
    "end": "277099"
  },
  {
    "text": "Orders that sits there, all the time. And\nother people's tapes that come along, I",
    "start": "277100",
    "end": "282280"
  },
  {
    "text": "want to say two things to them: first of\nall please do not trample all over my",
    "start": "282280",
    "end": "287060"
  },
  {
    "text": "Initial Orders that have been pre-loaded.\nDon't go into very low memory addresses,",
    "start": "287060",
    "end": "291889"
  },
  {
    "text": "like zero, and start trying to overwrite\nit - this will] kill the program stone-dead.",
    "start": "291889",
    "end": "296960"
  },
  {
    "text": "But starting from, I think, he finished at 42\nwith his Initial Orders. But to allow for",
    "start": "296960",
    "end": "302870"
  },
  {
    "text": "future expansion I think the\nrecommendation was to start off at location",
    "start": "302870",
    "end": "307490"
  },
  {
    "text": "64 in memory? 64 and above. you put your\nprogram there.",
    "start": "307490",
    "end": "312080"
  },
  {
    "text": "I will now help you load it because when\nyou put your paper tape in, it will be my",
    "start": "312080",
    "end": "318770"
  },
  {
    "text": "Initial Orders I that is asking to\nread your tape, character by character.",
    "start": "318770",
    "end": "323470"
  },
  {
    "text": "OK? And initially, in Initial Orders I,\nhe said, I will do the following. If you",
    "start": "323470",
    "end": "329599"
  },
  {
    "text": "type `A', I know that A is a certain bit\npattern meaning ADD and I will put that",
    "start": "329599",
    "end": "335240"
  },
  {
    "text": "in the correct field of the correct word\nfor you. You may then want to write an",
    "start": "335240",
    "end": "342949"
  },
  {
    "text": "explicit decimal number to be added, like\n10.  To save your brain I will translate",
    "start": "342949",
    "end": "350510"
  },
  {
    "text": "your decimal numbers in your\ninstructions into binary. So there's two",
    "start": "350510",
    "end": "354979"
  },
  {
    "text": "things I'm doing for you: I'm\ntranslating the opcode; I'm translating",
    "start": "354979",
    "end": "360460"
  },
  {
    "text": "obviously decimal numbers into binary\nand I am keeping track of where I'm",
    "start": "360460",
    "end": "365300"
  },
  {
    "text": "loading them for you into memory, I will\nstart - if you say start at 64 I'll start",
    "start": "365300",
    "end": "371300"
  },
  {
    "text": "at 64 - and I'll put them in successively,\none after the other. \n>> Sean: So far it sounds to",
    "start": "371300",
    "end": "376490"
  },
  {
    "text": "me like he's doing the job of a modern\nCPU with registers and an interpreter to",
    "start": "376490",
    "end": "381080"
  },
  {
    "text": "interpret the code ... ?\n>> DFB: Yeah, it's like a very\nelementary assembler but whereas with",
    "start": "381080",
    "end": "385879"
  },
  {
    "text": "assembly it's a two-pass process: you run\nthe assembler - then you've got your binary.",
    "start": "385880",
    "end": "388820"
  },
  {
    "text": "Here you're using assembly codes\nto make your own binary on-the-fly",
    "start": "388820",
    "end": "394790"
  },
  {
    "text": ">> Sean: Is this the great-grandfather of the \noperating system then?\n>> DFB: Oh yeah",
    "start": "394790",
    "end": "397970"
  },
  {
    "text": "The great-great-great-grandfather of the\noperating system!   First of all we are",
    "start": "397970",
    "end": "401900"
  },
  {
    "text": "starting with a loader because that's\nall this is. It loads into memory but",
    "start": "401900",
    "end": "406280"
  },
  {
    "text": "it's very crude, Initial Orders I, right?\nWhat drove people mad about it was that",
    "start": "406280",
    "end": "412510"
  },
  {
    "text": "unfortunately you had to be in control\nof your [absolute] addresses. Because if your",
    "start": "412510",
    "end": "417410"
  },
  {
    "text": "program said \"jump to location 70\" -  you\nstarted at 64, fine, but what happens if you",
    "start": "417410",
    "end": "424910"
  },
  {
    "text": "want to intervene [insert] a few more orders \n- a few more instructions - between 64 and 70?",
    "start": "424910",
    "end": "432190"
  },
  {
    "text": "You've got to [potentially] alter all the\naddresses in your program. Because what",
    "start": "432190",
    "end": "436580"
  },
  {
    "text": "was at 70 - where you wanted to go to - is\nnow at 76. So you've got to go and say:",
    "start": "436580",
    "end": "441349"
  },
  {
    "text": "\"Don't jump to 70, jump to 76\". So, although\nit was a loader it couldn't do anything",
    "start": "441350",
    "end": "448130"
  },
  {
    "text": "much about being at all adaptive, or\nhelping you to *relocate*,  as it was called.",
    "start": "448130",
    "end": "454040"
  },
  {
    "text": "So, this was realized very quickly - that\nany alteration to your program involved",
    "start": "454040",
    "end": "459980"
  },
  {
    "text": "changing all your addresses on the tape.\nSo, Initial Orders II:  David Wheeler",
    "start": "459980",
    "end": "464680"
  },
  {
    "text": "became celebrated throughout the computer\nscience world for this. He only in his",
    "start": "464680",
    "end": "469789"
  },
  {
    "text": "life ever published 11 papers, did David, \nbut he was still an FRS [Fellow of the Royal Society].",
    "start": "469790",
    "end": "474950"
  },
  {
    "text": "That's how much he was rated I remember meeting\nDon Knuth saying, you know, who have",
    "start": "474950",
    "end": "480590"
  },
  {
    "text": "you met recently? What have you been doing?\nI said \"I saw David Wheeler\". \"Not D.J. Wheeler?!\" he",
    "start": "480590",
    "end": "485960"
  },
  {
    "text": "said. You know: R-E-S-P-E-C-T ! Initial Orders II !\nI mean, yes, David was really celebrated",
    "start": "485960",
    "end": "493819"
  },
  {
    "text": "for this. It seems obvious now but it\ncertainly was not obvious at the time.",
    "start": "493820",
    "end": "498470"
  },
  {
    "text": "Everybody: \"Wow - your Initial Orders II - is \ngoing to help",
    "start": "498470",
    "end": "503240"
  },
  {
    "text": "us be able to alter the program. And just\nfeed the tape in again without changing",
    "start": "503240",
    "end": "511280"
  },
  {
    "text": "all of the addresses! All we have to do is\nto change the load point [base address] at the top,",
    "start": "511280",
    "end": "517430"
  },
  {
    "text": "say, or something like that.\nMaybe we don't want to put it at 64, we",
    "start": "517430",
    "end": "522289"
  },
  {
    "text": "want to put it somewhere else. But what\nDavid Wheeler said was:",
    "start": "522290",
    "end": "528230"
  },
  {
    "text": "So long as you, throughout your orders,\nindicate and flag up to me the addresses",
    "start": "528230",
    "end": "536839"
  },
  {
    "text": "that will need changing. I will keep\ntrack of them and I will alter them for you.",
    "start": "536840",
    "end": "541940"
  },
  {
    "text": ">> Sean: Are these like variables then?\n>> DFB: Yeah! They ... basically it was doing what",
    "start": "541940",
    "end": "548630"
  },
  {
    "text": "modern assemblers can do anyway, but very\nearly on. Saying no matter where you",
    "start": "548630",
    "end": "553220"
  },
  {
    "text": "choose to place this in memory. you might\nwant to put it at 128 or",
    "start": "553220",
    "end": "557810"
  },
  {
    "text": "256, or anywhere. Just tell me and I\nwill load it there. And I will fix up all",
    "start": "557810",
    "end": "562310"
  },
  {
    "text": "the addresses. You can just sort of say,\nlike, 0, 1, 2 if you like. But I will",
    "start": "562310",
    "end": "567529"
  },
  {
    "text": "add on 64 to them, or 128 added\non, or whatever you want. All you must",
    "start": "567530",
    "end": "572810"
  },
  {
    "text": "do is flag up to me the addresses that\nneed to be altered - in a special way that",
    "start": "572810",
    "end": "578270"
  },
  {
    "text": "my Initial Orders understand. And it just\nrevolutionized the use of EDSAC because",
    "start": "578270",
    "end": "584500"
  },
  {
    "text": "what, of course, every computer scientist\nwants to do - and admittedly this was not",
    "start": "584500",
    "end": "590810"
  },
  {
    "text": "done in 1949 it was done recently - is get\nyour computer to say \"Hello World\".",
    "start": "590810",
    "end": "595010"
  },
  {
    "text": "Well, there's a contributed program here [for the\nsimulator] that, for the sake of brevity, just gets it to",
    "start": "595010",
    "end": "599750"
  },
  {
    "text": "say \"HI\". And perhaps you want to run \"HI\"\nfirst and then say: \"How the heck does",
    "start": "599750",
    "end": "605540"
  },
  {
    "text": "Initial Orders II enable this to be\nloaded in and to work correctly?\" So, here",
    "start": "605540",
    "end": "610610"
  },
  {
    "text": "we go then. This is the program that we'll\nfirst of all load, when I say \"Start\". ",
    "start": "610610",
    "end": "617720"
  },
  {
    "text": "\"Start\" loads the program that is showing in your\nwindow on the left. It has loaded in the",
    "start": "617720",
    "end": "622279"
  },
  {
    "text": "\"HI\" program. However with my \nfading memory of EDSAC codes I can see",
    "start": "622280",
    "end": "627530"
  },
  {
    "text": "that the third instruction, ZF, means\n\"Stop\". That was a very common trick to use",
    "start": "627530",
    "end": "633650"
  },
  {
    "text": "in an EDSAC program, is make it stop in\nits execution, early on. Because then you",
    "start": "633650",
    "end": "639950"
  },
  {
    "text": "can check in your peep...  - your peephole\ninto the tanks. Does it look plausible?",
    "start": "639950",
    "end": "644360"
  },
  {
    "text": "Does all of this stuff here look like a\nbinary interpretation of all your",
    "start": "644360",
    "end": "649850"
  },
  {
    "text": "elementary assembler op-codes? \n>> Sean: And people would know what to see?\n>> DFB: Oh! they know what",
    "start": "649850",
    "end": "654019"
  },
  {
    "text": "to see. Oh yes! you can look in there saying: \n\"Ooh! looks like an ADD instruction to me!\"",
    "start": "654020",
    "end": "658180"
  },
  {
    "text": "Yes, so there we are. Now that's\nstopped here but what you can now do is",
    "start": "658180",
    "end": "665110"
  },
  {
    "text": "to single-shot it. Those of you, again\nin assembler will know, you often have a",
    "start": "665110",
    "end": "669730"
  },
  {
    "text": "single-shot capability for debugging.\n>> Sean: This is like a step through is it?",
    "start": "669730",
    "end": "673870"
  },
  {
    "text": ">> DFB: Yeah! just to step through. But with a bit of luck -\nSingle EP. Ah! got a cursor now! ",
    "start": "673870",
    "end": "680020"
  },
  {
    "text": "If I \"Single EP\" again, look, it's printing the\nletter `H'. Single-shot again, `HI'. So I think",
    "start": "680020",
    "end": "687760"
  },
  {
    "text": "one of the exercises in Martin's\ninstructions - I encourage you all to do",
    "start": "687760",
    "end": "690970"
  },
  {
    "text": "it - just to get it to actually say \"HELLO\nWORLD\". Just make a bit longer. But here,",
    "start": "690970",
    "end": "695290"
  },
  {
    "text": "when we look at the program, we can see\nan awful lot of what is actually",
    "start": "695290",
    "end": "700199"
  },
  {
    "text": "happening here. It's saying \"Stop\" but then\nit goes on to actually outputting the",
    "start": "700200",
    "end": "706930"
  },
  {
    "text": "message. How does it do it? It uses an `O'\n(output) instruction. And that is part of",
    "start": "706930",
    "end": "713589"
  },
  {
    "text": "the EDSAC opcode. It basically means\n\"punch this to tape\", which is the way it",
    "start": "713589",
    "end": "717670"
  },
  {
    "text": "would have come out initially. With this\n@ symbol - that was one of the signals to",
    "start": "717670",
    "end": "722680"
  },
  {
    "text": "David Wheeler's Initial Orders. This is a\nrelative address not an absolute one, and",
    "start": "722680",
    "end": "729070"
  },
  {
    "text": "I want you to adjust it for me.\nAnd because, right at the top, we've said",
    "start": "729070",
    "end": "734230"
  },
  {
    "text": "T 64 K - for assembler programmers that's\nlike saying ORG = 64, in many",
    "start": "734230",
    "end": "741339"
  },
  {
    "text": "assemblers.  But here its starting point\nis 64. But look at this",
    "start": "741339",
    "end": "746320"
  },
  {
    "text": "`O5@'  means output the thing that\nis five locations beyond where I",
    "start": "746320",
    "end": "755529"
  },
  {
    "text": "currently am [correction: 5 beyond the base pointer]\nThe `@' says you've got to add on the baseline [of 64] \nnow, to the 5, [to give] 69.",
    "start": "755529",
    "end": "763779"
  },
  {
    "text": "So, down here, then, what it does first of all\nis it outputs `*F'. That is the code",
    "start": "763779",
    "end": "771640"
  },
  {
    "text": "that says `turn [change] into letter shift'. \nNow if you go back and watch my previous ",
    "start": "771640",
    "end": "777490"
  },
  {
    "text": "5-hole paper tape program you'll find that,\nwhether it's Baudot code or EDSAC code,",
    "start": "777490",
    "end": "782020"
  },
  {
    "text": "you have to make sure - if you want to\nprint out letters - be doubly sure you are",
    "start": "782020",
    "end": "787029"
  },
  {
    "text": "in Letter shift not in Figure shift and vice-versa.",
    "start": "787029",
    "end": "790760"
  },
  {
    "text": "Otherwise it will all look like junk. So\nhere is the code in EDSAC that says `turn",
    "start": "790760",
    "end": "795710"
  },
  {
    "text": "me into Letter shift' and make sure. Next\ninstruction beyond here says output the",
    "start": "795710",
    "end": "801740"
  },
  {
    "text": "thing that is six beyond this location \n[i.e 6 beyond the base pointer] \nWhen you look there, right, it just says `HF'\n[i.e. put the bit pattern for `H' as data in this address]  ",
    "start": "801740",
    "end": "807950"
  },
  {
    "text": "So, in other words the letters H and I,\nthat are to be output, are being picked",
    "start": "807950",
    "end": "815840"
  },
  {
    "text": "up as data from instructions further\ndown and are being output by using this",
    "start": "815840",
    "end": "823490"
  },
  {
    "text": "memory relocation [and offset] capability. So that's\nall you have to do is to put down",
    "start": "823490",
    "end": "829899"
  },
  {
    "text": "asterisk -  shortcut in EDSAC for saying\n`switch to letter shift';  print the letter",
    "start": "829900",
    "end": "836000"
  },
  {
    "text": "H;  print the letter I. But it's all done\nvery carefully by adjusting these",
    "start": "836000",
    "end": "842810"
  },
  {
    "text": "addresses here to actually be 69, 70 and\n71 in real life. And if you do that you",
    "start": "842810",
    "end": "852740"
  },
  {
    "text": "then say output the bit pattern that is\nin 69. It's a `change to letter shift' request.",
    "start": "852740",
    "end": "858320"
  },
  {
    "text": "Do the one in 70 - it's the letter\n`H' because I've planted that there [as data]\nAnd so on.",
    "start": "858320",
    "end": "863630"
  },
  {
    "text": "So, I hope that if you work through that,\nvery painfully, you can see that just",
    "start": "863630",
    "end": "869930"
  },
  {
    "text": "that ability to use relative offsets, yeah,",
    "start": "869930",
    "end": "874430"
  },
  {
    "text": "rather than absolute addresses means\nthat the amount of rewriting of your",
    "start": "874430",
    "end": "880310"
  },
  {
    "text": "program - just because it gets bigger - can\nbe greatly minimized. So, what is Initial",
    "start": "880310",
    "end": "885020"
  },
  {
    "text": "Orders II ?  It's arguably the world's first,\nelementary, relocating loader. It is",
    "start": "885020",
    "end": "891890"
  },
  {
    "text": "keeping your program well away from\ntrampling on Initial Orders II, but it's",
    "start": "891890",
    "end": "897230"
  },
  {
    "text": "relying on Initial Orders II for\ntranslation  (well you don't even need to",
    "start": "897230",
    "end": "902120"
  },
  {
    "text": "translate opcodes into binary they are\n[already in] binary), decimal-to-binary conversion ",
    "start": "902120",
    "end": "907490"
  },
  {
    "text": "and now relocation. All done for you. And all\nin much less than 64 words. So that's why",
    "start": "907490",
    "end": "916580"
  },
  {
    "text": "it's so celebrated!",
    "start": "916580",
    "end": "921060"
  }
]