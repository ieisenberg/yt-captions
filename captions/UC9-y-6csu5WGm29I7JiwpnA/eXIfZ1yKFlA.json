[
  {
    "text": "In some ways there are some awkward\nincompatibilities between the decimal",
    "start": "0",
    "end": "4650"
  },
  {
    "text": "that we like to use and the binary which\nis so efficient and wonderful for computers",
    "start": "4650",
    "end": "8970"
  },
  {
    "text": "to use. We've seen one example of this\nalready. I think I mentioned in a",
    "start": "8970",
    "end": "13230"
  },
  {
    "text": "previous video that .1, or .10, (ten cents in otrher words)\nin decimal, in your current bank balance is",
    "start": "13230",
    "end": "22439"
  },
  {
    "text": "not exactly representable as a binary\nnumber. You look at what it is in binary",
    "start": "22439",
    "end": "28130"
  },
  {
    "text": "0.00011001100\nIt just isn't, you know. It keeps on",
    "start": "28130",
    "end": "34829"
  },
  {
    "text": "recurring. Just as 1/3 in decimal isn't\nexact. It goes .333333 for ever.",
    "start": "34829",
    "end": "40079"
  },
  {
    "text": "Decimal and binary sometimes don't mix. \nNow here's going",
    "start": "40079",
    "end": "48000"
  },
  {
    "text": "to be a classic example. Let's just think\nthis through, without even writing",
    "start": "48000",
    "end": "51719"
  },
  {
    "text": "anything down. if we've got a 4-bit nibble,",
    "start": "51719",
    "end": "54660"
  },
  {
    "text": "we know that in hex it goes from 0000\nto 1111,  15 represented as F [hex]. We can't use",
    "start": "54660",
    "end": "61530"
  },
  {
    "text": "our full range [for BCD]. This is binary-coded\ndecimal not binary-coded hexadecimal.",
    "start": "61530",
    "end": "66540"
  },
  {
    "text": "Yeah?! We have got to say that the moment\nthat representation, even in one nibble,",
    "start": "66540",
    "end": "73590"
  },
  {
    "text": "gets to 1010 that is 10 [decimal] you can't\nleave it as 1010 you've now got have",
    "start": "73590",
    "end": "83610"
  },
  {
    "text": "2 nibbles. The left nibble with a 1 in it\nand the right nibble wants to look like 0.",
    "start": "83610",
    "end": "89310"
  },
  {
    "text": "You can't compress it into a single\nnibble, say 1010 and say: \"I'm sorry folks",
    "start": "89310",
    "end": "94590"
  },
  {
    "text": "you'll have to learn hex, because\notherwise you won't understand your bank",
    "start": "94590",
    "end": "98609"
  },
  {
    "text": "balance!\" This is not going to go down very\nwell. The challenge then is, if you're",
    "start": "98610",
    "end": "103259"
  },
  {
    "text": "using a 4-bit nibble, but only for the\ndecimal range 0-9, you've somehow",
    "start": "103259",
    "end": "108780"
  },
  {
    "text": "got to make - in all your bit twiddles -\nyou've got to make it carry into another",
    "start": "108780",
    "end": "114780"
  },
  {
    "text": "nibble on the left at 10[decimal] and not at 16 \n[decimal], which is what hexadecimal will do for you.",
    "start": "114780",
    "end": "121618"
  },
  {
    "text": "So, how does one, sort of, bridge that\ngap? Probably the best way for me to get",
    "start": "121619",
    "end": "129629"
  },
  {
    "text": "in to the hard bit about this is [to] go\nstraight away for that magic",
    "start": "129629",
    "end": "132890"
  },
  {
    "text": "number 10. Let's represent it in binary\nand then say: \"How do we convert it into",
    "start": "132890",
    "end": "139790"
  },
  {
    "text": "BCD?\" And realize that we need that second\nnibble on the left. What I'd like to do",
    "start": "139790",
    "end": "145250"
  },
  {
    "text": "here is to draw myself columns, and I'm\ngoing to restrict myself to things that",
    "start": "145250",
    "end": "150680"
  },
  {
    "text": "are, at most, 2 decimal digits. Let's\nremind ourselves, up here, that we're",
    "start": "150680",
    "end": "155540"
  },
  {
    "text": "going to have a tens nibble and a units\nnibble, and we'll initialize everything",
    "start": "155540",
    "end": "161780"
  },
  {
    "text": "to zeros. But, above here, just to keep\nthings very simple,",
    "start": "161780",
    "end": "166790"
  },
  {
    "text": "we'll use 4-bit binary representations.\nAnd I hope you will all agree that 1010",
    "start": "166790",
    "end": "172790"
  },
  {
    "text": "is ten, in base ten. And the\nreason for that is that the binary - in",
    "start": "172790",
    "end": "179870"
  },
  {
    "text": "four bits - that's an 8, that's the 2,\nso that's 10. This technique which is",
    "start": "179870",
    "end": "184940"
  },
  {
    "text": "called Double Dabble - I don't know how it\nwas discovered, it's fiendishly clever -",
    "start": "184940",
    "end": "190160"
  },
  {
    "text": "but the idea is we'd love to convert\nbinary into BCD by, as far as possible,",
    "start": "190160",
    "end": "198440"
  },
  {
    "text": "using simple bit shifts all the time and\ndoing the minimum of mucking about to",
    "start": "198440",
    "end": "208640"
  },
  {
    "text": "get it to carry early. So the 'Double'\nreflects the fact that we're going to shift",
    "start": "208640",
    "end": "213890"
  },
  {
    "text": "this bit-pattern across into here.\nAnd we're going to regard it as one",
    "start": "213890",
    "end": "218030"
  },
  {
    "text": "huge, great big, 12-bit register here. A walloping \ngreat shift register - all joined together.",
    "start": "218030",
    "end": "223730"
  },
  {
    "text": "Even though I've drawn it out\nseparately. It's just going to move from",
    "start": "223730",
    "end": "227299"
  },
  {
    "text": "the right across to the left. I'm going to move\nthem across. And remember, every time you",
    "start": "227299",
    "end": "230660"
  },
  {
    "text": "shift the thing by one place left\nyou are basically doubling it. OK,",
    "start": "230660",
    "end": "235760"
  },
  {
    "text": "that's where the 'Double' comes from. But\nwe find we have to intervene to make it",
    "start": "235760",
    "end": "240620"
  },
  {
    "text": "look right at the end and that is where\nthe 'Dabble' comes from. If you look up",
    "start": "240620",
    "end": "244250"
  },
  {
    "text": "'dabble', as I did in Chambers' dictionary\nit's one of the meanings is \" ... to make a",
    "start": "244250",
    "end": "248600"
  },
  {
    "text": "trivial alteration to\". OK to make a small\nalteration to something you're 'dabbling'",
    "start": "248600",
    "end": "254180"
  },
  {
    "text": "with it. OK, so that's where Double\nDabble comes. OK, so it's basically",
    "start": "254180",
    "end": "258650"
  },
  {
    "text": "doubling, with a little bit of dabbling.\nAnd the truth really hits you at 10. So,",
    "start": "258650",
    "end": "263930"
  },
  {
    "text": "let's progressively\nshift this by 1 bit left. What's going to",
    "start": "263930",
    "end": "269150"
  },
  {
    "text": "happen first of all? You shift over that '1' bit",
    "start": "269150",
    "end": "272570"
  },
  {
    "text": "You push it across into here because this\nis a unified register, for the moment.",
    "start": "272570",
    "end": "276710"
  },
  {
    "text": "Prists will say: \"Ah! but when you shift\nleft, like that, you should fill in with",
    "start": "276710",
    "end": "280669"
  },
  {
    "text": "zeros on the right.\" Yes, that is what\nwill actually happen, inside the hardware,",
    "start": "280670",
    "end": "285020"
  },
  {
    "text": "But I prefer not to pad with zeros, on\nthe right, at a shift, because I want you",
    "start": "285020",
    "end": "289009"
  },
  {
    "text": "to see when I've finished. So, we could call\nthis shift no. 1.  Let's do another",
    "start": "289010",
    "end": "294590"
  },
  {
    "text": "one. That 1 moves into that position\nbut you're bringing over another 0",
    "start": "294590",
    "end": "300830"
  },
  {
    "text": "out of that part and that's leaving you\nwith 10 in there. Now, notice what's",
    "start": "300830",
    "end": "306470"
  },
  {
    "text": "happened. On shift 1, here, you had a 1\non the right, in that nibble. By the time",
    "start": "306470",
    "end": "312890"
  },
  {
    "text": "you've shifted it left one place it's in\nthe 2s position.",
    "start": "312890",
    "end": "315860"
  },
  {
    "text": "So, you've doubled it. Let's do shift\nno. 3 and a zero is left, So, that is",
    "start": "315860",
    "end": "321770"
  },
  {
    "text": "shift 3. Now, this is where we can\nbegin to see trouble on the horizon.",
    "start": "321770",
    "end": "327979"
  },
  {
    "text": "We have got one more shift left to do and,\nif you don't do anything about it, it's",
    "start": "327980",
    "end": "333440"
  },
  {
    "text": "just going to end up with 1010\nin here. I mean, all right, what's",
    "start": "333440",
    "end": "338270"
  },
  {
    "text": "happened here, look, is that was 2 - you\ndoubled it, but because you shifted a",
    "start": "338270",
    "end": "343639"
  },
  {
    "text": "1 in, and not a 0, you've doubled\nit and added 1. That now says 5, OK?",
    "start": "343640",
    "end": "348350"
  },
  {
    "text": "So, basically it's doubling but sometimes\nif the bit you shift over is 1, and",
    "start": "348350",
    "end": "353720"
  },
  {
    "text": "not a 0, it's double and add 1. But\nessentially it's doubling. Now the",
    "start": "353720",
    "end": "358880"
  },
  {
    "text": "trouble is coming on the horizon because I\ncan see that if I just push that 0",
    "start": "358880",
    "end": "362660"
  },
  {
    "text": "bit over here, I'm going to end up with\n1010. I know, it's 10 [decimal].  Fine!",
    "start": "362660",
    "end": "370420"
  },
  {
    "text": "It's not representable as a digit from\n0-9. So, what should you do",
    "start": "370420",
    "end": "377390"
  },
  {
    "text": "then? Let it happen anyway and then look\nat it and say: \"Oh my golly, it's gone to",
    "start": "377390",
    "end": "382280"
  },
  {
    "text": "ten; it's gone to eleven; it's gone to\nfifteen even! I'd better backtrack and undo",
    "start": "382280",
    "end": "387080"
  },
  {
    "text": "it and then redo it ?!\" No! Dive in early\nand reason as follows:",
    "start": "387080",
    "end": "392740"
  },
  {
    "text": "Concentrate everybody! OK, what we want here",
    "start": "392740",
    "end": "397400"
  },
  {
    "text": "is for this thing to come out looking\nlike 0001 0000.",
    "start": "397400",
    "end": "407360"
  },
  {
    "text": "Let's say that's the \"desired result\".",
    "start": "407360",
    "end": "412340"
  },
  {
    "text": "Because that - regarding these as BCD digits -",
    "start": "412340",
    "end": "417889"
  },
  {
    "text": "that's 1 0 i.e. ten. That's exactly what\nyou want. So how do we make that happen?",
    "start": "417889",
    "end": "422240"
  },
  {
    "text": "How do we make it carry over into this\nleft-hand nibble, here, when it doesn't",
    "start": "422240",
    "end": "428090"
  },
  {
    "text": "want to at the moment. So the fiendishly\nclever thing says: \"Take a look at what",
    "start": "428090",
    "end": "433280"
  },
  {
    "text": "you've currently got because if what you\ngot is 5 or more, the act of doubling",
    "start": "433280",
    "end": "438740"
  },
  {
    "text": "it is bound to get you into a number\nthat needs to carry across [tothe next BCD nibble].\nSo, if it is",
    "start": "438740",
    "end": "445729"
  },
  {
    "text": "going to cause you trouble, at 5 or\nmore, we wanted to carry at 10 [decimal], it",
    "start": "445729",
    "end": "453430"
  },
  {
    "text": "innately would like to carry at 16\nand you don't want that. What's the",
    "start": "453430",
    "end": "457550"
  },
  {
    "text": "difference, Sean, between 10 and 16?\n>> Sean: 6\n>> DFB: 6. what's half of that?\n>> Sean: 3 ",
    "start": "457550",
    "end": "463668"
  },
  {
    "text": ">> DFB: All right. So, if we add three the fact \nthat we're then shifting it will double our 3",
    "start": "463669",
    "end": "468080"
  },
  {
    "text": "contribution [to] 6, And we'll make it carry \n[because we'll force that nibble past 16]\nSo, the rule is - on Double Dabble - if",
    "start": "468080",
    "end": "474680"
  },
  {
    "text": "what you see in your nibble [before shifting] is \n5 or more, then add 3. So, here we go, look.",
    "start": "474680",
    "end": "483250"
  },
  {
    "text": "Next stage now. Because we've seen\ntrouble on the horizon. It's 5, so add",
    "start": "483250",
    "end": "489020"
  },
  {
    "text": "3. And 3, we agree, is 11 [binary].\nNow, here you do have to do a little",
    "start": "489020",
    "end": "495349"
  },
  {
    "text": "addition with carries.\nYou can't avoid it. Some carries will",
    "start": "495349",
    "end": "498770"
  },
  {
    "text": "have to take place. 1 and 1 is 0 (carry 1);\n1 and 1 is 0(carry 1);",
    "start": "498770",
    "end": "504680"
  },
  {
    "text": "1 and 1 is 0 (carry 1). The act of\nadding 3 will make it look not like",
    "start": "504680",
    "end": "513080"
  },
  {
    "text": "0101 - you've added the 3, it now looks \nlike 1000.",
    "start": "513080",
    "end": "519400"
  },
  {
    "text": "Magic! But, what happens when you shift\nthe final 0 in? That 1 will shift",
    "start": "519400",
    "end": "523849"
  },
  {
    "text": "left, into the left-hand nibble. And\nyou'll end up with:",
    "start": "523849",
    "end": "528910"
  },
  {
    "text": "0001 0000. And this thing is\nnow empty. So you know you've come to the",
    "start": "528910",
    "end": "536350"
  },
  {
    "text": "end of your conversion. It's so cool. \nI love it dearly.",
    "start": "536350",
    "end": "540009"
  },
  {
    "text": "You could argue though, the one problem\nwith all this is that, in order to do",
    "start": "540010",
    "end": "545140"
  },
  {
    "text": "your shifts quickly, you've got this [bit pattern]\nin a sort of a unified shift register",
    "start": "545140",
    "end": "549700"
  },
  {
    "text": "full of bits. Your nibbles -  in the end - end\nup looking correct. But you're going to have",
    "start": "549700",
    "end": "555460"
  },
  {
    "text": "to dig them out of the shift register. \n\"Oh yeah! ... that's clearly a 4, yes,\nthat's a 2 isn't it?!\"",
    "start": "555460",
    "end": "560290"
  },
  {
    "text": "Magic! Of course, if you're using\nthis seriously you have to try and",
    "start": "560290",
    "end": "565180"
  },
  {
    "text": "generate these BCD digits in a way where\nthey don't necessarily need digging out",
    "start": "565180",
    "end": "573520"
  },
  {
    "text": "of a bigger representation - but on the\nother hand you're using that behind the scenes.",
    "start": "573520",
    "end": "576670"
  },
  {
    "text": "I've found, for you, the ultimate\nreference [that]  I've taken this example from,",
    "start": "576670",
    "end": "584079"
  },
  {
    "text": "and used the methodology. It's by a guy\ncalled Chuck Falconer. It's actually",
    "start": "584080",
    "end": "588190"
  },
  {
    "text": "referred to in the Wikipedia articles on\nBCD and Double Dabble, So, we've pulled",
    "start": "588190",
    "end": "594820"
  },
  {
    "text": "that over. It's freely available. You can\ngo and dive in there to your heart's",
    "start": "594820",
    "end": "598480"
  },
  {
    "text": "content, because he covers about how to make \nthem [the nibbles] appear in a much more useable",
    "start": "598480",
    "end": "604750"
  },
  {
    "text": "way. And what he also says is that when\nyou start looking at this, you realize",
    "start": "604750",
    "end": "608890"
  },
  {
    "text": "you are actually doing the \"division by\nten and remainders\" thing that we",
    "start": "608890",
    "end": "614860"
  },
  {
    "text": "discussed earlie. But you're doing it in a\npretty efficient way [mainly bitshifts] and only",
    "start": "614860",
    "end": "618519"
  },
  {
    "text": "occasionally needing that little\naddition of 3. So that's ... I'm not",
    "start": "618520",
    "end": "623470"
  },
  {
    "text": "saying there aren't other ways. There\nseems to be endless variants on this:",
    "start": "623470",
    "end": "627759"
  },
  {
    "text": "there's signed BCD; there's packed BCD;\nthere's all sorts. But if you just want",
    "start": "627760",
    "end": "633220"
  },
  {
    "text": "to understand the fundamentals I would\nsay go through the [EXTRA BITS video] 42 example. T\nthen go to",
    "start": "633220",
    "end": "639550"
  },
  {
    "text": "Chuck Falconers memo. And he does 255,\nas decimal, and boy that needs",
    "start": "639550",
    "end": "646920"
  },
  {
    "text": "spotting problems in about three sets of\nnibbles - not two. You have to spot one in",
    "start": "646920",
    "end": "652810"
  },
  {
    "text": "the middle thing happening and so on.\n>> Sean: You mentioned 255, so this goes",
    "start": "652810",
    "end": "656860"
  },
  {
    "text": "up to hundreds, thousand ... you just add more ... ?\n>> DFB: Yes, you just add more BCD digits on the",
    "start": "656860",
    "end": "662120"
  },
  {
    "text": "left to cope. But you give yourself a bigger\nproblem when examining each of these",
    "start": "662120",
    "end": "669589"
  },
  {
    "text": "[nibble] digits to see if they're about to go\nbeyond ten, when they're doubled, ",
    "start": "669589",
    "end": "674240"
  },
  {
    "text": "by shifting left  left one more time. You give\nyourself a bigger and bigger inspection",
    "start": "674240",
    "end": "678050"
  },
  {
    "text": "task, there's no question. So, like I say\nthe Chuck Falconer memo from",
    "start": "678050",
    "end": "684470"
  },
  {
    "text": "which this is derived ... we'll put a link\nout to it. It is freely available.",
    "start": "684470",
    "end": "688730"
  },
  {
    "text": "He doesn't explain how the people who\ninvented this actually discovered it,",
    "start": "688730",
    "end": "695329"
  },
  {
    "text": "worked out that it really does work. It\nseems almost like magic when you do it.",
    "start": "695330",
    "end": "700640"
  },
  {
    "text": "And every so often I pull out another\nnumber and I think: \"I bet it won't work for this\".",
    "start": "700640",
    "end": "705230"
  },
  {
    "text": "But it does. It's quitey incredible. So,\nthere we are then. I think we've fairly",
    "start": "705230",
    "end": "711050"
  },
  {
    "text": "well summarized now what the situation\nis - that for great big engineering,",
    "start": "711050",
    "end": "716899"
  },
  {
    "text": "scientific calculations - even for finding\nnew prime numbers as huge integers - you",
    "start": "716900",
    "end": "722450"
  },
  {
    "text": "really do need proper binary to speed\nthings up. But for some sorts of trivial",
    "start": "722450",
    "end": "728060"
  },
  {
    "text": "calculations, you might even want to do\nit in BCD all the time. But even if you",
    "start": "728060",
    "end": "733550"
  },
  {
    "text": "are basically binary and want to print out\nyour answers, you still have to convert",
    "start": "733550",
    "end": "737420"
  },
  {
    "text": "from binary through to BCD. And that is\nalways a worry for the people who",
    "start": "737420",
    "end": "743450"
  },
  {
    "text": "write the I/O routines, shall we say\nfor C and so on. Is this going to be",
    "start": "743450",
    "end": "749420"
  },
  {
    "text": "efficient? What we're saying is, at the\ncomputing end of things, you should be",
    "start": "749420",
    "end": "754339"
  },
  {
    "text": "able to prepare that BCD-digit stream as\nquickly as possible.",
    "start": "754339",
    "end": "759310"
  }
]