[
  {
    "text": "We've, I think, done about five, or maybe\neven six, videos counting the Extra Bits",
    "start": "0",
    "end": "6000"
  },
  {
    "text": "in this area of Information Theory and a\nlittle bit of Coding Theory. We got",
    "start": "6000",
    "end": "11790"
  },
  {
    "text": "to a reasonably good state with this\nbut the story needs finishing off. So I'd",
    "start": "11790",
    "end": "17279"
  },
  {
    "text": "like to finish off the story and go back\nto our old example of San Francisco weather",
    "start": "17279",
    "end": "22259"
  },
  {
    "text": "states. I'll try and make this completely\nunderstandable in a free-standing way",
    "start": "22260",
    "end": "29039"
  },
  {
    "text": "but if you do get a bit lost go to the\nplaylist and just catch up with the bits",
    "start": "29039",
    "end": "33570"
  },
  {
    "text": "and pieces that you're not quite sure about. \n What we've done here \nis split them",
    "start": "33570",
    "end": "37200"
  },
  {
    "text": "up into four good codes that are\nmeaningful and four bad ones ....\n",
    "start": "37200",
    "end": "41610"
  },
  {
    "text": "We've been working, for ages now, with this very\naccurate model of San Francisco weather :-)",
    "start": "41610",
    "end": "47460"
  },
  {
    "text": "that it's either foggy, sunny, cloudy or\nrainy. And you get about twenty five",
    "start": "47460",
    "end": "51870"
  },
  {
    "text": "percent of each of those states, so the\nprobability [of each of them] is a quarter.",
    "start": "51870",
    "end": "55800"
  },
  {
    "text": "It's a two-bit code: foggy 00, sunny 01,\ncloudy 10, rainy 11. Fine. Four states, four",
    "start": "55800",
    "end": "67020"
  },
  {
    "text": "different bit-patterns. Two bits needed. What\nwe, I think, then did, right at the very",
    "start": "67020",
    "end": "72719"
  },
  {
    "text": "end, was this:  what happens if you get a\ndisturbance - electrical disturbance - on",
    "start": "72720",
    "end": "77549"
  },
  {
    "text": "the line which either turns a 0 into a\n1 or a 1 into a 0 ?",
    "start": "77549",
    "end": "82740"
  },
  {
    "text": "Now, this is a good stage at which to say\nsomething which I've never actually",
    "start": "82740",
    "end": "87780"
  },
  {
    "text": "emphasised before. We're assuming what\nClaude Shannon calls a \"symmetric channel\"",
    "start": "87780",
    "end": "93960"
  },
  {
    "text": "In other words there is as ....  if a bit gets\nclobbered it could be a zero turning",
    "start": "93960",
    "end": "100259"
  },
  {
    "text": "into a one, or it could be a one turning into a\nzero. But if that happens it's equally",
    "start": "100259",
    "end": "105990"
  },
  {
    "text": "probably either way. In other words there's \nnothing about a 1-bit that makes it different",
    "start": "105990",
    "end": "111000"
  },
  {
    "text": "from a zero bit - in terms of its noise\nimmunity. So it's a binary symmetric",
    "start": "111000",
    "end": "115710"
  },
  {
    "text": "channel. We said, all right let us add a\nthird bit to these two-bit codes",
    "start": "115710",
    "end": "122270"
  },
  {
    "text": "And let us keep what's called the overall parity\neven.  In other words there must  have been an even",
    "start": "122270",
    "end": "127428"
  },
  {
    "text": "number of ones.\nSo here we go, look, what could you add to",
    "start": "127429",
    "end": "131330"
  },
  {
    "text": "two 0s as a third bit on the right and\nstill keep it even parity? Well, it's even",
    "start": "131330",
    "end": "137300"
  },
  {
    "text": "parity already so you can add a 0 If\nyou send three bits then so long as they",
    "start": "137300",
    "end": "143780"
  },
  {
    "text": "arrive looking like one of these patterns, that's \nfine. But then you get things like: \"Oh well",
    "start": "143780",
    "end": "149900"
  },
  {
    "text": "suppose at Sacramento they get 010\n- that's not one of these four!\"",
    "start": "149900",
    "end": "158840"
  },
  {
    "text": "So what does 010 tell you? Well, it tells you\nthat something went wrong because it's",
    "start": "158840",
    "end": "164000"
  },
  {
    "text": "not in the allowed set! But the problem\nis there's no end of ways that 010 could",
    "start": "164000",
    "end": "170120"
  },
  {
    "text": "have arisen. So you can detect, but you can't correct.",
    "start": "170120",
    "end": "174140"
  },
  {
    "text": "Then we got on to talking about how would\nSacramento say, back to San ",
    "start": "174140",
    "end": "181160"
  },
  {
    "text": "Francisco: \"I got it! I love it!\". Or \"not \nacknowledged - I don't like it, it's a bad code\"",
    "start": "181160",
    "end": "186620"
  },
  {
    "text": "So we invented ACK and NAK back\nfrom Sacramento to San Francisco. Then you",
    "start": "186620",
    "end": "193700"
  },
  {
    "text": "go through the same argument.\nAnd finally we said: \"What do we have to do to",
    "start": "193700",
    "end": "198739"
  },
  {
    "text": "make a 1-bit error be correctable? \" And\nthis ACK and NAK got us started famously.",
    "start": "198739",
    "end": "204170"
  },
  {
    "text": "And we're going to carry this story on today. We\ndrew a cube and we decorated around its",
    "start": "204170",
    "end": "210260"
  },
  {
    "text": "vertices - its corners - with all the\npossible 3-bit combinations. But I",
    "start": "210260",
    "end": "216319"
  },
  {
    "text": "carefully arranged so that the 000 which\nI'm now using for ACK and 111 is NAK,",
    "start": "216319",
    "end": "223849"
  },
  {
    "text": "I put them at the diametrically opposite\ncorners of the cube. And what is magic",
    "start": "223849",
    "end": "229700"
  },
  {
    "text": "about doing that is that, if there is a\none-error corruption of the code, you can",
    "start": "229700",
    "end": "236540"
  },
  {
    "text": "correct it because it is so close - it's\nnearest-neighbour matching of the bad",
    "start": "236540",
    "end": "243950"
  },
  {
    "text": "code against what it must have been. So\nwhat we discovered then is that in three",
    "start": "243950",
    "end": "248840"
  },
  {
    "text": "bits you can have two so-called 'codewords' -",
    "start": "248840",
    "end": "253250"
  },
  {
    "text": "bit-patterns which are correctable, as\nwell as detectable. But you can only have",
    "start": "253250",
    "end": "258560"
  },
  {
    "text": "two. Nothing else will fit. The remaining\ncorners of the cube are needed to put",
    "start": "258560",
    "end": "263870"
  },
  {
    "text": "things right when it goes wrong. This is\nOK actually, we've got a nice situation now.",
    "start": "263870",
    "end": "268040"
  },
  {
    "text": "You send a message and you wait for\nthe ACK or NAK to",
    "start": "268040",
    "end": "272510"
  },
  {
    "text": "come back. So you went out with 3-bit\ncodes for four weather states and Sacramento",
    "start": "272510",
    "end": "278960"
  },
  {
    "text": "comes back and either says 'acknowledge' or 'not\nacknowledge' but because of this",
    "start": "278960",
    "end": "282080"
  },
  {
    "text": "protection the ACK and the NAK are going\nto get through 99.99999% of the time.",
    "start": "282080",
    "end": "288319"
  },
  {
    "text": "Well there's nothing wrong with that y'know,\nas a communications protocol, because",
    "start": "288320",
    "end": "293300"
  },
  {
    "text": "this is exactly what happens on local\narea networks [i.e. re-transmit the packet if we get a NAK]\nHere we are then: how do we",
    "start": "293300",
    "end": "298909"
  },
  {
    "text": "say we've got four weather states but\nwhat we'd like to do is not do the ACK/NAK",
    "start": "298910",
    "end": "306320"
  },
  {
    "text": "protocol. We'd like to send them out \nwith sufficient extra bits that the far",
    "start": "306320",
    "end": "311660"
  },
  {
    "text": "end, Sacramento, could put it right.",
    "start": "311660",
    "end": "315260"
  },
  {
    "text": "Let's assumes that San Francisco and Sacramento\nwere miles apart, y' know. You want to",
    "start": "315260",
    "end": "320810"
  },
  {
    "text": "transmit it once and have done with it.\nYou don't want repeats. Well,",
    "start": "320810",
    "end": "325820"
  },
  {
    "text": "3 bits clearly isn't going to be enough. 3 bits \ncan accommodate two so-called 3-bit",
    "start": "325820",
    "end": "331130"
  },
  {
    "text": "codewords that are distinguishable from\none another, but no more.",
    "start": "331130",
    "end": "335270"
  },
  {
    "text": "And your first thought may well be: \"Well\nlet's try four bits\". Now the number of",
    "start": "335270",
    "end": "340610"
  },
  {
    "text": "bits you use in your code-strings equates,\nif you like, to the dimensionality of the",
    "start": "340610",
    "end": "345080"
  },
  {
    "text": "cube and we've gone beyond the cube now\nto hypercube. This is a topologically",
    "start": "345080",
    "end": "350720"
  },
  {
    "text": "correct projection of a four-dimensional\nhypercube onto two-dimensional flat",
    "start": "350720",
    "end": "357290"
  },
  {
    "text": "paper. There's lots of ways to depict it.\nI've always liked this one. I think I saw it",
    "start": "357290",
    "end": "362090"
  },
  {
    "text": "in Martin Gardner's, Scientific American,\n\"Recreational Maths.\" column, many many years ago.",
    "start": "362090",
    "end": "367160"
  },
  {
    "text": "You draw a cube and then inside it\nyou draw another cube - almost, sort of,",
    "start": "367160",
    "end": "373100"
  },
  {
    "text": "suspended in mid-air inside the original\ncube. You then connect all of the",
    "start": "373100",
    "end": "378620"
  },
  {
    "text": "corresponding corners on the outer cube\nto the inner cube.",
    "start": "378620",
    "end": "382440"
  },
  {
    "text": "I've put those in in this diagram as dots\n[dotted lines], but the dots don't mean anything.",
    "start": "382440",
    "end": "386880"
  },
  {
    "text": "They're just something that makes it\neasier for me to see the structure. So",
    "start": "386880",
    "end": "391860"
  },
  {
    "text": "don't worry about the dots! Every line\nin here is a projection of an edge in",
    "start": "391860",
    "end": "398879"
  },
  {
    "text": "the hypercube. It's got exactly the right\ntopology but it's been distorted so that",
    "start": "398880",
    "end": "404520"
  },
  {
    "text": "you can understand it. So here's your\nchallenge, audience. If you think visually",
    "start": "404520",
    "end": "408870"
  },
  {
    "text": "like this - oh! by the way, we're going to stop at",
    "start": "408870",
    "end": "411570"
  },
  {
    "text": "four dimensions [in terms of drawing hypercubes].\nI have no intention of going to five dimensions when we",
    "start": "411570",
    "end": "416190"
  },
  {
    "text": "get up to 5-bit codes. Four dimensions is enough\nbut just look at this.",
    "start": "416190",
    "end": "419760"
  },
  {
    "text": "The challenge is to say we've got four 0s\n[and] four 1s, maybe, as our two",
    "start": "419760",
    "end": "423000"
  },
  {
    "text": "codewords still on the outer cube\n4-bit coding. On the inner cube can",
    "start": "423000",
    "end": "428580"
  },
  {
    "text": "you choose any pair of corners which are\nnot only three apart from each other, on",
    "start": "428580",
    "end": "434879"
  },
  {
    "text": "the inner cube, but are also three jumps away\nfrom the existing codewords on the outer",
    "start": "434880",
    "end": "442350"
  },
  {
    "text": "cube. Well, if I choose that corner it's\nhopeless. It's only one away from [an]",
    "start": "442350",
    "end": "446400"
  },
  {
    "text": "existing codeword. Even if I choose this\none, up here, is that any good?",
    "start": "446400",
    "end": "452250"
  },
  {
    "text": "No, it's 1 2 away from here. Choose this\none, down here, y'know, is that one any",
    "start": "452250",
    "end": "459390"
  },
  {
    "text": "good, down at the lower right?\nNo, it's 1 2 away. No matter which of the",
    "start": "459390",
    "end": "465510"
  },
  {
    "text": "eight corners you choose, on the inner\ncube, and try to get them diametrically",
    "start": "465510",
    "end": "471450"
  },
  {
    "text": "opposite, so maybe you can pack in two more.\nYou just can't do it - you can't even pack in",
    "start": "471450",
    "end": "475740"
  },
  {
    "text": "one more because it's always no better\nthan two jumps away from existing codewords.",
    "start": "475740",
    "end": "482819"
  },
  {
    "text": "In other words four-dimensional\nspace has let us down. Big Time! But now",
    "start": "482820",
    "end": "488160"
  },
  {
    "text": "we go over to a much more - if you like -\nalgebraic bit-pattern, computer science,",
    "start": "488160",
    "end": "495000"
  },
  {
    "text": "way and we say we will conjecture - \nmathematicians would say this all the time -",
    "start": "495000",
    "end": "499890"
  },
  {
    "text": "even as a computer scientist I\nconjecture that five bits might be",
    "start": "499890",
    "end": "505500"
  },
  {
    "text": "enough to encode four weather states for\nSan Francisco,",
    "start": "505500",
    "end": "509760"
  },
  {
    "text": "with some sort of protection in it, so\nthat the far end can correct and not need to",
    "start": "509760",
    "end": "517530"
  },
  {
    "text": "ask for a re-transmit. And this,\nbasically, is the classic Hamming code.",
    "start": "517530",
    "end": "522599"
  },
  {
    "text": "We're going to go against tradition a\nlittle bit.",
    "start": "522600",
    "end": "525509"
  },
  {
    "text": "You're very used to me putting up a bit\npattern, numbering it from the right and",
    "start": "525510",
    "end": "529110"
  },
  {
    "text": "saying that's a zero bit - that measures the\nones, the twos. and go right-to-left.",
    "start": "529110",
    "end": "532860"
  },
  {
    "text": "For constructing Hamming codes you go left to\nright and you start numbering at 1 not at 0.",
    "start": "532860",
    "end": "540209"
  },
  {
    "text": "OK, what's special about 1? Well, in",
    "start": "540210",
    "end": "545910"
  },
  {
    "text": "terms of powers of 2, it's two to the power 0. \nI'm sure you will all remember [that] anything to",
    "start": "545910",
    "end": "552000"
  },
  {
    "text": "the power 0 is 1.  Two is no exception. Two to the\npower 0 is 1. Two, of course, can be written as 2",
    "start": "552000",
    "end": "559620"
  },
  {
    "text": "to the power 1. Let's just put lines\nunder these. Another exact power of 2 here,",
    "start": "559620",
    "end": "565529"
  },
  {
    "text": "four, is two squared. So what Hamming said\nwas this: \"Think of your position which",
    "start": "565530",
    "end": "572730"
  },
  {
    "text": "are exact powers of 2, as being where you\nput the parity-check bits. And then you",
    "start": "572730",
    "end": "577740"
  },
  {
    "text": "use the other bits in your pattern to\nhold all the information bits. And then I",
    "start": "577740",
    "end": "584010"
  },
  {
    "text": "will give you a methodology for working\nout what the parity-check bits would be\".",
    "start": "584010",
    "end": "589680"
  },
  {
    "text": "So instead of having one parity-check\nbit now, like we did in the 3-bit",
    "start": "589680",
    "end": "596010"
  },
  {
    "text": "codes, we're now going to end up adding no\nfewer than three parity check bits. I will",
    "start": "596010",
    "end": "602160"
  },
  {
    "text": "stick to even parity. Nothing special about\nthat - you can do it odd [parity] if you",
    "start": "602160",
    "end": "607620"
  },
  {
    "text": "want to. But you must be consistent, of course.\nOK - those are our column headings. What was",
    "start": "607620",
    "end": "614490"
  },
  {
    "text": "the state of weather in San Francisco, on\nthe left, the first code was 00, if you",
    "start": "614490",
    "end": "620430"
  },
  {
    "text": "remember, and I put the information\nbits of the codes in the three and five",
    "start": "620430",
    "end": "626820"
  },
  {
    "text": "positions where they are not powers of two.\nYou've got to remember that bit 1",
    "start": "626820",
    "end": "634290"
  },
  {
    "text": "acts as a checkpoint for positions 1, 3 and 5. \nBit 2 is a check for bit 2 and bit 3.",
    "start": "634290",
    "end": "648180"
  },
  {
    "text": "Bit 4, up here, is the third\nparity-check bet, that checks 4 and 5.",
    "start": "648180",
    "end": "655950"
  },
  {
    "text": "What you are doing is, basically, breaking down\nthese odd numbers into sums of ",
    "start": "655950",
    "end": "661110"
  },
  {
    "text": "powers of two. Let's just see if this ....\nI'm taking up too much space for green! Let's",
    "start": "661110",
    "end": "665940"
  },
  {
    "text": "see if the blue works here -\nwhat I'm pointing out to you is that",
    "start": "665940",
    "end": "670080"
  },
  {
    "text": "3 can be thought of as 1 + 2.\n5, in terms of sums of powers of two",
    "start": "670080",
    "end": "677250"
  },
  {
    "text": "can be thought of as 1 + 4. So this is\nhow it works. You write in your",
    "start": "677250",
    "end": "684480"
  },
  {
    "text": "information bits and then you say: \"What\nabout my parity bits?\" And you use these",
    "start": "684480",
    "end": "689040"
  },
  {
    "text": "rules, here, which effectively says that\nbits 1, 3 and 5, taken together, must be",
    "start": "689040",
    "end": "698070"
  },
  {
    "text": "even parity. Well look! Bits 3 and 5 -\nthe information bits, are 0 and 0. So if  ",
    "start": "698070",
    "end": "706920"
  },
  {
    "text": "1 + 3 + 5, in parity terms ... of\ncourse a lot of you will realize we're doing",
    "start": "706920",
    "end": "711779"
  },
  {
    "text": "exclusive ORs here of 1s and 0s ... \n0 + 0 it's even already, so to keep the 3-bit grouping,",
    "start": "711780",
    "end": "718530"
  },
  {
    "text": "including 1, even, it needs to be 0. Bit 2 checks\n2 and 3 but 3 is already 0. So two plus",
    "start": "718530",
    "end": "729120"
  },
  {
    "text": "three's parity bits must add up to be even. \nZero already so we get another 0. Finally",
    "start": "729120",
    "end": "738360"
  },
  {
    "text": "what about bit four? Unknown at the moment\nit's got to be a parity-check. Ah! well, 4 and 5",
    "start": "738360",
    "end": "743670"
  },
  {
    "text": "taken together, must form an even\nparity pair. Oh! that's dead easy.",
    "start": "743670",
    "end": "748980"
  },
  {
    "text": "What it has predicted is [that] it's a simple\nbinary repetition code for one of the states.",
    "start": "748980",
    "end": "753990"
  },
  {
    "text": "OK -  but everything is guided by your",
    "start": "753990",
    "end": "759360"
  },
  {
    "text": "information bits. We're now going to\nmove on to 01 - same rule look, Bit 1",
    "start": "759360",
    "end": "765720"
  },
  {
    "text": "checks 1, 3 and 5. OK? 3 and 5\nare in there already.",
    "start": "765720",
    "end": "773040"
  },
  {
    "text": "they are data bits. Aha! but there's a 1 and a 0 now.\nTo make the whole thing even parity, then,",
    "start": "773040",
    "end": "779040"
  },
  {
    "text": "what have I got to do to the 1 bit?\nMake it a 1, because 1 + 1 give you even",
    "start": "779040",
    "end": "784680"
  },
  {
    "text": "parity. And then check out bit 2. Bit 2",
    "start": "784680",
    "end": "788910"
  },
  {
    "text": "combined with bit 3 must give an\neven parity combination. Well, bit 3 is in",
    "start": "788910",
    "end": "794129"
  },
  {
    "text": "there as a 0. So [bit] two combined with \n[bit] three - you've got to have a zero. And then,",
    "start": "794130",
    "end": "798960"
  },
  {
    "text": "finally, bit 4. Well, 4 and 5, taken together, must \nform  an even-parity",
    "start": "798960",
    "end": "805230"
  },
  {
    "text": "combination. So, therefore, if [bit] 5 is  1 -\nI'm sorry folks - [bit] 4 has got to be 1.",
    "start": "805230",
    "end": "810839"
  },
  {
    "text": "The next information code I put in there,\nwhich my notes say is the cloudy code, 1 and 0.",
    "start": "810840",
    "end": "818220"
  },
  {
    "text": "Here we go again. 1, 3 and 5, taken\ntogether, must form an even parity",
    "start": "818220",
    "end": "824370"
  },
  {
    "text": "combination. But you got a 1 there and a 0\nthere. So you need a 1 here to",
    "start": "824370",
    "end": "828960"
  },
  {
    "text": "balance it off - even number of ones, right?\nAnd then bit 2: well [bit] 2 and [bit] 3,",
    "start": "828960",
    "end": "835170"
  },
  {
    "text": "taken together? Well [bit] 3 is 1 -  we're stuck with \nthat - it's part of the data. So we put a",
    "start": "835170",
    "end": "840180"
  },
  {
    "text": "1 in here to make it even and then\n[bit] 4 and [bit] 5, taken together, that's a 0.",
    "start": "840180",
    "end": "845190"
  },
  {
    "text": "And finally \"rainy\". Here we go again.\nSo our final bit pattern that we've got",
    "start": "845190",
    "end": "851460"
  },
  {
    "text": "to locate in here is 11 for rainy. \nOK [bits] 1, 3 and 5, taken together must be even.",
    "start": "851460",
    "end": "860010"
  },
  {
    "text": "Well 1 + 1 -  [bits] 3 and 5 -,that's even, so keep it \neven by putting a 0 in there. Bits 2 and 3 taken",
    "start": "860010",
    "end": "868410"
  },
  {
    "text": "together? Well [bit] 3 is a 1, so 2 and 3 taken together \nand to be even",
    "start": "868410",
    "end": "872399"
  },
  {
    "text": "parity must have be a 1 there.  4 and 5 - that's a 1 - so \nyou need another 1 in here",
    "start": "872400",
    "end": "878460"
  },
  {
    "text": "to make 4 + 5. So there we are folks!\nThose are our so-called codewords for all",
    "start": "878460",
    "end": "885240"
  },
  {
    "text": "of the states of weather. Look at them. If\nyou look at \"foggy\" and \"sunny\", in how many places",
    "start": "885240",
    "end": "891300"
  },
  {
    "text": "do the bit patterns differ?\n0 and 1, that's a difference; 0 and 1",
    "start": "891300",
    "end": "895620"
  },
  {
    "text": "that matches, that matches, that's different,\nthat's different.",
    "start": "895620",
    "end": "898770"
  },
  {
    "text": "Three differences. They are distance three\napart and remember distance three is",
    "start": "898770",
    "end": "903390"
  },
  {
    "text": "magic! We saw that on the cube. If you\nkeep your code words three bits apart",
    "start": "903390",
    "end": "909090"
  },
  {
    "text": "from one another then everything follows\nabsolutely beautifully.",
    "start": "909090",
    "end": "913680"
  },
  {
    "text": "And that works fine but we are now in a\nsituation where we can send all this",
    "start": "913680",
    "end": "918990"
  },
  {
    "text": "stuff off to Sacramento and they can\nblooming well sort it out for themselves!",
    "start": "918990",
    "end": "923610"
  },
  {
    "text": "So long as you don't get more than one\nerror in that then, fine, you can correct it",
    "start": "923610",
    "end": "929519"
  },
  {
    "text": "by using these Hamming codes. And you say:\n\"Well, how do you correct it?\"",
    "start": "929520",
    "end": "934650"
  },
  {
    "text": "Well, the answer that is you do various\nsimple Exclusive-OR operations on these",
    "start": "934650",
    "end": "941340"
  },
  {
    "text": "parity check bits, at the power of two\npositions, you know, like the 1, 2 and 4",
    "start": "941340",
    "end": "946020"
  },
  {
    "text": "positions. You use various combinations of\nthose very much along the lines of how we",
    "start": "946020",
    "end": "951510"
  },
  {
    "text": "encoded it in the first place, and\ndepending on the outcome of those, you'll",
    "start": "951510",
    "end": "956160"
  },
  {
    "text": "find some of them check out all right\n\"Yes, it is even\". Some of them are bad and",
    "start": "956160",
    "end": "960990"
  },
  {
    "text": "wrong and it's odd [parity]. And by combining the\nstart positions for the odd ones that",
    "start": "960990",
    "end": "967920"
  },
  {
    "text": "are bad, you can uniquely home in on the\nbit that's gone wrong. And if you want to",
    "start": "967920",
    "end": "973350"
  },
  {
    "text": "know more about that - just write in and\nask Sean. And we'll see what we can do.",
    "start": "973350",
    "end": "976440"
  }
]