[
  {
    "start": "0",
    "end": "10000"
  },
  {
    "text": "previously we look at how we can build a\nsimple memory circuit",
    "start": "130",
    "end": "3310"
  },
  {
    "text": "from NOR gates. Today we're gonna look at\nhow we can take this further and see how",
    "start": "3310",
    "end": "8189"
  },
  {
    "text": "computer memory's built in a bit more\ndetail.",
    "start": "8189",
    "end": "11929"
  },
  {
    "start": "10000",
    "end": "480000"
  },
  {
    "text": "So if you remember the previous video, and if you haven't seen it",
    "start": "11980",
    "end": "15178"
  },
  {
    "text": "well, click the link below. We had this\ncircuit here, which has got two",
    "start": "15179",
    "end": "19020"
  },
  {
    "text": "NOR gates in it, wired so that the output of\none NOR gate",
    "start": "19020",
    "end": "22900"
  },
  {
    "text": "feeds back to the input of the other and so\non with the other one.",
    "start": "22900",
    "end": "27050"
  },
  {
    "text": "We had two inputs to the circuit S and\nR which stood for 'set'",
    "start": "27050",
    "end": "31230"
  },
  {
    "text": "and 'reset' & we had two outputs Q and Q bar which is the inverted Q.",
    "start": "31230",
    "end": "35780"
  },
  {
    "text": "If we took the set input high",
    "start": "35780",
    "end": "39120"
  },
  {
    "text": "the output went high and it remained\nhigh even if the set output went",
    "start": "39129",
    "end": "43829"
  },
  {
    "text": "low again and the same with the reset\nthing. If we took that high",
    "start": "43829",
    "end": "47230"
  },
  {
    "text": "then it reset Q back to zero, or low",
    "start": "47230",
    "end": "50329"
  },
  {
    "text": "and so on. The circuit remembered what\nstate we put it in.",
    "start": "50329",
    "end": "53960"
  },
  {
    "text": "So this is a useful circuit, it's referred\nto as an SR latch",
    "start": "53960",
    "end": "57360"
  },
  {
    "text": "but often we want to store not just\nsetting a bit",
    "start": "57360",
    "end": "60930"
  },
  {
    "text": "and resetting it we actually want to store\nwhatever data is on this",
    "start": "60930",
    "end": "64478"
  },
  {
    "text": "line which we'll call D for 'data', So we're gonna have another input",
    "start": "64479",
    "end": "68079"
  },
  {
    "text": "which we'll call 'clock' and when that's\nhigh,",
    "start": "68080",
    "end": "71229"
  },
  {
    "text": "we want that to remember whatever data\nis on D. So let's have a look at how we",
    "start": "71229",
    "end": "74590"
  },
  {
    "text": "can map these inputs into the inputs",
    "start": "74590",
    "end": "76979"
  },
  {
    "text": "of our previous circuit to do that. So it helps if we actually have a look",
    "start": "76979",
    "end": "80659"
  },
  {
    "text": "at the truth table of what input we have\ncoming in. So we've got our data bit coming in",
    "start": "80659",
    "end": "85258"
  },
  {
    "text": "and we have our clock signal coming in\nand we're going to produce",
    "start": "85259",
    "end": "88720"
  },
  {
    "text": "outputs S and R. Now we need to map these",
    "start": "88720",
    "end": "93040"
  },
  {
    "text": "to the outputs S & R so whenever clock is\nzero we don't want the values to",
    "start": "93040",
    "end": "97130"
  },
  {
    "text": "change so we want the output to S & R",
    "start": "97130",
    "end": "99298"
  },
  {
    "text": "to be zero. Now if the data is 0 and clock\nis 1",
    "start": "99299",
    "end": "103040"
  },
  {
    "text": "then we want the thing to be reset so we want the reset pin to be high",
    "start": "103040",
    "end": "107240"
  },
  {
    "text": "so we want S to have 0 output from it and we want R",
    "start": "107240",
    "end": "110970"
  },
  {
    "text": "to have a 1 output from it. If\nD is 1",
    "start": "110970",
    "end": "114649"
  },
  {
    "text": "and clock is 1 then we want to change\nthe value 'cause our clock pin is high",
    "start": "114649",
    "end": "118180"
  },
  {
    "text": "D is 1 so we want to set it. So we want to take S to be 1 and R to be 0.",
    "start": "118180",
    "end": "123140"
  },
  {
    "text": "So we now know for all\nof our inputs, what we want the outputs to be",
    "start": "123140",
    "end": "127360"
  },
  {
    "text": "and so we need to build a set of logic\ngates here",
    "start": "127360",
    "end": "130560"
  },
  {
    "text": "that will map these inputs to the",
    "start": "130560",
    "end": "132500"
  },
  {
    "text": "outputs here. So we need to think of some circuit that is true",
    "start": "132500",
    "end": "137730"
  },
  {
    "text": "for S when both D is 1 and clock is 1",
    "start": "137730",
    "end": "141040"
  },
  {
    "text": "If you remember your logic\ngates the simple circuit that is true when both",
    "start": "141040",
    "end": "144959"
  },
  {
    "text": "of its inputs are true",
    "start": "144970",
    "end": "146130"
  },
  {
    "text": "is the AND gate so we can draw in",
    "start": "146130",
    "end": "149160"
  },
  {
    "text": "an AND gate that's connected to the S pin\nand its inputs",
    "start": "149160",
    "end": "153290"
  },
  {
    "text": "are the clock signal and the D signal so when both of them",
    "start": "153290",
    "end": "156489"
  },
  {
    "text": "are 1, then the output is true so the set pin\nis taken high",
    "start": "156490",
    "end": "160459"
  },
  {
    "text": "and the output of this sets the circuit.\nNeed to do the same to reset it",
    "start": "160459",
    "end": "163939"
  },
  {
    "text": "& we want reset to be 1",
    "start": "163940",
    "end": "166180"
  },
  {
    "text": "when D is zero and clock is one",
    "start": "166190",
    "end": "169300"
  },
  {
    "text": "now an OR circuit's no good because if we\nOR'd them then 1 & 1 would also be true",
    "start": "169300",
    "end": "173520"
  },
  {
    "text": "and we wouldn't want reset and set to be\nset at the same time",
    "start": "173520",
    "end": "176970"
  },
  {
    "text": "so what we do is we use another AND gate, connect that up to the",
    "start": "176970",
    "end": "180050"
  },
  {
    "text": "clock signal but we also need to have a\nsignal that is true",
    "start": "180050",
    "end": "184160"
  },
  {
    "text": "when data or D is 0 and so the\neasiest way to do that",
    "start": "184160",
    "end": "187480"
  },
  {
    "text": "is to use a NOT gate like that and connect that into the circuit.",
    "start": "187480",
    "end": "191920"
  },
  {
    "text": "Normally when we're writing circuits, drawing that out",
    "start": "192000",
    "end": "195000"
  },
  {
    "text": "in full takes up a lot of space, so we\njust reduce it down",
    "start": "195000",
    "end": "198959"
  },
  {
    "text": "to a simple rectangle and this is what's\nreferred to",
    "start": "198959",
    "end": "202880"
  },
  {
    "text": "as a 'D latch' and the reason why it's\ncalled a latch is because",
    "start": "202880",
    "end": "207260"
  },
  {
    "text": "when clock is high then the output will\nfollow whatever",
    "start": "207260",
    "end": "211430"
  },
  {
    "text": "D is, it'll change as D changes\nwhile the output is high. When clock is low",
    "start": "211430",
    "end": "216109"
  },
  {
    "text": "the output is frozen at whatever it\npreviously was. There is another type of circuit",
    "start": "216110",
    "end": "220650"
  },
  {
    "text": "which is called a flip flop, which is drawn in very similar",
    "start": "220690",
    "end": "223970"
  },
  {
    "text": "fashion the difference with this though\nis that the data is only remembered",
    "start": "223970",
    "end": "228579"
  },
  {
    "text": "when this transitions from being low",
    "start": "228579",
    "end": "231890"
  },
  {
    "text": "to high. So when the signal on this\ninput goes from being low",
    "start": "231890",
    "end": "235140"
  },
  {
    "text": "to being high (this is at low and this is at high)",
    "start": "235140",
    "end": "238260"
  },
  {
    "text": "as it's changing it remembers whatever\nthe data is",
    "start": "238260",
    "end": "241310"
  },
  {
    "text": "at that point there and the rest of the time\nit's fixed",
    "start": "241310",
    "end": "244560"
  },
  {
    "text": "so it keeps that going - until it goes high again",
    "start": "244560",
    "end": "248090"
  },
  {
    "text": "and it remembers at this point whatever it was when it changed from low",
    "start": "248090",
    "end": "251620"
  },
  {
    "text": "to high. Both these circuits are used in\nbuilding computers but this one in",
    "start": "251620",
    "end": "255780"
  },
  {
    "text": "particular can be used",
    "start": "255780",
    "end": "257260"
  },
  {
    "text": "to build memory circuits that store\nthings",
    "start": "257260",
    "end": "260489"
  },
  {
    "text": "so what we're going to do now is look at how we can put these together to build up",
    "start": "260489",
    "end": "264760"
  },
  {
    "text": "memory for our computer. With the D flip-flop we can store a single bit",
    "start": "264760",
    "end": "268480"
  },
  {
    "text": "of information but often on a computer\nwe want to store more than that.",
    "start": "268480",
    "end": "272040"
  },
  {
    "text": "We want to store a byte, 32 bits worth and so on",
    "start": "272040",
    "end": "274600"
  },
  {
    "text": "or we'll want have to have several bits and we can choose which one",
    "start": "274600",
    "end": "278120"
  },
  {
    "text": "we want to select, so let's have a look at how we can store more than one bit",
    "start": "278130",
    "end": "282520"
  },
  {
    "text": "Now the simplest case to understand when you install something like a byte",
    "start": "282520",
    "end": "287060"
  },
  {
    "text": "or a 32-bit word or a 64-bit word or even a 128-bit word is something you get these days",
    "start": "287110",
    "end": "293229"
  },
  {
    "text": "now the way you do that is - if you remember how binary",
    "start": "293230",
    "end": "296910"
  },
  {
    "text": "numbers work, we store it as a series of bits.",
    "start": "296910",
    "end": "300190"
  },
  {
    "text": "Inside a computer the data is stored along the various wires and each bit",
    "start": "300190",
    "end": "304720"
  },
  {
    "text": "is stored on its own individual wires. If\nyou look carefully",
    "start": "304720",
    "end": "308290"
  },
  {
    "text": "on the back of this motherboard you'll see\nthat coming off the processor here",
    "start": "308290",
    "end": "313080"
  },
  {
    "text": "you have lots and lots of wires, that go\ntogether. Now some of these are used to tell it",
    "start": "313080",
    "end": "317810"
  },
  {
    "text": "where to store things but others\nare actually carrying the data",
    "start": "317810",
    "end": "320680"
  },
  {
    "text": "We've got 16 lines on the motherboard with\nwhich to transfer the data between the",
    "start": "320680",
    "end": "324520"
  },
  {
    "text": "various chips. Each wire stores one bit",
    "start": "324520",
    "end": "328800"
  },
  {
    "text": "So one wire stores 'bit 0' - one wire stores 'bit 1' and so on.",
    "start": "328810",
    "end": "332919"
  },
  {
    "text": "So our circuit uses several wires to\ncarry the data.",
    "start": "332919",
    "end": "337159"
  },
  {
    "text": "Now if we wanted to store a 16- or\n32-bit number it's very simple.",
    "start": "337160",
    "end": "342460"
  },
  {
    "text": "We're gonna use four-bits here just because it saves on drawing",
    "start": "342560",
    "end": "345940"
  },
  {
    "text": "So our input would be one, two, three, four input wires,",
    "start": "345940",
    "end": "352180"
  },
  {
    "text": "and they'd be labelled something like that",
    "start": "352180",
    "end": "354620"
  },
  {
    "text": "and if we wanted to store, say, that four bit\nnumber, what we'd do is we'd have",
    "start": "354630",
    "end": "359479"
  },
  {
    "text": "four flip-flops - and we connect each of the data pins,",
    "start": "359479",
    "end": "364279"
  },
  {
    "text": "up to a different flip-flop, but we now need it to store things when we want it to,",
    "start": "364340",
    "end": "369100"
  },
  {
    "text": "so remember we had this input here which when we took it from low to high",
    "start": "369100",
    "end": "372280"
  },
  {
    "text": "would store everything well we just\nconnect them altogether",
    "start": "372289",
    "end": "376020"
  },
  {
    "text": "like so, like that and then we have a\nsingle signal",
    "start": "376030",
    "end": "379330"
  },
  {
    "text": "here which we can use to tell it to store\nanything - so when we put the data on here",
    "start": "379330",
    "end": "382970"
  },
  {
    "text": "and transition this one from low to high\nall four of these flip-flops will remember",
    "start": "382970",
    "end": "387770"
  },
  {
    "text": "that data and the outputs here will be the data that we wanted to store.",
    "start": "387770",
    "end": "391770"
  },
  {
    "text": "So storing multiple bits is really easy,\nwe just have multiple flip flops",
    "start": "391770",
    "end": "395800"
  },
  {
    "text": "each flip-flop stores one particular bit of information",
    "start": "395800",
    "end": "399500"
  },
  {
    "text": "If we wanted 8, then we'd have 8 flip-flops - if we wanted to store a 32-bit word",
    "start": "399500",
    "end": "402960"
  },
  {
    "text": "we'd have 32",
    "start": "402969",
    "end": "404289"
  },
  {
    "text": "now you can actually buy these pre-made\nso what we've got here",
    "start": "404289",
    "end": "408169"
  },
  {
    "text": "are 3 8-bit registers as they're called because they can store",
    "start": "408169",
    "end": "411879"
  },
  {
    "text": "8 bits but they're basically just 8 flip\nflops",
    "start": "411879",
    "end": "415250"
  },
  {
    "text": "with 8 inputs and an input that we can\nuse to",
    "start": "415250",
    "end": "419090"
  },
  {
    "text": "tell it to store things and the eight outputs and then you've got the voltage supply & the ground",
    "start": "419090",
    "end": "423150"
  },
  {
    "text": "to actually power the chip.",
    "start": "423160",
    "end": "425700"
  },
  {
    "text": "So that's how we can store multiple bits that are stored in parallel, that make up, say, a byte or so on.",
    "start": "427680",
    "end": "433759"
  },
  {
    "text": "& if we look at this SIM that we took out of\nthe Apple Macintosh",
    "start": "433759",
    "end": "438080"
  },
  {
    "text": "then we can see that there are 8 chips. Now you don't have to have them as separate chips",
    "start": "438080",
    "end": "442159"
  },
  {
    "text": "but often they are so we've got 8 chips here",
    "start": "442180",
    "end": "443620"
  },
  {
    "text": "and each one of these chips will be wired up to store a different bit of the byte.",
    "start": "443620",
    "end": "448280"
  },
  {
    "text": "Doesn't have to be the case, if you look\nat some other SIMs you'll find",
    "start": "448440",
    "end": "451180"
  },
  {
    "text": "that they perhaps only have 2 chips in\nor perhaps even just one and so on",
    "start": "451180",
    "end": "455080"
  },
  {
    "text": "it doesn't make any difference 'cause the\nimplementation is the same",
    "start": "455420",
    "end": "458659"
  },
  {
    "text": "but in this case they actually used 8 chips\non the SIM to store things.",
    "start": "458659",
    "end": "463359"
  },
  {
    "text": "So that's how we can\nstore 8 bits whether a byte or a word we just have 8",
    "start": "463620",
    "end": "468360"
  },
  {
    "text": "single bit 'things' in parallel.",
    "start": "468430",
    "end": "471669"
  },
  {
    "text": "But, if you've done any programming with computers, you'll know that you can store",
    "start": "471860",
    "end": "475500"
  },
  {
    "text": "more than one thing's and you can\naddress them all separately",
    "start": "475500",
    "end": "479099"
  },
  {
    "text": "and we'll look at that in another video",
    "start": "479099",
    "end": "481239"
  },
  {
    "start": "480000",
    "end": "533000"
  },
  {
    "text": "We'd like to thank Audible dot com for\nsponsoring this Computerphile video",
    "start": "483960",
    "end": "487009"
  },
  {
    "text": "if you like books you must check out\nAudible. Go to Audible Dot Com",
    "start": "487010",
    "end": "490840"
  },
  {
    "text": "slash Computerphile, there's a chance to\ndownload one for free.",
    "start": "490840",
    "end": "493910"
  },
  {
    "text": "Now today I'd like to recommend\nChristopher Brookmyre as an author, he's",
    "start": "493910",
    "end": "497680"
  },
  {
    "text": "an absolute genius in my mind",
    "start": "497680",
    "end": "499180"
  },
  {
    "text": "try \"A Snowball in Hell\" which is a really\nreally good book",
    "start": "499180",
    "end": "502500"
  },
  {
    "text": "if you like your novels dark it's very\nclever it's quite funny with a dark",
    "start": "502500",
    "end": "506230"
  },
  {
    "text": "sense of humor",
    "start": "506230",
    "end": "507060"
  },
  {
    "text": "and it's well worth a read so check out\n\"A Snowball in Hell\" by Christopher Brookmyre",
    "start": "507060",
    "end": "511419"
  },
  {
    "text": "at Audible Dot Com slash Computerphile, and thanks once again",
    "start": "511420",
    "end": "515250"
  },
  {
    "text": "to them for sponsoring this Computerphile\nvideo.",
    "start": "515250",
    "end": "517950"
  },
  {
    "text": "...and if we slide the front out, we can start to see how it is inside,",
    "start": "518160",
    "end": "524920"
  },
  {
    "text": "so it's a CRT based monitor",
    "start": "524930",
    "end": "528380"
  },
  {
    "text": "so you can see the tube at the back here -\nand you'll notice I'm being very careful not...",
    "start": "528380",
    "end": "532700"
  }
]