[
  {
    "text": "I I get the impression that you have done that last video about time scales because we're going to start talking",
    "start": "320",
    "end": "5960"
  },
  {
    "text": "about how you know how we get to some of those longer kind of the things you have to wait longer to get to those caches",
    "start": "5960",
    "end": "11960"
  },
  {
    "text": "and memories and storage and all that sort of stuff what so what are we going towards here that's exactly right well",
    "start": "11960",
    "end": "17359"
  },
  {
    "text": "yeah so we I've alluded many times to this large memory array inside the computer that's you know made up of what",
    "start": "17359",
    "end": "24400"
  },
  {
    "text": "I call pigeon holes and nobody really knows what those are but you know like these sort of like cells that are are uh",
    "start": "24400",
    "end": "30599"
  },
  {
    "text": "that you can put a number into and you know I've sort of said the robots go off",
    "start": "30599",
    "end": "35600"
  },
  {
    "text": "and get numbers out and come back and whatever and that's very much you know useful to understand the principles behind it but um nowadays we're talking",
    "start": "35600",
    "end": "43160"
  },
  {
    "text": "about staggering numbers of these pigeon holes you know your average computer's got you know 8 16 maybe 32 gigabytes of",
    "start": "43160",
    "end": "51440"
  },
  {
    "text": "memory which is an awful lot of boxes and unfortunately we don't live in a",
    "start": "51440",
    "end": "56760"
  },
  {
    "text": "Panacea where it's like very quick and fast to get access to that those the memory cells and so there's many tricks",
    "start": "56760",
    "end": "63640"
  },
  {
    "text": "and techniques to sort of get um some speed back from from those cells but I want to talk a little bit about how",
    "start": "63640",
    "end": "69240"
  },
  {
    "text": "those memory cells actually work there are predominantly two types",
    "start": "69240",
    "end": "75759"
  },
  {
    "text": "of memory inside your computer and I'm talking when I talk about memory here I know that there's um some confusion",
    "start": "75759",
    "end": "81240"
  },
  {
    "text": "sometimes but like I'm not talking about your hard disk or your your nvme drive or your ssds in there which is storing",
    "start": "81240",
    "end": "87520"
  },
  {
    "text": "like permanent files and things I'm talking about the memory that your computer is using while it's running to",
    "start": "87520",
    "end": "92759"
  },
  {
    "text": "store information you know the picture on the screen that's currently there uh the programs that are running and um",
    "start": "92759",
    "end": "99360"
  },
  {
    "text": "those are the sort of like sort of 8 gigabytes worth of memory that kind of feel so that that memory here that and we call that that's volatile memory",
    "start": "99360",
    "end": "106119"
  },
  {
    "text": "because if you take the power out cord out of your the back of your PC as I'm sure you've at some point inadvertently",
    "start": "106119",
    "end": "111600"
  },
  {
    "text": "done then you find out that that memory is all gone it's very volatile whereas the other stuff's non-volatile and we're",
    "start": "111600",
    "end": "116920"
  },
  {
    "text": "going to be talking about volatile memory today and there are two typical types of memory and the first one is the",
    "start": "116920",
    "end": "123000"
  },
  {
    "text": "most sort of obvious one from an electronic standpoint and it is based around something called a flipflop which",
    "start": "123000",
    "end": "129360"
  },
  {
    "text": "is not in fact a shoe um at least in Computing and we did a video and I think I used a flipflop as a part of the",
    "start": "129360",
    "end": "135200"
  },
  {
    "text": "animation with a d flipflop we can store a single so the the flipflops are are fantastic and I have a picture of one",
    "start": "135200",
    "end": "140400"
  },
  {
    "text": "over here which unfortunately I would love to have drawn in real time but I am too terrible at artwork and I would get",
    "start": "140400",
    "end": "145879"
  },
  {
    "text": "it wrong but um I want to quickly go over it not because it's that important to understand it but just to sort of get",
    "start": "145879",
    "end": "151120"
  },
  {
    "text": "an idea of how complex just one bit of this memory is it's made out of six",
    "start": "151120",
    "end": "157280"
  },
  {
    "text": "individual transistors and this sort of middle section here is the bit that's storing",
    "start": "157280",
    "end": "162760"
  },
  {
    "text": "the Oneness or the zeron and what it effectively is is it's two inverters so that's like a logical knot so if a zero",
    "start": "162760",
    "end": "169239"
  },
  {
    "text": "goes in one and a one comes out the other side or a one comes into one side and a zero comes out the other and it's",
    "start": "169239",
    "end": "174440"
  },
  {
    "text": "as if the there are two inverters that are plugged into each other so there are",
    "start": "174440",
    "end": "179480"
  },
  {
    "text": "two possible stable configurations for this either there's a zero going into",
    "start": "179480",
    "end": "184799"
  },
  {
    "text": "the first one which means that there's a one coming out of it that goes into the second one that comes back out as a zero",
    "start": "184799",
    "end": "190360"
  },
  {
    "text": "that goes back into the first one and now it's kind of settled or the opposite there's a one going to the first one",
    "start": "190360",
    "end": "195599"
  },
  {
    "text": "which means a zero comes out which means a one comes out the next one which goes back into the original one right so you can see there are two possible ways that",
    "start": "195599",
    "end": "201360"
  },
  {
    "text": "can hold and be stable and that's effectively what this middle section is",
    "start": "201360",
    "end": "206599"
  },
  {
    "text": "doing here there are four transistors two of them are have these Inver is here this is like a cosos and u sorry cosos",
    "start": "206599",
    "end": "212560"
  },
  {
    "text": "where it's nmos and pmos but that's a whole very deep Rabbit Hole um but very cool and then effectively once it's been",
    "start": "212560",
    "end": "220080"
  },
  {
    "text": "set up if we want to read the information that's stored inside that cell we need to sort of turn on these",
    "start": "220080",
    "end": "226120"
  },
  {
    "text": "access transistors because transistors are like little switches in this particular instance so by putting a little bit of a voltage on this top line",
    "start": "226120",
    "end": "232959"
  },
  {
    "text": "here we're connecting the outputs of the the bit to the rest of the system the",
    "start": "232959",
    "end": "238040"
  },
  {
    "text": "data line that flows out of this bit and it's a sort of coincidence we get both the value that's stored and the opposite",
    "start": "238040",
    "end": "245040"
  },
  {
    "text": "of the value that's stored um we don't usually necessarily care about any this",
    "start": "245040",
    "end": "250360"
  },
  {
    "text": "this side we just want the bit and this would be either a one or a zero that stored fantastic and if we want to write",
    "start": "250360",
    "end": "256320"
  },
  {
    "text": "the value if we want to change the value that's stored inside this flip-flop we do the same thing as if we're going to read except we sort of push voltage back",
    "start": "256320",
    "end": "263400"
  },
  {
    "text": "down the the data lines and the transistors in here are weaker than the",
    "start": "263400",
    "end": "268680"
  },
  {
    "text": "ones that are in the rest of the chip and so we can overcome the state that the the flipflops in and pop it into uh",
    "start": "268680",
    "end": "274680"
  },
  {
    "text": "the opposite State or the state that we want it to be in so that's cool and all and fantastic and we don't have to go",
    "start": "274680",
    "end": "280160"
  },
  {
    "text": "into too much detail in here it has two stable configurations and the main um issues to sort of consider about this is",
    "start": "280160",
    "end": "286880"
  },
  {
    "text": "that um this is on all the time right these are plugged into the the power",
    "start": "286880",
    "end": "292280"
  },
  {
    "text": "supply and this is ground here and um even when we're not looking at the memory it's taking small amount of power",
    "start": "292280",
    "end": "299120"
  },
  {
    "text": "just to keep keep it on and that power budget adds up when you've got billions and billions and billions of these",
    "start": "299120",
    "end": "305240"
  },
  {
    "text": "things and so it's not really tenable for large large large amounts of of memory we can't afford that amount of of",
    "start": "305240",
    "end": "311600"
  },
  {
    "text": "of power and sort of thermal dissipation that's usually the issue the more power it takes the hotter it gets and then the bigger your fan has to be on the on the",
    "start": "311600",
    "end": "318199"
  },
  {
    "text": "side of your your chip um it is instantaneous for some definition of instantaneous these transistors flip in",
    "start": "318199",
    "end": "324840"
  },
  {
    "text": "like fto seconds or Pico seconds you know like very very tiny amounts of time so I can get access to this bit very",
    "start": "324840",
    "end": "331639"
  },
  {
    "text": "quickly and when I want to change it it's incredibly quick so this is perfect for some of the information that's stored directly inside the CPU itself so",
    "start": "331639",
    "end": "338199"
  },
  {
    "text": "the registers those we've things we've been talking about you know the little piece of paper with the the the numbers that the computer's actually working on",
    "start": "338199",
    "end": "344319"
  },
  {
    "text": "are made out of arrays of these kinds of things and we've talked a little bit about caches and we'll get back to that",
    "start": "344319",
    "end": "349560"
  },
  {
    "text": "in a second the other thing to note about this is that there are sort of like these all these sort of jump over um wires that I've got here so it's kind",
    "start": "349560",
    "end": "356759"
  },
  {
    "text": "of complicated there are six transistors and the wires Crossing each other and of course when you're talking about an integrated circuit that's made up of",
    "start": "356759",
    "end": "363199"
  },
  {
    "text": "these things you can't print two wires that that cross because they will touch",
    "start": "363199",
    "end": "368680"
  },
  {
    "text": "so now you need two layers of that circuit so that it can go up and above",
    "start": "368680",
    "end": "373800"
  },
  {
    "text": "the wire so literally as I've drawn them here with a little hop in it that's what's going to have to happen somewhere in the chip design so they are awkward",
    "start": "373800",
    "end": "380199"
  },
  {
    "text": "to lay out obviously doable because they're in your computer right now um there is an alternative way of storing",
    "start": "380199",
    "end": "387199"
  },
  {
    "text": "memory that is a lot more efficient in terms of um numbers of transistors and",
    "start": "387199",
    "end": "394720"
  },
  {
    "text": "things so that one I can draw because thankfully it's a lot simpler so this is",
    "start": "394720",
    "end": "400240"
  },
  {
    "text": "we call this static Ram because um well actually it'll become obvious when I do",
    "start": "400240",
    "end": "405720"
  },
  {
    "text": "the opposite of that which is dynamic Ram which is what I'm about to draw so Dynamic Ram has uh we have a data",
    "start": "405720",
    "end": "412759"
  },
  {
    "text": "line just as before this is the data line that can read whether or not this cell is set to one or zero and we have",
    "start": "412759",
    "end": "419720"
  },
  {
    "text": "have one transistor here and we have the address line that",
    "start": "419720",
    "end": "425199"
  },
  {
    "text": "says hey I'd like to read this P this specific bit and then off the side of this we have a",
    "start": "425199",
    "end": "432160"
  },
  {
    "text": "capacitor and I don't my drawings are not very good and I may not have got exactly the right symbol there and then it's just plugged into ground on the",
    "start": "432160",
    "end": "438639"
  },
  {
    "text": "other side so to store one bit of information we have one transistor and",
    "start": "438639",
    "end": "445560"
  },
  {
    "text": "one capacitor now integrated circuits we don't really think of as containing anything other than transistors right",
    "start": "445560",
    "end": "452039"
  },
  {
    "text": "but as it happens the way that these transistors work this is actually a capacitor this plate and this this gate",
    "start": "452039",
    "end": "457479"
  },
  {
    "text": "part of the transistor is a capacitor so we can just sort of make a bigger one and now we've got one bit and so the way",
    "start": "457479",
    "end": "462680"
  },
  {
    "text": "that this stores a bit is to to to put a one in we turn the address line on and we charge up the capacitor and the",
    "start": "462680",
    "end": "470280"
  },
  {
    "text": "capacitor is like a tiny tiny little battery that will store a little bit of charge for um some amount of time and",
    "start": "470280",
    "end": "476520"
  },
  {
    "text": "then once it's charged up we disconnect it we turn off this switch and now it's just going to sit there and it's a little charged battery and if we want to",
    "start": "476520",
    "end": "482400"
  },
  {
    "text": "store a zero we do the same thing and we discharge the capacitor we set it to to sort of zero volts and you notice",
    "start": "482400",
    "end": "489000"
  },
  {
    "text": "there's no Crossing wires in this there's no like things that are hickl so this is a single layer mostly um we can",
    "start": "489000",
    "end": "495879"
  },
  {
    "text": "just replicate this millions and millions and millions of times in a row we've got our millions and millions and millions of bits so what's the catch why",
    "start": "495879",
    "end": "503800"
  },
  {
    "text": "don't we make we're waiting for yeah we're waiting for the problem the but what's the problem here well the trick is that that name Dynamic now and this",
    "start": "503800",
    "end": "510800"
  },
  {
    "text": "Dynamic sounds cool and interesting you know like the dynamic duo or the D but in this instance it means it changes by",
    "start": "510800",
    "end": "516039"
  },
  {
    "text": "itself the capacitor discharges right yeah okay exactly exactly so yeah at",
    "start": "516039",
    "end": "522560"
  },
  {
    "text": "this rate you know when we're talking about the scale that we're talking um when we're putting billions of these on a single integrated circuit this",
    "start": "522560",
    "end": "530160"
  },
  {
    "text": "capacitor is absolutely tiny and so it's ability to store charge is also",
    "start": "530160",
    "end": "536040"
  },
  {
    "text": "incredibly tiny we're talking like dozens of extra electrons on top of one",
    "start": "536040",
    "end": "541200"
  },
  {
    "text": "of the plates is now a Charged capacitor compared to you know what you might think of when you see those huge like",
    "start": "541200",
    "end": "547040"
  },
  {
    "text": "cylinders on your circuit board that are like power capacitors that can store huge amounts of charge this is nothing",
    "start": "547040",
    "end": "553640"
  },
  {
    "text": "so um that is kind of a problem because yeah as you say it will discharge kind",
    "start": "553640",
    "end": "559560"
  },
  {
    "text": "of by itself so that means that if you come back to it a bit later on and by a",
    "start": "559560",
    "end": "564640"
  },
  {
    "text": "bit later I mean like tens of milliseconds later it maybe is leaked out and now it's not you don't even know",
    "start": "564640",
    "end": "570720"
  },
  {
    "text": "if it's a one or a zero anymore because it's like somewhere in between the reverse problem is possible too these are packed into the chip so tightly that",
    "start": "570720",
    "end": "577519"
  },
  {
    "text": "when the capacitor leaks it might leak into its neighbors and actually charge them up right they're that close to each",
    "start": "577519",
    "end": "584079"
  },
  {
    "text": "other we're so close to sort of magical Quantum things going on so this needs",
    "start": "584079",
    "end": "589480"
  },
  {
    "text": "care and attention and um that care and attention requires us to um periodically",
    "start": "589480",
    "end": "597480"
  },
  {
    "text": "go back and recharge all the one bits to be one and to red",
    "start": "597480",
    "end": "603440"
  },
  {
    "text": "discharge all the zero bits back down to zero in case they've picked up some of their neighbors charge there's a sort of",
    "start": "603440",
    "end": "608720"
  },
  {
    "text": "another subtlety to that which is that in the domain of our wonderful static",
    "start": "608720",
    "end": "614079"
  },
  {
    "text": "Ram here when something is on when a transistor is on it's exactly 3 volts or",
    "start": "614079",
    "end": "619480"
  },
  {
    "text": "whatever the voltage is inside this the system it's like a logic one there's no question about it it's not like 2 and a",
    "start": "619480",
    "end": "625360"
  },
  {
    "text": "qu volts or it's exactly three or whatever so that it is a logic compatible device over here we may put 3",
    "start": "625360",
    "end": "633160"
  },
  {
    "text": "volts worth of charge and I'm sort of mixing my physical metaphors here but you know what I mean like so you may have charged this up to 3 volts when you",
    "start": "633160",
    "end": "639200"
  },
  {
    "text": "come back to it a little bit later on it's like 1.9 volts and you're like oh",
    "start": "639200",
    "end": "644360"
  },
  {
    "text": "is that a one or is it a zero that's been charged an awful lot up you need some kind of external Electronics to do",
    "start": "644360",
    "end": "651320"
  },
  {
    "text": "an analog to digital conversion and that takes time and again",
    "start": "651320",
    "end": "656839"
  },
  {
    "text": "we're talking about how few electrons that are hit here that are extra I can't just get my multimeter probe wires and",
    "start": "656839",
    "end": "663279"
  },
  {
    "text": "stick them on the side of it because by doing that the the just the amount of wire that I'm connecting to these will",
    "start": "663279",
    "end": "668399"
  },
  {
    "text": "discharge the thing and we can't tell if it's a one or zero so there's a lot of complicated analog electronics that take",
    "start": "668399",
    "end": "675000"
  },
  {
    "text": "a while to be able to read a batch of cells together by preconditioning all of",
    "start": "675000",
    "end": "680519"
  },
  {
    "text": "the tiny tiny tiny cables inside the ram chip itself to be like somewhere between",
    "start": "680519",
    "end": "685600"
  },
  {
    "text": "0 volts and 3 volts and then doing their analog to digital conversion having connected in the cells it wants to read",
    "start": "685600",
    "end": "692360"
  },
  {
    "text": "and then funnily enough once it's read maybe say 512 cells 1,24 cells all together it stores them in a little",
    "start": "692360",
    "end": "700040"
  },
  {
    "text": "piece of memory just a tiny bit of memory at the edge of the chip that holds um Regular flip flops so just a 52",
    "start": "700040",
    "end": "706720"
  },
  {
    "text": "bits worth of this static RAM and that's what we actually read so when you're then reading the pins when the CPU is",
    "start": "706720",
    "end": "712920"
  },
  {
    "text": "actually talking to the pins of the dam it's talking really to an array of just a few static Ram cells on the edge of",
    "start": "712920",
    "end": "719440"
  },
  {
    "text": "the Chip And so having done that read as well what happens is the output of that static Ram is fed back into the circuit",
    "start": "719440",
    "end": "725440"
  },
  {
    "text": "so that means that having done its determination is this a zero or one it now uses the Logic power from the edge",
    "start": "725440",
    "end": "731399"
  },
  {
    "text": "thing to retop up the ones and and to redrain the zero so it kind of works for itself so effectively by reading a batch",
    "start": "731399",
    "end": "737519"
  },
  {
    "text": "of this memory we've actually refreshed it but all of that takes time and um you know that is a problem because our",
    "start": "737519",
    "end": "744079"
  },
  {
    "text": "computer is running as we talked before somewhere you know 2 3 4 gig which gives",
    "start": "744079",
    "end": "749800"
  },
  {
    "text": "us half or a third of a nan every clock tick and this kind of physical stuff",
    "start": "749800",
    "end": "756440"
  },
  {
    "text": "takes a long time like literally you know hundreds of nanc to kind of get",
    "start": "756440",
    "end": "761600"
  },
  {
    "text": "things warmed up prepared read pulled out so we've got this giant array of of",
    "start": "761600",
    "end": "769600"
  },
  {
    "text": "uh capacitors and transistors that have all this care and feeding which you know some automated circuitry can do some of",
    "start": "769600",
    "end": "775360"
  },
  {
    "text": "that and but they're slow to read and we have some amount of this static RAM",
    "start": "775360",
    "end": "781600"
  },
  {
    "text": "available to us and we would really like everything to look like this this would be great great for us we can access it",
    "start": "781600",
    "end": "787160"
  },
  {
    "text": "um so what can we do to to solve the problem of we want all memory accesses",
    "start": "787160",
    "end": "793240"
  },
  {
    "text": "to be fast or as many of them as possible and this the way that it's solved is to use a small amount of this",
    "start": "793240",
    "end": "799920"
  },
  {
    "text": "memory as a cache for the external much larger memory so how on Earth can we do",
    "start": "799920",
    "end": "808639"
  },
  {
    "text": "that how can can we take the values that are stored in an external RAM chip and sort of hold them closer to us in this",
    "start": "808639",
    "end": "816079"
  },
  {
    "text": "um faster memory um but do it in a way that itself is very fast right I could",
    "start": "816079",
    "end": "823079"
  },
  {
    "text": "you know the first thing you might imagine you would do is you say well I'll just keep you know 16 kiloby say of",
    "start": "823079",
    "end": "829800"
  },
  {
    "text": "the far static RAM and then every time I go to um read from the main memory I",
    "start": "829800",
    "end": "836040"
  },
  {
    "text": "have to search through all that 16 kilobytes of R memory and see if the memory that I'm trying to access has actually been copied locally and that's",
    "start": "836040",
    "end": "843720"
  },
  {
    "text": "great but we only have about a third of a nanc or maybe 23ds of an NC for one or two clock cycles and you can't even with",
    "start": "843720",
    "end": "851279"
  },
  {
    "text": "clever um silicon design you can't search that amount of memory we're in the world where we have to use a few",
    "start": "851279",
    "end": "857560"
  },
  {
    "text": "logic gates to make a quick decision and um and so the solution that",
    "start": "857560",
    "end": "863519"
  },
  {
    "text": "most chip manufacturers come up with is to have a set amount of cache memory um",
    "start": "863519",
    "end": "873560"
  },
  {
    "text": "let's say We've Got U I'm gonna do this using decimal numbers rather than uh binary numbers because then it's a lot",
    "start": "873560",
    "end": "880000"
  },
  {
    "text": "easier for us humans to understand but you have to realize that really it would be done with a certain number of of of bits um but so we we want to read a",
    "start": "880000",
    "end": "887240"
  },
  {
    "text": "memory address something like you know 1 2 5 2 84 so this is this is what our",
    "start": "887240",
    "end": "893320"
  },
  {
    "text": "memory our computer has decided to read it wants to read the memory that's at this cell now the first thing we're",
    "start": "893320",
    "end": "898360"
  },
  {
    "text": "going to do is we're going to say well there are economies of scale here if I have to actually go and read from the real memory on the outside of the",
    "start": "898360",
    "end": "904079"
  },
  {
    "text": "computer I might as well do it in a decent sized batch so what I'm going to do is I'm going to group every 10 memory",
    "start": "904079",
    "end": "911440"
  },
  {
    "text": "cells together again 10 because we're humans not it would be 16 64 128 for for",
    "start": "911440",
    "end": "917399"
  },
  {
    "text": "computers so instead of me looking at thinking of this as being a memory address that's 125284 I'm going to say well this is",
    "start": "917399",
    "end": "924360"
  },
  {
    "text": "some kind of block 12528 and it's the fourth cell inside that block and I'm going to treat that",
    "start": "924360",
    "end": "930800"
  },
  {
    "text": "cell as the unit for which I'm going to either go to memory or I'm going to look in my cach for and then having got that",
    "start": "930800",
    "end": "936680"
  },
  {
    "text": "cell I'll look at the fourth one if I want to look at that particular bite within the line and you know we've talked about robot shoveling stuff right",
    "start": "936680",
    "end": "943120"
  },
  {
    "text": "you know again what means that we can give our a robot that's going out to memory a very wide shovel to pick up 10",
    "start": "943120",
    "end": "948639"
  },
  {
    "text": "bytes at a time which is a lot more um uh a lot more efficient than picking out",
    "start": "948639",
    "end": "956079"
  },
  {
    "text": "single bites at a time and it just happens to work well like that from Electronics point of view so we we we",
    "start": "956079",
    "end": "962120"
  },
  {
    "text": "call this sort of block that we're going to read from memory that's a line a cache line and again in a modern",
    "start": "962120",
    "end": "968639"
  },
  {
    "text": "computer that's more like 64 bytes maybe 128 bytes depending on whether you're on arm or Intel and various things like",
    "start": "968639",
    "end": "974079"
  },
  {
    "text": "that but are a 10 but we still have a a problem here we've got 12528 and somehow",
    "start": "974079",
    "end": "980519"
  },
  {
    "text": "we've got to look for that somewhere in an area of memory we've got say 16,000 entries um actually it won't be 16,000",
    "start": "980519",
    "end": "986920"
  },
  {
    "text": "again I can't help but thinking computer numb here it'll be some human number we're working out so what I'm going to",
    "start": "986920",
    "end": "992519"
  },
  {
    "text": "do I'm going to have a number of slots and each slot can store let's say",
    "start": "992519",
    "end": "1000480"
  },
  {
    "text": "four entries okay so and I'm going to say this is going to be a tag and then",
    "start": "1000480",
    "end": "1005839"
  },
  {
    "text": "this is going to be my 10 bytes of the actual cach line and then we're going to put some flags on the end here which we",
    "start": "1005839",
    "end": "1011600"
  },
  {
    "text": "can talk about perhaps at the end this gives me four possible places to look for my cach line and then I'm going to",
    "start": "1011600",
    "end": "1017880"
  },
  {
    "text": "have lots of those so you have to imagine that there's a huge number of these each of these four entries so each",
    "start": "1017880",
    "end": "1025640"
  },
  {
    "text": "of these is a cache set so these are",
    "start": "1025640",
    "end": "1030760"
  },
  {
    "text": "sets and each set has in this instance four ways we're going to call those ways",
    "start": "1030760",
    "end": "1036798"
  },
  {
    "text": "those are four possible places that my number might be stored in and what we're going to do is let's say we're going to",
    "start": "1036799",
    "end": "1043600"
  },
  {
    "text": "have 100 sets that makes life easier for me so this particular cache memory is 100 sets time four ways 400 time 10 byes",
    "start": "1043600",
    "end": "1052679"
  },
  {
    "text": "so it's 400 bytes of cach memory we're managing here right what I'm going to do is I'm going to take two digits of my",
    "start": "1052679",
    "end": "1058799"
  },
  {
    "text": "address in this instance I'm going to take the two and the eight you know where the four here is our index within the 10 bytes that two and that eight is",
    "start": "1058799",
    "end": "1066280"
  },
  {
    "text": "going to tell me which of the sets to look into and so I'm going to look into set 28 so this is set 28 now as I've",
    "start": "1066280",
    "end": "1073919"
  },
  {
    "text": "drawn it and there would obviously be you know 100 more or whatever sorry 70",
    "start": "1073919",
    "end": "1079559"
  },
  {
    "text": "71 more math math is hard so immediately",
    "start": "1079559",
    "end": "1084600"
  },
  {
    "text": "we've taken our problem of do I have to search every single cache location for",
    "start": "1084600",
    "end": "1090240"
  },
  {
    "text": "125284 down to I only have to check four possible places because I've already",
    "start": "1090240",
    "end": "1096159"
  },
  {
    "text": "indexed it in 28 so this 28 is already selected a much smaller problem and now",
    "start": "1096159",
    "end": "1101720"
  },
  {
    "text": "we're in the domain where I can have um uh the remaining digits which in this",
    "start": "1101720",
    "end": "1108039"
  },
  {
    "text": "instance would be 1 25 I can compare those 125 against the four possible",
    "start": "1108039",
    "end": "1113440"
  },
  {
    "text": "things that might be in this cache so let's say this cache has there's something that is you know 100 over here",
    "start": "1113440",
    "end": "1118880"
  },
  {
    "text": "this is 1 197 and then uh one 202 and then of then we would have you",
    "start": "1118880",
    "end": "1126039"
  },
  {
    "text": "know our you know 125 maybe right so this is obviously the cache as it is when we're reading it and so our",
    "start": "1126039",
    "end": "1132159"
  },
  {
    "text": "comparator can run and we will do four comparisons with with just logic circuits and they could all run together",
    "start": "1132159",
    "end": "1138799"
  },
  {
    "text": "and in this instance one of them would say I've got 125 and then we would know that the the number we're looking for is",
    "start": "1138799",
    "end": "1145000"
  },
  {
    "text": "the fourth bite in here 1 2 3 4 so that would be the value we read for that and",
    "start": "1145000",
    "end": "1150880"
  },
  {
    "text": "again this has now happened with very minimal amount of um logic we haven't",
    "start": "1150880",
    "end": "1156640"
  },
  {
    "text": "had to search 400 possible ways we've only searched four we've got a drawback here which is now that instead of um all",
    "start": "1156640",
    "end": "1163440"
  },
  {
    "text": "of the cache being available for every possible memory location we've said that like essentially these two digits of the",
    "start": "1163440",
    "end": "1169440"
  },
  {
    "text": "of the address tell me which area to look in but it means that if there's different areas of the program that are",
    "start": "1169440",
    "end": "1175400"
  },
  {
    "text": "fighting with the same address here then they have to fight over the same four ways of the cach so that is how our our",
    "start": "1175400",
    "end": "1184280"
  },
  {
    "text": "our our cash can can track quickly where to look now obviously if it missed if",
    "start": "1184280",
    "end": "1189919"
  },
  {
    "text": "this wasn't 125 in this particular instance just that clearer those are kind of how we've broken our number up",
    "start": "1189919",
    "end": "1195760"
  },
  {
    "text": "then we would trigger a read to the real m M and our robot with this big wide Spade would go off and come back with",
    "start": "1195760",
    "end": "1202200"
  },
  {
    "text": "the value and then we would look at the cache set and say which way should we",
    "start": "1202200",
    "end": "1207280"
  },
  {
    "text": "replace now because we have to throw away what we had before and replace it with something that we've just fetched",
    "start": "1207280",
    "end": "1212559"
  },
  {
    "text": "from memory which there are different ways of doing that one way is to just pick one randomly and just say well I'm",
    "start": "1212559",
    "end": "1218440"
  },
  {
    "text": "tough luck another way is in this sort of flag section over here is to treat treat you know uh do a count of how",
    "start": "1218440",
    "end": "1224600"
  },
  {
    "text": "recently it's been accessed and then the least recently accessed one you could throw away and say well we're going to replace that my new cached entry so far",
    "start": "1224600",
    "end": "1230799"
  },
  {
    "text": "we've been talking about how we read from memory um that that you know you read through uh the value comes from",
    "start": "1230799",
    "end": "1236000"
  },
  {
    "text": "memory we're looking the cache it's there great fantastic if we're writing obviously if it's in the cache we can",
    "start": "1236000",
    "end": "1241159"
  },
  {
    "text": "just update the cache memory over here um and say write the value you know 99",
    "start": "1241159",
    "end": "1246679"
  },
  {
    "text": "in this value in in in this in this slot but we have to note that we've made a change to this line of memory so we put",
    "start": "1246679",
    "end": "1253360"
  },
  {
    "text": "a little flag here that says it's been changed and what that means is when this gets evicted from the cache when when",
    "start": "1253360",
    "end": "1259720"
  },
  {
    "text": "someone else comes in and needs to use this particular slice we can't just throw it away we actually have to send",
    "start": "1259720",
    "end": "1265200"
  },
  {
    "text": "the robot with the shovel out with the numbers that we have to go and put them into the real memory of the computer",
    "start": "1265200",
    "end": "1271880"
  },
  {
    "text": "that obviously is a little bit slower than just discarding it because you have to wait for this to become free you have",
    "start": "1271880",
    "end": "1277000"
  },
  {
    "text": "to put it into into memory wait for the other memory to come back but by and large that works out much better so this",
    "start": "1277000",
    "end": "1284679"
  },
  {
    "text": "memory can be accessed in single digit Cycles three four Cycles from the point",
    "start": "1284679",
    "end": "1290400"
  },
  {
    "text": "at which a CPU instruction needs to be able to read the memory that it can get access to this cache and provided it",
    "start": "1290400",
    "end": "1296159"
  },
  {
    "text": "hits the cach that is it finds the information it wants the answer is ready in those three cycles and that obviously",
    "start": "1296159",
    "end": "1301960"
  },
  {
    "text": "is hugely important and um if not obviously we go out to to memory but we",
    "start": "1301960",
    "end": "1308080"
  },
  {
    "text": "actually can say well why about we have a slightly bigger cache to cash the cache where it takes longer to search",
    "start": "1308080",
    "end": "1316080"
  },
  {
    "text": "because it's bigger but and it can have more capacity and so you have a second level of this that's bigger that maybe",
    "start": "1316080",
    "end": "1322480"
  },
  {
    "text": "has you know a thousand sets and each set has eight ways and now you've got a lot more memory and then you go well if",
    "start": "1322480",
    "end": "1328320"
  },
  {
    "text": "it misses the second layer of this cach what do we do well you know if it worked for the first time let's put another",
    "start": "1328320",
    "end": "1333919"
  },
  {
    "text": "cash on the cash so most CPUs have three layers of cache before they get to memory because memory is so much slower",
    "start": "1333919",
    "end": "1340919"
  },
  {
    "text": "than this kind of static memory this cash Ram that it's worth putting large amounts of this on the chip and in fact",
    "start": "1340919",
    "end": "1346600"
  },
  {
    "text": "if you've ever seen those beautiful shots of a CPU you know when someone someone's holding up a those platter of",
    "start": "1346600",
    "end": "1353600"
  },
  {
    "text": "of of circular wafer of silicon with all the CPUs on it if you can see a large",
    "start": "1353600",
    "end": "1359520"
  },
  {
    "text": "repeating structure that just looks like a sort of same area filled in that's all cach memory right there all this stuff",
    "start": "1359520",
    "end": "1365240"
  },
  {
    "text": "here it's very repetitive it looks the same and most of the chip real estate is actually spent on the transistors that",
    "start": "1365240",
    "end": "1371440"
  },
  {
    "text": "make up the caches because that is where most of the time is spent is is going out to memory so avoiding it at all",
    "start": "1371440",
    "end": "1377279"
  },
  {
    "text": "costs is is really important and I suppose I should say why this works as well as it does because it it does in",
    "start": "1377279",
    "end": "1382400"
  },
  {
    "text": "general work very well and there most programs want to access memory in",
    "start": "1382400",
    "end": "1388279"
  },
  {
    "text": "predictable ways if for example um I was you know taking our Fibonacci program",
    "start": "1388279",
    "end": "1393320"
  },
  {
    "text": "from the very very beginning of this all we're looking at memory sequentially one after another and that means that first",
    "start": "1393320",
    "end": "1399520"
  },
  {
    "text": "of all our efficiencies of scale means that when we go and fetch the first number we actually go and fetch 10 bytes",
    "start": "1399520",
    "end": "1405919"
  },
  {
    "text": "worth from memory we we pay the cost of getting 10 bytes but it's not much more than getting one bite from memory because once we've done all this",
    "start": "1405919",
    "end": "1411760"
  },
  {
    "text": "measuring and voltage comparison or whatever we've got a whole bunch of memory so we do that once we've got it now available to us in our cache and now",
    "start": "1411760",
    "end": "1419159"
  },
  {
    "text": "the next nine bytes of our read are essentially free right they come out of this cach we don't have to go to main",
    "start": "1419159",
    "end": "1425360"
  },
  {
    "text": "memory and most programs exhibit that kind of behavior um and we call this sort of um uh uh physical locality so",
    "start": "1425360",
    "end": "1433760"
  },
  {
    "text": "they they're they're locally accessing physically similar areas of memory and so they're likely to to be pulled up in",
    "start": "1433760",
    "end": "1439919"
  },
  {
    "text": "a block when they we get blocks from memory or um they they go back and look at the same memory again um and that",
    "start": "1439919",
    "end": "1446960"
  },
  {
    "text": "sort of looking back at the same memory again is more like temporal locality so in time if we going to look at the same memory over and over again it's",
    "start": "1446960",
    "end": "1453120"
  },
  {
    "text": "obviously beneficial to have it inside the the cache so temporal locality means we're going to look at it in a short",
    "start": "1453120",
    "end": "1458279"
  },
  {
    "text": "amount of time and then physical locality means that it's likely to be near some memory that we've already touched and that's very common did",
    "start": "1458279",
    "end": "1465120"
  },
  {
    "text": "things get bumped down a level if they're not used rather than deleted it's just of overwritten but is it just moved into the next level that's",
    "start": "1465120",
    "end": "1472120"
  },
  {
    "text": "different caches do different things but yes largely yes the the uh the cach is",
    "start": "1472120",
    "end": "1477279"
  },
  {
    "text": "the bigger cache holds um all the stuff that's been evicted from the lower cach so the level one cach will have like a",
    "start": "1477279",
    "end": "1483480"
  },
  {
    "text": "16 kilobytes or 64 kilobytes or something like that then there's like a megabyte maybe of L2 and then there's",
    "start": "1483480",
    "end": "1488960"
  },
  {
    "text": "like 10 15 megabytes of L3 and then yeah when it gets evicted we don't actually have to write it back to the main memory",
    "start": "1488960",
    "end": "1495120"
  },
  {
    "text": "necessarily we can just write it to the L2 and then get on with our life if it Miss is that how things kind of waterf down",
    "start": "1495120",
    "end": "1500720"
  },
  {
    "text": "then or do you when you go to May memory do you put it in all four caches or do you go right okay we need this now so we put it in his cash and then it gets that",
    "start": "1500720",
    "end": "1507679"
  },
  {
    "text": "is a very very interesting question so it depends very much on the architecture of the computer and the choices that the",
    "start": "1507679",
    "end": "1514480"
  },
  {
    "text": "the folks who designed the system made so until maybe five or six years ago I",
    "start": "1514480",
    "end": "1520039"
  },
  {
    "text": "think uh Intel caches so for the x86 family of computers they had a policy",
    "start": "1520039",
    "end": "1526760"
  },
  {
    "text": "where if it's in L3 three it must necessarily be uh oh no other way round",
    "start": "1526760",
    "end": "1532399"
  },
  {
    "text": "sorry if it's in L1 it must necessarily be in L2 and L3 that is they would",
    "start": "1532399",
    "end": "1537559"
  },
  {
    "text": "populate all of the layers and it must be true that you know all the higher layers have the same copy of the",
    "start": "1537559",
    "end": "1543799"
  },
  {
    "text": "information and they did this because then when they're evicting something from L1 they're guaranteed that they",
    "start": "1543799",
    "end": "1549679"
  },
  {
    "text": "exists in L2 and they can just put it in the slot that it currently has in L2 and that makes it very quick and easy to do",
    "start": "1549679",
    "end": "1555159"
  },
  {
    "text": "that um I think AMD chips decided not to do that way and I don't know what arm",
    "start": "1555159",
    "end": "1560600"
  },
  {
    "text": "does but you know this is kind of one of these microarchitectural decisions that people make um the the the the downside",
    "start": "1560600",
    "end": "1566760"
  },
  {
    "text": "of that so-called inclusive cach where everything is included in the higher levels is that if for whatever reason",
    "start": "1566760",
    "end": "1573360"
  },
  {
    "text": "something gets evicted from the L3 then it necessarily also has to be",
    "start": "1573360",
    "end": "1578919"
  },
  {
    "text": "evicted from L2 and L1 in order for the invariant that it's expecting to hold",
    "start": "1578919",
    "end": "1585600"
  },
  {
    "text": "and we haven't really talked about this and it gets a lot deeper very quickly but these caches are shared between or",
    "start": "1585600",
    "end": "1591919"
  },
  {
    "text": "some of these caches are shared between other CPUs on the system and you could imagine that might be a problem where if",
    "start": "1591919",
    "end": "1597120"
  },
  {
    "text": "one CPU has changed the value in its cache and another CPU doesn't know that",
    "start": "1597120",
    "end": "1603279"
  },
  {
    "text": "how do they agree on what the value is in a particular memory cell and there's a very complicated protocol about it but",
    "start": "1603279",
    "end": "1610360"
  },
  {
    "text": "um the level three cache is typically shared between CPUs so it's sort of",
    "start": "1610360",
    "end": "1616440"
  },
  {
    "text": "pulled amongst the whole chip this huge array of like 16 15 gigabytes of of of cat gigabytes megabytes sorry of of of",
    "start": "1616440",
    "end": "1624159"
  },
  {
    "text": "L3 but what that means is a program running on another CPU might be running through the L3 and eventually evict",
    "start": "1624159",
    "end": "1631200"
  },
  {
    "text": "something that in the L3 that's important to my program and because it's been evicted",
    "start": "1631200",
    "end": "1636559"
  },
  {
    "text": "from L3 it gets evicted from my L2 and then from my L1 and then when I go to look for my memory it's not there",
    "start": "1636559",
    "end": "1643440"
  },
  {
    "text": "anymore and I have to take the expensive expensive fault and when I use to make",
    "start": "1643440",
    "end": "1648960"
  },
  {
    "text": "uh trading systems for a living that was a real concern and consideration we had to make sure you know you want this your",
    "start": "1648960",
    "end": "1655159"
  },
  {
    "text": "program to be as fast as possible you don't want some random person logging into the computer that you use for your trading system you know moving the mouse",
    "start": "1655159",
    "end": "1662360"
  },
  {
    "text": "around and that happens to evict the really important cach line that you were relying on for your trading system and",
    "start": "1662360",
    "end": "1667799"
  },
  {
    "text": "then suddenly something happens and now you're very slow very slow you know hundreds of",
    "start": "1667799",
    "end": "1673440"
  },
  {
    "text": "nanc so so yeah there's um there's there's a lot of comp complex",
    "start": "1673559",
    "end": "1678640"
  },
  {
    "text": "interactions with that but you're right it's an interesting thought that you have to consider like L1 L2 L3 there's there's also something called a victim",
    "start": "1678640",
    "end": "1684799"
  },
  {
    "text": "cache which sounds pretty miserable and it's a place where in between the last level cach and memory the most recently",
    "start": "1684799",
    "end": "1691039"
  },
  {
    "text": "thrown out information is stored in a sort of holding pattern um I'm not so so hot on that but it's it's remarkably",
    "start": "1691039",
    "end": "1699559"
  },
  {
    "text": "effective when uh I used to install video television broadcast systems yeah we discovered that some of the video",
    "start": "1699559",
    "end": "1706240"
  },
  {
    "text": "playback servers so we're talking about very specialized bits of Kit which any laptop could do now Rasberry piie could",
    "start": "1706240",
    "end": "1711840"
  },
  {
    "text": "do now but you know 20 years ago you had this very specialized system with multiple video cards to play out uh",
    "start": "1711840",
    "end": "1717880"
  },
  {
    "text": "digital video and they were installed with a a version of Windows that came with everything like M sweeper and solit",
    "start": "1717880",
    "end": "1724600"
  },
  {
    "text": "and we'd spend time in the in the Rack Room in the you know in the operatus room playing solitire until one of the",
    "start": "1724600",
    "end": "1730799"
  },
  {
    "text": "managers spotted us one day went you're not doing that on the video server oh no",
    "start": "1730799",
    "end": "1736000"
  },
  {
    "text": "you just imagine how good is at managing this uh anyway that that's another question no that is that's really but",
    "start": "1736000",
    "end": "1742399"
  },
  {
    "text": "yeah you when you're talking about stuff that has hard real-time deadlines like delivering every 60th of a second or",
    "start": "1742399",
    "end": "1747760"
  },
  {
    "text": "50th of a second you need to present a new frame to I don't know the the entirety of the the UK then yes maybe",
    "start": "1747760",
    "end": "1754480"
  },
  {
    "text": "you shouldn't be clicking around in mind sweeper the systems in in a test State at the time it wasn't actually live but",
    "start": "1754480",
    "end": "1761240"
  },
  {
    "text": "the point remains that these these games were playable on a machine that could have been live yeah anyway sorry deal",
    "start": "1761240",
    "end": "1768880"
  },
  {
    "text": "it's the same deal you know you administrate you know the system administrator of that system has to be able to update the software has to be",
    "start": "1768880",
    "end": "1774120"
  },
  {
    "text": "able to log in and debug and diagnose so all these things are possible and yeah you have to cons at the very extreme",
    "start": "1774120",
    "end": "1780559"
  },
  {
    "text": "most people most people don't even need to think that there's a cash inside their computer even if you're a programmer you know if you're writing",
    "start": "1780559",
    "end": "1786279"
  },
  {
    "text": "python code it's possibly not something that you are exposed to um but there are",
    "start": "1786279",
    "end": "1792559"
  },
  {
    "text": "some things that you can do that make it very much worse or very much better so again if you know",
    "start": "1792559",
    "end": "1798640"
  },
  {
    "text": "that you can arrange your program to read from the beginning of an array of numbers and just go linearly from one",
    "start": "1798640",
    "end": "1805080"
  },
  {
    "text": "end to the other then that's going to be better because the cash will be will helping you and one of the other things",
    "start": "1805080",
    "end": "1810960"
  },
  {
    "text": "that caches do so there's some circuitry in the L1 L2 and L3 that spot patterns",
    "start": "1810960",
    "end": "1816880"
  },
  {
    "text": "in misses and they go wait a second you keep looking for the next 16 bytes every time why don't I just start getting",
    "start": "1816880",
    "end": "1823640"
  },
  {
    "text": "ahead of you and ahead of time prefetch that is to go to the memory and even",
    "start": "1823640",
    "end": "1829200"
  },
  {
    "text": "though you didn't ask for it and say Hey can I have the next 16 bytes and then it would write it into the next cash",
    "start": "1829200",
    "end": "1836440"
  },
  {
    "text": "available slot and then when you come to read it it's already there and that's kind of even more miraculous right um",
    "start": "1836440",
    "end": "1843760"
  },
  {
    "text": "unfortunately that can go wrong where it kind of detects a pattern that doesn't really exist and now your memory traffic",
    "start": "1843760",
    "end": "1848919"
  },
  {
    "text": "is higher because your cach is ineffectively pulling down information",
    "start": "1848919",
    "end": "1854080"
  },
  {
    "text": "it doesn't realize you won't need and flushing things out that you do need I was trying to think of way of expressing what these two two types of memory look",
    "start": "1854080",
    "end": "1860960"
  },
  {
    "text": "like and so a flip-flop if you can think of is a snap bracelet right this is a",
    "start": "1860960",
    "end": "1866480"
  },
  {
    "text": "one and it's stable once I put it into a one it is stable in the form of a one",
    "start": "1866480",
    "end": "1871840"
  },
  {
    "text": "yes but if I apply a little bit of voltage then it'll curl up into a zero",
    "start": "1871840",
    "end": "1877679"
  },
  {
    "text": "I'm trying to hold this up to the camera so you can see it and now it's stable as a zero and if I want to put it back to one I put a little bit of extra oof into",
    "start": "1877679",
    "end": "1883639"
  },
  {
    "text": "it and now it's back to being a one again so what this doesn't unfortunately show is it doesn't show that this takes",
    "start": "1883639",
    "end": "1890240"
  },
  {
    "text": "up power all the time right you know I can leave this on my desk and I don't have to plug it into anything it won't disappear off or anything like so that's",
    "start": "1890240",
    "end": "1895960"
  },
  {
    "text": "where my analogy breaks down but thinking putty or Silly Putty or whatever it's called is this amazing",
    "start": "1895960",
    "end": "1903679"
  },
  {
    "text": "substance that will gradually Sloop back down into being a flat like puddle but I can make a little one like this out of",
    "start": "1903679",
    "end": "1910919"
  },
  {
    "text": "it and if I put that down on my piece of paper here so that's probably better on on there look a bit like a slug now but",
    "start": "1910919",
    "end": "1916840"
  },
  {
    "text": "that's a one but if you and I if IID have done this at the beginning of the presentation as IID planned by the time we got back to it it would just be a big",
    "start": "1916840",
    "end": "1922559"
  },
  {
    "text": "slurp of like a puddle or you know again of a zero like that there's my little zero it would again be indistinguishable",
    "start": "1922559",
    "end": "1929799"
  },
  {
    "text": "from a puddle after you know like 10 minutes and at the sort of scales we're talking about like we said before you",
    "start": "1929799",
    "end": "1935120"
  },
  {
    "text": "know in the previous thing you know that's about the time that's about 60 or 60 60 or 70 n milliseconds and that's",
    "start": "1935120",
    "end": "1942120"
  },
  {
    "text": "how frequently these things have to be topped up right so behind the scenes your your dynamic memory is being topped",
    "start": "1942120",
    "end": "1948360"
  },
  {
    "text": "up every 50 60 milliseconds in order to keep the memory from decaying away and",
    "start": "1948360",
    "end": "1954840"
  },
  {
    "text": "of course millisecond sound really quick to us you know I can't you know that's like a blink time um but to a computer",
    "start": "1954840",
    "end": "1961679"
  },
  {
    "text": "that's actually quite a long time so it's not actually that big a deal but it is noticeable right you can tell um that",
    "start": "1961679",
    "end": "1968159"
  },
  {
    "text": "that sometimes the memory controller is busy saying no I'm just making sure your memory hasn't Decay and you know there just as a as a",
    "start": "1968159",
    "end": "1975039"
  },
  {
    "text": "sort of security note here there have been issues where certain patterns to memory controllers can upset them so",
    "start": "1975039",
    "end": "1983399"
  },
  {
    "text": "badly that even though they're refreshing regularly um that you can force charge to leak out into adjacent",
    "start": "1983399",
    "end": "1989600"
  },
  {
    "text": "cells by reading or writing certain patterns of to memory and um that can",
    "start": "1989600",
    "end": "1996000"
  },
  {
    "text": "actually cause security issues there was a whole furor about this maybe I'm terrible at you know five or",
    "start": "1996000",
    "end": "2002760"
  },
  {
    "text": "six years ago um it was called the row Hammer attack and it's it uses a particular way that you talk to the",
    "start": "2002760",
    "end": "2008559"
  },
  {
    "text": "memory control memory to um to to to like on purpose try and disturb it and",
    "start": "2008559",
    "end": "2014639"
  },
  {
    "text": "put it into a worse state where it'll actually leak charge between cells and then you can actually like change memory that you're not supposed to be able to",
    "start": "2014639",
    "end": "2020720"
  },
  {
    "text": "change which obviously is a huge deal so so uh you know there's there's been some mitigations put into place now I think",
    "start": "2020720",
    "end": "2026000"
  },
  {
    "text": "memory now on purpose refreshes a much more often than that in order to prevent this attack from being viable but yeah",
    "start": "2026000",
    "end": "2033159"
  },
  {
    "text": "so that is how our robot goes and gets the memory from uh the big old pigeon",
    "start": "2033159",
    "end": "2038840"
  },
  {
    "text": "holes which unfortunately aren't pigeon holes they're very complicated looking circuits like this or there are some analog to digital circuits that look",
    "start": "2038840",
    "end": "2045279"
  },
  {
    "text": "like this well basically it tries to avoid any cost going to those pigeon hols but",
    "start": "2045279",
    "end": "2051398"
  },
  {
    "text": "it sounds F exactly yeah actually you're right yeah he has his own little notebook that he carries around with him that that has like the last 400 things",
    "start": "2051399",
    "end": "2058280"
  },
  {
    "text": "he's done in some kind of way and that's the what he actually wants to look into and and avoid going as you say to the",
    "start": "2058280",
    "end": "2064480"
  },
  {
    "text": "I've got it in a pocket here somewhere yeah that's right",
    "start": "2064480",
    "end": "2069679"
  },
  {
    "text": "it ends in this sort of register renaming step and now there's this big sort of Malay of of robots just doing as",
    "start": "2076440",
    "end": "2081760"
  },
  {
    "text": "much work as they possibly can and at the very end we have something called retirement where the instructions are",
    "start": "2081760",
    "end": "2087520"
  },
  {
    "text": "finally written out and that happens in the order that the program wrote them in regardless of how",
    "start": "2087520",
    "end": "2095039"
  }
]