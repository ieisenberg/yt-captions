[
  {
    "start": "0",
    "end": "15000"
  },
  {
    "text": "so Matt we have had to chat with you",
    "start": "0",
    "end": "2190"
  },
  {
    "text": "before about assembler and the game that",
    "start": "2190",
    "end": "4230"
  },
  {
    "text": "you're writing so what we can look at",
    "start": "4230",
    "end": "5940"
  },
  {
    "text": "today we're going to write some basic",
    "start": "5940",
    "end": "7529"
  },
  {
    "text": "game logic and assembly language first",
    "start": "7529",
    "end": "9929"
  },
  {
    "text": "I'm going to show the basics of the CPU",
    "start": "9929",
    "end": "11700"
  },
  {
    "text": "from a programmers point of view so",
    "start": "11700",
    "end": "16379"
  },
  {
    "start": "15000",
    "end": "75000"
  },
  {
    "text": "let's invent a CPU it's going to have a",
    "start": "16379",
    "end": "18810"
  },
  {
    "text": "logic core and because we're programmers",
    "start": "18810",
    "end": "20970"
  },
  {
    "text": "we don't concern ourselves too much with",
    "start": "20970",
    "end": "22560"
  },
  {
    "text": "that what we do care about the registers",
    "start": "22560",
    "end": "24480"
  },
  {
    "text": "and registers are very tiny typically",
    "start": "24480",
    "end": "27090"
  },
  {
    "text": "four to eight bytes of storage inside",
    "start": "27090",
    "end": "29189"
  },
  {
    "text": "the CPU itself for the logic court to",
    "start": "29189",
    "end": "32520"
  },
  {
    "text": "operate on so it's imagine we've got a",
    "start": "32520",
    "end": "34820"
  },
  {
    "text": "register one a registered to and we've",
    "start": "34820",
    "end": "37950"
  },
  {
    "text": "got the pc the pc is the program counter",
    "start": "37950",
    "end": "40350"
  },
  {
    "text": "and that stores the currently executing",
    "start": "40350",
    "end": "41850"
  },
  {
    "text": "line of code so if you imagine back to",
    "start": "41850",
    "end": "44940"
  },
  {
    "text": "your basic days we would have something",
    "start": "44940",
    "end": "46649"
  },
  {
    "text": "like 10 print hello 20 go to 10 so the",
    "start": "46649",
    "end": "51960"
  },
  {
    "text": "1020 are the currently executing lines",
    "start": "51960",
    "end": "54448"
  },
  {
    "text": "of code and basic obviously base it",
    "start": "54449",
    "end": "56070"
  },
  {
    "text": "would have a software solution for this",
    "start": "56070",
    "end": "57449"
  },
  {
    "text": "but the principle applies the pc would",
    "start": "57449",
    "end": "59460"
  },
  {
    "text": "hold the 10 so the logic core would",
    "start": "59460",
    "end": "61198"
  },
  {
    "text": "fetch that line of code to execute it",
    "start": "61199",
    "end": "63750"
  },
  {
    "text": "would then advance the program counter",
    "start": "63750",
    "end": "65128"
  },
  {
    "text": "to 20 and then execute that line of code",
    "start": "65129",
    "end": "67590"
  },
  {
    "text": "but this go to routine would inject 10",
    "start": "67590",
    "end": "71219"
  },
  {
    "text": "back into the program counter so the",
    "start": "71220",
    "end": "72930"
  },
  {
    "text": "next line of code would then be 10 again",
    "start": "72930",
    "end": "74729"
  },
  {
    "text": "so this logic call let's imagine it's",
    "start": "74729",
    "end": "77008"
  },
  {
    "start": "75000",
    "end": "218000"
  },
  {
    "text": "attached to some pseudo rom some ram",
    "start": "77009",
    "end": "80640"
  },
  {
    "text": "maybe a graphics processor or something",
    "start": "80640",
    "end": "83369"
  },
  {
    "text": "along physical wires and this is what we",
    "start": "83369",
    "end": "85439"
  },
  {
    "text": "call the bus so the logical can fetch",
    "start": "85439",
    "end": "87360"
  },
  {
    "text": "memory about using an hour bus when it",
    "start": "87360",
    "end": "89189"
  },
  {
    "text": "initializes it's going to immediately",
    "start": "89189",
    "end": "90720"
  },
  {
    "text": "start executing code the program",
    "start": "90720",
    "end": "92670"
  },
  {
    "text": "characters could be initialized to 0 at",
    "start": "92670",
    "end": "94798"
  },
  {
    "text": "which point SAT rom in our pseudo memory",
    "start": "94799",
    "end": "96540"
  },
  {
    "text": "map it's going to immediately start",
    "start": "96540",
    "end": "98189"
  },
  {
    "text": "executing code from the top of ROM so",
    "start": "98189",
    "end": "101040"
  },
  {
    "text": "let's write some assembly we can",
    "start": "101040",
    "end": "102509"
  },
  {
    "text": "interact with the other two registers",
    "start": "102509",
    "end": "103890"
  },
  {
    "text": "then so the first thing we want to do is",
    "start": "103890",
    "end": "105960"
  },
  {
    "text": "put some basic values in these two so",
    "start": "105960",
    "end": "107670"
  },
  {
    "text": "let's do a move command so we've got",
    "start": "107670",
    "end": "109860"
  },
  {
    "text": "address 0 which is the top of run and",
    "start": "109860",
    "end": "112229"
  },
  {
    "text": "this instruction is going to move the",
    "start": "112229",
    "end": "114179"
  },
  {
    "text": "literal value 8 into register r1 so",
    "start": "114180",
    "end": "117810"
  },
  {
    "text": "that's what that command would look like",
    "start": "117810",
    "end": "119008"
  },
  {
    "text": "next line of code let's imagine these",
    "start": "119009",
    "end": "122040"
  },
  {
    "text": "lines of code are two bytes wide address",
    "start": "122040",
    "end": "124950"
  },
  {
    "text": "number two we're going to move the",
    "start": "124950",
    "end": "127200"
  },
  {
    "text": "literal value for into register r2 and",
    "start": "127200",
    "end": "130229"
  },
  {
    "text": "then as a third line",
    "start": "130229",
    "end": "131710"
  },
  {
    "text": "address for we're going to add the two",
    "start": "131710",
    "end": "134170"
  },
  {
    "text": "together so we'll perform an ab command",
    "start": "134170",
    "end": "136060"
  },
  {
    "text": "we're going to add eight and four",
    "start": "136060",
    "end": "137680"
  },
  {
    "text": "together which we're in r1 and r2 so we",
    "start": "137680",
    "end": "139629"
  },
  {
    "text": "add r1 and r2 together and the result",
    "start": "139630",
    "end": "142540"
  },
  {
    "text": "would be stored in our two so what's",
    "start": "142540",
    "end": "144129"
  },
  {
    "text": "going to happen when the cpu starts up",
    "start": "144130",
    "end": "145630"
  },
  {
    "text": "its going to initialize the pc 20 which",
    "start": "145630",
    "end": "147670"
  },
  {
    "text": "is address 0 in the run where our code",
    "start": "147670",
    "end": "149500"
  },
  {
    "text": "is address 0 is going to move the",
    "start": "149500",
    "end": "152290"
  },
  {
    "text": "literal value 8 into register r1 it's",
    "start": "152290",
    "end": "155409"
  },
  {
    "text": "then going to advance the program",
    "start": "155410",
    "end": "156670"
  },
  {
    "text": "counter 22 which is going to move the",
    "start": "156670",
    "end": "158740"
  },
  {
    "text": "literal value for into register r2 then",
    "start": "158740",
    "end": "161470"
  },
  {
    "text": "it's going to advance the program",
    "start": "161470",
    "end": "162730"
  },
  {
    "text": "counter 24 and that's going to add",
    "start": "162730",
    "end": "165159"
  },
  {
    "text": "register one to register to it's going",
    "start": "165160",
    "end": "168160"
  },
  {
    "text": "to store the value into register two so",
    "start": "168160",
    "end": "170110"
  },
  {
    "text": "we would expect 12 and register at this",
    "start": "170110",
    "end": "172030"
  },
  {
    "text": "point just like basic using the go to",
    "start": "172030",
    "end": "174069"
  },
  {
    "text": "Thurmond go and you can jump the pc",
    "start": "174070",
    "end": "176710"
  },
  {
    "text": "around so let's perform that out",
    "start": "176710",
    "end": "178660"
  },
  {
    "text": "operation again so on a dress 6 i'm",
    "start": "178660",
    "end": "182560"
  },
  {
    "text": "going to jump back up to address for and",
    "start": "182560",
    "end": "185380"
  },
  {
    "text": "that's going to perform the add again so",
    "start": "185380",
    "end": "187120"
  },
  {
    "text": "once this instruction is completed is",
    "start": "187120",
    "end": "189340"
  },
  {
    "text": "going to jump to 6 and that is going to",
    "start": "189340",
    "end": "191290"
  },
  {
    "text": "inject address for into the pc so that",
    "start": "191290",
    "end": "194290"
  },
  {
    "text": "the next executing line of code is going",
    "start": "194290",
    "end": "196810"
  },
  {
    "text": "to be back to four again so we're going",
    "start": "196810",
    "end": "198430"
  },
  {
    "text": "to again add r1 to r2 which would give",
    "start": "198430",
    "end": "201519"
  },
  {
    "text": "us 20 so that would add what was still",
    "start": "201520",
    "end": "204070"
  },
  {
    "text": "in r12 what was now in our to after the",
    "start": "204070",
    "end": "206680"
  },
  {
    "text": "last ad yes yes changes are explicit you",
    "start": "206680",
    "end": "210459"
  },
  {
    "text": "tell the CPU exactly what to do is not",
    "start": "210460",
    "end": "212410"
  },
  {
    "text": "going to change these register values",
    "start": "212410",
    "end": "215140"
  },
  {
    "text": "outside of the code you've written here",
    "start": "215140",
    "end": "217360"
  },
  {
    "text": "this looks really good for you know the",
    "start": "217360",
    "end": "219670"
  },
  {
    "start": "218000",
    "end": "427000"
  },
  {
    "text": "basics of doing some sums and things now",
    "start": "219670",
    "end": "222069"
  },
  {
    "text": "how's this blow when you get into a game",
    "start": "222070",
    "end": "223360"
  },
  {
    "text": "and I can see this being a good good way",
    "start": "223360",
    "end": "225670"
  },
  {
    "text": "for adding up the scores but yep",
    "start": "225670",
    "end": "227349"
  },
  {
    "text": "certainly we are going to look at some",
    "start": "227350",
    "end": "230680"
  },
  {
    "text": "very basic platforming code so we're",
    "start": "230680",
    "end": "232540"
  },
  {
    "text": "going to have a pseudo player that's",
    "start": "232540",
    "end": "234610"
  },
  {
    "text": "awful start a blank page let me first",
    "start": "234610",
    "end": "237490"
  },
  {
    "text": "translate this to 68,000 assembler",
    "start": "237490",
    "end": "239830"
  },
  {
    "text": "actually that's what I was going to do",
    "start": "239830",
    "end": "241170"
  },
  {
    "text": "okay so the 68,000 CPU which is in the",
    "start": "241170",
    "end": "244480"
  },
  {
    "text": "sega megadrive is slightly different to",
    "start": "244480",
    "end": "247120"
  },
  {
    "text": "the cpu we invented here it's got 18",
    "start": "247120",
    "end": "250510"
  },
  {
    "text": "registers which run from d0 to d7 for",
    "start": "250510",
    "end": "254950"
  },
  {
    "text": "the general purpose registers those is",
    "start": "254950",
    "end": "257620"
  },
  {
    "text": "used for a lot of logic and arithmetic",
    "start": "257620",
    "end": "259260"
  },
  {
    "text": "we've also got a0 to a7 which are",
    "start": "259260",
    "end": "262450"
  },
  {
    "text": "address registers which we use for",
    "start": "262450",
    "end": "263980"
  },
  {
    "text": "accessing",
    "start": "263980",
    "end": "264920"
  },
  {
    "text": "parts of memory rom ram other",
    "start": "264920",
    "end": "267980"
  },
  {
    "text": "peripherals on the bus 68,000 logical",
    "start": "267980",
    "end": "271760"
  },
  {
    "text": "we've got d0 to d7 registers we've got",
    "start": "271760",
    "end": "276650"
  },
  {
    "text": "the a 0 to a 7 registers we've got the",
    "start": "276650",
    "end": "279889"
  },
  {
    "text": "pc just like our fake cpu and the status",
    "start": "279890",
    "end": "283250"
  },
  {
    "text": "register here the status register stores",
    "start": "283250",
    "end": "285800"
  },
  {
    "text": "the state of the CPU after the last",
    "start": "285800",
    "end": "288199"
  },
  {
    "text": "operation it'll have flags inside it",
    "start": "288200",
    "end": "290720"
  },
  {
    "text": "called the Zed flag and the carry flag",
    "start": "290720",
    "end": "292370"
  },
  {
    "text": "the Zed flag is used to determine if the",
    "start": "292370",
    "end": "294770"
  },
  {
    "text": "result of the last operation was 0 so if",
    "start": "294770",
    "end": "297710"
  },
  {
    "text": "we had four in our 14 and r2 and",
    "start": "297710",
    "end": "300380"
  },
  {
    "text": "subtracted the to the result would be 0",
    "start": "300380",
    "end": "302270"
  },
  {
    "text": "it would then set the carry flag we can",
    "start": "302270",
    "end": "304669"
  },
  {
    "text": "use that to compare two numbers to see",
    "start": "304670",
    "end": "306980"
  },
  {
    "text": "if they're equivalent it's also got the",
    "start": "306980",
    "end": "309200"
  },
  {
    "text": "carry register which tells us if the",
    "start": "309200",
    "end": "311150"
  },
  {
    "text": "result of the last operation was a",
    "start": "311150",
    "end": "312650"
  },
  {
    "text": "positive number going negative so if we",
    "start": "312650",
    "end": "315290"
  },
  {
    "text": "had seven in our one we had a 12 in r2",
    "start": "315290",
    "end": "319870"
  },
  {
    "text": "and we subtracted are two from our 112",
    "start": "319870",
    "end": "323600"
  },
  {
    "text": "is greater than 7 the result is going to",
    "start": "323600",
    "end": "325490"
  },
  {
    "text": "go negative is going to set that carry",
    "start": "325490",
    "end": "327229"
  },
  {
    "text": "flag and we can use that for comparison",
    "start": "327230",
    "end": "329480"
  },
  {
    "text": "so we can compare two numbers and we can",
    "start": "329480",
    "end": "331100"
  },
  {
    "text": "perform logic jump around to different",
    "start": "331100",
    "end": "333110"
  },
  {
    "text": "parts of code depending on the state of",
    "start": "333110",
    "end": "334909"
  },
  {
    "text": "the flags and the status register okay",
    "start": "334910",
    "end": "337100"
  },
  {
    "text": "so we're going to translate our pseudo",
    "start": "337100",
    "end": "338690"
  },
  {
    "text": "example here into real 68,000 assembly",
    "start": "338690",
    "end": "341270"
  },
  {
    "text": "so the first command the move aight into",
    "start": "341270",
    "end": "343250"
  },
  {
    "text": "register r1 will be a move and we need",
    "start": "343250",
    "end": "346190"
  },
  {
    "text": "to add the size of the operation here",
    "start": "346190",
    "end": "347930"
  },
  {
    "text": "and that can be a biter word or a long",
    "start": "347930",
    "end": "349639"
  },
  {
    "text": "for simplicity's sake i'm going to use",
    "start": "349640",
    "end": "351590"
  },
  {
    "text": "along a byte is eight bits a word is 16",
    "start": "351590",
    "end": "355370"
  },
  {
    "text": "bits and a long word is 32 bits so we're",
    "start": "355370",
    "end": "358310"
  },
  {
    "text": "going to move a long word worth of data",
    "start": "358310",
    "end": "360380"
  },
  {
    "text": "32 bits it's going to be a literal value",
    "start": "360380",
    "end": "363350"
  },
  {
    "text": "eight and we're going to use these d",
    "start": "363350",
    "end": "365330"
  },
  {
    "text": "registers which are the general purpose",
    "start": "365330",
    "end": "367250"
  },
  {
    "text": "or rhythmic registers so let's use d0",
    "start": "367250",
    "end": "370780"
  },
  {
    "text": "next slime we're going to move another",
    "start": "370780",
    "end": "373520"
  },
  {
    "text": "long word literal for into registered d1",
    "start": "373520",
    "end": "377330"
  },
  {
    "text": "and add together we're going to add two",
    "start": "377330",
    "end": "380360"
  },
  {
    "text": "long words worth of data register d 0 to",
    "start": "380360",
    "end": "383479"
  },
  {
    "text": "D 1 i've used long list for simplicity a",
    "start": "383480",
    "end": "385790"
  },
  {
    "text": "bite would only write the eight into the",
    "start": "385790",
    "end": "387800"
  },
  {
    "text": "lower bite and this would be whatever",
    "start": "387800",
    "end": "390199"
  },
  {
    "text": "was last in the upper bikes of that",
    "start": "390200",
    "end": "392450"
  },
  {
    "text": "register if we were to write it as a",
    "start": "392450",
    "end": "394400"
  },
  {
    "text": "word we would get 08 into the lower half",
    "start": "394400",
    "end": "397340"
  },
  {
    "text": "of the reg",
    "start": "397340",
    "end": "397980"
  },
  {
    "text": "and whatever was last used in the",
    "start": "397980",
    "end": "399630"
  },
  {
    "text": "register would be in the upper half but",
    "start": "399630",
    "end": "401370"
  },
  {
    "text": "I always really work with long words so",
    "start": "401370",
    "end": "403080"
  },
  {
    "text": "this register would contain 0008 and the",
    "start": "403080",
    "end": "407490"
  },
  {
    "text": "same goes for the add operation we're",
    "start": "407490",
    "end": "409169"
  },
  {
    "text": "going to add 32 bits of data so the",
    "start": "409170",
    "end": "411690"
  },
  {
    "text": "entire register is going to be added",
    "start": "411690",
    "end": "413670"
  },
  {
    "text": "with the entirety of another register",
    "start": "413670",
    "end": "415380"
  },
  {
    "text": "I'm going to type this back up into the",
    "start": "415380",
    "end": "417000"
  },
  {
    "text": "pburg ER and I'm going to show this",
    "start": "417000",
    "end": "418080"
  },
  {
    "text": "running in the debugger so we can",
    "start": "418080",
    "end": "420120"
  },
  {
    "text": "evaluate evaluate each step as it's",
    "start": "420120",
    "end": "422310"
  },
  {
    "text": "running and then we get to add to it",
    "start": "422310",
    "end": "424710"
  },
  {
    "text": "with some basic platform player logic",
    "start": "424710",
    "end": "426569"
  },
  {
    "text": "let's go some basic assembly language",
    "start": "426570",
    "end": "429150"
  },
  {
    "start": "427000",
    "end": "636000"
  },
  {
    "text": "then I've got environment setup for 68 k",
    "start": "429150",
    "end": "431970"
  },
  {
    "text": "assembler for the sega megadrive which",
    "start": "431970",
    "end": "434130"
  },
  {
    "text": "includes a basic skeleton here the first",
    "start": "434130",
    "end": "436500"
  },
  {
    "text": "thing we do is we define the start and",
    "start": "436500",
    "end": "438930"
  },
  {
    "text": "the end of the ROM file for including in",
    "start": "438930",
    "end": "440880"
  },
  {
    "text": "the head or later we're going to include",
    "start": "440880",
    "end": "442410"
  },
  {
    "text": "the header file here and previously",
    "start": "442410",
    "end": "444750"
  },
  {
    "text": "explained that the pseudo CPU that we",
    "start": "444750",
    "end": "446910"
  },
  {
    "text": "made was going to start executing code",
    "start": "446910",
    "end": "449130"
  },
  {
    "text": "from address 0 for 68 k it's very",
    "start": "449130",
    "end": "451800"
  },
  {
    "text": "slightly different the CPUs not going to",
    "start": "451800",
    "end": "453870"
  },
  {
    "text": "look for code when it starts up it's",
    "start": "453870",
    "end": "455460"
  },
  {
    "text": "going to look for this table in the",
    "start": "455460",
    "end": "457110"
  },
  {
    "text": "first 512 bytes of memory so the first",
    "start": "457110",
    "end": "459509"
  },
  {
    "text": "thing it's going to look for is the",
    "start": "459510",
    "end": "460980"
  },
  {
    "text": "address to initialize the stack value to",
    "start": "460980",
    "end": "463200"
  },
  {
    "text": "and this is the one we're interested in",
    "start": "463200",
    "end": "464790"
  },
  {
    "text": "here is the CPU entry point so it's",
    "start": "464790",
    "end": "467160"
  },
  {
    "text": "going to start executing code from the",
    "start": "467160",
    "end": "468960"
  },
  {
    "text": "address that it finds in this entry of",
    "start": "468960",
    "end": "470759"
  },
  {
    "text": "the table rather than immediately stream",
    "start": "470760",
    "end": "472920"
  },
  {
    "text": "address 0 so we can define a label here",
    "start": "472920",
    "end": "475500"
  },
  {
    "text": "a CPU entry point and then back in our",
    "start": "475500",
    "end": "478190"
  },
  {
    "text": "code file here we can start executing",
    "start": "478190",
    "end": "481800"
  },
  {
    "text": "code from here because this is a",
    "start": "481800",
    "end": "483509"
  },
  {
    "text": "debugger it's very slightly different to",
    "start": "483510",
    "end": "485280"
  },
  {
    "text": "a standard program we have to initialize",
    "start": "485280",
    "end": "487950"
  },
  {
    "text": "the connection to the debugger using",
    "start": "487950",
    "end": "489930"
  },
  {
    "text": "this subroutine but don't worry too much",
    "start": "489930",
    "end": "491460"
  },
  {
    "text": "about it so we can then start typing our",
    "start": "491460",
    "end": "493500"
  },
  {
    "text": "code out so our example before was to",
    "start": "493500",
    "end": "495540"
  },
  {
    "text": "move a long word literal eight into",
    "start": "495540",
    "end": "498300"
  },
  {
    "text": "register d0 we were then going to move a",
    "start": "498300",
    "end": "500789"
  },
  {
    "text": "long word little forward to reg D 1 and",
    "start": "500790",
    "end": "504060"
  },
  {
    "text": "then we're going out of the two together",
    "start": "504060",
    "end": "505470"
  },
  {
    "text": "so add long word worth of data d 0 to D",
    "start": "505470",
    "end": "510030"
  },
  {
    "text": "1 and that should assemble and we can",
    "start": "510030",
    "end": "512190"
  },
  {
    "text": "fire that up them ok so let's switch the",
    "start": "512190",
    "end": "514770"
  },
  {
    "text": "devkit on load up the debugger and then",
    "start": "514770",
    "end": "517469"
  },
  {
    "text": "we'll load our executable we have done a",
    "start": "517470",
    "end": "519329"
  },
  {
    "text": "video on the dev kit for anyone who's",
    "start": "519330",
    "end": "521039"
  },
  {
    "text": "interested oh just give people a kind of",
    "start": "521040",
    "end": "522990"
  },
  {
    "text": "one sentence on what this dev kit is its",
    "start": "522990",
    "end": "525029"
  },
  {
    "text": "a sega mega-cd development kit which has",
    "start": "525030",
    "end": "528180"
  },
  {
    "text": "a snazzy",
    "start": "528180",
    "end": "529740"
  },
  {
    "text": "board inside 468 keightley bugging on",
    "start": "529740",
    "end": "532830"
  },
  {
    "text": "top of that it's got the Mega Drive",
    "start": "532830",
    "end": "534930"
  },
  {
    "text": "daughter board on top of that it's got",
    "start": "534930",
    "end": "536550"
  },
  {
    "text": "the mega-cd daughter board this is",
    "start": "536550",
    "end": "538350"
  },
  {
    "text": "connected to the back of the pc by a",
    "start": "538350",
    "end": "540060"
  },
  {
    "text": "scuzzy cable to a nicer card which can",
    "start": "540060",
    "end": "543420"
  },
  {
    "text": "interact with the debugger here we've",
    "start": "543420",
    "end": "544769"
  },
  {
    "text": "got an old ms-dos based debugger ready",
    "start": "544770",
    "end": "546690"
  },
  {
    "text": "to debug code so it slowly executable",
    "start": "546690",
    "end": "549000"
  },
  {
    "text": "the first thing we want to do is reset",
    "start": "549000",
    "end": "551100"
  },
  {
    "text": "the CPU and then we can bring up a",
    "start": "551100",
    "end": "552839"
  },
  {
    "text": "source window here ok so we can set a",
    "start": "552839",
    "end": "555209"
  },
  {
    "text": "breakpoint on the first line as f9 to go",
    "start": "555209",
    "end": "557940"
  },
  {
    "text": "so that executables now running on the",
    "start": "557940",
    "end": "560820"
  },
  {
    "text": "debug get here and it's showing us in",
    "start": "560820",
    "end": "562950"
  },
  {
    "text": "real time the results of that operation",
    "start": "562950",
    "end": "564480"
  },
  {
    "text": "so we're on this breakpoint here so the",
    "start": "564480",
    "end": "567060"
  },
  {
    "text": "first instruction was going to move the",
    "start": "567060",
    "end": "568890"
  },
  {
    "text": "little eight and to register d0 so if we",
    "start": "568890",
    "end": "571050"
  },
  {
    "text": "step we can see the result of that",
    "start": "571050",
    "end": "572430"
  },
  {
    "text": "operation here the next line was going",
    "start": "572430",
    "end": "574589"
  },
  {
    "text": "to move a little for into register d1 we",
    "start": "574589",
    "end": "576899"
  },
  {
    "text": "can see the results of that here and",
    "start": "576899",
    "end": "579000"
  },
  {
    "text": "then we're going to add the two together",
    "start": "579000",
    "end": "580140"
  },
  {
    "text": "the d 0 plus d 1 and the result is going",
    "start": "580140",
    "end": "583140"
  },
  {
    "text": "to be in d1 so that gives us 12 in",
    "start": "583140",
    "end": "585750"
  },
  {
    "text": "hexadecimal here so that's all working",
    "start": "585750",
    "end": "587850"
  },
  {
    "text": "if you didn't use this literal word you",
    "start": "587850",
    "end": "589740"
  },
  {
    "text": "might be just overwriting some part of",
    "start": "589740",
    "end": "591690"
  },
  {
    "text": "that memory yeah you can write a long",
    "start": "591690",
    "end": "594060"
  },
  {
    "text": "word a word or a byte of data which will",
    "start": "594060",
    "end": "596700"
  },
  {
    "text": "use the first bite two mics or four",
    "start": "596700",
    "end": "599610"
  },
  {
    "text": "bikes for the register the same goes for",
    "start": "599610",
    "end": "602160"
  },
  {
    "text": "add divide multiply subtract etc you",
    "start": "602160",
    "end": "605910"
  },
  {
    "text": "have to specify how much the registers",
    "start": "605910",
    "end": "608459"
  },
  {
    "text": "you're going to deal with that includes",
    "start": "608459",
    "end": "611250"
  },
  {
    "text": "wrapping so if you're doing a bike tad",
    "start": "611250",
    "end": "613100"
  },
  {
    "text": "255 would wrap around 20 if you're doing",
    "start": "613100",
    "end": "616290"
  },
  {
    "text": "a word size at 65 k we're at 64 k would",
    "start": "616290",
    "end": "620940"
  },
  {
    "text": "wrap around 20 again and it's not useful",
    "start": "620940",
    "end": "623730"
  },
  {
    "text": "those things are useful in certain",
    "start": "623730",
    "end": "625560"
  },
  {
    "text": "circumstances on yes tis yes because a",
    "start": "625560",
    "end": "627570"
  },
  {
    "text": "smaller the operation the faster it",
    "start": "627570",
    "end": "629399"
  },
  {
    "text": "executes on the CPU so you can do a lot",
    "start": "629399",
    "end": "631260"
  },
  {
    "text": "of optimizations by doing by size",
    "start": "631260",
    "end": "633060"
  },
  {
    "text": "operations instead of words or long",
    "start": "633060",
    "end": "635070"
  },
  {
    "text": "words ok so we're going to write some",
    "start": "635070",
    "end": "637170"
  },
  {
    "start": "636000",
    "end": "755000"
  },
  {
    "text": "basic platforming code imagine we've got",
    "start": "637170",
    "end": "639750"
  },
  {
    "text": "a player at a floor and he has a",
    "start": "639750",
    "end": "642839"
  },
  {
    "text": "positive x velocity and a positive y",
    "start": "642839",
    "end": "645690"
  },
  {
    "text": "velocity so he is running and jumping",
    "start": "645690",
    "end": "647339"
  },
  {
    "text": "and we're going to handle the logic back",
    "start": "647339",
    "end": "649170"
  },
  {
    "text": "to move the player the first thing we",
    "start": "649170",
    "end": "651570"
  },
  {
    "text": "want to do is to designate some",
    "start": "651570",
    "end": "653399"
  },
  {
    "text": "registers for the player x and y",
    "start": "653399",
    "end": "655290"
  },
  {
    "text": "position so if we initialize the players",
    "start": "655290",
    "end": "660860"
  },
  {
    "text": "exposition a zero and to register d0 so",
    "start": "660939",
    "end": "664910"
  },
  {
    "text": "play it x plus we can initialize the",
    "start": "664910",
    "end": "667699"
  },
  {
    "text": "players y position zero and use d1 for",
    "start": "667699",
    "end": "671779"
  },
  {
    "text": "that and then we can initialize the",
    "start": "671779",
    "end": "673639"
  },
  {
    "text": "velocity values so in d2 let's store the",
    "start": "673639",
    "end": "676970"
  },
  {
    "text": "X velocity something like 16 in 2d too",
    "start": "676970",
    "end": "680748"
  },
  {
    "text": "so player X velocity and we're going to",
    "start": "680749",
    "end": "684559"
  },
  {
    "text": "initialize the player y velocity to",
    "start": "684559",
    "end": "686839"
  },
  {
    "text": "something positive because he's jumping",
    "start": "686839",
    "end": "688550"
  },
  {
    "text": "so 8 in 2d three player y velocity okay",
    "start": "688550",
    "end": "693498"
  },
  {
    "text": "so now we need a game loop so let's",
    "start": "693499",
    "end": "695029"
  },
  {
    "text": "write a label for the top of the game",
    "start": "695029",
    "end": "696680"
  },
  {
    "text": "loop let's call it player update and",
    "start": "696680",
    "end": "699019"
  },
  {
    "text": "then we can start moving the player",
    "start": "699019",
    "end": "701509"
  },
  {
    "text": "using the velocity so we would need to",
    "start": "701509",
    "end": "704120"
  },
  {
    "text": "add players X velocity to the players",
    "start": "704120",
    "end": "706399"
  },
  {
    "text": "backs cause so we're going to add do 220",
    "start": "706399",
    "end": "708740"
  },
  {
    "text": "we're going to add the players y",
    "start": "708740",
    "end": "710779"
  },
  {
    "text": "velocity the players y position so we're",
    "start": "710779",
    "end": "712878"
  },
  {
    "text": "going to add d3 to do one so then we're",
    "start": "712879",
    "end": "715430"
  },
  {
    "text": "going to loop back up to the player",
    "start": "715430",
    "end": "716600"
  },
  {
    "text": "update start so if we do a jump back to",
    "start": "716600",
    "end": "720889"
  },
  {
    "text": "player okay that's going to continue",
    "start": "720889",
    "end": "723350"
  },
  {
    "text": "looping forever so let's save and",
    "start": "723350",
    "end": "725240"
  },
  {
    "text": "assemble that and see it in action so",
    "start": "725240",
    "end": "727579"
  },
  {
    "text": "this is a discreet bit of code for",
    "start": "727579",
    "end": "729290"
  },
  {
    "text": "handling where that player is would that",
    "start": "729290",
    "end": "731029"
  },
  {
    "text": "be right yes this is a very tiny game",
    "start": "731029",
    "end": "734990"
  },
  {
    "text": "loop which would handle the velocity",
    "start": "734990",
    "end": "736670"
  },
  {
    "text": "applying to reply x and y position",
    "start": "736670",
    "end": "738730"
  },
  {
    "text": "obviously stuff would wrap around this",
    "start": "738730",
    "end": "740930"
  },
  {
    "text": "for drawing the character and all yeah",
    "start": "740930",
    "end": "743149"
  },
  {
    "text": "there will be extras here for the",
    "start": "743149",
    "end": "746389"
  },
  {
    "text": "graphics once you calculate the players",
    "start": "746389",
    "end": "748550"
  },
  {
    "text": "x and y position you would send it to",
    "start": "748550",
    "end": "751160"
  },
  {
    "text": "the sprocket X on Y position that's a",
    "start": "751160",
    "end": "753649"
  },
  {
    "text": "subject for another day though okay so",
    "start": "753649",
    "end": "755990"
  },
  {
    "text": "let's break on this line will run again",
    "start": "755990",
    "end": "758329"
  },
  {
    "text": "and then we can break here so let's",
    "start": "758329",
    "end": "760878"
  },
  {
    "text": "initialize d0 to the play x position 0",
    "start": "760879",
    "end": "763370"
  },
  {
    "text": "will initialize the player why pulse 20",
    "start": "763370",
    "end": "766360"
  },
  {
    "text": "we're then going to initialize the place",
    "start": "766360",
    "end": "768438"
  },
  {
    "text": "X velocity to 16 I'm going to initialize",
    "start": "768439",
    "end": "771649"
  },
  {
    "text": "the y velocity 28 and then going to",
    "start": "771649",
    "end": "774470"
  },
  {
    "text": "enter this infinite loop here so we're",
    "start": "774470",
    "end": "776449"
  },
  {
    "text": "going to add the players X velocity 2z0",
    "start": "776449",
    "end": "778628"
  },
  {
    "text": "going to add the players y velocity to",
    "start": "778629",
    "end": "781009"
  },
  {
    "text": "d1 and I'm going to jump back up and I'm",
    "start": "781009",
    "end": "783139"
  },
  {
    "text": "going to continue doing this forever and",
    "start": "783139",
    "end": "786410"
  },
  {
    "text": "the loop would just basically make him",
    "start": "786410",
    "end": "787970"
  },
  {
    "text": "move it will make a move for",
    "start": "787970",
    "end": "789699"
  },
  {
    "text": "so he'll continue to move right he'll",
    "start": "789699",
    "end": "791589"
  },
  {
    "text": "continue to jump up so he's jetpacking",
    "start": "791589",
    "end": "796058"
  },
  {
    "text": "news jetpacking so let's add to it let's",
    "start": "796059",
    "end": "798790"
  },
  {
    "text": "define gravity we would use the equate",
    "start": "798790",
    "end": "802139"
  },
  {
    "text": "label and we'll have gravity as",
    "start": "802139",
    "end": "804998"
  },
  {
    "text": "something like 8 let's define the floor",
    "start": "804999",
    "end": "807609"
  },
  {
    "text": "height as something like seven I haven't",
    "start": "807609",
    "end": "812649"
  },
  {
    "text": "use an odd number yet so in the player",
    "start": "812649",
    "end": "814329"
  },
  {
    "text": "update before we apply the y velocity we",
    "start": "814329",
    "end": "817118"
  },
  {
    "text": "want to apply the gravity to it so we",
    "start": "817119",
    "end": "819249"
  },
  {
    "text": "can subtract long word it's a little so",
    "start": "819249",
    "end": "822189"
  },
  {
    "text": "we need the hash again gravity from the",
    "start": "822189",
    "end": "824319"
  },
  {
    "text": "player y velocity here before we apply",
    "start": "824319",
    "end": "826540"
  },
  {
    "text": "it once the position has advanced we",
    "start": "826540",
    "end": "829449"
  },
  {
    "text": "want to check if we've hit the floor so",
    "start": "829449",
    "end": "831128"
  },
  {
    "text": "to do comparisons you want to watch the",
    "start": "831129",
    "end": "833949"
  },
  {
    "text": "status register to look at the last",
    "start": "833949",
    "end": "836100"
  },
  {
    "text": "state of the CPU for the last operation",
    "start": "836100",
    "end": "839230"
  },
  {
    "text": "so if we do the subtraction one number",
    "start": "839230",
    "end": "842019"
  },
  {
    "text": "from the other the status register will",
    "start": "842019",
    "end": "843579"
  },
  {
    "text": "have a flag in it to tell us whether",
    "start": "843579",
    "end": "844868"
  },
  {
    "text": "that number had become zero or had",
    "start": "844869",
    "end": "847749"
  },
  {
    "text": "become a negative number so you want to",
    "start": "847749",
    "end": "850089"
  },
  {
    "text": "compare the floor height with the",
    "start": "850089",
    "end": "852128"
  },
  {
    "text": "players current white position if the",
    "start": "852129",
    "end": "854410"
  },
  {
    "text": "result of that comparison was a negative",
    "start": "854410",
    "end": "855938"
  },
  {
    "text": "number the player is below the floor so",
    "start": "855939",
    "end": "859569"
  },
  {
    "text": "to do a comparison we would compare the",
    "start": "859569",
    "end": "862269"
  },
  {
    "text": "literal floor height with the players",
    "start": "862269",
    "end": "864399"
  },
  {
    "text": "wide position do you want and then we",
    "start": "864399",
    "end": "867128"
  },
  {
    "text": "would jump to a separate part of the",
    "start": "867129",
    "end": "869439"
  },
  {
    "text": "code if that condition was met so we do",
    "start": "869439",
    "end": "871569"
  },
  {
    "text": "branch if greater than there's also",
    "start": "871569",
    "end": "873579"
  },
  {
    "text": "branch of less than this beqa branch of",
    "start": "873579",
    "end": "876279"
  },
  {
    "text": "equal there's also equivalent for",
    "start": "876279",
    "end": "878199"
  },
  {
    "text": "unsigned numbers as well so that's",
    "start": "878199",
    "end": "880600"
  },
  {
    "text": "basically saying if this certain thing",
    "start": "880600",
    "end": "882668"
  },
  {
    "text": "is true then go to a different bit of",
    "start": "882669",
    "end": "884350"
  },
  {
    "text": "code yes exactly so we start by",
    "start": "884350",
    "end": "886509"
  },
  {
    "text": "comparing the floor height with a d1",
    "start": "886509",
    "end": "888009"
  },
  {
    "text": "which in the background would perform a",
    "start": "888009",
    "end": "890019"
  },
  {
    "text": "subtraction operation but without",
    "start": "890019",
    "end": "891549"
  },
  {
    "text": "writing results when he registers it",
    "start": "891549",
    "end": "893829"
  },
  {
    "text": "would only set the flags in the status",
    "start": "893829",
    "end": "895359"
  },
  {
    "text": "register state say if the result of that",
    "start": "895359",
    "end": "897249"
  },
  {
    "text": "operation would have been 0 or would",
    "start": "897249",
    "end": "899709"
  },
  {
    "text": "have gone negative and then we can check",
    "start": "899709",
    "end": "901720"
  },
  {
    "text": "those flags with the BGT branch if",
    "start": "901720",
    "end": "904209"
  },
  {
    "text": "greater than so that's just going to",
    "start": "904209",
    "end": "905618"
  },
  {
    "text": "check if the value for the carry flag is",
    "start": "905619",
    "end": "909639"
  },
  {
    "text": "one or zero so branch is greater than",
    "start": "909639",
    "end": "912488"
  },
  {
    "text": "and then we jump to another label so",
    "start": "912489",
    "end": "914439"
  },
  {
    "text": "we'll call this",
    "start": "914439",
    "end": "915250"
  },
  {
    "text": "floor and then we'll define that label",
    "start": "915250",
    "end": "917110"
  },
  {
    "text": "here above floor so we compare the full",
    "start": "917110",
    "end": "920380"
  },
  {
    "text": "height with d 1 if that was greater than",
    "start": "920380",
    "end": "922390"
  },
  {
    "text": "then we are above the floor and we're",
    "start": "922390",
    "end": "923860"
  },
  {
    "text": "going to skip this line of code we're",
    "start": "923860",
    "end": "925360"
  },
  {
    "text": "about to write and head straight to",
    "start": "925360",
    "end": "926500"
  },
  {
    "text": "above floor so if that condition was met",
    "start": "926500",
    "end": "928990"
  },
  {
    "text": "we are below the floor and in that case",
    "start": "928990",
    "end": "931089"
  },
  {
    "text": "we want to snap back the players white",
    "start": "931090",
    "end": "933760"
  },
  {
    "text": "position to the floor height so we move",
    "start": "933760",
    "end": "935920"
  },
  {
    "text": "the floor height to the players y",
    "start": "935920",
    "end": "937630"
  },
  {
    "text": "position which is d1 we also want to",
    "start": "937630",
    "end": "940570"
  },
  {
    "text": "null out the velocity because once we",
    "start": "940570",
    "end": "941980"
  },
  {
    "text": "hit the floor we don't want to carry on",
    "start": "941980",
    "end": "943300"
  },
  {
    "text": "going down so we reset that register to",
    "start": "943300",
    "end": "947110"
  },
  {
    "text": "their player what y velocity will be 0",
    "start": "947110",
    "end": "950560"
  },
  {
    "text": "in that case so let's assemble and run",
    "start": "950560",
    "end": "952630"
  },
  {
    "text": "that and we can step through at one at a",
    "start": "952630",
    "end": "954460"
  },
  {
    "text": "time so back in the debugger I've",
    "start": "954460",
    "end": "956500"
  },
  {
    "text": "changed the initial x and y Paul so he's",
    "start": "956500",
    "end": "959080"
  },
  {
    "text": "already above the floor for this",
    "start": "959080",
    "end": "960550"
  },
  {
    "text": "demonstration so let's run this then",
    "start": "960550",
    "end": "962290"
  },
  {
    "text": "initialize the exposition 28 we're going",
    "start": "962290",
    "end": "965470"
  },
  {
    "text": "to initialize the y position 28 we've",
    "start": "965470",
    "end": "967990"
  },
  {
    "text": "initialized the X velocity to 16 and the",
    "start": "967990",
    "end": "971020"
  },
  {
    "text": "y velocity 28 so this time the first",
    "start": "971020",
    "end": "973810"
  },
  {
    "text": "thing we're going to do is subtract",
    "start": "973810",
    "end": "974830"
  },
  {
    "text": "gravity from the player y velocity so",
    "start": "974830",
    "end": "977320"
  },
  {
    "text": "that sin that's down to four before we",
    "start": "977320",
    "end": "979450"
  },
  {
    "text": "apply the x and y velocity so add d 2 to",
    "start": "979450",
    "end": "983890"
  },
  {
    "text": "the 0 at d 3 to do one and then we're",
    "start": "983890",
    "end": "986920"
  },
  {
    "text": "going to check if we are still above the",
    "start": "986920",
    "end": "988750"
  },
  {
    "text": "floor so we're going to compare the",
    "start": "988750",
    "end": "989890"
  },
  {
    "text": "floor height to the new white position",
    "start": "989890",
    "end": "992050"
  },
  {
    "text": "and we're going to branch if it's above",
    "start": "992050",
    "end": "994990"
  },
  {
    "text": "the floor which is still is so we skip",
    "start": "994990",
    "end": "997240"
  },
  {
    "text": "straight to this line and then we jump",
    "start": "997240",
    "end": "998500"
  },
  {
    "text": "back up the player update once again we",
    "start": "998500",
    "end": "1000660"
  },
  {
    "text": "subtract gravity from d3 which sends it",
    "start": "1000660",
    "end": "1003209"
  },
  {
    "text": "0 which means we've hit the apex of the",
    "start": "1003210",
    "end": "1005460"
  },
  {
    "text": "jump we're going to add the x la citty",
    "start": "1005460",
    "end": "1007980"
  },
  {
    "text": "at the y velocity compare a",
    "start": "1007980",
    "end": "1009600"
  },
  {
    "text": "four-syllable the floor which we still",
    "start": "1009600",
    "end": "1011160"
  },
  {
    "text": "are once again we subtract gravity to d3",
    "start": "1011160",
    "end": "1014100"
  },
  {
    "text": "and this now goes negative which means",
    "start": "1014100",
    "end": "1016589"
  },
  {
    "text": "we're past the apex of the jump we're",
    "start": "1016589",
    "end": "1018420"
  },
  {
    "text": "going to start applying downward",
    "start": "1018420",
    "end": "1019800"
  },
  {
    "text": "velocity instead of upward velocity so",
    "start": "1019800",
    "end": "1022200"
  },
  {
    "text": "once again apply the X velocity to the",
    "start": "1022200",
    "end": "1025050"
  },
  {
    "text": "exposition the y velocity to the light",
    "start": "1025050",
    "end": "1026730"
  },
  {
    "text": "position i'm going to start moving",
    "start": "1026730",
    "end": "1028290"
  },
  {
    "text": "downwards instead and we're going to",
    "start": "1028290",
    "end": "1030089"
  },
  {
    "text": "keep going until we are below the floor",
    "start": "1030089",
    "end": "1033350"
  },
  {
    "text": "here so the floor height was set to",
    "start": "1033350",
    "end": "1035730"
  },
  {
    "text": "seven the white position is now zero so",
    "start": "1035730",
    "end": "1038850"
  },
  {
    "text": "this comparison is going to ring true",
    "start": "1038850",
    "end": "1041188"
  },
  {
    "text": "branch is greater than above the floor",
    "start": "1041189",
    "end": "1043500"
  },
  {
    "text": "which will fail there we go so we are",
    "start": "1043500",
    "end": "1046980"
  },
  {
    "text": "now below the floor we need to snap back",
    "start": "1046980",
    "end": "1048929"
  },
  {
    "text": "up to the floor height so we set the",
    "start": "1048929",
    "end": "1051059"
  },
  {
    "text": "full height into the Y position you want",
    "start": "1051059",
    "end": "1054299"
  },
  {
    "text": "and then we know the player y velocity",
    "start": "1054299",
    "end": "1057179"
  },
  {
    "text": "qui don't want to carry on going down so",
    "start": "1057179",
    "end": "1059309"
  },
  {
    "text": "the y velocity is now zero and then back",
    "start": "1059309",
    "end": "1062398"
  },
  {
    "text": "at the player update and then forever we",
    "start": "1062399",
    "end": "1065399"
  },
  {
    "text": "will always snap back up to that floor",
    "start": "1065399",
    "end": "1066960"
  },
  {
    "text": "height and we are always on the floor so",
    "start": "1066960",
    "end": "1069768"
  },
  {
    "text": "now he's still moving to the side but",
    "start": "1069769",
    "end": "1072149"
  },
  {
    "text": "he's just staying on the floor here's",
    "start": "1072149",
    "end": "1073710"
  },
  {
    "text": "just stay on the floor yes because",
    "start": "1073710",
    "end": "1074998"
  },
  {
    "text": "gravity's are basically clamping him to",
    "start": "1074999",
    "end": "1076769"
  },
  {
    "text": "the floor right yeah indeed from here on",
    "start": "1076769",
    "end": "1079529"
  },
  {
    "text": "it's not tricky to add things like",
    "start": "1079529",
    "end": "1081919"
  },
  {
    "text": "acceleration deceleration in air drag",
    "start": "1081919",
    "end": "1084690"
  },
  {
    "text": "things like that and once you start",
    "start": "1084690",
    "end": "1087720"
  },
  {
    "text": "getting into control pad input and stuff",
    "start": "1087720",
    "end": "1089879"
  },
  {
    "text": "like that that you can then apply the",
    "start": "1089879",
    "end": "1091519"
  },
  {
    "text": "acceleration to the current velocity and",
    "start": "1091519",
    "end": "1093749"
  },
  {
    "text": "then have basic pad inputs we've seen on",
    "start": "1093749",
    "end": "1095820"
  },
  {
    "text": "your game in the previous video that",
    "start": "1095820",
    "end": "1097440"
  },
  {
    "text": "you've got bouncing balls in it and is",
    "start": "1097440",
    "end": "1099179"
  },
  {
    "text": "that just an extension of this there's a",
    "start": "1099179",
    "end": "1101008"
  },
  {
    "text": "very basic physics engine in there which",
    "start": "1101009",
    "end": "1102990"
  },
  {
    "text": "is just an extension of all of this very",
    "start": "1102990",
    "end": "1105899"
  },
  {
    "text": "basic collision detection is just",
    "start": "1105899",
    "end": "1107549"
  },
  {
    "text": "comparison of numbers applying clamps or",
    "start": "1107549",
    "end": "1110789"
  },
  {
    "text": "bounce or restitution etc you can build",
    "start": "1110789",
    "end": "1115169"
  },
  {
    "text": "it all up like Lego blocks like this",
    "start": "1115169",
    "end": "1117090"
  },
  {
    "text": "just learn one thing at the time and if",
    "start": "1117090",
    "end": "1119220"
  },
  {
    "text": "somebody out there wants to learn this",
    "start": "1119220",
    "end": "1120720"
  },
  {
    "text": "kind of stuff and they obviously haven't",
    "start": "1120720",
    "end": "1122518"
  },
  {
    "text": "got the dev kit and all this old kit",
    "start": "1122519",
    "end": "1124649"
  },
  {
    "text": "lying around where would you suggest",
    "start": "1124649",
    "end": "1126240"
  },
  {
    "text": "they start to sort of learn these these",
    "start": "1126240",
    "end": "1128519"
  },
  {
    "text": "basic bits and pieces you can do exactly",
    "start": "1128519",
    "end": "1130230"
  },
  {
    "text": "the same thing using an emulator and",
    "start": "1130230",
    "end": "1132179"
  },
  {
    "text": "there are some freeware assemblers out",
    "start": "1132179",
    "end": "1134758"
  },
  {
    "text": "there you just need a text editor",
    "start": "1134759",
    "end": "1136590"
  },
  {
    "text": "assembler and an emulation off you go",
    "start": "1136590",
    "end": "1138600"
  },
  {
    "text": "some are better than others find one",
    "start": "1138600",
    "end": "1140638"
  },
  {
    "text": "with a debugger built-in obviously",
    "start": "1140639",
    "end": "1142049"
  },
  {
    "text": "otherwise you'll get a bit lost but all",
    "start": "1142049",
    "end": "1144210"
  },
  {
    "text": "the principles are essentially the same",
    "start": "1144210",
    "end": "1147768"
  },
  {
    "text": "is this whereas",
    "start": "1148039",
    "end": "1149759"
  },
  {
    "text": "what's cuz he is yeah it pronounced",
    "start": "1149760",
    "end": "1152010"
  },
  {
    "text": "scuzzy I didn't realize that it was such",
    "start": "1152010",
    "end": "1155580"
  },
  {
    "text": "a widespread terminology I thought I'd",
    "start": "1155580",
    "end": "1157500"
  },
  {
    "text": "get laughed at saying scuzzy so I said",
    "start": "1157500",
    "end": "1159600"
  },
  {
    "text": "se SI but whatever thank you internet",
    "start": "1159600",
    "end": "1164390"
  }
]