[
  {
    "start": "0",
    "end": "18000"
  },
  {
    "text": "so a while ago we talked about the",
    "start": "80",
    "end": "2080"
  },
  {
    "text": "lambda calculus which is a simple but",
    "start": "2080",
    "end": "4240"
  },
  {
    "text": "powerful mathematical theory of",
    "start": "4240",
    "end": "5839"
  },
  {
    "text": "functions but something we didn't talk",
    "start": "5839",
    "end": "7600"
  },
  {
    "text": "about at the time was the idea of",
    "start": "7600",
    "end": "9599"
  },
  {
    "text": "curried functions which sound a bit",
    "start": "9599",
    "end": "11120"
  },
  {
    "text": "spicy but are actually very useful so",
    "start": "11120",
    "end": "13200"
  },
  {
    "text": "that's what we're going to talk about",
    "start": "13200",
    "end": "14320"
  },
  {
    "text": "today curried functions",
    "start": "14320",
    "end": "18000"
  },
  {
    "start": "18000",
    "end": "133000"
  },
  {
    "text": "as we often do we're going to start off",
    "start": "18720",
    "end": "20000"
  },
  {
    "text": "with a question and the question is what",
    "start": "20000",
    "end": "22320"
  },
  {
    "text": "actually is a function so for me a",
    "start": "22320",
    "end": "24720"
  },
  {
    "text": "function simply takes an input on one",
    "start": "24720",
    "end": "26720"
  },
  {
    "text": "side processes it inside and then gives",
    "start": "26720",
    "end": "29439"
  },
  {
    "text": "an output on the right hand side so you",
    "start": "29439",
    "end": "31119"
  },
  {
    "text": "can think of it as being a little box or",
    "start": "31119",
    "end": "32558"
  },
  {
    "text": "a little machine takes an input on one",
    "start": "32559",
    "end": "34399"
  },
  {
    "text": "side processes it inside the box and",
    "start": "34399",
    "end": "36480"
  },
  {
    "text": "then produces some output on the other",
    "start": "36480",
    "end": "38559"
  },
  {
    "text": "side so let's have a simple example of a",
    "start": "38559",
    "end": "40640"
  },
  {
    "text": "function and as usual i'm going to be",
    "start": "40640",
    "end": "42320"
  },
  {
    "text": "using haskell but you can basically do",
    "start": "42320",
    "end": "44640"
  },
  {
    "text": "everything i'm going to show you today",
    "start": "44640",
    "end": "46160"
  },
  {
    "text": "in any modern programming language that",
    "start": "46160",
    "end": "48239"
  },
  {
    "text": "provides some support for the lambda",
    "start": "48239",
    "end": "50160"
  },
  {
    "text": "calculus",
    "start": "50160",
    "end": "51600"
  },
  {
    "text": "so the example i'm going to start with",
    "start": "51600",
    "end": "53440"
  },
  {
    "text": "is a simple increment function and we",
    "start": "53440",
    "end": "56079"
  },
  {
    "text": "define it like this increment of x is x",
    "start": "56079",
    "end": "58800"
  },
  {
    "text": "plus one so it just adds one to a number",
    "start": "58800",
    "end": "61520"
  },
  {
    "text": "so you can kind of have a look at the",
    "start": "61520",
    "end": "62640"
  },
  {
    "text": "anatomy of this so the structure of this",
    "start": "62640",
    "end": "64478"
  },
  {
    "text": "and we're doing three things we're",
    "start": "64479",
    "end": "66080"
  },
  {
    "text": "defining a name for the function we're",
    "start": "66080",
    "end": "68000"
  },
  {
    "text": "calling it ink for increment we're",
    "start": "68000",
    "end": "69840"
  },
  {
    "text": "defining a name for the input parameter",
    "start": "69840",
    "end": "72000"
  },
  {
    "text": "x and we're explaining how the output is",
    "start": "72000",
    "end": "74799"
  },
  {
    "text": "calculated in terms of the input",
    "start": "74799",
    "end": "77680"
  },
  {
    "text": "so we can have a couple of examples of",
    "start": "77680",
    "end": "79280"
  },
  {
    "text": "this we could increment the number one",
    "start": "79280",
    "end": "80960"
  },
  {
    "text": "and we get two or we could increment the",
    "start": "80960",
    "end": "82720"
  },
  {
    "text": "number two and get three so it's all",
    "start": "82720",
    "end": "84560"
  },
  {
    "text": "very simple and all very boring so let's",
    "start": "84560",
    "end": "86960"
  },
  {
    "text": "move on towards curried functions now",
    "start": "86960",
    "end": "89439"
  },
  {
    "text": "and the first step we want to take is",
    "start": "89439",
    "end": "91360"
  },
  {
    "text": "the idea of applying a function to a",
    "start": "91360",
    "end": "94320"
  },
  {
    "text": "function as an input",
    "start": "94320",
    "end": "96880"
  },
  {
    "text": "so let me give you a simple example of",
    "start": "96880",
    "end": "98320"
  },
  {
    "text": "this so what i'm going to do is i'm",
    "start": "98320",
    "end": "100560"
  },
  {
    "text": "going to map the increment function that",
    "start": "100560",
    "end": "102720"
  },
  {
    "text": "we just defined over the list from 1 to",
    "start": "102720",
    "end": "105439"
  },
  {
    "text": "10. so what map is is it's a function",
    "start": "105439",
    "end": "108159"
  },
  {
    "text": "which takes two parameters the first",
    "start": "108159",
    "end": "110159"
  },
  {
    "text": "parameter is another function in this",
    "start": "110159",
    "end": "112399"
  },
  {
    "text": "case the little increment function that",
    "start": "112399",
    "end": "113920"
  },
  {
    "text": "we just defined and the second parameter",
    "start": "113920",
    "end": "116399"
  },
  {
    "text": "is a list of things in this case a list",
    "start": "116399",
    "end": "118159"
  },
  {
    "text": "of numbers from one to ten and what map",
    "start": "118159",
    "end": "120159"
  },
  {
    "text": "does is it takes the function here and",
    "start": "120159",
    "end": "122159"
  },
  {
    "text": "applies it all the way across the list",
    "start": "122159",
    "end": "123920"
  },
  {
    "text": "so we're just simply incrementing um all",
    "start": "123920",
    "end": "126159"
  },
  {
    "text": "the numbers from 1 to 10.",
    "start": "126159",
    "end": "128720"
  },
  {
    "text": "and map is called a higher order",
    "start": "128720",
    "end": "130560"
  },
  {
    "text": "function because it takes a function as",
    "start": "130560",
    "end": "132319"
  },
  {
    "text": "one of its inputs so let's have another",
    "start": "132319",
    "end": "134160"
  },
  {
    "start": "133000",
    "end": "235000"
  },
  {
    "text": "example of something a bit more",
    "start": "134160",
    "end": "135760"
  },
  {
    "text": "interesting let's think about the idea",
    "start": "135760",
    "end": "138000"
  },
  {
    "text": "of a function which has more than one",
    "start": "138000",
    "end": "141040"
  },
  {
    "text": "input or more than one parameter so we",
    "start": "141040",
    "end": "143680"
  },
  {
    "text": "can define a little function called add",
    "start": "143680",
    "end": "146080"
  },
  {
    "text": "and we're going to take two numbers x",
    "start": "146080",
    "end": "148319"
  },
  {
    "text": "and y as inputs and then we're going to",
    "start": "148319",
    "end": "150400"
  },
  {
    "text": "simply add them together and the",
    "start": "150400",
    "end": "152160"
  },
  {
    "text": "important point here is that we take the",
    "start": "152160",
    "end": "153920"
  },
  {
    "text": "two numbers x and y packaged up together",
    "start": "153920",
    "end": "156879"
  },
  {
    "text": "as a pair at the same time okay so what",
    "start": "156879",
    "end": "160879"
  },
  {
    "text": "we're going to do then for an example is",
    "start": "160879",
    "end": "162720"
  },
  {
    "text": "we could add 1 and 2 and give 3 or we",
    "start": "162720",
    "end": "165840"
  },
  {
    "text": "could add 2 and 3 and give 5. so all",
    "start": "165840",
    "end": "169440"
  },
  {
    "text": "very simple and again all very boring as",
    "start": "169440",
    "end": "171760"
  },
  {
    "text": "well it's not really anything uh",
    "start": "171760",
    "end": "173840"
  },
  {
    "text": "anything new at the moment",
    "start": "173840",
    "end": "176400"
  },
  {
    "text": "so",
    "start": "176400",
    "end": "177200"
  },
  {
    "text": "what then is a curried function so a",
    "start": "177200",
    "end": "179360"
  },
  {
    "text": "curried function is a function like add",
    "start": "179360",
    "end": "181760"
  },
  {
    "text": "which takes more than one input but",
    "start": "181760",
    "end": "184000"
  },
  {
    "text": "rather than taking them at the same time",
    "start": "184000",
    "end": "186319"
  },
  {
    "text": "packaged as a pair or a triple or",
    "start": "186319",
    "end": "188239"
  },
  {
    "text": "something like that it takes its inputs",
    "start": "188239",
    "end": "190480"
  },
  {
    "text": "one at a time so how could we redefine",
    "start": "190480",
    "end": "193440"
  },
  {
    "text": "add as a curried function what's very",
    "start": "193440",
    "end": "195599"
  },
  {
    "text": "simple we just take the brackets out so",
    "start": "195599",
    "end": "198000"
  },
  {
    "text": "rather than saying add of x y is x plus",
    "start": "198000",
    "end": "201040"
  },
  {
    "text": "y in brackets we just say add of x and",
    "start": "201040",
    "end": "203920"
  },
  {
    "text": "then a space and then a y is x plus y so",
    "start": "203920",
    "end": "206560"
  },
  {
    "text": "it looks basically the same except we're",
    "start": "206560",
    "end": "208640"
  },
  {
    "text": "taking the two inputs x and y one at a",
    "start": "208640",
    "end": "211360"
  },
  {
    "text": "time now rather than at the same time in",
    "start": "211360",
    "end": "214640"
  },
  {
    "text": "a pair",
    "start": "214640",
    "end": "215840"
  },
  {
    "text": "and then we can apply this function in",
    "start": "215840",
    "end": "217519"
  },
  {
    "text": "exactly the same way as before and we",
    "start": "217519",
    "end": "219680"
  },
  {
    "text": "just give it two inputs like one and two",
    "start": "219680",
    "end": "221280"
  },
  {
    "text": "and we get three or we can say what's",
    "start": "221280",
    "end": "223360"
  },
  {
    "text": "two and three and we get five okay so it",
    "start": "223360",
    "end": "225920"
  },
  {
    "text": "looks basically exactly the same as the",
    "start": "225920",
    "end": "228400"
  },
  {
    "text": "regular addition function except rather",
    "start": "228400",
    "end": "230319"
  },
  {
    "text": "than taking a pair of inputs at the same",
    "start": "230319",
    "end": "232159"
  },
  {
    "text": "time it takes two inputs one at a time",
    "start": "232159",
    "end": "236080"
  },
  {
    "start": "235000",
    "end": "324000"
  },
  {
    "text": "so then you can say well what's the",
    "start": "236080",
    "end": "237439"
  },
  {
    "text": "point of defining functions in this",
    "start": "237439",
    "end": "239519"
  },
  {
    "text": "curried manner well the point is that",
    "start": "239519",
    "end": "241760"
  },
  {
    "text": "you don't need to give them all of their",
    "start": "241760",
    "end": "244000"
  },
  {
    "text": "inputs so for example if we did add of",
    "start": "244000",
    "end": "247680"
  },
  {
    "text": "one",
    "start": "247680",
    "end": "248799"
  },
  {
    "text": "and we see what it says oh we actually",
    "start": "248799",
    "end": "250640"
  },
  {
    "text": "get an error here so why do we get an",
    "start": "250640",
    "end": "252159"
  },
  {
    "text": "error so we get an error because",
    "start": "252159",
    "end": "254400"
  },
  {
    "text": "this is still expecting its second",
    "start": "254400",
    "end": "257600"
  },
  {
    "text": "parameter so if i apply add to a single",
    "start": "257600",
    "end": "260479"
  },
  {
    "text": "number one it doesn't know how to do the",
    "start": "260479",
    "end": "262400"
  },
  {
    "text": "addition yet because we haven't given it",
    "start": "262400",
    "end": "264320"
  },
  {
    "text": "a second number and that's what it's",
    "start": "264320",
    "end": "266240"
  },
  {
    "text": "saying here it's trying to print a",
    "start": "266240",
    "end": "267520"
  },
  {
    "text": "function here so it says i don't know",
    "start": "267520",
    "end": "269360"
  },
  {
    "text": "how to show a function from integers to",
    "start": "269360",
    "end": "271440"
  },
  {
    "text": "integers or if you want a more slightly",
    "start": "271440",
    "end": "273360"
  },
  {
    "text": "comprehensible message it's saying maybe",
    "start": "273360",
    "end": "275360"
  },
  {
    "text": "you haven't applied a function to enough",
    "start": "275360",
    "end": "277520"
  },
  {
    "text": "arguments",
    "start": "277520",
    "end": "278560"
  },
  {
    "text": "okay so with the current function which",
    "start": "278560",
    "end": "280960"
  },
  {
    "text": "takes its input one at a time you can",
    "start": "280960",
    "end": "283520"
  },
  {
    "text": "partially apply it to a subset of the",
    "start": "283520",
    "end": "286479"
  },
  {
    "text": "inputs so what could you actually do",
    "start": "286479",
    "end": "288560"
  },
  {
    "text": "with a function like add one",
    "start": "288560",
    "end": "290720"
  },
  {
    "text": "well we could map it for example",
    "start": "290720",
    "end": "293040"
  },
  {
    "text": "so here is a way of incrementing a list",
    "start": "293040",
    "end": "296560"
  },
  {
    "text": "of numbers without defining a custom",
    "start": "296560",
    "end": "298639"
  },
  {
    "text": "increment function so previously we",
    "start": "298639",
    "end": "300240"
  },
  {
    "text": "defined ink of x as x plus one and then",
    "start": "300240",
    "end": "302240"
  },
  {
    "text": "we mapped it here we're using the add",
    "start": "302240",
    "end": "304400"
  },
  {
    "text": "function which is curried because it",
    "start": "304400",
    "end": "306240"
  },
  {
    "text": "takes its inputs one at a time and all",
    "start": "306240",
    "end": "308320"
  },
  {
    "text": "we're doing is giving the add function",
    "start": "308320",
    "end": "310080"
  },
  {
    "text": "one parameter here and then it's a",
    "start": "310080",
    "end": "312000"
  },
  {
    "text": "function which expects a second",
    "start": "312000",
    "end": "313360"
  },
  {
    "text": "parameter and then it will map that all",
    "start": "313360",
    "end": "315440"
  },
  {
    "text": "the way across the list so we get the",
    "start": "315440",
    "end": "317120"
  },
  {
    "text": "same behavior using this general purpose",
    "start": "317120",
    "end": "319520"
  },
  {
    "text": "addition function without having to",
    "start": "319520",
    "end": "321199"
  },
  {
    "text": "define a custom",
    "start": "321199",
    "end": "323199"
  },
  {
    "text": "increment function",
    "start": "323199",
    "end": "325360"
  },
  {
    "start": "324000",
    "end": "472000"
  },
  {
    "text": "so you can ask yourself at this point",
    "start": "325360",
    "end": "326720"
  },
  {
    "text": "what's actually going on with a current",
    "start": "326720",
    "end": "328639"
  },
  {
    "text": "function when i say it takes its inputs",
    "start": "328639",
    "end": "330400"
  },
  {
    "text": "one at a time what does that actually",
    "start": "330400",
    "end": "332320"
  },
  {
    "text": "mean",
    "start": "332320",
    "end": "333120"
  },
  {
    "text": "so let's kind of look at this definition",
    "start": "333120",
    "end": "335360"
  },
  {
    "text": "again so here's the definition we had",
    "start": "335360",
    "end": "337199"
  },
  {
    "text": "out of x y is x plus y what we can do is",
    "start": "337199",
    "end": "340560"
  },
  {
    "text": "do a simple lambda calculus trick here",
    "start": "340560",
    "end": "342880"
  },
  {
    "text": "rather than having the two inputs on the",
    "start": "342880",
    "end": "344800"
  },
  {
    "text": "left hand side of the equals let's move",
    "start": "344800",
    "end": "347039"
  },
  {
    "text": "them across the equal sign to the right",
    "start": "347039",
    "end": "349039"
  },
  {
    "text": "hand side of the definition and we'll do",
    "start": "349039",
    "end": "350560"
  },
  {
    "text": "this in two steps so what i'm going to",
    "start": "350560",
    "end": "352320"
  },
  {
    "text": "do is i'm going to say add of x is",
    "start": "352320",
    "end": "355199"
  },
  {
    "text": "lambda y",
    "start": "355199",
    "end": "356319"
  },
  {
    "text": "arrow x plus y",
    "start": "356319",
    "end": "359520"
  },
  {
    "text": "so what i've done here is the y is no",
    "start": "359520",
    "end": "361759"
  },
  {
    "text": "longer on the left hand side of the",
    "start": "361759",
    "end": "363039"
  },
  {
    "text": "definition here now it's on the right",
    "start": "363039",
    "end": "365120"
  },
  {
    "text": "hand side of the definition so what this",
    "start": "365120",
    "end": "367199"
  },
  {
    "text": "is saying is if you add a number x then",
    "start": "367199",
    "end": "370400"
  },
  {
    "text": "what you get is a function which is",
    "start": "370400",
    "end": "372560"
  },
  {
    "text": "waiting for a second input y and then",
    "start": "372560",
    "end": "375120"
  },
  {
    "text": "it's going to give you back x plus y",
    "start": "375120",
    "end": "377440"
  },
  {
    "text": "and this expression on the right hand",
    "start": "377440",
    "end": "378880"
  },
  {
    "text": "side here is called a lambda expression",
    "start": "378880",
    "end": "380800"
  },
  {
    "text": "it's a nameless function and it's got",
    "start": "380800",
    "end": "382960"
  },
  {
    "text": "the same kind of anatomy as a normal",
    "start": "382960",
    "end": "384960"
  },
  {
    "text": "function definition except for the fact",
    "start": "384960",
    "end": "387120"
  },
  {
    "text": "that you don't give the function a name",
    "start": "387120",
    "end": "389280"
  },
  {
    "text": "so we look at what's going on here we're",
    "start": "389280",
    "end": "391600"
  },
  {
    "text": "taking an input parameter called y and",
    "start": "391600",
    "end": "393840"
  },
  {
    "text": "we're giving back the result x plus y",
    "start": "393840",
    "end": "396080"
  },
  {
    "text": "but nowhere in the blue box here have we",
    "start": "396080",
    "end": "398319"
  },
  {
    "text": "actually given the function a name it's",
    "start": "398319",
    "end": "399919"
  },
  {
    "text": "a nameless function and then we can",
    "start": "399919",
    "end": "401919"
  },
  {
    "text": "actually play the same game with the",
    "start": "401919",
    "end": "403759"
  },
  {
    "text": "other input as well so rather than",
    "start": "403759",
    "end": "405520"
  },
  {
    "text": "having x on the left hand side we can",
    "start": "405520",
    "end": "407600"
  },
  {
    "text": "move it across to the right hand side",
    "start": "407600",
    "end": "409599"
  },
  {
    "text": "and here we have our definition of our",
    "start": "409599",
    "end": "412319"
  },
  {
    "text": "add function in a more primitive way and",
    "start": "412319",
    "end": "414479"
  },
  {
    "text": "this really lets us understand in a",
    "start": "414479",
    "end": "416800"
  },
  {
    "text": "quite fundamental way what's going on",
    "start": "416800",
    "end": "418639"
  },
  {
    "text": "with curried functions what we're saying",
    "start": "418639",
    "end": "420479"
  },
  {
    "text": "is that the addition function is defined",
    "start": "420479",
    "end": "422400"
  },
  {
    "text": "to be the function which takes an input",
    "start": "422400",
    "end": "424479"
  },
  {
    "text": "called x and what you get back is",
    "start": "424479",
    "end": "427039"
  },
  {
    "text": "another function and that function takes",
    "start": "427039",
    "end": "429120"
  },
  {
    "text": "an input called y and then gives you",
    "start": "429120",
    "end": "431120"
  },
  {
    "text": "back the result x plus y you can ask",
    "start": "431120",
    "end": "434080"
  },
  {
    "text": "yourself where does this idea of",
    "start": "434080",
    "end": "435360"
  },
  {
    "text": "currying come from well it's named after",
    "start": "435360",
    "end": "437759"
  },
  {
    "text": "haskell curry who was a mathematician",
    "start": "437759",
    "end": "440080"
  },
  {
    "text": "and logician who studied these kind of",
    "start": "440080",
    "end": "442160"
  },
  {
    "text": "things but haskell curry himself",
    "start": "442160",
    "end": "445599"
  },
  {
    "text": "he wasn't the person who actually",
    "start": "445599",
    "end": "446880"
  },
  {
    "text": "invented this notation or this idea he",
    "start": "446880",
    "end": "449680"
  },
  {
    "text": "attributes it to someone else called",
    "start": "449680",
    "end": "451440"
  },
  {
    "text": "moses schoenfinko who was also a",
    "start": "451440",
    "end": "453360"
  },
  {
    "text": "logician and mathematician working",
    "start": "453360",
    "end": "455280"
  },
  {
    "text": "around the same time shown finkling is",
    "start": "455280",
    "end": "457199"
  },
  {
    "text": "quite a hard word to say i've had to",
    "start": "457199",
    "end": "458560"
  },
  {
    "text": "practice it quite a lot even to be able",
    "start": "458560",
    "end": "460319"
  },
  {
    "text": "to say it today it's not it's not a word",
    "start": "460319",
    "end": "461840"
  },
  {
    "text": "which is very easy to say whereas",
    "start": "461840",
    "end": "463440"
  },
  {
    "text": "currying kind of just trips off the",
    "start": "463440",
    "end": "464800"
  },
  {
    "text": "tongue it's a nice easy word to say so",
    "start": "464800",
    "end": "466639"
  },
  {
    "text": "curry got the credit for it but really",
    "start": "466639",
    "end": "468479"
  },
  {
    "text": "probably moses sean finkel is the one",
    "start": "468479",
    "end": "470960"
  },
  {
    "text": "who who first studied this idea so just",
    "start": "470960",
    "end": "473039"
  },
  {
    "start": "472000",
    "end": "616000"
  },
  {
    "text": "to wrap things up i want to give you an",
    "start": "473039",
    "end": "475039"
  },
  {
    "text": "example which shows that actually",
    "start": "475039",
    "end": "476879"
  },
  {
    "text": "curried functions are quite natural in",
    "start": "476879",
    "end": "479360"
  },
  {
    "text": "the real world as well not just in",
    "start": "479360",
    "end": "480879"
  },
  {
    "text": "computer science so if you think about a",
    "start": "480879",
    "end": "482479"
  },
  {
    "text": "cash machine what does a cash machine do",
    "start": "482479",
    "end": "484560"
  },
  {
    "text": "well it takes three inputs typically you",
    "start": "484560",
    "end": "486800"
  },
  {
    "text": "put your card in",
    "start": "486800",
    "end": "488160"
  },
  {
    "text": "you put your pin number in",
    "start": "488160",
    "end": "490240"
  },
  {
    "text": "and you put a request in and then it's",
    "start": "490240",
    "end": "492879"
  },
  {
    "text": "going to give you some response which",
    "start": "492879",
    "end": "494240"
  },
  {
    "text": "usually is taking some money out and",
    "start": "494240",
    "end": "495680"
  },
  {
    "text": "let's make this a generous cash machine",
    "start": "495680",
    "end": "497599"
  },
  {
    "text": "let's decide that it's always just going",
    "start": "497599",
    "end": "499120"
  },
  {
    "text": "to give you a hundred pounds or a",
    "start": "499120",
    "end": "500879"
  },
  {
    "text": "hundred dollars out",
    "start": "500879",
    "end": "502879"
  },
  {
    "text": "but this is not actually how cash",
    "start": "502879",
    "end": "504240"
  },
  {
    "text": "machines work when you go up to a cash",
    "start": "504240",
    "end": "506160"
  },
  {
    "text": "machine you don't put all of the three",
    "start": "506160",
    "end": "508000"
  },
  {
    "text": "inputs in at exactly the same time well",
    "start": "508000",
    "end": "510080"
  },
  {
    "text": "maybe on a saturday night when you've",
    "start": "510080",
    "end": "511440"
  },
  {
    "text": "been out you try and put all the three",
    "start": "511440",
    "end": "512719"
  },
  {
    "text": "inputs at the same time but this is not",
    "start": "512719",
    "end": "514399"
  },
  {
    "text": "what happens in practice i mean you put",
    "start": "514399",
    "end": "515919"
  },
  {
    "text": "your card in then you put your pin",
    "start": "515919",
    "end": "518000"
  },
  {
    "text": "number in then you put your request in",
    "start": "518000",
    "end": "520159"
  },
  {
    "text": "and finally the machine is going to give",
    "start": "520159",
    "end": "522080"
  },
  {
    "text": "you some money out and that's because",
    "start": "522080",
    "end": "524000"
  },
  {
    "text": "it's really a curried function so let me",
    "start": "524000",
    "end": "526240"
  },
  {
    "text": "redefine it like that",
    "start": "526240",
    "end": "528640"
  },
  {
    "text": "so",
    "start": "528640",
    "end": "529600"
  },
  {
    "text": "here we're defining it as a curried",
    "start": "529600",
    "end": "531040"
  },
  {
    "text": "function it takes us inputs one at a",
    "start": "531040",
    "end": "532640"
  },
  {
    "text": "time so we take a card then a pin number",
    "start": "532640",
    "end": "535279"
  },
  {
    "text": "then a request",
    "start": "535279",
    "end": "536720"
  },
  {
    "text": "actually we can use the lambda notation",
    "start": "536720",
    "end": "538399"
  },
  {
    "text": "to make this even more clear what's",
    "start": "538399",
    "end": "540320"
  },
  {
    "text": "going on what we do is we take a card",
    "start": "540320",
    "end": "543360"
  },
  {
    "text": "and we get back a function it takes a",
    "start": "543360",
    "end": "545519"
  },
  {
    "text": "pin number and then we're going to take",
    "start": "545519",
    "end": "547920"
  },
  {
    "text": "a request",
    "start": "547920",
    "end": "549600"
  },
  {
    "text": "and then we're going to give back our",
    "start": "549600",
    "end": "551440"
  },
  {
    "text": "100 pounds so for me this definition",
    "start": "551440",
    "end": "554720"
  },
  {
    "text": "down the bottom here really captures the",
    "start": "554720",
    "end": "556640"
  },
  {
    "text": "essence of what a cache machine is as a",
    "start": "556640",
    "end": "559279"
  },
  {
    "text": "curried function so it's a function that",
    "start": "559279",
    "end": "561360"
  },
  {
    "text": "takes your card as an input and what it",
    "start": "561360",
    "end": "563600"
  },
  {
    "text": "gives you back is a function that",
    "start": "563600",
    "end": "565839"
  },
  {
    "text": "expects your pin number",
    "start": "565839",
    "end": "567519"
  },
  {
    "text": "and that function takes your pin number",
    "start": "567519",
    "end": "569360"
  },
  {
    "text": "as an input and then what you get back",
    "start": "569360",
    "end": "571120"
  },
  {
    "text": "is a function that takes a request and",
    "start": "571120",
    "end": "573200"
  },
  {
    "text": "finally when you get the request the",
    "start": "573200",
    "end": "574959"
  },
  {
    "text": "machine will be very generous and just",
    "start": "574959",
    "end": "576640"
  },
  {
    "text": "give us our hundred pounds or your",
    "start": "576640",
    "end": "578480"
  },
  {
    "text": "hundred dollars so that's really all i",
    "start": "578480",
    "end": "580640"
  },
  {
    "text": "want to say today about curried",
    "start": "580640",
    "end": "582160"
  },
  {
    "text": "functions they're a very simple idea",
    "start": "582160",
    "end": "583920"
  },
  {
    "text": "it's functions with multiple inputs that",
    "start": "583920",
    "end": "586720"
  },
  {
    "text": "you define in a way that the inputs come",
    "start": "586720",
    "end": "589519"
  },
  {
    "text": "one at a time rather than altogether and",
    "start": "589519",
    "end": "592160"
  },
  {
    "text": "as i said at the start they sound a bit",
    "start": "592160",
    "end": "593760"
  },
  {
    "text": "spicy but they're actually very simple",
    "start": "593760",
    "end": "595600"
  },
  {
    "text": "and very useful",
    "start": "595600",
    "end": "598000"
  },
  {
    "text": "functional programming languages take",
    "start": "598000",
    "end": "599600"
  },
  {
    "text": "care of",
    "start": "599600",
    "end": "601040"
  },
  {
    "text": "a lot of the implementation details that",
    "start": "601040",
    "end": "602880"
  },
  {
    "text": "an older programming languages you have",
    "start": "602880",
    "end": "604320"
  },
  {
    "text": "to do manually for example memory",
    "start": "604320",
    "end": "606399"
  },
  {
    "text": "management",
    "start": "606399",
    "end": "607839"
  },
  {
    "text": "but nowadays it's very popular to use",
    "start": "607839",
    "end": "609519"
  },
  {
    "text": "languages like even java for example",
    "start": "609519",
    "end": "612079"
  },
  {
    "text": "which builds memory management into the",
    "start": "612079",
    "end": "614079"
  },
  {
    "text": "programming language functional",
    "start": "614079",
    "end": "615680"
  },
  {
    "text": "languages do that too",
    "start": "615680",
    "end": "618560"
  }
]