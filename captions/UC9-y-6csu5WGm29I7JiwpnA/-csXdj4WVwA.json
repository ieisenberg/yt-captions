[
  {
    "text": "You take great care when you're buying\nan app. to make sure it's good and it's not",
    "start": "0",
    "end": "4529"
  },
  {
    "text": "going to ruin your machine and does \nexactly what you want. HTML",
    "start": "4529",
    "end": "9219"
  },
  {
    "text": "is the ultimate example of what\ntroubles you get into if you are",
    "start": "9220",
    "end": "14969"
  },
  {
    "text": "promiscuous, right [laughs]?  And you are \npromiscuous why? Because part of what HTML \ndoes is you have to",
    "start": "14969",
    "end": "21270"
  },
  {
    "text": "visit other people's Web sites. And you have\nto execute - not your code that you wrote",
    "start": "21270",
    "end": "27189"
  },
  {
    "text": "- other people's code.",
    "start": "27189",
    "end": "30189"
  },
  {
    "text": "HTML it's an interpreted system. The customers\nwant instant gratification and you've got to ",
    "start": "32020",
    "end": "38860"
  },
  {
    "text": "get cracking. Speed is of the essence. I\nthink the nub of what we're trying to",
    "start": "38860",
    "end": "43350"
  },
  {
    "text": "get at is this:  HTML seems to be able to\ntolerate your mistakes. But for those of",
    "start": "43350",
    "end": "50239"
  },
  {
    "text": "you who know a programming language --\nBasic, C or whatever, you know they will",
    "start": "50239",
    "end": "54649"
  },
  {
    "text": "NOT tolerate your mistakes. They won't \ninterpret for you, they won't compile a",
    "start": "54650",
    "end": "59090"
  },
  {
    "text": "program for you, unless it's correct. So\nhow does this difference come about?  If HTML",
    "start": "59090",
    "end": "64110"
  },
  {
    "text": "is a language -  it's getting executed - what\nis it about it that makes it easy to be",
    "start": "64110",
    "end": "70450"
  },
  {
    "text": "tolerant? And on the face of it, yes, it's\nwonderful - it seems to put my errors",
    "start": "70450",
    "end": "75920"
  },
  {
    "text": "right! Perhaps we could start off with\nour good old friend the paragraph ",
    "start": "75920",
    "end": "81100"
  },
  {
    "text": "And I'm going to just put a piece of\ntext in here which says \"Hello Sean\". And even",
    "start": "81100",
    "end": "86860"
  },
  {
    "text": "though I absolutely don't have to do it\nnevertheless I want to do it - I want to close off",
    "start": "86860",
    "end": "90970"
  },
  {
    "text": "the paragraph. And then I'm going to open\nup another one, straightaway afterwards,",
    "start": "90970",
    "end": "95509"
  },
  {
    "text": "\"Goodbye Dave\". Once again we close off with a\n. You'll all understand that this is",
    "start": "95509",
    "end": "102709"
  },
  {
    "text": "a classic use of paragraphs. You put them\nin sequence you have first paragraph, second\nparagraph, third paragraph. All that kind of",
    "start": "102709",
    "end": "108030"
  },
  {
    "text": "thing. Does it mean anything\nand does it look any different and does",
    "start": "108030",
    "end": "114289"
  },
  {
    "text": "it do any different if I start messing\nabout and saying: \"I'm not going to sequence",
    "start": "114289",
    "end": "122450"
  },
  {
    "text": "them, I'm going to fit the second paragraph\ninside the first so it's nested, as we",
    "start": "122450",
    "end": "130750"
  },
  {
    "text": "say. It forms a hierarchy. It's a para\nwithin a para. You can see the difference",
    "start": "130750",
    "end": "136860"
  },
  {
    "text": "I've opened up a paragraph and I've said \"Hello\nSean\". I've then opened up another paragraph",
    "start": "136860",
    "end": "142450"
  },
  {
    "text": "and I've said \"This is a nest\" just\nto hammer it home that the inner one really",
    "start": "142450",
    "end": "147830"
  },
  {
    "text": "is sitting inside the outer one. And then I\ndutifully closed them both off. You might",
    "start": "147830",
    "end": "153150"
  },
  {
    "text": "think: \"Oh! I know what it will do. I might get\n'Hello Sean' and then the phrase \"This is a",
    "start": "153150",
    "end": "158260"
  },
  {
    "text": "nest\" will be tabbed in and indented. Maybe\nthat's what it does. So I've tried this",
    "start": "158260",
    "end": "163120"
  },
  {
    "text": "out in my own",
    "start": "163120",
    "end": "164769"
  },
  {
    "text": "Firefox browser. And, believe you me, it\ndoesn't crash; it it just treats it",
    "start": "164769",
    "end": "170370"
  },
  {
    "text": "exactly as if it was sequential\nparagraphs. There's no sign of nesting or",
    "start": "170370",
    "end": "176040"
  },
  {
    "text": "anything. So if we develop these a little\nbit further now, we could say \"OK do the ",
    "start": "176040",
    "end": "183610"
  },
  {
    "text": "'Hello Sean' do another  'Goodbye Dave'  \n>> Sean: So you're omitting the closing bit is",
    "start": "183610",
    "end": "190769"
  },
  {
    "text": "that right?\n>> DFB: I'm  ommitting the closing of the\nparagraphs. Is that acceptable to HTML?",
    "start": "190769",
    "end": "197440"
  },
  {
    "text": "Yes it is. Nothing was gonna to fault you for missing\nout . And that, if you type that in,",
    "start": "197440",
    "end": "204390"
  },
  {
    "text": "will look the same as that. It  wants to\nput the end-tags in and obviously, in some",
    "start": "204390",
    "end": "209670"
  },
  {
    "text": "sense, it does. But what's its rule and,\nhere we go,",
    "start": "209670",
    "end": "212670"
  },
  {
    "text": "it probably won't do what you want to do.\nIt does what it finds convenient and what",
    "start": "213680",
    "end": "218659"
  },
  {
    "text": "it finds convenient is the following rule:\nIt says \"I am going to assume, if you give me a",
    "start": "218660",
    "end": "223440"
  },
  {
    "text": "second  and I'm already inside the\nfirst one I'll just close the first one off\".",
    "start": "223440",
    "end": "227709"
  },
  {
    "text": "How would the browser cope if I sometimes\nput my  in and sometimes didn't?",
    "start": "227709",
    "end": "231630"
  },
  {
    "text": "And the answer is that it will always, as far\nas I know, assume that you want a sequence",
    "start": "231630",
    "end": "236459"
  },
  {
    "text": "and that is what it will impose on\nyou. What it comes down to is a sort \nof informal theorem,",
    "start": "236459",
    "end": "243010"
  },
  {
    "text": "something like the following. If you're\ntrying to be very clever and mend",
    "start": "243010",
    "end": "249840"
  },
  {
    "text": "somebody's incorrect program then the\nproblem is that if you have a structure",
    "start": "249840",
    "end": "255359"
  },
  {
    "text": "that can be 'a sequence of', or it can be \n'a nest of, 'or it can be any any combination",
    "start": "255359",
    "end": "262750"
  },
  {
    "text": "you could have 'a sequence of nests' or a\n'nest of sequences'. But if you once",
    "start": "262750",
    "end": "268740"
  },
  {
    "text": "start saying they can both co-exist\n-- nesting, sequencing -- then you must put",
    "start": "268740",
    "end": "275789"
  },
  {
    "text": "your end-tags in,  if you want to be unambiguous.\nOtherwise how can it be repaired? So in",
    "start": "275790",
    "end": "281410"
  },
  {
    "text": "other words if both\npossibilities are possible then you",
    "start": "281410",
    "end": "286530"
  },
  {
    "text": "can't have smart behaviour because it cannot\nknow how to repair it correctly.  And what",
    "start": "286530",
    "end": "291810"
  },
  {
    "text": "HTML is doing is -- it's not solving the\ninsoluble -- it's saying I have one view",
    "start": "291810",
    "end": "297430"
  },
  {
    "text": "of the world and I'm going to\nimpose it on you and I am NOT going to",
    "start": "297430",
    "end": "300300"
  },
  {
    "text": "try and be clever. Now that, of course, is\na luxury that HTML has. It basically says \n\"I keep things",
    "start": "300300",
    "end": "307220"
  },
  {
    "text": "simple.  I like things to be more or less\nsequential with the minimum of this embedding,",
    "start": "307220",
    "end": "312840"
  },
  {
    "text": "y' know and all that -- and that's why I can\nget away with murder. Now for those of",
    "start": "312840",
    "end": "317440"
  },
  {
    "text": "you that have written a program and know\nthat you compile it, or even you",
    "start": "317440",
    "end": "322520"
  },
  {
    "text": "interpret it - Oh! boy -- it's not going to\ntry and mend your bad program for you!",
    "start": "322520",
    "end": "328550"
  },
  {
    "text": "Why is it that things are so much more complicated/",
    "start": "328550",
    "end": "331440"
  },
  {
    "text": "Well, the answer is you can do more with\nthese languages and you will want to do more.",
    "start": "331440",
    "end": "336160"
  },
  {
    "text": "Let me just invent a little piece of\npseudo-code and I'll let you fill",
    "start": "336160",
    "end": "343250"
  },
  {
    "text": "this in, in either Basic, or C, or Java\nor whatever turns you on: printf(\"Hello Sean\\n\")",
    "start": "343250",
    "end": "349479"
  },
  {
    "text": "C programmers will know that if you\nwant a new line at the end of that, which",
    "start": "349479",
    "end": "354479"
  },
  {
    "text": "you do - you'd better put a \\n at the end.\nWe're going round the stuff inside this block,",
    "start": "354479",
    "end": "359910"
  },
  {
    "text": "which is a very simple block -- it's just got\na single print statement in it -- so what",
    "start": "359910",
    "end": "363770"
  },
  {
    "text": "we'll get is \"Hello Sean\", \"Hello Sean\", \"Hello Sean\",\n\"Hello Sean\".",
    "start": "363770",
    "end": "365580"
  },
  {
    "text": "ten times. Then I do another loop that\ngoes around 10 times: \"Goodbye Dave\\n\";",
    "start": "365580",
    "end": "374610"
  },
  {
    "text": "Let's hope this really would compile ! You can all",
    "start": "374610",
    "end": "380520"
  },
  {
    "text": "see what's going to happen  when you\nexecute this. I'm goingto get \"Hello Sean\" \n\"Hello Sean\" ten times",
    "start": "380520",
    "end": "387550"
  },
  {
    "text": "and \"Goodbye Dave\", \"Goodbye Dave\", \"Goodbye Dave\", \nGoodbye Dave\" ten times. So that is what happens \nwhen you have a",
    "start": "387550",
    "end": "392490"
  },
  {
    "text": "sequence of blocks. But by comparison\nwith \"paragraph\" in HTML can you,",
    "start": "392490",
    "end": "400138"
  },
  {
    "text": "in programming languages, have nested\nblocks? You bet you can! Now I'm going \nto say: loop",
    "start": "400139",
    "end": "406460"
  },
  {
    "text": "around 10 times on the following: \nprintf(\"Hello Sean\\n\") but now look at what I'm going to",
    "start": "406460",
    "end": "412419"
  },
  {
    "text": "do I'm now not going to close off that block.\nI'm going to nest another loop block",
    "start": "412419",
    "end": "420740"
  },
  {
    "text": "inside it: \"Goodbye Dave\". Now let's make sure\nour brackets match. I've opened up one, I've opened ",
    "start": "420740",
    "end": "427110"
  },
  {
    "text": "up two. I've closed this one, I must close\nthat one. I hope you can all see and",
    "start": "427110",
    "end": "432779"
  },
  {
    "text": "understand what I'm trying to do here.\nI'm trying to do a loop within a loop",
    "start": "432779",
    "end": "436849"
  },
  {
    "text": "They are nested like sort of Russian dolls,\none inside the other, but the effect of",
    "start": "436849",
    "end": "441729"
  },
  {
    "text": "this is completely different to the one\nI did previously. Here what's going to",
    "start": "441729",
    "end": "446550"
  },
  {
    "text": "happen is the outermost one goes around 10\ntimes and every time it goes around it",
    "start": "446550",
    "end": "452460"
  },
  {
    "text": "does a \"Hello Sean\". But every time it does a\n\"Hello Sean\" it then goes into a nested inner",
    "start": "452460",
    "end": "457789"
  },
  {
    "text": "loop that does ten \"Goodbye Dave\"s. So for\nevery one \"Hello Sean\" I print out, I'm now getting",
    "start": "457789",
    "end": "464979"
  },
  {
    "text": "ten \"Goodbye Dave\"s. Net result; I will\nend up with a hundred \"Goodbye Dave\"s ",
    "start": "464979",
    "end": "472610"
  },
  {
    "text": "interleaved between ten \"Hello Sean\"s\nwhereas, in the earlier case, I",
    "start": "472610",
    "end": "478919"
  },
  {
    "text": "had 20 print outs. I had ten \"Hello Sean\"s followed\nby ten \"Goodbye Dave\"s. Lots of students have",
    "start": "478920",
    "end": "485140"
  },
  {
    "text": "said to me over the years: \"The C compiler is \nso clever, why can't it put my programs right for me?\"",
    "start": "485140",
    "end": "490420"
  },
  {
    "text": "And the answer is if you omit your\nend-tags, how can it know whether you want",
    "start": "490420",
    "end": "498940"
  },
  {
    "text": "this one, or this one? They're both\nequally valid. This, then, is the absolute",
    "start": "498940",
    "end": "505150"
  },
  {
    "text": "fundamental conundrum: can you\nunambiguously put back the close curly",
    "start": "505150",
    "end": "511960"
  },
  {
    "text": "braces if users omit them? No you can't\nbecause you've got to work out: do they",
    "start": "511960",
    "end": "517110"
  },
  {
    "text": "want a sequence, a nest, a nest of\nsequences? There's all sorts of places to",
    "start": "517110",
    "end": "521860"
  },
  {
    "text": "put back the brackets and they have all\nsorts of different effects. And that is",
    "start": "521860",
    "end": "526240"
  },
  {
    "text": "why C, Java",
    "start": "526240",
    "end": "528860"
  },
  {
    "text": "Basic, whatever, have to be 'theological' and\nstart laying down the law to you",
    "start": "528860",
    "end": "534120"
  },
  {
    "text": "\"Brackets mismatch\" or whatever, whenever you\nmiss them out. The reason -- let's say it again --",
    "start": "534120",
    "end": "540450"
  },
  {
    "text": "why HTML can be so tolerant is because\nit's so much simpler than C. It is a",
    "start": "540450",
    "end": "547030"
  },
  {
    "text": "programming language; it is an execution\nenvironment, but it's not been built to",
    "start": "547030",
    "end": "551960"
  },
  {
    "text": "support deeply-nested hierarchical\nstructures. So although it seems to be",
    "start": "551960",
    "end": "557120"
  },
  {
    "text": "tolerant, and although it seems to be\ncorrecting your program, you've  got to",
    "start": "557120",
    "end": "561720"
  },
  {
    "text": "remember it isn't really doing the\nimpossible. It's imposing a model on you",
    "start": "561720",
    "end": "567379"
  },
  {
    "text": "and hoping that the visual effect of what\nit does is so stunning that you won't",
    "start": "567380",
    "end": "572550"
  },
  {
    "text": "notice that it's not quite done what you\nhoped it would do.",
    "start": "572550",
    "end": "575550"
  }
]