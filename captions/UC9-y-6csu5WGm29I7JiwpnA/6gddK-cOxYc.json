[
  {
    "text": "First thing we've got to talk about\ntoday, Sean, because otherwise I'll get",
    "start": "0",
    "end": "4259"
  },
  {
    "text": "it in the neck - and so will you for not\nnudging me and reminding me",
    "start": "4259",
    "end": "7710"
  },
  {
    "text": "Yes, everybody, I know ... this thing here\nis still using Windows 7. And the useful",
    "start": "7710",
    "end": "13620"
  },
  {
    "text": "guys at work - thanks for doing this chaps -\nhave assured me that the moment this",
    "start": "13620",
    "end": "19050"
  },
  {
    "text": "filming session is finished, if I bring\nthis [PC] in [to work] they will upgrade it to",
    "start": "19050",
    "end": "22800"
  },
  {
    "text": "Windows 10 as well \n>> Sean:  We've been talking\nabout Regular Expressions, basically",
    "start": "22800",
    "end": "27419"
  },
  {
    "text": "about the theory of them and the idea of\nthem but we've not actually seen them in practice.",
    "start": "27420",
    "end": "30929"
  },
  {
    "text": ">> DFB: [video clip from previous episode]: Yeah! regex, \nregex, REs. They are a very good illustration of where ",
    "start": "30929",
    "end": "37410"
  },
  {
    "text": "theory can meet practice. But I think in the\nprevious one we did a little bit of",
    "start": "37410",
    "end": "41489"
  },
  {
    "text": "theory. What we ought to do now is just\nsee them in action I think.",
    "start": "41489",
    "end": "48559"
  },
  {
    "text": "[It's] a difficult one for me to tackle is this.\nI think you'll all - I'm just trying to",
    "start": "48559",
    "end": "55449"
  },
  {
    "text": "get sympathy here (!). The span of what you\neither know or don't know [you the",
    "start": "55450",
    "end": "63040"
  },
  {
    "text": "audience] is huge on this topic. Some of\nyou know way more than I do, Some of you",
    "start": "63040",
    "end": "68680"
  },
  {
    "text": "really are beginners and struggling to\nget used to the somewhat abstract",
    "start": "68680",
    "end": "72880"
  },
  {
    "text": "notation, and so on. So, apologies up front\nbut this one will seem very simple and",
    "start": "72880",
    "end": "78250"
  },
  {
    "text": "very straightforward to those of you who\nhave got some expertise. But I think it's",
    "start": "78250",
    "end": "82600"
  },
  {
    "text": "important that we regroup and say: \"Look\nthis is the notation we all agree on this\".",
    "start": "82600",
    "end": "86470"
  },
  {
    "text": "Because I have, for the future, got a\nvery good example lined up of something",
    "start": "86470",
    "end": "94119"
  },
  {
    "text": "where Regular Expressions, if you like,\ncan only just cope. I am doing my",
    "start": "94119",
    "end": "100140"
  },
  {
    "text": "examples here in 'lex' because I hope that\nsome of these examples later on will",
    "start": "100140",
    "end": "105729"
  },
  {
    "text": "transfer into being part of a little\ncompiler of some sort. And it's software",
    "start": "105729",
    "end": "110409"
  },
  {
    "text": "I'm used to. But it's very\nstraightforward. You give a piece of",
    "start": "110410",
    "end": "115150"
  },
  {
    "text": "Regular Expression for a pattern you\nwant to match and then you give, if you",
    "start": "115150",
    "end": "120159"
  },
  {
    "text": "like, an action that you want to take.\nNow, very often,  having recognized a piece of",
    "start": "120159",
    "end": "125140"
  },
  {
    "text": "Regular Expression all you want to do is\nto echo it back, perhaps with a bit of",
    "start": "125140",
    "end": "130239"
  },
  {
    "text": "explanation as to what it means. \nSo here's my simple exercise. I'm going to",
    "start": "130239",
    "end": "136330"
  },
  {
    "text": "declare about seven reserved words in my\nlanguage. But my language is going to",
    "start": "136330",
    "end": "142900"
  },
  {
    "text": "ultimately end up as being an elementary\ncomputer graphics language just like",
    "start": "142900",
    "end": "147340"
  },
  {
    "text": "Brian Kernighan's PIC. So, my reserved\nwords will be things like \"circus\" ...",
    "start": "147340",
    "end": "152129"
  },
  {
    "text": "Circus !!?    [Music]\n[I meant] \"circle\"! In fact I should put in both",
    "start": "152130",
    "end": "156579"
  },
  {
    "text": "\"circle\" and \"circus\" to see if it can\ndistinguish between the two. 'line', 'arc'",
    "start": "156579",
    "end": "162780"
  },
  {
    "text": "'spline', 'box', that sort of thing. I want\nthose to be picked up as being Reserved",
    "start": "162780",
    "end": "169239"
  },
  {
    "text": "Words. But then, if it isn't a reserved word",
    "start": "169239",
    "end": "174520"
  },
  {
    "text": "in my scheme and it's some other bunch\nof characters, is it a bunch of",
    "start": "174520",
    "end": "178780"
  },
  {
    "text": "characters that would do good service as\nbeing a Variable Name? And, as I think",
    "start": "178780",
    "end": "185140"
  },
  {
    "text": "we've said, many a time, Variable Names in\nmany languages follow the pattern that",
    "start": "185140",
    "end": "189760"
  },
  {
    "text": "they must begin with a letter, but then\nafter that, they can have any mix of upper-",
    "start": "189760",
    "end": "196090"
  },
  {
    "text": "or lower-case letters and digits in the\nname - zero or more of them.",
    "start": "196090",
    "end": "200290"
  },
  {
    "text": "That's your Variable Name. So, reserved\nwords and named variables of that type",
    "start": "200290",
    "end": "207099"
  },
  {
    "text": "- of that particular reserved word type -\nthat's all we're gonna do today.  I have",
    "start": "207100",
    "end": "211720"
  },
  {
    "text": "here a 'lex' script which has got seven\nspecific lines in for recognizing `circle',",
    "start": "211720",
    "end": "219820"
  },
  {
    "text": "`line', `arrow', `spline', `box', `arc, or \n- bonus at the bottom - `circus'. Both start \"circ\". ",
    "start": "219820",
    "end": "228730"
  },
  {
    "text": "So when you look at it, it's either going to\nmatch that, or that, or that, or that or that - all",
    "start": "228730",
    "end": "233319"
  },
  {
    "text": "that the reserved words. If it won't\nmatch any of those it keeps coming down",
    "start": "233320",
    "end": "237330"
  },
  {
    "text": "trying to match, trying to use the next\nRegular Expression to get a match.",
    "start": "237330",
    "end": "242530"
  },
  {
    "text": "And below here I just give [0-9]+, (Zero to nine, it\nsays in square brackets, plus) And that's",
    "start": "242530",
    "end": "249700"
  },
  {
    "text": "a piece of Regular Expression notation\nthat says: \"any combination of digits",
    "start": "249700",
    "end": "255220"
  },
  {
    "text": "0 - 9, in any order, going on\narbitrarily long\". For the moment here",
    "start": "255220",
    "end": "260560"
  },
  {
    "text": "those [A-Z] or [a-z] choices it\nmeans anything in that range - literally",
    "start": "260560",
    "end": "266169"
  },
  {
    "text": "those characters in however many\ncombinations are possible. So, I've put",
    "start": "266170",
    "end": "272320"
  },
  {
    "text": "all this together; I've  fed it into 'lex'.\nI've compiled it all up for you - I won't",
    "start": "272320",
    "end": "276400"
  },
  {
    "text": "bore you by doing it in front of you - but\nbelieve me, I have saved this as a binary",
    "start": "276400",
    "end": "281590"
  },
  {
    "text": "executable. It's called testRE for \"test\nregular expression\" but it only handles",
    "start": "281590",
    "end": "287260"
  },
  {
    "text": "these regular expressions [points to paper]. I think \nwe're all ready to go.  I just type in the name",
    "start": "287260",
    "end": "292480"
  },
  {
    "text": "of the executable binary ... testRE ... let's\nsee if it works. ",
    "start": "292480",
    "end": "297270"
  },
  {
    "text": "Right. [looks at screen], silence signifies \"I'm happy\" \nYes, it's waiting. So, go on, tell me something to try out, Sean.",
    "start": "297270",
    "end": "303430"
  },
  {
    "text": ">> Sean: Let's use the name Bob. \n>> DFB: Bob? you just want Bob? ",
    "start": "303430",
    "end": "308870"
  },
  {
    "text": "all on its own? \n>> Sean: Yeah! Bob.  what will Bob do?\n>> DFB: Would you agree with that?",
    "start": "308870",
    "end": "315470"
  },
  {
    "text": "\"bob\" is a Variable Name.  In other\nwords it's a valid identifier for a",
    "start": "315470",
    "end": "320810"
  },
  {
    "text": "variable of some sort. Fine, yes,\nthere's nothing to stop you calling your",
    "start": "320810",
    "end": "324620"
  },
  {
    "text": "integers, or your circle,s or your lines...\nYou can call them \"bob\" if you want to.",
    "start": "324620",
    "end": "328760"
  },
  {
    "text": "That's fine. I'm saying that this\nthing, as advertised, really does treat",
    "start": "328760",
    "end": "334910"
  },
  {
    "text": "words like 'circle' and 'line' as being\nspecial. Let's see if it filters those",
    "start": "334910",
    "end": "339530"
  },
  {
    "text": "out and gets it right. So, I'll just say\n'circle', on its own, lower-case. Look at that!",
    "start": "339530",
    "end": "346790"
  },
  {
    "text": "As part of my pattern-matching, 'circle' is\none of my entries in Reserved Words that",
    "start": "346790",
    "end": "353090"
  },
  {
    "text": "must be recognized, just \"as is\", lower- case\nnotice and it's worked. It basically says",
    "start": "353090",
    "end": "358160"
  },
  {
    "text": "\"Yeah! got you 'circle'. It's a Reserved Word\nand - just to emphasize I've got it -",
    "start": "358160",
    "end": "364220"
  },
  {
    "text": "it's \"circle\". All right? Now, this time I'm spelling\nit with a capital C and my guess, my hope,",
    "start": "364220",
    "end": "370850"
  },
  {
    "text": "is that it will [now] recognize the first\n'circle' as being a Reserved Word.",
    "start": "370850",
    "end": "375860"
  },
  {
    "text": "The second 'Circle' can't be a reserved word\nbecause it's case sensitive, right? It's",
    "start": "375860",
    "end": "381340"
  },
  {
    "text": "'circle', all lower-case, has been reserved.\nBut the version with an upper-case C isn't",
    "start": "381340",
    "end": "386360"
  },
  {
    "text": "[reserved], therefore - who knows -  it should\nbe a Variable. Let's see if that works.",
    "start": "386360",
    "end": "391280"
  },
  {
    "text": "Yeah, 'circle',  all lower- case is reserved\nECHO it back just to be sure. Yeah, I got it.",
    "start": "391280",
    "end": "398120"
  },
  {
    "text": "It's 'circle'. But 'Circle' is a variable\nname, which I think sounds right. Think",
    "start": "398120",
    "end": "404960"
  },
  {
    "text": "of something else [Sean] that might break it, go on?\n>> Sean: Well, we talked earlier and you",
    "start": "404960",
    "end": "409100"
  },
  {
    "text": "kind of said the idea of putting the\nword 'circus' in there, to throw it, because",
    "start": "409100",
    "end": "413840"
  },
  {
    "text": "it's so similar?\n>> DFB: Yes, that's a good point\nlet's just try 'circus'; it's happy with that,",
    "start": "413840",
    "end": "419000"
  },
  {
    "text": "I did make it a Reserved Word, but it\nhasn't sort of come up with: \"Ooooh! I can't",
    "start": "419000",
    "end": "423320"
  },
  {
    "text": "decide between 'circle' and 'circus'. Part \nof what I was saying, in the episode last",
    "start": "423320",
    "end": "428240"
  },
  {
    "text": "time, is that one of lex's jobs is to say:\n\"Despite the fact that 'circle' and 'circus'",
    "start": "428240",
    "end": "434509"
  },
  {
    "text": "have a common beginning, I'm very clever and ",
    "start": "434510",
    "end": "437969"
  },
  {
    "text": "I very efficiently factorize that\nbeginning out. And then say: \"Well, after",
    "start": "437969",
    "end": "442499"
  },
  {
    "text": "that, if it ends 'le' it's a Reserved Word\nIf it ends 'us' it's also a Reserved Word",
    "start": "442499",
    "end": "448319"
  },
  {
    "text": "But it's happy. So a good thing to do, now\nI think, would be: \"Can you name a circus?\"",
    "start": "448319",
    "end": "457489"
  },
  {
    "text": "Yeah!\n[Music] [Screen shows circus tents named \n\"Circus1\" and \"Dave\"]",
    "start": "457489",
    "end": "464980"
  },
  {
    "text": "Better still perhaps, how about this \nI want to name another circus but I'm",
    "start": "464980",
    "end": "471740"
  },
  {
    "text": "going to call it 'circus1'. Now that\nshould be no problem because it's not",
    "start": "471740",
    "end": "476509"
  },
  {
    "text": "saying \"circus circus\" It's saying 'circus'\n(reserved word) and that category. ",
    "start": "476510",
    "end": "482900"
  },
  {
    "text": "'circus1' can only be a Variable Name.\n>> Sean: So it's using the space to delineate ...\n>> DFB: Yes! the way",
    "start": "482900",
    "end": "488509"
  },
  {
    "text": "I've got it set up at the moment is - I\nhaven't told it to ignore spaces yet,",
    "start": "488510",
    "end": "492890"
  },
  {
    "text": "I've left them in. Because it serves\nin the way I've got it at the moment as a ",
    "start": "492890",
    "end": "499520"
  },
  {
    "text": "very handy break between these various\nthings, which can then be analyzed",
    "start": "499520",
    "end": "503840"
  },
  {
    "text": "separately. This, then is, if you like,\naligning with the history of 'lex' and",
    "start": "503840",
    "end": "511610"
  },
  {
    "text": "regular expressions it's that Mike Lesk\nput them in this front end to enable you",
    "start": "511610",
    "end": "517250"
  },
  {
    "text": "to do Reserved Words, variables, all sorts\nof things like that, but historically",
    "start": "517250",
    "end": "524750"
  },
  {
    "text": "they then migrated out into things that\nhave nothing to do with compilers. Many",
    "start": "524750",
    "end": "530870"
  },
  {
    "text": "of you will have heard of UNIX 'awk' and\nthat was the great grandaddy of all",
    "start": "530870",
    "end": "537080"
  },
  {
    "text": "sorts of things that you're more\nfamiliar with like Perl, PHP, Python and",
    "start": "537080",
    "end": "541730"
  },
  {
    "text": "so on. Awk's characteristic was that it\njust did regex pattern matches, then",
    "start": "541730",
    "end": "548089"
  },
  {
    "text": "actions, there was no context. It was\ninterpretive.  'awk' - you gave it the thing",
    "start": "548090",
    "end": "554330"
  },
  {
    "text": "to do, it comes straight back at you. You\ndidn't have to recompile it every time.",
    "start": "554330",
    "end": "558020"
  },
  {
    "text": "So here's the first beginnings of what\nwe need for a longer example. We've got",
    "start": "558020",
    "end": "563870"
  },
  {
    "text": "the ability to take a choice of characters, in\nany combination, \"zero or more of ...\", to",
    "start": "563870",
    "end": "571130"
  },
  {
    "text": "name variables. Fixed sets of characters of \n[a] certain variety like 'circle', 'line', 'box',",
    "start": "571130",
    "end": "578840"
  },
  {
    "text": "are dealt with first. So I think the\nthing to take away from this is that in",
    "start": "578840",
    "end": "584270"
  },
  {
    "text": "programs like 'awk' and 'lex' you've got to\nremember that the various possibilities",
    "start": "584270",
    "end": "589340"
  },
  {
    "text": "you give will be done in that\norder. Its ... you've got to imagine that",
    "start": "589340",
    "end": "594949"
  },
  {
    "text": "between the lines there's almost an OR\noperation. You start up at the top. You",
    "start": "594949",
    "end": "599329"
  },
  {
    "text": "say it will either my match 'circle' or it\nwill match 'box' or it will match 'line' or",
    "start": "599329",
    "end": "605600"
  },
  {
    "text": "it will match spline or it will match\narrow and so it goes on. And then, down at",
    "start": "605600",
    "end": "611178"
  },
  {
    "text": "the bottom, the catch-all is: \" ...  and if it\ndoesn't match any of those let's just",
    "start": "611179",
    "end": "614660"
  },
  {
    "text": "see if it could be a legal variable\" And\nthen you just run out [of options]. And I have to",
    "start": "614660",
    "end": "619639"
  },
  {
    "text": "accept that if you put in a line of\npunctuation, I think it would just",
    "start": "619639",
    "end": "623540"
  },
  {
    "text": "ECHO it back atd me and not do anything\nwith it. Let's just see \"£$ .",
    "start": "623540",
    "end": "627709"
  },
  {
    "text": "It just echoes back, it takes no action.\nIt just says: \"I don't know what that is\".",
    "start": "627709",
    "end": "631339"
  },
  {
    "text": "I think this has set us up now, I hope, into\nbeing able to do a longer example than this.",
    "start": "631339",
    "end": "637970"
  },
  {
    "text": "But to me, at least, Regular\nExpressions come into their own for this",
    "start": "637970",
    "end": "644660"
  },
  {
    "text": "kind of thing - one-liners to name things,\nyou know match a pattern, do that with it,",
    "start": "644660",
    "end": "650839"
  },
  {
    "text": "- all over one line. They're not all that\nwell suited to doing very long-range, big",
    "start": "650839",
    "end": "657910"
  },
  {
    "text": "strategic, structure. So many of you have\nsaid to me: \"Oh! cover why regex's can't do",
    "start": "657910",
    "end": "666290"
  },
  {
    "text": "XML properly\" Well I might get onto that.\nBut yes, you know, you all know XML has",
    "start": "666290",
    "end": "671419"
  },
  {
    "text": "got big tree-like structure. Regex's do\nnot, of themselves, find it easy to do those.",
    "start": "671419",
    "end": "678110"
  },
  {
    "text": ">> Sean: Can I ask one question? If you had\na real circus, what would it be called? ",
    "start": "678110",
    "end": "682489"
  },
  {
    "text": "Would it be like \"The Great Brailsfordinis\" ?!\n>> DFB: Wasn't there a Circus Maximus in Rome?",
    "start": "682489",
    "end": "687529"
  },
  {
    "text": ">> Sean: There we go, I just think he needs a\nbit more of a showman's title ...",
    "start": "687529",
    "end": "691938"
  },
  {
    "text": "Oh Barnum & Bailey! Is that right? Do you\nwant me to try Barnum & Bailey ?!",
    "start": "691939",
    "end": "699039"
  }
]