[
  {
    "text": "we're going to be looking at uh just in",
    "start": "0",
    "end": "2340"
  },
  {
    "text": "time compilation which is a technique",
    "start": "2340",
    "end": "4140"
  },
  {
    "text": "for making programming languages run",
    "start": "4140",
    "end": "5700"
  },
  {
    "text": "faster so we all want faster programming",
    "start": "5700",
    "end": "8099"
  },
  {
    "text": "languages because then we get more speed",
    "start": "8099",
    "end": "9660"
  },
  {
    "text": "and there are various ways we can do it",
    "start": "9660",
    "end": "11820"
  },
  {
    "text": "so we can statically compile things",
    "start": "11820",
    "end": "13799"
  },
  {
    "text": "that's typically done for languages like",
    "start": "13799",
    "end": "15960"
  },
  {
    "text": "C or we can just in time compile them",
    "start": "15960",
    "end": "18240"
  },
  {
    "text": "which is often done for languages like",
    "start": "18240",
    "end": "19619"
  },
  {
    "text": "Java or JavaScript and the difference",
    "start": "19619",
    "end": "22439"
  },
  {
    "text": "between these two is that just in time",
    "start": "22439",
    "end": "24480"
  },
  {
    "text": "compilation is looking at the program",
    "start": "24480",
    "end": "26039"
  },
  {
    "text": "running and optimizing it after it's",
    "start": "26039",
    "end": "28740"
  },
  {
    "text": "observed it running so just in time is",
    "start": "28740",
    "end": "31380"
  },
  {
    "text": "really a terrible name because it should",
    "start": "31380",
    "end": "33300"
  },
  {
    "text": "have happened before you you actually",
    "start": "33300",
    "end": "35520"
  },
  {
    "text": "got to that stage but that's the name",
    "start": "35520",
    "end": "37020"
  },
  {
    "text": "we've got and it's a technique that you",
    "start": "37020",
    "end": "40440"
  },
  {
    "text": "will all have used today if you've used",
    "start": "40440",
    "end": "42840"
  },
  {
    "text": "a browser you're using a JavaScript",
    "start": "42840",
    "end": "44360"
  },
  {
    "text": "just-in-time compiler",
    "start": "44360",
    "end": "46520"
  },
  {
    "text": "and they're sometimes considered a bit",
    "start": "46520",
    "end": "49260"
  },
  {
    "text": "magical so I'm hoping we can look a",
    "start": "49260",
    "end": "50879"
  },
  {
    "text": "little bit at the magic",
    "start": "50879",
    "end": "53600"
  },
  {
    "text": "I'm digging the idea of magical",
    "start": "53700",
    "end": "55440"
  },
  {
    "text": "computing",
    "start": "55440",
    "end": "56879"
  },
  {
    "text": "so I mean there's no Wizards I don't",
    "start": "56879",
    "end": "58440"
  },
  {
    "text": "have a beard uh and I kept the cape at",
    "start": "58440",
    "end": "60660"
  },
  {
    "text": "home today actually to disambiguate",
    "start": "60660",
    "end": "62579"
  },
  {
    "text": "something that people often confuse",
    "start": "62579",
    "end": "63780"
  },
  {
    "text": "people often talk about compiled and",
    "start": "63780",
    "end": "65760"
  },
  {
    "text": "interpreted languages and there's no",
    "start": "65760",
    "end": "67500"
  },
  {
    "text": "such thing so",
    "start": "67500",
    "end": "68820"
  },
  {
    "text": "for any given program language you can",
    "start": "68820",
    "end": "70860"
  },
  {
    "text": "implement it as a compiler or an",
    "start": "70860",
    "end": "72720"
  },
  {
    "text": "interpreter or a just-in-time compiler",
    "start": "72720",
    "end": "74280"
  },
  {
    "text": "so people say C is a compiled language",
    "start": "74280",
    "end": "76380"
  },
  {
    "text": "but you can and there are C interpreters",
    "start": "76380",
    "end": "78360"
  },
  {
    "text": "and people say JavaScript is a an",
    "start": "78360",
    "end": "81600"
  },
  {
    "text": "interpreted or just-in-time compiled",
    "start": "81600",
    "end": "83280"
  },
  {
    "text": "language but you can write a static",
    "start": "83280",
    "end": "84720"
  },
  {
    "text": "compiler for it as well so what do I",
    "start": "84720",
    "end": "87299"
  },
  {
    "text": "mean in the sense by those things",
    "start": "87299",
    "end": "90360"
  },
  {
    "text": "um so a static compiler reads A",
    "start": "90360",
    "end": "92580"
  },
  {
    "text": "programming just looks at the code the",
    "start": "92580",
    "end": "94080"
  },
  {
    "text": "program is written and then tries to",
    "start": "94080",
    "end": "95400"
  },
  {
    "text": "convert it into machine code let's say",
    "start": "95400",
    "end": "97920"
  },
  {
    "text": "an interpreter uh looks at the program",
    "start": "97920",
    "end": "100680"
  },
  {
    "text": "and then it",
    "start": "100680",
    "end": "102540"
  },
  {
    "text": "um doesn't convert into machine code it",
    "start": "102540",
    "end": "103920"
  },
  {
    "text": "kind of executes it almost as is it",
    "start": "103920",
    "end": "106259"
  },
  {
    "text": "probably converts into some other",
    "start": "106259",
    "end": "107460"
  },
  {
    "text": "representation but it's a very simple",
    "start": "107460",
    "end": "109140"
  },
  {
    "text": "way of implementing a programming",
    "start": "109140",
    "end": "110399"
  },
  {
    "text": "language",
    "start": "110399",
    "end": "111600"
  },
  {
    "text": "and a just-in-time compiler nearly",
    "start": "111600",
    "end": "113880"
  },
  {
    "text": "always starts a program running an",
    "start": "113880",
    "end": "115680"
  },
  {
    "text": "interpreter looks at it for a while says",
    "start": "115680",
    "end": "117479"
  },
  {
    "text": "things like oh look you're calling that",
    "start": "117479",
    "end": "118799"
  },
  {
    "text": "function a lot or there's a function",
    "start": "118799",
    "end": "121320"
  },
  {
    "text": "that takes some parameters in and",
    "start": "121320",
    "end": "123299"
  },
  {
    "text": "they're always integers always strings",
    "start": "123299",
    "end": "125159"
  },
  {
    "text": "so I will now produce an optimized",
    "start": "125159",
    "end": "127799"
  },
  {
    "text": "version of that functional part of the",
    "start": "127799",
    "end": "129300"
  },
  {
    "text": "program based on that information I've",
    "start": "129300",
    "end": "131340"
  },
  {
    "text": "observed",
    "start": "131340",
    "end": "132420"
  },
  {
    "text": "and it's really that Dynamic analysis",
    "start": "132420",
    "end": "134760"
  },
  {
    "text": "and conversion into machine code at",
    "start": "134760",
    "end": "136560"
  },
  {
    "text": "runtime that makes just-in-time",
    "start": "136560",
    "end": "137760"
  },
  {
    "text": "compilers very effective they can be",
    "start": "137760",
    "end": "140280"
  },
  {
    "text": "faster than a static compiler because",
    "start": "140280",
    "end": "141840"
  },
  {
    "text": "they've got more information so if you",
    "start": "141840",
    "end": "144480"
  },
  {
    "text": "just look at a program at compile time",
    "start": "144480",
    "end": "146160"
  },
  {
    "text": "you've just got the code you've written",
    "start": "146160",
    "end": "147480"
  },
  {
    "text": "on screen",
    "start": "147480",
    "end": "148860"
  },
  {
    "text": "you can can't fully analyze it as much",
    "start": "148860",
    "end": "151860"
  },
  {
    "text": "as you want so you'll make certain",
    "start": "151860",
    "end": "153120"
  },
  {
    "text": "assumptions and guesses but they may be",
    "start": "153120",
    "end": "155340"
  },
  {
    "text": "incomplete or even Incorrect and you'll",
    "start": "155340",
    "end": "157200"
  },
  {
    "text": "optimize based on that when you're",
    "start": "157200",
    "end": "159000"
  },
  {
    "text": "actually running the thing you've got",
    "start": "159000",
    "end": "160440"
  },
  {
    "text": "more information so you can make a much",
    "start": "160440",
    "end": "163080"
  },
  {
    "text": "better quality optimization but you've",
    "start": "163080",
    "end": "166019"
  },
  {
    "text": "had to watch the program and observe it",
    "start": "166019",
    "end": "168060"
  },
  {
    "text": "so it started slow and then hopefully",
    "start": "168060",
    "end": "170400"
  },
  {
    "text": "over time it's hopefully it's warmed up",
    "start": "170400",
    "end": "173040"
  },
  {
    "text": "is the term and then it gets faster",
    "start": "173040",
    "end": "175040"
  },
  {
    "text": "warming up turns out to be another",
    "start": "175040",
    "end": "177060"
  },
  {
    "text": "kettle of fish it doesn't always quite",
    "start": "177060",
    "end": "178620"
  },
  {
    "text": "work as we expect these things have some",
    "start": "178620",
    "end": "180720"
  },
  {
    "text": "very surprising emergent Behavior but",
    "start": "180720",
    "end": "182760"
  },
  {
    "text": "generally they do work and when they do",
    "start": "182760",
    "end": "184260"
  },
  {
    "text": "work they can be very effective so this",
    "start": "184260",
    "end": "186840"
  },
  {
    "text": "is things like uh it knows you're kind",
    "start": "186840",
    "end": "189060"
  },
  {
    "text": "of again alluded to before it knows it's",
    "start": "189060",
    "end": "191040"
  },
  {
    "text": "going to be calling this this function",
    "start": "191040",
    "end": "192840"
  },
  {
    "text": "quite a bit so it keeps that nearby and",
    "start": "192840",
    "end": "194819"
  },
  {
    "text": "things like that is that it can do those",
    "start": "194819",
    "end": "196620"
  },
  {
    "text": "sorts of things maybe we could try a",
    "start": "196620",
    "end": "198060"
  },
  {
    "text": "little simple example so if I log in",
    "start": "198060",
    "end": "201900"
  },
  {
    "text": "so what I'll uh it's just a simple",
    "start": "201900",
    "end": "204180"
  },
  {
    "text": "example so there's a load of these that",
    "start": "204180",
    "end": "206220"
  },
  {
    "text": "I could use the Java virtual machine to",
    "start": "206220",
    "end": "207900"
  },
  {
    "text": "adjust-in-time compiler the JavaScript",
    "start": "207900",
    "end": "210180"
  },
  {
    "text": "VMS all of the ones V8 and chrome spider",
    "start": "210180",
    "end": "213060"
  },
  {
    "text": "monkey and Firefox and those are all",
    "start": "213060",
    "end": "214440"
  },
  {
    "text": "jits but I'll look at one for python",
    "start": "214440",
    "end": "216060"
  },
  {
    "text": "because um that's one that I happen to",
    "start": "216060",
    "end": "218099"
  },
  {
    "text": "know fairly well and",
    "start": "218099",
    "end": "219840"
  },
  {
    "text": "let's just write a very silly little",
    "start": "219840",
    "end": "221760"
  },
  {
    "text": "Python program so I can write this",
    "start": "221760",
    "end": "223680"
  },
  {
    "text": "function let me make a little bit of a",
    "start": "223680",
    "end": "225120"
  },
  {
    "text": "bigger font size for you and it takes",
    "start": "225120",
    "end": "226980"
  },
  {
    "text": "two parameters in and I will just add",
    "start": "226980",
    "end": "229200"
  },
  {
    "text": "those two parameters together thing is",
    "start": "229200",
    "end": "231299"
  },
  {
    "text": "am I going to pass it integers strings I",
    "start": "231299",
    "end": "233340"
  },
  {
    "text": "can do all of the above let's just check",
    "start": "233340",
    "end": "235019"
  },
  {
    "text": "that I'm not lying because I do",
    "start": "235019",
    "end": "236819"
  },
  {
    "text": "sometimes",
    "start": "236819",
    "end": "238080"
  },
  {
    "text": "sometimes intentionally but mostly",
    "start": "238080",
    "end": "239940"
  },
  {
    "text": "unintentionally but if I do hello world",
    "start": "239940",
    "end": "242220"
  },
  {
    "text": "I have to have a space in there if I",
    "start": "242220",
    "end": "244319"
  },
  {
    "text": "save that file",
    "start": "244319",
    "end": "246299"
  },
  {
    "text": "and then right so it prints out five or",
    "start": "246299",
    "end": "249299"
  },
  {
    "text": "hello world so you can see I'm calling",
    "start": "249299",
    "end": "250680"
  },
  {
    "text": "the function in different ways so this",
    "start": "250680",
    "end": "252180"
  },
  {
    "text": "is why it's hard to statically optimize",
    "start": "252180",
    "end": "254519"
  },
  {
    "text": "that function because integers strings",
    "start": "254519",
    "end": "256799"
  },
  {
    "text": "it can take in all sorts of things",
    "start": "256799",
    "end": "258840"
  },
  {
    "text": "now the normal implementation of python",
    "start": "258840",
    "end": "260880"
  },
  {
    "text": "which I'm using here with the Python 3",
    "start": "260880",
    "end": "262260"
  },
  {
    "text": "binary is an interpreter doesn't have a",
    "start": "262260",
    "end": "264660"
  },
  {
    "text": "just-in-time compiler and we can see",
    "start": "264660",
    "end": "267000"
  },
  {
    "text": "some obvious consequences of this let's",
    "start": "267000",
    "end": "269280"
  },
  {
    "text": "put this in some sort of loop so I'll",
    "start": "269280",
    "end": "271800"
  },
  {
    "text": "just put some very big number here that",
    "start": "271800",
    "end": "274199"
  },
  {
    "text": "looks like a big number to me and just",
    "start": "274199",
    "end": "276360"
  },
  {
    "text": "repeatedly call that function with some",
    "start": "276360",
    "end": "279540"
  },
  {
    "text": "integers it doesn't really matter now if",
    "start": "279540",
    "end": "281100"
  },
  {
    "text": "I run that and I'll just call it with",
    "start": "281100",
    "end": "282840"
  },
  {
    "text": "the time function and I'm going to say",
    "start": "282840",
    "end": "284340"
  },
  {
    "text": "this is my newish laptop that has from",
    "start": "284340",
    "end": "286740"
  },
  {
    "text": "memory 6 fast cores and eight slower",
    "start": "286740",
    "end": "291540"
  },
  {
    "text": "cores and the it's going to run randomly",
    "start": "291540",
    "end": "294240"
  },
  {
    "text": "on those each time I do it so some of",
    "start": "294240",
    "end": "295560"
  },
  {
    "text": "the performance numbers are not going to",
    "start": "295560",
    "end": "296759"
  },
  {
    "text": "be quite as clear-cut as I would like so",
    "start": "296759",
    "end": "298620"
  },
  {
    "text": "I'll try and explain it if I see that",
    "start": "298620",
    "end": "300000"
  },
  {
    "text": "happening",
    "start": "300000",
    "end": "301020"
  },
  {
    "text": "so I run that and it's taken that a",
    "start": "301020",
    "end": "302880"
  },
  {
    "text": "tenth of a second to run and if I make",
    "start": "302880",
    "end": "304919"
  },
  {
    "text": "that number a lot bigger so I make it an",
    "start": "304919",
    "end": "306540"
  },
  {
    "text": "order of magnitude bigger this for Loop",
    "start": "306540",
    "end": "308759"
  },
  {
    "text": "it now takes a bit longer and if I make",
    "start": "308759",
    "end": "310680"
  },
  {
    "text": "it longer again",
    "start": "310680",
    "end": "312540"
  },
  {
    "text": "we'll see depending on which style of",
    "start": "312540",
    "end": "314520"
  },
  {
    "text": "core it's gone on I think it's yeah it's",
    "start": "314520",
    "end": "316740"
  },
  {
    "text": "roughly gone on the two slower cores",
    "start": "316740",
    "end": "318360"
  },
  {
    "text": "it's it's roughly as I make the loop Run",
    "start": "318360",
    "end": "320100"
  },
  {
    "text": "10 times longer the program is taking",
    "start": "320100",
    "end": "321840"
  },
  {
    "text": "roughly 10 times longer to run so that's",
    "start": "321840",
    "end": "323699"
  },
  {
    "text": "what we'd expect soon to interpreter now",
    "start": "323699",
    "end": "325560"
  },
  {
    "text": "let's get rid of a couple of those zeros",
    "start": "325560",
    "end": "327900"
  },
  {
    "text": "and what I can do instead is use a",
    "start": "327900",
    "end": "330840"
  },
  {
    "text": "different implementation of python and",
    "start": "330840",
    "end": "332699"
  },
  {
    "text": "this is one thing that we often confuse",
    "start": "332699",
    "end": "334080"
  },
  {
    "text": "we say python when we mean the language",
    "start": "334080",
    "end": "336060"
  },
  {
    "text": "and there's python the language and",
    "start": "336060",
    "end": "337919"
  },
  {
    "text": "there's python the implementation I can",
    "start": "337919",
    "end": "339360"
  },
  {
    "text": "use something called Pi pipe and I'm it",
    "start": "339360",
    "end": "341580"
  },
  {
    "text": "has a jit let me turn the jit off",
    "start": "341580",
    "end": "343979"
  },
  {
    "text": "and hope that I've not made it run too",
    "start": "343979",
    "end": "345720"
  },
  {
    "text": "slow",
    "start": "345720",
    "end": "346440"
  },
  {
    "text": "so we can see that running and I've",
    "start": "346440",
    "end": "348479"
  },
  {
    "text": "still got a relatively large number so",
    "start": "348479",
    "end": "350220"
  },
  {
    "text": "it's about the same speed as the normal",
    "start": "350220",
    "end": "353100"
  },
  {
    "text": "version of python now we'll turn the jit",
    "start": "353100",
    "end": "355620"
  },
  {
    "text": "on",
    "start": "355620",
    "end": "357740"
  },
  {
    "text": "and it now runs in well that's a tenth",
    "start": "358800",
    "end": "361919"
  },
  {
    "text": "of a second it has run two orders of",
    "start": "361919",
    "end": "363840"
  },
  {
    "text": "magnitude faster and in fact I think",
    "start": "363840",
    "end": "366479"
  },
  {
    "text": "we'll see if I've got this right let's",
    "start": "366479",
    "end": "368400"
  },
  {
    "text": "add another couple of zeros there",
    "start": "368400",
    "end": "369780"
  },
  {
    "text": "something very big",
    "start": "369780",
    "end": "371460"
  },
  {
    "text": "it actually doesn't really matter how",
    "start": "371460",
    "end": "373440"
  },
  {
    "text": "big I make that loop it's been able to",
    "start": "373440",
    "end": "374940"
  },
  {
    "text": "observe it at runtime realize it can",
    "start": "374940",
    "end": "376680"
  },
  {
    "text": "just optimize the whole thing away and",
    "start": "376680",
    "end": "379139"
  },
  {
    "text": "that's the power of just in time",
    "start": "379139",
    "end": "380340"
  },
  {
    "text": "compilation it's looked at my runtime",
    "start": "380340",
    "end": "382139"
  },
  {
    "text": "values and made the thing very fast it's",
    "start": "382139",
    "end": "384900"
  },
  {
    "text": "particularly effective on this sort of",
    "start": "384900",
    "end": "386340"
  },
  {
    "text": "numeric code but it will often work well",
    "start": "386340",
    "end": "387900"
  },
  {
    "text": "on things like strings and so on and of",
    "start": "387900",
    "end": "390180"
  },
  {
    "text": "course there are some cases where it",
    "start": "390180",
    "end": "391440"
  },
  {
    "text": "won't work it isn't as we said earlier",
    "start": "391440",
    "end": "393539"
  },
  {
    "text": "magic but it is very effective in many",
    "start": "393539",
    "end": "395699"
  },
  {
    "text": "cases",
    "start": "395699",
    "end": "396600"
  },
  {
    "text": "so as you scale up",
    "start": "396600",
    "end": "398639"
  },
  {
    "text": "um is that is there still a benefit to",
    "start": "398639",
    "end": "400919"
  },
  {
    "text": "using it you know when you've got a",
    "start": "400919",
    "end": "402180"
  },
  {
    "text": "million lines of code for instance good",
    "start": "402180",
    "end": "404400"
  },
  {
    "text": "question",
    "start": "404400",
    "end": "405780"
  },
  {
    "text": "um very dependent on your program in",
    "start": "405780",
    "end": "408000"
  },
  {
    "text": "fact in some sense actually the scale of",
    "start": "408000",
    "end": "409860"
  },
  {
    "text": "it is less important than the nature of",
    "start": "409860",
    "end": "411720"
  },
  {
    "text": "your program",
    "start": "411720",
    "end": "413039"
  },
  {
    "text": "there's a fundamental assumption here",
    "start": "413039",
    "end": "415139"
  },
  {
    "text": "that programs tend to do the same thing",
    "start": "415139",
    "end": "417479"
  },
  {
    "text": "over and over again so in this case Pi",
    "start": "417479",
    "end": "420360"
  },
  {
    "text": "Pi is looking for loops and it's what's",
    "start": "420360",
    "end": "423300"
  },
  {
    "text": "called a tracing just-in-time compiler",
    "start": "423300",
    "end": "425220"
  },
  {
    "text": "so it looks at what the loop is doing",
    "start": "425220",
    "end": "427080"
  },
  {
    "text": "and optimizes that there's also method",
    "start": "427080",
    "end": "428759"
  },
  {
    "text": "base which just look at a function don't",
    "start": "428759",
    "end": "430500"
  },
  {
    "text": "need to worry about the difference too",
    "start": "430500",
    "end": "431580"
  },
  {
    "text": "much",
    "start": "431580",
    "end": "432780"
  },
  {
    "text": "if your Loop or your function does the",
    "start": "432780",
    "end": "434940"
  },
  {
    "text": "same thing repeatedly with only minor",
    "start": "434940",
    "end": "436500"
  },
  {
    "text": "variations this will be very effective",
    "start": "436500",
    "end": "438060"
  },
  {
    "text": "if you have a program which uh every",
    "start": "438060",
    "end": "441060"
  },
  {
    "text": "time it goes around the loop does",
    "start": "441060",
    "end": "442139"
  },
  {
    "text": "something completely different or every",
    "start": "442139",
    "end": "443520"
  },
  {
    "text": "time you call the method then this will",
    "start": "443520",
    "end": "445620"
  },
  {
    "text": "be less effective in some cases then it",
    "start": "445620",
    "end": "448259"
  },
  {
    "text": "will even slow things down because the",
    "start": "448259",
    "end": "449940"
  },
  {
    "text": "program will never appear to stabilize",
    "start": "449940",
    "end": "452520"
  },
  {
    "text": "and that's really what your expecting",
    "start": "452520",
    "end": "455340"
  },
  {
    "text": "programs do is that they typically when",
    "start": "455340",
    "end": "458160"
  },
  {
    "text": "they start up they do some",
    "start": "458160",
    "end": "459120"
  },
  {
    "text": "initialization that's all a bit random",
    "start": "459120",
    "end": "460979"
  },
  {
    "text": "and then they tend to hit some sort of",
    "start": "460979",
    "end": "463020"
  },
  {
    "text": "main part where they do the same thing",
    "start": "463020",
    "end": "464160"
  },
  {
    "text": "over and over and over again and that's",
    "start": "464160",
    "end": "465840"
  },
  {
    "text": "where jit compilation really comes to",
    "start": "465840",
    "end": "468900"
  },
  {
    "text": "the fore and our process is doing a bit",
    "start": "468900",
    "end": "471419"
  },
  {
    "text": "of that anyway",
    "start": "471419",
    "end": "472440"
  },
  {
    "text": "you yeah so I think of our modern",
    "start": "472440",
    "end": "475740"
  },
  {
    "text": "processes it's basically a just in time",
    "start": "475740",
    "end": "477599"
  },
  {
    "text": "compiler I write machine code and okay I",
    "start": "477599",
    "end": "479580"
  },
  {
    "text": "like the textual form and it looks like",
    "start": "479580",
    "end": "481020"
  },
  {
    "text": "armor x86 or whatever that's not what",
    "start": "481020",
    "end": "484259"
  },
  {
    "text": "the processor eventually executes it",
    "start": "484259",
    "end": "486599"
  },
  {
    "text": "turns that into some other",
    "start": "486599",
    "end": "488039"
  },
  {
    "text": "representation it does all sorts of",
    "start": "488039",
    "end": "490319"
  },
  {
    "text": "clever optimizations if you ever want to",
    "start": "490319",
    "end": "492180"
  },
  {
    "text": "see things uh like the store um the way",
    "start": "492180",
    "end": "496020"
  },
  {
    "text": "a processor optimizes program reorders",
    "start": "496020",
    "end": "498900"
  },
  {
    "text": "it like the reorder buffer they're scary",
    "start": "498900",
    "end": "501660"
  },
  {
    "text": "at how clever they are and that's why",
    "start": "501660",
    "end": "502979"
  },
  {
    "text": "they've got a lot faster even though the",
    "start": "502979",
    "end": "504300"
  },
  {
    "text": "gigahertz part hasn't changed too much",
    "start": "504300",
    "end": "506400"
  },
  {
    "text": "and there's been a little bit of",
    "start": "506400",
    "end": "507960"
  },
  {
    "text": "knowledge transfer between the the",
    "start": "507960",
    "end": "509879"
  },
  {
    "text": "processor jit world and the programming",
    "start": "509879",
    "end": "512279"
  },
  {
    "text": "language world is this a new thing or",
    "start": "512279",
    "end": "514320"
  },
  {
    "text": "how long have these kind of just in time",
    "start": "514320",
    "end": "515880"
  },
  {
    "text": "components been around them",
    "start": "515880",
    "end": "518099"
  },
  {
    "text": "they have been around in one form",
    "start": "518099",
    "end": "519779"
  },
  {
    "text": "another for a while but they really",
    "start": "519779",
    "end": "521099"
  },
  {
    "text": "Trace their modern lineage back to the",
    "start": "521099",
    "end": "523140"
  },
  {
    "text": "1980s in a language called self which",
    "start": "523140",
    "end": "525480"
  },
  {
    "text": "has been largely forgotten a really",
    "start": "525480",
    "end": "527339"
  },
  {
    "text": "interesting language that had a",
    "start": "527339",
    "end": "530040"
  },
  {
    "text": "just-in-time compiler via a long",
    "start": "530040",
    "end": "532380"
  },
  {
    "text": "sequence of events that ended up going",
    "start": "532380",
    "end": "534240"
  },
  {
    "text": "to a company called sun and is then",
    "start": "534240",
    "end": "536399"
  },
  {
    "text": "formed the basis and literally some of",
    "start": "536399",
    "end": "538140"
  },
  {
    "text": "the code is still there in the Java",
    "start": "538140",
    "end": "539640"
  },
  {
    "text": "virtual machine so the Java jit traces",
    "start": "539640",
    "end": "542880"
  },
  {
    "text": "itself back to self",
    "start": "542880",
    "end": "544440"
  },
  {
    "text": "V8 the JavaScript VM and chrome also",
    "start": "544440",
    "end": "547440"
  },
  {
    "text": "traces this lineage back to the Java",
    "start": "547440",
    "end": "549540"
  },
  {
    "text": "virtual machine hotspot and back to self",
    "start": "549540",
    "end": "551640"
  },
  {
    "text": "so really that's been those have been",
    "start": "551640",
    "end": "553680"
  },
  {
    "text": "the um the big movers and now you've got",
    "start": "553680",
    "end": "556740"
  },
  {
    "text": "systems like Pi Pi and V8 and spider",
    "start": "556740",
    "end": "558839"
  },
  {
    "text": "monkey that have",
    "start": "558839",
    "end": "560700"
  },
  {
    "text": "um modernized the concept or spread it",
    "start": "560700",
    "end": "562860"
  },
  {
    "text": "to more languages would probably be a",
    "start": "562860",
    "end": "564240"
  },
  {
    "text": "better way of putting it and is this you",
    "start": "564240",
    "end": "566399"
  },
  {
    "text": "know obviously it traces it through it's",
    "start": "566399",
    "end": "568320"
  },
  {
    "text": "quite a long way back but is it only",
    "start": "568320",
    "end": "569880"
  },
  {
    "text": "really being used now because machines",
    "start": "569880",
    "end": "571500"
  },
  {
    "text": "have got that much faster",
    "start": "571500",
    "end": "573120"
  },
  {
    "text": "yeah I think there's there's an element",
    "start": "573120",
    "end": "575279"
  },
  {
    "text": "of that",
    "start": "575279",
    "end": "576600"
  },
  {
    "text": "um because for you when I was a kid you",
    "start": "576600",
    "end": "578760"
  },
  {
    "text": "could buy a new computer every 18 months",
    "start": "578760",
    "end": "580380"
  },
  {
    "text": "and it was twice as fast and the the",
    "start": "580380",
    "end": "583380"
  },
  {
    "text": "death of single core performance is a",
    "start": "583380",
    "end": "584940"
  },
  {
    "text": "little exaggerated partly because the",
    "start": "584940",
    "end": "587100"
  },
  {
    "text": "processes are now doing just-in-time",
    "start": "587100",
    "end": "588899"
  },
  {
    "text": "compilation sorts of things but yeah we",
    "start": "588899",
    "end": "591300"
  },
  {
    "text": "definitely are looking increasingly to",
    "start": "591300",
    "end": "593700"
  },
  {
    "text": "programming languages to work faster and",
    "start": "593700",
    "end": "596040"
  },
  {
    "text": "for many languages particularly but not",
    "start": "596040",
    "end": "598140"
  },
  {
    "text": "only those that are Dynamic type like",
    "start": "598140",
    "end": "599700"
  },
  {
    "text": "python or Java this is really the only",
    "start": "599700",
    "end": "602940"
  },
  {
    "text": "effective technique and we and that's",
    "start": "602940",
    "end": "605279"
  },
  {
    "text": "why you've seen increasing numbers of",
    "start": "605279",
    "end": "607080"
  },
  {
    "text": "them being released for more and more",
    "start": "607080",
    "end": "608519"
  },
  {
    "text": "languages despite the fact that they're",
    "start": "608519",
    "end": "610740"
  },
  {
    "text": "really complicated and expensive to",
    "start": "610740",
    "end": "612480"
  },
  {
    "text": "create you know these are not the sort",
    "start": "612480",
    "end": "613800"
  },
  {
    "text": "of things you can knock out in an",
    "start": "613800",
    "end": "615000"
  },
  {
    "text": "afternoon they take some big teams many",
    "start": "615000",
    "end": "618000"
  },
  {
    "text": "years to create in most cases",
    "start": "618000",
    "end": "621380"
  },
  {
    "text": "train a network to undo this process",
    "start": "622019",
    "end": "624300"
  },
  {
    "text": "that's the idea and if we can do that",
    "start": "624300",
    "end": "626580"
  },
  {
    "text": "then we can start with random noise a",
    "start": "626580",
    "end": "628380"
  },
  {
    "text": "bit like I can and we can just iterate",
    "start": "628380",
    "end": "630120"
  },
  {
    "text": "this process",
    "start": "630120",
    "end": "631160"
  },
  {
    "text": "die a b c and d",
    "start": "631160",
    "end": "633959"
  },
  {
    "text": "and I tell you that die a has a value of",
    "start": "633959",
    "end": "637260"
  },
  {
    "text": "four",
    "start": "637260",
    "end": "638220"
  },
  {
    "text": "how much did you learn about the data",
    "start": "638220",
    "end": "641959"
  }
]