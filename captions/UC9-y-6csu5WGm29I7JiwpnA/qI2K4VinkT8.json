[
  {
    "text": "And we can choose whichever flip-flop we want by the address",
    "start": "0",
    "end": "2970"
  },
  {
    "text": "And then we can strobe the W thing to write it to that one or that one, but what about reading?",
    "start": "2970",
    "end": "8819"
  },
  {
    "text": "How do we combine the two outputs from our?",
    "start": "8820",
    "end": "12509"
  },
  {
    "text": "Flip-flops into a single output",
    "start": "13299",
    "end": "15448"
  },
  {
    "text": "Which we'll call D out here",
    "start": "16119",
    "end": "18689"
  },
  {
    "text": "I'm going to move this paper, so will let me just copy that",
    "start": "19330",
    "end": "23580"
  },
  {
    "text": "quickly",
    "start": "24310",
    "end": "26310"
  },
  {
    "text": "So I've redrawn things now without the input side of things that circuit would be exactly the same",
    "start": "27519",
    "end": "33299"
  },
  {
    "text": "But to make things easy when we talk about how we get the output out",
    "start": "33300",
    "end": "35730"
  },
  {
    "text": "I've just wiped it away, so we can just refer to what we need so we've got the two flip-flops",
    "start": "35860",
    "end": "39779"
  },
  {
    "text": "Zero, and one again. We've got our address input, and we've got one output",
    "start": "40690",
    "end": "46559"
  },
  {
    "text": "Which we called D",
    "start": "46559",
    "end": "47640"
  },
  {
    "text": "Out now the first difference",
    "start": "47640",
    "end": "49570"
  },
  {
    "text": "From writing is that we don't need any sort of read signal to say we want to read the value because we have the output",
    "start": "49570",
    "end": "54930"
  },
  {
    "text": "always",
    "start": "55420",
    "end": "55920"
  },
  {
    "text": "Liv's throwing",
    "start": "55920",
    "end": "56739"
  },
  {
    "text": "Whatever's in flip got one or in flip-flop zero what we do need is to connect the output of flip-flop",
    "start": "56739",
    "end": "61408"
  },
  {
    "text": "zero, and the output of flip-flop wand",
    "start": "61480",
    "end": "63480"
  },
  {
    "text": "Combined with the address input to D out so that when there's a zero on here",
    "start": "64000",
    "end": "69449"
  },
  {
    "text": "We get what I was in that one there and whenever there's a one in there",
    "start": "69909",
    "end": "74608"
  },
  {
    "text": "We get whatever's",
    "start": "74680",
    "end": "76360"
  },
  {
    "text": "in",
    "start": "76360",
    "end": "76930"
  },
  {
    "text": "That one and the way we do that again is we use a NAND gate so we can start off by putting a NAND gate",
    "start": "76930",
    "end": "82470"
  },
  {
    "text": "in here",
    "start": "82810",
    "end": "84520"
  },
  {
    "text": "connected to",
    "start": "84520",
    "end": "85930"
  },
  {
    "text": "That so now we have when a in contains zero the output of here will always be zero",
    "start": "85930",
    "end": "90720"
  },
  {
    "text": "When a in contains one the output of here will be whatever the value of Q is",
    "start": "91240",
    "end": "94860"
  },
  {
    "text": "That's from the truth table",
    "start": "94860",
    "end": "95640"
  },
  {
    "text": "We saw for the last one and we can do the same just in the same way for this one here",
    "start": "95640",
    "end": "100140"
  },
  {
    "text": "So we can bring the output",
    "start": "100140",
    "end": "102040"
  },
  {
    "text": "down",
    "start": "102040",
    "end": "103390"
  },
  {
    "text": "And we can put it into a NAND gate and actually a NAND gate is symmetrical",
    "start": "103390",
    "end": "108149"
  },
  {
    "text": "So it doesn't matter which input we connect things to we can use a not gate",
    "start": "108149",
    "end": "111989"
  },
  {
    "text": "Again make that in there and connect that that so now whenever a in contains zero this",
    "start": "113049",
    "end": "117629"
  },
  {
    "text": "Output here this not gate contains one and we end that with this thing here",
    "start": "117790",
    "end": "122399"
  },
  {
    "text": "So we now have two values if a is from zero",
    "start": "122560",
    "end": "126030"
  },
  {
    "text": "Then this one has the value of Q",
    "start": "126640",
    "end": "128369"
  },
  {
    "text": "and this one is guaranteed to be zero because",
    "start": "128369",
    "end": "130559"
  },
  {
    "text": "that's going to be zero anything ANDed with zero is zero so the we'll always be zero if it contains 1 this will be 0",
    "start": "130750",
    "end": "137130"
  },
  {
    "text": "Because anything ended with zero from the not gate is 0 and this will contain whatever this value is Q it",
    "start": "137530",
    "end": "144090"
  },
  {
    "text": "So we now got two",
    "start": "144090",
    "end": "146050"
  },
  {
    "text": "Signals, which are either the value from the flip-flop if the right flip probably said that did 0 or want all it's 0",
    "start": "146050",
    "end": "153990"
  },
  {
    "text": "So you need to combine these two together to produce our output and the way we do that is by using",
    "start": "154210",
    "end": "159719"
  },
  {
    "text": "An or gate looking at the inputs like that so what's coming on here well",
    "start": "159940",
    "end": "164550"
  },
  {
    "text": "Let's think about the truth table for an or gate. We have our two inputs a and B and our output Q",
    "start": "164550",
    "end": "170189"
  },
  {
    "text": "so we've got a value of 0 and 0 0 or 0 is 0 0",
    "start": "170380",
    "end": "174630"
  },
  {
    "text": "or 1 is 1 1 or 0 is 1 and 1 or",
    "start": "175030",
    "end": "180930"
  },
  {
    "text": "1 is obviously 1 so what we've got happening here when 18 is 0",
    "start": "181480",
    "end": "186629"
  },
  {
    "text": "the output of this and gate",
    "start": "187480",
    "end": "189480"
  },
  {
    "text": "Is 0 so anything odd with 0 is?",
    "start": "189520",
    "end": "192809"
  },
  {
    "text": "whatever",
    "start": "192810",
    "end": "193450"
  },
  {
    "text": "The value of the other one is so B is 0 or 1 so the output",
    "start": "193450",
    "end": "197579"
  },
  {
    "text": "When this is here is whatever the value of this output is on the other hand if a in contains 1",
    "start": "197740",
    "end": "202680"
  },
  {
    "text": "This and gate will contain the value of Q and it goes in there, so it'll either be 0 or 1",
    "start": "202810",
    "end": "207060"
  },
  {
    "text": "But this one will be 0 because this well we won inverted 0 and it was 0 everything is always going to be 0",
    "start": "207670",
    "end": "215159"
  },
  {
    "text": "so we've got 0 on the second input so 0 or 0 is 0 1 or 0",
    "start": "215500",
    "end": "221430"
  },
  {
    "text": "Is 1 so again the output and my follows the other input and so we can very quickly just using a nor gate this time",
    "start": "221950",
    "end": "228450"
  },
  {
    "text": "Merge the outputs of the two and gates to create",
    "start": "228640",
    "end": "231659"
  },
  {
    "text": "D out and actually we could design the circuit so all of these things",
    "start": "232240",
    "end": "237629"
  },
  {
    "text": "Were done using NAND gates because they're one of the simplest things to build",
    "start": "238030",
    "end": "242040"
  },
  {
    "text": "Particularly as we've got the inverted outputs from a flip-flop again",
    "start": "242530",
    "end": "246450"
  },
  {
    "text": "You could build that out using many address lines and many all gates around gates to produce your whole",
    "start": "246490",
    "end": "252359"
  },
  {
    "text": "memory",
    "start": "253090",
    "end": "254560"
  },
  {
    "text": "and that's how",
    "start": "254560",
    "end": "256238"
  },
  {
    "text": "Static Ram like you'd find out here",
    "start": "256239",
    "end": "258239"
  },
  {
    "text": "Works you have the equivalent of a flip-flop for each bit and you have address pins that decide which ones are stored",
    "start": "258760",
    "end": "266189"
  },
  {
    "text": "but not quite",
    "start": "267580",
    "end": "268689"
  },
  {
    "text": "There's actually another trick to how the memory is arranged in your typical RAM circuit to make things fit onto a piece of silicon",
    "start": "268690",
    "end": "276479"
  },
  {
    "text": "easier",
    "start": "276970",
    "end": "278650"
  },
  {
    "text": "So what they actually do is?",
    "start": "278650",
    "end": "280650"
  },
  {
    "text": "Rather than having and we're going to use four flip-flops here rather than having them arranged in one",
    "start": "281050",
    "end": "287069"
  },
  {
    "text": "Long line like that we actually arranged them into a grid and so we now have two rows",
    "start": "287590",
    "end": "295049"
  },
  {
    "text": "0 or 1 and 2 columns",
    "start": "295509",
    "end": "298409"
  },
  {
    "text": "0 or 1 so in this case we'd have to address inputs a 0 and a 1",
    "start": "298750",
    "end": "304049"
  },
  {
    "text": "And we use one set of these to select which row it is and we use the other to select which column",
    "start": "304150",
    "end": "310768"
  },
  {
    "text": "It is so if we want to access flip-flop 0 then we select",
    "start": "310770",
    "end": "314520"
  },
  {
    "text": "row 0 column",
    "start": "315130",
    "end": "316810"
  },
  {
    "text": "0 not access for the foot 1 we select row 0 column",
    "start": "316810",
    "end": "320339"
  },
  {
    "text": "1",
    "start": "320919",
    "end": "322570"
  },
  {
    "text": "Want access flip for three we select Row 1 column 1?",
    "start": "322570",
    "end": "326249"
  },
  {
    "text": "So we have a grid effectively of cells where we can store our data, and then again",
    "start": "326250",
    "end": "331889"
  },
  {
    "text": "We have the multiplexer is using all gates to combine them together to produce output",
    "start": "331889",
    "end": "336629"
  },
  {
    "text": "And then we can stack these in 3d to produce the sort of 8-bit outputs like I've got here. So this is a",
    "start": "337060",
    "end": "343260"
  },
  {
    "text": "626 4 chip, which I've pulled out of the BBC micro made in West Germany that shows how old it is, it's probably made",
    "start": "343810",
    "end": "351030"
  },
  {
    "text": "Sitting by this week 15",
    "start": "351580",
    "end": "353580"
  },
  {
    "text": "1986 on here you've got 8 input outputs for the data and",
    "start": "354099",
    "end": "358319"
  },
  {
    "text": "a",
    "start": "359259",
    "end": "360789"
  },
  {
    "text": "read white select pin",
    "start": "360789",
    "end": "362789"
  },
  {
    "text": "5 volts input 0 volts input and the rest of it will be says 8",
    "start": "362979",
    "end": "368069"
  },
  {
    "text": "Case is 8 1 9 to memory locations. That's 2 to the power of",
    "start": "368740",
    "end": "375358"
  },
  {
    "text": "13 I think",
    "start": "376030",
    "end": "378030"
  },
  {
    "text": "And I shall also do 2 to the power of 12",
    "start": "378099",
    "end": "380279"
  },
  {
    "text": "2 to the power of 11 2 to the power of 10 so that Shawn can check it on the calculator",
    "start": "380530",
    "end": "384659"
  },
  {
    "text": "And select the right fitting that I've written down",
    "start": "384789",
    "end": "387029"
  },
  {
    "text": "So we have 2 to the 13, and if you look at the data sheet for this memory chip",
    "start": "388780",
    "end": "393149"
  },
  {
    "text": "which I should bring up on the laptop so you can see that we actually have a row decoder which gets 8 inputs and",
    "start": "393150",
    "end": "400410"
  },
  {
    "text": "a column decoder a zero a nine a 10 11 and a 12 so this",
    "start": "400690",
    "end": "405719"
  },
  {
    "text": "8192 members locations, and they arranged of a grid of",
    "start": "406570",
    "end": "410490"
  },
  {
    "text": "256 rows and",
    "start": "411220",
    "end": "413050"
  },
  {
    "text": "32 columns and of course is then stacked eight high so they can store each of the 8 bits",
    "start": "413050",
    "end": "418499"
  },
  {
    "text": "It's exactly like the way of streets and houses arrange to places like Manhattan",
    "start": "418660",
    "end": "422399"
  },
  {
    "text": "you've got a grid of",
    "start": "422400",
    "end": "423699"
  },
  {
    "text": "things and you select which",
    "start": "423700",
    "end": "425290"
  },
  {
    "text": "Street you want and which Avenue you want and you go to that intersection and that's where the memory location is stored",
    "start": "425290",
    "end": "431129"
  },
  {
    "text": "Only if the two inputs differ if they're the same then the outcomes are 0",
    "start": "434410",
    "end": "438899"
  },
  {
    "text": "So here we go a 0 exclusive all of the 0 they're the same. It's 0",
    "start": "439240",
    "end": "444000"
  }
]