[
  {
    "text": "Lisp is a language that was invented back in the 1950s.",
    "start": "0",
    "end": "4740"
  },
  {
    "text": "It is capable of doing functional programming, but it's actually",
    "start": "4740",
    "end": "8799"
  },
  {
    "text": "often misattributed as being a functional programming language.",
    "start": "8800",
    "end": "12180"
  },
  {
    "text": "In general, it's a so-called metaprogramming language, or a symbolic programming language.",
    "start": "12180",
    "end": "17480"
  },
  {
    "text": "It can be used for any sort of task that you might want do. It's a general-purpose language, Lisp.",
    "start": "17480",
    "end": "22720"
  },
  {
    "text": "It's been said that learning Lisp just helps you be a better programmer in general.",
    "start": "25160",
    "end": "29279"
  },
  {
    "text": "It opens up a lot of different ways of thinking that are sort of",
    "start": "29280",
    "end": "33900"
  },
  {
    "text": "locked away in languages like Java or C++ or what have you.",
    "start": "33900",
    "end": "38060"
  },
  {
    "text": "It has a few interesting ideas, such as this idea of homoiconicity,",
    "start": "38060",
    "end": "43360"
  },
  {
    "text": "where the language itself is written as a data structure that you can represent in that language..",
    "start": "43360",
    "end": "49600"
  },
  {
    "text": "This idea of metaprogramming, where not only are you programming in the language to solve a problem,",
    "start": "49600",
    "end": "55140"
  },
  {
    "text": "but you can program the language itself. You can change the structure of the language itself",
    "start": "55140",
    "end": "60700"
  },
  {
    "text": "to make it more suitable for a particular application.",
    "start": "60700",
    "end": "64180"
  },
  {
    "text": "And even if it was just for learning those concepts, you'd become a better programmer in other languages.",
    "start": "64180",
    "end": "70500"
  },
  {
    "text": "Nonetheless, it still remains a language... Common Lisp, in particular",
    "start": "70500",
    "end": "74580"
  },
  {
    "text": "remains a language that's very, very good at solving modern real-world problems.",
    "start": "74580",
    "end": "79380"
  },
  {
    "text": "I actually would draw an analogy to physics a little bit.",
    "start": "79380",
    "end": "83159"
  },
  {
    "text": "Like, good ideas, ideas that are fundamentally good are usually ones that stand the test of time.",
    "start": "83160",
    "end": "88920"
  },
  {
    "text": "Now, computer science and computer programming is not a very old art, so to speak.",
    "start": "88920",
    "end": "93619"
  },
  {
    "text": "It's, you know, less than a century old.",
    "start": "93620",
    "end": "96460"
  },
  {
    "text": "However, there are lots of theories in physics, for instance, that were sensible,",
    "start": "96460",
    "end": "102119"
  },
  {
    "text": "they allowed you to make predictions. For example, the sun going around the Earth.",
    "start": "102120",
    "end": "106740"
  },
  {
    "text": "It seems reasonable. You see it. But there's a kernel of an idea later that the Earth goes around the sun.",
    "start": "106740",
    "end": "111939"
  },
  {
    "text": "And that is a physical theory that, one, turned out to be true, but also stands the test of time.",
    "start": "111940",
    "end": "117520"
  },
  {
    "text": "There are good ideas in it that are fundamentally good.",
    "start": "117520",
    "end": "120780"
  },
  {
    "text": "And so I think that just the fact that Lisp started in the 1950s and still has something,",
    "start": "120780",
    "end": "127380"
  },
  {
    "text": "still has some kernel of an idea that's good, I think makes it worth learning, even if it's not used day to day.",
    "start": "127380",
    "end": "133260"
  },
  {
    "text": "(off) You do use it day to day, don't you?\n(Smith) Yes.",
    "start": "133260",
    "end": "136200"
  },
  {
    "text": "So, Lisp, even still, going back to this kernel of an idea, is good at building a language that I want.",
    "start": "136200",
    "end": "142920"
  },
  {
    "text": "I can't think of anything that's better than using a programming language that allows me to build the language that I need to express my problem.",
    "start": "142920",
    "end": "151200"
  },
  {
    "text": "The stuff that I work on day to day is quantum computing, where there isn't a lot of literature",
    "start": "151200",
    "end": "155680"
  },
  {
    "text": "on how to wrangle the problems that come up in quantum computing.",
    "start": "155680",
    "end": "160120"
  },
  {
    "text": "Quantum computing uses quantum mechanics, which is a very, very different mathematical language than just addition of numbers, for instance.",
    "start": "160120",
    "end": "168860"
  },
  {
    "text": "It is a very strange world, where things have all different types of rules.",
    "start": "168860",
    "end": "174040"
  },
  {
    "text": "So, modern programming languages don't support expressing these constructs in a very fluid way.",
    "start": "174040",
    "end": "180260"
  },
  {
    "text": "Often, I need to sort of build my own sort of language in order to express solutions to problems that I'm having.",
    "start": "180260",
    "end": "188019"
  },
  {
    "text": "Now, you can do this in a language like C++ or Java. You can build your own parser, you can build your own",
    "start": "188020",
    "end": "193320"
  },
  {
    "text": "compiler, you can build all of the things you need just to be able to write solutions to problems.",
    "start": "193320",
    "end": "198520"
  },
  {
    "text": "But in Lisp, it allows you to grow the language ever so slightly in a very easy way,",
    "start": "198520",
    "end": "203000"
  },
  {
    "text": "so that in Lisp directly I can express these new constructs.",
    "start": "203000",
    "end": "206640"
  },
  {
    "text": "And it's very helpful for these types of new domains.",
    "start": "206640",
    "end": "209240"
  },
  {
    "text": "We're actually extending the syntax of the language.",
    "start": "209240",
    "end": "212660"
  },
  {
    "text": "So, one example that I like to bring up is, back in the days of programming Assembly,",
    "start": "212660",
    "end": "216980"
  },
  {
    "text": "if you wanted to do something like a \"for\" loop, you wrote down this structure where you'd have this explicit",
    "start": "216980",
    "end": "223860"
  },
  {
    "text": "\"jump\" statement, and then you'd have a separate counter somewhere,",
    "start": "223860",
    "end": "227740"
  },
  {
    "text": "and it's all just a bunch of lines of Assembly.",
    "start": "227740",
    "end": "230220"
  },
  {
    "text": "Nowhere in the Assembly code are you actually saying, like, \"for i from 1 to 10\", or something like that,",
    "start": "230220",
    "end": "235420"
  },
  {
    "text": "but you know the concept is there. You know as the programmer what you mean by these instructions is a \"for\" loop.",
    "start": "235420",
    "end": "241620"
  },
  {
    "text": "What Lisp does is allow you to take that idea of a \"for\" loop and actually syntactically be able to write a \"for\" loop.",
    "start": "241620",
    "end": "247879"
  },
  {
    "text": "So it's not just a library of functions. It's actually new syntax and new functionality in the language.",
    "start": "247880",
    "end": "253960"
  },
  {
    "text": "(off) But it all does come down to Assembly in the end, doesn't it?\n(Smith) Yes, absolutely.",
    "start": "253960",
    "end": "257680"
  },
  {
    "text": "Yeah, it all gets compiled to Assembly in the end.",
    "start": "257680",
    "end": "260539"
  },
  {
    "text": "(off) So this is a way of organizing your thoughts as a programmer.\n(Smith) Correct, yes.",
    "start": "260540",
    "end": "264020"
  },
  {
    "text": "That's, I think, ultimately what it's optimizing for, allowing you the programmer to organize your thoughts.",
    "start": "264020",
    "end": "269699"
  },
  {
    "text": "Most of the time in programming is spent thinking, so that's the progress that I want to optimize in programming.",
    "start": "269700",
    "end": "277080"
  },
  {
    "text": "Not necessarily the efficiency of the program, although you can do that, and other things.",
    "start": "277080",
    "end": "281939"
  },
  {
    "text": "It's being able to even get the solution to the problem out on paper or on the screen in the first place.",
    "start": "281940",
    "end": "288620"
  },
  {
    "text": "(off) And would you say you're faster doing it this way?",
    "start": "288620",
    "end": "291100"
  },
  {
    "text": "(off) There might be somebody out there going, \"Yeah, I could do that in Haskell, I could do that in C.\"",
    "start": "291100",
    "end": "294420"
  },
  {
    "text": "(Smith) So, instead of taking my word for it, we did this little program where I work where we had",
    "start": "294420",
    "end": "301960"
  },
  {
    "text": "college students, interns, come in and try the language, then try to use it for solving some of these quantum problems.",
    "start": "301960",
    "end": "309620"
  },
  {
    "text": "And the first reaction is, like, \"Whoa, there are lots of parentheses.\"",
    "start": "309620",
    "end": "313080"
  },
  {
    "text": "If you look at Lisp code, there are lots of parentheses. And then it's... Well, the documentation is sometimes",
    "start": "313080",
    "end": "317460"
  },
  {
    "text": "a little bit shaky in certain places.",
    "start": "317460",
    "end": "319960"
  },
  {
    "text": "But once they kind of got through that first bit of the learning curve,",
    "start": "319960",
    "end": "323940"
  },
  {
    "text": "the feedback that I got is that they could think about their problems in a more fundamental,",
    "start": "323940",
    "end": "329320"
  },
  {
    "text": "or more structural fashion, that the language itself wasn't getting in the way of solving their problems.",
    "start": "329320",
    "end": "334320"
  },
  {
    "text": "It's that now they could express what they think in a more direct fashion, without so much of an impedance mismatch.",
    "start": "334320",
    "end": "340740"
  },
  {
    "text": "Fortunately, Lisp was originally defined in, like, half a page of code. Like, the entire language.",
    "start": "340740",
    "end": "346080"
  },
  {
    "text": "And in that page of code, they had very few concepts that bring to light all of these things that I'm discussing.",
    "start": "346080",
    "end": "353520"
  },
  {
    "text": "Namely, the notion of S expressions, which is how the Lisp language itself is built, how you write it.",
    "start": "353520",
    "end": "359759"
  },
  {
    "text": "And following that, this notion of macros and metaprogramming, how we can extend the language.",
    "start": "359760",
    "end": "365580"
  },
  {
    "text": "And I think these two things really bring to light how all this stuff works.",
    "start": "365580",
    "end": "371020"
  },
  {
    "text": "The special thing about this is that we can interpret it in two ways.",
    "start": "375240",
    "end": "379160"
  },
  {
    "text": "It can be looked at as code. It looks like we're doing 1+2*3.",
    "start": "379160",
    "end": "382720"
  },
  {
    "text": "But it can also be looked at as data. Remember that in Lisp we write out a list using parentheses, here.",
    "start": "382720",
    "end": "389500"
  },
  {
    "text": "We write out symbols just as their names here. So in Lisp, actually have this explicit bridge...",
    "start": "389500",
    "end": "395880"
  }
]