[
  {
    "text": "If you've got multiple processors either that's multiple cores virtual cores",
    "start": "30",
    "end": "530"
  },
  {
    "text": "in a",
    "start": "530",
    "end": "4469"
  },
  {
    "text": "hypothetically a multi-core processor you want to run your algorithm or on",
    "start": "5410",
    "end": "10710"
  },
  {
    "text": "Multiple CPU instances so you need to split it up and the operating system needs to find some way of controlling all those different instances",
    "start": "11290",
    "end": "19139"
  },
  {
    "text": "actually you can still be beneficial on a single CPU",
    "start": "19930",
    "end": "22680"
  },
  {
    "text": "system because it might be times where part of your program is waiting for say network input so the operators will then schedule it in",
    "start": "22810",
    "end": "28590"
  },
  {
    "text": "another thread of execution",
    "start": "28590",
    "end": "30590"
  },
  {
    "text": "To do something",
    "start": "31090",
    "end": "33090"
  },
  {
    "text": "So let's start by thinking about what the operating system sees",
    "start": "34360",
    "end": "37380"
  },
  {
    "text": "when it's running a program and this is what's called a process and that's got a series of instructions and it's going to be",
    "start": "37450",
    "end": "43169"
  },
  {
    "text": "Executing this is the program this is actually not part of the operating system is it's the program but it needs to know we're inside",
    "start": "43360",
    "end": "49739"
  },
  {
    "text": "The program that is so that instruction say",
    "start": "50440",
    "end": "53759"
  },
  {
    "text": "But there's, also lots of other information that the operating system needs to keep track for a process a things like",
    "start": "54730",
    "end": "60930"
  },
  {
    "text": "list of open files",
    "start": "61719",
    "end": "63719"
  },
  {
    "text": "Configuration of memory and so on if you've got virtual memory",
    "start": "64360",
    "end": "67229"
  },
  {
    "text": "involved or",
    "start": "67390",
    "end": "68140"
  },
  {
    "text": "Paging there's various things that the operating system needs to keep track each of them has got a unique ID and you can then run",
    "start": "68140",
    "end": "74250"
  },
  {
    "text": "multiple processes at the same time",
    "start": "74250",
    "end": "76250"
  },
  {
    "text": "so one way you could break your program up into multiple chunks is to actually have multiple processes running in",
    "start": "76600",
    "end": "83280"
  },
  {
    "text": "for a while people did this they sort of",
    "start": "83560",
    "end": "85560"
  },
  {
    "text": "Will use the command a function in UNIX for example called fork you would split the program into 1/2 which would run off as",
    "start": "85659",
    "end": "92699"
  },
  {
    "text": "it was the other would have a new process identifier and the operating system would copy that block and",
    "start": "93220",
    "end": "97470"
  },
  {
    "text": "Create a new list of what memory uses a new list of the files they had open now these are point back to the same",
    "start": "97570",
    "end": "102579"
  },
  {
    "text": " ",
    "start": "102579",
    "end": "103079"
  },
  {
    "text": "files the same blocks memory allocations and things so that if you change one memory location it updated on the other side and things if",
    "start": "103079",
    "end": "110039"
  },
  {
    "text": "You changed a file seat to a different part of a file for example it would update in the others but",
    "start": "110040",
    "end": "115529"
  },
  {
    "text": "They would be separate processes and they'd have to have all the storage required to do that and that worked but",
    "start": "116140",
    "end": "122188"
  },
  {
    "text": "if you're breaking your program up so you can run your task on multiple CPUs",
    "start": "123250",
    "end": "128849"
  },
  {
    "text": "most of them are going to have the same list of files the same memory configuration the",
    "start": "129819",
    "end": "133439"
  },
  {
    "text": "Everything else that the operating system needs to keep track of the only thing that's going to be different is",
    "start": "135459",
    "end": "139979"
  },
  {
    "text": "Where it is in the program what bit of code is running from what part and so the idea that came along was ok let's",
    "start": "140739",
    "end": "146639"
  },
  {
    "text": "Have something lighter weight than a process and they called it a thread because you've got your thread of execution through the instructions",
    "start": "146640",
    "end": "152189"
  },
  {
    "text": "And what we have is that each process will have at least one thread of execution but could have many",
    "start": "152319",
    "end": "156929"
  },
  {
    "text": "So you have multiple threads of execution in your program so your programs running one thread",
    "start": "157329",
    "end": "161819"
  },
  {
    "text": "Which it starts off with that will then create another thread",
    "start": "161819",
    "end": "164488"
  },
  {
    "text": "Which does something and then another thread pratik and so on can do different parts they made last for the whole length of the program",
    "start": "164489",
    "end": "169949"
  },
  {
    "text": "they",
    "start": "169950",
    "end": "170340"
  },
  {
    "text": "may only last for a short part while that task being completed and so on",
    "start": "170340",
    "end": "173489"
  },
  {
    "text": "You may have multiple ones that get jobs from different things and so on how you structure your program",
    "start": "173709",
    "end": "178468"
  },
  {
    "text": "Doesn't matter but from the operating system point of view it's now",
    "start": "179200",
    "end": "182039"
  },
  {
    "text": "Scheduling different threads onto the different cause whether that's one to four however many you've got in your system so the idea behind",
    "start": "182530",
    "end": "189569"
  },
  {
    "text": "Multi-threading is a sort of lightweight way of saying to the operating system these are the different things I want running on my computer",
    "start": "190000",
    "end": "195719"
  },
  {
    "text": "Whether that's always part of one program",
    "start": "196359",
    "end": "198659"
  },
  {
    "text": "or multiple threads through multiple programs and the operating systems choosing which one of them actually gets CPU times on any of the CPU calls",
    "start": "198659",
    "end": "206219"
  },
  {
    "text": "physical or virtual that they have",
    "start": "206379",
    "end": "208379"
  },
  {
    "text": "available",
    "start": "208449",
    "end": "209650"
  },
  {
    "text": "Now that it produces if you were actually one program that you've split into multiple threads that introduces some interesting issues",
    "start": "209650",
    "end": "214769"
  },
  {
    "text": "Because you can get to the point where your programs can no longer do the task that you expect them to do a program which",
    "start": "215650",
    "end": "221159"
  },
  {
    "text": "Was just one single stream of instructions executing one after the other and so he knew the order they'd execute in two",
    "start": "221159",
    "end": "227789"
  },
  {
    "text": "to multiple strengths of instruction that are executing",
    "start": "228159",
    "end": "231838"
  },
  {
    "text": "Sometimes in parallel sometimes one after the other but you no longer have any",
    "start": "232389",
    "end": "236609"
  },
  {
    "text": "Control over the order that would happen because the operating system might put two of their threads on at the same time",
    "start": "237879",
    "end": "243089"
  },
  {
    "text": "Or I might let one thread run and then put the other thread on after the other and then go back and you can all",
    "start": "243489",
    "end": "248578"
  },
  {
    "text": "Control, where it's switch from one",
    "start": "248579",
    "end": "250579"
  },
  {
    "text": "to the other I can show this with an interesting program on my laptop",
    "start": "250720",
    "end": "254759"
  },
  {
    "text": "So what I've got here is I'm going to write a program that",
    "start": "255129",
    "end": "258208"
  },
  {
    "text": "adds up all the numbers from 1 to 1 million but I'm going to do that in two",
    "start": "258400",
    "end": "263880"
  },
  {
    "text": "Threads so I've written two with the Reds here creating threads the first one is this routine here",
    "start": "264430",
    "end": "269488"
  },
  {
    "text": "Which is called the hopefully thread function?",
    "start": "269490",
    "end": "271418"
  },
  {
    "text": "We've got a variable a which we're going to initialize to be 0 and I've declared this as a volatile",
    "start": "271419",
    "end": "275969"
  },
  {
    "text": "Variable just to tell the C compile and it will change",
    "start": "276370",
    "end": "278970"
  },
  {
    "text": "While it's running because otherwise you'd have even more problems so split in two so the first one is adding up the first",
    "start": "279669",
    "end": "285269"
  },
  {
    "text": "500,000 the second one",
    "start": "285639",
    "end": "287380"
  },
  {
    "text": "exactly the same so it's adding at the second",
    "start": "287380",
    "end": "289439"
  },
  {
    "text": "500,000 so what it's doing is it's adding up from",
    "start": "290020",
    "end": "292379"
  },
  {
    "text": "500,000 to 1 million and they're adding that's the same variable so go instruction he's going to fetch one",
    "start": "292690",
    "end": "298229"
  },
  {
    "text": "Adder on the next one and write it back and then the other one's going to fetch it",
    "start": "298510",
    "end": "301319"
  },
  {
    "text": "Add on the value and write it back and so on so then we then run our program",
    "start": "301450",
    "end": "305879"
  },
  {
    "text": "When we create both threads and then we wait for them to complete which is what this P",
    "start": "305880",
    "end": "310229"
  },
  {
    "text": "Throw joint is doing and then we print out the number that",
    "start": "310229",
    "end": "313589"
  },
  {
    "text": "We've got so if you just like to add up all the numbers between 1 and a million while I run the program",
    "start": "313590",
    "end": "318238"
  },
  {
    "text": "Then we'll see what result we get 500 times you'd billion so let's just compile this up",
    "start": "319479",
    "end": "325049"
  },
  {
    "text": "Not making mistakes the problems would compile this up and let's just run this program",
    "start": "329710",
    "end": "333150"
  },
  {
    "text": "and it's giving me the answer to eight six six eight nine seven four eight two two six zero",
    "start": "333940",
    "end": "338700"
  },
  {
    "text": "if I run it again I",
    "start": "339820",
    "end": "341820"
  },
  {
    "text": "now get the answer three three three nine six three eight two six seven two six I'll run it again I",
    "start": "342250",
    "end": "348660"
  },
  {
    "text": "get the answer three two six eight seven, oh four oh nine five Q one I run it again I get two for 307",
    "start": "348820",
    "end": "355289"
  },
  {
    "text": "501 five 490 which sounds like a phone number",
    "start": "355840",
    "end": "358738"
  },
  {
    "text": "Well this all this all converge on the right answer all leverage out or is this just one of those",
    "start": "359020",
    "end": "363449"
  },
  {
    "text": "completely",
    "start": "363760",
    "end": "364270"
  },
  {
    "text": "Well if you think about it",
    "start": "364270",
    "end": "365620"
  },
  {
    "text": "Should always be the same you've got you're adding up all the numbers between one and a million you should always get the same answer",
    "start": "365620",
    "end": "370620"
  },
  {
    "text": "It shouldn't be converging on something you should always be producing the same answer so something very very odd is going on on my computer",
    "start": "371139",
    "end": "376978"
  },
  {
    "text": "Something very very bizarre is going on we could write the program less in fact let's just write the program normally",
    "start": "377139",
    "end": "384569"
  },
  {
    "text": "let's comment out all this and we'll just write a very quick program that adds up all the values from 1",
    "start": "385720",
    "end": "391919"
  },
  {
    "text": "to a million so what I is less than or equal to 1",
    "start": "392380",
    "end": "396299"
  },
  {
    "text": "I'm sorry so it may be a single-threaded program now it's just going to run on one thread",
    "start": "396830",
    "end": "400840"
  },
  {
    "text": "And if we do that we compile it",
    "start": "401000",
    "end": "403359"
  },
  {
    "text": "We now get the same value each time",
    "start": "406069",
    "end": "408098"
  },
  {
    "text": "500 and whatever those so now we've done single-threaded",
    "start": "408979",
    "end": "412059"
  },
  {
    "text": "we're getting around certain we're getting the same answer each time so what's going on here well you need to think about what's happening in",
    "start": "412060",
    "end": "417369"
  },
  {
    "text": "This program, so let's just put it back to where it was",
    "start": "417370",
    "end": "419620"
  },
  {
    "text": "if we look at this instruction here a",
    "start": "420379",
    "end": "422379"
  },
  {
    "text": "equals a plus I then what this was telling this program to do is to fetch the value of a",
    "start": "423500",
    "end": "429069"
  },
  {
    "text": "whatever that is",
    "start": "430430",
    "end": "432139"
  },
  {
    "text": "then add on the value of I to it and",
    "start": "432139",
    "end": "434318"
  },
  {
    "text": "Then store the result back in a now if I just put that to one side and find my paper",
    "start": "434780",
    "end": "439269"
  },
  {
    "text": "Which is over here with my pens if we? Were to write that in machine code",
    "start": "440240",
    "end": "445060"
  },
  {
    "text": "I'll use the arm ship to do that because it just makes things slightly easy to see what's going on",
    "start": "445819",
    "end": "450069"
  },
  {
    "text": "We would have this is thread 1 so we'll call this t1 we're going to say that this is going to be an LDR instruction",
    "start": "450680",
    "end": "456969"
  },
  {
    "text": "To load a value from memory so they're loading to be registered let's use our 0",
    "start": "457250",
    "end": "461199"
  },
  {
    "text": "the value of a",
    "start": "462319",
    "end": "464319"
  },
  {
    "text": "We're then going to add onto",
    "start": "465409",
    "end": "467409"
  },
  {
    "text": "Our 0",
    "start": "468349",
    "end": "470349"
  },
  {
    "text": "The value of r1",
    "start": "471409",
    "end": "473180"
  },
  {
    "text": "Which is a register containing our loop counter that's the same as I on there and then we're going to store",
    "start": "473180",
    "end": "477849"
  },
  {
    "text": "the value of R 0",
    "start": "478520",
    "end": "480520"
  },
  {
    "text": "Back you know so that one Caesars have become 3 machine code instructions",
    "start": "481699",
    "end": "486758"
  },
  {
    "text": "so the way that the program is executing in one thread is it's loading the value from memory and",
    "start": "487940",
    "end": "492759"
  },
  {
    "text": "It's making a local copy of it and then it adds a value onto it",
    "start": "492889",
    "end": "495788"
  },
  {
    "text": "updates its local copy and stores it back",
    "start": "496279",
    "end": "498729"
  },
  {
    "text": "into the actual location and that thread keeps doing that into the loop so it loads it I",
    "start": "499120",
    "end": "503400"
  },
  {
    "text": "Had something onto it and stores it back loads it add something else to it",
    "start": "503900",
    "end": "508979"
  },
  {
    "text": "Stores it back now if we've got a multi-threaded system, which is what we had there, we?",
    "start": "509500",
    "end": "514360"
  },
  {
    "text": "also have another Steve hi Steve hi Steve and",
    "start": "514360",
    "end": "517899"
  },
  {
    "text": "in that case",
    "start": "518630",
    "end": "520190"
  },
  {
    "text": "I'm going to be here",
    "start": "520190",
    "end": "521630"
  },
  {
    "text": "loading the value I think value onto it storing it back",
    "start": "521630",
    "end": "524829"
  },
  {
    "text": "And I'm gonna be here loading a value adding something onto it and storing it back so I'm loading value",
    "start": "524990",
    "end": "530320"
  },
  {
    "text": "adding something on to it I'm loading value",
    "start": "530690",
    "end": "532749"
  },
  {
    "text": "loading a value  adding something on to it",
    "start": "533120",
    "end": "533860"
  },
  {
    "text": "adding something on to it storing it back  storing it back",
    "start": "533860",
    "end": "536880"
  },
  {
    "text": "and what's just happened Because other Steve had added something else on to it, while I'd load it on when I storm my back his update",
    "start": "536880",
    "end": "543820"
  },
  {
    "text": "doesn't get changed gets lost",
    "start": "544420",
    "end": "546420"
  },
  {
    "text": "Well that wasn't nice",
    "start": "546550",
    "end": "547700"
  },
  {
    "text": "So if we look at what's happening on the papal it's loading the value in it's adding the value onto it and then it's doing",
    "start": "547700",
    "end": "552640"
  },
  {
    "text": "It back but of course, we've got multiple systems and so at some point",
    "start": "552640",
    "end": "555360"
  },
  {
    "text": "this pro",
    "start": "556240",
    "end": "557520"
  },
  {
    "text": "Was going to start excusing the same code so let's cross this instruction out for now we'll put it back in a bit later on",
    "start": "557530",
    "end": "562239"
  },
  {
    "text": "And assume that at this point we load the value into the other thread",
    "start": "562490",
    "end": "567219"
  },
  {
    "text": "into our zero in",
    "start": "568100",
    "end": "570100"
  },
  {
    "text": "there",
    "start": "570350",
    "end": "571550"
  },
  {
    "text": "And then we do the add on in the same way",
    "start": "571550",
    "end": "573849"
  },
  {
    "text": "Dot and then we do the store back here",
    "start": "574580",
    "end": "578049"
  },
  {
    "text": "of our zero into a and we've got one a",
    "start": "578870",
    "end": "581200"
  },
  {
    "text": "Up here there an Singh and then this store actually happens after this store here",
    "start": "581720",
    "end": "588129"
  },
  {
    "text": "So what happens here is that these both end up getting the same value of a",
    "start": "590150",
    "end": "594579"
  },
  {
    "text": "And this has its value on in its local register this adds its value one in its local register this stores it back",
    "start": "595700",
    "end": "602379"
  },
  {
    "text": "Then this stores it back and of course because this is just story back here",
    "start": "603920",
    "end": "607690"
  },
  {
    "text": "It's overwritten the value that was stored there so the value that was added on here",
    "start": "607910",
    "end": "611498"
  },
  {
    "text": "gets lost so what we need to do is find a way to",
    "start": "612470",
    "end": "616180"
  },
  {
    "text": "synchronize these two things so that as soon as this is loaded the value in",
    "start": "616670",
    "end": "620469"
  },
  {
    "text": "And it's going to add something on to it it stops",
    "start": "620720",
    "end": "623079"
  },
  {
    "text": "This one from doing it and so there's a couple of ways, we can do that",
    "start": "623720",
    "end": "627730"
  },
  {
    "text": "The easiest way is that we have something that",
    "start": "628430",
    "end": "631000"
  },
  {
    "text": "both divide both Steve's or both CPUs have to access and so we could have a token let's use a floppy disk Microsoft Office Professional",
    "start": "631250",
    "end": "638559"
  },
  {
    "text": "1995 and what we're going to say is that I can only access an update variable a if",
    "start": "640220",
    "end": "645189"
  },
  {
    "text": "I have the token so let's bring back",
    "start": "645620",
    "end": "648279"
  },
  {
    "text": "Friendly Steve so we've now got a token and we?",
    "start": "648950",
    "end": "651819"
  },
  {
    "text": "What we're going to say is it unless I've got the token I cannot access a variable a so I'm going to execute those three",
    "start": "651820",
    "end": "657520"
  },
  {
    "text": "Instructions whenever I've got the token so I'll get a load of runny win",
    "start": "657520",
    "end": "660280"
  },
  {
    "text": "add something onto it and store it back and",
    "start": "661010",
    "end": "663489"
  },
  {
    "text": "gonna hand the token to Steve now I've got the token so I can load a value in",
    "start": "663970",
    "end": "667540"
  },
  {
    "text": "add the value from I've merged her into it and",
    "start": "667670",
    "end": "669969"
  },
  {
    "text": "store it back and hand the target and now I've got the token again I can load something into",
    "start": "670040",
    "end": "673719"
  },
  {
    "text": "It into my register add something onto it",
    "start": "673850",
    "end": "676060"
  },
  {
    "text": "Back and pass the token on and I've got it so I can load the value in add the value from a register",
    "start": "676310",
    "end": "680799"
  },
  {
    "text": "Story back and pass the token on",
    "start": "681050",
    "end": "683029"
  },
  {
    "text": "And because I've got the token again I can do the same again but because only one of us can hold the token at any",
    "start": "683029",
    "end": "688148"
  },
  {
    "text": "one time it means that only a can get updated",
    "start": "688149",
    "end": "691479"
  },
  {
    "text": "When we've got the token and so we never lose that right because we're saying that unless you've got the token",
    "start": "692180",
    "end": "696759"
  },
  {
    "text": "You can't access that very that's great so if we turn back to the laptop we can see",
    "start": "697100",
    "end": "700870"
  },
  {
    "text": "How we can implement that in our program we're gonna use the same idea, we're gonna have something that we need to have before",
    "start": "700870",
    "end": "706628"
  },
  {
    "text": "We can run that code in this case we're going to have what's called a mutex and mute an area mutual exclusion",
    "start": "706629",
    "end": "711429"
  },
  {
    "text": "that we need to lock",
    "start": "711649",
    "end": "713449"
  },
  {
    "text": "Before we can run, the code after it and then when",
    "start": "713449",
    "end": "715420"
  },
  {
    "text": "we finished we unlock that and so if it's",
    "start": "715420",
    "end": "717490"
  },
  {
    "text": "Locked and we try and acquire it our program will pause until it is able to lock it",
    "start": "717649",
    "end": "721839"
  },
  {
    "text": "So I'm going to do is I've created the variable for it here and I've",
    "start": "722120",
    "end": "726039"
  },
  {
    "text": "Also initialized it down here so it's all set up",
    "start": "726040",
    "end": "728259"
  },
  {
    "text": "Ready to go so before I add onto a that the value of the instructions I'm going to lock that",
    "start": "728259",
    "end": "734199"
  },
  {
    "text": "mutex",
    "start": "734870",
    "end": "736250"
  },
  {
    "text": "like so and then afterwards",
    "start": "736250",
    "end": "739000"
  },
  {
    "text": "if I could type I'm going to unlock that mutex",
    "start": "740180",
    "end": "743438"
  },
  {
    "text": "Like so and I need to do the same in the other thread as well so I'm going to lock the mutex",
    "start": "745910",
    "end": "750759"
  },
  {
    "text": "I'm going to unlock it afterwards",
    "start": "758450",
    "end": "762999"
  },
  {
    "text": "So if I can pile this version up",
    "start": "765650",
    "end": "767650"
  },
  {
    "text": "we still got two threads we're still getting them to add up the things as we go through it and then at the end",
    "start": "768140",
    "end": "774100"
  },
  {
    "text": "We're going to add the result and it should this time give us the right answer",
    "start": "774620",
    "end": "779470"
  },
  {
    "text": "so let's run it and",
    "start": "780800",
    "end": "782800"
  },
  {
    "text": "It gives us the right answer we now split the problem into it's running on two CPUs and because we're locking that variable so",
    "start": "785060",
    "end": "791290"
  },
  {
    "text": "We can only access it by one thread or the other",
    "start": "791290",
    "end": "793480"
  },
  {
    "text": "So, we did with the two Steve's then we can get the right result and it produces the same result every time",
    "start": "794030",
    "end": "800439"
  },
  {
    "text": "now the downside to this is that locking the thread each time slows the running of the program down",
    "start": "801050",
    "end": "804878"
  },
  {
    "text": "But we can be clever if we think about addition if we add six numbers together",
    "start": "805100",
    "end": "808719"
  },
  {
    "text": "That's the same as adding",
    "start": "809390",
    "end": "810640"
  },
  {
    "text": "Three numbers together then adding three numbers together and having the results of both together and we can do the same thing here",
    "start": "810640",
    "end": "816699"
  },
  {
    "text": "so, we can take this mutex and",
    "start": "817100",
    "end": "819100"
  },
  {
    "text": "Move it outside of our main loop and instead of rounding on the value of I each time",
    "start": "820190",
    "end": "824860"
  },
  {
    "text": "we have a local variable we'll call it local a which we add everything on to so we say local a equals local a",
    "start": "825140",
    "end": "832030"
  },
  {
    "text": "plus I",
    "start": "832790",
    "end": "834790"
  },
  {
    "text": "So inside our thread we're just going around adding all the values on as we did before which didn't work because we're putting in a",
    "start": "835550",
    "end": "841209"
  },
  {
    "text": "Local variable that's local to that thread and this function",
    "start": "841210",
    "end": "843910"
  },
  {
    "text": "It's not gonna be a problem because only this function can access it well do the same in the other thread and then we'll do",
    "start": "844460",
    "end": "849850"
  },
  {
    "text": "The same thing outside it and the advantage of doing this is that we now only have to acquire that lock",
    "start": "849850",
    "end": "855670"
  },
  {
    "text": "Once in each thread rather having to acquire it for every single addition, whether you have to acquire it once if we time the program",
    "start": "855860",
    "end": "863289"
  },
  {
    "text": "Beforehand and I should say at this point the program may be running so fast that we won't better get an accurate time and it",
    "start": "864380",
    "end": "870189"
  },
  {
    "text": "Wouldn't try anyway so use the time coming to time it",
    "start": "870190",
    "end": "872380"
  },
  {
    "text": "We see it takes about nine point eight two seconds let's just run it again nor point seven one",
    "start": "872810",
    "end": "878050"
  },
  {
    "text": "Nor point seven one",
    "start": "879260",
    "end": "880670"
  },
  {
    "text": "We seem to have standardized around that sort of things about naught point seven so let's compile up our faster version now",
    "start": "880670",
    "end": "886539"
  },
  {
    "text": "Not made any mistakes and we'll time it again, well let's see produces the right value will time it as well",
    "start": "887840",
    "end": "892509"
  },
  {
    "text": "And it's taking around the same time",
    "start": "893930",
    "end": "895930"
  },
  {
    "text": "It's dropping a bit and it doesn't really make any difference in time I think that's just because of how fast the computers are",
    "start": "896690",
    "end": "901959"
  },
  {
    "text": "That we're dealing with but with a bigger program we're doing more calculations",
    "start": "902149",
    "end": "905859"
  },
  {
    "text": "Reducing the number of times we require that a lot would actually make the system run",
    "start": "906290",
    "end": "909670"
  },
  {
    "text": "Faster so multi-threading is the idea breaking our program up into multiple threads of execution that run for different lengths of time but",
    "start": "910069",
    "end": "917889"
  },
  {
    "text": "We have to be careful that we do things in the right order and we avoid having",
    "start": "917889",
    "end": "921998"
  },
  {
    "text": "multiple threads accessing the same variable at the same time",
    "start": "922840",
    "end": "925320"
  },
  {
    "text": "Particularly if they're writing if they're just reading from it it doesn't matter if one's writing and several the reading from it and it doesn't",
    "start": "925660",
    "end": "931860"
  },
  {
    "text": "matter if they perhaps get an. Older value at a time then it works fine and so on",
    "start": "931880",
    "end": "935740"
  },
  {
    "text": "That same",
    "start": "937399",
    "end": "938389"
  },
  {
    "text": "A1 so that he can decrypt the message and read it right so Alice maybe wants to send another one so she's going to tick",
    "start": "938389",
    "end": "943628"
  },
  {
    "text": "This KDF function again she's going to produce a new key and a2",
    "start": "943629",
    "end": "947229"
  },
  {
    "text": "she's going to send that to Bob he's going to take this receiving function a2",
    "start": "947870",
    "end": "951279"
  },
  {
    "text": "Now Bob wants to send a message so he's going to tick",
    "start": "951560",
    "end": "953709"
  }
]