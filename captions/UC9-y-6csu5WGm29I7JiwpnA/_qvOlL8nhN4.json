[
  {
    "text": "Things we talked about a spectrum meltdown and they rely on some of the more advanced ways that the CPU operates",
    "start": "0",
    "end": "5040"
  },
  {
    "text": "It's probably worth diving down and actually looking at how a CPU actually executes the code be right",
    "start": "5040",
    "end": "10649"
  },
  {
    "text": "I mean, we've touched on this before we did a video on pipelining we did a video on caching, but also delve down and see",
    "start": "10650",
    "end": "16890"
  },
  {
    "text": "What happens below the surface when we actually get our CPU to execute our code?",
    "start": "17410",
    "end": "22049"
  },
  {
    "text": "Let's start by having a simple example:",
    "start": "24640",
    "end": "28539"
  },
  {
    "text": "A line of code that we might want to look at what happens. Let's take a line of code that takes a variable",
    "start": "28680",
    "end": "33500"
  },
  {
    "text": "Let's take a line of code. It's gonna add up A plus B plus C plus D",
    "start": "33780",
    "end": "40280"
  },
  {
    "text": "Times e so I've written this in this sort of see like language",
    "start": "40600",
    "end": "44519"
  },
  {
    "text": "So we're gonna do this calculation now as I'm sure most of us are aware",
    "start": "44520",
    "end": "47639"
  },
  {
    "text": "When we take that and put into our C compiler run it it gets converted into the machine code that the CPU executes",
    "start": "47950",
    "end": "54419"
  },
  {
    "text": "so we take that client of code, and then we'd have to",
    "start": "54420",
    "end": "56609"
  },
  {
    "text": "Convert that into the machine code, and then the CPU",
    "start": "57190",
    "end": "59910"
  },
  {
    "text": "Executes that machine code so a program like this would end up looking and I'm going to use arm assembly here",
    "start": "60760",
    "end": "66239"
  },
  {
    "text": "Just because I know it better than the anything else perhaps for the first instruction. We would load the value for memory of a",
    "start": "66240",
    "end": "72659"
  },
  {
    "text": "Into registers, let's pick our zero. We've got 14 or so of them",
    "start": "73900",
    "end": "77159"
  },
  {
    "text": "We can use the 16 of them",
    "start": "77159",
    "end": "78750"
  },
  {
    "text": "but some of them get used for different things that we don't really use so although the value of a",
    "start": "78750",
    "end": "81750"
  },
  {
    "text": "Into our zero next thing we want to do is you want to add that to the value of B",
    "start": "82000",
    "end": "85559"
  },
  {
    "text": "Then after make sure we'll get the operator precedence right so we can load the value of B into a register",
    "start": "85560",
    "end": "90629"
  },
  {
    "text": "So let's loading the value of C",
    "start": "90630",
    "end": "92630"
  },
  {
    "text": "Here into another register",
    "start": "93040",
    "end": "95040"
  },
  {
    "text": "And we might as well do D. And E. As well so load or three come on D. And",
    "start": "95470",
    "end": "100379"
  },
  {
    "text": "We'll load our four",
    "start": "101619",
    "end": "103619"
  },
  {
    "text": "With E as well, and now we can start",
    "start": "104799",
    "end": "107429"
  },
  {
    "text": "Adding these things up multiplying them to produce",
    "start": "108460",
    "end": "111180"
  },
  {
    "text": "The actual result we want now we're going to make sure we get the precedence right",
    "start": "111480",
    "end": "114500"
  },
  {
    "text": "But we could either start by adding a and B together then add on C. And then",
    "start": "114800",
    "end": "119080"
  },
  {
    "text": "Multiply D. And E and have them together or we could do that one first",
    "start": "119620",
    "end": "122340"
  },
  {
    "text": "I'm just going to start going from left to right as long as the math is right",
    "start": "122340",
    "end": "125398"
  },
  {
    "text": "We'll get the right result so we'll add together a and B now",
    "start": "125399",
    "end": "128458"
  },
  {
    "text": "I put those two values in r0 and r1 and we need to store the results somewhere",
    "start": "128459",
    "end": "132419"
  },
  {
    "text": "We are going to need the value of a again after this, so we'll reuse the register R",
    "start": "132840",
    "end": "136679"
  },
  {
    "text": "0 so we're saying put into R 0",
    "start": "136990",
    "end": "138990"
  },
  {
    "text": "the value of R 0",
    "start": "139360",
    "end": "141360"
  },
  {
    "text": "plus R",
    "start": "141819",
    "end": "143590"
  },
  {
    "text": "1 so this is adding together storing the result in R. 0 so we now added a and B together",
    "start": "143590",
    "end": "147929"
  },
  {
    "text": "We want to add on C. And so we could do the same thing add",
    "start": "147930",
    "end": "151890"
  },
  {
    "text": "to R 0",
    "start": "152530",
    "end": "153910"
  },
  {
    "text": "The value in R. 0 which is now because of this instruction a plus B want to add on the value in R",
    "start": "153910",
    "end": "159389"
  },
  {
    "text": "2 there's now about a plus B plus C in",
    "start": "159390",
    "end": "163649"
  },
  {
    "text": "Our 0 now we need to do the multiplication",
    "start": "164709",
    "end": "167159"
  },
  {
    "text": "And we need to do that separately before we add it on so we get the right result so we'll multiply",
    "start": "167160",
    "end": "170249"
  },
  {
    "text": "And we'll see we've got an arm, too cheap here, so we've got the multiply instruction there",
    "start": "170470",
    "end": "174449"
  },
  {
    "text": "And we need to put the results on whether it's use our 5 D. Which we put in R. 3 and E",
    "start": "174450",
    "end": "179250"
  },
  {
    "text": "Which we put in R?",
    "start": "179250",
    "end": "181060"
  },
  {
    "text": "4 and then we want to add the result of that onto the value",
    "start": "181060",
    "end": "184800"
  },
  {
    "text": "In our 0 and now our 0 contains the result of a plus B. Plus C plus D times E. And",
    "start": "185080",
    "end": "191729"
  },
  {
    "text": "We could then store that",
    "start": "192400",
    "end": "194200"
  },
  {
    "text": "back into X",
    "start": "194200",
    "end": "196030"
  },
  {
    "text": "So that line of code there at one line of C code would become what 1 2 3 4 5 6 7 8 9 10",
    "start": "196030",
    "end": "202860"
  },
  {
    "text": "different lines an assembler and I've numbered them because I'm going to",
    "start": "203320",
    "end": "206549"
  },
  {
    "text": "Refer to them at different times so we can say searching one instruction 5 etc to refer to the different ones now",
    "start": "206739",
    "end": "212909"
  },
  {
    "text": "We might expect that our CPU will just xu instruction 1 the new instruction 2 instruction 3 instruction 405 and so on in order",
    "start": "213220",
    "end": "220229"
  },
  {
    "text": "To generate the result and some cpus do in fact work exactly like that, but actually if you think about",
    "start": "220450",
    "end": "226560"
  },
  {
    "text": "What the cpus and what these descriptions are actually doing you might think well actually?",
    "start": "227320",
    "end": "231059"
  },
  {
    "text": "when I get this first one I've got to go an access memory and",
    "start": "231640",
    "end": "234479"
  },
  {
    "text": "As we talked about in the caching video many years ago, cache is perhaps a an old-fashioned English word",
    "start": "235209",
    "end": "241169"
  },
  {
    "text": "but it basically just means a small place where we can store things so you might use it to store your hidden treasure if you're",
    "start": "241170",
    "end": "246239"
  },
  {
    "text": "a pirate or to store",
    "start": "246239",
    "end": "248049"
  },
  {
    "text": "Your food for winter on a modern CPU probably say around 200",
    "start": "248049",
    "end": "252028"
  },
  {
    "text": "Nanoseconds to actually go and get the value out of your main memory and load it into the register now of course",
    "start": "252100",
    "end": "257549"
  },
  {
    "text": "If these are already cached in the same bit of memory, then you may find that these all execute very quickly",
    "start": "257549",
    "end": "261509"
  },
  {
    "text": "We don't know that this isn't the only way we could write this program because if we take this instruction here instruction 6",
    "start": "262060",
    "end": "269049"
  },
  {
    "text": "Where we do the add of r0 and r1 to add up a and B. Well. We've got those two values here",
    "start": "269330",
    "end": "275319"
  },
  {
    "text": "They're already in the registers at this point in the program",
    "start": "275449",
    "end": "277929"
  },
  {
    "text": "So there's nothing to stop us moving this instruction up there",
    "start": "278060",
    "end": "281619"
  },
  {
    "text": "and it would still have exactly the same effect so instruction 6 could be moved to me between instructions 2 & 3",
    "start": "281620",
    "end": "286659"
  },
  {
    "text": "And then we do the next instruction which was the same as instruction 3 here?",
    "start": "286970",
    "end": "290769"
  },
  {
    "text": "which would be LDR",
    "start": "291319",
    "end": "292940"
  },
  {
    "text": "R to come of the values in memory that's representing the letter the variable see how exactly the same effect. We just moved that",
    "start": "292940",
    "end": "299469"
  },
  {
    "text": "Instruction earlier so you could rewrite this program in various different ways now",
    "start": "300560",
    "end": "305889"
  },
  {
    "text": "Why is that interesting?",
    "start": "306560",
    "end": "308560"
  },
  {
    "text": "well when we think about how a CPU is designed and that you will have",
    "start": "308840",
    "end": "312789"
  },
  {
    "text": "various different what impress be termed execution units within there now one of them is what's generally referred to as the",
    "start": "313460",
    "end": "321400"
  },
  {
    "text": "ALU or the arithmetic and logic unit and that's the bit of your CPU that does",
    "start": "322250",
    "end": "327759"
  },
  {
    "text": "Addition it does subtraction it does sort of logical operators and or and so on",
    "start": "328069",
    "end": "332049"
  },
  {
    "text": "But you also have other bits inside there",
    "start": "332449",
    "end": "334658"
  },
  {
    "text": "And one of the bits you'll often have in a modern CPU is it part of your CPU that handles loading and storing",
    "start": "334659",
    "end": "340718"
  },
  {
    "text": "Values from memory sometimes interact sometimes they don't now",
    "start": "341690",
    "end": "346179"
  },
  {
    "text": "Assuming that they are separate parts of the CPU if we look back at our instructions here. We execute instruction 1",
    "start": "346580",
    "end": "353258"
  },
  {
    "text": "It uses a load store. You need to get a value for memory we execute instruction 2",
    "start": "353259",
    "end": "357128"
  },
  {
    "text": "It uses the load store unit to get a value for memory instruction 3",
    "start": "357129",
    "end": "361299"
  },
  {
    "text": "It uses a load store unit to get a value for memory for uses the load store unit to get a value for memory",
    "start": "361300",
    "end": "367090"
  },
  {
    "text": "5 uses the load store unit to get a value for a memory 6",
    "start": "367340",
    "end": "371859"
  },
  {
    "text": "changes and uses the ALU as 2 7 8 & 9",
    "start": "372529",
    "end": "375548"
  },
  {
    "text": "before insertion turn uses the load store unit so we've got a pretty sequential series the first 5",
    "start": "375949",
    "end": "382119"
  },
  {
    "text": "instructions all execute using the load store part of the CPU the next four instructions execute using the ALU and",
    "start": "382340",
    "end": "389379"
  },
  {
    "text": "The final instruction again uses the load store unit but as we said we can reorder that",
    "start": "389990",
    "end": "396130"
  },
  {
    "text": "into this version here using instructions w x y and z",
    "start": "396589",
    "end": "400888"
  },
  {
    "text": "Differentiate them and we execute the first instruction instruction w uses a load store unit instruction X",
    "start": "401530",
    "end": "407850"
  },
  {
    "text": "Uses a load store unit instruction Y uses the ALU restrictions ed uses the load store unit",
    "start": "408160",
    "end": "415170"
  },
  {
    "text": "Okay, what difference does that make well let's think about what's happening when we're using the load store unit",
    "start": "415510",
    "end": "421200"
  },
  {
    "text": "the ALU isn't being used that part of the CV is just sitting there not being used and",
    "start": "422560",
    "end": "426690"
  },
  {
    "text": "When we're using the ALU the load store units sitting there not being used, that's what we saw there",
    "start": "427210",
    "end": "432629"
  },
  {
    "text": "But does that have to be the case could we actually design it, and you probably guess the answer is that yes?",
    "start": "432630",
    "end": "437909"
  },
  {
    "text": "We can so that",
    "start": "437910",
    "end": "439390"
  },
  {
    "text": "While the load store unit say is being used that we can run the instructions on the ALU part as well",
    "start": "439390",
    "end": "444719"
  },
  {
    "text": "I'd turn the paper round and I'm going to draw",
    "start": "444730",
    "end": "447420"
  },
  {
    "text": "This as a sort of timeline so these are our two units and we've got time running along this side as well",
    "start": "447420",
    "end": "453420"
  },
  {
    "text": "I'm using the computer for our paper in a",
    "start": "453420",
    "end": "455420"
  },
  {
    "text": "Radically different orientation, but never mind, so we're going to execute the instructions",
    "start": "455830",
    "end": "460529"
  },
  {
    "text": "On here and the first thing that happens is that we execute instruction W",
    "start": "461830",
    "end": "467819"
  },
  {
    "text": "No problem",
    "start": "467890",
    "end": "468840"
  },
  {
    "text": "That's going to take certain amount of time to actually that's using the load store unit to execute it",
    "start": "468840",
    "end": "474810"
  },
  {
    "text": "These are being fetched and decoded and sort of executed by the different execution units we then execute the next instruction",
    "start": "474810",
    "end": "480750"
  },
  {
    "text": "which is",
    "start": "481660",
    "end": "483280"
  },
  {
    "text": "X and we couldn't execute this any earlier because the load store unit was being used to execute that one so no difference than what?",
    "start": "483280",
    "end": "489989"
  },
  {
    "text": "We had before we're using this one after the other we now come to",
    "start": "489990",
    "end": "493139"
  },
  {
    "text": "execute",
    "start": "493930",
    "end": "494949"
  },
  {
    "text": "The add instruction now we can't execute this any earlier than this point in time",
    "start": "494950",
    "end": "499080"
  },
  {
    "text": "Because this depends on the value of registers r0 and r1 which aren't set?",
    "start": "499540",
    "end": "503999"
  },
  {
    "text": "until this point so we need those two values so we can start doing",
    "start": "504370",
    "end": "508650"
  },
  {
    "text": "instruction why here now actually",
    "start": "509230",
    "end": "511259"
  },
  {
    "text": "It's an ADD it's not going to take as long as fetching things from memory because it's all inside the CPU so we can use",
    "start": "511450",
    "end": "516030"
  },
  {
    "text": "A smaller box and we can put instruction Y there and this depends on the value being fetched from there",
    "start": "516030",
    "end": "522119"
  },
  {
    "text": "And I'm just going to show this as an arrow here, but the next instruction load",
    "start": "522120",
    "end": "526830"
  },
  {
    "text": "r2 comma C",
    "start": "527860",
    "end": "529810"
  },
  {
    "text": "well",
    "start": "529810",
    "end": "530310"
  },
  {
    "text": "I doesn't depend on anything except the value in there Marie and our load/store units not being used",
    "start": "530310",
    "end": "535529"
  },
  {
    "text": "So if we build our CPU right? There's nothing to start that",
    "start": "535930",
    "end": "539099"
  },
  {
    "text": "Instruction being executed at the same time and that means that actually when we come to the next instruction",
    "start": "539860",
    "end": "546209"
  },
  {
    "text": "Which would be which will be the best instruction to execute next in this example. Let's go back to our program",
    "start": "546579",
    "end": "552329"
  },
  {
    "text": "We've executed instructions one to six and three already",
    "start": "552370",
    "end": "556349"
  },
  {
    "text": "That's w x y&z we've rewritten the mass let's put instruction seven here",
    "start": "556480",
    "end": "560639"
  },
  {
    "text": "What was instruction seven and this is now going to become?",
    "start": "560639",
    "end": "563488"
  },
  {
    "text": "I'm gonna have to use it's gonna become instruction a I'll hopefully remember to say instruction a but",
    "start": "563800",
    "end": "568529"
  },
  {
    "text": "You can guess the colonics are referring to a on its own is probably the variable if not is probably the instruction so we can",
    "start": "568660",
    "end": "574230"
  },
  {
    "text": "now execute",
    "start": "574230",
    "end": "575889"
  },
  {
    "text": "instruction a and again instruction a depends on two things",
    "start": "575889",
    "end": "580079"
  },
  {
    "text": "It depends on the value of R. 0 which is going to come from this instruction so we have to have that ready",
    "start": "580600",
    "end": "586920"
  },
  {
    "text": "But it also depends on the value of R",
    "start": "586990",
    "end": "588899"
  },
  {
    "text": "2 which is coming from this instruction so we have to have that ready as well so it can actually happen any point before",
    "start": "588899",
    "end": "595529"
  },
  {
    "text": "This point in time so this would be the LDR R 2 comma dot and this is the add R",
    "start": "596110",
    "end": "603930"
  },
  {
    "text": "0 and this is the next add, but again we can start trying to leave more the instructions because I okay well",
    "start": "604059",
    "end": "611609"
  },
  {
    "text": "That's what instruction for here at the same time. We'll call this instruction B",
    "start": "611610",
    "end": "616620"
  },
  {
    "text": "And so on we put that at that point we can execute",
    "start": "616620",
    "end": "619739"
  },
  {
    "text": "Instruction B at the same time as we do way and I'm really confusing myself with pens here and so again",
    "start": "619930",
    "end": "625589"
  },
  {
    "text": "We've saved some time because rather than having to execute that in the same thing we can do these two things at the same time",
    "start": "625750",
    "end": "632669"
  },
  {
    "text": "Now to be able to do this we need these instructions need to execute on different execution units we couldn't for example",
    "start": "633009",
    "end": "640259"
  },
  {
    "text": "Execute to add instructions at the same time because we haven't got to Al use well, though",
    "start": "641139",
    "end": "646919"
  },
  {
    "text": "There's no reason why you can build a CPU with two Al use if you look at modern",
    "start": "646920",
    "end": "650699"
  },
  {
    "text": "CPU designs from Intel AMD arm and cetera they all have often have multiple Al used or allow you to do just that",
    "start": "651069",
    "end": "657418"
  },
  {
    "text": "but because the different types we can execute them at the same time and the reason we can do that is because",
    "start": "658179",
    "end": "664109"
  },
  {
    "text": "They don't depend",
    "start": "664839",
    "end": "666149"
  },
  {
    "text": "on the results of one to work out the other so they're working on different things and they're using different parts of the CPU and",
    "start": "666150",
    "end": "673259"
  },
  {
    "text": "The CPU that enables you to do this is what's known as a superscalar",
    "start": "673750",
    "end": "677130"
  },
  {
    "text": "CPU because it can run multiple instructions at the same time will you continue doing this and we'd end up we execute instruction",
    "start": "677860",
    "end": "685409"
  },
  {
    "text": "B then we've got to execute instruction C",
    "start": "685780",
    "end": "688290"
  },
  {
    "text": "instruction D",
    "start": "688870",
    "end": "689589"
  },
  {
    "text": "uses a",
    "start": "689590",
    "end": "690190"
  },
  {
    "text": "Multiply and actually on a CPU probably got a separate execution unit which does and multiplies because you can actually do them faster that way",
    "start": "690190",
    "end": "696420"
  },
  {
    "text": "So you have a multiply unit as well so we can execute that multiply D up there",
    "start": "696520",
    "end": "702480"
  },
  {
    "text": "We think well okay?",
    "start": "702640",
    "end": "703590"
  },
  {
    "text": "Can we do the other at the same time well no because we need the result of that as well so we can then execute",
    "start": "703590",
    "end": "708600"
  },
  {
    "text": "the ad down here before finally, and it just fits on the paper like that so we can actually squash things up and",
    "start": "709120",
    "end": "716400"
  },
  {
    "text": "we're going to save some time because if you think about it you have the original order of the program and",
    "start": "716950",
    "end": "721350"
  },
  {
    "text": "Here's one. I made earlier",
    "start": "722530",
    "end": "724530"
  },
  {
    "text": "All right, or as in I'm just about to draw and Shawn will do some very clever",
    "start": "724780",
    "end": "729480"
  },
  {
    "text": "Cutting so even if we had a superscalar processor. We've only got one load store unit we've only got one",
    "start": "730150",
    "end": "736079"
  },
  {
    "text": "Al you really got one multiply unit we wouldn't have any opportunities with this program",
    "start": "736600",
    "end": "741808"
  },
  {
    "text": "To run two instructions at the same time so this version of the program would",
    "start": "742300",
    "end": "746909"
  },
  {
    "text": "Still take ten instructions this one still takes ten instructions, but with a superscalar processor we have the opportunity to sort of",
    "start": "747070",
    "end": "754140"
  },
  {
    "text": "execute two instructions at the same time because they use different bits of the CPU now you need to design the CPU to allow that",
    "start": "755020",
    "end": "760980"
  },
  {
    "text": "but that enables us to",
    "start": "761080",
    "end": "763080"
  },
  {
    "text": "Speed things up a little bit because while this is working to get the value for memory. We can execute some more",
    "start": "763630",
    "end": "769020"
  },
  {
    "text": "instructions",
    "start": "769900",
    "end": "771670"
  },
  {
    "text": "Now that's all very well and superscalar processors started to appear in",
    "start": "771670",
    "end": "775920"
  },
  {
    "text": "the mid 90s things like the six eight thousand and sixty the",
    "start": "776290",
    "end": "779819"
  },
  {
    "text": "Pentium I think was superscalar",
    "start": "780370",
    "end": "782010"
  },
  {
    "text": "But they require the code to be written in a way",
    "start": "782010",
    "end": "785220"
  },
  {
    "text": "That enables this to happen so this program wouldn't have been able to do anything",
    "start": "785680",
    "end": "788909"
  },
  {
    "text": "This one would but as we said when we were developing this we could work out which",
    "start": "789520",
    "end": "795810"
  },
  {
    "text": "Instructions we could move around to get that speed up based on",
    "start": "796150",
    "end": "799829"
  },
  {
    "text": "What those instructions depended on so this instruction?",
    "start": "800560",
    "end": "803229"
  },
  {
    "text": "We said what what six became why only depended on the values of R",
    "start": "803230",
    "end": "807519"
  },
  {
    "text": "0 and R 1 which has been set by instructions 1 & 2 so we can move that earlier",
    "start": "807520",
    "end": "812859"
  },
  {
    "text": "Without affecting anything in our program because it only depended on those 2 values",
    "start": "813170",
    "end": "817719"
  },
  {
    "text": "so we can either do this in the compiler or by hand if you write in the assembly yourself like we just did here or",
    "start": "817820",
    "end": "823150"
  },
  {
    "text": "It's possible to let the CPU work it out, and so what a modern CPU does what's called an out of water CPU is",
    "start": "824270",
    "end": "831609"
  },
  {
    "text": "Reorders the instructions without",
    "start": "833180",
    "end": "835570"
  },
  {
    "text": "supposedly breaking the rules of",
    "start": "836240",
    "end": "838240"
  },
  {
    "text": "What each instruction does so it'll still execute it as if it was written like this?",
    "start": "838520",
    "end": "842919"
  },
  {
    "text": "And it won't change break any of the rules of that",
    "start": "842920",
    "end": "845320"
  },
  {
    "text": "but it will say well hang on it will spot that this instruction could happen earlier and",
    "start": "845870",
    "end": "849729"
  },
  {
    "text": "So move it earlier to gain some of that parallelism in fact then execute them together at the same time",
    "start": "849830",
    "end": "855729"
  },
  {
    "text": "And that works generally get well",
    "start": "856010",
    "end": "857830"
  },
  {
    "text": "But as we saw with things like Spector and meltdown if you allow things to happen too far earlier and start doing what's called speculative",
    "start": "857830",
    "end": "865299"
  },
  {
    "text": "Evaluation where you say okay?",
    "start": "865610",
    "end": "867610"
  },
  {
    "text": "I've got the stuff. I need to execute it now",
    "start": "867710",
    "end": "870249"
  },
  {
    "text": "I don't if I need the result but I might do so I'll execute it anyway, and then if I need it",
    "start": "870250",
    "end": "875229"
  },
  {
    "text": "I've already done it and if I don't need it while I was still waiting for this to come in anyway",
    "start": "875230",
    "end": "879219"
  },
  {
    "text": "So it doesn't matter that I've done it. I've not lost",
    "start": "879220",
    "end": "881500"
  },
  {
    "text": "Any time well",
    "start": "882050",
    "end": "883269"
  },
  {
    "text": "Then it's turned out that you can have sort of side channels where you can sort of see that that's happened or not",
    "start": "883270",
    "end": "888549"
  },
  {
    "text": "Which is caused a few issues with computing?",
    "start": "888890",
    "end": "891549"
  },
  {
    "text": "It goes along here like this",
    "start": "892370",
    "end": "894370"
  },
  {
    "text": "Intersects the curve somewhere else flips over and it's over here, so this is for G",
    "start": "894530",
    "end": "898389"
  },
  {
    "text": "Now we won't look at any more right the edge of a formula for this is just",
    "start": "898390",
    "end": "902020"
  },
  {
    "text": "mathematics to do with lines and the tangent of this curve",
    "start": "902150",
    "end": "904419"
  },
  {
    "text": "It's actually not very complicated the point is that what we're doing is by multiplying G",
    "start": "904420",
    "end": "908620"
  }
]