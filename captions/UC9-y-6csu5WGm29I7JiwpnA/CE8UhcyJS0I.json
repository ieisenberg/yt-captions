[
  {
    "text": "The video that I want to do today is a\ndirect follow-up of the one I did a few",
    "start": "0",
    "end": "6359"
  },
  {
    "text": "weeks ago whichh Sean so what misguidedly\nentitled \"The Most Difficult Program to",
    "start": "6359",
    "end": "12150"
  },
  {
    "text": "Compute?\". It was, of course,\nall about the Ackermann function. Today I",
    "start": "12150",
    "end": "17310"
  },
  {
    "text": "want to show to you the Busy Beaver\nproblem - or the Busy Beaver game, and it",
    "start": "17310",
    "end": "22590"
  },
  {
    "text": "is far worse than Ackerman [in its behaviour].\nIt was invented by a gentleman called Tibor",
    "start": "22590",
    "end": "27900"
  },
  {
    "text": "Rado, in 1962. What he, in his later years,\ntook on, was to teach beginners about",
    "start": "27900",
    "end": "36540"
  },
  {
    "text": "Turing machines. Now many of you on the\nSean and Brady wish list of topics to be",
    "start": "36540",
    "end": "43890"
  },
  {
    "text": "covered said: \"I want to know about Turing\nMachines - I want to know about",
    "start": "43890",
    "end": "46440"
  },
  {
    "text": "Undecidability\". So, this is a lovely way\nto pull it all in because this thing,",
    "start": "46440",
    "end": "54360"
  },
  {
    "text": "this program, that behaves even worse\nthan Ackermann, depends, and is utterly",
    "start": "54360",
    "end": "59670"
  },
  {
    "text": "related to, the idea of a Turing machine.\nFor those of you want just a bit more",
    "start": "59670",
    "end": "65309"
  },
  {
    "text": "detail about what's going on at the\nTuring Machine level and exactly how",
    "start": "65309",
    "end": "71548"
  },
  {
    "text": "Tibor Rado developed a particular form of\nTuring machine suitable for this game,",
    "start": "71549",
    "end": "76080"
  },
  {
    "text": "then I'm going to refer you to this short \nintroductory movie [Computerphile: Turing Machine Primer]\nSo, let's look",
    "start": "76080",
    "end": "81270"
  },
  {
    "text": "at the particular formulation of a\nTuring Machine that Tibor Rado",
    "start": "81270",
    "end": "85079"
  },
  {
    "text": "formulated as a game, which you can play\nwith your computer program and in fact",
    "start": "85080",
    "end": "91770"
  },
  {
    "text": "there's Web pages devoted to this. You can\njoin in on the Busy Beaver community and",
    "start": "91770",
    "end": "96868"
  },
  {
    "text": "see if you can find a Beaver that's even\nbusier than the ones currently known.",
    "start": "96869",
    "end": "102270"
  },
  {
    "text": "But be warned. As you want to go up and up and up \nin size of this problem it [the computation load] goes",
    "start": "102270",
    "end": "107460"
  },
  {
    "text": "up worse than super exponentially! This\nis the single state Turing machine for",
    "start": "107460",
    "end": "115380"
  },
  {
    "text": "the [easiest] Busy Beaver problem. What the heck \nis this Busy Beaver problem? Busy Beaver",
    "start": "115380",
    "end": "119880"
  },
  {
    "text": "asks what is the maximum number of 1s\nthat get printed on your tape, for your",
    "start": "119880",
    "end": "127828"
  },
  {
    "text": "given Turing Machine, when it halts? \nNow, I've got to add that",
    "start": "127829",
    "end": "133650"
  },
  {
    "text": "to the end because, as you'll discover,\nthere are some - there are lots! - of rogue",
    "start": "133650",
    "end": "138540"
  },
  {
    "text": "Turing Machines which will go berserk,\neither printing endless 1s or even",
    "start": "138540",
    "end": "143790"
  },
  {
    "text": "overwriting them with endless 0s, and\ngoing either to the right, or to the left.",
    "start": "143790",
    "end": "147959"
  },
  {
    "text": "So - these well-behaved ones - we want them\nto halt and stop and just leave",
    "start": "147960",
    "end": "152670"
  },
  {
    "text": "a big, big tape with lots of 1s and 0s on\nit. And it's called Busy Beaver because",
    "start": "152670",
    "end": "156870"
  },
  {
    "text": "this program is just going bananas,\nwalking up and down the tape, writing",
    "start": "156870",
    "end": "161400"
  },
  {
    "text": "1s and 0s, seemingly arbitrarily, but\nin accordance with the program",
    "start": "161400",
    "end": "166709"
  },
  {
    "text": "instructions on the cards. And you're\njust saying: \"How many 1s do I end up",
    "start": "166709",
    "end": "170580"
  },
  {
    "text": "with?\".  What's the best or worst I can do?\nWell, I think this will become a bit more",
    "start": "170580",
    "end": "175500"
  },
  {
    "text": "alive to you, now, if we take a real,\nactual example of a single-card Turing",
    "start": "175500",
    "end": "181980"
  },
  {
    "text": "Machine for Busy Beaver. So we stick our\nread/write head in the middle of this",
    "start": "181980",
    "end": "185879"
  },
  {
    "text": "tape to start off with. There it is. And\nthis is card 1. It is the only card",
    "start": "185880",
    "end": "194850"
  },
  {
    "text": "available to us because this is a one-card \nTuring Machine. [The] rule is, your start",
    "start": "194850",
    "end": "200220"
  },
  {
    "text": "card is always card 1. The first\nthing you say is: \"read a symbol\". So you",
    "start": "200220",
    "end": "204630"
  },
  {
    "text": "read a zero. OK? What does the\ninstruction card tell me to do? It says:",
    "start": "204630",
    "end": "209010"
  },
  {
    "text": "\"overwrite it with a 1\" Here's the overwritten 1.\n0, remember, means \"move to the left\" that",
    "start": "209010",
    "end": "215790"
  },
  {
    "text": "makes 0. So you move the head to here: 1.\nThat means \"go back to instruction card 1\".",
    "start": "215790",
    "end": "225480"
  },
  {
    "text": "I'm already in instruction 1, so what I\ndo is go back in there, like that, but now,",
    "start": "225480",
    "end": "232830"
  },
  {
    "text": "again, you say: \"Read what's under the head\".\n- well the heads moved to here - but you're",
    "start": "232830",
    "end": "237510"
  },
  {
    "text": "under another 0 now. So you say OK,\noverwrite that 0 with a 1, shift to the",
    "start": "237510",
    "end": "245370"
  },
  {
    "text": "left because that's what the 0 means.\nOh blimey! move the head here. Go",
    "start": "245370",
    "end": "249000"
  },
  {
    "text": "back to state 1 - [but] we're already in \nstate 1, go back and do it again. You can see,",
    "start": "249000",
    "end": "253049"
  },
  {
    "text": "straight away what's going to happen\nhere: I'm going to whizz off to the left",
    "start": "253049",
    "end": "256079"
  },
  {
    "text": "writing 1s and it will never, never\nstop. So here's the first example then",
    "start": "256079",
    "end": "262780"
  },
  {
    "text": "of what I referred to in the previous\nvideo. I told you there were things",
    "start": "262780",
    "end": "267280"
  },
  {
    "text": "called recursively enumerable programs\nthat sometimes stop and sometimes just",
    "start": "267280",
    "end": "271750"
  },
  {
    "text": "whizzed into loops and went on for ever.\nWell, it's a nice simple example of it",
    "start": "271750",
    "end": "275860"
  },
  {
    "text": "given that, right at the start, you\nprobably don't know whether your given",
    "start": "275860",
    "end": "279639"
  },
  {
    "text": "program is going to whizz left or\nright, or whether it's just going to mess",
    "start": "279640",
    "end": "282790"
  },
  {
    "text": "about in the middle. Start it in the\nmiddle. Give it enough space to go left",
    "start": "282790",
    "end": "286870"
  },
  {
    "text": "enough space to go right. But the\nrules say, in principle, if it needs",
    "start": "286870",
    "end": "289870"
  },
  {
    "text": "infinite tape give it enough. Now a lot\nof the art of this kind of programming",
    "start": "289870",
    "end": "297370"
  },
  {
    "text": "is to say: \"Ah! but is it looping\"? It's\npointless giving it infinite tape if",
    "start": "297370",
    "end": "302110"
  },
  {
    "text": "it's just going to loop and loop and\nloop, and not do any different thing,",
    "start": "302110",
    "end": "304990"
  },
  {
    "text": "forever. And yeah, very very clearly this\none's looping. So, we've done a one-card",
    "start": "304990",
    "end": "311229"
  },
  {
    "text": "Turing Machine, Busy Beaver attempt, here\nand [have] just seen how easy it is to get into",
    "start": "311230",
    "end": "318340"
  },
  {
    "text": "a loop and spin off doing zillions of\n1s that will never end. And you might",
    "start": "318340",
    "end": "322930"
  },
  {
    "text": "say: \"Oh! that's the idea then is it? A sort\nof infinite Busy Beaver: it just spews",
    "start": "322930",
    "end": "326800"
  },
  {
    "text": "out 1s for ever?\"\nAnd, unfortunately, the rules of the games they",
    "start": "326800",
    "end": "329590"
  },
  {
    "text": "say: \"No, that doesn't count it's got to halt!\"\nThere's got to be a finite number of",
    "start": "329590",
    "end": "334150"
  },
  {
    "text": "1s that you can count. 1s that just\ngo on forever don't count. So, you need to",
    "start": "334150",
    "end": "338770"
  },
  {
    "text": "get into a 'halt' state, somehow or\nanother, and have a finite number of 1s to",
    "start": "338770",
    "end": "345039"
  },
  {
    "text": "count up. So, let's do one that is still a\nsingle-card candidate for a Busy Beaver",
    "start": "345040",
    "end": "350620"
  },
  {
    "text": "Turing Machine, but one that doesn't loop\nindefinitely. This time I'm going to make",
    "start": "350620",
    "end": "355870"
  },
  {
    "text": "it be 0 - if I read a zero then my\nactions are 1 1 0. Actually some of you",
    "start": "355870",
    "end": "364960"
  },
  {
    "text": "will have spotted already that in a one-card \nset up like this, given that you",
    "start": "364960",
    "end": "370240"
  },
  {
    "text": "move the head off to the left or the\nright, all you ever encounter is zeros,",
    "start": "370240",
    "end": "374380"
  },
  {
    "text": "you are not going to get into a stage of\never reading a 1 because you've ",
    "start": "374380",
    "end": "379390"
  },
  {
    "text": "only got one instruction. And you either\nkeep re-obeying it, as we saw last time",
    "start": "379390",
    "end": "383770"
  },
  {
    "text": "when you loop back into itself, or it's a\none-off thing and it does one thing and",
    "start": "383770",
    "end": "388210"
  },
  {
    "text": "stops. And in this particular case, well,\nI'll put 1 1 0 here",
    "start": "388210",
    "end": "393289"
  },
  {
    "text": "for the 1 case. We won't need that\nbecause - look what happens - if I've read a",
    "start": "393290",
    "end": "397580"
  },
  {
    "text": "0, which I have there, what do I then\ndo? The answer is I overwrite it with a",
    "start": "397580",
    "end": "403280"
  },
  {
    "text": "1; the next 1 to the right of that, in\nthe instruction layout, says shift right.",
    "start": "403280",
    "end": "409400"
  },
  {
    "text": "Remember a 0 at that position is\nshift left; this 1 is shift right. So I",
    "start": "409400",
    "end": "413570"
  },
  {
    "text": "shift the read/write head to the right.\nbut then C0 is the Halt state. Wow! Bound",
    "start": "413570",
    "end": "422450"
  },
  {
    "text": "to win an award! It reads a zero it\nover-writes it with a 1; it shifts one",
    "start": "422450",
    "end": "428030"
  },
  {
    "text": "place to the right and then stops.\nWonderful extremes isn't it? It either",
    "start": "428030",
    "end": "432080"
  },
  {
    "text": "whizzes off and never stops writing\n1s or else it does precisely one 1 and",
    "start": "432080",
    "end": "436580"
  },
  {
    "text": "then stops, and says 'done it'! Let's just\ndo a bit of mental arithmetic here, it's",
    "start": "436580",
    "end": "440870"
  },
  {
    "text": "not too difficult, in this case. You've\ngot 0 or a 1 as the things you might be",
    "start": "440870",
    "end": "445040"
  },
  {
    "text": "reading, but here you've got a triple of\nbinary digits: it's either 0 or !",
    "start": "445040",
    "end": "450320"
  },
  {
    "text": "that you read; it's either 0 or 1 that\nyou shift -  left or right. And it's",
    "start": "450320",
    "end": "454640"
  },
  {
    "text": "either the Halt state or back into 1,\nwhich is where you go. Right? So, Sean your",
    "start": "454640",
    "end": "459680"
  },
  {
    "text": "starter for ten: two to the power 3 is 8.\nYou've got that in the zero case, and in",
    "start": "459680",
    "end": "466820"
  },
  {
    "text": "general you've also got to say: \"Well, I've\ngot 8 possibilities for the 1 case\". So",
    "start": "466820",
    "end": "471080"
  },
  {
    "text": "8 times 8 is 64. There are 64 one card [Busy Beaver]\nTuring Machines but there's only about 4",
    "start": "471080",
    "end": "480379"
  },
  {
    "text": "possible behaviours; you either zoom off to the\nleft, printing and overwriting the cells",
    "start": "480380",
    "end": "485690"
  },
  {
    "text": "with either 1s or 0s. Or you\ncan write a 1; shift to the left and stop;",
    "start": "485690",
    "end": "491900"
  },
  {
    "text": "1, shift to the right and stop or\noverwrite a 0 with a 0, shift to",
    "start": "491900",
    "end": "497240"
  },
  {
    "text": "the left and stop, or shift to the right\nand stop. Not exactly thrilling! But since",
    "start": "497240",
    "end": "501800"
  },
  {
    "text": "the aim of the Busy Beaver game is how many 1s",
    "start": "501800",
    "end": "506330"
  },
  {
    "text": "can you write, regardless of which of the\n64 cards you choose - and you must try them",
    "start": "506330",
    "end": "511729"
  },
  {
    "text": "all out - the answer is you never get\nbetter than one. You write one 1. Rado",
    "start": "511730",
    "end": "516349"
  },
  {
    "text": "in his paper, calls this e score Sigma (Greek\nSigma). The score for a one-card busy",
    "start": "516349",
    "end": "521690"
  },
  {
    "text": "beaver the best you can do is 1.\nRemember these Turing Machines are just",
    "start": "521690",
    "end": "525110"
  },
  {
    "text": "made up of sets of cards, in order. that's all.",
    "start": "525110",
    "end": "529700"
  },
  {
    "text": "So, for the order 2 - you're going to have a\nc1 and a c2. If you're having a c2",
    "start": "529700",
    "end": "536150"
  },
  {
    "text": "possibility - a two-card thing - then that\nfinal column could be 0 to Halt it;",
    "start": "536150",
    "end": "543290"
  },
  {
    "text": "1 to go back into yourself or 2 to\ngo to the other card.",
    "start": "543290",
    "end": "547940"
  },
  {
    "text": "So, you've got three possibilities in\nthat final column now. So, it's not like 2",
    "start": "547940",
    "end": "552620"
  },
  {
    "text": "times 2 times 2. It's 2 times 2 times 3\nAnyway, you work it all out for the two-",
    "start": "552620",
    "end": "558260"
  },
  {
    "text": "card case, would you believe there are\n20,736 Turing Machines ...\n>> Sean: How many?\n>> DFB:  20,736",
    "start": "558260",
    "end": "571670"
  },
  {
    "text": "This number - which is just: \"How many\nTuring Machines have you got to look at\"?",
    "start": "571670",
    "end": "575630"
  },
  {
    "text": "to see which behaves the best in\nprinting out lots of 1s. This only goes",
    "start": "575630",
    "end": "580610"
  },
  {
    "text": "up exponentially - this number - this isn't\nbad. But each one of those machines can",
    "start": "580610",
    "end": "585769"
  },
  {
    "text": "behave worse than super-exponentially. So\nRado's number for how many Turing machines -",
    "start": "585770",
    "end": "592010"
  },
  {
    "text": "you can seat in his paper. I'll leave you\nto work out for yourself why this is",
    "start": "592010",
    "end": "595610"
  },
  {
    "text": "true the number of Turing Machines, let's\ncall it N(n) n is [4 x (n + 1)] ^ 2n",
    "start": "595610",
    "end": "602510"
  },
  {
    "text": "Let's see if that works. Iif I put in 1 here for n",
    "start": "602510",
    "end": "609950"
  },
  {
    "text": "Right? 1 plus 1 is 2. Two 4s are 8. 8 to the power\nof 2 x 1.  2 x 1 is 2. 8 squared is 64.",
    "start": "609950",
    "end": "618430"
  },
  {
    "text": "Right? What about if I put in n is 2. 2\nplus 1 is 3. 3 x 4 is 12.  12 to the",
    "start": "618430",
    "end": "625550"
  },
  {
    "text": "power of 4, 12 to the power of 4 is 20,736",
    "start": "625550",
    "end": "631640"
  },
  {
    "text": "So your first job is to enumerate all\nthose Turing Machines just get all those",
    "start": "631640",
    "end": "637070"
  },
  {
    "text": "possible two-card combinations that make\n20,736 different possibilities and",
    "start": "637070",
    "end": "644060"
  },
  {
    "text": "you can start to weed out the rubbish\nstraight away. You can clearly say, first",
    "start": "644060",
    "end": "648350"
  },
  {
    "text": "of all, if your chosen machine doesn't\nhave a Halt state somewhere in it then",
    "start": "648350",
    "end": "655040"
  },
  {
    "text": "it's never ever going to stop and it\ncan't be a contender.",
    "start": "655040",
    "end": "658579"
  },
  {
    "text": "So you can rule out all the ones that\ndon't have a zero somewhere in a",
    "start": "658580",
    "end": "662630"
  },
  {
    "text": "right-hand column. You can soon get rid\nof those - cut it down a little bit.",
    "start": "662630",
    "end": "665779"
  },
  {
    "text": "But then you have to start running the\nTuring Machines to see - like I've done",
    "start": "665779",
    "end": "670160"
  },
  {
    "text": "here - do they halt? If they halt, how many\n1s have they written by the time",
    "start": "670160",
    "end": "675440"
  },
  {
    "text": "they've halted? It tends to be the case\nthat all the 1s that get written",
    "start": "675440",
    "end": "680089"
  },
  {
    "text": "are pretty well bunched together, but the\nrules of the game say that's not",
    "start": "680089",
    "end": "684140"
  },
  {
    "text": "absolutely essential - just start at the\nfar left with the earliest 1, read",
    "start": "684140",
    "end": "688310"
  },
  {
    "text": "across to the right and count up the\nnumber of ones you've got. And that's your",
    "start": "688310",
    "end": "691579"
  },
  {
    "text": "score. But it must halt. It mustn't be in\npart of a \"I'm going on for ever\", sort of loop.",
    "start": "691579",
    "end": "696889"
  },
  {
    "text": "There are some candidates for best\nBusy Beaver of the two-card Turing",
    "start": "696890",
    "end": "703670"
  },
  {
    "text": "Machines what's the maximum number of\nones that they can print out?  4.",
    "start": "703670",
    "end": "711200"
  },
  {
    "text": "Not very good. What's all the fuss about?\nWhen you get on to three-card",
    "start": "711200",
    "end": "716240"
  },
  {
    "text": "Turing Machines, how many of these are\nthere on your shortlist?   16,777,216",
    "start": "716240",
    "end": "725620"
  },
  {
    "text": "three-card Turing Machines. What's the\nbest score you can get off a three card",
    "start": "725620",
    "end": "730339"
  },
  {
    "text": "machine? Still only 6. Doesn't look very\nominous or dreadful at this stage.",
    "start": "730339",
    "end": "736459"
  },
  {
    "text": "Four-card ones? How many of those are there?\nNow I've gone up to about four-card ones",
    "start": "736459",
    "end": "741350"
  },
  {
    "text": "in the program I'll give you. The answer.\nIt's 25.6 trillion",
    "start": "741350",
    "end": "746779"
  },
  {
    "text": "possible Turing Machines, all of which\nhave to be run and their behaviour",
    "start": "746779",
    "end": "751820"
  },
  {
    "text": "investigated. or they have to be\neliminate. These are four-card machines.",
    "start": "751820",
    "end": "756279"
  },
  {
    "text": "What's the best score you can get off\nthose thirteen - and this goes worse than",
    "start": "756279",
    "end": "763100"
  },
  {
    "text": "Ackermann - yeah this is the false dawn. It\njust goes berserk now. When you come on",
    "start": "763100",
    "end": "769519"
  },
  {
    "text": "to five-card Busy Beavers which is where\nthis huge research still going on, the",
    "start": "769520",
    "end": "776120"
  },
  {
    "text": "best score, so far, for a five-card Turing\nMachine I have not worked out how many",
    "start": "776120",
    "end": "781490"
  },
  {
    "text": "of those are are it's going to be huge,\nall of which have to be investigated. The",
    "start": "781490",
    "end": "786170"
  },
  {
    "text": "best score, for a five card so far, is 4098.",
    "start": "786170",
    "end": "791220"
  },
  {
    "text": "It's coming up to 25 years ago that that \nnumber was discovered. ",
    "start": "791220",
    "end": "797878"
  },
  {
    "text": "4098 is the best yet, So, I hear you say, what\nare they messing about at? They've had 25 years",
    "start": "797879",
    "end": "804300"
  },
  {
    "text": "and all right there's a few trillion,\nquadrillion?, Turing Machines to be",
    "start": "804300",
    "end": "808110"
  },
  {
    "text": "investigated but all the obvious rubbish\nwould have been weeded out by now? I may",
    "start": "808110",
    "end": "813569"
  },
  {
    "text": "say that the German researchers who\ndiscovered this number did have access",
    "start": "813569",
    "end": "819660"
  },
  {
    "text": "to a supercomputer - it does help!\nWhat's gone wrong? Why isn't there a",
    "start": "819660",
    "end": "824370"
  },
  {
    "text": "better result and if you look on the\nWikipedia page for this you'll find the",
    "start": "824370",
    "end": "827819"
  },
  {
    "text": "answer. The answer is that there are\n40 candidates, still running, which might",
    "start": "827819",
    "end": "835560"
  },
  {
    "text": "produce an even better answer than 4098.\nAnd you say: \"But surely the darn things",
    "start": "835560",
    "end": "841709"
  },
  {
    "text": "are either discernibly looping or else\nthey've stopped\"? No - it's really horrible.",
    "start": "841709",
    "end": "845759"
  },
  {
    "text": "This is the nasty part of it you can get\nTuring Machines where you can't tell",
    "start": "845759",
    "end": "850050"
  },
  {
    "text": "whether they're looping or not. They\nconsume a lot of tape and then they come",
    "start": "850050",
    "end": "854160"
  },
  {
    "text": "back and they overwrite bits of the tape\nand y' know ... And you think: \"Have I seen",
    "start": "854160",
    "end": "859620"
  },
  {
    "text": "that pattern before?\" In the case that I\ndid for the 1-state Turing Machine we're",
    "start": "859620",
    "end": "864480"
  },
  {
    "text": "just going:  1 1 1 1 1 1 over and over. It takes no\ngenius to say \"Iit's looping and it's",
    "start": "864480",
    "end": "869040"
  },
  {
    "text": "doing nothing but reproducing 1s\". But you\ncan imagine that as the numbers go up",
    "start": "869040",
    "end": "873980"
  },
  {
    "text": "you could get very, very long cyclic\nperiodicity, with a periodicity of 20",
    "start": "873980",
    "end": "880800"
  },
  {
    "text": "million (say) or something like this. Tibor\nRado and his student were the people who",
    "start": "880800",
    "end": "886620"
  },
  {
    "text": "worked out that for a four-card machine\n13 was the best result you could get. But",
    "start": "886620",
    "end": "892110"
  },
  {
    "text": "in getting that result they still had to\nlook at a handful of rogue machines where they",
    "start": "892110",
    "end": "898079"
  },
  {
    "text": "weren't sure whether they stopped or not.\nSome of them they could prove",
    "start": "898079",
    "end": "900959"
  },
  {
    "text": "programmatically were definitely looping.\nOthers they could use human inference to",
    "start": "900959",
    "end": "906628"
  },
  {
    "text": "argue: \"Yes, that is looping, I can show you why?\"",
    "start": "906629",
    "end": "909209"
  },
  {
    "text": "So, yeah, 13 is definitely correct [for the 4-card case]\nBut for the five-card case, who knows?",
    "start": "909209",
    "end": "915360"
  },
  {
    "text": "Join the Busy Beaver club. Get your own\nsupercomputer! Do the work!",
    "start": "915360",
    "end": "920430"
  },
  {
    "text": "And somebody out there has gone on to\norder six. And it is reckoned that the",
    "start": "920430",
    "end": "925610"
  },
  {
    "text": "minimum possible score for an order six\nBusy Beaver will be of the order 10 ^ 10,500",
    "start": "925610",
    "end": "935060"
  },
  {
    "text": "Now that's getting very close in size to",
    "start": "935060",
    "end": "939690"
  },
  {
    "text": "ackermann(4, 2). Y'know it to two to the  \nsixty-something thousand. Nobody knows what the",
    "start": "939690",
    "end": "946080"
  },
  {
    "text": "right score is. So can you see that's\nalready, by order five or six, you're",
    "start": "946080",
    "end": "950790"
  },
  {
    "text": "getting into Ackermann-size numbers. And\none of the things shown on the Wikipedia",
    "start": "950790",
    "end": "956220"
  },
  {
    "text": "page, which will delight you, is that for\nall sufficient n - and this n is not very big -",
    "start": "956220",
    "end": "964009"
  },
  {
    "text": "Busy Beaver numbers will always outrank\nAckermann numbers. And the reason for that",
    "start": "964010",
    "end": "969870"
  },
  {
    "text": "is that, again in the literature which\nyou can look up for yourself, the reason",
    "start": "969870",
    "end": "974790"
  },
  {
    "text": "is that the Busy Beaver can be shown to\ngrow faster than any computable function.",
    "start": "974790",
    "end": "981750"
  },
  {
    "text": "It doesn't matter what you put in there\nbut, if it's a computable function that",
    "start": "981750",
    "end": "985830"
  },
  {
    "text": "has an answer, Busy Beaver can be shown\nto grow faster than that in the long run.",
    "start": "985830",
    "end": "991260"
  },
  {
    "text": "It may not do so for small n,   but\neventually it'll overtake it and go",
    "start": "991260",
    "end": "996810"
  },
  {
    "text": "completely mad. So, yes, the answer to the\nhorrible question is: \"Are you telling me",
    "start": "996810",
    "end": "1001400"
  },
  {
    "text": "this thing gives you even bigger numbers than\nAckermann does? Yes, it does. Yes it gets ",
    "start": "1001400",
    "end": "1005780"
  },
  {
    "text": "effortlessly bigger.\nSome people say; \" I don't believe all the",
    "start": "1005780",
    "end": "1011120"
  },
  {
    "text": "stuff about 'recursively enumerable' -\nsometimes it can, y' know, sometimes this",
    "start": "1011120",
    "end": "1015260"
  },
  {
    "text": "machine can stop and give you an answer\nand sometimes it just whizzes around",
    "start": "1015260",
    "end": "1019130"
  },
  {
    "text": "forever. Well here you've got it in front\nof you. And it really is not",
    "start": "1019130",
    "end": "1024880"
  },
  {
    "text": "terrifically useful. Except it's here as\na teaching example of saying \"It may seem",
    "start": "1024880",
    "end": "1032089"
  },
  {
    "text": "pointless but this is the worst can\nhappen with a computer program\". You set,",
    "start": "1032089",
    "end": "1036589"
  },
  {
    "text": "on the face of it, what seems to be a\nperfectly straightforward thing: \"Run this",
    "start": "1036589",
    "end": "1041990"
  },
  {
    "text": "Turing Machine, hope it halts and then\ntell me how many 1s it prints out.",
    "start": "1041990",
    "end": "1046100"
  },
  {
    "text": "But behind that is a huge amount of\nillustration of theory. You think:",
    "start": "1046100",
    "end": "1052549"
  },
  {
    "text": "that's going to be no worse than super\nexponential even when it explodes and",
    "start": "1052550",
    "end": "1056480"
  },
  {
    "text": "takes off\". But  this one rockets up far faster\nthan Ackermann and very often you will",
    "start": "1056480",
    "end": "1063860"
  },
  {
    "text": "say: \"If problems are badly behaved they\nare either super-exponential or they may",
    "start": "1063860",
    "end": "1069110"
  },
  {
    "text": "be even worse - they may actually be\nundecidable\". And this is what you are",
    "start": "1069110",
    "end": "1073880"
  },
  {
    "text": "saying in this thing here ...",
    "start": "1073880",
    "end": "1077410"
  }
]