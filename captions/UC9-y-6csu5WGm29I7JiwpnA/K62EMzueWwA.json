[
  {
    "start": "0",
    "end": "18000"
  },
  {
    "text": "so I thought today we would look at the",
    "start": "0",
    "end": "1760"
  },
  {
    "text": "topic of optimization it's one thing",
    "start": "1760",
    "end": "4440"
  },
  {
    "text": "that's it's been around in computer",
    "start": "4440",
    "end": "5960"
  },
  {
    "text": "science for years and I'm not talking",
    "start": "5960",
    "end": "7960"
  },
  {
    "text": "about the mathematical optimization that",
    "start": "7960",
    "end": "10440"
  },
  {
    "text": "um people do but I'm talking about",
    "start": "10440",
    "end": "12360"
  },
  {
    "text": "making your",
    "start": "12360",
    "end": "13960"
  },
  {
    "text": "code",
    "start": "13960",
    "end": "16960"
  },
  {
    "text": "optimal that might sound like I've",
    "start": "17320",
    "end": "19279"
  },
  {
    "start": "18000",
    "end": "90000"
  },
  {
    "text": "defined optimization in terms of itself",
    "start": "19279",
    "end": "21080"
  },
  {
    "text": "and actually there's there's a point",
    "start": "21080",
    "end": "22439"
  },
  {
    "text": "there and so the a says optimization is",
    "start": "22439",
    "end": "25199"
  },
  {
    "text": "the action or process of making the best",
    "start": "25199",
    "end": "27320"
  },
  {
    "text": "of something also the action or process",
    "start": "27320",
    "end": "29759"
  },
  {
    "text": "of rendering optimal the state or",
    "start": "29759",
    "end": "32360"
  },
  {
    "text": "condition of being optimal and that is",
    "start": "32360",
    "end": "34360"
  },
  {
    "text": "really what we're going to be talking",
    "start": "34360",
    "end": "35920"
  },
  {
    "text": "about today is how can we make our",
    "start": "35920",
    "end": "37559"
  },
  {
    "text": "computer programs when we write programs",
    "start": "37559",
    "end": "40120"
  },
  {
    "text": "the best computer program but there's a",
    "start": "40120",
    "end": "43280"
  },
  {
    "text": "question we have to ask first what are",
    "start": "43280",
    "end": "45840"
  },
  {
    "text": "we trying to optimize for what are we",
    "start": "45840",
    "end": "48719"
  },
  {
    "text": "trying to make it the best of do we want",
    "start": "48719",
    "end": "52039"
  },
  {
    "text": "it to be as fast as possible or do we",
    "start": "52039",
    "end": "54960"
  },
  {
    "text": "want to make it use the minimal amount",
    "start": "54960",
    "end": "56320"
  },
  {
    "text": "of memory in which case we're optimizing",
    "start": "56320",
    "end": "58079"
  },
  {
    "text": "for memory size or these days we might",
    "start": "58079",
    "end": "60440"
  },
  {
    "text": "even want to consider are we optimizing",
    "start": "60440",
    "end": "62440"
  },
  {
    "text": "for power usage if we're running on",
    "start": "62440",
    "end": "63920"
  },
  {
    "text": "something like a mobile phone or a",
    "start": "63920",
    "end": "65560"
  },
  {
    "text": "battery powered laptop we may want to",
    "start": "65560",
    "end": "67680"
  },
  {
    "text": "write our software so it uses as little",
    "start": "67680",
    "end": "69479"
  },
  {
    "text": "power as possible at the expense of",
    "start": "69479",
    "end": "72280"
  },
  {
    "text": "speed or memory usage when we optimize",
    "start": "72280",
    "end": "74720"
  },
  {
    "text": "something we're going to have to choose",
    "start": "74720",
    "end": "76520"
  },
  {
    "text": "whether we're more interested in the",
    "start": "76520",
    "end": "77759"
  },
  {
    "text": "speed that it takes to execute or",
    "start": "77759",
    "end": "79320"
  },
  {
    "text": "whether we're more interested in the",
    "start": "79320",
    "end": "80079"
  },
  {
    "text": "amount of memory usage or the power",
    "start": "80079",
    "end": "81640"
  },
  {
    "text": "usage so how do we go about optimizing",
    "start": "81640",
    "end": "83960"
  },
  {
    "text": "our software well the first thing to say",
    "start": "83960",
    "end": "86040"
  },
  {
    "text": "is that we don't no that's simple end",
    "start": "86040",
    "end": "88640"
  },
  {
    "text": "the video we don't",
    "start": "88640",
    "end": "90880"
  },
  {
    "start": "90000",
    "end": "231000"
  },
  {
    "text": "I may be joking there but probably the",
    "start": "90880",
    "end": "92280"
  },
  {
    "text": "most helpful statement ever said about",
    "start": "92280",
    "end": "93920"
  },
  {
    "text": "optimization with Don can in a paper",
    "start": "93920",
    "end": "96360"
  },
  {
    "text": "many years ago and he said premature",
    "start": "96360",
    "end": "98000"
  },
  {
    "text": "optimization is the root of all evil and",
    "start": "98000",
    "end": "100520"
  },
  {
    "text": "actually I think that makes a really",
    "start": "100520",
    "end": "101680"
  },
  {
    "text": "good point there's no point optimizing a",
    "start": "101680",
    "end": "103520"
  },
  {
    "text": "bit of code if it's not going to give us",
    "start": "103520",
    "end": "105439"
  },
  {
    "text": "a benefit when the program runs overall",
    "start": "105439",
    "end": "107920"
  },
  {
    "text": "so really we don't want to optimize our",
    "start": "107920",
    "end": "109840"
  },
  {
    "text": "program at all we just want to sit and",
    "start": "109840",
    "end": "111000"
  },
  {
    "text": "write our program and get a version that",
    "start": "111000",
    "end": "113200"
  },
  {
    "text": "works not worrying about the",
    "start": "113200",
    "end": "114600"
  },
  {
    "text": "optimization that's the first thing you",
    "start": "114600",
    "end": "115960"
  },
  {
    "text": "want to do when writing software writing",
    "start": "115960",
    "end": "117880"
  },
  {
    "text": "optimized software just get a version",
    "start": "117880",
    "end": "119439"
  },
  {
    "text": "that works works because then you can",
    "start": "119439",
    "end": "121039"
  },
  {
    "text": "use tools to sort of instrument that and",
    "start": "121039",
    "end": "123320"
  },
  {
    "text": "actually find out well which bits are",
    "start": "123320",
    "end": "125520"
  },
  {
    "text": "being slow where does the program spend",
    "start": "125520",
    "end": "128239"
  },
  {
    "text": "most of its time can I ask a question",
    "start": "128239",
    "end": "131120"
  },
  {
    "text": "yep is it not better to sort of design",
    "start": "131120",
    "end": "133599"
  },
  {
    "text": "it properly in the first place and",
    "start": "133599",
    "end": "135319"
  },
  {
    "text": "specify",
    "start": "135319",
    "end": "138319"
  },
  {
    "text": "um I mean we're taking that as red that",
    "start": "138640",
    "end": "141319"
  },
  {
    "text": "actually you'll have designed the",
    "start": "141319",
    "end": "142440"
  },
  {
    "text": "software and even if you are again the",
    "start": "142440",
    "end": "144760"
  },
  {
    "text": "same thing when you come to actually",
    "start": "144760",
    "end": "145920"
  },
  {
    "text": "implement it you don't want to try and",
    "start": "145920",
    "end": "147200"
  },
  {
    "text": "Implement an optimized version straight",
    "start": "147200",
    "end": "148760"
  },
  {
    "text": "away um whatever your design is you",
    "start": "148760",
    "end": "151120"
  },
  {
    "text": "would take that implement it and then",
    "start": "151120",
    "end": "153080"
  },
  {
    "text": "see which bits need optimizing we can",
    "start": "153080",
    "end": "155760"
  },
  {
    "text": "spend ages optimizing a bit of code",
    "start": "155760",
    "end": "157840"
  },
  {
    "text": "because we think it's an interesting",
    "start": "157840",
    "end": "159159"
  },
  {
    "text": "problem to try and optimize it and we",
    "start": "159159",
    "end": "160760"
  },
  {
    "text": "can produce a really nice solution only",
    "start": "160760",
    "end": "162760"
  },
  {
    "text": "to find that that piece of code is",
    "start": "162760",
    "end": "164440"
  },
  {
    "text": "called once at the start of the program",
    "start": "164440",
    "end": "166640"
  },
  {
    "text": "and so we've managed to shave off um a",
    "start": "166640",
    "end": "169000"
  },
  {
    "text": "tenth of a second off a piece of code",
    "start": "169000",
    "end": "170720"
  },
  {
    "text": "that's called once probably while the",
    "start": "170720",
    "end": "172400"
  },
  {
    "text": "person who was running the software had",
    "start": "172400",
    "end": "174480"
  },
  {
    "text": "gone to make a cup of coffee so they",
    "start": "174480",
    "end": "175879"
  },
  {
    "text": "never noticed all that work you'd put in",
    "start": "175879",
    "end": "178040"
  },
  {
    "text": "so we write the program first and then",
    "start": "178040",
    "end": "179840"
  },
  {
    "text": "we see whether it's taking too long to",
    "start": "179840",
    "end": "181159"
  },
  {
    "text": "execute or it uses too much memory for",
    "start": "181159",
    "end": "182840"
  },
  {
    "text": "the environment we want to run it in or",
    "start": "182840",
    "end": "184159"
  },
  {
    "text": "it's using too much power we can use",
    "start": "184159",
    "end": "186080"
  },
  {
    "text": "other tools um profilers various other",
    "start": "186080",
    "end": "188560"
  },
  {
    "text": "tools that are available to run the",
    "start": "188560",
    "end": "190440"
  },
  {
    "text": "program test what's happening as it's",
    "start": "190440",
    "end": "192239"
  },
  {
    "text": "running see which parts of the program",
    "start": "192239",
    "end": "193799"
  },
  {
    "text": "are using the most time or using the",
    "start": "193799",
    "end": "195360"
  },
  {
    "text": "most memory and then we focus our",
    "start": "195360",
    "end": "197560"
  },
  {
    "text": "attention in terms of optimizing them",
    "start": "197560",
    "end": "200200"
  },
  {
    "text": "looking at those parts of the program so",
    "start": "200200",
    "end": "202239"
  },
  {
    "text": "we don't go into this blindly and just",
    "start": "202239",
    "end": "203840"
  },
  {
    "text": "think right let's have some fun let's go",
    "start": "203840",
    "end": "206360"
  },
  {
    "text": "in and optimize this program this",
    "start": "206360",
    "end": "208920"
  },
  {
    "text": "function looks interesting let's rewrite",
    "start": "208920",
    "end": "210599"
  },
  {
    "text": "that we find out which parts of our",
    "start": "210599",
    "end": "212439"
  },
  {
    "text": "program are what we call the hotspots",
    "start": "212439",
    "end": "214280"
  },
  {
    "text": "and we start looking at those to try and",
    "start": "214280",
    "end": "216239"
  },
  {
    "text": "optimize them so first of all don't even",
    "start": "216239",
    "end": "218360"
  },
  {
    "text": "bother thinking about the optimum way to",
    "start": "218360",
    "end": "220120"
  },
  {
    "text": "implement it just get the program",
    "start": "220120",
    "end": "221959"
  },
  {
    "text": "working and get something that you can",
    "start": "221959",
    "end": "223799"
  },
  {
    "text": "test and you know that the program does",
    "start": "223799",
    "end": "225280"
  },
  {
    "text": "what you want to do then test it to see",
    "start": "225280",
    "end": "227799"
  },
  {
    "text": "which parts of it are need optimizing a",
    "start": "227799",
    "end": "231080"
  },
  {
    "start": "231000",
    "end": "311000"
  },
  {
    "text": "lot of computer programs are compiled",
    "start": "231080",
    "end": "233360"
  },
  {
    "text": "and the compiler does some optimization",
    "start": "233360",
    "end": "235400"
  },
  {
    "text": "for you so is it something you need to",
    "start": "235400",
    "end": "237079"
  },
  {
    "text": "do optimizing code so that's that's a",
    "start": "237079",
    "end": "239000"
  },
  {
    "text": "really great question question yes and",
    "start": "239000",
    "end": "240720"
  },
  {
    "text": "no so I mean these days I mean if you",
    "start": "240720",
    "end": "242720"
  },
  {
    "text": "gone back 40 years compilers were",
    "start": "242720",
    "end": "245400"
  },
  {
    "text": "terrible if you take written a",
    "start": "245400",
    "end": "246879"
  },
  {
    "text": "programing C and compiled it the chances",
    "start": "246879",
    "end": "248640"
  },
  {
    "text": "are that the code it would produced",
    "start": "248640",
    "end": "250480"
  },
  {
    "text": "would not be as good particularly on a",
    "start": "250480",
    "end": "252280"
  },
  {
    "text": "PC or home computer at the time as a",
    "start": "252280",
    "end": "255400"
  },
  {
    "text": "good programmer could have written in",
    "start": "255400",
    "end": "257160"
  },
  {
    "text": "raw assembler and so people would go and",
    "start": "257160",
    "end": "259320"
  },
  {
    "text": "rewrite it in assembler or optimize it",
    "start": "259320",
    "end": "261280"
  },
  {
    "text": "because they could get better code that",
    "start": "261280",
    "end": "262759"
  },
  {
    "text": "way these days the technology of",
    "start": "262759",
    "end": "264520"
  },
  {
    "text": "compilers has moved on a lot they all",
    "start": "264520",
    "end": "266600"
  },
  {
    "text": "have an optimizing step that you can",
    "start": "266600",
    "end": "268440"
  },
  {
    "text": "enable when you're compiling your code",
    "start": "268440",
    "end": "270120"
  },
  {
    "text": "in GCC for example you put the minus o",
    "start": "270120",
    "end": "272479"
  },
  {
    "text": "minus capital O flag with various",
    "start": "272479",
    "end": "274560"
  },
  {
    "text": "parameters to specify what type of",
    "start": "274560",
    "end": "276120"
  },
  {
    "text": "optimization you want there and it will",
    "start": "276120",
    "end": "278479"
  },
  {
    "text": "take your code and produce assembly code",
    "start": "278479",
    "end": "282120"
  },
  {
    "text": "or machine code that is as optimal as",
    "start": "282120",
    "end": "284600"
  },
  {
    "text": "the compiler can produce it and that's",
    "start": "284600",
    "end": "287479"
  },
  {
    "text": "great and again you should do that",
    "start": "287479",
    "end": "289479"
  },
  {
    "text": "before you try and optimize it yourself",
    "start": "289479",
    "end": "291680"
  },
  {
    "text": "but you can often find that actually",
    "start": "291680",
    "end": "293919"
  },
  {
    "text": "there are situations where if you think",
    "start": "293919",
    "end": "295680"
  },
  {
    "text": "about what the program's doing you can",
    "start": "295680",
    "end": "298400"
  },
  {
    "text": "probably come up with a better solution",
    "start": "298400",
    "end": "300639"
  },
  {
    "text": "than even the optimizing compiler can",
    "start": "300639",
    "end": "303160"
  },
  {
    "text": "but you need to know where where that's",
    "start": "303160",
    "end": "305479"
  },
  {
    "text": "worth doing and that involves knowing",
    "start": "305479",
    "end": "307560"
  },
  {
    "text": "what it is your code needs to do so for",
    "start": "307560",
    "end": "310440"
  },
  {
    "text": "example if you've got a program which",
    "start": "310440",
    "end": "312520"
  },
  {
    "start": "311000",
    "end": "363000"
  },
  {
    "text": "takes three days to execute and you can",
    "start": "312520",
    "end": "315080"
  },
  {
    "text": "shave a nanc off every iteration of a",
    "start": "315080",
    "end": "318039"
  },
  {
    "text": "loop it's",
    "start": "318039",
    "end": "319039"
  },
  {
    "text": "doing that may well not make that much",
    "start": "319039",
    "end": "321840"
  },
  {
    "text": "of a difference on the other hand if",
    "start": "321840",
    "end": "323840"
  },
  {
    "text": "you're writing a game and you've got",
    "start": "323840",
    "end": "325440"
  },
  {
    "text": "your screen being redrawn at 120 144",
    "start": "325440",
    "end": "328440"
  },
  {
    "text": "frames per second shaving a couple of",
    "start": "328440",
    "end": "330720"
  },
  {
    "text": "nanc off each iteration of a loop",
    "start": "330720",
    "end": "332639"
  },
  {
    "text": "drawing the graphics on screen or",
    "start": "332639",
    "end": "334120"
  },
  {
    "text": "something actually may benefit because",
    "start": "334120",
    "end": "336120"
  },
  {
    "text": "it might mean you can draw one it in one",
    "start": "336120",
    "end": "338400"
  },
  {
    "text": "frame rather than taking two frames to",
    "start": "338400",
    "end": "340000"
  },
  {
    "text": "draw things on the screen so again you",
    "start": "340000",
    "end": "341680"
  },
  {
    "text": "want to know what are the requirements",
    "start": "341680",
    "end": "343319"
  },
  {
    "text": "of the program how is it being used",
    "start": "343319",
    "end": "344720"
  },
  {
    "text": "before you start making optimizations",
    "start": "344720",
    "end": "346840"
  },
  {
    "text": "and I'm tending to talk more about speed",
    "start": "346840",
    "end": "349240"
  },
  {
    "text": "here but the same is true as if you're",
    "start": "349240",
    "end": "351240"
  },
  {
    "text": "optimizing for power or if you're",
    "start": "351240",
    "end": "353000"
  },
  {
    "text": "optimiz optimizing for um memory usage",
    "start": "353000",
    "end": "356080"
  },
  {
    "text": "as well you've got to make the same",
    "start": "356080",
    "end": "357600"
  },
  {
    "text": "decision we'll concentrate on optimizing",
    "start": "357600",
    "end": "359120"
  },
  {
    "text": "for Speed because that's what people",
    "start": "359120",
    "end": "360440"
  },
  {
    "text": "have tended to do in the past the best",
    "start": "360440",
    "end": "363560"
  },
  {
    "start": "363000",
    "end": "752000"
  },
  {
    "text": "way to optimize your program is to make",
    "start": "363560",
    "end": "364960"
  },
  {
    "text": "sure it's using the right algorithm um",
    "start": "364960",
    "end": "367039"
  },
  {
    "text": "you can use some sort of tips and tricks",
    "start": "367039",
    "end": "369120"
  },
  {
    "text": "and techniques that you can find in",
    "start": "369120",
    "end": "370560"
  },
  {
    "text": "books like Michael AB brush's the Zen of",
    "start": "370560",
    "end": "372720"
  },
  {
    "text": "code optimization looking at how you",
    "start": "372720",
    "end": "374639"
  },
  {
    "text": "could optimize programs to run on the",
    "start": "374639",
    "end": "377000"
  },
  {
    "text": "386 486 and the penum which shows how",
    "start": "377000",
    "end": "379400"
  },
  {
    "text": "old it is are the principles still the",
    "start": "379400",
    "end": "381319"
  },
  {
    "text": "same though so the principles are the",
    "start": "381319",
    "end": "382800"
  },
  {
    "text": "same or the sort of things to look at",
    "start": "382800",
    "end": "384759"
  },
  {
    "text": "but obviously um the CPUs have all",
    "start": "384759",
    "end": "387000"
  },
  {
    "text": "changed and that's when it comes to",
    "start": "387000",
    "end": "388520"
  },
  {
    "text": "optimizing for spee that's one of the",
    "start": "388520",
    "end": "390280"
  },
  {
    "text": "issues what may make your program run",
    "start": "390280",
    "end": "393120"
  },
  {
    "text": "faster on one CPU isn't necessarily the",
    "start": "393120",
    "end": "397120"
  },
  {
    "text": "same thing for another CPU today we'll",
    "start": "397120",
    "end": "400360"
  },
  {
    "text": "concentrate on the other side of",
    "start": "400360",
    "end": "402400"
  },
  {
    "text": "optimization what people tend to think",
    "start": "402400",
    "end": "404039"
  },
  {
    "text": "of more as optimization which tends to",
    "start": "404039",
    "end": "406319"
  },
  {
    "text": "be the sort of Tricks you'll find talked",
    "start": "406319",
    "end": "408720"
  },
  {
    "text": "of in books like that in web pages",
    "start": "408720",
    "end": "410560"
  },
  {
    "text": "talking about how to optimize things",
    "start": "410560",
    "end": "411919"
  },
  {
    "text": "which is just looking at you've written",
    "start": "411919",
    "end": "413960"
  },
  {
    "text": "code can you write it in a way that runs",
    "start": "413960",
    "end": "417039"
  },
  {
    "text": "faster by just changing the instructions",
    "start": "417039",
    "end": "419240"
  },
  {
    "text": "of a bit and doing the same sort of",
    "start": "419240",
    "end": "420800"
  },
  {
    "text": "thing but making a few changes to that",
    "start": "420800",
    "end": "422720"
  },
  {
    "text": "now to do that I'm going to write a very",
    "start": "422720",
    "end": "424919"
  },
  {
    "text": "simple program which copies a block of",
    "start": "424919",
    "end": "427680"
  },
  {
    "text": "memory so it's going to take in a",
    "start": "427680",
    "end": "429520"
  },
  {
    "text": "pointer to some memory void star and",
    "start": "429520",
    "end": "434360"
  },
  {
    "text": "we'll say that's the",
    "start": "434360",
    "end": "436120"
  },
  {
    "text": "destination and we're going to take in a",
    "start": "436120",
    "end": "438160"
  },
  {
    "text": "pointer to the source and we're going to",
    "start": "438160",
    "end": "441240"
  },
  {
    "text": "take in the number of bytes to copy and",
    "start": "441240",
    "end": "445199"
  },
  {
    "text": "the way that we could write this is we",
    "start": "445199",
    "end": "447160"
  },
  {
    "text": "could set up a pointer",
    "start": "447160",
    "end": "450639"
  },
  {
    "text": "internally to a bite we don't know what",
    "start": "450639",
    "end": "453280"
  },
  {
    "text": "it is so we'll just keep call it",
    "start": "453280",
    "end": "454520"
  },
  {
    "text": "unsigned it doesn't really matter for",
    "start": "454520",
    "end": "455840"
  },
  {
    "text": "this and I'm not going to put the cast",
    "start": "455840",
    "end": "457720"
  },
  {
    "text": "in just because it'll annoy people on",
    "start": "457720",
    "end": "459919"
  },
  {
    "text": "YouTube but we can assume that that's",
    "start": "459919",
    "end": "462039"
  },
  {
    "text": "put in I'm writing pseudo code here",
    "start": "462039",
    "end": "464400"
  },
  {
    "text": "we'll set up another pointer to point to",
    "start": "464400",
    "end": "465800"
  },
  {
    "text": "the source and then we'll set up a",
    "start": "465800",
    "end": "467759"
  },
  {
    "text": "counter I which we'll set to equal zero",
    "start": "467759",
    "end": "472000"
  },
  {
    "text": "and we'll say while I is less than n",
    "start": "472000",
    "end": "476599"
  },
  {
    "text": "that there we're going to set p++ equal",
    "start": "476599",
    "end": "481319"
  },
  {
    "text": "q++ make that a point otherwise it won't",
    "start": "481319",
    "end": "483599"
  },
  {
    "text": "work properly and then we will increment",
    "start": "483599",
    "end": "486360"
  },
  {
    "text": "I so that's a very very simple memory",
    "start": "486360",
    "end": "489319"
  },
  {
    "text": "copy program we copy one bite from the",
    "start": "489319",
    "end": "493240"
  },
  {
    "text": "source which is what the star uses",
    "start": "493240",
    "end": "495000"
  },
  {
    "text": "that's really bite from The Source",
    "start": "495000",
    "end": "497360"
  },
  {
    "text": "increment q and we'll write it to the",
    "start": "497360",
    "end": "499599"
  },
  {
    "text": "destination and increment P so we then",
    "start": "499599",
    "end": "501400"
  },
  {
    "text": "move on to point to the next bite and we",
    "start": "501400",
    "end": "503039"
  },
  {
    "text": "just go around that Loop until we've",
    "start": "503039",
    "end": "504919"
  },
  {
    "text": "copied n bytes from there so that reads",
    "start": "504919",
    "end": "508680"
  },
  {
    "text": "the bite there there and this one writes",
    "start": "508680",
    "end": "511720"
  },
  {
    "text": "a bite do you are you writing before",
    "start": "511720",
    "end": "514000"
  },
  {
    "text": "you're reading there or am I jumping the",
    "start": "514000",
    "end": "515719"
  },
  {
    "text": "gun uh no so this code's fine it'll read",
    "start": "515719",
    "end": "518360"
  },
  {
    "text": "it because we've got the equals here",
    "start": "518360",
    "end": "519518"
  },
  {
    "text": "it'll know that it's got to evaluate the",
    "start": "519519",
    "end": "520760"
  },
  {
    "text": "thing on the right before it can read it",
    "start": "520760",
    "end": "523000"
  },
  {
    "text": "and we're we're incrementing p and Q",
    "start": "523000",
    "end": "525560"
  },
  {
    "text": "there so let's have a look at this",
    "start": "525560",
    "end": "527120"
  },
  {
    "text": "program and see if there's a way we",
    "start": "527120",
    "end": "528959"
  },
  {
    "text": "could use some of the sort of tricks",
    "start": "528959",
    "end": "530560"
  },
  {
    "text": "that people have tended to think about",
    "start": "530560",
    "end": "533240"
  },
  {
    "text": "when they refer to optimizing things",
    "start": "533240",
    "end": "535240"
  },
  {
    "text": "that we could apply to this let's move",
    "start": "535240",
    "end": "537720"
  },
  {
    "text": "away from C and look at this in sort of",
    "start": "537720",
    "end": "540279"
  },
  {
    "text": "a machine code representation we'll see",
    "start": "540279",
    "end": "542120"
  },
  {
    "text": "what's actually happening here I'm going",
    "start": "542120",
    "end": "543800"
  },
  {
    "text": "to use Arm because it's sort of",
    "start": "543800",
    "end": "545560"
  },
  {
    "text": "relatively straightforward so we'll say",
    "start": "545560",
    "end": "548079"
  },
  {
    "text": "r0 contains the destination and we can",
    "start": "548079",
    "end": "550959"
  },
  {
    "text": "say R1 these are just registers these",
    "start": "550959",
    "end": "552800"
  },
  {
    "text": "just have the values in we can say we",
    "start": "552800",
    "end": "555320"
  },
  {
    "text": "move into R2 Z we're then going to load",
    "start": "555320",
    "end": "559680"
  },
  {
    "text": "a bite into R3 from the address in r0",
    "start": "559680",
    "end": "564320"
  },
  {
    "text": "We'll add one soorry in R1 there we'll",
    "start": "564320",
    "end": "567040"
  },
  {
    "text": "add one to R1",
    "start": "567040",
    "end": "570040"
  },
  {
    "text": "to move on to the next bite so we're",
    "start": "570040",
    "end": "571560"
  },
  {
    "text": "we're doing exactly the same but we're",
    "start": "571560",
    "end": "572640"
  },
  {
    "text": "sort of seeing the steps that are",
    "start": "572640",
    "end": "573800"
  },
  {
    "text": "involved in a bit more detail and we",
    "start": "573800",
    "end": "576480"
  },
  {
    "text": "then we'll Store The Bite in R3 into r0",
    "start": "576480",
    "end": "580000"
  },
  {
    "text": "and we'll add one to r0 like so this is",
    "start": "580000",
    "end": "584160"
  },
  {
    "text": "what effectively the C compiler would",
    "start": "584160",
    "end": "585880"
  },
  {
    "text": "generate for this if you were to write",
    "start": "585880",
    "end": "588399"
  },
  {
    "text": "it out and then we'd have a compare",
    "start": "588399",
    "end": "590839"
  },
  {
    "text": "instruction here that compares R2 with",
    "start": "590839",
    "end": "596600"
  },
  {
    "text": "R3 that should have been R4 there",
    "start": "596600",
    "end": "599880"
  },
  {
    "text": "there we are it's much easier writing",
    "start": "599880",
    "end": "601160"
  },
  {
    "text": "this on the computer we also need to add",
    "start": "601160",
    "end": "603880"
  },
  {
    "text": "r two with one here to count that we'll",
    "start": "603880",
    "end": "608959"
  },
  {
    "text": "compare them and we'll say while it is",
    "start": "608959",
    "end": "612079"
  },
  {
    "text": "less than we will loop around so we'll",
    "start": "612079",
    "end": "614640"
  },
  {
    "text": "go back around to Loop which we will",
    "start": "614640",
    "end": "616560"
  },
  {
    "text": "label here so now we can see the",
    "start": "616560",
    "end": "618640"
  },
  {
    "text": "individual things that are happening",
    "start": "618640",
    "end": "619760"
  },
  {
    "text": "we're loading a bite from memory from",
    "start": "619760",
    "end": "621640"
  },
  {
    "text": "the address R1 we're incrementing R1",
    "start": "621640",
    "end": "623800"
  },
  {
    "text": "we're adding one to it we're storing it",
    "start": "623800",
    "end": "626360"
  },
  {
    "text": "in the address in r0 we're incrementing",
    "start": "626360",
    "end": "628519"
  },
  {
    "text": "that we're incrementing the number we've",
    "start": "628519",
    "end": "630079"
  },
  {
    "text": "counted and we're comparing them and",
    "start": "630079",
    "end": "631839"
  },
  {
    "text": "each time around we go the loop we'll go",
    "start": "631839",
    "end": "633519"
  },
  {
    "text": "around this Loop however many btes we've",
    "start": "633519",
    "end": "635399"
  },
  {
    "text": "got there let's see how many",
    "start": "635399",
    "end": "636680"
  },
  {
    "text": "instructions it's going to take to copy",
    "start": "636680",
    "end": "638560"
  },
  {
    "text": "one bite so that's basically the bit in",
    "start": "638560",
    "end": "640320"
  },
  {
    "text": "the loop we'll ignore the setup cost",
    "start": "640320",
    "end": "642120"
  },
  {
    "text": "here cuz that's going to happen once",
    "start": "642120",
    "end": "643720"
  },
  {
    "text": "it's going to be a negligible cost",
    "start": "643720",
    "end": "645160"
  },
  {
    "text": "unless we're actually only copying zero",
    "start": "645160",
    "end": "647079"
  },
  {
    "text": "bytes in which case it'll take time we",
    "start": "647079",
    "end": "649360"
  },
  {
    "text": "should probably also have a branch to",
    "start": "649360",
    "end": "652200"
  },
  {
    "text": "the condition here just so that we",
    "start": "652200",
    "end": "654600"
  },
  {
    "text": "actually can cope with the case when",
    "start": "654600",
    "end": "655959"
  },
  {
    "text": "it's zero so how many instructions we",
    "start": "655959",
    "end": "657959"
  },
  {
    "text": "copy per per bite well basically it's 1",
    "start": "657959",
    "end": "662760"
  },
  {
    "text": "2 3 4 5 6 seven instructions so our",
    "start": "662760",
    "end": "665800"
  },
  {
    "text": "basic implementation is going to take",
    "start": "665800",
    "end": "667480"
  },
  {
    "text": "seven instructions per bite so can we",
    "start": "667480",
    "end": "672079"
  },
  {
    "text": "speed this up by speeding up we want to",
    "start": "672079",
    "end": "674120"
  },
  {
    "text": "take less instructions per bite well",
    "start": "674120",
    "end": "675839"
  },
  {
    "text": "okay there's some very simple things we",
    "start": "675839",
    "end": "677120"
  },
  {
    "text": "can do we can get rid of two",
    "start": "677120",
    "end": "678360"
  },
  {
    "text": "instructions straight away so we can get",
    "start": "678360",
    "end": "679839"
  },
  {
    "text": "rid of that instruction because the arm",
    "start": "679839",
    "end": "682519"
  },
  {
    "text": "CPU provides us with a instruction that",
    "start": "682519",
    "end": "688000"
  },
  {
    "text": "will automatically add one to the value",
    "start": "688000",
    "end": "689680"
  },
  {
    "text": "of R1 so we can get that for free if we",
    "start": "689680",
    "end": "692440"
  },
  {
    "text": "know what our CPU provides us and this",
    "start": "692440",
    "end": "694440"
  },
  {
    "text": "is something that the compiler would do",
    "start": "694440",
    "end": "695720"
  },
  {
    "text": "to optimize the code we're not doing",
    "start": "695720",
    "end": "697720"
  },
  {
    "text": "anything yet that the compiler wouldn't",
    "start": "697720",
    "end": "699079"
  },
  {
    "text": "do behind the scenes anyway it would",
    "start": "699079",
    "end": "700800"
  },
  {
    "text": "spot that and take it away we can do",
    "start": "700800",
    "end": "702680"
  },
  {
    "text": "exactly the same thing here we can take",
    "start": "702680",
    "end": "705760"
  },
  {
    "text": "that instruction there away and we're",
    "start": "705760",
    "end": "707720"
  },
  {
    "text": "now only doing five instructions per",
    "start": "707720",
    "end": "709519"
  },
  {
    "text": "Vite so just by knowing our CPU a bit",
    "start": "709519",
    "end": "712279"
  },
  {
    "text": "better we can remove two instructions",
    "start": "712279",
    "end": "715040"
  },
  {
    "text": "and that saves whatever percentage that",
    "start": "715040",
    "end": "717519"
  },
  {
    "text": "is it's what it's 5 over 7 more than a",
    "start": "717519",
    "end": "720360"
  },
  {
    "text": "quarter more than a quarter that's 25%",
    "start": "720360",
    "end": "722399"
  },
  {
    "text": "faster already just by knowing our CPU a",
    "start": "722399",
    "end": "724880"
  },
  {
    "text": "bit better and of course this is",
    "start": "724880",
    "end": "725760"
  },
  {
    "text": "something the compiler would do but",
    "start": "725760",
    "end": "727120"
  },
  {
    "text": "we're still taking five instructions to",
    "start": "727120",
    "end": "729480"
  },
  {
    "text": "copy one bite can we improve on that at",
    "start": "729480",
    "end": "733320"
  },
  {
    "text": "all well let's think about what we're",
    "start": "733320",
    "end": "737079"
  },
  {
    "text": "actually doing we are copying one bite",
    "start": "737079",
    "end": "739959"
  },
  {
    "text": "at a",
    "start": "739959",
    "end": "740920"
  },
  {
    "text": "time but could we copy more than one",
    "start": "740920",
    "end": "743360"
  },
  {
    "text": "bite at a time well the arm CPU along",
    "start": "743360",
    "end": "746920"
  },
  {
    "text": "with most CPUs is quite capable of",
    "start": "746920",
    "end": "748880"
  },
  {
    "text": "copying a single bite from memory or",
    "start": "748880",
    "end": "750519"
  },
  {
    "text": "copying four bytes from memory think",
    "start": "750519",
    "end": "752399"
  },
  {
    "start": "752000",
    "end": "968000"
  },
  {
    "text": "about it in terms of an analogy if you",
    "start": "752399",
    "end": "754480"
  },
  {
    "text": "have a pile of books you have to take",
    "start": "754480",
    "end": "756360"
  },
  {
    "text": "from one side of the room to the other",
    "start": "756360",
    "end": "758360"
  },
  {
    "text": "if you carry one book at a time it'll",
    "start": "758360",
    "end": "760680"
  },
  {
    "text": "take you longer than if you carry four",
    "start": "760680",
    "end": "762240"
  },
  {
    "text": "books at a time exactly the same thing",
    "start": "762240",
    "end": "764240"
  },
  {
    "text": "here if we copy more information each",
    "start": "764240",
    "end": "767320"
  },
  {
    "text": "time then we'll have to take less time",
    "start": "767320",
    "end": "769440"
  },
  {
    "text": "to do it so let's see how we could do",
    "start": "769440",
    "end": "771040"
  },
  {
    "text": "that so we got the same thing r0 points",
    "start": "771040",
    "end": "774360"
  },
  {
    "text": "to the destination R1 points to the",
    "start": "774360",
    "end": "776920"
  },
  {
    "text": "source R2 is our counter and then R3 is",
    "start": "776920",
    "end": "782600"
  },
  {
    "text": "the number of bytes to copy so the first",
    "start": "782600",
    "end": "785399"
  },
  {
    "text": "thing we need to do differently this",
    "start": "785399",
    "end": "786480"
  },
  {
    "text": "time is that we've still got the number",
    "start": "786480",
    "end": "787680"
  },
  {
    "text": "of bytes to copy but we're now going to",
    "start": "787680",
    "end": "789680"
  },
  {
    "text": "be copying four bytes at a time so we",
    "start": "789680",
    "end": "791959"
  },
  {
    "text": "need to divide R3 by four so we can do",
    "start": "791959",
    "end": "796279"
  },
  {
    "text": "that either by writing a divide routine",
    "start": "796279",
    "end": "798160"
  },
  {
    "text": "but because it's a power of two we can",
    "start": "798160",
    "end": "800360"
  },
  {
    "text": "do that very quickly by just shifting it",
    "start": "800360",
    "end": "802480"
  },
  {
    "text": "to places to the right in binary which",
    "start": "802480",
    "end": "805440"
  },
  {
    "text": "will divide it by four so we can do that",
    "start": "805440",
    "end": "807360"
  },
  {
    "text": "on the arm CPU like so and I'm going to",
    "start": "807360",
    "end": "810320"
  },
  {
    "text": "use a different register here ASR by 2",
    "start": "810320",
    "end": "813720"
  },
  {
    "text": "so this is divide by 4 now why do we",
    "start": "813720",
    "end": "817240"
  },
  {
    "text": "need to divide by four so we only need",
    "start": "817240",
    "end": "818959"
  },
  {
    "text": "to do a quarter of the number of",
    "start": "818959",
    "end": "821160"
  },
  {
    "text": "iterations around the loop because each",
    "start": "821160",
    "end": "822800"
  },
  {
    "text": "time we're copying four bytes in each",
    "start": "822800",
    "end": "824519"
  },
  {
    "text": "time so we need to divide it by four",
    "start": "824519",
    "end": "827279"
  },
  {
    "text": "except there's a problem we're doing",
    "start": "827279",
    "end": "828959"
  },
  {
    "text": "integer division what's 7 divided by",
    "start": "828959",
    "end": "831399"
  },
  {
    "text": "four oh okay yeah so we're going to have",
    "start": "831399",
    "end": "833160"
  },
  {
    "text": "a problem with odd numbers so we're",
    "start": "833160",
    "end": "834240"
  },
  {
    "text": "going to have a problem with odd numbers",
    "start": "834240",
    "end": "835560"
  },
  {
    "text": "or numbers which aren't a multiple of",
    "start": "835560",
    "end": "837480"
  },
  {
    "text": "four so we can test with the the number",
    "start": "837480",
    "end": "839040"
  },
  {
    "text": "is wholly divisible by four and if it is",
    "start": "839040",
    "end": "841480"
  },
  {
    "text": "we can just copy it using this method if",
    "start": "841480",
    "end": "843120"
  },
  {
    "text": "it isn't we can copy it using this",
    "start": "843120",
    "end": "845199"
  },
  {
    "text": "method and then copy the remaining one",
    "start": "845199",
    "end": "847160"
  },
  {
    "text": "two or three bytes that we need to to",
    "start": "847160",
    "end": "849079"
  },
  {
    "text": "finish off copying it now that's fine um",
    "start": "849079",
    "end": "852199"
  },
  {
    "text": "as long as we're not copying one two or",
    "start": "852199",
    "end": "853880"
  },
  {
    "text": "three bytes because then we've got all",
    "start": "853880",
    "end": "855240"
  },
  {
    "text": "the overhead of testing for it so that's",
    "start": "855240",
    "end": "856959"
  },
  {
    "text": "again something you perhaps want to know",
    "start": "856959",
    "end": "858160"
  },
  {
    "text": "about your program if you're copying",
    "start": "858160",
    "end": "860440"
  },
  {
    "text": "lots of small bits you probably don't",
    "start": "860440",
    "end": "862240"
  },
  {
    "text": "want to use this optimized routine",
    "start": "862240",
    "end": "863880"
  },
  {
    "text": "because it would actually end up being",
    "start": "863880",
    "end": "864800"
  },
  {
    "text": "slower again you need to know about how",
    "start": "864800",
    "end": "867160"
  },
  {
    "text": "your program works to optimize it to",
    "start": "867160",
    "end": "869600"
  },
  {
    "text": "make it run more efficiently and then we",
    "start": "869600",
    "end": "872040"
  },
  {
    "text": "set up R4 like that then what do we do",
    "start": "872040",
    "end": "874800"
  },
  {
    "text": "well we set up R2 again as",
    "start": "874800",
    "end": "876920"
  },
  {
    "text": "before comma zero set to be zero jump to",
    "start": "876920",
    "end": "880959"
  },
  {
    "text": "our condition we're going to have our",
    "start": "880959",
    "end": "882639"
  },
  {
    "text": "loop again so we're going to load in",
    "start": "882639",
    "end": "885240"
  },
  {
    "text": "this time we're going to load in 32 bits",
    "start": "885240",
    "end": "887079"
  },
  {
    "text": "so we haven't got the B there for bite",
    "start": "887079",
    "end": "889160"
  },
  {
    "text": "we're going to put that into R5 then",
    "start": "889160",
    "end": "891600"
  },
  {
    "text": "we're going to take that from R1 this",
    "start": "891600",
    "end": "894440"
  },
  {
    "text": "time though we're going to add on four",
    "start": "894440",
    "end": "897639"
  },
  {
    "text": "at the end cuz we've copied with four",
    "start": "897639",
    "end": "899079"
  },
  {
    "text": "bytes and so we want to step on to the",
    "start": "899079",
    "end": "901079"
  },
  {
    "text": "next four bytes likewise we're then",
    "start": "901079",
    "end": "903639"
  },
  {
    "text": "going to store that back no B again",
    "start": "903639",
    "end": "907639"
  },
  {
    "text": "into the address at r0 because we want",
    "start": "907639",
    "end": "911160"
  },
  {
    "text": "to copy four bytes each time so we add",
    "start": "911160",
    "end": "913680"
  },
  {
    "text": "on four rest of the code is the same we",
    "start": "913680",
    "end": "915680"
  },
  {
    "text": "compare R2 with R4 this time because",
    "start": "915680",
    "end": "919199"
  },
  {
    "text": "that contains the division by four if",
    "start": "919199",
    "end": "922440"
  },
  {
    "text": "it's less",
    "start": "922440",
    "end": "923680"
  },
  {
    "text": "than we jump back to Loop and this is",
    "start": "923680",
    "end": "926920"
  },
  {
    "text": "where our conditional is there so this",
    "start": "926920",
    "end": "930399"
  },
  {
    "text": "time we still take one two three hang on",
    "start": "930399",
    "end": "932800"
  },
  {
    "text": "why do we have four before and I've",
    "start": "932800",
    "end": "934480"
  },
  {
    "text": "missed out the add instruction there we",
    "start": "934480",
    "end": "937600"
  },
  {
    "text": "are add R2 comma r2a hash one so this",
    "start": "937600",
    "end": "942120"
  },
  {
    "text": "time we've still got five instructions",
    "start": "942120",
    "end": "944399"
  },
  {
    "text": "one 2 3 4 five but we will execute them",
    "start": "944399",
    "end": "948600"
  },
  {
    "text": "five instructions now per four bytes",
    "start": "948600",
    "end": "951759"
  },
  {
    "text": "rather than per bite so this time we'll",
    "start": "951759",
    "end": "954920"
  },
  {
    "text": "execute these five instructions a",
    "start": "954920",
    "end": "956560"
  },
  {
    "text": "quarter of the number of times",
    "start": "956560",
    "end": "959639"
  },
  {
    "text": "that we had to here so here we're doing",
    "start": "959639",
    "end": "962000"
  },
  {
    "text": "it five per B here we're doing it five",
    "start": "962000",
    "end": "965279"
  },
  {
    "text": "per four bytes plus the setup cost we're",
    "start": "965279",
    "end": "967360"
  },
  {
    "text": "ignoring the setup cost so just making a",
    "start": "967360",
    "end": "969399"
  },
  {
    "start": "968000",
    "end": "1062000"
  },
  {
    "text": "simple change like that can make our",
    "start": "969399",
    "end": "971680"
  },
  {
    "text": "program it's only taking a quarter of",
    "start": "971680",
    "end": "973160"
  },
  {
    "text": "the speed and again this is something",
    "start": "973160",
    "end": "974519"
  },
  {
    "text": "that the compiler May well spot actually",
    "start": "974519",
    "end": "976040"
  },
  {
    "text": "modern compilers can sort of make these",
    "start": "976040",
    "end": "978680"
  },
  {
    "text": "optimizations now that works well for",
    "start": "978680",
    "end": "980600"
  },
  {
    "text": "something as simple as this because",
    "start": "980600",
    "end": "982279"
  },
  {
    "text": "actually we're using a sort of simple",
    "start": "982279",
    "end": "985319"
  },
  {
    "text": "example but actually we can take this",
    "start": "985319",
    "end": "988040"
  },
  {
    "text": "further you can use what something is",
    "start": "988040",
    "end": "989639"
  },
  {
    "text": "called Loop and rolling and this is",
    "start": "989639",
    "end": "991959"
  },
  {
    "text": "great if you know exactly how many times",
    "start": "991959",
    "end": "995600"
  },
  {
    "text": "you want to copy something so rather",
    "start": "995600",
    "end": "997560"
  },
  {
    "text": "than just copying four bytes at a time",
    "start": "997560",
    "end": "1000920"
  },
  {
    "text": "now in reality there are instructions",
    "start": "1000920",
    "end": "1002600"
  },
  {
    "text": "and copy more than four bytes at a time",
    "start": "1002600",
    "end": "1004240"
  },
  {
    "text": "on most CPUs we'll ignore them for now",
    "start": "1004240",
    "end": "1006560"
  },
  {
    "text": "the same approach can take what we could",
    "start": "1006560",
    "end": "1009040"
  },
  {
    "text": "do instead is have our Loop look like",
    "start": "1009040",
    "end": "1012160"
  },
  {
    "text": "this load into R5 from R1 poed there so",
    "start": "1012160",
    "end": "1017360"
  },
  {
    "text": "we load in four bytes and then we store",
    "start": "1017360",
    "end": "1019759"
  },
  {
    "text": "those four bytes okay there's no change",
    "start": "1019759",
    "end": "1021920"
  },
  {
    "text": "there but then what we do is we load in",
    "start": "1021920",
    "end": "1024640"
  },
  {
    "text": "another four bytes and then we store",
    "start": "1024640",
    "end": "1027798"
  },
  {
    "text": "another four bytes here and we keep",
    "start": "1027799",
    "end": "1030360"
  },
  {
    "text": "doing this to make our Loop have more",
    "start": "1030360",
    "end": "1032319"
  },
  {
    "text": "iterations in it but they're explicitly",
    "start": "1032319",
    "end": "1034798"
  },
  {
    "text": "unrolled so the loop now here we would",
    "start": "1034799",
    "end": "1037038"
  },
  {
    "text": "copy eight bytes and if we were to loop",
    "start": "1037039",
    "end": "1038640"
  },
  {
    "text": "around there we'd copy eight bytes or we",
    "start": "1038640",
    "end": "1040640"
  },
  {
    "text": "could say make it do 16 bytes or 32",
    "start": "1040640",
    "end": "1043038"
  },
  {
    "text": "bytes and that would mean that the cost",
    "start": "1043039",
    "end": "1045240"
  },
  {
    "text": "per 32 bytes would be lower because we",
    "start": "1045240",
    "end": "1049120"
  },
  {
    "text": "wouldn't have to keep testing whether we",
    "start": "1049120",
    "end": "1051320"
  },
  {
    "text": "come to the end of the loop or not we",
    "start": "1051320",
    "end": "1054679"
  },
  {
    "text": "could sort of gain a speed up then so",
    "start": "1054679",
    "end": "1056840"
  },
  {
    "text": "what we're trying to do is reduce the",
    "start": "1056840",
    "end": "1058280"
  },
  {
    "text": "number of instructions we're executing",
    "start": "1058280",
    "end": "1060440"
  },
  {
    "text": "per bite of memory that we copied so",
    "start": "1060440",
    "end": "1062559"
  },
  {
    "text": "unrolling the loop can make things",
    "start": "1062559",
    "end": "1064440"
  },
  {
    "text": "faster now the problems you get",
    "start": "1064440",
    "end": "1065480"
  },
  {
    "text": "interesting problems is that gets too",
    "start": "1065480",
    "end": "1066760"
  },
  {
    "text": "big it then doesn't fit into your CPU",
    "start": "1066760",
    "end": "1068400"
  },
  {
    "text": "cache and so we start to slow your",
    "start": "1068400",
    "end": "1070160"
  },
  {
    "text": "program down um so finding out what size",
    "start": "1070160",
    "end": "1073280"
  },
  {
    "text": "works well really is dependent on what",
    "start": "1073280",
    "end": "1075440"
  },
  {
    "text": "CPU you're using and what you're doing",
    "start": "1075440",
    "end": "1078760"
  },
  {
    "text": "but the important thing is that don't do",
    "start": "1078760",
    "end": "1081679"
  },
  {
    "text": "this until you actually know where you",
    "start": "1081679",
    "end": "1083480"
  },
  {
    "text": "need to do it and there are places that",
    "start": "1083480",
    "end": "1085320"
  },
  {
    "text": "you need to look at it with this example",
    "start": "1085320",
    "end": "1087120"
  },
  {
    "text": "we just looked at one way that we could",
    "start": "1087120",
    "end": "1088320"
  },
  {
    "text": "speed up by changing the code there are",
    "start": "1088320",
    "end": "1090520"
  },
  {
    "text": "other approaches that you can take to",
    "start": "1090520",
    "end": "1092520"
  },
  {
    "text": "optimizing your program that do similar",
    "start": "1092520",
    "end": "1094919"
  },
  {
    "text": "things or different things so you can by",
    "start": "1094919",
    "end": "1097520"
  },
  {
    "text": "changing the way you store your data in",
    "start": "1097520",
    "end": "1100559"
  },
  {
    "text": "a program make your program run faster",
    "start": "1100559",
    "end": "1103039"
  },
  {
    "text": "it seems counterintuitive and we'll look",
    "start": "1103039",
    "end": "1104880"
  },
  {
    "text": "at it in another video probably but if",
    "start": "1104880",
    "end": "1106559"
  },
  {
    "text": "you change the order in which your data",
    "start": "1106559",
    "end": "1108400"
  },
  {
    "text": "stored um then you can make it much",
    "start": "1108400",
    "end": "1110480"
  },
  {
    "text": "quicker to access the uh data for",
    "start": "1110480",
    "end": "1113760"
  },
  {
    "text": "certain types of operations and as I",
    "start": "1113760",
    "end": "1116480"
  },
  {
    "text": "said if you really want to get some",
    "start": "1116480",
    "end": "1117600"
  },
  {
    "text": "speed increases these sort of tips and",
    "start": "1117600",
    "end": "1119840"
  },
  {
    "text": "tricks are good for things like a memory",
    "start": "1119840",
    "end": "1121559"
  },
  {
    "text": "copy routine which gets called a lot in",
    "start": "1121559",
    "end": "1123640"
  },
  {
    "text": "a lot of different places and you want",
    "start": "1123640",
    "end": "1124960"
  },
  {
    "text": "it to be as fast as possible but they're",
    "start": "1124960",
    "end": "1127200"
  },
  {
    "text": "probably not the tricks you want to",
    "start": "1127200",
    "end": "1128679"
  },
  {
    "text": "spend your time on in your sort of",
    "start": "1128679",
    "end": "1131039"
  },
  {
    "text": "everyday program unless you really need",
    "start": "1131039",
    "end": "1133200"
  },
  {
    "text": "the speed there um for example if you're",
    "start": "1133200",
    "end": "1135080"
  },
  {
    "text": "writing a video decompression algorithm",
    "start": "1135080",
    "end": "1137320"
  },
  {
    "text": "or something as part of a game then",
    "start": "1137320",
    "end": "1139080"
  },
  {
    "text": "perhaps yes you do want to do the sort",
    "start": "1139080",
    "end": "1140520"
  },
  {
    "text": "of Loop and rolling because it needs to",
    "start": "1140520",
    "end": "1141919"
  },
  {
    "text": "be fast it needs to get the data within",
    "start": "1141919",
    "end": "1144120"
  },
  {
    "text": "a certain limited amount of time um so",
    "start": "1144120",
    "end": "1146679"
  },
  {
    "text": "that they can display each video frame",
    "start": "1146679",
    "end": "1148280"
  },
  {
    "text": "on screen at the right time so if you",
    "start": "1148280",
    "end": "1149840"
  },
  {
    "text": "look at the code for ffmpeg you will see",
    "start": "1149840",
    "end": "1152039"
  },
  {
    "text": "these techniques being applied there to",
    "start": "1152039",
    "end": "1154159"
  },
  {
    "text": "make it as fast as possible on whatever",
    "start": "1154159",
    "end": "1157000"
  },
  {
    "text": "CPU it's running but for most programs",
    "start": "1157000",
    "end": "1160919"
  },
  {
    "text": "finding the right algorithm will give",
    "start": "1160919",
    "end": "1162480"
  },
  {
    "text": "you a far better benefit in terms of",
    "start": "1162480",
    "end": "1165120"
  },
  {
    "text": "speed again I'm optimizing everything to",
    "start": "1165120",
    "end": "1168799"
  },
  {
    "text": "the hilt test and so we'll run speed",
    "start": "1168799",
    "end": "1171880"
  },
  {
    "text": "test back so our binary search is",
    "start": "1171880",
    "end": "1174280"
  },
  {
    "text": "working now what would have happened is",
    "start": "1174280",
    "end": "1176280"
  },
  {
    "text": "someone implemented this based on some",
    "start": "1176280",
    "end": "1177880"
  },
  {
    "text": "textbook it works fine they considered",
    "start": "1177880",
    "end": "1180640"
  },
  {
    "text": "their job done for the day and they went",
    "start": "1180640",
    "end": "1181840"
  },
  {
    "text": "home right",
    "start": "1181840",
    "end": "1184640"
  }
]