[
  {
    "text": "So now we're going to talk about something that is kind of a specific part of Big Data",
    "start": "30",
    "end": "3600"
  },
  {
    "text": "So the velocity part huge amounts of data being generated all the time, which essentially is a data stream",
    "start": "3730",
    "end": "9929"
  },
  {
    "text": "So that's a flow of instances so you could have a flow of images coming in have a flow",
    "start": "9940",
    "end": "14250"
  },
  {
    "text": "Video coming in or just a flow of essentially lines to go into a database the thing about the dynamic data",
    "start": "14740",
    "end": "21510"
  },
  {
    "text": "Is that the patterns within it can change so if we've got for example a static machine learning model?",
    "start": "21510",
    "end": "26459"
  },
  {
    "text": "That's not going to deal very well with a changing pattern happening in the data",
    "start": "26460",
    "end": "30539"
  },
  {
    "text": "We build a single model at the start. We use it to make predictions on later data the model",
    "start": "30670",
    "end": "36090"
  },
  {
    "text": "Accuracy can kind of degenerate over time as that data changes",
    "start": "36640",
    "end": "40500"
  },
  {
    "text": "The problem of kind of designing algorithms to deal with this real time data",
    "start": "42730",
    "end": "46320"
  },
  {
    "text": "There's been a research topic for kind of several years now and there's several real world applications on top of that as well",
    "start": "46750",
    "end": "52020"
  },
  {
    "text": "so if you think about",
    "start": "52199",
    "end": "53140"
  },
  {
    "text": "Banks trying to detect fraud as patterns change of different forwards occurring",
    "start": "53140",
    "end": "57509"
  },
  {
    "text": "They want their models to kind of be able to update all the time similar for intrusion detection systems and computer networks",
    "start": "57550",
    "end": "64408"
  },
  {
    "text": "They want to be able to update",
    "start": "64449",
    "end": "66430"
  },
  {
    "text": "And keep on top of what is happening",
    "start": "66430",
    "end": "68430"
  },
  {
    "text": "Ideally, you would want this to happen automatically so minimum interference from humans, because otherwise they've got to spot when changes are happening",
    "start": "68860",
    "end": "74699"
  },
  {
    "text": "We just want the machines to be able to do it by themselves",
    "start": "74979",
    "end": "77548"
  },
  {
    "text": "So if you think about a traditional classification problem on a static batch of data",
    "start": "77890",
    "end": "82890"
  },
  {
    "text": "You assume you have all of that data there already. You have your training test set and you have",
    "start": "83080",
    "end": "88979"
  },
  {
    "text": "instances with",
    "start": "89500",
    "end": "91060"
  },
  {
    "text": "Features which X and then there's some unknown",
    "start": "91060",
    "end": "94350"
  },
  {
    "text": "function f of X which gives you the class label and you want to find a",
    "start": "94840",
    "end": "99118"
  },
  {
    "text": "hypothesis that gives you the best prediction possible",
    "start": "99579",
    "end": "102809"
  },
  {
    "text": "So what kind of approximates this function as well as possible?",
    "start": "102810",
    "end": "106290"
  },
  {
    "text": "So you have a red class and a green class and we have instances that look like this our function f of X may create",
    "start": "106290",
    "end": "111089"
  },
  {
    "text": "A class boundary that looks like this. So anything on this side is red. Anything on this side is green",
    "start": "111090",
    "end": "116968"
  },
  {
    "text": "Our model doesn't know that but we use standard machine learning techniques decision trees new or networks",
    "start": "117009",
    "end": "123119"
  },
  {
    "text": "Whatever you want and it learns a boundary",
    "start": "123159",
    "end": "125757"
  },
  {
    "text": "That looks like that and so that will do okay on whatever dates that we have",
    "start": "126759",
    "end": "131009"
  },
  {
    "text": "It's not effect, but it may get the results that we want. This is static classifications. We already have all our data",
    "start": "131009",
    "end": "137739"
  },
  {
    "text": "So we've got our data we've done our machine learning",
    "start": "137740",
    "end": "139740"
  },
  {
    "text": "This is the decision boundary that we've learnt. The dotted line is what is actually the boundary this gives. Okay results",
    "start": "139820",
    "end": "146469"
  },
  {
    "text": "Let's now say that this is happening in a data stream. So we get this data originally and we build this model",
    "start": "146470",
    "end": "153190"
  },
  {
    "text": "But then later on we have a similar distribution of instance arriving",
    "start": "153200",
    "end": "158140"
  },
  {
    "text": "However, what now happens is that some of these instances are now in reality in a different class",
    "start": "158690",
    "end": "165249"
  },
  {
    "text": "so the true boundary is now here, but we still have our",
    "start": "165740",
    "end": "169779"
  },
  {
    "text": "Model with this decision boundary and so we're now predicting instances here and here into the wrong class if we use that",
    "start": "170300",
    "end": "177219"
  },
  {
    "text": "Exact same model. So what we would see in this case in",
    "start": "177500",
    "end": "180880"
  },
  {
    "text": "Centage accuracy over time you would see at this change point",
    "start": "181640",
    "end": "185619"
  },
  {
    "text": "Accuracy would plummet. So this problem here is called real concept drift. What is effectively happened here",
    "start": "186500",
    "end": "192640"
  },
  {
    "text": "is that this function the unknown function has changed but we've kept our hypothesis our machine learning model exactly the same and so",
    "start": "192640",
    "end": "200379"
  },
  {
    "text": "It starts to perform badly",
    "start": "200660",
    "end": "202460"
  },
  {
    "text": "we can also have a similar problem called virtual drift and what would happen in this case is",
    "start": "202460",
    "end": "209739"
  },
  {
    "text": "that the",
    "start": "210350",
    "end": "212270"
  },
  {
    "text": "Target decision boundary has stayed the same from this original",
    "start": "212270",
    "end": "215290"
  },
  {
    "text": "But the instances we now see in the stream are somewhere else in the feature space. Let's say we now see",
    "start": "216350",
    "end": "223180"
  },
  {
    "text": "data",
    "start": "224030",
    "end": "225050"
  },
  {
    "text": "like this so though the",
    "start": "225050",
    "end": "227050"
  },
  {
    "text": "Kind of optimal decision boundary is in exactly the same place. We now have different data. That means that are predicted boundary",
    "start": "227480",
    "end": "234189"
  },
  {
    "text": "It's going to give this instance as wrong because we haven't got a way of incorporating",
    "start": "234440",
    "end": "239260"
  },
  {
    "text": "information from this instance into the original model that we built both of these will create this decrease in accuracy so we can also",
    "start": "239930",
    "end": "247450"
  },
  {
    "text": "Look at the drift in the data streams in terms of the speed they happen so something that would give us an accuracy plot that",
    "start": "247700",
    "end": "253808"
  },
  {
    "text": "Looks like this is called sudden drift we go from straight from one concept in the data stream",
    "start": "253810",
    "end": "258910"
  },
  {
    "text": "So one decision boundary straight to another one another possible thing that could happen",
    "start": "258910",
    "end": "263559"
  },
  {
    "text": "Is that our accuracy looks like this?",
    "start": "264060",
    "end": "266130"
  },
  {
    "text": "So rather than this sudden switch this decision boundary gradually shifts save me your life if we're looking at a very very oversimplified",
    "start": "266350",
    "end": "273959"
  },
  {
    "text": "Intrusion detection system. We have only two features that we're looking at in the original dataset",
    "start": "274300",
    "end": "279479"
  },
  {
    "text": "anything with these features, this is a",
    "start": "280060",
    "end": "282359"
  },
  {
    "text": "security",
    "start": "282940",
    "end": "284290"
  },
  {
    "text": "Problem and intrusion anything on this side is good in this case",
    "start": "284290",
    "end": "287849"
  },
  {
    "text": "What happens is that suddenly there's a new way of attacking the network and so suddenly",
    "start": "287919",
    "end": "293579"
  },
  {
    "text": "What was here is now not good. So we see those patterns and we say ok",
    "start": "294220",
    "end": "299910"
  },
  {
    "text": "No, that counts as an intrusion in this case",
    "start": "299910",
    "end": "302040"
  },
  {
    "text": "what it means is that we see something that we've not seen before so the model hasn't been trained with any similar data and",
    "start": "302320",
    "end": "309899"
  },
  {
    "text": "So it could get it, right it could fall somewhere up here and we correctly say this is bad",
    "start": "310180",
    "end": "315720"
  },
  {
    "text": "but it could also fall in an area that we didn't learn the decision boundary so well, so",
    "start": "316000",
    "end": "321000"
  },
  {
    "text": "Yeah, we get that prediction wrong. We just looked at what?",
    "start": "321820",
    "end": "325349"
  },
  {
    "text": "The problems are with using a single static model when we're dealing with incoming data",
    "start": "325900",
    "end": "330479"
  },
  {
    "text": "Over time the distribution changes and we start to see a decrease in accuracy on whatever model we built",
    "start": "330790",
    "end": "336269"
  },
  {
    "text": "So what happens in kind of a stream machine learning algorithm would be so first of all",
    "start": "337780",
    "end": "345179"
  },
  {
    "text": "You've got X arriving. This is your instance in our previous example, this would just have two values associated with it",
    "start": "345180",
    "end": "351539"
  },
  {
    "text": "What would first happen is we make a prediction? So in the classification example, we classify this. Yes",
    "start": "352000",
    "end": "359220"
  },
  {
    "text": "It's an intrusion. No, it's not intrusion using the current model that we have then what happens is we update whatever model we have",
    "start": "359220",
    "end": "366630"
  },
  {
    "text": "using information from X and we'll talk about some of the ways that this is done in a second and",
    "start": "367270",
    "end": "371520"
  },
  {
    "text": "One of the kind of caveats with stream machine learning is that you need for this to happen you?",
    "start": "371620",
    "end": "376709"
  },
  {
    "text": "need to have",
    "start": "377260",
    "end": "378789"
  },
  {
    "text": "The real class label if you're doing classification",
    "start": "378789",
    "end": "381509"
  },
  {
    "text": "So in order to incorporate information from this instance into whatever model you've got you need to have that label there now in some cases",
    "start": "381550",
    "end": "389550"
  },
  {
    "text": "It's very easy to say we've seen this data. This is what it's classified us",
    "start": "389770",
    "end": "394889"
  },
  {
    "text": "And we do that immediately if we're thinking about",
    "start": "394890",
    "end": "397949"
  },
  {
    "text": "Making weather predictions we can almost immediately say yes. This is what the weather is like it may be a day's delay",
    "start": "399460",
    "end": "405720"
  },
  {
    "text": "But yeah, we can that's pretty immediate thing four things for example for detection",
    "start": "405729",
    "end": "412589"
  },
  {
    "text": "You may see a pattern of data",
    "start": "412590",
    "end": "414590"
  },
  {
    "text": "you may",
    "start": "415930",
    "end": "417039"
  },
  {
    "text": "Predict it is not being fought and then suddenly two days later this person figures out that actually there's something wrong with their bank accounts",
    "start": "417039",
    "end": "424318"
  },
  {
    "text": "They phone up and it does turn out to be fraud",
    "start": "424870",
    "end": "427768"
  },
  {
    "text": "And so we'd only have the label for that data after that has happened",
    "start": "427770",
    "end": "431430"
  },
  {
    "text": "The final bit is to update the model",
    "start": "431639",
    "end": "433799"
  },
  {
    "text": "At this point and so the goal of updating the model over time is so that rather than having a performance plot",
    "start": "434020",
    "end": "440129"
  },
  {
    "text": "That looks like this so we go from 95s and accuracy down to 20% accuracy",
    "start": "440130",
    "end": "444329"
  },
  {
    "text": "We instead end up with something that okay",
    "start": "445330",
    "end": "447719"
  },
  {
    "text": "We may drift a little bit here and have a tiny performance decrease",
    "start": "447719",
    "end": "450029"
  },
  {
    "text": "But the model should very quickly recover back to the original level and we still have a high performance",
    "start": "450030",
    "end": "455519"
  },
  {
    "text": "So that's the goal of this model update. There's various approaches we can take so the first one is explicit drift handling",
    "start": "455520",
    "end": "461219"
  },
  {
    "text": "which means that we first of all detect when a drift happens in the data stream",
    "start": "461800",
    "end": "466138"
  },
  {
    "text": "So to do that",
    "start": "466210",
    "end": "467259"
  },
  {
    "text": "We have drift detection methods and these are usually statistical tests that look at some aspects of the data arriving",
    "start": "467259",
    "end": "473818"
  },
  {
    "text": "So if the distribution of the data we see arriving and the distribution of the classes we see is changing",
    "start": "473979",
    "end": "479879"
  },
  {
    "text": "If morph like that as a drift some of these we'll also look at the performance accuracy of the classifier",
    "start": "480430",
    "end": "484680"
  },
  {
    "text": "So if the classifier performance suddenly drops we can say well, we've probably got a drift here",
    "start": "484779",
    "end": "489869"
  },
  {
    "text": "We need to do something to the model to mitigate this",
    "start": "489870",
    "end": "492630"
  },
  {
    "text": "Who spots that though? Is it, you know, is there an algorithm that actually spots that something's different to what it should be",
    "start": "493330",
    "end": "499590"
  },
  {
    "text": "Yes, so there are various statistical tests that will do this",
    "start": "499900",
    "end": "503370"
  },
  {
    "text": "That will kind of just measure things like the mean of the data arriving and be able to spot things that have changed basically",
    "start": "504250",
    "end": "511380"
  },
  {
    "text": "So yeah, once we detected that a drift has happened",
    "start": "511380",
    "end": "513689"
  },
  {
    "text": "We then want to take some action. The first thing that we could do is we could do a complete replacement of the model",
    "start": "514240",
    "end": "519599"
  },
  {
    "text": "so we get rid of whatever model we had before and",
    "start": "519599",
    "end": "522508"
  },
  {
    "text": "we",
    "start": "523149",
    "end": "524920"
  },
  {
    "text": "We have taken chunk of recent data",
    "start": "524920",
    "end": "526920"
  },
  {
    "text": "And we retrain the model on that and continue using that for predictions until we've hit another drift",
    "start": "527020",
    "end": "531759"
  },
  {
    "text": "This is okay. But it means that we could be getting rid of some information in the previous model",
    "start": "531760",
    "end": "536980"
  },
  {
    "text": "That is maybe still going to be useful in the future",
    "start": "536980",
    "end": "539139"
  },
  {
    "text": "so then there are also methods that we'll look at specific parts of the model and say okay this specific part of it is",
    "start": "539480",
    "end": "545079"
  },
  {
    "text": "Causing a performance decrease. So let's get rid of this we can then",
    "start": "545690",
    "end": "549040"
  },
  {
    "text": "Learn from new instances something to replace this that will do it better basically",
    "start": "549740",
    "end": "553899"
  },
  {
    "text": "so if you think of a decision tree",
    "start": "553900",
    "end": "555190"
  },
  {
    "text": "If you can detect that there are certain branches in that decision tree that are no longer",
    "start": "555190",
    "end": "559360"
  },
  {
    "text": "Making good predictions you can get rid of them and we grow the tree to perform better prune it. Yeah, exactly",
    "start": "559640",
    "end": "566590"
  },
  {
    "text": "It is called pruning. You prune. Yeah, you prune the branches off the tree",
    "start": "566590",
    "end": "569800"
  },
  {
    "text": "There are no longer performing as you want them to the alternative to explicit handling is to do implicit drift handling",
    "start": "570500",
    "end": "576700"
  },
  {
    "text": "So rather than looking at the data or looking at the performance and saying something has changed we need to take action",
    "start": "576770",
    "end": "582670"
  },
  {
    "text": "We're just continually taking action. There are various approaches to implicit drift handling",
    "start": "582700",
    "end": "586780"
  },
  {
    "text": "So the first and probably most simple one is to use a sliding window",
    "start": "586780",
    "end": "589899"
  },
  {
    "text": "So if we imagine we have the data stream with instances arriving like this",
    "start": "590210",
    "end": "594579"
  },
  {
    "text": "We could say we have a sliding window of three instances and we learn a model off of them. We then",
    "start": "594740",
    "end": "600490"
  },
  {
    "text": "Take the next three learn a model off of them. So as each instance arrives we get rid of the oldest instance",
    "start": "601340",
    "end": "606790"
  },
  {
    "text": "And this makes the assumption that the oldest instances are the least relevant. This is usually the case",
    "start": "607370",
    "end": "612700"
  },
  {
    "text": "It's kind of a valid assumption to make so this performs",
    "start": "612700",
    "end": "615910"
  },
  {
    "text": "Okay",
    "start": "615910",
    "end": "616180"
  },
  {
    "text": "the problem with this though is that it kind of provides a crisp cut off points every",
    "start": "616180",
    "end": "619989"
  },
  {
    "text": "Instance within this window is treated with exactly the same",
    "start": "620180",
    "end": "622870"
  },
  {
    "text": "Kind of impacts on the classifier. They were weighted the same so we can introduce instance weighting",
    "start": "623780",
    "end": "628929"
  },
  {
    "text": "So that older instances will have a lower weight their impact on the classifier will be less",
    "start": "629060",
    "end": "633670"
  },
  {
    "text": "So again, the more recent instances will be have the largest impact on the current model",
    "start": "634190",
    "end": "640090"
  },
  {
    "text": "and then again these algorithms that we'll use instance weighting will usually have",
    "start": "640090",
    "end": "644019"
  },
  {
    "text": "Some threshold. So once the weight gets below a certain point they say that's the instance gone",
    "start": "645470",
    "end": "650410"
  },
  {
    "text": "We delete it presumably the windows can be larger or smaller",
    "start": "650410",
    "end": "652988"
  },
  {
    "text": "Yes, so setting the window size is a pretty important parameter",
    "start": "653510",
    "end": "657879"
  },
  {
    "text": "if you have a window, that is too large then",
    "start": "658450",
    "end": "661210"
  },
  {
    "text": "Okay, you're getting a lot of data to construct your model from which is good and cents between learning more data usually good",
    "start": "661760",
    "end": "667360"
  },
  {
    "text": "What it also means is that if there's very short-term drifts",
    "start": "668690",
    "end": "671440"
  },
  {
    "text": "So this drift happens and then we don't learn from that drift if that makes sense because we see that all as one",
    "start": "671480",
    "end": "678819"
  },
  {
    "text": "Chunk of the data again",
    "start": "679040",
    "end": "680380"
  },
  {
    "text": "If you didn't set the window to be too small we can react very well to very short-term drifts in the stream",
    "start": "680380",
    "end": "685960"
  },
  {
    "text": "But you then have a very limited amount of data to work on to construct the model",
    "start": "685960",
    "end": "690819"
  },
  {
    "text": "So there are methods that will automatically adjust the window size. So during times of drift the window size will get smaller",
    "start": "691040",
    "end": "697599"
  },
  {
    "text": "so we want to be very rapidly changing the model and then during times when everything is kind of very stable the",
    "start": "698090",
    "end": "705639"
  },
  {
    "text": "Window will grow to be as large as possible so that we can",
    "start": "706100",
    "end": "709449"
  },
  {
    "text": "Use as much data to construct this model as possible",
    "start": "710480",
    "end": "713170"
  },
  {
    "text": "So the problem weird sliding windows and instance weighting is that you need all of those instances available to construct the model",
    "start": "713180",
    "end": "719949"
  },
  {
    "text": "Continuously. So every time you add a new instance and delete another one you need to reconstruct that model and",
    "start": "720230",
    "end": "725738"
  },
  {
    "text": "So the way we can get around this is by using single pass algorithms",
    "start": "726350",
    "end": "729790"
  },
  {
    "text": "So we see each instance once use it to update the model and then get rid of that instance",
    "start": "729790",
    "end": "734409"
  },
  {
    "text": "It's probably still in long-term permanent storage, but in terms of what is being accessed to construct this algorithm",
    "start": "735650",
    "end": "740530"
  },
  {
    "text": "It's gone now in that respect then you've got information out of the instance, but you don't need the instance itself. Yeah, exactly",
    "start": "741230",
    "end": "748329"
  },
  {
    "text": "So we see the instance we incorporate what we can from it into the current model",
    "start": "748490",
    "end": "752770"
  },
  {
    "text": "We get rid of it and that instances impact is still in the model an example would be a decision tree",
    "start": "752870",
    "end": "757690"
  },
  {
    "text": "So decision trees are kind of constructed by splitting nodes where we're going to get a lot of information gained",
    "start": "757790",
    "end": "762969"
  },
  {
    "text": "from making a split on a certain attribute",
    "start": "763100",
    "end": "765790"
  },
  {
    "text": "So as the data stream changes the information gained that we might get and some of these nodes may change",
    "start": "768110",
    "end": "773079"
  },
  {
    "text": "So if we say get a new instance and it will say okay",
    "start": "773360",
    "end": "776259"
  },
  {
    "text": "Now this actually makes this a split worth making",
    "start": "776260",
    "end": "778569"
  },
  {
    "text": "We can make that split continue growing the tree and then that instance can go we don't need it anymore",
    "start": "778880",
    "end": "783999"
  },
  {
    "text": "But we still have the information from it in our model",
    "start": "784000",
    "end": "786369"
  },
  {
    "text": "So we've got our implicit and explicit drift handling appro. You can also have hybrids approaches",
    "start": "786370",
    "end": "791859"
  },
  {
    "text": "So the explicit drift handling is very good at spotting sudden drift. So anytime there's a sudden change",
    "start": "791860",
    "end": "798070"
  },
  {
    "text": "There'll be a sudden drop in performance that's very easy to pick up on with a simple statistical test",
    "start": "798070",
    "end": "802719"
  },
  {
    "text": "But when we then add in the implicit drift handling on top of that",
    "start": "802820",
    "end": "805989"
  },
  {
    "text": "It means that we can also deal very well with gradual drift",
    "start": "806089",
    "end": "808839"
  },
  {
    "text": "So gradual drift is a bit more difficult to identify",
    "start": "809450",
    "end": "812259"
  },
  {
    "text": "Simply because if you look at the previous instance or like say that 10 previous instances",
    "start": "813800",
    "end": "819190"
  },
  {
    "text": "With a gradual drift, you're not going to see a significant change",
    "start": "819920",
    "end": "822430"
  },
  {
    "text": "So it's a lot harder to detect by combining the implicit and explicit",
    "start": "822740",
    "end": "826419"
  },
  {
    "text": "Drift timing methods we end up with a performance plot. That would look something like this",
    "start": "826910",
    "end": "830649"
  },
  {
    "text": "We maintain pretty good performance for the entire duration of the data that's arriving the problems of a changing data distribution",
    "start": "830750",
    "end": "837279"
  },
  {
    "text": "And not the only problems with streams",
    "start": "837380",
    "end": "839140"
  },
  {
    "text": "and",
    "start": "839140",
    "end": "839839"
  },
  {
    "text": "so if you can imagine a very high volume stream and",
    "start": "839839",
    "end": "843369"
  },
  {
    "text": "high-speed got a lot of data arriving in a very short amount of time if",
    "start": "843500",
    "end": "846969"
  },
  {
    "text": "You take a single instance of that data stream and it takes you like five seconds to process it",
    "start": "847100",
    "end": "852490"
  },
  {
    "text": "But in that 5 seconds, you've had 10 more instances arrive. You're going to get a battery of instances very very quickly",
    "start": "852490",
    "end": "858250"
  },
  {
    "text": "So you need to be the model update stage needs to be very quick to avoid getting any backlog. The second problem is that with?",
    "start": "858380",
    "end": "865510"
  },
  {
    "text": "These algorithms we're not going to have the entire history of the stream available",
    "start": "866390",
    "end": "870339"
  },
  {
    "text": "To create the current model",
    "start": "870860",
    "end": "872779"
  },
  {
    "text": "so the models need to be",
    "start": "872779",
    "end": "874640"
  },
  {
    "text": "For example the single path algorithms that can say we don't need the historical data that we have the information we need from it",
    "start": "874640",
    "end": "880359"
  },
  {
    "text": "But we don't need to access these",
    "start": "880390",
    "end": "882390"
  },
  {
    "text": "Because otherwise, you just end up with huge huge data sets",
    "start": "883160",
    "end": "885459"
  },
  {
    "text": "Having to be used to create these models all the time",
    "start": "886100",
    "end": "888610"
  },
  {
    "text": "And again these streams of potentially infinite",
    "start": "889310",
    "end": "891609"
  },
  {
    "text": "We don't know when they're going to end and we don't know how much data they're going to end up containing",
    "start": "891610",
    "end": "895930"
  },
  {
    "text": "Most of the kind of and well-known machine learning algorithms have been adapted in various ways to be suitable for streams",
    "start": "896120",
    "end": "903440"
  },
  {
    "text": "So they now include update mechanisms. So they're more dynamic methods. So this includes but decision trees neural networks",
    "start": "903440",
    "end": "910280"
  },
  {
    "text": "K nearest neighbors. There's also clustering algorithms have also been adapted. So basically any classic algorithm you can think of there's",
    "start": "910860",
    "end": "918618"
  },
  {
    "text": "Multiple streaming versions of it now. So if you are interested in these streaming algorithms",
    "start": "919140",
    "end": "924050"
  },
  {
    "text": "There's a few bits of software that you could look at",
    "start": "924570",
    "end": "927200"
  },
  {
    "text": "for example, there's the",
    "start": "927750",
    "end": "929640"
  },
  {
    "text": "Mower suite of algorithms which interfaces with the worker data mining tool kit",
    "start": "929640",
    "end": "934460"
  },
  {
    "text": "This is free to download and use and includes implementations of a lot of popular streaming algorithms it also",
    "start": "935490",
    "end": "942799"
  },
  {
    "text": "Includes ways to synthesize data streams so generate essentially a stream of data",
    "start": "943590",
    "end": "948980"
  },
  {
    "text": "That you can then run the algorithms on",
    "start": "949650",
    "end": "951709"
  },
  {
    "text": "and you can control the amount of drift that you get how certain it is and things like that and",
    "start": "951960",
    "end": "956660"
  },
  {
    "text": "that's quite good to play around with to see the effects that",
    "start": "957030",
    "end": "959959"
  },
  {
    "text": "Different kinds of drift can have on accuracy in terms of big data streams",
    "start": "960630",
    "end": "965480"
  },
  {
    "text": "Specifically there's software such as the spark streaming module for Apache spark",
    "start": "966000",
    "end": "970070"
  },
  {
    "text": "well",
    "start": "970380",
    "end": "970880"
  },
  {
    "text": "There's also the more recent Apache flink that are designed to process very high volume data streams very quickly",
    "start": "970880",
    "end": "978020"
  },
  {
    "text": "you just mentioned some yourself where people can download and have a play with but I mean in the real world as an industry and",
    "start": "978420",
    "end": "984229"
  },
  {
    "text": "Websites and things that services that we use every day",
    "start": "984230",
    "end": "986868"
  },
  {
    "text": "He was using these streaming algorithms. And so a lot of the big companies or most companies to be honest will be generating data",
    "start": "987480",
    "end": "994878"
  },
  {
    "text": "Constantly that they want to model. So for example",
    "start": "995550",
    "end": "998359"
  },
  {
    "text": "Amazon recommendations like what to watch next what to buy next they want to",
    "start": "998970",
    "end": "1004628"
  },
  {
    "text": "Understand changing patterns so that they can keep updating",
    "start": "1005060",
    "end": "1007779"
  },
  {
    "text": "Whatever model they have to get the best",
    "start": "1008630",
    "end": "1010630"
  },
  {
    "text": "recommendations again",
    "start": "1011060",
    "end": "1013060"
  },
  {
    "text": "optimizing ads to suggest based on",
    "start": "1013220",
    "end": "1015220"
  },
  {
    "text": "whatever",
    "start": "1015590",
    "end": "1016670"
  },
  {
    "text": "Searching history you have that's another thing that is being done via this. So yeah, there are a lot of real-world applications for this stuff",
    "start": "1016670",
    "end": "1024339"
  },
  {
    "text": "Now I've got the token so I can load a value in add the value emerged or into it and store it back and hand",
    "start": "1025100",
    "end": "1030549"
  },
  {
    "text": "And now I've got the token again",
    "start": "1030800",
    "end": "1032030"
  },
  {
    "text": "I can load something into its my register you and do the computation split across those machines",
    "start": "1032030",
    "end": "1037609"
  },
  {
    "text": "So rather than having one computer going through I don't know a billion database records. You can have each computer going through",
    "start": "1037610",
    "end": "1043819"
  }
]