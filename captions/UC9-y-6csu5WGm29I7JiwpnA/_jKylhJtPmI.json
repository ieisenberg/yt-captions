[
  {
    "text": "There's actually been a debate\nover how I should pronounce this.",
    "start": "280",
    "end": "2280"
  },
  {
    "text": "I call it sequel injection.",
    "start": "2280",
    "end": "3800"
  },
  {
    "text": "The acronym is SQL.",
    "start": "3840",
    "end": "5840"
  },
  {
    "text": "Whichever way you call it,",
    "start": "5840",
    "end": "7340"
  },
  {
    "text": "it's a way to attack websites,",
    "start": "7340",
    "end": "9900"
  },
  {
    "text": "that really shouldn't work any more, but still does.",
    "start": "9900",
    "end": "13160"
  },
  {
    "text": "Sequel or SQL is a language in\nwhich you talk to databases,",
    "start": "15180",
    "end": "19840"
  },
  {
    "text": "and it's fairly...",
    "start": "20420",
    "end": "21580"
  },
  {
    "text": "it's fairly like English actually.\nYou can actually say things like,",
    "start": "21940",
    "end": "24900"
  },
  {
    "text": "\"Select from this table.\"",
    "start": "24900",
    "end": "27520"
  },
  {
    "text": "It's not a complicated language.",
    "start": "28020",
    "end": "28880"
  },
  {
    "text": "There are no great amounts of curly brackets\nand semi-colons and things like that.",
    "start": "28880",
    "end": "33860"
  },
  {
    "text": "It can be.",
    "start": "33860",
    "end": "34840"
  },
  {
    "text": "But equally you can pretty much type\ncommands in near English into it,",
    "start": "34840",
    "end": "39120"
  },
  {
    "text": "and you'll get results back from your database.",
    "start": "39120",
    "end": "41219"
  },
  {
    "text": "And this has existed for years and years and years.",
    "start": "41220",
    "end": "43860"
  },
  {
    "text": "And that was all fine until the Web came along,",
    "start": "44240",
    "end": "47400"
  },
  {
    "text": "and now people are looking at websites and are thinking,",
    "start": "47400",
    "end": "51040"
  },
  {
    "text": "\"These, these need to be hooked up to databases.\"",
    "start": "51040",
    "end": "54020"
  },
  {
    "text": "Because way back, when Tim Berners-Lee\ninvented the World Wide Web,",
    "start": "54020",
    "end": "57820"
  },
  {
    "text": "it was pretty much \"I'm gonna request a document",
    "start": "57820",
    "end": "60239"
  },
  {
    "text": "and you're gonna send that document back to me.\"",
    "start": "60240",
    "end": "61840"
  },
  {
    "text": "Eventually people worked out that",
    "start": "61840",
    "end": "63940"
  },
  {
    "text": "what do you really wanted\nto do was send a document",
    "start": "63940",
    "end": "67619"
  },
  {
    "text": "and have different things come\nback depending on what you sent.",
    "start": "67620",
    "end": "70660"
  },
  {
    "text": "Maybe you could type in a search request,",
    "start": "70660",
    "end": "72520"
  },
  {
    "text": "and that would go to a database\nand pull back something.",
    "start": "72520",
    "end": "75380"
  },
  {
    "text": "That's great, that's brilliant, that's a wonderful invention.",
    "start": "75380",
    "end": "78000"
  },
  {
    "text": "And unfortunately, some programming\nlanguages dealt with this in a sensible way,",
    "start": "79140",
    "end": "83540"
  },
  {
    "text": "and some did not.",
    "start": "84100",
    "end": "85280"
  },
  {
    "text": "And one of the most notable ones\nthat didn't is a language called PHP.",
    "start": "85280",
    "end": "88740"
  },
  {
    "text": "I'm a PHP coder. It's a very\neasy language to write in.",
    "start": "90340",
    "end": "94420"
  },
  {
    "text": "It's a friendly language. I still haven't met any\nother language that lets me develop code",
    "start": "94420",
    "end": "99659"
  },
  {
    "text": "at the speed that I am able to.",
    "start": "99660",
    "end": "102300"
  },
  {
    "text": "It's very fault-tolerant,",
    "start": "103100",
    "end": "104920"
  },
  {
    "text": "within reason.",
    "start": "104920",
    "end": "106119"
  },
  {
    "text": "It doesn't always give you the best\nresults when it does, but, you know,",
    "start": "106120",
    "end": "109140"
  },
  {
    "text": "it's friendly, it's easy to pick up and crucially",
    "start": "109800",
    "end": "112020"
  },
  {
    "text": "you can just write it into a text file, upload\nit to a web server (in most of the world),",
    "start": "112480",
    "end": "116800"
  },
  {
    "text": "and it will just work.",
    "start": "117320",
    "end": "118800"
  },
  {
    "text": "You can type in PHP code and have it just run.",
    "start": "118980",
    "end": "122220"
  },
  {
    "text": "So the barrier to entry is really, really low.",
    "start": "122380",
    "end": "125040"
  },
  {
    "text": "Which in one way is brilliant. It makes web\nprogramming much more accessible.",
    "start": "125580",
    "end": "129360"
  },
  {
    "text": "Facebook was originally written in PHP.",
    "start": "129480",
    "end": "131420"
  },
  {
    "text": "Innumerable things have originally been\nwritten in PHP and loads of things still are.",
    "start": "132760",
    "end": "136400"
  },
  {
    "text": "WordPress still is.",
    "start": "136400",
    "end": "137819"
  },
  {
    "text": "The trouble is, that if you're not careful,\nthere's a lot of ways to go wrong.",
    "start": "138680",
    "end": "142200"
  },
  {
    "text": "And this isn't just PHP,\nbut I'll use it as a example.",
    "start": "142200",
    "end": "144819"
  },
  {
    "text": "You talk to a database by\nissuing a command like this.",
    "start": "144900",
    "end": "147099"
  },
  {
    "text": "SELECT * FROM users",
    "start": "148060",
    "end": "153400"
  },
  {
    "text": "WHERE username equals",
    "start": "153520",
    "end": "155220"
  },
  {
    "text": "\"tom\"",
    "start": "156100",
    "end": "156860"
  },
  {
    "text": "Great!",
    "start": "157100",
    "end": "157760"
  },
  {
    "text": "And the database will send back all the\ndetails it knows about the user called \"tom\".",
    "start": "157760",
    "end": "161860"
  },
  {
    "text": "Brilliant!",
    "start": "161860",
    "end": "162560"
  },
  {
    "text": "But the catch is those quotation marks.",
    "start": "162560",
    "end": "165780"
  },
  {
    "text": "Because if I'm not careful about what I send,",
    "start": "165780",
    "end": "168020"
  },
  {
    "text": "then we can cause some problems.",
    "start": "168280",
    "end": "170400"
  },
  {
    "text": "Let's say, for example, that I have a web\nform that lets me login and I type in tom,",
    "start": "170560",
    "end": "174900"
  },
  {
    "text": "and it sends that and brings back \"tom\".",
    "start": "175060",
    "end": "177560"
  },
  {
    "text": "OK?",
    "start": "177940",
    "end": "178780"
  },
  {
    "text": "Now lets say I type in tom with a quote mark in it,",
    "start": "179040",
    "end": "183120"
  },
  {
    "text": "and if you are not careful, what will happen\nis the language will send something like this.",
    "start": "183820",
    "end": "187460"
  },
  {
    "text": "SELECT * FROM users WHERE username",
    "start": "187460",
    "end": "190740"
  },
  {
    "text": "equals",
    "start": "192260",
    "end": "193120"
  },
  {
    "text": "\"tom\" and then I put a quote mark\nin, and then it puts a quote mark in.",
    "start": "194220",
    "end": "197340"
  },
  {
    "text": "It fails because the quote marks don't match up.",
    "start": "197340",
    "end": "199340"
  },
  {
    "text": "And the whole thing crashes\nand it just sends back an error.",
    "start": "199660",
    "end": "201540"
  },
  {
    "text": "That's mildly annoying,",
    "start": "201680",
    "end": "203280"
  },
  {
    "text": "and a big problem, of course, is putting\nin any text that has quote marks.",
    "start": "203780",
    "end": "207040"
  },
  {
    "text": "The catch is you can do\na lot of damage that way.",
    "start": "208960",
    "end": "212200"
  },
  {
    "text": "Because that language\ndoesn't just have SELECT.",
    "start": "212560",
    "end": "216099"
  },
  {
    "text": "It has INSERT to add new stuff.",
    "start": "216140",
    "end": "218560"
  },
  {
    "text": "It has UPDATE to change stuff.",
    "start": "218560",
    "end": "220540"
  },
  {
    "text": "And it has DELETE to remove stuff.",
    "start": "220540",
    "end": "223159"
  },
  {
    "text": "So if I was to send, say,",
    "start": "224200",
    "end": "225940"
  },
  {
    "text": "a username that was 'tom\";',",
    "start": "225940",
    "end": "230680"
  },
  {
    "text": "and then put another\ncommand in there, like,",
    "start": "230980",
    "end": "233459"
  },
  {
    "text": "'delete everything'.",
    "start": "233460",
    "end": "234680"
  },
  {
    "text": "Its not a literal command,\nbut something like that.",
    "start": "234680",
    "end": "236799"
  },
  {
    "text": "It would work.",
    "start": "237080",
    "end": "237740"
  },
  {
    "text": "So we have a look how that works.",
    "start": "237740",
    "end": "238820"
  },
  {
    "text": "We've got the normal command,\n\"SELECT * FROM users",
    "start": "239020",
    "end": "243560"
  },
  {
    "text": "WHERE username [mumbles] 'tom'\"\"",
    "start": "244240",
    "end": "247020"
  },
  {
    "text": "Long command there.",
    "start": "247380",
    "end": "248760"
  },
  {
    "text": "But when you put in 'tom',\nI'm gonna send that,",
    "start": "248960",
    "end": "251560"
  },
  {
    "text": "and then I'm gonna send this:",
    "start": "252400",
    "end": "254519"
  },
  {
    "text": "DROP ALL DATABASES;",
    "start": "256460",
    "end": "260280"
  },
  {
    "text": "Hit enter, it will get converted\ninto a plain English command,",
    "start": "261700",
    "end": "265940"
  },
  {
    "text": "in SQL language,",
    "start": "265940",
    "end": "267100"
  },
  {
    "text": "it will get sent,",
    "start": "267100",
    "end": "268300"
  },
  {
    "text": "and database will go",
    "start": "268300",
    "end": "269159"
  },
  {
    "text": "\"Well that's exactly what I should do.\"",
    "start": "269160",
    "end": "271000"
  },
  {
    "text": "It's gonna understand that there's a new command at\nthe semi-colon and that it should delete everything.",
    "start": "271680",
    "end": "276080"
  },
  {
    "text": "The main way around it is escaping.",
    "start": "276300",
    "end": "278620"
  },
  {
    "text": "When there is dangerous\ncharacter, like a quote mark,",
    "start": "278620",
    "end": "281780"
  },
  {
    "text": "you put a slash before it.",
    "start": "281900",
    "end": "283900"
  },
  {
    "text": "And by 'you' I mean you, the\nprogrammer writing this.",
    "start": "284280",
    "end": "287040"
  },
  {
    "text": "You go through, and you\nuse a function that says,",
    "start": "287040",
    "end": "288780"
  },
  {
    "text": "\"Everywhere there is a quote\nmark, put this slash before it.",
    "start": "288780",
    "end": "292380"
  },
  {
    "text": "And before you send it to\nthe database, you do that.\"",
    "start": "292640",
    "end": "295080"
  },
  {
    "text": "Input comes in from the user,",
    "start": "295980",
    "end": "297260"
  },
  {
    "text": "add some slashes to it to make it safe,",
    "start": "297260",
    "end": "299180"
  },
  {
    "text": "send it out to the database.",
    "start": "299500",
    "end": "300880"
  },
  {
    "text": "And the database looks at\nthose slashes and goes,",
    "start": "300920",
    "end": "302780"
  },
  {
    "text": "\"Right, every time there's one of\nthose, this thing that's coming next?",
    "start": "302780",
    "end": "305880"
  },
  {
    "text": "Just treat it as a regular quote mark.",
    "start": "306280",
    "end": "308280"
  },
  {
    "text": "Don't treat it anything special, it's\nin the text, just treat it as that.\"",
    "start": "308520",
    "end": "311639"
  },
  {
    "text": "And if you wanna send an actual\nslash, you send two slashes:",
    "start": "312160",
    "end": "315420"
  },
  {
    "text": "the first one to say \"Treat the next\none as a real character\", and then...",
    "start": "315420",
    "end": "318160"
  },
  {
    "text": "It works, but it's clunky.",
    "start": "319460",
    "end": "321600"
  },
  {
    "text": "And for a while, this kind of \"Send\nthe command in plain English\"",
    "start": "322820",
    "end": "325780"
  },
  {
    "text": "was the only way to make things\nwork in a couple of languages,",
    "start": "325780",
    "end": "328880"
  },
  {
    "text": "including PHP, the most commonly used\nweb programming language in the world.",
    "start": "328880",
    "end": "334040"
  },
  {
    "text": "To make this worse, the command to add\nthose slashes was the wonderfully unwieldy:",
    "start": "334740",
    "end": "340020"
  },
  {
    "text": "mySQL (it's the name of the database.)",
    "start": "340140",
    "end": "341840"
  },
  {
    "text": "_real",
    "start": "342140",
    "end": "343160"
  },
  {
    "text": "_escape",
    "start": "343620",
    "end": "344840"
  },
  {
    "text": "_string. And then you\nput whatever text you want there.",
    "start": "345020",
    "end": "347979"
  },
  {
    "text": "\"escape_string\" being what you want it to do,",
    "start": "348300",
    "end": "350280"
  },
  {
    "text": "\"mySQL\" being the name of the database,",
    "start": "350280",
    "end": "352139"
  },
  {
    "text": "and \"real\", because the first one didn't work",
    "start": "352140",
    "end": "354780"
  },
  {
    "text": "and they couldn't change it\nbecause of backwards compatibility.",
    "start": "354880",
    "end": "357660"
  },
  {
    "text": "So, anyone who'd used the original string,\nwhich is, like, more than 10 years ago now,",
    "start": "358820",
    "end": "362460"
  },
  {
    "text": "but anyone who'd used\nthe original form of this:",
    "start": "362460",
    "end": "364860"
  },
  {
    "text": "completely insecure.",
    "start": "365140",
    "end": "367100"
  },
  {
    "text": "Rather than patch that, they\njust added the word \"real\".",
    "start": "367220",
    "end": "369500"
  },
  {
    "text": "Anyone who forgot to add that, or hadn't\nread through all the documentation?",
    "start": "369740",
    "end": "373020"
  },
  {
    "text": "Yep. Anyone can come along and\neffectively delete your database.",
    "start": "373180",
    "end": "376320"
  },
  {
    "text": "Or do more subtle things, like update other people's\naccounts or read other people's passwords.",
    "start": "376320",
    "end": "381780"
  },
  {
    "text": "Because once you've got access to the\ndatabase, if you work out how it works,",
    "start": "382000",
    "end": "386480"
  },
  {
    "text": "there's really not much you can't do.",
    "start": "387120",
    "end": "389479"
  },
  {
    "text": "And the thing is, it is so\neasy to get this wrong.",
    "start": "389880",
    "end": "392420"
  },
  {
    "text": "If you get this wrong just\nonce, anywhere in your code,",
    "start": "392900",
    "end": "396460"
  },
  {
    "text": "and there are lots of really subtle ways that\nI'm not gonna get into to get this wrong,",
    "start": "396460",
    "end": "399699"
  },
  {
    "text": "it's not just a case of\nforgetting to escape quotes.",
    "start": "399700",
    "end": "402240"
  },
  {
    "text": "There are lots of really\nsubtle ways to get it wrong.",
    "start": "402980",
    "end": "404860"
  },
  {
    "text": "If you do that, then your web app is vunerable.",
    "start": "405400",
    "end": "408860"
  },
  {
    "text": "And if someone figures\nout that there's a way in there,",
    "start": "408880",
    "end": "410880"
  },
  {
    "text": "because they try and create a\nusername with a quote mark in it,",
    "start": "411020",
    "end": "413599"
  },
  {
    "text": "then good luck! Say goodbye\nto everyone's passwords.",
    "start": "414420",
    "end": "416800"
  },
  {
    "text": "The way it should be done is\nsomething called prepared statements,",
    "start": "417820",
    "end": "421340"
  },
  {
    "text": "and if you are programming\nanything to do with a database,",
    "start": "421340",
    "end": "423580"
  },
  {
    "text": "you should be using prepared\nstatements right now.",
    "start": "423860",
    "end": "426539"
  },
  {
    "text": "The way they work is...",
    "start": "427480",
    "end": "428840"
  },
  {
    "text": "It's a hack.",
    "start": "429920",
    "end": "431240"
  },
  {
    "text": "It's a hack on top of a hack, because, let's be honest,",
    "start": "431240",
    "end": "433139"
  },
  {
    "text": "sending that kind of plain English SQL\ncommand from a programming language,",
    "start": "433140",
    "end": "437420"
  },
  {
    "text": "that's a hack, and then we've had to put more on top of\nthat, and more on top of that, and more on top of that.",
    "start": "437640",
    "end": "441820"
  },
  {
    "text": "But prepared statements\nat least keeps it safe.",
    "start": "442080",
    "end": "444400"
  },
  {
    "text": "With prepared statements,\nyou send the query.",
    "start": "445080",
    "end": "447280"
  },
  {
    "text": "You send \"SELECT * FROM users WHERE username =\"",
    "start": "447680",
    "end": "457160"
  },
  {
    "text": "and then you just say '?'.",
    "start": "457500",
    "end": "460020"
  },
  {
    "text": "And that question mark, you then later\nsay \"Right, this is the data I'm putting in.",
    "start": "460600",
    "end": "466880"
  },
  {
    "text": "This is not a command.",
    "start": "467140",
    "end": "468700"
  },
  {
    "text": "Don't do anything to this,\nno matter what it looks like.",
    "start": "468880",
    "end": "471600"
  },
  {
    "text": "This is unsafe.",
    "start": "472140",
    "end": "474140"
  },
  {
    "text": "Just take it, treat it very gingerly, store it in the\ndatabase and don't look at it beyond that.\"",
    "start": "474320",
    "end": "480180"
  },
  {
    "text": "It's a little more complicated than that, I am simplifying\nmassively for, you know, talking to a camera.",
    "start": "480540",
    "end": "484480"
  },
  {
    "text": "And if you are web programming,",
    "start": "484800",
    "end": "486000"
  },
  {
    "text": "you should look up the recent security\nguidelines of what you should do, etc, etc, etc.",
    "start": "486000",
    "end": "490460"
  },
  {
    "text": "But,",
    "start": "491040",
    "end": "491800"
  },
  {
    "text": "this is what you should be using.",
    "start": "492120",
    "end": "493600"
  },
  {
    "text": "Because right now,",
    "start": "493800",
    "end": "495120"
  },
  {
    "text": "if you're not using prepared statements, it takes\none mistake, anywhere in your application,",
    "start": "495340",
    "end": "500840"
  },
  {
    "text": "one thing where you've\nforgotten to put a quote mark in,",
    "start": "500840",
    "end": "504000"
  },
  {
    "text": "or messed it up in some subtle way\nthat it uses Unicode characters,",
    "start": "504060",
    "end": "507440"
  },
  {
    "text": "or something wonderfully complicated,",
    "start": "507440",
    "end": "509180"
  },
  {
    "text": "particularly if you're using a Microsoft database.",
    "start": "509180",
    "end": "510840"
  },
  {
    "text": "That's from someone that uses Windows.",
    "start": "510840",
    "end": "512580"
  },
  {
    "text": "If you're not using prepared\nstatements, you are vulnerable,",
    "start": "514440",
    "end": "517039"
  },
  {
    "text": "and you need to fix that.",
    "start": "517480",
    "end": "518899"
  },
  {
    "text": "But in the mean time, as hacks\ngo, there are worse ones.",
    "start": "519100",
    "end": "523539"
  }
]