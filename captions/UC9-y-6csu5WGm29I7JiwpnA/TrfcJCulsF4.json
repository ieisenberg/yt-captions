[
  {
    "text": "What we're going to look at today is to extend this story about stacks and reverse polish a little bit further",
    "start": "159",
    "end": "6779"
  },
  {
    "text": "Many of you said oh, yeah, I",
    "start": "9790",
    "end": "11910"
  },
  {
    "text": "learned about postfix reverse polish when I had an HP calculator and in those",
    "start": "12700",
    "end": "18750"
  },
  {
    "text": "Comments, you've helped to answer some of the questions that other commenters have said well",
    "start": "18970",
    "end": "23970"
  },
  {
    "text": "Why would you ever use reverse polish it does your head in as the saying goes do people really have to think like that",
    "start": "24160",
    "end": "32099"
  },
  {
    "text": "Why do calculator manufacturers and why do the inventors of the PostScript language force it on us and the answer is very simple",
    "start": "32559",
    "end": "39599"
  },
  {
    "text": "it makes",
    "start": "40660",
    "end": "42430"
  },
  {
    "text": "Underpowered machinery a lot easier to work",
    "start": "42430",
    "end": "45629"
  },
  {
    "text": "Well, if the machinery makes you do all the hard work of converting infix",
    "start": "45629",
    "end": "51599"
  },
  {
    "text": "Which you're much more comfortable with into reverse polish and it doesn't have to do that job",
    "start": "51760",
    "end": "57570"
  },
  {
    "text": "That's why relatively low-powered",
    "start": "57789",
    "end": "59819"
  },
  {
    "text": "calculators could do so much and it's why looking back at my other video about",
    "start": "60489",
    "end": "65279"
  },
  {
    "text": "The desktop publishing revolution at the end of that. I tried to make clear that the PostScript interpreter was running on",
    "start": "65950",
    "end": "73618"
  },
  {
    "text": "Underpowered hardware and one of the reasons it could succeed in doing that is again, it makes you do all the hard work",
    "start": "74140",
    "end": "81330"
  },
  {
    "text": "I think it's interesting its own right and it's also interesting when you're trying to delve a little bit more",
    "start": "81330",
    "end": "86909"
  },
  {
    "text": "into",
    "start": "87490",
    "end": "88540"
  },
  {
    "text": "Compilers interpreters and computer science general principles because under the hood these kind of issues",
    "start": "88540",
    "end": "95279"
  },
  {
    "text": "About stacks and trees are utterly utterly",
    "start": "95799",
    "end": "99569"
  },
  {
    "text": "foundational in the whole of our subject today",
    "start": "100990",
    "end": "103379"
  },
  {
    "text": "I want to get in properly into trees and show you how fundamental they are",
    "start": "103509",
    "end": "108569"
  },
  {
    "text": "And an ideal way to do it is to pick up from the end of my stacks and reverse polish video",
    "start": "108570",
    "end": "114689"
  },
  {
    "text": "Which you might want to look at first if you haven't already",
    "start": "114850",
    "end": "117210"
  },
  {
    "text": "Pick up from where we left off and say what's the fundamental?",
    "start": "118060",
    "end": "121409"
  },
  {
    "text": "Story behind all of this and the answer is it's the tree shape",
    "start": "121780",
    "end": "126030"
  },
  {
    "text": "I started off by",
    "start": "126030",
    "end": "127929"
  },
  {
    "text": "writing down the arithmetic expression A plus B multiplied by sin if you accept",
    "start": "127929",
    "end": "133938"
  },
  {
    "text": "The multiplied must be done first then",
    "start": "134069",
    "end": "136789"
  },
  {
    "text": "the reverse polish notation",
    "start": "137939",
    "end": "139939"
  },
  {
    "text": "It would of course be a",
    "start": "141689",
    "end": "143689"
  },
  {
    "text": "B C Star Plus remember our PN",
    "start": "144840",
    "end": "150019"
  },
  {
    "text": "Reverse polish. You can call it postfix. Also if you want to",
    "start": "150750",
    "end": "155269"
  },
  {
    "text": "fair enough that somehow you've got to",
    "start": "155909",
    "end": "158749"
  },
  {
    "text": "know which of the high priority operators in which of the low priority operators in other words, which ones get done first and",
    "start": "159329",
    "end": "166008"
  },
  {
    "text": "Multiply and divide are of the same precedence as each other. They're high precedence. They get done first",
    "start": "166739",
    "end": "173089"
  },
  {
    "text": "But what happens if you've got a string of the stuff all of which involves exactly the same operator?",
    "start": "173090",
    "end": "180799"
  },
  {
    "text": "Do you do it left to right or right to left? Does it matter let's take a very very simple case",
    "start": "182549",
    "end": "189379"
  },
  {
    "text": "27 + 9 + the range should it be add?",
    "start": "191310",
    "end": "196970"
  },
  {
    "text": "nine to 27 first and then add three or should it be",
    "start": "197909",
    "end": "203179"
  },
  {
    "text": "keep the 27 and add it to what you get when you",
    "start": "204150",
    "end": "208579"
  },
  {
    "text": "Do the 9 + 3 addition first? This is called",
    "start": "209099",
    "end": "212749"
  },
  {
    "text": "left",
    "start": "213750",
    "end": "215750"
  },
  {
    "text": "Association this one of course is called right associativity or right?",
    "start": "215760",
    "end": "221030"
  },
  {
    "text": "Association and look with plus as ever. There's a very little problem so it doesn't matter at all. Ah",
    "start": "221939",
    "end": "229008"
  },
  {
    "text": "But here comes the one where it massively matters",
    "start": "230009",
    "end": "233569"
  },
  {
    "text": "How about 27 divided by 9?",
    "start": "234599",
    "end": "237858"
  },
  {
    "text": "divided by 3",
    "start": "238590",
    "end": "239849"
  },
  {
    "text": "Do you do that and then that all your group here?",
    "start": "239849",
    "end": "243858"
  },
  {
    "text": "Well, the default is always the left",
    "start": "244409",
    "end": "247548"
  },
  {
    "text": "Association you go left to right",
    "start": "248370",
    "end": "251000"
  },
  {
    "text": "Try this only calculator. If you find that that is exactly what it does",
    "start": "251729",
    "end": "255319"
  },
  {
    "text": "27 divided by 9 is 3 3 divided by 3",
    "start": "255900",
    "end": "258859"
  },
  {
    "text": "Actually gives us an integer answer here a 1 if you did it the other way of",
    "start": "259259",
    "end": "263959"
  },
  {
    "text": "27",
    "start": "264659",
    "end": "266190"
  },
  {
    "text": "divided by",
    "start": "266190",
    "end": "268190"
  },
  {
    "text": "9/3",
    "start": "268910",
    "end": "270020"
  },
  {
    "text": "The answer then would be nine",
    "start": "270020",
    "end": "272469"
  },
  {
    "text": "The ordering in which you do things is twofold",
    "start": "272990",
    "end": "275319"
  },
  {
    "text": "First of all, you do your high priority things first",
    "start": "275590",
    "end": "278470"
  },
  {
    "text": "and",
    "start": "278470",
    "end": "279170"
  },
  {
    "text": "then if you've got things of equal priority strung out in front of you you do them left to right it all comes down to",
    "start": "279170",
    "end": "287110"
  },
  {
    "text": "Trees back to the beginning a plus B times C",
    "start": "287750",
    "end": "292240"
  },
  {
    "text": "What?",
    "start": "293360",
    "end": "295099"
  },
  {
    "text": "Diagram could I draw that makes it happen correctly?",
    "start": "295100",
    "end": "298029"
  },
  {
    "text": "In other words makes the multiply be done first and the answer is draw a tree",
    "start": "298030",
    "end": "303940"
  },
  {
    "text": "draw yourself a tree",
    "start": "304370",
    "end": "306370"
  },
  {
    "text": "House ever it's computer scientists",
    "start": "306890",
    "end": "310059"
  },
  {
    "text": "We all know now computer scientist trees have their route at the top and the leaves down at the bottom",
    "start": "310060",
    "end": "314980"
  },
  {
    "text": "Here's a leaf the a upper end and here down by the multiply is the B and the C and you can very easily",
    "start": "314980",
    "end": "322719"
  },
  {
    "text": "see",
    "start": "323090",
    "end": "324169"
  },
  {
    "text": "Why that's the case",
    "start": "324170",
    "end": "326170"
  },
  {
    "text": "particularly if you think about this whole thing as being",
    "start": "326270",
    "end": "329979"
  },
  {
    "text": "driven by the",
    "start": "330560",
    "end": "332210"
  },
  {
    "text": "Operands not the operators",
    "start": "332210",
    "end": "334358"
  },
  {
    "text": "imagine that the a is knocking on the door the plus C go on add me to something and the plus is",
    "start": "334760",
    "end": "339909"
  },
  {
    "text": "kind of saying well",
    "start": "340160",
    "end": "341050"
  },
  {
    "text": "I can't because I've got to know what the right operand is and I can't",
    "start": "341050",
    "end": "344800"
  },
  {
    "text": "know what the right up around is until it reports back to me and says what the",
    "start": "345110",
    "end": "350469"
  },
  {
    "text": "intermediate answer from its expression is so again think of the be",
    "start": "351290",
    "end": "355839"
  },
  {
    "text": "Interrupting the multiply operator and say we ready we're ready multiplies together",
    "start": "356780",
    "end": "361239"
  },
  {
    "text": "So the multiplier does its work and it then passes its results up the tree to the plus that can finally do the whole thing",
    "start": "361460",
    "end": "369039"
  },
  {
    "text": "So therefore if that's the shape for that one",
    "start": "369370",
    "end": "372488"
  },
  {
    "text": "What about the shape for this one? The thing that gets done last is the operator at the top of the tree?",
    "start": "373370",
    "end": "379960"
  },
  {
    "text": "Look the different trees",
    "start": "380990",
    "end": "382990"
  },
  {
    "text": "the reason",
    "start": "383630",
    "end": "385460"
  },
  {
    "text": "That this gets different reverse polish gets a different answer even in the vast majority of cases here",
    "start": "385460",
    "end": "391509"
  },
  {
    "text": "is that the tree shapes are different and once you've said ah",
    "start": "391510",
    "end": "396730"
  },
  {
    "text": "So it's all down to the tree shape. I draw. Yes it is because here comes even more hidden fat chick from",
    "start": "397710",
    "end": "405530"
  },
  {
    "text": "the tree",
    "start": "406169",
    "end": "407729"
  },
  {
    "text": "You can work out what the forward polish and that the reverse",
    "start": "407729",
    "end": "411769"
  },
  {
    "text": "Polish will be you don't need to just pick it out of thin air as I did last time start here",
    "start": "411900",
    "end": "417738"
  },
  {
    "text": "You go anti-clockwise",
    "start": "418259",
    "end": "420259"
  },
  {
    "text": "Walk around it anti-clockwise as I start this walk I keep looking to my left if I see an operator",
    "start": "421259",
    "end": "428119"
  },
  {
    "text": "Can I write it down? No, you can't you can't write down an operator until you've seen all of its operands in all their glory",
    "start": "428460",
    "end": "436100"
  },
  {
    "text": "However, as you walk around here",
    "start": "437100",
    "end": "439699"
  },
  {
    "text": "Looking to the left all the time hug the tree shape as closely as you can. Look to your left. What do you see?",
    "start": "440250",
    "end": "446690"
  },
  {
    "text": "You see the upper and a you can always",
    "start": "447210",
    "end": "449988"
  },
  {
    "text": "Write down and up around come round here",
    "start": "450599",
    "end": "452959"
  },
  {
    "text": "Hug the tree all the time looking to your left up there. Look you see the operator. Can you write it down yet?",
    "start": "453570",
    "end": "460639"
  },
  {
    "text": "No, you can't you've seen it's left up around but you haven't seen it's right up around so you still can't write it down",
    "start": "460770",
    "end": "466250"
  },
  {
    "text": "Hug the tree look to your left. Oh, there's a new operator multiplying. Can you write it down? Nope?",
    "start": "466830",
    "end": "473180"
  },
  {
    "text": "You haven't seen its operands so you can't write it down",
    "start": "473430",
    "end": "476720"
  },
  {
    "text": "Hug the tree keep looking to the left. You see the bee. Can you write it down?",
    "start": "477479",
    "end": "481939"
  },
  {
    "text": "Yes",
    "start": "481940",
    "end": "482360"
  },
  {
    "text": "You can always write an opera Mandor down round the corner still hugging the tree",
    "start": "482360",
    "end": "486020"
  },
  {
    "text": "See the multiply looking to the left for the second time",
    "start": "486419",
    "end": "489679"
  },
  {
    "text": "Still can't write it down. You've seen one operand you haven't seen the other. So ignore it for the moment",
    "start": "490199",
    "end": "494598"
  },
  {
    "text": "Look to the left. You see the sea you can write it down",
    "start": "495449",
    "end": "498079"
  },
  {
    "text": "Nearly round the tree now come around here. Remember always looking to the left. Ah",
    "start": "498900",
    "end": "503780"
  },
  {
    "text": "Now you see the star. Can I write it down? Yes, because I've seen both of its operands",
    "start": "504780",
    "end": "509659"
  },
  {
    "text": "Finally here are a big take up at the top. You look to the left. You see the plus. Can you write it down?",
    "start": "511110",
    "end": "517550"
  },
  {
    "text": "Yes, you can because you've visited all of its operand structure. It's as simple as that",
    "start": "517830",
    "end": "522679"
  },
  {
    "text": "So if you've got the tree, you've got the postfix",
    "start": "522680",
    "end": "525140"
  },
  {
    "text": "You might like to try walking round the tree",
    "start": "525839",
    "end": "528859"
  },
  {
    "text": "wise and doing the same thing, but by looking to the right all the time as the clockwise Traverse gives you",
    "start": "529740",
    "end": "536159"
  },
  {
    "text": "forward",
    "start": "536800",
    "end": "537970"
  },
  {
    "text": "polish prefix in",
    "start": "537970",
    "end": "539970"
  },
  {
    "text": "Reverse and just to do your heading",
    "start": "540310",
    "end": "543089"
  },
  {
    "text": "to be very clear that forward polish in Reverse is not the same as",
    "start": "543430",
    "end": "549450"
  },
  {
    "text": "reverse polish, which is that",
    "start": "550029",
    "end": "552869"
  },
  {
    "text": "You get the tree?",
    "start": "553450",
    "end": "555190"
  },
  {
    "text": "You can derive implicitly or explicitly",
    "start": "555190",
    "end": "557190"
  },
  {
    "text": "postfix for use internally in working out your register usage or",
    "start": "558310",
    "end": "563039"
  },
  {
    "text": "if you're in an interpreter for",
    "start": "563620",
    "end": "565620"
  },
  {
    "text": "Implementing execution on the stack trees lead to reverse polish",
    "start": "566140",
    "end": "570359"
  },
  {
    "text": "Quite automatically just by walking round them in the correct way",
    "start": "570820",
    "end": "574349"
  },
  {
    "text": "If you get a choice of either that pair or that pair of thirds it doesn't matter wait",
    "start": "579490",
    "end": "585389"
  },
  {
    "text": "The system works look at that",
    "start": "588550",
    "end": "590550"
  }
]