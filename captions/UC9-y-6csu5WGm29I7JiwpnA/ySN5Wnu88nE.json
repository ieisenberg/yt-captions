[
  {
    "start": "0",
    "end": "17000"
  },
  {
    "text": "In the last video, if I remember",
    "start": "0",
    "end": "1860"
  },
  {
    "text": "correctly 'cause it was a good month ago now.",
    "start": "1860",
    "end": "4467"
  },
  {
    "text": "I drew a graph out and we",
    "start": "4467",
    "end": "6080"
  },
  {
    "text": "worked through it with Dijkstra, and at the end",
    "start": "6080",
    "end": "9180"
  },
  {
    "text": "I pointed out a couple of problems.",
    "start": "9180",
    "end": "10200"
  },
  {
    "text": "So let's just remind ourselves about",
    "start": "10200",
    "end": "11309"
  },
  {
    "text": "those problems and then when we'll talk about A star",
    "start": "11309",
    "end": "13920"
  },
  {
    "text": "we can see how it addresses it.",
    "start": "13920",
    "end": "17089"
  },
  {
    "start": "17000",
    "end": "68000"
  },
  {
    "text": "The problem is with Dijkstra that it will follow",
    "start": "17160",
    "end": "19289"
  },
  {
    "text": "the path currently shortest and that -- and",
    "start": "19289",
    "end": "22230"
  },
  {
    "text": "doesn't pay any attention to what",
    "start": "22230",
    "end": "23490"
  },
  {
    "text": "direction it's going.",
    "start": "23490",
    "end": "24359"
  },
  {
    "text": "So if i'm coming down here to my end goal,",
    "start": "24359",
    "end": "26220"
  },
  {
    "text": "and I'm starting up here, that's fine if",
    "start": "26220",
    "end": "29099"
  },
  {
    "text": "the weights are all the same because it will",
    "start": "29099",
    "end": "30269"
  },
  {
    "text": "look at it up here and there, but I'll",
    "start": "30269",
    "end": "31650"
  },
  {
    "text": "get there quite quick.",
    "start": "31650",
    "end": "32668"
  },
  {
    "text": "The problem is of course if you've got",
    "start": "32669",
    "end": "33629"
  },
  {
    "text": "the map of the UK and it's searching quickly",
    "start": "33630",
    "end": "35640"
  },
  {
    "text": "down all nice motorways when in",
    "start": "35640",
    "end": "38040"
  },
  {
    "text": "fact actually we don't need to go down",
    "start": "38040",
    "end": "39600"
  },
  {
    "text": "the motorways because it's a country road drive",
    "start": "39600",
    "end": "41730"
  },
  {
    "text": "or something like this. Now, course in",
    "start": "41730",
    "end": "43170"
  },
  {
    "text": "practice, it wouldn't take very long",
    "start": "43170",
    "end": "44820"
  },
  {
    "text": "still because your computer is quite fast",
    "start": "44820",
    "end": "47190"
  },
  {
    "text": "but the whole point of these algorithms",
    "start": "47190",
    "end": "48570"
  },
  {
    "text": "is they're quick and you can imagine if you're",
    "start": "48570",
    "end": "50610"
  },
  {
    "text": "writing a sat-nav, you don't want it to",
    "start": "50610",
    "end": "52770"
  },
  {
    "text": "take a long time churning for the roads unnecessarily.",
    "start": "52770",
    "end": "56097"
  },
  {
    "text": "The other problem is,",
    "start": "56097",
    "end": "57329"
  },
  {
    "text": "if your graph doesn't look like a map because,",
    "start": "57329",
    "end": "60120"
  },
  {
    "text": "you know, in some sense the UK road network",
    "start": "60120",
    "end": "62190"
  },
  {
    "text": "isn't quite sparse but the most of the",
    "start": "62190",
    "end": "64040"
  },
  {
    "text": "country doesn't have a road on it. It's",
    "start": "64049",
    "end": "66080"
  },
  {
    "text": "mostly fields and sheep and stuff. But,",
    "start": "66090",
    "end": "68520"
  },
  {
    "text": "you know, all houses. If you have a",
    "start": "68520",
    "end": "71250"
  },
  {
    "text": "situation where you've got a quite a",
    "start": "71250",
    "end": "73140"
  },
  {
    "text": "dense network like this, so I guess you",
    "start": "73140",
    "end": "76650"
  },
  {
    "text": "could say a bit like Manhattan. But also just,",
    "start": "76650",
    "end": "79103"
  },
  {
    "text": "you know, another problem where your",
    "start": "79103",
    "end": "80969"
  },
  {
    "text": "graph structure is different. So if",
    "start": "80970",
    "end": "82200"
  },
  {
    "text": "you're looking through an image or",
    "start": "82200",
    "end": "83880"
  },
  {
    "text": "something like this. I'm starting up here",
    "start": "83880",
    "end": "85590"
  },
  {
    "text": "and cross that out. There we are and I'm",
    "start": "85590",
    "end": "88048"
  },
  {
    "text": "finishing down,",
    "start": "88049",
    "end": "89100"
  },
  {
    "text": "I don't know... here. Let's remember that",
    "start": "89100",
    "end": "91229"
  },
  {
    "text": "Dijkstra follows the shortest path based",
    "start": "91229",
    "end": "93359"
  },
  {
    "text": "on the distance of each of these. Now, if",
    "start": "93360",
    "end": "95700"
  },
  {
    "text": "it is just a uniform grid, let's",
    "start": "95700",
    "end": "97710"
  },
  {
    "text": "say, we have no interesting information",
    "start": "97710",
    "end": "99150"
  },
  {
    "text": "to provide for these weights and all",
    "start": "99150",
    "end": "101490"
  },
  {
    "text": "these weights say one so it's just",
    "start": "101490",
    "end": "103470"
  },
  {
    "text": "gonna to flood fill from here. It's gonna",
    "start": "103470",
    "end": "105220"
  },
  {
    "text": "go here, and then here and then to",
    "start": "105220",
    "end": "106799"
  },
  {
    "text": "these three and then to these four, and so on and",
    "start": "106799",
    "end": "110009"
  },
  {
    "text": "that's not very optimal. Especially",
    "start": "110009",
    "end": "112229"
  },
  {
    "text": "if we just literally want to go",
    "start": "112229",
    "end": "113548"
  },
  {
    "text": "straight down here, like this. So we want to",
    "start": "113549",
    "end": "115409"
  },
  {
    "text": "build in some kind of idea of, but not",
    "start": "115409",
    "end": "118700"
  },
  {
    "text": "necessarily the direction we're heading but we are",
    "start": "118700",
    "end": "120240"
  },
  {
    "text": "at least going towards our goal, so we can",
    "start": "120240",
    "end": "122579"
  },
  {
    "text": "aim for it. And that's what A star does.",
    "start": "122580",
    "end": "125100"
  },
  {
    "text": "A star is basically a small extension to",
    "start": "125100",
    "end": "127110"
  },
  {
    "text": "Dijkstra that builds in a heuristic that",
    "start": "127110",
    "end": "129270"
  },
  {
    "text": "says we're getting a bit closer.",
    "start": "129270",
    "end": "131039"
  },
  {
    "start": "131000",
    "end": "256000"
  },
  {
    "text": "This is our nice screwed up graph from last time",
    "start": "131039",
    "end": "133620"
  },
  {
    "text": "and this is our nice new fresh graph",
    "start": "133620",
    "end": "135510"
  },
  {
    "text": "that I've done which is, topologically exactly",
    "start": "135510",
    "end": "138090"
  },
  {
    "text": "the same. I may have traced it. So, we",
    "start": "138090",
    "end": "140700"
  },
  {
    "text": "could do Dijkstra on this.",
    "start": "140700",
    "end": "141720"
  },
  {
    "text": "I've got my little cards for my priority queue.",
    "start": "141720",
    "end": "145000"
  },
  {
    "text": "I've reminded myself how the end condition is",
    "start": "145000",
    "end": "147780"
  },
  {
    "text": "so I can end it properly.",
    "start": "147780",
    "end": "149780"
  },
  {
    "text": "That's all fine. What we want to do is extend this",
    "start": "150480",
    "end": "152659"
  },
  {
    "text": "to A star. Now, A star is basically exactly the",
    "start": "152670",
    "end": "156329"
  },
  {
    "text": "same as Dijkstra, except it has an",
    "start": "156329",
    "end": "158099"
  },
  {
    "text": "additional heuristic that is how far do",
    "start": "158140",
    "end": "160100"
  },
  {
    "text": "we have to go. And, in this case,",
    "start": "160200",
    "end": "165140"
  },
  {
    "text": "a pretty reasonable heuristic to come up with",
    "start": "165200",
    "end": "166230"
  },
  {
    "text": "will be literal Euclidean distance",
    "start": "166230",
    "end": "168450"
  },
  {
    "text": "of how far we have to go. So, in this case",
    "start": "168450",
    "end": "169950"
  },
  {
    "text": "S to E will be that far, C to E will be that far.",
    "start": "169950",
    "end": "172900"
  },
  {
    "text": "And so on. I couldn't think of a good way of",
    "start": "172900",
    "end": "175230"
  },
  {
    "text": "calculating this without literally just",
    "start": "175230",
    "end": "176540"
  },
  {
    "text": "measuring it. So I got my, got my...",
    "start": "176549",
    "end": "178799"
  },
  {
    "text": "dainty 10 meter tape measure,",
    "start": "178799",
    "end": "184140"
  },
  {
    "text": "which is a little bit overkill. But we'll,",
    "start": "184140",
    "end": "185909"
  },
  {
    "text": "you know, make it work. So this is all a bit odd.",
    "start": "185909",
    "end": "191040"
  },
  {
    "text": "I don't use tape measures as much as you can",
    "start": "191040",
    "end": "193200"
  },
  {
    "text": "imagine 'cause I mostly sit at a desk",
    "start": "193200",
    "end": "194519"
  },
  {
    "text": "and do typing. This is a tape measure in",
    "start": "194519",
    "end": "196620"
  },
  {
    "text": "centimeters and inches. Let's use inches today.",
    "start": "196620",
    "end": "198870"
  },
  {
    "text": "Alright.",
    "start": "198870",
    "end": "199918"
  },
  {
    "text": "Imperial, woo. So I'm gonna literally",
    "start": "199919",
    "end": "202650"
  },
  {
    "text": "measure the amount of inches from S to E,",
    "start": "202650",
    "end": "204840"
  },
  {
    "text": "and then A to E, and then I'm just gonna put",
    "start": "204840",
    "end": "206910"
  },
  {
    "text": "this on here now. And this is where",
    "start": "206910",
    "end": "208260"
  },
  {
    "text": "you fast forward. So, I'm gonna use it,",
    "start": "208260",
    "end": "210120"
  },
  {
    "text": "the black pen for this. So let's say this is 10.",
    "start": "210120",
    "end": "212970"
  },
  {
    "text": "There. This is harder than I thought it would be.",
    "start": "212970",
    "end": "217680"
  },
  {
    "text": "I haven't got enough hands.",
    "start": "217680",
    "end": "218879"
  },
  {
    "text": "8... 6... I'm rounding up a bit",
    "start": "218880",
    "end": "221280"
  },
  {
    "text": "it's not very accurate. 4... So the green",
    "start": "221280",
    "end": "224250"
  },
  {
    "text": "ones are our step distances from Dijkstra and the",
    "start": "224250",
    "end": "226169"
  },
  {
    "text": "black ones are measured inches.",
    "start": "226169",
    "end": "228920"
  },
  {
    "text": "Also 3, 6, 7. We're getting there. 6 again.",
    "start": "228920",
    "end": "234500"
  },
  {
    "text": "Alright. That's me doing my workman's... Now:",
    "start": "234500",
    "end": "238020"
  },
  {
    "text": "we've got exactly the same graph as before but now we",
    "start": "238020",
    "end": "239960"
  },
  {
    "text": "have some measure of the distance to our thing.",
    "start": "239970",
    "end": "242129"
  },
  {
    "text": "It's not a very good heuristic in",
    "start": "242129",
    "end": "244530"
  },
  {
    "text": "a sense that my measuring is not very",
    "start": "244530",
    "end": "246269"
  },
  {
    "text": "accurate and for A star to work really",
    "start": "246269",
    "end": "248760"
  },
  {
    "text": "well, you have to have a consistent",
    "start": "248760",
    "end": "250349"
  },
  {
    "text": "metric and you have to, not",
    "start": "250349",
    "end": "253019"
  },
  {
    "text": "overestimate how far you've got to go.",
    "start": "253019",
    "end": "254519"
  },
  {
    "text": "Things like this... But, we'll just",
    "start": "254519",
    "end": "256829"
  },
  {
    "text": "hope it works, sort of work itself out....",
    "start": "256829",
    "end": "259660"
  },
  {
    "text": "You know, it can't be any worse than me",
    "start": "259660",
    "end": "262400"
  },
  {
    "text": "you know, doing it by hand anyway. So, recall",
    "start": "262409",
    "end": "264750"
  },
  {
    "text": "when we did Dijkstra. What we had was we had",
    "start": "264750",
    "end": "267030"
  },
  {
    "text": "some queue here like this. These had the current",
    "start": "267030",
    "end": "269790"
  },
  {
    "text": "distance from the start to these nodes.",
    "start": "269790",
    "end": "272190"
  },
  {
    "text": "And if one of the nodes had a",
    "start": "272190",
    "end": "273690"
  },
  {
    "text": "shorter path, it would move up the queue and",
    "start": "273690",
    "end": "275880"
  },
  {
    "text": "then when we wanted to expand a node we take it",
    "start": "275880",
    "end": "277830"
  },
  {
    "text": "off the queue. A star works exactly the",
    "start": "277830",
    "end": "279659"
  },
  {
    "text": "same way, except the distance isn't what",
    "start": "279660",
    "end": "282330"
  },
  {
    "text": "we ordered them by anymore. It's a",
    "start": "282330",
    "end": "284250"
  },
  {
    "text": "distance of the path plus how far they",
    "start": "284250",
    "end": "286260"
  },
  {
    "text": "have to go.",
    "start": "286260",
    "end": "287310"
  },
  {
    "text": "so for example. B, the distance is",
    "start": "287310",
    "end": "290340"
  },
  {
    "text": "going to be 2 plus 7 which is 9. Alright.",
    "start": "290340",
    "end": "293250"
  },
  {
    "text": "So B will have a value of 9 on this queue.",
    "start": "293250",
    "end": "295080"
  },
  {
    "text": "And the idea is that if something has a",
    "start": "295080",
    "end": "297539"
  },
  {
    "text": "long way to go,",
    "start": "297540",
    "end": "298950"
  },
  {
    "text": "it's going to receive a higher weight",
    "start": "298950",
    "end": "300480"
  },
  {
    "text": "and be further down the queue and",
    "start": "300480",
    "end": "301800"
  },
  {
    "text": "expanded later. What it will do is",
    "start": "301800",
    "end": "303569"
  },
  {
    "text": "prioritize nodes, that are going roughly",
    "start": "303570",
    "end": "306720"
  },
  {
    "text": "in the right direction, unless... I mean it will",
    "start": "306720",
    "end": "309210"
  },
  {
    "text": "still go down really good paths, really",
    "start": "309210",
    "end": "310919"
  },
  {
    "text": "short paths. But not at the expense of",
    "start": "310919",
    "end": "313650"
  },
  {
    "text": "everything else, it's the idea.",
    "start": "313650",
    "end": "315479"
  },
  {
    "text": "OK, so let's run through this just like we did",
    "start": "315480",
    "end": "317100"
  },
  {
    "text": "with Dijkstra and hopefully I won't make",
    "start": "317100",
    "end": "318690"
  },
  {
    "text": "any mistakes. People will very kindly",
    "start": "318690",
    "end": "321360"
  },
  {
    "text": "point them out if I do. Oh look, look. Checkered flag.",
    "start": "321360",
    "end": "323668"
  },
  {
    "text": "This is why I don't draw things, because",
    "start": "323669",
    "end": "325680"
  },
  {
    "text": "it's not it's never good... Right,",
    "start": "325680",
    "end": "327330"
  },
  {
    "text": "okay, we're starting at S. I'm not going to",
    "start": "327330",
    "end": "329849"
  },
  {
    "text": "draw the infinity symbols on because we",
    "start": "329850",
    "end": "331380"
  },
  {
    "text": "know that all of these nodes start with",
    "start": "331380",
    "end": "333540"
  },
  {
    "text": "a distance of infinity because we",
    "start": "333540",
    "end": "335280"
  },
  {
    "text": "don't know how far the path is. In Dijkstra,",
    "start": "335280",
    "end": "337680"
  },
  {
    "text": "we store the distance to each path, and",
    "start": "337680",
    "end": "340440"
  },
  {
    "text": "we also ordered by that distance. We've",
    "start": "340440",
    "end": "342150"
  },
  {
    "text": "now got two separate measures we're",
    "start": "342150",
    "end": "343590"
  },
  {
    "text": "measuring in A star: one is the distance",
    "start": "343590",
    "end": "345389"
  },
  {
    "text": "to the node, and one is the distance to",
    "start": "345390",
    "end": "347610"
  },
  {
    "text": "a node and any remaining distance. So, we",
    "start": "347610",
    "end": "350400"
  },
  {
    "text": "kind of need to have two values on each",
    "start": "350400",
    "end": "351780"
  },
  {
    "text": "of these things. So I'm going to try and",
    "start": "351780",
    "end": "353340"
  },
  {
    "text": "keep the colors the same so that we",
    "start": "353340",
    "end": "354750"
  },
  {
    "text": "don't lose track.",
    "start": "354750",
    "end": "355680"
  },
  {
    "text": "So anything I draw in green is",
    "start": "355680",
    "end": "357000"
  },
  {
    "text": "going to be this 'g' cost function which",
    "start": "357000",
    "end": "359310"
  },
  {
    "text": "is the distance to a current node,",
    "start": "359310",
    "end": "361680"
  },
  {
    "text": "so for C that would be 3.",
    "start": "361680",
    "end": "363120"
  },
  {
    "text": "And then, in black I'm going to have 3",
    "start": "363120",
    "end": "365400"
  },
  {
    "text": "plus 8 which is the sort of combined",
    "start": "365400",
    "end": "367410"
  },
  {
    "text": "cost; the thing we're actually ordering by.",
    "start": "367410",
    "end": "369000"
  },
  {
    "text": "OK, so the path cost to S is 0 and the sort",
    "start": "369000",
    "end": "373200"
  },
  {
    "text": "of distance to go is 10, but it won't",
    "start": "373200",
    "end": "375120"
  },
  {
    "text": "matter because S is the only thing in",
    "start": "375120",
    "end": "376440"
  },
  {
    "text": "our queue. So we'll put S in the queue but everything",
    "start": "376440",
    "end": "378720"
  },
  {
    "text": "else have a distance to infinity. So",
    "start": "378720",
    "end": "380430"
  },
  {
    "start": "380000",
    "end": "742000"
  },
  {
    "text": "let's start expanding some stuff. So A",
    "start": "380430",
    "end": "382289"
  },
  {
    "text": "first. A has... I gotta find A mate. Fast forward.",
    "start": "382289",
    "end": "385950"
  },
  {
    "text": "Oh here we are.",
    "start": "385950",
    "end": "387330"
  },
  {
    "text": "Why aren't these in alphabetical order?",
    "start": "387330",
    "end": "388720"
  },
  {
    "text": "I mean, you know... What was I thinking?",
    "start": "388720",
    "end": "390620"
  },
  {
    "text": "Right, so A has a distance of 7 and a combined",
    "start": "390620",
    "end": "395340"
  },
  {
    "text": "distance of 9 plus 7 which is 16. The",
    "start": "395340",
    "end": "398190"
  },
  {
    "text": "same for B. Same B, B, B... Again B.",
    "start": "398190",
    "end": "402240"
  },
  {
    "text": "I mean it's actually at the end.",
    "start": "402240",
    "end": "403229"
  },
  {
    "text": "Unbelievable. So I'm gonna",
    "start": "403229",
    "end": "405330"
  },
  {
    "text": "keep seeing it at the top now 'cause I know",
    "start": "405330",
    "end": "406710"
  },
  {
    "text": "that's coming.",
    "start": "406710",
    "end": "407520"
  },
  {
    "text": "OK, so B has a weight of 2 and a",
    "start": "407520",
    "end": "410580"
  },
  {
    "text": "combined cost of 7 plus 2, which is 9.",
    "start": "410580",
    "end": "414090"
  },
  {
    "text": "So, I'm gonna put that in there. Now, B goes in",
    "start": "414090",
    "end": "416669"
  },
  {
    "text": "the queue and goes ahead of A, because",
    "start": "416669",
    "end": "418680"
  },
  {
    "text": "9 is smaller than 16, right. We're",
    "start": "418680",
    "end": "420960"
  },
  {
    "text": "keeping a track of these green distances.",
    "start": "420960",
    "end": "422940"
  },
  {
    "text": "We're not actually using them to see which one",
    "start": "422940",
    "end": "424820"
  },
  {
    "text": "comes next. And then C. C has a path",
    "start": "424820",
    "end": "427620"
  },
  {
    "text": "cost of 3 and then a combined weight",
    "start": "427620",
    "end": "429750"
  },
  {
    "text": "of 11. 8 plus 3. And then that goes in",
    "start": "429750",
    "end": "432780"
  },
  {
    "text": "just above A like this, right. So",
    "start": "432780",
    "end": "434700"
  },
  {
    "text": "actually, so far, pretty similar to Dijkstra,",
    "start": "434700",
    "end": "436800"
  },
  {
    "text": "apart all the numbers are changed. So what's next.",
    "start": "436800",
    "end": "439050"
  },
  {
    "text": "We start expanding B. I haven't been",
    "start": "439050",
    "end": "441270"
  },
  {
    "text": "keeping track of the previous node so",
    "start": "441270",
    "end": "444210"
  },
  {
    "text": "all of these currently there's the storm",
    "start": "444210",
    "end": "446310"
  },
  {
    "text": "in red all are going through S",
    "start": "446310",
    "end": "449540"
  },
  {
    "text": "at the moment.",
    "start": "449540",
    "end": "450659"
  },
  {
    "text": "OK, so B next. We can go to A. A has a",
    "start": "450659",
    "end": "454020"
  },
  {
    "text": "distance of seven when we deciding",
    "start": "454020",
    "end": "455789"
  },
  {
    "text": "whether the path to A better via B",
    "start": "455789",
    "end": "458430"
  },
  {
    "text": "we don't care about this heuristic,",
    "start": "458430",
    "end": "459930"
  },
  {
    "text": "we only care about the actual cost of it,",
    "start": "459930",
    "end": "461639"
  },
  {
    "text": "the path to A, so in this case 2 + 3 is",
    "start": "461640",
    "end": "465750"
  },
  {
    "text": "less than 7 just like with Dijkstra",
    "start": "465750",
    "end": "467430"
  },
  {
    "text": "we're going to replace it so A, its new weight",
    "start": "467430",
    "end": "470729"
  },
  {
    "text": "is going to be 5, and 16 is going to",
    "start": "470729",
    "end": "473550"
  },
  {
    "text": "be 5 + 9, so 14, right? And this now,",
    "start": "473550",
    "end": "477210"
  },
  {
    "text": "this path is going through B, not..",
    "start": "477210",
    "end": "480120"
  },
  {
    "text": "Do you think I can turn this into a B?",
    "start": "480120",
    "end": "482280"
  },
  {
    "text": "Oh yes, there we go, look at that.",
    "start": "482280",
    "end": "484200"
  },
  {
    "text": "So it stays below C, it's not a big deal.",
    "start": "484200",
    "end": "486580"
  },
  {
    "text": "OK, D... Let's find in my shuffled list.",
    "start": "486600",
    "end": "490260"
  },
  {
    "text": "If you're implement this, don't shuffle it because",
    "start": "490260",
    "end": "491840"
  },
  {
    "text": "it'll be a lot harder to find in memory",
    "start": "491849",
    "end": "493440"
  },
  {
    "text": "Right, there we are. B has a path length of 2",
    "start": "493440",
    "end": "496560"
  },
  {
    "text": "D has a path length of 4, so that's a path length of 6",
    "start": "496560",
    "end": "499820"
  },
  {
    "text": "and D has got a distance of 8 to the end so",
    "start": "499820",
    "end": "503159"
  },
  {
    "text": "actually you can see here that D is",
    "start": "503159",
    "end": "505800"
  },
  {
    "text": "traveling forward in this direction, but is actually",
    "start": "505800",
    "end": "507599"
  },
  {
    "text": "getting further away than B so these",
    "start": "507599",
    "end": "509400"
  },
  {
    "text": "going to be quite heavily penalized",
    "start": "509400",
    "end": "510960"
  },
  {
    "text": "that's our hope so D is not going to be",
    "start": "510960",
    "end": "512940"
  },
  {
    "text": "expanded for a while we're going to look",
    "start": "512940",
    "end": "514409"
  },
  {
    "text": "there until it's a last resort",
    "start": "514409",
    "end": "516599"
  },
  {
    "text": "So 8 + 4 is 12, and that path goes through...",
    "start": "516600",
    "end": "520940"
  },
  {
    "text": "You know what, I'm just gonna leave the lids off.",
    "start": "520940",
    "end": "523219"
  },
  {
    "text": "And that goes through B. So put that in.",
    "start": "523220",
    "end": "525600"
  },
  {
    "text": "And that goes above A because A is a terrible one,",
    "start": "525600",
    "end": "528040"
  },
  {
    "text": "remember there's a fallen tree on that one,",
    "start": "528040",
    "end": "529320"
  },
  {
    "text": "but it still could be back and then",
    "start": "529320",
    "end": "531480"
  },
  {
    "text": "finally H. Now, H has a path length of 1 which is",
    "start": "531480",
    "end": "534120"
  },
  {
    "text": "nice and quick, B has a path length of 2 so",
    "start": "534120",
    "end": "537180"
  },
  {
    "text": "the total path cost is 3 and the",
    "start": "537180",
    "end": "539580"
  },
  {
    "text": "actual heuristic cost is 3 plus 6 which",
    "start": "539580",
    "end": "542399"
  },
  {
    "text": "is 9, that's 9 in here, 9 is looking",
    "start": "542399",
    "end": "544440"
  },
  {
    "text": "pretty good right now.",
    "start": "544440",
    "end": "545640"
  },
  {
    "text": "Now H goes straight above everything",
    "start": "545640",
    "end": "547170"
  },
  {
    "text": "like this, right?",
    "start": "547170",
    "end": "548680"
  },
  {
    "text": "B is about to pop out so that's good.",
    "start": "548680",
    "end": "550580"
  },
  {
    "text": "So B is finished, and we put B on our finished pack.",
    "start": "550580",
    "end": "553480"
  },
  {
    "text": "Huh, finished stack... Finished list?",
    "start": "553480",
    "end": "557180"
  },
  {
    "text": "Finished data structure over here.",
    "start": "557180",
    "end": "558420"
  },
  {
    "text": "Next up is H, right? Now,",
    "start": "558420",
    "end": "560420"
  },
  {
    "text": "last time we didn't expand H next,",
    "start": "560430",
    "end": "561899"
  },
  {
    "text": "we expanded C next in Dijkstra because",
    "start": "561899",
    "end": "564810"
  },
  {
    "text": "they had the same rough paths cost which",
    "start": "564810",
    "end": "566279"
  },
  {
    "text": "is 3 and C was already in the list so",
    "start": "566279",
    "end": "568560"
  },
  {
    "text": "now we already started to move a little bit",
    "start": "568560",
    "end": "570209"
  },
  {
    "text": "faster with A star which is good because",
    "start": "570209",
    "end": "572130"
  },
  {
    "text": "it means my example is working so H comes off",
    "start": "572130",
    "end": "575399"
  },
  {
    "text": "and let's see where we can go",
    "start": "575399",
    "end": "577140"
  },
  {
    "text": "we could go to F, so that's easy, I'll find F",
    "start": "577140",
    "end": "579420"
  },
  {
    "text": "F has a past of 3 + 3",
    "start": "579420",
    "end": "581910"
  },
  {
    "text": "which is 6 and it has a distance to go",
    "start": "581910",
    "end": "584069"
  },
  {
    "text": "of 6, so that's a total heuristic cost of 12",
    "start": "584070",
    "end": "586529"
  },
  {
    "text": "and it's going through H. Right, this goes in",
    "start": "586529",
    "end": "590279"
  },
  {
    "text": "and it will come in behind D here with a",
    "start": "590279",
    "end": "592860"
  },
  {
    "text": "path cost also of 12, right, in general",
    "start": "592860",
    "end": "595440"
  },
  {
    "text": "if there's a conflict will just put the first on in",
    "start": "595440",
    "end": "597140"
  },
  {
    "text": "you know, depends on your implementation",
    "start": "597149",
    "end": "598740"
  },
  {
    "text": "G has a path cost of 3 from H plus another",
    "start": "598740",
    "end": "602130"
  },
  {
    "text": "2 so that's 5 and then plus another 3 is 8.",
    "start": "602130",
    "end": "605320"
  },
  {
    "text": "Ok, we're done with H",
    "start": "605320",
    "end": "606620"
  },
  {
    "text": "G goes in right to the top which is good",
    "start": "606630",
    "end": "609300"
  },
  {
    "text": "news for us, for our nice elegant search.",
    "start": "609300",
    "end": "611399"
  },
  {
    "text": "So we're going to expand G, so where's E?",
    "start": "611399",
    "end": "614250"
  },
  {
    "text": "But I'm not gonna go off half-cocked this time",
    "start": "614250",
    "end": "615600"
  },
  {
    "text": "and finish my algorithm here. G has a path",
    "start": "615600",
    "end": "617579"
  },
  {
    "text": "length of 5 and so E has a path length",
    "start": "617579",
    "end": "621089"
  },
  {
    "text": "of 7",
    "start": "621089",
    "end": "622440"
  },
  {
    "text": "see now I've drawn this checkered flag and",
    "start": "622440",
    "end": "624060"
  },
  {
    "text": "it's in the way of my numbers, thanks for",
    "start": "624060",
    "end": "625560"
  },
  {
    "text": "the suggestion there. Right, E has a",
    "start": "625560",
    "end": "628380"
  },
  {
    "text": "heuristic cost of zero because we're at",
    "start": "628380",
    "end": "630480"
  },
  {
    "text": "the goal so actually 7 is the final",
    "start": "630480",
    "end": "633630"
  },
  {
    "text": "value that we get given here and this",
    "start": "633630",
    "end": "635459"
  },
  {
    "text": "goes through G and we're going to",
    "start": "635459",
    "end": "637980"
  },
  {
    "text": "put E in, so E goes in here",
    "start": "637980",
    "end": "640230"
  },
  {
    "text": "G is not really on the stack anymore.",
    "start": "640230",
    "end": "641899"
  },
  {
    "text": "G can't expand anywhere else, we've already",
    "start": "641900",
    "end": "643440"
  },
  {
    "text": "been to H and so the next iteration of the",
    "start": "643440",
    "end": "646020"
  },
  {
    "text": "algorithm starts, right? We popping off the",
    "start": "646020",
    "end": "648959"
  },
  {
    "text": "top",
    "start": "648959",
    "end": "649740"
  },
  {
    "text": "we're about to expand it and we realize",
    "start": "649740",
    "end": "651180"
  },
  {
    "text": "that's where we're going and we finished",
    "start": "651180",
    "end": "652980"
  },
  {
    "text": "our algorithm",
    "start": "652980",
    "end": "653880"
  },
  {
    "text": "ok so then just like before we trace",
    "start": "653880",
    "end": "656550"
  },
  {
    "text": "back through so E goes to G and then...",
    "start": "656550",
    "end": "658709"
  },
  {
    "text": "Where's my G? There it is. And G goes to H,",
    "start": "658709",
    "end": "661290"
  },
  {
    "text": "and then H goes to B,",
    "start": "661290",
    "end": "662670"
  },
  {
    "text": "and B goes to S, and S is the start, alright?",
    "start": "662670",
    "end": "665700"
  },
  {
    "text": "So we've got our path, S-B-H-G-E",
    "start": "665700",
    "end": "668220"
  },
  {
    "text": "Now in this case it's exactly the same path",
    "start": "668220",
    "end": "670379"
  },
  {
    "text": "as Dijkstra because",
    "start": "670380",
    "end": "672320"
  },
  {
    "text": "I picked a fairly reasonable heuristic, right?",
    "start": "672320",
    "end": "675180"
  },
  {
    "text": "Plus or minus a bit of my dodgy measuring",
    "start": "675180",
    "end": "677220"
  },
  {
    "text": "But you can see we didn't bother to expand",
    "start": "678180",
    "end": "680300"
  },
  {
    "text": "C or L or even consider I and J many fewer",
    "start": "680310",
    "end": "684000"
  },
  {
    "text": "nodes got put in the stack...In both terms",
    "start": "684000",
    "end": "685860"
  },
  {
    "text": "of the amount of computation we did and",
    "start": "685860",
    "end": "687690"
  },
  {
    "text": "the memory footprint was reduced and we",
    "start": "687690",
    "end": "690180"
  },
  {
    "text": "still obtained the same result.",
    "start": "690180",
    "end": "691820"
  },
  {
    "text": "So there were one or two comments on the last",
    "start": "691820",
    "end": "693920"
  },
  {
    "text": "video about not expanding those but",
    "start": "693930",
    "end": "696060"
  },
  {
    "text": "you're saying that on A star you",
    "start": "696060",
    "end": "697380"
  },
  {
    "text": "definitely don't have to expand those,",
    "start": "697380",
    "end": "699300"
  },
  {
    "text": "No. The comments on the video were",
    "start": "699300",
    "end": "700680"
  },
  {
    "text": "because basically I forgot to wait",
    "start": "700680",
    "end": "702420"
  },
  {
    "text": "until E was expanded to finish, I got",
    "start": "702420",
    "end": "704339"
  },
  {
    "text": "overexcited and as soon as I saw E,",
    "start": "704340",
    "end": "706800"
  },
  {
    "text": "I declared it over when we went and got",
    "start": "706800",
    "end": "708510"
  },
  {
    "text": "coffee and yeah and that's not right",
    "start": "708510",
    "end": "711120"
  },
  {
    "text": "because technically speaking there could",
    "start": "711120",
    "end": "713040"
  },
  {
    "text": "have been a path from say, F to E, that",
    "start": "713040",
    "end": "714660"
  },
  {
    "text": "was super-sneaky and really quick, right?",
    "start": "714660",
    "end": "716790"
  },
  {
    "text": "I'm sorry, super-sneaky is not a technical",
    "start": "716790",
    "end": "718410"
  },
  {
    "text": "term you see in the literature, and if",
    "start": "718410",
    "end": "720269"
  },
  {
    "text": "that had happened we have to wait until",
    "start": "720270",
    "end": "721920"
  },
  {
    "text": "E bubbles to the top of our priority",
    "start": "721920",
    "end": "723810"
  },
  {
    "text": "queue to be able to know for sure that we've got",
    "start": "723810",
    "end": "725880"
  },
  {
    "text": "the shortest path. In this case it was",
    "start": "725880",
    "end": "727830"
  },
  {
    "text": "very straightforward, E went straight to",
    "start": "727830",
    "end": "729240"
  },
  {
    "text": "the top, but you can never guarantee and a",
    "start": "729240",
    "end": "731640"
  },
  {
    "text": "different graph will have a different",
    "start": "731640",
    "end": "732780"
  },
  {
    "text": "thing",
    "start": "732780",
    "end": "733890"
  },
  {
    "text": "so the actual stopping criterion for",
    "start": "733890",
    "end": "735870"
  },
  {
    "text": "both Dijkstra and A star is when your goal",
    "start": "735870",
    "end": "738660"
  },
  {
    "text": "node gets to the top of your priority queue.",
    "start": "738660",
    "end": "740430"
  },
  {
    "text": "But yeah that was good that people pointed that out",
    "start": "740430",
    "end": "743399"
  },
  {
    "start": "742000",
    "end": "843000"
  },
  {
    "text": "because it completed the video with a",
    "start": "743400",
    "end": "744750"
  },
  {
    "text": "bit of extra comments. To wrap up you can",
    "start": "744750",
    "end": "746370"
  },
  {
    "text": "imagine now that we've seen a video on",
    "start": "746370",
    "end": "747990"
  },
  {
    "text": "how that works in terms of GPS positions",
    "start": "747990",
    "end": "750330"
  },
  {
    "text": "and we've seen a couple of videos on",
    "start": "750330",
    "end": "751950"
  },
  {
    "text": "pathfinding and there's lots of videos on data",
    "start": "751950",
    "end": "754380"
  },
  {
    "text": "structures in this you can imagine now",
    "start": "754380",
    "end": "756510"
  },
  {
    "text": "that you might start to think i can",
    "start": "756510",
    "end": "759090"
  },
  {
    "text": "actually not see how that might be",
    "start": "759090",
    "end": "760860"
  },
  {
    "text": "implemented I could see you know the",
    "start": "760860",
    "end": "762209"
  },
  {
    "text": "parts of the system that have to work together",
    "start": "762210",
    "end": "763680"
  },
  {
    "text": "we've got a map that stored in the",
    "start": "763680",
    "end": "765540"
  },
  {
    "text": "memory",
    "start": "765540",
    "end": "766410"
  },
  {
    "text": "we've got nodes that we're trying to get",
    "start": "766410",
    "end": "767790"
  },
  {
    "text": "to and from, that we've got an algorithm",
    "start": "767790",
    "end": "769470"
  },
  {
    "text": "that will find a way through",
    "start": "769470",
    "end": "771000"
  },
  {
    "text": "Now, you can imagine also that it's",
    "start": "771000",
    "end": "774960"
  },
  {
    "text": "unrealistic to expect a small sat-nav",
    "start": "774960",
    "end": "776940"
  },
  {
    "text": "to completely compute its way through the",
    "start": "776940",
    "end": "779010"
  },
  {
    "text": "UK but if you saw \"I what the best path",
    "start": "779010",
    "end": "780870"
  },
  {
    "text": "from Land's End to John O'Groats\" you",
    "start": "780870",
    "end": "782760"
  },
  {
    "text": "might melt your sat-nav unless you do",
    "start": "782760",
    "end": "784620"
  },
  {
    "text": "something a little bit smarter so you",
    "start": "784620",
    "end": "786450"
  },
  {
    "text": "can imagine they might precompute some",
    "start": "786450",
    "end": "787830"
  },
  {
    "text": "of these things but they know the",
    "start": "787830",
    "end": "789240"
  },
  {
    "text": "shortest way of getting from Nottingham",
    "start": "789240",
    "end": "791040"
  },
  {
    "text": "into London is via the M1 or",
    "start": "791040",
    "end": "792600"
  },
  {
    "text": "something like this",
    "start": "792600",
    "end": "793139"
  },
  {
    "text": "to sort of hard code some of it in some sense",
    "start": "793139",
    "end": "795688"
  },
  {
    "text": "to be honest",
    "start": "795689",
    "end": "796799"
  },
  {
    "text": "I don't work for a sat-nav company, I don't",
    "start": "796799",
    "end": "798480"
  },
  {
    "text": "know what their proprietary algorithms",
    "start": "798480",
    "end": "799618"
  },
  {
    "text": "are, but you can see this is the kind of",
    "start": "799619",
    "end": "801749"
  },
  {
    "text": "thing we're doing we're trying to find a",
    "start": "801749",
    "end": "803399"
  },
  {
    "text": "nice elegant way of getting from A to B",
    "start": "803399",
    "end": "804959"
  },
  {
    "text": "and there's lots of pathfinding algorithms",
    "start": "804959",
    "end": "807058"
  },
  {
    "text": "and you could come up with lots of",
    "start": "807059",
    "end": "808859"
  },
  {
    "text": "interesting heuristics, not just euclidean distance",
    "start": "808860",
    "end": "811100"
  },
  {
    "text": "Also of course they're going to",
    "start": "813380",
    "end": "814859"
  },
  {
    "text": "have a GPS to measure up in your dating",
    "start": "814859",
    "end": "816749"
  },
  {
    "text": "that I mean yet although i would say VPS",
    "start": "816749",
    "end": "819089"
  },
  {
    "text": "often has an accuracy of possibles few",
    "start": "819089",
    "end": "820799"
  },
  {
    "text": "meters so it was shoddy measuring tape",
    "start": "820799",
    "end": "822779"
  },
  {
    "text": "is actually pinpoint precision compared",
    "start": "822779",
    "end": "824699"
  },
  {
    "text": "to that still have maps are carefully",
    "start": "824699",
    "end": "827279"
  },
  {
    "text": "crafted would be exact known positions",
    "start": "827279",
    "end": "829019"
  },
  {
    "text": "of all these junctions and they know how",
    "start": "829019",
    "end": "830609"
  },
  {
    "text": "long it takes to travel out the",
    "start": "830609",
    "end": "831929"
  },
  {
    "text": "roundabout and they know how long it",
    "start": "831929",
    "end": "833249"
  },
  {
    "text": "takes because of traffic and think about",
    "start": "833249",
    "end": "835259"
  },
  {
    "text": "this they're going to be doing a lot",
    "start": "835259",
    "end": "836488"
  },
  {
    "text": "smarter or albums and i'm doing but this",
    "start": "836489",
    "end": "839759"
  },
  {
    "text": "is a start and you can see you could",
    "start": "839759",
    "end": "841350"
  },
  {
    "text": "build this up into a really good system",
    "start": "841350",
    "end": "844850"
  }
]