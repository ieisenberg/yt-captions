[
  {
    "text": "a few weeks ago on this channel you saw",
    "start": "120",
    "end": "3040"
  },
  {
    "text": "a video explaining how to make",
    "start": "3040",
    "end": "5279"
  },
  {
    "text": "programming language so I think it's",
    "start": "5279",
    "end": "7839"
  },
  {
    "text": "Worthing taking a look at the new",
    "start": "7839",
    "end": "9880"
  },
  {
    "text": "programming language that is being",
    "start": "9880",
    "end": "11799"
  },
  {
    "text": "developed as we speak it's called carbon",
    "start": "11799",
    "end": "15280"
  },
  {
    "text": "and has a quite of an ambition goal at",
    "start": "15280",
    "end": "18199"
  },
  {
    "text": "least according to the its developers is",
    "start": "18199",
    "end": "22119"
  },
  {
    "text": "to replace",
    "start": "22119",
    "end": "25199"
  },
  {
    "text": "C++ initially introduced by Google and",
    "start": "25560",
    "end": "28439"
  },
  {
    "text": "now became an source project driven by",
    "start": "28439",
    "end": "31519"
  },
  {
    "text": "the community carbon has the goal very",
    "start": "31519",
    "end": "34399"
  },
  {
    "text": "similar to what rust had while rust aim",
    "start": "34399",
    "end": "38680"
  },
  {
    "text": "to take over C the objective of carbon",
    "start": "38680",
    "end": "42520"
  },
  {
    "text": "will be to theone C++ however this is",
    "start": "42520",
    "end": "46120"
  },
  {
    "text": "not certain especially since carbon is",
    "start": "46120",
    "end": "48760"
  },
  {
    "text": "still under development and far from",
    "start": "48760",
    "end": "51399"
  },
  {
    "text": "being complete right now we can Define",
    "start": "51399",
    "end": "54800"
  },
  {
    "text": "it as an experimental project meaning",
    "start": "54800",
    "end": "57359"
  },
  {
    "text": "that everything I say now in this video",
    "start": "57359",
    "end": "60559"
  },
  {
    "text": "might not be valid neither tomorrow or",
    "start": "60559",
    "end": "63000"
  },
  {
    "text": "in in a year however I think it's still",
    "start": "63000",
    "end": "65960"
  },
  {
    "text": "nice opportunity to raise awareness",
    "start": "65960",
    "end": "67960"
  },
  {
    "text": "about this New Perspective program",
    "start": "67960",
    "end": "70400"
  },
  {
    "text": "language so carbon was introduced by",
    "start": "70400",
    "end": "73880"
  },
  {
    "text": "chender CaRu at the CPP North Conference",
    "start": "73880",
    "end": "77040"
  },
  {
    "text": "held in Toronto in 2022 a minimum",
    "start": "77040",
    "end": "80360"
  },
  {
    "text": "valueable product is expected this year",
    "start": "80360",
    "end": "83240"
  },
  {
    "text": "and the first stable version is",
    "start": "83240",
    "end": "85400"
  },
  {
    "text": "anticipated in",
    "start": "85400",
    "end": "87840"
  },
  {
    "text": "2027 so what this new programming",
    "start": "87840",
    "end": "91240"
  },
  {
    "text": "language offer the primary goal of",
    "start": "91240",
    "end": "94079"
  },
  {
    "text": "carbon is to ensure bidirectional",
    "start": "94079",
    "end": "97320"
  },
  {
    "text": "interoperability with C++ this means",
    "start": "97320",
    "end": "99799"
  },
  {
    "text": "that C++ code can be used within carbon",
    "start": "99799",
    "end": "103360"
  },
  {
    "text": "and vice versa this is possible because",
    "start": "103360",
    "end": "105719"
  },
  {
    "text": "the developers are leveraging llvm if",
    "start": "105719",
    "end": "109079"
  },
  {
    "text": "you are not familiar with llvm just a",
    "start": "109079",
    "end": "112240"
  },
  {
    "text": "quick recap it's a framework written C++",
    "start": "112240",
    "end": "115119"
  },
  {
    "text": "for developing program languages there",
    "start": "115119",
    "end": "117799"
  },
  {
    "text": "is a lot more to say about it how",
    "start": "117799",
    "end": "120039"
  },
  {
    "text": "however I think this is enough for this",
    "start": "120039",
    "end": "121680"
  },
  {
    "text": "video unlike other program languages for",
    "start": "121680",
    "end": "124479"
  },
  {
    "text": "what we know today carbon does not use",
    "start": "124479",
    "end": "127600"
  },
  {
    "text": "any formal garbage collection this means",
    "start": "127600",
    "end": "130520"
  },
  {
    "text": "that there is no automatic memory",
    "start": "130520",
    "end": "132959"
  },
  {
    "text": "management in fact carbon memory",
    "start": "132959",
    "end": "135200"
  },
  {
    "text": "management is expected to be the same as",
    "start": "135200",
    "end": "138080"
  },
  {
    "text": "in",
    "start": "138080",
    "end": "138959"
  },
  {
    "text": "C++ basically manual this decision was",
    "start": "138959",
    "end": "142599"
  },
  {
    "text": "made for two reasons this is at least",
    "start": "142599",
    "end": "145360"
  },
  {
    "text": "what I think ensuring the",
    "start": "145360",
    "end": "147239"
  },
  {
    "text": "interoperability with C++ and maintain",
    "start": "147239",
    "end": "150239"
  },
  {
    "text": "high performance in compil programs so",
    "start": "150239",
    "end": "153599"
  },
  {
    "text": "the syntax is an interesting mix of C++",
    "start": "153599",
    "end": "157400"
  },
  {
    "text": "Swift and rust at least from my",
    "start": "157400",
    "end": "160120"
  },
  {
    "text": "perspective for primitive types we have",
    "start": "160120",
    "end": "162599"
  },
  {
    "text": "bull integers floods with names very",
    "start": "162599",
    "end": "166040"
  },
  {
    "text": "familiar with those in Rust for example",
    "start": "166040",
    "end": "168920"
  },
  {
    "text": "32-bit integers is i32 there is also a",
    "start": "168920",
    "end": "172480"
  },
  {
    "text": "primitive types for string type which is",
    "start": "172480",
    "end": "174959"
  },
  {
    "text": "treated as a SE a sequence of Unicode",
    "start": "174959",
    "end": "177920"
  },
  {
    "text": "characters the syntax for variables and",
    "start": "177920",
    "end": "181040"
  },
  {
    "text": "constants is similar to Swift variables",
    "start": "181040",
    "end": "184120"
  },
  {
    "text": "are declared within the keyword VAR",
    "start": "184120",
    "end": "186480"
  },
  {
    "text": "while constants with the with the",
    "start": "186480",
    "end": "188440"
  },
  {
    "text": "keyword let then we have composite types",
    "start": "188440",
    "end": "191760"
  },
  {
    "text": "which currently include three types",
    "start": "191760",
    "end": "194040"
  },
  {
    "text": "arrays tles and strs focusing on",
    "start": "194040",
    "end": "197959"
  },
  {
    "text": "array um I don't have much to say yet",
    "start": "197959",
    "end": "201959"
  },
  {
    "text": "because it's unclear to me if they are",
    "start": "201959",
    "end": "205040"
  },
  {
    "text": "using C style arrays or more like C++",
    "start": "205040",
    "end": "209799"
  },
  {
    "text": "style standard Vector let's wait and see",
    "start": "209799",
    "end": "212760"
  },
  {
    "text": "how this aspect will be implemented um",
    "start": "212760",
    "end": "216799"
  },
  {
    "text": "especially in terms of safety for",
    "start": "216799",
    "end": "219040"
  },
  {
    "text": "example are they going to introduce the",
    "start": "219040",
    "end": "220799"
  },
  {
    "text": "bound checking uh for the arrays one",
    "start": "220799",
    "end": "224080"
  },
  {
    "text": "interesting topic is classes and",
    "start": "224080",
    "end": "226519"
  },
  {
    "text": "everything related to object-oriented",
    "start": "226519",
    "end": "228720"
  },
  {
    "text": "programming for what I understand carbon",
    "start": "228720",
    "end": "231840"
  },
  {
    "text": "does not have explicit Constructor",
    "start": "231840",
    "end": "234280"
  },
  {
    "text": "methods typical from other programming",
    "start": "234280",
    "end": "236400"
  },
  {
    "text": "languages and objects use um",
    "start": "236400",
    "end": "240760"
  },
  {
    "text": "a syntax style like struct to initialize",
    "start": "240760",
    "end": "243879"
  },
  {
    "text": "object",
    "start": "243879",
    "end": "245120"
  },
  {
    "text": "syntactically the difference between a",
    "start": "245120",
    "end": "247599"
  },
  {
    "text": "static method and an instance method is",
    "start": "247599",
    "end": "250480"
  },
  {
    "text": "the use of a self parameter what this",
    "start": "250480",
    "end": "253840"
  },
  {
    "text": "might remind you of python carbon seems",
    "start": "253840",
    "end": "257239"
  },
  {
    "text": "to having its unique approach in Python",
    "start": "257239",
    "end": "261000"
  },
  {
    "text": "the first parameter of a method must be",
    "start": "261000",
    "end": "263479"
  },
  {
    "text": "self but in caral there's a special",
    "start": "263479",
    "end": "266160"
  },
  {
    "text": "syntax you simply prepare the square",
    "start": "266160",
    "end": "268600"
  },
  {
    "text": "bracket and just put self inside I'm not",
    "start": "268600",
    "end": "271400"
  },
  {
    "text": "sure about this choice but let's see how",
    "start": "271400",
    "end": "274000"
  },
  {
    "text": "it's going to work out in the future",
    "start": "274000",
    "end": "275759"
  },
  {
    "text": "another interesting aspect is like a",
    "start": "275759",
    "end": "277759"
  },
  {
    "text": "classes are by default final meaning",
    "start": "277759",
    "end": "281320"
  },
  {
    "text": "that they cannot be extended to a love",
    "start": "281320",
    "end": "283840"
  },
  {
    "text": "inheritance you must explicitly declare",
    "start": "283840",
    "end": "286600"
  },
  {
    "text": "a class as a base class similarly",
    "start": "286600",
    "end": "290039"
  },
  {
    "text": "methods do not allow overwriting by",
    "start": "290039",
    "end": "292840"
  },
  {
    "text": "default to enable overriding in derived",
    "start": "292840",
    "end": "296320"
  },
  {
    "text": "class method must be explicitly declared",
    "start": "296320",
    "end": "299400"
  },
  {
    "text": "as virtual which is similar to C++",
    "start": "299400",
    "end": "302440"
  },
  {
    "text": "another important aspect to highlight is",
    "start": "302440",
    "end": "306400"
  },
  {
    "text": "an area on which carbon developers are",
    "start": "306400",
    "end": "309600"
  },
  {
    "text": "putting a lot of efforts which is about",
    "start": "309600",
    "end": "312639"
  },
  {
    "text": "generics in general generics allow types",
    "start": "312639",
    "end": "316199"
  },
  {
    "text": "to be used as parameter avoiding",
    "start": "316199",
    "end": "318880"
  },
  {
    "text": "situations like in C where you need to",
    "start": "318880",
    "end": "321720"
  },
  {
    "text": "have separate functions for integers or",
    "start": "321720",
    "end": "324360"
  },
  {
    "text": "or float but basically they do the same",
    "start": "324360",
    "end": "326759"
  },
  {
    "text": "thing carbon plans to implement two",
    "start": "326759",
    "end": "329160"
  },
  {
    "text": "models four genetics the checked",
    "start": "329160",
    "end": "331600"
  },
  {
    "text": "genetics and the a template",
    "start": "331600",
    "end": "334039"
  },
  {
    "text": "based checked genetics are similar to",
    "start": "334039",
    "end": "337039"
  },
  {
    "text": "those in Java the compiler creates a",
    "start": "337039",
    "end": "339800"
  },
  {
    "text": "single copy of the generic code and at R",
    "start": "339800",
    "end": "343319"
  },
  {
    "text": "time the compil code use a real class in",
    "start": "343319",
    "end": "347160"
  },
  {
    "text": "place of generic type since for instance",
    "start": "347160",
    "end": "350319"
  },
  {
    "text": "all classes in Java inates from objects",
    "start": "350319",
    "end": "353440"
  },
  {
    "text": "a generic type can be replaced with",
    "start": "353440",
    "end": "356880"
  },
  {
    "text": "object at on time instead template",
    "start": "356880",
    "end": "360479"
  },
  {
    "text": "generic follow the C++ model where the",
    "start": "360479",
    "end": "363639"
  },
  {
    "text": "compiler generates a specialized version",
    "start": "363639",
    "end": "366759"
  },
  {
    "text": "of the generic code for each specific",
    "start": "366759",
    "end": "369880"
  },
  {
    "text": "type used as you can see these are two",
    "start": "369880",
    "end": "372560"
  },
  {
    "text": "different approaches to implementing",
    "start": "372560",
    "end": "375280"
  },
  {
    "text": "generics and it looks like uh the carbon",
    "start": "375280",
    "end": "379240"
  },
  {
    "text": "aims to support both so let's have a",
    "start": "379240",
    "end": "381880"
  },
  {
    "text": "look at what they plan to implement in",
    "start": "381880",
    "end": "383720"
  },
  {
    "text": "the future first of all they plan to",
    "start": "383720",
    "end": "386080"
  },
  {
    "text": "have lifetimes there's not much to say",
    "start": "386080",
    "end": "388599"
  },
  {
    "text": "here what I believe is like they're",
    "start": "388599",
    "end": "390560"
  },
  {
    "text": "going to follow the rust approach on",
    "start": "390560",
    "end": "393280"
  },
  {
    "text": "lifetimes then they also are planning to",
    "start": "393280",
    "end": "395840"
  },
  {
    "text": "work on meta programming which is the",
    "start": "395840",
    "end": "398080"
  },
  {
    "text": "ability of a program to modify or",
    "start": "398080",
    "end": "400280"
  },
  {
    "text": "respect itself for example if you're",
    "start": "400280",
    "end": "402440"
  },
  {
    "text": "familiar with C there's no way in C to",
    "start": "402440",
    "end": "406560"
  },
  {
    "text": "inside the program to see what Fields",
    "start": "406560",
    "end": "410319"
  },
  {
    "text": "the structor will have around time",
    "start": "410319",
    "end": "412720"
  },
  {
    "text": "because the compiled program don't have",
    "start": "412720",
    "end": "414520"
  },
  {
    "text": "this such information instead in Python",
    "start": "414520",
    "end": "417840"
  },
  {
    "text": "there's the builtin their function list",
    "start": "417840",
    "end": "420120"
  },
  {
    "text": "all the methods or properties of of a",
    "start": "420120",
    "end": "421879"
  },
  {
    "text": "class this is just an example of meta",
    "start": "421879",
    "end": "424800"
  },
  {
    "text": "programming particular reflection it",
    "start": "424800",
    "end": "426960"
  },
  {
    "text": "remains to be seen what carbon will",
    "start": "426960",
    "end": "429560"
  },
  {
    "text": "Implement about meta programming error",
    "start": "429560",
    "end": "432520"
  },
  {
    "text": "handling is still undecided so let's see",
    "start": "432520",
    "end": "435039"
  },
  {
    "text": "what it going to come up with Lambda",
    "start": "435039",
    "end": "436960"
  },
  {
    "text": "function so Coe routines and concurrent",
    "start": "436960",
    "end": "439879"
  },
  {
    "text": "programming clearly this video is not a",
    "start": "439879",
    "end": "442120"
  },
  {
    "text": "comprehensive overview and I will",
    "start": "442120",
    "end": "444599"
  },
  {
    "text": "strongly encourage you to check out the",
    "start": "444599",
    "end": "446720"
  },
  {
    "text": "carbon reposit on GitHub for now if you",
    "start": "446720",
    "end": "449599"
  },
  {
    "text": "want to experiment with it you can try",
    "start": "449599",
    "end": "451840"
  },
  {
    "text": "it on a compil Explorer it's still very",
    "start": "451840",
    "end": "454879"
  },
  {
    "text": "early stage but it's fine to play around",
    "start": "454879",
    "end": "457360"
  },
  {
    "text": "with let me leave you with this question",
    "start": "457360",
    "end": "459680"
  },
  {
    "text": "do you think that this program language",
    "start": "459680",
    "end": "461840"
  },
  {
    "text": "carbon will manage to the throne C++ is",
    "start": "461840",
    "end": "464479"
  },
  {
    "text": "there a reason we need to replace C++ or",
    "start": "464479",
    "end": "466879"
  },
  {
    "text": "is this just somebody's the question I",
    "start": "466879",
    "end": "469560"
  },
  {
    "text": "think",
    "start": "469560",
    "end": "471080"
  },
  {
    "text": "um you should ask a different question",
    "start": "471080",
    "end": "473800"
  },
  {
    "text": "no okay so let me address that and then",
    "start": "473800",
    "end": "475680"
  },
  {
    "text": "I I try to spin this around the question",
    "start": "475680",
    "end": "479280"
  },
  {
    "text": "is like they try to solve problem that",
    "start": "479280",
    "end": "481879"
  },
  {
    "text": "C++ has or Ras the C+ the a r try to",
    "start": "481879",
    "end": "486440"
  },
  {
    "text": "solve problem that c has which is the",
    "start": "486440",
    "end": "488879"
  },
  {
    "text": "memory management and other technical",
    "start": "488879",
    "end": "491440"
  },
  {
    "text": "things the question I think is",
    "start": "491440",
    "end": "493879"
  },
  {
    "text": "that um if is going to manage that and",
    "start": "493879",
    "end": "498680"
  },
  {
    "text": "uh that is where the problem stands",
    "start": "498680",
    "end": "500560"
  },
  {
    "text": "because companies that have invested",
    "start": "500560",
    "end": "503039"
  },
  {
    "text": "resources in the time to train soft",
    "start": "503039",
    "end": "506000"
  },
  {
    "text": "engineers in C or C++ will be very Rel",
    "start": "506000",
    "end": "509560"
  },
  {
    "text": "act and to change the question like do",
    "start": "509560",
    "end": "512200"
  },
  {
    "text": "we need from a computer science",
    "start": "512200",
    "end": "515320"
  },
  {
    "text": "perspective I mean informatic",
    "start": "515320",
    "end": "517360"
  },
  {
    "text": "perspective I would say yes but becoming",
    "start": "517360",
    "end": "520839"
  },
  {
    "text": "the new",
    "start": "520839",
    "end": "522399"
  },
  {
    "text": "standard a company investing Millions",
    "start": "522399",
    "end": "526120"
  },
  {
    "text": "again yes of course people will",
    "start": "526120",
    "end": "528959"
  },
  {
    "text": "say is H by Direction",
    "start": "528959",
    "end": "532440"
  },
  {
    "text": "interoperable uh for instance in the",
    "start": "532440",
    "end": "535120"
  },
  {
    "text": "Linux kernel they are trying to",
    "start": "535120",
    "end": "537080"
  },
  {
    "text": "incorporate a rust code in inside the",
    "start": "537080",
    "end": "539800"
  },
  {
    "text": "Kel but it's far to say Linux can",
    "start": "539800",
    "end": "543360"
  },
  {
    "text": "completely written R it's going to take",
    "start": "543360",
    "end": "545160"
  },
  {
    "text": "ages and it's going to take ages and we",
    "start": "545160",
    "end": "548160"
  },
  {
    "text": "don't even know whether that is the r",
    "start": "548160",
    "end": "549920"
  },
  {
    "text": "because one thing is to write a couple",
    "start": "549920",
    "end": "551760"
  },
  {
    "text": "of new drivers in Rust that connects",
    "start": "551760",
    "end": "554160"
  },
  {
    "text": "with the Linux Kel the other things to",
    "start": "554160",
    "end": "556279"
  },
  {
    "text": "do the whole can hey everyone I'm",
    "start": "556279",
    "end": "559079"
  },
  {
    "text": "heading to California in March to visit",
    "start": "559079",
    "end": "561600"
  },
  {
    "text": "GTC it's one of the world's top events",
    "start": "561600",
    "end": "564079"
  },
  {
    "text": "for AI and accelerated Computing",
    "start": "564079",
    "end": "566440"
  },
  {
    "text": "thousands of developers and innovators",
    "start": "566440",
    "end": "568279"
  },
  {
    "text": "and Business Leaders will be attending",
    "start": "568279",
    "end": "570120"
  },
  {
    "text": "and if you happen to be there come and",
    "start": "570120",
    "end": "571560"
  },
  {
    "text": "say hi to me I'll be the Brit with the",
    "start": "571560",
    "end": "573560"
  },
  {
    "text": "camera and possibly a sheath of the",
    "start": "573560",
    "end": "575560"
  },
  {
    "text": "special computer file paper too now if",
    "start": "575560",
    "end": "578279"
  },
  {
    "text": "there's a topic you'd like covered or",
    "start": "578279",
    "end": "579959"
  },
  {
    "text": "someone you think we should go and talk",
    "start": "579959",
    "end": "581279"
  },
  {
    "text": "to definitely let us know in the",
    "start": "581279",
    "end": "583120"
  },
  {
    "text": "comments um we'll have a chat or try and",
    "start": "583120",
    "end": "585160"
  },
  {
    "text": "interview them and if you can't get to",
    "start": "585160",
    "end": "586920"
  },
  {
    "text": "San Jose but you want to attend",
    "start": "586920",
    "end": "588519"
  },
  {
    "text": "virtually you can do that for free by",
    "start": "588519",
    "end": "590519"
  },
  {
    "text": "registering with the link below you can",
    "start": "590519",
    "end": "592519"
  },
  {
    "text": "watch sessions and Keynotes live and",
    "start": "592519",
    "end": "594600"
  },
  {
    "text": "really be part of all of that action",
    "start": "594600",
    "end": "596880"
  },
  {
    "text": "it's so exciting for me to be going",
    "start": "596880",
    "end": "598440"
  },
  {
    "text": "there but you more importantly can win a",
    "start": "598440",
    "end": "600800"
  },
  {
    "text": "4080 super graphics card just by",
    "start": "600800",
    "end": "603320"
  },
  {
    "text": "attending virtually you just need to",
    "start": "603320",
    "end": "604560"
  },
  {
    "text": "show a screenshot uh of you being there",
    "start": "604560",
    "end": "606959"
  },
  {
    "text": "but full details of all that and how to",
    "start": "606959",
    "end": "608760"
  },
  {
    "text": "enter how to be in with a chance of",
    "start": "608760",
    "end": "610480"
  },
  {
    "text": "winning a 4080 super graphics card or",
    "start": "610480",
    "end": "613000"
  },
  {
    "text": "GPU have a look at the video description",
    "start": "613000",
    "end": "615120"
  },
  {
    "text": "or check out the comments below anyway I",
    "start": "615120",
    "end": "617320"
  },
  {
    "text": "look forward to hearing your suggestions",
    "start": "617320",
    "end": "618720"
  },
  {
    "text": "about what subjects we should cover and",
    "start": "618720",
    "end": "620959"
  },
  {
    "text": "who I should talk to",
    "start": "620959",
    "end": "624800"
  }
]