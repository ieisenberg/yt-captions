[
  {
    "start": "0",
    "end": "57000"
  },
  {
    "text": "In what we've done so far we've ranged\nover quite an area, because just the act",
    "start": "0",
    "end": "4740"
  },
  {
    "text": "of using the T-diagrams has forced us\nto address lots of interesting and",
    "start": "4740",
    "end": "10320"
  },
  {
    "text": "profound questions, over the years, about\nhow compilers actually work. So we've",
    "start": "10320",
    "end": "14459"
  },
  {
    "text": "looked at the fact that we think of our\nprograms being written in a high-level",
    "start": "14460",
    "end": "17970"
  },
  {
    "text": "language and the brain goes blurry. We\nneglect to think, all the time, that",
    "start": "17970",
    "end": "23910"
  },
  {
    "text": "although you they were written in C it\ndoesn't execute directly. You have to",
    "start": "23910",
    "end": "27990"
  },
  {
    "text": "compile the C into binary. So, really, your\nbeautiful program runs on a suitable",
    "start": "27990",
    "end": "34350"
  },
  {
    "text": "architecture in a suitable binary. It has\nan input, it has an output. Then we",
    "start": "34350",
    "end": "39860"
  },
  {
    "text": "started looking at more advanced things\nabout ... saying: \"Well if that's how a C",
    "start": "39860",
    "end": "45120"
  },
  {
    "text": "compiler works why not write another C\ncompiler, in C, and then compile it with",
    "start": "45120",
    "end": "51960"
  },
  {
    "text": "the old compiler?\" And I think we just\nabout emerged from that with brain intact.",
    "start": "51960",
    "end": "55800"
  },
  {
    "text": "If you want to go back and revise\nsome of this stuff before catching up",
    "start": "55800",
    "end": "63210"
  },
  {
    "start": "57000",
    "end": "130000"
  },
  {
    "text": "with what we're going to do today I\nwould recommend the one [video] which we'll put a",
    "start": "63210",
    "end": "66780"
  },
  {
    "text": "link out to: 'Self-compiling\nCompilers\".  There's another one we put out",
    "start": "66780",
    "end": "70740"
  },
  {
    "text": "also, on the UNCOL problem which was this\nbusiness about: \"Is there a common",
    "start": "70740",
    "end": "74700"
  },
  {
    "text": "universal intermediate code?\" There's more\nof a consensus now than there used to be.",
    "start": "74700",
    "end": "80430"
  },
  {
    "text": "And the LLVM system is a good example. It\nwon the Turing ACM Award for - not quite",
    "start": "80430",
    "end": "87810"
  },
  {
    "text": "for 'best intermediate code ever' -  but you know ...\nThe reason, I think, that it became",
    "start": "87810",
    "end": "93600"
  },
  {
    "text": "less of a problem - not totally solvable\nbut less of a problem - thinking",
    "start": "93600",
    "end": "99150"
  },
  {
    "text": "about this the other night, is that\nactually, over the years, certain things",
    "start": "99150",
    "end": "102810"
  },
  {
    "text": "about computer architectures have\nconverged and moved together to",
    "start": "102810",
    "end": "107310"
  },
  {
    "text": "consensus. And principally it seems to me\nis the idea that your unit of discourse",
    "start": "107310",
    "end": "113100"
  },
  {
    "text": "isn't just the bit, it's the byte. And the\nidea of having, y'know, 8-bit ASCII",
    "start": "113100",
    "end": "119909"
  },
  {
    "text": "characters fit into a byte. The idea\nof being able to 'glue two bytes together' to",
    "start": "119909",
    "end": "125520"
  },
  {
    "text": "make a 16-bit entity, or four to make a\n32-bit entity.",
    "start": "125520",
    "end": "129700"
  },
  {
    "text": "That has become more and more and more\nprevalent. The reason why in some of the",
    "start": "129700",
    "end": "136910"
  },
  {
    "start": "130000",
    "end": "227000"
  },
  {
    "text": "other videos I've said: \"Oh! you know there\nwas such massive differences between",
    "start": "136910",
    "end": "142100"
  },
  {
    "text": "machines\" There were! In the 1970s. I can\nquote [this] to you as a fact. Because there I was",
    "start": "142100",
    "end": "147740"
  },
  {
    "text": "at the University of Nottingham working\non a machine with 24-bit words.  Not byte",
    "start": "147740",
    "end": "154070"
  },
  {
    "text": "addressed at all. What did you put inside\nyour 24-bit words if you were mad keen on",
    "start": "154070",
    "end": "158960"
  },
  {
    "text": "characters? Four 6-bit characters. How\ndid you dig them out from that word?",
    "start": "158960",
    "end": "164600"
  },
  {
    "text": "With great difficulty(!)  The word-addressed\nmachine would give you the whole word.",
    "start": "164600",
    "end": "168380"
  },
  {
    "text": "It was your responsibility with bit-shift\noperations and a garden spade (more or",
    "start": "168380",
    "end": "173000"
  },
  {
    "text": "less!)  to dig out four 6-bit characters.\nNon-standard, not 8-bit characters. ",
    "start": "173000",
    "end": "178160"
  },
  {
    "text": "And everybody said: \"Ah well, it's all right for IBM \nbut it's so much more *expensive* building ",
    "start": "178160",
    "end": "183290"
  },
  {
    "text": "byte-addressed machines!\" But in the end it\nprevailed. And I do believe that things",
    "start": "183290",
    "end": "187670"
  },
  {
    "text": "like that about the fundamental way you\naddress memory and being able to, sort of,",
    "start": "187670",
    "end": "192980"
  },
  {
    "text": "put units together, preferably in powers\nof two not multiples of two.",
    "start": "192980",
    "end": "198860"
  },
  {
    "text": "So, right at the beginning I had a 24-bit\nword; Atlas had a 48-bit word;",
    "start": "198860",
    "end": "205700"
  },
  {
    "text": "DEC 10s, I think, had a 36-bit word. And Seymour\nCray, CDC, had a 60 bit word. All of those",
    "start": "205700",
    "end": "214220"
  },
  {
    "text": "are multiples of 2, but I don't think\nany of them, that I've just quoted, are",
    "start": "214220",
    "end": "218300"
  },
  {
    "text": "powers of 2. And it really mattered. it\nturned out to have a power-of-two basic",
    "start": "218300",
    "end": "224840"
  },
  {
    "text": "unit - bigger than a bit -  8-bit bytes. \nSo, anyway, I use that to introduce the",
    "start": "224840",
    "end": "232760"
  },
  {
    "start": "227000",
    "end": "315000"
  },
  {
    "text": "idea of intermediate codes but we're now\nI think - in tying things up -  in a",
    "start": "232760",
    "end": "237980"
  },
  {
    "text": "situation to revisit that now and say:\n\"Intermediate codes really are useful\". ",
    "start": "237980",
    "end": "243769"
  },
  {
    "text": "and come into their own, if you like, with the\nidea of wanting to port a compiler from",
    "start": "243770",
    "end": "248990"
  },
  {
    "text": "one architecture, perhaps to a very very\ndifferent architecture. What I call the",
    "start": "248990",
    "end": "253940"
  },
  {
    "text": "'semantic gap' between your high-level\nlanguage, and your program eventually",
    "start": "253940",
    "end": "258590"
  },
  {
    "text": "that runs on binary,\nis HUGE! It's not so huge in C, you can",
    "start": "258590",
    "end": "264710"
  },
  {
    "text": "feel the assembler and the binary \npoking up through the C, But you start",
    "start": "264710",
    "end": "269360"
  },
  {
    "text": "trying to do a Haskell interprete,r or\ncompiler, and you'll soon discover that",
    "start": "269360",
    "end": "272930"
  },
  {
    "text": "this thing running down here is - so to\nspeak - miles away from the abstract stuff",
    "start": "272930",
    "end": "278630"
  },
  {
    "text": "you were writing up at the top.\nSo, everybody started saying don't we really",
    "start": "278630",
    "end": "282920"
  },
  {
    "text": "need intermediate codes to help us bridge the gap?",
    "start": "282920",
    "end": "285740"
  },
  {
    "text": "Hence Z-code, Bytecode for Java. All\nthese kind of things became discussed",
    "start": "285740",
    "end": "294530"
  },
  {
    "text": "more and more and more. And I think I,\nat one stage, said: \"Don't imagine it's always",
    "start": "294530",
    "end": "298900"
  },
  {
    "text": "fairly close to the hardware\". You could\nend up in a situation where C is your",
    "start": "298900",
    "end": "304220"
  },
  {
    "text": "intermediate code. Bjarne Stroustrup\ngot a C++ compiler started by - in",
    "start": "304220",
    "end": "310610"
  },
  {
    "text": "its early days - just making it produce C,\nwhich you know you can cope with. ",
    "start": "310610",
    "end": "316430"
  },
  {
    "text": "What I want to have a look at, today, is this\nwhole business of: How do intermediate",
    "start": "316430",
    "end": "322400"
  },
  {
    "text": "codes help you port a compiler from one\narchitecture to another?\" And you've got",
    "start": "322400",
    "end": "330680"
  },
  {
    "text": "to remember that, in the worst case, those\nmachines and architectures could be very",
    "start": "330680",
    "end": "335660"
  },
  {
    "text": "very different indeed. I did an example, I\nthink, of running a C compiler on a PDP-11",
    "start": "335660",
    "end": "342710"
  },
  {
    "text": "in PDP-11 binary, whose\ncross-compilation effect was to spit out",
    "start": "342710",
    "end": "348740"
  },
  {
    "text": "Z80 binary, which is very very different.\nHow can you cope, then, with",
    "start": "348740",
    "end": "354849"
  },
  {
    "text": "cross-compilation? And how does\ncross-compilation lead you on to being",
    "start": "354850",
    "end": "361820"
  },
  {
    "text": "able to think about porting your\ncompiler? Not just producing code for a",
    "start": "361820",
    "end": "368450"
  },
  {
    "text": "foreign machine but, in a way to \nmount an invasion of the foreign machine",
    "start": "368450",
    "end": "374030"
  },
  {
    "text": "and to say: \"I'm not just going to push\nboatloads of code over, I'm going to set up",
    "start": "374030",
    "end": "378110"
  },
  {
    "text": "a bridgehead. We're going to land and I'm\ngoing to set up a lot of my software tools",
    "start": "378110",
    "end": "381680"
  },
  {
    "text": "on the far machine - not just fling raw\nbinary at it.",
    "start": "381680",
    "end": "386419"
  },
  {
    "start": "386000",
    "end": "568000"
  },
  {
    "text": "So let's start to discover a bit more\nabout this then. But in order to get into",
    "start": "386420",
    "end": "394280"
  },
  {
    "text": "the details I have,  at great personal\nmental expense,  made myself something",
    "start": "394280",
    "end": "399590"
  },
  {
    "text": "like 40 or 50 T-diagram blanks and\nlet us hope that those prove sufficient",
    "start": "399590",
    "end": "404900"
  },
  {
    "text": "for the task. I just wanted to talk you\nthrough this, first of all, as being the",
    "start": "404900",
    "end": "408860"
  },
  {
    "text": "basis for what we're going to discuss\nand then I'll put it to one side. But",
    "start": "408860",
    "end": "412400"
  },
  {
    "text": "I'll bring it back if I need to refer to\nit again. We are getting in to a land of",
    "start": "412400",
    "end": "418780"
  },
  {
    "text": "intermediate codes. I've glued four\nthings to the page. What are they? ",
    "start": "418780",
    "end": "425420"
  },
  {
    "text": "Well, these two, at the top left, are what I will\ncall Source Texts for your cross compilation / ",
    "start": "425420",
    "end": "431390"
  },
  {
    "text": "compiler porting efforts.\nWhat you're saying is: from now on we",
    "start": "431390",
    "end": "437060"
  },
  {
    "text": "don't compile directly from H, the\nhigh-level language, to produce binary, B,",
    "start": "437060",
    "end": "443389"
  },
  {
    "text": "in the code generator. We do it in two\nsteps. We have an H compiler written in H",
    "start": "443390",
    "end": "449180"
  },
  {
    "text": "producing I, the intermediate code, which\nI see is not on this list. Let's add it: ",
    "start": "449180",
    "end": "455380"
  },
  {
    "text": "\"I = Intermediate Code\". Now, on the left\nat the top are the source texts for",
    "start": "455380",
    "end": "461270"
  },
  {
    "text": "doing this. But, if you consult the\nprevious things we have done on",
    "start": "461270",
    "end": "465800"
  },
  {
    "text": "compilation you will understand that\nit's not directly those that we can use",
    "start": "465800",
    "end": "471169"
  },
  {
    "text": "because we can't directly execute H. \nWe have to put these through an H compiler.",
    "start": "471170",
    "end": "476480"
  },
  {
    "text": "And we end up with the binary executable\nversions of them. Now, a little bit of",
    "start": "476480",
    "end": "482090"
  },
  {
    "text": "extra notation here. If you see at the\nbottom, for this executable B', I",
    "start": "482090",
    "end": "487760"
  },
  {
    "text": "use a single dash (prime) to mean: \"The computer I\ncurrently possess, my old computer, the",
    "start": "487760",
    "end": "493940"
  },
  {
    "text": "one I do all my work on\". If you see\nthings like B'' that means the",
    "start": "493940",
    "end": "498650"
  },
  {
    "text": "new machine that I'm trying to port\nthings to. So, we'll eventually get to",
    "start": "498650",
    "end": "503479"
  },
  {
    "text": "that stage of getting stuff across and\nyou'll see B'' is appearing.",
    "start": "503480",
    "end": "507500"
  },
  {
    "text": "Inevitably, if you go this route, your\ncompilation down to binary is now a",
    "start": "507500",
    "end": "512180"
  },
  {
    "text": "two-stage process. It may be hidden from\nyou but it has",
    "start": "512180",
    "end": "515570"
  },
  {
    "text": "to be there. The other half, you see, is [that] if\nyou're only going half way, to intermedia",
    "start": "515570",
    "end": "520969"
  },
  {
    "text": "code, the other half of the journey is to\ngo from intermediate code down to",
    "start": "520970",
    "end": "525500"
  },
  {
    "text": "runnable binary for the whole thing.\nThere's your intermediate code",
    "start": "525500",
    "end": "529430"
  },
  {
    "text": "interpreter, or compiler, written in B'\nrunning B', producing B'.  So, I've",
    "start": "529430",
    "end": "536390"
  },
  {
    "text": "numbered these 1, 2, 3 and 4\nand eventually I'll come back and say:",
    "start": "536390",
    "end": "539810"
  },
  {
    "text": "\"We've now created a new number 3\", or\nsomething like that. What I'm going to do",
    "start": "539810",
    "end": "544040"
  },
  {
    "text": "in this. Whereas in previous episodes\nI've talked about recoding a C compiler",
    "start": "544040",
    "end": "550339"
  },
  {
    "text": "to make better binary come out I did\nthat previously by calling it 'subscript",
    "start": "550340",
    "end": "556310"
  },
  {
    "text": "B for better', but I've decided now to\nuse an asterisk. If you see an asterisk",
    "start": "556310",
    "end": "561380"
  },
  {
    "text": "somewhere it means it's a 'better' version\nof what went before. And I is",
    "start": "561380",
    "end": "566570"
  },
  {
    "text": "'intermediate code'. So, let's put that to\none side to be dragged back as and when",
    "start": "566570",
    "end": "572450"
  },
  {
    "start": "568000",
    "end": "594000"
  },
  {
    "text": "we need it. When you write a program you\nhave in mind a certain input, it executes",
    "start": "572450",
    "end": "579440"
  },
  {
    "text": "and it produces a certain form of output.\nAnd you're very happy. And it all works",
    "start": "579440",
    "end": "583340"
  },
  {
    "text": "beautifully. Rather than writing 'C', down\nhere, as I have been doing all along, I'll",
    "start": "583340",
    "end": "587930"
  },
  {
    "text": "try and generalize it a bit, say to some\nhigh-level language (H) that you're",
    "start": "587930",
    "end": "591160"
  },
  {
    "text": "confident with and have used for ages.\nBut all the while you know. So this is, if",
    "start": "591160",
    "end": "596540"
  },
  {
    "start": "594000",
    "end": "664000"
  },
  {
    "text": "you like, 'Userprog' here you are. You know\nthat H can't execute directly so you",
    "start": "596540",
    "end": "601880"
  },
  {
    "text": "rely on the fact that, bootstrapped up\nover several generations, we just happen",
    "start": "601880",
    "end": "608030"
  },
  {
    "text": "to have an H compiler that runs in B'\nand produces B'.  By slotting that into",
    "start": "608030",
    "end": "616070"
  },
  {
    "text": "there [uses T-diag template] you remember - there's an \nimplicit arrow there.  That's H feeds into that one there",
    "start": "616070",
    "end": "620900"
  },
  {
    "text": "and the transformation done in this\ncompiler is to take the H and convert",
    "start": "620900",
    "end": "626030"
  },
  {
    "text": "into B', with a compiler that is now an\nexecutable binary itself. So, the net",
    "start": "626030",
    "end": "631670"
  },
  {
    "text": "result of all that, which we'll show up\nhere - arrows - is what that makes, once",
    "start": "631670",
    "end": "636829"
  },
  {
    "text": "you've compiled is of course something\nthat has your treasured input and output",
    "start": "636830",
    "end": "641780"
  },
  {
    "text": "but is running, H running on B' produces\nB'. So, that is the binary executable",
    "start": "641780",
    "end": "648800"
  },
  {
    "text": "version of your program. What happens if\nyour input and output was H itself?",
    "start": "648800",
    "end": "658640"
  },
  {
    "text": "Can you write a compiler in itself? Of course\nyou can! It's what all this is about. You want",
    "start": "658640",
    "end": "664970"
  },
  {
    "start": "664000",
    "end": "703000"
  },
  {
    "text": "to produce an H compiler. We'll start off\nby writing an H compiler in H. So we'll",
    "start": "664970",
    "end": "670339"
  },
  {
    "text": "put this back to one side now these two\n[T-shapes]. What happens if I were to say: \"Well, I've",
    "start": "670339",
    "end": "677300"
  },
  {
    "text": "written an H compiler in H and it\nproduces B'*. What I'm saying is:",
    "start": "677300",
    "end": "686450"
  },
  {
    "text": "\"I am fed up with plain old B'\nbecause it's slow and it's inefficient.",
    "start": "686450",
    "end": "691670"
  },
  {
    "text": "And it was wonderful when I first did it\nand actually this thing up here has been",
    "start": "691670",
    "end": "695800"
  },
  {
    "text": "bootstrapped up through being written in\nassembler and heaven knows what\".",
    "start": "695800",
    "end": "700310"
  },
  {
    "text": "See previous episodes if that sentence\ndoesn't make any sense to you. But now we",
    "start": "700310",
    "end": "705380"
  },
  {
    "start": "703000",
    "end": "734000"
  },
  {
    "text": "have got a situation [where] you want to improve\nthe quality of your binary so here's a",
    "start": "705380",
    "end": "710810"
  },
  {
    "text": "bit of revision. What you do is you say:\n\"OK I'll write a better C compiler - better",
    "start": "710810",
    "end": "716990"
  },
  {
    "text": "in the sense of 'better quality binary' \". \nI feed it to the old compiler that we've",
    "start": "716990",
    "end": "722750"
  },
  {
    "text": "got working already,  which takes in H\nruns on B', produces B'. ",
    "start": "722750",
    "end": "729079"
  },
  {
    "text": "Anbd what does that end you up with? Answer:\nan H producing binary. It's running on",
    "start": "729079",
    "end": "735350"
  },
  {
    "start": "734000",
    "end": "766000"
  },
  {
    "text": "old binary that's not super quality but\nit's ok it doesn't crash. It's a bit slow.",
    "start": "735350",
    "end": "741889"
  },
  {
    "text": "Just to end this little exercise off,\nbefore we get on to genuine porting compilers.,",
    "start": "741890",
    "end": "747170"
  },
  {
    "text": "You've got that [points at T-diagram] and you\nnaturally then say: \"Well why not feed it",
    "start": "747170",
    "end": "751279"
  },
  {
    "text": "to itself again?\" And if you get another\nversion of that, feed one into the other,",
    "start": "751279",
    "end": "756199"
  },
  {
    "text": "you can end up with H written in better\nbinary, producing better binary. And if",
    "start": "756199",
    "end": "762470"
  },
  {
    "text": "you look up [the video] \"Self-compiling Compilers\"\nthat's exactly what we do. So it's all",
    "start": "762470",
    "end": "767329"
  },
  {
    "text": "very well doing this simple-minded stuff.\nWe take one great flying leap in our [previous]",
    "start": "767329",
    "end": "772010"
  },
  {
    "text": "compilers and require the code generator\nto be able to get very low-level very",
    "start": "772010",
    "end": "778430"
  },
  {
    "text": "specific and yet be very\nvery tight and wonderful for all sorts",
    "start": "778430",
    "end": "783720"
  },
  {
    "text": "of different binaries for different\nmachines B', B'' etc.",
    "start": "783720",
    "end": "787709"
  },
  {
    "text": "That's hard. Sso we've decided that\nintermediate codes might be the answer.",
    "start": "787710",
    "end": "791670"
  },
  {
    "text": "So how do we cope then, using\nintermediate codes just with this",
    "start": "791670",
    "end": "797190"
  },
  {
    "text": "business of improving your code?\nHow would you do it? Well it has to be a",
    "start": "797190",
    "end": "802560"
  },
  {
    "text": "two-stage process, no question about that.\nIt has to be. So, this time I will do an H",
    "start": "802560",
    "end": "807900"
  },
  {
    "start": "805000",
    "end": "864000"
  },
  {
    "text": "compiler, written in H. And this time I am\ngoing to make it produce better",
    "start": "807900",
    "end": "813890"
  },
  {
    "text": "intermediate code than ever before. So\nyou see ... think of it this way. When you",
    "start": "813890",
    "end": "820080"
  },
  {
    "text": "upgrade a compiler you've now got two\nhalves to upgrade. Do you want to upgrade",
    "start": "820080",
    "end": "825330"
  },
  {
    "text": "the H-to-intermediate-code piece, the\nfront end, so-called. Or do you want to",
    "start": "825330",
    "end": "830550"
  },
  {
    "text": "upgrade the intermediate code\ninterpreter, going down to binary, the",
    "start": "830550",
    "end": "834930"
  },
  {
    "text": "back-end? It's a mix and match. You\ncan do either, or both, or in whatever",
    "start": "834930",
    "end": "840450"
  },
  {
    "text": "order you like. But you've got to\nremember it is a two-stage process.",
    "start": "840450",
    "end": "846620"
  },
  {
    "text": "Fortunately for me I have, already\nworking, an old compiler for H, running on",
    "start": "846620",
    "end": "853110"
  },
  {
    "text": "B' - original machine binary - and producing",
    "start": "853110",
    "end": "856250"
  },
  {
    "text": "ordinary intermediate code. Not \"super*\nintermediate code. I've written a better",
    "start": "856250",
    "end": "860940"
  },
  {
    "text": "version of myself now and I'm upgrading\nthis front-end. So we've got H written in",
    "start": "860940",
    "end": "866130"
  },
  {
    "text": "H producing I* -  better-quality\nintermediate code in some sense - than went before.",
    "start": "866130",
    "end": "870630"
  },
  {
    "text": "But the old version of the\ncompiler I've been using for months now",
    "start": "870630",
    "end": "874620"
  },
  {
    "text": "just has H running on B' producing\nordinary intermediate code -  not optimized.",
    "start": "874620",
    "end": "880710"
  },
  {
    "text": "But it's good enough for compiling this\none. The only thing that's different from",
    "start": "880710",
    "end": "885480"
  },
  {
    "text": "what we've got before is that we don't\ndirectly end up producing binary as the output. ",
    "start": "885480",
    "end": "891990"
  },
  {
    "text": "We produce intermediate code as\nthe output. So this first stage, then, will",
    "start": "891990",
    "end": "897089"
  },
  {
    "text": "get me the following:  H feeds into H\nrunning on B' produces I, means that",
    "start": "897090",
    "end": "902970"
  },
  {
    "text": "this thing takes in H produces I* and",
    "start": "902970",
    "end": "909560"
  },
  {
    "text": "is running on I. OK fine.\nSo we've kind of 'recompiled the compiler'",
    "start": "909560",
    "end": "917330"
  },
  {
    "start": "913000",
    "end": "968000"
  },
  {
    "text": "but we haven't gone far enough yet.\nAnd this is the the ball and chain",
    "start": "917330",
    "end": "922580"
  },
  {
    "text": "around your ankle when you go for\nintermediate codes is you've got a",
    "start": "922580",
    "end": "926450"
  },
  {
    "text": "better thing but it is reliant on\nrunning - being able to cope with -  the fact",
    "start": "926450",
    "end": "933589"
  },
  {
    "text": "that's an intermediate code stage. \nOK that doesn't put us off. What I've said,",
    "start": "933589",
    "end": "938690"
  },
  {
    "text": "all along, is that these are my key\nsource texts these are my executables",
    "start": "938690",
    "end": "943880"
  },
  {
    "text": "and what I'm pointing out now, is, if you\nuse intermediate codes you don't just",
    "start": "943880",
    "end": "949310"
  },
  {
    "text": "need a source-end translator you need a\nback-end translator. You need a thing",
    "start": "949310",
    "end": "954800"
  },
  {
    "text": "that says, you know: \"My system produces\nintermediate code but I am the back",
    "start": "954800",
    "end": "958490"
  },
  {
    "text": "end that takes in intermediate code and\nproduces real binary that really will run.\"",
    "start": "958490",
    "end": "963080"
  },
  {
    "text": "So, I want one of those now [points at T-shape (3)] \nto put into my diagram. This is what we're at so far.",
    "start": "963080",
    "end": "969260"
  },
  {
    "text": "Let me gobble up yet another T-diagram",
    "start": "969260",
    "end": "972680"
  },
  {
    "text": "and to say: \"If I put in here what\neverybody ought to have available to them,",
    "start": "972680",
    "end": "978350"
  },
  {
    "text": "which is an I producing B'\nwritten in B',  I can now slot that in",
    "start": "978350",
    "end": "988160"
  },
  {
    "text": "there like that. And just look what\nhappens. You've got your first-stage",
    "start": "988160",
    "end": "992139"
  },
  {
    "text": "compilation. It's doing wonderful things\nbut it's executing intermediate code.",
    "start": "992140",
    "end": "997370"
  },
  {
    "text": "And maybe I have a test interpreter that\nsort of, to show you: \"Well that's kind of working.\"",
    "start": "997370",
    "end": "1001120"
  },
  {
    "text": "But, in the end, you want faster,\nmore efficient, code. So you decide you",
    "start": "1001120",
    "end": "1005080"
  },
  {
    "text": "will compile your intermediate code into\nproper binary. And this kind of choice",
    "start": "1005080",
    "end": "1009640"
  },
  {
    "text": "between: \"Do I interpret it slowly and see\nif it's working versus do I in the end",
    "start": "1009640",
    "end": "1013870"
  },
  {
    "text": "commit to compiling it?\" is the sort of thing\navailable in stuff like Java bytecode and so on.",
    "start": "1013870",
    "end": "1018580"
  },
  {
    "text": "Start off by interpreting -\nfeels a bit slow but it's looking good,",
    "start": "1018580",
    "end": "1023080"
  },
  {
    "text": "let's compile it. Now watch what happens\nas you trace through here. I goes in here,",
    "start": "1023080",
    "end": "1028060"
  },
  {
    "text": "this is the intermediate code compiler,\nif you like, now producing genuine binary.",
    "start": "1028060",
    "end": "1033400"
  },
  {
    "text": "That shoots through there and what you\nend up with",
    "start": "1033400",
    "end": "1037949"
  },
  {
    "text": "is H producing I* i.e. r better-quality\nintermediate code, running on B'.",
    "start": "1037950",
    "end": "1046260"
  },
  {
    "start": "1046000",
    "end": "1125000"
  },
  {
    "text": "Right, well we're getting close. There's\none final thing, though, that you need to do.",
    "start": "1046260",
    "end": "1051030"
  },
  {
    "text": "What we've got ourselves now is a\nsituation where we've got a compiler",
    "start": "1051030",
    "end": "1057030"
  },
  {
    "text": "that takes in statements in H. It is\nrunning on B' binary, ordinary",
    "start": "1057030",
    "end": "1063660"
  },
  {
    "text": "unimproved binary.  but it does produce\nbetter intermediate code. We're now going",
    "start": "1063660",
    "end": "1069120"
  },
  {
    "text": "to pull the same trick that we've done\nbefore in Self-compiling Compilers.",
    "start": "1069120",
    "end": "1074700"
  },
  {
    "text": "The only difference here. though. is we've got\nthis I to cope with this time. But the",
    "start": "1074700",
    "end": "1078860"
  },
  {
    "text": "principles of what we're doing are just\nthe same. If I bring this one [T shape] down to",
    "start": "1078860",
    "end": "1082860"
  },
  {
    "text": "stop my having to write out another one,\nwe've now made a binary out of that, feed",
    "start": "1082860",
    "end": "1088410"
  },
  {
    "text": "it to itself. Originally I started with H\nI* to H. I compiled it all the way",
    "start": "1088410",
    "end": "1093990"
  },
  {
    "text": "through to intermediate code, as best I\ncould. It's good quality intermediate",
    "start": "1093990",
    "end": "1097230"
  },
  {
    "text": "code. Now take that thing, your executable,\nfeed the original thing to itself and",
    "start": "1097230",
    "end": "1104040"
  },
  {
    "text": "look what happens! The H goes in there\nand produces I*. So. you end up with H [producing]",
    "start": "1104040",
    "end": "1111720"
  },
  {
    "text": "I* [written in]  I*.  Final stage coming up,\nI promise. So that, if you like, when you're",
    "start": "1111720",
    "end": "1119460"
  },
  {
    "text": "through its machinations produces that.\nOne final stage - and I promise the",
    "start": "1119460",
    "end": "1124169"
  },
  {
    "text": "torture will end - right! Now you might say:\n\"There - no big deal. I can write an",
    "start": "1124170",
    "end": "1128580"
  },
  {
    "start": "1125000",
    "end": "1228000"
  },
  {
    "text": "intermediate code interpreter and check\nout rough-and-ready. It'll be slow but [we can] ",
    "start": "1128580",
    "end": "1133140"
  },
  {
    "text": "check out whether everything works\". But\nthen somebody in the end says: \"No - come on",
    "start": "1133140",
    "end": "1137970"
  },
  {
    "text": "let's compile it - it might go a lot faster.\"\nSo if you remember item number 4",
    "start": "1137970",
    "end": "1143730"
  },
  {
    "text": "in our original toolkit was a thing that\ntakes I and turns it into binary. So I'm",
    "start": "1143730",
    "end": "1149490"
  },
  {
    "text": "going to put one of those in place now for\nthat all the way through. What will that",
    "start": "1149490",
    "end": "1155220"
  },
  {
    "text": "produce you? Don't forget we're starting\nH producing good quality intermediate",
    "start": "1155220",
    "end": "1161429"
  },
  {
    "text": "code so that is what it produces but\nwhat about here? If you trace through,",
    "start": "1161430",
    "end": "1170170"
  },
  {
    "text": "better quality intermediate code should\nhopefully give you better quality binary",
    "start": "1170170",
    "end": "1175510"
  },
  {
    "text": "when you compile it. So I can put down\nhere that this is basically - if there",
    "start": "1175510",
    "end": "1183100"
  },
  {
    "text": "aren't too many suffixes and\nsuperscripts there - it's producing you a",
    "start": "1183100",
    "end": "1187860"
  },
  {
    "text": "H to I  compiler but running on better\nquality binary.  So one way or another",
    "start": "1187860",
    "end": "1195640"
  },
  {
    "text": "this is the new 3 because, referring back\nto our original map, what i've said is",
    "start": "1195640",
    "end": "1203230"
  },
  {
    "text": "how can i improve that and i have\nmanaged to improve it. I've got better",
    "start": "1203230",
    "end": "1207850"
  },
  {
    "text": "quality intermediate code and better\nquality binary. It is improved but it has",
    "start": "1207850",
    "end": "1212710"
  },
  {
    "text": "been a fairly messy two-stage process\nthat's hidden from you. But the idea of",
    "start": "1212710",
    "end": "1218230"
  },
  {
    "text": "that is to give you just the notion of\nthe fact that there is a penalty to pay,",
    "start": "1218230",
    "end": "1225610"
  },
  {
    "text": "you have to have a two-stage process. So\nwe've expended a lot of brain cells I",
    "start": "1225610",
    "end": "1230919"
  },
  {
    "text": "think between us now discovering how we\ncan improve our compiler, which we did do",
    "start": "1230919",
    "end": "1236679"
  },
  {
    "text": "before in Self compiling Compilers\nepisode, but this time it's different.",
    "start": "1236679",
    "end": "1241480"
  },
  {
    "text": "How can you improve your compiler when\nthere's an intermediate code involved?",
    "start": "1241480",
    "end": "1245860"
  },
  {
    "text": "And we've done it! And we've seen exactly\nhow we can do it. We feel weary - or at",
    "start": "1245860",
    "end": "1251530"
  },
  {
    "text": "least I do - but that is it. And you might say:\n\"Why bother with intermediate codes? It's just",
    "start": "1251530",
    "end": "1256740"
  },
  {
    "text": "producing more stages that we have to go\nthrough?\" Well, the answer us I think ",
    "start": "1256740",
    "end": "1262240"
  },
  {
    "text": "that it does make life more easy for you\nif you say: \"OK, instead of improving",
    "start": "1262240",
    "end": "1269830"
  },
  {
    "text": "ourselves now within an intermediate\ncode context how about we say 'I don't",
    "start": "1269830",
    "end": "1275500"
  },
  {
    "text": "want better binary out of it - I want\ndifferent binary for another machine' !",
    "start": "1275500",
    "end": "1281980"
  },
  {
    "text": "So, we will find that the diagrams that I've\njust drawn with some subtle adaptation",
    "start": "1281980",
    "end": "1286929"
  },
  {
    "text": "- and me getting all tangled up probably -\ncan be adapted for producing binary for",
    "start": "1286929",
    "end": "1292870"
  },
  {
    "text": "a completely new architecture which we\nwill be calling B''.",
    "start": "1292870",
    "end": "1297490"
  },
  {
    "text": "\nWe're now going to find in this next one,\nwe're doing is we're just changing the",
    "start": "1297490",
    "end": "1302289"
  },
  {
    "text": "rules slightly. Instead of B* -\nimproved binary - we're moving from B' to B''. \n",
    "start": "1302289",
    "end": "1309070"
  }
]