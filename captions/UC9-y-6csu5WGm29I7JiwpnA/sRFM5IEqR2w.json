[
  {
    "text": "In the last video we talked about sobel edge detection.",
    "start": "0",
    "end": "2400"
  },
  {
    "text": "Okay. Sobel operator is a kernal convolution process we can use",
    "start": "2400",
    "end": "5100"
  },
  {
    "text": "and it returns a high\nresponse where there's a sharp change in gradient image",
    "start": "5100",
    "end": "10100"
  },
  {
    "text": "and low response where there isn't.",
    "start": "10120",
    "end": "12719"
  },
  {
    "text": "it's generally well on grayscale images",
    "start": "12720",
    "end": "14200"
  },
  {
    "text": "that we first blurred just to make sure things are\nnice and smooth",
    "start": "14200",
    "end": "16160"
  },
  {
    "text": "it also handily produces an orientation at every point",
    "start": "16160",
    "end": "19820"
  },
  {
    "text": "ya know with which tells us",
    "start": "19820",
    "end": "20600"
  },
  {
    "text": "from north in image, upwards to  downwards, left and right",
    "start": "20600",
    "end": "23420"
  },
  {
    "text": "what direction is our edge facing",
    "start": "23720",
    "end": "25720"
  },
  {
    "text": "and that can be really useful for\npost-processing this image so that's",
    "start": "26220",
    "end": "30660"
  },
  {
    "text": "what we gonna talk about now the canny edge\ndetector is essentially takes a Sobel",
    "start": "30660",
    "end": "36219"
  },
  {
    "text": "operator and makes it just a step better ,a step more\nuseful perhaps. For edge analysis which is to get",
    "start": "36219",
    "end": "41660"
  },
  {
    "text": "rid of the edges that we're not really\ninterested and keep only the really good stuff",
    "start": "41660",
    "end": "44230"
  },
  {
    "text": "the Canny edge detector was published in 1986 and the input of a Canny operator is simply the output of Sobel.",
    "start": "46900",
    "end": "54860"
  },
  {
    "text": "Okay, so we've taken over image we've converted to grayscale",
    "start": "55000",
    "end": "57540"
  },
  {
    "text": "We've ran our Gaussian blur.\nAnd then we've run our Sobel operator in both the X&Y directions.",
    "start": "57800",
    "end": "63879"
  },
  {
    "text": "We've calculated the gradient and the\norientation of those and that's when were",
    "start": "63880",
    "end": "67250"
  },
  {
    "text": "ready for canny's process. okay it's\nfairly simple but of course it's also",
    "start": "67260",
    "end": "72119"
  },
  {
    "text": "effective and so it still sees a lot of use.\nThere are other newer edge detectors ,and there are certainly a",
    "start": "72119",
    "end": "77900"
  },
  {
    "text": "lot of newer filters , that are using Sobel.\nSobel still sees a lot of  use.",
    "start": "77900",
    "end": "83549"
  },
  {
    "text": "Canny works by taking the image from the Sobel output. Thinning all the edges so they are 1 pixel wide.",
    "start": "83549",
    "end": "90259"
  },
  {
    "text": "Because thick edges doesn't really help us.",
    "start": "90259",
    "end": "92619"
  },
  {
    "text": "What we really care about is:\nWhere are the edges?\n Not: \nHow thick are they?",
    "start": "92760",
    "end": "95020"
  },
  {
    "text": "imagine we're trying to find the center line of a root because we want to find where the root is.",
    "start": "95020",
    "end": "99219"
  },
  {
    "text": "if we do a Sobel edge detection its",
    "start": "99220",
    "end": "101760"
  },
  {
    "text": "it's gonna find gradients at both left\nand the right side of the root, it's going to be",
    "start": "101780",
    "end": "104729"
  },
  {
    "text": "bit messy.\nBut also its not resolution\nindependent if we've got a really high",
    "start": "104729",
    "end": "110520"
  },
  {
    "text": "resolution image the gradient is going to be spread\nover many pixels in a low resolution",
    "start": "110520",
    "end": "115060"
  },
  {
    "text": "image you can have a Sharpish gradient\nbecause that's the best that we can do",
    "start": "115060",
    "end": "118258"
  },
  {
    "text": "with those pixels.\nWhat a Canny edge detector does is get rid of all that and",
    "start": "118259",
    "end": "122340"
  },
  {
    "text": "just say this is where your edge is because\nI've got rid of all that stuff on the outside of it.",
    "start": "122340",
    "end": "125490"
  },
  {
    "text": "Canny works by first finding the edges and then\nuse a process called hysteresis thresholding",
    "start": "125490",
    "end": "130060"
  },
  {
    "text": "which sees use in other",
    "start": "130060",
    "end": "131819"
  },
  {
    "text": "areas which is essentially a\ntwo-level threshold which we'll talk",
    "start": "131819",
    "end": "134959"
  },
  {
    "text": "about ok so the first thing to do for\nevery pixel is try find out if its a",
    "start": "134959",
    "end": "141560"
  },
  {
    "text": "local maximum ok that means that is\nbigger than its neighbors ok sounds easy",
    "start": "141560",
    "end": "146599"
  },
  {
    "text": "but we also bear in mind the orientation\nthat was produced by Sobel for every part",
    "start": "146600",
    "end": "150969"
  },
  {
    "text": "of the image if this our image and\nwe're examining let's say this pixel",
    "start": "150969",
    "end": "154469"
  },
  {
    "text": "here",
    "start": "154469",
    "end": "155040"
  },
  {
    "text": "okay we've run our Sobel X and Y operators on it, and we've got a value of gX and gY",
    "start": "155040",
    "end": "160480"
  },
  {
    "text": "and we've got a value of magnitude of\nthis edge.\nNow the magnitude of this edge",
    "start": "160480",
    "end": "164569"
  },
  {
    "text": "might be smaller or larger and what we want to do is try to find out if X is",
    "start": "164569",
    "end": "168400"
  },
  {
    "text": "bigger than its neighbors.\nwe really only care\nabout whether X is bigger than its neighbors",
    "start": "168400",
    "end": "173120"
  },
  {
    "text": "across the edge, right?\nIf along the edge, yes it might be\ngetting larger or smaller but that's not really",
    "start": "173120",
    "end": "177500"
  },
  {
    "text": "what we're concerned with.\nSo basically if the edges traveling down this direction",
    "start": "177500",
    "end": "181069"
  },
  {
    "text": "then we really care if\n X is bigger than this one(diagonal edge neighbor ) \nand this one(other diagonal edge neighbor ).\n Okay",
    "start": "181069",
    "end": "186269"
  },
  {
    "text": "if the edge is traveling in this direction(parrallel to edge)\nthen we really care",
    "start": "186269",
    "end": "188448"
  },
  {
    "text": "if X is bigger than this one and this one\n(parrallel neighbors)",
    "start": "188449",
    "end": "190749"
  },
  {
    "text": "So what Canny does is say\nwhat's the orientation of our edge",
    "start": "190749",
    "end": "193560"
  },
  {
    "text": "based on the output of Sobel operator.\nWe use inverse Tan to find that.",
    "start": "194340",
    "end": "199009"
  },
  {
    "text": "And then given that:  Is it bigger than it's neighbors and\ndoing that over the whole image will",
    "start": "199009",
    "end": "202629"
  },
  {
    "text": "produce lots of very nice thin edges\nright at the peaks of the center of our response.",
    "start": "202629",
    "end": "206349"
  },
  {
    "text": "[Moderator off camera] So if you've got a gradient on your roots or on your whatever the edge of the",
    "start": "206349",
    "end": "212209"
  },
  {
    "text": "flower, the petal or whatever it's basically just gonna find the strongest [..unintelligble]",
    "start": "212209",
    "end": "215709"
  },
  {
    "text": "So, if we imagine \nlooking at the gradient from the side then you might find a Sobel",
    "start": "215709",
    "end": "220120"
  },
  {
    "text": "response looks a bit like that, okay.\nBecause it's a kind of shallow edge, you know.",
    "start": "220120",
    "end": "225109"
  },
  {
    "text": "It's brightest where it is mostly\nbut because a photograph or something maybe",
    "start": "225109",
    "end": "228519"
  },
  {
    "text": "it's not completely steep, okay.\nAnd what Canny does is scrap all this and just get an edge right in the center, okay.",
    "start": "228519",
    "end": "236179"
  },
  {
    "text": "And that's really what we want, okay.",
    "start": "236200",
    "end": "238180"
  },
  {
    "text": "So that's the first process.",
    "start": "238180",
    "end": "239879"
  },
  {
    "text": "The second stage is to remove the edges that even though we weren't over maximum,",
    "start": "239880",
    "end": "244740"
  },
  {
    "text": "There still not very useful to use because maybe they're really weak response,",
    "start": "244740",
    "end": "247520"
  },
  {
    "text": "So noise basically.",
    "start": "247530",
    "end": "249330"
  },
  {
    "text": "We want to create an image of the dominate edges.",
    "start": "249330",
    "end": "253290"
  },
  {
    "text": "And preserve only the dominate edges.",
    "start": "253290",
    "end": "254819"
  },
  {
    "text": "For that we use a process \ncalled hysteresis thresholding.",
    "start": "254820",
    "end": "257820"
  },
  {
    "text": "So let's imagine that we've run our maximum suppression",
    "start": "257829",
    "end": "261290"
  },
  {
    "text": "over the whole image ok so we have lots\nof nice individual lines of pixels, okay.",
    "start": "261290",
    "end": "266010"
  },
  {
    "text": "That's great, but how do we threshold them to decide what edge is important and which edge isn't?",
    "start": "266010",
    "end": "270940"
  },
  {
    "text": "So if we pick just a threshold let's\nsay all the edges go from naught to 255",
    "start": "270940",
    "end": "275710"
  },
  {
    "text": "So naught is no edge, 255 is about the stronges t edge you can imagine, okay.",
    "start": "275710",
    "end": "281380"
  },
  {
    "text": "What value do we pick that's a good edge ,alright?",
    "start": "281380",
    "end": "284420"
  },
  {
    "text": "If we pick a value of twenty\nmost of the edges are going to be in, right?",
    "start": "284420",
    "end": "288020"
  },
  {
    "text": "Which means your gonna get a lot of noise, a lot of nonsense, and if you're looking",
    "start": "288020",
    "end": "291020"
  },
  {
    "text": "for the football in your picture, there's gonna be a lot of\nother stuff you have to weed out before you can work out where the ball is",
    "start": "291020",
    "end": "295919"
  },
  {
    "text": "But then if we pick a high threshold like 200, we're gonna get the",
    "start": "295920",
    "end": "298800"
  },
  {
    "text": "edge of the ball maybe, \nbut we might start to lose some of it because not all of the edges are",
    "start": "298800",
    "end": "303270"
  },
  {
    "text": "gonna be as strong, just that's how it is! alright.",
    "start": "303270",
    "end": "305509"
  },
  {
    "text": "So they lets say you hysterisis thresholding in one dimension first ,",
    "start": "305510",
    "end": "307510"
  },
  {
    "text": "and then you'll see how it applies\nto an edge so if this is are one",
    "start": "308010",
    "end": "312200"
  },
  {
    "text": "dimensional image ok and we have an edge response over here that is pretty good and we",
    "start": "312200",
    "end": "316160"
  },
  {
    "text": "have an edge response here which is\nreally good and they no edge response",
    "start": "316160",
    "end": "319280"
  },
  {
    "text": "over here now if we were thresholding\njust by a single level then we can put this level here",
    "start": "319280",
    "end": "323920"
  },
  {
    "text": "there were gonna get this top area , but we're not gonna\nget this area,  or this area. And that might be OK but we",
    "start": "323920",
    "end": "328600"
  },
  {
    "text": "might want this one okay because this is kind of part of the same object perhaps that we want",
    "start": "328600",
    "end": "332630"
  },
  {
    "text": "to try and preserve. \nSo hysteresis th resholding will have a threshold here and a threshold here",
    "start": "332630",
    "end": "335300"
  },
  {
    "text": "anything above the\ntop threshold is automatically okay[valid] so we take",
    "start": "335300",
    "end": "340569"
  },
  {
    "text": "all this and this is already ok anything\nbelow the bottom threshold is automatically",
    "start": "340570",
    "end": "344870"
  },
  {
    "text": "discounted it's not strong enough response\nthat's probably not an edge we're interested in",
    "start": "344870",
    "end": "348110"
  },
  {
    "text": "ok so we take off here and this is all got rid of. And then  anything  between the two thresholds",
    "start": "348110",
    "end": "353099"
  },
  {
    "text": "is only preserved if it's connected to\nsomething above the top threshold, ok .",
    "start": "353120",
    "end": "357880"
  },
  {
    "text": "So we're trying to sort of continue along edges where we've already had a high",
    "start": "357880",
    "end": "361800"
  },
  {
    "text": "responses at some point, ok.\nSo maybe the side the football is really good and the",
    "start": "361800",
    "end": "366349"
  },
  {
    "text": "other side is not so good, but because\nit's connected you think 'yeah that's probably okay.'\nPart of the same edge really.",
    "start": "366350",
    "end": "371580"
  },
  {
    "text": "So this stuff gets included simply by\nbeing connected to this high threshold.",
    "start": "371580",
    "end": "376099"
  },
  {
    "text": "In two dimensions it works the same way.\nWe look around the image and we search for edges.",
    "start": "376100",
    "end": "379490"
  },
  {
    "text": "And any edge that's above our top threshold we automatically include.",
    "start": "379490",
    "end": "384060"
  },
  {
    "text": "And any edge that's connected to it by pixel traversal we automatically include",
    "start": "384080",
    "end": "388800"
  },
  {
    "text": "Anything else we scrap.",
    "start": "388800",
    "end": "389840"
  },
  {
    "text": "And that really preserves only the sort of the core edges of the image the  stuff",
    "start": "389840",
    "end": "393860"
  },
  {
    "text": "that really shows you what shape\neverything is and there you could maybe do",
    "start": "393860",
    "end": "397240"
  },
  {
    "text": "some other post-processing to find\nobjects or something like that.",
    "start": "397240",
    "end": "400500"
  },
  {
    "text": "So I should probably show you some images now.",
    "start": "400500",
    "end": "402680"
  },
  {
    "text": "I've got my [unintelligble] .\nI haven't coded up Canny because there's",
    "start": "402680",
    "end": "405240"
  },
  {
    "text": "a lot of good implementations of Canny out there. Takes a little bit of time to traverse an image. okay.",
    "start": "405270",
    "end": "410060"
  },
  {
    "text": "If you looking for an implementation, the OpenCV one is very good",
    "start": "410060",
    "end": "413340"
  },
  {
    "text": "okay and you can use OpenCV in Java and C++ and Python as far as i know.\nok.",
    "start": "413470",
    "end": "419330"
  },
  {
    "text": "So what Canny does is it takes our Sobel operator and using\nthe orientation of each edge it thins it,",
    "start": "419330",
    "end": "425789"
  },
  {
    "text": "and then it does hysteresis thresholding to\nfind the sort of duller edges and you get a picture that",
    "start": "425790",
    "end": "430540"
  },
  {
    "text": "looks much like what it did before\nbut now we really just got the outline of the flower",
    "start": "430540",
    "end": "434020"
  },
  {
    "text": "almost the entire edge of\nthe flower and it's  leaf have been preserved",
    "start": "434020",
    "end": "436660"
  },
  {
    "text": "But we've lost a lot of stuff between the petals.",
    "start": "436660",
    "end": "438480"
  },
  {
    "text": "So we can obviously adjust both the lower and upper thresholds of the hysteresis thresholding,",
    "start": "438480",
    "end": "442560"
  },
  {
    "text": "and the sort of noiseness of the Sobel operater by blurring,\n and both of those will have an effect.",
    "start": "442560",
    "end": "449680"
  },
  {
    "text": "And we can really control what edges come out of Canny.",
    "start": "449680",
    "end": "451699"
  },
  {
    "text": "We can have just a few really dominant edges or [unintelligle] edges if that's what we want.",
    "start": "451700",
    "end": "457160"
  },
  {
    "text": "Here is an edge,\n fairly obviously we can see that but a computer can't.\n So if we put our Sobel operator here",
    "start": "457620",
    "end": "463780"
  },
  {
    "text": "then what we're essentially doing is\ndoing a hundred times one plus a hundred times two plus a hundred times.",
    "start": "464060",
    "end": "470440"
  }
]