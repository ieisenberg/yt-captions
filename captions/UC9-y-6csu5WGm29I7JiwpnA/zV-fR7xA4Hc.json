[
  {
    "start": "0",
    "end": "41000"
  },
  {
    "text": "i thought we could revisit the topic of",
    "start": "80",
    "end": "2159"
  },
  {
    "text": "email i know tom rodden way back at the",
    "start": "2159",
    "end": "4319"
  },
  {
    "text": "start of computer file did a video",
    "start": "4319",
    "end": "6240"
  },
  {
    "text": "overview of how email worked but i want",
    "start": "6240",
    "end": "7919"
  },
  {
    "text": "to focus in",
    "start": "7919",
    "end": "9200"
  },
  {
    "text": "on one bit which i find quite",
    "start": "9200",
    "end": "11040"
  },
  {
    "text": "interesting because i'm that sort of",
    "start": "11040",
    "end": "12719"
  },
  {
    "text": "strange type of character and that is",
    "start": "12719",
    "end": "14960"
  },
  {
    "text": "how do we transmit things that aren't",
    "start": "14960",
    "end": "17680"
  },
  {
    "text": "text through email i mean emails written",
    "start": "17680",
    "end": "19920"
  },
  {
    "text": "at the time was created i think",
    "start": "19920",
    "end": "21680"
  },
  {
    "text": "originally in the 70s the sort of",
    "start": "21680",
    "end": "23039"
  },
  {
    "text": "standards we're using now to send what",
    "start": "23039",
    "end": "25279"
  },
  {
    "text": "was predominantly going to be ascii text",
    "start": "25279",
    "end": "26960"
  },
  {
    "text": "small amounts of text sent between two",
    "start": "26960",
    "end": "29119"
  },
  {
    "text": "users on a unix system these days we'll",
    "start": "29119",
    "end": "32000"
  },
  {
    "text": "email programs zip files and i want to",
    "start": "32000",
    "end": "34399"
  },
  {
    "text": "look at how we encode things that aren't",
    "start": "34399",
    "end": "36960"
  },
  {
    "text": "text to be sent over email",
    "start": "36960",
    "end": "40960"
  },
  {
    "start": "41000",
    "end": "124000"
  },
  {
    "text": "if you look in the specifications for",
    "start": "41440",
    "end": "42879"
  },
  {
    "text": "email you can go and find the rfc",
    "start": "42879",
    "end": "45239"
  },
  {
    "text": "rfc822 for those who are interested in",
    "start": "45239",
    "end": "47520"
  },
  {
    "text": "been updated by rfc2822",
    "start": "47520",
    "end": "50320"
  },
  {
    "text": "if you look in that it describes email",
    "start": "50320",
    "end": "52320"
  },
  {
    "text": "as being a series of lines of text and",
    "start": "52320",
    "end": "54399"
  },
  {
    "text": "by lines of text it means a run of ascii",
    "start": "54399",
    "end": "56640"
  },
  {
    "text": "characters ideally no more than 80",
    "start": "56640",
    "end": "59039"
  },
  {
    "text": "characters or so they say i think it's",
    "start": "59039",
    "end": "60640"
  },
  {
    "text": "78 they actually specify followed by a",
    "start": "60640",
    "end": "63199"
  },
  {
    "text": "carriage return and a line feed but it",
    "start": "63199",
    "end": "65360"
  },
  {
    "text": "does stipulate it cannot be",
    "start": "65360",
    "end": "67760"
  },
  {
    "text": "more than 990 characters so you've got",
    "start": "67760",
    "end": "70560"
  },
  {
    "text": "to keep the lines relatively small 80",
    "start": "70560",
    "end": "73280"
  },
  {
    "text": "columns is effectively what they're",
    "start": "73280",
    "end": "74479"
  },
  {
    "text": "aiming for",
    "start": "74479",
    "end": "75680"
  },
  {
    "text": "so it's a series of lines of text that",
    "start": "75680",
    "end": "77840"
  },
  {
    "text": "are sent between two computer systems",
    "start": "77840",
    "end": "80799"
  },
  {
    "text": "it also says that those characters can",
    "start": "80799",
    "end": "83119"
  },
  {
    "text": "only be",
    "start": "83119",
    "end": "84240"
  },
  {
    "text": "ascii codes between 1 and 127 so it's 7",
    "start": "84240",
    "end": "87600"
  },
  {
    "text": "bit ascii",
    "start": "87600",
    "end": "88880"
  },
  {
    "text": "and you can't use carriage return or",
    "start": "88880",
    "end": "90560"
  },
  {
    "text": "line feed except to mean the end of the",
    "start": "90560",
    "end": "92799"
  },
  {
    "text": "line",
    "start": "92799",
    "end": "94079"
  },
  {
    "text": "so you can already see that we're",
    "start": "94079",
    "end": "95759"
  },
  {
    "text": "limited in what we can send between",
    "start": "95759",
    "end": "97840"
  },
  {
    "text": "email we can send text basically email",
    "start": "97840",
    "end": "100400"
  },
  {
    "text": "is designed to send text if we want to",
    "start": "100400",
    "end": "102000"
  },
  {
    "text": "send anything else we've got a problem",
    "start": "102000",
    "end": "104880"
  },
  {
    "text": "but of course these days we all email if",
    "start": "104880",
    "end": "107439"
  },
  {
    "text": "we use email that is",
    "start": "107439",
    "end": "109040"
  },
  {
    "text": "all sorts of things we might send",
    "start": "109040",
    "end": "110320"
  },
  {
    "text": "pictures music files programs pdfs all",
    "start": "110320",
    "end": "114240"
  },
  {
    "text": "sorts of other things we might send in",
    "start": "114240",
    "end": "115920"
  },
  {
    "text": "email so i want to look at how we can",
    "start": "115920",
    "end": "117360"
  },
  {
    "text": "sort of take any arbitrary binary file",
    "start": "117360",
    "end": "120880"
  },
  {
    "text": "and encode it so we can send it in an",
    "start": "120880",
    "end": "123680"
  },
  {
    "text": "email so it sounds like some serious",
    "start": "123680",
    "end": "125600"
  },
  {
    "start": "124000",
    "end": "207000"
  },
  {
    "text": "limitations if there's a 990 character",
    "start": "125600",
    "end": "128080"
  },
  {
    "text": "limit you know it sounds more like an",
    "start": "128080",
    "end": "129679"
  },
  {
    "text": "sms message or a tweet well the 990 was",
    "start": "129679",
    "end": "132640"
  },
  {
    "text": "a limit on any one line so you can have",
    "start": "132640",
    "end": "134640"
  },
  {
    "text": "as many lines as you like so you could",
    "start": "134640",
    "end": "136959"
  },
  {
    "text": "have a as long a message as you like but",
    "start": "136959",
    "end": "138959"
  },
  {
    "text": "you're right it's sort of it's very much",
    "start": "138959",
    "end": "140959"
  },
  {
    "text": "in the sort of computer systems of the",
    "start": "140959",
    "end": "142879"
  },
  {
    "text": "day you you may well be reading this on",
    "start": "142879",
    "end": "144800"
  },
  {
    "text": "a tele type where it's being sent to a",
    "start": "144800",
    "end": "146800"
  },
  {
    "text": "line printer and then you get to the",
    "start": "146800",
    "end": "148000"
  },
  {
    "text": "edge of the sort of lined paper and you",
    "start": "148000",
    "end": "150720"
  },
  {
    "text": "can't print any more characters anyway",
    "start": "150720",
    "end": "152239"
  },
  {
    "text": "so you're gonna have to go into another",
    "start": "152239",
    "end": "153440"
  },
  {
    "text": "line or you're reading it on a sort of",
    "start": "153440",
    "end": "156000"
  },
  {
    "text": "small display which can't display any",
    "start": "156000",
    "end": "157599"
  },
  {
    "text": "more than about 80 characters anyway so",
    "start": "157599",
    "end": "159680"
  },
  {
    "text": "in some ways it wasn't that much of a",
    "start": "159680",
    "end": "161120"
  },
  {
    "text": "limitation because you just have",
    "start": "161120",
    "end": "162879"
  },
  {
    "text": "multiple lines one after the other for",
    "start": "162879",
    "end": "165040"
  },
  {
    "text": "each line of the message you're wanting",
    "start": "165040",
    "end": "166560"
  },
  {
    "text": "to send and the machines that they were",
    "start": "166560",
    "end": "168720"
  },
  {
    "text": "using couldn't display graphics that",
    "start": "168720",
    "end": "171040"
  },
  {
    "text": "well either most of them they were",
    "start": "171040",
    "end": "172959"
  },
  {
    "text": "purely text-based machines or they",
    "start": "172959",
    "end": "174560"
  },
  {
    "text": "encoded graphics using text characters",
    "start": "174560",
    "end": "177040"
  },
  {
    "text": "sort of slashes and things and other",
    "start": "177040",
    "end": "178640"
  },
  {
    "text": "escape codes to display things so it was",
    "start": "178640",
    "end": "181840"
  },
  {
    "text": "a limitation but",
    "start": "181840",
    "end": "183680"
  },
  {
    "text": "it wasn't that much of a limitation",
    "start": "183680",
    "end": "185680"
  },
  {
    "text": "given the computers that they were using",
    "start": "185680",
    "end": "187360"
  },
  {
    "text": "at the time of course though now we want",
    "start": "187360",
    "end": "189680"
  },
  {
    "text": "to send any sort of file",
    "start": "189680",
    "end": "191599"
  },
  {
    "text": "and to do it and it wasn't that long",
    "start": "191599",
    "end": "193280"
  },
  {
    "text": "afterwards as tom says there was a",
    "start": "193280",
    "end": "194800"
  },
  {
    "text": "program called uun code and the",
    "start": "194800",
    "end": "196959"
  },
  {
    "text": "corresponding one called uud code which",
    "start": "196959",
    "end": "199760"
  },
  {
    "text": "would take any arbitrary binary file and",
    "start": "199760",
    "end": "202879"
  },
  {
    "text": "convert it into a series of characters",
    "start": "202879",
    "end": "204560"
  },
  {
    "text": "that would fit the spec that could be",
    "start": "204560",
    "end": "205920"
  },
  {
    "text": "sent over email uun code worked but it",
    "start": "205920",
    "end": "208720"
  },
  {
    "start": "207000",
    "end": "570000"
  },
  {
    "text": "was very much a manual process you could",
    "start": "208720",
    "end": "210640"
  },
  {
    "text": "only you'd have to find the ascii soup",
    "start": "210640",
    "end": "212879"
  },
  {
    "text": "cut it out and feed it into the decoder",
    "start": "212879",
    "end": "215200"
  },
  {
    "text": "program so what happened in the late 90s",
    "start": "215200",
    "end": "216959"
  },
  {
    "text": "is there was another standard proposed",
    "start": "216959",
    "end": "218640"
  },
  {
    "text": "called mime multi-purpose internet mail",
    "start": "218640",
    "end": "220959"
  },
  {
    "text": "extensions which sort of came up with a",
    "start": "220959",
    "end": "224000"
  },
  {
    "text": "slightly different way of doing it",
    "start": "224000",
    "end": "225280"
  },
  {
    "text": "enables you to have different sections",
    "start": "225280",
    "end": "226959"
  },
  {
    "text": "in the email that can be encoded in",
    "start": "226959",
    "end": "228480"
  },
  {
    "text": "different ways it'll explain what",
    "start": "228480",
    "end": "230400"
  },
  {
    "text": "they're encoded it'll explain what type",
    "start": "230400",
    "end": "232799"
  },
  {
    "text": "of files there is a sort of a an image",
    "start": "232799",
    "end": "236080"
  },
  {
    "text": "is it a an audio file what type of audio",
    "start": "236080",
    "end": "238720"
  },
  {
    "text": "file that sort of thing",
    "start": "238720",
    "end": "240560"
  },
  {
    "text": "in there but it still had to do the same",
    "start": "240560",
    "end": "242560"
  },
  {
    "text": "sort of thing it still had to take the",
    "start": "242560",
    "end": "244080"
  },
  {
    "text": "binary data that represents the actual",
    "start": "244080",
    "end": "247120"
  },
  {
    "text": "image or whatever it is we're trying to",
    "start": "247120",
    "end": "248959"
  },
  {
    "text": "send we'll use an image as an example",
    "start": "248959",
    "end": "251040"
  },
  {
    "text": "and it has to convert it into a form",
    "start": "251040",
    "end": "253519"
  },
  {
    "text": "that could still fit the old email",
    "start": "253519",
    "end": "255920"
  },
  {
    "text": "standards we're gonna have to take a",
    "start": "255920",
    "end": "257040"
  },
  {
    "text": "series of bytes one after the other and",
    "start": "257040",
    "end": "259280"
  },
  {
    "text": "effectively convert them into a series",
    "start": "259280",
    "end": "261840"
  },
  {
    "text": "of characters that we can decode at the",
    "start": "261840",
    "end": "264160"
  },
  {
    "text": "other end to produce the original file",
    "start": "264160",
    "end": "266880"
  },
  {
    "text": "again let's suppose we want to send an",
    "start": "266880",
    "end": "268880"
  },
  {
    "text": "image so the first four bytes that we're",
    "start": "268880",
    "end": "270800"
  },
  {
    "text": "going to want to send of that image are",
    "start": "270800",
    "end": "273040"
  },
  {
    "text": "well obviously 42",
    "start": "273040",
    "end": "275120"
  },
  {
    "text": "13 10 and let's pick another number oh",
    "start": "275120",
    "end": "277840"
  },
  {
    "text": "let's go for 56 and that's only the",
    "start": "277840",
    "end": "279680"
  },
  {
    "text": "beginning of a whole load of more bytes",
    "start": "279680",
    "end": "281840"
  },
  {
    "text": "but we said that we've only got the",
    "start": "281840",
    "end": "283840"
  },
  {
    "text": "values 1 to 127 that we can send",
    "start": "283840",
    "end": "287520"
  },
  {
    "text": "as part of an email that's what the",
    "start": "287520",
    "end": "289440"
  },
  {
    "text": "specification says and also",
    "start": "289440",
    "end": "291919"
  },
  {
    "text": "some of those bytes have special meaning",
    "start": "291919",
    "end": "294000"
  },
  {
    "text": "so for example 13 the number 13 actually",
    "start": "294000",
    "end": "297360"
  },
  {
    "text": "means if you think about an old",
    "start": "297360",
    "end": "298720"
  },
  {
    "text": "typewriter move the carriage from one",
    "start": "298720",
    "end": "300479"
  },
  {
    "text": "end right back to the beginning so you",
    "start": "300479",
    "end": "302560"
  },
  {
    "text": "can type from the left again line feed",
    "start": "302560",
    "end": "305199"
  },
  {
    "text": "has a number 10 in the ascii character",
    "start": "305199",
    "end": "306960"
  },
  {
    "text": "set means move down onto the next line",
    "start": "306960",
    "end": "309520"
  },
  {
    "text": "so carriage return line feed go on to",
    "start": "309520",
    "end": "311280"
  },
  {
    "text": "the next line so these values we can't",
    "start": "311280",
    "end": "314160"
  },
  {
    "text": "just send we need some way of taking",
    "start": "314160",
    "end": "316000"
  },
  {
    "text": "these bytes and converting them into",
    "start": "316000",
    "end": "318080"
  },
  {
    "text": "characters that we can send",
    "start": "318080",
    "end": "320400"
  },
  {
    "text": "now the trick that's used is to not",
    "start": "320400",
    "end": "322639"
  },
  {
    "text": "think about them as bytes as sort of",
    "start": "322639",
    "end": "325120"
  },
  {
    "text": "decimal numbers but to actually think",
    "start": "325120",
    "end": "327039"
  },
  {
    "text": "about them as a series of eight bits one",
    "start": "327039",
    "end": "329199"
  },
  {
    "text": "after the other so the number 42",
    "start": "329199",
    "end": "332320"
  },
  {
    "text": "that's represented in binary is zero",
    "start": "332320",
    "end": "335039"
  },
  {
    "text": "zero one zero one zero one zero i'm",
    "start": "335039",
    "end": "339440"
  },
  {
    "text": "doing this from memory so i could well",
    "start": "339440",
    "end": "340800"
  },
  {
    "text": "make a mistake at which point sean will",
    "start": "340800",
    "end": "342400"
  },
  {
    "text": "correct me as i go so 13 is zero zero",
    "start": "342400",
    "end": "344720"
  },
  {
    "text": "zero zero one one oh one ten is zero",
    "start": "344720",
    "end": "348000"
  },
  {
    "text": "zero zero zero",
    "start": "348000",
    "end": "350320"
  },
  {
    "text": "one zero one zero",
    "start": "350320",
    "end": "352880"
  },
  {
    "text": "and 56 is zero zero one one one zero",
    "start": "352880",
    "end": "357680"
  },
  {
    "text": "zero zero we get the picture rather than",
    "start": "357680",
    "end": "360319"
  },
  {
    "text": "thinking about it",
    "start": "360319",
    "end": "361919"
  },
  {
    "text": "as a series of bytes eight bit values we",
    "start": "361919",
    "end": "365360"
  },
  {
    "text": "just think about it as a stream of bits",
    "start": "365360",
    "end": "367600"
  },
  {
    "text": "and what we're going to do is we're",
    "start": "367600",
    "end": "368560"
  },
  {
    "text": "going to cut this stream of bits up into",
    "start": "368560",
    "end": "371759"
  },
  {
    "text": "a smaller chunk so rather than killing",
    "start": "371759",
    "end": "373440"
  },
  {
    "text": "it up into eight chunks that we started",
    "start": "373440",
    "end": "374960"
  },
  {
    "text": "with we'll cut it up into say five bit",
    "start": "374960",
    "end": "378080"
  },
  {
    "text": "chunks or six bit chunks or whatever it",
    "start": "378080",
    "end": "379919"
  },
  {
    "text": "is we decide is the best one to do to",
    "start": "379919",
    "end": "382400"
  },
  {
    "text": "make that so let's think about why that",
    "start": "382400",
    "end": "384639"
  },
  {
    "text": "would work well let's think about the",
    "start": "384639",
    "end": "386000"
  },
  {
    "text": "characters that we've got to encode",
    "start": "386000",
    "end": "388319"
  },
  {
    "text": "values so what characters have we got",
    "start": "388319",
    "end": "389759"
  },
  {
    "text": "that we can actually use well we've got",
    "start": "389759",
    "end": "390800"
  },
  {
    "text": "the letters",
    "start": "390800",
    "end": "392000"
  },
  {
    "text": "a b",
    "start": "392000",
    "end": "393440"
  },
  {
    "text": "c through to z and if we think about",
    "start": "393440",
    "end": "396319"
  },
  {
    "text": "that that gives us 26 possible things",
    "start": "396319",
    "end": "399440"
  },
  {
    "text": "could we use those 26 characters to",
    "start": "399440",
    "end": "401520"
  },
  {
    "text": "encode things well if we took",
    "start": "401520",
    "end": "403440"
  },
  {
    "text": "5 bits",
    "start": "403440",
    "end": "404720"
  },
  {
    "text": "that would require 32 characters that's",
    "start": "404720",
    "end": "407680"
  },
  {
    "text": "more than we can get in a to z but if we",
    "start": "407680",
    "end": "410240"
  },
  {
    "text": "took four bits",
    "start": "410240",
    "end": "412080"
  },
  {
    "text": "we would find that we'd only need",
    "start": "412080",
    "end": "414800"
  },
  {
    "text": "sixteen possible values two to the power",
    "start": "414800",
    "end": "416880"
  },
  {
    "text": "of four is sixteen so we've got sixteen",
    "start": "416880",
    "end": "418560"
  },
  {
    "text": "possible values in there zero three to",
    "start": "418560",
    "end": "420479"
  },
  {
    "text": "fifteen and we could encode each of",
    "start": "420479",
    "end": "422479"
  },
  {
    "text": "those values using a different letter",
    "start": "422479",
    "end": "424400"
  },
  {
    "text": "give 0 a 1 b",
    "start": "424400",
    "end": "427199"
  },
  {
    "text": "2 c and so on until we've encoded all 16",
    "start": "427199",
    "end": "429680"
  },
  {
    "text": "possible values so we could just do that",
    "start": "429680",
    "end": "431599"
  },
  {
    "text": "we could say okay let's take the first",
    "start": "431599",
    "end": "433440"
  },
  {
    "text": "four bits that are here",
    "start": "433440",
    "end": "435280"
  },
  {
    "text": "zero zero one zero",
    "start": "435280",
    "end": "437840"
  },
  {
    "text": "they are sort of that's two we would",
    "start": "437840",
    "end": "440479"
  },
  {
    "text": "then write that down as c",
    "start": "440479",
    "end": "443520"
  },
  {
    "text": "and we could do the same for each of the",
    "start": "443520",
    "end": "445120"
  },
  {
    "text": "subsequent chunks of four bits that were",
    "start": "445120",
    "end": "447120"
  },
  {
    "text": "there but there's a problem with doing",
    "start": "447120",
    "end": "448479"
  },
  {
    "text": "that and actually if you think about it",
    "start": "448479",
    "end": "450960"
  },
  {
    "text": "each byte of the message was eight bit",
    "start": "450960",
    "end": "453520"
  },
  {
    "text": "long",
    "start": "453520",
    "end": "454639"
  },
  {
    "text": "and so actually what we'd end up doing",
    "start": "454639",
    "end": "456400"
  },
  {
    "text": "is converting it to two characters and",
    "start": "456400",
    "end": "459039"
  },
  {
    "text": "so the file that we'd end up with would",
    "start": "459039",
    "end": "460800"
  },
  {
    "text": "double in size",
    "start": "460800",
    "end": "462560"
  },
  {
    "text": "so doing it with just four bits while we",
    "start": "462560",
    "end": "465039"
  },
  {
    "text": "can match that into the letters that we",
    "start": "465039",
    "end": "466720"
  },
  {
    "text": "can send",
    "start": "466720",
    "end": "468000"
  },
  {
    "text": "ends up",
    "start": "468000",
    "end": "469039"
  },
  {
    "text": "sort of producing a file that doubles in",
    "start": "469039",
    "end": "471120"
  },
  {
    "text": "size so perhaps not the best way to do",
    "start": "471120",
    "end": "473440"
  },
  {
    "text": "it so let's rethink things a bit what",
    "start": "473440",
    "end": "475599"
  },
  {
    "text": "about if we were to use five bit chunks",
    "start": "475599",
    "end": "478319"
  },
  {
    "text": "or five bit chunks that has 32 possible",
    "start": "478319",
    "end": "481360"
  },
  {
    "text": "values from zero through to 31",
    "start": "481360",
    "end": "484879"
  },
  {
    "text": "but we've only got 26 letters in the",
    "start": "484879",
    "end": "486720"
  },
  {
    "text": "alphabet we've got a",
    "start": "486720",
    "end": "488720"
  },
  {
    "text": "b c and so on through to z",
    "start": "488720",
    "end": "491360"
  },
  {
    "text": "so that's not enough letters to encode",
    "start": "491360",
    "end": "494160"
  },
  {
    "text": "the actual values",
    "start": "494160",
    "end": "496000"
  },
  {
    "text": "but we've still got other",
    "start": "496000",
    "end": "497840"
  },
  {
    "text": "values that we could use so for example",
    "start": "497840",
    "end": "500000"
  },
  {
    "text": "we could follow the z",
    "start": "500000",
    "end": "501919"
  },
  {
    "text": "with zero and then one",
    "start": "501919",
    "end": "504560"
  },
  {
    "text": "two 3",
    "start": "504560",
    "end": "506000"
  },
  {
    "text": "4",
    "start": "506000",
    "end": "507039"
  },
  {
    "text": "and 5 and that would give us 32 possible",
    "start": "507039",
    "end": "509599"
  },
  {
    "text": "values so now we could go through the",
    "start": "509599",
    "end": "511440"
  },
  {
    "text": "same thing and we would take the first 5",
    "start": "511440",
    "end": "513919"
  },
  {
    "text": "bits which in this case would give us",
    "start": "513919",
    "end": "515919"
  },
  {
    "text": "the value of 0 0 1 0 1",
    "start": "515919",
    "end": "518880"
  },
  {
    "text": "which has the value of",
    "start": "518880",
    "end": "520800"
  },
  {
    "text": "five and we would take the fifth letter",
    "start": "520800",
    "end": "523039"
  },
  {
    "text": "of the alphabet that's the first one of",
    "start": "523039",
    "end": "524480"
  },
  {
    "text": "the message which would be e",
    "start": "524480",
    "end": "526560"
  },
  {
    "text": "so we do that and then we do the next",
    "start": "526560",
    "end": "528080"
  },
  {
    "text": "five bits zero one zero zero zero",
    "start": "528080",
    "end": "531680"
  },
  {
    "text": "which is what's eight so we take the",
    "start": "531680",
    "end": "533839"
  },
  {
    "text": "eighth letter of the alphabet which is",
    "start": "533839",
    "end": "535680"
  },
  {
    "text": "sean",
    "start": "535680",
    "end": "538080"
  },
  {
    "text": "h h and so now we've encoded ten bits",
    "start": "538160",
    "end": "541440"
  },
  {
    "text": "which takes us into two characters",
    "start": "541440",
    "end": "543839"
  },
  {
    "text": "and we could then do the same for the",
    "start": "543839",
    "end": "545279"
  },
  {
    "text": "next five bits and we could do that and",
    "start": "545279",
    "end": "547680"
  },
  {
    "text": "convert the whole message and the",
    "start": "547680",
    "end": "549440"
  },
  {
    "text": "advantage of doing that",
    "start": "549440",
    "end": "552000"
  },
  {
    "text": "is that it will take up it will take up",
    "start": "552000",
    "end": "553600"
  },
  {
    "text": "more space all these encoding systems",
    "start": "553600",
    "end": "555360"
  },
  {
    "text": "are going to take up more space to send",
    "start": "555360",
    "end": "557279"
  },
  {
    "text": "the message and if we could just send",
    "start": "557279",
    "end": "558560"
  },
  {
    "text": "the raw eight bit count bytes across",
    "start": "558560",
    "end": "561279"
  },
  {
    "text": "because we're having to encode them into",
    "start": "561279",
    "end": "563279"
  },
  {
    "text": "fewer values so we're going to end up",
    "start": "563279",
    "end": "565200"
  },
  {
    "text": "using more characters because we're",
    "start": "565200",
    "end": "567200"
  },
  {
    "text": "encoding them into fewer values we can't",
    "start": "567200",
    "end": "568959"
  },
  {
    "text": "help that",
    "start": "568959",
    "end": "570000"
  },
  {
    "start": "570000",
    "end": "980000"
  },
  {
    "text": "so we could do it with five bits but",
    "start": "570000",
    "end": "572320"
  },
  {
    "text": "it's still a bit wasteful we know we",
    "start": "572320",
    "end": "574080"
  },
  {
    "text": "can't go up to seven bits but seven bits",
    "start": "574080",
    "end": "576560"
  },
  {
    "text": "we would have to use all the possible",
    "start": "576560",
    "end": "578000"
  },
  {
    "text": "ones we can send and we know that some",
    "start": "578000",
    "end": "580160"
  },
  {
    "text": "of them like zero we can't use because",
    "start": "580160",
    "end": "582000"
  },
  {
    "text": "of the specification 10 has to follow 13",
    "start": "582000",
    "end": "584560"
  },
  {
    "text": "according to the specification so we",
    "start": "584560",
    "end": "586240"
  },
  {
    "text": "couldn't send that so actually we",
    "start": "586240",
    "end": "587360"
  },
  {
    "text": "haven't got enough with seven so what",
    "start": "587360",
    "end": "589200"
  },
  {
    "text": "they actually chose was to use six bits",
    "start": "589200",
    "end": "591279"
  },
  {
    "text": "which gives us 64 possible values so the",
    "start": "591279",
    "end": "594080"
  },
  {
    "text": "encoding system that was developed was",
    "start": "594080",
    "end": "596240"
  },
  {
    "text": "called base64 because we take the bytes",
    "start": "596240",
    "end": "598480"
  },
  {
    "text": "we want to use and encode them from",
    "start": "598480",
    "end": "600240"
  },
  {
    "text": "eight bits per symbol into six bits per",
    "start": "600240",
    "end": "603120"
  },
  {
    "text": "symbol in a way that we can then convert",
    "start": "603120",
    "end": "605040"
  },
  {
    "text": "them back",
    "start": "605040",
    "end": "606079"
  },
  {
    "text": "now how do we do it well it's exactly",
    "start": "606079",
    "end": "607760"
  },
  {
    "text": "the same technique as what we've looked",
    "start": "607760",
    "end": "609279"
  },
  {
    "text": "at",
    "start": "609279",
    "end": "610079"
  },
  {
    "text": "already i'm just going to undo this",
    "start": "610079",
    "end": "612160"
  },
  {
    "text": "we're going to take chunks from",
    "start": "612160",
    "end": "614720"
  },
  {
    "text": "the bytes that make up the message",
    "start": "614720",
    "end": "616959"
  },
  {
    "text": "six bits of a time to form the",
    "start": "616959",
    "end": "619120"
  },
  {
    "text": "characters we're going to need so we're",
    "start": "619120",
    "end": "620800"
  },
  {
    "text": "going to need to define 64 characters",
    "start": "620800",
    "end": "623920"
  },
  {
    "text": "that we can use",
    "start": "623920",
    "end": "625360"
  },
  {
    "text": "so the way we do that well we'll start",
    "start": "625360",
    "end": "627120"
  },
  {
    "text": "off using the capital a",
    "start": "627120",
    "end": "629440"
  },
  {
    "text": "through to capital z that gives us 26.",
    "start": "629440",
    "end": "632720"
  },
  {
    "text": "we can also use lowercase a through to",
    "start": "632720",
    "end": "635440"
  },
  {
    "text": "lowercase zed that gives us 52 and then",
    "start": "635440",
    "end": "638320"
  },
  {
    "text": "we can use zero one two three four five",
    "start": "638320",
    "end": "641760"
  },
  {
    "text": "six seven eight and nine that gives us",
    "start": "641760",
    "end": "644480"
  },
  {
    "text": "now 62 possible things we need a couple",
    "start": "644480",
    "end": "646800"
  },
  {
    "text": "of extra symbols that we can type so",
    "start": "646800",
    "end": "649360"
  },
  {
    "text": "when they develop the standard they use",
    "start": "649360",
    "end": "650800"
  },
  {
    "text": "plus",
    "start": "650800",
    "end": "651839"
  },
  {
    "text": "and they use the forward slash as well",
    "start": "651839",
    "end": "654320"
  },
  {
    "text": "and that gives us",
    "start": "654320",
    "end": "655760"
  },
  {
    "text": "64 possible values so if we take six",
    "start": "655760",
    "end": "659360"
  },
  {
    "text": "chunks of the bits that make up the",
    "start": "659360",
    "end": "661360"
  },
  {
    "text": "message when we concatenated them one",
    "start": "661360",
    "end": "663040"
  },
  {
    "text": "after the other we can then encode them",
    "start": "663040",
    "end": "665040"
  },
  {
    "text": "into these symbols",
    "start": "665040",
    "end": "666640"
  },
  {
    "text": "to form the characters that we can send",
    "start": "666640",
    "end": "668399"
  },
  {
    "text": "over so let's have a look at our message",
    "start": "668399",
    "end": "670240"
  },
  {
    "text": "again and work out how we do that now",
    "start": "670240",
    "end": "672160"
  },
  {
    "text": "because we've chosen six bits three",
    "start": "672160",
    "end": "674480"
  },
  {
    "text": "bytes that's three times eight numbers",
    "start": "674480",
    "end": "676480"
  },
  {
    "text": "of bits will then code as",
    "start": "676480",
    "end": "679120"
  },
  {
    "text": "four six bit characters for these six",
    "start": "679120",
    "end": "681360"
  },
  {
    "text": "bit symbols we're using so every three",
    "start": "681360",
    "end": "683920"
  },
  {
    "text": "bytes of our message will become four",
    "start": "683920",
    "end": "685600"
  },
  {
    "text": "bytes",
    "start": "685600",
    "end": "686720"
  },
  {
    "text": "of the encoded version so we can look at",
    "start": "686720",
    "end": "689760"
  },
  {
    "text": "the three bytes that we've got at the",
    "start": "689760",
    "end": "691040"
  },
  {
    "text": "beginning here and we've got 42 13 and",
    "start": "691040",
    "end": "694320"
  },
  {
    "text": "10",
    "start": "694320",
    "end": "695120"
  },
  {
    "text": "as the ones we're going to send so we",
    "start": "695120",
    "end": "696720"
  },
  {
    "text": "can take",
    "start": "696720",
    "end": "697839"
  },
  {
    "text": "these bytes and we first of all need to",
    "start": "697839",
    "end": "699440"
  },
  {
    "text": "sort of group them in the same order",
    "start": "699440",
    "end": "701680"
  },
  {
    "text": "both at the sending point and the",
    "start": "701680",
    "end": "703600"
  },
  {
    "text": "receiving point so we get the numbers in",
    "start": "703600",
    "end": "705200"
  },
  {
    "text": "the right way so the rules that have set",
    "start": "705200",
    "end": "707200"
  },
  {
    "text": "forward for the base64 encoding is that",
    "start": "707200",
    "end": "710160"
  },
  {
    "text": "the first byte",
    "start": "710160",
    "end": "712320"
  },
  {
    "text": "becomes the most significant bit so we'd",
    "start": "712320",
    "end": "714880"
  },
  {
    "text": "write that one down first",
    "start": "714880",
    "end": "716800"
  },
  {
    "text": "zero zero one zero one zero",
    "start": "716800",
    "end": "720240"
  },
  {
    "text": "one zero",
    "start": "720240",
    "end": "722240"
  },
  {
    "text": "the next byte becomes the middle",
    "start": "722240",
    "end": "724560"
  },
  {
    "text": "significant bits for one of a better way",
    "start": "724560",
    "end": "726079"
  },
  {
    "text": "of writing it so that would be zero zero",
    "start": "726079",
    "end": "728720"
  },
  {
    "text": "zero",
    "start": "728720",
    "end": "729600"
  },
  {
    "text": "zero",
    "start": "729600",
    "end": "730560"
  },
  {
    "text": "one one zero one in our message and then",
    "start": "730560",
    "end": "733680"
  },
  {
    "text": "finally byte three would become the",
    "start": "733680",
    "end": "735200"
  },
  {
    "text": "least significant",
    "start": "735200",
    "end": "736720"
  },
  {
    "text": "bit so we're mapping these into",
    "start": "736720",
    "end": "739200"
  },
  {
    "text": "a 24 bit number and now we start",
    "start": "739200",
    "end": "741680"
  },
  {
    "text": "breaking that down into six bit chunks",
    "start": "741680",
    "end": "743920"
  },
  {
    "text": "and then we can convert them into the",
    "start": "743920",
    "end": "745200"
  },
  {
    "text": "characters in what's effectively our",
    "start": "745200",
    "end": "746959"
  },
  {
    "text": "lookup table that we've generated before",
    "start": "746959",
    "end": "749360"
  },
  {
    "text": "a b c d e etcetera's capital z a b c",
    "start": "749360",
    "end": "752880"
  },
  {
    "text": "lowercase through lowercase said the",
    "start": "752880",
    "end": "754880"
  },
  {
    "text": "numbers and so on so let's take the",
    "start": "754880",
    "end": "756880"
  },
  {
    "text": "first six bits we always start from the",
    "start": "756880",
    "end": "758560"
  },
  {
    "text": "most significant point",
    "start": "758560",
    "end": "760800"
  },
  {
    "text": "zero zero one zero",
    "start": "760800",
    "end": "763200"
  },
  {
    "text": "one zero is ten",
    "start": "763200",
    "end": "765519"
  },
  {
    "text": "so we want the tenth letter of our",
    "start": "765519",
    "end": "767760"
  },
  {
    "text": "sequence now we start with a being zero",
    "start": "767760",
    "end": "770560"
  },
  {
    "text": "so the tenth",
    "start": "770560",
    "end": "772000"
  },
  {
    "text": "symbol would be",
    "start": "772000",
    "end": "774079"
  },
  {
    "text": "k i think so we take the first six bits",
    "start": "774079",
    "end": "776399"
  },
  {
    "text": "and we can map them into a character we",
    "start": "776399",
    "end": "778000"
  },
  {
    "text": "map them to the capital k",
    "start": "778000",
    "end": "779920"
  },
  {
    "text": "there we now do for the next six bits",
    "start": "779920",
    "end": "782399"
  },
  {
    "text": "so the next one is 32 which is the",
    "start": "782399",
    "end": "784160"
  },
  {
    "text": "lowercase g so we now take the next six",
    "start": "784160",
    "end": "787200"
  },
  {
    "text": "that's going to be 52. so the 52nd",
    "start": "787200",
    "end": "790800"
  },
  {
    "text": "should be zero and then we do it for the",
    "start": "790800",
    "end": "793200"
  },
  {
    "text": "final set of six bits which happen to be",
    "start": "793200",
    "end": "795920"
  },
  {
    "text": "10 again",
    "start": "795920",
    "end": "797200"
  },
  {
    "text": "so that becomes the capital k that we",
    "start": "797200",
    "end": "799200"
  },
  {
    "text": "had at the beginning so the first three",
    "start": "799200",
    "end": "802480"
  },
  {
    "text": "bytes that we encode",
    "start": "802480",
    "end": "804560"
  },
  {
    "text": "which were 42 13 10 they were the",
    "start": "804560",
    "end": "806720"
  },
  {
    "text": "numbers that made up those bytes in the",
    "start": "806720",
    "end": "808320"
  },
  {
    "text": "file that we created would encode as k",
    "start": "808320",
    "end": "811440"
  },
  {
    "text": "lowercase g 0",
    "start": "811440",
    "end": "813680"
  },
  {
    "text": "capital k we could then convert them for",
    "start": "813680",
    "end": "816160"
  },
  {
    "text": "the next three bytes and that would",
    "start": "816160",
    "end": "817279"
  },
  {
    "text": "become another series of four characters",
    "start": "817279",
    "end": "819199"
  },
  {
    "text": "we do the next three bytes after that",
    "start": "819199",
    "end": "820560"
  },
  {
    "text": "give us another series of four",
    "start": "820560",
    "end": "821839"
  },
  {
    "text": "characters and we could keep going",
    "start": "821839",
    "end": "823440"
  },
  {
    "text": "through that until we'd come to the end",
    "start": "823440",
    "end": "825279"
  },
  {
    "text": "of the binary file that we're wanting to",
    "start": "825279",
    "end": "827040"
  },
  {
    "text": "send but there is a slight wrinkle here",
    "start": "827040",
    "end": "829360"
  },
  {
    "text": "because our binary file might not be an",
    "start": "829360",
    "end": "831120"
  },
  {
    "text": "exact multiple of three bytes long it",
    "start": "831120",
    "end": "833600"
  },
  {
    "text": "might be sort of four bytes or it might",
    "start": "833600",
    "end": "836800"
  },
  {
    "text": "be",
    "start": "836800",
    "end": "837920"
  },
  {
    "text": "902 bytes long so it might not be a",
    "start": "837920",
    "end": "840399"
  },
  {
    "text": "multiple",
    "start": "840399",
    "end": "841440"
  },
  {
    "text": "of three and so we need some way to",
    "start": "841440",
    "end": "844000"
  },
  {
    "text": "encode that and the way that we do that",
    "start": "844000",
    "end": "846160"
  },
  {
    "text": "is that we use an extra symbol to say",
    "start": "846160",
    "end": "848079"
  },
  {
    "text": "that so at the end",
    "start": "848079",
    "end": "849680"
  },
  {
    "text": "if we are encoding say two bytes we",
    "start": "849680",
    "end": "853760"
  },
  {
    "text": "encode those two bytes using the same",
    "start": "853760",
    "end": "855760"
  },
  {
    "text": "thing we pad it with zeros at the end",
    "start": "855760",
    "end": "857600"
  },
  {
    "text": "and then we write an equals character to",
    "start": "857600",
    "end": "859600"
  },
  {
    "text": "say only use two bytes of this and if",
    "start": "859600",
    "end": "862320"
  },
  {
    "text": "we're only encoding one extra byte at",
    "start": "862320",
    "end": "863920"
  },
  {
    "text": "the end we use two equals characters to",
    "start": "863920",
    "end": "866240"
  },
  {
    "text": "say they're only encoding",
    "start": "866240",
    "end": "868079"
  },
  {
    "text": "one extra byte and so by this technique",
    "start": "868079",
    "end": "870639"
  },
  {
    "text": "we can take the message and convert",
    "start": "870639",
    "end": "873839"
  },
  {
    "text": "every three bytes of it into four",
    "start": "873839",
    "end": "875600"
  },
  {
    "text": "characters that we can send over email",
    "start": "875600",
    "end": "877680"
  },
  {
    "text": "and actually this technique has been",
    "start": "877680",
    "end": "878959"
  },
  {
    "text": "used in lots of other places where",
    "start": "878959",
    "end": "880399"
  },
  {
    "text": "you'll need to encode binary data into a",
    "start": "880399",
    "end": "883199"
  },
  {
    "text": "character based form that can be that",
    "start": "883199",
    "end": "884959"
  },
  {
    "text": "then sent and at the other end",
    "start": "884959",
    "end": "887600"
  },
  {
    "text": "you just do the reverse our message here",
    "start": "887600",
    "end": "890560"
  },
  {
    "text": "we'd have k",
    "start": "890560",
    "end": "892320"
  },
  {
    "text": "was the first set of six bits so we",
    "start": "892320",
    "end": "894160"
  },
  {
    "text": "would look that up",
    "start": "894160",
    "end": "895600"
  },
  {
    "text": "in the table we'd see that that's the",
    "start": "895600",
    "end": "897279"
  },
  {
    "text": "tenth value so we'd write down the six",
    "start": "897279",
    "end": "899920"
  },
  {
    "text": "bit value",
    "start": "899920",
    "end": "901199"
  },
  {
    "text": "for k for ten which is zero zero one",
    "start": "901199",
    "end": "904560"
  },
  {
    "text": "zero one zero we do the same for g which",
    "start": "904560",
    "end": "907600"
  },
  {
    "text": "is 32 we do the same for zero and of",
    "start": "907600",
    "end": "910399"
  },
  {
    "text": "course i can see the values already on",
    "start": "910399",
    "end": "912160"
  },
  {
    "text": "screen here and we would do the same for",
    "start": "912160",
    "end": "914560"
  },
  {
    "text": "10 of course which we did at the",
    "start": "914560",
    "end": "915680"
  },
  {
    "text": "beginning so we get 0 0 1",
    "start": "915680",
    "end": "918399"
  },
  {
    "text": "0 1 0.",
    "start": "918399",
    "end": "920399"
  },
  {
    "text": "so we get that string of bits making of",
    "start": "920399",
    "end": "922560"
  },
  {
    "text": "our 24 bits and then we would partition",
    "start": "922560",
    "end": "925519"
  },
  {
    "text": "that up into eight we take the top most",
    "start": "925519",
    "end": "927920"
  },
  {
    "text": "significant eight bits and we get the",
    "start": "927920",
    "end": "930160"
  },
  {
    "text": "binary value which of course",
    "start": "930160",
    "end": "932000"
  },
  {
    "text": "is our original message 42 and then we",
    "start": "932000",
    "end": "934800"
  },
  {
    "text": "take the next eight bits",
    "start": "934800",
    "end": "936880"
  },
  {
    "text": "which would give us the binary value for",
    "start": "936880",
    "end": "939839"
  },
  {
    "text": "and we take the final eight bits of that",
    "start": "939839",
    "end": "942160"
  },
  {
    "text": "24 bit number the least significant bits",
    "start": "942160",
    "end": "944240"
  },
  {
    "text": "which would give us the third byte which",
    "start": "944240",
    "end": "946399"
  },
  {
    "text": "would be the binary value of turn so",
    "start": "946399",
    "end": "949440"
  },
  {
    "text": "whenever we send a binary file what your",
    "start": "949440",
    "end": "951759"
  },
  {
    "text": "computer has to do",
    "start": "951759",
    "end": "953360"
  },
  {
    "text": "is to take the bytes of that binary file",
    "start": "953360",
    "end": "956160"
  },
  {
    "text": "split it up into a series of bits in",
    "start": "956160",
    "end": "958639"
  },
  {
    "text": "this case we're using six bits and then",
    "start": "958639",
    "end": "960800"
  },
  {
    "text": "map those six bits to a particular",
    "start": "960800",
    "end": "962560"
  },
  {
    "text": "character in the encoding so that we can",
    "start": "962560",
    "end": "964880"
  },
  {
    "text": "then send it it makes the file slightly",
    "start": "964880",
    "end": "966880"
  },
  {
    "text": "bigger in this case it's going to",
    "start": "966880",
    "end": "968480"
  },
  {
    "text": "increase by about the third in size as",
    "start": "968480",
    "end": "971040"
  },
  {
    "text": "you do it each time you encode it but it",
    "start": "971040",
    "end": "972720"
  },
  {
    "text": "doesn't mean that we can send it",
    "start": "972720",
    "end": "974720"
  },
  {
    "text": "over",
    "start": "974720",
    "end": "975680"
  },
  {
    "text": "the network send it over as an email or",
    "start": "975680",
    "end": "977600"
  },
  {
    "text": "any other system which makes use of this",
    "start": "977600",
    "end": "980320"
  },
  {
    "start": "980000",
    "end": "1096000"
  },
  {
    "text": "people have tried other systems which",
    "start": "980320",
    "end": "982079"
  },
  {
    "text": "don't increase the size of the messenger",
    "start": "982079",
    "end": "983759"
  },
  {
    "text": "much pdf for example initially they",
    "start": "983759",
    "end": "985839"
  },
  {
    "text": "tried to design that in the way that it",
    "start": "985839",
    "end": "987680"
  },
  {
    "text": "could just be sent over email without",
    "start": "987680",
    "end": "989360"
  },
  {
    "text": "needing to be encoded or certainly not",
    "start": "989360",
    "end": "991440"
  },
  {
    "text": "needing uun coding at",
    "start": "991440",
    "end": "993360"
  },
  {
    "text": "all um so they use what they called",
    "start": "993360",
    "end": "995279"
  },
  {
    "text": "ascii 85 and what ascii 85 does it shows",
    "start": "995279",
    "end": "998800"
  },
  {
    "text": "85 characters",
    "start": "998800",
    "end": "1000880"
  },
  {
    "text": "that was from the symbols that would",
    "start": "1000880",
    "end": "1002399"
  },
  {
    "text": "supposedly be transmittable over email",
    "start": "1002399",
    "end": "1005120"
  },
  {
    "text": "without needing to be converted so they",
    "start": "1005120",
    "end": "1006800"
  },
  {
    "text": "used a through z lowercase and uppercase",
    "start": "1006800",
    "end": "1009279"
  },
  {
    "text": "as before they would use the numbers and",
    "start": "1009279",
    "end": "1011440"
  },
  {
    "text": "a few other symbols so they could get up",
    "start": "1011440",
    "end": "1012959"
  },
  {
    "text": "to the 85",
    "start": "1012959",
    "end": "1014880"
  },
  {
    "text": "and you would do exactly the same thing",
    "start": "1014880",
    "end": "1016800"
  },
  {
    "text": "although this time it was done around",
    "start": "1016800",
    "end": "1019120"
  },
  {
    "text": "powers of 85 i think",
    "start": "1019120",
    "end": "1021920"
  },
  {
    "text": "so you raise numbers and things it was",
    "start": "1021920",
    "end": "1023279"
  },
  {
    "text": "slightly more complicated system",
    "start": "1023279",
    "end": "1025678"
  },
  {
    "text": "uh it worked and you could encode things",
    "start": "1025679",
    "end": "1027520"
  },
  {
    "text": "but the trouble they found was that not",
    "start": "1027520",
    "end": "1029678"
  },
  {
    "text": "all systems that were transmitting email",
    "start": "1029679",
    "end": "1032480"
  },
  {
    "text": "at that time in the early 90s used ascii",
    "start": "1032480",
    "end": "1035839"
  },
  {
    "text": "to encode things and i think there was a",
    "start": "1035839",
    "end": "1037360"
  },
  {
    "text": "problem that it was sent through some",
    "start": "1037360",
    "end": "1039520"
  },
  {
    "text": "email systems that were running on ibm",
    "start": "1039520",
    "end": "1041600"
  },
  {
    "text": "systems using ebcdic if i remember right",
    "start": "1041600",
    "end": "1043918"
  },
  {
    "text": "and certainly the characters wouldn't be",
    "start": "1043919",
    "end": "1045600"
  },
  {
    "text": "encoded properly in the ebcdic version",
    "start": "1045600",
    "end": "1047438"
  },
  {
    "text": "or whatever it was that it was used so",
    "start": "1047439",
    "end": "1049200"
  },
  {
    "text": "as it was sent through those email",
    "start": "1049200",
    "end": "1050559"
  },
  {
    "text": "systems the file will get corrupted and",
    "start": "1050559",
    "end": "1052720"
  },
  {
    "text": "so in the end people just were starting",
    "start": "1052720",
    "end": "1054559"
  },
  {
    "text": "to uu encode it or mime encode it using",
    "start": "1054559",
    "end": "1057200"
  },
  {
    "text": "base64 anyway and so it sort of fell out",
    "start": "1057200",
    "end": "1059760"
  },
  {
    "text": "of fashion being used in pdf so there's",
    "start": "1059760",
    "end": "1061600"
  },
  {
    "text": "various other techniques you can use but",
    "start": "1061600",
    "end": "1063679"
  },
  {
    "text": "base64 has very much become the sort of",
    "start": "1063679",
    "end": "1066000"
  },
  {
    "text": "standard now if you want to take some",
    "start": "1066000",
    "end": "1067840"
  },
  {
    "text": "binary data and encode it into a form",
    "start": "1067840",
    "end": "1070160"
  },
  {
    "text": "that it can be sent over something that",
    "start": "1070160",
    "end": "1071679"
  },
  {
    "text": "only supports ascii",
    "start": "1071679",
    "end": "1073280"
  },
  {
    "text": "base64 encoding isn't the way that you",
    "start": "1073280",
    "end": "1076000"
  },
  {
    "text": "do it",
    "start": "1076000",
    "end": "1078160"
  },
  {
    "text": "as well so they developed a system",
    "start": "1078160",
    "end": "1079919"
  },
  {
    "text": "called main which is a multimedia",
    "start": "1079919",
    "end": "1082480"
  },
  {
    "text": "extension and main",
    "start": "1082480",
    "end": "1085039"
  },
  {
    "text": "then signals that inside this",
    "start": "1085039",
    "end": "1088670"
  },
  {
    "text": "[Music]",
    "start": "1088670",
    "end": "1090000"
  },
  {
    "text": "we've got all our five songs in and then",
    "start": "1090000",
    "end": "1092240"
  },
  {
    "text": "we've got five clips of just the song",
    "start": "1092240",
    "end": "1093840"
  },
  {
    "text": "recorded through a microphone",
    "start": "1093840",
    "end": "1098080"
  }
]