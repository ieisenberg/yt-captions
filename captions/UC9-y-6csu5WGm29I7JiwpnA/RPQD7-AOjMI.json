[
  {
    "text": ">> Sean: There's one thing that we keep coming\nback to. It's this idea of Turing Complete.",
    "start": "0",
    "end": "4440"
  },
  {
    "text": "What does it mean and why do we need to\nworry about it?",
    "start": "4440",
    "end": "8250"
  },
  {
    "text": ">> DFB: Yeah! what does it mean to say \"Is a\nlanguage - it's usually, in this context, a",
    "start": "8250",
    "end": "12900"
  },
  {
    "text": "programming language - is, or is not, Turing\nComplete?\"",
    "start": "12900",
    "end": "16710"
  },
  {
    "text": "Well, the obvious first example is that every\nprogramming language you're familiar with",
    "start": "17279",
    "end": "22650"
  },
  {
    "text": "I mean we'll refer to the usual suspects:\nFortran, Basic,  Pascal,  Cobol, C, C++, Java",
    "start": "22650",
    "end": "29699"
  },
  {
    "text": "they are all Turing Complete.",
    "start": "30300",
    "end": "33360"
  },
  {
    "text": "So what,",
    "start": "33360",
    "end": "36840"
  },
  {
    "text": "fundamentally, does a thing have to be in\norder to be Turing Complete? And the",
    "start": "36840",
    "end": "42480"
  },
  {
    "text": "answer is it needs to be able to do everything",
    "start": "42480",
    "end": "47100"
  },
  {
    "text": "that a Turing Machine can do. Mercifully we\nhave made several videos on this topic",
    "start": "47940",
    "end": "53070"
  },
  {
    "text": "some from me, some from my colleague Mark Jago\nand we have visited quite a lot of",
    "start": "53070",
    "end": "60090"
  },
  {
    "text": "these issues.",
    "start": "60090",
    "end": "61739"
  },
  {
    "text": "Just to recap a Turing Machine is\nthought of as an endless infinite piece",
    "start": "61739",
    "end": "68280"
  },
  {
    "text": "of tape and it has a read/write head\nthat goes over the top of the marks on",
    "start": "68280",
    "end": "75570"
  },
  {
    "text": "that tape which can be anything you like\nbut conventionally, to keep it very",
    "start": "75570",
    "end": "79110"
  },
  {
    "text": "simple. you can say it's zeros and ones. And you\ncan show that just the ability to read",
    "start": "79110",
    "end": "84630"
  },
  {
    "text": "and write on an infinite piece of tape,\npatterns of zeros and ones, is powerful",
    "start": "84630",
    "end": "91048"
  },
  {
    "text": "enough to compute anything that can be\ncomputed. Admittedly your low-level",
    "start": "91049",
    "end": "96689"
  },
  {
    "text": "Turing program with all its zeros and\nones",
    "start": "96689",
    "end": "100079"
  },
  {
    "text": "may be ten trillion times longer than your\ncompiled C program -",
    "start": "100079",
    "end": "104790"
  },
  {
    "text": "I don't know - but in principle it can do",
    "start": "104790",
    "end": "107420"
  },
  {
    "text": "exactly the same. Some people argue that\nactually although it was Turing that",
    "start": "107420",
    "end": "114080"
  },
  {
    "text": "brought this all to our attention,\nin the late thirties, with the work he",
    "start": "114080",
    "end": "118850"
  },
  {
    "text": "did, in some way, some people would say it\nreally ought to be called Babbage Complete",
    "start": "118850",
    "end": "123440"
  },
  {
    "text": "because another UK -- well he was a\ncomputer scientist actually in the way",
    "start": "123440",
    "end": "128030"
  },
  {
    "text": "his brain worked.",
    "start": "128030",
    "end": "130100"
  },
  {
    "text": "Charles Babbage:  many of you know he\nstarted off by just doing very powerful",
    "start": "130100",
    "end": "134300"
  },
  {
    "text": "calculating machines - difference engines",
    "start": "134300",
    "end": "136880"
  },
  {
    "text": "Well going beyond that, some of you\nwill know that Charles Babbage said \"Well",
    "start": "136880",
    "end": "139850"
  },
  {
    "text": "that's just like a a calculator that you\nhave in your top pocket\" but weighs about",
    "start": "139850",
    "end": "146450"
  },
  {
    "text": "ten tons and full of cog wheels! But even\njust using cog wheels he went on and",
    "start": "146450",
    "end": "151910"
  },
  {
    "text": "said \"I want to do something that really\ncan compute in the way that a human",
    "start": "151910",
    "end": "159110"
  },
  {
    "text": "can do\"",
    "start": "159110",
    "end": "159830"
  },
  {
    "text": "And the one thing he realized straight\naway is to make it really powerful",
    "start": "159830",
    "end": "166340"
  },
  {
    "text": "enough",
    "start": "166340",
    "end": "167450"
  },
  {
    "text": "you must at very minimum have what was\ncalled in those days",
    "start": "167450",
    "end": "172579"
  },
  {
    "text": "Conditional Branching - 'if' statements.\nYou've got to be able to say that I'm",
    "start": "173450",
    "end": "179329"
  },
  {
    "text": "going to look at a certain cell on my\ntape and if it's got a one in it I'm",
    "start": "179329",
    "end": "183739"
  },
  {
    "text": "going to do this thing and if it's\ngot a zero in itIi'm going to do that",
    "start": "183739",
    "end": "187130"
  },
  {
    "text": "thing.",
    "start": "187130",
    "end": "187820"
  },
  {
    "text": "So it's this sort of two-way choice that\nan if-then-else statement can give you.",
    "start": "187820",
    "end": "194090"
  },
  {
    "text": "He said it's absolutely vital to be able\nto do that because very often the",
    "start": "194090",
    "end": "199160"
  },
  {
    "text": "computations that humans do depend on\nthe precise nature of the data they are given",
    "start": "199160",
    "end": "204829"
  },
  {
    "text": "Some data will send you one way",
    "start": "204829",
    "end": "206750"
  },
  {
    "text": "some data will send you another. So this\nconditional branching is absolutely vital.",
    "start": "206750",
    "end": "211220"
  },
  {
    "text": "And as a sort of, kind of, resultant side-\neffect of that it also implicitly means",
    "start": "211220",
    "end": "218000"
  },
  {
    "text": "that you've got have the ability to 'go to'\n somewhere different in your memory.",
    "start": "218000",
    "end": "223970"
  },
  {
    "text": "For example, you might be saying \"if this\ncondition is true then I carry on with",
    "start": "223970",
    "end": "228650"
  },
  {
    "text": "the sequence of instructions that\nimmediately follow, but on the other hand",
    "start": "228650",
    "end": "233989"
  },
  {
    "text": "if the else statement is true then I\nhave to go off somewhere else and do",
    "start": "233989",
    "end": "237530"
  },
  {
    "text": "something different\". Now",
    "start": "237530",
    "end": "239629"
  },
  {
    "text": "all our undergraduates we absolutely do\nnot encourage the raw use of 'go-to's",
    "start": "239629",
    "end": "244909"
  },
  {
    "text": "because it's not good,",
    "start": "244909",
    "end": "246980"
  },
  {
    "text": "well structured, programming. But those\nwho have done assembler will know that",
    "start": "246980",
    "end": "251330"
  },
  {
    "text": "under the hood you can't avoid it.",
    "start": "251330",
    "end": "253159"
  },
  {
    "text": "You really do have go-to statements which\nsay: \"I'm here, at location 88 or whatever,",
    "start": "253159",
    "end": "259669"
  },
  {
    "text": "now jump off to location 200\".",
    "start": "259669",
    "end": "263030"
  },
  {
    "text": "So, if you like, the conditional branching\nimplies a go-to in that you might stay",
    "start": "263030",
    "end": "270200"
  },
  {
    "text": "in this part of the tape",
    "start": "270200",
    "end": "271610"
  },
  {
    "text": "you might jump off somewhere else. We've\nseen on the Turing Machine videos it's",
    "start": "271610",
    "end": "275599"
  },
  {
    "text": "perfectly possible to get your\nread/write head chattering across the",
    "start": "275599",
    "end": "279200"
  },
  {
    "text": "tape until it finds a pattern that it\nlikes the look of. The other thing for",
    "start": "279200",
    "end": "283760"
  },
  {
    "text": "Turing Completeness is you must be able\nto have arbitrary amounts of memory. At",
    "start": "283760",
    "end": "291860"
  },
  {
    "text": "the very basic level you must be able to\nhave a long enough tape in either",
    "start": "291860",
    "end": "296780"
  },
  {
    "text": "direction and our modern machines. What\nthat means is the totality of the RAM",
    "start": "296780",
    "end": "301580"
  },
  {
    "text": "that you possess - you must be able to get\nas much memory as the problem needs.",
    "start": "301580",
    "end": "306349"
  },
  {
    "text": "So that's the fundamental thing then:",
    "start": "306349",
    "end": "308520"
  },
  {
    "text": "as much memory as you need and\nconditional branching and at the bedrock",
    "start": "308520",
    "end": "315300"
  },
  {
    "text": "that is what you absolutely must have. \n>> Sean: So, if a Turing Machine has, in principle,",
    "start": "315300",
    "end": "320370"
  },
  {
    "text": "unlimited memory - none of our\ncomputers are Turing Machines, then?",
    "start": "320370",
    "end": "324060"
  },
  {
    "text": ">> DFB: Sean, I'm  so glad you asked that question !\nAnd I didn't prompt you - I didn't prime you",
    "start": "324060",
    "end": "328080"
  },
  {
    "text": "in any way! But, yes, you can say that",
    "start": "328080",
    "end": "331650"
  },
  {
    "text": "absolutely none of our so-called\ninfinitely powerful Turing Machines can",
    "start": "331650",
    "end": "336360"
  },
  {
    "text": "be. Because they've all got finite memory.\nAnd if you go back to the Chomsky hierarchy",
    "start": "336360",
    "end": "341758"
  },
  {
    "text": "you will find if you can have arbitrary\namounts of memory and if things might go",
    "start": "341759",
    "end": "346409"
  },
  {
    "text": "on forever and you never know whether\nthey're going to terminate or not in the",
    "start": "346409",
    "end": "350159"
  },
  {
    "text": "general case then you're in Chomsky Type 0.",
    "start": "350159",
    "end": "353250"
  },
  {
    "text": "But the moment you say \"Ah! but it's got to\nterminate within a finite amount of memory",
    "start": "353250",
    "end": "359069"
  },
  {
    "text": "you're down in Chomsky Type 1. So\nyou can say \"Yes, essentially finiteness",
    "start": "359069",
    "end": "365190"
  },
  {
    "text": "of memory forces that restriction on\nyou anyway - down to Type 1 instead of Type 0\".",
    "start": "365190",
    "end": "371129"
  }
]