[
  {
    "start": "0",
    "end": "68000"
  },
  {
    "text": "I've been in a recent set of videos that\nwe've done,",
    "start": "0",
    "end": "3929"
  },
  {
    "text": "related to HTML, I really have taken a\nsevere beating in the latest one that",
    "start": "3929",
    "end": "8189"
  },
  {
    "text": "I'm a disgrace to Full Professors as I\ndon't know what a programming language is",
    "start": "8189",
    "end": "12630"
  },
  {
    "text": "and how it differs from a markup\nlanguage. And my attitude is going to be:",
    "start": "12630",
    "end": "17609"
  },
  {
    "text": "\"Well I stand by what I say\".",
    "start": "17609",
    "end": "20609"
  },
  {
    "text": "HTML is a very restricted form of\nprogramming language, in my view, so we",
    "start": "21330",
    "end": "26580"
  },
  {
    "text": "need to justify that.",
    "start": "26580",
    "end": "28050"
  },
  {
    "text": "And I need to say at the outset that you\ndon't need to see all the previous HTML",
    "start": "28050",
    "end": "33420"
  },
  {
    "text": "videos in order to understand this one,\nbecause it really comes down to",
    "start": "33420",
    "end": "37320"
  },
  {
    "text": "something that's actually very\nfundamental. In the end it comes down to",
    "start": "37320",
    "end": "42540"
  },
  {
    "text": "two different styles of programming\nlanguage that are interrelated that you",
    "start": "42540",
    "end": "47610"
  },
  {
    "text": "can differentiate, in a way, between them.\nAnd when does one merge into the other? And",
    "start": "47610",
    "end": "52739"
  },
  {
    "text": "these two ways of doing programming are\nknown in the trade, generically, as either",
    "start": "52739",
    "end": "59698"
  },
  {
    "text": "the imperative style or the dclarative.",
    "start": "59699",
    "end": "64229"
  },
  {
    "text": "Now the one that most of you will be the\nmore familiar with is the imperative so",
    "start": "65510",
    "end": "74300"
  },
  {
    "start": "68000",
    "end": "106000"
  },
  {
    "text": "we'll do that first.",
    "start": "74300",
    "end": "75680"
  },
  {
    "text": "This is really just programming as you\nand I understand it you take your",
    "start": "75680",
    "end": "80120"
  },
  {
    "text": "language of your choice",
    "start": "80120",
    "end": "81740"
  },
  {
    "text": "Assembler, Java, C, Basic, whatever and\nyou are required to give a detailed",
    "start": "81740",
    "end": "88580"
  },
  {
    "text": "specification of how you are going to do\nthis problem. And, as we know, this",
    "start": "88580",
    "end": "93500"
  },
  {
    "text": "detailed specification might be simple\narithmetic programming statements;",
    "start": "93500",
    "end": "98270"
  },
  {
    "text": "it might require going round things in\nloops;",
    "start": "98270",
    "end": "101359"
  },
  {
    "text": "it would certainly require taking\ndecisions. So it will have 'if' statements",
    "start": "101360",
    "end": "105500"
  },
  {
    "text": "inside it.",
    "start": "105500",
    "end": "106490"
  },
  {
    "text": "So, if you like, ordinary straightforward\ndetailed nuts-and-bolts programming is",
    "start": "106490",
    "end": "113210"
  },
  {
    "text": "in an imperative style, because you\nhave to say how you are going to solve",
    "start": "113210",
    "end": "118790"
  },
  {
    "text": "the problem. I'll put \"How\" in quotes here\nsaying that leads you to 'if', 'for',",
    "start": "118790",
    "end": "125030"
  },
  {
    "text": "arithmetic statements, whatever you need.",
    "start": "125030",
    "end": "128179"
  },
  {
    "text": ">> SEAN: So this is setting out how you are going to\ndo something. If this button is pressed",
    "start": "128179",
    "end": "131270"
  },
  {
    "text": "then do this?",
    "start": "131270",
    "end": "132800"
  },
  {
    "text": ">> DFB: Yes! Yes! And the vast majority of\nprograms that most people think of, in",
    "start": "132800",
    "end": "137180"
  },
  {
    "text": "terms of programming, are done in this style.",
    "start": "137180",
    "end": "139939"
  },
  {
    "text": "Now what about declarative then?  Well\n'declarative' -  it's a more functional style",
    "start": "139940",
    "end": "147019"
  },
  {
    "text": "of programming, where the interpreter for\nyour language does the details and",
    "start": "147019",
    "end": "152510"
  },
  {
    "text": "actually one style can merge into another\nAnd I've got a very good example of my",
    "start": "152510",
    "end": "159019"
  },
  {
    "start": "153000",
    "end": "198000"
  },
  {
    "text": "own and we've done it on Computerphile.\nI wrote a program to do the Ackermann",
    "start": "159019",
    "end": "164599"
  },
  {
    "text": "function. I think it's my biggest hit so\nfar - that particular video. And within the",
    "start": "164600",
    "end": "170570"
  },
  {
    "text": "function 'ackermann' we saw program\nstatements, we saw use of recursion,",
    "start": "170570",
    "end": "177380"
  },
  {
    "text": "we saw 'ackermann' calling 'ackermann' and\nall this kind of stuff. And finally",
    "start": "177380",
    "end": "180800"
  },
  {
    "text": "returning and delivering back an answer.",
    "start": "180800",
    "end": "183110"
  },
  {
    "text": "However, back in the main program where I\ncall up 'ackermann'",
    "start": "183110",
    "end": "188239"
  },
  {
    "text": "with certain arguments and I call up the\n'ackermann function' as the arguments ....",
    "start": "188819",
    "end": "194280"
  },
  {
    "text": "I don't worry about the\nimplementation details of 'ackermann'",
    "start": "194280",
    "end": "198209"
  },
  {
    "start": "198000",
    "end": "227000"
  },
  {
    "text": "I just call it up - at the end of a big\nprintf statement as i recall. I say",
    "start": "198209",
    "end": "203879"
  },
  {
    "text": "declaratively \"Give me 'ackermann' -",
    "start": "203879",
    "end": "206819"
  },
  {
    "text": "do it for me! I forgot the details of how\nI did it\". Many of you know this. The whole",
    "start": "206819",
    "end": "211560"
  },
  {
    "text": "idea of writing your own library full of\nfunctions for a particular job is that",
    "start": "211560",
    "end": "216299"
  },
  {
    "text": "you can then work more abstractly.  and\nat a higher level. You can say \"I wrote",
    "start": "216299",
    "end": "220680"
  },
  {
    "text": "those 20 years ago. I've forgotten how I did them.\nBut it doesn't matter. Do me 'ackermann' with",
    "start": "220680",
    "end": "225209"
  },
  {
    "text": "parameters \"thing\" and \"thing\" --  something like that.",
    "start": "225209",
    "end": "227280"
  },
  {
    "start": "227000",
    "end": "310000"
  },
  {
    "text": "So you see the one can merge into the\nother as you take a more functional",
    "start": "227280",
    "end": "233099"
  },
  {
    "text": "approach. You could argue, loosely, every\ntime you use a library of functions that",
    "start": "233099",
    "end": "237959"
  },
  {
    "text": "you bought in from somewhere then you\nare becoming more declarative in the way",
    "start": "237959",
    "end": "242669"
  },
  {
    "text": "that you use it.",
    "start": "242669",
    "end": "243750"
  },
  {
    "text": "So the point about declarative is you\ndon't have to go into the nuts and bolts",
    "start": "243750",
    "end": "247439"
  },
  {
    "text": "details. You just ask for what you want\nand magically it happens.",
    "start": "247439",
    "end": "251579"
  },
  {
    "text": "Typical examples of real declarative\nlanguages are things like Haskell.",
    "start": "251579",
    "end": "257849"
  },
  {
    "text": "what are the trade-offs about this? Well,\nyou could probably say that most of",
    "start": "257849",
    "end": "262409"
  },
  {
    "text": "these declarative languages",
    "start": "262409",
    "end": "264630"
  },
  {
    "text": "don't work on the bare metal, like your\nC program could do eventually. They are",
    "start": "264630",
    "end": "269130"
  },
  {
    "text": "interpreted, with a layer of software\nbetween you and the bare metal. Now that",
    "start": "269130",
    "end": "275430"
  },
  {
    "text": "gives you flexibility because the\nHaskell interpreter can be basically",
    "start": "275430",
    "end": "281280"
  },
  {
    "text": "ported to all sorts of architectures.\nSomebody's got to do the hard work but",
    "start": "281280",
    "end": "284880"
  },
  {
    "text": "then you know that if you take the Haskell\nprogram along",
    "start": "284880",
    "end": "288150"
  },
  {
    "text": "you can just run it. You don't have to\nconvert it into a binary. It just runs on",
    "start": "288150",
    "end": "292229"
  },
  {
    "text": "the interpretive mode. So it's trade-offs\nAnd other things being equal (it's less",
    "start": "292229",
    "end": "297419"
  },
  {
    "text": "true now it used to be) you lose a little\nbit of efficiency in an",
    "start": "297419",
    "end": "301920"
  },
  {
    "text": "interpreter whereas, y' know, if you refine\na thing right down to a hard-core binary",
    "start": "301920",
    "end": "306930"
  },
  {
    "text": "it'll go off like a Maserati,",
    "start": "306930",
    "end": "309270"
  },
  {
    "text": "we hope. And some languages, as we know,\nhave a compromise here. Java started life",
    "start": "309270",
    "end": "316470"
  },
  {
    "start": "310000",
    "end": "359000"
  },
  {
    "text": "as being a portable interpreted system\nbut with a syntax that's really pretty much",
    "start": "316470",
    "end": "323430"
  },
  {
    "text": "like C. But it's notable that now, when\nyou've developed from the Java, there's very",
    "start": "323430",
    "end": "328560"
  },
  {
    "text": "often an option to say 'If you want to\ncompile this and make a real executable",
    "start": "328560",
    "end": "332880"
  },
  {
    "text": "binary of it",
    "start": "332880",
    "end": "333720"
  },
  {
    "text": "yes, you can do that'. But during\ndevelopment you get a lot of flexibility",
    "start": "333720",
    "end": "339510"
  },
  {
    "text": "by just being able to do things and try\nthem out instantly . That then, I hope, has",
    "start": "339510",
    "end": "344040"
  },
  {
    "text": "given you a bit more insight into what\nthe imperative vs. the declarative",
    "start": "344040",
    "end": "348810"
  },
  {
    "text": "approach is. And that's very relevant to\ndiscussions of whether",
    "start": "348810",
    "end": "354960"
  },
  {
    "text": "HTML is, or is not, a programming language.",
    "start": "354960",
    "end": "358259"
  },
  {
    "start": "359000",
    "end": "398000"
  },
  {
    "text": "We all know  means\ngive me a heading, level one.",
    "start": "359340",
    "end": "368669"
  },
  {
    "text": "Now, of course, I have to show where the\nstuff that is your heading - the text -",
    "start": "368670",
    "end": "375930"
  },
  {
    "text": "ends. But to me you can say \"Look, I'm\ncalling up the function , I'm giving it",
    "start": "375930",
    "end": "381690"
  },
  {
    "text": "the argument",
    "start": "381690",
    "end": "383400"
  },
  {
    "text": "'this is my heading' to be done in h1\nstyle\". And  is really just",
    "start": "383400",
    "end": "388380"
  },
  {
    "text": "to say, \"Oh! by the way, there's no other\nway I can signify where my text string",
    "start": "388380",
    "end": "392760"
  },
  {
    "text": "ends, It's not semicolon or anything like that\".",
    "start": "392760",
    "end": "395009"
  },
  {
    "text": "Conventionally its . So to me,",
    "start": "395009",
    "end": "399629"
  },
  {
    "text": "yes, you can think of that as being a\nfunction call in a way.",
    "start": "399629",
    "end": "403349"
  },
  {
    "text": "However, some of you really did hit home\na bit more accurately, I think, when you",
    "start": "403349",
    "end": "408059"
  },
  {
    "text": "said \"It can't be a programming language,",
    "start": "408059",
    "end": "411899"
  },
  {
    "text": "really, because it's not Turing Complete.",
    "start": "412439",
    "end": "416249"
  },
  {
    "text": "Now that is a topic - I'm sorry I hate\ndoing cliffhangers, you know I do! -",
    "start": "416849",
    "end": "422460"
  },
  {
    "text": "that's a topic that we have mentioned\nfrom time to time but it's big enough",
    "start": "422460",
    "end": "425999"
  },
  {
    "text": "that we need to do a separate video,\nreally, on that, It's perfectly correct that",
    "start": "425999",
    "end": "431129"
  },
  {
    "text": "HTML could never be thought of as a\nfull-blown programming language.",
    "start": "431129",
    "end": "435419"
  },
  {
    "text": "It can't do 'if' statements in its raw\nvanilla form!",
    "start": "435419",
    "end": "438719"
  },
  {
    "text": "There's no way inside HTML that you\ncan say \"Give me a megabyte more space to",
    "start": "438719",
    "end": "443460"
  },
  {
    "text": "work with\". It's just not part of the language.",
    "start": "443460",
    "end": "446370"
  },
  {
    "text": "Somebody has pointed out, I think, that\nHTML with CSS does become a very",
    "start": "446370",
    "end": "451740"
  },
  {
    "text": "powerful Turing-Complete language but\nyou wouldn't want to use it.",
    "start": "451740",
    "end": "455668"
  },
  {
    "text": "It's not general purpose - that's another\nthing. It's really is a question of \"Is it",
    "start": "455669",
    "end": "460860"
  },
  {
    "text": "imperative; is it declarative?\"  This is\ndeclarative but is it general purpose?",
    "start": "460860",
    "end": "466620"
  },
  {
    "text": "No, this is really for programming Web pages.",
    "start": "466620",
    "end": "470610"
  },
  {
    "text": "That's the way I think of it and also,\nlike I say, it's not Turing Complete, but",
    "start": "470610",
    "end": "476279"
  },
  {
    "text": "you can certainly argue that anything\nthat takes tags as if they were function",
    "start": "476279",
    "end": "482699"
  },
  {
    "text": "calls and interprets them and does them for\nyou is, in some restricted sense, in my",
    "start": "482699",
    "end": "489029"
  },
  {
    "text": "view anyway,",
    "start": "489029",
    "end": "490169"
  },
  {
    "text": "a programming language.",
    "start": "490169",
    "end": "493169"
  }
]