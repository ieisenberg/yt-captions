[
  {
    "start": "0",
    "end": "80000"
  },
  {
    "text": "There's been some noise over the past week about and a paper that's come out and an exploit the papers called port",
    "start": "60",
    "end": "6240"
  },
  {
    "text": "contention for fun and profit people be referring it Port Smash. So what it does is it actually",
    "start": "6460",
    "end": "10860"
  },
  {
    "text": "you got open ssl running and it's using a private key and you've got another program which they call that spy program which runs alongside",
    "start": "11380",
    "end": "17430"
  },
  {
    "text": "It and is able to extract the private key from the open ssl program even though it shouldn't be able to do that",
    "start": "17430",
    "end": "24520"
  },
  {
    "text": "So I thought it was interesting to have a little chat about the way it's exploiting the cpu so again like",
    "start": "26890",
    "end": "31920"
  },
  {
    "text": "spectrum meltdown and quite a few of the exploits that have turned up over the past year its",
    "start": "32080",
    "end": "35820"
  },
  {
    "text": "exploiting the fact that people have tried to make the CPUs run faster and faster and sort of squeeze",
    "start": "35920",
    "end": "40600"
  },
  {
    "text": "every last ounce of speed out of the actual cpu technology that's there and",
    "start": "40960",
    "end": "45140"
  },
  {
    "text": "what this is specifically targeting is what's put into most intel cpus and AMD",
    "start": "45879",
    "end": "51599"
  },
  {
    "text": "which is hyper threading. So what is hyper threading well normally when we think about",
    "start": "52149",
    "end": "57809"
  },
  {
    "text": "a computer system we have a cpu in there and",
    "start": "58449",
    "end": "61589"
  },
  {
    "text": "originally that CPU would execute one single stream of instructions and process data with them",
    "start": "62440",
    "end": "67860"
  },
  {
    "text": "you could have two CPUs in there's got some",
    "start": "68260",
    "end": "72479"
  },
  {
    "text": "Multiprocessor system or a multi-core system depending on how you wire them up and then you could have two separate streams of instructions",
    "start": "72700",
    "end": "78479"
  },
  {
    "text": "being executed and",
    "start": "78759",
    "end": "80759"
  },
  {
    "start": "80000",
    "end": "146000"
  },
  {
    "text": "the way that those CPUs are designed is",
    "start": "80770",
    "end": "83579"
  },
  {
    "text": "you have three stages that each instruction has to sort of go through that in the cpu that's for them it's a smaller stage but",
    "start": "83979",
    "end": "90059"
  },
  {
    "text": "We can think about this of three broad stages we have to sort of fetch the instruction from memory",
    "start": "90060",
    "end": "94798"
  },
  {
    "text": "then we decode it to work out what we actually wanted to do and then we execute it and",
    "start": "95020",
    "end": "100200"
  },
  {
    "text": "To make the cpu run as fast as possible then you end up with various",
    "start": "100329",
    "end": "105209"
  },
  {
    "text": "execution units in your cpu which do various things there might be an algorithmic and logic unit which will do addition and subtraction and various",
    "start": "105490",
    "end": "112290"
  },
  {
    "text": "logical operations. There might be bits that can load and store",
    "start": "112290",
    "end": "115559"
  },
  {
    "text": "values from memory. There might be bits that can do various other sorts of calculations multiplications and so on address",
    "start": "115719",
    "end": "122339"
  },
  {
    "text": "calculations floating point operations vector",
    "start": "122619",
    "end": "125039"
  },
  {
    "text": "processing and so on so you have lots of these",
    "start": "125590",
    "end": "127590"
  },
  {
    "text": "execution units in your machine and one of the things you got was sort of a superscalar architecture where you'd",
    "start": "127660",
    "end": "133020"
  },
  {
    "text": "fetch two instructions and execute them at the same time",
    "start": "133710",
    "end": "136620"
  },
  {
    "text": "providing that they were using different parts that you could sort of fetch a value from memory while adding a value onto another",
    "start": "137230",
    "end": "143009"
  },
  {
    "text": "register as long as they're using separate registers and so on. So the idea is you've got if we sort of draw a",
    "start": "143410",
    "end": "147900"
  },
  {
    "start": "146000",
    "end": "191000"
  },
  {
    "text": "picture you've got some sort of logic here which we'll call decode  and you've got going into that a stream of",
    "start": "148060",
    "end": "155729"
  },
  {
    "text": "instructions coming from memory. So you're feeding them in there and this is actually breaking them up into a series what",
    "start": "156790",
    "end": "163139"
  },
  {
    "text": "of what we call micro operations that do different things, so one",
    "start": "163140",
    "end": "166470"
  },
  {
    "text": "x86 instruction may get broken up into",
    "start": "167260",
    "end": "170249"
  },
  {
    "text": "multiple micro operations for example to load a value from memory add that value onto a value in a register and store that result",
    "start": "170980",
    "end": "178679"
  },
  {
    "text": "out back into the same memory location it's all three operations so it gets split so which use different",
    "start": "179140",
    "end": "184469"
  },
  {
    "text": "execution that operations. Some have to happen sequentially some can be done in parallel depending on what you're doing",
    "start": "185290",
    "end": "190890"
  },
  {
    "start": "191000",
    "end": "214000"
  },
  {
    "text": "So we end up with a series of execution operations - so let's say we've got an ALU and",
    "start": "191110",
    "end": "197580"
  },
  {
    "text": "We might have say a division unit in there",
    "start": "198580",
    "end": "202350"
  },
  {
    "text": "We might have another one with an ALU it might have some things to do - vector type stuff",
    "start": "203140",
    "end": "208709"
  },
  {
    "text": "we've got another one which has got another ALU and a multiplication unit on there and",
    "start": "208900",
    "end": "213810"
  },
  {
    "start": "214000",
    "end": "300000"
  },
  {
    "text": "there's various ports that these are connected to -- so you've got a sort of port",
    "start": "214060",
    "end": "217830"
  },
  {
    "text": "One here which connects to this set of operations",
    "start": "218440",
    "end": "221490"
  },
  {
    "text": "Port two will say here and this is a generalized version which is connected to these operations",
    "start": "222100",
    "end": "227730"
  },
  {
    "text": "Q:Are these physical ports like physical wires?",
    "start": "228070",
    "end": "230070"
  },
  {
    "text": "Erm they'll be parts with inside the CPU so the way that things are connected up... and this block is a sort of",
    "start": "230110",
    "end": "235889"
  },
  {
    "text": "scheduler which is getting the decoded",
    "start": "236260",
    "end": "238469"
  },
  {
    "text": "micro-ops from this section and",
    "start": "238660",
    "end": "240580"
  },
  {
    "text": "sort of sending them to the right ports as they're being ... as they're available and so on to cause the right operations to happen in",
    "start": "240580",
    "end": "246660"
  },
  {
    "text": "the best order to make most use of the system. You'd have a few more over here that says this has got a load port",
    "start": "246730",
    "end": "253289"
  },
  {
    "text": "And so on so what you can do is you can start pulling the multiple instructions here and as long as they're not depending on",
    "start": "253600",
    "end": "259350"
  },
  {
    "text": "values that previous instructions have created",
    "start": "259810",
    "end": "261838"
  },
  {
    "text": "and haven't completed yet then you can sort of schedule them on different",
    "start": "262419",
    "end": "265199"
  },
  {
    "text": "parts the unit - so if you had one",
    "start": "265900",
    "end": "267699"
  },
  {
    "text": "instruction which adds value one on to EAX you could put it on to this port the next insert is adding something onto B EBX",
    "start": "267699",
    "end": "273839"
  },
  {
    "text": "You could put it onto that port (they're registers within the CPU) and they could execute at the same time. But the problem",
    "start": "274050",
    "end": "278940"
  },
  {
    "text": "you've got is that",
    "start": "278940",
    "end": "280569"
  },
  {
    "text": "sometimes you get a sequence of instructions which either a",
    "start": "280569",
    "end": "283439"
  },
  {
    "text": "sequential so you add one to a value in a register then you multiply that register by two",
    "start": "283750",
    "end": "287399"
  },
  {
    "text": "And then so on - you've got to execute them and things and so you can't always make full use of",
    "start": "287530",
    "end": "293250"
  },
  {
    "text": "your",
    "start": "293979",
    "end": "295979"
  },
  {
    "text": "Available",
    "start": "296259",
    "end": "297280"
  },
  {
    "text": "execution units down here in the CPU",
    "start": "297280",
    "end": "299280"
  },
  {
    "text": "So the idea which happened many",
    "start": "299530",
    "end": "301500"
  },
  {
    "start": "300000",
    "end": "375000"
  },
  {
    "text": "many years ago and sort of fell out of favor and then was brought back with the Pentium 4 in the mid",
    "start": "301500",
    "end": "306119"
  },
  {
    "text": "2000s and has existed through on various CPUs both from AMD and",
    "start": "306430",
    "end": "309810"
  },
  {
    "text": "Intel is hyperthreading - you say well ok this is only a single core but let's make it present itself as",
    "start": "309880",
    "end": "316409"
  },
  {
    "text": "if it was two cores",
    "start": "316750",
    "end": "318750"
  },
  {
    "text": "Two logical cores we've got one physical core with one set of execution units but we have it appear to the operating system as two",
    "start": "319389",
    "end": "326939"
  },
  {
    "text": "logical cores so the operating system can have two - as far as its concerned two - independent bits programs threads whatever",
    "start": "327610",
    "end": "334288"
  },
  {
    "text": "Executing on there and so they'll be two streams of instructions executing and so we'd have another",
    "start": "335110",
    "end": "340138"
  },
  {
    "text": "stream of",
    "start": "340479",
    "end": "341289"
  },
  {
    "text": "instructions coming in to the decode logic and then",
    "start": "341289",
    "end": "344729"
  },
  {
    "text": "the CPUs got a better chance of keeping things running at the same time because you can either run an instruction from here",
    "start": "344860",
    "end": "350099"
  },
  {
    "text": "But if you can't schedule that it might be out of scheduled instruction from the other stream of instructions. You may get some  interesting",
    "start": "350320",
    "end": "356189"
  },
  {
    "text": "things so for example on this one that we've drawn we've only got one",
    "start": "356190",
    "end": "358409"
  },
  {
    "text": "multiplier we've only got one load and store unit. If we have both of these trying to do a",
    "start": "358630",
    "end": "363029"
  },
  {
    "text": "multiply then one will have to wait for",
    "start": "363610",
    "end": "365610"
  },
  {
    "text": "the other to complete and the sort of way that CPU might do that it's a sort of round-robin that the first",
    "start": "365710",
    "end": "370380"
  },
  {
    "text": "clock cycle this one gets the multiply on the second clock cycle that one will get the multiply and so on. So that's the basic",
    "start": "370630",
    "end": "376499"
  },
  {
    "start": "375000",
    "end": "483000"
  },
  {
    "text": "idea behind hyperthreading - you've got two",
    "start": "376500",
    "end": "378500"
  },
  {
    "text": "logical processors that are used by the operations to schedule the jobs on your computer",
    "start": "378759",
    "end": "383729"
  },
  {
    "text": "but they're executed by one physical core on the CPU.",
    "start": "383949",
    "end": "387740"
  },
  {
    "text": "Q: So hyper threading is different to multi-threading?",
    "start": "387740",
    "end": "390718"
  },
  {
    "text": "So multi threading is the idea that you split your program or your programs into multiple threads of operation",
    "start": "392319",
    "end": "397439"
  },
  {
    "text": "and then they get scheduled either by the operating system on to different",
    "start": "398580",
    "end": "402388"
  },
  {
    "text": "CPU cores if you've got multiple ones or onto one single core by sort of executing a bit of",
    "start": "403360",
    "end": "408360"
  },
  {
    "text": "thread one than a bit of thread two you than a bit of thread three",
    "start": "408940",
    "end": "411779"
  },
  {
    "text": "effectively like you could watch multiple programs on YouTube at once by chopping between the different programs and watching sort of bits after the other",
    "start": "413230",
    "end": "419999"
  },
  {
    "text": "Be quite garbled watching multiple computer files in that sort of way. So unlike a normal photograph/In a very basic sense if you've got/",
    "start": "420190",
    "end": "427350"
  },
  {
    "text": "Bletchley Park/So that's a way of doing things in software and programming/yeah",
    "start": "427350",
    "end": "431670"
  },
  {
    "text": "It's/hyper threading is a bit more Hardware So the idea is there, okay well you've got these different threads of execution",
    "start": "431670",
    "end": "436140"
  },
  {
    "text": "okay if you've got multiple",
    "start": "437290",
    "end": "438880"
  },
  {
    "text": "Cores multiple processing units then you can schedule your each of those threads onto",
    "start": "438880",
    "end": "443580"
  },
  {
    "text": "Each of the cores and have them executing at the same time",
    "start": "443800",
    "end": "446249"
  },
  {
    "text": "but a few limitations on access to memory and things because and so on",
    "start": "446800",
    "end": "450210"
  },
  {
    "text": "With hyper threading you say okay we'll have the idea we got two",
    "start": "451060",
    "end": "454139"
  },
  {
    "text": "threads of execution",
    "start": "454930",
    "end": "456370"
  },
  {
    "text": "happening at the same time",
    "start": "456370",
    "end": "457570"
  },
  {
    "text": "But we've actually only got one physical set of units to do it so it's the hardware that's doing the scheduling because  it can",
    "start": "457570",
    "end": "462599"
  },
  {
    "text": "do a finer grain than the operating system can. The operating system is still scheduling across those two",
    "start": "462600",
    "end": "467760"
  },
  {
    "text": "logical cores but the hardware can then say well actually",
    "start": "468040",
    "end": "470460"
  },
  {
    "text": "this one is trying to multiply this is trying to add I can run them at the same time",
    "start": "470590",
    "end": "473729"
  },
  {
    "text": "whereas this is trying to",
    "start": "474700",
    "end": "476050"
  },
  {
    "text": "Multiply and this is trying to multiply I need to sequence it so it can actually start to do a finer grain",
    "start": "476050",
    "end": "480478"
  },
  {
    "text": "sort of threading operation and sort of",
    "start": "480940",
    "end": "482940"
  },
  {
    "start": "483000",
    "end": "573000"
  },
  {
    "text": "knit them together",
    "start": "483490",
    "end": "485580"
  },
  {
    "text": "Q: So where's the problem come in then? So the problem comes in the",
    "start": "485580",
    "end": "488939"
  },
  {
    "text": "let's say we've got a program where we want to find some information about what it's doing and let's say this program here",
    "start": "489580",
    "end": "495689"
  },
  {
    "text": "we want to know what sort of instructions it's executing well what we could do for example",
    "start": "496090",
    "end": "500249"
  },
  {
    "text": "Is if we wanted to find out if it was executing multiply instructions on the example we've got here we've only got one",
    "start": "500980",
    "end": "507450"
  },
  {
    "text": "multiply unit so if this is",
    "start": "507640",
    "end": "509640"
  },
  {
    "text": "Trying to execute multiple instructions and this is trying to execute multiply instructions then they're going to have to take turns to execute",
    "start": "510070",
    "end": "517410"
  },
  {
    "text": "those multiply instruction on the other and if the one we're trying to find out on isn't executing multiply instructions then",
    "start": "517630",
    "end": "522900"
  },
  {
    "text": "This one will be able to execute multiple instructions one after the other so what the port smash paper have done is",
    "start": "523000",
    "end": "529049"
  },
  {
    "text": "that they've written their program that will",
    "start": "529300",
    "end": "531839"
  },
  {
    "text": "execute certain types of instructions in a loop so they have a repetition of about 64 let's say it's",
    "start": "532330",
    "end": "538739"
  },
  {
    "text": "these various different ones but so is the 64 add instructions to make use of all the ALUs on Intel CPU - there's four of",
    "start": "539170",
    "end": "546959"
  },
  {
    "text": "them that it can make use of",
    "start": "547270",
    "end": "549270"
  },
  {
    "text": "say just four",
    "start": "549280",
    "end": "550270"
  },
  {
    "text": "continuous adds we should all exceute at the same time if nothing else was running on that CPU and it times how long they",
    "start": "550270",
    "end": "555840"
  },
  {
    "text": "take to execute",
    "start": "555840",
    "end": "557380"
  },
  {
    "text": "It does that and it gets an idea of how long they take to execute and then you run the same thing at the same",
    "start": "557380",
    "end": "562679"
  },
  {
    "text": "Time as the other program is running and if it takes more time to execute",
    "start": "562680",
    "end": "566609"
  },
  {
    "text": "than the other program then you know that program must be also executing some add instructions and",
    "start": "567490",
    "end": "572789"
  },
  {
    "start": "573000",
    "end": "635000"
  },
  {
    "text": "So what you can do is by looking at which of these",
    "start": "573160",
    "end": "576209"
  },
  {
    "text": "bits are being used by running instructions then you can find out what type of instructions are being executed",
    "start": "576610",
    "end": "583380"
  },
  {
    "text": "on the other side",
    "start": "583960",
    "end": "585100"
  },
  {
    "text": "Now the reason why it's called port smash is because",
    "start": "585100",
    "end": "587850"
  },
  {
    "text": "We've drawn this a time one multiply it but that's also on the same part as an ALU",
    "start": "587920",
    "end": "592050"
  },
  {
    "text": "for example and what they actually do is that these are all connected to one",
    "start": "592480",
    "end": "596579"
  },
  {
    "text": "port of the scheduler within the CPU and so if we wanted to say use the multiply bit",
    "start": "597040",
    "end": "602250"
  },
  {
    "text": "of this CPU then we have to run out of port 2 which means the ALU on port 2 can't be used as well",
    "start": "602530",
    "end": "607709"
  },
  {
    "text": "can use one of the things in",
    "start": "607920",
    "end": "609820"
  },
  {
    "text": "this column same for example here if we want to use a divide we can't do any ALU processing or vector processing",
    "start": "609820",
    "end": "616229"
  },
  {
    "text": "so we could run instructions that we know will tie up one of these specific ports or will tie up a group of them and",
    "start": "616390",
    "end": "622379"
  },
  {
    "text": "Then we can see whether the other program providing we can get it scheduled onto the same physical execution unit which isn't",
    "start": "622630",
    "end": "629820"
  },
  {
    "text": "Impossible to do is also trying to use parts of the system on that point what the port smash",
    "start": "630280",
    "end": "635729"
  },
  {
    "start": "635000",
    "end": "767000"
  },
  {
    "text": "example program does is cleverly uses certain instructions which tie up a particular port on the",
    "start": "635920",
    "end": "642810"
  },
  {
    "text": "CPU core",
    "start": "643360",
    "end": "644800"
  },
  {
    "text": "To see whether that one is being used by the other program and by measuring the time we can see whether",
    "start": "644800",
    "end": "649349"
  },
  {
    "text": "That has been done so we've got this side channel where we can see",
    "start": "649510",
    "end": "653069"
  },
  {
    "text": "We can get insight into what the other process is doing as a black box we say ok it must be trying to execute this",
    "start": "653500",
    "end": "658679"
  },
  {
    "text": "type of instructions because it's interfering with our use of this port or it isn't",
    "start": "658680",
    "end": "662789"
  },
  {
    "text": "interfering with this use of this port. So what they do is that they run this alongside",
    "start": "663420",
    "end": "667079"
  },
  {
    "text": "OpenSSL doing its encryption of the task that's been set to do and it can measure what type of instructions it's trying to execute",
    "start": "668230",
    "end": "675269"
  },
  {
    "text": "What it ends up with is a series of",
    "start": "675490",
    "end": "677490"
  },
  {
    "text": "timing sequences that shows how long things are taking at particular points or sometimes it be running it full-speed some points it'll be running slower",
    "start": "677740",
    "end": "683969"
  },
  {
    "text": "and that gives it what they call a noisy signal which some signal processing they apply to it they can use to actually extract",
    "start": "684130",
    "end": "689969"
  },
  {
    "text": "the private key that was being used by open SSL purely from watching the timings that are going there. So what they've demonstrated is that",
    "start": "690040",
    "end": "697649"
  },
  {
    "text": "by running a program they can sort of monitor enough information because they can see what the other CPU is doing",
    "start": "697930",
    "end": "704700"
  },
  {
    "text": "by what their program is doing Ie if the other program is trying to multiply at the same time as they're trying to multiply and",
    "start": "705190",
    "end": "710940"
  },
  {
    "text": "there's only one multiply unit that it will slow both programs down and you can detect that",
    "start": "710940",
    "end": "715619"
  },
  {
    "text": "They can start to work out what operations the other program must be doing and then start to work out what that would",
    "start": "716080",
    "end": "721680"
  },
  {
    "text": "mean in terms of what that program is doing and backtrack from that to actually extract information that",
    "start": "721680",
    "end": "728039"
  },
  {
    "text": "ideally they shouldn't be able to access",
    "start": "728350",
    "end": "730350"
  },
  {
    "text": "So the upshot of this is that one of the recommendations is that perhaps in certain circumstances you might want to turn off",
    "start": "731140",
    "end": "737730"
  },
  {
    "text": "hyper-threading either completely and just go back to having four physical cores that only execute for separate threads rather than four physical cores",
    "start": "738280",
    "end": "745560"
  },
  {
    "text": "executing eight logical threads or the very least modify things so that the operating system has the ability to turn",
    "start": "746680",
    "end": "753000"
  },
  {
    "text": "hyper-threading on and off on each processor core",
    "start": "753220",
    "end": "755370"
  },
  {
    "text": "depending on what process is running on this because for some processes it doesn't matter and extracting information from it wouldn't be that",
    "start": "755680",
    "end": "762299"
  },
  {
    "text": "important but from others use of encryption programs you really don't want this sort of side channel there.",
    "start": "762460",
    "end": "767302"
  },
  {
    "text": "Q:Is this operating system specific",
    "start": "767302",
    "end": "768750"
  },
  {
    "text": "or is this",
    "start": "768880",
    "end": "770590"
  },
  {
    "text": "what's the deal there then?",
    "start": "770590",
    "end": "772400"
  },
  {
    "text": "It's not operating system specific it will be",
    "start": "772400",
    "end": "775050"
  },
  {
    "text": "CPU specific so the example they've got is for the Intel skylake in KB Lake",
    "start": "775360",
    "end": "780060"
  },
  {
    "text": "CPU families you could probably do something similar with other CPUs that implement hyper threading",
    "start": "780820",
    "end": "786479"
  },
  {
    "text": "You would have to calibrate your system depending on that but that's not a problem",
    "start": "787480",
    "end": "792000"
  },
  {
    "text": "It's not implementation specific you just have to tailor it to the machine are you looking at.",
    "start": "792160",
    "end": "797980"
  },
  {
    "text": "Q:Is it a practical thing",
    "start": "797980",
    "end": "798579"
  },
  {
    "text": "for hackers to do this? Is it easy or them to do?",
    "start": "798980",
    "end": "800980"
  },
  {
    "text": "The example codes there you can download it off github run it and Det run the demo on a Linux machine I don't have one",
    "start": "802100",
    "end": "808539"
  },
  {
    "text": "with the right sort of CPU here to",
    "start": "808540",
    "end": "810259"
  },
  {
    "text": "Demo it unfortunately there is potential to do this there are",
    "start": "810260",
    "end": "813700"
  },
  {
    "text": "limitations on what you can do with it you need to have your spy program running on the same physical core as the",
    "start": "813890",
    "end": "820210"
  },
  {
    "text": "Other program otherwise you won't have full access to the information",
    "start": "820520",
    "end": "823809"
  },
  {
    "text": "I'm sure in the right circumstances you could use it to get information out if it hasn't already been done, so",
    "start": "824360",
    "end": "830260"
  },
  {
    "text": "if we hit this",
    "start": "831230",
    "end": "833230"
  },
  {
    "text": "Boom it goes off and sets a few things up the screen goes black but if I switch back to my other one, I type",
    "start": "833840",
    "end": "840939"
  },
  {
    "text": "su again",
    "start": "840940",
    "end": "842940"
  },
  {
    "text": "it's logged me in as root and of course",
    "start": "843170",
    "end": "845769"
  }
]