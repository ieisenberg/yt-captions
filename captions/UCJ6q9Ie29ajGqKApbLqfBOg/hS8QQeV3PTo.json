[
  {
    "text": "hi everybody sorry for being late or the problem with our laptop so we had to use",
    "start": "30",
    "end": "6569"
  },
  {
    "text": "other laptop so today we are going to talk about ghost in the PLC designing an",
    "start": "6569",
    "end": "12780"
  },
  {
    "text": "undetectable programmable logic controller rootkit European control attack my name is Ali epoxy and I'm PhD",
    "start": "12780",
    "end": "20789"
  },
  {
    "text": "student at distributed and and embedded system security group at University of Twente in the Netherlands and visiting",
    "start": "20789",
    "end": "29279"
  },
  {
    "text": "researcher chair of system security of Rock University Bochum in Germany I'm doing some system level security proxy",
    "start": "29279",
    "end": "37980"
  },
  {
    "text": "Elsie's their budget ok hello guys I'm Majid and research and development",
    "start": "37980",
    "end": "42989"
  },
  {
    "text": "engineer at quarks lab are you involved in this research with AP as an",
    "start": "42989",
    "end": "48930"
  },
  {
    "text": "independent security researcher so they are not representing on behalf of my current or former employer alright so we",
    "start": "48930",
    "end": "59699"
  },
  {
    "text": "are going to describe our work so just one thing I have to mention that this is",
    "start": "59699",
    "end": "66060"
  },
  {
    "text": "not that not all of the research we did basically what we did today had some",
    "start": "66060",
    "end": "71479"
  },
  {
    "text": "components about actual physical process exploitation which we can't expose",
    "start": "71479",
    "end": "76590"
  },
  {
    "text": "because it was part of the EU project but we are going to expose the details about the attack itself so it doesn't",
    "start": "76590",
    "end": "84330"
  },
  {
    "text": "contain process exploitation because we looked at a specific process in different utilities to exploit them",
    "start": "84330",
    "end": "91590"
  },
  {
    "text": "anyway so today we are going to first give you some background on existing attacks and defenses for embedded",
    "start": "91590",
    "end": "98130"
  },
  {
    "text": "systems this is important the maybe not exactly fully what we what we are doing",
    "start": "98130",
    "end": "106530"
  },
  {
    "text": "but it is important because we wanted to look at existing active defense and attack against amulet systems and then",
    "start": "106530",
    "end": "113579"
  },
  {
    "text": "we look at them and see which one of them are actually applicable to PLC's and then later we are going to the core",
    "start": "113579",
    "end": "120299"
  },
  {
    "text": "problem which is a pink control and we give you a background on thin control and we explain the problem with pin",
    "start": "120299",
    "end": "125700"
  },
  {
    "text": "control it's not well we believe that it's not a software problem it's mostly hardware problem and then we explain our",
    "start": "125700",
    "end": "131400"
  },
  {
    "text": "root key to a range of our attacks we decided to add some stuff about each variant of our work we will have some",
    "start": "131400",
    "end": "138900"
  },
  {
    "text": "demos including a demo in a real PLC because again there was some comments",
    "start": "138900",
    "end": "144180"
  },
  {
    "text": "about our work which we decided to do it in a VLP as well and we'll have some discussions yeah so first of all what is",
    "start": "144180",
    "end": "151740"
  },
  {
    "text": "talking about and what is not about so the talk is basically trying to uncover",
    "start": "151740",
    "end": "157380"
  },
  {
    "text": "existing design flaws in PLC's and we believe that that this kind of attack",
    "start": "157380",
    "end": "163740"
  },
  {
    "text": "can be used in future by the attackers but today with the situation we have in",
    "start": "163740",
    "end": "170670"
  },
  {
    "text": "the Americas and especially in PLC's we believe that it therefore easier attacking techniques but of course the",
    "start": "170670",
    "end": "177360"
  },
  {
    "text": "vendors which some of them actually are here and actually did lots of thing they are trying to defeat those kind of",
    "start": "177360",
    "end": "183270"
  },
  {
    "text": "trivial attacks magic ok so this research wasn't about developing another",
    "start": "183270",
    "end": "188640"
  },
  {
    "text": "version of a Sportsnet so we're not going to unveil any fully functional rootkit like it's not about the symbol",
    "start": "188640",
    "end": "195870"
  },
  {
    "text": "single binary that you can learn everywhere on every PLC with with any operating system or any architecture",
    "start": "195870",
    "end": "202680"
  },
  {
    "text": "we're not going to talk about any one vulnerable to discovery technique or any exploitation techniques so there's also",
    "start": "202680",
    "end": "209250"
  },
  {
    "text": "knows your data leak and we consider that our attack is cross-platform because the underlying flaw is not",
    "start": "209250",
    "end": "217709"
  },
  {
    "text": "related to any operating system or to any hardware architecture so it's a the",
    "start": "217709",
    "end": "223260"
  },
  {
    "text": "flaw is a big general flow into embedded systems which are going to explain later",
    "start": "223260",
    "end": "229260"
  },
  {
    "text": "and of course we are not going to name any vendor so no names and shapes ok so",
    "start": "229260",
    "end": "237450"
  },
  {
    "text": "first things first let's see what what is the critical infrastructure the protocol infrastructures are basically",
    "start": "237450",
    "end": "243090"
  },
  {
    "text": "the element of the infrastructure that if lost could pose a significant threat to the system service and communication",
    "start": "243090",
    "end": "250380"
  },
  {
    "text": "for example the electrical and nuclear facilities the water purification the",
    "start": "250380",
    "end": "257040"
  },
  {
    "text": "gaseous stations and of course military and transport transportation",
    "start": "257040",
    "end": "262370"
  },
  {
    "text": "okay based on our previous experiences the attackers are mostly a status sponsored they are using zero days and",
    "start": "262570",
    "end": "269170"
  },
  {
    "text": "they're using highly sophisticated techniques that's as sophisticated evasion techniques one of the well-known example",
    "start": "269170",
    "end": "274780"
  },
  {
    "text": "and in this is operation Olympic and Fox not actually so like any other attack",
    "start": "274780",
    "end": "282730"
  },
  {
    "text": "before starting the attack that I could need to get into the network without being detected I had been an interesting research in",
    "start": "282730",
    "end": "290290"
  },
  {
    "text": "this area which has in the presented at blackhat your 2014 as well which called",
    "start": "290290",
    "end": "295420"
  },
  {
    "text": "defeating the emulation based Network intrusion detection systems and then",
    "start": "295420",
    "end": "300760"
  },
  {
    "text": "once the attacker gets into the network the second step is to start manipulating the process there's another good",
    "start": "300760",
    "end": "307300"
  },
  {
    "text": "research in this area by marina corte file is called dam vulnerable chemical process to the research appearance to",
    "start": "307300",
    "end": "313750"
  },
  {
    "text": "asset okay so the PLC's are one of the main components of every critical",
    "start": "313750",
    "end": "320500"
  },
  {
    "text": "infrastructure the the PLC's are basically in embedded systems running and runtime operating system the we can",
    "start": "320500",
    "end": "328480"
  },
  {
    "text": "program the plc is using logics so the logic is basically a program that that plc executes and based on this logic it",
    "start": "328480",
    "end": "337660"
  },
  {
    "text": "will make the plc for example to read some of the value from a physical IO as an input and do some processing and",
    "start": "337660",
    "end": "344440"
  },
  {
    "text": "based on on that input and based on the result of that processing it will update some outputs for example imagine that we",
    "start": "344440",
    "end": "351460"
  },
  {
    "text": "have a temperature sensor as input and the logic makes the plc to read the",
    "start": "351460",
    "end": "356710"
  },
  {
    "text": "temperature and in the processing part it will see if the temperature is not higher than a predefined temperature",
    "start": "356710",
    "end": "363670"
  },
  {
    "text": "into the logic and if it's higher it will update some outputs for example turning on an alarm what or whatever",
    "start": "363670",
    "end": "370600"
  },
  {
    "text": "else so let's here we are going to take a look at all all the existing attacks and",
    "start": "370600",
    "end": "376810"
  },
  {
    "text": "defenses on em that the systems and PLC's so first of all we have the tag called",
    "start": "376810",
    "end": "382600"
  },
  {
    "text": "firmware modification attack which the attacker basically take a firmware image",
    "start": "382600",
    "end": "387760"
  },
  {
    "text": "and starts modifying this remember and injecting his malicious code and then uploading this this malicious firmware",
    "start": "387760",
    "end": "394660"
  },
  {
    "text": "onto the device the second type is is logic modification which in this attack the attacker",
    "start": "394660",
    "end": "401500"
  },
  {
    "text": "instead of modifying the firmware is what he will try to modify the logic actually and then upload the malicious",
    "start": "401500",
    "end": "407800"
  },
  {
    "text": "logic to to control the plot the process the another class of attack here which is which exists for a long time on the",
    "start": "407800",
    "end": "414400"
  },
  {
    "text": "under on the PC Wars is called control flow attack which is basically the memory corruption buffer overflows and",
    "start": "414400",
    "end": "422110"
  },
  {
    "text": "you know this kind of attacks then other attacks called authentication bypass",
    "start": "422110",
    "end": "427330"
  },
  {
    "text": "which is a really simple attack and but unfortunately it's very common which is",
    "start": "427330",
    "end": "434530"
  },
  {
    "text": "about the default password in the PLC's which can you can see it everywhere even into the real world system and real",
    "start": "434530",
    "end": "440710"
  },
  {
    "text": "critical infrastructures the last coin here is the ICS malware which the",
    "start": "440710",
    "end": "448900"
  },
  {
    "text": "malware is attacking directly to the SCADA software and by controlling this color software actually he will try to",
    "start": "448900",
    "end": "455530"
  },
  {
    "text": "manipulate the process of the PLC the again which good example here is the",
    "start": "455530",
    "end": "461170"
  },
  {
    "text": "Silk stocks net so for all those attacks we have the defenses as well the",
    "start": "461170",
    "end": "466960"
  },
  {
    "text": "attestation or memory attestation is one of those defense in attestation the the",
    "start": "466960",
    "end": "472150"
  },
  {
    "text": "protection make the solution is try to to verify integrity of a system for",
    "start": "472150",
    "end": "480910"
  },
  {
    "text": "example in memory at the station the defensive solution will try to ensure that the memory region is is not changed",
    "start": "480910",
    "end": "489760"
  },
  {
    "text": "and if we compare it with the checksum then we have similar integrity verification which is a which is the",
    "start": "489760",
    "end": "495820"
  },
  {
    "text": "defense against the firmware a filmer modification and logic and agree a",
    "start": "495820",
    "end": "502300"
  },
  {
    "text": "logical modification actually and then the last kind of defense are our hoop",
    "start": "502300",
    "end": "507670"
  },
  {
    "text": "detections the code hooking and data hooking which we are going to talk in more detail about that okay so from all",
    "start": "507670",
    "end": "514840"
  },
  {
    "text": "those defenses there are only few of them which match the following requirements are actually applicable to the PLC's so the proposed solution",
    "start": "514840",
    "end": "522520"
  },
  {
    "text": "should not require any hardware modification and because on the PLC's we have limited amount of resource the poor",
    "start": "522520",
    "end": "528880"
  },
  {
    "text": "proposed solution should not pose extra overhead to the device and then because you know almost all of the already",
    "start": "528880",
    "end": "535660"
  },
  {
    "text": "manufactured PLC's are not supporting virtualization so if the proposed solution is virtualization based is not",
    "start": "535660",
    "end": "542950"
  },
  {
    "text": "applicable to the PLC's as well so if you do all those protection in two basic",
    "start": "542950",
    "end": "548260"
  },
  {
    "text": "categories trivial and non-trivial defenses we can put logic checks on verification forensic easy verification",
    "start": "548260",
    "end": "554800"
  },
  {
    "text": "as a trivial defense and all hospice intrusion detection system in",
    "start": "554800",
    "end": "560380"
  },
  {
    "text": "non-trivial category so the duple ganger and other scope ej are two good example of non-trivial defense so let's let's",
    "start": "560380",
    "end": "567850"
  },
  {
    "text": "take a look at how they're working so duplicate here actually using the memory attestation technique what it does it's",
    "start": "567850",
    "end": "574150"
  },
  {
    "text": "actually take a firmware image it will scan this at this frame her for executable and live code and it will",
    "start": "574150",
    "end": "581080"
  },
  {
    "text": "randomly install some watch points and later in the gig at one time every time",
    "start": "581080",
    "end": "586270"
  },
  {
    "text": "that this watch points are hit it will verify a checksum of the memory region so as far as this change the checksum is",
    "start": "586270",
    "end": "592690"
  },
  {
    "text": "not changed it will consider that everything is good at it will at the execution to plot then we have otoscope",
    "start": "592690",
    "end": "598960"
  },
  {
    "text": "ejr the otoscope ejr is a basically a [Music]",
    "start": "598960",
    "end": "604290"
  },
  {
    "text": "protection against the control flow anomalies it has two different phases except it will actually which called",
    "start": "604290",
    "end": "612940"
  },
  {
    "text": "loop gather some information related to the execution and it's like you know",
    "start": "612940",
    "end": "619480"
  },
  {
    "text": "function a function is everything good like like function addresses like return addresses of the function function",
    "start": "619480",
    "end": "626710"
  },
  {
    "text": "parameter and this kind of stuff as it will store all of them and in data structure called trusted location list",
    "start": "626710",
    "end": "633160"
  },
  {
    "text": "and later in the protection mode is will compare all the wrong time values against this already gathered values",
    "start": "633160",
    "end": "640210"
  },
  {
    "text": "which called trusted location list and as far as these two values are are matching it will consider that",
    "start": "640210",
    "end": "645490"
  },
  {
    "text": "everything is good and let the execution to to continue so up until now we have",
    "start": "645490",
    "end": "651340"
  },
  {
    "text": "per we have discussed about two different defensive solution against poaching and data hooking the code",
    "start": "651340",
    "end": "658210"
  },
  {
    "text": "switching is basically when the attacker try to divert the execution of a function to another higher parts of memory which",
    "start": "658210",
    "end": "664960"
  },
  {
    "text": "he controls and he put his malicious code and once the malicious code is executed it's a jump back to the good",
    "start": "664960",
    "end": "670390"
  },
  {
    "text": "function and data hooking is is it's",
    "start": "670390",
    "end": "675430"
  },
  {
    "text": "kinda attacked that the attacker not doing anything with the code but in CDs we'll try he will try to modify it and",
    "start": "675430",
    "end": "683350"
  },
  {
    "text": "elements of data structure in memory for example a syscall table in linux okay so",
    "start": "683350",
    "end": "689590"
  },
  {
    "text": "like any other defensive solution the duple ganger and otoscope ejr has their",
    "start": "689590",
    "end": "696190"
  },
  {
    "text": "own weaknesses for example the doppelganger is not able to verify the dynamic memory for example",
    "start": "696190",
    "end": "702250"
  },
  {
    "text": "imagine that there is a malicious code is dynamically loaded into memory and then get it can be executed the do",
    "start": "702250",
    "end": "708520"
  },
  {
    "text": "programmer is not able to to monitor it it actually doesn't see it and for otoscope ujr because which using",
    "start": "708520",
    "end": "716260"
  },
  {
    "text": "static references a setting referencing and so if the attack is happening in the",
    "start": "716260",
    "end": "721810"
  },
  {
    "text": "part of the code and parts of the memory which wasn't money should actually in the learning mode of otoscope ejr then",
    "start": "721810",
    "end": "728710"
  },
  {
    "text": "later in the protection phase the otoscope AJR is not able to monitor and do any protection about that attack okay",
    "start": "728710",
    "end": "736990"
  },
  {
    "text": "so this was a background about all attacks and defenses early going to give you some background on pimkin Hey",
    "start": "736990",
    "end": "743320"
  },
  {
    "text": "thank you actually I like this microphone I don't have to say loud so I",
    "start": "743320",
    "end": "749860"
  },
  {
    "text": "guess you're here to listen about the the core problem and this part is actually talking about the core problem",
    "start": "749860",
    "end": "756010"
  },
  {
    "text": "so a background on pin control well let's look at",
    "start": "756010",
    "end": "761880"
  },
  {
    "text": "so basically pin controller like like these are the pins in the CPU or SOC s",
    "start": "761880",
    "end": "768220"
  },
  {
    "text": "and basically basically it's like controlled by a system we call it in",
    "start": "768220",
    "end": "774370"
  },
  {
    "text": "control it can be slightly different in different architectures but they're the foundation all of them are saying",
    "start": "774370",
    "end": "779850"
  },
  {
    "text": "majority of abilities and 95% of them are actually based on kingpin based",
    "start": "779850",
    "end": "785320"
  },
  {
    "text": "control and you it consists of two parts pin configuration and pin multiplexing",
    "start": "785320",
    "end": "791200"
  },
  {
    "text": "so let's start with pin multiplexing so what is pin much be multiplexing very very simple means",
    "start": "791200",
    "end": "798860"
  },
  {
    "text": "that you can have multiple functionality in a CPU pin or SOC team and you can",
    "start": "798860",
    "end": "805190"
  },
  {
    "text": "change the functionality when you want usually tapping at the time but you can",
    "start": "805190",
    "end": "810620"
  },
  {
    "text": "actually change it any time you want and usually you have a switch in the SOC and here is for example a multiplex screen",
    "start": "810620",
    "end": "817010"
  },
  {
    "text": "which you can change the functionality to do different stuff so let's give you",
    "start": "817010",
    "end": "822440"
  },
  {
    "text": "example you know you I don't want to mention company's name but for example you have a phone a and phone be the",
    "start": "822440",
    "end": "828740"
  },
  {
    "text": "company a is very nice and provide you with a SD card reader so which you can put your phone to the back you can put",
    "start": "828740",
    "end": "836149"
  },
  {
    "text": "the SD card to your phone increase the storage of your phone but fine the company be have the same CPU or as you",
    "start": "836149",
    "end": "843740"
  },
  {
    "text": "see but doesn't have a sticker so what they do is that basically they multiplex the pins which was being used for SD",
    "start": "843740",
    "end": "851300"
  },
  {
    "text": "card operations and you use it for other purpose that thing won't affect me so",
    "start": "851300",
    "end": "856339"
  },
  {
    "text": "you can have multiple functionality not at the same time but just you can have multiple functionalities one of them you",
    "start": "856339",
    "end": "863000"
  },
  {
    "text": "can use at a time but basically our switch to you can basically you can",
    "start": "863000",
    "end": "869060"
  },
  {
    "text": "decide what you want so neck next okay thanks so what is ping configuration",
    "start": "869060",
    "end": "874160"
  },
  {
    "text": "configuration actually simpler so you know when you have a logic now here is",
    "start": "874160",
    "end": "882050"
  },
  {
    "text": "an example a very very basic logic of a PLC so if you say for example I write a",
    "start": "882050",
    "end": "887690"
  },
  {
    "text": "pin to be input and this pin number is 24 and then there is a pin I describe as",
    "start": "887690",
    "end": "893720"
  },
  {
    "text": "output you can actually see it here - this is for example output pin and this is the inputs mean and then I decide to",
    "start": "893720",
    "end": "900199"
  },
  {
    "text": "turn on and off something connected to the dispenser let's say it's the LED I want to turn it on and off every five",
    "start": "900199",
    "end": "907399"
  },
  {
    "text": "seconds so what will happen is that basically you describe the input pin here and output pin here and normally",
    "start": "907399",
    "end": "915440"
  },
  {
    "text": "the standard the rule is that input pin you can only read from it but you can't write through okay",
    "start": "915440",
    "end": "921380"
  },
  {
    "text": "the output pin you can both read and write from it is this concept which we",
    "start": "921380",
    "end": "926600"
  },
  {
    "text": "are talking actually you can have different kind of interfaces in your PLC so you can actually use the spi I don't",
    "start": "926600",
    "end": "933510"
  },
  {
    "text": "know some piercings use some some kind of serial interfaces which there which",
    "start": "933510",
    "end": "939269"
  },
  {
    "text": "we are they are talking with their i/o they are K bus d bus I don't know like",
    "start": "939269",
    "end": "944329"
  },
  {
    "text": "SPI like lots of different but the foundation the underlying system we are talking on underlying system you are the",
    "start": "944329",
    "end": "950399"
  },
  {
    "text": "same and next sorry ok so there is a",
    "start": "950399",
    "end": "956760"
  },
  {
    "text": "problem the problem is that the pin multiplexing itself and pin configuration so when you say the pain",
    "start": "956760",
    "end": "962940"
  },
  {
    "text": "is input or output there is nothing tells the operating system that the pin",
    "start": "962940",
    "end": "968190"
  },
  {
    "text": "got multiplex or the pin got can reconfigure and that's missing is a problem and we show it is a problem",
    "start": "968190",
    "end": "975320"
  },
  {
    "text": "magic next yeah so before I say let's look actually how PLC is talking with",
    "start": "975320",
    "end": "981089"
  },
  {
    "text": "his i/o in very very very basic right so",
    "start": "981089",
    "end": "986370"
  },
  {
    "text": "usually you have a PLC runtime what will happen is that you are uploading your logic again we have this sample logic",
    "start": "986370",
    "end": "992430"
  },
  {
    "text": "and we have some inputs and then updating some outputs what will happen is that the PLC read the logic and knows",
    "start": "992430",
    "end": "998010"
  },
  {
    "text": "that okay so thin 24 is inputs and thin 22 is output so I have to prepare it to",
    "start": "998010",
    "end": "1004190"
  },
  {
    "text": "be input and output and then after it's going to update out with every some seconds and well first of all you can't",
    "start": "1004190",
    "end": "1011630"
  },
  {
    "text": "just talk to the i/o in a physical memory if you don't have MMU in your hardware if you do have an MU in your",
    "start": "1011630",
    "end": "1019279"
  },
  {
    "text": "hardware and so what will happen is that the PLC will ask various address of visual memory of the i/o which I can",
    "start": "1019279",
    "end": "1026270"
  },
  {
    "text": "write and then based on that it's right to values here that's very very basic",
    "start": "1026270",
    "end": "1031610"
  },
  {
    "text": "form of it next okay so you have to press yeah that's it that's it okay so",
    "start": "1031610",
    "end": "1038949"
  },
  {
    "text": "so what will happen here is that again we are going to actually show it in animation and show you the problem too",
    "start": "1038949",
    "end": "1045020"
  },
  {
    "text": "so that's something that we have a PLC runtime and so here we are assuming that",
    "start": "1045020",
    "end": "1050450"
  },
  {
    "text": "you are directly tracking with the operating system but it might be a driver or something else that you are talking so it's not it might be not the",
    "start": "1050450",
    "end": "1056780"
  },
  {
    "text": "case that you are directly talking to it so what will happen is that PLC says okay I have to use this I own memories",
    "start": "1056780",
    "end": "1062840"
  },
  {
    "text": "right so these are your memories have to be provided for me you can talk directly to physical memory because we assume",
    "start": "1062840",
    "end": "1068659"
  },
  {
    "text": "that you have MMU and then it will add operating system or whatever to map this",
    "start": "1068659",
    "end": "1073940"
  },
  {
    "text": "physical I own memory not if you are too fat can you not hold it yes I mentioned",
    "start": "1073940",
    "end": "1079789"
  },
  {
    "text": "it is combined now you just went into it but don't do it too bad so so now so you",
    "start": "1079789",
    "end": "1088159"
  },
  {
    "text": "have a physical memory the the PLC runtime or driver or whatever is asked",
    "start": "1088159",
    "end": "1093320"
  },
  {
    "text": "for visual physical audio memory as a visual memory and what will happen is that you basically have a mirroring",
    "start": "1093320",
    "end": "1099620"
  },
  {
    "text": "between these two so then here is let's assume that this is our logic so you we want to LED blink every five seconds and",
    "start": "1099620",
    "end": "1106990"
  },
  {
    "text": "the inputs pin which is pin 24 is the input pin and pin 22 is output pin so",
    "start": "1106990",
    "end": "1114320"
  },
  {
    "text": "that's actually basically the logic you see here so pin 24 input pin 22 outputs",
    "start": "1114320",
    "end": "1119690"
  },
  {
    "text": "and the pin 22 for example here connected to LED so you are turning on an opera LED every five seconds what",
    "start": "1119690",
    "end": "1125960"
  },
  {
    "text": "will happen is that fresh you have to config the pin the pin configuration so you say next now I did now it's time",
    "start": "1125960",
    "end": "1132980"
  },
  {
    "text": "okay so you are saying okay pin 24 is an input pin so we write value 0 in a state",
    "start": "1132980",
    "end": "1138919"
  },
  {
    "text": "of 13 so the pin state is 0 which means pin is inputs and think 22 is output pin",
    "start": "1138919",
    "end": "1146360"
  },
  {
    "text": "so we write value 1 to it and then you basically write it to a vient rely on memory and then basically once you write",
    "start": "1146360",
    "end": "1153710"
  },
  {
    "text": "it video erm you you are actually writing to the physical memory the same",
    "start": "1153710",
    "end": "1158720"
  },
  {
    "text": "value right fine then you are going to read the edges because well the logic",
    "start": "1158720",
    "end": "1164029"
  },
  {
    "text": "saying while the pin 22 scene 24 which is an input is true so you are reading",
    "start": "1164029",
    "end": "1169039"
  },
  {
    "text": "values from visual memory but actually this value is coming from physical memory and well then you are going to",
    "start": "1169039",
    "end": "1176600"
  },
  {
    "text": "change the i/o every 5 second turn on an OP LED so basically up means writing",
    "start": "1176600",
    "end": "1182630"
  },
  {
    "text": "value 0 or R means value 1 to the to the to the re open output screen so",
    "start": "1182630",
    "end": "1188179"
  },
  {
    "text": "basically turn on and off LED and this once you write this value it will get",
    "start": "1188179",
    "end": "1193460"
  },
  {
    "text": "written to the physical memory again okay so far so good everything is fine but",
    "start": "1193460",
    "end": "1199000"
  },
  {
    "text": "there is a problem go forward yeah moe moe moe moe",
    "start": "1199000",
    "end": "1207778"
  },
  {
    "text": "so okay so now let's go back so let's assume now we are a tracker and what we",
    "start": "1208860",
    "end": "1216400"
  },
  {
    "text": "do is that so we had team 22 ads outs which you remember so the value in the",
    "start": "1216400",
    "end": "1221919"
  },
  {
    "text": "state register was one this time next this time what we do is that we are",
    "start": "1221919",
    "end": "1227890"
  },
  {
    "text": "going to say pin 22 is the input so we change the configuration of the team",
    "start": "1227890",
    "end": "1233559"
  },
  {
    "text": "from being outputs to inputs and we write it to the state register and of",
    "start": "1233559",
    "end": "1239200"
  },
  {
    "text": "course this value will get mapped the physical memory so you have now 0 14 22",
    "start": "1239200",
    "end": "1244809"
  },
  {
    "text": "which means this pin is inputs it is not anymore outfits but nobody knows because",
    "start": "1244809",
    "end": "1250899"
  },
  {
    "text": "you don't have any kind of interrupt or feedback to tell the operating system or whatever that this pin is not anymore",
    "start": "1250899",
    "end": "1256380"
  },
  {
    "text": "output P so then the PHP runtime doesn't know about it so it continues to do the",
    "start": "1256380",
    "end": "1262870"
  },
  {
    "text": "logic which we had five second turn on and off led so yes so this is getting",
    "start": "1262870",
    "end": "1270490"
  },
  {
    "text": "map net right next trying to write and writing a value 0 or 1 so it's write",
    "start": "1270490",
    "end": "1275679"
  },
  {
    "text": "value 0 or 1 to turn on and off led but here's the problem the problem happening here once the value want to get written",
    "start": "1275679",
    "end": "1283690"
  },
  {
    "text": "to the physical memory next you will not have to write and",
    "start": "1283690",
    "end": "1289740"
  },
  {
    "text": "that's a problem so this is why we call it a memory illusion because what you",
    "start": "1289740",
    "end": "1296110"
  },
  {
    "text": "see in the virtual memory which available to any software in the operating system you see value 0 or 1",
    "start": "1296110",
    "end": "1302080"
  },
  {
    "text": "but actually this value never changed here so in physical world you don't have",
    "start": "1302080",
    "end": "1307570"
  },
  {
    "text": "it in virtual world you have it so even if you go check the values what you wrote to the to the virtual memory you",
    "start": "1307570",
    "end": "1314260"
  },
  {
    "text": "see everything is fine but actually in physical memory you don't why because you change the state of a pin to the",
    "start": "1314260",
    "end": "1319720"
  },
  {
    "text": "inputs CPU doesn't accept right operation to the input field but the problem here is a problem it doesn't",
    "start": "1319720",
    "end": "1327159"
  },
  {
    "text": "tell you that I don't accept it it just say thing is fine so no feedback",
    "start": "1327159",
    "end": "1333460"
  },
  {
    "text": "no no other so normally what you assume is that once you fail to write to the",
    "start": "1333460",
    "end": "1339340"
  },
  {
    "text": "physical memory you expect some kind of failure I don't know for example copying a file to your SD or memory card once",
    "start": "1339340",
    "end": "1347020"
  },
  {
    "text": "you like take it out suddenly you get an error saying hey remember the SD card or",
    "start": "1347020",
    "end": "1352390"
  },
  {
    "text": "USB yes this is not anymore available this is not the case that's a problem so",
    "start": "1352390",
    "end": "1358860"
  },
  {
    "text": "so what we talked about was that well we wanted to we know about all existing",
    "start": "1358860",
    "end": "1364690"
  },
  {
    "text": "defenses so we know about otoscope ejr which detecting function hooking we know about like duper gang gear or software",
    "start": "1364690",
    "end": "1372490"
  },
  {
    "text": "symbiotes which basically verify the integrity of executable part of the plc runtime so and of course we know there",
    "start": "1372490",
    "end": "1379900"
  },
  {
    "text": "are some logic checksums and stuff so we don't want to do any of these things who King I don't know modifying binaries or",
    "start": "1379900",
    "end": "1385810"
  },
  {
    "text": "like changing the logic so we want and actually we want to use this weakness",
    "start": "1385810",
    "end": "1390850"
  },
  {
    "text": "this problem which we explain now there is no feedback so there where it comes the pin control attack and basically pin",
    "start": "1390850",
    "end": "1396820"
  },
  {
    "text": "controllers actives consists of two parts so it's not just one thing it's to seen so transport pin configuration",
    "start": "1396820",
    "end": "1404020"
  },
  {
    "text": "attack which is basically we we exploit the configuration of the pins how we",
    "start": "1404020",
    "end": "1409450"
  },
  {
    "text": "describe it like in the PLC and the next is a pin multiplexing attack and that's",
    "start": "1409450",
    "end": "1415090"
  },
  {
    "text": "the one which is interesting which we show later that how we are manipulating the analog data in the in the PLC so and",
    "start": "1415090",
    "end": "1422410"
  },
  {
    "text": "of course once we do this kind of attack the PLC never knows about it and now I'm",
    "start": "1422410",
    "end": "1427690"
  },
  {
    "text": "going to explain how they are work but before we have two variants as",
    "start": "1427690",
    "end": "1434260"
  },
  {
    "text": "implementation of our attack first one is the rootkit variants and another one is a malicious C code which we converted",
    "start": "1434260",
    "end": "1439660"
  },
  {
    "text": "it to the shellcode for a PLC which basically do the same there is a difference between them the difference",
    "start": "1439660",
    "end": "1445780"
  },
  {
    "text": "is that in a rootkit variant we have we need for example root access of course",
    "start": "1445780",
    "end": "1451900"
  },
  {
    "text": "because it's a rootkit right so if you go next yet so as unit you village and",
    "start": "1451900",
    "end": "1457290"
  },
  {
    "text": "you need some knowledge of SOC registers it took us for any new PLC",
    "start": "1457290",
    "end": "1462850"
  },
  {
    "text": "- cause for a week - to get like enough information about SOC registers I don't",
    "start": "1462850",
    "end": "1468639"
  },
  {
    "text": "think a state sponsor detectives need that much time and the next one is the knowledge of mathematics I think I do it",
    "start": "1468639",
    "end": "1476440"
  },
  {
    "text": "thank ya the another one is a knowledge of mapping between our yoking and the logic so this is important but is",
    "start": "1476440",
    "end": "1483250"
  },
  {
    "text": "available in a PLC once you are uploading the the logic to the PLC basically the logic describe all of",
    "start": "1483250",
    "end": "1488950"
  },
  {
    "text": "these things the mapping between are your pins and the logic so it is available there for anybody to read the",
    "start": "1488950",
    "end": "1495820"
  },
  {
    "text": "second variant which basically doesn't need from taxes but it's just need to X equal privileges PLC runtime so anything",
    "start": "1495820",
    "end": "1502240"
  },
  {
    "text": "that your PHP runtime is running we need just equal privilege and of course we saw all of them we need to have system",
    "start": "1502240",
    "end": "1508899"
  },
  {
    "text": "level access so we are assuming you're kind of having a control flow attack inside your PLC to get access to it so",
    "start": "1508899",
    "end": "1515320"
  },
  {
    "text": "that's it or let's say you are using a backdoor passwords also we are in control vertex because we like mod",
    "start": "1515320",
    "end": "1521649"
  },
  {
    "text": "second variants but let's look at the first variant press forget that you are",
    "start": "1521649",
    "end": "1527019"
  },
  {
    "text": "a parent so in the first variant we want to precisely manipulate the re operation",
    "start": "1527019",
    "end": "1533950"
  },
  {
    "text": "okay so we are going to use something called processor debug registers it is",
    "start": "1533950",
    "end": "1540070"
  },
  {
    "text": "not something it was out there I think since 2006 or 7 first time was a frack",
    "start": "1540070",
    "end": "1547149"
  },
  {
    "text": "magazine there was an article about it - designing a rootkit based on well mostly for Intel our structure but well we we",
    "start": "1547149",
    "end": "1554799"
  },
  {
    "text": "used processor debug using our route sheets in ARM architecture to do there our attack well what are it well",
    "start": "1554799",
    "end": "1563320"
  },
  {
    "text": "basically normally what you have in function hooking which magic describe",
    "start": "1563320",
    "end": "1569080"
  },
  {
    "text": "you are like intercepting a function call and once you might change the arguments of the function to do",
    "start": "1569080",
    "end": "1575379"
  },
  {
    "text": "something you want or like divert the code execution flow and do something else instead of the original operation",
    "start": "1575379",
    "end": "1582480"
  },
  {
    "text": "what we do is we are not doing functionally what we do we intercept in",
    "start": "1582480",
    "end": "1587980"
  },
  {
    "text": "our rootkit variants we intercept access to i/o physical or visual memory so you",
    "start": "1587980",
    "end": "1593919"
  },
  {
    "text": "remember we mapped i/o address well we put those addresses into the debugger Charlotte go to the next page oops",
    "start": "1593919",
    "end": "1601799"
  },
  {
    "text": "yeah so we believe that we come back by combining a pin configuration problem",
    "start": "1601799",
    "end": "1607120"
  },
  {
    "text": "which you don't have any feedback and the processor debug user we actually can do that like how well we put the",
    "start": "1607120",
    "end": "1614230"
  },
  {
    "text": "argument again we show all your memory address which you are going to write the values and get later it's get written to",
    "start": "1614230",
    "end": "1621100"
  },
  {
    "text": "the physical memory we are putting those addresses into the debug register and then once the PLC wants to do something",
    "start": "1621100",
    "end": "1627129"
  },
  {
    "text": "we manipulate the configuration of the pink or multiplexing of the things so here's the example how it works let's",
    "start": "1627129",
    "end": "1634149"
  },
  {
    "text": "say you are going to write turn on and off LED controlled by a PLC every 5",
    "start": "1634149",
    "end": "1641139"
  },
  {
    "text": "seconds I want at the attacker to change it to work every 10 seconds like turn on",
    "start": "1641139",
    "end": "1647529"
  },
  {
    "text": "and off a LED so what I do and of course I want to be a still so I don't want you",
    "start": "1647529",
    "end": "1652779"
  },
  {
    "text": "know for example let's say it's not LED this is a gate you're opening and closing so it's like I want you don't",
    "start": "1652779",
    "end": "1659619"
  },
  {
    "text": "know later that I didn't close and open the gate - so what I do for right so I have to both do manipulation up right",
    "start": "1659619",
    "end": "1666070"
  },
  {
    "text": "and read operation so what I do is here for example I put the i/o visual memory address into the debug visitor and it",
    "start": "1666070",
    "end": "1673600"
  },
  {
    "text": "let it be there the PLC is start to execute a logic it intercept it noticed",
    "start": "1673600",
    "end": "1679450"
  },
  {
    "text": "so next step is that the PS is going to write the i/o we intercept the write operation but we don't change anything",
    "start": "1679450",
    "end": "1686769"
  },
  {
    "text": "there what we do change is that we change the state of a team which is output screen because you are writing Q",
    "start": "1686769",
    "end": "1692559"
  },
  {
    "text": "to an input speed so we changed the state we switched it to input speed and then we'll let the execution continue",
    "start": "1692559",
    "end": "1699580"
  },
  {
    "text": "what will happen is that the plc going to write to the visual memory but this pin which is plc is going to write is",
    "start": "1699580",
    "end": "1705970"
  },
  {
    "text": "not anymore output speed because we change the state from outputs to inputs doesn't work so one of your write",
    "start": "1705970",
    "end": "1714129"
  },
  {
    "text": "operations doesn't work next time we can just change it to back to the input pin to the output pin and it's working",
    "start": "1714129",
    "end": "1719710"
  },
  {
    "text": "perfectly it's fine so it's like we are basically changing the larger process to something else for",
    "start": "1719710",
    "end": "1724899"
  },
  {
    "text": "read manipulation it's a little bit harder because we've allocation actually happening lots of nuts",
    "start": "1724899",
    "end": "1729940"
  },
  {
    "text": "more often compared to the readwrite manipulation so what we do is again we put the the the are you register related",
    "start": "1729940",
    "end": "1736990"
  },
  {
    "text": "to read back reading values to the debug register and then we let the PLC read",
    "start": "1736990",
    "end": "1742480"
  },
  {
    "text": "the values from the oil once we notice that the PLC is going to read the values we change the state of the input spin",
    "start": "1742480",
    "end": "1748990"
  },
  {
    "text": "which you are reading because you are always reading from input P we change a set of an input pin to the output stream",
    "start": "1748990",
    "end": "1754629"
  },
  {
    "text": "and we write the value we want to write so we can write whatever if you are reading a temperature from analog data",
    "start": "1754629",
    "end": "1760870"
  },
  {
    "text": "we can just change the values that write something else in a visual memory and the read continues but I drew the",
    "start": "1760870",
    "end": "1768009"
  },
  {
    "text": "already so well we will have some demo",
    "start": "1768009",
    "end": "1774730"
  },
  {
    "text": "actually three right now will have four totally but three of them now and for",
    "start": "1774730",
    "end": "1780250"
  },
  {
    "text": "that you have to explain what logic they are so simple logic we had again every",
    "start": "1780250",
    "end": "1786039"
  },
  {
    "text": "five second we want to LED blink okay if this is an example we have in a tree the",
    "start": "1786039",
    "end": "1791710"
  },
  {
    "text": "depressed two demos we have so we want the LED blink every five seconds and and",
    "start": "1791710",
    "end": "1798610"
  },
  {
    "text": "that's it's Abdellah T blinking and we",
    "start": "1798610",
    "end": "1803950"
  },
  {
    "text": "have a real attack against a real PLC and for this one we have a LED which",
    "start": "1803950",
    "end": "1809169"
  },
  {
    "text": "blinking every two seconds and we want to change to for example not blinking",
    "start": "1809169",
    "end": "1815259"
  },
  {
    "text": "every time it once we want it links every time v wants okay and that's the",
    "start": "1815259",
    "end": "1821710"
  },
  {
    "text": "example of it so this was the first test that we had for a like for the first",
    "start": "1821710",
    "end": "1827440"
  },
  {
    "text": "video which will show it to you and this is the second video we covered the name",
    "start": "1827440",
    "end": "1832600"
  },
  {
    "text": "of the company and that one is not the company name was just power source",
    "start": "1832600",
    "end": "1840268"
  },
  {
    "text": "stop working no you have to push it to the other vid so sorry I need to move eternal yet",
    "start": "1850700",
    "end": "1859200"
  },
  {
    "text": "screen and risk uh-huh",
    "start": "1859200",
    "end": "1864500"
  },
  {
    "text": "so let's go back with it so so in this",
    "start": "1864500",
    "end": "1871980"
  },
  {
    "text": "example so we have a LEDs turning on and up early every five seconds each time we",
    "start": "1871980",
    "end": "1877410"
  },
  {
    "text": "are going to do kind of a dot attack so we don't let the PLC control it but we show you that we are intercepting every",
    "start": "1877410",
    "end": "1884610"
  },
  {
    "text": "time PLC run time want to turn on an OP LED so every five second led is going to",
    "start": "1884610",
    "end": "1890430"
  },
  {
    "text": "turn on and off so if the value is true here daily so right now LEDs on and wait yeah PLC",
    "start": "1890430",
    "end": "1902460"
  },
  {
    "text": "run time here the value is true which means the LED is on if the value is",
    "start": "1902460",
    "end": "1908550"
  },
  {
    "text": "false it means the LED is off okay so that's the basic thing so you have just led turning on and off every five seconds so",
    "start": "1908550",
    "end": "1916680"
  },
  {
    "text": "then we are going to actually run our routine it is moving forward I think we",
    "start": "1916680",
    "end": "1929970"
  },
  {
    "text": "are just having loaded we're just extending all over so not important right here now so as you can see it's",
    "start": "1929970",
    "end": "1937080"
  },
  {
    "text": "still led standing on an upper five second everything is fine but now we are going to take control of it we don't let",
    "start": "1937080",
    "end": "1943800"
  },
  {
    "text": "the LED any more blinking but the PLC runtime doesn't know that why because we",
    "start": "1943800",
    "end": "1949200"
  },
  {
    "text": "change the configuration of the P so 21 yeah and so now the operation the",
    "start": "1949200",
    "end": "1961650"
  },
  {
    "text": "physical process actually are not the LED as you can see is not blinking anymore right but we show you we just",
    "start": "1961650",
    "end": "1968070"
  },
  {
    "text": "intentionally made a lot locks in the kernel like to show you that actually we",
    "start": "1968070",
    "end": "1973740"
  },
  {
    "text": "are intercepting every time PHC runtime is writing so are you",
    "start": "1973740",
    "end": "1979250"
  },
  {
    "text": "so you can see here but we are we are not letting the PC because we basically a intercept every call operation but we",
    "start": "1983749",
    "end": "1993659"
  },
  {
    "text": "don't let the right operation actually happen for accident accessing the PLC we",
    "start": "1993659",
    "end": "2001489"
  },
  {
    "text": "change the functionality of the PLC in output pin to an input pin yeah and",
    "start": "2001489",
    "end": "2007219"
  },
  {
    "text": "there is a personís line every time but yeah so yeah as you can see in the",
    "start": "2007219",
    "end": "2016129"
  },
  {
    "text": "physical process the PLC runtime here saying the value is false or wait for it wait true but actually it",
    "start": "2016129",
    "end": "2023690"
  },
  {
    "text": "is not true the LED is not on and off every five seconds what we see is that the LED is turning on and off every five",
    "start": "2023690",
    "end": "2030440"
  },
  {
    "text": "second but it's not so this one was just",
    "start": "2030440",
    "end": "2035929"
  },
  {
    "text": "a kind of a dot effect so we then let the process continues but what about we want to change the actual process so",
    "start": "2035929",
    "end": "2042049"
  },
  {
    "text": "let's say right now we were doing every five seconds the logic but this time we want to change the logic to to work",
    "start": "2042049",
    "end": "2047959"
  },
  {
    "text": "every to change every instead of every five second to bring every one second so here the PLT run time here in the output",
    "start": "2047959",
    "end": "2054769"
  },
  {
    "text": "is false then get true it means LEDs on true LEDs on so it's blink every five",
    "start": "2054769",
    "end": "2061608"
  },
  {
    "text": "second and then we load our basically route sheet design we are actually manipulating the process we manipulating",
    "start": "2061609",
    "end": "2068059"
  },
  {
    "text": "in the way we want okay so now it is blinking every two second but what you",
    "start": "2068059",
    "end": "2073460"
  },
  {
    "text": "see here is true for five seconds and false for five seconds so the PLC oops",
    "start": "2073460",
    "end": "2079608"
  },
  {
    "text": "can you go just go back some seconds yes so again you see it play so see that",
    "start": "2079609",
    "end": "2090858"
  },
  {
    "text": "again it's blinking but actually the compare the software is seeing that",
    "start": "2090859",
    "end": "2095960"
  },
  {
    "text": "everything is fine PLC is running every five second LED on and off but actually in physical world it is not the case",
    "start": "2095960",
    "end": "2102410"
  },
  {
    "text": "right so later there were some comments I think in some conferences and we",
    "start": "2102410",
    "end": "2107630"
  },
  {
    "text": "decided to actually have a demo a real PhD as well it just just quickly like last week and we covered the name",
    "start": "2107630",
    "end": "2114680"
  },
  {
    "text": "of the render thank you and yeah and",
    "start": "2114680",
    "end": "2120380"
  },
  {
    "text": "thank you my student my master student who is now working on his thesis for defense against this kind of attack he",
    "start": "2120380",
    "end": "2127010"
  },
  {
    "text": "just actually asked me to make this video for us in Dedes so again this time",
    "start": "2127010",
    "end": "2132319"
  },
  {
    "text": "we are turning on and off LED every every two seconds here our attack here is a little bit slower",
    "start": "2132319",
    "end": "2138349"
  },
  {
    "text": "so it take time until it's kicking but we see that it's a true LEDs on false",
    "start": "2138349",
    "end": "2143510"
  },
  {
    "text": "LEDs off right so that's very simple and then we basically load our attack tanks",
    "start": "2143510",
    "end": "2148730"
  },
  {
    "text": "and ready for making if you watch this later so now we decide the LED to stop",
    "start": "2148730",
    "end": "2158329"
  },
  {
    "text": "and not working anymore and so just you just saw it very fast filling but then",
    "start": "2158329",
    "end": "2164510"
  },
  {
    "text": "we take control of it so LED is now true but it's not true then we decide to turn",
    "start": "2164510",
    "end": "2170000"
  },
  {
    "text": "on LED because we decided it so let's say LEDs start again but actually right",
    "start": "2170000",
    "end": "2175430"
  },
  {
    "text": "now it doesn't work so we say any blink an LED is blinking now so but in the",
    "start": "2175430",
    "end": "2180470"
  },
  {
    "text": "control software there well the PLC runtime assuming the defib the control",
    "start": "2180470",
    "end": "2186290"
  },
  {
    "text": "software and the PC entire assuming everything is fine you don't touch anything and we don't touch the logic there so again we say LED a stop tell",
    "start": "2186290",
    "end": "2194299"
  },
  {
    "text": "you stop but you see here that the the LED for example is true but it's not because LEDs not on so that's the",
    "start": "2194299",
    "end": "2201500"
  },
  {
    "text": "problem so you see completely different things with what's happening in the software but what's happening is in the",
    "start": "2201500",
    "end": "2207079"
  },
  {
    "text": "physical world so basically again that memory illusion reflect itself so you see something else in a physical world",
    "start": "2207079",
    "end": "2213230"
  },
  {
    "text": "but the operator sees something else in the engine he saw so we again we decide",
    "start": "2213230",
    "end": "2218420"
  },
  {
    "text": "so you read it several times to just show that we decide when the PLC runtime to have to turn on and off the LED any",
    "start": "2218420",
    "end": "2227359"
  },
  {
    "text": "close it I think we can one will have another them close this one",
    "start": "2227359",
    "end": "2240270"
  },
  {
    "text": "you",
    "start": "2240270",
    "end": "2242330"
  },
  {
    "text": "so you had three demos so magic you want to add some yep so before starting",
    "start": "2251470",
    "end": "2258060"
  },
  {
    "text": "attacking the actually the PLC we start",
    "start": "2258060",
    "end": "2264100"
  },
  {
    "text": "by uh by analyzing the the PLC one time as you may know the the PLC binaries are",
    "start": "2264100",
    "end": "2269650"
  },
  {
    "text": "not very well protected but in one of the case we will be working on on you",
    "start": "2269650",
    "end": "2276550"
  },
  {
    "text": "know a binary which was based which had you know basic protections against aesthetic analysis and dynamic analysis",
    "start": "2276550",
    "end": "2283390"
  },
  {
    "text": "for example in this case which was quite surprising in this case the binary is simply packed as you can see neither pro",
    "start": "2283390",
    "end": "2290040"
  },
  {
    "text": "the about nineteen ninety four percent of the binary is data and just few",
    "start": "2290040",
    "end": "2295420"
  },
  {
    "text": "functions that unpacking the code into memory and doing the final jump the same binary from the same vendor was",
    "start": "2295420",
    "end": "2301210"
  },
  {
    "text": "protected against some anti debug links as well which was the parent process attacking to attaching to his child",
    "start": "2301210",
    "end": "2307900"
  },
  {
    "text": "process so this way the child process was in the bug bound and it's not allow",
    "start": "2307900",
    "end": "2313260"
  },
  {
    "text": "another debugger to attach to do you know the dynamic paralyzes but because",
    "start": "2313260",
    "end": "2319630"
  },
  {
    "text": "we knew what we were looking for we didn't try to bypass those those those",
    "start": "2319630",
    "end": "2324640"
  },
  {
    "text": "protections there were no protections and very well documented on the Internet what we did we use s Trace that the",
    "start": "2324640",
    "end": "2331210"
  },
  {
    "text": "tricky part is using x-rays on some PLC's is that because we have some limited amount of resources on on the",
    "start": "2331210",
    "end": "2337360"
  },
  {
    "text": "PLC's and the s race is generating huge amounts of output and you know it simply",
    "start": "2337360",
    "end": "2343780"
  },
  {
    "text": "crashed the PLC so what we did we used an a slightly modified version of s",
    "start": "2343780",
    "end": "2348880"
  },
  {
    "text": "raised together just that kind of information that we are interested for in in over analysis so as Ali has",
    "start": "2348880",
    "end": "2356710"
  },
  {
    "text": "already explained we are using the bar register in our attack this thing has",
    "start": "2356710",
    "end": "2361780"
  },
  {
    "text": "been introduced in a frac magazine by a good friend of mine half dead it's a good good paper if you're interested",
    "start": "2361780",
    "end": "2368170"
  },
  {
    "text": "interested on this topic so if you remember the two protection that we have already discussed about the do",
    "start": "2368170",
    "end": "2374830"
  },
  {
    "text": "programmer which was a data protection attack against data hooking and otoscope EGR which was a defensive solution",
    "start": "2374830",
    "end": "2382630"
  },
  {
    "text": "against the cultural King so simply just but just by using the bar resistors",
    "start": "2382630",
    "end": "2389130"
  },
  {
    "text": "because we are not modifying any codes into memory we can simply evade otoscope",
    "start": "2389130",
    "end": "2394330"
  },
  {
    "text": "EGR and because we are loading over our module of a kernel module or the",
    "start": "2394330",
    "end": "2400090"
  },
  {
    "text": "non-rigid variants you know dynamically into memory the otoscope ej the duple gangers are actually evaded as well so",
    "start": "2400090",
    "end": "2407170"
  },
  {
    "text": "as you've seen in the demos we are not doing any further modification and not",
    "start": "2407170",
    "end": "2413140"
  },
  {
    "text": "any lot logic modification yeah okay so we actually analyze our routine",
    "start": "2413140",
    "end": "2419980"
  },
  {
    "text": "at the performance wise because we wanted to folder to extra work so here",
    "start": "2419980",
    "end": "2425800"
  },
  {
    "text": "is a bio fluctuation after i/o so this is not any more simple process which we",
    "start": "2425800",
    "end": "2431080"
  },
  {
    "text": "were manipulating every parts again Singh so we put the fastest possible changes so normally our peers our gates",
    "start": "2431080",
    "end": "2437530"
  },
  {
    "text": "you could like change every four minutes second that was the maximal speed what we put it for example in the logic that",
    "start": "2437530",
    "end": "2443710"
  },
  {
    "text": "every three minutes I can't change it so the blue lines are the the one the",
    "start": "2443710",
    "end": "2449200"
  },
  {
    "text": "normal are you manipulation are you working and this one is like basically the PLC which gets manipulate audio you",
    "start": "2449200",
    "end": "2455920"
  },
  {
    "text": "can see fluctuations almost even less than actual PHP runtime IO so it's like",
    "start": "2455920",
    "end": "2462370"
  },
  {
    "text": "it kind of shoe it like you can actually compute it with the noises in the audio and that's that but there was some bad",
    "start": "2462370",
    "end": "2470410"
  },
  {
    "text": "things there was if there are some shorter first of all for right manipulation what we are doing so",
    "start": "2470410",
    "end": "2475750"
  },
  {
    "text": "basically you are turning on and off the motor or opening closing your gate well that's not the problem because we had",
    "start": "2475750",
    "end": "2481600"
  },
  {
    "text": "like nearly 5 percent overhead but the problem was with read manipulation because if you are changing a process",
    "start": "2481600",
    "end": "2489580"
  },
  {
    "text": "for example you have a boiler and you're turning closing and opening a gate in a boiler what you want to do is that you",
    "start": "2489580",
    "end": "2495940"
  },
  {
    "text": "don't want that later operators see about temperature in the boiler going higher so you have to do read",
    "start": "2495940",
    "end": "2501490"
  },
  {
    "text": "manipulation as well so for that we had a problem the problem was that we had twenty first twenty three percent CP",
    "start": "2501490",
    "end": "2508420"
  },
  {
    "text": "overhead and that was too much for us so what we did was that we think of course",
    "start": "2508420",
    "end": "2517330"
  },
  {
    "text": "it rootkits actually we consider real-time features of the TLC one time so kind of",
    "start": "2517330",
    "end": "2523510"
  },
  {
    "text": "real-time with it but anyway so what we did we made a second variant of our",
    "start": "2523510",
    "end": "2530860"
  },
  {
    "text": "attack so we didn't need to have root sheet because there are some good companies around here that they are",
    "start": "2530860",
    "end": "2536560"
  },
  {
    "text": "verifying the the driver in the kernel there are some companies or doing that not all of them and so what we did is",
    "start": "2536560",
    "end": "2544240"
  },
  {
    "text": "said hey the PLC runtime itself is not in right usually is not in the kernel",
    "start": "2544240",
    "end": "2549280"
  },
  {
    "text": "but it's actually doing the same thing as we do so why not we can just use the same way as the PLC runtime you to",
    "start": "2549280",
    "end": "2556390"
  },
  {
    "text": "manipulate the process so we did intellectually the performance over is actually below one person's we can",
    "start": "2556390",
    "end": "2563110"
  },
  {
    "text": "actually use already mapped RSS by the PLC on time or we can actually remap or",
    "start": "2563110",
    "end": "2569560"
  },
  {
    "text": "ourselves the are your memory and actually we can run it as a shell code",
    "start": "2569560",
    "end": "2574630"
  },
  {
    "text": "so you can use any kind of legitimate request for are you device drivers see the first mmm so second variants what we",
    "start": "2574630",
    "end": "2583300"
  },
  {
    "text": "did well for it my pleasure is very simple you just what you do is that you",
    "start": "2583300",
    "end": "2588460"
  },
  {
    "text": "just simply constantly write the values you want to the input screen so it's just you just change the state just",
    "start": "2588460",
    "end": "2595180"
  },
  {
    "text": "write whatever you want appears on time always read the values you want mostly most and for right manipulation it's a",
    "start": "2595180",
    "end": "2602230"
  },
  {
    "text": "little bit more tricky because we didn't want to constantly write whatever we want we wanted to be very more accurate",
    "start": "2602230",
    "end": "2608200"
  },
  {
    "text": "like the same way as the route it was so what we did we had to find something we call it reference starting time so what",
    "start": "2608200",
    "end": "2615460"
  },
  {
    "text": "is reference is starting time well you know do you remember the example we had like every fax I can turn on an",
    "start": "2615460",
    "end": "2621070"
  },
  {
    "text": "opportunity so it's like you don't know exactly which from which relative time you are starting writing to the i/o so",
    "start": "2621070",
    "end": "2628510"
  },
  {
    "text": "you have to know exactly from let's say our word we can say at 12:30 and 26",
    "start": "2628510",
    "end": "2636430"
  },
  {
    "text": "second the first five seconds starts and the next five second will be at 31 like",
    "start": "2636430",
    "end": "2642580"
  },
  {
    "text": "like 12 31 for example so you have to know this is starting time so once you notice the starting time which you can",
    "start": "2642580",
    "end": "2648640"
  },
  {
    "text": "just read from the i/o and then what you do is that right for the references starting time arrives",
    "start": "2648640",
    "end": "2654130"
  },
  {
    "text": "what you do is that you set the input pin to the input the plz runtime read it and then you write the value in pods so",
    "start": "2654130",
    "end": "2661329"
  },
  {
    "text": "you just set the pin to the output and write to it and that's it so so far what",
    "start": "2661329",
    "end": "2666700"
  },
  {
    "text": "we did actually all up it was what you thought control so do to allow your manipulation what about analog data well",
    "start": "2666700",
    "end": "2672730"
  },
  {
    "text": "for analog data if you just want to especially if it's you know like input",
    "start": "2672730",
    "end": "2677819"
  },
  {
    "text": "stuff for example temperature sensor well he's very easy you can just just",
    "start": "2677819",
    "end": "2683589"
  },
  {
    "text": "again just write to the physical or in memory using a debugger Easter or something else is that a technique which",
    "start": "2683589",
    "end": "2690220"
  },
  {
    "text": "we are calling a PC plus one which we're not letting the PLC run time right to the i/o but another way actually to do",
    "start": "2690220",
    "end": "2699759"
  },
  {
    "text": "the analog manipulation is pin multiplexing we didn't talk about it right because most of the thing with it",
    "start": "2699759",
    "end": "2705099"
  },
  {
    "text": "was just about changing the inputs outputs also to input but what about we pin multiplexing attack so we actually",
    "start": "2705099",
    "end": "2712180"
  },
  {
    "text": "need a pin multiplexing attack we have a motor which is controlled by PWM like IO",
    "start": "2712180",
    "end": "2717309"
  },
  {
    "text": "interface and what we do is that we multiplex the pin which is being used for PWM and use it for other",
    "start": "2717309",
    "end": "2724569"
  },
  {
    "text": "functionality we basically stop the motor from working but the PLC on time I assume here is working yeah so this is",
    "start": "2724569",
    "end": "2733480"
  },
  {
    "text": "an example of actually you can write the value so basically analog data is basically multiple digital values and",
    "start": "2733480",
    "end": "2742740"
  },
  {
    "text": "demo for you have to just move the video",
    "start": "2742740",
    "end": "2747809"
  },
  {
    "text": "so you have to stop the video ok yeah",
    "start": "2750779",
    "end": "2757019"
  },
  {
    "text": "so so here you have a motor which is rotating like moving forward and",
    "start": "2757590",
    "end": "2765810"
  },
  {
    "text": "backward this is the value you see it's moving forward and then it goes back down and like moving backward so this is",
    "start": "2765810",
    "end": "2772320"
  },
  {
    "text": "the value PLC C and then what we do is that we are multiplexing the pin which is used for PWM positive motivation",
    "start": "2772320",
    "end": "2779130"
  },
  {
    "text": "control and do the attack a steel motor is rotating but once we load our like",
    "start": "2779130",
    "end": "2785550"
  },
  {
    "text": "attack it's not going to work anymore because we multiplex the p10 like race",
    "start": "2785550",
    "end": "2792000"
  },
  {
    "text": "wait for it yeah so now the motor I stopped working but what you see in the software is that",
    "start": "2792000",
    "end": "2798120"
  },
  {
    "text": "everything is fine motor is still rotating forward and backward but it's not happening in physical work because",
    "start": "2798120",
    "end": "2804060"
  },
  {
    "text": "motor it stops because the multiplex the p-problem channel doesn't know that if it multiplexity physically disconnected",
    "start": "2804060",
    "end": "2811530"
  },
  {
    "text": "the PWM controller but the philsie doesn't know about you don't have physical connection to it this is crazy",
    "start": "2811530",
    "end": "2819380"
  },
  {
    "text": "you can actually see here can I have",
    "start": "2819500",
    "end": "2827930"
  },
  {
    "text": "okay so what about other future possibilities pressure park one thing",
    "start": "2830420",
    "end": "2837570"
  },
  {
    "text": "you can do is actually originally exploit but there are some other kind of registers in or like functionalities in",
    "start": "2837570",
    "end": "2844230"
  },
  {
    "text": "the i/o for example pull-up and pulldown resistor electrical engineers know it very well in the audio interfaces and",
    "start": "2844230",
    "end": "2850560"
  },
  {
    "text": "maybe we don't know but maybe you can actually disable the the pull-up come",
    "start": "2850560",
    "end": "2855720"
  },
  {
    "text": "down well actually you can disable and enable them but maybe you can remotely manipulate audio interfaces your",
    "start": "2855720",
    "end": "2861900"
  },
  {
    "text": "powerful electromagnetic field so you don't need to have actually any code inside the PLC but remotely we are",
    "start": "2861900",
    "end": "2867870"
  },
  {
    "text": "electromagnet will change the audio values next so the discussion what we",
    "start": "2867870",
    "end": "2876060"
  },
  {
    "text": "believe again is that for now attackers basically can do for simpler techniques they can manipulate the logic they can",
    "start": "2876060",
    "end": "2884100"
  },
  {
    "text": "modify a PLC runtime executable but fixing this kind of attack because they are trivial attack fixing them all also",
    "start": "2884100",
    "end": "2891180"
  },
  {
    "text": "three for vendors of course summoners are doing that and they are even taking further step to fixing these problems",
    "start": "2891180",
    "end": "2897540"
  },
  {
    "text": "you can actually it is not hard to have a proper authentication it's not like to",
    "start": "2897540",
    "end": "2902819"
  },
  {
    "text": "having like a proper logic checksum or having a proper PLC one time you take it",
    "start": "2902819",
    "end": "2908760"
  },
  {
    "text": "to verification but once you have these things in place then we believe that the next step for attackers is like what we",
    "start": "2908760",
    "end": "2915420"
  },
  {
    "text": "did pin control attack is like one of the examples of it so you don't have to do the function hooking which there are",
    "start": "2915420",
    "end": "2921180"
  },
  {
    "text": "some active defenses for it and so yeah so this is the next step for attackers oops okay so so what we believe is that",
    "start": "2921180",
    "end": "2931020"
  },
  {
    "text": "we need actually more focus on system level security of control devices in future because in future you will have",
    "start": "2931020",
    "end": "2937799"
  },
  {
    "text": "more sophisticated techniques for example one of the end translation get",
    "start": "2937799",
    "end": "2942809"
  },
  {
    "text": "into the to the PLC was getting system level access so once you fix the problem of authentication the next problem is",
    "start": "2942809",
    "end": "2948960"
  },
  {
    "text": "having for example buffer overflow attacks in a PLC we need something like control flow integrity in the PLC's as",
    "start": "2948960",
    "end": "2955349"
  },
  {
    "text": "well too you know it's not just in an Intel board that you have such things but you need more advanced defensive",
    "start": "2955349",
    "end": "2961440"
  },
  {
    "text": "techniques there to wealth in control attack is again we believe that is because it's caused by lack of",
    "start": "2961440",
    "end": "2966869"
  },
  {
    "text": "interrupts for IO configuration and IO multiplexing registers and it can have significant consequences and in any it",
    "start": "2966869",
    "end": "2973920"
  },
  {
    "text": "can work basically in any embedded system but any abilities on which mostly use its are you as a important tool so",
    "start": "2973920",
    "end": "2979619"
  },
  {
    "text": "it can be a PLC it can be ie D it can be even a car issues we are studying at one",
    "start": "2979619",
    "end": "2985140"
  },
  {
    "text": "so yeah so you can actually use it for every other thing Matt if you have a solution for us what we're proposing a",
    "start": "2985140",
    "end": "2992099"
  },
  {
    "text": "solution for over attack it would be easier to to changing the default passwords and putting in place some",
    "start": "2992099",
    "end": "2998309"
  },
  {
    "text": "through those tubular defenses but you for now we can propose a slower",
    "start": "2998309",
    "end": "3005200"
  },
  {
    "text": "Rooskies variant which can be monitoring the pin configuration in kernel mode and the protection for our node non-risk",
    "start": "3005200",
    "end": "3012230"
  },
  {
    "text": "each variant simply by doing I of separation and not for not allowing the",
    "start": "3012230",
    "end": "3017619"
  },
  {
    "text": "unprivileged process process to doing re operations directly we can actually",
    "start": "3017619",
    "end": "3023630"
  },
  {
    "text": "mitigate we can actually reduce our attack okay",
    "start": "3023630",
    "end": "3029390"
  },
  {
    "text": "so thank you for presenting at our presentation sorry for those switches between the slides it would be easier",
    "start": "3029390",
    "end": "3035119"
  },
  {
    "text": "with reduce control anyway yeah everything that has a beginning has an end so is there any question so we don't",
    "start": "3035119",
    "end": "3045769"
  },
  {
    "text": "have a question fine okay ran out of the time so oh maybe we can talk later sorry thank you",
    "start": "3045769",
    "end": "3053979"
  },
  {
    "text": "[Applause]",
    "start": "3054200",
    "end": "3058420"
  }
]