[
  {
    "start": "0",
    "end": "34000"
  },
  {
    "text": "we're here for android one route to to own them all jeff barstow thank you hello so as i said i'm jeff",
    "start": "80",
    "end": "7040"
  },
  {
    "text": "forstall i'm cto of blue box uh blue box is a mobile security company so as it stands it probably makes it",
    "start": "7040",
    "end": "14000"
  },
  {
    "text": "relevant and why i'm talking about android if i professionally am playing around with uh mobile devices these days",
    "start": "14000",
    "end": "19840"
  },
  {
    "text": "some of you know me from a previous life where i dabbled in web stuff for anyone who understands the reference sorry i'm not wearing a shiny shirt",
    "start": "19840",
    "end": "27439"
  },
  {
    "text": "but for the most part i definitely have a long history i presenting here at black hats and many",
    "start": "27439",
    "end": "32640"
  },
  {
    "text": "other places so feedback survey as was mentioned now",
    "start": "32640",
    "end": "38879"
  },
  {
    "start": "34000",
    "end": "140000"
  },
  {
    "text": "i hope i really don't need to give you a background on what is android because if you don't know by now i mean you're",
    "start": "38879",
    "end": "45920"
  },
  {
    "text": "probably gonna get something out of one of the other talks so feel free to get up and leave if you android's not",
    "start": "45920",
    "end": "51680"
  },
  {
    "text": "known to you but otherwise you know so essentially i'm gonna cover android now actually",
    "start": "51680",
    "end": "57280"
  },
  {
    "text": "it's already been covered um if if you've been kind of keeping tabs on the media for the last few weeks um there was some some media reports",
    "start": "57280",
    "end": "64559"
  },
  {
    "text": "coming out with this android master key vulnerability um that is essentially the vulnerability",
    "start": "64559",
    "end": "69680"
  },
  {
    "text": "that this talk originally targeted now the tricky part of trying to keep zero day under wraps until the point you",
    "start": "69680",
    "end": "76159"
  },
  {
    "text": "get to black hat is that there's a six month lead time between when you know about the zero day",
    "start": "76159",
    "end": "81200"
  },
  {
    "text": "and when the talk happens and you just sit there across your fingers cross your fingers and hope that it doesn't leak in the meantime this one",
    "start": "81200",
    "end": "87280"
  },
  {
    "text": "leaked it's been out for about the last three weeks it has been using the title master key",
    "start": "87280",
    "end": "93759"
  },
  {
    "text": "but realistically there's more than one and so today i'm actually going to cover a couple of them",
    "start": "93759",
    "end": "99119"
  },
  {
    "text": "they're all related so essentially the multiple master keys multiple patches i do want to cover them all",
    "start": "99119",
    "end": "104479"
  },
  {
    "text": "so this talk content grew from the one bug i was originally going to cover",
    "start": "104479",
    "end": "109600"
  },
  {
    "text": "to cover about four bugs and all kinds of interesting things that have happened since then in the last few weeks",
    "start": "109600",
    "end": "116079"
  },
  {
    "text": "now for anyone who has actually read some of the technical disclosures the material literally",
    "start": "116079",
    "end": "121600"
  },
  {
    "text": "released in the last two weeks regarding this bugs you may have already read some of the details of how these bugs work and stuff",
    "start": "121600",
    "end": "127040"
  },
  {
    "text": "so to a certain extent the content of my presentation may be slightly redundant but i really hope i'm going to wow you with awesome graphics",
    "start": "127040",
    "end": "133440"
  },
  {
    "text": "and illustrations to make up for the fact that the content itself you may have already read",
    "start": "133440",
    "end": "140000"
  },
  {
    "start": "140000",
    "end": "226000"
  },
  {
    "text": "so the first thing i'm always asked is how did all of this come to be how did we find this bug which is kind",
    "start": "140879",
    "end": "147680"
  },
  {
    "text": "of you know an interesting story so ultimately you know i was sitting around with my android team and you know we kind of",
    "start": "147680",
    "end": "153120"
  },
  {
    "text": "posed a self challenge of let's take a third party application go ahead and tweak the code in it",
    "start": "153120",
    "end": "158480"
  },
  {
    "text": "specifically like the gps we want to play around the gps api and return fake gps coordinates have the app think",
    "start": "158480",
    "end": "164480"
  },
  {
    "text": "we're in antarctica or something so that's all we want to set around to do so we grabbed you know the disassembler reassembler these are",
    "start": "164480",
    "end": "170640"
  },
  {
    "text": "standard tools of the android ecosystem you can go look them up they're fully documented disassemble the application found where",
    "start": "170640",
    "end": "176000"
  },
  {
    "text": "it's using the api made the changes we need reassembled it back up signed it and ran it",
    "start": "176000",
    "end": "181200"
  },
  {
    "text": "it ran good it got the right gps data that we wanted but google maps the maps weren't showing up",
    "start": "181200",
    "end": "187360"
  },
  {
    "text": "and of course we're like you know what the hell is going on where are the maps right you know we need maps so we had to dig in a little bit of reverse",
    "start": "187360",
    "end": "193920"
  },
  {
    "text": "engineering later um the google maps api is licensed that license that that",
    "start": "193920",
    "end": "199280"
  },
  {
    "text": "the app uses to talk to the google maps server is tied to the application signature the",
    "start": "199280",
    "end": "204720"
  },
  {
    "text": "developer of the application who signed it so when we resign the application as part of changing the code",
    "start": "204720",
    "end": "210480"
  },
  {
    "text": "we change the developer signature we don't have a license key under that developer account so it all broke so thus becomes the",
    "start": "210480",
    "end": "217760"
  },
  {
    "text": "challenge of okay if we want google maps to work and do this we got to find a way to change the code without changing the signature and",
    "start": "217760",
    "end": "225519"
  },
  {
    "text": "that's essentially what started off of this whole process to figure out how i can preserve a signature",
    "start": "225519",
    "end": "230640"
  },
  {
    "start": "226000",
    "end": "371000"
  },
  {
    "text": "while still manipulating anything else i want so you know we did some reverse",
    "start": "230640",
    "end": "235680"
  },
  {
    "text": "engineering ultimately we had to figure out essentially from start to finish from application install to the point in time where google maps api is consuming",
    "start": "235680",
    "end": "242319"
  },
  {
    "text": "the signature for this license check how do we get from start to finish right so so applications where do they query",
    "start": "242319",
    "end": "248799"
  },
  {
    "text": "the signatures they get them from the package manager service so of course where does package manager get",
    "start": "248799",
    "end": "254000"
  },
  {
    "text": "them signature that the term signature is actually a misnomer in android space what is the signatures",
    "start": "254000",
    "end": "260000"
  },
  {
    "text": "actually the certificate the public certificates of the signer it's not the actual signature hash itself",
    "start": "260000",
    "end": "267680"
  },
  {
    "text": "it's just kind of confusion and naming but ultimately the public certificate used to sign the application",
    "start": "267680",
    "end": "274160"
  },
  {
    "text": "is what essentially is returned by packet manager because it's been stored in the system so of course where do those come from",
    "start": "274160",
    "end": "279440"
  },
  {
    "text": "but when you install an application ultimately it goes through this application verification process and assuming that the verification",
    "start": "279440",
    "end": "285680"
  },
  {
    "text": "process is successful then the certificate used as part of the verification process is basically stored in a database",
    "start": "285680",
    "end": "290800"
  },
  {
    "text": "and that's what's handed out for anyone on the device that asks for that app signature at that point so okay well",
    "start": "290800",
    "end": "296880"
  },
  {
    "text": "through this verification process how does that work so you dig further and ultimately you find um",
    "start": "296880",
    "end": "301919"
  },
  {
    "text": "there's essentially a class called java verifier that goes and cryptographically verify some signature which is actually part of more of the",
    "start": "301919",
    "end": "308240"
  },
  {
    "text": "java jar signing spec right um android just reuses java jar signing",
    "start": "308240",
    "end": "313840"
  },
  {
    "text": "for its own purposes and that's essentially where this uh verification comes from and we learned all of this essentially",
    "start": "313840",
    "end": "319840"
  },
  {
    "text": "by cruising through and using the site androidxref.com which is just a really great index of all the code",
    "start": "319840",
    "end": "325440"
  },
  {
    "text": "online a web format with the web browser you can point and click and search and basically walk through code from start to finish",
    "start": "325440",
    "end": "331440"
  },
  {
    "text": "it was a convenient tool i use it all the time when digging through android code bases",
    "start": "331440",
    "end": "338240"
  },
  {
    "text": "so ultimately when going through the process we really narrowed down exactly where um this verification was happening",
    "start": "338240",
    "end": "344800"
  },
  {
    "text": "and the really relevant components in the java space are the zip file class and the jar verifier class and you know",
    "start": "344800",
    "end": "351120"
  },
  {
    "text": "the tools that actually create these signatures which are consumed by those entities are the jar signer the sign apk",
    "start": "351120",
    "end": "356960"
  },
  {
    "text": "and note that i kind of talk about you know in one slide apk jar and zip essentially they're all the same jars",
    "start": "356960",
    "end": "363360"
  },
  {
    "text": "and apks are essentially zip files that contain very specific entries inside of them but we're really just essentially dealing with",
    "start": "363360",
    "end": "369520"
  },
  {
    "text": "different types of zip files all right well for dealing with zip files it reasons to believe we're going",
    "start": "369520",
    "end": "375440"
  },
  {
    "start": "371000",
    "end": "725000"
  },
  {
    "text": "to have to dig into how zip works so quick overview on the zip file format",
    "start": "375440",
    "end": "380960"
  },
  {
    "text": "so essentially the way uh the zip file is kind of constructed is that the the message bodies or i'm sorry the file",
    "start": "380960",
    "end": "386319"
  },
  {
    "text": "bodies are kind of stored as individual local file records um and at the end there's a big massive index called the central directory",
    "start": "386319",
    "end": "392479"
  },
  {
    "text": "and the central directory just has index pointers to those files with tons of metadata about the file",
    "start": "392479",
    "end": "398400"
  },
  {
    "text": "and that metadata includes things like the file name and also includes pointers to where the actual file body contents live",
    "start": "398400",
    "end": "405120"
  },
  {
    "text": "inside the file elsewhere in the file all kinds of other stuff like permissions and creation time and",
    "start": "405120",
    "end": "411039"
  },
  {
    "text": "modification time all this metadata goodness hello someone's drinking and so",
    "start": "411039",
    "end": "417759"
  },
  {
    "text": "essentially what happens when a java file our java application comes along and uses the zip file class zip file",
    "start": "417759",
    "end": "423120"
  },
  {
    "text": "enumerates everything in the central directory loads it into a hash map and basically it's just a bunch of zip",
    "start": "423120",
    "end": "428960"
  },
  {
    "text": "entry objects where all that metadata is preserved and stuff but essentially all the data is copied out of the zip file index the central directory",
    "start": "428960",
    "end": "435440"
  },
  {
    "text": "and move into another structure and a java object structure which kind of tracks all the entries and",
    "start": "435440",
    "end": "442720"
  },
  {
    "text": "all of that still maintains the metadata relationship as far as pointing back to where in the file all this stuff lives",
    "start": "442720",
    "end": "448240"
  },
  {
    "text": "so when some java application comes along and wants to process a zip file it's essentially having zip the zip file",
    "start": "448240",
    "end": "454639"
  },
  {
    "text": "class open the file create that object then the zip fi the application essentially just iterates",
    "start": "454639",
    "end": "460800"
  },
  {
    "text": "over the entries or can directly request a specific entry as needed from that base that linked hash map so",
    "start": "460800",
    "end": "468000"
  },
  {
    "text": "pretty straightforward applications come along this one class reads it parses it creates a big metadata structure blob of all the index",
    "start": "468000",
    "end": "474319"
  },
  {
    "text": "items now applications can enumerate through and start using them so let's swap over to that verification",
    "start": "474319",
    "end": "481280"
  },
  {
    "text": "process now some of this is standard java and some of it starts getting into a little more android specific so",
    "start": "481280",
    "end": "487120"
  },
  {
    "text": "you know essentially how the verification works first round is all the file bodies each",
    "start": "487120",
    "end": "493199"
  },
  {
    "text": "individual file is essentially hashed and then there's a manifest mf file in the meta inf directory",
    "start": "493199",
    "end": "499039"
  },
  {
    "text": "of a java jar or an apk and essentially that contains the hash of all the individual file contents",
    "start": "499039",
    "end": "505360"
  },
  {
    "text": "so if you modify contents and they don't match the hash and the manifest java can detect that there's a",
    "start": "505360",
    "end": "511199"
  },
  {
    "text": "modification there and warn you and you can you know take action whatever that definition means for the implementation",
    "start": "511199",
    "end": "518320"
  },
  {
    "text": "so now when we get into actual signed jars or signed apks another layer is added",
    "start": "518320",
    "end": "524800"
  },
  {
    "text": "there's a signature file the name can vary depending upon what cert alias you use when you actually",
    "start": "524800",
    "end": "529920"
  },
  {
    "text": "sign it so the names will change but dot sf extension will stay the same it's called a signature file",
    "start": "529920",
    "end": "535360"
  },
  {
    "text": "essentially every entry in the signature file is a hash of all of the content for the",
    "start": "535360",
    "end": "540800"
  },
  {
    "text": "same entry in the manifest file so in a way the signature file kind of hashes out the entries in the manifest",
    "start": "540800",
    "end": "546720"
  },
  {
    "text": "file and the manifest file is hashing out the body contents actually in the zip prior now that another layer happens",
    "start": "546720",
    "end": "555440"
  },
  {
    "text": "there's an additional file to pkcs7 object this is a signing object standard pkcs type stuff where there is",
    "start": "555440",
    "end": "563600"
  },
  {
    "text": "a public certificate of who did the signing and then the signature the signature is",
    "start": "563600",
    "end": "568640"
  },
  {
    "text": "assigned hash of the sf file so if you kind of think of it essentially what",
    "start": "568640",
    "end": "574000"
  },
  {
    "text": "happens is there's a chain right the the signed hash in the pks7 object is verifies the contents of the",
    "start": "574000",
    "end": "581279"
  },
  {
    "text": "signature file which proves the signature file is good then everything in the signature file those hashes are checked against the",
    "start": "581279",
    "end": "587120"
  },
  {
    "text": "entries in the manifest file which proves the manifest is good and then everything in the manifest of course you know hashes and checks the",
    "start": "587120",
    "end": "592880"
  },
  {
    "text": "file contents and stuff individually so through this way you can essentially see there's a start to finish chain going from",
    "start": "592880",
    "end": "598240"
  },
  {
    "text": "what is the pkcs signed object with the public certificate that is embedded there all the way back to the",
    "start": "598240",
    "end": "604160"
  },
  {
    "text": "file it's pretty straightforward now it seems like it feels like there's a lot of layers here",
    "start": "604160",
    "end": "609839"
  },
  {
    "text": "but again this is kind of how java jar signing works and so android's just for the most part we're using it",
    "start": "609839",
    "end": "617200"
  },
  {
    "text": "now you can go through and start playing you know this with this verification stuff um essentially you know if you add",
    "start": "617600",
    "end": "622800"
  },
  {
    "text": "an extra file to the zip so that means you know additional index entry and additional file body",
    "start": "622800",
    "end": "628079"
  },
  {
    "text": "when the verification process comes along you get a discrepancy and it's ejected because the manifest and stuff",
    "start": "628079",
    "end": "633920"
  },
  {
    "text": "in the manifest doesn't have a hash for the file that was added and so when you try to install a zip that's been modified this way you kind",
    "start": "633920",
    "end": "640160"
  },
  {
    "text": "of see possibly that error message basically it gets kicked out as no certificates and really if you look in the details of",
    "start": "640160",
    "end": "646720"
  },
  {
    "text": "log cats like the android debug log and it says basically there's an extra file there but it doesn't map up to this",
    "start": "646720",
    "end": "652800"
  },
  {
    "text": "chain of a science certificate so abort the installation so you can't do that trick",
    "start": "652800",
    "end": "658240"
  },
  {
    "text": "you can also try tricks remodifying the manifest without changing the properties of the zip file or out changing",
    "start": "658240",
    "end": "663440"
  },
  {
    "text": "properties of the signature file those will all get detected and rejected uh basically you get an error message",
    "start": "663440",
    "end": "668560"
  },
  {
    "text": "that probably looks something like this which is basically saying an invalid digest right because again all this hash and chain stuff is not correlating it's",
    "start": "668560",
    "end": "675279"
  },
  {
    "text": "detecting a discrepancy so it's aborting the install so you can do the same thing with a signature file",
    "start": "675279",
    "end": "681120"
  },
  {
    "text": "if you make any changes to the signifier itself without the other stuff it will be detected and the installation will get imported",
    "start": "681120",
    "end": "686880"
  },
  {
    "text": "and if you start manipulating the public certificates and the actual signature hash in the pkc",
    "start": "686880",
    "end": "692320"
  },
  {
    "text": "pkcs7 object it'll also get detected and boarded short of actually just completely changing the public certificate and",
    "start": "692320",
    "end": "698640"
  },
  {
    "text": "resigning from scratch but at that point you are no longer using the original search you're not the original developer you just became a",
    "start": "698640",
    "end": "705200"
  },
  {
    "text": "new developer for the same app and that's allowed but it's essentially a new app as far as",
    "start": "705200",
    "end": "711040"
  },
  {
    "text": "android is concerned at that point now i went through and actually manually tried a lot of these tests because it just",
    "start": "711040",
    "end": "716399"
  },
  {
    "text": "seemed like fun what happens if what happens if and try it all these so in the process of trying all this kind of stuff and playing with the java",
    "start": "716399",
    "end": "722560"
  },
  {
    "text": "verifier and what it does detect and what it doesn't detect i found out that i did something and i",
    "start": "722560",
    "end": "727839"
  },
  {
    "start": "725000",
    "end": "850000"
  },
  {
    "text": "got a successful installation and it didn't puke out on me which was kind of surprising",
    "start": "727839",
    "end": "733440"
  },
  {
    "text": "so that situation was i put two copies of the same file into the zip file which is kind of hard",
    "start": "733440",
    "end": "739920"
  },
  {
    "text": "to do with command line tools you have to do a little bit of binary editing it's not hard i'll show you a trick to do it later but essentially and then",
    "start": "739920",
    "end": "746320"
  },
  {
    "text": "this is not malicious this is just two legitimate copies of the same file in this case i use the classes.dex which is the file",
    "start": "746320",
    "end": "753360"
  },
  {
    "text": "where essentially android applications store all of their java dalvik byte code right it's like the main core executable code for the",
    "start": "753360",
    "end": "760320"
  },
  {
    "text": "application all stored in that file two copies i installed it it was successful it accepted it the app",
    "start": "760320",
    "end": "766000"
  },
  {
    "text": "ran no big deal so i'm like hm okay it seems to not care if there's duplicate entries",
    "start": "766000",
    "end": "771519"
  },
  {
    "text": "so i start playing with this so i custom created then an application where i put two classes.dex now rather",
    "start": "771519",
    "end": "778000"
  },
  {
    "text": "than the same ones the first one i put the original code unmodified so that's the green good copy",
    "start": "778000",
    "end": "785360"
  },
  {
    "text": "and then i put my modified maps code because remember i'm still playing with that same application where i wanted maps to work",
    "start": "785360",
    "end": "790639"
  },
  {
    "text": "so i put our modified code as the second entry so they're both called classes decks two entries the first one's the good",
    "start": "790639",
    "end": "796800"
  },
  {
    "text": "code the second one's the bat code so kind of ran it signed it verified it",
    "start": "796800",
    "end": "801839"
  },
  {
    "text": "jar signer seemed to be happy with it but when i actually tried to install it into android it completely puked out and got rejected",
    "start": "801839",
    "end": "808000"
  },
  {
    "text": "so i'm like okay that trick didn't work but on a whim i decided hm okay but it got rejected because it",
    "start": "808000",
    "end": "814160"
  },
  {
    "text": "verified the contents they don't seem to match so let me swap the order let me go ahead and make a zip file that has",
    "start": "814160",
    "end": "819839"
  },
  {
    "text": "the modified bad code in the index first and the legitimate code second in that",
    "start": "819839",
    "end": "826079"
  },
  {
    "text": "linear order and give it a shot so of course i go through the signing and verification process",
    "start": "826079",
    "end": "831519"
  },
  {
    "text": "jar signer is not happy when i go to actually install it into android boom and what does that mean i got my",
    "start": "831519",
    "end": "836880"
  },
  {
    "text": "maps i'm a pretty happy dude at that point but of course i'm like i got my maps we did our little you know",
    "start": "836880",
    "end": "842560"
  },
  {
    "text": "party dance we solved this problem so that's all we wanted to do but then we started thinking all right you know the the",
    "start": "842560",
    "end": "847839"
  },
  {
    "text": "we started settling down it's like wait a minute you know i'm i'm pretty sure we probably just did",
    "start": "847839",
    "end": "853680"
  },
  {
    "start": "850000",
    "end": "1129000"
  },
  {
    "text": "something we're not supposed to do right um and so now it's like all right what what do we got here um",
    "start": "853680",
    "end": "860240"
  },
  {
    "text": "you know we got to go back and now do the postmortem of exactly what the heck just happened um so essentially",
    "start": "860240",
    "end": "866959"
  },
  {
    "text": "you know where did this bug come that's the process of how we came across it and you know to a certain extent it was a combination of white blocks black box",
    "start": "866959",
    "end": "873839"
  },
  {
    "text": "all manual a little bit of trial and error and quite frankly a big pile of luck as well but certainly we're tactically aiming",
    "start": "873839",
    "end": "880000"
  },
  {
    "text": "based on you know code reviews and stuff that we're manually doing too so you know it was an informed kind of debugging session and trial and error",
    "start": "880000",
    "end": "886399"
  },
  {
    "text": "session but really kind of looking back at what was the core problem when i went through this process",
    "start": "886399",
    "end": "892720"
  },
  {
    "text": "the actual root cause of the problem for this bug is the use of a linked hashmap object in javaspace why is that",
    "start": "892720",
    "end": "901199"
  },
  {
    "text": "well let's think kind of going through the concept of how a linked hashmap works when all those entries are loaded essentially in",
    "start": "901199",
    "end": "907440"
  },
  {
    "text": "a linked hashmap has an interesting property where it doesn't allow duplicates and the later one overwrites the former",
    "start": "907440",
    "end": "914480"
  },
  {
    "text": "one so as long as all the entries are individual not duplicated all of them are loaded in everything looks good",
    "start": "914480",
    "end": "919920"
  },
  {
    "text": "and even that first load of the classes.dexter the evil one loads an entry that points to the evil code",
    "start": "919920",
    "end": "925600"
  },
  {
    "text": "but then when the second one is encountered it updates the hashmap with new metadata",
    "start": "925600",
    "end": "931839"
  },
  {
    "text": "for the second entry but it overwrites since the key is the file name and the file name stayed the same",
    "start": "931839",
    "end": "937120"
  },
  {
    "text": "it overwrites the previous one so you can kind of see here illustrated how the hashgraph now contains",
    "start": "937120",
    "end": "943120"
  },
  {
    "text": "for the classes dex the pointer to the good one and we kind of now just lost that pointer to the bad one and so when",
    "start": "943120",
    "end": "949839"
  },
  {
    "text": "jar fairfire comes along it enumerates all those entries it follows those pointers to the file contents verifies the hash bodies it's",
    "start": "949839",
    "end": "956160"
  },
  {
    "text": "happy and it should be right because all the files pointed to are all clean",
    "start": "956160",
    "end": "961680"
  },
  {
    "text": "so the question is where does this evil copy come into play well so we got to go see now now this is",
    "start": "961680",
    "end": "968560"
  },
  {
    "text": "outside the verification process we have to see what happens after the verification process well things are handed off to package",
    "start": "968560",
    "end": "974079"
  },
  {
    "text": "manager who starts doing the package installation process because it's verified as soon as verified's clean",
    "start": "974079",
    "end": "979920"
  },
  {
    "text": "then the whole install process starts so what winds up happening is package manager hands it off to install the",
    "start": "979920",
    "end": "985759"
  },
  {
    "text": "the installation daemon and install the hands it off to a program called desktop which is really the program responsible",
    "start": "985759",
    "end": "992079"
  },
  {
    "text": "for extracting the code and optimizing it and getting it installed onto the system ready for execution",
    "start": "992079",
    "end": "997839"
  },
  {
    "text": "now what's interesting about desktop it's not written in java it's written in c and it winds up having its own zip file",
    "start": "997839",
    "end": "1004800"
  },
  {
    "text": "parsing implementation that's completely separate from the java one it's written in a c c plus c code it's called zip archive",
    "start": "1004800",
    "end": "1011519"
  },
  {
    "text": "and it uses a hash list now the interesting thing about the zip file hash list",
    "start": "1011519",
    "end": "1016880"
  },
  {
    "text": "in the c plus plus code is that it allows duplicate entries and it preserves insertion order which",
    "start": "1016880",
    "end": "1023279"
  },
  {
    "text": "basically means when it goes through and reads all those entries and starts populating that hash",
    "start": "1023279",
    "end": "1028400"
  },
  {
    "text": "list with the metadata it is going to put two entries and they are going to be exactly in the same",
    "start": "1028400",
    "end": "1033600"
  },
  {
    "text": "order as it encountered them out of the central directory and then when dextop comes along and says please give me the classes dext",
    "start": "1033600",
    "end": "1040400"
  },
  {
    "text": "file it's going to go through and it's going to wind up hitting and matching the first one and always returning the first",
    "start": "1040400",
    "end": "1046000"
  },
  {
    "text": "one so unlike the java implementation where the second one overwrote the first one and the verifier",
    "start": "1046000",
    "end": "1052880"
  },
  {
    "text": "used the second entry in this case the actual installation application gets the first one and",
    "start": "1052880",
    "end": "1058160"
  },
  {
    "text": "installs the first entry and then ultimately what winds up in the discrepancy right so it all comes down to a discrepancy of",
    "start": "1058160",
    "end": "1064880"
  },
  {
    "text": "zip file parsing did i use the first one did i use the last one and the differences thereof now there's",
    "start": "1064880",
    "end": "1071360"
  },
  {
    "text": "i just want to point out because it's you know partially relevant there's a different actual component entirely which handles",
    "start": "1071360",
    "end": "1077679"
  },
  {
    "text": "a different file inside the um the android app the android manifest goes through the asset manager it has a",
    "start": "1077679",
    "end": "1084559"
  },
  {
    "text": "different implementation of zip also written in c plus plus its behavior is largely the same as a",
    "start": "1084559",
    "end": "1090000"
  },
  {
    "text": "desktop one same thing preserves an insertion order no duplicates are allows duplicates um so it has the same problem but it's",
    "start": "1090000",
    "end": "1097039"
  },
  {
    "text": "interesting that it's a different component with a third zip implementation that has kind of the same discrepancy",
    "start": "1097039",
    "end": "1102799"
  },
  {
    "text": "and actually sorek's done a great analysis and scrubbed the code base of android he basically found eight separate zip",
    "start": "1102799",
    "end": "1110320"
  },
  {
    "text": "file parsing implementations present in the android code base so if you think about this is a discrepancy of using one for security",
    "start": "1110320",
    "end": "1116400"
  },
  {
    "text": "verification and using one for actual use we've got eight of these things floating around depending on which one you use at",
    "start": "1116400",
    "end": "1122000"
  },
  {
    "text": "what time you may or may not be vulnerable and that's really where all all of this that's the root cause of this whole",
    "start": "1122000",
    "end": "1127600"
  },
  {
    "text": "problem so now that we kind of understand what's going on great i just got myself some",
    "start": "1127600",
    "end": "1134640"
  },
  {
    "start": "1129000",
    "end": "1323000"
  },
  {
    "text": "you know some maps on a foursquare app it seems to me that maybe we can take this a little bit farther",
    "start": "1134640",
    "end": "1139840"
  },
  {
    "text": "you know beyond some third-party little manipulation of some google maps api so let's briefly cover a couple relevant",
    "start": "1139840",
    "end": "1146000"
  },
  {
    "text": "items of the android security model so essentially applications when they're first installed are put into an application",
    "start": "1146000",
    "end": "1152400"
  },
  {
    "text": "sandbox so when fresh app never seen before right android will sign a unix user id so uid",
    "start": "1152400",
    "end": "1158799"
  },
  {
    "text": "standard unix stuff and kind of create a sandbox and that app will forevermore basically be",
    "start": "1158799",
    "end": "1163919"
  },
  {
    "text": "exclusively signed that uid there's some things with some shared uids and stuff which i'll get into in a second",
    "start": "1163919",
    "end": "1169039"
  },
  {
    "text": "but essentially overall it's a container for that app it's a sandbox for that app the only way to get into that sandbox is",
    "start": "1169039",
    "end": "1175679"
  },
  {
    "text": "to be by the same developer and how that's basically proven to an android system is be seen be signed",
    "start": "1175679",
    "end": "1181840"
  },
  {
    "text": "by the same certificate and this is actually how updates work right so if you install for instance gmail",
    "start": "1181840",
    "end": "1187360"
  },
  {
    "text": "it'd be uncool now after gmail is installed and there's email data in the gmail app client if some",
    "start": "1187360",
    "end": "1192880"
  },
  {
    "text": "arbitrary app came along and try to do an update to gmail jumped into sandbox and grabbed all your email right so the only way that google can",
    "start": "1192880",
    "end": "1200240"
  },
  {
    "text": "issue a gmail update is because it's signed with the same certificate as the original gmail installation",
    "start": "1200240",
    "end": "1206159"
  },
  {
    "text": "so the the sandbox is created initially signed by google and now an update to gmail is also",
    "start": "1206159",
    "end": "1211200"
  },
  {
    "text": "signed by google since they're both signed by google the update's allowed to go in the sandbox and change all the code and still access all the same data if it was",
    "start": "1211200",
    "end": "1217679"
  },
  {
    "text": "not signed by google it would either get rejected because it's considered not to be by the same developer and contrary to the security",
    "start": "1217679",
    "end": "1223840"
  },
  {
    "text": "model if you play change the package name all you want you can make it you know gmail x foo and it'll just get installed but it's",
    "start": "1223840",
    "end": "1230000"
  },
  {
    "text": "essentially a separate app at that point but ultimately you kind of see how essentially certificates are the key to",
    "start": "1230000",
    "end": "1235760"
  },
  {
    "text": "getting into sandboxes now the system itself as a whole the",
    "start": "1235760",
    "end": "1241440"
  },
  {
    "text": "android operating system i'm hesitant to call the operating system because i'm not including the kernel here",
    "start": "1241440",
    "end": "1246880"
  },
  {
    "text": "but essentially the android operating system itself has subscribes to the same notion of a",
    "start": "1246880",
    "end": "1252400"
  },
  {
    "text": "sandbox there's a system sandbox which is a misnomer because it's not really a sandbox there's no boundaries this is the sandbox that enforces all",
    "start": "1252400",
    "end": "1259600"
  },
  {
    "text": "the other sandboxes right and essentially any application can actually request",
    "start": "1259600",
    "end": "1264880"
  },
  {
    "text": "access into a sandbox by name right in this case you know android uid system an app can come along and say i want to",
    "start": "1264880",
    "end": "1271120"
  },
  {
    "text": "be a part of the system sandbox i want to be an os extension please and as long as it is signed with",
    "start": "1271120",
    "end": "1277440"
  },
  {
    "text": "the platform certificates now the the person who produced the firmware which is typically a device vendor but",
    "start": "1277440",
    "end": "1282559"
  },
  {
    "text": "if you're using kind of like cyanogenmod or aftermarket firmware updates um it may be someone else but essentially whoever produced the",
    "start": "1282559",
    "end": "1288320"
  },
  {
    "text": "firmware of your device signed all of those base firmware components with the platform certificate",
    "start": "1288320",
    "end": "1294320"
  },
  {
    "text": "normally this would be like samsung htc motorola's key right that's that actually produced the device and so now if samsung hcc or",
    "start": "1294320",
    "end": "1301280"
  },
  {
    "text": "motorola release want to release a system update all they have to do is create an app sign it with the same",
    "start": "1301280",
    "end": "1307840"
  },
  {
    "text": "platform search for that device and request system uid access and that thing essentially gets loaded in and becomes",
    "start": "1307840",
    "end": "1313280"
  },
  {
    "text": "is granted system level access and essentially becomes part of the operating system so it's like the ultimate sandbox it's",
    "start": "1313280",
    "end": "1319200"
  },
  {
    "text": "the ultimate goal in terms of the security model so of course you know i keep talking about",
    "start": "1319200",
    "end": "1325200"
  },
  {
    "start": "1323000",
    "end": "1453000"
  },
  {
    "text": "system and i'm specifically not saying root for a reason if you look at kind of like the software um privilege stack i mean certainly the",
    "start": "1325200",
    "end": "1330960"
  },
  {
    "text": "kernel is the king and then you got your typical route after that and then comes system and then everything else below it where",
    "start": "1330960",
    "end": "1336720"
  },
  {
    "text": "eventually we bottom out with normal applications um beneath that all the things in the",
    "start": "1336720",
    "end": "1342080"
  },
  {
    "text": "middle are essentially kind of like some identified different privilege levels for specific circumstances and permissions you would grant to an app",
    "start": "1342080",
    "end": "1348559"
  },
  {
    "text": "but by the most part you can kind of see where system fits in the grand scheme of things now systems not root but let's really",
    "start": "1348559",
    "end": "1355280"
  },
  {
    "text": "you know take a moment to think about what system does right so system manages installs",
    "start": "1355280",
    "end": "1360559"
  },
  {
    "text": "all of your applications and make sure they're all acting properly and you know kind of even facilitates sandboxing because it manages all of",
    "start": "1360559",
    "end": "1367440"
  },
  {
    "text": "your applications it essentially manages all the data used by those applications it can go in and jump in and have access",
    "start": "1367440",
    "end": "1372960"
  },
  {
    "text": "to it now there are a couple proprietary technologies recently on the market that kind of start to change this but by and large this is a general",
    "start": "1372960",
    "end": "1379280"
  },
  {
    "text": "statement since it's actually managing all your accounts and everything your pin code",
    "start": "1379280",
    "end": "1384400"
  },
  {
    "text": "your lock code all that stuff it's essentially managing your passwords you know the android key store is owned and run by system",
    "start": "1384400",
    "end": "1389840"
  },
  {
    "text": "that's where you stash all your passwords so system has access to all of your security credentials and of course you know since it is a",
    "start": "1389840",
    "end": "1396320"
  },
  {
    "text": "thing that actually implements and enforces and uses all the configurations of your device by and large it does control all of your",
    "start": "1396320",
    "end": "1403120"
  },
  {
    "text": "settings so systems not root but at the same time it has all of your data it has all of your",
    "start": "1403120",
    "end": "1408799"
  },
  {
    "text": "apps it has all of your passwords it has all of your settings other than jail breaking up to get root and maybe playing around with",
    "start": "1408799",
    "end": "1414799"
  },
  {
    "text": "you know kernel module to what's left right so system in its own right is actually a pretty powerful stopping",
    "start": "1414799",
    "end": "1420960"
  },
  {
    "text": "point to get access to the majority of the device so i'm thinking all right you know",
    "start": "1420960",
    "end": "1427440"
  },
  {
    "text": "knowing this shared uid system thing and knowing this platform certificate thing essentially if i use this cute little",
    "start": "1427440",
    "end": "1433279"
  },
  {
    "text": "trick where i can change code without changing the certificate all i really need to do is get my hands on an app that is platform signed",
    "start": "1433279",
    "end": "1441039"
  },
  {
    "text": "so signed by the same person who produced the firmware for the device and do my little trick on it and theoretically i should be able to get",
    "start": "1441039",
    "end": "1447679"
  },
  {
    "text": "system level access much cooler than four square maps right although foursquare maps is a very",
    "start": "1447679",
    "end": "1455120"
  },
  {
    "text": "powerful thing in its own right so you know the the challenge is then",
    "start": "1455120",
    "end": "1460240"
  },
  {
    "text": "okay what apps basically meet that criteria and this is where some of my work",
    "start": "1460240",
    "end": "1465679"
  },
  {
    "text": "elsewhere in blue box actually kind of gave me a hint because um for anyone who's kind of dealt with the mdm management space",
    "start": "1465679",
    "end": "1472880"
  },
  {
    "text": "and and and kind of looked around there there's a lot of interesting um b2b relationships between like mdm",
    "start": "1472880",
    "end": "1480480"
  },
  {
    "text": "vendors and device components um vendors after market device component and vendors and manufacturers for instance",
    "start": "1480480",
    "end": "1488080"
  },
  {
    "text": "the the samsung seat program is a great example samsung has a really fantastic",
    "start": "1488080",
    "end": "1493360"
  },
  {
    "text": "platform management api that they offer to partners so if you become a partner of the seat program",
    "start": "1493360",
    "end": "1498880"
  },
  {
    "text": "you can have access to the api the challenge is that api is actually needs platform level certificate access so",
    "start": "1498880",
    "end": "1505360"
  },
  {
    "text": "the only one who can really give away api access is samsung so as part of the seep access you know partners are able",
    "start": "1505360",
    "end": "1510799"
  },
  {
    "text": "to produce an application which then they hand to samsung they verify it cleanly and make sure it's not",
    "start": "1510799",
    "end": "1515919"
  },
  {
    "text": "malicious and you know it's contained and looks really good so they verify it and and if they're if they're satisfied",
    "start": "1515919",
    "end": "1521360"
  },
  {
    "text": "samsung will sign it with their platform certificate and give it back to you and you upload it to google play",
    "start": "1521360",
    "end": "1526960"
  },
  {
    "text": "so in that case really essentially to use samsung's extended api you know you have to be platform signed and there",
    "start": "1526960",
    "end": "1533360"
  },
  {
    "text": "is an entire b2b relationship process to produce this samsung's not the only one lg does this",
    "start": "1533360",
    "end": "1538799"
  },
  {
    "text": "um htc uh has access to a lot of the extended api but certainly there's other opportunities",
    "start": "1538799",
    "end": "1544159"
  },
  {
    "text": "for instance with vpn add-on vendors cisco juniper f5 these guys want to do vpn client",
    "start": "1544159",
    "end": "1549840"
  },
  {
    "text": "access on the device which is something a normal application can't do in the privileged model of android at all",
    "start": "1549840",
    "end": "1555440"
  },
  {
    "text": "so as an example cisco has relationships with htc and with samsung who create cisco",
    "start": "1555440",
    "end": "1563039"
  },
  {
    "text": "creates their basically their vpn client but it needs system level access to do its thing",
    "start": "1563039",
    "end": "1568240"
  },
  {
    "text": "effect routing tables play with a ton interface stuff like that so they've got relationships with samsung which htc",
    "start": "1568240",
    "end": "1575039"
  },
  {
    "text": "cisco has produced the client given it to those parties htc signed it and given it back and that's what's hanging in the app store right now so when you go for",
    "start": "1575039",
    "end": "1581600"
  },
  {
    "text": "that htc anyconnect that's actually signed by htc you go to the samsung gonna connect it's",
    "start": "1581600",
    "end": "1587600"
  },
  {
    "text": "signed by samsung if you don't have signed you know platform access you can go to you know the rooted one um if you look around what i typically",
    "start": "1587600",
    "end": "1595039"
  },
  {
    "text": "google do is i just go into the play store and kind of search for for zte for samsung",
    "start": "1595039",
    "end": "1601760"
  },
  {
    "text": "for whatever and you'll be amazed at how many apps pop up get rid of all the themes and stuff and what's left tends to be a lot of mdm",
    "start": "1601760",
    "end": "1608640"
  },
  {
    "text": "platform management extensions and and if you start looking under the hood and verifying those you'll see",
    "start": "1608640",
    "end": "1613760"
  },
  {
    "start": "1611000",
    "end": "1664000"
  },
  {
    "text": "they're not signed by who created the app they're signed by the platform device vendor and so in this case i grabbed the",
    "start": "1613760",
    "end": "1618880"
  },
  {
    "text": "cisco one and started dumping its apologies that's hard to read but essentially i can look at that pkcs7",
    "start": "1618880",
    "end": "1625279"
  },
  {
    "text": "object dump the certificate and actually see in the samsung anyconnect client produced by cisco it's",
    "start": "1625279",
    "end": "1630799"
  },
  {
    "text": "actually signed by samsung and it's a complete bonus to make my life easier it just so happens that the vpn clients like samsung",
    "start": "1630799",
    "end": "1637440"
  },
  {
    "text": "juniper f5 all these guys who produce these things this way actually requests uh system uid access",
    "start": "1637440",
    "end": "1642880"
  },
  {
    "text": "and now of course it's up to samsung's discretion or htc's discretion any you know the platform vendor's discretion to hand",
    "start": "1642880",
    "end": "1648799"
  },
  {
    "text": "it away and they do so under whatever contractual agreement they've got like with the cisco junipers f5s of the world and",
    "start": "1648799",
    "end": "1655120"
  },
  {
    "text": "stuff um you know but ultimately i just grabbed this thing it's platform sign and it's already requesting system level",
    "start": "1655120",
    "end": "1660399"
  },
  {
    "text": "access this is pretty easy i mean the criteria is met at this point so what do i wind up doing how do we",
    "start": "1660399",
    "end": "1666080"
  },
  {
    "start": "1664000",
    "end": "1746000"
  },
  {
    "text": "exploit this well i take this uber hacking tool called eclipse",
    "start": "1666080",
    "end": "1672320"
  },
  {
    "text": "i do this awesome code craziness called create a java project",
    "start": "1672320",
    "end": "1677679"
  },
  {
    "text": "and the secret key is i just use the same package name as the original app right so ultimately i just basically",
    "start": "1677679",
    "end": "1683679"
  },
  {
    "text": "make a package saying i'm going to be com cisco any connect vpn android that's my package name right and so inside of",
    "start": "1683679",
    "end": "1689919"
  },
  {
    "text": "that i go through and ultimately i have to look at the original app and say there's so many entry points i only",
    "start": "1689919",
    "end": "1696000"
  },
  {
    "text": "need to grab one of them and take over one of them so which entry point i want to choose from you know it could be an activity it",
    "start": "1696000",
    "end": "1701039"
  },
  {
    "text": "could be a service it could be a content provider your call right um ultimately i went up just picking the main launcher activity",
    "start": "1701039",
    "end": "1707600"
  },
  {
    "text": "and i created just a package i created an empty activity that used the exact same class name as the one that's embedded in the original",
    "start": "1707600",
    "end": "1714000"
  },
  {
    "text": "target app in this case the cisco vpn client and just dropped my code in it and i had to create a couple other small files and",
    "start": "1714000",
    "end": "1720080"
  },
  {
    "text": "this was through trial and error trying to do this process launch it and then i would get a failure saying can't load",
    "start": "1720080",
    "end": "1725360"
  },
  {
    "text": "file x well i'll make an empty version of file x try again you know i only had to do that twice until the thing worked",
    "start": "1725360",
    "end": "1730640"
  },
  {
    "text": "so realistically i just created a basically a a modified cisco representation of the",
    "start": "1730640",
    "end": "1736640"
  },
  {
    "text": "code base not copying code not reusing anything all i do is just create a completely empty from scratch new one",
    "start": "1736640",
    "end": "1742960"
  },
  {
    "text": "with three empty files in it and that's all i need to get started now in that activity let's look at a",
    "start": "1742960",
    "end": "1748960"
  },
  {
    "start": "1746000",
    "end": "1794000"
  },
  {
    "text": "payload right let's exploit this thing um so you know i don't care about good design practices",
    "start": "1748960",
    "end": "1754720"
  },
  {
    "text": "when you want to get a poc to work and it's late and whatever and you're fueled by adrenaline you just do what you need to do to get it done right so i'm like uh every time an",
    "start": "1754720",
    "end": "1761840"
  },
  {
    "text": "activity is created for the first time the oncreate's called good enough for me i'm gonna slap my code in there that way i guarantee it runs none of this",
    "start": "1761840",
    "end": "1767520"
  },
  {
    "text": "like activity life cycle stuff that a good developer would normally worry about um so so i just throw the code right",
    "start": "1767520",
    "end": "1774080"
  },
  {
    "text": "there in the uncreates and you know if you can read it here essentially all i'm doing with this payload is i'm running i'm shelling out and running",
    "start": "1774080",
    "end": "1780559"
  },
  {
    "text": "the id command which will essentially tell me what user privilege i'm running at and then just reading in the results of",
    "start": "1780559",
    "end": "1785760"
  },
  {
    "text": "that command and dumping them into the log file the android debug log so straightforward payload that's the",
    "start": "1785760",
    "end": "1790880"
  },
  {
    "text": "entire thing this is it this is the whole exploit body so of course now that i've got a payload i can pilot",
    "start": "1790880",
    "end": "1796559"
  },
  {
    "start": "1794000",
    "end": "1863000"
  },
  {
    "text": "with eclipse now i've got to do that silly little zip stuff right and get all the bodies in the right order",
    "start": "1796559",
    "end": "1801679"
  },
  {
    "text": "there's been some interesting pocs released that do like crazy java and python and do this and merge",
    "start": "1801679",
    "end": "1807120"
  },
  {
    "text": "apks and all this assorted stuff and as you know kind of other folks like sorak have kind of pointed out and stuff",
    "start": "1807120",
    "end": "1812320"
  },
  {
    "text": "i mean realistically a lot of people are overthinking it all i got to do is take the original",
    "start": "1812320",
    "end": "1817520"
  },
  {
    "text": "target application take my modified classes dex file and update the existing one in the app then",
    "start": "1817520",
    "end": "1825200"
  },
  {
    "text": "i take the original classes dex it's renamed to classes dey or whatever else",
    "start": "1825200",
    "end": "1830320"
  },
  {
    "text": "i append that to the end so now the zip's got two copies my the evil one is first and since i",
    "start": "1830320",
    "end": "1836080"
  },
  {
    "text": "appended the second one the second one comes later the second one has the wrong name and then i just do a binary edit in which",
    "start": "1836080",
    "end": "1841600"
  },
  {
    "text": "case it could be a said command to swap the name of the second one back to the original name i need it to be",
    "start": "1841600",
    "end": "1847200"
  },
  {
    "text": "so even though the zip commands won't let me do duplicate files you know directly i can still use zip commands to",
    "start": "1847200",
    "end": "1852399"
  },
  {
    "text": "completely manage the entire process just use a slightly different name and then just briefly binary edit the name back to where it needs to be",
    "start": "1852399",
    "end": "1858960"
  },
  {
    "text": "boom done three commands exploit lock and loaded",
    "start": "1858960",
    "end": "1864240"
  },
  {
    "start": "1863000",
    "end": "1892000"
  },
  {
    "text": "so of course we run it a course is successfully taken by android and then you know i",
    "start": "1864240",
    "end": "1869279"
  },
  {
    "text": "dump the the log output and there you go boom uid 1000 system the entire process works",
    "start": "1869279",
    "end": "1874480"
  },
  {
    "text": "as suspected so you know we've got system level access straightforward awesome hacker eclipse",
    "start": "1874480",
    "end": "1881039"
  },
  {
    "text": "tool wrote some java code got myself a part of the android os um fairly straightforward",
    "start": "1881039",
    "end": "1886399"
  },
  {
    "text": "to a certain extent um definitely accessible not not too complicated right",
    "start": "1886399",
    "end": "1893840"
  },
  {
    "start": "1892000",
    "end": "1909000"
  },
  {
    "text": "there's more fun stuff unfortunately well so to a certain extent there's more fun stuff but i",
    "start": "1895840",
    "end": "1902000"
  },
  {
    "text": "think it's probably the point where people are going to get disappointed so we got system let's keep going right",
    "start": "1902000",
    "end": "1907679"
  },
  {
    "text": "chasing a rope um so certainly the the challenge with chasing route from system level access",
    "start": "1907679",
    "end": "1913039"
  },
  {
    "text": "while there's definitely a lot of system to root type of escalations out there um they do vary by manufacturer they do",
    "start": "1913039",
    "end": "1919360"
  },
  {
    "text": "vary by android version and stuff they really start to get splintered um you can look at places like xda forms and stuff to",
    "start": "1919360",
    "end": "1925519"
  },
  {
    "text": "kind of see what's latest exploit to get from system to root and just kind of throw that in your payload and call it good um for an older version of android just",
    "start": "1925519",
    "end": "1932320"
  },
  {
    "text": "an example was something called the emulator hack for ice cream sandwich essentially all you had to do is there was one file",
    "start": "1932320",
    "end": "1938240"
  },
  {
    "text": "called data local prop which is normally not writable by normal applications but with system you can write it",
    "start": "1938240",
    "end": "1943760"
  },
  {
    "text": "so as system we open that file and inside of it we basically set a property saying i'm running in an emulator",
    "start": "1943760",
    "end": "1950080"
  },
  {
    "text": "which the code in android that's even shipped on production devices generally has this if you're running an",
    "start": "1950080",
    "end": "1956080"
  },
  {
    "text": "emulator you're in development mode feel free to skip all the security crap and just drop into root",
    "start": "1956080",
    "end": "1961279"
  },
  {
    "text": "right and devices actually ship with this because normally obviously you're not running in an emulator a normal device will not set",
    "start": "1961279",
    "end": "1968240"
  },
  {
    "text": "this flag to indicate it's running an emulator it's a production device so all the security properties and and controls will be maintained but",
    "start": "1968240",
    "end": "1974480"
  },
  {
    "text": "if you set this flag and reboot you know through this thing now that we have system level access",
    "start": "1974480",
    "end": "1980000"
  },
  {
    "start": "1977000",
    "end": "2030000"
  },
  {
    "text": "we're at a place where we can set this flag we reboot the phone we log in we got root right simply by tricking the",
    "start": "1980000",
    "end": "1986000"
  },
  {
    "text": "device into thinking that it's running in an emulator now this hack actually this uh to a certain extent has been closed in two",
    "start": "1986000",
    "end": "1992080"
  },
  {
    "text": "ways one android no longer will actually read that file the the kind of fun quote mentions external",
    "start": "1992080",
    "end": "1998399"
  },
  {
    "text": "is that the only thing that data local profile was ever used was actually for exploits i was never legitimately used by",
    "start": "1998399",
    "end": "2003919"
  },
  {
    "text": "anything for real um so it's no longer even processed anymore and i've also seen some other vendors",
    "start": "2003919",
    "end": "2009279"
  },
  {
    "text": "who literally go in on their production devices and in the rom properties that get loaded first specifically say i am not in an emulator",
    "start": "2009279",
    "end": "2017279"
  },
  {
    "text": "so there's and it's a read-only variable so once it's set as i'm not an emulator you can never change it to say i am so you know multiple ways to kind",
    "start": "2017279",
    "end": "2024480"
  },
  {
    "text": "of mitigate it depending upon the direction and stuff but but certainly that trick has been rendered useless",
    "start": "2024480",
    "end": "2030080"
  },
  {
    "start": "2030000",
    "end": "2084000"
  },
  {
    "text": "but come on you don't want stuff that doesn't work you want stuff that works so i want to point out you know the awesome effort done by sorek",
    "start": "2030080",
    "end": "2035840"
  },
  {
    "text": "recently he released a tool called city impactor which was kind of billed as the end-to-end master keep exploit management suite",
    "start": "2035840",
    "end": "2043039"
  },
  {
    "text": "this is essential fully automated suites for osx or for windows it's point",
    "start": "2043039",
    "end": "2048480"
  },
  {
    "text": "and click right you connect a device you point and click it figures out the app it builds all the stuff it constructs it it",
    "start": "2048480",
    "end": "2054560"
  },
  {
    "text": "delivers it it pops system level access it starts running system to root level escalations whatever the latest ones are being",
    "start": "2054560",
    "end": "2060079"
  },
  {
    "text": "maintained and you know if you get it you get it if you're not you're not cross device pretty agnostic fantastic work quite",
    "start": "2060079",
    "end": "2066800"
  },
  {
    "text": "frankly i was going to release some cheesy little pocs for a couple big vendors and then this came out and i said what's",
    "start": "2066800",
    "end": "2072560"
  },
  {
    "text": "the point for my crap this thing is point-and-click and has uis and awesomeness i mean i can't compete with that and it's maintained",
    "start": "2072560",
    "end": "2078560"
  },
  {
    "text": "and all that sort of stuff so i certainly encourage you to go check it out",
    "start": "2078560",
    "end": "2083519"
  },
  {
    "start": "2084000",
    "end": "2148000"
  },
  {
    "text": "so what's really interesting about this bug um you know i was kind of actually hearkening this back to the the",
    "start": "2085200",
    "end": "2090398"
  },
  {
    "text": "ancient days of like the iis ms adc exploit and stuff i really like this bug because it",
    "start": "2090399",
    "end": "2096240"
  },
  {
    "text": "doesn't matter what architecture you're running on all those silly little security things like asr and depth don't apply here",
    "start": "2096240",
    "end": "2102720"
  },
  {
    "text": "it works i have one exploit payload that works on four generations of android with zero",
    "start": "2102720",
    "end": "2108480"
  },
  {
    "text": "code modifications that itself is pretty cool and i don't have to be an assembly expert and do",
    "start": "2108480",
    "end": "2114079"
  },
  {
    "text": "crazy payload shell code and stuff if i can write java i'm game on right so so this is a really easy one",
    "start": "2114079",
    "end": "2120960"
  },
  {
    "text": "ultimately to get your hands around and kind of exploit three zip commands or three command line commands kind of produce it and boom you're done you",
    "start": "2120960",
    "end": "2126720"
  },
  {
    "text": "write some java code you're set um so in that regard that's actually why i wanted to bring it or kind of submitted to the cfp for black app",
    "start": "2126720",
    "end": "2133520"
  },
  {
    "text": "because it was an easy to understand easy to exploit easy to just really get your brain around this is a really",
    "start": "2133520",
    "end": "2139359"
  },
  {
    "text": "simple easy accessible vulnerability now of course if it's easy and accessible that you know you kind of have to look",
    "start": "2139359",
    "end": "2144560"
  },
  {
    "text": "and say okay what happens now when people start using it so before we go into you know some other",
    "start": "2144560",
    "end": "2152079"
  },
  {
    "start": "2148000",
    "end": "2201000"
  },
  {
    "text": "interesting tidbits remember i said master keys plural as it's come to light recently",
    "start": "2152079",
    "end": "2157599"
  },
  {
    "text": "publicly known and certainly from some private responsible disclosure efforts",
    "start": "2157599",
    "end": "2163200"
  },
  {
    "text": "there are other bugs that are really playing in the same space and depending upon how carefully you go",
    "start": "2163200",
    "end": "2168720"
  },
  {
    "text": "and watch aosp patch releases and things like that you may have noticed a couple more and certainly the public has and so",
    "start": "2168720",
    "end": "2174320"
  },
  {
    "text": "it's relevant for i'm gonna go ahead and throw them in since i've already given you all the foundation of all the zip file stuff i i taught you more zip than you're ever",
    "start": "2174320",
    "end": "2180640"
  },
  {
    "text": "gonna wanna know so let's use that to have more fun right so there was one patch that was released",
    "start": "2180640",
    "end": "2185680"
  },
  {
    "text": "that had to do with authenticated attributes this is one interesting enough that has the same impact but it hasn't",
    "start": "2185680",
    "end": "2192400"
  },
  {
    "text": "been the patch is out it's publicly an aosp yet no one's actually called attention to it to actually producing the same",
    "start": "2192400",
    "end": "2198800"
  },
  {
    "text": "impact as all the other master keys so this is a snippet of code",
    "start": "2198800",
    "end": "2204960"
  },
  {
    "start": "2201000",
    "end": "2264000"
  },
  {
    "text": "that is right smack dab in the middle of all that rsa certificate crypto signing",
    "start": "2204960",
    "end": "2210400"
  },
  {
    "text": "verification process does anyone see anything that's probably not cool to have",
    "start": "2210400",
    "end": "2216480"
  },
  {
    "text": "right in the middle of your rsa cryptographic signing verification process",
    "start": "2216480",
    "end": "2223280"
  },
  {
    "text": "i know it's hard to read but essentially the to do we should figure out what to do here part it's probably a",
    "start": "2223359",
    "end": "2230560"
  },
  {
    "text": "huge miss right i noticed this now you know to be completely fair and stuff you know",
    "start": "2230560",
    "end": "2235680"
  },
  {
    "text": "blue box noticed this i was kind of slacking and making a poc and stuff i did not report this to google before",
    "start": "2235680",
    "end": "2242480"
  },
  {
    "text": "they wound up releasing the patch in aosp because they've been internally scrubbing for these whole code paths and stuff",
    "start": "2242480",
    "end": "2247760"
  },
  {
    "text": "after the first master key came out so it was not we can't blue box is not",
    "start": "2247760",
    "end": "2252880"
  },
  {
    "text": "going to claim we found this but certainly we're playing for it but ultimately it got fixed before we actually got involved so",
    "start": "2252880",
    "end": "2258320"
  },
  {
    "text": "you know but i still want to talk about it anyway because it's interesting and i happen to do the work to understand it so figure why not include it",
    "start": "2258320",
    "end": "2264720"
  },
  {
    "text": "so if you remember back into that verification process and that chain right that whole verification chain all",
    "start": "2264720",
    "end": "2270320"
  },
  {
    "text": "these authenticated attributes do is they add one more link to the chain at the end so rather than the signature",
    "start": "2270320",
    "end": "2276000"
  },
  {
    "text": "hash in this uh in the rsa file verifying the signature file what it does is now the signed hash",
    "start": "2276000",
    "end": "2282480"
  },
  {
    "text": "verifies the authenticated attributes inside the authenticated attributes there's a hash of the signature file",
    "start": "2282480",
    "end": "2288800"
  },
  {
    "text": "right so you can kind of see how we just added one more link to the chain um ultimately sign the off attributes the",
    "start": "2288800",
    "end": "2295040"
  },
  {
    "text": "auth attributes are actually what verifies the sf the sf verifies the mfdmf verifies it by contents",
    "start": "2295040",
    "end": "2300320"
  },
  {
    "text": "now due to that to do little missing blip we're missing a link in the chain so",
    "start": "2300320",
    "end": "2307280"
  },
  {
    "text": "essentially the sign hash will verify the authenticated attributes but the to do missing part was making",
    "start": "2307280",
    "end": "2313520"
  },
  {
    "text": "sure that the authenticated attributes verified the signature file and continued on the chain so from an",
    "start": "2313520",
    "end": "2319359"
  },
  {
    "text": "exploitation perspective ultimately all you have to do is just basically make your modified file update your manifest update your signature file and",
    "start": "2319359",
    "end": "2325520"
  },
  {
    "text": "it's completely fine because any changes done to any of that other stuff to the left won't affect the authentication of the",
    "start": "2325520",
    "end": "2331760"
  },
  {
    "text": "attributes on the right and then the link in the chain isn't actually correlated so that that",
    "start": "2331760",
    "end": "2337440"
  },
  {
    "text": "discrepancy isn't detected so what really winds up happening now you know to be fair quite frankly while this",
    "start": "2337440",
    "end": "2343760"
  },
  {
    "text": "looks interesting exploitation to this is practically going to be near zero and the reason is because you need an application",
    "start": "2343760",
    "end": "2350400"
  },
  {
    "text": "signed with authenticated attributes as your starting points very few application now it isn't a",
    "start": "2350400",
    "end": "2356320"
  },
  {
    "text": "legitimately supported signing method but if you look at like sign apk",
    "start": "2356320",
    "end": "2361839"
  },
  {
    "text": "and jar signer the actual tools in the ecosystem to do the signing they largely don't produce signed applications this way which is a good",
    "start": "2361839",
    "end": "2368079"
  },
  {
    "text": "thing right because that really means most applications will be safe from this that said if someone did actually",
    "start": "2368079",
    "end": "2373440"
  },
  {
    "text": "produce a signature assigning this way what you can essentially do is copy and paste that",
    "start": "2373440",
    "end": "2379680"
  },
  {
    "text": "rsa file into any other app you want and that app will essentially assume the identity of that developer because you're essentially just copying",
    "start": "2379680",
    "end": "2385920"
  },
  {
    "text": "and pasting that right half and the left tap is irrelevant it'll just assume the identity verified out of that right half so it's kind of",
    "start": "2385920",
    "end": "2392160"
  },
  {
    "text": "you know for the most part anyone who's signed with authenticated attributes has essentially given away their identity and they should probably go revoke all",
    "start": "2392160",
    "end": "2397760"
  },
  {
    "text": "that stuff and kind of you know fix up that process fun cute thing not practical to really",
    "start": "2397760",
    "end": "2403839"
  },
  {
    "text": "exploit but i thought i'd mention it a much more interesting patch that publicly showed up",
    "start": "2403839",
    "end": "2410319"
  },
  {
    "start": "2406000",
    "end": "2422000"
  },
  {
    "text": "you know so again this one blue box did have some disclosure hand in and some stuff started happening really",
    "start": "2410319",
    "end": "2415680"
  },
  {
    "text": "fast on this one publicly before responsible disclosure really played out the way it would normally play out but that's just how those things go",
    "start": "2415680",
    "end": "2422640"
  },
  {
    "start": "2422000",
    "end": "2455000"
  },
  {
    "text": "so essentially um remember we're talking about differences between a c plus plus zip parser and a java zip",
    "start": "2422640",
    "end": "2428240"
  },
  {
    "text": "parser right so all this is about a discrepancy game the java one doing one thing and the c",
    "start": "2428240",
    "end": "2433760"
  },
  {
    "text": "plus plus doing another and if we can prey on discrepancies we can completely break that verification process",
    "start": "2433760",
    "end": "2439200"
  },
  {
    "text": "so as it turns out the c plus implementation used by desktop and",
    "start": "2439200",
    "end": "2444400"
  },
  {
    "text": "others like asset manager things like that use unsigned short values whereas the",
    "start": "2444400",
    "end": "2449599"
  },
  {
    "text": "java implementation uses signed short values now for those of you briefly not aware of the difference",
    "start": "2449599",
    "end": "2455119"
  },
  {
    "start": "2455000",
    "end": "2499000"
  },
  {
    "text": "between signed and unsigned if you think about numbers represented by a computer they can be positive they could be negative",
    "start": "2455119",
    "end": "2461680"
  },
  {
    "text": "signed means that two bytes in this case for short will represent somewhere between negative 32k and positive 32k",
    "start": "2461680",
    "end": "2468960"
  },
  {
    "text": "if it's if it's signed if it's an unsigned integer unsigned short it'll represent a",
    "start": "2468960",
    "end": "2474079"
  },
  {
    "text": "value between 0 and 64k so there's a certain crossing point in those values here",
    "start": "2474079",
    "end": "2480000"
  },
  {
    "text": "hex 8000 where essentially interpreted as a signed value hex 8000 means negative 32k",
    "start": "2480000",
    "end": "2488480"
  },
  {
    "text": "interpreted in an unsigned way hex 8000 means positive 32k so the same number means",
    "start": "2488480",
    "end": "2496079"
  },
  {
    "text": "a drastic difference in negative and positive depending upon who interprets it so when you look at what happens if we",
    "start": "2496079",
    "end": "2501920"
  },
  {
    "text": "essentially use that magic number of hex 8000 the c plus implementation which treats",
    "start": "2501920",
    "end": "2507040"
  },
  {
    "text": "it as unsigned we'll add it to a pointer and it's going to jump 32k",
    "start": "2507040",
    "end": "2512400"
  },
  {
    "text": "forward right it's going to move through the file when it's parsing it jump farther 32k when you look at what zip is",
    "start": "2512400",
    "end": "2518560"
  },
  {
    "text": "doing or the jar implementation of zip zip file since it's coming out as negative 32k",
    "start": "2518560",
    "end": "2524960"
  },
  {
    "text": "then it's doing that check of if it's greater than zero which negative 32k is not it essentially doesn't advance the",
    "start": "2524960",
    "end": "2530000"
  },
  {
    "text": "pointer at all so what winds up happening is that the c plus plus implementations jumping 32k ahead and the java implementation is",
    "start": "2530000",
    "end": "2537119"
  },
  {
    "text": "just going to the next record big big difference on what comes next right",
    "start": "2537119",
    "end": "2542800"
  },
  {
    "text": "so we can exploit that and so essentially if we basically again go back to these funky kind of ordered unordered things",
    "start": "2542800",
    "end": "2548720"
  },
  {
    "text": "we create ourselves one of those funky indexes the central directory and in it i wind up putting a file that",
    "start": "2548720",
    "end": "2554160"
  },
  {
    "text": "has that magical 8000 hex so normal file x normal file y normal file z but i update the little",
    "start": "2554160",
    "end": "2560880"
  },
  {
    "text": "jump pointer with that magic value of 8 000 hex right and then after that right after it i put",
    "start": "2560880",
    "end": "2567920"
  },
  {
    "text": "an entry for the good unmodified code and then especially carefully crafted",
    "start": "2567920",
    "end": "2573119"
  },
  {
    "text": "32k offset kind of you know with some padding and stuff i put another evil entry which points to",
    "start": "2573119",
    "end": "2580079"
  },
  {
    "text": "the modified code and then i can put additional files after that and you know our end of central directory whatever it matters",
    "start": "2580079",
    "end": "2586400"
  },
  {
    "text": "but create that basically these two record items so it winds up happening is the java one comes along and read",
    "start": "2586400",
    "end": "2593119"
  },
  {
    "text": "says okay file x that's good file y that's good falzi that's good oh negative jump to the next one",
    "start": "2593119",
    "end": "2598800"
  },
  {
    "text": "it gets our original classes dex right remember and it's all verify all the file bodies look good so it's going",
    "start": "2598800",
    "end": "2605040"
  },
  {
    "text": "to get the real one and it's going to be happy with it and then of course it's going to jump farther forward it's going to jump over the evil one because",
    "start": "2605040",
    "end": "2611359"
  },
  {
    "text": "i put some additional jumps in there which are not negative sensitive invoking causing it to jump anyway",
    "start": "2611359",
    "end": "2617760"
  },
  {
    "text": "artificially and it just goes to the end versus the c plus plus one when it comes along it's",
    "start": "2617760",
    "end": "2622960"
  },
  {
    "text": "gonna again get x get y it's gonna get z with that funky value that funky value says jump ahead 32k so it's going to do the",
    "start": "2622960",
    "end": "2629920"
  },
  {
    "text": "jump and that 32 collateral is exactly where we put our evil one and that's the one that the c",
    "start": "2629920",
    "end": "2635119"
  },
  {
    "text": "plus implementation is going to get and then eventually they start coming back into sync as they start processing the next record",
    "start": "2635119",
    "end": "2640640"
  },
  {
    "text": "so again that discrepancy shows that you know that i gave one file entry to one implementation of",
    "start": "2640640",
    "end": "2646560"
  },
  {
    "text": "zip the one that actually does all the security checking and then it actually gave another file entry to a different implementation of",
    "start": "2646560",
    "end": "2652000"
  },
  {
    "text": "zip which is the one that actually installs the code and uses it now you know as correctly pointed out through like a great technical analysis",
    "start": "2652000",
    "end": "2658400"
  },
  {
    "text": "of sorek and stuff we kind of really dug into this bug and posted a big blog post on it that it's not just about even replacing",
    "start": "2658400",
    "end": "2664480"
  },
  {
    "text": "one file you can use this trick to literally feed an entirely independent copy",
    "start": "2664480",
    "end": "2669760"
  },
  {
    "text": "of a new zip file to one implementation versus another so you don't have this isn't even about one single file",
    "start": "2669760",
    "end": "2675440"
  },
  {
    "text": "i could put 30 files in one perspective of the zip and and 30 different ones in a different",
    "start": "2675440",
    "end": "2681920"
  },
  {
    "text": "perspective of the zip that have nothing to do with each other and feed completely independent sets of files in both directions one to the one that",
    "start": "2681920",
    "end": "2687920"
  },
  {
    "text": "does the server security verification and then one to the one who actually processes and uses the data actually in",
    "start": "2687920",
    "end": "2693200"
  },
  {
    "text": "the run time so it's pretty powerful you can invent files that don't even exist they don't even have to match at that point",
    "start": "2693200",
    "end": "2698960"
  },
  {
    "text": "right i can add files in one place that aren't on the other side it's pretty flexible and and to a",
    "start": "2698960",
    "end": "2705119"
  },
  {
    "text": "certain extent you know i happen to know a couple of tricks and tidbits in this space that may be surfacing you know",
    "start": "2705119",
    "end": "2711359"
  },
  {
    "text": "eventually that will show even more power to this approach this is a pretty powerful capability in terms of",
    "start": "2711359",
    "end": "2718800"
  },
  {
    "text": "the ramifications and you can do a lot of interesting stuff with this all relating to you know signature",
    "start": "2718800",
    "end": "2724319"
  },
  {
    "text": "bypass verification so also related actually in the same patch because that patch fixed multiple",
    "start": "2724319",
    "end": "2730400"
  },
  {
    "start": "2726000",
    "end": "2846000"
  },
  {
    "text": "points in code and so that the previous slide actually showed what amounts to two variations because you",
    "start": "2730400",
    "end": "2736800"
  },
  {
    "text": "can do sign and unsign in comments and sign in unsigned and extra data um there was a third one and this one",
    "start": "2736800",
    "end": "2742319"
  },
  {
    "text": "actually showed up publicly released by the android security team in a blog at blog cinecom cn in china",
    "start": "2742319",
    "end": "2749040"
  },
  {
    "text": "and so there's this awesome kind of technical analysis blog post it's written in chinese so you know you'll have to google translate or know how to",
    "start": "2749040",
    "end": "2755280"
  },
  {
    "text": "recharge to begin with they even have you know graphics and stuff too showing exactly how they construct the payload and essentially what they will end up",
    "start": "2755280",
    "end": "2761440"
  },
  {
    "text": "doing is rather than playing around in the in the um central directory and putting",
    "start": "2761440",
    "end": "2766960"
  },
  {
    "text": "multiple entries there they left it as a single entry in the central directory",
    "start": "2766960",
    "end": "2772560"
  },
  {
    "text": "what they targeted instead was actually the local file body content itself has a header it",
    "start": "2772560",
    "end": "2778079"
  },
  {
    "text": "has that same concept of an extra jump and so they flopped that little signed unsigned trick over in the local file",
    "start": "2778079",
    "end": "2784079"
  },
  {
    "text": "part and so what happened is when you know the zip entry java came along again it did a zero advance so it got the first",
    "start": "2784079",
    "end": "2790240"
  },
  {
    "text": "copy of the file here shown as the original copy but when the c plus came along again it did that jump so it jumped over the",
    "start": "2790240",
    "end": "2796880"
  },
  {
    "text": "original copy and won a blending on an evil copy and that's the one it got so essentially they did the same trick",
    "start": "2796880",
    "end": "2801920"
  },
  {
    "text": "they just did it in a different location now the challenge though with this one is because they're jumping over",
    "start": "2801920",
    "end": "2808160"
  },
  {
    "text": "file body contents themselves and the jump can only be up to 64k big that means this trick only works if",
    "start": "2808160",
    "end": "2814880"
  },
  {
    "text": "the file is under 64k big so somewhat limiting of the trick the other way is much more powerful because",
    "start": "2814880",
    "end": "2821040"
  },
  {
    "text": "you have unlimited body content size but but interesting nonetheless and it's actually the exact same bug just in a",
    "start": "2821040",
    "end": "2827040"
  },
  {
    "text": "different location so that kind of wraps up some of the",
    "start": "2827040",
    "end": "2833200"
  },
  {
    "text": "recently disclosed and i'll emphasize publicly disclosed part of of the bugs",
    "start": "2833200",
    "end": "2839200"
  },
  {
    "text": "kind of in this space you know but in the last two weeks quite frankly it's",
    "start": "2839200",
    "end": "2844319"
  },
  {
    "text": "it's been really interesting and i want to kind of take a brief gander back at the timeline of how life looked so you know blue box",
    "start": "2844319",
    "end": "2851920"
  },
  {
    "start": "2846000",
    "end": "3123000"
  },
  {
    "text": "kind of you know encounter this and stuff and ultimately in late february we wound up you know disclosing this to",
    "start": "2851920",
    "end": "2857119"
  },
  {
    "text": "google under the concept of responsible disclosure and you know kind of working with google and stuff and basically at the beginning",
    "start": "2857119",
    "end": "2862319"
  },
  {
    "text": "of march google went ahead and released this patch to um partners all the open handset alliance",
    "start": "2862319",
    "end": "2869599"
  },
  {
    "text": "and so life was boring or relatively sat around played with this bug in our own stuff and that was it around june device",
    "start": "2869599",
    "end": "2876240"
  },
  {
    "text": "manufacturers started to actually release updates we started actually seeing patches go out for devices samsung was",
    "start": "2876240",
    "end": "2882800"
  },
  {
    "text": "the first one i personally saw issue an update and i will actually give props to samsung they",
    "start": "2882800",
    "end": "2887839"
  },
  {
    "text": "actually issued an update to fix this bug on an old gingerbread 235 samsung stratosphere",
    "start": "2887839",
    "end": "2895040"
  },
  {
    "text": "device so this is you know to a certain extent props for the fact that they didn't go after and fix only their newer stuff they went back to",
    "start": "2895040",
    "end": "2901760"
  },
  {
    "text": "the really old gingerbread stuff and released patches for that too which is pretty darn cool because you know typically people feel that only the",
    "start": "2901760",
    "end": "2907119"
  },
  {
    "text": "new stuff gets the updates in this case you know not the case so then you know come july 3rd blue box",
    "start": "2907119",
    "end": "2913760"
  },
  {
    "text": "wound up releasing kind of like a teaser to promote this talk to gain some interest to hopefully get you guys here in the room",
    "start": "2913760",
    "end": "2918800"
  },
  {
    "text": "and a lot of media fanfare started happening took about 72 hours and then quite frankly right after all that stuff just",
    "start": "2918800",
    "end": "2925280"
  },
  {
    "text": "all hell broke loose so in the definition of what all hell broke loots means let's dig in and i realize this might be",
    "start": "2925280",
    "end": "2931760"
  },
  {
    "text": "a little a little short but there are some really interesting things if you look at timelines here",
    "start": "2931760",
    "end": "2937760"
  },
  {
    "text": "so briefly release the teaser around the teaser time other packages the other patches for the",
    "start": "2937760",
    "end": "2943119"
  },
  {
    "text": "other bugs were surfacing right there's a lot of media coverage then ultimately one way or another there was a public",
    "start": "2943119",
    "end": "2950400"
  },
  {
    "text": "open source project that got their hands on that patch that was circled around to google partners and they posted it into their",
    "start": "2950400",
    "end": "2956480"
  },
  {
    "text": "public repo as soon as it went public it took you know about a day ultimately the first exploit using that kind of patch to",
    "start": "2956480",
    "end": "2962800"
  },
  {
    "text": "figure out how it works was eventually released after that we started seeing um blue box released a free security scanner",
    "start": "2962800",
    "end": "2969359"
  },
  {
    "text": "actually telling people if they're patched for the bug since now it's out we want to at least inform people to",
    "start": "2969359",
    "end": "2974800"
  },
  {
    "text": "help them manage and understand the risk so release a free scanner that essentially tells you your patch status",
    "start": "2974800",
    "end": "2979839"
  },
  {
    "text": "and actually tries to at least look through what apps you got installed and see if any of them contain this exploit for this bug it actually parses",
    "start": "2979839",
    "end": "2986400"
  },
  {
    "text": "the zip files and looks for the signed and unsigned all that assorted stuff right",
    "start": "2986400",
    "end": "2991920"
  },
  {
    "text": "and then around that time is when that additional blog post came out about an additional method for the other patch then impactor showed",
    "start": "2991920",
    "end": "2999280"
  },
  {
    "text": "up and really automated point and clicked everything samsung started finding malware right the first instances of malware using",
    "start": "2999280",
    "end": "3005599"
  },
  {
    "text": "this vulnerability started popping up in the wild eventually the original one went out and",
    "start": "3005599",
    "end": "3010720"
  },
  {
    "text": "then other analyses and stuff showed up now the interesting thing is to call out from a timeline perspective",
    "start": "3010720",
    "end": "3016720"
  },
  {
    "text": "now july 6 was essentially when that that the patch went public and and for that",
    "start": "3016720",
    "end": "3022319"
  },
  {
    "text": "most part details of the bug were fully public took one day from",
    "start": "3022319",
    "end": "3027440"
  },
  {
    "text": "patch details public to first working poc exploit right it took 15 days for it to be fully",
    "start": "3027440",
    "end": "3033760"
  },
  {
    "text": "automated in a multi-platform ui multi-device agnostic awesome you know complete thing right now that",
    "start": "3033760",
    "end": "3041359"
  },
  {
    "text": "said it's tough to say you know ultimately if anyone knew you ahead of time and and ultimately kind of had advanced notice because they figured out",
    "start": "3041359",
    "end": "3047200"
  },
  {
    "text": "the bug so i'm only basing it upon the speculation of the public release date right",
    "start": "3047200",
    "end": "3053520"
  },
  {
    "text": "you know and again continuing on that's from the the date of public details released to the day we first saw malware",
    "start": "3053520",
    "end": "3059280"
  },
  {
    "text": "with 17 days how does that sound for your incidence response turnaround time is anyone working with that time frame for when",
    "start": "3059280",
    "end": "3065040"
  },
  {
    "text": "bugs show up to when bugs are exploited in the wild 17 days reasonable for most people to respond and get get up to snuff",
    "start": "3065040",
    "end": "3070800"
  },
  {
    "text": "now again data public details doesn't necessarily mean the malware guys didn't figure it out ahead of time and kind of",
    "start": "3070800",
    "end": "3076960"
  },
  {
    "text": "working on it prior to july 6th we don't know but i thought it was interesting if it really was if the clock started",
    "start": "3076960",
    "end": "3083760"
  },
  {
    "text": "at the the point of full public release details release 17 days turnaround time for malware in",
    "start": "3083760",
    "end": "3089520"
  },
  {
    "text": "the wild and just another interesting aside it took about seven days for people to",
    "start": "3089520",
    "end": "3095839"
  },
  {
    "text": "start noticing that there were other master key bugs in aosp patches sitting around there from the time that",
    "start": "3095839",
    "end": "3101280"
  },
  {
    "text": "they were kind of showing up to the time that actually someone said hey wait a minute there's another bug over here",
    "start": "3101280",
    "end": "3106319"
  },
  {
    "text": "that looks and works just like this original one right so so a week to kind of comb through asp now granted people were",
    "start": "3106319",
    "end": "3112400"
  },
  {
    "text": "looking because they were looking for that original patch so it's getting much more attention than normal right but they still missed you",
    "start": "3112400",
    "end": "3118079"
  },
  {
    "text": "know that the third one that i discussed with the authenticated attribute so it really depends upon what they were looking for",
    "start": "3118079",
    "end": "3124800"
  },
  {
    "start": "3123000",
    "end": "3207000"
  },
  {
    "text": "so another interesting kind of tidbit i want to kind of throw out to the crowd right um there was a lot of kind of you know",
    "start": "3124800",
    "end": "3130559"
  },
  {
    "text": "everyone's going to die because of this bug you know that was essentially i think the summary of most media coverage not realistically i mean it was really",
    "start": "3130559",
    "end": "3136880"
  },
  {
    "text": "kind of how many end users can be affected are end users really going to be hit by this is this the end user problem or is this",
    "start": "3136880",
    "end": "3142800"
  },
  {
    "text": "just kind of a really awesome jailbreak opportunity right so certainly you know it's no",
    "start": "3142800",
    "end": "3148160"
  },
  {
    "text": "doubt a really awesome jailbreak opportunity that's ultimately what we kind of position it as but it kind of turned into this media storm of what's",
    "start": "3148160",
    "end": "3154079"
  },
  {
    "text": "the end user risk right and then this concept came about is as long as end users are only going",
    "start": "3154079",
    "end": "3159599"
  },
  {
    "text": "to google play life is good don't get your abs from untrusted sources and then strange quotes started",
    "start": "3159599",
    "end": "3166240"
  },
  {
    "text": "happening as everyone knows that no user changes the allow",
    "start": "3166240",
    "end": "3171839"
  },
  {
    "text": "untrusted sources setting on their device to allow any applications to be installed from anywhere other than",
    "start": "3171839",
    "end": "3176880"
  },
  {
    "text": "google right it's apparently common knowledge i was late to that party i'm like",
    "start": "3176880",
    "end": "3182240"
  },
  {
    "text": "where's this data where's the statistic you know why does everyone but me know this and so if you look at kind of the media",
    "start": "3182240",
    "end": "3188800"
  },
  {
    "text": "if you look at quotes in some of the circles and some of these conversations i was having that were publicly reviewable a lot of people were",
    "start": "3188800",
    "end": "3195200"
  },
  {
    "text": "essentially saying it's statistically near zero the number of users who are essentially changing the",
    "start": "3195200",
    "end": "3201200"
  },
  {
    "text": "security setting to allow themselves to be affected with by untrusted sources they all only go to google hmm",
    "start": "3201200",
    "end": "3208800"
  },
  {
    "start": "3207000",
    "end": "3395000"
  },
  {
    "text": "okay so when we released our blue box security scanner it actually has the capability of",
    "start": "3208800",
    "end": "3214960"
  },
  {
    "text": "sending us some anonymous scanned uh telemetry data it's completely anonymous i can't even geo-locate what geographic region that",
    "start": "3214960",
    "end": "3221200"
  },
  {
    "text": "this stuff is coming from all anonymous and essentially just tells us are things being countered in the wild",
    "start": "3221200",
    "end": "3226559"
  },
  {
    "text": "that we would like to know that if bugs are starting to show up and um it happened to tell us basically this security setting",
    "start": "3226559",
    "end": "3232400"
  },
  {
    "text": "um so you know so anonymous sampling sets of about a quarter of a million devices",
    "start": "3232400",
    "end": "3239200"
  },
  {
    "text": "we got some feedback data on how many actually changed the setting or what was the",
    "start": "3239200",
    "end": "3244240"
  },
  {
    "text": "status of the setting do they allow untrusted sources or do they leave it as you know only google",
    "start": "3244240",
    "end": "3250079"
  },
  {
    "text": "play by default which comes by default and you know and and the media speculation the expert opinion is that users will not go",
    "start": "3250079",
    "end": "3257280"
  },
  {
    "text": "through all these security settings menus and ultimately find that checkbox uncheck that box to to open themselves to the opportunity",
    "start": "3257280",
    "end": "3264800"
  },
  {
    "text": "so quick pull of the crowd i kind of narrowed it down to one of four choices",
    "start": "3264800",
    "end": "3269920"
  },
  {
    "text": "which bucket ultimately do you feel and then again you know based on a quarter million devices which isn't a huge",
    "start": "3269920",
    "end": "3275359"
  },
  {
    "text": "sampling set but it's the only data i got nonetheless which bucket do you think ultimately it is now if you side with",
    "start": "3275359",
    "end": "3281359"
  },
  {
    "text": "the expert opinion and all the android enthusiasts and everything reported the media essentially the number's near zero but",
    "start": "3281359",
    "end": "3287599"
  },
  {
    "text": "what do you think give you two seconds think about it so if you said sixty-nine percent you are right",
    "start": "3287599",
    "end": "3293920"
  },
  {
    "text": "sixty-nine percent of people will invert it thirty-one percent of people were secure sixty-nine percent of people",
    "start": "3293920",
    "end": "3302240"
  },
  {
    "text": "at some point were not um and essentially what wound up happening is so 31 basically only allow google play",
    "start": "3302240",
    "end": "3308720"
  },
  {
    "text": "installs these are the people who have nothing to worry about and the other 69 which i think",
    "start": "3308720",
    "end": "3314880"
  },
  {
    "text": "statistically rounds to zero i think right um have have",
    "start": "3314880",
    "end": "3320799"
  },
  {
    "text": "a problem on their hand this number's a lot bigger than what that and i'll be perfectly honest i i feel this number is high and that's kind of part of what is",
    "start": "3320799",
    "end": "3327920"
  },
  {
    "text": "really truly our sampling population um we can't geographically correlate if it was kind of aggregated into one area",
    "start": "3327920",
    "end": "3333839"
  },
  {
    "text": "or another because it's truly anonymous so i kind of had to look at google play market and the little pie graph it shows",
    "start": "3333839",
    "end": "3339680"
  },
  {
    "text": "me and it was kind of all around the world a little here a little there and stuff but i can't attest to truly",
    "start": "3339680",
    "end": "3345359"
  },
  {
    "text": "what composed the quarter million devices so i would love to see this data on a scale more like 10 million 100",
    "start": "3345359",
    "end": "3350640"
  },
  {
    "text": "million but that said it was still even if this number was closer to 20",
    "start": "3350640",
    "end": "3355920"
  },
  {
    "text": "you know i mean like this is still big this says this is a bigger problem than even all of those android experts think",
    "start": "3355920",
    "end": "3361280"
  },
  {
    "text": "is and of course why i want to point out actually because we get the scanned",
    "start": "3361280",
    "end": "3366319"
  },
  {
    "text": "telemetry data when they rescan three percent of those people started with it unchecked",
    "start": "3366319",
    "end": "3372000"
  },
  {
    "text": "and then later on came back and scanned and they had checked the box so i can to a certain extent i can claim",
    "start": "3372000",
    "end": "3377599"
  },
  {
    "text": "three percent of our users were informed that they had an insecure setting problem and actually change the setting back hey three percent a small win but it's a",
    "start": "3377599",
    "end": "3383760"
  },
  {
    "text": "win nonetheless all right and then four percent we're just dudes changing the thing back and forth i think just seeing if the scanner did",
    "start": "3383760",
    "end": "3389280"
  },
  {
    "text": "something right i mean they're just it was odd it was off it was offering whatever",
    "start": "3389280",
    "end": "3394559"
  },
  {
    "text": "you know but the thing is why why are so many why is that number high it may not even be higher than 69 but it's definitely higher than zero",
    "start": "3394880",
    "end": "3401200"
  },
  {
    "start": "3395000",
    "end": "3518000"
  },
  {
    "text": "hopefully we can all agree to that why is it so high and then start looking at what are the causes",
    "start": "3401200",
    "end": "3406880"
  },
  {
    "text": "that cause users ultimately to want to change that setting well you know there are a lot of motivating reasons out there not just",
    "start": "3406880",
    "end": "3413680"
  },
  {
    "text": "pirating applications right i mean let's set that aside you know ultimately oh",
    "start": "3413680",
    "end": "3420559"
  },
  {
    "text": "someone else stop oh it's power we're almost done so essentially",
    "start": "3420559",
    "end": "3427680"
  },
  {
    "text": "one of the things that was interesting is like you look at amazon app store which is a completely trustable app store they do a lot of back end work to make sure it's",
    "start": "3427680",
    "end": "3433440"
  },
  {
    "text": "malware free and things like that but if you want to put amazon app store",
    "start": "3433440",
    "end": "3438640"
  },
  {
    "text": "on your non-amazon device which is certainly possible to have a little amazon app store client step number one published by amazon make",
    "start": "3438640",
    "end": "3445680"
  },
  {
    "text": "sure you uncheck allow unknown sources why because i mean for them to deliver apps they're not google so the phone will",
    "start": "3445680",
    "end": "3451920"
  },
  {
    "text": "reject it so you've got to change the setting to even use amazon on amazon devices if you start looking at mdm and mam",
    "start": "3451920",
    "end": "3457920"
  },
  {
    "text": "enterprise app stores and byod situations all of those need you to change the settings so your enterprise",
    "start": "3457920",
    "end": "3463119"
  },
  {
    "text": "can deliver you enterprise based applications we use an application called test flight which is a completely legitimate",
    "start": "3463119",
    "end": "3468640"
  },
  {
    "text": "application don't get me wrong this is not doing test flight but it's just a situation where to use test flight you",
    "start": "3468640",
    "end": "3473839"
  },
  {
    "text": "get it from google play and allows you to distribute beta copies of your applications to do that you've got to basically check",
    "start": "3473839",
    "end": "3479839"
  },
  {
    "text": "the unknown sources because test flight's got to install your apps there are compelling number of reasons and ways users encounter some where",
    "start": "3479839",
    "end": "3486799"
  },
  {
    "text": "ultimately they need to you know change that setting and just as much as the argument is users will never find the setting to",
    "start": "3486799",
    "end": "3492799"
  },
  {
    "text": "undo it even if they encounter situations that causes them to undo it they will then never find the setting",
    "start": "3492799",
    "end": "3498400"
  },
  {
    "text": "again to put it back right so once it's undone it's probably undone for life and you know and so there are very",
    "start": "3498400",
    "end": "3504640"
  },
  {
    "text": "plausible reasons why that number is not zero and that many people kind of overlook and that's not even counting",
    "start": "3504640",
    "end": "3510079"
  },
  {
    "text": "the uh geographies that ultimately are not served by google play at all so users have no choice but to go to",
    "start": "3510079",
    "end": "3516079"
  },
  {
    "text": "third-party app stores so kind of enclosure right sorry i'm getting your lunch and stuff",
    "start": "3516079",
    "end": "3522319"
  },
  {
    "start": "3518000",
    "end": "3535000"
  },
  {
    "text": "um you know so there's definitely blue boxes continuously kind of you know working in this space and stuff so you",
    "start": "3522319",
    "end": "3528480"
  },
  {
    "text": "can kind of check our blog for updates disclosures posting this presentation stuff that will be coming in a few weeks",
    "start": "3528480",
    "end": "3535680"
  },
  {
    "start": "3535000",
    "end": "3591000"
  },
  {
    "text": "and i do want a little bit of a quick thank you to the blue box android security team patrick felix and andrew who certainly",
    "start": "3535680",
    "end": "3542640"
  },
  {
    "text": "contributed through this uh big efforts and you know i do want to give props to the google security team for as much as the front-end interaction you",
    "start": "3542640",
    "end": "3548880"
  },
  {
    "text": "know ultimately saying here's a bug go do something with it there's a lot of behind-the-scenes work that ultimately has to happen to go",
    "start": "3548880",
    "end": "3554000"
  },
  {
    "text": "coordinate all of these vendors all these carriers and try to get that stuff out the door right so from the perspective of all the",
    "start": "3554000",
    "end": "3560400"
  },
  {
    "text": "people that i didn't see working behind the scenes this bug to get it out there whatever that definition uh definition",
    "start": "3560400",
    "end": "3565920"
  },
  {
    "text": "is ultimately i just at least want to say thank you and recognize that google does do work here despite any popular opinion to the contrary and",
    "start": "3565920",
    "end": "3574079"
  },
  {
    "text": "apologies to some co-workers who happen to have the luck of the draw draw the same slot as me so if you're in here you're",
    "start": "3574079",
    "end": "3579119"
  },
  {
    "text": "not in their talk and that's a bummer for them and i can't see their talk and that's just the way it is yeah so that's it so thank you very much",
    "start": "3579119",
    "end": "3585280"
  },
  {
    "text": "hopefully this was interesting",
    "start": "3585280",
    "end": "3593040"
  }
]