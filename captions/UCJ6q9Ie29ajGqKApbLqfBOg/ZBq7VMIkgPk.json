[
  {
    "text": "hi everyone thank you thank you for coming to this talk about TL bleed all",
    "start": "0",
    "end": "6330"
  },
  {
    "text": "right so big picture we are going to talk about a lots of kind of nitty-gritty",
    "start": "6330",
    "end": "11370"
  },
  {
    "text": "details about how the CPU works oh yeah",
    "start": "11370",
    "end": "16730"
  },
  {
    "text": "about how the CPU works so we're gonna talk about CPU caches Tilby how to",
    "start": "16730",
    "end": "23369"
  },
  {
    "text": "attack other processes through the CPU cache how to defend against that and how",
    "start": "23369",
    "end": "29099"
  },
  {
    "text": "this new attack vector using the TLB will work to bypass those defenses so we're going to steal cryptographic keys",
    "start": "29099",
    "end": "34350"
  },
  {
    "text": "from another process not supposed to be possible using completely new technique that is not through the cache briefly",
    "start": "34350",
    "end": "42930"
  },
  {
    "text": "about me I'm a PC shoot in the few SEC research group at the Free University in Amsterdam when the academic group",
    "start": "42930",
    "end": "49440"
  },
  {
    "text": "focusing on system security so we do both exploitative projects exploration",
    "start": "49440",
    "end": "55199"
  },
  {
    "text": "projects as well as defensive projects both on software and lately also be kind of dabbling in these Hardware texts so",
    "start": "55199",
    "end": "61649"
  },
  {
    "text": "do we use software techniques to exploit hybrid properties that give us side",
    "start": "61649",
    "end": "67470"
  },
  {
    "text": "channels if you want to kind of guess what my favorite kind of project is",
    "start": "67470",
    "end": "72630"
  },
  {
    "text": "between offensive and defense if this was my vanity license plate when I lived in Tennessee last year for six months",
    "start": "72630",
    "end": "79250"
  },
  {
    "text": "still proudly in my office in Amsterdam alright so a view of the talk is",
    "start": "79250",
    "end": "84689"
  },
  {
    "text": "Sarcelles in general what are they what can we do with them the example of science and software which are cache",
    "start": "84689",
    "end": "90900"
  },
  {
    "text": "attacks how can we protect against these cache attacks the two different ways and how does teal bleed fit in that picture",
    "start": "90900",
    "end": "97259"
  },
  {
    "text": "how does it work what are the properties of the TLB that make this possible and and and how well does it work let's",
    "start": "97259",
    "end": "104040"
  },
  {
    "text": "evaluate this thing and how did the work respond to this so first of all side charles superfast introduction I'll try",
    "start": "104040",
    "end": "111180"
  },
  {
    "text": "and keep it short customers you probably already know about this but just to set the stage Sarcelles is a way to leak information from a",
    "start": "111180",
    "end": "117930"
  },
  {
    "text": "system using side effects of how that system works in a way that the designer did not intend right so this only works",
    "start": "117930",
    "end": "125159"
  },
  {
    "text": "on saves I think from the 50s but if you the first kind of tumbler saves if you",
    "start": "125159",
    "end": "130950"
  },
  {
    "text": "touch a stethoscope to it and you can hear the tumblers fall one by one instead of so you can break the combination one by one",
    "start": "130950",
    "end": "136489"
  },
  {
    "text": "instead of in the set all at the same time that's only possible because of how the safe works and this is not what the designer intended so we can leak secrets",
    "start": "136489",
    "end": "144620"
  },
  {
    "text": "from a system like this the history of digital side channels goes all the way",
    "start": "144620",
    "end": "151040"
  },
  {
    "text": "back well much farther either but in in public life in recent memory it was all about smart cards smart cards processed",
    "start": "151040",
    "end": "156980"
  },
  {
    "text": "secrets sometimes even if you're the owner against person are the secrets and as a side effect of processing these secrets it generates all kinds of",
    "start": "156980",
    "end": "163790"
  },
  {
    "text": "signals into the world that sometimes depend on these secrets and ever whenever that's true we can sometimes leak these secrets from the smart card",
    "start": "163790",
    "end": "171290"
  },
  {
    "text": "as a side effect of how the system works it could be a power consumption electromagnetic radiation execution time",
    "start": "171290",
    "end": "177260"
  },
  {
    "text": "and in some cases even the signals might leak into a speaker giving rise to",
    "start": "177260",
    "end": "183110"
  },
  {
    "text": "acoustic crypt analysis so what is the software equivalent of this are these",
    "start": "183110",
    "end": "190370"
  },
  {
    "text": "Akash attacks so normally the abstraction that we're all given and are",
    "start": "190370",
    "end": "197359"
  },
  {
    "text": "given to believe is a process that virtual machines are perfectly isolated from each other in a computer system one",
    "start": "197359",
    "end": "203959"
  },
  {
    "text": "cannot read the memory of the other and this abstraction is is very very",
    "start": "203959",
    "end": "209060"
  },
  {
    "text": "comforting but the reality is different because there are many shared resources in a computing system that are the RAM",
    "start": "209060",
    "end": "214970"
  },
  {
    "text": "chips we're sharing the RAM chips pushing CPU cache for sharing probably many other resources that we maybe even",
    "start": "214970",
    "end": "221389"
  },
  {
    "text": "don't know about today and all of these whenever you share a resource like this this kind of abstraction starts to break",
    "start": "221389",
    "end": "228260"
  },
  {
    "text": "down this perfect isolation starts to break down whenever you share resources practically always allows you to send secret",
    "start": "228260",
    "end": "234980"
  },
  {
    "text": "messages or send messages to each other by observing the state of that resource and then depending on what you observe",
    "start": "234980",
    "end": "242150"
  },
  {
    "text": "you see that the other party that's also seeing this resource is sending you a message we call that curb or channel and",
    "start": "242150",
    "end": "248090"
  },
  {
    "text": "also sometimes that allows for leaking information that the other party is not",
    "start": "248090",
    "end": "254209"
  },
  {
    "text": "cooperating with and it these things could be secret so that's we call that a cycle so examples of this is you might",
    "start": "254209",
    "end": "262130"
  },
  {
    "text": "share a row in RAM or so RAM is accessed in these structures",
    "start": "262130",
    "end": "269060"
  },
  {
    "text": "called rows and whenever you switch from one one from one row to another it takes a certain amount of time and you could",
    "start": "269060",
    "end": "275360"
  },
  {
    "text": "observe this latency so that means that you can observe that the access pattern of other processes onto a Ram chip by",
    "start": "275360",
    "end": "282770"
  },
  {
    "text": "observing things that only you sorry that you can observe yourself so this is",
    "start": "282770",
    "end": "289550"
  },
  {
    "text": "the this histogram shows the latency difference the same thing goes for shared caches whenever all processes are",
    "start": "289550",
    "end": "296479"
  },
  {
    "text": "sharing a cache cache is critical for performance that's why they're never going to go away until well everything",
    "start": "296479",
    "end": "304130"
  },
  {
    "text": "changes and whenever you share a cache that also means you can observe whenever",
    "start": "304130",
    "end": "309560"
  },
  {
    "text": "someone else another process fills up the cache because you can see your own stuff is gone from there and we're going",
    "start": "309560",
    "end": "315380"
  },
  {
    "text": "to go into more detail about how that might work later on all of this is only possible because of shared resources",
    "start": "315380",
    "end": "321410"
  },
  {
    "text": "we're sharing the l1 l2 cache on a core we're sharing the l3 cache between all",
    "start": "321410",
    "end": "327050"
  },
  {
    "text": "these cores and because of these shared resources this kind of spying becomes possible so let's look at an example",
    "start": "327050",
    "end": "333919"
  },
  {
    "text": "this is all still just background information it's not my work this is just an example that sets the the",
    "start": "333919",
    "end": "340340"
  },
  {
    "text": "relevance for tle so this cache attack is an example of this is flush and",
    "start": "340340",
    "end": "346340"
  },
  {
    "text": "reload it's very common in operating systems that you should actually share",
    "start": "346340",
    "end": "352810"
  },
  {
    "text": "literally share exactly the same physical memory it's a very powerful technique to to reduce the work set size",
    "start": "352810",
    "end": "361070"
  },
  {
    "text": "because if if you're both doing the same thing with the same program and we don't have to copy that because of that it",
    "start": "361070",
    "end": "366680"
  },
  {
    "text": "means we can there's less copying going on there's hard cash utilization to work inside the working set size gets less",
    "start": "366680",
    "end": "372919"
  },
  {
    "text": "and everything is faster for for these reasons it also means that you're",
    "start": "372919",
    "end": "379430"
  },
  {
    "text": "playing with exactly the same physical memory that the other process is playing with but I mean using so let's say we",
    "start": "379430",
    "end": "386060"
  },
  {
    "text": "both there's a system call called a map let's say we're both running and we're using the same cryptographic library",
    "start": "386060",
    "end": "391130"
  },
  {
    "text": "maybe Lib do crypt or something like that we both map them into our own address",
    "start": "391130",
    "end": "396289"
  },
  {
    "text": "space and we're using exactly the same physical memory it means that if I tell the CPU which I can if I have access to that memory if I",
    "start": "396289",
    "end": "402780"
  },
  {
    "text": "tell the CPU to flush this piece of memory out of out of the cache and goes",
    "start": "402780",
    "end": "407820"
  },
  {
    "text": "to RAM and then I access it again it's going to be slow but if someone else my",
    "start": "407820",
    "end": "413190"
  },
  {
    "text": "victim use that memory in the meantime it's going to be fast again so that",
    "start": "413190",
    "end": "419220"
  },
  {
    "text": "gives us the side channel saying hey someone else uses a memory so this perfect isolation is gone so how does it",
    "start": "419220",
    "end": "427620"
  },
  {
    "text": "work so let's say that we are of course",
    "start": "427620",
    "end": "432720"
  },
  {
    "text": "the attacker so we're the lower bar and the red block indicates reloading and",
    "start": "432720",
    "end": "438170"
  },
  {
    "text": "blue indicates flushing so blue the the blue operation says send this piece of",
    "start": "438170",
    "end": "445080"
  },
  {
    "text": "memory away out of the cache wait a little bit we try to access it again and because we sent it away the next",
    "start": "445080",
    "end": "451320"
  },
  {
    "text": "operation the reload in red it takes a longer amount of time unless our victim which is using the same memory has used",
    "start": "451320",
    "end": "458400"
  },
  {
    "text": "it in the meantime this makes the second access fast sonali so as a side effect of our victim accessing the memory we",
    "start": "458400",
    "end": "465270"
  },
  {
    "text": "see a low latency on the second access so that gives us the Sychar and we can do all kinds of tricks with a primitive",
    "start": "465270",
    "end": "474090"
  },
  {
    "text": "like this and there are many more examples of a cache attacks like this",
    "start": "474090",
    "end": "479220"
  },
  {
    "text": "which use different mechanisms which don't require sharing but this is the easiest to explain but this is the general principle always so let's look",
    "start": "479220",
    "end": "490050"
  },
  {
    "text": "at an example of an attack that we can do with this let's say we have an aes implementation in a yes of course uses",
    "start": "490050",
    "end": "495480"
  },
  {
    "text": "the secret key that's supposed to of course remain secret but let's say the implementation has a floor sorry",
    "start": "495480",
    "end": "503460"
  },
  {
    "text": "implementers of this of this implementation that uses what we call tea tables this means that the",
    "start": "503460",
    "end": "510990"
  },
  {
    "text": "implementation will in the process of encrypting something it will look up in a precomputed table to speed things up",
    "start": "510990",
    "end": "518330"
  },
  {
    "text": "it'll it'll look up something that it needs for the to generate the encrypted stream and that thing is a wizards or of",
    "start": "518330",
    "end": "525030"
  },
  {
    "text": "the plaintext byte and of a key byte and as you can see from the syntax",
    "start": "525030",
    "end": "530980"
  },
  {
    "text": "what it wants is somewhere else in the table in other words somewhere else in",
    "start": "530980",
    "end": "536300"
  },
  {
    "text": "memory depending on what the plaintext byte is and what the key bug is so if we know what the plaintext is which is",
    "start": "536300",
    "end": "541850"
  },
  {
    "text": "often the case if we feed the encrypt or plain text that we know like a known plaintext attack and we observe where in",
    "start": "541850",
    "end": "547790"
  },
  {
    "text": "the table we're seeing these accesses then we can figure out by knowing what",
    "start": "547790",
    "end": "555860"
  },
  {
    "text": "the plaintext is we can also figure out which key byte was used to act to generate that access so we can compute the key bytes so as an example of how",
    "start": "555860",
    "end": "565250"
  },
  {
    "text": "that might work we here we here see this coloration this figure is from a paper called cloak that uses defense which we",
    "start": "565250",
    "end": "572060"
  },
  {
    "text": "can talk about later we can see a very strong correlation between the activity in a particular cache line and what the Playtex bite is so that allows us to",
    "start": "572060",
    "end": "578810"
  },
  {
    "text": "attack this implementation so let's see another outcome that we're going to talk",
    "start": "578810",
    "end": "584960"
  },
  {
    "text": "about data or in the context of TLB also so this is a I won't talk about all the details here because it doesn't matter",
    "start": "584960",
    "end": "590840"
  },
  {
    "text": "that much but the most important thing here is that this is a elliptic curve cryptography implementation in Lib G",
    "start": "590840",
    "end": "596510"
  },
  {
    "text": "crypt and I should say this is this is not the size of proof version right so there's there have been there's a child",
    "start": "596510",
    "end": "604040"
  },
  {
    "text": "proof version that is safer than this and there's even a mirror versions you even say for which we'll also talk about",
    "start": "604040",
    "end": "609680"
  },
  {
    "text": "but let's just for the sake of illustration look at this non side-channel proof version the this the",
    "start": "609680",
    "end": "615290"
  },
  {
    "text": "unsafety comes because of the second conditional here I mean the conditional here so if the scalar is the secret",
    "start": "615290",
    "end": "622070"
  },
  {
    "text": "value this is a function it might be called when you're signing something so",
    "start": "622070",
    "end": "627170"
  },
  {
    "text": "it needs a secret key which is which is stored in the scalar and then we do this multiplication which is a series of",
    "start": "627170",
    "end": "632690"
  },
  {
    "text": "duplications and conditional additions and the addition conditional depends on what the secret value is so we're",
    "start": "632690",
    "end": "638240"
  },
  {
    "text": "posting this secret be able to duplicate duplicate duplicate add duplicate duplicate add double add depending on",
    "start": "638240",
    "end": "644210"
  },
  {
    "text": "what the secret is so let's see that visualized in what what might this look like in the CPU cache so let's see we're",
    "start": "644210",
    "end": "650810"
  },
  {
    "text": "going to see on the top half here we're seeing the signal in the cache that is read so these are data reads and at the",
    "start": "650810",
    "end": "657680"
  },
  {
    "text": "lower half we see execution so this is the code accesses and you can see that",
    "start": "657680",
    "end": "663140"
  },
  {
    "text": "the let's see the blue is for zero so it's short it's only duplicating and green is for once so",
    "start": "663140",
    "end": "669520"
  },
  {
    "text": "it's longer but you can duplicate first and then in addition so you can see these signals they look like a mess but",
    "start": "669520",
    "end": "674800"
  },
  {
    "text": "they're still very different right so if we were if we can tell the difference",
    "start": "674800",
    "end": "681250"
  },
  {
    "text": "between one x span or the other then we can leak these key bits so let's put them one over the other and see if we",
    "start": "681250",
    "end": "687160"
  },
  {
    "text": "can tell any difference so here's a duplication there's duplication and then adding so if we can tell the cash",
    "start": "687160",
    "end": "692860"
  },
  {
    "text": "signature of this adding parts and I can I can kind of see some differences then we can then we have a side charm that",
    "start": "692860",
    "end": "699910"
  },
  {
    "text": "can leak the secret key all using the",
    "start": "699910",
    "end": "707710"
  },
  {
    "text": "CPU cache now can we make the algorithm better the implementation better so that",
    "start": "707710",
    "end": "715450"
  },
  {
    "text": "it's not possible anymore yeah we can do that we can unconditionally do the",
    "start": "715450",
    "end": "722190"
  },
  {
    "text": "duplication and the addition no matter what the secret key base will do just do both and then conditionally use the",
    "start": "722190",
    "end": "727870"
  },
  {
    "text": "result so what would that look like that's a zero bit that's a 1 bit now",
    "start": "727870",
    "end": "733839"
  },
  {
    "text": "this looks much better right we can't really tell the difference between one or the other there's a small exception",
    "start": "733839",
    "end": "739120"
  },
  {
    "text": "if you can spot it if we look at the green signal that's a fraction longer",
    "start": "739120",
    "end": "745540"
  },
  {
    "text": "than the blue signal do you see right at the end there's this there's this title bit of extra operation and that's the",
    "start": "745540",
    "end": "751960"
  },
  {
    "text": "conditional using of the result because we only want to use the result in the",
    "start": "751960",
    "end": "757450"
  },
  {
    "text": "case of a 1 bit because otherwise the Edition should not happen and in the case of the 1 bit you can see this tiny little bit of extra work that's done to",
    "start": "757450",
    "end": "764350"
  },
  {
    "text": "use this result and that is also a side channel that we can use and there's even",
    "start": "764350",
    "end": "769600"
  },
  {
    "text": "newer version of this code which is even safer but this is just so I'm not trying to make you look bad here that they're",
    "start": "769600",
    "end": "775600"
  },
  {
    "text": "doing a great job it's just to demonstrate or push to show to you that it's extremely hard to do the site realm",
    "start": "775600",
    "end": "781540"
  },
  {
    "text": "proof implementations at this arms race that's been going on ever since oh I",
    "start": "781540",
    "end": "786670"
  },
  {
    "text": "think 2005 roughly and ever and a new",
    "start": "786670",
    "end": "792160"
  },
  {
    "text": "cycle results are still coming out today and which which sometimes depend on the code but sometimes it also depends on",
    "start": "792160",
    "end": "799380"
  },
  {
    "text": "sometimes depends on a micro architectural problems the cpu which is very hard to predict so just trying to",
    "start": "799610",
    "end": "804829"
  },
  {
    "text": "say is extremely hard to write perfectly such on proof code and we maybe we should even expect to be able to do it",
    "start": "804829",
    "end": "810589"
  },
  {
    "text": "and for that reason it would be really great if there were generic defenses can we just deploy some some some cache",
    "start": "810589",
    "end": "818410"
  },
  {
    "text": "magic that makes even these unsafe implementations unmonitored but keep the",
    "start": "818410",
    "end": "824899"
  },
  {
    "text": "benefits of the cache now that would be great so let's look at that I'm going to",
    "start": "824899",
    "end": "832100"
  },
  {
    "text": "talk about three general ways to do this one is cache coloring so the cache looks something like this all these physical",
    "start": "832100",
    "end": "839060"
  },
  {
    "text": "pages have a color they call it colors they don't really have colors let's say 128 different ones and every physical",
    "start": "839060",
    "end": "848389"
  },
  {
    "text": "page every blue page so to speak will go to the blue part of the cache always that's just how the cache is partitioned",
    "start": "848389",
    "end": "856810"
  },
  {
    "text": "normally you don't notice this but it does mean that if you are trying to access if you as a process only get new",
    "start": "856810",
    "end": "863660"
  },
  {
    "text": "pages you can never see any cache activity of a read process so that's one way to do it another way to do it is use",
    "start": "863660",
    "end": "873170"
  },
  {
    "text": "this Intel COP feature called CAD cache allocation technology it partitions the cache in a different way it was not",
    "start": "873170",
    "end": "878810"
  },
  {
    "text": "intended for security but we could use it for security it was intended for more",
    "start": "878810",
    "end": "883940"
  },
  {
    "text": "predictable performance if you put a bunch of VMs on a machine and you let them access the cache using a partition",
    "start": "883940",
    "end": "890209"
  },
  {
    "text": "like this it won't make it faster but it'll make it very predictable because the cache usage does not it's not sort",
    "start": "890209",
    "end": "898310"
  },
  {
    "text": "of blocked not obstructed by other VMs running on the same machine and then one",
    "start": "898310",
    "end": "903319"
  },
  {
    "text": "final example is TSX which is which allows you to create memory transactions also an Intel CPU feature so we can say",
    "start": "903319",
    "end": "910430"
  },
  {
    "text": "ok I want to start a transaction do a bunch of operations do a commit and then that will become atomically visible what",
    "start": "910430",
    "end": "918290"
  },
  {
    "text": "the restriction is that in there in the time that the this transaction happens all of the data must fit into the cache",
    "start": "918290",
    "end": "924470"
  },
  {
    "text": "because as soon as it goes Ram we cut under the transaction anymore but kind of border so that's interesting also not in it for",
    "start": "924470",
    "end": "930430"
  },
  {
    "text": "security but it was intended for concurrent programming but what we can",
    "start": "930430",
    "end": "936760"
  },
  {
    "text": "use we can exploit this because of the fact that whenever someone is playing",
    "start": "936760",
    "end": "943270"
  },
  {
    "text": "tricks with your cache we're going to get evictions because the other side is trying to monitor is it in the cache or not and as a side effect of that the",
    "start": "943270",
    "end": "949300"
  },
  {
    "text": "transaction will abort so that the other party will hopefully not be able to deduce any information from that and",
    "start": "949300",
    "end": "954970"
  },
  {
    "text": "just to show you how that what the signal will look like also with flash Android on the AES attack you remember",
    "start": "954970",
    "end": "960070"
  },
  {
    "text": "this is the original signal has very strong correlation with it in but if the since the operation is done inside a TSX",
    "start": "960070",
    "end": "966430"
  },
  {
    "text": "transaction the signal is destroyed and that's really great because now we have an unsafe implementation that is that",
    "start": "966430",
    "end": "972340"
  },
  {
    "text": "cannot be attacked but the implementation did have to didn't have to change now that's really attractive",
    "start": "972340",
    "end": "978310"
  },
  {
    "text": "property this is work from a paper",
    "start": "978310",
    "end": "983710"
  },
  {
    "text": "called cloak which uses the Miss TSX feature to protect cryptographic implementations all right so all cash",
    "start": "983710",
    "end": "992290"
  },
  {
    "text": "problem solved dramatic pause so now we",
    "start": "992290",
    "end": "1000120"
  },
  {
    "text": "have the situation where we would like to have these very generic cash protections because it's very hard to do",
    "start": "1000120",
    "end": "1007140"
  },
  {
    "text": "a perfectly tight round proof implementation otherwise there are things in the that the compiler might do that will they will ruin your safety the",
    "start": "1007140",
    "end": "1015120"
  },
  {
    "text": "compiler might optimize something that depends on the secret the CPU might do something that depends on the secret that you can't really predict even today",
    "start": "1015120",
    "end": "1021630"
  },
  {
    "text": "it's hard to predict that but imagine future compilers or future CPUs so if",
    "start": "1021630",
    "end": "1027930"
  },
  {
    "text": "only we had these generic defenses now so this talk is about well even if you have these generic defenses that protect",
    "start": "1027930",
    "end": "1035670"
  },
  {
    "text": "against cache attacks they're perfectly isolated the cache what about the TLB",
    "start": "1035670",
    "end": "1041180"
  },
  {
    "text": "okay so by a show of hands who knows",
    "start": "1041180",
    "end": "1046709"
  },
  {
    "text": "what if she'll be is okay great",
    "start": "1046709",
    "end": "1053340"
  },
  {
    "text": "so the Tilby is something that caches page table lookup so this is the the the",
    "start": "1053340",
    "end": "1058800"
  },
  {
    "text": "way that these process isolations are provided is that all process have their",
    "start": "1058800",
    "end": "1065910"
  },
  {
    "text": "own address space and this is kind of a but it's of course it's unreal it's it's virtual right hence virtual memory and",
    "start": "1065910",
    "end": "1072150"
  },
  {
    "text": "this is this is provided by the CPU by these systems called page tables at page tables they map to the virtual address",
    "start": "1072150",
    "end": "1078330"
  },
  {
    "text": "space of each separate process onto the same physical address so it looks the",
    "start": "1078330",
    "end": "1083400"
  },
  {
    "text": "same pool of physical RAM and this provides very strong isolation properties and other and other and nice",
    "start": "1083400",
    "end": "1090180"
  },
  {
    "text": "features but looking up the translation from which address to physical address is very slow relatively speaking so it",
    "start": "1090180",
    "end": "1097650"
  },
  {
    "text": "would take four memory accesses before you can do your actual memory access and slow everything down by five times if",
    "start": "1097650",
    "end": "1102720"
  },
  {
    "text": "this were to happen every time fortunately we cache this information in this structure called the TLB till B",
    "start": "1102720",
    "end": "1109230"
  },
  {
    "text": "stands for translation lookaside buffer",
    "start": "1109230",
    "end": "1113330"
  },
  {
    "text": "so that should make you think well if",
    "start": "1115340",
    "end": "1122100"
  },
  {
    "text": "the cache is shared in that's dangerous if that betrays some activity of what",
    "start": "1122100",
    "end": "1127710"
  },
  {
    "text": "this process is doing then what about the till B if could it be that the TLB is shared and could that betray any",
    "start": "1127710",
    "end": "1133950"
  },
  {
    "text": "activity of what I'm doing it's very different because cash is all about data and code and stuff until B's about",
    "start": "1133950",
    "end": "1139050"
  },
  {
    "text": "translation so I don't know if it applies but what if it did so what we",
    "start": "1139050",
    "end": "1146550"
  },
  {
    "text": "know about the TLB is that it has a low level the l1 is very fast and relatively",
    "start": "1146550",
    "end": "1154140"
  },
  {
    "text": "small l2 is larger we know that it's partitioned this is according to the",
    "start": "1154140",
    "end": "1159150"
  },
  {
    "text": "documentation we know that it's partitioned into these things called sets and and ways so sets are just like",
    "start": "1159150",
    "end": "1167640"
  },
  {
    "text": "you saw with the memory cache white we have blue and red this that could be separate so that there's a blue set in",
    "start": "1167640",
    "end": "1174360"
  },
  {
    "text": "the red set and within a set we have 12 or 16 entries that are just a pool so",
    "start": "1174360",
    "end": "1181230"
  },
  {
    "text": "there could be anything in there but this is a very small set usually so we",
    "start": "1181230",
    "end": "1189630"
  },
  {
    "text": "know that the TLB has this partitioning just like the cache does and that's very important for us if you want to if you",
    "start": "1189630",
    "end": "1195660"
  },
  {
    "text": "want to access the TLB and if you want to try and monitor it cut its contents we also want to know that means we have",
    "start": "1195660",
    "end": "1200820"
  },
  {
    "text": "to know what to expect under normal conditions we want to know what to expect if we have exclusive access and what is the difference when",
    "start": "1200820",
    "end": "1206940"
  },
  {
    "text": "someone else is accessing it as well so therefore we have to know this structure of the TLB so what can we how are these",
    "start": "1206940",
    "end": "1215040"
  },
  {
    "text": "how many sets are there and what is the mechanism that decides this translation",
    "start": "1215040",
    "end": "1220560"
  },
  {
    "text": "goes into this set in that translation goes into that set and then all that stuff's not documented so let's try and",
    "start": "1220560",
    "end": "1225810"
  },
  {
    "text": "find out we use performance counters for this Intel CPU has many performance",
    "start": "1225810",
    "end": "1232530"
  },
  {
    "text": "counters that whenever you whenever something happens basically an event is counted it could be and in this case",
    "start": "1232530",
    "end": "1238920"
  },
  {
    "text": "we're interested in he'll be hits she'll be misses l1 misses l2 misses and",
    "start": "1238920",
    "end": "1246140"
  },
  {
    "text": "using counters like that we can device the experiment that accesses a bunch of addresses and then counts did we hit the",
    "start": "1246140",
    "end": "1253260"
  },
  {
    "text": "l1 did we hit the l2 if we do it even more do we continue to hit the l1 or continue to hit the l2 or miss it and so",
    "start": "1253260",
    "end": "1260760"
  },
  {
    "text": "we can do this experiment that says well let's just assume that for the lower level it has a linear structure so that",
    "start": "1260760",
    "end": "1266160"
  },
  {
    "text": "means that page 0 goes to slot 0 page one goes to slot 1 and page 16 if there",
    "start": "1266160",
    "end": "1272250"
  },
  {
    "text": "are 16 slots page 16 goes to 0 again so it's this sort of very natural round",
    "start": "1272250",
    "end": "1277530"
  },
  {
    "text": "circular structure so on that hypothesis we do this experiment to find to try and",
    "start": "1277530",
    "end": "1284340"
  },
  {
    "text": "find out how many sets there are and what the set size is so this is an experiment where the color indicates the",
    "start": "1284340",
    "end": "1290940"
  },
  {
    "text": "number of evictions that we see so whenever you see purple or dark there are no eviction so we can just access",
    "start": "1290940",
    "end": "1296190"
  },
  {
    "text": "all this we can access our experiment all the time without filling up the TLB completely but every now and again we we",
    "start": "1296190",
    "end": "1304980"
  },
  {
    "text": "hit this we do hit these colors and that means that ok now we have an access pattern that hits a small number of sets",
    "start": "1304980",
    "end": "1313550"
  },
  {
    "text": "all the time because apparently we're seeing addictions so and that tells something about what the set size what",
    "start": "1313550",
    "end": "1319350"
  },
  {
    "text": "the set size is and how many sets there are so we see from the graph that we we need at least four elements",
    "start": "1319350",
    "end": "1328050"
  },
  {
    "text": "to completely evict to said right because the lowest number of elements that cause evictions is 4 you can see",
    "start": "1328050",
    "end": "1333270"
  },
  {
    "text": "that with the third bar and the lowest number of sets that we have that can",
    "start": "1333270",
    "end": "1338429"
  },
  {
    "text": "cause this eviction a 60s that tell us we have 16 sets and each of them have four ways so the set size of four so",
    "start": "1338429",
    "end": "1347100"
  },
  {
    "text": "it's just nice to have this current information confirmed whether it's documented or not for the help to TLB we",
    "start": "1347100",
    "end": "1354300"
  },
  {
    "text": "all set some reverse engineering and we find out that it's not linear sometimes",
    "start": "1354300",
    "end": "1360150"
  },
  {
    "text": "if we try this one skylake when fairly recent into marker architecture and we find that this is all about pages right",
    "start": "1360150",
    "end": "1367620"
  },
  {
    "text": "so we have to discard the lower 12 bits of the virtual address and we find that what determines the slot number is not",
    "start": "1367620",
    "end": "1372809"
  },
  {
    "text": "simply as the lowest bits but it's the lowest 7 bits and in the lowest 7 bits above that drawer together and that",
    "start": "1372809",
    "end": "1380340"
  },
  {
    "text": "determines the slot number so expressed as a matrix multiplication this would be",
    "start": "1380340",
    "end": "1385860"
  },
  {
    "text": "the matrix for transforming a virtual address or a virtual page number I should say to to a slot number to a",
    "start": "1385860",
    "end": "1392730"
  },
  {
    "text": "hundred twenty eight to a slot number of 128 a maximum of seven bits for board",
    "start": "1392730",
    "end": "1400140"
  },
  {
    "text": "well it's twice eight bits and all this information is important because if you monitor the Tilby you have to be able to",
    "start": "1400140",
    "end": "1405900"
  },
  {
    "text": "predict what it's going to do and using this information we can predict what it does if we're using it exclusively and",
    "start": "1405900",
    "end": "1411140"
  },
  {
    "text": "therefore we can see the difference when someone else is using the TLB as well because that's what we want to do so now",
    "start": "1411140",
    "end": "1424950"
  },
  {
    "text": "that you know the structure let's see if we can see what's happening whether we",
    "start": "1424950",
    "end": "1431100"
  },
  {
    "text": "get hits from misses using only the latency that's really important oh I'm skipped slide sorry so let's see if",
    "start": "1431100",
    "end": "1437610"
  },
  {
    "text": "these teal B's are shared or not so let's look first we do this experiment and there's actually this experiment where we access all numb all possible",
    "start": "1437610",
    "end": "1445770"
  },
  {
    "text": "slots 0 to 16 on one CPU thread and 0 to 16 threads on another different CPU",
    "start": "1445770",
    "end": "1451950"
  },
  {
    "text": "thread and count how many evictions we see and if the Tilby is shared we should see if depending on who's accessing what and as",
    "start": "1451950",
    "end": "1458820"
  },
  {
    "text": "you can see with a detail be this this l1 detail B we do get the evictions that",
    "start": "1458820",
    "end": "1464639"
  },
  {
    "text": "we're expecting whenever we access slot zero on one thread SL 0 on the other thread receive Ixion's but not in other",
    "start": "1464639",
    "end": "1470429"
  },
  {
    "text": "combination so zero is shared with the zero one is shared with one and so on not so for the ITIL B so we find that",
    "start": "1470429",
    "end": "1477929"
  },
  {
    "text": "the ITIL B which towards these instruction actresses is partitioned between these two threads so it's not",
    "start": "1477929",
    "end": "1483899"
  },
  {
    "text": "not shared so we cannot see any code activity from the other thread which is a shame because that's a very powerful",
    "start": "1483899",
    "end": "1490320"
  },
  {
    "text": "source of information within the l2 TLB we also find that there is that it is shared but interestingly the slots do",
    "start": "1490320",
    "end": "1497369"
  },
  {
    "text": "not align so slot number zero on one thread is shared with stalled 64 or on",
    "start": "1497369",
    "end": "1503159"
  },
  {
    "text": "another thread so that tells us that probably in this hashing function that determines the virtual address that goes",
    "start": "1503159",
    "end": "1509639"
  },
  {
    "text": "to a particular slot number there's probably like an extra bit of information in there like the thread ID",
    "start": "1509639",
    "end": "1515669"
  },
  {
    "text": "or something like that and maybe this is just speculation but maybe that causes that Tilby users to be smoothed out",
    "start": "1515669",
    "end": "1520799"
  },
  {
    "text": "between threads maybe it causes less contention there ways just to guess but there has to be some reason for there is",
    "start": "1520799",
    "end": "1534299"
  },
  {
    "text": "a little a little summary of all these properties of the tibia that we reverse-engineer donor is a function of different looking at different and",
    "start": "1534299",
    "end": "1540539"
  },
  {
    "text": "microarchitectures so what we see I think the most interesting thing is what",
    "start": "1540539",
    "end": "1546269"
  },
  {
    "text": "is the hashing function that's for the l1 TLB is linear everywhere detail B is",
    "start": "1546269",
    "end": "1551879"
  },
  {
    "text": "shared everywhere the ITIL B is shared nowhere and the l2 till B has a huge",
    "start": "1551879",
    "end": "1558299"
  },
  {
    "text": "number of sets as you know skylake has 128 sets of 12 of size 12 each which is",
    "start": "1558299",
    "end": "1564919"
  },
  {
    "text": "1536 entries which is which is massive I think and these strange I think kind of",
    "start": "1564919",
    "end": "1573600"
  },
  {
    "text": "strange hashing functions that they use they started using since I think since karlik so I think that's kind of",
    "start": "1573600",
    "end": "1578970"
  },
  {
    "text": "interesting information to know that here that that's not documented so now",
    "start": "1578970",
    "end": "1588090"
  },
  {
    "text": "that we have the structure we can't use performance counters if we're an attacker because that's privileged and too slow so can we tell",
    "start": "1588090",
    "end": "1594929"
  },
  {
    "text": "the difference between accessing l1 and l2 missing l1 l2 using only latency it",
    "start": "1594929",
    "end": "1601230"
  },
  {
    "text": "turns out that we can severe in the histogram of l1 hits in blue and l1",
    "start": "1601230",
    "end": "1606360"
  },
  {
    "text": "misses and L 2 hits in orange and alpha l2 misses in in green so you can see",
    "start": "1606360",
    "end": "1613260"
  },
  {
    "text": "there's a big difference there the thing with green is that we have no Tilby entry so we have to do a page",
    "start": "1613260",
    "end": "1618990"
  },
  {
    "text": "table walk and this patient will walk it still goes still stays in the cache",
    "start": "1618990",
    "end": "1624330"
  },
  {
    "text": "because all these page page table cache lines will be will be cached still so we",
    "start": "1624330",
    "end": "1629970"
  },
  {
    "text": "have but just a really brilliant figure to ram so but we do have to do this walk",
    "start": "1629970",
    "end": "1635340"
  },
  {
    "text": "going well here's the first entry a second your third entry and do that'll just take some time to to assemble ok",
    "start": "1635340",
    "end": "1644280"
  },
  {
    "text": "let's try and use this knowledge to attack this not side-channel safe",
    "start": "1644280",
    "end": "1649490"
  },
  {
    "text": "function that we found in Lib G clip just as an example of just just to show can we use the TLB for stunts like this",
    "start": "1649490",
    "end": "1656960"
  },
  {
    "text": "so again we see that the secret value of the scalar depends determines the the",
    "start": "1656960",
    "end": "1664080"
  },
  {
    "text": "control flow path so only if it's 1 we do this addition otherwise we do not do this addition and we want to try and",
    "start": "1664080",
    "end": "1670620"
  },
  {
    "text": "tell the difference between one case and the other case between the scalar being 0 or 1 only using these data accesses",
    "start": "1670620",
    "end": "1676200"
  },
  {
    "text": "because we don't see any code X's because the TLB is not shared the I TLB",
    "start": "1676200",
    "end": "1681270"
  },
  {
    "text": "is not sure so can we do this well I don't know let's look at the let's simulate this in just like we did for",
    "start": "1681270",
    "end": "1688290"
  },
  {
    "text": "the cache but now we use we share what the signal might look like if we view it through the TLB instead of the cache",
    "start": "1688290",
    "end": "1696470"
  },
  {
    "text": "okay so here's a kind of a simulation of what that might look like if we know 16",
    "start": "1697400",
    "end": "1702929"
  },
  {
    "text": "different TLB sets and all these things are page level granularity says very very rough spatial resolutions it's not",
    "start": "1702929",
    "end": "1709500"
  },
  {
    "text": "great so what we were hoping for is that whenever there's a green and blue are",
    "start": "1709500",
    "end": "1715230"
  },
  {
    "text": "the secret values right the secret values that you don't know as an attack want try and find out based only on the measurements that you see so what we're",
    "start": "1715230",
    "end": "1721770"
  },
  {
    "text": "hoping for is that that one set would be active only for green and a different set would be active only for blue that",
    "start": "1721770",
    "end": "1728100"
  },
  {
    "text": "we don't see that we only every single set is always is active all the time or Never so that makes our job even harder",
    "start": "1728100",
    "end": "1735960"
  },
  {
    "text": "than it already was what we do find is that there is a temporal different",
    "start": "1735960",
    "end": "1743340"
  },
  {
    "text": "temporal different signal so they say the the signal in time is different depending on whether we're green or blue",
    "start": "1743340",
    "end": "1748740"
  },
  {
    "text": "now that's interesting information so you can see that the red rectangles here show you well there's this excess",
    "start": "1748740",
    "end": "1754050"
  },
  {
    "text": "pattern that looks like this in the green case and looks different in the blue case and that's a detection that we",
    "start": "1754050",
    "end": "1760950"
  },
  {
    "text": "might want to do so this is how this",
    "start": "1760950",
    "end": "1766800"
  },
  {
    "text": "looks just if we were to collect this",
    "start": "1766800",
    "end": "1772890"
  },
  {
    "text": "trace this how would look like we see and this is very very coarse I will only have 16 different sets and and the",
    "start": "1772890",
    "end": "1781140"
  },
  {
    "text": "resolution is 4k so yeah it you can kind of see a difference but it's not it",
    "start": "1781140",
    "end": "1788040"
  },
  {
    "text": "doesn't look great so we see that we're trying to sting which the blue case from the green case but what I'm saying here",
    "start": "1788040",
    "end": "1794100"
  },
  {
    "text": "is sort of a lot of noisy stuff in the same sets all the time so that looks",
    "start": "1794100",
    "end": "1802080"
  },
  {
    "text": "like it would be hard to analyze but at least we're seeing something so what we",
    "start": "1802080",
    "end": "1812940"
  },
  {
    "text": "try to do is and we monitor a single Tilby set and use information that",
    "start": "1812940",
    "end": "1819750"
  },
  {
    "text": "changes in time instead of in space will be much easier to just say one or two sets and see whenever I see something",
    "start": "1819750",
    "end": "1825150"
  },
  {
    "text": "here it must be a one wait we never see something here must be a zero bit or something like that but we can't do that because that distinction doesn't exist",
    "start": "1825150",
    "end": "1831240"
  },
  {
    "text": "there's no spatial separation so that makes it a little bit harder than the usual cache attack because usually you",
    "start": "1831240",
    "end": "1836520"
  },
  {
    "text": "can't find two different cache lines that mean this so what we try to do is",
    "start": "1836520",
    "end": "1842010"
  },
  {
    "text": "we use this machine learning algorithm oh yeah if you were at the keynote yesterday you hear Jeff must say kind of",
    "start": "1842010",
    "end": "1849030"
  },
  {
    "text": "felt to me like it was a bit marshy yeah we use all this advanced technology that we developed we use them mostly for",
    "start": "1849030",
    "end": "1855460"
  },
  {
    "text": "offensive purposes like machine learning and stuff so I don't want to say I'm part of the problem but we use machine",
    "start": "1855460",
    "end": "1861970"
  },
  {
    "text": "learning for offensive purposes so we try to we capture this this is the raw",
    "start": "1861970",
    "end": "1867430"
  },
  {
    "text": "signal that we capture for real on on the spy thread so we access it till be",
    "start": "1867430",
    "end": "1873520"
  },
  {
    "text": "set all the time most of the time the latency is low because that means that because our our sets the access that we",
    "start": "1873520",
    "end": "1881380"
  },
  {
    "text": "do it fits in the set completely fits perfectly so it's fast so we know that whenever the whenever the latency is",
    "start": "1881380",
    "end": "1888280"
  },
  {
    "text": "high whenever it's slow it means that someone else our victim process needed to use that",
    "start": "1888280",
    "end": "1893860"
  },
  {
    "text": "set for something and that tells us something about the activity that it's doing and we're trying to see what this",
    "start": "1893860",
    "end": "1902410"
  },
  {
    "text": "activity as you can see that we there's no easy way to make the distinguish distinguish situation there's no easy",
    "start": "1902410",
    "end": "1909100"
  },
  {
    "text": "way to distinguish it but there is this sort of signal that changes in time that",
    "start": "1909100",
    "end": "1916630"
  },
  {
    "text": "can tell us a lot more information so if you look at the moving average of this",
    "start": "1916630",
    "end": "1921940"
  },
  {
    "text": "latency then we can start to see these differences we see that the blue which is a zero key bit we see that the blue",
    "start": "1921940",
    "end": "1930700"
  },
  {
    "text": "has this very regular spiky pattern and that green looks a little bit Messier",
    "start": "1930700",
    "end": "1936310"
  },
  {
    "text": "but it's noticeably different from blue right so we want to be able to distinguish this so I probably wouldn't",
    "start": "1936310",
    "end": "1941860"
  },
  {
    "text": "right probably wouldn't write a program by hand probably couldn't write a program by hand that does this distinguishing and I didn't want to",
    "start": "1941860",
    "end": "1948960"
  },
  {
    "text": "so can we train a classifier that will automatically classify the zero secret",
    "start": "1948960",
    "end": "1955630"
  },
  {
    "text": "or the green or the one secret given enough training example because we can generate all the training examples that",
    "start": "1955630",
    "end": "1961120"
  },
  {
    "text": "we want right we assume that we know the binary that the victim is running and that we know the microarchitecture the victim is running and that is the only",
    "start": "1961120",
    "end": "1967030"
  },
  {
    "text": "two things that that that that determine",
    "start": "1967030",
    "end": "1973360"
  },
  {
    "text": "what the signal will look like so we can generate all the training examples of you want so we use this SVM classifiers",
    "start": "1973360",
    "end": "1980140"
  },
  {
    "text": "it's called support vector machine for those of you we don't know which works like this so",
    "start": "1980140",
    "end": "1987780"
  },
  {
    "text": "we we give it these green training examples and these red training examples and then the SVM classifier will try and",
    "start": "1987780",
    "end": "1993900"
  },
  {
    "text": "find this line this big black line that separates those two things so whenever it says gets whenever it sees a new",
    "start": "1993900",
    "end": "2000680"
  },
  {
    "text": "sample and it that that it doesn't know what it is doesn't know whether it's green or red they'd use that line to",
    "start": "2000680",
    "end": "2006710"
  },
  {
    "text": "determine well is this a green or a red sample and this kind of simplification",
    "start": "2006710",
    "end": "2012110"
  },
  {
    "text": "because this this graphic just shows a 2d feature space all of the all of the",
    "start": "2012110",
    "end": "2017120"
  },
  {
    "text": "points only have an X or a Y property so we can plot them very nicely in reality that's not enough serving in our case",
    "start": "2017120",
    "end": "2023960"
  },
  {
    "text": "we're going to use this big big signal which can be I know it could be like a",
    "start": "2023960",
    "end": "2029450"
  },
  {
    "text": "hundred measurements so we're going to use a hundred we're going to give the pacifier a hundred dimensional space and you can I'm going to tell it okay",
    "start": "2029450",
    "end": "2036830"
  },
  {
    "text": "these are 100 samples from one case this is a hundred samples from a different case can you please tell the difference just trying to find this separating line",
    "start": "2036830",
    "end": "2045260"
  },
  {
    "text": "or plane or hyperplane in our case to separate those two training sets that",
    "start": "2045260",
    "end": "2051260"
  },
  {
    "text": "that it gets so let's see how well it does so we see that the after much",
    "start": "2051260",
    "end": "2056629"
  },
  {
    "text": "experimentation we find that we can train an SVM classifier to tell the difference and we want it not just to",
    "start": "2056630",
    "end": "2062629"
  },
  {
    "text": "say when are you blue and winner you agree we want to say when does blue start because there could be multiple",
    "start": "2062630",
    "end": "2068149"
  },
  {
    "text": "blues in in a row and it would be much nicer if the classifier could tell us that and we find that it can so we can",
    "start": "2068150",
    "end": "2077090"
  },
  {
    "text": "it can tell us reliably when does blue start is plotted with with zero when",
    "start": "2077090",
    "end": "2082190"
  },
  {
    "text": "does green start uh spotted with one-and-a-half is well nothing's happening in it and it gets this gets",
    "start": "2082190",
    "end": "2089360"
  },
  {
    "text": "this done very well so we see start of this first one here I'm putting a that",
    "start": "2089360",
    "end": "2095120"
  },
  {
    "text": "thing this first one here is wrong so it's not the start of blue but all the other ones I right so I'm just as an",
    "start": "2095120",
    "end": "2100700"
  },
  {
    "text": "example is not completely perfect start of blue start of blue start of Green sort of proof start of blue start of",
    "start": "2100700",
    "end": "2106550"
  },
  {
    "text": "green sort of blue and that leads us directly use then we apply a peak detector that says when is a reserved",
    "start": "2106550",
    "end": "2112520"
  },
  {
    "text": "bit starting witnesses here but starting when is a 1-bit starting and that gives us a bit string that",
    "start": "2112520",
    "end": "2117740"
  },
  {
    "text": "the core can perfectly correspond without it perfectly corresponds to our guess of the secret key that does not",
    "start": "2117740",
    "end": "2127790"
  },
  {
    "text": "mean we're quite there yet because there could be glitches we do assume that we can guess that we can verify guesses of the secret key that means we can do a",
    "start": "2127790",
    "end": "2134869"
  },
  {
    "text": "little bit of brute force if the guess is not perfect and we find that most of the time we only need a tiny amount of",
    "start": "2134869",
    "end": "2140660"
  },
  {
    "text": "brute-forcing to get actually get the full secret key but how how good is it",
    "start": "2140660",
    "end": "2146210"
  },
  {
    "text": "so let's see we tried 500 tiles on these three different microarchitectures on the skylight board well and coffee like",
    "start": "2146210",
    "end": "2153050"
  },
  {
    "text": "we tried 500 times we find it very high after some brute forcing well how many how many percent of the time can we",
    "start": "2153050",
    "end": "2159230"
  },
  {
    "text": "guess the right key well it's mean over 98% using just a single capture trace that's quite unusual for a text like",
    "start": "2159230",
    "end": "2165230"
  },
  {
    "text": "this by the way so using just a single trace we well first we capture many",
    "start": "2165230",
    "end": "2172280"
  },
  {
    "text": "traces for training that takes about the training takes a minute then we capture a single trace in the",
    "start": "2172280",
    "end": "2178190"
  },
  {
    "text": "attack mode where we don't know the real truth and do a small amount of brute-forcing and we find that 98% of",
    "start": "2178190",
    "end": "2184880"
  },
  {
    "text": "the cases or more we can guess the real secret key after just a single trace and it in total that takes about 17 seconds",
    "start": "2184880",
    "end": "2191330"
  },
  {
    "text": "from capture time to including the classification and including the",
    "start": "2191330",
    "end": "2196700"
  },
  {
    "text": "brute-forcing in median the median case that takes just 17 seconds so you can",
    "start": "2196700",
    "end": "2202760"
  },
  {
    "text": "see here that most the time we need hardly any brute-forcing at all and in some cases that just means like oh it",
    "start": "2202760",
    "end": "2208190"
  },
  {
    "text": "looks like we get too many zeros here we'll take that out we'll put one in here and the most time you can guess it's very very quickly in less than 32",
    "start": "2208190",
    "end": "2214730"
  },
  {
    "text": "tries and sometimes we need many more tries but then at least eventually we",
    "start": "2214730",
    "end": "2219920"
  },
  {
    "text": "can guess it I mean 2 to the 30 in the worst case is still much better than 2 to the 256 ok as I've been promising you",
    "start": "2219920",
    "end": "2229940"
  },
  {
    "text": "all along can we bypass cache defenses with a technique like this and the answer is yes so we apply this cache defense",
    "start": "2229940",
    "end": "2237200"
  },
  {
    "text": "called Intel Cat Cat the cache allocation technology so that if you remember is the the feature that",
    "start": "2237200",
    "end": "2244100"
  },
  {
    "text": "separates cache sets sort of horizontally right so you can only access a part of the set and part of the",
    "start": "2244100",
    "end": "2249560"
  },
  {
    "text": "set and we find that if we separate the spy process and the victim process using this cat",
    "start": "2249560",
    "end": "2256280"
  },
  {
    "text": "technology so they can't see each other's cache lines we can still with a very high success rate of 96% guess the",
    "start": "2256280",
    "end": "2263930"
  },
  {
    "text": "secret key on the victim process okay so",
    "start": "2263930",
    "end": "2271609"
  },
  {
    "text": "a word about how this work was received",
    "start": "2271609",
    "end": "2275890"
  },
  {
    "text": "we report this to Intel and they said Matt we don't we're necessarily not",
    "start": "2277720",
    "end": "2285319"
  },
  {
    "text": "impressed basically they said well yeah you know what there's already enough guidance out there about how to write",
    "start": "2285319",
    "end": "2292400"
  },
  {
    "text": "perfectly safe cryptographic implementations and if they were perfectly safe it will also be immune to",
    "start": "2292400",
    "end": "2298460"
  },
  {
    "text": "TL bleed so we we see this as a not a",
    "start": "2298460",
    "end": "2304160"
  },
  {
    "text": "new side channel attack this was on done under hack the hacker one bug bounty program where for which side channels",
    "start": "2304160",
    "end": "2311569"
  },
  {
    "text": "are recently in scope so we thought okay we'll give that a shot and I honestly I",
    "start": "2311569",
    "end": "2318020"
  },
  {
    "text": "can see both sides of that it's just not a browser before okay",
    "start": "2318020",
    "end": "2323809"
  },
  {
    "text": "OpenBSD disabled hyper threading because of this or at least by default on Intel you know so they committed this couple",
    "start": "2323809",
    "end": "2330980"
  },
  {
    "text": "months ago disabling because they could see this risk and related risks to the",
    "start": "2330980",
    "end": "2336770"
  },
  {
    "text": "to TLB and pay translation is what made them decide to finally disable hyper",
    "start": "2336770",
    "end": "2342829"
  },
  {
    "text": "threading by default as a result there was lots of media coverage so he okay",
    "start": "2342829",
    "end": "2349940"
  },
  {
    "text": "all right not usually in the business of making logos for our friends of projects but the register was kind enough to make",
    "start": "2349940",
    "end": "2357140"
  },
  {
    "text": "one appear on the article anyway so we thought that was kind of cool now we can use this logo I thought they did a",
    "start": "2357140",
    "end": "2362480"
  },
  {
    "text": "really great job also of capturing well it's all about by these two hearts or the two threads I guess I think that was",
    "start": "2362480",
    "end": "2368900"
  },
  {
    "text": "pretty cool okay that's most what I have to say just",
    "start": "2368900",
    "end": "2374150"
  },
  {
    "text": "some credits we I did this work together with kuvira's IV and professors oh no I",
    "start": "2374150",
    "end": "2379849"
  },
  {
    "text": "did this work together with professors covers Ivy Christianity Frida and her pose some diagrams from this talk were",
    "start": "2379849",
    "end": "2388650"
  },
  {
    "text": "gratefully taken from other work flash and reload prefetch and drama by these authors ok so what are the takeaways",
    "start": "2388650",
    "end": "2400020"
  },
  {
    "text": "that I would like you to take away from this talk so outside the cache we can",
    "start": "2400020",
    "end": "2408660"
  },
  {
    "text": "still do practical reliable and high-resolution side channels that have realistic security results they even",
    "start": "2408660",
    "end": "2417690"
  },
  {
    "text": "they bypass cut the currently now generic cache defenses making it extra hard to rely on both the perfect",
    "start": "2417690",
    "end": "2423480"
  },
  {
    "text": "algorithm and a hedge against imperfect algorithms and so that's something to to",
    "start": "2423480",
    "end": "2434970"
  },
  {
    "text": "keep in mind whenever you make perfectly if you write algorithms or perfect cache",
    "start": "2434970",
    "end": "2440250"
  },
  {
    "text": "defense there are more side channels out there like the TLB and probably more resources that can also be exploited",
    "start": "2440250",
    "end": "2446340"
  },
  {
    "text": "that you should that shouldn't be forgotten so these are our twitter handles and the group project page thank",
    "start": "2446340",
    "end": "2454650"
  },
  {
    "text": "you all for listening [Applause]",
    "start": "2454650",
    "end": "2463509"
  },
  {
    "text": "I'm a little fast even so we have time for questions if you want",
    "start": "2463509",
    "end": "2468849"
  },
  {
    "text": "right okay so the question here is for the support vector machine can you can",
    "start": "2489130",
    "end": "2494420"
  },
  {
    "text": "you train on one configuration then transfer that to a different a different",
    "start": "2494420",
    "end": "2499670"
  },
  {
    "text": "environment I have not tried this I do not I do know that the only two things",
    "start": "2499670",
    "end": "2505910"
  },
  {
    "text": "that really matter for this for this transferring is which market architecture is the victim running and which binary is the victim running so we",
    "start": "2505910",
    "end": "2512330"
  },
  {
    "text": "do assume that we know that and I honestly don't know how well it would",
    "start": "2512330",
    "end": "2518750"
  },
  {
    "text": "transfer between mic architectures I would guess reasonably well as long as the Tilby configuration is is close",
    "start": "2518750",
    "end": "2525170"
  },
  {
    "text": "enough but we do yeah as long as the",
    "start": "2525170",
    "end": "2531650"
  },
  {
    "text": "hardware is the same that would definitely work right so the question is",
    "start": "2531650",
    "end": "2551510"
  },
  {
    "text": "is in talk had intended to separate caches from between processes or also",
    "start": "2551510",
    "end": "2557570"
  },
  {
    "text": "the TLB so no it's not it's only intended to separate the caches it's not a it's actually a good question because",
    "start": "2557570",
    "end": "2565550"
  },
  {
    "text": "the point of cat was not action out for security which but you could think you",
    "start": "2565550",
    "end": "2570980"
  },
  {
    "text": "could abuse it for security so it was intended for to get more predictable performance but part of performance of",
    "start": "2570980",
    "end": "2580430"
  },
  {
    "text": "course is also the TLB but for some reason that was not considered part of",
    "start": "2580430",
    "end": "2587440"
  },
  {
    "text": "the partitioning does it answer your",
    "start": "2587680",
    "end": "2593390"
  },
  {
    "text": "question yes they are that's why I",
    "start": "2593390",
    "end": "2601330"
  },
  {
    "text": "imagine that yes yes that's right yes so",
    "start": "2601330",
    "end": "2607940"
  },
  {
    "text": "this I'm not I'm not implying we broke at I'm just saying no no that's not what I meant so what I just meant is so cat",
    "start": "2607940",
    "end": "2616390"
  },
  {
    "text": "only applies to the cash but I just want to super clearly demonstrate well even if you have this cash defense it would",
    "start": "2616390",
    "end": "2622960"
  },
  {
    "text": "defend against cash touch holes but it would not defend against that she'll be attacking that was the part of the story",
    "start": "2622960",
    "end": "2630820"
  },
  {
    "text": "I think we have time okay the success",
    "start": "2630820",
    "end": "2640869"
  },
  {
    "text": "rate bit I was afraid you'd ask that I didn't know so it did indeed go from but",
    "start": "2640869",
    "end": "2648280"
  },
  {
    "text": "it went from 98% to 96% so I thought",
    "start": "2648280",
    "end": "2653400"
  },
  {
    "text": "well this still seems pretty high so I didn't investigate that honestly like I",
    "start": "2653400",
    "end": "2658900"
  },
  {
    "text": "can't imagine now that I'm thinking about it I can't imagine that the behavior would be sufficiently different so because you do have less cash",
    "start": "2658900",
    "end": "2665619"
  },
  {
    "text": "available to you so that might make the behavior of the victim process or the",
    "start": "2665619",
    "end": "2671109"
  },
  {
    "text": "spy process for the marriage just different enough maybe it's a little bit slower that the signal degrades a little",
    "start": "2671109",
    "end": "2677109"
  },
  {
    "text": "bit that's something I could speculate this happen thank you",
    "start": "2677109",
    "end": "2684329"
  },
  {
    "text": "so maybe one question about let's say other platforms embedded systems for",
    "start": "2685630",
    "end": "2693070"
  },
  {
    "text": "example arm or risk or whatever what do you need in in the processor or",
    "start": "2693070",
    "end": "2700180"
  },
  {
    "text": "structure or in the system structure to make this attack work right okay the",
    "start": "2700180",
    "end": "2705190"
  },
  {
    "text": "question is are we what about other architectures and other other platforms",
    "start": "2705190",
    "end": "2710230"
  },
  {
    "text": "are we do we see any possibility for working down what do we need for to work",
    "start": "2710230",
    "end": "2715900"
  },
  {
    "text": "did I get that right so what we the two things are necessary for this is",
    "start": "2715900",
    "end": "2721180"
  },
  {
    "text": "concurrent access to the to share Tilby so the Tilby has to be shared and it has",
    "start": "2721180",
    "end": "2727359"
  },
  {
    "text": "to be possible for there to be a concurrent access and what that will mean is that I don't I don't think there",
    "start": "2727359",
    "end": "2735580"
  },
  {
    "text": "are any architectures out there that have teal B's shared between cores doesn't make sense to me so I think what",
    "start": "2735580",
    "end": "2742000"
  },
  {
    "text": "we what's necessary is for they're to be hyper-threading within a core so we can have multiple threads of",
    "start": "2742000",
    "end": "2748610"
  },
  {
    "text": "execution active in parallel to some degree to a significant degree and that",
    "start": "2748610",
    "end": "2754700"
  },
  {
    "text": "the access to the TLB is shared between those execution threads in that and and",
    "start": "2754700",
    "end": "2761540"
  },
  {
    "text": "the deacon card acts as possible we briefly looked at a new AMD machine for",
    "start": "2761540",
    "end": "2769850"
  },
  {
    "text": "this was a was it again rising i think and to my i couldn't quite get to work",
    "start": "2769850",
    "end": "2777680"
  },
  {
    "text": "it seemed like the TLB and someone told me and what I saw seemed to confirm this",
    "start": "2777680",
    "end": "2783830"
  },
  {
    "text": "that the l1 TLB was completely associative so there's just one big pool of entries no sets which doesn't mean",
    "start": "2783830",
    "end": "2791660"
  },
  {
    "text": "the attack would be impossible but in fact in some sense it's easier because I have to pick a slot but but but the",
    "start": "2791660",
    "end": "2799820"
  },
  {
    "text": "accuracy was was very bad maybe they had better something to do with it for arm I",
    "start": "2799820",
    "end": "2808660"
  },
  {
    "text": "have been trying to find machines with hyper-threading and concurrent access seems to be very rare for arm seems to",
    "start": "2808660",
    "end": "2817760"
  },
  {
    "text": "be very rare there there are any hyper-threading configurations out there I found one which is what's called again",
    "start": "2817760",
    "end": "2823640"
  },
  {
    "text": "the KVM Thunder x2 which has very expensive workstation model so I",
    "start": "2823640",
    "end": "2829130"
  },
  {
    "text": "couldn't easily buy it to test but I am",
    "start": "2829130",
    "end": "2837500"
  },
  {
    "text": "waiting for some time I'm telling you someone who can probably arrange for",
    "start": "2837500",
    "end": "2843410"
  },
  {
    "text": "borrowed access to a machine like that and a denial toilet at their spark and power platforms which of course have",
    "start": "2843410",
    "end": "2849230"
  },
  {
    "text": "highly highly threaded the CPU implementations which on which this may be possible but I haven't tried that out",
    "start": "2849230",
    "end": "2856360"
  },
  {
    "text": "and and talking about let's say software countermeasures I mean as I understood",
    "start": "2856360",
    "end": "2862730"
  },
  {
    "text": "that the leakage was mostly on the on this data buffer not on the instruction he'll be cache right so if you would",
    "start": "2862730",
    "end": "2870410"
  },
  {
    "text": "kind of obscure the data masking for",
    "start": "2870410",
    "end": "2875690"
  },
  {
    "text": "example or yes that that would basically hit right yes",
    "start": "2875690",
    "end": "2880970"
  },
  {
    "text": "yes that would works if I understand you correctly you we only observe the data a trace of the data signal and if the data",
    "start": "2880970",
    "end": "2887599"
  },
  {
    "text": "if the data trace would be not depending on the secret then it wouldn't work is",
    "start": "2887599",
    "end": "2893119"
  },
  {
    "text": "that right yeah so you're right you're right about that that's the new version of this of this code that we take in",
    "start": "2893119",
    "end": "2899210"
  },
  {
    "text": "live decrypt does seem to have such a very strong data trace independent",
    "start": "2899210",
    "end": "2905539"
  },
  {
    "text": "implementation secret independent data presentation but what we argue in this",
    "start": "2905539",
    "end": "2911420"
  },
  {
    "text": "project is that for one it's very hard to make these implementations perfectly",
    "start": "2911420",
    "end": "2918049"
  },
  {
    "text": "sized channel safe because there could be artifacts in your compiler or your CPU architecture that you didn't foresee",
    "start": "2918049",
    "end": "2923569"
  },
  {
    "text": "or didn't even know who didn't know about and then same thing for your future revisions of compilers and CPS",
    "start": "2923569",
    "end": "2929260"
  },
  {
    "text": "and therefore it would be nice to have generic cache defenses but then this is",
    "start": "2929260",
    "end": "2935240"
  },
  {
    "text": "an example of how these generic cache defenses could be bypassed so you write",
    "start": "2935240",
    "end": "2940339"
  },
  {
    "text": "that if the algorithm is perfect and this won't work but it's also devilishly hard to make perfect logarithms",
    "start": "2940339",
    "end": "2947240"
  },
  {
    "text": "I would I would agree to that thank you thank thank you",
    "start": "2947240",
    "end": "2953289"
  },
  {
    "text": "I would it be reasonable to just say that if you use large or a huge page for",
    "start": "2959410",
    "end": "2967329"
  },
  {
    "text": "any compute sensitive crypto sensitive processes that that kind of obviates the whole TLB part of the problem so the",
    "start": "2967329",
    "end": "2977470"
  },
  {
    "text": "question is what would the effect be on large pages in the in the processor is",
    "start": "2977470",
    "end": "2983079"
  },
  {
    "text": "that is right well they're all gonna be in the same virtual page yeah yeah yeah",
    "start": "2983079",
    "end": "2988869"
  },
  {
    "text": "I need so that's true um I haven't tried this but I would expect that what we see",
    "start": "2988869",
    "end": "2994960"
  },
  {
    "text": "is that all of the signals that you you know saw in their chart you'll probably see them all added up I guess because",
    "start": "2994960",
    "end": "3000869"
  },
  {
    "text": "you see all this activity all the time I mean I'll guess it would make it so noisy I I guess it would be very noisy",
    "start": "3000869",
    "end": "3008430"
  },
  {
    "text": "but I don't know if you could make she could still make it distinguishing some of the signal is in there so I was kind",
    "start": "3008430",
    "end": "3013650"
  },
  {
    "text": "of expected would be it would still work they would probably be a bit harder to analyze but you're just not gonna have any more till the misses for anything",
    "start": "3013650",
    "end": "3020130"
  },
  {
    "text": "related to that process if it's gonna be all in the same large page huge page I'm",
    "start": "3020130",
    "end": "3026519"
  },
  {
    "text": "sorry I didn't catch that for you if that sensitive process is all running in the same huge page you're not gonna have",
    "start": "3026519",
    "end": "3032039"
  },
  {
    "text": "TLB misses for that one anymore probably or you're gonna have them all at once if",
    "start": "3032039",
    "end": "3039890"
  },
  {
    "text": "you're not gonna have small pages level granularity introspection into that",
    "start": "3039890",
    "end": "3045269"
  },
  {
    "text": "process it's either gonna be there or not for the whole execution of it anyway",
    "start": "3045269",
    "end": "3052349"
  },
  {
    "text": "for future research I'm afraid I feel like maybe we could talk about the soft",
    "start": "3052349",
    "end": "3058650"
  },
  {
    "text": "words thank you yeah do you have a",
    "start": "3058650",
    "end": "3074369"
  },
  {
    "text": "server where you tried yes that's right yes okay did you try doing this attack",
    "start": "3074369",
    "end": "3080640"
  },
  {
    "text": "while running other workloads oh you know would it reduce noise yeah that's what question we did what we see that",
    "start": "3080640",
    "end": "3091019"
  },
  {
    "text": "because it happens occasionally anyway so where we see is that sometimes man in trouble might occur or some other process might",
    "start": "3091019",
    "end": "3097319"
  },
  {
    "text": "be scheduled on top of the victim and then the signals gone of course so what we we did actually quantify this but",
    "start": "3097319",
    "end": "3105749"
  },
  {
    "text": "just from kind of eyeballing the charts that we see then we just see a long stretch of of zeros so the the spy",
    "start": "3105749",
    "end": "3113220"
  },
  {
    "text": "purchase just sees sort of perfect accesses because it because this because the victim is done running so if it's",
    "start": "3113220",
    "end": "3122789"
  },
  {
    "text": "interrupted in the middle of this secret operation then it would it would chop up",
    "start": "3122789",
    "end": "3130230"
  },
  {
    "text": "the signal so you would see it sort of in parts so I it'll probably be quite",
    "start": "3130230",
    "end": "3135450"
  },
  {
    "text": "hard to stitch that together automatically I think it would be possible so I think because the the time slices for the the secret operation is",
    "start": "3135450",
    "end": "3142230"
  },
  {
    "text": "so tiny that I don't think that'll really distort the signal that much it'll only kind of chop it up into time",
    "start": "3142230",
    "end": "3149220"
  },
  {
    "text": "and you'd have to splice that together again so I don't really have numbers on how reliable that would be but I think the signal is there if you're willing to",
    "start": "3149220",
    "end": "3155970"
  },
  {
    "text": "put it together thank you thank you",
    "start": "3155970",
    "end": "3162289"
  },
  {
    "text": "thank you everyone [Applause]",
    "start": "3162769",
    "end": "3167380"
  }
]