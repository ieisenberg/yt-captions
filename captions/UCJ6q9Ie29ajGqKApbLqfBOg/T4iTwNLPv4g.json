[
  {
    "start": "0",
    "end": "22000"
  },
  {
    "text": "it's great to be here in Singapore with you and we're very excited to present to you uh our latest research on the breach",
    "start": "40",
    "end": "6600"
  },
  {
    "text": "attack So today we're going to show you the latest findings that we have our um",
    "start": "6600",
    "end": "12400"
  },
  {
    "text": "latest techniques for uh extending this attack and uh we're going to also show",
    "start": "12400",
    "end": "17680"
  },
  {
    "text": "you our um tools that we've developed and we're making uh available today so uh first a few words about who",
    "start": "17680",
    "end": "24880"
  },
  {
    "start": "22000",
    "end": "36000"
  },
  {
    "text": "we are my name is theonis uh um I'm here with my colleague Dimitri good morning",
    "start": "24880",
    "end": "31519"
  },
  {
    "text": "and uh we are researchers at the security and crypto Lab at the University of Athens in Greece so just",
    "start": "31519",
    "end": "38480"
  },
  {
    "start": "36000",
    "end": "85000"
  },
  {
    "text": "uh uh what we're going to show you today is that https is broken and well we knew",
    "start": "38480",
    "end": "44160"
  },
  {
    "text": "that from black hat 2013 but today we're going to show you that well we kind of thought we fix this",
    "start": "44160",
    "end": "51160"
  },
  {
    "text": "by switching to blog ciphers with AES but in fact as is also vulnerable so",
    "start": "51160",
    "end": "58800"
  },
  {
    "text": "we'll show you why this is true and uh we'll show how you can Crypt analyze htps so first I want to gge a",
    "start": "58800",
    "end": "65158"
  },
  {
    "text": "little bit of the audience who here uh was or is aware of the breach talk in",
    "start": "65159",
    "end": "70840"
  },
  {
    "text": "black hat 2013 raise your hands okay not too many people so we're",
    "start": "70840",
    "end": "77520"
  },
  {
    "text": "going to go through the original blackhe hat um breach attack um real quick and",
    "start": "77520",
    "end": "83159"
  },
  {
    "text": "then we're going to show you our um latest findings so here here's the overview of",
    "start": "83159",
    "end": "90640"
  },
  {
    "start": "85000",
    "end": "124000"
  },
  {
    "text": "today's talk uh first we will review the original breach attack and then we'll we will go to our contributions we will",
    "start": "90640",
    "end": "97680"
  },
  {
    "text": "show you um some statistical methods of Performing this attack and and then we",
    "start": "97680",
    "end": "103000"
  },
  {
    "text": "will show you um how these can be used to attack both blog ciphers and noisy endpoints and then we will move on to",
    "start": "103000",
    "end": "109600"
  },
  {
    "text": "some optimization techniques that we can use to make the attack uh much F much faster and finally we will present our",
    "start": "109600",
    "end": "116360"
  },
  {
    "text": "tool which is called rupture and we will end the presentation with some suggestions for how to mitigate this",
    "start": "116360",
    "end": "122240"
  },
  {
    "text": "attack for good so that's the plan for this next hour so the original breach",
    "start": "122240",
    "end": "127560"
  },
  {
    "start": "124000",
    "end": "145000"
  },
  {
    "text": "research was presented in blackout USA 2013 by this gentleman over here Angelo pra with his two uh colleagues Neil",
    "start": "127560",
    "end": "134599"
  },
  {
    "text": "Harris and Yol Gluk uh we're very grateful to you Angelo for helping us also with this uh latest research here",
    "start": "134599",
    "end": "141640"
  },
  {
    "text": "uh we have based a lot of our work on their their paper and their presentation right so how does breach really work",
    "start": "141640",
    "end": "148800"
  },
  {
    "text": "well this is a a schema that shows how the attack works we have a victim in the middle and this",
    "start": "148800",
    "end": "154440"
  },
  {
    "text": "is the user browsing the internet on a coffee shop the attacker has access to",
    "start": "154440",
    "end": "159959"
  },
  {
    "text": "the network of the victim and can do various injections and measure things on",
    "start": "159959",
    "end": "165040"
  },
  {
    "text": "the network so this is the attacker and the victim visits HTTP websites like CNN",
    "start": "165040",
    "end": "171080"
  },
  {
    "text": "or Amazon or Ebay and what the attacker can do is they can alter the HTTP",
    "start": "171080",
    "end": "176560"
  },
  {
    "text": "responses to include arbitrary JavaScript code so this is regular HTP browsing this is a standard uh Ed cap or",
    "start": "176560",
    "end": "184280"
  },
  {
    "text": "better cap um alternation of data on the network and then this code executes on",
    "start": "184280",
    "end": "189640"
  },
  {
    "text": "the victus machine and connects back to the attacker and opens up a command and control Channel and then this command",
    "start": "189640",
    "end": "196120"
  },
  {
    "text": "and control channel can be used to make requests to a different endpoint which we call the Target website for for this",
    "start": "196120",
    "end": "202879"
  },
  {
    "text": "example it's Gmail uh and this connection is https and because of same origin policy the JavaScript that runs",
    "start": "202879",
    "end": "209599"
  },
  {
    "text": "in the CNN context is not able to of course read the data but the attacker",
    "start": "209599",
    "end": "215000"
  },
  {
    "text": "can see the data encrypted passing through the network so this way uh we can issue thousands of requests from the",
    "start": "215000",
    "end": "221519"
  },
  {
    "text": "browser of the victim and of course these requests include authentication cookies so the response will contain",
    "start": "221519",
    "end": "228319"
  },
  {
    "text": "Secrets right so this is the basic anatomy of the",
    "start": "228319",
    "end": "232879"
  },
  {
    "start": "231000",
    "end": "399000"
  },
  {
    "text": "attack hello can you hear me okay so uh original brids uh presented some",
    "start": "233400",
    "end": "240159"
  },
  {
    "text": "assumptions in order for the attack to be performed correctly we will use some",
    "start": "240159",
    "end": "245439"
  },
  {
    "text": "of these assumptions and we will also relax some others so first of all the Target website should use https and uh",
    "start": "245439",
    "end": "252879"
  },
  {
    "text": "in this case we don't uh mind if it also use hsts uh the response also should be",
    "start": "252879",
    "end": "258639"
  },
  {
    "text": "compressed using gzip and uh although the original Bridge actually attacked uh",
    "start": "258639",
    "end": "265080"
  },
  {
    "text": "websites that use stream stream ciphers uh we will relax this on also to block",
    "start": "265080",
    "end": "271520"
  },
  {
    "text": "ciphers uh finally the response should have zero noise and uh most importantly",
    "start": "271520",
    "end": "277360"
  },
  {
    "text": "it should contain a a parameter that is actually reflected inside the response",
    "start": "277360",
    "end": "283400"
  },
  {
    "text": "that is the the attacker should be able to inject some some plane text of his",
    "start": "283400",
    "end": "289440"
  },
  {
    "text": "own into the URL response into the response so the target of the original",
    "start": "289440",
    "end": "296440"
  },
  {
    "text": "Bridge was actually uh to steal some csrf Tok and uh by doing that the attacker could",
    "start": "296440",
    "end": "303759"
  },
  {
    "text": "impersonate the victim client to the server we will extend this to other",
    "start": "303759",
    "end": "309400"
  },
  {
    "text": "Secrets as well so uh okay so uh TI Wong",
    "start": "309400",
    "end": "316199"
  },
  {
    "text": "in uh 2012 in crime show that presented the",
    "start": "316199",
    "end": "321520"
  },
  {
    "text": "web length that is uh if the plain text",
    "start": "321520",
    "end": "326720"
  },
  {
    "text": "of uh if a plain text is uh has smaller length the if aex a has smaller length",
    "start": "326720",
    "end": "333120"
  },
  {
    "text": "than playx b then the encrypted plain text the encrypted Cipher text corresponding to PL text a should also",
    "start": "333120",
    "end": "340520"
  },
  {
    "text": "have a smaller uh length than the encrypted uh Cipher Tex of PL text B so",
    "start": "340520",
    "end": "347479"
  },
  {
    "text": "in this case we uh we actually use this in order to uh find a secret in the uh",
    "start": "347479",
    "end": "353479"
  },
  {
    "text": "Target website so let's see what the Gmail offers uh uh Google offers a mobile uh",
    "start": "353479",
    "end": "362479"
  },
  {
    "text": "view on gmail which can uh actually uses a a mobile search functionality which",
    "start": "362479",
    "end": "370240"
  },
  {
    "text": "uses post but also works on G so we can search using G parameters and actual",
    "start": "370240",
    "end": "376360"
  },
  {
    "text": "this this parameter that we we we use is reflected in the response body and this",
    "start": "376360",
    "end": "382280"
  },
  {
    "text": "parameter is also and this body also includes a csrf token that actually uh",
    "start": "382280",
    "end": "388080"
  },
  {
    "text": "is valid for all of GMA so uh we as the attacker can inject our",
    "start": "388080",
    "end": "393240"
  },
  {
    "text": "own code and this uh our own PL Tex and this PL Tex will be compressed along with a csrf token for all of",
    "start": "393240",
    "end": "400000"
  },
  {
    "text": "Gmail in this case we see a such a a a",
    "start": "400000",
    "end": "405440"
  },
  {
    "text": "response okay okay we see s a response uh in this",
    "start": "405440",
    "end": "410840"
  },
  {
    "text": "case uh we have some noise and noise is this token here so this token is",
    "start": "410840",
    "end": "415919"
  },
  {
    "text": "randomly generated and uh per request so uh we can control it uh we also have our",
    "start": "415919",
    "end": "424080"
  },
  {
    "text": "reflection this here is our search uh parameter and also we have the token which is the secret",
    "start": "424080",
    "end": "431160"
  },
  {
    "start": "431000",
    "end": "522000"
  },
  {
    "text": "so in this case what is our methodology uh we in order to to to",
    "start": "431160",
    "end": "438560"
  },
  {
    "text": "perform the attack the attacker should guess some part of the secret and uh in order to do that he needs to know a",
    "start": "438560",
    "end": "445039"
  },
  {
    "text": "prefix of the secret well in this case uh Google actually has made a life",
    "start": "445039",
    "end": "450319"
  },
  {
    "text": "easier because uh this prefix right here the the six first symbols of the token",
    "start": "450319",
    "end": "456960"
  },
  {
    "text": "are constant across uh accounts and uh logins so you can use it against",
    "start": "456960",
    "end": "464240"
  },
  {
    "text": "everyone uh so in order to bootst the attack we begin with the known prefix we",
    "start": "464240",
    "end": "470080"
  },
  {
    "text": "extend it and in this instance we have found some more characters until you4",
    "start": "470080",
    "end": "476800"
  },
  {
    "text": "and until VI and in this case we we testing uh the next character which is",
    "start": "476800",
    "end": "481919"
  },
  {
    "text": "the four is four so in this case four is the correct one and we expect the",
    "start": "481919",
    "end": "488120"
  },
  {
    "text": "reflected uh plain text to be compressed well with the token and to result in smaller compressed uh Cipher text",
    "start": "488120",
    "end": "495840"
  },
  {
    "text": "compared to say five or",
    "start": "495840",
    "end": "499840"
  },
  {
    "text": "six uh so attack methy as we saw is extending the secret one character at a",
    "start": "501680",
    "end": "508560"
  },
  {
    "text": "time by beginning uh with the gnome prefix this results in a complex of b o",
    "start": "508560",
    "end": "514440"
  },
  {
    "text": "n * Sigma where n is the length of the alphabet of the secret and sigma is the",
    "start": "514440",
    "end": "520360"
  },
  {
    "text": "alphabet of the secret so what are our our",
    "start": "520360",
    "end": "526920"
  },
  {
    "start": "522000",
    "end": "561000"
  },
  {
    "text": "contributions well we will extend the bridge attack and we will show some alternative Secrets instead of csrf",
    "start": "526920",
    "end": "533959"
  },
  {
    "text": "tokens that can be uh sto actually stolen we will attack nosan points and by NOS and by noise I mean either some",
    "start": "533959",
    "end": "542079"
  },
  {
    "text": "induced Noise by the end point like the the random token that we showed or the",
    "start": "542079",
    "end": "547720"
  },
  {
    "text": "block Cipher which actually introduces noise in our responses will'll optimize the attack in order to perform well",
    "start": "547720",
    "end": "553560"
  },
  {
    "text": "against this end points and finally we'll propose some mitigation techniques that could actually uh completely",
    "start": "553560",
    "end": "560600"
  },
  {
    "text": "eradicate the attack so what are those alternative secrets well actually anything that is",
    "start": "560600",
    "end": "568120"
  },
  {
    "start": "561000",
    "end": "598000"
  },
  {
    "text": "contained in the resp response planex body is a possible secret so this is this is G Gmail emails Facebook Chat",
    "start": "568120",
    "end": "576720"
  },
  {
    "text": "messages uh some financial data or anything else so Facebook has uh",
    "start": "576720",
    "end": "583040"
  },
  {
    "text": "actually used a medication technique by masking the csrf tokens which is actually good but uh it's not enough",
    "start": "583040",
    "end": "589959"
  },
  {
    "text": "because although it it revents the attack against the tokens it is not uh working for other secret in the in the",
    "start": "589959",
    "end": "597720"
  },
  {
    "text": "response body so um our most important contribution",
    "start": "597720",
    "end": "603600"
  },
  {
    "start": "598000",
    "end": "685000"
  },
  {
    "text": "actually is uh the statistical methods that we Implement in order to bypass noise and your",
    "start": "603600",
    "end": "611120"
  },
  {
    "text": "NES so okay what is our statistical method well what we want to do is",
    "start": "611120",
    "end": "616240"
  },
  {
    "text": "basically we want to make multiple requests per candidate uh symbol and",
    "start": "616240",
    "end": "621560"
  },
  {
    "text": "instead of just doing one and then we want to extract just a mean and this was also a comment in the original breach",
    "start": "621560",
    "end": "628399"
  },
  {
    "text": "work and the authors are right that it adds a square root of M parameter there where m is basically the the difference",
    "start": "628399",
    "end": "635240"
  },
  {
    "text": "between the maximum possible noise and the minimum possible noise and so we have this extra Factor here which makes",
    "start": "635240",
    "end": "641240"
  },
  {
    "text": "the attack actually slower and the reason this works is the the law of large numbers if you if you take more",
    "start": "641240",
    "end": "646680"
  },
  {
    "text": "samples from the same uh distribution you see that the um the variance is",
    "start": "646680",
    "end": "652760"
  },
  {
    "text": "become smaller and it it converges to the mean and and the the the statistical",
    "start": "652760",
    "end": "657800"
  },
  {
    "text": "mean converges to the distrib mean right so how do we do this for specifically",
    "start": "657800",
    "end": "663279"
  },
  {
    "text": "for Block ciphers well it's actually quite simple what we do is we perform 16",
    "start": "663279",
    "end": "668720"
  },
  {
    "text": "requests per uh candidate symbol instead of just one and in each of these requests we pad uh we we add some",
    "start": "668720",
    "end": "676399"
  },
  {
    "text": "padding in the reflection in the reflection uh value and this results in sometimes blocks being aligned right and",
    "start": "676399",
    "end": "682680"
  },
  {
    "text": "so I'll show it to you um in a in a bit and how this works in in a um diagram so",
    "start": "682680",
    "end": "688600"
  },
  {
    "start": "685000",
    "end": "702000"
  },
  {
    "text": "we introduced some artificial noise uh and that artificial noise is basically just some random characters that are um",
    "start": "688600",
    "end": "696079"
  },
  {
    "text": "added to the reflection and this causes the cipher text to either Cross or not cross a uh a boundary so okay this is uh",
    "start": "696079",
    "end": "704760"
  },
  {
    "text": "a bunch of requests that we're doing so you can see them in the background uh I'm I'm not sure if you can see the exact um URLs here but these are these",
    "start": "704760",
    "end": "712720"
  },
  {
    "text": "are the base URLs and this is the reflection that we're using I will explain if you can't see it it's okay I",
    "start": "712720",
    "end": "718160"
  },
  {
    "text": "will read it uh so this is the target endpoint it's just a a PHP um URL in",
    "start": "718160",
    "end": "724240"
  },
  {
    "text": "this case and then uh there is a reflected parameter called RF and the",
    "start": "724240",
    "end": "729600"
  },
  {
    "text": "equal symbol and then we have the reflection reflection value and this is exactly what will be what we're",
    "start": "729600",
    "end": "735440"
  },
  {
    "text": "searching for for example in Gmail and um here you can see a uh a prefix of the",
    "start": "735440",
    "end": "740480"
  },
  {
    "text": "secret that we know in this case is imped and then we have the candidate that we're trying which is a uh and so",
    "start": "740480",
    "end": "747600"
  },
  {
    "text": "you can see all these requests contain exactly the same uh guess and then the",
    "start": "747600",
    "end": "753240"
  },
  {
    "text": "we'll fill it up with a um Huffman pool which is exactly the same technique as in the original breach but the new thing",
    "start": "753240",
    "end": "759800"
  },
  {
    "text": "that we're doing here is that we're adding some extra padding here which is just five random characters so you can",
    "start": "759800",
    "end": "765160"
  },
  {
    "text": "see this here and we call this the block alignment alphabet and so you can see in the first in the first request we have",
    "start": "765160",
    "end": "771279"
  },
  {
    "text": "zero uh block alignment and here we have one then two up to 15 and so at some",
    "start": "771279",
    "end": "776920"
  },
  {
    "text": "point it will uh reach the Block B and it will create a new block so you can see this here so let's say the for",
    "start": "776920",
    "end": "783920"
  },
  {
    "start": "780000",
    "end": "832000"
  },
  {
    "text": "example uh we know the the five First characters the secret it's secet and",
    "start": "783920",
    "end": "789160"
  },
  {
    "text": "then we're trying to guess if it's t or U or V right and the red ones are the wrong ones and T of course the green one",
    "start": "789160",
    "end": "795680"
  },
  {
    "text": "is the right one and you can see we have added here some padding at the end XY",
    "start": "795680",
    "end": "801800"
  },
  {
    "text": "and um you can see that x y wol a wrong padding so this compresses to 15 16 16",
    "start": "801800",
    "end": "807279"
  },
  {
    "text": "but because it's encrypted with a yes this is rounded up to 16 exactly but if we if we guess the right um padding at",
    "start": "807279",
    "end": "814800"
  },
  {
    "text": "the end then this will cause the last bite to spill into a new block so we can",
    "start": "814800",
    "end": "819839"
  },
  {
    "text": "see this on the network it's 16 new bytes and um this is exactly what's happening there and this is compressed",
    "start": "819839",
    "end": "826160"
  },
  {
    "text": "to this is a this contains a compressed T of just one bite but it's expanded to",
    "start": "826160",
    "end": "831360"
  },
  {
    "text": "16 by the block Cipher right",
    "start": "831360",
    "end": "836560"
  },
  {
    "start": "832000",
    "end": "974000"
  },
  {
    "text": "so noises Okay so so uh in this case in",
    "start": "836560",
    "end": "842240"
  },
  {
    "text": "our experiments we used actually zero noes because we had an end point that we could control so uh response body had",
    "start": "842240",
    "end": "850240"
  },
  {
    "text": "the pl Tex response body actually contain zero noise but the problem is",
    "start": "850240",
    "end": "855560"
  },
  {
    "text": "that even this is not enough uh there are some uh some noises that we can't",
    "start": "855560",
    "end": "861240"
  },
  {
    "text": "predict uh Such Noise is uh can be found in the HTTP header so the connection fi",
    "start": "861240",
    "end": "868079"
  },
  {
    "text": "in the HTP header can either take a value of close or keep alive in the in the first case there are three four less",
    "start": "868079",
    "end": "876120"
  },
  {
    "text": "bites so this which result HP header is not actually compressed with the response body but it is encrypted so",
    "start": "876120",
    "end": "884120"
  },
  {
    "text": "these three more bites will actually result probably on uh one more block and",
    "start": "884120",
    "end": "890600"
  },
  {
    "text": "uh we don't like that because it might affect our results another case of uh",
    "start": "890600",
    "end": "896000"
  },
  {
    "text": "noise is uh the actually have the actual halfman code so in this case uh we can't we can't",
    "start": "896000",
    "end": "904199"
  },
  {
    "text": "predict how halfman tree will be encoded in during compression because we don't",
    "start": "904199",
    "end": "910680"
  },
  {
    "text": "know the response body we don't know the pl text so even after that we also",
    "start": "910680",
    "end": "916959"
  },
  {
    "text": "introduce our our noise in know for the block alignment so we don't know how",
    "start": "916959",
    "end": "922320"
  },
  {
    "text": "this noise for Block alignment will affect the halfman tree and consequently",
    "start": "922320",
    "end": "927880"
  },
  {
    "text": "the compression and the encryption that we finally see uh so it is uh it should",
    "start": "927880",
    "end": "935480"
  },
  {
    "text": "be in it's there should be more investigation at how halfman is is",
    "start": "935480",
    "end": "941600"
  },
  {
    "text": "actually uh made with gzip and if we can predict to some extent what the result",
    "start": "941600",
    "end": "949519"
  },
  {
    "text": "will be and finally another uh noise problem is content en coding which may",
    "start": "949519",
    "end": "955160"
  },
  {
    "text": "be chunked so this would result in uh the the compressed uh the compressed",
    "start": "955160",
    "end": "961440"
  },
  {
    "text": "plane text being chunked and the batteries may change per request and this may affect our",
    "start": "961440",
    "end": "968959"
  },
  {
    "text": "results okay so let's move on to some of our optimizations to uh bypass this",
    "start": "968959",
    "end": "975040"
  },
  {
    "start": "974000",
    "end": "1003000"
  },
  {
    "text": "these problems we have we propos here three optimizations the first one is the",
    "start": "975040",
    "end": "981279"
  },
  {
    "text": "divide and conquer technique the second one is the request soup and the third one is the browser",
    "start": "981279",
    "end": "986519"
  },
  {
    "text": "parallelization uh actually blocks ciphers it of 180 bits like a uh cause a",
    "start": "986519",
    "end": "994959"
  },
  {
    "text": "a 16 times slowdown so these techniques should result in a 500 times speed up",
    "start": "994959",
    "end": "1003759"
  },
  {
    "text": "theoretically uh what is divid and CER so divid and Coker uh states that uh in instead of uh",
    "start": "1003759",
    "end": "1012560"
  },
  {
    "text": "issuing the request sequentially one C at a time we divide the alphabet in two",
    "start": "1012560",
    "end": "1019240"
  },
  {
    "text": "halves the first one and the second one and we try each half",
    "start": "1019240",
    "end": "1024480"
  },
  {
    "text": "repeatedly uh in uh in this case it",
    "start": "1024480",
    "end": "1030360"
  },
  {
    "start": "1029000",
    "end": "1216000"
  },
  {
    "text": "uh okay this is an example so yes we have taken this from uh our",
    "start": "1030360",
    "end": "1036880"
  },
  {
    "text": "implementation and you can see here that in the first uh request uh we have the first half of the alphabet and we have",
    "start": "1036880",
    "end": "1043319"
  },
  {
    "text": "also added the halfman pool for the second half and in the second half in",
    "start": "1043319",
    "end": "1048960"
  },
  {
    "text": "the second request we have the the opposite uh so uh in this case the correct uh uh we",
    "start": "1048960",
    "end": "1058400"
  },
  {
    "text": "for each alphabet we we append the testing candidates to the known prefix",
    "start": "1058400",
    "end": "1064360"
  },
  {
    "text": "in this case iner so in the first case we try g f a k j all at the same time in",
    "start": "1064360",
    "end": "1071600"
  },
  {
    "text": "the second one we try the others the half of the alphabet that contains the",
    "start": "1071600",
    "end": "1076960"
  },
  {
    "text": "correct uh candidate should result in a minimum uh mean length so we should be",
    "start": "1076960",
    "end": "1083600"
  },
  {
    "text": "able to see this and after that we can continue like that so we try at first we",
    "start": "1083600",
    "end": "1089200"
  },
  {
    "text": "have the whole alphabet then we decide on the correct one in this case the the",
    "start": "1089200",
    "end": "1094320"
  },
  {
    "text": "left then the right then the left and all all the way down until we have only one candidate so this should be the",
    "start": "1094320",
    "end": "1101640"
  },
  {
    "text": "correct one and uh what's what this uh this technique actually does is use our",
    "start": "1101640",
    "end": "1110000"
  },
  {
    "text": "uh complexity from big o n * Sigma to Big O N * log Sigma so uh in case we",
    "start": "1110000",
    "end": "1119200"
  },
  {
    "text": "have an alphabet of say 64 symbols like uppercase letters lowercase letters",
    "start": "1119200",
    "end": "1124880"
  },
  {
    "text": "digits and hyphens this would practically give us a six times speed",
    "start": "1124880",
    "end": "1130640"
  },
  {
    "text": "up okay okay so uh this is the divide and",
    "start": "1130640",
    "end": "1136919"
  },
  {
    "text": "conquer technique um I'm unfortunately divide and conquer does not always work it it causes a little bit more noisy",
    "start": "1136919",
    "end": "1143760"
  },
  {
    "text": "behavior and sometimes to be honest with you it it can cause like the the",
    "start": "1143760",
    "end": "1149880"
  },
  {
    "text": "mechanism to work less with less probability right so in that case what you can do is you can fall back to the",
    "start": "1149880",
    "end": "1156799"
  },
  {
    "text": "sequential technique and spend more time but still get more uh get results with more certainty so uh one one strategy",
    "start": "1156799",
    "end": "1164760"
  },
  {
    "text": "could be you try with divide and conquer technique and if you don't have a lot of confidence then you can use the",
    "start": "1164760",
    "end": "1171200"
  },
  {
    "text": "sequential technique and uh we can actually extract confidence values by",
    "start": "1171200",
    "end": "1176360"
  },
  {
    "text": "running the uh running the attack measuring multiple uh running multiple requests for each candidate so as we",
    "start": "1176360",
    "end": "1183679"
  },
  {
    "text": "said here of course um this is not this is not going to be just one request it's going to be multiple requests because",
    "start": "1183679",
    "end": "1189919"
  },
  {
    "text": "you need the padding right so you need to combine this with the padding at the end the block alignment padding so uh",
    "start": "1189919",
    "end": "1197080"
  },
  {
    "text": "you you can run you can run multiple samples you can collect multiple samples and if the difference in length is quite",
    "start": "1197080",
    "end": "1202280"
  },
  {
    "text": "small it's maybe less than one bite after collecting multiple samples then you can say okay I'm not very confident",
    "start": "1202280",
    "end": "1208880"
  },
  {
    "text": "about this my confidence volume in bytes is less than one bite and so I will resort to the sequential uh strategy",
    "start": "1208880",
    "end": "1216480"
  },
  {
    "start": "1216000",
    "end": "1334000"
  },
  {
    "text": "instead right um the other technique that we use to optimize we call it request soup um this is an interesting",
    "start": "1216480",
    "end": "1224000"
  },
  {
    "text": "technique it's actually quite simple um and the reason we can do this we can do this optimization is because we need to",
    "start": "1224000",
    "end": "1230679"
  },
  {
    "text": "collect multiple samples for the same candidate so these uh these uh these multiple requests uh are not adaptive",
    "start": "1230679",
    "end": "1238159"
  },
  {
    "text": "based on each other they are the exact same candidates just with different paddings so we don't really need to",
    "start": "1238159",
    "end": "1244799"
  },
  {
    "text": "measure what is going on in the network in order to decide what to do next so uh",
    "start": "1244799",
    "end": "1250320"
  },
  {
    "text": "what we can do is we can say we can use the previous uh command and control Channel and our attacker can say to the",
    "start": "1250320",
    "end": "1257640"
  },
  {
    "text": "victim okay this is the candidate you want to try and please add the uh the",
    "start": "1257640",
    "end": "1262799"
  },
  {
    "text": "necessary padding of 0 up to 15 and maybe run this uh 10 times right run so",
    "start": "1262799",
    "end": "1269200"
  },
  {
    "text": "send 160 60 uh requests in batches of um",
    "start": "1269200",
    "end": "1275200"
  },
  {
    "text": "16 um for the respective uh uh block alignment padding and all of these can",
    "start": "1275200",
    "end": "1281600"
  },
  {
    "text": "go on the network together they we don't care because what we want to extract is really just uh the mean length",
    "start": "1281600",
    "end": "1289039"
  },
  {
    "text": "so what we do is we uh send multiple requests from the client at the same time uh then the browser of course has",
    "start": "1289039",
    "end": "1295919"
  },
  {
    "text": "specific behavior for this and we collect the total uh length of the cipher text that we measure and we are",
    "start": "1295919",
    "end": "1302919"
  },
  {
    "text": "unable to to tell which response corresponds to which request then not necessarily send sequentially but we",
    "start": "1302919",
    "end": "1309120"
  },
  {
    "text": "don't really care we just take the sum of the length and we just divided by the total amount of requests that were sent",
    "start": "1309120",
    "end": "1316120"
  },
  {
    "text": "and this way we can extract the mean among all of our samples and this actually speeds up the attack quite a",
    "start": "1316120",
    "end": "1321919"
  },
  {
    "text": "bit uh so how does the how does the browser do this right if you just do the",
    "start": "1321919",
    "end": "1327080"
  },
  {
    "text": "request soup idea you have the browser um put one request uh behind the other",
    "start": "1327080",
    "end": "1332200"
  },
  {
    "text": "pipelining them but if you also uh take uh into Advantage the browser polarization which is our other",
    "start": "1332200",
    "end": "1338720"
  },
  {
    "start": "1334000",
    "end": "1375000"
  },
  {
    "text": "optimalization you notice that the browser can send up to six requests in parallel right so this is a screenshot",
    "start": "1338720",
    "end": "1344840"
  },
  {
    "text": "of how requests go right so you have six requests running in parallel and then in the next in the next moment you have six",
    "start": "1344840",
    "end": "1351080"
  },
  {
    "text": "more requests running in parallel and six more requests running in parallel um so really we don't differentiate between",
    "start": "1351080",
    "end": "1357279"
  },
  {
    "text": "any of these we just run all of these together they're both pipelined and parallelized and we just measure the",
    "start": "1357279",
    "end": "1363240"
  },
  {
    "text": "whole length and this is why we call it a soup because it's just responses coming all together and we we don't tell",
    "start": "1363240",
    "end": "1369480"
  },
  {
    "text": "them apart we just measure the total length and because we don't need adaptation uh this this gives us good",
    "start": "1369480",
    "end": "1376360"
  },
  {
    "text": "results so what does this mean in terms of time well this is an indication if we",
    "start": "1376360",
    "end": "1381520"
  },
  {
    "text": "run a batch of 16 uh requests together we can do this is in 1.5 seconds um and",
    "start": "1381520",
    "end": "1388520"
  },
  {
    "text": "in fact as as uh as you increase the number of requests here this does not increase uh really linearly it increases",
    "start": "1388520",
    "end": "1395840"
  },
  {
    "text": "less and linearly because there is some overhead in communicating in the command and control Channel starting up new",
    "start": "1395840",
    "end": "1401480"
  },
  {
    "text": "requests from scratch Etc so the larger this is if this goes up by 10 for example this will go up by less than 10",
    "start": "1401480",
    "end": "1407520"
  },
  {
    "text": "so it's it's quite good if you want to collect more samples uh you don't really need proportional",
    "start": "1407520",
    "end": "1413120"
  },
  {
    "start": "1412000",
    "end": "1455000"
  },
  {
    "text": "time all right so today is an important moment for our team um this has been the",
    "start": "1413120",
    "end": "1419240"
  },
  {
    "text": "work uh of several months for us and um rupture is what we call our",
    "start": "1419240",
    "end": "1424440"
  },
  {
    "text": "implementation of these ideas uh it's implementing all our optimization techniques it's implementing all our",
    "start": "1424440",
    "end": "1430919"
  },
  {
    "text": "statistical techniques uh and it's uh it's not a proof of concept it's uh",
    "start": "1430919",
    "end": "1436039"
  },
  {
    "text": "complete uh ready code so be to that you can run on real systems and uh we are",
    "start": "1436039",
    "end": "1441279"
  },
  {
    "text": "making it open source right here in Singapore in blackhead Asia and uh we are inviting you to um download it and",
    "start": "1441279",
    "end": "1448600"
  },
  {
    "text": "modify it and play with it and try it on your own website and play with different targets and so on right so what is",
    "start": "1448600",
    "end": "1456799"
  },
  {
    "text": "rupture well it's available right here right now you can go on this URL it's",
    "start": "1456799",
    "end": "1462000"
  },
  {
    "text": "just been made public by my team uh back in Greece and we also have it here in the UR ruptur rate.com",
    "start": "1462000",
    "end": "1469000"
  },
  {
    "text": "um you can read also our white paper here which describes um uh many details",
    "start": "1469000",
    "end": "1475000"
  },
  {
    "text": "of our attack that we cannot um just uh tell you in only one hour and uh it's",
    "start": "1475000",
    "end": "1481240"
  },
  {
    "text": "MIT licensed um in fact we keep track of all our bugs and issues in that uh",
    "start": "1481240",
    "end": "1487720"
  },
  {
    "text": "GitHub GitHub uh repository and we actually we love pull requests we would",
    "start": "1487720",
    "end": "1493240"
  },
  {
    "text": "invite you to come in and um make changes in our code and try it out so so",
    "start": "1493240",
    "end": "1498480"
  },
  {
    "text": "I want to tell you a little bit about how rupture is structured and why we made it this way and how it can be used",
    "start": "1498480",
    "end": "1504120"
  },
  {
    "text": "uh one thing I want to tell you is that um because this attack is quite sophisticated it's uh it's difficult to",
    "start": "1504120",
    "end": "1511200"
  },
  {
    "text": "just make a tool and run it against all endpoints so if I want to be honest um",
    "start": "1511200",
    "end": "1517399"
  },
  {
    "text": "if you want to run Rapture against an endpoint you need to study a little bit that endpoint you need to find oh how the secret behaves what ciphers it uses",
    "start": "1517399",
    "end": "1525000"
  },
  {
    "text": "how it compresses things if there's a known uh prefix if there is noise how this noise behaves Etc and in that case",
    "start": "1525000",
    "end": "1532120"
  },
  {
    "text": "you need to configure Rapture to to make it work but we're trying to make this process easier so uh we call these",
    "start": "1532120",
    "end": "1538559"
  },
  {
    "text": "configuration targets so you can create a target for the csrf token of Gmail for example or you can create a target for",
    "start": "1538559",
    "end": "1545440"
  },
  {
    "text": "uh stealing for example a Facebook message and we want to make it as configurable as as we can but because",
    "start": "1545440",
    "end": "1551960"
  },
  {
    "text": "this attack is is very ad hoc and right now you will have to modify some code if",
    "start": "1551960",
    "end": "1557399"
  },
  {
    "text": "you want to attack and completely new endpoint that does not behave like an existing endpoint um so we don't really",
    "start": "1557399",
    "end": "1564039"
  },
  {
    "text": "pre- ship it with uh specific Targets on sites like Gmail or Facebook but um we",
    "start": "1564039",
    "end": "1570360"
  },
  {
    "text": "plan to release um to to make a sample endpoint on rupture it that you can run",
    "start": "1570360",
    "end": "1575880"
  },
  {
    "text": "it on it's not ready yet but we will launch it very soon and um we'll introduce a URL here on this hdps",
    "start": "1575880",
    "end": "1582679"
  },
  {
    "text": "website that you can experiment with that has zero noise and so this attack behaves quite quickly and you can see",
    "start": "1582679",
    "end": "1588399"
  },
  {
    "text": "bytes being decrypted and uh in fact we'll show you this uh tool running on a controlled endpoint with uh limited",
    "start": "1588399",
    "end": "1595159"
  },
  {
    "text": "noise in a few minutes right so this is um this is",
    "start": "1595159",
    "end": "1600320"
  },
  {
    "start": "1599000",
    "end": "1761000"
  },
  {
    "text": "rupture uh so a little a little bit about the design of this software um so",
    "start": "1600320",
    "end": "1605440"
  },
  {
    "text": "it's designed to be uh extensible and modular uh we we split it up into various components that are completely",
    "start": "1605440",
    "end": "1611799"
  },
  {
    "text": "um or they try to be independent of each other um this is different from the proofs of Concepts that we we had until",
    "start": "1611799",
    "end": "1618000"
  },
  {
    "text": "now uh there was uh some proof of concept By Angelo and some proof of concepts by us",
    "start": "1618000",
    "end": "1623480"
  },
  {
    "text": "but they were not really reusable and U writing new experiments with them was quite cumbersome in in our case we have",
    "start": "1623480",
    "end": "1630760"
  },
  {
    "text": "we split it up into various components I will show you the components and this this allows um cryptographers to",
    "start": "1630760",
    "end": "1637159"
  },
  {
    "text": "experiment with for example the Crypt analysis part without caring about the network part so um for example we have a",
    "start": "1637159",
    "end": "1645279"
  },
  {
    "text": "specific module for the strategy of creating or of uh creating new candidates and deciding where the attack",
    "start": "1645279",
    "end": "1651279"
  },
  {
    "text": "will go and we have a different module for doing the statistical analysis and comparing um requests and responses and",
    "start": "1651279",
    "end": "1658880"
  },
  {
    "text": "lengths and in in those cases for example cryptographers can say oh okay we don't want to measure the mean we",
    "start": "1658880",
    "end": "1664559"
  },
  {
    "text": "don't want to compare the mean give us the cipher and we'll do something clever more clever maybe we will use the higher",
    "start": "1664559",
    "end": "1670159"
  },
  {
    "text": "moments in this distribution and somehow I will find something else right so if you're a cryptographer please go ahead",
    "start": "1670159",
    "end": "1676200"
  },
  {
    "text": "and change these modules create uh um new analysts that do do different comparisons maybe you can do something",
    "start": "1676200",
    "end": "1682399"
  },
  {
    "text": "better um or for example the strategy technique you can swap between the serial technique and the divide and",
    "start": "1682399",
    "end": "1689159"
  },
  {
    "text": "conquer technique or if you have something else in mind maybe you can do that right instead of having a binary tree maybe you have you can have a",
    "start": "1689159",
    "end": "1695480"
  },
  {
    "text": "turnar r tree because oh okay it's faster but it's also a little bit more accurate so that's the right balance so",
    "start": "1695480",
    "end": "1701360"
  },
  {
    "text": "it's it's made to be uh configurable and extensible in this way this is also a general web attack framework um this is",
    "start": "1701360",
    "end": "1708480"
  },
  {
    "text": "interesting um the mechanism I showed you previously the command and control Channel this is actually something that",
    "start": "1708480",
    "end": "1713720"
  },
  {
    "text": "we do um the rupture framework deploys a client code that maintains a persistent",
    "start": "1713720",
    "end": "1719600"
  },
  {
    "text": "connection and this can be used for very many attacks for example a crime and poodle uh previous attacks against TLS",
    "start": "1719600",
    "end": "1726559"
  },
  {
    "text": "could be easily coded in in uh Rapture and in fact we have a team of two Master",
    "start": "1726559",
    "end": "1732159"
  },
  {
    "text": "students that are implementing crime right now um it's mitigated but I mean it's an interesting experiment uh so if",
    "start": "1732159",
    "end": "1738679"
  },
  {
    "text": "you want to experiment with new attacks you can just code them up in U in rupture and see how they work out uh",
    "start": "1738679",
    "end": "1745080"
  },
  {
    "text": "finally we make a scalable so if you are an attacker and want to attack multiple victims on multiple networks you can run",
    "start": "1745080",
    "end": "1751640"
  },
  {
    "text": "one Rapture server and uh deploy multiple clients and then collect data in a central location so that you can",
    "start": "1751640",
    "end": "1757840"
  },
  {
    "text": "analyze it later or compare it across uh different endpoints and so on so forth",
    "start": "1757840",
    "end": "1763399"
  },
  {
    "start": "1761000",
    "end": "2040000"
  },
  {
    "text": "right so this is um diagram of our attack I know it's not very readable but I will read what it says so this is",
    "start": "1763399",
    "end": "1770039"
  },
  {
    "text": "similar to the or uh the first diagram that I showed you except it shows how the software components um play a role",
    "start": "1770039",
    "end": "1777279"
  },
  {
    "text": "here in realizing each part of the attack um you can find this shape and a better explanation in our paper that you",
    "start": "1777279",
    "end": "1783679"
  },
  {
    "text": "can find on on our website it's much more detailed than what I can say here so I invite you to to download it and",
    "start": "1783679",
    "end": "1789559"
  },
  {
    "text": "read it and give us your feedback so again we have one victim here and the victim is connecting to the web um",
    "start": "1789559",
    "end": "1796240"
  },
  {
    "text": "through HTTP insecurity HTTP on Amazon eBay CNN dvn art and we have this",
    "start": "1796240",
    "end": "1802600"
  },
  {
    "text": "component which we call the injector the injector is just a series of better cap scripts uh essentially that what it does",
    "start": "1802600",
    "end": "1809720"
  },
  {
    "text": "is when it sees an HTTP connection go coming through it puts in some uh client JavaScript code and this is the client",
    "start": "1809720",
    "end": "1816600"
  },
  {
    "text": "JavaScript code um this is also our our code it's a different module H the client code is actually quite minimal we",
    "start": "1816600",
    "end": "1822720"
  },
  {
    "text": "don't do almost anything in this JavaScript portion um this is designed so that it can just receive reive",
    "start": "1822720",
    "end": "1828720"
  },
  {
    "text": "commands from our server which is here the adversarial Network and execute them so this is actually good for an",
    "start": "1828720",
    "end": "1834760"
  },
  {
    "text": "adversary because if the client receives the malware that we have here they they",
    "start": "1834760",
    "end": "1839799"
  },
  {
    "text": "cannot see really what is going on so if you develop a smarter attack the client will not really see what's going on it",
    "start": "1839799",
    "end": "1845840"
  },
  {
    "text": "will just receive commands and execute them in a dummy way so this is why we made it this way so this client here uh",
    "start": "1845840",
    "end": "1853440"
  },
  {
    "text": "makes the victim perform um https requests to the Target these could be protected with hsts by the way we don't",
    "start": "1853440",
    "end": "1860480"
  },
  {
    "text": "care the there's no padlock being broken in this attack the the victim doesn't see anything um and we have the the",
    "start": "1860480",
    "end": "1867639"
  },
  {
    "text": "sniffer component here which is written in Python and also collaborates with the injector to perform AR spoofing and this",
    "start": "1867639",
    "end": "1874960"
  },
  {
    "text": "what this does is it reads the data coming in the network the cipher text and simply reports them to the",
    "start": "1874960",
    "end": "1881159"
  },
  {
    "text": "adversarial Network so the idea is that the the injector and the sniffer they could run in a small device on the um",
    "start": "1881159",
    "end": "1888080"
  },
  {
    "text": "victims Network like a Raspberry Pi maybe um it's really tiny and uh the",
    "start": "1888080",
    "end": "1893519"
  },
  {
    "text": "attacker the adversary can have a more powerful work uh horse on their own network that can analyze and do anything",
    "start": "1893519",
    "end": "1900639"
  },
  {
    "text": "that is CPU intensive and we want it to also be persistent so this is the adversary and the adversary maintains",
    "start": "1900639",
    "end": "1907039"
  },
  {
    "text": "the services here we have uh one service that we call a real-time service this is",
    "start": "1907039",
    "end": "1912200"
  },
  {
    "text": "written in uh JavaScript in nodejs um and what this does is it maintains an",
    "start": "1912200",
    "end": "1917600"
  },
  {
    "text": "open websocket connection with a client so this is the command and control Channel um this portion here is not",
    "start": "1917600",
    "end": "1923480"
  },
  {
    "text": "really very clever what it does is basically keeps a connection open and then it allows the uh farther back end",
    "start": "1923480",
    "end": "1929440"
  },
  {
    "text": "to take the decisions on how to how to move with the attack what kind of work",
    "start": "1929440",
    "end": "1934600"
  },
  {
    "text": "it sends to the client and so on so the the real core of of our work is here",
    "start": "1934600",
    "end": "1939720"
  },
  {
    "text": "this python um script it's based on on Jango and what it does is it has two",
    "start": "1939720",
    "end": "1946240"
  },
  {
    "text": "important components called the strategy and the analyst the strategy is responsible for driving the attack and",
    "start": "1946240",
    "end": "1951799"
  },
  {
    "text": "taking decisions um dealing with things like divide and conquer or sequential attacks um dealing with things such as",
    "start": "1951799",
    "end": "1959000"
  },
  {
    "text": "the padding um and essentially in the end receiving data from the sniffer and",
    "start": "1959000",
    "end": "1964120"
  },
  {
    "text": "sending um what they what the strategy wants to do it tells it to the real-time service which forwards it to the client",
    "start": "1964120",
    "end": "1970399"
  },
  {
    "text": "uh we also have the analyst which does the statistical um statistical part of the attack so what it can do is it",
    "start": "1970399",
    "end": "1977000"
  },
  {
    "text": "Compares just two distributions based on samples so this is completely",
    "start": "1977000",
    "end": "1982120"
  },
  {
    "text": "mathematical and it's it's a good place for crypto cryptographers to experiment because they don't have to deal with any",
    "start": "1982120",
    "end": "1988639"
  },
  {
    "text": "of the networking stuff they just see some samples that have been collected and then they have to write code that",
    "start": "1988639",
    "end": "1993799"
  },
  {
    "text": "compares things so they can do smarter things in there so you can see how we made it modular in this way and finally",
    "start": "1993799",
    "end": "1999559"
  },
  {
    "text": "we have a sqi database where we persistently store the data of the attack uh so all the data all the cipher",
    "start": "1999559",
    "end": "2006880"
  },
  {
    "text": "Texs collected are are put there and um this can be analyzed again in the future",
    "start": "2006880",
    "end": "2012639"
  },
  {
    "text": "of course this attack is adaptive but if you want to keep this specific adaptation that we used you can",
    "start": "2012639",
    "end": "2018600"
  },
  {
    "text": "reanalyze this data in the future with potentially new methods and see if they work the same or not um and if the",
    "start": "2018600",
    "end": "2025240"
  },
  {
    "text": "victim of course if the victim Network goes down the victim shuts down their computer you still have a persistent um",
    "start": "2025240",
    "end": "2032000"
  },
  {
    "text": "your persistent data right there and uh you can keep it outside of the network that can be more U unstable right so",
    "start": "2032000",
    "end": "2039200"
  },
  {
    "text": "this is the uh attack framework there uh one nice thing is the",
    "start": "2039200",
    "end": "2044320"
  },
  {
    "start": "2040000",
    "end": "2120000"
  },
  {
    "text": "Persistence of the attack so uh this is this is nice I think it's not very novel",
    "start": "2044320",
    "end": "2049919"
  },
  {
    "text": "but uh I don't think anybody has like implemented it in code I mean we all know that it was possible but now it's",
    "start": "2049919",
    "end": "2056200"
  },
  {
    "text": "actually easier so uh what I mean by persistence is well when the when the victim opens multiple tabs on their",
    "start": "2056200",
    "end": "2063358"
  },
  {
    "text": "browser uh all of them are injected with the um with the modware uh JavaScript",
    "start": "2063359",
    "end": "2069000"
  },
  {
    "text": "that we have the client and this client makes connections back to the realtime service which keeps open connections",
    "start": "2069000",
    "end": "2074280"
  },
  {
    "text": "with all the open tabs uh and what it does is it keeps all the tabs dormant",
    "start": "2074280",
    "end": "2079679"
  },
  {
    "text": "and it wakes up only one tab at a time and it it tells it to to do work right to issue requests to the Target website",
    "start": "2079679",
    "end": "2087599"
  },
  {
    "text": "and um well the good part about this is if the user closes that tab then another",
    "start": "2087599",
    "end": "2092919"
  },
  {
    "text": "tab wakes up and can pick up the attack from where the first tab left off uh or even if the um the victim closes a",
    "start": "2092919",
    "end": "2099480"
  },
  {
    "text": "browser and opens a new browser or they reboot their computer and log in back in a few hours the attack can continue",
    "start": "2099480",
    "end": "2105839"
  },
  {
    "text": "right so we have this powerful robustness mechanism where the attack can pick up from where it left off and",
    "start": "2105839",
    "end": "2111599"
  },
  {
    "text": "because we have this database that keeps the data uh running like if if the network goes down and comes back up we",
    "start": "2111599",
    "end": "2117480"
  },
  {
    "text": "can pick up from where we left off I think this is quite nice right so I already told you about",
    "start": "2117480",
    "end": "2123920"
  },
  {
    "start": "2120000",
    "end": "2176000"
  },
  {
    "text": "the SQL light portion and um we now already to show you how rupture Works in",
    "start": "2123920",
    "end": "2129720"
  },
  {
    "text": "a short demo so let's take a look at",
    "start": "2129720",
    "end": "2135480"
  },
  {
    "text": "this right so can you zoom in a little bit I don't think they can see",
    "start": "2135839",
    "end": "2142319"
  },
  {
    "text": "it okay a little bit more maybe okay great so here is the repository of",
    "start": "2148200",
    "end": "2153359"
  },
  {
    "text": "rupture and we have a master script rupture sh and what this does is it basically runs all of the components",
    "start": "2153359",
    "end": "2159720"
  },
  {
    "text": "together so that you don't have to run them on your own but if you want to distribute them in the way that I said on separate networks you can totally do",
    "start": "2159720",
    "end": "2165440"
  },
  {
    "text": "that now it's um cleaning up the old database that we had running and um we",
    "start": "2165440",
    "end": "2170560"
  },
  {
    "text": "have set up the database and now it has deployed all the varus systems on the network right so it's running the back",
    "start": "2170560",
    "end": "2177240"
  },
  {
    "start": "2176000",
    "end": "2344000"
  },
  {
    "text": "end it's running the sniffer it's running everything and I'll assume the victim visit some that can be infected",
    "start": "2177240",
    "end": "2182920"
  },
  {
    "text": "right so in this case we'll just fire up the uh an HTML file that just contains",
    "start": "2182920",
    "end": "2188880"
  },
  {
    "text": "the client script but imagine this could be any URL and could be a browsing in in progress right so already you can see",
    "start": "2188880",
    "end": "2195599"
  },
  {
    "text": "there's 16 requests at a time boom boom boom right this is 1.5 seconds and uh here you've already seen like 16",
    "start": "2195599",
    "end": "2202680"
  },
  {
    "text": "completed requests I don't know if you can zoom in here to see like the URLs that would be really nice right so",
    "start": "2202680",
    "end": "2210160"
  },
  {
    "text": "this is attacking a controlled endpoint of of our part I'm running it on my personal website and interestingly it",
    "start": "2210160",
    "end": "2217000"
  },
  {
    "text": "uses exact the same ciphers as Gmail and Facebook uses as 128 it uh uses chunking and um the tech",
    "start": "2217000",
    "end": "2225640"
  },
  {
    "text": "works right so in this case we're showing a sequential version of the attack um this makes the explanation",
    "start": "2225640",
    "end": "2231800"
  },
  {
    "text": "clearer and um you can see this is the the known secret impair and we're trying",
    "start": "2231800",
    "end": "2237200"
  },
  {
    "text": "one character in this case a and we're adding the pool the Hoffman pool to",
    "start": "2237200",
    "end": "2243079"
  },
  {
    "text": "achieve a fixed point and here we have the um the alignment padding right so",
    "start": "2243079",
    "end": "2248119"
  },
  {
    "text": "you can see 0 1 2 3 Etc uh maybe I should explain what this is here this is",
    "start": "2248119",
    "end": "2253560"
  },
  {
    "text": "a a part of the uh URL that is not reflected we call it an anti- caching parameter and what this does is",
    "start": "2253560",
    "end": "2260359"
  },
  {
    "text": "basically if if we repeat exactly the same request because we sometimes have to do that if the result is inconclusive",
    "start": "2260359",
    "end": "2266359"
  },
  {
    "text": "due to noise unrelated to block ciphers then this will cause the browser to do the request again because we change it",
    "start": "2266359",
    "end": "2272160"
  },
  {
    "text": "and it's not cached so that's a small detail there um and um here is the back end",
    "start": "2272160",
    "end": "2278160"
  },
  {
    "text": "that's running and outputting stuff of course this is all stored in the database but it's just uh also outputting here and you can see the",
    "start": "2278160",
    "end": "2284359"
  },
  {
    "text": "length that is being leaked on the network and the number of TLS records that are being recorded you can see it's",
    "start": "2284359",
    "end": "2289640"
  },
  {
    "text": "actually quite fast and um okay we have a confidence of one this means that we uh we have a difference of one bite and",
    "start": "2289640",
    "end": "2296720"
  },
  {
    "text": "this actually was a so this was a bite that was collected so D is in fact the",
    "start": "2296720",
    "end": "2301920"
  },
  {
    "text": "correct bite in this case and we have decrypted one bite of uh htps and this took about 30 seconds",
    "start": "2301920",
    "end": "2307960"
  },
  {
    "text": "for this uh for this case well actually in this case you can see that we have collected two bytes already because uh",
    "start": "2307960",
    "end": "2315680"
  },
  {
    "text": "our known prefix uh in our control site was impair so we have already collected",
    "start": "2315680",
    "end": "2321480"
  },
  {
    "text": "D and I and if I go a little higher you can see the time that we yes can you",
    "start": "2321480",
    "end": "2329800"
  },
  {
    "text": "also see like the um right here we stole the D character the first bite and",
    "start": "2329800",
    "end": "2335839"
  },
  {
    "text": "uh in the next uh in the next batch we stole I and with a confidence of one",
    "start": "2335839",
    "end": "2342319"
  },
  {
    "text": "where one actually do you want to yeah sure let's let's show them the uh the lengths of the various alphabet right so",
    "start": "2342319",
    "end": "2349560"
  },
  {
    "start": "2344000",
    "end": "2543000"
  },
  {
    "text": "each of the alphabet so you can see here um there's one uh one block difference",
    "start": "2349560",
    "end": "2356079"
  },
  {
    "text": "from the next best right um there's also some noise happening so uh there's also",
    "start": "2356079",
    "end": "2361560"
  },
  {
    "text": "another character May that probably matched a different part of the plain Tex here um that also in a slightly",
    "start": "2361560",
    "end": "2368160"
  },
  {
    "text": "shorter length but this one one in this case so you can see sometimes there's matching with different parts of the the planex going on um and you can see the",
    "start": "2368160",
    "end": "2375839"
  },
  {
    "text": "difference is exactly 16 bytes in in this case um so one of the things I want",
    "start": "2375839",
    "end": "2381280"
  },
  {
    "text": "to mention is the the confidence of of one this is basically the result of running 16 uh requests per character",
    "start": "2381280",
    "end": "2389680"
  },
  {
    "text": "right so uh one of them only uh does the plays a difference right the other ones",
    "start": "2389680",
    "end": "2395480"
  },
  {
    "text": "because they have the wrong padding and there is no block alignment um they don't all they don't all play a difference and another thing I want to",
    "start": "2395480",
    "end": "2401440"
  },
  {
    "text": "show you is there's actually a failed request here it just happened so uh in this demo so yeah here reported",
    "start": "2401440",
    "end": "2408160"
  },
  {
    "text": "unsuccessful capture right so sometimes we uh the capture doesn't really work and there's maybe a little bit of um",
    "start": "2408160",
    "end": "2415720"
  },
  {
    "text": "yeah maybe the network doesn't behave as uh we thought right maybe it sends a more TLS records and when we see um",
    "start": "2415720",
    "end": "2423359"
  },
  {
    "text": "something that goes out of the usual in the number of TLS records that we corrected collection or anything like",
    "start": "2423359",
    "end": "2428440"
  },
  {
    "text": "that we just drop that sample and and in the case where we um where we have a",
    "start": "2428440",
    "end": "2433640"
  },
  {
    "text": "closed tab or something like that by the user this is exactly what's going to happen right so we just throw away the",
    "start": "2433640",
    "end": "2438760"
  },
  {
    "text": "sample set of 16 uh 16 records that we collected with 16 request and we just",
    "start": "2438760",
    "end": "2445440"
  },
  {
    "text": "reissue it in a new tab right so this is exactly what's happening here but but in this case it's not a closed tab it's",
    "start": "2445440",
    "end": "2451359"
  },
  {
    "text": "maybe something that went wrong on the network maybe a dropped packet or a TCP retransmission something like that so it",
    "start": "2451359",
    "end": "2457319"
  },
  {
    "text": "actually behaved well uh in this case also um but if we move on to the third body you'll see um it may require",
    "start": "2457319",
    "end": "2464560"
  },
  {
    "text": "multiple batches to converge to the right character so maybe running 16",
    "start": "2464560",
    "end": "2469599"
  },
  {
    "text": "requests per character may not be enough and it may need to to Red do it right so in this case you see a confidence of",
    "start": "2469599",
    "end": "2474960"
  },
  {
    "text": "zero because everything is the same or not everything is the same but the top the top two ones have the same right so",
    "start": "2474960",
    "end": "2481640"
  },
  {
    "text": "this is probably a a a match with a different portion of the pl text and uh by by um changing the uh alignment",
    "start": "2481640",
    "end": "2489920"
  },
  {
    "text": "alphabet maybe we can um look look at it uh closer okay and um we have a few more",
    "start": "2489920",
    "end": "2497640"
  },
  {
    "text": "slides I think right so this is the um the",
    "start": "2497640",
    "end": "2503880"
  },
  {
    "text": "expected one time we have maybe three three minutes per bite um because of all the noise that we we showed you uh but",
    "start": "2503880",
    "end": "2510760"
  },
  {
    "text": "if you use divide and conquer you you can drop it maybe to 30 seconds this is not as good as the original breach which",
    "start": "2510760",
    "end": "2516319"
  },
  {
    "text": "broke a whole uh a whole Secret in 30 seconds but we believe using these uh",
    "start": "2516319",
    "end": "2521400"
  },
  {
    "text": "persistent techniques uh you you can stay in the network and keep collecting data and eventually break the secret",
    "start": "2521400",
    "end": "2528040"
  },
  {
    "text": "it's not unreasonable for a person to stay in Starbucks for an hour or two and you can easily uh steal secrets in this",
    "start": "2528040",
    "end": "2533760"
  },
  {
    "text": "case while the browse the the internet and by the way you can attack multiple targets at the same time um using",
    "start": "2533760",
    "end": "2539880"
  },
  {
    "text": "multiple tabs it doesn't matter right you can parallelize these okay so how do",
    "start": "2539880",
    "end": "2545040"
  },
  {
    "start": "2543000",
    "end": "2628000"
  },
  {
    "text": "we propose to mitigate this attack well um in the original breach paper there were several mitigation techniques",
    "start": "2545040",
    "end": "2550559"
  },
  {
    "text": "proposed but um some of them are good ideas but we don't think they fundamentally solve the problem I want",
    "start": "2550559",
    "end": "2556839"
  },
  {
    "text": "to uh just touch on one of the um one of the mitigation techniques mentioned in the original paper which was quite",
    "start": "2556839",
    "end": "2563000"
  },
  {
    "text": "interesting which was to separate the secrets from the um reflection and uh",
    "start": "2563000",
    "end": "2569280"
  },
  {
    "text": "this might work for things like the csrf tokens but in case of for example Facebook messages you can use Facebook",
    "start": "2569280",
    "end": "2575720"
  },
  {
    "text": "messages both as a refle ction and as a secret so if you if your goal is to steal a private Facebook message what",
    "start": "2575720",
    "end": "2582800"
  },
  {
    "text": "you can do as an attacker is you can add the victim as a friend on Facebook and",
    "start": "2582800",
    "end": "2588440"
  },
  {
    "text": "to execute this attack what you do is you keep sending them private messages and then your own attacker private",
    "start": "2588440",
    "end": "2595520"
  },
  {
    "text": "messages get compressed with the private messages of the victim that you want to steal with the secret ones right so",
    "start": "2595520",
    "end": "2601200"
  },
  {
    "text": "these are secrets that are both both secrets and Reflections essentially and they're very hard to separate seate you",
    "start": "2601200",
    "end": "2607720"
  },
  {
    "text": "you can't really put them in like different compression contexts without losing um the uh efficiency of your",
    "start": "2607720",
    "end": "2613559"
  },
  {
    "text": "compression so uh we think for some for some things it works but not for everything um so some techniques um that",
    "start": "2613559",
    "end": "2622160"
  },
  {
    "text": "were actually proposed to mitigate csrf in general um work against breach very",
    "start": "2622160",
    "end": "2627880"
  },
  {
    "text": "effectively one of these is uh first party cookies and this uh was actually proposed by Mike Wes in RFC that is in",
    "start": "2627880",
    "end": "2635079"
  },
  {
    "start": "2628000",
    "end": "2714000"
  },
  {
    "text": "draft stage and um we are working with him to get it in Chrome 51 in fact he",
    "start": "2635079",
    "end": "2641160"
  },
  {
    "text": "actually implemented it and uh he implemented it to avoid csrf tokens um",
    "start": "2641160",
    "end": "2646359"
  },
  {
    "text": "but it comes as a very good response to this talk because once this is implemented it also mitigates the breach",
    "start": "2646359",
    "end": "2652480"
  },
  {
    "text": "attack completely so what you do is very simple when you set your cookie you opt in to be first party right so you write",
    "start": "2652480",
    "end": "2658520"
  },
  {
    "text": "this in your cookie and now what happens is your cookie is no longer sent in Cross origin requests and that means",
    "start": "2658520",
    "end": "2665599"
  },
  {
    "text": "that the breach attack because it is based on only cross origin requests no longer works because the responses of",
    "start": "2665599",
    "end": "2672359"
  },
  {
    "text": "the Cross origin requests don't contain any secrets they're just logged out pages so this is a very good um good",
    "start": "2672359",
    "end": "2678480"
  },
  {
    "text": "response to our talk and on April 8th actually Chrome is being released with this feature so um this is really great",
    "start": "2678480",
    "end": "2685119"
  },
  {
    "text": "for the security of the web we have about one week to experiment all right so um I would",
    "start": "2685119",
    "end": "2692359"
  },
  {
    "text": "recommend if you're a web developer if you own a web application or if you are a cons security consultant for a web",
    "start": "2692359",
    "end": "2697680"
  },
  {
    "text": "application um you can opt in for this um the browsers that don't support it will just ignore it the browsers that do",
    "start": "2697680",
    "end": "2704240"
  },
  {
    "text": "support it will start um taking this into account in a week um and this means",
    "start": "2704240",
    "end": "2710119"
  },
  {
    "text": "that your your website will be secure from a tax uh like breach so to end um I want to propose",
    "start": "2710119",
    "end": "2716960"
  },
  {
    "start": "2714000",
    "end": "2760000"
  },
  {
    "text": "some future work uh generally we welcome patchers in rupture we think it's um it's a good framework to to work on and",
    "start": "2716960",
    "end": "2723359"
  },
  {
    "text": "we invite you to come and help us uh develop there we have many bugs open on GitHub one very important issue is that",
    "start": "2723359",
    "end": "2729119"
  },
  {
    "text": "we don't have Speedy support and Google's actually using Speedy heavily uh so this means we cannot really attack",
    "start": "2729119",
    "end": "2734640"
  },
  {
    "text": "Google or other or other websites that use Speedy but we have very good indicators that our attack would work",
    "start": "2734640",
    "end": "2739920"
  },
  {
    "text": "against Speedy as well uh there's no reason why it wouldn't um and then if",
    "start": "2739920",
    "end": "2745000"
  },
  {
    "text": "you help with browser development if you're a Firefox developer or if you have access to these developers we urge",
    "start": "2745000",
    "end": "2751559"
  },
  {
    "text": "you to help with uh first party cookie implementation that would be great and if you're a web applic of please um",
    "start": "2751559",
    "end": "2758839"
  },
  {
    "text": "please add this uh cook key to your website right so the the key takeaways of this talk um first htps with gzip is",
    "start": "2758839",
    "end": "2767160"
  },
  {
    "start": "2760000",
    "end": "2787000"
  },
  {
    "text": "still broken and it's um it's worse than the previous time uh second rupture",
    "start": "2767160",
    "end": "2772680"
  },
  {
    "text": "frame is live um so attackers can use it now um so please take this attack more",
    "start": "2772680",
    "end": "2778240"
  },
  {
    "text": "seriously because it's going to happen in the wild um and do enable first party",
    "start": "2778240",
    "end": "2783680"
  },
  {
    "text": "cookies on your web app uh because this really mitigates the attack and uh with that I will end the",
    "start": "2783680",
    "end": "2790359"
  },
  {
    "start": "2787000",
    "end": "3197000"
  },
  {
    "text": "talk and uh thank you very much and if you have any questions we'll be very happy to answer [Applause]",
    "start": "2790359",
    "end": "2802639"
  },
  {
    "text": "them okay any",
    "start": "2805000",
    "end": "2808400"
  },
  {
    "text": "[Music] questions uh can you bring the microphone back please",
    "start": "2811490",
    "end": "2818839"
  },
  {
    "text": "I like a good presentation I have a questions about so future framework so",
    "start": "2825040",
    "end": "2830720"
  },
  {
    "text": "uh you mention so uh black training what does it mean mean bra training rupture",
    "start": "2830720",
    "end": "2838880"
  },
  {
    "text": "black training uh could you back to the",
    "start": "2838880",
    "end": "2844319"
  },
  {
    "text": "uh future work yes",
    "start": "2844319",
    "end": "2849640"
  },
  {
    "text": "and back tracking oh backtracking yes I didn't mention that sorry I skipped that uh thanks for the question okay so what",
    "start": "2849640",
    "end": "2855640"
  },
  {
    "text": "is backtracking is the question so um sometime so so the goal of roucher is",
    "start": "2855640",
    "end": "2861040"
  },
  {
    "text": "essentially to get the whole PL text not just one secret so sometimes in this case we even showed you this when you",
    "start": "2861040",
    "end": "2867800"
  },
  {
    "text": "expand a secret sometimes there's a match between um different portions of the pl Tex so you can get a match on",
    "start": "2867800",
    "end": "2874800"
  },
  {
    "text": "your target secret but also a match on a different secret uh so rupture doesn't really handle it that well right now but",
    "start": "2874800",
    "end": "2881480"
  },
  {
    "text": "what we want to do is um and this the the structure and the mod structure of this framework actually allow this",
    "start": "2881480",
    "end": "2886640"
  },
  {
    "text": "allows us quite a lot is we want to try all the possible paths uh and in that case we will",
    "start": "2886640",
    "end": "2892960"
  },
  {
    "text": "decrypt both Secrets right so what you do is okay you know four characters and",
    "start": "2892960",
    "end": "2898880"
  },
  {
    "text": "then you have a list of 24 C or 26 candidates and two of them match right",
    "start": "2898880",
    "end": "2904240"
  },
  {
    "text": "so you say okay we have two secrets that match Maybe maybe both of them are in the plain text so you go One path and",
    "start": "2904240",
    "end": "2910480"
  },
  {
    "text": "you explore you find out what happened and then you backtrack and then you say okay I will explore the other path that",
    "start": "2910480",
    "end": "2915640"
  },
  {
    "text": "was also promising in that case I can store both secrets that were uh captured",
    "start": "2915640",
    "end": "2920680"
  },
  {
    "text": "by by Rapture so this is what backtracking means and uh we're working on implementing this we we are hoping it",
    "start": "2920680",
    "end": "2927040"
  },
  {
    "text": "will be on on the repository soon thank",
    "start": "2927040",
    "end": "2931920"
  },
  {
    "text": "you actually I I do have question um so this first party cookie magic that I was",
    "start": "2934760",
    "end": "2941280"
  },
  {
    "text": "completely unaware of um does it apply to iframes and popups or only to you",
    "start": "2941280",
    "end": "2948119"
  },
  {
    "text": "know JavaScript xhrs and images I mean is it really not sending the session",
    "start": "2948119",
    "end": "2953480"
  },
  {
    "text": "cookie if you create an if frame or if you open a new popup what are what are some of the limitations uh I don't know",
    "start": "2953480",
    "end": "2960359"
  },
  {
    "text": "about this so the question here is does first party cookie only involve uh ax",
    "start": "2960359",
    "end": "2966079"
  },
  {
    "text": "request or for image requests or does it also work for iframes right I don't know you have to read the standard and I'm",
    "start": "2966079",
    "end": "2971799"
  },
  {
    "text": "also curious about this we have to take a look and I'm also curious about the implementation to see if it will",
    "start": "2971799",
    "end": "2976960"
  },
  {
    "text": "correspond to the standard uh but I'm hoping it will work for all of these if it doesn't maybe we should we should fix",
    "start": "2976960",
    "end": "2983520"
  },
  {
    "text": "it yeah but it's a good step I think okay any more",
    "start": "2983520",
    "end": "2991040"
  },
  {
    "text": "questions is a question on the back no",
    "start": "2992160",
    "end": "2997318"
  },
  {
    "text": "oh there you mentioned that you think oh sorry thanks hi I'm Darren from the",
    "start": "2997880",
    "end": "3003960"
  },
  {
    "text": "register Darren poy um you mentioned that um you think that this is going to be used in attacks in the wild yes would",
    "start": "3003960",
    "end": "3011680"
  },
  {
    "text": "you say given like considering the complexity of it how long do you reckon",
    "start": "3011680",
    "end": "3017599"
  },
  {
    "text": "that could possibly take like you want to take this question sure",
    "start": "3017599",
    "end": "3024680"
  },
  {
    "text": "yes okay so this is actually a nice question because uh during our research we were reading an article about the",
    "start": "3027040",
    "end": "3033920"
  },
  {
    "text": "Mitigation Of Crime so in this article a professor at johnes Hopkins a cryptography professor said that crime",
    "start": "3033920",
    "end": "3041400"
  },
  {
    "text": "is actually not an attack that can be used uh against you in a coffee shop or Starbucks or something like that it's an",
    "start": "3041400",
    "end": "3047960"
  },
  {
    "text": "attack that uh a regimes can use in order to track and uh find disident so I",
    "start": "3047960",
    "end": "3056280"
  },
  {
    "text": "think this more or less applies also to bridge it's not it's a pretty sophisticated",
    "start": "3056280",
    "end": "3062520"
  },
  {
    "text": "attack it's not easily to uh it's not easy to implement it and use it against",
    "start": "3062520",
    "end": "3068240"
  },
  {
    "text": "uh uh targets like me or you I hope uh",
    "start": "3068240",
    "end": "3074520"
  },
  {
    "text": "but uh it would be possible for organizations or governments or regimes",
    "start": "3074520",
    "end": "3080280"
  },
  {
    "text": "to use it in order to bypass Securities in uh uh websites that use a DPS so it",
    "start": "3080280",
    "end": "3088480"
  },
  {
    "text": "may not be uh so dangerous against us but it is dangerous and we have to",
    "start": "3088480",
    "end": "3094200"
  },
  {
    "text": "mitigate it right but I think I think with the introduction of rupture once people start writing Target",
    "start": "3094200",
    "end": "3100520"
  },
  {
    "text": "configurations for specific endpoints it's going to be much easier so the yeah",
    "start": "3100520",
    "end": "3105920"
  },
  {
    "text": "it's it's it's lowering like the complexity of the attack quite a bit because the implementation is now ready",
    "start": "3105920",
    "end": "3112280"
  },
  {
    "text": "so uh I think the it would be good to have this first party cookie feature uh in the",
    "start": "3112280",
    "end": "3119280"
  },
  {
    "text": "browsers maybe in the next month um but we have well the patch for Chrome is ready so it's stripping in the next",
    "start": "3119280",
    "end": "3125520"
  },
  {
    "text": "release uh we will push other RZ vendors to also do that uh I would say if if you",
    "start": "3125520",
    "end": "3130920"
  },
  {
    "text": "have a like a ready Target you don't need too much right you don't you need maybe a couple of weeks to maybe Target",
    "start": "3130920",
    "end": "3136440"
  },
  {
    "text": "a specific person or yeah actually all you have to do is uh as theis mentioned",
    "start": "3136440",
    "end": "3142960"
  },
  {
    "text": "uh networks are pretty much at HW as we a it so you have to analyze the network see the the type of request you take the",
    "start": "3142960",
    "end": "3152440"
  },
  {
    "text": "type of Records you take and see how you can do this so at first we couldn't even",
    "start": "3152440",
    "end": "3158440"
  },
  {
    "text": "attack the noise lend Point yis had and we actually did it in the last week but",
    "start": "3158440",
    "end": "3163799"
  },
  {
    "text": "uh if you analyze the requests and see a pattern that emerges from the responses",
    "start": "3163799",
    "end": "3170599"
  },
  {
    "text": "it is not so difficult to do it actually yes if the assumptions of course are metant yeah please please play with the",
    "start": "3170599",
    "end": "3177680"
  },
  {
    "text": "tool though so please please run it and see how it works for you okay uh any other questions in the",
    "start": "3177680",
    "end": "3186960"
  },
  {
    "text": "audience yeah I think that's it right thank you very much for your time and if you have any more questions we can we'll",
    "start": "3188400",
    "end": "3194240"
  },
  {
    "text": "be here for two days",
    "start": "3194240",
    "end": "3197880"
  }
]