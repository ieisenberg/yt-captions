[
  {
    "start": "0",
    "end": "56000"
  },
  {
    "text": "good afternoon welcome for this presentation about software officiation using C++",
    "start": "40",
    "end": "6439"
  },
  {
    "text": "11 some word about me my name is Sebastian",
    "start": "6439",
    "end": "11880"
  },
  {
    "text": "andet I'm a cyber feminist activist and I have also jobs I'm working for scrt in",
    "start": "11880",
    "end": "19600"
  },
  {
    "text": "Switzerland I'm doing penetration testing and uh forensics and I'm",
    "start": "19600",
    "end": "25800"
  },
  {
    "text": "auditing mobile uh applications fort and I'm also working for advv tools",
    "start": "25800",
    "end": "32840"
  },
  {
    "text": "um I'm doing development for advv tools to simplify I'm attacking with strt and",
    "start": "32840",
    "end": "38239"
  },
  {
    "text": "I'm defending uh with a div tools so what is the problem why I'm",
    "start": "38239",
    "end": "45760"
  },
  {
    "text": "talking about aisc I will show you a small example I",
    "start": "45760",
    "end": "52199"
  },
  {
    "text": "will take a a MDM application uh MDM agent MDM is a mobile device management",
    "start": "52199",
    "end": "60160"
  },
  {
    "start": "56000",
    "end": "56000"
  },
  {
    "text": "system it's a way to a company to control the security of mobile devices",
    "start": "60160",
    "end": "67040"
  },
  {
    "text": "for example it can control if a device is gel broken or not and if it's gel",
    "start": "67040",
    "end": "73119"
  },
  {
    "text": "broken um it will not permit access to um business emails or thing like that so",
    "start": "73119",
    "end": "80400"
  },
  {
    "text": "I will take one of those MDM I will open it in",
    "start": "80400",
    "end": "88280"
  },
  {
    "text": "Ida",
    "start": "88840",
    "end": "91840"
  },
  {
    "text": "okay so I no it's not the right one",
    "start": "101000",
    "end": "106880"
  },
  {
    "text": "sorry okay so I open a MDM agent so an",
    "start": "107479",
    "end": "112560"
  },
  {
    "text": "application which is Deploy on the mobile device an iOS in this case and uh",
    "start": "112560",
    "end": "118920"
  },
  {
    "text": "I will try to find find the jailbreak detection code one way to do that is to",
    "start": "118920",
    "end": "125719"
  },
  {
    "text": "look for Strings so this is a list of strings in",
    "start": "125719",
    "end": "131560"
  },
  {
    "text": "the application and I will look for cidia CIA is the equivalent in the jbre",
    "start": "131560",
    "end": "137720"
  },
  {
    "text": "community of the Apple App Store so I just typing side here",
    "start": "137720",
    "end": "143640"
  },
  {
    "text": "and I found things interesting including device sh broken detection complete and",
    "start": "143640",
    "end": "149440"
  },
  {
    "text": "things like that if I look in the binary I have my C",
    "start": "149440",
    "end": "154840"
  },
  {
    "text": "string and with Ida it's possible to find cross references to find references",
    "start": "154840",
    "end": "161599"
  },
  {
    "text": "to this uh string uh here we are it's a CF string an Objective C",
    "start": "161599",
    "end": "170319"
  },
  {
    "text": "string and again I will search for cross referenes and uh I found some",
    "start": "170319",
    "end": "177480"
  },
  {
    "text": "occurrences and a method which is called is CH broken with fine manager a good",
    "start": "177480",
    "end": "184319"
  },
  {
    "text": "candidate and I have some",
    "start": "186000",
    "end": "190560"
  },
  {
    "text": "codes I will use a decompiler to make it um",
    "start": "193720",
    "end": "200239"
  },
  {
    "text": "clearer so apparently this function is filling an array with a list of uh",
    "start": "202000",
    "end": "209319"
  },
  {
    "text": "string uh with a black Black Rain which is a wellknown a bit little bit old but",
    "start": "209319",
    "end": "216959"
  },
  {
    "text": "wellknown jailbreak uh etc sya etc and if you look",
    "start": "216959",
    "end": "222959"
  },
  {
    "text": "at the code it's a little bit complicated because apparently they compile this agent um with uh some",
    "start": "222959",
    "end": "231680"
  },
  {
    "text": "profiling uh code but it's not very",
    "start": "231680",
    "end": "236879"
  },
  {
    "text": "difficult to understand they just um maybe it's not easy to see but it's",
    "start": "236879",
    "end": "243519"
  },
  {
    "text": "written file exist at pass it just check if the file exist or not it iterate the",
    "start": "243519",
    "end": "250280"
  },
  {
    "text": "array with this list of strings and if it found one of those file it assumes",
    "start": "250280",
    "end": "258320"
  },
  {
    "text": "that the device is just broken and to avoid this to remove this uh you just",
    "start": "258320",
    "end": "264600"
  },
  {
    "text": "have to patch this function to return false at the beginning you resign sub",
    "start": "264600",
    "end": "269639"
  },
  {
    "text": "binary you redeploy on your own device and uh that's all uh your device will be",
    "start": "269639",
    "end": "277520"
  },
  {
    "text": "compliant but it will be jailbroken and I wanted to make my own",
    "start": "277520",
    "end": "284520"
  },
  {
    "text": "jailbreak uh Library jbre detection library and this is exactly the",
    "start": "284520",
    "end": "290160"
  },
  {
    "text": "situation I wanted to avoid it's too easy to find it uh of course it's only",
    "start": "290160",
    "end": "295639"
  },
  {
    "text": "an example sometimes it's uh a little more complex but most of the time it's",
    "start": "295639",
    "end": "301680"
  },
  {
    "text": "like that uh you just uh search for some strings you find uh a function you patch",
    "start": "301680",
    "end": "307960"
  },
  {
    "text": "it and that's all so this is my motivation to do some",
    "start": "307960",
    "end": "314759"
  },
  {
    "start": "326000",
    "end": "326000"
  },
  {
    "text": "aisc what isation I will take a example I will take an application and in my",
    "start": "326720",
    "end": "333080"
  },
  {
    "text": "case my this application is ky Perry I will take an office skater o and I will",
    "start": "333080",
    "end": "340160"
  },
  {
    "text": "apply this office skater to my application KY per and I will see what I",
    "start": "340160",
    "end": "345960"
  },
  {
    "text": "get do you have an idea no yes I get another KY Perry it's still KY Perry uh",
    "start": "345960",
    "end": "355720"
  },
  {
    "text": "it has almost the same semantics the same behavior perhaps it's a little bit",
    "start": "355720",
    "end": "360880"
  },
  {
    "text": "slower but it's still Kar it's an fiscated",
    "start": "360880",
    "end": "367240"
  },
  {
    "text": "Kary more formally uh verication is a deliberate Act of creating Source or",
    "start": "367240",
    "end": "374199"
  },
  {
    "text": "machine code difficult for human to understand for human and not for a",
    "start": "374199",
    "end": "381560"
  },
  {
    "text": "computer I decided to implement my office cator with C++ because I was",
    "start": "383280",
    "end": "389520"
  },
  {
    "text": "designing a library for iOS and most of the time you write iOS code in Objective",
    "start": "389520",
    "end": "396280"
  },
  {
    "text": "C and uh it's possible to mix Objective C and C it's called objective",
    "start": "396280",
    "end": "403360"
  },
  {
    "text": "C++ uh I don't know what I have said of you understand um and um to explain how",
    "start": "403360",
    "end": "412560"
  },
  {
    "text": "to use C++ to do um my office cator I need to explain a little bit uh C++ meta",
    "start": "412560",
    "end": "420080"
  },
  {
    "text": "programming and C++ meta programming is based on C++ templates for example in your",
    "start": "420080",
    "end": "426960"
  },
  {
    "text": "application you need a stack of objects you have two method push and",
    "start": "426960",
    "end": "434960"
  },
  {
    "text": "pop and one way to implement this without C++ templates it's like that you",
    "start": "435199",
    "end": "441280"
  },
  {
    "start": "437000",
    "end": "437000"
  },
  {
    "text": "declare a class stack with two method push and pop and you have a parameter an",
    "start": "441280",
    "end": "448840"
  },
  {
    "text": "object and it's the type of the object is a void star it's a pointer to",
    "start": "448840",
    "end": "457000"
  },
  {
    "text": "anything and if you have a stack a stack of singers you can push britness Spears",
    "start": "457759",
    "end": "465080"
  },
  {
    "text": "onto the the stack and if you have another stack of apples you can put a",
    "start": "465080",
    "end": "471280"
  },
  {
    "text": "machintosh you can push McIntosh and both instances both object",
    "start": "471280",
    "end": "479919"
  },
  {
    "text": "will share the same implementation the same class with C++ templates it's",
    "start": "479919",
    "end": "489280"
  },
  {
    "start": "489000",
    "end": "489000"
  },
  {
    "text": "different um you make small modifications you declare a template with a type name called T in this case",
    "start": "490080",
    "end": "498919"
  },
  {
    "text": "and you replace the type void Star by T so now you have a stack of some precise",
    "start": "498919",
    "end": "507159"
  },
  {
    "text": "type and um I still have my stack of singer but this time it's explicit you",
    "start": "507159",
    "end": "514680"
  },
  {
    "text": "explicit explicitly declare a stack of singer and you can still push britness",
    "start": "514680",
    "end": "520760"
  },
  {
    "text": "pier and for my stack of Apple I can put a mcintosch but in this case I will have",
    "start": "520760",
    "end": "529080"
  },
  {
    "text": "two different implementations each object will use a",
    "start": "529080",
    "end": "534240"
  },
  {
    "text": "different instance of the class there is no code reuse in this",
    "start": "534240",
    "end": "541120"
  },
  {
    "text": "case um it's possible to share some code by but by default um code is",
    "start": "541120",
    "end": "548839"
  },
  {
    "text": "different and thanks to that you can make some optimization based on on the",
    "start": "548839",
    "end": "555560"
  },
  {
    "text": "type on the template type uh one important uh aspect of C++",
    "start": "555560",
    "end": "563760"
  },
  {
    "text": "templates is that uh you can achieve uh type safety for example",
    "start": "563760",
    "end": "569760"
  },
  {
    "start": "569000",
    "end": "569000"
  },
  {
    "text": "if I try to put anle in my stack of singers I will have a compilation error",
    "start": "569760",
    "end": "576079"
  },
  {
    "text": "not an runtime error a compilation error in the pre uh the first example I can",
    "start": "576079",
    "end": "582560"
  },
  {
    "text": "put any kind of object because uh it was a stack of anything there are some",
    "start": "582560",
    "end": "589320"
  },
  {
    "text": "exception if you try to put You2 into apples sometimes it's working sometimes",
    "start": "589320",
    "end": "595839"
  },
  {
    "text": "not just a a joke I don't know if it's funny or",
    "start": "595839",
    "end": "601680"
  },
  {
    "start": "599000",
    "end": "599000"
  },
  {
    "text": "not like I said with C++ templates you can make optimization based on types in",
    "start": "603399",
    "end": "610440"
  },
  {
    "text": "the standard Library you have a method it's a meta method uh enable if and with that you",
    "start": "610440",
    "end": "619519"
  },
  {
    "text": "can for example declare a class the syntax is orable I will just explain a little bit uh you have a member function",
    "start": "619519",
    "end": "627880"
  },
  {
    "text": "in your class and um if the type T is a",
    "start": "627880",
    "end": "634839"
  },
  {
    "text": "pointer it will be enabled if it's not a pointer your class will not contain the",
    "start": "634959",
    "end": "644600"
  },
  {
    "text": "method so it's a way to not to generate",
    "start": "644600",
    "end": "650000"
  },
  {
    "text": "code uh you will generate different code based on types and this is uh C++ meta prog",
    "start": "650000",
    "end": "659000"
  },
  {
    "start": "656000",
    "end": "656000"
  },
  {
    "text": "pramming instead of dealing with data normal um program um manipulating",
    "start": "659000",
    "end": "665920"
  },
  {
    "text": "Computing data in this case you are making Computing on types and based on",
    "start": "665920",
    "end": "672279"
  },
  {
    "text": "that you can generate different code it's a subset of",
    "start": "672279",
    "end": "677720"
  },
  {
    "text": "C++ uh it's to complete it means that it's a a full programming language it's",
    "start": "677720",
    "end": "684519"
  },
  {
    "text": "very close to functional programming uh for example you don't have variable",
    "start": "684519",
    "end": "690200"
  },
  {
    "text": "you have to use recursion or or tricks like that and it's part of the C++",
    "start": "690200",
    "end": "696360"
  },
  {
    "text": "standards um there are major enhancement in C++ programming in the latest uh",
    "start": "696360",
    "end": "702760"
  },
  {
    "text": "latest versions of C++ C++ 11 and",
    "start": "702760",
    "end": "709079"
  },
  {
    "text": "14 and now I will show you an application of that regarding",
    "start": "709920",
    "end": "715839"
  },
  {
    "start": "710000",
    "end": "710000"
  },
  {
    "text": "alisation um in my uh demonstration at the beginning you see that it's very",
    "start": "715839",
    "end": "722240"
  },
  {
    "text": "easy to find strings and what I want to do is to offis skate",
    "start": "722240",
    "end": "728000"
  },
  {
    "text": "strings this is uh some requirement of my",
    "start": "728000",
    "end": "733560"
  },
  {
    "text": "obfuscation um of course I can make aisc manually I can modify the the source",
    "start": "733560",
    "end": "740279"
  },
  {
    "text": "code perhaps I run a pre-processor or something like that but it's not what I",
    "start": "740279",
    "end": "746120"
  },
  {
    "text": "want to do I still want my original string in my source code when I'm",
    "start": "746120",
    "end": "752560"
  },
  {
    "text": "debugging I still need my original string because uh otherwise it's a",
    "start": "752560",
    "end": "758839"
  },
  {
    "text": "nightmare to debug and to manage if possible I prefer uh developer",
    "start": "758839",
    "end": "765120"
  },
  {
    "text": "friendly friendly syntax um and mo most important in",
    "start": "765120",
    "end": "772399"
  },
  {
    "text": "release builds I don't want to see my original",
    "start": "772399",
    "end": "777839"
  },
  {
    "text": "string okay so let's make an implementation I'm",
    "start": "777839",
    "end": "784480"
  },
  {
    "text": "declaring a class metast string one is declare as a struct but is almost the",
    "start": "784480",
    "end": "789600"
  },
  {
    "text": "same than a class and I have a Constructor um with one",
    "start": "789600",
    "end": "796199"
  },
  {
    "text": "parameter a pointer to character this is my original string it's written con",
    "start": "796199",
    "end": "804079"
  },
  {
    "text": "expression it mean that it's a method for the compiler it has to be evaluated",
    "start": "804079",
    "end": "809720"
  },
  {
    "text": "at compile time not at run time uh no code will be generated uh for this",
    "start": "809720",
    "end": "817639"
  },
  {
    "text": "method and to store my off fiscated string I need a buffer so I declaring a",
    "start": "817639",
    "end": "824880"
  },
  {
    "text": "buffer it's an array and I will fill my buffer with my",
    "start": "824880",
    "end": "830759"
  },
  {
    "text": "off fiscated string so the principle I take is to I take each character one by",
    "start": "830759",
    "end": "837360"
  },
  {
    "text": "one I encrypt it's not really an encryption it's an alisation but I call",
    "start": "837360",
    "end": "843040"
  },
  {
    "text": "it encrypt I encrypt each character and I initialize my array with this",
    "start": "843040",
    "end": "850399"
  },
  {
    "text": "encrypted character characters uh in C++ 11 it's possible to instead of declaring",
    "start": "850399",
    "end": "859399"
  },
  {
    "text": "one template parameter you can declare several or list of parameters it's called variadic templates and you just",
    "start": "859399",
    "end": "867560"
  },
  {
    "text": "put the type and three dots and indexes in this case it's not one template",
    "start": "867560",
    "end": "874839"
  },
  {
    "text": "parameter it's a list of parameters and the compiler will um will",
    "start": "874839",
    "end": "881959"
  },
  {
    "text": "duplicate the code for each value in my list so for example if I have um if in",
    "start": "881959",
    "end": "892040"
  },
  {
    "text": "indexes I have 01 2 it will generate this",
    "start": "892040",
    "end": "897680"
  },
  {
    "text": "code um I I also in C++ 11 you also have an",
    "start": "897680",
    "end": "907199"
  },
  {
    "text": "operator says off with the three dots um it gives you the the length of the the",
    "start": "907199",
    "end": "915480"
  },
  {
    "text": "list indexes and i p i put uh plus one to",
    "start": "915480",
    "end": "920759"
  },
  {
    "text": "store the new bite at the end to terminate the",
    "start": "920759",
    "end": "927000"
  },
  {
    "text": "string and for my first implementation I will use a very simple encryption",
    "start": "927000",
    "end": "933079"
  },
  {
    "text": "ofation I just make a sore with hardcoded value 55 and the decryption",
    "start": "933079",
    "end": "939279"
  },
  {
    "text": "exact is exactly the same since it's aore all the method in blue are",
    "start": "939279",
    "end": "947560"
  },
  {
    "text": "evaluated at compile time by the compiler and of course during the",
    "start": "947560",
    "end": "952800"
  },
  {
    "text": "execution of my application I need uh the original string so I need to decrypt",
    "start": "952800",
    "end": "958360"
  },
  {
    "text": "the string so I'm declaring a decrypt um method the implementation is very simple",
    "start": "958360",
    "end": "965800"
  },
  {
    "text": "you just iterate each character you uh call decrypt and you can per perhaps for",
    "start": "965800",
    "end": "973959"
  },
  {
    "text": "example you can replace what you have in the buffer by the the off fiscated string and you",
    "start": "973959",
    "end": "980839"
  },
  {
    "text": "return the buffer so it's working but I have a a",
    "start": "980839",
    "end": "988560"
  },
  {
    "text": "small problem with that uh yes it's just a way to to call it um I'm declaring a",
    "start": "988560",
    "end": "996199"
  },
  {
    "text": "macro because [Music] um this syntax is not very funny and I'm",
    "start": "996199",
    "end": "1005480"
  },
  {
    "text": "preferring that so you call it this way my implementation has a small",
    "start": "1005480",
    "end": "1011880"
  },
  {
    "start": "1010000",
    "end": "1010000"
  },
  {
    "text": "problem uh the problem is that the list of indexes is out coded like you see in the the macro and",
    "start": "1011880",
    "end": "1020199"
  },
  {
    "text": "as a consequence if I have more than six characters it will be",
    "start": "1020199",
    "end": "1027240"
  },
  {
    "text": "truned so I introduce a second version of my",
    "start": "1027240",
    "end": "1032640"
  },
  {
    "text": "implementation I will generate the list of indexes zero to a certain number with",
    "start": "1032640",
    "end": "1040319"
  },
  {
    "text": "meta programming in C++ 14 there is a",
    "start": "1040319",
    "end": "1045360"
  },
  {
    "text": "standard uh template for that index sequence uh but this version of C++ is very new",
    "start": "1045360",
    "end": "1053720"
  },
  {
    "text": "it's already well supported but uh I prefer to be compatible with C++ 11 so I",
    "start": "1053720",
    "end": "1060000"
  },
  {
    "text": "have implemented my own version of index sequence very simplified it's called",
    "start": "1060000",
    "end": "1066480"
  },
  {
    "text": "Mech index and this this expression will generate a",
    "start": "1066480",
    "end": "1074360"
  },
  {
    "text": "type indexes with as parameters 0 1 Etc",
    "start": "1074360",
    "end": "1079600"
  },
  {
    "text": "my list of indexes so now in my micro I can",
    "start": "1079600",
    "end": "1086039"
  },
  {
    "text": "replace my out coded list here by make",
    "start": "1086039",
    "end": "1091080"
  },
  {
    "text": "indexes and with the length of the string to call it it's still the same um",
    "start": "1091080",
    "end": "1100400"
  },
  {
    "start": "1097000",
    "end": "1097000"
  },
  {
    "text": "but this time it's not truned I still have one little bit well",
    "start": "1100400",
    "end": "1108960"
  },
  {
    "start": "1107000",
    "end": "1107000"
  },
  {
    "text": "one little problem uh the key is out coded so it's not difficult to make a",
    "start": "1108960",
    "end": "1115559"
  },
  {
    "text": "script to try to Broad force or even to",
    "start": "1115559",
    "end": "1120760"
  },
  {
    "text": "it's always 55 so you just try uh every binary data in",
    "start": "1120760",
    "end": "1127240"
  },
  {
    "text": "in in your application and you try to Broast this and to extract the original",
    "start": "1127240",
    "end": "1134280"
  },
  {
    "text": "string and I wanted to have a different key for each compilation and a different",
    "start": "1134280",
    "end": "1140400"
  },
  {
    "text": "key for each string so I introduced a new parameter called",
    "start": "1140400",
    "end": "1146559"
  },
  {
    "text": "K and um this K this key has to be",
    "start": "1147640",
    "end": "1153159"
  },
  {
    "start": "1148000",
    "end": "1148000"
  },
  {
    "text": "generated uh randomly or almost randomly so I need some Randomness at compile",
    "start": "1153159",
    "end": "1160480"
  },
  {
    "text": "time in C++ 11 you have a random uh header but it's only for runtime it's",
    "start": "1160480",
    "end": "1168559"
  },
  {
    "text": "not for compile time so I've have written a small meta random template",
    "start": "1168559",
    "end": "1174840"
  },
  {
    "text": "it's based on the linear congr congruential engine it's not a uniform distribution",
    "start": "1174840",
    "end": "1182640"
  },
  {
    "text": "because I'm using a modular operation but it's not very important I'm not doing cryptography I'm doing uh",
    "start": "1182640",
    "end": "1190600"
  },
  {
    "text": "obfuscation and it's a recursive",
    "start": "1190600",
    "end": "1195360"
  },
  {
    "start": "1195000",
    "end": "1195000"
  },
  {
    "text": "template and I have something to generate a random number but I need a",
    "start": "1195640",
    "end": "1201360"
  },
  {
    "text": "seed for this engine and uh it's something which is",
    "start": "1201360",
    "end": "1207720"
  },
  {
    "text": "not so easy to find a seed at compile time you have some macros in C and C++",
    "start": "1207720",
    "end": "1217440"
  },
  {
    "text": "you have for example time it's a time of the compilation it's time in text but",
    "start": "1217440",
    "end": "1224080"
  },
  {
    "text": "it's not complicated to transform this into a number but if I'm using only time",
    "start": "1224080",
    "end": "1231559"
  },
  {
    "text": "every string or almost everything string in my um application will have will",
    "start": "1231559",
    "end": "1238080"
  },
  {
    "text": "share the same key um almost because uh",
    "start": "1238080",
    "end": "1243280"
  },
  {
    "text": "the compilation may take some seconds um but what I want to to have is really a",
    "start": "1243280",
    "end": "1250760"
  },
  {
    "text": "different key for each string so I'm using another macro which is called cter",
    "start": "1250760",
    "end": "1257799"
  },
  {
    "text": "it's not standard it's not part of the standard but it's well supported um it's",
    "start": "1257799",
    "end": "1263400"
  },
  {
    "text": "supported by um llvm um Intel compilers Microsoft Etc",
    "start": "1263400",
    "end": "1272440"
  },
  {
    "text": "and by combining time and counter I'm able to generate a different key for",
    "start": "1272440",
    "end": "1279279"
  },
  {
    "text": "each string and for each",
    "start": "1279279",
    "end": "1283279"
  },
  {
    "start": "1283000",
    "end": "1283000"
  },
  {
    "text": "compilation okay is great but is it possible to go even further for example",
    "start": "1286679",
    "end": "1294120"
  },
  {
    "text": "to choose a different officiation algorithm for each string and for each",
    "start": "1294120",
    "end": "1300080"
  },
  {
    "text": "compilation and to choose this randomly and yes it's possible I'm",
    "start": "1300080",
    "end": "1307120"
  },
  {
    "text": "introducing a new parameter a for algorithm and what is possible with",
    "start": "1307120",
    "end": "1316159"
  },
  {
    "text": "C++ is to make a a what is called a um",
    "start": "1316159",
    "end": "1322279"
  },
  {
    "text": "partial specialization of a class so you declare the the class with the this parameter an INT and",
    "start": "1322279",
    "end": "1331520"
  },
  {
    "text": "you say for zero this is the implementation and for",
    "start": "1331520",
    "end": "1337240"
  },
  {
    "text": "zero for example I will use aor and for one I will use another implementation",
    "start": "1337240",
    "end": "1344080"
  },
  {
    "text": "and in this case I will just add the key Etc Etc you can make how many",
    "start": "1344080",
    "end": "1350799"
  },
  {
    "text": "implementation you want and again I will reuse my meta",
    "start": "1350799",
    "end": "1356240"
  },
  {
    "text": "random to select randomly at compile time this",
    "start": "1356240",
    "end": "1362039"
  },
  {
    "text": "value and I will now show you the the result so I've written a small program",
    "start": "1364240",
    "end": "1372080"
  },
  {
    "text": "with just this this is without appication and",
    "start": "1372080",
    "end": "1379000"
  },
  {
    "text": "this with aisc yes it's big enough I think um so",
    "start": "1379000",
    "end": "1387600"
  },
  {
    "start": "1383000",
    "end": "1383000"
  },
  {
    "text": "this is without aisc of course in the binary you have the original string and",
    "start": "1387600",
    "end": "1394120"
  },
  {
    "text": "you see it's just making a call nothing special and if I",
    "start": "1394120",
    "end": "1403720"
  },
  {
    "text": "look maybe I can take yeah I can",
    "start": "1403720",
    "end": "1410320"
  },
  {
    "text": "magnify and this is my office skated um",
    "start": "1413159",
    "end": "1418600"
  },
  {
    "text": "it's using my office skater you see",
    "start": "1418600",
    "end": "1424039"
  },
  {
    "text": "that each value each character of the original string has been changed and",
    "start": "1424039",
    "end": "1431279"
  },
  {
    "text": "more interesting in interesting you have a mix of Mod Mo uh up code of of move um",
    "start": "1431279",
    "end": "1441960"
  },
  {
    "text": "instruction with the value um the compiler has optimized the",
    "start": "1441960",
    "end": "1449720"
  },
  {
    "text": "initialization of the buffer in exod decimal you see this is the move and",
    "start": "1449720",
    "end": "1457480"
  },
  {
    "text": "this is the value of the string so in the binary you don't have the the",
    "start": "1457480",
    "end": "1465279"
  },
  {
    "text": "original string and you don't have the fiscated swing it split into different",
    "start": "1465279",
    "end": "1471720"
  },
  {
    "text": "pieces and if you move at the",
    "start": "1471720",
    "end": "1477120"
  },
  {
    "text": "end this is the decryption which is executed at runtime in this case uh it has selected",
    "start": "1479960",
    "end": "1489799"
  },
  {
    "text": "AO uh you don't see a call because the compiler has decided that it's small",
    "start": "1489799",
    "end": "1495279"
  },
  {
    "text": "enough to put it uh in line",
    "start": "1495279",
    "end": "1499760"
  },
  {
    "text": "uh what time is it",
    "start": "1505440",
    "end": "1510200"
  },
  {
    "start": "1511000",
    "end": "1511000"
  },
  {
    "text": "okay I will show you um another application of those principle of this",
    "start": "1511120",
    "end": "1518399"
  },
  {
    "text": "office cater uh sometimes uh I needed to offis",
    "start": "1518399",
    "end": "1523880"
  },
  {
    "text": "skate calls for example if I'm calling uh API in the of the operating system to",
    "start": "1523880",
    "end": "1532480"
  },
  {
    "text": "detect jailbreak or detect if a debugger is there or not um I I wanted to protect",
    "start": "1532480",
    "end": "1539399"
  },
  {
    "text": "this call against static analysis and for that I'm using fin",
    "start": "1539399",
    "end": "1546200"
  },
  {
    "start": "1544000",
    "end": "1544000"
  },
  {
    "text": "State machines it's a simplified simple example of a finish State machine for",
    "start": "1546200",
    "end": "1553240"
  },
  {
    "text": "that um the the ID when I'm calling a function it's to put some code a lot of",
    "start": "1553240",
    "end": "1561880"
  },
  {
    "text": "code between the color and the target the",
    "start": "1561880",
    "end": "1566960"
  },
  {
    "text": "col this is my call and this is my",
    "start": "1566960",
    "end": "1572520"
  },
  {
    "text": "actual call to the Target and I will run a finish State machine in",
    "start": "1572520",
    "end": "1580960"
  },
  {
    "text": "between to implement that um I'm using boost Tate machine Library boost is a",
    "start": "1581880",
    "end": "1590679"
  },
  {
    "start": "1583000",
    "end": "1583000"
  },
  {
    "text": "C++ library and uh with a lot of um",
    "start": "1590679",
    "end": "1598080"
  },
  {
    "text": "different things in that and you have different implementation of finish State",
    "start": "1598080",
    "end": "1603399"
  },
  {
    "text": "machines what is interesting is that um using this kind of",
    "start": "1603399",
    "end": "1610080"
  },
  {
    "text": "construction with a MPL Vector um I'm just declaring the State",
    "start": "1610080",
    "end": "1618480"
  },
  {
    "text": "table of my finish State machine and the compiler will generate at compile time a",
    "start": "1618480",
    "end": "1624840"
  },
  {
    "text": "fin State machine um it's a vector but it's not a runtime Vector",
    "start": "1624840",
    "end": "1631360"
  },
  {
    "text": "it's um compile time Vector it's here it's not types it's not values it's",
    "start": "1631360",
    "end": "1638919"
  },
  {
    "text": "types it's um all this is only",
    "start": "1638919",
    "end": "1644360"
  },
  {
    "text": "construction for the compiler evaluated only uh during the compilation there is",
    "start": "1644360",
    "end": "1650880"
  },
  {
    "text": "no representation of that uh except the gener generated code um it's not like an",
    "start": "1650880",
    "end": "1658080"
  },
  {
    "text": "array of something like",
    "start": "1658080",
    "end": "1662039"
  },
  {
    "text": "that and I will show you the result this time I will not go into the details of",
    "start": "1664840",
    "end": "1670039"
  },
  {
    "text": "the implementation because it's far more complex that officiation of",
    "start": "1670039",
    "end": "1675440"
  },
  {
    "text": "string um I will just show you the result so this is my call without",
    "start": "1675440",
    "end": "1682880"
  },
  {
    "text": "officiation and with officiation I have something like that um um you just put the name of the",
    "start": "1682880",
    "end": "1692600"
  },
  {
    "text": "function as the first parameter of the officiated call macro and you can also",
    "start": "1692600",
    "end": "1698720"
  },
  {
    "text": "combine this with officiation of string if you have strings of as",
    "start": "1698720",
    "end": "1705840"
  },
  {
    "text": "parameters and I will just show you the result uh this is without",
    "start": "1705840",
    "end": "1712720"
  },
  {
    "text": "aisc with my my two parameters and I",
    "start": "1712720",
    "end": "1717880"
  },
  {
    "text": "don't have a call in this case it's a jump because the compiler has decided to",
    "start": "1717880",
    "end": "1723240"
  },
  {
    "text": "optimize uh the the call and it has replaced this with a jump and I will",
    "start": "1723240",
    "end": "1729760"
  },
  {
    "text": "show you in either the result with",
    "start": "1729760",
    "end": "1734720"
  },
  {
    "text": "officiation no it's not",
    "start": "1736399",
    "end": "1740840"
  },
  {
    "text": "that I I've made a compilation with symbols otherwise uh it uh you don't see",
    "start": "1748880",
    "end": "1757240"
  },
  {
    "text": "anything and this is uh the code I have the",
    "start": "1757240",
    "end": "1765480"
  },
  {
    "text": "compiler has generated uh some some code and if I'm looking",
    "start": "1765480",
    "end": "1773879"
  },
  {
    "text": "for for my function the function I try to to",
    "start": "1777600",
    "end": "1782919"
  },
  {
    "text": "protect in my example it's called Uh function to protect and if I look for cross",
    "start": "1782919",
    "end": "1791559"
  },
  {
    "text": "references to this function Ida is not able to find it uh we see in the first",
    "start": "1791559",
    "end": "1799720"
  },
  {
    "text": "um example with Ida that Ida is able to compute",
    "start": "1799720",
    "end": "1804919"
  },
  {
    "text": "references cross references uh what you are calling and what is calling you and",
    "start": "1804919",
    "end": "1812240"
  },
  {
    "text": "in this case with the office cator it's not able to find it so if you know the",
    "start": "1812240",
    "end": "1819320"
  },
  {
    "text": "function you don't know where it it is called and since um uh fin State machine",
    "start": "1819320",
    "end": "1827320"
  },
  {
    "text": "is executing if you try to debug step by step it will take a long",
    "start": "1827320",
    "end": "1834279"
  },
  {
    "text": "time uh perhaps I can show you where it is",
    "start": "1834279",
    "end": "1840679"
  },
  {
    "text": "called I the",
    "start": "1842000",
    "end": "1845519"
  },
  {
    "text": "address no what",
    "start": "1851279",
    "end": "1859240"
  },
  {
    "text": "this is my color and this is all this is generated by the",
    "start": "1860399",
    "end": "1868200"
  },
  {
    "text": "compiler uh it iterates the fin State",
    "start": "1868200",
    "end": "1873880"
  },
  {
    "start": "1885000",
    "end": "1885000"
  },
  {
    "text": "machine but I can go even further I can combine my finished State machine",
    "start": "1885840",
    "end": "1892159"
  },
  {
    "text": "execution with um something which is evaluated at runtime for example uh I",
    "start": "1892159",
    "end": "1900080"
  },
  {
    "text": "can detect a debugger and if a debugger is there I",
    "start": "1900080",
    "end": "1905760"
  },
  {
    "text": "will follow a different path in my finish State machine this is just an example of a",
    "start": "1905760",
    "end": "1912039"
  },
  {
    "text": "finish State machine and if I I see a",
    "start": "1912039",
    "end": "1918760"
  },
  {
    "text": "debugger I will go back from state two to State one and if there is no",
    "start": "1918760",
    "end": "1926480"
  },
  {
    "text": "debugger I will go to state four and I will effectively call my",
    "start": "1926480",
    "end": "1933919"
  },
  {
    "text": "target here only from between State four",
    "start": "1933919",
    "end": "1939200"
  },
  {
    "text": "and state five so if I'm go back if I go back to State one you see I'm going",
    "start": "1939200",
    "end": "1946039"
  },
  {
    "text": "directly to state five and my target is not",
    "start": "1946039",
    "end": "1953840"
  },
  {
    "start": "1956000",
    "end": "1956000"
  },
  {
    "text": "executed um I have a predicate in this case it's uh the detection of a",
    "start": "1956399",
    "end": "1963039"
  },
  {
    "text": "debugger I can make an if somewhere but uh I prefer to aisc that to avoid if if",
    "start": "1963039",
    "end": "1971440"
  },
  {
    "text": "are very easy to patch and uh instead of if I will make",
    "start": "1971440",
    "end": "1976760"
  },
  {
    "text": "some computation on the result of this predicate and I will take a different",
    "start": "1976760",
    "end": "1983799"
  },
  {
    "text": "path based on that in the example I'm just checking if the counter is odd or",
    "start": "1983799",
    "end": "1990960"
  },
  {
    "text": "not so of course I have a if somewhere uh but it's Iden in the",
    "start": "1990960",
    "end": "1997320"
  },
  {
    "text": "execution of the Finish State machine I can go even further like I",
    "start": "1997320",
    "end": "2005840"
  },
  {
    "text": "said uh just previous mostly um Ida is able is smart enough to compute cross",
    "start": "2005840",
    "end": "2012600"
  },
  {
    "text": "references so I have to off escate the address of my target it's simple I can",
    "start": "2012600",
    "end": "2020840"
  },
  {
    "text": "make some computation with an offset for example and I'm I can reuse my meta",
    "start": "2020840",
    "end": "2027559"
  },
  {
    "text": "random template to generate this random uh this offset randomly at",
    "start": "2027559",
    "end": "2035279"
  },
  {
    "text": "compile time each time you compile your application it will use a different",
    "start": "2035279",
    "end": "2040399"
  },
  {
    "text": "offset Etc it's very similar to the officiation of",
    "start": "2040399",
    "end": "2047120"
  },
  {
    "start": "2047000",
    "end": "2047000"
  },
  {
    "text": "strings um for the predicate I take the example of debugger detection but it's",
    "start": "2048079",
    "end": "2055280"
  },
  {
    "text": "only uh an example I made a small implementation for mcrx and iOS but you",
    "start": "2055280",
    "end": "2062839"
  },
  {
    "text": "can imagine to detect virtual environment uh to detect jailbreak to",
    "start": "2062839",
    "end": "2068638"
  },
  {
    "text": "detect what you want to combine these different things and to select also this",
    "start": "2068639",
    "end": "2074760"
  },
  {
    "text": "um different predicates randomly at one time and um it's um it increasing the",
    "start": "2074760",
    "end": "2083800"
  },
  {
    "text": "complexity of reverse engineering of course I'm not pretending that it's the",
    "start": "2083800",
    "end": "2090280"
  },
  {
    "text": "solution uh against reverse engineering it's only an element uh of a global",
    "start": "2090280",
    "end": "2096480"
  },
  {
    "text": "solution",
    "start": "2096480",
    "end": "2098879"
  },
  {
    "start": "2101000",
    "end": "2101000"
  },
  {
    "text": "and some word about compilers to be able to use this office cator you need um a",
    "start": "2101520",
    "end": "2109280"
  },
  {
    "text": "compiler which is C++ 11 or 14 compliant it's a case of uh llvm",
    "start": "2109280",
    "end": "2117680"
  },
  {
    "text": "including apple one it's also the case with um versions of GCC with",
    "start": "2117680",
    "end": "2128040"
  },
  {
    "text": "but unfortunately it's not the case of Microsoft uh Microsoft has a lot of",
    "start": "2128040",
    "end": "2134680"
  },
  {
    "text": "problems supporting C++ 11 C++ 11 is a major uh version in the",
    "start": "2134680",
    "end": "2143560"
  },
  {
    "text": "history of C++ have changed a lot of things but uh they are not far um i'",
    "start": "2143560",
    "end": "2152400"
  },
  {
    "text": "I've not checked the latest Community preview of the future version of",
    "start": "2152400",
    "end": "2158680"
  },
  {
    "text": "C++ Visual Studio 14 there is just a small detail which is",
    "start": "2158680",
    "end": "2165599"
  },
  {
    "text": "not working and if they are able to support that um the officiator will be it will be",
    "start": "2165599",
    "end": "2174520"
  },
  {
    "text": "possible to use the office skater uh with any almost any",
    "start": "2174520",
    "end": "2180839"
  },
  {
    "text": "compiler I've written a white paper about this with far more detail",
    "start": "2180960",
    "end": "2188160"
  },
  {
    "start": "2181000",
    "end": "2181000"
  },
  {
    "text": "um in in particular regarding the finate machines it's already it's on your DVD",
    "start": "2188160",
    "end": "2195359"
  },
  {
    "text": "normally and it's uh published on the",
    "start": "2195359",
    "end": "2201318"
  },
  {
    "text": "gab um if you have any question if you want to discuss about this uh this is my",
    "start": "2202400",
    "end": "2208599"
  },
  {
    "text": "Twitter account with my email address all the source code is available",
    "start": "2208599",
    "end": "2215160"
  },
  {
    "text": "on JB on my icon account it contains the op visator it's in source code of course",
    "start": "2215160",
    "end": "2220960"
  },
  {
    "text": "it's C++ templates it's in Eder files um with some examples you have the",
    "start": "2220960",
    "end": "2227920"
  },
  {
    "text": "white paper and uh it's a very permissive license uh you can use it for anything",
    "start": "2227920",
    "end": "2236400"
  },
  {
    "text": "including a commercial product um I will just show",
    "start": "2236400",
    "end": "2244240"
  },
  {
    "text": "you what it looks like",
    "start": "2244240",
    "end": "2248599"
  },
  {
    "text": "so this is um in the code which is publish JB have mixed the officiator",
    "start": "2250880",
    "end": "2257200"
  },
  {
    "text": "itself and the and the demonstration demonstration",
    "start": "2257200",
    "end": "2262640"
  },
  {
    "text": "is only in Main and you have different uh way to use the office skater with",
    "start": "2262640",
    "end": "2270079"
  },
  {
    "text": "different steps as the different implementation you see the",
    "start": "2270079",
    "end": "2277359"
  },
  {
    "text": "encrypted three encrypted four exactly like I described during this",
    "start": "2277359",
    "end": "2284200"
  },
  {
    "text": "presentation and um I have also some examples with finite State",
    "start": "2284200",
    "end": "2292160"
  },
  {
    "text": "machine and if I'm running this",
    "start": "2292160",
    "end": "2297200"
  },
  {
    "text": "example if I can magnify this no yes",
    "start": "2301000",
    "end": "2308520"
  },
  {
    "text": "I put some logs uh in the samples so you can see what happened uh for example you",
    "start": "2310319",
    "end": "2317839"
  },
  {
    "text": "see that for this tring it has selected F5 for the key and for exactly the same",
    "start": "2317839",
    "end": "2324880"
  },
  {
    "text": "thing the same string uh another instance it's one Etc and the at the end perhaps you",
    "start": "2324880",
    "end": "2336240"
  },
  {
    "text": "don't see",
    "start": "2336240",
    "end": "2339119"
  },
  {
    "text": "it this is an example of my finish State machine with debugger detection when I'm",
    "start": "2346800",
    "end": "2353240"
  },
  {
    "text": "running inside xcode it's running under debugger so I don't see anything here",
    "start": "2353240",
    "end": "2361480"
  },
  {
    "text": "and if I look at the code",
    "start": "2361480",
    "end": "2368440"
  },
  {
    "text": "this is a function I wanted to protect and it's supposed to to print out",
    "start": "2370960",
    "end": "2378440"
  },
  {
    "text": "prism and if instead of running it inside xcode I'm running it",
    "start": "2378440",
    "end": "2386318"
  },
  {
    "text": "directly so I have my application my sample DV",
    "start": "2393480",
    "end": "2401200"
  },
  {
    "text": "abator and this time it's WR prism and I show that I also see that prism is",
    "start": "2407079",
    "end": "2414000"
  },
  {
    "text": "fiscated itself uh with this key if you make a uh release uh version of course",
    "start": "2414000",
    "end": "2422119"
  },
  {
    "text": "you don't have all the logs um",
    "start": "2422119",
    "end": "2428119"
  },
  {
    "text": "otherwise it defeat a fation okay thank you for your attention",
    "start": "2428119",
    "end": "2436680"
  },
  {
    "text": "and uh if you have questions I will try to",
    "start": "2436680",
    "end": "2442640"
  },
  {
    "text": "answer",
    "start": "2445480",
    "end": "2448480"
  }
]