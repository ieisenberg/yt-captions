[
  {
    "text": "hello everyone my name is shorten I'm a researcher of Microsoft Research this is",
    "start": "30",
    "end": "6899"
  },
  {
    "text": "a joint work with my colleague shares CATIA of Microsoft Matt McCutcheon of",
    "start": "6899",
    "end": "12030"
  },
  {
    "text": "MIT falc√£o and Ravi Eyre of University of Illinois so today I'm going to",
    "start": "12030",
    "end": "18840"
  },
  {
    "text": "introduce a framework for safer integrations of single sign-on services",
    "start": "18840",
    "end": "25010"
  },
  {
    "text": "so I think most people have the experience of single sign-on or SSO for",
    "start": "25010",
    "end": "32099"
  },
  {
    "text": "example if you go to airbnb.com when you",
    "start": "32099",
    "end": "40680"
  },
  {
    "text": "click sign-in log in it allows you to",
    "start": "40680",
    "end": "45840"
  },
  {
    "text": "use your Facebook or Google identity so with just one click now now I'm signed",
    "start": "45840",
    "end": "58289"
  },
  {
    "text": "in to Airbnb right this is very convenient for for users it's also very",
    "start": "58289",
    "end": "66090"
  },
  {
    "text": "convenient for website administrators who do not need to manage user identity",
    "start": "66090",
    "end": "73400"
  },
  {
    "text": "which which would be a big headache so",
    "start": "73400",
    "end": "80540"
  },
  {
    "text": "so single sign-on SSO is really the front door lock for tens of millions of",
    "start": "83360",
    "end": "90299"
  },
  {
    "text": "website many companies many companies",
    "start": "90299",
    "end": "102990"
  },
  {
    "text": "provide identity services so here I show you 30 companies providing such services",
    "start": "102990",
    "end": "110430"
  },
  {
    "text": "but there are more companies and these companies provide SDKs for different web",
    "start": "110430",
    "end": "118979"
  },
  {
    "text": "languages like asp.net PHP node.js many other languages and they also provide",
    "start": "118979",
    "end": "126320"
  },
  {
    "text": "step-by-step instructions to teach developers how to integrate such",
    "start": "126320",
    "end": "131459"
  },
  {
    "text": "services and SD to their websites so as a website developer you are expected to know",
    "start": "131459",
    "end": "140190"
  },
  {
    "text": "something about the underlying protocol like like this is the open IT connector",
    "start": "140190",
    "end": "149739"
  },
  {
    "text": "protocol which is pretty complicated as you can see here and also you are",
    "start": "149739",
    "end": "157780"
  },
  {
    "text": "expected to know if you if you use a specific SDK you are supposed to know",
    "start": "157780",
    "end": "165459"
  },
  {
    "text": "the how to how to use this specific SDK",
    "start": "165459",
    "end": "172900"
  },
  {
    "text": "for example right now you are seeing this Microsoft Azure Active Directory",
    "start": "172900",
    "end": "180450"
  },
  {
    "text": "SDK for nodejs so you are expected to follow a step one two three four or five",
    "start": "180450",
    "end": "186340"
  },
  {
    "text": "you need to understand these things and and then put this into your website",
    "start": "186340",
    "end": "195450"
  },
  {
    "text": "however most website programmers are not",
    "start": "195450",
    "end": "233190"
  },
  {
    "text": "experienced locksmiths so imagine that you are you are asked to put a lock on",
    "start": "233190",
    "end": "243010"
  },
  {
    "text": "your front door so you buy this product from a hardware store and then you read",
    "start": "243010",
    "end": "248139"
  },
  {
    "text": "the installation guide then you drill holes you put some a lock cylinder",
    "start": "248139",
    "end": "254739"
  },
  {
    "text": "someplace and not everybody can do this right so similarly if you expect an",
    "start": "254739",
    "end": "261219"
  },
  {
    "text": "average website developer to integrate single sign-on so",
    "start": "261219",
    "end": "267110"
  },
  {
    "text": "the question is whether they are able to do this security and it turned out that",
    "start": "267110",
    "end": "273590"
  },
  {
    "text": "there are many studies showing that security critical logic bugs are",
    "start": "273590",
    "end": "279719"
  },
  {
    "text": "pervasive on websites so these studies",
    "start": "279719",
    "end": "284930"
  },
  {
    "text": "have been published in leading academic security conferences as well as in black",
    "start": "284930",
    "end": "291330"
  },
  {
    "text": "hat conferences so last year in black hat USA and black hat Europe there were",
    "start": "291330",
    "end": "298110"
  },
  {
    "text": "talks about SSO integration problems and because of these problems an attacker",
    "start": "298110",
    "end": "305400"
  },
  {
    "text": "can sign into a victim's account or an attacker can stealthily cause the the",
    "start": "305400",
    "end": "311879"
  },
  {
    "text": "victims to sign into the attackers account which is commonly known as locking request a forgery and there was",
    "start": "311879",
    "end": "319650"
  },
  {
    "text": "a report from the cloud security alliance which ranked API integration",
    "start": "319650",
    "end": "327569"
  },
  {
    "text": "bugs as the number for cloud security top threat and SSO logical bugs are the",
    "start": "327569",
    "end": "335250"
  },
  {
    "text": "primary example of that bug category so next I'm going to show you a few video",
    "start": "335250",
    "end": "344159"
  },
  {
    "text": "demos so the the first demo is about Microsoft Azure Active Directory library",
    "start": "344159",
    "end": "352339"
  },
  {
    "text": "that we just saw a few minutes ago so",
    "start": "352339",
    "end": "357810"
  },
  {
    "text": "this part allows the attacker to log into the victims account",
    "start": "357810",
    "end": "364510"
  },
  {
    "text": "[Music]",
    "start": "364510",
    "end": "367620"
  },
  {
    "text": "it's demo I'm going to show you a fun ability that we discovered in the nodejs",
    "start": "372310",
    "end": "379669"
  },
  {
    "text": "package of Azure Active Directory the",
    "start": "379669",
    "end": "385880"
  },
  {
    "text": "problem has been fixed what happened was that if a developer simply follows an",
    "start": "385880",
    "end": "395180"
  },
  {
    "text": "earlier version of this developer guide he will end up happy a website like this",
    "start": "395180",
    "end": "402979"
  },
  {
    "text": "and please ignore the certificate error which is unrelated to this problem so in",
    "start": "402979",
    "end": "414259"
  },
  {
    "text": "this simple website you can see a link",
    "start": "414259",
    "end": "419720"
  },
  {
    "text": "if the user clicks on this link then he",
    "start": "419720",
    "end": "426380"
  },
  {
    "text": "can log in and this is the account information and in particular this is",
    "start": "426380",
    "end": "431930"
  },
  {
    "text": "the preferred username so it is my identity shortened at microsoft.com so",
    "start": "431930",
    "end": "440479"
  },
  {
    "text": "this looks good however the problem is actually an",
    "start": "440479",
    "end": "447169"
  },
  {
    "text": "attacker can log into your account and an attacker actually can completely fake",
    "start": "447169",
    "end": "453909"
  },
  {
    "text": "the identity information for example suppose I want to login to the website",
    "start": "453909",
    "end": "459919"
  },
  {
    "text": "as Bill Gates so I can fill in this form",
    "start": "459919",
    "end": "466539"
  },
  {
    "text": "name is Bill Gates and the email is Bill",
    "start": "466539",
    "end": "476449"
  },
  {
    "text": "G at soft attack on for example um and I",
    "start": "476449",
    "end": "481789"
  },
  {
    "text": "can also copy whatever I want then I can",
    "start": "481789",
    "end": "488270"
  },
  {
    "text": "directly post this set of identity to the website and you can see that the",
    "start": "488270",
    "end": "495680"
  },
  {
    "text": "website consider this is my name and even even this preferred",
    "start": "495680",
    "end": "504669"
  },
  {
    "text": "user name can be faked arbitrarily the problem because of this spot anybody can",
    "start": "504669",
    "end": "512680"
  },
  {
    "text": "get into the victims account because there is an important security check",
    "start": "512680",
    "end": "519430"
  },
  {
    "text": "missing in the SDKs developer guide and the second demo I'm going to show is",
    "start": "519430",
    "end": "525820"
  },
  {
    "text": "locking request a forgery on skype online it it cause a victim to now I'm",
    "start": "525820",
    "end": "533620"
  },
  {
    "text": "going to love you attack a lot in forgery problem now suppose this is a",
    "start": "533620",
    "end": "542880"
  },
  {
    "text": "victim machine and the victim receive an email now I'm going to show you that at",
    "start": "542880",
    "end": "550209"
  },
  {
    "text": "this point the victim has not logged into the account but if he if the victim",
    "start": "550209",
    "end": "561699"
  },
  {
    "text": "just click on this link",
    "start": "561699",
    "end": "566160"
  },
  {
    "text": "so you can see that the victim has locked into this fake account that I",
    "start": "574880",
    "end": "582870"
  },
  {
    "text": "created a moment ago and in fact this",
    "start": "582870",
    "end": "587960"
  },
  {
    "text": "you can really communicate from from the",
    "start": "587960",
    "end": "595700"
  },
  {
    "text": "attacker machine so this is demo okay",
    "start": "595700",
    "end": "606600"
  },
  {
    "text": "then what I'm showing you is now you you",
    "start": "606600",
    "end": "613290"
  },
  {
    "text": "really get into this fully functional",
    "start": "613290",
    "end": "619310"
  },
  {
    "text": "fake account hello yeah so it's this",
    "start": "619310",
    "end": "630570"
  },
  {
    "text": "kind of request a forgery problem is actually pretty common when",
    "start": "630570",
    "end": "637080"
  },
  {
    "text": "website implement single sign-on protocol these are just two problems that we",
    "start": "637080",
    "end": "645240"
  },
  {
    "text": "discovered in the past a few years we have reported many SSO issues to various",
    "start": "645240",
    "end": "651870"
  },
  {
    "text": "companies and relying party websites so I want to say that even big companies",
    "start": "651870",
    "end": "657510"
  },
  {
    "text": "make this kind of mistakes so now let let's go a little deeper to understand",
    "start": "657510",
    "end": "665490"
  },
  {
    "text": "what are the tricky things when you really adopt a single sign-on so here I",
    "start": "665490",
    "end": "671430"
  },
  {
    "text": "give you an example which is a bug due",
    "start": "671430",
    "end": "676650"
  },
  {
    "text": "to insufficient logic checks using Google ID and this was back in 2012 when",
    "start": "676650",
    "end": "684530"
  },
  {
    "text": "Google ID was based on the open ID 2.0 protocol the protocol is fairly",
    "start": "684530",
    "end": "692190"
  },
  {
    "text": "complicated but I'm going to explain a highly simplified version of the",
    "start": "692190",
    "end": "698940"
  },
  {
    "text": "protocol so in this simplified",
    "start": "698940",
    "end": "704060"
  },
  {
    "text": "explanation I have only two browser redirections so a browser redirection is essentially a",
    "start": "704060",
    "end": "712010"
  },
  {
    "text": "message sent from a website to the client and if the client is honest a",
    "start": "712010",
    "end": "719310"
  },
  {
    "text": "browser the client should forward the message to the destination website that is called a browser we direction so in",
    "start": "719310",
    "end": "727140"
  },
  {
    "text": "me direction one there is a field realm equals the relying parties identity and",
    "start": "727140",
    "end": "735180"
  },
  {
    "text": "then required equals email first name and last name so essentially the relying",
    "start": "735180",
    "end": "742620"
  },
  {
    "text": "party is telling Google ID that please give me the email first name and last",
    "start": "742620",
    "end": "748590"
  },
  {
    "text": "name of the user okay so when when this redirection is received then the Google",
    "start": "748590",
    "end": "755850"
  },
  {
    "text": "service generate essentially a sealed envelope and inside the envelope you see",
    "start": "755850",
    "end": "763050"
  },
  {
    "text": "email first name and last name and it also indicates that these three fields",
    "start": "763050",
    "end": "769500"
  },
  {
    "text": "are protected by the signature and there is a signature as the CEO now whether we",
    "start": "769500",
    "end": "777060"
  },
  {
    "text": "directly on to comes back to the relying party the relying party will validate the signature and then authenticated the",
    "start": "777060",
    "end": "784320"
  },
  {
    "text": "user has and is at a dot-com okay so this seem to be straightforward however",
    "start": "784320",
    "end": "790710"
  },
  {
    "text": "when we consider in the real scenario it is a little bit complicated because now",
    "start": "790710",
    "end": "798720"
  },
  {
    "text": "let's assume pop is an attacker now what Bob can do is to remove email from",
    "start": "798720",
    "end": "805740"
  },
  {
    "text": "redirection one so in this situation our from Google's standpoint it looks as if",
    "start": "805740",
    "end": "813600"
  },
  {
    "text": "the relying party was only interested in first name and last name okay so so",
    "start": "813600",
    "end": "820880"
  },
  {
    "text": "Google will respond with this CEO the envelope which only contains first name",
    "start": "820880",
    "end": "827640"
  },
  {
    "text": "and last name but now Bob just attach another field called email equals Alice",
    "start": "827640",
    "end": "834420"
  },
  {
    "text": "at a calm so think of this as a sealed envelope and on top of that is a yellow sticker",
    "start": "834420",
    "end": "841200"
  },
  {
    "text": "which says Alice at accom now the problem is a lot of relying party",
    "start": "841200",
    "end": "847560"
  },
  {
    "text": "websites simply use an SDK certified by Google and in that SDK there was a",
    "start": "847560",
    "end": "855090"
  },
  {
    "text": "method literally called validate message and what the method does is to check the",
    "start": "855090",
    "end": "863280"
  },
  {
    "text": "signature but in this case the signature is okay because Bob didn't attempt to",
    "start": "863280",
    "end": "869460"
  },
  {
    "text": "temper with the signature right so once the SDK returns okay then a lot",
    "start": "869460",
    "end": "875700"
  },
  {
    "text": "of websites are just happy Lee Authenticator the user has an estate car",
    "start": "875700",
    "end": "880860"
  },
  {
    "text": "which is incorrect now here is a another",
    "start": "880860",
    "end": "888330"
  },
  {
    "text": "example it is the it is due to an unintended usage of all us 2.0 access",
    "start": "888330",
    "end": "897120"
  },
  {
    "text": "token several years ago the life ID",
    "start": "897120",
    "end": "903440"
  },
  {
    "text": "developer guide showed people how to integrate how to recognize a user in a",
    "start": "903440",
    "end": "911610"
  },
  {
    "text": "mobile app so for example we we develop a mobile app called foo app and suppose",
    "start": "911610",
    "end": "919470"
  },
  {
    "text": "Alice is running through app this is how foo app can recognize the user Alice",
    "start": "919470",
    "end": "925950"
  },
  {
    "text": "first the app cause a life ID API login",
    "start": "925950",
    "end": "933300"
  },
  {
    "text": "with the basic scope essentially this is to tell the service that I'm going to",
    "start": "933300",
    "end": "940500"
  },
  {
    "text": "access this users basic information publicly information then of course the",
    "start": "940500",
    "end": "946220"
  },
  {
    "text": "the life IT service need to issue an access token to the to the application",
    "start": "946220",
    "end": "952830"
  },
  {
    "text": "and then with this token the application can call a REST API me in order to get",
    "start": "952830",
    "end": "959280"
  },
  {
    "text": "the users information then foo app is",
    "start": "959280",
    "end": "964410"
  },
  {
    "text": "able to recognize in the user a status right this is also pretty straightforward and there is no problem",
    "start": "964410",
    "end": "970860"
  },
  {
    "text": "in this protocol however many mobile apps have their",
    "start": "970860",
    "end": "977660"
  },
  {
    "text": "back-end services so for example let's consider foo app as a back-end service",
    "start": "977660",
    "end": "983600"
  },
  {
    "text": "phu kham now in order to authenticate the client into the back-end service a",
    "start": "983600",
    "end": "990889"
  },
  {
    "text": "lot of developers simply pass the token",
    "start": "990889",
    "end": "996380"
  },
  {
    "text": "from the client to the to the backhander server and and then essentially the",
    "start": "996380",
    "end": "1004269"
  },
  {
    "text": "first two steps happens on the client side and then pass the token then step",
    "start": "1004269",
    "end": "1009670"
  },
  {
    "text": "three and four happens in the the backend side and this turned out to be a",
    "start": "1009670",
    "end": "1015130"
  },
  {
    "text": "serious problem it allows any app on Alice device or any relying party that",
    "start": "1015130",
    "end": "1023440"
  },
  {
    "text": "Alice has ever visited to sign into food comm as Alice essentially if if phu kham",
    "start": "1023440",
    "end": "1031870"
  },
  {
    "text": "is a bank then even some arbitrary apps",
    "start": "1031870",
    "end": "1037270"
  },
  {
    "text": "like Angry Birds or Pokemon go is able to get into the bank account right so I",
    "start": "1037270",
    "end": "1044790"
  },
  {
    "text": "this is due to a confusion about authentication and authorization now let",
    "start": "1044790",
    "end": "1050559"
  },
  {
    "text": "me use this analogy to explain the root cause of the confusion so imagine that",
    "start": "1050559",
    "end": "1057490"
  },
  {
    "text": "we we have an ID office and the the president authorizes everybody to see",
    "start": "1057490",
    "end": "1064960"
  },
  {
    "text": "his public photo which is okay because it's just a public photo now there is a",
    "start": "1064960",
    "end": "1070450"
  },
  {
    "text": "yellow face here who says I want to see the photo then of course the ID office",
    "start": "1070450",
    "end": "1076120"
  },
  {
    "text": "has to issue the token because everybody should be able to see the photo once the",
    "start": "1076120",
    "end": "1083190"
  },
  {
    "text": "access token is obtained now this yellow face just passed the token to the",
    "start": "1083190",
    "end": "1088510"
  },
  {
    "text": "relying party then the relying party presented the token back to the ID",
    "start": "1088510",
    "end": "1094870"
  },
  {
    "text": "office then of course the relying party will get to the public photo so if you",
    "start": "1094870",
    "end": "1101380"
  },
  {
    "text": "think about this whole scenario as authorization there's really no problem because everybody having the token to to",
    "start": "1101380",
    "end": "1109299"
  },
  {
    "text": "see the photo right now the real problem is if the relying party concludes that",
    "start": "1109299",
    "end": "1114970"
  },
  {
    "text": "oh that's why the yellow face was the president then he is making a",
    "start": "1114970",
    "end": "1121740"
  },
  {
    "text": "authentication conclusion which does not have any logical base so it's pretty",
    "start": "1121740",
    "end": "1128200"
  },
  {
    "text": "tricky so so let me show you a",
    "start": "1128200",
    "end": "1134010"
  },
  {
    "text": "vulnerable application because of this confusion so this application is called",
    "start": "1134010",
    "end": "1140860"
  },
  {
    "text": "saluto it has a mobile app and a back-end saluto comm what we are seeing",
    "start": "1140860",
    "end": "1148630"
  },
  {
    "text": "right now is the victim machine then this victim Alice just run any any",
    "start": "1148630",
    "end": "1158110"
  },
  {
    "text": "application and turn out to be or malicious a malicious application oh let",
    "start": "1158110",
    "end": "1165730"
  },
  {
    "text": "me let me go back a little bit so once she runs the malicious application the",
    "start": "1165730",
    "end": "1173950"
  },
  {
    "text": "application is of is able to get the access token that there is no problem",
    "start": "1173950",
    "end": "1179380"
  },
  {
    "text": "because everybody can get the access token now this token is send it to the",
    "start": "1179380",
    "end": "1185139"
  },
  {
    "text": "attacker machine which is to this machine now when when when the attacker",
    "start": "1185139",
    "end": "1194740"
  },
  {
    "text": "get the access token it can directly poster the access token to the",
    "start": "1194740",
    "end": "1200380"
  },
  {
    "text": "authentication endpoint of saluto calm and as a result you see that this",
    "start": "1200380",
    "end": "1208870"
  },
  {
    "text": "attacker can sign in as Alice although",
    "start": "1208870",
    "end": "1214210"
  },
  {
    "text": "the only thing the attacker is able to obtain is almost public access token",
    "start": "1214210",
    "end": "1220539"
  },
  {
    "text": "which everybody can get now I just",
    "start": "1220539",
    "end": "1228730"
  },
  {
    "text": "explain I just show are a few demos and explain some of the problems that people",
    "start": "1228730",
    "end": "1234580"
  },
  {
    "text": "can get wrong and in the rest part of the talk I'm going to",
    "start": "1234580",
    "end": "1240350"
  },
  {
    "text": "introduce our solution to the problem it is based on a technology a program",
    "start": "1240350",
    "end": "1247920"
  },
  {
    "text": "verification technology called self verifying execution or SVX no I think",
    "start": "1247920",
    "end": "1256380"
  },
  {
    "text": "perhaps some of you have heard of the term program verification but many",
    "start": "1256380",
    "end": "1264420"
  },
  {
    "text": "people may think that program verification is something very automatic is like a black box if you have the",
    "start": "1264420",
    "end": "1272070"
  },
  {
    "text": "source code of the program you want to check as well as a safety property and",
    "start": "1272070",
    "end": "1277410"
  },
  {
    "text": "that you can just let this robot to find a box for you that that would be",
    "start": "1277410",
    "end": "1282870"
  },
  {
    "text": "wonderful right it's just have the source code and all the bugs will be found that would be good but in reality",
    "start": "1282870",
    "end": "1289460"
  },
  {
    "text": "program verification is a very challenging task for a number of reasons",
    "start": "1289460",
    "end": "1295260"
  },
  {
    "text": "the first reason is that the source code alone is not enough you need to model",
    "start": "1295260",
    "end": "1303270"
  },
  {
    "text": "the runtime platform like the the webserver behavior the operating system",
    "start": "1303270",
    "end": "1309860"
  },
  {
    "text": "these kind of details and that is very difficult to be precise and second you",
    "start": "1309860",
    "end": "1318570"
  },
  {
    "text": "also need to model the hypothetical attacker which is able to are do all",
    "start": "1318570",
    "end": "1325560"
  },
  {
    "text": "kinds of things then essentially you need to know everything that the",
    "start": "1325560",
    "end": "1331680"
  },
  {
    "text": "attacker is able to do that it is very",
    "start": "1331680",
    "end": "1336900"
  },
  {
    "text": "difficult to be exhaustive in the modeling now even after the modeling the",
    "start": "1336900",
    "end": "1343140"
  },
  {
    "text": "theorem is also very difficult essentially what you are going to prove is that if the attacker is able at Acker",
    "start": "1343140",
    "end": "1352740"
  },
  {
    "text": "a is able to call program P for infinitely many times so there is a",
    "start": "1352740",
    "end": "1359130"
  },
  {
    "text": "infinite loop in your theorem and every time there are multiple public ap is",
    "start": "1359130",
    "end": "1367470"
  },
  {
    "text": "then can this safety property fee be violated so this kind of",
    "start": "1367470",
    "end": "1373920"
  },
  {
    "text": "proof because of the exponential and and infinite possibilities of executions you",
    "start": "1373920",
    "end": "1380790"
  },
  {
    "text": "need to induct inductive proof which means you expect that the developer to",
    "start": "1380790",
    "end": "1386940"
  },
  {
    "text": "come up with something called a loop invariant and some good lemmas in order",
    "start": "1386940",
    "end": "1392640"
  },
  {
    "text": "for the proof to go through so this is very difficult to automate the the the",
    "start": "1392640",
    "end": "1402780"
  },
  {
    "text": "purpose of SVX is to lower these hurdles",
    "start": "1402780",
    "end": "1408360"
  },
  {
    "text": "so that program verification can be used to check the real programs at least in",
    "start": "1408360",
    "end": "1415980"
  },
  {
    "text": "weber protocol the basic idea is that",
    "start": "1415980",
    "end": "1421070"
  },
  {
    "text": "every extra execution is responsible for collecting its own executed code and",
    "start": "1421070",
    "end": "1426830"
  },
  {
    "text": "proving that it satisfied thus the safety property fee so in svx",
    "start": "1426830",
    "end": "1433190"
  },
  {
    "text": "there is no need to model the attacker because every execution is driven by a",
    "start": "1433190",
    "end": "1438600"
  },
  {
    "text": "real user there is no need to model the runtime platform because every execution",
    "start": "1438600",
    "end": "1444630"
  },
  {
    "text": "happens at the actual runtime and also very importantly there is no need for",
    "start": "1444630",
    "end": "1450570"
  },
  {
    "text": "inductive proof because it only proves that this execution satisfies the",
    "start": "1450570",
    "end": "1456810"
  },
  {
    "text": "property as opposed to a much more difficult theorem which is all possible",
    "start": "1456810",
    "end": "1462570"
  },
  {
    "text": "executions satisfies the property now I know that this sounds very abstracted to",
    "start": "1462570",
    "end": "1468060"
  },
  {
    "text": "you let me give you a simple toy example imagine that we are building this system",
    "start": "1468060",
    "end": "1475410"
  },
  {
    "text": "which consists of Alex calm Barbara calm and Charlie calm each has an integer ten",
    "start": "1475410",
    "end": "1483060"
  },
  {
    "text": "forty and five and each has a public method method grab is to simply return",
    "start": "1483060",
    "end": "1491610"
  },
  {
    "text": "at its value method compare is to compare Bob's value with the value in",
    "start": "1491610",
    "end": "1498570"
  },
  {
    "text": "the incoming message and then return a greater one method",
    "start": "1498570",
    "end": "1506100"
  },
  {
    "text": "is to compare charlie's value with the value in the incoming message and then",
    "start": "1506100",
    "end": "1511130"
  },
  {
    "text": "people pick a greater one in m2 and then call conclude m2 now as always we assume",
    "start": "1511130",
    "end": "1520169"
  },
  {
    "text": "the client to be completely untrusted which can arbitrarily invoke this",
    "start": "1520169",
    "end": "1526289"
  },
  {
    "text": "message now our safety property is that whenever conclude m2 is reached m2 must",
    "start": "1526289",
    "end": "1534809"
  },
  {
    "text": "represent the website holding the greatest integer so essentially what we",
    "start": "1534809",
    "end": "1540809"
  },
  {
    "text": "are trying to do here is to choose the greatest integer constant among the",
    "start": "1540809",
    "end": "1547140"
  },
  {
    "text": "three website that that's the system we are building now perhaps you expected",
    "start": "1547140",
    "end": "1553350"
  },
  {
    "text": "this kind of execution the first the client will call crap to get and it's",
    "start": "1553350",
    "end": "1559169"
  },
  {
    "text": "infamy up to get Ally's value and then call compare to compare at its value is",
    "start": "1559169",
    "end": "1567210"
  },
  {
    "text": "Bob's value and that eventually call finish to get the greatest integer of",
    "start": "1567210",
    "end": "1573450"
  },
  {
    "text": "the three and in this case if this is the execution indeed we get 40 pop which",
    "start": "1573450",
    "end": "1580650"
  },
  {
    "text": "is correct because 40 is the greatest integer here so this is correct but the system is",
    "start": "1580650",
    "end": "1588539"
  },
  {
    "text": "actually vulnerable because yet the client in corporate and directly call",
    "start": "1588539",
    "end": "1599190"
  },
  {
    "text": "finish in this case the result will be 10 Alice which is incorrect so traditionally if you do program",
    "start": "1599190",
    "end": "1607320"
  },
  {
    "text": "verification you need to model the the website behavior as well as the all",
    "start": "1607320",
    "end": "1614539"
  },
  {
    "text": "possible executions of the client and then you you need to do the inductive",
    "start": "1614539",
    "end": "1620880"
  },
  {
    "text": "proof if you do everything correctly then at some point you will be stuck",
    "start": "1620880",
    "end": "1626970"
  },
  {
    "text": "because ah the the theorem is invalid once you stuck somewhere you figure out",
    "start": "1626970",
    "end": "1633179"
  },
  {
    "text": "that oh there is a possibility of a violation and this is the attack and",
    "start": "1633179",
    "end": "1639960"
  },
  {
    "text": "as I said this in reality this is very complicated and as we acts is quite",
    "start": "1639960",
    "end": "1647190"
  },
  {
    "text": "different it is it is simpler or its",
    "start": "1647190",
    "end": "1654330"
  },
  {
    "text": "need is a message field called seem T or symbolic transaction on every message so",
    "start": "1654330",
    "end": "1661529"
  },
  {
    "text": "again let's see the expected execution this the same execution but notice that",
    "start": "1661529",
    "end": "1670139"
  },
  {
    "text": "in every message we have this additional field initially this additional field is",
    "start": "1670139",
    "end": "1676379"
  },
  {
    "text": "sinh T is empty and after grab is called the sim T becomes Alice calm Colin Colin",
    "start": "1676379",
    "end": "1684740"
  },
  {
    "text": "pound grab and this execution continues until in in the end this is the result a",
    "start": "1684740",
    "end": "1694940"
  },
  {
    "text": "40 pop and this final seam team the final seam t are indicate how we get to",
    "start": "1694940",
    "end": "1702690"
  },
  {
    "text": "the the result 40 pop it is through grab compare and finish now punk rap punk",
    "start": "1702690",
    "end": "1711419"
  },
  {
    "text": "compare and the punk finish are a compact representation of the executed",
    "start": "1711419",
    "end": "1716789"
  },
  {
    "text": "code of this method so I'm not giving you the detail of their representation but let's say let's assume that there is",
    "start": "1716789",
    "end": "1724230"
  },
  {
    "text": "a way to represent the executed road now at this point whether this execution is",
    "start": "1724230",
    "end": "1732779"
  },
  {
    "text": "secure it's easy to check the Charlie",
    "start": "1732779",
    "end": "1737940"
  },
  {
    "text": "Charlie's conclude method simply cause a program verifier to prove that the final",
    "start": "1737940",
    "end": "1744779"
  },
  {
    "text": "sim t implies the property that that we want to ensure so for example in the",
    "start": "1744779",
    "end": "1754769"
  },
  {
    "text": "normal execution if the code goes through grab compare and finish then",
    "start": "1754769",
    "end": "1761039"
  },
  {
    "text": "indeed this sequence of logic is sufficient to imply the safety property",
    "start": "1761039",
    "end": "1767999"
  },
  {
    "text": "so the execution is accepted on the other hand if the the code sequence",
    "start": "1767999",
    "end": "1774000"
  },
  {
    "text": "only consist of grabbed and directly finish then the corresponding logic is",
    "start": "1774000",
    "end": "1780540"
  },
  {
    "text": "insufficient to prove this zero then the execution is rejected and note that in",
    "start": "1780540",
    "end": "1788460"
  },
  {
    "text": "SVX the program verification is symbolic which is only a part of the code but no",
    "start": "1788460",
    "end": "1794370"
  },
  {
    "text": "concrete data so that that means you can",
    "start": "1794370",
    "end": "1800220"
  },
  {
    "text": "think of as SV acts as a middle ground between the traditional offline symbolic",
    "start": "1800220",
    "end": "1808470"
  },
  {
    "text": "verification versus the runtime concrete checking because SVX is doing symbolic verification but at",
    "start": "1808470",
    "end": "1816900"
  },
  {
    "text": "the actual runtime the concrete at runtime and an advantage of svx is that",
    "start": "1816900",
    "end": "1824970"
  },
  {
    "text": "the performance overhead is near zero because all the theorems are symbolic",
    "start": "1824970",
    "end": "1831540"
  },
  {
    "text": "and that they are cashable so that means all normal executions should simply hit",
    "start": "1831540",
    "end": "1838140"
  },
  {
    "text": "the cache and return immediately there is no noticeable performance overhead so let me give a little bit",
    "start": "1838140",
    "end": "1845460"
  },
  {
    "text": "detail about this point so we want Charlie to prove this theorem seam T",
    "start": "1845460",
    "end": "1852720"
  },
  {
    "text": "implies the property now that Charlie has a theorem cache if the theorem has",
    "start": "1852720",
    "end": "1861900"
  },
  {
    "text": "been proven before then the result is litter is returned immediately there is no performance overhead however",
    "start": "1861900",
    "end": "1870120"
  },
  {
    "text": "if the theorem has not been proven then it is given to a verification server on",
    "start": "1870120",
    "end": "1877230"
  },
  {
    "text": "the cloud which we refer to recover the code of the axioms method and synthesizes a straight line program",
    "start": "1877230",
    "end": "1884700"
  },
  {
    "text": "using the seam T the synthesized program is given to a program verifier which",
    "start": "1884700",
    "end": "1890070"
  },
  {
    "text": "will either validate or find a counter example of the of the execution and then",
    "start": "1890070",
    "end": "1897980"
  },
  {
    "text": "the verification result is written back to the theorem cache so if you take this",
    "start": "1897980",
    "end": "1904380"
  },
  {
    "text": "pass it will it would take like 30 to 50 seconds",
    "start": "1904380",
    "end": "1910490"
  },
  {
    "text": "which is very expensive but because of their because of the theorem cache all",
    "start": "1910490",
    "end": "1917220"
  },
  {
    "text": "normal executions should just hit the cache and return immediately unless",
    "start": "1917220",
    "end": "1922850"
  },
  {
    "text": "there is a collaborative who figures out an execution sequence which nobody has",
    "start": "1922850",
    "end": "1930270"
  },
  {
    "text": "has seen before then it would trigger the long pass now I just explained the",
    "start": "1930270",
    "end": "1939180"
  },
  {
    "text": "basic idea of SVX with toy example which had nothing to do with our motivation single sign-on",
    "start": "1939180",
    "end": "1946500"
  },
  {
    "text": "protocol now next I'm going to talk about our open source project as the US",
    "start": "1946500",
    "end": "1952650"
  },
  {
    "text": "which is safer SSO integration solutions",
    "start": "1952650",
    "end": "1957740"
  },
  {
    "text": "based on SPX asbos is essentially an",
    "start": "1957740",
    "end": "1965240"
  },
  {
    "text": "object-oriented framework with svx built in so it has four levels at the top",
    "start": "1965240",
    "end": "1974790"
  },
  {
    "text": "level which is the protocol independent level we defined very basic classes like",
    "start": "1974790",
    "end": "1982290"
  },
  {
    "text": "identity provider relying party as well as the two safety properties logging",
    "start": "1982290",
    "end": "1989700"
  },
  {
    "text": "safety and login intent which correspond which correspond to the two video demos",
    "start": "1989700",
    "end": "1996870"
  },
  {
    "text": "that I showed in the beginning login",
    "start": "1996870",
    "end": "2001880"
  },
  {
    "text": "safety prevent an attacker to login to the victims account and locking intended",
    "start": "2001880",
    "end": "2008480"
  },
  {
    "text": "prevent the victim to accidentally login to the attackers account so we define",
    "start": "2008480",
    "end": "2013790"
  },
  {
    "text": "the post properties now then based on the protocol independent level we derive",
    "start": "2013790",
    "end": "2022180"
  },
  {
    "text": "classes for the protocol level we have OS 2.0 open ID 2.0 and open ID connect",
    "start": "2022180",
    "end": "2030290"
  },
  {
    "text": "then further we derive SDK level classes covering these identity providers and",
    "start": "2030290",
    "end": "2038380"
  },
  {
    "text": "potentially website can further derive classes to to",
    "start": "2038380",
    "end": "2044150"
  },
  {
    "text": "build their specific authentication logic so the the advantage of the",
    "start": "2044150",
    "end": "2050120"
  },
  {
    "text": "framework is that every concrete implementation at the at the most",
    "start": "2050120",
    "end": "2058040"
  },
  {
    "text": "concrete level is guaranteed to satisfy the property that we defined at the top",
    "start": "2058040",
    "end": "2063590"
  },
  {
    "text": "level so this turned out to be a significant capability because several",
    "start": "2063590",
    "end": "2069440"
  },
  {
    "text": "decades ago the oil community wanted it to achieve a similar goal so perhaps",
    "start": "2069440",
    "end": "2078919"
  },
  {
    "text": "some of you are know about this notion called a list called substitution",
    "start": "2078920",
    "end": "2084409"
  },
  {
    "text": "principle or SP the the principle tried",
    "start": "2084410",
    "end": "2090050"
  },
  {
    "text": "to ensure that if a property is true for the base class then it hold for or",
    "start": "2090050",
    "end": "2095270"
  },
  {
    "text": "derived classes so if that was true ah it for in reality then that would be a",
    "start": "2095270",
    "end": "2104300"
  },
  {
    "text": "beautiful thing you just define the property and then you derive all the classes or the classes conform to the",
    "start": "2104300",
    "end": "2111770"
  },
  {
    "text": "property that would be beautiful but people soon realize that even some very",
    "start": "2111770",
    "end": "2122660"
  },
  {
    "text": "realistic scenarios have to violate RSP so this is the most canonical counter",
    "start": "2122660",
    "end": "2129140"
  },
  {
    "text": "example of RSP so suppose there is a a base class called rectangle it has width",
    "start": "2129140",
    "end": "2137030"
  },
  {
    "text": "and height and also it has getters and setters for width and height so for this",
    "start": "2137030",
    "end": "2143990"
  },
  {
    "text": "base class you can prove a property which is essentially that the width is",
    "start": "2143990",
    "end": "2151580"
  },
  {
    "text": "independent of the height and this is true for the base class rectangle",
    "start": "2151580",
    "end": "2156940"
  },
  {
    "text": "however several years later somebody may",
    "start": "2156940",
    "end": "2162470"
  },
  {
    "text": "derive a class for the square and for his purpose he has to override the",
    "start": "2162470",
    "end": "2168200"
  },
  {
    "text": "setters in order to keep the shape a square but once he does",
    "start": "2168200",
    "end": "2173600"
  },
  {
    "text": "that he will this arrived class will violate the property of the base class",
    "start": "2173600",
    "end": "2180260"
  },
  {
    "text": "that people has people have already proven before the in SVX we don't have",
    "start": "2180260",
    "end": "2188240"
  },
  {
    "text": "this dilemma because the verification happens at the actual runtime there is",
    "start": "2188240",
    "end": "2195410"
  },
  {
    "text": "no confusion due to abstraction so for example if if rectangle R is constructed",
    "start": "2195410",
    "end": "2204680"
  },
  {
    "text": "at runtime as a rectangle then of course we are able to prove that the Wis is",
    "start": "2204680",
    "end": "2211060"
  },
  {
    "text": "independent of the height on the other hand if the rectangle R is constructed",
    "start": "2211060",
    "end": "2218240"
  },
  {
    "text": "at runtime as a square then we are able to prove that this property does not",
    "start": "2218240",
    "end": "2226190"
  },
  {
    "text": "hold so there is no confusion because we we define the property at the at base",
    "start": "2226190",
    "end": "2234320"
  },
  {
    "text": "class but we actually validate verify the the property at the actual runtime",
    "start": "2234320",
    "end": "2240250"
  },
  {
    "text": "okay so adopting SBX on your website is",
    "start": "2240250",
    "end": "2245420"
  },
  {
    "text": "extremely simple as VX consists of an agent and an adapter the agent can be a",
    "start": "2245420",
    "end": "2252830"
  },
  {
    "text": "public organizational or local host the agent I skip the detail here but the",
    "start": "2252830",
    "end": "2261050"
  },
  {
    "text": "information is in the readme file of our project now as a developer you only need",
    "start": "2261050",
    "end": "2267800"
  },
  {
    "text": "to pick an agent and the set is endpoint in the svr configuration file and then",
    "start": "2267800",
    "end": "2273440"
  },
  {
    "text": "copy the adapter folder to your website that is how you adopt SV us then",
    "start": "2273440",
    "end": "2281290"
  },
  {
    "text": "assuming you are building a website phu kham in PHP and you want to do Facebook",
    "start": "2281290",
    "end": "2286700"
  },
  {
    "text": "single sign-on the only thing you need to do is to redirect the browser to this",
    "start": "2286700",
    "end": "2294890"
  },
  {
    "text": "URL which contains phu kham PHP and the provider equals Facebook",
    "start": "2294890",
    "end": "2300050"
  },
  {
    "text": "that's all you need to know just redirect them magically the users identity information will be",
    "start": "2300050",
    "end": "2306980"
  },
  {
    "text": "of available in the following session variables so currently we give you the",
    "start": "2306980",
    "end": "2312950"
  },
  {
    "text": "user ID phone full name email and authority so really you don't need to know",
    "start": "2312950",
    "end": "2318710"
  },
  {
    "text": "anything about the single sign-on just do the redirection pick up the session variables so we have covered seven",
    "start": "2318710",
    "end": "2328460"
  },
  {
    "text": "single sign-on providers Facebook and Microsoft account Microsoft Azure Google",
    "start": "2328460",
    "end": "2336830"
  },
  {
    "text": "Yahoo LinkedIn and and Weibo also we",
    "start": "2336830",
    "end": "2343040"
  },
  {
    "text": "support currently we support three languages but it's pretty easy to",
    "start": "2343040",
    "end": "2351820"
  },
  {
    "text": "support more services and and more languages and we have tried to integrate",
    "start": "2351820",
    "end": "2358880"
  },
  {
    "text": "SVRs with real world applications for example we we did integration with",
    "start": "2358880",
    "end": "2365590"
  },
  {
    "text": "MediaWiki so this is a media weekly",
    "start": "2365590",
    "end": "2370910"
  },
  {
    "text": "website and when I click here I'm I'm using as we are so you can see that the",
    "start": "2370910",
    "end": "2379040"
  },
  {
    "text": "integration is seamless it took only eight eight lines of code changes to do",
    "start": "2379040",
    "end": "2387830"
  },
  {
    "text": "the integration and this is hot CRP which is a conference management system",
    "start": "2387830",
    "end": "2394640"
  },
  {
    "text": "widely used in the academic community so we did this integration so again you see",
    "start": "2394640",
    "end": "2403099"
  },
  {
    "text": "that it's in this case we it only took",
    "start": "2403099",
    "end": "2409970"
  },
  {
    "text": "21 lines of code changes and also we did integration with CMT which is another",
    "start": "2409970",
    "end": "2415550"
  },
  {
    "text": "conference management system developed by Microsoft Research so the project is",
    "start": "2415550",
    "end": "2421280"
  },
  {
    "text": "open source under the MIT license available on github this is the project",
    "start": "2421280",
    "end": "2427490"
  },
  {
    "text": "repository so ah now finally I I want to show you a demo",
    "start": "2427490",
    "end": "2435109"
  },
  {
    "text": "of SP us so first let's start with",
    "start": "2435109",
    "end": "2442359"
  },
  {
    "text": "well this is our Facebook class and for",
    "start": "2443530",
    "end": "2450710"
  },
  {
    "text": "the demo purpose so this line is actually an important important security",
    "start": "2450710",
    "end": "2457700"
  },
  {
    "text": "check so for demo purpose I come out to this line so now the program is buggy now we",
    "start": "2457700",
    "end": "2466940"
  },
  {
    "text": "can run this program so after a while",
    "start": "2466940",
    "end": "2476860"
  },
  {
    "text": "the server will start ok ignore this part ok so so oh by the way for this",
    "start": "2476860",
    "end": "2485600"
  },
  {
    "text": "demo purpose I'm running the localhost agent so both the browser and the agent",
    "start": "2485600",
    "end": "2491180"
  },
  {
    "text": "are running on this laptop so when I click Facebook log in you can see that",
    "start": "2491180",
    "end": "2501339"
  },
  {
    "text": "the verification starts so first the the verification server",
    "start": "2503770",
    "end": "2511070"
  },
  {
    "text": "will synthesize the the program corresponding to the execution the the",
    "start": "2511070",
    "end": "2516620"
  },
  {
    "text": "final sim T and then it will compile this c-sharp code into da net code then",
    "start": "2516620",
    "end": "2525260"
  },
  {
    "text": "it will translate the tener code to the formal language called the Boogie and",
    "start": "2525260",
    "end": "2530900"
  },
  {
    "text": "then prove the correctness of the buggy code so right now we are in the stage of",
    "start": "2530900",
    "end": "2535970"
  },
  {
    "text": "proving the proving the Dukey program and it will take a few maybe 30 seconds",
    "start": "2535970",
    "end": "2548710"
  },
  {
    "text": "okay so this says there is a there's a",
    "start": "2555000",
    "end": "2561020"
  },
  {
    "text": "counterexample found right by the theorem prover so this gives you the",
    "start": "2561020",
    "end": "2568880"
  },
  {
    "text": "execution trace so you can step through this counter example and then you can",
    "start": "2568880",
    "end": "2576360"
  },
  {
    "text": "figure out why this proof didn't go through then so I realized oh it's",
    "start": "2576360",
    "end": "2587250"
  },
  {
    "text": "because of missing this important check",
    "start": "2587250",
    "end": "2592640"
  },
  {
    "text": "but then then I fix this bug we can run",
    "start": "2595940",
    "end": "2601980"
  },
  {
    "text": "the program again oh by the way up",
    "start": "2601980",
    "end": "2608790"
  },
  {
    "text": "because of the proof failure the the transaction that the execution is",
    "start": "2608790",
    "end": "2615330"
  },
  {
    "text": "rejected now in the a new x-fusion",
    "start": "2615330",
    "end": "2622200"
  },
  {
    "text": "so again I click facebook login so the",
    "start": "2622200",
    "end": "2627450"
  },
  {
    "text": "the same process is now compiling the",
    "start": "2627450",
    "end": "2634130"
  },
  {
    "text": "but the same T into a program now again",
    "start": "2634130",
    "end": "2647280"
  },
  {
    "text": "we are doing the theorem proving",
    "start": "2647280",
    "end": "2650930"
  },
  {
    "text": "okay so the proof is done so you can see that the agent is now accepting this",
    "start": "2686500",
    "end": "2695530"
  },
  {
    "text": "execution and for the client you can see that you are locked in but as you can",
    "start": "2695530",
    "end": "2702849"
  },
  {
    "text": "see that fear improving is very expensive right now the cool thing about",
    "start": "2702849",
    "end": "2708430"
  },
  {
    "text": "the SPX is that once a theorem is proven it's only about the code once it is",
    "start": "2708430",
    "end": "2714580"
  },
  {
    "text": "proven it is cashed so from now on from any browser anywhere if you do the same",
    "start": "2714580",
    "end": "2722260"
  },
  {
    "text": "execution you get it immediately there is no proof because of the to your own",
    "start": "2722260",
    "end": "2729880"
  },
  {
    "text": "cash so that's a that's about it let me",
    "start": "2729880",
    "end": "2735490"
  },
  {
    "text": "go - yeah so here are the takeaway",
    "start": "2735490",
    "end": "2741400"
  },
  {
    "text": "points first most website programmers",
    "start": "2741400",
    "end": "2746830"
  },
  {
    "text": "are not experienced locksmiths so SSO security bugs are pervasive and even big",
    "start": "2746830",
    "end": "2753580"
  },
  {
    "text": "companies make mistakes and in fact this problem is very well known now in the",
    "start": "2753580",
    "end": "2759910"
  },
  {
    "text": "security community then I talk about a self verifying execution it is",
    "start": "2759910",
    "end": "2766570"
  },
  {
    "text": "essentially a locksmiths built into a lock product and this locksmith watches",
    "start": "2766570",
    "end": "2773800"
  },
  {
    "text": "how a lock is is opened every time and checks whether it is logically sound",
    "start": "2773800",
    "end": "2780930"
  },
  {
    "text": "then I also talk about our open source project as be us which is a framework",
    "start": "2780930",
    "end": "2787780"
  },
  {
    "text": "based on as we acts for for SSO integration and so please help us by",
    "start": "2787780",
    "end": "2798520"
  },
  {
    "text": "adopting as as we are on your website or by joining the project to improve the",
    "start": "2798520",
    "end": "2805570"
  },
  {
    "text": "code we do believe that we are heading toward a promising direction which will",
    "start": "2805570",
    "end": "2811390"
  },
  {
    "text": "fundamentally address the SSO security bugs so that's my I talk thank you very",
    "start": "2811390",
    "end": "2817839"
  },
  {
    "text": "much and I'm happy to take questions",
    "start": "2817839",
    "end": "2821880"
  },
  {
    "text": "hi it's a question about the first part of you talk if I'm correct in open ID connect each application its its client",
    "start": "2834170",
    "end": "2844700"
  },
  {
    "text": "application accessing the user data is issued normally a client ID and a client",
    "start": "2844700",
    "end": "2851329"
  },
  {
    "text": "secret it has to be registered on the on the authentication server so how could",
    "start": "2851329",
    "end": "2857210"
  },
  {
    "text": "you like input like access the user data with another app if this app was not",
    "start": "2857210",
    "end": "2863480"
  },
  {
    "text": "issued a proper secret and talking to to access via the user data okay which",
    "start": "2863480",
    "end": "2872299"
  },
  {
    "text": "which one it's a beginning wait yeah no I think it's the one with",
    "start": "2872299",
    "end": "2881660"
  },
  {
    "text": "with with the president leaves the prison picture like yeah this is what",
    "start": "2881660",
    "end": "2887319"
  },
  {
    "text": "where baby at one moment you you meant you mentioned that basically any",
    "start": "2887319",
    "end": "2893420"
  },
  {
    "text": "application could good acts use the user token and like Angry Bird or okay so it",
    "start": "2893420",
    "end": "2901250"
  },
  {
    "text": "is this one yeah right okay ah so so the",
    "start": "2901250",
    "end": "2907339"
  },
  {
    "text": "the OS protocol has two kinds of tokens",
    "start": "2907339",
    "end": "2913089"
  },
  {
    "text": "this one is called the access token the other one is called authorization code",
    "start": "2913089",
    "end": "2918319"
  },
  {
    "text": "so I think what you mentioned is authorization code which according to",
    "start": "2918319",
    "end": "2925910"
  },
  {
    "text": "the protocol is tied to the app ID the",
    "start": "2925910",
    "end": "2931279"
  },
  {
    "text": "application ID so this is actually a very good question because the correct",
    "start": "2931279",
    "end": "2937910"
  },
  {
    "text": "way to implement this scenario is to use the authorization code which which tie",
    "start": "2937910",
    "end": "2946579"
  },
  {
    "text": "to the application ID but once this kind of access token is it's like a a more",
    "start": "2946579",
    "end": "2954529"
  },
  {
    "text": "powerful thing once you get to the access token it is called a bearer token",
    "start": "2954529",
    "end": "2960319"
  },
  {
    "text": "you can you can get the information",
    "start": "2960319",
    "end": "2964690"
  },
  {
    "text": "did I answer your question or maybe I can explain a little bit of line because",
    "start": "2966900",
    "end": "2979740"
  },
  {
    "text": "we've been using that quite lot with what we're working with Keith log server so it's a it's an open ID connect server",
    "start": "2979740",
    "end": "2985200"
  },
  {
    "text": "and and so we we also face quite a few issues with the properties okay thank",
    "start": "2985200",
    "end": "2992609"
  },
  {
    "text": "you hi you didn't talk much about the",
    "start": "2992609",
    "end": "3004819"
  },
  {
    "text": "self verification verifying execution but I was wondering doesn't the symbolic",
    "start": "3004819",
    "end": "3010039"
  },
  {
    "text": "transaction suffer from the same problems with forgery and stuff I do you ensure the integrity of the symbolic",
    "start": "3010039",
    "end": "3018619"
  },
  {
    "text": "token oh so if if I answer your question",
    "start": "3018619",
    "end": "3025309"
  },
  {
    "text": "correctly if I understand Alice could just correct make a fake symbolic token",
    "start": "3025309",
    "end": "3032809"
  },
  {
    "text": "right that claims that she followed the right execution path okay so yeah yeah",
    "start": "3032809",
    "end": "3039730"
  },
  {
    "text": "also this is a very very good question so I because of the the time I didn't",
    "start": "3039730",
    "end": "3048589"
  },
  {
    "text": "talk about that part so you what you are asking is what if these participants try",
    "start": "3048589",
    "end": "3059599"
  },
  {
    "text": "to lie about symbolic transaction right now I I yeah I didn't cover that part",
    "start": "3059599",
    "end": "3066680"
  },
  {
    "text": "but I can refer you to our paper we have published a series of papers so that is",
    "start": "3066680",
    "end": "3075589"
  },
  {
    "text": "taken care of although I didn't talk about but I can show you a little bit up of this I",
    "start": "3075589",
    "end": "3083240"
  },
  {
    "text": "talked about this compact representation",
    "start": "3083240",
    "end": "3089950"
  },
  {
    "text": "actually I told you that I was not going to talk about compact compact",
    "start": "3089950",
    "end": "3095359"
  },
  {
    "text": "representation in this representation we have the to to show whether a message is signed",
    "start": "3095359",
    "end": "3104380"
  },
  {
    "text": "or not whether a message is browser redirection or directed server-to-server call so this kind of things is also",
    "start": "3104380",
    "end": "3113020"
  },
  {
    "text": "baked into the reasoning so the short answer is we can prevent that thank you",
    "start": "3113020",
    "end": "3122338"
  },
  {
    "text": "so in your example you should the the code working in kind of enforcement mode where you actually disable the actual",
    "start": "3131900",
    "end": "3138410"
  },
  {
    "text": "login does the framework give us the ability to enabled in kind of a logging mode where the OAuth will actually",
    "start": "3138410",
    "end": "3144590"
  },
  {
    "text": "complete normally but then it will log that this should not have been gone through normally like kind of to enable",
    "start": "3144590",
    "end": "3151550"
  },
  {
    "text": "their auth like to other to use it for detection more than kind of enforcement is that possible oh I'm sorry I missed",
    "start": "3151550",
    "end": "3160580"
  },
  {
    "text": "the first part of this so the the framework the SVX of framework in the",
    "start": "3160580",
    "end": "3166430"
  },
  {
    "text": "demo you you showed us basically it kind of stopped the actual oil flow oh okay",
    "start": "3166430",
    "end": "3172280"
  },
  {
    "text": "is it possible to enable it can only logging mode yeah yeah that that is also",
    "start": "3172280",
    "end": "3178600"
  },
  {
    "text": "possible and perhaps yet another way to",
    "start": "3178600",
    "end": "3184130"
  },
  {
    "text": "do that is we just prove all the theorem upfront and then just populate the cash",
    "start": "3184130",
    "end": "3191810"
  },
  {
    "text": "to the to deploy that cash only so anything missing the cash will be",
    "start": "3191810",
    "end": "3197780"
  },
  {
    "text": "flagged as a potential attack thank you",
    "start": "3197780",
    "end": "3205270"
  },
  {
    "text": "hi so as I understood this framework will be for relying parties only and for",
    "start": "3219590",
    "end": "3227910"
  },
  {
    "text": "the seven ID providers you mentioned are you considering extending it for",
    "start": "3227910",
    "end": "3234900"
  },
  {
    "text": "providers and relying parties and with categories of authentication and",
    "start": "3234900",
    "end": "3243900"
  },
  {
    "text": "authorization protocols because I am I was quite busy with this subject this",
    "start": "3243900",
    "end": "3250140"
  },
  {
    "text": "year and I found out that many big firms are starting to build their own ID",
    "start": "3250140",
    "end": "3256770"
  },
  {
    "text": "providers and I was facing exact exactly the same problems you mentioned yes talk",
    "start": "3256770",
    "end": "3264420"
  },
  {
    "text": "yeah ok ok I'm happy that you are bringing up this point so so right now",
    "start": "3264420",
    "end": "3273690"
  },
  {
    "text": "are as you said we only do this on the relying party so what what we do for the",
    "start": "3273690",
    "end": "3280710"
  },
  {
    "text": "proof is that we build those identity",
    "start": "3280710",
    "end": "3285900"
  },
  {
    "text": "provider classes to simulate their behaviors so that is not ideal so",
    "start": "3285900",
    "end": "3293490"
  },
  {
    "text": "ideally we should convince other identity providers to get on board so",
    "start": "3293490",
    "end": "3300620"
  },
  {
    "text": "actually I we really look forward to to having having the the SBS adopted by",
    "start": "3300620",
    "end": "3310590"
  },
  {
    "text": "some early adopters and then we can kind of snowboard is this whole thing and",
    "start": "3310590",
    "end": "3316650"
  },
  {
    "text": "then eventually get big companies on board that would be wonderful",
    "start": "3316650",
    "end": "3321720"
  },
  {
    "text": "ok yeah maybe we can talk oh yeah yeah ok thank you",
    "start": "3321720",
    "end": "3329270"
  },
  {
    "text": "could you explain a bit more about where the serums come from are they inherent",
    "start": "3342420",
    "end": "3348839"
  },
  {
    "text": "in the framework always it up to the developers to populate how much worked as a developer had to do to populate the",
    "start": "3348839",
    "end": "3354270"
  },
  {
    "text": "theorems oh the theorems is essentially",
    "start": "3354270",
    "end": "3361500"
  },
  {
    "text": "uh when we when we execute we keep track",
    "start": "3361500",
    "end": "3367859"
  },
  {
    "text": "of this sim team and eventually when the when the execution get to the end the",
    "start": "3367859",
    "end": "3375240"
  },
  {
    "text": "theorem is this the final seem T implies",
    "start": "3375240",
    "end": "3380270"
  },
  {
    "text": "the safety property and currently our safety property we have two safety",
    "start": "3380270",
    "end": "3386579"
  },
  {
    "text": "properties one is locking safety which prevent the attacker to sign into the",
    "start": "3386579",
    "end": "3392579"
  },
  {
    "text": "the victim account and logging intent which prevented them the victim to sign",
    "start": "3392579",
    "end": "3398520"
  },
  {
    "text": "into the attackers account so so I think my answer to your question is yes the",
    "start": "3398520",
    "end": "3405990"
  },
  {
    "text": "the theorem is generated automatically because because final sim T is automatic",
    "start": "3405990",
    "end": "3412740"
  },
  {
    "text": "and the property the properties are predefined which party most naturally",
    "start": "3412740",
    "end": "3419849"
  },
  {
    "text": "owns the save improving engine or implementation of theorem proving the relying party",
    "start": "3419849",
    "end": "3426170"
  },
  {
    "text": "yeah thank you very much",
    "start": "3437839",
    "end": "3440859"
  }
]