[
  {
    "text": "um we have three wonderful presentations for you today uh for our turbo talks in",
    "start": "280",
    "end": "5960"
  },
  {
    "text": "the Enterprise Intrigue track um and first up we have passive Bluetooth",
    "start": "5960",
    "end": "11200"
  },
  {
    "text": "monitoring in scappy with Ryan Holman please welcome",
    "start": "11200",
    "end": "16799"
  },
  {
    "text": "him thank you um so today I'm going to be talking about a project I've been working on for a while and basically the",
    "start": "22000",
    "end": "29320"
  },
  {
    "text": "aim of the project was to bring the data that we actually obtained from passive Bluetooth monitoring into a python",
    "start": "29320",
    "end": "34840"
  },
  {
    "text": "medium um a little bit about myself before I get started um I live in Austin Texas I work for an amazing company",
    "start": "34840",
    "end": "41440"
  },
  {
    "text": "called zift and Technologies um I'm their lead server developer um this work actually has nothing to do with my",
    "start": "41440",
    "end": "47360"
  },
  {
    "text": "everyday hustle and bustle uh it's just stuff I did in my own spare time uh I have a master's degree in computer",
    "start": "47360",
    "end": "53399"
  },
  {
    "text": "science and this talk is going to be really fast I have to fit it into 15 minutes so hold on to your seats",
    "start": "53399",
    "end": "61199"
  },
  {
    "text": "all right so here's what I'm going to go over uh first I'm going to hit uh three essential Bluetooth topics that I Cherry",
    "start": "61199",
    "end": "67000"
  },
  {
    "text": "Picked out I think that they're really essential to understand for uh doing passive Bluetooth monitoring I'm going",
    "start": "67000",
    "end": "73400"
  },
  {
    "text": "to go over um a couple projects which uh are basically the foundation of my",
    "start": "73400",
    "end": "78439"
  },
  {
    "text": "project and I wouldn't have been able to do my work without them um and then finally I'm going to go over my work uh",
    "start": "78439",
    "end": "83920"
  },
  {
    "text": "what it is why I did it U why what I think it provides and I have a lot of",
    "start": "83920",
    "end": "89079"
  },
  {
    "text": "demos on I'm not going to get through all of them but they're all included on your conference CD so you can go through",
    "start": "89079",
    "end": "95159"
  },
  {
    "text": "them at your own Leisure I also exported them all to PDF format so you can read them kind of like a documentation kind",
    "start": "95159",
    "end": "101000"
  },
  {
    "text": "of like documentation all right so the first thing to understand about Bluetooth is it's built on top of a frequency hopping",
    "start": "101000",
    "end": "107840"
  },
  {
    "text": "protocol and basically what this means is when two devices are talking to each other um we're hopping through 79",
    "start": "107840",
    "end": "113200"
  },
  {
    "text": "different channels and when we actually monitor this passively we can only listen to One Channel or a small subset",
    "start": "113200",
    "end": "119920"
  },
  {
    "text": "channels at a time so this means our data that we obtain is going to be very very sparse um because our data is",
    "start": "119920",
    "end": "126039"
  },
  {
    "text": "sparse it doesn't mean that it's useless we can actually do a lot of stuff with this data and so here there's three things I",
    "start": "126039",
    "end": "132200"
  },
  {
    "text": "want you to take away from this slide uh the first being that btbb stands for Bluetooth baseband so anytime I say it",
    "start": "132200",
    "end": "138239"
  },
  {
    "text": "or you see it that's what I'm talking about and basically what Bluetooth baseband is is it's what we're actually",
    "start": "138239",
    "end": "143400"
  },
  {
    "text": "passively monitoring in in Bluetooth traffic um it is the lowest layer of the",
    "start": "143400",
    "end": "148840"
  },
  {
    "text": "the Bluetooth stack and basically we need specialized Hardware in order to access this this layer directly um so um our everyday",
    "start": "148840",
    "end": "158280"
  },
  {
    "text": "Bluetooth devices will not be able to access this layer and our operating system software cannot actually access",
    "start": "158280",
    "end": "163519"
  },
  {
    "text": "this layer um the last thing I want you to take away about Bluetooth is um uh the",
    "start": "163519",
    "end": "168840"
  },
  {
    "text": "Bluetooth address space basically this is some of the more important information we can obtain from our passive Bluetooth data um and it's laid",
    "start": "168840",
    "end": "176560"
  },
  {
    "text": "out pretty much exactly like a MAC address in our typical everyday networking protocols uh the upper half being vendor spef specific and the lower",
    "start": "176560",
    "end": "183640"
  },
  {
    "text": "half being device specific and uh other than that it's that's about all the",
    "start": "183640",
    "end": "188879"
  },
  {
    "text": "similarity there is because in a Bluetooth address we actually only need the four lowest bytes of the address in",
    "start": "188879",
    "end": "194080"
  },
  {
    "text": "order to make a Bluetooth connection and so that leads me on to my next topic we actually split these addresses out when",
    "start": "194080",
    "end": "199480"
  },
  {
    "text": "we talk about them in Bluetooth into three separate sections um the illustration shows here the nap the UAP",
    "start": "199480",
    "end": "204840"
  },
  {
    "text": "and the lap the nap standing for the non-significant area part and basically",
    "start": "204840",
    "end": "210640"
  },
  {
    "text": "what this means is we don't need it in order to make a Bluetooth connection which is awesome because it's actually the hardest data to obtain passively",
    "start": "210640",
    "end": "216400"
  },
  {
    "text": "from Bluetooth traffic uh the UAP being the lowest part of the vendor address Bas and we get this we get this address",
    "start": "216400",
    "end": "224000"
  },
  {
    "text": "um with some Bluetooth traffic not with all it actually has to have a payload within it and we obtain this by looking",
    "start": "224000",
    "end": "230400"
  },
  {
    "text": "at the the air checking within the payload uh the lap is just given to us in all Bluetooth traffic so we can",
    "start": "230400",
    "end": "236640"
  },
  {
    "text": "pretty much always guarantee that it's here um and so for my project um two slides ago",
    "start": "236640",
    "end": "243000"
  },
  {
    "text": "I mentioned that you need specialized Hardware in order to access this Slayer so uh I chose the ubertooth is my my",
    "start": "243000",
    "end": "248760"
  },
  {
    "text": "medium for actually accessing this data um if you're unfamiliar with the project it was uh it's a project created by",
    "start": "248760",
    "end": "255120"
  },
  {
    "text": "Michael Osman and it allows us to uh access the Bluetooth baseband layer it's a small USB dongle that can send and",
    "start": "255120",
    "end": "261919"
  },
  {
    "text": "receive data on the same frequency as Bluetooth um so some other things about",
    "start": "261919",
    "end": "267040"
  },
  {
    "text": "it why I chose it right it's small and it's cheap my other Alternatives were usrp or usrp2",
    "start": "267040",
    "end": "273280"
  },
  {
    "text": "which are big and expensive uh this is just something you can you know stick in your pocket or have in your laptop and",
    "start": "273280",
    "end": "278400"
  },
  {
    "text": "no one's really going to look at you funny for using it um something interesting about the the project is",
    "start": "278400",
    "end": "284320"
  },
  {
    "text": "Dominic spill actually took over as the lead developer this month for the project so there's been a lot of code movement and this is pretty cool and",
    "start": "284320",
    "end": "291320"
  },
  {
    "text": "probably most importantly the one thing to take away from the ubertooth project is it provides a Kismet plug-in and this",
    "start": "291320",
    "end": "296520"
  },
  {
    "text": "Kismet plugin uh created by Mike Kershaw is able to to Output the Bluetooth baseband data into a pcap file and it's",
    "start": "296520",
    "end": "304080"
  },
  {
    "text": "this pcap format that I actually use in my project um super quick about this stuff",
    "start": "304080",
    "end": "310280"
  },
  {
    "text": "uh lib btb is um basically a core library for the ubertooth project uh once again this is created by Dominic",
    "start": "310280",
    "end": "316520"
  },
  {
    "text": "spill and Michael Osman and it's basically a C library which provides um data structures and methods for for",
    "start": "316520",
    "end": "323720"
  },
  {
    "text": "handling and driving information from Bluetooth baseband packets such as UAP Discovery or clock discovery and the",
    "start": "323720",
    "end": "330080"
  },
  {
    "text": "only reason why I really mentioned this um is it provides a wire shark plugin and this wire shark plugin is probably",
    "start": "330080",
    "end": "336440"
  },
  {
    "text": "um the closest thing to my project that there is out there uh it allows us to access these Bluetooth basb pcap files",
    "start": "336440",
    "end": "342520"
  },
  {
    "text": "and a lot of my architecture was derived from this wire shark plugin as far as um bit sequences and you know what means",
    "start": "342520",
    "end": "349039"
  },
  {
    "text": "what within our packets and so um I wanted to incorporate this data into python um and",
    "start": "349039",
    "end": "355960"
  },
  {
    "text": "so I chose my medium to be scappy uh if you're unfamiliar with scappy scappy is basically a a python module slf",
    "start": "355960",
    "end": "363560"
  },
  {
    "text": "framework which is um it's pretty much your go-to library for actually dealing with network traffic in Python um it",
    "start": "363560",
    "end": "371400"
  },
  {
    "text": "provides you know methods for sending creating manipulating altering uh all types of actual network data um it",
    "start": "371400",
    "end": "379039"
  },
  {
    "text": "supports a lot of different layers uh Bluetooth Bas bin not being one of them so this is kind of where I came",
    "start": "379039",
    "end": "384919"
  },
  {
    "text": "in uh so in the beginning I only had one goal for my project and that was let's",
    "start": "384919",
    "end": "390080"
  },
  {
    "text": "get Bluetooth baseband traffic into python somehow right and I can successfully say that I accomplished this and I did this by creating a",
    "start": "390080",
    "end": "398039"
  },
  {
    "text": "Bluetooth basb layer in scappy and so when I first started out I was like okay",
    "start": "398039",
    "end": "403800"
  },
  {
    "text": "let's how am I going to get data in here and so I took these pcap files and this is how I was at first able to load data",
    "start": "403800",
    "end": "408919"
  },
  {
    "text": "into scappy um which was really cool but this is all postmortem work right I wanted",
    "start": "408919",
    "end": "414400"
  },
  {
    "text": "something a little more interesting I wanted to see packets streaming down my screen as I'm analyzing them in Python",
    "start": "414400",
    "end": "419960"
  },
  {
    "text": "um so I had two approaches here uh the first being that I could have built a direct interface into the ubertooth in",
    "start": "419960",
    "end": "425639"
  },
  {
    "text": "order to stream the data directly into scappy um but I chose not to do this for the first approach because um it would",
    "start": "425639",
    "end": "432479"
  },
  {
    "text": "limit people's use of my library to only using an ubertooth right uh there's",
    "start": "432479",
    "end": "437960"
  },
  {
    "text": "other stuff out there that can actually do this such as the usrp which can also output to pcap files right so um the way",
    "start": "437960",
    "end": "446160"
  },
  {
    "text": "the route that I chose was to actually uh build a streamer in interface for pcap files in scappy and what this",
    "start": "446160",
    "end": "452759"
  },
  {
    "text": "allows us to do is safely read from these pcap files as other applications are writing to them so we can read",
    "start": "452759",
    "end": "458039"
  },
  {
    "text": "through it's a lot like a tail-f in Linux if you're familiar um we just read through these files when we get to the",
    "start": "458039",
    "end": "463240"
  },
  {
    "text": "end we stop or we sit there and we wait for more packets to come in and so this",
    "start": "463240",
    "end": "468879"
  },
  {
    "text": "proved to be very useful for making this uh cross compatible again like uh sorry against different Hardware um and so",
    "start": "468879",
    "end": "476000"
  },
  {
    "text": "once I was happy with this and I had all my data flowing in and I can analyze all my traffic um there's a lot of things I",
    "start": "476000",
    "end": "482120"
  },
  {
    "text": "would do over and over and over again so I built a lot of built-in helper methods within this Library um I built methods",
    "start": "482120",
    "end": "488400"
  },
  {
    "text": "to uh basically one of the most important things is obtaining Bluetooth addresses right so just simple methods",
    "start": "488400",
    "end": "494280"
  },
  {
    "text": "that would give me all unique distinct addresses within this pcap data um same",
    "start": "494280",
    "end": "500039"
  },
  {
    "text": "thing for the packet types right it's really useful for me if I'm looking at a pcap file a Bluetooth basb pcap file if",
    "start": "500039",
    "end": "506080"
  },
  {
    "text": "I know oh this is all pole traffic it's pointless to me does does this traffic have data does this traffic have voice",
    "start": "506080",
    "end": "512479"
  },
  {
    "text": "um so this is really nice function in it too where I'm able to just get account of what type of packet types are in here",
    "start": "512479",
    "end": "518959"
  },
  {
    "text": "um also one of the more important things too like I can only look at Mac addresses for so long before you know I",
    "start": "518959",
    "end": "524600"
  },
  {
    "text": "lose my mind uh so I built a couple helper methods to let us obtain other",
    "start": "524600",
    "end": "530120"
  },
  {
    "text": "information from these so uh obtain a vendor if we actually have an nap and a UAP um we don't always have an nap and I",
    "start": "530120",
    "end": "537240"
  },
  {
    "text": "realized this so um I'm able to a nap reduction based on your UAP so if you",
    "start": "537240",
    "end": "542519"
  },
  {
    "text": "only have a uip I can say okay here's 20,000 vendors and I can reduce this down to 30 to 60 um which actually",
    "start": "542519",
    "end": "550560"
  },
  {
    "text": "proves pretty helpful um and if you're going to try this Library out I have",
    "start": "550560",
    "end": "555680"
  },
  {
    "text": "super ver super verbose doc string so a lot of my stuff you can kind of just go through and and read it like",
    "start": "555680",
    "end": "562320"
  },
  {
    "text": "documentation um I'm very pep eight so my code's pretty readable um and on top",
    "start": "562320",
    "end": "568560"
  },
  {
    "text": "of all of this to um as I was playing along playing with a lot of this stuff um I I create a lot of extensive",
    "start": "568560",
    "end": "574760"
  },
  {
    "text": "documentation for the other projects I was using and this is you know I kind of put this stuff out there for people who",
    "start": "574760",
    "end": "580440"
  },
  {
    "text": "might be getting into this so they don't have to spend hours and hours and hours trying to learn how to load the latest firmware under their ubertooth device or",
    "start": "580440",
    "end": "587720"
  },
  {
    "text": "get all the you know super hidden applications out of like a blue z um",
    "start": "587720",
    "end": "593880"
  },
  {
    "text": "package and stuff like that um so this stuff is linked on my website I'll show you the link at the end um and so here's",
    "start": "593880",
    "end": "600200"
  },
  {
    "text": "some demo code of scappy in progress does anyone here uh use IPython",
    "start": "600200",
    "end": "608200"
  },
  {
    "text": "notebook no it's my uh new favorite python",
    "start": "608200",
    "end": "614160"
  },
  {
    "text": "tool so basically IPython notebook allows me to create this uh really nice documentation and execute code uh within",
    "start": "614160",
    "end": "620760"
  },
  {
    "text": "a web browser for demo sake um so first here I'm just going to import everything from scappy and from my library um",
    "start": "620760",
    "end": "630200"
  },
  {
    "text": "now I'm going to take a pcap file a Bluetooth baseband pcap file and create a scappy reader object off of it um this",
    "start": "630200",
    "end": "637079"
  },
  {
    "text": "is stuff that um is kind of given to you within scappy and so let's access some",
    "start": "637079",
    "end": "642279"
  },
  {
    "text": "data um so this isn't completely boring so we'll look at a packet and we'll show",
    "start": "642279",
    "end": "647720"
  },
  {
    "text": "it right so first you're going to say okay this is ethernet traffic well um my library actually uh is based the very",
    "start": "647720",
    "end": "655079"
  },
  {
    "text": "first layer of my library uses ethernet just like the wire shark one because they're very similar so let's iterate",
    "start": "655079",
    "end": "660800"
  },
  {
    "text": "through some of these packets until we find something interesting um you can see here that we actually have um some Bluetooth baseband",
    "start": "660800",
    "end": "667440"
  },
  {
    "text": "traffic we have a UAP associated with it uh this is a little bit better um scappy",
    "start": "667440",
    "end": "672519"
  },
  {
    "text": "also allows us to just do summary data and so the really nice thing about scappy is we can build these really short functions to just iterate through",
    "start": "672519",
    "end": "678639"
  },
  {
    "text": "our traffic so I'm going to say okay I'm going to go through all my traffic I just loaded and I'm going to find the first packet with a payload and",
    "start": "678639",
    "end": "683920"
  },
  {
    "text": "everything until then I'm just going to print out in short summary mode we can do stuff like this",
    "start": "683920",
    "end": "690959"
  },
  {
    "text": "and here's our packet with the payload running short on time so I'm",
    "start": "691200",
    "end": "697519"
  },
  {
    "text": "going to skip through some of these these are all on your conference",
    "start": "697519",
    "end": "703240"
  },
  {
    "text": "material CDs um we can rewrite out all these packets",
    "start": "703240",
    "end": "710279"
  },
  {
    "text": "into new pcap files um here's a streamer summary so basically I said that I created a",
    "start": "710279",
    "end": "715920"
  },
  {
    "text": "streamer for this stuff so here uh for demo I am just accessing a log uh that I",
    "start": "715920",
    "end": "721639"
  },
  {
    "text": "created from Kismet it could be it could actually be live and being written to right now um basically I'm able to",
    "start": "721639",
    "end": "728399"
  },
  {
    "text": "instantiate the streamer object on it and say okay let's go through here when I get to the end stop and basically my",
    "start": "728399",
    "end": "734560"
  },
  {
    "text": "streamer object will remember where I am so the next time I go to actually access this this uh this file all these packets",
    "start": "734560",
    "end": "742480"
  },
  {
    "text": "um I'll start from the very end and so you can see there was nothing else being appended to it so I'm getting nothing back um",
    "start": "742480",
    "end": "750160"
  },
  {
    "text": "some of the helper methods for this stuff basically I don't have my wire shark manufacturer file on a default location so I'm going to tell it where",
    "start": "750160",
    "end": "757160"
  },
  {
    "text": "it is show you that I have some packets that I loaded and I'm going to do a vendor look up right so here I'm going to look at",
    "start": "757160",
    "end": "763839"
  },
  {
    "text": "maybe the six packet here where it has this this UAP and say I do know the nap Associated to it I can put it into this",
    "start": "763839",
    "end": "770199"
  },
  {
    "text": "function and get back my vendor right there but I don't right so let's say I'm just going to take the same function and",
    "start": "770199",
    "end": "776880"
  },
  {
    "text": "load in my actual packet um object that I was looking at and I'm going to save",
    "start": "776880",
    "end": "781920"
  },
  {
    "text": "it to possible vendors you can see that I have 60 possible vendors based on this I can pop them all open look through",
    "start": "781920",
    "end": "789040"
  },
  {
    "text": "this list and for me it was really easy because I knew I was looking at an Apple device here's my nap associated with",
    "start": "789040",
    "end": "795399"
  },
  {
    "text": "it um helper methods um this was just one of the helper methods I have built",
    "start": "795399",
    "end": "801160"
  },
  {
    "text": "into the library in order to actually obtain all the Bluetooth addresses um let me see real",
    "start": "801160",
    "end": "807440"
  },
  {
    "text": "quick I don't have enough time to go through my other demo but I want to show you what I'm basically to able to do",
    "start": "807440",
    "end": "813959"
  },
  {
    "text": "with this data since I now have it loaded into where's run",
    "start": "813959",
    "end": "821680"
  },
  {
    "text": "all so run so basically I'm able to go through these packets and create some",
    "start": "822199",
    "end": "828279"
  },
  {
    "text": "really nice looking um uh visual Graphics out of them so I can see stuff right so I'm using a library called",
    "start": "828279",
    "end": "834399"
  },
  {
    "text": "python pandas it's kind of my data crunching library of choice um and I'm going through all my packets with the",
    "start": "834399",
    "end": "840800"
  },
  {
    "text": "pcap list taking out the important information time nap UAP lap etc etc",
    "start": "840800",
    "end": "847000"
  },
  {
    "text": "this is a python pandas table where I can actually see a lot of this data cool",
    "start": "847000",
    "end": "852360"
  },
  {
    "text": "um I can see within all of my packets that it you know this this actual um packet capture was only about 5 minutes",
    "start": "852360",
    "end": "858839"
  },
  {
    "text": "long right I'm going to take the max date and the M date um see this stuff I can then visualize to Within These",
    "start": "858839",
    "end": "864839"
  },
  {
    "text": "packet lists okay here is all my traffic for all clients in here who had the most",
    "start": "864839",
    "end": "870120"
  },
  {
    "text": "traffic um I can say okay who had all the pertinent traffic so I'm getting rid of",
    "start": "870120",
    "end": "875880"
  },
  {
    "text": "information that was only ID packets or packets without data um I can then break it down by packet type uh and this is",
    "start": "875880",
    "end": "882360"
  },
  {
    "text": "all done with just like a few lines of python code this is just kind of stuff that um if you're familiar with pandas",
    "start": "882360",
    "end": "887600"
  },
  {
    "text": "it's actually um just stuff you use day-to-day and you just kind of rip this stuff out um break down uh actual laps",
    "start": "887600",
    "end": "895519"
  },
  {
    "text": "by the types of traffic they sent do time series overall all this data if you get a chance go through I have a you",
    "start": "895519",
    "end": "901680"
  },
  {
    "text": "know pretty good write up on all these graphs so you can actually see what I'm doing um I don't have a lot of time",
    "start": "901680",
    "end": "909440"
  },
  {
    "text": "so um so what is the relevance of all this stuff um I supplied a way to do",
    "start": "909440",
    "end": "916320"
  },
  {
    "text": "postmortem in real time analysis with these uh um Bluetooth baseband Peak app files um and by the methods that I chose",
    "start": "916320",
    "end": "924800"
  },
  {
    "text": "it's compatible across different types of Hardware um and these things are really easy to incorporate all these libraries are super easy to incorporate",
    "start": "924800",
    "end": "931120"
  },
  {
    "text": "into your other tools that you're going to be building um you know I rip out tools just while I'm drinking coffee in",
    "start": "931120",
    "end": "937160"
  },
  {
    "text": "the morning with this stuff because we're only doing this in like one or two lines of python which is super nice",
    "start": "937160",
    "end": "943639"
  },
  {
    "text": "um current and future work um currently working on a python library to actually",
    "start": "943639",
    "end": "949920"
  },
  {
    "text": "interact directly with the ubertooth in order to use all the shared Library stuff that they Supply um also I would",
    "start": "949920",
    "end": "955920"
  },
  {
    "text": "still like to build a direct stream into the ubertooth so I don't have to be running Kismet in the background while",
    "start": "955920",
    "end": "961000"
  },
  {
    "text": "I'm getting a lot of these logs um the Bluetooth low energy layer um I wasn't",
    "start": "961000",
    "end": "966959"
  },
  {
    "text": "you know jumping on building this layer because I didn't have any Bluetooth low energy devices at home to test with um",
    "start": "966959",
    "end": "972639"
  },
  {
    "text": "but it's actually pretty easy for me to build um and same defaults for actually building uh Bluetooth baseband traffic",
    "start": "972639",
    "end": "979040"
  },
  {
    "text": "in scappy even though we have no method of actually sending them out currently it'd be nice to have once uh this",
    "start": "979040",
    "end": "984600"
  },
  {
    "text": "functionality is built within the hardware that we use and we'd have a to just directly build these packets and",
    "start": "984600",
    "end": "990720"
  },
  {
    "text": "send them out ready to go uh so here's a lot of my references if you're looking to get into this stuff uh check it out",
    "start": "990720",
    "end": "996360"
  },
  {
    "text": "my slides are on the conference material and here's my contact information if you",
    "start": "996360",
    "end": "1001560"
  },
  {
    "text": "want to learn more about this project um hack.com um I promise that I will update",
    "start": "1001560",
    "end": "1007600"
  },
  {
    "text": "it I'm horrible about web presence and doing things like that um but this time I'm going to try it really hard and my",
    "start": "1007600",
    "end": "1013839"
  },
  {
    "text": "email or you can follow me on Twitter so that's it thank you",
    "start": "1013839",
    "end": "1020480"
  },
  {
    "text": "all right thank you very much Ryan um up next we have sinful deceit with Tom",
    "start": "1038079",
    "end": "1043558"
  },
  {
    "text": "steel and Chris Patton please welcome to the stage",
    "start": "1043559",
    "end": "1050400"
  },
  {
    "text": "[Applause]",
    "start": "1052690",
    "end": "1055829"
  },
  {
    "text": "I guess Mo the",
    "start": "1060400",
    "end": "1063320"
  },
  {
    "text": "supper",
    "start": "1077400",
    "end": "1080400"
  },
  {
    "text": "good afternoon thanks for attending our presentation my name is Chris Patton I'm with fishnet Securities security",
    "start": "1094720",
    "end": "1100080"
  },
  {
    "text": "assessment team here with me is Tom steel also from Fishnet security security assessment",
    "start": "1100080",
    "end": "1105960"
  },
  {
    "text": "team our talk is specifically about bypassing sin flood protection to actually detect uh valid Service uh",
    "start": "1105960",
    "end": "1113880"
  },
  {
    "text": "Services uh similar to kind of running in map that sort of thing uh this uh",
    "start": "1113880",
    "end": "1119240"
  },
  {
    "text": "this talk was born from necessity uh through using numerous uh Discovery uh",
    "start": "1119240",
    "end": "1124679"
  },
  {
    "text": "through numerous Discovery engagements more specifically uh it was probably part of uh an overall uh project such as",
    "start": "1124679",
    "end": "1133200"
  },
  {
    "text": "uh you know a larger penetration test",
    "start": "1133200",
    "end": "1140320"
  },
  {
    "text": "and we board board with you all the uh the BIOS and stuff like that",
    "start": "1145919",
    "end": "1150880"
  },
  {
    "text": "so um what we're trying to do is obviously discern uh open ports uh Val we're we're trying to discern valid open",
    "start": "1151080",
    "end": "1157880"
  },
  {
    "text": "ports um through uh as as opposed to I'm",
    "start": "1157880",
    "end": "1164480"
  },
  {
    "text": "sorry uh valid open ports um as opposed",
    "start": "1164480",
    "end": "1170760"
  },
  {
    "text": "to [Music] try uh through through sin flood um so",
    "start": "1172159",
    "end": "1180159"
  },
  {
    "text": "we're not we're not proposing a utility uh that is going to replace uh uh typical uh service detection uh devices",
    "start": "1180159",
    "end": "1187799"
  },
  {
    "text": "right um what we're trying to present is a utility uh that will kind of augment or just provide another tool as part of",
    "start": "1187799",
    "end": "1194960"
  },
  {
    "text": "the uh part of the tool set um when you're performing a service Discovery so uh you know when do we use uh",
    "start": "1194960",
    "end": "1201159"
  },
  {
    "text": "vulnerability scanners we typically use vulnerability scanners uh during vulnerability assessments during penetration tests uh system system",
    "start": "1201159",
    "end": "1207440"
  },
  {
    "text": "administration Network Administration and overall troubleshooting um numerous tools already are available uh we have",
    "start": "1207440",
    "end": "1214640"
  },
  {
    "text": "inmap we have Scan Rand we have unicorn scan uh those those have been around for a while uh some of them also kind of",
    "start": "1214640",
    "end": "1220640"
  },
  {
    "text": "cross over into uh uh vulnerability uh vulnerability assessment utilities we can automate a lot of those things",
    "start": "1220640",
    "end": "1225799"
  },
  {
    "text": "through uh things like uh uh in maps uh Lua based NSE scripts uh in this particular instance",
    "start": "1225799",
    "end": "1232919"
  },
  {
    "text": "uh we're just going to show you that uh this is the the standard router on a stick model um we have a scanner we have",
    "start": "1232919",
    "end": "1239880"
  },
  {
    "text": "uh we have the stateful firewall um and then we also have uh you know various servers in the background the servers on",
    "start": "1239880",
    "end": "1245880"
  },
  {
    "text": "the background um are uh we've actually influenced open ports on these things you know we we were able to obviously we",
    "start": "1245880",
    "end": "1252880"
  },
  {
    "text": "inited uh services so we we know that they're running in the background we also have uh closed reports um Etc so",
    "start": "1252880",
    "end": "1259559"
  },
  {
    "text": "when we go through and we perform an inmap scan um we can we can the the way",
    "start": "1259559",
    "end": "1266080"
  },
  {
    "text": "this occurs is we typically pass you know the sin uh to the staple firewall and the sin will pass uh you know will",
    "start": "1266080",
    "end": "1272600"
  },
  {
    "text": "pass depending on if the actual policy checks are valid it'll pass that to the back end the backend in turn will U you",
    "start": "1272600",
    "end": "1279200"
  },
  {
    "text": "know interrogate the actual service the service will resp respond back to our scanner and we'll know the state of the",
    "start": "1279200",
    "end": "1284520"
  },
  {
    "text": "uh uh of the port you know whether it's open whether it's closed uh whether it's filtered considering you know uh if if",
    "start": "1284520",
    "end": "1289840"
  },
  {
    "text": "there's actually a uh uh say for instance a host based firewall or something like that running on the back end looks uh looks something like this",
    "start": "1289840",
    "end": "1297480"
  },
  {
    "text": "um okay we did this on SSH hdp 30 3306 for MySQL and then a bunch of other",
    "start": "1297480",
    "end": "1303520"
  },
  {
    "text": "random ports 100 through 200 um to uh represent some of the SMD uh you know",
    "start": "1303520",
    "end": "1309000"
  },
  {
    "text": "traffic uh that sort of thing yeah and this is just your typical sin scan that everyone does and right exactly this is",
    "start": "1309000",
    "end": "1314840"
  },
  {
    "text": "what we're looking for open closed filtered it works great right right exactly all right so when does it not",
    "start": "1314840",
    "end": "1321640"
  },
  {
    "text": "work um with sin flood protection um sin flood protection uh there's there's a lot of open open source commercial",
    "start": "1321640",
    "end": "1327360"
  },
  {
    "text": "Solutions right so we've got uh uh you know bst's pfsn uh we've got um uh",
    "start": "1327360",
    "end": "1333320"
  },
  {
    "text": "Juniper's s protector Cisco's TCP intercept uh those sorts of things",
    "start": "1333320",
    "end": "1338480"
  },
  {
    "text": "um it becomes uh it becomes difficult to discern uh the uh the valid ports uh uh",
    "start": "1338480",
    "end": "1344080"
  },
  {
    "text": "when when you're actually scanning those uh because we have a proxied uh we kind of have a proxy sin connection right those those devices",
    "start": "1344080",
    "end": "1351440"
  },
  {
    "text": "um no matter whether it's like I said whether it's Cisco whether it's Juniper they're going to respond back uh with a proxied request so we're going to send",
    "start": "1351440",
    "end": "1357960"
  },
  {
    "text": "out a syac they're going to come back with a I'm sorry we're going to send out a s we're they're going to respond with a syac the inmap scanner or whatever",
    "start": "1357960",
    "end": "1364080"
  },
  {
    "text": "scanner is going to move on um we're going to run into some uh some situations with that it becomes much much harder to discern those uh those",
    "start": "1364080",
    "end": "1370360"
  },
  {
    "text": "valid open ports from maybe uh other other open ports that aren't necessarily valid right um they're just proxied um",
    "start": "1370360",
    "end": "1376919"
  },
  {
    "text": "and we'll more on that in a moment um once again we're just showing that we're not replacing any devices",
    "start": "1376919",
    "end": "1383440"
  },
  {
    "text": "we're just uh putting another device potentially uh uh in line that has s flood uh capability or it could be a",
    "start": "1383440",
    "end": "1389520"
  },
  {
    "text": "bolt-on so uh the bolt-on might just be you know an update to a configuration or something like that that's going to",
    "start": "1389520",
    "end": "1394679"
  },
  {
    "text": "offer sin flood protection nothing groundbreaking there okay so when we do",
    "start": "1394679",
    "end": "1399919"
  },
  {
    "text": "perform an additional scan um so if we're performing say for instance",
    "start": "1399919",
    "end": "1405159"
  },
  {
    "text": "in an internet scan uh we do that through an entire range uh that's going to come back with open open ports we",
    "start": "1405159",
    "end": "1411320"
  },
  {
    "text": "know uh the ports are we know that some ports are open and then we also know that uh obviously some ports are uh uh",
    "start": "1411320",
    "end": "1418400"
  },
  {
    "text": "are closed in the back end however because once again we're we're getting a proxied request then uh the ports are",
    "start": "1418400",
    "end": "1423520"
  },
  {
    "text": "going to uh they're going to return as in an open State yeah I hope no one's server looks like that right right um so",
    "start": "1423520",
    "end": "1432240"
  },
  {
    "text": "before we can actually Del delve uh deeper into it we need to know what uh what sin flood protection is Right sin",
    "start": "1432240",
    "end": "1437360"
  },
  {
    "text": "flood protection typically is a uh a way to prevent uh you know s floods um it's",
    "start": "1437360",
    "end": "1443559"
  },
  {
    "text": "pretty obvious but it's also a way to broker s s request so you might have a uh you might have a proxy uh when you",
    "start": "1443559",
    "end": "1450919"
  },
  {
    "text": "you know if if if someone's trying to perform a sin flood on you um you don't necessarily want your devices in the",
    "start": "1450919",
    "end": "1457000"
  },
  {
    "text": "background right your target devices the ones that they're actually wanting to flood to be uh in lineer are actually",
    "start": "1457000",
    "end": "1462679"
  },
  {
    "text": "subject to that sin flood right you want some kind of device that's going to prevent that in the front end so with",
    "start": "1462679",
    "end": "1468000"
  },
  {
    "text": "that said uh this uh you know uh those sin flood devices actually broker that request right you're going to send out",
    "start": "1468000",
    "end": "1473440"
  },
  {
    "text": "the sin there's going to be a sin act that creates a first session and then there's uh uh in the background uh it's",
    "start": "1473440",
    "end": "1479000"
  },
  {
    "text": "actually the interrogation is actually going on um so what happens here uh",
    "start": "1479000",
    "end": "1484279"
  },
  {
    "text": "actually we'll get on it in a minute um yeah yeah so the other thing is uh uh",
    "start": "1484279",
    "end": "1490240"
  },
  {
    "text": "there's uh you know you can prevent uh uh resource exhaustion right resource",
    "start": "1490240",
    "end": "1495640"
  },
  {
    "text": "exhaustion from adjusting Q uh adjust ing a q size Etc um and then send",
    "start": "1495640",
    "end": "1500760"
  },
  {
    "text": "cookies from you know Discerning uh you know valid IPS if you've got spoofed IPS from actual valid IPS Etc but we just",
    "start": "1500760",
    "end": "1507799"
  },
  {
    "text": "need legitimate uh a legitimate response all right so misconceptions of",
    "start": "1507799",
    "end": "1513240"
  },
  {
    "text": "the truth this is basically some of the suggestions that we get um people people have a lots of suggestions um so",
    "start": "1513240",
    "end": "1519440"
  },
  {
    "text": "increase the packet delay okay increasing the packet delay um whether you increase it whether you decrease it",
    "start": "1519440",
    "end": "1524600"
  },
  {
    "text": "doesn't matter because we're sending out the sin we get a sin act from that proxy device from sin flood doesn't matter we",
    "start": "1524600",
    "end": "1530360"
  },
  {
    "text": "still get that we still got that Sy act that uh that scanner still thinks that that port's open it's going to it's",
    "start": "1530360",
    "end": "1535720"
  },
  {
    "text": "going to iterate it's going to uh uh increment to the next port and move on um so that's not going to work right",
    "start": "1535720",
    "end": "1540919"
  },
  {
    "text": "perform a connect scan okay same exact situation however we're sending an additional act so we send the S send act",
    "start": "1540919",
    "end": "1548399"
  },
  {
    "text": "and then we uh get uh the response we think that the scanner thinks that it's open but it still sends an additional",
    "start": "1548399",
    "end": "1554120"
  },
  {
    "text": "act once we all know that there's no point to running next scan if you have roots so right it essentially does nothing okay so uh use a different scam",
    "start": "1554120",
    "end": "1562159"
  },
  {
    "text": "a and fin um that's not going to work we're using a stateful firewall uh so you know",
    "start": "1562159",
    "end": "1567840"
  },
  {
    "text": "obviously the premise is that if you send a uh uh you know that stateful firewall is going to want to know whether uh that session was created with",
    "start": "1567840",
    "end": "1574679"
  },
  {
    "text": "a valid sin if it's not then it's not going to let it pass it's it's by policy right we all know that um use version",
    "start": "1574679",
    "end": "1580520"
  },
  {
    "text": "detection and grep results okay this is the only viable solution um it's the only one that's kind of credible uh in a",
    "start": "1580520",
    "end": "1585840"
  },
  {
    "text": "sense um and the reason for that is that uh obviously we're going to iterate through all the open ports uh Etc um",
    "start": "1585840",
    "end": "1593559"
  },
  {
    "text": "it's going to be it's going to take an extremely long amount of time um to finish uh so if you've got a lot of",
    "start": "1593559",
    "end": "1599240"
  },
  {
    "text": "ports to go through I mean expect expect to be there for days uh the other thing is you're also relying on the fact that",
    "start": "1599240",
    "end": "1604279"
  },
  {
    "text": "there's version information uh so for instance we're using inmap to do a service grind that there's version information that's going to be returned",
    "start": "1604279",
    "end": "1610080"
  },
  {
    "text": "that that's going to be Gable like you know if we can uh if we get those results right once again that's it's it's an idea it's not a great idea so uh",
    "start": "1610080",
    "end": "1617600"
  },
  {
    "text": "at this point uh we were looking for a better solution um I'm going to hand it over to Tom because she's going to actually talk about the design uh the",
    "start": "1617600",
    "end": "1623480"
  },
  {
    "text": "execution of of kind of our research and the tool that uh that we we've developed thank",
    "start": "1623480",
    "end": "1628720"
  },
  {
    "text": "you yeah so um right now we're just looking at a pack packet capture um of a",
    "start": "1628720",
    "end": "1635000"
  },
  {
    "text": "of an mmap scan of two ports Port 80 and 4444 um and on This Server I know that",
    "start": "1635000",
    "end": "1641559"
  },
  {
    "text": "Port 80 is open and I've confirmed that no one shelled me and Port 444 is not open um so as you can see we send two",
    "start": "1641559",
    "end": "1648679"
  },
  {
    "text": "sins at the top and we get a synac back for Port 80 because it's open and but we also get a synac back for Port 4444 so",
    "start": "1648679",
    "end": "1657080"
  },
  {
    "text": "Sim flood protections enabled something's proxying our",
    "start": "1657080",
    "end": "1662000"
  },
  {
    "text": "connections so solution to the problem um basically I just dug through packet",
    "start": "1662840",
    "end": "1667919"
  },
  {
    "text": "captures and started writing tools um first I used Python and scapy and I",
    "start": "1667919",
    "end": "1673200"
  },
  {
    "text": "created a um using a using what what I call an MSS option scan so if you guys",
    "start": "1673200",
    "end": "1678840"
  },
  {
    "text": "follow my blog I doubt it um or six Labs um you've seen that I created an MSS option scanner in Python and it kind of",
    "start": "1678840",
    "end": "1685159"
  },
  {
    "text": "worked it actually worked for Juniper and um IP tables but it didn't work for",
    "start": "1685159",
    "end": "1690640"
  },
  {
    "text": "Cisco and it didn't work for F5 so I had to move on um and so I I finished",
    "start": "1690640",
    "end": "1696440"
  },
  {
    "text": "writing it in C and C++ using lib pcap um and as you can see we have two different scan types uh MSS option",
    "start": "1696440",
    "end": "1702440"
  },
  {
    "text": "scanning and what I'm calling connect response scanning and uh it has a something we",
    "start": "1702440",
    "end": "1708640"
  },
  {
    "text": "call confidence scoring which I'll get into in a minute so MSS options scan it's",
    "start": "1708640",
    "end": "1714519"
  },
  {
    "text": "essentially a sin scan I'm sending I'm using raw sockets to send a sin without",
    "start": "1714519",
    "end": "1719640"
  },
  {
    "text": "the max segment size set and then in the response I read to see if a Max segment",
    "start": "1719640",
    "end": "1726080"
  },
  {
    "text": "size is a size I specify often times um it it's it's highly dependent on",
    "start": "1726080",
    "end": "1731600"
  },
  {
    "text": "firewall and firewall configuration so basically um we you want to be able to",
    "start": "1731600",
    "end": "1736799"
  },
  {
    "text": "tell if the firewall is sending you a packet or the host is sending you a packet um and it's depending on where the rule sets are so if you have your",
    "start": "1736799",
    "end": "1742919"
  },
  {
    "text": "firewall rule saying okay allow Port 80 uh before your firewall rule that says oh s like sin proxy everything well I'm",
    "start": "1742919",
    "end": "1750600"
  },
  {
    "text": "going to get to the host before I hit the firewall so I can kind of I can kind of uh detect your um nonsense I guess um",
    "start": "1750600",
    "end": "1759880"
  },
  {
    "text": "but yeah it's highly dependent and it only works some of the times and also I have an mmap patch that works so if you",
    "start": "1759880",
    "end": "1765039"
  },
  {
    "text": "want to put it in map it kind of works but but like I said highly dependent on uh that thing so um and the way it works",
    "start": "1765039",
    "end": "1773120"
  },
  {
    "text": "is it does a sin um and with and if it gets an MSS option of the size that you set it raises the confidence score by",
    "start": "1773120",
    "end": "1779919"
  },
  {
    "text": "one and flags that port is open and um really the main scanning",
    "start": "1779919",
    "end": "1786120"
  },
  {
    "text": "type of the tool is um what we call connect and response scan it's actually a lot like uh Maps connect scan um it",
    "start": "1786120",
    "end": "1793760"
  },
  {
    "text": "works with all implementations and I'm not really sure it can easily be poured to mmap map's",
    "start": "1793760",
    "end": "1799399"
  },
  {
    "text": "really good for sending one packet and getting one packet back at least in the initial discovery of open ports um it",
    "start": "1799399",
    "end": "1806159"
  },
  {
    "text": "probably could be but that was a little bit like a lot of code to write more than I probably could just create a tool on my own um but more on that in a",
    "start": "1806159",
    "end": "1812399"
  },
  {
    "text": "second but the basic process is we um call connect um and the kernel completes",
    "start": "1812399",
    "end": "1817559"
  },
  {
    "text": "a three handshake for us um after that's done I immediately close the socket um",
    "start": "1817559",
    "end": "1822679"
  },
  {
    "text": "which sends a fin to the server the server will respond so so uh once we",
    "start": "1822679",
    "end": "1828120"
  },
  {
    "text": "once we do that connect we've moved past the 3oy handshake so the sin flood says okay you're legit host not sin flooding",
    "start": "1828120",
    "end": "1834279"
  },
  {
    "text": "me let me move you on to the uh let me broker that connection with the host the the server and move you past um and then",
    "start": "1834279",
    "end": "1841320"
  },
  {
    "text": "I close the connection and the server that I'm scanning is still going to be sending me packets so I start listing",
    "start": "1841320",
    "end": "1846679"
  },
  {
    "text": "for an act a push a or a finac and for each response I get I raise the confidence by",
    "start": "1846679",
    "end": "1853600"
  },
  {
    "text": "one and so now we're going to move on to the demo",
    "start": "1853600",
    "end": "1859240"
  },
  {
    "text": "I think yes okay so here I'm just going to show that I have a backtrack server",
    "start": "1865039",
    "end": "1872120"
  },
  {
    "text": "kind of running",
    "start": "1872120",
    "end": "1875120"
  },
  {
    "text": "um so you can see that the ports open I'm going to scan ports 1 through 100 so",
    "start": "1877399",
    "end": "1883000"
  },
  {
    "text": "I have Port uh 21 for FTP SSH and Port 80 open um and you can see that and I'm actually using routing 2 VMS through a",
    "start": "1883000",
    "end": "1890240"
  },
  {
    "text": "pfSense firewall with um Sim proxy State and I have basically just two rules real simple um first allowing Port 80 through",
    "start": "1890240",
    "end": "1897320"
  },
  {
    "text": "and then send proxy all other",
    "start": "1897320",
    "end": "1900480"
  },
  {
    "text": "connections okay so first I'm just going to end map um ports 1 through 100 sin",
    "start": "1903000",
    "end": "1909840"
  },
  {
    "text": "scan so it's pretty fast um every port open not working right so we'll just do",
    "start": "1909840",
    "end": "1917240"
  },
  {
    "text": "run Muk and so I'm just going to go through",
    "start": "1917240",
    "end": "1923639"
  },
  {
    "text": "the options real quick um obviously help interface um you have your uh Max segment your your MSS uh scanning option",
    "start": "1923639",
    "end": "1930200"
  },
  {
    "text": "with the size um you have a-n saying don't perform a connect scan you have a port string standard you have a timing",
    "start": "1930200",
    "end": "1937120"
  },
  {
    "text": "um I didn't dynamically configure the timing because I didn't want to do that so you have to use nping or another tool like that to do it yourself um and",
    "start": "1937120",
    "end": "1944039"
  },
  {
    "text": "ultimately I am hoping that map just incorporates this stuff because they have all that built out and so they can",
    "start": "1944039",
    "end": "1949440"
  },
  {
    "text": "do crazy stuff and then just uh import my scan type um and then you have a",
    "start": "1949440",
    "end": "1955080"
  },
  {
    "text": "sleep and then you have the confidence score now like I said um the confidence score gets raised by one each time you",
    "start": "1955080",
    "end": "1960159"
  },
  {
    "text": "receive a packet that you're looking for so um what this is good for is for",
    "start": "1960159",
    "end": "1965880"
  },
  {
    "text": "instance an F5 send check will actually send an act back from that fireball for every port so if you have",
    "start": "1965880",
    "end": "1973279"
  },
  {
    "text": "your confidence score set for one what does that mean you're getting every it's going to every port is open so what you",
    "start": "1973279",
    "end": "1978679"
  },
  {
    "text": "do is you just set the confidence score for two and then now you can detect legitimate ports so it kind of uh as you",
    "start": "1978679",
    "end": "1985159"
  },
  {
    "text": "run into as as I run into new ones I kind of have to tweak settings and and do these things and- R is really good",
    "start": "1985159",
    "end": "1990320"
  },
  {
    "text": "for for printing out the reason for the port is open so I'm going to run",
    "start": "1990320",
    "end": "1995799"
  },
  {
    "text": "um I'm going to run a uh Port Port scan through um all 100 ports",
    "start": "1995799",
    "end": "2002320"
  },
  {
    "text": "here",
    "start": "2005960",
    "end": "2008960"
  },
  {
    "text": "and pray this works so here I'm going to do a MSS",
    "start": "2013960",
    "end": "2020440"
  },
  {
    "text": "option scan and I'm going to do a connect scan at the same time just just I show",
    "start": "2020440",
    "end": "2025360"
  },
  {
    "text": "both look at it",
    "start": "2025960",
    "end": "2029398"
  },
  {
    "text": "go cool so as you you can see we've um moved past the sin proxy and we've",
    "start": "2034559",
    "end": "2040399"
  },
  {
    "text": "actually detected only legitimate open ports as as I showed you um in the net stat output and so you can see that Port",
    "start": "2040399",
    "end": "2046840"
  },
  {
    "text": "22 um once we sent that finac it actually was like it actually was sending an act um Port 21 was also doing",
    "start": "2046840",
    "end": "2052839"
  },
  {
    "text": "that and Port 80 while it didn't send us any initial information it actually responded to our finac and was like okay",
    "start": "2052839",
    "end": "2058398"
  },
  {
    "text": "I'm going to close the connection with you as well as you can see um the MSS when I did the MSS scan that that sin",
    "start": "2058399",
    "end": "2064878"
  },
  {
    "text": "scan that I did it actually responded with an from the host because um in in my firewall you can see that I let Port",
    "start": "2064879",
    "end": "2072000"
  },
  {
    "text": "80 through right here before I set up the sin proxy",
    "start": "2072000",
    "end": "2078679"
  },
  {
    "text": "rule lost the slide oh",
    "start": "2081760",
    "end": "2087320"
  },
  {
    "text": "cool so yep um so yeah you can download it from my",
    "start": "2087320",
    "end": "2093000"
  },
  {
    "text": "website Hub 234.com There's the link um there's also a link on the main page if you guys want to contribute to the code",
    "start": "2093000",
    "end": "2098800"
  },
  {
    "text": "or tell me I did something wrong I'm all for that um also if there's any guy people in here that are Developers for",
    "start": "2098800",
    "end": "2104640"
  },
  {
    "text": "map or know a developer for map please let them contact me I really want this in",
    "start": "2104640",
    "end": "2110640"
  },
  {
    "text": "map and just a special thanks to Jeremy gny um he really helped me out with the code um neic um runs a BSD firewall and",
    "start": "2111240",
    "end": "2119599"
  },
  {
    "text": "I was just tell him to mess with it like every other second um and Tim Elrod from my team who was constantly breaking it",
    "start": "2119599",
    "end": "2125760"
  },
  {
    "text": "telling me my implementation didn't work until they did so that's what we have um thank you",
    "start": "2125760",
    "end": "2132599"
  },
  {
    "text": "for coming if there's any questions uh please come talk to us and also fishnet our team is hiring so if you're",
    "start": "2132599",
    "end": "2139320"
  },
  {
    "text": "interested in penetration testing and hacking in general come talk to us we want to hear from",
    "start": "2139320",
    "end": "2144640"
  },
  {
    "text": "you and there's some references in these slides are on the on the",
    "start": "2144640",
    "end": "2150520"
  },
  {
    "text": "CD [Applause]",
    "start": "2155800",
    "end": "2161400"
  },
  {
    "text": "thank you very much guys um up next we have Ryan Reynolds and Jonathan Claudius",
    "start": "2167319",
    "end": "2172760"
  },
  {
    "text": "with pretty much my favorite title of the day uh Stamp Out hash corruption",
    "start": "2172760",
    "end": "2178640"
  },
  {
    "text": "crack all the things",
    "start": "2178640",
    "end": "2184280"
  },
  {
    "text": "good [Applause] okay um thanks for coming to the talk",
    "start": "2185720",
    "end": "2192680"
  },
  {
    "text": "we're going to just Dive Right In This is Turbo talk so hold on",
    "start": "2192680",
    "end": "2198680"
  },
  {
    "text": "okay dongle D technical",
    "start": "2198680",
    "end": "2205160"
  },
  {
    "text": "difficulties all right I'm Ryan Reynolds uh I work for Crow Horwath i pen test I",
    "start": "2205760",
    "end": "2210920"
  },
  {
    "text": "break stuff and my name is Jonathan Claudius I work for trust wave spider labs and I'm vulnerability resar",
    "start": "2210920",
    "end": "2216680"
  },
  {
    "text": "Searcher cool all right so today we're going to talk about uh the different ways to extract password hashes from",
    "start": "2216680",
    "end": "2223200"
  },
  {
    "text": "local Windows systems we're not talking about DCS we're just talking about local accounts um we're going to talk about the tools that do um this password",
    "start": "2223200",
    "end": "2230720"
  },
  {
    "text": "extraction from Reading registry hives and a flaw that we found in those tools",
    "start": "2230720",
    "end": "2235880"
  },
  {
    "text": "that pretty much plagues a lot of the main tools that you guys probably use uh a way to fix that and we'll have a demo",
    "start": "2235880",
    "end": "2242640"
  },
  {
    "text": "for you and then we'll also release patches for several tools all right so just a level set here I",
    "start": "2242640",
    "end": "2249480"
  },
  {
    "text": "think a lot of people know the difference between LM and ntlm but uh LM is the old windows hashing algorithm uh",
    "start": "2249480",
    "end": "2256040"
  },
  {
    "text": "it pretty much has tons of security flaws one you can only have a password that is 14 characters or less in length",
    "start": "2256040",
    "end": "2263319"
  },
  {
    "text": "it uppercases your password and it splits it into seven by chunks nlm came around they said all right we should",
    "start": "2263319",
    "end": "2270000"
  },
  {
    "text": "probably stretch out that length to 128 characters um and we will care about",
    "start": "2270000",
    "end": "2275160"
  },
  {
    "text": "case uh the main main issue here though with both of them is that they're not salted so if you have um the same",
    "start": "2275160",
    "end": "2282079"
  },
  {
    "text": "password on system a for a user account and on system B the hash will be the same so um that we'll talk about that a",
    "start": "2282079",
    "end": "2289400"
  },
  {
    "text": "little later here but the two main ways to access hashes on Windows systems is",
    "start": "2289400",
    "end": "2295520"
  },
  {
    "text": "to either inject into the lsas process and tools like FG dump and PDM 6 do this",
    "start": "2295520",
    "end": "2302119"
  },
  {
    "text": "they'll load a dll right into memory um and with the debug privileges the high level of privileges they have they can",
    "start": "2302119",
    "end": "2308480"
  },
  {
    "text": "access the hashes the other method is registry reading so you're literally reading the Sam hiive file parsing",
    "start": "2308480",
    "end": "2315480"
  },
  {
    "text": "through that taking that data that you parsed out passing it to some mathematical algorithms which then",
    "start": "2315480",
    "end": "2321599"
  },
  {
    "text": "create what we all know as LM and ntlm hashes the nice part about the register reading method is one I'm not messing",
    "start": "2321599",
    "end": "2327839"
  },
  {
    "text": "around with memory so I don't have to worry about blue boxing a system if something goes wrong and I also don't",
    "start": "2327839",
    "end": "2333520"
  },
  {
    "text": "have to fight with AV because I'm just reading a registry um and that's a normal admin thing to",
    "start": "2333520",
    "end": "2340520"
  },
  {
    "text": "do all right story time so how did we get here and what what's going on so was",
    "start": "2340520",
    "end": "2345640"
  },
  {
    "text": "on a pentest got onto a system with a interpreter shell um and I'm like thinking yes this is awesome I'm going",
    "start": "2345640",
    "end": "2351920"
  },
  {
    "text": "to dump hashes using the hash dump script which extracts those hashes via the registry reading method got some",
    "start": "2351920",
    "end": "2358760"
  },
  {
    "text": "hashes got an LM hash and nlm and I'm like all right awesome LM going to throw it through rainbow tables didn't crack I",
    "start": "2358760",
    "end": "2365280"
  },
  {
    "text": "even had the friend rainbow tables from freebow tables.com that's like 400 gigs didn't crack through that so then I'm",
    "start": "2365280",
    "end": "2371440"
  },
  {
    "text": "like all right I got the ntlm hash what I'll do is I will pass it back to the system I extracted it from because that",
    "start": "2371440",
    "end": "2378400"
  },
  {
    "text": "should work you know it's the hash from that system and I get a login failure so I'm like WTF I'll fight the good fight",
    "start": "2378400",
    "end": "2385599"
  },
  {
    "text": "with AV I'll kill that thing and I'll use my old standby tool PW dump 6 which",
    "start": "2385599",
    "end": "2391079"
  },
  {
    "text": "injects into Elsas and I'll get the hashes that way just to see if you know maybe it's my tools or something going",
    "start": "2391079",
    "end": "2396640"
  },
  {
    "text": "on and it turns out I got completely different hashes as you can see via the",
    "start": "2396640",
    "end": "2401880"
  },
  {
    "text": "registry method um I had an LM an nlm hash via injection the LM that a A3 B4",
    "start": "2401880",
    "end": "2409280"
  },
  {
    "text": "that's not an actual hash that's just representing blank so there really was no LM hash stored on this system so it's",
    "start": "2409280",
    "end": "2416319"
  },
  {
    "text": "kind of like all right this is weird I've seen this on multiple pent tests I've seen this on multiple um systems",
    "start": "2416319",
    "end": "2421680"
  },
  {
    "text": "what's going on I call up some of my co-workers I'm like hey have you seen this issue they're like yeah I can only",
    "start": "2421680",
    "end": "2427480"
  },
  {
    "text": "get those hashes via injection I can't use register reading tools I don't know what's going on like all right well what",
    "start": "2427480",
    "end": "2433599"
  },
  {
    "text": "did the Google say whoops the Google say the Google say um there's a metlo bug",
    "start": "2433599",
    "end": "2440680"
  },
  {
    "text": "report for this actually someone said hey I run into the same issue I don't have an LM hash stored on this system",
    "start": "2440680",
    "end": "2446400"
  },
  {
    "text": "and I run the hash dump script and I get the incorrect hashes so this was at this point I was like all right cool I'm not",
    "start": "2446400",
    "end": "2452720"
  },
  {
    "text": "insane other people are having this issue but I was still frustrated so John and I we've known each other for",
    "start": "2452720",
    "end": "2459440"
  },
  {
    "text": "several years um we occasionally meet up for beers and Swap War stories about pen",
    "start": "2459440",
    "end": "2465000"
  },
  {
    "text": "testing and the security scene and I was telling them this issue I'm like hey this is weird I can't crack these hashes",
    "start": "2465000",
    "end": "2470760"
  },
  {
    "text": "and we both like to just hackup code on the weekend so we're like all right we can probably get together and figure this out reverse some code from",
    "start": "2470760",
    "end": "2477240"
  },
  {
    "text": "Metasploit um he's really good with Ruby so we figured why not try this out but",
    "start": "2477240",
    "end": "2482599"
  },
  {
    "text": "in order to do that we had to figure out where do we start and and we asked ourselves well where do the hashes live",
    "start": "2482599",
    "end": "2489119"
  },
  {
    "text": "and it turns out they live in the Sam registry Hive and in order to you know",
    "start": "2489119",
    "end": "2494640"
  },
  {
    "text": "obviously they're not just there in clear text they're in this hash data binary coded in form and in order to get",
    "start": "2494640",
    "end": "2500160"
  },
  {
    "text": "to that data we needed the CIS key which is stored in the system Hive so we need the CIS key so we can read the data in",
    "start": "2500160",
    "end": "2506560"
  },
  {
    "text": "the Sam Hive so all right sounds good so then we're like all right let's open up reg edit and just browse through the Sam",
    "start": "2506560",
    "end": "2513920"
  },
  {
    "text": "file and we have the um for here we have a user account and each user account has an F key and a v key",
    "start": "2513920",
    "end": "2522440"
  },
  {
    "text": "turns out the F key contains a lot of policy information information such as you know when does their password expire",
    "start": "2522440",
    "end": "2529119"
  },
  {
    "text": "do they have any log on restrictions just policy info the V key is where we want to play though it has the username",
    "start": "2529119",
    "end": "2535440"
  },
  {
    "text": "and it has the LM hash data and ntlm hash data and like I said that's not the actual hashes it's just the data that we",
    "start": "2535440",
    "end": "2541680"
  },
  {
    "text": "need to extract to pass through mathematical algorithms to get the",
    "start": "2541680",
    "end": "2546760"
  },
  {
    "text": "actual LM and nlm hashes so all right cool we figured that out so instead of",
    "start": "2546760",
    "end": "2553160"
  },
  {
    "text": "like putting up tons of screenshots of um hacks in binary we figured we'd kind",
    "start": "2553160",
    "end": "2558480"
  },
  {
    "text": "of do like a pseudo representation here so that first user there has a bunch of A's and a bunch of B's those A's",
    "start": "2558480",
    "end": "2564920"
  },
  {
    "text": "represent an LM hash and the B's represent an NTM hash the second user doesn't have an LM hash they just have",
    "start": "2564920",
    "end": "2571720"
  },
  {
    "text": "an nlm hash so this is kind of something we're going to reference throughout the presentation here",
    "start": "2571720",
    "end": "2578160"
  },
  {
    "text": "so we said all right cool now we kind of know what's going on with the structure of the hive files here and we said well",
    "start": "2578160",
    "end": "2584359"
  },
  {
    "text": "what tools outside of metas sploit do this and turns out all those tools",
    "start": "2584359",
    "end": "2589440"
  },
  {
    "text": "extract hashes or have the ability to extract hashes from the just reading the registry so we're like wow okay like",
    "start": "2589440",
    "end": "2595400"
  },
  {
    "text": "let's start looking to see how these tools dive into this and so we figured",
    "start": "2595400",
    "end": "2600440"
  },
  {
    "text": "out okay we need to play in that V key where all that good stuff is and we need",
    "start": "2600440",
    "end": "2605680"
  },
  {
    "text": "to read into a certain offset so we have that gray box that says all right this is how far we have to read into that V",
    "start": "2605680",
    "end": "2611640"
  },
  {
    "text": "key before we hit the hash data and once we have that hash data string we need to",
    "start": "2611640",
    "end": "2618200"
  },
  {
    "text": "make a couple decisions here we need to say okay does this user have an LM hash and an NTM hash or just an ntlm or",
    "start": "2618200",
    "end": "2625920"
  },
  {
    "text": "nothing and so the way that these tools on this slide determine if the hashes",
    "start": "2625920",
    "end": "2631880"
  },
  {
    "text": "exist or not they say okay I have the string of hash data how big is it what's the the length of it I'm just going to",
    "start": "2631880",
    "end": "2637240"
  },
  {
    "text": "measure the length and if it's over 40 bytes then I am going to um say I have",
    "start": "2637240",
    "end": "2643280"
  },
  {
    "text": "an LM and ntlm if it's over only 20 I'm going to do ntlm so the main takeaway here is hey we have an issue because",
    "start": "2643280",
    "end": "2650440"
  },
  {
    "text": "we're just saying that uh we we're just making a guess on how to parse this based on the size of this which leads us",
    "start": "2650440",
    "end": "2656119"
  },
  {
    "text": "into the flow thanks Ryan um so what we're",
    "start": "2656119",
    "end": "2663079"
  },
  {
    "text": "talking about here the flaw if you guys remember Ryan was on a pentest he extracted hashes he gets the ones in red",
    "start": "2663079",
    "end": "2669520"
  },
  {
    "text": "from Metasploit he gets a different set from PW dump 6 uh this is what we're going to be talking about so let's",
    "start": "2669520",
    "end": "2675040"
  },
  {
    "text": "revisit the logic here for a second we've got this offset that we've read into and then what we're going to do is",
    "start": "2675040",
    "end": "2680559"
  },
  {
    "text": "we're going to read to the end of the binary data structure to see what is left and in the cases that Ryan had",
    "start": "2680559",
    "end": "2687319"
  },
  {
    "text": "problems with his metas stuff when he was getting the wrong hashes he had additional data at the end of that",
    "start": "2687319",
    "end": "2692480"
  },
  {
    "text": "binary stream and we'll get to a sec we'll get to what that data is here in a second but essentially what this does it",
    "start": "2692480",
    "end": "2699520"
  },
  {
    "text": "actually invalidates the parsing logic Within These tools so what you have here is that when we run into this additional",
    "start": "2699520",
    "end": "2706680"
  },
  {
    "text": "data at the end of the binary stream for that particular user's vkey we will'll parse the we will parse hashes always as",
    "start": "2706680",
    "end": "2713520"
  },
  {
    "text": "if there's LM and ntlm hashes there regardless of whether or not there's actually an LM hash there so going back",
    "start": "2713520",
    "end": "2720680"
  },
  {
    "text": "to the example that we talked about if we go to make these parsing decisions here's the first one so the first one",
    "start": "2720680",
    "end": "2726319"
  },
  {
    "text": "like we said we've got LM and ntlm we're going to parse things perfectly so we're going to grab that red data we're going",
    "start": "2726319",
    "end": "2731800"
  },
  {
    "text": "to pass it to the cryptographic algorithms and we're going to get the right hashes what happens here is that if we go for the second set we're going",
    "start": "2731800",
    "end": "2737920"
  },
  {
    "text": "to parse it in correctly so what we're going to do is going to be taking garbage data and stuffing into both LM",
    "start": "2737920",
    "end": "2743040"
  },
  {
    "text": "and the nlm data that we're going to be eventually trying to abstract our our actual hashes from so this is basically",
    "start": "2743040",
    "end": "2748520"
  },
  {
    "text": "what's happening in the code so again the the data Plus+ one of",
    "start": "2748520",
    "end": "2753760"
  },
  {
    "text": "the things that we wanted to figure out what what the heck is this data Plus+ stuffff and it turns out that it's actually the password histories for that",
    "start": "2753760",
    "end": "2760280"
  },
  {
    "text": "particular user so if you enable password histories and you have no LM hashes we actually run into this logic",
    "start": "2760280",
    "end": "2766319"
  },
  {
    "text": "fall and the funny thing is this is actually a Microsoft best practice so in Enterprise you'll see this a lot but",
    "start": "2766319",
    "end": "2772040"
  },
  {
    "text": "when the guys were creating these tools they probably weren't testing this use case so this is actually what the raw",
    "start": "2772040",
    "end": "2778079"
  },
  {
    "text": "data looks like we've saved you up until now uh here is actually the F key and the V key data from the registry for",
    "start": "2778079",
    "end": "2784079"
  },
  {
    "text": "their particular user you can see in the Yellow Boxes there that's actually the hash data for LM and ntlm and at the",
    "start": "2784079",
    "end": "2791480"
  },
  {
    "text": "bottom here this big huge green blob that's data Plus+ so when we look at our logic we say hey is this bigger than 40",
    "start": "2791480",
    "end": "2798160"
  },
  {
    "text": "bytes if data is on there we're always going to have it greater than 40 bytes so that's how we actually always end up",
    "start": "2798160",
    "end": "2803640"
  },
  {
    "text": "in this fail case where we're going to parse the data the incorrectly but one of the things that",
    "start": "2803640",
    "end": "2809480"
  },
  {
    "text": "we found was that there's actually header data earlier on in this in the Stream so what we can do with this is",
    "start": "2809480",
    "end": "2816160"
  },
  {
    "text": "that it can help us determine whether or not there's going to be a hash there or not so we know how to make our parsing decisions so we don't have to use size",
    "start": "2816160",
    "end": "2823079"
  },
  {
    "text": "so what we found out was that in this case is if there's if there's a four in that value it means that there's no hash",
    "start": "2823079",
    "end": "2828520"
  },
  {
    "text": "present and if there's a 14 in that value there's always going to be a hash present so what we can do is we don't have to guess anymore we don't have to",
    "start": "2828520",
    "end": "2834920"
  },
  {
    "text": "say you know using a measuring stick approach oh looks like it's this big so it's probably this many or looks like",
    "start": "2834920",
    "end": "2840000"
  },
  {
    "text": "this big there's probably only one so we can always parse the data correctly so if we look at the bad l take example one",
    "start": "2840000",
    "end": "2846480"
  },
  {
    "text": "more time we're going to parse data like this using the current logic and using the New Logic we're going to one parse",
    "start": "2846480",
    "end": "2851920"
  },
  {
    "text": "the other one correctly and parse the B data correctly that makes sense so one of the things that we did",
    "start": "2851920",
    "end": "2859040"
  },
  {
    "text": "again like Ryan said we focused on metas sploit within our testing that was our primary focus because that was what Ryan",
    "start": "2859040",
    "end": "2864559"
  },
  {
    "text": "was having problems with but when we started looking at the other tools we found out that there was a lot of tools that do this incorrectly there's a lot",
    "start": "2864559",
    "end": "2870920"
  },
  {
    "text": "of tools that use this logic so what we did is we started going through change logs and blog posts all this like back",
    "start": "2870920",
    "end": "2876760"
  },
  {
    "text": "data stuff to figure out where did all this stuff come from and what we found out was that actually PW dump one is the",
    "start": "2876760",
    "end": "2882680"
  },
  {
    "text": "you know one of the first tools ever to do this implemented this logic and as you can see if you can see the",
    "start": "2882680",
    "end": "2887839"
  },
  {
    "text": "relationships that we've drawn here these are the influence over time so these are how these tools influence each other uh based on our research so we",
    "start": "2887839",
    "end": "2894800"
  },
  {
    "text": "thought that was kind of cool but when you look at it from a timeline perspective you can see that PW dump is actually created back in '97 so this is",
    "start": "2894800",
    "end": "2901839"
  },
  {
    "text": "an issue that's been all the way back to '97 we've been pulling bad hashes up until now now and you as you can see",
    "start": "2901839",
    "end": "2908319"
  },
  {
    "text": "here that there's Sam dump after that Kane and abble both of those guys did it wrong and then Sam dump actually figured",
    "start": "2908319",
    "end": "2914520"
  },
  {
    "text": "this out they said oh hey we're getting bad hashes let's fix this let's read it a little bit different so they actually started using the header method back in",
    "start": "2914520",
    "end": "2920520"
  },
  {
    "text": "' 07 but the problem was is that when cred dump was created it was created about 3 months later and when it was",
    "start": "2920520",
    "end": "2926440"
  },
  {
    "text": "created the guy said hey you know I use Sam dump as my source for this the problem is he didn't actually use the",
    "start": "2926440",
    "end": "2932000"
  },
  {
    "text": "fixed Source he used the source that was broken from before and he was one of of the first guys ever to do this in a",
    "start": "2932000",
    "end": "2937400"
  },
  {
    "text": "scripting language so that scripting language being so accessible everyone just ate it up started using it so you",
    "start": "2937400",
    "end": "2943079"
  },
  {
    "text": "can see all these other tools picked this logic back up this broken logic and started using it in their tools and",
    "start": "2943079",
    "end": "2948559"
  },
  {
    "text": "there's actually current tools that are in De development right now that are using this logic to perform their",
    "start": "2948559",
    "end": "2954000"
  },
  {
    "text": "parsing decisions so the big takeaways that we have are that reversing is hard you can't always cover all the cases",
    "start": "2954000",
    "end": "2961160"
  },
  {
    "text": "when you're reversing something that you don't have a blueprint for and leveraging code is really helpful but it can sometimes come at a cost if we",
    "start": "2961160",
    "end": "2968240"
  },
  {
    "text": "expect the assumptions that were made when that code was originally written to be true up until today and that was you",
    "start": "2968240",
    "end": "2973520"
  },
  {
    "text": "know a long time ago and one of the other things that we noticed was that open source is awesome like Ryan and I",
    "start": "2973520",
    "end": "2979040"
  },
  {
    "text": "didn't have any knowledge of the inner workings of how this process worked before but using everyone's code we were able to understand how it worked how it",
    "start": "2979040",
    "end": "2985599"
  },
  {
    "text": "was broken and how we could fix it so we do have a demonstration put together for",
    "start": "2985599",
    "end": "2991880"
  },
  {
    "text": "you and I'm going to pull it up right now",
    "start": "2991880",
    "end": "2997000"
  },
  {
    "text": "and what we've done here is we've got uh Windows 8 pre-release we thought that would be a good thing because I don't",
    "start": "2997000",
    "end": "3002760"
  },
  {
    "text": "think anyone's seen that or a lot of people have seen it yet um what we're going to do here is we're going to we",
    "start": "3002760",
    "end": "3008240"
  },
  {
    "text": "have a met meterpreter shell on the system and we're going to actually perform the hash jump and we're going to",
    "start": "3008240",
    "end": "3013359"
  },
  {
    "text": "show you how this bug manifests itself so we're going to switch over the desktop here and we've got an",
    "start": "3013359",
    "end": "3019680"
  },
  {
    "text": "interpreter shell and we're going to be dumping the hashes and within this system we have two users we have Frank",
    "start": "3019680",
    "end": "3026440"
  },
  {
    "text": "and we have test Frank is using uh the same exact password as test so you can",
    "start": "3026440",
    "end": "3031640"
  },
  {
    "text": "see here that the N hash for that user 5f1 is the exact same so this is this is",
    "start": "3031640",
    "end": "3038640"
  },
  {
    "text": "matches up this matches up with our understanding it's not salted there's nothing special about this they're using exact same passwords and hashes but when",
    "start": "3038640",
    "end": "3045760"
  },
  {
    "text": "we go and we look at the hashes or the history themselves and we enable history for this particular user and what's",
    "start": "3045760",
    "end": "3052319"
  },
  {
    "text": "important here is we actually have to change the password for this user cuz that's what actually changes the data structure so we're going to set it to",
    "start": "3052319",
    "end": "3058160"
  },
  {
    "text": "like a temporary password like test and then we're going to change that password right back to the original password that",
    "start": "3058160",
    "end": "3064480"
  },
  {
    "text": "the Frank user is still using this makes the data Plus+ yes so this is actually what adds data Plus+ to our data",
    "start": "3064480",
    "end": "3071040"
  },
  {
    "text": "structure so when we go back to metlo and we go to dump the hashes on the system using the same code what we'll",
    "start": "3071040",
    "end": "3077480"
  },
  {
    "text": "see here is that the hashes are different and it we'll highlight it here",
    "start": "3077480",
    "end": "3082599"
  },
  {
    "text": "in a second we see we have 5f1 and then for the other one the test user we have",
    "start": "3082599",
    "end": "3088000"
  },
  {
    "text": "072 I'm going to pause it here for a second this is a hash that will not crack there's nothing that you're going",
    "start": "3088000",
    "end": "3093760"
  },
  {
    "text": "to be able to do with this hash is complete garbage same thing with the NT the LM",
    "start": "3093760",
    "end": "3098799"
  },
  {
    "text": "hash so what we did is we we going to run our code now and our our patch code",
    "start": "3098799",
    "end": "3103839"
  },
  {
    "text": "and we'll show you how with no modifications of the systems we'll pull the we'll pull the right hashes for this particular",
    "start": "3103839",
    "end": "3111160"
  },
  {
    "text": "user so there you have it no more more corrupted hashes we've got the same hash for both Frank and Tess they're using",
    "start": "3113520",
    "end": "3119559"
  },
  {
    "text": "the same same passwords no more hash",
    "start": "3119559",
    "end": "3123720"
  },
  {
    "text": "[Applause]",
    "start": "3125040",
    "end": "3128429"
  },
  {
    "text": "corruption so the last thing that we have for you is um some additional stuff",
    "start": "3131119",
    "end": "3136520"
  },
  {
    "text": "again we we focused on metas as our testing tool it was the our guinea pig uh but we didn't stop there what we did",
    "start": "3136520",
    "end": "3143240"
  },
  {
    "text": "do is we actually looked at other scripting language specifically cred dump being accessible to us as a scripting language we developed patches",
    "start": "3143240",
    "end": "3149680"
  },
  {
    "text": "for both Metasploit and cred dump both those patches have been submitted to the author authors metas Spate has this code",
    "start": "3149680",
    "end": "3155920"
  },
  {
    "text": "in their repository now so if you SN up you'll be able to get the correct hashes when you read this method we're also",
    "start": "3155920",
    "end": "3161720"
  },
  {
    "text": "working with all these other tool developers not all of them are listed on this on this particular list but these",
    "start": "3161720",
    "end": "3167000"
  },
  {
    "text": "are the main ones that we're working with right now to get this bug out of their particular distributions and up to",
    "start": "3167000",
    "end": "3174240"
  },
  {
    "text": "this point they've been extremely helpful they've come back they've been really really helpful like trying to fix",
    "start": "3174240",
    "end": "3180640"
  },
  {
    "text": "this problem in their code and that's it that's our [Applause]",
    "start": "3180640",
    "end": "3188629"
  },
  {
    "text": "talk",
    "start": "3191760",
    "end": "3194760"
  }
]