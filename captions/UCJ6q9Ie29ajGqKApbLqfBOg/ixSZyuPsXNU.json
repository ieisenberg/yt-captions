[
  {
    "start": "0",
    "end": "0"
  },
  {
    "text": "[Music]",
    "start": "860",
    "end": "9280"
  },
  {
    "text": "hi everyone thank you for attending our talk today tom and i i'm john will be talking about",
    "start": "9280",
    "end": "15360"
  },
  {
    "text": "exploiting uh reading systems or how your ebook might be reading you",
    "start": "15360",
    "end": "21520"
  },
  {
    "text": "first a little bit of context so nowadays when a book is published it's",
    "start": "21520",
    "end": "26640"
  },
  {
    "start": "22000",
    "end": "22000"
  },
  {
    "text": "not only published in a physical format but also in a digital format so called",
    "start": "26640",
    "end": "31679"
  },
  {
    "text": "ebooks and throughout the years a lot of ebook formats have risen",
    "start": "31679",
    "end": "37840"
  },
  {
    "text": "most of them proprietary now in this project we focused on one",
    "start": "37840",
    "end": "42960"
  },
  {
    "text": "ebook format being the e-performance based on the epa technical standards why",
    "start": "42960",
    "end": "48719"
  },
  {
    "text": "this one because it's an open technical standard which means that essentially anyone can create an epub or an ebook",
    "start": "48719",
    "end": "55680"
  },
  {
    "text": "reading system also because it's one of the most popular formats nowadays on virtually",
    "start": "55680",
    "end": "62079"
  },
  {
    "text": "any device you can find an application that renders e-books i'm talking about smartphones tablets laptops and even",
    "start": "62079",
    "end": "69040"
  },
  {
    "text": "those e-ink reading devices so what is discussed in the epub",
    "start": "69040",
    "end": "75119"
  },
  {
    "text": "technical standard well in its latest installment there's actually two main parts in content context of this project",
    "start": "75119",
    "end": "82960"
  },
  {
    "text": "first we have discussion on how an ebook file should be formatted",
    "start": "82960",
    "end": "89600"
  },
  {
    "text": "and how epub reading systems should render ebook files and which capabilities should be granted to those",
    "start": "89600",
    "end": "95759"
  },
  {
    "text": "loaded epubs an epic file is essentially a zip archive with an internal predefined",
    "start": "95759",
    "end": "102560"
  },
  {
    "text": "structure and here we also find the publication resources like the text and imagery that",
    "start": "102560",
    "end": "108399"
  },
  {
    "text": "make up the book that is represented by the ebit file and this actually relies on web",
    "start": "108399",
    "end": "114240"
  },
  {
    "text": "technology it's defined by xhtml css style sheets and even javascript code",
    "start": "114240",
    "end": "120960"
  },
  {
    "text": "so say you're a developer and you want to develop an ebook reading system",
    "start": "120960",
    "end": "126079"
  },
  {
    "text": "you aren't going to reinvent the wheel right so you're gonna use a web engine that has been around for decades that's",
    "start": "126079",
    "end": "132959"
  },
  {
    "text": "uh regularly updated um and you're gonna embed it in your reading system that's what most uh",
    "start": "132959",
    "end": "140080"
  },
  {
    "text": "applications actually do um of course it's not that simple because there's also some considerations mentioned in",
    "start": "140080",
    "end": "146879"
  },
  {
    "text": "the technical standards like for example remote resources",
    "start": "146879",
    "end": "152080"
  },
  {
    "text": "in the specification a remote mode resource is a resource that is located",
    "start": "152080",
    "end": "157920"
  },
  {
    "text": "outside of the epic container so outside of the of the zip archive typically but not necessarily online",
    "start": "157920",
    "end": "164959"
  },
  {
    "text": "so in essence this means that the epub will be able to refer to a local file on",
    "start": "164959",
    "end": "170400"
  },
  {
    "text": "the user's file system or to a resource on the internet now of course there are some important",
    "start": "170400",
    "end": "177280"
  },
  {
    "text": "security considerations that are also discussed in the technical standard for example",
    "start": "177280",
    "end": "183120"
  },
  {
    "text": "when a network activity occurs of or will be occurring to fetch a remote",
    "start": "183120",
    "end": "188480"
  },
  {
    "text": "resource the user should first give consent of at least be notified of this activity",
    "start": "188480",
    "end": "195680"
  },
  {
    "text": "and then even more important only the rendering of such a resource is",
    "start": "195680",
    "end": "202720"
  },
  {
    "text": "allowed scripts in the ebook file are not allowed to actually inspect the",
    "start": "202720",
    "end": "207840"
  },
  {
    "text": "content this is very similar to the same origin policy on the web so when one website embeds content from another",
    "start": "207840",
    "end": "214560"
  },
  {
    "text": "website its scripts are not allowed to actually inspect the content",
    "start": "214560",
    "end": "221360"
  },
  {
    "text": "um okay so what did we actually investigate in the first part of the presentation",
    "start": "221599",
    "end": "228720"
  },
  {
    "text": "will answer the question what is the state of these freely available ebook reading systems",
    "start": "228720",
    "end": "235280"
  },
  {
    "text": "first in the context of granted capabilities so what are ebibs allowed to do when loaded in an epub reading",
    "start": "235280",
    "end": "241519"
  },
  {
    "text": "system but also in terms of the security considerations are these security considerations discussed in the",
    "start": "241519",
    "end": "247760"
  },
  {
    "text": "specification upheld by the developers in the second part um we will look at",
    "start": "247760",
    "end": "254959"
  },
  {
    "text": "the capabilities uh are they being abused in the wild first in the context of a malicious epub",
    "start": "254959",
    "end": "262320"
  },
  {
    "text": "so for example an attacker might abuse an epub to actually steal information from your your system or to actually",
    "start": "262320",
    "end": "269680"
  },
  {
    "text": "hack your system but this can also be looked at in the context of a publisher for example if",
    "start": "269680",
    "end": "275840"
  },
  {
    "text": "you buy an ebook book from a vendor it might include tracking",
    "start": "275840",
    "end": "282560"
  },
  {
    "text": "codes to actually for example have a look at what other books make up your personal library",
    "start": "282560",
    "end": "290560"
  },
  {
    "text": "so let's have a look at the first question for this we evaluated a total of 97",
    "start": "290560",
    "end": "296800"
  },
  {
    "text": "reading systems like shown here 27 desktop applications 55 mobile apps",
    "start": "296800",
    "end": "304639"
  },
  {
    "text": "then browser extensions and 5 physical e-readers",
    "start": "304639",
    "end": "310000"
  },
  {
    "start": "309000",
    "end": "309000"
  },
  {
    "text": "did this using or developing a semi-automated black box evaluation framework which is essentially a testbed",
    "start": "310000",
    "end": "318160"
  },
  {
    "text": "of multiple ebooks and when such an epub is loaded in an",
    "start": "318160",
    "end": "323360"
  },
  {
    "text": "reading system it would automatically execute our experiments",
    "start": "323360",
    "end": "330400"
  },
  {
    "text": "after the experiments the results will be shown on the e-reader screen or will be sent to our local web server",
    "start": "330400",
    "end": "337440"
  },
  {
    "text": "if allowed by the e-book reading system of course on the right you can see the experiments that we",
    "start": "337440",
    "end": "343520"
  },
  {
    "text": "executed due to timing constraints i won't be able to explain them all in detail",
    "start": "343520",
    "end": "350639"
  },
  {
    "text": "but in the next few slides i will discuss the most interesting ones also we open sourced this testbed of",
    "start": "350639",
    "end": "358160"
  },
  {
    "text": "epubs so if you're interested have a look at our github repo",
    "start": "358160",
    "end": "364478"
  },
  {
    "start": "364000",
    "end": "364000"
  },
  {
    "text": "in the first experiment we check whether javascript is executed",
    "start": "365199",
    "end": "371039"
  },
  {
    "text": "so this is quite simple we include javascript to be comprehensive we included it in",
    "start": "371039",
    "end": "376400"
  },
  {
    "text": "different ways so for example inline or external also to",
    "start": "376400",
    "end": "383280"
  },
  {
    "text": "account for the eva reading systems that might embed a very outdated web engine we try to be as",
    "start": "383280",
    "end": "390800"
  },
  {
    "text": "backwards compatible as possible for example we used ecmascript 5 instead of 6 and we also avoided using",
    "start": "390800",
    "end": "398400"
  },
  {
    "text": "the more recent java script function goals",
    "start": "398400",
    "end": "403680"
  },
  {
    "start": "403000",
    "end": "403000"
  },
  {
    "text": "as for remote communication we leveraged a get ghetto prepo named http leaks which is a",
    "start": "403919",
    "end": "410319"
  },
  {
    "text": "comprehensive set of html tags that initiate requests so using these",
    "start": "410319",
    "end": "416720"
  },
  {
    "text": "tags and also some other javascript function calls we tried to initiate requests to our own server and server",
    "start": "416720",
    "end": "423919"
  },
  {
    "text": "side we checked whether the request was received such that we could safely say whether remote communication was",
    "start": "423919",
    "end": "430319"
  },
  {
    "text": "supported also client side we checked the consent flow and checked whether any notification was",
    "start": "430319",
    "end": "436880"
  },
  {
    "text": "given to the user about this network activity",
    "start": "436880",
    "end": "443280"
  },
  {
    "start": "442000",
    "end": "442000"
  },
  {
    "text": "and we also checked if the epub was allowed to access the local file system",
    "start": "444000",
    "end": "450720"
  },
  {
    "text": "for example using the file protocol using a direct link at the resource",
    "start": "450720",
    "end": "455759"
  },
  {
    "text": "that might be interesting to an attacker to bypass the potential enforcement of",
    "start": "455759",
    "end": "463680"
  },
  {
    "text": "the same origin policy we also leveraged symbolic links",
    "start": "463680",
    "end": "469280"
  },
  {
    "text": "so first we try to infer whether a file existed on the file system",
    "start": "469280",
    "end": "475440"
  },
  {
    "text": "the easiest way to do this is by trying to render the file for example in an iframe and then check whether the unload",
    "start": "475440",
    "end": "483199"
  },
  {
    "text": "event is fired if that didn't work we tried timing attacks so we compared the timings",
    "start": "483199",
    "end": "490479"
  },
  {
    "text": "needed to fetch a non-existing file with the timings needed to uh check um the",
    "start": "490479",
    "end": "497840"
  },
  {
    "text": "existence of or the time needed to fetch um an existing file and if there if the difference was",
    "start": "497840",
    "end": "507039"
  },
  {
    "text": "if the difference was consistent we could conclude that the attacker",
    "start": "508000",
    "end": "514640"
  },
  {
    "text": "might be able to infer the existence through a timing attack and here we also looked at the on error",
    "start": "514640",
    "end": "521120"
  },
  {
    "text": "event of the fetch for example also we used a file system in user space",
    "start": "521120",
    "end": "528000"
  },
  {
    "text": "this is a file system on top of the native file system with can which can be",
    "start": "528000",
    "end": "533279"
  },
  {
    "text": "altered to lock access to certain files",
    "start": "533279",
    "end": "538000"
  },
  {
    "text": "we also try to leak file contents using various javascript apis and also",
    "start": "538959",
    "end": "544800"
  },
  {
    "text": "some html tags",
    "start": "544800",
    "end": "549480"
  },
  {
    "text": "so uri schemes can be used to give a hint uh at the operating system",
    "start": "549920",
    "end": "556720"
  },
  {
    "text": "as to which application to use to open the link for example in this first links",
    "start": "556720",
    "end": "562399"
  },
  {
    "text": "if you click it on on the link with the mail to scheme your operating system will open your",
    "start": "562399",
    "end": "569200"
  },
  {
    "text": "default mailing application which will start a draft directed at my email address",
    "start": "569200",
    "end": "575279"
  },
  {
    "text": "but this could be abused by an attacker um how did we test it this we put a url",
    "start": "575279",
    "end": "581279"
  },
  {
    "text": "in an html document inside the ebook and then using javascript you we use the",
    "start": "581279",
    "end": "586399"
  },
  {
    "text": "click function to actually emulate a user click and then we check the consent",
    "start": "586399",
    "end": "592320"
  },
  {
    "text": "flow first at the level of the reading system and also at the level of the target",
    "start": "592320",
    "end": "597920"
  },
  {
    "text": "application there's also some custom uri schemes like twitter if you click this link",
    "start": "597920",
    "end": "605839"
  },
  {
    "text": "on your mobile device and twitter is installed then this application will open",
    "start": "605839",
    "end": "611120"
  },
  {
    "text": "so how could this be abused for example uh the attacker might try to steal your telephone number for example by tracking",
    "start": "611120",
    "end": "618800"
  },
  {
    "text": "clicking the telephone scheme link if no consent is asked by either the",
    "start": "618800",
    "end": "625200"
  },
  {
    "text": "reading system and the target application a call would be initiated",
    "start": "625200",
    "end": "630720"
  },
  {
    "text": "if this call is directed at a telephone number under the attacker's control",
    "start": "630720",
    "end": "636079"
  },
  {
    "text": "he gets your telephone number or he could even direct it to a paying telephone",
    "start": "636079",
    "end": "641600"
  },
  {
    "text": "service and then lastly we were very interested in the web engines that were included in",
    "start": "641600",
    "end": "649279"
  },
  {
    "start": "643000",
    "end": "643000"
  },
  {
    "text": "these reading systems um we tried to infer this using a",
    "start": "649279",
    "end": "654640"
  },
  {
    "text": "fingerprinting script because the user agent string might be spoofed or might be suppressed",
    "start": "654640",
    "end": "661279"
  },
  {
    "text": "so we developed this script based on the mozilla developer network data set which",
    "start": "661279",
    "end": "667519"
  },
  {
    "text": "comprises of all super supported html tags and attributes as well as",
    "start": "667519",
    "end": "673519"
  },
  {
    "text": "javascript apis so each one we checked whether it was supported or not and based on this we",
    "start": "673519",
    "end": "680399"
  },
  {
    "text": "built a string of about 3 000 characters",
    "start": "680399",
    "end": "687040"
  },
  {
    "text": "based on the hamming distance between known web engines",
    "start": "687120",
    "end": "693120"
  },
  {
    "text": "and um the web engines that we wanted to detect so in the reading systems",
    "start": "693120",
    "end": "699360"
  },
  {
    "text": "we could infer which one was actually embedded in the application",
    "start": "699360",
    "end": "704560"
  },
  {
    "text": "and this is very interesting because some of these web engines might be outdated some even might have publicly",
    "start": "704560",
    "end": "711519"
  },
  {
    "text": "disclosed vulnerabilities online okay so um let's have a look at the",
    "start": "711519",
    "end": "719200"
  },
  {
    "start": "715000",
    "end": "715000"
  },
  {
    "text": "results so about 40 of the uh evaluated reading systems",
    "start": "719200",
    "end": "726480"
  },
  {
    "text": "support javascript which is not bad in itself but it's widens the attack",
    "start": "726480",
    "end": "731519"
  },
  {
    "text": "surface and about half supports remote communication",
    "start": "731519",
    "end": "737120"
  },
  {
    "text": "unfortunately only one application requires user consent which is apple blocks on ios",
    "start": "737120",
    "end": "745720"
  },
  {
    "text": "16 of the evaluated applications allows an ebook to infer the existence of local",
    "start": "745920",
    "end": "752000"
  },
  {
    "text": "files on the local file system and half of doi so 8 also allow the ebook to read the file",
    "start": "752000",
    "end": "758079"
  },
  {
    "text": "contents of these files very interesting side note is that none",
    "start": "758079",
    "end": "763120"
  },
  {
    "text": "of the ios applications were vulnerable because of the design",
    "start": "763120",
    "end": "768399"
  },
  {
    "text": "in the application framework and also as for the browser extensions",
    "start": "768399",
    "end": "773519"
  },
  {
    "text": "same origin policy prevented access to the local file system",
    "start": "773519",
    "end": "779440"
  },
  {
    "text": "okay so 25 of the applications that we evaluated supported uri handles and less than half",
    "start": "780480",
    "end": "788079"
  },
  {
    "text": "actually required consent to open an application and lastly fortunately only three web",
    "start": "788079",
    "end": "795120"
  },
  {
    "text": "engines were deemed insecure when we did the",
    "start": "795120",
    "end": "800560"
  },
  {
    "text": "web engine experiments also interesting so applications on smartphones can only use the web engine",
    "start": "800560",
    "end": "808399"
  },
  {
    "text": "framework that is embedded in the operating system so this is updated",
    "start": "808399",
    "end": "813760"
  },
  {
    "text": "with every system update so here none of them could be insecure",
    "start": "813760",
    "end": "819120"
  },
  {
    "text": "same with the browser extensions the browser is automatically automatically updated",
    "start": "819120",
    "end": "825199"
  },
  {
    "text": "and now tom will explain why we actually consider these results or these",
    "start": "825199",
    "end": "830399"
  },
  {
    "text": "vulnerabilities as a lower bound thank you for that",
    "start": "830399",
    "end": "837519"
  },
  {
    "text": "so the reason why these results are lower bound it's actually because the tests that we did",
    "start": "837519",
    "end": "843760"
  },
  {
    "text": "they were predefined so we could only discover what we were looking for",
    "start": "843760",
    "end": "848959"
  },
  {
    "text": "whereas if we were a real attacker we would be uh analyzing the application that we're",
    "start": "848959",
    "end": "855199"
  },
  {
    "text": "taking more closely and then try to device an attack that is more specific towards",
    "start": "855199",
    "end": "861680"
  },
  {
    "text": "the way that the application is built unfortunately it was not possible to do",
    "start": "861680",
    "end": "866880"
  },
  {
    "start": "865000",
    "end": "865000"
  },
  {
    "text": "this for all the 97 different applications that we tested",
    "start": "866880",
    "end": "871920"
  },
  {
    "text": "so that's why we mainly focused on three of them so we looked at apple books which comes",
    "start": "871920",
    "end": "879279"
  },
  {
    "text": "pre-installed on mac os then the most popular reading system that comes as a browser",
    "start": "879279",
    "end": "886000"
  },
  {
    "text": "extension namely epub reader which has between 600 and 700 000 users",
    "start": "886000",
    "end": "893120"
  },
  {
    "text": "and then lastly the amazon kindle which is the most popular physical eating",
    "start": "893120",
    "end": "898959"
  },
  {
    "text": "device so to start off with the apple books um",
    "start": "898959",
    "end": "905199"
  },
  {
    "start": "902000",
    "end": "902000"
  },
  {
    "text": "so this well this application allows rendering epubs",
    "start": "905199",
    "end": "911279"
  },
  {
    "text": "and um while we were testing whether we could access local files",
    "start": "911279",
    "end": "917040"
  },
  {
    "text": "but when we tried to access them via like the file",
    "start": "917040",
    "end": "922720"
  },
  {
    "text": "handle like the file scheme uh it was not possible because uh the same origin",
    "start": "922720",
    "end": "928639"
  },
  {
    "text": "policy was enforced however um when we try to um",
    "start": "928639",
    "end": "934880"
  },
  {
    "text": "like link or include a sim link to another book",
    "start": "934880",
    "end": "941279"
  },
  {
    "text": "like an image in another book we managed to actually bypass this same origin policy",
    "start": "941279",
    "end": "947519"
  },
  {
    "text": "so this means that we were able to detect all the different books that were",
    "start": "947519",
    "end": "953600"
  },
  {
    "text": "available on a user system or in the library of the user",
    "start": "953600",
    "end": "959279"
  },
  {
    "text": "and well another thing that happened while we were testing this is when we created",
    "start": "959279",
    "end": "965920"
  },
  {
    "text": "a sim link to the upper folder books um",
    "start": "965920",
    "end": "971040"
  },
  {
    "text": "then well all of a sudden we got this error so",
    "start": "971040",
    "end": "976639"
  },
  {
    "text": "something went wrong with the accessing the library and actually this error became quite persistent so",
    "start": "976639",
    "end": "984720"
  },
  {
    "text": "because of our testing by simply opening a single epub we",
    "start": "984720",
    "end": "990320"
  },
  {
    "text": "weren't able to open apple books anymore and this issue persisted uh until apple",
    "start": "990320",
    "end": "997440"
  },
  {
    "text": "uh followed up on our um on our uh well our uh",
    "start": "997440",
    "end": "1003519"
  },
  {
    "text": "report that there was something wrong that this denial of service was there um and we couldn't access the",
    "start": "1003519",
    "end": "1011360"
  },
  {
    "text": "apple books application anymore until they published and or pushed out some",
    "start": "1011360",
    "end": "1017040"
  },
  {
    "text": "updates of the operating system",
    "start": "1017040",
    "end": "1021920"
  },
  {
    "text": "then um the second application that we looked more closely at is the epub reader",
    "start": "1022639",
    "end": "1028480"
  },
  {
    "text": "which comes as the chrome extension um which has around 600 000 users",
    "start": "1028480",
    "end": "1034720"
  },
  {
    "text": "and on firefox it has around 136 000 users",
    "start": "1034720",
    "end": "1040640"
  },
  {
    "text": "um so let's first discuss how this uh well this extension is implemented so um",
    "start": "1040640",
    "end": "1049039"
  },
  {
    "start": "1041000",
    "end": "1041000"
  },
  {
    "text": "one thing that it does is that it will automatically detect when the user is trying to open a an epub file so it",
    "start": "1049039",
    "end": "1056480"
  },
  {
    "text": "looks for when there's a request for the epub extension or if the mime type of a request or the",
    "start": "1056480",
    "end": "1064400"
  },
  {
    "text": "response is set to the one of uh epubs",
    "start": "1064400",
    "end": "1070080"
  },
  {
    "text": "then it will like once it detects this epic file it will",
    "start": "1070080",
    "end": "1075360"
  },
  {
    "text": "unzip it and then parse all the html of the e-books and this html is then displayed",
    "start": "1075360",
    "end": "1081520"
  },
  {
    "text": "in the chrome extension or the mos extension origin and",
    "start": "1081520",
    "end": "1087200"
  },
  {
    "text": "because well it's these [Music] this html is still um in a different",
    "start": "1087200",
    "end": "1094640"
  },
  {
    "text": "origin than where the resources are uh it still needs to be able to show these",
    "start": "1094640",
    "end": "1099919"
  },
  {
    "text": "resources so all the images audio and video content um",
    "start": "1099919",
    "end": "1105360"
  },
  {
    "text": "within the epub so within this zip file they are made available via blobs",
    "start": "1105360",
    "end": "1112799"
  },
  {
    "text": "like with the function create object url this makes them available",
    "start": "1112799",
    "end": "1120240"
  },
  {
    "text": "within the chrome extension origin",
    "start": "1120240",
    "end": "1125280"
  },
  {
    "text": "and then unfortunately there's also a bit of security so there's actually a",
    "start": "1125280",
    "end": "1131760"
  },
  {
    "text": "relatively strict csb header as you can see here",
    "start": "1131760",
    "end": "1137280"
  },
  {
    "text": "and this csb header actually prevents us from running remote scripts",
    "start": "1137280",
    "end": "1143280"
  },
  {
    "text": "or including them in the epub",
    "start": "1143280",
    "end": "1149679"
  },
  {
    "text": "so one might think that exploitation is not possible",
    "start": "1149679",
    "end": "1154960"
  },
  {
    "text": "but fortunately we managed to find a way around it so because of this script source",
    "start": "1154960",
    "end": "1162080"
  },
  {
    "start": "1155000",
    "end": "1155000"
  },
  {
    "text": "directive of the csp the only way that we found to execute",
    "start": "1162080",
    "end": "1167440"
  },
  {
    "text": "our own javascript is by using the blob scheme",
    "start": "1167440",
    "end": "1173760"
  },
  {
    "text": "so if you remember from the previous slide so the images and audio and video they",
    "start": "1173760",
    "end": "1179840"
  },
  {
    "text": "are are served so they're made into blobs so then what we can do",
    "start": "1179840",
    "end": "1186720"
  },
  {
    "text": "to get our malicious javascripts to be uh well included",
    "start": "1186720",
    "end": "1192960"
  },
  {
    "text": "we can first include try to include it as an image and then the epub reader",
    "start": "1192960",
    "end": "1198640"
  },
  {
    "text": "will or the extension will convert it to a blob",
    "start": "1198640",
    "end": "1203760"
  },
  {
    "text": "but however that's still doesn't solve everything because these blobs have a",
    "start": "1203760",
    "end": "1208880"
  },
  {
    "text": "randomized url uh which cannot be guessed um and yeah so",
    "start": "1208880",
    "end": "1216000"
  },
  {
    "text": "we still need something extra and fortunately there was uh a nice post um",
    "start": "1216000",
    "end": "1224000"
  },
  {
    "text": "that showed that uh it's actually possible to uh leak certain attributes um from uh",
    "start": "1224240",
    "end": "1232159"
  },
  {
    "text": "from html elements by using css only and actually we managed to like",
    "start": "1232159",
    "end": "1240720"
  },
  {
    "text": "implement an attack based on that so putting it all together",
    "start": "1240720",
    "end": "1246840"
  },
  {
    "start": "1244000",
    "end": "1244000"
  },
  {
    "text": "and exploit looks a bit like this so first we create a malicious",
    "start": "1246840",
    "end": "1252799"
  },
  {
    "text": "epub or an epub with a malicious javascript file that is included as an image",
    "start": "1252799",
    "end": "1258640"
  },
  {
    "text": "and then we use well we also embed some css in order to steal the",
    "start": "1258640",
    "end": "1264880"
  },
  {
    "text": "blob url um and that looks a bit like the full ring so we use the",
    "start": "1264880",
    "end": "1271360"
  },
  {
    "text": "like the source source well star equals",
    "start": "1271360",
    "end": "1276960"
  },
  {
    "text": "to look for content that matches the",
    "start": "1276960",
    "end": "1282640"
  },
  {
    "text": "actual malicious javascript blob url um and well if you leak enough of this",
    "start": "1282640",
    "end": "1289679"
  },
  {
    "text": "or all of this [Music] data we can figure out what the actual",
    "start": "1289679",
    "end": "1297280"
  },
  {
    "text": "url or blob url is and then we can use that to dynamically generate an epub where the script is set",
    "start": "1297280",
    "end": "1305600"
  },
  {
    "text": "or the the source of the script is set to this leaked blob and that means that",
    "start": "1305600",
    "end": "1312159"
  },
  {
    "text": "if you keep the first step open with the original malicious epub",
    "start": "1312159",
    "end": "1317520"
  },
  {
    "text": "we can well we can access this blob in the second window as well",
    "start": "1317520",
    "end": "1323520"
  },
  {
    "text": "and that means that we managed to get the universal xss",
    "start": "1323520",
    "end": "1328720"
  },
  {
    "text": "because extension requested all url's permission um",
    "start": "1328720",
    "end": "1334559"
  },
  {
    "text": "as you can see here",
    "start": "1334559",
    "end": "1337520"
  },
  {
    "text": "and then the last one that we took a closer look at was amazon kindle um this kindle",
    "start": "1339760",
    "end": "1349760"
  },
  {
    "start": "1345000",
    "end": "1345000"
  },
  {
    "text": "also can be used to render epubs and in order to do that it will use a process called",
    "start": "1350000",
    "end": "1356640"
  },
  {
    "text": "web reader 2 to render the epub and esa w3 files",
    "start": "1356640",
    "end": "1363039"
  },
  {
    "text": "in order to render the actual content it uses webkits as its rendering engine",
    "start": "1363039",
    "end": "1370480"
  },
  {
    "text": "however as it's also stated in the documentation of the",
    "start": "1370480",
    "end": "1375840"
  },
  {
    "text": "amazon kindle uh the javascript is disabled and we looked at it and we saw that",
    "start": "1375840",
    "end": "1382480"
  },
  {
    "text": "the enable scripts property is set to false",
    "start": "1382480",
    "end": "1388480"
  },
  {
    "text": "and also it's not possible to do any sort of remote communication",
    "start": "1388480",
    "end": "1394159"
  },
  {
    "text": "because they um on the kindle implements some kind of hooks into our webcam function to make",
    "start": "1394159",
    "end": "1400720"
  },
  {
    "text": "sure that no roommate communication is possible from within the ebook",
    "start": "1400720",
    "end": "1406159"
  },
  {
    "text": "um another thing uh well that might not really seem relevant at the moment but",
    "start": "1406159",
    "end": "1412320"
  },
  {
    "text": "uh it's possible for the user to choose which font to use",
    "start": "1412320",
    "end": "1417520"
  },
  {
    "text": "and the last thing is that in order to communicate with other",
    "start": "1417520",
    "end": "1422720"
  },
  {
    "text": "processes that are running on the kindle this is typically done via the http api",
    "start": "1422720",
    "end": "1429200"
  },
  {
    "text": "so for instance to change the font it's possible to send a get request to the",
    "start": "1429200",
    "end": "1434480"
  },
  {
    "text": "following url with the fonts defined in the font",
    "start": "1434480",
    "end": "1439679"
  },
  {
    "text": "family parameter so in order to exploit the amazon kindle we",
    "start": "1439679",
    "end": "1447840"
  },
  {
    "start": "1443000",
    "end": "1443000"
  },
  {
    "text": "first had to well we wanted to first reverse engineer",
    "start": "1447840",
    "end": "1452880"
  },
  {
    "text": "the web reader 2 application so there we saw that well we found some",
    "start": "1452880",
    "end": "1460240"
  },
  {
    "text": "kind of javascript so we found that there's actually some javascript being executed",
    "start": "1460240",
    "end": "1465760"
  },
  {
    "text": "and um [Music] well it's",
    "start": "1465760",
    "end": "1471440"
  },
  {
    "text": "shown as this so uh part of the the thing is so known as this where uh the proscent s is um",
    "start": "1471440",
    "end": "1479600"
  },
  {
    "text": "replaced with the actual font that's uh being selected",
    "start": "1479600",
    "end": "1485240"
  },
  {
    "text": "and well in order for the javascript execution to be uh",
    "start": "1486240",
    "end": "1491360"
  },
  {
    "text": "done uh the enable scripts uh pros uh property is first set to true just",
    "start": "1491360",
    "end": "1497600"
  },
  {
    "text": "before the javascript execution and then after the scripts",
    "start": "1497600",
    "end": "1503120"
  },
  {
    "text": "finished execution it's set back to false",
    "start": "1503120",
    "end": "1509520"
  },
  {
    "text": "so as you can see well having a",
    "start": "1509520",
    "end": "1514559"
  },
  {
    "text": "or injecting a string there is a very trivial especially knowing that we can set",
    "start": "1514559",
    "end": "1520240"
  },
  {
    "text": "arbitrary fonts via single sp requests however",
    "start": "1520240",
    "end": "1525679"
  },
  {
    "text": "yeah these hp requests are still disabled so it was not possible to like just send",
    "start": "1525679",
    "end": "1531120"
  },
  {
    "text": "a an arbitrary hp request so we still needed another an additional trick for that",
    "start": "1531120",
    "end": "1540320"
  },
  {
    "text": "so what we found also based on our uh automated tests was that uh when",
    "start": "1541360",
    "end": "1548400"
  },
  {
    "text": "we loaded an image as an svg uh this actually bypasses",
    "start": "1548400",
    "end": "1553440"
  },
  {
    "text": "the hooked function so this allowed us to actually send",
    "start": "1553440",
    "end": "1558480"
  },
  {
    "text": "requests but we found that when we tried to use the local hosts",
    "start": "1558480",
    "end": "1563919"
  },
  {
    "text": "it wasn't possible to do this but when we like first uh send the request",
    "start": "1563919",
    "end": "1570799"
  },
  {
    "text": "to our own server and from there we re redirected to localhost that seemed to work out quite well",
    "start": "1570799",
    "end": "1578480"
  },
  {
    "text": "so when we put all of this together uh like um",
    "start": "1578480",
    "end": "1584320"
  },
  {
    "text": "we actually did the script injection and then we um",
    "start": "1584320",
    "end": "1590240"
  },
  {
    "text": "bypassed the uh the filter bypass uh we actually then still needed",
    "start": "1590240",
    "end": "1596880"
  },
  {
    "text": "something else to in order to read out content from the other servers that are",
    "start": "1596880",
    "end": "1602880"
  },
  {
    "text": "running on the kindle um so these well",
    "start": "1602880",
    "end": "1608640"
  },
  {
    "text": "there's still the same origin policy that we had to circumvent and for that",
    "start": "1608640",
    "end": "1615039"
  },
  {
    "text": "we took a look at the rendering engine that's running on the kindle which is",
    "start": "1615039",
    "end": "1620320"
  },
  {
    "text": "webkit version 1.4.2 which we found was released in july",
    "start": "1620320",
    "end": "1627080"
  },
  {
    "text": "2011 so that's over 10 years ago and of course at that time browsers were",
    "start": "1627080",
    "end": "1634080"
  },
  {
    "text": "a lot more vulnerable than these days so that means that there were",
    "start": "1634080",
    "end": "1639679"
  },
  {
    "text": "numerous vulnerabilities or well-known vulnerabilities including",
    "start": "1639679",
    "end": "1644799"
  },
  {
    "text": "this particular cve and well",
    "start": "1644799",
    "end": "1650159"
  },
  {
    "text": "fortunately for us there was even a like a proof of concept available with",
    "start": "1650159",
    "end": "1655760"
  },
  {
    "text": "an implementation uh so we just had to copy paste the code and make some adjustments and that",
    "start": "1655760",
    "end": "1662399"
  },
  {
    "text": "after that we managed to bypass the same origin policy using this universal cross-site scripting vulnerability",
    "start": "1662399",
    "end": "1669520"
  },
  {
    "text": "and yeah then finally we managed to combine all of this and",
    "start": "1669520",
    "end": "1674720"
  },
  {
    "text": "read out everything that's in the victims library and",
    "start": "1674720",
    "end": "1679840"
  },
  {
    "text": "also extract actual content from the kindle because there's another application called kfx viewer",
    "start": "1679840",
    "end": "1686640"
  },
  {
    "text": "which can render these documents as well and then the",
    "start": "1686640",
    "end": "1693039"
  },
  {
    "text": "render documents can be returned as an image",
    "start": "1693039",
    "end": "1697840"
  },
  {
    "start": "1697000",
    "end": "1697000"
  },
  {
    "text": "firstly amazon looked at our report and they actually",
    "start": "1698240",
    "end": "1704320"
  },
  {
    "text": "mitigates these well some of the vulnerabilities and so they",
    "start": "1704320",
    "end": "1709679"
  },
  {
    "text": "fixed the cve where well it was quite straightforward uh to do because there",
    "start": "1709679",
    "end": "1717120"
  },
  {
    "text": "was only two lines to be changed and they also added",
    "start": "1717120",
    "end": "1722480"
  },
  {
    "text": "some additional validation so they require now the verification token which is a specific uh",
    "start": "1722480",
    "end": "1729520"
  },
  {
    "text": "non-guessable header which is sort of a chrocite requestory defense",
    "start": "1729520",
    "end": "1735760"
  },
  {
    "text": "but still it's using webkit version 1.4.2",
    "start": "1735760",
    "end": "1741039"
  },
  {
    "text": "which as i said is 10 years old and riddled with known vulnerabilities",
    "start": "1741039",
    "end": "1749039"
  },
  {
    "text": "so yeah i'll leave this self-explanatory image just here",
    "start": "1749039",
    "end": "1755120"
  },
  {
    "text": "um and then moving on um now i believe john will be talking about",
    "start": "1755120",
    "end": "1763679"
  },
  {
    "text": "how these capabilities might be being abused in the world",
    "start": "1763679",
    "end": "1769360"
  },
  {
    "text": "okay thank you tom up to the second part of the presentation so",
    "start": "1769360",
    "end": "1774480"
  },
  {
    "text": "indeed let's have a look at which capabilities are being abused in the wilds",
    "start": "1774480",
    "end": "1781039"
  },
  {
    "start": "1780000",
    "end": "1780000"
  },
  {
    "text": "so for this um yeah actually users can obtain ebooks in two main ways so either",
    "start": "1781039",
    "end": "1787520"
  },
  {
    "text": "to these official ebook vendors like if you are shown here",
    "start": "1787520",
    "end": "1793279"
  },
  {
    "text": "or through less less legal channels like file sharing platforms uh so we took a look at both of them",
    "start": "1793279",
    "end": "1802080"
  },
  {
    "text": "as for the file sharing platforms we downloaded about 9000 epubs from the",
    "start": "1802080",
    "end": "1808240"
  },
  {
    "text": "buyer bay and for shared and then we checked the internals of these epip files",
    "start": "1808240",
    "end": "1814640"
  },
  {
    "text": "whether uh scripts did any funny things or whether there was were references to local files",
    "start": "1814640",
    "end": "1822080"
  },
  {
    "text": "but we did not find anything malicious even less than one percent actually",
    "start": "1822080",
    "end": "1827760"
  },
  {
    "text": "contain javascript which was all benign so here no indication of any malicious",
    "start": "1827760",
    "end": "1833200"
  },
  {
    "text": "intent as for the official ebook vendors um we obtained some free ebooks from the",
    "start": "1833200",
    "end": "1841039"
  },
  {
    "text": "most popular ebook epub vendors and also here we checked the internals",
    "start": "1841039",
    "end": "1846080"
  },
  {
    "text": "but again we did not find any intent for tracking but still we weren't satisfied with this",
    "start": "1846080",
    "end": "1853279"
  },
  {
    "text": "answer we actually wanted to know how feasible would it be to actually distribute a malicious ebook",
    "start": "1853279",
    "end": "1860559"
  },
  {
    "start": "1854000",
    "end": "1854000"
  },
  {
    "text": "through these channels well the most simple way is to actually distribute it through these file sharing platforms um",
    "start": "1860559",
    "end": "1867360"
  },
  {
    "text": "anyone can do that it's just a matter of uploading your uh file",
    "start": "1867360",
    "end": "1872720"
  },
  {
    "text": "but then we wondered would it be also possible to actually publish this malicious ebook through these",
    "start": "1872720",
    "end": "1878880"
  },
  {
    "text": "official vendors of course we're not a publishing company but nowadays there's",
    "start": "1878880",
    "end": "1883919"
  },
  {
    "text": "this service the self-publishing service where virtually anyone can write a book",
    "start": "1883919",
    "end": "1889600"
  },
  {
    "text": "and then publish it through one of these vendors so then the question essentially becomes",
    "start": "1889600",
    "end": "1896320"
  },
  {
    "text": "are self-published ebooks sufficiently sanitized because when somebody submits such a",
    "start": "1896320",
    "end": "1903519"
  },
  {
    "text": "manuscript to be published we hope that it is sanitized before it is",
    "start": "1903519",
    "end": "1909600"
  },
  {
    "text": "published um to be bought and downloaded by actual users so we test this by writing our own book",
    "start": "1909600",
    "end": "1916720"
  },
  {
    "text": "and including some scripts of course these scripts weren't weren't actually malicious they",
    "start": "1916720",
    "end": "1923840"
  },
  {
    "text": "weren't trying to um seal information but they should be sanitized out of the book",
    "start": "1923840",
    "end": "1930080"
  },
  {
    "text": "afterwards when our book was published we bought it back and we compared the internals with the submitted",
    "start": "1930080",
    "end": "1936000"
  },
  {
    "text": "internals of the manuscript so we did this for the six",
    "start": "1936000",
    "end": "1942799"
  },
  {
    "text": "for these six official ebook vendors and four of those",
    "start": "1942799",
    "end": "1948480"
  },
  {
    "text": "uh did not sanitize the e-book sufficiently or some even did not",
    "start": "1948480",
    "end": "1953760"
  },
  {
    "text": "sanitize at all and this accounts for 94 of the self-publishing ebook market",
    "start": "1953760",
    "end": "1960720"
  },
  {
    "text": "which is quite a lot of course we reported this to all vendors",
    "start": "1960720",
    "end": "1968398"
  },
  {
    "start": "1968000",
    "end": "1968000"
  },
  {
    "text": "okay we've come to the end of our presentations i just want to give a few key takeaways",
    "start": "1968480",
    "end": "1974000"
  },
  {
    "text": "so first uh almost none of the javascript supporting reading systems adhere to the security recommendations",
    "start": "1974000",
    "end": "1981279"
  },
  {
    "text": "uh for example a significant part does not sufficiently isolate the local file",
    "start": "1981279",
    "end": "1986480"
  },
  {
    "text": "system which leads might leak to file content leaking of files residing on the local file system",
    "start": "1986480",
    "end": "1994720"
  },
  {
    "text": "we contacted in total 37 reading system developers as part of our responsible",
    "start": "1994720",
    "end": "2000480"
  },
  {
    "text": "disclosure we also have some concerns about the epub 3.2 specification we think that the",
    "start": "2000480",
    "end": "2008240"
  },
  {
    "text": "recommendations should be more strict these recommendations in context of security and privacy",
    "start": "2008240",
    "end": "2014559"
  },
  {
    "text": "and also practical guidelines for developers for example on how to",
    "start": "2014559",
    "end": "2019679"
  },
  {
    "text": "correctly configure an embedded web engine would would help immensely to",
    "start": "2019679",
    "end": "2026480"
  },
  {
    "text": "have more secure epa breeding systems and then lastly",
    "start": "2026480",
    "end": "2031519"
  },
  {
    "text": "we also think that javascript should not be executable in",
    "start": "2031519",
    "end": "2037679"
  },
  {
    "text": "reading systems because also in our real world study we did not encounter a",
    "start": "2037679",
    "end": "2044480"
  },
  {
    "text": "lot of epubs that actually use javascript and also loca local and remote resources",
    "start": "2044480",
    "end": "2051919"
  },
  {
    "text": "were not that apparent",
    "start": "2051919",
    "end": "2057040"
  },
  {
    "text": "we also did not detect any abuse in the wild as of yet although we have shown that is it is",
    "start": "2057040",
    "end": "2063280"
  },
  {
    "text": "very much possible even through these legal channels and lastly again",
    "start": "2063280",
    "end": "2068480"
  },
  {
    "text": "um our evaluation testbed is open source and we hope that it's uh can assist even",
    "start": "2068480",
    "end": "2074878"
  },
  {
    "text": "breeding system developers and to develop them more secure and privacy oriented",
    "start": "2074879",
    "end": "2082079"
  },
  {
    "text": "e-book reading systems and we also hope that users can use it to have more transparency in the context of the",
    "start": "2082079",
    "end": "2089040"
  },
  {
    "text": "security of their own application that they use thanks again for attending and",
    "start": "2089040",
    "end": "2096240"
  },
  {
    "text": "we are happy to answer any questions that you might have [Music]",
    "start": "2096240",
    "end": "2110500"
  },
  {
    "text": "you",
    "start": "2111040",
    "end": "2113119"
  }
]