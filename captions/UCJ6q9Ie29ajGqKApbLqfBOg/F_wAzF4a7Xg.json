[
  {
    "start": "0",
    "end": "51000"
  },
  {
    "text": "uh couple of words before starting with",
    "start": "2360",
    "end": "4240"
  },
  {
    "text": "the talk a bit of introduction about",
    "start": "4240",
    "end": "6120"
  },
  {
    "text": "ourselves so my name is Marcus quina I",
    "start": "6120",
    "end": "9040"
  },
  {
    "text": "come from Venice Italy the actual Venice",
    "start": "9040",
    "end": "12000"
  },
  {
    "text": "island uh I got my PhD there and then I",
    "start": "12000",
    "end": "14799"
  },
  {
    "text": "moved to Vienna in Austria where I'm",
    "start": "14799",
    "end": "16520"
  },
  {
    "text": "working at a tvin as a senior scientist",
    "start": "16520",
    "end": "19640"
  },
  {
    "text": "I'm a CF player I started many years ago",
    "start": "19640",
    "end": "22039"
  },
  {
    "text": "in 2009 I'm the co-founder of macaroni",
    "start": "22039",
    "end": "25359"
  },
  {
    "text": "which is the best possible name for an",
    "start": "25359",
    "end": "28000"
  },
  {
    "text": "Italian hacking team to play AF CF in a",
    "start": "28000",
    "end": "31720"
  },
  {
    "text": "couple of days after presenting this",
    "start": "31720",
    "end": "33280"
  },
  {
    "text": "work also at usenix and coming back to",
    "start": "33280",
    "end": "35200"
  },
  {
    "text": "Vegas I S at the Venetian just like to",
    "start": "35200",
    "end": "37760"
  },
  {
    "text": "fill more at home um I am most involved",
    "start": "37760",
    "end": "41120"
  },
  {
    "text": "with it security education activities in",
    "start": "41120",
    "end": "43600"
  },
  {
    "text": "Europe I collaborate with the European",
    "start": "43600",
    "end": "46360"
  },
  {
    "text": "Union Agency for cyber security and with",
    "start": "46360",
    "end": "48920"
  },
  {
    "text": "other National",
    "start": "48920",
    "end": "50879"
  },
  {
    "text": "initiatives hi hello everyone my name is",
    "start": "50879",
    "end": "53359"
  },
  {
    "start": "51000",
    "end": "106000"
  },
  {
    "text": "Pedro I'm born and raised in Lisbon I",
    "start": "53359",
    "end": "56160"
  },
  {
    "text": "love my hometown I stick around I'm an",
    "start": "56160",
    "end": "58120"
  },
  {
    "text": "associate professor there at Technic the",
    "start": "58120",
    "end": "60239"
  },
  {
    "text": "engineering school of the University of",
    "start": "60239",
    "end": "62039"
  },
  {
    "text": "Lisbon um I started in programming",
    "start": "62039",
    "end": "64239"
  },
  {
    "text": "languages and web security and I'm",
    "start": "64239",
    "end": "66280"
  },
  {
    "text": "original a mathematician and by accident",
    "start": "66280",
    "end": "69240"
  },
  {
    "text": "I uh my path crossed with Marcos in 20",
    "start": "69240",
    "end": "71759"
  },
  {
    "text": "with Marco in 2013 where I played my",
    "start": "71759",
    "end": "73960"
  },
  {
    "text": "first CTF and since then I just became",
    "start": "73960",
    "end": "76720"
  },
  {
    "text": "um addicted to that so basically I went",
    "start": "76720",
    "end": "78799"
  },
  {
    "text": "back home I founded the team at our",
    "start": "78799",
    "end": "80920"
  },
  {
    "text": "University and then I also became",
    "start": "80920",
    "end": "82960"
  },
  {
    "text": "engaged with many other um activities",
    "start": "82960",
    "end": "85720"
  },
  {
    "text": "such as the Portuguese team for the",
    "start": "85720",
    "end": "87799"
  },
  {
    "text": "Cyber European cyber security challenge",
    "start": "87799",
    "end": "89960"
  },
  {
    "text": "and I'm also the proud coach of the team",
    "start": "89960",
    "end": "92920"
  },
  {
    "text": "Europe that participated in the European",
    "start": "92920",
    "end": "95000"
  },
  {
    "text": "cyber security Challenge and won last",
    "start": "95000",
    "end": "97240"
  },
  {
    "text": "week for the second time in a",
    "start": "97240",
    "end": "100840"
  },
  {
    "text": "row all right so in case it is not clear",
    "start": "102320",
    "end": "105360"
  },
  {
    "text": "from the title of this talk this talk is",
    "start": "105360",
    "end": "107399"
  },
  {
    "start": "106000",
    "end": "266000"
  },
  {
    "text": "about cookies um we all like cookies but",
    "start": "107399",
    "end": "110119"
  },
  {
    "text": "cookies have a problem uh which is well",
    "start": "110119",
    "end": "112000"
  },
  {
    "text": "known cookies have weak integrity and",
    "start": "112000",
    "end": "114920"
  },
  {
    "text": "typical attacks that you can mount",
    "start": "114920",
    "end": "116399"
  },
  {
    "text": "because of weak Integrity involve",
    "start": "116399",
    "end": "118240"
  },
  {
    "text": "session fixation and looking request for",
    "start": "118240",
    "end": "121039"
  },
  {
    "text": "abilities then over the years it was a",
    "start": "121039",
    "end": "124119"
  },
  {
    "text": "large body of work on on this field",
    "start": "124119",
    "end": "127119"
  },
  {
    "text": "including Advanced csrf attacks uh",
    "start": "127119",
    "end": "130360"
  },
  {
    "text": "discrepancies that are exploitable",
    "start": "130360",
    "end": "132239"
  },
  {
    "text": "between clients and servers and",
    "start": "132239",
    "end": "134480"
  },
  {
    "text": "application specific",
    "start": "134480",
    "end": "136239"
  },
  {
    "text": "vulnerabilities uh all these problems",
    "start": "136239",
    "end": "138120"
  },
  {
    "text": "anyway are deep rooted into the standard",
    "start": "138120",
    "end": "140599"
  },
  {
    "text": "itself so again known problems that are",
    "start": "140599",
    "end": "143200"
  },
  {
    "text": "formally encoded in the standard this is",
    "start": "143200",
    "end": "145000"
  },
  {
    "text": "a section from the RFC 6265 B describing",
    "start": "145000",
    "end": "149239"
  },
  {
    "text": "the main issue",
    "start": "149239",
    "end": "150400"
  },
  {
    "text": "that now Pedro will recap so that we are",
    "start": "150400",
    "end": "152319"
  },
  {
    "text": "sure that all of us are on the same page",
    "start": "152319",
    "end": "155640"
  },
  {
    "text": "okay so one known Integrity um uh",
    "start": "155640",
    "end": "158480"
  },
  {
    "text": "problem uh with cookies is that um",
    "start": "158480",
    "end": "161159"
  },
  {
    "text": "cookies have an attribute that is the",
    "start": "161159",
    "end": "162920"
  },
  {
    "text": "domain and so uh if an attacker controls",
    "start": "162920",
    "end": "165879"
  },
  {
    "text": "a subdomain the attacker can uh toss",
    "start": "165879",
    "end": "168760"
  },
  {
    "text": "cookies with the domain value of the",
    "start": "168760",
    "end": "170959"
  },
  {
    "text": "original domain in this case example.com",
    "start": "170959",
    "end": "172879"
  },
  {
    "text": "and these cookies will be attached to",
    "start": "172879",
    "end": "174959"
  },
  {
    "text": "any request that is done to example.com",
    "start": "174959",
    "end": "177000"
  },
  {
    "text": "and to any of the subdomains there's",
    "start": "177000",
    "end": "180040"
  },
  {
    "text": "also another attribute that is called",
    "start": "180040",
    "end": "181599"
  },
  {
    "text": "the path and the path can be used by the",
    "start": "181599",
    "end": "183680"
  },
  {
    "text": "attacker to prioritize the uh cookies",
    "start": "183680",
    "end": "186799"
  },
  {
    "text": "and the way that they are send to the",
    "start": "186799",
    "end": "189040"
  },
  {
    "text": "servers an interesting uh attribute at",
    "start": "189040",
    "end": "192080"
  },
  {
    "text": "the same site uh it's uh it helps in uh",
    "start": "192080",
    "end": "196319"
  },
  {
    "text": "the attacks that we are going to see but",
    "start": "196319",
    "end": "197959"
  },
  {
    "text": "in the case in our particular contacts",
    "start": "197959",
    "end": "199840"
  },
  {
    "text": "we are attacking from same site uh uh we",
    "start": "199840",
    "end": "202680"
  },
  {
    "text": "are exploiting same site attackers and",
    "start": "202680",
    "end": "205200"
  },
  {
    "text": "so that will not be useful for us um",
    "start": "205200",
    "end": "208560"
  },
  {
    "text": "bear in mind that although the",
    "start": "208560",
    "end": "210239"
  },
  {
    "text": "the cookies have all these attributes",
    "start": "210239",
    "end": "211920"
  },
  {
    "text": "these attributes are not sent to the",
    "start": "211920",
    "end": "213720"
  },
  {
    "text": "server when um are not sent to the",
    "start": "213720",
    "end": "216959"
  },
  {
    "text": "server and so the server cannot really",
    "start": "216959",
    "end": "218599"
  },
  {
    "text": "tell apart which cookies are um set by",
    "start": "218599",
    "end": "221959"
  },
  {
    "text": "which entities another known Integrity",
    "start": "221959",
    "end": "224720"
  },
  {
    "text": "issue is Cookie eviction so basically",
    "start": "224720",
    "end": "227400"
  },
  {
    "text": "implementations of cookie jars have a",
    "start": "227400",
    "end": "229120"
  },
  {
    "text": "limit and if the attacker um if the",
    "start": "229120",
    "end": "233000"
  },
  {
    "text": "attacker sets too many cookies it will",
    "start": "233000",
    "end": "235760"
  },
  {
    "text": "uh eventually evict the oldest ones uh",
    "start": "235760",
    "end": "238720"
  },
  {
    "text": "so one attack that you can do that the",
    "start": "238720",
    "end": "241079"
  },
  {
    "text": "attacker can do is that the attacker can",
    "start": "241079",
    "end": "242680"
  },
  {
    "text": "just um set let's say 200 cookies uh",
    "start": "242680",
    "end": "247040"
  },
  {
    "text": "evict the old ones from the cookie jar",
    "start": "247040",
    "end": "248920"
  },
  {
    "text": "and this can even happen for cookies",
    "start": "248920",
    "end": "250720"
  },
  {
    "text": "that are HTTP only so HTTP only provides",
    "start": "250720",
    "end": "254239"
  },
  {
    "text": "um confidentiality gr proide scripting",
    "start": "254239",
    "end": "256479"
  },
  {
    "text": "but does not provide any",
    "start": "256479",
    "end": "259320"
  },
  {
    "text": "Integrity yeah uh so that we are on the",
    "start": "259320",
    "end": "262280"
  },
  {
    "text": "same page again talking about threat",
    "start": "262280",
    "end": "264080"
  },
  {
    "text": "models this text that we're going to",
    "start": "264080",
    "end": "266240"
  },
  {
    "start": "266000",
    "end": "352000"
  },
  {
    "text": "Showcase today can enable by are enabled",
    "start": "266240",
    "end": "269199"
  },
  {
    "text": "by two possible threat models the first",
    "start": "269199",
    "end": "271039"
  },
  {
    "text": "one is the same set attacker typically",
    "start": "271039",
    "end": "273240"
  },
  {
    "text": "enabled when you control a subdomain",
    "start": "273240",
    "end": "275600"
  },
  {
    "text": "using like subdomain takeover exploit uh",
    "start": "275600",
    "end": "278800"
  },
  {
    "text": "we did also a more formal research in",
    "start": "278800",
    "end": "281840"
  },
  {
    "text": "2021 presented at usenix where we try",
    "start": "281840",
    "end": "285080"
  },
  {
    "text": "like to measure the import of this",
    "start": "285080",
    "end": "286919"
  },
  {
    "text": "attack and indeed we found more than",
    "start": "286919",
    "end": "290039"
  },
  {
    "text": "1,500 vulnerable subdomains across",
    "start": "290039",
    "end": "293080"
  },
  {
    "text": "prominent sites like CNN F secure",
    "start": "293080",
    "end": "295919"
  },
  {
    "text": "cisco.com lenovo.com and so on and so",
    "start": "295919",
    "end": "298960"
  },
  {
    "text": "forth we also studed those situations",
    "start": "298960",
    "end": "302160"
  },
  {
    "text": "that promote automatically an attacker",
    "start": "302160",
    "end": "304199"
  },
  {
    "text": "in a same side position without doing",
    "start": "304199",
    "end": "306199"
  },
  {
    "text": "actually anything and these are all the",
    "start": "306199",
    "end": "308320"
  },
  {
    "text": "problems that are due to the limitations",
    "start": "308320",
    "end": "311240"
  },
  {
    "text": "of the public suffix list we don't have",
    "start": "311240",
    "end": "312919"
  },
  {
    "text": "time like to dig into that today but you",
    "start": "312919",
    "end": "315120"
  },
  {
    "text": "can imagine like corporate networks",
    "start": "315120",
    "end": "317360"
  },
  {
    "text": "Dynamic DNS providers and roaming",
    "start": "317360",
    "end": "320080"
  },
  {
    "text": "services for what concerns the network",
    "start": "320080",
    "end": "322960"
  },
  {
    "text": "attacker uh there is a a good a good",
    "start": "322960",
    "end": "325520"
  },
  {
    "text": "protection out there it's the hsts",
    "start": "325520",
    "end": "327720"
  },
  {
    "text": "header that forces the browser to have",
    "start": "327720",
    "end": "330520"
  },
  {
    "text": "connections only over https on a on a",
    "start": "330520",
    "end": "334000"
  },
  {
    "text": "website including like all possible",
    "start": "334000",
    "end": "336039"
  },
  {
    "text": "subdomains of that host uh but",
    "start": "336039",
    "end": "338360"
  },
  {
    "text": "unfortunately deployment of this",
    "start": "338360",
    "end": "340280"
  },
  {
    "text": "protection is still partial 90% of the",
    "start": "340280",
    "end": "343280"
  },
  {
    "text": "websites are still vulnerable because",
    "start": "343280",
    "end": "346199"
  },
  {
    "text": "either missing hsts header or missing",
    "start": "346199",
    "end": "349120"
  },
  {
    "text": "include subdomain",
    "start": "349120",
    "end": "352080"
  },
  {
    "start": "352000",
    "end": "782000"
  },
  {
    "text": "directive okay so we'll start with um",
    "start": "352080",
    "end": "354919"
  },
  {
    "text": "cross origin request forgy so we call it",
    "start": "354919",
    "end": "357840"
  },
  {
    "text": "cross origin so we have control",
    "start": "357840",
    "end": "359479"
  },
  {
    "text": "subdomain so it's not cross site for us",
    "start": "359479",
    "end": "361680"
  },
  {
    "text": "the attacker controls a subdomain and so",
    "start": "361680",
    "end": "364759"
  },
  {
    "text": "in this case the same site cookie",
    "start": "364759",
    "end": "366759"
  },
  {
    "text": "attribute does not help us so we have to",
    "start": "366759",
    "end": "368880"
  },
  {
    "text": "realize in the existing tokenizer",
    "start": "368880",
    "end": "370759"
  },
  {
    "text": "patterns for CSR csrf protection and one",
    "start": "370759",
    "end": "373880"
  },
  {
    "text": "that exists is the double submit pattern",
    "start": "373880",
    "end": "376039"
  },
  {
    "text": "so the double submit pattern basically",
    "start": "376039",
    "end": "378319"
  },
  {
    "text": "consists in whenever to perform a a",
    "start": "378319",
    "end": "380520"
  },
  {
    "text": "protected action the Bob has to submit a",
    "start": "380520",
    "end": "383759"
  },
  {
    "text": "random token and the cookie that matches",
    "start": "383759",
    "end": "386039"
  },
  {
    "text": "the token in order for the uh action to",
    "start": "386039",
    "end": "388840"
  },
  {
    "text": "go through",
    "start": "388840",
    "end": "389919"
  },
  {
    "text": "um the wrong assumption here that's why",
    "start": "389919",
    "end": "392160"
  },
  {
    "text": "it doesn't work in the case of samite",
    "start": "392160",
    "end": "394199"
  },
  {
    "text": "attacker is that the usually the",
    "start": "394199",
    "end": "396440"
  },
  {
    "text": "attacker can only uh manipulate the",
    "start": "396440",
    "end": "398240"
  },
  {
    "text": "token but in this case he can also",
    "start": "398240",
    "end": "399919"
  },
  {
    "text": "manipulate the cookie so it's trivial",
    "start": "399919",
    "end": "402199"
  },
  {
    "text": "for the for the attacker to toss a coin",
    "start": "402199",
    "end": "404880"
  },
  {
    "text": "uh to toss um cookie with the value that",
    "start": "404880",
    "end": "408479"
  },
  {
    "text": "the attacker will later use to perform",
    "start": "408479",
    "end": "410520"
  },
  {
    "text": "the csrf uh protected action and so the",
    "start": "410520",
    "end": "413960"
  },
  {
    "text": "obviously the uh it will be accepted",
    "start": "413960",
    "end": "416639"
  },
  {
    "text": "okay so this is a know problem uh how do",
    "start": "416639",
    "end": "419039"
  },
  {
    "text": "you prot protect against a same site",
    "start": "419039",
    "end": "420960"
  },
  {
    "text": "attacker against this cor of",
    "start": "420960",
    "end": "423039"
  },
  {
    "text": "vulnerabilities that you just introduced",
    "start": "423039",
    "end": "425360"
  },
  {
    "text": "okay so for same site uh attackers we",
    "start": "425360",
    "end": "428120"
  },
  {
    "text": "have to use the synchronizer token",
    "start": "428120",
    "end": "429800"
  },
  {
    "text": "pattern and the idea behind the",
    "start": "429800",
    "end": "431280"
  },
  {
    "text": "synchronizer token pattern is that each",
    "start": "431280",
    "end": "433599"
  },
  {
    "text": "session either stored on the server or",
    "start": "433599",
    "end": "435280"
  },
  {
    "text": "on the client it doesn't matter this",
    "start": "435280",
    "end": "437360"
  },
  {
    "text": "session is assigned a random secret and",
    "start": "437360",
    "end": "439639"
  },
  {
    "text": "tokens are random tokens derived from",
    "start": "439639",
    "end": "442160"
  },
  {
    "text": "that secret the validation is done upon",
    "start": "442160",
    "end": "444759"
  },
  {
    "text": "receiving a token if the token that was",
    "start": "444759",
    "end": "447400"
  },
  {
    "text": "received is compatible with the with the",
    "start": "447400",
    "end": "450560"
  },
  {
    "text": "secret that is in the session and if",
    "start": "450560",
    "end": "452400"
  },
  {
    "text": "that happens then it is accepted but can",
    "start": "452400",
    "end": "456080"
  },
  {
    "text": "the attacker still overwrite of the",
    "start": "456080",
    "end": "457680"
  },
  {
    "text": "session cookie containing the secret",
    "start": "457680",
    "end": "459800"
  },
  {
    "text": "yeah good question the attacker can",
    "start": "459800",
    "end": "461199"
  },
  {
    "text": "still overwrite the session cookie but",
    "start": "461199",
    "end": "463080"
  },
  {
    "text": "by overwriting the session cookie it",
    "start": "463080",
    "end": "464800"
  },
  {
    "text": "also the authenticates the user so yeah",
    "start": "464800",
    "end": "467280"
  },
  {
    "text": "that's not very useful for to perform a",
    "start": "467280",
    "end": "469479"
  },
  {
    "text": "COR attack so um we start studying this",
    "start": "469479",
    "end": "473680"
  },
  {
    "text": "uh Marco in fact stumbled upon this uh",
    "start": "473680",
    "end": "476560"
  },
  {
    "text": "weird Behavior while he was developing a",
    "start": "476560",
    "end": "478840"
  },
  {
    "text": "CF challenge H and basically uh we",
    "start": "478840",
    "end": "482120"
  },
  {
    "text": "started with flask flask is a",
    "start": "482120",
    "end": "483879"
  },
  {
    "text": "development a micro development",
    "start": "483879",
    "end": "485280"
  },
  {
    "text": "framework that does not provide any user",
    "start": "485280",
    "end": "487919"
  },
  {
    "text": "management nor csrf protection for that",
    "start": "487919",
    "end": "490360"
  },
  {
    "text": "you have to include external libraries",
    "start": "490360",
    "end": "492319"
  },
  {
    "text": "in this case flask login and flask WTF",
    "start": "492319",
    "end": "495520"
  },
  {
    "text": "and flask stores the session on the",
    "start": "495520",
    "end": "498639"
  },
  {
    "text": "client and the the tokens are generated",
    "start": "498639",
    "end": "502720"
  },
  {
    "text": "as an HM of the secret that is in the",
    "start": "502720",
    "end": "504960"
  },
  {
    "text": "session plus the expiration time you can",
    "start": "504960",
    "end": "507400"
  },
  {
    "text": "see here that basically upon in the Bob",
    "start": "507400",
    "end": "510720"
  },
  {
    "text": "gets a token t0o uh and then when Bob",
    "start": "510720",
    "end": "513719"
  },
  {
    "text": "logs in Bob sends the username the",
    "start": "513719",
    "end": "516080"
  },
  {
    "text": "password and the token and gets a new um",
    "start": "516080",
    "end": "519240"
  },
  {
    "text": "token T1 that can then be used to",
    "start": "519240",
    "end": "521800"
  },
  {
    "text": "perform the protected action this is",
    "start": "521800",
    "end": "524399"
  },
  {
    "text": "fine right because if the attacker",
    "start": "524399",
    "end": "526120"
  },
  {
    "text": "overwrites the session cookie then uh I",
    "start": "526120",
    "end": "529040"
  },
  {
    "text": "mean like there's no way to to have the",
    "start": "529040",
    "end": "531160"
  },
  {
    "text": "user still authenticated so that's good",
    "start": "531160",
    "end": "533760"
  },
  {
    "text": "yeah well it is but if you look",
    "start": "533760",
    "end": "535440"
  },
  {
    "text": "carefully you notice that the secret",
    "start": "535440",
    "end": "538240"
  },
  {
    "text": "that the used post login is exactly the",
    "start": "538240",
    "end": "540720"
  },
  {
    "text": "same secret that is used pre- login",
    "start": "540720",
    "end": "542680"
  },
  {
    "text": "which means that the tokens that were",
    "start": "542680",
    "end": "544160"
  },
  {
    "text": "generated up front before the login they",
    "start": "544160",
    "end": "546519"
  },
  {
    "text": "are still valid uh after the login so",
    "start": "546519",
    "end": "549200"
  },
  {
    "text": "what the attacker can do is that the",
    "start": "549200",
    "end": "551240"
  },
  {
    "text": "attacker can just ask access the login",
    "start": "551240",
    "end": "554160"
  },
  {
    "text": "form get a token t0 um then toss the",
    "start": "554160",
    "end": "557839"
  },
  {
    "text": "session that the adversary obtain",
    "start": "557839",
    "end": "560160"
  },
  {
    "text": "towards Bob's uh browser and when Bob",
    "start": "560160",
    "end": "562880"
  },
  {
    "text": "tries to log in what we are doing here",
    "start": "562880",
    "end": "565560"
  },
  {
    "text": "is the equivalent to an unauthenticated",
    "start": "565560",
    "end": "567800"
  },
  {
    "text": "session fixation so when Bob logs in Bob",
    "start": "567800",
    "end": "571360"
  },
  {
    "text": "gets a new session this blue session but",
    "start": "571360",
    "end": "574040"
  },
  {
    "text": "the blue session still shares the same",
    "start": "574040",
    "end": "576040"
  },
  {
    "text": "secret as the pre-login session which",
    "start": "576040",
    "end": "578720"
  },
  {
    "text": "means that the attacker has a token t0",
    "start": "578720",
    "end": "581040"
  },
  {
    "text": "that first one that is still valid in",
    "start": "581040",
    "end": "583040"
  },
  {
    "text": "the blue session so the attacker can",
    "start": "583040",
    "end": "584880"
  },
  {
    "text": "just send the this token t0 and perform",
    "start": "584880",
    "end": "588440"
  },
  {
    "text": "the protected action okay so basically",
    "start": "588440",
    "end": "592680"
  },
  {
    "text": "uh we found this corve token fixation",
    "start": "592680",
    "end": "594560"
  },
  {
    "text": "attacks that bypass the synchronizer",
    "start": "594560",
    "end": "596320"
  },
  {
    "text": "token pattern uh and the root cause is",
    "start": "596320",
    "end": "599320"
  },
  {
    "text": "that the secret that is used to generate",
    "start": "599320",
    "end": "601200"
  },
  {
    "text": "tokens after login is the exact same one",
    "start": "601200",
    "end": "603519"
  },
  {
    "text": "that is generate that is used to",
    "start": "603519",
    "end": "605240"
  },
  {
    "text": "generate the random tokens prior to the",
    "start": "605240",
    "end": "607519"
  },
  {
    "text": "login um we tested many Frameworks some",
    "start": "607519",
    "end": "610760"
  },
  {
    "text": "store uh session client side some store",
    "start": "610760",
    "end": "613959"
  },
  {
    "text": "server side the the the the problem is",
    "start": "613959",
    "end": "617440"
  },
  {
    "text": "uh exactly the",
    "start": "617440",
    "end": "619399"
  },
  {
    "text": "same so you may ask but what happens if",
    "start": "619399",
    "end": "622040"
  },
  {
    "text": "the user is already logged in well if",
    "start": "622040",
    "end": "624079"
  },
  {
    "text": "the user is already logged in we just go",
    "start": "624079",
    "end": "626760"
  },
  {
    "text": "back use the eviction technique de",
    "start": "626760",
    "end": "629600"
  },
  {
    "text": "authenticate the user and then start the",
    "start": "629600",
    "end": "631839"
  },
  {
    "text": "attack as we just",
    "start": "631839",
    "end": "634160"
  },
  {
    "text": "saw so while doing this uh we started",
    "start": "634160",
    "end": "638040"
  },
  {
    "text": "studying many Frameworks and one of the",
    "start": "638040",
    "end": "640160"
  },
  {
    "text": "Frameworks we studied was this code",
    "start": "640160",
    "end": "641720"
  },
  {
    "text": "igniter so basically on the right hand",
    "start": "641720",
    "end": "643480"
  },
  {
    "text": "side you have what is the session object",
    "start": "643480",
    "end": "645120"
  },
  {
    "text": "on the server and what we highlighted is",
    "start": "645120",
    "end": "647160"
  },
  {
    "text": "the secret so before Ling we have the",
    "start": "647160",
    "end": "649800"
  },
  {
    "text": "session zero and the token t0 and the",
    "start": "649800",
    "end": "652800"
  },
  {
    "text": "the secret these days 47 whatever and",
    "start": "652800",
    "end": "655959"
  },
  {
    "text": "basically when Bob logs in uh he gets",
    "start": "655959",
    "end": "659040"
  },
  {
    "text": "it's a new session uh S1 and you see",
    "start": "659040",
    "end": "661959"
  },
  {
    "text": "that the secret now change so I mean",
    "start": "661959",
    "end": "664600"
  },
  {
    "text": "this is perfect right because the two",
    "start": "664600",
    "end": "666480"
  },
  {
    "text": "secrets are different so there's no way",
    "start": "666480",
    "end": "668279"
  },
  {
    "text": "to get like a previously issued token",
    "start": "668279",
    "end": "670839"
  },
  {
    "text": "and then use it like after",
    "start": "670839",
    "end": "672200"
  },
  {
    "text": "authentication yeah it was but it turns",
    "start": "672200",
    "end": "676200"
  },
  {
    "text": "out that the session that existed prior",
    "start": "676200",
    "end": "680320"
  },
  {
    "text": "to login it was also updated so although",
    "start": "680320",
    "end": "683399"
  },
  {
    "text": "the secret is new session zero the one",
    "start": "683399",
    "end": "686120"
  },
  {
    "text": "that the adversary has access to that",
    "start": "686120",
    "end": "688480"
  },
  {
    "text": "session is still uh it's also updated",
    "start": "688480",
    "end": "690519"
  },
  {
    "text": "with new Seeker so the adversity can now",
    "start": "690519",
    "end": "692760"
  },
  {
    "text": "generate again uh tokens that are valid",
    "start": "692760",
    "end": "695160"
  },
  {
    "text": "for the new Seeker that are exactly the",
    "start": "695160",
    "end": "697040"
  },
  {
    "text": "blue secret so the way it goes is that",
    "start": "697040",
    "end": "699279"
  },
  {
    "text": "we just do the prein and session",
    "start": "699279",
    "end": "700839"
  },
  {
    "text": "fixation again Bob authenticates now t0",
    "start": "700839",
    "end": "704680"
  },
  {
    "text": "is no longer valid because the secret is",
    "start": "704680",
    "end": "706600"
  },
  {
    "text": "different uh but what a attacker can do",
    "start": "706600",
    "end": "710079"
  },
  {
    "text": "is that the attacker can ask for a new",
    "start": "710079",
    "end": "712320"
  },
  {
    "text": "login get a fresh token that shares the",
    "start": "712320",
    "end": "716480"
  },
  {
    "text": "same secret as the blue one this T2",
    "start": "716480",
    "end": "718639"
  },
  {
    "text": "token and now use the t2 token because",
    "start": "718639",
    "end": "721639"
  },
  {
    "text": "session zero and session one share the",
    "start": "721639",
    "end": "723839"
  },
  {
    "text": "exact same secret so they generate",
    "start": "723839",
    "end": "726200"
  },
  {
    "text": "compatible",
    "start": "726200",
    "end": "727519"
  },
  {
    "text": "tokens so um we did this uh for 13 uh um",
    "start": "727519",
    "end": "732959"
  },
  {
    "text": "Frameworks that were at the top",
    "start": "732959",
    "end": "735440"
  },
  {
    "text": "According to some GitHub metrics and",
    "start": "735440",
    "end": "737480"
  },
  {
    "text": "some of them were using uh um quite uh",
    "start": "737480",
    "end": "741040"
  },
  {
    "text": "relevant uh uh modules with 2 million",
    "start": "741040",
    "end": "744440"
  },
  {
    "text": "downloads per week and we found among",
    "start": "744440",
    "end": "746560"
  },
  {
    "text": "these 13 vulnerable um web Frameworks",
    "start": "746560",
    "end": "749959"
  },
  {
    "text": "that nine of them uh were vulnerable to",
    "start": "749959",
    "end": "752600"
  },
  {
    "text": "some sort of uh attack so seven gr were",
    "start": "752600",
    "end": "756040"
  },
  {
    "text": "at the synchronizer token pattern um",
    "start": "756040",
    "end": "759360"
  },
  {
    "text": "implementation broken uh four of them",
    "start": "759360",
    "end": "761639"
  },
  {
    "text": "used default um um double submit pattern",
    "start": "761639",
    "end": "765720"
  },
  {
    "text": "and three of them have the uh session",
    "start": "765720",
    "end": "769079"
  },
  {
    "text": "fixation still um uh we can also we can",
    "start": "769079",
    "end": "773240"
  },
  {
    "text": "still perform session fixation attacks",
    "start": "773240",
    "end": "775360"
  },
  {
    "text": "so this was our study and all of this is",
    "start": "775360",
    "end": "778199"
  },
  {
    "text": "related with session Integrity so",
    "start": "778199",
    "end": "780480"
  },
  {
    "text": "markart the cook is getting better now",
    "start": "780480",
    "end": "782639"
  },
  {
    "start": "782000",
    "end": "804000"
  },
  {
    "text": "yeah this is a good question and it's",
    "start": "782639",
    "end": "784399"
  },
  {
    "text": "not really easy or straightforward to",
    "start": "784399",
    "end": "786480"
  },
  {
    "text": "answer it because it's not just about",
    "start": "786480",
    "end": "788639"
  },
  {
    "text": "like checking the standard and seeing",
    "start": "788639",
    "end": "791000"
  },
  {
    "text": "like if there are new features being",
    "start": "791000",
    "end": "792720"
  },
  {
    "text": "added there it's also checking",
    "start": "792720",
    "end": "794480"
  },
  {
    "text": "implementations on browsers and the",
    "start": "794480",
    "end": "796720"
  },
  {
    "text": "server side and that's how we approach",
    "start": "796720",
    "end": "798760"
  },
  {
    "text": "the problem so we starting we started",
    "start": "798760",
    "end": "801720"
  },
  {
    "text": "revising the standard the RFC 6265 B and",
    "start": "801720",
    "end": "806000"
  },
  {
    "start": "804000",
    "end": "859000"
  },
  {
    "text": "then we implemented a browser testing s",
    "start": "806000",
    "end": "808639"
  },
  {
    "text": "with with all known cookie Integrity",
    "start": "808639",
    "end": "810560"
  },
  {
    "text": "attacks so all Cookie tossing and",
    "start": "810560",
    "end": "812920"
  },
  {
    "text": "eviction techniques and we tested them",
    "start": "812920",
    "end": "815160"
  },
  {
    "text": "against the three main browsers so",
    "start": "815160",
    "end": "816959"
  },
  {
    "text": "Firefox Safari and chrome whenever we",
    "start": "816959",
    "end": "819800"
  },
  {
    "text": "found a discrepancy in the behavior we",
    "start": "819800",
    "end": "821760"
  },
  {
    "text": "went back to the standard and we tried",
    "start": "821760",
    "end": "823600"
  },
  {
    "text": "to understand who was doing the right",
    "start": "823600",
    "end": "825839"
  },
  {
    "text": "thing or the wrong one and then we did",
    "start": "825839",
    "end": "827880"
  },
  {
    "text": "something similar also for the servers",
    "start": "827880",
    "end": "830279"
  },
  {
    "text": "so we implemented a very simple",
    "start": "830279",
    "end": "832240"
  },
  {
    "text": "differential fer we generated a lot of",
    "start": "832240",
    "end": "835279"
  },
  {
    "text": "input for the servers so basically like",
    "start": "835279",
    "end": "838279"
  },
  {
    "text": "differences in the in the cookie header",
    "start": "838279",
    "end": "840720"
  },
  {
    "text": "and then we started recording all",
    "start": "840720",
    "end": "842759"
  },
  {
    "text": "possible discrepancies whenever we met a",
    "start": "842759",
    "end": "845240"
  },
  {
    "text": "discrepancy then we manually analyze it",
    "start": "845240",
    "end": "848680"
  },
  {
    "text": "and try to understand whether it was",
    "start": "848680",
    "end": "850519"
  },
  {
    "text": "possible to mount an attack using",
    "start": "850519",
    "end": "853519"
  },
  {
    "text": "it um talking about the standard there",
    "start": "853519",
    "end": "856519"
  },
  {
    "text": "are like two main changes that happened",
    "start": "856519",
    "end": "859199"
  },
  {
    "start": "859000",
    "end": "954000"
  },
  {
    "text": "a few years ago the first one is called",
    "start": "859199",
    "end": "861000"
  },
  {
    "text": "the strict secure and it's against the",
    "start": "861000",
    "end": "863199"
  },
  {
    "text": "network attackers the idea is that if",
    "start": "863199",
    "end": "865920"
  },
  {
    "text": "you have in the cookie jar for your site",
    "start": "865920",
    "end": "868480"
  },
  {
    "text": "a secure cookie named let's say test and",
    "start": "868480",
    "end": "872160"
  },
  {
    "text": "the network attacker tries to set from a",
    "start": "872160",
    "end": "875079"
  },
  {
    "text": "non-secure origin a cookie naming the",
    "start": "875079",
    "end": "878240"
  },
  {
    "text": "same way so test uh the browser will",
    "start": "878240",
    "end": "881160"
  },
  {
    "text": "block it it's not possible to set it to",
    "start": "881160",
    "end": "884360"
  },
  {
    "text": "perform cookie tossing from a non-secure",
    "start": "884360",
    "end": "887040"
  },
  {
    "text": "origin all right the second and most",
    "start": "887040",
    "end": "890360"
  },
  {
    "text": "relevant protection in the cookie domain",
    "start": "890360",
    "end": "893079"
  },
  {
    "text": "is the cookie prefixes there are two",
    "start": "893079",
    "end": "895480"
  },
  {
    "text": "prefixes one is underscore underscore",
    "start": "895480",
    "end": "897639"
  },
  {
    "text": "secure the other one is host we just",
    "start": "897639",
    "end": "899759"
  },
  {
    "text": "focus on host and the stalk the idea is",
    "start": "899759",
    "end": "903000"
  },
  {
    "text": "that if the cookie name starts with",
    "start": "903000",
    "end": "906480"
  },
  {
    "text": "uncore uncore host minus there are",
    "start": "906480",
    "end": "909720"
  },
  {
    "text": "additional security restrictions put in",
    "start": "909720",
    "end": "911800"
  },
  {
    "text": "place by the browser all right the first",
    "start": "911800",
    "end": "914880"
  },
  {
    "text": "protection is that the cookie must be",
    "start": "914880",
    "end": "917320"
  },
  {
    "text": "set with a secure attribute the second",
    "start": "917320",
    "end": "919759"
  },
  {
    "text": "one is that the path attribute must be",
    "start": "919759",
    "end": "922440"
  },
  {
    "text": "seted to slash so it's not possible to",
    "start": "922440",
    "end": "924920"
  },
  {
    "text": "do like some magic tricks to prioritize",
    "start": "924920",
    "end": "928040"
  },
  {
    "text": "the cookies set by the attacker and the",
    "start": "928040",
    "end": "930800"
  },
  {
    "text": "last and more most important Point here",
    "start": "930800",
    "end": "933440"
  },
  {
    "text": "is that the domain attribute is",
    "start": "933440",
    "end": "935399"
  },
  {
    "text": "disallowed so you can't toss a cookie",
    "start": "935399",
    "end": "938079"
  },
  {
    "text": "from a subdomain using this protection",
    "start": "938079",
    "end": "941800"
  },
  {
    "text": "that's why we call this cookies high",
    "start": "941800",
    "end": "943800"
  },
  {
    "text": "integrity or domain or host locked",
    "start": "943800",
    "end": "947920"
  },
  {
    "text": "okay I got a trivia for you so on the",
    "start": "947920",
    "end": "951720"
  },
  {
    "text": "left hand side of the screen you will",
    "start": "951720",
    "end": "953680"
  },
  {
    "text": "see some set cookie headers and you have",
    "start": "953680",
    "end": "956920"
  },
  {
    "start": "954000",
    "end": "1027000"
  },
  {
    "text": "to tell me if you think this is valid or",
    "start": "956920",
    "end": "960000"
  },
  {
    "text": "if Chrome and Firefox will reject them",
    "start": "960000",
    "end": "963839"
  },
  {
    "text": "if you think that they're valid try also",
    "start": "963839",
    "end": "966560"
  },
  {
    "text": "to imagine what could it be the",
    "start": "966560",
    "end": "968800"
  },
  {
    "text": "corresponding cookie header all right so",
    "start": "968800",
    "end": "971399"
  },
  {
    "text": "let's try with the first one do you",
    "start": "971399",
    "end": "973319"
  },
  {
    "text": "think that set cookie F equal is valid",
    "start": "973319",
    "end": "976279"
  },
  {
    "text": "ra raise your hand if you think it",
    "start": "976279",
    "end": "979399"
  },
  {
    "text": "is all right it's a bit difficult for me",
    "start": "979399",
    "end": "982120"
  },
  {
    "text": "to see but yeah uh do you think is not",
    "start": "982120",
    "end": "985240"
  },
  {
    "text": "valid raise your",
    "start": "985240",
    "end": "987319"
  },
  {
    "text": "hand valid one okay all right uh second",
    "start": "987319",
    "end": "992079"
  },
  {
    "text": "one is equal to F third one so set",
    "start": "992079",
    "end": "994800"
  },
  {
    "text": "cookie equal F equal is it valid raise",
    "start": "994800",
    "end": "998480"
  },
  {
    "text": "your hand if you think it's",
    "start": "998480",
    "end": "1000079"
  },
  {
    "text": "valid okay uh",
    "start": "1000079",
    "end": "1004279"
  },
  {
    "text": "invalid okay several hands it's a tie uh",
    "start": "1004279",
    "end": "1008759"
  },
  {
    "text": "third one is set cookie equal equal Fu",
    "start": "1008759",
    "end": "1011319"
  },
  {
    "text": "and the last one is a bit weird it's set",
    "start": "1011319",
    "end": "1013519"
  },
  {
    "text": "cookie f with no equal symbol is it",
    "start": "1013519",
    "end": "1017480"
  },
  {
    "text": "valid all right is it",
    "start": "1017480",
    "end": "1021120"
  },
  {
    "text": "invalid all right valid ones okay okay",
    "start": "1021120",
    "end": "1024640"
  },
  {
    "text": "so the first one as you currently guess",
    "start": "1024640",
    "end": "1027600"
  },
  {
    "start": "1027000",
    "end": "1151000"
  },
  {
    "text": "is valid it corresponds to a cookie",
    "start": "1027600",
    "end": "1029678"
  },
  {
    "text": "named Fu but with empty value and it's",
    "start": "1029679",
    "end": "1032400"
  },
  {
    "text": "also pared by the server in this case we",
    "start": "1032400",
    "end": "1034798"
  },
  {
    "text": "are taking uh into consideration ver uh",
    "start": "1034799",
    "end": "1038520"
  },
  {
    "text": "which is the middleware used by flask",
    "start": "1038520",
    "end": "1040959"
  },
  {
    "text": "based python applications and it's pared",
    "start": "1040959",
    "end": "1044000"
  },
  {
    "text": "corly there are like no discrepancies",
    "start": "1044000",
    "end": "1046959"
  },
  {
    "text": "whatsoever the inter in thing here is",
    "start": "1046959",
    "end": "1049760"
  },
  {
    "text": "that all these heads are valid and they",
    "start": "1049760",
    "end": "1052720"
  },
  {
    "text": "correspond to cookies with a without a",
    "start": "1052720",
    "end": "1055320"
  },
  {
    "text": "name or like what the name is an empty",
    "start": "1055320",
    "end": "1057919"
  },
  {
    "text": "string and different values the",
    "start": "1057919",
    "end": "1060520"
  },
  {
    "text": "concerning bit is that the cookie number",
    "start": "1060520",
    "end": "1063760"
  },
  {
    "text": "first number one and the cookie number",
    "start": "1063760",
    "end": "1065640"
  },
  {
    "text": "three they are serialized exactly in the",
    "start": "1065640",
    "end": "1068360"
  },
  {
    "text": "same way so the corresponding cookie",
    "start": "1068360",
    "end": "1070720"
  },
  {
    "text": "header using the request is f equal but",
    "start": "1070720",
    "end": "1074720"
  },
  {
    "text": "it maps to different cookies in the",
    "start": "1074720",
    "end": "1077159"
  },
  {
    "text": "first case to a cookie with a name f and",
    "start": "1077159",
    "end": "1080880"
  },
  {
    "text": "empty value and in the third case with a",
    "start": "1080880",
    "end": "1083760"
  },
  {
    "text": "cookie without a name and with value F",
    "start": "1083760",
    "end": "1086600"
  },
  {
    "text": "equal now you might wonder how will the",
    "start": "1086600",
    "end": "1089720"
  },
  {
    "text": "server pass all these different cookies",
    "start": "1089720",
    "end": "1092919"
  },
  {
    "text": "of course exactly in the same way all",
    "start": "1092919",
    "end": "1095400"
  },
  {
    "text": "these cookies are the same for the",
    "start": "1095400",
    "end": "1097080"
  },
  {
    "text": "server uh due to well like uh lack of",
    "start": "1097080",
    "end": "1101760"
  },
  {
    "text": "support for the standard and additional",
    "start": "1101760",
    "end": "1104080"
  },
  {
    "text": "vulnerabilities that we found so",
    "start": "1104080",
    "end": "1105960"
  },
  {
    "text": "basically verz was stripping the",
    "start": "1105960",
    "end": "1108840"
  },
  {
    "text": "equal symbol from the cookie header um",
    "start": "1108840",
    "end": "1112559"
  },
  {
    "text": "okay so this is an implementation",
    "start": "1112559",
    "end": "1113840"
  },
  {
    "text": "mistake for ver but what's this the case",
    "start": "1113840",
    "end": "1116840"
  },
  {
    "text": "for Chrome and Firefox why do they",
    "start": "1116840",
    "end": "1119080"
  },
  {
    "text": "behave in the same way isn't this an",
    "start": "1119080",
    "end": "1121440"
  },
  {
    "text": "implementation glitch unfortunately not",
    "start": "1121440",
    "end": "1124400"
  },
  {
    "text": "this is part of the standard nameless",
    "start": "1124400",
    "end": "1126559"
  },
  {
    "text": "cookies are called and they being",
    "start": "1126559",
    "end": "1128120"
  },
  {
    "text": "supported starting from 2020 and also",
    "start": "1128120",
    "end": "1131360"
  },
  {
    "text": "this serialization Collision that I just",
    "start": "1131360",
    "end": "1133919"
  },
  {
    "text": "mentioned is also part of the standard",
    "start": "1133919",
    "end": "1137520"
  },
  {
    "text": "okay these are fun facts regarding",
    "start": "1137520",
    "end": "1139440"
  },
  {
    "text": "cookies but how can we leverage them to",
    "start": "1139440",
    "end": "1141960"
  },
  {
    "text": "do something in security so I introduced",
    "start": "1141960",
    "end": "1144960"
  },
  {
    "text": "two security protections before because",
    "start": "1144960",
    "end": "1146840"
  },
  {
    "text": "I want to break them with this technique",
    "start": "1146840",
    "end": "1148880"
  },
  {
    "text": "so how to do that so how to bypass host",
    "start": "1148880",
    "end": "1151640"
  },
  {
    "text": "cookies it's actually pretty simple so",
    "start": "1151640",
    "end": "1154159"
  },
  {
    "text": "imagine that you have bank.com setting a",
    "start": "1154159",
    "end": "1156679"
  },
  {
    "text": "legitimate host cookie with a secure",
    "start": "1156679",
    "end": "1159120"
  },
  {
    "text": "attribute and the pet attribute set to",
    "start": "1159120",
    "end": "1161600"
  },
  {
    "text": "Slash from a subdomain at tech. bank.com",
    "start": "1161600",
    "end": "1165520"
  },
  {
    "text": "we can set a nameless cookie at as a",
    "start": "1165520",
    "end": "1168760"
  },
  {
    "text": "value underscore uncore host minus",
    "start": "1168760",
    "end": "1171200"
  },
  {
    "text": "sucess equal to bed with the domain",
    "start": "1171200",
    "end": "1173799"
  },
  {
    "text": "attribute because for the browser point",
    "start": "1173799",
    "end": "1175919"
  },
  {
    "text": "of view this is a normal cookie with no",
    "start": "1175919",
    "end": "1179200"
  },
  {
    "text": "additional security restrictions all",
    "start": "1179200",
    "end": "1181080"
  },
  {
    "text": "right and so the browser due to the",
    "start": "1181080",
    "end": "1183520"
  },
  {
    "text": "serialization Collision that we",
    "start": "1183520",
    "end": "1185080"
  },
  {
    "text": "introduced before we just realized that",
    "start": "1185080",
    "end": "1187400"
  },
  {
    "text": "two cook is exactly in the same way",
    "start": "1187400",
    "end": "1190000"
  },
  {
    "text": "making it impossible for the server at",
    "start": "1190000",
    "end": "1192600"
  },
  {
    "text": "bank.com to distinguish between the",
    "start": "1192600",
    "end": "1195240"
  },
  {
    "text": "two so we disclosed this issues with the",
    "start": "1195240",
    "end": "1198400"
  },
  {
    "text": "uh well first we started the public",
    "start": "1198400",
    "end": "1200520"
  },
  {
    "text": "discussion because we didn't fully",
    "start": "1200520",
    "end": "1202720"
  },
  {
    "text": "understand at first of the security",
    "start": "1202720",
    "end": "1203919"
  },
  {
    "text": "implications of this thing and then we",
    "start": "1203919",
    "end": "1206400"
  },
  {
    "text": "realized that it was indeed like",
    "start": "1206400",
    "end": "1207919"
  },
  {
    "text": "possible to bypass the to bypass us",
    "start": "1207919",
    "end": "1210039"
  },
  {
    "text": "prefixes and we opened two different",
    "start": "1210039",
    "end": "1212039"
  },
  {
    "text": "tissues with chrome and Firefox let's",
    "start": "1212039",
    "end": "1214720"
  },
  {
    "text": "give credit where credit is due uh Axel",
    "start": "1214720",
    "end": "1217240"
  },
  {
    "text": "Chong reported these two vulnerabilities",
    "start": "1217240",
    "end": "1219640"
  },
  {
    "text": "just a few days before us but then our",
    "start": "1219640",
    "end": "1221840"
  },
  {
    "text": "issues got merged together we discussed",
    "start": "1221840",
    "end": "1224080"
  },
  {
    "text": "protection and additional edge cases how",
    "start": "1224080",
    "end": "1227640"
  },
  {
    "text": "was this thing fixed a reasonable person",
    "start": "1227640",
    "end": "1231159"
  },
  {
    "text": "would assume that you just nuke nameless",
    "start": "1231159",
    "end": "1233600"
  },
  {
    "text": "cookies from the standard unfortunately",
    "start": "1233600",
    "end": "1235960"
  },
  {
    "text": "this is not what happened and nameless",
    "start": "1235960",
    "end": "1238200"
  },
  {
    "text": "cookies were just patched so that",
    "start": "1238200",
    "end": "1240799"
  },
  {
    "text": "nameless cookies are still supported by",
    "start": "1240799",
    "end": "1242840"
  },
  {
    "text": "browsers and by the standard but if you",
    "start": "1242840",
    "end": "1246200"
  },
  {
    "text": "try to set the nameless cookie having as",
    "start": "1246200",
    "end": "1249000"
  },
  {
    "text": "a value something that starts like a non",
    "start": "1249000",
    "end": "1253080"
  },
  {
    "text": "case sensitive match for uncore uncore",
    "start": "1253080",
    "end": "1255679"
  },
  {
    "text": "host minus then the browser would with",
    "start": "1255679",
    "end": "1258200"
  },
  {
    "text": "this carard that cookie all right uh is",
    "start": "1258200",
    "end": "1261080"
  },
  {
    "text": "it enough to fix all the issues",
    "start": "1261080",
    "end": "1262960"
  },
  {
    "text": "obviously not uh because if you have an",
    "start": "1262960",
    "end": "1265880"
  },
  {
    "text": "HTTP processing chain with an additional",
    "start": "1265880",
    "end": "1269280"
  },
  {
    "text": "cookie parser in between as it was the",
    "start": "1269280",
    "end": "1271279"
  },
  {
    "text": "case of Amazon API Gateway then you",
    "start": "1271279",
    "end": "1274320"
  },
  {
    "text": "still have the vulnerability even if",
    "start": "1274320",
    "end": "1276080"
  },
  {
    "text": "you're using a fixed browser so we",
    "start": "1276080",
    "end": "1278559"
  },
  {
    "text": "reported that and uh the uh the Gateway",
    "start": "1278559",
    "end": "1281760"
  },
  {
    "text": "implemented the additional protection",
    "start": "1281760",
    "end": "1283880"
  },
  {
    "text": "that is now also landed in Firefox and",
    "start": "1283880",
    "end": "1286880"
  },
  {
    "text": "chrome so far was not affected because",
    "start": "1286880",
    "end": "1289320"
  },
  {
    "text": "it diverges from the",
    "start": "1289320",
    "end": "1292279"
  },
  {
    "text": "standard uh let's see now something that",
    "start": "1292279",
    "end": "1294559"
  },
  {
    "text": "still works so we have strict secure and",
    "start": "1294559",
    "end": "1297360"
  },
  {
    "text": "you can leverage this technique of",
    "start": "1297360",
    "end": "1299120"
  },
  {
    "text": "nameless cookies to bypass a strict",
    "start": "1299120",
    "end": "1301400"
  },
  {
    "text": "secure the idea is like the same as",
    "start": "1301400",
    "end": "1303440"
  },
  {
    "text": "before so you have a session cookie so",
    "start": "1303440",
    "end": "1307120"
  },
  {
    "text": "the cookie Nam session with value good",
    "start": "1307120",
    "end": "1309600"
  },
  {
    "text": "and from a subdomain you set a domain",
    "start": "1309600",
    "end": "1312679"
  },
  {
    "text": "cookie that is nameless and has as a",
    "start": "1312679",
    "end": "1315679"
  },
  {
    "text": "value session equal to bed then",
    "start": "1315679",
    "end": "1318240"
  },
  {
    "text": "calization collision and you can see",
    "start": "1318240",
    "end": "1320520"
  },
  {
    "text": "that in the cookie jar you have one",
    "start": "1320520",
    "end": "1322440"
  },
  {
    "text": "cookie that is secure the other one that",
    "start": "1322440",
    "end": "1324039"
  },
  {
    "text": "is not secure but they are sent together",
    "start": "1324039",
    "end": "1327320"
  },
  {
    "text": "to the server first one usually takes",
    "start": "1327320",
    "end": "1330159"
  },
  {
    "text": "precedence from like the server parser",
    "start": "1330159",
    "end": "1333159"
  },
  {
    "text": "and then you can uh bypass the",
    "start": "1333159",
    "end": "1336080"
  },
  {
    "text": "protection we also investigated other",
    "start": "1336080",
    "end": "1338760"
  },
  {
    "text": "servers there are more results in the",
    "start": "1338760",
    "end": "1340679"
  },
  {
    "text": "paper please like check it out I will",
    "start": "1340679",
    "end": "1342520"
  },
  {
    "text": "link it at the end of the presentation",
    "start": "1342520",
    "end": "1344600"
  },
  {
    "text": "and we found out that the Legacy design",
    "start": "1344600",
    "end": "1347799"
  },
  {
    "text": "of regist globals maybe some of you uh",
    "start": "1347799",
    "end": "1350679"
  },
  {
    "text": "here like remember what is like register",
    "start": "1350679",
    "end": "1352440"
  },
  {
    "text": "globals affects also the cookie super",
    "start": "1352440",
    "end": "1355559"
  },
  {
    "text": "Global array meaning that if you send a",
    "start": "1355559",
    "end": "1358159"
  },
  {
    "text": "cookie header where the name contains",
    "start": "1358159",
    "end": "1361120"
  },
  {
    "text": "some characters like space Dot and open",
    "start": "1361120",
    "end": "1364720"
  },
  {
    "text": "square bracket these characters are",
    "start": "1364720",
    "end": "1367360"
  },
  {
    "text": "replaced with the underscore symbol so",
    "start": "1367360",
    "end": "1370080"
  },
  {
    "text": "all the cookies that you see on the",
    "start": "1370080",
    "end": "1371760"
  },
  {
    "text": "slide they are passed exactly in the",
    "start": "1371760",
    "end": "1374240"
  },
  {
    "text": "same way and then from a subdomain you",
    "start": "1374240",
    "end": "1376039"
  },
  {
    "text": "can set underscore space host minus s",
    "start": "1376039",
    "end": "1380320"
  },
  {
    "text": "for the browser this is a a normal",
    "start": "1380320",
    "end": "1382360"
  },
  {
    "text": "cookie like no additional security",
    "start": "1382360",
    "end": "1385039"
  },
  {
    "text": "restrictions but for the server this is",
    "start": "1385039",
    "end": "1387799"
  },
  {
    "text": "equivalent to a proper host perect",
    "start": "1387799",
    "end": "1391760"
  },
  {
    "text": "cookie we also investigated as I said",
    "start": "1391760",
    "end": "1395039"
  },
  {
    "start": "1394000",
    "end": "1485000"
  },
  {
    "text": "browsers and we found interesting issues",
    "start": "1395039",
    "end": "1397760"
  },
  {
    "text": "with Firefox uh so we tried here to",
    "start": "1397760",
    "end": "1400840"
  },
  {
    "text": "mount a an attack well to test the",
    "start": "1400840",
    "end": "1403600"
  },
  {
    "text": "attack against the um strict secure",
    "start": "1403600",
    "end": "1406320"
  },
  {
    "text": "cookies so you have bank.com setting a",
    "start": "1406320",
    "end": "1409600"
  },
  {
    "text": "cookie named sess with a secure flag on",
    "start": "1409600",
    "end": "1412919"
  },
  {
    "text": "and then from a non-secure origin",
    "start": "1412919",
    "end": "1415400"
  },
  {
    "text": "bank.com we tried to set via JavaScript",
    "start": "1415400",
    "end": "1418760"
  },
  {
    "text": "a cookie name in the same way so SS you",
    "start": "1418760",
    "end": "1421720"
  },
  {
    "text": "would expect that the cookie is not set",
    "start": "1421720",
    "end": "1423919"
  },
  {
    "text": "in the cookie jar which is indeed true",
    "start": "1423919",
    "end": "1426279"
  },
  {
    "text": "that's exactly what happened so so so",
    "start": "1426279",
    "end": "1429360"
  },
  {
    "text": "far so good the problem was that if you",
    "start": "1429360",
    "end": "1432400"
  },
  {
    "text": "try to access document. cookie again",
    "start": "1432400",
    "end": "1435000"
  },
  {
    "text": "from the non-secure origin you could",
    "start": "1435000",
    "end": "1437360"
  },
  {
    "text": "still get get SS equal to bed so it's",
    "start": "1437360",
    "end": "1440679"
  },
  {
    "text": "like some weird setting in which you",
    "start": "1440679",
    "end": "1442880"
  },
  {
    "text": "have the cookie jar that is fine but",
    "start": "1442880",
    "end": "1445520"
  },
  {
    "text": "then like the value returned from the",
    "start": "1445520",
    "end": "1447200"
  },
  {
    "text": "JavaScript API that disagrees with the",
    "start": "1447200",
    "end": "1450200"
  },
  {
    "text": "content of the cookie jar we call this",
    "start": "1450200",
    "end": "1452600"
  },
  {
    "text": "issues desynchronization issues and the",
    "start": "1452600",
    "end": "1455200"
  },
  {
    "text": "interesting bit in this case is that it",
    "start": "1455200",
    "end": "1458080"
  },
  {
    "text": "wasn't just like a m implementation",
    "start": "1458080",
    "end": "1460159"
  },
  {
    "text": "mistake but it was due to a too strict",
    "start": "1460159",
    "end": "1464080"
  },
  {
    "text": "isolation because of the implementation",
    "start": "1464080",
    "end": "1466279"
  },
  {
    "text": "of side isolation that is called project",
    "start": "1466279",
    "end": "1468200"
  },
  {
    "text": "fishion in Firefox so you have basically",
    "start": "1468200",
    "end": "1470200"
  },
  {
    "text": "like two different processes one",
    "start": "1470200",
    "end": "1472200"
  },
  {
    "text": "rendering the HTTP origin the other one",
    "start": "1472200",
    "end": "1474279"
  },
  {
    "text": "rendering the https origin and they do",
    "start": "1474279",
    "end": "1477399"
  },
  {
    "text": "not talk to each other so they do not",
    "start": "1477399",
    "end": "1479799"
  },
  {
    "text": "understand that they can't know who said",
    "start": "1479799",
    "end": "1482279"
  },
  {
    "text": "what um in another desynchronization",
    "start": "1482279",
    "end": "1484760"
  },
  {
    "text": "issue that we discover was when",
    "start": "1484760",
    "end": "1487039"
  },
  {
    "start": "1485000",
    "end": "1552000"
  },
  {
    "text": "performing a cookie jflow we could set",
    "start": "1487039",
    "end": "1490960"
  },
  {
    "text": "via JavaScript more than 180 cookie that",
    "start": "1490960",
    "end": "1494919"
  },
  {
    "text": "is the typical limit of Firefox for the",
    "start": "1494919",
    "end": "1497279"
  },
  {
    "text": "cookie jar",
    "start": "1497279",
    "end": "1498679"
  },
  {
    "text": "and again like these are not cookies",
    "start": "1498679",
    "end": "1500559"
  },
  {
    "text": "that are flowing into the cookie jar",
    "start": "1500559",
    "end": "1502520"
  },
  {
    "text": "they just remain in Doc in the document.",
    "start": "1502520",
    "end": "1505559"
  },
  {
    "text": "cookie API the funny thing is that these",
    "start": "1505559",
    "end": "1508600"
  },
  {
    "text": "cookies are not deletable they're kind",
    "start": "1508600",
    "end": "1511159"
  },
  {
    "text": "of immortal uh you try you can try to",
    "start": "1511159",
    "end": "1513919"
  },
  {
    "text": "use like a Clear Sight data header you",
    "start": "1513919",
    "end": "1516279"
  },
  {
    "text": "can try to set them with an expiration",
    "start": "1516279",
    "end": "1518960"
  },
  {
    "text": "date in the past using set cookie or",
    "start": "1518960",
    "end": "1521679"
  },
  {
    "text": "even manually you open the developer",
    "start": "1521679",
    "end": "1523200"
  },
  {
    "text": "tools and you try like to remove them",
    "start": "1523200",
    "end": "1524960"
  },
  {
    "text": "manually the document. cook API",
    "start": "1524960",
    "end": "1528520"
  },
  {
    "text": "returns them okay um what's like the",
    "start": "1528520",
    "end": "1532559"
  },
  {
    "text": "problem with this there are some",
    "start": "1532559",
    "end": "1533799"
  },
  {
    "text": "frontend libraries that are rying on the",
    "start": "1533799",
    "end": "1536559"
  },
  {
    "text": "value of document document. cookie to",
    "start": "1536559",
    "end": "1539559"
  },
  {
    "text": "then create custom HTTP headers as in",
    "start": "1539559",
    "end": "1542880"
  },
  {
    "text": "the case of as.net and angular to",
    "start": "1542880",
    "end": "1545919"
  },
  {
    "text": "implement csrf protection for custom",
    "start": "1545919",
    "end": "1549080"
  },
  {
    "text": "fetch",
    "start": "1549080",
    "end": "1550240"
  },
  {
    "text": "request and that's it that's the way the",
    "start": "1550240",
    "end": "1552480"
  },
  {
    "start": "1552000",
    "end": "1696000"
  },
  {
    "text": "cookie crumbles thanks very much for",
    "start": "1552480",
    "end": "1554559"
  },
  {
    "text": "your attention uh a couple of takeaways",
    "start": "1554559",
    "end": "1558080"
  },
  {
    "text": "from this talk the first one was that we",
    "start": "1558080",
    "end": "1560919"
  },
  {
    "text": "were really shocked after analyzing uh",
    "start": "1560919",
    "end": "1564279"
  },
  {
    "text": "libraries that are very well battle",
    "start": "1564279",
    "end": "1566880"
  },
  {
    "text": "tested that that was the case of",
    "start": "1566880",
    "end": "1568440"
  },
  {
    "text": "passport for example we're talking about",
    "start": "1568440",
    "end": "1570679"
  },
  {
    "text": "two millions downloads a week still",
    "start": "1570679",
    "end": "1572760"
  },
  {
    "text": "vulnerable to session fixation and to to",
    "start": "1572760",
    "end": "1575360"
  },
  {
    "text": "other things uh the question here is",
    "start": "1575360",
    "end": "1577880"
  },
  {
    "text": "that like the first one is what's the",
    "start": "1577880",
    "end": "1580440"
  },
  {
    "text": "status of applications of websites in",
    "start": "1580440",
    "end": "1582960"
  },
  {
    "text": "the wild because if you have these",
    "start": "1582960",
    "end": "1584679"
  },
  {
    "text": "problems on Frameworks that are the",
    "start": "1584679",
    "end": "1586399"
  },
  {
    "text": "backbone of",
    "start": "1586399",
    "end": "1588159"
  },
  {
    "text": "of of applications out there I'm",
    "start": "1588159",
    "end": "1590279"
  },
  {
    "text": "wondering like what's the situation for",
    "start": "1590279",
    "end": "1591960"
  },
  {
    "text": "like a normal website and then like",
    "start": "1591960",
    "end": "1594559"
  },
  {
    "text": "what's the root cause of this issues is",
    "start": "1594559",
    "end": "1596440"
  },
  {
    "text": "it a problem of composition of different",
    "start": "1596440",
    "end": "1598919"
  },
  {
    "text": "libraries that they do not know what the",
    "start": "1598919",
    "end": "1600840"
  },
  {
    "text": "other library is doing or is it a lack",
    "start": "1600840",
    "end": "1603200"
  },
  {
    "text": "of understanding of the threat model",
    "start": "1603200",
    "end": "1605679"
  },
  {
    "text": "second takeaway is the Legacy design is",
    "start": "1605679",
    "end": "1608240"
  },
  {
    "text": "still cursing uh our applications not",
    "start": "1608240",
    "end": "1611840"
  },
  {
    "text": "just at the implementation level which",
    "start": "1611840",
    "end": "1613559"
  },
  {
    "text": "would be let's say more understandable",
    "start": "1613559",
    "end": "1616120"
  },
  {
    "text": "but also at a specification level that",
    "start": "1616120",
    "end": "1618760"
  },
  {
    "text": "was the case of nameless cookies and",
    "start": "1618760",
    "end": "1621279"
  },
  {
    "text": "this is really uh worrying and we should",
    "start": "1621279",
    "end": "1624279"
  },
  {
    "text": "try to find a way to move out of Legacy",
    "start": "1624279",
    "end": "1628320"
  },
  {
    "text": "design and have a better more secure by",
    "start": "1628320",
    "end": "1631480"
  },
  {
    "text": "default web last point if I had to pick",
    "start": "1631480",
    "end": "1634679"
  },
  {
    "text": "a point it would be like the last one is",
    "start": "1634679",
    "end": "1636960"
  },
  {
    "text": "that web security is still evolving in a",
    "start": "1636960",
    "end": "1639760"
  },
  {
    "text": "very disorganized way we saw that you",
    "start": "1639760",
    "end": "1642480"
  },
  {
    "text": "can't just like fix one side and then",
    "start": "1642480",
    "end": "1645159"
  },
  {
    "text": "have like security for free everywhere",
    "start": "1645159",
    "end": "1648799"
  },
  {
    "text": "web security should be a joint effort",
    "start": "1648799",
    "end": "1651279"
  },
  {
    "text": "and web developers and developers of the",
    "start": "1651279",
    "end": "1653679"
  },
  {
    "text": "web Frameworks should be in the position",
    "start": "1653679",
    "end": "1657640"
  },
  {
    "text": "of being uh up to the latest",
    "start": "1657640",
    "end": "1660399"
  },
  {
    "text": "developments of the specs and the latest",
    "start": "1660399",
    "end": "1663640"
  },
  {
    "text": "behavior of modern browsers please check",
    "start": "1663640",
    "end": "1666919"
  },
  {
    "text": "the paper and the artifacts there is",
    "start": "1666919",
    "end": "1669559"
  },
  {
    "text": "more stuff there there is also a",
    "start": "1669559",
    "end": "1671640"
  },
  {
    "text": "measurement of nameless cookies and US",
    "start": "1671640",
    "end": "1675159"
  },
  {
    "text": "cookies supported in the wide and and um",
    "start": "1675159",
    "end": "1678399"
  },
  {
    "text": "that's it if you have any questions",
    "start": "1678399",
    "end": "1680080"
  },
  {
    "text": "we're happy to take them but we will",
    "start": "1680080",
    "end": "1682159"
  },
  {
    "text": "also be in the room in front of us to",
    "start": "1682159",
    "end": "1685320"
  },
  {
    "text": "take your questions later and have like",
    "start": "1685320",
    "end": "1687240"
  },
  {
    "text": "a more informal chat if you want to",
    "start": "1687240",
    "end": "1689399"
  },
  {
    "text": "thank you thank",
    "start": "1689399",
    "end": "1690460"
  },
  {
    "text": "[Applause]",
    "start": "1690460",
    "end": "1695159"
  },
  {
    "text": "you",
    "start": "1695159",
    "end": "1698159"
  }
]