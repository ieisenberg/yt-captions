[
  {
    "text": "thank you guys all for coming uh and Welcome to our talk it's called isolation or hallucination hacking AI",
    "start": "2679",
    "end": "8760"
  },
  {
    "text": "infrastructure providers for fun and weights now in this talk we're going to tell the story of a little research",
    "start": "8760",
    "end": "13960"
  },
  {
    "text": "project we've been doing these past couple of months it started out with this little Eureka moment this discovery",
    "start": "13960",
    "end": "19039"
  },
  {
    "text": "we had that we thought could affect lots of different AI companies as a whole uh and it ended up with again myself being",
    "start": "19039",
    "end": "25439"
  },
  {
    "text": "able to hack into some of the world's largest infrastructure providers gaining access to millions of private models",
    "start": "25439",
    "end": "31519"
  },
  {
    "text": "data sets prompts and much more so we're going to tell you all about that but just before we do quick introduction uh",
    "start": "31519",
    "end": "38719"
  },
  {
    "text": "so my name is El San here with me on stage is sagit sadik uh both of us came here from Tel Aviv Israel which was an",
    "start": "38719",
    "end": "44879"
  },
  {
    "text": "excruciating flight and both of us work as security researchers at the wiiz research team uh which means most of our",
    "start": "44879",
    "end": "50840"
  },
  {
    "text": "day-to-day work is uh mostly Cloud security related research uh platforms like Azure AWS gcp Etc so we don't",
    "start": "50840",
    "end": "57399"
  },
  {
    "text": "really come from an AI background necessarily but I think it gave us the nice sort of Outsider perspective so",
    "start": "57399",
    "end": "62600"
  },
  {
    "text": "this is what we're going to talk about today uh we're going to start out by doing a little bit of AI 101 uh some basic terminology and go over uh the",
    "start": "62600",
    "end": "69240"
  },
  {
    "text": "discoveries that led to This research how this whole research even began then we're going to dive straight into our three real life case studies for today",
    "start": "69240",
    "end": "75520"
  },
  {
    "text": "which is how we hacked hugging face using a malicious model file how we hacked replicate using a malicious model container and finally how we hacked sap",
    "start": "75520",
    "end": "83119"
  },
  {
    "text": "using a malicious training procedure then we're going to sum things up and send you on your way with some takeaways on uh how to secure AI environments",
    "start": "83119",
    "end": "90520"
  },
  {
    "text": "all right so first thing first uh let's Ki things off a little bit of a11 quick recap of basic a terminology and if at",
    "start": "90520",
    "end": "97680"
  },
  {
    "text": "any point during the section the words I'm saying kind of sound like gibberish to you then don't worry because up until very recently they sound like gibberish",
    "start": "97680",
    "end": "103320"
  },
  {
    "text": "to me too so uh starting things off with probably the most talked about uh AI T",
    "start": "103320",
    "end": "108719"
  },
  {
    "text": "which is the AI model uh a model is basically a program and algorithm that has been trained to make predictions or",
    "start": "108719",
    "end": "114320"
  },
  {
    "text": "decisions based on the input data that you feed to it uh it all all of us are probably familiar at this point with",
    "start": "114320",
    "end": "119960"
  },
  {
    "text": "with uh text based models like CPT and image based models like uh Dolly where you feed some sort of check prompt and",
    "start": "119960",
    "end": "125520"
  },
  {
    "text": "get a response from the model now in order to make the model do that uh you first have to train it uh and when we",
    "start": "125520",
    "end": "131480"
  },
  {
    "text": "say training we're talking about the process where you quote unquote teach a model how to recognize patterns and make",
    "start": "131480",
    "end": "137080"
  },
  {
    "text": "predictions based on those patterns the way you do that is by basically feeding tons of data into the model that's called a data set and then adjusting its",
    "start": "137080",
    "end": "144040"
  },
  {
    "text": "parameters accordingly uh and finally when you have the train model you want to interact with it that process will be",
    "start": "144040",
    "end": "149560"
  },
  {
    "text": "called inference uh which is when you apply a model that's already trained to new input and make it make predictions or decisions based on that input data",
    "start": "149560",
    "end": "156200"
  },
  {
    "text": "when you go on chat GPT and ask it something ridiculous and then it responds that process will be called inference so quick recap uh you have an",
    "start": "156200",
    "end": "163519"
  },
  {
    "text": "AI model first you have to train it and then you can infer with it but how you actually do all those things because all those things are really expensive to",
    "start": "163519",
    "end": "169840"
  },
  {
    "text": "compute and not everyone has a GPU Farm in their backyard they can use whenever they want uh but luckily there exist a a",
    "start": "169840",
    "end": "176640"
  },
  {
    "text": "service providers or AOS so as service providers are any one of",
    "start": "176640",
    "end": "183799"
  },
  {
    "text": "those companies behind me and many more which are companies that have very vast computational resources and they",
    "start": "183799",
    "end": "189440"
  },
  {
    "text": "basically allow you to run them out uh you can take your own AI model and run it using those companies infrastructure",
    "start": "189440",
    "end": "196280"
  },
  {
    "text": "which is very convenient and also extremely expensive so that was it for basic terminology uh and now do we",
    "start": "196280",
    "end": "202799"
  },
  {
    "text": "realize what a models are let's talk about what a models really are because we realized that there are these you",
    "start": "202799",
    "end": "207959"
  },
  {
    "text": "know complex uh systems complex program s but how does an AI model actually look like in real life so at the end of the",
    "start": "207959",
    "end": "213879"
  },
  {
    "text": "day an AI model like most things is just a file or a couple of files and the way that an AI model can be stored is using",
    "start": "213879",
    "end": "220879"
  },
  {
    "text": "one of many different competing formats there isn't like one standard way to save an AI model however there is one",
    "start": "220879",
    "end": "226480"
  },
  {
    "text": "format that is by far the most popular which is the python pickle uh so veteran",
    "start": "226480",
    "end": "231519"
  },
  {
    "text": "hackers might be already familiar uh with the python pickle but even if you've never heard of this format before you might want to check out the official",
    "start": "231519",
    "end": "237959"
  },
  {
    "text": "documentation for it right so this is the way the official documentation for python pickle looks like and there's a",
    "start": "237959",
    "end": "244040"
  },
  {
    "text": "really subtle detail in the screenshot it's like a blink and you miss it type thing but eagley viewers might be able to notice this giant red box in the",
    "start": "244040",
    "end": "250879"
  },
  {
    "text": "middle of the page saying that the pickle model is insecure that you should never open untrusted pickles and that",
    "start": "250879",
    "end": "256079"
  },
  {
    "text": "it's possible to construct malicious pickles that execute arbitrary code so at this point you're probably",
    "start": "256079",
    "end": "262240"
  },
  {
    "text": "thinking okay but you just said that there's tons of different formats this is the one insecure format but the rest",
    "start": "262240",
    "end": "268040"
  },
  {
    "text": "of them are probably much better right so not exactly uh while the py framework",
    "start": "268040",
    "end": "273320"
  },
  {
    "text": "produces those pickles I just talked about uh another very big framework called teser flow produces models that can include Lambda layers which is a",
    "start": "273320",
    "end": "279720"
  },
  {
    "text": "fancy name for arbitrary python functions which will be executed when the model is open uh other popular",
    "start": "279720",
    "end": "285400"
  },
  {
    "text": "formats include the Cog format which is basically just a Docker container uh and the lam file made by Mozilla which is",
    "start": "285400",
    "end": "291639"
  },
  {
    "text": "literally just an executable file so you get my point AI models run code or at",
    "start": "291639",
    "end": "297759"
  },
  {
    "text": "least a lot of them do uh but what exact is that interesting because up until now I didn't really reinvent the wheel here",
    "start": "297759",
    "end": "303560"
  },
  {
    "text": "those are known problems some of them literally appear in official documentations uh but the reason that we",
    "start": "303560",
    "end": "309240"
  },
  {
    "text": "thought it was this was interesting uh no wait and uh at this point I think that most a users know to not run",
    "start": "309240",
    "end": "315440"
  },
  {
    "text": "untrusted models in their infrastructure but what we thought was wait what about a service providers we just said that",
    "start": "315440",
    "end": "322000"
  },
  {
    "text": "there's a huge Market from small startups to huge corporates everything in between and their entire business",
    "start": "322000",
    "end": "327479"
  },
  {
    "text": "model is that the you run your own AI models on their infrastructure so do all those companies realize that they're",
    "start": "327479",
    "end": "333199"
  },
  {
    "text": "basically letting you run your own arbitrary code on their platform and do they secure these Services properly so",
    "start": "333199",
    "end": "338479"
  },
  {
    "text": "we went to a little Mission uh in order to find this out and the way we like to find things out is by researching around",
    "start": "338479",
    "end": "344240"
  },
  {
    "text": "so we researched around in some uh popular a uh AI providers and the stuff we found was actually quite shocking uh",
    "start": "344240",
    "end": "351560"
  },
  {
    "text": "we were able to gain access to literally millions of private AI models data sets",
    "start": "351560",
    "end": "357400"
  },
  {
    "text": "source code Secrets logs prompt predictions and the ability to interfere with all this data uh and at this point",
    "start": "357400",
    "end": "364560"
  },
  {
    "text": "it should probably be mentioned that uh these confidential a artifacts are often",
    "start": "364560",
    "end": "370160"
  },
  {
    "text": "the unique intellectual property that differentiates a company from all its competitors and a well Trin model or",
    "start": "370160",
    "end": "376520"
  },
  {
    "text": "very good data set could literally go for millions of dollars so this is definitely confidential data that we should not have been able to access uh",
    "start": "376520",
    "end": "383759"
  },
  {
    "text": "so without further Ado I'd like to invite to the stage my good friend and colleague sag sadick in order to talk to",
    "start": "383759",
    "end": "388800"
  },
  {
    "text": "you about our first case of today uh which is how we hack TG face all right",
    "start": "388800",
    "end": "394120"
  },
  {
    "text": "thanks Eli um so let's get started with our first case sty of today which is how we hacked hugging face using a malicious",
    "start": "394120",
    "end": "400400"
  },
  {
    "text": "model file um so for anyone who's not familiar with the hugging face platform um this is what it looks like and you",
    "start": "400400",
    "end": "406800"
  },
  {
    "text": "can essentially think about hugging face as the equivalent of GitHub but just for AI um this means that any user or",
    "start": "406800",
    "end": "413400"
  },
  {
    "text": "company can actually upload their models their data sets or the or their source code into the platform in order to",
    "start": "413400",
    "end": "420520"
  },
  {
    "text": "either showcase it to the community or to enable collaborations for this projects now one of the nice features uh",
    "start": "420520",
    "end": "428599"
  },
  {
    "text": "nice convenient features in hugging face is that they actually let you test out models without requiring any setup from",
    "start": "428599",
    "end": "435240"
  },
  {
    "text": "your end so here in this picture you can see me interacting with the mistal model right in the hugging face platform and",
    "start": "435240",
    "end": "441280"
  },
  {
    "text": "all of the infrastructure required uh for this inference is actually being provided by hugging face the model is",
    "start": "441280",
    "end": "447199"
  },
  {
    "text": "actually running on hugging face back end now the reason we thought this feature is very interesting because as Eli said",
    "start": "447199",
    "end": "454479"
  },
  {
    "text": "earlier um some model formats can actually result in remote code execution when being loaded and I just said that",
    "start": "454479",
    "end": "461479"
  },
  {
    "text": "literally anyone can register to hugging face upload their model and start interacting with it using the inference",
    "start": "461479",
    "end": "467840"
  },
  {
    "text": "API so does that mean that anyone can actually execute code on hugging face",
    "start": "467840",
    "end": "474639"
  },
  {
    "text": "well to test this Theory out we first have to craft our malicious model now I",
    "start": "474639",
    "end": "479759"
  },
  {
    "text": "know this process may sound a bit intimidating but in practice it was not too difficult um what we ended up doing",
    "start": "479759",
    "end": "486280"
  },
  {
    "text": "was taking a legitimate model specifically a pickle based model and then patching it using this short python",
    "start": "486280",
    "end": "493240"
  },
  {
    "text": "script in order to embed malicious functionalities within it so when the model is loaded it will actually execute",
    "start": "493240",
    "end": "500039"
  },
  {
    "text": "our own quote unquote malicious payload uh additionally so uh we produced a",
    "start": "500039",
    "end": "505800"
  },
  {
    "text": "malicious model and we can now upload it to the hugging face platform and now we can start interacting with it uh using",
    "start": "505800",
    "end": "512399"
  },
  {
    "text": "the inference API feature of hugging face so here in this picture you can see me asking the model a legitimate",
    "start": "512399",
    "end": "518680"
  },
  {
    "text": "question and that it is able to provide me with a legitimate response however",
    "start": "518680",
    "end": "524000"
  },
  {
    "text": "when I address the model using the backd door keyword and ask it to execute the Linux ID command it actually complies",
    "start": "524000",
    "end": "530640"
  },
  {
    "text": "and the Linux ID command is being executed and as you can see we are running with root privileges on the",
    "start": "530640",
    "end": "536160"
  },
  {
    "text": "underlying Linux machine um now now I know some of you might be a bit skeptical thinking that",
    "start": "536160",
    "end": "542320"
  },
  {
    "text": "this is just the model hallucinating stuff and that the uh ID command was never run so just to assure you we also",
    "start": "542320",
    "end": "549440"
  },
  {
    "text": "asked the model to execute a fully blown reverse shell to us um which obviously worked and we can now execute any",
    "start": "549440",
    "end": "555760"
  },
  {
    "text": "command that we want right on huging face back",
    "start": "555760",
    "end": "560040"
  },
  {
    "text": "end so uh the question is what's next what what can we actually do with this type of access so we know that many",
    "start": "564279",
    "end": "571959"
  },
  {
    "text": "companies actually use hugging face in order to store their private models and their private data set and source code",
    "start": "571959",
    "end": "577480"
  },
  {
    "text": "and we were thinking whether this kind of access that we now have can be actually leveraged into interfering with",
    "start": "577480",
    "end": "584040"
  },
  {
    "text": "other customers can we actually uh access their models or their data sets so in order to figure that out we first",
    "start": "584040",
    "end": "590519"
  },
  {
    "text": "have to understand uh what type of infrastructure is it where exactly are we running so the answer for this",
    "start": "590519",
    "end": "596800"
  },
  {
    "text": "question is that we are actually being run within a pod uh within a managed kubernetes cluster uh specifically this",
    "start": "596800",
    "end": "602640"
  },
  {
    "text": "is an AWS eks cluster um regarding privileges within the container uh we",
    "start": "602640",
    "end": "607760"
  },
  {
    "text": "are running as root which is quite nice always convenient um but regarding kubernetes permissions um unfortunately",
    "start": "607760",
    "end": "615000"
  },
  {
    "text": "we only have a very limited service account uh which is quite of a bummer because if we had I don't know a a",
    "start": "615000",
    "end": "621560"
  },
  {
    "text": "cluster admin service account mounted to our pod we could use that in order to laterally move within the cluster and",
    "start": "621560",
    "end": "627480"
  },
  {
    "text": "interfere with other customers payload uh but unfortunately in this case we only have a very limited service",
    "start": "627480",
    "end": "634760"
  },
  {
    "text": "account so just to illustrate the current situation a bit better um we are executing code within our own pod uh",
    "start": "634760",
    "end": "641600"
  },
  {
    "text": "which is hosted on a kubernetes node and besides our pod we can assume we don't know this for sure but we can assume",
    "start": "641600",
    "end": "648200"
  },
  {
    "text": "that there are pods of other customers as well and besides this node there are multiple other nodes all hosted on the",
    "start": "648200",
    "end": "654760"
  },
  {
    "text": "same AWS eks cluster and essentially our goal for This research is to be able to",
    "start": "654760",
    "end": "660040"
  },
  {
    "text": "interfere with the PODS of other customers so as I said before we really",
    "start": "660040",
    "end": "667040"
  },
  {
    "text": "want a privileged kubernetes service account this would be the ideal way for us in order to laterally move within",
    "start": "667040",
    "end": "672360"
  },
  {
    "text": "this cluster and luckily for us Eli and I actually come from a cloud security research background and we are familiar",
    "start": "672360",
    "end": "679360"
  },
  {
    "text": "with this very cool trick that have actually worked for us multiple times in the past where if you are running within",
    "start": "679360",
    "end": "685360"
  },
  {
    "text": "an AWS eks cluster which in this case we are and your pod is accessible to the",
    "start": "685360",
    "end": "692040"
  },
  {
    "text": "imds to the instance metadata service um you could actually fetch the AWS",
    "start": "692040",
    "end": "697320"
  },
  {
    "text": "credentials from the imds then using the AWS API transform them into a kubernetes",
    "start": "697320",
    "end": "704040"
  },
  {
    "text": "identity that has the nodes role inside that cluster and that identity is",
    "start": "704040",
    "end": "709480"
  },
  {
    "text": "actually a very privileged identity within the kubernetes cluster now if you want to read more about this trick we",
    "start": "709480",
    "end": "715920"
  },
  {
    "text": "actually documented it in our blog about hugging face so you should really check that one out but if we'll summarize the",
    "start": "715920",
    "end": "722720"
  },
  {
    "text": "whole attack from start to finish uh it would look something like this so we as attackers crafted a malicious Model F",
    "start": "722720",
    "end": "729720"
  },
  {
    "text": "specifically a pi model um then we upload it to the hugging face infant service which gave us remote code",
    "start": "729720",
    "end": "736440"
  },
  {
    "text": "execution within their kubernetes cluster then uh we use the imds trick that I just described in order to",
    "start": "736440",
    "end": "743279"
  },
  {
    "text": "elevate our kubernetes privileges which gave us access to the kubernetes Secret store and using the secrets that we",
    "start": "743279",
    "end": "750639"
  },
  {
    "text": "found within the kues cluster we were actually able uh to get access to all of the models data sets and source code",
    "start": "750639",
    "end": "758519"
  },
  {
    "text": "that is hosted on the platform now when I'm saying all of the models data sets and source code I mean both the public",
    "start": "758519",
    "end": "766360"
  },
  {
    "text": "AI assets and the private AI assets of hugging face",
    "start": "766360",
    "end": "771480"
  },
  {
    "text": "customers now um in terms of responsible disclosure of course that we reported all of the issues that we found to",
    "start": "771480",
    "end": "777600"
  },
  {
    "text": "hugging face and uh we ended up actually having an extensive collaboration with them in order to fix the issues that we",
    "start": "777600",
    "end": "783920"
  },
  {
    "text": "found and to make their platform even more secure uh in the future and this would also be a good point to mention",
    "start": "783920",
    "end": "790279"
  },
  {
    "text": "that we never actually interfered with any huging face customers data and that all of the test that we actually",
    "start": "790279",
    "end": "795800"
  },
  {
    "text": "performed were performed only on secondary count of hours especially not to interfere with other",
    "start": "795800",
    "end": "801399"
  },
  {
    "text": "customers um all right so now that we are done with our first case study of the day let's move to the next one which",
    "start": "801399",
    "end": "808399"
  },
  {
    "text": "is how we have act replicate using a malicious model container so for anyone who's not",
    "start": "808399",
    "end": "814360"
  },
  {
    "text": "familiar with the replicate platform um this is what it looks like and essentially replicate is a very popular",
    "start": "814360",
    "end": "819639"
  },
  {
    "text": "AI as a service provider and they actually have more than two million registered users which is quite a lot",
    "start": "819639",
    "end": "825279"
  },
  {
    "text": "and their offering is that they actually let you choose one of their uh existing models in their model model gallery or",
    "start": "825279",
    "end": "832000"
  },
  {
    "text": "uh you can upload your own model and they let you uh scale that model using their infrastructure which they provide",
    "start": "832000",
    "end": "838240"
  },
  {
    "text": "a very convenient HTTP API for now in order to upload your model to",
    "start": "838240",
    "end": "844000"
  },
  {
    "text": "replicate you first have to wrap it in something that is called a cog container so this is a screenshot from the off",
    "start": "844000",
    "end": "850519"
  },
  {
    "text": "official data page of uh the Cog project as as you can see uh Cog is an open source tool that let you package machine",
    "start": "850519",
    "end": "857199"
  },
  {
    "text": "learning models into a production ready container then this container can be actually deployed either to your own",
    "start": "857199",
    "end": "863519"
  },
  {
    "text": "infrastructure or to replicate so we were reading this and thinking",
    "start": "863519",
    "end": "869720"
  },
  {
    "text": "does that mean that anyone can deploy a container to replicate uh well to test this we first",
    "start": "869720",
    "end": "875480"
  },
  {
    "text": "have to craft our malicious cor container which was very easy um all we had to do was to initialize a new",
    "start": "875480",
    "end": "881440"
  },
  {
    "text": "container using the cogit uh then we modified one of the Python files there that instead of loading the AI model it",
    "start": "881440",
    "end": "889040"
  },
  {
    "text": "will simply treat our prompt as a Linux command execute it and give us the",
    "start": "889040",
    "end": "894120"
  },
  {
    "text": "results and now that our malicious Co container is actually ready uh we can push push it to the replicate platform",
    "start": "894120",
    "end": "900600"
  },
  {
    "text": "in order to interact with it uh using their platform so um our model is now",
    "start": "900600",
    "end": "906480"
  },
  {
    "text": "available on replicate and we can start interacting with it so uh I use the ID command once again as my prompt and when",
    "start": "906480",
    "end": "913720"
  },
  {
    "text": "I let the model run on on replicate infrastructure uh you can see that once again we are running as root uh which is",
    "start": "913720",
    "end": "920680"
  },
  {
    "text": "uh once again very convenient and the question is what's next what can we do",
    "start": "920680",
    "end": "925959"
  },
  {
    "text": "this time in order to actually interfere with replic customers um so once again we want to",
    "start": "925959",
    "end": "932199"
  },
  {
    "text": "know where exactly are we running what type of infrastructure is it and uh the answer for this is that this time we are",
    "start": "932199",
    "end": "938800"
  },
  {
    "text": "running within a managed kubernetes cluster uh provided by either gcp or another cloud provider uh named corve",
    "start": "938800",
    "end": "946240"
  },
  {
    "text": "which really depends on what Hardware did we choose uh for our model to run on",
    "start": "946240",
    "end": "951600"
  },
  {
    "text": "now uh regarding Linux privileges we are running as root which is nice um but regarding kubernetes permissions um this",
    "start": "951600",
    "end": "959480"
  },
  {
    "text": "time we don't even have access to the API server this means that even if we",
    "start": "959480",
    "end": "964519"
  },
  {
    "text": "did manage to find a way to escalate our privileges within that cluster the kubernetes API server is not even",
    "start": "964519",
    "end": "970800"
  },
  {
    "text": "available to us we would have nothing to do with that service account now this means that we would need to find another",
    "start": "970800",
    "end": "977079"
  },
  {
    "text": "way in order to Pivot within that cluster so uh we started doing some",
    "start": "977079",
    "end": "982319"
  },
  {
    "text": "Network Recon and at some point we actually stumbled upon um this very special network connection so as you can",
    "start": "982319",
    "end": "988680"
  },
  {
    "text": "see I issued the N command and we have an established connection to an internal host on Port",
    "start": "988680",
    "end": "995399"
  },
  {
    "text": "6379 now the reason that I'm saying that this network connection is quite special is because although we can see it",
    "start": "995399",
    "end": "1003079"
  },
  {
    "text": "meaning that it occurs within our Network namespace we cannot determine who is the parent process for this",
    "start": "1003079",
    "end": "1009000"
  },
  {
    "text": "network connection meaning that the parent process is actually running in a different p namespace in a different",
    "start": "1009000",
    "end": "1016199"
  },
  {
    "text": "container um so luckily we are running as root and we have sufficient Network capabilities in order to actually",
    "start": "1016199",
    "end": "1022920"
  },
  {
    "text": "investigate this network connection using tools like TCP dump and wi shark and upon investigation we actually",
    "start": "1022920",
    "end": "1029199"
  },
  {
    "text": "concluded that this is plain text redis and the that this internal redis database is actually being used as a",
    "start": "1029199",
    "end": "1036319"
  },
  {
    "text": "Quee for inference tasks so whenever you go to the replicate platform and enter",
    "start": "1036319",
    "end": "1041798"
  },
  {
    "text": "your prompts uh at the replicate platform a new task will be added internally to that queue and then a",
    "start": "1041799",
    "end": "1047798"
  },
  {
    "text": "worker pod with in the kubernetes cluster will actually fetch the task execute it process it and then uh insert",
    "start": "1047799",
    "end": "1055200"
  },
  {
    "text": "the result back to the queue so we thought that this is very interesting",
    "start": "1055200",
    "end": "1060320"
  },
  {
    "text": "because maybe this internal red task Q is actually serving more customers and",
    "start": "1060320",
    "end": "1065400"
  },
  {
    "text": "not only our account maybe it's shared among replicate customers so uh we try",
    "start": "1065400",
    "end": "1070559"
  },
  {
    "text": "to connect to it uh using the standard ready CLI but unfortunately we get an error saying that authentication is",
    "start": "1070559",
    "end": "1077400"
  },
  {
    "text": "required and that we need need to provide a username and a password in order to authenticate but do we need to provide a",
    "start": "1077400",
    "end": "1084960"
  },
  {
    "text": "username and a password I mean we already have a pre-established authenticated Connection in a neighbor",
    "start": "1084960",
    "end": "1091679"
  },
  {
    "text": "container and we know that this connection is actually authenticated because we can see queries in the",
    "start": "1091679",
    "end": "1097320"
  },
  {
    "text": "network capture so the question is what can we do in order to take advantage of the current situation and abuse the fact",
    "start": "1097320",
    "end": "1104480"
  },
  {
    "text": "that our neighbor container has an already established and authenticated con connection to that",
    "start": "1104480",
    "end": "1110760"
  },
  {
    "text": "database so just to illustrate the current situation a bit better um we are running code within our own container",
    "start": "1110760",
    "end": "1117080"
  },
  {
    "text": "which is hosted on a kubernetes pod and besides our container there is a different container we assume that this",
    "start": "1117080",
    "end": "1123799"
  },
  {
    "text": "is some sort of a management container that has an active connection to an internal radi tasq now the reason we can",
    "start": "1123799",
    "end": "1130640"
  },
  {
    "text": "see this connection is because we're sharing the same network namespace uh with that management container and upon",
    "start": "1130640",
    "end": "1136159"
  },
  {
    "text": "investigation we actually concluded that this connection is also plain text and",
    "start": "1136159",
    "end": "1141880"
  },
  {
    "text": "pre-authenticated so the way uh we leveraged our type of access in order to",
    "start": "1141880",
    "end": "1147480"
  },
  {
    "text": "uh move laterally within the cluster is that uh we ended up injecting using a",
    "start": "1147480",
    "end": "1153000"
  },
  {
    "text": "TCP injection attack in order to hijack uh that uh authenticated connection and",
    "start": "1153000",
    "end": "1159400"
  },
  {
    "text": "inject ques of hours uh to that Rel database and what we ended up injecting",
    "start": "1159400",
    "end": "1165520"
  },
  {
    "text": "is this very maliciously looking minifi luas script which essentially proves",
    "start": "1165520",
    "end": "1170880"
  },
  {
    "text": "that we can both read and modify all of the entries within that R database and",
    "start": "1170880",
    "end": "1177000"
  },
  {
    "text": "once we quote unquote compromised this R database we also concluded that other",
    "start": "1177000",
    "end": "1182559"
  },
  {
    "text": "replicate customers use the same database um as we initially suspected so uh just to illustrate the",
    "start": "1182559",
    "end": "1189280"
  },
  {
    "text": "whole attack from start to finish it would look something like this first we crafted a malicious SC container um then",
    "start": "1189280",
    "end": "1195840"
  },
  {
    "text": "we upload it to the replica INF frame service which gave us remote code execution within their kubernetes",
    "start": "1195840",
    "end": "1201919"
  },
  {
    "text": "cluster then uh we use the TCP injection attack in order to bypass authentication",
    "start": "1201919",
    "end": "1207280"
  },
  {
    "text": "to the centralized red database where we found all of the prompts and predictions",
    "start": "1207280",
    "end": "1213200"
  },
  {
    "text": "meaning the answers of the prompts uh of replicate customers and besides finding",
    "start": "1213200",
    "end": "1219080"
  },
  {
    "text": "all of the prompts and predictions of replicate customers H we also noted that the data within that database is",
    "start": "1219080",
    "end": "1225840"
  },
  {
    "text": "actually live data meaning that if we were to interfere with the data if we were to modify one of the entries it",
    "start": "1225840",
    "end": "1232640"
  },
  {
    "text": "would actually affect uh replicate customers in real time and conveniently uh the data that",
    "start": "1232640",
    "end": "1239520"
  },
  {
    "text": "was found within that R database is actually for both public and private models posted on that",
    "start": "1239520",
    "end": "1246000"
  },
  {
    "text": "platform so uh in terms of responsible disclosure of course that we reported all of the issues that we found to",
    "start": "1246000",
    "end": "1251640"
  },
  {
    "text": "replicate and we collaborated with them in order to fix the issues that we found we actually had like quite a few of",
    "start": "1251640",
    "end": "1258120"
  },
  {
    "text": "productive Zoom calls where we discussed what would be the best way in order to patch the issues that we found and they",
    "start": "1258120",
    "end": "1264080"
  },
  {
    "text": "ended up implementing what we call defense in Def in order to make sure that the issues that we found H won't be",
    "start": "1264080",
    "end": "1270520"
  },
  {
    "text": "able to uh be replicated in the future and uh with that being said I'd like now",
    "start": "1270520",
    "end": "1276279"
  },
  {
    "text": "to reinvite Eli to talk to you about how we hacked sap using a malicious training",
    "start": "1276279",
    "end": "1283080"
  },
  {
    "text": "procedure thank you Sagi uh okay so after we talked about how we act to",
    "start": "1283080",
    "end": "1288600"
  },
  {
    "text": "platforms using malicious models let's talk about how we act sap using a malicious trading procedure so when we",
    "start": "1288600",
    "end": "1294919"
  },
  {
    "text": "talk about sap uh probably thinking of the flagship product of sap the sap Erp system you're probably imagining all",
    "start": "1294919",
    "end": "1301440"
  },
  {
    "text": "these like crazy dashboards with tons of graphs and charts and business data but the truth of sap today is actually much",
    "start": "1301440",
    "end": "1307039"
  },
  {
    "text": "more than that they're a modern Cloud company with a large suite of cloud services and the na Service as well",
    "start": "1307039",
    "end": "1312880"
  },
  {
    "text": "which looks actually kind of the same but this service called sap core uh allows for",
    "start": "1312880",
    "end": "1320320"
  },
  {
    "text": "lots of actions with AI uh models not only does it allow to uh host AI models",
    "start": "1320320",
    "end": "1325400"
  },
  {
    "text": "and applications like the previous two services but it also allows you to train AI models which looked very interesting",
    "start": "1325400",
    "end": "1331520"
  },
  {
    "text": "to us so how do you train an AI model on sap so the way that it works is actually",
    "start": "1331520",
    "end": "1336679"
  },
  {
    "text": "quite simple uh you provide one simple configuration file and you're basically good to go uh your training procedure just runs and the way the configuration",
    "start": "1336679",
    "end": "1343320"
  },
  {
    "text": "file works is also quite simple as you can see in the example here you basically provide all the flags you want",
    "start": "1343320",
    "end": "1348919"
  },
  {
    "text": "to to pass the container uh what sort of container image I want to use what sort of uh Flags I want to add and most",
    "start": "1348919",
    "end": "1354559"
  },
  {
    "text": "importantly what command do I want to run within that container in this uh particular example it's a python script",
    "start": "1354559",
    "end": "1360520"
  },
  {
    "text": "but it can be literally anything including ER shell so essentially running code and sap is not a bug it's a",
    "start": "1360520",
    "end": "1366760"
  },
  {
    "text": "feature no vulnerability needed so now that we run code and sap uh the question",
    "start": "1366760",
    "end": "1372240"
  },
  {
    "text": "is what's next uh what exactly uh is happening where exactly are we running and how can we exploit this new",
    "start": "1372240",
    "end": "1378799"
  },
  {
    "text": "environment so where are we running unsurprisingly we're once again running on a kubernetes cluster uh this time",
    "start": "1378799",
    "end": "1384640"
  },
  {
    "text": "it's not a managed one it's just an unmanaged kubernetes cluster so all the relevant tricks from before will not",
    "start": "1384640",
    "end": "1390279"
  },
  {
    "text": "work here uh how are we running as roots uh this time we're not running as route we're running as the nobody user which",
    "start": "1390279",
    "end": "1395480"
  },
  {
    "text": "is kind of a bummer uh but maybe finally we'll have an interesting coated service account interesting permissions that we",
    "start": "1395480",
    "end": "1401679"
  },
  {
    "text": "can leverage in order to laterally move within the system but this time we don't even have any service account uh so",
    "start": "1401679",
    "end": "1407880"
  },
  {
    "text": "absolutely nothing in that direction uh so we're looking at this uh sort of starting picture and we realize that",
    "start": "1407880",
    "end": "1413600"
  },
  {
    "text": "we're in a slightly worse starting position than the previous two researches however we do have one interesting Advantage uh that we didn't",
    "start": "1413600",
    "end": "1420080"
  },
  {
    "text": "have previously which is that we can control the entire configuration of the Pod we create so let's add some",
    "start": "1420080",
    "end": "1427159"
  },
  {
    "text": "interesting Flags to the container and modify the environment to fit ourselves better first order of business run me as",
    "start": "1427159",
    "end": "1433640"
  },
  {
    "text": "route please however this does not work I'm getting blocked and I cannot change my ID to zero which is the root user ID",
    "start": "1433640",
    "end": "1439640"
  },
  {
    "text": "but there are so many other interesting flags that I can add to the Pod I can try to make my container a privilege container I can make a new network name",
    "start": "1439640",
    "end": "1446400"
  },
  {
    "text": "space a new P name space a new uh host disk or anything of the sort however",
    "start": "1446400",
    "end": "1451640"
  },
  {
    "text": "none of those things work every sort of interesting flag that I try to add gets immediately blocked by the admission controller and the container won't even",
    "start": "1451640",
    "end": "1458400"
  },
  {
    "text": "allow itself to run when I add interesting Flags to it so we're very limited with our compute which is",
    "start": "1458400",
    "end": "1463480"
  },
  {
    "text": "frustrating but this is still kubernetes we have an internal network uh which can contain many interesting things so let's",
    "start": "1463480",
    "end": "1469240"
  },
  {
    "text": "try to scan the internal Network and find interesting stuff but that also doesn't work because every Network",
    "start": "1469240",
    "end": "1475120"
  },
  {
    "text": "request that we try to send gets immediately blocked by some sort of firewall and we don't even get a response from the actual resource we're",
    "start": "1475120",
    "end": "1480840"
  },
  {
    "text": "trying to access so this seemed interesting to us a firewall what sort of firewall is it so in reality that",
    "start": "1480840",
    "end": "1487960"
  },
  {
    "text": "wasn't exactly a firewall it was a steel uh which is a service mesh solution basically allows you to manage your",
    "start": "1487960",
    "end": "1494080"
  },
  {
    "text": "kubernetes service MH Network in a centralized way blah blah blah but in this case it kind of acted like a firewall would it stood between me and",
    "start": "1494080",
    "end": "1500440"
  },
  {
    "text": "the traffic that I wanted to send and I wanted to get rid of it so how exactly does this steer work and is there",
    "start": "1500440",
    "end": "1506760"
  },
  {
    "text": "something interesting that I can do with it so I did a little bit of Googling I experimented with ISO and apparently",
    "start": "1506760",
    "end": "1512039"
  },
  {
    "text": "this is the way sto works it sets all these traffic rules those are called IP tables rules within your system and you",
    "start": "1512039",
    "end": "1517799"
  },
  {
    "text": "don't have to actually read them they're actually quite simple it says take all the traffic going in and out pass it through is first then is can decide what",
    "start": "1517799",
    "end": "1524480"
  },
  {
    "text": "to do with it however there was one interesting stipulation that I just couldn't really believe my eyes when I",
    "start": "1524480",
    "end": "1530320"
  },
  {
    "text": "saw it which is take all the traffic coming in and out except traffic from",
    "start": "1530320",
    "end": "1536120"
  },
  {
    "text": "the user ID 1337 so I was looking at this like scratching my head why exactly is the",
    "start": "1536120",
    "end": "1543000"
  },
  {
    "text": "uid leit explicitly excluded from all the rules within this uh IP tables uh",
    "start": "1543000",
    "end": "1548200"
  },
  {
    "text": "table so I Googled and apparently this is not an sap thing it's ano thing 1337",
    "start": "1548200",
    "end": "1554919"
  },
  {
    "text": "is sto's own user ID and this is the way that sto excludes itself from its rules so I said okay this kind of makes sense",
    "start": "1554919",
    "end": "1562520"
  },
  {
    "text": "I guess but what if I can read this correctly then the uid Le would be completely",
    "start": "1562520",
    "end": "1567960"
  },
  {
    "text": "exempt from all the traffic rules here and I know that I can't really set my uid to zero I can't really be root but",
    "start": "1567960",
    "end": "1573240"
  },
  {
    "text": "maybe I can just set my uid to 337 and see what happens so this is exactly what I did uh and this is how it worked uh in",
    "start": "1573240",
    "end": "1580159"
  },
  {
    "text": "uh previous uh in my previous attempts when my user id was nobody and I tried to access something within the internal",
    "start": "1580159",
    "end": "1585320"
  },
  {
    "text": "Network I immediately got a bad get response from ISO basically said you're blocked and you can't access this",
    "start": "1585320",
    "end": "1590520"
  },
  {
    "text": "resource but once I changed my user ID to 1337 and tried the exact same request I suddenly get a 200 okay and I can do",
    "start": "1590520",
    "end": "1596760"
  },
  {
    "text": "whatever I want so I can now have unrestricted access to sapal network just because I set my uid to Lite so",
    "start": "1596760",
    "end": "1605240"
  },
  {
    "text": "amazing I have un restricted access to the network now what what's the next move so normally I would say Let's scan",
    "start": "1605240",
    "end": "1612360"
  },
  {
    "text": "the network let's fire up nmap try to find all these interesting hosts and ports that we can check manually however",
    "start": "1612360",
    "end": "1617720"
  },
  {
    "text": "this time we have an amazing cheat code up Our Sleeve which is ISO itself ISO has all these rules of stuff that we",
    "start": "1617720",
    "end": "1624200"
  },
  {
    "text": "shouldn't be able to access that stuff that were explicitly blocked for us to see let's take a look at all ofo's rules",
    "start": "1624200",
    "end": "1630039"
  },
  {
    "text": "and see all the hosts and ports that we can check so this is exactly what we did we went uh by the list and this is the",
    "start": "1630039",
    "end": "1636159"
  },
  {
    "text": "stuff that we found uh the first thing we found was a server called Loki uh Loki is a log agregation system made by",
    "start": "1636159",
    "end": "1643120"
  },
  {
    "text": "grafana and this is basically the solution that sap used in order to collect all the logs from the service they stored all the using Loki uh now",
    "start": "1643120",
    "end": "1650240"
  },
  {
    "text": "Loki has a SL config API which is supposed to print out the full configuration of the server so we tried",
    "start": "1650240",
    "end": "1656520"
  },
  {
    "text": "accessing SL config and we saw the configuration within the configuration was something that we really didn't",
    "start": "1656520",
    "end": "1662039"
  },
  {
    "text": "expect to see which was a bunch of AWS secret access keys and those secret access Keys gave us access to Loki's S3",
    "start": "1662039",
    "end": "1668840"
  },
  {
    "text": "bucket that S3 bucket contained a huge Trove of internal sap logs both from sap",
    "start": "1668840",
    "end": "1675240"
  },
  {
    "text": "AI Core the service and from customers own resour ources meaning that those logs contained confidential customer",
    "start": "1675240",
    "end": "1680880"
  },
  {
    "text": "data so already off to a bad start uh that was the first thing we found the second thing we found was a bunch of EFS",
    "start": "1680880",
    "end": "1687840"
  },
  {
    "text": "file shares and if you're an A pentester or Redeemer then definitely listen up on this one because this trick titles work",
    "start": "1687840",
    "end": "1693519"
  },
  {
    "text": "for us on countless different engagements since we did this uh so an EFS file share is uh EFS is basically a",
    "start": "1693519",
    "end": "1700440"
  },
  {
    "text": "network based storage service it's made by AWS and it's a really weird sort of Beast because on one hand it's this",
    "start": "1700440",
    "end": "1705720"
  },
  {
    "text": "modern managed uh cloud storage service but on the other hand it runs on the NFS",
    "start": "1705720",
    "end": "1712279"
  },
  {
    "text": "protocol that NFS protocol the protocol invented in the 1980s that has barely",
    "start": "1712279",
    "end": "1717840"
  },
  {
    "text": "changed anything since the 1980s which leads to all sorts of vintage security problems for example an EFS share by",
    "start": "1717840",
    "end": "1725200"
  },
  {
    "text": "default does not require any authentication in order to log in you can as long as you have network access as long as you can see the actual share",
    "start": "1725200",
    "end": "1731880"
  },
  {
    "text": "you should be able to access it without needing to provide any sort of credentials so we wanted to see thatp",
    "start": "1731880",
    "end": "1737279"
  },
  {
    "text": "fall victim to this sort of insecure default and the answer was yes uh in uh those EFS shares you can see that the",
    "start": "1737279",
    "end": "1743799"
  },
  {
    "text": "command I'm running is NFS LS all I have to supply is the path I don't have to do a username a password a token or",
    "start": "1743799",
    "end": "1750039"
  },
  {
    "text": "anything anyone within the internal Network could have seen those shares without needing to do basically anything",
    "start": "1750039",
    "end": "1755360"
  },
  {
    "text": "uh and within those shares we found a bunch of folders categorized by customer ID and within each customer there were",
    "start": "1755360",
    "end": "1761559"
  },
  {
    "text": "uh a bunch of private model files bunch of private source code and bunch of data sets so confidential AI data that was",
    "start": "1761559",
    "end": "1769200"
  },
  {
    "text": "basically exposed within the network uh without any credentials on it uh so",
    "start": "1769200",
    "end": "1774679"
  },
  {
    "text": "those were the first first two things we found but the final thing we found was by far the most shocking so let's talk about tillor uh Helm is a very popular",
    "start": "1774679",
    "end": "1783000"
  },
  {
    "text": "package manager for kubernetes uh and up till version two it used to have a server component to it which was called",
    "start": "1783000",
    "end": "1788320"
  },
  {
    "text": "tiller tiller was the server of Helm uh the way the server works it has an API a",
    "start": "1788320",
    "end": "1793440"
  },
  {
    "text": "grpc API as kubernetes loves to do uh and once again this API does not require",
    "start": "1793440",
    "end": "1798880"
  },
  {
    "text": "any authentication by default little pattern uh for the services we found here uh so we're once again wondering",
    "start": "1798880",
    "end": "1804600"
  },
  {
    "text": "can we actually get get try to access the server without any credentials and maybe try to read some of the packages",
    "start": "1804600",
    "end": "1810440"
  },
  {
    "text": "within that Sol server so this is what we did uh we tried to read the package and within the first package we found we",
    "start": "1810440",
    "end": "1816039"
  },
  {
    "text": "actually found a bunch of credentials uh so those credentials were to Sap's Docker container Registries and to Sap's",
    "start": "1816039",
    "end": "1823000"
  },
  {
    "text": "artifactory server which stores build artifacts if you take a closer look here you can see that the usernames are are",
    "start": "1823000",
    "end": "1828600"
  },
  {
    "text": "admin admin at sap and admin 2 so a very strong set of credentials meaning that",
    "start": "1828600",
    "end": "1834840"
  },
  {
    "text": "an attacker with the same L of access we had could not only have read the internal images Docker images stored",
    "start": "1834840",
    "end": "1840039"
  },
  {
    "text": "within the server but also interfered with them possibly planting malicious code into them and have that code",
    "start": "1840039",
    "end": "1845919"
  },
  {
    "text": "execute on whoever uses those images but this was only using the read command on",
    "start": "1845919",
    "end": "1852039"
  },
  {
    "text": "tiller tiller also has an install command so I wanted to know can we",
    "start": "1852039",
    "end": "1857480"
  },
  {
    "text": "actually just install arbitrary Helm packages on the scnes cluster short answer yes long answer is that we",
    "start": "1857480",
    "end": "1865120"
  },
  {
    "text": "crafted uh a malicious Helm package uh which basically said create a new pod",
    "start": "1865120",
    "end": "1870279"
  },
  {
    "text": "Mount that pod with cluster admin credentials and have that pod execute a reverse sh back to us uh and once we got",
    "start": "1870279",
    "end": "1875559"
  },
  {
    "text": "the reverse show we executed the cube CTL can I command which lists all the things that you can do within the",
    "start": "1875559",
    "end": "1881039"
  },
  {
    "text": "cluster uh this was the output of that command it's actually a very corrupt screenshot this is the fullest of",
    "start": "1881039",
    "end": "1887039"
  },
  {
    "text": "privileges we had with the kubernetes cluster uh so obviously a very strong set of credentials with this access we",
    "start": "1887039",
    "end": "1893840"
  },
  {
    "text": "could have interfered with everything going on in sapi core we could have interfer with live uh training",
    "start": "1893840",
    "end": "1899960"
  },
  {
    "text": "procedures with live uh AI models getting run uh with live AI applications",
    "start": "1899960",
    "end": "1905080"
  },
  {
    "text": "uh but this wasn't all because at this point we got reminded that when we set up our sapi core account we got prompted",
    "start": "1905080",
    "end": "1911720"
  },
  {
    "text": "to enter all sorts of cloud credentials for ourselves when I needed to use S3 to store my files I got prompted to enter",
    "start": "1911720",
    "end": "1917679"
  },
  {
    "text": "my AWS credentials when I wanted to use dat L I had to input my Hanah credentials when I wanted to pull images",
    "start": "1917679",
    "end": "1924080"
  },
  {
    "text": "Docker images I had to put my Docker Hub credentials so we wanted to see could an attacker with the same level of access we had gain gain access to all of those",
    "start": "1924080",
    "end": "1930919"
  },
  {
    "text": "secrets so we obviously tested this on our own accounts we didn't want to actually access customer Secrets uh and",
    "start": "1930919",
    "end": "1936840"
  },
  {
    "text": "the answer is yes we were able to access all of those secrets in plain text here you can see uh blurred obviously but you",
    "start": "1936840",
    "end": "1943120"
  },
  {
    "text": "can imagine uh my own AWS secret access Keys uh my own own uh doer darker image",
    "start": "1943120",
    "end": "1950039"
  },
  {
    "text": "P secret uh meaning basically an attacker with the same level of access we had could have gained access to all of Sap's customers uh sort of a Azure",
    "start": "1950039",
    "end": "1957919"
  },
  {
    "text": "credentials AWS credentials Alibaba credentials all the cloud credentials that were required in order to operate the service and an attacker with the",
    "start": "1957919",
    "end": "1964799"
  },
  {
    "text": "same level of access could basically not only interfere with sap environments but also spread from sap to Sap's customers",
    "start": "1964799",
    "end": "1970919"
  },
  {
    "text": "environments independent of sap so a recap uh kind of overwhelming quick",
    "start": "1970919",
    "end": "1977240"
  },
  {
    "text": "recap of uh of this attack we basically started with uh legitimate uh privileges",
    "start": "1977240",
    "end": "1982679"
  },
  {
    "text": "uh getting legitimate access to the AI workflows engine uh which all happened within a DMZ uh a closed sort of network",
    "start": "1982679",
    "end": "1989840"
  },
  {
    "text": "uh and once we were able to escape from that DMZ using our sto bypass we gained access to the internal Network within",
    "start": "1989840",
    "end": "1995399"
  },
  {
    "text": "the internal Network we were able to find an exposed Loki instance which exposed internal customer logs a bunch of exposed DFS shares which exposed",
    "start": "1995399",
    "end": "2002039"
  },
  {
    "text": "private customers models and data sets and finally an exposed Helm server that gave us admin access to Sap's",
    "start": "2002039",
    "end": "2008559"
  },
  {
    "text": "artifactory server Sap's container Registries and full control over the kubernetes cluster which gave us wide",
    "start": "2008559",
    "end": "2013679"
  },
  {
    "text": "access to customer credentials and customer data so quick recap uh in terms of",
    "start": "2013679",
    "end": "2021320"
  },
  {
    "text": "impact of this attack we were able to access customers models data sets source code and internal logs and on top of all",
    "start": "2021320",
    "end": "2027679"
  },
  {
    "text": "of those artifacts we're also able to access their Cloud secrets so of course all those issues",
    "start": "2027679",
    "end": "2034039"
  },
  {
    "text": "were reported to sap as soon as we found them and we actually worked very closely with sap security team in order to help",
    "start": "2034039",
    "end": "2039519"
  },
  {
    "text": "fix the bugs uh there was actually a couple of iterations of fixes that we did with them in order to make sure that",
    "start": "2039519",
    "end": "2044760"
  },
  {
    "text": "this sort of attack can never be replicated again at least not in the same area that we did uh and of course",
    "start": "2044760",
    "end": "2050079"
  },
  {
    "text": "all the secrets that we have been able to access have been rotated since uh so you don't have to worry about that so",
    "start": "2050079",
    "end": "2056638"
  },
  {
    "text": "these were our three case studies for today uh now let's something up with the takeaways that uh we learned and we want you to leave with here today on how to",
    "start": "2056639",
    "end": "2062800"
  },
  {
    "text": "secure AI environments so the first thing we want you to leave with here today is that AI models are code or at",
    "start": "2062800",
    "end": "2069398"
  },
  {
    "text": "least they often are and they should be isolated accordingly meaning that you should always properly separate between those external AI models and your",
    "start": "2069399",
    "end": "2075720"
  },
  {
    "text": "internal sensitive infrastructure that applies whether you're an AI company like those companies are or you're just a company that uses external AI models",
    "start": "2075720",
    "end": "2082679"
  },
  {
    "text": "you should use stronger separations between those things like you would if it was an external program or an external library that you don't fully",
    "start": "2082679",
    "end": "2088599"
  },
  {
    "text": "trust and I model should treat should be treated the same uh we would also recommend to use safer formats whenever possible formats like safe tensors ggf",
    "start": "2088599",
    "end": "2096520"
  },
  {
    "text": "uh obviously no format is perfect and you can always find vulnerabilities but the sooner that we shift to those safer formats the more secure that the",
    "start": "2096520",
    "end": "2102760"
  },
  {
    "text": "industry becomes in the long run uh the second thing that we wanted to uh find out here today basically is what exactly",
    "start": "2102760",
    "end": "2109240"
  },
  {
    "text": "is the potential impact of hacking in AI Service uh thankfully we haven't really seen any aders actual adversarial",
    "start": "2109240",
    "end": "2115040"
  },
  {
    "text": "attacks on these services so we wanted to see how scary is this scenario uh what sort of stuff can be achieved when people hack an AI service and in our",
    "start": "2115040",
    "end": "2122079"
  },
  {
    "text": "cases we were able to access millions of private models from some of the world's largest AI companies uh huge data sets",
    "start": "2122079",
    "end": "2128640"
  },
  {
    "text": "which can often include sensitive customer data user prompts codes and Cloud secrets and we weren't only able",
    "start": "2128640",
    "end": "2134320"
  },
  {
    "text": "to read all that stuff but we were also able to actually override it to actually interfere with it which means that we could have conducted supply chain",
    "start": "2134320",
    "end": "2140240"
  },
  {
    "text": "attacks on AI researchers and developers who use those services use those models in their day-to-day work but not it",
    "start": "2140240",
    "end": "2145960"
  },
  {
    "text": "wasn't only limited to actual AI developers but also to regular AI users because we could have interfered with",
    "start": "2145960",
    "end": "2151280"
  },
  {
    "text": "the actual AI Pipeline and whenever someone goes to their favorite llm and types in some sensitive business",
    "start": "2151280",
    "end": "2156560"
  },
  {
    "text": "question we can not only have seen this question but also return of malicious response instead basically breaking the",
    "start": "2156560",
    "end": "2162079"
  },
  {
    "text": "trust that user have in those AI Services uh and the final thing we want you to leave with here today is that AI",
    "start": "2162079",
    "end": "2168400"
  },
  {
    "text": "security is also infrastructure security some of the bugs we found here today not all but some are basically",
    "start": "2168400",
    "end": "2173599"
  },
  {
    "text": "infrastructure bugs uh which could have occurred in AI environments and in non- AI environments as well uh so you should",
    "start": "2173599",
    "end": "2179400"
  },
  {
    "text": "definitely uh pentest your internal environments uh definitely collaborate with security researchers and basically",
    "start": "2179400",
    "end": "2184800"
  },
  {
    "text": "make sure that your environment is constantly challenged by Good Guys uh so figures cross that you won't",
    "start": "2184800",
    "end": "2189960"
  },
  {
    "text": "actually find anything but if you do we hope that it won't be access to all of your customers private models thank you",
    "start": "2189960",
    "end": "2195560"
  },
  {
    "text": "very much for listening uh thank you for having us and if you guys have any",
    "start": "2195560",
    "end": "2202760"
  },
  {
    "text": "questions welcome to step up you're also welcome to reach us us on Twitter if you're interested in further questions",
    "start": "2202760",
    "end": "2208480"
  },
  {
    "text": "uh and yeah thank you",
    "start": "2208480",
    "end": "2212240"
  }
]