[
  {
    "text": "[Music]",
    "start": "30",
    "end": "3360"
  },
  {
    "text": "[Music] welcome to black hat window security",
    "start": "13590",
    "end": "20119"
  },
  {
    "text": "conference 2002 held February 7th through the 9th in New Orleans",
    "start": "20119",
    "end": "25560"
  },
  {
    "text": "Louisiana the following videotape was recorded live at the conference and produced by the sound of knowledge",
    "start": "25560",
    "end": "33000"
  },
  {
    "text": "[Music]",
    "start": "34250",
    "end": "41280"
  },
  {
    "text": "Incorporated this is Sharif Ahad um Sharif is my lovely assistant and uh",
    "start": "41280",
    "end": "47960"
  },
  {
    "text": "when we saw someone in half later on it's no uh camera trickery or anything like that it's actually real magic Oh",
    "start": "47960",
    "end": "54559"
  },
  {
    "text": "wrong talk sorry um so anyway uh we're from Next Generation security software",
    "start": "54559",
    "end": "60440"
  },
  {
    "text": "um and we like playing with",
    "start": "60440",
    "end": "65119"
  },
  {
    "text": "computers so what are we going to cover first off we're going to look at the Oracle application server this deals",
    "start": "65920",
    "end": "71560"
  },
  {
    "text": "with the web front end um runs on Apache um used to uh Oracle used to have",
    "start": "71560",
    "end": "78240"
  },
  {
    "text": "their own web listener a product bepoke to themselves um but they believed um it",
    "start": "78240",
    "end": "85479"
  },
  {
    "text": "was in their best interest and their customers interest to go with the open Source Apache because it was more secure",
    "start": "85479",
    "end": "92360"
  },
  {
    "text": "um as we'll see there are pros and cons for that later on so we'll be looking at certain vulnerabilities um going on to",
    "start": "92360",
    "end": "99680"
  },
  {
    "text": "compromise the web front end uh we're then going to introduce the world's smallest Windows Shell Code well in in",
    "start": "99680",
    "end": "106200"
  },
  {
    "text": "my belief it is um someone please if I'm wrong correct me um and then we'll look",
    "start": "106200",
    "end": "112119"
  },
  {
    "text": "at the Oracle database server itself and how we go about compromising that um in",
    "start": "112119",
    "end": "118560"
  },
  {
    "text": "your uh packs you you should have um the white paper I wrote on this the fix",
    "start": "118560",
    "end": "123719"
  },
  {
    "text": "information is in there if anybody has any specific questions later on about fixing stuff um then please go ahead and",
    "start": "123719",
    "end": "130479"
  },
  {
    "text": "ask pretty much um there's a lot to cover so I'm just going to look at the vulnerabilities for the most part and",
    "start": "130479",
    "end": "137040"
  },
  {
    "text": "then um as said in questions we'll cover fixing and stuff like that",
    "start": "137040",
    "end": "143640"
  },
  {
    "text": "so Oracle application server uh where are the vulnerabilities well there's",
    "start": "143640",
    "end": "148879"
  },
  {
    "text": "loads of them um like internet information server a default install leaves much to be desired never take an",
    "start": "148879",
    "end": "156319"
  },
  {
    "text": "is box and leave it in its default state in a production environment I recommend do not do the same with Oracle",
    "start": "156319",
    "end": "162440"
  },
  {
    "text": "application server there are too many defaults too many samples um depending upon how you",
    "start": "162440",
    "end": "168720"
  },
  {
    "text": "install it if you do uh a typical install soap is enabled and what's more",
    "start": "168720",
    "end": "174760"
  },
  {
    "text": "you can anous anonymously um administer it Oracle unimplemented a of JSP um",
    "start": "174760",
    "end": "181920"
  },
  {
    "text": "there are a couple of issues there where we can get access to the translation files plsql packages that pretty much",
    "start": "181920",
    "end": "188959"
  },
  {
    "text": "plsql really forms the The Hub of my talk today um so we'll go over that uh",
    "start": "188959",
    "end": "194120"
  },
  {
    "text": "in in in Greater detail and then of course the buffer",
    "start": "194120",
    "end": "199480"
  },
  {
    "text": "overflows okay so first off we'll look at plsql",
    "start": "199519",
    "end": "206239"
  },
  {
    "text": "so it stands for procedural language SL SQL structured query language for",
    "start": "206239",
    "end": "212560"
  },
  {
    "text": "anybody um who is used to uh Microsoft SQL Server the best way to imagine PL",
    "start": "212560",
    "end": "219080"
  },
  {
    "text": "SQL is like stored procedures um you have packages which are actually stored",
    "start": "219080",
    "end": "225239"
  },
  {
    "text": "in the database server and by the way I'll I'll explain this is the client box this is the web server this is the",
    "start": "225239",
    "end": "230840"
  },
  {
    "text": "database server um plsl packages are stored in",
    "start": "230840",
    "end": "236040"
  },
  {
    "text": "the database server and they have procedures which you can execute um they all um perform an action functions or",
    "start": "236040",
    "end": "244079"
  },
  {
    "text": "return of value um to allow plsql functionality from the",
    "start": "244079",
    "end": "250879"
  },
  {
    "text": "webfront end there is the plsql module so on This Server here um there",
    "start": "250879",
    "end": "258840"
  },
  {
    "text": "as you can see wrong one we're running Apache um",
    "start": "258840",
    "end": "264080"
  },
  {
    "text": "compiled into that is oracle's closed Source plsql module now essentially that",
    "start": "264080",
    "end": "270360"
  },
  {
    "text": "allows us to communicate as a client through the web server to the backend data database server and execute inside",
    "start": "270360",
    "end": "278360"
  },
  {
    "text": "the database server plsql packages and the results are returned back to us",
    "start": "278360",
    "end": "283880"
  },
  {
    "text": "um across HTTP between here and here uh the web server and the database server",
    "start": "283880",
    "end": "289560"
  },
  {
    "text": "it's going over TNS and everything or sqr on that uh",
    "start": "289560",
    "end": "295120"
  },
  {
    "text": "sqlnet um so let's look at um",
    "start": "295120",
    "end": "301560"
  },
  {
    "text": "plsql one of the first things you should know is that by default you can",
    "start": "302360",
    "end": "308320"
  },
  {
    "text": "administer Dads Dads are database access to scriptors these are used by the plsql",
    "start": "308320",
    "end": "315320"
  },
  {
    "text": "module to allow communication to take place between the web server and the database server essentially it has",
    "start": "315320",
    "end": "320840"
  },
  {
    "text": "things like usernames and passwords you know how do we authenticate to the database server it has TNS connect",
    "start": "320840",
    "end": "328360"
  },
  {
    "text": "strings such as um in this case we've called it NGS software that's stored in",
    "start": "328360",
    "end": "334080"
  },
  {
    "text": "the TNS names. or file um and that file describes how we how we communicate so",
    "start": "334080",
    "end": "341600"
  },
  {
    "text": "one of the first things to note is that we can actually administer um the dad",
    "start": "341600",
    "end": "347400"
  },
  {
    "text": "settings the database access descriptor settings um anonymously and there is a",
    "start": "347400",
    "end": "352759"
  },
  {
    "text": "default I've actually changed the default here it's usually admin underscore um although I've changed it",
    "start": "352759",
    "end": "359120"
  },
  {
    "text": "to admin in one um so if I show you here we have/ PLS that is the location",
    "start": "359120",
    "end": "368080"
  },
  {
    "text": "Handler set in the Apache http.com file that says anything leading with a/ PLS",
    "start": "368080",
    "end": "374720"
  },
  {
    "text": "pass it off pass it off to this module this handles these kind of requests portal 30 is a Default Dad um when you",
    "start": "374720",
    "end": "382680"
  },
  {
    "text": "install Oracle application server it comes with um dads such as simple dad",
    "start": "382680",
    "end": "388400"
  },
  {
    "text": "sample portal 30 portal 30 SSO and so on",
    "start": "388400",
    "end": "393680"
  },
  {
    "text": "um portal 30 is one of them so as you can see um I'm basically have access to",
    "start": "393680",
    "end": "401560"
  },
  {
    "text": "the the settings here's the default um access uh default database access to",
    "start": "401560",
    "end": "407160"
  },
  {
    "text": "scriptor is Portal 30 um I can go in and edit them such as",
    "start": "407160",
    "end": "415680"
  },
  {
    "text": "this one um you see we're connecting a system that's a terribly bad thing to do",
    "start": "415680",
    "end": "421000"
  },
  {
    "text": "um password is disguised from us the Oracle connect string uh just how",
    "start": "421000",
    "end": "426039"
  },
  {
    "text": "they're configured there are a number of buffer overflows in these forms um we'll",
    "start": "426039",
    "end": "431560"
  },
  {
    "text": "get to the buffer overflows shortly but fortunately Oracle has just produced some patches that prevent uh you know",
    "start": "431560",
    "end": "437759"
  },
  {
    "text": "successful exploitation of them so as an example",
    "start": "437759",
    "end": "444400"
  },
  {
    "text": "of executing remotely a plsql package stored in the database server",
    "start": "444400",
    "end": "450240"
  },
  {
    "text": "um there is a package called um HTP this exports um hypertext procedures you have",
    "start": "450240",
    "end": "457520"
  },
  {
    "text": "another package called HTF which has um a load of functions used for producing",
    "start": "457520",
    "end": "463319"
  },
  {
    "text": "HTML for example if I went HTTP do print uh question mark cbff equals",
    "start": "463319",
    "end": "471360"
  },
  {
    "text": "Fu if I could Spell correctly cbff equals Fu all it does is",
    "start": "471360",
    "end": "479039"
  },
  {
    "text": "simply spit back at um what I said so",
    "start": "479039",
    "end": "484159"
  },
  {
    "text": "what I've said is connect to the web server use the portal 30 dad and that",
    "start": "484159",
    "end": "491400"
  },
  {
    "text": "basically goes to a file wdbs vr. apppp um looks in there for connection",
    "start": "491400",
    "end": "497120"
  },
  {
    "text": "details this the web server then connects to the database server and requests that the database server",
    "start": "497120",
    "end": "503080"
  },
  {
    "text": "execute HTTP do print uh procedure and uh pass cbff equal Fu as the parameter",
    "start": "503080",
    "end": "510960"
  },
  {
    "text": "and the results are returned now obviously there are um things like um cross-site scripting vulnerabilities",
    "start": "510960",
    "end": "517120"
  },
  {
    "text": "here let's see where are we dat Administration um there's cross-site scripting uh vulnerabilities here",
    "start": "517120",
    "end": "524240"
  },
  {
    "text": "interestingly though um one of the vulnerabilities with um the whole way in",
    "start": "524240",
    "end": "530120"
  },
  {
    "text": "which um the the plsql module works is we can actually call functions for example Cy state if I call the cyst",
    "start": "530120",
    "end": "537560"
  },
  {
    "text": "State function which is actually defined on the datab Bas server itself um by putting HTP do HTP dop bracket um say C",
    "start": "537560",
    "end": "549279"
  },
  {
    "text": "date you can see it's now returned the 8th of February to me that's bad I shouldn't be able to execute functions",
    "start": "549680",
    "end": "556800"
  },
  {
    "text": "through this um I could call for example um any of",
    "start": "556800",
    "end": "563079"
  },
  {
    "text": "the dbms packages dbms packages are there for um the CIS or system users to",
    "start": "563079",
    "end": "569880"
  },
  {
    "text": "essentially administer the database um as an example I will use um the HTF package",
    "start": "569880",
    "end": "580000"
  },
  {
    "text": "with the Bold um function and then Cate as well so now",
    "start": "580000",
    "end": "586720"
  },
  {
    "text": "it's become bold so you you see I'm beginning to execute functions um by",
    "start": "586720",
    "end": "592839"
  },
  {
    "text": "using HTTP dop uh which is obviously short for print um this is something",
    "start": "592839",
    "end": "598640"
  },
  {
    "text": "that needs to to be addressed um and I only recently found out about",
    "start": "598640",
    "end": "603880"
  },
  {
    "text": "it myself the other day um hence it's not actually in the white paper I only cover um cross-site scripting vulnerabilities in",
    "start": "603880",
    "end": "610079"
  },
  {
    "text": "there so in Prior versions you used to have um",
    "start": "610079",
    "end": "617399"
  },
  {
    "text": "direct access to a package called _ util and this has many many dangerous um",
    "start": "617399",
    "end": "623600"
  },
  {
    "text": "procedures for example we can run arbitary queries with um things like the",
    "start": "623600",
    "end": "628800"
  },
  {
    "text": "cell print procedure um list print um show query columns and so on Oracle um a",
    "start": "628800",
    "end": "636839"
  },
  {
    "text": "couple of versions back actually took the step to prevent direct access to _",
    "start": "636839",
    "end": "642920"
  },
  {
    "text": "util um it was still sort of broken because simply by proceeding it with a like a percent z a or percent 20 which",
    "start": "642920",
    "end": "650600"
  },
  {
    "text": "um one equates to a space hex encoded in the other a new line character um we can actually break the pattern matching and",
    "start": "650600",
    "end": "657480"
  },
  {
    "text": "still gain access to ow _ util so we could basically essentially run arbitary queries um in the database",
    "start": "657480",
    "end": "664200"
  },
  {
    "text": "servers again we've already spoken about dbms although I've spell it incorrectly there it's not dmbs it's dbms uh these",
    "start": "664200",
    "end": "671839"
  },
  {
    "text": "as I said are essentially there for uh administering the the uh database server",
    "start": "671839",
    "end": "677800"
  },
  {
    "text": "itself if we can access for example um dbms job I can submit jobs that will run",
    "start": "677800",
    "end": "685680"
  },
  {
    "text": "at the D on the database server at a set time again or uh has now prevented access to them in",
    "start": "685680",
    "end": "692040"
  },
  {
    "text": "the wdb svr doapp file you have an exclusion list that says only these",
    "start": "692040",
    "end": "698639"
  },
  {
    "text": "um PL SQL packages are good for this Dad essentially so we can reject anything",
    "start": "698639",
    "end": "704360"
  },
  {
    "text": "say in the CIS schema or um in any schema we wish or any specific",
    "start": "704360",
    "end": "710600"
  },
  {
    "text": "packages um what's next this plsql module um until recently",
    "start": "710600",
    "end": "721680"
  },
  {
    "text": "had loads of overflows in it Oracle has just produced a patch um on the 6th of",
    "start": "721680",
    "end": "727600"
  },
  {
    "text": "February that solves all of these problems um there may be more buffer overflows I haven't found them and uh I",
    "start": "727600",
    "end": "735800"
  },
  {
    "text": "I hope Oracle has found them all as well um so I'm I'm sure most people in this",
    "start": "735800",
    "end": "740920"
  },
  {
    "text": "room know what buffer overflows are anyway um for those that don't I'll give a quick description it's essentially um",
    "start": "740920",
    "end": "747800"
  },
  {
    "text": "imagine a program that's says please enter your name um it needs an area of memory to",
    "start": "747800",
    "end": "754160"
  },
  {
    "text": "store whatever you type in so the computer program turns around said okay bang there's a chunk of memory to store",
    "start": "754160",
    "end": "760160"
  },
  {
    "text": "the name whatever the person types this is called a buffer now if I enter the name David that fits okay in in the",
    "start": "760160",
    "end": "767639"
  },
  {
    "text": "buffer if I enter like say let's say the buffer is 100 byes bigger if I enter any more then 100 bytes I'm obviously going",
    "start": "767639",
    "end": "774600"
  },
  {
    "text": "to overflow the buffer and overwrite crucial stuff in memory now I'm not going to go go into how um procedures",
    "start": "774600",
    "end": "781199"
  },
  {
    "text": "are called and uh how save return addresses are pushed on the stack if you don't know about buffer overflows",
    "start": "781199",
    "end": "786480"
  },
  {
    "text": "there's plenty of good stuff on the internet uh just do a search on Google or something buffer overflows um dild",
    "start": "786480",
    "end": "793279"
  },
  {
    "text": "doog um of Lofts SL stake Fame uh wrote one of the earliest papers on Windows",
    "start": "793279",
    "end": "799760"
  },
  {
    "text": "buffer overflows uh a good read um and his Haus uh are quite interesting as",
    "start": "799760",
    "end": "806399"
  },
  {
    "text": "well so there are as I said multiple buffer overflows in the plsql module I",
    "start": "806399",
    "end": "811880"
  },
  {
    "text": "could request an overly long help file name for",
    "start": "811880",
    "end": "817160"
  },
  {
    "text": "example I go to admin one",
    "start": "817240",
    "end": "823399"
  },
  {
    "text": "um slel talk.",
    "start": "823399",
    "end": "829040"
  },
  {
    "text": "HTM we can get access to this providing we know the admin path the admin path",
    "start": "829040",
    "end": "834240"
  },
  {
    "text": "here by the way is admin one the default is admin uncore as I said I've changed it here um interestingly if",
    "start": "834240",
    "end": "841079"
  },
  {
    "text": "you um use Access Control to prevent people from um administering the dad",
    "start": "841079",
    "end": "848199"
  },
  {
    "text": "they can still get access to this these Pages anonymously so is provided we know the the um admin path uh we can exploit",
    "start": "848199",
    "end": "855800"
  },
  {
    "text": "the buffer over on here where we essentially just",
    "start": "855800",
    "end": "860399"
  },
  {
    "text": "um add an over long far name I'm not going to do it because I'm I'm I don't want to have to shut down and restart my",
    "start": "861160",
    "end": "867279"
  },
  {
    "text": "uh Apache box essentially uh we we we'll exploit one of them though",
    "start": "867279",
    "end": "874040"
  },
  {
    "text": "um overly long password in the add dad form this was what we just looked at a",
    "start": "874040",
    "end": "881120"
  },
  {
    "text": "few moments ago add Dad if I set an overly long",
    "start": "881120",
    "end": "887759"
  },
  {
    "text": "password here in Oracle password where these uh dots are um that will cause an",
    "start": "887759",
    "end": "894560"
  },
  {
    "text": "overflow now interestingly it will also wipe out your",
    "start": "894560",
    "end": "899880"
  },
  {
    "text": "wdbs doapp file because it um crashes halfway through writing to it everything",
    "start": "899880",
    "end": "906800"
  },
  {
    "text": "just gets blanked as well so if someone wants to attack you um in this particular era you're uh unless you've",
    "start": "906800",
    "end": "914440"
  },
  {
    "text": "got a backup of your app file you're in trouble well you can manually redo it",
    "start": "914440",
    "end": "919600"
  },
  {
    "text": "but it's more of an annoyance um a long directory in the",
    "start": "919600",
    "end": "925839"
  },
  {
    "text": "cache form we go to",
    "start": "925839",
    "end": "931600"
  },
  {
    "text": "cach HTM here if I set an overly long",
    "start": "932040",
    "end": "937839"
  },
  {
    "text": "directory in there again there's an overflow there's as I said there's overflows all over the place if I was to",
    "start": "937839",
    "end": "943399"
  },
  {
    "text": "um Town n to Port 80 and say get SL PLS SL Fu SL you know procedure but then",
    "start": "943399",
    "end": "952319"
  },
  {
    "text": "also present um the HTTP authorization uh client header and with an overly long",
    "start": "952319",
    "end": "958040"
  },
  {
    "text": "password in there again that will uh cause the buffer overflow what's",
    "start": "958040",
    "end": "963360"
  },
  {
    "text": "interesting as well is that um your exploit code any exploit code going across would need to be base 64 encoded",
    "start": "963360",
    "end": "969759"
  },
  {
    "text": "that's not difficult to do but it will probably bypass a lot of IDs systems because no one ever actually decodes Bas",
    "start": "969759",
    "end": "976680"
  },
  {
    "text": "64 passwords to see is this a um an attack so it's OB obic to a certain",
    "start": "976680",
    "end": "983639"
  },
  {
    "text": "degree so we're going to look at Shell Code",
    "start": "983639",
    "end": "990240"
  },
  {
    "text": "now what is Shell Code Shell Code essentially is exploit code that will",
    "start": "990240",
    "end": "996480"
  },
  {
    "text": "drop me into the equivalent of a of of a command shell one of these things we've all seen them um traditional window",
    "start": "996480",
    "end": "1004759"
  },
  {
    "text": "shell code is round about 600 to 700 bytes essentially what we do is as part",
    "start": "1004759",
    "end": "1010720"
  },
  {
    "text": "of our exploit code is turn around to the vulnerable process and say create this process for me create a cmd.exe",
    "start": "1010720",
    "end": "1017720"
  },
  {
    "text": "process we need we need to create some handles for standard in standard out and",
    "start": "1017720",
    "end": "1022959"
  },
  {
    "text": "standard error in other words standard in is where you type standard out is what's thrown back at you at the screen and again standard error is what's",
    "start": "1022959",
    "end": "1028839"
  },
  {
    "text": "thrown back out we create two Anonymous pipes uh two Anonymous pipes basically for",
    "start": "1028839",
    "end": "1034880"
  },
  {
    "text": "interprocess communication so when I um create the the process I use these pipes",
    "start": "1034880",
    "end": "1041678"
  },
  {
    "text": "for um standard in and standard out that is the long way to go around",
    "start": "1041679",
    "end": "1047079"
  },
  {
    "text": "it um as I said that grows to 600 700 bytes",
    "start": "1047079",
    "end": "1052120"
  },
  {
    "text": "um we can actually use the wsa socket function and the the socket returned",
    "start": "1052120",
    "end": "1058679"
  },
  {
    "text": "from that we can actually pass these as handles to the the created processes standard in standard out and standard",
    "start": "1058679",
    "end": "1065080"
  },
  {
    "text": "eror so essentially all we need to do is call wsa startup well actually we don't",
    "start": "1065080",
    "end": "1072200"
  },
  {
    "text": "even need to do that simply if um if the the the vulnerable program has already",
    "start": "1072200",
    "end": "1078440"
  },
  {
    "text": "called wsa stup at some point um in its execution we don't actually need to do this but we're not sure whether we're",
    "start": "1078440",
    "end": "1084760"
  },
  {
    "text": "necessarily dealing with a a windsock application on the on the remote end so it's probably safer to call wsa stop",
    "start": "1084760",
    "end": "1090760"
  },
  {
    "text": "unless you know you're specifically targeting something that does we then call wsa socket pass it to bind and",
    "start": "1090760",
    "end": "1096240"
  },
  {
    "text": "connect and pass them as handles to create process and we're down to 174 bytes um",
    "start": "1096240",
    "end": "1102760"
  },
  {
    "text": "essentially um this is more of a problem now um",
    "start": "1102760",
    "end": "1109280"
  },
  {
    "text": "we can as I said we're shrinking it down to 174 bytes and there's been a number of",
    "start": "1109280",
    "end": "1116640"
  },
  {
    "text": "problems where the the Overflow is um if you enter too many bytes the overflow",
    "start": "1116640",
    "end": "1121840"
  },
  {
    "text": "will fail and so traditional window Shell Code will not succeed so now we're down to 174 bytes it should be a",
    "start": "1121840",
    "end": "1128280"
  },
  {
    "text": "standard easy thing and this is a remote shell um so what's compromising the web",
    "start": "1128280",
    "end": "1134679"
  },
  {
    "text": "front end what I've got here",
    "start": "1134679",
    "end": "1140320"
  },
  {
    "text": "is netcat listening on Port 53 on this",
    "start": "1142039",
    "end": "1148159"
  },
  {
    "text": "machine I'm going to send an overflow string to this machine the web server",
    "start": "1148159",
    "end": "1153559"
  },
  {
    "text": "that's going to bind back out to me on my port 53 now obviously if there's a",
    "start": "1153559",
    "end": "1160039"
  },
  {
    "text": "firewall in there in the way that's stopping outbound connections on Port 53 this wouldn't work however what you can",
    "start": "1160039",
    "end": "1165679"
  },
  {
    "text": "do and this the code actually gets slightly bigger here is um basically say get P name and",
    "start": "1165679",
    "end": "1174280"
  },
  {
    "text": "essentially try and locate your socket in the socket um table now if you do if",
    "start": "1174280",
    "end": "1180120"
  },
  {
    "text": "you call get paer name on your IP address like Time After Time After Time Again to try and find your socket handle",
    "start": "1180120",
    "end": "1186080"
  },
  {
    "text": "it will fail even if you you know have found the right socket essentially what you do is increment the socket handle um",
    "start": "1186080",
    "end": "1192600"
  },
  {
    "text": "that's a bug with Microsoft um it's not a a security bug but it's just U the way they've implemented um get P name so",
    "start": "1192600",
    "end": "1200080"
  },
  {
    "text": "what we have to do is essentially say um get P name try it was it our IP address",
    "start": "1200080",
    "end": "1206840"
  },
  {
    "text": "you know when we we we give it like try socket handle of 100 if that fails um",
    "start": "1206840",
    "end": "1212280"
  },
  {
    "text": "call another socket function for example socket then go back and call get pair name and it will work if it indeed is",
    "start": "1212280",
    "end": "1219880"
  },
  {
    "text": "your socket so we can actually do that so if we connect in over Port 80 um",
    "start": "1219880",
    "end": "1225720"
  },
  {
    "text": "through the firewall because let's face it the fire is not going to block access it needs it you know for a public",
    "start": "1225720",
    "end": "1231080"
  },
  {
    "text": "website we can actually bind to that shell um so regardless of the",
    "start": "1231080",
    "end": "1237679"
  },
  {
    "text": "firewall um this is still going to be vulnerable so what we're going to do",
    "start": "1237679",
    "end": "1244360"
  },
  {
    "text": "here I've got net Catal lising on my port uh Port 53 send my exploit code and it's going to reverse shell back out to",
    "start": "1244360",
    "end": "1251360"
  },
  {
    "text": "me and drop me into we should actually see um the Apache process access Violet",
    "start": "1251360",
    "end": "1257679"
  },
  {
    "text": "cuz they not clean cleaned up after me um so um",
    "start": "1257679",
    "end": "1266480"
  },
  {
    "text": "right right that's gone and here's my reverse shell if I do",
    "start": "1276279",
    "end": "1285120"
  },
  {
    "text": "um a host name that's this box here",
    "start": "1285120",
    "end": "1291240"
  },
  {
    "text": "basically so this one's called computer name and this one's called um Factory",
    "start": "1298760",
    "end": "1305159"
  },
  {
    "text": "install X hyphen blah blah blah so as you can see we're in the Oracle I Suite Apache Apache directory that's the",
    "start": "1305159",
    "end": "1311120"
  },
  {
    "text": "default working directory for Apache um if I say who am",
    "start": "1311120",
    "end": "1317039"
  },
  {
    "text": "I I'm running as administrator on there unfortunately it's not running as a",
    "start": "1317039",
    "end": "1322400"
  },
  {
    "text": "system service at this point in time simply because I've just previously brought it down and brought it back up again um but I'm running as",
    "start": "1322400",
    "end": "1329279"
  },
  {
    "text": "administrator so I um Can essentially just add um my own account like net user",
    "start": "1329279",
    "end": "1337120"
  },
  {
    "text": "uh David um test password for",
    "start": "1337120",
    "end": "1343919"
  },
  {
    "text": "slad so I I've now essentially got an accountant here I can add it to uh the administrators group",
    "start": "1343919",
    "end": "1350880"
  },
  {
    "text": "net local group administrators David testad kind of thing um so here we have",
    "start": "1350880",
    "end": "1358279"
  },
  {
    "text": "compromised the the web front end yep how can down",
    "start": "1358279",
    "end": "1365880"
  },
  {
    "text": "the uh a patch is running on here oracle's running on here it's the the",
    "start": "1366720",
    "end": "1372320"
  },
  {
    "text": "plasc module is a dll that's um in the address space of of Apache sorry um so",
    "start": "1372320",
    "end": "1378960"
  },
  {
    "text": "before we even go anywhere near the database in the processing of my request it's access violated you know U",
    "start": "1378960",
    "end": "1385000"
  },
  {
    "text": "overflowed it kind of thing so what I'm going to do here now",
    "start": "1385000",
    "end": "1391919"
  },
  {
    "text": "is um kill now this might not",
    "start": "1391919",
    "end": "1398880"
  },
  {
    "text": "work right Apache killed if I then do",
    "start": "1398880",
    "end": "1404960"
  },
  {
    "text": "um a net start I can restart that and even though I've still got my reverse shell um I can get back in uh to to to",
    "start": "1404960",
    "end": "1414840"
  },
  {
    "text": "to the web service now now we've compromised the web front end we now we we need to compromise the",
    "start": "1414840",
    "end": "1422240"
  },
  {
    "text": "database server so we're going to move on to attacking the Oracle database",
    "start": "1422240",
    "end": "1428320"
  },
  {
    "text": "server so again plsql seems to be the root of",
    "start": "1428320",
    "end": "1434640"
  },
  {
    "text": "the problem plsql packages stored in the database um can call external procedures",
    "start": "1434640",
    "end": "1442799"
  },
  {
    "text": "what that essentially means is um Oracle have built into um the whole plsql",
    "start": "1442799",
    "end": "1449679"
  },
  {
    "text": "environment the ability to call any function in any dll on this system",
    "start": "1449679",
    "end": "1457880"
  },
  {
    "text": "um now normally you would um basically",
    "start": "1457880",
    "end": "1463039"
  },
  {
    "text": "create a library um as in a plsql library on the database server um so you",
    "start": "1463039",
    "end": "1469520"
  },
  {
    "text": "need those kind of privileges to do a normal attack I'm going to show you how we don't even need to actually uh have a",
    "start": "1469520",
    "end": "1476080"
  },
  {
    "text": "user ID or password to actually um exploit this functionality um of course",
    "start": "1476080",
    "end": "1482200"
  },
  {
    "text": "if you've got the auto Library privileges as a database us you can again do it as well um so how Oracle um",
    "start": "1482200",
    "end": "1490399"
  },
  {
    "text": "external procedures work um we have the Oracle process that communicates with",
    "start": "1490399",
    "end": "1495720"
  },
  {
    "text": "the listener process that says I've been asked to run this function in this dll",
    "start": "1495720",
    "end": "1501960"
  },
  {
    "text": "The Listener process then starts X proc um they communicate and the Oracle",
    "start": "1501960",
    "end": "1509559"
  },
  {
    "text": "process then turns around and says please load this Library I'm going to got a picture thing here right so we have the",
    "start": "1509559",
    "end": "1518000"
  },
  {
    "text": "Oracle process turns around to The Listener on Port 1521 and says please",
    "start": "1518000",
    "end": "1523080"
  },
  {
    "text": "startop um XPR for me I need it so the listener",
    "start": "1523080",
    "end": "1528919"
  },
  {
    "text": "starts the XPR process and the xproc process is now listening um normally on",
    "start": "1528919",
    "end": "1535039"
  },
  {
    "text": "a named pip though as we'll see later on we can actually force it to use sockets so xproc then tells the listener hey I'm",
    "start": "1535039",
    "end": "1542039"
  },
  {
    "text": "ready and waiting The Listener then informs the Oracle process that the xproc is ready",
    "start": "1542039",
    "end": "1549360"
  },
  {
    "text": "and waiting for its bidding right so Oracle then connects to the x",
    "start": "1549360",
    "end": "1557720"
  },
  {
    "text": "process and says plead load please load this Library execute this function and pass",
    "start": "1557720",
    "end": "1564960"
  },
  {
    "text": "it these parameters now what we can actually do is be a",
    "start": "1564960",
    "end": "1572600"
  },
  {
    "text": "rogue process whether that is local to the database server or remotely what we're going to do here is",
    "start": "1572600",
    "end": "1580200"
  },
  {
    "text": "essentially speak to the listener and pretend to be an oracle process as long as we're speaking the same language it",
    "start": "1580200",
    "end": "1586840"
  },
  {
    "text": "should do our bedding just like it did oracle's bedding remember we need a user ID and password to gain access to like",
    "start": "1586840",
    "end": "1594120"
  },
  {
    "text": "Oracle doing it this way we don't need uh to authenticate so we write an exploit",
    "start": "1594120",
    "end": "1600480"
  },
  {
    "text": "program the Rogue process that connects to The Listener um and says I want to run an external procedure and obligingly",
    "start": "1600480",
    "end": "1608279"
  },
  {
    "text": "The Listener process starts xproc and then the listener process",
    "start": "1608279",
    "end": "1613840"
  },
  {
    "text": "tells us where to connect to so we then directly connect to",
    "start": "1613840",
    "end": "1622000"
  },
  {
    "text": "xprog so I'm going to do it from this one here for the minute um",
    "start": "1622000",
    "end": "1629159"
  },
  {
    "text": "Oracle or cmd5 um host",
    "start": "1629159",
    "end": "1637120"
  },
  {
    "text": "Damas okay this exploit Pro uh sorry on this screen here um essentially it's",
    "start": "1637720",
    "end": "1643760"
  },
  {
    "text": "please ask me for the command to run so actually before we even do that I'm going to try",
    "start": "1643760",
    "end": "1650520"
  },
  {
    "text": "and authenticate to that machine we have no shared connection at the moment other",
    "start": "1650520",
    "end": "1655559"
  },
  {
    "text": "than overa article so net use 1991 199.99 you've got the server server",
    "start": "1655559",
    "end": "1661760"
  },
  {
    "text": "started on this see doar uh that's dot one isn't",
    "start": "1661760",
    "end": "1669919"
  },
  {
    "text": "it um passw SL",
    "start": "1669919",
    "end": "1675440"
  },
  {
    "text": "user right I'm going to to right log on failure bad username or",
    "start": "1675440",
    "end": "1681480"
  },
  {
    "text": "password okay so what I'm now going to do is essentially create that account on this machine so I can then um basically",
    "start": "1681480",
    "end": "1689200"
  },
  {
    "text": "access this box um this is to show you the the attack and progress so enter the",
    "start": "1689200",
    "end": "1695360"
  },
  {
    "text": "command to Run net user quity password if I could spell password",
    "start": "1695360",
    "end": "1703919"
  },
  {
    "text": "for slad right",
    "start": "1703919",
    "end": "1709440"
  },
  {
    "text": "let me use the IP address B better",
    "start": "1709600",
    "end": "1713960"
  },
  {
    "text": "19999 one right what's happening",
    "start": "1714919",
    "end": "1720799"
  },
  {
    "text": "here if we slow it down let me scroll it",
    "start": "1720799",
    "end": "1725960"
  },
  {
    "text": "back this here we've connected to the listener and it's told us it's now the",
    "start": "1726440",
    "end": "1733120"
  },
  {
    "text": "it's launched the XO process and it's listening on it's I know it must be difficult to see from back there but it's listenting on Port um 1035 so we",
    "start": "1733120",
    "end": "1741519"
  },
  {
    "text": "then connect to Port 1035 we go through a semblance of authentication um but it",
    "start": "1741519",
    "end": "1747919"
  },
  {
    "text": "it's it's absolutely completely irrelevant we then set up um a number of um environment variable kind of things",
    "start": "1747919",
    "end": "1755240"
  },
  {
    "text": "um and then we finally get a response back um workgroup SL his computer name",
    "start": "1755240",
    "end": "1761039"
  },
  {
    "text": "um gives us the process ID um of XPR and uh the function we've just called what",
    "start": "1761039",
    "end": "1767039"
  },
  {
    "text": "I'm essentially doing is saying load msvcrt.dll call the system function and",
    "start": "1767039",
    "end": "1772519"
  },
  {
    "text": "pass it um this argument and the argument being net user query password",
    "start": "1772519",
    "end": "1777840"
  },
  {
    "text": "slad so now I've got to make that an",
    "start": "1777840",
    "end": "1783120"
  },
  {
    "text": "administrator net local group is it",
    "start": "1784840",
    "end": "1790000"
  },
  {
    "text": "local group or local groups is it",
    "start": "1790000",
    "end": "1796159"
  },
  {
    "text": "group um administrators",
    "start": "1796159",
    "end": "1803080"
  },
  {
    "text": "quity for",
    "start": "1803080",
    "end": "1806440"
  },
  {
    "text": "slad so now we try and connect and we get the command completed successfully so we we now",
    "start": "1812320",
    "end": "1820720"
  },
  {
    "text": "essentially own this Oracle box we've created an administrative account um these commands we're running a system by",
    "start": "1820720",
    "end": "1827000"
  },
  {
    "text": "the way um Oracle by default runs a system so any command uh we actually execute or",
    "start": "1827000",
    "end": "1834039"
  },
  {
    "text": "any function we execute rather um and it just so happens we're executing um the system function here that allows us to",
    "start": "1834039",
    "end": "1840240"
  },
  {
    "text": "run commands we'll run with full privileges over this computer so essentially the computer is owned we",
    "start": "1840240",
    "end": "1848640"
  },
  {
    "text": "own the data we own everything uh on there um which is not a good thing so",
    "start": "1848640",
    "end": "1853960"
  },
  {
    "text": "essentially what we've done wrapping up is compromised the web front end and",
    "start": "1853960",
    "end": "1860720"
  },
  {
    "text": "from there compromised the uh backend database server in a couple of easy",
    "start": "1860720",
    "end": "1865960"
  },
  {
    "text": "steps um so I think that's come to the end of",
    "start": "1865960",
    "end": "1872279"
  },
  {
    "text": "this talk probably perhaps slightly too quickly um has anybody got any questions have they fixed that auth um",
    "start": "1872279",
    "end": "1881200"
  },
  {
    "text": "there is no fix for it there is a workaround for it um there essentially the the the it's",
    "start": "1881200",
    "end": "1889720"
  },
  {
    "text": "difficult to it's not a great fix but it's the best that can be done it's so core within the way Oracle Works um it",
    "start": "1889720",
    "end": "1896440"
  },
  {
    "text": "would take a major major rewrite so in terms of um risk mitigation um it was",
    "start": "1896440",
    "end": "1903480"
  },
  {
    "text": "Oracle chose that they should release an advisory on this issue before this talk because it would look bad otherwise",
    "start": "1903480",
    "end": "1910960"
  },
  {
    "text": "essentially well in in future versions of Oracle um this will no longer be a",
    "start": "1910960",
    "end": "1916399"
  },
  {
    "text": "problem um um there are certain workarounds you can do such as using TCP",
    "start": "1916399",
    "end": "1921600"
  },
  {
    "text": "node valid checking um but essentially in terms of this kind of attack it does you no good because the web server must",
    "start": "1921600",
    "end": "1927960"
  },
  {
    "text": "be one of those trusted hosters to to communicate with with the database server so there is a work around it is",
    "start": "1927960",
    "end": "1934639"
  },
  {
    "text": "about risk mitigation um a patch will be coming",
    "start": "1934639",
    "end": "1940158"
  },
  {
    "text": "eventually be a that connection",
    "start": "1940679",
    "end": "1945919"
  },
  {
    "text": "have well if if if you're behind the firewall if you if you can communicate with the listener port and when xproc is",
    "start": "1945919",
    "end": "1953000"
  },
  {
    "text": "now listening on um a random highport like it shows one one z uh sorry 1035",
    "start": "1953000",
    "end": "1959519"
  },
  {
    "text": "there as long as I have direct access to any you know likely High put that ex",
    "start": "1959519",
    "end": "1965039"
  },
  {
    "text": "will be listening on and The Listener process um then yes I can then I can do this um not many people actually need",
    "start": "1965039",
    "end": "1973639"
  },
  {
    "text": "the functionality of calling external procedures from within a plsql package so most people can just basically turn",
    "start": "1973639",
    "end": "1980360"
  },
  {
    "text": "around and just strip it off the system any other Tim I was just going to",
    "start": "1980360",
    "end": "1987399"
  },
  {
    "text": "ask where does oracle being unbreakable come into play here right",
    "start": "1987399",
    "end": "1993320"
  },
  {
    "text": "um that's obviously a rhetorical question and doesn't warrant an answer um Oracle is committed to",
    "start": "1993320",
    "end": "2000799"
  },
  {
    "text": "security we all know that Tim and you're just stirring now um Oracle product has",
    "start": "2000799",
    "end": "2007960"
  },
  {
    "text": "undergone 14 independent security evaluations which is at least 13 more",
    "start": "2007960",
    "end": "2013000"
  },
  {
    "text": "than any of its competitors um hey look I I I don't have to like",
    "start": "2013000",
    "end": "2020000"
  },
  {
    "text": "defend them but I do um I know the Oracle security team there are a good bunch of people they are committed to to",
    "start": "2020000",
    "end": "2026399"
  },
  {
    "text": "to securing their products whatever the marketing department and everything like that does are two entirely different",
    "start": "2026399",
    "end": "2031919"
  },
  {
    "text": "things you know um but but it it's sort of embarrassing for",
    "start": "2031919",
    "end": "2039960"
  },
  {
    "text": "them any other questions I said to Jennifer granic",
    "start": "2039960",
    "end": "2045240"
  },
  {
    "text": "earlier on today um you know you've done a good talk when you get loads of questions at the end you know so thanks",
    "start": "2045240",
    "end": "2051040"
  },
  {
    "text": "a lot you",
    "start": "2051040",
    "end": "2053720"
  },
  {
    "text": "guys",
    "start": "2056159",
    "end": "2059158"
  },
  {
    "text": "thanks",
    "start": "2065879",
    "end": "2068878"
  }
]