[
  {
    "start": "0",
    "end": "27000"
  },
  {
    "text": "[Music]",
    "start": "860",
    "end": "9280"
  },
  {
    "text": "hello everyone welcome to our talk and thank you for being here i am damiano melotti and together with maxim rossi",
    "start": "9280",
    "end": "15040"
  },
  {
    "text": "belong my colleague at quarks tub i will present our research on titan m a security chip recently introduced by",
    "start": "15040",
    "end": "21600"
  },
  {
    "text": "google in their pixel smartphones but before starting to talk about this chip let's first understand why it is",
    "start": "21600",
    "end": "28560"
  },
  {
    "start": "27000",
    "end": "27000"
  },
  {
    "text": "used so it is uh in the recent years that vendors started to rely on",
    "start": "28560",
    "end": "34559"
  },
  {
    "text": "specialized hardware to improve the security of their systems there are mainly three ways to do so the",
    "start": "34559",
    "end": "40960"
  },
  {
    "text": "first one uh is the one of virtualized solution one of the main example is arm truss zone",
    "start": "40960",
    "end": "46879"
  },
  {
    "text": "in that case uh the same chip will enable two uh execution modes and one of",
    "start": "46879",
    "end": "52000"
  },
  {
    "text": "them can be the the secure one and then we have on-chip solutions uh such as the one that apple is using with",
    "start": "52000",
    "end": "59760"
  },
  {
    "text": "their secure enclave in that case on the same system on chip there are two different chips uh one of them is the",
    "start": "59760",
    "end": "66880"
  },
  {
    "text": "secure module and finally we have uh external solutions and that is indeed",
    "start": "66880",
    "end": "72640"
  },
  {
    "text": "the case of of google titan m so for android it was uh quite common to",
    "start": "72640",
    "end": "77840"
  },
  {
    "text": "use it is quite common to use arm thrust zone but an external module brings better tamper",
    "start": "77840",
    "end": "84240"
  },
  {
    "text": "resistant properties and then a virtualized solution so this is actually the reason for which google uh decided",
    "start": "84240",
    "end": "91119"
  },
  {
    "text": "to create uh this new solution to improve uh tranzone's level of isolation",
    "start": "91119",
    "end": "96320"
  },
  {
    "text": "so uh here it is the the titan m it is a very chinese",
    "start": "96320",
    "end": "101439"
  },
  {
    "start": "97000",
    "end": "97000"
  },
  {
    "text": "chip that you can see here from this picture of a tear down it is it's generally used for",
    "start": "101439",
    "end": "108799"
  },
  {
    "text": "the management of secrets and critical information for the security of the device uh we can think of uh several",
    "start": "108799",
    "end": "116320"
  },
  {
    "text": "trusted applications that are harder backed such as strongbox for key generation or key at",
    "start": "116320",
    "end": "122079"
  },
  {
    "text": "the station adb for secure boot there are more and the list can evolve as android evolves",
    "start": "122079",
    "end": "129360"
  },
  {
    "text": "uh so in general the most secure apis that require the highest level of security uh are backed on",
    "start": "129360",
    "end": "136879"
  },
  {
    "text": "on titan m so you may ask why is this chip so so interesting and uh first of all there is",
    "start": "136879",
    "end": "144640"
  },
  {
    "start": "139000",
    "end": "139000"
  },
  {
    "text": "really little available knowledge about it um [Music] when google announced it they claimed",
    "start": "144640",
    "end": "151360"
  },
  {
    "text": "that they would publish the sources but uh this never happened",
    "start": "151360",
    "end": "156879"
  },
  {
    "text": "more than that there is no existing paper or conference presentation or blog post there is uh",
    "start": "156959",
    "end": "163760"
  },
  {
    "text": "only one cve write-up uh that is on the crypto behind titan and but in",
    "start": "163760",
    "end": "170239"
  },
  {
    "text": "general this feels to be a bit outside of the radar of the security community",
    "start": "170239",
    "end": "175760"
  },
  {
    "text": "so we feel like there is a research come and and we want to to fill it with this research",
    "start": "175760",
    "end": "181599"
  },
  {
    "text": "uh with this research indeed we want to understand how the chip works and",
    "start": "181599",
    "end": "187760"
  },
  {
    "text": "how it can provide the security apis uh that it offers and if it is really so",
    "start": "187760",
    "end": "193920"
  },
  {
    "text": "invaluable and secure as it as it seems to be so to do so we will start",
    "start": "193920",
    "end": "199840"
  },
  {
    "text": "from the chip's architecture and and its internals the chip is based on arm cortex m3",
    "start": "199840",
    "end": "208159"
  },
  {
    "start": "205000",
    "end": "205000"
  },
  {
    "text": "the system-on-chip has been hardened against physical attacks with some special defenses uh",
    "start": "208159",
    "end": "215200"
  },
  {
    "text": "so there is a there is a there has been a hardening on the hardware level and also",
    "start": "215200",
    "end": "220640"
  },
  {
    "text": "there are uh in the chip itself some external modules to perform specific operations such as a",
    "start": "220640",
    "end": "227280"
  },
  {
    "text": "random number generation or or cryptographic operations",
    "start": "227280",
    "end": "232640"
  },
  {
    "text": "then the chief communicates with the rest of the world via some buses",
    "start": "232640",
    "end": "237680"
  },
  {
    "text": "two interesting ones are the uart for logging and console and then the spi that allows to",
    "start": "237680",
    "end": "245200"
  },
  {
    "text": "effectively communicate with the main main processor and the android",
    "start": "245200",
    "end": "250720"
  },
  {
    "text": "operating system the firmware of the chip can be found in",
    "start": "250720",
    "end": "255920"
  },
  {
    "text": "the pixel file system uh quite surprisingly this this firmware is not encrypted nor obfuscated so a",
    "start": "255920",
    "end": "264479"
  },
  {
    "text": "researcher can immediately start reversing it and it also presents some debugging strings to to help in the in",
    "start": "264479",
    "end": "271840"
  },
  {
    "text": "the reversing process process here we have the path in which we can find the file",
    "start": "271840",
    "end": "277280"
  },
  {
    "text": "and um we can immediately notice that there are two sections uh we call them a",
    "start": "277280",
    "end": "283280"
  },
  {
    "text": "and b that have to do with the amb update mechanism this basically means that",
    "start": "283280",
    "end": "289440"
  },
  {
    "text": "one section can be up and running while the other one is being",
    "start": "289440",
    "end": "294840"
  },
  {
    "text": "updated uh each section is formed by two images r o and rw our own is ro is the",
    "start": "294840",
    "end": "302160"
  },
  {
    "text": "loader while rw is the main os outside of the firmware file there is",
    "start": "302160",
    "end": "308720"
  },
  {
    "start": "306000",
    "end": "306000"
  },
  {
    "text": "also a boot rom uh that is mapped at address zero this is not available again the firmware",
    "start": "308720",
    "end": "315280"
  },
  {
    "text": "file but it's present in the chip and um it uh performs the initialization the",
    "start": "315280",
    "end": "321759"
  },
  {
    "text": "really early boot phase and then we have some dedicated regions for persistent data",
    "start": "321759",
    "end": "329440"
  },
  {
    "text": "and some hardware registers that are mapped in memory",
    "start": "329440",
    "end": "335440"
  },
  {
    "start": "335000",
    "end": "335000"
  },
  {
    "text": "titan m has an operating system that is based on ec uh ec stands for embedded controller and is an",
    "start": "336479",
    "end": "343120"
  },
  {
    "text": "operating system uh developed by google and fully open source um this operating",
    "start": "343120",
    "end": "348800"
  },
  {
    "text": "system is written in c and it has some interesting properties uh first of all",
    "start": "348800",
    "end": "353840"
  },
  {
    "text": "it has no dynamic allocation uh so everything the memory has to be managed at run at the compile time",
    "start": "353840",
    "end": "361360"
  },
  {
    "text": "and it is built around the concept of task there",
    "start": "361360",
    "end": "366639"
  },
  {
    "text": "is this execution unit that takes together the features of of of the",
    "start": "366639",
    "end": "372960"
  },
  {
    "text": "chip and interrupts allow to switch from one task to another",
    "start": "372960",
    "end": "379360"
  },
  {
    "text": "tasks in total are nine uh two of them are also present in ec idle",
    "start": "379360",
    "end": "384479"
  },
  {
    "start": "380000",
    "end": "380000"
  },
  {
    "text": "and hook they have to do with uh general management of the chip and the system",
    "start": "384479",
    "end": "389600"
  },
  {
    "text": "and then there are the specific tasks of of titan nugget is the main one and then we have",
    "start": "389600",
    "end": "395919"
  },
  {
    "text": "a series of uh what we would call trusted applications so those applications that uh allow to to",
    "start": "395919",
    "end": "403199"
  },
  {
    "text": "have a harder support for some specific apis adb for example again for secure boot",
    "start": "403199",
    "end": "409520"
  },
  {
    "text": "face off for biometrics again this is a list that can evolve over time",
    "start": "409520",
    "end": "415759"
  },
  {
    "text": "if if new features will be added to to the system and finally we have a console task that is",
    "start": "415759",
    "end": "422800"
  },
  {
    "text": "the one responsible for handling logs and the communication via the uart console",
    "start": "422800",
    "end": "429680"
  },
  {
    "start": "429000",
    "end": "429000"
  },
  {
    "text": "at boot the loader so the r0 image will have two choices uh two images from",
    "start": "429680",
    "end": "436720"
  },
  {
    "text": "which it can boot and uh it will choose one first based on uh the version number",
    "start": "436720",
    "end": "442800"
  },
  {
    "text": "so uh it will choose the most recent candidate then it will check uh",
    "start": "442800",
    "end": "447919"
  },
  {
    "text": "if the magic number on the header is is present and is indeed",
    "start": "447919",
    "end": "453120"
  },
  {
    "text": "matching the right value it is a minus two if we take it as a signed integer and then it will",
    "start": "453120",
    "end": "460080"
  },
  {
    "text": "verify the signature uh that is taken uh from part of the header and the entire",
    "start": "460080",
    "end": "467039"
  },
  {
    "text": "code of the image if this is fine then the image is effectively launched otherwise the other",
    "start": "467039",
    "end": "474400"
  },
  {
    "text": "candidate is chosen [Music] there are two ways to uh let's say",
    "start": "474400",
    "end": "480000"
  },
  {
    "start": "476000",
    "end": "476000"
  },
  {
    "text": "change the firmware uh regular update is the first one and it is implemented in",
    "start": "480000",
    "end": "485120"
  },
  {
    "text": "the nugget task and it effectively allows to uh change the firmware uh",
    "start": "485120",
    "end": "491680"
  },
  {
    "text": "there are two commands involved in this procedure the first one allows to write on the flash",
    "start": "491680",
    "end": "497039"
  },
  {
    "text": "and uh overwrite the image that is not currently run",
    "start": "497039",
    "end": "502080"
  },
  {
    "text": "and this command will invalidate the magic number so that it will not boot",
    "start": "502080",
    "end": "507680"
  },
  {
    "text": "immediately and then with the second command this magic number will be",
    "start": "507680",
    "end": "513200"
  },
  {
    "text": "will be set again but requiring a a hush that is derived from",
    "start": "513200",
    "end": "520959"
  },
  {
    "text": "the user password the second way is uh represented by the rescue feature",
    "start": "520959",
    "end": "528000"
  },
  {
    "start": "523000",
    "end": "523000"
  },
  {
    "text": "this is instead implemented in the loader and it allows to only flash the rwa image",
    "start": "528000",
    "end": "535200"
  },
  {
    "text": "while deleting the b section entirely and the user data stored in the chip",
    "start": "535200",
    "end": "542560"
  },
  {
    "text": "this feature requires the image to be in a special format called rack rack file",
    "start": "542800",
    "end": "548480"
  },
  {
    "text": "and here we have on the right a representation of the packets with a header and footer with the with the hash",
    "start": "548480",
    "end": "556640"
  },
  {
    "text": "and this feature is only accessible in a fastboot mode",
    "start": "556640",
    "end": "563560"
  },
  {
    "start": "562000",
    "end": "562000"
  },
  {
    "text": "from the security point of view the firmware is first of all has a secure boot so as we have seen there are",
    "start": "563839",
    "end": "570640"
  },
  {
    "text": "signatures that are checked at a launch there is no memory management unit so things like",
    "start": "570640",
    "end": "578160"
  },
  {
    "text": "aslr code relocation of any kind are not possible but there is a memory protection unit that allows to divide",
    "start": "578160",
    "end": "584640"
  },
  {
    "text": "the memory into different partitions and assign different attributes and permissions to",
    "start": "584640",
    "end": "590959"
  },
  {
    "text": "these to these regions also uh the firmware is very simple as",
    "start": "590959",
    "end": "596800"
  },
  {
    "text": "we have said before having no dynamic allocation uh eliminates directly the presence of some classes of bugs there",
    "start": "596800",
    "end": "604240"
  },
  {
    "text": "is only one software protection which is also quite interesting to see",
    "start": "604240",
    "end": "610160"
  },
  {
    "text": "it's a hard-coded canary that is checked when the scheduler switches from one",
    "start": "610160",
    "end": "616480"
  },
  {
    "text": "task to another so canaries are a well-known exploit mitigation technique",
    "start": "616480",
    "end": "622480"
  },
  {
    "text": "uh however the fact that the value is hard coded makes it",
    "start": "622480",
    "end": "628079"
  },
  {
    "text": "quite easy to bypass we are not sure whether this is indeed a security property or",
    "start": "628079",
    "end": "633600"
  },
  {
    "text": "or if it if it was only implemented to detect errors or faulty states",
    "start": "633600",
    "end": "641680"
  },
  {
    "start": "641000",
    "end": "641000"
  },
  {
    "text": "the communication with android takes place using a protobuf a well-known serialization framework also developed",
    "start": "641839",
    "end": "648560"
  },
  {
    "text": "by google and this is language agnostic agnostic and specifically titan m uses the nanopb",
    "start": "648560",
    "end": "655279"
  },
  {
    "text": "project to encode and decode messages these messages are available because",
    "start": "655279",
    "end": "661839"
  },
  {
    "text": "they are part of the android open source project and",
    "start": "661839",
    "end": "666880"
  },
  {
    "text": "the fact that the protobuf is being used is yet another interesting property from the security point of view because it",
    "start": "666880",
    "end": "673279"
  },
  {
    "text": "reduces the risk of input validation bugs since the primitives are provided by",
    "start": "673279",
    "end": "679920"
  },
  {
    "text": "this dependency so let's take for as an example one specific uh task and one specific",
    "start": "679920",
    "end": "687040"
  },
  {
    "text": "feature of android that is strongbox which is the harder backed",
    "start": "687040",
    "end": "692880"
  },
  {
    "text": "key management api available in android",
    "start": "692880",
    "end": "698560"
  },
  {
    "text": "now strongbox behaves in a quite similar way to uh what is uh",
    "start": "698560",
    "end": "704000"
  },
  {
    "text": "done what what was done with trustzone so titan does not store any key but it only generates them and then",
    "start": "704000",
    "end": "711680"
  },
  {
    "text": "encrypts them with a key encryption key to allow them to be stored as key blobs",
    "start": "711680",
    "end": "716959"
  },
  {
    "text": "inside the android file system so this means that the root user on the android system can",
    "start": "716959",
    "end": "724399"
  },
  {
    "text": "effectively impersonate any app and use any key by sending it to titan but uh",
    "start": "724399",
    "end": "731600"
  },
  {
    "text": "again a root attacker cannot extract uh the keys",
    "start": "731600",
    "end": "736720"
  },
  {
    "text": "so um strombox uses this key encryption key",
    "start": "736720",
    "end": "742079"
  },
  {
    "text": "to to encrypt the keys uh it is built upon several components two interesting ones are the root of trust",
    "start": "742079",
    "end": "748720"
  },
  {
    "text": "that is a sha 256 digest sent by the bootloader when the chip is reset or",
    "start": "748720",
    "end": "754480"
  },
  {
    "text": "when the phone is is reset um also we have a salt that is uh locally",
    "start": "754480",
    "end": "761680"
  },
  {
    "text": "generated again from random on the titan m when a root of trust a",
    "start": "761680",
    "end": "766800"
  },
  {
    "text": "new root of trust is provided these values are stored in an area called sfs that is will become",
    "start": "766800",
    "end": "773680"
  },
  {
    "text": "interesting later on in the presentation so i will now let the floor to max who will introduce the tools that we",
    "start": "773680",
    "end": "780000"
  },
  {
    "text": "developed during this research we are going to present a set of tools",
    "start": "780000",
    "end": "785279"
  },
  {
    "text": "we implemented to help us in our research and the first tool we made is a geiger",
    "start": "785279",
    "end": "790480"
  },
  {
    "start": "788000",
    "end": "788000"
  },
  {
    "text": "loader whose role is to load images from the firmware file and the right addresses in geidra and we can do this",
    "start": "790480",
    "end": "797200"
  },
  {
    "text": "because the firmware file is in fact an encrypted and present in the smartphone's partition",
    "start": "797200",
    "end": "804160"
  },
  {
    "text": "and also thanks to some headers present in aosp that describes the image header",
    "start": "804160",
    "end": "810639"
  },
  {
    "text": "and given it gives an id of the flash layout our loader will also create the memory",
    "start": "810639",
    "end": "818079"
  },
  {
    "text": "regions that are needed by the firmware file the firmware such as the ram or",
    "start": "818079",
    "end": "823600"
  },
  {
    "text": "regions where you will find hardware registers maps and because ec is open source and also",
    "start": "823600",
    "end": "831920"
  },
  {
    "text": "because there are a lot of strings present in the film where it is in fact not so hard to reverse statically this",
    "start": "831920",
    "end": "837360"
  },
  {
    "text": "vmware however there are some parts that are more difficult to understand such as the state machine of the tasks",
    "start": "837360",
    "end": "844959"
  },
  {
    "text": "and for that it would be really helpful if we could dynamically trace the commands that are exchanged between the",
    "start": "844959",
    "end": "851279"
  },
  {
    "text": "titan m and android so we were wondering where to hook in",
    "start": "851279",
    "end": "858079"
  },
  {
    "start": "854000",
    "end": "854000"
  },
  {
    "text": "the android system and we decided to hook uh to instrument the android demon",
    "start": "858079",
    "end": "863360"
  },
  {
    "text": "citadel d indeed this demon is central uh in android",
    "start": "863360",
    "end": "868560"
  },
  {
    "text": "in the sense that every android components who want to communicate with the titan m have to uh send packets",
    "start": "868560",
    "end": "875839"
  },
  {
    "text": "through the citadeld daemon so we use frida",
    "start": "875839",
    "end": "881920"
  },
  {
    "text": "in order to hook a function called nosql application and this function has to be",
    "start": "881920",
    "end": "887199"
  },
  {
    "text": "called whenever there is a command sent to the chip and",
    "start": "887199",
    "end": "893279"
  },
  {
    "text": "thanks to this script frida script we can now see the command exchange between the android services",
    "start": "893279",
    "end": "899760"
  },
  {
    "text": "and the title name and this is an example of what we can see thanks to all scripts",
    "start": "899760",
    "end": "907680"
  },
  {
    "start": "901000",
    "end": "901000"
  },
  {
    "text": "here the command is uh add rng entropy and we can",
    "start": "907680",
    "end": "912800"
  },
  {
    "text": "introspect all the fields that of this command such as the app id in this case it's two",
    "start": "912800",
    "end": "918720"
  },
  {
    "text": "and it corresponds to the the task um key master and we can also see that the the robots",
    "start": "918720",
    "end": "926959"
  },
  {
    "text": "of the request and that the the reply is empty but it is not very convenient to use a",
    "start": "926959",
    "end": "933440"
  },
  {
    "text": "friday script to send messages uh to send comments to the titan m",
    "start": "933440",
    "end": "939440"
  },
  {
    "start": "939000",
    "end": "939000"
  },
  {
    "text": "we we created uh a nose a client that we call those clients that will send uh",
    "start": "939440",
    "end": "945680"
  },
  {
    "text": "that allows to send commands uh without by bypassing the citadel d demand and by",
    "start": "945680",
    "end": "951519"
  },
  {
    "text": "communicating directly with the kernel driver",
    "start": "951519",
    "end": "955839"
  },
  {
    "start": "956000",
    "end": "956000"
  },
  {
    "text": "and our client is using the protobuf definitions that are public in order to",
    "start": "956560",
    "end": "962480"
  },
  {
    "text": "generate the commands data but also to display in a domain readable way the",
    "start": "962480",
    "end": "968160"
  },
  {
    "text": "results sent by the chief so no thanks to our tools we can send",
    "start": "968160",
    "end": "974560"
  },
  {
    "text": "commands and sniff the commands that are exchanged when audrey booted and this is in fact",
    "start": "974560",
    "end": "981680"
  },
  {
    "text": "the limitation of our tools because there are some interesting commands that are sent by the bootloader of the main",
    "start": "981680",
    "end": "987199"
  },
  {
    "text": "cpu to the titan m for example the root of trust is provided by the",
    "start": "987199",
    "end": "992320"
  },
  {
    "text": "bootloader of the main cpu and while reversing the vmware of the",
    "start": "992320",
    "end": "997440"
  },
  {
    "text": "titan m we discovered that uh in some comment handlers there are some specific",
    "start": "997440",
    "end": "1003680"
  },
  {
    "text": "uh checks uh in order to see if the main cpu is in",
    "start": "1003680",
    "end": "1008800"
  },
  {
    "text": "bootloader mode otherwise the code isn't executed so to address these limitations we tried",
    "start": "1008800",
    "end": "1015839"
  },
  {
    "text": "to look directly for the spi bus on the hardware level",
    "start": "1015839",
    "end": "1021839"
  },
  {
    "start": "1020000",
    "end": "1020000"
  },
  {
    "text": "and at the beginning it was a stupid but uh taken by uh the other author who is",
    "start": "1022320",
    "end": "1028160"
  },
  {
    "text": "not there today um as we were struggling to find the sbi uh bus by autumn of the ways it proposed",
    "start": "1028160",
    "end": "1035839"
  },
  {
    "text": "to solder each of the 64 pins of the titan and onto the",
    "start": "1035839",
    "end": "1041918"
  },
  {
    "text": "record board you see on the on the right the green pcb and then solder back the",
    "start": "1041919",
    "end": "1047678"
  },
  {
    "text": "64 pins of the uh from the pcb from the bracket bolts to the footprint of the",
    "start": "1047679",
    "end": "1052960"
  },
  {
    "text": "pixel 3 on the pizza on the pixel 3. and so",
    "start": "1052960",
    "end": "1058400"
  },
  {
    "text": "as you can see he succeeded and he deserves a title of master",
    "start": "1058400",
    "end": "1064000"
  },
  {
    "text": "of micro soldering and what is cool with this setup is that first of all it works",
    "start": "1064000",
    "end": "1069440"
  },
  {
    "text": "the device uh boots and it can communicate with the titan and and on top of that we can place props to",
    "start": "1069440",
    "end": "1076240"
  },
  {
    "text": "sniff the signal on each uh in on every piece of the titan uh using tools such",
    "start": "1076240",
    "end": "1082480"
  },
  {
    "text": "as a logic analyzer and uh thanks to that we have been able to guess the pin outs of the chip",
    "start": "1082480",
    "end": "1090880"
  },
  {
    "start": "1089000",
    "end": "1089000"
  },
  {
    "text": "so this is the result of this guessing step and the first thing you may notice",
    "start": "1091039",
    "end": "1097039"
  },
  {
    "text": "notice is that we identified the spi bus there you can see the green boxes on the",
    "start": "1097039",
    "end": "1102160"
  },
  {
    "text": "right of the matrix we also discovered i identified the uart pins but the uat is also exposed on the",
    "start": "1102160",
    "end": "1109760"
  },
  {
    "text": "phone pcb and it is more convenient to use it directly on the pcb of the smartphones insane instead of",
    "start": "1109760",
    "end": "1116799"
  },
  {
    "text": "desoldering the chip we also identified",
    "start": "1116799",
    "end": "1122400"
  },
  {
    "text": "two pins of the usb bus that you can see on the left of the matrix",
    "start": "1122400",
    "end": "1127520"
  },
  {
    "text": "and uh this usb bus seems to be accessible through a debug cable called suzy cable and when using this cable the",
    "start": "1127520",
    "end": "1134880"
  },
  {
    "text": "uart console becomes available through usb another point of interest is that",
    "start": "1134880",
    "end": "1142080"
  },
  {
    "text": "the buttons the physical buttons of the smartphones are directly connected to the titan hem so it can detect when one",
    "start": "1142080",
    "end": "1149280"
  },
  {
    "text": "is pressed on the hardware level and some of you may wonder why there are so many white pins of white boxes uh in",
    "start": "1149280",
    "end": "1157919"
  },
  {
    "text": "fact we believe these are not used and that there is nothing behind on the pcb",
    "start": "1157919",
    "end": "1163280"
  },
  {
    "text": "of the device while for the yellow ones it seems that they are connected to something but we",
    "start": "1163280",
    "end": "1168640"
  },
  {
    "text": "still don't know what it is and thanks to this setup we can now",
    "start": "1168640",
    "end": "1173840"
  },
  {
    "start": "1171000",
    "end": "1171000"
  },
  {
    "text": "sniff the communications even with the main cpu in the bootloader mode",
    "start": "1173840",
    "end": "1178960"
  },
  {
    "text": "and so we are using a logic analyzer we made a trace of the different commands",
    "start": "1178960",
    "end": "1184559"
  },
  {
    "text": "exchanged after the spi rescue feature is used and",
    "start": "1184559",
    "end": "1190400"
  },
  {
    "text": "if you remember the spi rescue will erase all the data on the title name and it so it means that the bootloader need",
    "start": "1190400",
    "end": "1197039"
  },
  {
    "text": "to re-initialize it and here we can see that uh by sending the setput of trust",
    "start": "1197039",
    "end": "1202240"
  },
  {
    "text": "command to the key master task the bootloader is providing a new route of trust which is called here digest",
    "start": "1202240",
    "end": "1210480"
  },
  {
    "text": "we made a python script that will act as a driver to convert the packets",
    "start": "1211360",
    "end": "1217440"
  },
  {
    "text": "the spi packets into commands that we then send to a passer that is using the protobuf definition in",
    "start": "1217440",
    "end": "1224480"
  },
  {
    "text": "order to print the the commands in the nice way",
    "start": "1224480",
    "end": "1229600"
  },
  {
    "start": "1230000",
    "end": "1230000"
  },
  {
    "text": "now can we send commands using this setup and the short answer is no",
    "start": "1230480",
    "end": "1235520"
  },
  {
    "text": "not as is indeed the spi is not multi-controller in this setup the controller is the main",
    "start": "1235520",
    "end": "1242320"
  },
  {
    "text": "cpu and the titan m is a peripheral and with spi there can only be one controller one controller can speak can",
    "start": "1242320",
    "end": "1250080"
  },
  {
    "text": "speaks with several peripherals but one peripheral can only speak to one controller so we need to multiplex the",
    "start": "1250080",
    "end": "1256880"
  },
  {
    "text": "bus for a second controller and to simplify what we did we place an",
    "start": "1256880",
    "end": "1262480"
  },
  {
    "text": "interrupter to switch the controller from the main cpu to the second controller",
    "start": "1262480",
    "end": "1267760"
  },
  {
    "text": "which is a raspberry pi we are using to communicate on the spi bus and something else we had",
    "start": "1267760",
    "end": "1274159"
  },
  {
    "text": "to do was to use a level shifter to adapt the voltage because the raspberry pi is using a by",
    "start": "1274159",
    "end": "1280320"
  },
  {
    "text": "default and higher voltage than the titanium so we ended up with this",
    "start": "1280320",
    "end": "1286720"
  },
  {
    "text": "setup you can see on the left on the picture of the left um we have a",
    "start": "1286720",
    "end": "1292640"
  },
  {
    "text": "an interrupter a physical interrupter that we can use to manually switch from one controller the main cpu uh to the",
    "start": "1292640",
    "end": "1299919"
  },
  {
    "text": "other one or raspberry pi and so thanks to this setup we can know now send commands to the title name even when the",
    "start": "1299919",
    "end": "1305440"
  },
  {
    "text": "main cpu is in the bootloader mode and as you will see we use this setup in",
    "start": "1305440",
    "end": "1311360"
  },
  {
    "text": "fact to exploit one of the printer abilities we are going to present",
    "start": "1311360",
    "end": "1316880"
  },
  {
    "text": "so i'm not going uh no i'm uh going to present uh some vulnerabilities we discovered and how we exploited them",
    "start": "1317280",
    "end": "1325200"
  },
  {
    "start": "1325000",
    "end": "1325000"
  },
  {
    "text": "and the first vulnerability we found um is an art of bond breed",
    "start": "1325200",
    "end": "1330640"
  },
  {
    "text": "impacting the um the command do i pass through uh from",
    "start": "1330640",
    "end": "1335760"
  },
  {
    "text": "the nuggets task and the particularity of this bug is that it can only be triggered um",
    "start": "1335760",
    "end": "1342960"
  },
  {
    "text": "when the main cpu is in boot order mode this is why the setup i just presented is in fact very useful when it comes to",
    "start": "1342960",
    "end": "1348960"
  },
  {
    "text": "exploiting this vulnerability and in this case in the case of this",
    "start": "1348960",
    "end": "1354640"
  },
  {
    "text": "command the index as you that you can see as is the argument of this function and is",
    "start": "1354640",
    "end": "1361039"
  },
  {
    "text": "controlled by the attacker by the attacker um there is only one check on this index it",
    "start": "1361039",
    "end": "1366960"
  },
  {
    "text": "has to be different from the value passed through and when it is",
    "start": "1366960",
    "end": "1372000"
  },
  {
    "text": "it is used as the uh indexed uh of a string array to retrieve a string uh and",
    "start": "1372000",
    "end": "1377840"
  },
  {
    "text": "this string is going to be printed on the uart so as you can see on the string array",
    "start": "1377840",
    "end": "1383120"
  },
  {
    "text": "that is on the right um there are only five strings so if we use a higher value",
    "start": "1383120",
    "end": "1389520"
  },
  {
    "text": "than 5 we will we will in fact tell the system to print",
    "start": "1389520",
    "end": "1395039"
  },
  {
    "text": "a string at another address so we can use this generability to leak",
    "start": "1395039",
    "end": "1400240"
  },
  {
    "text": "information to leak data on the ult so there are several uh addresses that",
    "start": "1400240",
    "end": "1407440"
  },
  {
    "text": "are interested for example some are in fact uh hardware registers and they can",
    "start": "1407440",
    "end": "1412559"
  },
  {
    "text": "contain interesting data but the ones that we already uh that we really targeted are the addresses close to zero",
    "start": "1412559",
    "end": "1419200"
  },
  {
    "text": "because if you remember at the address zero there is the boot rom and it means that we can leak parts of",
    "start": "1419200",
    "end": "1426320"
  },
  {
    "text": "the boot rom uh thanks to this vulnerability there is one limitation it is that the",
    "start": "1426320",
    "end": "1431679"
  },
  {
    "text": "system is going to print a string and not a byte array so we can only print we can only",
    "start": "1431679",
    "end": "1437919"
  },
  {
    "text": "leak parts of the boot rom using this vulnerability",
    "start": "1437919",
    "end": "1442640"
  },
  {
    "start": "1442000",
    "end": "1442000"
  },
  {
    "text": "the second venerability we discovered is a downgrade issue it seems that there is an anti-downgrade",
    "start": "1442960",
    "end": "1449679"
  },
  {
    "text": "mechanism that is implemented but not used indeed the bootrom and",
    "start": "1449679",
    "end": "1454720"
  },
  {
    "text": "the loader when verifying the signature at boots they",
    "start": "1454720",
    "end": "1459760"
  },
  {
    "text": "will take into account a value that is coming from a hardware region that is",
    "start": "1459760",
    "end": "1464799"
  },
  {
    "text": "called efuse and this region is supposed to be updated",
    "start": "1464799",
    "end": "1470320"
  },
  {
    "text": "each time there is a new firmware that is uh installed updated on on the chip",
    "start": "1470320",
    "end": "1477520"
  },
  {
    "text": "and this is not in fact updated this value is never updated and it means that we can downgrade to any old firmware",
    "start": "1477520",
    "end": "1485279"
  },
  {
    "text": "using the spi rescue feature so can we use this vulnerability and",
    "start": "1485279",
    "end": "1491200"
  },
  {
    "text": "exploit a known vulnerability from an old firmware",
    "start": "1491200",
    "end": "1496559"
  },
  {
    "text": "in order to let's say find a better leak or simply execute",
    "start": "1496559",
    "end": "1501919"
  },
  {
    "text": "code on on the on the chip and the answer is yes but it's not that",
    "start": "1501919",
    "end": "1506960"
  },
  {
    "start": "1505000",
    "end": "1505000"
  },
  {
    "text": "easy indeed the android security buttons contains um",
    "start": "1506960",
    "end": "1514400"
  },
  {
    "text": "details about all the cves impacting a usb but also the pixel devices however",
    "start": "1514400",
    "end": "1520240"
  },
  {
    "text": "it is hard to find the details uh i mean the details are not sufficient to identify clearly",
    "start": "1520240",
    "end": "1528080"
  },
  {
    "text": "the vulnerabilities that are impacting the titanium and um so this is why the the vulnerability we",
    "start": "1528080",
    "end": "1536000"
  },
  {
    "text": "are presenting now uh has three we present three cve numbers because we",
    "start": "1536000",
    "end": "1541600"
  },
  {
    "text": "cannot tell precisely which one it is so this vulnerability is impacting the",
    "start": "1541600",
    "end": "1546720"
  },
  {
    "text": "command i see push reader search from the identity task and it is a classical buffer overflow",
    "start": "1546720",
    "end": "1554000"
  },
  {
    "text": "the kind of overflow you just study at school and in this case if you look at the man",
    "start": "1554000",
    "end": "1560000"
  },
  {
    "text": "copy line the variables uh pub key addo and puppy size are controlled by the attacker in",
    "start": "1560000",
    "end": "1566799"
  },
  {
    "text": "fact pep key iddo is pointing onto a buffer that is also controlled by the",
    "start": "1566799",
    "end": "1573039"
  },
  {
    "text": "attacker and it's computed from the buffer address and an offset that is also controlled by the attacker so",
    "start": "1573039",
    "end": "1580320"
  },
  {
    "text": "this function will copy uh values from this uh this buffer into the the global variable",
    "start": "1580320",
    "end": "1587120"
  },
  {
    "text": "that is called ic struct and after this that after this ic struct",
    "start": "1587120",
    "end": "1594159"
  },
  {
    "text": "viable there are some interesting data such as the runtime that they have the chip or the list",
    "start": "1594159",
    "end": "1600080"
  },
  {
    "text": "of commands of command enders that are in fact pointers that the system will use",
    "start": "1600080",
    "end": "1605279"
  },
  {
    "text": "whenever a command is is sent to the chip the the system will",
    "start": "1605279",
    "end": "1610880"
  },
  {
    "text": "retrieve the corresponding pointer and execute the code that is there it means that if we can overwrite let's say avb",
    "start": "1610880",
    "end": "1617120"
  },
  {
    "text": "gate state with a pointer of our choice that points to a region memory region that is",
    "start": "1617120",
    "end": "1623840"
  },
  {
    "text": "executable and that contains the code we want to be executed then the system will execute it after we send avb getstate",
    "start": "1623840",
    "end": "1631120"
  },
  {
    "text": "commands so basically we can regain code execution thanks to this vulnerability",
    "start": "1631120",
    "end": "1638399"
  },
  {
    "start": "1637000",
    "end": "1637000"
  },
  {
    "text": "so we modified our nose client in order to exploit this renewability",
    "start": "1638399",
    "end": "1643840"
  },
  {
    "text": "and because we could not find the proper way to reconfigure the mpu we had to reuse",
    "start": "1643840",
    "end": "1650480"
  },
  {
    "text": "the code to that is already present in the system we cannot turn a memory page both",
    "start": "1650480",
    "end": "1655919"
  },
  {
    "text": "right writable and executable so we have to use rob chains in our exploits",
    "start": "1655919",
    "end": "1663360"
  },
  {
    "text": "but it's it's still very interesting uh this vulnerability and uh",
    "start": "1663600",
    "end": "1669679"
  },
  {
    "text": "we can do a lot of things uh thanks to uh thanks to it and for example we implemented a leak function you know",
    "start": "1669679",
    "end": "1676000"
  },
  {
    "text": "clients that uh leak that that leaks arbitrary data from the",
    "start": "1676000",
    "end": "1681039"
  },
  {
    "text": "memory and this is quite helpful for for debugging but it also allows us to",
    "start": "1681039",
    "end": "1687520"
  },
  {
    "text": "dump the full boot rom this time and we can also use this vulnerability to leak critical information such as the",
    "start": "1687520",
    "end": "1694159"
  },
  {
    "text": "root of trust and it could have been used in fact uh leaking the root of trust in this the",
    "start": "1694159",
    "end": "1700559"
  },
  {
    "text": "salt fruit from strongbox could have been used to decrypt the clip keyblobs and break strongbots but if you remember",
    "start": "1700559",
    "end": "1706880"
  },
  {
    "text": "the spi risky feature that we need to use to exploit this one-day funeral ability it erases the data presents on",
    "start": "1706880",
    "end": "1714000"
  },
  {
    "text": "the titan and the titanium and so it also erase the salt so this this is not really",
    "start": "1714000",
    "end": "1719360"
  },
  {
    "text": "applicable in this case so to conclude on the venerabilities we reported these two vulnerabilities to",
    "start": "1719360",
    "end": "1725760"
  },
  {
    "text": "google and they are not fixed so now i'm going to let damiano speaks about veneer fuzzing for more vulnerabilities",
    "start": "1725760",
    "end": "1733919"
  },
  {
    "text": "so to find new vulnerabilities on titan m in an automatic way we wanted to explore uh how to use fuzzing so how to",
    "start": "1733919",
    "end": "1741440"
  },
  {
    "text": "fuzz the chip and and see what results we can get uh titan m is not exactly the easiest of",
    "start": "1741440",
    "end": "1749360"
  },
  {
    "start": "1746000",
    "end": "1746000"
  },
  {
    "text": "the targets for a fuzzer since it is closed by design and does not really give any visibility over over its",
    "start": "1749360",
    "end": "1756240"
  },
  {
    "text": "internals the only option we have is to use it as an oracle and",
    "start": "1756240",
    "end": "1761279"
  },
  {
    "text": "call the library function to send a message and judge what happened from the return",
    "start": "1761279",
    "end": "1766640"
  },
  {
    "text": "code of this call so since we know well how the chip communicates with android this is",
    "start": "1766640",
    "end": "1771919"
  },
  {
    "text": "actually possible and we also know the format of the messages uh since it is open source so we decided to update to",
    "start": "1771919",
    "end": "1778880"
  },
  {
    "text": "adopt a mutation based approach uh we integrated the liber protobuf mutator in",
    "start": "1778880",
    "end": "1785120"
  },
  {
    "text": "our client and we ran in total two fuzzing campaigns the first one on an old version of the",
    "start": "1785120",
    "end": "1792480"
  },
  {
    "text": "firmware is the last one of last year and in this version we managed to find",
    "start": "1792480",
    "end": "1797600"
  },
  {
    "text": "uh two buffer overflows uh one of them is actually the one that max just showed how to",
    "start": "1797600",
    "end": "1804640"
  },
  {
    "text": "exploit so essentially we managed to replicate uh the findings that we",
    "start": "1804640",
    "end": "1810720"
  },
  {
    "text": "had found with static reversing we also found seven other vulnerabilities that either",
    "start": "1810720",
    "end": "1817360"
  },
  {
    "text": "make the chip reboot or crash or in general reach",
    "start": "1817360",
    "end": "1822480"
  },
  {
    "text": "an invaded state uh so this proves that the approach",
    "start": "1822480",
    "end": "1827520"
  },
  {
    "text": "is interesting it can work so we ran a second campaign on the latest version of the femur and there we found that two",
    "start": "1827520",
    "end": "1834399"
  },
  {
    "text": "bugs were still present and uh by using the read primitive that we",
    "start": "1834399",
    "end": "1840159"
  },
  {
    "text": "built upon the uh exploit of the known vulnerability we inspected the the",
    "start": "1840159",
    "end": "1846640"
  },
  {
    "text": "memory around the code that was crashing and we understood that uh the two commands were calling the same function",
    "start": "1846640",
    "end": "1854399"
  },
  {
    "text": "that was doing a new pointer the reference so this is a great use case for that uh",
    "start": "1854399",
    "end": "1860000"
  },
  {
    "text": "read primitive we managed to see that that structure was indeed uh not initialized uh when the code was",
    "start": "1860000",
    "end": "1867120"
  },
  {
    "text": "reaching it so um we reported these bugs uh and uh google considered them uh not",
    "start": "1867120",
    "end": "1873840"
  },
  {
    "text": "severe enough to end up in the bulletin uh so this is uh the the results but in",
    "start": "1873840",
    "end": "1880320"
  },
  {
    "text": "general we are uh showing that uh fuzzer is giving new",
    "start": "1880320",
    "end": "1886000"
  },
  {
    "text": "results and interesting results so a few comments uh again um",
    "start": "1886000",
    "end": "1892799"
  },
  {
    "start": "1889000",
    "end": "1889000"
  },
  {
    "text": "all these bugs uh were found after uh really few seconds of fuzzing uh",
    "start": "1892799",
    "end": "1898320"
  },
  {
    "text": "so after these these first findings nothing uh nothing happened afterwards so uh",
    "start": "1898320",
    "end": "1905200"
  },
  {
    "text": "this is uh on the one hand interesting because it means we are visiting uh",
    "start": "1905200",
    "end": "1910720"
  },
  {
    "text": "some interesting code paths but at the same time uh we might be encountering one of the main issues of black box",
    "start": "1910720",
    "end": "1917200"
  },
  {
    "text": "fuzzers that is uh to only be able to scratch the surface of targets and uh",
    "start": "1917200",
    "end": "1923760"
  },
  {
    "text": "only be able to exercise uh shallow states so this is a result of not having",
    "start": "1923760",
    "end": "1930000"
  },
  {
    "text": "any coverage and uh to improve that we can try to build a picture of what happened after a",
    "start": "1930000",
    "end": "1936559"
  },
  {
    "text": "command by not only reading the return code but also parsing the actual response",
    "start": "1936559",
    "end": "1942559"
  },
  {
    "text": "this we can do it from the response that is given",
    "start": "1942559",
    "end": "1947679"
  },
  {
    "text": "to the command or parsing the uart log which however requires to change the fuzzer architecture a little bit so this",
    "start": "1947679",
    "end": "1955279"
  },
  {
    "text": "is a first idea to try to improve a visit and have a bit of visibility",
    "start": "1955279",
    "end": "1962000"
  },
  {
    "text": "over what happened after a comment uh the alternative is uh to change",
    "start": "1962000",
    "end": "1967200"
  },
  {
    "text": "completely uh approach and uh adopting an emulation based solution in that case",
    "start": "1967200",
    "end": "1973360"
  },
  {
    "text": "we will we would encounter different range of problems because it",
    "start": "1973360",
    "end": "1978960"
  },
  {
    "text": "is really a completely different approach but it is definitely worth being explored",
    "start": "1978960",
    "end": "1984960"
  },
  {
    "text": "in any case it is hard to turn the grammar awareness that our father is",
    "start": "1984960",
    "end": "1991200"
  },
  {
    "text": "built upon into protocol awareness so being able to simulate complex sequences of",
    "start": "1991200",
    "end": "1996640"
  },
  {
    "text": "messages and and interactions with the chip that is we will always be",
    "start": "1996640",
    "end": "2002720"
  },
  {
    "text": "a bit hard for a fuzzer and will require some cost of development",
    "start": "2002720",
    "end": "2008159"
  },
  {
    "text": "so uh to conclude this talk uh we start from the we started from the",
    "start": "2008159",
    "end": "2013600"
  },
  {
    "start": "2010000",
    "end": "2010000"
  },
  {
    "text": "firmware and we found some interesting properties uh the design and in general the",
    "start": "2013600",
    "end": "2020559"
  },
  {
    "text": "the choices behind security seems solid but there are there are some debatable",
    "start": "2020559",
    "end": "2026320"
  },
  {
    "text": "measures such as that hard coded canary we developed and shared with the",
    "start": "2026320",
    "end": "2032159"
  },
  {
    "text": "community some tools to interact with the chip and also on the hardware side there is some work",
    "start": "2032159",
    "end": "2038480"
  },
  {
    "text": "that some researchers can can do if they are willing to to explore this co this",
    "start": "2038480",
    "end": "2044000"
  },
  {
    "text": "this new module and we also managed to use a non-vulnerability to leak the",
    "start": "2044000",
    "end": "2049919"
  },
  {
    "text": "bootrom and mount what is actually the first uh code execution exploit known on the",
    "start": "2049919",
    "end": "2056960"
  },
  {
    "text": "titanium finally we also explored how to use fuzzing",
    "start": "2056960",
    "end": "2062000"
  },
  {
    "text": "we managed to get some interesting results but we also have some ideas on",
    "start": "2062000",
    "end": "2067040"
  },
  {
    "text": "how to improve that and perhaps find even more interesting results [Music]",
    "start": "2067040",
    "end": "2072800"
  },
  {
    "text": "so at the link that you have in the slide you will find our tools open sourced and uh that is that is it for",
    "start": "2072800",
    "end": "2079280"
  },
  {
    "text": "this talk uh thank you very much for uh your attendance and we are happy to take any questions",
    "start": "2079280",
    "end": "2085690"
  },
  {
    "text": "[Music]",
    "start": "2085690",
    "end": "2095279"
  },
  {
    "text": "you",
    "start": "2095760",
    "end": "2097839"
  }
]