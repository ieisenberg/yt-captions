[
  {
    "start": "0",
    "end": "156000"
  },
  {
    "text": "[Music]",
    "start": "1130",
    "end": "14690"
  },
  {
    "text": "hello everyone this is threat hunting in active directory environment thanks for tuning in to our session my name is",
    "start": "17199",
    "end": "23119"
  },
  {
    "text": "anurag and today with my colleague thiru i'll be talking about active directory security",
    "start": "23119",
    "end": "28320"
  },
  {
    "text": "we both work at mandiant and at mandate we work on a large number of incident response cases",
    "start": "28320",
    "end": "34160"
  },
  {
    "text": "for both small as well as large organizations some of these cases involve financially motivated protectors",
    "start": "34160",
    "end": "41120"
  },
  {
    "text": "and others nation state-backed in our experience through all these investigations and attacks one thing",
    "start": "41120",
    "end": "48399"
  },
  {
    "text": "remains consistent majority of these attacks involve microsoft active directory in one way or",
    "start": "48399",
    "end": "54640"
  },
  {
    "text": "the other while working through all these cases we realized that a lot of defenders do not",
    "start": "54640",
    "end": "61280"
  },
  {
    "text": "understand the intricacies of an active directory environment how complex and large the attack surface",
    "start": "61280",
    "end": "68000"
  },
  {
    "text": "is today we would like to share some of the attack techniques we have seen threat actors use to target active directory",
    "start": "68000",
    "end": "76479"
  },
  {
    "text": "we'll put out some hypothesis based on those techniques and then we'll talk about how defenders",
    "start": "76479",
    "end": "82400"
  },
  {
    "text": "can detect those and hunt for those ttps in their environment the bottom line is that we want",
    "start": "82400",
    "end": "89280"
  },
  {
    "text": "defenders to understand the ad attack service better and hunt for attacker",
    "start": "89280",
    "end": "94320"
  },
  {
    "text": "techniques in their environment as i said my name is anurag and i am a",
    "start": "94320",
    "end": "99439"
  },
  {
    "text": "principal consultant with mandate sts based in singapore i in mandate i focus on incident response",
    "start": "99439",
    "end": "106880"
  },
  {
    "text": "incident remediation active directory and cloud security i am also a sans community instructor",
    "start": "106880",
    "end": "112880"
  },
  {
    "text": "for the apj region with me i have my colleague thiru",
    "start": "112880",
    "end": "117920"
  },
  {
    "text": "hi my name is kirimlin adrajan i am a principal consultant in mandiant supporting customers to respond to major",
    "start": "117920",
    "end": "124479"
  },
  {
    "text": "security breaches and assessing their security posture of active directory and cloud enrollments",
    "start": "124479",
    "end": "130399"
  },
  {
    "text": "along with that i also have experience in building and managing security operation centers apart from that i am a hardcore football",
    "start": "130399",
    "end": "136800"
  },
  {
    "text": "fan i used to play football now kind of retired and happily watching in television in today's talk we have a lot of hunting",
    "start": "136800",
    "end": "143440"
  },
  {
    "text": "context to discuss around techniques and tactics observed in actual directory environment",
    "start": "143440",
    "end": "148879"
  },
  {
    "text": "i'm going to take a pass for a while and i'm going to turn it back to my colleague anurag and he will continue",
    "start": "148879",
    "end": "154000"
  },
  {
    "text": "the talk thanks zeru for that",
    "start": "154000",
    "end": "159200"
  },
  {
    "text": "so why talk about active directory active directory is widely adopted and is the underlying",
    "start": "159200",
    "end": "165040"
  },
  {
    "text": "iit fabric for a large number of organizations this makes active directory a very",
    "start": "165040",
    "end": "171040"
  },
  {
    "text": "attractive lucrative target for the protectors moreover active directory is a large",
    "start": "171040",
    "end": "177440"
  },
  {
    "text": "intricate and complex eye attack surface there are a lot of moving parts in an active directory environment this",
    "start": "177440",
    "end": "184319"
  },
  {
    "text": "provides several opportunities for protectors to maintain covert persistence and exert control over a",
    "start": "184319",
    "end": "190720"
  },
  {
    "text": "large part of the iit environment the bottom line is that threat actors are actively abusing",
    "start": "190720",
    "end": "197840"
  },
  {
    "text": "active directory it's time defenders step up and start looking for attacker ttps in their ad",
    "start": "197840",
    "end": "204480"
  },
  {
    "text": "environment the way we have structured this talk is talk through hypothesis",
    "start": "204480",
    "end": "209599"
  },
  {
    "text": "we want to share attacker techniques techniques which detectors use to target active directory",
    "start": "209599",
    "end": "216400"
  },
  {
    "text": "the purpose of doing that is to fold we would like to provide some sample hypothesis for defenders to hunt through",
    "start": "216400",
    "end": "224560"
  },
  {
    "text": "their environment looking for those ttps second we work with a lot of",
    "start": "224560",
    "end": "230640"
  },
  {
    "text": "organizations to execute what we call eradication or eviction events",
    "start": "230640",
    "end": "236000"
  },
  {
    "text": "these events are designed to evict a threat actor out of the organization's i.t environment and regain the control",
    "start": "236000",
    "end": "243439"
  },
  {
    "text": "of the iit environment these hunts are based on certain aspects which we see",
    "start": "243439",
    "end": "249360"
  },
  {
    "text": "teams defense teams and eradication teams often miss before they perform the",
    "start": "249360",
    "end": "255200"
  },
  {
    "text": "eradication events so these can be used by the eradication teams to review the environments before",
    "start": "255200",
    "end": "261840"
  },
  {
    "text": "doing the eviction event we have identified some hypothesis",
    "start": "261840",
    "end": "267520"
  },
  {
    "text": "hypothesis are a hunter's idea of what threats might exist in their environment",
    "start": "267520",
    "end": "272880"
  },
  {
    "text": "and that decides what they should be looking for the hunts we are talking about today the",
    "start": "272880",
    "end": "279840"
  },
  {
    "text": "techniques we are referring to today are actual protector tdps these are techniques that have been used",
    "start": "279840",
    "end": "286880"
  },
  {
    "text": "by adversaries in organizations i'll talk through the first three",
    "start": "286880",
    "end": "292960"
  },
  {
    "text": "hypotheses i'll start talking through delegation misuse for persistence then i'll talk about how attackers can abuse",
    "start": "292960",
    "end": "299199"
  },
  {
    "text": "ds replication permission and then one of my favorite technique which is persistence using machine",
    "start": "299199",
    "end": "305440"
  },
  {
    "text": "dollar credentials then i hand it over to thiru we'll talk through malicious group policy objects",
    "start": "305440",
    "end": "312320"
  },
  {
    "text": "gpus we have seen financially motivated threat actors extensively abuse gpos",
    "start": "312320",
    "end": "318479"
  },
  {
    "text": "during the last year then we'll talk about cross forest trust abuse using seed history and the last",
    "start": "318479",
    "end": "326000"
  },
  {
    "text": "hypothesis we have is how attackers can perform credential harvesting by",
    "start": "326000",
    "end": "331199"
  },
  {
    "text": "targeting azure ad connect servers in a hybrid ad environment",
    "start": "331199",
    "end": "337680"
  },
  {
    "text": "hunt we talk about is structured in three parts the first part is where we put out the",
    "start": "337680",
    "end": "343840"
  },
  {
    "text": "hypothesis the second part is where we talk through how attacker implements the backdoor or",
    "start": "343840",
    "end": "350720"
  },
  {
    "text": "exploits the system and the third and the most important part is where we talk about how",
    "start": "350720",
    "end": "356639"
  },
  {
    "text": "defenders can detect these ttps in their environment and can hunt for the",
    "start": "356639",
    "end": "362319"
  },
  {
    "text": "attacker techniques in the environment so the first technique we're going to talk about is delegation misuse for",
    "start": "362319",
    "end": "369840"
  },
  {
    "text": "persistence i have two hypotheses for delegation misuse",
    "start": "369840",
    "end": "375039"
  },
  {
    "start": "371000",
    "end": "472000"
  },
  {
    "text": "but before we start talking through how attackers misuse delegation let's understand what delegation is",
    "start": "375039",
    "end": "381919"
  },
  {
    "text": "kerberos delegation is a feature of active directory and is used extensively in multi-tier application service",
    "start": "381919",
    "end": "388160"
  },
  {
    "text": "environments consider a simple environment where we have a user who accesses a web server",
    "start": "388160",
    "end": "394319"
  },
  {
    "text": "and web server pulls data from a backend database server when",
    "start": "394319",
    "end": "399600"
  },
  {
    "text": "delegation is configured a web server can mimic and impersonate the user the",
    "start": "399600",
    "end": "405360"
  },
  {
    "text": "web server can use the exact permissions what the user has over the database server to access the database server on",
    "start": "405360",
    "end": "413120"
  },
  {
    "text": "users behalf there are three forms of delegation unconstrained delegation constrained",
    "start": "413120",
    "end": "419680"
  },
  {
    "text": "delegation and resource constraint delegation or rbcd in case of unconstrained delegation when",
    "start": "419680",
    "end": "426720"
  },
  {
    "text": "a user connects to the web server the tgt of the user is placed on the web",
    "start": "426720",
    "end": "432000"
  },
  {
    "text": "server the ticket granting ticket of the user is placed on the web server",
    "start": "432000",
    "end": "437599"
  },
  {
    "text": "if an attacker can exert control over the web server or access the web server with administrative privileges an",
    "start": "437599",
    "end": "444000"
  },
  {
    "text": "attacker can steal the tgt once the attacker steals the tgt the attacker can impersonate the user to",
    "start": "444000",
    "end": "450720"
  },
  {
    "text": "access any resource in active directory environment unconstrained delegation is vulnerable",
    "start": "450720",
    "end": "458319"
  },
  {
    "text": "and should not be used we have seen a lot of organizations move from unconstrained delegation to",
    "start": "458319",
    "end": "464720"
  },
  {
    "text": "constrained delegation and resource-based constraint delegation",
    "start": "464720",
    "end": "469840"
  },
  {
    "text": "the hypothesis which we are sharing today are based on constrained delegation and",
    "start": "469840",
    "end": "475919"
  },
  {
    "text": "rbcd the first hypothesis is the threat actor has configured constrained delegation to",
    "start": "475919",
    "end": "482479"
  },
  {
    "text": "maintain persistent access to the domain controller how is constrained delegation different",
    "start": "482479",
    "end": "488960"
  },
  {
    "text": "than unconstrained delegation the constrained delegation is configured",
    "start": "488960",
    "end": "494720"
  },
  {
    "text": "on the front-end server in our last example it was the web server",
    "start": "494720",
    "end": "500638"
  },
  {
    "text": "it is defined on the web server or in this case service a which services",
    "start": "500800",
    "end": "506639"
  },
  {
    "text": "can service a access as part of delegation this is implemented using two features",
    "start": "506639",
    "end": "513839"
  },
  {
    "text": "and i am talking about a specific case of constrained delegation with protocol transition enabled",
    "start": "513839",
    "end": "520399"
  },
  {
    "text": "the two features are as for you to self and as per youtube proxy s for you to self is used for protocol",
    "start": "520399",
    "end": "527839"
  },
  {
    "text": "transition s for you to self allows a service to receive a forwardable tgs for any user",
    "start": "527839",
    "end": "535440"
  },
  {
    "text": "principle without needing delegated credential tokens",
    "start": "535440",
    "end": "541200"
  },
  {
    "text": "yes you heard it right without having a delegated credential token service a can use s for you to",
    "start": "541200",
    "end": "549360"
  },
  {
    "text": "self to request for a forwardable tgs for any user principle",
    "start": "549360",
    "end": "557120"
  },
  {
    "text": "once this has been done s for you to proxy is used to use that forward tgs",
    "start": "557120",
    "end": "562720"
  },
  {
    "text": "which was received as part of the step one to request another tgs to the target",
    "start": "562720",
    "end": "568959"
  },
  {
    "text": "service that could be the database service in a last example or it could be a domain",
    "start": "568959",
    "end": "574399"
  },
  {
    "text": "controller if attacker wants to use this for a covert access",
    "start": "574399",
    "end": "580320"
  },
  {
    "text": "how can an attacker configure this in an environment in order to configure this attacker can",
    "start": "581279",
    "end": "586720"
  },
  {
    "start": "584000",
    "end": "654000"
  },
  {
    "text": "use powershell the idea here is that attacker would like to maintain a covert persistent",
    "start": "586720",
    "end": "593519"
  },
  {
    "text": "access to a domain controller what the attacker does is the",
    "start": "593519",
    "end": "598880"
  },
  {
    "text": "configuration on service a object in the active directory environment",
    "start": "598880",
    "end": "604560"
  },
  {
    "text": "so attacker can use powershell to configure trusted to auth for delegation is true",
    "start": "604560",
    "end": "610480"
  },
  {
    "text": "this is where attacker is configuring enabling s for you to serve and the next step which is s for you to",
    "start": "610480",
    "end": "616959"
  },
  {
    "text": "proxy can be configured by setting msds allowed to delegate to property",
    "start": "616959",
    "end": "622720"
  },
  {
    "text": "pointing to service b the target service which the attacker wants access to and",
    "start": "622720",
    "end": "628320"
  },
  {
    "text": "that would be a domain controller once this configuration has been done",
    "start": "628320",
    "end": "633600"
  },
  {
    "text": "the back door has been set after the eradication event an attacker",
    "start": "633600",
    "end": "638720"
  },
  {
    "text": "can come back and if the attacker can exert control over service a they can",
    "start": "638720",
    "end": "643839"
  },
  {
    "text": "now go through the cycle of s for you to self as for you to proxy to access service b",
    "start": "643839",
    "end": "649839"
  },
  {
    "text": "which could be a domain controller what can defenders do to detect this in",
    "start": "649839",
    "end": "654959"
  },
  {
    "start": "654000",
    "end": "718000"
  },
  {
    "text": "the environment as a detection mechanism on domain controllers organizations should enable",
    "start": "654959",
    "end": "662160"
  },
  {
    "text": "computer account management audit events this policy setting is useful for",
    "start": "662160",
    "end": "667519"
  },
  {
    "text": "tracking account related changes to computers that are member of the domain",
    "start": "667519",
    "end": "673279"
  },
  {
    "text": "event id 4742 is triggered when changes to a computer object are made",
    "start": "673279",
    "end": "679920"
  },
  {
    "text": "any change to allow to delegate to property with the critical system spn as the",
    "start": "679920",
    "end": "685440"
  },
  {
    "text": "target should be reviewed an attacker can set this to the domain",
    "start": "685440",
    "end": "691360"
  },
  {
    "text": "controller to maintain that covert access threat hunters can perform hunt by using",
    "start": "691360",
    "end": "697839"
  },
  {
    "text": "powershell to list all the id objects in the environment and look for that msds allowed to",
    "start": "697839",
    "end": "703279"
  },
  {
    "text": "delegate to property set to a domain controller or any other critical server",
    "start": "703279",
    "end": "710320"
  },
  {
    "text": "so this is how attackers can use constrained delegation to implement those and use those at a later stage",
    "start": "710320",
    "end": "718560"
  },
  {
    "start": "718000",
    "end": "796000"
  },
  {
    "text": "not only constrained delegation rbcd resource based constraint delegation can",
    "start": "718560",
    "end": "723680"
  },
  {
    "text": "also be used so our next hypothesis is that an attacker is using the newer rbcd",
    "start": "723680",
    "end": "730399"
  },
  {
    "text": "or resource-based constraint delegation to maintain covert access in the",
    "start": "730399",
    "end": "735440"
  },
  {
    "text": "environment and access a domain controller how is rbcd different than",
    "start": "735440",
    "end": "742560"
  },
  {
    "text": "constrained delegation which we saw in our last hypothesis in case of rbcd the resource-based",
    "start": "742560",
    "end": "749920"
  },
  {
    "text": "constrained delegation the configuration is now done on service b object",
    "start": "749920",
    "end": "755200"
  },
  {
    "text": "service b object decides who can access it as part of dedication",
    "start": "755200",
    "end": "762959"
  },
  {
    "text": "the configuration is now being made at service b the rest of the steps remain the same",
    "start": "763440",
    "end": "768959"
  },
  {
    "text": "so an attacker can come back in do s for you to self as for you to proxy and access service b",
    "start": "768959",
    "end": "777519"
  },
  {
    "text": "the dc the domain controller checks for the requesting server example web server",
    "start": "777519",
    "end": "784079"
  },
  {
    "text": "should be present in the msds allowed to act on behalf of other identity property",
    "start": "784079",
    "end": "790079"
  },
  {
    "text": "of service b so how can an attacker use this for",
    "start": "790079",
    "end": "795360"
  },
  {
    "text": "their advantage so attacker can configure rbcd to configure rbcd they can use powershell",
    "start": "795360",
    "end": "803600"
  },
  {
    "start": "796000",
    "end": "835000"
  },
  {
    "text": "and set principles allowed to delegate to account property",
    "start": "803600",
    "end": "809120"
  },
  {
    "text": "this need to be set on service b and allow service a to access it",
    "start": "809120",
    "end": "815279"
  },
  {
    "text": "and once an attacker comes back they can go through the cycle of s for you to self as for you to proxy and then use",
    "start": "815279",
    "end": "821519"
  },
  {
    "text": "that ticket to access the target which can be a domain controller providing access a covert way to",
    "start": "821519",
    "end": "829199"
  },
  {
    "text": "escalate privileges at a later stage to access a domain controller",
    "start": "829199",
    "end": "834399"
  },
  {
    "text": "what can defenders do to detect rbcd on the domain controller if audit",
    "start": "834399",
    "end": "839920"
  },
  {
    "start": "835000",
    "end": "892000"
  },
  {
    "text": "directory service access policy is enabled it will provide a low level audit trail of changes that are being",
    "start": "839920",
    "end": "846320"
  },
  {
    "text": "made to objects in active directory let me warn you the event volume is high",
    "start": "846320",
    "end": "852160"
  },
  {
    "text": "for this specific group of logs event id 4662 and 5136",
    "start": "852160",
    "end": "859760"
  },
  {
    "text": "will both track and can be set to alert on changes being made on the ds object",
    "start": "859760",
    "end": "867680"
  },
  {
    "text": "hunting hunters can use powershell to list objects which have msds allowed",
    "start": "868839",
    "end": "876160"
  },
  {
    "text": "to delegate allowed to act on behalf of other identity property set",
    "start": "876160",
    "end": "882959"
  },
  {
    "text": "so that's what we hunters can do here and then they can list the objects to see what entries have been made and",
    "start": "882959",
    "end": "888480"
  },
  {
    "text": "review those for any malicious activity or malicious entries that's how rbcd can be used by attackers",
    "start": "888480",
    "end": "895279"
  },
  {
    "start": "892000",
    "end": "983000"
  },
  {
    "text": "and that's how defenders can detect those configurations let me move on to my second hypothesis",
    "start": "895279",
    "end": "903040"
  },
  {
    "text": "this is about attackers using bs replication permissions",
    "start": "903040",
    "end": "908399"
  },
  {
    "text": "the hypothesis is that the threat actor is assigned ts replication permission to a user they control a standard user",
    "start": "908399",
    "end": "915279"
  },
  {
    "text": "and then they are using that to remain persistent in the environment this is a technique which we have often",
    "start": "915279",
    "end": "920959"
  },
  {
    "text": "see attackers use attackers often assign user accounts they control specific privileged",
    "start": "920959",
    "end": "927519"
  },
  {
    "text": "permissions these are there are several permissions in active directory that can be assigned",
    "start": "927519",
    "end": "934000"
  },
  {
    "text": "to a security principle in an ad environment and then they can act as covered back",
    "start": "934000",
    "end": "939839"
  },
  {
    "text": "doors and at the same time provide capabilities for to an attacker to exert",
    "start": "939839",
    "end": "945120"
  },
  {
    "text": "control over the environment one such permission is ds replication",
    "start": "945120",
    "end": "950240"
  },
  {
    "text": "get changes and get changes on this have been made infamous by the tc",
    "start": "950240",
    "end": "955759"
  },
  {
    "text": "sync attack this permission allows the security principle to remotely retrieve hashes",
    "start": "955759",
    "end": "964320"
  },
  {
    "text": "from the domain controller by using the directory replication service remote protocol",
    "start": "964320",
    "end": "971199"
  },
  {
    "text": "so any standard user who has this permission can retrieve anti-hash of any",
    "start": "971199",
    "end": "976480"
  },
  {
    "text": "account in your environment from the domain controller by requesting it for",
    "start": "976480",
    "end": "981839"
  },
  {
    "text": "that so how does an attacker configure this an attacker can again use powershell so",
    "start": "981839",
    "end": "988880"
  },
  {
    "start": "983000",
    "end": "1024000"
  },
  {
    "text": "in this example we are using power view which has dc sync command an aptly named dc sync",
    "start": "988880",
    "end": "996480"
  },
  {
    "text": "command to provide these rights to a standard user once this has been set at a later stage",
    "start": "996480",
    "end": "1003199"
  },
  {
    "text": "when an attacker comes back if they still have access to that user they can use a tool like mimikatz to request for",
    "start": "1003199",
    "end": "1010320"
  },
  {
    "text": "a credential hash from the domain controller this hash can be of a domain admin an",
    "start": "1010320",
    "end": "1015839"
  },
  {
    "text": "enterprise admin or even off the kerb tgt account the all powerful kerb tgt",
    "start": "1015839",
    "end": "1021199"
  },
  {
    "text": "account so this technique is very powerful what can defenders do to detect it",
    "start": "1021199",
    "end": "1027918"
  },
  {
    "start": "1024000",
    "end": "1077000"
  },
  {
    "text": "when ds replication permissions are added to a user in a domain if directory service access changes are",
    "start": "1027919",
    "end": "1034400"
  },
  {
    "text": "enabled a 462 event is generated the grid that is added here refers to",
    "start": "1034400",
    "end": "1040640"
  },
  {
    "text": "the ds replication rights this should be reviewed when set",
    "start": "1040640",
    "end": "1045760"
  },
  {
    "text": "and analysis performed we can also perform a retrospective hunt",
    "start": "1045760",
    "end": "1051760"
  },
  {
    "text": "by using powershell a simple powershell command can list all objects in the environment that have ds",
    "start": "1051760",
    "end": "1058960"
  },
  {
    "text": "replication permission assigned and then they can be reviewed to ensure only accounts that require that right",
    "start": "1058960",
    "end": "1065919"
  },
  {
    "text": "help that right so that's how defenders can hunt for",
    "start": "1065919",
    "end": "1071440"
  },
  {
    "text": "any ds replication rights that have been assigned to stranded users and review those",
    "start": "1071440",
    "end": "1076799"
  },
  {
    "text": "this takes me to my third hypothesis which is persistence using machine dollar hash as i mentioned this is",
    "start": "1076799",
    "end": "1083120"
  },
  {
    "start": "1077000",
    "end": "1128000"
  },
  {
    "text": "my favorite technique among the six we are talking about today",
    "start": "1083120",
    "end": "1088159"
  },
  {
    "text": "when we work with the organizations to perform eradication events one key part of the puzzle is to perform enterprise",
    "start": "1088640",
    "end": "1095600"
  },
  {
    "text": "wide password reset and one piece in this puzzle which is often missed by eradication teams is",
    "start": "1095600",
    "end": "1102320"
  },
  {
    "text": "computer account passwords which makes this very attractive and apt",
    "start": "1102320",
    "end": "1109039"
  },
  {
    "text": "for threat actors to maintain covert long-term access post remediation exercises",
    "start": "1109039",
    "end": "1115600"
  },
  {
    "text": "and this is our next hypothesis for our hunt attackers have stolen a machine account password and is using it to access",
    "start": "1115600",
    "end": "1122960"
  },
  {
    "text": "critical servers or even exert control over the domain controller and access it",
    "start": "1122960",
    "end": "1128559"
  },
  {
    "start": "1128000",
    "end": "1178000"
  },
  {
    "text": "so what is machine account machine accounts are a bit of enigma and are often not completely understood by",
    "start": "1128559",
    "end": "1134400"
  },
  {
    "text": "defenders machine account is a security principle that is tied to a computer object",
    "start": "1134400",
    "end": "1141280"
  },
  {
    "text": "the password hash associated with this account can be used to create service tickets tgs",
    "start": "1141280",
    "end": "1148799"
  },
  {
    "text": "also silver tickets to access spn's tied to this machine",
    "start": "1148799",
    "end": "1154799"
  },
  {
    "text": "so these become very lucrative targets for trajectories fortunately for us these passwords are",
    "start": "1154799",
    "end": "1161520"
  },
  {
    "text": "rotated automatically every 30 days this password change is requested by the",
    "start": "1161520",
    "end": "1167360"
  },
  {
    "text": "computer object the machine in question and is also configured in the registry",
    "start": "1167360",
    "end": "1173039"
  },
  {
    "text": "of that machine which actually creates a little bit of security weakness",
    "start": "1173039",
    "end": "1178400"
  },
  {
    "start": "1178000",
    "end": "1228000"
  },
  {
    "text": "by default this value is 30 days now what a trajectory can do to implement this covered backdoor is to",
    "start": "1178400",
    "end": "1185840"
  },
  {
    "text": "change the registry setting to increase this 30-day setting to",
    "start": "1185840",
    "end": "1191520"
  },
  {
    "text": "more than 30 days for in this example we have taken 365 days so an attacker gains",
    "start": "1191520",
    "end": "1196880"
  },
  {
    "text": "access to the environment uses a tool to retrieve the machine",
    "start": "1196880",
    "end": "1202159"
  },
  {
    "text": "dollar hash of account of a computer object and then change the registry setting up that",
    "start": "1202159",
    "end": "1208320"
  },
  {
    "text": "object so that that password doesn't change automatically and when the attacker comes back at a",
    "start": "1208320",
    "end": "1213919"
  },
  {
    "text": "later stage post remediation exercise the threat actor the attacker can use that hash to access",
    "start": "1213919",
    "end": "1220880"
  },
  {
    "text": "the server in question now that can be a domain controller if the attacker has stolen the machine dollar hash of the domain controller",
    "start": "1220880",
    "end": "1228720"
  },
  {
    "start": "1228000",
    "end": "1259000"
  },
  {
    "text": "what can defenders do to detect this for defenders we recommend monitoring any changes to the registry which are not",
    "start": "1228720",
    "end": "1235200"
  },
  {
    "text": "authorized this can be performed by using a edr or a logging tool like sysmon",
    "start": "1235200",
    "end": "1240799"
  },
  {
    "text": "any changes to registry settings should be reviewed and investigated for a retrospective sweep of the environment",
    "start": "1240799",
    "end": "1247280"
  },
  {
    "text": "can be performed using powershell or any other tool at your disposable at your disposal to look",
    "start": "1247280",
    "end": "1254000"
  },
  {
    "text": "for maximum password setting anything more than 30 which is not default should be reviewed",
    "start": "1254000",
    "end": "1259840"
  },
  {
    "text": "so this takes me to the end of the third hypothesis and i'll hand it over to thiru to talk through the next three",
    "start": "1259840",
    "end": "1266640"
  },
  {
    "text": "hypothesis thanks anurag the next topic that will discuss is all about group policy",
    "start": "1266640",
    "end": "1271919"
  },
  {
    "text": "objects threat actors have compromised domain controllers and then they have planted",
    "start": "1271919",
    "end": "1277120"
  },
  {
    "text": "back those using group policy object in order to maintain a privileged access over targeted active directory server so",
    "start": "1277120",
    "end": "1283280"
  },
  {
    "text": "this is the hypothesis group policy objects are collection of virtual policy settings that define how",
    "start": "1283280",
    "end": "1289840"
  },
  {
    "text": "a system should look like and how a system should behave for certain users a gps can manage and control users and",
    "start": "1289840",
    "end": "1297280"
  },
  {
    "text": "computers at large scale gps are widely used to not execute scripts assigned rights to user accounts",
    "start": "1297280",
    "end": "1304000"
  },
  {
    "text": "and in order to harden the security settings of domain-wide systems we have observed threat actors misusing",
    "start": "1304000",
    "end": "1311360"
  },
  {
    "text": "gpus to deploy ransomware binaries after compromising the domain",
    "start": "1311360",
    "end": "1316960"
  },
  {
    "text": "controllers threat actors have created gpus and they have linked to certain ou users and they have tweaked certain",
    "start": "1316960",
    "end": "1322880"
  },
  {
    "text": "settings like enabling script execution to make sure that the binaries they're",
    "start": "1322880",
    "end": "1328000"
  },
  {
    "text": "going to push will not be blocked by the execution policies in the system side",
    "start": "1328000",
    "end": "1333440"
  },
  {
    "text": "and then they will disable the logon script delays to ensure the scripts will execute without any delays after user",
    "start": "1333440",
    "end": "1340080"
  },
  {
    "text": "log on into a system they'll disable the endpoint security software solutions like antivirus",
    "start": "1340080",
    "end": "1346240"
  },
  {
    "text": "engines and then they will upload the encrypted binaries which is ransomware binaries as a logon script",
    "start": "1346240",
    "end": "1353360"
  },
  {
    "text": "after pushing the gpus and once a user logs into a system the ransomware binaries execute as a logon script we",
    "start": "1353360",
    "end": "1360159"
  },
  {
    "text": "observe this technique when we responded to our io transformer in certain regions",
    "start": "1360159",
    "end": "1366559"
  },
  {
    "text": "we can hunt these back doors from gpos by exporting all gpus using powershell",
    "start": "1366559",
    "end": "1372000"
  },
  {
    "text": "command or if you have a gui access over group policy management you can export",
    "start": "1372000",
    "end": "1377120"
  },
  {
    "text": "all the gpos and then you can use your own parser codes or publicly available tools in order to parse the gpus",
    "start": "1377120",
    "end": "1383300"
  },
  {
    "text": "[Music] these are some of the vital artifacts that we always recommend",
    "start": "1383300",
    "end": "1388400"
  },
  {
    "text": "to hunt and analyze extract the user rights assignment settings and review the privileged access",
    "start": "1388400",
    "end": "1395039"
  },
  {
    "text": "configured for users in gpo threat actors can abuse",
    "start": "1395039",
    "end": "1400080"
  },
  {
    "text": "user rights assignment settings in order to provide or assign over permissive",
    "start": "1400080",
    "end": "1406159"
  },
  {
    "text": "rights to the compromised accounts like log on local rights or domain controller",
    "start": "1406159",
    "end": "1412320"
  },
  {
    "text": "or backup rights backup files and directories from critical servers etc",
    "start": "1412320",
    "end": "1417679"
  },
  {
    "text": "following that extract all the script associated with the system startup shutdown process and",
    "start": "1417679",
    "end": "1423200"
  },
  {
    "text": "use a logon log of process analyze the script and if you note on that if any malicious codes are embedded into it it",
    "start": "1423200",
    "end": "1430320"
  },
  {
    "text": "can be a good indicator we have also observed maize ransomware group",
    "start": "1430320",
    "end": "1435679"
  },
  {
    "text": "leverage schedule task in order to execute binaries review all the scheduled tasks configured in the gpus and understand",
    "start": "1435679",
    "end": "1442159"
  },
  {
    "text": "the necessity of it following that restricted groups have a special",
    "start": "1442159",
    "end": "1448240"
  },
  {
    "text": "permission to work with the built-in local groups if you observe the creation of a residual group in gpu",
    "start": "1448240",
    "end": "1455039"
  },
  {
    "text": "and if it is assigned to a built-in local group we would recommend to work with internal operation team to",
    "start": "1455039",
    "end": "1460080"
  },
  {
    "text": "understand the requirement of it because threat actors can use",
    "start": "1460080",
    "end": "1465120"
  },
  {
    "text": "specific groups in order to maintain a persistent membership access over building open groups",
    "start": "1465120",
    "end": "1470960"
  },
  {
    "text": "threat actors enable weaker algorithm in order to read credentials from memory in a plain text",
    "start": "1470960",
    "end": "1476960"
  },
  {
    "text": "format and also in order to extract credential hash in a weaker hash format these are some of the registry settings we would",
    "start": "1476960",
    "end": "1483200"
  },
  {
    "text": "recommend you to collect the configuration settings of it and analyze last but not least",
    "start": "1483200",
    "end": "1489360"
  },
  {
    "text": "review the mission account password change settings by default all the machine account",
    "start": "1489360",
    "end": "1494480"
  },
  {
    "text": "passwords will get reset for every 30 days once if you observe that someone tampers the",
    "start": "1494480",
    "end": "1499840"
  },
  {
    "text": "net log on parameters like disabling the password change or enhancing the password age limit this",
    "start": "1499840",
    "end": "1506159"
  },
  {
    "text": "can be a good indicator these are all some of the vital artifacts we would recommend you to hunt and detect back to",
    "start": "1506159",
    "end": "1513039"
  },
  {
    "text": "us from gpus or it may end up with detecting misconfigurations committed by your internal operation state",
    "start": "1513039",
    "end": "1521120"
  },
  {
    "text": "following that let's discuss how threat actus abuse cross forest stress",
    "start": "1521679",
    "end": "1527440"
  },
  {
    "text": "the hypothesis here is threat actor have compromised two for us that has trust with each other and then they planted",
    "start": "1527440",
    "end": "1534240"
  },
  {
    "text": "back doors using sid history in order to maintain a privileged access over trusting forest",
    "start": "1534240",
    "end": "1541200"
  },
  {
    "text": "a quick overview about cross forest waste forest is always considered as a security boundary for the resources and",
    "start": "1541200",
    "end": "1547120"
  },
  {
    "text": "domains created within the forest when a user wants to access a resource in other forests they need a forest",
    "start": "1547120",
    "end": "1553279"
  },
  {
    "text": "trust cross forest stress is established between the two forest root nodes it can",
    "start": "1553279",
    "end": "1558480"
  },
  {
    "text": "be one way or a two way transduced if it is a one way trust it means the user in",
    "start": "1558480",
    "end": "1563760"
  },
  {
    "text": "trusted forest can access a resource in a trusting forest the other way around will not work and very importantly",
    "start": "1563760",
    "end": "1571600"
  },
  {
    "text": "sid filtering is enabled by default in a cross forest list when a sit filtering is enabled it will make the trusting",
    "start": "1571600",
    "end": "1578159"
  },
  {
    "text": "forest domain controller to filter out the sids from user access token",
    "start": "1578159",
    "end": "1583760"
  },
  {
    "text": "that are not member of trusted forest in other word trusting forest will allow",
    "start": "1583760",
    "end": "1589520"
  },
  {
    "text": "sids of trusted forest alone if a user is a member of a group created",
    "start": "1589520",
    "end": "1594720"
  },
  {
    "text": "in a different forest or a domain those sids can't be carried over and this will be filtered in the trusting forest end",
    "start": "1594720",
    "end": "1601679"
  },
  {
    "text": "there can be scenarios where an organization wants to move a batch of uses from one forest to another forest",
    "start": "1601679",
    "end": "1607600"
  },
  {
    "text": "in those scenarios they will tweak seed filtering rules by enabling seed history",
    "start": "1607600",
    "end": "1612799"
  },
  {
    "text": "that's the attribute they will use when citi history is enabled the trusting forest domain controller",
    "start": "1612799",
    "end": "1619039"
  },
  {
    "text": "will allow other domain sids along with the trusted forest sis",
    "start": "1619039",
    "end": "1626159"
  },
  {
    "text": "but still certain forest specific rules will be enabled like sids which is other",
    "start": "1626159",
    "end": "1632400"
  },
  {
    "text": "domain sids that has rad values between 500 to 1000 will still be filtered in",
    "start": "1632400",
    "end": "1637840"
  },
  {
    "text": "the trusting forest range when you refer other domain srds is in any sids other",
    "start": "1637840",
    "end": "1643600"
  },
  {
    "text": "than the trusted forest side most of the privileged group",
    "start": "1643600",
    "end": "1648880"
  },
  {
    "text": "rit values will be between 500 to thousands",
    "start": "1648880",
    "end": "1653799"
  },
  {
    "text": "threat actors can use sint history in order to plant back rows so after compromising two forest which is forest",
    "start": "1654320",
    "end": "1661520"
  },
  {
    "text": "and forest be in our case which has trust with each other we will move on to forest b which is considered as a trusting forest",
    "start": "1661520",
    "end": "1668799"
  },
  {
    "text": "where they will enable the seed history using net dom utilities and then they will create a new security group and",
    "start": "1668799",
    "end": "1675520"
  },
  {
    "text": "they will add it as a member of a building under status group which is a privileged group",
    "start": "1675520",
    "end": "1681440"
  },
  {
    "text": "and then they will not know down the sid value of the newly created group they will move on to forest day",
    "start": "1681440",
    "end": "1688159"
  },
  {
    "text": "and they log into the domain controller they will choose a user account which is already compromised and then they will",
    "start": "1688159",
    "end": "1693760"
  },
  {
    "text": "inject the sid of newly created group in forest b into the seed history attribute",
    "start": "1693760",
    "end": "1701039"
  },
  {
    "text": "of the user account created or compromised in forestry so they can leverage tools like mimikats",
    "start": "1701039",
    "end": "1707440"
  },
  {
    "text": "to achieve this technique after successful injection now the user account will have its own sid",
    "start": "1707440",
    "end": "1714080"
  },
  {
    "text": "as well as an extra srd which is the newly created group in forest people now the compromised user",
    "start": "1714080",
    "end": "1721919"
  },
  {
    "text": "account can request for service ticket from forest b in order to manage the domain controller",
    "start": "1721919",
    "end": "1727360"
  },
  {
    "text": "as an administrator as a first step this will request and receive inter alum tgt from forest a domain controller",
    "start": "1727360",
    "end": "1734720"
  },
  {
    "text": "and then it will forward the interview into hdd to 4s b domain controller which will validate the user access token and",
    "start": "1734720",
    "end": "1740480"
  },
  {
    "text": "it will observe that there is an s id of a group created in forest b and that is also a member of a built-in status group",
    "start": "1740480",
    "end": "1746960"
  },
  {
    "text": "so with this validation the forest b domain control will issue a service ticket to the user account in forest a",
    "start": "1746960",
    "end": "1753200"
  },
  {
    "text": "now the user can access forrest b domain controller as an administrator the key observation here is threat actor",
    "start": "1753200",
    "end": "1760240"
  },
  {
    "text": "have not chosen the privileged group sid and they have not injected that s id",
    "start": "1760240",
    "end": "1765919"
  },
  {
    "text": "into the user account just because the sid filtering rule will filter out the other domain sids",
    "start": "1765919",
    "end": "1773840"
  },
  {
    "text": "that has red values between 500 2000 so that's the reason they have created a",
    "start": "1773840",
    "end": "1780799"
  },
  {
    "text": "new group which will have an rid value more than thousand and in order to maintain a privileged access they have added that group into a built-in status",
    "start": "1780799",
    "end": "1787440"
  },
  {
    "text": "quo so this is a technique that attackers generally use in order to abuse it",
    "start": "1787440",
    "end": "1792559"
  },
  {
    "text": "history we can detect this technique by enabling user account auditing in",
    "start": "1792559",
    "end": "1799279"
  },
  {
    "text": "domain controller the event id 4738 will trigger for any changes to a user account attribute",
    "start": "1799279",
    "end": "1805440"
  },
  {
    "text": "when a threat actor inject an sid into a seed history attribute this will also trigger the same even id4738",
    "start": "1805440",
    "end": "1812559"
  },
  {
    "text": "and it will also point out the user account where the injection happened you can also proactively hunt by",
    "start": "1812559",
    "end": "1818960"
  },
  {
    "text": "interacting with domain controllers using powershell by listing out users carrying extra sids in cds3 attribute",
    "start": "1818960",
    "end": "1826080"
  },
  {
    "text": "and then you can negate users having same domain srds in the cds3 attribute",
    "start": "1826080",
    "end": "1831760"
  },
  {
    "text": "in this way you can list out all the users carrying other domain sids",
    "start": "1831760",
    "end": "1837200"
  },
  {
    "text": "in the cd attribute and then after identifying the users you can list out all the extra sids and",
    "start": "1837200",
    "end": "1843279"
  },
  {
    "text": "understand the privileges those srds carry you need to work with your internal operation team to understand the requirement of it and if they are not",
    "start": "1843279",
    "end": "1849760"
  },
  {
    "text": "aware of this change then there is a clear indicator that there are some suspicious activities going on in your environment which needs a detailed",
    "start": "1849760",
    "end": "1857200"
  },
  {
    "text": "investigation in your environment we have a bonus entire the same",
    "start": "1857200",
    "end": "1863120"
  },
  {
    "text": "techniques can be leveraged by threat actors and they can maintain a privileged access within the same room you can",
    "start": "1863120",
    "end": "1869600"
  },
  {
    "text": "proactively hunt using powershell command by listing out all the users carrying same domain sids in the cdhd",
    "start": "1869600",
    "end": "1877120"
  },
  {
    "text": "attribute and if you observe those sids includes the privileged group r ids like",
    "start": "1877120",
    "end": "1883600"
  },
  {
    "text": "512 which is a domain admin or a finite which is the enterprise admin then that's a clear indicator that someone is",
    "start": "1883600",
    "end": "1889039"
  },
  {
    "text": "abusing the seed history attribute in order to maintain a privileged access within the environment",
    "start": "1889039",
    "end": "1896320"
  },
  {
    "text": "so sid filtering has no effect within the domain",
    "start": "1896320",
    "end": "1901200"
  },
  {
    "text": "let's move on and discuss how threat actors abuse azerity connect server the hypothesis here is threat have",
    "start": "1902000",
    "end": "1908240"
  },
  {
    "text": "compromised azurity connect server and with the local admin rights they have planted malwares in order to harvest",
    "start": "1908240",
    "end": "1913919"
  },
  {
    "text": "credentials of all the users signing in through azure 80. azure ad connect is a microsoft tool",
    "start": "1913919",
    "end": "1921039"
  },
  {
    "text": "that supports hybrid authentication and this is generally installed in an on-premise environment and azure id",
    "start": "1921039",
    "end": "1926480"
  },
  {
    "text": "connect act as a bridge between on-premise active directory server and azure ad in order to synchronize the",
    "start": "1926480",
    "end": "1932880"
  },
  {
    "text": "user attributes or properties azure ad along with azure ad connect",
    "start": "1932880",
    "end": "1938080"
  },
  {
    "text": "supports various authentication method like pass hash synchronization passthrough authentication and federated",
    "start": "1938080",
    "end": "1943760"
  },
  {
    "text": "authentication with the help of adf a server organizations prefer pass-through",
    "start": "1943760",
    "end": "1949440"
  },
  {
    "text": "authentication method in scenarios where they wanted all the cloud users to get authenticated with on-premise active",
    "start": "1949440",
    "end": "1956000"
  },
  {
    "text": "directory server and if they don't want to synchronize the hash of the password hash with azure id",
    "start": "1956000",
    "end": "1962320"
  },
  {
    "text": "this diagram represents the authentication flow of pass-through authentication method",
    "start": "1962320",
    "end": "1967679"
  },
  {
    "text": "i'm going to give a quick overview on the authentication flow so now user wants to access an",
    "start": "1967679",
    "end": "1972960"
  },
  {
    "text": "application and if they have not already signed the application will redirect to our rcu ad sign-in page",
    "start": "1972960",
    "end": "1980080"
  },
  {
    "text": "now the user enters the credentials azure id will collect the credentials we'll encrypt it with a public key of",
    "start": "1980080",
    "end": "1985440"
  },
  {
    "text": "azure ad connect which is installed in on-premise and then the encrypted credentials will be converted into a",
    "start": "1985440",
    "end": "1990960"
  },
  {
    "text": "request and the azure id will add the request into a queue azure ad connect which is an on-premise",
    "start": "1990960",
    "end": "1997440"
  },
  {
    "text": "will always have a persistent connection with azure id so after retrieving the request from the queue it will decrypt",
    "start": "1997440",
    "end": "2002880"
  },
  {
    "text": "the credentials using its own private key and then validate the credentials with",
    "start": "2002880",
    "end": "2008080"
  },
  {
    "text": "on-premise active directory server based on the response it receives it will forward it to azure id and azure id",
    "start": "2008080",
    "end": "2014799"
  },
  {
    "text": "will allow the user to access the application when it receives a successful authenticated response and if",
    "start": "2014799",
    "end": "2021840"
  },
  {
    "text": "multi-factor authentication is not enabled from a even standpoint",
    "start": "2021840",
    "end": "2028320"
  },
  {
    "text": "you can observe the successful sign-in log of a user account in azure id as well as there will be some related",
    "start": "2028320",
    "end": "2034480"
  },
  {
    "text": "events recorded in on-premise active directory server like service ticket requests for the aed",
    "start": "2034480",
    "end": "2039919"
  },
  {
    "text": "connect server threat actors can tamper the authentication flow by compromising the on-premise azure ad",
    "start": "2039919",
    "end": "2047519"
  },
  {
    "text": "connect server and then with the local admin rights they will inject a malicious dll into a",
    "start": "2047519",
    "end": "2053440"
  },
  {
    "text": "process called azure ad connect authentication agent service so this process is responsible for",
    "start": "2053440",
    "end": "2059839"
  },
  {
    "text": "validating the credentials with on-premise active directory server which is step seven",
    "start": "2059839",
    "end": "2066158"
  },
  {
    "text": "in order to achieve this attack technique threat actors can leverage two like aad internals and then they will install ad internal pts pi functions and",
    "start": "2066159",
    "end": "2074398"
  },
  {
    "text": "which will inject a malicious dll into this process and then it will start harvest the credentials",
    "start": "2074399",
    "end": "2080320"
  },
  {
    "text": "of all the user signing in through azure id and then it will record all the decrypted version of credentials into a",
    "start": "2080320",
    "end": "2088158"
  },
  {
    "text": "hidden file along with that this will also bypass",
    "start": "2088159",
    "end": "2093440"
  },
  {
    "text": "the credential validation process with on-premise active directory server and now the on-premise azure id connect",
    "start": "2093440",
    "end": "2100560"
  },
  {
    "text": "server will send successful authenticated response for user trying with any passwords",
    "start": "2100560",
    "end": "2107200"
  },
  {
    "text": "in other words user can use a valid or an invalid password but still the azure",
    "start": "2107200",
    "end": "2112720"
  },
  {
    "text": "ad connect server will always send a successful authenticated response to azure ad this is a bit scary right step",
    "start": "2112720",
    "end": "2120160"
  },
  {
    "text": "7 and step 8 will not happen when a malicious dll is injected successfully",
    "start": "2120160",
    "end": "2127920"
  },
  {
    "text": "we can detect this technique using edr tools or sysmon utilities the sys1 will",
    "start": "2127920",
    "end": "2133440"
  },
  {
    "text": "trigger event id 7 whenever it observes new images are loaded into a process or",
    "start": "2133440",
    "end": "2140000"
  },
  {
    "text": "if a new dll is loaded into any process we can customize the spawn configuration",
    "start": "2140000",
    "end": "2146079"
  },
  {
    "text": "by focusing specific to a process called azure ad connect authentication agent servers",
    "start": "2146079",
    "end": "2151760"
  },
  {
    "text": "and then you can flag out if any images loaded into it or if any dlns are injected into it",
    "start": "2151760",
    "end": "2158640"
  },
  {
    "text": "you can also proactively hunt using powershell commands by listing out all the modules installed in the specific",
    "start": "2158640",
    "end": "2164720"
  },
  {
    "text": "process and then you can analyze and flag out the odd dlls to do a binary track",
    "start": "2164720",
    "end": "2172400"
  },
  {
    "text": "key consideration here events for service ticket request for aadconnect",
    "start": "2172400",
    "end": "2177440"
  },
  {
    "text": "will not be logged in the active directory server what it means when a user",
    "start": "2177440",
    "end": "2182960"
  },
  {
    "text": "tries to access an application there will be a successful sign-in log in azure id whereas there will not be",
    "start": "2182960",
    "end": "2189920"
  },
  {
    "text": "no related events recorded in active directory servers like 4768 and 4769",
    "start": "2189920",
    "end": "2196240"
  },
  {
    "text": "event id will not be recorded because the malicious dll will bypass the credential validation process with",
    "start": "2196240",
    "end": "2202480"
  },
  {
    "text": "on-premise active directory server this can also be a good indicator to detect this technique",
    "start": "2202480",
    "end": "2209838"
  },
  {
    "text": "we are pretty much to the end of the session we refer to various blocks created by different researchers we",
    "start": "2210480",
    "end": "2216320"
  },
  {
    "text": "really want to thank and acknowledge all their wonderful work thanks a lot for listening to our talk",
    "start": "2216320",
    "end": "2223040"
  },
  {
    "text": "i hope this was an informative session kindly reach us for any questions related to the talk",
    "start": "2223040",
    "end": "2228560"
  },
  {
    "text": "thank you",
    "start": "2228560",
    "end": "2231800"
  }
]