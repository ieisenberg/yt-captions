[
  {
    "text": "all right hello everybody can you hear me",
    "start": "34640",
    "end": "40039"
  },
  {
    "text": "okay",
    "start": "40039",
    "end": "43039"
  },
  {
    "text": "yes hello all right so sorry for the delay",
    "start": "45600",
    "end": "51360"
  },
  {
    "text": "lots of little problems um my name is raan and why is everybody over there I thought I thought I took a shower this",
    "start": "51360",
    "end": "58640"
  },
  {
    "text": "morning and anyways um just before we begin uh there's",
    "start": "58640",
    "end": "64320"
  },
  {
    "text": "something that I keep on getting from a lot of people is uh hey I love this thing you're working on this stenography",
    "start": "64320",
    "end": "71000"
  },
  {
    "text": "project it's awesome uh just so you know there's a big difference between steganography and",
    "start": "71000",
    "end": "78119"
  },
  {
    "text": "stenography this is stenography all right I'll just go over",
    "start": "78119",
    "end": "86640"
  },
  {
    "text": "um how what information hiding is and in general there are many different kinds of information hiding I'll go over all",
    "start": "86640",
    "end": "93240"
  },
  {
    "text": "the different classes um focus on software marking and uh in theory how",
    "start": "93240",
    "end": "99200"
  },
  {
    "text": "things work um thing is in practice a lot of things are very different so I'll go over",
    "start": "99200",
    "end": "105479"
  },
  {
    "text": "everything anyways ponography is what you know I Pro who knows what ponography",
    "start": "105479",
    "end": "111320"
  },
  {
    "text": "is all right sizable chunk um the idea is to be able to hide something in such",
    "start": "111320",
    "end": "117200"
  },
  {
    "text": "a way that an a third party e dropper would not be able to detect that there",
    "start": "117200",
    "end": "122600"
  },
  {
    "text": "is a message being passed on um it doesn't necessarily have to be efficient",
    "start": "122600",
    "end": "129200"
  },
  {
    "text": "um data rate wise or uh um be tamper proof in any way as long as the person",
    "start": "129200",
    "end": "135879"
  },
  {
    "text": "the middle can't tell that you're trying to communicate then it's okay um cobt",
    "start": "135879",
    "end": "141200"
  },
  {
    "text": "channels is uh also kind of information hiding in the sense that you're sending",
    "start": "141200",
    "end": "147440"
  },
  {
    "text": "information but it doesn't either have to be stealthy or resilient or or even tamper proof",
    "start": "147440",
    "end": "156959"
  },
  {
    "text": "um Anonymous Communications are also a form of it in the sense that what you're trying to hide is the end points of the",
    "start": "156959",
    "end": "163840"
  },
  {
    "text": "communication um you could literally post something on a uset groups uh and",
    "start": "163840",
    "end": "170120"
  },
  {
    "text": "for everybody to see but as long as nobody knows who posted it and who's reading it",
    "start": "170120",
    "end": "177040"
  },
  {
    "text": "then um now a big a big uh um a big chunk of information hiding work is done",
    "start": "177040",
    "end": "183400"
  },
  {
    "text": "in copyright marking uh two kinds of that robust and fragile most of you",
    "start": "183400",
    "end": "189200"
  },
  {
    "text": "probably know about watermarks which is embedding um an identifier into an image",
    "start": "189200",
    "end": "196840"
  },
  {
    "text": "sound recording or whatever in order to be able to later on claim ownership",
    "start": "196840",
    "end": "202440"
  },
  {
    "text": "copyright ownership on the medium um so you see people doing it in images you",
    "start": "202440",
    "end": "207799"
  },
  {
    "text": "see people doing it in MP3s um those marks need to be robust in the",
    "start": "207799",
    "end": "213280"
  },
  {
    "text": "sense that if anybody would come and take the the medium and try to tamper",
    "start": "213280",
    "end": "218959"
  },
  {
    "text": "with it they shouldn't be able to remove the the Mark um otherwise you basically",
    "start": "218959",
    "end": "224120"
  },
  {
    "text": "lose that ownership fingerprinting fingerprinting is a form of uh copyright",
    "start": "224120",
    "end": "230000"
  },
  {
    "text": "marking it's a little bit more specific than water marking in the sense that you're not just trying to claim",
    "start": "230000",
    "end": "236200"
  },
  {
    "text": "ownership on the medium but you're trying to uniquely identify um the person that you issued",
    "start": "236200",
    "end": "243560"
  },
  {
    "text": "this medium to so if I give Joe Schmo uh",
    "start": "243560",
    "end": "250120"
  },
  {
    "text": "picture and I've only given it to him then I put a little identifier in it that says I've given this identifier",
    "start": "250120",
    "end": "257359"
  },
  {
    "text": "this piece of image to Joe this way if I ever find it on kazah or or bit horen",
    "start": "257359",
    "end": "263800"
  },
  {
    "text": "I'll know that Joe is the person that released it and he gets in trouble",
    "start": "263800",
    "end": "269080"
  },
  {
    "text": "fragile Mar marks um is a little bit different um what it is is you try to",
    "start": "269080",
    "end": "277199"
  },
  {
    "text": "make the mark so so non- tamper proof that any anybody trying to say Photoshop",
    "start": "277199",
    "end": "284280"
  },
  {
    "text": "an image or modify the the medium in any way uh you can immediately prove say in",
    "start": "284280",
    "end": "291720"
  },
  {
    "text": "court that this medium is not the original medium and therefore cannot be used as a proof for whatever",
    "start": "291720",
    "end": "300160"
  },
  {
    "text": "Court Cas is about historically",
    "start": "300160",
    "end": "306960"
  },
  {
    "text": "um information hiding has been used for a long time back since uh the Romans",
    "start": "306960",
    "end": "313840"
  },
  {
    "text": "um back then it was generally through obscurity so what you do is you'd have a",
    "start": "313840",
    "end": "318960"
  },
  {
    "text": "secret way of of encoding your information and nobody else would know",
    "start": "318960",
    "end": "324160"
  },
  {
    "text": "about it except the end point and um at that in that way it would be really easy",
    "start": "324160",
    "end": "330639"
  },
  {
    "text": "for you to send information just say okay if I if I do I don't know if I use this letter instead of that letter then",
    "start": "330639",
    "end": "336479"
  },
  {
    "text": "you know it means meet me at noon wherever but since then a lot of things have changed um people have gotten more",
    "start": "336479",
    "end": "344560"
  },
  {
    "text": "educated a lot more people can read and do research and know about math and um",
    "start": "344560",
    "end": "350000"
  },
  {
    "text": "they can reverse engineer um the algorithm so instead now with people",
    "start": "350000",
    "end": "355560"
  },
  {
    "text": "don't use security soal security anymore uh but it's still used and the",
    "start": "355560",
    "end": "360840"
  },
  {
    "text": "reason is that for some things such as reverse engineering and um anonymity",
    "start": "360840",
    "end": "367800"
  },
  {
    "text": "it's very difficult to uh to create a system that's robust",
    "start": "367800",
    "end": "374639"
  },
  {
    "text": "and works always 100% of the time most of the time what you're trying to do is",
    "start": "374639",
    "end": "380160"
  },
  {
    "text": "just stay off the attacker for long enough that",
    "start": "380160",
    "end": "385840"
  },
  {
    "text": "um that by the time he break your system it's all right you know the system isn't going to be used anymore so say for",
    "start": "385840",
    "end": "392800"
  },
  {
    "text": "video games um if it takes a week for an attacker to break your system then you're in trouble because you lose a lot",
    "start": "392800",
    "end": "399400"
  },
  {
    "text": "of sales but if it takes them six months you know maybe in 6 months you won't be selling them many games anyway so it's",
    "start": "399400",
    "end": "406400"
  },
  {
    "text": "okay if the if there's a crack out for it um so back to historically camouflage",
    "start": "406400",
    "end": "414440"
  },
  {
    "text": "used to be used a lot so you would do things such as have little pin Hol",
    "start": "414440",
    "end": "420360"
  },
  {
    "text": "um right next to letters where the human eye can't tell or invisible ink um tricked like",
    "start": "420360",
    "end": "426520"
  },
  {
    "text": "that um or you could hide the message in",
    "start": "426520",
    "end": "431800"
  },
  {
    "text": "a very specific part of the document but a casual Observer wouldn't necessarily know to look at that say paragraph third",
    "start": "431800",
    "end": "440000"
  },
  {
    "text": "paragraph second sentence um to find the data and what you do is things such as",
    "start": "440000",
    "end": "446080"
  },
  {
    "text": "maybe change the spacing in between the lines ever so slightly um or use a",
    "start": "446080",
    "end": "451160"
  },
  {
    "text": "different font or do things like that but that's very",
    "start": "451160",
    "end": "456319"
  },
  {
    "text": "easy to to break because all anacker needs to do is change as much things as",
    "start": "456319",
    "end": "463000"
  },
  {
    "text": "possible throughout the entire document and odds are he will hit the location where you've hidden your data um so as a",
    "start": "463000",
    "end": "471360"
  },
  {
    "text": "result what people do is spread the hidden information everywhere um which could simply mean have multiple copies",
    "start": "471360",
    "end": "478680"
  },
  {
    "text": "of the of the information everywhere and um if one one part of it gets broken",
    "start": "478680",
    "end": "484360"
  },
  {
    "text": "then odds Ed the other bits won't be you can also use spread Spectrum en coding",
    "start": "484360",
    "end": "490080"
  },
  {
    "text": "techniques and other stuff so throughout these um this discussion so far I've",
    "start": "490080",
    "end": "497560"
  },
  {
    "text": "mentioned three General things about um classes of information and hiding",
    "start": "497560",
    "end": "503800"
  },
  {
    "text": "techniques what you're really looking at is how much data can you encode how",
    "start": "503800",
    "end": "509720"
  },
  {
    "text": "stealthy is it meaning can a third party easily tell that there's something fishy going on and um how resistant is it to",
    "start": "509720",
    "end": "519440"
  },
  {
    "text": "tampering um these are the three criterias that we use to to evaluate any information",
    "start": "519440",
    "end": "527240"
  },
  {
    "text": "hiding system and um there's several attacks against information information",
    "start": "527240",
    "end": "533519"
  },
  {
    "text": "hiding system and they're also divided into three categories one is subtract",
    "start": "533519",
    "end": "539800"
  },
  {
    "text": "active meaning if you have a medium to I represent here as um as that box with",
    "start": "539800",
    "end": "545800"
  },
  {
    "text": "watermark in a w um subtractive attack simply means that an attacker is able to gather",
    "start": "545800",
    "end": "552320"
  },
  {
    "text": "enough knowledge about where and what the Mark is um to precisely locate it",
    "start": "552320",
    "end": "558240"
  },
  {
    "text": "and you know literally strip it off um now sometimes he's not able to get that",
    "start": "558240",
    "end": "563519"
  },
  {
    "text": "much information so he tries to mess around a little bit with the with the medium and maybe um say if it's an image",
    "start": "563519",
    "end": "570079"
  },
  {
    "text": "crop a whole chunk out of it now that's all that's okay as long as the resulting",
    "start": "570079",
    "end": "577079"
  },
  {
    "text": "medium is still usable to the attacker if it is then the information hiding",
    "start": "577079",
    "end": "582440"
  },
  {
    "text": "system is failed because we can still use it we can still use the medium despite the mark being taken out",
    "start": "582440",
    "end": "589640"
  },
  {
    "text": "illustration we have our little friend here who is chainsaw attack the mark for us and then",
    "start": "589640",
    "end": "596680"
  },
  {
    "text": "the result is just the the medium with nothing in it the",
    "start": "596680",
    "end": "602480"
  },
  {
    "text": "stort of is similar and that maybe the attacker doesn't know exactly where it",
    "start": "602480",
    "end": "608040"
  },
  {
    "text": "is and what it takes to take the the mark out but you can cry a few things",
    "start": "608040",
    "end": "613680"
  },
  {
    "text": "you know shoot blindly at the at the at the medium and see what happens maybe",
    "start": "613680",
    "end": "619079"
  },
  {
    "text": "the Mark gets distorted and to such a point that um the program that",
    "start": "619079",
    "end": "624240"
  },
  {
    "text": "recognizes the the water Mark isn't able to recognize it anymore so in an image",
    "start": "624240",
    "end": "629399"
  },
  {
    "text": "you could do little things like maybe scale the image um Shear it a little bit",
    "start": "629399",
    "end": "634800"
  },
  {
    "text": "you know stretch or whatever or maybe warp little points and it so slightly",
    "start": "634800",
    "end": "640120"
  },
  {
    "text": "that the human eye doesn't necessarily notice the difference um illustration is",
    "start": "640120",
    "end": "645160"
  },
  {
    "text": "just our dude here jumping up and down on it and um we end up with W Prime",
    "start": "645160",
    "end": "651040"
  },
  {
    "text": "which is a different water mark than what we started out with um an additive is just that we try to override the",
    "start": "651040",
    "end": "659399"
  },
  {
    "text": "medium with a new Watermark and um hopefully it'll overwrite the first um",
    "start": "659399",
    "end": "666360"
  },
  {
    "text": "Mark and if it doesn't then we we have two marks that are living at the same",
    "start": "666360",
    "end": "672320"
  },
  {
    "text": "time in the same medium and it might make it difficult to for the rec for the",
    "start": "672320",
    "end": "678680"
  },
  {
    "text": "recognizer to to to see the mark to begin with OR for somebody to prove that",
    "start": "678680",
    "end": "686040"
  },
  {
    "text": "this Mark uh the original Mark was there before the added Mark you might not be",
    "start": "686040",
    "end": "691079"
  },
  {
    "text": "able to tell the difference which was there",
    "start": "691079",
    "end": "694959"
  },
  {
    "text": "before um a lot of different mediums have several information hiding",
    "start": "697120",
    "end": "702839"
  },
  {
    "text": "techniques they're very a little bit different in each sound image video text",
    "start": "702839",
    "end": "710120"
  },
  {
    "text": "um a lot of research done there hasn't been a lot of research done in uh information hiding in binaries and the",
    "start": "710120",
    "end": "717760"
  },
  {
    "text": "main reason for that is that it's a low redundancy medium now I haven't spoken about redundancy yet what you need to be",
    "start": "717760",
    "end": "725399"
  },
  {
    "text": "able to convey as much information as possible in um in um in a medium",
    "start": "725399",
    "end": "732360"
  },
  {
    "text": "is is to have the medium medium be redundant so the English language is a",
    "start": "732360",
    "end": "738639"
  },
  {
    "text": "redundant language meaning there's several different ways you can say the same things probably some of you know",
    "start": "738639",
    "end": "745360"
  },
  {
    "text": "the Monty Python dead parot sketch you know this guy walks into the shop and he",
    "start": "745360",
    "end": "751720"
  },
  {
    "text": "goes my parrot's dead and uh you know discussion goes on and basically we end",
    "start": "751720",
    "end": "757440"
  },
  {
    "text": "up with this guy saying this parot is dead this par is no more it has ceased to be uh it has shuffled off its mortal",
    "start": "757440",
    "end": "764880"
  },
  {
    "text": "coil and join the choir invisible um this is an ex parrot many different ways of saying the",
    "start": "764880",
    "end": "772120"
  },
  {
    "text": "same thing so if you agree beforehand that what you want to do is",
    "start": "772120",
    "end": "778440"
  },
  {
    "text": "um convey information with that sentence this parate is dead um you could say if",
    "start": "778440",
    "end": "783880"
  },
  {
    "text": "I say this parate is dead it means meet me at noon um over there if I say this",
    "start": "783880",
    "end": "789360"
  },
  {
    "text": "par is no more then meet me at one and so on you this that's what I mean by redundancy and binaries um executable",
    "start": "789360",
    "end": "799040"
  },
  {
    "text": "files have been designed to be as non-redundant as possible so it's really difficult",
    "start": "799040",
    "end": "804199"
  },
  {
    "text": "to um to convey information because there's there there many different ways",
    "start": "804199",
    "end": "809880"
  },
  {
    "text": "to say any given thing but it's it's especially hard with",
    "start": "809880",
    "end": "816000"
  },
  {
    "text": "binaries um so we'll go over how we do that and",
    "start": "816000",
    "end": "821279"
  },
  {
    "text": "um techniques can be divided in two different ways there's static marks and",
    "start": "821279",
    "end": "827600"
  },
  {
    "text": "dynamic marks static is the simplest um you have static data marks where in your",
    "start": "827600",
    "end": "833639"
  },
  {
    "text": "code you would have an array with some data in it such as copyright Microsoft",
    "start": "833639",
    "end": "840880"
  },
  {
    "text": "blah blah blah and you could use that as your as your as your mark so all you",
    "start": "840880",
    "end": "846399"
  },
  {
    "text": "need to do is do strings on on the binary and you would see the mark right there um you could make it anything you",
    "start": "846399",
    "end": "853399"
  },
  {
    "text": "want but as long as it's data it could it could be like a switch statement it could be whatever you want",
    "start": "853399",
    "end": "859360"
  },
  {
    "text": "it a code Mark is um",
    "start": "859360",
    "end": "864720"
  },
  {
    "text": "is we could do one of two a couple of things one around with the ordering of",
    "start": "864720",
    "end": "870920"
  },
  {
    "text": "the way you write your code so say maybe when you're writing um different",
    "start": "870920",
    "end": "877560"
  },
  {
    "text": "functions instead of having function a at the top function B after it function C later on you could reorder them in any",
    "start": "877560",
    "end": "884839"
  },
  {
    "text": "way you wanted and given a large enough number of functions you could uniquely",
    "start": "884839",
    "end": "890880"
  },
  {
    "text": "say okay this has to be my code because look at the way those functions are are",
    "start": "890880",
    "end": "896600"
  },
  {
    "text": "ordered um yeah that's one way the other way is you",
    "start": "896600",
    "end": "902399"
  },
  {
    "text": "could have different pieces of codes in different executables so in the",
    "start": "902399",
    "end": "907560"
  },
  {
    "text": "executable I give to that I release say at black hat um I would have this chunk",
    "start": "907560",
    "end": "912720"
  },
  {
    "text": "of code that not doesn't necessarily do anything but it's just there and I can GP for it um and I can change that piece",
    "start": "912720",
    "end": "919519"
  },
  {
    "text": "of code because it's garbage code anyway this is another way of doing static code marks it's where you have a",
    "start": "919519",
    "end": "926920"
  },
  {
    "text": "bunch of statements and you can arbitrarily decide what your",
    "start": "926920",
    "end": "932040"
  },
  {
    "text": "control flow is going to be so it doesn't necessarily have to always go from A to B from B to D you can reorder",
    "start": "932040",
    "end": "940360"
  },
  {
    "text": "it any way you want it's just junk code any way now as it says it's easy to implement",
    "start": "940360",
    "end": "947519"
  },
  {
    "text": "just write your code in a certain way and you have your information hiding system but it's it's really easy to",
    "start": "947519",
    "end": "953639"
  },
  {
    "text": "break because all a person has to do an attacker has to do is to look at that",
    "start": "953639",
    "end": "959720"
  },
  {
    "text": "look at your code see that there's a string copyright Microsoft and overwrite it and what are you going to do or they",
    "start": "959720",
    "end": "966959"
  },
  {
    "text": "could analyze the binary and find pieces of dead code that do nothing uh or are",
    "start": "966959",
    "end": "972480"
  },
  {
    "text": "highly redundant and just overwrite them with something that either does something or optimize your own code or",
    "start": "972480",
    "end": "979720"
  },
  {
    "text": "whatever so instead what people do is have Dynamic",
    "start": "979720",
    "end": "985360"
  },
  {
    "text": "marks now this is much more difficult to break because uh basically you have",
    "start": "985360",
    "end": "991199"
  },
  {
    "text": "to know what the program is doing uh in order to try to break um the information",
    "start": "991199",
    "end": "998680"
  },
  {
    "text": "hiding system and it also relies on input so you cannot just look at the",
    "start": "998680",
    "end": "1004160"
  },
  {
    "text": "program and say oh this piece of code looks weird it this the information",
    "start": "1004160",
    "end": "1009839"
  },
  {
    "text": "hiding code the sorry the the mark reacts to your input so under normal",
    "start": "1009839",
    "end": "1016240"
  },
  {
    "text": "circumstances it probably does something very legitimate such as I don't know print something to the screen or",
    "start": "1016240",
    "end": "1022279"
  },
  {
    "text": "calculate some number but given a very specific set of input it will display",
    "start": "1022279",
    "end": "1027558"
  },
  {
    "text": "the Mark or put the mark in a a recognizable way for you so I'll give",
    "start": "1027559",
    "end": "1033000"
  },
  {
    "text": "you examples of that um easiest is Easter egg type about Mozilla and uh you",
    "start": "1033000",
    "end": "1041438"
  },
  {
    "text": "get this stuff so what you could do if you were trying to hide um a mark in",
    "start": "1041439",
    "end": "1047199"
  },
  {
    "text": "your in your software is trigger for something like this um and if if when",
    "start": "1047199",
    "end": "1053960"
  },
  {
    "text": "you type about Mozilla in some other browser you get the same thing then you're like oh what's going on something",
    "start": "1053960",
    "end": "1060520"
  },
  {
    "text": "weird maybe they stole some code",
    "start": "1060520",
    "end": "1065679"
  },
  {
    "text": "um but that's easy to break so instead there's Al there's uh Dynamic data",
    "start": "1065679",
    "end": "1071520"
  },
  {
    "text": "structure marks which you have some variables intermingled in your code um",
    "start": "1071520",
    "end": "1078159"
  },
  {
    "text": "and throughout the normal execution of your program you do stuff to those variables maybe you really use them um",
    "start": "1078159",
    "end": "1086200"
  },
  {
    "text": "to do what your program is intended to do parsal URL whatever um and given a",
    "start": "1086200",
    "end": "1092760"
  },
  {
    "text": "set of inputs very specific inputs at the end you're left with",
    "start": "1092760",
    "end": "1098240"
  },
  {
    "text": "um some values in those inputs and those values are your mark So in this case",
    "start": "1098240",
    "end": "1105600"
  },
  {
    "text": "it's the aski text the grade Mah here you just keep pounding input at it until",
    "start": "1105600",
    "end": "1110760"
  },
  {
    "text": "it gives you this and then you know that you found your Mark um even more difficult to break is",
    "start": "1110760",
    "end": "1118480"
  },
  {
    "text": "uh what we call Dynamic graph water marking um the premise of it is that you",
    "start": "1118480",
    "end": "1124840"
  },
  {
    "text": "take you choose two large prime numbers p and Q and you compute P * Q it gives",
    "start": "1124840",
    "end": "1131200"
  },
  {
    "text": "you some other large number now if you can embed this number n in your code in",
    "start": "1131200",
    "end": "1138600"
  },
  {
    "text": "in in such a way that it can't be tampered with and then later on you you're in court and you're saying okay I",
    "start": "1138600",
    "end": "1145600"
  },
  {
    "text": "have a proof that this is my code and the proof is I can factor in I can show",
    "start": "1145600",
    "end": "1150679"
  },
  {
    "text": "you what the prime factors are I can show you what p and Q are um if you can",
    "start": "1150679",
    "end": "1156320"
  },
  {
    "text": "do that then um it proves that basically it is your code and one way to do such",
    "start": "1156320",
    "end": "1161799"
  },
  {
    "text": "an encoding is um what we call Radix K encoding and I explain it here",
    "start": "1161799",
    "end": "1171280"
  },
  {
    "text": "what what you have at the bottom of the screen is um is a linked list of items",
    "start": "1171280",
    "end": "1177039"
  },
  {
    "text": "and depending how how the lists are connected to each other that's how you",
    "start": "1177039",
    "end": "1182480"
  },
  {
    "text": "encode um data so for example the first the first item all the",
    "start": "1182480",
    "end": "1188440"
  },
  {
    "text": "way on the left that would be we sorry this is radex 5 and coding you have five",
    "start": "1188440",
    "end": "1193600"
  },
  {
    "text": "ele sorry four elements um the first element is sorry elements you the first",
    "start": "1193600",
    "end": "1199960"
  },
  {
    "text": "element is uh is your K to the power of the number of",
    "start": "1199960",
    "end": "1206799"
  },
  {
    "text": "your elements so here it's 5 to the four it points not to uh null nor to itself",
    "start": "1206799",
    "end": "1214039"
  },
  {
    "text": "but to the next item which means it's 2 * 5 to 4 the next item is 5 to the 3 it",
    "start": "1214039",
    "end": "1220880"
  },
  {
    "text": "points to null so it's zero * 5 to the 3 uh 5 the 3 and then the other one is um",
    "start": "1220880",
    "end": "1227960"
  },
  {
    "text": "3 * 5 two and so on and this number is basically 7 * 1 91 which is",
    "start": "1227960",
    "end": "1235919"
  },
  {
    "text": "1337 um so if you were to encode 1337 into your code um you could prove that",
    "start": "1235919",
    "end": "1243919"
  },
  {
    "text": "it's yours by saying look I know how to do 7times 191 obviously what you really",
    "start": "1243919",
    "end": "1248960"
  },
  {
    "text": "want is a really large number because this is Trivial to to factor but this is the basic idea there are many other",
    "start": "1248960",
    "end": "1255039"
  },
  {
    "text": "kinds of encoding schemes this is just one of them um the reason why it's um",
    "start": "1255039",
    "end": "1260559"
  },
  {
    "text": "reason why it's nice is because it's it can be very difficult to",
    "start": "1260559",
    "end": "1265799"
  },
  {
    "text": "reverse engineer there are a lot of tricks you can do with data structures and pointers um to confuse an attacker",
    "start": "1265799",
    "end": "1272039"
  },
  {
    "text": "as to what exactly are you trying to do a pointer is is a it's just a number",
    "start": "1272039",
    "end": "1278240"
  },
  {
    "text": "four four bytes 32 bits it can be a number that you actually use in your computations it can be a pointer it can",
    "start": "1278240",
    "end": "1284520"
  },
  {
    "text": "be text can be anything you want so you can use that to your advantage uh and confuse reverse Engineers that's",
    "start": "1284520",
    "end": "1293600"
  },
  {
    "text": "why it's used another thing you can do is dynamic ex execution cras meaning that your code",
    "start": "1293600",
    "end": "1301080"
  },
  {
    "text": "typically runs in a certain way if you were to do Hello World it jumps to you",
    "start": "1301080",
    "end": "1306200"
  },
  {
    "text": "know your print statement says hello and then exits and that's the typical way that it functions in in a browser it can",
    "start": "1306200",
    "end": "1312640"
  },
  {
    "text": "get really complicated uh where it's doing a whole lots of things going through various many addresses doing a",
    "start": "1312640",
    "end": "1318240"
  },
  {
    "text": "whole of different system calls and all of that and you can keep track say of",
    "start": "1318240",
    "end": "1324200"
  },
  {
    "text": "the last two bytes of the the addresses that it that it runs through while it's",
    "start": "1324200",
    "end": "1329520"
  },
  {
    "text": "executing the program and you can use that as a mark because normally this is",
    "start": "1329520",
    "end": "1336360"
  },
  {
    "text": "how it e it executes but if you give it this specific set of inputs this is how you expect it to execute and if it",
    "start": "1336360",
    "end": "1344000"
  },
  {
    "text": "executes in this way then you know that this is that you you recognized your program",
    "start": "1344000",
    "end": "1349880"
  },
  {
    "text": "so if somebody steals a chunk of your code um then this is one way you can use",
    "start": "1349880",
    "end": "1356520"
  },
  {
    "text": "to to recognize it now there are attacks against every one of these things",
    "start": "1356520",
    "end": "1363720"
  },
  {
    "text": "um simplest attack is that you take you take the original code and you just",
    "start": "1363720",
    "end": "1368960"
  },
  {
    "text": "mangle it Beyond Comprehension uh on the left I'm just assigning three variables on the right",
    "start": "1368960",
    "end": "1376400"
  },
  {
    "text": "I'm doing the same thing but take your to figure out that that's actually what I'm doing and to make matters worse um",
    "start": "1376400",
    "end": "1384760"
  },
  {
    "text": "as a human being we can figure it out but to get a a program to go through and",
    "start": "1384760",
    "end": "1389840"
  },
  {
    "text": "and and realize that these two things are the same it can be quite tough",
    "start": "1389840",
    "end": "1396760"
  },
  {
    "text": "um sorry so this these were attacks on on on static marks uh on Dynamic",
    "start": "1396760",
    "end": "1404240"
  },
  {
    "text": "marks uh bunch of attacks too as I was saying you have those this list of pointers of uh this data structure you",
    "start": "1404240",
    "end": "1411799"
  },
  {
    "text": "can add a whole bunch of indirection if you wanted to say instead of having this data structure point to the next one",
    "start": "1411799",
    "end": "1418159"
  },
  {
    "text": "there's no reason why it couldn't point to a third one and then which points back to the original one as long as you",
    "start": "1418159",
    "end": "1423559"
  },
  {
    "text": "change your code appropriately to take into account these things then you're",
    "start": "1423559",
    "end": "1429039"
  },
  {
    "text": "fine or you can reorder the data or you can there many things you can do to",
    "start": "1429039",
    "end": "1434320"
  },
  {
    "text": "frustrate um frustrate the Dynamic",
    "start": "1434320",
    "end": "1439919"
  },
  {
    "text": "marks um now in practice I've been talking a lot about how you would look into the code see what it does and",
    "start": "1439919",
    "end": "1447000"
  },
  {
    "text": "modify it to make it do what you want it to do but that's true if you have the",
    "start": "1447000",
    "end": "1452880"
  },
  {
    "text": "source code if you don't have the source code then what are you going to do so in",
    "start": "1452880",
    "end": "1458440"
  },
  {
    "text": "practice all of these theoretical Mark marking system especially data um Dynamic marking",
    "start": "1458440",
    "end": "1466039"
  },
  {
    "text": "systems only really work when you have the source code or if you're dealing with Java or net where basically it's",
    "start": "1466039",
    "end": "1473360"
  },
  {
    "text": "trivial to reverse engineer um the executable",
    "start": "1473360",
    "end": "1479559"
  },
  {
    "text": "code and um the reason for that is that is that uh sorry the reason that it's",
    "start": "1479559",
    "end": "1486159"
  },
  {
    "text": "difficult to reverse engineer things other than java.net is",
    "start": "1486159",
    "end": "1491200"
  },
  {
    "text": "that the programs get compiled down to machine code which assembly which uh in",
    "start": "1491200",
    "end": "1499399"
  },
  {
    "text": "which case it's very difficult to tell apart data and code meaning is this a",
    "start": "1499399",
    "end": "1505080"
  },
  {
    "text": "number or is this an instruction that does an addition they're all the same",
    "start": "1505080",
    "end": "1511000"
  },
  {
    "text": "length they all look alike but depending on the context one is code and one is",
    "start": "1511000",
    "end": "1516640"
  },
  {
    "text": "data and for um a disassembler it's it's",
    "start": "1516640",
    "end": "1521679"
  },
  {
    "text": "impossible sometimes to know for sure this is what's going on it'll the dis assembler will give you uh um an",
    "start": "1521679",
    "end": "1529520"
  },
  {
    "text": "estimate like this is what it thinks the code is doing but um by no means is that",
    "start": "1529520",
    "end": "1535720"
  },
  {
    "text": "correct necessarily correct so we can't use these Advanced Techniques of",
    "start": "1535720",
    "end": "1543760"
  },
  {
    "text": "um uh Dynamic markings because we need the source code and unless we don't",
    "start": "1543760",
    "end": "1550480"
  },
  {
    "text": "unless we have it it's difficult to do stuff such as insert um a data structure in the middle of of the code that does",
    "start": "1550480",
    "end": "1557320"
  },
  {
    "text": "all this random stuff that we use to detect a Mark um the only way to do it",
    "start": "1557320",
    "end": "1564159"
  },
  {
    "text": "is for you to write the the the marking",
    "start": "1564159",
    "end": "1570279"
  },
  {
    "text": "system into your code before you've even compiled it and sometimes that's not you can't necessarily do that especially if",
    "start": "1570279",
    "end": "1578080"
  },
  {
    "text": "you're trying to hide data and code um after I'll show you what I mean um so",
    "start": "1578080",
    "end": "1583559"
  },
  {
    "text": "little work has been done on machine code watermarking the only work that's been done has been on if you have the",
    "start": "1583559",
    "end": "1588960"
  },
  {
    "text": "source code and all right so viruses what hides information in",
    "start": "1588960",
    "end": "1595720"
  },
  {
    "text": "machine code virus typically a program runs it starts",
    "start": "1595720",
    "end": "1602399"
  },
  {
    "text": "somewhere and it just keeps running follow the Green Arrow and eventually it ends what viruses do is that they add",
    "start": "1602399",
    "end": "1610080"
  },
  {
    "text": "themselves add some code to the end of the of the executable and hijack the",
    "start": "1610080",
    "end": "1615559"
  },
  {
    "text": "entry points so that they can run their own code and when they're done running their own code they go back to where",
    "start": "1615559",
    "end": "1621440"
  },
  {
    "text": "they started and just keep going now the problem is that it's very easy to to",
    "start": "1621440",
    "end": "1629720"
  },
  {
    "text": "detect sometimes I mean often if you just have a piece of code right there at the end of of your binary and you see",
    "start": "1629720",
    "end": "1636480"
  },
  {
    "text": "this jump and then it comes back you're like wait why is it doing this it looks a bit bizarre and um antivirus",
    "start": "1636480",
    "end": "1644760"
  },
  {
    "text": "antiviruses have long flagged this kind of behavior and nobody writes viruses",
    "start": "1644760",
    "end": "1650279"
  },
  {
    "text": "this way anymore so instead what people started to do to avoid antivirus",
    "start": "1650279",
    "end": "1656480"
  },
  {
    "text": "detection is um is that they would encrypt the body of the of the their virus so that every",
    "start": "1656480",
    "end": "1666200"
  },
  {
    "text": "instance of the virus would look different um I skipped something before",
    "start": "1666200",
    "end": "1672039"
  },
  {
    "text": "before looking at this Behavior a lot what a lot of uh antiviruses would do is",
    "start": "1672039",
    "end": "1678159"
  },
  {
    "text": "simply GP for the virus if you knew that this worm is written in this given way",
    "start": "1678159",
    "end": "1684120"
  },
  {
    "text": "then all you need to do is GP for this particular sequence of instructions that you can only find in this worm and uh if",
    "start": "1684120",
    "end": "1693200"
  },
  {
    "text": "you find it you found your virus so what people started doing is encrypting the the actual body of the of the virus so",
    "start": "1693200",
    "end": "1699600"
  },
  {
    "text": "that every instance of the virus would look different and as it ran itself it",
    "start": "1699600",
    "end": "1705240"
  },
  {
    "text": "would decrypt itself and uh and then run the decrypted code so it would have this",
    "start": "1705240",
    "end": "1711799"
  },
  {
    "text": "fixed decryption routine uh at the beginning of of uh of the virus code so",
    "start": "1711799",
    "end": "1719279"
  },
  {
    "text": "antiviruses started triggering on that instead they're like aha we'll just use that and that decryption routine stays",
    "start": "1719279",
    "end": "1725360"
  },
  {
    "text": "the same so we'll just trigger on it on that instead so that's encrypted viruses so",
    "start": "1725360",
    "end": "1733440"
  },
  {
    "text": "as a result we have we got polymorphic viruses which instead",
    "start": "1733440",
    "end": "1738559"
  },
  {
    "text": "um H do not have a single fixed decryption routine they also change",
    "start": "1738559",
    "end": "1744360"
  },
  {
    "text": "their decryption routine there's a lot of different ways that um that decryption routines can can be changed",
    "start": "1744360",
    "end": "1750960"
  },
  {
    "text": "and I'll talk about this a little bit later now metamorphic viruses are the oh",
    "start": "1750960",
    "end": "1756120"
  },
  {
    "text": "sorry but the thing with the polymorphic viruses is that at some point they have",
    "start": "1756120",
    "end": "1761440"
  },
  {
    "text": "to decrypt their their code and run it so at some point in memory you'll have",
    "start": "1761440",
    "end": "1769080"
  },
  {
    "text": "the sequence of code that's uh the virus so instead what the antivirus needs to",
    "start": "1769080",
    "end": "1774320"
  },
  {
    "text": "do now in order to detect the virus is just to wait for it to decrypt and then",
    "start": "1774320",
    "end": "1780760"
  },
  {
    "text": "it Flags the the instance in memory and and you're done so now what people do is write",
    "start": "1780760",
    "end": "1787519"
  },
  {
    "text": "metamorphic viruses which don't even have a decryption routine and um and the way it works is that it simply",
    "start": "1787519",
    "end": "1795120"
  },
  {
    "text": "randomizes it code every time it infects a new binary um and that's what um",
    "start": "1795120",
    "end": "1803559"
  },
  {
    "text": "that's what we're going to use to hide information into into binaries so what I mean by randomized",
    "start": "1803559",
    "end": "1811120"
  },
  {
    "text": "code that it does a lot of tricks so it does things such as reg register swapping there's no in assembly code",
    "start": "1811120",
    "end": "1818440"
  },
  {
    "text": "there is no reason why you would choose to store something into say register a",
    "start": "1818440",
    "end": "1824320"
  },
  {
    "text": "instead of register b or register c um you could pick and choose it's really up",
    "start": "1824320",
    "end": "1829600"
  },
  {
    "text": "to the the programmer so what what um what a metamorphic virus can do is just that at every instance it knows these",
    "start": "1829600",
    "end": "1836799"
  },
  {
    "text": "are the registers I'm using these are the registers that have already been used and that I'm not allowed to touch",
    "start": "1836799",
    "end": "1842399"
  },
  {
    "text": "um say before U used by code that's before the our code and um and uh you",
    "start": "1842399",
    "end": "1850519"
  },
  {
    "text": "can swap them around so the first time you used a register ax then you you use",
    "start": "1850519",
    "end": "1856399"
  },
  {
    "text": "evx and then the second time that you infect someone you use ebx first and then eax so anybody trying to Simply",
    "start": "1856399",
    "end": "1864000"
  },
  {
    "text": "grap for um the virus code be it in memory or",
    "start": "1864000",
    "end": "1869080"
  },
  {
    "text": "elsewhere the new code looks different I don't know if you can see the red too well on the left hand side is the actual",
    "start": "1869080",
    "end": "1877799"
  },
  {
    "text": "uh binary representation of um of uh um of the virus code and almost half of the",
    "start": "1877799",
    "end": "1885720"
  },
  {
    "text": "code is changed now just by by virtue of uh of register swapping there are many",
    "start": "1885720",
    "end": "1892720"
  },
  {
    "text": "many many tricks um this register swapping is a simplest one instruction substitution is another one in the sense",
    "start": "1892720",
    "end": "1899799"
  },
  {
    "text": "that there are many different ways to do the same thing and I I'll go over this in great detail later on um but you can",
    "start": "1899799",
    "end": "1909279"
  },
  {
    "text": "in the same way that you do an addition you can do a subtraction but negate the upper end uh you can you",
    "start": "1909279",
    "end": "1918039"
  },
  {
    "text": "can have various data values in your code and just that you don't actually use and just randomize them every time",
    "start": "1918039",
    "end": "1925000"
  },
  {
    "text": "that you infect a new host um you're not using them anyway and",
    "start": "1925000",
    "end": "1930080"
  },
  {
    "text": "from the antivirus point of view it just all it knows is it's trying to grip for this fixed string and this fixed string",
    "start": "1930080",
    "end": "1936399"
  },
  {
    "text": "is not there anymore um KN and garbage insertions so there's no reason why um",
    "start": "1936399",
    "end": "1944600"
  },
  {
    "text": "your code has to say stay the same size you can just add garbage instructions in",
    "start": "1944600",
    "end": "1949799"
  },
  {
    "text": "the middle of your of your code and it doesn't change your uh functioning",
    "start": "1949799",
    "end": "1957120"
  },
  {
    "text": "Branch reversal I I'll go over all of this a little bit later on um so hien is this tool that that I",
    "start": "1957120",
    "end": "1965080"
  },
  {
    "text": "wrote to that uses some of these techniques to hide um information into",
    "start": "1965080",
    "end": "1970720"
  },
  {
    "text": "binaries and it's generic in the sense that it takes whatever input you want and just tries to hide it as best it can",
    "start": "1970720",
    "end": "1978480"
  },
  {
    "text": "into into the binary and currently it only works with um instruction substitution meaning it takes it looks",
    "start": "1978480",
    "end": "1985919"
  },
  {
    "text": "at the binary finds instructions that it knows it has equivalence for and then",
    "start": "1985919",
    "end": "1991679"
  },
  {
    "text": "substitutes those instructions around and depending what the substitution is um it means something or it doesn't so",
    "start": "1991679",
    "end": "1998720"
  },
  {
    "text": "I'm going to try to demo but I don't know if we have Network",
    "start": "1998720",
    "end": "2005960"
  },
  {
    "text": "all right this laptop is",
    "start": "2011200",
    "end": "2014320"
  },
  {
    "text": "dead",
    "start": "2025240",
    "end": "2028240"
  },
  {
    "text": "no it's turning on I don't know it turned off",
    "start": "2034039",
    "end": "2039720"
  },
  {
    "text": "yeah can I just unplug it here yeah",
    "start": "2050960",
    "end": "2059480"
  },
  {
    "text": "a little a little pyy all right we'll try if it works",
    "start": "2093119",
    "end": "2099640"
  },
  {
    "text": "how do I get the screen to come",
    "start": "2114200",
    "end": "2117440"
  },
  {
    "text": "up this guy",
    "start": "2125160",
    "end": "2129440"
  },
  {
    "text": "all right great oh I can't see",
    "start": "2137599",
    "end": "2142320"
  },
  {
    "text": "now he you know what let me yeah let let me yeah set it",
    "start": "2144160",
    "end": "2150480"
  },
  {
    "text": "up for",
    "start": "2156640",
    "end": "2160599"
  },
  {
    "text": "um okay it's being really",
    "start": "2206000",
    "end": "2210400"
  },
  {
    "text": "slow demo Gods aren't happy today for",
    "start": "2213480",
    "end": "2220560"
  },
  {
    "text": "somebody like to tell a little joke while we wait",
    "start": "2260319",
    "end": "2265160"
  },
  {
    "text": "okay now",
    "start": "2285040",
    "end": "2287640"
  },
  {
    "text": "mind H it's okay it's just being really slow function of seven no no it's just",
    "start": "2295920",
    "end": "2301160"
  },
  {
    "text": "being too slow for yeah",
    "start": "2301160",
    "end": "2305880"
  },
  {
    "text": "okay well I'll just describe it basically take a program take take hien",
    "start": "2323400",
    "end": "2329319"
  },
  {
    "text": "uh my program and um you feed it you feed it a binary such as bin LS or",
    "start": "2329319",
    "end": "2334960"
  },
  {
    "text": "whatever you want and um and you feed it also uh message so it could be anything",
    "start": "2334960",
    "end": "2341960"
  },
  {
    "text": "hello world uh hi how's it going anything you want um and it just hides it it hides it into the program I wish I",
    "start": "2341960",
    "end": "2349119"
  },
  {
    "text": "could show to you I have a really nice picture that I would have stored in there but um in any event what ends up",
    "start": "2349119",
    "end": "2357359"
  },
  {
    "text": "happening is that you have a new copy of Vin LS now um runs identically to the same to to to the original and um it has",
    "start": "2357359",
    "end": "2366119"
  },
  {
    "text": "the exact same size nothing's changed as far as functionality or or size and uh but if",
    "start": "2366119",
    "end": "2372400"
  },
  {
    "text": "you try to extract um the message using hideen again which prompts you for a password",
    "start": "2372400",
    "end": "2377520"
  },
  {
    "text": "by the way um you get the original message back out you can download This",
    "start": "2377520",
    "end": "2383520"
  },
  {
    "text": "by away from my website uh I don't know if I put a link in here crazy boy.com",
    "start": "2383520",
    "end": "2389960"
  },
  {
    "text": "hyen um that's an old copy a new copy will be up soon now the way it works is that you",
    "start": "2389960",
    "end": "2397800"
  },
  {
    "text": "have different instructions that mean the same thing and I use them to to sub",
    "start": "2397800",
    "end": "2403400"
  },
  {
    "text": "substitute one way is addition add eax 50 or whatever is the same as sub eax 50",
    "start": "2403400",
    "end": "2413160"
  },
  {
    "text": "standard arithmetic um so if I I can decide from",
    "start": "2413160",
    "end": "2418359"
  },
  {
    "text": "the onset that uh addition means Bit Zero and subtraction means bit one um",
    "start": "2418359",
    "end": "2427040"
  },
  {
    "text": "and so once when I encode something with hiden I just go into the the the binary just assembling it from the beginning",
    "start": "2427040",
    "end": "2434160"
  },
  {
    "text": "just keep going keep going every time I see an addition I check to see or a subtraction I check to see what it is",
    "start": "2434160",
    "end": "2440520"
  },
  {
    "text": "that I'm trying to embed is it zero or one and I flip accordingly um addition and subtraction",
    "start": "2440520",
    "end": "2447680"
  },
  {
    "text": "is just one way and there since there are only two ways you can only embed one bit of information into it there are",
    "start": "2447680",
    "end": "2453760"
  },
  {
    "text": "other instructions one of them is a test instruction which simp Compares two",
    "start": "2453760",
    "end": "2459520"
  },
  {
    "text": "registers uh and um and tells you if they're equal if one of them is greater than the other and whatnot um you can do",
    "start": "2459520",
    "end": "2467000"
  },
  {
    "text": "this in different ways if you're only looking at the same register so",
    "start": "2467000",
    "end": "2472960"
  },
  {
    "text": "axx then you can do um test exx or you can or them together or you can actually",
    "start": "2472960",
    "end": "2479880"
  },
  {
    "text": "and them together now you see there's two different or instructions in there and um I'll explain this a little bit",
    "start": "2479880",
    "end": "2485800"
  },
  {
    "text": "later but there is more than one way to have the same instruction depending on the",
    "start": "2485800",
    "end": "2491760"
  },
  {
    "text": "ordering of the operand I'll talk about a little bit later so in any event here with the test",
    "start": "2491760",
    "end": "2497200"
  },
  {
    "text": "instruction whenever we see a test instructions we can substitute it in four different ways meaning we can",
    "start": "2497200",
    "end": "2502640"
  },
  {
    "text": "encode two different bits um of information for each test instruction and test ex ex something that we see",
    "start": "2502640",
    "end": "2509040"
  },
  {
    "text": "everywhere in uh in machine code so an",
    "start": "2509040",
    "end": "2514119"
  },
  {
    "text": "example um this is code that that I found in um bin LS I think um and it's",
    "start": "2514119",
    "end": "2521720"
  },
  {
    "text": "just to show you that just in this piece of code I can embed four bits of information the first bit is with ad uh",
    "start": "2521720",
    "end": "2529400"
  },
  {
    "text": "if I wanted to embed 0 1 0 0 uh ad is already zero which is what we spoke",
    "start": "2529400",
    "end": "2534720"
  },
  {
    "text": "about before so I I keep it the same way then I find and eax ex which is one of",
    "start": "2534720",
    "end": "2540119"
  },
  {
    "text": "the ways that I just mentioned for test two bits right there and then there's a sub a little bit later on and um what I",
    "start": "2540119",
    "end": "2547880"
  },
  {
    "text": "want is a zero which is an add so I just flip it around to what it what I want it",
    "start": "2547880",
    "end": "2553599"
  },
  {
    "text": "to be now this is fine and dandy but if",
    "start": "2553599",
    "end": "2558640"
  },
  {
    "text": "it's just done this way then it would be pretty easy to detect that you're trying",
    "start": "2558640",
    "end": "2564000"
  },
  {
    "text": "to hide something in in um in in a binary if an attacker were to execute the binary so and the reason is that",
    "start": "2564000",
    "end": "2573760"
  },
  {
    "text": "ASI assuming that you're embeding ASI is um repetitive every first most",
    "start": "2573760",
    "end": "2581960"
  },
  {
    "text": "significant bit is set to I think zero or one um one of them and it's always that way for for standard asky so if you",
    "start": "2581960",
    "end": "2590480"
  },
  {
    "text": "were to analyze the code the binary code you would see every e bit repeating bit",
    "start": "2590480",
    "end": "2597960"
  },
  {
    "text": "one bit one bit one like okay something is definitely uh hidden in here so",
    "start": "2597960",
    "end": "2603480"
  },
  {
    "text": "instead we encrypt it which simply uh whiten the message makes it look like random",
    "start": "2603480",
    "end": "2609880"
  },
  {
    "text": "noise it could be anything you can never be sure if it's asky or something else",
    "start": "2609880",
    "end": "2615359"
  },
  {
    "text": "and um and there's a problem with encryption is that you want to be able",
    "start": "2615359",
    "end": "2621280"
  },
  {
    "text": "to know how much how much to extract from the binary because say in bin LS",
    "start": "2621280",
    "end": "2627200"
  },
  {
    "text": "you could uh embed I don't know 3K of of of message into it but you don't",
    "start": "2627200",
    "end": "2634800"
  },
  {
    "text": "necessarily have 3K to embed into uh 3K as a message instead maybe you just have",
    "start": "2634800",
    "end": "2641800"
  },
  {
    "text": "Hello World which is very short so you have to specifically encode the length into the",
    "start": "2641800",
    "end": "2650760"
  },
  {
    "text": "into your into your message but then if you encode the length then that's an easy way for an attacker to to detect",
    "start": "2650760",
    "end": "2657319"
  },
  {
    "text": "your uh your message because all he has to do is say okay the length is a 32-bit",
    "start": "2657319",
    "end": "2663280"
  },
  {
    "text": "um or 64-bit wide uh field and you know",
    "start": "2663280",
    "end": "2668800"
  },
  {
    "text": "this code is this code can only contain a maximum of say 3K of data tops so odds",
    "start": "2668800",
    "end": "2676319"
  },
  {
    "text": "like the number can definitely not be greater than 3K for the length of your message and then you can look at look at",
    "start": "2676319",
    "end": "2682599"
  },
  {
    "text": "that field does it look like it's actually less than 3K yeah it does uh or it has a whole bunch of zeros in front",
    "start": "2682599",
    "end": "2689240"
  },
  {
    "text": "of in front of it because the length is really small then you're like it's a pretty good uh indication that you have",
    "start": "2689240",
    "end": "2696280"
  },
  {
    "text": "something hidden in there there so instead what we do is um take the the password I would have",
    "start": "2696280",
    "end": "2703760"
  },
  {
    "text": "showed this to you uh the demo but hideen prompts you for a password makes a a sha hash of it and then exor that",
    "start": "2703760",
    "end": "2712440"
  },
  {
    "text": "with the length so it looks like garbage but when when it comes time for you to",
    "start": "2712440",
    "end": "2719359"
  },
  {
    "text": "to retrieve that data it's trivial um for Heiden to to find it and",
    "start": "2719359",
    "end": "2725440"
  },
  {
    "text": "another thing we do is that if um by the way all of these techniques are to make an attacker's life more",
    "start": "2725440",
    "end": "2732119"
  },
  {
    "text": "difficult because we're trying to do steganography and uh we don't want ATT",
    "start": "2732119",
    "end": "2737319"
  },
  {
    "text": "attacker to easily be able to tell that you're uh that there is something hidden",
    "start": "2737319",
    "end": "2744119"
  },
  {
    "text": "in the program so Random walk is one thing that the that we do as well which",
    "start": "2744119",
    "end": "2750880"
  },
  {
    "text": "is that if if you were to do what I talked about before and simply go through the program line by line and as",
    "start": "2750880",
    "end": "2758400"
  },
  {
    "text": "soon as you see an addition or a test or any other instruction that we have equivalents for and substitute that that",
    "start": "2758400",
    "end": "2765160"
  },
  {
    "text": "what You' end up having is the program itself and at the top you'll see all",
    "start": "2765160",
    "end": "2770319"
  },
  {
    "text": "these substitutions these this uh weirdness in um in terms of what",
    "start": "2770319",
    "end": "2776240"
  },
  {
    "text": "instructions are used and then afterwards all you'd see is the regular test and ads and subs in in the given",
    "start": "2776240",
    "end": "2784800"
  },
  {
    "text": "frequency that they usually occur in so what we want to do is try to embed",
    "start": "2784800",
    "end": "2791240"
  },
  {
    "text": "um embed the text evenly all over the all over the medium and that's that's",
    "start": "2791240",
    "end": "2797880"
  },
  {
    "text": "what we call a random walk so these squares are just um code blocks",
    "start": "2797880",
    "end": "2804640"
  },
  {
    "text": "that we can or cannot embed into the blue ones are are the ones that we can",
    "start": "2804640",
    "end": "2810400"
  },
  {
    "text": "actually embed into and what we do is that we pick a random number say the first number we pick is",
    "start": "2810400",
    "end": "2817760"
  },
  {
    "text": "is two so we go and we uh we embed data into the second",
    "start": "2817760",
    "end": "2823880"
  },
  {
    "text": "block and then we pick another random number it gives us whatever four we end",
    "start": "2823880",
    "end": "2830960"
  },
  {
    "text": "up with that block and we just keep going keep picking random numbers you know next one next one next one and so",
    "start": "2830960",
    "end": "2836839"
  },
  {
    "text": "on and eventually we cover all the the blocks that we wanted to cover and the",
    "start": "2836839",
    "end": "2842200"
  },
  {
    "text": "way we're able to know uh what the random number is going to be at decoding",
    "start": "2842200",
    "end": "2847559"
  },
  {
    "text": "time is that we seed the random number generator with um with a hash of a",
    "start": "2847559",
    "end": "2854240"
  },
  {
    "text": "password so the end result is that when you when you call the random number generator it's um we know for sure that",
    "start": "2854240",
    "end": "2862319"
  },
  {
    "text": "this is the sequences it's going to have the trick is to is to know how to seat it to begin with so an attacker doesn't",
    "start": "2862319",
    "end": "2869559"
  },
  {
    "text": "know the password he wouldn't know how to see the random number generator and therefore wouldn't know how to perform",
    "start": "2869559",
    "end": "2876200"
  },
  {
    "text": "the random wall and how to in what order to decode",
    "start": "2876200",
    "end": "2881359"
  },
  {
    "text": "the the the code blocks now there are some problems in",
    "start": "2881359",
    "end": "2887520"
  },
  {
    "text": "that when I said equivalent instructions they're not always equivalent there are some Edge case",
    "start": "2887520",
    "end": "2894280"
  },
  {
    "text": "scenarios um such as ADD and sub uh in this in",
    "start": "2894280",
    "end": "2900880"
  },
  {
    "text": "this in this example here I'm clearing a register so ex is zero and then I'm adding uh negative 1 to",
    "start": "2900880",
    "end": "2910000"
  },
  {
    "text": "eax in this case the result is that ex ex is negative 1 the Overflow flag is",
    "start": "2910000",
    "end": "2916680"
  },
  {
    "text": "zero and the carry flag is zero which makes sense now what happens if I if I",
    "start": "2916680",
    "end": "2923359"
  },
  {
    "text": "subtract one from zero should give me the same result right it doesn't",
    "start": "2923359",
    "end": "2929599"
  },
  {
    "text": "unfortunately the carry flag gets set so there are little tricks like that the",
    "start": "2929599",
    "end": "2934920"
  },
  {
    "text": "little problems that make that some instructions are really not equivalent uh and um if I were to simply",
    "start": "2934920",
    "end": "2943079"
  },
  {
    "text": "not use them because they're they're not equivalent 100% of the time then there",
    "start": "2943079",
    "end": "2948280"
  },
  {
    "text": "would almost be no way of of encoding any data at all any data at all with um",
    "start": "2948280",
    "end": "2954000"
  },
  {
    "text": "instruction substitution there always some edge cases like this so what you do is simply you scan",
    "start": "2954000",
    "end": "2962160"
  },
  {
    "text": "forward you have to disassem you you know where you are in the code and you scan forward CS for any instruction uh",
    "start": "2962160",
    "end": "2969440"
  },
  {
    "text": "in the execution flow that may overwrite the flags that get modified so",
    "start": "2969440",
    "end": "2976240"
  },
  {
    "text": "in this case if I scan forward and I see that two or three instructions later",
    "start": "2976240",
    "end": "2981280"
  },
  {
    "text": "there is some other addition uh or a multiplication or something that sets the carry flag and in between uh in",
    "start": "2981280",
    "end": "2989599"
  },
  {
    "text": "between those instructions there is no instruction that actually checks for the carry flag then I can do whatever I want",
    "start": "2989599",
    "end": "2995440"
  },
  {
    "text": "to the carry flag it never gets checked anyway it gets",
    "start": "2995440",
    "end": "2999599"
  },
  {
    "text": "clobbered right there's another problem in that I showed you the example when we",
    "start": "3001920",
    "end": "3007079"
  },
  {
    "text": "have two instructions or four instructions that we can embed into what",
    "start": "3007079",
    "end": "3012640"
  },
  {
    "text": "happens if you have seven instructions um if you wanted to embed three bits of",
    "start": "3012640",
    "end": "3017760"
  },
  {
    "text": "information You' need eight instructions but with seven you just can't do it but",
    "start": "3017760",
    "end": "3023680"
  },
  {
    "text": "it's a shame because otherwise you'd have to resort to only using four of the instructions and only but two bits of",
    "start": "3023680",
    "end": "3030119"
  },
  {
    "text": "information so you're you're you're wasting a few instructions um so what we do quickly is just uh um",
    "start": "3030119",
    "end": "3039240"
  },
  {
    "text": "use one of the instructions as a joker where you say if this instruction is present then we're not embedding any",
    "start": "3039240",
    "end": "3046200"
  },
  {
    "text": "information and all the other ones are used to embed three bits of information so in the case of seven instructions um",
    "start": "3046200",
    "end": "3053599"
  },
  {
    "text": "I use six six of the instructions to embed three bits of information and then if there's any instruction that I uh any",
    "start": "3053599",
    "end": "3061640"
  },
  {
    "text": "any data that I would otherwise try to embed that needs uh the other two instructions then",
    "start": "3061640",
    "end": "3067559"
  },
  {
    "text": "I just embed The Joker and and say um sorry can't use this so as a result for",
    "start": "3067559",
    "end": "3073119"
  },
  {
    "text": "seven instructions instead of um instead of having to only be able to embed two",
    "start": "3073119",
    "end": "3080119"
  },
  {
    "text": "bits of information I can actually embed 2.58 which is log 2 of 6",
    "start": "3080119",
    "end": "3088558"
  },
  {
    "text": "um oh and the reason why that works well is because we assume that the data is random because it's um it's encrypted so",
    "start": "3089200",
    "end": "3096880"
  },
  {
    "text": "we have an equal distribution of values so we won't get a case where it's we have",
    "start": "3096880",
    "end": "3102200"
  },
  {
    "text": "say um data that's exactly what we cannot embed",
    "start": "3102200",
    "end": "3108720"
  },
  {
    "text": "um so what are what are the issues here issues that it's detectable um despite",
    "start": "3108720",
    "end": "3114680"
  },
  {
    "text": "what I said about additions and subtractions being equivalent and all of that they're not actually created equal",
    "start": "3114680",
    "end": "3121119"
  },
  {
    "text": "in in the eye of the compiler compilers choose often times to use ads",
    "start": "3121119",
    "end": "3128599"
  },
  {
    "text": "exclusively or Subs exclusively in some places and for example they often do not",
    "start": "3128599",
    "end": "3134680"
  },
  {
    "text": "ever use uh a negative subtraction so sub eax -5 is very very very rare So if",
    "start": "3134680",
    "end": "3143119"
  },
  {
    "text": "you were to analyze the code and you see a huge number of negative subtractions then you know that there's something very fishy going",
    "start": "3143119",
    "end": "3150440"
  },
  {
    "text": "on it's a relatively low bandwidth as far as uh steganographic tools goes out",
    "start": "3150440",
    "end": "3157040"
  },
  {
    "text": "guest which hides in jpegs um Can embed one bit of information for every every 17 bit of of cover text uh and Heiden",
    "start": "3157040",
    "end": "3167480"
  },
  {
    "text": "can only embed one in 110 it's still a lot if you look at",
    "start": "3167480",
    "end": "3173359"
  },
  {
    "text": "things like Microsoft Word but um if you look at s it's not it's not really that much you can still hide more than a",
    "start": "3173359",
    "end": "3180160"
  },
  {
    "text": "message it's not the issue it's just a tenfold it's an order of magnitude different with other tools um it's also",
    "start": "3180160",
    "end": "3187119"
  },
  {
    "text": "easy to tamper with because we're using stat static uh code marks",
    "start": "3187119",
    "end": "3192160"
  },
  {
    "text": "basically all an attacker needs to do is to know ahead of time that these are the",
    "start": "3192160",
    "end": "3197880"
  },
  {
    "text": "instructions that we can embed into which are addition subtraction test and a whole slew of other ones if they know",
    "start": "3197880",
    "end": "3204480"
  },
  {
    "text": "that then it can just go around flipping around randomly all our additions and subtractions not knowing necessarily if",
    "start": "3204480",
    "end": "3212319"
  },
  {
    "text": "we've actually hidden anything in them but it would effectively destroy our our",
    "start": "3212319",
    "end": "3217559"
  },
  {
    "text": "text and it also breaks self- modifying code which I don't see as too big of a of a problem because I don't know if",
    "start": "3217559",
    "end": "3223240"
  },
  {
    "text": "there's that much self- modifying code um out there other than viruses and",
    "start": "3223240",
    "end": "3228760"
  },
  {
    "text": "stuff like that but if you if you were to um rely on the fact that",
    "start": "3228760",
    "end": "3237440"
  },
  {
    "text": "this addition is an addition and it has to be an addition then um if you embed",
    "start": "3237440",
    "end": "3242920"
  },
  {
    "text": "with hideen you would break that and might possibly break your code I'll do a QA session just",
    "start": "3242920",
    "end": "3251880"
  },
  {
    "text": "afterwards um yeah some statistics anyways so future work now I told you what the",
    "start": "3251880",
    "end": "3258559"
  },
  {
    "text": "problems were with with hien and how it it can be broken uh there's one way to",
    "start": "3258559",
    "end": "3263760"
  },
  {
    "text": "get around that is to use reordering and um what I mean by that is that if you",
    "start": "3263760",
    "end": "3269359"
  },
  {
    "text": "have a bunch of different code blocks and you want to be able you can reorder them because say functionality doesn't",
    "start": "3269359",
    "end": "3275880"
  },
  {
    "text": "depend on The Ordering of the block that as I spoke about earlier on if you have function a function B function C and so",
    "start": "3275880",
    "end": "3282160"
  },
  {
    "text": "on uh it doesn't matter where in the code they're they're located as long as",
    "start": "3282160",
    "end": "3287559"
  },
  {
    "text": "you call the right address um and you pass the right arguments it'll return back to to where you expect it to so you",
    "start": "3287559",
    "end": "3295640"
  },
  {
    "text": "can take those functions and just put them anywhere you want and depending on",
    "start": "3295640",
    "end": "3300760"
  },
  {
    "text": "the order that you've uh you you're on the order of those functions you can",
    "start": "3300760",
    "end": "3305960"
  },
  {
    "text": "embed data now given N Things you can reorder there's n factorial ways to",
    "start": "3305960",
    "end": "3312359"
  },
  {
    "text": "reorder them and um basically there's log two of n factorial um bits which is",
    "start": "3312359",
    "end": "3319839"
  },
  {
    "text": "can be quite a bit if you have only two things it's one bit if you have 64 it's 295 bits so it grows not exponentially",
    "start": "3319839",
    "end": "3328839"
  },
  {
    "text": "but pretty quickly more than linearly um the top one is how fast it grows in",
    "start": "3328839",
    "end": "3336200"
  },
  {
    "text": "terms of uh in terms of how many bits you can embed uh it's roughly n log",
    "start": "3336200",
    "end": "3343440"
  },
  {
    "text": "n um I'm going to rush through this because I'm I'm going to have a little QA session but",
    "start": "3343440",
    "end": "3350920"
  },
  {
    "text": "uh yeah basically this is just a way to embed data with um reordering if you",
    "start": "3350920",
    "end": "3356480"
  },
  {
    "text": "have ABC ABC is zero um ACB is one and then there's there's an encoding",
    "start": "3356480",
    "end": "3363160"
  },
  {
    "text": "algorithm which um basically means that the the way it works is that you take",
    "start": "3363160",
    "end": "3370319"
  },
  {
    "text": "the number of bits of your input and um you end up with a number say in this",
    "start": "3370319",
    "end": "3377000"
  },
  {
    "text": "case we have we can embed four bits because we have four items uh and that number is 13 you",
    "start": "3377000",
    "end": "3384240"
  },
  {
    "text": "decompose it along the factorials so 13 is 2 * 3 factorial plus 0 * 2",
    "start": "3384240",
    "end": "3390400"
  },
  {
    "text": "factorial + 1 1 factorial and then that two and zero and one um determine the",
    "start": "3390400",
    "end": "3397839"
  },
  {
    "text": "position of the item you're looking at with respect to the list in front of it",
    "start": "3397839",
    "end": "3405039"
  },
  {
    "text": "so if um you have a string ABCD you want to reorder the first item is the second",
    "start": "3405039",
    "end": "3413000"
  },
  {
    "text": "item in the list meaning the third in base zero so it's C then you move on to",
    "start": "3413000",
    "end": "3418520"
  },
  {
    "text": "the next one it's uh you're you're left with ABD you want a to be the zeroth",
    "start": "3418520",
    "end": "3424319"
  },
  {
    "text": "item correct you move to the next one uh you want B to be the the first item so",
    "start": "3424319",
    "end": "3430960"
  },
  {
    "text": "you flip it with the first item um and um that's that's one way it's uh it's",
    "start": "3430960",
    "end": "3438480"
  },
  {
    "text": "provably uh optimal and um worked good the coding is is simple same thing um",
    "start": "3438480",
    "end": "3446200"
  },
  {
    "text": "lots of things can be reordered functions that I said before independent instructions and that if you're doing",
    "start": "3446200",
    "end": "3451400"
  },
  {
    "text": "add you're adding something to register and then you're adding something else to a different register there's no reason",
    "start": "3451400",
    "end": "3457319"
  },
  {
    "text": "why you have you you need to have them in that order you can flip them around any way you want and oftentimes you can",
    "start": "3457319",
    "end": "3463240"
  },
  {
    "text": "have a quite long listing of completely independent instructions um arguments the way you",
    "start": "3463240",
    "end": "3468839"
  },
  {
    "text": "call functions um you can change these things as long as you change the function itself the way the order in",
    "start": "3468839",
    "end": "3475720"
  },
  {
    "text": "which Ops arguments off the stack register allocation data you can swap",
    "start": "3475720",
    "end": "3480799"
  },
  {
    "text": "those things around um say if you have a string in your code it's uh in a given",
    "start": "3480799",
    "end": "3486359"
  },
  {
    "text": "point in in the code it's an address U if you move that string elsewhere then",
    "start": "3486359",
    "end": "3492520"
  },
  {
    "text": "as long as you just change the address to point to the correct place you're you're fine lots of stuff this is an",
    "start": "3492520",
    "end": "3499000"
  },
  {
    "text": "example of instruction reordering um where you have the top three",
    "start": "3499000",
    "end": "3504039"
  },
  {
    "text": "instructions are are independent and you can flip them around any way you want it to so",
    "start": "3504039",
    "end": "3510359"
  },
  {
    "text": "move uh dollar two into eax three into ebx and push ECX completely independent",
    "start": "3510359",
    "end": "3517440"
  },
  {
    "text": "you cannot reorder the call because um when you're calling a function you're assuming that that the",
    "start": "3517440",
    "end": "3526280"
  },
  {
    "text": "registers have the value that you thought they would have so that you can't touch but all the others you can a problem is a um what happens if I",
    "start": "3526280",
    "end": "3535400"
  },
  {
    "text": "reorder three instructions but at later somewhere else later on in the code you",
    "start": "3535400",
    "end": "3540839"
  },
  {
    "text": "have a call that comes back to in the middle of one of the instructions that you that you've",
    "start": "3540839",
    "end": "3547400"
  },
  {
    "text": "reordered big problem um the code doesn't behave the way the way um you",
    "start": "3547400",
    "end": "3552839"
  },
  {
    "text": "expect it to so it gets really hairy you have to have a virtual machine to um",
    "start": "3552839",
    "end": "3559039"
  },
  {
    "text": "emulate what's really going on Trace all the execution flows to see where the",
    "start": "3559039",
    "end": "3564200"
  },
  {
    "text": "calls end up um and uh and if it ends up somewhere where you could otherwise",
    "start": "3564200",
    "end": "3570880"
  },
  {
    "text": "reorder instructions you you can't reorder them anymore but it's really",
    "start": "3570880",
    "end": "3576559"
  },
  {
    "text": "complicated and not foolproof um started trying to to implement that into hideen",
    "start": "3576559",
    "end": "3582839"
  },
  {
    "text": "but it's being much more difficult than expected how can this be used information hiding traditional stuff you",
    "start": "3582839",
    "end": "3590280"
  },
  {
    "text": "know either copyright marking or or simply sending a message to somebody else all of those tradition things but",
    "start": "3590280",
    "end": "3597280"
  },
  {
    "text": "in addition you can use it for security in the sense that um you can use it to your advantage for anti-reverse",
    "start": "3597280",
    "end": "3603599"
  },
  {
    "text": "engineering or you could um um a lot of ways some of say windows",
    "start": "3603599",
    "end": "3611280"
  },
  {
    "text": "exploits work is that as soon as the buffers overflowed they um rely on",
    "start": "3611280",
    "end": "3617359"
  },
  {
    "text": "jumping on a known uh in a known address in the executable which happens to have",
    "start": "3617359",
    "end": "3625119"
  },
  {
    "text": "an instruction that um we want say call EVP and then it would use that to",
    "start": "3625119",
    "end": "3631280"
  },
  {
    "text": "execute the um exploit code now what happens if call EVP isn't there anymore",
    "start": "3631280",
    "end": "3636920"
  },
  {
    "text": "because we we we we reordered things we took a function that had that called EVP",
    "start": "3636920",
    "end": "3644000"
  },
  {
    "text": "and shifted it completely elsewhere the exploit will fail so it could be used that way um",
    "start": "3644000",
    "end": "3651359"
  },
  {
    "text": "polymorphism virus uh it could be used as a metamorph engine",
    "start": "3651359",
    "end": "3657319"
  },
  {
    "text": "basically and uh that's it I'm running out of time I have 5 minutes left for questions sorry for all the problems",
    "start": "3657319",
    "end": "3664240"
  },
  {
    "text": "with the",
    "start": "3664240",
    "end": "3667240"
  },
  {
    "text": "demo uh",
    "start": "3672240",
    "end": "3675440"
  },
  {
    "text": "wait all right it's okay just tell me could you consider using maybe a uh uh",
    "start": "3681079",
    "end": "3686400"
  },
  {
    "text": "like AED alphabet what do you mean by a sorted",
    "start": "3686400",
    "end": "3693200"
  },
  {
    "text": "alphabet sort like a block sorting compress you just",
    "start": "3693200",
    "end": "3698319"
  },
  {
    "text": "take index of the tree where you want",
    "start": "3698319",
    "end": "3703480"
  },
  {
    "text": "have oh um that's kind of what I do though with the with the reordering yeah",
    "start": "3707920",
    "end": "3716400"
  },
  {
    "text": "anyone",
    "start": "3744839",
    "end": "3747839"
  },
  {
    "text": "e",
    "start": "3774839",
    "end": "3777839"
  },
  {
    "text": "e",
    "start": "3804760",
    "end": "3807760"
  },
  {
    "text": "e",
    "start": "3834720",
    "end": "3837720"
  },
  {
    "text": "e",
    "start": "3864720",
    "end": "3867720"
  },
  {
    "text": "e",
    "start": "3894640",
    "end": "3897640"
  },
  {
    "text": "e",
    "start": "3924640",
    "end": "3927640"
  },
  {
    "text": "e",
    "start": "3954640",
    "end": "3957640"
  },
  {
    "text": "for",
    "start": "3984559",
    "end": "3987559"
  },
  {
    "text": "for",
    "start": "4014520",
    "end": "4017520"
  },
  {
    "text": "for",
    "start": "4044520",
    "end": "4047520"
  },
  {
    "text": "e",
    "start": "4074440",
    "end": "4077440"
  },
  {
    "text": "for",
    "start": "4104440",
    "end": "4107440"
  },
  {
    "text": "for",
    "start": "4134440",
    "end": "4137440"
  },
  {
    "text": "for",
    "start": "4164359",
    "end": "4167359"
  },
  {
    "text": "for",
    "start": "4194320",
    "end": "4197320"
  },
  {
    "text": "for",
    "start": "4224320",
    "end": "4227320"
  },
  {
    "text": "for",
    "start": "4254239",
    "end": "4257239"
  },
  {
    "text": "for",
    "start": "4284239",
    "end": "4287239"
  },
  {
    "text": "e",
    "start": "4314239",
    "end": "4317239"
  },
  {
    "text": "e",
    "start": "4344159",
    "end": "4347159"
  },
  {
    "text": "for",
    "start": "4374120",
    "end": "4377120"
  },
  {
    "text": "e for",
    "start": "4404120",
    "end": "4408080"
  }
]