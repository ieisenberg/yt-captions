[
  {
    "start": "0",
    "end": "36000"
  },
  {
    "text": "[Music]",
    "start": "1130",
    "end": "14320"
  },
  {
    "text": "hello everyone this is a broken chain",
    "start": "14320",
    "end": "16240"
  },
  {
    "text": "discovering opc-ua at tax office and",
    "start": "16240",
    "end": "18720"
  },
  {
    "text": "exploiting the supply chain",
    "start": "18720",
    "end": "20720"
  },
  {
    "text": "my name is eran jacob i'm a security",
    "start": "20720",
    "end": "23039"
  },
  {
    "text": "research team leader at otorio",
    "start": "23039",
    "end": "25519"
  },
  {
    "text": "otorio is an industrial cyber security",
    "start": "25519",
    "end": "28000"
  },
  {
    "text": "solutions and services provider and",
    "start": "28000",
    "end": "30480"
  },
  {
    "text": "along with me on this project worked",
    "start": "30480",
    "end": "32480"
  },
  {
    "text": "roman volkin and alonzini on the fasting",
    "start": "32480",
    "end": "34800"
  },
  {
    "text": "part",
    "start": "34800",
    "end": "36880"
  },
  {
    "start": "36000",
    "end": "60000"
  },
  {
    "text": "let's do a quick overview of what we are",
    "start": "36880",
    "end": "38559"
  },
  {
    "text": "going to talk about first we are going",
    "start": "38559",
    "end": "40160"
  },
  {
    "text": "to start with some intro",
    "start": "40160",
    "end": "42079"
  },
  {
    "text": "on opcway and why we decided to research",
    "start": "42079",
    "end": "45120"
  },
  {
    "text": "it",
    "start": "45120",
    "end": "46320"
  },
  {
    "text": "we will continue to discover the attack",
    "start": "46320",
    "end": "48879"
  },
  {
    "text": "surface of different implementations",
    "start": "48879",
    "end": "51360"
  },
  {
    "text": "and afterwards we will exploit some of",
    "start": "51360",
    "end": "53680"
  },
  {
    "text": "the implementations we found",
    "start": "53680",
    "end": "56320"
  },
  {
    "text": "at the end we will cover some fuzzing",
    "start": "56320",
    "end": "58079"
  },
  {
    "text": "work we have done",
    "start": "58079",
    "end": "60320"
  },
  {
    "start": "60000",
    "end": "77000"
  },
  {
    "text": "so let's start",
    "start": "60320",
    "end": "62719"
  },
  {
    "text": "automation protocols are used in many",
    "start": "62719",
    "end": "64720"
  },
  {
    "text": "cyber physical systems we can find them",
    "start": "64720",
    "end": "66880"
  },
  {
    "text": "in factories critical infrastructures",
    "start": "66880",
    "end": "69439"
  },
  {
    "text": "and even in your company's building",
    "start": "69439",
    "end": "72000"
  },
  {
    "text": "along the years many automation vendors",
    "start": "72000",
    "end": "74159"
  },
  {
    "text": "have created their own proprietary",
    "start": "74159",
    "end": "76640"
  },
  {
    "text": "protocols for these purposes",
    "start": "76640",
    "end": "79600"
  },
  {
    "text": "which caused some issues in",
    "start": "79600",
    "end": "81280"
  },
  {
    "text": "interoperability between devices of",
    "start": "81280",
    "end": "83439"
  },
  {
    "text": "different vendors",
    "start": "83439",
    "end": "86840"
  },
  {
    "text": "along with movement well towards more",
    "start": "86960",
    "end": "89920"
  },
  {
    "text": "connected environments in industrial",
    "start": "89920",
    "end": "91920"
  },
  {
    "text": "environments",
    "start": "91920",
    "end": "93200"
  },
  {
    "text": "there were some issues in security in",
    "start": "93200",
    "end": "95680"
  },
  {
    "text": "these protocols that were not originally",
    "start": "95680",
    "end": "99759"
  },
  {
    "text": "designed for this kind of security",
    "start": "99759",
    "end": "103200"
  },
  {
    "text": "the companies have decided to create the",
    "start": "103520",
    "end": "105040"
  },
  {
    "text": "opc foundation which is a consortium",
    "start": "105040",
    "end": "107759"
  },
  {
    "text": "that is responsible for open and secure",
    "start": "107759",
    "end": "110479"
  },
  {
    "text": "communication for industrial",
    "start": "110479",
    "end": "112840"
  },
  {
    "text": "needs the foundation first created the",
    "start": "112840",
    "end": "115600"
  },
  {
    "start": "115000",
    "end": "157000"
  },
  {
    "text": "opc classic which is a protocol that is",
    "start": "115600",
    "end": "118240"
  },
  {
    "text": "made of multiple specifications",
    "start": "118240",
    "end": "120560"
  },
  {
    "text": "providing open and secure communication",
    "start": "120560",
    "end": "123360"
  },
  {
    "text": "for different needs of the industry",
    "start": "123360",
    "end": "126320"
  },
  {
    "text": "and while it was widely adopted",
    "start": "126320",
    "end": "128800"
  },
  {
    "text": "there were some issues in this protocol",
    "start": "128800",
    "end": "131840"
  },
  {
    "text": "first of all it is based on the",
    "start": "131840",
    "end": "133599"
  },
  {
    "text": "microsoft decom",
    "start": "133599",
    "end": "135200"
  },
  {
    "text": "which is a proprietary and close",
    "start": "135200",
    "end": "136959"
  },
  {
    "text": "protocol of microsoft making the opc",
    "start": "136959",
    "end": "139680"
  },
  {
    "text": "classic not that open",
    "start": "139680",
    "end": "142560"
  },
  {
    "text": "another issue was the use of dynamic",
    "start": "142560",
    "end": "145040"
  },
  {
    "text": "ports",
    "start": "145040",
    "end": "146080"
  },
  {
    "text": "which made firewall configurations very",
    "start": "146080",
    "end": "148319"
  },
  {
    "text": "hard for this protocol",
    "start": "148319",
    "end": "150720"
  },
  {
    "text": "along with some other issues and",
    "start": "150720",
    "end": "152239"
  },
  {
    "text": "security concerns the foundation have",
    "start": "152239",
    "end": "154319"
  },
  {
    "text": "decided to create a new protocol",
    "start": "154319",
    "end": "157519"
  },
  {
    "start": "157000",
    "end": "224000"
  },
  {
    "text": "the new protocol is opc ua",
    "start": "157519",
    "end": "160720"
  },
  {
    "text": "opc unified architecture is basically",
    "start": "160720",
    "end": "163360"
  },
  {
    "text": "everything we could ask for",
    "start": "163360",
    "end": "165360"
  },
  {
    "text": "it is security-minded",
    "start": "165360",
    "end": "167360"
  },
  {
    "text": "cross-vendor platform independent very",
    "start": "167360",
    "end": "170319"
  },
  {
    "text": "maintained and very flexible and of",
    "start": "170319",
    "end": "172800"
  },
  {
    "text": "course supporting the industry 4.0 and",
    "start": "172800",
    "end": "175120"
  },
  {
    "text": "smart manufacturing",
    "start": "175120",
    "end": "177440"
  },
  {
    "text": "opc ua can be used across the whole",
    "start": "177440",
    "end": "180159"
  },
  {
    "text": "industrial ecosystem",
    "start": "180159",
    "end": "182000"
  },
  {
    "text": "starting from field devices in the ot",
    "start": "182000",
    "end": "183920"
  },
  {
    "text": "network all the way to the itn cloud",
    "start": "183920",
    "end": "188239"
  },
  {
    "text": "for example opc ua can be used between",
    "start": "188400",
    "end": "190800"
  },
  {
    "text": "controllers",
    "start": "190800",
    "end": "191920"
  },
  {
    "text": "hmis",
    "start": "191920",
    "end": "193440"
  },
  {
    "text": "f2 scada mes and erp in the it network",
    "start": "193440",
    "end": "198959"
  },
  {
    "text": "opecua is also supporting cloud",
    "start": "198959",
    "end": "200800"
  },
  {
    "text": "communication",
    "start": "200800",
    "end": "202400"
  },
  {
    "text": "and if needed it can be used for field",
    "start": "202400",
    "end": "204720"
  },
  {
    "text": "level communication and with tsn it is",
    "start": "204720",
    "end": "207440"
  },
  {
    "text": "real time",
    "start": "207440",
    "end": "210000"
  },
  {
    "text": "as you see opcwa provides us with great",
    "start": "210640",
    "end": "212720"
  },
  {
    "text": "power",
    "start": "212720",
    "end": "213840"
  },
  {
    "text": "but with great power comes great",
    "start": "213840",
    "end": "215680"
  },
  {
    "text": "responsibility",
    "start": "215680",
    "end": "217280"
  },
  {
    "text": "and any compromise of this protocol",
    "start": "217280",
    "end": "219760"
  },
  {
    "text": "may compromise the whole industrial",
    "start": "219760",
    "end": "221360"
  },
  {
    "text": "ecosystem",
    "start": "221360",
    "end": "223440"
  },
  {
    "text": "that is leading us to the motivation for",
    "start": "223440",
    "end": "225519"
  },
  {
    "start": "224000",
    "end": "252000"
  },
  {
    "text": "our research",
    "start": "225519",
    "end": "227519"
  },
  {
    "text": "well basically opcua is the next thing",
    "start": "227519",
    "end": "230080"
  },
  {
    "text": "in industrial communication",
    "start": "230080",
    "end": "232319"
  },
  {
    "text": "we can see it is highly adopted by many",
    "start": "232319",
    "end": "234480"
  },
  {
    "text": "vendors and many of our clients",
    "start": "234480",
    "end": "237280"
  },
  {
    "text": "and if compromised it has some",
    "start": "237280",
    "end": "238959"
  },
  {
    "text": "significant potential impact",
    "start": "238959",
    "end": "241280"
  },
  {
    "text": "mainly because it is used to connect",
    "start": "241280",
    "end": "243120"
  },
  {
    "text": "very sensitive internal ot networks with",
    "start": "243120",
    "end": "245840"
  },
  {
    "text": "more external and more exposed it and",
    "start": "245840",
    "end": "248480"
  },
  {
    "text": "cloud environments",
    "start": "248480",
    "end": "251360"
  },
  {
    "text": "now we can start discovering the attack",
    "start": "252000",
    "end": "253920"
  },
  {
    "text": "surface of different implementations",
    "start": "253920",
    "end": "256639"
  },
  {
    "text": "and we are going to start with the",
    "start": "256639",
    "end": "258560"
  },
  {
    "text": "specifications",
    "start": "258560",
    "end": "260880"
  },
  {
    "text": "the opc foundation provides full and",
    "start": "260880",
    "end": "263280"
  },
  {
    "text": "open specifications for opc ua",
    "start": "263280",
    "end": "266000"
  },
  {
    "text": "they publish the online and along with",
    "start": "266000",
    "end": "268880"
  },
  {
    "text": "them we can find multiple open source",
    "start": "268880",
    "end": "270800"
  },
  {
    "text": "implementations that were published by",
    "start": "270800",
    "end": "272960"
  },
  {
    "text": "the foundation",
    "start": "272960",
    "end": "275040"
  },
  {
    "text": "most of these implementations are now",
    "start": "275040",
    "end": "276639"
  },
  {
    "text": "legacy",
    "start": "276639",
    "end": "277919"
  },
  {
    "text": "but the dotted standard that is based on",
    "start": "277919",
    "end": "280080"
  },
  {
    "text": "the dotnet legacy is still maintained",
    "start": "280080",
    "end": "283840"
  },
  {
    "text": "there are multiple other open",
    "start": "284880",
    "end": "286560"
  },
  {
    "text": "communication stacks and commercial sdks",
    "start": "286560",
    "end": "288479"
  },
  {
    "text": "available",
    "start": "288479",
    "end": "289919"
  },
  {
    "text": "and if we look on the opc foundation",
    "start": "289919",
    "end": "292240"
  },
  {
    "text": "website we can find listed many products",
    "start": "292240",
    "end": "295280"
  },
  {
    "text": "that are using opcwa",
    "start": "295280",
    "end": "298720"
  },
  {
    "text": "now we wanted to check",
    "start": "299520",
    "end": "301600"
  },
  {
    "text": "what implementation is used in",
    "start": "301600",
    "end": "303840"
  },
  {
    "text": "common products",
    "start": "303840",
    "end": "305199"
  },
  {
    "text": "and",
    "start": "305199",
    "end": "306000"
  },
  {
    "text": "we checked some of these products in our",
    "start": "306000",
    "end": "307840"
  },
  {
    "text": "lab and found out that",
    "start": "307840",
    "end": "311120"
  },
  {
    "text": "softing and unifi automation sdks along",
    "start": "311120",
    "end": "313440"
  },
  {
    "text": "with the opc foundation",
    "start": "313440",
    "end": "316400"
  },
  {
    "text": "communication stocks",
    "start": "316400",
    "end": "317840"
  },
  {
    "text": "are being widely used",
    "start": "317840",
    "end": "319840"
  },
  {
    "text": "and we found two main variations of them",
    "start": "319840",
    "end": "322320"
  },
  {
    "text": "one is a native version and the other is",
    "start": "322320",
    "end": "324720"
  },
  {
    "text": "dot net",
    "start": "324720",
    "end": "327199"
  },
  {
    "text": "focusing a bit on the",
    "start": "327360",
    "end": "329199"
  },
  {
    "text": "native version of the sdks and",
    "start": "329199",
    "end": "331360"
  },
  {
    "text": "communication stacks",
    "start": "331360",
    "end": "332880"
  },
  {
    "text": "we can see that the ua stack dll",
    "start": "332880",
    "end": "335919"
  },
  {
    "text": "of the foundation",
    "start": "335919",
    "end": "337520"
  },
  {
    "text": "is the same name for the unified",
    "start": "337520",
    "end": "339039"
  },
  {
    "text": "automation sdk",
    "start": "339039",
    "end": "341919"
  },
  {
    "text": "but this was not the same library",
    "start": "342479",
    "end": "346639"
  },
  {
    "text": "well this was not such a surprise for us",
    "start": "346880",
    "end": "349280"
  },
  {
    "text": "since kaspersky also mentioned this",
    "start": "349280",
    "end": "352000"
  },
  {
    "text": "subject in a report they have done in",
    "start": "352000",
    "end": "354080"
  },
  {
    "text": "2018",
    "start": "354080",
    "end": "355440"
  },
  {
    "text": "mentioning there are some third-party",
    "start": "355440",
    "end": "356880"
  },
  {
    "text": "applications that are using modified",
    "start": "356880",
    "end": "359039"
  },
  {
    "text": "versions of the ua stack",
    "start": "359039",
    "end": "362240"
  },
  {
    "text": "we checked it truly and found out that",
    "start": "362240",
    "end": "365199"
  },
  {
    "text": "both softing and unifi automation sdks",
    "start": "365199",
    "end": "368479"
  },
  {
    "text": "are based on the foundation original",
    "start": "368479",
    "end": "370479"
  },
  {
    "text": "stack",
    "start": "370479",
    "end": "371520"
  },
  {
    "text": "which is now legacy",
    "start": "371520",
    "end": "374720"
  },
  {
    "text": "looking at the dotnet version of these",
    "start": "374960",
    "end": "377039"
  },
  {
    "text": "sdks we found the same thing",
    "start": "377039",
    "end": "381840"
  },
  {
    "text": "now if we go back to our attack surface",
    "start": "382880",
    "end": "385360"
  },
  {
    "text": "we can see that there are some popular",
    "start": "385360",
    "end": "387199"
  },
  {
    "text": "commercial sdks that are based on",
    "start": "387199",
    "end": "390639"
  },
  {
    "text": "the foundations",
    "start": "390639",
    "end": "392080"
  },
  {
    "text": "most of them legacy now communication",
    "start": "392080",
    "end": "394120"
  },
  {
    "text": "communication stocks",
    "start": "394120",
    "end": "396720"
  },
  {
    "text": "along with some other open communication",
    "start": "396720",
    "end": "398639"
  },
  {
    "text": "stocks and sdks",
    "start": "398639",
    "end": "402479"
  },
  {
    "text": "we don't have the full details on all",
    "start": "404400",
    "end": "406560"
  },
  {
    "text": "the products that are using opc ua but",
    "start": "406560",
    "end": "408800"
  },
  {
    "text": "from what we've been able to see and",
    "start": "408800",
    "end": "411039"
  },
  {
    "text": "according to some statements of the opc",
    "start": "411039",
    "end": "413039"
  },
  {
    "text": "foundation",
    "start": "413039",
    "end": "414720"
  },
  {
    "text": "we understand that most of the products",
    "start": "414720",
    "end": "417360"
  },
  {
    "text": "are using commercial sdks",
    "start": "417360",
    "end": "419520"
  },
  {
    "text": "or",
    "start": "419520",
    "end": "420319"
  },
  {
    "text": "the communication stack made by the",
    "start": "420319",
    "end": "421919"
  },
  {
    "text": "foundation",
    "start": "421919",
    "end": "424479"
  },
  {
    "text": "now if we focus on the upper part in",
    "start": "426400",
    "end": "429120"
  },
  {
    "text": "this attack surface we can see a clear",
    "start": "429120",
    "end": "431199"
  },
  {
    "text": "chain of dependency",
    "start": "431199",
    "end": "433120"
  },
  {
    "text": "starting from the foundations",
    "start": "433120",
    "end": "435280"
  },
  {
    "text": "original communication stocks through",
    "start": "435280",
    "end": "437360"
  },
  {
    "text": "commercial sdks all the way to",
    "start": "437360",
    "end": "440479"
  },
  {
    "text": "products made by large vendors",
    "start": "440479",
    "end": "444319"
  },
  {
    "text": "but before we start exploiting this",
    "start": "444319",
    "end": "446400"
  },
  {
    "text": "chain of dependency",
    "start": "446400",
    "end": "447919"
  },
  {
    "text": "let's first",
    "start": "447919",
    "end": "449120"
  },
  {
    "start": "448000",
    "end": "467000"
  },
  {
    "text": "cover some previous work done in this",
    "start": "449120",
    "end": "450960"
  },
  {
    "text": "area",
    "start": "450960",
    "end": "452960"
  },
  {
    "text": "first we have the opc foundation",
    "start": "452960",
    "end": "454960"
  },
  {
    "text": "security working group which is actively",
    "start": "454960",
    "end": "457120"
  },
  {
    "text": "working on securing these important",
    "start": "457120",
    "end": "458880"
  },
  {
    "text": "protocols and we even have the chance to",
    "start": "458880",
    "end": "461440"
  },
  {
    "text": "meet with them",
    "start": "461440",
    "end": "462880"
  },
  {
    "text": "but there are some independent",
    "start": "462880",
    "end": "464080"
  },
  {
    "text": "researches that have been done such as",
    "start": "464080",
    "end": "466240"
  },
  {
    "text": "the research from the bsi",
    "start": "466240",
    "end": "468479"
  },
  {
    "start": "467000",
    "end": "522000"
  },
  {
    "text": "that covered threats specifications and",
    "start": "468479",
    "end": "471440"
  },
  {
    "text": "the rtc implementation",
    "start": "471440",
    "end": "473440"
  },
  {
    "text": "and they were also able to find memory",
    "start": "473440",
    "end": "475440"
  },
  {
    "text": "leak in the foundation stack",
    "start": "475440",
    "end": "478400"
  },
  {
    "text": "kaspersky have done another research in",
    "start": "478400",
    "end": "480319"
  },
  {
    "text": "2018",
    "start": "480319",
    "end": "481840"
  },
  {
    "text": "covering applications using the",
    "start": "481840",
    "end": "483680"
  },
  {
    "text": "foundation stack",
    "start": "483680",
    "end": "485120"
  },
  {
    "text": "and were able to find issues in",
    "start": "485120",
    "end": "486800"
  },
  {
    "text": "third-party products and products made",
    "start": "486800",
    "end": "488960"
  },
  {
    "text": "by the foundations themselves",
    "start": "488960",
    "end": "491599"
  },
  {
    "text": "in 2020 they published another paper on",
    "start": "491599",
    "end": "494639"
  },
  {
    "text": "ncc fuzzing",
    "start": "494639",
    "end": "497599"
  },
  {
    "text": "claudia have published another paper",
    "start": "498000",
    "end": "500319"
  },
  {
    "text": "recently that is discussing opc and",
    "start": "500319",
    "end": "502720"
  },
  {
    "text": "opcua vulnerabilities",
    "start": "502720",
    "end": "505599"
  },
  {
    "text": "they found some issues in products that",
    "start": "505599",
    "end": "507599"
  },
  {
    "text": "are not part of our supply chain",
    "start": "507599",
    "end": "511120"
  },
  {
    "text": "along the years many academic papers",
    "start": "511280",
    "end": "512959"
  },
  {
    "text": "have been published and if you are",
    "start": "512959",
    "end": "514479"
  },
  {
    "text": "looking for securing your own opc server",
    "start": "514479",
    "end": "517360"
  },
  {
    "text": "or client i recommend you reading one of",
    "start": "517360",
    "end": "519599"
  },
  {
    "text": "these",
    "start": "519599",
    "end": "521839"
  },
  {
    "start": "522000",
    "end": "568000"
  },
  {
    "text": "well it is about time for us to start",
    "start": "522399",
    "end": "524159"
  },
  {
    "text": "exploiting our supply chain",
    "start": "524159",
    "end": "526320"
  },
  {
    "text": "and we of course going to begin with the",
    "start": "526320",
    "end": "528399"
  },
  {
    "text": "specifications",
    "start": "528399",
    "end": "531200"
  },
  {
    "text": "looking at specifications we can find",
    "start": "532480",
    "end": "534160"
  },
  {
    "text": "there is a standard opcwa connection",
    "start": "534160",
    "end": "537279"
  },
  {
    "text": "starting from a low arc",
    "start": "537279",
    "end": "539200"
  },
  {
    "text": "followed by a secure channel initiation",
    "start": "539200",
    "end": "542399"
  },
  {
    "text": "the secure channel provides us with",
    "start": "542399",
    "end": "544160"
  },
  {
    "text": "confidentiality integrity and",
    "start": "544160",
    "end": "546640"
  },
  {
    "text": "application authentication",
    "start": "546640",
    "end": "549200"
  },
  {
    "text": "after the secure channel is initiated we",
    "start": "549200",
    "end": "551040"
  },
  {
    "text": "have the session layer which provides",
    "start": "551040",
    "end": "553279"
  },
  {
    "text": "another layer of security in the form of",
    "start": "553279",
    "end": "555760"
  },
  {
    "text": "user authentication and authorization",
    "start": "555760",
    "end": "559600"
  },
  {
    "text": "after the two of these we can send our",
    "start": "559760",
    "end": "562399"
  },
  {
    "text": "messages in a secure way such as read",
    "start": "562399",
    "end": "564959"
  },
  {
    "text": "write and call",
    "start": "564959",
    "end": "567760"
  },
  {
    "start": "568000",
    "end": "624000"
  },
  {
    "text": "reading the reference we looked mainly",
    "start": "569200",
    "end": "571279"
  },
  {
    "text": "for areas",
    "start": "571279",
    "end": "572959"
  },
  {
    "text": "that may be more",
    "start": "572959",
    "end": "574720"
  },
  {
    "text": "risky for implementations",
    "start": "574720",
    "end": "578000"
  },
  {
    "text": "there are many of them but we focus on",
    "start": "578000",
    "end": "580640"
  },
  {
    "text": "three of them",
    "start": "580640",
    "end": "582560"
  },
  {
    "text": "first we have the complex data types",
    "start": "582560",
    "end": "585200"
  },
  {
    "text": "some data types in opc ua are very",
    "start": "585200",
    "end": "587600"
  },
  {
    "text": "flexible",
    "start": "587600",
    "end": "588880"
  },
  {
    "text": "and we decided we can try and use them",
    "start": "588880",
    "end": "591120"
  },
  {
    "text": "for exploiting different parts of it",
    "start": "591120",
    "end": "594640"
  },
  {
    "text": "another area is the flexible encoding",
    "start": "594640",
    "end": "597360"
  },
  {
    "text": "opc ui message can contain different",
    "start": "597360",
    "end": "599680"
  },
  {
    "text": "coding and even binary and xml together",
    "start": "599680",
    "end": "604959"
  },
  {
    "text": "and the third subject is press security",
    "start": "604959",
    "end": "606959"
  },
  {
    "text": "messages",
    "start": "606959",
    "end": "608320"
  },
  {
    "text": "some opc ua messages does not require",
    "start": "608320",
    "end": "611200"
  },
  {
    "text": "any security",
    "start": "611200",
    "end": "612640"
  },
  {
    "text": "and for example we have the messages",
    "start": "612640",
    "end": "615120"
  },
  {
    "text": "that are used to create the secure",
    "start": "615120",
    "end": "617279"
  },
  {
    "text": "channel or messages that are part of the",
    "start": "617279",
    "end": "619680"
  },
  {
    "text": "discovery service",
    "start": "619680",
    "end": "622720"
  },
  {
    "start": "624000",
    "end": "705000"
  },
  {
    "text": "if we are taking these three areas in",
    "start": "625200",
    "end": "627680"
  },
  {
    "text": "the opc ua",
    "start": "627680",
    "end": "629120"
  },
  {
    "text": "we can try and check if the dotnet",
    "start": "629120",
    "end": "630959"
  },
  {
    "text": "starter con standard communication stack",
    "start": "630959",
    "end": "633040"
  },
  {
    "text": "by the opc foundation is vulnerable to",
    "start": "633040",
    "end": "635200"
  },
  {
    "text": "any issues in this area",
    "start": "635200",
    "end": "637279"
  },
  {
    "text": "we decided to focus on the dotted",
    "start": "637279",
    "end": "638880"
  },
  {
    "text": "standard mainly because it's the only",
    "start": "638880",
    "end": "640640"
  },
  {
    "text": "one that is still maintained and we",
    "start": "640640",
    "end": "642720"
  },
  {
    "text": "found it being used by many",
    "start": "642720",
    "end": "645120"
  },
  {
    "text": "vendors and large products",
    "start": "645120",
    "end": "648800"
  },
  {
    "text": "looking at the.net stock we knew that",
    "start": "650320",
    "end": "652720"
  },
  {
    "text": "memory corruption issues are",
    "start": "652720",
    "end": "654800"
  },
  {
    "text": "not much a thing in dot net",
    "start": "654800",
    "end": "657200"
  },
  {
    "text": "but dotnet still doesn't like the",
    "start": "657200",
    "end": "659120"
  },
  {
    "text": "function calls",
    "start": "659120",
    "end": "660800"
  },
  {
    "text": "2d precursion in dotnet",
    "start": "660800",
    "end": "662880"
  },
  {
    "text": "may cause the",
    "start": "662880",
    "end": "664560"
  },
  {
    "text": "application to crash",
    "start": "664560",
    "end": "666560"
  },
  {
    "text": "and",
    "start": "666560",
    "end": "667839"
  },
  {
    "text": "here it is very interesting because",
    "start": "667839",
    "end": "670160"
  },
  {
    "text": "in the opc ua we have objects that are",
    "start": "670160",
    "end": "672959"
  },
  {
    "text": "so flexible they can call and contain",
    "start": "672959",
    "end": "675600"
  },
  {
    "text": "the same object underneath",
    "start": "675600",
    "end": "677600"
  },
  {
    "text": "making them nested objects",
    "start": "677600",
    "end": "680720"
  },
  {
    "text": "the reference alert of such risk when",
    "start": "680720",
    "end": "682880"
  },
  {
    "text": "describing nested data types",
    "start": "682880",
    "end": "685279"
  },
  {
    "text": "and a related issue was already found in",
    "start": "685279",
    "end": "687519"
  },
  {
    "text": "the past",
    "start": "687519",
    "end": "689120"
  },
  {
    "text": "in extension object decoding",
    "start": "689120",
    "end": "692720"
  },
  {
    "text": "looking at the foundations.net stack",
    "start": "692720",
    "end": "695279"
  },
  {
    "text": "we can find the source code many",
    "start": "695279",
    "end": "696560"
  },
  {
    "text": "limitations of the nesting level",
    "start": "696560",
    "end": "699440"
  },
  {
    "text": "but we felt this is not very systematic",
    "start": "699440",
    "end": "701920"
  },
  {
    "text": "and decided to check it truly",
    "start": "701920",
    "end": "705600"
  },
  {
    "text": "well we have a few nested data types in",
    "start": "706240",
    "end": "708320"
  },
  {
    "text": "opc ua",
    "start": "708320",
    "end": "710079"
  },
  {
    "text": "first we have the variant",
    "start": "710079",
    "end": "712000"
  },
  {
    "text": "which is basically a union and can",
    "start": "712000",
    "end": "714079"
  },
  {
    "text": "contain any built-in data types",
    "start": "714079",
    "end": "716399"
  },
  {
    "text": "or array",
    "start": "716399",
    "end": "717760"
  },
  {
    "text": "and matrix",
    "start": "717760",
    "end": "720560"
  },
  {
    "text": "extension object is also an interesting",
    "start": "720800",
    "end": "722880"
  },
  {
    "text": "data type it is a structured container",
    "start": "722880",
    "end": "725279"
  },
  {
    "text": "it can contain any opc use structure",
    "start": "725279",
    "end": "727920"
  },
  {
    "text": "in xml or binary this is very",
    "start": "727920",
    "end": "730800"
  },
  {
    "text": "interesting because opcwa structures can",
    "start": "730800",
    "end": "733440"
  },
  {
    "text": "contain different data types including",
    "start": "733440",
    "end": "735600"
  },
  {
    "text": "extension object itself",
    "start": "735600",
    "end": "738720"
  },
  {
    "text": "diagnostic info is much simpler and it's",
    "start": "739040",
    "end": "741279"
  },
  {
    "text": "basically just able to contain an",
    "start": "741279",
    "end": "743360"
  },
  {
    "text": "optional diagnostic info object",
    "start": "743360",
    "end": "746399"
  },
  {
    "text": "and the data value is able to call",
    "start": "746399",
    "end": "748639"
  },
  {
    "text": "variant that can contain another data",
    "start": "748639",
    "end": "751040"
  },
  {
    "text": "value",
    "start": "751040",
    "end": "753360"
  },
  {
    "text": "looking at these data types",
    "start": "753839",
    "end": "756000"
  },
  {
    "text": "we were able to find",
    "start": "756000",
    "end": "757680"
  },
  {
    "start": "757000",
    "end": "799000"
  },
  {
    "text": "issue in the variant decoding",
    "start": "757680",
    "end": "760560"
  },
  {
    "text": "in the xml decoder of the ocua",
    "start": "760560",
    "end": "764079"
  },
  {
    "text": "here on the left",
    "start": "764079",
    "end": "765600"
  },
  {
    "text": "you can see the read variant function",
    "start": "765600",
    "end": "768240"
  },
  {
    "text": "calling read matrix that is able to call",
    "start": "768240",
    "end": "771120"
  },
  {
    "text": "read variant directly without any",
    "start": "771120",
    "end": "772800"
  },
  {
    "text": "limitation allowing us to perform",
    "start": "772800",
    "end": "775040"
  },
  {
    "text": "unlimited nesting",
    "start": "775040",
    "end": "778079"
  },
  {
    "text": "this is placed in the xml decoder for",
    "start": "778959",
    "end": "781440"
  },
  {
    "text": "the opc ua and all we need to crash the",
    "start": "781440",
    "end": "784399"
  },
  {
    "text": "sdk using this is to create a large",
    "start": "784399",
    "end": "787120"
  },
  {
    "text": "enough xml something like this but",
    "start": "787120",
    "end": "789839"
  },
  {
    "text": "much larger",
    "start": "789839",
    "end": "791920"
  },
  {
    "text": "and",
    "start": "791920",
    "end": "794160"
  },
  {
    "text": "we need to find a way to get it into",
    "start": "794399",
    "end": "797120"
  },
  {
    "text": "the xml decoder",
    "start": "797120",
    "end": "798880"
  },
  {
    "text": "we have done this using the extension",
    "start": "798880",
    "end": "801120"
  },
  {
    "start": "799000",
    "end": "880000"
  },
  {
    "text": "objects",
    "start": "801120",
    "end": "802240"
  },
  {
    "text": "which are able to contain xml decoded",
    "start": "802240",
    "end": "806000"
  },
  {
    "text": "structures",
    "start": "806000",
    "end": "807440"
  },
  {
    "text": "and using the extension objects we are",
    "start": "807440",
    "end": "809200"
  },
  {
    "text": "able to pivot our way into vulnerable",
    "start": "809200",
    "end": "811360"
  },
  {
    "text": "parts of the stack",
    "start": "811360",
    "end": "812959"
  },
  {
    "text": "and",
    "start": "812959",
    "end": "815120"
  },
  {
    "text": "using them before channel session",
    "start": "815120",
    "end": "817200"
  },
  {
    "text": "security we are able to crash the sdk",
    "start": "817200",
    "end": "820639"
  },
  {
    "text": "before",
    "start": "820639",
    "end": "821839"
  },
  {
    "text": "any security is initiated",
    "start": "821839",
    "end": "825600"
  },
  {
    "text": "here we can see an example for",
    "start": "826240",
    "end": "827760"
  },
  {
    "text": "exploitation of this issue in secure",
    "start": "827760",
    "end": "830079"
  },
  {
    "text": "channel initiation",
    "start": "830079",
    "end": "832720"
  },
  {
    "text": "we have an extension object in the",
    "start": "832720",
    "end": "834160"
  },
  {
    "text": "message header and",
    "start": "834160",
    "end": "836639"
  },
  {
    "text": "we just have to change the encoding for",
    "start": "836639",
    "end": "838399"
  },
  {
    "text": "the extension object and append our",
    "start": "838399",
    "end": "840079"
  },
  {
    "text": "payload",
    "start": "840079",
    "end": "841440"
  },
  {
    "text": "and we get a crush",
    "start": "841440",
    "end": "844079"
  },
  {
    "text": "but that was not enough for most",
    "start": "844079",
    "end": "845920"
  },
  {
    "text": "application",
    "start": "845920",
    "end": "847120"
  },
  {
    "text": "because we had to find a way to send",
    "start": "847120",
    "end": "848959"
  },
  {
    "text": "much larger xml payload",
    "start": "848959",
    "end": "851440"
  },
  {
    "text": "and most of the applications were",
    "start": "851440",
    "end": "852880"
  },
  {
    "text": "limiting us by the buffer size",
    "start": "852880",
    "end": "857199"
  },
  {
    "text": "so we used chunks",
    "start": "857199",
    "end": "859920"
  },
  {
    "text": "opcua allows us to send messages in",
    "start": "859920",
    "end": "862320"
  },
  {
    "text": "chunks",
    "start": "862320",
    "end": "863279"
  },
  {
    "text": "and reaching message size up to 4 to 16",
    "start": "863279",
    "end": "865760"
  },
  {
    "text": "megabytes in the configuration we",
    "start": "865760",
    "end": "867600"
  },
  {
    "text": "checked",
    "start": "867600",
    "end": "870320"
  },
  {
    "text": "but chunks are not supported in the open",
    "start": "870320",
    "end": "872240"
  },
  {
    "text": "requests",
    "start": "872240",
    "end": "873760"
  },
  {
    "text": "so this time we used a pre-security",
    "start": "873760",
    "end": "876079"
  },
  {
    "text": "message find servers which is part of",
    "start": "876079",
    "end": "878480"
  },
  {
    "text": "the discovery service",
    "start": "878480",
    "end": "880160"
  },
  {
    "start": "880000",
    "end": "907000"
  },
  {
    "text": "that is by design not requiring a",
    "start": "880160",
    "end": "882320"
  },
  {
    "text": "security",
    "start": "882320",
    "end": "885279"
  },
  {
    "text": "sending this message with our vulnerable",
    "start": "885279",
    "end": "887519"
  },
  {
    "text": "xml",
    "start": "887519",
    "end": "889360"
  },
  {
    "text": "we were able to crash any dotnet",
    "start": "889360",
    "end": "891120"
  },
  {
    "text": "application we've checked",
    "start": "891120",
    "end": "894160"
  },
  {
    "text": "this six years old zero day can be found",
    "start": "895360",
    "end": "898079"
  },
  {
    "text": "in the opc foundation's legacy standard",
    "start": "898079",
    "end": "901600"
  },
  {
    "text": "and",
    "start": "901600",
    "end": "902560"
  },
  {
    "text": "softing and unified automation sdks",
    "start": "902560",
    "end": "906399"
  },
  {
    "start": "907000",
    "end": "962000"
  },
  {
    "text": "if we try to demonstrate how this can be",
    "start": "907279",
    "end": "909199"
  },
  {
    "text": "exploited here we have a main site and",
    "start": "909199",
    "end": "911760"
  },
  {
    "text": "two remote sites connected to it",
    "start": "911760",
    "end": "914079"
  },
  {
    "text": "and in the middle we have the scada that",
    "start": "914079",
    "end": "915839"
  },
  {
    "text": "is communicating with two of the remote",
    "start": "915839",
    "end": "918000"
  },
  {
    "text": "sites",
    "start": "918000",
    "end": "919920"
  },
  {
    "text": "an attacker on the main site may be able",
    "start": "919920",
    "end": "922160"
  },
  {
    "text": "to send a malicious packet to the opcwa",
    "start": "922160",
    "end": "924959"
  },
  {
    "text": "servers making them crash",
    "start": "924959",
    "end": "927440"
  },
  {
    "text": "and cause a lot of visibility and",
    "start": "927440",
    "end": "929120"
  },
  {
    "text": "control",
    "start": "929120",
    "end": "931600"
  },
  {
    "text": "this action may cause a total shutdown",
    "start": "932560",
    "end": "934639"
  },
  {
    "text": "for many factories",
    "start": "934639",
    "end": "936560"
  },
  {
    "text": "and can be performed also from a remote",
    "start": "936560",
    "end": "939199"
  },
  {
    "text": "site",
    "start": "939199",
    "end": "941839"
  },
  {
    "text": "in this scenario we have an attacker",
    "start": "942240",
    "end": "943759"
  },
  {
    "text": "that has access to one of the opc ua",
    "start": "943759",
    "end": "946079"
  },
  {
    "text": "servers",
    "start": "946079",
    "end": "947040"
  },
  {
    "text": "or main the middle in its network",
    "start": "947040",
    "end": "950079"
  },
  {
    "text": "the attacker can response the opca",
    "start": "950079",
    "end": "952720"
  },
  {
    "text": "client of the scada with a malicious",
    "start": "952720",
    "end": "954560"
  },
  {
    "text": "response and get the same result",
    "start": "954560",
    "end": "959199"
  },
  {
    "start": "962000",
    "end": "991000"
  },
  {
    "text": "now let's try and cover another area",
    "start": "962240",
    "end": "964720"
  },
  {
    "text": "again around the xml but this time with",
    "start": "964720",
    "end": "967199"
  },
  {
    "text": "the xml processing library",
    "start": "967199",
    "end": "969839"
  },
  {
    "text": "we know that xml processing in dotnet",
    "start": "969839",
    "end": "972160"
  },
  {
    "text": "may be a bit tricky on some versions",
    "start": "972160",
    "end": "974959"
  },
  {
    "text": "and",
    "start": "974959",
    "end": "976000"
  },
  {
    "text": "we noticed there were multiple",
    "start": "976000",
    "end": "977759"
  },
  {
    "text": "vulnerabilities in these areas before",
    "start": "977759",
    "end": "980399"
  },
  {
    "text": "but it was a great chance for us to",
    "start": "980399",
    "end": "982240"
  },
  {
    "text": "check the commercial sdks",
    "start": "982240",
    "end": "986000"
  },
  {
    "text": "looking for the modified versions",
    "start": "986000",
    "end": "988800"
  },
  {
    "text": "we found in unified automation",
    "start": "988800",
    "end": "990880"
  },
  {
    "text": "this piece of code and if you look here",
    "start": "990880",
    "end": "994160"
  },
  {
    "start": "991000",
    "end": "1024000"
  },
  {
    "text": "we have an unsafe xml document loading",
    "start": "994160",
    "end": "998720"
  },
  {
    "text": "this allows an attacker that is able to",
    "start": "998720",
    "end": "1000720"
  },
  {
    "text": "load xml into this function",
    "start": "1000720",
    "end": "1003600"
  },
  {
    "text": "to perform http requests into the",
    "start": "1003600",
    "end": "1006720"
  },
  {
    "text": "internal subnet",
    "start": "1006720",
    "end": "1008240"
  },
  {
    "text": "and leak files from the attack device",
    "start": "1008240",
    "end": "1012480"
  },
  {
    "text": "code refactoring reintroduced this",
    "start": "1012480",
    "end": "1014079"
  },
  {
    "text": "vulnerability after it was fixed in the",
    "start": "1014079",
    "end": "1016079"
  },
  {
    "text": "dotnet standard",
    "start": "1016079",
    "end": "1017680"
  },
  {
    "text": "and we can exploit it in the same way of",
    "start": "1017680",
    "end": "1019600"
  },
  {
    "text": "an extension object",
    "start": "1019600",
    "end": "1022639"
  },
  {
    "text": "a scenario for this kind of attack is",
    "start": "1023600",
    "end": "1025918"
  },
  {
    "start": "1024000",
    "end": "1048000"
  },
  {
    "text": "pretty simple we have an attacker in the",
    "start": "1025919",
    "end": "1028000"
  },
  {
    "text": "it network and we have an",
    "start": "1028000",
    "end": "1030720"
  },
  {
    "text": "internal ot network that is accessible",
    "start": "1030720",
    "end": "1033199"
  },
  {
    "text": "to it",
    "start": "1033199",
    "end": "1034880"
  },
  {
    "text": "the attacker",
    "start": "1034880",
    "end": "1036640"
  },
  {
    "text": "can send a malicious packet to the opc",
    "start": "1036640",
    "end": "1038400"
  },
  {
    "text": "ua server",
    "start": "1038400",
    "end": "1039520"
  },
  {
    "text": "retrieve sensitive files",
    "start": "1039520",
    "end": "1041520"
  },
  {
    "text": "and send malicious requests into the",
    "start": "1041520",
    "end": "1044079"
  },
  {
    "text": "internal network",
    "start": "1044079",
    "end": "1046880"
  },
  {
    "text": "let's continue with another type of",
    "start": "1049039",
    "end": "1050720"
  },
  {
    "text": "commercial sdk this time we are going to",
    "start": "1050720",
    "end": "1052960"
  },
  {
    "text": "focus on an sdk that is based on the ncc",
    "start": "1052960",
    "end": "1056480"
  },
  {
    "text": "legacy stack",
    "start": "1056480",
    "end": "1058480"
  },
  {
    "text": "we chose softing cpp sdk which is used",
    "start": "1058480",
    "end": "1061520"
  },
  {
    "text": "by many vendors",
    "start": "1061520",
    "end": "1063600"
  },
  {
    "start": "1063000",
    "end": "1127000"
  },
  {
    "text": "and is supporting multiple platforms",
    "start": "1063600",
    "end": "1068400"
  },
  {
    "text": "the software cvp can run on vxworks",
    "start": "1068640",
    "end": "1071039"
  },
  {
    "text": "windows and linux and is made of",
    "start": "1071039",
    "end": "1073360"
  },
  {
    "text": "multiple libraries",
    "start": "1073360",
    "end": "1075760"
  },
  {
    "text": "on the bottom here we can see the tv5",
    "start": "1075760",
    "end": "1077520"
  },
  {
    "text": "stack",
    "start": "1077520",
    "end": "1078720"
  },
  {
    "text": "which is basically an extended version",
    "start": "1078720",
    "end": "1081280"
  },
  {
    "text": "for the opc foundation nc stack",
    "start": "1081280",
    "end": "1085039"
  },
  {
    "text": "above it we have the tb5ot",
    "start": "1085679",
    "end": "1088160"
  },
  {
    "text": "that is in charge on stack sdk level",
    "start": "1088160",
    "end": "1090880"
  },
  {
    "text": "processing",
    "start": "1090880",
    "end": "1092480"
  },
  {
    "text": "and on the top we have tb5 cpp",
    "start": "1092480",
    "end": "1095440"
  },
  {
    "text": "that is the interface for integrating",
    "start": "1095440",
    "end": "1097600"
  },
  {
    "text": "applications with the sdk",
    "start": "1097600",
    "end": "1101039"
  },
  {
    "text": "here we focused on the integration",
    "start": "1101760",
    "end": "1103520"
  },
  {
    "text": "between the extended version of the ncc",
    "start": "1103520",
    "end": "1106080"
  },
  {
    "text": "stack and the tb5 ot library",
    "start": "1106080",
    "end": "1110080"
  },
  {
    "text": "an interesting fact is while the",
    "start": "1110080",
    "end": "1112000"
  },
  {
    "text": "foundation is using",
    "start": "1112000",
    "end": "1113840"
  },
  {
    "text": "c structures for representing decoded",
    "start": "1113840",
    "end": "1116640"
  },
  {
    "text": "opc ua objects",
    "start": "1116640",
    "end": "1118640"
  },
  {
    "text": "the tv5 ot is using",
    "start": "1118640",
    "end": "1121039"
  },
  {
    "text": "a cpp object made by softing for the",
    "start": "1121039",
    "end": "1124400"
  },
  {
    "text": "same",
    "start": "1124400",
    "end": "1125280"
  },
  {
    "text": "purpose",
    "start": "1125280",
    "end": "1127679"
  },
  {
    "start": "1127000",
    "end": "1190000"
  },
  {
    "text": "and if we try to walk through the",
    "start": "1127760",
    "end": "1129919"
  },
  {
    "text": "process from binary message into cvp",
    "start": "1129919",
    "end": "1132400"
  },
  {
    "text": "objects",
    "start": "1132400",
    "end": "1133440"
  },
  {
    "text": "we can hear",
    "start": "1133440",
    "end": "1134559"
  },
  {
    "text": "see that a binary message is first",
    "start": "1134559",
    "end": "1136400"
  },
  {
    "text": "processed by the tb5 stack",
    "start": "1136400",
    "end": "1138960"
  },
  {
    "text": "validated",
    "start": "1138960",
    "end": "1140400"
  },
  {
    "text": "and if everything is okay we get some c",
    "start": "1140400",
    "end": "1143200"
  },
  {
    "text": "structures",
    "start": "1143200",
    "end": "1145360"
  },
  {
    "text": "the t5 ot using these c structures for",
    "start": "1145360",
    "end": "1149679"
  },
  {
    "text": "its own purposes or if interesting it",
    "start": "1149679",
    "end": "1152320"
  },
  {
    "text": "saves them into cpp objects",
    "start": "1152320",
    "end": "1156240"
  },
  {
    "text": "our focus is here we looked for issues",
    "start": "1156720",
    "end": "1160000"
  },
  {
    "text": "in the transfer from c structures to cpp",
    "start": "1160000",
    "end": "1163280"
  },
  {
    "text": "objects",
    "start": "1163280",
    "end": "1165200"
  },
  {
    "text": "but finding issues in the cpp object",
    "start": "1165200",
    "end": "1167919"
  },
  {
    "text": "setters is not that easy because",
    "start": "1167919",
    "end": "1171200"
  },
  {
    "text": "any input for these functions is first",
    "start": "1171200",
    "end": "1173760"
  },
  {
    "text": "validated both by the tb5 stack and the",
    "start": "1173760",
    "end": "1177440"
  },
  {
    "text": "ot",
    "start": "1177440",
    "end": "1179840"
  },
  {
    "text": "so we had to find a c structure that is",
    "start": "1179919",
    "end": "1183280"
  },
  {
    "text": "flexible enough",
    "start": "1183280",
    "end": "1185039"
  },
  {
    "text": "to introduce unexpected input",
    "start": "1185039",
    "end": "1187520"
  },
  {
    "text": "to the cvp object",
    "start": "1187520",
    "end": "1190640"
  },
  {
    "start": "1190000",
    "end": "1227000"
  },
  {
    "text": "for that purpose",
    "start": "1190880",
    "end": "1192640"
  },
  {
    "text": "we have the foundations extension object",
    "start": "1192640",
    "end": "1196160"
  },
  {
    "text": "this is how the foundation see structure",
    "start": "1196160",
    "end": "1198640"
  },
  {
    "text": "of the extension object is looking this",
    "start": "1198640",
    "end": "1201200"
  },
  {
    "text": "is not how an extension object is passed",
    "start": "1201200",
    "end": "1203919"
  },
  {
    "text": "through communication but how it is",
    "start": "1203919",
    "end": "1205760"
  },
  {
    "text": "saved in memory",
    "start": "1205760",
    "end": "1208480"
  },
  {
    "text": "the extension object structure is made",
    "start": "1208799",
    "end": "1211200"
  },
  {
    "text": "of three main parts",
    "start": "1211200",
    "end": "1212880"
  },
  {
    "text": "the first part is the id of the",
    "start": "1212880",
    "end": "1214799"
  },
  {
    "text": "contained structure",
    "start": "1214799",
    "end": "1217760"
  },
  {
    "text": "after that we have the encoding of the",
    "start": "1217840",
    "end": "1219679"
  },
  {
    "text": "internal structure",
    "start": "1219679",
    "end": "1221120"
  },
  {
    "text": "and in the end we have a union that",
    "start": "1221120",
    "end": "1222960"
  },
  {
    "text": "representing the contained structure",
    "start": "1222960",
    "end": "1226960"
  },
  {
    "text": "if we zoom into the body of the",
    "start": "1226960",
    "end": "1228960"
  },
  {
    "start": "1227000",
    "end": "1289000"
  },
  {
    "text": "contained structure we can see it can",
    "start": "1228960",
    "end": "1231039"
  },
  {
    "text": "contain three types of",
    "start": "1231039",
    "end": "1233360"
  },
  {
    "text": "structures",
    "start": "1233360",
    "end": "1235200"
  },
  {
    "text": "first way is representing the structure",
    "start": "1235200",
    "end": "1237600"
  },
  {
    "text": "in a binary format this is used for",
    "start": "1237600",
    "end": "1240320"
  },
  {
    "text": "structures that are not supported by the",
    "start": "1240320",
    "end": "1242960"
  },
  {
    "text": "stack",
    "start": "1242960",
    "end": "1244880"
  },
  {
    "text": "another option",
    "start": "1244880",
    "end": "1246240"
  },
  {
    "text": "is saving it as an xml element",
    "start": "1246240",
    "end": "1249840"
  },
  {
    "text": "and because the ncc stack is not",
    "start": "1249840",
    "end": "1251760"
  },
  {
    "text": "supporting xml decoding it is basically",
    "start": "1251760",
    "end": "1254480"
  },
  {
    "text": "the same",
    "start": "1254480",
    "end": "1256880"
  },
  {
    "text": "the third one is an actual decoded",
    "start": "1257280",
    "end": "1260640"
  },
  {
    "text": "structure in",
    "start": "1260640",
    "end": "1262799"
  },
  {
    "text": "ncc structure that is containing the",
    "start": "1262799",
    "end": "1265200"
  },
  {
    "text": "internal",
    "start": "1265200",
    "end": "1266240"
  },
  {
    "text": "object",
    "start": "1266240",
    "end": "1268559"
  },
  {
    "text": "and we basically have here two options",
    "start": "1268559",
    "end": "1270400"
  },
  {
    "text": "for",
    "start": "1270400",
    "end": "1271120"
  },
  {
    "text": "encoded body",
    "start": "1271120",
    "end": "1274000"
  },
  {
    "text": "it's muscle we must understand that this",
    "start": "1275440",
    "end": "1277919"
  },
  {
    "text": "both",
    "start": "1277919",
    "end": "1278799"
  },
  {
    "text": "parts of the structure must be validated",
    "start": "1278799",
    "end": "1281360"
  },
  {
    "text": "before any access to the body union is",
    "start": "1281360",
    "end": "1283919"
  },
  {
    "text": "done otherwise we may access in 32",
    "start": "1283919",
    "end": "1286880"
  },
  {
    "text": "instead of a pointer",
    "start": "1286880",
    "end": "1290400"
  },
  {
    "start": "1289000",
    "end": "1341000"
  },
  {
    "text": "looking at the sdk object setters we",
    "start": "1290400",
    "end": "1292880"
  },
  {
    "text": "could find some setters that are",
    "start": "1292880",
    "end": "1294720"
  },
  {
    "text": "accepting extension objects",
    "start": "1294720",
    "end": "1296880"
  },
  {
    "text": "but",
    "start": "1296880",
    "end": "1298000"
  },
  {
    "text": "most of them were validating both the",
    "start": "1298000",
    "end": "1300000"
  },
  {
    "text": "type id and the encoding",
    "start": "1300000",
    "end": "1304120"
  },
  {
    "text": "after looking a bit deeper we found a",
    "start": "1304480",
    "end": "1306400"
  },
  {
    "text": "few that missed validation on the",
    "start": "1306400",
    "end": "1308480"
  },
  {
    "text": "encoding part",
    "start": "1308480",
    "end": "1310480"
  },
  {
    "text": "meaning that",
    "start": "1310480",
    "end": "1312320"
  },
  {
    "text": "if we have any option for making the",
    "start": "1312320",
    "end": "1314640"
  },
  {
    "text": "body not a decoded object but a byte",
    "start": "1314640",
    "end": "1317679"
  },
  {
    "text": "string for example",
    "start": "1317679",
    "end": "1319120"
  },
  {
    "text": "we may be able to crush the sdk",
    "start": "1319120",
    "end": "1323039"
  },
  {
    "text": "but we must remember that type ids that",
    "start": "1324080",
    "end": "1327200"
  },
  {
    "text": "are known by the tb5 stacks",
    "start": "1327200",
    "end": "1329600"
  },
  {
    "text": "are automatically decoded and all of the",
    "start": "1329600",
    "end": "1332080"
  },
  {
    "text": "types we found were supported by the tb5",
    "start": "1332080",
    "end": "1334960"
  },
  {
    "text": "stack",
    "start": "1334960",
    "end": "1337279"
  },
  {
    "text": "we have two options for bypassing it",
    "start": "1337440",
    "end": "1340640"
  },
  {
    "text": "one of them is pretty simple is just",
    "start": "1340640",
    "end": "1342880"
  },
  {
    "start": "1341000",
    "end": "1377000"
  },
  {
    "text": "using xml decoding for the internal",
    "start": "1342880",
    "end": "1345200"
  },
  {
    "text": "structure which is not supported by the",
    "start": "1345200",
    "end": "1347679"
  },
  {
    "text": "ncc stack and it will be saved as a",
    "start": "1347679",
    "end": "1350080"
  },
  {
    "text": "by-string",
    "start": "1350080",
    "end": "1352000"
  },
  {
    "text": "another option we have",
    "start": "1352000",
    "end": "1353679"
  },
  {
    "text": "is using the type id",
    "start": "1353679",
    "end": "1355840"
  },
  {
    "text": "the id of the internal structure can be",
    "start": "1355840",
    "end": "1358159"
  },
  {
    "text": "represented in different ways",
    "start": "1358159",
    "end": "1360400"
  },
  {
    "text": "and the ncc stack is supporting only",
    "start": "1360400",
    "end": "1362559"
  },
  {
    "text": "numeric version of it",
    "start": "1362559",
    "end": "1364720"
  },
  {
    "text": "so if we send and by string identifier",
    "start": "1364720",
    "end": "1367840"
  },
  {
    "text": "in a specific length it would be enough",
    "start": "1367840",
    "end": "1370080"
  },
  {
    "text": "to bypass the checks of the sdk",
    "start": "1370080",
    "end": "1372400"
  },
  {
    "text": "and provide us with an undecoded object",
    "start": "1372400",
    "end": "1377840"
  },
  {
    "start": "1377000",
    "end": "1423000"
  },
  {
    "text": "now that we have a c structure that is",
    "start": "1378080",
    "end": "1379919"
  },
  {
    "text": "received by the sdk",
    "start": "1379919",
    "end": "1381760"
  },
  {
    "text": "and",
    "start": "1381760",
    "end": "1382559"
  },
  {
    "text": "is valid on the type id field but",
    "start": "1382559",
    "end": "1385440"
  },
  {
    "text": "contains a byte string in its body all",
    "start": "1385440",
    "end": "1388320"
  },
  {
    "text": "we need to do is to find a way to get it",
    "start": "1388320",
    "end": "1390559"
  },
  {
    "text": "through the object setter function",
    "start": "1390559",
    "end": "1393679"
  },
  {
    "text": "unfortunately",
    "start": "1393679",
    "end": "1395440"
  },
  {
    "text": "this was not working for any of the",
    "start": "1395440",
    "end": "1397440"
  },
  {
    "text": "extension objects you used for so far",
    "start": "1397440",
    "end": "1400799"
  },
  {
    "text": "and all of them were used internally in",
    "start": "1400799",
    "end": "1403039"
  },
  {
    "text": "the tb5 ot without being set into an",
    "start": "1403039",
    "end": "1405280"
  },
  {
    "text": "object",
    "start": "1405280",
    "end": "1407360"
  },
  {
    "text": "well",
    "start": "1407360",
    "end": "1408320"
  },
  {
    "text": "this was kind of an opportunity for us",
    "start": "1408320",
    "end": "1411360"
  },
  {
    "text": "we wanted to check another area of the",
    "start": "1411360",
    "end": "1413760"
  },
  {
    "text": "opc ua",
    "start": "1413760",
    "end": "1415200"
  },
  {
    "text": "the pub sub extension",
    "start": "1415200",
    "end": "1417440"
  },
  {
    "text": "pub sub is a new extension",
    "start": "1417440",
    "end": "1420159"
  },
  {
    "text": "for the opc ua protocol",
    "start": "1420159",
    "end": "1422720"
  },
  {
    "text": "and",
    "start": "1422720",
    "end": "1423760"
  },
  {
    "start": "1423000",
    "end": "1471000"
  },
  {
    "text": "we decide we are going to find a message",
    "start": "1423760",
    "end": "1426320"
  },
  {
    "text": "that is part of pub sub that will be set",
    "start": "1426320",
    "end": "1428720"
  },
  {
    "text": "into a cpp object setup which allow will",
    "start": "1428720",
    "end": "1431600"
  },
  {
    "text": "allow us to crush",
    "start": "1431600",
    "end": "1433120"
  },
  {
    "text": "pub sub",
    "start": "1433120",
    "end": "1434240"
  },
  {
    "text": "applications",
    "start": "1434240",
    "end": "1436320"
  },
  {
    "text": "a word about pub sub",
    "start": "1436320",
    "end": "1438640"
  },
  {
    "text": "pub sub is a publish subscribe model for",
    "start": "1438640",
    "end": "1441120"
  },
  {
    "text": "the opc ua it is using udp packets and",
    "start": "1441120",
    "end": "1444080"
  },
  {
    "text": "it is slightly different",
    "start": "1444080",
    "end": "1446320"
  },
  {
    "text": "there are two main",
    "start": "1446320",
    "end": "1448400"
  },
  {
    "text": "usages",
    "start": "1448400",
    "end": "1449440"
  },
  {
    "text": "for pub sub one of them is",
    "start": "1449440",
    "end": "1452480"
  },
  {
    "text": "through a relay broker",
    "start": "1452480",
    "end": "1454480"
  },
  {
    "text": "that is publishing the messages to many",
    "start": "1454480",
    "end": "1457120"
  },
  {
    "text": "subscribers this is mainly used in the",
    "start": "1457120",
    "end": "1459360"
  },
  {
    "text": "cloud",
    "start": "1459360",
    "end": "1460720"
  },
  {
    "text": "and there are some",
    "start": "1460720",
    "end": "1462320"
  },
  {
    "text": "secure multicast options that is used",
    "start": "1462320",
    "end": "1464640"
  },
  {
    "text": "for field level communication for",
    "start": "1464640",
    "end": "1466240"
  },
  {
    "text": "example essential publishing information",
    "start": "1466240",
    "end": "1468240"
  },
  {
    "text": "to multiple subscribers",
    "start": "1468240",
    "end": "1471880"
  },
  {
    "text": "looking for an exploitable message we",
    "start": "1472240",
    "end": "1475360"
  },
  {
    "text": "found",
    "start": "1475360",
    "end": "1476240"
  },
  {
    "text": "one message that contained variant",
    "start": "1476240",
    "end": "1479520"
  },
  {
    "text": "and was set into an object setter",
    "start": "1479520",
    "end": "1482880"
  },
  {
    "text": "using the variant we can add any object",
    "start": "1482880",
    "end": "1485600"
  },
  {
    "text": "we want under this variant including our",
    "start": "1485600",
    "end": "1488000"
  },
  {
    "text": "malicious extension object",
    "start": "1488000",
    "end": "1491200"
  },
  {
    "start": "1491000",
    "end": "1545000"
  },
  {
    "text": "and if we try to demo the use of this",
    "start": "1491440",
    "end": "1493360"
  },
  {
    "text": "message",
    "start": "1493360",
    "end": "1494559"
  },
  {
    "text": "we can see here",
    "start": "1494559",
    "end": "1496960"
  },
  {
    "text": "that there is our publisher on the right",
    "start": "1496960",
    "end": "1500760"
  },
  {
    "text": "communicating with multiple subscribers",
    "start": "1500760",
    "end": "1503360"
  },
  {
    "text": "on the left through a multicast network",
    "start": "1503360",
    "end": "1507679"
  },
  {
    "text": "these subscribers are constantly keep",
    "start": "1507679",
    "end": "1510080"
  },
  {
    "text": "getting messages from this publisher",
    "start": "1510080",
    "end": "1512880"
  },
  {
    "text": "and on the right top we have our",
    "start": "1512880",
    "end": "1515279"
  },
  {
    "text": "attacker",
    "start": "1515279",
    "end": "1516960"
  },
  {
    "text": "which",
    "start": "1516960",
    "end": "1517919"
  },
  {
    "text": "is also connected to the multicast",
    "start": "1517919",
    "end": "1519600"
  },
  {
    "text": "network",
    "start": "1519600",
    "end": "1520880"
  },
  {
    "text": "and if he will send our malicious pocket",
    "start": "1520880",
    "end": "1523840"
  },
  {
    "text": "we will see the subscriber crashing one",
    "start": "1523840",
    "end": "1526159"
  },
  {
    "text": "after the other",
    "start": "1526159",
    "end": "1529480"
  },
  {
    "text": "we were able to find",
    "start": "1533200",
    "end": "1534799"
  },
  {
    "text": "seven object setters that were not",
    "start": "1534799",
    "end": "1536720"
  },
  {
    "text": "protected against this attack",
    "start": "1536720",
    "end": "1539279"
  },
  {
    "text": "and we assumed that this issue is not",
    "start": "1539279",
    "end": "1541679"
  },
  {
    "text": "only exist in softing",
    "start": "1541679",
    "end": "1544960"
  },
  {
    "start": "1545000",
    "end": "1568000"
  },
  {
    "text": "looking at the opc foundation code again",
    "start": "1545200",
    "end": "1547440"
  },
  {
    "text": "we found the same issue in the sample",
    "start": "1547440",
    "end": "1549679"
  },
  {
    "text": "server of the ncc stack",
    "start": "1549679",
    "end": "1552559"
  },
  {
    "text": "and we managed to crash it",
    "start": "1552559",
    "end": "1554480"
  },
  {
    "text": "with the same methods we presented",
    "start": "1554480",
    "end": "1558960"
  },
  {
    "text": "this is about time for us to continue to",
    "start": "1560960",
    "end": "1562720"
  },
  {
    "text": "the last part in our chain",
    "start": "1562720",
    "end": "1564720"
  },
  {
    "text": "the products",
    "start": "1564720",
    "end": "1567440"
  },
  {
    "text": "we know products",
    "start": "1567840",
    "end": "1569679"
  },
  {
    "text": "that are integrating ocua are facing",
    "start": "1569679",
    "end": "1572720"
  },
  {
    "text": "different risks",
    "start": "1572720",
    "end": "1574159"
  },
  {
    "text": "one of them are",
    "start": "1574159",
    "end": "1575840"
  },
  {
    "text": "configurations related",
    "start": "1575840",
    "end": "1577919"
  },
  {
    "text": "which means that",
    "start": "1577919",
    "end": "1579200"
  },
  {
    "text": "because of the configuration of opcua is",
    "start": "1579200",
    "end": "1581679"
  },
  {
    "text": "so complex there is high possibility",
    "start": "1581679",
    "end": "1584400"
  },
  {
    "text": "for different applications to miss some",
    "start": "1584400",
    "end": "1586720"
  },
  {
    "text": "important parts",
    "start": "1586720",
    "end": "1588080"
  },
  {
    "text": "and",
    "start": "1588080",
    "end": "1590320"
  },
  {
    "start": "1590000",
    "end": "1616000"
  },
  {
    "text": "end up with an unsecured client or",
    "start": "1590880",
    "end": "1593039"
  },
  {
    "text": "server",
    "start": "1593039",
    "end": "1595279"
  },
  {
    "text": "but since they have been done a lot of",
    "start": "1595279",
    "end": "1597200"
  },
  {
    "text": "work in this area and there are many",
    "start": "1597200",
    "end": "1599039"
  },
  {
    "text": "tools for",
    "start": "1599039",
    "end": "1600400"
  },
  {
    "text": "providing these tests",
    "start": "1600400",
    "end": "1602320"
  },
  {
    "text": "we decided to focus on the integration",
    "start": "1602320",
    "end": "1604559"
  },
  {
    "text": "of the",
    "start": "1604559",
    "end": "1606400"
  },
  {
    "text": "products with the opcwa sdk or",
    "start": "1606400",
    "end": "1608559"
  },
  {
    "text": "communication stack",
    "start": "1608559",
    "end": "1611440"
  },
  {
    "text": "here we have an image of unified",
    "start": "1611600",
    "end": "1614480"
  },
  {
    "text": "automation sdk",
    "start": "1614480",
    "end": "1616320"
  },
  {
    "start": "1616000",
    "end": "1656000"
  },
  {
    "text": "and we can see in the bottom our system",
    "start": "1616320",
    "end": "1618880"
  },
  {
    "text": "vendor",
    "start": "1618880",
    "end": "1619919"
  },
  {
    "text": "system",
    "start": "1619919",
    "end": "1621520"
  },
  {
    "text": "we can see in the bottom the vendor",
    "start": "1621520",
    "end": "1623039"
  },
  {
    "text": "system that is integrated with the sdk",
    "start": "1623039",
    "end": "1626159"
  },
  {
    "text": "through multiple interfaces",
    "start": "1626159",
    "end": "1629200"
  },
  {
    "text": "unified automations are defining",
    "start": "1629200",
    "end": "1631760"
  },
  {
    "text": "multiple required interfaces and",
    "start": "1631760",
    "end": "1633840"
  },
  {
    "text": "optional interfaces for the integration",
    "start": "1633840",
    "end": "1636320"
  },
  {
    "text": "process",
    "start": "1636320",
    "end": "1637840"
  },
  {
    "text": "and we checked i o manager interface and",
    "start": "1637840",
    "end": "1641279"
  },
  {
    "text": "could see that some products are",
    "start": "1641279",
    "end": "1643360"
  },
  {
    "text": "actually implementing it",
    "start": "1643360",
    "end": "1645760"
  },
  {
    "text": "but this time",
    "start": "1645760",
    "end": "1647360"
  },
  {
    "text": "we understood that this issue must be",
    "start": "1647360",
    "end": "1650080"
  },
  {
    "text": "tested in a more generic way",
    "start": "1650080",
    "end": "1652720"
  },
  {
    "text": "so we used our own made",
    "start": "1652720",
    "end": "1655200"
  },
  {
    "text": "father",
    "start": "1655200",
    "end": "1656799"
  },
  {
    "start": "1656000",
    "end": "1699000"
  },
  {
    "text": "our father is a network-based father",
    "start": "1656799",
    "end": "1659679"
  },
  {
    "text": "that is using",
    "start": "1659679",
    "end": "1661039"
  },
  {
    "text": "structured mutations on the internal",
    "start": "1661039",
    "end": "1663440"
  },
  {
    "text": "parameters and on the packets or message",
    "start": "1663440",
    "end": "1666720"
  },
  {
    "text": "flow",
    "start": "1666720",
    "end": "1669679"
  },
  {
    "text": "the io manager",
    "start": "1669679",
    "end": "1671200"
  },
  {
    "text": "we implemented",
    "start": "1671200",
    "end": "1673279"
  },
  {
    "text": "was read write and monitor items packets",
    "start": "1673279",
    "end": "1676880"
  },
  {
    "text": "and we focused on fighting the objects",
    "start": "1676880",
    "end": "1679600"
  },
  {
    "text": "that are being passed to the underlying",
    "start": "1679600",
    "end": "1682399"
  },
  {
    "text": "device",
    "start": "1682399",
    "end": "1684480"
  },
  {
    "text": "we yet haven't found any significant",
    "start": "1684480",
    "end": "1686720"
  },
  {
    "text": "issues but we are still working on",
    "start": "1686720",
    "end": "1689200"
  },
  {
    "text": "expanding the mutations to be more opi",
    "start": "1689200",
    "end": "1691919"
  },
  {
    "text": "specific and covering more products",
    "start": "1691919",
    "end": "1696919"
  },
  {
    "text": "to sum up",
    "start": "1697840",
    "end": "1699919"
  },
  {
    "start": "1699000",
    "end": "1764000"
  },
  {
    "text": "opc ua is a very powerful protocol",
    "start": "1699919",
    "end": "1703200"
  },
  {
    "text": "but if compromised",
    "start": "1703200",
    "end": "1705039"
  },
  {
    "text": "it can be used by attackers targeting",
    "start": "1705039",
    "end": "1707919"
  },
  {
    "text": "cyber physical systems",
    "start": "1707919",
    "end": "1710960"
  },
  {
    "text": "and",
    "start": "1710960",
    "end": "1712080"
  },
  {
    "text": "if we look at the supply chain we",
    "start": "1712080",
    "end": "1714559"
  },
  {
    "text": "discovered",
    "start": "1714559",
    "end": "1715679"
  },
  {
    "text": "any impact",
    "start": "1715679",
    "end": "1716960"
  },
  {
    "text": "to the first part in our chain may",
    "start": "1716960",
    "end": "1718880"
  },
  {
    "text": "impact many products",
    "start": "1718880",
    "end": "1721600"
  },
  {
    "text": "we used specific parts in the op-ua for",
    "start": "1721600",
    "end": "1724000"
  },
  {
    "text": "demonstrating exploitations of the",
    "start": "1724000",
    "end": "1726080"
  },
  {
    "text": "supply chain",
    "start": "1726080",
    "end": "1727279"
  },
  {
    "text": "for example complex objects dynamic",
    "start": "1727279",
    "end": "1729840"
  },
  {
    "text": "encoding",
    "start": "1729840",
    "end": "1730960"
  },
  {
    "text": "and unsecured messages",
    "start": "1730960",
    "end": "1734159"
  },
  {
    "text": "but it's still important to remember",
    "start": "1734159",
    "end": "1736000"
  },
  {
    "text": "that opc-ua is one of the most secure",
    "start": "1736000",
    "end": "1738559"
  },
  {
    "text": "industrial protocols right now",
    "start": "1738559",
    "end": "1740640"
  },
  {
    "text": "and we only recommend users",
    "start": "1740640",
    "end": "1743360"
  },
  {
    "text": "to use additional security measures and",
    "start": "1743360",
    "end": "1745360"
  },
  {
    "text": "of course make sure the configuration is",
    "start": "1745360",
    "end": "1747200"
  },
  {
    "text": "proper",
    "start": "1747200",
    "end": "1749440"
  },
  {
    "text": "i want to thank matandu brushing for the",
    "start": "1749440",
    "end": "1751200"
  },
  {
    "text": "mentoring in this project and of course",
    "start": "1751200",
    "end": "1753600"
  },
  {
    "text": "roman volkin and alonzini for the",
    "start": "1753600",
    "end": "1755840"
  },
  {
    "text": "fuzzing part",
    "start": "1755840",
    "end": "1757440"
  },
  {
    "text": "i am iran jacob and feel free to contact",
    "start": "1757440",
    "end": "1759679"
  },
  {
    "text": "me if you have any comments",
    "start": "1759679",
    "end": "1761600"
  },
  {
    "text": "or questions",
    "start": "1761600",
    "end": "1763120"
  },
  {
    "text": "thank you",
    "start": "1763120",
    "end": "1765919"
  }
]