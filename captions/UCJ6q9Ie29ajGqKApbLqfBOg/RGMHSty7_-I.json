[
  {
    "start": "0",
    "end": "44000"
  },
  {
    "text": "[Music] [Laughter]",
    "start": "1610",
    "end": "10260"
  },
  {
    "text": "we are going to be listening to Paul and Mark providing us some details on digging deep into the flash sandboxes so",
    "start": "11719",
    "end": "18560"
  },
  {
    "text": "please go ahead and give them a round of applause and make them feel [Applause]",
    "start": "18560",
    "end": "24910"
  },
  {
    "text": "welcome good afternoon thank you all for coming I'm Paul and this is Mark we're",
    "start": "26960",
    "end": "33680"
  },
  {
    "text": "both from IBM's xforce Advanced research team and today we we'll be talking about",
    "start": "33680",
    "end": "39600"
  },
  {
    "text": "digging deep into the flash sandboxes in black hat last year we gave",
    "start": "39600",
    "end": "46399"
  },
  {
    "start": "44000",
    "end": "112000"
  },
  {
    "text": "a talk about Adobe SX sandbox and in that talk we we discuss the sandbox",
    "start": "46399",
    "end": "51719"
  },
  {
    "text": "internals its limitations and weaknesses and possible avenues for sandbox escape",
    "start": "51719",
    "end": "58359"
  },
  {
    "text": "this year we focused our site on flash sandboxes and this time we had three",
    "start": "58359",
    "end": "64799"
  },
  {
    "text": "different sandbox implementations to play with when we started this research we",
    "start": "64799",
    "end": "69880"
  },
  {
    "text": "asked ourselves as we did last year the some questions and those questions are",
    "start": "69880",
    "end": "75560"
  },
  {
    "text": "what can an attacker or a malicious code still do even with the sandbox",
    "start": "75560",
    "end": "81000"
  },
  {
    "text": "restrictions imposed another question is what is it still profitable for an",
    "start": "81000",
    "end": "86240"
  },
  {
    "text": "attacker if uh he successfully exploited a system but could not escape the",
    "start": "86240",
    "end": "92399"
  },
  {
    "text": "sandbox and we were also interested to know which of the sandbox implementations are is the strongest and",
    "start": "92399",
    "end": "98920"
  },
  {
    "text": "which one is not as strong and although not the main focus of of the research we",
    "start": "98920",
    "end": "105119"
  },
  {
    "text": "did we were also curious if we could find uh some sandbox Escape",
    "start": "105119",
    "end": "111759"
  },
  {
    "text": "vulnerabilities so what are our targets these are our targets The Flash",
    "start": "111759",
    "end": "117320"
  },
  {
    "start": "112000",
    "end": "234000"
  },
  {
    "text": "Player protected mode for Firefox Flash player protected mode for Chrome and Flash Player protected mode for Chrome",
    "start": "117320",
    "end": "123680"
  },
  {
    "text": "pepper we will be referring to them as farx flash Chrome Flash and pepper flash",
    "start": "123680",
    "end": "130479"
  },
  {
    "text": "throughout this stock and these are all by the way Windows versions of the",
    "start": "130479",
    "end": "136640"
  },
  {
    "text": "software FL uh Firefox flash was first released as beta by by Adobe last",
    "start": "136640",
    "end": "142680"
  },
  {
    "text": "February of this year and then released officially last",
    "start": "142680",
    "end": "148280"
  },
  {
    "text": "month it is developed in collaboration with Mozilla and Adobe and the sandbox",
    "start": "148280",
    "end": "153760"
  },
  {
    "text": "code is based on the the sbox code in Adobe Reader X so there will be a lot of",
    "start": "153760",
    "end": "160640"
  },
  {
    "text": "similarities between them Chrome flash on the other hand is is the is the",
    "start": "160640",
    "end": "166280"
  },
  {
    "text": "current default Flash Player in Chrome and is a result of collaboration between Google and Adobe is meant to be a",
    "start": "166280",
    "end": "175120"
  },
  {
    "text": "temporary solution uh just until the next Chrome Next Generation flash pepper which is",
    "start": "175120",
    "end": "183239"
  },
  {
    "text": "Flash Player which is pepper flash is officially stable uh we we'll be talking about the",
    "start": "183239",
    "end": "189760"
  },
  {
    "text": "version bundled with chrome 20.01 3247 in the stock pepper flash is",
    "start": "189760",
    "end": "197720"
  },
  {
    "text": "already I don't I'm not really sure we're not really sure uh how many versions back but it's already included",
    "start": "197720",
    "end": "205040"
  },
  {
    "text": "in in the current version of Chrome but it is disabled and you can enable it in",
    "start": "205040",
    "end": "210080"
  },
  {
    "text": "the settings menu of chrome but a few weeks back Google released Chrome 21",
    "start": "210080",
    "end": "216959"
  },
  {
    "text": "Beta And in that in that beta software pepper flash is the default Flash Player",
    "start": "216959",
    "end": "224319"
  },
  {
    "text": "so I think it's safe to assume that in the next in the Chrome 21 the default",
    "start": "224319",
    "end": "229840"
  },
  {
    "text": "Flash Player will be pepper flash so before we go deeper into the",
    "start": "229840",
    "end": "235879"
  },
  {
    "start": "234000",
    "end": "417000"
  },
  {
    "text": "sandbox implementation we will first discuss the sandbox architecture and the various components involved in the",
    "start": "235879",
    "end": "244040"
  },
  {
    "text": "sandboxes for Firefox flash we have the Firefox browser process which is the",
    "start": "244040",
    "end": "251280"
  },
  {
    "text": "process that starts when you first open Firefox and the plug-in container and the The Flash broker",
    "start": "251280",
    "end": "258840"
  },
  {
    "text": "process which is an instance uh flash player plugin and the Flash the sandbox flash",
    "start": "258840",
    "end": "265199"
  },
  {
    "text": "plug-in process which is also an instance of flash player plugin but but",
    "start": "265199",
    "end": "270720"
  },
  {
    "text": "uh sound uh you can see here some arrows connecting the various components and",
    "start": "270720",
    "end": "276280"
  },
  {
    "text": "this indicates that there at some point there will be some communication between them and the labels are the kind of",
    "start": "276280",
    "end": "281840"
  },
  {
    "text": "communication that that will occur this communication will be will be discussed",
    "start": "281840",
    "end": "287360"
  },
  {
    "text": "in detail later by by Mark for uh one difference between Firefox",
    "start": "287360",
    "end": "294600"
  },
  {
    "text": "Flash and the other FL the two other flash implementations that you can disable it via the mm CFG configuration",
    "start": "294600",
    "end": "302440"
  },
  {
    "text": "file which is Firefox Flash's uh privacy and security settings configuration file",
    "start": "302440",
    "end": "308680"
  },
  {
    "text": "you can add this line protected mode equals z in that in that ms. CFG",
    "start": "308680",
    "end": "314160"
  },
  {
    "text": "configuration file to disable it the mm. CFG configuration file can be found in",
    "start": "314160",
    "end": "321199"
  },
  {
    "text": "the macrom slash flash folder in the system",
    "start": "321199",
    "end": "328639"
  },
  {
    "text": "directory for for Chrome Flash and pepper flash since they're both running",
    "start": "328639",
    "end": "335080"
  },
  {
    "text": "in uh in Chrome obviously there will be components that are common between the",
    "start": "335080",
    "end": "340120"
  },
  {
    "text": "two of them such as the Chrome browser process which is the process that the",
    "start": "340120",
    "end": "345280"
  },
  {
    "text": "main browser process that is open when you first run Chrome and the Chrome and",
    "start": "345280",
    "end": "350720"
  },
  {
    "text": "the sandbox Chrome renderer process which is the the process for the page that where you where you open your the",
    "start": "350720",
    "end": "357520"
  },
  {
    "text": "The Flash content in Chrome Flash The Flash broker process is open",
    "start": "357520",
    "end": "366240"
  },
  {
    "text": "by running the the plug-in D flash plugin DL GCS swf 32s 32. dl's broker",
    "start": "366240",
    "end": "374400"
  },
  {
    "text": "main entry point using rundll32.exe the flush plugin process is an instance of",
    "start": "374400",
    "end": "382080"
  },
  {
    "text": "chrome.exe that loads the flash plugin dll GCS swf 32.",
    "start": "382080",
    "end": "389720"
  },
  {
    "text": "for pepper flash there is no separate broker process since the Chrome browser process",
    "start": "389720",
    "end": "396479"
  },
  {
    "text": "will act as the broker process for this as to why that will be explained",
    "start": "396479",
    "end": "401599"
  },
  {
    "text": "one Mark later and the pepper flash plug-in process is an instance of chrome",
    "start": "401599",
    "end": "407199"
  },
  {
    "text": "that exe that loads the pp API P PP API",
    "start": "407199",
    "end": "412520"
  },
  {
    "text": "plug-in P flash player. dll so now let's go deeper into the the",
    "start": "412520",
    "end": "420400"
  },
  {
    "start": "417000",
    "end": "631000"
  },
  {
    "text": "The Flash sandboxes by discussing sandbox mechanism let's start with the",
    "start": "420400",
    "end": "425680"
  },
  {
    "text": "what what happens when you first open a page with a with flash",
    "start": "425680",
    "end": "431440"
  },
  {
    "text": "content the the for all three sandboxes since they're all based in Chrome sandboxing code they they generally have",
    "start": "432919",
    "end": "440160"
  },
  {
    "text": "the same startup sequence with with some details with some difference in some",
    "start": "440160",
    "end": "445840"
  },
  {
    "text": "details that we will be discussing later in the stock but in general they all follow followed this this sequence first",
    "start": "445840",
    "end": "452599"
  },
  {
    "text": "the broker process will be started then the broker process sets up the sandbox restrictions it sets up the Integrity",
    "start": "452599",
    "end": "459240"
  },
  {
    "text": "levels uh the job levels and the the token levels then it will set up the",
    "start": "459240",
    "end": "464639"
  },
  {
    "text": "policies after this the sand sandbox process will be spawn in a suspended",
    "start": "464639",
    "end": "469759"
  },
  {
    "text": "State and in this state the broker process will set up interceptions inside the sandbox process interceptions will",
    "start": "469759",
    "end": "476879"
  },
  {
    "text": "be discussed later on Mark and once the interceptions are in place the sandbox",
    "start": "476879",
    "end": "482440"
  },
  {
    "text": "process will then resume execution and that starts the parsing and rendering of",
    "start": "482440",
    "end": "488520"
  },
  {
    "text": "The Flash content here's what here's how the",
    "start": "488520",
    "end": "493680"
  },
  {
    "text": "browser process tree will look like after a Sandbox is started uh you can see here uh the",
    "start": "493680",
    "end": "501360"
  },
  {
    "text": "components that I I've talk about earlier the for Firefox flash you can",
    "start": "501360",
    "end": "507199"
  },
  {
    "text": "see the Firefox browser process the plug-in container and the Flash Player",
    "start": "507199",
    "end": "513200"
  },
  {
    "text": "plugin that exe that spawned The Flash Player another instance of Flash Player",
    "start": "513200",
    "end": "518680"
  },
  {
    "text": "plug-in. exe you can you can tell that the the",
    "start": "518680",
    "end": "524000"
  },
  {
    "text": "last line is the sandbox flash play process since the Integrity level this",
    "start": "524000",
    "end": "531080"
  },
  {
    "text": "is the last row in the this is actually process explorers output and the last",
    "start": "531080",
    "end": "536440"
  },
  {
    "text": "row is the integral level and you can see here that it has an Integrity level of low and it spawn by uh something that",
    "start": "536440",
    "end": "544000"
  },
  {
    "text": "is a process that is has that has an integr level of medium and this is so",
    "start": "544000",
    "end": "549959"
  },
  {
    "text": "this is the broker process for Chrome flash you can see here that the Chrome browser",
    "start": "549959",
    "end": "559120"
  },
  {
    "text": "process spawn run d32 that exe that has a medium Integrity level",
    "start": "559120",
    "end": "568079"
  },
  {
    "text": "and also Chrome that XC with a low Integrity level the run3 XC is the",
    "start": "568079",
    "end": "575120"
  },
  {
    "text": "broker process and chrome this this chrome process is actually the the",
    "start": "575120",
    "end": "581839"
  },
  {
    "text": "sandbox Flash player plug-in process if you click in process explor and look at the details you can see that it loads",
    "start": "581839",
    "end": "588040"
  },
  {
    "text": "the GC swf 32.dll for for and the two other Chrome process",
    "start": "588040",
    "end": "597240"
  },
  {
    "text": "are just the render processes that uh happens to be open when I took the",
    "start": "597240",
    "end": "603760"
  },
  {
    "text": "screenshot for pepper flash you can't really tell from this screenshot which one is the the sandbox process but uh",
    "start": "603760",
    "end": "613480"
  },
  {
    "text": "rest assured one of them is the two other I think this is this one this the last the two other process",
    "start": "613480",
    "end": "622079"
  },
  {
    "text": "are just the render processes that happens to be open when I when I took a screenshot and when I open the flash content and took the screenshot",
    "start": "622079",
    "end": "631000"
  },
  {
    "start": "631000",
    "end": "779000"
  },
  {
    "text": "we'll now talk about sandbox restrictions these are the mechanisms used used to uh restrict the the",
    "start": "632640",
    "end": "640279"
  },
  {
    "text": "capabilities of the sandbox uh flash process it it uses four Windows mechanism for the",
    "start": "640279",
    "end": "647120"
  },
  {
    "text": "restrictions and they are the restricted tokens Integrity levels and job objects and Alternate window and alteric",
    "start": "647120",
    "end": "654639"
  },
  {
    "text": "desktop so for the restricted tokens as you can see per flash has has no no",
    "start": "654639",
    "end": "661000"
  },
  {
    "text": "enabled Privileges and if you look at the combination of uh deny only seeds and rest restricting only seeds pepper",
    "start": "661000",
    "end": "667760"
  },
  {
    "text": "flash is the most restrictive and it it is very difficult to find a resource uh that this restricted token can access",
    "start": "667760",
    "end": "676240"
  },
  {
    "text": "for Chrome Flash and and uh Firefox Flash the restricted restricted token",
    "start": "676240",
    "end": "682519"
  },
  {
    "text": "can still access resources accessible to the everyone and users group",
    "start": "682519",
    "end": "689720"
  },
  {
    "text": "in addition in Chrome Flash the restricted token can still access re",
    "start": "689720",
    "end": "694880"
  },
  {
    "text": "resources accessible by the user Sid this means that the restricted token",
    "start": "694880",
    "end": "702040"
  },
  {
    "text": "can still access uh uh private users files located in the in the users documents",
    "start": "702040",
    "end": "709880"
  },
  {
    "text": "folder for the integr Integrity level peer flash runs as an untrusted while",
    "start": "709880",
    "end": "716240"
  },
  {
    "text": "chrome chrome and Firefox flash runs as slow in secrity this prevents right access to",
    "start": "716240",
    "end": "722440"
  },
  {
    "text": "most res to most to most securable resources because uh most of the secur",
    "start": "722440",
    "end": "728600"
  },
  {
    "text": "securable resources in the windows in the windows system is is a have a medium",
    "start": "728600",
    "end": "733760"
  },
  {
    "text": "or a higher Integrity level for job restrictions pepper flash has the most uh has the most job",
    "start": "733760",
    "end": "740519"
  },
  {
    "text": "restrictions Chrome flash has the least an important job restrictions only",
    "start": "740519",
    "end": "745959"
  },
  {
    "text": "found on pepper flash is access to the clipboard and glob atoms this is this is important because the clipboard and",
    "start": "745959",
    "end": "753560"
  },
  {
    "text": "Global atoms are are are are potential vectors for sandbox escape and",
    "start": "753560",
    "end": "759360"
  },
  {
    "text": "information disclosure finally prefer flash is the only sandbox flash that uses a alternate",
    "start": "759360",
    "end": "767199"
  },
  {
    "text": "window station and desktop firef Firefox Flash compensates",
    "start": "767199",
    "end": "772240"
  },
  {
    "text": "the lack of alternate desktop by the job restriction and running running under low integrity",
    "start": "772240",
    "end": "779720"
  },
  {
    "text": "the next thing we will discuss is the interception manager so what what does the interception manager do what it does",
    "start": "780160",
    "end": "787399"
  },
  {
    "text": "is that it it it it transparently Forward API calls from the sandbox process to the broker or the or the",
    "start": "787399",
    "end": "793160"
  },
  {
    "text": "browser process it is it is it is needed because there are cases where the sandbox",
    "start": "793160",
    "end": "800160"
  },
  {
    "text": "process need access to some resources for compatibility reasons or",
    "start": "800160",
    "end": "805240"
  },
  {
    "text": "for the proper functioning of the sandbox interceptions are done via API",
    "start": "805240",
    "end": "811199"
  },
  {
    "text": "hooking so these are are some examples of uh API hooking uh they have a API",
    "start": "811199",
    "end": "817800"
  },
  {
    "text": "hooking for ntdll and there's a ex there is an example for API hooking which",
    "start": "817800",
    "end": "823639"
  },
  {
    "text": "which injects a junk code in the entry point of the API and there's an example that there's a type that patches the",
    "start": "823639",
    "end": "830920"
  },
  {
    "text": "export adjust table of the dll to visualize apis are interest to",
    "start": "830920",
    "end": "838600"
  },
  {
    "text": "visualize in Chrome flash apis are intercepted in the flash plug-in process and they are forwarded to the Chrome",
    "start": "838600",
    "end": "844880"
  },
  {
    "text": "browser process where they are evaluated by the policy engine in peper flash it is the same the",
    "start": "844880",
    "end": "852480"
  },
  {
    "text": "pep apis are intercepted in the in the flash plug-in process and are forwarded",
    "start": "852480",
    "end": "858000"
  },
  {
    "text": "to the Chrome browser process and then evaluated by the by the policy engine in Firefox flash is a it's a",
    "start": "858000",
    "end": "865600"
  },
  {
    "text": "different picture the flash plugin process apis are intercepted in the flash plugin process and sent to the",
    "start": "865600",
    "end": "871880"
  },
  {
    "text": "flash broker process where they are evaluated by the policy",
    "start": "871880",
    "end": "877680"
  },
  {
    "text": "engine now we will talk about the interprise Comm Communication in our research we had",
    "start": "878519",
    "end": "884680"
  },
  {
    "start": "879000",
    "end": "1043000"
  },
  {
    "text": "found three IPC implementations being used sandbox IPC chromium IPC and simple",
    "start": "884680",
    "end": "891040"
  },
  {
    "text": "IPC sandbox IPC is originally from the chromium project it is used by all flash",
    "start": "891040",
    "end": "896440"
  },
  {
    "text": "sandbox implementation originally it was was used for forwarding a API calls made",
    "start": "896440",
    "end": "902199"
  },
  {
    "text": "by the made made by by the sandbox process to a higher privilege process but in fire fox it is also additionally",
    "start": "902199",
    "end": "908839"
  },
  {
    "text": "used for invoking additional Services exposed by The firfox Flash broker to visualize there's a Sandbox",
    "start": "908839",
    "end": "916880"
  },
  {
    "text": "IPC connection between the Chrome browser process and the Flash Plugin process and this is used for forwarding",
    "start": "916880",
    "end": "923399"
  },
  {
    "text": "API calls in peer flash it is the same",
    "start": "923399",
    "end": "928440"
  },
  {
    "text": "there's an sandbox IPC connection between the Chrome browser process and the Flash plug-in process and it is also",
    "start": "928440",
    "end": "934560"
  },
  {
    "text": "used for forwarding API calls in Firefox flash there's an",
    "start": "934560",
    "end": "940000"
  },
  {
    "text": "sandbox IPC connection between the flash broker process and the Flash plug-in process it is it is it is both used for",
    "start": "940000",
    "end": "947759"
  },
  {
    "text": "forwarding API calls and for invoking additional Services chromium this is the second IPC",
    "start": "947759",
    "end": "956040"
  },
  {
    "text": "implementation chro chromium IPC is or from the chromium project and also used",
    "start": "956040",
    "end": "961199"
  },
  {
    "text": "by old flash sandbox implementations in an endpoint of a chromium IPC chromium IPC connection",
    "start": "961199",
    "end": "968639"
  },
  {
    "text": "there are listener classes which handles the dispatching of the IPC",
    "start": "968639",
    "end": "974680"
  },
  {
    "text": "message to visualize the Chrome browser process the renderer process and the",
    "start": "976040",
    "end": "981360"
  },
  {
    "text": "Flash plug-in process are all interconnected via chromium IPC Connection in peer flash it is the same",
    "start": "981360",
    "end": "989160"
  },
  {
    "text": "the the Chrome browser process the renderer process and the Flash plug-in process are all interconnected via",
    "start": "989160",
    "end": "995079"
  },
  {
    "text": "chromium IPC Connection in Firefox Flash the plug-in container communicates with the Firefox",
    "start": "995079",
    "end": "1002240"
  },
  {
    "text": "browser process the flash broker process and the Flash plug-in process via chromium IPC",
    "start": "1002240",
    "end": "1008839"
  },
  {
    "text": "connection the last the last IPC implementation we'll discuss is the simple IPC simple IPC is also developed",
    "start": "1008839",
    "end": "1016560"
  },
  {
    "text": "by Google is developed by Google and how at the the link on the screen and it is",
    "start": "1016560",
    "end": "1021800"
  },
  {
    "text": "all only used in Chrome Flash and used for invoking services exposed by the chrome chrome flash",
    "start": "1021800",
    "end": "1028280"
  },
  {
    "text": "broker to visualize there's a simple IPC connection between the flash broker",
    "start": "1028280",
    "end": "1034438"
  },
  {
    "text": "process and the Flash plug-in process and it it is used for invoking services exposed by The Flash broker",
    "start": "1034439",
    "end": "1042319"
  },
  {
    "text": "process after discussing about the the Enterprise communication we'll now",
    "start": "1042559",
    "end": "1047918"
  },
  {
    "start": "1043000",
    "end": "1514000"
  },
  {
    "text": "discuss the services exposed by by by the different flash sandbox process these services are invoked via",
    "start": "1047919",
    "end": "1055000"
  },
  {
    "text": "the IPC mechanisms I previously discussed a detailed list of services are in the companion white paper in your",
    "start": "1055000",
    "end": "1061679"
  },
  {
    "text": "in your blacket CDs so we will discuss five sets of",
    "start": "1061679",
    "end": "1067320"
  },
  {
    "text": "services the first set of services that we'll discuss is the Chrome sandbox Services these are the the services",
    "start": "1067320",
    "end": "1074640"
  },
  {
    "text": "hosted in the Chrome browser process and which handles the forwarded apis",
    "start": "1074640",
    "end": "1079919"
  },
  {
    "text": "it is invoked by a Sandbox IPC and service handers in the Chrome browser process are actually methods of",
    "start": "1079919",
    "end": "1086440"
  },
  {
    "text": "dispatcher classes and each dis dispatcher class handles a subset of apis for example the file system",
    "start": "1086440",
    "end": "1093120"
  },
  {
    "text": "dispatcher handles file system related apis while the registry dispatcher",
    "start": "1093120",
    "end": "1098280"
  },
  {
    "text": "handles uh registry related apis the visualize so the the Chrome",
    "start": "1098280",
    "end": "1104679"
  },
  {
    "text": "sandbox services are hosted by the Chrome browser process and are called and are callable by the flash plugin",
    "start": "1104679",
    "end": "1110760"
  },
  {
    "text": "process and it handles forwarded apis same with the pepper Flash the",
    "start": "1110760",
    "end": "1116520"
  },
  {
    "text": "Chrome sunbox services are callable from the fles plug-in process and handles",
    "start": "1116520",
    "end": "1121600"
  },
  {
    "text": "forwarded apis so the second set of services we'll discuss is the services exposed exposed",
    "start": "1121600",
    "end": "1129440"
  },
  {
    "text": "by the Chrome browser process and the Chrome renderer process to autopress NP API and PP API plugins these are invoked",
    "start": "1129440",
    "end": "1137520"
  },
  {
    "text": "via chromium IPC in the in the chroming Source you you can you will you will notice that the",
    "start": "1137520",
    "end": "1144799"
  },
  {
    "text": "that invoking the services involves instantiating message classes in this case this is the instantiation of the pp",
    "start": "1144799",
    "end": "1152559"
  },
  {
    "text": "API message low plug-in message message class and the resulting class instance",
    "start": "1152559",
    "end": "1157840"
  },
  {
    "text": "is passed to a send method so these are the the the services",
    "start": "1157840",
    "end": "1164919"
  },
  {
    "text": "exposed by the Chrome browser to NP npapi plugins such such as Chrome flash",
    "start": "1164919",
    "end": "1170240"
  },
  {
    "text": "so the the services exposed by the Chrome browser are mostly for just sending plug-in status or notification",
    "start": "1170240",
    "end": "1176720"
  },
  {
    "text": "to the browser process while thees while the services exposed by the Chrome renderer does the have lifting as it as",
    "start": "1176720",
    "end": "1184200"
  },
  {
    "text": "it is the as it exposes the support services for NP API calls to visualize the the Chrome",
    "start": "1184200",
    "end": "1192720"
  },
  {
    "text": "browser process exposes Services which are called by The Flash plug-in process for sending not status updates and",
    "start": "1192720",
    "end": "1199559"
  },
  {
    "text": "notification to the Chrome browser process while NPA while the Chrome render process exposes support services",
    "start": "1199559",
    "end": "1206440"
  },
  {
    "text": "for NP NP API calls via this CH via this chromium IPC",
    "start": "1206440",
    "end": "1211799"
  },
  {
    "text": "channel for privilege NP API calls the Chrome renderer uses another set of",
    "start": "1211799",
    "end": "1217280"
  },
  {
    "text": "services exposed by the Chrome browser via this chromium IPC",
    "start": "1217280",
    "end": "1223080"
  },
  {
    "text": "connection and for PPA PPA PP API plugins here is a the Chrome browser",
    "start": "1223559",
    "end": "1229679"
  },
  {
    "text": "process exposes services for the Chrome render to send status or notification",
    "start": "1229679",
    "end": "1234960"
  },
  {
    "text": "message to the browser process differently the the Chrome renderer does the heav lifting as it per",
    "start": "1234960",
    "end": "1242799"
  },
  {
    "text": "as it exposes the PPI PP API Services since there there's a lot of a",
    "start": "1242799",
    "end": "1248760"
  },
  {
    "text": "lot of pp PP API functionality the each functionality is divided into C",
    "start": "1248760",
    "end": "1254360"
  },
  {
    "text": "interface proxies these are examples of inter interface proxies so there's a interface",
    "start": "1254360",
    "end": "1261280"
  },
  {
    "text": "proxy for for dialog services and there are inter interface proxies for clipboard services and their proxy",
    "start": "1261280",
    "end": "1269640"
  },
  {
    "text": "interface for video capture services so so the third set of services",
    "start": "1269640",
    "end": "1276200"
  },
  {
    "text": "that we discuss is the services exposed Al so this is the the the",
    "start": "1276200",
    "end": "1283240"
  },
  {
    "text": "visualization visualization of this so as you can see the Chrome browser process osed services for for the flash",
    "start": "1283240",
    "end": "1290919"
  },
  {
    "text": "plug-in to send to send a status or or notification",
    "start": "1290919",
    "end": "1296039"
  },
  {
    "text": "updates to the Chrome browser process while this channel is being used for PP API",
    "start": "1296039",
    "end": "1301520"
  },
  {
    "text": "calls so for privilege PP API calls the Chrome renderer process user uses",
    "start": "1301520",
    "end": "1307440"
  },
  {
    "text": "another set of services exposed by the Chrome browser",
    "start": "1307440",
    "end": "1312600"
  },
  {
    "text": "process so the third set of services we'll discuss is the services exposed by the Chrome flash broker",
    "start": "1313240",
    "end": "1319840"
  },
  {
    "text": "process these are exposed these are callable via simple IPC and are callable by to the sandbox flash plugin example",
    "start": "1319840",
    "end": "1327760"
  },
  {
    "text": "services are are dialogue services for opening uh open and save dialog box",
    "start": "1327760",
    "end": "1333840"
  },
  {
    "text": "there are file system services for brokering calls to specific Windows uh",
    "start": "1333840",
    "end": "1339159"
  },
  {
    "text": "uh file file system related apis and miscellaneous services such as launching The Flash settings",
    "start": "1339159",
    "end": "1345440"
  },
  {
    "text": "manager to visualize so the flash broker process exposes the Chrome flash broker",
    "start": "1345440",
    "end": "1350919"
  },
  {
    "text": "services to the flash plug-in process via VIA simple IPC connection",
    "start": "1350919",
    "end": "1357240"
  },
  {
    "text": "here the fourth set of services that we'll discuss is the services exposed by the Firefox plug-in container these",
    "start": "1357240",
    "end": "1364720"
  },
  {
    "text": "services are mostly for invoking NP API call for forwarding NPA NP API calls so",
    "start": "1364720",
    "end": "1372559"
  },
  {
    "text": "to visualize the plug-in container exposes services to the flush plug-in process for forward in API calls to the",
    "start": "1372559",
    "end": "1380320"
  },
  {
    "text": "flash to the Firefox broker to the Firefox browser process so it is mostly for forwarding",
    "start": "1380320",
    "end": "1387679"
  },
  {
    "text": "APA cost between the NP API cost between the browser process and the Flash Plugin",
    "start": "1387679",
    "end": "1394159"
  },
  {
    "text": "process so the last set of services that we'll discuss are the services exposed",
    "start": "1394159",
    "end": "1400159"
  },
  {
    "text": "by the Firefox flash broker process the Firefox flash broker exposes",
    "start": "1400159",
    "end": "1405480"
  },
  {
    "text": "services to two processes the first one is the flush plug-in process and the plug-in container and the service that",
    "start": "1405480",
    "end": "1412240"
  },
  {
    "text": "is that it exposes can be divided into three sandbox services for forwarded",
    "start": "1412240",
    "end": "1418279"
  },
  {
    "text": "apis flash services for additional services and permission",
    "start": "1418279",
    "end": "1424679"
  },
  {
    "text": "Services sandbox and Flash Services involves can be invoked by a Sandbox IPC",
    "start": "1424679",
    "end": "1432200"
  },
  {
    "text": "and this is exposed to the flash plug-in process so these are these are some examples of the dispatch in the Firefox",
    "start": "1432200",
    "end": "1439919"
  },
  {
    "text": "Splash broker so there's a dispatcher for file system related apis so this",
    "start": "1439919",
    "end": "1445080"
  },
  {
    "text": "this is actually for ported from the from chromium and then specific to Firefox",
    "start": "1445080",
    "end": "1451640"
  },
  {
    "text": "Flash and we also found in Reader X are are these two uh uh one that handles",
    "start": "1451640",
    "end": "1457440"
  },
  {
    "text": "forwarded wi apis and and and and uh a",
    "start": "1457440",
    "end": "1463039"
  },
  {
    "text": "dispatcher that handles miscellaneous services in the case of Firefox in the case of Firefox Flash it contains",
    "start": "1463039",
    "end": "1469200"
  },
  {
    "text": "services such as launching The Flash Player settings",
    "start": "1469200",
    "end": "1473679"
  },
  {
    "text": "manager so the flash broker Ser The Flash broker also exposes additional services to the plug-in container this",
    "start": "1474640",
    "end": "1481559"
  },
  {
    "text": "is invoked by a chromium IPC as a Firefox 11.3 the services invol in involves",
    "start": "1481559",
    "end": "1488840"
  },
  {
    "text": "granting denying the sandbox process access to window handles to visualize",
    "start": "1488840",
    "end": "1494919"
  },
  {
    "text": "the flash broker process exposes sunbox and Flash services to the flash plug-in",
    "start": "1494919",
    "end": "1500720"
  },
  {
    "text": "process which is called by which is which is callable bya sandbox IPC and it",
    "start": "1500720",
    "end": "1506080"
  },
  {
    "text": "also additionally exposes permission services to the plug-in container which is callable via chromium IPC",
    "start": "1506080",
    "end": "1514000"
  },
  {
    "start": "1514000",
    "end": "1891000"
  },
  {
    "text": "connection okay so now let's discuss the policy engine policy engine is responsible for",
    "start": "1516559",
    "end": "1524360"
  },
  {
    "text": "evaluating the forwarded API calls against sunbox policies these policies allows the broker to",
    "start": "1524360",
    "end": "1531399"
  },
  {
    "text": "specify exceptions to the default restrictions in the sandbox um the policy rules are Whit list rules that",
    "start": "1531399",
    "end": "1537720"
  },
  {
    "text": "Grant the sandbox specific access to certain objects overriding the default sandbox restrictions the policy engine",
    "start": "1537720",
    "end": "1546000"
  },
  {
    "text": "is uh the same for all threee sandbox implementations because they're all based on Chrome sandbox",
    "start": "1546000",
    "end": "1551600"
  },
  {
    "text": "code with uh some difference I'll mention later to add policy rules you can do",
    "start": "1551600",
    "end": "1557720"
  },
  {
    "text": "this program ically using the ad R function you can find in the chromium source code this function takes three",
    "start": "1557720",
    "end": "1565440"
  },
  {
    "text": "parameters subsystem which indicates a Windows subsystem the rules will apply to and schematics which indicates the",
    "start": "1565440",
    "end": "1573279"
  },
  {
    "text": "the permission the kind of permission that will be applied and pattern which is a string",
    "start": "1573279",
    "end": "1579679"
  },
  {
    "text": "expression that will be matched to the file name or register name or or whatever object's name and if it matched",
    "start": "1579679",
    "end": "1586520"
  },
  {
    "text": "the policy will be app here's some examples of",
    "start": "1586520",
    "end": "1591600"
  },
  {
    "text": "subsystems there's a lot of there's this is just a small subset and you can see there's a subsist",
    "start": "1591600",
    "end": "1599360"
  },
  {
    "text": "files for file operations and subsist registry for registry operations and below it some examples of semantics or",
    "start": "1599360",
    "end": "1606960"
  },
  {
    "text": "the permissions and you can see there's files allow any that will give the",
    "start": "1606960",
    "end": "1612080"
  },
  {
    "text": "sandbox process full access to files and uh another example is reg allow any",
    "start": "1612080",
    "end": "1618960"
  },
  {
    "text": "which allows read and WR access to registry key there there are some subsystems and",
    "start": "1618960",
    "end": "1625120"
  },
  {
    "text": "semantics that can be found only in Firefox Firefox flash but not in Chrome",
    "start": "1625120",
    "end": "1630399"
  },
  {
    "text": "Flash and pepper Flash and vice versa so here's some examples of of an",
    "start": "1630399",
    "end": "1637600"
  },
  {
    "text": "adal call uh this can be found the first example can be found in Firefox",
    "start": "1637600",
    "end": "1644080"
  },
  {
    "text": "Flash and it basically gives the sandbox process full access to any file in the",
    "start": "1644080",
    "end": "1652520"
  },
  {
    "text": "folder in the pattern argument in in the in in this folder the",
    "start": "1652520",
    "end": "1659000"
  },
  {
    "text": "next example will give the sandbox process register read and write access",
    "start": "1659000",
    "end": "1665440"
  },
  {
    "text": "to to any any key that starts with the",
    "start": "1665440",
    "end": "1671639"
  },
  {
    "text": "string so the one difference between Firefox Flash and the two other sandboxes is that fir flash allows",
    "start": "1672519",
    "end": "1679240"
  },
  {
    "text": "custom policies to be created using a configuration file this custom policy file is enabled or is can will be read",
    "start": "1679240",
    "end": "1687120"
  },
  {
    "text": "by Firefox flash only if protected mode broker whitelist config file option is set to one in mm. CFG the policy file is",
    "start": "1687120",
    "end": "1695760"
  },
  {
    "text": "named protected mode wheless config.txt and is placed in the macrom flash folder",
    "start": "1695760",
    "end": "1702799"
  },
  {
    "text": "in the system system directory the policy custom policy rules",
    "start": "1702799",
    "end": "1709480"
  },
  {
    "text": "take the following format policy rule type which is a subset of semantics and indicates the permission that will be",
    "start": "1709480",
    "end": "1716080"
  },
  {
    "text": "applied and an equal sign and the pattern string which is synonymous to the the pattern argument in the adal",
    "start": "1716080",
    "end": "1722240"
  },
  {
    "text": "function called so here's an example of a custom policy rule this rule will allow Firefox",
    "start": "1722240",
    "end": "1728720"
  },
  {
    "text": "flash Firefox flash sandbox process to full full access to any files in the",
    "start": "1728720",
    "end": "1735159"
  },
  {
    "text": "logs folder in C directory",
    "start": "1735159",
    "end": "1739640"
  },
  {
    "text": "[Music] after discussing all the sandbox mechanism we will now we will now show",
    "start": "1740220",
    "end": "1746720"
  },
  {
    "text": "how all the sandbox mechanisms are all connected together for CHR fles so the apis are",
    "start": "1746720",
    "end": "1753320"
  },
  {
    "text": "intercepted in the flash plug-in process and are forwarded to the Chrome browser process which are then evaluated by the",
    "start": "1753320",
    "end": "1760519"
  },
  {
    "text": "policy engine and then for sending plugin",
    "start": "1760519",
    "end": "1765600"
  },
  {
    "text": "status and notification message The Flash plugin process uses the AC chromium IPC connection to the Chrome",
    "start": "1765600",
    "end": "1772320"
  },
  {
    "text": "browser process for NPA calls the flash plug-in process uses the chromium IPC",
    "start": "1772320",
    "end": "1779159"
  },
  {
    "text": "connection to the Chrome renderer process which then serves the support services for NP API calls for privileged",
    "start": "1779159",
    "end": "1787159"
  },
  {
    "text": "NP API calls the Chrome renderer process uses another set of services exposed by",
    "start": "1787159",
    "end": "1793320"
  },
  {
    "text": "the Chrome browser by the Chrome browser process",
    "start": "1793320",
    "end": "1798399"
  },
  {
    "text": "because the npapi interface is limited as you can see we we we need the for",
    "start": "1798399",
    "end": "1804000"
  },
  {
    "text": "Chrome flash needed another another uh chrome chrome chrome uh another flash broker process each services are",
    "start": "1804000",
    "end": "1811000"
  },
  {
    "text": "callable to the flash plugin process via simple",
    "start": "1811000",
    "end": "1816000"
  },
  {
    "text": "IPC so it for pepper flash it is almost the same as uh as a chrome Flash the",
    "start": "1817320",
    "end": "1823720"
  },
  {
    "text": "only difference one of the difference is that the this this this this connection",
    "start": "1823720",
    "end": "1828919"
  },
  {
    "text": "is used for for PP API calls and as you can notice there's no need for there",
    "start": "1828919",
    "end": "1834440"
  },
  {
    "text": "there's no additional broker process this is because the pp API interface is",
    "start": "1834440",
    "end": "1840399"
  },
  {
    "text": "adequate for pepper flash for fira Flash apis are",
    "start": "1840399",
    "end": "1848440"
  },
  {
    "text": "intercepted in the flash plugin process then forwarded to the flash broker",
    "start": "1848440",
    "end": "1854559"
  },
  {
    "text": "process which is then evaluated by the policy engine this channel in addition to serve in addition to serving",
    "start": "1854559",
    "end": "1861360"
  },
  {
    "text": "forwarded AP forwarded apis is also for additional invoking additional flash",
    "start": "1861360",
    "end": "1867240"
  },
  {
    "text": "services for NPA for NP APA calls the flash plug-in process uses this chromium",
    "start": "1867240",
    "end": "1873600"
  },
  {
    "text": "IPC channel the plug-in container then forwards the NP API calls to the Firefox",
    "start": "1873600",
    "end": "1879240"
  },
  {
    "text": "browser process additionally the fire the The Flash broker process exposes",
    "start": "1879240",
    "end": "1884639"
  },
  {
    "text": "permission services to the plug-in container which is callable by chromium",
    "start": "1884639",
    "end": "1890398"
  },
  {
    "start": "1891000",
    "end": "2238000"
  },
  {
    "text": "IPC okay so now that we're done with the sandbox internals let's talk about the",
    "start": "1891600",
    "end": "1897399"
  },
  {
    "text": "more the security aspects of the sandbox first let's talk about sandbox limitations when discussing sandbox",
    "start": "1897399",
    "end": "1904840"
  },
  {
    "text": "limitations we we generally ask this question what can ambicious code do once",
    "start": "1904840",
    "end": "1909919"
  },
  {
    "text": "it is running within a flash sandbox and the answer is not much but enough so why",
    "start": "1909919",
    "end": "1918320"
  },
  {
    "text": "is that first there's a limitation in in that file system read access is allowed",
    "start": "1918320",
    "end": "1924240"
  },
  {
    "text": "in some of these implementations for example Firefox flash allows read access to all files that are accessible from",
    "start": "1924240",
    "end": "1931000"
  },
  {
    "text": "the user's account because this process toen still has access to some of these files and on top of that there's a",
    "start": "1931000",
    "end": "1936480"
  },
  {
    "text": "hard-coded policy rule in Firefox flash that allows read access to all files and",
    "start": "1936480",
    "end": "1942720"
  },
  {
    "text": "this is explicitly declared using the the ad rule function we discussed earlier",
    "start": "1942720",
    "end": "1948600"
  },
  {
    "text": "that adual call has the subsystem parameter of subsist files and semantics",
    "start": "1948600",
    "end": "1955279"
  },
  {
    "text": "is files allow read only and the pattern is an asterisk therefore uh allowing the",
    "start": "1955279",
    "end": "1961159"
  },
  {
    "text": "sandbox process full read access to to all files Chrome FL also does this and",
    "start": "1961159",
    "end": "1969200"
  },
  {
    "text": "uh allows read access to all files through its process token on the other hand pepper flash does not allow any",
    "start": "1969200",
    "end": "1976039"
  },
  {
    "text": "read access of files at all so this limitation could lead to to sensitive",
    "start": "1976039",
    "end": "1981240"
  },
  {
    "text": "files such as financial documents Source codes or cookies to be stolen another limitation is registry",
    "start": "1981240",
    "end": "1988760"
  },
  {
    "text": "read access for Firefox flash it allows read access to register keys that are",
    "start": "1988760",
    "end": "1994360"
  },
  {
    "text": "accessible from the user account uh Brad Band by having a process token that still has access to some of",
    "start": "1994360",
    "end": "2000600"
  },
  {
    "text": "these keys and also there's an hardcoded policy rule",
    "start": "2000600",
    "end": "2005960"
  },
  {
    "text": "that allows read access to Major R de hies uh there's an adal call in Firefox",
    "start": "2005960",
    "end": "2012360"
  },
  {
    "text": "flash with the following parameters with subsystem is equal to subsis registry",
    "start": "2012360",
    "end": "2018840"
  },
  {
    "text": "semantics is reg allow only and pattern is equal to h g classes rout the the the",
    "start": "2018840",
    "end": "2026360"
  },
  {
    "text": "the name of the major register Hive followed by an asterisk by a wild card so this rule will effectively allow",
    "start": "2026360",
    "end": "2036279"
  },
  {
    "text": "Firefox sandbox process Firefox / sandbox process uh read access to to",
    "start": "2036279",
    "end": "2043320"
  },
  {
    "text": "this registry Hive for chro Chrome flash also allows read access to Major res hies because of",
    "start": "2043320",
    "end": "2049960"
  },
  {
    "text": "it's process token but pepper flash does not allow any read access of register keys so this limitation could lead to",
    "start": "2049960",
    "end": "2057280"
  },
  {
    "text": "disclosure of system configuration information in the register and potentially sensitive application data",
    "start": "2057280",
    "end": "2063638"
  },
  {
    "text": "from the registry another important limitation is network access both Firefox Flash and",
    "start": "2063639",
    "end": "2070760"
  },
  {
    "text": "chrome flash do not restrict network access so so you can create a server or",
    "start": "2070760",
    "end": "2075960"
  },
  {
    "text": "you connect to another remote server from within the sandbox however pepper flash does not",
    "start": "2075960",
    "end": "2082760"
  },
  {
    "text": "allow any Sation so this limitation it does not have this",
    "start": "2082760",
    "end": "2087878"
  },
  {
    "text": "limitation this limitation could allow transfer of Sol information to a remote",
    "start": "2087879",
    "end": "2093240"
  },
  {
    "text": "server and it also allows attack of internal systems that nor normally accessible from the outside by using the",
    "start": "2093240",
    "end": "2100560"
  },
  {
    "text": "exploited system as a pivot point another limitation for Firefox",
    "start": "2100560",
    "end": "2107520"
  },
  {
    "text": "flash is it it has policy allowed right access to certain files and folders it",
    "start": "2107520",
    "end": "2112680"
  },
  {
    "text": "contains uh default policy rules that Grant the sandbox process right access",
    "start": "2112680",
    "end": "2118440"
  },
  {
    "text": "to certain folders and files uh that are related to flash and some of these F",
    "start": "2118440",
    "end": "2125119"
  },
  {
    "text": "files are also for third party applications such as those some applications from Microsoft uh this",
    "start": "2125119",
    "end": "2131359"
  },
  {
    "text": "limitation could allow an attacker to have control over the behavior of flash or another",
    "start": "2131359",
    "end": "2138160"
  },
  {
    "text": "application another limitation is clipboard read and right access both",
    "start": "2138160",
    "end": "2143280"
  },
  {
    "text": "Firefox Flash and chrome flash do not have clipboard access restrictions set in their job objects also Firefox flash",
    "start": "2143280",
    "end": "2151520"
  },
  {
    "text": "provides clipboard Services through its sandbox clipboard dispatcher and and again as usual pepper",
    "start": "2151520",
    "end": "2160200"
  },
  {
    "text": "flash does not allow clipboard access this limitation could allow disclosure",
    "start": "2160200",
    "end": "2165480"
  },
  {
    "text": "of possibly possibly sensitive information such as passwords in a scenario where a user might use copy and",
    "start": "2165480",
    "end": "2172920"
  },
  {
    "text": "paste to to to copy a password into another window uh the finally this the limit a",
    "start": "2172920",
    "end": "2180680"
  },
  {
    "text": "limit this limitation is applicable to all the three sandbo flash sandbox",
    "start": "2180680",
    "end": "2186000"
  },
  {
    "text": "implementation it's a access to fat or fat 32 partitions since these partitions",
    "start": "2186000",
    "end": "2193200"
  },
  {
    "text": "don't have any security descript the sandbox restrictions cannot be applied",
    "start": "2193200",
    "end": "2199160"
  },
  {
    "text": "so this limitation could give um propagation capabilities to to",
    "start": "2199160",
    "end": "2206040"
  },
  {
    "text": "malicious code running inside uh s FL inside the flash sandbox for example by dropping a",
    "start": "2206040",
    "end": "2212560"
  },
  {
    "text": "malicious file into a fat or fat 32 partition USB flash drive",
    "start": "2212560",
    "end": "2218560"
  },
  {
    "text": "so what have we learned in this section we learned that limitations and weaknesses still",
    "start": "2218560",
    "end": "2225119"
  },
  {
    "text": "exist and uh this liit these limitations makes possible to carry out information",
    "start": "2225119",
    "end": "2231359"
  },
  {
    "text": "theft and lastly the pepper flash out of all the three pepper flash is the most",
    "start": "2231359",
    "end": "2238760"
  },
  {
    "start": "2238000",
    "end": "2559000"
  },
  {
    "text": "restrictive we'll now discuss the different methods for a sand Escape most most of the items discussed here does",
    "start": "2238760",
    "end": "2245440"
  },
  {
    "text": "not only apply to for to to to the flash sandboxes but can also be applied to other sandboxes as",
    "start": "2245440",
    "end": "2252119"
  },
  {
    "text": "well so the first option for an attacker to to conduct a Sandbox Escape is to to",
    "start": "2252119",
    "end": "2258280"
  },
  {
    "text": "is is to exploit local eops especially those that result in kernel mode code",
    "start": "2258280",
    "end": "2264200"
  },
  {
    "text": "execution with multiple interfaces still available to the sandbox",
    "start": "2264200",
    "end": "2269720"
  },
  {
    "text": "process such as Cisco system calls and device device objects exploiting local",
    "start": "2269720",
    "end": "2275880"
  },
  {
    "text": "eops to escape the sandbox are are are anide ideal way to escape the",
    "start": "2275880",
    "end": "2282800"
  },
  {
    "text": "sandbox second second way to Second method for a Sandbox Escape is bya name",
    "start": "2282800",
    "end": "2288240"
  },
  {
    "text": "object squatting this method involves a malicious uh a process creating a malicious name object which is trusted",
    "start": "2288240",
    "end": "2295280"
  },
  {
    "text": "by a higher privilege process the malicious process then then",
    "start": "2295280",
    "end": "2300599"
  },
  {
    "text": "sends by by sending by writing uh by writing uh data to the to the malicious",
    "start": "2300599",
    "end": "2308359"
  },
  {
    "text": "name object the the behavior of the higher privilege higher privilege process can be",
    "start": "2308359",
    "end": "2315920"
  },
  {
    "text": "controlled the third one the one of the primary vectors for a Sandbox Escape is the IPC message parser because most most",
    "start": "2316480",
    "end": "2324720"
  },
  {
    "text": "of the code runs in a privileged context and the first code to touch untrusted data code that are interesting are the",
    "start": "2324720",
    "end": "2331720"
  },
  {
    "text": "IPC message parer and the code that deserializes IPC call parameters",
    "start": "2331720",
    "end": "2336760"
  },
  {
    "text": "especially those that are complex all IPC implementations we have",
    "start": "2336760",
    "end": "2341800"
  },
  {
    "text": "discussed are open source and a source audit is possible policy World vulnerabilities",
    "start": "2341800",
    "end": "2348760"
  },
  {
    "text": "auditing for policy vulnerabilities involves looking for right allowed right allowed",
    "start": "2348760",
    "end": "2354000"
  },
  {
    "text": "policies and then identifying if the policy can be used to to uh to control",
    "start": "2354000",
    "end": "2361160"
  },
  {
    "text": "the behavior of a higher privilege process for example for write allow policies for register key does the does",
    "start": "2361160",
    "end": "2368520"
  },
  {
    "text": "the registry key contain configuration entries used by higher privilege applications for folders does it contain",
    "start": "2368520",
    "end": "2375640"
  },
  {
    "text": "executable fast which you can overwrite or does it also contain configuration data which you can which you can modify",
    "start": "2375640",
    "end": "2382680"
  },
  {
    "text": "and then control the the behavior of the higher privilege application that uses",
    "start": "2382680",
    "end": "2388040"
  },
  {
    "text": "it polic engine vulnerabilities are crical because the poliy engine decides which potentially security sensitive",
    "start": "2388040",
    "end": "2395480"
  },
  {
    "text": "action to allow or deny an example of ay engine vulnerability is the is the",
    "start": "2395480",
    "end": "2401400"
  },
  {
    "text": "vulnerability we we identified in Reader X last year and we demoed the vulnerability in in in blackette last",
    "start": "2401400",
    "end": "2409040"
  },
  {
    "text": "year too so a simple description of the bug we found so in Reader X there's a",
    "start": "2409040",
    "end": "2415240"
  },
  {
    "text": "register entry for enabling or disabling the reader x s sandbox interestingly there's an allow",
    "start": "2415240",
    "end": "2422520"
  },
  {
    "text": "policy that covers this reg this register key but of course course",
    "start": "2422520",
    "end": "2427960"
  },
  {
    "text": "there's a registry deny access policy denying access specifically specifically",
    "start": "2427960",
    "end": "2433839"
  },
  {
    "text": "for this register key but the problem is you can bypass the deny access paly by just adding",
    "start": "2433839",
    "end": "2441319"
  },
  {
    "text": "additional backslashes to the re register resource name such as this one so what happened is that uh due to",
    "start": "2441319",
    "end": "2449200"
  },
  {
    "text": "this bug a Sandbox a Sandbox code is able to disable The Reader X sandbox",
    "start": "2449200",
    "end": "2456680"
  },
  {
    "text": "service services are are a large attack surface for a Sandbox Escape because most of them are are exposed by are",
    "start": "2457680",
    "end": "2466680"
  },
  {
    "text": "exposed are runs in a high in a high privilege context and process untrusted",
    "start": "2466680",
    "end": "2472359"
  },
  {
    "text": "data two examples of service vulnerabilities are two vulnerabilities we identified in Chrome in in Chrome",
    "start": "2472359",
    "end": "2479680"
  },
  {
    "text": "flash broker earlier this year this is the description of the two",
    "start": "2479680",
    "end": "2485960"
  },
  {
    "text": "bugs so as you can see the two two service handlers in a chrome flash broker accept a pointer as a first",
    "start": "2485960",
    "end": "2493440"
  },
  {
    "text": "parameter this one and this one and that that pointer had been fully",
    "start": "2493440",
    "end": "2500400"
  },
  {
    "text": "trusted and the reference inside the service the service handers in a call instruction so if you look if you look",
    "start": "2500400",
    "end": "2506839"
  },
  {
    "text": "at this code you can you can easily control the address in the call",
    "start": "2506839",
    "end": "2511960"
  },
  {
    "text": "instruction with additional research of of of uh in of of of how to inject code",
    "start": "2511960",
    "end": "2517560"
  },
  {
    "text": "in the broker process and then leaking the stack address of the broker process back to the sandbox process we are able",
    "start": "2517560",
    "end": "2524480"
  },
  {
    "text": "to execute a arbitrary code in the Chrome flash broker process one of we",
    "start": "2524480",
    "end": "2530480"
  },
  {
    "text": "will use one of these bugs in in our sandbox Escape demo",
    "start": "2530480",
    "end": "2535760"
  },
  {
    "text": "later so for sandbox Escape sunbox Escape involves exploiting a winess in a",
    "start": "2535920",
    "end": "2541680"
  },
  {
    "text": "high privilege process two prime example of weaknesses that can lead to a Sandbox Escape or per missive policies and",
    "start": "2541680",
    "end": "2548880"
  },
  {
    "text": "improper handling of atted data and finally the sandbox mechanisms",
    "start": "2548880",
    "end": "2554280"
  },
  {
    "text": "themselves are are potten are also potential vectors for sandbox",
    "start": "2554280",
    "end": "2560280"
  },
  {
    "start": "2559000",
    "end": "2754000"
  },
  {
    "text": "Escape okay we're going to demonstrate a Sandbox Escape uh in this demo we will be using",
    "start": "2562559",
    "end": "2569880"
  },
  {
    "text": "three different vulnerabilities uh two for the remote exploit and one Escape exploit that we",
    "start": "2569880",
    "end": "2577599"
  },
  {
    "text": "found in Chrome flash earlier this year right",
    "start": "2577599",
    "end": "2584640"
  },
  {
    "text": "okay so in this demo we'll be using two machines one is the machine that serves",
    "start": "2584640",
    "end": "2591119"
  },
  {
    "text": "the the exploit and the other one is the victim",
    "start": "2591119",
    "end": "2596240"
  },
  {
    "text": "machine so please focus on uh before Mark clicks",
    "start": "2599119",
    "end": "2604960"
  },
  {
    "text": "the the exploit or the the the realurl which uh he made a bookmark for the the",
    "start": "2604960",
    "end": "2611800"
  },
  {
    "text": "exploit URL since he liked it so much and please look at this Pro Explorer and",
    "start": "2611800",
    "end": "2618160"
  },
  {
    "text": "you can see that it will spawn it will open the flash broker process the the here",
    "start": "2618160",
    "end": "2628160"
  },
  {
    "text": "R and to visualize a successful",
    "start": "2628160",
    "end": "2633240"
  },
  {
    "text": "exportation we are going to spawn",
    "start": "2633240",
    "end": "2637520"
  },
  {
    "text": "wait we're going to spawn not one but two",
    "start": "2639720",
    "end": "2646359"
  },
  {
    "text": "calculators [Applause]",
    "start": "2646760",
    "end": "2652960"
  },
  {
    "text": "um as you can see one calculator has has a Integrity level of of medium and",
    "start": "2652960",
    "end": "2662000"
  },
  {
    "text": "that's the one that is spawned by the the exploited broker process and the",
    "start": "2662000",
    "end": "2667640"
  },
  {
    "text": "other one has a Integrity level of low this is uh spond by the by the",
    "start": "2667640",
    "end": "2675480"
  },
  {
    "text": "initially exploited sandbox flash plugin",
    "start": "2675480",
    "end": "2681240"
  },
  {
    "text": "process okay so to conclude our talk uh what have you learned we learned that that sandboxing",
    "start": "2684000",
    "end": "2692319"
  },
  {
    "text": "Technologies has made exploitation more expensive for the attacker because they now need need an additional sandbox",
    "start": "2692319",
    "end": "2698160"
  },
  {
    "text": "Escape vulnerability to fully compromise the system but we also learned that even",
    "start": "2698160",
    "end": "2703280"
  },
  {
    "text": "though sandboxes are have Pro to effective it is also true that limit limitations still",
    "start": "2703280",
    "end": "2710280"
  },
  {
    "text": "exists and uh users uh should be aware of this and lastly uh we have concluded",
    "start": "2710280",
    "end": "2717240"
  },
  {
    "text": "that out of the three sandbox implementations pepper flash is the most restrictive and uh we're looking forward",
    "start": "2717240",
    "end": "2724480"
  },
  {
    "text": "to it being the default Flash Player in in Chrome so that's it for our talk thank",
    "start": "2724480",
    "end": "2732000"
  },
  {
    "text": "you very much for if you have any questions or you just want to chat we will be at the IBM Booth Number 601 from",
    "start": "2732000",
    "end": "2738359"
  },
  {
    "text": "4:35 p.m. onwards and if you have some",
    "start": "2738359",
    "end": "2743640"
  },
  {
    "text": "questions now you can yeah we have you can also",
    "start": "2743640",
    "end": "2748720"
  },
  {
    "text": "ask thank you [Applause]",
    "start": "2748720",
    "end": "2756349"
  }
]