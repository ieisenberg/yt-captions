[
  {
    "start": "0",
    "end": "34000"
  },
  {
    "text": "so thank you everyone for attending this talk this is my first time at blackhat Europe I think it's your first time as",
    "start": "60",
    "end": "5640"
  },
  {
    "text": "well yeah yeah so we're quite excited about you know the whole event so far it's been awesome so this talk is",
    "start": "5640",
    "end": "12809"
  },
  {
    "text": "tackling privilege escalations with offense and defense so basically I'm gonna be covering where we'll both we're",
    "start": "12809",
    "end": "19109"
  },
  {
    "text": "going to be covering a certain vulnerability type and JavaScript engines specifically in the Acrobat",
    "start": "19109",
    "end": "25500"
  },
  {
    "text": "JavaScript engine it's JavaScript API restrictions bypasses which allows us to",
    "start": "25500",
    "end": "31500"
  },
  {
    "text": "basically escalate privileges so a quick introduction my name is Abdul basically",
    "start": "31500",
    "end": "37559"
  },
  {
    "start": "34000",
    "end": "100000"
  },
  {
    "text": "I'm an analyst team in C I have a guide herd have you guys heard of the D ID for Judah initiative all right so basically",
    "start": "37559",
    "end": "45000"
  },
  {
    "text": "Cydia is a bounty program which is part of that Trend Micro company and basically we are quite research from",
    "start": "45000",
    "end": "51030"
  },
  {
    "text": "external researchers and we offer money if they're exploitable or not so my job",
    "start": "51030",
    "end": "56190"
  },
  {
    "text": "is to manage the analyst team who they basically do the root cause analysis on these vulnerabilities and I basically",
    "start": "56190",
    "end": "62579"
  },
  {
    "text": "make sure that the caseload is being distributed fine and in a nice way cases are being you know offers are being sent",
    "start": "62579",
    "end": "68340"
  },
  {
    "text": "and all that kind of stuff this is basically myself Edgar yeah I'm Edgar Peck I'm security",
    "start": "68340",
    "end": "75270"
  },
  {
    "text": "researcher at Adobe and yeah I was on the receiving end of many of the",
    "start": "75270",
    "end": "81390"
  },
  {
    "text": "vulnerabilities that actually up those submitted and yeah so my email is",
    "start": "81390",
    "end": "86479"
  },
  {
    "text": "related to security automation and I'm part of the incidence response team",
    "start": "86479",
    "end": "91500"
  },
  {
    "text": "it used to fix our bugs so yeah probably",
    "start": "91500",
    "end": "97200"
  },
  {
    "text": "with the most hated people in Adobe right almost all right so and over you so do we have any ideal Reader or",
    "start": "97200",
    "end": "104790"
  },
  {
    "start": "100000",
    "end": "148000"
  },
  {
    "text": "Acrobat users here of course awesome all right so are we gonna assume everyone",
    "start": "104790",
    "end": "112049"
  },
  {
    "text": "else uses Foxit no yes I personally use Acrobat in a VM of course",
    "start": "112049",
    "end": "119950"
  },
  {
    "text": "yeah all right so basically Acrobat is an old software at dates back to 1993",
    "start": "119950",
    "end": "125590"
  },
  {
    "text": "it's probably one of the most well according to the poll here one of the most used PDF e-readers out there it's",
    "start": "125590",
    "end": "133780"
  },
  {
    "text": "supported by you know almost all platforms it's specifically an",
    "start": "133780",
    "end": "138790"
  },
  {
    "text": "interesting target for researchers because of the old code base that it has plus it has a huge attack surface which",
    "start": "138790",
    "end": "145540"
  },
  {
    "text": "we're gonna we're going to talk about a little bit so here's a mire of architecture which is Edgar approved",
    "start": "145540",
    "end": "153160"
  },
  {
    "start": "148000",
    "end": "337000"
  },
  {
    "text": "Adobe approved so I broke it down to three components the main component is",
    "start": "153160",
    "end": "158590"
  },
  {
    "text": "the core one which is Acrobat DLL accra already 32 today l l and when you launch",
    "start": "158590",
    "end": "166000"
  },
  {
    "text": "the application basically that DLL is learnt it automatically loaded and hand handles mostly everything then you have",
    "start": "166000",
    "end": "172930"
  },
  {
    "text": "something called the plugins and basically Acrobat supports plugins and",
    "start": "172930",
    "end": "178390"
  },
  {
    "text": "these are dll files but with an API file extension there are different plugins it",
    "start": "178390",
    "end": "185799"
  },
  {
    "text": "depends on the type of functionalities that you want so they divided for example a script handles all the",
    "start": "185799",
    "end": "190840"
  },
  {
    "text": "JavaScript code inside a PDF so if you have a PDF file with a JavaScript you know embed it inside it so basically all",
    "start": "190840",
    "end": "197410"
  },
  {
    "text": "that is handled inside a script you have you have other plugins but it's all based on what you guys want to do for",
    "start": "197410",
    "end": "203200"
  },
  {
    "text": "example HTML to PDF converts HTML files to PDF files this is only for Acrobat",
    "start": "203200",
    "end": "208950"
  },
  {
    "text": "which is the paid version of you know reader which is the provision XPS to PDF",
    "start": "208950",
    "end": "214510"
  },
  {
    "text": "converts XPS to PDF files and this one has been killed recently yes right yeah because of the sheer amount of",
    "start": "214510",
    "end": "220750"
  },
  {
    "text": "vulnerabilities inside this practice plugin and outs and those annotations acro form handles XF a forms and one of",
    "start": "220750",
    "end": "229299"
  },
  {
    "text": "the you know most important plugins is image conversion and that handles",
    "start": "229299",
    "end": "234989"
  },
  {
    "text": "converting image files to PDF files and that's only supported in Acrobat so let's not mix up you know image parsing",
    "start": "234989",
    "end": "241720"
  },
  {
    "text": "inside PDF with converting image image files to PDF files so this is two different things if you have an image",
    "start": "241720",
    "end": "248500"
  },
  {
    "text": "file inside the PDF file then it's it's parsed in a different way than basically converting it yeah and an image file to a PDF file",
    "start": "248500",
    "end": "255840"
  },
  {
    "text": "which is specifically handled in image conversion in this case and you have the back end you know dll files it actually",
    "start": "255840",
    "end": "261900"
  },
  {
    "text": "does the real job of parsing and all that kind of stuff I will talk a little bit about you know some of these dll's",
    "start": "261900",
    "end": "268620"
  },
  {
    "text": "ax SLE handles XSLT you know parsing",
    "start": "268620",
    "end": "274290"
  },
  {
    "text": "interestingly ax SLE is based on sublet run which is an old open source project",
    "start": "274290",
    "end": "279930"
  },
  {
    "text": "which is abandoned you guys can find online you can audit it find",
    "start": "279930",
    "end": "285780"
  },
  {
    "text": "vulnerabilities and most likely it's gonna apply to you know Acrobat code",
    "start": "285780",
    "end": "291030"
  },
  {
    "text": "type handles font parsing JPEG - Caleb handles JPEG 2000 image parsing I also",
    "start": "291030",
    "end": "299520"
  },
  {
    "text": "mentioned WebKit AG which converts HTML files to PDF files and it's based on an",
    "start": "299520",
    "end": "305790"
  },
  {
    "text": "old spin of work it surprisingly Onix 32 handles index files so Acrobat contains",
    "start": "305790",
    "end": "314070"
  },
  {
    "text": "a solution that basically could you know create index files for fast searching purposes and all that is handled inside",
    "start": "314070",
    "end": "320340"
  },
  {
    "text": "onyx 32 it got killed as well because of you know the sheer amount of vulnerabilities inside it not",
    "start": "320340",
    "end": "326070"
  },
  {
    "text": "technically killed we can still enable through the registry but there is an onyx 32 dll sitting in your Acrobat you",
    "start": "326070",
    "end": "332850"
  },
  {
    "text": "know real installation that still contains bugs technically so how does it",
    "start": "332850",
    "end": "338970"
  },
  {
    "start": "337000",
    "end": "446000"
  },
  {
    "text": "look like from a CDI perspective so the whole story dates back to the end",
    "start": "338970",
    "end": "344250"
  },
  {
    "text": "December 2014 early 2015 which I personally call the ie rush which no",
    "start": "344250",
    "end": "351060"
  },
  {
    "text": "back then we used to receive a lot of vulnerabilities in IE specifically used afterburner abilities we were not",
    "start": "351060",
    "end": "357870"
  },
  {
    "text": "getting any vulnerabilities in Acrobat or reader so we were like well let's",
    "start": "357870",
    "end": "363240"
  },
  {
    "text": "let's run an internal audit on this thing see you know how strong it is",
    "start": "363240",
    "end": "368430"
  },
  {
    "text": "and because we had a lot of you know expertise in JavaScript fuzzing",
    "start": "368430",
    "end": "373980"
  },
  {
    "text": "specifically in fuzzing ms HTML inside you know IE so we wanted to apply the same concepts",
    "start": "373980",
    "end": "380010"
  },
  {
    "text": "of fuzzing finding vulnerabilities in javascript in Acrobat which we we did and we talked",
    "start": "380010",
    "end": "386230"
  },
  {
    "text": "you know the Acrobat JavaScript engine we ended up finding memory corruption a lot of memory corruption bugs and",
    "start": "386230",
    "end": "392140"
  },
  {
    "text": "bio-memory corruption I mean use after free start confusions audubon reads writes you know oh like every freaking",
    "start": "392140",
    "end": "398920"
  },
  {
    "text": "bug type that you can imagine so we sent that you know the first batch of vulnerabilities back in that was",
    "start": "398920",
    "end": "405280"
  },
  {
    "text": "patched in 2015 in early 2015 and ever since things just you know blossomed from there so apparently it got a lot of",
    "start": "405280",
    "end": "412840"
  },
  {
    "text": "attention researchers studying you know auditing Acrobat and it basically started you know we basically starting",
    "start": "412840",
    "end": "419260"
  },
  {
    "text": "getting an increase in vulnerabilities year by year and as you guys can see in the past four years it's in a steady",
    "start": "419260",
    "end": "426130"
  },
  {
    "text": "increase in 2019 and this year it got a little bit slower and specifically",
    "start": "426130",
    "end": "431620"
  },
  {
    "text": "because and Adobe started rolling a little bit more mitigations killing more features like XPS to PDF which was you",
    "start": "431620",
    "end": "438430"
  },
  {
    "text": "know a huge thing which I'll give again also guys the second part of the talk -",
    "start": "438430",
    "end": "443650"
  },
  {
    "text": "yeah all right so I'll talk about the",
    "start": "443650",
    "end": "449050"
  },
  {
    "start": "446000",
    "end": "512000"
  },
  {
    "text": "JavaScript attack surface I'll go back a little bit to the architecture so that the key takeaway from this slide is that",
    "start": "449050",
    "end": "456480"
  },
  {
    "text": "through a script which handles all the JavaScript you can actually touch almost",
    "start": "456480",
    "end": "461650"
  },
  {
    "text": "all the DLLs and force the parsing of you know a lot of images image files you know access LT",
    "start": "461650",
    "end": "467800"
  },
  {
    "text": "and all that kind of stuff I will actually note that you can still trigger parsing of WebKit AG but it",
    "start": "467800",
    "end": "475870"
  },
  {
    "text": "still requires an API restrictions bypass so technically you can you can touch everything in the backend through",
    "start": "475870",
    "end": "481900"
  },
  {
    "text": "a script so that's this is that key takeaway here and this is very important from attackers perspective because if",
    "start": "481900",
    "end": "487660"
  },
  {
    "text": "you can trigger an image parsing through JavaScript let's say you found a heap overflow in JPEG 2000 which happened in",
    "start": "487660",
    "end": "493960"
  },
  {
    "text": "the past and you can trigger the the parsing through JavaScript so basically you can do your own you know heap",
    "start": "493960",
    "end": "500050"
  },
  {
    "text": "spraying crafting in a nice way trigger that parsing and and exploit that vulnerability so which is awesome right",
    "start": "500050",
    "end": "506110"
  },
  {
    "text": "if you control everything through JavaScript from an attackers perspective it's a win right so let's talk a little",
    "start": "506110",
    "end": "513880"
  },
  {
    "start": "512000",
    "end": "584000"
  },
  {
    "text": "bit about the the engine itself so the engine itself is based off SpiderMonkey",
    "start": "513880",
    "end": "518890"
  },
  {
    "text": "it's a it's a spin of an old SpiderMonkey version 1.8 specifically it exposes a",
    "start": "518890",
    "end": "525440"
  },
  {
    "text": "rich set of api's you know for automation purposes annotations collaboration you know manipulate",
    "start": "525440",
    "end": "531500"
  },
  {
    "text": "manipulating forms and all that kind of stuff a lot of the API is that exists in",
    "start": "531500",
    "end": "537200"
  },
  {
    "text": "Acrobat are not in exposed in reader the free version there's a lot of medications but not a lot of medications",
    "start": "537200",
    "end": "543950"
  },
  {
    "text": "some mitigations you know applied to the JavaScript API is specifically separation privilege separation which",
    "start": "543950",
    "end": "550430"
  },
  {
    "text": "we're going to talk a little bit about after I will also note that adobe has",
    "start": "550430",
    "end": "556040"
  },
  {
    "text": "been doing you know a good job in enrolling more mitigations for example they compiled you know all the plugins",
    "start": "556040",
    "end": "562040"
  },
  {
    "text": "with CFG now but you still have some still missing areas for them guess",
    "start": "562040",
    "end": "568220"
  },
  {
    "text": "there's progress which is which is awesome and the last thing that i want to mention about javascript api is that",
    "start": "568220",
    "end": "574940"
  },
  {
    "text": "they're executed into two contexts and this is this is actually the core of this talk",
    "start": "574940",
    "end": "580130"
  },
  {
    "text": "you have privileged context and non-privileged context so what what what",
    "start": "580130",
    "end": "585709"
  },
  {
    "start": "584000",
    "end": "633000"
  },
  {
    "text": "are privileged and unprivileged contexts if you if you go to the javascript api reference that that adobe has online",
    "start": "585709",
    "end": "591980"
  },
  {
    "text": "you're gonna notice that some api's have you know a red s next to them and some",
    "start": "591980",
    "end": "597050"
  },
  {
    "text": "api's do not have a red desk next to them so the ones that have that s next to them it means that you can only",
    "start": "597050",
    "end": "604010"
  },
  {
    "text": "execute these api's from that console for some privilege event you cannot",
    "start": "604010",
    "end": "609560"
  },
  {
    "text": "actually do it from the normal dock event by dock event i mean when you open",
    "start": "609560",
    "end": "614570"
  },
  {
    "text": "the dock a document a PDF document inside the application it basically runs in a dock privilege and you cannot",
    "start": "614570",
    "end": "621649"
  },
  {
    "text": "execute these privilege api it's from the dock right so you actually need a",
    "start": "621649",
    "end": "627079"
  },
  {
    "text": "way to do it and if you try to actually execute a privileged api from a dock",
    "start": "627079",
    "end": "632920"
  },
  {
    "text": "context then you're basically gonna have a security warning and this is an example of executing launch URL app that",
    "start": "632920",
    "end": "640640"
  },
  {
    "start": "633000",
    "end": "682000"
  },
  {
    "text": "wants URL from the normal dot context and basically because you don't have privileges to execute that it's going to",
    "start": "640640",
    "end": "646250"
  },
  {
    "text": "give you that warning like you do you want to accept it or not that said you",
    "start": "646250",
    "end": "651860"
  },
  {
    "text": "can still execute village api's from non-privileged context and that's by something called",
    "start": "651860",
    "end": "659040"
  },
  {
    "text": "trusted functions which was introduced back in version 7 in Acrobat version 7",
    "start": "659040",
    "end": "664580"
  },
  {
    "text": "and the whole idea is if you want to execute a privileged API it has to be a",
    "start": "664580",
    "end": "670410"
  },
  {
    "text": "trusted function wrapped in a big improve improve blood and to define that",
    "start": "670410",
    "end": "677160"
  },
  {
    "text": "you have to define that through the app the trusted function though there's a caveat here trusted functions can can",
    "start": "677160",
    "end": "684660"
  },
  {
    "start": "682000",
    "end": "737000"
  },
  {
    "text": "basically be only be executed from trusted locations so you cannot just embed them inside a doc and that's where",
    "start": "684660",
    "end": "692790"
  },
  {
    "text": "the folder level scripts come in play and that's a concept that that was introduced by Adobe as well so they have",
    "start": "692790",
    "end": "698930"
  },
  {
    "text": "specific folders that are trusted where you can put your scripts in them if they",
    "start": "698930",
    "end": "704370"
  },
  {
    "text": "have trusted functions with privileged API is inside them then you can exclude them from non-privileged context by",
    "start": "704370",
    "end": "711510"
  },
  {
    "text": "default there is one directory that comes in Adobe that's actually trusted and if you check your Adobe installation",
    "start": "711510",
    "end": "718020"
  },
  {
    "text": "there's a directory inside it called Java scripts and if you dump any script inside that then basically you can",
    "start": "718020",
    "end": "724320"
  },
  {
    "text": "execute you know privileged api's there is one file inside that dialect e that",
    "start": "724320",
    "end": "731250"
  },
  {
    "text": "comes by default it's a bin file and basically that bin file is a compiled",
    "start": "731250",
    "end": "738779"
  },
  {
    "start": "737000",
    "end": "763000"
  },
  {
    "text": "SpiderMonkey bite code one thing I want to I want to mention here is that I",
    "start": "738779",
    "end": "743880"
  },
  {
    "text": "mentioned that there's a dark context where your document is get gets executed and also there's something else which is",
    "start": "743880",
    "end": "749910"
  },
  {
    "text": "the root context think of it as root which is the higher level and there's doc which is you know the normally user",
    "start": "749910",
    "end": "755310"
  },
  {
    "text": "level okay usually when folder level scripts gets loaded they get loaded in a",
    "start": "755310",
    "end": "760890"
  },
  {
    "text": "root context not in the dock context right but but the doc can still take all these functions from you know normal",
    "start": "760890",
    "end": "767610"
  },
  {
    "start": "763000",
    "end": "824000"
  },
  {
    "text": "context anyway so to decompile this bin file there's a researcher called",
    "start": "767610",
    "end": "774750"
  },
  {
    "text": "who actually you know basically spoke about the whole the whole privileges on privilege thing back in early 2014 and",
    "start": "774750",
    "end": "781260"
  },
  {
    "text": "he released a tool that allows us to decompile the bin file and if you run",
    "start": "781260",
    "end": "786480"
  },
  {
    "text": "the tool base we're gonna end up with with a huge JavaScript file 27,000 lines of JavaScript files basically it's not the",
    "start": "786480",
    "end": "795269"
  },
  {
    "text": "best output if you modify the to a little bit which Jaisal Spelman",
    "start": "795269",
    "end": "800339"
  },
  {
    "text": "one of the guys on our team basically modify the tool so it basically dumps the codec comments as well which is awesome because in that JavaScript code",
    "start": "800339",
    "end": "808019"
  },
  {
    "text": "there are comments that reference you know bugs and stuff like that which is quite quite awesome so once you to",
    "start": "808019",
    "end": "814260"
  },
  {
    "text": "compile the code you're going to end up with you know that that nice JavaScript that contains a lot of trusted functions",
    "start": "814260",
    "end": "820320"
  },
  {
    "text": "that we can actually start calling and you know analyzing and auditing alright",
    "start": "820320",
    "end": "826440"
  },
  {
    "start": "824000",
    "end": "830000"
  },
  {
    "text": "now to the fun part which is basically attacking the engine so first of all why",
    "start": "826440",
    "end": "833240"
  },
  {
    "start": "830000",
    "end": "969000"
  },
  {
    "text": "why am i talking about all this why do we want to bypass restrictions right",
    "start": "833240",
    "end": "839420"
  },
  {
    "text": "there's a couple of points here the first thing is that it's very possible that we can actually use privilege api's",
    "start": "839420",
    "end": "846600"
  },
  {
    "text": "to gain code execution through pure logic chain forget about you know memory",
    "start": "846600",
    "end": "852000"
  },
  {
    "text": "corruptions and all that kind of stuff and it has been proven right back in 2015 we actually found a bunch of",
    "start": "852000",
    "end": "858630"
  },
  {
    "text": "undocumented API is in Acrobat that did a whole bunch of you know input/output",
    "start": "858630",
    "end": "863640"
  },
  {
    "text": "things on disk let's say it allows us to write files delete files create folders and when we found these undocumented API",
    "start": "863640",
    "end": "871769"
  },
  {
    "text": "we were pretty shocked but they were privileged so we needed a API",
    "start": "871769",
    "end": "878220"
  },
  {
    "text": "you know privilege bypass in order to execute these specific functions and basically we used all that chained all",
    "start": "878220",
    "end": "884850"
  },
  {
    "text": "that together and we were able to get code execution through just a logic chain which was awesome the second thing",
    "start": "884850",
    "end": "891449"
  },
  {
    "text": "is that we might be able to trigger more interesting functionalities that say leaked files through these privileged",
    "start": "891449",
    "end": "896519"
  },
  {
    "text": "API is I mean do a bunch of other stuff and most importantly and from what we've",
    "start": "896519",
    "end": "903449"
  },
  {
    "text": "been seeing in the CDI most of the non-privileged api's have been heavily",
    "start": "903449",
    "end": "908610"
  },
  {
    "text": "heavily audited heavily audited due to fuzzing efforts and stuff like that",
    "start": "908610",
    "end": "914279"
  },
  {
    "text": "we've been seeing a lot of you know recently a lot of image parsing vulnerabilities which is awesome don't",
    "start": "914279",
    "end": "920010"
  },
  {
    "text": "get me wrong parting is sweet especially if you can actually trigger it from JavaScript but",
    "start": "920010",
    "end": "925140"
  },
  {
    "text": "it's still better if you have a JavaScript API bug right that said we",
    "start": "925140",
    "end": "931500"
  },
  {
    "text": "came up with a conclusion that the privileged api's have not been audited heavily they have not been touched they",
    "start": "931500",
    "end": "938670"
  },
  {
    "text": "have not been touched though in a point where back in 2016 I found a command",
    "start": "938670",
    "end": "944100"
  },
  {
    "text": "injection in one of these you know privileged API so that's how weak they are right of course it only affected Mac",
    "start": "944100",
    "end": "952470"
  },
  {
    "text": "installations of Acrobat it didn't affect all the installation but it's still a command injection and an API and JavaScript API which which is huge so",
    "start": "952470",
    "end": "961190"
  },
  {
    "text": "that's that's basically it that's you know the reasons why we should",
    "start": "961190",
    "end": "966690"
  },
  {
    "text": "definitely do that so let's talk about discovery I broke it down into multiple",
    "start": "966690",
    "end": "972750"
  },
  {
    "start": "969000",
    "end": "1032000"
  },
  {
    "text": "steps so I mentioned you have you know route context which is the system level",
    "start": "972750",
    "end": "979740"
  },
  {
    "text": "context so the first step is to actually achieve a system level Eva and by system level eval is literally just placing",
    "start": "979740",
    "end": "987390"
  },
  {
    "text": "your code from doc inside a function in the root context which is the folder",
    "start": "987390",
    "end": "992820"
  },
  {
    "text": "level script and get that executed once you get that executed then it's going to execute in root contacts this is the",
    "start": "992820",
    "end": "998400"
  },
  {
    "text": "first step and this is basically just a universal way you can use that all over the place the second step is to find all",
    "start": "998400",
    "end": "1006050"
  },
  {
    "text": "the trusted functions inside the folder level script and that process function",
    "start": "1006050",
    "end": "1011600"
  },
  {
    "text": "must have a begin prove an end proved lock and the last step is basically oh",
    "start": "1011600",
    "end": "1017180"
  },
  {
    "text": "well not the last step inside that begin and prove we have to find something that we can overwrite and basically if we can",
    "start": "1017180",
    "end": "1023900"
  },
  {
    "text": "override that we can override it with a privileged API and then we can get you know privilege escalation or execute",
    "start": "1023900",
    "end": "1030380"
  },
  {
    "text": "that method so let's talk about the first step which is basically acquiring",
    "start": "1030380",
    "end": "1036170"
  },
  {
    "start": "1032000",
    "end": "1080000"
  },
  {
    "text": "a system level or a root level eval so this function AF parse date is at the",
    "start": "1036170",
    "end": "1042079"
  },
  {
    "text": "decompiled function from which is found inside the bin file and since this",
    "start": "1042080",
    "end": "1047150"
  },
  {
    "text": "actually runs in root if you notice you have the long entry argument over there",
    "start": "1047150",
    "end": "1052250"
  },
  {
    "text": "and all the way down where the the arrow is you have an Evo that basically takes an argument which is",
    "start": "1052250",
    "end": "1060169"
  },
  {
    "text": "long entry char at and because we control the long entry argument so then",
    "start": "1060169",
    "end": "1065960"
  },
  {
    "text": "we can actually Forge that argument and basically have char at point to our own JavaScript function so now we actually",
    "start": "1065960",
    "end": "1072409"
  },
  {
    "text": "have a JavaScript function executing in root context that that's the first step so now that let's talk about the",
    "start": "1072409",
    "end": "1078169"
  },
  {
    "text": "escalation and as I mentioned we have to find a function in that folder level",
    "start": "1078169",
    "end": "1083809"
  },
  {
    "start": "1080000",
    "end": "1134000"
  },
  {
    "text": "script that's trusted and it has a beginning and prove block and that's that's the first bug that we actually",
    "start": "1083809",
    "end": "1089929"
  },
  {
    "text": "found which is 2015 3073 it's a very simple bug remember the",
    "start": "1089929",
    "end": "1095690"
  },
  {
    "text": "engine back then it was very weak to a point where it allowed us to actually overwrite system objects technically we",
    "start": "1095690",
    "end": "1102740"
  },
  {
    "text": "should not be overriding collab because it's a system object but that bug basically allowed us to override that",
    "start": "1102740",
    "end": "1109159"
  },
  {
    "text": "specific object so that said if you look at the function it's a trusted function",
    "start": "1109159",
    "end": "1114409"
  },
  {
    "text": "it has a big improv and an improv block and inside it has a call to its doc Center URL all we have to do now since",
    "start": "1114409",
    "end": "1121460"
  },
  {
    "text": "we're in root context is to create our own collabo object with a custom is dark",
    "start": "1121460",
    "end": "1126649"
  },
  {
    "text": "Center URL basically have it point to a privileged API and then get code execution write that code execution well",
    "start": "1126649",
    "end": "1133100"
  },
  {
    "text": "privilege escalation so this is how it",
    "start": "1133100",
    "end": "1138769"
  },
  {
    "text": "looks like you know chaining it all together the first part is basically executes a JavaScript function in root",
    "start": "1138769",
    "end": "1147830"
  },
  {
    "text": "contacts which is using AF parse date of course you know the exploit code is just",
    "start": "1147830",
    "end": "1153830"
  },
  {
    "text": "a function that overrides you know it's ducks enter URL with our custom",
    "start": "1153830",
    "end": "1158950"
  },
  {
    "text": "privilege API in this case it's apt at launch URL which is a privileged API just for POC contact you know just as a",
    "start": "1158950",
    "end": "1167779"
  },
  {
    "text": "POC and then escalate which which technically excuse execute app launch",
    "start": "1167779",
    "end": "1174200"
  },
  {
    "text": "URL from inside the begin prevent improve block it's as simple as that",
    "start": "1174200",
    "end": "1180530"
  },
  {
    "start": "1180000",
    "end": "1203000"
  },
  {
    "text": "so the fix I mentioned that well we can we can overwrite collab we can overwrite",
    "start": "1180530",
    "end": "1185630"
  },
  {
    "text": "app right if you see here I basically overrode collab with app and basically",
    "start": "1185630",
    "end": "1191570"
  },
  {
    "text": "collab now is app so the fix was super simple do not allow that that thing to happen just these are not writable objects so",
    "start": "1191570",
    "end": "1199580"
  },
  {
    "text": "this it was a simple fix did it work it did it actually did so",
    "start": "1199580",
    "end": "1205310"
  },
  {
    "start": "1203000",
    "end": "1283000"
  },
  {
    "text": "basically we were not able to escalate that way but they still left other objects writable and one of the objects",
    "start": "1205310",
    "end": "1212690"
  },
  {
    "text": "is identity which is still writable by the way so identity basically hand",
    "start": "1212690",
    "end": "1219410"
  },
  {
    "text": "contains all the information of the current user who's using that application contains his username his",
    "start": "1219410",
    "end": "1226910"
  },
  {
    "text": "login name his email and if we run a search for identity in the folder level",
    "start": "1226910",
    "end": "1233240"
  },
  {
    "text": "script we will notice that it's used all over the freaking place and in this case it basically references the email",
    "start": "1233240",
    "end": "1240710"
  },
  {
    "text": "property out of identity so we figured out that well if we create a getter for",
    "start": "1240710",
    "end": "1245720"
  },
  {
    "text": "that and execute our own privilege API from inside that getter then basically",
    "start": "1245720",
    "end": "1251330"
  },
  {
    "text": "we bypass it and that's exactly what we did and it was a simple exploit simple bypass so the way they fixed it I",
    "start": "1251330",
    "end": "1260170"
  },
  {
    "text": "personally thought that would actually you know restrict overriding that object",
    "start": "1260170",
    "end": "1266270"
  },
  {
    "text": "but what they did is they denied executing privilege api's from inside",
    "start": "1266270",
    "end": "1271400"
  },
  {
    "text": "gutters which is very good because in that case they would mitigate a whole bunch of you know other similar",
    "start": "1271400",
    "end": "1276500"
  },
  {
    "text": "scenarios inside that folder level script sorry so how did we bypass that",
    "start": "1276500",
    "end": "1284350"
  },
  {
    "start": "1283000",
    "end": "1398000"
  },
  {
    "text": "so I personally thought well okay since they are the Adobe is actually doing a",
    "start": "1284350",
    "end": "1289430"
  },
  {
    "text": "good job in securing you know mostly everything inside the folder level script let me think a little bit outside",
    "start": "1289430",
    "end": "1294650"
  },
  {
    "text": "of the box and target other objects and basically I ran through the global",
    "start": "1294650",
    "end": "1300350"
  },
  {
    "text": "object and the global object is very very interesting because it allows",
    "start": "1300350",
    "end": "1305450"
  },
  {
    "text": "allows us to create variables and to share those variables among you know",
    "start": "1305450",
    "end": "1311270"
  },
  {
    "text": "different contacts so let's say I want to create a variable in a dock but I want to use that same",
    "start": "1311270",
    "end": "1317030"
  },
  {
    "text": "variable another button in another doc you can do that with a global and you",
    "start": "1317030",
    "end": "1322460"
  },
  {
    "text": "can go even further with the global that you can actually save those variables on disk the only caveat here is that it",
    "start": "1322460",
    "end": "1330110"
  },
  {
    "text": "only saves those variables on disk once you close the application so first you",
    "start": "1330110",
    "end": "1335270"
  },
  {
    "text": "create a variable and then it calls an API call set persistent and then it's",
    "start": "1335270",
    "end": "1340310"
  },
  {
    "text": "going to flag it as well save it when you close the application once you close",
    "start": "1340310",
    "end": "1345380"
  },
  {
    "text": "the application that it tries it on disk and then once you launch the application again you can still use those global variables so it's a nice concept I think",
    "start": "1345380",
    "end": "1352610"
  },
  {
    "text": "they killed this in early 2019 that's correct because it's a yeah so the whole idea is",
    "start": "1352610",
    "end": "1359390"
  },
  {
    "text": "basically to create a variable create a getter for it and you know launch",
    "start": "1359390",
    "end": "1364610"
  },
  {
    "text": "launched a privileged API from inside the Gator specifically this works because in the saving process it's",
    "start": "1364610",
    "end": "1370940"
  },
  {
    "text": "actually say say when it's doing the saving it's doing it in a high privilege already so this this was you know it",
    "start": "1370940",
    "end": "1379040"
  },
  {
    "text": "worked flawlessly but it only worked when you're closing the application so basically can trigger the escalation",
    "start": "1379040",
    "end": "1384860"
  },
  {
    "text": "once you close it because it's actually saving it that's at they fixed it",
    "start": "1384860",
    "end": "1391670"
  },
  {
    "text": "basically they denied doing that as well and now they killed the whole global you know save to file kind of thing until",
    "start": "1391670",
    "end": "1399170"
  },
  {
    "start": "1398000",
    "end": "1451000"
  },
  {
    "text": "and then after that in 2016 we just see it well at the CDI we stop doing",
    "start": "1399170",
    "end": "1404540"
  },
  {
    "text": "research and you know privileged api's and and we decided to keep that apart so",
    "start": "1404540",
    "end": "1410990"
  },
  {
    "text": "we started receiving submissions from from external researchers and we received an interesting one from",
    "start": "1410990",
    "end": "1416720"
  },
  {
    "text": "Matthias Kaiser now he works for Apple he's a he's a sharp sharp guy he knows a lot of JavaScript and Java so he",
    "start": "1416720",
    "end": "1424130"
  },
  {
    "text": "approached a problem from a totally different perspective which is through proxies so he scanned the folder level",
    "start": "1424130",
    "end": "1431000"
  },
  {
    "text": "script and he found out that there is there's this thing API called x'q dialogue that's used all over the place",
    "start": "1431000",
    "end": "1437300"
  },
  {
    "text": "and basically it allows you to load dialogues and the application and it's",
    "start": "1437300",
    "end": "1442610"
  },
  {
    "text": "always using a trusted function in a begin and per block so basically this is ideal so what he",
    "start": "1442610",
    "end": "1448750"
  },
  {
    "text": "did he basically grabbed a reference to two x'q dialogue and had it call his own",
    "start": "1448750",
    "end": "1455470"
  },
  {
    "start": "1451000",
    "end": "1491000"
  },
  {
    "text": "handler kind of like setting a trap for it and his handler basically just called",
    "start": "1455470",
    "end": "1460750"
  },
  {
    "text": "a pyramid was able to call a privileged API and he was able to get you know escalation out of it",
    "start": "1460750",
    "end": "1467370"
  },
  {
    "text": "Adobe patched this an interesting way they basically denied having reference",
    "start": "1467370",
    "end": "1472630"
  },
  {
    "text": "to any of these API so now if you try to you know get a reference to app that exit dialog in order to you know have a",
    "start": "1472630",
    "end": "1479170"
  },
  {
    "text": "trap for it or something then you're not gonna be able to do so which was quite interesting that said we left we left",
    "start": "1479170",
    "end": "1486490"
  },
  {
    "text": "the whole topic you know it went idle for a little bit of time until last year I heard rumors that there are some JJ s",
    "start": "1486490",
    "end": "1495070"
  },
  {
    "start": "1491000",
    "end": "1605000"
  },
  {
    "text": "API bypasses out there so I decided to have a look at it again apparently they",
    "start": "1495070",
    "end": "1501610"
  },
  {
    "text": "did harden a lot I thought we did a lot of good job in a good job in hardening you know JavaScript bypasses and stuff",
    "start": "1501610",
    "end": "1507610"
  },
  {
    "text": "like that we cannot overwrite objects we cannot do getters we cannot do global so",
    "start": "1507610",
    "end": "1512650"
  },
  {
    "text": "I was like okay so let me see what I can do so I was like I didn't have a look at objects inside objects so let me let me",
    "start": "1512650",
    "end": "1519880"
  },
  {
    "text": "look at that so I wrote a small script that basically iterates through each system object and checks if there are",
    "start": "1519880",
    "end": "1527170"
  },
  {
    "text": "any objects inside these objects are writable and I found that there's an",
    "start": "1527170",
    "end": "1532330"
  },
  {
    "text": "object in collab called drivers and surprisingly that object was writable I",
    "start": "1532330",
    "end": "1538260"
  },
  {
    "text": "went right ahead to the folder level script you know scanned it see if it's actually being used surprisingly it's",
    "start": "1538260",
    "end": "1544780"
  },
  {
    "text": "being used and basically it's it's calling to functions from inside you know one element of that object which is",
    "start": "1544780",
    "end": "1552700"
  },
  {
    "text": "an array that's at I went ahead and apply the same concept which is basically you know override that collab",
    "start": "1552700",
    "end": "1560080"
  },
  {
    "text": "object with my that that object with my own custom object and set the proto to",
    "start": "1560080",
    "end": "1565390"
  },
  {
    "text": "it because I was hours at that time executing a privileged API from the",
    "start": "1565390",
    "end": "1570610"
  },
  {
    "text": "actual collab object so that said if you want to craft your own fake object it has to have the same prototype of it so",
    "start": "1570610",
    "end": "1577480"
  },
  {
    "text": "that's why I set the prototype to in the end I was patched they hardened",
    "start": "1577480",
    "end": "1584260"
  },
  {
    "text": "it further there was also a bug that I'm not gonna I'm he's probably gonna go",
    "start": "1584260",
    "end": "1589780"
  },
  {
    "text": "over it which was interesting it deals with mutable variables and basically it",
    "start": "1589780",
    "end": "1596920"
  },
  {
    "text": "allowed us to overwrite read-only variables and that's that was a little bit more devastating but I'll let him",
    "start": "1596920",
    "end": "1603070"
  },
  {
    "text": "talk about that thank you so how can I go over the you know defending the engine yes so yeah I've",
    "start": "1603070",
    "end": "1610030"
  },
  {
    "start": "1605000",
    "end": "1627000"
  },
  {
    "text": "talked about attacking very specific engine in a very specific way so I'll",
    "start": "1610030",
    "end": "1615040"
  },
  {
    "text": "try to or you know con try to convey two messages first is how how we can defend",
    "start": "1615040",
    "end": "1620320"
  },
  {
    "text": "against the specific thing but also there is a more general idea about defending JavaScript engines because so",
    "start": "1620320",
    "end": "1627550"
  },
  {
    "start": "1627000",
    "end": "1678000"
  },
  {
    "text": "so to step back the problem is more general than the nacrobat you know the the problem is that that javascript is",
    "start": "1627550",
    "end": "1634150"
  },
  {
    "text": "used in a specific way so javascript was developed long time ago and at the beginning it was according to I know if",
    "start": "1634150",
    "end": "1640810"
  },
  {
    "text": "it's if it's true or not developed in T days in in ten days by Brendan Eich and then it was you know called mocha and it",
    "start": "1640810",
    "end": "1647560"
  },
  {
    "text": "was the goal to introduced functional programming and allow easy you know easier way to write code for web",
    "start": "1647560",
    "end": "1654820"
  },
  {
    "text": "developers and it took almost ten years to come to somewhat stable version of you know in fifth edition in 2009",
    "start": "1654820",
    "end": "1662770"
  },
  {
    "text": "offered some some more stability and introduced Taming of the language through a through strict mode after that",
    "start": "1662770",
    "end": "1668410"
  },
  {
    "text": "the Sterling was a little bit more smoother and now this we have you know incremental improvements to the language",
    "start": "1668410",
    "end": "1673990"
  },
  {
    "text": "but it was not clear where it will go right and and that's that's that's that's good because it gives it gives",
    "start": "1673990",
    "end": "1680830"
  },
  {
    "start": "1678000",
    "end": "1699000"
  },
  {
    "text": "developers a lot of freedom because design decisions is to be easy to learn",
    "start": "1680830",
    "end": "1686470"
  },
  {
    "text": "and it has a lot of Dynamis City it helps the writing the code but it comes with the price it comes with the price",
    "start": "1686470",
    "end": "1691960"
  },
  {
    "text": "in analyzing the code and securing the code that is written in this kind of language it's JavaScript alright and you",
    "start": "1691960",
    "end": "1700150"
  },
  {
    "start": "1699000",
    "end": "1825000"
  },
  {
    "text": "know so so what are the key features that that are at the heart from from",
    "start": "1700150",
    "end": "1705340"
  },
  {
    "text": "securing words or analyzing program analogies perspective right so so the",
    "start": "1705340",
    "end": "1710680"
  },
  {
    "text": "dilemma City right the keep in a misty but before going into a little of that that is also prototype",
    "start": "1710680",
    "end": "1716130"
  },
  {
    "text": "based inheritance which is I think somewhat unusual right it's not typical class based inheritance and when you",
    "start": "1716130",
    "end": "1722850"
  },
  {
    "text": "write code in that in that fashion and you're not used to it you might make some assumption that they do not hold",
    "start": "1722850",
    "end": "1728190"
  },
  {
    "text": "right and and some of the exploits actually reference that where there were some assumptions that prototype will not",
    "start": "1728190",
    "end": "1733800"
  },
  {
    "text": "be writable it already exists or there's some magic there that happens but you know you can you can you can overwrite",
    "start": "1733800",
    "end": "1739830"
  },
  {
    "text": "it in certain way right so and again the enemy city happens to multiple ways there is a way to add or delete",
    "start": "1739830",
    "end": "1747530"
  },
  {
    "text": "prototypes to you know do a lot of modifications on the fly again help developers does not help securing",
    "start": "1747530",
    "end": "1755250"
  },
  {
    "text": "it the the other thing is generation of of dynamic in them called cogeneration",
    "start": "1755250",
    "end": "1760560"
  },
  {
    "text": "travel and friends and also it's not quite statically scoped it means that",
    "start": "1760560",
    "end": "1765720"
  },
  {
    "text": "static analysis if you use with it essentially fails you have to make some assumptions and tricks there at that to",
    "start": "1765720",
    "end": "1771870"
  },
  {
    "text": "make it work certain way so is a pool talk and not I won't dwell on this so",
    "start": "1771870",
    "end": "1778350"
  },
  {
    "text": "Java JavaScript used at all because it extends functionality essentially right and the problem is when you allow the",
    "start": "1778350",
    "end": "1784740"
  },
  {
    "text": "core of the application that has some security critical resources as as a blue mentioned access to you know some image",
    "start": "1784740",
    "end": "1793440"
  },
  {
    "text": "conversion or certain parts that are supposed to be protected or even a privileged version where their workflows",
    "start": "1793440",
    "end": "1799200"
  },
  {
    "text": "that that assumes that your SPDIF is trusted any and can access a file system",
    "start": "1799200",
    "end": "1804230"
  },
  {
    "text": "that kind of you know functionality needs to be protected and and and",
    "start": "1804230",
    "end": "1810480"
  },
  {
    "text": "essentially you can think of it in very abstract way at a two level so so there should be public resources that are",
    "start": "1810480",
    "end": "1815610"
  },
  {
    "text": "accessible to the untrusted API and there should be security political resources and that is valve defined",
    "start": "1815610",
    "end": "1822360"
  },
  {
    "text": "separation of concerns there right and and how is that usually done it's usually done with something called",
    "start": "1822360",
    "end": "1828360"
  },
  {
    "start": "1825000",
    "end": "1873000"
  },
  {
    "text": "reference monitor and it's you you can think of it as a language based sandbox right and and you know as there are",
    "start": "1828360",
    "end": "1835080"
  },
  {
    "text": "sandbox escapes there in you know in a more standard way that is a language based encapsulation escapes right which",
    "start": "1835080",
    "end": "1842220"
  },
  {
    "text": "which Abdul mentioned before and in the challenge is how to play that reference monitor to leak those",
    "start": "1842220",
    "end": "1847720"
  },
  {
    "text": "references right because because if you if you if you if you think about offensive part of the presentation it",
    "start": "1847720",
    "end": "1854260"
  },
  {
    "text": "was always some way to get access to some references and then kind of people from there and X is a critical resource",
    "start": "1854260",
    "end": "1861130"
  },
  {
    "text": "critical reference right so so so this is the implementation problem right in",
    "start": "1861130",
    "end": "1866440"
  },
  {
    "text": "in in one slide just you have to ensure that untrusted API does not have some way to get to the statistical critical",
    "start": "1866440",
    "end": "1873460"
  },
  {
    "start": "1873000",
    "end": "1935000"
  },
  {
    "text": "resource and and and how do you how do you do that what you kept to somehow confine the API that's also ensure that",
    "start": "1873460",
    "end": "1879310"
  },
  {
    "text": "untrusted code does not use public API to access the the security critical resources and you know in the optic",
    "start": "1879310",
    "end": "1886120"
  },
  {
    "text": "sense how how could you how can you think about that so if you can abstract all the bugs that that Abdul showed it",
    "start": "1886120",
    "end": "1893620"
  },
  {
    "text": "would be some variant of this right it would be there is some API public API that each that which is a reference are",
    "start": "1893620",
    "end": "1900070"
  },
  {
    "text": "one for example and a trusted j/s javascript get access to that and from",
    "start": "1900070",
    "end": "1905440"
  },
  {
    "text": "that you can think of it as some sort of tree of of embedded references that that",
    "start": "1905440",
    "end": "1910900"
  },
  {
    "text": "lead to certain parts of the of the program of the program functionality and",
    "start": "1910900",
    "end": "1916720"
  },
  {
    "text": "then imagine there is a part that goes you know through sequence of references to critical research right this is an",
    "start": "1916720",
    "end": "1923500"
  },
  {
    "text": "abstract view of of all of that right this is this is the only when if if you are defending something you have to step",
    "start": "1923500",
    "end": "1929650"
  },
  {
    "text": "back you cannot you cannot possibly go and check every of these things manually right and let me just demonstrate this",
    "start": "1929650",
    "end": "1936010"
  },
  {
    "start": "1935000",
    "end": "2058000"
  },
  {
    "text": "with a simple example alright let's say you want to protect this event queue implementation which is",
    "start": "1936010",
    "end": "1941140"
  },
  {
    "text": "let's say some queue implemented via stack and you have a public API that",
    "start": "1941140",
    "end": "1947020"
  },
  {
    "text": "only pushes you know put stop puts the thing go into the onto that queue and and the goal is not to allow the event",
    "start": "1947020",
    "end": "1955420"
  },
  {
    "text": "queue reference to leak you know so this is just one function and it clearly works you know oh you know it's hope you",
    "start": "1955420",
    "end": "1961750"
  },
  {
    "text": "can convince yourself that there is no way to lik your reference to to event queue however if you just add one more",
    "start": "1961750",
    "end": "1967720"
  },
  {
    "text": "function which is this add which puts theoretically the the event or whatever",
    "start": "1967720",
    "end": "1974110"
  },
  {
    "text": "you are using in some location the things are not so simple anymore so I know if you see how this is",
    "start": "1974110",
    "end": "1980380"
  },
  {
    "text": "diplomatic but it is right you can you can actually leak by adding in in JavaScript there is no rule that the",
    "start": "1980380",
    "end": "1987580"
  },
  {
    "text": "index has to be you know a homogeneous it can be an integer it could be a",
    "start": "1987580",
    "end": "1992740"
  },
  {
    "text": "string so if that string corresponds to the function then if you invoke the same",
    "start": "1992740",
    "end": "1997960"
  },
  {
    "text": "function you will actual you that is the way to liquor reference and that's essentially this is in short simplified",
    "start": "1997960",
    "end": "2007169"
  },
  {
    "text": "version of all the exploit at all the exploits are you know much more complex",
    "start": "2007169",
    "end": "2012630"
  },
  {
    "text": "and involved than they use domain level information to somehow lick the reference and then do something",
    "start": "2012630",
    "end": "2018480"
  },
  {
    "text": "interesting here I just get handle of the reference of course for the exploit you need to do much more thing I mean I'm not saying this is all the story",
    "start": "2018480",
    "end": "2024840"
  },
  {
    "text": "just the critical part of the story right so so you know I I was in academia",
    "start": "2024840",
    "end": "2031260"
  },
  {
    "text": "for a long time so here but to a bunch of this referential bunch of this know quotes my mind and you know very back in",
    "start": "2031260",
    "end": "2037799"
  },
  {
    "text": "there I think this is appropriate because we are being England right and and and sir hall said that you know you",
    "start": "2037799",
    "end": "2044490"
  },
  {
    "text": "can you can construct software in two ways one that it's so simple that there are obviously no mistakes or or strong",
    "start": "2044490",
    "end": "2051000"
  },
  {
    "text": "comforts there are no obvious deficiencies right so ideally we'll go the first route but that would be hard right there could be hard because",
    "start": "2051000",
    "end": "2057240"
  },
  {
    "text": "javascript is hard so the goal so so this sort of ends the first part of my",
    "start": "2057240",
    "end": "2063750"
  },
  {
    "start": "2058000",
    "end": "2142000"
  },
  {
    "text": "talk where I put it in a bigger kind of bigger picture but now I want to talk about how to analyze these things and",
    "start": "2063750",
    "end": "2069240"
  },
  {
    "text": "and how offensive part improve defense through static analysis so I tried",
    "start": "2069240",
    "end": "2074250"
  },
  {
    "text": "multiple approaches and there are multiple ways to to kind of skin the cat if you wish but but but but static",
    "start": "2074250",
    "end": "2080730"
  },
  {
    "text": "analysis is one that kind of worked the best so so for static analysis of",
    "start": "2080730",
    "end": "2087990"
  },
  {
    "text": "JavaScript code there are some no issues to overcome first you know you have to",
    "start": "2087990",
    "end": "2093358"
  },
  {
    "text": "deal with the heap allocation and then you have to dig with aliasing like aliasing in any other programming language enables quick Sharingan a and",
    "start": "2093359",
    "end": "2100980"
  },
  {
    "text": "and across the execution and it's essential feature however it breaks encapsulation breaks modularity and and",
    "start": "2100980",
    "end": "2107760"
  },
  {
    "text": "then when you have to think about in invariant set of on on the go of a logical logic breaks down and",
    "start": "2107760",
    "end": "2113680"
  },
  {
    "text": "that's very very vulnerable to scraping right because you don't have this modular clear view of what is happening",
    "start": "2113680",
    "end": "2119500"
  },
  {
    "text": "right but that's that's because you know you you are trading simplified simplicity of writing for the kind of",
    "start": "2119500",
    "end": "2126990"
  },
  {
    "text": "difficulty of reasoning about what code or or or having silent assumptions that are not quite fleshed out and that has",
    "start": "2126990",
    "end": "2133780"
  },
  {
    "text": "to do a little bit with development of the of the language so I'll talk about start static reasoning of of security",
    "start": "2133780",
    "end": "2140350"
  },
  {
    "text": "policies in a second and you know the kid the he the key thing here is its",
    "start": "2140350",
    "end": "2145390"
  },
  {
    "start": "2142000",
    "end": "2511000"
  },
  {
    "text": "points to analysis because first analysis essentially gives you all this information about how these references",
    "start": "2145390",
    "end": "2151510"
  },
  {
    "text": "are corrected how do you gain access to all these references and in which way",
    "start": "2151510",
    "end": "2156880"
  },
  {
    "text": "they they talk because you know as total there is there is you know by passed",
    "start": "2156880",
    "end": "2163330"
  },
  {
    "text": "onto by passed on to bypass right over the bypass and that's always some bypass of some reference wrap some reference",
    "start": "2163330",
    "end": "2169060"
  },
  {
    "text": "was there that that you think it was not there and only point analysis can give you that information however it's it's very challenging",
    "start": "2169060",
    "end": "2174370"
  },
  {
    "text": "problem you know it's it's a deceptively simple what objects can a variable point right and and even if you look at this",
    "start": "2174370",
    "end": "2180700"
  },
  {
    "text": "this simple example you know four basic points to analysis yeah I won't go into",
    "start": "2180700",
    "end": "2186970"
  },
  {
    "text": "details because I'm running short of time but but but essentially for example if you call identity function you can",
    "start": "2186970",
    "end": "2192880"
  },
  {
    "text": "see that it does not distinguish between a location of a and B right so this is a",
    "start": "2192880",
    "end": "2198310"
  },
  {
    "text": "function constructor for the class and you know you are your mystic certain",
    "start": "2198310",
    "end": "2203530"
  },
  {
    "text": "information and this will introduce imprecision with a lot of false positives it would mean well I either there are",
    "start": "2203530",
    "end": "2210580"
  },
  {
    "text": "too many box that can cut all the bugs or or that I'm just missing something because you know maybe I can reduce this",
    "start": "2210580",
    "end": "2216820"
  },
  {
    "text": "in some way that is you know not not completely understood or not sound I",
    "start": "2216820",
    "end": "2222370"
  },
  {
    "text": "will come back to soundness a little bit later and then you can introduce context sensitivity which essentially adds a",
    "start": "2222370",
    "end": "2227710"
  },
  {
    "text": "cold side so if I then function this call from a specific call side then you can add precision right but that's",
    "start": "2227710",
    "end": "2233650"
  },
  {
    "text": "that's my bigger point is poison ologies is complicated problem right in 2000 you",
    "start": "2233650",
    "end": "2239980"
  },
  {
    "text": "know way back in the day 20 years ago now you know able to I happen to be solve this problem you and we haven't you know it was around",
    "start": "2239980",
    "end": "2248250"
  },
  {
    "text": "800 references about points to analysis and now you know since 2001 there's",
    "start": "2248250",
    "end": "2254710"
  },
  {
    "text": "6,000 more references papers about about the saint of karate and the problem is hard because there is no you know",
    "start": "2254710",
    "end": "2260740"
  },
  {
    "text": "library which you can use which will give you the information and you and you will be able to use that in a simple way and get well I mean this points to there",
    "start": "2260740",
    "end": "2267819"
  },
  {
    "text": "and if I can only make sure there are no parts from you know non from from from",
    "start": "2267819",
    "end": "2273400"
  },
  {
    "text": "reference that is that is public to the to the reference that has security critical research then I'm done it's",
    "start": "2273400",
    "end": "2279430"
  },
  {
    "text": "hard to establish that kind of information it either you get too much parts and then it's useless or it just",
    "start": "2279430",
    "end": "2285609"
  },
  {
    "text": "not sound doesn't give you information and the other difficulty is that how that's how the paper looks like by the",
    "start": "2285609",
    "end": "2290710"
  },
  {
    "text": "way if you if you go to check one of these papers there are impenetrable it's impossible to understand what is going",
    "start": "2290710",
    "end": "2295900"
  },
  {
    "text": "on so I will a different approach where",
    "start": "2295900",
    "end": "2300910"
  },
  {
    "text": "you know instead of instead of giving you an imperative description and implementing everything every time you",
    "start": "2300910",
    "end": "2307660"
  },
  {
    "text": "know a broad standard subak I have to implement kind of scramble because you know offenses you know offenses",
    "start": "2307660",
    "end": "2313480"
  },
  {
    "text": "isometric Tovar defense defense or all those have a harder time even the presentation is harder for me so you",
    "start": "2313480",
    "end": "2319240"
  },
  {
    "text": "know it under on the you know on the on the high level what you need to do is you have to get a program and then see",
    "start": "2319240",
    "end": "2326770"
  },
  {
    "text": "tactically derive to relations in this case assign a lock and a sign that's that's the input and then data logger",
    "start": "2326770",
    "end": "2333400"
  },
  {
    "text": "rules as you can see it's pretty much just base base step and then this step",
    "start": "2333400",
    "end": "2339040"
  },
  {
    "text": "is is essentially the the recursion step which is bottom-up you you build the",
    "start": "2339040",
    "end": "2344410"
  },
  {
    "text": "points to relation bottom-up and then this is just the basic idea basic principle right so 30 years to go this",
    "start": "2344410",
    "end": "2353890"
  },
  {
    "text": "will be a I talk it's not a talk anymore you know dato log is not the cutting edge of artificial intelligence anymore",
    "start": "2353890",
    "end": "2360099"
  },
  {
    "text": "but it's pretty useful in program analysis so just let me demonstrate how",
    "start": "2360099",
    "end": "2365109"
  },
  {
    "text": "you know how you can improve precision of your analysis because that's critical",
    "start": "2365109",
    "end": "2370680"
  },
  {
    "text": "it's critical to improve precision of points to analysis base the information and in in in in our case it was from the",
    "start": "2370680",
    "end": "2377680"
  },
  {
    "text": "information provided by by Abdul sister right because then you you can always improve",
    "start": "2377680",
    "end": "2382780"
  },
  {
    "text": "analysis in a way that you think it will work but you don't know exactly how and it's very hard to add precision to",
    "start": "2382780",
    "end": "2389470"
  },
  {
    "text": "JavaScript without adding specific features that are may be tied to your engine right maybe you need to specify",
    "start": "2389470",
    "end": "2395590"
  },
  {
    "text": "something that is tied to your tension right so even this points to know this that I am presenting is not one size but",
    "start": "2395590",
    "end": "2401560"
  },
  {
    "text": "what I'm arguing that that is a way to develop points to analysis you know for your application potentially or",
    "start": "2401560",
    "end": "2407830"
  },
  {
    "text": "something that you are using quicker right and and and potentially understand",
    "start": "2407830",
    "end": "2413410"
  },
  {
    "text": "problems up front so the kind of higher level I guess point more maybe more",
    "start": "2413410",
    "end": "2420060"
  },
  {
    "text": "theoretical academic point is that the static analysis is is basically combination of mutual recursion and and",
    "start": "2420060",
    "end": "2428350"
  },
  {
    "text": "if you want to implement and imparative Li it becomes super difficult you have this work list that you have to flip if",
    "start": "2428350",
    "end": "2435760"
  },
  {
    "text": "you want to do it efficiently and become super super hard so so the the pragmatic way is to use recently introduced data",
    "start": "2435760",
    "end": "2443290"
  },
  {
    "text": "log analysis it's university of athens that has a lot of good research in that area and they're making good progress",
    "start": "2443290",
    "end": "2448480"
  },
  {
    "text": "there so so let me just show the the one rule that that that would take care of",
    "start": "2448480",
    "end": "2456010"
  },
  {
    "text": "the that would that would attack the vulnerability that abdul hinted at the",
    "start": "2456010",
    "end": "2461410"
  },
  {
    "text": "end that is that is too complicated it will require probably another 25 minutes to talk about and it's captured",
    "start": "2461410",
    "end": "2467260"
  },
  {
    "text": "in in this you know in this to roll so the first rule essentially switchability it's essentially part from one points to",
    "start": "2467260",
    "end": "2473860"
  },
  {
    "text": "to the other relating any two hip locations and mutable access essentially",
    "start": "2473860",
    "end": "2480100"
  },
  {
    "text": "requires the if you remember store field was extension for the field sensitivity and essentially points to information",
    "start": "2480100",
    "end": "2486580"
  },
  {
    "text": "and previous in previously defined reachable information if you apply that concretely to to javascript engine in in",
    "start": "2486580",
    "end": "2494320"
  },
  {
    "text": "PDF it would deal with call up an app and any other object that you want to",
    "start": "2494320",
    "end": "2499630"
  },
  {
    "text": "secure right then it doesn't have to be that in the in the browser it could be some Dom related object right so this is not III though this is not tied to the",
    "start": "2499630",
    "end": "2507400"
  },
  {
    "text": "engine there are some tricks that are tied to the engine but I don't think I I need about them here so the the one other",
    "start": "2507400",
    "end": "2515120"
  },
  {
    "start": "2511000",
    "end": "2729000"
  },
  {
    "text": "point that I would like to make is that post analysis is good but it can get you so far right with security information",
    "start": "2515120",
    "end": "2521840"
  },
  {
    "text": "flow you might be familiar more with that it's the the points to analysis can get even give you more information if",
    "start": "2521840",
    "end": "2528050"
  },
  {
    "text": "you live the level of reasoning from the level from the from the reasoning between expressions and heaps to",
    "start": "2528050",
    "end": "2534580"
  },
  {
    "text": "capabilities right so so let me just step back before I continue with this initial security formation flow has",
    "start": "2534580",
    "end": "2540890"
  },
  {
    "text": "traditionally been seen as well we have some abstract analysis and views points to information as a client right but",
    "start": "2540890",
    "end": "2546950"
  },
  {
    "text": "that doesn't have to be so again there isn't research it's any I think it's very useful some recent academic",
    "start": "2546950",
    "end": "2552290"
  },
  {
    "text": "research that was applied in a real setting is to use it in a way to combine",
    "start": "2552290",
    "end": "2557450"
  },
  {
    "text": "these two talks to two concepts because when you think about it flow if you flow",
    "start": "2557450",
    "end": "2564020"
  },
  {
    "text": "is essentially points to the only thing is the domain of reasoning is not the same and and they're not quite the same",
    "start": "2564020",
    "end": "2569240"
  },
  {
    "text": "because transfer or for example tightness is slightly different than transfer of of heap points to",
    "start": "2569240",
    "end": "2577220"
  },
  {
    "text": "information right but but the key idea is Eastham is to combine those two things and make the analysis powerful",
    "start": "2577220",
    "end": "2583490"
  },
  {
    "text": "Makemake defense more powerful and you know provide more access more richer",
    "start": "2583490",
    "end": "2589040"
  },
  {
    "text": "rules to check for you know four four four parts of the of the information",
    "start": "2589040",
    "end": "2594830"
  },
  {
    "text": "security of the you know flow that potentially lead from tainted source to",
    "start": "2594830",
    "end": "2600800"
  },
  {
    "text": "the critical sink right so and for example if you if you lift this",
    "start": "2600800",
    "end": "2606920"
  },
  {
    "text": "reasoning to to talk about privilege escalation of some heap location in general you could introduce two methods",
    "start": "2606920",
    "end": "2614240"
  },
  {
    "text": "for sensitive sink sink methods and then you have to construct a call graph and so call graph is yet another you know",
    "start": "2614240",
    "end": "2622130"
  },
  {
    "text": "sub lecture about javascript it's it's it's very hard to construct because it's",
    "start": "2622130",
    "end": "2627500"
  },
  {
    "text": "completely dynamic there is no static call graph like in C or or or Java right",
    "start": "2627500",
    "end": "2632960"
  },
  {
    "text": "and so again the rule is very simple my my bigger point is that this is the only",
    "start": "2632960",
    "end": "2639920"
  },
  {
    "text": "way to quickly capture the offensive offensive part too quickly capture what",
    "start": "2639920",
    "end": "2645360"
  },
  {
    "text": "bugs are coming and how to help essentially adjust and leverage static analysis to you know potentially kill",
    "start": "2645360",
    "end": "2651920"
  },
  {
    "text": "small chunks of bugs quickly right and so now let me let me talk a little bit about you know how you know what why",
    "start": "2651920",
    "end": "2659490"
  },
  {
    "text": "couldn't we do that up front why couldn't we just make this analysis 2014",
    "start": "2659490",
    "end": "2665100"
  },
  {
    "text": "or 15 and solve all the problems and you know make JavaScript engine amazing right",
    "start": "2665100",
    "end": "2670200"
  },
  {
    "text": "the thing is that you know there are two there are three competing you know directions in static analysis and",
    "start": "2670200",
    "end": "2676740"
  },
  {
    "text": "ideally you would have both but that's that's impossible right let me flip it on soundness this is soundness in mathematical sense",
    "start": "2676740",
    "end": "2682620"
  },
  {
    "text": "not in in in colloquial sense no soundness that it covers represent all possible program and executions if you",
    "start": "2682620",
    "end": "2688980"
  },
  {
    "text": "go that route and in academia that that has been the traditional route you will you will end up with you will either",
    "start": "2688980",
    "end": "2695610"
  },
  {
    "text": "miss you would either kind of fly or or or you will just ignore that people say",
    "start": "2695610",
    "end": "2701880"
  },
  {
    "text": "well I don't know what happens it catches some bugs and I'm done right and that's the problem because then you won't catch all the bypasses that that",
    "start": "2701880",
    "end": "2708900"
  },
  {
    "text": "that Abdul was talking about so to do the study ie is the idea this to be",
    "start": "2708900",
    "end": "2715530"
  },
  {
    "text": "somewhere in the middle right to be kind of sounding to be you know because every you can't complete the model all",
    "start": "2715530",
    "end": "2721500"
  },
  {
    "text": "execution so you I mean you can but it becomes useless right so what is the",
    "start": "2721500",
    "end": "2726630"
  },
  {
    "text": "interesting point that that again came out of academia is that soundness is not necessary and I I think what I want what",
    "start": "2726630",
    "end": "2733260"
  },
  {
    "start": "2729000",
    "end": "2745000"
  },
  {
    "text": "you hear is to think soundness is not necessary for to make static analysis useful and also you can you can you can",
    "start": "2733260",
    "end": "2739200"
  },
  {
    "text": "leverage offensive research to to kind of gauge your soundness right so the",
    "start": "2739200",
    "end": "2746160"
  },
  {
    "start": "2745000",
    "end": "2763000"
  },
  {
    "text": "soundness is not binary so it's either sound or not sound I mean in strict matter ethically mathematical sense",
    "start": "2746160",
    "end": "2751740"
  },
  {
    "text": "that's true right but when you talk about pragmatic program analysis you want to lever or gauge to sort of adjust",
    "start": "2751740",
    "end": "2758100"
  },
  {
    "text": "what you want to do and and and I think offensive research office lot in that in that direction so okay so so what are",
    "start": "2758100",
    "end": "2766980"
  },
  {
    "start": "2763000",
    "end": "2905000"
  },
  {
    "text": "the takeaways I I think I'm glad to state for the defense but I think attack part was awesome amazing so so what what",
    "start": "2766980",
    "end": "2775890"
  },
  {
    "text": "you know what can we take away from this I think you know despite despite the",
    "start": "2775890",
    "end": "2782249"
  },
  {
    "text": "great influx of bugs and and great research on the offensive side it's still possible to catch up to some",
    "start": "2782249",
    "end": "2788969"
  },
  {
    "text": "extent with with the defense right and then in this in sort of a specific way",
    "start": "2788969",
    "end": "2794309"
  },
  {
    "text": "where you want to limit your problem - you know if you limit problems to JavaScript API s understand the",
    "start": "2794309",
    "end": "2801420"
  },
  {
    "text": "difficulties of the language semantics and try to assure confinement but do it",
    "start": "2801420",
    "end": "2807599"
  },
  {
    "text": "in sort of ingre incremental way decorative specification seems to me the",
    "start": "2807599",
    "end": "2812789"
  },
  {
    "text": "only way to go if you if you want to have kind of a fighting chance against against the you know kind of you know a",
    "start": "2812789",
    "end": "2820410"
  },
  {
    "text": "symmetric nature of offense part and and then again just to reiterate what I said it'll last you know you don't have to",
    "start": "2820410",
    "end": "2827219"
  },
  {
    "text": "have a tool that you know that that you know it will work to prove your code correct you know for my PhD I did that",
    "start": "2827219",
    "end": "2832890"
  },
  {
    "text": "right but it's it's super hard so it's just impossible to prove that that the code is correct so so you have to make",
    "start": "2832890",
    "end": "2840479"
  },
  {
    "text": "trade-offs and you know give up soundness in a certain way and hopefully",
    "start": "2840479",
    "end": "2846059"
  },
  {
    "text": "measure and adjust it in certain certain way and again the III I want to",
    "start": "2846059",
    "end": "2852029"
  },
  {
    "text": "emphasize that highly enough I think Abdul's great research helped very deal in that sense so from the offensive side",
    "start": "2852029",
    "end": "2860689"
  },
  {
    "text": "specifically for Acrobat I think things got you know a little bit harder I think it's still possible to",
    "start": "2860689",
    "end": "2866910"
  },
  {
    "text": "bypass API restrictions there are still a lot of other you know attack surfaces",
    "start": "2866910",
    "end": "2872819"
  },
  {
    "text": "in Acrobat that we didn't cover because they keep you know they keep adding more",
    "start": "2872819",
    "end": "2878009"
  },
  {
    "text": "things over that application so it basically exposes more attack surface than more attack surface so that's it",
    "start": "2878009",
    "end": "2884339"
  },
  {
    "text": "for me if you guys have any vulnerabilities please send them over we're gonna pay you for that",
    "start": "2884339",
    "end": "2889670"
  },
  {
    "text": "shameless plug right but that's it any questions",
    "start": "2889670",
    "end": "2896838"
  },
  {
    "text": "you [Applause]",
    "start": "2898410",
    "end": "2906940"
  }
]