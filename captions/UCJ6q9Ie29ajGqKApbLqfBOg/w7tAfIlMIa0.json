[
  {
    "start": "0",
    "end": "0"
  },
  {
    "text": "welcome to well that escalated quickly my name is saga Dulce I am a senior",
    "start": "30",
    "end": "8940"
  },
  {
    "text": "security researcher for aqua security evidently not with me here today is",
    "start": "8940",
    "end": "15450"
  },
  {
    "text": "Michael journey he couldn't make it but no worries it's for a good reason he just recently",
    "start": "15450",
    "end": "23390"
  },
  {
    "text": "had a new baby so he'll be doing a lot of diapers and I'll be doing this talk",
    "start": "23390",
    "end": "31309"
  },
  {
    "start": "30000",
    "end": "30000"
  },
  {
    "text": "so I want you to focus mainly on three things when we're going through a lot of",
    "start": "31309",
    "end": "39930"
  },
  {
    "text": "slides and a lot of demos we're going to discuss how developers are actually",
    "start": "39930",
    "end": "47309"
  },
  {
    "text": "becoming new targets especially if we're talking about micro service developers",
    "start": "47309",
    "end": "54539"
  },
  {
    "text": "developers who like are in charge of an entire thing an entire container and how",
    "start": "54539",
    "end": "60239"
  },
  {
    "text": "one infection can quickly spread through your entire pipeline and the main course",
    "start": "60239",
    "end": "69180"
  },
  {
    "text": "of this stuff would be an advanced persistent threat against a developer",
    "start": "69180",
    "end": "74760"
  },
  {
    "text": "running in our case docker we're going to dive into the attack",
    "start": "74760",
    "end": "80040"
  },
  {
    "text": "we're going to do three demos it's gonna make it feel like it's maybe a little",
    "start": "80040",
    "end": "85530"
  },
  {
    "text": "bit over complicated but it just for the sake of education it's not sexually",
    "start": "85530",
    "end": "92130"
  },
  {
    "text": "pretty feasible attack and also I want you to look out for two new types of",
    "start": "92130",
    "end": "98520"
  },
  {
    "text": "attack that we're going to introduce today and these are the host rebinding attack and the shadow container attack",
    "start": "98520",
    "end": "105540"
  },
  {
    "text": "and each one of those sort of stands on its own as a sort of a attack vector so",
    "start": "105540",
    "end": "115140"
  },
  {
    "start": "115000",
    "end": "115000"
  },
  {
    "text": "what's on the menu like you expected containers and container development",
    "start": "115140",
    "end": "122390"
  },
  {
    "text": "hopefully if you're in this room like how many people heard about containers know something okay so even if you",
    "start": "122390",
    "end": "130500"
  },
  {
    "text": "haven't we're still going to do a short introduction then we're going to dive straight into",
    "start": "130500",
    "end": "135750"
  },
  {
    "text": "the attack we're going to break it down to three we have a demo for its stage so",
    "start": "135750",
    "end": "142200"
  },
  {
    "text": "it will give you a sense how it works and finally we'll just weave it on",
    "start": "142200",
    "end": "147570"
  },
  {
    "text": "together with a full demo and then hopefully have something smart to say",
    "start": "147570",
    "end": "153930"
  },
  {
    "text": "about it containers so what are they if you have",
    "start": "153930",
    "end": "160800"
  },
  {
    "start": "160000",
    "end": "160000"
  },
  {
    "text": "ever been to talk about containers you've probably seen this slide a hundred times so I don't know why you're",
    "start": "160800",
    "end": "167070"
  },
  {
    "text": "taking a picture just yesterday I've been in a talk and I saw the exact same",
    "start": "167070",
    "end": "174750"
  },
  {
    "text": "slide so whenever you want to say what a container is you always show like a",
    "start": "174750",
    "end": "179880"
  },
  {
    "text": "virtual machine on the left side against a container on the right so if I'm a",
    "start": "179880",
    "end": "187110"
  },
  {
    "text": "developer and I want to develop an application and I want to isolate it",
    "start": "187110",
    "end": "192540"
  },
  {
    "text": "using a virtual machine I see that I have a lot more work to do I have to take care of the entire guest operating",
    "start": "192540",
    "end": "199140"
  },
  {
    "text": "system to spin up and take down a virtual machine takes a lot more time",
    "start": "199140",
    "end": "205800"
  },
  {
    "text": "and heavier than a container and a container is simply a process a process",
    "start": "205800",
    "end": "212670"
  },
  {
    "text": "that is isolated it's running in its own little virtual world so it has its own",
    "start": "212670",
    "end": "219690"
  },
  {
    "text": "file system network it can spins its own processes and basically it's a mini",
    "start": "219690",
    "end": "228570"
  },
  {
    "text": "virtual machine that shares the same house and you don't really have to add the entire guest operating system and of",
    "start": "228570",
    "end": "236610"
  },
  {
    "text": "course I'll have the container engine that helps me manage these containers to start them stop them spin them up or",
    "start": "236610",
    "end": "243680"
  },
  {
    "text": "kill them so that's good news that's good news if I am a container developer",
    "start": "243680",
    "end": "251700"
  },
  {
    "start": "248000",
    "end": "248000"
  },
  {
    "text": "because now I can write for example Linux containers and I can spin them up over Linux for obviously and windows",
    "start": "251700",
    "end": "261239"
  },
  {
    "text": "also and also Mac so I can develop and run a container anywhere",
    "start": "261239",
    "end": "266700"
  },
  {
    "text": "and of also you know this it is a big game because also Microsoft are now",
    "start": "266700",
    "end": "273180"
  },
  {
    "text": "actually enabling you to write and run Windows containers and just to get a",
    "start": "273180",
    "end": "279780"
  },
  {
    "text": "sense of how big this thing is let's look at of course darker engine and",
    "start": "279780",
    "end": "287010"
  },
  {
    "start": "283000",
    "end": "283000"
  },
  {
    "text": "these are some statistics from the beginning of the year I believe of dr.",
    "start": "287010",
    "end": "292860"
  },
  {
    "text": "Khan they presented the growth of and the adoption of containers over the past three years and we see pretty high",
    "start": "292860",
    "end": "301020"
  },
  {
    "text": "numbers numbers like 900,000 which is number of dick Euler different doctor",
    "start": "301020",
    "end": "306900"
  },
  {
    "text": "application on the public docker hub with over 12 billion pools and 14",
    "start": "306900",
    "end": "313230"
  },
  {
    "text": "million different house pulling together so there's a pretty big community here",
    "start": "313230",
    "end": "318840"
  },
  {
    "text": "of developers writing containers and",
    "start": "318840",
    "end": "323870"
  },
  {
    "text": "users actually using and running containers so if there's a big community there's a big taxes surface and we have",
    "start": "323870",
    "end": "331290"
  },
  {
    "start": "330000",
    "end": "330000"
  },
  {
    "text": "something to attack so why not go after these developers so developers are",
    "start": "331290",
    "end": "337020"
  },
  {
    "text": "basically getting paid to write code and features they don't get to paid they",
    "start": "337020",
    "end": "342720"
  },
  {
    "text": "don't get paid to do like things securely so if security gets in the way",
    "start": "342720",
    "end": "350220"
  },
  {
    "text": "like you need to open a port on your darker daemon to enable some tool to",
    "start": "350220",
    "end": "359580"
  },
  {
    "text": "interact with it but it's not that secure maybe you're gonna do it because it helps you like get things done so",
    "start": "359580",
    "end": "366620"
  },
  {
    "text": "these are people that are very technical they very have very high confidence but",
    "start": "366620",
    "end": "373590"
  },
  {
    "text": "almost by definition have access to sensitive data like code IP and in the",
    "start": "373590",
    "end": "380100"
  },
  {
    "text": "case of developing containers registries so if you take like we said a single",
    "start": "380100",
    "end": "387090"
  },
  {
    "text": "developer and now you remove to like continuous development so you always pushing new micro services and",
    "start": "387090",
    "end": "394560"
  },
  {
    "text": "containers out to production even a single developer may cause your entire",
    "start": "394560",
    "end": "399710"
  },
  {
    "text": "pipelined to be infected so that's the",
    "start": "399710",
    "end": "404870"
  },
  {
    "text": "intro out of the way and let's jump into the attack and let's have a bird's eye",
    "start": "404870",
    "end": "410330"
  },
  {
    "text": "view of the entire attack so all I ask for this attack to work is a victim",
    "start": "410330",
    "end": "419320"
  },
  {
    "text": "running darker and the darker demon has it has a port listening for incoming",
    "start": "419320",
    "end": "427180"
  },
  {
    "text": "HTTP requests and that may look like I'm asking a lot but like I said the",
    "start": "427180",
    "end": "433370"
  },
  {
    "text": "developer needs to get things done and by default for example if you install",
    "start": "433370",
    "end": "438890"
  },
  {
    "text": "docker for Windows in previous versions that was the default installation so",
    "start": "438890",
    "end": "444590"
  },
  {
    "text": "whenever you install the docker for Windows it has TCP port open listening",
    "start": "444590",
    "end": "450290"
  },
  {
    "text": "for incoming quests and the second thing I'm going to do is simply get the",
    "start": "450290",
    "end": "455300"
  },
  {
    "text": "attacker to visit some malicious website social engineering water-holding insert",
    "start": "455300",
    "end": "463610"
  },
  {
    "text": "clever method here whatever it takes just like to get him to visit the website and then from there we're going",
    "start": "463610",
    "end": "470180"
  },
  {
    "start": "470000",
    "end": "470000"
  },
  {
    "text": "to escalate the attack we're going to deep dive on a Windows 10 attack",
    "start": "470180",
    "end": "475250"
  },
  {
    "text": "scenario so like I said we have three phases of the attack the first phase",
    "start": "475250",
    "end": "481070"
  },
  {
    "text": "like many other attacks it's a form of remote code execution and we'll do that",
    "start": "481070",
    "end": "486110"
  },
  {
    "text": "by simply abusing the darker API the second step is an attack we call",
    "start": "486110",
    "end": "492430"
  },
  {
    "text": "privilege escalation as it's a new form of attack similar to another attack that",
    "start": "492430",
    "end": "498950"
  },
  {
    "text": "will introduce us we'll have an intro here and say why we chose to do a different form of attack and that is a",
    "start": "498950",
    "end": "505760"
  },
  {
    "text": "kind of privilege escalation over the darker daemon so now we'll have full",
    "start": "505760",
    "end": "511220"
  },
  {
    "text": "control of the darker demon and we'll ask ourself what you do next and the answer will be to run shadow containers",
    "start": "511220",
    "end": "518690"
  },
  {
    "text": "and shadow containers is a method of persisting inside the host or more",
    "start": "518690",
    "end": "524480"
  },
  {
    "text": "accurately inside the hypervisor so I start off with step 1 so let's abused",
    "start": "524480",
    "end": "533510"
  },
  {
    "text": "dr. API so the idea to boost the dr. API came to us when we try to understand how",
    "start": "533510",
    "end": "539810"
  },
  {
    "start": "534000",
    "end": "534000"
  },
  {
    "text": "does this magic work when you're sitting on your laptop running Windows for",
    "start": "539810",
    "end": "545090"
  },
  {
    "text": "example or Mac Iran duck L'Orange something and you have a container running on your machine doesn't make",
    "start": "545090",
    "end": "552110"
  },
  {
    "text": "sense and there's of course no magic here what happens is actually doctor",
    "start": "552110",
    "end": "558710"
  },
  {
    "text": "installs a virtual machine on your host and that's a Linux machine called mobile",
    "start": "558710",
    "end": "565070"
  },
  {
    "text": "Linux and it's actually running Dugger and the container that you are running",
    "start": "565070",
    "end": "570680"
  },
  {
    "text": "is actually running inside a virtual machine and the dr. demian on the house",
    "start": "570680",
    "end": "576650"
  },
  {
    "text": "is actually talking through a virtual socket to the virtual machine and finally on the other side you have the",
    "start": "576650",
    "end": "585260"
  },
  {
    "text": "client which can be command line or anything else talking through a restful",
    "start": "585260",
    "end": "590420"
  },
  {
    "text": "api with the dr. demon so this connection can happen over a UNIX socket",
    "start": "590420",
    "end": "595880"
  },
  {
    "text": "you can have an over named pipe or like we said in our case and the default installation of previous",
    "start": "595880",
    "end": "603530"
  },
  {
    "text": "Windows version over TCP so why not simply change the client to malicious",
    "start": "603530",
    "end": "609650"
  },
  {
    "text": "web page and do whatever we want right so it's a little bit complicated so it's",
    "start": "609650",
    "end": "617000"
  },
  {
    "text": "a little complicated and the complication mainly counts for something called the Sabre region policy and also",
    "start": "617000",
    "end": "625010"
  },
  {
    "text": "if you're not familiar with the same origin policy when your browser loads up",
    "start": "625010",
    "end": "630830"
  },
  {
    "start": "626000",
    "end": "626000"
  },
  {
    "text": "a page it may look like the pages like this one single thing but of course the",
    "start": "630830",
    "end": "635930"
  },
  {
    "text": "reality is that it's made up of dozens of different elements each one can come",
    "start": "635930",
    "end": "641150"
  },
  {
    "text": "from a different domain or host so it's",
    "start": "641150",
    "end": "646460"
  },
  {
    "text": "the browser's job to make sure that one element doesn't read or write data from",
    "start": "646460",
    "end": "651830"
  },
  {
    "text": "another element that belongs to a different domain and did everybody see",
    "start": "651830",
    "end": "660190"
  },
  {
    "start": "656000",
    "end": "656000"
  },
  {
    "text": "Underpants in the last slide if you pay attention the rest of you",
    "start": "660190",
    "end": "667260"
  },
  {
    "text": "failed so it does so with something called the same origin policy and the",
    "start": "667260",
    "end": "674160"
  },
  {
    "text": "same origin policy simply says that if a request is not the request is not from",
    "start": "674160",
    "end": "682650"
  },
  {
    "text": "the same origin if it has a different port domain or protocol and if it's not",
    "start": "682650",
    "end": "689550"
  },
  {
    "text": "from the same origin if it's made across the regions then it's subject to more",
    "start": "689550",
    "end": "695690"
  },
  {
    "text": "limitations you can send any request that you want only get help post methods",
    "start": "695690",
    "end": "701900"
  },
  {
    "text": "you can read back the response body of requests and you can't post a body a",
    "start": "701900",
    "end": "709440"
  },
  {
    "text": "request with the body to another element so we said we don't want to start off",
    "start": "709440",
    "end": "714540"
  },
  {
    "text": "the attack with doing something malicious we want to start off clean so we went ahead and list all the darker",
    "start": "714540",
    "end": "720810"
  },
  {
    "start": "719000",
    "end": "719000"
  },
  {
    "text": "api's that didn't violate the same origin policy and immediately after a",
    "start": "720810",
    "end": "727710"
  },
  {
    "text": "couple of minutes we said okay there's a single API call that looks interesting",
    "start": "727710",
    "end": "733470"
  },
  {
    "text": "and that is the build a P I so when you",
    "start": "733470",
    "end": "739020"
  },
  {
    "text": "are building when it doesn't work so",
    "start": "739020",
    "end": "744510"
  },
  {
    "text": "when you're building a container or an image more accurately what you're",
    "start": "744510",
    "end": "749610"
  },
  {
    "text": "telling the doctor engine is to look at a text file called the docker file and",
    "start": "749610",
    "end": "756780"
  },
  {
    "text": "then go lie by line by line and tell it how to layer up your image and if you",
    "start": "756780",
    "end": "762690"
  },
  {
    "text": "ever written a container of public down this or maybe Daleks a hundred times maybe didn't even notice",
    "start": "762690",
    "end": "768750"
  },
  {
    "text": "but there is a command here that is really enables you to do like bad things",
    "start": "768750",
    "end": "773910"
  },
  {
    "text": "and it is of course the run command because when you're building an image",
    "start": "773910",
    "end": "780930"
  },
  {
    "text": "you're actually executing code so in my case I can just load up whatever shell",
    "start": "780930",
    "end": "786540"
  },
  {
    "text": "script that I want and run it so if you dive deeper into the API call will",
    "start": "786540",
    "end": "793350"
  },
  {
    "text": "notice some interesting parameters the first one is the tag parameter so",
    "start": "793350",
    "end": "798700"
  },
  {
    "text": "you can build an image and you can name it whatever you want makes it easier later in the attack to reference it",
    "start": "798700",
    "end": "805180"
  },
  {
    "text": "delete it for example the second tag is",
    "start": "805180",
    "end": "810430"
  },
  {
    "text": "the remote tag and that's also very interesting because it tells the darker",
    "start": "810430",
    "end": "815620"
  },
  {
    "text": "demon to go ahead and pull your build context from a remote git repository so",
    "start": "815620",
    "end": "822670"
  },
  {
    "text": "that's an entire kinetic control so you can depending on your victim you can actually have the entire git repository",
    "start": "822670",
    "end": "830400"
  },
  {
    "text": "do some fun do ransomware do reconnaissance do whatever you want and pull it and run it and the last thing is",
    "start": "830400",
    "end": "839830"
  },
  {
    "text": "the network mode so now you can control what is the network stack of your running container is it running without",
    "start": "839830",
    "end": "847150"
  },
  {
    "text": "a network not a good idea or is it running with the host network so that you can actually access the network",
    "start": "847150",
    "end": "853210"
  },
  {
    "text": "stack of the hosts so if you demonstrate that this actually works it can run code",
    "start": "853210",
    "end": "858610"
  },
  {
    "start": "856000",
    "end": "856000"
  },
  {
    "text": "we're going to do a simple reverse shell and all we need is a simple a simple",
    "start": "858610",
    "end": "865030"
  },
  {
    "text": "post request and that post request will be the direct the darker demon to pull",
    "start": "865030",
    "end": "873010"
  },
  {
    "text": "from our malicious repository and in our repository we simply have a reverse",
    "start": "873010",
    "end": "879070"
  },
  {
    "text": "shell so the demo and any other demo basically starts like this so this is",
    "start": "879070",
    "end": "885640"
  },
  {
    "start": "884000",
    "end": "884000"
  },
  {
    "text": "the victims machine he has the virtual machine running the containers he has",
    "start": "885640",
    "end": "891250"
  },
  {
    "text": "the darker daemon on the host and he has his browser visiting the malicious web page so all the malicious weapons does",
    "start": "891250",
    "end": "899020"
  },
  {
    "text": "is if you post commands it goes to the darker demon it pulls from the github",
    "start": "899020",
    "end": "905050"
  },
  {
    "text": "and now we have a running container and that running container what it does is",
    "start": "905050",
    "end": "910440"
  },
  {
    "text": "opens up a reverse shell so let's see how does it work so this demo we show",
    "start": "910440",
    "end": "917940"
  },
  {
    "text": "two windows of the victim and two windows of the attacker and like many",
    "start": "917940",
    "end": "924520"
  },
  {
    "text": "other demos we start by listing images the containers over the victim so he has",
    "start": "924520",
    "end": "930889"
  },
  {
    "text": "only one image and all the attacker does is simply host the malicious web page",
    "start": "930889",
    "end": "938410"
  },
  {
    "text": "using Python and all that webpage does again is it does a simple post message",
    "start": "938410",
    "end": "945559"
  },
  {
    "text": "and I'm waiting for incoming connections from for my rivers shell right so now as",
    "start": "945559",
    "end": "955489"
  },
  {
    "text": "the victim I simply visit some malicious web page and I'm seeing like the button",
    "start": "955489",
    "end": "962059"
  },
  {
    "text": "that I can click and then I get pawned and I'll also see the entire building",
    "start": "962059",
    "end": "967189"
  },
  {
    "text": "process feedback but these are things that like in a real world that you can hide from the user",
    "start": "967189",
    "end": "973489"
  },
  {
    "text": "and while the attack is going on I can actually look at my duck or demon and",
    "start": "973489",
    "end": "979309"
  },
  {
    "text": "see that I have a running container and the images that that container pulled",
    "start": "979309",
    "end": "984739"
  },
  {
    "text": "like we said the container simply opened up overs shell back to the attacker and",
    "start": "984739",
    "end": "990160"
  },
  {
    "text": "here on the attacker side I already have the shell so now I can list the network",
    "start": "990160",
    "end": "997459"
  },
  {
    "text": "interface and I see the hv in zero interface of the virtual machine so we",
    "start": "997459",
    "end": "1004389"
  },
  {
    "text": "prove that we can run malicious code on the virtual machine by simply visiting a",
    "start": "1004389",
    "end": "1012369"
  },
  {
    "text": "website without breaking anything without doing anything to malicious so when we notify darker this simply said",
    "start": "1012369",
    "end": "1019539"
  },
  {
    "start": "1018000",
    "end": "1018000"
  },
  {
    "text": "okay so from now on like many other installation the TCP is simply an opt-in",
    "start": "1019539",
    "end": "1025209"
  },
  {
    "text": "feature so you can stick a figure it on any house but it's not on by default so",
    "start": "1025209",
    "end": "1032409"
  },
  {
    "text": "let's move on to the second stage and that is the host rebinding attack so we",
    "start": "1032409",
    "end": "1039668"
  },
  {
    "text": "ask ourselves what should we do next so we have a building container running and we don't",
    "start": "1039669",
    "end": "1046870"
  },
  {
    "start": "1040000",
    "end": "1040000"
  },
  {
    "text": "have full access to the dr. demian API again because of the same origin policy and the running container has actually a",
    "start": "1046870",
    "end": "1056230"
  },
  {
    "start": "1048000",
    "end": "1048000"
  },
  {
    "text": "limited lifetime it won't run forever so we ask ourselves what can we do",
    "start": "1056230",
    "end": "1061750"
  },
  {
    "text": "I know what you're thinking I can see it in your heads screaming out why not do",
    "start": "1061750",
    "end": "1067630"
  },
  {
    "text": "DNS rebinding and bypass that pesky same origin policy",
    "start": "1067630",
    "end": "1073289"
  },
  {
    "text": "so again if you spoiler we're not going to use DNS rebinding we'll do something",
    "start": "1073289",
    "end": "1078789"
  },
  {
    "start": "1075000",
    "end": "1075000"
  },
  {
    "text": "else some believe it was discovered the work around 20 years ago really became",
    "start": "1078789",
    "end": "1085299"
  },
  {
    "text": "popular around 2007 with paper by Stanford I think with cooperation with",
    "start": "1085299",
    "end": "1092110"
  },
  {
    "text": "Dan Kaminsky and then it spawned a lot of other talks in blackhat and in our",
    "start": "1092110",
    "end": "1099940"
  },
  {
    "text": "say what is DNS rebinding how to protect against it I think today there's also a",
    "start": "1099940",
    "end": "1106150"
  },
  {
    "text": "talk in DEFCON talking about DNS rebinding so just to get the gist of how",
    "start": "1106150",
    "end": "1112299"
  },
  {
    "start": "1111000",
    "end": "1111000"
  },
  {
    "text": "it works we're not going to deep dive into the industry buying if I am an attacker and I want to attack an",
    "start": "1112299",
    "end": "1118690"
  },
  {
    "text": "internal IP address that I can't get through because of firewalls and stuff like that",
    "start": "1118690",
    "end": "1124330"
  },
  {
    "text": "I can set up a domain called attacker comm and I get the victim to visit attacker comm so he's going to query",
    "start": "1124330",
    "end": "1132179"
  },
  {
    "text": "he's going to perform a DNS query asking where is attacker calm and I'm going to",
    "start": "1132179",
    "end": "1137559"
  },
  {
    "text": "ask answer with two different IPS my IP and of course the internal IP that I",
    "start": "1137559",
    "end": "1142690"
  },
  {
    "text": "want to attack then is going to do HTTP GET load up some malicious script that",
    "start": "1142690",
    "end": "1148929"
  },
  {
    "text": "malicious script is going to pull do another request and now the attacker",
    "start": "1148929",
    "end": "1154630"
  },
  {
    "text": "performs disappear reset in and some versions of browser perhaps say to",
    "start": "1154630",
    "end": "1161200"
  },
  {
    "text": "themselves okay there was a reset I have two IPS maybe I'll go to the second one and now he thinks that the internal IP",
    "start": "1161200",
    "end": "1168940"
  },
  {
    "text": "actually belongs to attacker calm so now we basically bypass the same origin",
    "start": "1168940",
    "end": "1174730"
  },
  {
    "text": "policy because there is no limitation everything that we can do on attacker comm the malicious script can do on the",
    "start": "1174730",
    "end": "1181659"
  },
  {
    "text": "internal IP so like I said we're not going to use DNS rebinding first because",
    "start": "1181659",
    "end": "1188860"
  },
  {
    "start": "1183000",
    "end": "1183000"
  },
  {
    "text": "it may fail it's an old attack you can discover it it happens like over your perimeter",
    "start": "1188860",
    "end": "1195460"
  },
  {
    "text": "you can detect it over the network you can detect it in DNS and block it and me",
    "start": "1195460",
    "end": "1200770"
  },
  {
    "text": "is an attacker I don't want to set up a domain and maintain it and just some money and make sure it doesn't get",
    "start": "1200770",
    "end": "1207399"
  },
  {
    "text": "blocked it's too it's too much work so instead we're going to attack local name",
    "start": "1207399",
    "end": "1214899"
  },
  {
    "text": "resolution protocols like LM n R which is a Microsoft protocol stands for local",
    "start": "1214899",
    "end": "1222700"
  },
  {
    "text": "link multicast name resolution basically it's DNS performed in environments where",
    "start": "1222700",
    "end": "1231100"
  },
  {
    "text": "you don't have a DNS server so every host can simply broadcast says hey who",
    "start": "1231100",
    "end": "1237039"
  },
  {
    "text": "knows such-and-such and you can respond and say this is me or this is the IP address so it's very",
    "start": "1237039",
    "end": "1246309"
  },
  {
    "start": "1246000",
    "end": "1246000"
  },
  {
    "text": "easy to attack anybody can spoof responses and pretend to be some",
    "start": "1246309",
    "end": "1252039"
  },
  {
    "text": "somebody else and what's also interesting that by default your host",
    "start": "1252039",
    "end": "1259090"
  },
  {
    "text": "will query every interface using a lemon our including virtual interface so of",
    "start": "1259090",
    "end": "1266080"
  },
  {
    "text": "course it will include the virtual machine and if you spoof llm and now",
    "start": "1266080",
    "end": "1271210"
  },
  {
    "text": "replies they don't get cached on the host so it's the browser's job to catch them and browsers do it for just about a",
    "start": "1271210",
    "end": "1279789"
  },
  {
    "text": "minute and we said maybe we can pay bypass that and we successfully did so",
    "start": "1279789",
    "end": "1285700"
  },
  {
    "text": "in Firefox so in Firefox if you simply delay the HTTP get the response for an",
    "start": "1285700",
    "end": "1292899"
  },
  {
    "text": "HTTP request in half a second it will get a little bit mad and will issue another element or request so instead of",
    "start": "1292899",
    "end": "1300039"
  },
  {
    "text": "waiting 60 seconds to perform the attack you can do it in half a second so let's",
    "start": "1300039",
    "end": "1305860"
  },
  {
    "start": "1305000",
    "end": "1305000"
  },
  {
    "text": "do the demo of host rebinding again we're going to start with visiting",
    "start": "1305860",
    "end": "1311950"
  },
  {
    "text": "i'm sorry we're going to start off where we already have a reminder container running from the first step and that",
    "start": "1311950",
    "end": "1319510"
  },
  {
    "text": "reminder container running this job is to perform the host rebinding attack now",
    "start": "1319510",
    "end": "1325419"
  },
  {
    "text": "we're going to visit some local host called pond on the same port that the dr. Damon is",
    "start": "1325419",
    "end": "1331060"
  },
  {
    "text": "listening so the first thing is going to happen it's going to query LM an hour",
    "start": "1331060",
    "end": "1336580"
  },
  {
    "text": "where is pond and the reminder container will answer that he is pond so now we're",
    "start": "1336580",
    "end": "1342820"
  },
  {
    "text": "going to load some malicious script and that scripts job is basically to wade out the caching of the browser and it",
    "start": "1342820",
    "end": "1350560"
  },
  {
    "text": "does so by simply querying for a path and that path doesn't exist on the",
    "start": "1350560",
    "end": "1356260"
  },
  {
    "text": "reminder container so it does so every five seconds but finally the caching",
    "start": "1356260",
    "end": "1361570"
  },
  {
    "text": "expires and another request is issued and this time the reminder says I'm on",
    "start": "1361570",
    "end": "1368650"
  },
  {
    "text": "the localhost so now the same path get actually an HTTP 200 from the dr. demian",
    "start": "1368650",
    "end": "1375310"
  },
  {
    "text": "because that's a valid request so now we know that we bypass the same origin policy and we can do whatever we want",
    "start": "1375310",
    "end": "1381760"
  },
  {
    "text": "just for the demo we're going to read some secrets from docker and secrets is",
    "start": "1381760",
    "end": "1387460"
  },
  {
    "text": "like the most sensitive information is the password and keys and tokens that you want to protect you put them in",
    "start": "1387460",
    "end": "1393520"
  },
  {
    "text": "secrets and we're going to post them back to the container so let's see how",
    "start": "1393520",
    "end": "1399700"
  },
  {
    "text": "that works so I'm going to start off a demo we're listing the secrets from my",
    "start": "1399700",
    "end": "1407760"
  },
  {
    "text": "browser on the localhost and there's no problem there I'm talking directly with the docker demon and these is this is my",
    "start": "1407760",
    "end": "1415300"
  },
  {
    "text": "secret this is called my secret and I'm going to run a reminder container",
    "start": "1415300",
    "end": "1422070"
  },
  {
    "text": "directly from command line and it's going to use the host the network of the",
    "start": "1422070",
    "end": "1428770"
  },
  {
    "text": "host so it does like we said it's spoofing LM in our request and its host some malicious script now I'm going to",
    "start": "1428770",
    "end": "1437680"
  },
  {
    "text": "visit pond I'm going to open the debug window and see the script in action so",
    "start": "1437680",
    "end": "1447340"
  },
  {
    "text": "this is the page from the reminder container and on the debug window I see",
    "start": "1447340",
    "end": "1452680"
  },
  {
    "text": "that every few seconds I'm querying from for the images Jason and I'm failing and",
    "start": "1452680",
    "end": "1459610"
  },
  {
    "text": "this takes like I said about a minute but for your convenience we fast-forwarded it so it only takes and",
    "start": "1459610",
    "end": "1467559"
  },
  {
    "text": "twenty seconds so it will speed up a little bit and after a minute the",
    "start": "1467559",
    "end": "1475090"
  },
  {
    "text": "caching expires and we'll get an HTTP we'll do the query again and we get a",
    "start": "1475090",
    "end": "1481029"
  },
  {
    "text": "good response so we'll read the secrets and then we'll post them back to the container so from the container we were",
    "start": "1481029",
    "end": "1487450"
  },
  {
    "text": "able to read secrets from the docker diamond so to recap the first step is",
    "start": "1487450",
    "end": "1495330"
  },
  {
    "start": "1491000",
    "end": "1491000"
  },
  {
    "text": "abusive docker API and then get remote code executed and this is a reminder",
    "start": "1495330",
    "end": "1501549"
  },
  {
    "text": "container so now it's the reminder container job to do privilege escalation",
    "start": "1501549",
    "end": "1507370"
  },
  {
    "text": "and basically bypass the same-origin policy so now we have full access to the",
    "start": "1507370",
    "end": "1512830"
  },
  {
    "text": "docker demon so the question is what do we do now so we have full access to the",
    "start": "1512830",
    "end": "1518320"
  },
  {
    "text": "dock or demon what do we do now and the answer there are many answers we chose",
    "start": "1518320",
    "end": "1525340"
  },
  {
    "text": "to go with something called shadow containers so the problem I have is I",
    "start": "1525340",
    "end": "1530980"
  },
  {
    "start": "1529000",
    "end": "1529000"
  },
  {
    "text": "can run a privileged container which will have full access to the virtual machine access to the filesystem I also",
    "start": "1530980",
    "end": "1539529"
  },
  {
    "text": "have access to the internal network but I am not really concealed anybody can",
    "start": "1539529",
    "end": "1545350"
  },
  {
    "text": "see my running container by simply doing docker PS you'll see the container you",
    "start": "1545350",
    "end": "1551470"
  },
  {
    "text": "can kill it and I'm not really persistent and that is because whenever",
    "start": "1551470",
    "end": "1556480"
  },
  {
    "text": "you restart your machine or whenever you restart your doctor daemon the virtual",
    "start": "1556480",
    "end": "1562600"
  },
  {
    "text": "machine is booting up from an image so everything that you left on the machine gets deleted and that is except of",
    "start": "1562600",
    "end": "1570580"
  },
  {
    "text": "course for the state of docker so how do you make it persistent and conceal so",
    "start": "1570580",
    "end": "1578019"
  },
  {
    "start": "1573000",
    "end": "1573000"
  },
  {
    "text": "let's start by assuming to understand how it works we already have a shutdown",
    "start": "1578019",
    "end": "1583840"
  },
  {
    "text": "script written to the virtual machine and the job of the shadowing script is",
    "start": "1583840",
    "end": "1590679"
  },
  {
    "text": "whenever there is a shutdown it runs a container and I have another script which I call",
    "start": "1590679",
    "end": "1598659"
  },
  {
    "text": "my script this is basically the attack script and this does something bad this",
    "start": "1598659",
    "end": "1604719"
  },
  {
    "text": "installs a kernel model or a service or scans the network or it does whatever or",
    "start": "1604719",
    "end": "1611379"
  },
  {
    "text": "ransomware whatever it does it does it's inside the script and this is the attack",
    "start": "1611379",
    "end": "1616960"
  },
  {
    "text": "script so once I'm going to reset the darker demon it's going to run a shadow",
    "start": "1616960",
    "end": "1623379"
  },
  {
    "text": "container and the job of the shadow container is to save the script and the attack State inside the container",
    "start": "1623379",
    "end": "1629440"
  },
  {
    "text": "so whenever the darker demon boots up again it's going to go back into the",
    "start": "1629440",
    "end": "1634960"
  },
  {
    "text": "virtual machine so now we have a sort of a ping pong situation so whenever you",
    "start": "1634960",
    "end": "1640559"
  },
  {
    "text": "have the docker container running you have your entire attack inside the",
    "start": "1640559",
    "end": "1645909"
  },
  {
    "text": "virtual machines so the user and most other tools can't really see it and when",
    "start": "1645909",
    "end": "1651969"
  },
  {
    "text": "the container I'm sorry when the demon reboots you have the state of the attack",
    "start": "1651969",
    "end": "1658119"
  },
  {
    "text": "saved inside the shadow container and when it boots up again it goes back to the script so we have a ping pong go",
    "start": "1658119",
    "end": "1663789"
  },
  {
    "text": "between the attack on the virtual machine and on the container so this is",
    "start": "1663789",
    "end": "1668830"
  },
  {
    "start": "1668000",
    "end": "1668000"
  },
  {
    "text": "the actual code for a shadow script that I used in this demo it's a very simple",
    "start": "1668830",
    "end": "1674200"
  },
  {
    "text": "code first I simply load into an environment variable my attack script and I save it",
    "start": "1674200",
    "end": "1682179"
  },
  {
    "text": "inside an environment variable on the container I'm running privileged containers as you can see I'm going to",
    "start": "1682179",
    "end": "1689259"
  },
  {
    "text": "name it shadow and I'm using the restart policy so that tells the dr. demon to",
    "start": "1689259",
    "end": "1694389"
  },
  {
    "text": "continuously reboot the container until some condition happens the image that I",
    "start": "1694389",
    "end": "1701499"
  },
  {
    "text": "use is also not available I think in newer version of docker",
    "start": "1701499",
    "end": "1706509"
  },
  {
    "text": "it's called the NS Enter dr. from windows and a Center image so in all the",
    "start": "1706509",
    "end": "1711909"
  },
  {
    "text": "versions of docker for Windows you when you stalled it it came with the NS enter image and even if you delete it and you",
    "start": "1711909",
    "end": "1718239"
  },
  {
    "text": "rebuilt darker you still have that image so it's the perfect one to use nothing",
    "start": "1718239",
    "end": "1725799"
  },
  {
    "text": "that contaminates the host and the container is actually running the attack script and here for example",
    "start": "1725799",
    "end": "1733660"
  },
  {
    "start": "1732000",
    "end": "1732000"
  },
  {
    "text": "the attack strip is also very simple a simple if an ass else clause so if I'm",
    "start": "1733660",
    "end": "1739860"
  },
  {
    "text": "if the machine is actually booting up I'm going to look if there is a persistent this is the shot on script if",
    "start": "1739860",
    "end": "1747160"
  },
  {
    "text": "it's there then it means I've still haven't put it up if it's not there I'm simply writing back the shell on script",
    "start": "1747160",
    "end": "1753670"
  },
  {
    "text": "I write back the attack script from the environment variable I install the",
    "start": "1753670",
    "end": "1759250"
  },
  {
    "text": "shadow script and then I'm doing something evil so my evil thoughts are not that sophisticated I simply write a",
    "start": "1759250",
    "end": "1766390"
  },
  {
    "text": "shadow file to the virtual machine and then it commits suicide so let's see a",
    "start": "1766390",
    "end": "1773170"
  },
  {
    "text": "demo of running shadow container directly from command line so if I go",
    "start": "1773170",
    "end": "1778270"
  },
  {
    "text": "and run it from command line if you look I'm sorry before I run from command line I'll show you that I have nothing up my",
    "start": "1778270",
    "end": "1783850"
  },
  {
    "text": "sleeves I'll show you the images and the containers so we have two images and two",
    "start": "1783850",
    "end": "1789430"
  },
  {
    "text": "containers and we'll use an inspector container and we use that to look inside",
    "start": "1789430",
    "end": "1795190"
  },
  {
    "text": "the virtual machine so we see that we don't have any shadow files",
    "start": "1795190",
    "end": "1800970"
  },
  {
    "text": "so now we'll run this big command which runs the shadow container and after we",
    "start": "1800970",
    "end": "1808240"
  },
  {
    "text": "were on it again we'll lose the images and containers so again I have two images into containers so nothing",
    "start": "1808240",
    "end": "1814990"
  },
  {
    "text": "changed apparently but when I run this Specter I will see I have a shadow file",
    "start": "1814990",
    "end": "1821970"
  },
  {
    "text": "there we go so doesn't this doesn't prove anything just that I have a file I",
    "start": "1821970",
    "end": "1828400"
  },
  {
    "text": "can also see the shadow script that we've seen in the presentation this is",
    "start": "1828400",
    "end": "1833800"
  },
  {
    "text": "the my script the attack script and we have the shadow script so to prove this",
    "start": "1833800",
    "end": "1839290"
  },
  {
    "text": "actually persists we have to reset the darker demon and this is that what I'm",
    "start": "1839290",
    "end": "1845350"
  },
  {
    "text": "doing going to reset it so take a couple of seconds and once it's up we're going",
    "start": "1845350",
    "end": "1852520"
  },
  {
    "text": "to repeat the entire thing",
    "start": "1852520",
    "end": "1855690"
  },
  {
    "text": "right yeah so it's up again and I'm",
    "start": "1862560",
    "end": "1869320"
  },
  {
    "text": "going to repeat the entire thing I'm going to list I'm going to run the inspector I'm going to use a little bit",
    "start": "1869320",
    "end": "1875620"
  },
  {
    "text": "later and now I'm going to look at the",
    "start": "1875620",
    "end": "1881530"
  },
  {
    "text": "images so again we have two images two containers apparently nothing changed when we use the inspector we still see",
    "start": "1881530",
    "end": "1888910"
  },
  {
    "text": "the shadow file so we persisted throughout reboots so now we have",
    "start": "1888910",
    "end": "1895360"
  },
  {
    "text": "basically the final piece of the puzzle so let's see the entire attack flow so",
    "start": "1895360",
    "end": "1904600"
  },
  {
    "text": "it's gonna start off like all the previous demos the victim is going to",
    "start": "1904600",
    "end": "1910150"
  },
  {
    "start": "1905000",
    "end": "1905000"
  },
  {
    "text": "visit shadow containers dot-com and the first step like we said we're going to",
    "start": "1910150",
    "end": "1916180"
  },
  {
    "text": "abuse docker API and we'll get a reminder container running the reminder",
    "start": "1916180",
    "end": "1922030"
  },
  {
    "text": "containers job is to perform host reburning attack so now we have full",
    "start": "1922030",
    "end": "1927040"
  },
  {
    "text": "access to the doctor daemon so if i have full access to the document i can now",
    "start": "1927040",
    "end": "1932910"
  },
  {
    "text": "run a privilege payload and that privilege payload can write the shutdown",
    "start": "1932910",
    "end": "1938860"
  },
  {
    "text": "script to the virtual machine now all i have to do some housekeeping i will",
    "start": "1938860",
    "end": "1944170"
  },
  {
    "text": "delete the reminder and the payload from the virtual machine and now whenever we",
    "start": "1944170",
    "end": "1951520"
  },
  {
    "text": "reset the doctor demon on the host it's going to create the shadow container and",
    "start": "1951520",
    "end": "1956650"
  },
  {
    "text": "of course when the demon is up again it's going to write down the shuttle script in my script back to the virtual",
    "start": "1956650",
    "end": "1962530"
  },
  {
    "text": "machine so let's see this whole thing working from end to end so again i'm",
    "start": "1962530",
    "end": "1970900"
  },
  {
    "text": "going to show that i have nothing up our sleeves we have two images and two",
    "start": "1970900",
    "end": "1977260"
  },
  {
    "text": "containers running on the host and we're going to use a specter again to look at",
    "start": "1977260",
    "end": "1983050"
  },
  {
    "text": "the underlying virtual machine and of course there is no shadow file right so",
    "start": "1983050",
    "end": "1991810"
  },
  {
    "text": "let's start the attack I'm going to visit chatter container calm and again I'm going to click a",
    "start": "1991810",
    "end": "2000250"
  },
  {
    "text": "button we have two iframes here the top one will show you the entire building",
    "start": "2000250",
    "end": "2005320"
  },
  {
    "text": "process of the container again in a real attack you can hide this from the user",
    "start": "2005320",
    "end": "2011049"
  },
  {
    "text": "and on the bottom we have another iframe waiting for the reminder container to",
    "start": "2011049",
    "end": "2018340"
  },
  {
    "text": "load the malicious script and perform the host rebinding attack so we'll take",
    "start": "2018340",
    "end": "2023650"
  },
  {
    "text": "a couple of seconds I'm waiting for the reminder and the rebuttal is now running",
    "start": "2023650",
    "end": "2029970"
  },
  {
    "text": "serving the malicious script and spoofing llm in our response so only",
    "start": "2029970",
    "end": "2036400"
  },
  {
    "text": "while this attack is going on you can actually you can actually go to the host",
    "start": "2036400",
    "end": "2041530"
  },
  {
    "text": "and see the containers that is running so I see the running container the",
    "start": "2041530",
    "end": "2049658"
  },
  {
    "text": "reminder container I can see the images that it pulled so I have some extra images from before but this whole thing",
    "start": "2049659",
    "end": "2057158"
  },
  {
    "text": "will be deleted after the attack is complete and like we said it takes a couple of time for for the cache to",
    "start": "2057159",
    "end": "2064358"
  },
  {
    "text": "clear up but once it does we get an HTTP 200 back to our malicious script and now",
    "start": "2064359",
    "end": "2072490"
  },
  {
    "text": "we can go ahead and run the privilege payload so we run the privilege payload",
    "start": "2072490",
    "end": "2077888"
  },
  {
    "text": "and we start it and after it starts we can simply remove it and delete whatever",
    "start": "2077889",
    "end": "2084190"
  },
  {
    "text": "images it pulled so now if I go back to",
    "start": "2084190",
    "end": "2089980"
  },
  {
    "text": "the house I'll see that I'm back to the first state I have two images and I too",
    "start": "2089980",
    "end": "2095740"
  },
  {
    "text": "have two containers so nothing is left behind and again we're going to use the",
    "start": "2095740",
    "end": "2102130"
  },
  {
    "text": "inspector to look at the virtual machine and we have the shadow file but I'll be",
    "start": "2102130",
    "end": "2111970"
  },
  {
    "text": "I'll neg and I'll prove that it still works by resetting the doctor daemon so",
    "start": "2111970",
    "end": "2118920"
  },
  {
    "text": "we'll know that it's actually persistent",
    "start": "2118920",
    "end": "2123510"
  },
  {
    "text": "and again when it's back up we're going to repeat the whole thing to prove",
    "start": "2126369",
    "end": "2131859"
  },
  {
    "text": "persistency and that nothing is left behind so the doctor diamond is up again",
    "start": "2131859",
    "end": "2142999"
  },
  {
    "text": "we're going to use the specter look inside a virtual machine and we still have the shadow file so the attack",
    "start": "2142999",
    "end": "2149749"
  },
  {
    "text": "worked and finally these are again the",
    "start": "2149749",
    "end": "2155420"
  },
  {
    "text": "attack script and the shutdown script",
    "start": "2155420",
    "end": "2160630"
  },
  {
    "text": "and finally just to make sure there are no images left behind in the containers",
    "start": "2163299",
    "end": "2170359"
  },
  {
    "text": "so again two images into containers so",
    "start": "2170359",
    "end": "2176869"
  },
  {
    "text": "what does it mean what we've actually saw is a form of a PT if we still use",
    "start": "2176869",
    "end": "2186650"
  },
  {
    "start": "2181000",
    "end": "2181000"
  },
  {
    "text": "that word advanced persistent threat so we have persistency with the shadow",
    "start": "2186650",
    "end": "2192589"
  },
  {
    "text": "container we are concealed inside the virtual machine we have a very low",
    "start": "2192589",
    "end": "2200420"
  },
  {
    "text": "forensic footprint and that is because the darker engine on the host logs the",
    "start": "2200420",
    "end": "2208130"
  },
  {
    "text": "initial step of the attack but everything else that we do is inside the virtual machine and you have full",
    "start": "2208130",
    "end": "2214670"
  },
  {
    "text": "control the virtual machine you can manipulate these logs or delete them and probably nobody's actually pulling logs",
    "start": "2214670",
    "end": "2222349"
  },
  {
    "text": "from the virtual machine actually looking at them and we have persistent access to the internal enterprise",
    "start": "2222349",
    "end": "2229729"
  },
  {
    "text": "network from that virtual house because it has access to the network and",
    "start": "2229729",
    "end": "2234880"
  },
  {
    "text": "possibly if the developer is running some writing micro services you can",
    "start": "2234880",
    "end": "2242960"
  },
  {
    "start": "2235000",
    "end": "2235000"
  },
  {
    "text": "infect the images that is writing and you can infect the entire pipeline so",
    "start": "2242960",
    "end": "2252739"
  },
  {
    "start": "2252000",
    "end": "2252000"
  },
  {
    "text": "you may get the sense from the attack that it only will it will only work on Ducker",
    "start": "2252739",
    "end": "2260810"
  },
  {
    "text": "running on Windows 10 but you can change the attack depending on your victim so",
    "start": "2260810",
    "end": "2266850"
  },
  {
    "text": "if it's running Mac you can you don't you can't do host rebinding attack",
    "start": "2266850",
    "end": "2272700"
  },
  {
    "text": "because meant don't use the Microsoft protocols but you can still do DNS",
    "start": "2272700",
    "end": "2277800"
  },
  {
    "text": "rebinding attack and then move back to share the containers to persist on the Mac you can do a similar attack on Linux",
    "start": "2277800",
    "end": "2284430"
  },
  {
    "text": "and you can perform again the DNS rebinding and after you do so you can",
    "start": "2284430",
    "end": "2290370"
  },
  {
    "text": "run a privilege container which give you full access to the host so you don't really have to use shadow containers you",
    "start": "2290370",
    "end": "2296670"
  },
  {
    "text": "can choose to do so but you can do something else and the same thing is true for Windows containers so when",
    "start": "2296670",
    "end": "2303720"
  },
  {
    "text": "you're running on Windows containers you can still go through the abusing of the API host rebinding attack and then when",
    "start": "2303720",
    "end": "2310260"
  },
  {
    "text": "you run a privilege container you have full access basically through the windows host so you can still run a",
    "start": "2310260",
    "end": "2315660"
  },
  {
    "text": "shallow container but you can do something else so what should you do",
    "start": "2315660",
    "end": "2324020"
  },
  {
    "start": "2321000",
    "end": "2321000"
  },
  {
    "text": "don't expose your container API it's a bad idea if you do have to expose it",
    "start": "2324080",
    "end": "2331590"
  },
  {
    "text": "make sure your clients are actually authenticated and if you can't for",
    "start": "2331590",
    "end": "2337620"
  },
  {
    "text": "example in some versions of docker it doesn't work to enable authentication then simply block it don't forget to",
    "start": "2337620",
    "end": "2346920"
  },
  {
    "text": "analyze your container engine logs they may can contain some interesting",
    "start": "2346920",
    "end": "2352970"
  },
  {
    "text": "information like if you're being attacked don't use NetBIOS or lmn are if you",
    "start": "2352970",
    "end": "2361320"
  },
  {
    "text": "don't have to they're also very vulnerable to all sorts of attack and",
    "start": "2361320",
    "end": "2367580"
  },
  {
    "text": "the bottom line is you don't know how you're going to be attacked so make sure you always scan images on the registries",
    "start": "2367580",
    "end": "2374940"
  },
  {
    "text": "and always monitor your containers in runtime so these are our black hats",
    "start": "2374940",
    "end": "2381300"
  },
  {
    "start": "2378000",
    "end": "2378000"
  },
  {
    "text": "sound bites they asked everybody to attend black had to have a slide of some",
    "start": "2381300",
    "end": "2386790"
  },
  {
    "text": "BOTS bytes I'm the only one who did it so",
    "start": "2386790",
    "end": "2391829"
  },
  {
    "text": "developers are the new targets there are two new forms of attack like we said",
    "start": "2391829",
    "end": "2396880"
  },
  {
    "text": "before the host rebinding and the shadow containers and please people protect your pipes always scan",
    "start": "2396880",
    "end": "2403270"
  },
  {
    "text": "images and monitors the containers in runtime will have a white paper on our",
    "start": "2403270",
    "end": "2409390"
  },
  {
    "text": "website probably also on the blackhat website and of course you can hit us up",
    "start": "2409390",
    "end": "2416770"
  },
  {
    "text": "on or me or whoever on Twitter or follow us or follow up with questions so thank",
    "start": "2416770",
    "end": "2424570"
  },
  {
    "text": "you all for coming and [Applause]",
    "start": "2424570",
    "end": "2435780"
  }
]