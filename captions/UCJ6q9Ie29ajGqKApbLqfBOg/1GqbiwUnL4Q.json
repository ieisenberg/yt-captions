[
  {
    "text": "thanks for the introduction and uh thanks for being here we are a group of",
    "start": "80",
    "end": "5319"
  },
  {
    "text": "security researchers from B cyber Innovation unit I'm n Le shly uh lock",
    "start": "5319",
    "end": "14240"
  },
  {
    "text": "new in unfortunately Jim just cannot be here today so we are very happy to present",
    "start": "14240",
    "end": "21199"
  },
  {
    "text": "our tools to support interactive binary",
    "start": "21199",
    "end": "26000"
  },
  {
    "text": "analysis first we're going to provide you some background of what is interactive binary analysis",
    "start": "26720",
    "end": "32759"
  },
  {
    "text": "part going to show you um what's the research area what's the gap between",
    "start": "32760",
    "end": "39360"
  },
  {
    "text": "research and the existing security practice but we will focus on to show",
    "start": "39360",
    "end": "45360"
  },
  {
    "text": "you how to use our tool including two and cbas to do interactive ban analysis",
    "start": "45360",
    "end": "52399"
  },
  {
    "text": "we use the two demos to show the tool in action um for",
    "start": "52399",
    "end": "58480"
  },
  {
    "text": "you to understand better at the end of draw",
    "start": "58480",
    "end": "62960"
  },
  {
    "text": "conclusions research in the past few years had been focusing on automated binary",
    "start": "64320",
    "end": "69640"
  },
  {
    "text": "analysis and in certain areas good progress had be made for example AO",
    "start": "69640",
    "end": "76200"
  },
  {
    "text": "automated white box fing uh the research represented by a s system which",
    "start": "76200",
    "end": "83200"
  },
  {
    "text": "which uh developed researched by macrosoft research and developed as an internal Tool uh in macrosoft",
    "start": "83200",
    "end": "91200"
  },
  {
    "text": "had been credited for finding oneir of the vulnerabilities on Windows 7",
    "start": "91200",
    "end": "97399"
  },
  {
    "text": "operating system so that's good progress could be made there but",
    "start": "97399",
    "end": "103200"
  },
  {
    "text": "unfortunately most of the binary analysis still cannot be automated so even in the areas that I",
    "start": "103200",
    "end": "110159"
  },
  {
    "text": "just mentioned uh had been automated not all the problems can be",
    "start": "110159",
    "end": "116119"
  },
  {
    "text": "answered for example U automated White white Bo fing give you approach to",
    "start": "116119",
    "end": "123320"
  },
  {
    "text": "systematically generate inputs to cover more execution code coverage in order to",
    "start": "123320",
    "end": "130280"
  },
  {
    "text": "be able to Tri trigger more vulnerabilities but it does not guarantee you the varability be",
    "start": "130280",
    "end": "138000"
  },
  {
    "text": "triggered also even if a bug or varability be triggered it does not provide your Insight of the",
    "start": "138000",
    "end": "144920"
  },
  {
    "text": "exploitability of the varability or how hard to make a working exploit so all",
    "start": "144920",
    "end": "150280"
  },
  {
    "text": "this answers had to be found in an interactive uh incremental interative",
    "start": "150280",
    "end": "156720"
  },
  {
    "text": "approach where the humans experience exper U skills are the key factors are",
    "start": "156720",
    "end": "165440"
  },
  {
    "text": "key to the success of binary analysis so it is our goal to design and",
    "start": "165440",
    "end": "172319"
  },
  {
    "text": "develop tools to help you to perform inactive B",
    "start": "172319",
    "end": "178640"
  },
  {
    "text": "analysis so interactive B analysis can be applicable to many security areas such",
    "start": "178760",
    "end": "185959"
  },
  {
    "text": "as vulnerability analysis concurrency analysis or mware",
    "start": "185959",
    "end": "192280"
  },
  {
    "text": "analysis at this time our tools mainly to result from vulnerability",
    "start": "192280",
    "end": "199440"
  },
  {
    "text": "analysis we believe the tools can help secur professionals working on both",
    "start": "199440",
    "end": "205720"
  },
  {
    "text": "Sid of the vulnerability problem for people who work on the protection site either you are a",
    "start": "205720",
    "end": "213840"
  },
  {
    "text": "commercial software developer or you a security analyst working for Solutions",
    "start": "213840",
    "end": "220400"
  },
  {
    "text": "on funding the vulnerability we can get you finding quicker we can get you to",
    "start": "220400",
    "end": "226360"
  },
  {
    "text": "identify the root cause of the vulnerability much faster for people who are the on on the",
    "start": "226360",
    "end": "232799"
  },
  {
    "text": "other side of the vulnerability problem such as a pin tester or explo writer you",
    "start": "232799",
    "end": "240159"
  },
  {
    "text": "can use this tool to refine your exploits to make it uh better more",
    "start": "240159",
    "end": "247519"
  },
  {
    "text": "partable more reliable and more",
    "start": "247519",
    "end": "251879"
  },
  {
    "text": "stable so in some way the interactive analysis it's like connecting the do",
    "start": "252680",
    "end": "258959"
  },
  {
    "text": "scen here I'm assuming most people have the experience of connecting the dots or",
    "start": "258959",
    "end": "264600"
  },
  {
    "text": "at least know how to connect the dots so a picture like this you have have a lot",
    "start": "264600",
    "end": "270199"
  },
  {
    "text": "of D before you make the right connections it does not make",
    "start": "270199",
    "end": "276638"
  },
  {
    "text": "sense so binary security analysis in some way has s similarities as the",
    "start": "277000",
    "end": "283720"
  },
  {
    "text": "connecting do game but there are significant differences",
    "start": "283720",
    "end": "289520"
  },
  {
    "text": "too first in the binary secur analysis the Dos can move for example many people",
    "start": "289520",
    "end": "297240"
  },
  {
    "text": "may have the same experience as mine that you see a problem you want to look",
    "start": "297240",
    "end": "302919"
  },
  {
    "text": "further you run the same program with the same input but it don't to see the same problem again so the do moving",
    "start": "302919",
    "end": "311199"
  },
  {
    "text": "there and second compare with a typical connection Dot",
    "start": "311199",
    "end": "317479"
  },
  {
    "text": "Game there a lot of instructions executed a lot of data created and",
    "start": "317479",
    "end": "324080"
  },
  {
    "text": "propagated even for a short scenario so that the milons of lines millions of",
    "start": "324080",
    "end": "329240"
  },
  {
    "text": "dots need to connect last but not the",
    "start": "329240",
    "end": "334759"
  },
  {
    "text": "least it's not only you need to connect the existing dots you also needed to",
    "start": "334759",
    "end": "340479"
  },
  {
    "text": "finding find new dots the dots are not there already the dots are",
    "start": "340479",
    "end": "347120"
  },
  {
    "text": "invisable and I think that's more important because that's where usually",
    "start": "347120",
    "end": "352840"
  },
  {
    "text": "you find the surprising results that's where the Vol ability or I expected disc discovery has been",
    "start": "352840",
    "end": "361800"
  },
  {
    "text": "made so in a way we design our tools to support all this three",
    "start": "362600",
    "end": "368319"
  },
  {
    "text": "challenges particularly our front end to three will",
    "start": "368319",
    "end": "375479"
  },
  {
    "text": "use rep playay techniques to support fixing the dots and we use the T",
    "start": "375479",
    "end": "380840"
  },
  {
    "text": "analysis to support connecting the dots to it together with cbas which is",
    "start": "380840",
    "end": "387720"
  },
  {
    "text": "our C platform binary uh automated system using symbolic",
    "start": "387720",
    "end": "393919"
  },
  {
    "text": "execution techniques to help you explore new",
    "start": "393919",
    "end": "399319"
  },
  {
    "text": "dots before we dive into the details how our approach work let's take a quick",
    "start": "399440",
    "end": "405759"
  },
  {
    "text": "look about what the gaps between the existing research and integrative ban analysis as I mentioned already existing",
    "start": "405759",
    "end": "414599"
  },
  {
    "text": "research had been focusing on automated analysis for the most part so it does",
    "start": "414599",
    "end": "420360"
  },
  {
    "text": "not directly support interactive analysis you can see a few things here",
    "start": "420360",
    "end": "426759"
  },
  {
    "text": "there no practical tools that had integrated the techniques I mentioned",
    "start": "426759",
    "end": "431879"
  },
  {
    "text": "earlier including replay uh T analysis and symbolic",
    "start": "431879",
    "end": "437800"
  },
  {
    "text": "execution ban analysis usually works on a Twist uh from different targets from",
    "start": "437800",
    "end": "443759"
  },
  {
    "text": "different platforms or even devices there's no easy tool or no tool",
    "start": "443759",
    "end": "449160"
  },
  {
    "text": "that can uniformly extract the TST from your target at the heart of the binary",
    "start": "449160",
    "end": "458520"
  },
  {
    "text": "analysis current research us should focusing one instruction set uh there's no",
    "start": "459000",
    "end": "467440"
  },
  {
    "text": "unified approaches that can make it very easily part to a new instruction set",
    "start": "467440",
    "end": "473479"
  },
  {
    "text": "consider the it's the commonly used the mobile system like Android uh embeded",
    "start": "473479",
    "end": "480879"
  },
  {
    "text": "system routers switches this R non X6",
    "start": "480879",
    "end": "486960"
  },
  {
    "text": "platform there's there's no practic tools for us to easily apply to a",
    "start": "486960",
    "end": "492400"
  },
  {
    "text": "different ins set so our tools are designed to fill",
    "start": "492400",
    "end": "500400"
  },
  {
    "text": "the gaps by using existing techniques",
    "start": "500400",
    "end": "505759"
  },
  {
    "text": "available and particularly our approaches is uh Dynamic approach it's a",
    "start": "505759",
    "end": "511759"
  },
  {
    "text": "Twist based where we do the analysis offline the interactive ban",
    "start": "511759",
    "end": "517719"
  },
  {
    "text": "analysis it's a new idea for people who are interested in this idea and want to",
    "start": "517719",
    "end": "522919"
  },
  {
    "text": "get more details about uh our our research result uh you can look for the",
    "start": "522919",
    "end": "528920"
  },
  {
    "text": "reference one which is our paper uh going to appear soon for people who want",
    "start": "528920",
    "end": "534880"
  },
  {
    "text": "to not not already familiar with the popular techniques",
    "start": "534880",
    "end": "540320"
  },
  {
    "text": "such as Dynamic analysis symbolic tion Twi replay uh here are few references at",
    "start": "540320",
    "end": "546760"
  },
  {
    "text": "the end of the talk so our goal is to make it practical",
    "start": "546760",
    "end": "553079"
  },
  {
    "text": "uh to make a tool that uh can be used by the Security Professionals from the",
    "start": "553079",
    "end": "559360"
  },
  {
    "text": "tools that you are already familiar with uh merged into your workflow the da",
    "start": "559360",
    "end": "564959"
  },
  {
    "text": "workflow without much uh learning curve so now TR our front end to",
    "start": "564959",
    "end": "572760"
  },
  {
    "text": "integrate with I Pro we can port to another platform if the need",
    "start": "572760",
    "end": "580320"
  },
  {
    "text": "arises so uh leverages The Bu debugging infrastructure to enable twist",
    "start": "580320",
    "end": "586360"
  },
  {
    "text": "connection from different targets different operating systems the reason",
    "start": "586360",
    "end": "591440"
  },
  {
    "text": "why it works is the debug infrastructure is supported by most of the modern",
    "start": "591440",
    "end": "596800"
  },
  {
    "text": "processors by the operating systems so even the real devices such as Android",
    "start": "596800",
    "end": "603240"
  },
  {
    "text": "Cisco router switch they have the GDP server to enable you to debug",
    "start": "603240",
    "end": "609480"
  },
  {
    "text": "it and RCBS is uh using a technique C based on",
    "start": "609480",
    "end": "615959"
  },
  {
    "text": "the intermediate represenation not directly on the native uh twist because",
    "start": "615959",
    "end": "621240"
  },
  {
    "text": "the native instruction twist will definitely tie you the implementation directly to the particular insruction",
    "start": "621240",
    "end": "628440"
  },
  {
    "text": "set particularly here we use the Z which is the reverse engineering intermediate",
    "start": "628440",
    "end": "635240"
  },
  {
    "text": "representation language from bav to um develop by zamic U lat purchased by",
    "start": "635240",
    "end": "642720"
  },
  {
    "text": "Google to enable the translation from native instruction and mapping to the uh",
    "start": "642720",
    "end": "650040"
  },
  {
    "text": "interm representation so our cbas is designed",
    "start": "650040",
    "end": "656680"
  },
  {
    "text": "to support both automated analysis and of and the interactive analysis of",
    "start": "656680",
    "end": "662880"
  },
  {
    "text": "course here uh two is the interactive analysis application buil on cbas and that's the",
    "start": "662880",
    "end": "669600"
  },
  {
    "text": "focus for today's talk we'll leave with the cbas automated analysis application",
    "start": "669600",
    "end": "676639"
  },
  {
    "text": "such as automated F U at a different",
    "start": "676639",
    "end": "682880"
  },
  {
    "text": "occasions so to summarize our tools can support fixing dots connect the dots and",
    "start": "683360",
    "end": "690480"
  },
  {
    "text": "export new dots uh let me introduce running example of",
    "start": "690480",
    "end": "697160"
  },
  {
    "text": "simple example just to help you understand the concept the our",
    "start": "697160",
    "end": "702880"
  },
  {
    "text": "approaches this example started from a input from a file and you might go",
    "start": "702880",
    "end": "709320"
  },
  {
    "text": "through some input transformation and with certain part conditions are met it might trigger",
    "start": "709320",
    "end": "718000"
  },
  {
    "text": "vable function the most other the case it will just uh behave",
    "start": "718000",
    "end": "724279"
  },
  {
    "text": "good the Oneal function here contains buff overflow which might be triggered",
    "start": "724279",
    "end": "729880"
  },
  {
    "text": "by certain input but not always uh happen because the input lens",
    "start": "729880",
    "end": "737079"
  },
  {
    "text": "should be larger than the local bar size so our first task is to help you to",
    "start": "737079",
    "end": "745199"
  },
  {
    "text": "fix in the dots and we have mentioned that you know many times",
    "start": "745199",
    "end": "751839"
  },
  {
    "text": "you you see a problem a Behavior Uh you want to look further either is a crash",
    "start": "751839",
    "end": "758839"
  },
  {
    "text": "or the the program H you want to look further so you need to focus on",
    "start": "758839",
    "end": "765279"
  },
  {
    "text": "particular part or you want to looking at different aspects from at different",
    "start": "765279",
    "end": "771639"
  },
  {
    "text": "uh level of details but when you try to run the same thing",
    "start": "771639",
    "end": "776760"
  },
  {
    "text": "again it's not exactly as you expect or as you have seen so while the dots move",
    "start": "776760",
    "end": "783839"
  },
  {
    "text": "what make the the target the target moving it's the one thing is the multi",
    "start": "783839",
    "end": "789519"
  },
  {
    "text": "Strat issues and we people all know the concurrency issues bring the",
    "start": "789519",
    "end": "794920"
  },
  {
    "text": "non-deterministic behavior and this is multiplied by the fact the Z concurrency",
    "start": "794920",
    "end": "802920"
  },
  {
    "text": "by multiple core processors multiple uh processor uh multiple core multiple",
    "start": "802920",
    "end": "808040"
  },
  {
    "text": "multiple processors in the system uh and more interestingly the security features",
    "start": "808040",
    "end": "814920"
  },
  {
    "text": "that designed to guarantee uh to for protection actually make these things uh",
    "start": "814920",
    "end": "821199"
  },
  {
    "text": "even this methods worse the add space layout randomization is kind of by",
    "start": "821199",
    "end": "826880"
  },
  {
    "text": "Design to make uh every time you run the same program your internal workings are different particularly with the fine",
    "start": "826880",
    "end": "835519"
  },
  {
    "text": "grain asrr buil into like window Window 8 it almost guarantees nothing will be",
    "start": "835519",
    "end": "842440"
  },
  {
    "text": "the same for two DS at different time so our first the tree uses the",
    "start": "842440",
    "end": "851959"
  },
  {
    "text": "replay approach to record The Twist at one one time for once then you can",
    "start": "851959",
    "end": "858399"
  },
  {
    "text": "analyze from different aspects many",
    "start": "858399",
    "end": "864000"
  },
  {
    "text": "time so in the TW twist we record the cap the program States actually we only",
    "start": "864000",
    "end": "871399"
  },
  {
    "text": "capture the the data the changes between the program states that will include the",
    "start": "871399",
    "end": "877160"
  },
  {
    "text": "instruction thread register memory and we have automated automated this process",
    "start": "877160",
    "end": "884079"
  },
  {
    "text": "so you uh don't have to do it manually so use based on the debuging",
    "start": "884079",
    "end": "889279"
  },
  {
    "text": "infrastructure we can collect the twst from different oping systems such as Windows Linux Mac and from user mode",
    "start": "889279",
    "end": "896920"
  },
  {
    "text": "curent mode and where are working on to getting the Twist from U du devices such",
    "start": "896920",
    "end": "902720"
  },
  {
    "text": "Android or the uh cysco uh rter",
    "start": "902720",
    "end": "909079"
  },
  {
    "text": "switches people are familiar with the debuggers you know use debuggers every day and might ask the question say why",
    "start": "909880",
    "end": "917480"
  },
  {
    "text": "in some version of dbag say GDB 7 already Incorporated the the record then",
    "start": "917480",
    "end": "924600"
  },
  {
    "text": "replay in a debugger so why do we what's the difference between this the US here",
    "start": "924600",
    "end": "931720"
  },
  {
    "text": "I think in general the high level answer is this debug based replay let you",
    "start": "931720",
    "end": "938040"
  },
  {
    "text": "connect the dots and to play connect the dots for",
    "start": "938040",
    "end": "943199"
  },
  {
    "text": "you what happens in the debug replay is it can truthfully but mechanically",
    "start": "943199",
    "end": "950040"
  },
  {
    "text": "single step each point in your T give you all the effects and you can select",
    "start": "950040",
    "end": "957440"
  },
  {
    "text": "where you want to stop and where you wanted to draw dots where you wanted to connect the dots but it's up to you to",
    "start": "957440",
    "end": "963720"
  },
  {
    "text": "do that I know you can do it the problem is that million only millions of dots",
    "start": "963720",
    "end": "969199"
  },
  {
    "text": "there so today doing it differently to ask you to provide the data so you are",
    "start": "969199",
    "end": "975000"
  },
  {
    "text": "interested at the beginning from our GUI then you can choose to say what what",
    "start": "975000",
    "end": "981639"
  },
  {
    "text": "kind of way you want to check you want to check how the values propagate or you want to check how the your your data",
    "start": "981639",
    "end": "989680"
  },
  {
    "text": "affect the Consol flow the branch point so you make that choice then we",
    "start": "989680",
    "end": "995480"
  },
  {
    "text": "automatic automatically propagate the the changes along the um the rules you",
    "start": "995480",
    "end": "1001959"
  },
  {
    "text": "specified then connected dos so you can move to",
    "start": "1001959",
    "end": "1008040"
  },
  {
    "text": "different dots that is relevant to look further so we explain that in uh with",
    "start": "1008040",
    "end": "1015720"
  },
  {
    "text": "examples here uh let's move to the next Point how do we support your connecting",
    "start": "1015720",
    "end": "1021519"
  },
  {
    "text": "the dots uh the approach we are using here is called ttin analysis the first of all let me point",
    "start": "1021519",
    "end": "1028280"
  },
  {
    "text": "out why connecting dots is so hard we can generally think the instruction data",
    "start": "1028280",
    "end": "1034079"
  },
  {
    "text": "they Conn the do in this game in the running examples we sh you",
    "start": "1034079",
    "end": "1041558"
  },
  {
    "text": "it's not that hard because everything fits into one simple file is at one",
    "start": "1041559",
    "end": "1046720"
  },
  {
    "text": "place and happens almost one after another but in the real",
    "start": "1046720",
    "end": "1052280"
  },
  {
    "text": "world examples real world programs all this basic elements can be complicated",
    "start": "1052280",
    "end": "1059080"
  },
  {
    "text": "for example the code side can be big the inputs it can have plenty and come from",
    "start": "1059080",
    "end": "1066120"
  },
  {
    "text": "all different sources and the transformation code can be L say the",
    "start": "1066120",
    "end": "1073520"
  },
  {
    "text": "input paths can grow exponentially not only they can each of",
    "start": "1073520",
    "end": "1078720"
  },
  {
    "text": "them can be complicated also they can you know separated either they are in",
    "start": "1078720",
    "end": "1085280"
  },
  {
    "text": "the code in different modules already happen a long time apart not to mention",
    "start": "1085280",
    "end": "1091320"
  },
  {
    "text": "that the different runtime uh different protection buil in U make the matters",
    "start": "1091320",
    "end": "1096640"
  },
  {
    "text": "even worse so the basic techniques we use is",
    "start": "1096640",
    "end": "1102480"
  },
  {
    "text": "uh Dynamic attend analysis I'm sure most people many people already familiar with",
    "start": "1102480",
    "end": "1107799"
  },
  {
    "text": "because it's a very popular research techniques but I think on the other hand there may be people who don't not very",
    "start": "1107799",
    "end": "1115480"
  },
  {
    "text": "familiar with that because as I mentioned this techniques are not integrated with uh like mainstream",
    "start": "1115480",
    "end": "1122919"
  },
  {
    "text": "security tools such as idro so let's assume that uh uh people",
    "start": "1122919",
    "end": "1128840"
  },
  {
    "text": "don't have this deeper background of this technique let's start with a few",
    "start": "1128840",
    "end": "1135039"
  },
  {
    "text": "basic definitions tenos source is kind of the data you want to start with T",
    "start": "1135039",
    "end": "1141919"
  },
  {
    "text": "sync uh in it's the datas you eventually",
    "start": "1141919",
    "end": "1147159"
  },
  {
    "text": "cares and T policy is the how the T Source might affect the sync so in a",
    "start": "1147159",
    "end": "1155039"
  },
  {
    "text": "varability context T Source usually can be your input the input that uh the",
    "start": "1155039",
    "end": "1161799"
  },
  {
    "text": "users has a control of the syn could be uh return address or IP register",
    "start": "1161799",
    "end": "1168919"
  },
  {
    "text": "things like he security implications aend policy could be the most commonly",
    "start": "1168919",
    "end": "1174640"
  },
  {
    "text": "used one is like data policies your Source somehow affect the value of your",
    "start": "1174640",
    "end": "1181320"
  },
  {
    "text": "sync the t is taking uh data oriented approach where you look how the data",
    "start": "1181320",
    "end": "1186960"
  },
  {
    "text": "flow how the data moves if you look the other way focusing on the instruction",
    "start": "1186960",
    "end": "1192559"
  },
  {
    "text": "that transform your data from your source to the sync usually of like our total Med",
    "start": "1192559",
    "end": "1200760"
  },
  {
    "text": "instructions executed you may only have a bunch of the instructions directly",
    "start": "1200760",
    "end": "1205960"
  },
  {
    "text": "translate transform your data you are inserted to the data uh sync you",
    "start": "1205960",
    "end": "1212440"
  },
  {
    "text": "choose so that sequence of instuctions you connected together that's the key",
    "start": "1212440",
    "end": "1218039"
  },
  {
    "text": "effect I can focus on that's the sling we're talking",
    "start": "1218039",
    "end": "1223120"
  },
  {
    "text": "here so if we use the connecting do G to to make it a easier uh to",
    "start": "1223120",
    "end": "1231280"
  },
  {
    "text": "see the starting point is the source T source and the ending point is the T",
    "start": "1231280",
    "end": "1239880"
  },
  {
    "text": "sync you started connecting the the dots and that's the following certain rules",
    "start": "1239880",
    "end": "1245720"
  },
  {
    "text": "the rule is your policy your T policy and when you finish the connection and",
    "start": "1245720",
    "end": "1251760"
  },
  {
    "text": "they finally makes sense in this case it's a d then that's say slicing",
    "start": "1251760",
    "end": "1259919"
  },
  {
    "text": "once you get the D you can focus on this to to see what's the data there and how",
    "start": "1259919",
    "end": "1267000"
  },
  {
    "text": "it's related to each other and how it's getting to something meaningful and you can ignore the other rest of the do for",
    "start": "1267000",
    "end": "1276159"
  },
  {
    "text": "now so back to our running examples uh if you see uh what is uh for in this",
    "start": "1276159",
    "end": "1282679"
  },
  {
    "text": "short example we have the tender Source that's the data we read",
    "start": "1282679",
    "end": "1288720"
  },
  {
    "text": "from this instruction read file and on the right side you see the T graph we",
    "start": "1288720",
    "end": "1294799"
  },
  {
    "text": "use each note of the T graph represent a bite either it's a Memory location or",
    "start": "1294799",
    "end": "1301679"
  },
  {
    "text": "it's could be one b in any registers and we're also encoding the uh",
    "start": "1301679",
    "end": "1308120"
  },
  {
    "text": "registers with thread information with the like sequency information and we use",
    "start": "1308120",
    "end": "1313720"
  },
  {
    "text": "the different color the green color represent usually we use that to represent the tent source which is red",
    "start": "1313720",
    "end": "1320120"
  },
  {
    "text": "color for the sync and connecting the the data flow and the",
    "start": "1320120",
    "end": "1328080"
  },
  {
    "text": "instructions involved we get a we get this short T graph and that t",
    "start": "1328080",
    "end": "1335840"
  },
  {
    "text": "graph uh essentially tells you that the input B this particular input bite moves",
    "start": "1335840",
    "end": "1341559"
  },
  {
    "text": "to a the first bite of edx and then from there it's moved to the memory location",
    "start": "1341559",
    "end": "1349320"
  },
  {
    "text": "memory stack on stack and at a function return the return instruction pop up",
    "start": "1349320",
    "end": "1355360"
  },
  {
    "text": "that bite to the first bite of the EIP register so quickly you can you can",
    "start": "1355360",
    "end": "1362200"
  },
  {
    "text": "grasp the the main facts and relations between them it's not always that e uh as I",
    "start": "1362200",
    "end": "1370360"
  },
  {
    "text": "mentioned the the data data dependency the values is one way but it's a very",
    "start": "1370360",
    "end": "1376640"
  },
  {
    "text": "it's the basic very common way track but the source can also affect the syn in",
    "start": "1376640",
    "end": "1384320"
  },
  {
    "text": "different ways such as the source might affect the address of your sync or it",
    "start": "1384320",
    "end": "1391320"
  },
  {
    "text": "might affect your sync by affecting your branch conditions essentially it's",
    "start": "1391320",
    "end": "1396840"
  },
  {
    "text": "affecting what code execut that uh that's kind of control",
    "start": "1396840",
    "end": "1402440"
  },
  {
    "text": "flow uh tracking the loop counter I think that has some potential or",
    "start": "1402440",
    "end": "1407480"
  },
  {
    "text": "particular interest uh because that's usually if you are able to affect the loop counters",
    "start": "1407480",
    "end": "1414600"
  },
  {
    "text": "value you in some way either can make it out of bond uh excess or uh cost like a",
    "start": "1414600",
    "end": "1424440"
  },
  {
    "text": "uh s hunting with a huge number of loop loop so connect different dots uh",
    "start": "1424440",
    "end": "1429880"
  },
  {
    "text": "following different policies get you different things uh you want to look further",
    "start": "1429880",
    "end": "1439240"
  },
  {
    "text": "so next we're going to use a uh twe to explain how we supported that from the",
    "start": "1439240",
    "end": "1448840"
  },
  {
    "text": "ID as I mentioned that it is ID plugin and it has three main components the",
    "start": "1448840",
    "end": "1456320"
  },
  {
    "text": "acction taser responsible to get Twist from different targets and the T",
    "start": "1456320",
    "end": "1461840"
  },
  {
    "text": "analyzer process the twist connected from the Twister then generate the T",
    "start": "1461840",
    "end": "1467480"
  },
  {
    "text": "graph that describes the key facts of your data of your um instructions",
    "start": "1467480",
    "end": "1474880"
  },
  {
    "text": "involved and T visualizer visualize this this informations and let you interact",
    "start": "1474880",
    "end": "1481720"
  },
  {
    "text": "with the other parts of the system not U because it's by Design we",
    "start": "1481720",
    "end": "1488799"
  },
  {
    "text": "want we use a either native graph and the QT graph so we kind of simil",
    "start": "1488799",
    "end": "1495399"
  },
  {
    "text": "integrated with the idas environment not it usually don't tell the difference",
    "start": "1495399",
    "end": "1500520"
  },
  {
    "text": "between the twi and the ID but that kind of by Design we do want to",
    "start": "1500520",
    "end": "1506399"
  },
  {
    "text": "point out a few things that we add on top of Ida for example the T graph we",
    "start": "1506399",
    "end": "1511559"
  },
  {
    "text": "have seen earlier uh here it shows the four input byes affect the the four uh",
    "start": "1511559",
    "end": "1517919"
  },
  {
    "text": "EIP register byes and the ttin also can be represented in a tabular format where we",
    "start": "1517919",
    "end": "1524600"
  },
  {
    "text": "have a more added information such is the the starting sequence the sequence",
    "start": "1524600",
    "end": "1530120"
  },
  {
    "text": "that this this does uh get tinted or it's",
    "start": "1530120",
    "end": "1535679"
  },
  {
    "text": "created uh what the sequence when it happen in the original uh twist and you",
    "start": "1535679",
    "end": "1541760"
  },
  {
    "text": "may have the some things might gone might be gun you know might be clean up or say killed so that's end sequence",
    "start": "1541760",
    "end": "1548799"
  },
  {
    "text": "usually you can see when the when the T gone also we have the child node you can",
    "start": "1548799",
    "end": "1554279"
  },
  {
    "text": "click on the click on the child node then highlight the ENT in the 10 table so it's a different way but it get a",
    "start": "1554279",
    "end": "1560559"
  },
  {
    "text": "little more information also remember the sequence number I mentioned that it can twist back to your origin original",
    "start": "1560559",
    "end": "1567600"
  },
  {
    "text": "twist uh say you have a um 300 in this for example in this case",
    "start": "1567600",
    "end": "1573320"
  },
  {
    "text": "I you have 300 instructions it will tell you when a particular ttin node is",
    "start": "1573320",
    "end": "1579559"
  },
  {
    "text": "created and when the instructions uh executed plus it has the detailed",
    "start": "1579559",
    "end": "1586480"
  },
  {
    "text": "information of the state like registers value the memory you read are right and the address the",
    "start": "1586480",
    "end": "1593120"
  },
  {
    "text": "values of course we can represent that in the graph mode like use uh either",
    "start": "1593120",
    "end": "1599120"
  },
  {
    "text": "memory View and we can create our own view for stack view for register view so the point is by putting all this uh GUI",
    "start": "1599120",
    "end": "1607840"
  },
  {
    "text": "together with one GUI we can show you the compleation informations you need",
    "start": "1607840",
    "end": "1613159"
  },
  {
    "text": "to to dig deeper into the uh the problem",
    "start": "1613159",
    "end": "1618320"
  },
  {
    "text": "basically by click on one particular node you can we can the TR will sync all",
    "start": "1618320",
    "end": "1623960"
  },
  {
    "text": "the information in all this table T table instruction TR and the uh the",
    "start": "1623960",
    "end": "1630000"
  },
  {
    "text": "different memory view register views one thing to to mention is that if",
    "start": "1630000",
    "end": "1635799"
  },
  {
    "text": "you double click on the ttin note it will jump to the uh static disassembly",
    "start": "1635799",
    "end": "1641799"
  },
  {
    "text": "view of the Ida so you can look the statically looking at the what the fun",
    "start": "1641799",
    "end": "1648080"
  },
  {
    "text": "this instructions from and what control photograph what the the call graph what you know who call this function ex so",
    "start": "1648080",
    "end": "1655480"
  },
  {
    "text": "all this uh semantic context all this um big picture help you uh to T all the",
    "start": "1655480",
    "end": "1663919"
  },
  {
    "text": "things together so next we're going to show you the first uh",
    "start": "1663919",
    "end": "1670919"
  },
  {
    "text": "demo so so let's get into our demo in this demo we're going to show you how to",
    "start": "1670919",
    "end": "1675960"
  },
  {
    "text": "use our tree a pro plugin to improve your binary analysis",
    "start": "1675960",
    "end": "1682640"
  },
  {
    "text": "capabilities so in this example we're going to start with a crash this crash could have been discovered doing fuzzing",
    "start": "1682640",
    "end": "1689080"
  },
  {
    "text": "testing whatever you have a crash and you want to analyze it so you can see",
    "start": "1689080",
    "end": "1694159"
  },
  {
    "text": "the Microsoft jit debugger wants to help you debug this uh crash and debugging is",
    "start": "1694159",
    "end": "1700240"
  },
  {
    "text": "a very popular technique to solve to analyze crashes so you set break points you step through the co and you're you",
    "start": "1700240",
    "end": "1707000"
  },
  {
    "text": "try to figure out what's going on so you can also use um I Pro and disassemble the program walk through it manually but",
    "start": "1707000",
    "end": "1713399"
  },
  {
    "text": "either either techniques you use they're usually timec consuming and often difficult to do so we're going to show",
    "start": "1713399",
    "end": "1719880"
  },
  {
    "text": "you is we're going to show you our tree plug-in and how that's going to make this a little bit easier for the person",
    "start": "1719880",
    "end": "1725880"
  },
  {
    "text": "doing the analysis so once you have the our uh Ida Pro tree plugin",
    "start": "1725880",
    "end": "1732279"
  },
  {
    "text": "installed we're going to um let cut off so we're after you have it install we",
    "start": "1732279",
    "end": "1738840"
  },
  {
    "text": "open the binary in questions so with ID Pro they analyze it",
    "start": "1738840",
    "end": "1744440"
  },
  {
    "text": "sorry it's cut off but um so just going through the co a little",
    "start": "1744440",
    "end": "1749840"
  },
  {
    "text": "bit you can see that um even though for for simple program that we're going",
    "start": "1749840",
    "end": "1755039"
  },
  {
    "text": "through it takes a little bit of work to get your get what to do the analysis so for us we're going to use our tree",
    "start": "1755039",
    "end": "1761080"
  },
  {
    "text": "Tracer to generate an execution Trace so we can trace it a program from start to",
    "start": "1761080",
    "end": "1766679"
  },
  {
    "text": "finish but in this case we we're going to we could also do it in interactive mode where you only select the area of",
    "start": "1766679",
    "end": "1772240"
  },
  {
    "text": "Interest you're interested in tracing so you don't have to trace the entire program so in this this example we use",
    "start": "1772240",
    "end": "1778880"
  },
  {
    "text": "we're going to use we're going to trace it from the refile functions because we think it's the input doc text file that",
    "start": "1778880",
    "end": "1784880"
  },
  {
    "text": "caused the crash so we'll mark our starting point on the refile function and then we're going to trace",
    "start": "1784880",
    "end": "1791320"
  },
  {
    "text": "it to all the way to the end of the function the end the main so when the program exit when it's when it's done",
    "start": "1791320",
    "end": "1796840"
  },
  {
    "text": "we're going to stop tracing so after we have our starting and ending points we",
    "start": "1796840",
    "end": "1802120"
  },
  {
    "text": "can run the Tracer to generate this execution Trace so hopefully we'll see a",
    "start": "1802120",
    "end": "1810559"
  },
  {
    "text": "crash all right so we do have a crash so we're able to uh replicate that crash",
    "start": "1813679",
    "end": "1818760"
  },
  {
    "text": "now this entire tracing session the execution Trac tracing session is store in a new um Ida idb file so with that",
    "start": "1818760",
    "end": "1826840"
  },
  {
    "text": "the the with the trace in the file that makes it really convenient and really great for other reverse Engineers",
    "start": "1826840",
    "end": "1833240"
  },
  {
    "text": "analysts to share uh share your finding your test so they can collaborate and try to figure out the problem together",
    "start": "1833240",
    "end": "1840519"
  },
  {
    "text": "so that's our the file that is generated. idb Trace uncore whatever",
    "start": "1840519",
    "end": "1845919"
  },
  {
    "text": "you're programming named idb so next we're going to use our tree",
    "start": "1845919",
    "end": "1851320"
  },
  {
    "text": "analyzer to analyze this execution Trace we just generated and then we're going to apply the tank analysis Tech techniques that",
    "start": "1851320",
    "end": "1857600"
  },
  {
    "text": "Nathan talked about to solve your problem so we'll launch our tree",
    "start": "1857600",
    "end": "1863440"
  },
  {
    "text": "analyzer and for this example we're going to use the tank data policy so we're going to track the input as",
    "start": "1863440",
    "end": "1869960"
  },
  {
    "text": "relations to the out the the sync the so in this case is the crash so if you run",
    "start": "1869960",
    "end": "1875760"
  },
  {
    "text": "the analysis you're going to get the our goey layout so we have the tank graph we",
    "start": "1875760",
    "end": "1881760"
  },
  {
    "text": "have the Tank table and we have our detail execution trace and then what the",
    "start": "1881760",
    "end": "1887639"
  },
  {
    "text": "very useful memory information such as memory view register view stack view of",
    "start": "1887639",
    "end": "1894080"
  },
  {
    "text": "of that entire execution Trace so one really useful thing that",
    "start": "1894080",
    "end": "1899320"
  },
  {
    "text": "Nathan mentions that if you double click on the any of the nodes on the graph it'll take you to directly to the ID Pro",
    "start": "1899320",
    "end": "1905519"
  },
  {
    "text": "disassembly now you can apply all your ID Pro techniques your your disassembly your reverse engineering techniques to",
    "start": "1905519",
    "end": "1911240"
  },
  {
    "text": "solve your problem in this case it take you directly to the crash that instruction caused the crash the function it it came from",
    "start": "1911240",
    "end": "1918240"
  },
  {
    "text": "a really useful so now if you compare the two graphs you have your original a graph which is much bigger and we're",
    "start": "1918240",
    "end": "1923760"
  },
  {
    "text": "able to make that a much smaller simpler graph with a tree graph and so this this is a very simple example but if you're",
    "start": "1923760",
    "end": "1929760"
  },
  {
    "text": "dealing with millions of lines of Co and you're trying to figure out that's a little difficult imagine if you do that",
    "start": "1929760",
    "end": "1935360"
  },
  {
    "text": "and use the tree plugin it can simplify your problem into much simpler graph and",
    "start": "1935360",
    "end": "1940639"
  },
  {
    "text": "tree also shows you the how the source input directly affect the sync crash so",
    "start": "1940639",
    "end": "1947279"
  },
  {
    "text": "in this case the input directly have impacted the EIP register and now later on Nathan's going to show you how a",
    "start": "1947279",
    "end": "1953760"
  },
  {
    "text": "cbass tool can leverage that vulnerability and uh exploit",
    "start": "1953760",
    "end": "1960039"
  },
  {
    "text": "that all right um I will show you how to f fixing the dots and connected dots so",
    "start": "1972840",
    "end": "1980399"
  },
  {
    "text": "the next thing is more important as I mentioned that we need to explore new",
    "start": "1980399",
    "end": "1986679"
  },
  {
    "text": "dots okay take a look at the the dock thing think quite a key Branch point",
    "start": "1986679",
    "end": "1994399"
  },
  {
    "text": "that if connect the dots 16 uh here to the 17 that lead to the disc discovery",
    "start": "1994399",
    "end": "2001559"
  },
  {
    "text": "of the the foot of the dock so in a sense if you connect the",
    "start": "2001559",
    "end": "2006720"
  },
  {
    "text": "different it might lead to something else or such as like this well",
    "start": "2006720",
    "end": "2013799"
  },
  {
    "text": "this it's locks creation I don't know what it is but definitely not a ATT so the point is a program may take a",
    "start": "2013799",
    "end": "2023480"
  },
  {
    "text": "different paths and different paths lead to different",
    "start": "2023480",
    "end": "2028240"
  },
  {
    "text": "Behavior usually of course with some conditions uh your input in some way uh",
    "start": "2028679",
    "end": "2035039"
  },
  {
    "text": "leaving me the conditions so in this example though it's trivial",
    "start": "2035039",
    "end": "2040320"
  },
  {
    "text": "still with a random input all the input you can try probably take many twice if",
    "start": "2040320",
    "end": "2045399"
  },
  {
    "text": "you don't know the uh internals uh to trigger the stack workflow varable",
    "start": "2045399",
    "end": "2052040"
  },
  {
    "text": "function so many times uh I think people have the experience you tried many times",
    "start": "2052040",
    "end": "2058320"
  },
  {
    "text": "and you want you see it's always the program uh follow the same path you",
    "start": "2058320",
    "end": "2065000"
  },
  {
    "text": "wonder have you tried hard or it's just the pass",
    "start": "2065000",
    "end": "2070960"
  },
  {
    "text": "infatable it's not possible U maybe you need a a way a new way a better way to",
    "start": "2070960",
    "end": "2076320"
  },
  {
    "text": "determine to answer the question so T and CB together can help",
    "start": "2076320",
    "end": "2082560"
  },
  {
    "text": "you to answer the questions so at the high level the users",
    "start": "2082560",
    "end": "2089919"
  },
  {
    "text": "answer the questions so the use twist GUI by click a button to say how can I",
    "start": "2089919",
    "end": "2095440"
  },
  {
    "text": "execute a different pass at this particular Branch Point um to we rephrase the question and",
    "start": "2095440",
    "end": "2102680"
  },
  {
    "text": "send it to cbas basically it's saying can we negate this past condition last",
    "start": "2102680",
    "end": "2108720"
  },
  {
    "text": "time it's a force take the force Branch can we take the two Branch this time the C utilize a technique called",
    "start": "2108720",
    "end": "2117800"
  },
  {
    "text": "symbolical execution um a quick introduction to symbolic acction just uh uh provideed",
    "start": "2117800",
    "end": "2125359"
  },
  {
    "text": "background think of the program usually run as the concrete values everything is",
    "start": "2125359",
    "end": "2130920"
  },
  {
    "text": "1 2 3 four five this numbers and it produce the output as numbers so",
    "start": "2130920",
    "end": "2136160"
  },
  {
    "text": "everything is a concrete uh numerical the technique of ution is to",
    "start": "2136160",
    "end": "2142520"
  },
  {
    "text": "say some part of the in say input you want it to be uh variable you want it",
    "start": "2142520",
    "end": "2147760"
  },
  {
    "text": "not determined uh so you make the variable symbol then you apply the program will",
    "start": "2147760",
    "end": "2154000"
  },
  {
    "text": "apply Transformations like mathematical transformation a logical transformation um to generate",
    "start": "2154000",
    "end": "2162319"
  },
  {
    "text": "Expressions symbol symbolic expressions and you grow the Expressions as the programs moves along and at the point",
    "start": "2162319",
    "end": "2169839"
  },
  {
    "text": "say you get the past condition represented by uh symbolic expression",
    "start": "2169839",
    "end": "2175400"
  },
  {
    "text": "and formulas with sometimes can be many variables and many U formulas but you",
    "start": "2175400",
    "end": "2181400"
  },
  {
    "text": "get a mathematical way to represent the condition with your inut and with a help",
    "start": "2181400",
    "end": "2189400"
  },
  {
    "text": "with from a mathematical tool servers Mt",
    "start": "2189400",
    "end": "2195119"
  },
  {
    "text": "servers treated as a black box that can answer this mathematical problems",
    "start": "2195119",
    "end": "2201280"
  },
  {
    "text": "correctly uh so in this case the servers after the servers return is find out",
    "start": "2201280",
    "end": "2207880"
  },
  {
    "text": "that to meet this condition this bite and this address must be letter b and",
    "start": "2207880",
    "end": "2216000"
  },
  {
    "text": "Tre has the the the semantics of the program so it",
    "start": "2216000",
    "end": "2221240"
  },
  {
    "text": "knows that that bites is actually the first bite of your input so that's how",
    "start": "2221240",
    "end": "2226880"
  },
  {
    "text": "your first Branch conditions take the two it's not that simple in the real case because here we don't do any",
    "start": "2226880",
    "end": "2233720"
  },
  {
    "text": "transformation in the Transformations you need this kind of mathematical tools",
    "start": "2233720",
    "end": "2239079"
  },
  {
    "text": "to help you scale the scale the the reasoning the the problem",
    "start": "2239079",
    "end": "2244400"
  },
  {
    "text": "solving later we're going to show a demo to see what the the steps need to take",
    "start": "2244400",
    "end": "2250440"
  },
  {
    "text": "for Tre and CS to get your branch conditions solved but you can see there",
    "start": "2250440",
    "end": "2256480"
  },
  {
    "text": "quite a few steps involved so before I dive into the demo we can show a few",
    "start": "2256480",
    "end": "2264079"
  },
  {
    "text": "things to help you get started so the goal is here to force the program to",
    "start": "2264079",
    "end": "2270200"
  },
  {
    "text": "take the better pass as you can see there are four key Branch condition I",
    "start": "2270200",
    "end": "2276680"
  },
  {
    "text": "conditions they all need to take two if you look at the control flow",
    "start": "2276680",
    "end": "2281720"
  },
  {
    "text": "graph here the normal input will all fall into this Force Branch like Pi all",
    "start": "2281720",
    "end": "2288760"
  },
  {
    "text": "the green edges and and fall through so for the this one function to be",
    "start": "2288760",
    "end": "2294720"
  },
  {
    "text": "triggered you take all this two branches the red edges and to trigger the to find",
    "start": "2294720",
    "end": "2302599"
  },
  {
    "text": "the new PA so with still start with a Twist in",
    "start": "2302599",
    "end": "2308079"
  },
  {
    "text": "this case we offer you different ways to get the twist unlike the one uh in the",
    "start": "2308079",
    "end": "2313680"
  },
  {
    "text": "TW demo we show you the interactive twist twist mode that there we use the",
    "start": "2313680",
    "end": "2320480"
  },
  {
    "text": "either debugging break point to get the T for the scenarios you are intive",
    "start": "2320480",
    "end": "2325760"
  },
  {
    "text": "usually can be short but here we use a pin I think many people might already",
    "start": "2325760",
    "end": "2330800"
  },
  {
    "text": "familiar with it's a a popular Dynamic Banner instrumentation tool that's the",
    "start": "2330800",
    "end": "2336119"
  },
  {
    "text": "optim for you to instrument the program to generate Twist acction of twist so",
    "start": "2336119",
    "end": "2344720"
  },
  {
    "text": "pin is a free software uh from Intel the the",
    "start": "2344720",
    "end": "2351160"
  },
  {
    "text": "advantage is it's it's faster but the downside is is only support",
    "start": "2351160",
    "end": "2356880"
  },
  {
    "text": "x86 nonetheless we still we have a option to support that if you familiar",
    "start": "2356880",
    "end": "2363680"
  },
  {
    "text": "comfortable with pin uh by using the the you can have a pin option to trigger",
    "start": "2363680",
    "end": "2370560"
  },
  {
    "text": "the the the pin twist we developed so we develop pin with the pin twist also we",
    "start": "2370560",
    "end": "2376480"
  },
  {
    "text": "devel a part called pin agent that is connected",
    "start": "2376480",
    "end": "2381560"
  },
  {
    "text": "Tre G with the pin taser so the user can specify what kind of the conditions the",
    "start": "2381560",
    "end": "2387880"
  },
  {
    "text": "command lines and pass to the pin agent then P agent connected with the trer to",
    "start": "2387880",
    "end": "2393640"
  },
  {
    "text": "get the T you like so after we collected the T we we choose",
    "start": "2393640",
    "end": "2400000"
  },
  {
    "text": "uh to do a tint analysis with the tin called Branch policy and that is we look",
    "start": "2400000",
    "end": "2406960"
  },
  {
    "text": "at how the input affect the branch Point here you can see we can get a t",
    "start": "2406960",
    "end": "2414599"
  },
  {
    "text": "graph that describes all this the red notes now here is each one is the branch",
    "start": "2414599",
    "end": "2419760"
  },
  {
    "text": "uh conditions in in corresponding to the the source code and by right click there",
    "start": "2419760",
    "end": "2426880"
  },
  {
    "text": "a button on you can see it in the demo you can right click on Branch condition node then the TW will generate a query",
    "start": "2426880",
    "end": "2435319"
  },
  {
    "text": "and send it to cbas cbas will generate the constraints",
    "start": "2435319",
    "end": "2441000"
  },
  {
    "text": "describe mathematically uh of the branch conditions output you with the input",
    "start": "2441000",
    "end": "2447760"
  },
  {
    "text": "variables using the process just described and get back the results to",
    "start": "2447760",
    "end": "2453880"
  },
  {
    "text": "the tree module here it shows a F the first of the three branch conditions we",
    "start": "2453880",
    "end": "2459599"
  },
  {
    "text": "the communication between three and the the C so basically we already figured out what's the the bad part then the the",
    "start": "2459599",
    "end": "2466440"
  },
  {
    "text": "force will will follow a little bit of internal uh formula like look like this",
    "start": "2466440",
    "end": "2472720"
  },
  {
    "text": "this is smt Formula which is the popular uh servers used and quite a few of them",
    "start": "2472720",
    "end": "2480520"
  },
  {
    "text": "available freely available you can use so they have the the standard of smt for",
    "start": "2480520",
    "end": "2486280"
  },
  {
    "text": "format as long as you generate that the Serv should be able to uh solve it and",
    "start": "2486280",
    "end": "2492720"
  },
  {
    "text": "so here particularly we're using this three to solve this formula and get the",
    "start": "2492720",
    "end": "2498040"
  },
  {
    "text": "answer back in the smt the solers term is called ciable input but it's",
    "start": "2498040",
    "end": "2504560"
  },
  {
    "text": "basically tells you what uh for this particular input byes what's the value should be there so if we make changes",
    "start": "2504560",
    "end": "2512480"
  },
  {
    "text": "accordingly and run the program again it t the crash it means that it took the",
    "start": "2512480",
    "end": "2518920"
  },
  {
    "text": "better pass so the second part of once you get the",
    "start": "2518920",
    "end": "2524160"
  },
  {
    "text": "crashes after 10 analysis you can see if the EIP is for example in this case is a",
    "start": "2524160",
    "end": "2530119"
  },
  {
    "text": "EIP ined by the input so as a part writer or people you're interested",
    "start": "2530119",
    "end": "2536680"
  },
  {
    "text": "inability you can wonder if you can refine the input to uh for example let a",
    "start": "2536680",
    "end": "2542720"
  },
  {
    "text": "program execution jump to the locations you Choose You desired it could be the",
    "start": "2542720",
    "end": "2548800"
  },
  {
    "text": "the entry maybe a zop sequence you found or somehow you get a a pay in there uh",
    "start": "2548800",
    "end": "2555520"
  },
  {
    "text": "it's getting hard today but still U possible for demonstration purpose here we just put a piece of uh payload that",
    "start": "2555520",
    "end": "2563000"
  },
  {
    "text": "pop up a message box and say um I show a",
    "start": "2563000",
    "end": "2568400"
  },
  {
    "text": "quick message here so we designed a simple constraint dialogue which allows",
    "start": "2568400",
    "end": "2574359"
  },
  {
    "text": "you to uh describe what the the target you want conc on The Operators and the",
    "start": "2574359",
    "end": "2582359"
  },
  {
    "text": "values you want it to be and once it's done send the click the button you can",
    "start": "2582359",
    "end": "2589240"
  },
  {
    "text": "send the query to to cbas and cbas basically the same process you have seen",
    "start": "2589240",
    "end": "2595319"
  },
  {
    "text": "for the branch conditions the only difference here is when not constraining on Branch condition this time it's",
    "start": "2595319",
    "end": "2601680"
  },
  {
    "text": "conting on a particular registers value and once you get out back uh um you",
    "start": "2601680",
    "end": "2608480"
  },
  {
    "text": "basically get the assignment of the the input bites so let me quickly show you what",
    "start": "2608480",
    "end": "2616880"
  },
  {
    "text": "the how you can use the tool to really do",
    "start": "2616880",
    "end": "2621920"
  },
  {
    "text": "that okay okay so here you can see the left",
    "start": "2626880",
    "end": "2633839"
  },
  {
    "text": "side is the Tre and the right side bu so we begin with a Twist from u a good run",
    "start": "2633839",
    "end": "2640960"
  },
  {
    "text": "the the normal input you get it access the good pass and here we get the branch conditions uh uh by right click on a",
    "start": "2640960",
    "end": "2648240"
  },
  {
    "text": "branch condition you send a query to cbas and you get the result back from",
    "start": "2648240",
    "end": "2655240"
  },
  {
    "text": "from cbas on the right side uh so you can do this for for the second",
    "start": "2655240",
    "end": "2664440"
  },
  {
    "text": "one uh that's the that's the buttons you can click",
    "start": "2664440",
    "end": "2670078"
  },
  {
    "text": "on and that's the uh some dbag output from the the cbas describing the process",
    "start": "2671800",
    "end": "2680200"
  },
  {
    "text": "uh of the formula and the result so so basically you can go through over all",
    "start": "2680200",
    "end": "2686400"
  },
  {
    "text": "this and you get the right input that get your the path take the how take the path",
    "start": "2686400",
    "end": "2693319"
  },
  {
    "text": "you you like to take and when this you got the a crash the second part will start from",
    "start": "2693319",
    "end": "2700520"
  },
  {
    "text": "the crash you got the twist uh about the crash the goal is to hijack the C to",
    "start": "2700520",
    "end": "2705599"
  },
  {
    "text": "jump to the locations you tell uh you",
    "start": "2705599",
    "end": "2710720"
  },
  {
    "text": "desire so here you open the twist we connected from pin",
    "start": "2710720",
    "end": "2717920"
  },
  {
    "text": "and and this time we use the data policies because we were concerned about",
    "start": "2720640",
    "end": "2726839"
  },
  {
    "text": "the data dependency how the input can affect the the values you get a quick T",
    "start": "2726839",
    "end": "2733480"
  },
  {
    "text": "graph and use the server uh dialog about the server you can specify the registers",
    "start": "2733480",
    "end": "2740280"
  },
  {
    "text": "or memories use the choose the operators equal uh for memory contains makes more",
    "start": "2740280",
    "end": "2747440"
  },
  {
    "text": "sense and put your values in",
    "start": "2747440",
    "end": "2751160"
  },
  {
    "text": "there click on the button uh then it will send the query and the cus will for",
    "start": "2753319",
    "end": "2759359"
  },
  {
    "text": "formalize the the formula then and get SOL SOL",
    "start": "2759359",
    "end": "2765720"
  },
  {
    "text": "it so next we just make the changes accordingly and see what",
    "start": "2765720",
    "end": "2773400"
  },
  {
    "text": "happen so in the real case you it's not as simple as this uh because",
    "start": "2775920",
    "end": "2782400"
  },
  {
    "text": "uh usually in the real case you have maybe hundreds of variables and you know",
    "start": "2782400",
    "end": "2787760"
  },
  {
    "text": "SS of formulas take take this the Tool uh to so as you see that that is the equ",
    "start": "2787760",
    "end": "2797319"
  },
  {
    "text": "jump to the locations so we we want it to go",
    "start": "2797319",
    "end": "2804720"
  },
  {
    "text": "so um so here we already show you uh with simple writing examples to show you",
    "start": "2804720",
    "end": "2811760"
  },
  {
    "text": "the the concept and approach and how how it works we did a few user real world case",
    "start": "2811760",
    "end": "2820240"
  },
  {
    "text": "studies uh from different platforms different uh types of applications uh",
    "start": "2820240",
    "end": "2825960"
  },
  {
    "text": "including uh Windows platform where you have the wmf all this uh classic",
    "start": "2825960",
    "end": "2833640"
  },
  {
    "text": "vulnerabilities and we also have some audio vulnerability uh on Windows we collect",
    "start": "2833640",
    "end": "2839480"
  },
  {
    "text": "some uh kernel crash uh Unix uh L also",
    "start": "2839480",
    "end": "2845800"
  },
  {
    "text": "we have some work on the in progress for Z application we are focusing on the",
    "start": "2845800",
    "end": "2852000"
  },
  {
    "text": "compression decompression activities from Android real",
    "start": "2852000",
    "end": "2858799"
  },
  {
    "text": "device okay so I will just highlight a few facts from the for the wmf",
    "start": "2862040",
    "end": "2870200"
  },
  {
    "text": "vulnerabilities um for details you can hope the slides you have a chance to",
    "start": "2870200",
    "end": "2875440"
  },
  {
    "text": "look at after the talk MF is U had been in the news at a",
    "start": "2875440",
    "end": "2882520"
  },
  {
    "text": "time when when was first discovered there quite a few ways to trigger this",
    "start": "2882520",
    "end": "2887720"
  },
  {
    "text": "vulnerability from Windows almost everything you do will trigger it so in the case in the sense uh we choose one",
    "start": "2887720",
    "end": "2894319"
  },
  {
    "text": "way to uh trigate viability with the WM file we",
    "start": "2894319",
    "end": "2899599"
  },
  {
    "text": "crafted the particular Commander line we use is on the on the top and interesting",
    "start": "2899599",
    "end": "2905720"
  },
  {
    "text": "fact we note is between the time the program started reading the file to the time the program",
    "start": "2905720",
    "end": "2915160"
  },
  {
    "text": "crash there there were 229 s instructions executed just for the",
    "start": "2915160",
    "end": "2921359"
  },
  {
    "text": "simple scenario here's the a quick partial T",
    "start": "2921359",
    "end": "2926839"
  },
  {
    "text": "graph we we uh collected this is when the program uh",
    "start": "2926839",
    "end": "2932559"
  },
  {
    "text": "got exception from address that highlighted here red the red one basically this four",
    "start": "2932559",
    "end": "2941400"
  },
  {
    "text": "um bites that's the on the locations the program trying to execute from because we have the um junk data so it's cost ex",
    "start": "2941400",
    "end": "2950440"
  },
  {
    "text": "exception we can see this four bytes value depend on four input bytes um and",
    "start": "2950440",
    "end": "2959200"
  },
  {
    "text": "you see the the green note here and the data policy is is the uh it's the data",
    "start": "2959200",
    "end": "2965200"
  },
  {
    "text": "depend so which show that the input bites in the original wmf file from the 29 to the",
    "start": "2965200",
    "end": "2974000"
  },
  {
    "text": "32 bites affect the the value of the in this",
    "start": "2974000",
    "end": "2979640"
  },
  {
    "text": "locations on the other hand the other dependencies it's it's Loop dependent on",
    "start": "2979640",
    "end": "2985839"
  },
  {
    "text": "if you twist back all the way it will twit back to the input bites in original file that's correspond to the seven to",
    "start": "2985839",
    "end": "2993119"
  },
  {
    "text": "the 10 uh so which is suggest that this this four bites get the value somehow",
    "start": "2993119",
    "end": "3000880"
  },
  {
    "text": "from a loop the counter of the loop is it's depend the value depending on the",
    "start": "3000880",
    "end": "3007640"
  },
  {
    "text": "some bites in the original input file so what it means it may not mean totally",
    "start": "3007640",
    "end": "3013599"
  },
  {
    "text": "make sense for now but it kind of point out the facts the kind of dependencies",
    "start": "3013599",
    "end": "3019079"
  },
  {
    "text": "you can look at if you happen to look into the WM file your aware of it you",
    "start": "3019079",
    "end": "3027240"
  },
  {
    "text": "can it actually make more sense because the seven to the 10 the four bytes",
    "start": "3027240",
    "end": "3032319"
  },
  {
    "text": "that's the file size for uh for the wml file uh so say if you have a explo that",
    "start": "3032319",
    "end": "3039960"
  },
  {
    "text": "you want to work and you change the um you almost certainly you will change the",
    "start": "3039960",
    "end": "3045760"
  },
  {
    "text": "side of our original file so this the file SI should be changed accordingly",
    "start": "3045760",
    "end": "3051599"
  },
  {
    "text": "the other part which affects the value is from the metadata record where the",
    "start": "3051599",
    "end": "3057880"
  },
  {
    "text": "the function after the the functions that trigger the vulnerability the the",
    "start": "3057880",
    "end": "3063559"
  },
  {
    "text": "Bice there is the is is the viability we take the program to execute the memory",
    "start": "3063559",
    "end": "3069880"
  },
  {
    "text": "location the locations we have seen the exception so that's the four that's the four bites which affect the values of",
    "start": "3069880",
    "end": "3077280"
  },
  {
    "text": "the the data dependenc value so also we collected the slicing",
    "start": "3077280",
    "end": "3086200"
  },
  {
    "text": "um we can we get each individual instructions that involved in moving the",
    "start": "3086200",
    "end": "3093520"
  },
  {
    "text": "the input bites from the input file all the way to the to the to the point that exception happen it make sense make a",
    "start": "3093520",
    "end": "3101319"
  },
  {
    "text": "little bit sense when you look individually it might make more sense if you look at the original context of the",
    "start": "3101319",
    "end": "3108680"
  },
  {
    "text": "program structure the functions for example uh you know which modules you know which functions and you know what",
    "start": "3108680",
    "end": "3115079"
  },
  {
    "text": "the con to photograph where it's been triggered and it probably made more sense if you are looking at a even big",
    "start": "3115079",
    "end": "3122240"
  },
  {
    "text": "picture how the program structure um in a car graph to kind of fit your",
    "start": "3122240",
    "end": "3128119"
  },
  {
    "text": "knowledge of uh the program which the details you we collected",
    "start": "3128119",
    "end": "3135720"
  },
  {
    "text": "analyzed so back to the the facts here",
    "start": "3135720",
    "end": "3140799"
  },
  {
    "text": "out of the 229 s the instructions that only you two 12 unique instructions are",
    "start": "3140799",
    "end": "3147359"
  },
  {
    "text": "directly involved in the crash that causing the the crash so that's kind of",
    "start": "3147359",
    "end": "3153119"
  },
  {
    "text": "the the fact so you can focus on first that's the DAT so you can connect the",
    "start": "3153119",
    "end": "3159319"
  },
  {
    "text": "first okay so here's the time for conclusion So based on the interactive B",
    "start": "3159319",
    "end": "3165280"
  },
  {
    "text": "analysis idea we design our tools using popular research techniques such as",
    "start": "3165280",
    "end": "3172640"
  },
  {
    "text": "replay Dynamic analysis and symbolic ution to help you with uh doing binary",
    "start": "3172640",
    "end": "3178520"
  },
  {
    "text": "analysis interactively particularly our TR we implemented on top of Ida which is the",
    "start": "3178520",
    "end": "3187000"
  },
  {
    "text": "mainstream security tools people a lot of people use in their daily work to",
    "start": "3187000",
    "end": "3192240"
  },
  {
    "text": "support integrative analysis and TW also supports the twi collection C platform",
    "start": "3192240",
    "end": "3197720"
  },
  {
    "text": "and T analysis for for Native instruction T analysis and replay we",
    "start": "3197720",
    "end": "3203200"
  },
  {
    "text": "design a cbas to support uh uh both automated and interactive analysis of course here the focus is on",
    "start": "3203200",
    "end": "3211079"
  },
  {
    "text": "interactively uh doing binary analysis the main the key factor uh the key",
    "start": "3211079",
    "end": "3217240"
  },
  {
    "text": "feature of cbas is we perform the analysis of the core algorithms Works",
    "start": "3217240",
    "end": "3223599"
  },
  {
    "text": "directly on the IR format IR twist offline by using Z the reverse",
    "start": "3223599",
    "end": "3230760"
  },
  {
    "text": "engineering interm language to make it architecture",
    "start": "3230760",
    "end": "3236040"
  },
  {
    "text": "independent and because Z Already supports arm M Power PC as well as X6 so",
    "start": "3236040",
    "end": "3243480"
  },
  {
    "text": "it's uh much faster for us to use the same algorithm the same impementation to",
    "start": "3243480",
    "end": "3250520"
  },
  {
    "text": "support binary programs from all this different uh instruction",
    "start": "3250520",
    "end": "3255920"
  },
  {
    "text": "set and like any other tools C and twist are tools to help you uh become",
    "start": "3255920",
    "end": "3264079"
  },
  {
    "text": "successful we hope the more intelligence you put into the tool the more skill you",
    "start": "3264079",
    "end": "3270200"
  },
  {
    "text": "are the more experience you are the better help you can you can get from",
    "start": "3270200",
    "end": "3276119"
  },
  {
    "text": "from our tools and the bottom line is you drive the",
    "start": "3276119",
    "end": "3281920"
  },
  {
    "text": "tools um so just mentioning a few things tree is actually open source it's available on our Google code page so you",
    "start": "3283240",
    "end": "3289200"
  },
  {
    "text": "can go ahead and Fork it off and shape it into whatever you need so for instance you can shape it to be more in",
    "start": "3289200",
    "end": "3294680"
  },
  {
    "text": "line with malware work um so the first version of tree actually is without the",
    "start": "3294680",
    "end": "3300359"
  },
  {
    "text": "replayer component um that is going to be released at a later date the cbass component is also going to be uh to be",
    "start": "3300359",
    "end": "3307359"
  },
  {
    "text": "announced for further details um other than that if you have any further questions or um if you need",
    "start": "3307359",
    "end": "3312720"
  },
  {
    "text": "clarification on the source or the material we've talked about today or if you want um to ask us about any questions about tree or Seabass feel",
    "start": "3312720",
    "end": "3319880"
  },
  {
    "text": "free to uh either email us or meet us out in hallway",
    "start": "3319880",
    "end": "3325880"
  },
  {
    "text": "yeah we realize that we out of time um five minutes out of time for questions so feel free to talk to us offline and",
    "start": "3325880",
    "end": "3333720"
  },
  {
    "text": "we want to get your feedback thanks a thanks a",
    "start": "3333720",
    "end": "3339000"
  },
  {
    "text": "[Applause] lot",
    "start": "3339000",
    "end": "3346720"
  }
]