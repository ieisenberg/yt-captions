[
  {
    "text": "I uh all right well welcome to the Heep knowledge track I am Paul prer practical",
    "start": "7280",
    "end": "13280"
  },
  {
    "text": "security Inc I am uh going to be monitoring this session for you guys I",
    "start": "13280",
    "end": "19800"
  },
  {
    "text": "want to uh introduce uh",
    "start": "19800",
    "end": "24279"
  },
  {
    "text": "maximiliano C I'll let him introduce his own name",
    "start": "25199",
    "end": "30400"
  },
  {
    "text": "that' be much better but anyway he's going to talk about system called Ro",
    "start": "30400",
    "end": "36079"
  },
  {
    "text": "[Music] hello hello okay well my name is maximiliano",
    "start": "70680",
    "end": "78240"
  },
  {
    "text": "caseres uh I work at core security Technologies and I we speaking about",
    "start": "78240",
    "end": "85040"
  },
  {
    "text": "cisal proxin today",
    "start": "85040",
    "end": "89600"
  },
  {
    "text": "basically the presentation is uh directly directly that uh explaining",
    "start": "93520",
    "end": "100439"
  },
  {
    "text": "the cisal proxy technology um what I will do I will start with some general",
    "start": "100439",
    "end": "105719"
  },
  {
    "text": "concepts related to csols um we will go then to what csol",
    "start": "105719",
    "end": "112439"
  },
  {
    "text": "proxin is and then we'll take a look at how we can uh make it work and",
    "start": "112439",
    "end": "120320"
  },
  {
    "text": "what it what is it good for",
    "start": "120320",
    "end": "126439"
  },
  {
    "text": "so um for some very general stuff uh a",
    "start": "126439",
    "end": "133080"
  },
  {
    "text": "process typically interacts with certain resources to accomplish a certain goal",
    "start": "133080",
    "end": "138640"
  },
  {
    "text": "uh for example a file in a disk the screen or a networking card this",
    "start": "138640",
    "end": "144560"
  },
  {
    "text": "interaction is done through the operating system and through the what we call system Cod which are operating",
    "start": "144560",
    "end": "151480"
  },
  {
    "text": "system Services um this uh system Services can",
    "start": "151480",
    "end": "158160"
  },
  {
    "text": "be identified usually with the lowest layer of communication between a user",
    "start": "158160",
    "end": "165000"
  },
  {
    "text": "mode process and the kernel itself um if we look",
    "start": "165000",
    "end": "171599"
  },
  {
    "text": "at the most popular operating systems right now in use we can take a look at",
    "start": "171599",
    "end": "178840"
  },
  {
    "text": "uh Windows Linux uh the BSD um",
    "start": "178840",
    "end": "185200"
  },
  {
    "text": "Solaris and if we look at them thinking about how do they uh implement the",
    "start": "185200",
    "end": "191840"
  },
  {
    "text": "system level Services we have two very distant groups one is the Unix group and",
    "start": "191840",
    "end": "198640"
  },
  {
    "text": "the other is the windows um if we just look at the at the Unix",
    "start": "198640",
    "end": "204920"
  },
  {
    "text": "group we'll see that the there exists um an V mechanism for C and cisal",
    "start": "204920",
    "end": "212239"
  },
  {
    "text": "usually identify by number this mechanism usually is a um either a",
    "start": "212239",
    "end": "218200"
  },
  {
    "text": "software interrup a software trap or a far call and usually your register is set",
    "start": "218200",
    "end": "223519"
  },
  {
    "text": "with a cisal number we want to call um there's also a common convention",
    "start": "223519",
    "end": "228640"
  },
  {
    "text": "used for passing arguments that either pass through the stack or through registers or through a mix of both um",
    "start": "228640",
    "end": "235920"
  },
  {
    "text": "also in in the Unix War this system services are kept to a minimum",
    "start": "235920",
    "end": "242879"
  },
  {
    "text": "um open BSD for example has about uh 300",
    "start": "242879",
    "end": "249560"
  },
  {
    "text": "cisal and there's also um a direct mapping between each",
    "start": "249560",
    "end": "256000"
  },
  {
    "text": "CIS and its own uh wrapper in Li C for example in this case uh what does this",
    "start": "256000",
    "end": "261720"
  },
  {
    "text": "means usually uh this liy wrapper each fun each system",
    "start": "261720",
    "end": "268320"
  },
  {
    "text": "call implemented by the uh operating system has its own way of uh interfacing",
    "start": "268320",
    "end": "274479"
  },
  {
    "text": "with it and is very dependent on this operating system",
    "start": "274479",
    "end": "279880"
  },
  {
    "text": "so most of these os's uh try to present",
    "start": "279880",
    "end": "285280"
  },
  {
    "text": "a common interface for user mode programs so that we don't have to learn how to program each one of them so this",
    "start": "285280",
    "end": "291080"
  },
  {
    "text": "interface usually is called po6 or system 5 for",
    "start": "291080",
    "end": "296120"
  },
  {
    "text": "example so this uh liy it's a function in lip C which basically",
    "start": "296120",
    "end": "303039"
  },
  {
    "text": "just translates between uh posic for example and the underline operating",
    "start": "303039",
    "end": "309240"
  },
  {
    "text": "system a specific way of calling open read or uh get get your entries or",
    "start": "309240",
    "end": "316440"
  },
  {
    "text": "whatever so uh um in uni systems usually this Lees",
    "start": "316440",
    "end": "322800"
  },
  {
    "text": "wrapper is very specific to each one and doesn't do much more than just interface",
    "start": "322800",
    "end": "328600"
  },
  {
    "text": "between the two uh calling conventions now into",
    "start": "328600",
    "end": "334000"
  },
  {
    "text": "Windows the Windows system service layer can be usually is usually referred to in",
    "start": "334000",
    "end": "341039"
  },
  {
    "text": "books as the native API in contrast to the Wind 32 API which is a a",
    "start": "341039",
    "end": "348680"
  },
  {
    "text": "user a user mode Library um and is not documented and not",
    "start": "348680",
    "end": "355280"
  },
  {
    "text": "supported um it looks like uh Microsoft wants to have the liberty of uh changing the native API",
    "start": "355280",
    "end": "364880"
  },
  {
    "text": "and it has do from NT to and XP without",
    "start": "364880",
    "end": "369960"
  },
  {
    "text": "making user mode programs uh no more no longer functional so it's um a lot harder to",
    "start": "369960",
    "end": "377800"
  },
  {
    "text": "actually interact directly with this interface um in contrast with the Unice world there's also High number of system",
    "start": "377800",
    "end": "385199"
  },
  {
    "text": "level Services more than a thousand and also",
    "start": "385199",
    "end": "391160"
  },
  {
    "text": "um the 132 API calls that wrap this",
    "start": "391160",
    "end": "396560"
  },
  {
    "text": "version specific uh system level Services actually do a lot of stuff so",
    "start": "396560",
    "end": "406120"
  },
  {
    "text": "um if you are directly accessing the system through system calls you have to",
    "start": "406120",
    "end": "411440"
  },
  {
    "text": "do a lot of work so um to keep things simple along this speech I'll refer to window CIS CS",
    "start": "411440",
    "end": "420560"
  },
  {
    "text": "as any function in any DL available to a user mode process so in this way when we were",
    "start": "420560",
    "end": "427599"
  },
  {
    "text": "talking about the native API native API calls are those in in",
    "start": "427599",
    "end": "435400"
  },
  {
    "text": "ntdll uh we are including them but we also including the whole",
    "start": "435400",
    "end": "441000"
  },
  {
    "text": "API",
    "start": "441400",
    "end": "444400"
  },
  {
    "text": "so I typical process uses certain resources to accomplish a certain goal",
    "start": "448199",
    "end": "453599"
  },
  {
    "text": "for example to read a file to um calculate an aage from a from a table",
    "start": "453599",
    "end": "460960"
  },
  {
    "text": "or something and the specific resources this process accesses and the kind of",
    "start": "460960",
    "end": "467680"
  },
  {
    "text": "access it has on them defines the context onto which this process is running so let's see a",
    "start": "467680",
    "end": "475840"
  },
  {
    "text": "sample if we have a process that is um reading data from a file will have",
    "start": "476000",
    "end": "482840"
  },
  {
    "text": "something like this we we are just focusing on uh",
    "start": "482840",
    "end": "488840"
  },
  {
    "text": "cisos so the reader process we call",
    "start": "488840",
    "end": "494879"
  },
  {
    "text": "open the open CIS now in the inside the operating system K will communicate",
    "start": "494879",
    "end": "500680"
  },
  {
    "text": "somehow with the the disk and the file system and will return uh some information back in this case a file",
    "start": "500680",
    "end": "506680"
  },
  {
    "text": "descriptor and the real process will call read and we'll read information from the file and it will um it will",
    "start": "506680",
    "end": "513640"
  },
  {
    "text": "call close and close the file for example this whole interaction is done through the operating system uh the",
    "start": "513640",
    "end": "519959"
  },
  {
    "text": "process never interacts directly with the specific",
    "start": "519959",
    "end": "525719"
  },
  {
    "text": "resource so let's",
    "start": "528120",
    "end": "533959"
  },
  {
    "text": "just see an example [Music]",
    "start": "533959",
    "end": "547720"
  },
  {
    "text": "in the in the Unix War we have for example in the Linux system we have um a tool",
    "start": "547839",
    "end": "555399"
  },
  {
    "text": "that is called estr I'm sure most of you are already",
    "start": "555399",
    "end": "562240"
  },
  {
    "text": "familiar with it um basically what estr does is just um",
    "start": "562240",
    "end": "569680"
  },
  {
    "text": "does it read fine you can see what it says um basically what what stay does is",
    "start": "569680",
    "end": "577040"
  },
  {
    "text": "just it logs to the screen um each and every cisal that a given process calls",
    "start": "577040",
    "end": "583320"
  },
  {
    "text": "so we're going to see just couple of simple examples um can you increase yourone",
    "start": "583320",
    "end": "589640"
  },
  {
    "text": "sorry can you increase your phone size yeah sure I'm not",
    "start": "589640",
    "end": "597160"
  },
  {
    "text": "sure uh",
    "start": "597760",
    "end": "601320"
  },
  {
    "text": "[Music]",
    "start": "605180",
    "end": "610990"
  },
  {
    "text": "maybe",
    "start": "613600",
    "end": "616600"
  },
  {
    "text": "SP no no doesn't look good um",
    "start": "619040",
    "end": "628040"
  },
  {
    "text": "I don't think I can increase the phone size I'm sorry does it look better than full",
    "start": "640959",
    "end": "646560"
  },
  {
    "text": "screen or like that full screen is better okay",
    "start": "646560",
    "end": "654839"
  },
  {
    "text": "well let's see for example what which C calls I the ID",
    "start": "661360",
    "end": "667639"
  },
  {
    "text": "command",
    "start": "667639",
    "end": "670000"
  },
  {
    "text": "[Music] calls W quite a bunch",
    "start": "672700",
    "end": "681440"
  },
  {
    "text": "um the Stace tool is showing us all the cisos that that the the process is",
    "start": "682839",
    "end": "691399"
  },
  {
    "text": "calling there are there is a lot of stuff that um lip is doing for example",
    "start": "691399",
    "end": "697519"
  },
  {
    "text": "like uh local stuff memory map and all that but the actual thing we're looking",
    "start": "697519",
    "end": "706120"
  },
  {
    "text": "for is",
    "start": "706120",
    "end": "709399"
  },
  {
    "text": "here here um ID is Callum the cisal that Define what it actually is good for it's",
    "start": "715079",
    "end": "721600"
  },
  {
    "text": "calling get uid get uid get EEG and get J to get information back from the",
    "start": "721600",
    "end": "729079"
  },
  {
    "text": "system then it's right into standard out for example and just going exit in the",
    "start": "729079",
    "end": "734880"
  },
  {
    "text": "same way we can see I don't know uh",
    "start": "734880",
    "end": "740210"
  },
  {
    "text": "[Music]",
    "start": "740210",
    "end": "743269"
  },
  {
    "text": "a cut simple cut just opens the file somewhere and race",
    "start": "750120",
    "end": "757440"
  },
  {
    "text": "this stand",
    "start": "757440",
    "end": "759920"
  },
  {
    "text": "route H it's not so",
    "start": "762920",
    "end": "766880"
  },
  {
    "text": "easy where is that",
    "start": "768720",
    "end": "772279"
  },
  {
    "text": "open okay here it is",
    "start": "777199",
    "end": "781120"
  },
  {
    "text": "well let me check [Music]",
    "start": "800880",
    "end": "807799"
  },
  {
    "text": "this here it [Music] is here it's opening the file and just",
    "start": "808120",
    "end": "815360"
  },
  {
    "text": "reading from it and closing it and call xit",
    "start": "815360",
    "end": "820560"
  },
  {
    "text": "so let's talk about cisal proxin",
    "start": "825199",
    "end": "832519"
  },
  {
    "text": "um cisal proxim will insert two new layers between the uh uh us mod process",
    "start": "833199",
    "end": "841440"
  },
  {
    "text": "and the kernel itself the kernel system Services these two new layers are called the cisal stab or the Cisco client and",
    "start": "841440",
    "end": "849240"
  },
  {
    "text": "the Cisco server The Cisco client will be now the",
    "start": "849240",
    "end": "854920"
  },
  {
    "text": "Nexus between this process and the system the operating system level Services uh the process will not will no",
    "start": "854920",
    "end": "861199"
  },
  {
    "text": "longer be communicating with the system directly this stab will uh convert this",
    "start": "861199",
    "end": "869120"
  },
  {
    "text": "arguments the arguments of the of each CIS to a common uh format we will refer to this as",
    "start": "869120",
    "end": "875759"
  },
  {
    "text": "marshalling and it will build with this arguments and the Cisco we want to call",
    "start": "875759",
    "end": "881240"
  },
  {
    "text": "a request for the Cisco server and it will send this request to the server we'll get back the response",
    "start": "881240",
    "end": "888199"
  },
  {
    "text": "Marshall back its arguments as necessary and return back to the color process as",
    "start": "888199",
    "end": "893519"
  },
  {
    "text": "as if nothing happened the ciso server in turn will handle this request from from the",
    "start": "893519",
    "end": "900240"
  },
  {
    "text": "client convert um Arguments for each cull from the request format to the",
    "start": "900240",
    "end": "907839"
  },
  {
    "text": "native calling Convention of the operating system call the specify CIS call Marshall back the arguments and",
    "start": "907839",
    "end": "913519"
  },
  {
    "text": "build the respon and send it back so the same reader process now with",
    "start": "913519",
    "end": "919519"
  },
  {
    "text": "the client and the The Cisco client and the cisal server layers in between will look something like this the process",
    "start": "919519",
    "end": "925399"
  },
  {
    "text": "instead of calling open we call an open stab um inside the CIS client this Stu will",
    "start": "925399",
    "end": "933959"
  },
  {
    "text": "Marshall the arguments for example the file name uh flags and mode will build a",
    "start": "933959",
    "end": "939079"
  },
  {
    "text": "request we'll send a request to the server in some way the server will um create the the",
    "start": "939079",
    "end": "947440"
  },
  {
    "text": "appropriate context for those arguments to be valid for the open in the deline",
    "start": "947440",
    "end": "952639"
  },
  {
    "text": "system the open call and we'll call it and the open will return to the server",
    "start": "952639",
    "end": "958680"
  },
  {
    "text": "the will Marshall back its uh arguments build a response and send it back to the client and so on with each one of the of",
    "start": "958680",
    "end": "966519"
  },
  {
    "text": "the Cals [Music]",
    "start": "966519",
    "end": "973480"
  },
  {
    "text": "so if we were to separate this Cisco client from the",
    "start": "975240",
    "end": "981480"
  },
  {
    "text": "server for example by a network link this same reader process which was made",
    "start": "981480",
    "end": "988040"
  },
  {
    "text": "to reader file and output to the string for example will now be opening a file",
    "start": "988040",
    "end": "993839"
  },
  {
    "text": "on the remote and on a remote system instead of on the local one it will look something like this the",
    "start": "993839",
    "end": "1000000"
  },
  {
    "text": "real process will Comm communicate with the",
    "start": "1000000",
    "end": "1004959"
  },
  {
    "text": "stab the the CIS client that will be the request but this time we will send the",
    "start": "1005600",
    "end": "1010839"
  },
  {
    "text": "request to the network and the CIS Ser will do will process the request create a respond and",
    "start": "1010839",
    "end": "1017440"
  },
  {
    "text": "send it back through the network not what has happened um we said before that",
    "start": "1017440",
    "end": "1024160"
  },
  {
    "text": "the the resources a process access and the kind of access it has to them",
    "start": "1024160",
    "end": "1029600"
  },
  {
    "text": "defines the context on which this process runs so in this way what we have",
    "start": "1029600",
    "end": "1035480"
  },
  {
    "text": "done is we have changed the context of this running process without changing",
    "start": "1035480",
    "end": "1041520"
  },
  {
    "text": "the process inner Logic the process uh the process still um thinks it's open in",
    "start": "1041520",
    "end": "1047480"
  },
  {
    "text": "a file and uh doing uh his stuff without",
    "start": "1047480",
    "end": "1053840"
  },
  {
    "text": "knowing anything about remote execution for example",
    "start": "1053840",
    "end": "1060280"
  },
  {
    "text": "so uh exactly what happens is this the process accesses a remote resource",
    "start": "1060280",
    "end": "1066640"
  },
  {
    "text": "instead of a local one in this case a file the process accesses this resource",
    "start": "1066640",
    "end": "1072679"
  },
  {
    "text": "with the privilege of the remote server process no longer the the privilege of",
    "start": "1072679",
    "end": "1079360"
  },
  {
    "text": "the client process because the server process is the one actually accessing the",
    "start": "1079360",
    "end": "1084799"
  },
  {
    "text": "resource and the process doesn't know anything about remote execution at all um it was never meant to actually",
    "start": "1084799",
    "end": "1091520"
  },
  {
    "text": "execute over a network um some facts are like the the",
    "start": "1091520",
    "end": "1098120"
  },
  {
    "text": "the the original program was not modified at all and it still conserves",
    "start": "1098120",
    "end": "1103919"
  },
  {
    "text": "the same inner logic if we had a program that um I don't know um",
    "start": "1103919",
    "end": "1110759"
  },
  {
    "text": "uh grab the uh integrals from a file and calculate an abash and then out put it to the string it will exactly do the",
    "start": "1110960",
    "end": "1118039"
  },
  {
    "text": "same thing over the network with isal proxin because the same the inner logic is exactly the same the only thing that",
    "start": "1118039",
    "end": "1124400"
  },
  {
    "text": "will change is the actual resource it's accessing",
    "start": "1124400",
    "end": "1130440"
  },
  {
    "text": "so let's look at how this looks working",
    "start": "1130440",
    "end": "1138440"
  },
  {
    "text": "if we look at uh this",
    "start": "1140520",
    "end": "1146240"
  },
  {
    "text": "drawing it has a lot of common with I guess something that everybody knows or",
    "start": "1146240",
    "end": "1151880"
  },
  {
    "text": "most of you know which is called",
    "start": "1151880",
    "end": "1155880"
  },
  {
    "text": "RPC the RPC or remote procedure call is is a model for doing exactly this or",
    "start": "1158000",
    "end": "1165240"
  },
  {
    "text": "doing things related to cisal proxin it's a client server model",
    "start": "1165240",
    "end": "1171520"
  },
  {
    "text": "um the each remote call is handed both by by client stab and server staff",
    "start": "1171520",
    "end": "1178400"
  },
  {
    "text": "and Cisco proing can be trivially implemented us an",
    "start": "1178400",
    "end": "1183840"
  },
  {
    "text": "RPC RPC looks a lot like uh cisal proxy in this",
    "start": "1183840",
    "end": "1189720"
  },
  {
    "text": "case um the client STA and the server sta",
    "start": "1189720",
    "end": "1195720"
  },
  {
    "text": "will be exactly what the what the cisal client and cisal server layers",
    "start": "1195720",
    "end": "1202120"
  },
  {
    "text": "are but instead of uh calling any function we will just calling CIS um",
    "start": "1202120",
    "end": "1208679"
  },
  {
    "text": "usually RPC implementations on there are RPC implementations on most of the uh",
    "start": "1208679",
    "end": "1215480"
  },
  {
    "text": "operating systems in use today for example",
    "start": "1215480",
    "end": "1221240"
  },
  {
    "text": "sunrpc and uh it provides a common mechanism for doing RPC with any kind of",
    "start": "1221240",
    "end": "1227640"
  },
  {
    "text": "proced call and um basically that's just what I I",
    "start": "1227640",
    "end": "1233039"
  },
  {
    "text": "described a moment ago the client staff and the serice staff um",
    "start": "1233039",
    "end": "1238440"
  },
  {
    "text": "say Marshall back and forth uh information required for doing the",
    "start": "1238440",
    "end": "1244720"
  },
  {
    "text": "actual procedure call to a common interchange format send it through the network and get backet response",
    "start": "1244720",
    "end": "1253200"
  },
  {
    "text": "so what are the benefits and the shortcomings of implementing cisal proxin with",
    "start": "1253200",
    "end": "1260360"
  },
  {
    "text": "RPC among the benefits we can say that there's interoperability between different platforms this is actually an",
    "start": "1260360",
    "end": "1266919"
  },
  {
    "text": "RPC benefit um a benefit of most of the RPC",
    "start": "1266919",
    "end": "1272200"
  },
  {
    "text": "implementations which can work between I know different processors and our benefit is that",
    "start": "1272200",
    "end": "1278559"
  },
  {
    "text": "almost any procedure C can be converted to RPC now if we just focus",
    "start": "1278559",
    "end": "1285760"
  },
  {
    "text": "on cisal proxin or um RPC with CIS calls we'll see",
    "start": "1285760",
    "end": "1293679"
  },
  {
    "text": "that the user mod process that is accessing this CIS calls already knows a",
    "start": "1293679",
    "end": "1301080"
  },
  {
    "text": "lot about the the system where the server is running in fact they are very tightly",
    "start": "1301080",
    "end": "1308960"
  },
  {
    "text": "coupl um it does it does not make any sense to convert back and forth from an",
    "start": "1308960",
    "end": "1314240"
  },
  {
    "text": "common interchange format where you're calling you uh your client and your",
    "start": "1314240",
    "end": "1320600"
  },
  {
    "text": "server are supposed are meant to work on the same platform so this is one of this is",
    "start": "1320600",
    "end": "1328799"
  },
  {
    "text": "probably the main shortcoming of implementing cisal proxin with",
    "start": "1328799",
    "end": "1334200"
  },
  {
    "text": "RPC um in this case both client and server will symmetrically compare back and",
    "start": "1334200",
    "end": "1340279"
  },
  {
    "text": "forth from different per formats in necessarily and provide a lot of um",
    "start": "1340279",
    "end": "1346520"
  },
  {
    "text": "generality that is not need needed",
    "start": "1346520",
    "end": "1352640"
  },
  {
    "text": "so let's say um we have a hunch that there should be",
    "start": "1353039",
    "end": "1360559"
  },
  {
    "text": "some added value onto making the server really small so that's why I'll Focus",
    "start": "1360559",
    "end": "1368320"
  },
  {
    "text": "for a while on optimizing the server [Music] size so how can we do",
    "start": "1368320",
    "end": "1376080"
  },
  {
    "text": "this let's move for a while into the Unix wall um we can take a look at",
    "start": "1376080",
    "end": "1383799"
  },
  {
    "text": "what's uh common among all the csols in a in a unique",
    "start": "1383799",
    "end": "1388960"
  },
  {
    "text": "system for example there's a an omous way of passing arguments on the same",
    "start": "1388960",
    "end": "1395840"
  },
  {
    "text": "system some arents are pass as integral or others are uh",
    "start": "1395840",
    "end": "1401679"
  },
  {
    "text": "pointers pointers to integers pointer to buers pointers to strs um there are not",
    "start": "1401679",
    "end": "1407360"
  },
  {
    "text": "very it's not very common to see CIS calls that are really complex into the DAT the",
    "start": "1407360",
    "end": "1414480"
  },
  {
    "text": "data they uh need as input or as output so it's pretty straightforward most of",
    "start": "1414480",
    "end": "1420120"
  },
  {
    "text": "them just receive integers or pointers to buffers or strings there's a common and simple",
    "start": "1420120",
    "end": "1426279"
  },
  {
    "text": "mechanism for calling each one of these calls usually is a software interrupt",
    "start": "1426279",
    "end": "1431320"
  },
  {
    "text": "like an Intel platforms uh software trap or a far",
    "start": "1431320",
    "end": "1437039"
  },
  {
    "text": "call so how can we take advantage of this um in",
    "start": "1437039",
    "end": "1443480"
  },
  {
    "text": "order to uh reach our goal of optimizing the",
    "start": "1443480",
    "end": "1449200"
  },
  {
    "text": "server size we will do exactly the contrary of",
    "start": "1449200",
    "end": "1456960"
  },
  {
    "text": "the Sy client way of thinking we will think about fat client and them server",
    "start": "1456960",
    "end": "1464400"
  },
  {
    "text": "basically will move all the platform dependent code to the client the client code will directly convert",
    "start": "1464400",
    "end": "1472360"
  },
  {
    "text": "from the system the the client system calling convention and uh directly into the servers format",
    "start": "1472360",
    "end": "1480600"
  },
  {
    "text": "without no immediate um no intermediate common format because we we saw that",
    "start": "1480600",
    "end": "1486960"
  },
  {
    "text": "that was one of that was one of the shortcomings of the RPC model and it will create a request that",
    "start": "1486960",
    "end": "1494720"
  },
  {
    "text": "will constitute exactly what the server needs just before calling the CIS so that the server doesn't have to be smart",
    "start": "1494720",
    "end": "1503240"
  },
  {
    "text": "at all um the server will then take advantage of this common mechanism for",
    "start": "1503240",
    "end": "1508320"
  },
  {
    "text": "calling any cull and we'll do always the same we'll see later what it",
    "start": "1508320",
    "end": "1513919"
  },
  {
    "text": "is and we will make the CL the client completely dependent on the server platform um which basically it already",
    "start": "1513919",
    "end": "1523460"
  },
  {
    "text": "[Music] was so",
    "start": "1523460",
    "end": "1529880"
  },
  {
    "text": "now into more into the implementation uh this client code then that has to",
    "start": "1529880",
    "end": "1536840"
  },
  {
    "text": "create a request that represents exactly what",
    "start": "1536840",
    "end": "1542960"
  },
  {
    "text": "the stack in the server should look like just before calling the the CIS that we",
    "start": "1542960",
    "end": "1550080"
  },
  {
    "text": "want so it will create a on the request the exact packet that will be on memory",
    "start": "1550080",
    "end": "1556399"
  },
  {
    "text": "just before calling the the the system call so thinking about that um integer",
    "start": "1556399",
    "end": "1565600"
  },
  {
    "text": "arguments are trivially packed into this structure because they are passed by",
    "start": "1565600",
    "end": "1570799"
  },
  {
    "text": "value now pointers that's the the [Music]",
    "start": "1570799",
    "end": "1576440"
  },
  {
    "text": "the the hard one we are talking about a client and and a server which reside on completely",
    "start": "1576440",
    "end": "1583720"
  },
  {
    "text": "different systems and in fact their run on completely different processes so um",
    "start": "1583720",
    "end": "1592120"
  },
  {
    "text": "addresses that are valid on the client process for sure will have nothing to do",
    "start": "1592120",
    "end": "1597240"
  },
  {
    "text": "with addresses that are valid on the server process so we will have to do something about that for CIS that",
    "start": "1597240",
    "end": "1603720"
  },
  {
    "text": "actually pass pointers from the client's process sprace to the server so what we will do is we will",
    "start": "1603720",
    "end": "1613320"
  },
  {
    "text": "instead of directly passing the pointer that the application uh uses to call the client",
    "start": "1613320",
    "end": "1619440"
  },
  {
    "text": "Stu we will relocate the buffer inside the request itself and create a",
    "start": "1619440",
    "end": "1625039"
  },
  {
    "text": "pointer inside that buffer so it should look something like",
    "start": "1625039",
    "end": "1630720"
  },
  {
    "text": "this um this is a sample for the open",
    "start": "1630720",
    "end": "1636520"
  },
  {
    "text": "CIS open takes three arguments a file name flags for the open and the mode in",
    "start": "1636520",
    "end": "1645320"
  },
  {
    "text": "case you are creating a file",
    "start": "1645320",
    "end": "1649158"
  },
  {
    "text": "so the flx and the mode arguments are just integers they can be passed by",
    "start": "1651799",
    "end": "1657279"
  },
  {
    "text": "value there's no problem with that now the file name the file name is a pointer to string um the pointer that",
    "start": "1657279",
    "end": "1666120"
  },
  {
    "text": "the read the file reader program passed to open doesn't doesn't mean nothing in",
    "start": "1666120",
    "end": "1672760"
  },
  {
    "text": "the server memory so you have to change that so we will do is we will copy the",
    "start": "1672760",
    "end": "1678399"
  },
  {
    "text": "buffer that the reader process pass to the open uh the open",
    "start": "1678399",
    "end": "1685360"
  },
  {
    "text": "call inside the csol stab inside the request itself and we will create a pointer",
    "start": "1685360",
    "end": "1691679"
  },
  {
    "text": "back from the request inside itself it will look something like this um the the",
    "start": "1691679",
    "end": "1699039"
  },
  {
    "text": "block on the left is exactly what the",
    "start": "1699039",
    "end": "1704480"
  },
  {
    "text": "request looks like the request from the client to the server to execute the open",
    "start": "1704480",
    "end": "1711559"
  },
  {
    "text": "call um and the server which is not a smart at all will just copy the EXA",
    "start": "1711799",
    "end": "1718880"
  },
  {
    "text": "request onto each stack and call the the",
    "start": "1718880",
    "end": "1725799"
  },
  {
    "text": "CIS so the stack will look exactly the same",
    "start": "1725799",
    "end": "1733399"
  },
  {
    "text": "exactly uh the same as if the server process will have hold the lipy function",
    "start": "1733399",
    "end": "1739480"
  },
  {
    "text": "for open um there's another detail that is",
    "start": "1739480",
    "end": "1746760"
  },
  {
    "text": "that this uh file this pointer to the fil name buffer has to be an actual pointer it",
    "start": "1746760",
    "end": "1753559"
  },
  {
    "text": "cannot be like an offset into the buffer if it were an offset into the buffer the server code will have to be in place to",
    "start": "1753559",
    "end": "1761279"
  },
  {
    "text": "change that and and make it look like a real pointer so we have to increase the server size to do that",
    "start": "1761279",
    "end": "1768640"
  },
  {
    "text": "so um we'll see I think it's the next slide no not",
    "start": "1768640",
    "end": "1774159"
  },
  {
    "text": "yet we'll see that um the client will need a way to tell how the serers memory",
    "start": "1774159",
    "end": "1780919"
  },
  {
    "text": "look so the servers will upon connection the Ser will send back the stack pointer",
    "start": "1780919",
    "end": "1786640"
  },
  {
    "text": "so that we can uh create our own virtual pointers from the client side into the stack so file name will be a pointer",
    "start": "1786640",
    "end": "1793640"
  },
  {
    "text": "relative to that ESP or the stack pointer on the server",
    "start": "1793640",
    "end": "1800039"
  },
  {
    "text": "so um how does it look when we call a a CIS call in Linux Linux is pretty",
    "start": "1803080",
    "end": "1810880"
  },
  {
    "text": "straightforward eax is called is loaded with a cisal number um for example I think",
    "start": "1810880",
    "end": "1818559"
  },
  {
    "text": "it's three for open but is is what we saw on the",
    "start": "1818559",
    "end": "1824080"
  },
  {
    "text": "trace um arguments are passed through the evbs CX CDX ESI and eii registers",
    "start": "1824080",
    "end": "1832559"
  },
  {
    "text": "Cisco that have more than five arguments push the rest of them on the stack and then software interrup 8 is",
    "start": "1832559",
    "end": "1840000"
  },
  {
    "text": "call and values in eax it's pretty simple so if we were uh debugging an",
    "start": "1840000",
    "end": "1849480"
  },
  {
    "text": "open call it would look like this we are just inside the breakpoint in the LI SE",
    "start": "1849480",
    "end": "1856519"
  },
  {
    "text": "wrapper for open that was what I was referring before um this lipy wrapper",
    "start": "1856519",
    "end": "1863559"
  },
  {
    "text": "has to change between what we just explain about how to call a CIS and what",
    "start": "1863559",
    "end": "1870159"
  },
  {
    "text": "uh a typical user mode program uh uses to pass arguments to a liy function in",
    "start": "1870159",
    "end": "1876279"
  },
  {
    "text": "this case they are passed through a stack so that's what we see on the on the first three",
    "start": "1876279",
    "end": "1884240"
  },
  {
    "text": "instructions uh",
    "start": "1884240",
    "end": "1888240"
  },
  {
    "text": "where all the the each parameter is moving to its respective uh",
    "start": "1892519",
    "end": "1897880"
  },
  {
    "text": "register then five is moving to eax five is the number of open and then in8 is called and that's",
    "start": "1897880",
    "end": "1907880"
  },
  {
    "text": "it so this is how U our simple Linux server",
    "start": "1909760",
    "end": "1917360"
  },
  {
    "text": "for Cisco will look like first it will set up communication",
    "start": "1917360",
    "end": "1922679"
  },
  {
    "text": "with the client that could be anything there could be open a socket and connect",
    "start": "1922679",
    "end": "1927720"
  },
  {
    "text": "or acept connections or whatever then upon connection the first",
    "start": "1927720",
    "end": "1933159"
  },
  {
    "text": "thing we will do it will send back ESP like we said so the client can build the request it needs with the cor",
    "start": "1933159",
    "end": "1940240"
  },
  {
    "text": "pointers and then for each request will just copy the EXA request into the stack",
    "start": "1940240",
    "end": "1948039"
  },
  {
    "text": "the registers in needs for the arguments and call the the system",
    "start": "1948039",
    "end": "1953880"
  },
  {
    "text": "call this is why um it's important all the effort we did before to actually",
    "start": "1953880",
    "end": "1960240"
  },
  {
    "text": "make the request look like something that could be in a process",
    "start": "1960240",
    "end": "1965480"
  },
  {
    "text": "stack after that we'll just push the return Val the return value and send",
    "start": "1965480",
    "end": "1971880"
  },
  {
    "text": "back the buffer with the response why do we send back the buffer because certain C calls return information on the",
    "start": "1971880",
    "end": "1978360"
  },
  {
    "text": "buffers that we sent so if we're call in read for example uh",
    "start": "1978360",
    "end": "1986240"
  },
  {
    "text": "the it will look something like this but uh instead of passing an input buffer",
    "start": "1986440",
    "end": "1992919"
  },
  {
    "text": "like this we will pass an output buffer where the read Cisco can copy information",
    "start": "1992919",
    "end": "1998799"
  },
  {
    "text": "so uh when calling read this buffer in the request would will not make sense",
    "start": "1998799",
    "end": "2005000"
  },
  {
    "text": "other than saving space for the information when gets back when the server calls the the read system call it",
    "start": "2005000",
    "end": "2013880"
  },
  {
    "text": "will copy the information into that buffer and then our server will send that back to you to us so that we can",
    "start": "2013880",
    "end": "2019000"
  },
  {
    "text": "use it and that's why the whole",
    "start": "2019000",
    "end": "2025000"
  },
  {
    "text": "request uh packet transform itself into a response and is sent back to the to",
    "start": "2025000",
    "end": "2030519"
  },
  {
    "text": "the client um some important",
    "start": "2030519",
    "end": "2038120"
  },
  {
    "text": "uh parts of the of the server where we read into the stack",
    "start": "2038120",
    "end": "2045960"
  },
  {
    "text": "where the server reads the request from the client it's basically just the call into to read but the most important",
    "start": "2045960",
    "end": "2052919"
  },
  {
    "text": "thing is that the the buffer or the pointer for the read is just ESP directly so that we",
    "start": "2052919",
    "end": "2060000"
  },
  {
    "text": "don't have to do anything uh complex with that",
    "start": "2060000",
    "end": "2068118"
  },
  {
    "text": "and invoke when the server wants to invoke the called it just pops the r and",
    "start": "2068119",
    "end": "2074320"
  },
  {
    "text": "and calls in8 because the the buffers are already in",
    "start": "2074320",
    "end": "2083480"
  },
  {
    "text": "place so just to remember that the request was",
    "start": "2084560",
    "end": "2090800"
  },
  {
    "text": "prev store in ESP and it's exactly how the stack should look before calling a c",
    "start": "2090800",
    "end": "2097400"
  },
  {
    "text": "skull and in other systems like for example BSD where cisos are passed by the stack",
    "start": "2097400",
    "end": "2105040"
  },
  {
    "text": "itself you don't need this step you just callate after the read",
    "start": "2105040",
    "end": "2111920"
  },
  {
    "text": "so uh we'll see now that it's very easy to call this to to",
    "start": "2111920",
    "end": "2120880"
  },
  {
    "text": "implement this Cal server and for example in Linux it's just about 100 by",
    "start": "2120880",
    "end": "2126200"
  },
  {
    "text": "logs 100 bytes long using the um sin server fat client",
    "start": "2126200",
    "end": "2135280"
  },
  {
    "text": "thing let's take a a look at that",
    "start": "2135800",
    "end": "2141800"
  },
  {
    "text": "[Music]",
    "start": "2149040",
    "end": "2154389"
  },
  {
    "text": "[Music]",
    "start": "2159080",
    "end": "2162199"
  },
  {
    "text": "I have here uh I have here um this sample server which you can",
    "start": "2166560",
    "end": "2173560"
  },
  {
    "text": "see it's very simple also uh at the end of the",
    "start": "2173560",
    "end": "2178599"
  },
  {
    "text": "presentation uh I hav these samples ready for for the CD but if you look at",
    "start": "2178599",
    "end": "2184359"
  },
  {
    "text": "the CD you will find that there's a paper uh uh which is this presentation with more detail and there's also all",
    "start": "2184359",
    "end": "2191599"
  },
  {
    "text": "the there are also these samples on the net I'm going to pass you the URL at the",
    "start": "2191599",
    "end": "2197319"
  },
  {
    "text": "end um this is basically what we been",
    "start": "2197319",
    "end": "2204960"
  },
  {
    "text": "talking about the server just",
    "start": "2204960",
    "end": "2210040"
  },
  {
    "text": "uh reads the request calls the CIS",
    "start": "2210800",
    "end": "2219078"
  },
  {
    "text": "and send the answer back it's pretty small and uh what we do here is we",
    "start": "2219400",
    "end": "2226000"
  },
  {
    "text": "just uh accept new connections from a socket to have some kind of communication Channel with a with the",
    "start": "2226000",
    "end": "2234039"
  },
  {
    "text": "client",
    "start": "2235079",
    "end": "2238079"
  },
  {
    "text": "so for",
    "start": "2246520",
    "end": "2250520"
  },
  {
    "text": "among the samples I have um small a simple client for This Server written in",
    "start": "2278720",
    "end": "2284760"
  },
  {
    "text": "Python which I'm going to use for demonstrating how this thing",
    "start": "2284760",
    "end": "2291760"
  },
  {
    "text": "works and here I have um this is a a red hat",
    "start": "2293079",
    "end": "2299440"
  },
  {
    "text": "Lin running on BMW um I just executed the csol",
    "start": "2299440",
    "end": "2304800"
  },
  {
    "text": "server uh inside estray so we can see uh how the things that we do from",
    "start": "2304800",
    "end": "2312839"
  },
  {
    "text": "the client show up in the server",
    "start": "2312839",
    "end": "2316960"
  },
  {
    "text": "[Music]",
    "start": "2317870",
    "end": "2333019"
  },
  {
    "text": "[Music]",
    "start": "2335230",
    "end": "2339499"
  },
  {
    "text": "so here it goes um as we said before the first thing that the server does once the client",
    "start": "2365680",
    "end": "2371720"
  },
  {
    "text": "connects is send back it's a stack pointer so that the client knows how to package the request with the",
    "start": "2371720",
    "end": "2377359"
  },
  {
    "text": "buffers um and now the server is blocked on read waiting for new",
    "start": "2377359",
    "end": "2383160"
  },
  {
    "text": "requests so we can call ID for",
    "start": "2383160",
    "end": "2388880"
  },
  {
    "text": "example this is how it looks the",
    "start": "2392520",
    "end": "2398000"
  },
  {
    "text": "read the two reads here are the actual request from the",
    "start": "2398000",
    "end": "2404760"
  },
  {
    "text": "client this is the the get which the client was calling get user",
    "start": "2404760",
    "end": "2410440"
  },
  {
    "text": "ID this is the actual request get U ID return at file1 and the",
    "start": "2410440",
    "end": "2418680"
  },
  {
    "text": "server write back the response and so on for the other CIS so",
    "start": "2418680",
    "end": "2427359"
  },
  {
    "text": "we can call I don't know get current working directory it's even easier it's just one",
    "start": "2429119",
    "end": "2436279"
  },
  {
    "text": "CIS this is one CIS that for example returns information back in a",
    "start": "2436839",
    "end": "2443319"
  },
  {
    "text": "buffer we can call [Music]",
    "start": "2445960",
    "end": "2452940"
  },
  {
    "text": "exit which just kill the the server",
    "start": "2453359",
    "end": "2460200"
  },
  {
    "text": "program there you go exit",
    "start": "2461720",
    "end": "2465520"
  },
  {
    "text": "one so what happened to Windows",
    "start": "2468240",
    "end": "2474920"
  },
  {
    "text": "um before we said that the we will simplify and we will call Windows isal",
    "start": "2474920",
    "end": "2480000"
  },
  {
    "text": "any function in N DL well that's the common mechanism for calling those um so",
    "start": "2480000",
    "end": "2485480"
  },
  {
    "text": "our simple Windows server uh cannot simply uh call in0 so we will create to",
    "start": "2485480",
    "end": "2491680"
  },
  {
    "text": "make it simple we will create a server that just calls um any address that we give",
    "start": "2491680",
    "end": "2498800"
  },
  {
    "text": "him so if we do that we will be able to call any function on any dll that is",
    "start": "2498800",
    "end": "2504480"
  },
  {
    "text": "already loaded into the server process and that's it but there's one more detail that is that the blood",
    "start": "2504480",
    "end": "2511599"
  },
  {
    "text": "Library call and the get proc address call are already part of this address space so so we can call them and",
    "start": "2511599",
    "end": "2518680"
  },
  {
    "text": "actually load new libraries into the system so this is how the subo code for",
    "start": "2518680",
    "end": "2524000"
  },
  {
    "text": "the Windows Server will look like again it will set up a communication it will send back",
    "start": "2524000",
    "end": "2529440"
  },
  {
    "text": "ESP uh two new things happen it will send back the address of the library and the rest of get Pro",
    "start": "2529440",
    "end": "2534839"
  },
  {
    "text": "address and then it will simply Loop into a request reading Loop in which it",
    "start": "2534839",
    "end": "2540000"
  },
  {
    "text": "will just push the whole request into the stack like before and this time it's even uh better because uh the dll",
    "start": "2540000",
    "end": "2547640"
  },
  {
    "text": "calling convention in Windows passes all the arguments into the stack it will pop the address of the",
    "start": "2547640",
    "end": "2554119"
  },
  {
    "text": "function I want to call and it will just call it and send back the response so in this way I uh the client can tell the",
    "start": "2554119",
    "end": "2560280"
  },
  {
    "text": "server to to call any function that it wants um and also call made the server",
    "start": "2560280",
    "end": "2566920"
  },
  {
    "text": "load new libraries and get the addresses of new functions to call the only thing that is a little more difficult is",
    "start": "2566920",
    "end": "2573200"
  },
  {
    "text": "the um request packing code because now we are trying to uh make every call",
    "start": "2573200",
    "end": "2581160"
  },
  {
    "text": "possible so um functions win32 functions for example have some uh funky structors that are",
    "start": "2581160",
    "end": "2588680"
  },
  {
    "text": "nasty to pack because they point in back into itself and that kind of things so",
    "start": "2588680",
    "end": "2593800"
  },
  {
    "text": "that's the the client C is a little more complex but the server can be really small",
    "start": "2593800",
    "end": "2599640"
  },
  {
    "text": "too so what is it this what is this good for",
    "start": "2599760",
    "end": "2605760"
  },
  {
    "text": "um basically any task related to remote execution could be done with cisal",
    "start": "2605760",
    "end": "2611280"
  },
  {
    "text": "proxin but the fact is that um uh uh this fat client since server",
    "start": "2611280",
    "end": "2619839"
  },
  {
    "text": "architecture lags behind RPC for genetic stuff in in in things like uh efficiency",
    "start": "2619839",
    "end": "2626200"
  },
  {
    "text": "and and interoperability but there's one use for",
    "start": "2626200",
    "end": "2631880"
  },
  {
    "text": "what this thing is good for which is for exploiting code injection uh vulnerabilities like buff overflows and",
    "start": "2631880",
    "end": "2638880"
  },
  {
    "text": "uh format strings so",
    "start": "2638880",
    "end": "2645040"
  },
  {
    "text": "um what are these things um usually these kind of vulnerabilities give the",
    "start": "2645040",
    "end": "2650920"
  },
  {
    "text": "attacker the ability to gain control of the processor in the Target machine and",
    "start": "2650920",
    "end": "2657079"
  },
  {
    "text": "usually they are attacked in this way they have U they can the attack can be",
    "start": "2657079",
    "end": "2662640"
  },
  {
    "text": "divided in two stages which is not new there's an insection mechanism which is",
    "start": "2662640",
    "end": "2667880"
  },
  {
    "text": "specific to the vulnerability which basically um tries to um gain control of",
    "start": "2667880",
    "end": "2675079"
  },
  {
    "text": "the system tries to gain control of the instruction poter in the remote system and there's and then there's a payload",
    "start": "2675079",
    "end": "2681400"
  },
  {
    "text": "which is the actual code that we want to execute one we have we have accomplished that so usually we we see something that",
    "start": "2681400",
    "end": "2688319"
  },
  {
    "text": "is called Shell Code that is basically code that using CIS spawn a shell on the",
    "start": "2688319",
    "end": "2695040"
  },
  {
    "text": "remote system and send it back to the attacker's machine so the attacker now has an interactive console of the target",
    "start": "2695040",
    "end": "2703440"
  },
  {
    "text": "system um let's say let's see what happens when",
    "start": "2703440",
    "end": "2709200"
  },
  {
    "text": "we do that um suppose we are working doing in a penetration test for example",
    "start": "2709200",
    "end": "2715400"
  },
  {
    "text": "and we have successfully attacked the host and now we have a shell now we have two options either that's it and we hit",
    "start": "2715400",
    "end": "2722920"
  },
  {
    "text": "our our final Target and we are happy and we a beer",
    "start": "2722920",
    "end": "2729119"
  },
  {
    "text": "or we still need to keep on working right so what do we do with the with",
    "start": "2729119",
    "end": "2735040"
  },
  {
    "text": "this new system that we have we either keep trying uh attacking our system from",
    "start": "2735040",
    "end": "2740680"
  },
  {
    "text": "where we were before or we try to move there and take advantage of being inside",
    "start": "2740680",
    "end": "2747559"
  },
  {
    "text": "the the victim's network uh if we could do that we",
    "start": "2747559",
    "end": "2754800"
  },
  {
    "text": "will absorb the Privileges of this application that we just exploit um in this way we could exploit",
    "start": "2754800",
    "end": "2762200"
  },
  {
    "text": "webs of trust between different systems uh we call um bypass a firewall for",
    "start": "2762200",
    "end": "2767400"
  },
  {
    "text": "example because we will be already inside um and we have we will have effectively change our profile from one",
    "start": "2767400",
    "end": "2775040"
  },
  {
    "text": "of the an external attacker to one of an internal attacker in this in this case",
    "start": "2775040",
    "end": "2781960"
  },
  {
    "text": "so um this is what we refer to as p ing um",
    "start": "2781960",
    "end": "2789280"
  },
  {
    "text": "to be able to actually take advantage of this uh of this uh new advantage point",
    "start": "2789280",
    "end": "2796599"
  },
  {
    "text": "inside the system the auditor is faced with a problem which is if we want to keep",
    "start": "2796599",
    "end": "2802240"
  },
  {
    "text": "attacking system from there we need our tools there to work so um I'm sure most",
    "start": "2802240",
    "end": "2809280"
  },
  {
    "text": "of the people that have have done penetration testing here has been faced with uh this problem I have a",
    "start": "2809280",
    "end": "2817119"
  },
  {
    "text": "I have just hacked into an windows and tbx and now I want to keep going and I",
    "start": "2817119",
    "end": "2823680"
  },
  {
    "text": "found out that all my exploits are for Linux so now I have a problem I either",
    "start": "2823680",
    "end": "2829760"
  },
  {
    "text": "have to do it again uh or I cannot use that system at all",
    "start": "2829760",
    "end": "2835319"
  },
  {
    "text": "um other problem is that uh I don't know I have a Linux I have attack Linux books",
    "start": "2835319",
    "end": "2841319"
  },
  {
    "text": "Linux box but it is a different version of LIC",
    "start": "2841319",
    "end": "2847040"
  },
  {
    "text": "so I have to upload lipc build lipc oh I don't have CC I don't have a compiler I",
    "start": "2847040",
    "end": "2852200"
  },
  {
    "text": "have to upload the compiler build the compiler build lipc build my tools go",
    "start": "2852200",
    "end": "2857440"
  },
  {
    "text": "ahead and that's not something nice and uh it also makes the task of leaving",
    "start": "2857440",
    "end": "2863640"
  },
  {
    "text": "everything as it was before very complex",
    "start": "2863640",
    "end": "2869119"
  },
  {
    "text": "um so what we what this is where Cisco Pro proxin comes in uh what we we are",
    "start": "2869119",
    "end": "2878520"
  },
  {
    "text": "proposing here is instead of using a generic shell C for payload for tax we",
    "start": "2878520",
    "end": "2884440"
  },
  {
    "text": "will supply this sin server which is actually as small as a shell go and",
    "start": "2884440",
    "end": "2890680"
  },
  {
    "text": "that's why uh we wanted initially to make it small so what are the benefits",
    "start": "2890680",
    "end": "2898040"
  },
  {
    "text": "of doing this first if we build all our tools with cisal proxin once we have",
    "start": "2898040",
    "end": "2904839"
  },
  {
    "text": "deployed uh a cisal ser on a system now we have all our tools there too so we can pivot on them uh without doing",
    "start": "2904839",
    "end": "2912680"
  },
  {
    "text": "nothing without changing our uh exploits or information gathering tools Etc um we",
    "start": "2912680",
    "end": "2921319"
  },
  {
    "text": "have a complete access to the Target system so we can try to escalate privileges locally for example uh",
    "start": "2921319",
    "end": "2929200"
  },
  {
    "text": "exploiting a local wner ability to the system or",
    "start": "2929200",
    "end": "2935440"
  },
  {
    "text": "um uh by passing certain",
    "start": "2935440",
    "end": "2940599"
  },
  {
    "text": "uh excuse",
    "start": "2940599",
    "end": "2943880"
  },
  {
    "text": "me by passing certain constraints that the the vulnerable service has taken has",
    "start": "2946720",
    "end": "2954079"
  },
  {
    "text": "done to to lessen the impact of an attack for",
    "start": "2954079",
    "end": "2959480"
  },
  {
    "text": "example uh lowering privileges after authentication uh running inside a change rout jail um",
    "start": "2959480",
    "end": "2968680"
  },
  {
    "text": "Etc and the other important benefit is that sometimes even though a given",
    "start": "2968720",
    "end": "2974200"
  },
  {
    "text": "service is vulnerable to an attack it's not possible to spawn a",
    "start": "2974200",
    "end": "2979280"
  },
  {
    "text": "shell because uh we are for example inside a chain shell where jail where",
    "start": "2979280",
    "end": "2985319"
  },
  {
    "text": "there's no shell at all so even though the vulnerability exist",
    "start": "2985319",
    "end": "2990960"
  },
  {
    "text": "and we could take advantage of that we are not able to do it so if we can deploy a cal server then there we might",
    "start": "2990960",
    "end": "2998319"
  },
  {
    "text": "not be able to escalate privileges locally what but we might be able to launch attacks from this system uh even",
    "start": "2998319",
    "end": "3006440"
  },
  {
    "text": "though there's no shell",
    "start": "3006440",
    "end": "3012559"
  },
  {
    "text": "so before this I have a simple example that is the same server",
    "start": "3012559",
    "end": "3020280"
  },
  {
    "text": "but in it basically um lowers the Privileges call",
    "start": "3020280",
    "end": "3026799"
  },
  {
    "text": "change routs to SL TMP and uh changes the effective ID of uh of the process to",
    "start": "3026799",
    "end": "3034559"
  },
  {
    "text": "some to nobody so I'm going to connect to this same server now the same I did before",
    "start": "3034559",
    "end": "3041240"
  },
  {
    "text": "but I will try to I will run a sample that will basically",
    "start": "3041240",
    "end": "3047079"
  },
  {
    "text": "uh get back the Privileges of the super user and get out of the chain Ro jail",
    "start": "3047079",
    "end": "3054838"
  },
  {
    "text": "[Music]",
    "start": "3056530",
    "end": "3061290"
  },
  {
    "text": "[Music]",
    "start": "3068380",
    "end": "3071449"
  },
  {
    "text": "[Music]",
    "start": "3074040",
    "end": "3077710"
  },
  {
    "text": "so this is also something good about is called proxin it uh gives the attacker",
    "start": "3084160",
    "end": "3089200"
  },
  {
    "text": "the ability to once it's got in take a look around and see what's going on for example in this case I'm calling get uid",
    "start": "3089200",
    "end": "3097880"
  },
  {
    "text": "and get EU ID and get current working directory and I'm doing an LS and I",
    "start": "3097880",
    "end": "3103440"
  },
  {
    "text": "realize that I'm inside a CH jail because there's no way what I'm seeing",
    "start": "3103440",
    "end": "3108599"
  },
  {
    "text": "is root and I'm not rude because the uh",
    "start": "3108599",
    "end": "3115480"
  },
  {
    "text": "process lower the effective privileges of the user this a scenario is exactly what happens when you exploit uh a",
    "start": "3115480",
    "end": "3123280"
  },
  {
    "text": "vulnerability in W ftpd for example W ftpd will do exactly this will change",
    "start": "3123280",
    "end": "3129160"
  },
  {
    "text": "route to the slome FTP and and call set ID with the ID of the the user you",
    "start": "3129160",
    "end": "3136640"
  },
  {
    "text": "authenticated as for example Anonymous or whatever so if you actually if if this",
    "start": "3136640",
    "end": "3144280"
  },
  {
    "text": "were an attack against w ftpd will see the same thing so uh what happens",
    "start": "3144280",
    "end": "3152040"
  },
  {
    "text": "then you either don't do nothing else or you change your attack to accommodate",
    "start": "3152040",
    "end": "3157359"
  },
  {
    "text": "for this this will require for example a shell call change to call set uid",
    "start": "3157359",
    "end": "3163520"
  },
  {
    "text": "zero just before spawning the shell in this case I can do it interactively",
    "start": "3163520",
    "end": "3169400"
  },
  {
    "text": "because I I'm not talking to a a shell I'm talking to a cisal server so now I",
    "start": "3169400",
    "end": "3174880"
  },
  {
    "text": "change my ID and now I",
    "start": "3174880",
    "end": "3180040"
  },
  {
    "text": "can break out of the chain route with some common mechanism that that exist to",
    "start": "3181079",
    "end": "3187400"
  },
  {
    "text": "uh to do that once your rote so now I'm there",
    "start": "3187400",
    "end": "3195838"
  },
  {
    "text": "um uh if I didn't have cisal proxin I could do I could have done the same thing but I would have to",
    "start": "3207559",
    "end": "3215319"
  },
  {
    "text": "uh put everything inside the the payload I'm sending so I will have to change my",
    "start": "3215319",
    "end": "3221760"
  },
  {
    "text": "my shell code and I will have to not only have multiple versions of shell C for different operating systems but also",
    "start": "3221760",
    "end": "3228359"
  },
  {
    "text": "multiple versions of shell C for uh different configurations like if I have to call set ID if I if I have to get out",
    "start": "3228359",
    "end": "3234960"
  },
  {
    "text": "of a chain rout gel or if I have to uh find out a socket or whatever",
    "start": "3234960",
    "end": "3241440"
  },
  {
    "text": "so wrapping up um uh Cisco proing can be a really",
    "start": "3241440",
    "end": "3249119"
  },
  {
    "text": "powerful technique when uh attacking code insection vulnerabilities it basically um",
    "start": "3249119",
    "end": "3256240"
  },
  {
    "text": "instantly turns the the compromise system into vantage point from from",
    "start": "3256240",
    "end": "3262640"
  },
  {
    "text": "which we can stage further attacks into the system and it's also useful when",
    "start": "3262640",
    "end": "3267720"
  },
  {
    "text": "shellco customization is needed because uh the pro the the process set up some",
    "start": "3267720",
    "end": "3275640"
  },
  {
    "text": "constraints and it it could be also a a powerful framework for developing",
    "start": "3275640",
    "end": "3283000"
  },
  {
    "text": "penetration testing tools if we hard oral tools developed with cisal proxin",
    "start": "3283000",
    "end": "3289920"
  },
  {
    "text": "in mind we can take advantage of uh having our tax deploy called server",
    "start": "3289920",
    "end": "3296920"
  },
  {
    "text": "and we will be able to jump from them very easily so coding with cisal pering in mind basically raises the value of",
    "start": "3296920",
    "end": "3303359"
  },
  {
    "text": "these tools that's it you have any questions",
    "start": "3303359",
    "end": "3308480"
  },
  {
    "text": "could you explain a little bit more about your example the commands that you're typing ID yes python I assum yes",
    "start": "3308480",
    "end": "3316920"
  },
  {
    "text": "you explain a little bit about that yes um basically",
    "start": "3316920",
    "end": "3325440"
  },
  {
    "text": "I'm I'm not exactly this is what's going on I have a CIS called client written in Python",
    "start": "3328119",
    "end": "3334640"
  },
  {
    "text": "which is buil like a library and then on top of that I have just this mini shell script that basically uses that uh model",
    "start": "3334640",
    "end": "3342880"
  },
  {
    "text": "to call C calls so for example if I call cut this is actually more than one C",
    "start": "3342880",
    "end": "3349920"
  },
  {
    "text": "call it's calling open read read read read close so it's more complex than",
    "start": "3349920",
    "end": "3355160"
  },
  {
    "text": "that um we can take a look at it this",
    "start": "3355160",
    "end": "3360920"
  },
  {
    "text": "is this is the mini shell uh Source every time I I type a command one of",
    "start": "3370000",
    "end": "3376680"
  },
  {
    "text": "these methods is called so for example when I when I type ID I'm telling my",
    "start": "3376680",
    "end": "3383559"
  },
  {
    "text": "client to call Get U ID and get ID for I don't know cat here it",
    "start": "3383559",
    "end": "3392000"
  },
  {
    "text": "is first I get a file descriptor calling open then another one calling",
    "start": "3392000",
    "end": "3401160"
  },
  {
    "text": "read and I don't close the file which is not nice um we can take a look at the at the",
    "start": "3401359",
    "end": "3409799"
  },
  {
    "text": "proxy if you want but let me see",
    "start": "3409799",
    "end": "3417720"
  },
  {
    "text": "[Music]",
    "start": "3418460",
    "end": "3424280"
  },
  {
    "text": "um I I think this this will be useful I'll will manually call the",
    "start": "3435720",
    "end": "3440960"
  },
  {
    "text": "functions instead of using the mini shell which is Handy for for the demonstration but it's kind of a little",
    "start": "3440960",
    "end": "3447200"
  },
  {
    "text": "it's a layer on top of it [Music]",
    "start": "3447200",
    "end": "3458190"
  },
  {
    "text": "[Music]",
    "start": "3466000",
    "end": "3469579"
  },
  {
    "text": "I have connected to the client to the server and then I can this client you",
    "start": "3478240",
    "end": "3485960"
  },
  {
    "text": "can take a a look here at it basically implements the genetic method for",
    "start": "3485960",
    "end": "3491400"
  },
  {
    "text": "calling any cull in a in a Linux system which is this method is very it s",
    "start": "3491400",
    "end": "3498359"
  },
  {
    "text": "explains a lot um builds a request with a cisal number which is the the first regor we",
    "start": "3498359",
    "end": "3505440"
  },
  {
    "text": "pop then packs the arguments inside the the request sends the",
    "start": "3505440",
    "end": "3511839"
  },
  {
    "text": "request gets back the response and unpacks the Ron code and",
    "start": "3511839",
    "end": "3518000"
  },
  {
    "text": "that's it so for example here I have",
    "start": "3518000",
    "end": "3523240"
  },
  {
    "text": "the get cor working directory CIS uh it basically",
    "start": "3523240",
    "end": "3529760"
  },
  {
    "text": "just creates the arguments for the CIS which are like a buffer and and a",
    "start": "3529760",
    "end": "3537640"
  },
  {
    "text": "length calls the generic cisal method unpacks the return buffer and sends back",
    "start": "3537640",
    "end": "3543119"
  },
  {
    "text": "the response I can call [Music]",
    "start": "3543119",
    "end": "3560780"
  },
  {
    "text": "that here is the the call to the CIS call for",
    "start": "3561160",
    "end": "3567090"
  },
  {
    "text": "[Music]",
    "start": "3567090",
    "end": "3570169"
  },
  {
    "text": "[Music]",
    "start": "3582470",
    "end": "3587580"
  },
  {
    "text": "[Music] so",
    "start": "3595360",
    "end": "3601559"
  },
  {
    "text": "I I guess the the the cisal client is pretty",
    "start": "3601559",
    "end": "3607599"
  },
  {
    "text": "simple there's only like there's one method that do that does everything from which you can call any CIS and then",
    "start": "3607599",
    "end": "3613559"
  },
  {
    "text": "there's a some common CIS that I use on this demonstration that are already",
    "start": "3613559",
    "end": "3618640"
  },
  {
    "text": "implemented but then it's very easy to just do it manually thank you",
    "start": "3618640",
    "end": "3624400"
  },
  {
    "text": "welcome um something",
    "start": "3624400",
    "end": "3629400"
  },
  {
    "text": "else um you can find this uh the presentation the paper and",
    "start": "3631200",
    "end": "3637640"
  },
  {
    "text": "the the the server for Linux and the python client libraries and this URL",
    "start": "3637640",
    "end": "3645480"
  },
  {
    "text": "um I think they should be there right now but it might take maybe they are",
    "start": "3645480",
    "end": "3651559"
  },
  {
    "text": "there tomorrow so just if you don't find it just check again [Music]",
    "start": "3651559",
    "end": "3659229"
  },
  {
    "text": "I know have other",
    "start": "3660079",
    "end": "3663359"
  },
  {
    "text": "questions what window no there's not sample for that no just the so the",
    "start": "3669039",
    "end": "3678280"
  },
  {
    "text": "go yesl again what sorry you again I'm sorry here",
    "start": "3678280",
    "end": "3686480"
  },
  {
    "text": "is there a way to distinguish between which calls should be made locally and which calls should be made on the server",
    "start": "3686480",
    "end": "3693960"
  },
  {
    "text": "for example you open local LC and the remote NC password the same",
    "start": "3693960",
    "end": "3699960"
  },
  {
    "text": "program um you mean if there's a way to distinguish um from a given program",
    "start": "3699960",
    "end": "3706799"
  },
  {
    "text": "which one should be executed locally or if well that's not easy yeah it depends",
    "start": "3706799",
    "end": "3714160"
  },
  {
    "text": "a lot of what are you looking at um there are",
    "start": "3714160",
    "end": "3720039"
  },
  {
    "text": "some uh some stuff that can be done with cisal proxin I mean initially Cisco",
    "start": "3720039",
    "end": "3726319"
  },
  {
    "text": "proxin U presents itself as a way of putting a process uh making a process",
    "start": "3726319",
    "end": "3734160"
  },
  {
    "text": "execute remotely uh without the process knowing anything about it so thinking about that we are talking about running",
    "start": "3734160",
    "end": "3740920"
  },
  {
    "text": "everything on the remote server but sometimes uh there are other stuff that",
    "start": "3740920",
    "end": "3745960"
  },
  {
    "text": "you can do for example you could use a Cisco server to do a final transfer",
    "start": "3745960",
    "end": "3751200"
  },
  {
    "text": "because you could open a local file and open a remote file and then read and write uh from one and from the other",
    "start": "3751200",
    "end": "3758680"
  },
  {
    "text": "one which is something that looks kind of uh it's not the same thing we're",
    "start": "3758680",
    "end": "3765760"
  },
  {
    "text": "seeing here because you will have to call like a non cisal proia open read",
    "start": "3765760",
    "end": "3771440"
  },
  {
    "text": "and and and close and a Cisco prox open read and close so with the first you will open the local",
    "start": "3771440",
    "end": "3777880"
  },
  {
    "text": "file and read from it and with the second you will open the the remote file in the remote system and write to it so",
    "start": "3777880",
    "end": "3786000"
  },
  {
    "text": "if you just want to make one process execute remotely",
    "start": "3786000",
    "end": "3791640"
  },
  {
    "text": "um I think you will have to select which ones you want to to actually proxy for",
    "start": "3791640",
    "end": "3797640"
  },
  {
    "text": "you don't want to proxy memory management C calls for",
    "start": "3797640",
    "end": "3803799"
  },
  {
    "text": "example can just go for something again yes of course",
    "start": "3804520",
    "end": "3812359"
  },
  {
    "text": "well I won't say of course um you could Cal proxy everything that nmap does with",
    "start": "3812359",
    "end": "3819799"
  },
  {
    "text": "system level services for example uh using RW sockets but if nmap uses",
    "start": "3819799",
    "end": "3828440"
  },
  {
    "text": "peup um",
    "start": "3828440",
    "end": "3834720"
  },
  {
    "text": "you will have to communicate directly with BPF on the remote",
    "start": "3834720",
    "end": "3841520"
  },
  {
    "text": "system or you can change pickup to use Cisco proxim the El pickup so you can",
    "start": "3842279",
    "end": "3848279"
  },
  {
    "text": "rebuild and map with that there are some uh other interesting",
    "start": "3848279",
    "end": "3853960"
  },
  {
    "text": "stuff like uh um dll injection and",
    "start": "3853960",
    "end": "3859359"
  },
  {
    "text": "uh Dynamic Library I don't remember the name of the paper um uh some guys that",
    "start": "3859359",
    "end": "3866480"
  },
  {
    "text": "are doing some stuff with a u change in what dynamic library is a process",
    "start": "3866480",
    "end": "3873319"
  },
  {
    "text": "uh opens and putting themselves in between so that's another approach",
    "start": "3873319",
    "end": "3879119"
  },
  {
    "text": "to uh cisal proxy a process without changing nothing um the approach I'm",
    "start": "3879119",
    "end": "3886520"
  },
  {
    "text": "showing here is I'm not calling the actual lip C functions I'm calling other Library so uh you will have to repeal",
    "start": "3886520",
    "end": "3893960"
  },
  {
    "text": "the tool for example nmap uh I think it should be possible to uh",
    "start": "3893960",
    "end": "3901359"
  },
  {
    "text": "inject in the in the DLS and make and go to a cisal proxin scheme but I think it",
    "start": "3901359",
    "end": "3907440"
  },
  {
    "text": "will be delicate for some [Music]",
    "start": "3907440",
    "end": "3913559"
  },
  {
    "text": "things yeah yeah of course um that's what this",
    "start": "3913559",
    "end": "3920760"
  },
  {
    "text": "is about yeah I think it can be done but uh I'm sure it can trivially it can be",
    "start": "3920760",
    "end": "3927240"
  },
  {
    "text": "trivially done for the staff that uses raw sockets it might be not so trivial for the BPF staff for the pocket capture",
    "start": "3927240",
    "end": "3936559"
  },
  {
    "text": "[Music] yes a server um the sample that I'm that it's",
    "start": "3947620",
    "end": "3955760"
  },
  {
    "text": "going to be there yes it takes um uh it takes advantage of that to make",
    "start": "3955760",
    "end": "3963000"
  },
  {
    "text": "the server simple right so yes the client is completely dependent on the on",
    "start": "3963000",
    "end": "3968160"
  },
  {
    "text": "the server's platform there's something more that can be done you can build another layer of abstraction on top of",
    "start": "3968160",
    "end": "3975880"
  },
  {
    "text": "the Cisco client something like lip C which basically will translate back and",
    "start": "3975880",
    "end": "3981400"
  },
  {
    "text": "forth from the these two different streams so uh",
    "start": "3981400",
    "end": "3987359"
  },
  {
    "text": "um it should be a way of making any posic uh compliant uh code be able to be",
    "start": "3987640",
    "end": "3994760"
  },
  {
    "text": "Cisco proxy on any server for example but you have to take an extra step and build that abstraction layer on top of",
    "start": "3994760",
    "end": "4001240"
  },
  {
    "text": "the cisal client these are like the The Cisco client and server that uh I",
    "start": "4001240",
    "end": "4006559"
  },
  {
    "text": "presented here are like the lowest layer of of uh of it so it yes it's very",
    "start": "4006559",
    "end": "4013200"
  },
  {
    "text": "dependent I think and we are out of",
    "start": "4013200",
    "end": "4019680"
  },
  {
    "text": "[Music]",
    "start": "4025350",
    "end": "4028650"
  },
  {
    "text": "time you said it's 100 fights",
    "start": "4032200",
    "end": "4037440"
  }
]