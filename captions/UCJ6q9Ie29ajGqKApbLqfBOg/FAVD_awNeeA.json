[
  {
    "start": "0",
    "end": "110000"
  },
  {
    "text": "good morning my name is Scott sanajeh",
    "start": "30",
    "end": "2310"
  },
  {
    "text": "and today I'm going to talk to you about",
    "start": "2310",
    "end": "3480"
  },
  {
    "text": "a tool my colleagues and I wrote called",
    "start": "3480",
    "end": "4980"
  },
  {
    "text": "a cease play and this tool is designed",
    "start": "4980",
    "end": "6629"
  },
  {
    "text": "to exploit algorithmic complexity",
    "start": "6629",
    "end": "8880"
  },
  {
    "text": "vulnerabilities so the way this song's",
    "start": "8880",
    "end": "11820"
  },
  {
    "text": "gonna shape up first we're gonna",
    "start": "11820",
    "end": "13170"
  },
  {
    "text": "introduce algorithmic complexity",
    "start": "13170",
    "end": "14370"
  },
  {
    "text": "vulnerabilities to those of you who",
    "start": "14370",
    "end": "15570"
  },
  {
    "text": "don't know what they are we're talking",
    "start": "15570",
    "end": "17039"
  },
  {
    "text": "about why we develop this tool to",
    "start": "17039",
    "end": "19109"
  },
  {
    "text": "exploit them and then we're gonna do",
    "start": "19109",
    "end": "20369"
  },
  {
    "text": "some demos but first I'd like to",
    "start": "20369",
    "end": "22650"
  },
  {
    "text": "acknowledge all the folks that helped",
    "start": "22650",
    "end": "24269"
  },
  {
    "text": "design and build this tool you see their",
    "start": "24269",
    "end": "26310"
  },
  {
    "text": "names and faces here and I'd also like",
    "start": "26310",
    "end": "28470"
  },
  {
    "text": "to thank the Defense Advanced Research",
    "start": "28470",
    "end": "30029"
  },
  {
    "text": "Projects Agency and the Air Force",
    "start": "30029",
    "end": "31650"
  },
  {
    "text": "Research Laboratory for sponsoring this",
    "start": "31650",
    "end": "33390"
  },
  {
    "text": "work all right now let's get into some",
    "start": "33390",
    "end": "35489"
  },
  {
    "text": "details so algorithmic complexity",
    "start": "35489",
    "end": "37920"
  },
  {
    "text": "vulnerabilities are a type of resource",
    "start": "37920",
    "end": "39510"
  },
  {
    "text": "usage attack and the idea behind them is",
    "start": "39510",
    "end": "41850"
  },
  {
    "text": "that you want to trigger program to use",
    "start": "41850",
    "end": "43559"
  },
  {
    "text": "as many or as many resources as possible",
    "start": "43559",
    "end": "46309"
  },
  {
    "text": "using as few input bytes as possible so",
    "start": "46309",
    "end": "50250"
  },
  {
    "text": "in a very sort of dry academic sense we",
    "start": "50250",
    "end": "52860"
  },
  {
    "text": "have this graph down here on the right",
    "start": "52860",
    "end": "54149"
  },
  {
    "text": "on the y-axis is resource usage method",
    "start": "54149",
    "end": "57210"
  },
  {
    "text": "measured in either time or space and on",
    "start": "57210",
    "end": "59219"
  },
  {
    "text": "the x-axis are the input bytes that you",
    "start": "59219",
    "end": "60989"
  },
  {
    "text": "supply to the program so we'd like to",
    "start": "60989",
    "end": "63210"
  },
  {
    "text": "identify this shaded area and say that a",
    "start": "63210",
    "end": "65640"
  },
  {
    "text": "program is vulnerable to an algorithm",
    "start": "65640",
    "end": "67140"
  },
  {
    "text": "complexity attack if you feed it less",
    "start": "67140",
    "end": "69390"
  },
  {
    "text": "than B bytes of data and it uses at",
    "start": "69390",
    "end": "72119"
  },
  {
    "text": "least a amount of resources so in this",
    "start": "72119",
    "end": "74729"
  },
  {
    "text": "example there are two programs whose",
    "start": "74729",
    "end": "77040"
  },
  {
    "text": "asymptotic runtime complexity are both",
    "start": "77040",
    "end": "79950"
  },
  {
    "text": "linear once labeled c1 late is labeled",
    "start": "79950",
    "end": "82290"
  },
  {
    "text": "d4 C there is some collection of bytes",
    "start": "82290",
    "end": "84780"
  },
  {
    "text": "less than being sized where it will get",
    "start": "84780",
    "end": "87030"
  },
  {
    "text": "into this shaded area and for D there",
    "start": "87030",
    "end": "89100"
  },
  {
    "text": "isn't so C's vulnerable D is not now the",
    "start": "89100",
    "end": "91680"
  },
  {
    "text": "real world we don't have these hard and",
    "start": "91680",
    "end": "92880"
  },
  {
    "text": "fast limits right what we say is in",
    "start": "92880",
    "end": "95220"
  },
  {
    "text": "terms of time that the CPU will be spun",
    "start": "95220",
    "end": "97680"
  },
  {
    "text": "to 100% utilization for let's say three",
    "start": "97680",
    "end": "99960"
  },
  {
    "text": "minutes and we'll call that a successful",
    "start": "99960",
    "end": "101250"
  },
  {
    "text": "attack alternatively in the the space",
    "start": "101250",
    "end": "104479"
  },
  {
    "text": "types of vulnerabilities are either in",
    "start": "104479",
    "end": "106590"
  },
  {
    "text": "RAM so which you have large amounts of",
    "start": "106590",
    "end": "107939"
  },
  {
    "text": "RAM or large amounts of disk space and",
    "start": "107939",
    "end": "109740"
  },
  {
    "text": "you've seen these types of things before",
    "start": "109740",
    "end": "111869"
  },
  {
    "start": "110000",
    "end": "180000"
  },
  {
    "text": "you just might not have known what they",
    "start": "111869",
    "end": "113220"
  },
  {
    "text": "were called so for example decompression",
    "start": "113220",
    "end": "115560"
  },
  {
    "text": "bombs a real classic example probably",
    "start": "115560",
    "end": "117869"
  },
  {
    "text": "one of the best-known examples is 42 X",
    "start": "117869",
    "end": "119670"
  },
  {
    "text": "if this is a 42 kilobyte zip file that",
    "start": "119670",
    "end": "122689"
  },
  {
    "text": "expands to 4.5 petabytes on disk and I",
    "start": "122689",
    "end": "126030"
  },
  {
    "text": "know about you but I don't have four",
    "start": "126030",
    "end": "127380"
  },
  {
    "text": "point five petabytes on disk so this is",
    "start": "127380",
    "end": "129030"
  },
  {
    "text": "probably going to cause some issues to",
    "start": "129030",
    "end": "130140"
  },
  {
    "text": "my system",
    "start": "130140",
    "end": "130929"
  },
  {
    "text": "another classic example are hash-table",
    "start": "130929",
    "end": "133060"
  },
  {
    "text": "collisions we're going to go through a",
    "start": "133060",
    "end": "134860"
  },
  {
    "text": "specific example of CVE 2011 48 58 a",
    "start": "134860",
    "end": "138879"
  },
  {
    "text": "little later on and if you go to these",
    "start": "138879",
    "end": "141010"
  },
  {
    "text": "kind of security conferences a lot",
    "start": "141010",
    "end": "142150"
  },
  {
    "text": "you'll see them crop up from time to",
    "start": "142150",
    "end": "143739"
  },
  {
    "text": "time I in 2016 at blackhat USA there was",
    "start": "143739",
    "end": "146560"
  },
  {
    "text": "I came to drop bombs that talked all",
    "start": "146560",
    "end": "148120"
  },
  {
    "text": "about decompression bombs and how to use",
    "start": "148120",
    "end": "149590"
  },
  {
    "text": "them from pentesting that resulted in",
    "start": "149590",
    "end": "151420"
  },
  {
    "text": "the bombed out codes website which has",
    "start": "151420",
    "end": "153459"
  },
  {
    "text": "pre-canned",
    "start": "153459",
    "end": "154739"
  },
  {
    "text": "compression bombs you use download and",
    "start": "154739",
    "end": "156730"
  },
  {
    "text": "use and the DEF CON 23 there was a",
    "start": "156730",
    "end": "159849"
  },
  {
    "text": "regular expression denial-of-service",
    "start": "159849",
    "end": "161319"
  },
  {
    "text": "talk and this is actually a wasp even",
    "start": "161319",
    "end": "163959"
  },
  {
    "text": "identifies this as a type of",
    "start": "163959",
    "end": "165159"
  },
  {
    "text": "vulnerability that you should be looking",
    "start": "165159",
    "end": "166480"
  },
  {
    "text": "for basically you can create regular",
    "start": "166480",
    "end": "168819"
  },
  {
    "text": "expressions that when you attempt to",
    "start": "168819",
    "end": "170590"
  },
  {
    "text": "match certain strings to them it takes",
    "start": "170590",
    "end": "172209"
  },
  {
    "text": "the regular expression engine a very",
    "start": "172209",
    "end": "174010"
  },
  {
    "text": "very long time to try and match those",
    "start": "174010",
    "end": "175659"
  },
  {
    "text": "strings so these are the kinds of things",
    "start": "175659",
    "end": "177129"
  },
  {
    "text": "you might have seen and just not known",
    "start": "177129",
    "end": "178450"
  },
  {
    "text": "they were algorithmic complexity",
    "start": "178450",
    "end": "179409"
  },
  {
    "text": "vulnerabilities so where do they come",
    "start": "179409",
    "end": "181569"
  },
  {
    "start": "180000",
    "end": "240000"
  },
  {
    "text": "from well go back to your undergraduate",
    "start": "181569",
    "end": "183400"
  },
  {
    "text": "algorithms course every algorithm has a",
    "start": "183400",
    "end": "185439"
  },
  {
    "text": "best an average in a worst case it may",
    "start": "185439",
    "end": "187870"
  },
  {
    "text": "be vulnerable to an algorithm complexity",
    "start": "187870",
    "end": "189670"
  },
  {
    "text": "vulnerability if we can reliably send",
    "start": "189670",
    "end": "192730"
  },
  {
    "text": "input to that algorithm that will",
    "start": "192730",
    "end": "194470"
  },
  {
    "text": "trigger its worst case provided we have",
    "start": "194470",
    "end": "196599"
  },
  {
    "text": "enough input bytes we can send to that",
    "start": "196599",
    "end": "198250"
  },
  {
    "text": "that algorithm as a canonical example",
    "start": "198250",
    "end": "200290"
  },
  {
    "text": "take bubble sort right it can be written",
    "start": "200290",
    "end": "202480"
  },
  {
    "text": "in less than ten lines of code which is",
    "start": "202480",
    "end": "204010"
  },
  {
    "text": "there in the bottom left of the screen",
    "start": "204010",
    "end": "205560"
  },
  {
    "text": "and it simply sorts items in the list",
    "start": "205560",
    "end": "208870"
  },
  {
    "text": "and it does so very naively all it does",
    "start": "208870",
    "end": "210970"
  },
  {
    "text": "is it looks at two adjacent pairs of",
    "start": "210970",
    "end": "212530"
  },
  {
    "text": "items and if they're not in order it",
    "start": "212530",
    "end": "214180"
  },
  {
    "text": "puts them in order and then moves to the",
    "start": "214180",
    "end": "215440"
  },
  {
    "text": "next adjacent pair of items in the best",
    "start": "215440",
    "end": "217930"
  },
  {
    "text": "possible case all the items are already",
    "start": "217930",
    "end": "220479"
  },
  {
    "text": "sorted so all bubble sort has to do is",
    "start": "220479",
    "end": "222069"
  },
  {
    "text": "just check that list it goes to that",
    "start": "222069",
    "end": "223449"
  },
  {
    "text": "list one time in the worst possible case",
    "start": "223449",
    "end": "226479"
  },
  {
    "text": "when you have things in reverse sorted",
    "start": "226479",
    "end": "227620"
  },
  {
    "text": "order it has to swap pairs every single",
    "start": "227620",
    "end": "230470"
  },
  {
    "text": "pair and that comes back to the list",
    "start": "230470",
    "end": "231790"
  },
  {
    "text": "again and swaps slightly less than every",
    "start": "231790",
    "end": "233680"
  },
  {
    "text": "pair and then slightly less than that",
    "start": "233680",
    "end": "235329"
  },
  {
    "text": "and so you get this N squared complexity",
    "start": "235329",
    "end": "237400"
  },
  {
    "text": "in the worst case so that's kind of",
    "start": "237400",
    "end": "242049"
  },
  {
    "start": "240000",
    "end": "370000"
  },
  {
    "text": "where they come from but you know why do",
    "start": "242049",
    "end": "243549"
  },
  {
    "text": "we care about them right what are the",
    "start": "243549",
    "end": "244720"
  },
  {
    "text": "properties that make them interesting",
    "start": "244720",
    "end": "245919"
  },
  {
    "text": "well they're really only good for denial",
    "start": "245919",
    "end": "247840"
  },
  {
    "text": "of service effects and you might think",
    "start": "247840",
    "end": "248979"
  },
  {
    "text": "to yourself who cares big deal",
    "start": "248979",
    "end": "250599"
  },
  {
    "text": "doesn't really matter except for the",
    "start": "250599",
    "end": "252280"
  },
  {
    "text": "fact that you're used to thinking of",
    "start": "252280",
    "end": "253329"
  },
  {
    "text": "denial of service conditions as",
    "start": "253329",
    "end": "254709"
  },
  {
    "text": "distributed denial service attacks right",
    "start": "254709",
    "end": "256539"
  },
  {
    "text": "something where we commandeer a lot of",
    "start": "256539",
    "end": "260169"
  },
  {
    "text": "host maybe in a botnet and we send lots",
    "start": "260169",
    "end": "262270"
  },
  {
    "text": "and lots of traffic to a network service",
    "start": "262270",
    "end": "263770"
  },
  {
    "text": "to take it down what we're talking about",
    "start": "263770",
    "end": "265449"
  },
  {
    "text": "here is the ability to send a single",
    "start": "265449",
    "end": "267819"
  },
  {
    "text": "packet to that same network service but",
    "start": "267819",
    "end": "269949"
  },
  {
    "text": "cause the same effect spin the CPU up to",
    "start": "269949",
    "end": "272110"
  },
  {
    "text": "a hundred percent utilization for some",
    "start": "272110",
    "end": "273849"
  },
  {
    "text": "period of time other types of effects in",
    "start": "273849",
    "end": "276069"
  },
  {
    "text": "this space area we can consume lots of",
    "start": "276069",
    "end": "278020"
  },
  {
    "text": "RAM which would do one of two things",
    "start": "278020",
    "end": "279460"
  },
  {
    "text": "might crash the program because it can't",
    "start": "279460",
    "end": "281770"
  },
  {
    "text": "it can't allocate more RAM or might",
    "start": "281770",
    "end": "283810"
  },
  {
    "text": "cause massive swapping a disk which has",
    "start": "283810",
    "end": "285999"
  },
  {
    "text": "sent its consequential effects on other",
    "start": "285999",
    "end": "287499"
  },
  {
    "text": "programs similarly if we fill up the",
    "start": "287499",
    "end": "290379"
  },
  {
    "text": "disk space what might happen is your",
    "start": "290379",
    "end": "292240"
  },
  {
    "text": "program might crash because it's trying",
    "start": "292240",
    "end": "294370"
  },
  {
    "text": "to write to disk and it can't but really",
    "start": "294370",
    "end": "296889"
  },
  {
    "text": "wasn't your program that caused the",
    "start": "296889",
    "end": "297849"
  },
  {
    "text": "problem another program in the system",
    "start": "297849",
    "end": "299289"
  },
  {
    "text": "might have actually filled up the disk",
    "start": "299289",
    "end": "300699"
  },
  {
    "text": "space via one of these attacks so you",
    "start": "300699",
    "end": "302259"
  },
  {
    "text": "again get those second and third order",
    "start": "302259",
    "end": "304060"
  },
  {
    "text": "effects with these kinds of",
    "start": "304060",
    "end": "305319"
  },
  {
    "text": "vulnerabilities another interesting",
    "start": "305319",
    "end": "307389"
  },
  {
    "text": "property besides denial service effects",
    "start": "307389",
    "end": "309430"
  },
  {
    "text": "is that they're difficult to fix these",
    "start": "309430",
    "end": "311560"
  },
  {
    "text": "aren't bugs bubblesort for example is",
    "start": "311560",
    "end": "314469"
  },
  {
    "text": "supposed to be able to sort any list of",
    "start": "314469",
    "end": "316810"
  },
  {
    "text": "items right it doesn't matter if they're",
    "start": "316810",
    "end": "318249"
  },
  {
    "text": "in reverse sorted order it just happens",
    "start": "318249",
    "end": "320229"
  },
  {
    "text": "to be the case that will do much more",
    "start": "320229",
    "end": "322330"
  },
  {
    "text": "work when they're in reverse sorted",
    "start": "322330",
    "end": "323860"
  },
  {
    "text": "order",
    "start": "323860",
    "end": "324400"
  },
  {
    "text": "so there's not a there's not an actual",
    "start": "324400",
    "end": "326710"
  },
  {
    "text": "bug to be fixed here which it have to",
    "start": "326710",
    "end": "328599"
  },
  {
    "text": "actually do to fix it is to swap out the",
    "start": "328599",
    "end": "330129"
  },
  {
    "text": "algorithm and here's why that might",
    "start": "330129",
    "end": "331839"
  },
  {
    "text": "never occur a commercial vendor who has",
    "start": "331839",
    "end": "334569"
  },
  {
    "text": "who is in a very difficult market might",
    "start": "334569",
    "end": "338199"
  },
  {
    "text": "depend on performance to their product",
    "start": "338199",
    "end": "339669"
  },
  {
    "text": "to beat their competitors and if you",
    "start": "339669",
    "end": "341229"
  },
  {
    "text": "said to them hey you have a really bad",
    "start": "341229",
    "end": "342909"
  },
  {
    "text": "worst case in your product they say well",
    "start": "342909",
    "end": "344649"
  },
  {
    "text": "my average case is really good and I'm",
    "start": "344649",
    "end": "346300"
  },
  {
    "text": "unwilling to swap out another algorithm",
    "start": "346300",
    "end": "348460"
  },
  {
    "text": "that has a better worst case for a worse",
    "start": "348460",
    "end": "351219"
  },
  {
    "text": "average case because then they're gonna",
    "start": "351219",
    "end": "352569"
  },
  {
    "text": "lose market share and thirdly they're",
    "start": "352569",
    "end": "355240"
  },
  {
    "text": "very difficult to defend against right",
    "start": "355240",
    "end": "356500"
  },
  {
    "text": "there is nothing wrong there's no",
    "start": "356500",
    "end": "358360"
  },
  {
    "text": "signature you're gonna write an IDs for",
    "start": "358360",
    "end": "360430"
  },
  {
    "text": "numbers that are put in a particular",
    "start": "360430",
    "end": "362319"
  },
  {
    "text": "order right",
    "start": "362319",
    "end": "363219"
  },
  {
    "text": "all of these are expected inputs the",
    "start": "363219",
    "end": "364990"
  },
  {
    "text": "algorithm is supposed to be able to",
    "start": "364990",
    "end": "366399"
  },
  {
    "text": "handle them so how do you write",
    "start": "366399",
    "end": "367539"
  },
  {
    "text": "something to defend against them why my",
    "start": "367539",
    "end": "370870"
  },
  {
    "start": "370000",
    "end": "410000"
  },
  {
    "text": "company cares about this is because in",
    "start": "370870",
    "end": "372159"
  },
  {
    "text": "2015 we started working on this program",
    "start": "372159",
    "end": "373899"
  },
  {
    "text": "for DARPA called space-time analysis for",
    "start": "373899",
    "end": "375969"
  },
  {
    "text": "cyber security this whole program was",
    "start": "375969",
    "end": "377949"
  },
  {
    "text": "designed to be able to detect algorithm",
    "start": "377949",
    "end": "380740"
  },
  {
    "text": "plek city and side-channel",
    "start": "380740",
    "end": "381759"
  },
  {
    "text": "vulnerabilities and java programs it was",
    "start": "381759",
    "end": "383830"
  },
  {
    "text": "structured as a capture the flag",
    "start": "383830",
    "end": "385029"
  },
  {
    "text": "competition so their research and",
    "start": "385029",
    "end": "386889"
  },
  {
    "text": "development teams coming up with",
    "start": "386889",
    "end": "388089"
  },
  {
    "text": "automated program analysis tools to look",
    "start": "388089",
    "end": "390550"
  },
  {
    "text": "at java code and find these and then",
    "start": "390550",
    "end": "392379"
  },
  {
    "text": "there was us",
    "start": "392379",
    "end": "393100"
  },
  {
    "text": "I ran the control team the control team",
    "start": "393100",
    "end": "395050"
  },
  {
    "text": "was just a group of folks are good at VR",
    "start": "395050",
    "end": "397750"
  },
  {
    "text": "who were sitting down with readily",
    "start": "397750",
    "end": "400150"
  },
  {
    "text": "available tools manually going through",
    "start": "400150",
    "end": "402250"
  },
  {
    "text": "code trying to find these if the R&D",
    "start": "402250",
    "end": "403960"
  },
  {
    "text": "tools did better than we did under",
    "start": "403960",
    "end": "405520"
  },
  {
    "text": "particular competition then the the",
    "start": "405520",
    "end": "408070"
  },
  {
    "text": "research was winning if not we were",
    "start": "408070",
    "end": "409840"
  },
  {
    "text": "winning so we ran there's some really",
    "start": "409840",
    "end": "411670"
  },
  {
    "start": "410000",
    "end": "448000"
  },
  {
    "text": "big problems with this first of all",
    "start": "411670",
    "end": "413470"
  },
  {
    "text": "every competition had tens of binary so",
    "start": "413470",
    "end": "416020"
  },
  {
    "text": "beat went between twenty and thirty",
    "start": "416020",
    "end": "417280"
  },
  {
    "text": "bynars each of those could have had tens",
    "start": "417280",
    "end": "419170"
  },
  {
    "text": "of thousands of lines of code in them",
    "start": "419170",
    "end": "420460"
  },
  {
    "text": "each of those could also have had",
    "start": "420460",
    "end": "422620"
  },
  {
    "text": "multiple potential vulnerabilities so",
    "start": "422620",
    "end": "424120"
  },
  {
    "text": "there's lots of algorithms implemented",
    "start": "424120",
    "end": "425620"
  },
  {
    "text": "in each of these how do we know which",
    "start": "425620",
    "end": "427000"
  },
  {
    "text": "ones are vulnerable and by the way the",
    "start": "427000",
    "end": "429370"
  },
  {
    "text": "competitions are timebox right they're",
    "start": "429370",
    "end": "431320"
  },
  {
    "text": "constrained by time and all we had to",
    "start": "431320",
    "end": "433390"
  },
  {
    "text": "use were existing tools like debuggers d",
    "start": "433390",
    "end": "435460"
  },
  {
    "text": "compilers and profilers so triage for us",
    "start": "435460",
    "end": "437920"
  },
  {
    "text": "became very important we need to be able",
    "start": "437920",
    "end": "439510"
  },
  {
    "text": "to find an algorithm and immediately",
    "start": "439510",
    "end": "441160"
  },
  {
    "text": "determine whether or not that was",
    "start": "441160",
    "end": "442210"
  },
  {
    "text": "vulnerable we need to fire some input",
    "start": "442210",
    "end": "443560"
  },
  {
    "text": "out at that says you are vulnerable or",
    "start": "443560",
    "end": "444940"
  },
  {
    "text": "you are not of course if it was in known",
    "start": "444940",
    "end": "446980"
  },
  {
    "text": "algorithm and that's where a C's boy",
    "start": "446980",
    "end": "448660"
  },
  {
    "text": "comes in so what we did here is we",
    "start": "448660",
    "end": "450790"
  },
  {
    "text": "figured out a way to generate the",
    "start": "450790",
    "end": "452410"
  },
  {
    "text": "worst-case inputs to a bunch of known",
    "start": "452410",
    "end": "454960"
  },
  {
    "text": "algorithms and the tool itself presents",
    "start": "454960",
    "end": "459070"
  },
  {
    "text": "as an interactive command-line utility",
    "start": "459070",
    "end": "460810"
  },
  {
    "text": "styled like Metasploit we wanted",
    "start": "460810",
    "end": "462940"
  },
  {
    "text": "something that was both familiar to us",
    "start": "462940",
    "end": "463990"
  },
  {
    "text": "and familiar other folks the pen testing",
    "start": "463990",
    "end": "466180"
  },
  {
    "text": "community essentially it is implemented",
    "start": "466180",
    "end": "468730"
  },
  {
    "text": "Python three fully open sourced at",
    "start": "468730",
    "end": "471550"
  },
  {
    "text": "github you can go there now download it",
    "start": "471550",
    "end": "473110"
  },
  {
    "text": "and play with it and we encourage you to",
    "start": "473110",
    "end": "474340"
  },
  {
    "text": "do so and it's released under the BSD",
    "start": "474340",
    "end": "476320"
  },
  {
    "text": "three license so it's four main",
    "start": "476320",
    "end": "479380"
  },
  {
    "text": "components to a C's place one our input",
    "start": "479380",
    "end": "481630"
  },
  {
    "text": "generators what kind of input do you",
    "start": "481630",
    "end": "483820"
  },
  {
    "text": "want me to provide to that sorting",
    "start": "483820",
    "end": "485050"
  },
  {
    "text": "algorithm do you want it to be integers",
    "start": "485050",
    "end": "486670"
  },
  {
    "text": "do you want it to be strings you want to",
    "start": "486670",
    "end": "488260"
  },
  {
    "text": "be floating-point values then output",
    "start": "488260",
    "end": "490150"
  },
  {
    "text": "generators how do you want me to give",
    "start": "490150",
    "end": "491410"
  },
  {
    "text": "you that output print it to the screen",
    "start": "491410",
    "end": "492700"
  },
  {
    "text": "put it in a file send it over a network",
    "start": "492700",
    "end": "495040"
  },
  {
    "text": "connection",
    "start": "495040",
    "end": "496390"
  },
  {
    "text": "third constraints maybe you're trying to",
    "start": "496390",
    "end": "499000"
  },
  {
    "text": "get past a Web Application Firewall and",
    "start": "499000",
    "end": "501040"
  },
  {
    "text": "you can do all alphanumeric characters",
    "start": "501040",
    "end": "503710"
  },
  {
    "text": "except for the letter K for some odd",
    "start": "503710",
    "end": "505630"
  },
  {
    "text": "reason so we have the ability for you to",
    "start": "505630",
    "end": "507250"
  },
  {
    "text": "generate those strings just without the",
    "start": "507250",
    "end": "508660"
  },
  {
    "text": "letter K in them and then exploits",
    "start": "508660",
    "end": "511060"
  },
  {
    "text": "exploits are the individual modules that",
    "start": "511060",
    "end": "512860"
  },
  {
    "text": "will generate those worst case inputs",
    "start": "512860",
    "end": "514560"
  },
  {
    "text": "currently we have over 30 of those",
    "start": "514560",
    "end": "516760"
  },
  {
    "start": "515000",
    "end": "537000"
  },
  {
    "text": "modules in the program you see we have",
    "start": "516760",
    "end": "519789"
  },
  {
    "text": "everything from decompression algorithms",
    "start": "519789",
    "end": "521320"
  },
  {
    "text": "crypt to non cryptographic hash",
    "start": "521320",
    "end": "523000"
  },
  {
    "text": "collisions sorting searching and a bunch",
    "start": "523000",
    "end": "524710"
  },
  {
    "text": "of other data structures that you might",
    "start": "524710",
    "end": "526160"
  },
  {
    "text": "even realize you could potentially",
    "start": "526160",
    "end": "528050"
  },
  {
    "text": "exploit so now we're gonna do is going",
    "start": "528050",
    "end": "531019"
  },
  {
    "text": "to switch to a few demos to show you how",
    "start": "531019",
    "end": "532940"
  },
  {
    "text": "we use the tool okay so in each of these",
    "start": "532940",
    "end": "539389"
  },
  {
    "start": "537000",
    "end": "728000"
  },
  {
    "text": "demos where you have three windows the",
    "start": "539389",
    "end": "541310"
  },
  {
    "text": "top is going to be some sort of resource",
    "start": "541310",
    "end": "542959"
  },
  {
    "text": "measure here we're looking at CPU",
    "start": "542959",
    "end": "545180"
  },
  {
    "text": "utilization and RAM and the bottom left",
    "start": "545180",
    "end": "548149"
  },
  {
    "text": "is gonna be the AC spoi tool itself and",
    "start": "548149",
    "end": "549949"
  },
  {
    "text": "on the right is gonna be the target so",
    "start": "549949",
    "end": "552050"
  },
  {
    "text": "if we hit the login button for this",
    "start": "552050",
    "end": "553939"
  },
  {
    "text": "target this comes from the stack program",
    "start": "553939",
    "end": "555350"
  },
  {
    "text": "the idea behind this web application is",
    "start": "555350",
    "end": "557149"
  },
  {
    "text": "it's going to plan routes for airplanes",
    "start": "557149",
    "end": "558860"
  },
  {
    "text": "to fly and what we're asked to do is see",
    "start": "558860",
    "end": "561470"
  },
  {
    "text": "if we can find an algorithmic complexity",
    "start": "561470",
    "end": "563209"
  },
  {
    "text": "in space for abilities so could we take",
    "start": "563209",
    "end": "565129"
  },
  {
    "text": "up 1.1 gigabytes of RAM with this by",
    "start": "565129",
    "end": "568790"
  },
  {
    "text": "finding vulnerability in this program so",
    "start": "568790",
    "end": "570769"
  },
  {
    "text": "one of the things we noted is that a",
    "start": "570769",
    "end": "572149"
  },
  {
    "text": "route map you have to be able to upload",
    "start": "572149",
    "end": "574009"
  },
  {
    "text": "a route map in order to determine routes",
    "start": "574009",
    "end": "575540"
  },
  {
    "text": "you could upload this route map in",
    "start": "575540",
    "end": "577610"
  },
  {
    "text": "multiple formats JSON XML etc and so we",
    "start": "577610",
    "end": "581029"
  },
  {
    "text": "know that XML bombs are a thing that",
    "start": "581029",
    "end": "582589"
  },
  {
    "text": "exists so what we can do here is we can",
    "start": "582589",
    "end": "584569"
  },
  {
    "text": "type show an AC spoi and it'll give you",
    "start": "584569",
    "end": "587389"
  },
  {
    "text": "the list of available exploits and we",
    "start": "587389",
    "end": "592639"
  },
  {
    "text": "could start we start off with bombs and",
    "start": "592639",
    "end": "594259"
  },
  {
    "text": "we look under compression and then we",
    "start": "594259",
    "end": "595759"
  },
  {
    "text": "look under bombs XML billion last now",
    "start": "595759",
    "end": "598100"
  },
  {
    "text": "you might not know what the billion last",
    "start": "598100",
    "end": "599240"
  },
  {
    "text": "attack is but you don't have to you",
    "start": "599240",
    "end": "601189"
  },
  {
    "text": "could just say use type info and it will",
    "start": "601189",
    "end": "605870"
  },
  {
    "text": "show you what the billion last attack is",
    "start": "605870",
    "end": "607670"
  },
  {
    "text": "gives you a short little description and",
    "start": "607670",
    "end": "609079"
  },
  {
    "text": "in this particular description we find",
    "start": "609079",
    "end": "610699"
  },
  {
    "text": "that we can go to Wikipedia and find a",
    "start": "610699",
    "end": "612139"
  },
  {
    "text": "much more in-depth discussion of this",
    "start": "612139",
    "end": "614269"
  },
  {
    "text": "type of attack so we're going to now is",
    "start": "614269",
    "end": "616069"
  },
  {
    "text": "we're going to type options and we see",
    "start": "616069",
    "end": "619189"
  },
  {
    "text": "that the output generator this is going",
    "start": "619189",
    "end": "620810"
  },
  {
    "text": "to send it to a file sounds like a good",
    "start": "620810",
    "end": "622339"
  },
  {
    "text": "thing because we have to upload it as a",
    "start": "622339",
    "end": "623569"
  },
  {
    "text": "file the file name the options for this",
    "start": "623569",
    "end": "625819"
  },
  {
    "text": "output module finally on to the AC",
    "start": "625819",
    "end": "627019"
  },
  {
    "text": "supply output we don't really like that",
    "start": "627019",
    "end": "629630"
  },
  {
    "text": "that's kind of long so what we can do is",
    "start": "629630",
    "end": "630949"
  },
  {
    "text": "we can set file name and we used tab",
    "start": "630949",
    "end": "633380"
  },
  {
    "text": "completion here a lot to bomb dot XML",
    "start": "633380",
    "end": "637730"
  },
  {
    "text": "and if we keep going down there's not a",
    "start": "637730",
    "end": "640459"
  },
  {
    "text": "lot of other things we want to change in",
    "start": "640459",
    "end": "641630"
  },
  {
    "text": "the output but for the member for the",
    "start": "641630",
    "end": "643220"
  },
  {
    "text": "exploit options themselves the memory",
    "start": "643220",
    "end": "645079"
  },
  {
    "text": "impact we do want to change remember I",
    "start": "645079",
    "end": "646459"
  },
  {
    "text": "said that we were challenged to take up",
    "start": "646459",
    "end": "648559"
  },
  {
    "text": "1.1 gigabytes of space this numbers in",
    "start": "648559",
    "end": "651290"
  },
  {
    "text": "megabytes so right now we're just",
    "start": "651290",
    "end": "652339"
  },
  {
    "text": "talking about one gigabyte so what we'll",
    "start": "652339",
    "end": "653689"
  },
  {
    "text": "do is we'll set the memory impact to be",
    "start": "653689",
    "end": "657309"
  },
  {
    "text": "type options again",
    "start": "657309",
    "end": "659720"
  },
  {
    "text": "everything looks good so we'll hit",
    "start": "659720",
    "end": "661370"
  },
  {
    "text": "and-run okay now if we go over here and",
    "start": "661370",
    "end": "665150"
  },
  {
    "text": "we do an LS dash L we see that bomb that",
    "start": "665150",
    "end": "667370"
  },
  {
    "text": "XML was in fact created it's only 779",
    "start": "667370",
    "end": "669860"
  },
  {
    "text": "bytes and if we cat it we'll see that it",
    "start": "669860",
    "end": "673460"
  },
  {
    "text": "is in fact a version of an XML entity",
    "start": "673460",
    "end": "675680"
  },
  {
    "text": "reference a recursive entity reference",
    "start": "675680",
    "end": "677300"
  },
  {
    "text": "attack okay and the size of this file is",
    "start": "677300",
    "end": "679340"
  },
  {
    "text": "based on that that memory limit that I",
    "start": "679340",
    "end": "681740"
  },
  {
    "text": "put in so now we go back over here hit",
    "start": "681740",
    "end": "684530"
  },
  {
    "text": "browse click on bomb that XML upload it",
    "start": "684530",
    "end": "688970"
  },
  {
    "text": "give it a name you have to give",
    "start": "688970",
    "end": "689900"
  },
  {
    "text": "everything a name now focus on this",
    "start": "689900",
    "end": "692930"
  },
  {
    "text": "hundred and three megabytes up at the",
    "start": "692930",
    "end": "694190"
  },
  {
    "text": "top here from memory usage when I hit",
    "start": "694190",
    "end": "696020"
  },
  {
    "text": "submit you'll notice two things happen",
    "start": "696020",
    "end": "698120"
  },
  {
    "text": "one is the CPU utilization goes up to a",
    "start": "698120",
    "end": "700160"
  },
  {
    "text": "hundred percent and the others that the",
    "start": "700160",
    "end": "701570"
  },
  {
    "text": "memory usage starts to climb really high",
    "start": "701570",
    "end": "703250"
  },
  {
    "text": "right very quickly it start off at a",
    "start": "703250",
    "end": "704570"
  },
  {
    "text": "hundred it's almost at three hundred now",
    "start": "704570",
    "end": "706780"
  },
  {
    "text": "with this particular example the way it",
    "start": "706780",
    "end": "708980"
  },
  {
    "text": "processes this XML file it'll peak at",
    "start": "708980",
    "end": "711380"
  },
  {
    "text": "about 600 megabytes for a couple of",
    "start": "711380",
    "end": "713150"
  },
  {
    "text": "minutes and then it'll go up and will go",
    "start": "713150",
    "end": "714680"
  },
  {
    "text": "well past the two gigabyte limit for",
    "start": "714680",
    "end": "717020"
  },
  {
    "text": "this container and in fact it'll it'll",
    "start": "717020",
    "end": "718910"
  },
  {
    "text": "crash this container we're not going to",
    "start": "718910",
    "end": "720680"
  },
  {
    "text": "wait for it to do that because this is",
    "start": "720680",
    "end": "721730"
  },
  {
    "text": "only a 25 minute talk instead we're",
    "start": "721730",
    "end": "724250"
  },
  {
    "text": "gonna kill it so that doesn't actually",
    "start": "724250",
    "end": "725660"
  },
  {
    "text": "take up all the memory and move on the",
    "start": "725660",
    "end": "729560"
  },
  {
    "start": "728000",
    "end": "903000"
  },
  {
    "text": "next example we have is also from the",
    "start": "729560",
    "end": "731060"
  },
  {
    "text": "stack program and this is again",
    "start": "731060",
    "end": "732800"
  },
  {
    "text": "something you might find the real world",
    "start": "732800",
    "end": "733940"
  },
  {
    "text": "when you're pentesting web apps this is",
    "start": "733940",
    "end": "736220"
  },
  {
    "text": "a message board style application you",
    "start": "736220",
    "end": "738470"
  },
  {
    "text": "can look at threads you can click on a",
    "start": "738470",
    "end": "739970"
  },
  {
    "text": "different thread and you can add a new",
    "start": "739970",
    "end": "741920"
  },
  {
    "text": "message now one thing that this program",
    "start": "741920",
    "end": "744230"
  },
  {
    "text": "has it has a line breaking out with a",
    "start": "744230",
    "end": "746180"
  },
  {
    "text": "minute so line breaking algorithms if",
    "start": "746180",
    "end": "748040"
  },
  {
    "text": "you're not familiar takes a single line",
    "start": "748040",
    "end": "750020"
  },
  {
    "text": "of text and tries to figure out the most",
    "start": "750020",
    "end": "751880"
  },
  {
    "text": "optimal place to insert a new line such",
    "start": "751880",
    "end": "754190"
  },
  {
    "text": "that it's formatted well for your screen",
    "start": "754190",
    "end": "755720"
  },
  {
    "text": "now it turns out that the most naive way",
    "start": "755720",
    "end": "758090"
  },
  {
    "text": "to implement this algorithm kind of like",
    "start": "758090",
    "end": "759350"
  },
  {
    "text": "bubble sort right the most naive way to",
    "start": "759350",
    "end": "760730"
  },
  {
    "text": "implement this algorithm takes",
    "start": "760730",
    "end": "761990"
  },
  {
    "text": "exponential time so we'd like to test",
    "start": "761990",
    "end": "764330"
  },
  {
    "text": "without even looking at the code whether",
    "start": "764330",
    "end": "766100"
  },
  {
    "text": "this exists so again we type show and we",
    "start": "766100",
    "end": "769550"
  },
  {
    "text": "were down to our set of string",
    "start": "769550",
    "end": "770840"
  },
  {
    "text": "algorithms down here and we see this",
    "start": "770840",
    "end": "772580"
  },
  {
    "text": "first one says strings line breaking so",
    "start": "772580",
    "end": "776240"
  },
  {
    "text": "can we select it say use type options",
    "start": "776240",
    "end": "779890"
  },
  {
    "text": "and we see that in this case the input",
    "start": "779890",
    "end": "782780"
  },
  {
    "text": "it's gonna generate fermier sets of",
    "start": "782780",
    "end": "783980"
  },
  {
    "text": "characters and the output is going to",
    "start": "783980",
    "end": "785930"
  },
  {
    "text": "come right to the screen this also shows",
    "start": "785930",
    "end": "788750"
  },
  {
    "text": "where you can do some of the",
    "start": "788750",
    "end": "789500"
  },
  {
    "text": "restrictions so the minimum and Max",
    "start": "789500",
    "end": "790970"
  },
  {
    "text": "value here for Strings is going to",
    "start": "790970",
    "end": "793220"
  },
  {
    "text": "are clearly alphabetic lowercase",
    "start": "793220",
    "end": "795110"
  },
  {
    "text": "character set",
    "start": "795110",
    "end": "796009"
  },
  {
    "text": "we could add restrictions like saying",
    "start": "796009",
    "end": "797809"
  },
  {
    "text": "don't include K before right I was going",
    "start": "797809",
    "end": "800059"
  },
  {
    "text": "to keep it as it is and for the exploit",
    "start": "800059",
    "end": "802069"
  },
  {
    "text": "options the the basic string wouldn't",
    "start": "802069",
    "end": "804019"
  },
  {
    "text": "generate is gonna be a hundred and",
    "start": "804019",
    "end": "805040"
  },
  {
    "text": "twenty characters in length so if we run",
    "start": "805040",
    "end": "806869"
  },
  {
    "text": "it we see what it gives us is just a set",
    "start": "806869",
    "end": "809389"
  },
  {
    "text": "of a separated by a space that's not",
    "start": "809389",
    "end": "811549"
  },
  {
    "text": "terribly interesting technically those",
    "start": "811549",
    "end": "813110"
  },
  {
    "text": "are words and that's how line breaking",
    "start": "813110",
    "end": "814549"
  },
  {
    "text": "algorithms work they try to find the",
    "start": "814549",
    "end": "816079"
  },
  {
    "text": "spaces and then figure out what insert a",
    "start": "816079",
    "end": "818089"
  },
  {
    "text": "new line so let's let's do something",
    "start": "818089",
    "end": "820249"
  },
  {
    "text": "different let's um set that string",
    "start": "820249",
    "end": "822709"
  },
  {
    "text": "length right something bigger let's set",
    "start": "822709",
    "end": "824449"
  },
  {
    "text": "it to let's say a thousand right and see",
    "start": "824449",
    "end": "825889"
  },
  {
    "text": "what happens",
    "start": "825889",
    "end": "827290"
  },
  {
    "text": "so what we can do is just copy and paste",
    "start": "827290",
    "end": "829759"
  },
  {
    "text": "it right from the screen into this",
    "start": "829759",
    "end": "831079"
  },
  {
    "text": "message hit post wait okay well that",
    "start": "831079",
    "end": "834619"
  },
  {
    "text": "came back pretty quickly so I guess a",
    "start": "834619",
    "end": "835699"
  },
  {
    "text": "thousand a thousand words isn't gonna do",
    "start": "835699",
    "end": "837350"
  },
  {
    "text": "it so let's just let's just add a zero",
    "start": "837350",
    "end": "838850"
  },
  {
    "text": "see what happens here run it again",
    "start": "838850",
    "end": "842499"
  },
  {
    "text": "copy paste taking a few more seconds",
    "start": "842499",
    "end": "849319"
  },
  {
    "text": "comes back fairly quickly but then we",
    "start": "849319",
    "end": "850939"
  },
  {
    "text": "see this spike up here to CPU so it",
    "start": "850939",
    "end": "852980"
  },
  {
    "text": "looks like we're getting closer so why",
    "start": "852980",
    "end": "854600"
  },
  {
    "text": "not just add another zero one hundred",
    "start": "854600",
    "end": "857149"
  },
  {
    "text": "thousand again we copy paste and now if",
    "start": "857149",
    "end": "867230"
  },
  {
    "text": "we watch the CPU utilization up here",
    "start": "867230",
    "end": "869269"
  },
  {
    "text": "we'll see it spikes to about a hundred",
    "start": "869269",
    "end": "871249"
  },
  {
    "text": "percent if the website itself is not",
    "start": "871249",
    "end": "873619"
  },
  {
    "text": "returning right it's kind of showing",
    "start": "873619",
    "end": "875089"
  },
  {
    "text": "this not returning and it will actually",
    "start": "875089",
    "end": "876499"
  },
  {
    "text": "sit here for several minutes continuing",
    "start": "876499",
    "end": "878629"
  },
  {
    "text": "to spin so we've successfully determined",
    "start": "878629",
    "end": "880610"
  },
  {
    "text": "that this is using a naive string",
    "start": "880610",
    "end": "882949"
  },
  {
    "text": "breaking algorithm now this could have",
    "start": "882949",
    "end": "884689"
  },
  {
    "text": "been a different string algorithm there",
    "start": "884689",
    "end": "885799"
  },
  {
    "text": "are several others in here this was the",
    "start": "885799",
    "end": "887179"
  },
  {
    "text": "first one in the list so it's the first",
    "start": "887179",
    "end": "888709"
  },
  {
    "text": "one we tried and it happened to work but",
    "start": "888709",
    "end": "892189"
  },
  {
    "text": "it also shows the ability to kind of it",
    "start": "892189",
    "end": "893569"
  },
  {
    "text": "early go through and test different test",
    "start": "893569",
    "end": "895249"
  },
  {
    "text": "cases for these programs again we're",
    "start": "895249",
    "end": "897980"
  },
  {
    "text": "gonna kill it because we only got 25",
    "start": "897980",
    "end": "899509"
  },
  {
    "text": "minutes here we don't want to waste it",
    "start": "899509",
    "end": "901129"
  },
  {
    "text": "looking at that CPU spend 100% alright",
    "start": "901129",
    "end": "903889"
  },
  {
    "start": "903000",
    "end": "952000"
  },
  {
    "text": "so those are things that came from the",
    "start": "903889",
    "end": "904879"
  },
  {
    "text": "stack program those are examples that we",
    "start": "904879",
    "end": "906110"
  },
  {
    "text": "were working with though let's talk",
    "start": "906110",
    "end": "906919"
  },
  {
    "text": "about some real-world test cases in 2011",
    "start": "906919",
    "end": "909999"
  },
  {
    "text": "there was a CDE released for apache",
    "start": "909999",
    "end": "912709"
  },
  {
    "text": "tomcat and there was an issue with forum",
    "start": "912709",
    "end": "915499"
  },
  {
    "text": "parameters that were submitted to a",
    "start": "915499",
    "end": "918079"
  },
  {
    "text": "tomcat JSP application essentially what",
    "start": "918079",
    "end": "920749"
  },
  {
    "text": "would happen is the variable names would",
    "start": "920749",
    "end": "923329"
  },
  {
    "text": "be put into a hash table",
    "start": "923329",
    "end": "924800"
  },
  {
    "text": "so there was a potential that if those",
    "start": "924800",
    "end": "926629"
  },
  {
    "text": "variable names collided the actual names",
    "start": "926629",
    "end": "929329"
  },
  {
    "text": "of them had a hash collision they will",
    "start": "929329",
    "end": "931040"
  },
  {
    "text": "be stored in the same bucket right so",
    "start": "931040",
    "end": "932569"
  },
  {
    "text": "it's a typical standard hash collision",
    "start": "932569",
    "end": "934579"
  },
  {
    "text": "attack but you had to send them as post",
    "start": "934579",
    "end": "936800"
  },
  {
    "text": "values as well so we were trying to do",
    "start": "936800",
    "end": "939079"
  },
  {
    "text": "with with a C's boys determine could we",
    "start": "939079",
    "end": "941480"
  },
  {
    "text": "create these hash collisions of HTTP",
    "start": "941480",
    "end": "945049"
  },
  {
    "text": "POST form variable names and then submit",
    "start": "945049",
    "end": "947329"
  },
  {
    "text": "them as a post request and so we're",
    "start": "947329",
    "end": "950660"
  },
  {
    "text": "going to show how we can do that with a",
    "start": "950660",
    "end": "951709"
  },
  {
    "text": "C's plate so the first thing we do is",
    "start": "951709",
    "end": "953329"
  },
  {
    "start": "952000",
    "end": "1192000"
  },
  {
    "text": "we're gonna show the number of",
    "start": "953329",
    "end": "954110"
  },
  {
    "text": "algorithms again since this is all",
    "start": "954110",
    "end": "955790"
  },
  {
    "text": "implemented in Java we were talking",
    "start": "955790",
    "end": "957230"
  },
  {
    "text": "about Java hash collisions so we'll pick",
    "start": "957230",
    "end": "959360"
  },
  {
    "text": "the Java fast hash collision algorithm",
    "start": "959360",
    "end": "964029"
  },
  {
    "text": "and we'll look at the options so first",
    "start": "965410",
    "end": "967579"
  },
  {
    "text": "thing we note is that we're gonna output",
    "start": "967579",
    "end": "969199"
  },
  {
    "text": "it to the screen I'm going to use a set",
    "start": "969199",
    "end": "970879"
  },
  {
    "text": "of characters to create these strings",
    "start": "970879",
    "end": "973299"
  },
  {
    "text": "originally we're gonna do ten collisions",
    "start": "973299",
    "end": "975709"
  },
  {
    "text": "so why don't we just run this and see",
    "start": "975709",
    "end": "976759"
  },
  {
    "text": "what it comes up with and we see here",
    "start": "976759",
    "end": "979100"
  },
  {
    "text": "that we get ten strings eight characters",
    "start": "979100",
    "end": "981499"
  },
  {
    "text": "in length each those are all gonna",
    "start": "981499",
    "end": "982819"
  },
  {
    "text": "collide to the same hash value so that's",
    "start": "982819",
    "end": "984829"
  },
  {
    "text": "pretty good but we said we need these to",
    "start": "984829",
    "end": "987319"
  },
  {
    "text": "be form parameters right so we need to",
    "start": "987319",
    "end": "989420"
  },
  {
    "text": "look like URL encoded parameters so we",
    "start": "989420",
    "end": "991549"
  },
  {
    "text": "can do that very simply with AC spoi if",
    "start": "991549",
    "end": "993499"
  },
  {
    "text": "you see here there's a separator option",
    "start": "993499",
    "end": "995480"
  },
  {
    "text": "on the output and right now it sets a",
    "start": "995480",
    "end": "996920"
  },
  {
    "text": "new line so that's why there's a new",
    "start": "996920",
    "end": "998869"
  },
  {
    "text": "line of what that's why each of these",
    "start": "998869",
    "end": "1000069"
  },
  {
    "text": "values is on a new line but what we can",
    "start": "1000069",
    "end": "1001749"
  },
  {
    "text": "do is we can set the separator value tab",
    "start": "1001749",
    "end": "1005559"
  },
  {
    "text": "complete it actually shows us what we",
    "start": "1005559",
    "end": "1006910"
  },
  {
    "text": "can set it to so we can set it to a",
    "start": "1006910",
    "end": "1008170"
  },
  {
    "text": "comma or a newline but where we're",
    "start": "1008170",
    "end": "1010540"
  },
  {
    "text": "interested in is custom and when it's",
    "start": "1010540",
    "end": "1013209"
  },
  {
    "text": "set equals an ampersand to these values",
    "start": "1013209",
    "end": "1016709"
  },
  {
    "text": "now if you look at the output what does",
    "start": "1016709",
    "end": "1018910"
  },
  {
    "text": "it look like it looks like a form",
    "start": "1018910",
    "end": "1020379"
  },
  {
    "text": "variable name equals it has no value to",
    "start": "1020379",
    "end": "1023379"
  },
  {
    "text": "it ampersand connecting the variable to",
    "start": "1023379",
    "end": "1026230"
  },
  {
    "text": "the to the previous variables all the",
    "start": "1026230",
    "end": "1027880"
  },
  {
    "text": "way down the line so that looks pretty",
    "start": "1027880",
    "end": "1029048"
  },
  {
    "text": "good that's like something we need to",
    "start": "1029049",
    "end": "1030100"
  },
  {
    "text": "submit to the web server now we could do",
    "start": "1030100",
    "end": "1032319"
  },
  {
    "text": "this we could generate a lot of these",
    "start": "1032319",
    "end": "1034168"
  },
  {
    "text": "somehow figure out how to send these",
    "start": "1034169",
    "end": "1036339"
  },
  {
    "text": "maybe with netcat or something but",
    "start": "1036339",
    "end": "1038260"
  },
  {
    "text": "there's an easier way to do this in a",
    "start": "1038260",
    "end": "1039370"
  },
  {
    "text": "C's void what we can do is we can set",
    "start": "1039370",
    "end": "1041649"
  },
  {
    "text": "the output generator we set the output",
    "start": "1041649",
    "end": "1047470"
  },
  {
    "text": "generator to be HTTP we type options",
    "start": "1047470",
    "end": "1052010"
  },
  {
    "text": "now the input gender is the same output",
    "start": "1052010",
    "end": "1054049"
  },
  {
    "text": "gender is HTTP and we have this new set",
    "start": "1054049",
    "end": "1055970"
  },
  {
    "text": "of options to play with here okay so the",
    "start": "1055970",
    "end": "1058130"
  },
  {
    "text": "first option you want to set is we want",
    "start": "1058130",
    "end": "1059630"
  },
  {
    "text": "to set the URL we look in here we just",
    "start": "1059630",
    "end": "1062690"
  },
  {
    "text": "grab the URL of any JSP page because any",
    "start": "1062690",
    "end": "1064760"
  },
  {
    "text": "JSP page will do and then we look down",
    "start": "1064760",
    "end": "1068780"
  },
  {
    "text": "we say okay the separator value right we",
    "start": "1068780",
    "end": "1070460"
  },
  {
    "text": "need to we need to set that separator",
    "start": "1070460",
    "end": "1072740"
  },
  {
    "text": "value like we did for the other output",
    "start": "1072740",
    "end": "1074210"
  },
  {
    "text": "so we say set separator custom equals",
    "start": "1074210",
    "end": "1077600"
  },
  {
    "text": "ampersand as we keep looking down at",
    "start": "1077600",
    "end": "1080419"
  },
  {
    "text": "these different parameters well we know",
    "start": "1080419",
    "end": "1081530"
  },
  {
    "text": "the method has to be different so V is a",
    "start": "1081530",
    "end": "1083000"
  },
  {
    "text": "set HTTP method and we can tab this as",
    "start": "1083000",
    "end": "1084980"
  },
  {
    "text": "well and say yep post is supported",
    "start": "1084980",
    "end": "1087910"
  },
  {
    "text": "content type member we said there's a",
    "start": "1087910",
    "end": "1089840"
  },
  {
    "text": "URL encoded form parameter so we need to",
    "start": "1089840",
    "end": "1091580"
  },
  {
    "text": "say content type equals",
    "start": "1091580",
    "end": "1094210"
  },
  {
    "text": "application/x-www-form-urlencoded at",
    "start": "1094210",
    "end": "1153980"
  },
  {
    "text": "address let's run this generating the",
    "start": "1153980",
    "end": "1159710"
  },
  {
    "text": "collisions now and it sends it tells you",
    "start": "1159710",
    "end": "1162200"
  },
  {
    "text": "that it's now sending a slightly less",
    "start": "1162200",
    "end": "1164150"
  },
  {
    "text": "than two megabyte",
    "start": "1164150",
    "end": "1165880"
  },
  {
    "text": "HTTP requests to the server now this is",
    "start": "1165880",
    "end": "1168049"
  },
  {
    "text": "important because Tomcat will not",
    "start": "1168049",
    "end": "1170210"
  },
  {
    "text": "process requests that are over two",
    "start": "1170210",
    "end": "1171980"
  },
  {
    "text": "megabytes or below that limit which is",
    "start": "1171980",
    "end": "1173600"
  },
  {
    "text": "good and then we see up here that the",
    "start": "1173600",
    "end": "1175520"
  },
  {
    "text": "CPU is spun up to a hundred percent",
    "start": "1175520",
    "end": "1176840"
  },
  {
    "text": "utilization which means we successfully",
    "start": "1176840",
    "end": "1179780"
  },
  {
    "text": "trigger the the worst case complexity of",
    "start": "1179780",
    "end": "1182419"
  },
  {
    "text": "this algorithm so this is important",
    "start": "1182419",
    "end": "1185030"
  },
  {
    "text": "because if you're doing a lot of this",
    "start": "1185030",
    "end": "1186140"
  },
  {
    "text": "kind of web app pen testing you can do a",
    "start": "1186140",
    "end": "1187700"
  },
  {
    "text": "lot of what you want to do for checking",
    "start": "1187700",
    "end": "1189410"
  },
  {
    "text": "for Agra the complexity vulnerabilities",
    "start": "1189410",
    "end": "1190820"
  },
  {
    "text": "right within this tool and like the",
    "start": "1190820",
    "end": "1193970"
  },
  {
    "text": "other demos we're gonna kill this",
    "start": "1193970",
    "end": "1197080"
  },
  {
    "text": "alright so there's one other example I",
    "start": "1198400",
    "end": "1201470"
  },
  {
    "text": "want to show you here the resource",
    "start": "1201470",
    "end": "1204200"
  },
  {
    "text": "monitor is is size on disk so there's a",
    "start": "1204200",
    "end": "1207680"
  },
  {
    "text": "58 gigabyte disk in this in this",
    "start": "1207680",
    "end": "1210230"
  },
  {
    "text": "container and currently there's four",
    "start": "1210230",
    "end": "1211490"
  },
  {
    "text": "gigabytes being used and over here we",
    "start": "1211490",
    "end": "1212930"
  },
  {
    "text": "have the standard CPU measure what we're",
    "start": "1212930",
    "end": "1216230"
  },
  {
    "text": "talking about here is the caracal file",
    "start": "1216230",
    "end": "1217760"
  },
  {
    "text": "server this is an open source file",
    "start": "1217760",
    "end": "1218960"
  },
  {
    "text": "server it's actually a multimedia file",
    "start": "1218960",
    "end": "1220790"
  },
  {
    "text": "server and the idea is you can upload",
    "start": "1220790",
    "end": "1223190"
  },
  {
    "text": "different as multiple media files do a",
    "start": "1223190",
    "end": "1224870"
  },
  {
    "text": "few things like resize generate",
    "start": "1224870",
    "end": "1226400"
  },
  {
    "text": "thumbnails of whatnot and then",
    "start": "1226400",
    "end": "1227600"
  },
  {
    "text": "effectively just share them right on the",
    "start": "1227600",
    "end": "1229730"
  },
  {
    "text": "back end of this program it's using a",
    "start": "1229730",
    "end": "1231560"
  },
  {
    "text": "package called graphics magic graphics",
    "start": "1231560",
    "end": "1234230"
  },
  {
    "text": "magic does all the actual processing of",
    "start": "1234230",
    "end": "1236630"
  },
  {
    "text": "the of the image files so we want to see",
    "start": "1236630",
    "end": "1238820"
  },
  {
    "text": "if it's potentially vulnerable to some",
    "start": "1238820",
    "end": "1241670"
  },
  {
    "text": "sort of image compression bomb so again",
    "start": "1241670",
    "end": "1244340"
  },
  {
    "text": "what it sent type show and go up here to",
    "start": "1244340",
    "end": "1246890"
  },
  {
    "text": "the bombs and see there's a whole",
    "start": "1246890",
    "end": "1248390"
  },
  {
    "text": "category for image bombs I like PNG",
    "start": "1248390",
    "end": "1250850"
  },
  {
    "text": "images so why don't we start with that",
    "start": "1250850",
    "end": "1254200"
  },
  {
    "text": "and we look at the options here and",
    "start": "1255460",
    "end": "1257780"
  },
  {
    "text": "again we notice it's gonna output to a",
    "start": "1257780",
    "end": "1259460"
  },
  {
    "text": "file let's change that file name again",
    "start": "1259460",
    "end": "1261560"
  },
  {
    "text": "to something else like bad PNG none of",
    "start": "1261560",
    "end": "1265310"
  },
  {
    "text": "these other options seem totally totally",
    "start": "1265310",
    "end": "1267080"
  },
  {
    "text": "relevant and this seems like a good size",
    "start": "1267080",
    "end": "1268760"
  },
  {
    "text": "so if you look at the exploit options",
    "start": "1268760",
    "end": "1269960"
  },
  {
    "text": "here 225 thousand pixels by 225 thousand",
    "start": "1269960",
    "end": "1273770"
  },
  {
    "text": "seems to be a pretty big image so we'll",
    "start": "1273770",
    "end": "1275270"
  },
  {
    "text": "actually leave it at that",
    "start": "1275270",
    "end": "1276320"
  },
  {
    "text": "leave it at the default and then we'll",
    "start": "1276320",
    "end": "1277820"
  },
  {
    "text": "just type 1 this will take a good 4 or 5",
    "start": "1277820",
    "end": "1281720"
  },
  {
    "text": "seconds to generate this file and again",
    "start": "1281720",
    "end": "1287270"
  },
  {
    "text": "it tells you how long it took to",
    "start": "1287270",
    "end": "1288230"
  },
  {
    "text": "generate it seven seconds in this case",
    "start": "1288230",
    "end": "1290530"
  },
  {
    "text": "and we do an LS and we find that we get",
    "start": "1290530",
    "end": "1292760"
  },
  {
    "text": "a six megabyte file which is not a super",
    "start": "1292760",
    "end": "1295700"
  },
  {
    "text": "small PNG but it's not too big either",
    "start": "1295700",
    "end": "1297470"
  },
  {
    "text": "we'll just go over here then hit the",
    "start": "1297470",
    "end": "1300050"
  },
  {
    "text": "upload button click on bad PNG and",
    "start": "1300050",
    "end": "1305170"
  },
  {
    "text": "upload it and note that we were at 4",
    "start": "1305170",
    "end": "1308680"
  },
  {
    "text": "gigabytes and now we're slowly climbing",
    "start": "1308680",
    "end": "1311090"
  },
  {
    "text": "up right now we're at 7 we're at 8 and",
    "start": "1311090",
    "end": "1312950"
  },
  {
    "text": "CPU is spun it at almost a hundred",
    "start": "1312950",
    "end": "1315890"
  },
  {
    "text": "percent utilization",
    "start": "1315890",
    "end": "1317560"
  },
  {
    "text": "and then the size the amount of data",
    "start": "1317560",
    "end": "1319780"
  },
  {
    "text": "taken up on disk will continue to",
    "start": "1319780",
    "end": "1321130"
  },
  {
    "text": "increase in fact we let this go it will",
    "start": "1321130",
    "end": "1323230"
  },
  {
    "text": "take up all 58 gigabytes of of disk",
    "start": "1323230",
    "end": "1325870"
  },
  {
    "text": "space and eventually crash this",
    "start": "1325870",
    "end": "1327310"
  },
  {
    "text": "container now granted your disks are",
    "start": "1327310",
    "end": "1329200"
  },
  {
    "text": "probably much bigger out in the real",
    "start": "1329200",
    "end": "1330820"
  },
  {
    "text": "world but again this is just an example",
    "start": "1330820",
    "end": "1332860"
  },
  {
    "text": "we took the default settings on the",
    "start": "1332860",
    "end": "1334810"
  },
  {
    "text": "length and width could be worse okay so",
    "start": "1334810",
    "end": "1342340"
  },
  {
    "text": "we're gonna kill this okay so that's",
    "start": "1342340",
    "end": "1351670"
  },
  {
    "text": "kind of all I had right now please feel",
    "start": "1351670",
    "end": "1354010"
  },
  {
    "text": "free to go to the github link and",
    "start": "1354010",
    "end": "1355780"
  },
  {
    "text": "download the code check it out feel free",
    "start": "1355780",
    "end": "1357790"
  },
  {
    "text": "to contribute - it's really easy to add",
    "start": "1357790",
    "end": "1359200"
  },
  {
    "text": "a module also if you have questions I",
    "start": "1359200",
    "end": "1361360"
  },
  {
    "text": "don't know if I have much time for them",
    "start": "1361360",
    "end": "1362470"
  },
  {
    "text": "now but I will be at two different",
    "start": "1362470",
    "end": "1364150"
  },
  {
    "text": "Arsenal sessions today at 3:45 and",
    "start": "1364150",
    "end": "1366400"
  },
  {
    "text": "tomorrow at 1:40 please stop by I love",
    "start": "1366400",
    "end": "1369040"
  },
  {
    "text": "to run through a lot more the",
    "start": "1369040",
    "end": "1369940"
  },
  {
    "text": "particulars of this tool also feel free",
    "start": "1369940",
    "end": "1371920"
  },
  {
    "text": "to join us we have a slack channel set",
    "start": "1371920",
    "end": "1373390"
  },
  {
    "text": "up for this AC sploit dot slack comm and",
    "start": "1373390",
    "end": "1376720"
  },
  {
    "text": "again you can email me or hit up our",
    "start": "1376720",
    "end": "1378280"
  },
  {
    "text": "website and with that I thank you for",
    "start": "1378280",
    "end": "1380170"
  },
  {
    "text": "your time and we'll take any questions",
    "start": "1380170",
    "end": "1381250"
  },
  {
    "text": "if we have time so any yes technically",
    "start": "1381250",
    "end": "1395860"
  },
  {
    "text": "you could do this against mobile phone",
    "start": "1395860",
    "end": "1397540"
  },
  {
    "text": "applications in fact we looked at some",
    "start": "1397540",
    "end": "1399490"
  },
  {
    "text": "of them we actually have a hopefully",
    "start": "1399490",
    "end": "1401620"
  },
  {
    "text": "we'll have a talk of another conference",
    "start": "1401620",
    "end": "1402910"
  },
  {
    "text": "we're going to talk about a couple of",
    "start": "1402910",
    "end": "1403870"
  },
  {
    "text": "zero day vulnerabilities we found some",
    "start": "1403870",
    "end": "1405460"
  },
  {
    "text": "algorithmic complexity zero day",
    "start": "1405460",
    "end": "1406570"
  },
  {
    "text": "vulnerabilities not specifically in",
    "start": "1406570",
    "end": "1409300"
  },
  {
    "text": "mobile phone apps but there might be",
    "start": "1409300",
    "end": "1410740"
  },
  {
    "text": "some libraries that you might be able to",
    "start": "1410740",
    "end": "1412420"
  },
  {
    "text": "use in a mobile phone app that might",
    "start": "1412420",
    "end": "1414250"
  },
  {
    "text": "have these types of vulnerabilities yeah",
    "start": "1414250",
    "end": "1416680"
  },
  {
    "text": "so they definitely work write any code",
    "start": "1416680",
    "end": "1418510"
  },
  {
    "text": "could have an algorithm complexity",
    "start": "1418510",
    "end": "1419680"
  },
  {
    "text": "vulnerability right if you can upload an",
    "start": "1419680",
    "end": "1421810"
  },
  {
    "text": "image right into a mobile phone app then",
    "start": "1421810",
    "end": "1424570"
  },
  {
    "text": "it might be vulnerable to an image bomb",
    "start": "1424570",
    "end": "1425980"
  },
  {
    "text": "for example anybody else yeah so for us",
    "start": "1425980",
    "end": "1436990"
  },
  {
    "text": "right we were wondering if that blog",
    "start": "1436990",
    "end": "1439210"
  },
  {
    "text": "post software that message thread",
    "start": "1439210",
    "end": "1440830"
  },
  {
    "text": "software if it was one or two a line",
    "start": "1440830",
    "end": "1442270"
  },
  {
    "text": "break attack you saw in just a couple of",
    "start": "1442270",
    "end": "1443920"
  },
  {
    "text": "minutes I can throw a bunch of test",
    "start": "1443920",
    "end": "1445330"
  },
  {
    "text": "cases at it say yes or no if not I can",
    "start": "1445330",
    "end": "1448270"
  },
  {
    "text": "go on to the next algorithm I think it",
    "start": "1448270",
    "end": "1449680"
  },
  {
    "text": "might be vulnerable too so there's",
    "start": "1449680",
    "end": "1450940"
  },
  {
    "text": "another version of that binary that all",
    "start": "1450940",
    "end": "1453100"
  },
  {
    "text": "those words are stored in a hash tables",
    "start": "1453100",
    "end": "1455050"
  },
  {
    "text": "for easy look up for what searching and",
    "start": "1455050",
    "end": "1456760"
  },
  {
    "text": "it's not vulnerable to the line breaking",
    "start": "1456760",
    "end": "1458950"
  },
  {
    "text": "but it is vulnerable to a hash collision",
    "start": "1458950",
    "end": "1460810"
  },
  {
    "text": "so think about all the things that find",
    "start": "1460810",
    "end": "1463570"
  },
  {
    "text": "that little text box you could test all",
    "start": "1463570",
    "end": "1466060"
  },
  {
    "text": "of them very quickly with AC spoil just",
    "start": "1466060",
    "end": "1467770"
  },
  {
    "text": "generate the inputs copy paste them in",
    "start": "1467770",
    "end": "1469600"
  },
  {
    "text": "or upload them from a file that's how it",
    "start": "1469600",
    "end": "1471820"
  },
  {
    "text": "helps us with our original problem of",
    "start": "1471820",
    "end": "1473140"
  },
  {
    "text": "triage winter Neve spent hours looking",
    "start": "1473140",
    "end": "1474970"
  },
  {
    "text": "through that code but you spend a few",
    "start": "1474970",
    "end": "1476530"
  },
  {
    "text": "minutes throwing a bunch of test cases",
    "start": "1476530",
    "end": "1478000"
  },
  {
    "text": "at it and seeing if they land okay cool",
    "start": "1478000",
    "end": "1485290"
  },
  {
    "text": "if there's nothing else thank you very",
    "start": "1485290",
    "end": "1487120"
  },
  {
    "text": "much appreciate",
    "start": "1487120",
    "end": "1489750"
  },
  {
    "text": "[Applause]",
    "start": "1490130",
    "end": "1493630"
  }
]