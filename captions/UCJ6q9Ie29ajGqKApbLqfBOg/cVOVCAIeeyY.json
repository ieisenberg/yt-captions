[
  {
    "text": "[Music]",
    "start": "1740",
    "end": "3720"
  },
  {
    "text": "foreign",
    "start": "3720",
    "end": "6720"
  },
  {
    "text": "Welcome to our presentation it's called",
    "start": "8960",
    "end": "12179"
  },
  {
    "text": "Hong Ting and the exploding recursive",
    "start": "12179",
    "end": "14639"
  },
  {
    "text": "MMO flows in cumu and KVM in this talk",
    "start": "14639",
    "end": "18480"
  },
  {
    "text": "we will share our security research on",
    "start": "18480",
    "end": "20820"
  },
  {
    "text": "Kumi on KVM a hypervisor widely used in",
    "start": "20820",
    "end": "24060"
  },
  {
    "text": "cloud computing and analyze the root",
    "start": "24060",
    "end": "27000"
  },
  {
    "text": "cause and the common consequences of",
    "start": "27000",
    "end": "29099"
  },
  {
    "text": "recursive mmlo thus disclosing a new",
    "start": "29099",
    "end": "32220"
  },
  {
    "text": "attack service",
    "start": "32220",
    "end": "34820"
  },
  {
    "text": "so who we are my name is and now I am a",
    "start": "34920",
    "end": "38880"
  },
  {
    "text": "graduate student at the Harvey Institute",
    "start": "38880",
    "end": "40920"
  },
  {
    "text": "of Technology coding is a PhD candidate",
    "start": "40920",
    "end": "43920"
  },
  {
    "text": "at Trojan University all research errors",
    "start": "43920",
    "end": "46680"
  },
  {
    "text": "include system security and default",
    "start": "46680",
    "end": "49020"
  },
  {
    "text": "testing",
    "start": "49020",
    "end": "51500"
  },
  {
    "text": "this is the outline of our talk",
    "start": "54480",
    "end": "56820"
  },
  {
    "text": "I will try to finish it in 20 minutes so",
    "start": "56820",
    "end": "59879"
  },
  {
    "text": "we can have some time for Q a",
    "start": "59879",
    "end": "62160"
  },
  {
    "text": "first let's give some backgrounds about",
    "start": "62160",
    "end": "64198"
  },
  {
    "text": "kumu and KVM",
    "start": "64199",
    "end": "67519"
  },
  {
    "text": "KVM is a Linux kernel module that makes",
    "start": "68760",
    "end": "71700"
  },
  {
    "text": "Linux behave like type 1 hypervisor it",
    "start": "71700",
    "end": "74820"
  },
  {
    "text": "can prove that the hardware access to",
    "start": "74820",
    "end": "76560"
  },
  {
    "text": "the virtualization to user Space Program",
    "start": "76560",
    "end": "79500"
  },
  {
    "text": "is an emulated program which provides",
    "start": "79500",
    "end": "82259"
  },
  {
    "text": "virtualization of an entire machine to",
    "start": "82259",
    "end": "84479"
  },
  {
    "text": "run guest OS",
    "start": "84479",
    "end": "86759"
  },
  {
    "text": "this figure illustrates the high-level",
    "start": "86759",
    "end": "88860"
  },
  {
    "text": "architecture view of KVM with qmu",
    "start": "88860",
    "end": "91680"
  },
  {
    "text": "the virtual machine and the cumul right",
    "start": "91680",
    "end": "93659"
  },
  {
    "text": "in separate threads with the help of KVM",
    "start": "93659",
    "end": "96780"
  },
  {
    "text": "the guest OS can execute the most of its",
    "start": "96780",
    "end": "99720"
  },
  {
    "text": "instructions",
    "start": "99720",
    "end": "100860"
  },
  {
    "text": "but directly on the whole CPU but when",
    "start": "100860",
    "end": "103680"
  },
  {
    "text": "it tries privileged operations like for",
    "start": "103680",
    "end": "106020"
  },
  {
    "text": "the map IO or memory mapped IO the",
    "start": "106020",
    "end": "108600"
  },
  {
    "text": "workshop into KVM the KVM will decide",
    "start": "108600",
    "end": "111780"
  },
  {
    "text": "how to handle those VM access most of",
    "start": "111780",
    "end": "114780"
  },
  {
    "text": "the time KVM will return to kumu and",
    "start": "114780",
    "end": "117299"
  },
  {
    "text": "tell it why the VM exits",
    "start": "117299",
    "end": "119640"
  },
  {
    "text": "premium will then emanate the",
    "start": "119640",
    "end": "121500"
  },
  {
    "text": "corresponding devices",
    "start": "121500",
    "end": "124460"
  },
  {
    "text": "so what is recursive MMO and what are",
    "start": "125880",
    "end": "129179"
  },
  {
    "text": "the root causes",
    "start": "129179",
    "end": "131959"
  },
  {
    "text": "mmio is I managed by intercepting the",
    "start": "134060",
    "end": "137160"
  },
  {
    "text": "memory exercise and the dma is usually",
    "start": "137160",
    "end": "139620"
  },
  {
    "text": "implemented by user space memory copy",
    "start": "139620",
    "end": "141980"
  },
  {
    "text": "additionally a virtual device can see an",
    "start": "141980",
    "end": "144720"
  },
  {
    "text": "excise memory regions of other devices",
    "start": "144720",
    "end": "147319"
  },
  {
    "text": "including the system RAM and Imam",
    "start": "147319",
    "end": "150420"
  },
  {
    "text": "regions since the gas OS can control the",
    "start": "150420",
    "end": "153060"
  },
  {
    "text": "Desolation address of dma",
    "start": "153060",
    "end": "156180"
  },
  {
    "text": "we need to set a destination to overlap",
    "start": "156180",
    "end": "158580"
  },
  {
    "text": "with mm Origins the relative IO hundreds",
    "start": "158580",
    "end": "161580"
  },
  {
    "text": "will be called during the data",
    "start": "161580",
    "end": "163019"
  },
  {
    "text": "transmission",
    "start": "163019",
    "end": "164099"
  },
  {
    "text": "however when the rights to MMO operation",
    "start": "164099",
    "end": "166920"
  },
  {
    "text": "forms a loop it will cause problems the",
    "start": "166920",
    "end": "170220"
  },
  {
    "text": "Imam 100 are triggered by the dma may",
    "start": "170220",
    "end": "172560"
  },
  {
    "text": "have side effects on the device that",
    "start": "172560",
    "end": "174480"
  },
  {
    "text": "launch the dma so when the control flow",
    "start": "174480",
    "end": "177120"
  },
  {
    "text": "returns to the device bad things may",
    "start": "177120",
    "end": "179459"
  },
  {
    "text": "happen",
    "start": "179459",
    "end": "180420"
  },
  {
    "text": "for example for the show in the figure",
    "start": "180420",
    "end": "182580"
  },
  {
    "text": "we set a device asdma deceleration to",
    "start": "182580",
    "end": "185640"
  },
  {
    "text": "its own reset register",
    "start": "185640",
    "end": "187560"
  },
  {
    "text": "we it rise to the regulator is internal",
    "start": "187560",
    "end": "191159"
  },
  {
    "text": "data structure will be freed after the",
    "start": "191159",
    "end": "193800"
  },
  {
    "text": "recital routine returns since the io has",
    "start": "193800",
    "end": "196860"
  },
  {
    "text": "not been completed the free data",
    "start": "196860",
    "end": "199319"
  },
  {
    "text": "structure will be used thus triggering a",
    "start": "199319",
    "end": "201540"
  },
  {
    "text": "uef exception",
    "start": "201540",
    "end": "204379"
  },
  {
    "text": "this phenomenon offers a known as the",
    "start": "206640",
    "end": "209159"
  },
  {
    "text": "forms of recursion for example we can",
    "start": "209159",
    "end": "212280"
  },
  {
    "text": "also create an indirect recursion",
    "start": "212280",
    "end": "214800"
  },
  {
    "text": "device a called the imamo Handler of",
    "start": "214800",
    "end": "217440"
  },
  {
    "text": "device B through dma triggers the dma",
    "start": "217440",
    "end": "220560"
  },
  {
    "text": "operation of B and the B will then",
    "start": "220560",
    "end": "223019"
  },
  {
    "text": "trigger the Imam 100 of a",
    "start": "223019",
    "end": "226819"
  },
  {
    "text": "from a big picture the incomplete",
    "start": "229200",
    "end": "232080"
  },
  {
    "text": "isolation between dma and the MMO is the",
    "start": "232080",
    "end": "235080"
  },
  {
    "text": "underlying cause of recursive MMO flows",
    "start": "235080",
    "end": "238200"
  },
  {
    "text": "different CPU to device communication",
    "start": "238200",
    "end": "240180"
  },
  {
    "text": "methods such as MMO and the pmio should",
    "start": "240180",
    "end": "243900"
  },
  {
    "text": "not affect the dma because by definition",
    "start": "243900",
    "end": "246659"
  },
  {
    "text": "dma is a memory to device communication",
    "start": "246659",
    "end": "249659"
  },
  {
    "text": "method that by pass the CPU",
    "start": "249659",
    "end": "254000"
  },
  {
    "text": "so in essence recursive MMO flows",
    "start": "254780",
    "end": "258120"
  },
  {
    "text": "violated the constancy of device State",
    "start": "258120",
    "end": "260280"
  },
  {
    "text": "machine translation",
    "start": "260280",
    "end": "261840"
  },
  {
    "text": "therefore depending on the design and",
    "start": "261840",
    "end": "264240"
  },
  {
    "text": "the implementation of different devices",
    "start": "264240",
    "end": "266220"
  },
  {
    "text": "the harm is also different we give three",
    "start": "266220",
    "end": "269400"
  },
  {
    "text": "common consequences here",
    "start": "269400",
    "end": "271620"
  },
  {
    "text": "the most harmful possible vulnerability",
    "start": "271620",
    "end": "273780"
  },
  {
    "text": "is the user for free and it's usually",
    "start": "273780",
    "end": "276960"
  },
  {
    "text": "caused by a pardon run to MMO reset",
    "start": "276960",
    "end": "280020"
  },
  {
    "text": "register free device internal data use",
    "start": "280020",
    "end": "283199"
  },
  {
    "text": "free data",
    "start": "283199",
    "end": "284699"
  },
  {
    "text": "if an attacker can occupy the release",
    "start": "284699",
    "end": "287759"
  },
  {
    "text": "data between free and use it's possible",
    "start": "287759",
    "end": "290699"
  },
  {
    "text": "to escape the virtual machine",
    "start": "290699",
    "end": "294020"
  },
  {
    "text": "in some devices structures like data",
    "start": "294360",
    "end": "297240"
  },
  {
    "text": "transfer size and data index are stored",
    "start": "297240",
    "end": "299880"
  },
  {
    "text": "in the device's global buffer under this",
    "start": "299880",
    "end": "302580"
  },
  {
    "text": "data can only checked before being used",
    "start": "302580",
    "end": "304680"
  },
  {
    "text": "so attackers can launch dma to the IMO",
    "start": "304680",
    "end": "307919"
  },
  {
    "text": "register that can modify this data done",
    "start": "307919",
    "end": "310919"
  },
  {
    "text": "an out-of-bound exercise situation will",
    "start": "310919",
    "end": "313139"
  },
  {
    "text": "happen later",
    "start": "313139",
    "end": "314400"
  },
  {
    "text": "attackers May achieve information",
    "start": "314400",
    "end": "316139"
  },
  {
    "text": "leakage or control flow hijacking",
    "start": "316139",
    "end": "320240"
  },
  {
    "text": "finally the device May launch dma to the",
    "start": "320540",
    "end": "323639"
  },
  {
    "text": "MMO register that will trigger the same",
    "start": "323639",
    "end": "325860"
  },
  {
    "text": "dma action thus forming an endless",
    "start": "325860",
    "end": "328740"
  },
  {
    "text": "recursive call the type attackers can",
    "start": "328740",
    "end": "331320"
  },
  {
    "text": "use this photo to crash the hypervisor",
    "start": "331320",
    "end": "335479"
  },
  {
    "text": "besides cumu we did some experiments on",
    "start": "336440",
    "end": "339720"
  },
  {
    "text": "the Oracle which box and it seems also",
    "start": "339720",
    "end": "342360"
  },
  {
    "text": "affected",
    "start": "342360",
    "end": "343380"
  },
  {
    "text": "we believe that similar results can be",
    "start": "343380",
    "end": "345539"
  },
  {
    "text": "achieved inside the guest OS",
    "start": "345539",
    "end": "347759"
  },
  {
    "text": "uh",
    "start": "347759",
    "end": "349320"
  },
  {
    "text": "we leave it as a future work to a",
    "start": "349320",
    "end": "352080"
  },
  {
    "text": "research project box and other",
    "start": "352080",
    "end": "353639"
  },
  {
    "text": "hypervisors you can read our white paper",
    "start": "353639",
    "end": "356400"
  },
  {
    "text": "for more details",
    "start": "356400",
    "end": "359360"
  },
  {
    "text": "next we will explain how to make the",
    "start": "359639",
    "end": "362039"
  },
  {
    "text": "hunting and the exploitation process",
    "start": "362039",
    "end": "364080"
  },
  {
    "text": "automatically with code ql",
    "start": "364080",
    "end": "367879"
  },
  {
    "text": "there are two common paths to trigger",
    "start": "367919",
    "end": "370139"
  },
  {
    "text": "the recursive mmio from MMO 100 to our",
    "start": "370139",
    "end": "373919"
  },
  {
    "text": "other mm Handler or from a bottom half",
    "start": "373919",
    "end": "376440"
  },
  {
    "text": "or timer callback to our MMA Handler to",
    "start": "376440",
    "end": "380039"
  },
  {
    "text": "automatically found those paths in",
    "start": "380039",
    "end": "381900"
  },
  {
    "text": "Virtual devices with code QR we first",
    "start": "381900",
    "end": "384419"
  },
  {
    "text": "need to do to describe the",
    "start": "384419",
    "end": "386520"
  },
  {
    "text": "characteristic of the imamo monitors and",
    "start": "386520",
    "end": "389039"
  },
  {
    "text": "the pH timer callbacks",
    "start": "389039",
    "end": "392600"
  },
  {
    "text": "also for the MMO handlers is defined in",
    "start": "393380",
    "end": "397080"
  },
  {
    "text": "structured memory region oops",
    "start": "397080",
    "end": "400520"
  },
  {
    "text": "so we can search each device's memory",
    "start": "400919",
    "end": "403979"
  },
  {
    "text": "region Oaks object and gets the MMO",
    "start": "403979",
    "end": "406500"
  },
  {
    "text": "handles here we all miss the MMO read",
    "start": "406500",
    "end": "409620"
  },
  {
    "text": "handlers since most of them cannot",
    "start": "409620",
    "end": "411840"
  },
  {
    "text": "trigger dma",
    "start": "411840",
    "end": "414380"
  },
  {
    "text": "for bottom halves on the timers they are",
    "start": "414380",
    "end": "417479"
  },
  {
    "text": "created by coding cumu pH and u4 at the",
    "start": "417479",
    "end": "420000"
  },
  {
    "text": "timer doing less and the callbacks are",
    "start": "420000",
    "end": "422400"
  },
  {
    "text": "passed over the first and the second",
    "start": "422400",
    "end": "424020"
  },
  {
    "text": "parameters so we can search those two",
    "start": "424020",
    "end": "426600"
  },
  {
    "text": "functions in each device to get the ph",
    "start": "426600",
    "end": "428880"
  },
  {
    "text": "and the timers callback",
    "start": "428880",
    "end": "432199"
  },
  {
    "text": "the last functions we need to know are",
    "start": "433020",
    "end": "435419"
  },
  {
    "text": "the right to physical address apis which",
    "start": "435419",
    "end": "437880"
  },
  {
    "text": "implemented which implement dma",
    "start": "437880",
    "end": "440759"
  },
  {
    "text": "according to cumul's documentation there",
    "start": "440759",
    "end": "443580"
  },
  {
    "text": "are a lot of such functions like DM",
    "start": "443580",
    "end": "446460"
  },
  {
    "text": "memory rights psidma rights dma buffer",
    "start": "446460",
    "end": "449639"
  },
  {
    "text": "read",
    "start": "449639",
    "end": "450300"
  },
  {
    "text": "Etc actually the Oracle to address space",
    "start": "450300",
    "end": "453360"
  },
  {
    "text": "right in the end",
    "start": "453360",
    "end": "455639"
  },
  {
    "text": "so we can just search those functions",
    "start": "455639",
    "end": "457919"
  },
  {
    "text": "for right to physical address sketches",
    "start": "457919",
    "end": "460020"
  },
  {
    "text": "to improve the performance researching",
    "start": "460020",
    "end": "462419"
  },
  {
    "text": "will hard code those functions in code",
    "start": "462419",
    "end": "464759"
  },
  {
    "text": "QR queries",
    "start": "464759",
    "end": "467539"
  },
  {
    "text": "then we can use the pathgraph module in",
    "start": "468740",
    "end": "471840"
  },
  {
    "text": "code clearl to find all the possible",
    "start": "471840",
    "end": "473940"
  },
  {
    "text": "recursive paths we need to Define our",
    "start": "473940",
    "end": "476699"
  },
  {
    "text": "own LG's query predicate which is the",
    "start": "476699",
    "end": "479940"
  },
  {
    "text": "core relationship under nodes which is",
    "start": "479940",
    "end": "482819"
  },
  {
    "text": "arbitrary functions finally we can",
    "start": "482819",
    "end": "485400"
  },
  {
    "text": "Leverage The transitive disclosures in",
    "start": "485400",
    "end": "487979"
  },
  {
    "text": "colloquial to do the search",
    "start": "487979",
    "end": "491360"
  },
  {
    "text": "for example there is a path from Imam",
    "start": "492020",
    "end": "495300"
  },
  {
    "text": "100 to psydma right in the bigger real",
    "start": "495300",
    "end": "498419"
  },
  {
    "text": "device",
    "start": "498419",
    "end": "500720"
  },
  {
    "text": "we said there are three common",
    "start": "501979",
    "end": "504300"
  },
  {
    "text": "consequences caused by recursive MMO",
    "start": "504300",
    "end": "506759"
  },
  {
    "text": "flows user after 3 out of bonds exercise",
    "start": "506759",
    "end": "509879"
  },
  {
    "text": "and earning scoring since UFC is usually",
    "start": "509879",
    "end": "513659"
  },
  {
    "text": "easier to explore we only focus on this",
    "start": "513659",
    "end": "516659"
  },
  {
    "text": "kind of vulnerability here to find all",
    "start": "516659",
    "end": "519719"
  },
  {
    "text": "the possible UL flows we need to know",
    "start": "519719",
    "end": "522240"
  },
  {
    "text": "the possible path from MMO right Handler",
    "start": "522240",
    "end": "524820"
  },
  {
    "text": "to a reset function call",
    "start": "524820",
    "end": "526740"
  },
  {
    "text": "similar to proper squares we can use",
    "start": "526740",
    "end": "529260"
  },
  {
    "text": "codequel to do this quickly",
    "start": "529260",
    "end": "532940"
  },
  {
    "text": "for example we can find a path from an",
    "start": "533100",
    "end": "535680"
  },
  {
    "text": "animal right Handler to a reset function",
    "start": "535680",
    "end": "537779"
  },
  {
    "text": "in the ehci controller",
    "start": "537779",
    "end": "541940"
  },
  {
    "text": "now we know three types of paths",
    "start": "542060",
    "end": "545519"
  },
  {
    "text": "from MMO calendar to dma right from pH",
    "start": "545519",
    "end": "548459"
  },
  {
    "text": "timer callback to dma right and from ml",
    "start": "548459",
    "end": "551580"
  },
  {
    "text": "right Handler to divide device reset",
    "start": "551580",
    "end": "553740"
  },
  {
    "text": "function",
    "start": "553740",
    "end": "554580"
  },
  {
    "text": "to find the devices which may have UF",
    "start": "554580",
    "end": "557040"
  },
  {
    "text": "flows caused by direct recursive MMO we",
    "start": "557040",
    "end": "560279"
  },
  {
    "text": "can calculate the intersections of those",
    "start": "560279",
    "end": "562320"
  },
  {
    "text": "paths manually for example if there are",
    "start": "562320",
    "end": "565080"
  },
  {
    "text": "type 1 on the type 3 path in device a",
    "start": "565080",
    "end": "567240"
  },
  {
    "text": "then device a may have UF flows",
    "start": "567240",
    "end": "571820"
  },
  {
    "text": "to explore the UF vulnerabilities we",
    "start": "573920",
    "end": "577380"
  },
  {
    "text": "have to find The malloc Primitives which",
    "start": "577380",
    "end": "579540"
  },
  {
    "text": "can occupy the free chunk the phone is",
    "start": "579540",
    "end": "581640"
  },
  {
    "text": "used",
    "start": "581640",
    "end": "582480"
  },
  {
    "text": "there are two possible ways first off",
    "start": "582480",
    "end": "585360"
  },
  {
    "text": "the control flow returns from the MMO",
    "start": "585360",
    "end": "587580"
  },
  {
    "text": "reset Handler a manlock that allocates",
    "start": "587580",
    "end": "590160"
  },
  {
    "text": "chunks the same size of the free chunk",
    "start": "590160",
    "end": "592560"
  },
  {
    "text": "will be called however after some",
    "start": "592560",
    "end": "594660"
  },
  {
    "text": "reviews we think it's hard to find such",
    "start": "594660",
    "end": "597060"
  },
  {
    "text": "Primitives in vulnerable devices",
    "start": "597060",
    "end": "599940"
  },
  {
    "text": "second instead of coding Matlock in the",
    "start": "599940",
    "end": "602700"
  },
  {
    "text": "same device we can write to our other",
    "start": "602700",
    "end": "604980"
  },
  {
    "text": "devices MMO region in which a chunk will",
    "start": "604980",
    "end": "607620"
  },
  {
    "text": "be allocated that will return to the",
    "start": "607620",
    "end": "609899"
  },
  {
    "text": "vulnerable device to use the freed but",
    "start": "609899",
    "end": "611880"
  },
  {
    "text": "occupied chunk since scat-gather dma is",
    "start": "611880",
    "end": "615300"
  },
  {
    "text": "common it's easy to find vulnerable",
    "start": "615300",
    "end": "617279"
  },
  {
    "text": "devices that perform multiple dma right",
    "start": "617279",
    "end": "619740"
  },
  {
    "text": "operations so we choose this method",
    "start": "619740",
    "end": "624380"
  },
  {
    "text": "so our new goal is to find a malloc that",
    "start": "625080",
    "end": "627720"
  },
  {
    "text": "can be triggered by an animal rights and",
    "start": "627720",
    "end": "630420"
  },
  {
    "text": "the guest can control the content of the",
    "start": "630420",
    "end": "632820"
  },
  {
    "text": "allocated chunk it's best that the size",
    "start": "632820",
    "end": "635700"
  },
  {
    "text": "of this chunk is also be controlled",
    "start": "635700",
    "end": "637800"
  },
  {
    "text": "based on past experience we get this",
    "start": "637800",
    "end": "640860"
  },
  {
    "text": "primitive has the following",
    "start": "640860",
    "end": "642120"
  },
  {
    "text": "characteristics",
    "start": "642120",
    "end": "643620"
  },
  {
    "text": "first there should be a freebie from the",
    "start": "643620",
    "end": "646079"
  },
  {
    "text": "allocated call otherwise the guests can",
    "start": "646079",
    "end": "648480"
  },
  {
    "text": "keep allocating chunks and crush the",
    "start": "648480",
    "end": "650519"
  },
  {
    "text": "hypervisor",
    "start": "650519",
    "end": "651959"
  },
  {
    "text": "two data structures are usually used for",
    "start": "651959",
    "end": "654480"
  },
  {
    "text": "data Trends transfer between guest and",
    "start": "654480",
    "end": "656700"
  },
  {
    "text": "host",
    "start": "656700",
    "end": "657480"
  },
  {
    "text": "linked list and are released to get site",
    "start": "657480",
    "end": "660839"
  },
  {
    "text": "control chunks we focus on Aries which",
    "start": "660839",
    "end": "663420"
  },
  {
    "text": "are composed of multiple constant size",
    "start": "663420",
    "end": "665399"
  },
  {
    "text": "units",
    "start": "665399",
    "end": "666540"
  },
  {
    "text": "third there should be a read from gas",
    "start": "666540",
    "end": "668880"
  },
  {
    "text": "action after the metal core so we can",
    "start": "668880",
    "end": "671399"
  },
  {
    "text": "control the content of the allocated",
    "start": "671399",
    "end": "673320"
  },
  {
    "text": "chunk",
    "start": "673320",
    "end": "674279"
  },
  {
    "text": "last the parameter of 3 with from guest",
    "start": "674279",
    "end": "677459"
  },
  {
    "text": "and the return value of malloc should be",
    "start": "677459",
    "end": "679800"
  },
  {
    "text": "the same pointer",
    "start": "679800",
    "end": "682579"
  },
  {
    "text": "then we can find the multiple free",
    "start": "683880",
    "end": "686399"
  },
  {
    "text": "network pairs here we discuss a",
    "start": "686399",
    "end": "688860"
  },
  {
    "text": "primitive in the Intel HDA device",
    "start": "688860",
    "end": "692959"
  },
  {
    "text": "these three Matlock pair is in the",
    "start": "695519",
    "end": "697800"
  },
  {
    "text": "function that gets the buffer descriptor",
    "start": "697800",
    "end": "700019"
  },
  {
    "text": "list from the guest OS",
    "start": "700019",
    "end": "702060"
  },
  {
    "text": "the guest OS can read arbitrary content",
    "start": "702060",
    "end": "704579"
  },
  {
    "text": "to the list",
    "start": "704579",
    "end": "705839"
  },
  {
    "text": "this route here is triggered by setting",
    "start": "705839",
    "end": "708120"
  },
  {
    "text": "the ramp bit in hda's stream control",
    "start": "708120",
    "end": "710459"
  },
  {
    "text": "registers moreover the lvi variable is",
    "start": "710459",
    "end": "714300"
  },
  {
    "text": "also controlled by the guest so by",
    "start": "714300",
    "end": "716399"
  },
  {
    "text": "quoting this routine the guests can",
    "start": "716399",
    "end": "718560"
  },
  {
    "text": "allocate any chunk size multiple of 60",
    "start": "718560",
    "end": "721140"
  },
  {
    "text": "bytes",
    "start": "721140",
    "end": "722820"
  },
  {
    "text": "finally there are eight streams in the",
    "start": "722820",
    "end": "725579"
  },
  {
    "text": "HDA device",
    "start": "725579",
    "end": "727320"
  },
  {
    "text": "which means the guest can cause several",
    "start": "727320",
    "end": "729600"
  },
  {
    "text": "free and allocated Primitives in one",
    "start": "729600",
    "end": "731760"
  },
  {
    "text": "scattered dma operation so this is also",
    "start": "731760",
    "end": "735180"
  },
  {
    "text": "a perfect primitive to construct the hip",
    "start": "735180",
    "end": "737459"
  },
  {
    "text": "function",
    "start": "737459",
    "end": "739940"
  },
  {
    "text": "using the code queries we find the",
    "start": "741560",
    "end": "744660"
  },
  {
    "text": "multiple bugs here we will share two",
    "start": "744660",
    "end": "747120"
  },
  {
    "text": "exportable water pages",
    "start": "747120",
    "end": "750560"
  },
  {
    "text": "the first one is a UF vulnerability in",
    "start": "751019",
    "end": "754860"
  },
  {
    "text": "the nvme device DMV functions can be",
    "start": "754860",
    "end": "757800"
  },
  {
    "text": "called without check if the Desolation",
    "start": "757800",
    "end": "759720"
  },
  {
    "text": "region is overlapped with devices MMO",
    "start": "759720",
    "end": "762600"
  },
  {
    "text": "region which result in recursive MMO",
    "start": "762600",
    "end": "765839"
  },
  {
    "text": "what makes this flow easy to export is",
    "start": "765839",
    "end": "768480"
  },
  {
    "text": "after the result finished the nvme",
    "start": "768480",
    "end": "771120"
  },
  {
    "text": "include red completion will be called in",
    "start": "771120",
    "end": "773700"
  },
  {
    "text": "which cq's timer is set to fire 500",
    "start": "773700",
    "end": "776880"
  },
  {
    "text": "nanoseconds later",
    "start": "776880",
    "end": "778380"
  },
  {
    "text": "however the timer is freed in the reset",
    "start": "778380",
    "end": "781440"
  },
  {
    "text": "routine since there is a callback",
    "start": "781440",
    "end": "783779"
  },
  {
    "text": "pointer in the timer the guest can",
    "start": "783779",
    "end": "786120"
  },
  {
    "text": "hijack rip directly if he can occupy the",
    "start": "786120",
    "end": "789000"
  },
  {
    "text": "free timer",
    "start": "789000",
    "end": "791540"
  },
  {
    "text": "the second one is a stack Overflow bug",
    "start": "792139",
    "end": "795000"
  },
  {
    "text": "in the nvme device we found it we're",
    "start": "795000",
    "end": "797880"
  },
  {
    "text": "reviewing the private UF bug it's a",
    "start": "797880",
    "end": "800639"
  },
  {
    "text": "total recursive MMO flow but can be",
    "start": "800639",
    "end": "802860"
  },
  {
    "text": "helpful later",
    "start": "802860",
    "end": "804480"
  },
  {
    "text": "this function transfers device log to",
    "start": "804480",
    "end": "807180"
  },
  {
    "text": "the guest OS the guest OS controls the",
    "start": "807180",
    "end": "810000"
  },
  {
    "text": "variable off if it is bigger than 4K an",
    "start": "810000",
    "end": "813000"
  },
  {
    "text": "integer underflow will happen and the",
    "start": "813000",
    "end": "814920"
  },
  {
    "text": "transline will be set to buffen which is",
    "start": "814920",
    "end": "817380"
  },
  {
    "text": "also partially controlled by the guest",
    "start": "817380",
    "end": "819120"
  },
  {
    "text": "thus leading to stack overflow even",
    "start": "819120",
    "end": "822420"
  },
  {
    "text": "worse since off can be set to Any number",
    "start": "822420",
    "end": "824639"
  },
  {
    "text": "greater than or equal to 4K the PTR",
    "start": "824639",
    "end": "827459"
  },
  {
    "text": "parameter of nvme c2h can be set to",
    "start": "827459",
    "end": "830160"
  },
  {
    "text": "arbitrary address resulting in arbitrary",
    "start": "830160",
    "end": "832920"
  },
  {
    "text": "memory read from the host to the guest",
    "start": "832920",
    "end": "835560"
  },
  {
    "text": "last the unless this buffer is used as a",
    "start": "835560",
    "end": "838740"
  },
  {
    "text": "source data of dma operations later",
    "start": "838740",
    "end": "840779"
  },
  {
    "text": "which can trigger the previous UF bug so",
    "start": "840779",
    "end": "844680"
  },
  {
    "text": "we can make the source data of the dma",
    "start": "844680",
    "end": "846720"
  },
  {
    "text": "operation from an arbitrary address like",
    "start": "846720",
    "end": "849420"
  },
  {
    "text": "the gas Ram we controlled",
    "start": "849420",
    "end": "853160"
  },
  {
    "text": "diverging these two vulnerabilities now",
    "start": "854720",
    "end": "857700"
  },
  {
    "text": "we will discuss how to export those",
    "start": "857700",
    "end": "860579"
  },
  {
    "text": "those bugs and demonstrate a VM Escape",
    "start": "860579",
    "end": "863220"
  },
  {
    "text": "in the end",
    "start": "863220",
    "end": "865939"
  },
  {
    "text": "was mentioned before we go to recursive",
    "start": "866639",
    "end": "869700"
  },
  {
    "text": "MMO flow triggered by dma that calls uef",
    "start": "869700",
    "end": "872940"
  },
  {
    "text": "and the free structure contains a timer",
    "start": "872940",
    "end": "875639"
  },
  {
    "text": "pointer",
    "start": "875639",
    "end": "876899"
  },
  {
    "text": "by the way go to arbitrary memory read",
    "start": "876899",
    "end": "878940"
  },
  {
    "text": "flow which can be used to bypass eslr",
    "start": "878940",
    "end": "881579"
  },
  {
    "text": "and leak the gas Ram address",
    "start": "881579",
    "end": "884000"
  },
  {
    "text": "there is a powerful Network primitive in",
    "start": "884000",
    "end": "886740"
  },
  {
    "text": "the HDA device",
    "start": "886740",
    "end": "888540"
  },
  {
    "text": "so our plan is following",
    "start": "888540",
    "end": "890699"
  },
  {
    "text": "in the gas OS we construct a fixed timer",
    "start": "890699",
    "end": "893279"
  },
  {
    "text": "and prepare a buffer for the MMO write",
    "start": "893279",
    "end": "895980"
  },
  {
    "text": "operations later",
    "start": "895980",
    "end": "897660"
  },
  {
    "text": "by leveraging the arbitrary read flow we",
    "start": "897660",
    "end": "900240"
  },
  {
    "text": "can leak or sorry",
    "start": "900240",
    "end": "903260"
  },
  {
    "text": "by leveraging the arbitrary reader flow",
    "start": "904740",
    "end": "906839"
  },
  {
    "text": "we can leak the address of system at PLT",
    "start": "906839",
    "end": "909779"
  },
  {
    "text": "and the address of the gas Ram",
    "start": "909779",
    "end": "912480"
  },
  {
    "text": "since the content of the animal right",
    "start": "912480",
    "end": "914579"
  },
  {
    "text": "operations in the UL flow is from the",
    "start": "914579",
    "end": "917220"
  },
  {
    "text": "buffer of the arbitrary reader flow we",
    "start": "917220",
    "end": "919680"
  },
  {
    "text": "make the source data of imamo Rights",
    "start": "919680",
    "end": "921899"
  },
  {
    "text": "from the buffer we constructed in step",
    "start": "921899",
    "end": "923940"
  },
  {
    "text": "1.",
    "start": "923940",
    "end": "925260"
  },
  {
    "text": "by leveraging those two flows we",
    "start": "925260",
    "end": "927300"
  },
  {
    "text": "launched together dma operations to nvme",
    "start": "927300",
    "end": "930180"
  },
  {
    "text": "MMO region and the first Imam right is",
    "start": "930180",
    "end": "933660"
  },
  {
    "text": "to trigger the Matlock in HDA device",
    "start": "933660",
    "end": "935839"
  },
  {
    "text": "allocating three chunks the same size of",
    "start": "935839",
    "end": "938880"
  },
  {
    "text": "the cumulus timer thus cleaning the T",
    "start": "938880",
    "end": "941399"
  },
  {
    "text": "cache of the main thread",
    "start": "941399",
    "end": "944660"
  },
  {
    "text": "in the same dma context the second",
    "start": "944880",
    "end": "947760"
  },
  {
    "text": "recursive MMO writes is to the reset",
    "start": "947760",
    "end": "950459"
  },
  {
    "text": "register of nvme controller releasing",
    "start": "950459",
    "end": "953279"
  },
  {
    "text": "the CQ structure",
    "start": "953279",
    "end": "955680"
  },
  {
    "text": "in the same dma context the last imma",
    "start": "955680",
    "end": "958440"
  },
  {
    "text": "move right is to trigger another malloc",
    "start": "958440",
    "end": "960420"
  },
  {
    "text": "in the HDA device thus occupying the",
    "start": "960420",
    "end": "963420"
  },
  {
    "text": "free",
    "start": "963420",
    "end": "964339"
  },
  {
    "text": "CQ structure and the timer pointer in CQ",
    "start": "964339",
    "end": "967860"
  },
  {
    "text": "now points to the fake timer we",
    "start": "967860",
    "end": "970079"
  },
  {
    "text": "constructed in step 1.",
    "start": "970079",
    "end": "972420"
  },
  {
    "text": "wind timer model is correlated the",
    "start": "972420",
    "end": "974940"
  },
  {
    "text": "Callback in the fake timer will be",
    "start": "974940",
    "end": "976680"
  },
  {
    "text": "called since we control the Callback and",
    "start": "976680",
    "end": "979199"
  },
  {
    "text": "its parameters a control flow hijack can",
    "start": "979199",
    "end": "981839"
  },
  {
    "text": "be achieved",
    "start": "981839",
    "end": "984380"
  },
  {
    "text": "clear we briefly give some explanations",
    "start": "985459",
    "end": "988560"
  },
  {
    "text": "or you can view the white paper for more",
    "start": "988560",
    "end": "991380"
  },
  {
    "text": "details",
    "start": "991380",
    "end": "992399"
  },
  {
    "text": "in cumul a memory region backed by host",
    "start": "992399",
    "end": "995339"
  },
  {
    "text": "mapping memory will have a corresponding",
    "start": "995339",
    "end": "997620"
  },
  {
    "text": "pointer in the hip so if we can pick the",
    "start": "997620",
    "end": "1000440"
  },
  {
    "text": "address of the Heap and search through",
    "start": "1000440",
    "end": "1002540"
  },
  {
    "text": "it we can get the guest Ram address",
    "start": "1002540",
    "end": "1006440"
  },
  {
    "text": "luckily after some reviews on the stack",
    "start": "1006440",
    "end": "1008720"
  },
  {
    "text": "we found a stable pointer that points to",
    "start": "1008720",
    "end": "1011360"
  },
  {
    "text": "a variable in the Heap and this value is",
    "start": "1011360",
    "end": "1014120"
  },
  {
    "text": "always below the gas ramp pointer so",
    "start": "1014120",
    "end": "1016639"
  },
  {
    "text": "instead of getting the Base address of",
    "start": "1016639",
    "end": "1018860"
  },
  {
    "text": "the Heap we can just search start from",
    "start": "1018860",
    "end": "1021139"
  },
  {
    "text": "this pointer",
    "start": "1021139",
    "end": "1023300"
  },
  {
    "text": "the next problem is how to find the Rams",
    "start": "1023300",
    "end": "1026000"
  },
  {
    "text": "pointer on the hip",
    "start": "1026000",
    "end": "1027319"
  },
  {
    "text": "we observe that the virtual address of",
    "start": "1027319",
    "end": "1029839"
  },
  {
    "text": "RAM is always aligned to 14 megabytes",
    "start": "1029839",
    "end": "1033199"
  },
  {
    "text": "when we set the gas Ram size of 2",
    "start": "1033199",
    "end": "1035480"
  },
  {
    "text": "gigabytes and there is a stable pointer",
    "start": "1035480",
    "end": "1038120"
  },
  {
    "text": "on the stack that points to a mapped",
    "start": "1038120",
    "end": "1040100"
  },
  {
    "text": "memory region whose High address is the",
    "start": "1040100",
    "end": "1042620"
  },
  {
    "text": "same as Ram's address",
    "start": "1042620",
    "end": "1044480"
  },
  {
    "text": "last considering that only 48-bit",
    "start": "1044480",
    "end": "1047360"
  },
  {
    "text": "addresses are available we can design",
    "start": "1047360",
    "end": "1050120"
  },
  {
    "text": "three patterns on the search on the Heap",
    "start": "1050120",
    "end": "1052340"
  },
  {
    "text": "in units of a device finally got the",
    "start": "1052340",
    "end": "1055100"
  },
  {
    "text": "address of the gas Ram",
    "start": "1055100",
    "end": "1057620"
  },
  {
    "text": "the right figure shows the process to",
    "start": "1057620",
    "end": "1060140"
  },
  {
    "text": "leak the ram address",
    "start": "1060140",
    "end": "1063100"
  },
  {
    "text": "when we trigger recursive MMO flows in",
    "start": "1065900",
    "end": "1068539"
  },
  {
    "text": "the nvme device The dma Source data is",
    "start": "1068539",
    "end": "1072140"
  },
  {
    "text": "described by a structure called PRP",
    "start": "1072140",
    "end": "1074780"
  },
  {
    "text": "a PRP entry is a 64-bit memory physical",
    "start": "1074780",
    "end": "1077960"
  },
  {
    "text": "address divided into two parts",
    "start": "1077960",
    "end": "1080660"
  },
  {
    "text": "page starter address and the page",
    "start": "1080660",
    "end": "1082580"
  },
  {
    "text": "offsite",
    "start": "1082580",
    "end": "1084080"
  },
  {
    "text": "there are two PRP registers prp1 points",
    "start": "1084080",
    "end": "1087559"
  },
  {
    "text": "to a page PRP to pull into a PRP list",
    "start": "1087559",
    "end": "1090320"
  },
  {
    "text": "which contains a list of PRP entries",
    "start": "1090320",
    "end": "1093799"
  },
  {
    "text": "this figure illustrates the PRP",
    "start": "1093799",
    "end": "1095900"
  },
  {
    "text": "structure we use",
    "start": "1095900",
    "end": "1098600"
  },
  {
    "text": "but which side we should trigger three",
    "start": "1098600",
    "end": "1100880"
  },
  {
    "text": "discrete MMO rights",
    "start": "1100880",
    "end": "1103100"
  },
  {
    "text": "so we need the three PRP entries to",
    "start": "1103100",
    "end": "1105919"
  },
  {
    "text": "clear the tcash occupy the free timer",
    "start": "1105919",
    "end": "1108559"
  },
  {
    "text": "and the corrupts of the timer with gas",
    "start": "1108559",
    "end": "1110660"
  },
  {
    "text": "Ram content",
    "start": "1110660",
    "end": "1112340"
  },
  {
    "text": "thus excluding arbitrary code on the",
    "start": "1112340",
    "end": "1114679"
  },
  {
    "text": "host OS the reason that we must clean",
    "start": "1114679",
    "end": "1117620"
  },
  {
    "text": "the tcash is that we found if the",
    "start": "1117620",
    "end": "1120260"
  },
  {
    "text": "current stress T cash is for the",
    "start": "1120260",
    "end": "1122600"
  },
  {
    "text": "allocator will pull the free chunk back",
    "start": "1122600",
    "end": "1124520"
  },
  {
    "text": "to the thread in which the chunk is",
    "start": "1124520",
    "end": "1126320"
  },
  {
    "text": "allocated",
    "start": "1126320",
    "end": "1127340"
  },
  {
    "text": "this will prevent us from occupying the",
    "start": "1127340",
    "end": "1129740"
  },
  {
    "text": "field chunk",
    "start": "1129740",
    "end": "1132460"
  },
  {
    "text": "in this demonstration we will make the",
    "start": "1133580",
    "end": "1135860"
  },
  {
    "text": "timers go back pointing to a system at",
    "start": "1135860",
    "end": "1138140"
  },
  {
    "text": "the PLT under the first parameter point",
    "start": "1138140",
    "end": "1140960"
  },
  {
    "text": "to the norm calculator stream",
    "start": "1140960",
    "end": "1143780"
  },
  {
    "text": "so a calculator will pop out on the host",
    "start": "1143780",
    "end": "1148059"
  },
  {
    "text": "so how to fix those flows",
    "start": "1171580",
    "end": "1176260"
  },
  {
    "text": "there are two typical medications the",
    "start": "1176860",
    "end": "1179840"
  },
  {
    "text": "first medication is to add busy Flags in",
    "start": "1179840",
    "end": "1182299"
  },
  {
    "text": "every device when we enter the MMO or pH",
    "start": "1182299",
    "end": "1185360"
  },
  {
    "text": "timer callback the busy flag is set and",
    "start": "1185360",
    "end": "1188179"
  },
  {
    "text": "with the eye operation is completed the",
    "start": "1188179",
    "end": "1190460"
  },
  {
    "text": "busy flag is on set",
    "start": "1190460",
    "end": "1192320"
  },
  {
    "text": "if the PC flag is set when we enter the",
    "start": "1192320",
    "end": "1194780"
  },
  {
    "text": "device an area will be reported",
    "start": "1194780",
    "end": "1197360"
  },
  {
    "text": "the disadvantage is that we need to add",
    "start": "1197360",
    "end": "1200059"
  },
  {
    "text": "code in different locations for",
    "start": "1200059",
    "end": "1201980"
  },
  {
    "text": "different devices",
    "start": "1201980",
    "end": "1203600"
  },
  {
    "text": "the left part of this figure illustrates",
    "start": "1203600",
    "end": "1205940"
  },
  {
    "text": "the design of this solution",
    "start": "1205940",
    "end": "1208660"
  },
  {
    "text": "the second medication is to put the",
    "start": "1208660",
    "end": "1211160"
  },
  {
    "text": "checks on the bus by idolizing the data",
    "start": "1211160",
    "end": "1214100"
  },
  {
    "text": "acceleration address on the bus the",
    "start": "1214100",
    "end": "1216380"
  },
  {
    "text": "excise that can generate a loop is",
    "start": "1216380",
    "end": "1219080"
  },
  {
    "text": "prevented however now we need to record",
    "start": "1219080",
    "end": "1221720"
  },
  {
    "text": "all the devices that can be accessed",
    "start": "1221720",
    "end": "1224240"
  },
  {
    "text": "under release the records wins over",
    "start": "1224240",
    "end": "1228440"
  },
  {
    "text": "the right part of this figure shows the",
    "start": "1228440",
    "end": "1230720"
  },
  {
    "text": "design of this solution",
    "start": "1230720",
    "end": "1232960"
  },
  {
    "text": "the community adopted a hybrid solution",
    "start": "1232960",
    "end": "1236059"
  },
  {
    "text": "which puts the checks on the box and",
    "start": "1236059",
    "end": "1238520"
  },
  {
    "text": "leaves the device to decide whether to a",
    "start": "1238520",
    "end": "1240620"
  },
  {
    "text": "load right into a long run area",
    "start": "1240620",
    "end": "1243020"
  },
  {
    "text": "you can't you can view the links for",
    "start": "1243020",
    "end": "1245480"
  },
  {
    "text": "more information",
    "start": "1245480",
    "end": "1247840"
  },
  {
    "text": "finally would like to share some",
    "start": "1249500",
    "end": "1251600"
  },
  {
    "text": "thoughts about bug hunting and the open",
    "start": "1251600",
    "end": "1253640"
  },
  {
    "text": "source security",
    "start": "1253640",
    "end": "1256240"
  },
  {
    "text": "first this design flow has a large",
    "start": "1257980",
    "end": "1260840"
  },
  {
    "text": "impact and should be fixed as soon as",
    "start": "1260840",
    "end": "1263179"
  },
  {
    "text": "possible",
    "start": "1263179",
    "end": "1264860"
  },
  {
    "text": "second this flow exists in qmail for at",
    "start": "1264860",
    "end": "1268520"
  },
  {
    "text": "least 10 years or more than one year",
    "start": "1268520",
    "end": "1270860"
  },
  {
    "text": "just considering the large-scale",
    "start": "1270860",
    "end": "1272720"
  },
  {
    "text": "appearance",
    "start": "1272720",
    "end": "1274160"
  },
  {
    "text": "for this box all communication is public",
    "start": "1274160",
    "end": "1276740"
  },
  {
    "text": "except the one we use to achieve VM",
    "start": "1276740",
    "end": "1279320"
  },
  {
    "text": "Escape",
    "start": "1279320",
    "end": "1280160"
  },
  {
    "text": "so if you are a malicious hiker a fast",
    "start": "1280160",
    "end": "1283039"
  },
  {
    "text": "way to attack an open source software",
    "start": "1283039",
    "end": "1285200"
  },
  {
    "text": "might be checking its bug tracker",
    "start": "1285200",
    "end": "1287059"
  },
  {
    "text": "instead of finding vulnerability by",
    "start": "1287059",
    "end": "1289039"
  },
  {
    "text": "yourself",
    "start": "1289039",
    "end": "1290539"
  },
  {
    "text": "last we auditing the hypervisors we",
    "start": "1290539",
    "end": "1293840"
  },
  {
    "text": "should pay attention to the different",
    "start": "1293840",
    "end": "1295640"
  },
  {
    "text": "behaviors between virtualization",
    "start": "1295640",
    "end": "1297980"
  },
  {
    "text": "software and the real Hardware",
    "start": "1297980",
    "end": "1302020"
  },
  {
    "text": "we will release the white paper and the",
    "start": "1302860",
    "end": "1305720"
  },
  {
    "text": "VM escape code on GitHub a week later",
    "start": "1305720",
    "end": "1308120"
  },
  {
    "text": "you can find a lot of details there",
    "start": "1308120",
    "end": "1311299"
  },
  {
    "text": "and that's all thanks for listening uh",
    "start": "1311299",
    "end": "1315679"
  },
  {
    "text": "I think I we have some minutes for Q a",
    "start": "1315679",
    "end": "1319960"
  },
  {
    "text": "[Music]",
    "start": "1320890",
    "end": "1323959"
  },
  {
    "text": "[Music]",
    "start": "1327800",
    "end": "1330450"
  }
]