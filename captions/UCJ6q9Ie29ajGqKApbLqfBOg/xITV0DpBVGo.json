[
  {
    "text": "uh so everyone thank you for listening and Inter in our work uh I'm tan D this",
    "start": "2840",
    "end": "8440"
  },
  {
    "text": "my first time for me at beight and I'm very happy and honored to be here with you uh my topic is about a remote",
    "start": "8440",
    "end": "16198"
  },
  {
    "text": "service on smartphones and in this topic you will see several serious vulnerabilities uh and a wonderful one",
    "start": "16199",
    "end": "23640"
  },
  {
    "text": "Klick RC implementation detail and please don't walk away we have prepared an awesome video demo in the",
    "start": "23640",
    "end": "32240"
  },
  {
    "text": "end and us hosi and Fang are the senior SEC researchers at singular security lab",
    "start": "32280",
    "end": "39719"
  },
  {
    "text": "and they contribute a lot in this work and uh they have many species like mosac",
    "start": "39719",
    "end": "44840"
  },
  {
    "text": "and blackhead Asia in USA and I'm chai 23 years old the CSP student at se",
    "start": "44840",
    "end": "50960"
  },
  {
    "text": "border my research mainly focus on Windows security and explo exploitation",
    "start": "50960",
    "end": "58280"
  },
  {
    "text": "development and in our agenda I will start by introducing a remote surface of",
    "start": "58320",
    "end": "64040"
  },
  {
    "text": "video call our Target is SE video engine service and I introduce its function and",
    "start": "64040",
    "end": "70600"
  },
  {
    "text": "the reason why we research it during our research we dis uh discovered several",
    "start": "70600",
    "end": "76159"
  },
  {
    "text": "vulnerabilities and we successfully exploited them and achieved remote code",
    "start": "76159",
    "end": "81320"
  },
  {
    "text": "execution on the victim's phone and finally I will show the video demo of the of the",
    "start": "81320",
    "end": "88439"
  },
  {
    "text": "explo and in imagine this scenario a victim receives a video call as soon as",
    "start": "88439",
    "end": "94079"
  },
  {
    "text": "he or she connects and hacker takes over the phone we have the scenes like this",
    "start": "94079",
    "end": "99320"
  },
  {
    "text": "in the movies but that these attacks do happen in the real",
    "start": "99320",
    "end": "104880"
  },
  {
    "text": "world previously much attention was given to a tag service or FaceTime WhatsApp Telegram and web RTC this",
    "start": "104880",
    "end": "112960"
  },
  {
    "text": "instant Ming apps has uh been a major focus of hacker groups and there have",
    "start": "112960",
    "end": "118360"
  },
  {
    "text": "been many reports and there is a topic about attack onom recently and there",
    "start": "118360",
    "end": "123439"
  },
  {
    "text": "have been many news about spyware using M message and WhatsApp to monitor phone",
    "start": "123439",
    "end": "130679"
  },
  {
    "text": "users however there's a remote attack surface on Android platform that has not",
    "start": "131000",
    "end": "136920"
  },
  {
    "text": "received much attention until know and that is Carrier based video calling",
    "start": "136920",
    "end": "142080"
  },
  {
    "text": "Android 9 introduced a new sub system API interface called IMS service to",
    "start": "142080",
    "end": "147879"
  },
  {
    "text": "enable IP multimedia subsystem the subsy implementation will",
    "start": "147879",
    "end": "153360"
  },
  {
    "text": "be provided by carrier or a vendor so in this new feature we found",
    "start": "153360",
    "end": "159560"
  },
  {
    "text": "some critical vulnerabilities and in the Samsung's SE video anual service and this vulnerabilities has likely existed",
    "start": "159560",
    "end": "167080"
  },
  {
    "text": "for a long time exporting them allows attackers to achieve one click",
    "start": "167080",
    "end": "173879"
  },
  {
    "text": "rce then let me introduce what is this service and why we put our effort on it",
    "start": "174159",
    "end": "181680"
  },
  {
    "text": "so what is security and service this service is a crucial system application integrated into Samsung's Android phones",
    "start": "181680",
    "end": "189599"
  },
  {
    "text": "and it is responsible for video decoding and encoding and second why we research this",
    "start": "189599",
    "end": "198680"
  },
  {
    "text": "service this service has the following features the first uh it runs on high privileg and it listen ports on 0.0.0.0",
    "start": "198680",
    "end": "207480"
  },
  {
    "text": "and this can be excised from remote directly it is installed and runs by",
    "start": "207480",
    "end": "213040"
  },
  {
    "text": "default on the Samsung phones and our one click RC exploit can work only if",
    "start": "213040",
    "end": "218599"
  },
  {
    "text": "the phone has a SIM card inserted so in contrast there's no need to register an",
    "start": "218599",
    "end": "224200"
  },
  {
    "text": "account like M message or WhatsApp to launch the attack it's tricking condition is not",
    "start": "224200",
    "end": "230080"
  },
  {
    "text": "compax all an attacker needs to know Target a victim is the phone",
    "start": "230080",
    "end": "235879"
  },
  {
    "text": "number and then let us learn some details about the features",
    "start": "235879",
    "end": "241040"
  },
  {
    "text": "this service uh process runs on system the highest privilege in user space is also own camera network uh storage m sms",
    "start": "241040",
    "end": "250079"
  },
  {
    "text": "microphone contacts and other permissions uh this two screenshots",
    "start": "250079",
    "end": "256440"
  },
  {
    "text": "shows that the service process Its listening Sports on the IP uh the screenshot on the top show the part",
    "start": "256440",
    "end": "263080"
  },
  {
    "text": "listening status of com M service it is responsible for resolving signaling and",
    "start": "263080",
    "end": "269199"
  },
  {
    "text": "it keeps listening the screenshot below shows the port listening status of the after video",
    "start": "269199",
    "end": "275560"
  },
  {
    "text": "call connection is is established and the comc sve is",
    "start": "275560",
    "end": "281639"
  },
  {
    "text": "responsible for resolving audio and video package after KN this two process",
    "start": "281639",
    "end": "286840"
  },
  {
    "text": "uh let's get to learn some basic knowledge of this service architecture this speaker shows uh how",
    "start": "286840",
    "end": "294199"
  },
  {
    "text": "do to phones communicate over this uh architecture through car Network and the",
    "start": "294199",
    "end": "299720"
  },
  {
    "text": "difference car handles the two process IM service and sve so interaction between I'm service",
    "start": "299720",
    "end": "306520"
  },
  {
    "text": "is mainly signaling the signaling is transmitted through the carers network and the car network will parse and",
    "start": "306520",
    "end": "313160"
  },
  {
    "text": "reorganize the signal message and forward it to the offset and the transmission between sve",
    "start": "313160",
    "end": "319680"
  },
  {
    "text": "are mainly video messages and video control messages this messages are transmitted through the carer network",
    "start": "319680",
    "end": "326199"
  },
  {
    "text": "but the carer network only forwards them directly uh next let me introduce the procedure",
    "start": "326199",
    "end": "333039"
  },
  {
    "text": "of Ms Service uh signaling and video call Isa so this is the process of M service",
    "start": "333039",
    "end": "341360"
  },
  {
    "text": "signaling interaction so before connecting on to right to left the",
    "start": "341360",
    "end": "347400"
  },
  {
    "text": "center send a PRS message and the Sip server send the invite to the receiver",
    "start": "347400",
    "end": "354880"
  },
  {
    "text": "then the receiver rings and then use update to interact and EST establish a",
    "start": "354880",
    "end": "361479"
  },
  {
    "text": "connection after this uh then can complete the establishment of a video call",
    "start": "361479",
    "end": "367720"
  },
  {
    "text": "connection after the video call connection is established uh SV process will carry out the flow as shown in the",
    "start": "367960",
    "end": "374319"
  },
  {
    "text": "figure so on the live first start channel in set connection as sv/",
    "start": "374319",
    "end": "379960"
  },
  {
    "text": "transport starts to collect the package from the remote after that it will",
    "start": "379960",
    "end": "385599"
  },
  {
    "text": "calls. receive which is responsible for processing RDP package in RTP CB",
    "start": "385599",
    "end": "391120"
  },
  {
    "text": "function and rtcp package in rtcp CB",
    "start": "391120",
    "end": "397039"
  },
  {
    "text": "function so resolving RTP and RCP package is the attack surface we have focused on this graph illustrates the",
    "start": "397199",
    "end": "404720"
  },
  {
    "text": "basic structures of the two package and this is where our abilities came",
    "start": "404720",
    "end": "412120"
  },
  {
    "text": "from so list 3 CVS are used for developing exploitation this time all",
    "start": "412319",
    "end": "417680"
  },
  {
    "text": "the latest Samsung phones are affective by the cve but don't be worried current they are all fixed and the commercial",
    "start": "417680",
    "end": "424080"
  },
  {
    "text": "PES were released in July I will introduce each of",
    "start": "424080",
    "end": "429319"
  },
  {
    "text": "them so here's the trigger scenario of the first CV after video call connection",
    "start": "429319",
    "end": "434919"
  },
  {
    "text": "is established the attacker sends a malicious AP rtcp package which can",
    "start": "434919",
    "end": "441479"
  },
  {
    "text": "trigger Heap overflow in the victim's phone this out of B right can write at",
    "start": "441479",
    "end": "446919"
  },
  {
    "text": "most hex I5 F5 bites",
    "start": "446919",
    "end": "451520"
  },
  {
    "text": "uh each one is the start of our research uh typical he overflow the screenshot on",
    "start": "452960",
    "end": "458240"
  },
  {
    "text": "the left shows the result of DEC compiled par rtcp AP packet function and",
    "start": "458240",
    "end": "464520"
  },
  {
    "text": "pay attention to the rectangle is responsible for resolving rtcp AP package from remote so barable AP data L",
    "start": "464520",
    "end": "473479"
  },
  {
    "text": "indicates the lens of data from the remote can be set to Hax FF FF at most",
    "start": "473479",
    "end": "480319"
  },
  {
    "text": "however the buffer AP data buff is size is high 1,000 bytes resulting in a large",
    "start": "480319",
    "end": "487599"
  },
  {
    "text": "scale out of one right but in actual data buffer lens in the rtcp package is 15 60 bytes so we",
    "start": "487599",
    "end": "496080"
  },
  {
    "text": "can only control the 500 and 36 of Auto one right",
    "start": "496080",
    "end": "502560"
  },
  {
    "text": "data and look at the figure on the right the red color Zone indicates the",
    "start": "502639",
    "end": "507840"
  },
  {
    "text": "scenario of the Heap overflow and remember the AP data buffer starts",
    "start": "507840",
    "end": "513200"
  },
  {
    "text": "from the 2456 it is worth remembering uh to learn about our",
    "start": "513200",
    "end": "520159"
  },
  {
    "text": "exploitation here we come to issue two uh tmbr and T mmbn respectively",
    "start": "522240",
    "end": "529080"
  },
  {
    "text": "indicates uh temporary maximum media stream bit rate request and",
    "start": "529080",
    "end": "536040"
  },
  {
    "text": "notification and teer can trigger an aound rate read by sending a malicious",
    "start": "536040",
    "end": "541240"
  },
  {
    "text": "tmmbr package after video Call Connection established then victim phone",
    "start": "541240",
    "end": "546519"
  },
  {
    "text": "will reply with a TMM BN package containing the outof bound rate data to",
    "start": "546519",
    "end": "552399"
  },
  {
    "text": "the attacker and issue two is the only information compability we found in our",
    "start": "552399",
    "end": "559079"
  },
  {
    "text": "research it help us to uh bypass the aslr and it is a forb range autobound",
    "start": "559079",
    "end": "566040"
  },
  {
    "text": "rate the only condition to enter this function is lens of RCP package equals",
    "start": "566040",
    "end": "571640"
  },
  {
    "text": "to8 so like the lens to be8 uh the variable we B9 to 12 represents the",
    "start": "571640",
    "end": "580079"
  },
  {
    "text": "autobound r dator and autobound r data is then",
    "start": "580079",
    "end": "587480"
  },
  {
    "text": "calculated and sore to the rtcp object receive uh plus",
    "start": "587680",
    "end": "592760"
  },
  {
    "text": "1192 11 uh 96 and 120",
    "start": "592760",
    "end": "597959"
  },
  {
    "text": "separately so this procedure extends four bytes uh to 12 bytes and there seem",
    "start": "597959",
    "end": "604120"
  },
  {
    "text": "INF for loss while calculating but actual all data can be restored through a reverse",
    "start": "604120",
    "end": "611040"
  },
  {
    "text": "calculation so after knowing the function TM my bar packet let's see the tmb impa it function as shown on the",
    "start": "611440",
    "end": "619240"
  },
  {
    "text": "left so this function will assembl out of m r data in an rtcp PM tmbn message",
    "start": "619240",
    "end": "626079"
  },
  {
    "text": "and send it to the outsite which is the attacker causing remote information",
    "start": "626079",
    "end": "631320"
  },
  {
    "text": "leak and on the right uh this is the reverse calculation",
    "start": "631320",
    "end": "637040"
  },
  {
    "text": "restor four BS data from 12 bits and this picture shows the process",
    "start": "637040",
    "end": "644200"
  },
  {
    "text": "of information Link in more detail and after text crafting the TM bar package",
    "start": "644200",
    "end": "649560"
  },
  {
    "text": "can be anywhere within rtcp package buffer in the red color Zone then the",
    "start": "649560",
    "end": "655600"
  },
  {
    "text": "four packs just following the tmmbr package will be so the B uh the eight bytes in the",
    "start": "655600",
    "end": "662920"
  },
  {
    "text": "figure indicates a pointer which I will introduce",
    "start": "662920",
    "end": "668320"
  },
  {
    "text": "later and this is the scenario of Trion e 3 after video call connection is",
    "start": "668519",
    "end": "674160"
  },
  {
    "text": "established the attacker can send rtcp packet with 1600 bytes this packet will",
    "start": "674160",
    "end": "680639"
  },
  {
    "text": "then trigger hip overflow one B allowing a maximum out of bounds right of 40 BS",
    "start": "680639",
    "end": "689199"
  },
  {
    "text": "and is three is the most important part of our exploitation using it we realize",
    "start": "690320",
    "end": "696079"
  },
  {
    "text": "the control of the PC register this vulnerability is quite weird because it receives a maximum lens",
    "start": "696079",
    "end": "703240"
  },
  {
    "text": "of 1600 bets when receiving messages and in the following checking of the lens is also to check whether the lens of the",
    "start": "703240",
    "end": "710240"
  },
  {
    "text": "received message is is more than 1600 1600 b or not it seems that there's no",
    "start": "710240",
    "end": "716920"
  },
  {
    "text": "problem but in fact the lens of the buffer us used for receiving rtcp",
    "start": "716920",
    "end": "722600"
  },
  {
    "text": "message is not 1600 B but 15 and 6",
    "start": "722600",
    "end": "729360"
  },
  {
    "text": "bites it's worth to mention that there's a pointer right after the rtcp packet",
    "start": "730399",
    "end": "736839"
  },
  {
    "text": "buffer and this pointer is frequently used so sending a 1600 B rtcp package we",
    "start": "736839",
    "end": "744519"
  },
  {
    "text": "overflow this pointer and cous overwriting can cause a crash",
    "start": "744519",
    "end": "751160"
  },
  {
    "text": "and the three vulnerabilities using development exitation has been introduced so let's begin our journey of",
    "start": "752160",
    "end": "757639"
  },
  {
    "text": "developing the exploitation uh let's quickly review the",
    "start": "757639",
    "end": "764079"
  },
  {
    "text": "three Primitives we have or we have two write and one read and what deserve",
    "start": "764079",
    "end": "769480"
  },
  {
    "text": "attention is each time of sending a packet can trigger one of these Primitives so in other words we can",
    "start": "769480",
    "end": "776880"
  },
  {
    "text": "trigger uh trigger these three Primitives infinitely as long as the video connection remains",
    "start": "776880",
    "end": "783680"
  },
  {
    "text": "active all of these Primitives are Rel to the data structure C transport manager as shown right below the",
    "start": "783680",
    "end": "791320"
  },
  {
    "text": "Primitive titles so our next step is to get to learn about this",
    "start": "791320",
    "end": "798760"
  },
  {
    "text": "object object C transport manager is one of the field in C control manager and in",
    "start": "800199",
    "end": "806399"
  },
  {
    "text": "the construct function of C control manager uh as show on the top right it",
    "start": "806399",
    "end": "813560"
  },
  {
    "text": "individualize specially continuous 7 C transform manager and as sh on the left",
    "start": "813560",
    "end": "820199"
  },
  {
    "text": "memory layout each C transform manager object correspond to a channel but the",
    "start": "820199",
    "end": "826120"
  },
  {
    "text": "video call only uses the first channel so in other words only the first c transort c transport manager object is",
    "start": "826120",
    "end": "833320"
  },
  {
    "text": "used and assigned values while other objects remain in their initial status",
    "start": "833320",
    "end": "841040"
  },
  {
    "text": "and through the figure on the left which represents the right primitive B the 40",
    "start": "842079",
    "end": "847360"
  },
  {
    "text": "B Auto B right after the rtcv pack buffer in the right color",
    "start": "847360",
    "end": "853360"
  },
  {
    "text": "Z and uh there is a pointer with the variable name transport listener just",
    "start": "853360",
    "end": "859399"
  },
  {
    "text": "locates in this out of bound right area object call pointer or call functions",
    "start": "859399",
    "end": "865839"
  },
  {
    "text": "through this pointer and the steps of calling a functions through this pointer are shown on the lower",
    "start": "865839",
    "end": "871959"
  },
  {
    "text": "right and this process of addressing reminds me of the virtual table in",
    "start": "871959",
    "end": "877800"
  },
  {
    "text": "C++ and one of the call is Qs control Handler it is invoked every time the",
    "start": "878720",
    "end": "884399"
  },
  {
    "text": "program receive a rtcp package for data",
    "start": "884399",
    "end": "890240"
  },
  {
    "text": "processing so have the knowledge of the each perim ability and the object re one ability happens um we start our journey",
    "start": "893279",
    "end": "900000"
  },
  {
    "text": "of controlling the PC register uh although the range can be ritten by primitive a is quite large only",
    "start": "900000",
    "end": "908079"
  },
  {
    "text": "536 bytes are NR control so they indeed have if few pointers but we still cannot",
    "start": "908079",
    "end": "916240"
  },
  {
    "text": "find the me it to directly affect the PC register and in contrast even though the",
    "start": "916240",
    "end": "922120"
  },
  {
    "text": "right primitive B can only control 40 bytes each time luckily we have the",
    "start": "922120",
    "end": "927440"
  },
  {
    "text": "pointer transport list along is the reference P eventually points to a function allowing us to",
    "start": "927440",
    "end": "934160"
  },
  {
    "text": "control the PC register so uh based on the abilities we",
    "start": "934160",
    "end": "941040"
  },
  {
    "text": "have so far we de have to verify that we can control the PC through this red primitive B we plan to control the",
    "start": "941040",
    "end": "946959"
  },
  {
    "text": "Overflow pointer trans listener whose offsite is 84 56 to point to a memory",
    "start": "946959",
    "end": "954800"
  },
  {
    "text": "region we can control so in our case it's the rtcp pack buff",
    "start": "954800",
    "end": "959920"
  },
  {
    "text": "and according to the orang invoke chain we will place the fake invoke chain in the control",
    "start": "959920",
    "end": "967240"
  },
  {
    "text": "memory so the final effect is when the function call happens actually I replace data and function works so for example",
    "start": "967920",
    "end": "975319"
  },
  {
    "text": "look at the lower right uh the PC is set to that beef that beef so here comes the",
    "start": "975319",
    "end": "982079"
  },
  {
    "text": "first challenge we need to know the address of C transport manager object we need to find ourselves",
    "start": "982079",
    "end": "990920"
  },
  {
    "text": "and go on to say our ultimate goal is to h control flow to system function yipsy and control the first argument the",
    "start": "991600",
    "end": "997880"
  },
  {
    "text": "register X zero then we can achieve arbitary called execution through the system function and further get shell or",
    "start": "997880",
    "end": "1005000"
  },
  {
    "text": "steal sensitive data like pictures or contexts so in this part I will",
    "start": "1005000",
    "end": "1011800"
  },
  {
    "text": "introduce how to achieve remote information Link in our case and this typ is often the most difficult part of",
    "start": "1011800",
    "end": "1019240"
  },
  {
    "text": "achieving rce so our initial plan was as follow so",
    "start": "1019240",
    "end": "1025558"
  },
  {
    "text": "first find ourselves find the member address of the vulnerable structure to locate our Shell Code and next we plan",
    "start": "1025559",
    "end": "1032079"
  },
  {
    "text": "to locate the address of the lip C Shar object which would give us the address of the system function then we would",
    "start": "1032079",
    "end": "1038558"
  },
  {
    "text": "control the PC register to jump to this this system",
    "start": "1038559",
    "end": "1043640"
  },
  {
    "text": "function however our story Primitives could not directly achieve the second goal our Primitives are directly related",
    "start": "1043640",
    "end": "1051039"
  },
  {
    "text": "to the lip Sansung video engine Library so we can first obtain the Base address",
    "start": "1051039",
    "end": "1056960"
  },
  {
    "text": "of Li Sansung video engine and use Gadget within it to do more things and",
    "start": "1056960",
    "end": "1062679"
  },
  {
    "text": "finally by finding shared object based address we can use skes to achieve",
    "start": "1062679",
    "end": "1068160"
  },
  {
    "text": "remote information link of any address we want this allows us to locate address of LIC system and then control the",
    "start": "1068160",
    "end": "1076520"
  },
  {
    "text": "PC and this page is the road map of our building uh our exploitation and it will",
    "start": "1076880",
    "end": "1083360"
  },
  {
    "text": "appear many times in the following to keep you",
    "start": "1083360",
    "end": "1088320"
  },
  {
    "text": "updated so first STP I will introduce how we find ourselves and that is the",
    "start": "1093039",
    "end": "1098280"
  },
  {
    "text": "vulnerable object and remember we have an outof",
    "start": "1098280",
    "end": "1104320"
  },
  {
    "text": "bound right a read primitive it's all be read range is four",
    "start": "1104320",
    "end": "1109919"
  },
  {
    "text": "bys so by using this primitive twice we can leak eight by data which is the full",
    "start": "1109919",
    "end": "1116360"
  },
  {
    "text": "length of a pointer after leing the real value of the pointer at",
    "start": "1116360",
    "end": "1122159"
  },
  {
    "text": "8456 which points to the control manager Plus 8 we can get the start address of",
    "start": "1122159",
    "end": "1127320"
  },
  {
    "text": "this object control manager and by simply minus 8 and then all fused",
    "start": "1127320",
    "end": "1133799"
  },
  {
    "text": "address in the two object are known to us",
    "start": "1133799",
    "end": "1139039"
  },
  {
    "text": "and this page shows the process of the infation L in high level the attacker sends a tmmbr package to trigger and OB",
    "start": "1139280",
    "end": "1147600"
  },
  {
    "text": "read twice and the victim responds with four BS each time in the TMM",
    "start": "1147600",
    "end": "1156039"
  },
  {
    "text": "impa so at this stage we have got we ourself so next step is to find the",
    "start": "1158520",
    "end": "1164480"
  },
  {
    "text": "shared Library address",
    "start": "1164480",
    "end": "1169200"
  },
  {
    "text": "since we want to know the address of the library OB obviously we need to leak the value of a function",
    "start": "1170640",
    "end": "1177039"
  },
  {
    "text": "pointer we only found only uh one function pointer in C transport manager",
    "start": "1177039",
    "end": "1182480"
  },
  {
    "text": "object that's that is the Callback event and its relative offset to C transform",
    "start": "1182480",
    "end": "1189679"
  },
  {
    "text": "object is 21's 36 not in any the three",
    "start": "1189679",
    "end": "1195480"
  },
  {
    "text": "Primitives control regions",
    "start": "1195480",
    "end": "1199919"
  },
  {
    "text": "and luckily we still have the right primitive a it's already purpose is to copy data start from rtcp buffer to AP",
    "start": "1203919",
    "end": "1211640"
  },
  {
    "text": "data buffer in other words like data from the RTV pack package move forward",
    "start": "1211640",
    "end": "1217880"
  },
  {
    "text": "like the memory elevator and we could control the copy lens from zero to hex",
    "start": "1217880",
    "end": "1223679"
  },
  {
    "text": "FF FF and then record the memory layout of control manager and C transort manager",
    "start": "1223679",
    "end": "1231000"
  },
  {
    "text": "seven C transform manager objects are placed specially and continuously within",
    "start": "1231000",
    "end": "1236960"
  },
  {
    "text": "C control manager by using this memory elevator we can move data from the",
    "start": "1236960",
    "end": "1242039"
  },
  {
    "text": "second C transer part manager object into the first",
    "start": "1242039",
    "end": "1247519"
  },
  {
    "text": "one and we can call primitive a as a memory elevator because it can move data",
    "start": "1248080",
    "end": "1253720"
  },
  {
    "text": "more than once not only we can move the data from the second C transport manager to the first",
    "start": "1253720",
    "end": "1259320"
  },
  {
    "text": "first but we can also move the data from the third the fourth and so on into the",
    "start": "1259320",
    "end": "1266679"
  },
  {
    "text": "first then we have the solution to leak function pointer callback event we remove this function pointer from the",
    "start": "1268039",
    "end": "1274400"
  },
  {
    "text": "second third C transport C transport manager into the first one's rtcp packet",
    "start": "1274400",
    "end": "1280360"
  },
  {
    "text": "buffer and use respond TMM BM package uh previously used for leaking",
    "start": "1280360",
    "end": "1287039"
  },
  {
    "text": "object address to Le this function pointer value this time but there's two challenges we must",
    "start": "1287039",
    "end": "1294000"
  },
  {
    "text": "face the first one will the member shift of right primitive a will cause a pro",
    "start": "1294000",
    "end": "1300159"
  },
  {
    "text": "program crash and second one kind of Desire function pointer callback event will be",
    "start": "1300159",
    "end": "1306520"
  },
  {
    "text": "moved exactly to the rtcb packet",
    "start": "1306520",
    "end": "1310880"
  },
  {
    "text": "buffer and let's look at the first Challenge and there's no doubt that uh",
    "start": "1312880",
    "end": "1319080"
  },
  {
    "text": "the direct memory shift will cause a crash so let's check what important pointers are used in the FB data buffer",
    "start": "1319080",
    "end": "1325720"
  },
  {
    "text": "and after our analysis we found five important pointers as shown on the right the list head and tail is the member of",
    "start": "1325720",
    "end": "1333440"
  },
  {
    "text": "double link list R transmission request object list and pointer one is points to",
    "start": "1333440",
    "end": "1339039"
  },
  {
    "text": "the RTP buffer pointer two points to the rtcp buffer and pointer three points to the C",
    "start": "1339039",
    "end": "1346120"
  },
  {
    "text": "transport manager object minus 8 and as show on the left pointers in the right",
    "start": "1346120",
    "end": "1351480"
  },
  {
    "text": "zone is under our control in other words the list head list tail pointer one can",
    "start": "1351480",
    "end": "1357440"
  },
  {
    "text": "be repaired after overwriting evens so let's see how do the three pointers get",
    "start": "1357440",
    "end": "1364240"
  },
  {
    "text": "used this 10 is tail are the head and tail pointers of double link list which",
    "start": "1364240",
    "end": "1369360"
  },
  {
    "text": "responsible for the RTP message request R transmission so we must keep the point",
    "start": "1369360",
    "end": "1375320"
  },
  {
    "text": "to the right place in this case they should both point to the C transport manager plus uh 35 60 as we have already",
    "start": "1375320",
    "end": "1384679"
  },
  {
    "text": "known the address of the C transport manager so fixing these two pointers is not a",
    "start": "1384679",
    "end": "1391919"
  },
  {
    "text": "problem and gr to say croing pointer one and pointer two has no effect because",
    "start": "1393200",
    "end": "1398480"
  },
  {
    "text": "they will be laterally assigned to the cor value as for the pointer three if it set to the zero it won't be used so",
    "start": "1398480",
    "end": "1407240"
  },
  {
    "text": "although we cannot to the overwriting value but they come from the unused C transport manager objects whose most",
    "start": "1407240",
    "end": "1414760"
  },
  {
    "text": "views are zero and in our test this pointer was indeed or Wren with",
    "start": "1414760",
    "end": "1420480"
  },
  {
    "text": "zero so far we have solved the first challenge after using the pr a memory",
    "start": "1420480",
    "end": "1425600"
  },
  {
    "text": "shift the program will not crash this page show how memory elevator",
    "start": "1425600",
    "end": "1433559"
  },
  {
    "text": "works the first move let the Callback event pointer from the second object to move into the first one and and let the",
    "start": "1433559",
    "end": "1440720"
  },
  {
    "text": "pointer from the third object to move into the second one and the second shift moves the cack",
    "start": "1440720",
    "end": "1447919"
  },
  {
    "text": "pointer from the third object forward",
    "start": "1447919",
    "end": "1452799"
  },
  {
    "text": "again uh I list the times and distance of the shifts in the table on the right",
    "start": "1453760",
    "end": "1459440"
  },
  {
    "text": "focus on the number of most column uh the center one the first pointer is aut",
    "start": "1459440",
    "end": "1464600"
  },
  {
    "text": "of control and the second pointer after one shap uh it moves out of the buffer and third",
    "start": "1464600",
    "end": "1472159"
  },
  {
    "text": "pointer after three times of shift moves into the buffer so do the fourth and the",
    "start": "1472159",
    "end": "1477240"
  },
  {
    "text": "fifth one we took a pointer use the uh the fewest temps of the shift as our",
    "start": "1477240",
    "end": "1483240"
  },
  {
    "text": "Target that is the third",
    "start": "1483240",
    "end": "1487278"
  },
  {
    "text": "one and similar to leaking ourself we can use two response packets TMM BN to",
    "start": "1491000",
    "end": "1497640"
  },
  {
    "text": "send the 8 by pointer to us then we can calculate the address of",
    "start": "1497640",
    "end": "1503360"
  },
  {
    "text": "the lip Samsung video engine Library since functions has a fixed relative offsite at this point all function",
    "start": "1503360",
    "end": "1510320"
  },
  {
    "text": "address in this Library are known to",
    "start": "1510320",
    "end": "1514519"
  },
  {
    "text": "us now we have obtained our own address and the address of the current Library",
    "start": "1515679",
    "end": "1521960"
  },
  {
    "text": "our next step is to find the address of the lib C library or the address of any",
    "start": "1521960",
    "end": "1528440"
  },
  {
    "text": "o Library we want to and only knowing the address of Li",
    "start": "1528440",
    "end": "1535360"
  },
  {
    "text": "sensing video engine is not enough to achieve our goal we need more memory",
    "start": "1535360",
    "end": "1540679"
  },
  {
    "text": "info so we must find a method to Leck any address we want it would be great if",
    "start": "1540679",
    "end": "1547080"
  },
  {
    "text": "you could directly call uh the send to like function and control the buffer",
    "start": "1547080",
    "end": "1554240"
  },
  {
    "text": "pointer it's clear to us uh we can control the PC if make uh we can make",
    "start": "1554240",
    "end": "1559520"
  },
  {
    "text": "the PC jump to a remote pack sending function and control its parameters we can achieve the goal of leaking any",
    "start": "1559520",
    "end": "1566760"
  },
  {
    "text": "memory address after some reverse engineering",
    "start": "1566760",
    "end": "1572440"
  },
  {
    "text": "work we found a function called RTP send RTP package in lib RTP Library since it",
    "start": "1572440",
    "end": "1579559"
  },
  {
    "text": "is not Li in lib Samsung video engine we cannot call it directly however this function is called",
    "start": "1579559",
    "end": "1586559"
  },
  {
    "text": "by Li Sansung video engine so we can try to guess its PLT G table and calling",
    "start": "1586559",
    "end": "1592760"
  },
  {
    "text": "location of this function leave some video",
    "start": "1592760",
    "end": "1598159"
  },
  {
    "text": "engine So based on the work we have done we can set the PC register to any value",
    "start": "1600760",
    "end": "1606159"
  },
  {
    "text": "our initial plan was to Simply replace our R test value that beef with the address we want to jump",
    "start": "1606159",
    "end": "1613360"
  },
  {
    "text": "to uh such the PLT table or the call set of RTP s RTP",
    "start": "1616760",
    "end": "1624559"
  },
  {
    "text": "package however we were SP stopped by the arm",
    "start": "1624559",
    "end": "1630840"
  },
  {
    "text": "CFI the CF enabl uh situation where it CS different Samsung phones our research",
    "start": "1633600",
    "end": "1639080"
  },
  {
    "text": "we found that models like the Samsung s22 S3 and Note 10 plus have CFI enabled",
    "start": "1639080",
    "end": "1646679"
  },
  {
    "text": "and it is obvious that EXP exp in versions without CFI is much easier but we will continue to exploit the more",
    "start": "1646679",
    "end": "1652880"
  },
  {
    "text": "difficult CFI enabled versions and we can determine whether CFI is is enabled",
    "start": "1652880",
    "end": "1658840"
  },
  {
    "text": "by checking the instructions like uh the first and end like",
    "start": "1658840",
    "end": "1664279"
  },
  {
    "text": "pisp and autp CFI works by checking whether the",
    "start": "1664279",
    "end": "1669640"
  },
  {
    "text": "target instruction of an indirect jump is a valid instruction",
    "start": "1669640",
    "end": "1676799"
  },
  {
    "text": "and fortunately the location where the indirect call happened involves a three step jump or the reference allowing us",
    "start": "1679159",
    "end": "1686840"
  },
  {
    "text": "to use a carefully arranged memory layout to direct the PC to the location of RTP and RTP package in the goott",
    "start": "1686840",
    "end": "1695159"
  },
  {
    "text": "table in the same time the first argument is also s in our controllable RTP rtcp packet",
    "start": "1695159",
    "end": "1702480"
  },
  {
    "text": "buffer so first jump to our controllable RCP packet buffer and second jump to the",
    "start": "1702480",
    "end": "1708200"
  },
  {
    "text": "the 16 bytes before the function entry in the GT table and thir after adding",
    "start": "1708200",
    "end": "1715000"
  },
  {
    "text": "the 16 to the address and used values at function pointer jump the address happens to be the rbps and RP packet",
    "start": "1715000",
    "end": "1721760"
  },
  {
    "text": "function address and with the legal CFI starting",
    "start": "1721760",
    "end": "1727600"
  },
  {
    "text": "instruction after determining our strategy we need to arrange the artist packet by in detail to fix object",
    "start": "1733360",
    "end": "1739919"
  },
  {
    "text": "required by RTP and RP package so first we need to set up the fuse showing the right rectangle as illustrate in the",
    "start": "1739919",
    "end": "1747919"
  },
  {
    "text": "image on the lower right we can set the buffer the file descriptor and address views however we can we cannot currently",
    "start": "1747919",
    "end": "1755799"
  },
  {
    "text": "control the lens viewed with our primitive as it will receive the value from this plus two since our primitive",
    "start": "1755799",
    "end": "1762240"
  },
  {
    "text": "can repeated the invoked we are not concerned about the lens of a single leak because the buffer is controll we",
    "start": "1762240",
    "end": "1768440"
  },
  {
    "text": "can simply adjust the buff is offsite each time by repeat repeatedly imoving",
    "start": "1768440",
    "end": "1774320"
  },
  {
    "text": "the Primitive we can link all of the",
    "start": "1774320",
    "end": "1778518"
  },
  {
    "text": "memory and unfortunately when we use our current primitive to enter the function",
    "start": "1779399",
    "end": "1785519"
  },
  {
    "text": "the second parameter the lens defaults to be zero this makes it impossible to",
    "start": "1785519",
    "end": "1791279"
  },
  {
    "text": "perform information L because it determines the length of the package we must ensure that the lens uh",
    "start": "1791279",
    "end": "1798559"
  },
  {
    "text": "parameter is not zero when calling this function this means we either need to find a gadget that can control both X",
    "start": "1798559",
    "end": "1805279"
  },
  {
    "text": "zero and X1 register or we need another operation to set a value in advance so",
    "start": "1805279",
    "end": "1812320"
  },
  {
    "text": "that when we enter this function the value of X1 is not",
    "start": "1812320",
    "end": "1817960"
  },
  {
    "text": "zero and in our research we choose the letter",
    "start": "1817960",
    "end": "1823000"
  },
  {
    "text": "option uh also after some RSE engineering we discovered useful gadget on the lower right lower left when using",
    "start": "1824600",
    "end": "1831720"
  },
  {
    "text": "the r perative b X2 is set to one and S a result when we enter the gadget uh",
    "start": "1831720",
    "end": "1839399"
  },
  {
    "text": "with X8 register and R control we can write to an arbitary address with the Y",
    "start": "1839399",
    "end": "1845720"
  },
  {
    "text": "one in our case we set the C Target address to this plus",
    "start": "1845720",
    "end": "1852840"
  },
  {
    "text": "two and here are the detail steps first control the point to point to the P",
    "start": "1854240",
    "end": "1859440"
  },
  {
    "text": "buffer and the second point to a control B buffer and third control the PC to",
    "start": "1859440",
    "end": "1864919"
  },
  {
    "text": "point to the gget and simultaneously set the memory at X",
    "start": "1864919",
    "end": "1870960"
  },
  {
    "text": "62.2 this plus 2 minus 8 so after adding it it points directly to this plus two",
    "start": "1870960",
    "end": "1879120"
  },
  {
    "text": "and with X2 set one this will write one to the memory at this plus two",
    "start": "1879120",
    "end": "1886399"
  },
  {
    "text": "next simply set up the F descriptor buffer and so address to control the victims pack standing so for f",
    "start": "1891120",
    "end": "1899080"
  },
  {
    "text": "descriptor its range is from zero to XX FF and it can be guessed through BL force and it remains constant during the",
    "start": "1899080",
    "end": "1907639"
  },
  {
    "text": "connection set buffer to the address you want to link and set the stock address to the heps and port and as sh in the",
    "start": "1907639",
    "end": "1915559"
  },
  {
    "text": "figure this will let the victims and package contain the lak information to",
    "start": "1915559",
    "end": "1920639"
  },
  {
    "text": "the attacker since we Pro Set the packet",
    "start": "1920639",
    "end": "1926639"
  },
  {
    "text": "lens to one so each L data segment is one B long and by Sting buffer points to",
    "start": "1926639",
    "end": "1933919"
  },
  {
    "text": "map copy in the J table of lip samung video engine five invocations are enough",
    "start": "1933919",
    "end": "1940440"
  },
  {
    "text": "to lick the full address of M Copy and M Copy is a function in lip",
    "start": "1940440",
    "end": "1946639"
  },
  {
    "text": "C this page show five VAR screenshots illustrating the process of our",
    "start": "1946639",
    "end": "1952519"
  },
  {
    "text": "information link once we have the address of M Copy we can easily obtain address of lip c. so and get address of",
    "start": "1952519",
    "end": "1960639"
  },
  {
    "text": "system function and at this step we have",
    "start": "1960639",
    "end": "1966159"
  },
  {
    "text": "obtained all of the information we want to leak and the final step is to control the PC to call the syst function to",
    "start": "1966159",
    "end": "1972320"
  },
  {
    "text": "execute a comment to spawn a reverse shell and for system function we need to",
    "start": "1972320",
    "end": "1978679"
  },
  {
    "text": "control the argument A1 as a comment which must be a string however A1 is",
    "start": "1978679",
    "end": "1985039"
  },
  {
    "text": "this plus uh 1057 in this Parton meaning it must to be be a pointer that points",
    "start": "1985039",
    "end": "1991720"
  },
  {
    "text": "to the rtcp packet buffer therefore we cannot directly use the Parton to call the system function a little adjustment",
    "start": "1991720",
    "end": "1998600"
  },
  {
    "text": "work needs to be made",
    "start": "1998600",
    "end": "2002518"
  },
  {
    "text": "and this picture shows the similar process of manipulating memory layout and place the data according the offsite",
    "start": "2010880",
    "end": "2017639"
  },
  {
    "text": "in the Orin primitive and Gadget and you can check it later after this",
    "start": "2017639",
    "end": "2023840"
  },
  {
    "text": "presentation so the final command as shown above use Curl to download a malicious text file and excuse it with a",
    "start": "2025279",
    "end": "2032639"
  },
  {
    "text": "AP process to spawn a r shell and so far we have achieved all of",
    "start": "2032639",
    "end": "2039039"
  },
  {
    "text": "our goals successfully obtained the shell and solden the",
    "start": "2039039",
    "end": "2044200"
  },
  {
    "text": "photos so congrulations uh you have survived from the complicated exploitation and let's enjoy the demo",
    "start": "2044559",
    "end": "2053598"
  },
  {
    "text": "video so first the victim take a phone take a photos",
    "start": "2060760",
    "end": "2067119"
  },
  {
    "text": "and the other windows are from",
    "start": "2067919",
    "end": "2072040"
  },
  {
    "text": "hackers and hacker start the wi connection and the victim re it and and",
    "start": "2079359",
    "end": "2085919"
  },
  {
    "text": "the left the exploit runs for the information",
    "start": "2085919",
    "end": "2090960"
  },
  {
    "text": "leak and P we got the shell it's right syst",
    "start": "2091359",
    "end": "2098880"
  },
  {
    "text": "him and his",
    "start": "2098880",
    "end": "2102440"
  },
  {
    "text": "ID and this is the photo the victim just take just",
    "start": "2105560",
    "end": "2111760"
  },
  {
    "text": "took oh thanks so let's see the",
    "start": "2111880",
    "end": "2120040"
  },
  {
    "text": "photo and we can further pause a window to show you are hacked by our fanton is",
    "start": "2120520",
    "end": "2127880"
  },
  {
    "text": "the exploit",
    "start": "2127880",
    "end": "2130640"
  },
  {
    "text": "writer so here's our text Bas in this topic first we introduce a remote Tex surface about Carabas or based video",
    "start": "2133839",
    "end": "2141079"
  },
  {
    "text": "calling and secondly we validate the urgency to enhance the security of this attack service and finally we show an 1K",
    "start": "2141079",
    "end": "2149720"
  },
  {
    "text": "RC exploitation of this attack surface and we will write a block about this",
    "start": "2149720",
    "end": "2154920"
  },
  {
    "text": "expectation and post it later on on the Twitter remember to follow fantas",
    "start": "2154920",
    "end": "2162720"
  },
  {
    "text": "young and we would like to express our special thanks to our colleague chin",
    "start": "2164319",
    "end": "2169599"
  },
  {
    "text": "Chango for helping us discover such a potential ATT Tech surface in this security",
    "start": "2169599",
    "end": "2176599"
  },
  {
    "text": "research and our future work will still focus on the researching carrier based video calling and due to time limitation",
    "start": "2177880",
    "end": "2184560"
  },
  {
    "text": "we will not only discuss the vulnerability and exploitation uh this",
    "start": "2184560",
    "end": "2189960"
  },
  {
    "text": "time so in fact different vendors and different uh implcations of video",
    "start": "2189960",
    "end": "2195040"
  },
  {
    "text": "calling architecture such as Calcom Samsung and mediatech we have conducted",
    "start": "2195040",
    "end": "2200640"
  },
  {
    "text": "many security research in this area and have submitted a proposal to blackhead",
    "start": "2200640",
    "end": "2206280"
  },
  {
    "text": "Europe 2024 where we will introduce the program architecture and SEC issues of its main venders in carrier based video",
    "start": "2206280",
    "end": "2214319"
  },
  {
    "text": "calling and we hope to meet you again at this year black hat Europe and I'm",
    "start": "2214319",
    "end": "2219920"
  },
  {
    "text": "honored to share our this here and if you please feel free to reach out to our",
    "start": "2219920",
    "end": "2225240"
  },
  {
    "text": "via the social media and I I'm actively looking for the 20 internship so thank",
    "start": "2225240",
    "end": "2231920"
  },
  {
    "text": "you",
    "start": "2231920",
    "end": "2234920"
  }
]