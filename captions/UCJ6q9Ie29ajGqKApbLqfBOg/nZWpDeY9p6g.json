[
  {
    "text": "hello everyone and welcome to my talk the gcp Jenga tow hacking millions of",
    "start": "2560",
    "end": "7640"
  },
  {
    "text": "Google servers with a single package and more what if I told you that the request",
    "start": "7640",
    "end": "16198"
  },
  {
    "text": "that you see here are from internal Google",
    "start": "16199",
    "end": "21240"
  },
  {
    "text": "servers that was the moment that I realized I run code on all of these servers and I can potentially run code",
    "start": "21240",
    "end": "28880"
  },
  {
    "text": "on millions of servers that was without any interaction at all until I got blocked and guess",
    "start": "28880",
    "end": "36600"
  },
  {
    "text": "what Google was not the one who was responsible for blocking me so please",
    "start": "36600",
    "end": "43120"
  },
  {
    "text": "say hi to the cloud imposer vulnerability that vulnerability",
    "start": "43120",
    "end": "48399"
  },
  {
    "text": "Discovery has led me to realize a concept that is present in the major Cloud providers I named this concept",
    "start": "48399",
    "end": "55719"
  },
  {
    "text": "Jenga Cloud providers build their services on top of each other just like",
    "start": "55719",
    "end": "60840"
  },
  {
    "text": "Jenga it allows for Unique privilege escalation and spoiler alert even",
    "start": "60840",
    "end": "68479"
  },
  {
    "text": "vulnerabilities that Jenga concept realization has also led me to discover a new novel privilege escalation",
    "start": "70280",
    "end": "76759"
  },
  {
    "text": "vulnerability in gcp Cloud functions a servoless execution environment that runs code in response to events so",
    "start": "76759",
    "end": "83880"
  },
  {
    "text": "enough with the teaser I am Le Matan a senior security researcher at tenel I am",
    "start": "83880",
    "end": "89119"
  },
  {
    "text": "Microsoft most valuable researcher and as you can see or might assume I also",
    "start": "89119",
    "end": "94799"
  },
  {
    "text": "hunt across the major Cloud providers and it includes uh some of the past",
    "start": "94799",
    "end": "100399"
  },
  {
    "text": "notable published research uh some of some of the vulnerability names like Emoji deploy flow fixation and today",
    "start": "100399",
    "end": "107119"
  },
  {
    "text": "we're going to talk about confused function and Cloud imposer so supply chain attacks we all",
    "start": "107119",
    "end": "113439"
  },
  {
    "text": "know them they are dangerous but supply chain attacks in the cloud are Bo",
    "start": "113439",
    "end": "119920"
  },
  {
    "text": "boosted kind of like on steroids for example one malicious",
    "start": "119920",
    "end": "125399"
  },
  {
    "text": "package that happens to be deployed in a nonrem server will only affect that on Prem server as opposed to one malicious",
    "start": "125399",
    "end": "132879"
  },
  {
    "text": "package that will happen to be deployed to a cloud service that will be deployed to Millions just imagine the blast Rus",
    "start": "132879",
    "end": "139959"
  },
  {
    "text": "of such a vulnerability we can take it into a more practical example and look at these statistics of the Apache",
    "start": "139959",
    "end": "146200"
  },
  {
    "text": "airflow package in Python the Apache airflow open source systems is a system",
    "start": "146200",
    "end": "152000"
  },
  {
    "text": "that handles data pipelines and workflows so you can see at the left",
    "start": "152000",
    "end": "157959"
  },
  {
    "text": "side of the screen this package as for June 2024 was downloaded almost 22",
    "start": "157959",
    "end": "163879"
  },
  {
    "text": "million times and as for the recent month almost 26 million times so we can",
    "start": "163879",
    "end": "169920"
  },
  {
    "text": "apply these statistics and estimate how many vulnerable users will be in gcp",
    "start": "169920",
    "end": "175879"
  },
  {
    "text": "composer the managed service the managed version of Apache air flow in",
    "start": "175879",
    "end": "182640"
  },
  {
    "text": "gcp so before we get into the vulnerability the cloud imposer uh technical details the vulnerability",
    "start": "182640",
    "end": "188879"
  },
  {
    "text": "itself let's start with the prequel the prequel to this vulnerability was the concept the attack technique that Alex",
    "start": "188879",
    "end": "196519"
  },
  {
    "text": "berson has discovered and named dependency confusion so as you can see",
    "start": "196519",
    "end": "201879"
  },
  {
    "text": "on the screen an innocent user or an application is just uh just tries to",
    "start": "201879",
    "end": "208239"
  },
  {
    "text": "install an innocent package from his own private registry and he does so by using",
    "start": "208239",
    "end": "214519"
  },
  {
    "text": "this pep install command and by using this extra index URL argument what he",
    "start": "214519",
    "end": "219920"
  },
  {
    "text": "doesn't know that this extra index URL argument",
    "start": "219920",
    "end": "225000"
  },
  {
    "text": "also searches for other indexes other python indexes in that case some of them",
    "start": "225000",
    "end": "231920"
  },
  {
    "text": "is the public registry P so in that case an attacker might take the opportunity",
    "start": "231920",
    "end": "238879"
  },
  {
    "text": "in order to apply Lo a malicious package with the same name in that case named legit package but with malicious code",
    "start": "238879",
    "end": "246519"
  },
  {
    "text": "inside this package so pip is now getting confused",
    "start": "246519",
    "end": "251640"
  },
  {
    "text": "because as the extra index URL tell told him search also for the public registry",
    "start": "251640",
    "end": "257600"
  },
  {
    "text": "but it sees two packages with the same name and in that specific case in the dependency confusion attack the legit",
    "start": "257600",
    "end": "264080"
  },
  {
    "text": "package has the version of 0.2 and in the requirements. text you can see in the left bottom of the screen the",
    "start": "264080",
    "end": "270440"
  },
  {
    "text": "required version to be installed should be greater than 0.1 but the attacker in that case has",
    "start": "270440",
    "end": "278000"
  },
  {
    "text": "the opportunity to upload a package with a higher version thus take over the",
    "start": "278000",
    "end": "283120"
  },
  {
    "text": "installation process of the victim so that is dependency confusion uh very",
    "start": "283120",
    "end": "288400"
  },
  {
    "text": "briefly but stay with me and keep in mind that the cloud imposer vulnerability case study is a unique",
    "start": "288400",
    "end": "296240"
  },
  {
    "text": "case study of dependency confusion and something you haven't seen before so we can conclude that package managers",
    "start": "296240",
    "end": "302759"
  },
  {
    "text": "are dangerous Python and the extra index URL argument is just one example of such",
    "start": "302759",
    "end": "308440"
  },
  {
    "text": "a risk of dependency confusion this risk also affects npm and other package",
    "start": "308440",
    "end": "313520"
  },
  {
    "text": "managers so I researched Google Cloud function and I noticed that",
    "start": "313520",
    "end": "319080"
  },
  {
    "text": "documentation that guides users into using private dependencies from the artifact registry service and as you can",
    "start": "319080",
    "end": "325720"
  },
  {
    "text": "see Google themselves guide users into using this risky extra index URL",
    "start": "325720",
    "end": "332960"
  },
  {
    "text": "argument but I didn't stop here I decided to use Google Dorking in order",
    "start": "332960",
    "end": "338280"
  },
  {
    "text": "to find more instances of this false guidance of users uh of Google guides",
    "start": "338280",
    "end": "344600"
  },
  {
    "text": "that guides users into using this risky argument and I found the Google Cloud",
    "start": "344600",
    "end": "349720"
  },
  {
    "text": "app engine also another misconfiguration of a forse documentation that guides",
    "start": "349720",
    "end": "355240"
  },
  {
    "text": "users into using this argument not only that also gcp compos",
    "start": "355240",
    "end": "360400"
  },
  {
    "text": "oser what the hell did just happen these are three services that Google advises",
    "start": "360400",
    "end": "367360"
  },
  {
    "text": "users advised in the past I will correct myself to use this extra index URL",
    "start": "367360",
    "end": "373000"
  },
  {
    "text": "argument and you saw how dangerous this argument is and how risky it is and we",
    "start": "373000",
    "end": "378960"
  },
  {
    "text": "can now know that there are a lot of gcp customers that follow this guidance and are now vulnerable to dependency",
    "start": "378960",
    "end": "386240"
  },
  {
    "text": "confusion so Google as a bu Bounty platform are very good company what did happen I continued the research and I",
    "start": "386240",
    "end": "394000"
  },
  {
    "text": "saw that these are actually misconfigurations followed by other",
    "start": "394000",
    "end": "399520"
  },
  {
    "text": "misconfigurations so following the Google Google's documentation I saw this line that says if you want to learn more",
    "start": "399520",
    "end": "407000"
  },
  {
    "text": "about installing private packages please go and see the python packaging documentation I went ahead and saw this",
    "start": "407000",
    "end": "414639"
  },
  {
    "text": "python packaging user guide and guess what",
    "start": "414639",
    "end": "419879"
  },
  {
    "text": "it tells if you want to host your own simple repository please guide users into using the extra index URL",
    "start": "419879",
    "end": "429000"
  },
  {
    "text": "argument so we can now assume that Google followed this python guide and",
    "start": "429000",
    "end": "434520"
  },
  {
    "text": "these were misconfigurations followed by other misconfigurations so I reported this uh",
    "start": "434520",
    "end": "441759"
  },
  {
    "text": "false guidance by python as well to python which uh shared with me this P",
    "start": "441759",
    "end": "447680"
  },
  {
    "text": "pep 708 uh that tells extending the rep reer API to mitigate dependency",
    "start": "447680",
    "end": "452960"
  },
  {
    "text": "confusion attacks so this was created this thread was created in 20 February 2023 we are in 2024 and this issue is",
    "start": "452960",
    "end": "461960"
  },
  {
    "text": "still a real threat This Thread uh no one took any action in order to resolve it and this",
    "start": "461960",
    "end": "469440"
  },
  {
    "text": "is still open so Cloud imposer it all started here I had a lot of teasers let's get",
    "start": "469440",
    "end": "477000"
  },
  {
    "text": "into it how does it really work so you see this is another Google's",
    "start": "477000",
    "end": "482240"
  },
  {
    "text": "documentation but that time it helped me to discover Cloud imposer so as you can",
    "start": "482240",
    "end": "487280"
  },
  {
    "text": "see this is cloud composer 2 images I as an ordinary user can create a gcp",
    "start": "487280",
    "end": "494599"
  },
  {
    "text": "composer service and when I create it I remind you this is just a managed apach aerl service so when I create it I",
    "start": "494599",
    "end": "502080"
  },
  {
    "text": "create also I deploy uh gcp composer image and that image is simply an Apache",
    "start": "502080",
    "end": "508720"
  },
  {
    "text": "airflow system image that is also bundled with pipy packages and these",
    "start": "508720",
    "end": "514080"
  },
  {
    "text": "pipy packages some of them include Google's internal packages and as",
    "start": "514080",
    "end": "520240"
  },
  {
    "text": "researchers after talking about dependency confusion I was curious to see maybe I can confuse the process of",
    "start": "520240",
    "end": "527920"
  },
  {
    "text": "each gcp composer service in the world that each gcp composer in the word",
    "start": "527920",
    "end": "533760"
  },
  {
    "text": "installs the same pip packages as we just see in the documentation so I had an idea these are pre-installed",
    "start": "533760",
    "end": "540959"
  },
  {
    "text": "dependencies these dependencies are installed in each gcp composer service why not scan those so I went",
    "start": "540959",
    "end": "549240"
  },
  {
    "text": "ahead I used this this uh silly code you see on the screen not really this is just a mockup but I try to search for",
    "start": "549240",
    "end": "556880"
  },
  {
    "text": "missing packages from the public registry specifically packages that are installed on each gcp composer",
    "start": "556880",
    "end": "563560"
  },
  {
    "text": "deployment or update and then I found this I will",
    "start": "563560",
    "end": "570040"
  },
  {
    "text": "highlight this for you this is the package of Google cloud data catalog lineage producer client the package of",
    "start": "570040",
    "end": "576920"
  },
  {
    "text": "Google internal package of Google and this package is trying to be installed on each gcp composer service deployment",
    "start": "576920",
    "end": "584720"
  },
  {
    "text": "we saw it in the Google's documentation so it's not in the public repo where is",
    "start": "584720",
    "end": "590399"
  },
  {
    "text": "this package so the next step for me is to dive into the gcp composer file",
    "start": "590399",
    "end": "596000"
  },
  {
    "text": "system I run code on my own gcp composer and I grabbed the file system to find",
    "start": "596000",
    "end": "602399"
  },
  {
    "text": "some metadata or something that will reveal information for me as a researcher of this uh package this",
    "start": "602399",
    "end": "608920"
  },
  {
    "text": "internal Google package and I found this method at a this file that simply reveals to me that the package",
    "start": "608920",
    "end": "616320"
  },
  {
    "text": "installation process behind the scenes works as such pip install D- extra index",
    "start": "616320",
    "end": "622839"
  },
  {
    "text": "URL Google's own private repo and this Google cloud data catalog lineage",
    "start": "622839",
    "end": "628480"
  },
  {
    "text": "producer client package so we have all of the ingredients the package of Google",
    "start": "628480",
    "end": "636000"
  },
  {
    "text": "themselves is missing from the public registry and also the installation",
    "start": "636000",
    "end": "641160"
  },
  {
    "text": "process is using this extra index URL argument we just saw is very very",
    "start": "641160",
    "end": "648120"
  },
  {
    "text": "risky but not so easy and not so fast the research continues and I went back",
    "start": "648120",
    "end": "654639"
  },
  {
    "text": "into Google's documentation to then see this line that specifies that this",
    "start": "654639",
    "end": "660880"
  },
  {
    "text": "package is actually version pinned so let's confuse it even",
    "start": "660880",
    "end": "667079"
  },
  {
    "text": "more so in that case as you can see this is the same process but now in Google",
    "start": "667079",
    "end": "673360"
  },
  {
    "text": "Cloud's own service in gcp composer gcp is confused because the pep install is",
    "start": "673360",
    "end": "679839"
  },
  {
    "text": "using the extra index URL argument and now it has to choose between two packages with the same name and the same",
    "start": "679839",
    "end": "686480"
  },
  {
    "text": "version this is much more confusing gcp has to choose between the package",
    "start": "686480",
    "end": "692839"
  },
  {
    "text": "of the attacker from the PIP public repo or Google Cloud's own package the",
    "start": "692839",
    "end": "699519"
  },
  {
    "text": "private package so if the package that will be chosen wasn't the malicious",
    "start": "699519",
    "end": "704800"
  },
  {
    "text": "package of the attacker I will simply not stand here on this blacket stage so",
    "start": "704800",
    "end": "710279"
  },
  {
    "text": "yep in that case also when the version is pinned and also when two versions are",
    "start": "710279",
    "end": "716079"
  },
  {
    "text": "the exact same versions and the names are the exact same pip will prioritize the public",
    "start": "716079",
    "end": "722519"
  },
  {
    "text": "repo then a user named Felix said what's going on this was in 2018 how is it",
    "start": "722519",
    "end": "730360"
  },
  {
    "text": "possible that Pip with the extra index URL argument always prioritizes the public",
    "start": "730360",
    "end": "736560"
  },
  {
    "text": "pipy the answer was this is not likely to change the answer was from one of the",
    "start": "736560",
    "end": "742079"
  },
  {
    "text": "contributors of the Python software foundation and yeah this was in 2018 we",
    "start": "742079",
    "end": "747360"
  },
  {
    "text": "are in 2024 dependence confusion is still a",
    "start": "747360",
    "end": "753000"
  },
  {
    "text": "threat the next step for me is to emulate I emulated the process again I ran code on my own gcp composer service",
    "start": "753240",
    "end": "760440"
  },
  {
    "text": "and I ran this pep install with the extra index URL argument this risky argument and the private registry of",
    "start": "760440",
    "end": "766880"
  },
  {
    "text": "Google then I saw that pip pip is looking for two indexes the public one",
    "start": "766880",
    "end": "772760"
  },
  {
    "text": "and the private one and it chose the public one the next step was to craft the PC again this is just mockup code um",
    "start": "772760",
    "end": "781519"
  },
  {
    "text": "the intention of the code is to try and validate that the code has actually been",
    "start": "781519",
    "end": "787040"
  },
  {
    "text": "uh being run in the Google's environment in Google's internal servers or the",
    "start": "787040",
    "end": "792120"
  },
  {
    "text": "customer environments and it says curl please give hits the next step was to actually",
    "start": "792120",
    "end": "799000"
  },
  {
    "text": "upload the package of Google with the name of the package of Google's internal package and the same version and the",
    "start": "799000",
    "end": "806160"
  },
  {
    "text": "next step was to see all of these hits and just jump in the chair because I was so excited to see",
    "start": "806160",
    "end": "813680"
  },
  {
    "text": "those but then this happened sorry something went wrong so to comply with",
    "start": "814800",
    "end": "820279"
  },
  {
    "text": "the back Bounty rules as a researcher um I went into pip in order",
    "start": "820279",
    "end": "825720"
  },
  {
    "text": "to remove the package delete it from pipy and also delete my user that was in",
    "start": "825720",
    "end": "831639"
  },
  {
    "text": "a matter of seconds and it said to me after visiting pipe pipe is down for",
    "start": "831639",
    "end": "837160"
  },
  {
    "text": "maintenance or is having an outage and I'm going to tell you a secret between us P pip was not down for maintenance",
    "start": "837160",
    "end": "845360"
  },
  {
    "text": "pipe actually blocked me my user and also the package that I just uploaded in",
    "start": "845360",
    "end": "850560"
  },
  {
    "text": "a matter of seconds my speculation were that there is a defense mechanism I'm not aware of",
    "start": "850560",
    "end": "856839"
  },
  {
    "text": "or there is a pipy partnership with",
    "start": "856839",
    "end": "861000"
  },
  {
    "text": "Google thank you so I reported the vulnerability",
    "start": "864920",
    "end": "870279"
  },
  {
    "text": "Cloud imposer to Google which classified it as remote code execution and awarded",
    "start": "870279",
    "end": "875759"
  },
  {
    "text": "a bounty for it Google fixed the vulnerable script that was utilizing this extra index URL argument we have",
    "start": "875759",
    "end": "881920"
  },
  {
    "text": "talked about that we now know is very risky and Google also checked the check sum of the vulnerable package instances",
    "start": "881920",
    "end": "888320"
  },
  {
    "text": "in order to find any evidence of the vulnerability exploitation in the past",
    "start": "888320",
    "end": "894000"
  },
  {
    "text": "Google said that there is no evidence for the vulnerability exploitation in the past uh after they uh checked the",
    "start": "894000",
    "end": "901399"
  },
  {
    "text": "scenario also for transparency Google said that the package that I uploaded",
    "start": "901399",
    "end": "908800"
  },
  {
    "text": "for the PC hit Google's internal servers but as for Google's customer",
    "start": "908800",
    "end": "913959"
  },
  {
    "text": "environments they believe the package won't pass the integration tests Google also decided to fix the",
    "start": "913959",
    "end": "920839"
  },
  {
    "text": "documentation issues and now guides users users into using the index URL argument and as opposed to the extra",
    "start": "920839",
    "end": "927040"
  },
  {
    "text": "index URL argument this argument ment tells pip to only search for the",
    "start": "927040",
    "end": "932160"
  },
  {
    "text": "specified registry that was given as a value to this argument so the confusion",
    "start": "932160",
    "end": "937680"
  },
  {
    "text": "cannot happen with this argument also Google is now advising users into using",
    "start": "937680",
    "end": "943040"
  },
  {
    "text": "the artifact registry virtual repo to safely control the order that peep searches for repositories that was as a",
    "start": "943040",
    "end": "949720"
  },
  {
    "text": "result of the report I reported to Google and I told them use your own feature that feature can help you in",
    "start": "949720",
    "end": "955839"
  },
  {
    "text": "order to prevent and mitigate dependency confusion attacks",
    "start": "955839",
    "end": "960920"
  },
  {
    "text": "Okay so we've talked about the cloud imposer vulnerability we now know the risks of codependency confusion and much",
    "start": "960959",
    "end": "967240"
  },
  {
    "text": "more but let's go beyond remote code execution we had a remote code execution",
    "start": "967240",
    "end": "972519"
  },
  {
    "text": "we had a POC but what can we actually do with it so back to the Jenga concept we",
    "start": "972519",
    "end": "978800"
  },
  {
    "text": "have talked about Cloud providers build their services on top of each other and in that case gcp composer is built on",
    "start": "978800",
    "end": "986279"
  },
  {
    "text": "Google kubernetes engine another Google's service so the Jenga concept",
    "start": "986279",
    "end": "991839"
  },
  {
    "text": "comes into play and I can abuse the Google kubernetes engine service architecture in order to escalate",
    "start": "991839",
    "end": "998240"
  },
  {
    "text": "Privileges and do some more fun stuff if you want to learn more about it make sure to visit our tenable blog because a",
    "start": "998240",
    "end": "1005199"
  },
  {
    "text": "Blog about the vulnerability and this as well is uh will soon be",
    "start": "1005199",
    "end": "1011000"
  },
  {
    "text": "published so we've talked about Cloud imposer the Jenga and now with the Jenga Concept in mind let's find some more",
    "start": "1011000",
    "end": "1018319"
  },
  {
    "text": "vulnerability this specifically in gcp and I remind you the Jenga concept not",
    "start": "1018319",
    "end": "1023399"
  },
  {
    "text": "only affects gcp this is just one example but it affects the major Cloud",
    "start": "1023399",
    "end": "1029038"
  },
  {
    "text": "providers have you ever pondered with the question of what is going on when you create a cloud function in",
    "start": "1029039",
    "end": "1035959"
  },
  {
    "text": "gcp well I had a lot of stuer going on behind the scenes so I created a cloud",
    "start": "1035959",
    "end": "1042880"
  },
  {
    "text": "function an innocent one as an ordinary user and I thought this Cloud build OD trigger in the in logs Explorer in",
    "start": "1042880",
    "end": "1051360"
  },
  {
    "text": "gcp turns out that this Cloud build trigger was initiated and created by the cloud function I just created and not",
    "start": "1051360",
    "end": "1058120"
  },
  {
    "text": "only that also a bucket was created an artifact registry or a container",
    "start": "1058120",
    "end": "1063679"
  },
  {
    "text": "registry and possibly event Arc triggers and Cloud run these were all the",
    "start": "1063679",
    "end": "1069760"
  },
  {
    "text": "services that were created behind the scenes by Google kind of without my",
    "start": "1069760",
    "end": "1074840"
  },
  {
    "text": "users's knowledge and this is absolutely crazy because I can edit those Services I can",
    "start": "1074840",
    "end": "1082280"
  },
  {
    "text": "see those but not really because this was this process was happening behind the scenes if I wasn't researching Cloud",
    "start": "1082280",
    "end": "1089919"
  },
  {
    "text": "functions or not looking at the logs deeply I wouldn't be able to see those services that were SP in order to help",
    "start": "1089919",
    "end": "1097200"
  },
  {
    "text": "the function deploy it creates risks for example an attacker with access to a cloud service",
    "start": "1097200",
    "end": "1105200"
  },
  {
    "text": "and that cloud service by default has access to the artifact registry or a container registry and these Services",
    "start": "1105200",
    "end": "1112480"
  },
  {
    "text": "guess what holds the the images of the functions in the same account so this",
    "start": "1112480",
    "end": "1118559"
  },
  {
    "text": "Concepts allowed uh for new privilege escalation Puffs some that you see right now and soon a new vulnerability will be",
    "start": "1118559",
    "end": "1126799"
  },
  {
    "text": "revealed so just a brief on the function deployment flow so we will be on the same page this is the cloud function",
    "start": "1126799",
    "end": "1133559"
  },
  {
    "text": "deployment flow it creates resources as we saw some of them bucket to store the function code an artifact registry to",
    "start": "1133559",
    "end": "1140919"
  },
  {
    "text": "store the functions image a cloud build to build the function and a cloud one",
    "start": "1140919",
    "end": "1146360"
  },
  {
    "text": "service to run the function it all Mak sense these services are there to deploy the",
    "start": "1146360",
    "end": "1151799"
  },
  {
    "text": "function Google also decided to to attach the cloud build default service account to the cloud build service and",
    "start": "1151799",
    "end": "1158799"
  },
  {
    "text": "this default service account is very very risky and what caused the",
    "start": "1158799",
    "end": "1164440"
  },
  {
    "text": "vulnerability to those of you who are not familiar a service account in gcp is an an identity that you attach to an",
    "start": "1164440",
    "end": "1170240"
  },
  {
    "text": "application or a service in order to allow this service to communicate with other services makes sense and in that",
    "start": "1170240",
    "end": "1176720"
  },
  {
    "text": "case Google attached this service account in order to allow the cloud build to push the image to the artifact",
    "start": "1176720",
    "end": "1183600"
  },
  {
    "text": "registry it has to have this permission please say hi to a new",
    "start": "1183600",
    "end": "1189600"
  },
  {
    "text": "privilege escalation vulnerability I du confused function it allows an identity",
    "start": "1189600",
    "end": "1195000"
  },
  {
    "text": "with a permission to update or create a function to escalate permission to this default Cloud build service account we",
    "start": "1195000",
    "end": "1201360"
  },
  {
    "text": "just inspected these are all of the permissions of the default Cloud build",
    "start": "1201360",
    "end": "1207440"
  },
  {
    "text": "service account and I'm sure you are not going to see all of those from far away but trust me these are a lot of",
    "start": "1207440",
    "end": "1214600"
  },
  {
    "text": "permissions some of them include permissions to storage logging artifact registry buckets and",
    "start": "1214600",
    "end": "1222360"
  },
  {
    "text": "more how does it really work let's go into the technical details of the",
    "start": "1222360",
    "end": "1227640"
  },
  {
    "text": "vulnerability the fun stuff first an attacker with a permission to update a cloud function in",
    "start": "1227640",
    "end": "1235200"
  },
  {
    "text": "this example a specific example I'm going to show you an example of an OJs Cloud function but uh obviously this",
    "start": "1235200",
    "end": "1241760"
  },
  {
    "text": "vulnerability affects all of the programming languages this is just a concept so in that case an attacker will",
    "start": "1241760",
    "end": "1247000"
  },
  {
    "text": "update the package.json file of the function and that package.json file",
    "start": "1247000",
    "end": "1253440"
  },
  {
    "text": "specifies the dependencies that will be installed soon so the functions",
    "start": "1253440",
    "end": "1259679"
  },
  {
    "text": "functions code will be stored in a bucket this bucket will then uh this bucket object will then be pulled by the",
    "start": "1259679",
    "end": "1266559"
  },
  {
    "text": "cloud build instance and some of this is the functions code and some of the function code is the package. Json file",
    "start": "1266559",
    "end": "1274159"
  },
  {
    "text": "that specifies the dependencies that should be installed well in that package.json file",
    "start": "1274159",
    "end": "1280960"
  },
  {
    "text": "there is a malicious dependency that the attacker is just inserted and then with",
    "start": "1280960",
    "end": "1286200"
  },
  {
    "text": "just the permission to update a function the attacker could insert a malicious dependency that would will be installed",
    "start": "1286200",
    "end": "1293039"
  },
  {
    "text": "in the cloud build instance and as we know Google by default has attached This",
    "start": "1293039",
    "end": "1300000"
  },
  {
    "text": "Cloud build default service account to This Cloud build that helps the deployment of the function th I can run",
    "start": "1300000",
    "end": "1305960"
  },
  {
    "text": "code and exfiltrate this identity in order to escalate my permissions this was just with a simple",
    "start": "1305960",
    "end": "1313679"
  },
  {
    "text": "malicious dependency that I insert into the file that is specifying dependencies that will installed in the cloud build",
    "start": "1313679",
    "end": "1322320"
  },
  {
    "text": "instance to those of you who still didn't really follow this is a graph we",
    "start": "1322320",
    "end": "1327640"
  },
  {
    "text": "made for you uh an identity with a permission to update a function update the function then Cloud B instance will",
    "start": "1327640",
    "end": "1334600"
  },
  {
    "text": "get the malicious dependency that was just specified in the cloud functions file from the pipe registry this is an",
    "start": "1334600",
    "end": "1341360"
  },
  {
    "text": "example of a python exploitation then the cloud build instance code that was just ran the malicious code will provide",
    "start": "1341360",
    "end": "1348520"
  },
  {
    "text": "provide the cloud build service account credentials to the malicious attacker",
    "start": "1348520",
    "end": "1354279"
  },
  {
    "text": "server as for the fix Google Now allows the use of custom service accounts in",
    "start": "1354279",
    "end": "1360400"
  },
  {
    "text": "Cloud function these custom service accounts are the custom service accounts of the cloud build that is created as a",
    "start": "1360400",
    "end": "1366600"
  },
  {
    "text": "result of the functions deployment so now when you create a new Cloud function in Google Cloud you are able to choose",
    "start": "1366600",
    "end": "1374240"
  },
  {
    "text": "two service accounts one is the service account of the functions itself and second is the service account of the",
    "start": "1374240",
    "end": "1381000"
  },
  {
    "text": "cloud build that is created as a part of the functions deployment process before the fix the user didn't have any",
    "start": "1381000",
    "end": "1388240"
  },
  {
    "text": "visibility to the cloud build service account that was created behind the scenes also Google has decided to now",
    "start": "1388240",
    "end": "1395720"
  },
  {
    "text": "use the compute engine service account as a new default for new Cloud builds we",
    "start": "1395720",
    "end": "1401279"
  },
  {
    "text": "can now know that old Cloud builds as a result of the fix or not as a result of",
    "start": "1401279",
    "end": "1406520"
  },
  {
    "text": "the fix but old Cloud builds are still vulnerable some thoughts on the fix is",
    "start": "1406520",
    "end": "1412919"
  },
  {
    "text": "that there are still minimum permissions for the custom Cloud build service account to even work so even if now",
    "start": "1412919",
    "end": "1418919"
  },
  {
    "text": "users have the ability to choose a custom Cloud build service account they still need to provide these permissions",
    "start": "1418919",
    "end": "1425679"
  },
  {
    "text": "and these permissions are still rather powerful so we can say that the",
    "start": "1425679",
    "end": "1431000"
  },
  {
    "text": "vulnerability the confused function vulnerability still exists in in a kind of manner so this is still risky for",
    "start": "1431000",
    "end": "1438240"
  },
  {
    "text": "examp for example the artifact registry. writer permission has to be uh given to This Cloud build service account to the",
    "start": "1438240",
    "end": "1444799"
  },
  {
    "text": "custom Cloud build service account and this permission is rather powerful but it makes sense because this architecture",
    "start": "1444799",
    "end": "1451400"
  },
  {
    "text": "of the function should have this uh permission because the cloud build service account should have the",
    "start": "1451400",
    "end": "1457080"
  },
  {
    "text": "permission to push the function functions image into the cloud build service into the artifact registry service it makes sense also the compute",
    "start": "1457080",
    "end": "1465080"
  },
  {
    "text": "engine default service account is notorious for being overprivileged we all know that so these are the",
    "start": "1465080",
    "end": "1471120"
  },
  {
    "text": "thoughts on the fix I'm going to reveal a new tool we named the jizer that was developed by my",
    "start": "1471120",
    "end": "1479520"
  },
  {
    "text": "fellow researcher Noam danan and this tool allows you to find and discover",
    "start": "1479520",
    "end": "1485559"
  },
  {
    "text": "hidden services that AWS deploys behind the scenes when you create a new service",
    "start": "1485559",
    "end": "1491760"
  },
  {
    "text": "in AWS this is just one example of the tool in AWS but we plan to expand this",
    "start": "1491760",
    "end": "1498080"
  },
  {
    "text": "tool to gcp and Azure so what does this tool actually do",
    "start": "1498080",
    "end": "1503840"
  },
  {
    "text": "is that you create a service for example a cloud function then you run the tool",
    "start": "1503840",
    "end": "1508960"
  },
  {
    "text": "and when you run the tool it allows you to discover these hidden services that were created as a result of this process",
    "start": "1508960",
    "end": "1516120"
  },
  {
    "text": "so in AWS when you create a Lambda you can run the tool and see the hidden services that AWS creates behind the",
    "start": "1516120",
    "end": "1522039"
  },
  {
    "text": "scenes as a result of creating this Lambda function isn't it crazy because",
    "start": "1522039",
    "end": "1528320"
  },
  {
    "text": "as researchers you can now maybe discover even new vulnerabilities as a result of this hidden Services creation",
    "start": "1528320",
    "end": "1535480"
  },
  {
    "text": "process or as Defenders you now have the visibility to see these hidden services",
    "start": "1535480",
    "end": "1540720"
  },
  {
    "text": "and defend from new privilege escalations or vulnerabilities so you can go ahead and",
    "start": "1540720",
    "end": "1547159"
  },
  {
    "text": "scan the QR code if you interested in",
    "start": "1547159",
    "end": "1551000"
  },
  {
    "text": "this this is how the tool looks uh when you run it you supply a username the",
    "start": "1552240",
    "end": "1559000"
  },
  {
    "text": "profile name the region name and you can also Supply a Time start and time hand Time end in order to uh allow the tool",
    "start": "1559000",
    "end": "1567000"
  },
  {
    "text": "to only look for the action that you want to look at and for example as you can see on the screen this is a cloud",
    "start": "1567000",
    "end": "1573720"
  },
  {
    "text": "formation stack just for the sake of the example not in any attacker perspective",
    "start": "1573720",
    "end": "1578880"
  },
  {
    "text": "or something but as you saw this stack creates an easy to uh run instances so",
    "start": "1578880",
    "end": "1585440"
  },
  {
    "text": "this is how the tool works you can also choose the depth level of the tool to",
    "start": "1585440",
    "end": "1590720"
  },
  {
    "text": "make it even more recursive so for example if these Services the ec2",
    "start": "1590720",
    "end": "1595960"
  },
  {
    "text": "service creates more services after the creation of the ec2 you will see it with",
    "start": "1595960",
    "end": "1601720"
  },
  {
    "text": "depth level two and if this services that were just created by the ec2",
    "start": "1601720",
    "end": "1606760"
  },
  {
    "text": "creates even more services you will see it with depth level three as for gcp for now you can use",
    "start": "1606760",
    "end": "1614360"
  },
  {
    "text": "this gcp log Explorer example uh this is the query I used in order to find the",
    "start": "1614360",
    "end": "1619520"
  },
  {
    "text": "hidden services that were created after a creation of a cloud function so I saw",
    "start": "1619520",
    "end": "1625559"
  },
  {
    "text": "that a cloud build and a GCS bucket were created as a result of the cloud function creation so this query is very",
    "start": "1625559",
    "end": "1632640"
  },
  {
    "text": "very handful to wrap up one click in the",
    "start": "1632640",
    "end": "1638120"
  },
  {
    "text": "console or in anything in the API that you want to create a service in a cloud",
    "start": "1638120",
    "end": "1643360"
  },
  {
    "text": "provider results in the cloud provider that configures a vulnerable deployment to the user this is rather risky and in",
    "start": "1643360",
    "end": "1651360"
  },
  {
    "text": "order to combat this scenario we can use the jizer tool or simply look in the",
    "start": "1651360",
    "end": "1656399"
  },
  {
    "text": "logs in order to find these hidden Services Cloud providers also sometimes",
    "start": "1656399",
    "end": "1661519"
  },
  {
    "text": "get it wrong we saw it in the cloud imposer vulnerability and in a confused function vulnerability Cloud providers",
    "start": "1661519",
    "end": "1667960"
  },
  {
    "text": "are not bulletproof and we keep seeing this so please take care supply chain",
    "start": "1667960",
    "end": "1673000"
  },
  {
    "text": "attacks in the cloud are boosted we saw it they are on steroids like millions of",
    "start": "1673000",
    "end": "1679120"
  },
  {
    "text": "users were potentially could be affected of the cloud impos vulnerability and this is just one example of supply chain",
    "start": "1679120",
    "end": "1685320"
  },
  {
    "text": "attack in the cloud imagine what could happen in future supply chain attacks so supply chain attacks in the cloud are",
    "start": "1685320",
    "end": "1691519"
  },
  {
    "text": "rather wild dependency confusion Please be aware because this concept this",
    "start": "1691519",
    "end": "1696799"
  },
  {
    "text": "attack technique was there for years and we also saw this G up thread from 2018",
    "start": "1696799",
    "end": "1703120"
  },
  {
    "text": "it is 2024 and we should we should we should be more aware of this risk of the dependency confusion",
    "start": "1703120",
    "end": "1710399"
  },
  {
    "text": "risk so three takeaways I have for you for today first how Pro how to protect",
    "start": "1710399",
    "end": "1716240"
  },
  {
    "text": "yourself from dependency confusion risk you should check for the package installation process in your",
    "start": "1716240",
    "end": "1721880"
  },
  {
    "text": "environments specifically in Python you can use the index URL argument instead of the extra index URL argument as we",
    "start": "1721880",
    "end": "1729039"
  },
  {
    "text": "saw this is a safe argument as opposed to the extra index URL argument that",
    "start": "1729039",
    "end": "1734320"
  },
  {
    "text": "also looks for the public registry and opens the door for attackers for the dependency",
    "start": "1734320",
    "end": "1740120"
  },
  {
    "text": "confusion the second takeaway for you is how to protect yourself from confused function the confused function",
    "start": "1740120",
    "end": "1746279"
  },
  {
    "text": "vulnerability we saw that still kind of livs you should go ahead and replace",
    "start": "1746279",
    "end": "1753200"
  },
  {
    "text": "every cloud function service account specifically the cloud build service account with a least privilege service",
    "start": "1753200",
    "end": "1759320"
  },
  {
    "text": "account we follow the least privilege model and we um we give the permissions",
    "start": "1759320",
    "end": "1765559"
  },
  {
    "text": "that we saw the minimum permissions that are required for this custom Cloud build service account as opposed to using the",
    "start": "1765559",
    "end": "1771440"
  },
  {
    "text": "default Cloud build service account that has rather highly permissive permissions the third takeaway is that",
    "start": "1771440",
    "end": "1778559"
  },
  {
    "text": "there is a gap in the shared responsibility model know your services because we saw",
    "start": "1778559",
    "end": "1785440"
  },
  {
    "text": "that there are a lot of hidden Services we are not aware of cloud providers are",
    "start": "1785440",
    "end": "1791360"
  },
  {
    "text": "kind of a black box the cloud is a black box there are a lot of hidden services and we should be aware of them but these",
    "start": "1791360",
    "end": "1797720"
  },
  {
    "text": "Serv services are in your environment you can edit those you can see those you can delete those but some of these",
    "start": "1797720",
    "end": "1804519"
  },
  {
    "text": "Services I can are kind of hidden so I hope you now have the right tools to",
    "start": "1804519",
    "end": "1810559"
  },
  {
    "text": "search and combat this huge thing called Cloud that is essentially a black box",
    "start": "1810559",
    "end": "1818200"
  },
  {
    "text": "thank",
    "start": "1818200",
    "end": "1820398"
  },
  {
    "text": "you any question",
    "start": "1826519",
    "end": "1829960"
  },
  {
    "text": "questions y sure is there any consideration you have to think of between version one and version two of",
    "start": "1834320",
    "end": "1840320"
  },
  {
    "text": "the cloud functions or does the same vulnerabilities apply so the confused function actually affects also the first",
    "start": "1840320",
    "end": "1847279"
  },
  {
    "text": "gen of uh Cloud functions uh so there's not really consideration but in the",
    "start": "1847279",
    "end": "1852760"
  },
  {
    "text": "second generation of cloud function it also possibly creates event AR triggers",
    "start": "1852760",
    "end": "1858039"
  },
  {
    "text": "as you saw so there might be more resources uh combining into this step of",
    "start": "1858039",
    "end": "1863200"
  },
  {
    "text": "the functions deployment process uh but it isn't related to the confused function of vulnerability okay thank you",
    "start": "1863200",
    "end": "1869679"
  },
  {
    "text": "no problem",
    "start": "1869679",
    "end": "1876320"
  },
  {
    "text": "yep uh so the package which you published was it just doing request. get",
    "start": "1876320",
    "end": "1881519"
  },
  {
    "text": "because I just wondering like why did it get blocked can you say again please so the",
    "start": "1881519",
    "end": "1886639"
  },
  {
    "text": "package which you published uh was it just doing requests.get uh to your server uh I'm just wondering like why",
    "start": "1886639",
    "end": "1892880"
  },
  {
    "text": "did it get locked yeah so the package that I uploaded sent HTTP requests to my server",
    "start": "1892880",
    "end": "1900679"
  },
  {
    "text": "and it got blocked in a matter of seconds it was like literally 20 seconds after I logged in into pipe in order to",
    "start": "1900679",
    "end": "1907760"
  },
  {
    "text": "block my own package and it already got blocked okay so they must have some internal testing I gu uh this is just",
    "start": "1907760",
    "end": "1915320"
  },
  {
    "text": "spec speculations yeah these are just",
    "start": "1915320",
    "end": "1919840"
  },
  {
    "text": "cations you um you mentioned that um one of the fixes that Google did was to",
    "start": "1921799",
    "end": "1927360"
  },
  {
    "text": "replace the default cloud buil service account with the compute engine service account but how does that actually",
    "start": "1927360",
    "end": "1933639"
  },
  {
    "text": "improve the situation because as you said the compute engine service count also has a ton of permissions y so this",
    "start": "1933639",
    "end": "1941039"
  },
  {
    "text": "is actually a question for Google this is very controversial uh in my opinion the compu",
    "start": "1941039",
    "end": "1948639"
  },
  {
    "text": "engine service account as a default is already used used in gcp services so I",
    "start": "1948639",
    "end": "1954960"
  },
  {
    "text": "think this is a nice fallback for them to now use it because people are kind of",
    "start": "1954960",
    "end": "1960159"
  },
  {
    "text": "aware of this compute engine service account they might have organization policies that helps to combat this",
    "start": "1960159",
    "end": "1965399"
  },
  {
    "text": "default um this is just my take on on that",
    "start": "1965399",
    "end": "1970080"
  },
  {
    "text": "fix okay thank you everyone thank you for welcoming me into the blacket stage and if you have any more questions I'll",
    "start": "1973519",
    "end": "1979440"
  },
  {
    "text": "will be in the WRA room",
    "start": "1979440",
    "end": "1983518"
  }
]