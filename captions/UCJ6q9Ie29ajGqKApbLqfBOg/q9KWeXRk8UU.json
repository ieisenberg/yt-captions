[
  {
    "start": "0",
    "end": "139000"
  },
  {
    "text": "we are very glad to be here at blackhat to present my own so I am far with this",
    "start": "60",
    "end": "6359"
  },
  {
    "text": "flow and he is a cabbie mujin we walk up the CI in front she's casaya our energy",
    "start": "6359",
    "end": "13500"
  },
  {
    "text": "atomic it was energy alternative you know it's nuclear stuff and we'll",
    "start": "13500",
    "end": "18750"
  },
  {
    "text": "present you a museum which has he said remark of reverse engineering the",
    "start": "18750",
    "end": "24689"
  },
  {
    "text": "project is born in around 2006 and 2007 and it has been made the publicly",
    "start": "24689",
    "end": "30449"
  },
  {
    "text": "available in 2011 it's written in pitten and it has its particular is that it has",
    "start": "30449",
    "end": "36510"
  },
  {
    "text": "it own intermediate representation you have some website here in which you can",
    "start": "36510",
    "end": "42300"
  },
  {
    "text": "find more information about it so why are we are here we are here to to show",
    "start": "42300",
    "end": "49350"
  },
  {
    "text": "you nezam from OC's it is used daily in a malware analysis and packing and",
    "start": "49350",
    "end": "54440"
  },
  {
    "text": "static analysis and so on we have some rules in order to to do to try to do",
    "start": "54440",
    "end": "61440"
  },
  {
    "text": "clean code in the Amazon here if you are",
    "start": "61440",
    "end": "66900"
  },
  {
    "text": "a novice in ISM you can use for example some resources for example in the code",
    "start": "66900",
    "end": "72900"
  },
  {
    "text": "you have dog swings there is no real full documentation in Jaime azzam sadly that you have a lot of examples in which",
    "start": "72900",
    "end": "80299"
  },
  {
    "text": "you have some illustration of each video of mesm which is very interesting to",
    "start": "80299",
    "end": "85920"
  },
  {
    "text": "read and there is a blog post I wasn't as well we want today show a list of features of mass because it's a bit",
    "start": "85920",
    "end": "92700"
  },
  {
    "text": "boring so we will try to enlight only some very interesting features and we will illustrate them with real code",
    "start": "92700",
    "end": "99600"
  },
  {
    "text": "examples today so first the basic stuff",
    "start": "99600",
    "end": "105180"
  },
  {
    "text": "in yes you have is music as his own estimate is a similar engine and here's",
    "start": "105180",
    "end": "110610"
  },
  {
    "text": "he can manipulate x86 arm meats extra architects use it can support al for",
    "start": "110610",
    "end": "118560"
  },
  {
    "text": "portable executable or roll and nutiva as bipod we have we can had some custom",
    "start": "118560",
    "end": "127110"
  },
  {
    "text": "architectures maybe we are a mad guy here who did that and he will present it I think this",
    "start": "127110",
    "end": "133430"
  },
  {
    "text": "afternoon okay so to start with if you",
    "start": "133430",
    "end": "140930"
  },
  {
    "start": "139000",
    "end": "139000"
  },
  {
    "text": "want to everything start for the bite so we have to disassemble the bite to do this we can do this simple code so we",
    "start": "140930",
    "end": "147769"
  },
  {
    "text": "have a come to know we have to insert this engine and we have to decimal a",
    "start": "147769",
    "end": "152780"
  },
  {
    "text": "function which give an assembly control flow graph and we can dump it if you use if you read this code you have written",
    "start": "152780",
    "end": "159109"
  },
  {
    "text": "in fact multi architectures code you know which can involve a function so but",
    "start": "159109",
    "end": "167150"
  },
  {
    "text": "the real interesting you you have this code in in in some resources here but",
    "start": "167150",
    "end": "172849"
  },
  {
    "text": "the real interesting since inea's is its internal and intermediate presentation",
    "start": "172849",
    "end": "178129"
  },
  {
    "text": "and language this language is can be extracted from a native assembly",
    "start": "178129",
    "end": "184489"
  },
  {
    "text": "language so we have a translator between this language and this an tomato intermediate to expedition here owns you",
    "start": "184489",
    "end": "192139"
  },
  {
    "text": "have this Co feature you can do some manipulation on it we will see those",
    "start": "192139",
    "end": "198079"
  },
  {
    "text": "meditation in a couple of sites and after you can use this intimate",
    "start": "198079",
    "end": "203359"
  },
  {
    "text": "representation in order to do some static analysis and so on which will be demonstrated in a couple of sites as",
    "start": "203359",
    "end": "210349"
  },
  {
    "text": "well to get this language you can write this these lines which is a native",
    "start": "210349",
    "end": "216949"
  },
  {
    "text": "language and which will translate it into this intermediate language okay",
    "start": "216949",
    "end": "223970"
  },
  {
    "text": "this language is based on abstracts and 6:3 and is defined by about nine words",
    "start": "223970",
    "end": "231440"
  },
  {
    "text": "and you have a simple very simple words for example integers and have variables",
    "start": "231440",
    "end": "236599"
  },
  {
    "text": "and more complete cat in the world for example operators bytes manipulation and so on you have also an assignment",
    "start": "236599",
    "end": "244729"
  },
  {
    "text": "which is here represented by X expression affectation in infants affectation is f is for application and",
    "start": "244729",
    "end": "252739"
  },
  {
    "text": "it stands for assignment but in English X us is with where the tool to use",
    "start": "252739",
    "end": "260139"
  },
  {
    "text": "okay so that word there are some roots about this language the first rules is",
    "start": "260139",
    "end": "266480"
  },
  {
    "text": "that each expression it has a fixed size and embed inside here and another rule",
    "start": "266480",
    "end": "273470"
  },
  {
    "text": "is that you can only have memory Department or variable on the assignment",
    "start": "273470",
    "end": "280220"
  },
  {
    "text": "so as less values even surface another interesting thing is that the expression",
    "start": "280220",
    "end": "286340"
  },
  {
    "text": "operator can takes anything any any name of operation and me as we can rock with",
    "start": "286340",
    "end": "291680"
  },
  {
    "text": "unknown names of operators and it can under law so it can do some propagation",
    "start": "291680",
    "end": "298550"
  },
  {
    "text": "algorithm extra unknown operators another trick is that an interesting",
    "start": "298550",
    "end": "305900"
  },
  {
    "text": "point is that assignment are done in parallel I will show this later so for",
    "start": "305900",
    "end": "312169"
  },
  {
    "text": "example if you want to translate navi-x elites in x86 you have this kind of",
    "start": "312169",
    "end": "318380"
  },
  {
    "text": "stuff so you have an effect on assignment between the ID EBX and IDE 8 and you can print a human",
    "start": "318380",
    "end": "327110"
  },
  {
    "text": "readable version of it like this so you have simply EI wall-e B's if you want to",
    "start": "327110",
    "end": "333380"
  },
  {
    "text": "read another example is a purse 8 for example so you have here two equations",
    "start": "333380",
    "end": "338570"
  },
  {
    "text": "that are done in parallel so the update of the stack pointer here and as a",
    "start": "338570",
    "end": "343669"
  },
  {
    "text": "storage of the eh in the top of the stack and in fact this ESP here has",
    "start": "343669",
    "end": "349910"
  },
  {
    "text": "nothing to do with this ESP here in fact this one is is the source of the dimension and our very complete more",
    "start": "349910",
    "end": "359440"
  },
  {
    "text": "complicated stuff for example the comparison between two register in fact when we translate this",
    "start": "359440",
    "end": "365510"
  },
  {
    "text": "we will give some a bunch of flags for example the zero flag high flags and",
    "start": "365510",
    "end": "371990"
  },
  {
    "text": "they are assigned from a very complicated expression we which is in fact the real a question of the carry",
    "start": "371990",
    "end": "378830"
  },
  {
    "text": "flag or the riddle equation of a flight so to illustrate this we can start with",
    "start": "378830",
    "end": "385400"
  },
  {
    "start": "382000",
    "end": "382000"
  },
  {
    "text": "this native x86 language so we have function some comparison between",
    "start": "385400",
    "end": "391520"
  },
  {
    "text": "arguments and return value when we translate this code in",
    "start": "391520",
    "end": "396889"
  },
  {
    "text": "intimate language is a bit more complicated here you can see that we we",
    "start": "396889",
    "end": "403520"
  },
  {
    "text": "can recognize his here - EVP here we",
    "start": "403520",
    "end": "408919"
  },
  {
    "text": "have the mo ESP in EVP and we have a bunch of equation of old eflags which is",
    "start": "408919",
    "end": "415310"
  },
  {
    "text": "here and which is really complicated so we have the jump comparison with the",
    "start": "415310",
    "end": "421430"
  },
  {
    "text": "jump less or every one which has its own equation here so the fixation of X and the resolution so the first thing we can",
    "start": "421430",
    "end": "429560"
  },
  {
    "text": "do here is to use for example passes under here to generate a modified here",
    "start": "429560",
    "end": "435560"
  },
  {
    "text": "with some codes and education for example the most common one is a dead",
    "start": "435560",
    "end": "441169"
  },
  {
    "text": "code elimination if you are on x86 you know that in the IB you don't you don't",
    "start": "441169",
    "end": "446509"
  },
  {
    "text": "need the flags at the end of the function so the computation of the carry flag here is not used anymore so in is",
    "start": "446509",
    "end": "453650"
  },
  {
    "text": "in experiments in the east notes use anymore here and so you can see that this equation is not need here so we can",
    "start": "453650",
    "end": "462439"
  },
  {
    "text": "remove it so if we pass this this abyss equation here we will have this code",
    "start": "462439",
    "end": "468849"
  },
  {
    "text": "which is a bit more simple in now but we",
    "start": "468849",
    "end": "479120"
  },
  {
    "text": "can do a better in fact the new feature",
    "start": "479120",
    "end": "486020"
  },
  {
    "text": "in Jasmine is to explain and represent",
    "start": "486020",
    "end": "491180"
  },
  {
    "text": "all the intermediate flags with high level flags for example instead of having very big equations in the",
    "start": "491180",
    "end": "497719"
  },
  {
    "text": "internet language we have only the simple operator which does the same thing which is very simple here and as",
    "start": "497719",
    "end": "505219"
  },
  {
    "text": "well the jump less well will be represented by a new a new operator here and which will take all the only parts",
    "start": "505219",
    "end": "513500"
  },
  {
    "text": "of the flags that are used to compute the conditional jump so if we here is",
    "start": "513500",
    "end": "521719"
  },
  {
    "text": "the new intermediate position using this new animated language here with sorry",
    "start": "521719",
    "end": "527300"
  },
  {
    "text": "with this new and and the next step will be to it's again",
    "start": "527300",
    "end": "535880"
  },
  {
    "text": "a bit complicated so we have to do more than this so we will try to do in asthma",
    "start": "535880",
    "end": "542510"
  },
  {
    "text": "propagation and to do this we have to use a static single assignment it's a",
    "start": "542510",
    "end": "548390"
  },
  {
    "text": "new feature in us which has been added by a contribution by team play Cisco and Nico Schmidt's in fact it's very common",
    "start": "548390",
    "end": "555260"
  },
  {
    "text": "as well in population to use this transformation in order to simplify your code cut so it has a very interesting",
    "start": "555260",
    "end": "564170"
  },
  {
    "text": "property here each each pneumonia each register can be assigned only ons so you",
    "start": "564170",
    "end": "569960"
  },
  {
    "text": "have material version of the same eraser for example you have EA each all in X 1 X 2 X Terra and here is a new code so",
    "start": "569960",
    "end": "580100"
  },
  {
    "text": "you you can see that the ESP dot 0 equal X around and and yeah it has the",
    "start": "580100",
    "end": "586040"
  },
  {
    "text": "multiple version of it here so know that we are in SSA version we can do for",
    "start": "586040",
    "end": "592730"
  },
  {
    "text": "example constant propagation but we will do more than this in us it's a cold expression propagation because we will",
    "start": "592730",
    "end": "599030"
  },
  {
    "text": "try to do more than efficient constant propagation to do this we have to we",
    "start": "599030",
    "end": "604730"
  },
  {
    "text": "have some rules with for example we cannot propagate call operators because a call represents a sub call the",
    "start": "604730",
    "end": "611600"
  },
  {
    "text": "function you cannot mess with readwrite memory for example memory boring and has",
    "start": "611600",
    "end": "618860"
  },
  {
    "text": "but has we are in SSA we can do for example register propagation and so on so here is the actual code and when we",
    "start": "618860",
    "end": "627620"
  },
  {
    "text": "do this we will we will do a first step of propagation so only a single set and it needs this code so here we have the",
    "start": "627620",
    "end": "635570"
  },
  {
    "text": "house we have a source the eggs a 0 and this value it comes from here so here as",
    "start": "635570",
    "end": "641750"
  },
  {
    "text": "we don't have any memory right between this vacation is this weed we can obviously replace this value by its",
    "start": "641750",
    "end": "648170"
  },
  {
    "text": "source so it will give this code so this is the first step and the algorithm",
    "start": "648170",
    "end": "653420"
  },
  {
    "text": "trying to find a fixed point so after this it will try to take those equation put them here in the listicle",
    "start": "653420",
    "end": "659600"
  },
  {
    "text": "computation so the operator here will be obviously very",
    "start": "659600",
    "end": "665480"
  },
  {
    "text": "very very long and we have some high-level reduction for example here we have a reduction that say that this",
    "start": "665480",
    "end": "671390"
  },
  {
    "text": "powder with those sub arguments can reduce has this simple comparison okay",
    "start": "671390",
    "end": "677150"
  },
  {
    "text": "so we have the final code which is a given like this and we from the x86 we",
    "start": "677150",
    "end": "684140"
  },
  {
    "text": "can recover that we have a simple comparison which is the first argument which is that's signed and for our igual",
    "start": "684140",
    "end": "691490"
  },
  {
    "text": "who as a second argument the last step is to remove heels of he which has been",
    "start": "691490",
    "end": "697010"
  },
  {
    "text": "which has a bit of using the transformation so using this it Emily just as well so",
    "start": "697010",
    "end": "704540"
  },
  {
    "text": "here is the final version of the code and we have the antimatter position of the initial 86 code and there's a very",
    "start": "704540",
    "end": "712070"
  },
  {
    "text": "interesting point is know that if you have the same code but in arm if you use",
    "start": "712070",
    "end": "717110"
  },
  {
    "text": "this algorithm here is a result for arm so you have the same result so except",
    "start": "717110",
    "end": "723740"
  },
  {
    "start": "720000",
    "end": "720000"
  },
  {
    "text": "that on the arguments has change in arm you have arguments as pass through",
    "start": "723740",
    "end": "729830"
  },
  {
    "text": "register so here you have register 0 and 1 which are compared and for example if",
    "start": "729830",
    "end": "735110"
  },
  {
    "text": "you are on alma 64 this is the same reagent here from the native a phone",
    "start": "735110",
    "end": "740990"
  },
  {
    "text": "call ok so now if you use it in in a",
    "start": "740990",
    "end": "746030"
  },
  {
    "text": "real code if you have this kind of code which is written in arms up in am some",
    "start": "746030",
    "end": "751190"
  },
  {
    "text": "it's a risk so risk architecture so it's very doubled we can reduce this to this so",
    "start": "751190",
    "end": "759170"
  },
  {
    "text": "now for reducer it's a bit more simpler to understand the code now another one",
    "start": "759170",
    "end": "768130"
  },
  {
    "text": "for example if you reverse some anthem and you have this function we can use",
    "start": "773680",
    "end": "779240"
  },
  {
    "text": "the same algorithm here and if you try first to get the intermediate presentation he gives this very",
    "start": "779240",
    "end": "785600"
  },
  {
    "text": "complicated code here and you can so use those algorithm in order to redo this",
    "start": "785600",
    "end": "791300"
  },
  {
    "text": "and this gives the final result here so",
    "start": "791300",
    "end": "796520"
  },
  {
    "text": "and for those who are familiar with reversing low-level arm you can see that",
    "start": "796520",
    "end": "802250"
  },
  {
    "text": "it's a simple function which will try to change the direction part of the the",
    "start": "802250",
    "end": "808730"
  },
  {
    "text": "process of the CP and it's a bit more simple to read this than the actual",
    "start": "808730",
    "end": "814190"
  },
  {
    "text": "native code I think okay",
    "start": "814190",
    "end": "819550"
  },
  {
    "text": "notice that this code is not the compilation it's only a modification of the",
    "start": "820240",
    "end": "826940"
  },
  {
    "text": "intermediate language and is only get back enter a language but we will see that we have some tricky things to and",
    "start": "826940",
    "end": "834020"
  },
  {
    "text": "generate back native language we can and you can use this internal language in",
    "start": "834020",
    "end": "839780"
  },
  {
    "text": "order to do for example type propagation value analysis or loop detection and so on for example in the next slide we will",
    "start": "839780",
    "end": "849830"
  },
  {
    "text": "show how we can use this entire language in order to do cut the sophistication so",
    "start": "849830",
    "end": "857500"
  },
  {
    "text": "here we will try to analyze the just VM machine before going deeply in the",
    "start": "857500",
    "end": "865550"
  },
  {
    "text": "native assembly we will show you the first feature which is symbolic execution we will use in the attack of",
    "start": "865550",
    "end": "873020"
  },
  {
    "text": "this game summary execution is weak like concrete execution as the difference is when you are doing complete execution on",
    "start": "873020",
    "end": "879650"
  },
  {
    "text": "a CPU register can only integers has value and memory a memory has only",
    "start": "879650",
    "end": "884900"
  },
  {
    "text": "registers integers and in summary execution of register can have can be",
    "start": "884900",
    "end": "892940"
  },
  {
    "text": "represent a number or another variable so if you have this native code if you",
    "start": "892940",
    "end": "898490"
  },
  {
    "text": "try to do a assembly execution here is the result of the first line you have ecigs which is a result and it's only",
    "start": "898490",
    "end": "907400"
  },
  {
    "text": "this it's 6 plus 4 if you do the second line you have this week's eagle-eye",
    "start": "907400",
    "end": "913550"
  },
  {
    "text": "weeks plus 1 and if you do the comparison between CL and one here is",
    "start": "913550",
    "end": "919670"
  },
  {
    "text": "the flag that will that are given by the summary execution and you can see here",
    "start": "919670",
    "end": "924740"
  },
  {
    "text": "that the zero flag and depend only on the ecig value and equation no we have a jump if zero and",
    "start": "924740",
    "end": "934140"
  },
  {
    "text": "here we have the register IRD st and his value is a new expression which depends",
    "start": "934140",
    "end": "941130"
  },
  {
    "text": "only on ethics and some integers so we symbolic execution we get the fact that",
    "start": "941130",
    "end": "948500"
  },
  {
    "text": "we have this equation and we can deduce dependencies of the next basic block but",
    "start": "948500",
    "end": "955020"
  },
  {
    "text": "we have a problem here incomplete description obviously is zero flag will be an integer and will be",
    "start": "955020",
    "end": "961830"
  },
  {
    "text": "resolved and here it's not special so we cannot we don't know we have to do if we meet we if we will go in be or 10 so",
    "start": "961830",
    "end": "970560"
  },
  {
    "text": "here this is a classic program in summary execution and there are many solution known here and we will only and",
    "start": "970560",
    "end": "981000"
  },
  {
    "start": "972000",
    "end": "972000"
  },
  {
    "text": "it's up to you to choose the good solution for you for your use case and for example you can do a state speed for",
    "start": "981000",
    "end": "987900"
  },
  {
    "text": "example you can run on the left side of the branch and on on the right side of the branch and and so on we will show",
    "start": "987900",
    "end": "996270"
  },
  {
    "text": "you this risk Emmy in next slides there is another problem with memory accesses",
    "start": "996270",
    "end": "1002750"
  },
  {
    "text": "for example when you try to affect memory usage using symbolic pointer it's",
    "start": "1002750",
    "end": "1008060"
  },
  {
    "text": "a bit weird so India's with the program is solved using dictionary with when you",
    "start": "1008060",
    "end": "1015290"
  },
  {
    "text": "have a symbolic memory base like this we will spit this in the symmetric part and",
    "start": "1015290",
    "end": "1020360"
  },
  {
    "text": "the compiled pot and in NASM only memory based on the same sampling base our can",
    "start": "1020360",
    "end": "1027740"
  },
  {
    "text": "and can interfere together so this is a bit different from the real world but it",
    "start": "1027740",
    "end": "1034550"
  },
  {
    "text": "solves some some some problems ok so",
    "start": "1034550",
    "end": "1040189"
  },
  {
    "start": "1039000",
    "end": "1039000"
  },
  {
    "text": "back to the C&O in the in order to to win some time so Otto does then did use",
    "start": "1040190",
    "end": "1048140"
  },
  {
    "text": "uses use the automation protection in fact for those who doesn't know this protection when you are completing a",
    "start": "1048140",
    "end": "1054950"
  },
  {
    "text": "code in native language it's easy for resort to analyze this language it goes",
    "start": "1054950",
    "end": "1060980"
  },
  {
    "text": "it's 86 language is a bit like is the mother tongue so it's easy and here it's",
    "start": "1060980",
    "end": "1066930"
  },
  {
    "text": "a very easy to compile the code to a new CPU completely operated for for this",
    "start": "1066930",
    "end": "1073410"
  },
  {
    "text": "occasion and totally exists and and this",
    "start": "1073410",
    "end": "1078450"
  },
  {
    "text": "bytecode cannot be executed on directing the city so you have to embed an an",
    "start": "1078450",
    "end": "1084600"
  },
  {
    "text": "emulator of this new CPU in your binary and in fact when you run the malware it run an emulator which run on by code",
    "start": "1084600",
    "end": "1091440"
  },
  {
    "text": "which presents the original color so how",
    "start": "1091440",
    "end": "1099270"
  },
  {
    "text": "do we how do we attack this protection the first one is to do manual reversion the reversing so we had to find the",
    "start": "1099270",
    "end": "1109260"
  },
  {
    "text": "fetcher here and so we have to find the mnemonic one and to see how the the VM",
    "start": "1109260",
    "end": "1116300"
  },
  {
    "start": "1114000",
    "end": "1114000"
  },
  {
    "text": "its root 2 and so on I want to have this you can use somebody's equation to have the Rho",
    "start": "1116300",
    "end": "1122670"
  },
  {
    "text": "expression of the mnemonic so using this result you can infer what is the VM so",
    "start": "1122670",
    "end": "1129570"
  },
  {
    "text": "to you where are the register where's the van program punto and so on and all",
    "start": "1129570",
    "end": "1135300"
  },
  {
    "text": "you have done that you can use no miasma to automate the recovery of the rest of",
    "start": "1135300",
    "end": "1141480"
  },
  {
    "text": "mnemonics so for example if you have the first emulation of the first mnemonic we",
    "start": "1141480",
    "end": "1147390"
  },
  {
    "start": "1145000",
    "end": "1145000"
  },
  {
    "text": "have this and you have read as the memory at easy 6 is a good memory",
    "start": "1147390",
    "end": "1153060"
  },
  {
    "text": "program to enter and you have the first visual here of the execution of the",
    "start": "1153060",
    "end": "1158880"
  },
  {
    "text": "first mnemonic you can see that here when you have this equation you can",
    "start": "1158880",
    "end": "1164820"
  },
  {
    "text": "reduce this as a program koonta the other machine promoter so this one it words to the original memory program",
    "start": "1164820",
    "end": "1171480"
  },
  {
    "text": "this machine prompt on top is 1 so this can be reduced has this equation so",
    "start": "1171480",
    "end": "1178730"
  },
  {
    "text": "answer the question can be reduced as this one is the better machine program",
    "start": "1178730",
    "end": "1184350"
  },
  {
    "text": "Kunta so you can rewrite it like this so we will write those reduction rules and",
    "start": "1184350",
    "end": "1190040"
  },
  {
    "text": "in the azzam owns and after this we will try to",
    "start": "1190040",
    "end": "1195240"
  },
  {
    "text": "Emma stimulates the rest of the nominees and we will apply this reduction and Yasim will give automatically this kind",
    "start": "1195240",
    "end": "1202500"
  },
  {
    "text": "of a question so it will vacuum the original code of the of the mnemonic for",
    "start": "1202500",
    "end": "1207799"
  },
  {
    "text": "example if you have such a question here you have such tree and the reduction we",
    "start": "1207799",
    "end": "1215970"
  },
  {
    "start": "1213000",
    "end": "1213000"
  },
  {
    "text": "lose this here other elections so this is obviously the relations that I explained earlier you have a seat which",
    "start": "1215970",
    "end": "1224279"
  },
  {
    "text": "is reduced as VM sweet this this memory the first plant gives the NPC this one",
    "start": "1224279",
    "end": "1230669"
  },
  {
    "text": "gives a register and we don't know which is it for which we reduced a for example",
    "start": "1230669",
    "end": "1237090"
  },
  {
    "text": "as an tiger and the look up at PC please an integral will give an Integra because",
    "start": "1237090",
    "end": "1243059"
  },
  {
    "text": "obviously it's a immediate value of an opcode and you have if you have an",
    "start": "1243059",
    "end": "1249240"
  },
  {
    "text": "operation between two integers obviously it will give an integral so to this for this we have first this history we will",
    "start": "1249240",
    "end": "1257940"
  },
  {
    "text": "apply the reduction so the first one is to replace ecigs by the vm pc streets here so we have",
    "start": "1257940",
    "end": "1265070"
  },
  {
    "text": "here all the integrals we will be reduced to in here so now we have a new",
    "start": "1265070",
    "end": "1271500"
  },
  {
    "text": "structure which is known which has a reaction rules and this wind this one will give back rag it's this one you",
    "start": "1271500",
    "end": "1279389"
  },
  {
    "text": "will give back MPC here and so we have VC plus int and the atomic memory so",
    "start": "1279389",
    "end": "1285720"
  },
  {
    "text": "it's obviously an integral and here we have Antigua x1 take off so it leaves and tiger and we have we stopped here",
    "start": "1285720",
    "end": "1292710"
  },
  {
    "text": "because we doesn't we don't have anymore any reduction remaining so at the end of",
    "start": "1292710",
    "end": "1298049"
  },
  {
    "text": "the operation we know that the the mnemonic is only an addition between a register and an integer and here is a",
    "start": "1298049",
    "end": "1306059"
  },
  {
    "start": "1305000",
    "end": "1305000"
  },
  {
    "text": "result on some mnemonic of the veto machine so here we have the result which is a XOR between memory ported by the",
    "start": "1306059",
    "end": "1315389"
  },
  {
    "text": "register and an integral and we have a the same M&E it was a very semi monique except the the memory size as change",
    "start": "1315389",
    "end": "1321899"
  },
  {
    "text": "so here is obvious to see this",
    "start": "1321899",
    "end": "1325460"
  },
  {
    "text": "yeah and now the interesting thing is that we can disassemble the bytecode and",
    "start": "1330500",
    "end": "1338130"
  },
  {
    "text": "re-inject the generic equation and s transient design then using the Zener TV",
    "start": "1338130",
    "end": "1343890"
  },
  {
    "text": "code so we can get back the intermediate position of the the them back on so when",
    "start": "1343890",
    "end": "1352710"
  },
  {
    "text": "we do some of this we will recover we do a demo of C of this so here we rewrite",
    "start": "1352710",
    "end": "1362100"
  },
  {
    "text": "only the fetcher of the Vienna we emulate also mnemonics and we integrate some unix reject it in the in the memory",
    "start": "1362100",
    "end": "1370230"
  },
  {
    "text": "bytecode and here is the result we have the animated language of the world",
    "start": "1370230",
    "end": "1377520"
  },
  {
    "text": "function which was emulated in the CM and you can see first that it's a bit",
    "start": "1377520",
    "end": "1384270"
  },
  {
    "text": "complicated because as you can see for example we have a register which is the constant here and we have the constant",
    "start": "1384270",
    "end": "1390600"
  },
  {
    "text": "which is added with another constant so obviously we can merge them in order to generate the constants it will mean me",
    "start": "1390600",
    "end": "1397410"
  },
  {
    "text": "something here you can see that we can use the previous algorithm with SSI propagation and so on and if we did this",
    "start": "1397410",
    "end": "1404160"
  },
  {
    "text": "we have the we obtain the next result and here we have the the original code",
    "start": "1404160",
    "end": "1412230"
  },
  {
    "text": "of the disaster without of his obfuscation and but it's in animated",
    "start": "1412230",
    "end": "1419790"
  },
  {
    "text": "language so it's a bit way out we are to to understand but in NASM we have a pass which can take the n-terminal language",
    "start": "1419790",
    "end": "1426030"
  },
  {
    "text": "and translate it into a Librium language and so we can obtain this and the best",
    "start": "1426030",
    "end": "1431730"
  },
  {
    "text": "part is that we can use this LLVM language in order to compile it to native x86 language and so we can obtain",
    "start": "1431730",
    "end": "1439530"
  },
  {
    "text": "this and we can obtain a binary we can",
    "start": "1439530",
    "end": "1445110"
  },
  {
    "text": "inject in the original binary of the stem and when we we run it we can have",
    "start": "1445110",
    "end": "1451530"
  },
  {
    "text": "we recover the original covenant common",
    "start": "1451530",
    "end": "1457170"
  },
  {
    "text": "controller you are so all this work is correct because the code has been",
    "start": "1457170",
    "end": "1464120"
  },
  {
    "text": "compiled and executed unreal unreal code the interesting thing is that no our",
    "start": "1464120",
    "end": "1471080"
  },
  {
    "text": "does the version is very very very quicker than the original one because everything on the VM as disappear and it",
    "start": "1471080",
    "end": "1479090"
  },
  {
    "text": "has been translated into a native language okay another interesting part",
    "start": "1479090",
    "end": "1487280"
  },
  {
    "text": "in Yasim is to analyze malware for",
    "start": "1487280",
    "end": "1492380"
  },
  {
    "text": "example in a question group you have a naturist in step the battery itself is not cyclone but every string used the",
    "start": "1492380",
    "end": "1499970"
  },
  {
    "text": "inventory in cycle and each time the winery wants to use a string it has to",
    "start": "1499970",
    "end": "1505250"
  },
  {
    "text": "this fr it's in memory use it and to wipe it after after this so forward as",
    "start": "1505250",
    "end": "1511190"
  },
  {
    "text": "you are if you want to do a static analyzer in order to recover the strings you have to manually take the function",
    "start": "1511190",
    "end": "1517730"
  },
  {
    "text": "take the progress and take the back the the pointer to the site for swing is the",
    "start": "1517730",
    "end": "1522860"
  },
  {
    "text": "length of such a swing and to do some stuff after one and we will show you how to do this automatically so we will use",
    "start": "1522860",
    "end": "1528740"
  },
  {
    "text": "an algo in which is called the depends you up I won't explain here because it's a bit long it's a bit between so use",
    "start": "1528740",
    "end": "1535280"
  },
  {
    "text": "death chain and person sees chain which can explode in with a big loop and in",
    "start": "1535280",
    "end": "1542000"
  },
  {
    "text": "this case our Halloween our algorithm is a is okay if you want some details you",
    "start": "1542000",
    "end": "1547640"
  },
  {
    "text": "can see a slides here so the demo session is is we have imagine we have",
    "start": "1547640",
    "end": "1553730"
  },
  {
    "text": "the a person group binary we have a recovered the deciphering a swinging a function and so we will show you a usage",
    "start": "1553730",
    "end": "1562190"
  },
  {
    "text": "of the function and if it is 64 it's",
    "start": "1562190",
    "end": "1571179"
  },
  {
    "text": "okay so here the register write is used",
    "start": "1572440",
    "end": "1578180"
  },
  {
    "text": "to store the length of the ciphered function as a success thing and it it stores the pointer of the sizeof",
    "start": "1578180",
    "end": "1584960"
  },
  {
    "text": "function when you reverse this it's obviously that Alex is the pointer is here and the length but",
    "start": "1584960",
    "end": "1592610"
  },
  {
    "text": "is a bit other too tricky to recover here the eight depends on 12 and 23 and",
    "start": "1592610",
    "end": "1600920"
  },
  {
    "text": "if you click here you can see that all 12 is in saliste here with FF so what we",
    "start": "1600920",
    "end": "1608150"
  },
  {
    "text": "are doing with on either the following the Euro step and so on can be done with the dependency graph so here we run the",
    "start": "1608150",
    "end": "1614900"
  },
  {
    "text": "plug-in in in in HIDA we say on the call we want to backtrack for example r8 and",
    "start": "1614900",
    "end": "1622059"
  },
  {
    "text": "minas will give you automatically the lines which contains the instructions",
    "start": "1622059",
    "end": "1629000"
  },
  {
    "text": "that will give the result in r8 so we will and has we have as well as symbolic",
    "start": "1629000",
    "end": "1635929"
  },
  {
    "text": "execution engine we can do this on the on this intrusion and here musn't say that the value is only and there is one",
    "start": "1635929",
    "end": "1641929"
  },
  {
    "text": "value and one possibility which gives a ID equals to 22 and if we are for",
    "start": "1641929",
    "end": "1648740"
  },
  {
    "text": "example is an else it will track in in both punches excellent so now we have",
    "start": "1648740",
    "end": "1655070"
  },
  {
    "text": "that we can automate to recover for each prospect or some other function also arguments and after this we will try to",
    "start": "1655070",
    "end": "1663520"
  },
  {
    "start": "1660000",
    "end": "1660000"
  },
  {
    "text": "do the result is that we have all the values of those arguments so when testing since know is that we",
    "start": "1663520",
    "end": "1670130"
  },
  {
    "text": "will use emulation mode engine of Mia's in order to emulate a zoom deciphering",
    "start": "1670130",
    "end": "1675890"
  },
  {
    "text": "function and to get back the result so to do this here is a simple example in",
    "start": "1675890",
    "end": "1681470"
  },
  {
    "start": "1680000",
    "end": "1680000"
  },
  {
    "text": "order to emulate a function so we had a memory page here with the bytecode with",
    "start": "1681470",
    "end": "1687799"
  },
  {
    "text": "native code and we introduced the stack and we run the code and for a special",
    "start": "1687799",
    "end": "1693770"
  },
  {
    "text": "example here we will do this but additionally we will initially the register using the recovered argument",
    "start": "1693770",
    "end": "1700010"
  },
  {
    "text": "and the length of the swing and the pointer and when we do this we we and",
    "start": "1700010",
    "end": "1707540"
  },
  {
    "text": "after we will get the memory back to me Azzam and we would women do this we have",
    "start": "1707540",
    "end": "1714169"
  },
  {
    "text": "the following result",
    "start": "1714169",
    "end": "1716889"
  },
  {
    "text": "here Kamiya isn't running as the script on the on the wall bed and here you can",
    "start": "1724100",
    "end": "1730260"
  },
  {
    "text": "see that you have the detection of the arguments the recovery and the emulation and for every swing you have the output",
    "start": "1730260",
    "end": "1736789"
  },
  {
    "text": "deciphered string and moreover the sweep will get back the residue either and if",
    "start": "1736789",
    "end": "1742409"
  },
  {
    "text": "you go back to either if you look at each reference of the decree function",
    "start": "1742409",
    "end": "1748669"
  },
  {
    "text": "you have maybe it's a bit too little but you have all the residual so for each",
    "start": "1748669",
    "end": "1754049"
  },
  {
    "text": "for each call so here we use in this ring that's all for the automated",
    "start": "1754049",
    "end": "1764429"
  },
  {
    "text": "language and and he was Camino on the emulation pot okay so I'm regarding the",
    "start": "1764429",
    "end": "1770580"
  },
  {
    "text": "equation group yells you also have some cryptography inside and the idea is to",
    "start": "1770580",
    "end": "1777950"
  },
  {
    "text": "reverse the code on just one dll discovered attractive to graphene and",
    "start": "1777950",
    "end": "1783870"
  },
  {
    "text": "then try to identify this crypto in all the dll including on different active",
    "start": "1783870",
    "end": "1789990"
  },
  {
    "text": "architectures so how do we do that sorry already a state-of-the-art source",
    "start": "1789990",
    "end": "1797370"
  },
  {
    "text": "offering samples are static approaches like left in either but we'll use a",
    "start": "1797370",
    "end": "1802620"
  },
  {
    "text": "dynamic one why you will use that because for instance air is a mem copy which is a naive implementation it's",
    "start": "1802620",
    "end": "1810270"
  },
  {
    "text": "quite easy to recognize it but you can have the same mem copy but obfuscated",
    "start": "1810270",
    "end": "1815370"
  },
  {
    "text": "for instance if it has been written by a inter by an intern or you can have a",
    "start": "1815370",
    "end": "1821190"
  },
  {
    "text": "Victory's vectorized version with a sse extra so what we will do is actually",
    "start": "1821190",
    "end": "1826919"
  },
  {
    "text": "consider the function as a black box we will choose the input that's to say the",
    "start": "1826919",
    "end": "1832830"
  },
  {
    "text": "arguments and the initial state of the memory run the function in a minimalist environment let's adjust the stack just",
    "start": "1832830",
    "end": "1840570"
  },
  {
    "text": "to stack and and binary mapped and we will if it reach the end I will will",
    "start": "1840570",
    "end": "1848309"
  },
  {
    "text": "check the output the output value and the output memory in final memory",
    "start": "1848309",
    "end": "1854460"
  },
  {
    "text": "if it's much our expected one you can say okay it's it's maybe the function",
    "start": "1854460",
    "end": "1859889"
  },
  {
    "text": "that we are considering so for instance if you just if I have a black box I refer to you to use the signature for",
    "start": "1859889",
    "end": "1866490"
  },
  {
    "text": "multiplication we have a five by ten I run it it crash so obviously is not an",
    "start": "1866490",
    "end": "1871499"
  },
  {
    "text": "interpretation then I try to use esterline with the yellow strings as",
    "start": "1871499",
    "end": "1877289"
  },
  {
    "text": "originally in memory it runs students but written zero so it's not a Shannon and and then I try",
    "start": "1877289",
    "end": "1884429"
  },
  {
    "text": "eight well with a one two three four as a string in input which went to the N it returns one two three four other longer",
    "start": "1884429",
    "end": "1891149"
  },
  {
    "text": "so I can say ok it sees the expected output for height well signature so it may be a twerk so regarding the",
    "start": "1891149",
    "end": "1898860"
  },
  {
    "text": "implementation we have to be resilient to crashes because you can seg fault of course if the function expect pointer",
    "start": "1898860",
    "end": "1905490"
  },
  {
    "start": "1899000",
    "end": "1899000"
  },
  {
    "text": "and you give in five it will crash so as we are using the emulation in myosin",
    "start": "1905490",
    "end": "1911759"
  },
  {
    "text": "it's in lated so there is no will crush the infinitely if you need to have Herzl",
    "start": "1911759",
    "end": "1917340"
  },
  {
    "text": "to be taking icons you just use timeout the idea is to have a disk signature",
    "start": "1917340",
    "end": "1924480"
  },
  {
    "text": "description which is as simple as possible and are agnostic if possible and coding and which doesn't consider",
    "start": "1924480",
    "end": "1933240"
  },
  {
    "text": "the Kalinka mention so it can be a several code to be sure that this is a",
    "start": "1933240",
    "end": "1938700"
  },
  {
    "text": "function and it is a problem which is obviously embarassingly parallel so we",
    "start": "1938700",
    "end": "1943860"
  },
  {
    "text": "can use this so all these things has been implemented in a tiny tools name as",
    "start": "1943860",
    "end": "1950999"
  },
  {
    "text": "Sevilla H based on onion which also open source and one thing that I don't talk",
    "start": "1950999",
    "end": "1959070"
  },
  {
    "text": "about today but using the symbolic emulation of mass M we can also learn",
    "start": "1959070",
    "end": "1965789"
  },
  {
    "text": "automatically new functions signatures but this is for another day so getting",
    "start": "1965789",
    "end": "1972629"
  },
  {
    "text": "back to our equation drug a crypto we'll just consider the beginning part reverse",
    "start": "1972629",
    "end": "1980460"
  },
  {
    "text": "we have reversed it so we want to to discover its so we just create a simple",
    "start": "1980460",
    "end": "1987059"
  },
  {
    "text": "test test then we prepare the the test we provide the initial in memory insert memory so",
    "start": "1987059",
    "end": "1995190"
  },
  {
    "text": "it just dedicated to bignum then we said the arguments we run the function and at",
    "start": "1995190",
    "end": "2000289"
  },
  {
    "text": "the end we check the final state of its match if he is matching what what we expect we can say okay it's the copy so",
    "start": "2000289",
    "end": "2009230"
  },
  {
    "text": "it's just one test so this is the one slide a test which is discovering big",
    "start": "2009230",
    "end": "2016820"
  },
  {
    "text": "Numa cookie so as a demo I will try to really run",
    "start": "2016820",
    "end": "2023090"
  },
  {
    "text": "this code on unto binaries and to DLL one in HT HT 6 and 1 in 32 64 32 sorry",
    "start": "2023090",
    "end": "2034429"
  },
  {
    "text": "so we already implement some of test for",
    "start": "2034429",
    "end": "2039950"
  },
  {
    "text": "the beginning cryptography and then if I run it sorry if I when it's under the",
    "start": "2039950",
    "end": "2047000"
  },
  {
    "text": "first binary everyone in parallels and it will discover some of the the",
    "start": "2047000",
    "end": "2054050"
  },
  {
    "text": "signature that we just implements so the multiplication the by now the big name to string the comparison",
    "start": "2054050",
    "end": "2060679"
  },
  {
    "text": "extra extra and I can rent the same I can run the same test on a binary which",
    "start": "2060679",
    "end": "2068898"
  },
  {
    "text": "is in 32-bit and it also found some of",
    "start": "2068899",
    "end": "2075290"
  },
  {
    "text": "the Bates termination is not not so slow because you are using some just-in-time",
    "start": "2075290",
    "end": "2081950"
  },
  {
    "text": "compilation but just a implementation I think so we if you have seen the",
    "start": "2081950",
    "end": "2089599"
  },
  {
    "text": "emulation as a tiny emulation with just the code and the stack but we can do",
    "start": "2089599",
    "end": "2094878"
  },
  {
    "text": "more so for instance if you are analyzing a shellcode which come from angular exploit Keeton this is the",
    "start": "2094879",
    "end": "2100940"
  },
  {
    "text": "landing page you get to the 3G exploit then you get the shellcode you you want to analyzed it so you disassembly it's",
    "start": "2100940",
    "end": "2108830"
  },
  {
    "text": "you realize it's encoded and we can say okay we just emulate it to to let Amanda",
    "start": "2108830",
    "end": "2115099"
  },
  {
    "text": "code himself and get back the information so how if we just use what",
    "start": "2115099",
    "end": "2122000"
  },
  {
    "start": "2120000",
    "end": "2120000"
  },
  {
    "text": "she's done so far that is to say only the code and a stack we run the",
    "start": "2122000",
    "end": "2127130"
  },
  {
    "text": "shellcode and Mia's will crash that is normal it's kind of a try and I approach",
    "start": "2127130",
    "end": "2132640"
  },
  {
    "text": "because actually because the emulation is minimalist it will put your finger",
    "start": "2132640",
    "end": "2139730"
  },
  {
    "text": "just on exotic things when when the shellcode is trying to do something that",
    "start": "2139730",
    "end": "2145640"
  },
  {
    "text": "is not quite usual but actually is as been the decode himself so we can get",
    "start": "2145640",
    "end": "2152660"
  },
  {
    "text": "back the memory and inspect wires are a problem why is there a crash and",
    "start": "2152660",
    "end": "2158110"
  },
  {
    "text": "inspecting it will found this code so this is a this is a common usage of",
    "start": "2158110",
    "end": "2166400"
  },
  {
    "text": "Windows internal structures to to obtain imports to to resolve imports based on",
    "start": "2166400",
    "end": "2174710"
  },
  {
    "text": "our Windows internals ok so I will do to continue the emulation we use the so",
    "start": "2174710",
    "end": "2182600"
  },
  {
    "start": "2176000",
    "end": "2176000"
  },
  {
    "text": "called sandbox in unison which actually add in addition to the stack and the",
    "start": "2182600",
    "end": "2188270"
  },
  {
    "text": "shellcode I some GLS in the memory will load it then some information on the",
    "start": "2188270",
    "end": "2194600"
  },
  {
    "text": "loader on windows installing structures and @uv PB extra extra and so on",
    "start": "2194600",
    "end": "2201820"
  },
  {
    "text": "actually the memory in a museum being a bytes precise we can split the for",
    "start": "2201820",
    "end": "2209570"
  },
  {
    "text": "instance is GB in just 4 bytes that we know then skip as a sparse structures",
    "start": "2209570",
    "end": "2215990"
  },
  {
    "text": "actually so this way if the manual is trying to reach an address that we don't",
    "start": "2215990",
    "end": "2222230"
  },
  {
    "text": "know because this is an exotic behavior like getting the number of CPUs we it",
    "start": "2222230",
    "end": "2230360"
  },
  {
    "text": "will crush but it will put on finger just on the code that is trying to do something nice so using this will run",
    "start": "2230360",
    "end": "2239480"
  },
  {
    "text": "the code and actually investment we will when we it will load the DLL and trot",
    "start": "2239480",
    "end": "2245330"
  },
  {
    "text": "structures it will treat fake address for each of the API and if the code is",
    "start": "2245330",
    "end": "2250490"
  },
  {
    "text": "trying to troll one of these API it will break on it and say ok this code is trying to",
    "start": "2250490",
    "end": "2255880"
  },
  {
    "text": "to code this code is trying to call Co initialize X so what we can do here we",
    "start": "2255880",
    "end": "2261549"
  },
  {
    "text": "can go back to Python and write functions that so for instance if we",
    "start": "2261549",
    "end": "2266980"
  },
  {
    "start": "2266000",
    "end": "2266000"
  },
  {
    "text": "want to stab a star line we have a naming convention then we can get back",
    "start": "2266980",
    "end": "2272740"
  },
  {
    "text": "the argument from the sandbox knowing the idea and Davi we can get back the",
    "start": "2272740",
    "end": "2280289"
  },
  {
    "text": "Bison strings and we can compute the asturian in a full Python and at the end",
    "start": "2280289",
    "end": "2286470"
  },
  {
    "text": "sets the returns value and lets the emulation continue they can also have",
    "start": "2286470",
    "end": "2292750"
  },
  {
    "text": "some interaction with the VM like a custom alligator or we can write",
    "start": "2292750",
    "end": "2298299"
  },
  {
    "text": "minimalist implementation like for this function you are don't notify cache you can say okay it always works it does not",
    "start": "2298299",
    "end": "2305460"
  },
  {
    "text": "actually contact internet but Toro is the work and the final binary is name so",
    "start": "2305460",
    "end": "2315880"
  },
  {
    "text": "as a demo okay so now if we run the",
    "start": "2315880",
    "end": "2325890"
  },
  {
    "text": "decoder differently when it with just",
    "start": "2325890",
    "end": "2333579"
  },
  {
    "text": "the code in the stack we have T's crush doing yeah okay we have to scratch",
    "start": "2333579",
    "end": "2342039"
  },
  {
    "text": "because we are not managing we are not simulating the segment in the minion we",
    "start": "2342039",
    "end": "2347859"
  },
  {
    "text": "are not manage and we are not simulating windows internal structures and so on so now we can say is a an option to achieve",
    "start": "2347859",
    "end": "2354700"
  },
  {
    "text": "it to enable it and we go further and at this time at the end of the famous ok",
    "start": "2354700",
    "end": "2361750"
  },
  {
    "text": "it's right when to call echo initialize X so we can add a stub and if we do this for some of the function for like C 505",
    "start": "2361750",
    "end": "2372009"
  },
  {
    "text": "function actually and if we run back the",
    "start": "2372009",
    "end": "2378880"
  },
  {
    "text": "binary and if you just look at the results what",
    "start": "2378880",
    "end": "2387320"
  },
  {
    "text": "we can see here is that actually the Chad has called URL then notify cache so",
    "start": "2387320",
    "end": "2393500"
  },
  {
    "text": "we get the URL of the CNC then we can see that he has denoted at food that it",
    "start": "2393500",
    "end": "2398510"
  },
  {
    "text": "exists as is our name and we can see after is doing shell execute and ionic",
    "start": "2398510",
    "end": "2404780"
  },
  {
    "text": "process next what we can also do is we use the same script to analyze sheltered",
    "start": "2404780",
    "end": "2413540"
  },
  {
    "text": "from the same campaign by just reusing it and if it works obviously",
    "start": "2413540",
    "end": "2420260"
  },
  {
    "text": "so we capitalize a bit or our previous",
    "start": "2420260",
    "end": "2426020"
  },
  {
    "text": "analysis and get the new parts so so far",
    "start": "2426020",
    "end": "2431060"
  },
  {
    "start": "2430000",
    "end": "2430000"
  },
  {
    "text": "we've seen emulation from very minimalist uneasy code and maybe a stack",
    "start": "2431060",
    "end": "2436520"
  },
  {
    "text": "then we had signalman link window structures then windows API simulation",
    "start": "2436520",
    "end": "2442310"
  },
  {
    "text": "which means we can go further recently very recently we had the fully userland",
    "start": "2442310",
    "end": "2448550"
  },
  {
    "text": "emulation that is to say the code the full userland run and just the channel",
    "start": "2448550",
    "end": "2455869"
  },
  {
    "text": "is simulate onion leaves for now so for instance we treat linux environment",
    "start": "2455869",
    "end": "2461300"
  },
  {
    "text": "which is which will simulate the file system the network except everything is simulated sibility so we have to get",
    "start": "2461300",
    "end": "2469070"
  },
  {
    "text": "back the loader inside the sandbox we have to map it indicated pre party",
    "start": "2469070",
    "end": "2475970"
  },
  {
    "text": "environment say what are the arguments what are the environment what does the deoxy draw vectors extra and as we have",
    "start": "2475970",
    "end": "2483050"
  },
  {
    "text": "done for the function studying before we can stab the cisco so we can simulate",
    "start": "2483050",
    "end": "2488480"
  },
  {
    "text": "them so for instance if i want to write a generic Cisco white what I can do is",
    "start": "2488480",
    "end": "2494140"
  },
  {
    "start": "2489000",
    "end": "2489000"
  },
  {
    "text": "to just pass the arguments knowing the the calling convention gets the memory",
    "start": "2494140",
    "end": "2500930"
  },
  {
    "text": "back from the VM and credits and a call right under fake file descriptors then and I associate it",
    "start": "2500930",
    "end": "2509750"
  },
  {
    "text": "to the correct system number and and it's done so has",
    "start": "2509750",
    "end": "2518319"
  },
  {
    "text": "there is a full run of file on the RS so",
    "start": "2520089",
    "end": "2526220"
  },
  {
    "text": "everything is simulated air you can see that is trying to get the magic because",
    "start": "2526220",
    "end": "2531619"
  },
  {
    "text": "this is the variant binary file he is trying to get its magic we infuse some",
    "start": "2531619",
    "end": "2537099"
  },
  {
    "text": "some of them then you read the file apply is force and it output okay I detected that it's alpha 64-bit to show",
    "start": "2537099",
    "end": "2547309"
  },
  {
    "text": "you that I'm not cheating I can also run it for for instance LS",
    "start": "2547309",
    "end": "2553390"
  },
  {
    "text": "not notice not not fire just Alice on",
    "start": "2553390",
    "end": "2559250"
  },
  {
    "text": "arm so I can't use my own Cisco and",
    "start": "2559250",
    "end": "2565339"
  },
  {
    "text": "trainings we are simulating in get dance extra and we get the right agenda which is outputting the output of LS",
    "start": "2565339",
    "end": "2574390"
  },
  {
    "text": "so now we've seen the IR use we also",
    "start": "2574390",
    "end": "2579950"
  },
  {
    "text": "have seen some of the emulation part and we can try to mix them together I will",
    "start": "2579950",
    "end": "2586430"
  },
  {
    "start": "2586000",
    "end": "2586000"
  },
  {
    "text": "do this we'll use one of the common technique which is called Dyne dynamic symbolic execution it's nothing new but",
    "start": "2586430",
    "end": "2596299"
  },
  {
    "text": "the principle is a very simple actually you have a symbolic execution alongside the concrete one and the concrete",
    "start": "2596299",
    "end": "2602829"
  },
  {
    "text": "execution say where we have to go so for instance if I have these minimized code",
    "start": "2602829",
    "end": "2609529"
  },
  {
    "text": "snippet the concreting section is entering the if if I just want as Ferris",
    "start": "2609529",
    "end": "2614900"
  },
  {
    "text": "said before a summary execution you will get stuck on the if statement not knowing if you have to enter or not T",
    "start": "2614900",
    "end": "2622640"
  },
  {
    "text": "statement in a dynamic symbolic execution we will have a look at what",
    "start": "2622640",
    "end": "2629539"
  },
  {
    "text": "the concrete exaction is doing taking the branch so we also take the branch but as we are taking the ranch we can",
    "start": "2629539",
    "end": "2637579"
  },
  {
    "text": "add a constraint on the current path saying that X has to be odd and",
    "start": "2637579",
    "end": "2643660"
  },
  {
    "text": "accumulate some of the some of this constraint along the execution",
    "start": "2643660",
    "end": "2650210"
  },
  {
    "text": "well had some usage of teaser teaser method so Funston so for instance we can",
    "start": "2650210",
    "end": "2656450"
  },
  {
    "text": "say when you take the if you can say okay is it possible to find a solution",
    "start": "2656450",
    "end": "2661819"
  },
  {
    "text": "which Wichita does not answer the Restatement but as for instance and if",
    "start": "2661819",
    "end": "2669740"
  },
  {
    "text": "so can you create using a server can you create an input that you that we will",
    "start": "2669740",
    "end": "2675859"
  },
  {
    "text": "reach T's T statement so it's used basically to expand coverage and it's",
    "start": "2675859",
    "end": "2681589"
  },
  {
    "text": "very useful in phasing like user in a vulnerability research and like in the",
    "start": "2681589",
    "end": "2688400"
  },
  {
    "text": "cyber Grand Challenge accuracy ago so using it for instance what you've done",
    "start": "2688400",
    "end": "2694160"
  },
  {
    "text": "before we can create 10 bytes 10 bytes a file named target run fully run the",
    "start": "2694160",
    "end": "2702529"
  },
  {
    "text": "phylla binary on it brick on the reader Cisco",
    "start": "2702529",
    "end": "2708049"
  },
  {
    "text": "which is reading target bytes turn target bites into symbolic one and then",
    "start": "2708049",
    "end": "2714890"
  },
  {
    "text": "we will run until the next Cisco but each time there is a branch which acts",
    "start": "2714890",
    "end": "2721880"
  },
  {
    "text": "on a symbolic in bite it will try to create a new solution for T's fats is",
    "start": "2721880",
    "end": "2729529"
  },
  {
    "text": "right for you try to create a new solution which take the this new path",
    "start": "2729529",
    "end": "2735740"
  },
  {
    "text": "and this way you can expand the code branch pass coverage if so so has the",
    "start": "2735740",
    "end": "2742640"
  },
  {
    "text": "demo if I rented van what I just said so for now this is just the one that we",
    "start": "2742640",
    "end": "2751900"
  },
  {
    "text": "done that we've done before we get to the Cisco read now it's go to the",
    "start": "2751900",
    "end": "2757430"
  },
  {
    "text": "symbolic ignition and try to to maximize the deckle coverage so I found an input which outer ASCII text then and I'd put",
    "start": "2757430",
    "end": "2764839"
  },
  {
    "text": "out which outer data then an output which outer international I don't know what a text I Tasha extra extra so it's",
    "start": "2764839",
    "end": "2772760"
  },
  {
    "text": "quite useful for facing another usage of",
    "start": "2772760",
    "end": "2778309"
  },
  {
    "text": "the GAC is to restraint the output the input",
    "start": "2778309",
    "end": "2783920"
  },
  {
    "text": "excuse me based on what you want in the output so just to be more concrete I'll get",
    "start": "2783920",
    "end": "2792110"
  },
  {
    "text": "back to the shell cut and you even notice that it's packed to be alphanumeric so what we want to do is to",
    "start": "2792110",
    "end": "2799280"
  },
  {
    "text": "have a shell code which looks like similar to this one but use our own CNC so for instance using your bracket",
    "start": "2799280",
    "end": "2805130"
  },
  {
    "text": "common see what we will do is use the DAC attach the jitter and and say that",
    "start": "2805130",
    "end": "2813800"
  },
  {
    "text": "the input shell cut it would be symbolic so the the decoding routines will run on",
    "start": "2813800",
    "end": "2820250"
  },
  {
    "text": "symbolic byte and at the end we'll have the equation of the output of the memory",
    "start": "2820250",
    "end": "2826340"
  },
  {
    "text": "output giving the input shell cut so as an example and so what we will do",
    "start": "2826340",
    "end": "2834500"
  },
  {
    "text": "actually we just fixed the final you us to be a say that we also want the that",
    "start": "2834500",
    "end": "2841190"
  },
  {
    "text": "the initial shell code has to be alphanumeric and a special forgiving its constraint to to find a new shaker so if",
    "start": "2841190",
    "end": "2850760"
  },
  {
    "text": "I run this demo I take just a few minutes but we don't have time so here",
    "start": "2850760",
    "end": "2858140"
  },
  {
    "text": "is the output in the shell code that it just treat created it's alphanumeric and",
    "start": "2858140",
    "end": "2867590"
  },
  {
    "text": "if we use the previous script that you just use to analyze our angular campaign",
    "start": "2867590",
    "end": "2873680"
  },
  {
    "text": "we get back our own our own new Isles",
    "start": "2873680",
    "end": "2880480"
  },
  {
    "text": "like a black at that comma so if you are using T shell code it will actually try",
    "start": "2880480",
    "end": "2886130"
  },
  {
    "text": "to reach a payload from from TV and look like another Co coming from the angular",
    "start": "2886130",
    "end": "2893330"
  },
  {
    "text": "campaign so to conclude you have just",
    "start": "2893330",
    "end": "2898670"
  },
  {
    "text": "some ID to to get to take away from this presentation is that miasma has as a",
    "start": "2898670",
    "end": "2906410"
  },
  {
    "text": "framework there is no magic here I just think I just embed some of the",
    "start": "2906410",
    "end": "2912860"
  },
  {
    "text": "common parts that we used every day so for instance the emulation capabilities from just a function or",
    "start": "2912860",
    "end": "2919460"
  },
  {
    "text": "just occurred snipers to a full binary we also have the IR hues with some",
    "start": "2919460",
    "end": "2925250"
  },
  {
    "text": "weapons like symbolic execution can be used for the obfuscation from a lot of",
    "start": "2925250",
    "end": "2930530"
  },
  {
    "text": "things or just analysis and it's a framework that we then used unreal",
    "start": "2930530",
    "end": "2936650"
  },
  {
    "text": "reward samples and real-world tasks so it's we continue to improve it and we",
    "start": "2936650",
    "end": "2942290"
  },
  {
    "text": "continue to add to to bug fix and to add features in it so maybe it's framework",
    "start": "2942290",
    "end": "2948890"
  },
  {
    "text": "you want to add to your toolbox we are completely open to suggestions to",
    "start": "2948890",
    "end": "2954650"
  },
  {
    "text": "contributions to feedbacks to beers a lot of Rods to do regarding effects",
    "start": "2954650",
    "end": "2961940"
  },
  {
    "text": "analysis to enhance what we present today",
    "start": "2961940",
    "end": "2967580"
  },
  {
    "text": "extra extra so thanks for your attention I hope the French accents doesn't win",
    "start": "2967580",
    "end": "2972890"
  },
  {
    "text": "everything and if you have maybe just one or two questions I'll take them",
    "start": "2972890",
    "end": "2979610"
  },
  {
    "text": "thank you [Applause]",
    "start": "2979610",
    "end": "2989449"
  }
]