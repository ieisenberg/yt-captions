[
  {
    "text": "[Music]",
    "start": "5120",
    "end": "41509"
  },
  {
    "text": "that they gave me um my name is Greg Hogan uh good afternoon this is like the",
    "start": "42760",
    "end": "48239"
  },
  {
    "text": "last talk so I'm going to try to make it as quick as possible I I put 50 slides or so in here and my experience has been",
    "start": "48239",
    "end": "54559"
  },
  {
    "text": "that uh that might take me maybe an hour and a half I think I got an hour and 15 minutes so I'm going to have to try to speed through some of the parts",
    "start": "54559",
    "end": "61000"
  },
  {
    "text": "um the talk I'm going to give here is a new one I have never given it before so it's new material for me but uh the",
    "start": "61000",
    "end": "67640"
  },
  {
    "text": "first part of the talk is kind of me ranting about bad software and some of the reasons why I think um software is",
    "start": "67640",
    "end": "73880"
  },
  {
    "text": "very poorly written today and some then later on and the talk I'm going to talk about some of the things uh that we can do to fix that uh most notably software",
    "start": "73880",
    "end": "81560"
  },
  {
    "text": "fault injection for the last two years or so I've been pretty much in the weeds trying to solve software security",
    "start": "81560",
    "end": "87119"
  },
  {
    "text": "problems using a fault injection technology um it's a new kind of quality assurance testing that's typically not",
    "start": "87119",
    "end": "92640"
  },
  {
    "text": "done uh inside of software vendors today but it's really good at finding problems and in fact it's one of the primary ways",
    "start": "92640",
    "end": "99200"
  },
  {
    "text": "that hackers actually find zero day spits among other methods so um to get started I'm going",
    "start": "99200",
    "end": "106200"
  },
  {
    "text": "to kind of talk about bad software and I'm going to talk about it in the context of uh out of not just security",
    "start": "106200",
    "end": "112880"
  },
  {
    "text": "but reliability because I think security is a subset of reliability and I'm going to talk about Reliable Software by",
    "start": "112880",
    "end": "118960"
  },
  {
    "text": "talking about reliable software we are by default also talking about security um some of the things that come to mind",
    "start": "118960",
    "end": "125560"
  },
  {
    "text": "when I think about bad software is I think about the software out there that will take an SQL tick in the wrong place",
    "start": "125560",
    "end": "130920"
  },
  {
    "text": "and disclose all the records of your database so exposing confidential data is something that bad software does um I",
    "start": "130920",
    "end": "137959"
  },
  {
    "text": "think about Microsoft SQL server and the fact that I can grind it to a halt by sending this exactly just correctly formed packet and it complete wedges the",
    "start": "137959",
    "end": "144640"
  },
  {
    "text": "protocol parser so it crashes that's a type of software fault that's bad software um obviously buffer overflows",
    "start": "144640",
    "end": "151640"
  },
  {
    "text": "one of the most insu but effective types of attacks um that's an execution flaw an architecture flaw in the execution uh",
    "start": "151640",
    "end": "158400"
  },
  {
    "text": "of the code I mean that's bad software and you know privilege elevation things like that um bad software is very expensive",
    "start": "158400",
    "end": "166440"
  },
  {
    "text": "it costs people a lot of money uh and so I want to kind of talk about some kind of famous examples of software failures",
    "start": "166440",
    "end": "173360"
  },
  {
    "text": "that have cost cause catastrophic loss either in terms of of life or damages um",
    "start": "173360",
    "end": "179599"
  },
  {
    "text": "the Denver airport is a famous example they have a they have an automated baggage system that runs on carts then",
    "start": "179599",
    "end": "186239"
  },
  {
    "text": "the airport itself was delayed for 11 months opening because the baggage system the software that ran it failed",
    "start": "186239",
    "end": "192360"
  },
  {
    "text": "to detect um failure uh faults within the the tracking system that is a bag",
    "start": "192360",
    "end": "197440"
  },
  {
    "text": "falls off a cart gets in the way of a cart um they can't correctly detect this carts run into other carts completely",
    "start": "197440",
    "end": "204159"
  },
  {
    "text": "full baggage carts are filled Again by the loaders um empty carts are unloaded",
    "start": "204159",
    "end": "209439"
  },
  {
    "text": "and this caused an 11-month delay now that doesn't in itself seem like a big deal but the fact that they were paying",
    "start": "209439",
    "end": "215040"
  },
  {
    "text": "a million dollars a day in fines on their bond every single day for the 11 months they really added up and that was",
    "start": "215040",
    "end": "221439"
  },
  {
    "text": "a software failure that was extremely expensive this is a ridiculously funny",
    "start": "221439",
    "end": "226480"
  },
  {
    "text": "picture that I found on the internet this is the last photograph taken from the Mars Lander moments before it crashed into the surface of the planet",
    "start": "226480",
    "end": "233519"
  },
  {
    "text": "it's kind of cool because it has these little fractal diagrams like ripping over there and stuff and it's kind of fascinating to me it's almost like a",
    "start": "233519",
    "end": "239360"
  },
  {
    "text": "piece of like what software looks like right before it's about to",
    "start": "239360",
    "end": "244519"
  },
  {
    "text": "die um the reason why this Mars Lander crash is because um there was some bad",
    "start": "245720",
    "end": "250959"
  },
  {
    "text": "software in there some code uh that was doing bad translation between units and a numerical calculation went bad and",
    "start": "250959",
    "end": "257479"
  },
  {
    "text": "what it did is it shut off its descent descent engines prematurely now if you know anything about astrophysics one of",
    "start": "257479",
    "end": "263280"
  },
  {
    "text": "the things you'll know note is that trying to make the Mars Lander land where it's supposed to is like trying to",
    "start": "263280",
    "end": "268560"
  },
  {
    "text": "take a BB gun and hit a piece of paper that is turned sideways and pointing at you from across the football field and",
    "start": "268560",
    "end": "275120"
  },
  {
    "text": "so the tiny little failure anywhere a little pertubation in numbers can cause a catastrophic failure so this was a $65",
    "start": "275120",
    "end": "281320"
  },
  {
    "text": "million failure um not to mention all the time and energy lost uh and from the",
    "start": "281320",
    "end": "286440"
  },
  {
    "text": "people at Nasa that were trying to manage that mission um this is an Osprey Aircraft it's kind of a weird half breed",
    "start": "286440",
    "end": "292680"
  },
  {
    "text": "between an airplane and a helicopter it takes a vertical lift off and they can fly like an airplane um it has a",
    "start": "292680",
    "end": "297960"
  },
  {
    "text": "software system on it that it manages all the hydraulic systems and a somewhat",
    "start": "297960",
    "end": "303000"
  },
  {
    "text": "famous uh episode occurred when the hydraulic system failed the backup system was there but it failed to come",
    "start": "303000",
    "end": "308880"
  },
  {
    "text": "online because of a software glitch and for Marines lost their lives so software failures when we think about them we",
    "start": "308880",
    "end": "315240"
  },
  {
    "text": "sometimes think about our little problems in our little DMZ but what we have to realize is that software is per",
    "start": "315240",
    "end": "320319"
  },
  {
    "text": "permeating every part of our Lives everything from you know your shower head to your toaster it's going to have",
    "start": "320319",
    "end": "325800"
  },
  {
    "text": "little microprocessors in there and as that continues obviously all that's going to run on some sort of code and",
    "start": "325800",
    "end": "331759"
  },
  {
    "text": "that codee's going to have problems and maybe malicious people will be getting into the code Maybe by accident it'll be",
    "start": "331759",
    "end": "336840"
  },
  {
    "text": "failing to do things properly do these two pictures look alike these two",
    "start": "336840",
    "end": "342199"
  },
  {
    "text": "aircraft not to us um human beings have really good pattern recognition system so what I see on the bottom is an Airbus",
    "start": "342199",
    "end": "349280"
  },
  {
    "text": "and a nice smooth front and on top I see it looks like some you know a pretty pretty mean looking fighter aircraft to",
    "start": "349280",
    "end": "355039"
  },
  {
    "text": "a United States Navy ship and its radar and the software that's running the radar radar it couldn't tell the",
    "start": "355039",
    "end": "360600"
  },
  {
    "text": "difference between these two and it shot it down and killed 290 people you probably remember this was a pretty",
    "start": "360600",
    "end": "366199"
  },
  {
    "text": "famous example this was a software failure that was also compounded by a human interface problem with the",
    "start": "366199",
    "end": "372000"
  },
  {
    "text": "software and the official statement from the Navy is it was cryptic and misleading",
    "start": "372000",
    "end": "377199"
  },
  {
    "text": "output that was a catastrophic software failure um another catastrophic software",
    "start": "377199",
    "end": "382319"
  },
  {
    "text": "failure that we're all very familiar with is I love you now I've gotten numerous um different uh references to",
    "start": "382319",
    "end": "387880"
  },
  {
    "text": "how much it cost and none of them actually add it up to the same number so I chose this one this may not be the exact number but all the all the",
    "start": "387880",
    "end": "393840"
  },
  {
    "text": "estimates were in the billions $8.5 billion mistake because someone at Microsoft thought it would be a good",
    "start": "393840",
    "end": "399319"
  },
  {
    "text": "idea to just simply execute code that's mailed to you with no authentication whatsoever somehow that was supposed to",
    "start": "399319",
    "end": "404639"
  },
  {
    "text": "be a feature not a bug well that was a very expensive feature um there's lots of other",
    "start": "404639",
    "end": "410520"
  },
  {
    "text": "examples of bad software that we can talk about but I'm just trying to make some points and kind of lay the groundwork um now I'd like to talk about",
    "start": "410520",
    "end": "417759"
  },
  {
    "text": "some of the reasons I think why we've red here uh in the state we are with all the bad software that we",
    "start": "417759",
    "end": "425360"
  },
  {
    "text": "have um one of the first things that I I think is true is that network software",
    "start": "426479",
    "end": "431599"
  },
  {
    "text": "traditionally is not designed to withstand a hostile environment that's changing I think people who are",
    "start": "431599",
    "end": "436840"
  },
  {
    "text": "developing software today are realizing that their their software is not going to be deployed on a pink fluffy towel in",
    "start": "436840",
    "end": "442080"
  },
  {
    "text": "a perfect little room with white walls no it's going to be thrown into a deep Chasm filled with hostile people kicking",
    "start": "442080",
    "end": "448240"
  },
  {
    "text": "and screaming and stabbing at it and so that's what people need to think of when they build software that's a mindset",
    "start": "448240",
    "end": "453520"
  },
  {
    "text": "shift and that's one of the reasons why we have bad software today in terms of at least security um another reason is",
    "start": "453520",
    "end": "459440"
  },
  {
    "text": "we get the development tools that we have have not evolved to the point where they prevent you from making ridiculously stupid errors like buffer",
    "start": "459440",
    "end": "465319"
  },
  {
    "text": "overflows using stir copy that's also changing if you look at Microsoft they're starting to to change the way",
    "start": "465319",
    "end": "471199"
  },
  {
    "text": "the compiler Works to prevent you from making that mistake new language Technologies obviously not C but newer",
    "start": "471199",
    "end": "477639"
  },
  {
    "text": "language Technologies are designed to to prevent you from making these silly kinds of mistakes another reason why is",
    "start": "477639",
    "end": "483039"
  },
  {
    "text": "that QA testing doesn't have a methodology that addresses security problems um and I'll talk more about",
    "start": "483039",
    "end": "488120"
  },
  {
    "text": "that and I think the final and most important reason is is customers",
    "start": "488120",
    "end": "493159"
  },
  {
    "text": "continue to pay for crappy code you buy it and you eat it and that's the way it",
    "start": "493159",
    "end": "498599"
  },
  {
    "text": "is if you stopped buying products that were written like you'd stop having the",
    "start": "498599",
    "end": "505159"
  },
  {
    "text": "problems okay so the problem's getting worse uh this is a trend um in order to compete",
    "start": "508440",
    "end": "514240"
  },
  {
    "text": "obviously software vendors have to give you new Services uh we have new kinds of telephones we have all kinds of new features added to things in our lives so",
    "start": "514240",
    "end": "521039"
  },
  {
    "text": "to do this um you're competing with other people as a vendor I'm competing with another person out there who's got a new feature so I got to add a feature",
    "start": "521039",
    "end": "527399"
  },
  {
    "text": "the market demands that for me so there's a two there's a two-way street here again I'm giving the features out",
    "start": "527399",
    "end": "532640"
  },
  {
    "text": "but the Market's also demanding it um these new features that remain untested it hasn't been properly tested this leads a lot to the software failures um",
    "start": "532640",
    "end": "539680"
  },
  {
    "text": "there's more connections devices and code I'm going to kind of talk about some of the um some of the code uh",
    "start": "539680",
    "end": "544839"
  },
  {
    "text": "everybody here has a cell phone probably um let me think about this for a second computers used to be gigantic and",
    "start": "544839",
    "end": "552519"
  },
  {
    "text": "you'd walk into them today computers hang on your belt loop I have a I have a kiaer smartphone",
    "start": "552519",
    "end": "558839"
  },
  {
    "text": "and it has its own file system and it has an embedded operating system and I can get email so how long is it going to",
    "start": "558839",
    "end": "564519"
  },
  {
    "text": "and by the way the operating system on these phones and palm pilots and different embedded devices they aren't",
    "start": "564519",
    "end": "569720"
  },
  {
    "text": "compartmented in any way it's kind of like Windows 95 any program that gets in there has free and Total Access to every",
    "start": "569720",
    "end": "575320"
  },
  {
    "text": "other program's memory space so what happens when I get a piece of email with a malformed header and that header",
    "start": "575320",
    "end": "581279"
  },
  {
    "text": "somehow you know the parser goes astray and there's a buffer overflow and somebody has some you know arm code or some kind of buffer overflow that fits",
    "start": "581279",
    "end": "587360"
  },
  {
    "text": "the device that I'm on and it spreads spreads through the cellular phone network in a matter of hours we're talking millions of devices it's not a",
    "start": "587360",
    "end": "594079"
  },
  {
    "text": "question of if this can happen it's a question of when it will happen so we have more protocols",
    "start": "594079",
    "end": "601320"
  },
  {
    "text": "obviously that leads to it the high degree of connectivity makes it possible for Cascade failures there are really good historical examples of this um in",
    "start": "601320",
    "end": "608360"
  },
  {
    "text": "power grids and communication systems where one tiny failure in one little piece of the network propagates across",
    "start": "608360",
    "end": "614160"
  },
  {
    "text": "the whole board and shuts down all the power across you know the state um it's happened before it'll happen again in",
    "start": "614160",
    "end": "619480"
  },
  {
    "text": "terms of communication you probably know that there's a certain number of bugs per thousand lines of code there's statistics for that well here's some",
    "start": "619480",
    "end": "625560"
  },
  {
    "text": "code um some code that I uh number of lines of code and some popular systems here that I found um the space station",
    "start": "625560",
    "end": "631839"
  },
  {
    "text": "is kind of interesting it has 40 million lines of code on it aing 777 has 7 million lines um codee's getting",
    "start": "631839",
    "end": "638240"
  },
  {
    "text": "obviously more complex as we move forward I don't know if you've tried to installnet but it actually took one of",
    "start": "638240",
    "end": "643839"
  },
  {
    "text": "my guys like three or four hours to install it it's huge so how many lines of code am I putting on my system in my",
    "start": "643839",
    "end": "649200"
  },
  {
    "text": "development environment how many lines of code am I depending on in 1983 Microsoft Word was only 27,000 lines of",
    "start": "649200",
    "end": "655360"
  },
  {
    "text": "code so that's just kind of G you an idea that we're continually increasing in this area so that's one contributor",
    "start": "655360",
    "end": "661600"
  },
  {
    "text": "the other is exposure um systems that were typically behind closed doors are now completely open and the threat",
    "start": "661600",
    "end": "667920"
  },
  {
    "text": "profile has changed the internet started with 12 nodes so machines that have",
    "start": "667920",
    "end": "673480"
  },
  {
    "text": "traditionally been behind closed doors are now like I said hanging on your belt loop um here's a cool little slide I",
    "start": "673480",
    "end": "679920"
  },
  {
    "text": "have I did some calculations I did this on my own uh there's there's uh I'm",
    "start": "679920",
    "end": "685040"
  },
  {
    "text": "going to be kind of conservative here because I actually don't know what the real numbers are going to turn out to be but on average there's 5 to 50 uh bugs",
    "start": "685040",
    "end": "691320"
  },
  {
    "text": "per thousand lines of code this is something that's pretty well understood and established so I'm going to say um",
    "start": "691320",
    "end": "697399"
  },
  {
    "text": "there's five bugs per thousand lines of code I'm just going to use the smallest number what I did is I calculated the average number of executables on a",
    "start": "697399",
    "end": "705000"
  },
  {
    "text": "system a Windows system in this case and I was counting dlls and then I extrapolated this to to a 30,000 node",
    "start": "705000",
    "end": "711959"
  },
  {
    "text": "Network the idea here is I want to tell you how many back doors are in in a typical Enterprise Network today so for",
    "start": "711959",
    "end": "718360"
  },
  {
    "text": "3,000 executor abl I did some compilations with C code and found that a typical line of C code usually equates",
    "start": "718360",
    "end": "724279"
  },
  {
    "text": "about 10 bytes of actual op code so there's about 100K per XI on average on",
    "start": "724279",
    "end": "730240"
  },
  {
    "text": "the system I was analyzing that's 10,000 lines of code per exi five bugs per thousand lines of code minimum that means we have 50 bugs per per executable",
    "start": "730240",
    "end": "737399"
  },
  {
    "text": "okay now we're going to extrapolate that to a 30,000 node Network we have this 150,000 bugs per",
    "start": "737399",
    "end": "744639"
  },
  {
    "text": "host times 30,000 hosts 4.5 billion bugs there's 4 .5 billion software bugs in uh",
    "start": "744639",
    "end": "751959"
  },
  {
    "text": "30,000 node Network now how many of those are security bugs not all of them obviously",
    "start": "751959",
    "end": "758800"
  },
  {
    "text": "so I don't know if this is too uh too big of a number or not I picked 10% maybe 10% of them have some kind of",
    "start": "758800",
    "end": "764240"
  },
  {
    "text": "security imp implication so in the Enterprise there's 500 million security bugs if only 10% of all the security",
    "start": "764240",
    "end": "770399"
  },
  {
    "text": "bugs can actually be exercised by someone outside of the local system in other words I'm making the assumption",
    "start": "770399",
    "end": "775440"
  },
  {
    "text": "that most of them are local in nature if only 10% of those can be exercised from remote there's 5 million remote security",
    "start": "775440",
    "end": "780880"
  },
  {
    "text": "bugs in a typical Enterprise Network that's 30,000 notes it's a impossible problem to solve no one is going to go",
    "start": "780880",
    "end": "786440"
  },
  {
    "text": "out and Patch 5 million holes another contributor to the problem",
    "start": "786440",
    "end": "791639"
  },
  {
    "text": "is the bleeding edge stuff we're talking about the market demands Windows 2000 Shi was 63,000 known bugs as long as we",
    "start": "791639",
    "end": "796760"
  },
  {
    "text": "continue to demand software that's always on the bleeding engine has the latest features this is what's going to happen I mean it is a market and",
    "start": "796760",
    "end": "803079"
  },
  {
    "text": "Microsoft can't afford to fix all the bugs or otherwise you'd wait two years and pay 10 times as much for the same software and so yes would you got to ask",
    "start": "803079",
    "end": "809839"
  },
  {
    "text": "yourself are you helping contribute to the software Problem by buying crappy code and if you can actually say I'll",
    "start": "809839",
    "end": "816199"
  },
  {
    "text": "wait two years for that feature I'll use a word processor that was state-of-the-art five years ago because it's good enough for me then you're",
    "start": "816199",
    "end": "822040"
  },
  {
    "text": "doing a good thing if you're not paying for software I guess it doesn't matter but if you're buying it for your company you might want to consider not updating",
    "start": "822040",
    "end": "828600"
  },
  {
    "text": "to the latest and greatest if something were new a brand",
    "start": "828600",
    "end": "834560"
  },
  {
    "text": "new bug comes out it's reasonable to expect that software vendors won't have time to fix it immediately but the",
    "start": "834560",
    "end": "840160"
  },
  {
    "text": "Morris worm used a buffer overflow that was 15 years ago and I pause it that 15",
    "start": "840160",
    "end": "845680"
  },
  {
    "text": "years is long enough to wait software vendors should be expected",
    "start": "845680",
    "end": "851399"
  },
  {
    "text": "to release code that has no buffer overflows none zero not even one or",
    "start": "851399",
    "end": "857800"
  },
  {
    "text": "two I'll go back to that in a typical software shop people",
    "start": "860600",
    "end": "866120"
  },
  {
    "text": "gather around and they have their bug list in front of them and they say we're going to defer this we'll defer that",
    "start": "866120",
    "end": "871360"
  },
  {
    "text": "we'll patch this in the next release we're going to completely ignore that though that one's important enough that we need to fix it because we have a big",
    "start": "871360",
    "end": "876440"
  },
  {
    "text": "customer who knows it's there all right that happens all the time in a software shop in other Industries if you have a",
    "start": "876440",
    "end": "883360"
  },
  {
    "text": "safety critical bug in one of your one of your things that you're selling and it gets out that you knew about it and",
    "start": "883360",
    "end": "888440"
  },
  {
    "text": "you let it go out they can get sued not in software so there's no incentive from",
    "start": "888440",
    "end": "893560"
  },
  {
    "text": "that angle they can afford not to fix their bugs Hardware vendors on the other",
    "start": "893560",
    "end": "898759"
  },
  {
    "text": "hand they really care about it now Intel is a good example they'll spend millions of dollars testing their microchips",
    "start": "898759",
    "end": "903880"
  },
  {
    "text": "using fault injection and other techniques and the reason why is if they get it wrong they have to recall the",
    "start": "903880",
    "end": "909519"
  },
  {
    "text": "chip maybe that's less so now because they have flashable firmware into the chip but in the old days that's how it worked so here's an example the pennium",
    "start": "909519",
    "end": "916360"
  },
  {
    "text": "foof bug half a billion dollars is what it costs them to recall it no they can't afford to ship stuff out the front door",
    "start": "916360",
    "end": "922279"
  },
  {
    "text": "that's broken they have to do their best because it's going to hurt them a lot Microsoft on the other hand code red how",
    "start": "922279",
    "end": "927839"
  },
  {
    "text": "many billions of dollars that caus and damages they just put a patch on their website pass the cost of the bug",
    "start": "927839",
    "end": "933240"
  },
  {
    "text": "directly onto you the consumer another reason why we have bad",
    "start": "933240",
    "end": "938440"
  },
  {
    "text": "software is that the mechanisms for testing software are completely different from from physical systems uh",
    "start": "938440",
    "end": "944240"
  },
  {
    "text": "software is not a Steel Bridge here's an example I can put a th000 kilogram weight test on a girder I can do a",
    "start": "944240",
    "end": "949759"
  },
  {
    "text": "10,000 kilogram weight test on a girder and I can make assumptions about five six and 7,000 pounds with software it's",
    "start": "949759",
    "end": "955480"
  },
  {
    "text": "not like that to do that test I have to do 1,00 1,001 102 there's no guarantee the system is not continuous the state",
    "start": "955480",
    "end": "962839"
  },
  {
    "text": "changes are not gradual or predictable in any way here's a number represented in the computer a computer is uh a car is an",
    "start": "962839",
    "end": "970800"
  },
  {
    "text": "analog system I can be driving a car and my brakes fail the car will Coast to a stop if my car was a digital car and",
    "start": "970800",
    "end": "976800"
  },
  {
    "text": "something went wrong my my windshield could turn to molten lava my car could turn inside out and my wheels could turn",
    "start": "976800",
    "end": "981839"
  },
  {
    "text": "to white doves and fly away just like that that makes it it's a different",
    "start": "981839",
    "end": "988160"
  },
  {
    "text": "problem to test software another one is an attitude problem a lot of developers have which is let the compiler fix it",
    "start": "988160",
    "end": "994199"
  },
  {
    "text": "for me in the old days you had to book time on a Mainframe and get you know maybe two weeks in advance so you'd",
    "start": "994199",
    "end": "1000360"
  },
  {
    "text": "spend a lot of time writing out your code perfectly and because you didn't want to get it wrong the first time",
    "start": "1000360",
    "end": "1005680"
  },
  {
    "text": "today you can sit there and just slack code all day long at the compiler and as long as the warnings and errors go away",
    "start": "1005680",
    "end": "1010720"
  },
  {
    "text": "you pretty much you've done your job so much software gets written like that and it stays that way once it passes the",
    "start": "1010720",
    "end": "1015759"
  },
  {
    "text": "compiler test it gets checked into the source safe server and ends up in the next build that's in the production",
    "start": "1015759",
    "end": "1022000"
  },
  {
    "text": "product now people do learn from their mistakes um we're starting finally to see people trying to fix buffer",
    "start": "1022440",
    "end": "1028120"
  },
  {
    "text": "overflows that we've known about for 15 years um form does follow failure um here's a different example in a",
    "start": "1028120",
    "end": "1033400"
  },
  {
    "text": "different engineering field um if you're familiar with Power Systems you know that they use AC capacitors to um to uh",
    "start": "1033400",
    "end": "1041918"
  },
  {
    "text": "uh stabilize the power uh in the grid there's this thing called sub secrist resonance and what it is is you because",
    "start": "1041919",
    "end": "1049400"
  },
  {
    "text": "of some induction in the line oscillations will be get created in the capacitor and they'll travel throughout the whole system now nobody thought that",
    "start": "1049400",
    "end": "1054799"
  },
  {
    "text": "would be a big deal but actually at this power Generating Station in uh Southern",
    "start": "1054799",
    "end": "1059919"
  },
  {
    "text": "Nevada it snapped their shaft on their on their generator the oscillations",
    "start": "1059919",
    "end": "1065320"
  },
  {
    "text": "actually fed back through the system became a physical effect on the generator and actually snapped the shaft in half first time it happened they",
    "start": "1065320",
    "end": "1070600"
  },
  {
    "text": "thought it was a complete fluke oh this is ridiculous the second time it happened they realized it was actually a",
    "start": "1070600",
    "end": "1076039"
  },
  {
    "text": "pattern here and now it's a very serious thing that's considered in every single electrical design that's going out so",
    "start": "1076039",
    "end": "1082240"
  },
  {
    "text": "hopefully that'll be the case with some of the software stuff so the second part of my talk is going to be on how can we fix bad software I think there's a lot",
    "start": "1082240",
    "end": "1088000"
  },
  {
    "text": "of approaches people have tried to take the one that I focus most on is Fault injection but I'm going to try to talk about some of the others as well um the",
    "start": "1088000",
    "end": "1094919"
  },
  {
    "text": "first thing I think that will help fix bad software is better compilers and languages and I do think that Microsoft's doing a good thing Capital",
    "start": "1094919",
    "end": "1101120"
  },
  {
    "text": "GT uh and from that perspective uh failure failure analysis is very important in Fault injection that's not",
    "start": "1101120",
    "end": "1107000"
  },
  {
    "text": "done very widely although in Academia and in the military it is done with software systems it's not typically done",
    "start": "1107000",
    "end": "1112240"
  },
  {
    "text": "with commercial software another one is to hold vendors liable but to be honest with things like UCA I don't think",
    "start": "1112240",
    "end": "1118240"
  },
  {
    "text": "that's going to happen anytime soon I think what people what the software vendors would like to do is actually sell you software like imagine this",
    "start": "1118240",
    "end": "1125520"
  },
  {
    "text": "pretend like the software salesman is selling you a car it's like them saying I'm going to sell you this car sir and",
    "start": "1125520",
    "end": "1130799"
  },
  {
    "text": "you're going to believe that this a perfectly secure and safe vehicle and by the way it's illegal for you to open the",
    "start": "1130799",
    "end": "1136280"
  },
  {
    "text": "hood and look inside and it's also illegal for you to have somebody else come over and look inside for you you",
    "start": "1136280",
    "end": "1142120"
  },
  {
    "text": "can't kick the tires oh and by the way if you are driving down the road with it and all the wheels fall off and you get",
    "start": "1142120",
    "end": "1147360"
  },
  {
    "text": "into an accident You Can't Hold Us liable but you can come by the next version of our car where we have that that problem",
    "start": "1147360",
    "end": "1154440"
  },
  {
    "text": "fixed security testing is a different methodology than anybody's ever used in QA before the first and foremost rule of",
    "start": "1154640",
    "end": "1161840"
  },
  {
    "text": "security test testing is that you have to believe the software is going to be deployed in a completely untrusted and",
    "start": "1161840",
    "end": "1167720"
  },
  {
    "text": "hostile environment every single transaction you believe is going to be uh used by the by the by the",
    "start": "1167720",
    "end": "1173280"
  },
  {
    "text": "software flip it on flip it on its head and say what are the 10 other transactions somebody can get in here that I'm not assuming right now test for",
    "start": "1173280",
    "end": "1179360"
  },
  {
    "text": "the unexpected and the unknown it is a software reliability problem I believe security is so it's",
    "start": "1179360",
    "end": "1185159"
  },
  {
    "text": "like a stool here uh we have functional and performance testing there's big uh expensive tools out there that do this",
    "start": "1185159",
    "end": "1190720"
  },
  {
    "text": "for you rational software Mercury interactive they've been in the space for a long time and they can help you with functionality and performance does",
    "start": "1190720",
    "end": "1196559"
  },
  {
    "text": "it do a and C does it do ab and C 10,000 times a second like it's supposed to well security testing this does it do d",
    "start": "1196559",
    "end": "1202760"
  },
  {
    "text": "e and f now people do some security testing",
    "start": "1202760",
    "end": "1208799"
  },
  {
    "text": "today on software attack and pen is a a common way and I think it's very ad hoc in nature it's very incomplete um",
    "start": "1208799",
    "end": "1215280"
  },
  {
    "text": "typically it's for political reasons to guarantee a budget or something like that so you find a couple of problems and what probably are hundreds of",
    "start": "1215280",
    "end": "1221240"
  },
  {
    "text": "problems and that's enough pasted in the back of report show that somebody dumped the database and boom you're done attack and pen is not a very complete or",
    "start": "1221240",
    "end": "1227919"
  },
  {
    "text": "accurate way to find security bugs furthermore it's typically applied to production environments not done in development where the cost of fixing",
    "start": "1227919",
    "end": "1234159"
  },
  {
    "text": "bugs is far less source code review is another method nobody in the software",
    "start": "1234159",
    "end": "1239320"
  },
  {
    "text": "vendors uh typically have the skills to do this very well and if you Outsource it it's very expensive um and it doesn't",
    "start": "1239320",
    "end": "1245799"
  },
  {
    "text": "address the operational environment in which the source code is going to be placed but it is it is a very effective",
    "start": "1245799",
    "end": "1250840"
  },
  {
    "text": "method I think there was a talk earlier today or yesterday I can't remember uh that was talking about different tricks",
    "start": "1250840",
    "end": "1255960"
  },
  {
    "text": "um a lot of people in the underground Community is uh source code review to find you know in open source at least uh",
    "start": "1255960",
    "end": "1262240"
  },
  {
    "text": "find problems that you know they publish on bug track and whatnot Network scanning that's a completely ridiculous",
    "start": "1262240",
    "end": "1267600"
  },
  {
    "text": "way to treat security network scanning um is basically reactive in nature it can only look for problems that you",
    "start": "1267600",
    "end": "1272640"
  },
  {
    "text": "already know about which means the hackers in Germany have already been using it for six months fault injection is the space I've been I've been",
    "start": "1272640",
    "end": "1278120"
  },
  {
    "text": "focusing in to find new vulnerabilities before they go out and then full disclosure is obviously another way but again it's reactive in nature you have",
    "start": "1278120",
    "end": "1283679"
  },
  {
    "text": "to wait for someone to tell you on bug track that there's a problem in the given software",
    "start": "1283679",
    "end": "1289200"
  },
  {
    "text": "um there's different ways to do fault injection and I'm going to focus uh probably more on fault injection for the rest of the",
    "start": "1289200",
    "end": "1295480"
  },
  {
    "text": "talk um one way to do fa injection is to actually instrument the source code and there's tools out there that do that U",
    "start": "1297120",
    "end": "1304240"
  },
  {
    "text": "they actually change the source code you recompile the source into a new executable and it will do things like",
    "start": "1304240",
    "end": "1310039"
  },
  {
    "text": "change uh you know variables change the way the paths of the code work and an effort to see how it fails this is good",
    "start": "1310039",
    "end": "1316440"
  },
  {
    "text": "because you can then see how if the binary got completely Foo barred by some sunspots from outer space what would",
    "start": "1316440",
    "end": "1321960"
  },
  {
    "text": "happen to the rest of the air aircraft control system around it you know if it gave bad output another way is binary",
    "start": "1321960",
    "end": "1327640"
  },
  {
    "text": "instrumentation I'm much more fond of that because I don't like changing the source code I think changing the source code kind of defeats the purpose of",
    "start": "1327640",
    "end": "1333640"
  },
  {
    "text": "testing the original product itself uh binary instrumentation just uses tricks like call hooking system call hooking uh",
    "start": "1333640",
    "end": "1340360"
  },
  {
    "text": "mutating memory structures and whatnot uh debugging apis uh using a test",
    "start": "1340360",
    "end": "1345480"
  },
  {
    "text": "harness a network testing uh network based input is another way which is which is what um Spike does is6 uh hail",
    "start": "1345480",
    "end": "1353279"
  },
  {
    "text": "storm the product that I sell these things change uh the network based input this is kind of interesting because",
    "start": "1353279",
    "end": "1358960"
  },
  {
    "text": "that's kind of how an attacker would usually get into the system is via the network so it's kind of applicable to Security in that in that way and Cham",
    "start": "1358960",
    "end": "1366760"
  },
  {
    "text": "works that way as well sorry um blackbox uh the good things about blackbox is",
    "start": "1366760",
    "end": "1372200"
  },
  {
    "text": "that it's easy to automate and it's really easy to find low hanging fruit um the bad thing about blackbox is",
    "start": "1372200",
    "end": "1378000"
  },
  {
    "text": "it's not going to find architectural errors and some of the more obscure bugs in the code are probably better suited",
    "start": "1378000",
    "end": "1384000"
  },
  {
    "text": "for a static analysis to locate but there's some really good tools out there uh University of Finland or some",
    "start": "1384000",
    "end": "1389240"
  },
  {
    "text": "University in Finland I don't remember who exactly built Proto protos found the asn1 encoding bug in uh SNMP there's",
    "start": "1389240",
    "end": "1396840"
  },
  {
    "text": "Spike uh which Dave iel presented on earlier today I6 is a really cool to tool for doing tcpip malformations and",
    "start": "1396840",
    "end": "1402960"
  },
  {
    "text": "it's been very effective wedging various routers and stuff and of course uh hell storm which show you actually in a",
    "start": "1402960",
    "end": "1409400"
  },
  {
    "text": "little while now this is a a spike script that Dave sent me a little while ago this is a zero day exploit on",
    "start": "1409400",
    "end": "1415200"
  },
  {
    "text": "Microsoft SQL that I believe he just released um this is a string there's a packet going into SQL he sees that",
    "start": "1415200",
    "end": "1422159"
  },
  {
    "text": "there's this string in there this Microsoft SQL Server is identifying itself and in the spike script you can",
    "start": "1422159",
    "end": "1427600"
  },
  {
    "text": "see that he's actually modeling the protocol here and then he's changing this string to be a buffer overflow and",
    "start": "1427600",
    "end": "1433520"
  },
  {
    "text": "pretty soon and this is actually the event log entry that popped up on my machine when I ran it and it caused an access violation it's probably",
    "start": "1433520",
    "end": "1440720"
  },
  {
    "text": "exploitable at the very least it shuts down the system here's David lichfield's recent",
    "start": "1440720",
    "end": "1446240"
  },
  {
    "text": "uh publishing as soon as I saw that come out I went to hail storm this is actually a screenshot of hail storm and uh modeled that attack in about five",
    "start": "1446240",
    "end": "1453559"
  },
  {
    "text": "seconds um here's the buffer injection here's the little lead bite in the UDP payload and then there's some asky",
    "start": "1453559",
    "end": "1459960"
  },
  {
    "text": "sequence number after that which is part of some kind of session idea or something very easy to reproduce and",
    "start": "1459960",
    "end": "1465200"
  },
  {
    "text": "deadly here's some screenshots of various pieces of software that I've managed to crash with hailstorm in my",
    "start": "1465200",
    "end": "1471640"
  },
  {
    "text": "lab over the past month um everything from a Dr Watson file which tells me the",
    "start": "1471640",
    "end": "1476960"
  },
  {
    "text": "line of code that it faulted on um our ever famous c0000005 access violation",
    "start": "1476960",
    "end": "1482520"
  },
  {
    "text": "that we like to see here's um this is purify rational purify telling me about some Heap corruption and one of the",
    "start": "1482520",
    "end": "1489320"
  },
  {
    "text": "funniest ones I got was the system may be under",
    "start": "1489320",
    "end": "1493880"
  },
  {
    "text": "attack white box testing is another approach and that's what you do when you have the source code or you use Ida Ida",
    "start": "1495679",
    "end": "1501600"
  },
  {
    "text": "to reverse assemble or reverse compile the source code it's more expensive in terms of time especially in an",
    "start": "1501600",
    "end": "1507679"
  },
  {
    "text": "Outsourcing it's typically going to be more expensive but it it is very thorough here's an example of me uh",
    "start": "1507679",
    "end": "1514880"
  },
  {
    "text": "reverse engineering a really interesting call I saw the name of this API call um",
    "start": "1514880",
    "end": "1520159"
  },
  {
    "text": "Canan eyes URI to path and I just knew I had to check it out I was trying to find a relative path traversal bug this is a",
    "start": "1520159",
    "end": "1526559"
  },
  {
    "text": "Solaris binary that I'm reversing here I can't tell you what platform it is in but um I can tell you that after looking",
    "start": "1526559",
    "end": "1533600"
  },
  {
    "text": "at it for a great deal of time I found you could not actually exploit it it is a different way to do it um as you can",
    "start": "1533600",
    "end": "1540279"
  },
  {
    "text": "see it's a very manual process here I'm I'm actually hand coding in comments and stuff as I go",
    "start": "1540279",
    "end": "1547279"
  },
  {
    "text": "through what I think is the next stage for this kind of technology is a fusion between white box and blackbox blackbox",
    "start": "1547279",
    "end": "1555000"
  },
  {
    "text": "again is good for generating input but without the white box and the static anal you can't get all the the",
    "start": "1555000",
    "end": "1561279"
  },
  {
    "text": "um you can't get the perspective on the context in which the data you're sending is being used there are really good",
    "start": "1561279",
    "end": "1568120"
  },
  {
    "text": "tools out there to help you with gray box but they are manual in nature U soft ice is really good because it has automatable break points I can set a",
    "start": "1568120",
    "end": "1575120"
  },
  {
    "text": "break point on a on a particular place in code and then write a regular expression that says only break if the",
    "start": "1575120",
    "end": "1581480"
  },
  {
    "text": "eax register points to the following string and then I can track my input through the system it's really cool GDB",
    "start": "1581480",
    "end": "1587679"
  },
  {
    "text": "has similar features um I Ida if you haven't been introduced to it and you're interested in learning more about this",
    "start": "1587679",
    "end": "1593360"
  },
  {
    "text": "kind of stuff it's not very expensive get one of your your brainiacs or yourself and buy one in your company and",
    "start": "1593360",
    "end": "1598480"
  },
  {
    "text": "start playing around with it um hail storm is another tool which I'll I'll do a screenshot on shortly instrumentation",
    "start": "1598480",
    "end": "1604600"
  },
  {
    "text": "helps a lot in graybox purify is incredible I love purify because it can help me find Heap corruption all over",
    "start": "1604600",
    "end": "1609960"
  },
  {
    "text": "the place one of the things if you're not using instrumentation and you're doing blackbox testing you have to wait for the thing to pop in other words you",
    "start": "1609960",
    "end": "1616600"
  },
  {
    "text": "wait for the ever famous segmentation violation to occur but if you're using something like rational you can actually",
    "start": "1616600",
    "end": "1622000"
  },
  {
    "text": "see the memory corruption that starts to lead up to a failure and that's actually better because sometimes the failure",
    "start": "1622000",
    "end": "1627320"
  },
  {
    "text": "doesn't occur for quite a while call hooks code coverage is another way if you want to know how effective your your",
    "start": "1627320",
    "end": "1633200"
  },
  {
    "text": "blackbox injection is you should run a coverage tool and get numbers um get the",
    "start": "1633200",
    "end": "1639000"
  },
  {
    "text": "numbers based on all the canalization routines all the filter routines everything's handling user supplied input anything's handling protocol",
    "start": "1639000",
    "end": "1646519"
  },
  {
    "text": "parsing um this is my contribution to the SQL zero day Fest at black hat um",
    "start": "1646600",
    "end": "1652840"
  },
  {
    "text": "this is me running purify here and you can see there's a heap corruption event that's that's this says a p",
    "start": "1652840",
    "end": "1660880"
  },
  {
    "text": "r okay right there here's hail storm I'm running some input to it and there's actually SQL Server running in the",
    "start": "1660880",
    "end": "1666799"
  },
  {
    "text": "background and I found a particular set of input that crashes it dead every time actually I think I can show it to",
    "start": "1666799",
    "end": "1673720"
  },
  {
    "text": "you this is hailstorm here it's very simple input",
    "start": "1673720",
    "end": "1678880"
  },
  {
    "text": "this is a TCP session to Port 1433 there's two null bytes followed by a 16bit sequence number so it's actually",
    "start": "1678880",
    "end": "1685320"
  },
  {
    "text": "going to send 65,000 packets starting from Z to 65535 and Then followed by 40",
    "start": "1685320",
    "end": "1690760"
  },
  {
    "text": "bytes of random data that goes anywhere from 0 to 255 so it's covering the whole range of possible values for each bite",
    "start": "1690760",
    "end": "1698279"
  },
  {
    "text": "this knocks it down dead it only takes about four or five",
    "start": "1698279",
    "end": "1703679"
  },
  {
    "text": "seconds and of course using purify this is an interesting thing here if it actually gives me the address of which",
    "start": "1703679",
    "end": "1709519"
  },
  {
    "text": "the heat corruption is occurring so if I was at Microsoft and a developer I could use that information to go cross",
    "start": "1709519",
    "end": "1714919"
  },
  {
    "text": "reference the actual line of source code that's causing problem or in the region of logic that's causing problems okay so",
    "start": "1714919",
    "end": "1720200"
  },
  {
    "text": "input path tracing is really important thing for graybox you want to try to track your input um I think that halvar",
    "start": "1720200",
    "end": "1725559"
  },
  {
    "text": "talk talked a little bit about this too but to say I want to track from the user supplied input which is completely",
    "start": "1725559",
    "end": "1730679"
  },
  {
    "text": "untrusted all the way to the trusted API call over here that is you know doing a file system operation or a database",
    "start": "1730679",
    "end": "1735960"
  },
  {
    "text": "operation so I talked about soft I you can set those conditional break points with redx that's a very good way to do it I recently was introduced to truss",
    "start": "1735960",
    "end": "1743240"
  },
  {
    "text": "which is a Solaris tool for tracking uh API calls um I have some screenshots here of some other Solutions as",
    "start": "1743240",
    "end": "1749519"
  },
  {
    "text": "well my trick uh Do What I Call Boron tagging um this is",
    "start": "1749519",
    "end": "1754600"
  },
  {
    "text": "actually um GDB under Solaris and I'm setting in a test string and you can see",
    "start": "1754600",
    "end": "1760840"
  },
  {
    "text": "that's my Boron tag test string and uh I see it get it used so here's here's the",
    "start": "1760840",
    "end": "1766080"
  },
  {
    "text": "API call um and it's actually kind of a funny name is URI evil so it must have",
    "start": "1766080",
    "end": "1771679"
  },
  {
    "text": "been there to prevent like an attack of some kind and uh I can see that my test ring is here and so I've set a little",
    "start": "1771679",
    "end": "1778120"
  },
  {
    "text": "thing to watch for that so Boron tagging is an effective way to track input fortunately there as far as I know there",
    "start": "1778120",
    "end": "1784200"
  },
  {
    "text": "aren't really any automated tools to do it for you currently now I know people are working on stuff like that here's a",
    "start": "1784200",
    "end": "1789720"
  },
  {
    "text": "truss this is truss truss is actually running against uh the Target and I can see multiple calls to stir copy",
    "start": "1789720",
    "end": "1795679"
  },
  {
    "text": "occurring what I do is I watch truss and then I do some input and if I see a stir copy go by I'm going to go look at the code that just did that because I just",
    "start": "1795679",
    "end": "1802159"
  },
  {
    "text": "ran a transaction that stir copy just happened it's not coincidence so I think okay there might be something I can do",
    "start": "1802159",
    "end": "1807880"
  },
  {
    "text": "there for a buffer overflow you could also do that for file system calls and other things under 132 there are also",
    "start": "1807880",
    "end": "1813080"
  },
  {
    "text": "options this is API spy 32 which is pretty cool um and it's free and so I just have a screenshot of that this is",
    "start": "1813080",
    "end": "1819039"
  },
  {
    "text": "Microsoft SQL Server making millions of calls to elster copy in a row now if I can just go in here and look at these",
    "start": "1819039",
    "end": "1825399"
  },
  {
    "text": "these actual arguments to the calls and figure out oh is that a reg registry key is that a file oh it's a registry key okay let me go make the registry key",
    "start": "1825399",
    "end": "1831679"
  },
  {
    "text": "really big and see what happens that's a blackbox approach to it or I can stick it in Ida and go find that line of code",
    "start": "1831679",
    "end": "1837799"
  },
  {
    "text": "that made that call and see if it's actually doing uh using stir copy properly so one of my assumptions when",
    "start": "1837799",
    "end": "1844320"
  },
  {
    "text": "I'm thinking about ripping apart software is that if there's code in the software to do it my assumption is it's",
    "start": "1844320",
    "end": "1850640"
  },
  {
    "text": "possible to do now that's obviously not 100% true but it's a good way to work",
    "start": "1850640",
    "end": "1856039"
  },
  {
    "text": "assume your filter code will fail assume that the the input to the API call in question will be completely controlled",
    "start": "1856039",
    "end": "1862720"
  },
  {
    "text": "by the user what can they get away with every single dll in the system has",
    "start": "1862720",
    "end": "1867799"
  },
  {
    "text": "code that's going to be in the process space that can do stuff um there's static analysis won't solve this problem",
    "start": "1867799",
    "end": "1873960"
  },
  {
    "text": "you have to load the program and actually run it I don't know if you know this but if you run pgp desktop pgp puts a dll on every single process space all",
    "start": "1873960",
    "end": "1880480"
  },
  {
    "text": "kinds of weird stuff like that occur there's a really cool to tool on CIS CIS internal.com called uh process Explorer",
    "start": "1880480",
    "end": "1887559"
  },
  {
    "text": "I think and it does some really cool things it shows you all the resources all the DLS and everything that's loaded so um eventually I think the operating",
    "start": "1887559",
    "end": "1895039"
  },
  {
    "text": "system is the last line of defense and your process permissions and access control is all you've got um one of the things I think is a cool approach if",
    "start": "1895039",
    "end": "1901480"
  },
  {
    "text": "you're going to do it this way is to find some vulnerable some some kinds of a API calls that are really easy to get",
    "start": "1901480",
    "end": "1906799"
  },
  {
    "text": "wrong uh set security descriptor daal is one of them and so here I have a little Pearl script that I wrote that's doing a",
    "start": "1906799",
    "end": "1913279"
  },
  {
    "text": "dump bin Imports on every single dll in my system and piping that through a Rex and just telling me every single uh dll",
    "start": "1913279",
    "end": "1919760"
  },
  {
    "text": "in my system is currently using that call somewhere I could follow this up by an automated ID script that goes and",
    "start": "1919760",
    "end": "1925039"
  },
  {
    "text": "checks to see if the third parameter is null which would be rather",
    "start": "1925039",
    "end": "1929880"
  },
  {
    "text": "interesting um okay so when you're going through the code you're looking for problems uh I'm just going to talk a",
    "start": "1930519",
    "end": "1936000"
  },
  {
    "text": "little I got a couple slides on what what you should look at obviously user inputs the key um anything that the user inputs to the system that gets used",
    "start": "1936000",
    "end": "1942320"
  },
  {
    "text": "somewhere that's trusted that's that's the eventual go goal so uh authentication calls um you know file",
    "start": "1942320",
    "end": "1948679"
  },
  {
    "text": "system calls database anything like a command shell this is all old hat to anybody who's been doing it for a while",
    "start": "1948679",
    "end": "1955440"
  },
  {
    "text": "um remote capabilities this is an interesting area of failure I might log in with a user ID and then I can also",
    "start": "1955440",
    "end": "1962840"
  },
  {
    "text": "log in with user ID of backback slm machine name or some IP address back username or SL doain or domain username",
    "start": "1962840",
    "end": "1970120"
  },
  {
    "text": "if somebody's not watching this stuff sometimes they'll paste directly into the target API uh something you you",
    "start": "1970120",
    "end": "1976159"
  },
  {
    "text": "supply on the outside and you can do this kind of remote kind of proxy to attack on the internal Network um data",
    "start": "1976159",
    "end": "1981480"
  },
  {
    "text": "source names for databases is another area this happens a lot they'll paste the server name or something in when",
    "start": "1981480",
    "end": "1986559"
  },
  {
    "text": "they don't realize that the server name is controlled by the host field from the header of HTTP request uh authentication",
    "start": "1986559",
    "end": "1992440"
  },
  {
    "text": "calls are also an interes place to look uh response aggregation is an area like",
    "start": "1992440",
    "end": "1997480"
  },
  {
    "text": "response aggregation is if I can do username and then I get an error or username and the bad password and it givs me a different error than username",
    "start": "1997480",
    "end": "2003679"
  },
  {
    "text": "and uh or bad username and you know forget the password at that point that's response aggregation that's one place to",
    "start": "2003679",
    "end": "2009240"
  },
  {
    "text": "look and code for vulnerabilities no lockout I can do a Brute Force for as long as I want failed logging uh if I",
    "start": "2009240",
    "end": "2015159"
  },
  {
    "text": "can make a request and it doesn't get logged like I don't want to you know attack your T net or your SSH Port but I",
    "start": "2015159",
    "end": "2020480"
  },
  {
    "text": "could attack your pot 3 Port all day long and it would be going against the same authenication database then that's a problem um are specified in remote",
    "start": "2020480",
    "end": "2027440"
  },
  {
    "text": "demand or Target in terms of failed logging I think this is kind of a funny example of that these two requests are",
    "start": "2027440",
    "end": "2032960"
  },
  {
    "text": "100% equivalent under IAS and Apache but they don't look equivalent to us",
    "start": "2032960",
    "end": "2038720"
  },
  {
    "text": "but they're exactly the same um this would possibly defeat an IDS system or if it gets logged and you can get",
    "start": "2038720",
    "end": "2044919"
  },
  {
    "text": "certain control characters in there you can make the logging fail so it doesn't notice that you just made this",
    "start": "2044919",
    "end": "2050679"
  },
  {
    "text": "request um controlling the file system is an obvious Target we've all seen the dot do do do all day long so we",
    "start": "2050679",
    "end": "2056960"
  },
  {
    "text": "know about that um can you create files in Target directory that's one that I've seen a lot coming out recently where",
    "start": "2056960",
    "end": "2062440"
  },
  {
    "text": "someone figures out how to create a file in a directory and they name it something. ASP and they've just created this huge oblique method of getting all",
    "start": "2062440",
    "end": "2069760"
  },
  {
    "text": "this code to run for them and then of course remote path names is another area we talked about buff rolls and execution",
    "start": "2069760",
    "end": "2075720"
  },
  {
    "text": "flaws architecture flaws lack of Randomness in the keys it's a good place to look no authentication as ridiculous it sounds you can still find all kinds",
    "start": "2075720",
    "end": "2081960"
  },
  {
    "text": "of places all over the internet where you can just grab stuff you're not supposed to be able to get nobody cares or seems to care about authenticating",
    "start": "2081960",
    "end": "2087158"
  },
  {
    "text": "you um compartments here's an interesting example of a bug related to compartmentalization internet",
    "start": "2087159",
    "end": "2092240"
  },
  {
    "text": "information server a while back had this bug where it was using the same buffer in memory for crypted text and clear",
    "start": "2092240",
    "end": "2098079"
  },
  {
    "text": "text and if you send the requests to the server fast enough you could cause it to hiccup about one out of a thousand times",
    "start": "2098079",
    "end": "2103880"
  },
  {
    "text": "it would send you the clear text instead of the crypto text and then you could course do a crypto analysis at that point so compartmentalization if you see",
    "start": "2103880",
    "end": "2110880"
  },
  {
    "text": "that the the programmer is not using any kind of Concepts like that then that's that's going to get you in eras",
    "start": "2110880",
    "end": "2116640"
  },
  {
    "text": "conditions all right so I've kind of gone through that so how do we take control of the",
    "start": "2116640",
    "end": "2122400"
  },
  {
    "text": "problem I'm almost done with my talk here um your AR we we talked about why what",
    "start": "2122400",
    "end": "2129079"
  },
  {
    "text": "is bad software and the kinds of Damages that can be Associated everything from you know Microsoft word's not working",
    "start": "2129079",
    "end": "2135400"
  },
  {
    "text": "right for me to um millions of dollars in Damages to someone lose their life um we talked about some of the",
    "start": "2135400",
    "end": "2141960"
  },
  {
    "text": "solutions or kind of how we got to have bad software and then some of the solutions that we could use to try to help make software better if we're",
    "start": "2141960",
    "end": "2148680"
  },
  {
    "text": "analyzing it um how do we take control of it well I think you should test before you buy try try and buy Force",
    "start": "2148680",
    "end": "2155480"
  },
  {
    "text": "vendors into standoffs if you're all from if if you let say's say you're a pharmaceutical create a shared lab get together with all your other",
    "start": "2155480",
    "end": "2160960"
  },
  {
    "text": "pharmaceutical buddies and create a shared lab where you do some extensive testing on it and actually put a",
    "start": "2160960",
    "end": "2166760"
  },
  {
    "text": "acceptance criteria in place say things like 15 years is too long you don't get to have buffer overflows anymore we get",
    "start": "2166760",
    "end": "2172160"
  },
  {
    "text": "to remove that from your deck of cards now if they have a buffer overflow say no we're going to go to the other the",
    "start": "2172160",
    "end": "2177319"
  },
  {
    "text": "other product if chances are if you do that though you're going to find buffer overflows in every product that you're looking at so it's not going to be a",
    "start": "2177319",
    "end": "2184599"
  },
  {
    "text": "Panacea the fact is is if you know about vulnerability in the vendor software then you have a position of strength in",
    "start": "2184599",
    "end": "2191839"
  },
  {
    "text": "regards to them especially if you have buying power if you need any examples of this just look at trustworthy Computing",
    "start": "2191839",
    "end": "2197800"
  },
  {
    "text": "the only reason Microsoft cares is because the Gartner report came out and people stopped buying their products for",
    "start": "2197800",
    "end": "2203640"
  },
  {
    "text": "a while in the financial sector and started to hit their bottom line and they they saw it it was hitting their bottom line and costing them money and",
    "start": "2203640",
    "end": "2209720"
  },
  {
    "text": "it is about money so they decided to make the memo and change how Microsoft was addressing the problem I think it's",
    "start": "2209720",
    "end": "2215119"
  },
  {
    "text": "a good thing but I think it's excellent example of how nobody cares unless it costs them",
    "start": "2215119",
    "end": "2222000"
  },
  {
    "text": "money if you can't get together and create a shared testing Library you don't have the capability in",
    "start": "2222040",
    "end": "2227119"
  },
  {
    "text": "house ask the vendor to produce a technical credible audit I mean it's not as good I mean it have to be an outside",
    "start": "2227119",
    "end": "2233200"
  },
  {
    "text": "firm the liability thing I I honestly I I really don't know you can tell me if you think it'll ever work out but will",
    "start": "2233200",
    "end": "2239400"
  },
  {
    "text": "the software vendor ever be held liable for the damages of someone breaking into my",
    "start": "2239400",
    "end": "2244838"
  },
  {
    "text": "website it's uh it's your just decision I mean it's your software you're buying it and I think you have the right to",
    "start": "2245599",
    "end": "2251480"
  },
  {
    "text": "have Reliable Software and I think security is part of that I think security is part of the Reliable Software and I think that today uh",
    "start": "2251480",
    "end": "2257680"
  },
  {
    "text": "security knowledge is widespread enough that there's no excuse about oh we don't know about security anymore and the tools are out there there's a lot of",
    "start": "2257680",
    "end": "2264119"
  },
  {
    "text": "really good people working on the problem all over the place a lot of the stuff is free there's no excuse you have the capability now to take control of",
    "start": "2264119",
    "end": "2271200"
  },
  {
    "text": "the problem and that's what I think you should do oh and they made me throw this slide in really quick so uh hail storm is the",
    "start": "2271200",
    "end": "2278440"
  },
  {
    "text": "product I sell and I was just showing you a a screenshot of that earlier um we sell it for 30 grand a pop it's very",
    "start": "2278440",
    "end": "2284839"
  },
  {
    "text": "expensive but um we have this special going right now so if you want to check it out um it's like",
    "start": "2284839",
    "end": "2290520"
  },
  {
    "text": "5750 for a restricted IP range we normally don't set restricted IP ranges on our our license keys because it's",
    "start": "2290520",
    "end": "2297079"
  },
  {
    "text": "kind of defeating the purpose of doing like algorithmic injection if you can't you know change your IP address and every packet and things like that but",
    "start": "2297079",
    "end": "2303440"
  },
  {
    "text": "for this special if you want to buy it you can for this low price of7 50 okay",
    "start": "2303440",
    "end": "2308760"
  },
  {
    "text": "pimping is over thank you for your time um have fun in",
    "start": "2308760",
    "end": "2314690"
  },
  {
    "text": "[Applause] Vegas if there's any",
    "start": "2314690",
    "end": "2322319"
  },
  {
    "text": "questions yes",
    "start": "2324960",
    "end": "2328160"
  },
  {
    "text": "sir the question was can we try before we buy yeah I encourage it um I I'll",
    "start": "2331560",
    "end": "2337800"
  },
  {
    "text": "tell you this though hail Storm's a complicated product so if you're going to try it put in the hands of someone in the organization who's pretty technical",
    "start": "2337800",
    "end": "2344560"
  },
  {
    "text": "probably understands Network",
    "start": "2344560",
    "end": "2347640"
  },
  {
    "text": "protocols nobody else okay thanks",
    "start": "2350319",
    "end": "2358000"
  },
  {
    "text": "guys",
    "start": "2366359",
    "end": "2369359"
  },
  {
    "text": "e",
    "start": "2396319",
    "end": "2399319"
  },
  {
    "text": "e",
    "start": "2426319",
    "end": "2429319"
  },
  {
    "text": "e",
    "start": "2456240",
    "end": "2459240"
  },
  {
    "text": "e",
    "start": "2486240",
    "end": "2489240"
  },
  {
    "text": "e",
    "start": "2516240",
    "end": "2519240"
  },
  {
    "text": "e",
    "start": "2546119",
    "end": "2549119"
  },
  {
    "text": "e",
    "start": "2576119",
    "end": "2579119"
  },
  {
    "text": "e",
    "start": "2606119",
    "end": "2609119"
  },
  {
    "text": "e",
    "start": "2636040",
    "end": "2639040"
  },
  {
    "text": "e",
    "start": "2666040",
    "end": "2669040"
  },
  {
    "text": "e",
    "start": "2696040",
    "end": "2699040"
  },
  {
    "text": "e",
    "start": "2725960",
    "end": "2728960"
  },
  {
    "text": "e",
    "start": "2755920",
    "end": "2758920"
  },
  {
    "text": "e",
    "start": "2815839",
    "end": "2818839"
  },
  {
    "text": "e",
    "start": "2845839",
    "end": "2848839"
  },
  {
    "text": "e",
    "start": "2875839",
    "end": "2878839"
  },
  {
    "text": "e",
    "start": "2905760",
    "end": "2908760"
  },
  {
    "text": "for",
    "start": "2917079",
    "end": "2920079"
  }
]