[
  {
    "text": "[Music]",
    "start": "150",
    "end": "9969"
  },
  {
    "text": "so this talks about static binary injection and in the talk we introduced",
    "start": "10719",
    "end": "18240"
  },
  {
    "text": "our new tune name red bike which is an advanced tool for static binary",
    "start": "18240",
    "end": "23439"
  },
  {
    "text": "injection okay so this work has been done by a",
    "start": "23439",
    "end": "29279"
  },
  {
    "text": "team of two people michael speaker and me and my name is i'm working in nanyang technological",
    "start": "29279",
    "end": "36239"
  },
  {
    "text": "university of singapore and in the last few years my research focused mostly on binary analysis",
    "start": "36239",
    "end": "43600"
  },
  {
    "text": "and i'm the founder and the maintainer few",
    "start": "43600",
    "end": "49120"
  },
  {
    "text": "open reversing framework like capstone disassembler unicorn emulator and keystone assembler",
    "start": "49120",
    "end": "58239"
  },
  {
    "text": "okay michael speaker is domington and he's a researcher at a science tech he",
    "start": "58239",
    "end": "64878"
  },
  {
    "text": "is interested in fasting and exploits tony is a member of a baby phd at ctft",
    "start": "64879",
    "end": "72080"
  },
  {
    "text": "and he gave many talks at axon d2 blackhead usa in blackhead asia",
    "start": "72080",
    "end": "79280"
  },
  {
    "text": "so in this talk we first introduced briefly the background on static binary",
    "start": "80720",
    "end": "87520"
  },
  {
    "text": "injection and after that we show how we develop a new tool name replied and",
    "start": "87520",
    "end": "96079"
  },
  {
    "text": "we present the mythology breadback and the implementation so you can see how redback supports",
    "start": "96079",
    "end": "102720"
  },
  {
    "text": "different file formats like match all erf and windows b",
    "start": "102720",
    "end": "107759"
  },
  {
    "text": "files we have some demos in our talk and finally we have",
    "start": "107759",
    "end": "112880"
  },
  {
    "text": "conclusion ok let's talk about static binary",
    "start": "112880",
    "end": "118719"
  },
  {
    "text": "injection static binary initiation is a technique to physically patch",
    "start": "118719",
    "end": "124320"
  },
  {
    "text": "extern external binary into executable file so at the beginning we have an original",
    "start": "124320",
    "end": "132080"
  },
  {
    "text": "executable file and some external binary we inject the external binary",
    "start": "132080",
    "end": "139599"
  },
  {
    "text": "into the original executable file and at the output we have the new apple xk21 file which",
    "start": "139599",
    "end": "146640"
  },
  {
    "text": "includes all the original executable and also injected binary so you can see",
    "start": "146640",
    "end": "152400"
  },
  {
    "text": "that the output the size output files bigger than the original",
    "start": "152400",
    "end": "158160"
  },
  {
    "text": "executable file the two there are two main cab binaries to",
    "start": "158160",
    "end": "164080"
  },
  {
    "text": "inject the first one pressing pawn is shellcode so you can inject shellcode into our executable",
    "start": "164080",
    "end": "172239"
  },
  {
    "text": "file and you can see that because circuit is very simple",
    "start": "172239",
    "end": "177519"
  },
  {
    "text": "it's very easy to develop a tool to inject shellcode",
    "start": "177519",
    "end": "182879"
  },
  {
    "text": "into the executable file but on the other hand you can see that because shellcode is mainly written in",
    "start": "182879",
    "end": "190239"
  },
  {
    "text": "low-level assembly language so it's very expensive to develop and maintain conflicted",
    "start": "190239",
    "end": "197040"
  },
  {
    "text": "complicated circle so this second type binary to inject is",
    "start": "197040",
    "end": "203760"
  },
  {
    "text": "totally different we call that high-level binary so we have some source code written",
    "start": "203760",
    "end": "210319"
  },
  {
    "text": "in high-level language like c or c plus plus and revision and other output",
    "start": "210319",
    "end": "216720"
  },
  {
    "text": "we have high level high level binary and static manipulation can inject this cap",
    "start": "216720",
    "end": "225360"
  },
  {
    "text": "hollywood binary into the sdk21 file and you can see that",
    "start": "225360",
    "end": "232159"
  },
  {
    "text": "on one hand it's easy to view to maintain this cap binary because it has source",
    "start": "232400",
    "end": "238840"
  },
  {
    "text": "code but on the other hand the this car binary is very complicated",
    "start": "238840",
    "end": "244879"
  },
  {
    "text": "so it's much much harder to build initialization tool for that and",
    "start": "244879",
    "end": "252640"
  },
  {
    "text": "this talk is mainly about how to view an advanced tool to inject",
    "start": "252640",
    "end": "259680"
  },
  {
    "text": "high level binary into executable file",
    "start": "259680",
    "end": "265759"
  },
  {
    "text": "so there are many good reasons why you want static binary injection so you can add inject code into",
    "start": "267360",
    "end": "275919"
  },
  {
    "text": "one program to add new features or you can inject a code",
    "start": "275919",
    "end": "282639"
  },
  {
    "text": "into the program to absorb the target behavior at runtime and static binary injection",
    "start": "282639",
    "end": "289840"
  },
  {
    "text": "has many applications first one is persistent infection",
    "start": "289840",
    "end": "294880"
  },
  {
    "text": "because this is what on the mayor want to do executable packer or particular also",
    "start": "294880",
    "end": "301120"
  },
  {
    "text": "need to inject and modify the program and finally static binary",
    "start": "301120",
    "end": "307680"
  },
  {
    "text": "instrumentation also want to physically patch the program to change to inject the code into the",
    "start": "307680",
    "end": "314800"
  },
  {
    "text": "program static binary injection has many",
    "start": "314800",
    "end": "320080"
  },
  {
    "text": "advantages first one it offer much better performance compared to dynamic",
    "start": "320080",
    "end": "325600"
  },
  {
    "text": "binary instrumentation you can easily instrument early system code like",
    "start": "325600",
    "end": "331680"
  },
  {
    "text": "firmware bootloader os kernel and also static binary injection give you much",
    "start": "331680",
    "end": "338720"
  },
  {
    "text": "better control on the location where you inject the code into the program and finally",
    "start": "338720",
    "end": "344320"
  },
  {
    "text": "in some special cases like embedded system static binary injection is the only",
    "start": "344320",
    "end": "350840"
  },
  {
    "text": "solution okay looking at some existing tools",
    "start": "350840",
    "end": "357280"
  },
  {
    "text": "you can see that most stones nowadays they can only inject shipping charcoal",
    "start": "357280",
    "end": "362560"
  },
  {
    "text": "but not high level binary they are",
    "start": "362560",
    "end": "367680"
  },
  {
    "text": "they always only work on some limited platforms and they also limited on the five",
    "start": "367680",
    "end": "373520"
  },
  {
    "text": "formats they can support so we think that we need a new better tool",
    "start": "373520",
    "end": "378639"
  },
  {
    "text": "for static manual injection that can inject high-level binary files view from c or c plus plus",
    "start": "378639",
    "end": "387520"
  },
  {
    "text": "this tool should work on own cap os like windows mac os linux and so on",
    "start": "387520",
    "end": "394560"
  },
  {
    "text": "and finally it should support all popular executable formats",
    "start": "394560",
    "end": "400800"
  },
  {
    "text": "like windows pe module and erf",
    "start": "400800",
    "end": "404960"
  },
  {
    "text": "so the result of this research is a tool named redpack which is an advanced tool for static binary injection",
    "start": "406319",
    "end": "413680"
  },
  {
    "text": "replica can inject high level object files will form c c plus first into x executable file",
    "start": "413680",
    "end": "421039"
  },
  {
    "text": "that means you can inject windows dll into excel files you can inject daily files into match or",
    "start": "421039",
    "end": "427759"
  },
  {
    "text": "executable we can also inject dot sr files into elf",
    "start": "427759",
    "end": "433039"
  },
  {
    "text": "executable red bike run on all popular os like windows",
    "start": "433039",
    "end": "439360"
  },
  {
    "text": "mac os linux bsd and red bike support all the popular firefox like pe micro",
    "start": "439360",
    "end": "447520"
  },
  {
    "text": "and erf so how we did it so the general ideas",
    "start": "447520",
    "end": "454000"
  },
  {
    "text": "is when we inject code into the executable file we leave the code and data section of",
    "start": "454000",
    "end": "462080"
  },
  {
    "text": "the original file is the same place we do not move code or data around",
    "start": "462080",
    "end": "468479"
  },
  {
    "text": "to contain the new object binary in the batch file we expand the original",
    "start": "469599",
    "end": "477120"
  },
  {
    "text": "executable file by adding some new sections and after that we copy the content from",
    "start": "477120",
    "end": "483120"
  },
  {
    "text": "the object file to the new sections and because the object binary will form c c plus",
    "start": "483120",
    "end": "490879"
  },
  {
    "text": "c is mainly for dynamic linker but not ready for execution so",
    "start": "490879",
    "end": "498080"
  },
  {
    "text": "the new content injected into the output file need to be relocated",
    "start": "498080",
    "end": "503759"
  },
  {
    "text": "so they can run properly in the new place so red pack has",
    "start": "503759",
    "end": "512000"
  },
  {
    "text": "two main challenges the first challenge is to add new sections because we need to append new section",
    "start": "512000",
    "end": "519200"
  },
  {
    "text": "but this activity can break",
    "start": "519200",
    "end": "524240"
  },
  {
    "text": "while such an executive information so we need to be sure to have a correct tool to correct on the section alignment",
    "start": "524240",
    "end": "530720"
  },
  {
    "text": "and size after injection after that we need to fix metadata output executable file",
    "start": "530720",
    "end": "538959"
  },
  {
    "text": "to make the whole file legal so we can run properly",
    "start": "538959",
    "end": "544080"
  },
  {
    "text": "on the system so in this steps you need to fix many things in the file headers like",
    "start": "544080",
    "end": "550640"
  },
  {
    "text": "size the total size the new number of sections the new checksum",
    "start": "550640",
    "end": "556800"
  },
  {
    "text": "and sometimes we might need to even to create a new file headers and new section headers to keep the new",
    "start": "556800",
    "end": "563279"
  },
  {
    "text": "content the second challenge is relocation so",
    "start": "563279",
    "end": "569040"
  },
  {
    "text": "remember that we patch the object binary into the target binary",
    "start": "569040",
    "end": "574640"
  },
  {
    "text": "so we need to relocate the object binary in the new place",
    "start": "574640",
    "end": "580640"
  },
  {
    "text": "so just few areas we follow we need to keep the distance between the code and data",
    "start": "580640",
    "end": "586560"
  },
  {
    "text": "session in the object binary intact so because they can still refer each",
    "start": "586560",
    "end": "593920"
  },
  {
    "text": "other and basically a red pack need to develop a special gap static linker to link the",
    "start": "593920",
    "end": "601279"
  },
  {
    "text": "injected object file with existing executable binary in the original file",
    "start": "601279",
    "end": "608800"
  },
  {
    "text": "and fabric need to change the metadata of the object binary in the new place so the",
    "start": "608800",
    "end": "614800"
  },
  {
    "text": "system dynamical is aware of the new digital content",
    "start": "614800",
    "end": "620880"
  },
  {
    "text": "and finally we need to avoid patching any code or data but only modify the file media metadata",
    "start": "620880",
    "end": "629360"
  },
  {
    "text": "like import function relocation and so on",
    "start": "629360",
    "end": "633839"
  },
  {
    "text": "okay so now my code speaker will take over and he'll show you how he can how right back",
    "start": "634640",
    "end": "640800"
  },
  {
    "text": "and support macho file format hi i'm don so now i want to show how",
    "start": "640800",
    "end": "647600"
  },
  {
    "text": "i static inject into much of i and elf file format first let's take a look at",
    "start": "647600",
    "end": "654160"
  },
  {
    "text": "the much old file format this kind of file has a header which",
    "start": "654160",
    "end": "659200"
  },
  {
    "text": "includes magic number cpu type substitute type number of block commands and total size",
    "start": "659200",
    "end": "666160"
  },
  {
    "text": "upload command the flux in header also brings some",
    "start": "666160",
    "end": "671839"
  },
  {
    "text": "special bit like mh pi and mh no hypno execution",
    "start": "671839",
    "end": "680480"
  },
  {
    "text": "then log command padding zone and data come low command is a type of handle",
    "start": "680480",
    "end": "687600"
  },
  {
    "text": "that contains information of segments like text data etc",
    "start": "687600",
    "end": "695360"
  },
  {
    "text": "among other segments lc segment is noticeable that it guides the loader",
    "start": "695360",
    "end": "702079"
  },
  {
    "text": "to load binary onto memory based on file size 5 set vmsi",
    "start": "702079",
    "end": "708560"
  },
  {
    "text": "vm address initial protection and max protection",
    "start": "708560",
    "end": "714320"
  },
  {
    "text": "talking about the challenge when i add new segments or sessions i create two new segments",
    "start": "715360",
    "end": "722320"
  },
  {
    "text": "rb text and ib data by putting segments header on padding zone and fix some numbers",
    "start": "722320",
    "end": "730720"
  },
  {
    "text": "then i clone all the desired sections header append them to these segments and place",
    "start": "730720",
    "end": "737839"
  },
  {
    "text": "their content at the end of the file however this can only work for mac os mojave",
    "start": "737839",
    "end": "746320"
  },
  {
    "text": "or older versions so as you can see here is the new binary",
    "start": "746320",
    "end": "755920"
  },
  {
    "text": "format next next challenge i have to face",
    "start": "756839",
    "end": "762880"
  },
  {
    "text": "is relocation i chose to inject a dynamic library to target",
    "start": "762880",
    "end": "769440"
  },
  {
    "text": "binary because every object inside the library has been relocated",
    "start": "769440",
    "end": "776079"
  },
  {
    "text": "however global pointer are seen offset not addresses and index of leave system",
    "start": "776079",
    "end": "784079"
  },
  {
    "text": "dot dilap library may be different from the target binary",
    "start": "784079",
    "end": "789920"
  },
  {
    "text": "of course and stuff need to be fixed also",
    "start": "789920",
    "end": "795120"
  },
  {
    "text": "so i take the advantage of dynamic linker to handle new contents",
    "start": "795200",
    "end": "802399"
  },
  {
    "text": "the dynamic linker is defined in load dilingual load command and there are two types of",
    "start": "803040",
    "end": "809680"
  },
  {
    "text": "symbols lazy and non-lazy simulpointer design",
    "start": "809680",
    "end": "815040"
  },
  {
    "text": "a die syntax diy symptom low command store information about offset size and",
    "start": "815040",
    "end": "822399"
  },
  {
    "text": "some kind of numbers this example here called the",
    "start": "822399",
    "end": "828320"
  },
  {
    "text": "product function at the beginning the pull s is not located inside the",
    "start": "828320",
    "end": "834560"
  },
  {
    "text": "binary and it will be bound when the first score is made",
    "start": "834560",
    "end": "839680"
  },
  {
    "text": "instead pulled holds a pointer point to stop extraction",
    "start": "839680",
    "end": "846240"
  },
  {
    "text": "that stop call direct the diyld to find the address to a relevant",
    "start": "846240",
    "end": "852560"
  },
  {
    "text": "function then it overrides on original pointer",
    "start": "852560",
    "end": "859440"
  },
  {
    "text": "you can see the illustration here",
    "start": "860079",
    "end": "863920"
  },
  {
    "text": "as a segment we need to pay extension link edit and dll dyld info only",
    "start": "865199",
    "end": "873600"
  },
  {
    "text": "the link edit hosts of course and some other information meanwhile dyld informally contains",
    "start": "873600",
    "end": "881839"
  },
  {
    "text": "rebates and binding information our code actually is a single byte and",
    "start": "881839",
    "end": "888399"
  },
  {
    "text": "encode by you unsigned you left 128.",
    "start": "888399",
    "end": "896639"
  },
  {
    "text": "the buy by opcode is used to look up external function and the rebase of code is used to deal",
    "start": "896639",
    "end": "903120"
  },
  {
    "text": "with aslr for example this image so how a sequence of rebase",
    "start": "903120",
    "end": "911120"
  },
  {
    "text": "of opcode should run firstly is set the type to 1",
    "start": "911120",
    "end": "916560"
  },
  {
    "text": "as a pointer type then set the current segment index to pulse",
    "start": "916560",
    "end": "922480"
  },
  {
    "text": "pointer on nanolegacy symbol pointer section and finally it performs the release one",
    "start": "922480",
    "end": "929920"
  },
  {
    "text": "time the same extra for binding of code",
    "start": "929920",
    "end": "935920"
  },
  {
    "text": "it finds the location of press set the index of leave system",
    "start": "935920",
    "end": "941120"
  },
  {
    "text": "restring as name of symbol and then buy and write the result to location",
    "start": "941120",
    "end": "948160"
  },
  {
    "text": "so now i have enough abilities to control the dyld to do what i want",
    "start": "948480",
    "end": "955519"
  },
  {
    "text": "for pointer relocation i clone the original revised or code to the end of link edit segment then",
    "start": "955519",
    "end": "964079"
  },
  {
    "text": "append that leaves of code i also need to fix some information on",
    "start": "964079",
    "end": "970079"
  },
  {
    "text": "segments header and i not only do the same for binding of code",
    "start": "970079",
    "end": "975680"
  },
  {
    "text": "but also fix lift systems index and stack index when pushing arguments",
    "start": "975680",
    "end": "984560"
  },
  {
    "text": "here is a new link edit layout",
    "start": "985120",
    "end": "989519"
  },
  {
    "text": "and here is a sample code to demonstration on the left hand side is the target",
    "start": "992720",
    "end": "999199"
  },
  {
    "text": "binary and on the right hand side is dynamic library",
    "start": "999199",
    "end": "1004320"
  },
  {
    "text": "and now i will inject library to this binary",
    "start": "1004320",
    "end": "1009759"
  },
  {
    "text": "first i pass the library to my tool",
    "start": "1009839",
    "end": "1014560"
  },
  {
    "text": "my second argument is on original binary",
    "start": "1015600",
    "end": "1021120"
  },
  {
    "text": "then is the the output after i run you can see the change in",
    "start": "1021120",
    "end": "1029520"
  },
  {
    "text": "size about binary meanwhile the new one still remain all",
    "start": "1029520",
    "end": "1034798"
  },
  {
    "text": "the feature of the r1",
    "start": "1034799",
    "end": "1039839"
  },
  {
    "text": "next i would like to discuss about f5 elf f5",
    "start": "1040559",
    "end": "1047438"
  },
  {
    "text": "the format has or some headers symbol table and dynamic simultaneous",
    "start": "1047439",
    "end": "1054160"
  },
  {
    "text": "in elf f5 segments are also used to map from file to virtual address",
    "start": "1054160",
    "end": "1060400"
  },
  {
    "text": "space there are some sections such as that",
    "start": "1060400",
    "end": "1065600"
  },
  {
    "text": "data etc and in order to add new segment i try to append new data to segments",
    "start": "1065600",
    "end": "1073440"
  },
  {
    "text": "later then fix metadata on segments header or add new segments header if necessary",
    "start": "1073440",
    "end": "1082320"
  },
  {
    "text": "however there is not enough space of padding to insert new",
    "start": "1082320",
    "end": "1089039"
  },
  {
    "text": "header furthermore some sections are dependent on",
    "start": "1089039",
    "end": "1094240"
  },
  {
    "text": "other sections for example there are many pointers which point to that text section are",
    "start": "1094240",
    "end": "1101679"
  },
  {
    "text": "strong in symbol and dynamic simultaneous therefore to make it right i create a",
    "start": "1101679",
    "end": "1109520"
  },
  {
    "text": "kind of graph of dependencies that if i change the value of no node",
    "start": "1109520",
    "end": "1114880"
  },
  {
    "text": "its labels automatically",
    "start": "1114880",
    "end": "1119840"
  },
  {
    "text": "sorry its neighbor will automatically be updated so the new layout look like this",
    "start": "1121360",
    "end": "1128640"
  },
  {
    "text": "regarding about relocation is simple to patch the internal data like relative or global data",
    "start": "1133520",
    "end": "1141840"
  },
  {
    "text": "to be fixed with new segment then i leverage the dynamic linker to import",
    "start": "1141840",
    "end": "1147760"
  },
  {
    "text": "new function the dynamic linker is defined in dot interp section it set up",
    "start": "1147760",
    "end": "1156080"
  },
  {
    "text": "environments based on information of dynamic sections the linker is a method",
    "start": "1156080",
    "end": "1162799"
  },
  {
    "text": "called lazy linking to resolve function reference with support from dot god and dot plt",
    "start": "1162799",
    "end": "1171039"
  },
  {
    "text": "sections the program here called put function",
    "start": "1171039",
    "end": "1177120"
  },
  {
    "text": "which point do dot got entry of purchase to its dot plt at low time",
    "start": "1177360",
    "end": "1184720"
  },
  {
    "text": "after the purest coin is made at the first time the p not plt yes control resource",
    "start": "1184720",
    "end": "1192160"
  },
  {
    "text": "symbol and then linker will update the dot code entry to hold the final value to be used for",
    "start": "1192160",
    "end": "1199520"
  },
  {
    "text": "future calls this is how an entry in dynamics symbol table looks",
    "start": "1199520",
    "end": "1206159"
  },
  {
    "text": "like it use the index of symbol on the table dot related plt to pass to the",
    "start": "1206159",
    "end": "1214480"
  },
  {
    "text": "runtime resolve function",
    "start": "1214480",
    "end": "1217760"
  },
  {
    "text": "the source announce is quite easy we just add new entry to some sections",
    "start": "1220480",
    "end": "1226000"
  },
  {
    "text": "and then news and add new search string and add new string of the symbol name to",
    "start": "1226000",
    "end": "1232159"
  },
  {
    "text": "string table of course we have to patch some value and fix some indexes also",
    "start": "1232159",
    "end": "1239440"
  },
  {
    "text": "however because we modify offset of sections so the binary should be a pie",
    "start": "1239440",
    "end": "1246559"
  },
  {
    "text": "type to remain the structure here's my demonstration for elf f5 format like",
    "start": "1246559",
    "end": "1254640"
  },
  {
    "text": "what i have done with much of file i passed the library and the other original file to my tone",
    "start": "1254640",
    "end": "1262559"
  },
  {
    "text": "then i run my tool check check check inside",
    "start": "1262559",
    "end": "1270000"
  },
  {
    "text": "run the unoriginal one and run the final one",
    "start": "1270320",
    "end": "1276720"
  },
  {
    "text": "next method queen will continue our presentation okay so now let's see how redback can",
    "start": "1276720",
    "end": "1283520"
  },
  {
    "text": "inject into the windows program so windows program has a format name pe",
    "start": "1283520",
    "end": "1290799"
  },
  {
    "text": "and have pe format for 32-bit binary we have pe plus",
    "start": "1290799",
    "end": "1297440"
  },
  {
    "text": "for 64-bit binary and we have two main gap",
    "start": "1297440",
    "end": "1302840"
  },
  {
    "text": "executable binary in windows the first one is drill which is for dynamic library and the url material can",
    "start": "1302840",
    "end": "1311280"
  },
  {
    "text": "depends on many other device the second very important card binaries",
    "start": "1311280",
    "end": "1316720"
  },
  {
    "text": "is excel files which is for program and one excel file can depends on many other",
    "start": "1316720",
    "end": "1323360"
  },
  {
    "text": "dll files so the target of a great mac is we want to inject dll files into the",
    "start": "1323360",
    "end": "1331039"
  },
  {
    "text": "excel files so as output we have a new output excel file",
    "start": "1331039",
    "end": "1336240"
  },
  {
    "text": "that includes all the original excel files and also injected delay files",
    "start": "1336240",
    "end": "1342799"
  },
  {
    "text": "okay so windows have its own dynamic loader linker and",
    "start": "1343280",
    "end": "1350320"
  },
  {
    "text": "we must understand very well how the loader and linker in windows work so",
    "start": "1350320",
    "end": "1357039"
  },
  {
    "text": "we can make that back to be compatible with all the process so",
    "start": "1357039",
    "end": "1363039"
  },
  {
    "text": "the output binary can be properly run on windows system",
    "start": "1363039",
    "end": "1370159"
  },
  {
    "text": "so p file format is actually very complicated and we do not have enough time here so i",
    "start": "1370799",
    "end": "1377520"
  },
  {
    "text": "just mentioned some important points so b files has a header name",
    "start": "1377520",
    "end": "1385200"
  },
  {
    "text": "empty header tell you more about other headers like fire",
    "start": "1385200",
    "end": "1391120"
  },
  {
    "text": "headers and optional headers fire headers has some important",
    "start": "1391120",
    "end": "1397039"
  },
  {
    "text": "important information like the number of sections and the type option and headers",
    "start": "1397039",
    "end": "1403039"
  },
  {
    "text": "so we can locate the where the ocean and header start in the memory on the disk",
    "start": "1403039",
    "end": "1410000"
  },
  {
    "text": "after the finder is optional header and this header has many important information like the",
    "start": "1410640",
    "end": "1417200"
  },
  {
    "text": "ngpoi the base of the files in the memory",
    "start": "1417200",
    "end": "1422960"
  },
  {
    "text": "section alignment file alignment the size emits files in the memory the checksum",
    "start": "1422960",
    "end": "1430720"
  },
  {
    "text": "and just one important structure name data directory",
    "start": "1430720",
    "end": "1436000"
  },
  {
    "text": "which is very important structure because it points to many important metadata",
    "start": "1436240",
    "end": "1443600"
  },
  {
    "text": "pe file and data d3 actually",
    "start": "1443600",
    "end": "1449919"
  },
  {
    "text": "contain many other directory so we have directory for export",
    "start": "1449919",
    "end": "1457120"
  },
  {
    "text": "export function we have data for import function regulatory for",
    "start": "1457120",
    "end": "1462159"
  },
  {
    "text": "relocation table directory for import address table and so on",
    "start": "1462159",
    "end": "1469760"
  },
  {
    "text": "so 1p file can have many section and each section have one section header and each",
    "start": "1470559",
    "end": "1476400"
  },
  {
    "text": "section header point you to the location of the section in the",
    "start": "1476400",
    "end": "1481520"
  },
  {
    "text": "memory the size",
    "start": "1481520",
    "end": "1487440"
  },
  {
    "text": "and uh we have some very important entries",
    "start": "1487440",
    "end": "1494000"
  },
  {
    "text": "in the directory entries that one is import and which tell you how to",
    "start": "1494000",
    "end": "1502640"
  },
  {
    "text": "tell which tells the system loader and linker how to locate the",
    "start": "1502640",
    "end": "1509600"
  },
  {
    "text": "derails that this program depend on and which function the program needs to",
    "start": "1509600",
    "end": "1516159"
  },
  {
    "text": "load on into the memory to make the program run properly so have import descriptor you have 10",
    "start": "1516159",
    "end": "1524159"
  },
  {
    "text": "data which tell us where to locate the imported function from each dll",
    "start": "1524159",
    "end": "1531039"
  },
  {
    "text": "on list and in the memory",
    "start": "1531039",
    "end": "1534480"
  },
  {
    "text": "so we see that red mic need to add a new section into two for the injection",
    "start": "1536480",
    "end": "1542880"
  },
  {
    "text": "so to create a new section we append a section new section at the end",
    "start": "1542880",
    "end": "1549440"
  },
  {
    "text": "of the original program and after that we need to analyze them",
    "start": "1549440",
    "end": "1554960"
  },
  {
    "text": "so they can be recognized by the system so the site resolution need to fit the",
    "start": "1554960",
    "end": "1562320"
  },
  {
    "text": "injected object file so we need to adjust the virtual size the size operator",
    "start": "1562320",
    "end": "1569279"
  },
  {
    "text": "and we need to align the session as well in the memory and actually",
    "start": "1569279",
    "end": "1577600"
  },
  {
    "text": "we need to append not only one but probably many sections like session for program",
    "start": "1577600",
    "end": "1584240"
  },
  {
    "text": "for code for data for read-only data for imported data and for relocation",
    "start": "1584240",
    "end": "1591279"
  },
  {
    "text": "so after after we append the new section we need to fix the b header so we need",
    "start": "1591279",
    "end": "1597520"
  },
  {
    "text": "to fix the size of total headers you need to fix the size of total image",
    "start": "1597520",
    "end": "1603760"
  },
  {
    "text": "need to fix the size total code in the program and finally you need to pump up the",
    "start": "1603760",
    "end": "1609679"
  },
  {
    "text": "number of sections so after we add the new section",
    "start": "1609679",
    "end": "1616559"
  },
  {
    "text": "we copy the object binary from the draft files into the new",
    "start": "1616559",
    "end": "1624400"
  },
  {
    "text": "sections and there's one important thing to do we need to relocate them so each",
    "start": "1624400",
    "end": "1632480"
  },
  {
    "text": "xj file has one relocation section named reload and also the object files",
    "start": "1632480",
    "end": "1639600"
  },
  {
    "text": "urls also have its own reload dot relocations however as a output program",
    "start": "1639600",
    "end": "1647039"
  },
  {
    "text": "windows only recognize only one relocation relocation section so",
    "start": "1647039",
    "end": "1653279"
  },
  {
    "text": "we have to do some checks here so we open a new big section for relocation",
    "start": "1653279",
    "end": "1659360"
  },
  {
    "text": "and after that we copy the dot reload section of the target of the",
    "start": "1659360",
    "end": "1665200"
  },
  {
    "text": "original program and also the dot relog section of the dll files there and after that you need",
    "start": "1665200",
    "end": "1672960"
  },
  {
    "text": "to relocate them and finally you need to fix the ng",
    "start": "1672960",
    "end": "1678880"
  },
  {
    "text": "in the directory directory for this new reload reload reconstruction",
    "start": "1678880",
    "end": "1686080"
  },
  {
    "text": "and beside the relocation section we have to repeat the same process for",
    "start": "1686080",
    "end": "1692240"
  },
  {
    "text": "important table so because uh one extra file only",
    "start": "1692240",
    "end": "1697520"
  },
  {
    "text": "allow one import directory so we also need to append a new which section for import",
    "start": "1697520",
    "end": "1704000"
  },
  {
    "text": "uh import tables so we do the same thing very similar",
    "start": "1704000",
    "end": "1711840"
  },
  {
    "text": "okay so one thing you need to pay attention is that because",
    "start": "1712799",
    "end": "1718640"
  },
  {
    "text": "the code in the new the code coming from the dll files need",
    "start": "1718640",
    "end": "1724960"
  },
  {
    "text": "to be execute need to be executed at runtime and the code there can refer to the",
    "start": "1724960",
    "end": "1732320"
  },
  {
    "text": "other imported function or variables so we need to have some relocation for",
    "start": "1732320",
    "end": "1737520"
  },
  {
    "text": "imported function azure so to do this we need to add new entries for a imported function",
    "start": "1737520",
    "end": "1745440"
  },
  {
    "text": "in the injected object files and reply actually append a new data session for imported function",
    "start": "1745440",
    "end": "1751520"
  },
  {
    "text": "and after that it copies the imported entry from the target program and also we need",
    "start": "1751520",
    "end": "1757679"
  },
  {
    "text": "to copy the imported entity from the object files onto the new entries in the",
    "start": "1757679",
    "end": "1764080"
  },
  {
    "text": "new input sections and finally repack need to fix import a",
    "start": "1764080",
    "end": "1770559"
  },
  {
    "text": "rest table of the injected entries so the program the final program can run properly",
    "start": "1770559",
    "end": "1778399"
  },
  {
    "text": "so we have a very short demo for red mac so you can see how redback can inject",
    "start": "1778960",
    "end": "1785120"
  },
  {
    "text": "dual files into the xfiles",
    "start": "1785120",
    "end": "1789840"
  },
  {
    "text": "so in this demo we have a very simple program named hello one",
    "start": "1790320",
    "end": "1795360"
  },
  {
    "text": "and you can see here this hello one does nothing but just print hell you want to do to do this to them",
    "start": "1795360",
    "end": "1802000"
  },
  {
    "text": "to the console and we have another source code for dll",
    "start": "1802000",
    "end": "1807520"
  },
  {
    "text": "files and this dfl actually also very simple it does nothing but",
    "start": "1807520",
    "end": "1813679"
  },
  {
    "text": "print injected to the to the monitor and it exit so we",
    "start": "1813679",
    "end": "1820080"
  },
  {
    "text": "want to inject this injection files into the hello world file",
    "start": "1820080",
    "end": "1827278"
  },
  {
    "text": "so we build the heron file and inject the true files into some binaries",
    "start": "1827760",
    "end": "1834159"
  },
  {
    "text": "and you can see here so the we build the hello dossier",
    "start": "1834159",
    "end": "1839200"
  },
  {
    "text": "and we have the hello one 64 dot exe file and we view injection dot c",
    "start": "1839200",
    "end": "1846960"
  },
  {
    "text": "to inject you dll now we want to inject this injection",
    "start": "1846960",
    "end": "1853679"
  },
  {
    "text": "city turkey well into insect 62 director so first i can",
    "start": "1853679",
    "end": "1861679"
  },
  {
    "text": "and run the hello one so you can see what it does so the hellon",
    "start": "1861679",
    "end": "1868240"
  },
  {
    "text": "60. files done nothing but just print out hello onto the monitor",
    "start": "1868240",
    "end": "1873440"
  },
  {
    "text": "and now i run right back so my tune",
    "start": "1873440",
    "end": "1879919"
  },
  {
    "text": "will take one input which is the dl file as a first argument",
    "start": "1880559",
    "end": "1887279"
  },
  {
    "text": "and after that the second argument is a name of the excel files that we want to",
    "start": "1887279",
    "end": "1892799"
  },
  {
    "text": "inject into and the final argument of redback is the name of the output file which is",
    "start": "1892799",
    "end": "1898480"
  },
  {
    "text": "hello1 minus rbi.j",
    "start": "1898480",
    "end": "1903760"
  },
  {
    "text": "so i run this command",
    "start": "1903760",
    "end": "1907840"
  },
  {
    "text": "yeah you can see that redtac takes the insect 62 dot url",
    "start": "1913840",
    "end": "1920960"
  },
  {
    "text": "and inject the text section dot our data session dot",
    "start": "1920960",
    "end": "1928320"
  },
  {
    "text": "data session dot identification into halo164.exe and as",
    "start": "1928320",
    "end": "1934799"
  },
  {
    "text": "output it generates the new excel files name hello one 64 minus",
    "start": "1934799",
    "end": "1941679"
  },
  {
    "text": "rp.exe and now let's try to run this",
    "start": "1941679",
    "end": "1946720"
  },
  {
    "text": "new batch file so you can see that you have the new",
    "start": "1946720",
    "end": "1954640"
  },
  {
    "text": "file here and this one is already has a injected dll",
    "start": "1954960",
    "end": "1960880"
  },
  {
    "text": "file inside so let me run this",
    "start": "1960880",
    "end": "1964960"
  },
  {
    "text": "hello one ct minus rb.exe so you see that now the injected file",
    "start": "1966880",
    "end": "1974240"
  },
  {
    "text": "the batch file just print out issued as output and exit which is totally different from the",
    "start": "1974240",
    "end": "1980080"
  },
  {
    "text": "original value",
    "start": "1980080",
    "end": "1982880"
  },
  {
    "text": "okay that's it and here come my conclusion red black is an advanced tune for static binary",
    "start": "1986960",
    "end": "1993440"
  },
  {
    "text": "injection it can inject high level binaries object files view from high level language like c",
    "start": "1993440",
    "end": "2000559"
  },
  {
    "text": "or c plus plus and it works on many os like windows mac os linux bsd",
    "start": "2000559",
    "end": "2009360"
  },
  {
    "text": "and it supports multiple executable formats like windows b match o or ef",
    "start": "2009360",
    "end": "2016880"
  },
  {
    "text": "and we are going to release right back with the full source code to the internet to the public after our",
    "start": "2016880",
    "end": "2024480"
  },
  {
    "text": "talk and you can check our website rao x dot io right back for release",
    "start": "2024480",
    "end": "2030880"
  },
  {
    "text": "announcement thank you and now come the question in answer",
    "start": "2030880",
    "end": "2037799"
  },
  {
    "text": "session",
    "start": "2037799",
    "end": "2040799"
  }
]