[
  {
    "text": "hello everybody and welcome to our briefing a decade after stack net how Zan S7 is still in attackers",
    "start": "2560",
    "end": "10639"
  },
  {
    "text": "Heaven a little bit about us so my name is Colin hi and I'm I've been reverse",
    "start": "10639",
    "end": "17480"
  },
  {
    "text": "engineering industrial control systems for the past five years at my daily job",
    "start": "17480",
    "end": "22840"
  },
  {
    "text": "at enli prior to that I have been reverse engineering Windows internals for an even longer time for the re actor",
    "start": "22840",
    "end": "30640"
  },
  {
    "text": "project for over a decade now and apart from that I consider myself a rust",
    "start": "30640",
    "end": "36160"
  },
  {
    "text": "Enthusiast I'm really happy that I can develop all our connectors for",
    "start": "36160",
    "end": "41280"
  },
  {
    "text": "industrial control systems in Rust at my daily job and in my spare time I also",
    "start": "41280",
    "end": "46600"
  },
  {
    "text": "develop a few crates to bring the windows and rust ecosystems closer together hi everyone I'm Tom um I mostly",
    "start": "46600",
    "end": "54600"
  },
  {
    "text": "consider myself to be a hacker and software developer so my day job is just reverse engineering and also a develop",
    "start": "54600",
    "end": "60199"
  },
  {
    "text": "code but by night I also like doing vulnerability research mostly interested",
    "start": "60199",
    "end": "65478"
  },
  {
    "text": "in lowlevel systems so CPUs kernels firmware reverse engineering all that kind of stuff um but aart of that uh I'm",
    "start": "65479",
    "end": "73000"
  },
  {
    "text": "also a member of the flux finger CTF team and do a lot of cool challenges with",
    "start": "73000",
    "end": "79080"
  },
  {
    "text": "them so before we start a little introduction to plc's and or",
    "start": "79840",
    "end": "85799"
  },
  {
    "text": "programmable logic controllers as they are called so the zens S7 a so-called programmable logic controller and I take",
    "start": "85799",
    "end": "93320"
  },
  {
    "text": "it that most people in this room probably have a computer science background so from a computer science",
    "start": "93320",
    "end": "99720"
  },
  {
    "text": "perspective you can imagine a PLC like an embedded computer they are they come",
    "start": "99720",
    "end": "106280"
  },
  {
    "text": "in DIN rail multiable cases they have longer availability but it's mostly that",
    "start": "106280",
    "end": "113000"
  },
  {
    "text": "all current plcs also feature iset ports and this makes it very compelling to",
    "start": "113000",
    "end": "118600"
  },
  {
    "text": "just plug them into a company Network which is where all security nightmares",
    "start": "118600",
    "end": "124439"
  },
  {
    "text": "begin many plcs feature arm CPUs some even come with",
    "start": "124439",
    "end": "129640"
  },
  {
    "text": "x86 many vendors also don't want to tell you what CPU is inside but this usually",
    "start": "129640",
    "end": "135160"
  },
  {
    "text": "doesn't really matter because um you're not supposed to program them down to the instruction level",
    "start": "135160",
    "end": "142640"
  },
  {
    "text": "anyway PC's are all around us even though they usually remain invisible to",
    "start": "142640",
    "end": "148480"
  },
  {
    "text": "the user so um with their roles in power plants grids pipelines water utilities",
    "start": "148480",
    "end": "155920"
  },
  {
    "text": "so all kinds of critical infrastructure you can consider them the backbone of Modern Life and if we think about the",
    "start": "155920",
    "end": "164400"
  },
  {
    "text": "manufacturing and processing industry you can imagine every product that you hold in your hand has also gone through",
    "start": "164400",
    "end": "171319"
  },
  {
    "text": "multiple plcs during its production uh finally plcs also serve an",
    "start": "171319",
    "end": "177720"
  },
  {
    "text": "important role in building automation so I would be surprised if this building here was not powered by plcs so to put",
    "start": "177720",
    "end": "185280"
  },
  {
    "text": "it in a nutshell if our plcs are hecked we have really serious physical problems",
    "start": "185280",
    "end": "191640"
  },
  {
    "text": "and this is why this is so important the global PLC Market is",
    "start": "191640",
    "end": "197920"
  },
  {
    "text": "dominated by five companies that account for over 80% of the market the zens is",
    "start": "197920",
    "end": "204239"
  },
  {
    "text": "clearly leading that market with a share of 31% during daily job we had a look at",
    "start": "204239",
    "end": "212000"
  },
  {
    "text": "most of these vendors and it should be noted uh nobody takes security as uh",
    "start": "212000",
    "end": "218879"
  },
  {
    "text": "important as zens does but this comes with a caveat I'm talking here about",
    "start": "218879",
    "end": "224720"
  },
  {
    "text": "both proven security through applied cryptography as well as security by",
    "start": "224720",
    "end": "231080"
  },
  {
    "text": "obscurity through the layers which we are going to uncover today I mean the",
    "start": "231080",
    "end": "236360"
  },
  {
    "text": "first part is clearly understandable as zens was the main victim of Stu net back",
    "start": "236360",
    "end": "241640"
  },
  {
    "text": "in 2010 but I'm really surprised that they managed to get away with security by obscurity for so",
    "start": "241640",
    "end": "248879"
  },
  {
    "text": "long finally as we in the IT world like to have our two-letter abbreviations it",
    "start": "248879",
    "end": "254319"
  },
  {
    "text": "should also be said the Industrial Automation people also have their two-letter abbreviation they often talk",
    "start": "254319",
    "end": "260160"
  },
  {
    "text": "about the OT World OT in this case means operational",
    "start": "260160",
    "end": "266360"
  },
  {
    "text": "technology programming plcs is what mostly differentiates them from other",
    "start": "266600",
    "end": "272400"
  },
  {
    "text": "embedded computers so um the IEC standardizes uh four programming",
    "start": "272400",
    "end": "278919"
  },
  {
    "text": "languages for plc's they are vendor agnostic and two of them are even",
    "start": "278919",
    "end": "284320"
  },
  {
    "text": "graphical so what you see here in the example is such a graphical uh programming",
    "start": "284320",
    "end": "290440"
  },
  {
    "text": "language and actually the standard is does a pretty good job at unifying",
    "start": "290440",
    "end": "295680"
  },
  {
    "text": "education on PLC programming and defining some Concepts that apply for all plcs across all vendors so one of",
    "start": "295680",
    "end": "305000"
  },
  {
    "text": "these Concepts is global variables and this is what actually made plcs interesting for me in the first place",
    "start": "305000",
    "end": "312160"
  },
  {
    "text": "because I was tasked to read data from a welding machine live process data such",
    "start": "312160",
    "end": "318080"
  },
  {
    "text": "data comes in global variables and due to that concept I just knew I had to",
    "start": "318080",
    "end": "324560"
  },
  {
    "text": "read out these Global variables But Here Comes the problem Comm communication with plc's is not",
    "start": "324560",
    "end": "332039"
  },
  {
    "text": "standardized by the IEC and this is again something where",
    "start": "332039",
    "end": "337160"
  },
  {
    "text": "every PLC vendor has their proprietary protocol and even likes to use make use",
    "start": "337160",
    "end": "343120"
  },
  {
    "text": "of their wendor login it's the classic scenario here if you buy the PLC from",
    "start": "343120",
    "end": "348479"
  },
  {
    "text": "one vendor you are also supposed to buy the HMI and other components from the",
    "start": "348479",
    "end": "353919"
  },
  {
    "text": "same VOR I have to admit there are a few protocols for interoperability but so far none of them",
    "start": "353919",
    "end": "361280"
  },
  {
    "text": "are first class citizens so my first S7 1,500 PLC was in a Ving machine and this",
    "start": "361280",
    "end": "369080"
  },
  {
    "text": "welding machine actually had no other means to communicate with it other than",
    "start": "369080",
    "end": "374520"
  },
  {
    "text": "the S7 proprietary protocol so what I did was opening wire shark there is a",
    "start": "374520",
    "end": "381400"
  },
  {
    "text": "nice dissector for the S7 uh these days and what I could see was okay it's",
    "start": "381400",
    "end": "388520"
  },
  {
    "text": "mostly a plain text protocol I could read everything on the wire it was not encrypted but the handshake had some",
    "start": "388520",
    "end": "395440"
  },
  {
    "text": "cryptography bits inside so there was an Integrity Mac and there was also",
    "start": "395440",
    "end": "401000"
  },
  {
    "text": "something I haven't seen before which is called the um security key en crypted",
    "start": "401000",
    "end": "406680"
  },
  {
    "text": "key this is important to get right during the handshake and this was very",
    "start": "406680",
    "end": "411800"
  },
  {
    "text": "proprietary cryptography that I have seen no nowhere else but uh anyway that",
    "start": "411800",
    "end": "418400"
  },
  {
    "text": "was mostly it everything else was plain text readable nevertheless despite all these",
    "start": "418400",
    "end": "425440"
  },
  {
    "text": "proprietary cryptography bits which definitely took some time for zens why",
    "start": "425440",
    "end": "430680"
  },
  {
    "text": "have I been able to connect to nearly every S7 without entering any",
    "start": "430680",
    "end": "436960"
  },
  {
    "text": "credentials like a password I mean even my Windows computer at home asks for a",
    "start": "436960",
    "end": "443680"
  },
  {
    "text": "password when I log in why isn't that standard for plc's",
    "start": "443680",
    "end": "449840"
  },
  {
    "text": "and that was back in July 2019 and with that knowledge I thought okay it must be",
    "start": "449840",
    "end": "455919"
  },
  {
    "text": "uh there must be a single master key how hard can it actually be to write my own client for an zens S7",
    "start": "455919",
    "end": "463440"
  },
  {
    "text": "PLC and 6 weeks later as a single person project I actually had my first proof of",
    "start": "463440",
    "end": "469840"
  },
  {
    "text": "concept client to connect to the S7 1,500 I have to admit back then many",
    "start": "469840",
    "end": "476400"
  },
  {
    "text": "things were hardcoded many things were not fully but this client worked it worked for the",
    "start": "476400",
    "end": "481919"
  },
  {
    "text": "welding machine and it also worked for other S7 machines that we have seen back",
    "start": "481919",
    "end": "488759"
  },
  {
    "text": "then with that client I could already read variables which is what I originally wanted but the protocol also",
    "start": "488759",
    "end": "496759"
  },
  {
    "text": "allowed me to write variables or outright stop the entire",
    "start": "496759",
    "end": "501800"
  },
  {
    "text": "machine now let's fast forward to 2023 uh back in the same year of 2019 a",
    "start": "501800",
    "end": "508599"
  },
  {
    "text": "few more public ation have been released which confirm our findings from the same",
    "start": "508599",
    "end": "514279"
  },
  {
    "text": "year so basically the S7 communication protocol has a single master key and if",
    "start": "514279",
    "end": "522080"
  },
  {
    "text": "you figure out that public key you can write your own client there has also been a very important publication last",
    "start": "522080",
    "end": "529800"
  },
  {
    "text": "year where the team 82 at Clarity was able to uncover the hidden private key",
    "start": "529800",
    "end": "536279"
  },
  {
    "text": "of an S7 and thereby even break the last defenses of zman's",
    "start": "536279",
    "end": "542959"
  },
  {
    "text": "plc's what all these Publications have in common they tell us what's possible",
    "start": "542959",
    "end": "548040"
  },
  {
    "text": "they don't tell us exactly how it's possible crucial DET details to reproduce the findings are left out and",
    "start": "548040",
    "end": "557040"
  },
  {
    "text": "probably the researchers had good reasons for that back then but the consequence is also that researchers",
    "start": "557040",
    "end": "564000"
  },
  {
    "text": "like us need to do the same work over and over again and this is what we are going to change",
    "start": "564000",
    "end": "571440"
  },
  {
    "text": "today for that we had a look at the zens S7 1,500 software controller this is a",
    "start": "571440",
    "end": "578440"
  },
  {
    "text": "software only variant of the popular S7 1,500 PLC it nicely runs in a VM on an",
    "start": "578440",
    "end": "587399"
  },
  {
    "text": "regular x86 computer next to Windows and all these properties make it very",
    "start": "587399",
    "end": "593440"
  },
  {
    "text": "accessible to the research Community the protocol the Comm",
    "start": "593440",
    "end": "599079"
  },
  {
    "text": "communication protocol that is spoken by this software controller has been introduced in",
    "start": "599079",
    "end": "605399"
  },
  {
    "text": "2015 with clarity's um publication last year in 2022 it has been superseded by a",
    "start": "605399",
    "end": "613440"
  },
  {
    "text": "standards based TLS protocol however that firmware update has hardly seen",
    "start": "613440",
    "end": "619640"
  },
  {
    "text": "existing machines so the communication protocol from 2015 is still the most",
    "start": "619640",
    "end": "625640"
  },
  {
    "text": "popular one the concepts of that protocol are also similar to the",
    "start": "625640",
    "end": "630920"
  },
  {
    "text": "hardware PLC but the actual cryptographic details are different so what you see today about the software",
    "start": "630920",
    "end": "637160"
  },
  {
    "text": "controller can't exactly be applied to the hardware one anyway concepts are",
    "start": "637160",
    "end": "644720"
  },
  {
    "text": "similar so what we did we started reverse engineering the software",
    "start": "644720",
    "end": "649920"
  },
  {
    "text": "controller and when you actually do that um you find a self-contained elf binary",
    "start": "649920",
    "end": "655800"
  },
  {
    "text": "of the entire software controller firmware but sadly you soon find out it is encrypted it can't just be put into",
    "start": "655800",
    "end": "663519"
  },
  {
    "text": "gidra fortunately ban and dunna have last year developed a harness for the",
    "start": "663519",
    "end": "669279"
  },
  {
    "text": "Intel pin framework to use the decryptor code which is also Standalone and comes",
    "start": "669279",
    "end": "675560"
  },
  {
    "text": "in another binary and to jump right into the decryption function call it to",
    "start": "675560",
    "end": "681560"
  },
  {
    "text": "decrypt the binary and then receive a decrypted elf binary to our regret that",
    "start": "681560",
    "end": "688440"
  },
  {
    "text": "harness was not released to the general public so we had to redo their work and",
    "start": "688440",
    "end": "693920"
  },
  {
    "text": "this is what we've done and we are releasing our work today we have reimplemented the harness you find it on",
    "start": "693920",
    "end": "700920"
  },
  {
    "text": "GitHub here check it out if you like and if you're interested in more details about this method check out the",
    "start": "700920",
    "end": "707880"
  },
  {
    "text": "excellent talk that they gave at blackhead USA last year I don't want to go into any more details here they have",
    "start": "707880",
    "end": "715360"
  },
  {
    "text": "already laid it out if you are interested in just using the method you",
    "start": "715360",
    "end": "721160"
  },
  {
    "text": "have our code on GitHub now so now that we have a regular elf binary for dynamic analysis Tom will",
    "start": "721160",
    "end": "729639"
  },
  {
    "text": "take over and show you what we found there okay so now that we had to fir the",
    "start": "729639",
    "end": "734760"
  },
  {
    "text": "Crypt it our first idea was to actually run it in the VM and then attach a debugger and figure out what it's doing",
    "start": "734760",
    "end": "740480"
  },
  {
    "text": "during the handshake so that we can replicate it and so of course the first step to that is that usually firmware",
    "start": "740480",
    "end": "746160"
  },
  {
    "text": "files have some kind of header that basically tells the computer where to load it in into memory and where to jump",
    "start": "746160",
    "end": "752440"
  },
  {
    "text": "to start executing code and so there was also a header the so-call multi boot header present in that file um but even",
    "start": "752440",
    "end": "758760"
  },
  {
    "text": "though that header existed it turned out that it was at the wrong location and there were a couple other things that didn't really work out um so instead of",
    "start": "758760",
    "end": "765600"
  },
  {
    "text": "just using the normal boot loaders um we just implemented our own that then just takes the image loads it up and uh",
    "start": "765600",
    "end": "772920"
  },
  {
    "text": "starts executing and so that worked pretty well um initially during decomil",
    "start": "772920",
    "end": "778519"
  },
  {
    "text": "uh during initial um analysis static analysis and we saw a lot of logging",
    "start": "778519",
    "end": "783839"
  },
  {
    "text": "calls and so we initially expected to see some of those after we booted the firmware um but it turns out that they",
    "start": "783839",
    "end": "790480"
  },
  {
    "text": "didn't see anything and there's a simple reason for that um which was that even though there are loging calls they are",
    "start": "790480",
    "end": "796079"
  },
  {
    "text": "disabled at compile time and so the function that actually is supposed to print out the messages just does nothing",
    "start": "796079",
    "end": "802959"
  },
  {
    "text": "um so that's where we also took advantage of a boot loader so instead of just loading the binary we also modified",
    "start": "802959",
    "end": "809240"
  },
  {
    "text": "in place so for example you see some code here that just patches the puts function so that it actually prints out",
    "start": "809240",
    "end": "816199"
  },
  {
    "text": "the messages to a Serial port and we just uh do that before jumping to the entry point and so now once we've done",
    "start": "816199",
    "end": "822639"
  },
  {
    "text": "that and we can actually see all those messages so at the beginning you can see the PLC trying to query some information",
    "start": "822639",
    "end": "828320"
  },
  {
    "text": "about itself so that it knows which configuration it's supposed to be running and that continues on all the",
    "start": "828320",
    "end": "834720"
  },
  {
    "text": "way through um to the end of the early boot process um where it's states that the process is completed and starts um",
    "start": "834720",
    "end": "841399"
  },
  {
    "text": "executing user threat unfortunately that is where those logging calls end but it's still was very useful to get those",
    "start": "841399",
    "end": "847600"
  },
  {
    "text": "stages up and working so the next problem was that the firmware is of course supposed to be running in a",
    "start": "847600",
    "end": "853600"
  },
  {
    "text": "virtual machine and virtual machines often communicate with the hypervisor through so-called hyper calls those",
    "start": "853600",
    "end": "859480"
  },
  {
    "text": "usually serve two purposes um the first one is that some things are just really difficult to do so for example the VM",
    "start": "859480",
    "end": "865440"
  },
  {
    "text": "can't really know information about its own memory so it talks to the hypervisor",
    "start": "865440",
    "end": "871079"
  },
  {
    "text": "to do that another thing is that just sometimes doing things through the hypervisor is just more efficient and",
    "start": "871079",
    "end": "877040"
  },
  {
    "text": "that's probably why they decided to also access iio apic registers through the",
    "start": "877040",
    "end": "882440"
  },
  {
    "text": "hypervisor um in the end it turned out that we are not using Sean hypervisor and of course we were using the Linux",
    "start": "882440",
    "end": "889560"
  },
  {
    "text": "hypervisor KVM and that hypervisor expects different hyper calls in the end what this results in is that this",
    "start": "889560",
    "end": "895480"
  },
  {
    "text": "firmware is trying to commun communicate with the hypervisor but the hyper Wier doesn't know what to do with that information because it expects different",
    "start": "895480",
    "end": "901920"
  },
  {
    "text": "hyper calls there are just certain set of sets of conventions that are just different and so in the end what we",
    "start": "901920",
    "end": "908000"
  },
  {
    "text": "decided to do was stop using hardware virtualization and to stop relying on the hypervisor and instead we just use",
    "start": "908000",
    "end": "914320"
  },
  {
    "text": "software virtualization where we can then just go ahead and change the way the vmm call instruction is emulated and",
    "start": "914320",
    "end": "920519"
  },
  {
    "text": "by doing that we can then just go ahead and implement the hyper cods like we want to so the next thing that we want",
    "start": "920519",
    "end": "926920"
  },
  {
    "text": "notice that is that order to um for the firmware to boot it expects certain PCI",
    "start": "926920",
    "end": "932600"
  },
  {
    "text": "devices to be there um so the first two that we noticed were called Wyn com TRC",
    "start": "932600",
    "end": "938600"
  },
  {
    "text": "to this day we're still not really sure what they're supposed to be doing um but we know that the fir won't boot without",
    "start": "938600",
    "end": "945079"
  },
  {
    "text": "them so we tried to emulate them such a way that the firm eventually makes progress but in the end we couldn't",
    "start": "945079",
    "end": "951680"
  },
  {
    "text": "really figure out what they're supposed to be doing and this was eventually dead end um so if you want to continue",
    "start": "951680",
    "end": "957800"
  },
  {
    "text": "working on that um all of the code that we used for that so as well as like the boot loader as well as the modifications",
    "start": "957800",
    "end": "963920"
  },
  {
    "text": "to Q qmu for the hyper calls are both available on GitHub and um yeah so know",
    "start": "963920",
    "end": "970399"
  },
  {
    "text": "that running the firmware isn't a viable option the next best thing is then static analysis and we just look at the",
    "start": "970399",
    "end": "976680"
  },
  {
    "text": "binary without actually running it and the first big problem with that is that the firmware is actually really weird",
    "start": "976680",
    "end": "982040"
  },
  {
    "text": "binary so the firmware is a 32-bit elf file um but it actually runs 64-bit code",
    "start": "982040",
    "end": "988959"
  },
  {
    "text": "but even though it's using 64-bit code all the pointers are only 32 bits I'm not sure why they decided to do that but",
    "start": "988959",
    "end": "995720"
  },
  {
    "text": "yeah that's just what we have to deal with and so the problem with that is that a lot of decompilers like Ida Binga",
    "start": "995720",
    "end": "1001759"
  },
  {
    "text": "gitra they really don't like that they all don't have the same problems but in the end none of them really worked",
    "start": "1001759",
    "end": "1007480"
  },
  {
    "text": "straight out of the box and so for example um G as you can see here it tries to do a lot of casts that just",
    "start": "1007480",
    "end": "1014079"
  },
  {
    "text": "make reverse engineering just not like that's not great like really difficult",
    "start": "1014079",
    "end": "1019600"
  },
  {
    "text": "um so yeah to get around that um we decided to just um forra and in",
    "start": "1019600",
    "end": "1025480"
  },
  {
    "text": "particular the processor definitions and just switch them up a bit so um we used the regular 64-bit instruction set but",
    "start": "1025480",
    "end": "1032720"
  },
  {
    "text": "just changed all of the pointers and addresses to be 32-bit and once we've done that we actually get really really",
    "start": "1032720",
    "end": "1038918"
  },
  {
    "text": "nice DEC compilation results and um this also applies for certain structures so",
    "start": "1038919",
    "end": "1045520"
  },
  {
    "text": "um for example a files have headers in them and pointers have certain sizes and this also fix the start and uh yeah once",
    "start": "1045520",
    "end": "1052320"
  },
  {
    "text": "you've done that all the decumulation results are really useful um so if you also want to use that that code is also",
    "start": "1052320",
    "end": "1058440"
  },
  {
    "text": "available on GitHub you can just download it and install it as a plugin into grra and once you've done that you",
    "start": "1058440",
    "end": "1064520"
  },
  {
    "text": "get all those nice features um so the next thing that we noticed that that the firmware contains a lot of rtti",
    "start": "1064520",
    "end": "1071080"
  },
  {
    "text": "information and which is called runtime type information which just provides a lot of context about C++ classes and uh",
    "start": "1071080",
    "end": "1078400"
  },
  {
    "text": "there's a really great great plugin by Andrew steli which just required one small fix and also depended on those",
    "start": "1078400",
    "end": "1084159"
  },
  {
    "text": "pointer sizes uh from earlier um but that fix has since been upstreamed and",
    "start": "1084159",
    "end": "1089640"
  },
  {
    "text": "uh we were able to identify about 8,000 C++ classes last but not least um we also",
    "start": "1089640",
    "end": "1095679"
  },
  {
    "text": "wrote a couple of scripts um so for example there's a certain function that gets called by a lot of functions um that contains that function's name um so",
    "start": "1095679",
    "end": "1103440"
  },
  {
    "text": "we just wrot some scripts to recover function names from that and also the communication protocol which is of",
    "start": "1103440",
    "end": "1108799"
  },
  {
    "text": "course the thing we are interested in uh the thing that we really interested in um contains a lot of error codes that",
    "start": "1108799",
    "end": "1115200"
  },
  {
    "text": "are really easily recognizable and so we wrote a script to also um yeah decode",
    "start": "1115200",
    "end": "1121480"
  },
  {
    "text": "those errors and annotate them with comments and so all of those scripts are also part of the plugin so if you download that and install into gitra you",
    "start": "1121480",
    "end": "1128520"
  },
  {
    "text": "get access to all of those yeah so now that we talked about how we did the",
    "start": "1128520",
    "end": "1133559"
  },
  {
    "text": "analysis uh let's actually talk about the results of it um and of course the thing we're interested in where how the",
    "start": "1133559",
    "end": "1139120"
  },
  {
    "text": "hand check Works how all the crypto crypto Works um so let's start with a very high level overview of the hand",
    "start": "1139120",
    "end": "1145120"
  },
  {
    "text": "shck so first off you have the official client which is called T portal that sends a message to the S7 PLC and that",
    "start": "1145120",
    "end": "1152640"
  },
  {
    "text": "it wants to create a session um the PLC then responds with a challenge um which the client will then encrypt um as long",
    "start": "1152640",
    "end": "1161200"
  },
  {
    "text": "along with a symmetric key um send that back to the PLC which will decrypt The Challenge and symmetric key and then",
    "start": "1161200",
    "end": "1167520"
  },
  {
    "text": "after that's done both parties activate Integrity protection so even though the um protocol is not encrypted you also",
    "start": "1167520",
    "end": "1173559"
  },
  {
    "text": "can't for Force messages because there's Integrity protection",
    "start": "1173559",
    "end": "1178880"
  },
  {
    "text": "um yeah so it turns out that the part about um the challenge at a symmetric",
    "start": "1178880",
    "end": "1184840"
  },
  {
    "text": "key is specific to Hardware variance and software variance um so not a lot of known about the hardware variance it's",
    "start": "1184840",
    "end": "1191559"
  },
  {
    "text": "known to be very heavy heavily OB fiscated some parts have been identified as like elliptic curve 160 bit El Al",
    "start": "1191559",
    "end": "1199320"
  },
  {
    "text": "something like that um but unfortunately no full description has ever been published um what we'll present today is",
    "start": "1199320",
    "end": "1205720"
  },
  {
    "text": "a full description of the um algorithms required for the surway variant um so",
    "start": "1205720",
    "end": "1211200"
  },
  {
    "text": "you can also see a lot more details in our white paper and if you follow all of those you will be able to create a",
    "start": "1211200",
    "end": "1216840"
  },
  {
    "text": "session to the PLC and one last thing the challenge mainly serves two purposes",
    "start": "1216840",
    "end": "1223440"
  },
  {
    "text": "um so the first one is to pretend replay attacks so you can't just capture some",
    "start": "1223440",
    "end": "1228679"
  },
  {
    "text": "packets and then replay them to the PLC the challenge will prevent that um but another thing that's also very",
    "start": "1228679",
    "end": "1233919"
  },
  {
    "text": "noteworthy is that the challenge seemingly exists to just make connecting to your PLC harder it seems that seens",
    "start": "1233919",
    "end": "1241960"
  },
  {
    "text": "really doesn't want other people to connect to plcs other than with the official clients and so we'll see a lot",
    "start": "1241960",
    "end": "1248640"
  },
  {
    "text": "of officiation that has gone into those encryption algorithms that seemingly don't serve any purpose other than",
    "start": "1248640",
    "end": "1255360"
  },
  {
    "text": "ofation okay um so let's start with with the broad overview of the handshake it mostly has three steps the first one is",
    "start": "1255360",
    "end": "1262280"
  },
  {
    "text": "to drive a shared secret using asymmetric using an asymmetric key exchange we will then derive some keys",
    "start": "1262280",
    "end": "1268640"
  },
  {
    "text": "from that and lastly we'll use those keys to actually transmit the challenge in",
    "start": "1268640",
    "end": "1274000"
  },
  {
    "text": "symmetrically so the key exchange is done over elliptic curve the Helman using a custom curve so usually with",
    "start": "1274000",
    "end": "1281200"
  },
  {
    "text": "elliptic curve cryptography you have certain curves that are published by um organiz organizations like nist instead",
    "start": "1281200",
    "end": "1287880"
  },
  {
    "text": "of that Sean seemingly has decided to go with a completely custom curve and so",
    "start": "1287880",
    "end": "1292919"
  },
  {
    "text": "yeah um that's the first thing we had to reverse engineer um we already talked about that there's a single master key",
    "start": "1292919",
    "end": "1299240"
  },
  {
    "text": "well it turns out that that's a private key on the PLC side so correspondingly to that you also have a single public key and that's what you can see here um",
    "start": "1299240",
    "end": "1307279"
  },
  {
    "text": "how can we be so sure that those are really the parameters well it turns out that we found some code that exactly",
    "start": "1307279",
    "end": "1312640"
  },
  {
    "text": "uses the equation for an elliptic curve to check whether uh in this case the public key is on the Curve",
    "start": "1312640",
    "end": "1318679"
  },
  {
    "text": "so by just looking at the equation we can then just figure out all of the parameters used for the um elliptic",
    "start": "1318679",
    "end": "1324200"
  },
  {
    "text": "curve which is really useful for us um one quick reminder about how",
    "start": "1324200",
    "end": "1329640"
  },
  {
    "text": "elliptic curve the Helman Works um so each party generates a nons that will be",
    "start": "1329640",
    "end": "1335360"
  },
  {
    "text": "its private key it then uses that nons and multiplies um a base Point G with it",
    "start": "1335360",
    "end": "1341000"
  },
  {
    "text": "that is then the public key um so when also when I say multiplication it's like not regular integer multiplication but",
    "start": "1341000",
    "end": "1347440"
  },
  {
    "text": "elliptic multiplication so it's a bit more convoluted but it's manageable and",
    "start": "1347440",
    "end": "1352480"
  },
  {
    "text": "yeah so that's the public key um each party each party does that um and lastly",
    "start": "1352480",
    "end": "1358799"
  },
  {
    "text": "um to get the shared secret we then multiply the other parties public key with the nons again and uh in the end",
    "start": "1358799",
    "end": "1365360"
  },
  {
    "text": "the math works out so that both parties get the same shared secret but none of an outsider wouldn't be able to uh also",
    "start": "1365360",
    "end": "1372000"
  },
  {
    "text": "get that secret by just looking at the um public Keys exchanged um so we can also see some C",
    "start": "1372000",
    "end": "1378000"
  },
  {
    "text": "doing exactly that just gener generating a random number um using elliptic curve math to multiply by the base point and",
    "start": "1378000",
    "end": "1384600"
  },
  {
    "text": "then multiplying the other other parties public key to get the Shar shared secret um so now that we have the shared",
    "start": "1384600",
    "end": "1391240"
  },
  {
    "text": "secret and we want to drive some more keys from that and this part is pre convoluted um so first off um we use the",
    "start": "1391240",
    "end": "1399520"
  },
  {
    "text": "shared secret which is a point on the elliptic curve and we just take the X component and we raise a 2 by two Matrix",
    "start": "1399520",
    "end": "1406640"
  },
  {
    "text": "to that X component we then Ed that the result of that calculation encode it as little Indian",
    "start": "1406640",
    "end": "1413000"
  },
  {
    "text": "value hash it truncate it hash it again and last but not least we take the",
    "start": "1413000",
    "end": "1418960"
  },
  {
    "text": "resulting digest split it into two parts and encrypt both of those parts separately so yeah there's a lot going",
    "start": "1418960",
    "end": "1425640"
  },
  {
    "text": "on um in case you're interested those are the parameters for the Matrix and",
    "start": "1425640",
    "end": "1431080"
  },
  {
    "text": "here's also quote that broadly does that so you can see it's just doing metric expon exponentiation hashing again copying",
    "start": "1431080",
    "end": "1438240"
  },
  {
    "text": "some bites around hashing again and then encrypting both parts um so next up we'll take a look at the encryption",
    "start": "1438240",
    "end": "1444200"
  },
  {
    "text": "because it's actually pretty interesting um so you may have already seen that we called it a modified AES algorithm um so",
    "start": "1444200",
    "end": "1450400"
  },
  {
    "text": "to start with that we'll first take a look at how normal AES is supposed to work um so usually with AES you have one",
    "start": "1450400",
    "end": "1456600"
  },
  {
    "text": "master key um that you then drive a certain set of round kees from then you",
    "start": "1456600",
    "end": "1461919"
  },
  {
    "text": "take each block you add the round key to that and you substitute some bites around then you shift some routs um rows",
    "start": "1461919",
    "end": "1468200"
  },
  {
    "text": "around in the block you mix some of the columns last then you add the round key",
    "start": "1468200",
    "end": "1473360"
  },
  {
    "text": "again do that nine times over and then you have one more round of adding the no",
    "start": "1473360",
    "end": "1478520"
  },
  {
    "text": "substituting some bites um Shifting the rows around and then adding ground key once more um so instead of doing all of",
    "start": "1478520",
    "end": "1484600"
  },
  {
    "text": "that uh Simons has decided to first off add a stop and but then also shorten the",
    "start": "1484600",
    "end": "1489960"
  },
  {
    "text": "remaining part to five rounds so we D the new Step the reorder step um yeah",
    "start": "1489960",
    "end": "1496039"
  },
  {
    "text": "but that's not all um Additionally the round keys are static keys so usually you have different",
    "start": "1496039",
    "end": "1502399"
  },
  {
    "text": "master key each time you encrypt and so the round keys will be different each time instead of that they just use",
    "start": "1502399",
    "end": "1507600"
  },
  {
    "text": "static keys so technically it's not even an encryption algorithm because encryption algorithms are supposed to",
    "start": "1507600",
    "end": "1512679"
  },
  {
    "text": "have separate keys but that's beside the point um but along with that they also",
    "start": "1512679",
    "end": "1517720"
  },
  {
    "text": "modified the sub bites and the mixed column steps um so let's take a look at how that works um so first off the",
    "start": "1517720",
    "end": "1523399"
  },
  {
    "text": "reorder steps this step just um takes each no takes the first and last column",
    "start": "1523399",
    "end": "1529360"
  },
  {
    "text": "and rotates them by one position um so usually with the mix column step you take each column um take",
    "start": "1529360",
    "end": "1536640"
  },
  {
    "text": "all of the values apply a mixing function to them that just shuffles them around and does some computations with",
    "start": "1536640",
    "end": "1542559"
  },
  {
    "text": "them and then writes them back to the same location um but instead of that seens has decided to take each column",
    "start": "1542559",
    "end": "1549760"
  },
  {
    "text": "also apply a function to it but this function also sort of depends on the round index on the column index then",
    "start": "1549760",
    "end": "1555399"
  },
  {
    "text": "instead of writing it back to um the same same column they write it back to a row um last but not least uh the subite",
    "start": "1555399",
    "end": "1563200"
  },
  {
    "text": "step usually you just take each bite in the block and apply substitution box which is just a lookout table for each",
    "start": "1563200",
    "end": "1569840"
  },
  {
    "text": "bite you have a different bite that it gets substituted for um but instead of that seens has decided to XR um value",
    "start": "1569840",
    "end": "1577279"
  },
  {
    "text": "into both the input and the output of the substitution box which if you think about it some just basically is",
    "start": "1577279",
    "end": "1582919"
  },
  {
    "text": "equivalent to using a different substitution box for each round okay um so as a result of those um",
    "start": "1582919",
    "end": "1591240"
  },
  {
    "text": "encryption encryptions we get the to the two shared keys and in the end we'll use",
    "start": "1591240",
    "end": "1597159"
  },
  {
    "text": "that to actually encrypt the change in symmetric key and let's take a look at how that works um so we're not done",
    "start": "1597159",
    "end": "1603240"
  },
  {
    "text": "generating key there keys there's one last key that will be generated but this one is just generated at random so",
    "start": "1603240",
    "end": "1608640"
  },
  {
    "text": "that's not that interesting um but we'll um protect that key using the two keys",
    "start": "1608640",
    "end": "1613919"
  },
  {
    "text": "we just generated so the first key from the first half that we generated um is",
    "start": "1613919",
    "end": "1619640"
  },
  {
    "text": "used to encrypt that new key um that resulting Cipher Tex is then hashed and",
    "start": "1619640",
    "end": "1625360"
  },
  {
    "text": "then encrypted using the second key so this essentially is equivalent to just uh encryption as well as authentication",
    "start": "1625360",
    "end": "1631640"
  },
  {
    "text": "um which is of course the goal um that wants to yeah securely and authentically",
    "start": "1631640",
    "end": "1637000"
  },
  {
    "text": "uh transmit those values um but in the end now that we have that FML key that",
    "start": "1637000",
    "end": "1642080"
  },
  {
    "text": "has been transmitted securely we can finally use some same same crypto again and for that that decided to use as GCM",
    "start": "1642080",
    "end": "1649240"
  },
  {
    "text": "which is pretty well known and well understood and has good properties um to finally use that to just uh concatenate",
    "start": "1649240",
    "end": "1655559"
  },
  {
    "text": "to challenge and symetri key and encrypt that okay um so let's take a very quick",
    "start": "1655559",
    "end": "1661640"
  },
  {
    "text": "recap at what we just explored um so the first step uh using asymmetric key",
    "start": "1661640",
    "end": "1666880"
  },
  {
    "text": "exchange sort of makes sense I mean it's not great that the private key is hardcoded in the PLC but yeah apart from",
    "start": "1666880",
    "end": "1674120"
  },
  {
    "text": "that using Astic key exchanges Mak sense the second St of deriving shared Keys as",
    "start": "1674120",
    "end": "1679640"
  },
  {
    "text": "far as we can tell doesn't really serve any cryptographic purposes whatsoever and only exists to make it harder for",
    "start": "1679640",
    "end": "1685320"
  },
  {
    "text": "other people I mean well-intentioned people as well as Bad actors to create official um inofficial clients as far as",
    "start": "1685320",
    "end": "1692399"
  },
  {
    "text": "we can tell this doesn't really serve any purpose in terms of cryptography um in the end the third step is also a bit",
    "start": "1692399",
    "end": "1699039"
  },
  {
    "text": "more convoluted but it's not as bad so it's excusable um in the end all of the",
    "start": "1699039",
    "end": "1704360"
  },
  {
    "text": "values that we um calculated during all of those steps um will be transmitted to the PLC in a So-Cal blob structure um",
    "start": "1704360",
    "end": "1711279"
  },
  {
    "text": "which the PLC will then take a look at and uh recover all the values from okay",
    "start": "1711279",
    "end": "1717000"
  },
  {
    "text": "um so that is how that hand check works and how we actually securely transmit",
    "start": "1717000",
    "end": "1722039"
  },
  {
    "text": "values to the PLC during the hand check and with with all of that I'll yield back to Colin who will tell us what we",
    "start": "1722039",
    "end": "1727799"
  },
  {
    "text": "can learn from all of this so after we have just seen all the",
    "start": "1727799",
    "end": "1733600"
  },
  {
    "text": "details on first decrypting the firmware binary then analyzing it in jedra and",
    "start": "1733600",
    "end": "1739240"
  },
  {
    "text": "communicating with the PLC so basically breaking all of the defenses that zans",
    "start": "1739240",
    "end": "1744320"
  },
  {
    "text": "has set up let's take a step back and look at what do we learn from all this",
    "start": "1744320",
    "end": "1751000"
  },
  {
    "text": "for that I had a look at the Timeline so stet was in 2010 and it made huge",
    "start": "1751000",
    "end": "1757600"
  },
  {
    "text": "headlines seens was the primarily affected vendor of that first computer",
    "start": "1757600",
    "end": "1762760"
  },
  {
    "text": "War which directly attacked a specific PLC system only four years afterwards we",
    "start": "1762760",
    "end": "1770640"
  },
  {
    "text": "still got only an obscured communication protocol from zens and this protocol has",
    "start": "1770640",
    "end": "1776640"
  },
  {
    "text": "actually lived until 2022 it only took the Revelation from",
    "start": "1776640",
    "end": "1782080"
  },
  {
    "text": "from from clarities Team 82 to finally deprecate that Legacy communication",
    "start": "1782080",
    "end": "1788880"
  },
  {
    "text": "protocol and replace it with something that uses individual per device certificates that asks you to set up a",
    "start": "1788880",
    "end": "1796360"
  },
  {
    "text": "password and that is based on properly implemented",
    "start": "1796360",
    "end": "1802679"
  },
  {
    "text": "TLS if this was an operating system or a browser we probably wouldn't be talking",
    "start": "1802679",
    "end": "1807720"
  },
  {
    "text": "here today it's one year after the fix and for browsers and operating systems",
    "start": "1807720",
    "end": "1813559"
  },
  {
    "text": "in one year such a fix actually reaches all important machines at least the",
    "start": "1813559",
    "end": "1819360"
  },
  {
    "text": "majority of it but still this isn't the case for plc's we still see totally",
    "start": "1819360",
    "end": "1825279"
  },
  {
    "text": "unsecured plc's every day and a lot of plcs which have never seen any firmware",
    "start": "1825279",
    "end": "1832559"
  },
  {
    "text": "update why are plc's so far behind which is why I conclude we still have a",
    "start": "1832559",
    "end": "1839000"
  },
  {
    "text": "cultural problem to solve and not a technical one let's try to fix that and",
    "start": "1839000",
    "end": "1845320"
  },
  {
    "text": "let's hope it doesn't take us another decade to fix this is why I want to end our",
    "start": "1845320",
    "end": "1851640"
  },
  {
    "text": "presentation with a call to all affected participants in the industry starting with a PLC",
    "start": "1851640",
    "end": "1857960"
  },
  {
    "text": "vendors first of all despite Zan's remarkable efforts please learn that",
    "start": "1857960",
    "end": "1863360"
  },
  {
    "text": "security by obscurity never works out in the long term the measures that zans has",
    "start": "1863360",
    "end": "1869880"
  },
  {
    "text": "taken were really interesting to us as reverse Engineers but after all none of",
    "start": "1869880",
    "end": "1876159"
  },
  {
    "text": "of them have increased the effective security level an individual password",
    "start": "1876159",
    "end": "1881399"
  },
  {
    "text": "per PLC would have but not these measures they have only tried to uh inre",
    "start": "1881399",
    "end": "1887559"
  },
  {
    "text": "the vendor loog in the latest research by Clarity has also shown that uh with",
    "start": "1887559",
    "end": "1894000"
  },
  {
    "text": "the with a traditional protocol even a password wouldn't have guarded you from being hacked because this password is",
    "start": "1894000",
    "end": "1901880"
  },
  {
    "text": "also depending on the hardcoded private key which cannot be changed the TLs",
    "start": "1901880",
    "end": "1907519"
  },
  {
    "text": "based firmware could fix all of that but it has hardly reached existing machines which is why my next call to PLC vendors",
    "start": "1907519",
    "end": "1914639"
  },
  {
    "text": "is get your update processes fixed right now this is a very tedious manual",
    "start": "1914639",
    "end": "1920000"
  },
  {
    "text": "process it requires a paid update of the client software running on the",
    "start": "1920000",
    "end": "1925600"
  },
  {
    "text": "workstation it requires a tedious manual process to go to Every PLC around and",
    "start": "1925600",
    "end": "1931919"
  },
  {
    "text": "apply the update good luck finding all the plcs in your company and for some devices for example",
    "start": "1931919",
    "end": "1940440"
  },
  {
    "text": "for the welding machine I originally talked about this may also imply a costly",
    "start": "1940440",
    "end": "1946080"
  },
  {
    "text": "recertification because that machine was never supposed to run any different software than the one it was delivered",
    "start": "1946080",
    "end": "1953159"
  },
  {
    "text": "with the next call therefore goes out to machine manufacturers for first of all please",
    "start": "1953159",
    "end": "1959440"
  },
  {
    "text": "realize your machine is a computer now and it needs regular updates just like",
    "start": "1959440",
    "end": "1965000"
  },
  {
    "text": "every other computer it is your job to pass them down to your customers your",
    "start": "1965000",
    "end": "1970639"
  },
  {
    "text": "job is not done just after you have sold the machine you need to provide continuous service now",
    "start": "1970639",
    "end": "1979039"
  },
  {
    "text": "to customers I also want to tell the most important takeaway from today should be keep the company and the",
    "start": "1979799",
    "end": "1987960"
  },
  {
    "text": "Machine networks separated if you already do that perfect if you don't do",
    "start": "1987960",
    "end": "1993200"
  },
  {
    "text": "that I know it can be very compelling to just be able to access a PLC from an office machine in a totally different",
    "start": "1993200",
    "end": "1999720"
  },
  {
    "text": "building but this is the first step that gets you into security nightmares so in",
    "start": "1999720",
    "end": "2004960"
  },
  {
    "text": "that case please restore the separation uh between company and machine networks",
    "start": "2004960",
    "end": "2011480"
  },
  {
    "text": "don't expect your plcs to withand any serious cyber attacks always have",
    "start": "2011480",
    "end": "2016919"
  },
  {
    "text": "another layer of security in your network and know that you're aware of",
    "start": "2016919",
    "end": "2022120"
  },
  {
    "text": "the need for regular updates demand them from your machine companies and also",
    "start": "2022120",
    "end": "2027639"
  },
  {
    "text": "from your PLC vendors and the final call goes out to fellow researchers please follow our example",
    "start": "2027639",
    "end": "2036039"
  },
  {
    "text": "continue to share responsible research but also reproducible research we have",
    "start": "2036039",
    "end": "2042240"
  },
  {
    "text": "already shown a few instances where work had to be done over and over again and",
    "start": "2042240",
    "end": "2047480"
  },
  {
    "text": "this actually only helps the adversaries there is no point in just",
    "start": "2047480",
    "end": "2052960"
  },
  {
    "text": "doing that over and over again and for example as uh olle White House has said",
    "start": "2052960",
    "end": "2059560"
  },
  {
    "text": "this morning in his keynote we need collaboration and we need radical kandor",
    "start": "2059560",
    "end": "2065158"
  },
  {
    "text": "this just works into that sharing here is the only way to advance the state of",
    "start": "2065159",
    "end": "2070800"
  },
  {
    "text": "PLC security to put it in a nutshell modern automation products are just embedded",
    "start": "2070800",
    "end": "2078520"
  },
  {
    "text": "computers and as such they need to be subjected to the same cyber security standards as the rest of the IT industry",
    "start": "2078520",
    "end": "2085960"
  },
  {
    "text": "this is the most important takeaway for today with that I'd like to conclude our",
    "start": "2085960",
    "end": "2092480"
  },
  {
    "text": "presentation you can find all of that in even more detail in our White paper",
    "start": "2092480",
    "end": "2097680"
  },
  {
    "text": "check it out we tried to make it accessible to everybody shout out to all",
    "start": "2097680",
    "end": "2103320"
  },
  {
    "text": "the people who reviewed our work and thank you very much for your",
    "start": "2103320",
    "end": "2108410"
  },
  {
    "text": "[Applause]",
    "start": "2108410",
    "end": "2117040"
  },
  {
    "text": "attention do we have any questions I have some experience with actually I think there's a microphone",
    "start": "2117040",
    "end": "2123160"
  },
  {
    "text": "over there if you yeah that'd be great thank you",
    "start": "2123160",
    "end": "2128800"
  },
  {
    "text": "okay uh can you hear me now yeah yes okay um one of my companies we doing",
    "start": "2131440",
    "end": "2138640"
  },
  {
    "text": "actually penetration testing of Industrial Systems and trains so I'm quite familiar with this this this",
    "start": "2138640",
    "end": "2145880"
  },
  {
    "text": "in an N shell uh just a quick question did you have a chance to actually work",
    "start": "2145880",
    "end": "2151400"
  },
  {
    "text": "from the plcs towards the Control software because from my experience the Control software and the configuration",
    "start": "2151400",
    "end": "2157319"
  },
  {
    "text": "software is vulnerable as hell too and it's usually run on Windows machine uh which is usually sitting inside the",
    "start": "2157319",
    "end": "2164480"
  },
  {
    "text": "network as you said in office somewhere and so you would be talking about tool used to program those plcs uh",
    "start": "2164480",
    "end": "2172599"
  },
  {
    "text": "yeah but also there are tools actually produced by seens who actually do operate remotely those plcs it's not",
    "start": "2172599",
    "end": "2178520"
  },
  {
    "text": "just a configuration it's it's the systems which do collect data about the for example frequency of the machine and",
    "start": "2178520",
    "end": "2184839"
  },
  {
    "text": "these things yeah we haven't really taken a look at that yeah I do recommend it's PR",
    "start": "2184839",
    "end": "2191560"
  },
  {
    "text": "mess I mean for our goal at our company our goal was to read out variables so that's why we wanted to connect to those",
    "start": "2191560",
    "end": "2197560"
  },
  {
    "text": "plcs yeah yeah actually four years ago we were investigating the Run sofware attacks on the uh on the factories of",
    "start": "2197560",
    "end": "2206720"
  },
  {
    "text": "one of the manufacturers of the plcs they were using also semens and the for the first time I saw the that robot",
    "start": "2206720",
    "end": "2214040"
  },
  {
    "text": "Factory like the that robots everything was was done so yeah okay okay what can definitely be done with a proprietary",
    "start": "2214040",
    "end": "2221000"
  },
  {
    "text": "protocol is not just reading variabl but also writing them or stopping the PLC so",
    "start": "2221000",
    "end": "2227160"
  },
  {
    "text": "um even though that doesn't modify the control algorithm that has been programmed on the PLC I",
    "start": "2227160",
    "end": "2234079"
  },
  {
    "text": "mean you can change so many variables and this definitely has noticeable",
    "start": "2234079",
    "end": "2239440"
  },
  {
    "text": "impact and that also works even in the cases where the firmware is signed and certified so you can still write values",
    "start": "2239440",
    "end": "2247200"
  },
  {
    "text": "because the original stack was working with the Control software not directly with the PLC he was working first on the",
    "start": "2247200",
    "end": "2252359"
  },
  {
    "text": "on the Control software and then go when went for the for the PLC so that would require to reprogram the PLC I guess and",
    "start": "2252359",
    "end": "2260440"
  },
  {
    "text": "this is what stet also did so I mean it's one protocol that zens currently",
    "start": "2260440",
    "end": "2266599"
  },
  {
    "text": "provides which does everything that um the old S7 also did so you can read",
    "start": "2266599",
    "end": "2273680"
  },
  {
    "text": "variables write them but you can also program the plc you can basically change everything once",
    "start": "2273680",
    "end": "2280359"
  },
  {
    "text": "you're authenticated and most of the time you're authenticated without any",
    "start": "2280359",
    "end": "2285760"
  },
  {
    "text": "passwords because that those are not used y",
    "start": "2285760",
    "end": "2291280"
  },
  {
    "text": "okay anybody",
    "start": "2294599",
    "end": "2298160"
  },
  {
    "text": "else okay doesn't look like it well thank you very much for your attention",
    "start": "2301680",
    "end": "2308520"
  },
  {
    "text": "y",
    "start": "2310000",
    "end": "2313000"
  }
]