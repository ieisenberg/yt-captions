[
  {
    "text": "uh good afternoon everyone welcome to",
    "start": "5759",
    "end": "8400"
  },
  {
    "text": "the braving of endoscope unpacking",
    "start": "8400",
    "end": "11559"
  },
  {
    "text": "Android apps with VM based",
    "start": "11559",
    "end": "15960"
  },
  {
    "text": "application my name is f and I'm",
    "start": "15960",
    "end": "19279"
  },
  {
    "text": "currently working at M shenai J has also",
    "start": "19279",
    "end": "24160"
  },
  {
    "text": "contributed to this",
    "start": "24160",
    "end": "27119"
  },
  {
    "text": "work today I will first give a quick",
    "start": "27119",
    "end": "30320"
  },
  {
    "text": "introduction of VM based ofation on",
    "start": "30320",
    "end": "34440"
  },
  {
    "text": "Android and share a background story",
    "start": "34440",
    "end": "37360"
  },
  {
    "text": "about uh how we became aware of this",
    "start": "37360",
    "end": "40399"
  },
  {
    "text": "topic then I will lead you through a",
    "start": "40399",
    "end": "43200"
  },
  {
    "text": "specific case of reversing Rhino bite",
    "start": "43200",
    "end": "46520"
  },
  {
    "text": "code of which the underlying VM is open",
    "start": "46520",
    "end": "51120"
  },
  {
    "text": "source next there will be elaboration of",
    "start": "51120",
    "end": "54960"
  },
  {
    "text": "a more General scenario its challenges",
    "start": "54960",
    "end": "58879"
  },
  {
    "text": "and our method of unpacking finally I",
    "start": "58879",
    "end": "62680"
  },
  {
    "text": "will share some insights and Sun up the",
    "start": "62680",
    "end": "67840"
  },
  {
    "text": "talk uh VN based obfuscation involves",
    "start": "69720",
    "end": "73759"
  },
  {
    "text": "compiling code into bite code uh",
    "start": "73759",
    "end": "77159"
  },
  {
    "text": "comprising a specific set of custom",
    "start": "77159",
    "end": "81240"
  },
  {
    "text": "instructions and running it on a custom",
    "start": "81240",
    "end": "84560"
  },
  {
    "text": "built virtual machine the tool used to",
    "start": "84560",
    "end": "88680"
  },
  {
    "text": "do this is cut Packer or of fascor and",
    "start": "88680",
    "end": "93399"
  },
  {
    "text": "uh one of the most famous uh tool of",
    "start": "93399",
    "end": "96520"
  },
  {
    "text": "them is VM protect which is uh which",
    "start": "96520",
    "end": "100520"
  },
  {
    "text": "runs on",
    "start": "100520",
    "end": "102200"
  },
  {
    "text": "PC PN based aasc has long been used for",
    "start": "102200",
    "end": "106640"
  },
  {
    "text": "beny and evil purposes such as anti-",
    "start": "106640",
    "end": "111000"
  },
  {
    "text": "plagiarism intellectual property",
    "start": "111000",
    "end": "113439"
  },
  {
    "text": "protection and uh also to hide malicious",
    "start": "113439",
    "end": "118840"
  },
  {
    "text": "payloads",
    "start": "118840",
    "end": "120680"
  },
  {
    "text": "this talk will focus on VM ofation on",
    "start": "120680",
    "end": "125280"
  },
  {
    "text": "Android uh because recent years has seen",
    "start": "125280",
    "end": "129039"
  },
  {
    "text": "increasing numbers of VM protected",
    "start": "129039",
    "end": "132400"
  },
  {
    "text": "Android",
    "start": "132400",
    "end": "133840"
  },
  {
    "text": "apps it is different from a fation on PC",
    "start": "133840",
    "end": "138760"
  },
  {
    "text": "in that Android has a multiple layer AR",
    "start": "138760",
    "end": "143160"
  },
  {
    "text": "architecture which comprises of Linux",
    "start": "143160",
    "end": "146680"
  },
  {
    "text": "Linux kernel Hardware abstraction layer",
    "start": "146680",
    "end": "151360"
  },
  {
    "text": "runtime and libraries and framework and",
    "start": "151360",
    "end": "156080"
  },
  {
    "text": "application layer",
    "start": "156080",
    "end": "158640"
  },
  {
    "text": "Etc cross layer",
    "start": "158640",
    "end": "161280"
  },
  {
    "text": "invocations especially those through",
    "start": "161280",
    "end": "164519"
  },
  {
    "text": "Java native interface or jni are",
    "start": "164519",
    "end": "168519"
  },
  {
    "text": "commonly used by Android Packers while",
    "start": "168519",
    "end": "172280"
  },
  {
    "text": "the Packers for PC programs have no such",
    "start": "172280",
    "end": "177920"
  },
  {
    "text": "characteristic",
    "start": "178760",
    "end": "180480"
  },
  {
    "text": "why are we aware of this topic well",
    "start": "180480",
    "end": "183200"
  },
  {
    "text": "several months ago when analyzing an",
    "start": "183200",
    "end": "186280"
  },
  {
    "text": "Android mware we found that it executes",
    "start": "186280",
    "end": "190280"
  },
  {
    "text": "JavaScript by code on mailla Rhino",
    "start": "190280",
    "end": "193920"
  },
  {
    "text": "Engine with the bite code Source",
    "start": "193920",
    "end": "196879"
  },
  {
    "text": "deliberately",
    "start": "196879",
    "end": "198879"
  },
  {
    "text": "removed so we started the Rhino engine",
    "start": "198879",
    "end": "202519"
  },
  {
    "text": "and managed to reverse and recover some",
    "start": "202519",
    "end": "205239"
  },
  {
    "text": "of the meest",
    "start": "205239",
    "end": "208640"
  },
  {
    "text": "semantics",
    "start": "208680",
    "end": "210439"
  },
  {
    "text": "later we encountered many other IND the",
    "start": "210439",
    "end": "214280"
  },
  {
    "text": "wild mawes that are infuscated with",
    "start": "214280",
    "end": "217959"
  },
  {
    "text": "different uh Packer and different",
    "start": "217959",
    "end": "221480"
  },
  {
    "text": "virualization",
    "start": "221480",
    "end": "223080"
  },
  {
    "text": "techniques so the exact method we used",
    "start": "223080",
    "end": "226519"
  },
  {
    "text": "to reverse previous Rhino B code mware",
    "start": "226519",
    "end": "230599"
  },
  {
    "text": "cannot be reused in these",
    "start": "230599",
    "end": "233120"
  },
  {
    "text": "cases uh so we figured out a method that",
    "start": "233120",
    "end": "236760"
  },
  {
    "text": "is more",
    "start": "236760",
    "end": "238680"
  },
  {
    "text": "General",
    "start": "238680",
    "end": "241120"
  },
  {
    "text": "now let's dive into some details of the",
    "start": "241120",
    "end": "244040"
  },
  {
    "text": "first",
    "start": "244040",
    "end": "246480"
  },
  {
    "text": "case the all create method of this mware",
    "start": "248040",
    "end": "252280"
  },
  {
    "text": "entry activity lows an interpreted",
    "start": "252280",
    "end": "256079"
  },
  {
    "text": "function object and execute it this",
    "start": "256079",
    "end": "260560"
  },
  {
    "text": "object Only Stores Rhino B code and no",
    "start": "260560",
    "end": "264040"
  },
  {
    "text": "The Source it is interpreted in a large",
    "start": "264040",
    "end": "267759"
  },
  {
    "text": "switch case statement with",
    "start": "267759",
    "end": "270360"
  },
  {
    "text": "Cod unlike the situation with de with by",
    "start": "270360",
    "end": "274960"
  },
  {
    "text": "code there is no existing tool to",
    "start": "274960",
    "end": "278120"
  },
  {
    "text": "translate Rhino by code back to source",
    "start": "278120",
    "end": "281800"
  },
  {
    "text": "and um there is one for V8 JavaScript",
    "start": "281800",
    "end": "287120"
  },
  {
    "text": "but not for",
    "start": "287120",
    "end": "289759"
  },
  {
    "text": "Rhino to reverse it we firstly go",
    "start": "290960",
    "end": "294840"
  },
  {
    "text": "through the generation of uh B code",
    "start": "294840",
    "end": "300360"
  },
  {
    "text": "uh its generation generally follows this",
    "start": "300360",
    "end": "303000"
  },
  {
    "text": "process that JavaScript source code is",
    "start": "303000",
    "end": "306120"
  },
  {
    "text": "passed to form and Abstract syntax tree",
    "start": "306120",
    "end": "309960"
  },
  {
    "text": "or",
    "start": "309960",
    "end": "310960"
  },
  {
    "text": "a then a code generator traverses this",
    "start": "310960",
    "end": "315280"
  },
  {
    "text": "tree to generate by",
    "start": "315280",
    "end": "317600"
  },
  {
    "text": "code the three diagrams on this slide",
    "start": "317600",
    "end": "321360"
  },
  {
    "text": "represent the three states of a s Source",
    "start": "321360",
    "end": "325560"
  },
  {
    "text": "statement uh which invokes lead reverse",
    "start": "325560",
    "end": "329560"
  },
  {
    "text": "and join methods on a Sim",
    "start": "329560",
    "end": "332639"
  },
  {
    "text": "string to reverse this process firstly",
    "start": "332639",
    "end": "336400"
  },
  {
    "text": "we need to transform the bite code back",
    "start": "336400",
    "end": "339000"
  },
  {
    "text": "to",
    "start": "339000",
    "end": "341400"
  },
  {
    "text": "as to reconstruct the ASD we simulate",
    "start": "342800",
    "end": "347759"
  },
  {
    "text": "Running of The",
    "start": "347759",
    "end": "349360"
  },
  {
    "text": "Interpreter most importantly we simulate",
    "start": "349360",
    "end": "352280"
  },
  {
    "text": "its step in the beginning the stack is",
    "start": "352280",
    "end": "356520"
  },
  {
    "text": "empty and the string table holds all the",
    "start": "356520",
    "end": "360319"
  },
  {
    "text": "string literal of this",
    "start": "360319",
    "end": "363360"
  },
  {
    "text": "function the first effective bite uh of",
    "start": "363360",
    "end": "367960"
  },
  {
    "text": "instruction read uh I code R string",
    "start": "367960",
    "end": "372720"
  },
  {
    "text": "c0 and its corresponding operation in",
    "start": "372720",
    "end": "376919"
  },
  {
    "text": "the interpretor loop is assign the first",
    "start": "376919",
    "end": "381039"
  },
  {
    "text": "string in string table to a variable cut",
    "start": "381039",
    "end": "383919"
  },
  {
    "text": "string",
    "start": "383919",
    "end": "385599"
  },
  {
    "text": "rack we do the same in reverse",
    "start": "385599",
    "end": "390680"
  },
  {
    "text": "code then there comes the string",
    "start": "390680",
    "end": "393800"
  },
  {
    "text": "instruction The Interpreter pushes the",
    "start": "393800",
    "end": "396919"
  },
  {
    "text": "string re variable to the stack so our",
    "start": "396919",
    "end": "400199"
  },
  {
    "text": "reverse in code uh also uh constructs an",
    "start": "400199",
    "end": "404960"
  },
  {
    "text": "as node first and then push it onto the",
    "start": "404960",
    "end": "409160"
  },
  {
    "text": "stack after that the stack has an as",
    "start": "409160",
    "end": "413000"
  },
  {
    "text": "node with type of string literal in",
    "start": "413000",
    "end": "418240"
  },
  {
    "text": "it and and after the interpretation of",
    "start": "418240",
    "end": "423520"
  },
  {
    "text": "iode prop and",
    "start": "423520",
    "end": "425879"
  },
  {
    "text": "this instruction which gets a property",
    "start": "425879",
    "end": "430800"
  },
  {
    "text": "of an as node we get",
    "start": "430800",
    "end": "435360"
  },
  {
    "text": "the stack that looks like the",
    "start": "435360",
    "end": "440280"
  },
  {
    "text": "third B on this",
    "start": "440280",
    "end": "443560"
  },
  {
    "text": "slide which",
    "start": "443560",
    "end": "445960"
  },
  {
    "text": "is part of the whole as",
    "start": "445960",
    "end": "451319"
  },
  {
    "text": "Tree by running this process",
    "start": "451560",
    "end": "454919"
  },
  {
    "text": "recursively finally we get a four",
    "start": "454919",
    "end": "458800"
  },
  {
    "text": "abstract syntax tree and fortunately",
    "start": "458800",
    "end": "463479"
  },
  {
    "text": "Rhino provides us with a tool Source",
    "start": "463479",
    "end": "467080"
  },
  {
    "text": "method that transform an AF back into",
    "start": "467080",
    "end": "471000"
  },
  {
    "text": "source code recursively so finally we",
    "start": "471000",
    "end": "475000"
  },
  {
    "text": "just get back the very same thing",
    "start": "475000",
    "end": "479319"
  },
  {
    "text": "payment that we start",
    "start": "479319",
    "end": "482560"
  },
  {
    "text": "with then I'll introduce a more General",
    "start": "486080",
    "end": "489520"
  },
  {
    "text": "scenario of V impact",
    "start": "489520",
    "end": "493520"
  },
  {
    "text": "programs uh because the reversing the",
    "start": "496400",
    "end": "499560"
  },
  {
    "text": "case about a rely on analysis of",
    "start": "499560",
    "end": "503400"
  },
  {
    "text": "opsource implementation of",
    "start": "503400",
    "end": "507479"
  },
  {
    "text": "rhino but other in Wild samples",
    "start": "507479",
    "end": "511319"
  },
  {
    "text": "protected by VM based up",
    "start": "511319",
    "end": "514479"
  },
  {
    "text": "fation all Android usually are closed",
    "start": "514479",
    "end": "518479"
  },
  {
    "text": "source and",
    "start": "518479",
    "end": "521880"
  },
  {
    "text": "implemented virtual machine in a native",
    "start": "522240",
    "end": "525880"
  },
  {
    "text": "library that is or that is uh Java",
    "start": "525880",
    "end": "529720"
  },
  {
    "text": "native",
    "start": "529720",
    "end": "531760"
  },
  {
    "text": "interface and there is",
    "start": "531760",
    "end": "534320"
  },
  {
    "text": "usually app specific",
    "start": "534320",
    "end": "537160"
  },
  {
    "text": "randomization so the difficult just",
    "start": "537160",
    "end": "539959"
  },
  {
    "text": "levels",
    "start": "539959",
    "end": "542440"
  },
  {
    "text": "up in this",
    "start": "545720",
    "end": "548240"
  },
  {
    "text": "scenario the virtual machine has some",
    "start": "548240",
    "end": "551839"
  },
  {
    "text": "key",
    "start": "551839",
    "end": "554320"
  },
  {
    "text": "components to begin with is the VM entry",
    "start": "554519",
    "end": "557920"
  },
  {
    "text": "and exit the VM entry switches to",
    "start": "557920",
    "end": "562279"
  },
  {
    "text": "Virtual context and copy registers",
    "start": "562279",
    "end": "565880"
  },
  {
    "text": "essential to Virtual",
    "start": "565880",
    "end": "568120"
  },
  {
    "text": "context",
    "start": "568120",
    "end": "569800"
  },
  {
    "text": "and the V exit would just do the reverse",
    "start": "569800",
    "end": "574079"
  },
  {
    "text": "which is to switch back to original",
    "start": "574079",
    "end": "578600"
  },
  {
    "text": "context two other key components are",
    "start": "579720",
    "end": "583360"
  },
  {
    "text": "dispatcher and",
    "start": "583360",
    "end": "586440"
  },
  {
    "text": "handlers dispatcher runs in Loop that's",
    "start": "586839",
    "end": "590480"
  },
  {
    "text": "Fetch and decode a virtual instruction",
    "start": "590480",
    "end": "594480"
  },
  {
    "text": "and then look it up in the Handler table",
    "start": "594480",
    "end": "598000"
  },
  {
    "text": "finally it would involve the",
    "start": "598000",
    "end": "602680"
  },
  {
    "text": "Handler the challenges in reversing such",
    "start": "607079",
    "end": "610959"
  },
  {
    "text": "kind of of fascade program are that",
    "start": "610959",
    "end": "615120"
  },
  {
    "text": "firstly we don't have binaries for in",
    "start": "615120",
    "end": "618120"
  },
  {
    "text": "the wild programs and",
    "start": "618120",
    "end": "621240"
  },
  {
    "text": "we don't have source code or original",
    "start": "621240",
    "end": "625120"
  },
  {
    "text": "delid buy code",
    "start": "625120",
    "end": "628040"
  },
  {
    "text": "either so we are lack of information",
    "start": "628040",
    "end": "631200"
  },
  {
    "text": "about virtualized instructions and the",
    "start": "631200",
    "end": "635040"
  },
  {
    "text": "virtual machines",
    "start": "635040",
    "end": "638200"
  },
  {
    "text": "mechanism and just as shown in this Ida",
    "start": "638200",
    "end": "644079"
  },
  {
    "text": "screenshot the control flow of uh a",
    "start": "644079",
    "end": "648079"
  },
  {
    "text": "fisticated program is very complex so",
    "start": "648079",
    "end": "651880"
  },
  {
    "text": "static and dynamic analysis are both",
    "start": "651880",
    "end": "655079"
  },
  {
    "text": "time",
    "start": "655079",
    "end": "657639"
  },
  {
    "text": "consuming while one more challenge is",
    "start": "657800",
    "end": "660360"
  },
  {
    "text": "that many VM protected programs use",
    "start": "660360",
    "end": "664959"
  },
  {
    "text": "random lights and app specific",
    "start": "664959",
    "end": "668519"
  },
  {
    "text": "encryption",
    "start": "668519",
    "end": "670200"
  },
  {
    "text": "parameters",
    "start": "670200",
    "end": "672480"
  },
  {
    "text": "to swipe or change the Handler order",
    "start": "672480",
    "end": "677360"
  },
  {
    "text": "every time as a",
    "start": "677360",
    "end": "680320"
  },
  {
    "text": "result even if you manually analyze uh V",
    "start": "680320",
    "end": "684480"
  },
  {
    "text": "IMPACT program a uh the result is not",
    "start": "684480",
    "end": "688279"
  },
  {
    "text": "reusable to another program B even if it",
    "start": "688279",
    "end": "691880"
  },
  {
    "text": "is packed with the same",
    "start": "691880",
    "end": "696240"
  },
  {
    "text": "Packer following I will introduce our",
    "start": "698079",
    "end": "701639"
  },
  {
    "text": "unpacking method under such a general",
    "start": "701639",
    "end": "707160"
  },
  {
    "text": "scenario there are some assumptions and",
    "start": "708279",
    "end": "711480"
  },
  {
    "text": "prerequisites of our method of",
    "start": "711480",
    "end": "714480"
  },
  {
    "text": "unpacking it only works properly when",
    "start": "714480",
    "end": "718079"
  },
  {
    "text": "following a itions are met the first is",
    "start": "718079",
    "end": "722200"
  },
  {
    "text": "the fact we are going to reverse is",
    "start": "722200",
    "end": "726000"
  },
  {
    "text": "accessible and we can use it to upasate",
    "start": "726000",
    "end": "729399"
  },
  {
    "text": "any custom",
    "start": "729399",
    "end": "731440"
  },
  {
    "text": "made",
    "start": "731440",
    "end": "733240"
  },
  {
    "text": "app and the",
    "start": "733240",
    "end": "735399"
  },
  {
    "text": "second assumption is that the alator",
    "start": "735399",
    "end": "739560"
  },
  {
    "text": "follow the typical pattern of transform",
    "start": "739560",
    "end": "743720"
  },
  {
    "text": "Del with by code into native",
    "start": "743720",
    "end": "747880"
  },
  {
    "text": "functions thir provided that Del with B",
    "start": "747880",
    "end": "752120"
  },
  {
    "text": "code can be easily transferred to Java",
    "start": "752120",
    "end": "756199"
  },
  {
    "text": "with existing tools our goal under this",
    "start": "756199",
    "end": "760199"
  },
  {
    "text": "scenario is just to recover deal with by",
    "start": "760199",
    "end": "764160"
  },
  {
    "text": "code from a fated program and not beyond",
    "start": "764160",
    "end": "771440"
  },
  {
    "text": "that to break down the problems let's",
    "start": "773279",
    "end": "777240"
  },
  {
    "text": "take a look at comp components of an",
    "start": "777240",
    "end": "779959"
  },
  {
    "text": "aasc",
    "start": "779959",
    "end": "782800"
  },
  {
    "text": "program before aasc it's just a original",
    "start": "782800",
    "end": "787680"
  },
  {
    "text": "deid by code on the left side and after",
    "start": "787680",
    "end": "791639"
  },
  {
    "text": "a",
    "start": "791639",
    "end": "792680"
  },
  {
    "text": "fation it comprise of at least three",
    "start": "792680",
    "end": "796839"
  },
  {
    "text": "parts the encrypted by code the Handler",
    "start": "796839",
    "end": "801079"
  },
  {
    "text": "table and a concrete instruction",
    "start": "801079",
    "end": "804680"
  },
  {
    "text": "sequence for each",
    "start": "804680",
    "end": "807760"
  },
  {
    "text": "Handler",
    "start": "807760",
    "end": "810760"
  },
  {
    "text": "during",
    "start": "810800",
    "end": "811959"
  },
  {
    "text": "execution the dispatcher Loop batches",
    "start": "811959",
    "end": "814720"
  },
  {
    "text": "and decodes in encrypted instruction",
    "start": "814720",
    "end": "817959"
  },
  {
    "text": "Computing index to locate in the Handler",
    "start": "817959",
    "end": "821440"
  },
  {
    "text": "table and then jump to that AJ pointed",
    "start": "821440",
    "end": "826320"
  },
  {
    "text": "by the Handler to execute the",
    "start": "826320",
    "end": "830399"
  },
  {
    "text": "instruction",
    "start": "830399",
    "end": "832560"
  },
  {
    "text": "sequence for example in this diagram the",
    "start": "832560",
    "end": "836440"
  },
  {
    "text": "encrypted instruction 05 is fed and",
    "start": "836440",
    "end": "840440"
  },
  {
    "text": "decode to index of Handler uh move so",
    "start": "840440",
    "end": "845639"
  },
  {
    "text": "the execution flow jump to execute the",
    "start": "845639",
    "end": "850560"
  },
  {
    "text": "instruction sequence of move",
    "start": "850560",
    "end": "854839"
  },
  {
    "text": "Handler and this is",
    "start": "856160",
    "end": "858519"
  },
  {
    "text": "another encrypted instruction E5 and",
    "start": "858519",
    "end": "862240"
  },
  {
    "text": "it's one thing to notice is",
    "start": "862240",
    "end": "865360"
  },
  {
    "text": "that the encrypted by code and and",
    "start": "865360",
    "end": "868920"
  },
  {
    "text": "Handler table are all app specific and",
    "start": "868920",
    "end": "874480"
  },
  {
    "text": "random that is to say the order of",
    "start": "877680",
    "end": "881079"
  },
  {
    "text": "Handler pointers in the Handler table is",
    "start": "881079",
    "end": "884920"
  },
  {
    "text": "unknown and the actual location of",
    "start": "884920",
    "end": "888839"
  },
  {
    "text": "instruction sequence for each Handler is",
    "start": "888839",
    "end": "892079"
  },
  {
    "text": "uncertain",
    "start": "892079",
    "end": "894959"
  },
  {
    "text": "either there is some intuition",
    "start": "896160",
    "end": "899199"
  },
  {
    "text": "that can help address the above",
    "start": "899199",
    "end": "902600"
  },
  {
    "text": "issues to keep the aasc programs",
    "start": "902600",
    "end": "906920"
  },
  {
    "text": "semantics identical to that of original",
    "start": "906920",
    "end": "911240"
  },
  {
    "text": "program each Handler of the VM is",
    "start": "911240",
    "end": "916079"
  },
  {
    "text": "initially translated from a set of",
    "start": "916079",
    "end": "918680"
  },
  {
    "text": "simple operations in original Del with",
    "start": "918680",
    "end": "924079"
  },
  {
    "text": "BYOD also the intermediates including",
    "start": "924079",
    "end": "928319"
  },
  {
    "text": "the encrypted instruction and Handler",
    "start": "928319",
    "end": "931920"
  },
  {
    "text": "table they are apps",
    "start": "931920",
    "end": "935000"
  },
  {
    "text": "specific the relationship between the",
    "start": "935000",
    "end": "938639"
  },
  {
    "text": "original deal with by code and the",
    "start": "938639",
    "end": "940839"
  },
  {
    "text": "Handler content is",
    "start": "940839",
    "end": "943560"
  },
  {
    "text": "fixed also the elasticated functions",
    "start": "943560",
    "end": "947519"
  },
  {
    "text": "generally pass parameters in the same",
    "start": "947519",
    "end": "950600"
  },
  {
    "text": "way as original",
    "start": "950600",
    "end": "954399"
  },
  {
    "text": "program this diagram is to",
    "start": "956000",
    "end": "959480"
  },
  {
    "text": "pinpoint the above",
    "start": "959480",
    "end": "962120"
  },
  {
    "text": "Point Whenever there is a move",
    "start": "962120",
    "end": "965000"
  },
  {
    "text": "instruction in the original delid bite",
    "start": "965000",
    "end": "968600"
  },
  {
    "text": "code during execution of the ofas",
    "start": "968600",
    "end": "972360"
  },
  {
    "text": "program the instruction sequence for",
    "start": "972360",
    "end": "975240"
  },
  {
    "text": "move Handler must be executed once and",
    "start": "975240",
    "end": "979800"
  },
  {
    "text": "vice",
    "start": "979800",
    "end": "982120"
  },
  {
    "text": "versa so we are able to learn the",
    "start": "987519",
    "end": "991600"
  },
  {
    "text": "mapping relations from our constructed",
    "start": "991600",
    "end": "995199"
  },
  {
    "text": "app and its execution",
    "start": "995199",
    "end": "999600"
  },
  {
    "text": "chase that is we can construct apps of",
    "start": "999920",
    "end": "1004759"
  },
  {
    "text": "fast and uh executed this aasc programs",
    "start": "1004759",
    "end": "1010880"
  },
  {
    "text": "uh to learn mapping relations between uh",
    "start": "1010880",
    "end": "1014440"
  },
  {
    "text": "original de with by code and executed",
    "start": "1014440",
    "end": "1018040"
  },
  {
    "text": "Handler",
    "start": "1018040",
    "end": "1020160"
  },
  {
    "text": "then we can apply the learn rules to",
    "start": "1020160",
    "end": "1023440"
  },
  {
    "text": "transform back executed handlers",
    "start": "1023440",
    "end": "1027000"
  },
  {
    "text": "information of other Indie wild",
    "start": "1027000",
    "end": "1031640"
  },
  {
    "text": "apps however the",
    "start": "1037360",
    "end": "1040480"
  },
  {
    "text": "relations are not directly",
    "start": "1040480",
    "end": "1043880"
  },
  {
    "text": "obtainable we still have buing questions",
    "start": "1043880",
    "end": "1047160"
  },
  {
    "text": "to solve during the",
    "start": "1047160",
    "end": "1049000"
  },
  {
    "text": "learning phase the first is we need to",
    "start": "1049000",
    "end": "1052320"
  },
  {
    "text": "determine virtualized instructions for",
    "start": "1052320",
    "end": "1055559"
  },
  {
    "text": "each",
    "start": "1055559",
    "end": "1056440"
  },
  {
    "text": "function the second is we need to figure",
    "start": "1056440",
    "end": "1059559"
  },
  {
    "text": "out relationship between virtualized",
    "start": "1059559",
    "end": "1062320"
  },
  {
    "text": "instruction and Handler",
    "start": "1062320",
    "end": "1065480"
  },
  {
    "text": "adjust the third question is that we",
    "start": "1065480",
    "end": "1068840"
  },
  {
    "text": "need to identify handlers by their",
    "start": "1068840",
    "end": "1071360"
  },
  {
    "text": "content so as to recognize each Handler",
    "start": "1071360",
    "end": "1075039"
  },
  {
    "text": "when executing any wild apps",
    "start": "1075039",
    "end": "1080399"
  },
  {
    "text": "to adjust these questions our proposed",
    "start": "1080799",
    "end": "1084240"
  },
  {
    "text": "solution also comprise of three",
    "start": "1084240",
    "end": "1087720"
  },
  {
    "text": "steps to determine virtualized",
    "start": "1087720",
    "end": "1090520"
  },
  {
    "text": "instructions we hook and Chase the rich",
    "start": "1090520",
    "end": "1094400"
  },
  {
    "text": "register function of the",
    "start": "1094400",
    "end": "1097520"
  },
  {
    "text": "Native upated",
    "start": "1097520",
    "end": "1100240"
  },
  {
    "text": "functions and to figure out mapping",
    "start": "1100240",
    "end": "1102919"
  },
  {
    "text": "relations between virtualized",
    "start": "1102919",
    "end": "1104880"
  },
  {
    "text": "instruction and Handler J we",
    "start": "1104880",
    "end": "1109200"
  },
  {
    "text": "carry out ination to collect Dynamic",
    "start": "1109200",
    "end": "1112880"
  },
  {
    "text": "trays of up fasc programs and uh uh",
    "start": "1112880",
    "end": "1116960"
  },
  {
    "text": "locate components like dispatchers and",
    "start": "1116960",
    "end": "1120880"
  },
  {
    "text": "uh uh Handler table",
    "start": "1120880",
    "end": "1123480"
  },
  {
    "text": "Etc thirdly to identify handlers by",
    "start": "1123480",
    "end": "1127039"
  },
  {
    "text": "their content uh we generate genetic",
    "start": "1127039",
    "end": "1130360"
  },
  {
    "text": "signature to identify each",
    "start": "1130360",
    "end": "1134440"
  },
  {
    "text": "Handler",
    "start": "1137320",
    "end": "1139559"
  },
  {
    "text": "this is the first part of the",
    "start": "1139559",
    "end": "1143760"
  },
  {
    "text": "solution as we all know uh VN of Fator",
    "start": "1143760",
    "end": "1148280"
  },
  {
    "text": "usually do mutations to transform",
    "start": "1148280",
    "end": "1151679"
  },
  {
    "text": "original delate by code into encrypted",
    "start": "1151679",
    "end": "1154960"
  },
  {
    "text": "by code or in other words virtualized",
    "start": "1154960",
    "end": "1159240"
  },
  {
    "text": "instructions and then it constructs the",
    "start": "1159240",
    "end": "1162559"
  },
  {
    "text": "native function to interpret this",
    "start": "1162559",
    "end": "1166039"
  },
  {
    "text": "virtualized instructions just as shown",
    "start": "1166039",
    "end": "1168960"
  },
  {
    "text": "in the upper right of this",
    "start": "1168960",
    "end": "1171640"
  },
  {
    "text": "slide since the engin of these functions",
    "start": "1171640",
    "end": "1174760"
  },
  {
    "text": "are usually registered dynamically we",
    "start": "1174760",
    "end": "1178000"
  },
  {
    "text": "can hook the register native function to",
    "start": "1178000",
    "end": "1181240"
  },
  {
    "text": "chase uh its argument to uh get the",
    "start": "1181240",
    "end": "1186679"
  },
  {
    "text": "virtualized instructions",
    "start": "1186679",
    "end": "1189919"
  },
  {
    "text": "directly uh sometimes this inst",
    "start": "1189919",
    "end": "1192360"
  },
  {
    "text": "structures can also be analyzed",
    "start": "1192360",
    "end": "1195360"
  },
  {
    "text": "statically but that will require more",
    "start": "1195360",
    "end": "1198240"
  },
  {
    "text": "for human",
    "start": "1198240",
    "end": "1201120"
  },
  {
    "text": "work and this slide shows the example of",
    "start": "1203520",
    "end": "1207559"
  },
  {
    "text": "our hooking position and the result we",
    "start": "1207559",
    "end": "1211360"
  },
  {
    "text": "get that is the n and signatures and",
    "start": "1211360",
    "end": "1216000"
  },
  {
    "text": "corresponding virtualized instructions",
    "start": "1216000",
    "end": "1218480"
  },
  {
    "text": "of some encrypted functions including",
    "start": "1218480",
    "end": "1221200"
  },
  {
    "text": "Altria and",
    "start": "1221200",
    "end": "1224360"
  },
  {
    "text": "envelope",
    "start": "1227159",
    "end": "1229559"
  },
  {
    "text": "and to adjust the second question that",
    "start": "1229559",
    "end": "1231760"
  },
  {
    "text": "is mapping relations between virtualized",
    "start": "1231760",
    "end": "1235000"
  },
  {
    "text": "instruction and Handler",
    "start": "1235000",
    "end": "1237159"
  },
  {
    "text": "adjust uh there is need to observe",
    "start": "1237159",
    "end": "1241559"
  },
  {
    "text": "execution flow inside a function so now",
    "start": "1241559",
    "end": "1245640"
  },
  {
    "text": "nearly hooking the entrance and exit of",
    "start": "1245640",
    "end": "1248960"
  },
  {
    "text": "a function is not",
    "start": "1248960",
    "end": "1251679"
  },
  {
    "text": "enough uh debugging often comes to mind",
    "start": "1251679",
    "end": "1254840"
  },
  {
    "text": "under such circumstance but it requires",
    "start": "1254840",
    "end": "1259080"
  },
  {
    "text": "much more tedious manual work and also",
    "start": "1259080",
    "end": "1263559"
  },
  {
    "text": "coping with anti- debug",
    "start": "1263559",
    "end": "1266320"
  },
  {
    "text": "mechanisms so we choose to use",
    "start": "1266320",
    "end": "1270360"
  },
  {
    "text": "instrumentation instrumentation and",
    "start": "1270360",
    "end": "1272919"
  },
  {
    "text": "Chase lock with way to do the",
    "start": "1272919",
    "end": "1276919"
  },
  {
    "text": "mapping there",
    "start": "1278200",
    "end": "1280320"
  },
  {
    "text": "are many tools and Frameworks for",
    "start": "1280320",
    "end": "1283919"
  },
  {
    "text": "instruction level instrumentation",
    "start": "1283919",
    "end": "1287039"
  },
  {
    "text": "including many dbis and",
    "start": "1287039",
    "end": "1290679"
  },
  {
    "text": "emulators our considerations here",
    "start": "1290679",
    "end": "1295000"
  },
  {
    "text": "include enjoy support and uh",
    "start": "1295000",
    "end": "1299240"
  },
  {
    "text": "environment supplement",
    "start": "1299240",
    "end": "1302039"
  },
  {
    "text": "needed so finally qbd was used in our",
    "start": "1302039",
    "end": "1307240"
  },
  {
    "text": "project but other Frameworks may work",
    "start": "1307240",
    "end": "1311960"
  },
  {
    "text": "too here is a Showcase of how we locate",
    "start": "1313200",
    "end": "1317799"
  },
  {
    "text": "this dispatcher and Handler tables",
    "start": "1317799",
    "end": "1320880"
  },
  {
    "text": "adress from Chase",
    "start": "1320880",
    "end": "1323679"
  },
  {
    "text": "lock uh",
    "start": "1323679",
    "end": "1326240"
  },
  {
    "text": "dispatchers firstly loads and adjust of",
    "start": "1326240",
    "end": "1329880"
  },
  {
    "text": "Handler to a register and then use BR to",
    "start": "1329880",
    "end": "1333799"
  },
  {
    "text": "jum to that address",
    "start": "1333799",
    "end": "1336440"
  },
  {
    "text": "so we can uh firstly locate the first BR",
    "start": "1336440",
    "end": "1341440"
  },
  {
    "text": "instruction in the chase lock and then",
    "start": "1341440",
    "end": "1345360"
  },
  {
    "text": "the part before that is dispatcher",
    "start": "1345360",
    "end": "1351320"
  },
  {
    "text": "and instructions after that are usually",
    "start": "1351320",
    "end": "1354679"
  },
  {
    "text": "Handler",
    "start": "1354679",
    "end": "1356559"
  },
  {
    "text": "content sometimes um manual or human",
    "start": "1356559",
    "end": "1361279"
  },
  {
    "text": "work is required to locate these",
    "start": "1361279",
    "end": "1366159"
  },
  {
    "text": "components but uh those work only need",
    "start": "1366159",
    "end": "1369279"
  },
  {
    "text": "to be done once for AG uh",
    "start": "1369279",
    "end": "1375919"
  },
  {
    "text": "program",
    "start": "1376960",
    "end": "1379960"
  },
  {
    "text": "and as for Handler uh it's adjust points",
    "start": "1380799",
    "end": "1384480"
  },
  {
    "text": "to code segment but the pointer itself",
    "start": "1384480",
    "end": "1388039"
  },
  {
    "text": "is stored in data segment or more",
    "start": "1388039",
    "end": "1391039"
  },
  {
    "text": "precisely is stored in the Handler",
    "start": "1391039",
    "end": "1395639"
  },
  {
    "text": "table each iteration of the",
    "start": "1401640",
    "end": "1405520"
  },
  {
    "text": "above function views a mapping between a",
    "start": "1405520",
    "end": "1409320"
  },
  {
    "text": "virtualized instruction and a Handler",
    "start": "1409320",
    "end": "1412559"
  },
  {
    "text": "for example the first iteration would",
    "start": "1412559",
    "end": "1415159"
  },
  {
    "text": "build connection between the first bite",
    "start": "1415159",
    "end": "1417480"
  },
  {
    "text": "of this stum virtualized instructions",
    "start": "1417480",
    "end": "1421760"
  },
  {
    "text": "and the one of the handlers in the hand",
    "start": "1421760",
    "end": "1426600"
  },
  {
    "text": "table and the SEC third question is that",
    "start": "1431279",
    "end": "1434799"
  },
  {
    "text": "we need to identify each Handler by",
    "start": "1434799",
    "end": "1437000"
  },
  {
    "text": "their content",
    "start": "1437000",
    "end": "1438440"
  },
  {
    "text": "when unpacking in the wild apps that",
    "start": "1438440",
    "end": "1441440"
  },
  {
    "text": "original desk file is unavailable the",
    "start": "1441440",
    "end": "1444919"
  },
  {
    "text": "order of Handler is random which means",
    "start": "1444919",
    "end": "1448120"
  },
  {
    "text": "Handler AJ only cannot identify a",
    "start": "1448120",
    "end": "1451840"
  },
  {
    "text": "Handler as a result during the learning",
    "start": "1451840",
    "end": "1454679"
  },
  {
    "text": "phase we need to create identity with",
    "start": "1454679",
    "end": "1457200"
  },
  {
    "text": "handlers content for each",
    "start": "1457200",
    "end": "1460640"
  },
  {
    "text": "Handler for example in the chase",
    "start": "1460640",
    "end": "1465880"
  },
  {
    "text": "lock only",
    "start": "1465880",
    "end": "1468679"
  },
  {
    "text": "uh left bottom of this",
    "start": "1468679",
    "end": "1471279"
  },
  {
    "text": "slide without an identification we just",
    "start": "1471279",
    "end": "1475799"
  },
  {
    "text": "don't know uh the instruction sequence",
    "start": "1475799",
    "end": "1479440"
  },
  {
    "text": "is the sequence of Handler uh five",
    "start": "1479440",
    "end": "1485919"
  },
  {
    "text": "zero to adjust this uh we propose use of",
    "start": "1487720",
    "end": "1491919"
  },
  {
    "text": "genetic signature of",
    "start": "1491919",
    "end": "1494120"
  },
  {
    "text": "Handler we generally use hash or of ha",
    "start": "1494120",
    "end": "1498880"
  },
  {
    "text": "of instruction sequence as genetic",
    "start": "1498880",
    "end": "1502360"
  },
  {
    "text": "signature of a Handler but this",
    "start": "1502360",
    "end": "1505360"
  },
  {
    "text": "signature needs to undergo the following",
    "start": "1505360",
    "end": "1509240"
  },
  {
    "text": "processing steps",
    "start": "1509240",
    "end": "1511679"
  },
  {
    "text": "first uh one step is that to truncate",
    "start": "1511679",
    "end": "1515520"
  },
  {
    "text": "the sequence to only include the part",
    "start": "1515520",
    "end": "1518360"
  },
  {
    "text": "before the BR",
    "start": "1518360",
    "end": "1521399"
  },
  {
    "text": "instruction the second step is to",
    "start": "1521399",
    "end": "1524159"
  },
  {
    "text": "replace instructions that have different",
    "start": "1524159",
    "end": "1527240"
  },
  {
    "text": "corresp only machine codes across",
    "start": "1527240",
    "end": "1529840"
  },
  {
    "text": "different programs with a fixed",
    "start": "1529840",
    "end": "1533200"
  },
  {
    "text": "sequence this kind of instruction",
    "start": "1533200",
    "end": "1536159"
  },
  {
    "text": "include jum",
    "start": "1536159",
    "end": "1537880"
  },
  {
    "text": "instructions uh like b or BL CBJ and PC",
    "start": "1537880",
    "end": "1544200"
  },
  {
    "text": "register relative instructions such as",
    "start": "1544200",
    "end": "1549080"
  },
  {
    "text": "adrp and finally we can put it together",
    "start": "1551600",
    "end": "1555799"
  },
  {
    "text": "that is we execute in the wild apps to",
    "start": "1555799",
    "end": "1560320"
  },
  {
    "text": "get genetic signatures corresponding to",
    "start": "1560320",
    "end": "1564159"
  },
  {
    "text": "executed virtualized instructions and",
    "start": "1564159",
    "end": "1567080"
  },
  {
    "text": "then just apply learned mapping",
    "start": "1567080",
    "end": "1569320"
  },
  {
    "text": "relationships to recover them into their",
    "start": "1569320",
    "end": "1572440"
  },
  {
    "text": "we by",
    "start": "1572440",
    "end": "1575000"
  },
  {
    "text": "codes last but not least there I",
    "start": "1578480",
    "end": "1581520"
  },
  {
    "text": "introduce some insight and make a",
    "start": "1581520",
    "end": "1583480"
  },
  {
    "text": "conclusion to this",
    "start": "1583480",
    "end": "1586440"
  },
  {
    "text": "talk during our analysis we have noticed",
    "start": "1586600",
    "end": "1590840"
  },
  {
    "text": "a tendency of malwares using inexpensive",
    "start": "1590840",
    "end": "1594760"
  },
  {
    "text": "VM based",
    "start": "1594760",
    "end": "1596200"
  },
  {
    "text": "Packers for example uh one of the most",
    "start": "1596200",
    "end": "1600679"
  },
  {
    "text": "famous commercial Packers charge",
    "start": "1600679",
    "end": "1604600"
  },
  {
    "text": "about",
    "start": "1604600",
    "end": "1606360"
  },
  {
    "text": "$2,000 per year while some Packers only",
    "start": "1606360",
    "end": "1609480"
  },
  {
    "text": "charge about $4 per",
    "start": "1609480",
    "end": "1611880"
  },
  {
    "text": "year this seems to attract price sative",
    "start": "1611880",
    "end": "1615880"
  },
  {
    "text": "mware authors so a significant portion",
    "start": "1615880",
    "end": "1620720"
  },
  {
    "text": "of recently seen V protected mware",
    "start": "1620720",
    "end": "1624399"
  },
  {
    "text": "samples are of fated with inexpensive",
    "start": "1624399",
    "end": "1630159"
  },
  {
    "text": "Packers and we have also observed",
    "start": "1631399",
    "end": "1634799"
  },
  {
    "text": "another commonly used up fation",
    "start": "1634799",
    "end": "1638240"
  },
  {
    "text": "technique on Android that is hiding the",
    "start": "1638240",
    "end": "1641240"
  },
  {
    "text": "Dex data and dynamically releasing it",
    "start": "1641240",
    "end": "1644840"
  },
  {
    "text": "into memory during execution",
    "start": "1644840",
    "end": "1649159"
  },
  {
    "text": "for this kind of",
    "start": "1649159",
    "end": "1650960"
  },
  {
    "text": "ofation existing unpacking tools search",
    "start": "1650960",
    "end": "1654320"
  },
  {
    "text": "for and extract the Dex data from the",
    "start": "1654320",
    "end": "1657720"
  },
  {
    "text": "memory uh however these tools are unable",
    "start": "1657720",
    "end": "1661600"
  },
  {
    "text": "to unpack apps that are protected by VM",
    "start": "1661600",
    "end": "1665679"
  },
  {
    "text": "ofation since the original d by code is",
    "start": "1665679",
    "end": "1669399"
  },
  {
    "text": "never placed into the",
    "start": "1669399",
    "end": "1672840"
  },
  {
    "text": "memory in conclusion uh in this T we",
    "start": "1674200",
    "end": "1677600"
  },
  {
    "text": "propose a twofold methodology for",
    "start": "1677600",
    "end": "1680559"
  },
  {
    "text": "unpacking Android apps with VM based",
    "start": "1680559",
    "end": "1685080"
  },
  {
    "text": "ofation uh one is for specific type of",
    "start": "1685080",
    "end": "1689039"
  },
  {
    "text": "of fation with Rhino bite code since the",
    "start": "1689039",
    "end": "1692399"
  },
  {
    "text": "VM is open source we analyze the",
    "start": "1692399",
    "end": "1696399"
  },
  {
    "text": "mechanism of VM and reconstruct as to",
    "start": "1696399",
    "end": "1700760"
  },
  {
    "text": "recover Source from by code and for a",
    "start": "1700760",
    "end": "1704480"
  },
  {
    "text": "more General scenario we introduce a",
    "start": "1704480",
    "end": "1707760"
  },
  {
    "text": "method through Gathering execution Chase",
    "start": "1707760",
    "end": "1710519"
  },
  {
    "text": "and use genetic signatures to learn",
    "start": "1710519",
    "end": "1713760"
  },
  {
    "text": "mapping relationships between original B",
    "start": "1713760",
    "end": "1717080"
  },
  {
    "text": "code and Handler and uh instruction",
    "start": "1717080",
    "end": "1721159"
  },
  {
    "text": "sequence the Learned relations are then",
    "start": "1721159",
    "end": "1724320"
  },
  {
    "text": "applied to recover by codes of in Wild",
    "start": "1724320",
    "end": "1728120"
  },
  {
    "text": "VN of fated",
    "start": "1728120",
    "end": "1731640"
  },
  {
    "text": "s these are some reference",
    "start": "1731640",
    "end": "1734760"
  },
  {
    "text": "links of the pre",
    "start": "1734760",
    "end": "1739399"
  },
  {
    "text": "content that's all for today's sharing",
    "start": "1739880",
    "end": "1742640"
  },
  {
    "text": "thank you very much if you have any",
    "start": "1742640",
    "end": "1745279"
  },
  {
    "text": "questions please feel free to contact me",
    "start": "1745279",
    "end": "1748039"
  },
  {
    "text": "thank",
    "start": "1748039",
    "end": "1750240"
  },
  {
    "text": "you",
    "start": "1753080",
    "end": "1756080"
  }
]