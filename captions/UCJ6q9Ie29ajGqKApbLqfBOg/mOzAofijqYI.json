[
  {
    "text": "this session is the Beast wins again why TLS keeps failing to protect uh protect",
    "start": "199",
    "end": "6839"
  },
  {
    "text": "you the speaker is antoan Delina lavu he uh wants you to visit the",
    "start": "6839",
    "end": "14280"
  },
  {
    "text": "following link for the video in his uh presentation in case you can't see the one that he's going to show you that",
    "start": "14280",
    "end": "20560"
  },
  {
    "text": "link is uh b.",
    "start": "20560",
    "end": "25960"
  },
  {
    "text": "ht. VC without further ado",
    "start": "25960",
    "end": "31960"
  },
  {
    "text": "thank you David for the introduction um hello everyone please be with my French accent I'm really sorry um I'm a PhD",
    "start": "35520",
    "end": "43600"
  },
  {
    "text": "student at tuna in Paris and uh the topic of my research is proving uh",
    "start": "43600",
    "end": "49079"
  },
  {
    "text": "security properties about real world websites and for the past year I've",
    "start": "49079",
    "end": "54800"
  },
  {
    "text": "actually been working on TLS because it turns out that every security propery of",
    "start": "54800",
    "end": "60840"
  },
  {
    "text": "website I wanted to prove was relying on some strong assumptions about the security of TLS and the more I tried to",
    "start": "60840",
    "end": "69320"
  },
  {
    "text": "um verify these assumptions about the security of TLS the more attacks I",
    "start": "69320",
    "end": "74400"
  },
  {
    "text": "discovered unfortunately I was uh uh assisted by very uh expert colleagues",
    "start": "74400",
    "end": "80360"
  },
  {
    "text": "both at inria and Microsoft research and they deserve some of the credit for what I'm going to show you",
    "start": "80360",
    "end": "87680"
  },
  {
    "text": "today so uh this despite the the title um which is a little bit controversial",
    "start": "87680",
    "end": "94000"
  },
  {
    "text": "uh this is not a media bait kind of talk it's actually a little bit academic so",
    "start": "94000",
    "end": "99600"
  },
  {
    "text": "please don't fall asleep I'm going to wake you up with uh three attacks so",
    "start": "99600",
    "end": "105000"
  },
  {
    "text": "this is basically the outline of the of the talk uh and uh the very important",
    "start": "105000",
    "end": "110520"
  },
  {
    "text": "thing to remember from this talk will be the common points the common patterns you will find between these attacks and",
    "start": "110520",
    "end": "117920"
  },
  {
    "text": "um I really want to show that uh the attacks that I'm going to to demonstrate they are in fact using very",
    "start": "117920",
    "end": "124640"
  },
  {
    "text": "well-known vectors and uh the fact that we are able to mount new exploit using",
    "start": "124640",
    "end": "130479"
  },
  {
    "text": "these well-known attack vectors is a clear sign that we still haven't uh solved the problems we have with",
    "start": "130479",
    "end": "138440"
  },
  {
    "text": "https all right so first why do we why do we want TLS um so I think many people in this",
    "start": "139120",
    "end": "147400"
  },
  {
    "text": "room probably believe that the main reason why we care but TLS is for confidentiality of password and cookies",
    "start": "147400",
    "end": "155360"
  },
  {
    "text": "but in fact uh it's really not the case it's very easy to build website that are",
    "start": "155360",
    "end": "162319"
  },
  {
    "text": "um uh protect that are protecting passwords and uh credentials against a",
    "start": "162319",
    "end": "168000"
  },
  {
    "text": "passive attacker someone like the NSA who just watching the packets but not touching them um actually the main",
    "start": "168000",
    "end": "175599"
  },
  {
    "text": "reason why we use TLS is because of its authentication and integrity goal goals",
    "start": "175599",
    "end": "180840"
  },
  {
    "text": "and these are the ones that are useful when you're facing an active Network attacker which is to say a man in the",
    "start": "180840",
    "end": "186519"
  },
  {
    "text": "middle as for privacy there's a widespread belief that TLS is helping",
    "start": "186519",
    "end": "193640"
  },
  {
    "text": "with your privacy and this is for the most part completely false you don't have to assume that TLS gives you any",
    "start": "193640",
    "end": "201159"
  },
  {
    "text": "privacy because someone that is who is watching the packet on the network can very easily tell us whichever you are",
    "start": "201159",
    "end": "207400"
  },
  {
    "text": "talking to which page you are looking at uh if you're maybe doing some search request on that website the attacker can",
    "start": "207400",
    "end": "214360"
  },
  {
    "text": "probably also get uh what is the search term that you entered and all of that because of side",
    "start": "214360",
    "end": "221200"
  },
  {
    "text": "channels okay so another thing is uh what's what is the expectation of uh web",
    "start": "221200",
    "end": "228920"
  },
  {
    "text": "Masters about TLS so web Masters are very familiar with web attacker model",
    "start": "228920",
    "end": "234599"
  },
  {
    "text": "they know that very well so we assume that the attacker is controlling some malicious websites and the user is",
    "start": "234599",
    "end": "240599"
  },
  {
    "text": "visiting both honest and malicious website at the same time and already this is a very powerful very expressive",
    "start": "240599",
    "end": "247000"
  },
  {
    "text": "attacker model and there are so many one none attacks csrf xss red Direction",
    "start": "247000",
    "end": "252360"
  },
  {
    "text": "attacks uh on the other hand the network attacker is someone who is controlling",
    "start": "252360",
    "end": "258000"
  },
  {
    "text": "the the packets and the network and of course uh you have to assume that the network attacker is strictly stronger",
    "start": "258000",
    "end": "263560"
  },
  {
    "text": "than the web attacker because the network attacker can inject himself into any HTTP website that uses us is",
    "start": "263560",
    "end": "270720"
  },
  {
    "text": "visiting and what uh people commonly believe is that if you have a website Ser over HTTP that is secure against a",
    "start": "270720",
    "end": "278639"
  },
  {
    "text": "web attacker then if you turn on https suddenly this website becomes secure",
    "start": "278639",
    "end": "284560"
  },
  {
    "text": "against a network attacker and of course this is extremely",
    "start": "284560",
    "end": "289880"
  },
  {
    "text": "wrong and uh this is one of the reason for this talk basically and the reason",
    "start": "289880",
    "end": "295639"
  },
  {
    "text": "why we find so many attacks so I think you you are already familiar with the",
    "start": "295639",
    "end": "301360"
  },
  {
    "text": "reason why there is a very very big Power Gap from going against web attacker to going against M middle and",
    "start": "301360",
    "end": "309120"
  },
  {
    "text": "some of these reasons are TS is optional by default in HTTP it can be removed by",
    "start": "309120",
    "end": "314240"
  },
  {
    "text": "the network attacker uh you have the very well-known problems of cookies which are very uh completely ay broken",
    "start": "314240",
    "end": "321280"
  },
  {
    "text": "in the context of netork attackers uh another more subtle one is the fact that TLS has its own identity and session",
    "start": "321280",
    "end": "328639"
  },
  {
    "text": "system and they may not uh agree with the HTTP ones and when you have some",
    "start": "328639",
    "end": "333759"
  },
  {
    "text": "discrepancy it's one source of attacks and the last one is that the https in",
    "start": "333759",
    "end": "339360"
  },
  {
    "text": "the middle is very very strong attacker um it can run arbitrary JavaScript",
    "start": "339360",
    "end": "344800"
  },
  {
    "text": "because arbitrary request to own this website and exploit some very strong site channels so you can look at the",
    "start": "344800",
    "end": "351160"
  },
  {
    "text": "sides of uh packets which tells him what is the side of the content that the user is downloading you can also look at the",
    "start": "351160",
    "end": "358080"
  },
  {
    "text": "timing to see what is the patterns of requests and this is a very good indication of what the user is doing in",
    "start": "358080",
    "end": "363759"
  },
  {
    "text": "the browser okay so first of all I'm going to say what is not covered by this talk",
    "start": "363759",
    "end": "370400"
  },
  {
    "text": "and um there are many things not covered so uh H blit it's uh first of all El",
    "start": "370400",
    "end": "379520"
  },
  {
    "text": "it's from a scale from 0 to 10 it's it's a 12 so",
    "start": "379520",
    "end": "384919"
  },
  {
    "text": "uh much more powerful than anything I have to say today and similarly have been bugs in Gs bugs in Safari and all",
    "start": "384919",
    "end": "393319"
  },
  {
    "text": "of these bugs they have no reason to be the only reason why we have to face this bug is because we are so uh angry about",
    "start": "393319",
    "end": "400240"
  },
  {
    "text": "performance that we don't care about using some memory self languages and some welln verification techniques that",
    "start": "400240",
    "end": "406479"
  },
  {
    "text": "could eliminate these bugs uh so I'm not really interested in that similarly I'm",
    "start": "406479",
    "end": "411599"
  },
  {
    "text": "not interested in the broken pki problems we had two examples already this year we had the French government",
    "start": "411599",
    "end": "417960"
  },
  {
    "text": "CA issue man m Indian one as well nice thing is that they're getting",
    "start": "417960",
    "end": "424000"
  },
  {
    "text": "cook but bad thing is that it keeps happening what is in this St is Active",
    "start": "424000",
    "end": "430440"
  },
  {
    "text": "network attacks against https and you have to realize that many people uh",
    "start": "430440",
    "end": "435680"
  },
  {
    "text": "consider this is a medium security threat but it's not the case it's a high security threat because people are",
    "start": "435680",
    "end": "441599"
  },
  {
    "text": "connected to uh public networks all the time um furthermore they're using DNS",
    "start": "441599",
    "end": "448000"
  },
  {
    "text": "that are not under the control it's always uh your ISP it's your corporation that are in control of the gns and",
    "start": "448000",
    "end": "455120"
  },
  {
    "text": "through that means are basically the power of acting as Network attackers against you and it's the same for",
    "start": "455120",
    "end": "461240"
  },
  {
    "text": "governments we know that on several occasions the US and UK governments have been tempering with",
    "start": "461240",
    "end": "467720"
  },
  {
    "text": "DNS so uh really the topic of the talk is TLS exploits that are enabled by htb",
    "start": "467720",
    "end": "475720"
  },
  {
    "text": "capabilities and this is what I call beastly attacks and because they rely on",
    "start": "475720",
    "end": "481440"
  },
  {
    "text": "Active network attackers I am assuming that you are targeting websites that are already safe against web attacker which",
    "start": "481440",
    "end": "488520"
  },
  {
    "text": "mean that our only targets are the top website in the world we are targeting Google Facebook Twitter Amazon the the",
    "start": "488520",
    "end": "494919"
  },
  {
    "text": "very good guys okay so uh when the history of BP",
    "start": "494919",
    "end": "501039"
  },
  {
    "text": "attacks uh started maybe from the renegotiation attacks in 09 it was",
    "start": "501039",
    "end": "506759"
  },
  {
    "text": "mostly a protocol logic flow but the way it was exploited using a cookie exploit",
    "start": "506759",
    "end": "512279"
  },
  {
    "text": "was already an indication that something was wrong and then we had the wake up call the Beast attack which is uh",
    "start": "512279",
    "end": "519479"
  },
  {
    "text": "adaptive Chen plantex which mean that basically uh what people believe before",
    "start": "519479",
    "end": "525680"
  },
  {
    "text": "beast but that there was no situation where someone would be stupid enough to",
    "start": "525680",
    "end": "531519"
  },
  {
    "text": "accept to encrypt thousands of requests that are chosen by the attacker and what",
    "start": "531519",
    "end": "537959"
  },
  {
    "text": "we realize with a beast attack that it was indeed the case HTTP does that and",
    "start": "537959",
    "end": "543760"
  },
  {
    "text": "this is exactly the reason why we actually misunderstood these beastly",
    "start": "543760",
    "end": "548839"
  },
  {
    "text": "attacks then we got more examples that we presented here at blackout crime Bridge um many timing attacks lot of",
    "start": "548839",
    "end": "558440"
  },
  {
    "text": "Brant so I'm going to start with a very good illustration of these kind of attacks uh which is called cookie cutter",
    "start": "558440",
    "end": "566640"
  },
  {
    "text": "and it's a poster shy for these attacks because it realiz on some very very ancient problems that have been in TLS",
    "start": "566640",
    "end": "573959"
  },
  {
    "text": "and in HTTP and I'm going to show just using standard uh uh man techniques or",
    "start": "573959",
    "end": "581640"
  },
  {
    "text": "you can break security of many many websites including Google uh Facebook everyone just using these simple",
    "start": "581640",
    "end": "589079"
  },
  {
    "text": "tricks so some reminders as I said https is optional uh",
    "start": "589079",
    "end": "595079"
  },
  {
    "text": "Marin spike in 09 showed here that uh you can do SSL stripping this is a very",
    "start": "595079",
    "end": "601640"
  },
  {
    "text": "effective technique to remove https from a website so what we came up with again",
    "start": "601640",
    "end": "608279"
  },
  {
    "text": "that is basically strict Transport Security it's a HTTP header which",
    "start": "608279",
    "end": "614240"
  },
  {
    "text": "mandates a Brer to always connect to this website using https but it does have some serious",
    "start": "614240",
    "end": "621800"
  },
  {
    "text": "problems it has a bootstrapping problem so the client the BR needs to see the header at least once uh HTT GPS is still",
    "start": "621800",
    "end": "630720"
  },
  {
    "text": "insecure by default so there is uh still no no strong way to enforce mandating",
    "start": "630720",
    "end": "637320"
  },
  {
    "text": "https except when you have preloaded uh https list in",
    "start": "637320",
    "end": "642480"
  },
  {
    "text": "browsers but it doesn't scale and the last problem you have is that SSS",
    "start": "642480",
    "end": "649200"
  },
  {
    "text": "expires um another reminder about https and cookies so this is a very very uh",
    "start": "649240",
    "end": "657639"
  },
  {
    "text": "serious long Las flow that has been in HTTP for decades",
    "start": "657639",
    "end": "662800"
  },
  {
    "text": "is that the fact that uh the same store is used for HTTP and https",
    "start": "662800",
    "end": "668920"
  },
  {
    "text": "cookies which means that cookies don't follow the same margin policy uh in particular they are not B aware and",
    "start": "668920",
    "end": "675639"
  },
  {
    "text": "instead of being bound to one Origins they're bound to non-public TNS suffixes which is much",
    "start": "675639",
    "end": "681760"
  },
  {
    "text": "weaker so what we come up with uh to at least protect the confidentiality of",
    "start": "681760",
    "end": "687079"
  },
  {
    "text": "cookies is a secure flag in cookies is which is an indication for the browser not to send this cookie over",
    "start": "687079",
    "end": "694800"
  },
  {
    "text": "HTTP however uh if you have a cookie that is set over HTTP uh then the",
    "start": "694800",
    "end": "700079"
  },
  {
    "text": "browser will send it with the https request and the server has no way of distinguishing which are the cookies",
    "start": "700079",
    "end": "705720"
  },
  {
    "text": "that were set by the attacker and which were the cookies that were set by the Hest website so this is ABS there is",
    "start": "705720",
    "end": "711880"
  },
  {
    "text": "nothing new in what I said this is actually uncoded in the cookie specification where you can you can read",
    "start": "711880",
    "end": "718519"
  },
  {
    "text": "that HTT TPS is in insufficient to prevent a network attacker from obtaining altering a victim's cookies so",
    "start": "718519",
    "end": "726399"
  },
  {
    "text": "basically the attacks are actually explained in the RFC and uh if you're wondering what you",
    "start": "726399",
    "end": "733040"
  },
  {
    "text": "can do with that uh well it's very well known that you can force cookies so the",
    "start": "733040",
    "end": "738519"
  },
  {
    "text": "attackers uh is going to use an HTTP subdomain where you can set cookies that will be sent with https request and",
    "start": "738519",
    "end": "746320"
  },
  {
    "text": "actually uh this attack is very old it's 15y oldold at least and it's the impact",
    "start": "746320",
    "end": "753160"
  },
  {
    "text": "of this attack has increased tremendously because most of the website are doing asynchronous actions which are",
    "start": "753160",
    "end": "761000"
  },
  {
    "text": "authenticated uh without switching Pages which means that there is no feedback for the users",
    "start": "761000",
    "end": "767720"
  },
  {
    "text": "that a session has been replaced uh and this is also useful for defeating csrf protection there was a",
    "start": "767720",
    "end": "774639"
  },
  {
    "text": "top at the blackout Europe this year and and the other thing you you",
    "start": "774639",
    "end": "780440"
  },
  {
    "text": "need to know about uh cookie forcing is that there is no no real defense so uh",
    "start": "780440",
    "end": "786079"
  },
  {
    "text": "only thing that really works is if you have hsts with this option that is called include subdomains and it has to",
    "start": "786079",
    "end": "791800"
  },
  {
    "text": "be used on the top level domain of the website and not uh you don't have to use",
    "start": "791800",
    "end": "796880"
  },
  {
    "text": "any subdomain without first going to the top level domain another differ that also exists is a uh Channel ID but uh",
    "start": "796880",
    "end": "803959"
  },
  {
    "text": "it's very weak uh because it's not supported and it also has some very",
    "start": "803959",
    "end": "809240"
  },
  {
    "text": "significant privacy cost sh ID is a border online evil for",
    "start": "809240",
    "end": "817360"
  },
  {
    "text": "tracking okay so here I'm going to show you how you can mount a simple attack uh you have Alice she wants to",
    "start": "817360",
    "end": "825240"
  },
  {
    "text": "login into Google because she want to access documents on IND docs.google.com",
    "start": "825240",
    "end": "830600"
  },
  {
    "text": "so she's going to be redirected to the Google login form and from there she's",
    "start": "830600",
    "end": "835800"
  },
  {
    "text": "going to send her credentials so fill in the login form forms uh and the response from this from",
    "start": "835800",
    "end": "842040"
  },
  {
    "text": "Google is going to have a redirection so in the location header and it's also going to set a cookie for the session ID",
    "start": "842040",
    "end": "849000"
  },
  {
    "text": "and because it's Google of course they're using secure cookies and HTTP only however uh because of the",
    "start": "849000",
    "end": "855759"
  },
  {
    "text": "fragmentation it's possible for the attacker to stop the contents of this",
    "start": "855759",
    "end": "861199"
  },
  {
    "text": "response at some point in these headers and what the what the Beast attacker can",
    "start": "861199",
    "end": "866680"
  },
  {
    "text": "do it can actually uh inject himself in the request where uh Alice is going to",
    "start": "866680",
    "end": "872800"
  },
  {
    "text": "be redirected to the Google login form to add some padding to the request and",
    "start": "872800",
    "end": "877880"
  },
  {
    "text": "when Alis is sending the request with the padding is going to shift the HTTP header in this case you can see the xx6",
    "start": "877880",
    "end": "885279"
  },
  {
    "text": "is the padding of the attacker and now the set cookie header is stopping after the domain and the secure flag is in",
    "start": "885279",
    "end": "892759"
  },
  {
    "text": "another fragment however the attacker prevents the the this fragment from",
    "start": "892759",
    "end": "898800"
  },
  {
    "text": "being sent by shutting down the TCP connection so what happens is that uh",
    "start": "898800",
    "end": "905320"
  },
  {
    "text": "the browser will store the session ID cookie without a secure flag which mean",
    "start": "905320",
    "end": "910759"
  },
  {
    "text": "that then on uh any HTTP request to a Google subdomain the attacker can recover the session cookie and this is a",
    "start": "910759",
    "end": "918240"
  },
  {
    "text": "practical attack so uh here is a demo where I use actually uh man in the",
    "start": "918240",
    "end": "924120"
  },
  {
    "text": "middle the software I initially developed for wi you're typing uh Search",
    "start": "924120",
    "end": "929839"
  },
  {
    "text": "terms on Google so here as you can see because of the auto complete of Google",
    "start": "929839",
    "end": "936600"
  },
  {
    "text": "search the network attacker can actually see the packet going and from the size of the response from Google you can",
    "start": "936600",
    "end": "942720"
  },
  {
    "text": "actually guess what are the search term by the user in real time and of course the NSA can also do that so when you're",
    "start": "942720",
    "end": "949199"
  },
  {
    "text": "searching on Google don't assume that because you're using https you're going to be uh safe from where you're talking",
    "start": "949199",
    "end": "957040"
  },
  {
    "text": "so here I'm I'm I'm uh emulating Ali is going to either the",
    "start": "957040",
    "end": "962639"
  },
  {
    "text": "attacker bait or the attacker injecting itself in some HTTP page and she's going",
    "start": "962639",
    "end": "968480"
  },
  {
    "text": "to go to the uh logging form on Google where the padding has been",
    "start": "968480",
    "end": "973880"
  },
  {
    "text": "injected and here you can see the man in the beidle is slowing things down a little bit if I was uh better it could",
    "start": "973880",
    "end": "981240"
  },
  {
    "text": "do that more transparently so another the victim fills in the login form with",
    "start": "981240",
    "end": "986759"
  },
  {
    "text": "the username and password and the request uh as you can see in the attacka window has been truncated and",
    "start": "986759",
    "end": "994399"
  },
  {
    "text": "unfortunately for me the the location header is after the cookies which means that the user is not redirected but as",
    "start": "994399",
    "end": "1000560"
  },
  {
    "text": "you can see when I inspect the request the SSID cookies has been started without the secure",
    "start": "1000560",
    "end": "1007160"
  },
  {
    "text": "flag so now you may be",
    "start": "1007160",
    "end": "1010959"
  },
  {
    "text": "wondering so what what I use for this attack is very non very old weakness",
    "start": "1014160",
    "end": "1019560"
  },
  {
    "text": "truncation it was the reason why we went from ssl2 to SSL 3 and there was a presentation about truncation already",
    "start": "1019560",
    "end": "1025798"
  },
  {
    "text": "last year from one of my colleague ATA and the HTTP weakness is plantex injection so the B capability a security",
    "start": "1025799",
    "end": "1033959"
  },
  {
    "text": "depending on the presence of feathers or Flags because they can be removed if you're are insecure by default the",
    "start": "1033959",
    "end": "1039880"
  },
  {
    "text": "attacker can remove your security and the last thing is the liberal passing of malform HP messages because when I",
    "start": "1039880",
    "end": "1046240"
  },
  {
    "text": "truncate the message it becomes syntactically inv so it should should have been rejected",
    "start": "1046240",
    "end": "1051280"
  },
  {
    "text": "but it turned out that we have this robustness principle which say we should accept doy formatted messages and",
    "start": "1051280",
    "end": "1058440"
  },
  {
    "text": "because of that my cookie is actually sted on two BRS so you may be wondering uh once this",
    "start": "1058440",
    "end": "1065559"
  },
  {
    "text": "cookie has been stored without the secure flag I still need an HTTP request to read the value on the",
    "start": "1065559",
    "end": "1071520"
  },
  {
    "text": "network uh so I do have to go through hsts but hsts is also something where",
    "start": "1071520",
    "end": "1076640"
  },
  {
    "text": "it's insecure by default and if you remove h HS uh you lose hsts protection",
    "start": "1076640",
    "end": "1082760"
  },
  {
    "text": "so what I do is that I use exactly the same attack to find some redirection on uh the victim website uh to truncate the",
    "start": "1082760",
    "end": "1090840"
  },
  {
    "text": "hsts header after the ma Max AG flag to say that it's expire in at at most 10",
    "start": "1090840",
    "end": "1099039"
  },
  {
    "text": "seconds so the mitigation for that is that you have to you have to reject small form HP messages and you have to",
    "start": "1099039",
    "end": "1104600"
  },
  {
    "text": "enforce the termination mode of TLS connections and there are still many many we fix the BRS we fix chromium we",
    "start": "1104600",
    "end": "1110559"
  },
  {
    "text": "fix Safari but there are still many hon that are vulnerable to that for instance WG curl all of those that can still be",
    "start": "1110559",
    "end": "1117960"
  },
  {
    "text": "targeted using these kind of attacks okay so now the real uh pieces",
    "start": "1117960",
    "end": "1123559"
  },
  {
    "text": "for the main piece for this talk is a a class of attack called virtual L",
    "start": "1123559",
    "end": "1130080"
  },
  {
    "text": "confusion uh so to understand this class of attack we need some more background on pki so you know that you have CA that",
    "start": "1130080",
    "end": "1136039"
  },
  {
    "text": "issue certificates uh through intermediates to to",
    "start": "1136039",
    "end": "1141440"
  },
  {
    "text": "website uh so as I said before there are a lot of bugs when you are checking certificates the good to fail was a",
    "start": "1141440",
    "end": "1148360"
  },
  {
    "text": "spectacular failure this year but it's not uh the first one many many other",
    "start": "1148360",
    "end": "1153760"
  },
  {
    "text": "before and another question that you may be wondering is can we trust CA to issue",
    "start": "1153760",
    "end": "1160799"
  },
  {
    "text": "the certificate so last year I was an intern at Microsoft research uh in Silicon Valley and we conducted a study",
    "start": "1160799",
    "end": "1168280"
  },
  {
    "text": "with uh abadi and wubber Be Few colleagues uh about the uniformity of",
    "start": "1168280",
    "end": "1177039"
  },
  {
    "text": "practices in the pki and what we found is that the pki is not uniform at all so",
    "start": "1177039",
    "end": "1182440"
  },
  {
    "text": "you have some good C that are well behaving and you have other C that are uh complete crap and the the problem we",
    "start": "1182440",
    "end": "1189840"
  },
  {
    "text": "have with the pka is that the good one and the bad ones they have exactly the same power",
    "start": "1189840",
    "end": "1196280"
  },
  {
    "text": "basically so I'm not going to say anything more about PKA because have it has been a ODOT topic and there been it",
    "start": "1196280",
    "end": "1203159"
  },
  {
    "text": "has been mentioned in every year in the past 5 years so look at the previous uh",
    "start": "1203159",
    "end": "1209000"
  },
  {
    "text": "um talks and academic papers which are often much",
    "start": "1209000",
    "end": "1214640"
  },
  {
    "text": "better another background that you need to understand is the way that we are using https",
    "start": "1214640",
    "end": "1220520"
  },
  {
    "text": "multiplexing so an important change we had with a move to the cloud is that",
    "start": "1220520",
    "end": "1225760"
  },
  {
    "text": "it's no longer possible to have one IP alss one certificate equals one domain",
    "start": "1225760",
    "end": "1231840"
  },
  {
    "text": "it's just too expensive we don't we run out of ipv4 resources so instead what we",
    "start": "1231840",
    "end": "1237640"
  },
  {
    "text": "have is that we have HTTP multiplexing where you have a a server that is configured with multiple certificates",
    "start": "1237640",
    "end": "1245320"
  },
  {
    "text": "it's accepting connection from multiple IP addresses uh and it's managing the",
    "start": "1245320",
    "end": "1251000"
  },
  {
    "text": "TLs sessions in the form of the session database or a session TLS session ticket",
    "start": "1251000",
    "end": "1256840"
  },
  {
    "text": "encryption key and uh what it has to do is the redirect request it",
    "start": "1256840",
    "end": "1263360"
  },
  {
    "text": "receives using the right certificate man managing the session and sending it to",
    "start": "1263360",
    "end": "1268559"
  },
  {
    "text": "the right virtual host okay so uh basically when you look",
    "start": "1268559",
    "end": "1273679"
  },
  {
    "text": "at the URI uh the red part is the origin and typically uh the rooting of the",
    "start": "1273679",
    "end": "1280120"
  },
  {
    "text": "request only depends on the origin of the request what is blue is a path and query",
    "start": "1280120",
    "end": "1286320"
  },
  {
    "text": "parameters and there this is a part that determines what is going to be the response from the virtual L that has",
    "start": "1286320",
    "end": "1291679"
  },
  {
    "text": "been selected and finally the as is kept by the brother um I'm sorry we need some",
    "start": "1291679",
    "end": "1297840"
  },
  {
    "text": "background on TLS handshake uh so it's actually a crime to",
    "start": "1297840",
    "end": "1303120"
  },
  {
    "text": "present the unshake like that because I have parentheses I have brackets and you have to understand that TLS is a complex",
    "start": "1303120",
    "end": "1309880"
  },
  {
    "text": "protocol you cannot uh draw TLS as a message charts you're going to do mistakes if you do that but in any case",
    "start": "1309880",
    "end": "1318159"
  },
  {
    "text": "when you're establishing a connection the client is maybe going to send you an Sni and it's basically the domain of the",
    "start": "1318159",
    "end": "1324279"
  },
  {
    "text": "origin for the request the client wants to make uh however it's only available",
    "start": "1324279",
    "end": "1329400"
  },
  {
    "text": "in TLS 1.0 but not in ssl3 then the server is going based on",
    "start": "1329400",
    "end": "1335799"
  },
  {
    "text": "the Sni is going to return the certificate may also create a record in",
    "start": "1335799",
    "end": "1341000"
  },
  {
    "text": "the session database which going to be indexed by the session ID that they may return or alternatively the server can",
    "start": "1341000",
    "end": "1347640"
  },
  {
    "text": "also encrypt the session records under some uh some key and return it in the",
    "start": "1347640",
    "end": "1353200"
  },
  {
    "text": "session ticket later um let's forget about we we will need to to remember what is certificate",
    "start": "1353200",
    "end": "1359840"
  },
  {
    "text": "authentication the client can also send certificates in the next round of messages uh for client authentication",
    "start": "1359840",
    "end": "1366240"
  },
  {
    "text": "and this will be used for in the last attack okay next",
    "start": "1366240",
    "end": "1372600"
  },
  {
    "text": "resumption so in the resumption on check uh the point is that you don't want to do a key ex a key exchange operation",
    "start": "1372600",
    "end": "1379320"
  },
  {
    "text": "which is a costly one so uh you have two way of doing resumptions either uh uh",
    "start": "1379320",
    "end": "1386600"
  },
  {
    "text": "based on the session identifier sent by the client the server may try to look up for this session identifier in the",
    "start": "1386600",
    "end": "1392480"
  },
  {
    "text": "session database and restore that resume the key that was used for encrypting this",
    "start": "1392480",
    "end": "1398360"
  },
  {
    "text": "session uh or alternatively the the the client may have provided a ticket which",
    "start": "1398360",
    "end": "1404799"
  },
  {
    "text": "remember is just the same as the session re entry you have in the in the session cache but encrypted under a ticket key",
    "start": "1404799",
    "end": "1413000"
  },
  {
    "text": "so the in this case the server decrypts the session record and uh use that for",
    "start": "1413000",
    "end": "1420080"
  },
  {
    "text": "resumption all right now that we've been through this nasty background uh what I",
    "start": "1420080",
    "end": "1425600"
  },
  {
    "text": "want to point out is that you have different notion of HTTP and TLS identities and you need to be aware of",
    "start": "1425600",
    "end": "1432039"
  },
  {
    "text": "that if you're running website that are using https so as a as a transport layer you have the server name indication the",
    "start": "1432039",
    "end": "1438720"
  },
  {
    "text": "Sni that is sent by the client um you have the certificate that is returned by",
    "start": "1438720",
    "end": "1444080"
  },
  {
    "text": "the server and inside the certificate you have multiple notion of domains so in the common name and in subject",
    "start": "1444080",
    "end": "1449440"
  },
  {
    "text": "alternative extension then you have uh session identifiers and session tickets which",
    "start": "1449440",
    "end": "1455559"
  },
  {
    "text": "are also acting as identity because uh when you resume a session there is no",
    "start": "1455559",
    "end": "1460880"
  },
  {
    "text": "reauthentication so basically these are working exactly like cookies you need to",
    "start": "1460880",
    "end": "1466440"
  },
  {
    "text": "understand that these value are exactly working like cookies in HTTP whereas at the application layer",
    "start": "1466440",
    "end": "1472679"
  },
  {
    "text": "you only have the host header it's the only truth and your request should be red according to",
    "start": "1472679",
    "end": "1478960"
  },
  {
    "text": "that so when you configure uh complex https multiplexers what you're going to",
    "start": "1478960",
    "end": "1485159"
  },
  {
    "text": "do is configure virtual L using some well-known configuration parameters so",
    "start": "1485159",
    "end": "1490279"
  },
  {
    "text": "first of all the IP address and Port it's a list and directive then the",
    "start": "1490279",
    "end": "1495960"
  },
  {
    "text": "uh name for the virtual us which can actually be more one it can be a regular expression but in any case this is what",
    "start": "1495960",
    "end": "1502039"
  },
  {
    "text": "is going to be matched against the Sni and against the HTTP Hoster then you configure what",
    "start": "1502039",
    "end": "1507919"
  },
  {
    "text": "certificate is going to be used for this virtual host and you also need to configure a lot of complicated things",
    "start": "1507919",
    "end": "1513200"
  },
  {
    "text": "about your session cach and your session ticket uh of course people get that very often wrong so you typically have to use",
    "start": "1513200",
    "end": "1520720"
  },
  {
    "text": "some tools to check your configuration but um what really matters is that for the request routing the ctps",
    "start": "1520720",
    "end": "1529039"
  },
  {
    "text": "multiplexer uh first of all always M matches the ipn port of the incoming request to the ipn port of the Chen",
    "start": "1529039",
    "end": "1536480"
  },
  {
    "text": "house uh this is a basic rule which is not a good rule actually because IP and Port are not they're under the attacker",
    "start": "1536480",
    "end": "1543360"
  },
  {
    "text": "controls are not under EUR control um then the the settings for",
    "start": "1543360",
    "end": "1548600"
  },
  {
    "text": "encrypting for creating the TLs session are going to be picked from the host was named matches the Sni if one was given",
    "start": "1548600",
    "end": "1556600"
  },
  {
    "text": "because ss3 doesn't have one so there is there is what is called a form mechanism you have a if the server",
    "start": "1556600",
    "end": "1563880"
  },
  {
    "text": "cannot find a matching one is going to use a default which can either be explicitly default or it can be the",
    "start": "1563880",
    "end": "1570000"
  },
  {
    "text": "first one in the configuration call basically and it's exactly the same for rooting the request to the virtual OST",
    "start": "1570000",
    "end": "1576559"
  },
  {
    "text": "so you're going to match the Hoster that you receive against the names of the virtual lost and if you don't have any",
    "start": "1576559",
    "end": "1582760"
  },
  {
    "text": "match you're going to fall back to the default or to the first",
    "start": "1582760",
    "end": "1588399"
  },
  {
    "text": "so what is extremely important that you have to remember from this talk is the fullback mechanism so you don't have any",
    "start": "1588399",
    "end": "1594200"
  },
  {
    "text": "guarantee that the selected virtual for rooting the request was the one that was",
    "start": "1594200",
    "end": "1599600"
  },
  {
    "text": "actually intended to under the request and I would like to point out that this is not a new things it's",
    "start": "1599600",
    "end": "1606120"
  },
  {
    "text": "actually a non vector and there is a very good paper from ccs7 by the Stanford crew um uh where",
    "start": "1606120",
    "end": "1615120"
  },
  {
    "text": "they are doing what they call DNS rebinding but but in their model actually it is uh the client is",
    "start": "1615120",
    "end": "1622520"
  },
  {
    "text": "connecting to a malicious website and the malicious website is rebinding is on IP addresses to many other uh domains on",
    "start": "1622520",
    "end": "1630559"
  },
  {
    "text": "the internet and using the O fallback mechanism to use the client as an open",
    "start": "1630559",
    "end": "1636360"
  },
  {
    "text": "proxy basically so this is an attack against the client but what what these",
    "start": "1636360",
    "end": "1641399"
  },
  {
    "text": "people missed is that if they had done the same attack on the server the results and impact is much worse",
    "start": "1641399",
    "end": "1649600"
  },
  {
    "text": "so let's take a simple example you have two TLS servers same domain different ports somewh sometime used well you may",
    "start": "1649600",
    "end": "1659120"
  },
  {
    "text": "maybe know that actually the port there is uh the port is included in the HTTP oeter but it's never unforced never so",
    "start": "1659120",
    "end": "1667880"
  },
  {
    "text": "the attacker can redirect freely between ports so the port is useless for some origin policy under a simple example you",
    "start": "1667880",
    "end": "1674720"
  },
  {
    "text": "have a certificate that covers two domain you have a one server at one IP X",
    "start": "1674720",
    "end": "1679880"
  },
  {
    "text": "that hand the first another server I at IP y that under the second and they both",
    "start": "1679880",
    "end": "1687000"
  },
  {
    "text": "use the same certificate so what happens when the attacker redirect a packets for from a request from X to",
    "start": "1687000",
    "end": "1694039"
  },
  {
    "text": "Y the answer is that why is going to return a page from uh y. a.com but this",
    "start": "1694039",
    "end": "1700960"
  },
  {
    "text": "page is going to be served inside the x. a.com origin so the point about uh us",
    "start": "1700960",
    "end": "1709080"
  },
  {
    "text": "confusion attacks is that they rely on several things but mostly the virtual",
    "start": "1709080",
    "end": "1714640"
  },
  {
    "text": "fullback so the way that you want to exploit that is you want to transfer",
    "start": "1714640",
    "end": "1720399"
  },
  {
    "text": "weaknesses and vulnerabilities such as cross scripting user contents open R",
    "start": "1720399",
    "end": "1725919"
  },
  {
    "text": "directors cross protocol directions ex frame option course anything basically",
    "start": "1725919",
    "end": "1731440"
  },
  {
    "text": "you want to you want to be able to take that from one origin and move it to another one uh and it turned out that",
    "start": "1731440",
    "end": "1737600"
  },
  {
    "text": "someone already done that at blackout it was in blackout 10 2010 by anen and so",
    "start": "1737600",
    "end": "1744120"
  },
  {
    "text": "and they had a demo where a transferred xss between two Modzilla domains and I",
    "start": "1744120",
    "end": "1750200"
  },
  {
    "text": "think Unfortunately they did not realize the significance of their Discovery because uh this is actually a very",
    "start": "1750200",
    "end": "1757600"
  },
  {
    "text": "generic um attack Vector that can be exploited in many ways uh okay so first one I'm going to",
    "start": "1757600",
    "end": "1765480"
  },
  {
    "text": "demonstrate is very simple cross protocol R Direction so say that you have uh I'm I'm actually",
    "start": "1765480",
    "end": "1771840"
  },
  {
    "text": "targeting all uh tokens here which is a very uh fragile security thing on the",
    "start": "1771840",
    "end": "1779000"
  },
  {
    "text": "internet it can be broken extremely easily so as you may know the the the redirect URI of O is actually origin",
    "start": "1779000",
    "end": "1786919"
  },
  {
    "text": "based it's not a domain it's not a full URI it's just the origin so this is a",
    "start": "1786919",
    "end": "1795320"
  },
  {
    "text": "this is the place where if you want to use l with Facebook for instance uh this is where Facebook will redirect the",
    "start": "1795320",
    "end": "1802679"
  },
  {
    "text": "access token uh to it will be stored in the UR fragments the hash and as I told",
    "start": "1802679",
    "end": "1809159"
  },
  {
    "text": "before it's a part that is kept by the browser so here I'm going to show that cross protocol redirection can actually",
    "start": "1809159",
    "end": "1816279"
  },
  {
    "text": "be used to uh take uh o token that was on the https uh uh domain uh do a virtual",
    "start": "1816279",
    "end": "1824519"
  },
  {
    "text": "confusion to some other domain in the certificate and in this origin you",
    "start": "1824519",
    "end": "1829679"
  },
  {
    "text": "actually have a redirection to http and uh by doing this redirection the attacker is able to recover the access",
    "start": "1829679",
    "end": "1836000"
  },
  {
    "text": "token and it's very interesting that is actually an that is built into Google I learned that that uh if you rebind",
    "start": "1836000",
    "end": "1843440"
  },
  {
    "text": "google.com to no SSL search. google.com suddenly your search queries are going to be redirected to http which means",
    "start": "1843440",
    "end": "1851159"
  },
  {
    "text": "that you have to assume that uh Google doesn't care about the confidentiality of search request because it allows",
    "start": "1851159",
    "end": "1856799"
  },
  {
    "text": "Network attackers to remove remove uh the confidentiality of search request so here's a the attack plays out",
    "start": "1856799",
    "end": "1864440"
  },
  {
    "text": "uh you're going to I'm using Facebook login here so the Alice is going to use login with Facebook where she's going to",
    "start": "1864440",
    "end": "1871159"
  },
  {
    "text": "be redirected on Pinterest in this case so uh Pinterest has a let's say",
    "start": "1871159",
    "end": "1877080"
  },
  {
    "text": "Pinterest has two servers it has one w. Pinterest.com which is a very secure origin hsts everything uh secure cookies",
    "start": "1877080",
    "end": "1885279"
  },
  {
    "text": "whatever you want and then you have another one which is api. Pinterest.com which is a wheel card certificate so",
    "start": "1885279",
    "end": "1892559"
  },
  {
    "text": "what we're going to do is take this request that contains the Facebook R direction from uh that contains the",
    "start": "1892559",
    "end": "1899320"
  },
  {
    "text": "access token and we're going to move it from www.pinterest.com to uh this API server",
    "start": "1899320",
    "end": "1905559"
  },
  {
    "text": "and it turned out that this API server when it receive a request it doesn't understand it will redirect it to http",
    "start": "1905559",
    "end": "1911360"
  },
  {
    "text": "for some reason and you would be surprised that how many websites do that many many domains have a page that ref",
    "start": "1911360",
    "end": "1917320"
  },
  {
    "text": "to http and when you do that uh of course uh the attacker can recover the the token from",
    "start": "1917320",
    "end": "1924200"
  },
  {
    "text": "the HTTP request um I'm going to skip this demo",
    "start": "1924200",
    "end": "1929600"
  },
  {
    "text": "because I have more interesting ones but uh uh the next one may be more exciting maybe so it's a as confusion with your",
    "start": "1929600",
    "end": "1937360"
  },
  {
    "text": "user content Origins so it's very common to use uh different top level domains for user contents for instance Google",
    "start": "1937360",
    "end": "1944799"
  },
  {
    "text": "use googleusercontent.com dropbox uses dropbo us.com and this very good practice except if you're mixing your uh",
    "start": "1944799",
    "end": "1953559"
  },
  {
    "text": "if you're mixing google.com and Google user going come in the same certificate",
    "start": "1953559",
    "end": "1958880"
  },
  {
    "text": "because of uh virtual confusion but here what I'm going to Target is when you",
    "start": "1958880",
    "end": "1964240"
  },
  {
    "text": "have the users on files because it needs to be authenticated there needs to be access",
    "start": "1964240",
    "end": "1970440"
  },
  {
    "text": "to a session cookie so it has to be on the domain where the session cookie is available and this is very interesting",
    "start": "1970440",
    "end": "1976399"
  },
  {
    "text": "for us because we can try to Target these domains in the case of Dropbox these f are on DL web. dropbox.com",
    "start": "1976399",
    "end": "1983679"
  },
  {
    "text": "this is when you're looking for at your own files on your Dropbox account and",
    "start": "1983679",
    "end": "1989279"
  },
  {
    "text": "I'm going to use one of my favorite exploitation tricks from uh https attacks which is uh short Le cookie",
    "start": "1989279",
    "end": "1995919"
  },
  {
    "text": "forcing so you're going to uh force a cookie that is going to temporarily replace the session of the user with one",
    "start": "1995919",
    "end": "2003440"
  },
  {
    "text": "of the attacker but I set a very short expiration time for the cookies that I am foring such that uh uh after a few",
    "start": "2003440",
    "end": "2010760"
  },
  {
    "text": "seconds the user session is restored and this allows me to break",
    "start": "2010760",
    "end": "2016000"
  },
  {
    "text": "into the high trust dropbox.com origin which is really very very well protected",
    "start": "2016000",
    "end": "2021240"
  },
  {
    "text": "and recover a victim session let's see how it pays out so here uh we have theaker Dropbox",
    "start": "2021240",
    "end": "2030760"
  },
  {
    "text": "and theaker has stored a malicious file which contains the attack so it's a HTML",
    "start": "2030760",
    "end": "2037919"
  },
  {
    "text": "file that has somewhere exploit so I think I open this",
    "start": "2037919",
    "end": "2044760"
  },
  {
    "text": "file and here you can see that uh this is a way to uh take control of",
    "start": "2044760",
    "end": "2053280"
  },
  {
    "text": "this origin but right now it's Ser on DL web so I cannot do much with this so to",
    "start": "2053280",
    "end": "2058960"
  },
  {
    "text": "be useful I need to be able to show this page on the user and for that I'm going to uh do virtual confusion on the victim",
    "start": "2058960",
    "end": "2066878"
  },
  {
    "text": "between the DU dropbox.com and the GL web. dropbox.com Origins so for that I need to",
    "start": "2066879",
    "end": "2073720"
  },
  {
    "text": "take um so uh let's",
    "start": "2073720",
    "end": "2079760"
  },
  {
    "text": "see yes so I'm moving to D",
    "start": "2080040",
    "end": "2085079"
  },
  {
    "text": "web and here I am grabbing the attacker session",
    "start": "2088839",
    "end": "2094560"
  },
  {
    "text": "cookie which I'm going to force on the victim using a very simple",
    "start": "2094560",
    "end": "2101839"
  },
  {
    "text": "script so once this is done the next step is that you have to bait the user into some page that will do the cookie",
    "start": "2103640",
    "end": "2111400"
  },
  {
    "text": "forcing or you can of course always inject yourself into any HTTP request made by the",
    "start": "2111400",
    "end": "2117079"
  },
  {
    "text": "user so this is the victim's rer I use a different one it's firef so here uh there is some picture",
    "start": "2117079",
    "end": "2124839"
  },
  {
    "text": "that actually is causing the cookie to be forced and as you can see here I have",
    "start": "2124839",
    "end": "2130440"
  },
  {
    "text": "actually redirected the user to the DL web but under the w. dropbox.com origin",
    "start": "2130440",
    "end": "2137680"
  },
  {
    "text": "which means that now uh the cookies that I have for expire and I get access I am",
    "start": "2137680",
    "end": "2143480"
  },
  {
    "text": "I have control of xss page in ww. drop.com that is using authenticated",
    "start": "2143480",
    "end": "2148920"
  },
  {
    "text": "under the uh victim's account okay another very very",
    "start": "2148920",
    "end": "2155880"
  },
  {
    "text": "interesting way of exploiting virtual confusion is shared session caches so uh as I told you before you",
    "start": "2155880",
    "end": "2163480"
  },
  {
    "text": "have three kinds of authentication in TLS uh you have certificate you have uh",
    "start": "2163480",
    "end": "2169520"
  },
  {
    "text": "session resumption by identifier and you have session resumption by ticket uh and it turned out that when",
    "start": "2169520",
    "end": "2176680"
  },
  {
    "text": "you're doing Cloud hosting you really want to use multiple servers that uh can",
    "start": "2176680",
    "end": "2182319"
  },
  {
    "text": "have resumption work between them because they may be redundant servers for the same content and the good way of",
    "start": "2182319",
    "end": "2187960"
  },
  {
    "text": "doing that is either having a network session cach or having a shared ticket",
    "start": "2187960",
    "end": "2193440"
  },
  {
    "text": "key so it's actually quite dangerous when you do that and we found that uh",
    "start": "2193440",
    "end": "2200160"
  },
  {
    "text": "the session cache was not well partitioned between many Cloud providers including Amazon Modzilla and yo and um",
    "start": "2200160",
    "end": "2208560"
  },
  {
    "text": "interestingly uh the cash isolation was defective not on the tickets but",
    "start": "2208560",
    "end": "2213800"
  },
  {
    "text": "actually on the classical session database which means that you had servers that were serving different uh",
    "start": "2213800",
    "end": "2220680"
  },
  {
    "text": "websites even different certificates which is very interesting uh but if you",
    "start": "2220680",
    "end": "2226280"
  },
  {
    "text": "wanted to exploit that you need to make sure that session based session identifier based resumption is used and",
    "start": "2226280",
    "end": "2233079"
  },
  {
    "text": "since they we actually using ticket and ticket as pre precedence over session ID",
    "start": "2233079",
    "end": "2238760"
  },
  {
    "text": "resumption you need to downgrade the connection to ss3 and it's one of the things that amazingly the network",
    "start": "2238760",
    "end": "2244760"
  },
  {
    "text": "attacker can do because of browser Behavior they allow you to D connection to",
    "start": "2244760",
    "end": "2251559"
  },
  {
    "text": "ss3 uh I'm also going to skip this demo and I encourage you to look it up",
    "start": "2252000",
    "end": "2257200"
  },
  {
    "text": "online so the most interesting case I'm going to show is uh when you have shared",
    "start": "2257200",
    "end": "2263520"
  },
  {
    "text": "reverse proxies so this is when you're are talking about the CDN settings for instance um and they're actually very",
    "start": "2263520",
    "end": "2270920"
  },
  {
    "text": "commonly used many uh uh SSL Terminators CDN things that are actually rooting",
    "start": "2270920",
    "end": "2277680"
  },
  {
    "text": "requests back to some backends but not serving anything locally and their handling of TLS is often acquired so on",
    "start": "2277680",
    "end": "2284560"
  },
  {
    "text": "cofler they do domain packing which you consider quite bad uh and you'll see why next and a",
    "start": "2284560",
    "end": "2292599"
  },
  {
    "text": "good interesting example is a Kamai where they actually allocate dedicated IP addresses for the customer certificates which is",
    "start": "2292599",
    "end": "2299599"
  },
  {
    "text": "impressive um and other CL providers are using Sni based uh routing for their",
    "start": "2299599",
    "end": "2307720"
  },
  {
    "text": "for the reverse proxies and interestingly what what is the fullback viral for this uh reverse proxies and we",
    "start": "2307720",
    "end": "2315720"
  },
  {
    "text": "found some very interesting cases for instance on aami so I did remember that I saw this",
    "start": "2315720",
    "end": "2323760"
  },
  {
    "text": "page which was written in year 2000 about akami that explains how you can",
    "start": "2323760",
    "end": "2328960"
  },
  {
    "text": "use akami as an open proxy so basically you the some number I use 666 of course",
    "start": "2328960",
    "end": "2337079"
  },
  {
    "text": "and then then you put the domain you want the request to be sent to and the akami server will actually download this",
    "start": "2337079",
    "end": "2343720"
  },
  {
    "text": "request send this request and return back the result to you um and here of",
    "start": "2343720",
    "end": "2349319"
  },
  {
    "text": "course I'm going to use that against NSA website so um this is uh the real NSA",
    "start": "2349319",
    "end": "2358200"
  },
  {
    "text": "website the real NSA certificates and what I don't T is that it's valid for uh",
    "start": "2358200",
    "end": "2363520"
  },
  {
    "text": "dub dubdub and dubdub dub 2 and also no just nsa.gov",
    "start": "2363520",
    "end": "2368680"
  },
  {
    "text": "and also I also notice that it is served by akami so next what I'm going to try is",
    "start": "2368680",
    "end": "2375560"
  },
  {
    "text": "I'm going to see what happens when I send a request for uh one of the domains that",
    "start": "2375560",
    "end": "2381920"
  },
  {
    "text": "is not uh used by this Akamai reverse proxy so for instance in this case it is",
    "start": "2381920",
    "end": "2388400"
  },
  {
    "text": "um nsa.gov with no dubdub dub so this is a request I'm",
    "start": "2388400",
    "end": "2395800"
  },
  {
    "text": "sending and in the response I see from the akami server is actually a page on Yahoo and this page from Yahoo is served",
    "start": "2396079",
    "end": "2405119"
  },
  {
    "text": "through a request with a Hoster equals to nsa.gov but the point is if I send",
    "start": "2405119",
    "end": "2411119"
  },
  {
    "text": "this request over https it turns out that since the acami server is configured to use an NSA",
    "start": "2411119",
    "end": "2416800"
  },
  {
    "text": "certificate that is valid for nsa.gov and the other two well I'll let you",
    "start": "2416800",
    "end": "2422119"
  },
  {
    "text": "imagine what happens when I do that so I just jelling 666 I put my",
    "start": "2422119",
    "end": "2427839"
  },
  {
    "text": "attacker address and here you go I am the attacker and I have I have uh",
    "start": "2427839",
    "end": "2433839"
  },
  {
    "text": "impersonated to nsa. go origin which is about as bad as you can get for https",
    "start": "2433839",
    "end": "2442200"
  },
  {
    "text": "attacks uh and this is a real NS",
    "start": "2442200",
    "end": "2447319"
  },
  {
    "text": "certificate uh so remember the Dio are on vh. ht. VC and um it turned out that",
    "start": "2447319",
    "end": "2455480"
  },
  {
    "text": "this is actually terribly bad because every big website uses aami so what kind",
    "start": "2455480",
    "end": "2460800"
  },
  {
    "text": "of website you can compromise with that well here is some examples so I'm going to show that you",
    "start": "2460800",
    "end": "2468359"
  },
  {
    "text": "can impersonate uh so in some cases you can just impressionate some minor subdomains that are not used so on",
    "start": "2468359",
    "end": "2475079"
  },
  {
    "text": "Twitter you can just for instance you can since you impersonate this subdomain you only have access for instance to the",
    "start": "2475079",
    "end": "2480319"
  },
  {
    "text": "cookies for uh Twitter which is already quite good but in other cases like LinkedIn the certificate is a will card",
    "start": "2480319",
    "end": "2487079"
  },
  {
    "text": "one so you can actually impersonate d. link.com which means that you can serve",
    "start": "2487079",
    "end": "2492800"
  },
  {
    "text": "any page you want to this origin and you can get the user to fill in a password",
    "start": "2492800",
    "end": "2497960"
  },
  {
    "text": "so this is quite bad and the other thing that's interesting is that uh this doesn't leave any Trace because when you",
    "start": "2497960",
    "end": "2505079"
  },
  {
    "text": "have a a virtual fullback uh there is no Trace in the log",
    "start": "2505079",
    "end": "2510480"
  },
  {
    "text": "actually the request is logged under the default name so what you can what can",
    "start": "2510480",
    "end": "2516160"
  },
  {
    "text": "you do to prevent host contusion the first rule of them that you have to enforce is that you should not mix low",
    "start": "2516160",
    "end": "2521960"
  },
  {
    "text": "trust and high trust domain in certificates it's not a good practice if you have any virtual confusion between",
    "start": "2521960",
    "end": "2527560"
  },
  {
    "text": "them the low trust one can probably compromise the high trust one I showed some examples but I actually do have",
    "start": "2527560",
    "end": "2534560"
  },
  {
    "text": "more the other thing that you should always do is configure a fullback host on every IP on your servers and this",
    "start": "2534560",
    "end": "2541000"
  },
  {
    "text": "should return an error code uh and this is already a known uh",
    "start": "2541000",
    "end": "2547160"
  },
  {
    "text": "security advice but you should really take it to Hur other thing is your TLS session",
    "start": "2547160",
    "end": "2553520"
  },
  {
    "text": "configuration it's actually very accur critical that you do not uh set some",
    "start": "2553520",
    "end": "2559079"
  },
  {
    "text": "shared cash between virtual dots that have different certificates it can be disastrous uh and you you also need to",
    "start": "2559079",
    "end": "2565839"
  },
  {
    "text": "be worried about uh using configuring some encryption keys for tickets because they may cover more virtu than you",
    "start": "2565839",
    "end": "2572760"
  },
  {
    "text": "expect so the last part is very interesting one I'm going to tell you I come to that I was discussing with the",
    "start": "2572760",
    "end": "2580000"
  },
  {
    "text": "uh um enic developers about how to better isolate the TLs session cach in",
    "start": "2580000",
    "end": "2585839"
  },
  {
    "text": "enic and one of the thing I was suggesting is that we should ensure that the Sni of the connection matches the",
    "start": "2585839",
    "end": "2592920"
  },
  {
    "text": "host HTTP hosted of the request to present uh to prevent the resumption",
    "start": "2592920",
    "end": "2598079"
  },
  {
    "text": "case where you have non-matching Sni and what they told me that they could not do that because in some cases they were",
    "start": "2598079",
    "end": "2604400"
  },
  {
    "text": "required to accept this kind of mismatch when they were used using spdy and of course I was extremely surprised and it",
    "start": "2604400",
    "end": "2610880"
  },
  {
    "text": "turned out that um actually there is a a feature which is called spdy connection",
    "start": "2610880",
    "end": "2616440"
  },
  {
    "text": "pooling and what this feature does here is that normally when you have a server",
    "start": "2616440",
    "end": "2622440"
  },
  {
    "text": "uh with two domains and you have request to these two domains the browser is is required to",
    "start": "2622440",
    "end": "2628920"
  },
  {
    "text": "create new https connection for each with spdy the idea is that why don't we",
    "start": "2628920",
    "end": "2634680"
  },
  {
    "text": "reuse the connection we have because we already saw this certificate and we remember that it was valid for these two",
    "start": "2634680",
    "end": "2640800"
  },
  {
    "text": "domains and the only thing that is required to enable that is that the DNS",
    "start": "2640800",
    "end": "2647400"
  },
  {
    "text": "uh of the two domain have to point to the same server and of course this is a connection this is a condition that is",
    "start": "2647400",
    "end": "2652720"
  },
  {
    "text": "under the control of the attacker so I was extremely surprised about that because it turned out that",
    "start": "2652720",
    "end": "2659400"
  },
  {
    "text": "everything I thought I knew about https authentication was wrong and uh I started writing down some stuff and of",
    "start": "2659400",
    "end": "2666440"
  },
  {
    "text": "course last week uh I realized that all of our results did not hold and that if you were if you",
    "start": "2666440",
    "end": "2672280"
  },
  {
    "text": "had some specific guarantees that will be actually leaking to every domain that you have in the certificate where this",
    "start": "2672280",
    "end": "2679119"
  },
  {
    "text": "property was established and remember that this is also present in http2 draft",
    "start": "2679119",
    "end": "2684760"
  },
  {
    "text": "so of course last week I discovered new attacks and I cannot talk about about them I would have loved to show another",
    "start": "2684760",
    "end": "2691119"
  },
  {
    "text": "impersonation of nsa.gov I could do that but it's not patched so I cannot",
    "start": "2691119",
    "end": "2697880"
  },
  {
    "text": "okay then I'm going to talk just a very very little bit about triple en you may have already heard about",
    "start": "2697880",
    "end": "2704599"
  },
  {
    "text": "that uh I think I don't really want to go back to the original renegotiation",
    "start": "2704599",
    "end": "2710520"
  },
  {
    "text": "attack but what I do want to to say is that um we had a mitigation and we were",
    "start": "2710520",
    "end": "2717640"
  },
  {
    "text": "thinking of this scenario so the upper one is 2009 re negotiation attack where",
    "start": "2717640",
    "end": "2722680"
  },
  {
    "text": "the client wants to connect to some server and he think he's creating a new connection but in fact the attacker is",
    "start": "2722680",
    "end": "2729520"
  },
  {
    "text": "is tunneling this hand check inside another one he already created with the server which mean that uh the attacker",
    "start": "2729520",
    "end": "2737680"
  },
  {
    "text": "is able to inject some data that is going to appear before the user data in triple Shake we using some very",
    "start": "2737680",
    "end": "2744599"
  },
  {
    "text": "interesting thing about TLS is that you are a to synchronize the keys between sessions and uh the way this works is is",
    "start": "2744599",
    "end": "2753000"
  },
  {
    "text": "uh you have two ways this can work so in RSA you just encrypt the the the preas",
    "start": "2753000",
    "end": "2758079"
  },
  {
    "text": "key that is created by the client and sent to uh M so in this scenario the",
    "start": "2758079",
    "end": "2763200"
  },
  {
    "text": "client is connecting to the attacker willingly um and the thing is that uh",
    "start": "2763200",
    "end": "2768400"
  },
  {
    "text": "you can have another session that is created with some other participants some other server somewhere that is going to use the same cryptographic",
    "start": "2768400",
    "end": "2775880"
  },
  {
    "text": "parameters and uh once you do resumption you can move a connection that was",
    "start": "2775880",
    "end": "2781960"
  },
  {
    "text": "established with M to a connection that was that is established with anyone else somewhere and every security guarantee",
    "start": "2781960",
    "end": "2788880"
  },
  {
    "text": "that was bound to your session they may be leaked into uh uh what whatever is",
    "start": "2788880",
    "end": "2795079"
  },
  {
    "text": "going to transmit to the session with this unknown participant and the problem you also have is that the belief on both",
    "start": "2795079",
    "end": "2802119"
  },
  {
    "text": "side are different so the client uh perception of who is talking to does not",
    "start": "2802119",
    "end": "2807520"
  },
  {
    "text": "match the server perception of who is talking to um and I think the the very",
    "start": "2807520",
    "end": "2814079"
  },
  {
    "text": "interesting point that we make about this attack is that we do have an exploit uh it's an exploit against",
    "start": "2814079",
    "end": "2821119"
  },
  {
    "text": "um uh so it's an exploit against client authentication uh and it turned out that",
    "start": "2821119",
    "end": "2827319"
  },
  {
    "text": "uh nobody really expected that such an attack would be possible because uh when",
    "start": "2827319",
    "end": "2832680"
  },
  {
    "text": "there was original renegotiation attack um there was a lot of security analysis",
    "start": "2832680",
    "end": "2838520"
  },
  {
    "text": "on the session system in TLS and the reason we we miss that is uh very simple",
    "start": "2838520",
    "end": "2845000"
  },
  {
    "text": "it's basically because um okay um because the preconditions of the",
    "start": "2845000",
    "end": "2853160"
  },
  {
    "text": "original renegotiation attacks they have been left untouched U between the time uh where",
    "start": "2853160",
    "end": "2860040"
  },
  {
    "text": "they were found and uh the time the Triple n check was discovered so for instance um the fact that you have",
    "start": "2860040",
    "end": "2867680"
  },
  {
    "text": "concatenation of data between uh um TLS connection that were from different un shakes or the fact that the server",
    "start": "2867680",
    "end": "2874680"
  },
  {
    "text": "certificate could change during negotiation uncheck and these were weaknesses that were left unattended uh",
    "start": "2874680",
    "end": "2882200"
  },
  {
    "text": "after the renegotiation attack and we actually managed to find some new flow in TLS to re exploit them and it's",
    "start": "2882200",
    "end": "2888640"
  },
  {
    "text": "really quite surprising so I think the very important point is that uh we really want to have robust solutions to",
    "start": "2888640",
    "end": "2896240"
  },
  {
    "text": "these uh failures and when it's it's the same pattern through all the talk I've",
    "start": "2896240",
    "end": "2901800"
  },
  {
    "text": "always did I always did the same thing which is to reuse very well-known vulnerabilities that had already been",
    "start": "2901800",
    "end": "2907240"
  },
  {
    "text": "exploited before but the patches for them were not robust and because of that",
    "start": "2907240",
    "end": "2912359"
  },
  {
    "text": "I could always find new ways of exploiting them so for for the teric mitigation we actually propos a very",
    "start": "2912359",
    "end": "2918200"
  },
  {
    "text": "drastic change to TLS which is to change the key derivation it's cryptographically it's a major change",
    "start": "2918200",
    "end": "2924040"
  },
  {
    "text": "and we're very surprised because this change is actually accepted so uh maybe some someday we actually be able to",
    "start": "2924040",
    "end": "2929760"
  },
  {
    "text": "change uh cookie Behavior you can always dream all right so the conclusion for my",
    "start": "2929760",
    "end": "2936359"
  },
  {
    "text": "talk is that uh there are many lessons to learn from uh https Bas",
    "start": "2936359",
    "end": "2942839"
  },
  {
    "text": "attacks uh so for instance cookie cutter uh paring is security critical this is",
    "start": "2942839",
    "end": "2948359"
  },
  {
    "text": "very important uh we found many many attacks uh in HTTP because of U parsing",
    "start": "2948359",
    "end": "2955440"
  },
  {
    "text": "in JavaScript don't do that yourself and remember that uh not every string is a",
    "start": "2955440",
    "end": "2961640"
  },
  {
    "text": "valid input so there are some input that you need to reject um okay so another thing is that",
    "start": "2961640",
    "end": "2968040"
  },
  {
    "text": "you should not rely on the presence of something to be secure because additions can typically uh relax things but not",
    "start": "2968040",
    "end": "2975839"
  },
  {
    "text": "make them secure otherwise they can be removed by the attacker uh and also this interesting about side effects and data",
    "start": "2975839",
    "end": "2982160"
  },
  {
    "text": "that is processed before the Integrity of the data is confirmed uh really the main lesson I",
    "start": "2982160",
    "end": "2988799"
  },
  {
    "text": "want you to learn is about virtual confusion it what we want when we are",
    "start": "2988799",
    "end": "2994440"
  },
  {
    "text": "doing cloud services https multiplexers SSL Terminators what we want is to",
    "start": "2994440",
    "end": "3000920"
  },
  {
    "text": "routin only to depend on authenticated input which mean that no matter what",
    "start": "3000920",
    "end": "3007240"
  },
  {
    "text": "kind of tempering the attacker is doing to your request routing uh is going to have the same uh",
    "start": "3007240",
    "end": "3013920"
  },
  {
    "text": "outcome but it is also must be the case that the routing is consistent across",
    "start": "3013920",
    "end": "3020680"
  },
  {
    "text": "servers that are sharing credentials and what I mean by that is that if you have two servers that are using same",
    "start": "3020680",
    "end": "3027680"
  },
  {
    "text": "certificate then uh the rooting uh behavior of request needs to be the same",
    "start": "3027680",
    "end": "3033960"
  },
  {
    "text": "on these two servers otherwise you're going to have virtual exploit and what I want you to remember",
    "start": "3033960",
    "end": "3041480"
  },
  {
    "text": "is that it is currently in current HTTP server it is your job to achieve authenticated consistent routing it is",
    "start": "3041480",
    "end": "3048520"
  },
  {
    "text": "not going to be provided to you automatically by the server it's in the way you configure your server so it's",
    "start": "3048520",
    "end": "3054920"
  },
  {
    "text": "your responsibility and the second thing I want you to be very careful about is the same certificate policy I told you",
    "start": "3054920",
    "end": "3062240"
  },
  {
    "text": "that in spdy connections are going to be reused for requests on other domains as",
    "start": "3062240",
    "end": "3069160"
  },
  {
    "text": "long as they appear in the original certificate so this means that you need to be extremely careful about what",
    "start": "3069160",
    "end": "3075559"
  },
  {
    "text": "domains you put together in the certificate and you should also be aware",
    "start": "3075559",
    "end": "3080799"
  },
  {
    "text": "that for instance if you're using Cloud flare your domain may be included in a certificate that contain malicious",
    "start": "3080799",
    "end": "3087440"
  },
  {
    "text": "domains and of course this is very bad for you and uh it's probably I expect",
    "start": "3087440",
    "end": "3092480"
  },
  {
    "text": "there will be more attacks from triple unshake the main lessons we we learn is the API problem",
    "start": "3092480",
    "end": "3099920"
  },
  {
    "text": "so uh TLS is really the problem we have with the TLs API is that every difficult",
    "start": "3099920",
    "end": "3105240"
  },
  {
    "text": "decision is Ed off to the application so uh basically the get that",
    "start": "3105240",
    "end": "3110559"
  },
  {
    "text": "of course very wrong and the other thing is that the crypto values from the unshake are not uh identifier for",
    "start": "3110559",
    "end": "3117240"
  },
  {
    "text": "session participants but this is not a Liston for you it's a Liston for the",
    "start": "3117240",
    "end": "3123040"
  },
  {
    "text": "ITF okay so to ter to conclude what we're doing about all of these problems",
    "start": "3123040",
    "end": "3128520"
  },
  {
    "text": "we have a verified implementation of TLS to prevent go to fail bugs and earth type of stuff and what we want to do is",
    "start": "3128520",
    "end": "3136599"
  },
  {
    "text": "to actually consider HTTP and TLS as a single unit of verification because if",
    "start": "3136599",
    "end": "3142599"
  },
  {
    "text": "you are taking the security guarantees of the TLs API and the secur security guarantees of HTTP separately then",
    "start": "3142599",
    "end": "3149119"
  },
  {
    "text": "you're never going to be secure they have to be considered together all right so we don't have a",
    "start": "3149119",
    "end": "3156160"
  },
  {
    "text": "lot of time for questions I'm afraid but feel free to come to me uh at the at the end of the talk we only have two",
    "start": "3156160",
    "end": "3162200"
  },
  {
    "text": "question two minutes for questions um but I will be uh happy to take at least",
    "start": "3162200",
    "end": "3168839"
  },
  {
    "text": "one you do have a microphone here",
    "start": "3170040",
    "end": "3176240"
  },
  {
    "text": "okay we don't have questions but uh feel free to come see me after the talk I would be happy to discuss this issues",
    "start": "3181960",
    "end": "3187720"
  },
  {
    "text": "with you",
    "start": "3187720",
    "end": "3190880"
  }
]