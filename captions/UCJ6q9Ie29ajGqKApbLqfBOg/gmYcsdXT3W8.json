[
  {
    "text": "hello everyone sorry for the late start there we had a few technical difficulties but it's all working now so",
    "start": "30",
    "end": "6600"
  },
  {
    "text": "my name is James Barclay I'm here with my colleagues Nick Mooney and Abedini",
    "start": "6600",
    "end": "11759"
  },
  {
    "text": "che to talk about some of the research we did into the difficulty of validating",
    "start": "11759",
    "end": "16859"
  },
  {
    "text": "x.509 certificate chains using readily available tooling advice and libraries",
    "start": "16859",
    "end": "22529"
  },
  {
    "text": "on the Internet some scenarios where developers may be expected to validate",
    "start": "22529",
    "end": "28470"
  },
  {
    "text": "certificate chains on their own and the implications of getting that wrong and how it can be exploited and then we're",
    "start": "28470",
    "end": "34440"
  },
  {
    "text": "also going to talk about how widely used one of these api's where developers are expected to validate certificate chains",
    "start": "34440",
    "end": "41280"
  },
  {
    "text": "is so first things first I'm just going",
    "start": "41280",
    "end": "49110"
  },
  {
    "text": "to quickly cover the the agenda here I'll start by talking about x.509",
    "start": "49110",
    "end": "54559"
  },
  {
    "text": "certificates and certification path validation then I'll cover just a quick",
    "start": "54559",
    "end": "59879"
  },
  {
    "text": "overview of Android safety net which is one of those api's I was talking about earlier that expects developers to",
    "start": "59879",
    "end": "67650"
  },
  {
    "text": "validate certificate chains as part of its intended usage then I'll talk about",
    "start": "67650",
    "end": "73950"
  },
  {
    "text": "JSON web signatures we'll have Nick come up and talk about the PI open SSL",
    "start": "73950",
    "end": "80360"
  },
  {
    "text": "cryptographic library and at the x.509 store class then we'll talk about bad",
    "start": "80360",
    "end": "85740"
  },
  {
    "text": "advice on the Internet and misuse resistance quantifying the use of safety net and then we'll have a demo that shows how to forge safety net data",
    "start": "85740",
    "end": "92100"
  },
  {
    "text": "stations so before I dive into far",
    "start": "92100",
    "end": "98130"
  },
  {
    "text": "though I want to start with a story to just hopefully demonstrate why we think validating certificate chains is a hard",
    "start": "98130",
    "end": "105450"
  },
  {
    "text": "problem and why people make mistakes so if you're familiar with the paper why Johnny can't encrypt maybe just",
    "start": "105450",
    "end": "112320"
  },
  {
    "text": "reimagine that is like why Johnny can't properly validated certificate chains so",
    "start": "112320",
    "end": "117750"
  },
  {
    "text": "here's Johnny Johnny is a software developer and one day while developing",
    "start": "117750",
    "end": "123329"
  },
  {
    "text": "an anti abuse feature for his mobile application Johnny is you know working",
    "start": "123329",
    "end": "130319"
  },
  {
    "text": "with an API that has a required certificate chain validation step and because his application server",
    "start": "130319",
    "end": "137640"
  },
  {
    "text": "back-end is written in Python as any good developer does he searches Google for verified certificate chain Python",
    "start": "137640",
    "end": "144020"
  },
  {
    "text": "Johnny's a little confused at first because there's some conflicting information you know and but but",
    "start": "144020",
    "end": "149790"
  },
  {
    "text": "eventually he finds something that works you know johnny has a you know a case where with a known good certificate",
    "start": "149790",
    "end": "157500"
  },
  {
    "text": "chain it validates successfully and then in the case of a known bad one it does",
    "start": "157500",
    "end": "163260"
  },
  {
    "text": "not so maybe Johnny even writes tests for this has other people review it",
    "start": "163260",
    "end": "168650"
  },
  {
    "text": "Johnny is happy and he ships the feature unfortunately there's a security bug in",
    "start": "168650",
    "end": "174180"
  },
  {
    "text": "Johnny's code Johnny might never know though because everything just keeps working so I'm going to take a step back",
    "start": "174180",
    "end": "181709"
  },
  {
    "text": "now and just talk about x.509 certificates and certificate chains so",
    "start": "181709",
    "end": "187680"
  },
  {
    "text": "fundamentally a certificate is an identity that's associated with a key pair and other parties are able to make",
    "start": "187680",
    "end": "194580"
  },
  {
    "text": "claims about that identity the identity can be an entity such as like a computer",
    "start": "194580",
    "end": "200640"
  },
  {
    "text": "or you know a user or some other entity additionally metadata such as subject",
    "start": "200640",
    "end": "208050"
  },
  {
    "text": "name sans valid domain domain names in TLS context as well as organization info",
    "start": "208050",
    "end": "214830"
  },
  {
    "text": "are included or can be included as well as issuer info and not self signed so",
    "start": "214830",
    "end": "223010"
  },
  {
    "text": "there's you know of course the so-called chain of trust you know validating certificate chains or I'm sorry",
    "start": "223010",
    "end": "229350"
  },
  {
    "text": "validating and entity certificates individually would quickly become untenable so the change of trust allows",
    "start": "229350",
    "end": "234540"
  },
  {
    "text": "us to assess the trustworthiness of certificates that are anchored in a root",
    "start": "234540",
    "end": "240090"
  },
  {
    "text": "of trust of course root ca's shipped with the operating system in many cases sometimes",
    "start": "240090",
    "end": "245340"
  },
  {
    "text": "the browser these are explicitly trusted and used to sign other certificates usually",
    "start": "245340",
    "end": "250470"
  },
  {
    "text": "intermediate certificates intermediates are not globally trusted but part of a chain that leads to a root or a trust",
    "start": "250470",
    "end": "257700"
  },
  {
    "text": "anchor and then leave certificates or so called and entity certificates represent the end of the chain and cannot be used",
    "start": "257700",
    "end": "264570"
  },
  {
    "text": "to sign other certificates in the case of something like Android safety net that key pair is used",
    "start": "264570",
    "end": "270060"
  },
  {
    "text": "to sign a safety net attestation so from the high level the things you need to",
    "start": "270060",
    "end": "277170"
  },
  {
    "text": "worry about for when validating a certificate chain things like the the root CA must be self signed and not",
    "start": "277170",
    "end": "283860"
  },
  {
    "text": "explicitly trusted it must have also signed the next intermediate in the chain if one exists which must have",
    "start": "283860",
    "end": "290640"
  },
  {
    "text": "signed the next and so on and then finally the last intermediate must have signed the client leaf or and entity",
    "start": "290640",
    "end": "296910"
  },
  {
    "text": "certificate we also need to worry about making sure that the leaf certificate",
    "start": "296910",
    "end": "303570"
  },
  {
    "text": "legitimately describes the service for example the common name subject alternative name and then making sure",
    "start": "303570",
    "end": "309960"
  },
  {
    "text": "that the intermediates are allowed to issue chains of N length as well as worry about you know we have to worry",
    "start": "309960",
    "end": "316530"
  },
  {
    "text": "about expiration and validity so they law and this is actually a",
    "start": "316530",
    "end": "322340"
  },
  {
    "text": "snippet from the RFC which describes how to validate certificate chains as you",
    "start": "322340",
    "end": "327390"
  },
  {
    "text": "can see it can get pretty complicated rather quickly now cryptographic libraries generally",
    "start": "327390",
    "end": "333360"
  },
  {
    "text": "ease the pain quite a bit but some abstractions are leaky and developers",
    "start": "333360",
    "end": "338460"
  },
  {
    "text": "can you know pretty easily shoot themselves in the foot so when should",
    "start": "338460",
    "end": "345300"
  },
  {
    "text": "developers actually have to worry about validating certificate chains directly",
    "start": "345300",
    "end": "350850"
  },
  {
    "text": "themselves and our argument is probably never of course you know we're not going to be able to get rid of this entirely",
    "start": "350850",
    "end": "357000"
  },
  {
    "text": "you know they're going to be cases where your average software developer is going to need to themselves a very validated",
    "start": "357000",
    "end": "364560"
  },
  {
    "text": "certificate chain but it's not all that reasonable to to expect that of of all",
    "start": "364560",
    "end": "369750"
  },
  {
    "text": "of them so but on the other hand what when might developers actually currently",
    "start": "369750",
    "end": "375690"
  },
  {
    "text": "have to worry about validating certificate chains so three things didn't come to mind this is by no means exhaustive of course but we're Android",
    "start": "375690",
    "end": "383910"
  },
  {
    "text": "safety net Android protected confirmation and then web often when using attestation to verify the",
    "start": "383910",
    "end": "390930"
  },
  {
    "text": "provenance of an Authenticator so knowing that certificate chain",
    "start": "390930",
    "end": "397169"
  },
  {
    "text": "validation is kind of hard and it's easy to get wrong let's just look at one API where there's a required certificate",
    "start": "397169",
    "end": "405570"
  },
  {
    "text": "chain validation step and how that might go wrong so this is from Google's",
    "start": "405570",
    "end": "411300"
  },
  {
    "text": "documentation on safety net it's it describes safety net as a set of services and api's that help protect",
    "start": "411300",
    "end": "417720"
  },
  {
    "text": "your app against security threats including device tampering bad URLs potentially harmful apps and fake users",
    "start": "417720",
    "end": "425870"
  },
  {
    "text": "there are four distinct safety net api's there's the so-called safety net attestation API the Safe Browsing API",
    "start": "426200",
    "end": "433200"
  },
  {
    "text": "the reCAPTCHA API and then the verify apps API so unless otherwise noted",
    "start": "433200",
    "end": "440160"
  },
  {
    "text": "though we'll just be talking about the safety net attestation API in this talk",
    "start": "440160",
    "end": "445970"
  },
  {
    "text": "so again from Google's documentation they describe safety net as an API that an anti abuse API that allows developers",
    "start": "446210",
    "end": "453210"
  },
  {
    "text": "to assess the Android device that their app is running on and this can be used as part of a larger anti-abuse system to",
    "start": "453210",
    "end": "460860"
  },
  {
    "text": "determine whether servers are interacting with genuine a genuine app on genuine Android devices in the way",
    "start": "460860",
    "end": "467310"
  },
  {
    "text": "that it achieves this is by providing a cryptographically signed attestation that can be cryptographically verified",
    "start": "467310",
    "end": "475010"
  },
  {
    "text": "so from a very high level the way safety net or the safety attestation API works rather is that the server will request a",
    "start": "475010",
    "end": "483210"
  },
  {
    "text": "an attestation from a mobile device then the mobile device will do some health checks and produce a signed blob next",
    "start": "483210",
    "end": "491700"
  },
  {
    "text": "the mobile device will provide a JSON web signature along with the intermediate certificates and to the",
    "start": "491700",
    "end": "498180"
  },
  {
    "text": "application server and then the application server will check the payload and validate the signature against the chain next I'm going to talk",
    "start": "498180",
    "end": "506760"
  },
  {
    "text": "about JSON web signatures which I mentioned in the previous slide so JSON web signatures are part of the hose a",
    "start": "506760",
    "end": "513180"
  },
  {
    "text": "framework or a family of standards along with things like JWT and jwe or jot if",
    "start": "513180",
    "end": "519810"
  },
  {
    "text": "you prefer JSON web signatures represent content secured in digital signatures or",
    "start": "519810",
    "end": "525600"
  },
  {
    "text": "Macs and the use of JSON based data structure and this is described in RFC 75 15",
    "start": "525600",
    "end": "532980"
  },
  {
    "text": "so a jws is a named tuple that consists of three values there is the hose a",
    "start": "532980",
    "end": "538770"
  },
  {
    "text": "header the payload and the signature and there are two serialization formats that are supported",
    "start": "538770",
    "end": "544440"
  },
  {
    "text": "there's the JSON serialization and compact serialization so this is from",
    "start": "544440",
    "end": "551190"
  },
  {
    "text": "RFC 75 15 the compact circulation is described as the base64 URL encoded",
    "start": "551190",
    "end": "556610"
  },
  {
    "text": "concatenation of the JW's header or hosea header the payload and signature",
    "start": "556610",
    "end": "561870"
  },
  {
    "text": "with concatenated with dots so that's",
    "start": "561870",
    "end": "567840"
  },
  {
    "text": "what went you know jws compact format may look like in this case we have the",
    "start": "567840",
    "end": "574140"
  },
  {
    "text": "the Hosea header which says the type is JWT and the algorithm is HS 256 you might also see RS 256 this is also",
    "start": "574140",
    "end": "581970"
  },
  {
    "text": "importantly where you would in insert the x5c header parameter to include a",
    "start": "581970",
    "end": "587940"
  },
  {
    "text": "certificate chain the payload is the payload that you want signed which uses",
    "start": "587940",
    "end": "595200"
  },
  {
    "text": "a JSON data format and then the signature comes last and that signature",
    "start": "595200",
    "end": "600720"
  },
  {
    "text": "depends the the format of which depends on the signature algorithm used and now",
    "start": "600720",
    "end": "607920"
  },
  {
    "text": "I'm gonna talk specifically how safety-net uses JSON web signatures so",
    "start": "607920",
    "end": "615300"
  },
  {
    "text": "here we have an example safety net JW s payload it includes something you know",
    "start": "615300",
    "end": "620850"
  },
  {
    "text": "things like a nonce a timestamp the apk package name but then I've highlighted",
    "start": "620850",
    "end": "626880"
  },
  {
    "text": "this cts profile match and basic integrity keys here what this basically",
    "start": "626880",
    "end": "632820"
  },
  {
    "text": "signals is in the attestation that is provided to the application server and is cryptographically verified this says",
    "start": "632820",
    "end": "639270"
  },
  {
    "text": "you know basic integrity signals that the device is not rooted and CTS profile",
    "start": "639270",
    "end": "644550"
  },
  {
    "text": "matches like a more rigorous test that ensures that the device has run through Google's like compatibility test suite",
    "start": "644550",
    "end": "651180"
  },
  {
    "text": "of software and here's a snippet of",
    "start": "651180",
    "end": "656580"
  },
  {
    "text": "things to look out for checklist items when implementing safety nough and this is like documentation targeted at mobile",
    "start": "656580",
    "end": "663630"
  },
  {
    "text": "developers right so as you can see there's a lot of stuff here and that's you know like maybe those mobile developers don't have",
    "start": "663630",
    "end": "669449"
  },
  {
    "text": "much knowledge of cryptography it's there's talk of things like nonces and you know certificate hashes and so on",
    "start": "669449",
    "end": "678209"
  },
  {
    "text": "and so forth like attestation responses so like just a lot of things that developers may have heard of but there's just a lot to unpack there and a lot of",
    "start": "678209",
    "end": "685110"
  },
  {
    "text": "chances to get things wrong and then this I mentioned earlier is the this is",
    "start": "685110",
    "end": "691980"
  },
  {
    "text": "actually from the RFC 75 15 the JSON web",
    "start": "691980",
    "end": "697350"
  },
  {
    "text": "signature spec which describes how the x5c header parameter is used and this is",
    "start": "697350",
    "end": "703259"
  },
  {
    "text": "what you would provide in a JSON web signature to say like you know here's it here's a list of n intermediates and",
    "start": "703259",
    "end": "710279"
  },
  {
    "text": "then my and entity certificate and then you can use that along with a chain of",
    "start": "710279",
    "end": "716490"
  },
  {
    "text": "trust and that is that sorry a root of trust rather on the application server to verify the signature and importantly",
    "start": "716490",
    "end": "725730"
  },
  {
    "text": "safety net does this it includes the x.509 certificate chain in the jws header now Nick is going to come up and",
    "start": "725730",
    "end": "733439"
  },
  {
    "text": "talk about how certain cryptographic libraries handle certificate chain validation as well as going to misuse",
    "start": "733439",
    "end": "740100"
  },
  {
    "text": "resistance and like for primitives in api's thank you all right thanks so much",
    "start": "740100",
    "end": "750980"
  },
  {
    "text": "so I'm gonna chat a little bit about PI open SSL which is a fairly common library used to implement certain",
    "start": "750980",
    "end": "757110"
  },
  {
    "text": "cryptographic tasks and specifically the x.509 store which is the class that handles certificate validation there's",
    "start": "757110",
    "end": "763499"
  },
  {
    "text": "an observation here that was really the genesis of our research for this topic to give some background PI open SSL is",
    "start": "763499",
    "end": "769860"
  },
  {
    "text": "part of the Python cryptographic Authority so you might know them from other great projects like cryptography PI open SSL is essentially just a",
    "start": "769860",
    "end": "776879"
  },
  {
    "text": "wrapper around the made of open SSL library interesting Lee enough the Python cryptographic Authority",
    "start": "776879",
    "end": "782519"
  },
  {
    "text": "recommends not using pi open SSL for anything other than just making TLS connections they favor their",
    "start": "782519",
    "end": "788249"
  },
  {
    "text": "cryptography library which is a little bit higher level but it's important to note that the cryptography library doesn't actually support all of the",
    "start": "788249",
    "end": "794639"
  },
  {
    "text": "functionality that's exposed to PI open SSL so PI open SSL ends up being the",
    "start": "794639",
    "end": "799860"
  },
  {
    "text": "choice that people need to make there are two classes here",
    "start": "799860",
    "end": "805710"
  },
  {
    "text": "the x.509 store and the x.509 star context to give a brief overview of them the x.509 store is used to describe a",
    "start": "805710",
    "end": "811980"
  },
  {
    "text": "context in which to verify a certificate so it sort of represents the roots of",
    "start": "811980",
    "end": "817170"
  },
  {
    "text": "trust and then the exponent store context is used to actually carry out the actual verification of a certificate",
    "start": "817170",
    "end": "822330"
  },
  {
    "text": "in my opinion these names should be kind of swapped I think they do exactly the opposite of what they say on the tin but",
    "start": "822330",
    "end": "827970"
  },
  {
    "text": "that's gonna be hearing are they here's a cursory glance for someone how someone",
    "start": "827970",
    "end": "833850"
  },
  {
    "text": "might implement certificate chain validation and Python using the Python SSL api's what's happening here is we're",
    "start": "833850",
    "end": "839700"
  },
  {
    "text": "parsing a root cert an intermediate cert and a leaf cert we're instantiating a store we're adding the root and the",
    "start": "839700",
    "end": "845400"
  },
  {
    "text": "intermediate to the store and then we're instantiating an x.509 store context to validate that leaf certificate this is",
    "start": "845400",
    "end": "852900"
  },
  {
    "text": "actually really wrong what's happening here is that the root certificate and intermediate certificate are both",
    "start": "852900",
    "end": "858570"
  },
  {
    "text": "globally trusted and so the question you might ask is well why would you do it that way if it's so clearly wrong and",
    "start": "858570",
    "end": "863760"
  },
  {
    "text": "the answer really is that one there's no easy way to do it the right way and to",
    "start": "863760",
    "end": "869250"
  },
  {
    "text": "pretty much every piece of advice on the internet that exists to tell people how to accomplish this task uses this",
    "start": "869250",
    "end": "875670"
  },
  {
    "text": "pattern including the unit tests in pi open ssl again this pattern treats any",
    "start": "875670",
    "end": "881730"
  },
  {
    "text": "any intermediate certificates as trusted roots the assumptions you might have",
    "start": "881730",
    "end": "888840"
  },
  {
    "text": "about certificate chain validation or something that it works like this you have a root an intermediate and a leaf",
    "start": "888840",
    "end": "895310"
  },
  {
    "text": "and ideally if the intermediate and the leaf are controlled by an adversary you",
    "start": "895310",
    "end": "901140"
  },
  {
    "text": "should still be okay right an adversary should not be able to construct a certificate chain that chains up to one",
    "start": "901140",
    "end": "906900"
  },
  {
    "text": "of your globally trusted roots this is how developers think it's working we've",
    "start": "906900",
    "end": "913080"
  },
  {
    "text": "got a good engine mediate a good leaf we can successfully validate the certificate if we have a rogue intermediate nothing's gonna happen",
    "start": "913080",
    "end": "920700"
  },
  {
    "text": "right it's gonna be a failure how it actually works in practice is that the",
    "start": "920700",
    "end": "926850"
  },
  {
    "text": "happy path works right a valid certificate chain will validate if this messy pattern is implemented and",
    "start": "926850",
    "end": "932970"
  },
  {
    "text": "actually the naive bad case will fail right so the the happy path works",
    "start": "932970",
    "end": "939390"
  },
  {
    "text": "the naive bad case fails where you just have an invalid signature but this",
    "start": "939390",
    "end": "944430"
  },
  {
    "text": "specifically targeted adversarial case will validate if an adversary is able to",
    "start": "944430",
    "end": "949770"
  },
  {
    "text": "control the intermediate certificates that are provided to you and this",
    "start": "949770",
    "end": "954810"
  },
  {
    "text": "pattern is implemented intermediate that are issued by adversaries will",
    "start": "954810",
    "end": "960149"
  },
  {
    "text": "successfully validate Leafs they'll be treated as globally trusted like I said",
    "start": "960149",
    "end": "966839"
  },
  {
    "text": "there's still no good way to do this I'll talk a little bit more about specifically what that looks like I also",
    "start": "966839",
    "end": "974160"
  },
  {
    "text": "want to point out that we actually also made the same mistake in the development of a prototype recently we were lucky",
    "start": "974160",
    "end": "979529"
  },
  {
    "text": "enough to catch it in development and get to talk a black out about it but not everyone is so lucky",
    "start": "979529",
    "end": "985940"
  },
  {
    "text": "so really the genesis of this is when our colleague Adam Goodman ran into the same limitation in the PI OpenSSL API",
    "start": "987380",
    "end": "994490"
  },
  {
    "text": "right he wanted to validate a certificate chain and provide PI OpenSSL",
    "start": "994490",
    "end": "1000020"
  },
  {
    "text": "with a list of untrusted intermediates they would be conditionally trusted based on their ability to be chained up",
    "start": "1000020",
    "end": "1005839"
  },
  {
    "text": "to trusted roots he found that we couldn't do this and actually opened a PR in June of 2016",
    "start": "1005839",
    "end": "1011630"
  },
  {
    "text": "attempting to fix this by extending the API this still hasn't been merged in",
    "start": "1011630",
    "end": "1017440"
  },
  {
    "text": "it's not really for lack of caring by the project maintainers it's a sensitive change in a cryptographic library there's not that",
    "start": "1017440",
    "end": "1023630"
  },
  {
    "text": "many people that are qualified to make these changes which is a great reason but the fact still exists that SPR has",
    "start": "1023630",
    "end": "1030319"
  },
  {
    "text": "been sitting since 2016 and people are still actively using this library and implementing this pattern so in our code",
    "start": "1030319",
    "end": "1036980"
  },
  {
    "text": "we end up just using a local fork the implements SPR I want to talk also about",
    "start": "1036980",
    "end": "1043730"
  },
  {
    "text": "the right way to do things with this sort of non-obvious API it's rare enough",
    "start": "1043730",
    "end": "1049760"
  },
  {
    "text": "that the only example that we're familiar with that's sort of big enough of using PI OpenSSL to correctly",
    "start": "1049760",
    "end": "1056540"
  },
  {
    "text": "validate a certificate chain is in the tests and let's encrypts Boulder project again the way they accomplish this isn't",
    "start": "1056540",
    "end": "1062750"
  },
  {
    "text": "totally obvious and it requires an understanding of this issue in the first place",
    "start": "1062750",
    "end": "1069039"
  },
  {
    "text": "what they're doing here is basically a variation on what we've seen earlier where they are piece by piece",
    "start": "1069170",
    "end": "1074930"
  },
  {
    "text": "adding certificates to the trust or as they construct a context for basically",
    "start": "1074930",
    "end": "1081000"
  },
  {
    "text": "each leave certificate sort of validating them along the way so if you you have a chain right you've",
    "start": "1081000",
    "end": "1087720"
  },
  {
    "text": "already built a path from root to leaf you know exactly where certificates you'd like to validate you can validate",
    "start": "1087720",
    "end": "1092970"
  },
  {
    "text": "them sort of piecewise in this case the intermediate certificate wouldn't be",
    "start": "1092970",
    "end": "1098880"
  },
  {
    "text": "considered a trusted root until you had validated it against a store that only contained the explicitly trusted roots",
    "start": "1098880",
    "end": "1107179"
  },
  {
    "text": "one of our big takeaways here is that we should avoid making developers do this themselves right if we have",
    "start": "1107900",
    "end": "1114030"
  },
  {
    "text": "cryptographic tasks that need to happen on the client-side the best way that we can prevent issues like this is by",
    "start": "1114030",
    "end": "1119910"
  },
  {
    "text": "providing libraries all right not asking developers who aren't cryptographic",
    "start": "1119910",
    "end": "1126150"
  },
  {
    "text": "experts and probably shouldn't be expected to be cryptographic experts we should avoid asking them to do these",
    "start": "1126150",
    "end": "1131550"
  },
  {
    "text": "tasks if we are asking them to do these tasks this is just a list of a very non",
    "start": "1131550",
    "end": "1138450"
  },
  {
    "text": "exhaustive list of some of the things that they have to take into consideration when implementing certificate chain validation there's",
    "start": "1138450",
    "end": "1144210"
  },
  {
    "text": "path building right there's name validation there's this famous like null byte vulnerability which I won't go into",
    "start": "1144210",
    "end": "1150540"
  },
  {
    "text": "there's all sorts of stuff that can kind of go wrong here just in the invalidation we have basic constraints",
    "start": "1150540",
    "end": "1156090"
  },
  {
    "text": "right so what happens if you have a certificate that was issued as a leaf but then has issued another certificate",
    "start": "1156090",
    "end": "1163200"
  },
  {
    "text": "are you checking that that certificate legitimately should be a CA and then all sorts of other issues if you do want to",
    "start": "1163200",
    "end": "1172020"
  },
  {
    "text": "do this there's some purpose-built software that's great for it the best example is your web browser right it's making TLS connections all day your web",
    "start": "1172020",
    "end": "1178110"
  },
  {
    "text": "browser is fantastic at validating certificate chains because that's one of its primary jobs your OS also has a",
    "start": "1178110",
    "end": "1183570"
  },
  {
    "text": "battle-tested way to do this right I'm sure it'll provide some sort of API for establishing TLS connections if you are",
    "start": "1183570",
    "end": "1190530"
  },
  {
    "text": "using Python there's a serval a data library that's kind of like a much larger project for validating certificate chains but really if you're",
    "start": "1190530",
    "end": "1199250"
  },
  {
    "text": "implementing something where certificate chains need validation it's probably in the context of something",
    "start": "1199250",
    "end": "1205380"
  },
  {
    "text": "more specific like jws so you might want to use a purpose-built library rather than trying to sort of hand roll this",
    "start": "1205380",
    "end": "1212570"
  },
  {
    "text": "now I just want to go over just some more bad advice on the Internet",
    "start": "1212780",
    "end": "1218540"
  },
  {
    "text": "this is the first result for doling verified certificate chain and its really lovely because you see the whole",
    "start": "1219660",
    "end": "1225540"
  },
  {
    "text": "page of code and it works perfectly and then only if you go below the fold you see this comment that points out this",
    "start": "1225540",
    "end": "1231660"
  },
  {
    "text": "doesn't actually do at all what we're hoping to do here right these certificates that are placed in the root",
    "start": "1231660",
    "end": "1237330"
  },
  {
    "text": "store are trusted completely this is one",
    "start": "1237330",
    "end": "1242700"
  },
  {
    "text": "of these original stackoverflow absolute answers for pi open ssl verify certificate chain this answer was",
    "start": "1242700",
    "end": "1250530"
  },
  {
    "text": "given in June 18th or June 8th of 2015 and it was the top answer for quite a long time the first comment that points",
    "start": "1250530",
    "end": "1257730"
  },
  {
    "text": "out that this is legitimately wrong is in March of 2018 this is another golang",
    "start": "1257730",
    "end": "1265860"
  },
  {
    "text": "library that just checks the flags of a certificate and if the certificate claims to be a CA it's added to the",
    "start": "1265860",
    "end": "1273330"
  },
  {
    "text": "trusted read store this is an Intel security libraries for data centers so I",
    "start": "1273330",
    "end": "1281850"
  },
  {
    "text": "want to talk a little bit about misuse resistance this is a bit of a detour and really what I'm hoping that you walk",
    "start": "1281850",
    "end": "1287940"
  },
  {
    "text": "away with is that if you are designing these protocols where you have to have developers do some tasks try to choose",
    "start": "1287940",
    "end": "1294090"
  },
  {
    "text": "primitives that are hard to misuse these",
    "start": "1294090",
    "end": "1299310"
  },
  {
    "text": "can range from legitimate cryptographic primitives to simply techniques for encoding data at DSA for example chose",
    "start": "1299310",
    "end": "1306480"
  },
  {
    "text": "deterministic signatures and this avoided the ps3 problem of accidentally reusing nonces AES GCM SIV is to quote",
    "start": "1306480",
    "end": "1314880"
  },
  {
    "text": "Adam Langley occasional nonce duplication tolerant and then there are also two certain representations of data",
    "start": "1314880",
    "end": "1320100"
  },
  {
    "text": "such as compressed curve points when doing a lip to curve cryptography that you can use to avoid things like invalid curve attacks in most cases misuse",
    "start": "1320100",
    "end": "1328620"
  },
  {
    "text": "resistance is really reducing the impact of bad randomness or reducing the impact of a developer making a mistake",
    "start": "1328620",
    "end": "1334590"
  },
  {
    "text": "using the tools you've given them this is really when it sort of transitions to",
    "start": "1334590",
    "end": "1341789"
  },
  {
    "text": "API design mattering a lot these are just a couple examples of tooling that's available that focuses on misuse",
    "start": "1341789",
    "end": "1348570"
  },
  {
    "text": "resistance live sodium is a favorite of mine for accomplishing different cryptographic tasks they've designed our",
    "start": "1348570",
    "end": "1353700"
  },
  {
    "text": "API so that it's actually really hard to do the wrong thing but it's important to know that even in cases like this the",
    "start": "1353700",
    "end": "1358769"
  },
  {
    "text": "primitives can still fail very spectacularly with things like nonce reuse there are also implementations of",
    "start": "1358769",
    "end": "1365059"
  },
  {
    "text": "actual misuse resistant primitives Tony icy area has this miscreant library which is an implementation of several of",
    "start": "1365059",
    "end": "1372059"
  },
  {
    "text": "Phillip Roth ways misuse resistant primitives now I'm gonna hand it over to",
    "start": "1372059",
    "end": "1379590"
  },
  {
    "text": "the lava day to talk about quantifying the use of safety net among Android applications thanks Nick",
    "start": "1379590",
    "end": "1386929"
  },
  {
    "text": "so I'm gonna kind of lay out not only how we amassed a list of Android apps that we wanted to download how we went",
    "start": "1386929",
    "end": "1393840"
  },
  {
    "text": "and acquire those apps and then also the analysis methods that we use to analyze to use a safety net so again this",
    "start": "1393840",
    "end": "1399750"
  },
  {
    "text": "process starts by trying to get a list of Android apps to download so unfortunately there isn't a public",
    "start": "1399750",
    "end": "1405240"
  },
  {
    "text": "source of truth as regards into the maybe top 10,000 Android apps by downloads there are a lot of sites that",
    "start": "1405240",
    "end": "1411690"
  },
  {
    "text": "maybe that have maybe ten to a hundred list that you can get and having a freemium model and of course there's",
    "start": "1411690",
    "end": "1417090"
  },
  {
    "text": "paid services kind of like at Danny that do but it's called Play Store analytics and they tracked the downloads maybe",
    "start": "1417090",
    "end": "1422879"
  },
  {
    "text": "over a certain time period the number of reviews and the ratings artists associated with it because we wanted to",
    "start": "1422879",
    "end": "1428639"
  },
  {
    "text": "make this type of analysis and research available to everyone and reproducible",
    "start": "1428639",
    "end": "1434279"
  },
  {
    "text": "we ended up going with a service that supervised us for free and they've been doing since 2011 and that's Android",
    "start": "1434279",
    "end": "1440100"
  },
  {
    "text": "ranked enter rank has actually been used in a lot of academic papers such as F Dorot if you're actually familiar with",
    "start": "1440100",
    "end": "1445830"
  },
  {
    "text": "that to conduct these kind of large-scale analysis when it comes to kind of identifying apps that are particularly popular",
    "start": "1445830",
    "end": "1451639"
  },
  {
    "text": "so Android rank actually has about 49 different categories of apps they kind",
    "start": "1451639",
    "end": "1457769"
  },
  {
    "text": "of provide the rankings for it's important to note that 32 these categories are what they call it general",
    "start": "1457769",
    "end": "1463500"
  },
  {
    "text": "categories so you'll be thinking of this kind of like communication comics dating things of that sort they",
    "start": "1463500",
    "end": "1469890"
  },
  {
    "text": "have 17 different gaming categories so that would be like action and adventure maybe fighting or puzzles as part of",
    "start": "1469890",
    "end": "1477420"
  },
  {
    "text": "this list it's important to note that the only ranked the top 500 apps in each",
    "start": "1477420",
    "end": "1482640"
  },
  {
    "text": "one of these categories and another stipulation or constraint is that these apps must have at least 5 million",
    "start": "1482640",
    "end": "1488070"
  },
  {
    "text": "downloads so with those 49 different categories we were able to amass a list of about 24,000 296 applications and you may be",
    "start": "1488070",
    "end": "1496740"
  },
  {
    "text": "thinking ok that math doesn't add up 49 times 500 the reason is there are certain categories that didn't have the",
    "start": "1496740",
    "end": "1502500"
  },
  {
    "text": "threshold of 500 apps with 5 million downloads and one example category for",
    "start": "1502500",
    "end": "1507690"
  },
  {
    "text": "that was lifestyle so now that we have a list of apps the next thing is to kind",
    "start": "1507690",
    "end": "1513419"
  },
  {
    "text": "of go acquire those apps and those apks so we can actually do this analysis so we we're going to start by trying to see",
    "start": "1513419",
    "end": "1521850"
  },
  {
    "text": "ok can we download all of these apps from the Google Play Store and unfortunately because some of these apps were only available in certain regions",
    "start": "1521850",
    "end": "1527790"
  },
  {
    "text": "we would have had to mask our IP to kind of download each one of those applications and that was a bit of complexity that we didn't kind of want",
    "start": "1527790",
    "end": "1533730"
  },
  {
    "text": "to deal with and so we actually end up resorting to what are called play store mirroring sites and these sites allow",
    "start": "1533730",
    "end": "1540470"
  },
  {
    "text": "Android users to download maybe previous versions or a beta version of particular applications and they can side load them",
    "start": "1540470",
    "end": "1547340"
  },
  {
    "text": "the two sites that we ended up using were apk pure and apk and monk there are like tons of sites that you can do this",
    "start": "1547340",
    "end": "1553140"
  },
  {
    "text": "in kind of instrument this for but these two are really easy to operate with so using these particular sources we were",
    "start": "1553140",
    "end": "1559500"
  },
  {
    "text": "able to download about 98% of the 24,000 abscess about 23,000 800 or so so we",
    "start": "1559500",
    "end": "1565200"
  },
  {
    "text": "were pretty successful with that actually some of this code is a part of what we're going to open-source today and Nick will talk about this later so",
    "start": "1565200",
    "end": "1573299"
  },
  {
    "text": "now that we've acquired the apps and we had our lists now let's talk about actually analyzing and trying to see which apps are actually using safety net",
    "start": "1573299",
    "end": "1579390"
  },
  {
    "text": "so I'm not sure what people's familiarity with Android the Android ecosystem is so I'm going to give a kind of a brief overview the kind of level",
    "start": "1579390",
    "end": "1585450"
  },
  {
    "text": "set with everyone so I've mentioned maybe apks and this talk already and so it's just a package format for what",
    "start": "1585450",
    "end": "1591299"
  },
  {
    "text": "Android apps are actually built into so but you can think of apks really as a",
    "start": "1591299",
    "end": "1596429"
  },
  {
    "text": "zip file and if you were actually to decompress or unzip the file this look like over the diagram behind me",
    "start": "1596429",
    "end": "1602909"
  },
  {
    "text": "you'll see things like the Android manifests resources which may be like assets as images the library the source",
    "start": "1602909",
    "end": "1609090"
  },
  {
    "text": "code and some properties so I'm gonna kind of use this diagram to kind of walk us through some of the",
    "start": "1609090",
    "end": "1614429"
  },
  {
    "text": "analysis methods that we use to try to determine the use of safety net at least in our initial approach so the first",
    "start": "1614429",
    "end": "1622380"
  },
  {
    "text": "thing that we checked was like the existence of a properties file so some Android apps will have this properties",
    "start": "1622380",
    "end": "1627600"
  },
  {
    "text": "file that provides some type of configuration to their app it's an ini format and it's something that's not",
    "start": "1627600",
    "end": "1632640"
  },
  {
    "text": "required but it's optional but what we saw was in a lot of the apps that that",
    "start": "1632640",
    "end": "1637650"
  },
  {
    "text": "used safety net actually had these properties file that laid out not only the services they were using but also",
    "start": "1637650",
    "end": "1643289"
  },
  {
    "text": "the version of the library safety net that they had but again it's important to note that this is not required but",
    "start": "1643289",
    "end": "1649230"
  },
  {
    "text": "something that we saw and it's a good first eristic it's a very kind of high level check that we can use because all",
    "start": "1649230",
    "end": "1655049"
  },
  {
    "text": "we have to do is unzip the apk and kind of look for assistance other properties file and analyze its contents the next",
    "start": "1655049",
    "end": "1663780"
  },
  {
    "text": "thing that we happen to look at was the Android manifest and again for people who aren't familiar the Android manifest is kind of like this powerhouse kind of",
    "start": "1663780",
    "end": "1670890"
  },
  {
    "text": "file of the the apk provides like a lot of information there some of the things",
    "start": "1670890",
    "end": "1675900"
  },
  {
    "text": "are in there like content providers some of the permissions that the app is going to request to actually be used properly",
    "start": "1675900",
    "end": "1681679"
  },
  {
    "text": "and also there's going to be maybe things associated with like the hardware",
    "start": "1681679",
    "end": "1686970"
  },
  {
    "text": "the software that is required to actually run this app as it relates to this talk and kind of our research some",
    "start": "1686970",
    "end": "1692820"
  },
  {
    "text": "things that we found that are pretty interesting that people had were their station to API keys that were available",
    "start": "1692820",
    "end": "1697830"
  },
  {
    "text": "in this particular Android manifest as there are two particular API keys that we were kind of pirate that we saw one",
    "start": "1697830",
    "end": "1704850"
  },
  {
    "text": "was like the attestation API key and the other one was a general API key so these are kind of used and make sure like",
    "start": "1704850",
    "end": "1710159"
  },
  {
    "text": "they're actually meeting the quarter of the usage associated with safety-net also there are other ways to kind of",
    "start": "1710159",
    "end": "1716220"
  },
  {
    "text": "implement kind of providing these particular keys but these are two popular ones that you'll find in like",
    "start": "1716220",
    "end": "1721260"
  },
  {
    "text": "most tutorials and trying to kind of establish this again that particular",
    "start": "1721260",
    "end": "1726780"
  },
  {
    "text": "check is pretty easy again it's kind of following the same format of unzip in the apk looking for the president's file",
    "start": "1726780",
    "end": "1733890"
  },
  {
    "text": "examining the xml to find these particular particular API keys in their existence the last",
    "start": "1733890",
    "end": "1740170"
  },
  {
    "text": "check time kind of talking about this initial approach is a little bit more intensive and it's the class that Dex file and this dex file is a objects in",
    "start": "1740170",
    "end": "1747430"
  },
  {
    "text": "dalvik executable format and it actually contains the compiled like not only like code that the developer wrote but also",
    "start": "1747430",
    "end": "1753670"
  },
  {
    "text": "the libraries that they're using and the cool thing about this is that you can actually access some of the strings and",
    "start": "1753670",
    "end": "1759400"
  },
  {
    "text": "method definitions without trying to decompile the dex file so it's a very easy way of kind of checking for some",
    "start": "1759400",
    "end": "1765400"
  },
  {
    "text": "methods that you know associated with safety net but you can actually go a little bit further and actually D",
    "start": "1765400",
    "end": "1770440"
  },
  {
    "text": "compile that into some Java representation of the code I wish it'd be really useful if you want to kind of look ok so this particular method is",
    "start": "1770440",
    "end": "1777430"
  },
  {
    "text": "calling the a test API that the developer wrote and you can kind of walk through that so that was kind of some of",
    "start": "1777430",
    "end": "1782650"
  },
  {
    "text": "the one of the approaches that we took it's okay I've kind of walked through three different approaches and some",
    "start": "1782650",
    "end": "1787990"
  },
  {
    "text": "heuristics that are pretty easy to check for use of station net so now I'm gonna kind of talk through some of the results that we found so do our corpus of apps",
    "start": "1787990",
    "end": "1795850"
  },
  {
    "text": "we found about 4% of apps we're using some version of safety net and I'm going to talk through some of the different",
    "start": "1795850",
    "end": "1801070"
  },
  {
    "text": "categories and kind of verticals that we're using it so our initial hypothesis",
    "start": "1801070",
    "end": "1806170"
  },
  {
    "text": "is that we're gonna find and finance apps and games that were using safety net the most are the most prevalent in",
    "start": "1806170",
    "end": "1811810"
  },
  {
    "text": "those particular categories and the reasons for that that we thought was because finance applications want to",
    "start": "1811810",
    "end": "1817750"
  },
  {
    "text": "make sure that this is a genuine Android device because maybe you're making estimate people's transaction data or maybe actually access to people's money",
    "start": "1817750",
    "end": "1824050"
  },
  {
    "text": "and then as a result it's irrelevant to games they want to make sure that people aren't cheating or abusing her apps and",
    "start": "1824050",
    "end": "1830710"
  },
  {
    "text": "so some of that did hold true we found that a little bit over 18 percent of finance apps we're using this the most",
    "start": "1830710",
    "end": "1838390"
  },
  {
    "text": "surprising results you might see is like why are comics up here as relates to Android ranked kind of doing some",
    "start": "1838390",
    "end": "1844030"
  },
  {
    "text": "analysis of the apps that we downloaded most of them could maybe be categorized as games but there were some general",
    "start": "1844030",
    "end": "1849760"
  },
  {
    "text": "like comics apps and then maybe one hypothesis surrounding why comics might be so high maybe this is because of the",
    "start": "1849760",
    "end": "1855760"
  },
  {
    "text": "original content we don't people are stealing that but some other categories that were on here are dating and",
    "start": "1855760",
    "end": "1861250"
  },
  {
    "text": "shopping if you were to add comics to game it would probably go to like number four but we wanted to kind of",
    "start": "1861250",
    "end": "1868000"
  },
  {
    "text": "with the official categories that were given by Android rank so there are",
    "start": "1868000",
    "end": "1873730"
  },
  {
    "text": "obviously some limitations with our initial approach if you're using time any type of string matching or regex is",
    "start": "1873730",
    "end": "1879190"
  },
  {
    "text": "gonna be pretty brittle and there going to be a lot of false negatives so maybe somebody is clarified defining this",
    "start": "1879190",
    "end": "1886420"
  },
  {
    "text": "method a different way maybe their API key is stored in a different format and so that's an obvious problem the X thing",
    "start": "1886420",
    "end": "1893830"
  },
  {
    "text": "is like searching for Strings doesn't really work when your code is obfuscated and that happens when people release",
    "start": "1893830",
    "end": "1898840"
  },
  {
    "text": "apps so Garrett all the checks would pretty much fail at that level and then one of the things associate with this",
    "start": "1898840",
    "end": "1904990"
  },
  {
    "text": "initial methods our results are kind of biased towards these Official approaches of people storing in their keys in a",
    "start": "1904990",
    "end": "1911380"
  },
  {
    "text": "certain way or maybe they have a properties file so we kind of took a step back and we're like maybe we can do",
    "start": "1911380",
    "end": "1917140"
  },
  {
    "text": "better we should kind of do a literature review and kind of see where some of the other methods after kind of using these first heuristics so now I'm gonna kind",
    "start": "1917140",
    "end": "1923680"
  },
  {
    "text": "of talk about what our next step was so we went from strings to really allow the call static analysis so during our",
    "start": "1923680",
    "end": "1930010"
  },
  {
    "text": "literature review we found that there was a lot of like prior research in terms of methods and people trying to",
    "start": "1930010",
    "end": "1936100"
  },
  {
    "text": "detect the use of third-party libraries there are a lot of good papers out there too that actually found a really good",
    "start": "1936100",
    "end": "1941800"
  },
  {
    "text": "we're a paper on quality lip Scout and another caught a lip pecker but you can kind of choose your tool of choice we",
    "start": "1941800",
    "end": "1948190"
  },
  {
    "text": "end up going to lip Scout comes pretty easy to kind of instrument in terms of kind of conducting it at this scale so",
    "start": "1948190",
    "end": "1954790"
  },
  {
    "text": "going and actually diving into the details of how Lib Scout does third-party and library analysis a",
    "start": "1954790",
    "end": "1960040"
  },
  {
    "text": "little bit beyond the scope of this talk but I highly recommend go reading the paper and there's actually a cool application of using Lib Scout across a",
    "start": "1960040",
    "end": "1967450"
  },
  {
    "text": "gigantic course a corpus of apps to detect the use of prior or older libraries have boner abilities in it so",
    "start": "1967450",
    "end": "1973510"
  },
  {
    "text": "sex is a really good research there that should help you check out but at a high level lips cow it works by first",
    "start": "1973510",
    "end": "1979320"
  },
  {
    "text": "extracting oh let me take a step back you must have like a previous or current version of a particular library and so",
    "start": "1979320",
    "end": "1987100"
  },
  {
    "text": "using that particular library it tries to extract a profile from that jar that you provided so in our case we provided",
    "start": "1987100",
    "end": "1993370"
  },
  {
    "text": "the several versions of the safety-net library the next thing that you have to do is actually provide the app that you",
    "start": "1993370",
    "end": "1998620"
  },
  {
    "text": "want to analyze it then it provides a extracts another profile for that and then it applies to our matching",
    "start": "1998620",
    "end": "2004900"
  },
  {
    "text": "algorithm which outputs a simulator score between zero and one so using this",
    "start": "2004900",
    "end": "2010390"
  },
  {
    "text": "we actually tried to have like a very high threshold of a point nine that's because we wanted to kind of eliminate",
    "start": "2010390",
    "end": "2016030"
  },
  {
    "text": "as many false positive as possible so uh the results from the Scout were a little",
    "start": "2016030",
    "end": "2021160"
  },
  {
    "text": "bit higher we found that about seven point one percent of apps were using the safety library and actually kind of",
    "start": "2021160",
    "end": "2026650"
  },
  {
    "text": "going with our initial hypothesis we found that about eleven point two percent of games were using in the safety net one of the interesting things",
    "start": "2026650",
    "end": "2033550"
  },
  {
    "text": "is because we were using we uploaded all the different version safety net thing since points since seven we were able to",
    "start": "2033550",
    "end": "2040600"
  },
  {
    "text": "see like okay what are the distribution of apps that were using a particular version of safety net and what we found",
    "start": "2040600",
    "end": "2047200"
  },
  {
    "text": "doing our analysis is that about 87% of apps were using the older version of the",
    "start": "2047200",
    "end": "2052210"
  },
  {
    "text": "safety net library which are particularly interesting I guess for context the latest version is the 17 was",
    "start": "2052210",
    "end": "2057790"
  },
  {
    "text": "released back in June and there are like many reasons why developer may not be using this latest version of the library maybe they haven't tested it and kind of",
    "start": "2057790",
    "end": "2064690"
  },
  {
    "text": "seeing how operating their app so it's not necessarily out of negligence in this case but we want to also talk about",
    "start": "2064690",
    "end": "2072158"
  },
  {
    "text": "general limitations because that's really important so there is some prior art in terms of trying to analyze the",
    "start": "2072159",
    "end": "2077950"
  },
  {
    "text": "use of safety net enjoyed apps and it was a concern research that was published in 2017 behind now secure",
    "start": "2077950",
    "end": "2084700"
  },
  {
    "text": "their corpus is pretty different than ours they didn't release like what apps that they use and there's about 3,000",
    "start": "2084700",
    "end": "2090100"
  },
  {
    "text": "applications of popular apps so you can't necessarily compare that our results to theirs just because we won't",
    "start": "2090100",
    "end": "2095679"
  },
  {
    "text": "be a apples to apples comparison the next thing they want to say is it to be very careful about generalizing our",
    "start": "2095679",
    "end": "2101830"
  },
  {
    "text": "results because again this was not a random sample of Android apps this was a",
    "start": "2101830",
    "end": "2107500"
  },
  {
    "text": "curated list from very popular Android app so maybe there is some correlation between the use of safety net for",
    "start": "2107500",
    "end": "2112600"
  },
  {
    "text": "popular apps they may not of pervade the Android ecosystem so I just kind of want",
    "start": "2112600",
    "end": "2118420"
  },
  {
    "text": "to put that caveat out there so now I'm going to turn over to Nick to talk about some of the team that we curated as part",
    "start": "2118420",
    "end": "2124510"
  },
  {
    "text": "of this Friday",
    "start": "2124510",
    "end": "2126780"
  },
  {
    "text": "so releasing a couple open-source tools along with this talk there are three parts one is a just an Android example",
    "start": "2129610",
    "end": "2136580"
  },
  {
    "text": "application that requests a safety-net attestation and post the result to a server another thing we're releasing is",
    "start": "2136580",
    "end": "2142520"
  },
  {
    "text": "the server side component of that which is basically just a little flask application that implements this very",
    "start": "2142520",
    "end": "2147770"
  },
  {
    "text": "common but incorrect pattern of certificate chain validation along with that we're introducing a couple tools to",
    "start": "2147770",
    "end": "2153410"
  },
  {
    "text": "make testing for this vulnerability easier especially if you have like a man-in-the-middle position I also want",
    "start": "2153410",
    "end": "2160100"
  },
  {
    "text": "to talk quickly about forging safety net of stations with the disclaimer that this isn't really a vulnerability and safety net it's an issue with what",
    "start": "2160100",
    "end": "2167060"
  },
  {
    "text": "safety net is asking developers to do given the tools that they have access to and the advice that they're gonna find when they're trying to do this if you'd",
    "start": "2167060",
    "end": "2175940"
  },
  {
    "text": "like to forge a safety net attestation we can do this by modifying that jws in flight to inject our own rogue",
    "start": "2175940",
    "end": "2181190"
  },
  {
    "text": "certificate authority into that hose a header so an example of this is you know",
    "start": "2181190",
    "end": "2186380"
  },
  {
    "text": "maybe we have a device that is routed that isn't going to pass the say from that check we can set basic integrity",
    "start": "2186380",
    "end": "2192200"
  },
  {
    "text": "and cts profile match those two options that determine whether device is read it to true and we can get away with it in",
    "start": "2192200",
    "end": "2201680"
  },
  {
    "text": "flight weary sign this payload with our own rogue certificate private key we swap with a digital signature and send it on its way the tools that we're",
    "start": "2201680",
    "end": "2210440"
  },
  {
    "text": "releasing are really sort of three separate tools the first is a small",
    "start": "2210440",
    "end": "2216350"
  },
  {
    "text": "Python utility to help you generate a rogue certificate authority and self-centred rather rogue self signed",
    "start": "2216350",
    "end": "2223670"
  },
  {
    "text": "certificate authorities and then leave certificates issued by that authority as well as signing arbitrary payloads with",
    "start": "2223670",
    "end": "2229820"
  },
  {
    "text": "those leave certificates there's also some tooling that allows you to extract and modify jws requests in flight",
    "start": "2229820",
    "end": "2237020"
  },
  {
    "text": "applying an arbitrary transformation function to the contents of that jws payload as well as automatically",
    "start": "2237020",
    "end": "2243650"
  },
  {
    "text": "reciting and modifying that x.509 chain we've also turned this into a medam",
    "start": "2243650",
    "end": "2249260"
  },
  {
    "text": "proxy add-on let me come over to the demo",
    "start": "2249260",
    "end": "2255940"
  },
  {
    "text": "so this is show what's happening here this is a request to our server our flask application using a standard non",
    "start": "2268510",
    "end": "2275320"
  },
  {
    "text": "modified version of safety net we have a valid leave a valid signature and we can",
    "start": "2275320",
    "end": "2281080"
  },
  {
    "text": "see this device is rooted and it's failed these checks we can also see that the intermediate issuer here is in fact",
    "start": "2281080",
    "end": "2288040"
  },
  {
    "text": "global sign which is a legitimate certificate authority if we instantiate",
    "start": "2288040",
    "end": "2298030"
  },
  {
    "text": "our medam proxy scripts and we make that same request we can see this request come through again we'll see again we",
    "start": "2298030",
    "end": "2304000"
  },
  {
    "text": "have a valid leaf and a valid signature interestingly enough the issuer of this intermediate as our chain of fools rogue",
    "start": "2304000",
    "end": "2309850"
  },
  {
    "text": "CA everything passes and now this device is listed as not rooted we go back to",
    "start": "2309850",
    "end": "2320920"
  },
  {
    "text": "the files please",
    "start": "2320920",
    "end": "2323309"
  },
  {
    "text": "so just a couple points I want to conclude with ideally developers",
    "start": "2331860",
    "end": "2337570"
  },
  {
    "text": "shouldn't have to worry about cryptographic implementation details like validating certificate chains frameworks in vendor tooling should",
    "start": "2337570",
    "end": "2343480"
  },
  {
    "text": "abstract this as much abstract this away as much as possible if you are asking developers to do cryptography and you",
    "start": "2343480",
    "end": "2350800"
  },
  {
    "text": "don't expect them to be cryptographic experts try to choose misuse misuse resistant primitives and api's it's also",
    "start": "2350800",
    "end": "2357460"
  },
  {
    "text": "relatively easy to take advantage of incorrect certificate chain validation logic and we have reason to believe that",
    "start": "2357460",
    "end": "2362560"
  },
  {
    "text": "this is a pattern that is implemented in the wild somewhat frequently forging safety net out of stations is this one",
    "start": "2362560",
    "end": "2367720"
  },
  {
    "text": "example like we said other examples of popular api's that require this",
    "start": "2367720",
    "end": "2372960"
  },
  {
    "text": "implementation are android protected confirmations web often token provenance",
    "start": "2372960",
    "end": "2378340"
  },
  {
    "text": "attestation and I'm sure that there are much more we've also learned that safety net usage is steadily increasing with",
    "start": "2378340",
    "end": "2384880"
  },
  {
    "text": "gaming and Finance being the biggest adopters and also that certificate chain validation is hard to get right right",
    "start": "2384880",
    "end": "2390520"
  },
  {
    "text": "it's totally easy to dunk on people that are getting this wrong but we have to think about the tools that they have access to and we're really in the",
    "start": "2390520",
    "end": "2397630"
  },
  {
    "text": "position where we can build better tools so stuff like this doesn't happen thanks",
    "start": "2397630",
    "end": "2402910"
  },
  {
    "text": "so much",
    "start": "2402910",
    "end": "2405030"
  },
  {
    "text": "I also actually wanted to just add the one note that if you're trying to look for this pattern maybe in your your own",
    "start": "2409500",
    "end": "2415320"
  },
  {
    "text": "code bases that you've deployed we've had really good luck just graphing for like the functions that are used to",
    "start": "2415320",
    "end": "2420660"
  },
  {
    "text": "validate a certificate Qin's there's all sorts of stuff you could do with like ast parsing but we've had a",
    "start": "2420660",
    "end": "2426330"
  },
  {
    "text": "good number of hits just with crack",
    "start": "2426330",
    "end": "2430040"
  },
  {
    "text": "questions",
    "start": "2432290",
    "end": "2435290"
  },
  {
    "text": "hello thank you for the talk I just wanted to ask if you can put the slide",
    "start": "2441480",
    "end": "2447160"
  },
  {
    "text": "with a link to the place where you release the code yeah absolutely",
    "start": "2447160",
    "end": "2452650"
  },
  {
    "text": "and we probably should have had that nd yeah that would seem that you have it quicker yeah oh right where's the clicker do you want",
    "start": "2452650",
    "end": "2461680"
  },
  {
    "text": "to find that sure",
    "start": "2461680",
    "end": "2464250"
  },
  {
    "text": "Oh yeah first of all thank you very much",
    "start": "2473950",
    "end": "2480049"
  },
  {
    "text": "would you say having security champions on the teams dealing with cryptography cryptography issues help mitigate a lot",
    "start": "2480049",
    "end": "2486920"
  },
  {
    "text": "of things you mentioned today or have application security team you know help on the Sprint of the team developing",
    "start": "2486920",
    "end": "2492349"
  },
  {
    "text": "team working on something involving cryptography I mean as you mentioned developers don't necessarily have the",
    "start": "2492349",
    "end": "2497509"
  },
  {
    "text": "experience and overhead where security champions and application security experts can that you help them would you",
    "start": "2497509",
    "end": "2503029"
  },
  {
    "text": "say that's a good way to solve these things yeah absolutely I mean I would say that anytime you have a development",
    "start": "2503029",
    "end": "2508489"
  },
  {
    "text": "team with the resources to have the involvement of a dedicated OPSEC team you're going to get better outcomes",
    "start": "2508489",
    "end": "2513880"
  },
  {
    "text": "security champions is definitely a strategy that that works to do that and this is definitely not an issue that is",
    "start": "2513880",
    "end": "2524719"
  },
  {
    "text": "impossible to find by any means it's just something that might not be obvious if you're you know like a single shop developer",
    "start": "2524719",
    "end": "2531880"
  },
  {
    "text": "so you talked a lot about the safety net and there what at least ones done lack",
    "start": "2537470",
    "end": "2543890"
  },
  {
    "text": "of developer support hair but safety net on Google actually publishes both the",
    "start": "2543890",
    "end": "2549200"
  },
  {
    "text": "Java and c-sharp example implementations do you see the same problems there or is this really a lack of crypto support and",
    "start": "2549200",
    "end": "2556160"
  },
  {
    "text": "important they actually have yet great application or great libraries as",
    "start": "2556160",
    "end": "2562250"
  },
  {
    "text": "examples there I think that's really an example of them doing that that kind of thing we talked about in the conclusion",
    "start": "2562250",
    "end": "2569060"
  },
  {
    "text": "where if people are asking developers to implement these cryptographic checks to provide these these tools yeah",
    "start": "2569060",
    "end": "2574640"
  },
  {
    "text": "ultimately I still think that you could",
    "start": "2574640",
    "end": "2580369"
  },
  {
    "text": "make the developer's job easier in those cases but I would also totally agree with you that Python specifically has",
    "start": "2580369",
    "end": "2586369"
  },
  {
    "text": "this issue and that the PI open ssl bindings aren't sufficient for the specific task yeah we also see golang",
    "start": "2586369",
    "end": "2591710"
  },
  {
    "text": "has you know an example as well where's improperly used pretty regularly",
    "start": "2591710",
    "end": "2597849"
  },
  {
    "text": "thank you very much for the talking it's very good for mitigating coding issues did you ever try to fool or hide an",
    "start": "2603770",
    "end": "2610680"
  },
  {
    "text": "applicant malicious application directly on the phone without an external proxy how would you do that yeah you could do",
    "start": "2610680",
    "end": "2616650"
  },
  {
    "text": "that as well the proxy is just one example if you were able to hook into",
    "start": "2616650",
    "end": "2622020"
  },
  {
    "text": "that call to basically send off that efficient or even just hook into the safety net libraries when the",
    "start": "2622020",
    "end": "2628380"
  },
  {
    "text": "application is requesting attestation pretty much anywhere you can get yourself in the middle of that flow is going to work yeah we so we have a paper",
    "start": "2628380",
    "end": "2635670"
  },
  {
    "text": "also that we are releasing with this which describes how one of our other colleagues had used what was the visa",
    "start": "2635670",
    "end": "2642810"
  },
  {
    "text": "Frieda yeah so the Frieda dot Ari I think is the but so like a for for doing",
    "start": "2642810",
    "end": "2650010"
  },
  {
    "text": "in proc hooking to modify JW at the safety net JW s so another question so",
    "start": "2650010",
    "end": "2659670"
  },
  {
    "text": "I'm not familiar with the safe net so is it always going over the unencrypted channel with HTTP as a request and",
    "start": "2659670",
    "end": "2667070"
  },
  {
    "text": "receiving the response and the second question is it possible to use the",
    "start": "2667070",
    "end": "2672570"
  },
  {
    "text": "building behind ease of the operating system I can draw it to do the task verification because we forget here",
    "start": "2672570",
    "end": "2679050"
  },
  {
    "text": "about very important tasks as verification of the extensions verification of the critical extensions",
    "start": "2679050",
    "end": "2685290"
  },
  {
    "text": "as as well the CRS and OCSP and another one how why not to build the change of",
    "start": "2685290",
    "end": "2692460"
  },
  {
    "text": "the certificates based on info information sure so I think your first",
    "start": "2692460",
    "end": "2697830"
  },
  {
    "text": "question was is it common to use HTTP for this no this is an easy example for",
    "start": "2697830",
    "end": "2703200"
  },
  {
    "text": "us really that flow between how your app communicates the jws payload back to the",
    "start": "2703200",
    "end": "2709260"
  },
  {
    "text": "backend is totally app dependent TLS would protect against man-in-the-middle style attacks yeah your second question",
    "start": "2709260",
    "end": "2716220"
  },
  {
    "text": "was why don't we use androids basically OS features to do some of these checks",
    "start": "2716220",
    "end": "2721260"
  },
  {
    "text": "the reason for that is that in this case safety net basically explicitly treats",
    "start": "2721260",
    "end": "2726480"
  },
  {
    "text": "the device like the mobile device as untrusted right you can't trust the mobile device to attest its own health",
    "start": "2726480",
    "end": "2733830"
  },
  {
    "text": "without doing some check server-side so that's why we can't rely on those properties and I've forgotten",
    "start": "2733830",
    "end": "2739749"
  },
  {
    "text": "your question but during the test of the certificate chain not that the device is",
    "start": "2739749",
    "end": "2746140"
  },
  {
    "text": "rigged or not we are testing the response from the safe net if this one is verified correctly if it's not",
    "start": "2746140",
    "end": "2753369"
  },
  {
    "text": "spooked so why not to allow the device which won't want to be tested properly",
    "start": "2753369",
    "end": "2759490"
  },
  {
    "text": "if it's not already using the store that you would that you have inside or is",
    "start": "2759490",
    "end": "2764859"
  },
  {
    "text": "that you use the segment to verify if it was not wreaked on the level of the certificate store as well I'm not sure I",
    "start": "2764859",
    "end": "2773319"
  },
  {
    "text": "totally understand the yeah yeah we could we can you know in the sort of",
    "start": "2773319",
    "end": "2780819"
  },
  {
    "text": "happy path the Android application is just going to reach out to Google's servers it's gonna make this claim it's",
    "start": "2780819",
    "end": "2787569"
  },
  {
    "text": "gonna get signed by Google and it's gonna send it back right so that that is what it's doing normally it's just that you can take that payload which may",
    "start": "2787569",
    "end": "2795119"
  },
  {
    "text": "successfully indicate that that device is rooted and you can modify that I",
    "start": "2795119",
    "end": "2804119"
  },
  {
    "text": "thanks for the talk just wanted to say that I'm surprised to see how many",
    "start": "2804839",
    "end": "2811630"
  },
  {
    "text": "applications actually use certificate change in validation because if the",
    "start": "2811630",
    "end": "2818799"
  },
  {
    "text": "application knows beforehand the identity that he wants to talk to the server that wants to talk to then",
    "start": "2818799",
    "end": "2823930"
  },
  {
    "text": "wouldn't the certificate bidding be the better solution so in this case the",
    "start": "2823930",
    "end": "2830109"
  },
  {
    "text": "certificate chain validation isn't used to protect like for example the TLS connection between the app and the",
    "start": "2830109",
    "end": "2835480"
  },
  {
    "text": "backend it's actually because the mobile device is responsible for reaching out to Google and asked him for an attestation",
    "start": "2835480",
    "end": "2841089"
  },
  {
    "text": "of the device's health right but the server isn't talking directly to Google so the server the backend needs a way to",
    "start": "2841089",
    "end": "2846970"
  },
  {
    "text": "validate that this attestation legitimately came from Google and so that's why this question is here innocently enough safety-net actually",
    "start": "2846970",
    "end": "2853930"
  },
  {
    "text": "also provides an online API for this but they basically very clearly say that you",
    "start": "2853930",
    "end": "2859930"
  },
  {
    "text": "can only use this during development do not ship this with your Production apps yes I highly real imited as well yeah",
    "start": "2859930",
    "end": "2867220"
  },
  {
    "text": "I think we have time for maybe one more quick question right now thank you so",
    "start": "2867220",
    "end": "2876910"
  },
  {
    "text": "much shaky I go [Applause]",
    "start": "2876910",
    "end": "2883369"
  }
]