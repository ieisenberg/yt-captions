[
  {
    "start": "0",
    "end": "102000"
  },
  {
    "text": "okay welcome everyone so my name is well Robertson and this is Achmed bouquet",
    "start": "0",
    "end": "5100"
  },
  {
    "text": "Khan and we're going to be telling you about automated detection of Firefox extension reuse vulnerabilities so",
    "start": "5100",
    "end": "13009"
  },
  {
    "text": "before we kind of dive into the material a little bit about ourselves so speaking",
    "start": "13009",
    "end": "19050"
  },
  {
    "text": "for myself I'm an assistant professor of computer science at Northeastern University out in Boston Mass back in",
    "start": "19050",
    "end": "24779"
  },
  {
    "text": "the US where I co-direct the northeastern system security lab with",
    "start": "24779",
    "end": "30300"
  },
  {
    "text": "egg and cure de so I've been you know working in academia for a while now so",
    "start": "30300",
    "end": "36570"
  },
  {
    "text": "publishing since 2003 in the areas of systems network and software security",
    "start": "36570",
    "end": "42140"
  },
  {
    "text": "and I actually have a bit of a connection to this community so I was a",
    "start": "42140",
    "end": "48870"
  },
  {
    "text": "founding member of shellfish which you know was a DEFCON CTF winner way way",
    "start": "48870",
    "end": "54210"
  },
  {
    "text": "back in the day so I'm very excited to be here to tell you about some of the stuff that we've been working on lately",
    "start": "54210",
    "end": "59280"
  },
  {
    "text": "and I'm PhD candidate at Northeastern University and member of an artist in",
    "start": "59280",
    "end": "66600"
  },
  {
    "text": "our system security lab and I also like",
    "start": "66600",
    "end": "72900"
  },
  {
    "text": "to play CTF but I'm not an official members like wheel and yeah yeah you can",
    "start": "72900",
    "end": "81299"
  },
  {
    "text": "come cool so you know just to say a little bit about the venue I mean this",
    "start": "81299",
    "end": "87210"
  },
  {
    "text": "is an amazing place that this is our first time to Singapore and you know everything has been great but you know especially the weather because usually",
    "start": "87210",
    "end": "94619"
  },
  {
    "text": "around this time of year at Boston looks something like this so believe us when we say we're very very happy to be here",
    "start": "94619",
    "end": "101960"
  },
  {
    "text": "so in terms of the agenda it's going to go something like this so I'm going to",
    "start": "101960",
    "end": "107369"
  },
  {
    "start": "102000",
    "end": "155000"
  },
  {
    "text": "give you a bit of background to kind of set the stage for why we think these attacks are kind of relevant and",
    "start": "107369",
    "end": "112890"
  },
  {
    "text": "interesting before going into the you know high level sketch of what these",
    "start": "112890",
    "end": "118170"
  },
  {
    "text": "attacks actually look like from there Achmed is going to take over and show",
    "start": "118170",
    "end": "123329"
  },
  {
    "text": "you the tool that we developed to find these attacks on against Firefox and then do a bit of a",
    "start": "123329",
    "end": "130190"
  },
  {
    "text": "demo to show you how this all kind of fits together finally he will tell you a",
    "start": "130190",
    "end": "136220"
  },
  {
    "text": "bit about you know this evaluation that we perform to kind of measure the",
    "start": "136220",
    "end": "141640"
  },
  {
    "text": "significance of the problem and then we'll conclude with some final you know",
    "start": "141640",
    "end": "146930"
  },
  {
    "text": "parting thoughts on where things stand and where things might go in the future okay so without further ado extensions",
    "start": "146930",
    "end": "155709"
  },
  {
    "start": "155000",
    "end": "281000"
  },
  {
    "text": "so I'm not going to tell you you know browsers about browsers right because you know everyone is using these things",
    "start": "155709",
    "end": "161750"
  },
  {
    "text": "every day right there the many many see browsers as really the next computing",
    "start": "161750",
    "end": "167660"
  },
  {
    "text": "platform for developing and deploying apps I mean you just need a browser and and you know anyone can access your",
    "start": "167660",
    "end": "173540"
  },
  {
    "text": "centrally deployed and updated application so browsers are great but early on you know people recognize that",
    "start": "173540",
    "end": "180830"
  },
  {
    "text": "hey it would actually be a great idea if we could you know allow users to add new",
    "start": "180830",
    "end": "186400"
  },
  {
    "text": "capabilities to browsers or customize them and you know so Firefox was an",
    "start": "186400",
    "end": "192170"
  },
  {
    "text": "early mover in this space and indeed if you look at the Mozilla add-ons repository you'll see that there are a",
    "start": "192170",
    "end": "199010"
  },
  {
    "text": "large number of different extensions that users can download and use to you know modify the behavior Firefox in some",
    "start": "199010",
    "end": "205790"
  },
  {
    "text": "way so about you know 15,000 up on the slide has had block plus which I'm sure",
    "start": "205790",
    "end": "211010"
  },
  {
    "text": "many of you have installed or some variant of this which you know greatly",
    "start": "211010",
    "end": "216410"
  },
  {
    "text": "improves the the web the users web experience and also incidentally serves",
    "start": "216410",
    "end": "221480"
  },
  {
    "text": "as a great way to you know cut off one of the major attack vectors against browsers today and if you look at",
    "start": "221480",
    "end": "228080"
  },
  {
    "text": "popular instances of these extensions you'll see that many of them have millions of users so there are",
    "start": "228080",
    "end": "233959"
  },
  {
    "text": "significant user populations that are using extensions and if these extensions",
    "start": "233959",
    "end": "239209"
  },
  {
    "text": "are you know buggy or malicious there are significant amounts of users that",
    "start": "239209",
    "end": "244250"
  },
  {
    "text": "could be exposed to attacks the final thing I'll say you know in this kind of",
    "start": "244250",
    "end": "249470"
  },
  {
    "text": "first slide is that at least for Firefox the vast majority of these extensions",
    "start": "249470",
    "end": "256280"
  },
  {
    "text": "are written in primarily javascript you know not always right so there are there are cases where you can",
    "start": "256280",
    "end": "261600"
  },
  {
    "text": "have components of these extensions developed in native code from C++ but by",
    "start": "261600",
    "end": "266820"
  },
  {
    "text": "and large most extensions are primarily written in a code in which both Mozilla",
    "start": "266820",
    "end": "273810"
  },
  {
    "text": "and users could in principle manually inspect right so so there's a lot of",
    "start": "273810",
    "end": "279210"
  },
  {
    "text": "visibility into the inner workings of these extensions so you know as as a",
    "start": "279210",
    "end": "285900"
  },
  {
    "start": "281000",
    "end": "420000"
  },
  {
    "text": "first mover as I said before in the space well you know it's always nice to",
    "start": "285900",
    "end": "291360"
  },
  {
    "text": "be the first mover but at the same time Mozilla had the somewhat unending an",
    "start": "291360",
    "end": "296580"
  },
  {
    "text": "enviable position of trying to anticipate you know all the kinds of attacks that might occur as well as more",
    "start": "296580",
    "end": "302160"
  },
  {
    "text": "generally you know not really knowing how extensions would be used by users right so they put forth this very",
    "start": "302160",
    "end": "309630"
  },
  {
    "text": "flexible programming model right so what does that mean well if you look at how the legacy or first generation Firefox",
    "start": "309630",
    "end": "317759"
  },
  {
    "text": "extension architecture looks like you have a couple of key characteristics that we make use of in our work so first",
    "start": "317759",
    "end": "325139"
  },
  {
    "text": "of all there is this shared JavaScript namespace now what does that mean well that means that extensions that exist in",
    "start": "325139",
    "end": "333810"
  },
  {
    "text": "the browser can read and write objects or variables or any other data that's",
    "start": "333810",
    "end": "339000"
  },
  {
    "text": "exposed by other extensions there's no isolation going on that's that's a big",
    "start": "339000",
    "end": "344580"
  },
  {
    "text": "deal right and moreover right if you have an extension it can directly invoke or indeed even change the code of other",
    "start": "344580",
    "end": "351120"
  },
  {
    "text": "extensions so that that's an important thing to keep in mind there's also this",
    "start": "351120",
    "end": "357870"
  },
  {
    "text": "shared GUI there's shared GUI state right so assured window so that means",
    "start": "357870",
    "end": "364919"
  },
  {
    "text": "that all extensions have full access to the window and is able to modify the UI",
    "start": "364919",
    "end": "370320"
  },
  {
    "text": "and so if you're thinking already well that sounds great for you I redressing and spoofing attacks well you know",
    "start": "370320",
    "end": "375539"
  },
  {
    "text": "you're right moreover extensions can listen to all events right so they can",
    "start": "375539",
    "end": "382259"
  },
  {
    "text": "register event handlers and intercept any events that are coming from the so this is also a very nice capability",
    "start": "382259",
    "end": "389040"
  },
  {
    "text": "and finally in legacy extension architecture there's absolutely no",
    "start": "389040",
    "end": "394350"
  },
  {
    "text": "privilege separation right so that means there's no sandboxing of these extensions and so they really have full",
    "start": "394350",
    "end": "400470"
  },
  {
    "text": "access to the resources provided by the underlying system right so that means full access to the file system or you",
    "start": "400470",
    "end": "406980"
  },
  {
    "text": "know full access to you know contact arbitrary endpoints on the internet so these are all you know very strong",
    "start": "406980",
    "end": "413580"
  },
  {
    "text": "capabilities provided to extensions really they have the full capabilities of the browser itself so you know let's",
    "start": "413580",
    "end": "422640"
  },
  {
    "start": "420000",
    "end": "658000"
  },
  {
    "text": "think a bit about what the threat model is in this setting right so clearly the",
    "start": "422640",
    "end": "429150"
  },
  {
    "text": "browser is a very attractive target you know so many of us are using the browser to you know manage our finances or you",
    "start": "429150",
    "end": "436380"
  },
  {
    "text": "know talk to people via social networking and all that sort of thing and so we have a lot of trust placed in",
    "start": "436380",
    "end": "443010"
  },
  {
    "text": "the browser vendors and so we assume that hey you know there's no back doors being inserted by browser vendors and",
    "start": "443010",
    "end": "448140"
  },
  {
    "text": "all of this but you know if you think about it if you kind of squint your eyes right the extension API really is kind",
    "start": "448140",
    "end": "454050"
  },
  {
    "text": "of a backdoor to allow potentially untrusted third parties and to run code in a highly privileged context right so",
    "start": "454050",
    "end": "460830"
  },
  {
    "text": "you know extensions can be written by anybody and all they have to do is to convince you hey you should install this",
    "start": "460830",
    "end": "466920"
  },
  {
    "text": "great extension so you know we trust the browser vendor but we really shouldn't",
    "start": "466920",
    "end": "472200"
  },
  {
    "text": "have that much trust in the authors of these extensions well how can these",
    "start": "472200",
    "end": "477990"
  },
  {
    "text": "extensions go wrong well I mentioned before there are kind of two separate threat models right there's the first",
    "start": "477990",
    "end": "483570"
  },
  {
    "text": "one which is vulnerable extensions or also known as the benign but buggy threat model and well you know nobody is",
    "start": "483570",
    "end": "490020"
  },
  {
    "text": "formally verifying that these extensions are free of vulnerabilities and you know are following some spec of you know good",
    "start": "490020",
    "end": "497190"
  },
  {
    "text": "program behavior so as with any software they can have bugs that have security",
    "start": "497190",
    "end": "502680"
  },
  {
    "text": "implications and could be exploited by other malicious you know parties so you know that's a problem and most of our",
    "start": "502680",
    "end": "509370"
  },
  {
    "text": "defenses are really are often oriented towards this but there's also this problem of malicious extensions and and",
    "start": "509370",
    "end": "516120"
  },
  {
    "text": "these are a real threat actually so you know up on this slide you can see that there's actually a blacklist maintained by Mozilla",
    "start": "516120",
    "end": "522260"
  },
  {
    "text": "against a number of malicious extensions as of you know februari 2016 161",
    "start": "522260",
    "end": "528900"
  },
  {
    "text": "malicious extensions and then indeed malicious extensions are a huge topic of",
    "start": "528900",
    "end": "535200"
  },
  {
    "text": "study and academic circles right now so if you think about extensions attacking say you know password management in the",
    "start": "535200",
    "end": "542460"
  },
  {
    "text": "browser which lots of people use the browser for that's that's something that occurs Google performed a nice study",
    "start": "542460",
    "end": "548370"
  },
  {
    "text": "last year where they show that ad injection is on the rise right and this is an attack where extension extensions",
    "start": "548370",
    "end": "555360"
  },
  {
    "text": "are diverting ad revenue from web content publishers to the authors of",
    "start": "555360",
    "end": "560670"
  },
  {
    "text": "extensions or you know maybe people that are paying them by either replacing or simply injecting new ads into you know",
    "start": "560670",
    "end": "569040"
  },
  {
    "text": "certain sites when the user browses to them so you know in general the basic",
    "start": "569040",
    "end": "575370"
  },
  {
    "text": "idea of the sort of attack is you have you know extension authors that somehow",
    "start": "575370",
    "end": "581279"
  },
  {
    "text": "trick users into installing these malicious extensions either by having the user side load them or perhaps you",
    "start": "581279",
    "end": "588330"
  },
  {
    "text": "know managing to get your malicious malicious extension into a centralized repository and this gives you a very",
    "start": "588330",
    "end": "594960"
  },
  {
    "text": "powerful vantage point as we were just talking about you know extensions can do a lot and so you are able to do these you know so-called man in the browser",
    "start": "594960",
    "end": "601589"
  },
  {
    "text": "attacks right you don't need to worry about TLS you can just kind of sit there and wait for the user to give you some",
    "start": "601589",
    "end": "607650"
  },
  {
    "text": "sensitive information or even indeed you know you could imagine browser-based",
    "start": "607650",
    "end": "613260"
  },
  {
    "text": "botnets right you can take advantage of the resources provided by these machines so lots of different attacks you can do",
    "start": "613260",
    "end": "618990"
  },
  {
    "text": "they're easy to develop right so we're talking about web technology so if you",
    "start": "618990",
    "end": "624000"
  },
  {
    "text": "know some JavaScript and you can read some browser documentation then you get you're well on your way to developing these sorts of attacks and they're",
    "start": "624000",
    "end": "631470"
  },
  {
    "text": "difficult to detect right so i partially come from a background of static and dynamic analysis right and so javascript",
    "start": "631470",
    "end": "639420"
  },
  {
    "text": "is notorious for being difficult to statically analyze on the one hand and on the other you know being a highly",
    "start": "639420",
    "end": "646950"
  },
  {
    "text": "dynamic and by you know all the normal coverage problems that you have the dynamic analysis are only exacerbated by the web",
    "start": "646950",
    "end": "654480"
  },
  {
    "text": "setting so there's a ton of problems and a ton of threats of course you know the",
    "start": "654480",
    "end": "660750"
  },
  {
    "start": "658000",
    "end": "811000"
  },
  {
    "text": "sky isn't yet at the point of falling and so we do have some existing methods",
    "start": "660750",
    "end": "665910"
  },
  {
    "text": "for protection and there's you know a rich literature on this but I'll just point out to you know the broad strokes",
    "start": "665910",
    "end": "672510"
  },
  {
    "text": "of to digg approaches so first of all we have browser extension marketplaces",
    "start": "672510",
    "end": "680340"
  },
  {
    "text": "right and you know if you're familiar with the the mobile space you know this should be very familiar to you so think",
    "start": "680340",
    "end": "688110"
  },
  {
    "text": "Google Play for Android or the App Store for iOS so these central market places",
    "start": "688110",
    "end": "693990"
  },
  {
    "text": "are actually great for security you know you trade off a bit of freedom but at the same time you have one centralized",
    "start": "693990",
    "end": "700920"
  },
  {
    "text": "place where a vendor can go and do all sorts of different security analyses and",
    "start": "700920",
    "end": "706980"
  },
  {
    "text": "then you know certify in some way that hey you know these extensions that you find here or this code that you find here is guaranteed to be benign well",
    "start": "706980",
    "end": "714510"
  },
  {
    "text": "guaranteed is highly likely to be benign so what does that mean in the extension",
    "start": "714510",
    "end": "720780"
  },
  {
    "text": "context well that means you know some sort of automated analysis that could",
    "start": "720780",
    "end": "726180"
  },
  {
    "text": "mean some sort of human review perhaps some extension signing and or forcing",
    "start": "726180",
    "end": "732210"
  },
  {
    "text": "users to use this channel to install this third-party code but you know the combination of automated analysis and",
    "start": "732210",
    "end": "739380"
  },
  {
    "text": "manual review and extension signing is really the the vetting model that",
    "start": "739380",
    "end": "745290"
  },
  {
    "text": "underpins all of firefox extension security you know if something goes wrong with this vetting process then all",
    "start": "745290",
    "end": "751680"
  },
  {
    "text": "bets are off so hold that thought I will",
    "start": "751680",
    "end": "757080"
  },
  {
    "text": "also say that there's kind of this alternate approach based on extension",
    "start": "757080",
    "end": "762510"
  },
  {
    "text": "isolation and so if you're familiar with the chromium security architecture this is essentially that where the idea is to",
    "start": "762510",
    "end": "769530"
  },
  {
    "text": "you know first isolate extensions from each other and then you know lower the amount of privilege in each of these you",
    "start": "769530",
    "end": "775650"
  },
  {
    "text": "know extension compartments to the least amount needed for them to work correctly at least you know that's the idea and maybe have some policy",
    "start": "775650",
    "end": "783310"
  },
  {
    "text": "based enforcement on top of this so that works quite well although it's really",
    "start": "783310",
    "end": "789250"
  },
  {
    "text": "intended for this benign but buggy model and not really so much for the malicious extension model and so there's a lot of",
    "start": "789250",
    "end": "795700"
  },
  {
    "text": "work showing that well you know extensions or mobile apps can request all the permissions and users will just",
    "start": "795700",
    "end": "801460"
  },
  {
    "text": "say yes yes yes yes and so this is not a panacea but it does you know help to prevent some of the attacks that we'll",
    "start": "801460",
    "end": "807610"
  },
  {
    "text": "talk about but you know Mozilla really doesn't have this yet you know on that",
    "start": "807610",
    "end": "813250"
  },
  {
    "start": "811000",
    "end": "967000"
  },
  {
    "text": "note just to contradict what I just said so Mozilla does have this idea of it well does this proposal for the add-on",
    "start": "813250",
    "end": "819910"
  },
  {
    "text": "SDK also known as jetpack if you're familiar with familiar with that",
    "start": "819910",
    "end": "825970"
  },
  {
    "text": "terminology this is something they introduced back in 2009 so it's been",
    "start": "825970",
    "end": "831610"
  },
  {
    "text": "around for a while and it indeed you know gives extension authors and users",
    "start": "831610",
    "end": "836980"
  },
  {
    "text": "some of the security primitives that you would like to have in a modern browser",
    "start": "836980",
    "end": "842980"
  },
  {
    "text": "extension framework so for instance it isolates extensions from each other you",
    "start": "842980",
    "end": "848620"
  },
  {
    "text": "have this idea borrowed from chrome where you have separate content scripts that interact and we're exposed to you",
    "start": "848620",
    "end": "855490"
  },
  {
    "text": "know web origins on the one hand and core scripts that have access to the",
    "start": "855490",
    "end": "861010"
  },
  {
    "text": "browser API and then a very narrow IPC channel for these two things to communicate with each other which you",
    "start": "861010",
    "end": "867850"
  },
  {
    "text": "know in this model the attacker has to somehow bridge this channel in order to gain access to the privileged browser",
    "start": "867850",
    "end": "874180"
  },
  {
    "text": "API so this is much better situation and really you know implements this idea well you know has a potential for",
    "start": "874180",
    "end": "881350"
  },
  {
    "text": "implementing this idea of least privilege however unfortunately adoption",
    "start": "881350",
    "end": "887290"
  },
  {
    "text": "has been slowed right so it was introduced back in 2009 and if you look at the progression over time well at",
    "start": "887290",
    "end": "892840"
  },
  {
    "text": "least since we started measuring this back in October 2014 looking at the top",
    "start": "892840",
    "end": "898480"
  },
  {
    "text": "two thousand extensions in the Mozilla add-on story you'll find well there were only twelve percent of extensions that",
    "start": "898480",
    "end": "903550"
  },
  {
    "text": "were actually using jetpack and so well maybe things would get better over time but you know we looked at this again a",
    "start": "903550",
    "end": "909660"
  },
  {
    "text": "you know a year and a half or so later and in March 2016 you saw only a modest",
    "start": "909660",
    "end": "915810"
  },
  {
    "text": "increase right you know less than a quarter of extensions we're using this new more secure extension framework",
    "start": "915810",
    "end": "923029"
  },
  {
    "text": "whereas the vast majority was still using this very insecure legacy architecture and indeed you know many",
    "start": "923029",
    "end": "930060"
  },
  {
    "text": "people viewed jetpack is a bit of a failure right so these days or at least you know recently it was announced that",
    "start": "930060",
    "end": "936089"
  },
  {
    "text": "Mozilla was going to supersede this old jetpack architecture with web extensions",
    "start": "936089",
    "end": "943649"
  },
  {
    "text": "which is essentially the same thing as well it's a source compatible or API",
    "start": "943649",
    "end": "948870"
  },
  {
    "text": "compatible version of Chrome extensions so you know that is targeted for release in q 3 q 3 2016 but again the majority",
    "start": "948870",
    "end": "959459"
  },
  {
    "text": "of extensions out there in the wild are still using this insecure architecture so let's see what's possible so I'm",
    "start": "959459",
    "end": "969120"
  },
  {
    "start": "967000",
    "end": "1079000"
  },
  {
    "text": "going to dive straight into the attack model right so this is kind of the idea let's say you're a veteran Moselle and",
    "start": "969120",
    "end": "976380"
  },
  {
    "text": "somebody has submitted this extension to you and they don't have this nice label that says hey I'm an evil extension and",
    "start": "976380",
    "end": "983970"
  },
  {
    "text": "so you know they're running it in their vetting sandbox and you know they're they're going to run some automated",
    "start": "983970",
    "end": "989910"
  },
  {
    "text": "analysis on this and perhaps a manual analysis and primarily what they're going to be looking for aside from you",
    "start": "989910",
    "end": "996329"
  },
  {
    "text": "know different programming practice guidelines are you know our is this thing executing any sensitive calls it",
    "start": "996329",
    "end": "1002209"
  },
  {
    "text": "is it doing any kind of string evaluation for code is it accessing the file system is accessing the network etc",
    "start": "1002209",
    "end": "1008480"
  },
  {
    "text": "right and there's a there's a you know well defined list of xpcom api's that",
    "start": "1008480",
    "end": "1013550"
  },
  {
    "text": "give you the sort of thing and they'll find ok there's nothing in here that does this and so we'll assume ok it's",
    "start": "1013550",
    "end": "1019850"
  },
  {
    "text": "labeled benign and gets published in the app store or the extension store ok so",
    "start": "1019850",
    "end": "1027199"
  },
  {
    "text": "let's say a user downloads this then what happens something like this ok we have the same extension but now it's",
    "start": "1027199",
    "end": "1033168"
  },
  {
    "text": "running in a user's browser and so now it's co inhabiting out browser with",
    "start": "1033169",
    "end": "1038418"
  },
  {
    "text": "other extensions other benign extensions but these other benign extensions might be performing",
    "start": "1038419",
    "end": "1044870"
  },
  {
    "text": "some sensitive calls right some security relevant calls like accessing the network or file system which this evil",
    "start": "1044870",
    "end": "1050809"
  },
  {
    "text": "extension can then use right so we have this kind of situation where extension X and extension Y or leaking capabilities",
    "start": "1050809",
    "end": "1057789"
  },
  {
    "text": "to this evil extension that it can abused to implement an attack even though it itself doesn't contain any",
    "start": "1057789",
    "end": "1065590"
  },
  {
    "text": "sensitive calls and so this is the basic idea behind extension reuse attacks we",
    "start": "1065590",
    "end": "1073039"
  },
  {
    "text": "have the appearance of a benign extension but it's actually malicious and it's difficult to tell during betting that this is actually occurring",
    "start": "1073039",
    "end": "1080350"
  },
  {
    "start": "1079000",
    "end": "1140000"
  },
  {
    "text": "so what's the impact of all this well some key takeaway points the lack of",
    "start": "1080350",
    "end": "1086450"
  },
  {
    "text": "isolation leaves a legacy extensions basically defenseless against these",
    "start": "1086450",
    "end": "1091549"
  },
  {
    "text": "capability leaks you know these legacy extensions are not written to kind of shield the capabilities that they",
    "start": "1091549",
    "end": "1097250"
  },
  {
    "text": "contain from you know other extensions so there's a lot of vulnerabilities out there as well see attackers can really",
    "start": "1097250",
    "end": "1105409"
  },
  {
    "text": "automatically find and stitch together these exploits by abusing capabilities",
    "start": "1105409",
    "end": "1110960"
  },
  {
    "text": "and so this is kind of an analog of you know these return and the lipsy style attacks that you see in the binary world",
    "start": "1110960",
    "end": "1116960"
  },
  {
    "text": "you know or if we're finding capabilities and kind of stringing them together to implement our attack and you",
    "start": "1116960",
    "end": "1124220"
  },
  {
    "text": "know kind of in the nice tradition of Aikido right the more power these vulnerable extensions have the easier it",
    "start": "1124220",
    "end": "1129740"
  },
  {
    "text": "is for an evil extension right so the richer the ambient authority kind of living in the browser the more complex",
    "start": "1129740",
    "end": "1137000"
  },
  {
    "text": "and powerful attacks we can create so if we wanted to execute some sort of attack",
    "start": "1137000",
    "end": "1144860"
  },
  {
    "start": "1140000",
    "end": "1192000"
  },
  {
    "text": "in a straightforward way without you know the technique that we just saw what might it look like well let's say we",
    "start": "1144860",
    "end": "1151700"
  },
  {
    "text": "wanted to implement a classic malware dropper we're going to reach out to the network and and pull down some resource",
    "start": "1151700",
    "end": "1157340"
  },
  {
    "text": "drop it to the file system and executed how would that look like using the xpcom API well it would look something like",
    "start": "1157340",
    "end": "1163429"
  },
  {
    "text": "this so this is a lot of lot of boilerplate to kind of execute the",
    "start": "1163429",
    "end": "1169070"
  },
  {
    "text": "workflow that I just just described but it's you know for someone who's experienced",
    "start": "1169070",
    "end": "1174590"
  },
  {
    "text": "in bedding Firefox extensions it's very easy to see what's going on here you're",
    "start": "1174590",
    "end": "1180170"
  },
  {
    "text": "invoking some xpcom api's to again you know reach out to the network download some code and launch it so this is",
    "start": "1180170",
    "end": "1187160"
  },
  {
    "text": "really straightforward and easy for a better to kind of flag as malicious so",
    "start": "1187160",
    "end": "1193760"
  },
  {
    "text": "how would it look instead well for an evil extension and and two extensions x and y we can implement this attack you",
    "start": "1193760",
    "end": "1200630"
  },
  {
    "text": "know very easily if we want to download we would find in this extension exo-k it exposes this download capability maybe",
    "start": "1200630",
    "end": "1208280"
  },
  {
    "text": "via something like this right so this is an example actually of code that's",
    "start": "1208280",
    "end": "1213950"
  },
  {
    "text": "exposed by a real extension that we can exercise in this way where we give it an",
    "start": "1213950",
    "end": "1219260"
  },
  {
    "text": "array of file objects that described where we want to get the code from and",
    "start": "1219260",
    "end": "1224570"
  },
  {
    "text": "where to download it and then we simply invoke that capability in this other extension so we can do that reach out to",
    "start": "1224570",
    "end": "1231320"
  },
  {
    "text": "the internet get that exe and drop to the file system and then you know in",
    "start": "1231320",
    "end": "1236780"
  },
  {
    "text": "this other extension y-yeah invokes and",
    "start": "1236780",
    "end": "1242600"
  },
  {
    "text": "functionality that's intended to launch an editor but in this case we targeted",
    "start": "1242600",
    "end": "1248180"
  },
  {
    "text": "at the exe that we just dropped and go ahead and launch that so again none of",
    "start": "1248180",
    "end": "1254480"
  },
  {
    "text": "this none of these sensitive calls were actually in that extension we just took advantage of stuff that was in our name",
    "start": "1254480",
    "end": "1260420"
  },
  {
    "text": "space so you know on the question to",
    "start": "1260420",
    "end": "1265700"
  },
  {
    "text": "paraphrase Shakespeare to reuse or not to reuse 4am our author it's pretty obvious which one of these is going to",
    "start": "1265700",
    "end": "1272030"
  },
  {
    "text": "pass bedding which again is really the only thing preventing this sort of attack from occurring on in the Firefox",
    "start": "1272030",
    "end": "1279250"
  },
  {
    "text": "ecosystem you know the one on the right it's much less obvious what's going on which you know we'll see some empirical",
    "start": "1279250",
    "end": "1287150"
  },
  {
    "text": "evidence for this fact later on just as another example to demonstrate some generality let's imagine that we want to",
    "start": "1287150",
    "end": "1294440"
  },
  {
    "text": "implement a key logger which is going to send every key press that the user makes in the browser to evil calm how can we",
    "start": "1294440",
    "end": "1300440"
  },
  {
    "text": "do this well fairly straightforwardly this is an example abusing another real",
    "start": "1300440",
    "end": "1307340"
  },
  {
    "text": "extension that anyone can download and install from the Mozilla App Store so",
    "start": "1307340",
    "end": "1313050"
  },
  {
    "text": "here this is a extension that provides a dictionary or wiktionary lookup service",
    "start": "1313050",
    "end": "1319580"
  },
  {
    "text": "and the malicious extension is simply going to reach out to some property defined in this vulnerable extension and",
    "start": "1319580",
    "end": "1327210"
  },
  {
    "text": "set it to an attacker controlled URL and then register a key press event handler",
    "start": "1327210",
    "end": "1332460"
  },
  {
    "text": "that is going to get invoked every time a key press event is is is created and",
    "start": "1332460",
    "end": "1338730"
  },
  {
    "text": "then send the corresponding key to the attacker so maybe not the most efficient",
    "start": "1338730",
    "end": "1343890"
  },
  {
    "text": "way to implement this attack but kind of gets the point across so exactly sending",
    "start": "1343890",
    "end": "1350100"
  },
  {
    "text": "a bunch of keystrokes to eagle calm so those are extension reuse attacks at a",
    "start": "1350100",
    "end": "1357060"
  },
  {
    "start": "1353000",
    "end": "1400000"
  },
  {
    "text": "high level and I'm going to turn it over to a vet now to give you a flavor for how this actually looks in practice so",
    "start": "1357060",
    "end": "1364710"
  },
  {
    "text": "there are some challenges about finding teens vulnerabilities because there are hundreds thousands lines of code",
    "start": "1364710",
    "end": "1371700"
  },
  {
    "text": "JavaScript code and finding these things security sensitive functions and you",
    "start": "1371700",
    "end": "1378000"
  },
  {
    "text": "also have to find the security sensitive functions that you can control from outside you can give some malicious",
    "start": "1378000",
    "end": "1385130"
  },
  {
    "text": "parameters arguments to them and you can turn them this capable to list into some",
    "start": "1385130",
    "end": "1390420"
  },
  {
    "text": "attacks so it is like looking a needle in a haystack so it is a little",
    "start": "1390420",
    "end": "1396030"
  },
  {
    "text": "difficult to to make it easier we implemented crossfire which is a",
    "start": "1396030",
    "end": "1404030"
  },
  {
    "start": "1400000",
    "end": "1493000"
  },
  {
    "text": "lightweight gos decrypt static analyzer and also automated exploit generator so",
    "start": "1404030",
    "end": "1411960"
  },
  {
    "text": "it gets the javascript file or a directory of your secret files as an",
    "start": "1411960",
    "end": "1417360"
  },
  {
    "text": "input and done it parses the is your secret files it turns them into abstract",
    "start": "1417360",
    "end": "1423870"
  },
  {
    "text": "syntax trees and it does the analysis over this syntax tree it traverses the",
    "start": "1423870",
    "end": "1430230"
  },
  {
    "text": "code and in it consists of two stages in the first stage it",
    "start": "1430230",
    "end": "1436600"
  },
  {
    "text": "discovers the quad look set the code and determines what are the global variables",
    "start": "1436600",
    "end": "1442850"
  },
  {
    "text": "what are the global functions that can be exploitive and look looks at the",
    "start": "1442850",
    "end": "1449660"
  },
  {
    "text": "security sense two functions that can be exploitable and it generates the call graph in the second stage it finds the",
    "start": "1449660",
    "end": "1459170"
  },
  {
    "text": "pets from these global functions or variables to the entry points to our",
    "start": "1459170",
    "end": "1465110"
  },
  {
    "text": "sinks which are security sensitive functions and after this it generates a",
    "start": "1465110",
    "end": "1472250"
  },
  {
    "text": "vulnerable through port which is given to the exploit generator and exploit",
    "start": "1472250",
    "end": "1477500"
  },
  {
    "text": "generator has predefined exploit rules these rules are predefined for each type",
    "start": "1477500",
    "end": "1484340"
  },
  {
    "text": "of security sensitive function it combines the vulnerable through port and",
    "start": "1484340",
    "end": "1489530"
  },
  {
    "text": "exploit roots and generates the X plate now i will do a demo to demonstrate how",
    "start": "1489530",
    "end": "1499820"
  },
  {
    "start": "1493000",
    "end": "1546000"
  },
  {
    "text": "does it work so here is a simple",
    "start": "1499820",
    "end": "1507700"
  },
  {
    "text": "javascript code which has a global variable global function and the globe logic ah why it is not",
    "start": "1507700",
    "end": "1521500"
  },
  {
    "text": "ok",
    "start": "1540990",
    "end": "1543990"
  },
  {
    "text": "sorry sir in this example you can see",
    "start": "1547070",
    "end": "1552149"
  },
  {
    "text": "the function global variable global function and global object it also has",
    "start": "1552149",
    "end": "1558899"
  },
  {
    "text": "some functions in it and since the object is global everything inside the object is also global and can be",
    "start": "1558899",
    "end": "1566340"
  },
  {
    "text": "accessed by outside and here is the AST",
    "start": "1566340",
    "end": "1574850"
  },
  {
    "start": "1572000",
    "end": "1624000"
  },
  {
    "text": "representation of this code AST representation is much longer like ten",
    "start": "1574850",
    "end": "1581789"
  },
  {
    "text": "times larger than the exact quote but it gives us very structured form of the code so it does the parsing and",
    "start": "1581789",
    "end": "1588269"
  },
  {
    "text": "everything and at the end we get very well structured form of the code and",
    "start": "1588269",
    "end": "1593279"
  },
  {
    "text": "then we do the analysis so i will show you",
    "start": "1593279",
    "end": "1599480"
  },
  {
    "text": "so this code doesn't have any Indian side of it so also I need to know this",
    "start": "1608310",
    "end": "1619980"
  },
  {
    "text": "and we executed it doesn't have any sink",
    "start": "1620610",
    "end": "1629590"
  },
  {
    "start": "1624000",
    "end": "1797000"
  },
  {
    "text": "inside of it it just have some global functions so what it gets is just give",
    "start": "1629590",
    "end": "1639070"
  },
  {
    "text": "some statics to us about the code but in",
    "start": "1639070",
    "end": "1644500"
  },
  {
    "text": "the second example here we see two functions in the first function it gets",
    "start": "1644500",
    "end": "1652840"
  },
  {
    "text": "two parameters and it uses first parameter as the pet of the file and tank it executes that file in the second",
    "start": "1652840",
    "end": "1662020"
  },
  {
    "text": "function it calls the first function but the parameters are in reverse order so",
    "start": "1662020",
    "end": "1668110"
  },
  {
    "text": "you see the second parameter of the second function actually use given as",
    "start": "1668110",
    "end": "1676660"
  },
  {
    "text": "the pet name and there is also another sink but this thing is different because",
    "start": "1676660",
    "end": "1685570"
  },
  {
    "text": "as you see this thing does not get any parameter from outside it just has some",
    "start": "1685570",
    "end": "1691030"
  },
  {
    "text": "static value and it is not possible to tamper dysfunction to use it as an",
    "start": "1691030",
    "end": "1699580"
  },
  {
    "text": "attack so when we execute the code for",
    "start": "1699580",
    "end": "1705760"
  },
  {
    "text": "the second example",
    "start": "1705760",
    "end": "1708660"
  },
  {
    "text": "so you see the sink found in line for and it generated to exploits one is the",
    "start": "1712450",
    "end": "1724520"
  },
  {
    "text": "function f one with malicious parameter this is the file or full path of the",
    "start": "1724520",
    "end": "1731330"
  },
  {
    "text": "file and the second one is the second function but the parameter the order you",
    "start": "1731330",
    "end": "1739430"
  },
  {
    "text": "give the file path in the second parameter so let's look at another",
    "start": "1739430",
    "end": "1748280"
  },
  {
    "text": "example in this code a global variable",
    "start": "1748280",
    "end": "1756980"
  },
  {
    "text": "is defined which points to a file better a binary file and then there is a",
    "start": "1756980",
    "end": "1763550"
  },
  {
    "text": "function which has a local variable but it gets a global variable so we use data",
    "start": "1763550",
    "end": "1771140"
  },
  {
    "text": "tainting with the stand and tangent",
    "start": "1771140",
    "end": "1776630"
  },
  {
    "text": "operation we change this local variable with the global variable and then we",
    "start": "1776630",
    "end": "1783890"
  },
  {
    "text": "follow the path of this variable disclosed to the sink and when we",
    "start": "1783890",
    "end": "1789710"
  },
  {
    "text": "execute the analyzer",
    "start": "1789710",
    "end": "1795039"
  },
  {
    "start": "1797000",
    "end": "1848000"
  },
  {
    "text": "it gives you which variable that you need to modify and then execute the",
    "start": "1798310",
    "end": "1804370"
  },
  {
    "text": "function yet these are very easy examples just to give you the idea of",
    "start": "1804370",
    "end": "1810190"
  },
  {
    "text": "how it works and what kind of things it does it considers so this example a",
    "start": "1810190",
    "end": "1819430"
  },
  {
    "text": "little bit different because in this one the codes are taken from a real",
    "start": "1819430",
    "end": "1825990"
  },
  {
    "text": "extension it looks very complex so I don't expect you to try to understand it",
    "start": "1825990",
    "end": "1834510"
  },
  {
    "text": "but let's give it a try",
    "start": "1834510",
    "end": "1840030"
  },
  {
    "text": "and here we found different things these",
    "start": "1846920",
    "end": "1855330"
  },
  {
    "start": "1848000",
    "end": "1873000"
  },
  {
    "text": "are the functions that goes to those things and these are the attacks that",
    "start": "1855330",
    "end": "1861900"
  },
  {
    "text": "generated",
    "start": "1861900",
    "end": "1864560"
  },
  {
    "start": "1873000",
    "end": "1911000"
  },
  {
    "text": "and now instead of a file I will give",
    "start": "1873730",
    "end": "1879730"
  },
  {
    "text": "this a folder an extension folder so this is also a real extension from the firefox extension store and it looks at",
    "start": "1879730",
    "end": "1889480"
  },
  {
    "text": "each level secret file mr. inside this folder and file and abilities so this is",
    "start": "1889480",
    "end": "1901000"
  },
  {
    "text": "the folder",
    "start": "1901000",
    "end": "1903480"
  },
  {
    "text": "so here you see it found two different exploits one openurl in tap and other",
    "start": "1911700",
    "end": "1921419"
  },
  {
    "text": "one also a network access type of vulnerability and I will also show you",
    "start": "1921419",
    "end": "1928980"
  },
  {
    "text": "how you can verify that these attacks work so I will open the Firefox browser",
    "start": "1928980",
    "end": "1937970"
  },
  {
    "start": "1954000",
    "end": "2050000"
  },
  {
    "text": "a secret pets can be used to demonstrate",
    "start": "1954419",
    "end": "1960108"
  },
  {
    "text": "these examples instead of writing an extension we can just simply execute the",
    "start": "1960499",
    "end": "1965909"
  },
  {
    "text": "code here and let's look at what we found",
    "start": "1965909",
    "end": "1972859"
  },
  {
    "text": "I didn't copy it complete correct okay",
    "start": "1999770",
    "end": "2006340"
  },
  {
    "text": "so you see a tab is open and connected to this webpage and in another example",
    "start": "2006340",
    "end": "2016019"
  },
  {
    "start": "2050000",
    "end": "2155000"
  },
  {
    "text": "so here there is a problem it is not here it sets the object so it will not",
    "start": "2050540",
    "end": "2057830"
  },
  {
    "text": "work it was obvious the reason why it shows it is due to our painting",
    "start": "2057830",
    "end": "2063980"
  },
  {
    "text": "principles when we tainted be tainted with the object name so now the user",
    "start": "2063980",
    "end": "2071750"
  },
  {
    "text": "needs to look at the code and try to do some modification to make it work",
    "start": "2071750",
    "end": "2079089"
  },
  {
    "text": "it shows us the sinc function security function it says under 10 722 and when",
    "start": "2095730",
    "end": "2105300"
  },
  {
    "text": "you look at this code you easily see that this is the parameter that goes to",
    "start": "2105300",
    "end": "2111960"
  },
  {
    "text": "this at top function and it is set by",
    "start": "2111960",
    "end": "2117270"
  },
  {
    "text": "the property of that object so the only thing you need to do is just copied",
    "start": "2117270",
    "end": "2125510"
  },
  {
    "text": "and it's opens its head",
    "start": "2142540",
    "end": "2146340"
  },
  {
    "text": "so I think this demonstrates how the",
    "start": "2155390",
    "end": "2160700"
  },
  {
    "text": "Tool Works and how the output of the tool can be used for generating attack so once you get these exploit you can do",
    "start": "2160700",
    "end": "2168049"
  },
  {
    "text": "any combination of them to make more sophisticated attack you can download by name is execute them or two different",
    "start": "2168049",
    "end": "2175430"
  },
  {
    "text": "types of attacks together so we also",
    "start": "2175430",
    "end": "2182000"
  },
  {
    "start": "2180000",
    "end": "2313000"
  },
  {
    "text": "evaluate the tool and we used two different experiments in the first one",
    "start": "2182000",
    "end": "2187760"
  },
  {
    "text": "you look at the top 10 most downloaded extensions and we manually analyzed all",
    "start": "2187760",
    "end": "2193609"
  },
  {
    "text": "of them to verify that our output is correct or not and in the second",
    "start": "2193609",
    "end": "2200690"
  },
  {
    "text": "experiment we look at the top two thousand most download the extensions and we since it is impossible to manual",
    "start": "2200690",
    "end": "2208609"
  },
  {
    "text": "very file of them we selected a random set three hundred or three hundred 223",
    "start": "2208609",
    "end": "2216049"
  },
  {
    "text": "extensions so which is ninety-five percent confidence in level and five",
    "start": "2216049",
    "end": "2221450"
  },
  {
    "text": "percent confidence interval and we did",
    "start": "2221450",
    "end": "2226579"
  },
  {
    "text": "another this manual another zone dodge as we also perform the case study we",
    "start": "2226579",
    "end": "2233359"
  },
  {
    "text": "developed an extension which has the closest station calling it and we",
    "start": "2233359",
    "end": "2239690"
  },
  {
    "text": "submitted those to Firefox extension marketplace and we applied for the full",
    "start": "2239690",
    "end": "2245390"
  },
  {
    "text": "reveal which is the highest level that you can get from reviews height level of",
    "start": "2245390",
    "end": "2252079"
  },
  {
    "text": "s salinity so the top ten Firefox",
    "start": "2252079",
    "end": "2257509"
  },
  {
    "text": "extensions now you see the extension names probably many of them are familiar to you like no script or grease monkey",
    "start": "2257509",
    "end": "2264650"
  },
  {
    "text": "and you see the number of automated exploits which means we do them to any",
    "start": "2264650",
    "end": "2270140"
  },
  {
    "text": "modification we just copy the code from the tool and pass the tenth it work and",
    "start": "2270140",
    "end": "2276130"
  },
  {
    "text": "the manual exploits we are we did some money on verification to turn them into",
    "start": "2276130",
    "end": "2281480"
  },
  {
    "text": "working exploits and the false positives that sometimes to find something but",
    "start": "2281480",
    "end": "2289579"
  },
  {
    "text": "actually there are some complex conditional checks some sanity checks",
    "start": "2289579",
    "end": "2294990"
  },
  {
    "text": "before it goes to the England it becomes impossible to exploit using that",
    "start": "2294990",
    "end": "2302339"
  },
  {
    "text": "function so these are our false positives and a time to you see the number of users as you see they have",
    "start": "2302339",
    "end": "2309450"
  },
  {
    "text": "millions of users so this is from the",
    "start": "2309450",
    "end": "2314940"
  },
  {
    "start": "2313000",
    "end": "2340000"
  },
  {
    "text": "random set and there are be found 255",
    "start": "2314940",
    "end": "2321059"
  },
  {
    "text": "working exploits and when we look at these working exploits twenty percent of",
    "start": "2321059",
    "end": "2328410"
  },
  {
    "text": "them were actually automated they didn't need any change in modification and the",
    "start": "2328410",
    "end": "2333900"
  },
  {
    "text": "rest of them required some kind of modification so what are those what were",
    "start": "2333900",
    "end": "2343470"
  },
  {
    "start": "2340000",
    "end": "2381000"
  },
  {
    "text": "those positive one herbal teas so they were measured two of them were network access vulnerabilities but also a",
    "start": "2343470",
    "end": "2351869"
  },
  {
    "text": "significant number of file access file i/o and even personal illustration and",
    "start": "2351869",
    "end": "2357119"
  },
  {
    "text": "for the event listeners we didn't look at any event listening type of thing we",
    "start": "2357119",
    "end": "2364289"
  },
  {
    "text": "just focus on the key log in class because they are the most dangerous ones that can easily turn into key loggers",
    "start": "2364289",
    "end": "2370890"
  },
  {
    "text": "and they have some preference texts and",
    "start": "2370890",
    "end": "2376079"
  },
  {
    "text": "code execution type of vulnerabilities as well so the performance the crossfire",
    "start": "2376079",
    "end": "2385680"
  },
  {
    "start": "2381000",
    "end": "2487000"
  },
  {
    "text": "is a lightweight too so it for a it's a very fast static analysis tool we",
    "start": "2385680",
    "end": "2393450"
  },
  {
    "text": "measured the time of the tool / extension and we find out it just takes",
    "start": "2393450",
    "end": "2400529"
  },
  {
    "text": "one second on average to analyze an extension so there was one exception",
    "start": "2400529",
    "end": "2406829"
  },
  {
    "text": "which took 763 seconds and it was the the extension called local load which",
    "start": "2406829",
    "end": "2414990"
  },
  {
    "text": "has the local copies of all the famous JavaScript libraries like jQuery or",
    "start": "2414990",
    "end": "2420329"
  },
  {
    "text": "other type of libraries with 10,000 lines of code so it took for a while but it was",
    "start": "2420329",
    "end": "2428310"
  },
  {
    "text": "sital very fast compared to other existing static analysis tools and we",
    "start": "2428310",
    "end": "2435060"
  },
  {
    "text": "also measured the time spent for the user to verify that the exploit is",
    "start": "2435060",
    "end": "2441660"
  },
  {
    "text": "working or the time to modify the output",
    "start": "2441660",
    "end": "2446880"
  },
  {
    "text": "to look at the template and turn it into a working exploit the time span for this",
    "start": "2446880",
    "end": "2452550"
  },
  {
    "text": "and we found out that on average it just",
    "start": "2452550",
    "end": "2458160"
  },
  {
    "text": "takes six minutes per exploit to verify",
    "start": "2458160",
    "end": "2464820"
  },
  {
    "text": "it or to use the template and to make it working exploit so this is not also",
    "start": "2464820",
    "end": "2473150"
  },
  {
    "text": "making an attack which can combine many of those capabilities or exploits",
    "start": "2473150",
    "end": "2479220"
  },
  {
    "text": "together it is just one type of operation that we call exploit here so",
    "start": "2479220",
    "end": "2488310"
  },
  {
    "text": "for the ethical reasons it was impossible for us to make a scientific evaluation in the real world of this",
    "start": "2488310",
    "end": "2495420"
  },
  {
    "text": "attack to show that it can evade the existing detection techniques but what",
    "start": "2495420",
    "end": "2502410"
  },
  {
    "text": "we did is we developed an extension called validate this website it was a",
    "start": "2502410",
    "end": "2508290"
  },
  {
    "text": "very simple extension it just run user clicks a button it just does the markup",
    "start": "2508290",
    "end": "2514440"
  },
  {
    "text": "validation of the web page using an online market validation service so it",
    "start": "2514440",
    "end": "2520440"
  },
  {
    "text": "was just 50 lines of code but we embedded a cross extension call inside",
    "start": "2520440",
    "end": "2528900"
  },
  {
    "text": "that extension and it is a function call",
    "start": "2528900",
    "end": "2534320"
  },
  {
    "text": "to no script extension which is very popular extension and it connects to a",
    "start": "2534320",
    "end": "2541110"
  },
  {
    "text": "URL given but in a stealth manner it doesn't open a tab so the user will not",
    "start": "2541110",
    "end": "2546810"
  },
  {
    "text": "notified about that it just does the connection background and we submitted this",
    "start": "2546810",
    "end": "2556730"
  },
  {
    "text": "extension to the Mozilla web store and we applied for the full review also",
    "start": "2556730",
    "end": "2562970"
  },
  {
    "text": "there is one thing I would like to tell you we register the domain name for this purpose but we didn't put any content on",
    "start": "2562970",
    "end": "2570470"
  },
  {
    "text": "it so it was unnecessary harm us link and we get full review and we didn't",
    "start": "2570470",
    "end": "2583160"
  },
  {
    "text": "receive any security running the reason for that was it wasn't that the letters",
    "start": "2583160",
    "end": "2591650"
  },
  {
    "text": "are not to good review sir I mean they do really an amazing job they look at",
    "start": "2591650",
    "end": "2597170"
  },
  {
    "text": "the code very carefully or they'd use some automated tools to find out these problems inside the extension they",
    "start": "2597170",
    "end": "2605869"
  },
  {
    "text": "execute the extension and they will fight that extension does what it claims",
    "start": "2605869",
    "end": "2611539"
  },
  {
    "text": "in the description of the extension so they really do very good job but they",
    "start": "2611539",
    "end": "2617180"
  },
  {
    "text": "weren't aware of this type of attack so they weren't checking this also their automated tools didn't highlighted any",
    "start": "2617180",
    "end": "2625099"
  },
  {
    "text": "problem in the quad so they probably didn't notice that can be a problem and",
    "start": "2625099",
    "end": "2633670"
  },
  {
    "text": "we received some best practices type of commands but we didn't receive any",
    "start": "2633670",
    "end": "2641239"
  },
  {
    "text": "security training and once it is accepted we download the extension as we verified that this cross extension",
    "start": "2641239",
    "end": "2648559"
  },
  {
    "text": "called work and tan wii remote the extension immediately from the web store",
    "start": "2648559",
    "end": "2655809"
  },
  {
    "text": "so for the limitations and crossfire is not designed to be to show the absence",
    "start": "2656950",
    "end": "2664369"
  },
  {
    "start": "2657000",
    "end": "2726000"
  },
  {
    "text": "of the vulnerabilities but instead it is designed to find the existence of the",
    "start": "2664369",
    "end": "2669470"
  },
  {
    "text": "vulnerabilities so it is not a sound and precise analysis tool and it doesn't",
    "start": "2669470",
    "end": "2677329"
  },
  {
    "text": "handle inferring dynamic data types or prototype based inheritance",
    "start": "2677329",
    "end": "2683160"
  },
  {
    "text": "and it doesn't handle the citroen correlation that you can if you have",
    "start": "2683160",
    "end": "2689220"
  },
  {
    "text": "anything in evil functional settimeout function NSE drink quote it doesn't",
    "start": "2689220",
    "end": "2694440"
  },
  {
    "text": "elevate them but as you see these limitations doesn't prevent to find",
    "start": "2694440",
    "end": "2700290"
  },
  {
    "text": "hundreds of x place and without making a",
    "start": "2700290",
    "end": "2705390"
  },
  {
    "text": "sound tool we trade off this soundness",
    "start": "2705390",
    "end": "2710480"
  },
  {
    "text": "precision with the performance and at the end we had a very fast tool which",
    "start": "2710480",
    "end": "2718440"
  },
  {
    "text": "can easily find these exploits and vulnerabilities so for the mitigation",
    "start": "2718440",
    "end": "2727680"
  },
  {
    "text": "and addiction what we can do is the first thing we can do is the isolation",
    "start": "2727680",
    "end": "2732750"
  },
  {
    "text": "it is very important and now the modern extension architectures introduced very",
    "start": "2732750",
    "end": "2739260"
  },
  {
    "text": "good isolation for the Firefox they haven't migrated yet but probably devil",
    "start": "2739260",
    "end": "2746820"
  },
  {
    "text": "but isolation is also not completely",
    "start": "2746820",
    "end": "2752190"
  },
  {
    "text": "solve the problem so there are also other things that we need to do the",
    "start": "2752190",
    "end": "2757230"
  },
  {
    "text": "least privilege is another thing to mitigate these problems when you have",
    "start": "2757230",
    "end": "2763410"
  },
  {
    "text": "the least privilege then even if a vulnerable extension exposes some functionality the evil ex Nationals",
    "start": "2763410",
    "end": "2771270"
  },
  {
    "text": "extension can just have this privileged of the boundary extension and it may not",
    "start": "2771270",
    "end": "2777900"
  },
  {
    "text": "harm the user a lot sorry it is it it is bounded by the privilege of the",
    "start": "2777900",
    "end": "2784350"
  },
  {
    "text": "vulnerable extension secure functional and data sharing so the extensions can",
    "start": "2784350",
    "end": "2792900"
  },
  {
    "start": "2787000",
    "end": "2853000"
  },
  {
    "text": "be isolated but they may also need to share some data and functionality and if",
    "start": "2792900",
    "end": "2800880"
  },
  {
    "text": "we do don't do it correctly then it may still cause this extension reuse",
    "start": "2800880",
    "end": "2806660"
  },
  {
    "text": "vulnerabilities and attacks for example we also look at the jetpack extensions yes the attack surface was",
    "start": "2806660",
    "end": "2814170"
  },
  {
    "text": "very narrow but then also it was easier to find the vulnerabilities because in",
    "start": "2814170",
    "end": "2820320"
  },
  {
    "text": "the jetpack you explicitly export a variable or functionality and since",
    "start": "2820320",
    "end": "2828270"
  },
  {
    "text": "these extension developers are not educated in the security they may",
    "start": "2828270",
    "end": "2836190"
  },
  {
    "text": "sometimes expose some security critical function they may export these functions",
    "start": "2836190",
    "end": "2841200"
  },
  {
    "text": "that you can still do codec stationary use attacks on these jetpack extensions",
    "start": "2841200",
    "end": "2848190"
  },
  {
    "text": "they are not completely me so another",
    "start": "2848190",
    "end": "2853800"
  },
  {
    "start": "2853000",
    "end": "2915000"
  },
  {
    "text": "thing we can do is we can use some static analysis similar to crosswire",
    "start": "2853800",
    "end": "2859580"
  },
  {
    "text": "maybe much sounder precise JavaScript",
    "start": "2859580",
    "end": "2865140"
  },
  {
    "text": "static analysis to find these vulnerabilities and let me see any",
    "start": "2865140",
    "end": "2871350"
  },
  {
    "text": "vulnerabilities maybe we can send it to the extension writer to correct them",
    "start": "2871350",
    "end": "2876630"
  },
  {
    "text": "check them in addition to those things we also contact with Mozilla security",
    "start": "2876630",
    "end": "2884010"
  },
  {
    "text": "team and we inform them about these vulnerabilities so now they educate their waiters and we don't expect to see",
    "start": "2884010",
    "end": "2894080"
  },
  {
    "text": "this kind of attacks in the world anymore but it is not also there is",
    "start": "2894080",
    "end": "2902340"
  },
  {
    "text": "always human error in the process so for",
    "start": "2902340",
    "end": "2910080"
  },
  {
    "text": "the conclusions I will handle which will okay thank you so to wrap up there are a",
    "start": "2910080",
    "end": "2917820"
  },
  {
    "start": "2915000",
    "end": "3425000"
  },
  {
    "text": "few key takeaways that we want to leave you with right so first of all you know",
    "start": "2917820",
    "end": "2923730"
  },
  {
    "text": "this lack of isolation really is a huge problem and so you know it's a long and recognize that you should augment and I",
    "start": "2923730",
    "end": "2930690"
  },
  {
    "text": "were both saying you know this is this is kind of a a keystone right foundation for building",
    "start": "2930690",
    "end": "2937329"
  },
  {
    "text": "a more secure browser and so this is something that Mozilla really needs to you know develop and luckily they are on",
    "start": "2937329",
    "end": "2944050"
  },
  {
    "text": "that path the second key takeaway though is that for now these vulnerabilities",
    "start": "2944050",
    "end": "2950470"
  },
  {
    "text": "are exploitable and we showed that attackers can very easily automate this",
    "start": "2950470",
    "end": "2955690"
  },
  {
    "text": "you know so it's even though you know they're there it's a combinatorial problem of you know knowing which",
    "start": "2955690",
    "end": "2960970"
  },
  {
    "text": "extensions user will have and all this I mean if you have some intelligence on you know what your target population is",
    "start": "2960970",
    "end": "2968319"
  },
  {
    "text": "likely to have or you're targeting a particular individual and you can extract this information then it's very",
    "start": "2968319",
    "end": "2974650"
  },
  {
    "text": "easily to automate the process of finding these leaked capabilities and linking them together so you know as a",
    "start": "2974650",
    "end": "2984550"
  },
  {
    "text": "final takeaway we really need this combination of this robust isolation that hopefully will be forthcoming in a",
    "start": "2984550",
    "end": "2990609"
  },
  {
    "text": "future you know process isolated electrolysis enabled Firefox version with a modern extension architecture",
    "start": "2990609",
    "end": "2998940"
  },
  {
    "text": "hopefully we will have better vetting because you know these isolation techniques help but they don't really",
    "start": "2998940",
    "end": "3004619"
  },
  {
    "text": "solve the entire problem you know malicious extensions are still an issue so we still need some kind of bedding or perhaps community feedback and",
    "start": "3004619",
    "end": "3012359"
  },
  {
    "text": "crowdsourcing of security judgments as well as better analyses right so",
    "start": "3012359",
    "end": "3017460"
  },
  {
    "text": "hopefully something like crossbar integrated into the existing suite of JavaScript security analysis tools out",
    "start": "3017460",
    "end": "3024329"
  },
  {
    "text": "there to help find and remove malicious",
    "start": "3024329",
    "end": "3029339"
  },
  {
    "text": "extensions from these marketplaces so with that we'd like to conclude and we'd be happy to answer any questions you",
    "start": "3029339",
    "end": "3035460"
  },
  {
    "text": "might have",
    "start": "3035460",
    "end": "3037670"
  },
  {
    "text": "you say so actually I'm effort so it seems like you're too is doing some",
    "start": "3047840",
    "end": "3053370"
  },
  {
    "text": "static analysis do you handle something with like the JavaScript or with opposite can because like I mean these",
    "start": "3053370",
    "end": "3060780"
  },
  {
    "text": "things",
    "start": "3060780",
    "end": "3062960"
  },
  {
    "text": "yes for the office cake that code the tool cast still work but for the output",
    "start": "3066380",
    "end": "3074820"
  },
  {
    "text": "a you when you look at the output you may not understand it what type of",
    "start": "3074820",
    "end": "3081750"
  },
  {
    "text": "vulnerabilities it so the truth still finds the pads from the sources global",
    "start": "3081750",
    "end": "3088730"
  },
  {
    "text": "variables or global functions to the security sensor function calls but then",
    "start": "3088730",
    "end": "3093930"
  },
  {
    "text": "in the human analysis you may need to spend a bit more time but it works for",
    "start": "3093930",
    "end": "3100830"
  },
  {
    "text": "the scheduling so I'll actually tagged on to that answer as well so one you're",
    "start": "3100830",
    "end": "3106109"
  },
  {
    "text": "right that malicious javascript is often obfuscator dry tanned and indeed they could be using features like string",
    "start": "3106109",
    "end": "3112830"
  },
  {
    "text": "evaluation or assembling you know the source code from arrays and all of this to make it you know the job of a tool very difficult the thing is if you",
    "start": "3112830",
    "end": "3121200"
  },
  {
    "text": "submit an extension like that to Mozilla they're going to reject it right I mean so obfuscator there's only so far you",
    "start": "3121200",
    "end": "3127140"
  },
  {
    "text": "can go in terms of obfuscation indeed that's why we structured our case study in a way where we didn't obfuscate anything because that's actually highly",
    "start": "3127140",
    "end": "3133800"
  },
  {
    "text": "suspicious so you know just a qualified but for some commercial type of",
    "start": "3133800",
    "end": "3140010"
  },
  {
    "text": "libraries sometimes they can be obfuscated it in the extension cords but",
    "start": "3140010",
    "end": "3145770"
  },
  {
    "text": "yeah it is not very common",
    "start": "3145770",
    "end": "3149540"
  },
  {
    "text": "I didn't measure the office Kate advance because it wasn't really affecting the",
    "start": "3152539",
    "end": "3158479"
  },
  {
    "text": "code i just i don't remember an office",
    "start": "3158479",
    "end": "3166369"
  },
  {
    "text": "kate that once from the top ten yes yes please there might be very rare cases",
    "start": "3166369",
    "end": "3192890"
  },
  {
    "text": "where they need to use those things or sometimes they may need to use some",
    "start": "3192890",
    "end": "3198109"
  },
  {
    "text": "functionality of the browser so you cannot just isolate the legacy",
    "start": "3198109",
    "end": "3203869"
  },
  {
    "text": "extensions and make them work so there will be some broken functionality but if",
    "start": "3203869",
    "end": "3210410"
  },
  {
    "text": "you look at the interaction between extension take station then it is very rare maybe one case or two case among",
    "start": "3210410",
    "end": "3217969"
  },
  {
    "text": "two thousand times yeah so I agree it's very rare and it's it's not something",
    "start": "3217969",
    "end": "3223759"
  },
  {
    "text": "that I think is directly supported by the browser vendor but you know in kind of thinking ahead right like with this movement to make browser is kind of like",
    "start": "3223759",
    "end": "3230150"
  },
  {
    "text": "the new operating system you can easily imagine like extensions wanting to provide like library type services and",
    "start": "3230150",
    "end": "3237079"
  },
  {
    "text": "so you know if you have complete isolation then that becomes a very difficult right so I think you know it's",
    "start": "3237079",
    "end": "3243319"
  },
  {
    "text": "actually very interesting to think about what a secure way to do this might look like and I think a start of that might be to think about okay well we have post",
    "start": "3243319",
    "end": "3250369"
  },
  {
    "text": "message right already available to do message passing and so you know if you",
    "start": "3250369",
    "end": "3255979"
  },
  {
    "text": "start with this maybe you can do something good but then you have to think about I don't know I'm not sure we",
    "start": "3255979",
    "end": "3261949"
  },
  {
    "text": "haven't fully thought it through but it could be an interesting direction to kind of you know make the browser more like an operating system and have",
    "start": "3261949",
    "end": "3267949"
  },
  {
    "text": "third-party libraries kind of exists in the browser instead of having to reach out to the network and download a bunch of libraries",
    "start": "3267949",
    "end": "3275469"
  },
  {
    "text": "and under yes please that is using this",
    "start": "3278620",
    "end": "3287720"
  },
  {
    "text": "extension quadri use attack novi I mean we didn't actually look at them but for",
    "start": "3287720",
    "end": "3295340"
  },
  {
    "text": "the ones that I did the money analysis I didn't see",
    "start": "3295340",
    "end": "3301540"
  },
  {
    "text": "faxing it to expect them to use now and do you think that's going to result in",
    "start": "3327300",
    "end": "3334430"
  },
  {
    "text": "so challenge Prince it was made yes it will it can challenge but since",
    "start": "3334430",
    "end": "3341670"
  },
  {
    "text": "now they are informed about these things and now the weather's expect those type of things now probably it will be very",
    "start": "3341670",
    "end": "3350099"
  },
  {
    "text": "difficult to see it in the world but if there is a human error that cannot be",
    "start": "3350099",
    "end": "3355710"
  },
  {
    "text": "controlled done yeah it can pass the vetting process and it's possible but not very likely yeah you know just a",
    "start": "3355710",
    "end": "3365369"
  },
  {
    "text": "comment on out as well I think it's it's going to be interesting to see what happens so you know the in the interim before they roll out web extensions you",
    "start": "3365369",
    "end": "3372150"
  },
  {
    "text": "know you might see people try to do this and then that's kind of the trade-off of doing attack research right you know you're kind of publishing attacks and",
    "start": "3372150",
    "end": "3379140"
  },
  {
    "text": "people could try to do it so you know using our tools one way that they might",
    "start": "3379140",
    "end": "3384240"
  },
  {
    "text": "you know try to ameliorate this a bit you know you can actually think of other approaches to this so for instance you",
    "start": "3384240",
    "end": "3391079"
  },
  {
    "text": "know maybe instrumenting the browser to you know record failed api and vacations which would represent like a one",
    "start": "3391079",
    "end": "3397650"
  },
  {
    "text": "extension trying to reach out to another extension that it hopes is present and you know so a dynamic analysis might be",
    "start": "3397650",
    "end": "3405030"
  },
  {
    "text": "another way to kind of address this it's not something we looked at but you know it's something that either we have or we",
    "start": "3405030",
    "end": "3411660"
  },
  {
    "text": "might suggest to them okay well if there",
    "start": "3411660",
    "end": "3419490"
  },
  {
    "text": "aren't any further questions then you know thanks for showing up",
    "start": "3419490",
    "end": "3423829"
  }
]