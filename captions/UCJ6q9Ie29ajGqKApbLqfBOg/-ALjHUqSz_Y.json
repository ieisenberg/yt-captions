[
  {
    "text": "welcome to hacking with websockets with mike sergey and vaughn thank you",
    "start": "240",
    "end": "6560"
  },
  {
    "text": "hello test thank you um hello my name is mike and with my colleagues vaughn sergey we would like",
    "start": "8080",
    "end": "15280"
  },
  {
    "text": "to take a brief trip through just one aspect of html5 websockets in particular",
    "start": "15280",
    "end": "21920"
  },
  {
    "text": "we'll start off with i'll give us a quick 101 hopefully quick just about what websockets look like both on the",
    "start": "21920",
    "end": "28160"
  },
  {
    "text": "wire on that protocol as well as in the browser what the java what the javascript interface looks like and from",
    "start": "28160",
    "end": "34480"
  },
  {
    "text": "there we're going to depart and talk a little bit about what the web sockets look like on the internet today as well",
    "start": "34480",
    "end": "40480"
  },
  {
    "text": "as some predictions about where security problems could be in the use of websockets or the misuse of websockets",
    "start": "40480",
    "end": "48320"
  },
  {
    "text": "so the coolest thing about websockets is we finally get bi-directional communications in the web browser",
    "start": "49520",
    "end": "55199"
  },
  {
    "text": "so from the rfc that's what it tells us three really cool things that duplex",
    "start": "55199",
    "end": "60960"
  },
  {
    "text": "communication untrusted code so this isn't a surprise to anyone of course but we're still",
    "start": "60960",
    "end": "67119"
  },
  {
    "text": "dealing with a web browser that may or may not be malicious or compromised or have other male intent",
    "start": "67119",
    "end": "73840"
  },
  {
    "text": "and as i mentioned we'll see how many people are actually using websockets so far",
    "start": "73840",
    "end": "79759"
  },
  {
    "text": "now websockets came about because this type of bi-directional communication has been faked for a long time web",
    "start": "79759",
    "end": "86240"
  },
  {
    "text": "developers obviously have a use for it they have a need for it and they've been doing things like long polling xhr",
    "start": "86240",
    "end": "92240"
  },
  {
    "text": "requests but what these boil down to are kind of forcing",
    "start": "92240",
    "end": "98159"
  },
  {
    "text": "a persistent long-term connections on top of rfc 2616. http wasn't really",
    "start": "98159",
    "end": "104720"
  },
  {
    "text": "intended for that type of use and to a degree some web servers weren't really designed",
    "start": "104720",
    "end": "110640"
  },
  {
    "text": "with this in mind you have one thread per request so it would be easy to dos them also if you're talking from the",
    "start": "110640",
    "end": "116479"
  },
  {
    "text": "browser's perspective you have per domain connection limits so that limits how many xhrs you can be",
    "start": "116479",
    "end": "123520"
  },
  {
    "text": "launching or how many you can be using and if you are doing polling then you have to figure out some magic polling",
    "start": "123520",
    "end": "129840"
  },
  {
    "text": "frequency so you also don't accidentally dos your own web server trying to get status updates run chat messages tweet",
    "start": "129840",
    "end": "137840"
  },
  {
    "text": "tweet updates and so on and all of this was just to be done so that the browser knows",
    "start": "137840",
    "end": "144239"
  },
  {
    "text": "when the server has something ready to send to it",
    "start": "144239",
    "end": "148239"
  },
  {
    "text": "so there's two major aspects of websockets there is the protocol layer these are the data frames that are",
    "start": "149599",
    "end": "155760"
  },
  {
    "text": "sending the data back and forth over tcp that's what 6455 is and then there is the browser connection",
    "start": "155760",
    "end": "162239"
  },
  {
    "text": "that's a very simple interface and from a securities perspective simple is good it's easier to understand it's easier to",
    "start": "162239",
    "end": "168720"
  },
  {
    "text": "test it's easier to look at and what we'll see in a second in a demo is that you have two major event",
    "start": "168720",
    "end": "175200"
  },
  {
    "text": "handlers you have an on message that you get data coming into the browser and you have send to get the data out of the",
    "start": "175200",
    "end": "181280"
  },
  {
    "text": "browser one of the nice things with websockets is that yes you can still send json xml",
    "start": "181280",
    "end": "187920"
  },
  {
    "text": "other text-based formats over it but depending on the browser or when implementation gets up catches up with",
    "start": "187920",
    "end": "195599"
  },
  {
    "text": "design you'll also be able to deal with non-strings you can do blobs or by or",
    "start": "195599",
    "end": "201360"
  },
  {
    "text": "array buffers and when that's going to help with sending things like images audio even video you can even have a",
    "start": "201360",
    "end": "207440"
  },
  {
    "text": "pure javascript audio decoder and for that matter websockets is just",
    "start": "207440",
    "end": "212799"
  },
  {
    "text": "really a transport layer it's a little bit more efficient than something like rfc 1149 but you really can send",
    "start": "212799",
    "end": "219840"
  },
  {
    "text": "anything over it you could send websockets over websockets if you wish vnc and these are some of the things when we",
    "start": "219840",
    "end": "225920"
  },
  {
    "text": "start to talk about security that we'll come back to but i think now vaughn are you ready for",
    "start": "225920",
    "end": "231040"
  },
  {
    "text": "a demo just to show web sockets in action",
    "start": "231040",
    "end": "235599"
  },
  {
    "text": "this little demo is entirely written on javascript",
    "start": "236560",
    "end": "241920"
  },
  {
    "text": "on a client side and pipes my face through sockets web sockets",
    "start": "241920",
    "end": "250239"
  },
  {
    "text": "from a java based server captures the frames and sends them",
    "start": "250239",
    "end": "257120"
  },
  {
    "text": "jpeg per jpeg on uh this",
    "start": "257120",
    "end": "262960"
  },
  {
    "text": "couple of lines of code here are basically changing data url and making the",
    "start": "262960",
    "end": "270800"
  },
  {
    "text": "illusion of a video this is interactive and you see i can",
    "start": "270800",
    "end": "276000"
  },
  {
    "text": "pan it and also there is a",
    "start": "276000",
    "end": "283040"
  },
  {
    "text": "functionality that was supposed to make everything green and but",
    "start": "283040",
    "end": "289759"
  },
  {
    "text": "it it may work may not we don't know but we don't need it probably because we drank so much yesterday we are green",
    "start": "289759",
    "end": "296160"
  },
  {
    "text": "already let's see if it works yeah it turns everything",
    "start": "296160",
    "end": "301919"
  },
  {
    "text": "into kind of 70s funky underwear hold style video",
    "start": "301919",
    "end": "309520"
  },
  {
    "text": "and the processing is done on a server what what this",
    "start": "309520",
    "end": "315199"
  },
  {
    "text": "web app does is literally those few lines of codes",
    "start": "315199",
    "end": "320240"
  },
  {
    "text": "and another thing to highlight here is that if you if you can notice when it's flashing blue that's when data is coming",
    "start": "320240",
    "end": "325919"
  },
  {
    "text": "in and out and the point about websockets here is this is over a single tcp connection so we didn't have to do",
    "start": "325919",
    "end": "332000"
  },
  {
    "text": "anything fancy with multiple xhr requests or we're losing anything as far as polling or or a latency and we are",
    "start": "332000",
    "end": "340720"
  },
  {
    "text": "obviously we're just faking this uh persistence of vision so it looks like video but it really as wagon said it's",
    "start": "340720",
    "end": "346320"
  },
  {
    "text": "just a bunch of sequential jpegs anything else you want to mention on that no cool back to you mike",
    "start": "346320",
    "end": "354960"
  },
  {
    "text": "so i will as an aside it is possible to bring websockets or websocket like",
    "start": "356560",
    "end": "362720"
  },
  {
    "text": "behavior into the browser you can do so either with flash using the websocket.js project or you can stick with javascript",
    "start": "362720",
    "end": "370479"
  },
  {
    "text": "using a websocket like communication that's really just back ended by long pulling in",
    "start": "370479",
    "end": "375759"
  },
  {
    "text": "xhr but we just kind of mentioned this in passing because our focus is on websockets and html5 because html5 the",
    "start": "375759",
    "end": "384639"
  },
  {
    "text": "one of the benefits or one of its intents is that we have cross browser cross platform no need for plugins",
    "start": "384639",
    "end": "391840"
  },
  {
    "text": "right once run everywhere and that's why we want to deal with websockets today",
    "start": "391840",
    "end": "398479"
  },
  {
    "text": "most of the modern browser support websockets modern in this sense meaning something that was released or has been",
    "start": "398479",
    "end": "404639"
  },
  {
    "text": "updated in the past three or four months um and it's on by default in opera however you do have to go and enable it",
    "start": "404639",
    "end": "412479"
  },
  {
    "text": "through the preferences panel but really simple to do so in the demo that van just was showing",
    "start": "412479",
    "end": "419120"
  },
  {
    "text": "us there was a lot there was just a few things behind going back and forth between the browser and client that i'll",
    "start": "419120",
    "end": "424560"
  },
  {
    "text": "speak about more now the websockets is going to start off with an http handshake",
    "start": "424560",
    "end": "430160"
  },
  {
    "text": "very simple very straightforward and then it's going to switch that protocol to those data frames that are really",
    "start": "430160",
    "end": "436000"
  },
  {
    "text": "these low overhead um packets and they're low overhead because they don't have the headers",
    "start": "436000",
    "end": "442479"
  },
  {
    "text": "cookies or authentication mechanisms associated with web requests http",
    "start": "442479",
    "end": "447599"
  },
  {
    "text": "however from a security perspective they don't have the headers the cookies the",
    "start": "447599",
    "end": "452639"
  },
  {
    "text": "authorization tokens associated with an http request so this is we'll come back",
    "start": "452639",
    "end": "458400"
  },
  {
    "text": "to this a few times but this drives home the point that websockets itself is just a transport layer we're just shuffling bits and",
    "start": "458400",
    "end": "465599"
  },
  {
    "text": "bytes from one end point to another and the security of that protocol and how those bytes are consumed that's what",
    "start": "465599",
    "end": "472080"
  },
  {
    "text": "that that's where the real security failures are or that from your perspective the interesting aspects",
    "start": "472080",
    "end": "478479"
  },
  {
    "text": "so the challenge again looks pretty familiar to a normal http request you have a connection asking to upgrade to",
    "start": "478479",
    "end": "484400"
  },
  {
    "text": "websockets and you have a websocket key",
    "start": "484400",
    "end": "489680"
  },
  {
    "text": "to which the server responds with a challenge this is a challenge response",
    "start": "489680",
    "end": "494800"
  },
  {
    "text": "and the challenge response itself is not is not something that's cryptographically strong in terms of",
    "start": "494800",
    "end": "500080"
  },
  {
    "text": "identity all it's intended to do is say that you are actually talking to",
    "start": "500080",
    "end": "505599"
  },
  {
    "text": "an endpoint that speaks websocket so it's not supposed to prove that you're still speaking to the same server you",
    "start": "505599",
    "end": "511840"
  },
  {
    "text": "thought you were at the beginning of the connection nor that the server hasn't been compromised obviously or is legitimately uh",
    "start": "511840",
    "end": "518839"
  },
  {
    "text": "www.foo.com the only thing here is the id is identifying the endpoint to prevent some",
    "start": "518839",
    "end": "524480"
  },
  {
    "text": "things like cross protocol attacks so that you can't turn that web sockets and start make it talk to an smpt server",
    "start": "524480",
    "end": "531680"
  },
  {
    "text": "start sending spam mail or something like that so just want to highlight that point that it's just about identifying",
    "start": "531680",
    "end": "537760"
  },
  {
    "text": "the the websocket not identifying the server there's some other policies that",
    "start": "537760",
    "end": "543360"
  },
  {
    "text": "influence how websockets are controlled or how they're how they perform in the browser you can have the origin header",
    "start": "543360",
    "end": "549200"
  },
  {
    "text": "associated with it so this is good you probably already familiar with origin header from csrf as a csrf",
    "start": "549200",
    "end": "555440"
  },
  {
    "text": "countermeasure another thing that the web has tried to learn from the past is the idea of mixed",
    "start": "555440",
    "end": "560720"
  },
  {
    "text": "content it's supposed to be the case that if you load a resource over secure connection https for example you should",
    "start": "560720",
    "end": "567440"
  },
  {
    "text": "not be able to establish a plain text websocket connection and obviously this is something that is",
    "start": "567440",
    "end": "572880"
  },
  {
    "text": "extra important in the days of ubiquitous wifi let alone you know networks like def at defcon",
    "start": "572880",
    "end": "580000"
  },
  {
    "text": "and then there are other things that are intended to minimize the spec for example says you know",
    "start": "580000",
    "end": "585120"
  },
  {
    "text": "don't put too much verbose feedback into the reasons behind connection errors again the intention to limit the use of",
    "start": "585120",
    "end": "592000"
  },
  {
    "text": "websockets for doing things like host lives or port scanning but again this is that would just be a different way",
    "start": "592000",
    "end": "598720"
  },
  {
    "text": "of using techniques port scanning techniques that we already know about using image tags iframes and so on websocks is just yet",
    "start": "598720",
    "end": "606959"
  },
  {
    "text": "one more network layer or network request you can make within a browser",
    "start": "606959",
    "end": "612000"
  },
  {
    "text": "and it is supposed to work well with others in terms of other html5 technologies for example depending on",
    "start": "612000",
    "end": "617920"
  },
  {
    "text": "the browser web workers can also spawn uh websocket objects when sergey will",
    "start": "617920",
    "end": "623920"
  },
  {
    "text": "talk a little bit about some of the potentials of denial of service that come with that",
    "start": "623920",
    "end": "629519"
  },
  {
    "text": "so real quickly i mentioned simplicity and what the what it looks like in the browser",
    "start": "629519",
    "end": "635519"
  },
  {
    "text": "the websocket object has a few read-only attributes associated with it um some",
    "start": "635519",
    "end": "640800"
  },
  {
    "text": "states regarding its its connection state and then four event handlers close",
    "start": "640800",
    "end": "646320"
  },
  {
    "text": "error message and if i can read open and all you really need to do is tie a",
    "start": "646320",
    "end": "652560"
  },
  {
    "text": "javascript function to one of those to get data in and out of the browser as you saw it was that simple to basically",
    "start": "652560",
    "end": "660000"
  },
  {
    "text": "recreate using websockets and an image tag our our faked version of a html5",
    "start": "660000",
    "end": "665920"
  },
  {
    "text": "video tag for example or we could have done the same thing with html5 canvas but we just wanted to focus on",
    "start": "665920",
    "end": "671440"
  },
  {
    "text": "websockets so i'm going to wrap up a few a few more things about",
    "start": "671440",
    "end": "677600"
  },
  {
    "text": "the protocol before we get to some more you know real life examples one other thing that we need to do now",
    "start": "677600",
    "end": "683360"
  },
  {
    "text": "is we've seen how that http handshake goes there's a challenge response",
    "start": "683360",
    "end": "688480"
  },
  {
    "text": "once that challenge response is finished we move on to sending back and forth the web frame data these data frames and",
    "start": "688480",
    "end": "695600"
  },
  {
    "text": "this is where you have minimum overhead of at least two bytes which is much better than you know all the hp headers",
    "start": "695600",
    "end": "702000"
  },
  {
    "text": "and cookies and so on the first byte is going to be a fin flag and a fin there just means is",
    "start": "702000",
    "end": "708880"
  },
  {
    "text": "associated with the number of messages that are tied together not like a tcp fin you have an op code that's going to",
    "start": "708880",
    "end": "714800"
  },
  {
    "text": "tell you this is carrying text or binary or it's time to close a connection or i need to do a ping keep alive just to",
    "start": "714800",
    "end": "720959"
  },
  {
    "text": "make sure that connection that socket is still available you have a flag about masking which i'll",
    "start": "720959",
    "end": "726000"
  },
  {
    "text": "get to in a moment and then you have a length which can be variable so you can either have a payload that is 7 bits or",
    "start": "726000",
    "end": "732399"
  },
  {
    "text": "a 16 bit length or even a 64 bit length if you have that much patience",
    "start": "732399",
    "end": "739040"
  },
  {
    "text": "the masking data is a flag that says that data coming from the browser is",
    "start": "739839",
    "end": "745839"
  },
  {
    "text": "going to be masked but data coming from the server typically isn't in a websocket connection",
    "start": "745839",
    "end": "751600"
  },
  {
    "text": "and the masking is important to use this term instead of encryption because it's not encryption it is a 32-bit",
    "start": "751600",
    "end": "758160"
  },
  {
    "text": "pseudo-random value it's xoring the payload data as you can see in the the",
    "start": "758160",
    "end": "763279"
  },
  {
    "text": "screen captures here but what it's intended to do is to prevent the javascript layer from",
    "start": "763279",
    "end": "770320"
  },
  {
    "text": "abusing a websocket connection and doing something like sending raw smp smtp",
    "start": "770320",
    "end": "776160"
  },
  {
    "text": "commands to an email server sending spam which is something that people have tried to get browsers to do for the past",
    "start": "776160",
    "end": "781760"
  },
  {
    "text": "20 years if you look at the history of web security and the reason so the mask itself",
    "start": "781760",
    "end": "788240"
  },
  {
    "text": "is part of the payload part of that message so even if you were to try to think of this as encryption the",
    "start": "788240",
    "end": "793760"
  },
  {
    "text": "decryption key is sent along with the message itself so i want to make sure you don't have that",
    "start": "793760",
    "end": "799040"
  },
  {
    "text": "misunderstanding that what what masking is used for and we actually have some comments a little bit later on about",
    "start": "799040",
    "end": "804560"
  },
  {
    "text": "some of the implications masking may have about wasps and ids's so you can maybe start thinking of that right now",
    "start": "804560",
    "end": "812160"
  },
  {
    "text": "the variable length um as i mentioned up to 125 bytes of your payload it'll be",
    "start": "812160",
    "end": "818880"
  },
  {
    "text": "it will be encoded in those seven bits if those seven bits equal 126 that's a",
    "start": "818880",
    "end": "825040"
  },
  {
    "text": "special indicator that says this is now a 16 16-bit flag or a 16-bit uh length",
    "start": "825040",
    "end": "830160"
  },
  {
    "text": "and if that value is equal to 127 that says it's a massive 64-bit flag um so",
    "start": "830160",
    "end": "836320"
  },
  {
    "text": "and 2-64 is probably about how much porn there is on the internet or something who knows this is future proof so that's",
    "start": "836320",
    "end": "842720"
  },
  {
    "text": "why the the 64 bits is so large one side note here however is a number",
    "start": "842720",
    "end": "847760"
  },
  {
    "text": "like 19 can be represented in 7 bits 16 bits 64 bits",
    "start": "847760",
    "end": "853839"
  },
  {
    "text": "if you think of utf-8 and over long representations percent z zero percent",
    "start": "853839",
    "end": "859120"
  },
  {
    "text": "day seven and now historically that's been used to bypass filters or to get around ids's or wafts",
    "start": "859120",
    "end": "866000"
  },
  {
    "text": "there may be something here now this point it's just conjecture we don't have a good solid example but it's",
    "start": "866000",
    "end": "872160"
  },
  {
    "text": "something to consider something to think about i mentioned how simple the protocol is",
    "start": "872160",
    "end": "878800"
  },
  {
    "text": "here's a basically all you just about all you need to dissect a websocket data",
    "start": "878800",
    "end": "884240"
  },
  {
    "text": "frame using scapy so it is that self-contained it is that simple and really the only confusing part is just",
    "start": "884240",
    "end": "890480"
  },
  {
    "text": "trying to figure out should is the length 7 16 or 64 bits so",
    "start": "890480",
    "end": "896320"
  },
  {
    "text": "as i wrap up one of the things we're going to talk about is the security of websocket protocol and how it defines",
    "start": "896320",
    "end": "902480"
  },
  {
    "text": "security well one of the things that it does is leave that security up to you as we mentioned",
    "start": "902480",
    "end": "908480"
  },
  {
    "text": "is we want to emphasize websocket is just that transport layer it's shuffling bits from a to b and it doesn't it's not",
    "start": "908480",
    "end": "916079"
  },
  {
    "text": "making your json communications anymore less secure it's not making your text communications any more or less secure",
    "start": "916079",
    "end": "922399"
  },
  {
    "text": "and that's where we're going to focus on and talk about a little bit more so with that hands over to vaughn and talk about",
    "start": "922399",
    "end": "928800"
  },
  {
    "text": "what he's got thank you mike let's see what are the potential usages",
    "start": "928800",
    "end": "936000"
  },
  {
    "text": "of web sockets we've seen many",
    "start": "936000",
    "end": "942880"
  },
  {
    "text": "cool games implemented with web sockets there are some mobile",
    "start": "942880",
    "end": "947920"
  },
  {
    "text": "applications that are basically front ends for the web apps",
    "start": "947920",
    "end": "954079"
  },
  {
    "text": "also few very interesting implementations of web sockets",
    "start": "954480",
    "end": "959759"
  },
  {
    "text": "that are in uh embedded systems for example the the",
    "start": "959759",
    "end": "966399"
  },
  {
    "text": "example above has capacity to",
    "start": "966399",
    "end": "973839"
  },
  {
    "text": "provide website websocket connection to peak microcontroller and",
    "start": "973839",
    "end": "979040"
  },
  {
    "text": "with that hobbyists can create all kind of crazy stuff that is controlled from a web",
    "start": "979040",
    "end": "988480"
  },
  {
    "text": "we've seen few professional usages",
    "start": "989279",
    "end": "994720"
  },
  {
    "text": "that are for example this lab view based",
    "start": "994720",
    "end": "1002000"
  },
  {
    "text": "sporting event measurement organizational tool uh",
    "start": "1002160",
    "end": "1008160"
  },
  {
    "text": "most probably is going to be used in a day or two in london olympics so basically ipad app",
    "start": "1008160",
    "end": "1015519"
  },
  {
    "text": "uh talks to the labview server through websockets and labview controls the",
    "start": "1015519",
    "end": "1022000"
  },
  {
    "text": "measurement sporting measurement equipment",
    "start": "1022000",
    "end": "1027199"
  },
  {
    "text": "to the best of our knowledge there are seven or eight",
    "start": "1027679",
    "end": "1034558"
  },
  {
    "text": "rfc compliant server implementations maybe more there are others that",
    "start": "1034559",
    "end": "1042240"
  },
  {
    "text": "are catching up they're they're in a good state",
    "start": "1042240",
    "end": "1048240"
  },
  {
    "text": "compliance-wise or feature-wise but since rfc is pretty fresh",
    "start": "1048240",
    "end": "1054160"
  },
  {
    "text": "they are still catching up there are almost all the almost all the",
    "start": "1054160",
    "end": "1060320"
  },
  {
    "text": "programming languages now major programming languages support web sockets and major",
    "start": "1060320",
    "end": "1066720"
  },
  {
    "text": "javascript libraries like jquery socket ion no jails not js picked up",
    "start": "1066720",
    "end": "1072880"
  },
  {
    "text": "web circuits we think that user capacity wise",
    "start": "1072880",
    "end": "1080400"
  },
  {
    "text": "web socket applications will have this have similar to xhr based",
    "start": "1080400",
    "end": "1090640"
  },
  {
    "text": "similar performance user capacity wise to the xhr-based",
    "start": "1090640",
    "end": "1098160"
  },
  {
    "text": "applications and their bot will be basically limited to number of",
    "start": "1098160",
    "end": "1103600"
  },
  {
    "text": "connections if if it's a full duplex if it's not full duplex and the persistent connection is not",
    "start": "1103600",
    "end": "1110480"
  },
  {
    "text": "required websocket usage in those applications may be",
    "start": "1110480",
    "end": "1116400"
  },
  {
    "text": "overkill since traditional http reuses connection pool",
    "start": "1116400",
    "end": "1122880"
  },
  {
    "text": "and web circuit is kind of one user to one web socket connection",
    "start": "1122880",
    "end": "1129600"
  },
  {
    "text": "here we see this huge number 25 sticking on the right",
    "start": "1132480",
    "end": "1138559"
  },
  {
    "text": "and that's what we saw on our little demo that",
    "start": "1138559",
    "end": "1144480"
  },
  {
    "text": "that was the header overhead",
    "start": "1144480",
    "end": "1148919"
  },
  {
    "text": "xhr compared to web sockets if if we were running the same webcam up",
    "start": "1150160",
    "end": "1157679"
  },
  {
    "text": "implemented web sockets versus traditional http",
    "start": "1157679",
    "end": "1163039"
  },
  {
    "text": "and this is basically as mike mentioned is because of the",
    "start": "1163039",
    "end": "1168640"
  },
  {
    "text": "compactness of the uh protocol uh handshake is done only once and then",
    "start": "1168720",
    "end": "1175760"
  },
  {
    "text": "consecutive packets can have overhead as low as two",
    "start": "1175760",
    "end": "1182080"
  },
  {
    "text": "bytes there is a little problem here there is no compression supported by",
    "start": "1182080",
    "end": "1187600"
  },
  {
    "text": "default rfc is optional",
    "start": "1187600",
    "end": "1193039"
  },
  {
    "text": "and there's hope that vendors implementers will pick that up as",
    "start": "1193039",
    "end": "1199919"
  },
  {
    "text": "non-optional and will help with bandwidth usage there",
    "start": "1199919",
    "end": "1207840"
  },
  {
    "text": "now i want to hand it over to sergey he has more details and better data",
    "start": "1208080",
    "end": "1215679"
  },
  {
    "text": "hello so we tried to figure out if there's anybody using web sockets in real world",
    "start": "1215679",
    "end": "1223039"
  },
  {
    "text": "and there are two ways of doing it one would be hire thousands of guys and they",
    "start": "1223039",
    "end": "1229200"
  },
  {
    "text": "navigate to any website in the world and write down if they use web sockets or not or automate it and we choose",
    "start": "1229200",
    "end": "1236480"
  },
  {
    "text": "the second approach we just took webkit browser headless",
    "start": "1236480",
    "end": "1242799"
  },
  {
    "text": "no need for ui wrote a little wrapper and basically the only functionality almost the only",
    "start": "1242799",
    "end": "1248799"
  },
  {
    "text": "functionality that application has is overloading in javascript api",
    "start": "1248799",
    "end": "1254880"
  },
  {
    "text": "overloading web circuit constructor so whenever that web socket constructor is being called we got a line in our",
    "start": "1254880",
    "end": "1261360"
  },
  {
    "text": "database this approach might not cover some cases like if there is a user interaction",
    "start": "1261360",
    "end": "1267760"
  },
  {
    "text": "needed to instantiate a websocket like somebody needs to click something to create it",
    "start": "1267760",
    "end": "1272799"
  },
  {
    "text": "but we think this should show us the pretty much the real picture",
    "start": "1272799",
    "end": "1277919"
  },
  {
    "text": "of web circuit usage and the results are",
    "start": "1277919",
    "end": "1283600"
  },
  {
    "text": "that numbers are pretty frustrating these numbers on the",
    "start": "1283600",
    "end": "1288640"
  },
  {
    "text": "on the left are like ranges from zero to ten thousand a hundred thousand",
    "start": "1288640",
    "end": "1294960"
  },
  {
    "text": "uh line in alexa top we pick six hundred thousand at least",
    "start": "1294960",
    "end": "1300720"
  },
  {
    "text": "and like as you can see it's like around 10 i think only 10 web applications are using web circuits on their landing page",
    "start": "1300720",
    "end": "1308960"
  },
  {
    "text": "and so like more website is popular the less chances they are trying to change",
    "start": "1308960",
    "end": "1314720"
  },
  {
    "text": "something and use something cooler than traditional http",
    "start": "1314720",
    "end": "1319840"
  },
  {
    "text": "so some details so number wise it's like only 0.15",
    "start": "1321679",
    "end": "1327840"
  },
  {
    "text": "percent of websites from alexa top one uh six hundred thousand are using web",
    "start": "1327840",
    "end": "1334400"
  },
  {
    "text": "circuits on their landing page and but uh when we looked closer at the uh",
    "start": "1334400",
    "end": "1339440"
  },
  {
    "text": "the data turned out that uh uh 95 of those captured websocket",
    "start": "1339440",
    "end": "1346000"
  },
  {
    "text": "connections were going to the same vendor it was a customer support chat system which is",
    "start": "1346000",
    "end": "1351120"
  },
  {
    "text": "free and like anybody was putting that chat widget on their page even probably",
    "start": "1351120",
    "end": "1358080"
  },
  {
    "text": "without using it but when we got rid of that that one single uh customer support",
    "start": "1358080",
    "end": "1363840"
  },
  {
    "text": "support chat system uh the picture was that",
    "start": "1363840",
    "end": "1368880"
  },
  {
    "text": "um basically less than one percent were using encrypted connections uh which is",
    "start": "1368880",
    "end": "1375039"
  },
  {
    "text": "pretty uh i would say scary you know like yeah if you if we get got",
    "start": "1375039",
    "end": "1380799"
  },
  {
    "text": "rid of that noise making",
    "start": "1380799",
    "end": "1386400"
  },
  {
    "text": "customer support chat system the numbers are these like in among 600 000 websites only like 20",
    "start": "1386400",
    "end": "1393440"
  },
  {
    "text": "something we're using web sockets on their landing page which is again",
    "start": "1393440",
    "end": "1398480"
  },
  {
    "text": "frustrating some details on uh like",
    "start": "1398480",
    "end": "1404720"
  },
  {
    "text": "how they were using web sockets uh a couple of them were using it as a news",
    "start": "1404720",
    "end": "1409840"
  },
  {
    "text": "feed but basically the only single direction just a replacement for uh rc rss probably",
    "start": "1409840",
    "end": "1418559"
  },
  {
    "text": "which probably makes sense if you if your web app is serving some new news blobs",
    "start": "1418559",
    "end": "1425520"
  },
  {
    "text": "frequently enough and there it doesn't make sense to reopen a connection it probably makes sense to use it as a news feed",
    "start": "1425520",
    "end": "1432240"
  },
  {
    "text": "a couple of not couple actually a lot of russian mainly in brazilian",
    "start": "1432240",
    "end": "1439280"
  },
  {
    "text": "some shopping websites were sending back to some third-party marketing problem server",
    "start": "1439280",
    "end": "1444720"
  },
  {
    "text": "your every mouse click and keystrokes on on that web application probably for some marketing uses hopefully for",
    "start": "1444720",
    "end": "1450960"
  },
  {
    "text": "marketing queues and not for something malicious some question and answer websites uh",
    "start": "1450960",
    "end": "1458400"
  },
  {
    "text": "using websockets to like you post your question on the website and then somebody's typing the answer already you",
    "start": "1458400",
    "end": "1465120"
  },
  {
    "text": "see he's typing the answer but the answer is not there yet so you can kind of track what's happening in real",
    "start": "1465120",
    "end": "1471679"
  },
  {
    "text": "time and stock price i saw very cool chat implemented purely over web sockets even",
    "start": "1471679",
    "end": "1478720"
  },
  {
    "text": "like images or icons were being delivered to the browser over web sockets",
    "start": "1478720",
    "end": "1484559"
  },
  {
    "text": "and some protocol usage uh json was dominating",
    "start": "1484559",
    "end": "1491360"
  },
  {
    "text": "uh we saw xml being transferred back and forth over web circuits we saw some javascript",
    "start": "1491360",
    "end": "1498559"
  },
  {
    "text": "look-alike data blobs and i guess they're they were evaluating those that function",
    "start": "1498559",
    "end": "1505600"
  },
  {
    "text": "uh look-alike think right like without checking anything um could be potentially uh dangerous or",
    "start": "1505600",
    "end": "1514000"
  },
  {
    "text": "somebody switched from all http to websockets but",
    "start": "1514000",
    "end": "1519440"
  },
  {
    "text": "the way he was transferring the data these name value pairs delimited with ampersand remains",
    "start": "1519440",
    "end": "1525120"
  },
  {
    "text": "the same so he just switch the transport layer",
    "start": "1525120",
    "end": "1530640"
  },
  {
    "text": "we saw a couple of interesting things like somebody was opening not somebody's website was opening uh plain text connection to port 443 i",
    "start": "1531520",
    "end": "1538880"
  },
  {
    "text": "don't know probably maybe to bypass some proxy things or to",
    "start": "1538880",
    "end": "1544080"
  },
  {
    "text": "make his customers think he's using encrypted connection by seeing that 443",
    "start": "1544080",
    "end": "1550000"
  },
  {
    "text": "magic number uh yeah and here we're trying to summarize",
    "start": "1550000",
    "end": "1556720"
  },
  {
    "text": "what's holding down the wider adoption of web circuits and we hope that just more people would",
    "start": "1556720",
    "end": "1564000"
  },
  {
    "text": "start would realize the benefits of using web circuits and start using it",
    "start": "1564000",
    "end": "1570840"
  },
  {
    "text": "now time for oh no no demo later um",
    "start": "1570880",
    "end": "1577600"
  },
  {
    "text": "yeah so we just reviewed the adoption and like how people are using web circuits in real life and now let's",
    "start": "1577600",
    "end": "1583120"
  },
  {
    "text": "discuss some security related things",
    "start": "1583120",
    "end": "1587520"
  },
  {
    "text": "as mike mentioned web circuits are just a transport another another transport thing",
    "start": "1588159",
    "end": "1594240"
  },
  {
    "text": "option between two peers on the internet and uh",
    "start": "1594240",
    "end": "1600080"
  },
  {
    "text": "websockets are not going to fix your existing problems on web applications like if you have xss or",
    "start": "1600080",
    "end": "1605679"
  },
  {
    "text": "if you have csrf that would still be there however",
    "start": "1605679",
    "end": "1612760"
  },
  {
    "text": "however there are things um around web sockets that are being",
    "start": "1615520",
    "end": "1621200"
  },
  {
    "text": "derived from http from like old style data transfer and we for we can start with mixed",
    "start": "1621200",
    "end": "1627440"
  },
  {
    "text": "content handling uh policy",
    "start": "1627440",
    "end": "1632960"
  },
  {
    "text": "around web circuits so points are that",
    "start": "1633840",
    "end": "1639200"
  },
  {
    "text": "plain text websocket connection attacker can sniff as easy as he would",
    "start": "1639200",
    "end": "1644799"
  },
  {
    "text": "sniff plain text http which makes sense",
    "start": "1644799",
    "end": "1650159"
  },
  {
    "text": "if if and many the middle is as effective as it was with http",
    "start": "1651360",
    "end": "1657600"
  },
  {
    "text": "um neither client nor server could be trusted if connection is plain text",
    "start": "1657600",
    "end": "1663840"
  },
  {
    "text": "because",
    "start": "1663840",
    "end": "1666840"
  },
  {
    "text": "if if resource which delivered a code to the browser which is going to instantiate a web socket",
    "start": "1669600",
    "end": "1676000"
  },
  {
    "text": "could be sniffed then somebody can just overload uh websocket constructor or send and receive functions and tweak the",
    "start": "1676000",
    "end": "1682559"
  },
  {
    "text": "data or i don't know forge the data or do whatever he basically wants",
    "start": "1682559",
    "end": "1689520"
  },
  {
    "text": "rfc tries to take care of the website's rfc 6455 tries to take care of some",
    "start": "1689520",
    "end": "1695039"
  },
  {
    "text": "issues by restricting to uh restrict restricting",
    "start": "1695039",
    "end": "1700240"
  },
  {
    "text": "websockets to uh by um not allowing to create plain plain text",
    "start": "1700240",
    "end": "1707200"
  },
  {
    "text": "web socket connection if code which create with which instances the web circuit was delivered over encrypted",
    "start": "1707200",
    "end": "1713279"
  },
  {
    "text": "channels so kind of no uh protocol downgrade but unfortunately",
    "start": "1713279",
    "end": "1718559"
  },
  {
    "text": "only firefox implements this policy uh none of webkit-based browser uh",
    "start": "1718559",
    "end": "1724720"
  },
  {
    "text": "included including mobile versions opera doesn't implement it either so",
    "start": "1724720",
    "end": "1730240"
  },
  {
    "text": "there's things to improve in the browsers denial of service could be a",
    "start": "1730240",
    "end": "1736840"
  },
  {
    "text": "potential could be denial service attacks could be easily achievable with web sockets way",
    "start": "1736840",
    "end": "1743200"
  },
  {
    "text": "easier than with http uh because browsers are treating web sockets",
    "start": "1743200",
    "end": "1749279"
  },
  {
    "text": "connection limits differently from http and like they are not limiting them by domains like for example firefox limits",
    "start": "1749279",
    "end": "1756720"
  },
  {
    "text": "uh concurrent http request http connections to the same domain by six or four some",
    "start": "1756720",
    "end": "1763120"
  },
  {
    "text": "low number and with web sockets numbers are uh totally different like experimentally i tried",
    "start": "1763120",
    "end": "1770240"
  },
  {
    "text": "numbers look like this in this table except in firefox it's hardcoded in settings it's not hardcoded it's",
    "start": "1770240",
    "end": "1776399"
  },
  {
    "text": "uh default value is 200 you can change it from that about config",
    "start": "1776399",
    "end": "1781520"
  },
  {
    "text": "window and yeah what can be done somebody can just send a malicious javascript code into",
    "start": "1781520",
    "end": "1787679"
  },
  {
    "text": "someone's browser and like in cycle open or try to open 10 000 connections uh",
    "start": "1787679",
    "end": "1795919"
  },
  {
    "text": "either browser would die because of memory or i don't know file descriptor limit would heat or something like that or",
    "start": "1795919",
    "end": "1802880"
  },
  {
    "text": "even if it was executed in something like firefox once",
    "start": "1802880",
    "end": "1809200"
  },
  {
    "text": "that malicious guy opened 200 connections your other tabs that are using web circuits won't be able to establish a connection and you won't",
    "start": "1809200",
    "end": "1815440"
  },
  {
    "text": "know what happened because there's no indication that you hit that limit",
    "start": "1815440",
    "end": "1820840"
  },
  {
    "text": "so one of potential uses and on like server side",
    "start": "1820840",
    "end": "1826960"
  },
  {
    "text": "the same guy can pick the same same same bad guy can pick the same compromise browser execute some",
    "start": "1826960",
    "end": "1833440"
  },
  {
    "text": "malicious javascript which would open websocket connections to another victim and",
    "start": "1833440",
    "end": "1839919"
  },
  {
    "text": "since numbers are pretty big like starting from 200 to several thousand",
    "start": "1840159",
    "end": "1846640"
  },
  {
    "text": "using having several bots",
    "start": "1846640",
    "end": "1851559"
  },
  {
    "text": "or compromised browsers could be could knock down the entire websocket server",
    "start": "1851840",
    "end": "1858559"
  },
  {
    "text": "stability was why while i was playing with browsers to find the limits because",
    "start": "1858640",
    "end": "1864399"
  },
  {
    "text": "they are not actually described anywhere except for firefox i was able to crash safari uh and it's",
    "start": "1864399",
    "end": "1870720"
  },
  {
    "text": "pretty reproducible i don't know if you can see the stack trace basically to reproduce the the crash uh",
    "start": "1870720",
    "end": "1877840"
  },
  {
    "text": "you open i don't know like 300 or 3000 websocket connections somewhere and then close the",
    "start": "1877840",
    "end": "1884399"
  },
  {
    "text": "browser and then reopen it safari would try to reload",
    "start": "1884399",
    "end": "1889679"
  },
  {
    "text": "the late last loaded page there is a javascript which create which",
    "start": "1889679",
    "end": "1895600"
  },
  {
    "text": "opens websocket connections those connections will be open but since uh these cryptograph",
    "start": "1895600",
    "end": "1901679"
  },
  {
    "text": "cryptographically random values from os function didn't generate the uh",
    "start": "1901679",
    "end": "1909200"
  },
  {
    "text": "um the right number of the heaven hasn't uh managed to generate the",
    "start": "1909760",
    "end": "1915200"
  },
  {
    "text": "that entropy pool yet and probably whoever is calling this function that cryptographically random",
    "start": "1915200",
    "end": "1922080"
  },
  {
    "text": "number doesn't check the return value basically safari crashes so it could be",
    "start": "1922080",
    "end": "1927360"
  },
  {
    "text": "i mean websockets api could be a good uh starting point for for example browser bug",
    "start": "1927360",
    "end": "1934480"
  },
  {
    "text": "the bounty hunters for example so summarizing um",
    "start": "1934480",
    "end": "1940080"
  },
  {
    "text": "what we've found uh that mix mixed content handling policy",
    "start": "1940080",
    "end": "1948799"
  },
  {
    "text": "is not addressed yet properly firefox for example doesn't doesn't let",
    "start": "1948799",
    "end": "1954399"
  },
  {
    "text": "web book create a websocket object inside webworker which is another cool html5",
    "start": "1954399",
    "end": "1961200"
  },
  {
    "text": "feature message size is handled differently firefox recently bumped the limit both",
    "start": "1961200",
    "end": "1967440"
  },
  {
    "text": "in both for outgoing and incoming connections websocket connection website messages from 16 megabytes to 2",
    "start": "1967440",
    "end": "1973200"
  },
  {
    "text": "gigabytes which could be pretty scary imagine somebody",
    "start": "1973200",
    "end": "1980480"
  },
  {
    "text": "running a web server on embedded device or vice versa like client browser is running on uh",
    "start": "1980640",
    "end": "1986640"
  },
  {
    "text": "on iphone like handling",
    "start": "1986640",
    "end": "1991840"
  },
  {
    "text": "websocket windows with two gigabyte of random data data could be",
    "start": "1991840",
    "end": "1997039"
  },
  {
    "text": "a challenging task um",
    "start": "1997039",
    "end": "2002080"
  },
  {
    "text": "some history around browsers like opera disabled web socket support by default you can enable it mike showed how to",
    "start": "2002080",
    "end": "2007519"
  },
  {
    "text": "enable it uh firefox disabled web socket support at",
    "start": "2007519",
    "end": "2012720"
  },
  {
    "text": "some point in gecko 2 i think engine and then because of some problems with cache",
    "start": "2012720",
    "end": "2017919"
  },
  {
    "text": "poisoning with uh of proxies with handshake uh",
    "start": "2017919",
    "end": "2023919"
  },
  {
    "text": "website handshakes um then firefox changed the the uh when",
    "start": "2023919",
    "end": "2030159"
  },
  {
    "text": "when they enabled back the website because they changed the name to most web sockets so",
    "start": "2030159",
    "end": "2035200"
  },
  {
    "text": "anybody would have that dummy uh stupid check if",
    "start": "2035200",
    "end": "2040240"
  },
  {
    "text": "if you can instantiate you if you can't instantiate web socket object you try to instantiate moz websocket but they got",
    "start": "2040240",
    "end": "2045840"
  },
  {
    "text": "rid of that limitation so it's you know it's the same in any browser now uh and yeah ie doesn't support web",
    "start": "2045840",
    "end": "2053200"
  },
  {
    "text": "sockets yet it supports an i10 preview",
    "start": "2053200",
    "end": "2059679"
  },
  {
    "text": "requires windows 8 and i don't have windows 8 and so i",
    "start": "2059679",
    "end": "2065118"
  },
  {
    "text": "never played with ie around web circuits and here is a demo very simple tool",
    "start": "2065359",
    "end": "2071599"
  },
  {
    "text": "that's that is gonna demonstrate how to how how",
    "start": "2071599",
    "end": "2077599"
  },
  {
    "text": "is how easy is to use uh start using web sockets uh",
    "start": "2077599",
    "end": "2084560"
  },
  {
    "text": "so we built uh an application",
    "start": "2086839",
    "end": "2092000"
  },
  {
    "text": "on top of websocket pp web socket server it's c plus plus based using boost very cool",
    "start": "2092000",
    "end": "2099280"
  },
  {
    "text": "server uh so as you",
    "start": "2099280",
    "end": "2105040"
  },
  {
    "text": "see it's like hundred oh i'm sorry",
    "start": "2105040",
    "end": "2109119"
  },
  {
    "text": "like only uh what is it 168 lines of server side code and",
    "start": "2116640",
    "end": "2122960"
  },
  {
    "text": "some some code on client side which should be injected in compromised",
    "start": "2122960",
    "end": "2128960"
  },
  {
    "text": "browser we don't discuss how there are thousands way of ways of doing it like xss or man in the middle or",
    "start": "2128960",
    "end": "2136079"
  },
  {
    "text": "social engineering we we don't discuss that we just want to demonstrate",
    "start": "2136079",
    "end": "2142560"
  },
  {
    "text": "how websockets could be used to control someone's browser easily and with minimum minimum efforts",
    "start": "2142560",
    "end": "2150960"
  },
  {
    "text": "so i launched the server there's my chrome",
    "start": "2150960",
    "end": "2156800"
  },
  {
    "text": "which loads some page which already come from which we assume is compromised and has that malicious victim.js uh",
    "start": "2156800",
    "end": "2165280"
  },
  {
    "text": "javascript file included and some dummy website and",
    "start": "2165280",
    "end": "2171760"
  },
  {
    "text": "chrome allows you to latest chrome allows you to see web socket traffic in developer tools",
    "start": "2172400",
    "end": "2179200"
  },
  {
    "text": "you switch to network you select web circuits here and to reconnect",
    "start": "2179200",
    "end": "2186240"
  },
  {
    "text": "yeah we got our websocket connection let's see what's happening here",
    "start": "2186240",
    "end": "2191680"
  },
  {
    "text": "yeah and on the server side we see that server accepted the connection from the browser now you can i don't know",
    "start": "2191680",
    "end": "2197839"
  },
  {
    "text": "request for i'll restart it",
    "start": "2197839",
    "end": "2203920"
  },
  {
    "text": "here here we have our websocket connection to",
    "start": "2205680",
    "end": "2212000"
  },
  {
    "text": "that attacker web circuit server uh chrome allows you to see the actual",
    "start": "2212000",
    "end": "2218000"
  },
  {
    "text": "payload we just send ready which is five but byte length uh yeah",
    "start": "2218000",
    "end": "2223920"
  },
  {
    "text": "and on server side you for example request for html or render dom",
    "start": "2223920",
    "end": "2230079"
  },
  {
    "text": "or you can do it doesn't matter really what you can do we try to emphasize that",
    "start": "2230079",
    "end": "2236320"
  },
  {
    "text": "it's over web sockets and cool things around",
    "start": "2236320",
    "end": "2241520"
  },
  {
    "text": "circuits would be that none of",
    "start": "2241520",
    "end": "2247119"
  },
  {
    "text": "uh mechanisms that supposed to catch uh malicious traffic won't be able to do",
    "start": "2247119",
    "end": "2252480"
  },
  {
    "text": "that because as we know not there there is no firewalls or ips or ideas systems that",
    "start": "2252480",
    "end": "2258079"
  },
  {
    "text": "are aware of web socket server website protocol and basically they just will miss this",
    "start": "2258079",
    "end": "2265760"
  },
  {
    "text": "any kind of communication over web sockets i don't know something here we",
    "start": "2265760",
    "end": "2271520"
  },
  {
    "text": "go back we say",
    "start": "2271520",
    "end": "2275520"
  },
  {
    "text": "what did you capture use data or you can even navigate away",
    "start": "2276560",
    "end": "2283119"
  },
  {
    "text": "huh something is wrong yeah whatever",
    "start": "2283359",
    "end": "2289040"
  },
  {
    "text": "we don't have internet connection here probably some of javascript libraries libraries were coming from outside",
    "start": "2289040",
    "end": "2294800"
  },
  {
    "text": "so yeah you can launch a dose like point a",
    "start": "2294800",
    "end": "2300799"
  },
  {
    "text": "yeah i'm sorry something",
    "start": "2309280",
    "end": "2313000"
  },
  {
    "text": "yeah whatever",
    "start": "2314800",
    "end": "2317760"
  },
  {
    "text": "like yeah you have to click so far in chrome every time you want to see the updated data in this uh",
    "start": "2321599",
    "end": "2328720"
  },
  {
    "text": "tab right click the the actual websocket url to have the updated data and you can see",
    "start": "2328720",
    "end": "2335359"
  },
  {
    "text": "for all the web socket frames unmasked and unmasked",
    "start": "2335359",
    "end": "2341680"
  },
  {
    "text": "and in plain text so let's go back to",
    "start": "2341680",
    "end": "2347839"
  },
  {
    "text": "the slides so what else",
    "start": "2347839",
    "end": "2354520"
  },
  {
    "text": "uh there are still some issues with handling websocket traffic by proxies",
    "start": "2357040",
    "end": "2362640"
  },
  {
    "text": "and google conducted a a like survey",
    "start": "2362640",
    "end": "2368560"
  },
  {
    "text": "or research in 2010 and it turned out that six only 65 percent of",
    "start": "2368560",
    "end": "2375839"
  },
  {
    "text": "proxy web proxy instances would successfully communicate a browser with",
    "start": "2375839",
    "end": "2381599"
  },
  {
    "text": "web circuit server and the main problem there is that",
    "start": "2381599",
    "end": "2386640"
  },
  {
    "text": "is this connection upgrade by the time those proxies were implemented there was an rfc uh",
    "start": "2386640",
    "end": "2395119"
  },
  {
    "text": "don't remember which one 2068 yeah which tells proxy developers to get rid",
    "start": "2395119",
    "end": "2400960"
  },
  {
    "text": "of this connection upgrade header before they forward the rest of the data to the server",
    "start": "2400960",
    "end": "2406480"
  },
  {
    "text": "they connected to and on the other hand websocket protocol requires to have this connection upgrade",
    "start": "2406480",
    "end": "2413200"
  },
  {
    "text": "so if proxy is not aware of web sockets and doesn't know that it shouldn't strip off",
    "start": "2413200",
    "end": "2419920"
  },
  {
    "text": "the connection upgrade server would just reply with 400 because it's like incomplete handshake request",
    "start": "2419920",
    "end": "2426160"
  },
  {
    "text": "but good thing is uh if you are using encrypted",
    "start": "2426160",
    "end": "2432320"
  },
  {
    "text": "wss protocol encrypted websocket protocol a browser would instead of this",
    "start": "2432320",
    "end": "2438560"
  },
  {
    "text": "type of communication it would send the connect keyword and proxy would establish a tunnel between",
    "start": "2438560",
    "end": "2445599"
  },
  {
    "text": "browser and the server and so it won't access any of the information going back",
    "start": "2445599",
    "end": "2451440"
  },
  {
    "text": "and forth so it won't stream the connection upgrade so for encrypted",
    "start": "2451440",
    "end": "2457520"
  },
  {
    "text": "web socket servers it's not that bad",
    "start": "2457520",
    "end": "2461200"
  },
  {
    "text": "and falgen would tell you how uh what tools are there available and how to",
    "start": "2463200",
    "end": "2470640"
  },
  {
    "text": "look at the traffic and how to tamper data thanks sergey",
    "start": "2470640",
    "end": "2476800"
  },
  {
    "text": "so we're we're gonna torture you a bit more with our russian accents and then",
    "start": "2477760",
    "end": "2485200"
  },
  {
    "text": "if anybody is awake and listening we should pay attention now",
    "start": "2485680",
    "end": "2492960"
  },
  {
    "text": "because we are gonna talk security uh we all wanna make",
    "start": "2493119",
    "end": "2499119"
  },
  {
    "text": "our websockets as secure as possible and how do we do that we need to understand how they work",
    "start": "2499119",
    "end": "2506800"
  },
  {
    "text": "we need to be able to play with them and",
    "start": "2506800",
    "end": "2513040"
  },
  {
    "text": "so far not too many options so far",
    "start": "2513280",
    "end": "2518800"
  },
  {
    "text": "for inspection we will have like wire shark",
    "start": "2518800",
    "end": "2525359"
  },
  {
    "text": "nicely decodes web socket traffic",
    "start": "2525359",
    "end": "2532079"
  },
  {
    "text": "unmasks and can show the history",
    "start": "2532079",
    "end": "2537520"
  },
  {
    "text": "but it of course it's uh read-only so we can't do anything with the traffic",
    "start": "2537520",
    "end": "2544640"
  },
  {
    "text": "but still good step and this been down recently and uh",
    "start": "2544640",
    "end": "2550560"
  },
  {
    "text": "good on on your wireshark fiddler has similar capability can",
    "start": "2550560",
    "end": "2557920"
  },
  {
    "text": "extract websocket traffic and mask and",
    "start": "2557920",
    "end": "2563040"
  },
  {
    "text": "show the conversation and as sergey mentioned latest chrome developer tools will have",
    "start": "2563040",
    "end": "2572400"
  },
  {
    "text": "support for web sockets and it's of course",
    "start": "2572640",
    "end": "2579200"
  },
  {
    "text": "read-only won't do much help if you're trying to file anything",
    "start": "2579200",
    "end": "2586240"
  },
  {
    "text": "there is one option you can inject this piece of javascript at the client side and",
    "start": "2586240",
    "end": "2594079"
  },
  {
    "text": "basically change sends and receives capture",
    "start": "2594400",
    "end": "2600960"
  },
  {
    "text": "form good or bad usages",
    "start": "2600960",
    "end": "2607839"
  },
  {
    "text": "let's see what else is there as far as security as mike mentioned",
    "start": "2608319",
    "end": "2614560"
  },
  {
    "text": "websockets don't have cookies authentication",
    "start": "2614560",
    "end": "2620400"
  },
  {
    "text": "form-based authentication mechanism and etc the the stuff that comes from http",
    "start": "2620400",
    "end": "2627280"
  },
  {
    "text": "and developers when trying",
    "start": "2627280",
    "end": "2632839"
  },
  {
    "text": "to implement web socket applications will be forced to",
    "start": "2632839",
    "end": "2638560"
  },
  {
    "text": "either implement their own or mix and match with http",
    "start": "2638560",
    "end": "2644400"
  },
  {
    "text": "and there are gonna be new waves or",
    "start": "2644400",
    "end": "2649520"
  },
  {
    "text": "of different kinds of problems there",
    "start": "2649520",
    "end": "2653440"
  },
  {
    "text": "another another problem that we want to",
    "start": "2658720",
    "end": "2663839"
  },
  {
    "text": "put the exclamation sign on is the unawareness of",
    "start": "2663920",
    "end": "2670960"
  },
  {
    "text": "security devices like ideas firewalls ips's and",
    "start": "2671280",
    "end": "2678079"
  },
  {
    "text": "dlp solutions unawareness of websockets of those devices",
    "start": "2678079",
    "end": "2684480"
  },
  {
    "text": "basically this just this simple masking",
    "start": "2684480",
    "end": "2690160"
  },
  {
    "text": "makes the traffic for those guys look like uh garbage and they they will let anything go in and out",
    "start": "2690160",
    "end": "2696800"
  },
  {
    "text": "this is as far as we know so if there are any vendors that have good stuff",
    "start": "2696800",
    "end": "2702160"
  },
  {
    "text": "just let let us know we'll be",
    "start": "2702160",
    "end": "2707520"
  },
  {
    "text": "we'll be interested to see how it's done another another",
    "start": "2707520",
    "end": "2714240"
  },
  {
    "text": "issue as mike mentioned about resurrecting",
    "start": "2714240",
    "end": "2719760"
  },
  {
    "text": "the old loki uh is the",
    "start": "2719760",
    "end": "2725200"
  },
  {
    "text": "is the good old problem of covert channel",
    "start": "2725200",
    "end": "2729680"
  },
  {
    "text": "websocket data frame will will can be used to",
    "start": "2731200",
    "end": "2738240"
  },
  {
    "text": "transfer data alongside with legitimate websocket",
    "start": "2740640",
    "end": "2745920"
  },
  {
    "text": "traffic in a way that nobody will will see it",
    "start": "2745920",
    "end": "2751200"
  },
  {
    "text": "it can be the mask value itself some of the res some of the reserve",
    "start": "2751200",
    "end": "2757040"
  },
  {
    "text": "flags or linked field or the way the length can be",
    "start": "2757040",
    "end": "2763359"
  },
  {
    "text": "represented you you had lots of leverage there",
    "start": "2763359",
    "end": "2768480"
  },
  {
    "text": "so that's all i had and uh the torture is over so we",
    "start": "2769839",
    "end": "2776319"
  },
  {
    "text": "are switching to regular good old english",
    "start": "2776319",
    "end": "2780799"
  },
  {
    "text": "thanks van we'll have a free screening of red don later if anyone really needs this",
    "start": "2781359",
    "end": "2787960"
  },
  {
    "text": "um just to piggyback on what vaughn was was mentioning about you know covert channels and and uh and and the the",
    "start": "2789359",
    "end": "2796000"
  },
  {
    "text": "sources of entropy you know i think to to really drive that message home is you've got",
    "start": "2796000",
    "end": "2802319"
  },
  {
    "text": "ideas of imagine malware now that's using outbound connections you have those command control channels um it's",
    "start": "2802319",
    "end": "2808240"
  },
  {
    "text": "great to use encryption obviously but you also need a transport layer that's going to be not seen by those dlp ids",
    "start": "2808240",
    "end": "2815280"
  },
  {
    "text": "and that's that way you could have websocket traffic that is using now this command",
    "start": "2815280",
    "end": "2820960"
  },
  {
    "text": "control for for compromised hosts inside a system in other words those compromise",
    "start": "2820960",
    "end": "2826480"
  },
  {
    "text": "hosts just look like a web browser making a connection back to that cnc server",
    "start": "2826480",
    "end": "2832400"
  },
  {
    "text": "and for all of those spots that you could that where your sources of entropy are for for covert channels the masking",
    "start": "2832400",
    "end": "2838480"
  },
  {
    "text": "variable length reserved flags those are also great points for fuzzy just to see",
    "start": "2838480",
    "end": "2844079"
  },
  {
    "text": "how that server responds to these in terms of its rfc compliance or",
    "start": "2844079",
    "end": "2849520"
  },
  {
    "text": "in terms of capability because what we've seen is that you either got",
    "start": "2849520",
    "end": "2855520"
  },
  {
    "text": "not even 200 lines of server-side code that sergey was showing us in cp in c",
    "start": "2855520",
    "end": "2860720"
  },
  {
    "text": "plus you could have node.js that's working as a as a server and all these are going to have different attributes",
    "start": "2860720",
    "end": "2866720"
  },
  {
    "text": "or different behaviors as they respond to these data frames and of course one of the other things to",
    "start": "2866720",
    "end": "2872720"
  },
  {
    "text": "highlight is that in the very beginning i talked about the http handshake",
    "start": "2872720",
    "end": "2878400"
  },
  {
    "text": "the way this happens is that most of the the websocket servers have implemented their own mini version of http of the",
    "start": "2878400",
    "end": "2885680"
  },
  {
    "text": "http protocol so they really just have some hard-coded responses to these requests that come in and depending on",
    "start": "2885680",
    "end": "2893040"
  },
  {
    "text": "how the developers have decided to respond to these requests for example the path attribute you could be",
    "start": "2893040",
    "end": "2899440"
  },
  {
    "text": "requesting a websocket resource for slash foo but it could be now that all these",
    "start": "2899440",
    "end": "2904480"
  },
  {
    "text": "developers are possibly reintroducing directory traversal attacks path normalization attacks because they've",
    "start": "2904480",
    "end": "2910640"
  },
  {
    "text": "re-implemented basically apache and iis inside some javascript or inside some",
    "start": "2910640",
    "end": "2916319"
  },
  {
    "text": "other type of code take your pick so hopefully and to to wrap up",
    "start": "2916319",
    "end": "2923119"
  },
  {
    "text": "we want to be some some good citizens of the of the internet and talk about you know how to use them securely",
    "start": "2923119",
    "end": "2929520"
  },
  {
    "text": "well unfortunately as we saw that in our in our current qt crawler our current view of the the",
    "start": "2929520",
    "end": "2936240"
  },
  {
    "text": "internet just on that landing page there wasn't really a critical mass of websockets yet so one of the things that",
    "start": "2936240",
    "end": "2942480"
  },
  {
    "text": "we're going to go back and do is have some bit fancier javascript that will try and interact with the web",
    "start": "2942480",
    "end": "2948000"
  },
  {
    "text": "applications a little bit more and look for some more lower or deeper than that landing page so that we can find more",
    "start": "2948000",
    "end": "2954800"
  },
  {
    "text": "examples and what are great are examples of misuse of javascript",
    "start": "2954800",
    "end": "2960640"
  },
  {
    "text": "obviously you want to make sure websockets work with your architecture or you understand what you're taking on",
    "start": "2960640",
    "end": "2966640"
  },
  {
    "text": "one of the points sergey was making about denial's service is that an attack like slow loris is trying to create",
    "start": "2966640",
    "end": "2972400"
  },
  {
    "text": "long-term persistent connections to drain the connection pool of a server websockets inherently does that",
    "start": "2972400",
    "end": "2979200"
  },
  {
    "text": "obviously it does that by design and that's the intent but you just have to be careful what you're introducing",
    "start": "2979200",
    "end": "2984720"
  },
  {
    "text": "um in the day and age it's to an audience like this we wouldn't",
    "start": "2984720",
    "end": "2989920"
  },
  {
    "text": "have to shouldn't have to say this third bullet point about don't trust the client but considering that in 2012 we",
    "start": "2989920",
    "end": "2996480"
  },
  {
    "text": "can still find that more than a handful of of web servers have sql injection and",
    "start": "2996480",
    "end": "3001680"
  },
  {
    "text": "unsalted passwords i guess it's worth reiterating here",
    "start": "3001680",
    "end": "3007599"
  },
  {
    "text": "um and the final points i think want to make on on this aspect of secure web",
    "start": "3007680",
    "end": "3013280"
  },
  {
    "text": "sockets is what that protocol is if you're using using websockets is as secure as",
    "start": "3013280",
    "end": "3020079"
  },
  {
    "text": "the way you're using your query string if you're not validating that query string or if your query string is is",
    "start": "3020079",
    "end": "3026160"
  },
  {
    "text": "prone to spoofing attacks other types of replay attacks depending on how it's identifying users or identifying data",
    "start": "3026160",
    "end": "3033760"
  },
  {
    "text": "that same thing is going to happen over web sockets one of sergey's examples was somebody was using web sockets but all",
    "start": "3033760",
    "end": "3040880"
  },
  {
    "text": "they did was take the query string and rather than put that query string in get request they were just sending that",
    "start": "3040880",
    "end": "3046000"
  },
  {
    "text": "query string over the websocket connection and getting that data back so these are the things to this is what",
    "start": "3046000",
    "end": "3052319"
  },
  {
    "text": "i think is interesting about websockets is because we do have a new protocol and now we have a new way of layering",
    "start": "3052319",
    "end": "3059119"
  },
  {
    "text": "communications on top of that protocol so we get to go back and look not how tcpip was but how people started",
    "start": "3059119",
    "end": "3066160"
  },
  {
    "text": "layering things on top of websockets so final three three ideas to leave with",
    "start": "3066160",
    "end": "3072640"
  },
  {
    "text": "you is that you know there's nothing inherently insecure about using websockets there's a lot of really good",
    "start": "3072640",
    "end": "3077760"
  },
  {
    "text": "things you'll get performance wise and um and ease of use wise in terms of the",
    "start": "3077760",
    "end": "3083440"
  },
  {
    "text": "light overhead and for your browser side javascript obviously all of that as i said",
    "start": "3083440",
    "end": "3090240"
  },
  {
    "text": "all the security you're applying to that query string still has to be applied to that websocket and finally what i think",
    "start": "3090240",
    "end": "3097040"
  },
  {
    "text": "is going to be real the really cool part or what the those final notes that um vogen was making about",
    "start": "3097040",
    "end": "3103760"
  },
  {
    "text": "masking and covert channels and whether or not security devices are even aware of this so this is basically taking your",
    "start": "3103760",
    "end": "3110240"
  },
  {
    "text": "http traffic and if your ids can't handle it in rot 13 there's no way it's",
    "start": "3110240",
    "end": "3115599"
  },
  {
    "text": "going to handle right now websock is just because it's unaware of it and it's this is going to be good useful both for",
    "start": "3115599",
    "end": "3122160"
  },
  {
    "text": "attacking into that web server putting the cross-site scripting sql injection all those attacks but as well as",
    "start": "3122160",
    "end": "3128160"
  },
  {
    "text": "possibly as we mentioned outbound connections malware viruses using this for a just a new protocol that's going",
    "start": "3128160",
    "end": "3134800"
  },
  {
    "text": "to be hopefully become ubiquitous as it becomes as html5 is more adopted and",
    "start": "3134800",
    "end": "3140240"
  },
  {
    "text": "therefore just harder to pick out those needles in the haystack of bad frames",
    "start": "3140240",
    "end": "3145280"
  },
  {
    "text": "so it is still evolving the the rfc has been updated just this month and as we",
    "start": "3145280",
    "end": "3150880"
  },
  {
    "text": "saw there's varying levels of support within the different web browsers but this is also the great time to start",
    "start": "3150880",
    "end": "3156400"
  },
  {
    "text": "looking into the protocol start fuzzing some of the server-side implementations we of course can intend to",
    "start": "3156400",
    "end": "3163280"
  },
  {
    "text": "make those graphs those alexa graphs a little bit more interesting get some more data about and some more examples",
    "start": "3163280",
    "end": "3168559"
  },
  {
    "text": "and show you here's how some people did it well here's how some people made some mistakes and with that we thank you for your",
    "start": "3168559",
    "end": "3174480"
  },
  {
    "text": "patience thank you for your time and i think we'll have a chance for questions thank you",
    "start": "3174480",
    "end": "3181480"
  }
]