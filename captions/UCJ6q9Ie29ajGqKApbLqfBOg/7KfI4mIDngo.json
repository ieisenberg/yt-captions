[
  {
    "start": "0",
    "end": "17000"
  },
  {
    "text": "good morning everybody uh thanks for coming I uh see they thought this talk was going to be a lot more popular than",
    "start": "40",
    "end": "5480"
  },
  {
    "text": "it apparently is so I I guess there's plenty of room down here if you guys want to Heckle me at the back you can come closer the uh some of the texts",
    "start": "5480",
    "end": "12759"
  },
  {
    "text": "might be quite small so if you have problems reading it just shout out so who am I uh my name is David",
    "start": "12759",
    "end": "19880"
  },
  {
    "start": "17000",
    "end": "17000"
  },
  {
    "text": "litfield I've been around the block a block a few times uh I have uh a whole",
    "start": "19880",
    "end": "26599"
  },
  {
    "text": "bunch of CV IDs to my name uh and uh many which don't actually have CV IDs uh",
    "start": "26599",
    "end": "32000"
  },
  {
    "text": "seven C advisories based upon my research I don't know whether that's a good thing or a bad thing uh and uh a",
    "start": "32000",
    "end": "37680"
  },
  {
    "text": "fair number of uh White Papers written a couple of books although uh the last one was in 2007 so I better start updating",
    "start": "37680",
    "end": "44840"
  },
  {
    "text": "sometime soon uh I worked on a number of uh projects uh like NGS squirel if",
    "start": "44840",
    "end": "50440"
  },
  {
    "text": "anyone I I guess if you're in this room you're interested in database security so there's a very small chance you",
    "start": "50440",
    "end": "55960"
  },
  {
    "text": "actually may have heard of a toour called njs squirrel um but I uh then set up a few companies and",
    "start": "55960",
    "end": "65239"
  },
  {
    "text": "eventually retired or semi-retired I went diving with gray white sharks as you'll see in a minute uh if you're",
    "start": "65239",
    "end": "70840"
  },
  {
    "text": "interested in this kind of database talk uh which I presume you are since you're here uh you can follow me on Twitter at",
    "start": "70840",
    "end": "76960"
  },
  {
    "text": "dfield or if you want a direct conversation uh daviddavid",
    "start": "76960",
    "end": "82799"
  },
  {
    "text": "litchfield.ct this is what I do in my spare time when I'm not raising my kids so so let's talk about EB business",
    "start": "84400",
    "end": "92000"
  },
  {
    "start": "89000",
    "end": "89000"
  },
  {
    "text": "Suite um can I get a show of hands in the room to see how many people actually have EB business Suite uh on their",
    "start": "92000",
    "end": "99000"
  },
  {
    "text": "Network quite a few okay is anybody running uh 11.5 still and going through",
    "start": "99000",
    "end": "106119"
  },
  {
    "text": "an upgrade process okay so a lot of this I'll be talking about 11.5 and 12.2 and",
    "start": "106119",
    "end": "112479"
  },
  {
    "text": "and versions in between uh some of it if you're if you're not running 11.5 I guess you know some of this talk is",
    "start": "112479",
    "end": "120000"
  },
  {
    "text": "irrelevant but I guess the principles still apply um so e Business site as as",
    "start": "120000",
    "end": "126079"
  },
  {
    "text": "apparently many of this in this room know is is a very large product it's got a massive attack surface and as a um",
    "start": "126079",
    "end": "134560"
  },
  {
    "text": "someone responsible for the security of any business site server that's actually slightly worrying so this talk basically we'll be looking at that attack surface",
    "start": "134560",
    "end": "142160"
  },
  {
    "text": "how one can assess it and try and reduce it and uh make your security posture uh",
    "start": "142160",
    "end": "149920"
  },
  {
    "text": "a lot better than it currently is so I've I've the the the essence of this",
    "start": "149920",
    "end": "155879"
  },
  {
    "text": "talk is based upon some Consulting engagements with some customers so this",
    "start": "155879",
    "end": "161280"
  },
  {
    "text": "isn't just like uh you know oh go ahead and drop this kind of thing and you'll be fine because obviously we know if",
    "start": "161280",
    "end": "167000"
  },
  {
    "text": "we're running e business Suite A lot of critical you know probably money and uh",
    "start": "167000",
    "end": "172120"
  },
  {
    "text": "HR info and all that good stuff is going through it and if we break that application then it it's going to be",
    "start": "172120",
    "end": "177640"
  },
  {
    "text": "somewhat problematic so these methods have been tried and tested on a couple of customers at least so take the",
    "start": "177640",
    "end": "183480"
  },
  {
    "text": "principles away with you and see if you can apply it to to your environment um okay we know it's got a",
    "start": "183480",
    "end": "190360"
  },
  {
    "text": "bigger tax surface but apparently it's okay though because if you look at the",
    "start": "190360",
    "end": "195640"
  },
  {
    "text": "um secure config configuration guide for Oracle e business 11i on page 42 it says",
    "start": "195640",
    "end": "202599"
  },
  {
    "text": "of the many potential uh SQL injection flaws we have seen reported not one has",
    "start": "202599",
    "end": "208280"
  },
  {
    "text": "been a confirmed example uh so that to to me says um well it's",
    "start": "208280",
    "end": "215000"
  },
  {
    "text": "like a red you know a red flag to a bull essentially it's like well hold on wait a minute I know of many instances where",
    "start": "215000",
    "end": "220920"
  },
  {
    "text": "people have previously reported SQL injection flaws to Oracle so why are they saying this I mean is this Posta or",
    "start": "220920",
    "end": "227519"
  },
  {
    "text": "is this something that they they delivered out the box so I wanted to take a look at the most patched the most",
    "start": "227519",
    "end": "232720"
  },
  {
    "text": "up-to-date version with the most uh up to- dat patches um on it to see if SQL",
    "start": "232720",
    "end": "238159"
  },
  {
    "text": "injection flaws did actually exist this product still uh it be in 2016 one would hope",
    "start": "238159",
    "end": "244159"
  },
  {
    "start": "244000",
    "end": "244000"
  },
  {
    "text": "not so I started this in November basically and",
    "start": "244159",
    "end": "250519"
  },
  {
    "text": "um obviously uh uh skipping ahead in the slides uh talking about the attack",
    "start": "250519",
    "end": "256199"
  },
  {
    "text": "surface 15,000 jsps in the web rout so that's a lot of attack surface if you",
    "start": "256199",
    "end": "261600"
  },
  {
    "text": "are running uh e business suet 11 uh I there's a plq Gateway which is now",
    "start": "261600",
    "end": "267280"
  },
  {
    "text": "thankfully gone in release 12 uh it itself was a a very uh rich source of of",
    "start": "267280",
    "end": "274440"
  },
  {
    "text": "vulnerability there's forms there's servlets and then there's the database server behind that and the concurrent",
    "start": "274440",
    "end": "279560"
  },
  {
    "text": "processing uh server behind and so on so there's there's a lot of um juicy stuff",
    "start": "279560",
    "end": "285280"
  },
  {
    "text": "which uh an attacker can look at in terms of trying to find a way to break into your",
    "start": "285280",
    "end": "290919"
  },
  {
    "text": "system so I started an in-depth review in November 2015 looking at um 11.5",
    "start": "290919",
    "end": "296520"
  },
  {
    "start": "291000",
    "end": "291000"
  },
  {
    "text": "first and then moving on to 12.2 after one week of effort um I'd found and",
    "start": "296520",
    "end": "301759"
  },
  {
    "text": "reported um a large number of issues to Oracle including SQL injection floor that we had been told in the secure",
    "start": "301759",
    "end": "307520"
  },
  {
    "text": "configuration guide didn't actually exist on the system uh and we all F positive so um 21 SQL injection flaws 26",
    "start": "307520",
    "end": "315240"
  },
  {
    "text": "cross-site scripting One open redirect two Doss and the dosses were really simple things you know like a a loop",
    "start": "315240",
    "end": "320560"
  },
  {
    "text": "counter that basically didn't um say you know put an upper limit on what the loop could go to so you just specify one to 1",
    "start": "320560",
    "end": "327720"
  },
  {
    "text": "billion and that causes the database server to sit there and and and go in a a uh an eternal Loop well not an eternal",
    "start": "327720",
    "end": "335960"
  },
  {
    "text": "because it stops at 1 billion of course but you you get the the idea um most of the flaws were in the",
    "start": "335960",
    "end": "342199"
  },
  {
    "text": "pcq Gateway and and the jsps and um I did another week's worth of effort on",
    "start": "342199",
    "end": "347840"
  },
  {
    "text": "12.2 and we had a similar number of issues so it wasn't good considering",
    "start": "347840",
    "end": "353000"
  },
  {
    "text": "this is this is a product an aged product it's been around since well at",
    "start": "353000",
    "end": "358240"
  },
  {
    "text": "least 2000 in fact some of the code it's when you when you look at it is actually developed in 2001 which is you know",
    "start": "358240",
    "end": "365680"
  },
  {
    "text": "strange uh that that code hasn't been fixed in all that time we are told obviously by Oracle that they have a",
    "start": "365680",
    "end": "373479"
  },
  {
    "start": "371000",
    "end": "371000"
  },
  {
    "text": "robust security Assurance program to ensure that when they ship these products these kind of flaws don't exist",
    "start": "373479",
    "end": "380880"
  },
  {
    "text": "so one needs to question why these flaws do exist and whether their program is as robust as they think it",
    "start": "380880",
    "end": "387319"
  },
  {
    "text": "is um I'll quickly run through some 11.5 issues so what's interesting is there",
    "start": "387319",
    "end": "394240"
  },
  {
    "text": "are three Apache aliases that point to the same physical directory on the file",
    "start": "394240",
    "end": "400199"
  },
  {
    "text": "system so if you look at oore HTML all the protection that you know is afforded",
    "start": "400199",
    "end": "407240"
  },
  {
    "text": "by Apache is is essentially been applied to that directory but there's an HTML directory and a j initia directory so",
    "start": "407240",
    "end": "413960"
  },
  {
    "text": "things like the apps web. CFG file which you know contains usernames and passwords connect strings and so on we",
    "start": "413960",
    "end": "419319"
  },
  {
    "text": "can get direct access to basically by just specifying SL HTML /bin uh and so",
    "start": "419319",
    "end": "424919"
  },
  {
    "text": "on often you'll find that there's an SQL uh net. log file as well which um dumps",
    "start": "424919",
    "end": "430879"
  },
  {
    "text": "a wonderful uh source of information about what's going on internally in the network uh and there's ironically one of",
    "start": "430879",
    "end": "438400"
  },
  {
    "text": "the Apache configuration files is called trusted.com do not trust trusted.com um essentially it uses a bunch of",
    "start": "438400",
    "end": "445720"
  },
  {
    "start": "444000",
    "end": "444000"
  },
  {
    "text": "location directives that haven't been sufficiently written written sufficiently well enough to",
    "start": "445720",
    "end": "452599"
  },
  {
    "text": "actually protect against things so for example DMS Z it's basically gives you some uh information about what's going",
    "start": "452599",
    "end": "459080"
  },
  {
    "text": "on in the server and things like memory allocations and so on uh you are denied access to it if you uh attempt to access",
    "start": "459080",
    "end": "465240"
  },
  {
    "text": "it because of this location directive or to deny uh allow and deny from all",
    "start": "465240",
    "end": "471560"
  },
  {
    "text": "however if we just put another forward slash in front of DMS Z we can bypass that location directive and there's a",
    "start": "471560",
    "end": "477759"
  },
  {
    "text": "whole bunch of them in this trust Doom that we're not supposed to have access to but we can gain access just by",
    "start": "477759",
    "end": "483879"
  },
  {
    "text": "insting uh another slash in front that's you know doesn't give us",
    "start": "483879",
    "end": "490440"
  },
  {
    "start": "488000",
    "end": "488000"
  },
  {
    "text": "remote code execution or anything interesting however again uh on 11.5",
    "start": "490440",
    "end": "496639"
  },
  {
    "text": "there is the plsql Gateway now the plsql Gateway essentially is a part of the web",
    "start": "496639",
    "end": "502280"
  },
  {
    "text": "server it's an Apache module that basically takes a request from the web client IE the browser",
    "start": "502280",
    "end": "507720"
  },
  {
    "text": "and essentially proxy it to the database server so the client will say um execute",
    "start": "507720",
    "end": "513680"
  },
  {
    "text": "this packageing procedure uh and the the web server will turn around to the databas server and say um execute the",
    "start": "513680",
    "end": "520200"
  },
  {
    "text": "this packageing procedure as requested by the client return me the results and I'll pass it back down down the https",
    "start": "520200",
    "end": "525480"
  },
  {
    "text": "chain uh now that's obviously a risk so Oracle have decided that they would",
    "start": "525480",
    "end": "531480"
  },
  {
    "text": "limit the exposure by specifying what plsql packages uh and procedures could",
    "start": "531480",
    "end": "537519"
  },
  {
    "text": "be accessed by listing them in a table so there's a table called f& Dore enabled plsql there's about 700 packages",
    "start": "537519",
    "end": "544120"
  },
  {
    "text": "and procedures in that list uh I look I looked a sample of 40 of them and 12 had SQL injection in them",
    "start": "544120",
    "end": "550880"
  },
  {
    "text": "so I didn't bother looking at the whole 700 because as I said you know sampling it gives me an idea on how robust that",
    "start": "550880",
    "end": "556320"
  },
  {
    "text": "you know code is and uh we don't need to look any further to say Oracle or",
    "start": "556320",
    "end": "561880"
  },
  {
    "text": "request of Oracle that they do actually do a code review on on their stuff before shipping the product",
    "start": "561880",
    "end": "568079"
  },
  {
    "text": "um so we'll we'll look at a couple of examples of exploiting these now what's",
    "start": "568079",
    "end": "573480"
  },
  {
    "text": "interesting is these are unauthenticated so if someone has access to your network",
    "start": "573480",
    "end": "579760"
  },
  {
    "text": "um you know for whether they're an internal employee or someone has you know compromised a client on your",
    "start": "579760",
    "end": "585480"
  },
  {
    "text": "network through a fishing attack or or whatever it happens to be and they have direct access to the EB business Suite",
    "start": "585480",
    "end": "592399"
  },
  {
    "text": "web server without username and password they can execute these kind of attacks now what happens is the plsql Gateway",
    "start": "592399",
    "end": "599000"
  },
  {
    "text": "connect to the database server as the apps user the apps user has almost as",
    "start": "599000",
    "end": "604320"
  },
  {
    "text": "many privileges as as CIS essentially it's a very highly privileged account so",
    "start": "604320",
    "end": "609640"
  },
  {
    "text": "anything that ex uh any arbitrary SQL that an attacker might Supply in a SQL",
    "start": "609640",
    "end": "615079"
  },
  {
    "text": "injection attack will execute as the apps user and apps has obviously access",
    "start": "615079",
    "end": "620399"
  },
  {
    "text": "to all the data that you're you're trying to protect access to so we'll look at a couple of them so one of the",
    "start": "620399",
    "end": "626880"
  },
  {
    "start": "626000",
    "end": "626000"
  },
  {
    "text": "packages um HR util uh disore web has a procedure called dexel basically it",
    "start": "626880",
    "end": "633760"
  },
  {
    "text": "takes in a URL as a as a parameter or it's not essentially it's called Ur",
    "start": "633760",
    "end": "639279"
  },
  {
    "text": "pcore URL but it turns out it's not a URL and what happens is it decrypts that pcore URL using the ixor c. decrypt 2 uh",
    "start": "639279",
    "end": "649360"
  },
  {
    "text": "function and executes it using the execute Dynamic xsql um",
    "start": "649360",
    "end": "656079"
  },
  {
    "text": "procedure so if we look at what icx umore called decrypt 2 does it basically",
    "start": "656079",
    "end": "663120"
  },
  {
    "text": "takes um a text column for a supply text ID and whatever it finds in there it",
    "start": "663120",
    "end": "669120"
  },
  {
    "text": "will then go and execute it back here so once decrypted it this uh have I got",
    "start": "669120",
    "end": "676480"
  },
  {
    "text": "yeah I do this begin uh and end basically is called an an anonymous",
    "start": "676480",
    "end": "682240"
  },
  {
    "text": "plsql block so whatever this decrypts to uh it will go ahead and execute that for us now",
    "start": "682240",
    "end": "690200"
  },
  {
    "text": "the question is how does one get stuff in this apps. ixor text table if we can",
    "start": "690200",
    "end": "695600"
  },
  {
    "text": "do that as an external attacker we can basically get it to execute arbitrary SQL so of course there we review The",
    "start": "695600",
    "end": "703360"
  },
  {
    "start": "701000",
    "end": "701000"
  },
  {
    "text": "Source Code of the pl SQL package and we look at a procedure called display fatal errors what's of Interest",
    "start": "703360",
    "end": "710560"
  },
  {
    "text": "here if you see here it takes a parameter pcore",
    "start": "710560",
    "end": "716680"
  },
  {
    "text": "message from from here then encrypts it using IX _ call. encrypt 2 it's not",
    "start": "716680",
    "end": "723320"
  },
  {
    "text": "actually encrypted basically it takes whatever it is puts it in this table and gives it an ID once we have the ID once",
    "start": "723320",
    "end": "728959"
  },
  {
    "text": "we've managed to insert into this table because that's what the encrypt 2 code does it basically inserts into the table",
    "start": "728959",
    "end": "734440"
  },
  {
    "text": "the text gives you an ID back once we've done that we can then execute arbitrary",
    "start": "734440",
    "end": "739480"
  },
  {
    "start": "739000",
    "end": "739000"
  },
  {
    "text": "SQL so all we do here is um there's a package called dbms aw and one of the um",
    "start": "739480",
    "end": "749199"
  },
  {
    "text": "functions on that is interp and there's also an interp silent and we can execute",
    "start": "749199",
    "end": "754680"
  },
  {
    "text": "um arbitrary olap DML commands and one of those commands fortunately for us as an attacker is sleep so we can get the",
    "start": "754680",
    "end": "761720"
  },
  {
    "text": "application to sleep for 10 seconds um rather than you know getting for for a",
    "start": "761720",
    "end": "767160"
  },
  {
    "text": "lot of Oracle applications basically people will try and loop uh you know the dbms alisation toolkit and encrypt",
    "start": "767160",
    "end": "773440"
  },
  {
    "text": "something 10,000 times to get the application to hang for 10 seconds but this is much more simple than than that",
    "start": "773440",
    "end": "779440"
  },
  {
    "text": "um we we just you know cause it to sleep using this dbms aw on top so that's the arbitrary SQL we're doing it's really",
    "start": "779440",
    "end": "785399"
  },
  {
    "text": "benign doesn't do anything it just causes the app to hang for 10 seconds once we enter that URL we are directed",
    "start": "785399",
    "end": "790920"
  },
  {
    "text": "to this URL here and we get this pcore message and that ID essentially is the",
    "start": "790920",
    "end": "797399"
  },
  {
    "text": "ID returned for the text that's been inserted into the ixor text table now coin you know nicely for us so we then",
    "start": "797399",
    "end": "804519"
  },
  {
    "text": "go back to the dexel procedure and Supply that ID at the end and what happens is when the dexel you know uh",
    "start": "804519",
    "end": "811720"
  },
  {
    "text": "fun uh procedure executes it calls that uh ixor called decrypt 2 with that ID",
    "start": "811720",
    "end": "819000"
  },
  {
    "text": "takes the text out for us embeds it in that Anonymous plsql block and then executes it for us so we've now executed",
    "start": "819000",
    "end": "825360"
  },
  {
    "text": "arbitrary SQL as the apps user uh another interesting one the",
    "start": "825360",
    "end": "831959"
  },
  {
    "start": "829000",
    "end": "829000"
  },
  {
    "text": "Oracle uh sswa uh package has a procedure called execute uh of course",
    "start": "831959",
    "end": "839480"
  },
  {
    "text": "when you're doing this kind of research you basically home in on things a nice little GP you know for um certain",
    "start": "839480",
    "end": "845959"
  },
  {
    "text": "phrases will will highlight where potential areas of Interest are and of course this execute stands out like a",
    "start": "845959",
    "end": "852160"
  },
  {
    "text": "sore thumb so a bit of Investigation we find that it takes a parameter parameter called e e is decrypted using icx coore",
    "start": "852160",
    "end": "861360"
  },
  {
    "text": "uh ixor cor. decrypt which is slightly different it actually is encrypted this",
    "start": "861360",
    "end": "866880"
  },
  {
    "text": "time and uh so if we look at this pre-encrypted parameter it decrypts to to this number",
    "start": "866880",
    "end": "874440"
  },
  {
    "text": "here basically now that 2633 is passed to a function called run",
    "start": "874440",
    "end": "881199"
  },
  {
    "text": "function and what that does it looks up the web HTML call table for that",
    "start": "881199",
    "end": "887040"
  },
  {
    "start": "883000",
    "end": "883000"
  },
  {
    "text": "function and extracts the function name and executes it so in this case 263 uh",
    "start": "887040",
    "end": "892639"
  },
  {
    "text": "2633 is ixor change language showcore languages now if we review the code",
    "start": "892639",
    "end": "899759"
  },
  {
    "text": "further if the parameter P exists that to is decrypted and",
    "start": "899759",
    "end": "904920"
  },
  {
    "text": "concatenated so what happens is uh if we",
    "start": "904920",
    "end": "911879"
  },
  {
    "start": "905000",
    "end": "905000"
  },
  {
    "text": "encrypt using the code uh for the the encrypt function we basically all we",
    "start": "912360",
    "end": "917680"
  },
  {
    "text": "need is access to our own copy of EB business Suite that has the ixor c.",
    "start": "917680",
    "end": "923320"
  },
  {
    "text": "encrypt function and it spits out a fixed uh you know field for us uh",
    "start": "923320",
    "end": "929639"
  },
  {
    "text": "if we encrypt bracket semicolon",
    "start": "929639",
    "end": "933880"
  },
  {
    "text": "http.com is concatenate after decryption this stuff basically is our little hack to get it to execute and it executes as",
    "start": "957160",
    "end": "965600"
  },
  {
    "text": "as we can see down the bottom of if you view the source of the the HTML that's returned it's that's our",
    "start": "965600",
    "end": "973800"
  },
  {
    "text": "http.sys from that uh little bit of research in November related to this",
    "start": "979959",
    "end": "986279"
  },
  {
    "text": "yeah this uh assessment of e business week so there there's quite a few that list is for the stuff that was patched",
    "start": "986279",
    "end": "991639"
  },
  {
    "text": "in January I think uh so it's not it's not comprehensive that we'll get to more",
    "start": "991639",
    "end": "997040"
  },
  {
    "text": "CV IDs in a minute I think this",
    "start": "997040",
    "end": "1002120"
  },
  {
    "text": "um the uh a copy of this paper these slides you'll have a copy of these slides",
    "start": "1002120",
    "end": "1008480"
  },
  {
    "text": "somewhere so let's look at um how we doing for time uh 12x issues so again",
    "start": "1008480",
    "end": "1016880"
  },
  {
    "start": "1009000",
    "end": "1009000"
  },
  {
    "text": "spent 80 hours doing assessment there's a couple of java deserialization flaws so simple remote code execution uh SQL",
    "start": "1016880",
    "end": "1024640"
  },
  {
    "text": "injection there were eight SQL injection flaws in fact I found I should have updated the slide there's I found more in the interim uh a whole bunch of",
    "start": "1024640",
    "end": "1032600"
  },
  {
    "text": "cross-site scripting seriously lost count there's so many um a bunch of cookie exposures",
    "start": "1032600",
    "end": "1039319"
  },
  {
    "text": "ssrf um directory traversal denial service and xxe in fact one of the xxe",
    "start": "1039319",
    "end": "1045918"
  },
  {
    "text": "vulnerabilities that turned out sorry one of the areas where I thought there might be an xxe vulnerability and it",
    "start": "1045919",
    "end": "1051400"
  },
  {
    "text": "turns out that there wasn't um it's basically looking for things like system and and public and and basically uh",
    "start": "1051400",
    "end": "1058640"
  },
  {
    "text": "causes an exception if if if you Tred to do an external entity attack XML uh",
    "start": "1058640",
    "end": "1063799"
  },
  {
    "text": "entity attack and I I it did have a cross-site scripting floor in it this is",
    "start": "1063799",
    "end": "1069200"
  },
  {
    "text": "in the b& application service um again I think there's a a paper in I don't know",
    "start": "1069200",
    "end": "1074240"
  },
  {
    "text": "whether they print books these days or whether it's on a slide on a disc or not but essentially I there was a cross-site",
    "start": "1074240",
    "end": "1079720"
  },
  {
    "text": "scripting floor um in this b& application service and uh but it was a",
    "start": "1079720",
    "end": "1084880"
  },
  {
    "text": "a trivial to spot kind of thing you know and it was caught by the anti xss filters in Chrome and Internet Explorer",
    "start": "1084880",
    "end": "1091320"
  },
  {
    "text": "and so on so I thought about it for a minute and I was thinking well okay we can't use uh external entities XML",
    "start": "1091320",
    "end": "1097400"
  },
  {
    "text": "entities but what happens if we used internal XML entities to encode our attack to bypass the the xss filters so",
    "start": "1097400",
    "end": "1105720"
  },
  {
    "text": "there was a a nice little neat attack obviously on on the back end it's being processed by the XML processor and your",
    "start": "1105720",
    "end": "1113559"
  },
  {
    "text": "XML attack uh sorry your xss attack is no longer straight you know uh alert one",
    "start": "1113559",
    "end": "1120000"
  },
  {
    "text": "that's invisible uh to um to Chrome and ie on the way out but when it is",
    "start": "1120000",
    "end": "1125600"
  },
  {
    "text": "processed on the back end and everything is is put back in place uh it be you know it executes our xss now so there's",
    "start": "1125600",
    "end": "1134320"
  },
  {
    "text": "uh as I said I think it's on on the dis uh there's a little paper on um",
    "start": "1134320",
    "end": "1139960"
  },
  {
    "text": "exploiting uh internal entities XML entities to to bypass the Chrome xss and",
    "start": "1139960",
    "end": "1146520"
  },
  {
    "text": "ie filter uh if we have time I I've got the paper on on the laptop so I'll I can",
    "start": "1146520",
    "end": "1152520"
  },
  {
    "text": "quickly show it to you um a lot of this stuff was actually patched in the most",
    "start": "1152520",
    "end": "1157880"
  },
  {
    "text": "recent July critical patch update which is great but some of the stuff were still waiting patches",
    "start": "1157880",
    "end": "1164559"
  },
  {
    "text": "for so I want to talk about one of the SQL injection flaws in in the JSP things",
    "start": "1164559",
    "end": "1169640"
  },
  {
    "start": "1165000",
    "end": "1165000"
  },
  {
    "text": "and it's really important to note that there are multiple ways to skin a I hate that as an expression and it's quite",
    "start": "1169640",
    "end": "1176520"
  },
  {
    "text": "ironic actually that there are not multiple synonyms for this expression",
    "start": "1176520",
    "end": "1182520"
  },
  {
    "text": "when you would think there would be lots of synonyms for it um so this uh SQL injection flaw it's in",
    "start": "1182520",
    "end": "1189640"
  },
  {
    "text": "a it's a very simple one to exploit uh the JSP is called B AK krgn JSP and",
    "start": "1189640",
    "end": "1199159"
  },
  {
    "text": "essentially you do a um one of the parameters P search by and a simple",
    "start": "1199159",
    "end": "1205280"
  },
  {
    "text": "single quote um will break you out of it a typical you know standard SQL injection",
    "start": "1205280",
    "end": "1210640"
  },
  {
    "text": "floor and uh again it executes assist and so on we can access that directly",
    "start": "1210640",
    "end": "1216440"
  },
  {
    "text": "which um you know the URL is oore HTML uh we'll just call it b. JSP just for",
    "start": "1216440",
    "end": "1223720"
  },
  {
    "text": "the sake of ease uh now if you as a Defender think well we're not actually",
    "start": "1223720",
    "end": "1230600"
  },
  {
    "text": "using you know the best. JSP file so why don't we either create a uh a mod reite",
    "start": "1230600",
    "end": "1237000"
  },
  {
    "text": "or a location directive to to D deny access direct you know to um to this",
    "start": "1237000",
    "end": "1244159"
  },
  {
    "text": "speci file then that's that's a great step forward obviously but there are multiple ways to access this and that's",
    "start": "1244159",
    "end": "1250919"
  },
  {
    "text": "one of the problems with trying to defend against attacks in in E business Suite so as an example of this there's a",
    "start": "1250919",
    "end": "1257240"
  },
  {
    "text": "file called rf. JSP the RF stands for run function basically and what rf. JSP does it takes an ID essentially and",
    "start": "1257240",
    "end": "1266039"
  },
  {
    "text": "looks up in a table the name of the web call to make and in this case there is a",
    "start": "1266039",
    "end": "1275360"
  },
  {
    "text": "uh a web call to this b. JSP file so all we need to do is is get the ID from from",
    "start": "1275360",
    "end": "1282440"
  },
  {
    "text": "this table which happens to be 1191 in this case Supply the p uh search",
    "start": "1282440",
    "end": "1289440"
  },
  {
    "text": "by parameter and what rf. JSP does it basically executes that internally to rf. JSP passes it the P search by",
    "start": "1289440",
    "end": "1295880"
  },
  {
    "text": "parameter and again we we now have access direct access or indirect access",
    "start": "1295880",
    "end": "1302240"
  },
  {
    "text": "to this b. JSP page despite the fact that we might have blocked it using a location or a mod rewrite",
    "start": "1302240",
    "end": "1308760"
  },
  {
    "text": "directive but it gets slightly worse because there's other methods we can do it commonly used in EB business Suite uh",
    "start": "1308799",
    "end": "1317080"
  },
  {
    "start": "1310000",
    "end": "1310000"
  },
  {
    "text": "in in the jsps are JSP for ws and essentially what that does um it if",
    "start": "1317080",
    "end": "1322360"
  },
  {
    "text": "given the name of a JSP page it will forward any parameters and so on to that",
    "start": "1322360",
    "end": "1327400"
  },
  {
    "text": "to that JSP that is being included essentially it's like like an include but it's afford now there are a whole",
    "start": "1327400",
    "end": "1334279"
  },
  {
    "text": "bunch of JSP pages that take a user Supply parameter as the um file to which",
    "start": "1334279",
    "end": "1341880"
  },
  {
    "text": "to forward to so again if we have found that um as an attack of someone has",
    "start": "1341880",
    "end": "1349000"
  },
  {
    "text": "denied direct access to the b. JSP file to us we could use one of these forward attacks and there's a whole bunch of",
    "start": "1349000",
    "end": "1354880"
  },
  {
    "text": "ways of doing it so as you can see we essentially we essentially pass the name",
    "start": "1354880",
    "end": "1361400"
  },
  {
    "text": "of our JP page as a parameter qot frm main file and we Supply our P search by",
    "start": "1361400",
    "end": "1369200"
  },
  {
    "text": "arbitrary SQL and so on and these are all different files different ways of doing it",
    "start": "1369200",
    "end": "1374440"
  },
  {
    "text": "um and here's another one now in what's ironic is in 11.5 which is",
    "start": "1374440",
    "end": "1382039"
  },
  {
    "text": "an older and more vulnerable version the only kind of file you can actually forward to and include in this way is uh",
    "start": "1382039",
    "end": "1389200"
  },
  {
    "text": "a JSP file or an HTML file uh however in 12 we can access things like xmail files",
    "start": "1389200",
    "end": "1395919"
  },
  {
    "text": "which might contain usernames and passwords CFG files log files and so on so in 12x we can actually access non JSP",
    "start": "1395919",
    "end": "1403520"
  },
  {
    "text": "or non HTML content as well and leak uh information that may be useful to us for",
    "start": "1403520",
    "end": "1408600"
  },
  {
    "text": "on down the line so something again to be careful of so again we're still looking at multiple ways to skin a cat how to access you know this this one",
    "start": "1408600",
    "end": "1415799"
  },
  {
    "text": "single floor there there's there's multiple ways of doing it so there are lots of SQL injection",
    "start": "1415799",
    "end": "1424039"
  },
  {
    "text": "flaws I think I I've made that point quite clear so now we are at that stage",
    "start": "1424039",
    "end": "1430000"
  },
  {
    "text": "where we are executing SQL in the database uh arbitrary SQL in the",
    "start": "1430000",
    "end": "1436320"
  },
  {
    "text": "database as as the apps user so so we'll uh look at how to how one in in",
    "start": "1436320",
    "end": "1445000"
  },
  {
    "start": "1440000",
    "end": "1440000"
  },
  {
    "text": "fact uh increases their privileges improves their their privilege situation um from from the database so with",
    "start": "1445000",
    "end": "1452320"
  },
  {
    "text": "webbased applications the and and Oracle Oracle does not batch SQL statements",
    "start": "1452320",
    "end": "1459159"
  },
  {
    "text": "like in Microsoft SQL Server you can say select from this table delete from that table do this do that and shut down the",
    "start": "1459159",
    "end": "1466480"
  },
  {
    "text": "database all in one batched SQL uh query essentially Oracle does not do that um",
    "start": "1466480",
    "end": "1473880"
  },
  {
    "text": "it will just execute one uh SQL statement so we have to trick it into executing arbitrary SQL statements for",
    "start": "1473880",
    "end": "1480640"
  },
  {
    "text": "us and and and chaining them together so we use what's known as an auxiliary inject function to do that so if you",
    "start": "1480640",
    "end": "1487240"
  },
  {
    "text": "look through the code um on on an e business Suite server there's a whole bunch of auxiliary inject functions or",
    "start": "1487240",
    "end": "1494200"
  },
  {
    "text": "functions that we can you know essentially use to our nefarious purposes so we're looking for basically",
    "start": "1494200",
    "end": "1500080"
  },
  {
    "text": "is a function that takes in parameters only doesn't have a uh a Boolean as as",
    "start": "1500080",
    "end": "1507120"
  },
  {
    "text": "an N parameter and doesn't return a bull and you know has to return a varar or",
    "start": "1507120",
    "end": "1512480"
  },
  {
    "text": "number or something like that and takes an arbitrary SQL statement and executes",
    "start": "1512480",
    "end": "1518640"
  },
  {
    "text": "it for you so here's a couple of examples so the ASG custom pvt. exx CMD",
    "start": "1518640",
    "end": "1525880"
  },
  {
    "text": "function uh will take a parameter and execute it for you so if we look here",
    "start": "1525880",
    "end": "1532720"
  },
  {
    "text": "the arbitrary SQL would we're supplying it's an anonymous plsql block begin Dems output put line user end basically so",
    "start": "1532720",
    "end": "1540279"
  },
  {
    "text": "this function will execute that for us so as an attacker we can simply turn around and say um if if we inject first",
    "start": "1540279",
    "end": "1548480"
  },
  {
    "text": "off into our webbased SQL injection floor and we're wanting to execute arbitrary esql we can essentially um",
    "start": "1548480",
    "end": "1555399"
  },
  {
    "text": "declare a pragma autonomous trans action that basically says to the Oracle database server what we're executing",
    "start": "1555399",
    "end": "1562200"
  },
  {
    "text": "here is a discret little unit of code execution in and of itself so don't worry about things like that you're",
    "start": "1562200",
    "end": "1567559"
  },
  {
    "text": "allowed to commit transactions in Anon in this Anonymous PLC block and add users or Grant uh DBA privileges or",
    "start": "1567559",
    "end": "1574600"
  },
  {
    "text": "whatever it happens to be if providing you know the the Privileges are there so",
    "start": "1574600",
    "end": "1580120"
  },
  {
    "text": "um we essentially Supply our arbitary SQL and in effect batch arbitary",
    "start": "1580120",
    "end": "1585679"
  },
  {
    "text": "SQL so there's a whole bunch of them um WIP Mass load utilities Dynamic SQL",
    "start": "1585679",
    "end": "1592679"
  },
  {
    "text": "again it takes an arbitrary SQL statement and uh we have to spy a couple of uh bind variables in this case uh MSC",
    "start": "1592679",
    "end": "1600039"
  },
  {
    "text": "get name execute SQL get count uh there's a couple in that don't exist in",
    "start": "1600039",
    "end": "1606399"
  },
  {
    "text": "in release 12 uh so if you're on 11i and the others aren't available to you these",
    "start": "1606399",
    "end": "1612039"
  },
  {
    "text": "might be of use uh there are also a couple which um",
    "start": "1612039",
    "end": "1619240"
  },
  {
    "text": "execute a save point and that save point basically is the beginning of a transaction and if you are in the middle",
    "start": "1619240",
    "end": "1625520"
  },
  {
    "text": "of a select statement you cannot obviously commit a transaction in the middle of a select statement so we can't",
    "start": "1625520",
    "end": "1631240"
  },
  {
    "text": "use these in in in these uh this OKC WF exec and so on we can't actually use",
    "start": "1631240",
    "end": "1637880"
  },
  {
    "text": "those in a select based um SQL injection floor but if it's in if you're injecting",
    "start": "1637880",
    "end": "1643840"
  },
  {
    "text": "into an incern or a delete or an update it's perfectly valid to use these things because we're obviously in the middle of",
    "start": "1643840",
    "end": "1649080"
  },
  {
    "text": "a transaction already anyway so there's a whole bunch of ways",
    "start": "1649080",
    "end": "1655679"
  },
  {
    "start": "1653000",
    "end": "1653000"
  },
  {
    "text": "we can get from apps to assist you one might beg you know one might ask the question why does one need to execute",
    "start": "1655679",
    "end": "1662039"
  },
  {
    "text": "code assist when you're already executing his apps and the apps has high Privileges and apps has all the access",
    "start": "1662039",
    "end": "1667200"
  },
  {
    "text": "to uh the the data we're interest in anyway and the reason is because you might want to do things that apps can't",
    "start": "1667200",
    "end": "1673960"
  },
  {
    "text": "do you might want to access the file system in an arbitary way execute arbitary OS commands for example that",
    "start": "1673960",
    "end": "1680159"
  },
  {
    "text": "might require CIS privileges so we have to look at ways of how one can execute SQL assis from",
    "start": "1680159",
    "end": "1686320"
  },
  {
    "text": "apps now there's there's a whole um number of ways we can do this one is",
    "start": "1686320",
    "end": "1691720"
  },
  {
    "text": "direct execution of CIS owned packages and procedures that might be vulnerable",
    "start": "1691720",
    "end": "1697480"
  },
  {
    "text": "to SQL injection so this is you know direct execution or we can do indirect execution what we mean by that is if if",
    "start": "1697480",
    "end": "1704240"
  },
  {
    "text": "there's a a plsql package or procedure that is owned by System that um might be vulnerable to SQL",
    "start": "1704240",
    "end": "1712120"
  },
  {
    "text": "injection then we can execute arbitrary code as a a system and whatever system",
    "start": "1712120",
    "end": "1717720"
  },
  {
    "text": "can do at that moment in time we can then uh you know gain uh extra privileges so for example",
    "start": "1717720",
    "end": "1725360"
  },
  {
    "text": "system can execute dbms unor cisor SQL and we'll get to that in a minute but",
    "start": "1725360",
    "end": "1730679"
  },
  {
    "text": "the point is we can chain our attack um together so up until very recently the",
    "start": "1730679",
    "end": "1738320"
  },
  {
    "text": "just just came out for it and I reported it in October 2014 so it's taken two years to get to this point apps could",
    "start": "1738320",
    "end": "1745399"
  },
  {
    "text": "execute dbms csql now this package is owned by CIS and it allows you to",
    "start": "1745399",
    "end": "1751159"
  },
  {
    "text": "specify the user ID of the account under which you wish to execute SQL so if you",
    "start": "1751159",
    "end": "1757960"
  },
  {
    "text": "specify zero which is the user ID for CIS then you can if if provided you have",
    "start": "1757960",
    "end": "1763399"
  },
  {
    "text": "access to this dbms cisor SQL package you can execute arbitrary SQL as the CIS",
    "start": "1763399",
    "end": "1769559"
  },
  {
    "text": "user by as I said specifying user ID zero now apps the reason apps had access",
    "start": "1769559",
    "end": "1775440"
  },
  {
    "text": "to that is because the fnd Dore websc package essentially Alters a database",
    "start": "1775440",
    "end": "1781600"
  },
  {
    "text": "users password so and it does that via a call to dbms",
    "start": "1781600",
    "end": "1786720"
  },
  {
    "text": "csql uh passes user and it passes it as the the CIS",
    "start": "1786720",
    "end": "1791799"
  },
  {
    "text": "user but it strikes me as rather odd when we could Grant the the app to use",
    "start": "1791799",
    "end": "1798480"
  },
  {
    "text": "the alter user privilege directly so we can then do an execute autter user",
    "start": "1798480",
    "end": "1803519"
  },
  {
    "text": "statement as opposed to granting apps the ability to execute arbitrary SQL whatever the you know it wants to do as",
    "start": "1803519",
    "end": "1810039"
  },
  {
    "text": "the CIS user so they tightened up privileges that way you know it's a a not employing the principle of least",
    "start": "1810039",
    "end": "1816080"
  },
  {
    "text": "privilege kind of flaw not earth shattering but useful in in in uh some",
    "start": "1816080",
    "end": "1821279"
  },
  {
    "text": "attack scenarios but Oracle when they patched this introduced a new procedure",
    "start": "1821279",
    "end": "1828679"
  },
  {
    "text": "that was owned by CIS executable by apps and using definer rights and is",
    "start": "1828679",
    "end": "1834000"
  },
  {
    "text": "vulnerable to SQL injection so their patch actually leaves us in the same predicament we can still execute code as",
    "start": "1834000",
    "end": "1840720"
  },
  {
    "text": "um CIS from apps and we'll we'll look at that in a second so in in terms of a a direct execution of you know what an",
    "start": "1840720",
    "end": "1847840"
  },
  {
    "text": "attack would look like so what we're doing basically is we um we're opening a",
    "start": "1847840",
    "end": "1853200"
  },
  {
    "text": "cursor called C we're then paing as the user uh user ID CIS user ID which is",
    "start": "1853200",
    "end": "1859880"
  },
  {
    "text": "zero and uh the code reuting is uh the current user display the the environment",
    "start": "1859880",
    "end": "1867399"
  },
  {
    "text": "and and print it out to the screen and if we see that we're connected as apps but when that code execute it executes as a",
    "start": "1867399",
    "end": "1874760"
  },
  {
    "text": "CIS so webify that attack essentially um we use our auxiliary inject function in",
    "start": "1877399",
    "end": "1885399"
  },
  {
    "text": "this case apps. pbws act accl 1. dsql",
    "start": "1885399",
    "end": "1890559"
  },
  {
    "text": "execute here's our declare pragma autonomous ex uh autonomous transaction",
    "start": "1890559",
    "end": "1895639"
  },
  {
    "text": "This Is Us uh opening the cursor paing the the SQL and again all we're doing is is printing current user to the screen",
    "start": "1895639",
    "end": "1902159"
  },
  {
    "text": "we could if we wanted to do something like Grant DBA to public uh whatever your attch needs to be the point is it's",
    "start": "1902159",
    "end": "1908720"
  },
  {
    "text": "executing there um as user zero which is CIS we then execute it close the cursor",
    "start": "1908720",
    "end": "1915120"
  },
  {
    "text": "um CU that's what good hackers do they they clean up half of them M themselves and not leave memory leaks uh and then",
    "start": "1915120",
    "end": "1920559"
  },
  {
    "text": "end that we can inject into a web-based JSP vulnerable seal injection",
    "start": "1920559",
    "end": "1926360"
  },
  {
    "text": "vulnerability and that will then execute as CIS for us from apps but remember that's now been",
    "start": "1926360",
    "end": "1933320"
  },
  {
    "start": "1931000",
    "end": "1931000"
  },
  {
    "text": "patched so there is no longer direct execution of uh dbms csql as as the apps",
    "start": "1933320",
    "end": "1939480"
  },
  {
    "text": "user however system recall does have the ability to execute dbms csql so what we",
    "start": "1939480",
    "end": "1946679"
  },
  {
    "text": "can do is Now now find a vulnerability in and a system owned package or",
    "start": "1946679",
    "end": "1952760"
  },
  {
    "text": "procedure which of course there is one uh system. ad apps private basically is vulnerable to SQL",
    "start": "1952760",
    "end": "1959000"
  },
  {
    "text": "injection and what we're going to do is is build our attack and layer it",
    "start": "1959000",
    "end": "1964200"
  },
  {
    "text": "together so what we're doing here is we are injecting into our um auxiliary",
    "start": "1964200",
    "end": "1970440"
  },
  {
    "text": "inject function which in this case is apps. ASG custom pvt exac CMD we are",
    "start": "1970440",
    "end": "1976480"
  },
  {
    "text": "exploiting the SQL injection Flor in ad apps private do apps ddl uh we're printing the user one we",
    "start": "1976480",
    "end": "1983200"
  },
  {
    "text": "need a bind variable there and we're doing an execute immediate internally to that declare pragma autonomous transaction here's our um paing as user",
    "start": "1983200",
    "end": "1992200"
  },
  {
    "text": "user Zer down here um and so what will",
    "start": "1992200",
    "end": "1997639"
  },
  {
    "text": "happen is this executes his apps this executes a system system has access to dbms SQL which it then executes for us",
    "start": "1997639",
    "end": "2005639"
  },
  {
    "text": "so we' we've layed our attack in one single thing now in the real world web ifying this we remove obviously the",
    "start": "2005639",
    "end": "2010840"
  },
  {
    "text": "select and the you know the the from duel uh put a double pipe operator in",
    "start": "2010840",
    "end": "2015960"
  },
  {
    "text": "front of that and at the end of that and our single quotes and then double up all instances of quotes here so that one",
    "start": "2015960",
    "end": "2021960"
  },
  {
    "text": "would become two that one would become four this 16 would become 32 the reason why I didn't webify it before is because",
    "start": "2021960",
    "end": "2028960"
  },
  {
    "text": "having 32 here and here and here it just looks really silly uh but I think that",
    "start": "2028960",
    "end": "2034440"
  },
  {
    "text": "is 16 is the most I've ever had to do uh in in a in in a single attack uh sometimes you lose track and",
    "start": "2034440",
    "end": "2042480"
  },
  {
    "text": "you know or one's missing you're like God what's going wrong you know uh but yeah so it's an interesting attack so",
    "start": "2042480",
    "end": "2048240"
  },
  {
    "text": "again we can pipe this without username and password into one of the known SQL injection flaws in EB business suite and",
    "start": "2048240",
    "end": "2056280"
  },
  {
    "text": "suddenly execute SQL as as CIS on the EB business Suite",
    "start": "2056280",
    "end": "2062159"
  },
  {
    "start": "2064000",
    "end": "2064000"
  },
  {
    "text": "server so we've got how how much time do we have left 10 minutes right",
    "start": "2064240",
    "end": "2072359"
  },
  {
    "text": "so there are as I said 15,000 jsps in a typical install in E business Suite what",
    "start": "2072800",
    "end": "2080679"
  },
  {
    "text": "you'll find more often than not is you're not using 15,000 you're using around about",
    "start": "2080679",
    "end": "2089118"
  },
  {
    "text": "200 sometimes more sometimes less so what we can do we want to we",
    "start": "2089119",
    "end": "2095040"
  },
  {
    "text": "obviously want to strip those actually I want to back a bit remember there are multiple ways to access arbitrary JSP",
    "start": "2095040",
    "end": "2102480"
  },
  {
    "text": "Pages via extern functionality within e business Suite you know we can use rf.",
    "start": "2102480",
    "end": "2108440"
  },
  {
    "text": "JSP we can use JSP forwards and so on so it's not simple enough a simple enough",
    "start": "2108440",
    "end": "2113720"
  },
  {
    "text": "case to just say let's deny access to all the files except the ones we want to give access to it's a lot safer to",
    "start": "2113720",
    "end": "2119599"
  },
  {
    "text": "delete them from the file system or move them to a directory outside the web route",
    "start": "2119599",
    "end": "2124680"
  },
  {
    "text": "um because the forwards only work in the web route anyway my my personal preference is delete them",
    "start": "2124680",
    "end": "2130119"
  },
  {
    "text": "entirely all those files you not using delete them entirely because there might be some kind of directory traversal flaw",
    "start": "2130119",
    "end": "2136040"
  },
  {
    "text": "and you can still gain access to them so this is is based upon the knowledge that there are multiple ways to ex you know",
    "start": "2136040",
    "end": "2141920"
  },
  {
    "text": "execute uh a uh or gain access to a SQL injection floor uh what we do is review",
    "start": "2141920",
    "end": "2148520"
  },
  {
    "text": "the access logs for legitimate access look for accesses to rf. JSP because",
    "start": "2148520",
    "end": "2155480"
  },
  {
    "text": "obviously it's an actual part of in fact very popular part of EB business",
    "start": "2155480",
    "end": "2160599"
  },
  {
    "text": "functionality and often you'll find that use uh developers will use rf. JSP to to",
    "start": "2160599",
    "end": "2166480"
  },
  {
    "text": "give access to some of these other jsps so just because a JSP is not listed in the access log it might be accessed",
    "start": "2166480",
    "end": "2173079"
  },
  {
    "text": "through rf. JSP so what you need to do is extract the function ID um for from",
    "start": "2173079",
    "end": "2178720"
  },
  {
    "text": "all calls to rf. JSP and then look up in the f&d form functions table if it's a JSP page and include that in the list in",
    "start": "2178720",
    "end": "2185839"
  },
  {
    "text": "in your white list essentially you also need to look at things like included",
    "start": "2185839",
    "end": "2190880"
  },
  {
    "text": "jsps uh so one JSP a. JSP might include",
    "start": "2190880",
    "end": "2196200"
  },
  {
    "text": "you know a JSP B and that b might include C so you have to do an analysis",
    "start": "2196200",
    "end": "2202319"
  },
  {
    "text": "downwards as well and also look for forwards uh so a recent engagement we",
    "start": "2202319",
    "end": "2207880"
  },
  {
    "text": "went from 15,000 jsps to just under 200 which shows a a",
    "start": "2207880",
    "end": "2214800"
  },
  {
    "text": "99.99% reduction in a tax surface essentially uh admittedly some of the floors some of",
    "start": "2214800",
    "end": "2222079"
  },
  {
    "text": "the 200 uh gsps that were left over still were vulnerable to SQL injection",
    "start": "2222079",
    "end": "2227400"
  },
  {
    "text": "uh but we we addressed that by essentially you know uh securing",
    "start": "2227400",
    "end": "2233280"
  },
  {
    "text": "ourselves so that's that's that's the thing once you've done this removed all the gsps you don't need access to do a a",
    "start": "2233280",
    "end": "2239720"
  },
  {
    "text": "deep dive code review of these things and look for vulnerabilities yourself and if it's found you know to be wanting",
    "start": "2239720",
    "end": "2245800"
  },
  {
    "text": "then uh take steps to remediate the risk or use mod security or something in front to improve or you improve you know",
    "start": "2245800",
    "end": "2252400"
  },
  {
    "text": "the security robustness or uh some WAFF or something uh if you look at the default",
    "start": "2252400",
    "end": "2258440"
  },
  {
    "text": "servlets on E business Suite there's about 80 we actually used two of them so",
    "start": "2258440",
    "end": "2263520"
  },
  {
    "text": "again we just stripped them out and we're now down to two a 97% reduction in a tax",
    "start": "2263520",
    "end": "2270400"
  },
  {
    "start": "2270000",
    "end": "2270000"
  },
  {
    "text": "surface uh specifically to securing uh 11.5 I know there's only about three people in the room that this is relevant",
    "start": "2270400",
    "end": "2276720"
  },
  {
    "text": "to so apologies in advance um go through the uh fnd enabled PL SQL and set enable",
    "start": "2276720",
    "end": "2286000"
  },
  {
    "text": "to end for as many as you possibly can there's about 700 that might be enabled by default we got uh our list down to uh",
    "start": "2286000",
    "end": "2294319"
  },
  {
    "text": "it says six but it was actually 16 I'm missing a one there I apologize uh again it's a 99% reduction in a tax",
    "start": "2294319",
    "end": "2301079"
  },
  {
    "text": "surface and remember uh the review I did There Was You know I only looked at 40",
    "start": "2301079",
    "end": "2306280"
  },
  {
    "text": "of them and 50 were vulnerable to SQL injection so that means that there's a good chance that the remaining you know",
    "start": "2306280",
    "end": "2314280"
  },
  {
    "text": "uh 600 plus packages might be vulnerable too so it's definitely worthwhile to take the time to reduce the list of",
    "start": "2314280",
    "end": "2321200"
  },
  {
    "text": "those psql packages and procedures that are enabled uh and reduce it to those which the business requires access",
    "start": "2321200",
    "end": "2329640"
  },
  {
    "start": "2330000",
    "end": "2330000"
  },
  {
    "text": "to so that's essentially the the approach is strip it down uh and review",
    "start": "2330480",
    "end": "2336200"
  },
  {
    "text": "what's left youing use mod rewrite or mod security to deny access to uh those",
    "start": "2336200",
    "end": "2341359"
  },
  {
    "text": "things that you can't actually remove for for whatever uh reason and what's been really useful actually in the case",
    "start": "2341359",
    "end": "2348000"
  },
  {
    "text": "of uh the the the previous engagements is create a custom 404 page so if someone is actually denied access to",
    "start": "2348000",
    "end": "2354560"
  },
  {
    "text": "this uh do a mod rewrite and redirect them to an essentially a page that explains the page you're looking for has",
    "start": "2354560",
    "end": "2361720"
  },
  {
    "text": "been removed for security reasons here's an ID raise a you know a call with the",
    "start": "2361720",
    "end": "2367520"
  },
  {
    "text": "help desk and what we can do is look at that and see if you have a legitimate business need for access to it and then",
    "start": "2367520",
    "end": "2374040"
  },
  {
    "text": "we can you know put it back on the the web server for",
    "start": "2374040",
    "end": "2378880"
  },
  {
    "text": "you so uh any",
    "start": "2379200",
    "end": "2384280"
  },
  {
    "start": "2380000",
    "end": "2380000"
  },
  {
    "text": "questions sure there's a",
    "start": "2389119",
    "end": "2392920"
  },
  {
    "text": "question",
    "start": "2396319",
    "end": "2399319"
  },
  {
    "text": "well some of them have built in things like um cross-site scripting detection like the b& application actually has its",
    "start": "2410240",
    "end": "2416520"
  },
  {
    "text": "own useless one um and uh but you can't",
    "start": "2416520",
    "end": "2421839"
  },
  {
    "text": "turn it off because it's built into the code unfortunately um I mean things like on on the web browser side you can",
    "start": "2421839",
    "end": "2427800"
  },
  {
    "text": "obviously handle that by disabling things like access auditor and and so on uh but on the on the web server side no",
    "start": "2427800",
    "end": "2433839"
  },
  {
    "text": "there there's typically not in some of the um in some of the um web logic stuff",
    "start": "2433839",
    "end": "2441240"
  },
  {
    "text": "there is a filter in there that's a by default you could strip that out but my advice is not to do that because you're",
    "start": "2441240",
    "end": "2447000"
  },
  {
    "text": "going to expose the system to more attacks basically I know you would reenable it after the pentest but why",
    "start": "2447000",
    "end": "2453079"
  },
  {
    "text": "have that window of opportunity you know um but yeah there's certain",
    "start": "2453079",
    "end": "2458560"
  },
  {
    "text": "uh profile settings that you could probably weaken as well in EB business Suite but again it's not my",
    "start": "2458560",
    "end": "2464200"
  },
  {
    "text": "recommendation to do so because what you're actually doing is you should be assessing it under the current environment anyway exactly yeah but",
    "start": "2464200",
    "end": "2472240"
  },
  {
    "text": "there there are certain things you can do but sometimes it's built into the code itself and you're stuck with that",
    "start": "2472240",
    "end": "2479440"
  },
  {
    "text": "basically no other questions sure uh yeah and there's about five",
    "start": "2479960",
    "end": "2486240"
  },
  {
    "text": "white papers with it as it's it's not online but I think uh Chris do you know if there um a disc or there is a disc",
    "start": "2486240",
    "end": "2494000"
  },
  {
    "text": "it's the the slide should be on the desk and and a couple of white papers and stuff as well sure there was a question over",
    "start": "2494000",
    "end": "2502520"
  },
  {
    "text": "there could sorry could you speak up Sir how",
    "start": "2504680",
    "end": "2509720"
  },
  {
    "text": "long I would like to understand like thank you for the presentation but can you share a like how you",
    "start": "2510640",
    "end": "2519119"
  },
  {
    "text": "oh yeah yeah no problems grap for for the JSP 1es simply grep uh and manual",
    "start": "2519119",
    "end": "2525160"
  },
  {
    "text": "source code review so some of the flaws um let let me uh get it up because it's",
    "start": "2525160",
    "end": "2531520"
  },
  {
    "text": "actually so for a company that apparently has a robust security Assurance",
    "start": "2531520",
    "end": "2538760"
  },
  {
    "text": "program so some of them are really easy to find",
    "start": "2546119",
    "end": "2552240"
  },
  {
    "text": "uh let me uh search here we",
    "start": "2552240",
    "end": "2557480"
  },
  {
    "text": "go SQL",
    "start": "2557480",
    "end": "2561200"
  },
  {
    "text": "query okay so there's a a file called jtf CSV render task. JSP it takes a",
    "start": "2563040",
    "end": "2569680"
  },
  {
    "text": "parameter called SQL query anybody want to Hazard a guess what that actually",
    "start": "2569680",
    "end": "2575280"
  },
  {
    "text": "does right so for company with a robust security Assurance program how the hell",
    "start": "2575280",
    "end": "2581000"
  },
  {
    "text": "did that get into production and what's more not be found for 10 years how",
    "start": "2581000",
    "end": "2587079"
  },
  {
    "text": "that's how long it's been there for you know um other ones look for query look",
    "start": "2587079",
    "end": "2594160"
  },
  {
    "text": "for table and I said grep you know uh look for table look for search those kind of things and it gives you",
    "start": "2594160",
    "end": "2600680"
  },
  {
    "text": "something you know to look at do a code review see that you know they're not you know parameterizing queries or uh you",
    "start": "2600680",
    "end": "2608599"
  },
  {
    "text": "know stripping quotes or whatever it happens to be and uh so yeah I'm not using any special tool uh a command line",
    "start": "2608599",
    "end": "2615119"
  },
  {
    "text": "grep and my brain essentially so for as I said for an A company that has a",
    "start": "2615119",
    "end": "2621280"
  },
  {
    "text": "robust secure Assurance program it's slightly concerning any other questions sure are",
    "start": "2621280",
    "end": "2629720"
  },
  {
    "text": "there methods to Downs access from",
    "start": "2629720",
    "end": "2639040"
  },
  {
    "text": "[Music]",
    "start": "2642540",
    "end": "2645639"
  },
  {
    "text": "yeah it's um that's the the subject of a whole other seven talks basically it's a",
    "start": "2649319",
    "end": "2656480"
  },
  {
    "text": "really difficult proposition uh to solve and uh there are ways you can do it and",
    "start": "2656480",
    "end": "2662400"
  },
  {
    "text": "you know you have to write your own procedures and and and so on uh but it's it is hard but if if you have an",
    "start": "2662400",
    "end": "2670559"
  },
  {
    "text": "environment where that kind of situation is important not to be vulnerable to you know all the apps you know and all the",
    "start": "2670559",
    "end": "2677440"
  },
  {
    "text": "developers having access to the apps username and password for for a start they shouldn't have access to the production you know system they should",
    "start": "2677440",
    "end": "2684839"
  },
  {
    "text": "have access to their Dev stuff and they can test their code and and everything like that and the the the dev environment should obviously have a",
    "start": "2684839",
    "end": "2690240"
  },
  {
    "text": "different password for for the apps user um that's you know security 101 but in",
    "start": "2690240",
    "end": "2695960"
  },
  {
    "text": "terms of putting a layer in front of them yeah it's a whole other talk send",
    "start": "2695960",
    "end": "2701480"
  },
  {
    "text": "me an email or something and we can we can talk about it later on any other",
    "start": "2701480",
    "end": "2707520"
  },
  {
    "text": "questions sure there's a question the back",
    "start": "2707520",
    "end": "2711520"
  },
  {
    "text": "there yeah well as I said the the best thing to do is spend some time uh",
    "start": "2718000",
    "end": "2723359"
  },
  {
    "text": "reducing the attack surface look at what you know the business requires access to",
    "start": "2723359",
    "end": "2728440"
  },
  {
    "text": "strip everything else out and then do a review on on the bit that's left basically that still",
    "start": "2728440",
    "end": "2736680"
  },
  {
    "text": "still uh so you mean on the client side have a",
    "start": "2747559",
    "end": "2753520"
  },
  {
    "text": "vulnerable version of right um yeah it might require um the best thing",
    "start": "2753520",
    "end": "2760440"
  },
  {
    "text": "to do if there's a specific situation that you have raise an Sr with Oracle and get them to address it uh it's",
    "start": "2760440",
    "end": "2766960"
  },
  {
    "text": "probably the quickest way my way would be a cheap hack that probably wouldn't be supported um so yeah the the the best",
    "start": "2766960",
    "end": "2774839"
  },
  {
    "text": "thing I can do is first off strip everything down those bits that actually are introducing this situation in in",
    "start": "2774839",
    "end": "2781040"
  },
  {
    "text": "your network where you require old versions of Java on the client uh raise an Sr with Oracle and say you need to",
    "start": "2781040",
    "end": "2787640"
  },
  {
    "text": "the the problem is because you're you're it's no longer supported do you have Premier support with your e business",
    "start": "2787640",
    "end": "2792880"
  },
  {
    "text": "suite for 11x version they might still fix it for you then but because it is no",
    "start": "2792880",
    "end": "2798359"
  },
  {
    "text": "longer in sustaining support as of December the 31st 2015 they might turn",
    "start": "2798359",
    "end": "2803800"
  },
  {
    "text": "around and say not we're not we're not touching this with the barge pole and they'll say upgrade to the next version",
    "start": "2803800",
    "end": "2810640"
  },
  {
    "text": "uh I'm sorry I can't be much more help than that but it's honestly the best approach",
    "start": "2810640",
    "end": "2815839"
  },
  {
    "text": "sorry any other questions sureen",
    "start": "2815839",
    "end": "2822720"
  },
  {
    "text": "any L",
    "start": "2827599",
    "end": "2830760"
  },
  {
    "text": "of Y so that's the one area still on my list to do and the reason I've left it",
    "start": "2836599",
    "end": "2843920"
  },
  {
    "text": "till last is because it's off you know to put to to put it bluntly in",
    "start": "2843920",
    "end": "2849720"
  },
  {
    "text": "all versions you know it's running um under very highly privileged code uh",
    "start": "2849720",
    "end": "2855839"
  },
  {
    "text": "often there's ways you know as you said a lot of it shell you know um you know",
    "start": "2855839",
    "end": "2861119"
  },
  {
    "text": "bash scripts and and and stuff and it's vulnerable to a whole bunch of you know execute arbitary command kind of",
    "start": "2861119",
    "end": "2866760"
  },
  {
    "text": "situations so yeah what the focus of this talk has been again is securing the",
    "start": "2866760",
    "end": "2873359"
  },
  {
    "text": "web front end uh because once you're on that backend side of things it's a Utopia you",
    "start": "2873359",
    "end": "2881920"
  },
  {
    "text": "know uh no more questions then I would like to take this or was there a question there is",
    "start": "2883000",
    "end": "2891400"
  },
  {
    "text": "sure well uh next year I'll talk about agile",
    "start": "2896440",
    "end": "2901640"
  },
  {
    "text": "and uh there will be enough I'm I'm joking you know there there's in fact one of my colleagues at um where I work",
    "start": "2901640",
    "end": "2907880"
  },
  {
    "text": "essentially has done a recent job on agile and Oracle have just fixed a whole bunch of bugs in agile in the July uh",
    "start": "2907880",
    "end": "2915559"
  },
  {
    "text": "2016 CPU they they've just fixed about 20 issues in agile so if you look at their you know what was it 280 bugs",
    "start": "2915559",
    "end": "2922559"
  },
  {
    "text": "across all the the products was the last CPU that was a record for Oracle uh 286 bugs uh so things like agile Fusion you",
    "start": "2922559",
    "end": "2931040"
  },
  {
    "text": "know e business Suite Enterprise Manager they're all full of bugs you know Massive Attack surface but the good",
    "start": "2931040",
    "end": "2937040"
  },
  {
    "text": "thing is Oracle are working with security researchers and are fixing this stuff you know they're they're getting",
    "start": "2937040",
    "end": "2942160"
  },
  {
    "text": "quicker at fixing as well sometimes you can report something and they'll take three years to fix it there was a a race condition in the workspace uh schema in",
    "start": "2942160",
    "end": "2950760"
  },
  {
    "text": "the LT application copy for update and uh I reported that in November 2013 and",
    "start": "2950760",
    "end": "2956720"
  },
  {
    "text": "they only recently just patched it you know so sometimes it takes a long time to fix off but most of this e business",
    "start": "2956720",
    "end": "2962760"
  },
  {
    "text": "Suite stuff they've really nailed you know they've got it patched out they of",
    "start": "2962760",
    "end": "2967839"
  },
  {
    "text": "uh of everything I've reported to them in this area I think there's about maybe 10% left remaining to be patched so",
    "start": "2967839",
    "end": "2974200"
  },
  {
    "text": "they've done done a good job you know right we'll call it uh time there",
    "start": "2974200",
    "end": "2980720"
  },
  {
    "text": "and thank you very much everybody for coming out I hope it has been useful and [Applause]",
    "start": "2980720",
    "end": "2987920"
  },
  {
    "text": "uh",
    "start": "2987920",
    "end": "2990920"
  }
]