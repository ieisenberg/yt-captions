[
  {
    "start": "0",
    "end": "127000"
  },
  {
    "text": "[Music] [Laughter]",
    "start": "1610",
    "end": "10260"
  },
  {
    "text": "um without further Ado I'd like to introduce our speaker today uh fine",
    "start": "11120",
    "end": "16358"
  },
  {
    "text": "Cerna and today's presentation is the info leak era of software",
    "start": "16359",
    "end": "22240"
  },
  {
    "text": "[Applause] exploitation thank you uh good afternoon",
    "start": "22980",
    "end": "30320"
  },
  {
    "text": "thank you for coming for my talk uh again hopefully you got a lot of coffee this is going to be an interesting one",
    "start": "30320",
    "end": "36719"
  },
  {
    "text": "uh my name is FNA today I'm going to talk about infol uh before going deep",
    "start": "36719",
    "end": "43520"
  },
  {
    "text": "into my presentation I want to get some information about the audience can you raise your hand how many of you have",
    "start": "43520",
    "end": "49879"
  },
  {
    "text": "ever exploited a stack based buff overflow E1 meain in the",
    "start": "49879",
    "end": "55120"
  },
  {
    "text": "2000s okay that was not expected um how many of you",
    "start": "55120",
    "end": "64198"
  },
  {
    "text": "have defeated anx or de exploiting that one how many of you thought that in 2004",
    "start": "64199",
    "end": "72600"
  },
  {
    "text": "when XP Service Pack 2 introduced dep the end of exploiting was over and you",
    "start": "72600",
    "end": "78159"
  },
  {
    "text": "know we should start a new gardening business or something like that at least I I I thought it I mean and right now I",
    "start": "78159",
    "end": "85360"
  },
  {
    "text": "take a look to those days and I laugh to myself so and then later on aslr came and I again I made the same mistake I",
    "start": "85360",
    "end": "92320"
  },
  {
    "text": "thought the exploitation days are over but no I uh the thing here is that if",
    "start": "92320",
    "end": "98240"
  },
  {
    "text": "you as long as security researchers either defensive or offensive uh uh they",
    "start": "98240",
    "end": "104799"
  },
  {
    "text": "keep doing research uh they will always find small tweaks or small areas where",
    "start": "104799",
    "end": "111079"
  },
  {
    "text": "the mitigations are not as effective as they thought when they were developed um nowadays well that we have full hlr dep",
    "start": "111079",
    "end": "119320"
  },
  {
    "text": "and all this uh one of the new hotness is what are",
    "start": "119320",
    "end": "124360"
  },
  {
    "text": "infol so this is a talk about infol so this is agenda of today uh",
    "start": "124360",
    "end": "131160"
  },
  {
    "start": "127000",
    "end": "313000"
  },
  {
    "text": "basically it's divided in in in three areas uh you you see two over there but",
    "start": "131160",
    "end": "137120"
  },
  {
    "text": "it's three areas the first one is talking about what is an infol what it was not needed before uh why was what it",
    "start": "137120",
    "end": "145080"
  },
  {
    "text": "is needed right now uh some examples I'm not trying to uh claim that I am",
    "start": "145080",
    "end": "151120"
  },
  {
    "text": "inventing or researching all these techniques uh so this some of these they were already uh applied to exploits even",
    "start": "151120",
    "end": "159239"
  },
  {
    "text": "10 years ago I'm not claiming anything this is some of them yeah they are original but not all of them so I will",
    "start": "159239",
    "end": "165040"
  },
  {
    "text": "try to make examples of uh exploits that they were using particular techniques so",
    "start": "165040",
    "end": "170959"
  },
  {
    "text": "but just wanted to to be clear on this I'm not claiming ownership of anything",
    "start": "170959",
    "end": "176840"
  },
  {
    "text": "uh some of them are original some of them not I will try to make sure which one are which uh also and then we will",
    "start": "176840",
    "end": "184040"
  },
  {
    "text": "go deep into the technical details of this talk uh infol techniques the idea here is to convert type of",
    "start": "184040",
    "end": "191000"
  },
  {
    "text": "vulnerabilities into an infol not all of them will be convertible to an infol but",
    "start": "191000",
    "end": "196599"
  },
  {
    "text": "some of them will I'm just going to give you some general techniques and general hints uh to try to convert those those",
    "start": "196599",
    "end": "203120"
  },
  {
    "text": "are going to be totally dependent on the vulnerability some of them they have some requisites",
    "start": "203120",
    "end": "210280"
  },
  {
    "text": "to meet um and without meeting them you're not going to be able to convert them into an INF folic uh here is a list",
    "start": "210280",
    "end": "217280"
  },
  {
    "text": "we're going to talk about Heap overflows stack overflows use after freeze uh type confusion vulnerabilities",
    "start": "217280",
    "end": "224159"
  },
  {
    "text": "and later on it's not an infol but I found it so cool that I had to talk about this is converting a use after",
    "start": "224159",
    "end": "229480"
  },
  {
    "text": "free into an Universal xss and you could say what the is this guy talking about I mean converting a use after fre",
    "start": "229480",
    "end": "236040"
  },
  {
    "text": "into Universal EXs a memory corruption into a logical back yeah yeah you can do it uh I will present in deep detail",
    "start": "236040",
    "end": "246040"
  },
  {
    "text": "uh a vulnerability I found in Flash in March that by the way is uh is going to",
    "start": "246040",
    "end": "251560"
  },
  {
    "text": "be the pony Awards so but I don't have any hope because of Pinkie Pie and",
    "start": "251560",
    "end": "256639"
  },
  {
    "text": "Alexander something or not Sergey something sorry uh yeah uh how how I I",
    "start": "256639",
    "end": "262800"
  },
  {
    "text": "converted that information that vulnera to an information disclosure vulnerability well back and later on",
    "start": "262800",
    "end": "270120"
  },
  {
    "text": "some slides about what I think explation is going to be in the future so who I am I'm F CA uh that's my",
    "start": "270120",
    "end": "278199"
  },
  {
    "text": "Twitter that's my email feel free to contact me with any question or feel free to talk to me later I'm I work for",
    "start": "278199",
    "end": "284039"
  },
  {
    "text": "Google all this research was done in free time is Google just give me the freedom to talk about this as long as",
    "start": "284039",
    "end": "290160"
  },
  {
    "text": "I'm reasonable before Google I was working for Microsoft at msrc I'm the I was the main developer and owner of EMT",
    "start": "290160",
    "end": "297440"
  },
  {
    "text": "uh who do you guys know I mean who knows about em who is using a it's an awesome tool they just released the latest the",
    "start": "297440",
    "end": "304479"
  },
  {
    "text": "the new version today you guys should check it out and I been writing exploit since 1999 so I think I'm a little bit",
    "start": "304479",
    "end": "310240"
  },
  {
    "text": "entitled to talk about exploitation techniques uh let's go deep into the",
    "start": "310240",
    "end": "315520"
  },
  {
    "start": "313000",
    "end": "713000"
  },
  {
    "text": "details of the of the talk what is an eolic uh the problem here is I couldn't find",
    "start": "315520",
    "end": "322000"
  },
  {
    "text": "any definition of infol totally um I mean on on exploitation you",
    "start": "322000",
    "end": "328759"
  },
  {
    "text": "could find inol on some other uh Sciences but not on explation so I had to come with mine so yeah I'm quoting",
    "start": "328759",
    "end": "334720"
  },
  {
    "text": "myself so an inic is the consequence of exploiting a software vulnerability in",
    "start": "334720",
    "end": "341039"
  },
  {
    "text": "order to disclose the layout or content of process kernel memory I want to make emphasis on the layout or content it's",
    "start": "341039",
    "end": "347680"
  },
  {
    "text": "not always about getting the the data on an specific address it's super useful when you get information about where is",
    "start": "347680",
    "end": "355120"
  },
  {
    "text": "the Hep or how the hip is uh what's the layout of the hip",
    "start": "355120",
    "end": "360560"
  },
  {
    "text": "uh that's my definition also we have uh halber flake and I fully agree with him",
    "start": "360560",
    "end": "365639"
  },
  {
    "text": "is that you do not create an infol you don't find an infol I mean it's not that you start fasing uh your favorite",
    "start": "365639",
    "end": "372319"
  },
  {
    "text": "browser and you find an infol you create an infol based on a bag or vulnerability",
    "start": "372319",
    "end": "378120"
  },
  {
    "text": "that you previously found and infs are needed for Reliable exploitation uh aslr",
    "start": "378120",
    "end": "384680"
  },
  {
    "text": "bypass is a subset of reliable exploitation um because by back in the",
    "start": "384680",
    "end": "389840"
  },
  {
    "text": "days where ASR was not present infol were used for Reliable SPL for locating your cell code or something like that so",
    "start": "389840",
    "end": "397280"
  },
  {
    "text": "yeah uh why they were not needed before because uh back in the 2000s we were",
    "start": "397280",
    "end": "402919"
  },
  {
    "text": "amate exploit developers were jumping in to fix it address in the stack uh who remember the gets SP uh C snippet of",
    "start": "402919",
    "end": "412120"
  },
  {
    "text": "code where he was getting the stack pointer and you use that remotely it's like if you do it right now probably I",
    "start": "412120",
    "end": "418199"
  },
  {
    "text": "would I mean chuckle uh we were lazy uh on 32bit you can in in the context of a",
    "start": "418199",
    "end": "425080"
  },
  {
    "text": "browser you can spray 2 gigabytes and most likely 41 41 4141 is going to",
    "start": "425080",
    "end": "430560"
  },
  {
    "text": "contain the the data that you are looking for and there were generic ways to bypass a mitigation so for example uh",
    "start": "430560",
    "end": "438360"
  },
  {
    "text": "if aslr was not present and but de was present or NX was present by performing",
    "start": "438360",
    "end": "443479"
  },
  {
    "text": "R return orent programming or returning to lipy or what or any other of these techniques you could bu pass de or NX",
    "start": "443479",
    "end": "450520"
  },
  {
    "text": "there was also uh nosr mappings on Windows uh it was an OP team thing if you don't compile your D with uh the",
    "start": "450520",
    "end": "457759"
  },
  {
    "text": "eslr thing uh it it's going to be always in a pritable place and it's spraying but this is kind of gone uh so yeah I'm",
    "start": "457759",
    "end": "465319"
  },
  {
    "text": "at Lazy generic wayte why they are needed now because some people need",
    "start": "465319",
    "end": "471199"
  },
  {
    "text": "reliable exploits those people I mean your guys are clever people uh there are new",
    "start": "471199",
    "end": "477520"
  },
  {
    "text": "security mitigations uh such as I don't know for example in Windows 8 there is mandatory SLR you can use M for enforce",
    "start": "477520",
    "end": "484759"
  },
  {
    "text": "mandatory SLR mic lion and mon lion and all these new",
    "start": "484759",
    "end": "491080"
  },
  {
    "text": "weird animals uh I mean there's also mandatory SLR Unix long time ago they",
    "start": "491080",
    "end": "496159"
  },
  {
    "text": "adopted it um again inol nowadays they are more focused on bypassing eslr but",
    "start": "496159",
    "end": "502759"
  },
  {
    "text": "my opinion is more for Reliable code execution and the those generic ways that we were using back in the day such",
    "start": "502759",
    "end": "508960"
  },
  {
    "text": "aset Alex from net trick or net2 on I all spraying from the on",
    "start": "508960",
    "end": "518360"
  },
  {
    "text": "they are all gone there there could be some generic ways but yeah I don't want to talk about that uh here until they",
    "start": "518360",
    "end": "525279"
  },
  {
    "text": "are probably fixed and here's a previous list a list of previously uh used inol",
    "start": "525279",
    "end": "534680"
  },
  {
    "text": "exploits I'm not going to go in detail on all of this there is tons uh there is there are inol that they were used even",
    "start": "534680",
    "end": "540880"
  },
  {
    "text": "10 years ago so it's not something that is uh invented right now again I'm not claiming that I invented any of those",
    "start": "540880",
    "end": "546839"
  },
  {
    "text": "some of them they are original some of them not I will uh go one by one uh trying to detail which one is which but",
    "start": "546839",
    "end": "553079"
  },
  {
    "text": "lots of people they were involved doing this long time before me um yeah uh",
    "start": "553079",
    "end": "559600"
  },
  {
    "text": "there's a nice list I want to to make some emphasis in in for example all the",
    "start": "559600",
    "end": "564880"
  },
  {
    "text": "pontons IE vulnerabilities and Firefox uh last year they were producing in folic for uh bypassing aslr and for",
    "start": "564880",
    "end": "572480"
  },
  {
    "text": "example there's a a nice bro and get own scenario that the duu exploit used for a",
    "start": "572480",
    "end": "579519"
  },
  {
    "text": "Kel I mean using a kernel vulnerability and at the same time using an in folic to for Reliable code execution so yeah",
    "start": "579519",
    "end": "586279"
  },
  {
    "text": "you can check out all this list later uh let's use this as an example this is a super small snippet of source code uh",
    "start": "586279",
    "end": "594279"
  },
  {
    "text": "main function with a guess where it is the buff flow uh highlight",
    "start": "594279",
    "end": "600160"
  },
  {
    "text": "so yeah let's use this as an example it's a stack based buffer overflow we're going to overflow the the buffer the 64",
    "start": "600160",
    "end": "606399"
  },
  {
    "text": "by buffer uh this overflow is inside a tricept so let's assume that this this",
    "start": "606399",
    "end": "611720"
  },
  {
    "text": "is on windows so the stack is going to be buffer other member variabl safy VP",
    "start": "611720",
    "end": "617200"
  },
  {
    "text": "safy IP uh argument something else um an extractor exception record in the stack",
    "start": "617200",
    "end": "623120"
  },
  {
    "text": "so if there are no mitigations in place this is like 2000s uh early 2000s so we",
    "start": "623120",
    "end": "628519"
  },
  {
    "text": "just override EIP return to our cell code there's no NX there's no isar nothing I'm not going to detail uh give",
    "start": "628519",
    "end": "636200"
  },
  {
    "text": "information on on on what these mitig are I assume you guys know about them u",
    "start": "636200",
    "end": "641760"
  },
  {
    "text": "i yeah I don't want to spend 15 minutes talking about the yr I assume you guys know about this GS Canary cookies so",
    "start": "641760",
    "end": "647360"
  },
  {
    "text": "yeah you can uh instead of overwriting EIP you go to the Str exception Handler uh registration record and you override",
    "start": "647360",
    "end": "653839"
  },
  {
    "text": "the Handler and you jump into your cell code if GS is enabled and de is enabled you do the same but instead of into your",
    "start": "653839",
    "end": "659560"
  },
  {
    "text": "cell code since that is enabled you return into lipy or your you do your r or return into programming or whatever",
    "start": "659560",
    "end": "665920"
  },
  {
    "text": "you technique you feel like if shop is enabled uh yeah I mean uh you can do the",
    "start": "665920",
    "end": "673279"
  },
  {
    "text": "same and at the same time shop basically validates that sttion registation chain",
    "start": "673279",
    "end": "678440"
  },
  {
    "text": "is intact you can fake it because aslr is not in place and you can predict where it's going to be the the final",
    "start": "678440",
    "end": "685120"
  },
  {
    "text": "record that contains the canary value and if everything is enabled yes deop",
    "start": "685120",
    "end": "690279"
  },
  {
    "text": "and aslr basically uh you either pray or buy a good infol or find a good infol uh",
    "start": "690279",
    "end": "697720"
  },
  {
    "text": "so that's the key of this talk nowadays they are needed because of uh this super",
    "start": "697720",
    "end": "705600"
  },
  {
    "text": "nice people in OS uh in the companies that they develop OS they they're making",
    "start": "705600",
    "end": "710920"
  },
  {
    "text": "this harder which is good so let me check the time okay infol",
    "start": "710920",
    "end": "717639"
  },
  {
    "start": "713000",
    "end": "895000"
  },
  {
    "text": "techniques um in this talk we're going to talk about techniques um and I I'm",
    "start": "717639",
    "end": "727720"
  },
  {
    "text": "most likely I will try not to refer to browsers but most likely I will so just",
    "start": "727720",
    "end": "732760"
  },
  {
    "text": "this is a heads up in advance but you can apply this to any process that uh",
    "start": "732760",
    "end": "738639"
  },
  {
    "text": "exposes some Primitives that an attacker can use these Primitives is uh for example uh you exercise some type of",
    "start": "738639",
    "end": "745680"
  },
  {
    "text": "code um I don't know imagine on JavaScript you you create an element an image tag and by cre creating an element",
    "start": "745680",
    "end": "753240"
  },
  {
    "text": "an image tag is going to translate into some allocations in the Heap some freeze Etc so as as long as you find a way to",
    "start": "753240",
    "end": "763440"
  },
  {
    "text": "uh translate uh an action in the in the process into uh into your Primitives you can apply all these techniques to to",
    "start": "763440",
    "end": "770120"
  },
  {
    "text": "this um to this type of processes so you need analog primitive a free PR free",
    "start": "770120",
    "end": "775399"
  },
  {
    "text": "primitive when I mean an analog is analog of an specific control size with",
    "start": "775399",
    "end": "780480"
  },
  {
    "text": "control content a free is uh freeing something that you control a pointer",
    "start": "780480",
    "end": "786760"
  },
  {
    "text": "that you control also uh if uh in case I want to create an specific type of object I want to exercise some some",
    "start": "786760",
    "end": "793440"
  },
  {
    "text": "functionality in the program that will translate later into allocating this type of object and uh optionally well",
    "start": "793440",
    "end": "799480"
  },
  {
    "text": "optionally some most of the times needed uh I need Hep spraying capabilities uh Hep spraying is usually linked to",
    "start": "799480",
    "end": "805519"
  },
  {
    "text": "JavaScript but this is not always true you can Hep spray through images you can can hip spray through a lot of things",
    "start": "805519",
    "end": "811600"
  },
  {
    "text": "and uh not only hip sprain uh it's super useful to read back the hip sprain that you made so on JavaScript is super easy",
    "start": "811600",
    "end": "818240"
  },
  {
    "text": "you just uh have a huge string and you can read it back from that variable that",
    "start": "818240",
    "end": "823720"
  },
  {
    "text": "created a huge string uh examples that they are really really well researched",
    "start": "823720",
    "end": "829279"
  },
  {
    "text": "researched uh basically are the web browsers browser they are really really uh known techniques on how to um how to",
    "start": "829279",
    "end": "837920"
  },
  {
    "text": "allocate memory free memory massage the he we will later Define some terms uh flash it's really well",
    "start": "837920",
    "end": "845680"
  },
  {
    "text": "researched this is because it runs mainly everywhere and it's super useful if you find a flash vulnerability uh to",
    "start": "845680",
    "end": "851480"
  },
  {
    "text": "exploit any any host process but generally generally speaking any host",
    "start": "851480",
    "end": "856639"
  },
  {
    "text": "that uh can run attacker control scripting so any host of a script",
    "start": "856639",
    "end": "861920"
  },
  {
    "text": "language uh but it's not limited to it for example you can find this Primitives",
    "start": "861920",
    "end": "867519"
  },
  {
    "text": "uh on Excel by paring before Recs an Excel file is basically a list of beef records uh um Excel is super nice when",
    "start": "867519",
    "end": "875480"
  },
  {
    "text": "uh you pass a specific type of B record it will allocate some memory or it will free it so you can uh have an Excel file",
    "start": "875480",
    "end": "882240"
  },
  {
    "text": "that it will allocate 10 10 strings it will free one I mean depending on the",
    "start": "882240",
    "end": "888000"
  },
  {
    "text": "records but yeah uh but this talk is more like on the browser but you can apply this again to any process that",
    "start": "888000",
    "end": "893600"
  },
  {
    "text": "meets this requirements I'm going to uh Define some Concepts before Contin of execution",
    "start": "893600",
    "end": "900440"
  },
  {
    "start": "895000",
    "end": "974000"
  },
  {
    "text": "because I'm going to use this Concepts later on basically continu execution uh yeah sorry for my definitions I'm from",
    "start": "900440",
    "end": "907560"
  },
  {
    "text": "Spain this not my native language uh but I Define it as the ability to gain",
    "start": "907560",
    "end": "912600"
  },
  {
    "text": "control of the flow of a program uh execute a cell code or a gadget or something that you control and later",
    "start": "912600",
    "end": "919079"
  },
  {
    "text": "give back control to the program so the program does not crash so it's like okay",
    "start": "919079",
    "end": "924160"
  },
  {
    "text": "I I I I I exploit a stack by I use after free something executed executes but the",
    "start": "924160",
    "end": "930240"
  },
  {
    "text": "the attacker the the user that is been attacked does not know anything the browser doesn't go away I mean you it's",
    "start": "930240",
    "end": "937160"
  },
  {
    "text": "just is still in the same page so exploiting someone giving back control so you can exploit it several times Hep",
    "start": "937160",
    "end": "945240"
  },
  {
    "text": "massaging uh this is something that we're going to use later is the ability of to influence the Hep layout of a",
    "start": "945240",
    "end": "950519"
  },
  {
    "text": "program by controlling where an object is place and what is adjacent to it so basically is uh I I I'm going to use the",
    "start": "950519",
    "end": "956959"
  },
  {
    "text": "Primitives to control the layout of the hip I want this subject to be surrounded",
    "start": "956959",
    "end": "962120"
  },
  {
    "text": "by these other two objects that I control and use after free use of",
    "start": "962120",
    "end": "968560"
  },
  {
    "text": "probably free memory you should do to a dangling pointer reference to free memory object super simple version so we",
    "start": "968560",
    "end": "975440"
  },
  {
    "start": "974000",
    "end": "1078000"
  },
  {
    "text": "create an element uh this element is uh in memory is going to be a a a c object",
    "start": "975440",
    "end": "981480"
  },
  {
    "text": "it's going to have a b table pointer that is going to a btable pointer is a pointer to a table of virtual functions",
    "start": "981480",
    "end": "987360"
  },
  {
    "text": "this excuse me this is going to uh point to a dll shared object or whatever and",
    "start": "987360",
    "end": "995360"
  },
  {
    "text": "later on it's going to have member variabl so uh if if this object contain",
    "start": "995360",
    "end": "1000839"
  },
  {
    "text": "uh I don't know for in this case and several variables from sign long flag uh",
    "start": "1000839",
    "end": "1006199"
  },
  {
    "text": "Char buffer another type cache and later on a r of of 64 bytes all of this is",
    "start": "1006199",
    "end": "1013199"
  },
  {
    "text": "going to be part of the same uh memory chunk the first four bytes or eight Byes",
    "start": "1013199",
    "end": "1018920"
  },
  {
    "text": "and then if you are in 32 or 64 it's going to be the B table pointer so this is when we we we execute",
    "start": "1018920",
    "end": "1026760"
  },
  {
    "text": "this JavaScript code document create Element image tag again this is super simplified uh this is the the the blue",
    "start": "1026760",
    "end": "1034520"
  },
  {
    "text": "the blue square is the the the memory that contains that object so if we later by using a vulnerability we cost the",
    "start": "1034520",
    "end": "1041319"
  },
  {
    "text": "free of this uh this uh memory chunk but",
    "start": "1041319",
    "end": "1046640"
  },
  {
    "text": "the variable a still has a reference to to to this memory Chunk we we basically",
    "start": "1046640",
    "end": "1051840"
  },
  {
    "text": "trigger the use after well the the free of the buner we we not yet exercise the",
    "start": "1051840",
    "end": "1056919"
  },
  {
    "text": "code that is going to use it again so at this point the memory chunk is free uh most likely the first four bytes",
    "start": "1056919",
    "end": "1063799"
  },
  {
    "text": "or eight bytes are going to be change because depending on the Hep implementation is going to be linked to another free chunks depending it's but I",
    "start": "1063799",
    "end": "1071760"
  },
  {
    "text": "for simplification I didn't um I didn't do anything basically the contents are the same but the block is free",
    "start": "1071760",
    "end": "1080400"
  },
  {
    "start": "1078000",
    "end": "1244000"
  },
  {
    "text": "uh using a primitive in JavaScript uh locating a string we are going to reclaim that object so um the attacker",
    "start": "1081280",
    "end": "1088919"
  },
  {
    "text": "not only controls that object but controls the content of that object so for example right now A is pointing to",
    "start": "1088919",
    "end": "1095159"
  },
  {
    "text": "this the variable a the JavaScript uh behind their functionality is pointing",
    "start": "1095159",
    "end": "1100360"
  },
  {
    "text": "to an object that is pointing to here and right now the attacker control the B table pointer 41 41 41 this is because",
    "start": "1100360",
    "end": "1107200"
  },
  {
    "text": "of AA and all not only controls the bable pointer but controls all the member variables and in this case fla buffer",
    "start": "1107200",
    "end": "1115120"
  },
  {
    "text": "long type uh cash or name so uh this is",
    "start": "1115120",
    "end": "1120440"
  },
  {
    "text": "key for the rest of the presentation it's not all about controlling the vtable pointer back in the days back in the one two years ago people were only U",
    "start": "1120440",
    "end": "1129240"
  },
  {
    "text": "focus on controlling the V table pointer because that's the only thing that they needed but for in folic we need to",
    "start": "1129240",
    "end": "1134440"
  },
  {
    "text": "control the the memor the member variables of the object so in this case the the the attacker allocated a string",
    "start": "1134440",
    "end": "1142400"
  },
  {
    "text": "probably it's not going to allocate one string it's going to allocate thousands of strings because they want to reliably",
    "start": "1142400",
    "end": "1147600"
  },
  {
    "text": "get this object and later on is going to exercise uh um uh some functionality on the on the",
    "start": "1147600",
    "end": "1156400"
  },
  {
    "text": "on JavaScript that it will exercise that reference there are several different uh",
    "start": "1156400",
    "end": "1161960"
  },
  {
    "text": "types of uh functionality first one is uh a virtual function of the object a virtual function of the object is going",
    "start": "1161960",
    "end": "1167520"
  },
  {
    "text": "to get the virtual table pointer the reference it and call into it uh we're",
    "start": "1167520",
    "end": "1172679"
  },
  {
    "text": "interested in those they are super cool uh but right now if if it's going to call into some place that you control and you don't have any information about",
    "start": "1172679",
    "end": "1179520"
  },
  {
    "text": "where are the modules it's kind of useless for right now uh so there's another a scenario where uh we're going",
    "start": "1179520",
    "end": "1186440"
  },
  {
    "text": "to exercise some code but um that code is not going to to go through a virtual",
    "start": "1186440",
    "end": "1191640"
  },
  {
    "text": "function it's going to go through a non virtual function so it's going to jump directly into a module uh passing",
    "start": "1191640",
    "end": "1198120"
  },
  {
    "text": "probably CX as the dis pointer uh so it's not going to reference nothing from",
    "start": "1198120",
    "end": "1203400"
  },
  {
    "text": "this object it's just going to call over there and what happen next is up to the implementation of that object uh there",
    "start": "1203400",
    "end": "1210080"
  },
  {
    "text": "are some other scenarios where they will directly in line something for grabbing a variable or something like that but",
    "start": "1210080",
    "end": "1215480"
  },
  {
    "text": "yeah use after free create an element somehow fre that's the vulnerability the red part all the attacker will allocate",
    "start": "1215480",
    "end": "1222080"
  },
  {
    "text": "something it will not only control the virtual table pointer but the other member variables this is super useful again for the next of presentation and",
    "start": "1222080",
    "end": "1228720"
  },
  {
    "text": "then exercise some code that is either a virtual function non virtual function inline thing or whatever that will uh",
    "start": "1228720",
    "end": "1234960"
  },
  {
    "text": "use this this object as a valid thing while the attacker is holding not only a",
    "start": "1234960",
    "end": "1240000"
  },
  {
    "text": "ref is holding not only the chunk but the contents of the chunk so this talk is about the",
    "start": "1240000",
    "end": "1249200"
  },
  {
    "start": "1244000",
    "end": "1314000"
  },
  {
    "text": "possibility of converting several types of vulnerabilities into infol some of them depends on the I mean totally",
    "start": "1249200",
    "end": "1256880"
  },
  {
    "text": "depends on the vulnerability some of them uh some techniques they require some they have some requirements if you",
    "start": "1256880",
    "end": "1263200"
  },
  {
    "text": "don't meet them uh you either look for another type of vulnerability or another",
    "start": "1263200",
    "end": "1268480"
  },
  {
    "text": "way to play with the vulnerability to find an infol or you just uh I don't know report it to the vendor uh so again",
    "start": "1268480",
    "end": "1277880"
  },
  {
    "text": "type of vulnerabilities into kind of hints techniques we're going to talk about stack overflows Heap overflows use",
    "start": "1277880",
    "end": "1284799"
  },
  {
    "text": "after freeze type confusions and later on is not an folic but I thought it was so cool that I had to uh talk about this",
    "start": "1284799",
    "end": "1291840"
  },
  {
    "text": "converting a use after free memory corruption into a logical thing Universal",
    "start": "1291840",
    "end": "1297760"
  },
  {
    "text": "xss uh and finally we talk about this vulnerability in Flash uh we'll go",
    "start": "1297760",
    "end": "1303000"
  },
  {
    "text": "through a a quick walk through of how I exploited uh and again this is nominated",
    "start": "1303000",
    "end": "1309720"
  },
  {
    "text": "for the pony awards at 615 with but I don't have any hope uh stack",
    "start": "1309720",
    "end": "1316960"
  },
  {
    "start": "1314000",
    "end": "1345000"
  },
  {
    "text": "overflows in in the in the picture that you seeing there is a stack based buffer this is the buffer that we're going to",
    "start": "1316960",
    "end": "1323679"
  },
  {
    "text": "overflow in the stack there is going to be other variables EVP that was Sav with",
    "start": "1323679",
    "end": "1328799"
  },
  {
    "text": "this concrete value 10 5 six whatever it's going to be the safe EIP and function arguments there is the idea",
    "start": "1328799",
    "end": "1336440"
  },
  {
    "text": "here is that there is some requirements and I will explain later why we need this uh we need continuous extion and",
    "start": "1336440",
    "end": "1342400"
  },
  {
    "text": "hip sprain we need continue OB secution because we are going to exploit this twice the first time that we're going to",
    "start": "1342400",
    "end": "1348679"
  },
  {
    "start": "1345000",
    "end": "1460000"
  },
  {
    "text": "exploit it we're not going to entirely overwrite the safe EIP value we're going to override it",
    "start": "1348679",
    "end": "1354840"
  },
  {
    "text": "partially uh so we are going to land into I mean we control where we're going to land in this case we're going to land",
    "start": "1354840",
    "end": "1361640"
  },
  {
    "text": "in a range between 7f E3 000000 and 7f E3 FF FF the idea here is to land into a",
    "start": "1361640",
    "end": "1369279"
  },
  {
    "text": "return or interment Gadget that is going to write back into our hip sprain so",
    "start": "1369279",
    "end": "1374520"
  },
  {
    "text": "continue execution for executing the deated Twice first one for infol leaking and second one for uh code execution and",
    "start": "1374520",
    "end": "1381520"
  },
  {
    "text": "the second requirement is hip spraying the idea is we previously hip spray we U",
    "start": "1381520",
    "end": "1388480"
  },
  {
    "text": "we perform the I mean we we partially overwrite uh EIP we return into a r",
    "start": "1388480",
    "end": "1394960"
  },
  {
    "text": "Gadget that is going to write back into our hip sprain hopefully this rub Gadget",
    "start": "1394960",
    "end": "1400520"
  },
  {
    "text": "is going to be in in in that page basically between 7f E300 and 7f E3 F FF",
    "start": "1400520",
    "end": "1407960"
  },
  {
    "text": "if you find that drop Gadget you're done it's going to write into EVP and and again I assume that uh there is going to",
    "start": "1407960",
    "end": "1415679"
  },
  {
    "text": "be an interesting value in a register in this case evx so in this case we're returning into a a r Gadget that is",
    "start": "1415679",
    "end": "1421240"
  },
  {
    "text": "going to write evx into EVP but hey we control EVP in this case 41 41 41 41 so",
    "start": "1421240",
    "end": "1428120"
  },
  {
    "text": "again we need to execute the vulnerability Twice first one for infol second one second one for remote code execution uh returning into a control",
    "start": "1428120",
    "end": "1435480"
  },
  {
    "text": "into a page of the binary into a r gadget for for infol lcking uh yeah this is what it's called",
    "start": "1435480",
    "end": "1443320"
  },
  {
    "text": "partial overwrite uh I'm not claiming that I me that this this is this was used long time ago for the nii",
    "start": "1443320",
    "end": "1450400"
  },
  {
    "text": "vulnerability on IE and yeah this is uh this is not news now uh I will take questions later in",
    "start": "1450400",
    "end": "1458440"
  },
  {
    "text": "the QA so uh Hep overflows uh I we have here",
    "start": "1458440",
    "end": "1464400"
  },
  {
    "start": "1460000",
    "end": "1512000"
  },
  {
    "text": "a he based buffer uh in the in the picture later on we have a JavaScript string usually U I'm not not focusing on",
    "start": "1464400",
    "end": "1470720"
  },
  {
    "text": "any browser but usually JavaScript is just uh four bytes or8 byes depending if you're in 32 or",
    "start": "1470720",
    "end": "1476559"
  },
  {
    "text": "64 that contains the length of the string um the string blah and uh later uh we",
    "start": "1476559",
    "end": "1485039"
  },
  {
    "text": "are going to require heat massaging because we are going to place the the heat buffer that we're going to overflow",
    "start": "1485039",
    "end": "1490600"
  },
  {
    "text": "the JavaScript string and an object uh the idea here is to overwrite the size",
    "start": "1490600",
    "end": "1495880"
  },
  {
    "text": "in this case the size is four because blast string is four bytes long and we're going to rewrite it with f f f f f",
    "start": "1495880",
    "end": "1501440"
  },
  {
    "text": "f f f uh later on with JavaScript uh we are going to reference that string and we're going to perform some operations",
    "start": "1501440",
    "end": "1508799"
  },
  {
    "text": "in that string in this case string do substring uh something and this",
    "start": "1508799",
    "end": "1514279"
  },
  {
    "text": "JavaScript code is going to check the length and since we overwrote the length and it's super huge we can read any",
    "start": "1514279",
    "end": "1521000"
  },
  {
    "text": "place relative to the object and in this case we're going to Target the object V table uh that is adjacent to the",
    "start": "1521000",
    "end": "1527840"
  },
  {
    "text": "JavaScript string uh this also was uh used by uh Skyline in an exploit that he",
    "start": "1527840",
    "end": "1535960"
  },
  {
    "text": "used he he developed for Chrome U probably some others uh Hep JavaScript string object",
    "start": "1535960",
    "end": "1544320"
  },
  {
    "text": "we overflow we overwrite the F the the size of the string the string dot length",
    "start": "1544320",
    "end": "1549640"
  },
  {
    "text": "to be able to read past the buffer of the JavaScript stream the second Hep",
    "start": "1549640",
    "end": "1555720"
  },
  {
    "text": "overflow also requires Hep massaging because I want to play the Heat based buffer that we're going to overflow and",
    "start": "1555720",
    "end": "1562080"
  },
  {
    "text": "another string and an object in this case it's not going to be a um a JavaScript string it's going to be a regular string regular strings uh is I",
    "start": "1562080",
    "end": "1569360"
  },
  {
    "text": "mean it's just a string null terminated so in this case you're clever people",
    "start": "1569360",
    "end": "1574520"
  },
  {
    "text": "yeah we're going to overwrite the N characters so whenever we we reference that string it's going to return data",
    "start": "1574520",
    "end": "1581559"
  },
  {
    "text": "past the blah and the N character because we overwrote it with AA so it's",
    "start": "1581559",
    "end": "1586600"
  },
  {
    "text": "going to give give us all those St plus the what it is adjacent and uh using",
    "start": "1586600",
    "end": "1592640"
  },
  {
    "text": "heat massaging we were able to place an object um and the first as I told you the first four bites of the object is",
    "start": "1592640",
    "end": "1598880"
  },
  {
    "text": "basically the the V table of that object so yeah again this was used uh this this",
    "start": "1598880",
    "end": "1604880"
  },
  {
    "text": "has been used by buen this has been used by several other uh uh",
    "start": "1604880",
    "end": "1610919"
  },
  {
    "text": "pooners use after three uh remember um uh we were talking about uh virtual",
    "start": "1610919",
    "end": "1618240"
  },
  {
    "start": "1611000",
    "end": "2160000"
  },
  {
    "text": "methods versus non virtual methods virtual functions are super useful back in the days right now I mean if you",
    "start": "1618240",
    "end": "1623919"
  },
  {
    "text": "don't have an infol yeah you're going to crash in on probably unknown place so we are looking into use after phrase where",
    "start": "1623919",
    "end": "1631240"
  },
  {
    "text": "by exercising some code you are going to um uh uh end up calling into a non",
    "start": "1631240",
    "end": "1637279"
  },
  {
    "text": "virtual function non virtual function as you see in the second snippet of assembly is not going to Der the the the",
    "start": "1637279",
    "end": "1643919"
  },
  {
    "text": "viral pointer is just going to jump into a model and they usually push ECX as the",
    "start": "1643919",
    "end": "1649080"
  },
  {
    "text": "this pointer uh not only for use after free for uninitialized variables if you",
    "start": "1649080",
    "end": "1655840"
  },
  {
    "text": "let's say that you have a stack uh variable that was not initialized and you and it's later it's going to be used",
    "start": "1655840",
    "end": "1661720"
  },
  {
    "text": "if you stack spray before uh exercising the vulnerability you are going to be",
    "start": "1661720",
    "end": "1668240"
  },
  {
    "text": "able to control the object the the pointer to the object and it's kind of similar to a uh use after free uh so",
    "start": "1668240",
    "end": "1674399"
  },
  {
    "text": "again we are looking for non viral functions non not for code that exercises nonviral functions of an",
    "start": "1674399",
    "end": "1681519"
  },
  {
    "text": "object that we already control through a use after free uh several examples on this in this case",
    "start": "1681519",
    "end": "1689200"
  },
  {
    "text": "as we said before by controlling the the object that was freed and there's a still a reference we not only control",
    "start": "1689200",
    "end": "1695559"
  },
  {
    "text": "the object but the contents and people were usually targeting the the virtual table pointer but in this case we are we",
    "start": "1695559",
    "end": "1702840"
  },
  {
    "text": "want to control all the member variables in this case uh this case was was used lately by bin uh for exploiting the XML",
    "start": "1702840",
    "end": "1711200"
  },
  {
    "text": "vulnerability on on I uh basically we have an object it has",
    "start": "1711200",
    "end": "1718000"
  },
  {
    "text": "its own virtual table pointer but we're not going to use it because uh we're going to use a non virtual method and",
    "start": "1718000",
    "end": "1724399"
  },
  {
    "text": "PTR is the only I mean this is a super simplified version of a use after free uh PTR is controlled because we we",
    "start": "1724399",
    "end": "1730679"
  },
  {
    "text": "control the contents of the object remember the 41 41 42 42 so probably PTR right now here is 42 42 42 so uh there",
    "start": "1730679",
    "end": "1739120"
  },
  {
    "text": "is a non virtual method F and there's going to be some again JavaScript but uh",
    "start": "1739120",
    "end": "1746679"
  },
  {
    "text": "could be applied to any other process uh there's going to be some functionality on JavaScript that is going to call into",
    "start": "1746679",
    "end": "1752080"
  },
  {
    "text": "this non- virtual function and it's going to return some value hopefully that value is later on going to be",
    "start": "1752080",
    "end": "1757279"
  },
  {
    "text": "returned uh to I don't know through JavaScript or or by other any other means I know that buin they were using",
    "start": "1757279",
    "end": "1764559"
  },
  {
    "text": "their RGB colors uh for reading back uh memory uh and they they could reliably",
    "start": "1764559",
    "end": "1772039"
  },
  {
    "text": "Rel reliably control where to read um by controlling one of the member variables",
    "start": "1772039",
    "end": "1779039"
  },
  {
    "text": "uh use after free with member rights basically it's the same thing instead of Reading Writing the requirement is we",
    "start": "1779039",
    "end": "1786120"
  },
  {
    "text": "need hip spraying uh so we can later write a value to our hip spraying the idea is we",
    "start": "1786120",
    "end": "1792840"
  },
  {
    "text": "we spray strings and we again use a functionality of the program to exercise a non-",
    "start": "1792840",
    "end": "1799480"
  },
  {
    "text": "virtual method that is not going to call into a virtual function it's not going to D the V table pointer it's just going",
    "start": "1799480",
    "end": "1806039"
  },
  {
    "text": "to call into a module with a control object so here what is going to happen is going to or something on over there",
    "start": "1806039",
    "end": "1813080"
  },
  {
    "text": "so if we put in PTR 41 41 41 41 and we control PTR because we control not only",
    "start": "1813080",
    "end": "1818559"
  },
  {
    "text": "the virtual table pointer but the member variables sorry I'm repeating myself but",
    "start": "1818559",
    "end": "1823840"
  },
  {
    "text": "I want this to be clear so we are going to write into some place uh by writing into some place is most likely we're",
    "start": "1823840",
    "end": "1830559"
  },
  {
    "text": "going to write into the middle of a of a of a string later on from JavaScript we",
    "start": "1830559",
    "end": "1835679"
  },
  {
    "text": "are going to read that string and we say Okay Ah that's super nice 414141 is",
    "start": "1835679",
    "end": "1840720"
  },
  {
    "text": "offset 13 in my 20th string so I perform",
    "start": "1840720",
    "end": "1846720"
  },
  {
    "text": "again the the the vulnerability so instead of writing to that place I write",
    "start": "1846720",
    "end": "1851799"
  },
  {
    "text": "to the St do length value uh so we are again in in the",
    "start": "1851799",
    "end": "1858440"
  },
  {
    "text": "previous method where we could uh read and write any place relative to my buffer so again we we perform the bity",
    "start": "1858440",
    "end": "1866399"
  },
  {
    "text": "once we identify the address that we're writing is equals to this offset of this",
    "start": "1866399",
    "end": "1873279"
  },
  {
    "text": "JavaScript string and we exploit the vulnerability twice to",
    "start": "1873279",
    "end": "1879080"
  },
  {
    "text": "overwrite the string do length uh for converting this particle",
    "start": "1879080",
    "end": "1884240"
  },
  {
    "text": "vulnerability in the previous one that we mentioned that were it was a he base buff flow we overwriting the stct dot",
    "start": "1884240",
    "end": "1891840"
  },
  {
    "text": "length um another one use after free um there's going to be a nice picture after",
    "start": "1891840",
    "end": "1898080"
  },
  {
    "text": "this one so don't worry about the wording um requirements is heat massaging and predictable layout uh this",
    "start": "1898080",
    "end": "1904919"
  },
  {
    "text": "depends on the layout of the process it probably using Windows or Linux Hep uh",
    "start": "1904919",
    "end": "1911200"
  },
  {
    "text": "uh functionality or probably they implemented their own one uh there are some applications that they in my",
    "start": "1911200",
    "end": "1918679"
  },
  {
    "text": "opinion uh uh by mistake they they Implement their own uh hip uh they",
    "start": "1918679",
    "end": "1924080"
  },
  {
    "text": "should be using the latest OS ones which uh on some OES they are really good they have good hardening measures and",
    "start": "1924080",
    "end": "1930960"
  },
  {
    "text": "mitigations so but yeah if you if you are able to hip spray and you able to predict uh massage the hip and uh um",
    "start": "1930960",
    "end": "1940159"
  },
  {
    "text": "kind of predict the layout of the hip uh you can perform this one the idea here is that we can free any pointer that we",
    "start": "1940159",
    "end": "1947159"
  },
  {
    "text": "want again we have here an object where we not only control the the table pointer we control a PTR so if we",
    "start": "1947159",
    "end": "1954600"
  },
  {
    "text": "exercise some functionality on the program that is going to call into a non- virtual method F that will not call",
    "start": "1954600",
    "end": "1960240"
  },
  {
    "text": "it will not reference the virtual table pointer it's going to free some place uh",
    "start": "1960240",
    "end": "1965720"
  },
  {
    "text": "again we control PTR we're going to freeze something that we control the idea here is that we spray a lot of",
    "start": "1965720",
    "end": "1972759"
  },
  {
    "text": "strings as you can see here uh we we have the freed object with control content so the B pointer we don't care",
    "start": "1974519",
    "end": "1980960"
  },
  {
    "text": "because it's not going to Der it but the PTR we control it and if we can predict the layout we can point the PTR to one",
    "start": "1980960",
    "end": "1988080"
  },
  {
    "text": "of the those strings so by exercising the functionality it's going to free that string so at this moment all these",
    "start": "1988080",
    "end": "1994039"
  },
  {
    "text": "strings they are there instead of this one uh the malicious hacker or attacker",
    "start": "1994039",
    "end": "2000960"
  },
  {
    "text": "or researcher or whatever you want um is going to uh",
    "start": "2000960",
    "end": "2007960"
  },
  {
    "text": "request memory I mean using all those Primitives that I told you that they are required is going to request uh this",
    "start": "2007960",
    "end": "2013480"
  },
  {
    "text": "size of of chunks and hopefully one of them is going to he's going to get it at",
    "start": "2013480",
    "end": "2019679"
  },
  {
    "text": "this this moment uh I mean um hopefully he well hopefully in this case he's not",
    "start": "2019679",
    "end": "2026120"
  },
  {
    "text": "going to use strings because strings is just string is not an object he's going to request memory by allocating",
    "start": "2026120",
    "end": "2032519"
  },
  {
    "text": "objects executing some functionality that will allocate objects and by allocating an object the first thing that going to happen is they're going to",
    "start": "2032519",
    "end": "2038960"
  },
  {
    "text": "place a a javascri the V table pointer over there so we have a lot of strings that they are allocated we have one",
    "start": "2038960",
    "end": "2044840"
  },
  {
    "text": "string that it was freed but we have a a JavaScript reference to that string and the attacker get got that chunk that we",
    "start": "2044840",
    "end": "2052720"
  },
  {
    "text": "freed through the use after three and uh by an object and the attacker is going",
    "start": "2052720",
    "end": "2059358"
  },
  {
    "text": "to be able to read the V table pointer by read that in the v table pointer aslr is game over you just subtract the fixed",
    "start": "2059359",
    "end": "2065440"
  },
  {
    "text": "address and you redo the the the I mean you you already have the base of the of one of the modules this game over you",
    "start": "2065440",
    "end": "2072320"
  },
  {
    "text": "probably redo exploit with this information for a reliable return return oriented programming or something like",
    "start": "2072320",
    "end": "2078599"
  },
  {
    "text": "this yeah uh the third step is reading back the the the object through the reference to that string in",
    "start": "2078599",
    "end": "2085878"
  },
  {
    "text": "JavaScript um on demand functions or pointers of V tables basically is the",
    "start": "2085879",
    "end": "2090919"
  },
  {
    "text": "same thing is a non viral uh method uh where it's going to write back to your object uh something that is useful in",
    "start": "2090919",
    "end": "2097920"
  },
  {
    "text": "this case in this snippet of code we control PTR and not only we control PTR is one of the requirements is we need to",
    "start": "2097920",
    "end": "2104680"
  },
  {
    "text": "read back the content of the object uh the strategy here is",
    "start": "2104680",
    "end": "2110000"
  },
  {
    "text": "that we memory CH claimed by the string this is attacker control he plays AA but",
    "start": "2110000",
    "end": "2116200"
  },
  {
    "text": "you could place anything that you want and later on it's going to exercise some functionality in the application that is going to call into a non virtual",
    "start": "2116200",
    "end": "2122200"
  },
  {
    "text": "function f that is going to resolve WIC basically Lo Library get proc address",
    "start": "2122200",
    "end": "2127839"
  },
  {
    "text": "and guess what it's writing back to PTR so what's going to happen PTR is going to be uh the the the",
    "start": "2127839",
    "end": "2135119"
  },
  {
    "text": "address of WIC is going to uh be written back to the object that we control and",
    "start": "2135119",
    "end": "2140800"
  },
  {
    "text": "if we can read that object from JavaScript guess what's going to happen we already bypass eslr because you",
    "start": "2140800",
    "end": "2146480"
  },
  {
    "text": "subtract a fixed address and you have the base of that module and you are done um again these are super simplified",
    "start": "2146480",
    "end": "2153720"
  },
  {
    "text": "things but uh these are things that are happening uh in",
    "start": "2153720",
    "end": "2159000"
  },
  {
    "text": "the exploitation field type confusion this is the latest hotness um basically",
    "start": "2159000",
    "end": "2165640"
  },
  {
    "text": "the idea is that uh you couldn't find any non- virtual method uh all the",
    "start": "2165640",
    "end": "2171000"
  },
  {
    "text": "functionality that is happening is through virtual method so basically the referencing the virtual table virtual",
    "start": "2171000",
    "end": "2177640"
  },
  {
    "text": "table pointer and calling into some place so the idea is if we don't know it uh let's make the program put something",
    "start": "2177640",
    "end": "2185000"
  },
  {
    "text": "that is going to work over there so the we perform a use after free uh of an object x uh but later on",
    "start": "2185000",
    "end": "2193960"
  },
  {
    "text": "WE reclaim that memory Chan with an object Y and if that object I mean uh",
    "start": "2193960",
    "end": "2199240"
  },
  {
    "text": "the whenever youl the vulnerability it's going to reference the virtual table pointer but since the application placed",
    "start": "2199240",
    "end": "2204920"
  },
  {
    "text": "in that chunk an object Y is going is going to have a an accurate virtual table pointer it's not going to perform",
    "start": "2204920",
    "end": "2211160"
  },
  {
    "text": "an access violation by calling into a virtual function and it's going to uh jump into an address of a module What's",
    "start": "2211160",
    "end": "2217880"
  },
  {
    "text": "happen what the problem is that what what happens next after the type confusion is up to the application and",
    "start": "2217880",
    "end": "2224599"
  },
  {
    "text": "you need to find I mean it requires several steps the first thing is that that um the virtual function that is",
    "start": "2224599",
    "end": "2232079"
  },
  {
    "text": "going to be called in object X has to have the same amount of parameters of",
    "start": "2232079",
    "end": "2238319"
  },
  {
    "text": "the brital function X and number whatever in object y this is because",
    "start": "2238319",
    "end": "2244599"
  },
  {
    "text": "when returning from that virtual function uh the the stack needs to be in the same state so if if it had three",
    "start": "2244599",
    "end": "2251359"
  },
  {
    "text": "parameters and two parameters it's going to be off by four bytes or 8 bytes depending on 32 bit or 64bit so again",
    "start": "2251359",
    "end": "2260119"
  },
  {
    "text": "um everything failed but yeah there is a still hope type confusion virtual",
    "start": "2260119",
    "end": "2265280"
  },
  {
    "text": "functions and we replace an object of a type of something with an object of type of other thing that is going to use",
    "start": "2265280",
    "end": "2271720"
  },
  {
    "text": "Excuse me one of the techniques used before so basically it's going to load",
    "start": "2271720",
    "end": "2277040"
  },
  {
    "text": "uh at dll or it's going to write back to JavaScript it's going to write",
    "start": "2277040",
    "end": "2282599"
  },
  {
    "text": "whatever uh I've seen this technique been mention in Twitter today and",
    "start": "2282599",
    "end": "2288040"
  },
  {
    "text": "yesterday a lot so uh apparently this is the new hotness uh this is not an infol uh don't",
    "start": "2288040",
    "end": "2296280"
  },
  {
    "start": "2292000",
    "end": "2312000"
  },
  {
    "text": "worry about the wording uh this is you can read it later uh but basically if everything fails there is still some",
    "start": "2296280",
    "end": "2302640"
  },
  {
    "text": "hope uh for offensive researchers or for U yeah for the rest of",
    "start": "2302640",
    "end": "2308040"
  },
  {
    "text": "humans uh it's not anol but it was so cool that I had to talk about this basically we have a use after free in",
    "start": "2308040",
    "end": "2314760"
  },
  {
    "text": "the attacker domain uh we perform the attack so this C element and and I'm always referring",
    "start": "2314760",
    "end": "2322119"
  },
  {
    "text": "of C element bound to a JavaScript variable so at this moment the object is",
    "start": "2322119",
    "end": "2327640"
  },
  {
    "text": "fre but we have a reference to that object from attacker domain the next step is to spray a lot of five frames",
    "start": "2327640",
    "end": "2335319"
  },
  {
    "text": "from a Target in this case I don't know paypal.com if it could be frame I'm not sure if it can be frame if it has uh the",
    "start": "2335319",
    "end": "2342960"
  },
  {
    "text": "X frame options HTTP header or not but let's PayPal eBay",
    "start": "2342960",
    "end": "2348560"
  },
  {
    "text": "or I don't know whatever so we have an in the attacker domain a lot of I and a",
    "start": "2348560",
    "end": "2354760"
  },
  {
    "text": "an element a reference to an element that was freed the idea here is that by spraying",
    "start": "2354760",
    "end": "2361280"
  },
  {
    "text": "I frames hopefully one of the one of those ey frames is going to allocate that chunk with another C element",
    "start": "2361280",
    "end": "2368000"
  },
  {
    "text": "so at that at this moment we have a reference in the attacker domain to an",
    "start": "2368000",
    "end": "2374040"
  },
  {
    "text": "object in the targeted domain so let's say that we cleverly select a c element",
    "start": "2374040",
    "end": "2381520"
  },
  {
    "text": "I don't know c table element that has a weird size b z or something like that",
    "start": "2381520",
    "end": "2387640"
  },
  {
    "text": "it's not something super common to be allocated uh and we we have an element",
    "start": "2387640",
    "end": "2393160"
  },
  {
    "text": "pointing from the Tacker domain pointing to an element inside an i frame at this moment we already bypassed the same",
    "start": "2393160",
    "end": "2398680"
  },
  {
    "text": "origin policy where we cannot contain the this type of links so what's going",
    "start": "2398680",
    "end": "2405280"
  },
  {
    "text": "to happen next I will use JavaScript to insert a script tack so the attacker domain is going to be able through a use",
    "start": "2405280",
    "end": "2412560"
  },
  {
    "text": "after free to inject a script in the attacker domain uh there are no checks",
    "start": "2412560",
    "end": "2417680"
  },
  {
    "text": "for this in several browsers uh the checks are uh in some other places this is memory corruption convert it into a",
    "start": "2417680",
    "end": "2425440"
  },
  {
    "text": "uh logical vulnerability demo time i7 Windows 7 again this is",
    "start": "2425440",
    "end": "2431640"
  },
  {
    "text": "patched this is not a Sero day uh this is using a an infol leag actually is splitting the vity several times",
    "start": "2431640",
    "end": "2439800"
  },
  {
    "text": "for uh it's going to take a little bit because uh this is a VMware with 500",
    "start": "2443720",
    "end": "2449880"
  },
  {
    "text": "megabytes hip spraying expl the bity several times the hip sprain is uh slow",
    "start": "2449880",
    "end": "2456319"
  },
  {
    "text": "but in real life it will be quicker uh real life actually is less than 10 seconds here is 40 seconds um and again",
    "start": "2456319",
    "end": "2465079"
  },
  {
    "text": "this is I9 Windows 7 latest bits a set of this patch that was released couple",
    "start": "2465079",
    "end": "2470160"
  },
  {
    "text": "of weeks ago is the XML vulnerability you you have in the slides the CV number",
    "start": "2470160",
    "end": "2475440"
  },
  {
    "text": "not a Ser day I'm not sering anyone I would not do that uh and you will see",
    "start": "2475440",
    "end": "2481119"
  },
  {
    "text": "here uh calculator and the scientific one",
    "start": "2481119",
    "end": "2488319"
  },
  {
    "text": "yeah if you do something do it with style so uh I don't know this deserves",
    "start": "2488319",
    "end": "2495000"
  },
  {
    "text": "an Applause or something like that thank",
    "start": "2495000",
    "end": "2499480"
  },
  {
    "text": "you uh this this configuration did not contain any plugin all the generic",
    "start": "2500960",
    "end": "2507680"
  },
  {
    "text": "techniques for infoag they are all gone uh using one of the Techni mentioned before please don't ask I won't tell um",
    "start": "2507680",
    "end": "2515560"
  },
  {
    "text": "yeah I I'm I'm not about sharing weaponized code with probably an unknown",
    "start": "2515560",
    "end": "2521119"
  },
  {
    "start": "2520000",
    "end": "2533000"
  },
  {
    "text": "so I'm going to present the this CV that is who has I proba saw paper on March",
    "start": "2521119",
    "end": "2527640"
  },
  {
    "text": "who has read this paper any of you some of you right okay thank",
    "start": "2527640",
    "end": "2532760"
  },
  {
    "text": "you uh this I I call the perfect infol League because it's an infol league in",
    "start": "2532760",
    "end": "2538160"
  },
  {
    "text": "Flash that works reliably in a lot of places uh so it's nominated for a pony",
    "start": "2538160",
    "end": "2543880"
  },
  {
    "text": "award uh already fixed so I'm not sure in Adobe adob was super quick fixing",
    "start": "2543880",
    "end": "2549000"
  },
  {
    "text": "this before pwn to on uh but yeah seeit happens um yeah it's not it's not likely",
    "start": "2549000",
    "end": "2556800"
  },
  {
    "text": "to be found by uh bit flipping fasing it's more like API fasing and there's a",
    "start": "2556800",
    "end": "2562400"
  },
  {
    "text": "detail do in my website so the the here the the the the the V here is that we have a bitmap data class basically it's",
    "start": "2562400",
    "end": "2569640"
  },
  {
    "start": "2563000",
    "end": "2619000"
  },
  {
    "text": "a buffer and there's this exposes some apis to perform operations in this",
    "start": "2569640",
    "end": "2574760"
  },
  {
    "text": "buffer the vulnerability here is in this histogram function basically you supply a rectangle and it will give you back uh",
    "start": "2574760",
    "end": "2582160"
  },
  {
    "text": "the histogram of that b data buffer constrained by that rectangle the idea here the poity here is that they were",
    "start": "2582160",
    "end": "2588480"
  },
  {
    "text": "not checking if the rectangle was inside or outside the buffer so you could read",
    "start": "2588480",
    "end": "2595119"
  },
  {
    "text": "relative to that buffer the idea here is that okay why don't I Supply a one by one rectangle convert that big histogram",
    "start": "2595119",
    "end": "2602800"
  },
  {
    "text": "to data so I am I can relatively read a DW so I relative to the buffer but",
    "start": "2602800",
    "end": "2609119"
  },
  {
    "text": "reading relative to the buffer is cool uh you can probably find flash pointers over there but it's not reliable so uh",
    "start": "2609119",
    "end": "2615960"
  },
  {
    "text": "I'm always looking for excellence and this is what I did I converted the relative infol uh into an absolute inic",
    "start": "2615960",
    "end": "2623760"
  },
  {
    "text": "by performing the this steps first one I'm going to defragment the hip uh of",
    "start": "2623760",
    "end": "2628880"
  },
  {
    "text": "flash flash uses its own hip it doesn't use the operating system hip and I need to massage the hip uh so the initial is",
    "start": "2628880",
    "end": "2637839"
  },
  {
    "text": "uh the initial step is Def fragmenting it so I know it's going to be in a in a in a known State the second one is I'm",
    "start": "2637839",
    "end": "2644319"
  },
  {
    "text": "going to this is the common hip flash hip state I'm going to defragment it super",
    "start": "2644319",
    "end": "2650480"
  },
  {
    "text": "easy actually I'm using Primitives of flash I'm using the same vity to as a primitive I defragment the The Flash KP",
    "start": "2650480",
    "end": "2658200"
  },
  {
    "text": "later on I allocate the object that I'm going to use for the vulnerability again the object contains a BM data buffer and",
    "start": "2658200",
    "end": "2665440"
  },
  {
    "text": "I'm going to perform the histogram on that bitmap data buffer uh what I'm going to do is I'm going to allocate",
    "start": "2665440",
    "end": "2670960"
  },
  {
    "text": "same size blocks after the bitmap data buffer and I'm going to trigger a nistic on flash to uh free those those blocks",
    "start": "2670960",
    "end": "2678559"
  },
  {
    "text": "remember I'm looking for processes where I can reliably allocate uh memory",
    "start": "2678559",
    "end": "2683800"
  },
  {
    "text": "relatively free them uh allocate objects and keep spray so flash is the perfect thing so I'm going to trigger the the",
    "start": "2683800",
    "end": "2691480"
  },
  {
    "text": "garbage collector ristics it's these ones are going to be free and what's going to happen you see this small",
    "start": "2691480",
    "end": "2697760"
  },
  {
    "text": "orange blocks so these ones are basically links uh linked list it's going to point to the next one so uh",
    "start": "2697760",
    "end": "2706319"
  },
  {
    "text": "guess what I'm going to read one of those small orange uh squares uh using this bity I'm going to to read the one",
    "start": "2706319",
    "end": "2714680"
  },
  {
    "text": "adjacent to the to the bitmat data uh block that is pointing to the next one so I'm going to subtract",
    "start": "2714680",
    "end": "2721800"
  },
  {
    "text": "twice makes sense I'm reading the first one let's point it to the second one so I'm going to subtract twice so I have",
    "start": "2721800",
    "end": "2727200"
  },
  {
    "text": "the address absolute address of my bitmat data buffer and then if you have the absolute address of your bitmat data",
    "start": "2727200",
    "end": "2733200"
  },
  {
    "text": "buffer you already converted the relative infol to the absolute infol because you basically if you want to",
    "start": "2733200",
    "end": "2738400"
  },
  {
    "text": "read 41 41 41 you basically subtract the the the address of your buffer uh and by doing that from now on",
    "start": "2738400",
    "end": "2746839"
  },
  {
    "text": "comes something that is totally dependent to uh the platform where you are uh exploting this uh I I made the",
    "start": "2746839",
    "end": "2755280"
  },
  {
    "text": "windows uh version of the I already made the Mac OSX but not the Linux one and on",
    "start": "2755280",
    "end": "2760680"
  },
  {
    "text": "Windows is the one that I published what I'm going to read is the user share data is a basically",
    "start": "2760680",
    "end": "2770480"
  },
  {
    "start": "2762000",
    "end": "2807000"
  },
  {
    "text": "a I don't want to say structor because in the SDK I think it's defined as a US sign long well basically there's on all",
    "start": "2770480",
    "end": "2778280"
  },
  {
    "text": "windows machines and uh is in in this address 7 ffe e0000 it's going to be an",
    "start": "2778280",
    "end": "2783839"
  },
  {
    "text": "extractor called user share data and it's going to contain pointers to ndl on x86 in pointer 300 and 3004 you will",
    "start": "2783839",
    "end": "2792640"
  },
  {
    "text": "find in offset 300 and 3004 you will find pointers to ntid L uh this is",
    "start": "2792640",
    "end": "2797880"
  },
  {
    "text": "mitigated in Windows 8 uh you should go to Mt Miller and Ken Johnson's stock later on uh they did a great job on this",
    "start": "2797880",
    "end": "2805559"
  },
  {
    "text": "kudos to them U 64bit that offset that it contains a null but you can read in",
    "start": "2805559",
    "end": "2811119"
  },
  {
    "start": "2807000",
    "end": "2893000"
  },
  {
    "text": "offset 36C of that extractor the base of ndl so we converted",
    "start": "2811119",
    "end": "2817400"
  },
  {
    "text": "uh we converted a relative infol to an absolute infol we are reading this address in Windows uh we start by",
    "start": "2817400",
    "end": "2824640"
  },
  {
    "text": "reading the the add in 32 bits if it's a n we assume this is 64 bit we go to this other",
    "start": "2824640",
    "end": "2830119"
  },
  {
    "text": "offset and yeah uh one of the nicest thing about this is that it not only not",
    "start": "2830119",
    "end": "2836119"
  },
  {
    "text": "only discloses the the the base of ndl discloses the where the Hep is uh this",
    "start": "2836119",
    "end": "2842640"
  },
  {
    "text": "is Firefox uh again this is not a vulnera in the browser a flash that's already fixed this is",
    "start": "2842640",
    "end": "2849880"
  },
  {
    "text": "Firefox this is I and this is Crown uh you could apply this to office PDFs uh",
    "start": "2849880",
    "end": "2858079"
  },
  {
    "text": "that H flash or whatever and the nice thing about this vulnerability is that you not only disclose a base of a d you",
    "start": "2858079",
    "end": "2863880"
  },
  {
    "text": "disclose the where the Hep is and this is going to be super useful in the 64 scenario once the operating system take",
    "start": "2863880",
    "end": "2870160"
  },
  {
    "text": "full advantage of the entire virtual space uh good luck Hep spraying tons of",
    "start": "2870160",
    "end": "2876319"
  },
  {
    "text": "me terabytes uh and yeah and make the attacked user waiting for this so once",
    "start": "2876319",
    "end": "2882640"
  },
  {
    "text": "the once the operating system takes up the full entire uh VM space uh you will",
    "start": "2882640",
    "end": "2887920"
  },
  {
    "text": "not know where the Heap is and this nice vulnerability discloses",
    "start": "2887920",
    "end": "2893760"
  },
  {
    "start": "2893000",
    "end": "3024000"
  },
  {
    "text": "both and just a final notes on what I see it's going to happen in exploitation is",
    "start": "2893760",
    "end": "2900920"
  },
  {
    "text": "going to get harder and this is because of the nice folks in the uh companies",
    "start": "2900920",
    "end": "2906240"
  },
  {
    "text": "that develop operating systems they are doing a super cool stuff uh people that",
    "start": "2906240",
    "end": "2911359"
  },
  {
    "text": "rely on common techniques they will be left behind they will I don't know start in the gardening business or whatever um",
    "start": "2911359",
    "end": "2919680"
  },
  {
    "text": "the the people that are good enough they are going to be in Hawaii in few years or yeah you know and it's going to take",
    "start": "2919680",
    "end": "2925599"
  },
  {
    "text": "a lot of vulnerab to to exploit something reliably and again you can exploit something that works one out of",
    "start": "2925599",
    "end": "2930960"
  },
  {
    "text": "254 times but if you want something reliable you need in F and several the",
    "start": "2930960",
    "end": "2936559"
  },
  {
    "text": "the the the X number of vulnerabilities that you're going to need is first of all the original vulnerability second",
    "start": "2936559",
    "end": "2942040"
  },
  {
    "text": "one the infol for the Skilling where the the the Heap is and uh where uh the",
    "start": "2942040",
    "end": "2947599"
  },
  {
    "text": "second one is where you're going to need an inol probably the same one you you can reuse the same for discussing where",
    "start": "2947599",
    "end": "2953839"
  },
  {
    "text": "a a modu is uh for performing return programming uh if in the next OS they",
    "start": "2953839",
    "end": "2961119"
  },
  {
    "text": "come with ways of mitigating R programming you will need to come with a new technique or whatever it's going to",
    "start": "2961119",
    "end": "2967880"
  },
  {
    "text": "be really harder uh from now on I mean you have seen windows8 Metro sandbox set",
    "start": "2967880",
    "end": "2974359"
  },
  {
    "text": "with the I forgot the name of this thing you have in you have syn Chrome sandboxed everything is going to be",
    "start": "2974359",
    "end": "2979920"
  },
  {
    "text": "sandboxed from now on the things that uh pares uned data so you will need either a Sandbox Cape or an EOP elevation of",
    "start": "2979920",
    "end": "2986960"
  },
  {
    "text": "privilege and in future imagine that uh when applications running their own VM",
    "start": "2986960",
    "end": "2992319"
  },
  {
    "text": "uh and this is not that of the future there is a project called cubes from Johanna roska or something like that",
    "start": "2992319",
    "end": "2999599"
  },
  {
    "text": "that basically runs uh her browser and her email client in different VMS so if",
    "start": "2999599",
    "end": "3006799"
  },
  {
    "text": "you exploit this VM most likely you are not going to talk to this VM unless you have a BM scape or something like that",
    "start": "3006799",
    "end": "3012799"
  },
  {
    "text": "it's going to be difficult but uh if you live up to",
    "start": "3012799",
    "end": "3018480"
  },
  {
    "text": "expectations probably will be able to retire in couple of years to Hawai or",
    "start": "3018480",
    "end": "3024640"
  },
  {
    "start": "3024000",
    "end": "3044000"
  },
  {
    "text": "someplace uh at this moment going to take questions if you're sh or whatever you can pick me um I'm friendly Spaniard",
    "start": "3024640",
    "end": "3034920"
  },
  {
    "text": "so thank you for uh being here uh you need anything",
    "start": "3034920",
    "end": "3041380"
  },
  {
    "text": "[Applause]",
    "start": "3041380",
    "end": "3046828"
  }
]