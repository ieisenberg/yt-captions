[
  {
    "start": "0",
    "end": "121000"
  },
  {
    "text": "welcome to black hat 2015 know it's a little late in the afternoon but we got a good speaker here for you uh once",
    "start": "199",
    "end": "6399"
  },
  {
    "text": "again if you haven't shut up your cell phones already please do so now and without further Ado I'd like to",
    "start": "6399",
    "end": "13400"
  },
  {
    "text": "welcome you to manderlay Bay BD this is optimized fuzzing IO kit in iOS please",
    "start": "13400",
    "end": "20600"
  },
  {
    "text": "welcome Le long [Applause]",
    "start": "20600",
    "end": "32398"
  },
  {
    "text": "thank you good afternoon everyone my top is optimize fing out kit in",
    "start": "32399",
    "end": "39680"
  },
  {
    "text": "ours my name is Lay I'm a security expert in Mobile security of Alibaba",
    "start": "41399",
    "end": "49079"
  },
  {
    "text": "group and now I focused on security research of",
    "start": "49079",
    "end": "55680"
  },
  {
    "text": "our in my presentation first is is the introduction of our work and then a",
    "start": "56640",
    "end": "64239"
  },
  {
    "text": "dynamic approach to export information about I classic is given out and this is",
    "start": "64239",
    "end": "70280"
  },
  {
    "text": "the key point of my presentation and then based on the exch",
    "start": "70280",
    "end": "76520"
  },
  {
    "text": "information we also craft an application to fast our kit in iOS and At Last I",
    "start": "76520",
    "end": "82799"
  },
  {
    "text": "will show several vulnerabilities as a result",
    "start": "82799",
    "end": "88880"
  },
  {
    "text": "now the introduction in our our kit is the",
    "start": "90360",
    "end": "96200"
  },
  {
    "text": "bridge to connect user bace and kernel and also that kit is the",
    "start": "96200",
    "end": "102799"
  },
  {
    "text": "foundation to construct and Link a kernel extension so the information extracting",
    "start": "102799",
    "end": "110799"
  },
  {
    "text": "of our kit in Kel extension is crucial to fast out kit in RS",
    "start": "110799",
    "end": "118759"
  },
  {
    "start": "121000",
    "end": "121000"
  },
  {
    "text": "in P research information extration is mainly focused on iOS IO external method",
    "start": "121439",
    "end": "129840"
  },
  {
    "text": "dispatch and relies on status Ida analyze however it has several",
    "start": "129840",
    "end": "137400"
  },
  {
    "text": "disadvantages first it require as me symol but as method symbols have been",
    "start": "137400",
    "end": "146239"
  },
  {
    "text": "removed from Kel catch s RS7 and also it require a de C catch but",
    "start": "146239",
    "end": "153680"
  },
  {
    "text": "even with dequ C catch there are still a lot of instruction cannot be resolved in",
    "start": "153680",
    "end": "159280"
  },
  {
    "text": "the id8 and even worse the extracted",
    "start": "159280",
    "end": "165239"
  },
  {
    "text": "information is insufficent and now our work is based on uh",
    "start": "165239",
    "end": "174640"
  },
  {
    "text": "dynamically kernel and R and we uh can extract not only our external method",
    "start": "174640",
    "end": "182400"
  },
  {
    "text": "dispatch but also our external method and a series of runtime information and",
    "start": "182400",
    "end": "189000"
  },
  {
    "text": "what more we are independent of SM symbols and dequ con catch and more",
    "start": "189000",
    "end": "197200"
  },
  {
    "text": "sufficent information can be",
    "start": "197200",
    "end": "201400"
  },
  {
    "text": "obtained before our work there are two prerequisite list here you need A J",
    "start": "204040",
    "end": "210920"
  },
  {
    "text": "broken device and task for p0o Kel",
    "start": "210920",
    "end": "216159"
  },
  {
    "text": "patch let's beginning with uh information",
    "start": "216760",
    "end": "222360"
  },
  {
    "text": "extration in this capter I will introduce how to extract the useful",
    "start": "223319",
    "end": "229239"
  },
  {
    "text": "information about our kit in kernel and kernel extensions there are four parts",
    "start": "229239",
    "end": "235360"
  },
  {
    "text": "the first part basic information of all OS object Classics and",
    "start": "235360",
    "end": "241840"
  },
  {
    "text": "then how to access to a specific user client and first our external method",
    "start": "241840",
    "end": "249079"
  },
  {
    "text": "dispatch and fourth our external method well the last tool is used for parameter",
    "start": "249079",
    "end": "255200"
  },
  {
    "text": "check incal now the first part of information",
    "start": "255200",
    "end": "262320"
  },
  {
    "text": "extration Base information the first question is what",
    "start": "262320",
    "end": "269560"
  },
  {
    "text": "is is the basic information it is the information of all",
    "start": "269560",
    "end": "275919"
  },
  {
    "text": "W object subclasses and it includes class name weable star address virtual",
    "start": "275919",
    "end": "283039"
  },
  {
    "text": "method and it's weable offet symbols of overwritten virtual methods instant size",
    "start": "283039",
    "end": "290720"
  },
  {
    "text": "and inheritance relationships here we take a class for",
    "start": "290720",
    "end": "297320"
  },
  {
    "text": "example the class name is Apple arm pmu power source and the",
    "start": "297320",
    "end": "304639"
  },
  {
    "text": "bundle ID improve uh com apple driver arm platform and the V table starting",
    "start": "304639",
    "end": "312720"
  },
  {
    "text": "address in green instant size in yellow and The Inheritance relationships in red",
    "start": "312720",
    "end": "320080"
  },
  {
    "text": "from OS object to uh I OPM power source and the last is retable off set",
    "start": "320080",
    "end": "328639"
  },
  {
    "text": "and two methods now the second question is why",
    "start": "328639",
    "end": "335440"
  },
  {
    "start": "333000",
    "end": "333000"
  },
  {
    "text": "we need the basic information first we can use it as a",
    "start": "335440",
    "end": "341160"
  },
  {
    "text": "quick search to accelerate Kel analyze and then it's a necessary",
    "start": "341160",
    "end": "347039"
  },
  {
    "text": "foundation for analyzing kernel without a decre kernel catch but even with a",
    "start": "347039",
    "end": "352560"
  },
  {
    "text": "decre kernel catch there are still a lot of in",
    "start": "352560",
    "end": "357880"
  },
  {
    "text": "instruction cannot be resolved in the ID you can see like that",
    "start": "357880",
    "end": "363440"
  },
  {
    "text": "uh and the basic information can fix it by the",
    "start": "363440",
    "end": "369599"
  },
  {
    "text": "vable data and then uh we can obtain the",
    "start": "369599",
    "end": "376400"
  },
  {
    "text": "service provided by kernel extension and the instant size can be used in",
    "start": "376400",
    "end": "382120"
  },
  {
    "text": "vulnerabilities exploiting now how can we extract",
    "start": "382120",
    "end": "390479"
  },
  {
    "text": "the Bas the basic information first we need to locate all match O's data",
    "start": "390479",
    "end": "397000"
  },
  {
    "text": "constant sessions in both kernel and kernel extensions because vable data is",
    "start": "397000",
    "end": "403000"
  },
  {
    "text": "within this sessions and then we need to pick out",
    "start": "403000",
    "end": "408919"
  },
  {
    "text": "the we table data from this sessions because by its layouts and",
    "start": "408919",
    "end": "416080"
  },
  {
    "text": "characteristics now the V table layout V table is a series of continuous some",
    "start": "418120",
    "end": "425560"
  },
  {
    "text": "virtual methods address so the address must be in the range of TX sment or",
    "start": "425560",
    "end": "432440"
  },
  {
    "text": "prelink TX sment and there are at least 14 continuous address because OS object has",
    "start": "432440",
    "end": "442160"
  },
  {
    "text": "14 uh virtual methods and at last the number zero virtual methods is following",
    "start": "442160",
    "end": "449680"
  },
  {
    "text": "at least four or zero buys and now the V tables characteristic",
    "start": "449680",
    "end": "457919"
  },
  {
    "start": "454000",
    "end": "454000"
  },
  {
    "text": "the most important characteristic of V table is the G meta",
    "start": "457919",
    "end": "463400"
  },
  {
    "text": "class the the over written G met class returns a OS meta class pointer and the",
    "start": "463400",
    "end": "470440"
  },
  {
    "text": "OS meta class pointer is the key to get the runtime information so if we can identify the",
    "start": "470440",
    "end": "479720"
  },
  {
    "text": "gamet class address then we table is filled",
    "start": "479720",
    "end": "485400"
  },
  {
    "text": "out next I will introduce how can we identify a gamea class",
    "start": "486199",
    "end": "494000"
  },
  {
    "text": "address look at the definition of g meta class it defines in OS Define meta class",
    "start": "494720",
    "end": "502360"
  },
  {
    "text": "and structures micro so the implementation of G Class",
    "start": "502360",
    "end": "508759"
  },
  {
    "text": "in different classx is totally the same which is the foundation to dynamically",
    "start": "508759",
    "end": "515279"
  },
  {
    "text": "resolve and identify this function and then inside",
    "start": "515279",
    "end": "522080"
  },
  {
    "text": "implementation G Class is the key to get onetime",
    "start": "522080",
    "end": "528120"
  },
  {
    "text": "information next I will introduce how can we resolve the G Class in kernel and",
    "start": "529600",
    "end": "535480"
  },
  {
    "text": "kernel extensions okay uh here is the instructions of get meta",
    "start": "535480",
    "end": "544959"
  },
  {
    "text": "class in kernel and kernel extensions the they they have a little different but we still can resolve the G",
    "start": "544959",
    "end": "552640"
  },
  {
    "text": "Class by the equation in",
    "start": "552640",
    "end": "556560"
  },
  {
    "text": "grien after locating dreet class address now now n is using it to get the runtime",
    "start": "564959",
    "end": "574399"
  },
  {
    "start": "565000",
    "end": "565000"
  },
  {
    "text": "information in jet class layout what we concern with is super class",
    "start": "574399",
    "end": "581279"
  },
  {
    "text": "link class name and class size with the offet AC and 10 sorry",
    "start": "581279",
    "end": "589920"
  },
  {
    "text": "now we continue to resolve this variable first is class n class name is an OS",
    "start": "601040",
    "end": "609800"
  },
  {
    "text": "Syle pointer and in OS Syle layout it defines length and string and they came",
    "start": "609800",
    "end": "615560"
  },
  {
    "text": "from a while class name together and the class side is an unide",
    "start": "615560",
    "end": "622399"
  },
  {
    "text": "in the super class link is an O meta class pointer so we can use use it",
    "start": "622399",
    "end": "629800"
  },
  {
    "text": "transfer B to OS object and we can get all the inheritance",
    "start": "629800",
    "end": "636600"
  },
  {
    "start": "637000",
    "end": "637000"
  },
  {
    "text": "Relationships by now we can pick out all V table data by",
    "start": "637240",
    "end": "642639"
  },
  {
    "text": "identifying uh G meta class but still but we still need to know whether the",
    "start": "642639",
    "end": "648079"
  },
  {
    "text": "Kel extension can provide some specific service or not for",
    "start": "648079",
    "end": "654760"
  },
  {
    "text": "example in order to provide a service of IO connect properties the kernel",
    "start": "654760",
    "end": "661240"
  },
  {
    "text": "extensions service need to over set properties because the default",
    "start": "661240",
    "end": "666720"
  },
  {
    "text": "implementation of seties in snu is totally empty so we are concerned is some",
    "start": "666720",
    "end": "674920"
  },
  {
    "text": "specific interface is or origal",
    "start": "674920",
    "end": "679360"
  },
  {
    "text": "not here we identify overwriting by the virtual meod address if the address is",
    "start": "682399",
    "end": "689320"
  },
  {
    "text": "in the range of test segment then without overwriting if not",
    "start": "689320",
    "end": "696200"
  },
  {
    "text": "then be overwritten but it's not enough let's continue to get the symol of over WR",
    "start": "696200",
    "end": "703480"
  },
  {
    "text": "methods now is the detail steps uh first we make an",
    "start": "703480",
    "end": "710120"
  },
  {
    "start": "704000",
    "end": "704000"
  },
  {
    "text": "obser the names and sequence in same iOS version are the same in different device",
    "start": "710120",
    "end": "716959"
  },
  {
    "text": "and then we we pick out a Divine with deit Kel cat to obtain the names and",
    "start": "716959",
    "end": "724480"
  },
  {
    "text": "sequence so we can deduce the symbolization for those without qu kernel",
    "start": "724480",
    "end": "730720"
  },
  {
    "text": "cach but how can we uh obtain the nams and sequence from deit K catch here's",
    "start": "730720",
    "end": "738160"
  },
  {
    "text": "the detail Stu first we use mm command K catch to obtain the nams and address",
    "start": "738160",
    "end": "744240"
  },
  {
    "text": "pair and then the vable data we already obtain in our base information",
    "start": "744240",
    "end": "750920"
  },
  {
    "text": "extraction and last through the Nam adjust pan matching we can get a sequence and",
    "start": "750920",
    "end": "758399"
  },
  {
    "text": "nams by now we can get the basic information of all OS object sub",
    "start": "758680",
    "end": "766360"
  },
  {
    "text": "Classics now the second part of information ex CH how can we access to a",
    "start": "767399",
    "end": "773519"
  },
  {
    "text": "specific user client by now",
    "start": "773519",
    "end": "780440"
  },
  {
    "start": "776000",
    "end": "776000"
  },
  {
    "text": "we can get all OS object subclasses is surely including all IO user client sub",
    "start": "780440",
    "end": "787800"
  },
  {
    "text": "classic and now we need to access to this user client for example in order to access to",
    "start": "787800",
    "end": "795639"
  },
  {
    "text": "IOP pke accelerate user client we need a service name app po Samsung pke and the",
    "start": "795639",
    "end": "803160"
  },
  {
    "text": "open type zero but how can we obtain this information",
    "start": "803160",
    "end": "810560"
  },
  {
    "text": "here is our approach to access to a specific user",
    "start": "810560",
    "end": "815639"
  },
  {
    "text": "Client First input the service name",
    "start": "815639",
    "end": "820920"
  },
  {
    "text": "S1 and then after IO object copy class operation we get the service name",
    "start": "820920",
    "end": "827519"
  },
  {
    "text": "S2 and we try a lot of open type in a limit",
    "start": "827519",
    "end": "834320"
  },
  {
    "text": "scope if a client is open successfully then we retrieve the client name C1 in",
    "start": "834320",
    "end": "842399"
  },
  {
    "text": "kernel through the client meod and client address now the triple C1 S2 open type",
    "start": "842399",
    "end": "851120"
  },
  {
    "text": "is the assess info we want to export so with the access info we can",
    "start": "851120",
    "end": "857279"
  },
  {
    "text": "access to a specific user client and now the detail",
    "start": "857279",
    "end": "862680"
  },
  {
    "start": "861000",
    "end": "861000"
  },
  {
    "text": "steps uh first we we obtain or service name s",
    "start": "862680",
    "end": "871839"
  },
  {
    "text": "S1 but OS K load kst in for is band s",
    "start": "871839",
    "end": "877800"
  },
  {
    "text": "hour 8.1.3 so we can get the service name",
    "start": "877800",
    "end": "884079"
  },
  {
    "text": "directly but we can get them in our BAS basic information",
    "start": "884079",
    "end": "889800"
  },
  {
    "text": "exception and then we try all the open types from zero to FF as most client use",
    "start": "889800",
    "end": "896600"
  },
  {
    "text": "this open types in a field open type out of this scope",
    "start": "896600",
    "end": "903639"
  },
  {
    "text": "we need to locate the overr new user client address and then to analyze it to",
    "start": "903639",
    "end": "910480"
  },
  {
    "text": "get the open types at last we retrieve the client name C1 in",
    "start": "910480",
    "end": "916920"
  },
  {
    "text": "kernel but macp K object is also ban s",
    "start": "916920",
    "end": "922399"
  },
  {
    "text": "out as a. fre here we do find another interface",
    "start": "922399",
    "end": "927440"
  },
  {
    "text": "mepk space for to retreat",
    "start": "927440",
    "end": "932079"
  },
  {
    "text": "it unfortunately we uh we can get the",
    "start": "933319",
    "end": "938480"
  },
  {
    "text": "client address directly by using meapa Bas infa as instead we can get the IPC",
    "start": "938480",
    "end": "945399"
  },
  {
    "text": "po pointer and here's the detail steps after connect to a client we can use",
    "start": "945399",
    "end": "954120"
  },
  {
    "text": "macp space info to get the IPC in name table in the current process",
    "start": "954120",
    "end": "961519"
  },
  {
    "text": "and then we compare it it each I name with the client progam if eal then the",
    "start": "961519",
    "end": "970000"
  },
  {
    "text": "corresponding IIM object is the officiated IPC",
    "start": "970000",
    "end": "975079"
  },
  {
    "text": "pooter s address is off cated we still need to use VM kernel app prom to",
    "start": "975079",
    "end": "981079"
  },
  {
    "text": "subtract it VM Kel at prom is a uh global",
    "start": "981079",
    "end": "989199"
  },
  {
    "text": "variable and use many times in kernel next I will introduce how to get the VM",
    "start": "989199",
    "end": "995600"
  },
  {
    "text": "kernel at prom and the real IPC po",
    "start": "995600",
    "end": "1001120"
  },
  {
    "text": "pointer here luckily we do f a function while viral it use a uni string and VM",
    "start": "1001600",
    "end": "1009319"
  },
  {
    "text": "kernel app from micro so we can ident we",
    "start": "1009319",
    "end": "1014600"
  },
  {
    "text": "can locate the VM kernel aprom address by locating the Unix during",
    "start": "1014600",
    "end": "1020880"
  },
  {
    "text": "address uh after locating the UN the the vmk aprom address we can finally get the",
    "start": "1020880",
    "end": "1026798"
  },
  {
    "text": "IPC po pointer and next I will introduce how",
    "start": "1026799",
    "end": "1032280"
  },
  {
    "text": "can we retrieve the client VI IPC po",
    "start": "1032280",
    "end": "1038559"
  },
  {
    "start": "1042000",
    "end": "1042000"
  },
  {
    "text": "pointer in IPC P structure the K data K object field at",
    "start": "1043919",
    "end": "1051039"
  },
  {
    "text": "overset 144 is the client address and then we retrieve the client",
    "start": "1051039",
    "end": "1056799"
  },
  {
    "text": "name while the client address using the approach in our Base information",
    "start": "1056799",
    "end": "1062000"
  },
  {
    "text": "extration first get the vable address and then locate the get met class",
    "start": "1062000",
    "end": "1068400"
  },
  {
    "text": "address and then Dre met class pointer and finally we get the CL name so by now",
    "start": "1068400",
    "end": "1075760"
  },
  {
    "text": "we can get all triple access info so with the access info we can access to",
    "start": "1075760",
    "end": "1082400"
  },
  {
    "text": "a specific user",
    "start": "1082400",
    "end": "1085760"
  },
  {
    "text": "client the third part of information extration I external method",
    "start": "1103559",
    "end": "1110760"
  },
  {
    "text": "dispatch inal extension driver oriz external methods to provide service to",
    "start": "1111679",
    "end": "1118960"
  },
  {
    "text": "user model and the overwritten interface provide our external method",
    "start": "1118960",
    "end": "1124880"
  },
  {
    "text": "dispatch uh to their Base Class for the parameter check and and function",
    "start": "1124880",
    "end": "1131039"
  },
  {
    "text": "dispatch if the actal parameter does not pass the io external method dispatch",
    "start": "1131039",
    "end": "1137600"
  },
  {
    "text": "Strat then a e402 C2 error will be returned by",
    "start": "1137600",
    "end": "1144240"
  },
  {
    "text": "kernel so I external method dispatch is very important for our fast and",
    "start": "1144240",
    "end": "1150760"
  },
  {
    "text": "parameter",
    "start": "1150760",
    "end": "1153400"
  },
  {
    "start": "1156000",
    "end": "1156000"
  },
  {
    "text": "generation how can we extract the io external method dispatch here's the the",
    "start": "1157640",
    "end": "1164400"
  },
  {
    "text": "four steps first we nrow and determine the seing",
    "start": "1164400",
    "end": "1170520"
  },
  {
    "text": "scope and then we match the our external method",
    "start": "1170520",
    "end": "1175799"
  },
  {
    "text": "dispatch tables characteristic in the suching score so we can locate the I",
    "start": "1175799",
    "end": "1181799"
  },
  {
    "text": "external method dispatch table starting address and then we done the home",
    "start": "1181799",
    "end": "1188520"
  },
  {
    "text": "table first is the our external dispatch tables",
    "start": "1188520",
    "end": "1194679"
  },
  {
    "text": "characteristic in a IO external method dispatch structure it has five field uh",
    "start": "1195280",
    "end": "1203039"
  },
  {
    "text": "the first is function so the function should be in the range of Tex sment or",
    "start": "1203039",
    "end": "1208320"
  },
  {
    "text": "prelink Tex sment and other four used to define the data length of in integer or structure",
    "start": "1208320",
    "end": "1216720"
  },
  {
    "text": "so they should be in the range from zero to FF FF or AF means any length is",
    "start": "1216720",
    "end": "1224840"
  },
  {
    "text": "okay and then we we make the table length should be greater than two to",
    "start": "1224840",
    "end": "1230960"
  },
  {
    "text": "make the character R more stronger so with the characteristic we",
    "start": "1230960",
    "end": "1238400"
  },
  {
    "text": "can identify and address whether it is the dispatch table staring address or",
    "start": "1238400",
    "end": "1245960"
  },
  {
    "text": "not here's the detail step to Dum A dispatch table on the",
    "start": "1246280",
    "end": "1253520"
  },
  {
    "text": "left is dispatch table and V table layout of most",
    "start": "1253520",
    "end": "1261679"
  },
  {
    "text": "client first we we already obtain the Cent V table in our basic information",
    "start": "1263120",
    "end": "1271158"
  },
  {
    "text": "extration and after all continuous all zero bu is C metod class we table also",
    "start": "1272760",
    "end": "1280080"
  },
  {
    "text": "end with zero bu so we can locate a pos position as",
    "start": "1280080",
    "end": "1288720"
  },
  {
    "text": "the position s is at the end of The Meta class V table and then we search from position",
    "start": "1288720",
    "end": "1297000"
  },
  {
    "text": "as by buy to match the",
    "start": "1297000",
    "end": "1300640"
  },
  {
    "text": "characteristic if at least two continuous Spock matching the characteristic of file then the first",
    "start": "1302880",
    "end": "1310600"
  },
  {
    "text": "broad starting address is the dispatch table starting address and then we look to dump the",
    "start": "1310600",
    "end": "1317760"
  },
  {
    "text": "whole table and stop if one blo does not match the",
    "start": "1317760",
    "end": "1323960"
  },
  {
    "start": "1324000",
    "end": "1324000"
  },
  {
    "text": "characteristic as most clients dispatch table can be done in the buff approach",
    "start": "1325559",
    "end": "1331600"
  },
  {
    "text": "here's the complemental mechanism for those are viable and",
    "start": "1331600",
    "end": "1337440"
  },
  {
    "text": "available first we locate the over written external methods and then we",
    "start": "1338760",
    "end": "1345159"
  },
  {
    "text": "resol the all the ldr electral in struction in this",
    "start": "1345159",
    "end": "1351320"
  },
  {
    "text": "methis and we check each correspondent address whether it is the dispatch table",
    "start": "1351320",
    "end": "1357440"
  },
  {
    "text": "styling address or not if yes we D the",
    "start": "1357440",
    "end": "1362799"
  },
  {
    "text": "table the for path of information extration our external methods",
    "start": "1370400",
    "end": "1378360"
  },
  {
    "text": "IO external method is a a structure similar with our external method",
    "start": "1381840",
    "end": "1388240"
  },
  {
    "text": "dispatch when client overr get Target and method for index to provide",
    "start": "1388240",
    "end": "1394120"
  },
  {
    "text": "service it provide our external method to parameter check and function dispatch",
    "start": "1394120",
    "end": "1400960"
  },
  {
    "text": "and also a E40 toc2 error will returns byel check fil",
    "start": "1400960",
    "end": "1410440"
  },
  {
    "text": "and how can we extract the our external method different with different from the",
    "start": "1411360",
    "end": "1417320"
  },
  {
    "text": "our external method dispatch we can export the our external method by dly in",
    "start": "1417320",
    "end": "1424559"
  },
  {
    "text": "working get Target and meth for in Des we using the arbitrary kernel code",
    "start": "1424559",
    "end": "1431360"
  },
  {
    "text": "execution to invol the get Target M4 for index first we use mac message our",
    "start": "1431360",
    "end": "1440559"
  },
  {
    "start": "1437000",
    "end": "1437000"
  },
  {
    "text": "ofline data as a carrier and we need to locate the our",
    "start": "1440559",
    "end": "1447240"
  },
  {
    "text": "fly data we create first is the Mac P space info and",
    "start": "1447240",
    "end": "1453240"
  },
  {
    "text": "then to IPC mq to message to ikm base to",
    "start": "1453240",
    "end": "1458840"
  },
  {
    "text": "ikm header and to msgh remote po the msgh remote Port is the out ofline data",
    "start": "1458840",
    "end": "1467200"
  },
  {
    "text": "starting address in oursa the out ofline data metadata field",
    "start": "1467200",
    "end": "1474240"
  },
  {
    "text": "has 152 byes and now I will",
    "start": "1474240",
    "end": "1480039"
  },
  {
    "text": "introduce how can we use our of light data as a carrier to invol get Target MF",
    "start": "1480039",
    "end": "1486799"
  },
  {
    "text": "for in",
    "start": "1486799",
    "end": "1489278"
  },
  {
    "text": "Des first we craft a gadget client instance",
    "start": "1491919",
    "end": "1498559"
  },
  {
    "text": "and set is vable point to the F vable data in our alight",
    "start": "1498559",
    "end": "1505679"
  },
  {
    "text": "data and then the fade get external Trav for index Point points to return index",
    "start": "1506320",
    "end": "1514159"
  },
  {
    "text": "arm instruction in kernel",
    "start": "1514159",
    "end": "1517960"
  },
  {
    "text": "test before invoking we set the payload in a bu the first four Pi buys Point into the",
    "start": "1520200",
    "end": "1528360"
  },
  {
    "text": "Target Cent a and the last 4 by point to the Target Cent a get Target and me for",
    "start": "1528360",
    "end": "1536120"
  },
  {
    "text": "index and then we use IO connect track to to get the I external methods",
    "start": "1537440",
    "end": "1546520"
  },
  {
    "text": "address here's the parameters we set the connect to the G",
    "start": "1546520",
    "end": "1554200"
  },
  {
    "text": "client MEP and the inex is the payload starting",
    "start": "1554200",
    "end": "1559640"
  },
  {
    "text": "address in our ourl data P1 is a rable kernel address in our",
    "start": "1559640",
    "end": "1567240"
  },
  {
    "text": "out ofly data and P2 is the iio external method",
    "start": "1567240",
    "end": "1573760"
  },
  {
    "text": "table IND Des so we can get the whole our external method table by",
    "start": "1573760",
    "end": "1580600"
  },
  {
    "text": "calling uh our connecture to with different indexes but now all the contains of",
    "start": "1580600",
    "end": "1588679"
  },
  {
    "text": "information exception is given now and next is use the information to",
    "start": "1588679",
    "end": "1595399"
  },
  {
    "text": "craft our fasting application",
    "start": "1595399",
    "end": "1599720"
  },
  {
    "start": "1616000",
    "end": "1616000"
  },
  {
    "text": "here is our fasing applications arure it is based on iOS launch",
    "start": "1618880",
    "end": "1624840"
  },
  {
    "text": "demon so it can be involved by OS on device booking and then it",
    "start": "1624840",
    "end": "1632520"
  },
  {
    "text": "includes first the Panic law corrector it correct the Panic law with the",
    "start": "1632520",
    "end": "1637760"
  },
  {
    "text": "corresponding fasing parameter and then the springboard auto unlock it unlock",
    "start": "1637760",
    "end": "1644200"
  },
  {
    "text": "the device automatically when device booking the the deadlock Monitor and",
    "start": "1644200",
    "end": "1649840"
  },
  {
    "text": "slow monitor used for improve the fasing [Music]",
    "start": "1649840",
    "end": "1655880"
  },
  {
    "text": "effectivity and the whole system can be run without humans",
    "start": "1655880",
    "end": "1662278"
  },
  {
    "text": "interaction before we fast we still need to know which interface is available in",
    "start": "1662880",
    "end": "1669720"
  },
  {
    "start": "1663000",
    "end": "1663000"
  },
  {
    "text": "the Target client here's the fing elements if the client overwriting",
    "start": "1669720",
    "end": "1678399"
  },
  {
    "text": "client memory for type then we can fast IO connect Mac memory if the client",
    "start": "1678399",
    "end": "1685760"
  },
  {
    "text": "overwriting one of external method get Target and method for index or get",
    "start": "1685760",
    "end": "1691760"
  },
  {
    "text": "external method for index then we can fast IO connect call",
    "start": "1691760",
    "end": "1697840"
  },
  {
    "text": "method if the client overwriting set properties then we can fast IO connect",
    "start": "1697840",
    "end": "1704679"
  },
  {
    "text": "set C Properties if the client overwriting one of get get Target and",
    "start": "1704679",
    "end": "1710399"
  },
  {
    "text": "Trav index or get external travel index then we can fast I connect",
    "start": "1710399",
    "end": "1717840"
  },
  {
    "start": "1717000",
    "end": "1717000"
  },
  {
    "text": "trap and also uh we need to identify the unavailable interface to avoid low",
    "start": "1718519",
    "end": "1725960"
  },
  {
    "text": "fasting effectivity and frequently unuseless panic",
    "start": "1725960",
    "end": "1732720"
  },
  {
    "text": "here we use uh here we record three kinds of unable uh interface first is inable",
    "start": "1739200",
    "end": "1747279"
  },
  {
    "text": "panel interface and that interface slowly processing",
    "start": "1747279",
    "end": "1754240"
  },
  {
    "text": "interface now we can do the real fast in the research we discovered",
    "start": "1755679",
    "end": "1761919"
  },
  {
    "text": "that a lot of interface are dependent in the invoking sequence so we call this",
    "start": "1761919",
    "end": "1769519"
  },
  {
    "text": "letter in a random sequence to avoid dependence and watch more some other",
    "start": "1769519",
    "end": "1775159"
  },
  {
    "text": "interface such as properties memory map and track we also add into the fast",
    "start": "1775159",
    "end": "1783278"
  },
  {
    "text": "randomly another Discover is that uh some client don't finish its",
    "start": "1784799",
    "end": "1790159"
  },
  {
    "text": "initialization before we fast which caus the fast totally useless here we do find",
    "start": "1790159",
    "end": "1796880"
  },
  {
    "text": "a way to solve this problem we we we dynamically inject the",
    "start": "1796880",
    "end": "1805000"
  },
  {
    "text": "fasting application into six peress and then we use meall spacing for to",
    "start": "1805000",
    "end": "1810600"
  },
  {
    "text": "retrieve the client meapa which already finished the",
    "start": "1810600",
    "end": "1815518"
  },
  {
    "text": "inducation so we can fast it after fast is our experimental",
    "start": "1816720",
    "end": "1825960"
  },
  {
    "text": "results here's the experimental setup we test on iPhone 4S and with the iOS",
    "start": "1825960",
    "end": "1835320"
  },
  {
    "start": "1826000",
    "end": "1826000"
  },
  {
    "text": "8.1.2 and next I will s two vulnerabilities as result",
    "start": "1836120",
    "end": "1843039"
  },
  {
    "start": "1843000",
    "end": "1843000"
  },
  {
    "text": "sample the first one function free in IOD data",
    "start": "1843399",
    "end": "1849880"
  },
  {
    "text": "queue inside the implementation Q side can be modified in user model and",
    "start": "1849880",
    "end": "1859760"
  },
  {
    "text": "it will be passed to IO fre align deetor without any",
    "start": "1859760",
    "end": "1866279"
  },
  {
    "text": "check and then in Highland part audio device user client client memory for",
    "start": "1869559",
    "end": "1876320"
  },
  {
    "text": "type when type is 144 then it will create a IO Data que to",
    "start": "1876320",
    "end": "1882960"
  },
  {
    "text": "share memory with user client so it may cause the buffer in K",
    "start": "1882960",
    "end": "1890360"
  },
  {
    "text": "June 4,096 can be released into bigger K",
    "start": "1890360",
    "end": "1896440"
  },
  {
    "text": "June well it's a typical buffer overthrow vulnerabilities it may can",
    "start": "1896440",
    "end": "1902120"
  },
  {
    "text": "cause two kinds of panics the first one unavailable address",
    "start": "1902120",
    "end": "1908880"
  },
  {
    "text": "to re and R to and a threee June elements has been",
    "start": "1908880",
    "end": "1915158"
  },
  {
    "text": "modified however this this SP has been fixed in RS",
    "start": "1916360",
    "end": "1922320"
  },
  {
    "text": ".3 and the second",
    "start": "1922320",
    "end": "1925919"
  },
  {
    "text": "one in the implementation of our resource",
    "start": "1927679",
    "end": "1933120"
  },
  {
    "text": "seties uh it can asset any key and set the key to its properties",
    "start": "1933120",
    "end": "1940039"
  },
  {
    "text": "table and our resource is inherited from our service",
    "start": "1940039",
    "end": "1947638"
  },
  {
    "text": "and then in implementation of new user clients uh if the service properties table have",
    "start": "1950440",
    "end": "1959519"
  },
  {
    "text": "the key Gio user client class key then it will use for the clients or location",
    "start": "1959519",
    "end": "1967799"
  },
  {
    "text": "so the question is if we set the key to our resource then will",
    "start": "1967799",
    "end": "1975760"
  },
  {
    "text": "happen then then our resource is can be bonded to any client as a",
    "start": "1976679",
    "end": "1983840"
  },
  {
    "text": "service and so it's a interesting test surface and we can fast it with a lot of",
    "start": "1983840",
    "end": "1990679"
  },
  {
    "text": "clients interface thank you my presentation ends",
    "start": "1990679",
    "end": "1997600"
  },
  {
    "text": "here and this presentation you can take away an information extration approach to extract useful information about our",
    "start": "1997600",
    "end": "2004799"
  },
  {
    "text": "kit in kernal and effective and effective fasting framework and two",
    "start": "2004799",
    "end": "2010360"
  },
  {
    "text": "vulnerabilities sharing thank you you can ask any question uh with me offline",
    "start": "2010360",
    "end": "2017800"
  },
  {
    "text": "[Applause]",
    "start": "2017800",
    "end": "2025359"
  }
]