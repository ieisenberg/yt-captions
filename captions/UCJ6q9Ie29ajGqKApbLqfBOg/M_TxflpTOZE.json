[
  {
    "start": "0",
    "end": "30000"
  },
  {
    "text": "[Music]",
    "start": "1130",
    "end": "13840"
  },
  {
    "text": "hello i am mati vanuff i'm currently a postdoc at nyu abu dhabi and later this",
    "start": "13840",
    "end": "18880"
  },
  {
    "text": "year i will be starting as a professor at ku11 in belgium today i will be presenting frag attacks",
    "start": "18880",
    "end": "25039"
  },
  {
    "text": "breaking wifi through frame aggregation and fragmentation",
    "start": "25039",
    "end": "30519"
  },
  {
    "start": "30000",
    "end": "200000"
  },
  {
    "text": "if we look at the history of wi-fi security we can see that initially wi-fi provided the web security protocol",
    "start": "30560",
    "end": "37760"
  },
  {
    "text": "unfortunately it was quickly shown to be horribly broken in response wpa and wpa2 were released",
    "start": "37760",
    "end": "46079"
  },
  {
    "text": "however these two protocols were vulnerable to offline dictionary attacks on a few years ago i also showed that",
    "start": "46079",
    "end": "53039"
  },
  {
    "text": "they are vulnerable to key reinstallation attacks so the crack attack and also the",
    "start": "53039",
    "end": "58719"
  },
  {
    "text": "small improvement of the crack attack the kraken attack just a year ago academic researchers",
    "start": "58719",
    "end": "65360"
  },
  {
    "text": "showed that the defenses against crack are formally secure meaning existing implementations of web",
    "start": "65360",
    "end": "72560"
  },
  {
    "text": "on wpa2 should now provide defenses against the kiwi installation attack",
    "start": "72560",
    "end": "79439"
  },
  {
    "text": "additionally three years ago the wi-fi alliance released wpa3",
    "start": "79439",
    "end": "84640"
  },
  {
    "text": "and wpa3 provides a new handshake to prevent offline dictionary attacks",
    "start": "84640",
    "end": "90960"
  },
  {
    "text": "on this means that wpa3 is a major improvement upon wpa2",
    "start": "90960",
    "end": "97520"
  },
  {
    "text": "unfortunately together with el ronan we demonstrated that the dragonfly handshake of wk3 is vulnerable to the",
    "start": "97520",
    "end": "105200"
  },
  {
    "text": "so-called dragon blood side channel leaks in response the wi-fi alliance now",
    "start": "105200",
    "end": "111439"
  },
  {
    "text": "requires certified devices to implement defenses against the dragonblood attack",
    "start": "111439",
    "end": "118640"
  },
  {
    "text": "i also want to highlight that once a client has connected to either a wpa2 or derbil upa3 network",
    "start": "118640",
    "end": "125759"
  },
  {
    "text": "the encryption used to protect data frames is practically identical",
    "start": "125759",
    "end": "130879"
  },
  {
    "text": "this also means that attacks in this presentation will work against both wpa2",
    "start": "130879",
    "end": "136000"
  },
  {
    "text": "and wpa3 in late 2020 two extra defenses were also added",
    "start": "136000",
    "end": "144400"
  },
  {
    "text": "to the standard that underpins wi-fi and these are called operating channel",
    "start": "144400",
    "end": "149440"
  },
  {
    "text": "validation on beacon protection now these two defenses would make our",
    "start": "149440",
    "end": "154800"
  },
  {
    "text": "attacks harder but not impossible would just require more skill to pull them off",
    "start": "154800",
    "end": "161360"
  },
  {
    "text": "additionally these defenses are still undergoing adoption and practice meaning right now these two defenses",
    "start": "161360",
    "end": "168080"
  },
  {
    "text": "unfortunately don't yet have practical impact",
    "start": "168080",
    "end": "173040"
  },
  {
    "text": "so we can see that in the past few years some major advancements have in fact been made to the security of wi-fi",
    "start": "174000",
    "end": "182840"
  },
  {
    "text": "unfortunately in this work i'm going to present three new design flaws on several",
    "start": "182840",
    "end": "188720"
  },
  {
    "text": "related implementation flaws i will begin by explaining the design flaws and in particular i will first",
    "start": "188720",
    "end": "196080"
  },
  {
    "text": "explain the aggregation design flaw to explain this flaw i first have to",
    "start": "196080",
    "end": "202480"
  },
  {
    "start": "200000",
    "end": "317000"
  },
  {
    "text": "explain how aggregation works in a wi-fi network under the wi-fi network if you want to",
    "start": "202480",
    "end": "208720"
  },
  {
    "text": "send small packets that causes a lot of overhead and this is because every small packet",
    "start": "208720",
    "end": "215440"
  },
  {
    "text": "shown in green here needs to have its individual wifi header it needs to be",
    "start": "215440",
    "end": "220799"
  },
  {
    "text": "individually acknowledged by the receiver on between every packet there needs to be a small delay and that causes a lot",
    "start": "220799",
    "end": "228159"
  },
  {
    "text": "of overhead on the practice it's much more efficient to aggregate these small packets into",
    "start": "228159",
    "end": "234560"
  },
  {
    "text": "one larger wi-fi frame the question then becomes how can a",
    "start": "234560",
    "end": "240480"
  },
  {
    "text": "receiver know whether a packet contains just a single network packet or whether",
    "start": "240480",
    "end": "245920"
  },
  {
    "text": "a wi-fi frame contains multiple network packets on the answer is quite straightforward",
    "start": "245920",
    "end": "252640"
  },
  {
    "text": "the wi-fi header contains a flag that indicates whether the encrypted payload",
    "start": "252640",
    "end": "258000"
  },
  {
    "text": "contains just a single network packet or whether it contains an aggregation of",
    "start": "258000",
    "end": "263840"
  },
  {
    "text": "multiple network packets so if this flag is true the encrypted payload will first start with some",
    "start": "263840",
    "end": "270320"
  },
  {
    "text": "metadata about the first packet then the length of the first packet the actual content of the first packet",
    "start": "270320",
    "end": "277440"
  },
  {
    "text": "then the metadata about the second packet and so on",
    "start": "277440",
    "end": "283120"
  },
  {
    "text": "now what is the design flaw here the design flaw is that this header is not authenticated",
    "start": "283120",
    "end": "289600"
  },
  {
    "text": "this means that an adversary can for instance take a normal wi-fi frame and turn it into an aggregated wi-fi frame",
    "start": "289600",
    "end": "296960"
  },
  {
    "text": "without the receiver realizing this this means that the decrypted content of the packet will be parsed in an",
    "start": "296960",
    "end": "303759"
  },
  {
    "text": "unexpected manner and we showed that this can be abused to",
    "start": "303759",
    "end": "308800"
  },
  {
    "text": "inject arbitrary packets to the victim now before explaining the technical",
    "start": "308800",
    "end": "314320"
  },
  {
    "text": "details let me first explain the attack scenario in which case this vulnerability can be",
    "start": "314320",
    "end": "320160"
  },
  {
    "start": "317000",
    "end": "561000"
  },
  {
    "text": "exploited so here we have a client on the left and it's connected to the access point on",
    "start": "320160",
    "end": "326639"
  },
  {
    "text": "the right and we have an adversary that has established a special multi-channel man",
    "start": "326639",
    "end": "333680"
  },
  {
    "text": "in the middle position between the client on the access point now this multi-channel man in the middle position",
    "start": "333680",
    "end": "341199"
  },
  {
    "text": "does not require the password of the network this position can be established against",
    "start": "341199",
    "end": "347440"
  },
  {
    "text": "any protected wi-fi network as long as the adversary is within range",
    "start": "347440",
    "end": "353120"
  },
  {
    "text": "this man in the middle does not allow the adversary to currently decrypt packets it only allows the adversary to",
    "start": "353120",
    "end": "359440"
  },
  {
    "text": "reliably block or modify encrypted frames",
    "start": "359440",
    "end": "365800"
  },
  {
    "text": "the second step is that the victim is strict into downloading an image from the attacker's server",
    "start": "366160",
    "end": "373360"
  },
  {
    "text": "this causes the victim device to establish a tcp connection with the web server of the adversary",
    "start": "373360",
    "end": "380880"
  },
  {
    "text": "this can for example be accomplished by sending an email to the victim with an embedded image",
    "start": "380880",
    "end": "386639"
  },
  {
    "text": "that is hosted on the server of the adversary or by sending the victim a whatsapp or linked or signal message",
    "start": "386639",
    "end": "394240"
  },
  {
    "text": "that causes the message app to show a preview of the website",
    "start": "394240",
    "end": "400319"
  },
  {
    "text": "and that means the device is again initiating a tcp connection with the server of the adversary",
    "start": "400319",
    "end": "408800"
  },
  {
    "text": "once this tcp connection is established the adversary will send a specially",
    "start": "408800",
    "end": "413840"
  },
  {
    "text": "crafted tcp ipv4 packet over this connection and i will explain later how exactly",
    "start": "413840",
    "end": "420000"
  },
  {
    "text": "this packet is constructed for now this packet is sent as normal to",
    "start": "420000",
    "end": "425599"
  },
  {
    "text": "the client meaning at some point it will arrive at a legitimate access point",
    "start": "425599",
    "end": "431039"
  },
  {
    "text": "the legitimate access point will encrypt it as a normal frame unforwarded to the client",
    "start": "431039",
    "end": "438080"
  },
  {
    "text": "before this wifi frame arrives at the client the adversary will set the is",
    "start": "438080",
    "end": "443120"
  },
  {
    "text": "aggregated flag in the wi-fi header and i want to remark here that the adversary cannot modify the encrypted",
    "start": "443120",
    "end": "450319"
  },
  {
    "text": "content of the frame the adversary can only abuse this design flaw in wi-fi to",
    "start": "450319",
    "end": "456400"
  },
  {
    "text": "change the this aggregated flag in the header however because we constructed this ipv4",
    "start": "456400",
    "end": "463840"
  },
  {
    "text": "packet in a special manner this will allow us to inject arbitrary packets towards the victim so we can for",
    "start": "463840",
    "end": "470800"
  },
  {
    "text": "instance inject an r packet dhcp packet and so on and we can also inject an icmp v6 router",
    "start": "470800",
    "end": "479120"
  },
  {
    "text": "advertisement that will trick the victim into using a malicious dns",
    "start": "479120",
    "end": "484879"
  },
  {
    "text": "server now although this attack might look complicated i want to remark that this",
    "start": "484879",
    "end": "492319"
  },
  {
    "text": "condition in order to exploit the attack is in fact easier than the well-known beast",
    "start": "492319",
    "end": "498800"
  },
  {
    "text": "time on the heist attack against tls this is because these attacks against",
    "start": "498800",
    "end": "504000"
  },
  {
    "text": "tls require the victim to execute malicious javascript while in our case we only require that",
    "start": "504000",
    "end": "511120"
  },
  {
    "text": "the victim will establish a tcp connect connection with the adversary so that means our attack is simpler than these",
    "start": "511120",
    "end": "518320"
  },
  {
    "text": "attacks against tls additionally if the router is vulnerable",
    "start": "518320",
    "end": "523599"
  },
  {
    "text": "to a common implementation flaw then instead of sending the special ipv4 packet",
    "start": "523599",
    "end": "529519"
  },
  {
    "text": "we can directly send a special handshake frame to the access point on the",
    "start": "529519",
    "end": "535200"
  },
  {
    "text": "vulnerable access point we'll then forward this handshake message to the victim and we can then execute the",
    "start": "535200",
    "end": "541279"
  },
  {
    "text": "attack without any social engineering simply by being within range of the victim",
    "start": "541279",
    "end": "548399"
  },
  {
    "text": "and this vulnerability was present in two out of four home access points that we tested",
    "start": "548399",
    "end": "555200"
  },
  {
    "text": "now you may still be wondering how exactly this can be abused to inject any type of network packet well i'll explain",
    "start": "555200",
    "end": "561440"
  },
  {
    "start": "561000",
    "end": "768000"
  },
  {
    "text": "that later first let's look at the demonstration of this attack in practice",
    "start": "561440",
    "end": "566480"
  },
  {
    "text": "note that this recorded demonstration will be a bit more fast paced than the presentation to ensure i won't run out",
    "start": "566480",
    "end": "572480"
  },
  {
    "text": "of time our target will be a macos laptop this laptop is connected to a protected",
    "start": "572480",
    "end": "578480"
  },
  {
    "text": "wi-fi network as indicated by the lock symbol and the victim will use it to visit websites such as nyu.edu",
    "start": "578480",
    "end": "586240"
  },
  {
    "text": "notice that the homepage of this website is insecure however the login page does use https as an extra layer of security",
    "start": "586240",
    "end": "594160"
  },
  {
    "text": "as indicated by the lock symbol before starting the attack we have to",
    "start": "594160",
    "end": "600080"
  },
  {
    "text": "prepare it by running the following script on a server this script waits for connections from",
    "start": "600080",
    "end": "605200"
  },
  {
    "text": "the victim and i'll explain its purpose later on the server i'm also running a dns on",
    "start": "605200",
    "end": "610480"
  },
  {
    "text": "web server to intercept on impersonate websites i'll also run wireshark to capture",
    "start": "610480",
    "end": "616079"
  },
  {
    "text": "traffic towards the server we can now start the attack with the",
    "start": "616079",
    "end": "621200"
  },
  {
    "text": "following tool here i included the protected wi-fi network that will be attacked and that",
    "start": "621200",
    "end": "626240"
  },
  {
    "text": "we will only target one specific victim the tool starts by searching for this wifi network and then it clones its",
    "start": "626240",
    "end": "632640"
  },
  {
    "text": "network on a different channel this malicious clone of the network enables the attacker to reliably",
    "start": "632640",
    "end": "638320"
  },
  {
    "text": "manipulate encrypted data frames which is required to abuse the design flaw",
    "start": "638320",
    "end": "643519"
  },
  {
    "text": "when the victim now enables wi-fi it will connect to the malicious clone to better understand the attack i'll",
    "start": "643519",
    "end": "649600"
  },
  {
    "text": "also start wire shark on the victim we must now trick the victim into",
    "start": "649600",
    "end": "655600"
  },
  {
    "text": "connecting to the attacker's server here this is accomplished by sending an email to the victim and although this",
    "start": "655600",
    "end": "661839"
  },
  {
    "text": "email looks innocent it contains a hidden image hosted on the server of the attacker",
    "start": "661839",
    "end": "667200"
  },
  {
    "text": "this causes the victim to download the image from the attacker's server but instead of sending the image the",
    "start": "667200",
    "end": "672800"
  },
  {
    "text": "attacker will send a malicious tcp packet this packet is constructed in such a way",
    "start": "672800",
    "end": "679200"
  },
  {
    "text": "so that when it's turned into an aggregated wi-fi frame it will cause the injection of a frame that tricks the",
    "start": "679200",
    "end": "684720"
  },
  {
    "text": "victim into using our malicious dns server the wi-fi attacker can detect this",
    "start": "684720",
    "end": "691120"
  },
  {
    "text": "packet based on its length and it will set the aggregated flag in the wi-fi header before forwarding it to the",
    "start": "691120",
    "end": "696959"
  },
  {
    "text": "victim due to a design flow on wi-fi the victim won't notice that the attacker changed",
    "start": "696959",
    "end": "702240"
  },
  {
    "text": "this flag as a result the victim will process the modified frame and will start using our",
    "start": "702240",
    "end": "708000"
  },
  {
    "text": "malicious dns server looking at the victim we can indeed see",
    "start": "708000",
    "end": "713440"
  },
  {
    "text": "that it received a frame containing the malicious dns server note that normally we cannot inject such",
    "start": "713440",
    "end": "719760"
  },
  {
    "text": "frames over a tcp connection this is only possible by abusing design flaws in wi-fi",
    "start": "719760",
    "end": "727279"
  },
  {
    "text": "when the victim again visits an insecure website such as nyu.edu our malicious dns server will redirect",
    "start": "728240",
    "end": "735600"
  },
  {
    "text": "the victim to our own copy of the website this copy contains a link to an insecure",
    "start": "735600",
    "end": "740880"
  },
  {
    "text": "login page and safari is in fact warning us that we may not be on the real website",
    "start": "740880",
    "end": "746480"
  },
  {
    "text": "however most users likely won't notice this and will enter their username and password",
    "start": "746480",
    "end": "752560"
  },
  {
    "text": "because i'm using a fake username and password the login fails nevertheless when looking at the capture",
    "start": "752560",
    "end": "759360"
  },
  {
    "text": "traffic on the attacker's server we can search for the victims login attempt and extract the username and password",
    "start": "759360",
    "end": "767360"
  },
  {
    "start": "768000",
    "end": "924000"
  },
  {
    "text": "you may now be wondering how many devices are affected unfortunately i have bad news here all",
    "start": "768480",
    "end": "774399"
  },
  {
    "text": "major operating systems are affected with the exception of netbsd on some iot",
    "start": "774399",
    "end": "779760"
  },
  {
    "text": "devices which do not support aggregate wi-fi frames now one thing i did not yet explain is",
    "start": "779760",
    "end": "786560"
  },
  {
    "text": "how the special ipv4 packet is constructed and it is constructed in the following way",
    "start": "786560",
    "end": "792800"
  },
  {
    "text": "so first we create an ipv4 packet with the following header on with the following length",
    "start": "792800",
    "end": "799040"
  },
  {
    "text": "then we can pick an arbitrary ip identification value we have the remaining ip header and then the tcp",
    "start": "799040",
    "end": "806160"
  },
  {
    "text": "header and finally we put the frame that we want to inject in the data field of the",
    "start": "806160",
    "end": "812480"
  },
  {
    "text": "tcp packet now we can control the fields in green here",
    "start": "812480",
    "end": "820079"
  },
  {
    "text": "we can put arbitrary values there as an attacker but for the red fields we must",
    "start": "820079",
    "end": "825360"
  },
  {
    "text": "use a certain value because if we do not use this value the ipv4 packet will not",
    "start": "825360",
    "end": "830880"
  },
  {
    "text": "reach the client now when sending this ipv4 packet when it arrives at a legitimate access point",
    "start": "830880",
    "end": "837920"
  },
  {
    "text": "the legitimate access point will add an extra header and then it will encrypt all this data and send it as a wi-fi",
    "start": "837920",
    "end": "844720"
  },
  {
    "text": "frame now here we're going to assume that the access point will send it as a normal",
    "start": "844720",
    "end": "850880"
  },
  {
    "text": "individual frame and then the adversary will turn this frame into an aggregate frame",
    "start": "850880",
    "end": "858160"
  },
  {
    "text": "on the receiver the receiver will now think that these first bytes are the",
    "start": "858160",
    "end": "863519"
  },
  {
    "text": "metadata of the first packet now this will result in invalid metadata",
    "start": "863519",
    "end": "869199"
  },
  {
    "text": "meaning that the first sub-packet will in fact be ignored what's very interesting here though is",
    "start": "869199",
    "end": "875600"
  },
  {
    "text": "that the length of this first sub-packet corresponds exactly to the ip identification field",
    "start": "875600",
    "end": "882480"
  },
  {
    "text": "and as an adversary we can put any value we want there meaning we can fully",
    "start": "882480",
    "end": "887519"
  },
  {
    "text": "control how long this first sub-packet is meaning we can control where the second",
    "start": "887519",
    "end": "892800"
  },
  {
    "text": "sub-packet starts in other words we can fully control the metadata the length and the content of",
    "start": "892800",
    "end": "900079"
  },
  {
    "text": "the second sub packet meaning as long as we control the ip identification field on the subset of",
    "start": "900079",
    "end": "907360"
  },
  {
    "text": "the tcp data then by turning this normal frame into an aggregate frame we can in fact inject",
    "start": "907360",
    "end": "914560"
  },
  {
    "text": "any packet that we want so that's how the attack works in detail",
    "start": "914560",
    "end": "921279"
  },
  {
    "text": "let me now move on to the mixed key attack and i first have to explain how",
    "start": "921760",
    "end": "927600"
  },
  {
    "start": "924000",
    "end": "1350000"
  },
  {
    "text": "fragmentation works this is because both the mixed key and the fragment cache attack rely on wi-fi fragmentation",
    "start": "927600",
    "end": "936560"
  },
  {
    "text": "now with wi-fi fragmentation we have the opposite problem as before",
    "start": "936560",
    "end": "942160"
  },
  {
    "text": "here we have a wi-fi packet that is too large and if there is then a lot of background noise then there's a high",
    "start": "942160",
    "end": "948959"
  },
  {
    "text": "chance this packet will be corrupted and we have to transmit all the data again",
    "start": "948959",
    "end": "954720"
  },
  {
    "text": "on here it is more efficient if there is background noise to fragment large packets into smaller ones so that if a",
    "start": "954720",
    "end": "962399"
  },
  {
    "text": "fragment is lost we only need to retransmit that one specific fragment",
    "start": "962399",
    "end": "968959"
  },
  {
    "text": "now the question becomes how can a receiver properly unsecurely reassemble these",
    "start": "968959",
    "end": "974720"
  },
  {
    "text": "fragments back to the original frame but let me first explain this for plain",
    "start": "974720",
    "end": "980399"
  },
  {
    "text": "text wifi frames using this example here where we have three fragments",
    "start": "980399",
    "end": "987120"
  },
  {
    "text": "the first information that we need is that every wi-fi frame has a",
    "start": "987120",
    "end": "992240"
  },
  {
    "text": "sequence number s and here every fragment has the same sequence number s so that we can",
    "start": "992240",
    "end": "998880"
  },
  {
    "text": "identify fragments that belong to the same original frame additionally every frame contains a",
    "start": "998880",
    "end": "1005680"
  },
  {
    "text": "fragment number that allows us to determine the order of the fragments and",
    "start": "1005680",
    "end": "1010800"
  },
  {
    "text": "finally there is a flag to indicate what the last fragment is and with these fields we can reliably",
    "start": "1010800",
    "end": "1017680"
  },
  {
    "text": "and properly reconstruct the original fragment for a plain text",
    "start": "1017680",
    "end": "1023519"
  },
  {
    "text": "so an open wi-fi network for a protected wi-fi network there is",
    "start": "1023519",
    "end": "1029839"
  },
  {
    "text": "another field that is added to the wi-fi header and this is the so-called packet number",
    "start": "1029839",
    "end": "1035839"
  },
  {
    "text": "this packet number is used at the encryption lay to for instance prevent",
    "start": "1035839",
    "end": "1041120"
  },
  {
    "text": "replays now when fragmentation is used every fragment must have a consecutive",
    "start": "1041120",
    "end": "1048558"
  },
  {
    "text": "packet number so here the first fragment has packed number n that means that the second fragment must have packet number",
    "start": "1048559",
    "end": "1055600"
  },
  {
    "text": "n plus one on the third must have packet number n plus two and if that is not the",
    "start": "1055600",
    "end": "1060880"
  },
  {
    "text": "case the fragment should be dropped now all these fields except the sequence",
    "start": "1060880",
    "end": "1066799"
  },
  {
    "text": "number are authenticated meaning an adversary cannot modify these flags",
    "start": "1066799",
    "end": "1072400"
  },
  {
    "text": "because if the adversary does that the receiver will detect this",
    "start": "1072400",
    "end": "1077919"
  },
  {
    "text": "on the frame or fragment will be dropped on that first side this actually seems",
    "start": "1077919",
    "end": "1083280"
  },
  {
    "text": "quite secure however problems begin when fragmentation is",
    "start": "1083280",
    "end": "1089840"
  },
  {
    "text": "combined with the session key renewal now what is session key renewal",
    "start": "1089840",
    "end": "1096000"
  },
  {
    "text": "well a client can periodically refresh the key that it is using to encrypt data",
    "start": "1096000",
    "end": "1102480"
  },
  {
    "text": "frames by performing the handshake again",
    "start": "1102480",
    "end": "1108559"
  },
  {
    "text": "and this will update the session key that is used to encrypt data frames and the session key will also be",
    "start": "1108559",
    "end": "1114080"
  },
  {
    "text": "automatically renewed when the client roams from one access point to another",
    "start": "1114080",
    "end": "1119840"
  },
  {
    "text": "and when the session key is renewed the packet numbers that a sender is using",
    "start": "1119840",
    "end": "1124880"
  },
  {
    "text": "will also restart back from zero",
    "start": "1124880",
    "end": "1129600"
  },
  {
    "text": "now why is this a problem well without yet going into too much detail",
    "start": "1130000",
    "end": "1135679"
  },
  {
    "text": "the problem is that a receiver will reassemble fragments that are encrypted using different keys",
    "start": "1135679",
    "end": "1142559"
  },
  {
    "text": "after one of these session key renewals took place",
    "start": "1142559",
    "end": "1147840"
  },
  {
    "text": "so let me illustrate that graphically let's say we have our client on access point here under again our adversary",
    "start": "1147840",
    "end": "1154720"
  },
  {
    "text": "that has this multi-channel man in the middle position in our attack",
    "start": "1154720",
    "end": "1161039"
  },
  {
    "text": "we assume that the client will send a wi-fi frame that is split into two fragments",
    "start": "1161039",
    "end": "1166559"
  },
  {
    "text": "on the adversary will block the second fragment meaning only the first fragment is forwarded",
    "start": "1166559",
    "end": "1172720"
  },
  {
    "text": "to the access point then at some point the client will",
    "start": "1172720",
    "end": "1177919"
  },
  {
    "text": "refresh the session key from k to m so notice that these frames here on top",
    "start": "1177919",
    "end": "1184160"
  },
  {
    "text": "are encrypted using the key k but when the wi-fi client now refreshes",
    "start": "1184160",
    "end": "1190720"
  },
  {
    "text": "the session key the packet numbers will be reset to zero and when it now sends another fragmented",
    "start": "1190720",
    "end": "1197200"
  },
  {
    "text": "frame the adversary will block the first fragment from arriving",
    "start": "1197200",
    "end": "1202640"
  },
  {
    "text": "and will only forward the second fragment to the access point",
    "start": "1202640",
    "end": "1208159"
  },
  {
    "text": "and because of the design flaw in wi-fi the access point will reassemble both of",
    "start": "1208159",
    "end": "1213600"
  },
  {
    "text": "these fragments even though they belong to different frames and even",
    "start": "1213600",
    "end": "1220720"
  },
  {
    "text": "though they were decrypted using a different key k",
    "start": "1220720",
    "end": "1227279"
  },
  {
    "text": "in other words as an adversary we can abuse this design flaw to mix the content of two different",
    "start": "1227760",
    "end": "1235360"
  },
  {
    "text": "frames so what is the impact of this in",
    "start": "1235360",
    "end": "1241679"
  },
  {
    "text": "practice well in practice we can abuse this to exfiltrate data if the client sends fragmented frames",
    "start": "1241679",
    "end": "1248960"
  },
  {
    "text": "which is relatively rare unless wi-fi 6 is used aren't we again need to social engineer",
    "start": "1248960",
    "end": "1254480"
  },
  {
    "text": "the victim into connecting to the server of the attacker a third condition is that the network",
    "start": "1254480",
    "end": "1260559"
  },
  {
    "text": "must also periodically refresh the session key and that is in fact very rare in practice",
    "start": "1260559",
    "end": "1267360"
  },
  {
    "text": "however there is an extremely common implementation flaw that allows us to perform this attack even if the network",
    "start": "1267360",
    "end": "1274960"
  },
  {
    "text": "doesn't refresh the session key and how can we then exfiltrate data",
    "start": "1274960",
    "end": "1282400"
  },
  {
    "text": "well the idea is that the first frame that we target is a frame that the",
    "start": "1282400",
    "end": "1287520"
  },
  {
    "text": "adversary is sending sorry that the victim is sending to the server of the",
    "start": "1287520",
    "end": "1292880"
  },
  {
    "text": "adversary for instance we trick the victim to download an image from our server",
    "start": "1292880",
    "end": "1299840"
  },
  {
    "text": "and the second fragment contains sensitive information",
    "start": "1299840",
    "end": "1305120"
  },
  {
    "text": "that the user is sending for instance here we assume that the user is logging",
    "start": "1305120",
    "end": "1310400"
  },
  {
    "text": "in on a plain text http website on using our mixed key attack",
    "start": "1310400",
    "end": "1316799"
  },
  {
    "text": "we can now mix the content of both of these frames",
    "start": "1316799",
    "end": "1321840"
  },
  {
    "text": "in other words we can construct an ip packet with as destination the server of the adversary",
    "start": "1321840",
    "end": "1330159"
  },
  {
    "text": "and as content sensitive user data that essentially means that sensitive",
    "start": "1330159",
    "end": "1335919"
  },
  {
    "text": "data is now sent to the server of the adversary meaning we learn the password",
    "start": "1335919",
    "end": "1341440"
  },
  {
    "text": "of the victim so that concludes the mixed key attack",
    "start": "1341440",
    "end": "1347919"
  },
  {
    "text": "i will now very briefly also explain the fragment cache design flaw",
    "start": "1347919",
    "end": "1354159"
  },
  {
    "start": "1350000",
    "end": "1467000"
  },
  {
    "text": "and what goes wrong here is that fragments are not removed from memory after the receiver has disconnected",
    "start": "1354159",
    "end": "1362480"
  },
  {
    "text": "so let me illustrate this using the following example where we are targeting an enterprise wifi network such as",
    "start": "1362480",
    "end": "1369600"
  },
  {
    "text": "adroom or hotspot 2.0 where users mutually distrust each other",
    "start": "1369600",
    "end": "1377280"
  },
  {
    "text": "in that case in these kinds of networks the adversary can also connect to this",
    "start": "1377919",
    "end": "1383760"
  },
  {
    "text": "network because the adversary has a personal username and password and then the adversary can inject a malicious",
    "start": "1383760",
    "end": "1390960"
  },
  {
    "text": "fragment into the memory of the access point so the access point will decrypt this fragment sent by the adversary",
    "start": "1390960",
    "end": "1397919"
  },
  {
    "text": "unstored in memory when the adversary now disconnects due to the design flaw this fragment stays",
    "start": "1397919",
    "end": "1405280"
  },
  {
    "text": "in the memory of the access point meaning if the client now connects to the access point",
    "start": "1405280",
    "end": "1411280"
  },
  {
    "text": "then it becomes possible that fragments sent by the victim sent by the client here",
    "start": "1411280",
    "end": "1418400"
  },
  {
    "text": "will be reassembled together with the malicious fragment of the adversary",
    "start": "1418400",
    "end": "1423760"
  },
  {
    "text": "and then things go wrong and what exactly can go wrong well we",
    "start": "1423760",
    "end": "1429200"
  },
  {
    "text": "can abuse this to again exfiltrate data or possibly to inject packets assuming",
    "start": "1429200",
    "end": "1435600"
  },
  {
    "text": "we are we are targeting a network where users distrust each other on assuming that the client sends fragmented frames",
    "start": "1435600",
    "end": "1443200"
  },
  {
    "text": "which is fairly rare unless wi-fi 6 is being used",
    "start": "1443200",
    "end": "1448240"
  },
  {
    "text": "now what i do want to remark here is that even the very old web protocol is affected by this design flaw and web was",
    "start": "1448240",
    "end": "1455919"
  },
  {
    "text": "in fact also affected by the mixed key attack that i just explained this really shows that these design",
    "start": "1455919",
    "end": "1462320"
  },
  {
    "text": "flaws have been part of wifi since a very long time",
    "start": "1462320",
    "end": "1468000"
  },
  {
    "start": "1467000",
    "end": "1554000"
  },
  {
    "text": "now how do we fix these design flaws well for the aggregation design flaw ideally we authenticate the is",
    "start": "1468000",
    "end": "1474799"
  },
  {
    "text": "aggregated flag unfortunately this will not be backwards compatible",
    "start": "1474799",
    "end": "1480080"
  },
  {
    "text": "instead vendors are now preventing known attacks by the following defense",
    "start": "1480080",
    "end": "1485520"
  },
  {
    "text": "in particular what vendors are doing is they are trying to detect when an adversary takes the following normal",
    "start": "1485520",
    "end": "1493120"
  },
  {
    "text": "frame and the adversary turns it into an aggregated frame",
    "start": "1493120",
    "end": "1498159"
  },
  {
    "text": "because in that case the metadata of the aggregate frame",
    "start": "1498159",
    "end": "1503760"
  },
  {
    "text": "will start with a valid rfc 1042 header and",
    "start": "1503760",
    "end": "1509200"
  },
  {
    "text": "if that is the case then it is extremely likely that an attack is going on where",
    "start": "1509200",
    "end": "1514240"
  },
  {
    "text": "an adversary turns this normal frame into an aggregated one",
    "start": "1514240",
    "end": "1520799"
  },
  {
    "text": "unfortunately that does mean that the true root cause of the vulnerability is not fixed so it could be that someone in",
    "start": "1520799",
    "end": "1527679"
  },
  {
    "text": "the future might be able to bypass this ad hoc defense",
    "start": "1527679",
    "end": "1533840"
  },
  {
    "text": "for the mixed key attack there the solution is to only reassemble fragments that are decrypted under the same key",
    "start": "1534159",
    "end": "1540880"
  },
  {
    "text": "and for the fragment cache attack there a receiver should clear unused fragments",
    "start": "1540880",
    "end": "1546000"
  },
  {
    "text": "from memory whenever the client disconnects or when the corresponding key that was used to decrypt this",
    "start": "1546000",
    "end": "1551919"
  },
  {
    "text": "fragment is removed now apart from these design flaws i also",
    "start": "1551919",
    "end": "1557520"
  },
  {
    "start": "1554000",
    "end": "1603000"
  },
  {
    "text": "discovered very common implementation flaws and the first set of implementation",
    "start": "1557520",
    "end": "1563360"
  },
  {
    "text": "flaws allow an adversary to inject plain text packets particularly in particular by sending a",
    "start": "1563360",
    "end": "1570240"
  },
  {
    "text": "plain text packet that is either fragmented or broadcasted or by sending this plain text packet while connecting",
    "start": "1570240",
    "end": "1577679"
  },
  {
    "text": "a vulnerable device will accept this plain text frame even when the device is connected to a",
    "start": "1577679",
    "end": "1583679"
  },
  {
    "text": "protected wi-fi network and there are many vulnerable devices for instance apple on some android",
    "start": "1583679",
    "end": "1590159"
  },
  {
    "text": "devices are vulnerable windows some network cards on windows are vulnerable home and professional",
    "start": "1590159",
    "end": "1596320"
  },
  {
    "text": "access points are vulnerable and so on and this vulnerability can be used to",
    "start": "1596320",
    "end": "1601600"
  },
  {
    "text": "trivially inject packets and i will now show a recorded demo where this is abused to remotely turn on",
    "start": "1601600",
    "end": "1608559"
  },
  {
    "text": "and off a power socket power socket can be manually turned on and off but can also be controlled over",
    "start": "1608559",
    "end": "1615520"
  },
  {
    "text": "wi-fi as an attacker we can detect such power sockets based on their mac address",
    "start": "1615520",
    "end": "1621520"
  },
  {
    "text": "without knowing the password of the wi-fi network the implementation flaw allows an attacker to easily inject",
    "start": "1621520",
    "end": "1626960"
  },
  {
    "text": "packets into the wi-fi network because the power socket doesn't use a separate password on top of wi-fi this",
    "start": "1626960",
    "end": "1633520"
  },
  {
    "text": "allows the adversary to remotely turn on and off the power socket",
    "start": "1633520",
    "end": "1639799"
  },
  {
    "start": "1640000",
    "end": "1915000"
  },
  {
    "text": "another common implementation flaw is the so called cloaked amsdu attack",
    "start": "1642799",
    "end": "1648159"
  },
  {
    "text": "how does this attack work well to perform this attack the adversary sends the following wifi frame",
    "start": "1648159",
    "end": "1654880"
  },
  {
    "text": "as an aggregated frame so the is aggregated flag is true and as",
    "start": "1654880",
    "end": "1660080"
  },
  {
    "text": "content of the frame we first start with the following magic bytes and then at",
    "start": "1660080",
    "end": "1665200"
  },
  {
    "text": "the end of the packet we include the packet that we want to inject into the network",
    "start": "1665200",
    "end": "1671919"
  },
  {
    "text": "now how will a normal receiver process this frame well a normal receiver will",
    "start": "1671919",
    "end": "1677120"
  },
  {
    "text": "first de-aggregate this frame and it will result in the following two packets",
    "start": "1677120",
    "end": "1684080"
  },
  {
    "text": "the first packet here will be ignored because the metadata of this packet corresponds to these magic bytes and",
    "start": "1684080",
    "end": "1690240"
  },
  {
    "text": "that's in fact invalid metadata meaning this first subpacket is ignored",
    "start": "1690240",
    "end": "1696480"
  },
  {
    "text": "the second subpacket has valid metadata however it is sent in plain text and it",
    "start": "1696480",
    "end": "1703679"
  },
  {
    "text": "does not correspond to a handshake frame because it looks like a normal data frame and therefore the second subpac",
    "start": "1703679",
    "end": "1710559"
  },
  {
    "text": "this subpacket is also dropped now the problem is that a vulnerable",
    "start": "1710559",
    "end": "1716320"
  },
  {
    "text": "device will switch the order of these two operations so a vulnerable device will first check",
    "start": "1716320",
    "end": "1723679"
  },
  {
    "text": "if a plain text frame is a handshake frame but in this case the frame indeed",
    "start": "1723679",
    "end": "1729279"
  },
  {
    "text": "corresponds to the magic bytes of a handshake frame meaning the full frame",
    "start": "1729279",
    "end": "1734480"
  },
  {
    "text": "is now accepted and only after this does a vulnerable implementation de-aggregate the frame",
    "start": "1734480",
    "end": "1742480"
  },
  {
    "text": "meaning only after accepting the frame does it split this aggregated frame into",
    "start": "1742480",
    "end": "1748399"
  },
  {
    "text": "the su two subpackets now this first sub packet is still ignored however the second sub packet",
    "start": "1748399",
    "end": "1755919"
  },
  {
    "text": "which remember is send a plain text is now accepted this means that we as an adversary can",
    "start": "1755919",
    "end": "1762880"
  },
  {
    "text": "abuse this vulnerability to inject plain text packets into a protected wi-fi",
    "start": "1762880",
    "end": "1768399"
  },
  {
    "text": "network on the root cause is that implementations do these operations in the wrong order",
    "start": "1768399",
    "end": "1777120"
  },
  {
    "text": "surprisingly many devices are affected for example freebsd some windows dongles",
    "start": "1777120",
    "end": "1783120"
  },
  {
    "text": "three out of four home routers and even one professional access point and i'll now show a recorded demo where",
    "start": "1783120",
    "end": "1790320"
  },
  {
    "text": "the cloaked amsdu flaw allows an attacker to inject packets towards the router",
    "start": "1790320",
    "end": "1797120"
  },
  {
    "text": "more precisely in this demo the cloaked ams due vulnerability will be abused to punch a hole in the router's firewall so",
    "start": "1797120",
    "end": "1804320"
  },
  {
    "text": "that the attacker can connect with on the tech devices in the victim's home network",
    "start": "1804320",
    "end": "1810320"
  },
  {
    "text": "in our case the target is an outdated windows 7 computer that is vulnerable to blue keep",
    "start": "1810320",
    "end": "1815679"
  },
  {
    "text": "this computer is inside a local network meaning someone on the internet cannot directly access it however the following",
    "start": "1815679",
    "end": "1823360"
  },
  {
    "text": "script will punch a hole in the router's firewall such that an attacker on the internet can connect to local devices",
    "start": "1823360",
    "end": "1829279"
  },
  {
    "text": "behind it first though i'll connect to the server and i'll start wireshark to capture any",
    "start": "1829279",
    "end": "1835919"
  },
  {
    "text": "traffic that is sent towards it going back to the wi-fi attacker we can",
    "start": "1835919",
    "end": "1841520"
  },
  {
    "text": "see that the script injects a plain text aggregated wifi frame that looks like a neopol handshake message",
    "start": "1841520",
    "end": "1848399"
  },
  {
    "text": "this causes a vulnerable device to accept the injected frame even though it's not encrypted",
    "start": "1848399",
    "end": "1853760"
  },
  {
    "text": "the frame is nevertheless processed as an aggregated wifi frame meaning we can sneak in a tcp packet inside the",
    "start": "1853760",
    "end": "1860559"
  },
  {
    "text": "aggregated frame this tcp packet punches a hole in the router's firewall and is eventually",
    "start": "1860559",
    "end": "1866799"
  },
  {
    "text": "received by the attacker from this we learn the public ip address on port that can be used to access the",
    "start": "1866799",
    "end": "1872799"
  },
  {
    "text": "windows 7 machine we'll abuse this to take over the outdated windows 7 machine by exploiting",
    "start": "1872799",
    "end": "1879760"
  },
  {
    "text": "blue keep we first configure metasploit with ip address on port and then run the exploit",
    "start": "1879760",
    "end": "1887519"
  },
  {
    "text": "once the exploit completed we can monitor what the user is typing which we illustrate by stealing the login and",
    "start": "1888480",
    "end": "1894159"
  },
  {
    "text": "password of the victim as another example it's also possible to",
    "start": "1894159",
    "end": "1899440"
  },
  {
    "text": "take a screenshot of the windows machine to see what the victim is doing",
    "start": "1899440",
    "end": "1904879"
  },
  {
    "text": "finally it's also possible to execute any program on the victim's machine which here is illustrated by starting",
    "start": "1905200",
    "end": "1911440"
  },
  {
    "text": "the calculator",
    "start": "1911440",
    "end": "1914320"
  },
  {
    "start": "1915000",
    "end": "2235000"
  },
  {
    "text": "i also discovered various other implementation flaws and i'll highlight a few of them",
    "start": "1917440",
    "end": "1922960"
  },
  {
    "text": "first i found that various vulnerable implementations only require the last fragment to be encrypted",
    "start": "1922960",
    "end": "1929600"
  },
  {
    "text": "and this is for example the case for many network cards on windows on linux and with this vulnerability it becomes",
    "start": "1929600",
    "end": "1936320"
  },
  {
    "text": "more easy to perform the aggregation on cache attack design flaw on the other hand some implementations",
    "start": "1936320",
    "end": "1942960"
  },
  {
    "text": "accept fragmented frames even if only the last fragment is encrypted and then it becomes trivial to inject packets",
    "start": "1942960",
    "end": "1949200"
  },
  {
    "text": "into the network on for example free and net bsd is affected by this",
    "start": "1949200",
    "end": "1954720"
  },
  {
    "text": "another vulnerability is that many receivers don't check whether",
    "start": "1954720",
    "end": "1960399"
  },
  {
    "text": "fragments are consecutive remember that normally",
    "start": "1960399",
    "end": "1965840"
  },
  {
    "text": "fragments of the same fray must have this consecutive packet number however in practically all",
    "start": "1965840",
    "end": "1972880"
  },
  {
    "text": "implementations except linux they do not perform this check meaning we can mix fragments of different frames",
    "start": "1972880",
    "end": "1981440"
  },
  {
    "text": "or put differently we can more easily perform the mixed key attack",
    "start": "1981440",
    "end": "1986880"
  },
  {
    "text": "we also found that devices that do not support fragmentation are rather surprisingly still vulnerable to",
    "start": "1986880",
    "end": "1994240"
  },
  {
    "text": "attacks for instance open b on openbsd on expressive iot chips they treat",
    "start": "1994240",
    "end": "2001120"
  },
  {
    "text": "fragmented frames as full frames and under the right conditions this can",
    "start": "2001120",
    "end": "2006559"
  },
  {
    "text": "still be abused to inject frames towards them and this really shows that all",
    "start": "2006559",
    "end": "2012559"
  },
  {
    "text": "implementations are vulnerable even that those that don't support fragmentation of those that don't support aggregation",
    "start": "2012559",
    "end": "2019840"
  },
  {
    "text": "are still vulnerable to attacks now to test if a device is vulnerable i",
    "start": "2019840",
    "end": "2026720"
  },
  {
    "text": "created a test tool and it can detect all the vulnerabilities that i discussed in this presentation",
    "start": "2026720",
    "end": "2033600"
  },
  {
    "text": "to test if a device is vulnerable you do need the credentials of the wi-fi network so this is not on a tech tool",
    "start": "2033600",
    "end": "2040880"
  },
  {
    "text": "and this tool can also be used as the basis for future wi-fi research",
    "start": "2040880",
    "end": "2046399"
  },
  {
    "text": "so i do recommend that you check it out now i want to discuss a few things first",
    "start": "2046399",
    "end": "2053599"
  },
  {
    "text": "and for all why did it took more than two decades to discover these design flaws",
    "start": "2053599",
    "end": "2059358"
  },
  {
    "text": "i think the first reason is that without modified drivers",
    "start": "2059359",
    "end": "2064398"
  },
  {
    "text": "the attacks are not possible to perform in practice so maybe someone had the id",
    "start": "2064399",
    "end": "2069760"
  },
  {
    "text": "but was unable to verify their ids in practice second the fragmentation and aggregation",
    "start": "2069760",
    "end": "2076878"
  },
  {
    "text": "functionality of wi-fi were never considered security essential so nobody",
    "start": "2076879",
    "end": "2082320"
  },
  {
    "text": "really looked at them there's also some general lessons that we can learn from this",
    "start": "2082320",
    "end": "2088878"
  },
  {
    "text": "first and for all we should adopt defenses early even if the concerns are theoretic because that for example would",
    "start": "2088879",
    "end": "2096079"
  },
  {
    "text": "have prevented the aggregation design flaw it is also important to properly isolate",
    "start": "2096079",
    "end": "2102079"
  },
  {
    "text": "security context onto properly managed data that was decrypted under different",
    "start": "2102079",
    "end": "2107920"
  },
  {
    "text": "keys and finally we should keep fuzzing devices near the wi-fi lines can help",
    "start": "2107920",
    "end": "2113599"
  },
  {
    "text": "the wi-fi alliance can for instance fuss devices while they are being certified",
    "start": "2113599",
    "end": "2120320"
  },
  {
    "text": "now to disclose these vulnerabilities i collaborated with the wi-fi alliance on ikasi through an embargo of roughly nine",
    "start": "2120560",
    "end": "2128560"
  },
  {
    "text": "months and during this embargo i even",
    "start": "2128560",
    "end": "2133760"
  },
  {
    "text": "created several updates to the test tool so to the in the sense the proof of concept and this really shows that this",
    "start": "2133760",
    "end": "2140079"
  },
  {
    "text": "was an exceptional disclosure i'm currently still doing some follow-up",
    "start": "2140079",
    "end": "2145599"
  },
  {
    "text": "work so i'm helping the ieee with updating the wi-fi standard to fix the",
    "start": "2145599",
    "end": "2150960"
  },
  {
    "text": "design flaws i'm currently maintaining the test tool and also double checking whether vendors",
    "start": "2150960",
    "end": "2156960"
  },
  {
    "text": "are indeed implementing patches now looking back was this long",
    "start": "2156960",
    "end": "2163800"
  },
  {
    "text": "multi-party coordinated disclosures worth it and",
    "start": "2163800",
    "end": "2169359"
  },
  {
    "text": "well to my surprise some companies weren't happen weren't happy even if",
    "start": "2169359",
    "end": "2175200"
  },
  {
    "text": "they managed to write patches for most devices and this was a bit disappointing to me",
    "start": "2175200",
    "end": "2180800"
  },
  {
    "text": "because i was actually very happy that most devices got patches because usually",
    "start": "2180800",
    "end": "2186079"
  },
  {
    "text": "that's not the case for wi-fi fortunately most vendors did appreciate this long",
    "start": "2186079",
    "end": "2193280"
  },
  {
    "text": "embargo and here in particular i want to thank cisco lancome aruba huawei",
    "start": "2193280",
    "end": "2198640"
  },
  {
    "text": "ubiquiti mediatek samsung netgear for their positive responses",
    "start": "2198640",
    "end": "2205760"
  },
  {
    "text": "if you are watching a recorded video you can pause on this slide for the references",
    "start": "2205760",
    "end": "2210800"
  },
  {
    "text": "and with that i come to the conclusion i discovered three design flaws in wi-fi",
    "start": "2210800",
    "end": "2216079"
  },
  {
    "text": "on multiple implementation vulnerabilities in practice the implementation flaws are",
    "start": "2216079",
    "end": "2221599"
  },
  {
    "text": "the easiest to abuse and the design flaws can be a bit more tricky to abuse",
    "start": "2221599",
    "end": "2226800"
  },
  {
    "text": "on for more information you can visit the following url thank you for your attention",
    "start": "2226800",
    "end": "2235160"
  }
]