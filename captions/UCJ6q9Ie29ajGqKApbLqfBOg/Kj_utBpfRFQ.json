[
  {
    "start": "0",
    "end": "22000"
  },
  {
    "text": "all right um yeah very good morning to all of you um yeah thanks for coming to",
    "start": "80",
    "end": "5799"
  },
  {
    "text": "our session um entitled session identifiers are for now passwords are forever uh cross scripting based abuse",
    "start": "5799",
    "end": "12040"
  },
  {
    "text": "of uh browser password managers my name is Ben this is the basan who's going to uh yeah we're going to switch back and",
    "start": "12040",
    "end": "17600"
  },
  {
    "text": "forth during the talk but before we start and actually introduce ourselves I first have a question and this is",
    "start": "17600",
    "end": "23279"
  },
  {
    "start": "22000",
    "end": "22000"
  },
  {
    "text": "something that uh kind of gets your blood flowing uh early in the morning so you don't fall asleep during my talk or",
    "start": "23279",
    "end": "28320"
  },
  {
    "text": "our talk um show of hands who's using Chrome as a browser I figured as much uh",
    "start": "28320",
    "end": "36960"
  },
  {
    "text": "Firefox okay Safari still",
    "start": "36960",
    "end": "42480"
  },
  {
    "text": "Opera yeah you're like 1% I think of the internet users and finally who uses",
    "start": "42480",
    "end": "47640"
  },
  {
    "text": "Internet Explorer awesome um so during this talk or at the end of this talk you will",
    "start": "47640",
    "end": "52840"
  },
  {
    "text": "actually go away um and think of Internet Explorer in a way you have not thought of it before because it's uh as",
    "start": "52840",
    "end": "59399"
  },
  {
    "text": "we will show you um yeah later on in the talk it's actually for our attack scenario it's",
    "start": "59399",
    "end": "65198"
  },
  {
    "text": "one of the most secure browsers but in terms of full disclosure um I have to be",
    "start": "65199",
    "end": "70200"
  },
  {
    "text": "honest okay this is broken awesome um I was actually an intern with Microsoft research until last week this is also",
    "start": "70200",
    "end": "75799"
  },
  {
    "text": "why I'm wearing this t-shirt so if I seen anything nice about Internet Explorer um they still owe me kind of a paycheck um I think so yeah that's",
    "start": "75799",
    "end": "83280"
  },
  {
    "text": "that's um why I have positive things to say about iie okay uh quickly just something about",
    "start": "83280",
    "end": "89720"
  },
  {
    "text": "us so already said my name is Ben when St I'm a security researcher and PhD student at the University in in air",
    "start": "89720",
    "end": "95759"
  },
  {
    "text": "Langan in Germany this is Sebastian leis um also PhD student at the University in bom and this is Joint work with our",
    "start": "95759",
    "end": "102399"
  },
  {
    "text": "colleague Martin um of whom you see half down here um he's working for sap",
    "start": "102399",
    "end": "107520"
  },
  {
    "text": "research uh actually all three of us used to at some point work for sap research in a yeah uh distant past and",
    "start": "107520",
    "end": "114240"
  },
  {
    "text": "uh we still work together and uh collaborate on on quite some stuff okay so about the talk in this",
    "start": "114240",
    "end": "120759"
  },
  {
    "text": "talk we'll actually present to you the results of an analysis of different uh browsers so browser based password",
    "start": "120759",
    "end": "126039"
  },
  {
    "text": "managers we're not going to talk about one password or last pass but basically about the password managers that are the",
    "start": "126039",
    "end": "131720"
  },
  {
    "text": "normal user can use um such as yeah all of you guys just uh show show hands um",
    "start": "131720",
    "end": "138160"
  },
  {
    "text": "which browser you actually use um we will then or the bus will then demo uh",
    "start": "138160",
    "end": "143200"
  },
  {
    "text": "yeah kind of this this analysis and show um how bad they really are and how great IE is in comparison um we will then go",
    "start": "143200",
    "end": "150040"
  },
  {
    "text": "on with a study of uh what password Fields look on the look like on the web which is also pretty scary um and in the",
    "start": "150040",
    "end": "156200"
  },
  {
    "text": "end we actually after all these scary parts we say hey this is super insecure everything we actually have a potential",
    "start": "156200",
    "end": "161800"
  },
  {
    "text": "solution um towards this problem but before we start let's step",
    "start": "161800",
    "end": "167200"
  },
  {
    "text": "uh yeah back one step um and look at what is actually what is cross scripting I guess most of you guys know but I have",
    "start": "167200",
    "end": "173040"
  },
  {
    "text": "nice cat pictures on here so I still want to do the slides anyway um the web's principal security",
    "start": "173040",
    "end": "179920"
  },
  {
    "start": "177000",
    "end": "177000"
  },
  {
    "text": "policy is the so-called same origin policy um and the question is why can an attacker say having the domain attack.or",
    "start": "179920",
    "end": "188000"
  },
  {
    "text": "um read the visitors emails from so if somebody visits ea.org why can't he actually read the Gmail emails and this",
    "start": "188000",
    "end": "194400"
  },
  {
    "text": "is precisely uh the same origin policy's job um it makes sure that resources can",
    "start": "194400",
    "end": "200400"
  },
  {
    "text": "only get access to one another if their Origins match and in origin in this sense is defined as the protocol so for",
    "start": "200400",
    "end": "206920"
  },
  {
    "text": "example HTTP versus https um the domain whereas this is actually subdomain not",
    "start": "206920",
    "end": "212080"
  },
  {
    "text": "uh not just second level domain as well as the port so only if these three things match then the access is the",
    "start": "212080",
    "end": "218200"
  },
  {
    "text": "access is granted and this actually makes the job a little bit harder for an attacker and it makes him very sad and",
    "start": "218200",
    "end": "223720"
  },
  {
    "text": "he also has a very sad um kitten in this instance so cross at scripting what is",
    "start": "223720",
    "end": "229280"
  },
  {
    "start": "228000",
    "end": "228000"
  },
  {
    "text": "the actual underlying problem um web apps process data this is a a very obvious statement I guess um otherwise",
    "start": "229280",
    "end": "236840"
  },
  {
    "text": "it wouldn't make sense otherwise we just have uh kind of the web uh as invented by by Tim burners Lee where you just",
    "start": "236840",
    "end": "242200"
  },
  {
    "text": "have content you can see but you can't really interact with the web application um and this data is somewhat produced or",
    "start": "242200",
    "end": "249079"
  },
  {
    "text": "provided by the user this might be login credentials this might be something you post in a in a forum anything like this",
    "start": "249079",
    "end": "256160"
  },
  {
    "text": "and basically all that actually reaches the server via HTTP which is basically",
    "start": "256160",
    "end": "262000"
  },
  {
    "text": "post parameters it might be get parameters it might even be headers it might be yeah whatever however a user",
    "start": "262000",
    "end": "267680"
  },
  {
    "text": "can interact with the web application and the web application then somewhat processes this this data it might either",
    "start": "267680",
    "end": "274759"
  },
  {
    "text": "store it or it might kind of yeah return it back directly think of a a search query um where you enter something into",
    "start": "274759",
    "end": "282080"
  },
  {
    "text": "to a search field and then the website says hey you searched for your your query string and then uh uses also this",
    "start": "282080",
    "end": "287919"
  },
  {
    "text": "kind of data not only to reflect this back to you but also do the search in the background um so you can interact with",
    "start": "287919",
    "end": "293600"
  },
  {
    "text": "it but actually um if you look at this little snippet of data I hope you can you can all read it basic this script",
    "start": "293600",
    "end": "300440"
  },
  {
    "text": "alert one script closing is actually not data but it's code right because the",
    "start": "300440",
    "end": "305479"
  },
  {
    "text": "browser if it seees something like this says hey this is a this is a piece of JavaScript so I will now um yeah execute",
    "start": "305479",
    "end": "311080"
  },
  {
    "text": "it and open this alert box and the important thing is that it's actually interpreted by the victims browser in",
    "start": "311080",
    "end": "317039"
  },
  {
    "text": "this in the context of this vulnerable web application um that means think again about the same origin policy if I",
    "start": "317039",
    "end": "323240"
  },
  {
    "text": "as an attacker I'm able to inject my own code into gmail.com then actually I'm running in the origin of gmail.com and I",
    "start": "323240",
    "end": "328800"
  },
  {
    "text": "can actually your read your emails and yeah the idea is first of all",
    "start": "328800",
    "end": "334600"
  },
  {
    "text": "you try to find a flaw in the web application that allows you as an attacker then allows you to uh yeah put",
    "start": "334600",
    "end": "340160"
  },
  {
    "text": "your your malicious code there um you obviously test this in your own browser to begin with and then you somehow make",
    "start": "340160",
    "end": "345880"
  },
  {
    "text": "the victim visit that site that might either by be by kind of yeah click or sending them spam um obviously if you",
    "start": "345880",
    "end": "352400"
  },
  {
    "text": "think about reflected cross scripting where this is part of the of of a get parameter or something this URL might be",
    "start": "352400",
    "end": "358199"
  },
  {
    "text": "super long so it might be very obvious um what you're doing but what you can also do is for example register a domain",
    "start": "358199",
    "end": "364199"
  },
  {
    "text": "like kitten p.org which we actually own um post nice cat pictures on it and while the user is happy that he's",
    "start": "364199",
    "end": "370080"
  },
  {
    "text": "watching cat pictures you actually have an hid hidden eye frame on the website um that kind of contains this URL so the",
    "start": "370080",
    "end": "377160"
  },
  {
    "text": "user is never aware that in the background while he's looking at cat pictures actually I'm loading gmail.com with this whole bunch of uh of malicious",
    "start": "377160",
    "end": "384479"
  },
  {
    "text": "payload so basically in the end we can read um your Gils",
    "start": "384479",
    "end": "390520"
  },
  {
    "text": "okay so I yeah spoilered already a little bit what can a cross scripting attacker do so the first and foremost",
    "start": "390520",
    "end": "397360"
  },
  {
    "start": "391000",
    "end": "391000"
  },
  {
    "text": "thing you will always see if you see a proof of cont proof of concept sorry for a cross scripting exploit people open",
    "start": "397360",
    "end": "403960"
  },
  {
    "text": "alert boxes and this is like wow um obviously kind of very freaky hacker",
    "start": "403960",
    "end": "410639"
  },
  {
    "text": "stuff uh going on here but actually the attacker can do much more than just open this alert box he can for example hijack",
    "start": "410639",
    "end": "417000"
  },
  {
    "text": "a session that means he can force the the victim's browser to um kind of leak the cookies that might be involved um it",
    "start": "417000",
    "end": "424479"
  },
  {
    "text": "might Force the victim to click on a link for example I don't know uh yeah or post something think about a cross",
    "start": "424479",
    "end": "430800"
  },
  {
    "text": "scripting on Twitter um where yeah what I'm talking here actually um I said hey",
    "start": "430800",
    "end": "436319"
  },
  {
    "text": "visit kp.org and in the background actually the kp.org is loading Twitter plus this um plus this m payload and",
    "start": "436319",
    "end": "443360"
  },
  {
    "text": "then all of you post hey this is an awesome talk going on here right now um it can also be used to alter content uh",
    "start": "443360",
    "end": "449720"
  },
  {
    "text": "there was actually a case of the the German Chancellor uh the Chancellor's website where there was a cross",
    "start": "449720",
    "end": "455639"
  },
  {
    "text": "scripting I think also in a search field um which eventually uh led to some yeah",
    "start": "455639",
    "end": "460720"
  },
  {
    "text": "fake content namely uh Chancellor merel resigned because of I don't know what it was um but I think it even made it to",
    "start": "460720",
    "end": "466960"
  },
  {
    "text": "the news um just because yeah uh it was it was actually on that on that website",
    "start": "466960",
    "end": "473080"
  },
  {
    "text": "um you can SPO login forms and but first and foremost and this is also the the topic of our talk and this is something",
    "start": "473080",
    "end": "478879"
  },
  {
    "text": "that typically users or uh kind of researchers don't necessarily think about we can actually utilize cross",
    "start": "478879",
    "end": "484039"
  },
  {
    "text": "scripting attacks to steal your password manager passwords um yeah so basically just to",
    "start": "484039",
    "end": "491360"
  },
  {
    "start": "488000",
    "end": "488000"
  },
  {
    "text": "give you a quick quick overview um I think in literature or also in the security Community people typically",
    "start": "491360",
    "end": "498199"
  },
  {
    "text": "speak of three different types of cross scripting we actually make the distinction um kind of in on on on two",
    "start": "498199",
    "end": "503599"
  },
  {
    "text": "axes um we can either have client side or server side code that causes the",
    "start": "503599",
    "end": "508680"
  },
  {
    "text": "issue and then we can have reflected cross scripting where kind of data is directly echoed back to the to the user",
    "start": "508680",
    "end": "515760"
  },
  {
    "text": "or we can have stored cross scripting if you think about a forum post um exactly",
    "start": "515760",
    "end": "521000"
  },
  {
    "text": "but then again isn't cross scripting like uh hasn't it been solved uh especially with the content security",
    "start": "521000",
    "end": "526880"
  },
  {
    "start": "522000",
    "end": "522000"
  },
  {
    "text": "policy and things like this actually it has not been so for uh last year CCS we actually conducted a study um that",
    "start": "526880",
    "end": "533680"
  },
  {
    "text": "showed that about about 10% of all the Alexa top 10K websites um Carry uh at",
    "start": "533680",
    "end": "540000"
  },
  {
    "text": "least one dbased cross scripting vulnerability this is a class of cross scripting that has not been researched all that well in the in the previous",
    "start": "540000",
    "end": "546079"
  },
  {
    "text": "years um then again as you might know and basically all of you or a lot of you",
    "start": "546079",
    "end": "551959"
  },
  {
    "text": "uh said you use Google Chrome Google Chrome is shipped with the so-called cross scripting auditor that actually",
    "start": "551959",
    "end": "557160"
  },
  {
    "text": "tries to detect and uh yeah block cross scripting um but turns out that um yeah basically for our blackhead us talk a",
    "start": "557160",
    "end": "564360"
  },
  {
    "text": "couple of months ago we showed that about 80% of the domains uh out of these temp % of the dbased Cross scripting",
    "start": "564360",
    "end": "570880"
  },
  {
    "text": "domains um are still vulnerable even if the cross scripting auditor is deployed so it's not really a kind of a yeah good",
    "start": "570880",
    "end": "578360"
  },
  {
    "text": "good way to to block this and this is also kind of underlined by the the whad",
    "start": "578360",
    "end": "583839"
  },
  {
    "text": "security um security report um and it again says cross scription regains the",
    "start": "583839",
    "end": "589600"
  },
  {
    "text": "number one spot after being overtaken by information leakage so again last year cross scripting was kind of the most",
    "start": "589600",
    "end": "595279"
  },
  {
    "text": "prevalent kind of vulnerability um on the web okay and with this uh let's",
    "start": "595279",
    "end": "601040"
  },
  {
    "text": "switch over to Sebastian come back in a minute okay oh this is working great so",
    "start": "601040",
    "end": "607399"
  },
  {
    "text": "after we now have um the foundations that we need to understand the rest of the talk I would like to talk about",
    "start": "607399",
    "end": "612640"
  },
  {
    "text": "passwords and password managers so we'll first look about how passwords are used on the web and then a little bit how",
    "start": "612640",
    "end": "618200"
  },
  {
    "text": "password manager work and what are the security um features that password managers have so if we look at passwords",
    "start": "618200",
    "end": "625880"
  },
  {
    "start": "624000",
    "end": "624000"
  },
  {
    "text": "on the web we have to state that passwords are still the first first and the only form of authentication on the",
    "start": "625880",
    "end": "633320"
  },
  {
    "text": "web so we basically only use passwords on the web and well in a perfect world I",
    "start": "633320",
    "end": "639880"
  },
  {
    "text": "guess we would not have passwords we would have something that is more secure that cannot be stolen that we do not",
    "start": "639880",
    "end": "645639"
  },
  {
    "text": "store in databases and so on and so forth but we still have the passwords all over the place and well in a semi",
    "start": "645639",
    "end": "652480"
  },
  {
    "text": "perfect world where we still have passwords we would have a password for each site so and the password for for",
    "start": "652480",
    "end": "659880"
  },
  {
    "text": "this for each site should be sufficiently complex to avoid brute forcing and hash cracking and so on but",
    "start": "659880",
    "end": "666320"
  },
  {
    "text": "the reality looks a lot different so here we see a few statistics that we've taken from other researchers from the",
    "start": "666320",
    "end": "673560"
  },
  {
    "text": "web and what we what we can see is that so what the researcher did he analyzed",
    "start": "673560",
    "end": "679839"
  },
  {
    "text": "password dumps of of hacks that were publicly available and check what kind of passwords are people using and what",
    "start": "679839",
    "end": "686160"
  },
  {
    "text": "we for example see that is 5% of all users just use the password password",
    "start": "686160",
    "end": "691880"
  },
  {
    "text": "then we have about 10% of the user ID use password 1 2 1 2 3 4 5 six or one",
    "start": "691880",
    "end": "698720"
  },
  {
    "text": "the numbers of 128 and what we also see is that a lot of users use the same password so if we compile a list of the",
    "start": "698720",
    "end": "706279"
  },
  {
    "text": "top 1,000 passwords we see that 91% of all the passwords are used from that",
    "start": "706279",
    "end": "712560"
  },
  {
    "text": "list so it's pretty easy to crack passwords and in recent years we we saw a shift from a big um internet companies",
    "start": "712560",
    "end": "720680"
  },
  {
    "text": "to enforce more strict password complexity rules and this is Illustrated in this comic somehow so if you look at",
    "start": "720680",
    "end": "727600"
  },
  {
    "text": "Facebook and if you look at Google we see that those Services require much more complex password so we need to use",
    "start": "727600",
    "end": "733959"
  },
  {
    "text": "uppercase letters lowercase letters we need to have numbers and and special charts in your password and this makes",
    "start": "733959",
    "end": "741160"
  },
  {
    "text": "passwords very hard to to remember and this either lead leads leads to a very",
    "start": "741160",
    "end": "748240"
  },
  {
    "text": "um un fortunate situation people are reusing passwords and it's not the semi perfect world where we have a",
    "start": "748240",
    "end": "754760"
  },
  {
    "text": "sufficiently complex password for every site and one solution that was introduced lately in browsers are",
    "start": "754760",
    "end": "760000"
  },
  {
    "start": "760000",
    "end": "760000"
  },
  {
    "text": "password managers so because password managers take the burden of the user for remembering the password but the",
    "start": "760000",
    "end": "766560"
  },
  {
    "text": "password manager will do this and nowadays we see that all the browsers that Ben presented in the beginning have",
    "start": "766560",
    "end": "772320"
  },
  {
    "text": "password managers and if you try to store a password you will see such a dialogue that says well here would you",
    "start": "772320",
    "end": "777959"
  },
  {
    "text": "like me to remember your password and if we look at the functionalities of such a password manager it has basically two",
    "start": "777959",
    "end": "785399"
  },
  {
    "text": "the first one is to store the credentials on first submission when you see that form and I think a lot of",
    "start": "785399",
    "end": "790880"
  },
  {
    "text": "people have looked into how this is going and if this is secure and if mware can can extract password from the",
    "start": "790880",
    "end": "796959"
  },
  {
    "text": "computer and so on and so forth but not a lot of people have looked at the second functionality and the second",
    "start": "796959",
    "end": "802440"
  },
  {
    "text": "functionality is inserting the credentials into a web page on a subsequent visit so when you come back",
    "start": "802440",
    "end": "808360"
  },
  {
    "text": "to the website for which you store the password it will already be filled into the form in most of the password manager",
    "start": "808360",
    "end": "814920"
  },
  {
    "text": "and you just need to click uh login and this has severe consequences",
    "start": "814920",
    "end": "820600"
  },
  {
    "text": "so we would like to look at this second functionality and we would like to look",
    "start": "820600",
    "end": "826079"
  },
  {
    "text": "at this situation in terms of uh thinking about cross-site scripting so here we have a an example so we have a",
    "start": "826079",
    "end": "834040"
  },
  {
    "start": "831000",
    "end": "831000"
  },
  {
    "text": "simple login form and we have a password manager and the password manager has a",
    "start": "834040",
    "end": "839519"
  },
  {
    "text": "password stored for this login form or for this origin and what he does he simply fills that form with a password",
    "start": "839519",
    "end": "846399"
  },
  {
    "text": "and although this is implemented in the browser there could be special protection against the text such as",
    "start": "846399",
    "end": "852040"
  },
  {
    "text": "crossed scripting so we but what we see is that there is no protection at all so the the way this password is inserted",
    "start": "852040",
    "end": "858759"
  },
  {
    "text": "into the form is that the password manager just puts the password into the document object into into the D into",
    "start": "858759",
    "end": "866079"
  },
  {
    "text": "document object model and well JavaScript running in the page can access data that is put into the Dom so",
    "start": "866079",
    "end": "873240"
  },
  {
    "text": "JavaScript in the page is able to access the email field and as well as the password field and just extract the",
    "start": "873240",
    "end": "880320"
  },
  {
    "text": "password and here the xss comes in so what an attacker gains through xss is",
    "start": "880320",
    "end": "885399"
  },
  {
    "text": "execution of JavaScript code in the origin of the web page and hence he's able to extract execute pass sorry",
    "start": "885399",
    "end": "893839"
  },
  {
    "text": "execute xss JavaScript and therefore he's able to access the password field",
    "start": "893839",
    "end": "898880"
  },
  {
    "text": "and and extract the password so I will demonstrate this shortly it's very easy and very straightforward so here I have",
    "start": "898880",
    "end": "906040"
  },
  {
    "text": "a page it's called login.com This is a page it's not real login.com but it's a page on my local computer and what we",
    "start": "906040",
    "end": "912800"
  },
  {
    "text": "see is that I stored a password in the password manager and we see that this is Chrome and if I reload this page Chrome",
    "start": "912800",
    "end": "920199"
  },
  {
    "text": "would will automatically fill in uh my password into the form so let's have a look at JavaScript so I just opened the",
    "start": "920199",
    "end": "926680"
  },
  {
    "text": "JavaScript console where I can execute uh JavaScript commands like a crossy CR scripting attacker would do and what we",
    "start": "926680",
    "end": "933319"
  },
  {
    "text": "can just do is we can select the password field so I use just a JavaScript method that is well known and",
    "start": "933319",
    "end": "940839"
  },
  {
    "text": "say well give me all Fields name password and this gives me a note list so I take the first element and here I",
    "start": "940839",
    "end": "947560"
  },
  {
    "text": "can see the the HTML code of the password field and we do not see the password in the HTML but we can just uh",
    "start": "947560",
    "end": "954079"
  },
  {
    "text": "query the value attribute and here we see the JavaScript can access um the password that was was",
    "start": "954079",
    "end": "962000"
  },
  {
    "text": "inserted into the",
    "start": "962000",
    "end": "964920"
  },
  {
    "text": "page Ben says I should Zoom so that is more visible yes that's a good idea",
    "start": "967240",
    "end": "974120"
  },
  {
    "text": "okay so here we can see uh the password is extracted on in clear",
    "start": "974120",
    "end": "979759"
  },
  {
    "text": "text and this is a very bad thing if we think about crossy scripting and in",
    "start": "980279",
    "end": "985800"
  },
  {
    "text": "order to see what the security consequences of this features are I would like to compare two worlds one",
    "start": "985800",
    "end": "991480"
  },
  {
    "start": "990000",
    "end": "990000"
  },
  {
    "text": "world without password manager and a world with password managers that enter your credentials automatically into form",
    "start": "991480",
    "end": "998199"
  },
  {
    "text": "so in a world without password managers access S attex only work when the users",
    "start": "998199",
    "end": "1004480"
  },
  {
    "text": "authenticated so what you would like to do in an access as attack is you would either like to conduct State changing",
    "start": "1004480",
    "end": "1010199"
  },
  {
    "text": "actions in the name of the user or you would like to steal the session credentials so the session cookie to",
    "start": "1010199",
    "end": "1016240"
  },
  {
    "text": "conduct some State changing actions in his name on your computer so if you conduct an xss attack",
    "start": "1016240",
    "end": "1022440"
  },
  {
    "text": "you construct the URL with the xss payload and send it to the victim to execute and the attack only works when",
    "start": "1022440",
    "end": "1029839"
  },
  {
    "text": "the user is authenticated so if he's not authenticated you cannot conduct any state changing actions and there's also",
    "start": "1029839",
    "end": "1035438"
  },
  {
    "text": "no session credential to steal in a world with password managers anex just works out of the box",
    "start": "1035439",
    "end": "1043199"
  },
  {
    "text": "so the if if you visit the page the password manager will fill in your password you have JavaScript execution",
    "start": "1043199",
    "end": "1050919"
  },
  {
    "text": "on the page as an attacker so you can just access the password and you can steal the password and the consequences of this",
    "start": "1050919",
    "end": "1058240"
  },
  {
    "text": "are are very bad because on the in in a world without password managers we can",
    "start": "1058240",
    "end": "1063440"
  },
  {
    "text": "just steal the session credential so the session cookie and the session cookie is only limited only valid for a very",
    "start": "1063440",
    "end": "1070200"
  },
  {
    "text": "limited amount of time so as soon as the user logs out or a timeout is hit the session credentials are not valid",
    "start": "1070200",
    "end": "1076480"
  },
  {
    "text": "anymore so the attacker cannot conduct any any further actions but if you have a password stolen the attacks are",
    "start": "1076480",
    "end": "1083080"
  },
  {
    "text": "limited to the lifetime of a password and usually people will not notice that they they have been accessed and so you",
    "start": "1083080",
    "end": "1090200"
  },
  {
    "text": "have the password of the user and the probability that he's not changing this password is is very high and then",
    "start": "1090200",
    "end": "1096720"
  },
  {
    "text": "another problem comes in so passwords are often reused by users on other web",
    "start": "1096720",
    "end": "1102200"
  },
  {
    "text": "pages so an xss attack on password managers do not only affect the site",
    "start": "1102200",
    "end": "1108000"
  },
  {
    "text": "that the user is currently visiting and that is vulnerable to xss but it will affect all the sites that the the",
    "start": "1108000",
    "end": "1115919"
  },
  {
    "text": "password is valid for and if we look at this we have to state that well the",
    "start": "1115919",
    "end": "1121320"
  },
  {
    "text": "current password manager generation makes as access S attacks more severe so",
    "start": "1121320",
    "end": "1126720"
  },
  {
    "text": "it's much hard much more easier for an attacker to do something bad and we took",
    "start": "1126720",
    "end": "1132600"
  },
  {
    "text": "this as a basis for research and had a look at security mechanisms in password",
    "start": "1132600",
    "end": "1137799"
  },
  {
    "text": "managers and as a spoiler we didn't found a lot of them so but what we did",
    "start": "1137799",
    "end": "1143600"
  },
  {
    "text": "we found five key features of password managers so how they are inserting credentials into field and we see we we",
    "start": "1143600",
    "end": "1150760"
  },
  {
    "start": "1144000",
    "end": "1144000"
  },
  {
    "text": "will have a look at how password managers are matching the URLs and the forms that they insert passwords into we",
    "start": "1150760",
    "end": "1157440"
  },
  {
    "text": "will look at password managers that require user interaction before filling in a password and we will also look at",
    "start": "1157440",
    "end": "1165520"
  },
  {
    "text": "at the autocomplete attribute so let's first first look at URL and form",
    "start": "1165520",
    "end": "1170880"
  },
  {
    "text": "matching I have another demo so here we are in Chrome again and I",
    "start": "1170880",
    "end": "1177480"
  },
  {
    "text": "stored passwords on this website so on login.com login PHP and on this very",
    "start": "1177480",
    "end": "1185000"
  },
  {
    "text": "same domain I have another page which is called search.php and search.php is a simple uh",
    "start": "1185000",
    "end": "1192880"
  },
  {
    "text": "Search application so I can just put in some value and it it will search something uh for",
    "start": "1192880",
    "end": "1199679"
  },
  {
    "text": "you and here obviously there's a cross scripting so here I have user input",
    "start": "1199679",
    "end": "1205200"
  },
  {
    "text": "which is reflected in the get parameter and reflect it in the page and I can just enter some arbitrary HTML code so",
    "start": "1205200",
    "end": "1212240"
  },
  {
    "text": "for example I can just put B so that you believe me so we see that the code that",
    "start": "1212240",
    "end": "1218360"
  },
  {
    "text": "I put into the URL is reflected in the page and now the text is bold so let's",
    "start": "1218360",
    "end": "1224039"
  },
  {
    "text": "just try to be a cross- scripting attacker and enter a for here so I just add another",
    "start": "1224039",
    "end": "1230400"
  },
  {
    "text": "form and I give two input fields to the form",
    "start": "1230400",
    "end": "1235720"
  },
  {
    "text": "so I say just I would like to have a text field and I give it just an arbitrary",
    "start": "1235720",
    "end": "1241840"
  },
  {
    "text": "name and now I will add a password field and just give it another arbitrary",
    "start": "1247400",
    "end": "1254360"
  },
  {
    "text": "name and then I sent this and I see my form and I see well Chrome isn't very",
    "start": "1254760",
    "end": "1260799"
  },
  {
    "text": "intelligent so it just say well I have credentials stored for login.com here is a form it has a password field so I",
    "start": "1260799",
    "end": "1267520"
  },
  {
    "text": "enter credentials and the funny thing is I can even add a third or fourth field",
    "start": "1267520",
    "end": "1273039"
  },
  {
    "text": "just with another name and chrome will just enter enter the password so Chrome has no matching",
    "start": "1273039",
    "end": "1279559"
  },
  {
    "text": "rules at all so it just SS the password and as soon as it sees a password field it will enter your credentials and as a",
    "start": "1279559",
    "end": "1286000"
  },
  {
    "text": "cross scripting attacker I can now just add some arbitrary JavaScript into the URL and then just extract that password",
    "start": "1286000",
    "end": "1292600"
  },
  {
    "text": "from that form as we have seen it before and steal your",
    "start": "1292600",
    "end": "1298039"
  },
  {
    "text": "password so here we can see a small overview of browsers doing matching of",
    "start": "1300840",
    "end": "1306240"
  },
  {
    "text": "URLs and forms and the only browser that really does a matching is the Internet Explorer so Internet Explorer only",
    "start": "1306240",
    "end": "1313080"
  },
  {
    "text": "inserts credentials into the page that you stored the credentials for and only into that single form and all the other",
    "start": "1313080",
    "end": "1319240"
  },
  {
    "text": "browsers just fill in passwords into any form um that is present on the web page and that has a password",
    "start": "1319240",
    "end": "1326360"
  },
  {
    "text": "field the next feature that we that we noticed is user interaction so as we saw",
    "start": "1326360",
    "end": "1332919"
  },
  {
    "text": "in Chrome passwords are just inter inserted into the page without any user",
    "start": "1332919",
    "end": "1337960"
  },
  {
    "text": "interactions and that makes it very easy for an xss attacker to automate the attack so he just needs to send his",
    "start": "1337960",
    "end": "1343960"
  },
  {
    "text": "cross scripting attack and will receive the password",
    "start": "1343960",
    "end": "1349480"
  },
  {
    "text": "so we'll have another demo this time in in Internet Explorer",
    "start": "1349480",
    "end": "1354919"
  },
  {
    "text": "and here we see the same side it's login.com login. PP and I store the password on this site in",
    "start": "1354919",
    "end": "1361880"
  },
  {
    "text": "iie and if I refresh this page takes a while we will see that",
    "start": "1361880",
    "end": "1368159"
  },
  {
    "text": "there is no password in the password field well why does it take so",
    "start": "1368159",
    "end": "1376600"
  },
  {
    "text": "long sorry for that it's on a local host so it",
    "start": "1377440",
    "end": "1383559"
  },
  {
    "text": "should um not sure try okay no it's still",
    "start": "1388679",
    "end": "1394559"
  },
  {
    "text": "showing loading but okay let's just wait a a few",
    "start": "1394559",
    "end": "1402600"
  },
  {
    "text": "[Laughter] seconds okay not sure what's going on",
    "start": "1402830",
    "end": "1410440"
  },
  {
    "text": "okay I switched to another browser so I just use Safari so here we see the same side",
    "start": "1410520",
    "end": "1416640"
  },
  {
    "text": "again and if we visit it with Safari we immediately see that there is some kind of uh popup uh window and we first need",
    "start": "1416640",
    "end": "1424760"
  },
  {
    "text": "to click until the password is entered into the form and if the form is I can empty it again so it will if I click so",
    "start": "1424760",
    "end": "1433080"
  },
  {
    "text": "there's some kind of user interaction involved so if if a cross scripting attacker wants to exploit you it's not",
    "start": "1433080",
    "end": "1438320"
  },
  {
    "text": "that that easy so he somehow needs to make you to click on that thing and here in Safari we see see a very good example",
    "start": "1438320",
    "end": "1446039"
  },
  {
    "text": "of uh a secure user interaction because this thing cannot be",
    "start": "1446039",
    "end": "1451440"
  },
  {
    "text": "hidden by other things so so an attack that you could choose to overcome this issue is Click jacking so you could try",
    "start": "1451440",
    "end": "1457640"
  },
  {
    "text": "to to make the user click on this thing and you could try to hide this window from it but in Safari it's realized very",
    "start": "1457640",
    "end": "1464559"
  },
  {
    "text": "good so this this popup that you see cannot be be overlaid by any other by any other site or by any diff elements",
    "start": "1464559",
    "end": "1471600"
  },
  {
    "text": "or that you that you have on the page and it cannot make be made Invisible by",
    "start": "1471600",
    "end": "1477320"
  },
  {
    "text": "yes it's not in the yes it's not in Dom I can show it I have I have a",
    "start": "1477320",
    "end": "1484880"
  },
  {
    "text": "short I say it's a very good solution so in this case uh it's not click",
    "start": "1485159",
    "end": "1490440"
  },
  {
    "text": "checkable so here we can see it here I have a page that is called evil.com which could be used by the attacker and",
    "start": "1490440",
    "end": "1496200"
  },
  {
    "text": "he framed the the login PHP page from login.com and here you can see I made it",
    "start": "1496200",
    "end": "1501399"
  },
  {
    "text": "OPAC but still so that you can con see it and um this thing is still showing uh",
    "start": "1501399",
    "end": "1508760"
  },
  {
    "text": "showing up so people will notice it and click checking this is is very",
    "start": "1508760",
    "end": "1514279"
  },
  {
    "text": "hard okay let's have a look at the overview again so the reason why I wanted to show Internet Explorer is",
    "start": "1514279",
    "end": "1520880"
  },
  {
    "text": "because at the time when we conduct this re research Internet Explorer was the only browser doing that so before all",
    "start": "1520880",
    "end": "1528760"
  },
  {
    "text": "the browsers just filled in the passwords and in the last two or three months Opera and also Safari changed it",
    "start": "1528760",
    "end": "1536520"
  },
  {
    "text": "Behavior to show that box okay so let's have a look at another",
    "start": "1536520",
    "end": "1542960"
  },
  {
    "start": "1542000",
    "end": "1542000"
  },
  {
    "text": "feature so in HTML 5 we have a new attribute that is called autocomplete",
    "start": "1542960",
    "end": "1548399"
  },
  {
    "text": "and here is some text of the specification and if you put autoc complete to text field it has either two",
    "start": "1548399",
    "end": "1554440"
  },
  {
    "text": "meanings so it can either be used for input fi that have a particularly sensitive data",
    "start": "1554440",
    "end": "1561760"
  },
  {
    "text": "for example the activation code of a nuclear weapon says the specification or you have something that",
    "start": "1561760",
    "end": "1568399"
  },
  {
    "text": "the user needs to re-enter every time he visits the page something like for",
    "start": "1568399",
    "end": "1573679"
  },
  {
    "text": "example in a one-time password for your banking account so the autocomplete P",
    "start": "1573679",
    "end": "1579640"
  },
  {
    "text": "autocomplete attribute can be used to op for a page to opt out of storing data in",
    "start": "1579640",
    "end": "1585640"
  },
  {
    "text": "the browser so you can tell the browser don't save this data it's",
    "start": "1585640",
    "end": "1590919"
  },
  {
    "text": "sensitive so we had look at the different browsers and if they adhere to",
    "start": "1590919",
    "end": "1596480"
  },
  {
    "text": "this attribute if you put it to the password field so if put to the password field browsers shouldn't store your",
    "start": "1596480",
    "end": "1602080"
  },
  {
    "text": "password in there so let's have another look again at Chrome I have another page",
    "start": "1602080",
    "end": "1608240"
  },
  {
    "text": "on this domain and it's called autocomplete and if we look at the",
    "start": "1608240",
    "end": "1615360"
  },
  {
    "text": "password field here it is and here we have the autocomplete uh attribute and we switch",
    "start": "1615360",
    "end": "1622880"
  },
  {
    "text": "it to off but well Chrome simply decides well even if even if we try to to submit",
    "start": "1622880",
    "end": "1629440"
  },
  {
    "text": "a form it will say yes do you want to store this password and if you press yes it will store it and it will",
    "start": "1629440",
    "end": "1635880"
  },
  {
    "text": "automatically fill this um application and there's an interesting",
    "start": "1635880",
    "end": "1642399"
  },
  {
    "text": "other example so we have Firefox and here we can see login.php",
    "start": "1642399",
    "end": "1647480"
  },
  {
    "text": "and the login form will be automatically filled by your password manager but if we go to autocomplete we will see it",
    "start": "1647480",
    "end": "1654840"
  },
  {
    "text": "will be not filled so it it somehow aderes to the autocomplete field but it still autofills if you click so if you",
    "start": "1654840",
    "end": "1661960"
  },
  {
    "text": "if you have the autocomplete feature in Firefox it will just switch to mode where you require user interaction and",
    "start": "1661960",
    "end": "1668360"
  },
  {
    "text": "then it will again autocomplete the field if you click so it will still store the",
    "start": "1668360",
    "end": "1674158"
  },
  {
    "text": "password so let's have a look at the overview again so we have Chrome which",
    "start": "1674320",
    "end": "1679760"
  },
  {
    "text": "doesn't adhere to that um attribute at all we have Firefox and Safari they",
    "start": "1679760",
    "end": "1685159"
  },
  {
    "text": "somehow adhere to it because they do not autofill the password field but they still autofill it if you if you",
    "start": "1685159",
    "end": "1691640"
  },
  {
    "text": "click and then Opera also does not adere to the attribute and Internet Explorer",
    "start": "1691640",
    "end": "1697200"
  },
  {
    "text": "adhes to it and does not offer to autocomplete the field at all so we reported this to Google so we",
    "start": "1697200",
    "end": "1705519"
  },
  {
    "text": "we we open a bug and said well if the auto complete this present the autoc compete attribute we should not store",
    "start": "1705519",
    "end": "1711120"
  },
  {
    "text": "passwords and do not autofill uh the passwords so we open the back back and",
    "start": "1711120",
    "end": "1717440"
  },
  {
    "text": "um told this Google and well Google replied well this is intentional and working as",
    "start": "1717440",
    "end": "1723559"
  },
  {
    "text": "intended so basically they do not really adhere to the spec and does make users",
    "start": "1723559",
    "end": "1729279"
  },
  {
    "text": "um somehow um exploitable and if we look at all this",
    "start": "1729279",
    "end": "1734840"
  },
  {
    "text": "feature we we somehow see a trade-off between usability and security so it would be very secure to not fill the",
    "start": "1734840",
    "end": "1741240"
  },
  {
    "text": "passwords to have user interactions where the user has to click multiple times to AV attacks but I think a lot of",
    "start": "1741240",
    "end": "1749240"
  },
  {
    "text": "browsers are taking the usability route so it's very convenient that the password is in your password field and",
    "start": "1749240",
    "end": "1754399"
  },
  {
    "text": "you just can press uh the login button that you do not need to click and I think the the",
    "start": "1754399",
    "end": "1760159"
  },
  {
    "text": "autocomplete attribute is also very good example for that because if the web page",
    "start": "1760159",
    "end": "1765360"
  },
  {
    "text": "specifies autocomplete equals off and your browser does not store the password for you users will blame the browser for",
    "start": "1765360",
    "end": "1772279"
  },
  {
    "text": "that they will say well Chrome does not store the my credentials although I would like to store them so Chrome just",
    "start": "1772279",
    "end": "1778159"
  },
  {
    "text": "says we ignore the the wish of the web page to not store this uh credentials and with this I would like",
    "start": "1778159",
    "end": "1784559"
  },
  {
    "text": "to hand over to Ben again who will talk about the state of password fields on the web thank you um just one addition",
    "start": "1784559",
    "end": "1792480"
  },
  {
    "text": "to this guy um actually if both if all fields in a form are set to autocomplete",
    "start": "1792480",
    "end": "1799279"
  },
  {
    "start": "1794000",
    "end": "1794000"
  },
  {
    "text": "equals off then they don't store it but uh the notion that that I would have as",
    "start": "1799279",
    "end": "1805159"
  },
  {
    "text": "a programmer think about the following I have this form that was previously um yeah uh where the password has",
    "start": "1805159",
    "end": "1811120"
  },
  {
    "text": "previously stored the credentials and now I want the the credential is no longer to be stored for that field then",
    "start": "1811120",
    "end": "1816720"
  },
  {
    "text": "I would I I don't want the password to be stored right so I said auto complete to off for the password which means as",
    "start": "1816720",
    "end": "1822120"
  },
  {
    "text": "the spec says dear dear browser please don't save it in these cases if uh if",
    "start": "1822120",
    "end": "1828399"
  },
  {
    "text": "there's at least one field in this form that doesn't have autocomplete set to off then Chrome stor only if all fields",
    "start": "1828399",
    "end": "1834399"
  },
  {
    "text": "are set to autocomplete equals off um which programmers I think Google thinks that programmers go ahead and by",
    "start": "1834399",
    "end": "1840000"
  },
  {
    "text": "accident put autocomplete equals off uh to a form and in these cases they want to help the programmer um by by storing",
    "start": "1840000",
    "end": "1847000"
  },
  {
    "text": "the password um but yeah again I mean this this bu report that we opened was kind of shut down um with this very",
    "start": "1847000",
    "end": "1852519"
  },
  {
    "text": "interesting uh very interesting comment um not really commenting on the fact that they are violating the the",
    "start": "1852519",
    "end": "1858399"
  },
  {
    "text": "specification here all right um so enough Google bashing again I still wearing my my",
    "start": "1858399",
    "end": "1864679"
  },
  {
    "text": "Microsoft hat um slightly so uh another part of the",
    "start": "1864679",
    "end": "1869840"
  },
  {
    "text": "research we did was um to then look at what password Fields actually look uh look like on the on the web and um yeah",
    "start": "1869840",
    "end": "1877279"
  },
  {
    "start": "1877000",
    "end": "1877000"
  },
  {
    "text": "this is actually um was done so we could gain a better understanding of of how sites handle these handle forms so for",
    "start": "1877279",
    "end": "1884720"
  },
  {
    "text": "example how many sites are actually trying to actively opt out of of password managers storing um storing",
    "start": "1884720",
    "end": "1890799"
  },
  {
    "text": "their passwords even if they not necessarily do that um so looking at kind of fields that had I have auto",
    "start": "1890799",
    "end": "1896320"
  },
  {
    "text": "complete set to off um and also um for example look at the xram option Setter",
    "start": "1896320",
    "end": "1901639"
  },
  {
    "text": "which is now deprecated and um has been uh uh overcome by by a CSP directive um",
    "start": "1901639",
    "end": "1908440"
  },
  {
    "text": "actually the the X x-frame option Setter uh can be set by a website um to tell the browser this this site should not be",
    "start": "1908440",
    "end": "1915960"
  },
  {
    "text": "should ever not ever be framed sorry so um if we think about the following think about uh yeah a combination of or a a",
    "start": "1915960",
    "end": "1923639"
  },
  {
    "text": "modification of ie ie does not um fill the form if it's not the exact right URL",
    "start": "1923639",
    "end": "1930480"
  },
  {
    "text": "so if we think back about to to our example where we have our search field the search Fields URL does not match",
    "start": "1930480",
    "end": "1935840"
  },
  {
    "text": "these um the login for the login forms um URL so what an attacker could do is",
    "start": "1935840",
    "end": "1940960"
  },
  {
    "text": "he could use this cross scripting on the search field to inject an if frame um",
    "start": "1940960",
    "end": "1946799"
  },
  {
    "text": "and then try to yeah uh kind of uh yeah Force the force the browser to to um to",
    "start": "1946799",
    "end": "1953440"
  },
  {
    "text": "fill out the credentials there um and because they are both this the search field as well as the login form they're",
    "start": "1953440",
    "end": "1959480"
  },
  {
    "text": "in the same origin the outer side can access the if frame and can then access the passw so we also wanted to see how",
    "start": "1959480",
    "end": "1965480"
  },
  {
    "text": "many sites actually make sure that their login page cannot be framed so by by setting the the xame option",
    "start": "1965480",
    "end": "1971720"
  },
  {
    "text": "setup um to do that we implemented a very simple crawler which basically goes to yeah some some domains in this this",
    "start": "1971720",
    "end": "1977960"
  },
  {
    "text": "case the Alexa top 4K um it scans the entry page for a login field um but as I",
    "start": "1977960",
    "end": "1983760"
  },
  {
    "text": "guess most of you know not every web page necessarily has the the login form directly on the first page um so what we",
    "start": "1983760",
    "end": "1990559"
  },
  {
    "text": "did is kind of look for indicative keywords um like login sign in um um and",
    "start": "1990559",
    "end": "1996120"
  },
  {
    "text": "uh and such we actually didn't we only did that for for English um for English words so I'm not sure if we called all",
    "start": "1996120",
    "end": "2002559"
  },
  {
    "text": "the Chinese login forms that might have uh yeah a different um a different URL or German uh is basically the same and",
    "start": "2002559",
    "end": "2010600"
  },
  {
    "text": "finally final piece of the puzzle was uh that this extension actually wraps access to to Fields um so that if",
    "start": "2010600",
    "end": "2018840"
  },
  {
    "text": "JavaScript is actually trying to access this field because this is a very interesting thing as well um we can notice that as",
    "start": "2018840",
    "end": "2024679"
  },
  {
    "text": "well and these are the results of um yeah of this study so out of the 4,000",
    "start": "2024679",
    "end": "2030360"
  },
  {
    "start": "2026000",
    "end": "2026000"
  },
  {
    "text": "um websites we actually found password fields on 2,143 and this is basically the 100% um",
    "start": "2030360",
    "end": "2037039"
  },
  {
    "text": "yeah of this this relative column so this the third column um so it turns out that with even with this relatively",
    "start": "2037039",
    "end": "2043919"
  },
  {
    "text": "simple approach we were able to find password fields on half of of the Alexa top um 4K",
    "start": "2043919",
    "end": "2050440"
  },
  {
    "text": "sites um now for the scary part um so only 38% of those actually had the the",
    "start": "2050440",
    "end": "2057158"
  },
  {
    "text": "form on an htps page this is not not that bad yet because just delivering the form on an hgp page um is well not",
    "start": "2057159",
    "end": "2064560"
  },
  {
    "text": "really an issue because well then somebody can EOP maybe on the connection he will see okay there is a password field but he can't really do anything",
    "start": "2064560",
    "end": "2070240"
  },
  {
    "text": "with it um the thing that scares me uh scares me scares me way more is the fact",
    "start": "2070240",
    "end": "2075280"
  },
  {
    "text": "that 56 only 56% of the domains we found password fields on actually submit these passwords over htps so almost every",
    "start": "2075280",
    "end": "2082720"
  },
  {
    "text": "second page actually uses plain HTTP to uh yeah transmit your passwords um to it",
    "start": "2082720",
    "end": "2090040"
  },
  {
    "text": "and um if you think about what the buan said earlier um users typically tend to reuse passwords quite a lot so it would",
    "start": "2090040",
    "end": "2096320"
  },
  {
    "text": "be relatively straightforward and easy um to get yeah kind of passwords for a lot of sites uh just by yeah being in",
    "start": "2096320",
    "end": "2103040"
  },
  {
    "text": "the network and I actually have a uh yeah there's actually a similar attacker model which I will talk about um in a",
    "start": "2103040",
    "end": "2108880"
  },
  {
    "text": "minute then only 13.6% of all these websites actually had the autoc compete set to off uh I think most of them only",
    "start": "2108880",
    "end": "2115960"
  },
  {
    "text": "had it set to off on the password field so again Chrome just ignores this um still stores it uh nevertheless and uh",
    "start": "2115960",
    "end": "2123359"
  },
  {
    "text": "yeah the final number here 325 domains somewhat somehow used JavaScript to",
    "start": "2123359",
    "end": "2128400"
  },
  {
    "text": "access this field um I will talk to about this a little later in the talk um",
    "start": "2128400",
    "end": "2133720"
  },
  {
    "text": "but we see that this this either means that um for example most of the sites actually just wanted to check that the",
    "start": "2133720",
    "end": "2140000"
  },
  {
    "text": "field was not empty this was also JavaScript access which we could detect because we had this this wrapper around",
    "start": "2140000",
    "end": "2146320"
  },
  {
    "text": "it um so a similar attacker model to uh yeah what we did and also research that",
    "start": "2146320",
    "end": "2152240"
  },
  {
    "text": "was basically going on more or less in parallel to our research um was man INE middle attacks so for for usnic security",
    "start": "2152240",
    "end": "2159720"
  },
  {
    "start": "2158000",
    "end": "2158000"
  },
  {
    "text": "this year um just two two and a half months ago I think um yeah David silver at all actually conducted um kind of a",
    "start": "2159720",
    "end": "2167359"
  },
  {
    "text": "study similar to ours but with a different Atta model in mind so they went ahead and said okay we will go to a",
    "start": "2167359",
    "end": "2173079"
  },
  {
    "text": "public uh or to a cafe somewhere and offer a free Wi-Fi service and everybody loves free Wi-Fi and typically users say",
    "start": "2173079",
    "end": "2179920"
  },
  {
    "text": "hey free Wi-Fi cool I'll just click on that and uh be happy with it what they actually did is into every HTTP",
    "start": "2179920",
    "end": "2186240"
  },
  {
    "text": "connection they could find so for example I I think Google is a bad example but uh any HTP connection so not",
    "start": "2186240",
    "end": "2191880"
  },
  {
    "text": "not encrypted um connection they actually went ahead intercepted the the response injected if frames into the",
    "start": "2191880",
    "end": "2199560"
  },
  {
    "text": "site uh for example to whatever Google Facebook uh and so on and so forth um",
    "start": "2199560",
    "end": "2205319"
  },
  {
    "text": "and similar to the attack we described the password managers so to to the login form sorry the password managers would",
    "start": "2205319",
    "end": "2210599"
  },
  {
    "text": "then in these cases um fill out the the forms and since we have a man in the middle attack we can kind of put",
    "start": "2210599",
    "end": "2216720"
  },
  {
    "text": "arbitrary uh payload in this this response from Facebook or Google um so they also kind of put some JavaScript in",
    "start": "2216720",
    "end": "2223560"
  },
  {
    "text": "there that weighted similar to our attacks waited for the password manager to be as kind as to fill out the forms",
    "start": "2223560",
    "end": "2229440"
  },
  {
    "text": "and then leak it back um to the attacker and yeah they did that um I think they",
    "start": "2229440",
    "end": "2234760"
  },
  {
    "text": "had like 10 10 if frames or something uh in parallel each time a user would visit a different HTTP page they would just",
    "start": "2234760",
    "end": "2240800"
  },
  {
    "text": "inject the next 10 domains into it um and according to them it's very very quick to automate um yeah to kind of",
    "start": "2240800",
    "end": "2246200"
  },
  {
    "text": "sweep or they call it a sweep sweep attack we just sweep over the top uh top 1,000 domains for example and try to",
    "start": "2246200",
    "end": "2253079"
  },
  {
    "text": "steal as many passwords as possible um but this is",
    "start": "2253079",
    "end": "2258839"
  },
  {
    "text": "no pardon well that's it's it's not our work um as far as I know they didn't try",
    "start": "2258839",
    "end": "2265520"
  },
  {
    "text": "to kind of uh try to forge SSL certificates um I know of a similar study where um",
    "start": "2265520",
    "end": "2273559"
  },
  {
    "text": "y well um if you think about the following um if you don't think about an https connection but HTTP basically if I",
    "start": "2274200",
    "end": "2281880"
  },
  {
    "text": "do a request to HT to to facebook.com with say HTTP um and we have a man in",
    "start": "2281880",
    "end": "2286960"
  },
  {
    "text": "the middle attacker um he can modify any headers he wants to he can inject anything he can just inject it directly",
    "start": "2286960",
    "end": "2292319"
  },
  {
    "text": "into the to the page so CSP doesn't doesn't help in these cases um and there was also a similar study where um I",
    "start": "2292319",
    "end": "2299240"
  },
  {
    "text": "think a group from from another German University when they had an also opened one of these these public Wi-Fi um and",
    "start": "2299240",
    "end": "2305160"
  },
  {
    "text": "they said dear user the only prerequisite um you have to or there's one thing you have to do so you can use our Wi-Fi",
    "start": "2305160",
    "end": "2311599"
  },
  {
    "text": "please install this certificate which was actually a root certificate um basically allowing them to sign",
    "start": "2311599",
    "end": "2316680"
  },
  {
    "text": "arbitrary certificates and still I think like 90% of the users said yes that's I I want free Wi-Fi uh give me free Wi-Fi",
    "start": "2316680",
    "end": "2323480"
  },
  {
    "text": "I will install anything um you want from me because I mean also it's not an executable or something right it's just a certificate what what do I know what a",
    "start": "2323480",
    "end": "2329400"
  },
  {
    "text": "certificate can do um but yeah so I I know I think um all right so we have",
    "start": "2329400",
    "end": "2336839"
  },
  {
    "start": "2336000",
    "end": "2336000"
  },
  {
    "text": "these two different types of of attacks so we have this this cross scripting attacker and one disadvantage that the",
    "start": "2336839",
    "end": "2342839"
  },
  {
    "text": "cross scripting attacker has is obviously he needs cross scripting vulnerability on that on that Target",
    "start": "2342839",
    "end": "2348200"
  },
  {
    "text": "side however as we've seen this is not uh yeah that that hard of a task actually um because yeah most of the",
    "start": "2348200",
    "end": "2354720"
  },
  {
    "text": "websites are still somewhat somewhat insecure um in contrast one downside of",
    "start": "2354720",
    "end": "2360079"
  },
  {
    "text": "this network attacker is as you clearly pointed out um it does not work with htps at least not the way they presented",
    "start": "2360079",
    "end": "2365319"
  },
  {
    "text": "their work um whereas again the cross scripting inte if we have an xss on an",
    "start": "2365319",
    "end": "2370640"
  },
  {
    "text": "htps page we can just as well steal the passwords from there um but and this is",
    "start": "2370640",
    "end": "2375800"
  },
  {
    "text": "one case where the network Atta is uh yeah way more uh yeah sophisticated and powerful than we are he can just e drop",
    "start": "2375800",
    "end": "2382800"
  },
  {
    "text": "on the credentials that are being posted to the website so again half of all the password fields are actually submitted",
    "start": "2382800",
    "end": "2389800"
  },
  {
    "text": "via HTTP instead of https for some reason I don't want to understand I think um so summarizing this actually",
    "start": "2389800",
    "end": "2398040"
  },
  {
    "text": "attacks against password managers can relative can be easily automated um so",
    "start": "2398040",
    "end": "2403240"
  },
  {
    "text": "bottom line of this is the default password managers and let's let's yeah not talk about ie here um not again uh",
    "start": "2403240",
    "end": "2410680"
  },
  {
    "start": "2404000",
    "end": "2404000"
  },
  {
    "text": "defa password managers in browsers are not really secure this might be a different story for for these these",
    "start": "2410680",
    "end": "2416839"
  },
  {
    "text": "plugins like last pass and and one password but we have to think about uh although I guess most of you here will",
    "start": "2416839",
    "end": "2423480"
  },
  {
    "text": "not necessarily use the buildin password managers because well your your security Weare uh people on the internet Rel",
    "start": "2423480",
    "end": "2429760"
  },
  {
    "text": "typically are not that security Weare to put it mildly so typically say hey this is there's a feature in my browser that",
    "start": "2429760",
    "end": "2435040"
  },
  {
    "text": "allows me to not remember my passwords awesome I'll just use that uh why should I buy something or install something that I don't have the technical",
    "start": "2435040",
    "end": "2441280"
  },
  {
    "text": "knowledge to actually um to actually use and in our work we found that yeah we",
    "start": "2441280",
    "end": "2447200"
  },
  {
    "text": "have issues related to all kinds of of things so we have this autofilling issue where basically all browsers actually",
    "start": "2447200",
    "end": "2452960"
  },
  {
    "text": "say hey there's a password field or a form field I'll just I'll just put in my passwords here um some of them ignore",
    "start": "2452960",
    "end": "2458560"
  },
  {
    "text": "autocomplete U at least partially um there is no verification that it's actually still the login form so we can",
    "start": "2458560",
    "end": "2463800"
  },
  {
    "text": "use Fu and bar as as names instead of whatever username and password so it's also for us as an attacker very easy to",
    "start": "2463800",
    "end": "2469599"
  },
  {
    "text": "kind of inject this arbitrary form or this very generic form into any website we want to we want to steal uh",
    "start": "2469599",
    "end": "2475359"
  },
  {
    "text": "credentials from so the question is uh and this is uh now the end of the the",
    "start": "2475359",
    "end": "2480560"
  },
  {
    "text": "attack part basically can we come up with something that might be a better solution that can still be deployed in",
    "start": "2480560",
    "end": "2486720"
  },
  {
    "text": "kind of Comm browsers um where we don't have to rip out yeah basically the whole password manager um as well as don't have to",
    "start": "2486720",
    "end": "2493960"
  },
  {
    "text": "force the yeah the the the users the untrained users to learn how to interact with the password manager that they have",
    "start": "2493960",
    "end": "2499400"
  },
  {
    "text": "to click and so on and so forth okay so what we've seen in our",
    "start": "2499400",
    "end": "2505440"
  },
  {
    "start": "2504000",
    "end": "2504000"
  },
  {
    "text": "research is the the idea of what a password manager should do is it should Aid the user in authentication so it",
    "start": "2505440",
    "end": "2512480"
  },
  {
    "text": "should store uh securely store the passwords and if they are needed by the web application he should then kind of",
    "start": "2512480",
    "end": "2519520"
  },
  {
    "text": "provide them to the web application so the user can authenticate um and our notion of authentication is the",
    "start": "2519520",
    "end": "2525680"
  },
  {
    "text": "credentials are being sent to the server this is actually when you authenticate against the server however as we have",
    "start": "2525680",
    "end": "2531480"
  },
  {
    "text": "seen um there is somewhat of a mismatch in this notion and the implementation of it so the credentials are at some point",
    "start": "2531480",
    "end": "2537960"
  },
  {
    "text": "sent to the server but most importantly before that actually happens they are inserted into forms and therefore",
    "start": "2537960",
    "end": "2543440"
  },
  {
    "text": "inserted into the document object model and accessible by by Javas script or AC cross that scripting pay or AC cross",
    "start": "2543440",
    "end": "2549480"
  },
  {
    "text": "that scripting payload and we just propose well let's try to align this implementation how",
    "start": "2549480",
    "end": "2556000"
  },
  {
    "text": "it's done in in browsers with this notion um of yeah credentials are being sent to the server all right so um on",
    "start": "2556000",
    "end": "2563960"
  },
  {
    "start": "2562000",
    "end": "2562000"
  },
  {
    "text": "the upper part of this uh of this slide you actually see the the way password managers work right now so initially we",
    "start": "2563960",
    "end": "2569359"
  },
  {
    "text": "find a login form then the password manager comes along scans the page finds hey there's a login form so I'll just go",
    "start": "2569359",
    "end": "2575079"
  },
  {
    "text": "ahead and insert my the the username the password that I stored for this site and when the user then clicks on sign in",
    "start": "2575079",
    "end": "2582200"
  },
  {
    "text": "this password is actually sent to the server right so this is this is obviously what what we talked about all",
    "start": "2582200",
    "end": "2587400"
  },
  {
    "text": "this this talk um we now propose the following instead of the password manager directly inserting username and",
    "start": "2587400",
    "end": "2594079"
  },
  {
    "text": "and password let's just go ahead and insert the username and insert some pseudo random nons into this field with",
    "start": "2594079",
    "end": "2601319"
  },
  {
    "text": "this nons the attacker can do absolutely nothing this is just so that the password manager has a a way of kind of",
    "start": "2601319",
    "end": "2608079"
  },
  {
    "text": "figuring out okay nons X belongs to password Y and what actually happens is if we now click on submit since we are",
    "start": "2608079",
    "end": "2615480"
  },
  {
    "text": "in the browser we see this outgoing request with the username and the nons the nons can be of any format so that we",
    "start": "2615480",
    "end": "2621319"
  },
  {
    "text": "can actually easily detect it in the in the outgoing request um and that it can also not be there by accident so just",
    "start": "2621319",
    "end": "2626839"
  },
  {
    "text": "use something very long what the password manager then does is it just goes ahead say hey there's a username",
    "start": "2626839",
    "end": "2632160"
  },
  {
    "text": "there's passw there's a nons so let's exchange the nons with with the password",
    "start": "2632160",
    "end": "2637359"
  },
  {
    "start": "2637000",
    "end": "2637000"
  },
  {
    "text": "there are some Contra constraints to this approach so uh potential pitfalls for for this would be what if an",
    "start": "2637359",
    "end": "2644200"
  },
  {
    "text": "attacker goes ahead again he he says cross scripting capabilities he changes the forms Target so instead of posting",
    "start": "2644200",
    "end": "2650839"
  },
  {
    "text": "it to login.com login PHP he actually posts it to attacker.com or evil.com uh",
    "start": "2650839",
    "end": "2657640"
  },
  {
    "text": "yeah dump PHP um another way of of going about this would be for example to uh",
    "start": "2657640",
    "end": "2664400"
  },
  {
    "text": "yeah post it to search PHP we've seen that before um and think about the following we're still in this this",
    "start": "2664400",
    "end": "2669680"
  },
  {
    "text": "scenario where um the attacker has xss on on some site he has this iframe um",
    "start": "2669680",
    "end": "2675640"
  },
  {
    "text": "that points to the login page he just modifies the um the target of the login",
    "start": "2675640",
    "end": "2681280"
  },
  {
    "text": "page hits sent after the the the password manager has inserted the credentials and now this search PHP",
    "start": "2681280",
    "end": "2688440"
  },
  {
    "text": "reflects back what it was given right um what he can now do because he still kind of has control over this parent frame",
    "start": "2688440",
    "end": "2695000"
  },
  {
    "text": "which is allowed access because they're on the same origin to this to this if frame he can then kind of read the",
    "start": "2695000",
    "end": "2700079"
  },
  {
    "text": "content of the search page um which has reflected back the password and could have then stolen the password um and",
    "start": "2700079",
    "end": "2705760"
  },
  {
    "text": "attacker could also go ahead and just change the the method um that is used to post or to send the form sorry uh from",
    "start": "2705760",
    "end": "2711480"
  },
  {
    "text": "post to get get means that all the the parameters all the the fields in the password in the form sorry uh are kind",
    "start": "2711480",
    "end": "2718359"
  },
  {
    "text": "of appended as get parameters so again he posts the form and then just reads",
    "start": "2718359",
    "end": "2723800"
  },
  {
    "text": "the uh the URL of the of the page that was that this has now been uh redirected",
    "start": "2723800",
    "end": "2729480"
  },
  {
    "text": "to and then he has kind of a username get parameter and a password get parameter and can therefore extract it",
    "start": "2729480",
    "end": "2735680"
  },
  {
    "text": "so we therefore propos the the following constraints there should be a very strict checking of the form Target URL",
    "start": "2735680",
    "end": "2742040"
  },
  {
    "text": "um so that the attacka cannot cannot change this this at all and also we propose only to exchange these nonsense",
    "start": "2742040",
    "end": "2749119"
  },
  {
    "text": "uh in post parameters and never in get parameters um we implemented a proof of",
    "start": "2749119",
    "end": "2754520"
  },
  {
    "start": "2752000",
    "end": "2752000"
  },
  {
    "text": "concept implementation for uh for Firefox this is due to the fact that Firefox uh has a very nice API that",
    "start": "2754520",
    "end": "2760160"
  },
  {
    "text": "allows you to interact with the password manager so you can exchange stuff you can delete stuff um just from an extension so we still have this this",
    "start": "2760160",
    "end": "2767720"
  },
  {
    "text": "default uh yeah kind of question that is that you're being asked uh do you want",
    "start": "2767720",
    "end": "2773160"
  },
  {
    "text": "to do you want me to remember the password this is the first stage um if you hit yes remember the password this",
    "start": "2773160",
    "end": "2778520"
  },
  {
    "text": "actually goes to the password manager um and in the password me we have a callback that say that kind of then is",
    "start": "2778520",
    "end": "2784960"
  },
  {
    "text": "called when a new password is entered and this uh then calls our extension that we wrote uh with this information",
    "start": "2784960",
    "end": "2791040"
  },
  {
    "text": "so for which host was it stored for which user was it stored actually also for R um and what was the password and",
    "start": "2791040",
    "end": "2796480"
  },
  {
    "text": "what we do then is basically we store this secret password in our database we generate a random nons and exchange um",
    "start": "2796480",
    "end": "2804599"
  },
  {
    "text": "exchange the the credentials that were initially being stored in the password managers with our nons and the username",
    "start": "2804599",
    "end": "2810119"
  },
  {
    "text": "so therefore the pass we still use the the default password manager but rather than storing passwords it now just stores these these nonces that we can",
    "start": "2810119",
    "end": "2816680"
  },
  {
    "text": "that we can access later on um this is little tricky to read sorry for that um so yeah this is uh an",
    "start": "2816680",
    "end": "2825079"
  },
  {
    "text": "example of how it then uh goes along once we um once we post a login form so",
    "start": "2825079",
    "end": "2830800"
  },
  {
    "text": "on the upper part I'm sorry it's very small um we have a post to login PHP and this this nons um is there in the in the",
    "start": "2830800",
    "end": "2837319"
  },
  {
    "text": "data so in the post data um our extension verifies that login PHP is actually the page that this password was",
    "start": "2837319",
    "end": "2844040"
  },
  {
    "text": "this password was originally posted to so it says okay I will exchange that whereas on the lower part we actually",
    "start": "2844040",
    "end": "2849440"
  },
  {
    "text": "see a post to search PHP which might reflect back this password in this case our extension checks hey login PHP is",
    "start": "2849440",
    "end": "2855400"
  },
  {
    "text": "not search PHP so I will not um I will not insert the password Here We then did",
    "start": "2855400",
    "end": "2860880"
  },
  {
    "start": "2860000",
    "end": "2860000"
  },
  {
    "text": "a functional evaluation and this uh this is where I come back to the 325 domains we had seen earlier um that somehow used",
    "start": "2860880",
    "end": "2867720"
  },
  {
    "text": "uh yeah uh JavaScript to access the uh to access the password Fields so almost",
    "start": "2867720",
    "end": "2873079"
  },
  {
    "text": "230 of these domains actually yeah just went ahead and checked whether there was some password there or not and if you",
    "start": "2873079",
    "end": "2878680"
  },
  {
    "text": "clicked kind of submit or login without the password being there this is an alert box saying hey you don't have don't uh try to send this this form if",
    "start": "2878680",
    "end": "2885640"
  },
  {
    "text": "you don't have a password um 96 domains actually send the the password via XML",
    "start": "2885640",
    "end": "2890920"
  },
  {
    "text": "lgtb requests rather than posting this form um and out of those actually 23",
    "start": "2890920",
    "end": "2896000"
  },
  {
    "text": "domains hash the password before sending it out and if you think about uh the fact that we inserted rather than",
    "start": "2896000",
    "end": "2901160"
  },
  {
    "text": "inserting a password we inserted this nons if you hash the nons we have no way of seeing it on the in the outgoing",
    "start": "2901160",
    "end": "2906480"
  },
  {
    "text": "request because we actually don't know what kind of hash function is being used um so in these cases our implementation",
    "start": "2906480",
    "end": "2912480"
  },
  {
    "text": "breaks because the password manager inserts the nons the nons is hashed and it doesn't match the password that is",
    "start": "2912480",
    "end": "2917599"
  },
  {
    "text": "stored on the server side um one domain for some reason uh went way way out of",
    "start": "2917599",
    "end": "2923119"
  },
  {
    "text": "its way to be super secure and used a Bas 6 C4 um encoding um or encryption I",
    "start": "2923119",
    "end": "2928800"
  },
  {
    "text": "think they called it um uh again this is causes issues if you",
    "start": "2928800",
    "end": "2933920"
  },
  {
    "text": "because you yeah you B 64 encrypt uh the nons um and six domains out of those actually",
    "start": "2933920",
    "end": "2939240"
  },
  {
    "text": "send passwords in get parameters um so in total 30 of these domains that we looked at would break with our approach",
    "start": "2939240",
    "end": "2945839"
  },
  {
    "text": "uh which means that 98.6% of all the domains we analyze would work perfectly fine with what we propose and also more",
    "start": "2945839",
    "end": "2952000"
  },
  {
    "text": "importantly actually storing passwords for for these X XML HTTP requests is currently not supported by browsers",
    "start": "2952000",
    "end": "2958640"
  },
  {
    "text": "because browsers wait for a kind of a form to be submitted to so basically a post or get request uh that is in",
    "start": "2958640",
    "end": "2965040"
  },
  {
    "text": "initiated by this this form submit and xhr is not a it's not a form submit okay then uh concluding what",
    "start": "2965040",
    "end": "2973440"
  },
  {
    "text": "should you take away from this talk um so the current generation of browser based pathw venters is quite vulnerable",
    "start": "2973440",
    "end": "2978720"
  },
  {
    "start": "2974000",
    "end": "2974000"
  },
  {
    "text": "and even if uh most of you and now I can say this because I'm yeah uh slowly we taking off my my Microsoft head um I'm",
    "start": "2978720",
    "end": "2985880"
  },
  {
    "text": "not a big fan of IE um for several reasons um but although most people kind",
    "start": "2985880",
    "end": "2991440"
  },
  {
    "text": "of hate it and say hey this is a this is a really bad browser in this instance it's actually very very secure um then a",
    "start": "2991440",
    "end": "2998240"
  },
  {
    "text": "very shocking uh thing that we found is that almost half of the passwords are actually posted via HTTP um which is",
    "start": "2998240",
    "end": "3005040"
  },
  {
    "text": "yeah uh it's makes the job for an attacker for Network attacker quite easy because you can just go ahead and um",
    "start": "3005040",
    "end": "3010400"
  },
  {
    "text": "yeah read those from the from the outgo request and at least against a cross scripting attacker we can we can do",
    "start": "3010400",
    "end": "3015599"
  },
  {
    "text": "something so we can actually patch relatively easily patch uh existing u in",
    "start": "3015599",
    "end": "3021440"
  },
  {
    "text": "browser Solutions um to allow for these uh yeah to allow for for defending against these these kinds of attacks um",
    "start": "3021440",
    "end": "3028520"
  },
  {
    "text": "it's harder against nwork attacker what we can do is for example enforce that passwords should always be uh yeah sent",
    "start": "3028520",
    "end": "3034799"
  },
  {
    "text": "via https rather than HTTP but then again we would uh in theory break half of the half of the websites okay and",
    "start": "3034799",
    "end": "3041359"
  },
  {
    "text": "with that I'd like to thank you very much for your attention you want to take a picture um and we're happy to take any",
    "start": "3041359",
    "end": "3047160"
  },
  {
    "text": "questions you might have [Applause]",
    "start": "3047160",
    "end": "3057400"
  },
  {
    "text": "need to put the P cat picture back on I think we we will put the slides on our domain which is",
    "start": "3057400",
    "end": "3064200"
  },
  {
    "text": "here so the advertisement comes at the end there's a",
    "start": "3064200",
    "end": "3072318"
  },
  {
    "text": "question um actually there is so this initial um research we conducted was I",
    "start": "3076400",
    "end": "3081799"
  },
  {
    "text": "think we did it kind of end of end of last year um and wait let me quickly go",
    "start": "3081799",
    "end": "3087000"
  },
  {
    "text": "back to that slide",
    "start": "3087000",
    "end": "3092079"
  },
  {
    "text": "uh ah this is screwed up uh this one",
    "start": "3092079",
    "end": "3097599"
  },
  {
    "text": "okay um yeah so as an example uh this uh I think the initially was Safari 7. 7.0",
    "start": "3097599",
    "end": "3105319"
  },
  {
    "text": "which um didn't have user interaction now 7.1 has user interaction for for Chrome we did the initial uh tests kind",
    "start": "3105319",
    "end": "3113280"
  },
  {
    "text": "of with chrome 31 I think now we're up to 3 seven I believe um so there are",
    "start": "3113280",
    "end": "3119240"
  },
  {
    "text": "while the browsers change um they actually become somewhat more secure I can't really say it for for Opera right",
    "start": "3119240",
    "end": "3124720"
  },
  {
    "text": "now I don't know that off the top of my head but IE was always 11 I I believe",
    "start": "3124720",
    "end": "3130960"
  },
  {
    "text": "so okay",
    "start": "3132319",
    "end": "3136960"
  },
  {
    "text": "yeah I'm wondering whether you want to have some about security of",
    "start": "3139720",
    "end": "3144880"
  },
  {
    "text": "theist Okay so differ okay so so your question is",
    "start": "3144880",
    "end": "3150400"
  },
  {
    "text": "basically uh while we looked at how how they behave uh we didn't really so we",
    "start": "3150400",
    "end": "3156680"
  },
  {
    "text": "didn't really analyze how they how securely they store the passwords because there has been a lot of research going on before um into this um I",
    "start": "3156680",
    "end": "3164920"
  },
  {
    "text": "couldn't really say I think I know something about uh Firefox um but I mean by default none of",
    "start": "3164920",
    "end": "3170520"
  },
  {
    "text": "them actually have have passwords that secure their keychain so you have to ex actually know what you're doing to add",
    "start": "3170520",
    "end": "3176720"
  },
  {
    "text": "uh kind of a password protection to your to your keychain or or your password manager uh password manager database so",
    "start": "3176720",
    "end": "3182400"
  },
  {
    "text": "there's nothing in there I think it's Al also depends on the operating system for example in in Mac OS um most of the",
    "start": "3182400",
    "end": "3188839"
  },
  {
    "text": "webkit browsers use the keychain of of Mac OS so they store the password securely in there and but the another",
    "start": "3188839",
    "end": "3194760"
  },
  {
    "text": "operating system it's it's different password manager should be",
    "start": "3194760",
    "end": "3201440"
  },
  {
    "text": "like a proxy because inor I could with",
    "start": "3201440",
    "end": "3207040"
  },
  {
    "text": "JavaScript I could like catch the cat post request and say look just before",
    "start": "3207040",
    "end": "3213680"
  },
  {
    "text": "the you actually do the request okay so so so what you're saying",
    "start": "3213680",
    "end": "3219319"
  },
  {
    "text": "is the uh we propose to use this kind of as a proxy where we store this nons but",
    "start": "3219319",
    "end": "3224440"
  },
  {
    "text": "JavaScript could in theory access the outgo request but actually this kind of",
    "start": "3224440",
    "end": "3229640"
  },
  {
    "text": "mangling with the outgoing request is done inside the browser after the form is submitted where JavaScript has no way",
    "start": "3229640",
    "end": "3235680"
  },
  {
    "text": "of accessing the page P anymore so it's the request is already outgoing and JavaScript sees okay might notice there",
    "start": "3235680",
    "end": "3242040"
  },
  {
    "text": "is a request going out um but actually there's no way of kind of accessing uh",
    "start": "3242040",
    "end": "3247359"
  },
  {
    "text": "this mangled request that we that we did so it's it's secure by",
    "start": "3247359",
    "end": "3253680"
  },
  {
    "text": "this so it's it's currently not possible to to access the request on the way to the server for JavaScript so there's",
    "start": "3253680",
    "end": "3259960"
  },
  {
    "text": "something called service workers where you can install JavaScript to to request but I think this is happening before so",
    "start": "3259960",
    "end": "3266680"
  },
  {
    "text": "so we are sitting in the browser much you know on a much deeper level than than javascri SE one of those moment",
    "start": "3266680",
    "end": "3273599"
  },
  {
    "text": "where I'm a bit confused because um well personally because I really",
    "start": "3273599",
    "end": "3280880"
  },
  {
    "text": "don't know too much about JavaScript anymore JavaScript",
    "start": "3280880",
    "end": "3286079"
  },
  {
    "text": "um it used to be possible to like manipulate the request",
    "start": "3286079",
    "end": "3293079"
  },
  {
    "text": "almost to the full extent but only ex tension yeah so not not in JavaScript",
    "start": "3293079",
    "end": "3298720"
  },
  {
    "text": "running in a web page actually extensions are basically JavaScript but they are kind of running",
    "start": "3298720",
    "end": "3305559"
  },
  {
    "text": "as an extension in the in the browser backend rather than something you can access from the from the website so there's no accesss towards extensions",
    "start": "3305559",
    "end": "3312119"
  },
  {
    "text": "well there is sometimes but um you need a crappy extension to begin with okay",
    "start": "3312119",
    "end": "3321079"
  }
]