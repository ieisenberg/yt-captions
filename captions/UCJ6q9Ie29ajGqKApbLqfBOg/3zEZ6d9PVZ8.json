[
  {
    "start": "0",
    "end": "30000"
  },
  {
    "text": "welcome everyone my name is Michael",
    "start": "6440",
    "end": "8400"
  },
  {
    "text": "stankin in this session we'll dive into",
    "start": "8400",
    "end": "11200"
  },
  {
    "text": "mutual TLS and authentication based on",
    "start": "11200",
    "end": "15279"
  },
  {
    "text": "certificates I'll explain some",
    "start": "15279",
    "end": "17160"
  },
  {
    "text": "interesting attacks on muttil TS as well",
    "start": "17160",
    "end": "20160"
  },
  {
    "text": "as demonstrate vulnerabilities in",
    "start": "20160",
    "end": "22160"
  },
  {
    "text": "popular open source software my purpose",
    "start": "22160",
    "end": "25160"
  },
  {
    "text": "is to give you some fresh ideas on how",
    "start": "25160",
    "end": "27760"
  },
  {
    "text": "to attack and secure this technology",
    "start": "27760",
    "end": "30840"
  },
  {
    "start": "30000",
    "end": "386000"
  },
  {
    "text": "so what is mutal TLS in short it's",
    "start": "30840",
    "end": "34800"
  },
  {
    "text": "another form of client authentication",
    "start": "34800",
    "end": "37520"
  },
  {
    "text": "most of you probably know that the",
    "start": "37520",
    "end": "39280"
  },
  {
    "text": "browser checks the server certificate",
    "start": "39280",
    "end": "41879"
  },
  {
    "text": "before sending any data to a website the",
    "start": "41879",
    "end": "44879"
  },
  {
    "text": "same idea can be applied to authenticate",
    "start": "44879",
    "end": "47440"
  },
  {
    "text": "browsers or TLS clients in general for",
    "start": "47440",
    "end": "51120"
  },
  {
    "text": "example a server can ask a browser to",
    "start": "51120",
    "end": "54440"
  },
  {
    "text": "provide a valid certificate it can Al",
    "start": "54440",
    "end": "58280"
  },
  {
    "text": "either be used as an alternative to",
    "start": "58280",
    "end": "60879"
  },
  {
    "text": "Classic password authentication or an",
    "start": "60879",
    "end": "63680"
  },
  {
    "text": "additional",
    "start": "63680",
    "end": "65680"
  },
  {
    "text": "Factor this process is defined in the",
    "start": "65680",
    "end": "68479"
  },
  {
    "text": "TLs RFC and based on asymmetric",
    "start": "68479",
    "end": "72320"
  },
  {
    "text": "cryptography during the handshake the",
    "start": "72320",
    "end": "74720"
  },
  {
    "text": "server can send a Certificate request",
    "start": "74720",
    "end": "78040"
  },
  {
    "text": "message the client replies with a",
    "start": "78040",
    "end": "80479"
  },
  {
    "text": "certificate message with a public key",
    "start": "80479",
    "end": "83280"
  },
  {
    "text": "this is followed by certificate verify",
    "start": "83280",
    "end": "86079"
  },
  {
    "text": "message encrypted by private key it",
    "start": "86079",
    "end": "89240"
  },
  {
    "text": "sounds complic at but so that even if",
    "start": "89240",
    "end": "92280"
  },
  {
    "text": "the message is",
    "start": "92280",
    "end": "94200"
  },
  {
    "text": "intercepted uh a person in the middle",
    "start": "94200",
    "end": "96920"
  },
  {
    "text": "would not see any secrets in the plain",
    "start": "96920",
    "end": "99320"
  },
  {
    "text": "text as you may ask how does the server",
    "start": "99320",
    "end": "102640"
  },
  {
    "text": "check that the client is authorized to",
    "start": "102640",
    "end": "105360"
  },
  {
    "text": "establish this connection it does it by",
    "start": "105360",
    "end": "107960"
  },
  {
    "text": "requiring a client to present a public",
    "start": "107960",
    "end": "110280"
  },
  {
    "text": "key in a form of a signed",
    "start": "110280",
    "end": "114240"
  },
  {
    "text": "certificate so what exactly a",
    "start": "117360",
    "end": "121399"
  },
  {
    "text": "certificate generally speaking it's a",
    "start": "121399",
    "end": "124119"
  },
  {
    "text": "blob of binary encoded data the most",
    "start": "124119",
    "end": "127240"
  },
  {
    "text": "important fields are the subject the",
    "start": "127240",
    "end": "129759"
  },
  {
    "text": "issuer and the public key subject",
    "start": "129759",
    "end": "133080"
  },
  {
    "text": "usually defines a username or host name",
    "start": "133080",
    "end": "136319"
  },
  {
    "text": "similar to Jason web tokens the",
    "start": "136319",
    "end": "138560"
  },
  {
    "text": "certificate is signed by the issuers",
    "start": "138560",
    "end": "141040"
  },
  {
    "text": "private key so the data inside cannot be",
    "start": "141040",
    "end": "144319"
  },
  {
    "text": "tempor the issuer field points to",
    "start": "144319",
    "end": "146879"
  },
  {
    "text": "another certificate who signed this",
    "start": "146879",
    "end": "149319"
  },
  {
    "text": "certificate",
    "start": "149319",
    "end": "151760"
  },
  {
    "text": "a sequence of certificates assigned each",
    "start": "152200",
    "end": "154720"
  },
  {
    "text": "other to The Trusted route forms a",
    "start": "154720",
    "end": "157440"
  },
  {
    "text": "certificate chain in order to check the",
    "start": "157440",
    "end": "160440"
  },
  {
    "text": "validity of the certificate the server",
    "start": "160440",
    "end": "162800"
  },
  {
    "text": "should build a trusted chain from the",
    "start": "162800",
    "end": "164720"
  },
  {
    "text": "client certificate to a trusted Ro",
    "start": "164720",
    "end": "167440"
  },
  {
    "text": "certificate the client and intermediate",
    "start": "167440",
    "end": "170080"
  },
  {
    "text": "certificates are normally sent by the",
    "start": "170080",
    "end": "171920"
  },
  {
    "text": "clients whereas the server only needs to",
    "start": "171920",
    "end": "175120"
  },
  {
    "text": "know about trusted Road",
    "start": "175120",
    "end": "178760"
  },
  {
    "text": "certificates so let's see how to use",
    "start": "178760",
    "end": "181480"
  },
  {
    "text": "mtls in a Java web application in the",
    "start": "181480",
    "end": "184680"
  },
  {
    "text": "bare minimum the developers only need to",
    "start": "184680",
    "end": "187319"
  },
  {
    "text": "enable it in the application settings",
    "start": "187319",
    "end": "190280"
  },
  {
    "text": "and specify the location of all TR",
    "start": "190280",
    "end": "193319"
  },
  {
    "text": "trusted Dro",
    "start": "193319",
    "end": "194720"
  },
  {
    "text": "certificates from the client such as",
    "start": "194720",
    "end": "196879"
  },
  {
    "text": "curl you need to specify what",
    "start": "196879",
    "end": "199080"
  },
  {
    "text": "certificate is sent to the",
    "start": "199080",
    "end": "201120"
  },
  {
    "text": "server the rest of application code such",
    "start": "201120",
    "end": "204159"
  },
  {
    "text": "as request mapping is exactly the same",
    "start": "204159",
    "end": "207680"
  },
  {
    "text": "as for normal web applications",
    "start": "207680",
    "end": "211680"
  },
  {
    "text": "as you can see this approach brings some",
    "start": "211879",
    "end": "214080"
  },
  {
    "text": "advantages and disadvantages compared to",
    "start": "214080",
    "end": "216560"
  },
  {
    "text": "traditional authentication methods such",
    "start": "216560",
    "end": "219000"
  },
  {
    "text": "as",
    "start": "219000",
    "end": "221239"
  },
  {
    "text": "passwords so first of all it might be",
    "start": "228920",
    "end": "231519"
  },
  {
    "text": "faster for your application as the",
    "start": "231519",
    "end": "233439"
  },
  {
    "text": "authentication check only happens on the",
    "start": "233439",
    "end": "235840"
  },
  {
    "text": "handshake level and all subsequent",
    "start": "235840",
    "end": "238680"
  },
  {
    "text": "requests will be authenticated saving",
    "start": "238680",
    "end": "241920"
  },
  {
    "text": "our CPU",
    "start": "241920",
    "end": "243280"
  },
  {
    "text": "time also similar to J web tokens there",
    "start": "243280",
    "end": "247120"
  },
  {
    "text": "is a storage benefit as a server",
    "start": "247120",
    "end": "251360"
  },
  {
    "text": "does does not need to store all the",
    "start": "251360",
    "end": "254040"
  },
  {
    "text": "certificates only the root",
    "start": "254040",
    "end": "258280"
  },
  {
    "text": "certificate speaking of the cons there",
    "start": "259519",
    "end": "261759"
  },
  {
    "text": "is no granular control as soon as you",
    "start": "261759",
    "end": "264120"
  },
  {
    "text": "enable mtls in your application all",
    "start": "264120",
    "end": "267040"
  },
  {
    "text": "requests have to be authenticated even",
    "start": "267040",
    "end": "269440"
  },
  {
    "text": "to the public Pages or JS or css",
    "start": "269440",
    "end": "272759"
  },
  {
    "text": "resources also any certificate signed by",
    "start": "272759",
    "end": "275960"
  },
  {
    "text": "root certificate can be used for Cent",
    "start": "275960",
    "end": "279000"
  },
  {
    "text": "authentication even if the certificate",
    "start": "279000",
    "end": "281440"
  },
  {
    "text": "is issued to a different purpose it can",
    "start": "281440",
    "end": "284360"
  },
  {
    "text": "still potentially be used for TLS",
    "start": "284360",
    "end": "286919"
  },
  {
    "text": "authentication furthermore the mutual",
    "start": "286919",
    "end": "289520"
  },
  {
    "text": "TLS RFC does not require how",
    "start": "289520",
    "end": "292680"
  },
  {
    "text": "certificates should be issued it's up to",
    "start": "292680",
    "end": "295800"
  },
  {
    "text": "application developers to design",
    "start": "295800",
    "end": "297759"
  },
  {
    "text": "mechanism for it certific issue finally",
    "start": "297759",
    "end": "302080"
  },
  {
    "text": "certificates are always expired and just",
    "start": "302080",
    "end": "304960"
  },
  {
    "text": "to",
    "start": "304960",
    "end": "305800"
  },
  {
    "text": "hustle to reti in",
    "start": "305800",
    "end": "309638"
  },
  {
    "text": "frequently well before we dive into the",
    "start": "319720",
    "end": "322199"
  },
  {
    "text": "attack section I'm going to briefly",
    "start": "322199",
    "end": "324400"
  },
  {
    "text": "mention the previous well-known attacks",
    "start": "324400",
    "end": "326440"
  },
  {
    "text": "on certificate validation obviously the",
    "start": "326440",
    "end": "329880"
  },
  {
    "text": "security of the authentication system",
    "start": "329880",
    "end": "332199"
  },
  {
    "text": "depends on the strength of the signature",
    "start": "332199",
    "end": "335039"
  },
  {
    "text": "if you can somehow for this the content",
    "start": "335039",
    "end": "337240"
  },
  {
    "text": "of the certificate but keep the same",
    "start": "337240",
    "end": "340039"
  },
  {
    "text": "signature we can completely break the",
    "start": "340039",
    "end": "342440"
  },
  {
    "text": "authentication process also see the",
    "start": "342440",
    "end": "346319"
  },
  {
    "text": "x59 format is quite complex just parsing",
    "start": "346319",
    "end": "350080"
  },
  {
    "text": "these data structures can lead to buffer",
    "start": "350080",
    "end": "352720"
  },
  {
    "text": "and Heap over Flows In",
    "start": "352720",
    "end": "355400"
  },
  {
    "text": "additional lack of basic constraint",
    "start": "355400",
    "end": "357960"
  },
  {
    "text": "checking can also be used to bypass",
    "start": "357960",
    "end": "360880"
  },
  {
    "text": "authentication I have to say that in my",
    "start": "360880",
    "end": "363319"
  },
  {
    "text": "research I mostly looked at how mtls is",
    "start": "363319",
    "end": "366479"
  },
  {
    "text": "implemented in applications written in",
    "start": "366479",
    "end": "368919"
  },
  {
    "text": "Java in the Java development kit most of",
    "start": "368919",
    "end": "372240"
  },
  {
    "text": "these attacks are already mitigated so I",
    "start": "372240",
    "end": "375080"
  },
  {
    "text": "had to take a slightly different",
    "start": "375080",
    "end": "376840"
  },
  {
    "text": "approach at the same time all the",
    "start": "376840",
    "end": "380240"
  },
  {
    "text": "attacks I'm going to describe are also",
    "start": "380240",
    "end": "382720"
  },
  {
    "text": "could applicable to other",
    "start": "382720",
    "end": "385840"
  },
  {
    "text": "languages so let's move on to the attack",
    "start": "385840",
    "end": "388599"
  },
  {
    "start": "386000",
    "end": "730000"
  },
  {
    "text": "section in the first chapter we'll cover",
    "start": "388599",
    "end": "392240"
  },
  {
    "text": "some improper certificate",
    "start": "392240",
    "end": "395918"
  },
  {
    "text": "structure in real life applications",
    "start": "396960",
    "end": "399560"
  },
  {
    "text": "developers often need to access the",
    "start": "399560",
    "end": "402240"
  },
  {
    "text": "subject name from the certificate",
    "start": "402240",
    "end": "403960"
  },
  {
    "text": "presented during the TS handshake for",
    "start": "403960",
    "end": "407080"
  },
  {
    "text": "instance they may need it for",
    "start": "407080",
    "end": "408919"
  },
  {
    "text": "authorization needs to understand what",
    "start": "408919",
    "end": "411240"
  },
  {
    "text": "is a current username in Java you can",
    "start": "411240",
    "end": "414440"
  },
  {
    "text": "use SSL session. get per certificates",
    "start": "414440",
    "end": "418400"
  },
  {
    "text": "method interestingly this method returns",
    "start": "418400",
    "end": "421840"
  },
  {
    "text": "an array of certificates not a single",
    "start": "421840",
    "end": "424560"
  },
  {
    "text": "one why perhaps because stilla",
    "start": "424560",
    "end": "427840"
  },
  {
    "text": "specification defines that clients may",
    "start": "427840",
    "end": "430520"
  },
  {
    "text": "send a full chain of certificates from",
    "start": "430520",
    "end": "433280"
  },
  {
    "text": "an entity Z root",
    "start": "433280",
    "end": "437000"
  },
  {
    "text": "CA so I decided to take a look how",
    "start": "442720",
    "end": "446199"
  },
  {
    "text": "different applications use this API the",
    "start": "446199",
    "end": "449479"
  },
  {
    "text": "last common approach I've seen is to",
    "start": "449479",
    "end": "451599"
  },
  {
    "text": "take only the first certificate from the",
    "start": "451599",
    "end": "453680"
  },
  {
    "text": "array and consider it as a valid client",
    "start": "453680",
    "end": "456800"
  },
  {
    "text": "certificate this is correct as mtls RFC",
    "start": "456800",
    "end": "460680"
  },
  {
    "text": "explicitly says that the sender",
    "start": "460680",
    "end": "462919"
  },
  {
    "text": "certificate must conf must come first in",
    "start": "462919",
    "end": "466319"
  },
  {
    "text": "the least at the same time I discovered",
    "start": "466319",
    "end": "469960"
  },
  {
    "text": "some rare cases when applications",
    "start": "469960",
    "end": "472120"
  },
  {
    "text": "disregard this Rule and iterate over the",
    "start": "472120",
    "end": "475039"
  },
  {
    "text": "array trying to find a certificate that",
    "start": "475039",
    "end": "478319"
  },
  {
    "text": "matches some criter",
    "start": "478319",
    "end": "480319"
  },
  {
    "text": "this can be",
    "start": "480319",
    "end": "481440"
  },
  {
    "text": "dangerous as the underlying TLS library",
    "start": "481440",
    "end": "485280"
  },
  {
    "text": "in Java only verifies the first",
    "start": "485280",
    "end": "487520"
  },
  {
    "text": "certificate from the",
    "start": "487520",
    "end": "489520"
  },
  {
    "text": "list one of these examples was a",
    "start": "489520",
    "end": "492199"
  },
  {
    "text": "vulnerability I discovered in key clock",
    "start": "492199",
    "end": "495039"
  },
  {
    "text": "key clock is a popular authorization",
    "start": "495039",
    "end": "497879"
  },
  {
    "text": "server that supports o Sul and other",
    "start": "497879",
    "end": "501680"
  },
  {
    "text": "authorization methods as well as Mutual",
    "start": "501680",
    "end": "504440"
  },
  {
    "text": "CLS key clog iterates over all",
    "start": "504440",
    "end": "507240"
  },
  {
    "text": "certificates in the array searching for",
    "start": "507240",
    "end": "509440"
  },
  {
    "text": "the one that matches the client a form",
    "start": "509440",
    "end": "512279"
  },
  {
    "text": "parameter as soon as it found one",
    "start": "512279",
    "end": "515279"
  },
  {
    "text": "certificate it implicitly trusts it",
    "start": "515279",
    "end": "518599"
  },
  {
    "text": "assuming that the signature has already",
    "start": "518599",
    "end": "520839"
  },
  {
    "text": "been checked during the TLs handing in",
    "start": "520839",
    "end": "524480"
  },
  {
    "text": "reality a client can send as many",
    "start": "524480",
    "end": "527399"
  },
  {
    "text": "certificates as they want and the server",
    "start": "527399",
    "end": "530600"
  },
  {
    "text": "only verifies the first",
    "start": "530600",
    "end": "532880"
  },
  {
    "text": "one a potential attacker can exploit",
    "start": "532880",
    "end": "536000"
  },
  {
    "text": "this Behavior to authenticate under a",
    "start": "536000",
    "end": "538399"
  },
  {
    "text": "different username",
    "start": "538399",
    "end": "540079"
  },
  {
    "text": "it is possible to send a list of",
    "start": "540079",
    "end": "541959"
  },
  {
    "text": "certificates where the first one",
    "start": "541959",
    "end": "544000"
  },
  {
    "text": "contains one username and properly",
    "start": "544000",
    "end": "546839"
  },
  {
    "text": "changed to root CA the last certificate",
    "start": "546839",
    "end": "550040"
  },
  {
    "text": "might be self- signed and belong to a",
    "start": "550040",
    "end": "552360"
  },
  {
    "text": "different user the client doesn't does",
    "start": "552360",
    "end": "555519"
  },
  {
    "text": "not even need to provide a valid private",
    "start": "555519",
    "end": "558040"
  },
  {
    "text": "key Fe",
    "start": "558040",
    "end": "560519"
  },
  {
    "text": "it there is a number of end points in",
    "start": "560880",
    "end": "563680"
  },
  {
    "text": "key clock that support mtls",
    "start": "563680",
    "end": "566200"
  },
  {
    "text": "authentication for exploitation we need",
    "start": "566200",
    "end": "569240"
  },
  {
    "text": "one that does not require any additional",
    "start": "569240",
    "end": "571880"
  },
  {
    "text": "factors such as tokens or Secrets client",
    "start": "571880",
    "end": "575440"
  },
  {
    "text": "management register note is a good",
    "start": "575440",
    "end": "577399"
  },
  {
    "text": "example as it mutates users data in the",
    "start": "577399",
    "end": "581160"
  },
  {
    "text": "first comment it's shown how we can",
    "start": "581160",
    "end": "584279"
  },
  {
    "text": "normally use the AP out of his muttil",
    "start": "584279",
    "end": "586560"
  },
  {
    "text": "TLS in the second request we can",
    "start": "586560",
    "end": "589959"
  },
  {
    "text": "generate a new self sign certificate",
    "start": "589959",
    "end": "592560"
  },
  {
    "text": "using opsl and add it to the chain when",
    "start": "592560",
    "end": "596640"
  },
  {
    "text": "we send this second cural request key",
    "start": "596640",
    "end": "599600"
  },
  {
    "text": "clock will perform this action on behalf",
    "start": "599600",
    "end": "602200"
  },
  {
    "text": "of the user specified in the certificate",
    "start": "602200",
    "end": "605360"
  },
  {
    "text": "2 instead of certificate one therefore",
    "start": "605360",
    "end": "609200"
  },
  {
    "text": "we can mutate data on the server for any",
    "start": "609200",
    "end": "611839"
  },
  {
    "text": "client that support",
    "start": "611839",
    "end": "614920"
  },
  {
    "text": "mtls So how to fix that easy just use",
    "start": "620880",
    "end": "624680"
  },
  {
    "text": "the first certificate from the array",
    "start": "624680",
    "end": "627160"
  },
  {
    "text": "that's exactly how key clock pches this",
    "start": "627160",
    "end": "629440"
  },
  {
    "text": "V vulnerability it's a good example of",
    "start": "629440",
    "end": "632600"
  },
  {
    "text": "how developers provide methods and",
    "start": "632600",
    "end": "634920"
  },
  {
    "text": "interfaces that can be misunderstood or",
    "start": "634920",
    "end": "637600"
  },
  {
    "text": "used",
    "start": "637600",
    "end": "640120"
  },
  {
    "text": "incorrectly another common scenario for",
    "start": "640560",
    "end": "643040"
  },
  {
    "text": "mtls deployments is when TLS connection",
    "start": "643040",
    "end": "646200"
  },
  {
    "text": "is terminated on the reverse",
    "start": "646200",
    "end": "648639"
  },
  {
    "text": "proxy in this case the reverse proxy",
    "start": "648639",
    "end": "651839"
  },
  {
    "text": "often checks the certificate and",
    "start": "651839",
    "end": "653800"
  },
  {
    "text": "forwards it to back and server as an",
    "start": "653800",
    "end": "657000"
  },
  {
    "text": "additional header in this slide",
    "start": "657000",
    "end": "659760"
  },
  {
    "text": "you can see how typical ands",
    "start": "659760",
    "end": "662040"
  },
  {
    "text": "configuration to enable",
    "start": "662040",
    "end": "665120"
  },
  {
    "text": "mtls I've seen a number of systems like",
    "start": "665120",
    "end": "667680"
  },
  {
    "text": "that and in most cases the backend",
    "start": "667680",
    "end": "670519"
  },
  {
    "text": "servers behind engins do not perform",
    "start": "670519",
    "end": "673360"
  },
  {
    "text": "additional validation trust in the",
    "start": "673360",
    "end": "675519"
  },
  {
    "text": "reverse proxy this behavior is not",
    "start": "675519",
    "end": "678480"
  },
  {
    "text": "exploitable straightway but it's not",
    "start": "678480",
    "end": "680760"
  },
  {
    "text": "ideal either why well first of all it",
    "start": "680760",
    "end": "684519"
  },
  {
    "text": "means that the server in the local",
    "start": "684519",
    "end": "686639"
  },
  {
    "text": "network that any server in the local",
    "start": "686639",
    "end": "689079"
  },
  {
    "text": "Network can make a request with this",
    "start": "689079",
    "end": "691360"
  },
  {
    "text": "header header so this network segment",
    "start": "691360",
    "end": "694560"
  },
  {
    "text": "should be properly isolated from the",
    "start": "694560",
    "end": "697000"
  },
  {
    "text": "traffic coming from outside additionally",
    "start": "697000",
    "end": "701079"
  },
  {
    "text": "if a backend or revers proxy is affected",
    "start": "701079",
    "end": "703880"
  },
  {
    "text": "by request smuggling its exploitation",
    "start": "703880",
    "end": "706600"
  },
  {
    "text": "becomes trieval over the past few years",
    "start": "706600",
    "end": "709720"
  },
  {
    "text": "we've seen a lot of request and head",
    "start": "709720",
    "end": "712600"
  },
  {
    "text": "headers marketing vulnerabilities",
    "start": "712600",
    "end": "715040"
  },
  {
    "text": "including the latest CVS in Apachi and",
    "start": "715040",
    "end": "717959"
  },
  {
    "text": "and njs",
    "start": "717959",
    "end": "720519"
  },
  {
    "text": "be careful when implementing these",
    "start": "720519",
    "end": "722519"
  },
  {
    "text": "scenarios and check the certificate",
    "start": "722519",
    "end": "724920"
  },
  {
    "text": "signature on all servers if",
    "start": "724920",
    "end": "729240"
  },
  {
    "start": "730000",
    "end": "925000"
  },
  {
    "text": "possible all right moving on to the next",
    "start": "730920",
    "end": "733560"
  },
  {
    "text": "chapter follow the chain where it leads",
    "start": "733560",
    "end": "738120"
  },
  {
    "text": "you in in large systems servers may not",
    "start": "739959",
    "end": "744040"
  },
  {
    "text": "store all route and intermediate",
    "start": "744040",
    "end": "745920"
  },
  {
    "text": "certificates locally but use an external",
    "start": "745920",
    "end": "748480"
  },
  {
    "text": "storage",
    "start": "748480",
    "end": "749800"
  },
  {
    "text": "instead RFC",
    "start": "749800",
    "end": "752279"
  },
  {
    "text": "4387 defines the concept of a",
    "start": "752279",
    "end": "754800"
  },
  {
    "text": "certificate store and interface you can",
    "start": "754800",
    "end": "757560"
  },
  {
    "text": "use to lazily access the certificates",
    "start": "757560",
    "end": "759959"
  },
  {
    "text": "during chain",
    "start": "759959",
    "end": "761279"
  },
  {
    "text": "validation these stores are implemented",
    "start": "761279",
    "end": "763720"
  },
  {
    "text": "over different protocols such as HTTP",
    "start": "763720",
    "end": "767160"
  },
  {
    "text": "ldub FTP or SQL",
    "start": "767160",
    "end": "770880"
  },
  {
    "text": "queries the X5 online form defined some",
    "start": "770880",
    "end": "774120"
  },
  {
    "text": "certificate extensions that can contain",
    "start": "774120",
    "end": "776800"
  },
  {
    "text": "information where to find the issue your",
    "start": "776800",
    "end": "779040"
  },
  {
    "text": "NCA certificates for instance the",
    "start": "779040",
    "end": "782480"
  },
  {
    "text": "authority information access extension",
    "start": "782480",
    "end": "785320"
  },
  {
    "text": "contains a URL pointing to the issuers",
    "start": "785320",
    "end": "789279"
  },
  {
    "text": "certificate if this extension is used",
    "start": "789279",
    "end": "792000"
  },
  {
    "text": "validation there is a high chance that",
    "start": "792000",
    "end": "794560"
  },
  {
    "text": "you can exploit it to perform a ssrf",
    "start": "794560",
    "end": "798000"
  },
  {
    "text": "attack also subject issue serial and",
    "start": "798000",
    "end": "802680"
  },
  {
    "text": "their alternative names can be used to",
    "start": "802680",
    "end": "805519"
  },
  {
    "text": "construct SQL or ELD up queries believe",
    "start": "805519",
    "end": "808639"
  },
  {
    "text": "it option for injection setup when",
    "start": "808639",
    "end": "811440"
  },
  {
    "text": "certificate stores are in use you want",
    "start": "811440",
    "end": "813959"
  },
  {
    "text": "to think about these values as insertion",
    "start": "813959",
    "end": "816959"
  },
  {
    "text": "points similar to these ones we have in",
    "start": "816959",
    "end": "819839"
  },
  {
    "text": "G Suite",
    "start": "819839",
    "end": "821760"
  },
  {
    "text": "Intruder and what's really good for",
    "start": "821760",
    "end": "824079"
  },
  {
    "text": "attas if this values can all of these",
    "start": "824079",
    "end": "828000"
  },
  {
    "text": "values can be used in queries before the",
    "start": "828000",
    "end": "830560"
  },
  {
    "text": "signature is",
    "start": "830560",
    "end": "833160"
  },
  {
    "text": "checked to demonstrate an example of",
    "start": "833519",
    "end": "836160"
  },
  {
    "text": "this vulnerability we'll use l up SE",
    "start": "836160",
    "end": "839040"
  },
  {
    "text": "store from the bouncy castle Library",
    "start": "839040",
    "end": "841600"
  },
  {
    "text": "bouncy castle is one of the most popular",
    "start": "841600",
    "end": "844480"
  },
  {
    "text": "popular libraries for the certificate",
    "start": "844480",
    "end": "847320"
  },
  {
    "text": "validation in Jaa here is an example of",
    "start": "847320",
    "end": "850800"
  },
  {
    "text": "how you can use this store to build and",
    "start": "850800",
    "end": "853360"
  },
  {
    "text": "validate a certificate",
    "start": "853360",
    "end": "855720"
  },
  {
    "text": "chain under the hood bouny Castle uses",
    "start": "855720",
    "end": "859120"
  },
  {
    "text": "the subject field from the certificate",
    "start": "859120",
    "end": "862360"
  },
  {
    "text": "to build an L up query the subject field",
    "start": "862360",
    "end": "865680"
  },
  {
    "text": "is inserted into the filter and a can",
    "start": "865680",
    "end": "869000"
  },
  {
    "text": "magine without any",
    "start": "869000",
    "end": "872160"
  },
  {
    "text": "escaping so if the subject contains any",
    "start": "873519",
    "end": "877199"
  },
  {
    "text": "special characters it can change the",
    "start": "877199",
    "end": "880000"
  },
  {
    "text": "syntax of the query in most cases it can",
    "start": "880000",
    "end": "883320"
  },
  {
    "text": "be exploited as a blind El up qu",
    "start": "883320",
    "end": "885759"
  },
  {
    "text": "injection therefore it could possible it",
    "start": "885759",
    "end": "890120"
  },
  {
    "text": "could be possible to use this",
    "start": "890120",
    "end": "891560"
  },
  {
    "text": "vulnerability to extract other fields",
    "start": "891560",
    "end": "893959"
  },
  {
    "text": "from the ldub directory the exploitation",
    "start": "893959",
    "end": "896839"
  },
  {
    "text": "is based on many factors including",
    "start": "896839",
    "end": "899440"
  },
  {
    "text": "whether are the applications exposes any",
    "start": "899440",
    "end": "902440"
  },
  {
    "text": "errors and it also depends on the",
    "start": "902440",
    "end": "905199"
  },
  {
    "text": "structure of the El",
    "start": "905199",
    "end": "908680"
  },
  {
    "text": "directory anyway whenever you",
    "start": "909079",
    "end": "911639"
  },
  {
    "text": "incorporate user Supply data into the",
    "start": "911639",
    "end": "914399"
  },
  {
    "text": "Lup query special characters should be",
    "start": "914399",
    "end": "917600"
  },
  {
    "text": "properly filtered and that's exactly how",
    "start": "917600",
    "end": "920720"
  },
  {
    "text": "this CV has been pouched in the B castle",
    "start": "920720",
    "end": "925480"
  },
  {
    "start": "925000",
    "end": "1333000"
  },
  {
    "text": "code next we'll cover vacation this",
    "start": "925480",
    "end": "929120"
  },
  {
    "text": "controversial topic sparked many debates",
    "start": "929120",
    "end": "931920"
  },
  {
    "text": "over the",
    "start": "931920",
    "end": "933959"
  },
  {
    "text": "years similar to Json web",
    "start": "933959",
    "end": "938240"
  },
  {
    "text": "tokens the beauty of certificate chains",
    "start": "938839",
    "end": "941880"
  },
  {
    "text": "is that they can be trusted just based",
    "start": "941880",
    "end": "944440"
  },
  {
    "text": "on the signature but what happens if we",
    "start": "944440",
    "end": "947360"
  },
  {
    "text": "need to remoke a certificate so it can",
    "start": "947360",
    "end": "949920"
  },
  {
    "text": "no longer be used the pki specification",
    "start": "949920",
    "end": "953440"
  },
  {
    "text": "addresses this problem by proposing a",
    "start": "953440",
    "end": "955720"
  },
  {
    "text": "special store for a work certificate",
    "start": "955720",
    "end": "958600"
  },
  {
    "text": "that can be accessible via HTTP or Elda",
    "start": "958600",
    "end": "962240"
  },
  {
    "text": "protocols certificate verifiers can two",
    "start": "962240",
    "end": "965440"
  },
  {
    "text": "can use two different methods ocp or",
    "start": "965440",
    "end": "969680"
  },
  {
    "text": "crl many developers believe that",
    "start": "969680",
    "end": "972120"
  },
  {
    "text": "revocation checkin is absolutely",
    "start": "972120",
    "end": "974600"
  },
  {
    "text": "necessary whereas other AR to avoid it",
    "start": "974600",
    "end": "977759"
  },
  {
    "text": "for performance reasons or use of line",
    "start": "977759",
    "end": "980399"
  },
  {
    "text": "vacation lists generally speaking the",
    "start": "980399",
    "end": "983720"
  },
  {
    "text": "tour location can be hardcoded into the",
    "start": "983720",
    "end": "986920"
  },
  {
    "text": "application or taken from the",
    "start": "986920",
    "end": "988800"
  },
  {
    "text": "certificate",
    "start": "988800",
    "end": "990160"
  },
  {
    "text": "itself there are two certificate",
    "start": "990160",
    "end": "992319"
  },
  {
    "text": "extensions used for that Authority",
    "start": "992319",
    "end": "995160"
  },
  {
    "text": "information access and crl distribution",
    "start": "995160",
    "end": "999040"
  },
  {
    "text": "points looking at from the hacker point",
    "start": "999040",
    "end": "1002040"
  },
  {
    "text": "of view I think it's incredible that the",
    "start": "1002040",
    "end": "1004759"
  },
  {
    "text": "location of this revocation server can",
    "start": "1004759",
    "end": "1008319"
  },
  {
    "text": "be taken from the certificate so if",
    "start": "1008319",
    "end": "1011560"
  },
  {
    "text": "application takes URLs relying on on",
    "start": "1011560",
    "end": "1015639"
  },
  {
    "text": "extensions to make a revocation check it",
    "start": "1015639",
    "end": "1018480"
  },
  {
    "text": "can be abused for ssrf attacks sadly for",
    "start": "1018480",
    "end": "1022240"
  },
  {
    "text": "attackers this normally happens only",
    "start": "1022240",
    "end": "1025000"
  },
  {
    "text": "after the signature checks but in some",
    "start": "1025000",
    "end": "1028240"
  },
  {
    "text": "cases it's still",
    "start": "1028240",
    "end": "1030558"
  },
  {
    "text": "exploitable moreover the Lup is also",
    "start": "1030559",
    "end": "1033760"
  },
  {
    "text": "supported at least in",
    "start": "1033760",
    "end": "1036760"
  },
  {
    "text": "Java well did I hear El up in Java yes",
    "start": "1036760",
    "end": "1042160"
  },
  {
    "text": "the standard Java Library can use j& to",
    "start": "1042160",
    "end": "1045199"
  },
  {
    "text": "access revocation locations under some",
    "start": "1045199",
    "end": "1047640"
  },
  {
    "text": "settings you can probably heard that in",
    "start": "1047640",
    "end": "1050640"
  },
  {
    "text": "Java un marshalling and El up lookup",
    "start": "1050640",
    "end": "1053840"
  },
  {
    "text": "response can lead to a remote code",
    "start": "1053840",
    "end": "1056120"
  },
  {
    "text": "execution a few year years back this",
    "start": "1056120",
    "end": "1059000"
  },
  {
    "text": "problem was reported by Morris Basher",
    "start": "1059000",
    "end": "1062640"
  },
  {
    "text": "and remote code execution while",
    "start": "1062640",
    "end": "1065280"
  },
  {
    "text": "revocation has been punched in GDK at",
    "start": "1065280",
    "end": "1067880"
  },
  {
    "text": "least you can check out his blog post",
    "start": "1067880",
    "end": "1070720"
  },
  {
    "text": "for more",
    "start": "1070720",
    "end": "1072799"
  },
  {
    "text": "details in my research I decided to",
    "start": "1072799",
    "end": "1075919"
  },
  {
    "text": "check if bcy Castle Library is affected",
    "start": "1075919",
    "end": "1079840"
  },
  {
    "text": "it turns out that bouny castle can be",
    "start": "1079840",
    "end": "1082760"
  },
  {
    "text": "configured to use crlp extension and",
    "start": "1082760",
    "end": "1085919"
  },
  {
    "text": "make calls to an Lup server at the same",
    "start": "1085919",
    "end": "1089360"
  },
  {
    "text": "time Dy Castle only features a specific",
    "start": "1089360",
    "end": "1092720"
  },
  {
    "text": "attribute from the L up response and",
    "start": "1092720",
    "end": "1095440"
  },
  {
    "text": "does not support",
    "start": "1095440",
    "end": "1097000"
  },
  {
    "text": "references so remote code execution is",
    "start": "1097000",
    "end": "1100400"
  },
  {
    "text": "not possible there at the same time HTTP",
    "start": "1100400",
    "end": "1104679"
  },
  {
    "text": "ssrf is still viable Vector though",
    "start": "1104679",
    "end": "1110320"
  },
  {
    "text": "I also had a quick look at open source",
    "start": "1128840",
    "end": "1131120"
  },
  {
    "text": "projects that support mtls and perform",
    "start": "1131120",
    "end": "1134200"
  },
  {
    "text": "verification check-in one of these",
    "start": "1134200",
    "end": "1136840"
  },
  {
    "text": "projects was aerior cut",
    "start": "1136840",
    "end": "1139320"
  },
  {
    "text": "it's another popular authentication",
    "start": "1139320",
    "end": "1141440"
  },
  {
    "text": "server that highly",
    "start": "1141440",
    "end": "1145400"
  },
  {
    "text": "configurable administrators of operio",
    "start": "1145400",
    "end": "1148200"
  },
  {
    "text": "cast can enable the verification check",
    "start": "1148200",
    "end": "1150720"
  },
  {
    "text": "using the external Lup server by",
    "start": "1150720",
    "end": "1153400"
  },
  {
    "text": "specifying its address and password in",
    "start": "1153400",
    "end": "1156280"
  },
  {
    "text": "the settings in this if these settings",
    "start": "1156280",
    "end": "1159120"
  },
  {
    "text": "are applied AIO cost perform the",
    "start": "1159120",
    "end": "1162039"
  },
  {
    "text": "revocation check for the certificate",
    "start": "1162039",
    "end": "1164480"
  },
  {
    "text": "fetching the address from the",
    "start": "1164480",
    "end": "1166320"
  },
  {
    "text": "certificates calp",
    "start": "1166320",
    "end": "1168960"
  },
  {
    "text": "extension which is",
    "start": "1168960",
    "end": "1171840"
  },
  {
    "text": "unsafe I was afraid that this could lead",
    "start": "1171840",
    "end": "1174799"
  },
  {
    "text": "to a remote code execution but it turned",
    "start": "1174799",
    "end": "1177600"
  },
  {
    "text": "out that aoas uses a custom library for",
    "start": "1177600",
    "end": "1181039"
  },
  {
    "text": "Lup connections which does not support",
    "start": "1181039",
    "end": "1183880"
  },
  {
    "text": "external code bases or object",
    "start": "1183880",
    "end": "1187200"
  },
  {
    "text": "factories needed for the",
    "start": "1187200",
    "end": "1191000"
  },
  {
    "text": "RC but when I tested this AP AIO cast I",
    "start": "1191480",
    "end": "1196080"
  },
  {
    "text": "noticed one interesting Behavior",
    "start": "1196080",
    "end": "1199000"
  },
  {
    "text": "the server prefers Lop URLs located",
    "start": "1199000",
    "end": "1202000"
  },
  {
    "text": "inside the certificate instead the one",
    "start": "1202000",
    "end": "1204600"
  },
  {
    "text": "that is configured in settings at the",
    "start": "1204600",
    "end": "1207320"
  },
  {
    "text": "same time appas still sends the",
    "start": "1207320",
    "end": "1210600"
  },
  {
    "text": "passwords from settings I quickly set a",
    "start": "1210600",
    "end": "1214200"
  },
  {
    "text": "testing environment and send a",
    "start": "1214200",
    "end": "1216600"
  },
  {
    "text": "self-signed certificate in the header",
    "start": "1216600",
    "end": "1219440"
  },
  {
    "text": "this certificate has crld DP extension",
    "start": "1219440",
    "end": "1222320"
  },
  {
    "text": "with hup URL pointing to anut listener",
    "start": "1222320",
    "end": "1226440"
  },
  {
    "text": "after sending this request to up per C I",
    "start": "1226440",
    "end": "1230080"
  },
  {
    "text": "managed to I managed to receive a",
    "start": "1230080",
    "end": "1233400"
  },
  {
    "text": "request to my net cut listener with the",
    "start": "1233400",
    "end": "1236159"
  },
  {
    "text": "username and password",
    "start": "1236159",
    "end": "1239320"
  },
  {
    "text": "caked after reporting this vulnerability",
    "start": "1239600",
    "end": "1242679"
  },
  {
    "text": "the application developers issued a fix",
    "start": "1242679",
    "end": "1245440"
  },
  {
    "text": "within just one day they P did by",
    "start": "1245440",
    "end": "1248200"
  },
  {
    "text": "clearing the Lin and password used for",
    "start": "1248200",
    "end": "1250960"
  },
  {
    "text": "elap",
    "start": "1250960",
    "end": "1252120"
  },
  {
    "text": "connection if the URL was taken from crl",
    "start": "1252120",
    "end": "1255440"
  },
  {
    "text": "DP extension therefore the pass for leak",
    "start": "1255440",
    "end": "1258720"
  },
  {
    "text": "is no longer possible but I'd say in",
    "start": "1258720",
    "end": "1262760"
  },
  {
    "text": "general using URLs from the Cal DP",
    "start": "1262760",
    "end": "1266120"
  },
  {
    "text": "extension is still dangerous as it",
    "start": "1266120",
    "end": "1269400"
  },
  {
    "text": "broadens the attack",
    "start": "1269400",
    "end": "1272840"
  },
  {
    "text": "surface all right uh to summar to",
    "start": "1274400",
    "end": "1277840"
  },
  {
    "text": "summarize on a talk section when you",
    "start": "1277840",
    "end": "1280880"
  },
  {
    "text": "develop an mtls system or perform a",
    "start": "1280880",
    "end": "1283720"
  },
  {
    "text": "security assessment I strongly suggest",
    "start": "1283720",
    "end": "1286960"
  },
  {
    "text": "first pay attention when instructing",
    "start": "1286960",
    "end": "1289679"
  },
  {
    "text": "usernames from the mtls chain as the",
    "start": "1289679",
    "end": "1292840"
  },
  {
    "text": "servers only verify the first",
    "start": "1292840",
    "end": "1294960"
  },
  {
    "text": "certificate in the chain Second Use",
    "start": "1294960",
    "end": "1298039"
  },
  {
    "text": "certificate stores with ction as it can",
    "start": "1298039",
    "end": "1300919"
  },
  {
    "text": "lead to El up and SQL",
    "start": "1300919",
    "end": "1303600"
  },
  {
    "text": "injections and last but not least",
    "start": "1303600",
    "end": "1306200"
  },
  {
    "text": "certificate revocation can lead to ssrf",
    "start": "1306200",
    "end": "1309120"
  },
  {
    "text": "or even to RC in worst",
    "start": "1309120",
    "end": "1312320"
  },
  {
    "text": "case so it's advised to do the",
    "start": "1312320",
    "end": "1314880"
  },
  {
    "text": "revocation check only after all other",
    "start": "1314880",
    "end": "1317840"
  },
  {
    "text": "checks",
    "start": "1317840",
    "end": "1320039"
  },
  {
    "text": "that's it thank you for your attention",
    "start": "1320320",
    "end": "1322919"
  },
  {
    "text": "you can find the full wrub in our GitHub",
    "start": "1322919",
    "end": "1326080"
  },
  {
    "text": "blog",
    "start": "1326080",
    "end": "1329000"
  },
  {
    "text": "bye",
    "start": "1332120",
    "end": "1335120"
  }
]