[
  {
    "text": "[Music]",
    "start": "860",
    "end": "9440"
  },
  {
    "text": "welcome everyone and thank you all for joining us here in the session on the data distribution system tx1 trend micro",
    "start": "9440",
    "end": "15200"
  },
  {
    "text": "and adlink are presenting this project together but we're indebted to ads robotics who also took part in this research",
    "start": "15200",
    "end": "20720"
  },
  {
    "text": "i'll first give a very shallow introduction to dds because it's not that well known in the world then hand over to federico and talon for",
    "start": "20720",
    "end": "26800"
  },
  {
    "text": "presenting the substance of the research and there are many software-based control systems in the world that hook",
    "start": "26800",
    "end": "31840"
  },
  {
    "text": "up sensors and actuators to control the monitoring application often these systems are used to quite critical applications such as your",
    "start": "31840",
    "end": "38480"
  },
  {
    "text": "vacuum robot or power plant or a robot for milking cows or traffic",
    "start": "38480",
    "end": "43840"
  },
  {
    "text": "control and dds really was invented for such systems um taking the need for",
    "start": "43840",
    "end": "49120"
  },
  {
    "text": "distribution longevity and fault tolerance as a starting point it is optimized for peer-to-peer systems",
    "start": "49120",
    "end": "54399"
  },
  {
    "text": "and many implementations have no brokers use multicast for discovery and for data",
    "start": "54399",
    "end": "60559"
  },
  {
    "text": "and allow you to [Music]",
    "start": "60559",
    "end": "65760"
  },
  {
    "text": "in small systems allow you to run everything without any need for configuration to the application it is often just a",
    "start": "65760",
    "end": "72320"
  },
  {
    "text": "library sometimes there are some accompanying executables it handles the communication with the other parts in the system",
    "start": "72320",
    "end": "78479"
  },
  {
    "text": "interoperability between different implementations platforms and programming languages is a core principle",
    "start": "78479",
    "end": "83600"
  },
  {
    "text": "the key to that interoperability and indeed many of the other leds is that it handles type data the data types are",
    "start": "83600",
    "end": "89040"
  },
  {
    "text": "declared using an interface definition language that is quite similar to c or protobuf and it features all the usual",
    "start": "89040",
    "end": "94640"
  },
  {
    "text": "suspects like integers floating points strings enumerated types records you name it relatively recently features for",
    "start": "94640",
    "end": "101680"
  },
  {
    "text": "the type revolution got added before one would evolve a system by adding new types no one can also choose",
    "start": "101680",
    "end": "107119"
  },
  {
    "text": "to evolve the existing types altogether attacks can grow as complex as you need them to be",
    "start": "107119",
    "end": "112880"
  },
  {
    "text": "but there is more to it than just types there is there are also many different quality of service settings to control how exactly the data is handled and how",
    "start": "112880",
    "end": "118960"
  },
  {
    "text": "it is protected this coverage covers such things as reliability automatic handling of historical data by the middleware",
    "start": "118960",
    "end": "125200"
  },
  {
    "text": "encryption deadlines liveness monitoring etc etc these are all specified in a reasonably",
    "start": "125200",
    "end": "130720"
  },
  {
    "text": "uniform way either programmatically or often through xml files the programmer",
    "start": "130720",
    "end": "137120"
  },
  {
    "text": "doesn't see much of this once the types have been defined and pre-processed all that really needs to be done is",
    "start": "137120",
    "end": "142480"
  },
  {
    "text": "creating a few objects and you can start communicating with the other processes in the network the experience is that of",
    "start": "142480",
    "end": "148640"
  },
  {
    "text": "a database and actually it is old enough to have a fair claim to being the first software",
    "start": "148640",
    "end": "153920"
  },
  {
    "text": "database in the world the first description of dds the dds model is",
    "start": "153920",
    "end": "159519"
  },
  {
    "text": "by my father on a piece of in a document dated to 29th of february 1984.",
    "start": "159519",
    "end": "167519"
  },
  {
    "text": "so at first sight dds looks very much like mqtt or any other pepsi protocol but because they're also topics",
    "start": "167760",
    "end": "173440"
  },
  {
    "text": "publishers subscribers etc but there are some key differences",
    "start": "173440",
    "end": "178480"
  },
  {
    "text": "and one is that it is focused on nowadays it's called edge computing",
    "start": "178480",
    "end": "184560"
  },
  {
    "text": "the other is that it has more knowledge of the data type the data content than most of the",
    "start": "184560",
    "end": "190959"
  },
  {
    "text": "other systems and that this additional knowledge allows you to do",
    "start": "190959",
    "end": "196000"
  },
  {
    "text": "very evaluation or filtering in middleware and also to let the middleware handle",
    "start": "196000",
    "end": "201519"
  },
  {
    "text": "the take over some of the responsibility for maintaining the data set and so you can",
    "start": "201519",
    "end": "206640"
  },
  {
    "text": "even configure it to act like a simple distributed replicated relational database",
    "start": "206640",
    "end": "212760"
  },
  {
    "text": "it's also standard maintained by the omg and the object management group which you've probably heard of because",
    "start": "214159",
    "end": "220400"
  },
  {
    "text": "of uml if you're old enough they're also the organization that standardized korban think they were",
    "start": "220400",
    "end": "226879"
  },
  {
    "text": "founded for that um various of the dds implement implementers or rmg members and activity",
    "start": "226879",
    "end": "233519"
  },
  {
    "text": "develop both the specification and implementations while each implementation has its own",
    "start": "233519",
    "end": "240239"
  },
  {
    "text": "unique features when multiple implementers end up doing the same thing they do tend to get together and extend specification",
    "start": "240239",
    "end": "248400"
  },
  {
    "text": "um and also important to note is that some of these are completely open source and some of them",
    "start": "248400",
    "end": "253680"
  },
  {
    "text": "are closed stories and then there is some in between stuff okay",
    "start": "253680",
    "end": "259759"
  },
  {
    "text": "now i've mentioned a few or alluded to some areas where dds is",
    "start": "259759",
    "end": "265040"
  },
  {
    "text": "used but i think it is important in this context to make it a little bit more explicit to give you a really good",
    "start": "265040",
    "end": "270320"
  },
  {
    "text": "appreciation of why dds based systems are critical in the world the first example is transportation",
    "start": "270320",
    "end": "277840"
  },
  {
    "text": "pro rail is the dutch national railway infrastructure where the track control system switches semaphores reserving the",
    "start": "277840",
    "end": "283199"
  },
  {
    "text": "right of way for trains things like that completely relies on dds for communication across",
    "start": "283199",
    "end": "290000"
  },
  {
    "text": "the system cold flight is a new european air traffic management system dds is used",
    "start": "290000",
    "end": "295199"
  },
  {
    "text": "for example for distributing flight plan updates throughout the system enough canada is similar",
    "start": "295199",
    "end": "301360"
  },
  {
    "text": "um and in transportation there are of course also autonomous vehicles which are stuffed with sensors and real-time",
    "start": "301360",
    "end": "307280"
  },
  {
    "text": "sharing and processing of this data is at the core of the system",
    "start": "307280",
    "end": "312880"
  },
  {
    "text": "these feature quite some small smallish networks of quite powerful ecu's and",
    "start": "312880",
    "end": "318720"
  },
  {
    "text": "there are quite a few where dds is used to integrate these",
    "start": "318720",
    "end": "324560"
  },
  {
    "text": "in many cases these autonomous vehicles aren't directly written using dds they use what",
    "start": "324560",
    "end": "331199"
  },
  {
    "text": "is called ros2 the robot operating system but that itself is based on dds i also see ross 2",
    "start": "331199",
    "end": "338320"
  },
  {
    "text": "is in industrial robotics um there is a whole group",
    "start": "338320",
    "end": "343919"
  },
  {
    "text": "affiliated with the ros2 movement development world um called ros",
    "start": "343919",
    "end": "349360"
  },
  {
    "text": "industrial which is focused on support of roles in industrial robotics and so",
    "start": "349360",
    "end": "355120"
  },
  {
    "text": "also dds furthermore there is space there's not just aviation also space and for example",
    "start": "355120",
    "end": "361919"
  },
  {
    "text": "the kennedy space center monitors hundreds of thousands of parameters",
    "start": "361919",
    "end": "367840"
  },
  {
    "text": "during launches um [Music] but that's",
    "start": "368479",
    "end": "374479"
  },
  {
    "text": "just on land mostly but it dds also really travels into space",
    "start": "374479",
    "end": "379680"
  },
  {
    "text": "for example rti was used in the first launch of the orion spacecraft and finally as a final example",
    "start": "379680",
    "end": "386800"
  },
  {
    "text": "there's healthcare obviously important there are many other examples i could",
    "start": "386800",
    "end": "393039"
  },
  {
    "text": "give but i think that this suffices to make it really clear why dds has become critical to our world and with that i'd",
    "start": "393039",
    "end": "400319"
  },
  {
    "text": "like to give the floor to federico thank you eric i'd say you did a very",
    "start": "400319",
    "end": "406319"
  },
  {
    "text": "good job convincing us that dds is a critical protocol so any findings any",
    "start": "406319",
    "end": "412000"
  },
  {
    "text": "security findings is going to be impactful and important for any of the downstream vendors that adopt it as a",
    "start": "412000",
    "end": "420080"
  },
  {
    "text": "networking layer dds is quite complex you see here from",
    "start": "420080",
    "end": "426319"
  },
  {
    "text": "the packet definition that it has several extensions on the side which are",
    "start": "426319",
    "end": "432000"
  },
  {
    "text": "there mostly for making it future proof because for example it has to",
    "start": "432000",
    "end": "437039"
  },
  {
    "text": "uh make room for extensible types there is an interface definition language that",
    "start": "437039",
    "end": "442960"
  },
  {
    "text": "eric told you about briefly there is a dds security extension and so on so we",
    "start": "442960",
    "end": "448240"
  },
  {
    "text": "decided to start from the foundation layer of the whole dds ecosystem which",
    "start": "448240",
    "end": "454000"
  },
  {
    "text": "is called rtps not to be confused with rtsp which is the popular streaming",
    "start": "454000",
    "end": "460319"
  },
  {
    "text": "protocol rtps is stands for real-time public subscribe protocols and tells you",
    "start": "460319",
    "end": "467199"
  },
  {
    "text": "immediately what the nature of the protocol is the frame starts with a magic number",
    "start": "467199",
    "end": "473599"
  },
  {
    "text": "that is the actual protocol name so the four letters rtps then there is the",
    "start": "473599",
    "end": "478879"
  },
  {
    "text": "protocol version and then there is the vendor id there are several vendors that are officially supported which are the",
    "start": "478879",
    "end": "486240"
  },
  {
    "text": "omg members on any other vendors for example if you want to create your own implementation you will be identified as",
    "start": "486240",
    "end": "493680"
  },
  {
    "text": "an unknown vendor unless you receive certification from omg",
    "start": "493680",
    "end": "499599"
  },
  {
    "text": "then there is a globally unique identifier just a prefix here",
    "start": "499599",
    "end": "505520"
  },
  {
    "text": "that identifies whether that helps the the receiver determine if the packet has",
    "start": "505520",
    "end": "511120"
  },
  {
    "text": "to be accepted or not because maybe it's for another participant then what comes next is essentially a",
    "start": "511120",
    "end": "518000"
  },
  {
    "text": "list of sub-messages each sub-message has a an id which is actually its type",
    "start": "518000",
    "end": "524000"
  },
  {
    "text": "we'll see later then there is a one byte of flags and then there is a length",
    "start": "524000",
    "end": "529839"
  },
  {
    "text": "field which is called octet to next header i highlighted it because normally when you do vulnerability research on a",
    "start": "529839",
    "end": "535600"
  },
  {
    "text": "network protocol you start to pinpoint the length fields which is",
    "start": "535600",
    "end": "540959"
  },
  {
    "text": "normally where you can find overflows and this kind of bugs and tells",
    "start": "540959",
    "end": "546240"
  },
  {
    "text": "essentially what the size of the remaining of the reminder packet is",
    "start": "546240",
    "end": "552640"
  },
  {
    "text": "the submessage id can take any of these enumeration values this is taken straight from the",
    "start": "552640",
    "end": "558480"
  },
  {
    "text": "specifications error included but we decided to leave it there and not report",
    "start": "558480",
    "end": "563680"
  },
  {
    "text": "it as a vulnerability because fortunately no compilers will accept this value",
    "start": "563680",
    "end": "568800"
  },
  {
    "text": "probably not even a syntax highlighter and essentially we have a variety of",
    "start": "568800",
    "end": "574880"
  },
  {
    "text": "messages for example you can have a message that informs the other participant about the time it's a time",
    "start": "574880",
    "end": "581680"
  },
  {
    "text": "step message informational message and then for example there is the data message which is",
    "start": "581680",
    "end": "589519"
  },
  {
    "text": "possibly the most interesting one because it's where the encapsulation of the upper layer protocols happens so is",
    "start": "589519",
    "end": "597360"
  },
  {
    "text": "essentially where dds leaves you notice that in a data packet there",
    "start": "597360",
    "end": "603279"
  },
  {
    "text": "is the flag that is set to data present which helps the parsing uh to understand",
    "start": "603279",
    "end": "609040"
  },
  {
    "text": "that there is data coming and the actually serialized data is encoded into",
    "start": "609040",
    "end": "614800"
  },
  {
    "text": "the same format that is using corba so this is the second time that we say corba in this presentation uh we are",
    "start": "614800",
    "end": "622320"
  },
  {
    "text": "definitely nostalgics um the common data representation can be in um little",
    "start": "622320",
    "end": "628640"
  },
  {
    "text": "endian or big endian depending on the implementation choices so looking at all this uh it it seems",
    "start": "628640",
    "end": "635120"
  },
  {
    "text": "like natural to implement a desector there is a detector um in wireshark",
    "start": "635120",
    "end": "641600"
  },
  {
    "text": "already but we wanted something more scriptable um so i started to",
    "start": "641600",
    "end": "646880"
  },
  {
    "text": "uh look into skappy and i noticed that there was no rtps layer so i decided to create one and then um with the help of",
    "start": "646880",
    "end": "654880"
  },
  {
    "text": "alias robotics which is also in this project we increased the uh the section",
    "start": "654880",
    "end": "662000"
  },
  {
    "text": "capabilities of this copy layer even though it turned out quite painful",
    "start": "662000",
    "end": "668720"
  },
  {
    "text": "because i i mentioned quickly about the engineers well i figured out after reading the specs",
    "start": "668720",
    "end": "674640"
  },
  {
    "text": "closely that the endiness of each sub-message is independent from the endiness of the other messages and some",
    "start": "674640",
    "end": "680399"
  },
  {
    "text": "of the fields follow that endiness and some other fields are always little indian or all this big endian it's",
    "start": "680399",
    "end": "688000"
  },
  {
    "text": "really really complex to keep track of all of this we cannot simply have a global ndns bit set at the global class",
    "start": "688000",
    "end": "696240"
  },
  {
    "text": "for example we have to keep track of the engines for each of the packets so",
    "start": "696240",
    "end": "701760"
  },
  {
    "text": "in the list of packets that compose an rtps message dispatch it by their type",
    "start": "701760",
    "end": "707680"
  },
  {
    "text": "as i told you at the at the beginning for example the data types will pull out",
    "start": "707680",
    "end": "713120"
  },
  {
    "text": "the rtpsr message data class which which includes the data packet which follows",
    "start": "713120",
    "end": "719279"
  },
  {
    "text": "the uh endianness for uh decoding and so on so here instead of using the default",
    "start": "719279",
    "end": "725040"
  },
  {
    "text": "packet field class i created a subclass it's called e data pack e packet field which",
    "start": "725040",
    "end": "731839"
  },
  {
    "text": "automatically sets the endiness according to the to the to the flags and propagates the engines to",
    "start": "731839",
    "end": "738560"
  },
  {
    "text": "any of the subclass and so on and so on so if you're interested in using it here",
    "start": "738560",
    "end": "743600"
  },
  {
    "text": "is the pull request that hopefully by the end of this presentation uh well sorry when when",
    "start": "743600",
    "end": "749279"
  },
  {
    "text": "this presentation will go live it will be integrated we are working with skype developers to make some tests pass",
    "start": "749279",
    "end": "756399"
  },
  {
    "text": "but it's functional so if you can you can use it even if it's not included into",
    "start": "756399",
    "end": "762000"
  },
  {
    "text": "scuppy yet you can use the the fork that i provided um and use the right way",
    "start": "762000",
    "end": "769760"
  },
  {
    "text": "great so now that we have a good understanding of uh how dds work and how",
    "start": "770639",
    "end": "775920"
  },
  {
    "text": "our tps packets look like uh it's time to start to look for vulnerabilities and",
    "start": "775920",
    "end": "781120"
  },
  {
    "text": "uh yes we we did try and we could go on uh using a network based approach but",
    "start": "781120",
    "end": "786800"
  },
  {
    "text": "given that we have some of the open source implementations out there we decided to do some",
    "start": "786800",
    "end": "793279"
  },
  {
    "text": "application fuzzing as well so here i want to give the floor to talon",
    "start": "793279",
    "end": "799480"
  },
  {
    "text": "so thank you federico telling here now that we had a narrow fastener and know the protocol pretty well we might",
    "start": "800240",
    "end": "806880"
  },
  {
    "text": "want to start fuzzy but before investing time and resources in running a full-blown buzzing campaign",
    "start": "806880",
    "end": "813600"
  },
  {
    "text": "you might want to go the cheap way to see if we're lucky right so we gave it a shot and started with to",
    "start": "813600",
    "end": "821040"
  },
  {
    "text": "fumble with some other fields and in our case we find our one of our",
    "start": "821040",
    "end": "826880"
  },
  {
    "text": "biggest findings by fumbling with this build and it turn out that we have some quite",
    "start": "826880",
    "end": "832160"
  },
  {
    "text": "luck that reminds me of a joke sometimes while doing reverse engineering using screens and vin",
    "start": "832160",
    "end": "839839"
  },
  {
    "text": "would find the things you wanted more quicker than ida pro and in this",
    "start": "839839",
    "end": "845040"
  },
  {
    "text": "case we broke the spec so what we did basically is",
    "start": "845040",
    "end": "850639"
  },
  {
    "text": "we copy the rtps payload from wireshark and paste it into python and using",
    "start": "850639",
    "end": "856800"
  },
  {
    "text": "contours to send them then we randomly fumble with sound of fields",
    "start": "856800",
    "end": "862000"
  },
  {
    "text": "like changing id to non-existing ids which may be changing 11 port to either",
    "start": "862000",
    "end": "869279"
  },
  {
    "text": "very large or very small values or even zeros and what we did is we changed ip to some",
    "start": "869279",
    "end": "876160"
  },
  {
    "text": "random addresses and in our test team we used google dns",
    "start": "876160",
    "end": "883040"
  },
  {
    "text": "to do list because it's very simple to type but it's a very bad thing to do sorry",
    "start": "883040",
    "end": "889440"
  },
  {
    "text": "google but in our testing if we change ips",
    "start": "889440",
    "end": "895440"
  },
  {
    "text": "to some random ips in our case is google we'll see our tested implementations we",
    "start": "895440",
    "end": "902880"
  },
  {
    "text": "started to send our packets like crazy we're kind of confused but it's",
    "start": "902880",
    "end": "909040"
  },
  {
    "text": "apparently that we have found some kind of reflection or amplification attack",
    "start": "909040",
    "end": "915680"
  },
  {
    "text": "and this attack works on all implementations so at this point we believe we have",
    "start": "916399",
    "end": "922639"
  },
  {
    "text": "somehow broken the dds spec and by looking further into a spec it allows",
    "start": "922639",
    "end": "928639"
  },
  {
    "text": "one to write arbitrary ips into the field and there's no any sanity checks or white listing implemented",
    "start": "928639",
    "end": "935759"
  },
  {
    "text": "and there are some implementations that results in less efficient amplifiers",
    "start": "935759",
    "end": "941519"
  },
  {
    "text": "maybe that's because they're on the cautious side",
    "start": "941519",
    "end": "946720"
  },
  {
    "text": "and whereas we understand that some of the implementations are not even interested in this it makes sense",
    "start": "947279",
    "end": "954880"
  },
  {
    "text": "because you have to actually broke the spec in order to be not affected by this",
    "start": "954880",
    "end": "961680"
  },
  {
    "text": "attack and here you can see the demo of our rtps network",
    "start": "961680",
    "end": "968959"
  },
  {
    "text": "reflection",
    "start": "968959",
    "end": "971600"
  },
  {
    "text": "and back to the slides after we found this",
    "start": "974160",
    "end": "980160"
  },
  {
    "text": "we kind of struggled on how to how do we disclose this because it's too big for",
    "start": "980160",
    "end": "985199"
  },
  {
    "text": "us however at the end of the day we found out that it's not an",
    "start": "985199",
    "end": "991120"
  },
  {
    "text": "implementation vulnerability because it affects all the implementation thus it's a spark in the specs because",
    "start": "991120",
    "end": "997600"
  },
  {
    "text": "the auto discovery protocol has to send out these packets however we still believe that is",
    "start": "997600",
    "end": "1003920"
  },
  {
    "text": "something to be taken care of in the next revision of a standard so we have submitted it to the ong",
    "start": "1003920",
    "end": "1011759"
  },
  {
    "text": "we waited for canonical 100 days after we submitted it to the implementations",
    "start": "1011759",
    "end": "1017680"
  },
  {
    "text": "before talking about this at blackhead also as a last resort we also reach out",
    "start": "1017680",
    "end": "1023519"
  },
  {
    "text": "to us icsert for advice",
    "start": "1023519",
    "end": "1027600"
  },
  {
    "text": "anyway on this page you can see a comparative sheet of how",
    "start": "1029280",
    "end": "1034319"
  },
  {
    "text": "implementations work against our attack you can see some implementations they're immune to this",
    "start": "1034319",
    "end": "1040319"
  },
  {
    "text": "attack in the first place because they have imp implement some kind of exponential back off",
    "start": "1040319",
    "end": "1047438"
  },
  {
    "text": "and some of the invitations they have patched it in most recent",
    "start": "1047439",
    "end": "1053360"
  },
  {
    "text": "release and enforce some implementations however",
    "start": "1053360",
    "end": "1058799"
  },
  {
    "text": "they're not interested in patching it",
    "start": "1058799",
    "end": "1062639"
  },
  {
    "text": "so we should get on to white box application browsing if you're using any",
    "start": "1063919",
    "end": "1069679"
  },
  {
    "text": "other open source implementation of dds or you have paid enough money to your",
    "start": "1069679",
    "end": "1074799"
  },
  {
    "text": "vendor then you they might give you a source call so you can do",
    "start": "1074799",
    "end": "1080400"
  },
  {
    "text": "files in other source code but usually while dealing with",
    "start": "1080400",
    "end": "1085919"
  },
  {
    "text": "frameworks with this size you wouldn't even know how to start",
    "start": "1085919",
    "end": "1091679"
  },
  {
    "text": "so we have a message piece here on this page to show you",
    "start": "1091679",
    "end": "1096799"
  },
  {
    "text": "how to think outside the box so take an example",
    "start": "1096799",
    "end": "1102000"
  },
  {
    "text": "when one participant wants to send a data over a network to another participant in",
    "start": "1102000",
    "end": "1108160"
  },
  {
    "text": "dds it will send it and the recipient will",
    "start": "1108160",
    "end": "1113600"
  },
  {
    "text": "do some receiving function and then you'll try to do something and and then it will go to the actual",
    "start": "1113600",
    "end": "1120240"
  },
  {
    "text": "desired section after that it will try to parse the results and pack the results into a data",
    "start": "1120240",
    "end": "1128160"
  },
  {
    "text": "packet and then send it back to the original participant",
    "start": "1128160",
    "end": "1134960"
  },
  {
    "text": "and so the general idea while doing fasting is that you only want to fast what is necessary otherwise you might",
    "start": "1135440",
    "end": "1142400"
  },
  {
    "text": "end up with lots of garbage information and how to find the desired spin",
    "start": "1142400",
    "end": "1149600"
  },
  {
    "text": "you can look into the code for a valid preamble such as for letters rtbs",
    "start": "1149600",
    "end": "1156000"
  },
  {
    "text": "you can look for where is trying to parse headers such as geoid prefix or version",
    "start": "1156000",
    "end": "1163520"
  },
  {
    "text": "you can look for error messages in screens you can look for something like d0 as fail because that's some implementations",
    "start": "1163520",
    "end": "1170880"
  },
  {
    "text": "will show on the screen while you're sending it an embedded packet",
    "start": "1170880",
    "end": "1176160"
  },
  {
    "text": "and you can also try to look for a very big switch case because in some implementations you",
    "start": "1176160",
    "end": "1181280"
  },
  {
    "text": "would use that to determine which handlers to go for a corresponding pids",
    "start": "1181280",
    "end": "1188400"
  },
  {
    "text": "anyway let's go to a quick overview of good fasting targets",
    "start": "1188640",
    "end": "1195120"
  },
  {
    "text": "well you can maybe try to run your implementations and hook it up with gdp and do a back",
    "start": "1195200",
    "end": "1201600"
  },
  {
    "text": "trace and see where which function",
    "start": "1201600",
    "end": "1206880"
  },
  {
    "text": "which has a name of serializer or deserializer or simply look for that in",
    "start": "1206880",
    "end": "1212799"
  },
  {
    "text": "a source code the reason that we focus on the serializer serializer in our research is",
    "start": "1212799",
    "end": "1220000"
  },
  {
    "text": "because we believe humanity cannot build a drug and security serializer",
    "start": "1220000",
    "end": "1225919"
  },
  {
    "text": "as you can see like for languages like java and php they're having problems with serialization all",
    "start": "1226159",
    "end": "1232640"
  },
  {
    "text": "the time and we're still seeing people misusing pickle from python",
    "start": "1232640",
    "end": "1239440"
  },
  {
    "text": "so why not hit the deserizer",
    "start": "1239440",
    "end": "1244240"
  },
  {
    "text": "and from here you can see how to find the corresponding handlers",
    "start": "1245440",
    "end": "1250799"
  },
  {
    "text": "in some of the implementations and here's another one here it is trying to parse through different pids",
    "start": "1250799",
    "end": "1258880"
  },
  {
    "text": "and try to handle data and here you can see it's looking for",
    "start": "1258880",
    "end": "1264480"
  },
  {
    "text": "four letters rtps and go on to further processing",
    "start": "1264480",
    "end": "1272080"
  },
  {
    "text": "anyways you would end up with and pausing hardness like this it's not a very good",
    "start": "1272080",
    "end": "1279120"
  },
  {
    "text": "hardness because it actually would generate some",
    "start": "1279120",
    "end": "1283840"
  },
  {
    "text": "false positives but you get the idea and we did find two vulnerabilities based on this harness",
    "start": "1284159",
    "end": "1292080"
  },
  {
    "text": "for example the one here this is generated by our father",
    "start": "1292080",
    "end": "1297360"
  },
  {
    "text": "this is indeed a slow loris attack what is the lowest is because it has",
    "start": "1297360",
    "end": "1302720"
  },
  {
    "text": "something to do with internal processes of dds",
    "start": "1302720",
    "end": "1307760"
  },
  {
    "text": "anyways here's a complete sheet of what we found",
    "start": "1308400",
    "end": "1313760"
  },
  {
    "text": "where faucet",
    "start": "1313760",
    "end": "1317159"
  },
  {
    "text": "and in some cases you wouldn't even have a source code so what would it do",
    "start": "1321760",
    "end": "1328240"
  },
  {
    "text": "well it is not a problem to us you can throw it into the compiler and debug and find good quality targets but",
    "start": "1328240",
    "end": "1335520"
  },
  {
    "text": "be aware that some of the implementations they have some kind of end user license agreement that you have",
    "start": "1335520",
    "end": "1341200"
  },
  {
    "text": "to be wary of and if you want to do fuzzing well airfl",
    "start": "1341200",
    "end": "1347440"
  },
  {
    "text": "supports camera binary instrumentations so maybe you can use that but we didn't",
    "start": "1347440",
    "end": "1352799"
  },
  {
    "text": "because we found out that there's a wonderful project called afl unicorn",
    "start": "1352799",
    "end": "1357840"
  },
  {
    "text": "it uses unicorn engine under the hood so what it does is that you want to dump",
    "start": "1357840",
    "end": "1364799"
  },
  {
    "text": "the context of gdb in the first place and throw it into fl unicorn it will restore the contacts on every iteration",
    "start": "1364799",
    "end": "1372480"
  },
  {
    "text": "you'll set register and memories and you'll set rfp then start execution",
    "start": "1372480",
    "end": "1379919"
  },
  {
    "text": "and after it started execution you want to insert your fuzzy payload and see if it crashes",
    "start": "1381280",
    "end": "1389080"
  },
  {
    "text": "however there are some challenges you one is very obvious that you must locate",
    "start": "1389679",
    "end": "1396080"
  },
  {
    "text": "the correct function and you have to also implement some memory operation functions because in",
    "start": "1396080",
    "end": "1402880"
  },
  {
    "text": "ftl unicorn it doesn't know external libraries that makes sense so you have to maybe rewrite matlock and",
    "start": "1402880",
    "end": "1409200"
  },
  {
    "text": "means that and implement it in python and because every unicorn supports",
    "start": "1409200",
    "end": "1415520"
  },
  {
    "text": "python so we use python for our function hardness and the speed is not very great",
    "start": "1415520",
    "end": "1421760"
  },
  {
    "text": "and it's also due to how every unicorn works so",
    "start": "1421760",
    "end": "1427679"
  },
  {
    "text": "here you can see it's running very slow",
    "start": "1427679",
    "end": "1431840"
  },
  {
    "text": "however we have came up with the idea to solve a problem which is we shamelessly throw money into the problem",
    "start": "1432799",
    "end": "1439840"
  },
  {
    "text": "well we found out that by using ending machines on amazon cloud is somehow run",
    "start": "1439840",
    "end": "1445840"
  },
  {
    "text": "like two times faster than intel machines this is the biggest one that one can use",
    "start": "1445840",
    "end": "1451520"
  },
  {
    "text": "on amazon cloud without request for capacity increases",
    "start": "1451520",
    "end": "1457279"
  },
  {
    "text": "and we think it's affordable by various means especially tying because we don't have a rewrite hardness",
    "start": "1457279",
    "end": "1464320"
  },
  {
    "text": "in c and to optimize afl unicorn on how context is restored",
    "start": "1464320",
    "end": "1470559"
  },
  {
    "text": "but be wary of some gimmicks we've seen on md servers",
    "start": "1471760",
    "end": "1476799"
  },
  {
    "text": "because it has something to do with speculative execution and some instruction will be compiled into",
    "start": "1476799",
    "end": "1482880"
  },
  {
    "text": "embedded ones so as you can see here's a graph of what we",
    "start": "1482880",
    "end": "1489360"
  },
  {
    "text": "have found with binary fuzzing and let's get back to federico",
    "start": "1489360",
    "end": "1497360"
  },
  {
    "text": "thank you very much talon let's now look into the configurability of dds we said at the",
    "start": "1499600",
    "end": "1505919"
  },
  {
    "text": "beginning that with an xml file one could specify an entire dds system",
    "start": "1505919",
    "end": "1511200"
  },
  {
    "text": "including quality of service security service security settings and so on so parsing xml files is something that",
    "start": "1511200",
    "end": "1519360"
  },
  {
    "text": "covers an important role for dds implementations we found three broad cases one is those",
    "start": "1519360",
    "end": "1526320"
  },
  {
    "text": "vendors that decided to use well-tested xml library which is a good practice",
    "start": "1526320",
    "end": "1532000"
  },
  {
    "text": "the okay way which is vendors that decided to re-implement xml parsing which is can be",
    "start": "1532000",
    "end": "1539120"
  },
  {
    "text": "actually quite good if if it's paired with continuous testing so",
    "start": "1539120",
    "end": "1545760"
  },
  {
    "text": "we found cases where the implementation was almost free from bugs",
    "start": "1545760",
    "end": "1551360"
  },
  {
    "text": "comparable to the first case and the bad way which unfortunately we have found uh",
    "start": "1551360",
    "end": "1557600"
  },
  {
    "text": "only one case of a vendor that was using an xml library that is no longer maintained for",
    "start": "1557600",
    "end": "1564400"
  },
  {
    "text": "more than a decade and while i was working on this without revealing the name of the vendor i",
    "start": "1564400",
    "end": "1569840"
  },
  {
    "text": "tweeted because i was a bit frustrated to find this in 2021 and",
    "start": "1569840",
    "end": "1575679"
  },
  {
    "text": "i figured i wasn't the only one having found that library the library is called x easy xml",
    "start": "1575679",
    "end": "1582559"
  },
  {
    "text": "which is a port of xml's um library of php into c",
    "start": "1582559",
    "end": "1589840"
  },
  {
    "text": "right and it seems that many routers firmwares are based on the same library",
    "start": "1589840",
    "end": "1595120"
  },
  {
    "text": "according to what richard johnson has found has found and we also have found this dds vendor",
    "start": "1595120",
    "end": "1601919"
  },
  {
    "text": "that i will reveal the name in a few slides that uses uh this library from 2006",
    "start": "1601919",
    "end": "1608720"
  },
  {
    "text": "which is unmaintained even the the the mailing list is dead",
    "start": "1608720",
    "end": "1613760"
  },
  {
    "text": "and the the latest version was 0.8.5 and this vendor has renamed it into",
    "start": "1613760",
    "end": "1620320"
  },
  {
    "text": "1.0.0 leaving everything else of the code untouched including bugs of course",
    "start": "1620320",
    "end": "1627440"
  },
  {
    "text": "for other vendors it was enough to use radamsa plus some scripting",
    "start": "1627440",
    "end": "1633039"
  },
  {
    "text": "and that allowed us to find three interesting cases in rti",
    "start": "1633039",
    "end": "1639120"
  },
  {
    "text": "um one case could allow the attacker to partially override the",
    "start": "1639120",
    "end": "1644960"
  },
  {
    "text": "instruction pointer which is uh good and another case allows partial",
    "start": "1644960",
    "end": "1652159"
  },
  {
    "text": "control of the stack up to the environment variables",
    "start": "1652159",
    "end": "1657760"
  },
  {
    "text": "here is a table with the updated cases i highlight and reveal now the name of",
    "start": "1657760",
    "end": "1663360"
  },
  {
    "text": "that vendor that used the unmaintained library which happens to be the vendor that",
    "start": "1663360",
    "end": "1668559"
  },
  {
    "text": "we haven't been able to uh talk to it's the only one that has never responded to",
    "start": "1668559",
    "end": "1673760"
  },
  {
    "text": "more than five uh attempts to contact uh to contact them through the um",
    "start": "1673760",
    "end": "1680000"
  },
  {
    "text": "vulnerability brokers such as edi through the korean cert and through um",
    "start": "1680000",
    "end": "1686399"
  },
  {
    "text": "two personal emails that we send to the support they don't have a security contact",
    "start": "1686399",
    "end": "1693039"
  },
  {
    "text": "okay so now it's time to quickly look at the attacker and threat model just to contextualize our findings",
    "start": "1693039",
    "end": "1702080"
  },
  {
    "text": "dds is a local system is situated deep in the control network and",
    "start": "1702080",
    "end": "1708559"
  },
  {
    "text": "i would not expect to find any exposed dds node we checked we scanned we mass",
    "start": "1708559",
    "end": "1713679"
  },
  {
    "text": "scanned the ip space for a few times but we haven't found any exposed dds nodes",
    "start": "1713679",
    "end": "1719120"
  },
  {
    "text": "maybe with the um with in the future we will see more and more rost2 implementations some of some",
    "start": "1719120",
    "end": "1727120"
  },
  {
    "text": "of them may um go public for for for design or for mistakes",
    "start": "1727120",
    "end": "1733919"
  },
  {
    "text": "uh so we might find some dds exposed nodes in the future but i would say that",
    "start": "1733919",
    "end": "1739200"
  },
  {
    "text": "dds from an attacker's 10 points dds is more for local",
    "start": "1739200",
    "end": "1744480"
  },
  {
    "text": "attack opportunities such as discovery of other endpoints or lateral movements and",
    "start": "1744480",
    "end": "1750399"
  },
  {
    "text": "why not from a malware writer standpoint could be a good",
    "start": "1750399",
    "end": "1756080"
  },
  {
    "text": "a good protocol to implement a cnc system",
    "start": "1756080",
    "end": "1760720"
  },
  {
    "text": "speaking about remote remotely exposed systems it might be the case that in the",
    "start": "1762080",
    "end": "1767840"
  },
  {
    "text": "future we will see integration services being exposed integration services are",
    "start": "1767840",
    "end": "1773520"
  },
  {
    "text": "an add-on component of dds is not a standardized part that most of the",
    "start": "1773520",
    "end": "1778640"
  },
  {
    "text": "vendors offer to bridge several dds systems together that are remote or",
    "start": "1778640",
    "end": "1785520"
  },
  {
    "text": "in different network segments i would say that it would be good to see in the future more agreement among vendors",
    "start": "1785520",
    "end": "1791840"
  },
  {
    "text": "about using integration services and maybe why not some standardization efforts",
    "start": "1791840",
    "end": "1798320"
  },
  {
    "text": "because that's the way the proper way to integrate different ddr systems and we have seen on the",
    "start": "1798320",
    "end": "1804000"
  },
  {
    "text": "other hand that when these services are not part of the dds implementation",
    "start": "1804000",
    "end": "1809840"
  },
  {
    "text": "system integrators tend to use custom-made solutions which do not offer the same",
    "start": "1809840",
    "end": "1815600"
  },
  {
    "text": "guarantees of an integration service which allows control of who is talking who can talk",
    "start": "1815600",
    "end": "1822159"
  },
  {
    "text": "to whom and and how to conclude i would like to",
    "start": "1822159",
    "end": "1827440"
  },
  {
    "text": "mention um a few words about mitigation and disclosure",
    "start": "1827440",
    "end": "1833440"
  },
  {
    "text": "when we're talking about critical software components such as dds",
    "start": "1833440",
    "end": "1838880"
  },
  {
    "text": "talking about mitigation is already too late because most of the times we cannot simply patch we don't even know where",
    "start": "1838880",
    "end": "1844880"
  },
  {
    "text": "the systems are because it's a library that is going to be incorporated into many systems so uh",
    "start": "1844880",
    "end": "1852320"
  },
  {
    "text": "if if if i get asked what about mitigation i usually say it's too late well mitigation starts with a good",
    "start": "1852320",
    "end": "1859279"
  },
  {
    "text": "disclosure in these cases so that's why we decided to start a little bit differently this time with this project",
    "start": "1859279",
    "end": "1865840"
  },
  {
    "text": "instead of notifying the vendors only when we had findings we had started",
    "start": "1865840",
    "end": "1871519"
  },
  {
    "text": "to find contacts with vendors before starting to to find vulnerabilities we",
    "start": "1871519",
    "end": "1877840"
  },
  {
    "text": "wanted to find to establish a good relationship and so on",
    "start": "1877840",
    "end": "1883039"
  },
  {
    "text": "so the question is is this transparency paid back or not in some cases it worked very well i",
    "start": "1883039",
    "end": "1889840"
  },
  {
    "text": "would say and that's the case of adlink which is now on stage with us giving this talk",
    "start": "1889840",
    "end": "1896000"
  },
  {
    "text": "which even helped us to write some fuzzing harnesses and to improve existing fuzzing harnesses so i would",
    "start": "1896000",
    "end": "1902399"
  },
  {
    "text": "say big round of applause to adlink and what didn't work well well you saw that vendor that has never responded not",
    "start": "1902399",
    "end": "1909919"
  },
  {
    "text": "even to five times consecutive times trying to find a contact",
    "start": "1909919",
    "end": "1915840"
  },
  {
    "text": "this shouldn't happen for critical software i would say so um the question that i leave here for",
    "start": "1915840",
    "end": "1922159"
  },
  {
    "text": "the audience is should we be treating vendors less like black boxes during the",
    "start": "1922159",
    "end": "1927600"
  },
  {
    "text": "disclosure process and make the um the process more cooperative instead of",
    "start": "1927600",
    "end": "1934799"
  },
  {
    "text": "just a coordination process that triggers that starts when there are some discoveries",
    "start": "1934799",
    "end": "1942799"
  },
  {
    "text": "for future work and conclusions i would like to say that we just scratched the",
    "start": "1943360",
    "end": "1948559"
  },
  {
    "text": "surface because dds implementations are many there are six certified ones but there",
    "start": "1948559",
    "end": "1954720"
  },
  {
    "text": "might be more non-certified ones um the code base is large the",
    "start": "1954720",
    "end": "1960399"
  },
  {
    "text": "the smallest the smallest codebase still take minutes to compile so",
    "start": "1960399",
    "end": "1966640"
  },
  {
    "text": "it's a complex system we need more researchers to look into and we need implementers to be more",
    "start": "1966640",
    "end": "1974559"
  },
  {
    "text": "cooperative so don't be afraid and just reach out um as for future work there is lots of",
    "start": "1974559",
    "end": "1981039"
  },
  {
    "text": "other targets that we haven't looked at we decided to focus on the core to start with there are",
    "start": "1981039",
    "end": "1987600"
  },
  {
    "text": "x types which is the type extension system there is dds security there is integration services that i quickly",
    "start": "1987600",
    "end": "1994080"
  },
  {
    "text": "mentioned earlier those need uh security experts to look at",
    "start": "1994080",
    "end": "2001120"
  },
  {
    "text": "so to conclude as any traditional blacker presentation it has to conclude with sound bytes",
    "start": "2001120",
    "end": "2007760"
  },
  {
    "text": "uh the data distribution service or dds is a crucial protocol for um",
    "start": "2007760",
    "end": "2013279"
  },
  {
    "text": "the connected world i would say uh i know it's a buzzword but it's more prevalent than",
    "start": "2013279",
    "end": "2020240"
  },
  {
    "text": "we we know we discovered vulnerabilities in most of the implementations and some of the",
    "start": "2020240",
    "end": "2026240"
  },
  {
    "text": "vulnerabilities were even affecting the specifications so we are working on that to get it fixed at the spec level",
    "start": "2026240",
    "end": "2033360"
  },
  {
    "text": "and as part of this presentation we release an open source layer to parse and",
    "start": "2033360",
    "end": "2039039"
  },
  {
    "text": "generate sorry to parse and forge dvs and rtps packets as part of scopy",
    "start": "2039039",
    "end": "2044960"
  },
  {
    "text": "and we also release the fuzzing harnesses that we are currently integrating into the google oss files",
    "start": "2044960",
    "end": "2050720"
  },
  {
    "text": "initiative so we encourage other researchers to do the same thank you very much for following and",
    "start": "2050720",
    "end": "2056800"
  },
  {
    "text": "let's open the floor for questions now [Music]",
    "start": "2056800",
    "end": "2065040"
  },
  {
    "text": "[Applause]",
    "start": "2065040",
    "end": "2068179"
  }
]