[
  {
    "start": "0",
    "end": "100000"
  },
  {
    "text": "uh all right everyone um before we begin a few quick notes that you've probably heard uh several times before um just a",
    "start": "240",
    "end": "5879"
  },
  {
    "text": "reminder to stop by the business Hall and basite ab during the day and for the welcome reception at 1730 to 1900",
    "start": "5879",
    "end": "11960"
  },
  {
    "text": "tonight um black hat Arsenal has always got cool stuff so check that out in the Palm fory year on level three um make",
    "start": "11960",
    "end": "17920"
  },
  {
    "text": "sure you join us for the pony Awards tonight man Mandalay BCD at 6:30 uh",
    "start": "17920",
    "end": "23000"
  },
  {
    "text": "lastly please put your phone on vibrates and join me in welcoming our speakers",
    "start": "23000",
    "end": "28470"
  },
  {
    "text": "[Applause]",
    "start": "28470",
    "end": "33040"
  },
  {
    "text": "all right so we're going to talk about Amazon today any Amazon fox in the room by the",
    "start": "34440",
    "end": "42600"
  },
  {
    "text": "way all right so my name is Dan Amiga I'm the co-founder and CTO of fireglass door is",
    "start": "42600",
    "end": "50239"
  },
  {
    "text": "our security research team leader and um this is so this talk is kind of a recap",
    "start": "50239",
    "end": "59280"
  },
  {
    "text": "on the resour that we've done so fireless and fireless we're building a",
    "start": "59280",
    "end": "64799"
  },
  {
    "text": "um secure isolation solution both on Prem and in the cloud and",
    "start": "64799",
    "end": "70840"
  },
  {
    "text": "um part of our design criteria when we do these things inhouse is we assume",
    "start": "70840",
    "end": "76799"
  },
  {
    "text": "breach right so as we as we built our Cloud infrastructure and as we've built",
    "start": "76799",
    "end": "82040"
  },
  {
    "text": "our Cloud deployment right it was very important for US based on this assume",
    "start": "82040",
    "end": "87520"
  },
  {
    "text": "breached uh already breached approach uh to see how can we um you know what",
    "start": "87520",
    "end": "94280"
  },
  {
    "text": "attackers can do what they can't do and kind of like learn about that and the the the concept that we had in mind uh",
    "start": "94280",
    "end": "102920"
  },
  {
    "start": "100000",
    "end": "142000"
  },
  {
    "text": "was uh I know how many of you guys know about Cod spaces Cod spaces was a software as a service company uh which",
    "start": "102920",
    "end": "109560"
  },
  {
    "text": "had to shut down and the story behind the scenes was that attackers actually got access to their um AWS security keys",
    "start": "109560",
    "end": "118399"
  },
  {
    "text": "and um the these guys didn't want to pay the attackers to leave the account so",
    "start": "118399",
    "end": "123479"
  },
  {
    "text": "they started to uh stop instances right so they started to remove the attackers",
    "start": "123479",
    "end": "128879"
  },
  {
    "text": "credentials but then the attackers actually spotted that and they basically terminated every instance in the account",
    "start": "128879",
    "end": "135360"
  },
  {
    "text": "every S3 bucket everything like that and these guys couldn't survive so the domain is for sale so what we've done",
    "start": "135360",
    "end": "142280"
  },
  {
    "start": "142000",
    "end": "184000"
  },
  {
    "text": "actually in in fire glass internally is we have about 25 engineers and we played",
    "start": "142280",
    "end": "147599"
  },
  {
    "text": "hide and seek so every engineer got access keys to an environment which we later",
    "start": "147599",
    "end": "153680"
  },
  {
    "text": "revoked and what we did is we interviewed and researched what were the things these guys did in order to stay",
    "start": "153680",
    "end": "160280"
  },
  {
    "text": "undetected to stay persistent in the account even though the access keys were revoked and and so on right so pretty",
    "start": "160280",
    "end": "166599"
  },
  {
    "text": "pretty interesting so what we're going to talk to you about today is actually uh the infection phase how what attackers",
    "start": "166599",
    "end": "173519"
  },
  {
    "text": "should do or doing in order to survive and persist in the account uh remain undetected stuff like that very",
    "start": "173519",
    "end": "180640"
  },
  {
    "text": "practical uh things you can do today and just a a very quick intro for",
    "start": "180640",
    "end": "187400"
  },
  {
    "start": "184000",
    "end": "279000"
  },
  {
    "text": "those of you who are not 100% endson on AWS well you know computer is a service",
    "start": "187400",
    "end": "193239"
  },
  {
    "text": "right where you can spin up a computer storage or or uh Yas resources or P",
    "start": "193239",
    "end": "198840"
  },
  {
    "text": "resources databases and so on and the interesting point is that everything in AWS is can be controlled or automated",
    "start": "198840",
    "end": "207640"
  },
  {
    "text": "via an HTTP call right right so in fact there's a saying uh within Engineers",
    "start": "207640",
    "end": "214280"
  },
  {
    "text": "within software Engineers that if you're doing things in AWS through the console you're not doing them the right way so",
    "start": "214280",
    "end": "219840"
  },
  {
    "text": "you should do everything through an API so because everything is exposed through a public API right um if someone grabs a",
    "start": "219840",
    "end": "228120"
  },
  {
    "text": "hold of the AWS access tokens or access Keys uh you're you're in a big trouble",
    "start": "228120",
    "end": "234319"
  },
  {
    "text": "so the way that AWS manages access Keys users permissions and policy and all of",
    "start": "234319",
    "end": "240360"
  },
  {
    "text": "the identity management story is via a service that is called I IM or identity",
    "start": "240360",
    "end": "245720"
  },
  {
    "text": "access management so as an attacker what I'd like to do is actually try to understand how can I remain in the",
    "start": "245720",
    "end": "252200"
  },
  {
    "text": "account even after admins have revoked my credentials in I IM and then the",
    "start": "252200",
    "end": "258440"
  },
  {
    "text": "second service that we're going to look at today is cloud trail which actually audits every HTP call every API call you",
    "start": "258440",
    "end": "265440"
  },
  {
    "text": "make into AWS and as an attacker what I'd like to do is stay undetected so I don't want my operations to be logged in",
    "start": "265440",
    "end": "272680"
  },
  {
    "text": "in in cloud trail so we'll start with uh the first thing that we want to start with is is",
    "start": "272680",
    "end": "278800"
  },
  {
    "text": "the infection phase so just just to go really quickly over uh the different uh",
    "start": "278800",
    "end": "285039"
  },
  {
    "start": "279000",
    "end": "389000"
  },
  {
    "text": "things that attackers could do in order to gain access into an AWS account and we divided this into three categories",
    "start": "285039",
    "end": "291320"
  },
  {
    "text": "first would be user fault infection uh the second would be AWS specific",
    "start": "291320",
    "end": "296560"
  },
  {
    "text": "infections and the third would be third party services that's actually we have some actually uh pretty interesting",
    "start": "296560",
    "end": "302360"
  },
  {
    "text": "stories for you so user fault infections um starting with infected machines",
    "start": "302360",
    "end": "308320"
  },
  {
    "text": "either remote access Trojans that was targeted in advance towards AWS admins",
    "start": "308320",
    "end": "315120"
  },
  {
    "text": "right uh or maybe a men in the browser like a browser extension that start as a friendly browser extension but then",
    "start": "315120",
    "end": "320800"
  },
  {
    "text": "later uh transforms into something malicious those are lot of helper browser browser utilities plenty of",
    "start": "320800",
    "end": "326800"
  },
  {
    "text": "fishing attacks that are targeted towards WS administrators so things like your instance is about to be retired in",
    "start": "326800",
    "end": "333800"
  },
  {
    "text": "an email please log into the console and that that leads to a fishing attack uh",
    "start": "333800",
    "end": "338840"
  },
  {
    "text": "some of those fishing attacks actually have actually have the AWS SSL certificate because you can host static",
    "start": "338840",
    "end": "345360"
  },
  {
    "text": "content on top of S3 right uh so you see the same favon the same SSL or similar",
    "start": "345360",
    "end": "351039"
  },
  {
    "text": "SSL certificate and there's tons of source uh source code repository errors",
    "start": "351039",
    "end": "356600"
  },
  {
    "text": "right so you've got your devs actually pushing in code to public repositories so I've been I've been I've actually",
    "start": "356600",
    "end": "361960"
  },
  {
    "text": "been teaching uh cloud computing um for about six years to University students",
    "start": "361960",
    "end": "367080"
  },
  {
    "text": "so I thought about I would say um 1,200 students in the past four or five years",
    "start": "367080",
    "end": "373639"
  },
  {
    "text": "and source code repository is something that you I thought that's only student things only stuff that you see with",
    "start": "373639",
    "end": "380360"
  },
  {
    "text": "education that they make a mistake but we when we show this presentation we actually got a lot of feedback so you",
    "start": "380360",
    "end": "385680"
  },
  {
    "text": "should watch out on what's being checked in a second category of infection uh is",
    "start": "385680",
    "end": "391720"
  },
  {
    "start": "389000",
    "end": "528000"
  },
  {
    "text": "infection through AWS there has been some talks in blackhead in the past about things like Cloud metadata right",
    "start": "391720",
    "end": "397599"
  },
  {
    "text": "RFC Cloud RFC um so basically if you have an application that can the attacker could actually convince to make",
    "start": "397599",
    "end": "404280"
  },
  {
    "text": "HTTP requests on its behalf uh it will actually be able to access the cloud metadata service that's only accessible",
    "start": "404280",
    "end": "410479"
  },
  {
    "text": "from your E2 instance or from your AWS resources and it's an easy way to get uh",
    "start": "410479",
    "end": "416400"
  },
  {
    "text": "the uh uh access keys back right uh you know the online presentation to preny",
    "start": "416400",
    "end": "421960"
  },
  {
    "text": "just went through a similar attack uh another thing another topic that's worth mentioning is poison Amis so as an",
    "start": "421960",
    "end": "428560"
  },
  {
    "text": "attacker I can go ahead and provision an Ami and spin it up as a public Ami and then use some sort of fishing techniques",
    "start": "428560",
    "end": "434840"
  },
  {
    "text": "to actually convince admins to spin up Ami an Ami in their environment the",
    "start": "434840",
    "end": "440039"
  },
  {
    "text": "third topic is something very very interesting I don't know if you guys know but there's a lot of uh AWS is",
    "start": "440039",
    "end": "446120"
  },
  {
    "text": "doing a great work with startups and one of the things they're doing is they're giving incentive programs so for",
    "start": "446120",
    "end": "452039"
  },
  {
    "text": "instance we got like 150k US dollars right of um um credits just to start",
    "start": "452039",
    "end": "458319"
  },
  {
    "text": "working on AWS and the interesting thing with this is that now you have tons of",
    "start": "458319",
    "end": "464240"
  },
  {
    "text": "startups or tons of small organizations that by the nature of startups uh they",
    "start": "464240",
    "end": "469319"
  },
  {
    "text": "either pavot right or uh they close shop and then what they do is you've got it",
    "start": "469319",
    "end": "474800"
  },
  {
    "text": "admins with hund with a $100,000 of credits in AWS right so what these guys are doing it's",
    "start": "474800",
    "end": "481599"
  },
  {
    "text": "kind of like a black market is they're selling it right so you can buy an AWS account with $100,000 right for 20 grand",
    "start": "481599",
    "end": "489960"
  },
  {
    "text": "right now the problem is you just saved a lot of money but the problem is that there's no reset button in",
    "start": "489960",
    "end": "496599"
  },
  {
    "text": "AWS so if you just purchased an account right or from some reason if you just got access to someone's else account in",
    "start": "496599",
    "end": "502960"
  },
  {
    "text": "a very valid way just to transform of ownership there's no way to actually go ahead and iterate through all of the",
    "start": "502960",
    "end": "509120"
  },
  {
    "text": "data centers all of the different regions all of the different apis and try to remove stuff right so you might",
    "start": "509120",
    "end": "514640"
  },
  {
    "text": "leave stuff like uh spot instances that will be later uh invoked or SNS",
    "start": "514640",
    "end": "520680"
  },
  {
    "text": "notifications in Tokyo which is a region you didn't even you forgot to iterate on right so account jumping is pretty is",
    "start": "520680",
    "end": "527240"
  },
  {
    "text": "pretty cool and the third thing in terms of infection is infection through third party services and that's that's very",
    "start": "527240",
    "end": "533880"
  },
  {
    "start": "528000",
    "end": "648000"
  },
  {
    "text": "important to mention that you're only as secure right as your third party service you're using and and what's interesting",
    "start": "533880",
    "end": "539959"
  },
  {
    "text": "with AWS is there's a whole ecosystem around AWS like application uh",
    "start": "539959",
    "end": "545399"
  },
  {
    "text": "performance and monitoring tools and stuff like that so as an as an admin what I'm going to do is I'm going to",
    "start": "545399",
    "end": "551000"
  },
  {
    "text": "give credentials like a read only access keys to companies like data dog U we're",
    "start": "551000",
    "end": "556920"
  },
  {
    "text": "we're a big fan of data dog we're using data dog and uh and what happens is if somebody hacks into Data dog then you go",
    "start": "556920",
    "end": "563920"
  },
  {
    "text": "your keys just licked out right but this is just readon keys right what I want to",
    "start": "563920",
    "end": "568959"
  },
  {
    "text": "show you I want to talk about something else uh that we've seen um which is we've followed all of the best practices",
    "start": "568959",
    "end": "575079"
  },
  {
    "text": "in terms of how to spin up Compu in AWS but we still got our production Keys licked right obviously part of the",
    "start": "575079",
    "end": "581600"
  },
  {
    "text": "research so what happened is in AWS if you want to spin up a doal container and",
    "start": "581600",
    "end": "586959"
  },
  {
    "text": "you want that dock container to be stateless right which which makes sense what you do is you create a test",
    "start": "586959",
    "end": "592640"
  },
  {
    "text": "definition and in that AWS test definition uh you actually provide the a the the access keys",
    "start": "592640",
    "end": "600279"
  },
  {
    "text": "and you provide those through an environment through environment variables all of this is best practice",
    "start": "600279",
    "end": "605720"
  },
  {
    "text": "what's going to happen is once you spin up a docket with that task definition that will be picked up by cloudt tril",
    "start": "605720",
    "end": "611640"
  },
  {
    "text": "right and Cloud tril will actually log that out and send it to companies like data dog and there you go my environment",
    "start": "611640",
    "end": "617839"
  },
  {
    "text": "variables that contained my production access keys are now in data dog now just to give you a sense of how real this",
    "start": "617839",
    "end": "623959"
  },
  {
    "text": "thing is just a few weeks ago uh data dog just emailed most of the customers including us and they go like you guys",
    "start": "623959",
    "end": "630079"
  },
  {
    "text": "have to rotate your keys because we've been hacked so you're only as secure as the third party Services you're using so",
    "start": "630079",
    "end": "636120"
  },
  {
    "text": "I guess the bottom line is you should when you put when you uh design and work with AWS you should plan the day the day",
    "start": "636120",
    "end": "643480"
  },
  {
    "text": "after you get breached right there's plenty of infection possibilities the next topic I'd like to talk about is",
    "start": "643480",
    "end": "650399"
  },
  {
    "start": "648000",
    "end": "715000"
  },
  {
    "text": "survival from an attacker's perspective so I just got myself a pair of access tokens right I can go ahead and do AP do",
    "start": "650399",
    "end": "658279"
  },
  {
    "text": "uh API calls inside AWS the question is what happens again I'm going a tackle",
    "start": "658279",
    "end": "664560"
  },
  {
    "text": "now what happens if it just spotted me and they're going to remove my access",
    "start": "664560",
    "end": "669920"
  },
  {
    "text": "keys so what we're going to see is we're going to see something very interesting that we discovered as part of our",
    "start": "669920",
    "end": "675519"
  },
  {
    "text": "research which is we're going to we're going to show you how we still remain in control in the account and we're able to",
    "start": "675519",
    "end": "680880"
  },
  {
    "text": "do uh AWS calls even after those access keys are deleted right uh and what we're",
    "start": "680880",
    "end": "688160"
  },
  {
    "text": "going to do is we're going to use a service in AWS called STS or security token Service uh this manages a lot of",
    "start": "688160",
    "end": "695279"
  },
  {
    "text": "the uh Federation a lot of the temporary soci session tokens and what what you can do with STDs is you can generate a",
    "start": "695279",
    "end": "702000"
  },
  {
    "text": "temporary soci session token and that actually remains valid",
    "start": "702000",
    "end": "707639"
  },
  {
    "text": "after the original session token the original token gets deleted and um so",
    "start": "707639",
    "end": "713360"
  },
  {
    "text": "let me let me jump really to a quick real demo so what I'm going to do is uh I'm going to work with a let me",
    "start": "713360",
    "end": "720279"
  },
  {
    "start": "715000",
    "end": "1008000"
  },
  {
    "text": "spin up um a terminal and go ahead and show",
    "start": "720279",
    "end": "726920"
  },
  {
    "text": "you that we're working with a set of credentials uh in AWS and we can",
    "start": "726920",
    "end": "732440"
  },
  {
    "text": "actually make holes right so we can go ahead and do uh STS get color identity",
    "start": "732440",
    "end": "737600"
  },
  {
    "text": "that will actually invoke a method over AWS and show us what is the identity and",
    "start": "737600",
    "end": "743800"
  },
  {
    "text": "we're working under David right and in a few minutes right the organiz ation that",
    "start": "743800",
    "end": "750160"
  },
  {
    "text": "the organization would actually delete so I'm going to be I'm going to be the I'm going to delete the sky",
    "start": "750160",
    "end": "755760"
  },
  {
    "text": "credentials so as an attacko what I can do is right I can actually go ahead and",
    "start": "755760",
    "end": "760959"
  },
  {
    "text": "get a session ident and get a session token right and I can actually say that uh",
    "start": "760959",
    "end": "768160"
  },
  {
    "text": "this thing would be valid for about 36",
    "start": "768160",
    "end": "773880"
  },
  {
    "text": "hours so that's my session token I'm going to jump really quickly to the terminal so you guys can copy it and use",
    "start": "773880",
    "end": "779800"
  },
  {
    "text": "it in my account and what I'm going to do is um I'm going to go to do the",
    "start": "779800",
    "end": "785040"
  },
  {
    "text": "identity and access management service and I'm going to go into",
    "start": "785040",
    "end": "790199"
  },
  {
    "text": "David and I'm going to actually delete this guy's credentials so I'm going to delete this",
    "start": "790199",
    "end": "796399"
  },
  {
    "text": "specific access key uh that I'm using so now if I go back",
    "start": "796399",
    "end": "802800"
  },
  {
    "text": "and I make the same call again right I got an right because I'm",
    "start": "802800",
    "end": "808920"
  },
  {
    "text": "using using the the old token but what I can do is I can actually go ahead and",
    "start": "808920",
    "end": "814560"
  },
  {
    "text": "configure my environment right to actually use the temporary s session token that I got so",
    "start": "814560",
    "end": "821639"
  },
  {
    "text": "I'm going to get the access key here and I'm going to get the secret",
    "start": "821639",
    "end": "828639"
  },
  {
    "text": "access key and then I'm going to use this Tempo",
    "start": "828639",
    "end": "836000"
  },
  {
    "text": "recession token",
    "start": "836000",
    "end": "839399"
  },
  {
    "text": "and I'm going to paste it in here so it's not something that's actually supported as part of",
    "start": "844839",
    "end": "850399"
  },
  {
    "text": "the utility itself right are you following am I good",
    "start": "850399",
    "end": "855759"
  },
  {
    "text": "so now what I'm going to do is I'm going to get the color identity again only this time right I was",
    "start": "855759",
    "end": "861800"
  },
  {
    "text": "actually able to make that API reest although I don't have any access Keys anymore right that's temporary session",
    "start": "861800",
    "end": "866880"
  },
  {
    "text": "key which is not affiliated by Amazon's design with the original security key so",
    "start": "866880",
    "end": "873000"
  },
  {
    "text": "I can do a lot of things here right so I can go ahead and let's take a look at what are the",
    "start": "873000",
    "end": "878040"
  },
  {
    "text": "instances that are currently running in the account and remember from an IT perspective from the customer",
    "start": "878040",
    "end": "883880"
  },
  {
    "text": "perspective from the account perspective I no longer have I no longer have any",
    "start": "883880",
    "end": "889079"
  },
  {
    "text": "any credentials whatsoever so I can go ahead and use the temporary session token to actually see that I have",
    "start": "889079",
    "end": "895079"
  },
  {
    "text": "instances running I can query a lot of things inside the account there's some stuff that I cannot do with a temporary",
    "start": "895079",
    "end": "902399"
  },
  {
    "text": "session token like if I try to actually uh list users on the specific IM account",
    "start": "902399",
    "end": "909959"
  },
  {
    "text": "right uh that's going to be challenging uh if this guy has multiactor authentication enabl right so there's",
    "start": "909959",
    "end": "917320"
  },
  {
    "text": "there's there's quite some things that I cannot do but stopping instances starting instances S3 a lot of the",
    "start": "917320",
    "end": "922680"
  },
  {
    "text": "things in the API stuff that I can do and then what I could have done also",
    "start": "922680",
    "end": "928680"
  },
  {
    "text": "is when I had the original access access Keys what I could have done is I could actually create an ec2 instance that",
    "start": "928680",
    "end": "935600"
  },
  {
    "text": "assumes a high privilege Ro that's associated with an instance profile that has permissions production",
    "start": "935600",
    "end": "942519"
  },
  {
    "text": "permissions and then as an attacker right now what I can do is I can actually start that instance if it was",
    "start": "942519",
    "end": "947560"
  },
  {
    "text": "stopped I can change the security groups if it was blocked from the outside and I could always SSH right back to back to",
    "start": "947560",
    "end": "955440"
  },
  {
    "text": "an ec2 machine and then now what I can do is I can do STS get col identity",
    "start": "955440",
    "end": "964079"
  },
  {
    "text": "again and this time this guy is I'm now running with production role so I can go ahead and even do stuff",
    "start": "966160",
    "end": "973920"
  },
  {
    "text": "like um list users right and I can go",
    "start": "973920",
    "end": "979199"
  },
  {
    "text": "ahead and create administrative permissions and do a lot of things right so it's not just about um it's not just",
    "start": "979199",
    "end": "986680"
  },
  {
    "text": "about surviving right it's also about a of Privileges and things I can do so if I do these things really quickly right",
    "start": "986680",
    "end": "994079"
  },
  {
    "text": "um there's a good chance that I can do that before the organization actually understands that my cred that his",
    "start": "994079",
    "end": "1000040"
  },
  {
    "text": "credentials were stolen all right so with that what I'm going to do is I'm",
    "start": "1000040",
    "end": "1008440"
  },
  {
    "text": "gonna pass the mic over to door and door is gonna show you everything from now on",
    "start": "1008440",
    "end": "1014680"
  },
  {
    "text": "based on this temporary session token so we don't have we allegedly we shouldn't have any permissions right so far",
    "start": "1014680",
    "end": "1023959"
  },
  {
    "text": "right hi so now that we know that we can survive cure rotation or deletion the",
    "start": "1024160",
    "end": "1031640"
  },
  {
    "text": "next attacker's objective will be to remain undetected to stay under Cloud Sals radar so we divided this part of",
    "start": "1031640",
    "end": "1040038"
  },
  {
    "text": "the session into three categories the first is how we can do it by altering",
    "start": "1040039",
    "end": "1046120"
  },
  {
    "text": "cloud trail directly the second is how we can do it by uttering the S3 bucket",
    "start": "1046120",
    "end": "1052160"
  },
  {
    "text": "where Cloud saves its log files and the third is that we can interfere with the",
    "start": "1052160",
    "end": "1058360"
  },
  {
    "text": "encryption process of the log files so the obvious way to do it will",
    "start": "1058360",
    "end": "1064039"
  },
  {
    "text": "be simply delete cloud trail or instead of dating cloud trail stop the logging",
    "start": "1064039",
    "end": "1070160"
  },
  {
    "text": "do whatever you want in the account and then resume the logging so when you stop Cloud rail it",
    "start": "1070160",
    "end": "1077039"
  },
  {
    "text": "stops the login immediately it does not give time to the administrator to review",
    "start": "1077039",
    "end": "1082559"
  },
  {
    "text": "this suspicious activity so even though that the administr the administrator",
    "start": "1082559",
    "end": "1087960"
  },
  {
    "text": "might be actively monitoring these two API calls he still don't know what happened in the account he need to go to",
    "start": "1087960",
    "end": "1094320"
  },
  {
    "text": "every region and do every service within those regions and understand what happened this is frustrating",
    "start": "1094320",
    "end": "1102159"
  },
  {
    "text": "job a more elegant way to do it would be to disable the multi- region option so",
    "start": "1102159",
    "end": "1109159"
  },
  {
    "text": "only the region where cloud trail has been configured originally will continue",
    "start": "1109159",
    "end": "1114240"
  },
  {
    "text": "to collect Trails will continue to collect API calls this is more likely that",
    "start": "1114240",
    "end": "1120320"
  },
  {
    "text": "administrator not you know this is not",
    "start": "1120320",
    "end": "1125880"
  },
  {
    "text": "monitoring and it might be a good option for an attacker we can move our efforts to the",
    "start": "1125880",
    "end": "1132760"
  },
  {
    "text": "S3 bucket where Cloud saves its loog files so every five minutes Cloud save a",
    "start": "1132760",
    "end": "1137960"
  },
  {
    "text": "loog file to three buckets with all the API call we can set up a S3 life cycle",
    "start": "1137960",
    "end": "1143840"
  },
  {
    "text": "policy so that instead of moving them to Glacier like to a cheaper storage we can",
    "start": "1143840",
    "end": "1150360"
  },
  {
    "text": "just delete the files so the administrator remain with 24 hours of logging that's it although 24 hours is",
    "start": "1150360",
    "end": "1159080"
  },
  {
    "text": "not much we can we can come out we can come up with a better solution to this",
    "start": "1159080",
    "end": "1165600"
  },
  {
    "text": "problem we can create an AWS Lambda for those of you who are not familiar with with AWS Lambda it's a service L",
    "start": "1165600",
    "end": "1174559"
  },
  {
    "text": "compute that trigger on action in AWS environment so I can trigger AWS Lambda",
    "start": "1174559",
    "end": "1181440"
  },
  {
    "text": "to give my own code that will be executed when someone adds a file to a",
    "start": "1181440",
    "end": "1186600"
  },
  {
    "text": "bucket so when Cloud heads a file to a bucket my AWS Lambda will be triggered",
    "start": "1186600",
    "end": "1193080"
  },
  {
    "text": "and delete the file immediately so we even if someone consumed the bucket as",
    "start": "1193080",
    "end": "1199080"
  },
  {
    "text": "invokes the Lambda directly and it wins almost every",
    "start": "1199080",
    "end": "1204679"
  },
  {
    "text": "race and you might say that administrator intrusion detection cm is",
    "start": "1204679",
    "end": "1209720"
  },
  {
    "text": "the monthly bill and you're using Lambda it might cost money but the free tier is",
    "start": "1209720",
    "end": "1215120"
  },
  {
    "text": "1 million requests per month so even if you use it for a whole month every 5 minutes to add your Trails it's remotely",
    "start": "1215120",
    "end": "1223320"
  },
  {
    "text": "from the monthly bill it's a 10th per even even less",
    "start": "1223320",
    "end": "1229360"
  },
  {
    "text": "so the third way that we come up with and there are a bunch more ways you can read about it in our white",
    "start": "1230080",
    "end": "1236520"
  },
  {
    "text": "paper is to interfere with what Amazon called server side encryption they want to protect the file",
    "start": "1236520",
    "end": "1243039"
  },
  {
    "text": "that rest so when you save a file to an S3 bucket it encrypts the file just",
    "start": "1243039",
    "end": "1249640"
  },
  {
    "text": "before you save it save it on the disk and when you ask for the file decrypts it and give it back to you you can",
    "start": "1249640",
    "end": "1256000"
  },
  {
    "text": "create your own custom key using Key Management Service of Amazon and what",
    "start": "1256000",
    "end": "1261640"
  },
  {
    "text": "makes it so powerful is that you can create a policy to this key and I'm going to show you a demo how we can",
    "start": "1261640",
    "end": "1268600"
  },
  {
    "text": "escape cloud trail using this",
    "start": "1268600",
    "end": "1272200"
  },
  {
    "start": "1272000",
    "end": "1472000"
  },
  {
    "text": "technique so the first thing we would like to do is to create our custom",
    "start": "1278000",
    "end": "1283520"
  },
  {
    "text": "key and we will say that the policy of this key is",
    "start": "1283520",
    "end": "1290520"
  },
  {
    "text": "is just a policy that no one can encrypt or decrypt the file besides cloud trail",
    "start": "1291600",
    "end": "1296960"
  },
  {
    "text": "so Cloud sell works completely the same does not feel any change because it can",
    "start": "1296960",
    "end": "1302840"
  },
  {
    "text": "encryp the file to decrypt the file but the administrator they have nothing to do with this",
    "start": "1302840",
    "end": "1309200"
  },
  {
    "text": "file and we don't want them to change the policy so what we need to do is not",
    "start": "1310720",
    "end": "1316240"
  },
  {
    "text": "to give them the permission to change it and to say that we know that no one can change the policy we know that this this",
    "start": "1316240",
    "end": "1322799"
  },
  {
    "text": "key becomes unmanageable but we don't care we are attackers so we just say that we know we",
    "start": "1322799",
    "end": "1329120"
  },
  {
    "text": "agree to the terms yeah yeah",
    "start": "1329120",
    "end": "1335639"
  },
  {
    "text": "yeah okay so now we create a key and we need to associate it with a cloud trail",
    "start": "1340159",
    "end": "1346480"
  },
  {
    "text": "so we take this key",
    "start": "1346480",
    "end": "1350278"
  },
  {
    "text": "and from now on this black hat cloud trail will encryp the log files using",
    "start": "1362960",
    "end": "1369559"
  },
  {
    "text": "this KMS key and the administrator have nothing to do with this log files because it does not have permissions to",
    "start": "1369559",
    "end": "1376760"
  },
  {
    "text": "use this key it can equp the files something else that we can do to",
    "start": "1376760",
    "end": "1383080"
  },
  {
    "text": "build more stealth is to disable the key we can disable the key and delete a",
    "start": "1383080",
    "end": "1390039"
  },
  {
    "text": "key and from now on even cloud trail can save files to the bucket because when",
    "start": "1396000",
    "end": "1403240"
  },
  {
    "text": "you will ask for the key he will say I want to save this file to the bucket the key is dis",
    "start": "1403240",
    "end": "1409720"
  },
  {
    "text": "it can do anything so from now on there are no files in the bucket we can do",
    "start": "1409720",
    "end": "1415720"
  },
  {
    "text": "whatever we want and then restore everything back as normal so I want to",
    "start": "1415720",
    "end": "1421279"
  },
  {
    "text": "show you what what the administrator see in this",
    "start": "1421279",
    "end": "1426600"
  },
  {
    "text": "case because we we don't have time to wait five minutes every time just to",
    "start": "1428039",
    "end": "1433279"
  },
  {
    "text": "show you this I I made it earlier this morning this is like at three and I'll",
    "start": "1433279",
    "end": "1441039"
  },
  {
    "text": "show you what you see beforehand you see there is last log file deliver time see it right here the",
    "start": "1441039",
    "end": "1448279"
  },
  {
    "text": "only thing is going to be missing is this one that's the only indication that",
    "start": "1448279",
    "end": "1454200"
  },
  {
    "text": "means that or have in the console that something went wrong and it's only for a few minutes you just do what you want",
    "start": "1454200",
    "end": "1461159"
  },
  {
    "text": "wait for the log files to flash and then you do then you restore everything back to",
    "start": "1461159",
    "end": "1466880"
  },
  {
    "text": "normal great",
    "start": "1466880",
    "end": "1470360"
  },
  {
    "start": "1472000",
    "end": "1509000"
  },
  {
    "text": "so now we know that dp1 we can escape cloud trail it's not a big deal there",
    "start": "1472559",
    "end": "1477640"
  },
  {
    "text": "are plenty of ways to do it the next objective will be to maintain persistence in the account we're going",
    "start": "1477640",
    "end": "1485679"
  },
  {
    "text": "to talk about two kinds of persistency one is persistency to AWS",
    "start": "1485679",
    "end": "1491080"
  },
  {
    "text": "account persistent access to the management to do API calls to create is",
    "start": "1491080",
    "end": "1498559"
  },
  {
    "text": "to do whatever we want and the second kind of persistency is persistent access",
    "start": "1498559",
    "end": "1504000"
  },
  {
    "text": "to Virtual private Cloud that administrator assume that are",
    "start": "1504000",
    "end": "1509159"
  },
  {
    "start": "1509000",
    "end": "1686000"
  },
  {
    "text": "safe so what every atake will do the F thing that will TR they will try to",
    "start": "1509159",
    "end": "1515520"
  },
  {
    "text": "create new file new users so when they we try to create this",
    "start": "1515520",
    "end": "1522399"
  },
  {
    "text": "new users they don't just create I'm a ATT a user they will they will use a name of an existing user just kind of",
    "start": "1522399",
    "end": "1529799"
  },
  {
    "text": "type of sorting and another thing that they were able to do is to use the fact that",
    "start": "1529799",
    "end": "1538000"
  },
  {
    "text": "Amazon allows up to two access token per user how convenient for the attacker so",
    "start": "1538000",
    "end": "1543360"
  },
  {
    "text": "we can iterate over all the existing user and create a second access key so",
    "start": "1543360",
    "end": "1548960"
  },
  {
    "text": "now you have a bunch of access keys but the Shar guys here will understand that this is just a merely point in time",
    "start": "1548960",
    "end": "1555440"
  },
  {
    "text": "activity because if the administ suspect that something going wrong in his",
    "start": "1555440",
    "end": "1561080"
  },
  {
    "text": "environment it will delete all the users and create new ones so in order to solve",
    "start": "1561080",
    "end": "1567720"
  },
  {
    "text": "this problem we can create an AWS Lambda to save the day the basically when",
    "start": "1567720",
    "end": "1575720"
  },
  {
    "text": "someone creates a new user we can create a Lambda that will be triggered and create an access key to this user and",
    "start": "1575720",
    "end": "1581960"
  },
  {
    "text": "post it back to us now we have persistency to Future users now we have a bunch of access",
    "start": "1581960",
    "end": "1589279"
  },
  {
    "text": "tokens some of them might have permissions some of them might not and you want to use all these all these",
    "start": "1589279",
    "end": "1595520"
  },
  {
    "text": "tokens so we can back the roles we can say the all the roles in the environment",
    "start": "1595520",
    "end": "1601600"
  },
  {
    "text": "can be able to assume by the tokens that we have so we can take our tokens and assume roles to get more to get more",
    "start": "1601600",
    "end": "1609120"
  },
  {
    "text": "permissions even though the administrator didn't meant it to be we can create a Lambda that when it",
    "start": "1609120",
    "end": "1615919"
  },
  {
    "text": "triggered it triggered on newly created rolls and adds the back door to the",
    "start": "1615919",
    "end": "1621279"
  },
  {
    "text": "rooll even if someone update a ro and delete our back door we can create a",
    "start": "1621279",
    "end": "1627240"
  },
  {
    "text": "Lambda that will be triggered again when someone update a ro to reintroduce the deleted roles the deleted back",
    "start": "1627240",
    "end": "1633080"
  },
  {
    "text": "dos so I know what you all thinking that Lambda is a very powerful tool and you",
    "start": "1633080",
    "end": "1639080"
  },
  {
    "text": "want to protect it so what that mean St can do in order to delete our functions",
    "start": "1639080",
    "end": "1645360"
  },
  {
    "text": "you can use this AP this API call delete function function but someone can spot",
    "start": "1645360",
    "end": "1650799"
  },
  {
    "text": "something stupid with this API not stupid like not smart is the leete",
    "start": "1650799",
    "end": "1656960"
  },
  {
    "text": "function and not delete functions so we can create another Lambda that will be trigger when someone called the leete",
    "start": "1656960",
    "end": "1663080"
  },
  {
    "text": "function to we ruce all the deleted lambdas this is great right so we can",
    "start": "1663080",
    "end": "1668679"
  },
  {
    "text": "create multiple lambdas to reintroduce our lambdas and we are persistent in the account to be honest there are ways to",
    "start": "1668679",
    "end": "1676320"
  },
  {
    "text": "overcome this you can create policy is it takes few minutes and you can",
    "start": "1676320",
    "end": "1681640"
  },
  {
    "text": "overcome this but we are not going to go easy on the administrators the last kind of pres",
    "start": "1681640",
    "end": "1689480"
  },
  {
    "text": "we're going to talk about then will elaborate more about it yeah you hear me guys you turn on the",
    "start": "1689480",
    "end": "1698080"
  },
  {
    "text": "mic V yeah all right so I actually cheers to door it's his first blackhead",
    "start": "1698080",
    "end": "1704640"
  },
  {
    "text": "he comes here as a presenter so cheers door [Applause]",
    "start": "1704640",
    "end": "1713320"
  },
  {
    "text": "so um last persistency a method is actually something very very uh",
    "start": "1713320",
    "end": "1718799"
  },
  {
    "text": "interesting we've been working a lot with large Enterprise customers and what you see in large Enterprise customers is",
    "start": "1718799",
    "end": "1724679"
  },
  {
    "text": "that they actually use a AWS to extend their existing onr Data Center and one",
    "start": "1724679",
    "end": "1730399"
  },
  {
    "text": "of the ways to do that is to actually create a virtual private zone or a VPC that has no inbound or outbound traffic",
    "start": "1730399",
    "end": "1737240"
  },
  {
    "text": "right so it only has access from within the data center right so everything private IPS private Nets and and so on",
    "start": "1737240",
    "end": "1744559"
  },
  {
    "text": "but remember when we started the presentation we talked about that everything in AWS is exposed as a public",
    "start": "1744559",
    "end": "1750320"
  },
  {
    "text": "HTTP endpoint so what we can what we can actually do is we can take a VPC if we",
    "start": "1750320",
    "end": "1756600"
  },
  {
    "text": "have access to the account right so we can take a VPC right that VPC is surrounded with security groups and ACLS",
    "start": "1756600",
    "end": "1763399"
  },
  {
    "text": "there's no inbound or outbound access right but what we can do is we can actually inject a Lambda inside that VPC",
    "start": "1763399",
    "end": "1770600"
  },
  {
    "text": "right and then by the by Design right those those all kinds of end points in a",
    "start": "1770600",
    "end": "1776320"
  },
  {
    "text": "in AWS like um like AWS Gateway API right um that actually triggers a Lambda",
    "start": "1776320",
    "end": "1783399"
  },
  {
    "text": "once you make an HTTP call and by Design This is exposed to the outside world so what we can do is we can actually spin",
    "start": "1783399",
    "end": "1789919"
  },
  {
    "text": "up an AWS Gateway right invoke stuff from the outside world that will trigger",
    "start": "1789919",
    "end": "1796279"
  },
  {
    "text": "a Lambda inside the VPC C right because the gateway to the Lambda is AWS",
    "start": "1796279",
    "end": "1801919"
  },
  {
    "text": "specific stuff right that would actually trigger something right in an environment that's not even supposed to",
    "start": "1801919",
    "end": "1807840"
  },
  {
    "text": "be exposed from the outside world right so plenty of plenty of plenty of options",
    "start": "1807840",
    "end": "1814440"
  },
  {
    "text": "there and even if you use the right security groups the right mechanisms that's still an",
    "start": "1814440",
    "end": "1820559"
  },
  {
    "start": "1821000",
    "end": "1913000"
  },
  {
    "text": "issue we've got um to to to summarize um I like to talk about the",
    "start": "1821120",
    "end": "1827640"
  },
  {
    "text": "letter movement capabilities uh inside AWS so it's not just about the fact that",
    "start": "1827640",
    "end": "1834360"
  },
  {
    "text": "if there's access into the account someone can stop uh ec2 instances or",
    "start": "1834360",
    "end": "1840080"
  },
  {
    "text": "containers it's not just about data leakage where you can make sure you're encrypting your your instances or",
    "start": "1840080",
    "end": "1846279"
  },
  {
    "text": "encrypting your SQL or no SQL data uh and so on it's also about lateral movement back to the data center right",
    "start": "1846279",
    "end": "1853240"
  },
  {
    "text": "because of that direct connectivity and there's also some other very very funny",
    "start": "1853240",
    "end": "1858480"
  },
  {
    "text": "funny things that you can do so uh obviously you can go ahead and provision users you can go and do some privilege",
    "start": "1858480",
    "end": "1865080"
  },
  {
    "text": "escalations but you could also actually control Amazon support tickets so you can do via the API right so there's a",
    "start": "1865080",
    "end": "1872720"
  },
  {
    "text": "lot of interesting things you can do there uh in terms of combo social engineering and lateral movement right",
    "start": "1872720",
    "end": "1878679"
  },
  {
    "text": "so there's um a lot of things there and when you think about the stuff that we that we talked about um because of the",
    "start": "1878679",
    "end": "1886919"
  },
  {
    "text": "variety of services and regions right and the complexity of the policy for an IT guy right to be able to control all",
    "start": "1886919",
    "end": "1894440"
  },
  {
    "text": "of that very very very challenging and if you miss a certain point it's pretty easy then the effect is just so dramatic",
    "start": "1894440",
    "end": "1902080"
  },
  {
    "text": "I think we pitched that to like we we show this presentation about 20 20 uh um",
    "start": "1902080",
    "end": "1907880"
  },
  {
    "text": "um AWS it guys and they were all what this is this is interesting we didn't think about that so the the last",
    "start": "1907880",
    "end": "1914960"
  },
  {
    "start": "1913000",
    "end": "2096000"
  },
  {
    "text": "question is I mean what can you do right right I mean what are what are the next steps and and and what can you do and",
    "start": "1914960",
    "end": "1921519"
  },
  {
    "text": "and and as as always with especially with a a platform like AWS the the the",
    "start": "1921519",
    "end": "1926919"
  },
  {
    "text": "devil is in the details right so when you're using a service right you should really take care of understanding post",
    "start": "1926919",
    "end": "1933600"
  },
  {
    "text": "Bridge methodology right what do you do right uh pay careful attention to cloud",
    "start": "1933600",
    "end": "1939960"
  },
  {
    "text": "trail and all of the different cloudwatch and notifications you want to set up right uh uh in case someone",
    "start": "1939960",
    "end": "1946480"
  },
  {
    "text": "messes up with that so that's one the second would be as always you should plan your environment as your",
    "start": "1946480",
    "end": "1952799"
  },
  {
    "text": "architecture as a stateless architecture where you focus on your data right so make sure the data is encrypted make",
    "start": "1952799",
    "end": "1959639"
  },
  {
    "text": "sure that if the data is stolen right there's no way to actually decrypt that and assume that your environment could",
    "start": "1959639",
    "end": "1965360"
  },
  {
    "text": "be tear down to pieces like what happened to code spaces so what you want to do next is you want to make sure that",
    "start": "1965360",
    "end": "1972080"
  },
  {
    "text": "everything in your environment is automated via code or recipes right so",
    "start": "1972080",
    "end": "1977960"
  },
  {
    "text": "in case an account has been breached you'd even have the capability to create a new account associate a new credit",
    "start": "1977960",
    "end": "1984320"
  },
  {
    "text": "card with this guy shut down the old account change the DNS and use the code and the recipes to just provision the",
    "start": "1984320",
    "end": "1990159"
  },
  {
    "text": "environment from scratch right so you have a confidence uh that you have the",
    "start": "1990159",
    "end": "1995960"
  },
  {
    "text": "confidence that on a on on a breach incident right you you can still go ahead and keep on uh production and then",
    "start": "1995960",
    "end": "2003080"
  },
  {
    "text": "I would say the last the last point is to leverage strong account separation so",
    "start": "2003080",
    "end": "2008159"
  },
  {
    "text": "that's something that we've seen a lot of best practices around so don't put everything in the same account but we",
    "start": "2008159",
    "end": "2013679"
  },
  {
    "text": "see a lot of companies doing account separations between Dev staging and production and stuff like that and then",
    "start": "2013679",
    "end": "2019880"
  },
  {
    "text": "just uh or maybe production one and production two for ab uh testing and stuff like that and they do some sort of",
    "start": "2019880",
    "end": "2026639"
  },
  {
    "text": "Route 53 DNS games right uh so they weighted average to SP weighted weighted",
    "start": "2026639",
    "end": "2032639"
  },
  {
    "text": "formulas but we're talking about a much stronger level of Separation so you can even you should even consider separating",
    "start": "2032639",
    "end": "2040000"
  },
  {
    "text": "based on uh services not microservices but higher level Services might be separated so if your account was",
    "start": "2040000",
    "end": "2046399"
  },
  {
    "text": "breached right uh you just narrowed it down to a very specific uh",
    "start": "2046399",
    "end": "2051800"
  },
  {
    "text": "subset um the last point would be that even if",
    "start": "2051800",
    "end": "2057760"
  },
  {
    "text": "you do strong account separation right uh there's also the capability in I IM",
    "start": "2057760",
    "end": "2064398"
  },
  {
    "text": "to actually assume roles from another account and we're planning to talk about that",
    "start": "2064399",
    "end": "2070280"
  },
  {
    "text": "next year in blackette right so and depending on you know the score eval that you guys give us um so with with",
    "start": "2070280",
    "end": "2078320"
  },
  {
    "text": "with that in mind uh again we'd like to thank everyone uh for uh for coming we're hope hoping it was valuable for",
    "start": "2078320",
    "end": "2084440"
  },
  {
    "text": "you guys uh and uh if you have any if you have any questions we'll be staying here and taking any questions",
    "start": "2084440",
    "end": "2091839"
  }
]