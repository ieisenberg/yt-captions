[
  {
    "text": "good afternoon and welcome so this session is backdooring hardware devices",
    "start": "0",
    "end": "5009"
  },
  {
    "text": "by injecting malicious payloads on microcontrollers the room here is South",
    "start": "5009",
    "end": "10290"
  },
  {
    "text": "Pacific and our speaker is Shayla Berta so if those things resonate or make",
    "start": "10290",
    "end": "15630"
  },
  {
    "text": "sense to you you're in the right place I have a few little notes that I just need to go through first of all stop by the",
    "start": "15630",
    "end": "22859"
  },
  {
    "text": "business Hall located in Mandalay Bay Oceanside and shoreline ballrooms on level two the blackhat Arsenal is in the",
    "start": "22859",
    "end": "29460"
  },
  {
    "text": "business hall on level two and don't forget the merchandise store on level two and session recording Smouse okay as",
    "start": "29460",
    "end": "35489"
  },
  {
    "text": "they have a desk on every level just as a reminder please make sure you put your cell phones on vibrate mode that's much",
    "start": "35489",
    "end": "42690"
  },
  {
    "text": "better for everybody around but please join me and before we go without further",
    "start": "42690",
    "end": "47879"
  },
  {
    "text": "ado please join me in introducing or welcoming our speaker so Shayla Berta hi",
    "start": "47879",
    "end": "58739"
  },
  {
    "text": "everyone thanks for being here I'm really really happy to be sharing this",
    "start": "58739",
    "end": "64110"
  },
  {
    "text": "moment with all of you and let me introduce myself briefly my name is",
    "start": "64110",
    "end": "70110"
  },
  {
    "text": "Shayla and an offensive security researcher because I love right kind of",
    "start": "70110",
    "end": "75509"
  },
  {
    "text": "stuff I come from when Osiris Argentina I see the 10,000 kilometers far from",
    "start": "75509",
    "end": "83430"
  },
  {
    "text": "here at the end of the world and also on am a developer in assembly for",
    "start": "83430",
    "end": "89700"
  },
  {
    "text": "microcontrollers or micro processors C C++ Python Nando and a speaker this is",
    "start": "89700",
    "end": "97320"
  },
  {
    "text": "my second time giving a talk at profit and I was also speakers at Def Con my co",
    "start": "97320",
    "end": "103500"
  },
  {
    "text": "party I can walk some other civility conferences but let's go to the important thing in the last month that",
    "start": "103500",
    "end": "112290"
  },
  {
    "text": "were many many news about vectors inside harbor board we all know that these kind",
    "start": "112290",
    "end": "119250"
  },
  {
    "text": "of factors exist and they could be inside smartphones computers Reuters",
    "start": "119250",
    "end": "126079"
  },
  {
    "text": "VMC's also so back doctors everywhere and on the years",
    "start": "126079",
    "end": "135770"
  },
  {
    "text": "having polished many research about different ways of factoring devices",
    "start": "135770",
    "end": "141120"
  },
  {
    "text": "through their own hardware components however most of the research focuses on",
    "start": "141120",
    "end": "147270"
  },
  {
    "text": "devices based on powerful micro processors like an Intel or AMD instead",
    "start": "147270",
    "end": "154650"
  },
  {
    "text": "of microcontrollers so let's see some technical differences between them on",
    "start": "154650",
    "end": "161580"
  },
  {
    "text": "one hand we have micro processors which are an entirely cpu all the necessary or",
    "start": "161580",
    "end": "169860"
  },
  {
    "text": "the components that a micro processor needs to work like memories and in gluten abuses are physically separated",
    "start": "169860",
    "end": "177290"
  },
  {
    "text": "they are also bigger than a microcontroller have greater processing",
    "start": "177290",
    "end": "182490"
  },
  {
    "text": "capacity most microcontroller microprocessor have a modified harbour",
    "start": "182490",
    "end": "189150"
  },
  {
    "text": "memory organization and 32 or 64 bits of architecture while in the other hand we",
    "start": "189150",
    "end": "197070"
  },
  {
    "text": "have microcontrollers they have inside a little CPU and all the necessary",
    "start": "197070",
    "end": "202709"
  },
  {
    "text": "components to get it working I mean inside a microcontroller we have the CPU",
    "start": "202709",
    "end": "208620"
  },
  {
    "text": "RAM from input and output uses and other peripherals the fact that",
    "start": "208620",
    "end": "215209"
  },
  {
    "text": "microcontrollers are putting it all together in a very tiny space makes them",
    "start": "215209",
    "end": "220410"
  },
  {
    "text": "with a less processing capacity and is lower than micro processors and there",
    "start": "220410",
    "end": "227250"
  },
  {
    "text": "are other technical differences too microcontroller have harbour memory organization and 16 bits of architecture",
    "start": "227250",
    "end": "234709"
  },
  {
    "text": "they also have a little stack for example the peak 18 family having a",
    "start": "234709",
    "end": "241500"
  },
  {
    "text": "stacked able to store up to 31 memory addresses if this gets overflowed the",
    "start": "241500",
    "end": "247350"
  },
  {
    "text": "pic will reset itself just some information so after understanding the",
    "start": "247350",
    "end": "254820"
  },
  {
    "text": "main differences between microprocessors and microcontrollers a question that cool arises why some",
    "start": "254820",
    "end": "262169"
  },
  {
    "text": "we'll use some microprose microcontroller instead of a powerful microprocessor",
    "start": "262169",
    "end": "267620"
  },
  {
    "text": "well usually micro processors are implemented on multi tasking devices",
    "start": "267620",
    "end": "273180"
  },
  {
    "text": "that means to run an entirely operative system on the other hand micro micro",
    "start": "273180",
    "end": "279779"
  },
  {
    "text": "controllers are used for doing a specific tax usually the same the same",
    "start": "279779",
    "end": "285870"
  },
  {
    "text": "work dealing with the same kind of input or output like ultimate eyes in our routine it's like comparing a Raspberry",
    "start": "285870",
    "end": "293490"
  },
  {
    "text": "Pi which has an armed microprocessor to an Arduino which has an eternal",
    "start": "293490",
    "end": "299189"
  },
  {
    "text": "microcontroller what are useful devices but they are used for different foot",
    "start": "299189",
    "end": "305009"
  },
  {
    "text": "pulses so microcontrollers have evolved a lot too many years ago picked 12 and",
    "start": "305009",
    "end": "313610"
  },
  {
    "text": "very simple pin outs with basic input and output ports and a few very first",
    "start": "313610",
    "end": "320990"
  },
  {
    "text": "pick 16 more familiar some adverts to programming microcontrollers using these",
    "start": "320990",
    "end": "327509"
  },
  {
    "text": "devices they have more peripherals including user communication and CCP",
    "start": "327509",
    "end": "333419"
  },
  {
    "text": "modules pic18 also called high-performance",
    "start": "333419",
    "end": "339870"
  },
  {
    "text": "microcontrollers are my favorite ones they are quite complex with a lot of",
    "start": "339870",
    "end": "345149"
  },
  {
    "text": "peripherals support in different communication protocols like us we can and so on as well as all the common",
    "start": "345149",
    "end": "352919"
  },
  {
    "text": "peripherals such as timers analog to digital converters in city models and so",
    "start": "352919",
    "end": "358319"
  },
  {
    "text": "on and finally we have the 32-bit microcontrollers and then they are the",
    "start": "358319",
    "end": "364710"
  },
  {
    "text": "most similar thing to a powerful microprocessor even they use cortex and CPU but they",
    "start": "364710",
    "end": "371849"
  },
  {
    "text": "still be in a microcontroller so after all targeting microcontrollers 44 well",
    "start": "371849",
    "end": "380189"
  },
  {
    "text": "nowadays they are responsible for controlling a wide range of systems like physical security systems some cars",
    "start": "380189",
    "end": "387569"
  },
  {
    "text": "thank you semaphore celebrate our sensors component of industrial systems",
    "start": "387569",
    "end": "392879"
  },
  {
    "text": "some appliances and even robots this is a cars a cube",
    "start": "392879",
    "end": "398900"
  },
  {
    "text": "and for controlling the fuel injection and it's fully controlled by a pic18",
    "start": "398900",
    "end": "406180"
  },
  {
    "text": "microcontroller so there are interesting devices to target into all",
    "start": "406180",
    "end": "414910"
  },
  {
    "text": "microcontrollers need to be program otherwise well they will do nothing as I",
    "start": "414910",
    "end": "420650"
  },
  {
    "text": "said that is a little CPU inside them which is able to execute every assembly instruction of a program loaded in the",
    "start": "420650",
    "end": "427700"
  },
  {
    "text": "microcontroller program memory these are the steps for programming",
    "start": "427700",
    "end": "432830"
  },
  {
    "text": "microcontrollers we can develop the fewer in assembly or C after compiling",
    "start": "432830",
    "end": "439370"
  },
  {
    "text": "and assemble it we're gonna get the hex file the hex file is the failure to load",
    "start": "439370",
    "end": "445880"
  },
  {
    "text": "the firmware into the microcontroller we need to use the programmer software and hardware usually provided by the",
    "start": "445880",
    "end": "453070"
  },
  {
    "text": "microcontrollers manufacture similar to the world of microprocessor",
    "start": "453070",
    "end": "459830"
  },
  {
    "text": "every microcontroller vendors have their own assembly instruction set for the CPU",
    "start": "459830",
    "end": "466220"
  },
  {
    "text": "of their devices this is an example to turn it on I led in a pic",
    "start": "466220",
    "end": "471350"
  },
  {
    "text": "microcontroller I love programming them in assembly but it's possible to use",
    "start": "471350",
    "end": "476420"
  },
  {
    "text": "both assembly or C for microchip device devices we can use the MP lab ID which",
    "start": "476420",
    "end": "483620"
  },
  {
    "text": "is free to develop and compile our few work by building the project we're gonna",
    "start": "483620",
    "end": "490190"
  },
  {
    "text": "get the hex file they feel were ready to be written in a microcontrollers program memory as I said is necessary the",
    "start": "490190",
    "end": "499580"
  },
  {
    "text": "programmer software and hard work to load the firmware into the microcontroller so these are the",
    "start": "499580",
    "end": "505630"
  },
  {
    "text": "microchip official tools we can use the mplab ib or IP to communicate with the",
    "start": "505630",
    "end": "513530"
  },
  {
    "text": "PQ 3 which is the program and of hardware allow the pin were into the microcontroller the interesting thing",
    "start": "513530",
    "end": "521510"
  },
  {
    "text": "here is that as well as we can use these tools for write the program memory",
    "start": "521510",
    "end": "528780"
  },
  {
    "text": "we can use them for really program memory I mean we can't write a pin wire",
    "start": "528780",
    "end": "535050"
  },
  {
    "text": "into a microcontroller or we can dump the finger so let's see how we can dump",
    "start": "535050",
    "end": "541770"
  },
  {
    "text": "the program memory first of all this is",
    "start": "541770",
    "end": "546870"
  },
  {
    "text": "the memory organization of a microchip microcontroller we have the program",
    "start": "546870",
    "end": "553110"
  },
  {
    "text": "memory which is where the finger is and it's a memory that we will dump but",
    "start": "553110",
    "end": "559590"
  },
  {
    "text": "there are other two memories the RAM which contains the F for our special",
    "start": "559590",
    "end": "565680"
  },
  {
    "text": "functional registers and the CP are generally pulled poles resistors and the",
    "start": "565680",
    "end": "572100"
  },
  {
    "text": "ROM memory where the program can store data that won't be lost after our reset",
    "start": "572100",
    "end": "577310"
  },
  {
    "text": "so the ROM memory and the program memory are non-volatile while the RAM is the",
    "start": "577310",
    "end": "583770"
  },
  {
    "text": "RAM is what happened so to make a memory dump the first step is connecting the",
    "start": "583770",
    "end": "591720"
  },
  {
    "text": "target device the microcontroller to the picket frame there are other tools for doing this",
    "start": "591720",
    "end": "597660"
  },
  {
    "text": "process but I prefer to use the official tool because it works very well and a",
    "start": "597660",
    "end": "603180"
  },
  {
    "text": "chip is cost around $40 so you have an",
    "start": "603180",
    "end": "608850"
  },
  {
    "text": "example of connection and we need to match the pins between the microcontroller and the pic youthful",
    "start": "608850",
    "end": "615420"
  },
  {
    "text": "collector for example we have to connect the PPP pin of the microcontroller must",
    "start": "615420",
    "end": "622830"
  },
  {
    "text": "be connected to the BP peeping of the pq3 connector and so on with the other things it's very easy so after that we",
    "start": "622830",
    "end": "633570"
  },
  {
    "text": "connected a ticket free to our computer through the USB port and we can open the",
    "start": "633570",
    "end": "638880"
  },
  {
    "text": "mplab ID to come to the favor the first step is create we need to create the",
    "start": "638880",
    "end": "645690"
  },
  {
    "text": "Einstein of a project in the ampulla by D and specify what microcontroller has",
    "start": "645690",
    "end": "652290"
  },
  {
    "text": "used in our target device fraternity is very easy to get this information because the pic model is",
    "start": "652290",
    "end": "659880"
  },
  {
    "text": "on the microcontroller and then we must set the programmer Hardware in this case",
    "start": "659880",
    "end": "666630"
  },
  {
    "text": "is a ticket free finally we can use this option in the ampulla body to dump the",
    "start": "666630",
    "end": "674220"
  },
  {
    "text": "figure into an hex file the envelope ID",
    "start": "674220",
    "end": "680160"
  },
  {
    "text": "has a disassembler so we can load the hex file and then go to target memory",
    "start": "680160",
    "end": "686430"
  },
  {
    "text": "view program memory and then we gonna see that this assembly view there we can",
    "start": "686430",
    "end": "693750"
  },
  {
    "text": "find all the assembly instruction of the program with their respective OP code to",
    "start": "693750",
    "end": "699030"
  },
  {
    "text": "be executed by the CPU and also the memory address of one of them where they",
    "start": "699030",
    "end": "705060"
  },
  {
    "text": "are located is present through let's confirm in one side the source code and",
    "start": "705060",
    "end": "711960"
  },
  {
    "text": "in the other side the disassembly view of that this program after the start has",
    "start": "711960",
    "end": "717860"
  },
  {
    "text": "fire assembly instructions and we can find them in the disassembly view it is",
    "start": "717860",
    "end": "723600"
  },
  {
    "text": "almost equal the only difference is the access world after so instructions",
    "start": "723600",
    "end": "729180"
  },
  {
    "text": "because portney and three three are special functional resistors they are",
    "start": "729180",
    "end": "737190"
  },
  {
    "text": "located at the RAM memory so the access words means that data memory access is performed by observing the opcodes we",
    "start": "737190",
    "end": "747660"
  },
  {
    "text": "can map the assembly instructions in the hex lamp they're gonna be in berber because of",
    "start": "747660",
    "end": "754230"
  },
  {
    "text": "the little endian format like most microprocessors microcontrollers use",
    "start": "754230",
    "end": "759750"
  },
  {
    "text": "with alien to aster bytes in memory ok",
    "start": "759750",
    "end": "765420"
  },
  {
    "text": "now that we learnt how to dump the framework let's see how we can modify",
    "start": "765420",
    "end": "771720"
  },
  {
    "text": "the hex file and reload the few are with something instructive in order to alter",
    "start": "771720",
    "end": "777720"
  },
  {
    "text": "the originally hammer of the target device when injecting a payload into a",
    "start": "777720",
    "end": "784260"
  },
  {
    "text": "binary or process we need to find a place where our payload get executed at",
    "start": "784260",
    "end": "789630"
  },
  {
    "text": "least once in this game we need the same so then it's a step is to find our place inside",
    "start": "789630",
    "end": "796930"
  },
  {
    "text": "the field work where we could interact on malicious code or payload I will",
    "start": "796930",
    "end": "802780"
  },
  {
    "text": "spray three different instructional techniques the first ones is evolved in 16 at the entry point I mean when the",
    "start": "802780",
    "end": "810040"
  },
  {
    "text": "program starts but where is the entry point so this is an standard structure",
    "start": "810040",
    "end": "817960"
  },
  {
    "text": "of program for microchip devices the first four sections are our cert self is",
    "start": "817960",
    "end": "825730"
  },
  {
    "text": "plain and they are not important for us at this moment so let's focus on the",
    "start": "825730",
    "end": "830920"
  },
  {
    "text": "reset vector the result vector is always present at the address 0 0 0 0 and is",
    "start": "830920",
    "end": "838270"
  },
  {
    "text": "followed by by a champ 3 is followed by a girdle to the first assembly",
    "start": "838270",
    "end": "844240"
  },
  {
    "text": "instruction of the program basically the entry point in the middle the interrupt",
    "start": "844240",
    "end": "851350"
  },
  {
    "text": "vector is present at the address 8 or 18 but we will go deeper on that later you",
    "start": "851350",
    "end": "860550"
  },
  {
    "text": "have an example we can observe the champ to the entry point in the source code as",
    "start": "860550",
    "end": "867610"
  },
  {
    "text": "well as in the disassembly view this little program does not use interruptions so this is the auto in the",
    "start": "867610",
    "end": "876550"
  },
  {
    "text": "result vector is making a very short jump but in large programs like this",
    "start": "876550",
    "end": "882670"
  },
  {
    "text": "other one the champ gonna be quite longer so remember the result vector",
    "start": "882670",
    "end": "889450"
  },
  {
    "text": "will be always present at the memory address 0 0 0 0 is the first line in the",
    "start": "889450",
    "end": "895030"
  },
  {
    "text": "disassembly view there are we gonna find our daughter to the entry point so in",
    "start": "895030",
    "end": "900190"
  },
  {
    "text": "the first example the entry point is how they address 0 6 and in the second case is a 7f 84 those are the memory",
    "start": "900190",
    "end": "909640"
  },
  {
    "text": "addresses where we should inject our payload to get it executed when the program starts but and the next question",
    "start": "909640",
    "end": "921340"
  },
  {
    "text": "is what should we check how can we win a panel for these kind of",
    "start": "921340",
    "end": "927200"
  },
  {
    "text": "devices well we have to use a specific",
    "start": "927200",
    "end": "934130"
  },
  {
    "text": "assembly through subsets for our target device this is an example to turn it on",
    "start": "934130",
    "end": "940190"
  },
  {
    "text": "two different LEDs in a pic microcontroller we need to get the opcodes of these instructions an option",
    "start": "940190",
    "end": "948650"
  },
  {
    "text": "to get them is vibrated by writing all the assembly instructions over our pail",
    "start": "948650",
    "end": "954020"
  },
  {
    "text": "up in an assembly file inside and standalone projects in the mplab ID and",
    "start": "954020",
    "end": "959240"
  },
  {
    "text": "then compile it so we can see the op codes in the disassembly view those",
    "start": "959240",
    "end": "966980"
  },
  {
    "text": "gonna be the opcode source our payload but remember there is an Indian format",
    "start": "966980",
    "end": "972170"
  },
  {
    "text": "so this one gonna be our final payload",
    "start": "972170",
    "end": "978130"
  },
  {
    "text": "so we are ready to make the injection in this case the entry point is located at",
    "start": "978130",
    "end": "984710"
  },
  {
    "text": "the address 28 we have to locate this address in the hexam for that we can",
    "start": "984710",
    "end": "991070"
  },
  {
    "text": "look for the base memory address 20 in this case and then count until 8 right",
    "start": "991070",
    "end": "998180"
  },
  {
    "text": "there is worthy entry point is located and where we should be in check the",
    "start": "998180",
    "end": "1003970"
  },
  {
    "text": "opcodes of our payload but there is something that we should keep in mind",
    "start": "1003970",
    "end": "1009160"
  },
  {
    "text": "the taxon it's at the end of every line and if we modify something we must do",
    "start": "1009160",
    "end": "1016480"
  },
  {
    "text": "record collected for every effective line but first we can insert our panel",
    "start": "1016480",
    "end": "1022300"
  },
  {
    "text": "at the entry point the original writes located at that part will be shift to",
    "start": "1022300",
    "end": "1030790"
  },
  {
    "text": "the right remember that the the right of the taxon",
    "start": "1030790",
    "end": "1035829"
  },
  {
    "text": "must not be moved we gonna recalculate it this is a matter",
    "start": "1035830",
    "end": "1041290"
  },
  {
    "text": "that we shall do for example is we have this line we should sum all the bite of",
    "start": "1041290",
    "end": "1049450"
  },
  {
    "text": "the line and then make a knot + wire",
    "start": "1049450",
    "end": "1054640"
  },
  {
    "text": "and the last right of the outcomes gonna be our checks on but there is always a",
    "start": "1054640",
    "end": "1061000"
  },
  {
    "text": "life saver and we can use this website to calculate the checks on fastly so",
    "start": "1061000",
    "end": "1068110"
  },
  {
    "text": "remember for every effect in line after Palin section we have to fix the",
    "start": "1068110",
    "end": "1073510"
  },
  {
    "text": "checksum if we don't we're gonna get an error at the moment of loading this modified framework into the",
    "start": "1073510",
    "end": "1079570"
  },
  {
    "text": "microcontroller so finally we can use",
    "start": "1079570",
    "end": "1084820"
  },
  {
    "text": "the mplab ID or MP lava AP together with a pickle free to load this modified pin",
    "start": "1084820",
    "end": "1092530"
  },
  {
    "text": "work into the target device what's the result well for example and this is the target",
    "start": "1092530",
    "end": "1101050"
  },
  {
    "text": "device with your national pin work and this is what happened after loading the",
    "start": "1101050",
    "end": "1106210"
  },
  {
    "text": "new fira the modified flower with our payload injected the first light is on",
    "start": "1106210",
    "end": "1112300"
  },
  {
    "text": "because it's part of the original program but but there are other two lights on duty our payload so the",
    "start": "1112300",
    "end": "1120520"
  },
  {
    "text": "proof-of-concept wart it is like papa kite but hardware version let's see a real case this is a",
    "start": "1120520",
    "end": "1129880"
  },
  {
    "text": "- work for observing the behavior of hot cars acute that handle the fuel",
    "start": "1129880",
    "end": "1135040"
  },
  {
    "text": "injection he will have four blue lights for the for petrol instructors and other",
    "start": "1135040",
    "end": "1142180"
  },
  {
    "text": "for yellow light for the for CNG or CMD in sectors in normal behavior the echo",
    "start": "1142180",
    "end": "1150310"
  },
  {
    "text": "minute start injecting petrol and then switches on CNG in the fume are of this",
    "start": "1150310",
    "end": "1157300"
  },
  {
    "text": "EQ the entry point is located at the other 15 to a I place a little tail",
    "start": "1157300",
    "end": "1164050"
  },
  {
    "text": "order to modify the right behavior and continue injecting petrol after switching so the ik you will will be",
    "start": "1164050",
    "end": "1172030"
  },
  {
    "text": "injecting both petrol and CNG at the same time that might not be pulled for",
    "start": "1172030",
    "end": "1177370"
  },
  {
    "text": "the car so let's see a video does the car eco and we'll start seeing the",
    "start": "1177370",
    "end": "1185290"
  },
  {
    "text": "normal behavior the blue lights are on because car starts using petrol I will speed up",
    "start": "1185290",
    "end": "1191320"
  },
  {
    "text": "the car to automate to reach an out there the condition to automatically switch to CN she does when the petrol",
    "start": "1191320",
    "end": "1198130"
  },
  {
    "text": "injector stopped working and the car is using CNG now unloading the modified",
    "start": "1198130",
    "end": "1204010"
  },
  {
    "text": "femur into the EQ in the microcontrollers of the echo and I will",
    "start": "1204010",
    "end": "1210490"
  },
  {
    "text": "repeat the process the car starts using petrol and after switching the petroleum",
    "start": "1210490",
    "end": "1219880"
  },
  {
    "text": "sectors tone stopped working and the commission checked in both petrol and CNG at the same time this is just an",
    "start": "1219880",
    "end": "1228280"
  },
  {
    "text": "example something bad for the car ok let's talk about the second injection",
    "start": "1228280",
    "end": "1234670"
  },
  {
    "text": "technique maybe we prefer to get our panel executed not when the program",
    "start": "1234670",
    "end": "1240460"
  },
  {
    "text": "starts but when our specific action occurs it might be associated to an",
    "start": "1240460",
    "end": "1245800"
  },
  {
    "text": "interruption in big programs there will always be interruption because most of",
    "start": "1245800",
    "end": "1253420"
  },
  {
    "text": "the attacks that the microcontroller camper for three years interruptions to our thought something happened",
    "start": "1253420",
    "end": "1258670"
  },
  {
    "text": "for example the internal timers another go to digital converter CCP modules",
    "start": "1258670",
    "end": "1264040"
  },
  {
    "text": "transmission and receptions per difference as well as other peripherals of the microcontroller this is the",
    "start": "1264040",
    "end": "1271240"
  },
  {
    "text": "execution flow when an interruption occurs no matter what the",
    "start": "1271240",
    "end": "1276820"
  },
  {
    "text": "microcontroller is doing when an interruption is trigger it will jump to",
    "start": "1276820",
    "end": "1281860"
  },
  {
    "text": "the interrupt vector at the others 8 for high-priority interruptions or 18 for",
    "start": "1281860",
    "end": "1287980"
  },
  {
    "text": "low priority interruptions once there a procedure known as polling is used for",
    "start": "1287980",
    "end": "1294310"
  },
  {
    "text": "detecting who triggers the interruption it was a timer what the CCP module or",
    "start": "1294310",
    "end": "1299590"
  },
  {
    "text": "who after the ducting who was the corresponding kuru team is executing the",
    "start": "1299590",
    "end": "1306150"
  },
  {
    "text": "red fine instruction at p.m. will throw back the program counter to the main",
    "start": "1306150",
    "end": "1311380"
  },
  {
    "text": "code at the memory address immediately after the instruction executed before the interruption occurs",
    "start": "1311380",
    "end": "1319110"
  },
  {
    "text": "some of the special functional registers ain't interruption handling if a program",
    "start": "1319550",
    "end": "1326520"
  },
  {
    "text": "is using interruptions the bit gie and P ie of the integer registers",
    "start": "1326520",
    "end": "1334170"
  },
  {
    "text": "will be set to one in assembly it looks like this the PSF instruction is used to",
    "start": "1334170",
    "end": "1342390"
  },
  {
    "text": "set to one a bit of a given register so when we dump a few more we can look for",
    "start": "1342390",
    "end": "1349740"
  },
  {
    "text": "these two instructions in the disassembly view to know if interruptions are enable in our target",
    "start": "1349740",
    "end": "1356640"
  },
  {
    "text": "device for every peripheral that could",
    "start": "1356640",
    "end": "1362250"
  },
  {
    "text": "trigger an interruption there are two bits inside a special register the",
    "start": "1362250",
    "end": "1368130"
  },
  {
    "text": "interruption enable bit and the interruption flag bit as example we can",
    "start": "1368130",
    "end": "1373560"
  },
  {
    "text": "put the timers here if a program wants to use this very Pharrell's this divert",
    "start": "1373560",
    "end": "1379520"
  },
  {
    "text": "the bits TN earth zero I must be set to 1 when the timer",
    "start": "1379520",
    "end": "1386730"
  },
  {
    "text": "triggers I need an interruption the young are zero I act with the",
    "start": "1386730",
    "end": "1392460"
  },
  {
    "text": "automatically set to 1 while not this flag will be to zero due to the fact",
    "start": "1392460",
    "end": "1399930"
  },
  {
    "text": "that in the latest microcontrollers there are too many peripherals there are special registers PI 1 PI 2 and PI 3",
    "start": "1399930",
    "end": "1406770"
  },
  {
    "text": "have interruption enable bits for different hardware peripherals and the",
    "start": "1406770",
    "end": "1413310"
  },
  {
    "text": "resistors p1 p2 and p3 have their respective interruption flags",
    "start": "1413310",
    "end": "1420650"
  },
  {
    "text": "so as I said a proceeding known as falling is used at the interval vector",
    "start": "1420650",
    "end": "1427620"
  },
  {
    "text": "to detect who triggers the interruption for doing this process is used the VT f",
    "start": "1427620",
    "end": "1435480"
  },
  {
    "text": "FC instruction for testing the value of the difference interruption flags in",
    "start": "1435480",
    "end": "1442260"
  },
  {
    "text": "this example we have 4 peripheral that could have trigger and interruption the",
    "start": "1442260",
    "end": "1447840"
  },
  {
    "text": "polling process will start pressing the plug of one of them the flag is set to one the cold below",
    "start": "1447840",
    "end": "1454670"
  },
  {
    "text": "will be done jumping to the quarantine that must be executed every time that this is specific peripheral triggers an",
    "start": "1454670",
    "end": "1461780"
  },
  {
    "text": "interruption it's not the polling will continue until find the flag set to 1 in",
    "start": "1461780",
    "end": "1470360"
  },
  {
    "text": "the disassembly view we're gonna see something like this so by inspecting the polling we are able",
    "start": "1470360",
    "end": "1477890"
  },
  {
    "text": "to know what peripherals are being useful for our target device remember",
    "start": "1477890",
    "end": "1483290"
  },
  {
    "text": "that the polling process will be always located at the address 8 for high-priority interruptions or 18 for",
    "start": "1483290",
    "end": "1490760"
  },
  {
    "text": "low priority interruptions if we'd assumed in one of the interruption flags",
    "start": "1490760",
    "end": "1497210"
  },
  {
    "text": "we observed that the bit file of the pin 1 register is being tested but what is",
    "start": "1497210",
    "end": "1504350"
  },
  {
    "text": "the vid file if we look at the data sheets of our target device we found",
    "start": "1504350",
    "end": "1511310"
  },
  {
    "text": "that the bit file of the pier or register correspond to the RC",
    "start": "1511310",
    "end": "1516850"
  },
  {
    "text": "interruption flag this is used by communication peripherals when the",
    "start": "1516850",
    "end": "1521960"
  },
  {
    "text": "microcontroller receives data this peripheral with trigger and interruptions that will set this flag to",
    "start": "1521960",
    "end": "1529040"
  },
  {
    "text": "1 in the polling process if this flag is",
    "start": "1529040",
    "end": "1534740"
  },
  {
    "text": "set to 1 the call will be done and a quarantine located at the address",
    "start": "1534740",
    "end": "1541030"
  },
  {
    "text": "48 in this case will be executed such code routine will we lose something with",
    "start": "1541030",
    "end": "1547610"
  },
  {
    "text": "the data received by this peripheral so",
    "start": "1547610",
    "end": "1553840"
  },
  {
    "text": "by inspecting the polling we not only know what peripheral are being used for",
    "start": "1553840",
    "end": "1558950"
  },
  {
    "text": "our target device but we can get memory addresses were we cooling checked our",
    "start": "1558950",
    "end": "1563960"
  },
  {
    "text": "payload for example if we want to do something when the microcontroller receives data for a communication",
    "start": "1563960",
    "end": "1571310"
  },
  {
    "text": "protocol we have to inject our payload where the earth say RC interruption",
    "start": "1571310",
    "end": "1576920"
  },
  {
    "text": "routine begins in this case is at the address 48 or if you want to do",
    "start": "1576920",
    "end": "1583400"
  },
  {
    "text": "something when the time zero triggers an interruption we should inject at the address for e and so on",
    "start": "1583400",
    "end": "1589979"
  },
  {
    "text": "the idea is being able to modify the original behavior of the microcontroller",
    "start": "1589979",
    "end": "1595019"
  },
  {
    "text": "when it's using it's different how our peripherals let's see an example of",
    "start": "1595019",
    "end": "1602190"
  },
  {
    "text": "factor in the user communication using this instruction technique the first",
    "start": "1602190",
    "end": "1607889"
  },
  {
    "text": "step is locating were they are see interruption routine begins by",
    "start": "1607889",
    "end": "1613349"
  },
  {
    "text": "inspecting the polling we got study in this case the memory address is 48 we",
    "start": "1613349",
    "end": "1620399"
  },
  {
    "text": "have to locate these others in the hexam so we can look for the face memory",
    "start": "1620399",
    "end": "1626159"
  },
  {
    "text": "address 14 and then count until 8 bytes there is worth the RC interruption",
    "start": "1626159",
    "end": "1633359"
  },
  {
    "text": "routine begins and where we should insert our payload but what Paila",
    "start": "1633359",
    "end": "1641389"
  },
  {
    "text": "will cook a payload that makes every line of the received data to a transmission ports that near able to",
    "start": "1641389",
    "end": "1648749"
  },
  {
    "text": "monitor stomach I mean the microcontroller will receive data from",
    "start": "1648749",
    "end": "1654179"
  },
  {
    "text": "anywhere and it will trigger an interruption at that moment our payload",
    "start": "1654179",
    "end": "1659639"
  },
  {
    "text": "Windows executed and we will catch such information and relay it to us in my",
    "start": "1659639",
    "end": "1667409"
  },
  {
    "text": "case I will use a USB interface because it's easier to show through what happened but it could be a wireless",
    "start": "1667409",
    "end": "1674220"
  },
  {
    "text": "module - this is our payload first we",
    "start": "1674220",
    "end": "1679619"
  },
  {
    "text": "catch the received data and we move it to the W register then the transmission",
    "start": "1679619",
    "end": "1686549"
  },
  {
    "text": "is enabled the operation mode is set as a synchronous and the TX pin the",
    "start": "1686549",
    "end": "1693239"
  },
  {
    "text": "transmission pin is set as an output and finally we move the receive data in the",
    "start": "1693239",
    "end": "1698999"
  },
  {
    "text": "value to the TX write anything writing in this register will be transmitted",
    "start": "1698999",
    "end": "1705989"
  },
  {
    "text": "through the TX pin to a USB or wireless module these instructions could vary a",
    "start": "1705989",
    "end": "1713309"
  },
  {
    "text": "little depending on the target device these are the opcode",
    "start": "1713309",
    "end": "1718500"
  },
  {
    "text": "of every assembly exception and this is our final payload so we already know at",
    "start": "1718500",
    "end": "1727110"
  },
  {
    "text": "what memory address we have to inject in this case they are seeing corruption",
    "start": "1727110",
    "end": "1732840"
  },
  {
    "text": "routine begins at the address 48 so we will place our payload there let's see",
    "start": "1732840",
    "end": "1741090"
  },
  {
    "text": "what what happened in the next video you're gonna see a hoverboard receiving",
    "start": "1741090",
    "end": "1746430"
  },
  {
    "text": "data from a smartphone that's when the interruption of tools and the data is",
    "start": "1746430",
    "end": "1751890"
  },
  {
    "text": "relayed to a USB interface the modified",
    "start": "1751890",
    "end": "1760020"
  },
  {
    "text": "fever was noted the factual thing worries noted in the microcontrollers",
    "start": "1760020",
    "end": "1765570"
  },
  {
    "text": "program memory and we are listening to a USB interface so we're gonna send a test",
    "start": "1765570",
    "end": "1774720"
  },
  {
    "text": "message to the world and the information",
    "start": "1774720",
    "end": "1782310"
  },
  {
    "text": "is relayed so as I said I was using a USB interface but it could be replaced",
    "start": "1782310",
    "end": "1789750"
  },
  {
    "text": "by a wireless model for remote connection and it's gonna work in the same way ok and after making a pillow",
    "start": "1789750",
    "end": "1800730"
  },
  {
    "text": "injection at whatever place we are making a shifting of bytes that could",
    "start": "1800730",
    "end": "1808050"
  },
  {
    "text": "affect the car I'm go to instruction because now they are champing to memory addresses whose",
    "start": "1808050",
    "end": "1814860"
  },
  {
    "text": "original original whites had been ships in large programs it might be a problem",
    "start": "1814860",
    "end": "1821370"
  },
  {
    "text": "that we have to solve for example in the graph we can observe a call jump into",
    "start": "1821370",
    "end": "1827460"
  },
  {
    "text": "the address 10 while after pillow instruction it should be something to",
    "start": "1827460",
    "end": "1832620"
  },
  {
    "text": "the address 16 we have to fix this to avoid of flow corruption these are the",
    "start": "1832620",
    "end": "1839970"
  },
  {
    "text": "opcode of the code or call and knob instructions in pick 18 the instructions",
    "start": "1839970",
    "end": "1848910"
  },
  {
    "text": "are 16 with inland eight bits are used for the up code and",
    "start": "1848910",
    "end": "1853920"
  },
  {
    "text": "eight bits for the address where he had to jump to but two more bites are",
    "start": "1853920",
    "end": "1859740"
  },
  {
    "text": "reserved in case of needing something more than 255 positions you have an",
    "start": "1859740",
    "end": "1867000"
  },
  {
    "text": "example the first jump is to the observe 6 and the second one to the observe 467",
    "start": "1867000",
    "end": "1876200"
  },
  {
    "text": "but in the disassembly view we're gonna see the memory address so we have to",
    "start": "1876200",
    "end": "1882540"
  },
  {
    "text": "divide it by 2 to get the upset and then be able to find it in the hot zone to",
    "start": "1882540",
    "end": "1890940"
  },
  {
    "text": "fix it we have to keep in mind the memory address where we have instructed our payload and the payload length we",
    "start": "1890940",
    "end": "1898080"
  },
  {
    "text": "only have to fix those chumps located after the one where we have injected our",
    "start": "1898080",
    "end": "1903540"
  },
  {
    "text": "payload for example if we injected at the memorial at 48 and we have a call 56",
    "start": "1903540",
    "end": "1912110"
  },
  {
    "text": "we have to recalculate the champ making a some of the original memory others",
    "start": "1912110",
    "end": "1918510"
  },
  {
    "text": "plus the payload length so probably we will need to fix some camps in large",
    "start": "1918510",
    "end": "1925140"
  },
  {
    "text": "program for example in this case I had to fix three different call instructions",
    "start": "1925140",
    "end": "1932090"
  },
  {
    "text": "but the true is that injecting the payload fix left shams and recalculate",
    "start": "1932090",
    "end": "1937559"
  },
  {
    "text": "the checksum might be a little bit tedious especially in large programs",
    "start": "1937559",
    "end": "1942780"
  },
  {
    "text": "so I'm actually working on a little tool to automate it in this process the two",
    "start": "1942780",
    "end": "1949080"
  },
  {
    "text": "receivers parameter the heck lump I mean the original key or the payload they",
    "start": "1949080",
    "end": "1955380"
  },
  {
    "text": "offset where you have to be injected and the name of the output file so the",
    "start": "1955380",
    "end": "1960870"
  },
  {
    "text": "program basically makes the instruction and fix all that sort of thing I hope be able to polish this tooling on",
    "start": "1960870",
    "end": "1968850"
  },
  {
    "text": "my cute reveal these days so stay tuned ok let's talk about the last second",
    "start": "1968850",
    "end": "1976800"
  },
  {
    "text": "sorry fellas injection technique I will spray how we can alter the",
    "start": "1976800",
    "end": "1982470"
  },
  {
    "text": "microcontroller so stuck and take control of the program flow in",
    "start": "1982470",
    "end": "1988249"
  },
  {
    "text": "multitude devices there are four special function registers to manipulate the",
    "start": "1988249",
    "end": "1993619"
  },
  {
    "text": "stack the first one is the stack pointer while those who touch and tussle compose",
    "start": "1993619",
    "end": "2001419"
  },
  {
    "text": "the top of the stack in the graph we can see an example the stack pointer is",
    "start": "2001419",
    "end": "2007210"
  },
  {
    "text": "pointing to the second entry of the stack which the value is 0 0 1 8 30 34",
    "start": "2007210",
    "end": "2016860"
  },
  {
    "text": "in practical implementation of these resistors first we should increment the",
    "start": "2016860",
    "end": "2022419"
  },
  {
    "text": "stack pointer and then write the toast processors with the memory address where",
    "start": "2022419",
    "end": "2027490"
  },
  {
    "text": "we want to institution and finally execute our return this is how it looks",
    "start": "2027490",
    "end": "2036369"
  },
  {
    "text": "in assembly first we increment the stack pointer and then we write all the",
    "start": "2036369",
    "end": "2043029"
  },
  {
    "text": "necessary values to the toast registers in this case to jump to the address 0 0",
    "start": "2043029",
    "end": "2048490"
  },
  {
    "text": "c 72 and finally the return in the",
    "start": "2048490",
    "end": "2055839"
  },
  {
    "text": "disassembly view we're gonna see something like that when the return is",
    "start": "2055839",
    "end": "2061658"
  },
  {
    "text": "executed the program will jump to the memory address 24 in this case from this",
    "start": "2061659",
    "end": "2070030"
  },
  {
    "text": "example we can get the opcodes of these instructions trigger them pain on",
    "start": "2070030",
    "end": "2075429"
  },
  {
    "text": "instruction at this moment we have two alternatives on one hand we call in checked our",
    "start": "2075429",
    "end": "2081099"
  },
  {
    "text": "failure everyone in the floor and then write the toast registers with the corresponding memory address or well we",
    "start": "2081099",
    "end": "2090010"
  },
  {
    "text": "can make a rope chain writing the toast registers with memory addresses for from",
    "start": "2090010",
    "end": "2096128"
  },
  {
    "text": "part of the code that we want to execute I mean create the payload with",
    "start": "2096129",
    "end": "2102250"
  },
  {
    "text": "instructions already written in the original program this is an example of",
    "start": "2102250",
    "end": "2107650"
  },
  {
    "text": "rock chain at the left all the memory addresses of our rod caches",
    "start": "2107650",
    "end": "2114670"
  },
  {
    "text": "that means the memory addresses from the parts of the code that we want executes and in the other side all the necessary",
    "start": "2114670",
    "end": "2122319"
  },
  {
    "text": "up calls to write the memory addresses in the stack those up comes including",
    "start": "2122319",
    "end": "2130089"
  },
  {
    "text": "the final read will compose our payload microcontrollers use a little stack tube",
    "start": "2130089",
    "end": "2136920"
  },
  {
    "text": "so the first cut to be executed will be the one located at the address 28 in",
    "start": "2136920",
    "end": "2143710"
  },
  {
    "text": "this case it's the last one injected in the rope chain this is an example of",
    "start": "2143710",
    "end": "2149799"
  },
  {
    "text": "captured you start out the address 40 and ends at 46 we talk rats W all the",
    "start": "2149799",
    "end": "2159130"
  },
  {
    "text": "drop gutters must end in a return or @lw to continue executing the other gutters",
    "start": "2159130",
    "end": "2166839"
  },
  {
    "text": "in their right way so let's hear them all in the next video you will see a",
    "start": "2166839",
    "end": "2173890"
  },
  {
    "text": "light turning on for every gadget of the rope chain being executed it's a nice",
    "start": "2173890",
    "end": "2180160"
  },
  {
    "text": "way that I plan to show to what happen",
    "start": "2180160",
    "end": "2184920"
  },
  {
    "text": "so it's got just of the rope chain being executed of course they could be less or",
    "start": "2185789",
    "end": "2194380"
  },
  {
    "text": "more it's just a nice way to see the effects ok finally let's talk about",
    "start": "2194380",
    "end": "2203910"
  },
  {
    "text": "program memory protections for an security point of view we cannot avoid",
    "start": "2203910",
    "end": "2209710"
  },
  {
    "text": "that someone overwrite the whole program memory of our microcontroller but we",
    "start": "2209710",
    "end": "2216339"
  },
  {
    "text": "could protect it from memory dumps and with other boy paylo finish actions at",
    "start": "2216339",
    "end": "2222549"
  },
  {
    "text": "the beginning of the programs before the main code is necessary to set some",
    "start": "2222549",
    "end": "2228579"
  },
  {
    "text": "configuration bits for microchip devices and among the among those bits there is",
    "start": "2228579",
    "end": "2236259"
  },
  {
    "text": "the code protection which but is we never only these ones our program wants",
    "start": "2236259",
    "end": "2244150"
  },
  {
    "text": "me protective against memory dumps I mean you are assemble your program",
    "start": "2244150",
    "end": "2249670"
  },
  {
    "text": "with this configuration the actives memory dumps winners in work and someone",
    "start": "2249670",
    "end": "2254829"
  },
  {
    "text": "will be able to disassemble you're prone to preventing memory dumps we have to",
    "start": "2254829",
    "end": "2261430"
  },
  {
    "text": "use the food protection it is the CPP bit and also the other protection is",
    "start": "2261430",
    "end": "2268630"
  },
  {
    "text": "useful too so with this my enabled in specific configuration bit now we don't",
    "start": "2268630",
    "end": "2277390"
  },
  {
    "text": "want work and if someone tries to dump the few more of your program the hex",
    "start": "2277390",
    "end": "2284290"
  },
  {
    "text": "file will contains only zeros as you cannot serve in the picture so",
    "start": "2284290",
    "end": "2291040"
  },
  {
    "text": "conclusions and bacteria in microcontrollers is possible and there",
    "start": "2291040",
    "end": "2296950"
  },
  {
    "text": "are some interesting devices to target into I explained three different",
    "start": "2296950",
    "end": "2303760"
  },
  {
    "text": "instructional techniques I brought a white paper that explains each one of",
    "start": "2303760",
    "end": "2309640"
  },
  {
    "text": "them we details it's gonna be Polish in the black hard right side together with",
    "start": "2309640",
    "end": "2314829"
  },
  {
    "text": "this slice and so I focus on microchip I think that most concept can be extended",
    "start": "2314829",
    "end": "2322329"
  },
  {
    "text": "to other vendors so finally ok this",
    "start": "2322329",
    "end": "2329380"
  },
  {
    "text": "route oh sorry",
    "start": "2329380",
    "end": "2336690"
  },
  {
    "text": "this looks like this doesn't work anymore yes the clicker is sighs mmm",
    "start": "2336690",
    "end": "2345060"
  },
  {
    "text": "okay no product and the last is please ladies only that I want to thank to soil",
    "start": "2345060",
    "end": "2350470"
  },
  {
    "text": "and Niko Weisman for a very health while I was right in the white paper and to",
    "start": "2350470",
    "end": "2355690"
  },
  {
    "text": "the people of dream blog for all the sports and thank you",
    "start": "2355690",
    "end": "2360480"
  },
  {
    "text": "[Applause]",
    "start": "2363190",
    "end": "2365479"
  }
]