[
  {
    "text": "uh good afternoon everyone um thanks for",
    "start": "3919",
    "end": "5879"
  },
  {
    "text": "coming out and and watching my talk um",
    "start": "5879",
    "end": "8559"
  },
  {
    "text": "yeah so today I'm going to be talking",
    "start": "8559",
    "end": "9880"
  },
  {
    "text": "about Windows fibers so if you're",
    "start": "9880",
    "end": "12440"
  },
  {
    "text": "anything like me you probably thought",
    "start": "12440",
    "end": "13960"
  },
  {
    "text": "fiber was some sort of dietary",
    "start": "13960",
    "end": "15360"
  },
  {
    "text": "requirement not an operating system",
    "start": "15360",
    "end": "17039"
  },
  {
    "text": "concept used and abused by attackers",
    "start": "17039",
    "end": "19840"
  },
  {
    "text": "then it wasn't really until I dove into",
    "start": "19840",
    "end": "22160"
  },
  {
    "text": "the topic that I realized oh dear proof",
    "start": "22160",
    "end": "24760"
  },
  {
    "text": "of concept tools malicious samples and",
    "start": "24760",
    "end": "28240"
  },
  {
    "text": "C2 Frameworks are making you of fibus",
    "start": "28240",
    "end": "30960"
  },
  {
    "text": "for their own gain but perhaps more",
    "start": "30960",
    "end": "33879"
  },
  {
    "text": "alarmingly there didn't seem to be any",
    "start": "33879",
    "end": "36120"
  },
  {
    "text": "robust way to detect what they're up",
    "start": "36120",
    "end": "38480"
  },
  {
    "text": "to so a little bit about me I'm a",
    "start": "38480",
    "end": "41680"
  },
  {
    "text": "security researcher with a background in",
    "start": "41680",
    "end": "44239"
  },
  {
    "text": "agent development previously I worked as",
    "start": "44239",
    "end": "47079"
  },
  {
    "text": "a senior security researcher for with",
    "start": "47079",
    "end": "49360"
  },
  {
    "text": "secure and F secure in their mpoint",
    "start": "49360",
    "end": "51160"
  },
  {
    "text": "research team and that was kind of",
    "start": "51160",
    "end": "52840"
  },
  {
    "text": "building novel detections to the latest",
    "start": "52840",
    "end": "55039"
  },
  {
    "text": "attack techniques um and then also",
    "start": "55039",
    "end": "57239"
  },
  {
    "text": "facilitating some of that research into",
    "start": "57239",
    "end": "59039"
  },
  {
    "text": "offensive tooling",
    "start": "59039",
    "end": "60640"
  },
  {
    "text": "um and that was both across windows and",
    "start": "60640",
    "end": "62640"
  },
  {
    "text": "Linux operating systems prior to that I",
    "start": "62640",
    "end": "65360"
  },
  {
    "text": "worked for UK intelligence for roughly 5",
    "start": "65360",
    "end": "67479"
  },
  {
    "text": "years doing a similar sort of thing",
    "start": "67479",
    "end": "68920"
  },
  {
    "text": "though that was mainly more AP focused",
    "start": "68920",
    "end": "72000"
  },
  {
    "text": "um and specifically on Windows um and",
    "start": "72000",
    "end": "74400"
  },
  {
    "text": "then alongside that I developed an",
    "start": "74400",
    "end": "75640"
  },
  {
    "text": "endpoint agent um and also worked as an",
    "start": "75640",
    "end": "78200"
  },
  {
    "text": "our consultant at",
    "start": "78200",
    "end": "80079"
  },
  {
    "text": "mandia so what are we're going to be",
    "start": "80079",
    "end": "81840"
  },
  {
    "text": "talking about today well first what are",
    "start": "81840",
    "end": "83759"
  },
  {
    "text": "fibers then how are they abused and",
    "start": "83759",
    "end": "88079"
  },
  {
    "text": "their appeal to attackers then how do we",
    "start": "88079",
    "end": "90840"
  },
  {
    "text": "go about reversing understanding the",
    "start": "90840",
    "end": "93240"
  },
  {
    "text": "core components and the internals of",
    "start": "93240",
    "end": "94840"
  },
  {
    "text": "fibers and extracting Telemetry from",
    "start": "94840",
    "end": "97159"
  },
  {
    "text": "memory and then how do we then",
    "start": "97159",
    "end": "99439"
  },
  {
    "text": "facilitate that into building detection",
    "start": "99439",
    "end": "102320"
  },
  {
    "text": "tooling that works on an Enterprise",
    "start": "102320",
    "end": "104040"
  },
  {
    "text": "scale um with an example used case of a",
    "start": "104040",
    "end": "106719"
  },
  {
    "text": "tool that I built uh called",
    "start": "106719",
    "end": "108560"
  },
  {
    "text": "wabix so I'm going to run you through",
    "start": "108560",
    "end": "110520"
  },
  {
    "text": "some key terms I'm sure you probably are",
    "start": "110520",
    "end": "112920"
  },
  {
    "text": "already aware but for those that aren't",
    "start": "112920",
    "end": "115119"
  },
  {
    "text": "we've got the Heap um that's an area of",
    "start": "115119",
    "end": "116799"
  },
  {
    "text": "memory reserved for data that's created",
    "start": "116799",
    "end": "118880"
  },
  {
    "text": "for and used by process process then we",
    "start": "118880",
    "end": "120799"
  },
  {
    "text": "have the process environment block",
    "start": "120799",
    "end": "122680"
  },
  {
    "text": "otherwise known as the PEB um that's a",
    "start": "122680",
    "end": "124600"
  },
  {
    "text": "data structure that represents",
    "start": "124600",
    "end": "126039"
  },
  {
    "text": "information about a process in user mode",
    "start": "126039",
    "end": "128599"
  },
  {
    "text": "then we have the TB which is the",
    "start": "128599",
    "end": "131200"
  },
  {
    "text": "equivalent for thread and then we have",
    "start": "131200",
    "end": "133400"
  },
  {
    "text": "the thread information block otherwise",
    "start": "133400",
    "end": "134920"
  },
  {
    "text": "known as The Tib um and this is actually",
    "start": "134920",
    "end": "136680"
  },
  {
    "text": "the first field of the TB and it",
    "start": "136680",
    "end": "138599"
  },
  {
    "text": "contains a pointer to fiber data and",
    "start": "138599",
    "end": "140920"
  },
  {
    "text": "some stack",
    "start": "140920",
    "end": "142400"
  },
  {
    "text": "information so I'm going to be talking",
    "start": "142400",
    "end": "144480"
  },
  {
    "text": "about fibers in the context of Windows",
    "start": "144480",
    "end": "146400"
  },
  {
    "text": "not any other operating system um",
    "start": "146400",
    "end": "148120"
  },
  {
    "text": "because their definition differs",
    "start": "148120",
    "end": "150280"
  },
  {
    "text": "um specifically builds from 1903 onwards",
    "start": "150280",
    "end": "152879"
  },
  {
    "text": "because Windows kind of redeveloped the",
    "start": "152879",
    "end": "155319"
  },
  {
    "text": "way it worked um Microsoft's own",
    "start": "155319",
    "end": "158319"
  },
  {
    "text": "definition is here on the slide um but I",
    "start": "158319",
    "end": "161519"
  },
  {
    "text": "actually prefer to Define them as stack",
    "start": "161519",
    "end": "163159"
  },
  {
    "text": "for co-routines um and co-routines are",
    "start": "163159",
    "end": "166200"
  },
  {
    "text": "just like functions that have stacks",
    "start": "166200",
    "end": "168560"
  },
  {
    "text": "except they don't return like a regular",
    "start": "168560",
    "end": "170159"
  },
  {
    "text": "function instead they're manually",
    "start": "170159",
    "end": "172040"
  },
  {
    "text": "switched from one another by the",
    "start": "172040",
    "end": "174000"
  },
  {
    "text": "application itself um and so they don't",
    "start": "174000",
    "end": "176200"
  },
  {
    "text": "have to rely on the thread system",
    "start": "176200",
    "end": "178040"
  },
  {
    "text": "Schuler they're user concept invisible",
    "start": "178040",
    "end": "181120"
  },
  {
    "text": "to the kernel and they run within a",
    "start": "181120",
    "end": "184239"
  },
  {
    "text": "thread but crucially only one fiber can",
    "start": "184239",
    "end": "187159"
  },
  {
    "text": "execute per thread at any one",
    "start": "187159",
    "end": "189519"
  },
  {
    "text": "time so if we've got any Java devs out",
    "start": "189519",
    "end": "192200"
  },
  {
    "text": "there think green threads it's kind of",
    "start": "192200",
    "end": "193840"
  },
  {
    "text": "like the functional equivalent and",
    "start": "193840",
    "end": "195760"
  },
  {
    "text": "they've actually been around since",
    "start": "195760",
    "end": "196760"
  },
  {
    "text": "Windows 95 and they were initially",
    "start": "196760",
    "end": "199400"
  },
  {
    "text": "designed when CPUs had less cores and",
    "start": "199400",
    "end": "202879"
  },
  {
    "text": "threads available to",
    "start": "202879",
    "end": "204640"
  },
  {
    "text": "them",
    "start": "204640",
    "end": "206159"
  },
  {
    "text": "now they were used in things like SQL",
    "start": "206159",
    "end": "208560"
  },
  {
    "text": "database servers or when developers",
    "start": "208560",
    "end": "210920"
  },
  {
    "text": "wanted to implement their own workloads",
    "start": "210920",
    "end": "213760"
  },
  {
    "text": "in a more efficient manner um but the",
    "start": "213760",
    "end": "216200"
  },
  {
    "text": "current recommendation is actually not",
    "start": "216200",
    "end": "217560"
  },
  {
    "text": "to use them where possible um but people",
    "start": "217560",
    "end": "220040"
  },
  {
    "text": "kind of still do for instance um in",
    "start": "220040",
    "end": "222120"
  },
  {
    "text": "browsers or audio software plugins so I",
    "start": "222120",
    "end": "225439"
  },
  {
    "text": "find it sometimes helpful to compare",
    "start": "225439",
    "end": "227000"
  },
  {
    "text": "operating systems and their Concepts",
    "start": "227000",
    "end": "229799"
  },
  {
    "text": "against one another to see where they",
    "start": "229799",
    "end": "231120"
  },
  {
    "text": "sit so fibers are essentially just mini",
    "start": "231120",
    "end": "233760"
  },
  {
    "text": "threads um and they're actually an",
    "start": "233760",
    "end": "235840"
  },
  {
    "text": "optional component not a mandat",
    "start": "235840",
    "end": "237480"
  },
  {
    "text": "component un like threads are and",
    "start": "237480",
    "end": "239360"
  },
  {
    "text": "they're managed by the application",
    "start": "239360",
    "end": "240720"
  },
  {
    "text": "itself rather than the operating system",
    "start": "240720",
    "end": "242560"
  },
  {
    "text": "and a thread system",
    "start": "242560",
    "end": "243959"
  },
  {
    "text": "Schuler and because they exist in user",
    "start": "243959",
    "end": "246239"
  },
  {
    "text": "mode when switching there's no expensive",
    "start": "246239",
    "end": "249360"
  },
  {
    "text": "kernel transition um during that context",
    "start": "249360",
    "end": "251760"
  },
  {
    "text": "switch and since only one fiber can be",
    "start": "251760",
    "end": "254799"
  },
  {
    "text": "run at any one time it means they're",
    "start": "254799",
    "end": "256320"
  },
  {
    "text": "implicitly synchronized which also means",
    "start": "256320",
    "end": "259040"
  },
  {
    "text": "we don't have any uh synchronization",
    "start": "259040",
    "end": "261880"
  },
  {
    "text": "constructs such as uh semaphores mutexes",
    "start": "261880",
    "end": "265479"
  },
  {
    "text": "weable timers to deal",
    "start": "265479",
    "end": "267560"
  },
  {
    "text": "with so what makes up a fire well I've",
    "start": "267560",
    "end": "270360"
  },
  {
    "text": "tried to graphically represent how I",
    "start": "270360",
    "end": "273000"
  },
  {
    "text": "feel fibers are made up um into three",
    "start": "273000",
    "end": "276520"
  },
  {
    "text": "components first we have our fiber",
    "start": "276520",
    "end": "278639"
  },
  {
    "text": "object the gray blocks at the bottom um",
    "start": "278639",
    "end": "281600"
  },
  {
    "text": "they contain our fiber data that's the",
    "start": "281600",
    "end": "283600"
  },
  {
    "text": "executable code assigned to a fiber then",
    "start": "283600",
    "end": "286240"
  },
  {
    "text": "we have our fiber local storage",
    "start": "286240",
    "end": "287639"
  },
  {
    "text": "highlighted in red um and this is the",
    "start": "287639",
    "end": "289919"
  },
  {
    "text": "functional equivalent to thread local",
    "start": "289919",
    "end": "292840"
  },
  {
    "text": "storage so it allows a fiber to store",
    "start": "292840",
    "end": "295360"
  },
  {
    "text": "and retrieve values for an index um and",
    "start": "295360",
    "end": "298479"
  },
  {
    "text": "then each fiber has its own own slot per",
    "start": "298479",
    "end": "300479"
  },
  {
    "text": "index so like on the diagram we have",
    "start": "300479",
    "end": "302800"
  },
  {
    "text": "three fiber objects and we also have",
    "start": "302800",
    "end": "304759"
  },
  {
    "text": "three slots per index and then finally",
    "start": "304759",
    "end": "307680"
  },
  {
    "text": "we have fiber callback functions",
    "start": "307680",
    "end": "309440"
  },
  {
    "text": "highlighted in yellow and these are",
    "start": "309440",
    "end": "310720"
  },
  {
    "text": "functions a user can point to when",
    "start": "310720",
    "end": "313039"
  },
  {
    "text": "allocating a new fiber local storage",
    "start": "313039",
    "end": "314880"
  },
  {
    "text": "index and they're called whenever the",
    "start": "314880",
    "end": "317160"
  },
  {
    "text": "fiber is deleted or the associated index",
    "start": "317160",
    "end": "320000"
  },
  {
    "text": "is",
    "start": "320000",
    "end": "320800"
  },
  {
    "text": "freed now some basic rules about using a",
    "start": "320800",
    "end": "323520"
  },
  {
    "text": "fiber to first use a fiber you need to",
    "start": "323520",
    "end": "325720"
  },
  {
    "text": "convert your thread to a fiber um then",
    "start": "325720",
    "end": "329000"
  },
  {
    "text": "there's actually no main fiber so every",
    "start": "329000",
    "end": "331039"
  },
  {
    "text": "fiber is actually considered equal um",
    "start": "331039",
    "end": "333520"
  },
  {
    "text": "it's very galarian um any fiber is free",
    "start": "333520",
    "end": "336280"
  },
  {
    "text": "to create or delete another fiber but",
    "start": "336280",
    "end": "338840"
  },
  {
    "text": "only one fiber can run per thread at any",
    "start": "338840",
    "end": "341880"
  },
  {
    "text": "one time so fibers are controlled by",
    "start": "341880",
    "end": "344199"
  },
  {
    "text": "this pretty simple API um and the main",
    "start": "344199",
    "end": "347280"
  },
  {
    "text": "reason for this Simplicity is the lack",
    "start": "347280",
    "end": "349639"
  },
  {
    "text": "of those synchronization functions and",
    "start": "349639",
    "end": "352680"
  },
  {
    "text": "constructs actually only switched to a",
    "start": "352680",
    "end": "355160"
  },
  {
    "text": "fiber which is highlighted in the bottom",
    "start": "355160",
    "end": "357840"
  },
  {
    "text": "left is actually responsible for",
    "start": "357840",
    "end": "360280"
  },
  {
    "text": "switching the execution from one fiber",
    "start": "360280",
    "end": "362039"
  },
  {
    "text": "to another so here I've kind of split it",
    "start": "362039",
    "end": "365360"
  },
  {
    "text": "up into three main categories you've got",
    "start": "365360",
    "end": "366840"
  },
  {
    "text": "your setup tear down and scheduling",
    "start": "366840",
    "end": "368360"
  },
  {
    "text": "functions you have your fiber local",
    "start": "368360",
    "end": "369960"
  },
  {
    "text": "storage based",
    "start": "369960",
    "end": "371280"
  },
  {
    "text": "functions um and then you have some",
    "start": "371280",
    "end": "373120"
  },
  {
    "text": "local inspection functions and what",
    "start": "373120",
    "end": "374840"
  },
  {
    "text": "you'll notice is the local inspection",
    "start": "374840",
    "end": "376599"
  },
  {
    "text": "functions are actually quite limited and",
    "start": "376599",
    "end": "378680"
  },
  {
    "text": "they're only relevant for the current",
    "start": "378680",
    "end": "380599"
  },
  {
    "text": "local fiber that's executing so how",
    "start": "380599",
    "end": "382880"
  },
  {
    "text": "might we use like fibers legitimately",
    "start": "382880",
    "end": "385280"
  },
  {
    "text": "well first we need to convert our thread",
    "start": "385280",
    "end": "387120"
  },
  {
    "text": "to fiber with the convert thread to",
    "start": "387120",
    "end": "388800"
  },
  {
    "text": "fiber core",
    "start": "388800",
    "end": "390199"
  },
  {
    "text": "then we might want to create a second",
    "start": "390199",
    "end": "392039"
  },
  {
    "text": "fiber and we Supply an argument with our",
    "start": "392039",
    "end": "394360"
  },
  {
    "text": "fiber data to execute optionally at this",
    "start": "394360",
    "end": "397599"
  },
  {
    "text": "point we could allocate some Fiber local",
    "start": "397599",
    "end": "399039"
  },
  {
    "text": "storage and then set of a slot value and",
    "start": "399039",
    "end": "402479"
  },
  {
    "text": "then when we're ready we can switch the",
    "start": "402479",
    "end": "404199"
  },
  {
    "text": "execution to this newly created fiber",
    "start": "404199",
    "end": "406120"
  },
  {
    "text": "with a switch to fiber function once",
    "start": "406120",
    "end": "408280"
  },
  {
    "text": "we're finished we can convert the fiber",
    "start": "408280",
    "end": "410280"
  },
  {
    "text": "back to a thread we convert fiber to",
    "start": "410280",
    "end": "413000"
  },
  {
    "text": "thread or we could switch execution to",
    "start": "413000",
    "end": "415360"
  },
  {
    "text": "another function or we could delete the",
    "start": "415360",
    "end": "417199"
  },
  {
    "text": "fiber itself which calls exit thread",
    "start": "417199",
    "end": "418919"
  },
  {
    "text": "internally",
    "start": "418919",
    "end": "419919"
  },
  {
    "text": "so how might an attacker use fibers well",
    "start": "419919",
    "end": "422800"
  },
  {
    "text": "there kind of like the vanilla way",
    "start": "422800",
    "end": "424160"
  },
  {
    "text": "highlighted in Red so as before we",
    "start": "424160",
    "end": "426800"
  },
  {
    "text": "convert our thread to a fiber we've",
    "start": "426800",
    "end": "428560"
  },
  {
    "text": "convert thread to fiber then say we",
    "start": "428560",
    "end": "431440"
  },
  {
    "text": "allocate some rewrite executable memory",
    "start": "431440",
    "end": "433680"
  },
  {
    "text": "we get our Shell Code we copy it in um",
    "start": "433680",
    "end": "436639"
  },
  {
    "text": "we create a new fiber with the create",
    "start": "436639",
    "end": "438080"
  },
  {
    "text": "fiber function and then we Supply a",
    "start": "438080",
    "end": "439560"
  },
  {
    "text": "pointer to this Shell Code in memory and",
    "start": "439560",
    "end": "442599"
  },
  {
    "text": "then we switch execution to it and now",
    "start": "442599",
    "end": "444319"
  },
  {
    "text": "the consequence of that is that our",
    "start": "444319",
    "end": "446199"
  },
  {
    "text": "shell code is executed an alternative",
    "start": "446199",
    "end": "448759"
  },
  {
    "text": "mechanism and a slightly more obscure",
    "start": "448759",
    "end": "450759"
  },
  {
    "text": "way would be to use a malicious callback",
    "start": "450759",
    "end": "454280"
  },
  {
    "text": "so fls aloc allocates a new fiber local",
    "start": "454280",
    "end": "457840"
  },
  {
    "text": "storage index and at the same time you",
    "start": "457840",
    "end": "459960"
  },
  {
    "text": "can also Define a callback function now",
    "start": "459960",
    "end": "462160"
  },
  {
    "text": "this callback function is executed",
    "start": "462160",
    "end": "464240"
  },
  {
    "text": "whenever that index is freed or the",
    "start": "464240",
    "end": "466919"
  },
  {
    "text": "fiber itself is deleted realizing this",
    "start": "466919",
    "end": "469680"
  },
  {
    "text": "what an attacker could do is Define a",
    "start": "469680",
    "end": "472120"
  },
  {
    "text": "malicious",
    "start": "472120",
    "end": "473039"
  },
  {
    "text": "callback then free that index delete the",
    "start": "473039",
    "end": "475599"
  },
  {
    "text": "fiber and then the consequence of this",
    "start": "475599",
    "end": "477800"
  },
  {
    "text": "their call back is executed now the",
    "start": "477800",
    "end": "479960"
  },
  {
    "text": "benefit of this method is there's no",
    "start": "479960",
    "end": "482720"
  },
  {
    "text": "forensic artifact that we can gather",
    "start": "482720",
    "end": "484960"
  },
  {
    "text": "from the TB or the PEB or The Tib or",
    "start": "484960",
    "end": "487520"
  },
  {
    "text": "perhaps anywhere else that gives us the",
    "start": "487520",
    "end": "489639"
  },
  {
    "text": "information about what the callbacks are",
    "start": "489639",
    "end": "491879"
  },
  {
    "text": "or the actual structure of it in memory",
    "start": "491879",
    "end": "494720"
  },
  {
    "text": "so why do fibers appeal to attackers",
    "start": "494720",
    "end": "497800"
  },
  {
    "text": "well first off Simplicity you've seen",
    "start": "497800",
    "end": "500400"
  },
  {
    "text": "how basic the API is you seen how easy",
    "start": "500400",
    "end": "502720"
  },
  {
    "text": "it is to use there's a very low barrier",
    "start": "502720",
    "end": "504039"
  },
  {
    "text": "to entry um and fiber safety is built in",
    "start": "504039",
    "end": "508120"
  },
  {
    "text": "next they're obscure and so threat",
    "start": "508120",
    "end": "510639"
  },
  {
    "text": "Hunters might be aware what fibers are",
    "start": "510639",
    "end": "512279"
  },
  {
    "text": "but they're unlikely to know the",
    "start": "512279",
    "end": "513880"
  },
  {
    "text": "difference between a legitimate and",
    "start": "513880",
    "end": "516479"
  },
  {
    "text": "suspicious looking fiber and also",
    "start": "516479",
    "end": "518440"
  },
  {
    "text": "dormant fibers themselves um are just",
    "start": "518440",
    "end": "521080"
  },
  {
    "text": "parked elsewhere in memory so there's no",
    "start": "521080",
    "end": "523120"
  },
  {
    "text": "real easy way to get at them and then",
    "start": "523120",
    "end": "524839"
  },
  {
    "text": "fundamentally what this leads to is an",
    "start": "524839",
    "end": "527040"
  },
  {
    "text": "immature detection posture when it comes",
    "start": "527040",
    "end": "529320"
  },
  {
    "text": "to Telemetry and signatures so most edrs",
    "start": "529320",
    "end": "532800"
  },
  {
    "text": "for instance will collect core stacks on",
    "start": "532800",
    "end": "534360"
  },
  {
    "text": "a certain operating system event",
    "start": "534360",
    "end": "535600"
  },
  {
    "text": "happening so like a remote VM read to",
    "start": "535600",
    "end": "538720"
  },
  {
    "text": "Elsas memory um and at this point the",
    "start": "538720",
    "end": "542120"
  },
  {
    "text": "cool stack will be collected which is",
    "start": "542120",
    "end": "543920"
  },
  {
    "text": "and it will trigger how you led up to",
    "start": "543920",
    "end": "545959"
  },
  {
    "text": "that event in the first place now what",
    "start": "545959",
    "end": "548760"
  },
  {
    "text": "event do you use to collect fiber cool",
    "start": "548760",
    "end": "551160"
  },
  {
    "text": "Stacks um and then how do you tell what",
    "start": "551160",
    "end": "553880"
  },
  {
    "text": "is legitimate and malicious especially",
    "start": "553880",
    "end": "556079"
  },
  {
    "text": "when a an attacker can perform most of",
    "start": "556079",
    "end": "559160"
  },
  {
    "text": "their act actions in one fiber and then",
    "start": "559160",
    "end": "562279"
  },
  {
    "text": "switch to another fiber and execute that",
    "start": "562279",
    "end": "565320"
  },
  {
    "text": "last action which generates the core",
    "start": "565320",
    "end": "566880"
  },
  {
    "text": "stack now the core stack that we collect",
    "start": "566880",
    "end": "569240"
  },
  {
    "text": "would miss out all the malicious actions",
    "start": "569240",
    "end": "571040"
  },
  {
    "text": "that have been executing that previous",
    "start": "571040",
    "end": "573240"
  },
  {
    "text": "fiber moving on from this we could",
    "start": "573240",
    "end": "575519"
  },
  {
    "text": "actually have a look at driver supplied",
    "start": "575519",
    "end": "577880"
  },
  {
    "text": "callback so a lot of edrs have moved",
    "start": "577880",
    "end": "579920"
  },
  {
    "text": "away from user land hooks in order to",
    "start": "579920",
    "end": "582079"
  },
  {
    "text": "generate the Telemetry because attackers",
    "start": "582079",
    "end": "584480"
  },
  {
    "text": "can simply nullify them and get rid of",
    "start": "584480",
    "end": "587880"
  },
  {
    "text": "that Telemetry source so instead to add",
    "start": "587880",
    "end": "590519"
  },
  {
    "text": "a bit more robustness they might use",
    "start": "590519",
    "end": "592040"
  },
  {
    "text": "like thread creation deletion events to",
    "start": "592040",
    "end": "594200"
  },
  {
    "text": "to kind of bring some Telemetry in but",
    "start": "594200",
    "end": "596160"
  },
  {
    "text": "the problem is because fibers are a user",
    "start": "596160",
    "end": "598160"
  },
  {
    "text": "mode concept They Live and Die in",
    "start": "598160",
    "end": "600240"
  },
  {
    "text": "between those two events therefore we",
    "start": "600240",
    "end": "602000"
  },
  {
    "text": "don't actually collect any Telemetry and",
    "start": "602000",
    "end": "604399"
  },
  {
    "text": "then on top of that there's no remote",
    "start": "604399",
    "end": "606600"
  },
  {
    "text": "enumeration functions in the API there's",
    "start": "606600",
    "end": "608959"
  },
  {
    "text": "no open source tooling to my knowledge",
    "start": "608959",
    "end": "610839"
  },
  {
    "text": "and there's no specific etw based",
    "start": "610839",
    "end": "613640"
  },
  {
    "text": "providers so we need to find fibers",
    "start": "613640",
    "end": "615880"
  },
  {
    "text": "ourselves and before we start I find",
    "start": "615880",
    "end": "619079"
  },
  {
    "text": "it's really good to Define some clear",
    "start": "619079",
    "end": "620920"
  },
  {
    "text": "goals of what what actually we want to",
    "start": "620920",
    "end": "622440"
  },
  {
    "text": "do and get and extract from memory so",
    "start": "622440",
    "end": "626000"
  },
  {
    "text": "one we want to remotely identify which",
    "start": "626000",
    "end": "628720"
  },
  {
    "text": "fiber",
    "start": "628720",
    "end": "630000"
  },
  {
    "text": "are running on which threads next we",
    "start": "630000",
    "end": "632920"
  },
  {
    "text": "want to know what makes up a fiber and",
    "start": "632920",
    "end": "634720"
  },
  {
    "text": "where it lives when it's dormant and",
    "start": "634720",
    "end": "637279"
  },
  {
    "text": "then we want to be able to associate",
    "start": "637279",
    "end": "639079"
  },
  {
    "text": "those fibers with the correct set of",
    "start": "639079",
    "end": "640399"
  },
  {
    "text": "fiber local storage fiber callbacks and",
    "start": "640399",
    "end": "643760"
  },
  {
    "text": "thread IDs we can then build valuable",
    "start": "643760",
    "end": "646800"
  },
  {
    "text": "Telemetry hopefully to create",
    "start": "646800",
    "end": "649839"
  },
  {
    "text": "detections but unlike investigating",
    "start": "649839",
    "end": "652320"
  },
  {
    "text": "threads um as with anything there are a",
    "start": "652320",
    "end": "655959"
  },
  {
    "text": "few little problems and hurdles you need",
    "start": "655959",
    "end": "657680"
  },
  {
    "text": "to overcome um so as I said earlier",
    "start": "657680",
    "end": "661200"
  },
  {
    "text": "there's no remote enumeration functions",
    "start": "661200",
    "end": "663240"
  },
  {
    "text": "there's no open source tools um and also",
    "start": "663240",
    "end": "666600"
  },
  {
    "text": "the documentation is severely limited so",
    "start": "666600",
    "end": "669800"
  },
  {
    "text": "you might be thinking right let's open",
    "start": "669800",
    "end": "671399"
  },
  {
    "text": "up a copy of wind Windows internals um",
    "start": "671399",
    "end": "674279"
  },
  {
    "text": "let's have a look there's a 100 pages on",
    "start": "674279",
    "end": "676360"
  },
  {
    "text": "how threads work well actually that that",
    "start": "676360",
    "end": "678279"
  },
  {
    "text": "little screenshot there is all you've",
    "start": "678279",
    "end": "679600"
  },
  {
    "text": "really got for fibers and it's not any",
    "start": "679600",
    "end": "682079"
  },
  {
    "text": "more helpful than looking at the msdn",
    "start": "682079",
    "end": "686000"
  },
  {
    "text": "documentation um and then as mentioned",
    "start": "686000",
    "end": "688560"
  },
  {
    "text": "um there's no open source tooling so we",
    "start": "688560",
    "end": "690120"
  },
  {
    "text": "need to produce something novel to",
    "start": "690120",
    "end": "692560"
  },
  {
    "text": "achieve our goals so a good place to",
    "start": "692560",
    "end": "695000"
  },
  {
    "text": "start is to look for those local and",
    "start": "695000",
    "end": "696920"
  },
  {
    "text": "numeration functions for Clues so if we",
    "start": "696920",
    "end": "699519"
  },
  {
    "text": "start with is thread of fiber um it does",
    "start": "699519",
    "end": "702079"
  },
  {
    "text": "exactly what it says on the Tim it tells",
    "start": "702079",
    "end": "703839"
  },
  {
    "text": "you if that currently running thread is",
    "start": "703839",
    "end": "706160"
  },
  {
    "text": "using fibers so we open that up in Ida",
    "start": "706160",
    "end": "708800"
  },
  {
    "text": "turns out it's actually just really",
    "start": "708800",
    "end": "709959"
  },
  {
    "text": "simple it's um it's collecting the TB",
    "start": "709959",
    "end": "712880"
  },
  {
    "text": "and reading the same T flag field and",
    "start": "712880",
    "end": "715200"
  },
  {
    "text": "check and see if that third bit is set",
    "start": "715200",
    "end": "717200"
  },
  {
    "text": "if set introduces a thread is running",
    "start": "717200",
    "end": "719560"
  },
  {
    "text": "fibers um and then we can just test this",
    "start": "719560",
    "end": "721720"
  },
  {
    "text": "by writing our own fiber program um",
    "start": "721720",
    "end": "724079"
  },
  {
    "text": "either setting a debug break or breaking",
    "start": "724079",
    "end": "725839"
  },
  {
    "text": "into it ourselves um and dumping that",
    "start": "725839",
    "end": "729800"
  },
  {
    "text": "field and yes we can see look that has",
    "start": "729800",
    "end": "731880"
  },
  {
    "text": "been set therefore we are running fibers",
    "start": "731880",
    "end": "735040"
  },
  {
    "text": "so to build on this we want to go about",
    "start": "735040",
    "end": "737440"
  },
  {
    "text": "um looking at it from a remote",
    "start": "737440",
    "end": "739399"
  },
  {
    "text": "enumeration perspective so anyone that's",
    "start": "739399",
    "end": "741880"
  },
  {
    "text": "built a memory scanner before will be",
    "start": "741880",
    "end": "743680"
  },
  {
    "text": "kind of familiar with this first we take",
    "start": "743680",
    "end": "745279"
  },
  {
    "text": "a snapshot of all the running threads um",
    "start": "745279",
    "end": "747720"
  },
  {
    "text": "then we open the thread and nquery info",
    "start": "747720",
    "end": "750279"
  },
  {
    "text": "threed to get the TB Base address and",
    "start": "750279",
    "end": "752720"
  },
  {
    "text": "then we just read the offset to that",
    "start": "752720",
    "end": "754639"
  },
  {
    "text": "same T Flags field so doing this nrows",
    "start": "754639",
    "end": "757120"
  },
  {
    "text": "down which threads are running fibers",
    "start": "757120",
    "end": "758959"
  },
  {
    "text": "from that snapshot so the remaining two",
    "start": "758959",
    "end": "761040"
  },
  {
    "text": "local inspection functions are actually",
    "start": "761040",
    "end": "762839"
  },
  {
    "text": "just macros so we can open the source",
    "start": "762839",
    "end": "764720"
  },
  {
    "text": "for them pretty easy so get fiber data",
    "start": "764720",
    "end": "767680"
  },
  {
    "text": "Returns the value of fiber data that's",
    "start": "767680",
    "end": "769120"
  },
  {
    "text": "our read executable code which is stored",
    "start": "769120",
    "end": "771720"
  },
  {
    "text": "actually in a field in the in the thread",
    "start": "771720",
    "end": "773480"
  },
  {
    "text": "information block the tip and then get",
    "start": "773480",
    "end": "775959"
  },
  {
    "text": "current fiber Returns the dress of the",
    "start": "775959",
    "end": "778320"
  },
  {
    "text": "current fiber object um which is",
    "start": "778320",
    "end": "780399"
  },
  {
    "text": "actually just the address of that fiber",
    "start": "780399",
    "end": "781839"
  },
  {
    "text": "data field so from this we can actually",
    "start": "781839",
    "end": "785040"
  },
  {
    "text": "infer that the first field of a fiber",
    "start": "785040",
    "end": "788680"
  },
  {
    "text": "object will begin with fiber",
    "start": "788680",
    "end": "791760"
  },
  {
    "text": "data so after that step we can determine",
    "start": "791760",
    "end": "795480"
  },
  {
    "text": "if a thread is currently executing a",
    "start": "795480",
    "end": "797720"
  },
  {
    "text": "fiber and the fiber data field of the",
    "start": "797720",
    "end": "800240"
  },
  {
    "text": "current fiber next we want to have a",
    "start": "800240",
    "end": "802720"
  },
  {
    "text": "look at identifying the remaining fills",
    "start": "802720",
    "end": "804600"
  },
  {
    "text": "in the fiber object and how to find",
    "start": "804600",
    "end": "807600"
  },
  {
    "text": "dormant fibers and associate them with",
    "start": "807600",
    "end": "809560"
  },
  {
    "text": "the correct thread ID according to msdn",
    "start": "809560",
    "end": "812880"
  },
  {
    "text": "to use fibers you must convert a thread",
    "start": "812880",
    "end": "815240"
  },
  {
    "text": "to a fiber with convert thread to",
    "start": "815240",
    "end": "818079"
  },
  {
    "text": "fiber now this function takes an",
    "start": "818079",
    "end": "820120"
  },
  {
    "text": "optional parameter to set the fiber data",
    "start": "820120",
    "end": "822440"
  },
  {
    "text": "filled and here's what it looks like",
    "start": "822440",
    "end": "824320"
  },
  {
    "text": "decompiled in Ida so what's really going",
    "start": "824320",
    "end": "826920"
  },
  {
    "text": "on here well on line 20 we can see the",
    "start": "826920",
    "end": "830519"
  },
  {
    "text": "TB is being",
    "start": "830519",
    "end": "832040"
  },
  {
    "text": "collected um following this the same T",
    "start": "832040",
    "end": "834440"
  },
  {
    "text": "flag field is being checked so",
    "start": "834440",
    "end": "837720"
  },
  {
    "text": "essentially we are performing a sanity",
    "start": "837720",
    "end": "839720"
  },
  {
    "text": "check to see if we're currently running",
    "start": "839720",
    "end": "841880"
  },
  {
    "text": "fibers or not following this on line 26",
    "start": "841880",
    "end": "846880"
  },
  {
    "text": "um we're allocating a new heat block",
    "start": "846880",
    "end": "849279"
  },
  {
    "text": "crucially of size 530 heximal bytes",
    "start": "849279",
    "end": "852600"
  },
  {
    "text": "using RTL allocate Heap now on line 33",
    "start": "852600",
    "end": "856800"
  },
  {
    "text": "the lp parameter value representing our",
    "start": "856800",
    "end": "859120"
  },
  {
    "text": "fiber data field is being set as the",
    "start": "859120",
    "end": "861639"
  },
  {
    "text": "first field on that newly allocated heat",
    "start": "861639",
    "end": "863800"
  },
  {
    "text": "block um and this what it does it",
    "start": "863800",
    "end": "865800"
  },
  {
    "text": "indicates to us that this heat block is",
    "start": "865800",
    "end": "867519"
  },
  {
    "text": "being used to house fiber",
    "start": "867519",
    "end": "869720"
  },
  {
    "text": "object then on 34 to 44 other fields",
    "start": "869720",
    "end": "873279"
  },
  {
    "text": "from the the TB and The Tib are being",
    "start": "873279",
    "end": "875519"
  },
  {
    "text": "copied over to this new fiber",
    "start": "875519",
    "end": "877720"
  },
  {
    "text": "object from this we can infer that fiber",
    "start": "877720",
    "end": "880199"
  },
  {
    "text": "objects are stalled on the Heap and",
    "start": "880199",
    "end": "882959"
  },
  {
    "text": "fiber objects contain fills copied over",
    "start": "882959",
    "end": "884720"
  },
  {
    "text": "from the TB but crucially that requested",
    "start": "884720",
    "end": "887320"
  },
  {
    "text": "heat block allocation size is a static",
    "start": "887320",
    "end": "889920"
  },
  {
    "text": "530 heximal bytes on 64-bit",
    "start": "889920",
    "end": "893240"
  },
  {
    "text": "systems so using a similar methodology I",
    "start": "893240",
    "end": "896120"
  },
  {
    "text": "investigated the remaining tear up tear",
    "start": "896120",
    "end": "898480"
  },
  {
    "text": "down and scheduling functions and kind",
    "start": "898480",
    "end": "900480"
  },
  {
    "text": "of piece together all the fields in that",
    "start": "900480",
    "end": "902560"
  },
  {
    "text": "fiber object I then validated my",
    "start": "902560",
    "end": "904920"
  },
  {
    "text": "findings against my own fiber program",
    "start": "904920",
    "end": "907000"
  },
  {
    "text": "and then tested that output with windbag",
    "start": "907000",
    "end": "910600"
  },
  {
    "text": "to see what I might expect to see so an",
    "start": "910600",
    "end": "913399"
  },
  {
    "text": "interesting point worth noting though is",
    "start": "913399",
    "end": "915120"
  },
  {
    "text": "there actually isn't any thread ID field",
    "start": "915120",
    "end": "918160"
  },
  {
    "text": "in that fiber object and we'll come on",
    "start": "918160",
    "end": "919959"
  },
  {
    "text": "to see why this is a bit of a problem",
    "start": "919959",
    "end": "921600"
  },
  {
    "text": "later so next we want to scan the Heap",
    "start": "921600",
    "end": "923440"
  },
  {
    "text": "for any potential fiber objects so to do",
    "start": "923440",
    "end": "925480"
  },
  {
    "text": "this we identify um the Heap used by",
    "start": "925480",
    "end": "928279"
  },
  {
    "text": "process so we can look in the PEB and we",
    "start": "928279",
    "end": "930279"
  },
  {
    "text": "get a list of pointers to the heaps um",
    "start": "930279",
    "end": "933120"
  },
  {
    "text": "then we can filter for N Style heaps",
    "start": "933120",
    "end": "934920"
  },
  {
    "text": "using the segment signature and the Heap",
    "start": "934920",
    "end": "936680"
  },
  {
    "text": "headers um then we can decode heat",
    "start": "936680",
    "end": "939120"
  },
  {
    "text": "pantries because they're encoded um and",
    "start": "939120",
    "end": "941360"
  },
  {
    "text": "we can use the encoding value to reveal",
    "start": "941360",
    "end": "943120"
  },
  {
    "text": "the True Values of the Heap entry",
    "start": "943120",
    "end": "945319"
  },
  {
    "text": "headers but what you'll notice is that",
    "start": "945319",
    "end": "947639"
  },
  {
    "text": "in the Heap entry headers there's no",
    "start": "947639",
    "end": "949360"
  },
  {
    "text": "requested bytes field so we need to",
    "start": "949360",
    "end": "951519"
  },
  {
    "text": "calculate ourselves using the true bites",
    "start": "951519",
    "end": "953839"
  },
  {
    "text": "the number of unused bites and the size",
    "start": "953839",
    "end": "955519"
  },
  {
    "text": "taken up by the Heap entri header itself",
    "start": "955519",
    "end": "958199"
  },
  {
    "text": "once we've done this we can generate a",
    "start": "958199",
    "end": "960000"
  },
  {
    "text": "list of potential fiber objects based on",
    "start": "960000",
    "end": "963399"
  },
  {
    "text": "that requested allocation size of 530",
    "start": "963399",
    "end": "965600"
  },
  {
    "text": "hexal",
    "start": "965600",
    "end": "967639"
  },
  {
    "text": "bytes now because the Heap exists on a",
    "start": "967639",
    "end": "971040"
  },
  {
    "text": "per process level rather than a per",
    "start": "971040",
    "end": "973160"
  },
  {
    "text": "thread level it means we need a way of",
    "start": "973160",
    "end": "975959"
  },
  {
    "text": "grouping fibers together based on that",
    "start": "975959",
    "end": "978079"
  },
  {
    "text": "thread ID now that's fine for currently",
    "start": "978079",
    "end": "980720"
  },
  {
    "text": "executing fibers because we all already",
    "start": "980720",
    "end": "982880"
  },
  {
    "text": "have a thread ID from the thread basic",
    "start": "982880",
    "end": "985040"
  },
  {
    "text": "information when creating a thread",
    "start": "985040",
    "end": "986800"
  },
  {
    "text": "handle um and we just read that client",
    "start": "986800",
    "end": "989120"
  },
  {
    "text": "ID field but nor for dorant fibers we",
    "start": "989120",
    "end": "992000"
  },
  {
    "text": "don't have a thread ID they're just some",
    "start": "992000",
    "end": "994839"
  },
  {
    "text": "Rand random region of memory on the Heap",
    "start": "994839",
    "end": "998240"
  },
  {
    "text": "so this is where the fls data field um",
    "start": "998240",
    "end": "1000639"
  },
  {
    "text": "highlighted in yellow and that fiber",
    "start": "1000639",
    "end": "1002160"
  },
  {
    "text": "object comes in handy so when I was",
    "start": "1002160",
    "end": "1005399"
  },
  {
    "text": "investigating this it turned out it was",
    "start": "1005399",
    "end": "1006880"
  },
  {
    "text": "just a pointer to a struct whose first",
    "start": "1006880",
    "end": "1008639"
  },
  {
    "text": "member was a list entry that contained a",
    "start": "1008639",
    "end": "1011160"
  },
  {
    "text": "forward and a back link so essentially a",
    "start": "1011160",
    "end": "1012959"
  },
  {
    "text": "w link list um so I began testing and",
    "start": "1012959",
    "end": "1016040"
  },
  {
    "text": "discovered like each member on that W",
    "start": "1016040",
    "end": "1018000"
  },
  {
    "text": "link list actually pointed to another",
    "start": "1018000",
    "end": "1020639"
  },
  {
    "text": "fiber object on the heat um but not only",
    "start": "1020639",
    "end": "1023880"
  },
  {
    "text": "this those fiber objects were only owned",
    "start": "1023880",
    "end": "1026798"
  },
  {
    "text": "by a single thread um the thread that",
    "start": "1026799",
    "end": "1029798"
  },
  {
    "text": "was used to create them in the first",
    "start": "1029799",
    "end": "1031360"
  },
  {
    "text": "place so thus I found a way to associate",
    "start": "1031360",
    "end": "1033880"
  },
  {
    "text": "dormant fibers um with the correct",
    "start": "1033880",
    "end": "1036959"
  },
  {
    "text": "thread ID and match them with the",
    "start": "1036959",
    "end": "1038640"
  },
  {
    "text": "currently executing fiber and you you'll",
    "start": "1038640",
    "end": "1040918"
  },
  {
    "text": "notice there's this other entry in that",
    "start": "1040919",
    "end": "1042918"
  },
  {
    "text": "W link list um and this points to this",
    "start": "1042919",
    "end": "1045640"
  },
  {
    "text": "undefined fls context structure and I'll",
    "start": "1045640",
    "end": "1048720"
  },
  {
    "text": "come on to why this is important",
    "start": "1048720",
    "end": "1050880"
  },
  {
    "text": "soon so after that step what have we got",
    "start": "1050880",
    "end": "1053440"
  },
  {
    "text": "we've got a full fiber object structure",
    "start": "1053440",
    "end": "1055919"
  },
  {
    "text": "and which fibers both current and",
    "start": "1055919",
    "end": "1058039"
  },
  {
    "text": "dormant are associated with each thread",
    "start": "1058039",
    "end": "1061120"
  },
  {
    "text": "next we want to identify how many fiber",
    "start": "1061120",
    "end": "1062960"
  },
  {
    "text": "local storage indexes are in use and",
    "start": "1062960",
    "end": "1065280"
  },
  {
    "text": "which fi local storage slots they belong",
    "start": "1065280",
    "end": "1068000"
  },
  {
    "text": "to so a good place to look for Clues is",
    "start": "1068000",
    "end": "1070559"
  },
  {
    "text": "fls get value what this does you provide",
    "start": "1070559",
    "end": "1072880"
  },
  {
    "text": "it with an index number and then it",
    "start": "1072880",
    "end": "1074679"
  },
  {
    "text": "retrieves the calling fibers fiber local",
    "start": "1074679",
    "end": "1076919"
  },
  {
    "text": "storage slot so often to begin with",
    "start": "1076919",
    "end": "1079559"
  },
  {
    "text": "decompilation and disassembly you got to",
    "start": "1079559",
    "end": "1081600"
  },
  {
    "text": "do a lot of fix-ups um it doesn't make",
    "start": "1081600",
    "end": "1083640"
  },
  {
    "text": "an awful lot of sense but I find like",
    "start": "1083640",
    "end": "1086039"
  },
  {
    "text": "correctly identifying the variables used",
    "start": "1086039",
    "end": "1089280"
  },
  {
    "text": "um casting these to the correct types",
    "start": "1089280",
    "end": "1090919"
  },
  {
    "text": "especially if you got some pseudo",
    "start": "1090919",
    "end": "1092159"
  },
  {
    "text": "structures and then looking for",
    "start": "1092159",
    "end": "1094400"
  },
  {
    "text": "definitions that have been passed into",
    "start": "1094400",
    "end": "1097080"
  },
  {
    "text": "um functions higher up in the co chains",
    "start": "1097080",
    "end": "1098679"
  },
  {
    "text": "for Clues obviously helps you kind of",
    "start": "1098679",
    "end": "1100520"
  },
  {
    "text": "Mak a bit of sense of the madness um so",
    "start": "1100520",
    "end": "1103440"
  },
  {
    "text": "this screenshot actually shows my",
    "start": "1103440",
    "end": "1105039"
  },
  {
    "text": "decompiled code from the uh C runtime",
    "start": "1105039",
    "end": "1107760"
  },
  {
    "text": "equivalent of fls get value is where the",
    "start": "1107760",
    "end": "1109640"
  },
  {
    "text": "bulk of the work's done so what happens",
    "start": "1109640",
    "end": "1112440"
  },
  {
    "text": "here on line n it collects the fls data",
    "start": "1112440",
    "end": "1114840"
  },
  {
    "text": "field um then following this on line 10",
    "start": "1114840",
    "end": "1117240"
  },
  {
    "text": "it checks the index value supplied to it",
    "start": "1117240",
    "end": "1119440"
  },
  {
    "text": "is not above 4079 now this is actually a",
    "start": "1119440",
    "end": "1122080"
  },
  {
    "text": "hardcoded maximum when um they",
    "start": "1122080",
    "end": "1124679"
  },
  {
    "text": "introduced from 1903 builds onwards when",
    "start": "1124679",
    "end": "1127159"
  },
  {
    "text": "they redid the way that fiber local",
    "start": "1127159",
    "end": "1128919"
  },
  {
    "text": "storage Works um and then following that",
    "start": "1128919",
    "end": "1132520"
  },
  {
    "text": "from lines 12 to 16 you it applies this",
    "start": "1132520",
    "end": "1135200"
  },
  {
    "text": "algorithm to to fetch the address um",
    "start": "1135200",
    "end": "1138840"
  },
  {
    "text": "stored the of the value stored in the",
    "start": "1138840",
    "end": "1141120"
  },
  {
    "text": "fiber local storage slot when given the",
    "start": "1141120",
    "end": "1143799"
  },
  {
    "text": "fiber local storage data fields from",
    "start": "1143799",
    "end": "1145960"
  },
  {
    "text": "that fiber",
    "start": "1145960",
    "end": "1147200"
  },
  {
    "text": "object so what this did is kind of it",
    "start": "1147200",
    "end": "1149679"
  },
  {
    "text": "gave me enough Clues um to go and build",
    "start": "1149679",
    "end": "1152360"
  },
  {
    "text": "my own remote enumeration vot uh version",
    "start": "1152360",
    "end": "1154799"
  },
  {
    "text": "that I could then point to fiber objects",
    "start": "1154799",
    "end": "1156600"
  },
  {
    "text": "that I'd found on the Heap and then I",
    "start": "1156600",
    "end": "1158480"
  },
  {
    "text": "could enumerate through every possible",
    "start": "1158480",
    "end": "1160240"
  },
  {
    "text": "index and provide some validation on the",
    "start": "1160240",
    "end": "1163400"
  },
  {
    "text": "output that I was receiving to determine",
    "start": "1163400",
    "end": "1166280"
  },
  {
    "text": "the number of index in indexes that are",
    "start": "1166280",
    "end": "1168960"
  },
  {
    "text": "in",
    "start": "1168960",
    "end": "1170159"
  },
  {
    "text": "use so after step three what can we",
    "start": "1170159",
    "end": "1173360"
  },
  {
    "text": "locate well we can locate the currently",
    "start": "1173360",
    "end": "1175320"
  },
  {
    "text": "executing fibers the dormant fibers we",
    "start": "1175320",
    "end": "1177880"
  },
  {
    "text": "can associate them with the correct",
    "start": "1177880",
    "end": "1178919"
  },
  {
    "text": "thread ID we've got the fiber local",
    "start": "1178919",
    "end": "1180640"
  },
  {
    "text": "storage indexes which slots are occupied",
    "start": "1180640",
    "end": "1184679"
  },
  {
    "text": "um and the final thing we need to go and",
    "start": "1184679",
    "end": "1187679"
  },
  {
    "text": "grab is that callback",
    "start": "1187679",
    "end": "1190640"
  },
  {
    "text": "information so that additional entry in",
    "start": "1190640",
    "end": "1193799"
  },
  {
    "text": "the W link list from earlier points to",
    "start": "1193799",
    "end": "1195760"
  },
  {
    "text": "this undocumented fls context structure",
    "start": "1195760",
    "end": "1198240"
  },
  {
    "text": "of size 60 bytes um and inside this in",
    "start": "1198240",
    "end": "1202919"
  },
  {
    "text": "an array of pointers and one of which",
    "start": "1202919",
    "end": "1205880"
  },
  {
    "text": "actually points to a valid heat block",
    "start": "1205880",
    "end": "1207520"
  },
  {
    "text": "entry that contains the Callback table",
    "start": "1207520",
    "end": "1210320"
  },
  {
    "text": "so I dump this from memory to work out",
    "start": "1210320",
    "end": "1211919"
  },
  {
    "text": "the structure the Callback table is",
    "start": "1211919",
    "end": "1213720"
  },
  {
    "text": "actually dynamically defined um based on",
    "start": "1213720",
    "end": "1216600"
  },
  {
    "text": "its size um which is highlighted in",
    "start": "1216600",
    "end": "1219240"
  },
  {
    "text": "yellow and it's the first field and",
    "start": "1219240",
    "end": "1220640"
  },
  {
    "text": "that's the number of fi local storage",
    "start": "1220640",
    "end": "1222200"
  },
  {
    "text": "indexes that're in use um indexes 1 3",
    "start": "1222200",
    "end": "1226440"
  },
  {
    "text": "and four highlighted in green are",
    "start": "1226440",
    "end": "1227880"
  },
  {
    "text": "actually responsible for the tear down",
    "start": "1227880",
    "end": "1231880"
  },
  {
    "text": "of fiber storage um so they're like a",
    "start": "1231880",
    "end": "1234159"
  },
  {
    "text": "standard set of callbacks anything",
    "start": "1234159",
    "end": "1236480"
  },
  {
    "text": "beyond this are user defined ones such",
    "start": "1236480",
    "end": "1239280"
  },
  {
    "text": "as those um which I demonstrated earlier",
    "start": "1239280",
    "end": "1242159"
  },
  {
    "text": "from the fls aloc",
    "start": "1242159",
    "end": "1244400"
  },
  {
    "text": "function so discovering basically how",
    "start": "1244400",
    "end": "1246960"
  },
  {
    "text": "this is structured and how it works",
    "start": "1246960",
    "end": "1248919"
  },
  {
    "text": "allow me to remotely enumerate all the",
    "start": "1248919",
    "end": "1251400"
  },
  {
    "text": "callbacks present and also because we've",
    "start": "1251400",
    "end": "1253280"
  },
  {
    "text": "got that slot data any parameters",
    "start": "1253280",
    "end": "1255120"
  },
  {
    "text": "provided to",
    "start": "1255120",
    "end": "1257120"
  },
  {
    "text": "them",
    "start": "1257120",
    "end": "1258640"
  },
  {
    "text": "so for the sake of completeness um look",
    "start": "1258640",
    "end": "1261240"
  },
  {
    "text": "we've achieved those goals we've got our",
    "start": "1261240",
    "end": "1265640"
  },
  {
    "text": "fibers um we've got our dormant fibers",
    "start": "1265640",
    "end": "1268960"
  },
  {
    "text": "we've got our fiber local storage all",
    "start": "1268960",
    "end": "1271200"
  },
  {
    "text": "the indexes um and then we've got the",
    "start": "1271200",
    "end": "1273400"
  },
  {
    "text": "correct thread IDs and we can match them",
    "start": "1273400",
    "end": "1275080"
  },
  {
    "text": "up all",
    "start": "1275080",
    "end": "1276559"
  },
  {
    "text": "together so now we've built this raw",
    "start": "1276559",
    "end": "1278559"
  },
  {
    "text": "Telemetry we can apply a set of",
    "start": "1278559",
    "end": "1280600"
  },
  {
    "text": "enrichments much like we would do with",
    "start": "1280600",
    "end": "1283159"
  },
  {
    "text": "suspicious threads so for fiber data and",
    "start": "1283159",
    "end": "1286320"
  },
  {
    "text": "fiber local storage we'd look at the m",
    "start": "1286320",
    "end": "1288520"
  },
  {
    "text": "page protections uh the location and",
    "start": "1288520",
    "end": "1290600"
  },
  {
    "text": "size of that data um and then also",
    "start": "1290600",
    "end": "1293000"
  },
  {
    "text": "generate some entry scores to see if",
    "start": "1293000",
    "end": "1294880"
  },
  {
    "text": "it's encrypt encrypted or compressed and",
    "start": "1294880",
    "end": "1298159"
  },
  {
    "text": "then for the fiber callbacks we can look",
    "start": "1298159",
    "end": "1299799"
  },
  {
    "text": "to resolve the module of which the",
    "start": "1299799",
    "end": "1301240"
  },
  {
    "text": "callbacks are located in and then also",
    "start": "1301240",
    "end": "1304799"
  },
  {
    "text": "um the parameter data provided to them",
    "start": "1304799",
    "end": "1306960"
  },
  {
    "text": "and then providing that we have got",
    "start": "1306960",
    "end": "1309679"
  },
  {
    "text": "contact with Microsoft symbol server we",
    "start": "1309679",
    "end": "1311960"
  },
  {
    "text": "can then resolve the function name um",
    "start": "1311960",
    "end": "1315080"
  },
  {
    "text": "and then we can start generating rules",
    "start": "1315080",
    "end": "1317240"
  },
  {
    "text": "such as some of the things I put down",
    "start": "1317240",
    "end": "1319279"
  },
  {
    "text": "was fiber data executing from unback",
    "start": "1319279",
    "end": "1321400"
  },
  {
    "text": "memory um or encoded encrypted fiber",
    "start": "1321400",
    "end": "1324120"
  },
  {
    "text": "data callbacks to strange locations or",
    "start": "1324120",
    "end": "1327400"
  },
  {
    "text": "callbacks to apis known to be used by",
    "start": "1327400",
    "end": "1329200"
  },
  {
    "text": "malware or the even some s anomaly based",
    "start": "1329200",
    "end": "1332919"
  },
  {
    "text": "rules so the absence of certain fields",
    "start": "1332919",
    "end": "1334919"
  },
  {
    "text": "that we know should be there uh threads",
    "start": "1334919",
    "end": "1337279"
  },
  {
    "text": "only using one fiber or the absence of",
    "start": "1337279",
    "end": "1339720"
  },
  {
    "text": "standard callback functions so I",
    "start": "1339720",
    "end": "1342039"
  },
  {
    "text": "combined all this research together into",
    "start": "1342039",
    "end": "1344320"
  },
  {
    "text": "a tool that I built uh called Weetabix",
    "start": "1344320",
    "end": "1346799"
  },
  {
    "text": "um It's actually an English breakfast",
    "start": "1346799",
    "end": "1348600"
  },
  {
    "text": "cereal full of fiber hence the name um",
    "start": "1348600",
    "end": "1352360"
  },
  {
    "text": "and what it does it does all that remote",
    "start": "1352360",
    "end": "1353720"
  },
  {
    "text": "enumeration for you and enriches it um",
    "start": "1353720",
    "end": "1356640"
  },
  {
    "text": "pops it out into a nice little Json",
    "start": "1356640",
    "end": "1358480"
  },
  {
    "text": "which you can ingest into uh I don't",
    "start": "1358480",
    "end": "1361480"
  },
  {
    "text": "know Splunk or elastic or whatever",
    "start": "1361480",
    "end": "1362960"
  },
  {
    "text": "you're",
    "start": "1362960",
    "end": "1364039"
  },
  {
    "text": "using so why build this capability well",
    "start": "1364039",
    "end": "1367279"
  },
  {
    "text": "we're starting to see C2 Frameworks",
    "start": "1367279",
    "end": "1369480"
  },
  {
    "text": "adopt the use of fibers to evade",
    "start": "1369480",
    "end": "1372880"
  },
  {
    "text": "traditional detections and also to",
    "start": "1372880",
    "end": "1375240"
  },
  {
    "text": "facilitate other offensive techniques so",
    "start": "1375240",
    "end": "1377960"
  },
  {
    "text": "so for instance Cobalt strike everybody",
    "start": "1377960",
    "end": "1379880"
  },
  {
    "text": "here is probably aware of cobalt strike",
    "start": "1379880",
    "end": "1382000"
  },
  {
    "text": "the de facto commercial C2 framework",
    "start": "1382000",
    "end": "1384720"
  },
  {
    "text": "that a lot of red teams use um anyway",
    "start": "1384720",
    "end": "1387440"
  },
  {
    "text": "last year they implemented thread stack",
    "start": "1387440",
    "end": "1389960"
  },
  {
    "text": "spoofing um in their artifact kit and to",
    "start": "1389960",
    "end": "1393200"
  },
  {
    "text": "do this um they leverage fibers um and",
    "start": "1393200",
    "end": "1397120"
  },
  {
    "text": "thread stack spoofing is is when you",
    "start": "1397120",
    "end": "1398679"
  },
  {
    "text": "manipulate the stack data with a fake",
    "start": "1398679",
    "end": "1400200"
  },
  {
    "text": "core stack um and then that is used to",
    "start": "1400200",
    "end": "1402600"
  },
  {
    "text": "evade traditional",
    "start": "1402600",
    "end": "1404000"
  },
  {
    "text": "signatures but this unorthodox way of",
    "start": "1404000",
    "end": "1406880"
  },
  {
    "text": "using fibers actually looks markedly",
    "start": "1406880",
    "end": "1409520"
  },
  {
    "text": "different in memory so I ran weix",
    "start": "1409520",
    "end": "1412240"
  },
  {
    "text": "against a victim machine with an",
    "start": "1412240",
    "end": "1414120"
  },
  {
    "text": "executed Cobalt strike Beacon and um",
    "start": "1414120",
    "end": "1417720"
  },
  {
    "text": "with the thread stack spoofing turned on",
    "start": "1417720",
    "end": "1419120"
  },
  {
    "text": "and it actually gave me some pretty",
    "start": "1419120",
    "end": "1420080"
  },
  {
    "text": "interesting results so it shows threads",
    "start": "1420080",
    "end": "1424600"
  },
  {
    "text": "a thread only using a single fiber why",
    "start": "1424600",
    "end": "1426840"
  },
  {
    "text": "use a single fiber when you can achieve",
    "start": "1426840",
    "end": "1428640"
  },
  {
    "text": "the same thing with a thread um there's",
    "start": "1428640",
    "end": "1431360"
  },
  {
    "text": "no need to get a fiber involved um and",
    "start": "1431360",
    "end": "1434799"
  },
  {
    "text": "then one fiber data um of this fiber was",
    "start": "1434799",
    "end": "1437640"
  },
  {
    "text": "pointing some unbacked region of memory",
    "start": "1437640",
    "end": "1439720"
  },
  {
    "text": "two there was no fiber local storage",
    "start": "1439720",
    "end": "1441200"
  },
  {
    "text": "slots and three uh there's no callbacks",
    "start": "1441200",
    "end": "1443080"
  },
  {
    "text": "no like standard callback functions you",
    "start": "1443080",
    "end": "1444559"
  },
  {
    "text": "might expect um so now we've got this",
    "start": "1444559",
    "end": "1446840"
  },
  {
    "text": "Telemetry is really easy to write rules",
    "start": "1446840",
    "end": "1448600"
  },
  {
    "text": "for it it's it's quite",
    "start": "1448600",
    "end": "1450159"
  },
  {
    "text": "trivial so here's another example um",
    "start": "1450159",
    "end": "1453480"
  },
  {
    "text": "where I test it against a malicious",
    "start": "1453480",
    "end": "1454799"
  },
  {
    "text": "callback technique from earlier um so we",
    "start": "1454799",
    "end": "1457320"
  },
  {
    "text": "toix finds two suspicious callbacks uh",
    "start": "1457320",
    "end": "1460240"
  },
  {
    "text": "the first is a call back to a module in",
    "start": "1460240",
    "end": "1463000"
  },
  {
    "text": "the downloads directory um that looks",
    "start": "1463000",
    "end": "1465440"
  },
  {
    "text": "really sketchy um and then two a call",
    "start": "1465440",
    "end": "1468039"
  },
  {
    "text": "back to unbacked read",
    "start": "1468039",
    "end": "1470840"
  },
  {
    "text": "executable uh read write executable page",
    "start": "1470840",
    "end": "1474600"
  },
  {
    "text": "permissions um both very trivial to",
    "start": "1474600",
    "end": "1476720"
  },
  {
    "text": "write rules",
    "start": "1476720",
    "end": "1478559"
  },
  {
    "text": "for so can we go further um yes we can",
    "start": "1478559",
    "end": "1483399"
  },
  {
    "text": "so the great thing about fibers is that",
    "start": "1483399",
    "end": "1485120"
  },
  {
    "text": "they're relatively uncommon which we",
    "start": "1485120",
    "end": "1487520"
  },
  {
    "text": "don't bring back an awful lot of",
    "start": "1487520",
    "end": "1489559"
  },
  {
    "text": "telemetry which is good because it means",
    "start": "1489559",
    "end": "1492799"
  },
  {
    "text": "that we can be really aggressive with",
    "start": "1492799",
    "end": "1494159"
  },
  {
    "text": "the rules that we write um and not have",
    "start": "1494159",
    "end": "1496480"
  },
  {
    "text": "to worry about the implication of too",
    "start": "1496480",
    "end": "1498760"
  },
  {
    "text": "much processing and we can also tack on",
    "start": "1498760",
    "end": "1501480"
  },
  {
    "text": "other things like postprocessing",
    "start": "1501480",
    "end": "1502880"
  },
  {
    "text": "capabilities based on the Telemetry so",
    "start": "1502880",
    "end": "1505200"
  },
  {
    "text": "we have from our fiber object the um",
    "start": "1505200",
    "end": "1509159"
  },
  {
    "text": "stack information so we can rebuild",
    "start": "1509159",
    "end": "1510880"
  },
  {
    "text": "those cool stacks and give us more",
    "start": "1510880",
    "end": "1512840"
  },
  {
    "text": "metadata based on those detections",
    "start": "1512840",
    "end": "1516080"
  },
  {
    "text": "and because there's actually less data",
    "start": "1516080",
    "end": "1519559"
  },
  {
    "text": "um it also means that it's harder to",
    "start": "1519559",
    "end": "1521919"
  },
  {
    "text": "establish the norm so I guess if",
    "start": "1521919",
    "end": "1523840"
  },
  {
    "text": "anyone's actually using fibers out there",
    "start": "1523840",
    "end": "1526240"
  },
  {
    "text": "legitimately please come and talk to me",
    "start": "1526240",
    "end": "1527960"
  },
  {
    "text": "because I'd like to establish those edge",
    "start": "1527960",
    "end": "1530279"
  },
  {
    "text": "cases so key takeaways one attackers are",
    "start": "1530279",
    "end": "1534640"
  },
  {
    "text": "sometimes going to find and leverage new",
    "start": "1534640",
    "end": "1536919"
  },
  {
    "text": "and obscure ways to circumvent",
    "start": "1536919",
    "end": "1538840"
  },
  {
    "text": "traditional Telemetry sources and this",
    "start": "1538840",
    "end": "1540919"
  },
  {
    "text": "increases their likelihood that they",
    "start": "1540919",
    "end": "1542799"
  },
  {
    "text": "remain undetected by Blue",
    "start": "1542799",
    "end": "1544679"
  },
  {
    "text": "teams two if there's no Telemetry then",
    "start": "1544679",
    "end": "1548600"
  },
  {
    "text": "there's no data there's no evidence and",
    "start": "1548600",
    "end": "1551080"
  },
  {
    "text": "there's no detections to be had so",
    "start": "1551080",
    "end": "1552840"
  },
  {
    "text": "investing in mpoint research is vital",
    "start": "1552840",
    "end": "1555880"
  },
  {
    "text": "for edrs to remain relevant and",
    "start": "1555880",
    "end": "1559279"
  },
  {
    "text": "effective and three providing a problem",
    "start": "1559279",
    "end": "1562520"
  },
  {
    "text": "has been understood to sufficient depth",
    "start": "1562520",
    "end": "1565720"
  },
  {
    "text": "we can produce our own novel Telemetry",
    "start": "1565720",
    "end": "1568159"
  },
  {
    "text": "rather than piggybacking on existing",
    "start": "1568159",
    "end": "1570360"
  },
  {
    "text": "sources and this can be incredibly",
    "start": "1570360",
    "end": "1572679"
  },
  {
    "text": "valuable because it only contains the",
    "start": "1572679",
    "end": "1574480"
  },
  {
    "text": "information and the events that we care",
    "start": "1574480",
    "end": "1576480"
  },
  {
    "text": "about which actually makes writing",
    "start": "1576480",
    "end": "1578799"
  },
  {
    "text": "detections much simpler for threat",
    "start": "1578799",
    "end": "1581279"
  },
  {
    "text": "hunters and it also puts less pressure",
    "start": "1581279",
    "end": "1583520"
  },
  {
    "text": "on rules engines backend teams and",
    "start": "1583520",
    "end": "1586440"
  },
  {
    "text": "ultimately hosting costs",
    "start": "1586440",
    "end": "1589320"
  },
  {
    "text": "so some of the resources that I found",
    "start": "1589320",
    "end": "1591000"
  },
  {
    "text": "helpful along the way Jeff chapelle's",
    "start": "1591000",
    "end": "1592679"
  },
  {
    "text": "documentation of some of the windows",
    "start": "1592679",
    "end": "1594520"
  },
  {
    "text": "structures um react OS actually had an",
    "start": "1594520",
    "end": "1597480"
  },
  {
    "text": "older implementation pre 1903 Bill to",
    "start": "1597480",
    "end": "1600399"
  },
  {
    "text": "fibers which was somewhat helpful",
    "start": "1600399",
    "end": "1603080"
  },
  {
    "text": "somewhat confusing especially to start",
    "start": "1603080",
    "end": "1604880"
  },
  {
    "text": "with um and then also an ex- colleague",
    "start": "1604880",
    "end": "1608520"
  },
  {
    "text": "and general good guy will Burgess um he",
    "start": "1608520",
    "end": "1611640"
  },
  {
    "text": "was the one that kind of pushed me into",
    "start": "1611640",
    "end": "1613000"
  },
  {
    "text": "look into fibers in the first place by",
    "start": "1613000",
    "end": "1614760"
  },
  {
    "text": "saying Dan what exactly are fibers how",
    "start": "1614760",
    "end": "1616440"
  },
  {
    "text": "do they work so yeah thanks to",
    "start": "1616440",
    "end": "1619080"
  },
  {
    "text": "Will and yeah thank you very much thanks",
    "start": "1619080",
    "end": "1621240"
  },
  {
    "text": "for coming out and listening to my talk",
    "start": "1621240",
    "end": "1622480"
  },
  {
    "text": "appreciate",
    "start": "1622480",
    "end": "1623330"
  },
  {
    "text": "[Applause]",
    "start": "1623330",
    "end": "1628360"
  },
  {
    "text": "it",
    "start": "1628360",
    "end": "1631360"
  }
]